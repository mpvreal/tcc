; ModuleID = 'sv.c'
source_filename = "sv.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.body_details = type { i8, i8, i8, i8, i32 }
%struct.sv = type { ptr, i32, i32, %union.anon.0 }
%union.anon.0 = type { ptr }
%struct.mgvtbl = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.cop = type { ptr, ptr, ptr, i64, i16, i8, i8, i32, ptr, ptr, i32, i32, ptr, ptr }
%struct.padname = type { ptr, ptr, %union.anon.25, i32, i32, i32, i32, i8, i8 }
%union.anon.25 = type { ptr }
%struct.gp = type { ptr, ptr, ptr, i32, i32, ptr, ptr, ptr, ptr, i32, ptr }
%struct.gv = type { ptr, i32, i32, %union.anon }
%union.anon = type { ptr }
%struct.arena_set = type { ptr, i32, i32, [169 x %struct.arena_desc] }
%struct.arena_desc = type { ptr, i64, i32 }
%struct.xpvlv = type { ptr, %union._xmgu, i64, %union.anon.21, %union._xivu, %union._xnvu, %union.anon.22, i64, ptr, i8, i8 }
%union._xmgu = type { ptr }
%union.anon.21 = type { i64 }
%union._xivu = type { i64 }
%union._xnvu = type { double }
%union.anon.22 = type { i64 }
%struct.xpvav = type { ptr, %union._xmgu, i64, i64, ptr }
%struct.xpvhv = type { ptr, %union._xmgu, i64, i64 }
%struct.xpvmg = type { ptr, %union._xmgu, i64, %union.anon.3, %union._xivu, %union._xnvu }
%union.anon.3 = type { i64 }
%struct.xpvio = type { ptr, %union._xmgu, i64, %union.anon.5, %union._xivu, ptr, %union.anon.6, i64, i64, i64, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8 }
%union.anon.5 = type { i64 }
%union.anon.6 = type { ptr }
%struct.xpv = type { ptr, %union._xmgu, i64, %union.anon.7 }
%union.anon.7 = type { i64 }
%struct.xpvgv = type { ptr, %union._xmgu, i64, %union.anon.12, %union._xivu, %union._xnvu }
%union.anon.12 = type { i64 }
%struct.hv = type { ptr, i32, i32, %union.anon.9 }
%union.anon.9 = type { ptr }
%struct.xpvhv_aux = type { %union._xhvnameu, ptr, ptr, i32, i32, ptr, i32, i32, i32, i32 }
%union._xhvnameu = type { ptr }
%struct.regexp = type { ptr, %union._xmgu, i64, %union.anon.10, ptr, ptr, ptr, i32, i64, i64, i64, ptr, i32, i32, ptr, i32, i32, ptr, ptr, ptr, i64, i64, i64, i64, i16, ptr }
%union.anon.10 = type { i64 }
%struct.op = type { ptr, ptr, ptr, i64, i16, i8, i8 }
%struct.xpviv = type { ptr, %union._xmgu, i64, %union.anon.1, %union._xivu }
%union.anon.1 = type { i64 }
%struct.magic = type { ptr, ptr, i16, i8, i8, i64, ptr, ptr }
%struct.xpvuv = type { ptr, %union._xmgu, i64, %union.anon.8, %union._xivu }
%union.anon.8 = type { i64 }
%struct.xpvnv = type { ptr, %union._xmgu, i64, %union.anon.2, %union._xivu, %union._xnvu }
%union.anon.2 = type { i64 }
%struct.hek = type { i32, i32, [1 x i8] }
%struct.xpvcv = type { ptr, %union._xmgu, i64, %union.anon.14, ptr, %union.anon.15, %union.anon.16, %union.anon.17, ptr, %union.anon.18, ptr, i32, i32, i32 }
%union.anon.14 = type { i64 }
%union.anon.15 = type { ptr }
%union.anon.16 = type { ptr }
%union.anon.17 = type { ptr }
%union.anon.18 = type { ptr }
%struct.stackinfo = type { ptr, ptr, ptr, ptr, i32, i32, i32, i32 }
%struct.av = type { ptr, i32, i32, %union.anon.19 }
%union.anon.19 = type { ptr }
%union.any = type { ptr }
%struct.__va_list_tag = type { i32, i32, ptr, ptr }
%struct.cv = type { ptr, i32, i32, %union.anon.13 }
%union.anon.13 = type { ptr }
%struct.he = type { ptr, ptr, %union.anon.20 }
%union.anon.20 = type { ptr }
%struct.mro_meta = type { ptr, ptr, ptr, i32, i32, ptr, ptr, ptr, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.pmop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr, ptr, i32, %union.anon.23, %union.anon.24, ptr }
%union.anon.23 = type { ptr }
%union.anon.24 = type { ptr }
%struct.ptr_tbl = type { ptr, i64, i64, ptr, ptr, ptr }
%struct.ptr_tbl_ent = type { ptr, ptr, ptr }
%struct.ptr_tbl_arena = type { ptr, [341 x %struct.ptr_tbl_ent] }
%struct.padlist = type { i64, ptr, i32, i32 }
%struct.binop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr }
%struct.unop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr }
%struct.svop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr }
%struct.unop_aux = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr }
%union.UNOP_AUX_item = type { i64 }

@PL_in_clean_objs = external local_unnamed_addr global i8, align 1
@PL_defoutgv = external local_unnamed_addr global ptr, align 8
@PL_stderrgv = external local_unnamed_addr global ptr, align 8
@PL_in_clean_all = external local_unnamed_addr global i8, align 1
@PL_sv_arenaroot = external local_unnamed_addr global ptr, align 8
@PL_body_arenas = external local_unnamed_addr global ptr, align 8
@PL_body_roots = external local_unnamed_addr global [16 x ptr], align 16
@PL_sv_root = external local_unnamed_addr global ptr, align 8
@bodies_by_type = internal unnamed_addr constant [16 x %struct.body_details] [%struct.body_details { i8 0, i8 0, i8 0, i8 32, i32 0 }, %struct.body_details { i8 0, i8 8, i8 32, i8 33, i32 0 }, %struct.body_details { i8 0, i8 8, i8 40, i8 2, i32 0 }, %struct.body_details { i8 16, i8 16, i8 16, i8 99, i32 3536 }, %struct.body_details { i8 40, i8 33, i8 16, i8 116, i32 3120 }, %struct.body_details { i8 24, i8 24, i8 16, i8 101, i32 3424 }, %struct.body_details { i8 32, i8 32, i8 16, i8 70, i32 3296 }, %struct.body_details { i8 48, i8 48, i8 0, i8 71, i32 4080 }, %struct.body_details { i8 -64, i8 -64, i8 0, i8 120, i32 4032 }, %struct.body_details { i8 48, i8 48, i8 0, i8 89, i32 4080 }, %struct.body_details { i8 80, i8 80, i8 0, i8 90, i32 4080 }, %struct.body_details { i8 40, i8 40, i8 0, i8 123, i32 4080 }, %struct.body_details { i8 32, i8 32, i8 0, i8 124, i32 4064 }, %struct.body_details { i8 104, i8 104, i8 0, i8 125, i32 4056 }, %struct.body_details { i8 104, i8 104, i8 0, i8 62, i32 2080 }, %struct.body_details { i8 -120, i8 -120, i8 0, i8 127, i32 3264 }], align 16
@fake_rv = internal unnamed_addr constant %struct.body_details { i8 0, i8 0, i8 0, i8 33, i32 0 }, align 4
@.str = private unnamed_addr constant [30 x i8] c"Can't upgrade %s (%lu) to %lu\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"sv_upgrade from type %d down to type %d\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"IO::File::\00", align 1
@PL_stashcache = external local_unnamed_addr global ptr, align 8
@.str.3 = private unnamed_addr constant [38 x i8] c"panic: sv_upgrade to unknown type %lu\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"Can't coerce %s to integer in %s\00", align 1
@PL_op = external local_unnamed_addr global ptr, align 8
@PL_op_desc = external local_unnamed_addr constant [0 x ptr], align 8
@PL_tainting = external local_unnamed_addr global i8, align 1
@PL_tainted = external local_unnamed_addr global i8, align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"Can't coerce %s to number in %s\00", align 1
@PL_sv_undef = external global %struct.sv, align 8
@PL_localizing = external local_unnamed_addr global i8, align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"NULLREF\00", align 1
@PL_curcop = external local_unnamed_addr global ptr, align 8
@.str.7 = private unnamed_addr constant [9 x i8] c"__ANON__\00", align 1
@PL_hexdigit = external local_unnamed_addr constant [0 x i8], align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"%.*g\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@PL_encoding = external local_unnamed_addr global ptr, align 8
@PL_lex_encoding = external local_unnamed_addr global ptr, align 8
@.str.11 = private unnamed_addr constant [21 x i8] c"Wide character in %s\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"Wide character\00", align 1
@PL_savestack_ix = external local_unnamed_addr global i32, align 4
@PL_savestack = external local_unnamed_addr global ptr, align 8
@PL_savestack_max = external local_unnamed_addr global i32, align 4
@.str.13 = private unnamed_addr constant [9 x i8] c"%2p::%2p\00", align 1
@PL_sub_generation = external local_unnamed_addr global i32, align 4
@.str.14 = private unnamed_addr constant [4 x i8] c"ISA\00", align 1
@.str.15 = private unnamed_addr constant [54 x i8] c"panic: attempt to copy value %-p to a freed scalar %p\00", align 1
@.str.16 = private unnamed_addr constant [45 x i8] c"panic: attempt to copy freed scalar %p to %p\00", align 1
@.str.17 = private unnamed_addr constant [25 x i8] c"Bizarre copy of %s in %s\00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"Bizarre copy of %s\00", align 1
@.str.19 = private unnamed_addr constant [24 x i8] c"Cannot copy to %s in %s\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c"Cannot copy to %s\00", align 1
@.str.21 = private unnamed_addr constant [37 x i8] c"Undefined value assigned to typeglob\00", align 1
@PL_sv_count = external local_unnamed_addr global i64, align 8
@.str.22 = private unnamed_addr constant [49 x i8] c"panic: sv_setpvn called with negative strlen %ld\00", align 1
@.str.23 = private unnamed_addr constant [40 x i8] c"panic: sv_chop ptr=%p, start=%p, end=%p\00", align 1
@PL_magic_vtables = external constant [31 x %struct.mgvtbl], align 16
@PL_magic_data = external local_unnamed_addr constant [256 x i8], align 16
@.str.24 = private unnamed_addr constant [43 x i8] c"Don't know how to handle magic of type \\%o\00", align 1
@.str.25 = private unnamed_addr constant [28 x i8] c"Can't weaken a nonreference\00", align 1
@.str.26 = private unnamed_addr constant [26 x i8] c"Reference is already weak\00", align 1
@PL_phase = external local_unnamed_addr global i32, align 4
@.str.27 = private unnamed_addr constant [26 x i8] c"panic: del_backref, svp=0\00", align 1
@.str.28 = private unnamed_addr constant [48 x i8] c"panic: del_backref, *svp=%p phase=%s refcnt=%lu\00", align 1
@PL_phase_names = external local_unnamed_addr constant [0 x ptr], align 8
@.str.29 = private unnamed_addr constant [35 x i8] c"panic: del_backref, *svp=%p, sv=%p\00", align 1
@.str.30 = private unnamed_addr constant [48 x i8] c"panic: magic_killbackrefs (freed backref AV/SV)\00", align 1
@.str.31 = private unnamed_addr constant [38 x i8] c"panic: magic_killbackrefs (flags=%lx)\00", align 1
@.str.32 = private unnamed_addr constant [39 x i8] c"panic: sv_insert, midend=%p, bigend=%p\00", align 1
@.str.33 = private unnamed_addr constant [60 x i8] c"panic: reference miscount on nsv in sv_replace() (%lu != 1)\00", align 1
@PL_statgv = external local_unnamed_addr global ptr, align 8
@PL_last_swash_hv = external local_unnamed_addr global ptr, align 8
@PL_comppad = external local_unnamed_addr global ptr, align 8
@PL_curpad = external local_unnamed_addr global ptr, align 8
@PL_hv_fetch_ent_mh = external local_unnamed_addr global ptr, align 8
@PL_last_in_gv = external local_unnamed_addr global ptr, align 8
@PL_sv_yes = external global %struct.sv, align 8
@PL_sv_no = external global %struct.sv, align 8
@PL_sv_placeholder = external global %struct.sv, align 8
@.str.34 = private unnamed_addr constant [46 x i8] c"Attempt to free unreferenced scalar: SV 0x%lx\00", align 1
@PL_utf8cache = external global i8, align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"sv_len_utf8\00", align 1
@.str.36 = private unnamed_addr constant [55 x i8] c"panic: sv_pos_b2u: bad byte offset, blen=%lu, byte=%lu\00", align 1
@.str.37 = private unnamed_addr constant [11 x i8] c"sv_pos_b2u\00", align 1
@PL_compiling = external global %struct.cop, align 8
@.str.38 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@PL_rs = external local_unnamed_addr global ptr, align 8
@.str.39 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@.str.40 = private unnamed_addr constant [21 x i8] c"Wide character in $/\00", align 1
@.str.41 = private unnamed_addr constant [41 x i8] c"Lost precision when incrementing %f by 1\00", align 1
@PL_charclass = external local_unnamed_addr constant [0 x i32], align 4
@.str.42 = private unnamed_addr constant [41 x i8] c"Lost precision when decrementing %f by 1\00", align 1
@PL_tmps_ix = external local_unnamed_addr global i64, align 8
@PL_tmps_max = external local_unnamed_addr global i64, align 8
@PL_tmps_stack = external local_unnamed_addr global ptr, align 8
@.str.44 = private unnamed_addr constant [40 x i8] c"semi-panic: attempt to dup freed string\00", align 1
@.str.45 = private unnamed_addr constant [20 x i8] c"Bad filehandle: %2p\00", align 1
@PL_no_usym = external constant [0 x i8], align 1
@.str.46 = private unnamed_addr constant [11 x i8] c"filehandle\00", align 1
@.str.47 = private unnamed_addr constant [20 x i8] c"Bad filehandle: %-p\00", align 1
@.str.48 = private unnamed_addr constant [27 x i8] c"Not a subroutine reference\00", align 1
@.str.49 = private unnamed_addr constant [32 x i8] c"Can't coerce %s to string in %s\00", align 1
@.str.50 = private unnamed_addr constant [8 x i8] c"VSTRING\00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"REF\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"SCALAR\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"LVALUE\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"ARRAY\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"HASH\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"CODE\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"GLOB\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"FORMAT\00", align 1
@.str.59 = private unnamed_addr constant [3 x i8] c"IO\00", align 1
@.str.60 = private unnamed_addr constant [8 x i8] c"INVLIST\00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c"REGEXP\00", align 1
@.str.62 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.63 = private unnamed_addr constant [32 x i8] c"Can't bless non-reference value\00", align 1
@Perl_sv_vcatpvfn_flags.nullstr = internal constant [7 x i8] c"(null)\00", align 1
@.str.64 = private unnamed_addr constant [25 x i8] c"Redundant argument in %s\00", align 1
@.str.65 = private unnamed_addr constant [14 x i8] c"sv_vcatpvfn()\00", align 1
@.str.66 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"d%lu%4p\00", align 1
@.str.68 = private unnamed_addr constant [63 x i8] c"internal %%<num>p might conflict with future printf extensions\00", align 1
@PL_Sv = external local_unnamed_addr global ptr, align 8
@.str.69 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"alpha\00", align 1
@.str.71 = private unnamed_addr constant [50 x i8] c"vector argument not supported with alpha versions\00", align 1
@.str.72 = private unnamed_addr constant [14 x i8] c"BbcDdiOopuUXx\00", align 1
@.str.73 = private unnamed_addr constant [27 x i8] c"Cannot printf %g with '%c'\00", align 1
@.str.74 = private unnamed_addr constant [18 x i8] c"panic: frexp: %Lg\00", align 1
@PL_efloatsize = external local_unnamed_addr global i64, align 8
@PL_efloatbuf = external local_unnamed_addr global ptr, align 8
@.str.75 = private unnamed_addr constant [6 x i8] c"%c%+d\00", align 1
@.str.76 = private unnamed_addr constant [33 x i8] c"Invalid conversion in %sprintf: \00", align 1
@.str.77 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.78 = private unnamed_addr constant [3 x i8] c"\22%\00", align 1
@.str.79 = private unnamed_addr constant [7 x i8] c"\\%03lo\00", align 1
@.str.80 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.81 = private unnamed_addr constant [14 x i8] c"end of string\00", align 1
@.str.82 = private unnamed_addr constant [4 x i8] c"%-p\00", align 1
@PL_No = external constant [0 x i8], align 1
@PL_Yes = external constant [0 x i8], align 1
@PL_padname_const = external local_unnamed_addr global %struct.padname, align 8
@PL_stack_sp = external local_unnamed_addr global ptr, align 8
@PL_curstackinfo = external local_unnamed_addr global ptr, align 8
@PL_stack_base = external local_unnamed_addr global ptr, align 8
@PL_curstack = external local_unnamed_addr global ptr, align 8
@PL_stack_max = external local_unnamed_addr global ptr, align 8
@PL_tmps_floor = external global i64, align 8
@PL_markstack_ptr = external local_unnamed_addr global ptr, align 8
@PL_markstack_max = external local_unnamed_addr global ptr, align 8
@.str.83 = private unnamed_addr constant [7 x i8] c"decode\00", align 1
@.str.84 = private unnamed_addr constant [11 x i8] c"cat_decode\00", align 1
@.str.85 = private unnamed_addr constant [34 x i8] c"Invalid argument to sv_cat_decode\00", align 1
@.str.86 = private unnamed_addr constant [5 x i8] c"{%s}\00", align 1
@.str.87 = private unnamed_addr constant [6 x i8] c"[%ld]\00", align 1
@.str.88 = private unnamed_addr constant [8 x i8] c"within \00", align 1
@.str.89 = private unnamed_addr constant [15 x i8] c"join or string\00", align 1
@.str.90 = private unnamed_addr constant [2 x i8] c" \00", align 1
@PL_warn_uninit_sv = external constant [0 x i8], align 1
@.str.91 = private unnamed_addr constant [5 x i8] c" in \00", align 1
@PL_warn_uninit = external constant [0 x i8], align 1
@PL_fdpid = external local_unnamed_addr global ptr, align 8
@PL_strtab = external local_unnamed_addr global ptr, align 8
@.str.92 = private unnamed_addr constant [34 x i8] c"Argument \22%s\22 isn't numeric in %s\00", align 1
@.str.93 = private unnamed_addr constant [28 x i8] c"Argument \22%s\22 isn't numeric\00", align 1
@.str.94 = private unnamed_addr constant [107 x i8] c"sv_2iv assumed (U_V(fabs((double)SvNVX(sv))) < (UV)IV_MAX) but SvNVX(sv)=%g U_V is 0x%lx, IV_MAX is 0x%lx\0A\00", align 1
@.str.95 = private unnamed_addr constant [11 x i8] c"::__ANON__\00", align 1
@PL_defstash = external local_unnamed_addr global ptr, align 8
@PL_destroyhook = external local_unnamed_addr global ptr, align 8
@.str.96 = private unnamed_addr constant [8 x i8] c"DESTROY\00", align 1
@.str.97 = private unnamed_addr constant [51 x i8] c"DESTROY created new reference to dead object '%2p'\00", align 1
@.str.98 = private unnamed_addr constant [17 x i8] c"sv_pos_u2b_cache\00", align 1
@PL_utf8skip = external local_unnamed_addr constant [0 x i8], align 1
@.str.99 = private unnamed_addr constant [25 x i8] c"utf8_mg_pos_cache_update\00", align 1
@.str.100 = private unnamed_addr constant [37 x i8] c"panic: %s cache %lu real %lu for %-p\00", align 1
@.str.101 = private unnamed_addr constant [45 x i8] c"Argument \22%s\22 treated as 0 in increment (++)\00", align 1
@.str.102 = private unnamed_addr constant [23 x i8] c"Missing argument in %s\00", align 1
@.str.103 = private unnamed_addr constant [41 x i8] c"Integer overflow in format string for %s\00", align 1
@.str.104 = private unnamed_addr constant [12 x i8] c"sv_vcatpvfn\00", align 1
@.str.105 = private unnamed_addr constant [42 x i8] c"Hexadecimal float: internal error (entry)\00", align 1
@.str.106 = private unnamed_addr constant [45 x i8] c"Hexadecimal float: internal error (overflow)\00", align 1
@.str.107 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@PL_memory_wrap = external constant [0 x i8], align 1
@.str.108 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@PL_multideref_pc = external local_unnamed_addr global ptr, align 8
@.str.109 = private unnamed_addr constant [7 x i8] c"exists\00", align 1
@.str.110 = private unnamed_addr constant [7 x i8] c"delete\00", align 1
@.str.111 = private unnamed_addr constant [13 x i8] c"hash element\00", align 1
@.str.112 = private unnamed_addr constant [14 x i8] c"array element\00", align 1
@PL_defgv = external local_unnamed_addr global ptr, align 8
@.str.113 = private unnamed_addr constant [3 x i8] c"$_\00", align 1
@.str.114 = private unnamed_addr constant [3 x i8] c"$.\00", align 1
@.str.115 = private unnamed_addr constant [6 x i8] c"${$/}\00", align 1

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local void @Perl_sv_report_used() local_unnamed_addr #0 {
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_clean_objs() local_unnamed_addr #1 {
  store i8 1, ptr @PL_in_clean_objs, align 1, !tbaa !5
  %1 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %2 = icmp eq ptr %1, null
  br i1 %2, label %307, label %6

3:                                                ; preds = %52, %6
  %4 = load ptr, ptr %7, align 8, !tbaa !9
  %5 = icmp eq ptr %4, null
  br i1 %5, label %55, label %6, !llvm.loop !11

6:                                                ; preds = %0, %3
  %7 = phi ptr [ %4, %3 ], [ %1, %0 ]
  %8 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !13
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %struct.sv, ptr %7, i64 %10
  %12 = icmp ugt i32 %9, 1
  br i1 %12, label %13, label %3

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.sv, ptr %7, i64 1
  br label %15

15:                                               ; preds = %52, %13
  %16 = phi ptr [ %53, %52 ], [ %14, %13 ]
  %17 = phi ptr [ %16, %52 ], [ %7, %13 ]
  %18 = getelementptr inbounds %struct.sv, ptr %17, i64 1, i32 2
  %19 = load i32, ptr %18, align 4, !tbaa !16
  %20 = and i32 %19, 255
  %21 = icmp ne i32 %20, 255
  %22 = and i32 %19, 2048
  %23 = icmp ne i32 %22, 0
  %24 = and i1 %21, %23
  br i1 %24, label %25, label %52

25:                                               ; preds = %15
  %26 = getelementptr inbounds %struct.sv, ptr %17, i64 1, i32 1
  %27 = load i32, ptr %26, align 8, !tbaa !13
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %52, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  %32 = getelementptr inbounds %struct.sv, ptr %31, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  %34 = and i32 %33, 1048576
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %52, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %38 = load i32, ptr %37, align 4, !tbaa !16
  %39 = and i32 %38, -2147481600
  %40 = icmp eq i32 %39, -2147481600
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  tail call void @Perl_sv_del_backref(ptr noundef nonnull %31, ptr noundef nonnull %16)
  %42 = load i32, ptr %37, align 4, !tbaa !16
  %43 = and i32 %42, 2147481599
  store i32 %43, ptr %37, align 4, !tbaa !16
  store ptr null, ptr %30, align 8, !tbaa !17
  br label %52

44:                                               ; preds = %36
  %45 = and i32 %38, -2049
  store i32 %45, ptr %37, align 4, !tbaa !16
  store ptr null, ptr %30, align 8, !tbaa !17
  %46 = getelementptr inbounds %struct.sv, ptr %31, i64 0, i32 1
  %47 = load i32, ptr %46, align 8, !tbaa !13
  %48 = icmp ugt i32 %47, 1
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  %50 = add i32 %47, -1
  store i32 %50, ptr %46, align 8, !tbaa !13
  br label %52

51:                                               ; preds = %44
  tail call void @Perl_sv_free2(ptr noundef nonnull %31, i32 noundef %47)
  br label %52

52:                                               ; preds = %51, %49, %41, %29, %25, %15
  %53 = getelementptr inbounds %struct.sv, ptr %16, i64 1
  %54 = icmp ult ptr %53, %11
  br i1 %54, label %15, label %3, !llvm.loop !18

55:                                               ; preds = %3
  %56 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %57 = icmp eq ptr %56, null
  br i1 %57, label %307, label %61

58:                                               ; preds = %163, %61
  %59 = load ptr, ptr %62, align 8, !tbaa !9
  %60 = icmp eq ptr %59, null
  br i1 %60, label %166, label %61, !llvm.loop !11

61:                                               ; preds = %55, %58
  %62 = phi ptr [ %59, %58 ], [ %56, %55 ]
  %63 = getelementptr inbounds %struct.sv, ptr %62, i64 0, i32 1
  %64 = load i32, ptr %63, align 8, !tbaa !13
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %struct.sv, ptr %62, i64 %65
  %67 = icmp ugt i32 %64, 1
  br i1 %67, label %68, label %58

68:                                               ; preds = %61
  %69 = getelementptr inbounds %struct.sv, ptr %62, i64 1
  br label %70

70:                                               ; preds = %163, %68
  %71 = phi ptr [ %164, %163 ], [ %69, %68 ]
  %72 = phi ptr [ %71, %163 ], [ %62, %68 ]
  %73 = getelementptr inbounds %struct.sv, ptr %72, i64 1, i32 2
  %74 = load i32, ptr %73, align 4, !tbaa !16
  %75 = and i32 %74, 255
  %76 = icmp ne i32 %75, 255
  %77 = and i32 %74, 49407
  %78 = icmp eq i32 %77, 32777
  %79 = and i1 %76, %78
  br i1 %79, label %80, label %163

80:                                               ; preds = %70
  %81 = getelementptr inbounds %struct.sv, ptr %72, i64 1, i32 1
  %82 = load i32, ptr %81, align 8, !tbaa !13
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %163, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.sv, ptr %71, i64 0, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !17
  %87 = icmp eq ptr %86, null
  br i1 %87, label %163, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.sv, ptr %71, i64 0, i32 1
  %90 = load i32, ptr %89, align 8, !tbaa !13
  %91 = add i32 %90, 1
  store i32 %91, ptr %89, align 8, !tbaa !13
  %92 = load ptr, ptr %86, align 8, !tbaa !19
  %93 = icmp eq ptr %92, null
  br i1 %93, label %106, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %struct.sv, ptr %92, i64 0, i32 2
  %96 = load i32, ptr %95, align 4, !tbaa !16
  %97 = and i32 %96, 1048576
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %106, label %99

99:                                               ; preds = %94
  store ptr null, ptr %86, align 8, !tbaa !19
  %100 = getelementptr inbounds %struct.sv, ptr %92, i64 0, i32 1
  %101 = load i32, ptr %100, align 8, !tbaa !13
  %102 = icmp ugt i32 %101, 1
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  %104 = add i32 %101, -1
  store i32 %104, ptr %100, align 8, !tbaa !13
  br label %106

105:                                              ; preds = %99
  tail call void @Perl_sv_free2(ptr noundef nonnull %92, i32 noundef %101)
  br label %106

106:                                              ; preds = %105, %103, %94, %88
  %107 = load ptr, ptr %85, align 8, !tbaa !17
  %108 = getelementptr inbounds %struct.gp, ptr %107, i64 0, i32 6
  %109 = load ptr, ptr %108, align 8, !tbaa !21
  %110 = icmp eq ptr %109, null
  br i1 %110, label %123, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %struct.sv, ptr %109, i64 0, i32 2
  %113 = load i32, ptr %112, align 4, !tbaa !16
  %114 = and i32 %113, 1048576
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %123, label %116

116:                                              ; preds = %111
  store ptr null, ptr %108, align 8, !tbaa !21
  %117 = getelementptr inbounds %struct.sv, ptr %109, i64 0, i32 1
  %118 = load i32, ptr %117, align 8, !tbaa !13
  %119 = icmp ugt i32 %118, 1
  br i1 %119, label %120, label %122

120:                                              ; preds = %116
  %121 = add i32 %118, -1
  store i32 %121, ptr %117, align 8, !tbaa !13
  br label %123

122:                                              ; preds = %116
  tail call void @Perl_sv_free2(ptr noundef nonnull %109, i32 noundef %118)
  br label %123

123:                                              ; preds = %122, %120, %111, %106
  %124 = load ptr, ptr %85, align 8, !tbaa !17
  %125 = getelementptr inbounds %struct.gp, ptr %124, i64 0, i32 5
  %126 = load ptr, ptr %125, align 8, !tbaa !22
  %127 = icmp eq ptr %126, null
  br i1 %127, label %140, label %128

128:                                              ; preds = %123
  %129 = getelementptr inbounds %struct.sv, ptr %126, i64 0, i32 2
  %130 = load i32, ptr %129, align 4, !tbaa !16
  %131 = and i32 %130, 1048576
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %140, label %133

133:                                              ; preds = %128
  store ptr null, ptr %125, align 8, !tbaa !22
  %134 = getelementptr inbounds %struct.sv, ptr %126, i64 0, i32 1
  %135 = load i32, ptr %134, align 8, !tbaa !13
  %136 = icmp ugt i32 %135, 1
  br i1 %136, label %137, label %139

137:                                              ; preds = %133
  %138 = add i32 %135, -1
  store i32 %138, ptr %134, align 8, !tbaa !13
  br label %140

139:                                              ; preds = %133
  tail call void @Perl_sv_free2(ptr noundef nonnull %126, i32 noundef %135)
  br label %140

140:                                              ; preds = %139, %137, %128, %123
  %141 = load ptr, ptr %85, align 8, !tbaa !17
  %142 = getelementptr inbounds %struct.gp, ptr %141, i64 0, i32 2
  %143 = load ptr, ptr %142, align 8, !tbaa !23
  %144 = icmp eq ptr %143, null
  br i1 %144, label %157, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %struct.sv, ptr %143, i64 0, i32 2
  %147 = load i32, ptr %146, align 4, !tbaa !16
  %148 = and i32 %147, 1048576
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %157, label %150

150:                                              ; preds = %145
  store ptr null, ptr %142, align 8, !tbaa !23
  %151 = getelementptr inbounds %struct.sv, ptr %143, i64 0, i32 1
  %152 = load i32, ptr %151, align 8, !tbaa !13
  %153 = icmp ugt i32 %152, 1
  br i1 %153, label %154, label %156

154:                                              ; preds = %150
  %155 = add i32 %152, -1
  store i32 %155, ptr %151, align 8, !tbaa !13
  br label %157

156:                                              ; preds = %150
  tail call void @Perl_sv_free2(ptr noundef nonnull %143, i32 noundef %152)
  br label %157

157:                                              ; preds = %156, %154, %145, %140
  %158 = load i32, ptr %89, align 8, !tbaa !13
  %159 = icmp ugt i32 %158, 1
  br i1 %159, label %160, label %162

160:                                              ; preds = %157
  %161 = add i32 %158, -1
  store i32 %161, ptr %89, align 8, !tbaa !13
  br label %163

162:                                              ; preds = %157
  tail call void @Perl_sv_free2(ptr noundef nonnull %71, i32 noundef %158)
  br label %163

163:                                              ; preds = %162, %160, %84, %80, %70
  %164 = getelementptr inbounds %struct.sv, ptr %71, i64 1
  %165 = icmp ult ptr %164, %66
  br i1 %165, label %70, label %58, !llvm.loop !18

166:                                              ; preds = %58
  %167 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %168 = icmp eq ptr %167, null
  br i1 %168, label %307, label %172

169:                                              ; preds = %236, %172
  %170 = load ptr, ptr %173, align 8, !tbaa !9
  %171 = icmp eq ptr %170, null
  br i1 %171, label %239, label %172, !llvm.loop !11

172:                                              ; preds = %166, %169
  %173 = phi ptr [ %170, %169 ], [ %167, %166 ]
  %174 = getelementptr inbounds %struct.sv, ptr %173, i64 0, i32 1
  %175 = load i32, ptr %174, align 8, !tbaa !13
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds %struct.sv, ptr %173, i64 %176
  %178 = icmp ugt i32 %175, 1
  br i1 %178, label %179, label %169

179:                                              ; preds = %172
  %180 = getelementptr inbounds %struct.sv, ptr %173, i64 1
  br label %181

181:                                              ; preds = %236, %179
  %182 = phi ptr [ %237, %236 ], [ %180, %179 ]
  %183 = phi ptr [ %182, %236 ], [ %173, %179 ]
  %184 = getelementptr inbounds %struct.sv, ptr %183, i64 1, i32 2
  %185 = load i32, ptr %184, align 4, !tbaa !16
  %186 = and i32 %185, 255
  %187 = icmp ne i32 %186, 255
  %188 = and i32 %185, 49407
  %189 = icmp eq i32 %188, 32777
  %190 = and i1 %187, %189
  br i1 %190, label %191, label %236

191:                                              ; preds = %181
  %192 = getelementptr inbounds %struct.sv, ptr %183, i64 1, i32 1
  %193 = load i32, ptr %192, align 8, !tbaa !13
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %236, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %struct.sv, ptr %182, i64 0, i32 3
  %197 = load ptr, ptr %196, align 8, !tbaa !17
  %198 = icmp eq ptr %197, null
  %199 = load ptr, ptr @PL_stderrgv, align 8
  %200 = icmp eq ptr %199, %182
  %201 = select i1 %198, i1 true, i1 %200
  %202 = load ptr, ptr @PL_defoutgv, align 8
  %203 = icmp eq ptr %202, %182
  %204 = select i1 %201, i1 true, i1 %203
  br i1 %204, label %236, label %205

205:                                              ; preds = %195
  %206 = getelementptr inbounds %struct.sv, ptr %182, i64 0, i32 1
  %207 = load i32, ptr %206, align 8, !tbaa !13
  %208 = add i32 %207, 1
  store i32 %208, ptr %206, align 8, !tbaa !13
  %209 = getelementptr inbounds %struct.sv, ptr %182, i64 0, i32 2
  %210 = load i32, ptr %209, align 4, !tbaa !16
  %211 = and i32 %210, 255
  %212 = add nsw i32 %211, -9
  %213 = icmp ult i32 %212, 2
  br i1 %213, label %214, label %230

214:                                              ; preds = %205
  %215 = getelementptr inbounds %struct.gp, ptr %197, i64 0, i32 1
  %216 = load ptr, ptr %215, align 8, !tbaa !24
  %217 = icmp eq ptr %216, null
  br i1 %217, label %230, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds %struct.sv, ptr %216, i64 0, i32 2
  %220 = load i32, ptr %219, align 4, !tbaa !16
  %221 = and i32 %220, 1048576
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %230, label %223

223:                                              ; preds = %218
  store ptr null, ptr %215, align 8, !tbaa !24
  %224 = getelementptr inbounds %struct.sv, ptr %216, i64 0, i32 1
  %225 = load i32, ptr %224, align 8, !tbaa !13
  %226 = icmp ugt i32 %225, 1
  br i1 %226, label %227, label %229

227:                                              ; preds = %223
  %228 = add i32 %225, -1
  store i32 %228, ptr %224, align 8, !tbaa !13
  br label %230

229:                                              ; preds = %223
  tail call void @Perl_sv_free2(ptr noundef nonnull %216, i32 noundef %225)
  br label %230

230:                                              ; preds = %229, %227, %218, %214, %205
  %231 = load i32, ptr %206, align 8, !tbaa !13
  %232 = icmp ugt i32 %231, 1
  br i1 %232, label %233, label %235

233:                                              ; preds = %230
  %234 = add i32 %231, -1
  store i32 %234, ptr %206, align 8, !tbaa !13
  br label %236

235:                                              ; preds = %230
  tail call void @Perl_sv_free2(ptr noundef nonnull %182, i32 noundef %231)
  br label %236

236:                                              ; preds = %235, %233, %195, %191, %181
  %237 = getelementptr inbounds %struct.sv, ptr %182, i64 1
  %238 = icmp ult ptr %237, %177
  br i1 %238, label %181, label %169, !llvm.loop !18

239:                                              ; preds = %169
  %240 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %241 = icmp eq ptr %240, null
  br i1 %241, label %307, label %245

242:                                              ; preds = %304, %245
  %243 = load ptr, ptr %246, align 8, !tbaa !9
  %244 = icmp eq ptr %243, null
  br i1 %244, label %307, label %245, !llvm.loop !11

245:                                              ; preds = %239, %242
  %246 = phi ptr [ %243, %242 ], [ %240, %239 ]
  %247 = getelementptr inbounds %struct.sv, ptr %246, i64 0, i32 1
  %248 = load i32, ptr %247, align 8, !tbaa !13
  %249 = zext i32 %248 to i64
  %250 = getelementptr inbounds %struct.sv, ptr %246, i64 %249
  %251 = icmp ugt i32 %248, 1
  br i1 %251, label %252, label %242

252:                                              ; preds = %245
  %253 = getelementptr inbounds %struct.sv, ptr %246, i64 1
  br label %254

254:                                              ; preds = %304, %252
  %255 = phi ptr [ %305, %304 ], [ %253, %252 ]
  %256 = phi ptr [ %255, %304 ], [ %246, %252 ]
  %257 = getelementptr inbounds %struct.sv, ptr %256, i64 1, i32 2
  %258 = load i32, ptr %257, align 4, !tbaa !16
  %259 = and i32 %258, 255
  %260 = icmp ne i32 %259, 255
  %261 = and i32 %258, 1048576
  %262 = icmp ne i32 %261, 0
  %263 = and i1 %260, %262
  br i1 %263, label %264, label %304

264:                                              ; preds = %254
  %265 = getelementptr inbounds %struct.sv, ptr %256, i64 1, i32 1
  %266 = load i32, ptr %265, align 8, !tbaa !13
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %304, label %268

268:                                              ; preds = %264
  %269 = load ptr, ptr @PL_stderrgv, align 8, !tbaa !9
  %270 = icmp eq ptr %269, null
  br i1 %270, label %285, label %271

271:                                              ; preds = %268
  %272 = getelementptr inbounds %struct.gv, ptr %269, i64 0, i32 3
  %273 = load ptr, ptr %272, align 8, !tbaa !17
  %274 = icmp eq ptr %273, null
  br i1 %274, label %285, label %275

275:                                              ; preds = %271
  %276 = getelementptr inbounds %struct.sv, ptr %269, i64 0, i32 2
  %277 = load i32, ptr %276, align 4, !tbaa !16
  %278 = and i32 %277, 255
  %279 = add nsw i32 %278, -9
  %280 = icmp ult i32 %279, 2
  br i1 %280, label %281, label %285

281:                                              ; preds = %275
  %282 = getelementptr inbounds %struct.gp, ptr %273, i64 0, i32 1
  %283 = load ptr, ptr %282, align 8, !tbaa !24
  %284 = icmp eq ptr %283, %255
  br i1 %284, label %304, label %285

285:                                              ; preds = %275, %281, %271, %268
  %286 = load ptr, ptr @PL_defoutgv, align 8, !tbaa !9
  %287 = icmp eq ptr %286, null
  br i1 %287, label %302, label %288

288:                                              ; preds = %285
  %289 = getelementptr inbounds %struct.gv, ptr %286, i64 0, i32 3
  %290 = load ptr, ptr %289, align 8, !tbaa !17
  %291 = icmp eq ptr %290, null
  br i1 %291, label %302, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %struct.sv, ptr %286, i64 0, i32 2
  %294 = load i32, ptr %293, align 4, !tbaa !16
  %295 = and i32 %294, 255
  %296 = add nsw i32 %295, -9
  %297 = icmp ult i32 %296, 2
  br i1 %297, label %298, label %302

298:                                              ; preds = %292
  %299 = getelementptr inbounds %struct.gp, ptr %290, i64 0, i32 1
  %300 = load ptr, ptr %299, align 8, !tbaa !24
  %301 = icmp eq ptr %300, %255
  br i1 %301, label %304, label %302

302:                                              ; preds = %292, %298, %288, %285
  %303 = tail call fastcc zeroext i1 @S_curse(ptr noundef nonnull %255, i1 noundef zeroext false)
  br label %304

304:                                              ; preds = %302, %298, %281, %264, %254
  %305 = getelementptr inbounds %struct.sv, ptr %255, i64 1
  %306 = icmp ult ptr %305, %250
  br i1 %306, label %254, label %242, !llvm.loop !18

307:                                              ; preds = %242, %55, %0, %166, %239
  %308 = load ptr, ptr @PL_defoutgv, align 8, !tbaa !9
  store ptr null, ptr @PL_defoutgv, align 8, !tbaa !9
  %309 = icmp eq ptr %308, null
  br i1 %309, label %353, label %310

310:                                              ; preds = %307
  %311 = getelementptr inbounds %struct.gv, ptr %308, i64 0, i32 2
  %312 = load i32, ptr %311, align 4, !tbaa !25
  %313 = and i32 %312, 49152
  %314 = icmp eq i32 %313, 32768
  br i1 %314, label %315, label %353

315:                                              ; preds = %310
  %316 = and i32 %312, 255
  %317 = add nsw i32 %316, -9
  %318 = icmp ult i32 %317, 2
  br i1 %318, label %319, label %353

319:                                              ; preds = %315
  %320 = getelementptr inbounds %struct.sv, ptr %308, i64 0, i32 3
  %321 = load ptr, ptr %320, align 8, !tbaa !17
  %322 = icmp eq ptr %321, null
  %323 = load ptr, ptr @PL_stderrgv, align 8
  %324 = icmp eq ptr %323, %308
  %325 = select i1 %322, i1 true, i1 %324
  br i1 %325, label %355, label %326

326:                                              ; preds = %319
  %327 = getelementptr inbounds %struct.sv, ptr %308, i64 0, i32 1
  %328 = load i32, ptr %327, align 8, !tbaa !13
  %329 = add i32 %328, 1
  store i32 %329, ptr %327, align 8, !tbaa !13
  %330 = getelementptr inbounds %struct.gp, ptr %321, i64 0, i32 1
  %331 = load ptr, ptr %330, align 8, !tbaa !24
  %332 = icmp eq ptr %331, null
  br i1 %332, label %347, label %333

333:                                              ; preds = %326
  %334 = getelementptr inbounds %struct.sv, ptr %331, i64 0, i32 2
  %335 = load i32, ptr %334, align 4, !tbaa !16
  %336 = and i32 %335, 1048576
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %345, label %338

338:                                              ; preds = %333
  store ptr null, ptr %330, align 8, !tbaa !24
  %339 = getelementptr inbounds %struct.sv, ptr %331, i64 0, i32 1
  %340 = load i32, ptr %339, align 8, !tbaa !13
  %341 = icmp ugt i32 %340, 1
  br i1 %341, label %342, label %344

342:                                              ; preds = %338
  %343 = add i32 %340, -1
  store i32 %343, ptr %339, align 8, !tbaa !13
  br label %345

344:                                              ; preds = %338
  tail call void @Perl_sv_free2(ptr noundef nonnull %331, i32 noundef %340)
  br label %345

345:                                              ; preds = %333, %342, %344
  %346 = load i32, ptr %327, align 8, !tbaa !13
  br label %347

347:                                              ; preds = %345, %326
  %348 = phi i32 [ %346, %345 ], [ %329, %326 ]
  %349 = icmp ugt i32 %348, 1
  br i1 %349, label %350, label %352

350:                                              ; preds = %347
  %351 = add i32 %348, -1
  store i32 %351, ptr %327, align 8, !tbaa !13
  br label %353

352:                                              ; preds = %347
  tail call void @Perl_sv_free2(ptr noundef nonnull %308, i32 noundef %348)
  br label %353

353:                                              ; preds = %307, %310, %315, %350, %352
  %354 = load ptr, ptr @PL_stderrgv, align 8, !tbaa !9
  br label %355

355:                                              ; preds = %353, %319
  %356 = phi ptr [ %354, %353 ], [ %323, %319 ]
  store ptr null, ptr @PL_stderrgv, align 8, !tbaa !9
  %357 = icmp eq ptr %356, null
  br i1 %357, label %401, label %358

358:                                              ; preds = %355
  %359 = getelementptr inbounds %struct.gv, ptr %356, i64 0, i32 2
  %360 = load i32, ptr %359, align 4, !tbaa !25
  %361 = and i32 %360, 49152
  %362 = icmp eq i32 %361, 32768
  br i1 %362, label %363, label %401

363:                                              ; preds = %358
  %364 = and i32 %360, 255
  %365 = add nsw i32 %364, -9
  %366 = icmp ult i32 %365, 2
  br i1 %366, label %367, label %401

367:                                              ; preds = %363
  %368 = getelementptr inbounds %struct.sv, ptr %356, i64 0, i32 3
  %369 = load ptr, ptr %368, align 8, !tbaa !17
  %370 = icmp eq ptr %369, null
  %371 = load ptr, ptr @PL_defoutgv, align 8
  %372 = icmp eq ptr %371, %356
  %373 = select i1 %370, i1 true, i1 %372
  br i1 %373, label %401, label %374

374:                                              ; preds = %367
  %375 = getelementptr inbounds %struct.sv, ptr %356, i64 0, i32 1
  %376 = load i32, ptr %375, align 8, !tbaa !13
  %377 = add i32 %376, 1
  store i32 %377, ptr %375, align 8, !tbaa !13
  %378 = getelementptr inbounds %struct.gp, ptr %369, i64 0, i32 1
  %379 = load ptr, ptr %378, align 8, !tbaa !24
  %380 = icmp eq ptr %379, null
  br i1 %380, label %395, label %381

381:                                              ; preds = %374
  %382 = getelementptr inbounds %struct.sv, ptr %379, i64 0, i32 2
  %383 = load i32, ptr %382, align 4, !tbaa !16
  %384 = and i32 %383, 1048576
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %393, label %386

386:                                              ; preds = %381
  store ptr null, ptr %378, align 8, !tbaa !24
  %387 = getelementptr inbounds %struct.sv, ptr %379, i64 0, i32 1
  %388 = load i32, ptr %387, align 8, !tbaa !13
  %389 = icmp ugt i32 %388, 1
  br i1 %389, label %390, label %392

390:                                              ; preds = %386
  %391 = add i32 %388, -1
  store i32 %391, ptr %387, align 8, !tbaa !13
  br label %393

392:                                              ; preds = %386
  tail call void @Perl_sv_free2(ptr noundef nonnull %379, i32 noundef %388)
  br label %393

393:                                              ; preds = %381, %390, %392
  %394 = load i32, ptr %375, align 8, !tbaa !13
  br label %395

395:                                              ; preds = %393, %374
  %396 = phi i32 [ %394, %393 ], [ %377, %374 ]
  %397 = icmp ugt i32 %396, 1
  br i1 %397, label %398, label %400

398:                                              ; preds = %395
  %399 = add i32 %396, -1
  store i32 %399, ptr %375, align 8, !tbaa !13
  br label %401

400:                                              ; preds = %395
  tail call void @Perl_sv_free2(ptr noundef nonnull %356, i32 noundef %396)
  br label %401

401:                                              ; preds = %400, %398, %367, %363, %358, %355
  br i1 %309, label %409, label %402

402:                                              ; preds = %401
  %403 = getelementptr inbounds %struct.sv, ptr %308, i64 0, i32 1
  %404 = load i32, ptr %403, align 8, !tbaa !13
  %405 = icmp ugt i32 %404, 1
  br i1 %405, label %406, label %408

406:                                              ; preds = %402
  %407 = add i32 %404, -1
  store i32 %407, ptr %403, align 8, !tbaa !13
  br label %409

408:                                              ; preds = %402
  tail call void @Perl_sv_free2(ptr noundef nonnull %308, i32 noundef %404)
  br label %409

409:                                              ; preds = %401, %406, %408
  store i8 0, ptr @PL_in_clean_objs, align 1, !tbaa !5
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @Perl_sv_clean_all() local_unnamed_addr #1 {
  store i8 1, ptr @PL_in_clean_all, align 1, !tbaa !5
  %1 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %2 = icmp eq ptr %1, null
  br i1 %2, label %51, label %7

3:                                                ; preds = %47, %7
  %4 = phi i32 [ %9, %7 ], [ %48, %47 ]
  %5 = load ptr, ptr %8, align 8, !tbaa !9
  %6 = icmp eq ptr %5, null
  br i1 %6, label %51, label %7, !llvm.loop !11

7:                                                ; preds = %0, %3
  %8 = phi ptr [ %5, %3 ], [ %1, %0 ]
  %9 = phi i32 [ %4, %3 ], [ 0, %0 ]
  %10 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !13
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %struct.sv, ptr %8, i64 %12
  %14 = icmp ugt i32 %11, 1
  br i1 %14, label %15, label %3

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.sv, ptr %8, i64 1
  br label %17

17:                                               ; preds = %47, %15
  %18 = phi ptr [ %49, %47 ], [ %16, %15 ]
  %19 = phi ptr [ %18, %47 ], [ %8, %15 ]
  %20 = phi i32 [ %48, %47 ], [ %9, %15 ]
  %21 = getelementptr inbounds %struct.sv, ptr %19, i64 1, i32 2
  %22 = load i32, ptr %21, align 4, !tbaa !16
  %23 = and i32 %22, 255
  %24 = icmp eq i32 %23, 255
  br i1 %24, label %47, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.sv, ptr %19, i64 1, i32 1
  %27 = load i32, ptr %26, align 8, !tbaa !13
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %47, label %29

29:                                               ; preds = %25
  %30 = load ptr, ptr @PL_fdpid, align 8, !tbaa !9
  %31 = icmp eq ptr %30, %18
  %32 = load ptr, ptr @PL_strtab, align 8
  %33 = icmp eq ptr %32, %18
  %34 = select i1 %31, i1 true, i1 %33
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %37 = load i32, ptr %36, align 4, !tbaa !16
  %38 = or i32 %37, 67108864
  store i32 %38, ptr %36, align 4, !tbaa !16
  %39 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 1
  %40 = load i32, ptr %39, align 8, !tbaa !13
  %41 = icmp ugt i32 %40, 1
  br i1 %41, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %40, -1
  store i32 %43, ptr %39, align 8, !tbaa !13
  br label %45

44:                                               ; preds = %35
  tail call void @Perl_sv_free2(ptr noundef nonnull %18, i32 noundef %40)
  br label %45

45:                                               ; preds = %29, %42, %44
  %46 = add nsw i32 %20, 1
  br label %47

47:                                               ; preds = %45, %25, %17
  %48 = phi i32 [ %46, %45 ], [ %20, %25 ], [ %20, %17 ]
  %49 = getelementptr inbounds %struct.sv, ptr %18, i64 1
  %50 = icmp ult ptr %49, %13
  br i1 %50, label %17, label %3, !llvm.loop !18

51:                                               ; preds = %3, %0
  %52 = phi i32 [ 0, %0 ], [ %4, %3 ]
  ret i32 %52
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_free_arenas() local_unnamed_addr #1 {
  %1 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %2 = icmp eq ptr %1, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %0, %20
  %4 = phi ptr [ %7, %20 ], [ %1, %0 ]
  br label %5

5:                                                ; preds = %3, %9
  %6 = phi ptr [ %7, %9 ], [ %4, %3 ]
  %7 = load ptr, ptr %6, align 8, !tbaa !26
  %8 = icmp eq ptr %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !16
  %12 = and i32 %11, 16777216
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %5, !llvm.loop !27

14:                                               ; preds = %5, %9
  %15 = getelementptr inbounds %struct.sv, ptr %4, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !16
  %17 = and i32 %16, 16777216
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  tail call void @Perl_safesysfree(ptr noundef nonnull %4) #17
  br label %20

20:                                               ; preds = %14, %19
  %21 = icmp eq ptr %7, null
  br i1 %21, label %22, label %3, !llvm.loop !28

22:                                               ; preds = %20, %0
  %23 = load ptr, ptr @PL_body_arenas, align 8, !tbaa !9
  %24 = icmp eq ptr %23, null
  br i1 %24, label %43, label %25

25:                                               ; preds = %22, %40
  %26 = phi ptr [ %41, %40 ], [ %23, %22 ]
  %27 = getelementptr inbounds %struct.arena_set, ptr %26, i64 0, i32 2
  %28 = load i32, ptr %27, align 4, !tbaa !29
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %40, label %30

30:                                               ; preds = %25
  %31 = zext i32 %28 to i64
  br label %32

32:                                               ; preds = %30, %32
  %33 = phi i64 [ %31, %30 ], [ %34, %32 ]
  %34 = add nsw i64 %33, -1
  %35 = and i64 %34, 4294967295
  %36 = getelementptr inbounds %struct.arena_set, ptr %26, i64 0, i32 3, i64 %35
  %37 = load ptr, ptr %36, align 8, !tbaa !31
  tail call void @Perl_safesysfree(ptr noundef %37) #17
  %38 = and i64 %34, 4294967295
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %32, !llvm.loop !34

40:                                               ; preds = %32, %25
  %41 = load ptr, ptr %26, align 8, !tbaa !35
  tail call void @Perl_safesysfree(ptr noundef nonnull %26) #17
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %25, !llvm.loop !36

43:                                               ; preds = %40, %22
  store ptr null, ptr @PL_body_arenas, align 8, !tbaa !9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(128) @PL_body_roots, i8 0, i64 128, i1 false), !tbaa !9
  store ptr null, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr null, ptr @PL_sv_root, align 8, !tbaa !9
  ret void
}

declare void @Perl_safesysfree(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_more_bodies(i32 noundef %0, i64 noundef %1, i64 noundef %2) local_unnamed_addr #1 {
  %4 = zext i32 %0 to i64
  %5 = getelementptr inbounds [16 x ptr], ptr @PL_body_roots, i64 0, i64 %4
  %6 = load ptr, ptr @PL_body_arenas, align 8, !tbaa !9
  %7 = icmp eq ptr %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.arena_set, ptr %6, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !29
  %11 = getelementptr inbounds %struct.arena_set, ptr %6, i64 0, i32 1
  %12 = load i32, ptr %11, align 8, !tbaa !37
  %13 = icmp ult i32 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %8, %3
  %15 = tail call ptr @Perl_safesyscalloc(i64 noundef 1, i64 noundef 4072) #17
  %16 = getelementptr inbounds %struct.arena_set, ptr %15, i64 0, i32 1
  store i32 169, ptr %16, align 8, !tbaa !37
  store ptr %6, ptr %15, align 8, !tbaa !35
  store ptr %15, ptr @PL_body_arenas, align 8, !tbaa !9
  %17 = getelementptr inbounds %struct.arena_set, ptr %15, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !29
  br label %19

19:                                               ; preds = %14, %8
  %20 = phi i32 [ %18, %14 ], [ %10, %8 ]
  %21 = phi ptr [ %15, %14 ], [ %6, %8 ]
  %22 = getelementptr inbounds %struct.arena_set, ptr %21, i64 0, i32 2
  %23 = add i32 %20, 1
  store i32 %23, ptr %22, align 4, !tbaa !29
  %24 = zext i32 %20 to i64
  %25 = getelementptr inbounds %struct.arena_set, ptr %21, i64 0, i32 3, i64 %24
  %26 = tail call ptr @Perl_safesysmalloc(i64 noundef %2) #17
  store ptr %26, ptr %25, align 8, !tbaa !31
  %27 = getelementptr inbounds %struct.arena_set, ptr %21, i64 0, i32 3, i64 %24, i32 1
  store i64 %2, ptr %27, align 8, !tbaa !38
  %28 = getelementptr inbounds %struct.arena_set, ptr %21, i64 0, i32 3, i64 %24, i32 2
  store i32 %0, ptr %28, align 8, !tbaa !39
  %29 = urem i64 %2, %1
  %30 = sub nuw i64 %2, %29
  %31 = getelementptr inbounds i8, ptr %26, i64 %30
  store ptr %26, ptr %5, align 8, !tbaa !9
  %32 = icmp sgt i64 %30, %1
  br i1 %32, label %33, label %40

33:                                               ; preds = %19
  %34 = getelementptr inbounds i8, ptr %26, i64 %1
  br label %35

35:                                               ; preds = %33, %35
  %36 = phi ptr [ %38, %35 ], [ %34, %33 ]
  %37 = phi ptr [ %36, %35 ], [ %26, %33 ]
  store ptr %36, ptr %37, align 8, !tbaa !9
  %38 = getelementptr inbounds i8, ptr %36, i64 %1
  %39 = icmp ult ptr %38, %31
  br i1 %39, label %35, label %40

40:                                               ; preds = %35, %19
  %41 = phi ptr [ %26, %19 ], [ %36, %35 ]
  store ptr null, ptr %41, align 8, !tbaa !9
  %42 = load ptr, ptr %5, align 8, !tbaa !9
  ret ptr %42
}

declare ptr @Perl_safesyscalloc(i64 noundef, i64 noundef) local_unnamed_addr #3

declare ptr @Perl_safesysmalloc(i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_upgrade(ptr noundef %0, i32 noundef %1) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 255
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %struct.body_details, ptr @bodies_by_type, i64 %6
  %8 = icmp eq i32 %5, %1
  br i1 %8, label %313, label %9

9:                                                ; preds = %2
  %10 = icmp ult i32 %1, 8
  %11 = and i32 %4, 268435456
  %12 = icmp eq i32 %11, 0
  %13 = or i1 %10, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %0, i32 noundef 0)
  br label %15

15:                                               ; preds = %14, %9
  %16 = load ptr, ptr %0, align 8, !tbaa !26
  %17 = trunc i32 %4 to i8
  switch i8 %17, label %34 [
    i8 0, label %78
    i8 1, label %18
    i8 2, label %32
    i8 3, label %78
    i8 5, label %78
    i8 6, label %78
    i8 7, label %78
  ]

18:                                               ; preds = %15
  %19 = load i32, ptr %3, align 4, !tbaa !16
  %20 = and i32 %19, 2048
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  %25 = icmp eq i32 %1, 2
  %26 = select i1 %25, i32 6, i32 %1
  br label %78

27:                                               ; preds = %18
  %28 = icmp ult i32 %1, 5
  br i1 %28, label %29, label %78

29:                                               ; preds = %27
  %30 = icmp eq i32 %1, 2
  %31 = select i1 %30, i32 6, i32 5
  br label %78

32:                                               ; preds = %15
  %33 = tail call i32 @llvm.umax.i32(i32 %1, i32 6)
  br label %78

34:                                               ; preds = %15
  %35 = getelementptr inbounds %struct.body_details, ptr @bodies_by_type, i64 %6, i32 3
  %36 = load i8, ptr %35, align 1
  %37 = and i8 %36, 16
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %78, label %39

39:                                               ; preds = %34
  %40 = load i32, ptr %3, align 4, !tbaa !16
  %41 = trunc i32 %40 to i8
  switch i8 %41, label %74 [
    i8 0, label %42
    i8 1, label %42
    i8 2, label %42
    i8 3, label %42
    i8 5, label %42
    i8 6, label %42
    i8 7, label %42
    i8 10, label %55
    i8 11, label %75
    i8 12, label %64
    i8 13, label %65
    i8 9, label %66
    i8 14, label %70
    i8 15, label %71
    i8 4, label %72
    i8 8, label %73
  ]

42:                                               ; preds = %39, %39, %39, %39, %39, %39, %39
  %43 = and i32 %40, 14680064
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %42
  %46 = tail call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 86) #17
  %47 = icmp eq ptr %46, null
  br i1 %47, label %48, label %75

48:                                               ; preds = %45
  %49 = load i32, ptr %3, align 4, !tbaa !16
  br label %50

50:                                               ; preds = %48, %42
  %51 = phi i32 [ %49, %48 ], [ %40, %42 ]
  %52 = and i32 %51, 2048
  %53 = icmp eq i32 %52, 0
  %54 = select i1 %53, ptr @.str.52, ptr @.str.51
  br label %75

55:                                               ; preds = %39
  %56 = and i32 %40, 2048
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %75

58:                                               ; preds = %55
  %59 = getelementptr inbounds %struct.xpvlv, ptr %16, i64 0, i32 9
  %60 = load i8, ptr %59, align 8, !tbaa !40
  %61 = and i8 %60, -33
  %62 = icmp eq i8 %61, 84
  %63 = select i1 %62, ptr @.str.52, ptr @.str.53
  br label %75

64:                                               ; preds = %39
  br label %75

65:                                               ; preds = %39
  br label %75

66:                                               ; preds = %39
  %67 = and i32 %40, 49152
  %68 = icmp eq i32 %67, 32768
  %69 = select i1 %68, ptr @.str.57, ptr @.str.52
  br label %75

70:                                               ; preds = %39
  br label %75

71:                                               ; preds = %39
  br label %75

72:                                               ; preds = %39
  br label %75

73:                                               ; preds = %39
  br label %75

74:                                               ; preds = %39
  br label %75

75:                                               ; preds = %39, %45, %50, %55, %58, %64, %65, %66, %70, %71, %72, %73, %74
  %76 = phi ptr [ @.str.62, %74 ], [ @.str.61, %73 ], [ @.str.60, %72 ], [ @.str.59, %71 ], [ @.str.58, %70 ], [ %69, %66 ], [ @.str.56, %65 ], [ @.str.55, %64 ], [ @.str.50, %45 ], [ %54, %50 ], [ %63, %58 ], [ @.str.51, %55 ], [ @.str.54, %39 ]
  %77 = zext i32 %1 to i64
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull %76, i64 noundef %6, i64 noundef %77) #17
  br label %78

78:                                               ; preds = %75, %34, %15, %15, %22, %29, %27, %15, %15, %32, %15
  %79 = phi ptr [ null, %75 ], [ null, %34 ], [ null, %32 ], [ %24, %22 ], [ null, %29 ], [ null, %27 ], [ null, %15 ], [ null, %15 ], [ null, %15 ], [ null, %15 ], [ null, %15 ]
  %80 = phi ptr [ %7, %75 ], [ %7, %34 ], [ %7, %32 ], [ @fake_rv, %22 ], [ %7, %29 ], [ %7, %27 ], [ %7, %15 ], [ %7, %15 ], [ %7, %15 ], [ %7, %15 ], [ %7, %15 ]
  %81 = phi i32 [ %1, %75 ], [ %1, %34 ], [ %33, %32 ], [ %26, %22 ], [ %31, %29 ], [ %1, %27 ], [ %1, %15 ], [ %1, %15 ], [ %1, %15 ], [ %1, %15 ], [ %1, %15 ]
  %82 = icmp ugt i32 %5, %81
  br i1 %82, label %83, label %84

83:                                               ; preds = %78
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.1, i32 noundef %5, i32 noundef %81) #17
  br label %84

84:                                               ; preds = %78, %83
  %85 = zext i32 %81 to i64
  %86 = getelementptr inbounds %struct.body_details, ptr @bodies_by_type, i64 %85
  %87 = load i32, ptr %3, align 4, !tbaa !16
  %88 = and i32 %87, -256
  %89 = or i32 %88, %81
  store i32 %89, ptr %3, align 4, !tbaa !16
  switch i32 %81, label %302 [
    i32 1, label %90
    i32 2, label %93
    i32 12, label %96
    i32 11, label %96
    i32 5, label %188
    i32 15, label %188
    i32 14, label %188
    i32 9, label %188
    i32 13, label %188
    i32 10, label %188
    i32 4, label %188
    i32 8, label %188
    i32 7, label %188
    i32 6, label %188
    i32 3, label %188
  ]

90:                                               ; preds = %84
  %91 = getelementptr %struct.sv, ptr %0, i64 -1, i32 1
  store ptr %91, ptr %0, align 8, !tbaa !26
  %92 = getelementptr %struct.sv, ptr %0, i64 0, i32 3
  store i64 0, ptr %92, align 8, !tbaa !17
  br label %313

93:                                               ; preds = %84
  %94 = getelementptr inbounds %struct.sv, ptr %0, i64 -1
  store ptr %94, ptr %0, align 8, !tbaa !26
  %95 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  store double 0.000000e+00, ptr %95, align 8, !tbaa !17
  br label %313

96:                                               ; preds = %84, %84
  %97 = getelementptr inbounds [16 x ptr], ptr @PL_body_roots, i64 0, i64 %85
  %98 = load ptr, ptr %97, align 8, !tbaa !9
  %99 = icmp eq ptr %98, null
  %100 = load i8, ptr %86, align 8, !tbaa !42
  %101 = zext i8 %100 to i64
  br i1 %99, label %102, label %145

102:                                              ; preds = %96
  %103 = getelementptr inbounds [16 x %struct.body_details], ptr @bodies_by_type, i64 0, i64 %85, i32 4
  %104 = load i32, ptr %103, align 4, !tbaa !44
  %105 = zext i32 %104 to i64
  %106 = load ptr, ptr @PL_body_arenas, align 8, !tbaa !9
  %107 = icmp eq ptr %106, null
  br i1 %107, label %114, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %struct.arena_set, ptr %106, i64 0, i32 2
  %110 = load i32, ptr %109, align 4, !tbaa !29
  %111 = getelementptr inbounds %struct.arena_set, ptr %106, i64 0, i32 1
  %112 = load i32, ptr %111, align 8, !tbaa !37
  %113 = icmp ult i32 %110, %112
  br i1 %113, label %119, label %114

114:                                              ; preds = %108, %102
  %115 = tail call ptr @Perl_safesyscalloc(i64 noundef 1, i64 noundef 4072) #17
  %116 = getelementptr inbounds %struct.arena_set, ptr %115, i64 0, i32 1
  store i32 169, ptr %116, align 8, !tbaa !37
  store ptr %106, ptr %115, align 8, !tbaa !35
  store ptr %115, ptr @PL_body_arenas, align 8, !tbaa !9
  %117 = getelementptr inbounds %struct.arena_set, ptr %115, i64 0, i32 2
  %118 = load i32, ptr %117, align 4, !tbaa !29
  br label %119

119:                                              ; preds = %114, %108
  %120 = phi i32 [ %118, %114 ], [ %110, %108 ]
  %121 = phi ptr [ %115, %114 ], [ %106, %108 ]
  %122 = getelementptr inbounds %struct.arena_set, ptr %121, i64 0, i32 2
  %123 = add i32 %120, 1
  store i32 %123, ptr %122, align 4, !tbaa !29
  %124 = zext i32 %120 to i64
  %125 = getelementptr inbounds %struct.arena_set, ptr %121, i64 0, i32 3, i64 %124
  %126 = tail call ptr @Perl_safesysmalloc(i64 noundef %105) #17
  store ptr %126, ptr %125, align 8, !tbaa !31
  %127 = getelementptr inbounds %struct.arena_set, ptr %121, i64 0, i32 3, i64 %124, i32 1
  store i64 %105, ptr %127, align 8, !tbaa !38
  %128 = getelementptr inbounds %struct.arena_set, ptr %121, i64 0, i32 3, i64 %124, i32 2
  store i32 %81, ptr %128, align 8, !tbaa !39
  %129 = zext i8 %100 to i32
  %130 = urem i32 %104, %129
  %131 = zext i32 %130 to i64
  %132 = sub nuw nsw i64 %105, %131
  %133 = getelementptr inbounds i8, ptr %126, i64 %132
  store ptr %126, ptr %97, align 8, !tbaa !9
  %134 = icmp ugt i64 %132, %101
  br i1 %134, label %135, label %142

135:                                              ; preds = %119
  %136 = getelementptr inbounds i8, ptr %126, i64 %101
  br label %137

137:                                              ; preds = %137, %135
  %138 = phi ptr [ %140, %137 ], [ %136, %135 ]
  %139 = phi ptr [ %138, %137 ], [ %126, %135 ]
  store ptr %138, ptr %139, align 8, !tbaa !9
  %140 = getelementptr inbounds i8, ptr %138, i64 %101
  %141 = icmp ult ptr %140, %133
  br i1 %141, label %137, label %142

142:                                              ; preds = %137, %119
  %143 = phi ptr [ %126, %119 ], [ %138, %137 ]
  store ptr null, ptr %143, align 8, !tbaa !9
  %144 = load ptr, ptr %97, align 8, !tbaa !9
  br label %145

145:                                              ; preds = %96, %142
  %146 = phi ptr [ %144, %142 ], [ %98, %96 ]
  %147 = load ptr, ptr %146, align 8, !tbaa !9
  store ptr %147, ptr %97, align 8, !tbaa !9
  tail call void @llvm.memset.p0.i64(ptr nonnull align 1 %146, i8 0, i64 %101, i1 false)
  %148 = getelementptr inbounds %struct.body_details, ptr @bodies_by_type, i64 %85, i32 2
  %149 = load i8, ptr %148, align 2, !tbaa !45
  %150 = zext i8 %149 to i64
  %151 = sub nsw i64 0, %150
  %152 = getelementptr inbounds i8, ptr %146, i64 %151
  store ptr %152, ptr %0, align 8, !tbaa !26
  %153 = icmp eq i32 %81, 11
  br i1 %153, label %154, label %163

154:                                              ; preds = %145
  %155 = getelementptr inbounds %struct.xpvav, ptr %152, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %155, i8 -1, i64 16, i1 false)
  %156 = load i32, ptr %3, align 4, !tbaa !16
  %157 = and i32 %156, 1073741823
  %158 = or i32 %157, 1073741824
  store i32 %158, ptr %3, align 4, !tbaa !16
  %159 = load i8, ptr %80, align 4, !tbaa !42
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %177, label %161

161:                                              ; preds = %154
  %162 = getelementptr inbounds %struct.xpvav, ptr %152, i64 0, i32 4
  store ptr null, ptr %162, align 8, !tbaa !46
  br label %177

163:                                              ; preds = %145
  %164 = load i32, ptr %3, align 4, !tbaa !16
  %165 = and i32 %164, 1610547455
  store i32 %165, ptr %3, align 4, !tbaa !16
  %166 = and i32 %164, 33554432
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %172, label %168

168:                                              ; preds = %163
  %169 = tail call i32 @Perl_sv_backoff(ptr noundef nonnull %0)
  %170 = load i32, ptr %3, align 4, !tbaa !16
  %171 = load ptr, ptr %0, align 8, !tbaa !26
  br label %172

172:                                              ; preds = %168, %163
  %173 = phi ptr [ %171, %168 ], [ %152, %163 ]
  %174 = phi i32 [ %170, %168 ], [ %165, %163 ]
  %175 = or i32 %174, 536870912
  store i32 %175, ptr %3, align 4, !tbaa !16
  %176 = getelementptr inbounds %struct.xpvhv, ptr %173, i64 0, i32 3
  store i64 7, ptr %176, align 8, !tbaa !48
  br label %177

177:                                              ; preds = %161, %154, %172
  %178 = phi ptr [ %152, %161 ], [ %152, %154 ], [ %173, %172 ]
  %179 = icmp ugt i32 %5, 6
  br i1 %179, label %180, label %186

180:                                              ; preds = %177
  %181 = getelementptr inbounds %struct.xpvmg, ptr %16, i64 0, i32 1
  %182 = load ptr, ptr %181, align 8, !tbaa !17
  %183 = getelementptr inbounds %struct.xpvmg, ptr %178, i64 0, i32 1
  store ptr %182, ptr %183, align 8, !tbaa !17
  %184 = load ptr, ptr %16, align 8, !tbaa !50
  %185 = load ptr, ptr %0, align 8, !tbaa !26
  store ptr %184, ptr %185, align 8, !tbaa !50
  br label %303

186:                                              ; preds = %177
  %187 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  store ptr null, ptr %187, align 8, !tbaa !17
  br label %303

188:                                              ; preds = %84, %84, %84, %84, %84, %84, %84, %84, %84, %84, %84
  %189 = getelementptr inbounds %struct.body_details, ptr @bodies_by_type, i64 %85, i32 3
  %190 = load i8, ptr %189, align 1
  %191 = and i8 %190, 64
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %250, label %193

193:                                              ; preds = %188
  %194 = getelementptr inbounds [16 x ptr], ptr @PL_body_roots, i64 0, i64 %85
  %195 = load ptr, ptr %194, align 8, !tbaa !9
  %196 = icmp eq ptr %195, null
  %197 = load i8, ptr %86, align 8, !tbaa !42
  %198 = zext i8 %197 to i64
  br i1 %196, label %199, label %242

199:                                              ; preds = %193
  %200 = getelementptr inbounds [16 x %struct.body_details], ptr @bodies_by_type, i64 0, i64 %85, i32 4
  %201 = load i32, ptr %200, align 4, !tbaa !44
  %202 = zext i32 %201 to i64
  %203 = load ptr, ptr @PL_body_arenas, align 8, !tbaa !9
  %204 = icmp eq ptr %203, null
  br i1 %204, label %211, label %205

205:                                              ; preds = %199
  %206 = getelementptr inbounds %struct.arena_set, ptr %203, i64 0, i32 2
  %207 = load i32, ptr %206, align 4, !tbaa !29
  %208 = getelementptr inbounds %struct.arena_set, ptr %203, i64 0, i32 1
  %209 = load i32, ptr %208, align 8, !tbaa !37
  %210 = icmp ult i32 %207, %209
  br i1 %210, label %216, label %211

211:                                              ; preds = %205, %199
  %212 = tail call ptr @Perl_safesyscalloc(i64 noundef 1, i64 noundef 4072) #17
  %213 = getelementptr inbounds %struct.arena_set, ptr %212, i64 0, i32 1
  store i32 169, ptr %213, align 8, !tbaa !37
  store ptr %203, ptr %212, align 8, !tbaa !35
  store ptr %212, ptr @PL_body_arenas, align 8, !tbaa !9
  %214 = getelementptr inbounds %struct.arena_set, ptr %212, i64 0, i32 2
  %215 = load i32, ptr %214, align 4, !tbaa !29
  br label %216

216:                                              ; preds = %211, %205
  %217 = phi i32 [ %215, %211 ], [ %207, %205 ]
  %218 = phi ptr [ %212, %211 ], [ %203, %205 ]
  %219 = getelementptr inbounds %struct.arena_set, ptr %218, i64 0, i32 2
  %220 = add i32 %217, 1
  store i32 %220, ptr %219, align 4, !tbaa !29
  %221 = zext i32 %217 to i64
  %222 = getelementptr inbounds %struct.arena_set, ptr %218, i64 0, i32 3, i64 %221
  %223 = tail call ptr @Perl_safesysmalloc(i64 noundef %202) #17
  store ptr %223, ptr %222, align 8, !tbaa !31
  %224 = getelementptr inbounds %struct.arena_set, ptr %218, i64 0, i32 3, i64 %221, i32 1
  store i64 %202, ptr %224, align 8, !tbaa !38
  %225 = getelementptr inbounds %struct.arena_set, ptr %218, i64 0, i32 3, i64 %221, i32 2
  store i32 %81, ptr %225, align 8, !tbaa !39
  %226 = zext i8 %197 to i32
  %227 = urem i32 %201, %226
  %228 = zext i32 %227 to i64
  %229 = sub nuw nsw i64 %202, %228
  %230 = getelementptr inbounds i8, ptr %223, i64 %229
  store ptr %223, ptr %194, align 8, !tbaa !9
  %231 = icmp ugt i64 %229, %198
  br i1 %231, label %232, label %239

232:                                              ; preds = %216
  %233 = getelementptr inbounds i8, ptr %223, i64 %198
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi ptr [ %237, %234 ], [ %233, %232 ]
  %236 = phi ptr [ %235, %234 ], [ %223, %232 ]
  store ptr %235, ptr %236, align 8, !tbaa !9
  %237 = getelementptr inbounds i8, ptr %235, i64 %198
  %238 = icmp ult ptr %237, %230
  br i1 %238, label %234, label %239

239:                                              ; preds = %234, %216
  %240 = phi ptr [ %223, %216 ], [ %235, %234 ]
  store ptr null, ptr %240, align 8, !tbaa !9
  %241 = load ptr, ptr %194, align 8, !tbaa !9
  br label %242

242:                                              ; preds = %193, %239
  %243 = phi ptr [ %241, %239 ], [ %195, %193 ]
  %244 = load ptr, ptr %243, align 8, !tbaa !9
  store ptr %244, ptr %194, align 8, !tbaa !9
  tail call void @llvm.memset.p0.i64(ptr nonnull align 1 %243, i8 0, i64 %198, i1 false)
  %245 = getelementptr inbounds %struct.body_details, ptr @bodies_by_type, i64 %85, i32 2
  %246 = load i8, ptr %245, align 2, !tbaa !45
  %247 = zext i8 %246 to i64
  %248 = sub nsw i64 0, %247
  %249 = getelementptr inbounds i8, ptr %243, i64 %248
  br label %258

250:                                              ; preds = %188
  %251 = load i8, ptr %86, align 8, !tbaa !42
  %252 = zext i8 %251 to i64
  %253 = getelementptr inbounds %struct.body_details, ptr @bodies_by_type, i64 %85, i32 2
  %254 = load i8, ptr %253, align 2, !tbaa !45
  %255 = zext i8 %254 to i64
  %256 = add nuw nsw i64 %255, %252
  %257 = tail call ptr @Perl_safesyscalloc(i64 noundef %256, i64 noundef 1) #17
  br label %258

258:                                              ; preds = %250, %242
  %259 = phi i8 [ %246, %242 ], [ %254, %250 ]
  %260 = phi ptr [ %249, %242 ], [ %257, %250 ]
  store ptr %260, ptr %0, align 8, !tbaa !26
  %261 = getelementptr inbounds %struct.body_details, ptr %80, i64 0, i32 1
  %262 = load i8, ptr %261, align 1, !tbaa !52
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %278, label %264

264:                                              ; preds = %258
  %265 = getelementptr inbounds %struct.body_details, ptr %80, i64 0, i32 2
  %266 = load i8, ptr %265, align 2, !tbaa !45
  %267 = zext i8 %266 to i64
  %268 = zext i8 %262 to i64
  %269 = icmp ugt i8 %259, %266
  %270 = zext i8 %259 to i64
  %271 = sub nsw i64 %267, %270
  %272 = tail call i8 @llvm.umax.i8(i8 %259, i8 %266)
  %273 = select i1 %269, i64 %271, i64 0
  %274 = add nsw i64 %273, %268
  %275 = zext i8 %272 to i64
  %276 = getelementptr inbounds i8, ptr %260, i64 %275
  %277 = getelementptr inbounds i8, ptr %16, i64 %275
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %276, ptr align 1 %277, i64 %274, i1 false)
  br label %278

278:                                              ; preds = %264, %258
  switch i32 %81, label %298 [
    i32 15, label %279
    i32 8, label %296
  ]

279:                                              ; preds = %278
  %280 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.2, i64 noundef 10, i32 noundef 1, i32 noundef 12) #17
  %281 = load i32, ptr %3, align 4, !tbaa !53
  %282 = or i32 %281, 1048576
  store i32 %282, ptr %3, align 4, !tbaa !53
  %283 = load ptr, ptr @PL_stashcache, align 8, !tbaa !9
  tail call void @Perl_hv_clear(ptr noundef %283) #17
  %284 = getelementptr inbounds %struct.gv, ptr %280, i64 0, i32 3
  %285 = load ptr, ptr %284, align 8, !tbaa !17
  %286 = getelementptr inbounds %struct.gp, ptr %285, i64 0, i32 5
  %287 = load ptr, ptr %286, align 8, !tbaa !22
  %288 = icmp eq ptr %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %279
  %290 = getelementptr inbounds %struct.sv, ptr %287, i64 0, i32 1
  %291 = load i32, ptr %290, align 8, !tbaa !13
  %292 = add i32 %291, 1
  store i32 %292, ptr %290, align 8, !tbaa !13
  br label %293

293:                                              ; preds = %279, %289
  %294 = load ptr, ptr %0, align 8, !tbaa !9
  store ptr %287, ptr %294, align 8, !tbaa !50
  %295 = getelementptr inbounds %struct.xpvio, ptr %294, i64 0, i32 8
  store i64 60, ptr %295, align 8, !tbaa !55
  br label %298

296:                                              ; preds = %278
  %297 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  store ptr %260, ptr %297, align 8, !tbaa !17
  br label %303

298:                                              ; preds = %293, %278
  %299 = icmp ult i32 %5, 3
  br i1 %299, label %300, label %303

300:                                              ; preds = %298
  %301 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  store ptr %79, ptr %301, align 8, !tbaa !17
  br label %303

302:                                              ; preds = %84
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.3, i64 noundef %85) #17
  br label %303

303:                                              ; preds = %296, %300, %298, %180, %186, %302
  %304 = load i8, ptr %80, align 4, !tbaa !42
  %305 = icmp eq i8 %304, 0
  br i1 %305, label %313, label %306

306:                                              ; preds = %303
  %307 = getelementptr inbounds %struct.body_details, ptr %80, i64 0, i32 2
  %308 = load i8, ptr %307, align 2, !tbaa !45
  %309 = zext i8 %308 to i64
  %310 = getelementptr inbounds i8, ptr %16, i64 %309
  %311 = getelementptr inbounds [16 x ptr], ptr @PL_body_roots, i64 0, i64 %6
  %312 = load ptr, ptr %311, align 8, !tbaa !9
  store ptr %312, ptr %310, align 8, !tbaa !9
  store ptr %310, ptr %311, align 8, !tbaa !9
  br label %313

313:                                              ; preds = %303, %306, %2, %93, %90
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_force_normal_flags(ptr noundef %0, i32 noundef %1) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 134283264
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @Perl_croak_no_modify() #17
  br label %64

8:                                                ; preds = %2
  %9 = and i32 %4, 268435456
  %10 = icmp eq i32 %9, 0
  %11 = and i32 %4, 255
  %12 = icmp eq i32 %11, 12
  %13 = or i1 %10, %12
  br i1 %13, label %64, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = load ptr, ptr %0, align 8, !tbaa !26
  %18 = getelementptr inbounds %struct.xpv, ptr %17, i64 0, i32 3
  %19 = load i64, ptr %18, align 8, !tbaa !17
  %20 = getelementptr inbounds %struct.xpv, ptr %17, i64 0, i32 2
  %21 = load i64, ptr %20, align 8, !tbaa !57
  %22 = and i32 %4, -268435457
  store i32 %22, ptr %3, align 4, !tbaa !16
  %23 = icmp eq i64 %19, 0
  br i1 %23, label %33, label %24

24:                                               ; preds = %14
  %25 = load i64, ptr %18, align 8, !tbaa !17
  %26 = getelementptr inbounds i8, ptr %16, i64 %25
  %27 = getelementptr inbounds i8, ptr %26, i64 -1
  %28 = load i8, ptr %27, align 1, !tbaa !17
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %64, label %30

30:                                               ; preds = %24
  %31 = add i8 %28, -1
  store i8 %31, ptr %27, align 1, !tbaa !17
  %32 = load ptr, ptr %0, align 8, !tbaa !26
  br label %33

33:                                               ; preds = %30, %14
  %34 = phi ptr [ %32, %30 ], [ %17, %14 ]
  store ptr null, ptr %15, align 8, !tbaa !17
  %35 = getelementptr inbounds %struct.xpv, ptr %34, i64 0, i32 2
  %36 = and i32 %1, 4
  %37 = icmp eq i32 %36, 0
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %35, i8 0, i64 16, i1 false)
  %38 = load i32, ptr %3, align 4, !tbaa !16
  br i1 %37, label %41, label %39

39:                                               ; preds = %33
  %40 = and i32 %38, -17409
  store i32 %40, ptr %3, align 4, !tbaa !16
  br label %61

41:                                               ; preds = %33
  %42 = and i32 %38, 268435456
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = add i64 %21, 1
  br label %52

46:                                               ; preds = %41
  %47 = load ptr, ptr %0, align 8, !tbaa !26
  %48 = getelementptr inbounds %struct.xpv, ptr %47, i64 0, i32 3
  %49 = load i64, ptr %48, align 8, !tbaa !17
  %50 = add i64 %21, 1
  %51 = icmp ult i64 %49, %50
  br i1 %51, label %52, label %55

52:                                               ; preds = %46, %44
  %53 = phi i64 [ %45, %44 ], [ %50, %46 ]
  %54 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %53)
  br label %55

55:                                               ; preds = %52, %46
  %56 = load ptr, ptr %15, align 8, !tbaa !17
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %56, ptr align 1 %16, i64 %21, i1 false)
  %57 = load ptr, ptr %0, align 8, !tbaa !26
  %58 = getelementptr inbounds %struct.xpv, ptr %57, i64 0, i32 2
  store i64 %21, ptr %58, align 8, !tbaa !57
  %59 = load ptr, ptr %15, align 8, !tbaa !17
  %60 = getelementptr inbounds i8, ptr %59, i64 %21
  store i8 0, ptr %60, align 1, !tbaa !17
  br label %61

61:                                               ; preds = %55, %39
  br i1 %23, label %62, label %64

62:                                               ; preds = %61
  %63 = getelementptr inbounds i8, ptr %16, i64 -8
  tail call void @Perl_unshare_hek(ptr noundef nonnull %63) #17
  br label %64

64:                                               ; preds = %62, %61, %24, %8, %7
  %65 = load i32, ptr %3, align 4, !tbaa !16
  %66 = and i32 %65, 2048
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %69, label %68

68:                                               ; preds = %64
  tail call void @Perl_sv_unref_flags(ptr noundef nonnull %0, i32 noundef %1)
  br label %526

69:                                               ; preds = %64
  %70 = and i32 %65, 16826368
  %71 = icmp eq i32 %70, 16809984
  br i1 %71, label %72, label %387

72:                                               ; preds = %69
  %73 = and i32 %65, 255
  %74 = add nsw i32 %73, -9
  %75 = icmp ult i32 %74, 2
  br i1 %75, label %76, label %392

76:                                               ; preds = %72
  %77 = and i32 %1, 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = and i32 %65, -16777217
  store i32 %80, ptr %3, align 4, !tbaa !16
  br label %133

81:                                               ; preds = %76
  %82 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %83 = icmp eq ptr %82, null
  br i1 %83, label %84, label %113

84:                                               ; preds = %81
  %85 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %86 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %86, ptr %85, align 8, !tbaa !26
  %87 = getelementptr inbounds %struct.sv, ptr %85, i64 0, i32 1
  store i32 170, ptr %87, align 8, !tbaa !13
  %88 = getelementptr inbounds %struct.sv, ptr %85, i64 0, i32 2
  store i32 0, ptr %88, align 4, !tbaa !16
  store ptr %85, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %89 = getelementptr inbounds %struct.sv, ptr %85, i64 1
  store ptr %89, ptr @PL_sv_root, align 8, !tbaa !9
  br label %90

90:                                               ; preds = %90, %84
  %91 = phi ptr [ %89, %84 ], [ %108, %90 ]
  %92 = phi i64 [ 1, %84 ], [ %107, %90 ]
  %93 = getelementptr inbounds %struct.sv, ptr %91, i64 1
  store ptr %93, ptr %91, align 8, !tbaa !26
  %94 = getelementptr inbounds %struct.sv, ptr %85, i64 %92, i32 2
  store i32 255, ptr %94, align 4, !tbaa !16
  %95 = add nuw nsw i64 %92, 1
  %96 = getelementptr inbounds %struct.sv, ptr %85, i64 %95
  %97 = getelementptr inbounds %struct.sv, ptr %96, i64 1
  store ptr %97, ptr %96, align 8, !tbaa !26
  %98 = getelementptr inbounds %struct.sv, ptr %85, i64 %95, i32 2
  store i32 255, ptr %98, align 4, !tbaa !16
  %99 = add nuw nsw i64 %92, 2
  %100 = getelementptr inbounds %struct.sv, ptr %85, i64 %99
  %101 = getelementptr inbounds %struct.sv, ptr %100, i64 1
  store ptr %101, ptr %100, align 8, !tbaa !26
  %102 = getelementptr inbounds %struct.sv, ptr %85, i64 %99, i32 2
  store i32 255, ptr %102, align 4, !tbaa !16
  %103 = add nuw nsw i64 %92, 3
  %104 = getelementptr inbounds %struct.sv, ptr %85, i64 %103
  %105 = getelementptr inbounds %struct.sv, ptr %104, i64 1
  store ptr %105, ptr %104, align 8, !tbaa !26
  %106 = getelementptr inbounds %struct.sv, ptr %85, i64 %103, i32 2
  store i32 255, ptr %106, align 4, !tbaa !16
  %107 = add nuw nsw i64 %92, 4
  %108 = getelementptr inbounds %struct.sv, ptr %85, i64 %107
  %109 = icmp eq i64 %107, 169
  br i1 %109, label %110, label %90, !llvm.loop !59

110:                                              ; preds = %90
  store ptr null, ptr %108, align 8, !tbaa !26
  %111 = getelementptr inbounds %struct.sv, ptr %85, i64 169, i32 2
  store i32 255, ptr %111, align 4, !tbaa !16
  %112 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %113

113:                                              ; preds = %110, %81
  %114 = phi ptr [ %112, %110 ], [ %82, %81 ]
  %115 = load ptr, ptr %114, align 8, !tbaa !26
  store ptr %115, ptr @PL_sv_root, align 8, !tbaa !9
  %116 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %117 = add nsw i64 %116, 1
  store i64 %117, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %114, align 8, !tbaa !26
  %118 = getelementptr inbounds %struct.sv, ptr %114, i64 0, i32 1
  store i32 1, ptr %118, align 8, !tbaa !13
  %119 = getelementptr inbounds %struct.sv, ptr %114, i64 0, i32 2
  store i32 524288, ptr %119, align 4, !tbaa !16
  %120 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %121 = add nsw i64 %120, 1
  store i64 %121, ptr @PL_tmps_ix, align 8, !tbaa !60
  %122 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %123 = icmp slt i64 %121, %122
  br i1 %123, label %126, label %124

124:                                              ; preds = %113
  %125 = tail call i64 @Perl_tmps_grow_p(i64 noundef %121) #17
  br label %126

126:                                              ; preds = %124, %113
  %127 = phi i64 [ %125, %124 ], [ %121, %113 ]
  %128 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %129 = getelementptr inbounds ptr, ptr %128, i64 %127
  store ptr %114, ptr %129, align 8, !tbaa !9
  %130 = load i32, ptr %3, align 4, !tbaa !16
  %131 = and i32 %130, -16777217
  store i32 %131, ptr %3, align 4, !tbaa !16
  tail call void @Perl_gv_efullname4(ptr noundef nonnull %114, ptr noundef nonnull %0, ptr noundef nonnull @.str.9, i1 noundef zeroext true) #17
  %132 = load i32, ptr %3, align 4, !tbaa !16
  br label %133

133:                                              ; preds = %126, %79
  %134 = phi i32 [ %80, %79 ], [ %132, %126 ]
  %135 = phi ptr [ null, %79 ], [ %114, %126 ]
  %136 = and i32 %134, 134283264
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %146, label %138

138:                                              ; preds = %133
  %139 = icmp eq ptr %0, @PL_sv_undef
  %140 = icmp eq ptr %0, @PL_sv_yes
  %141 = or i1 %139, %140
  %142 = icmp eq ptr %0, @PL_sv_no
  %143 = or i1 %142, %141
  %144 = icmp eq ptr %0, @PL_sv_placeholder
  %145 = or i1 %144, %143
  br i1 %145, label %160, label %146

146:                                              ; preds = %138, %133
  %147 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %148 = add nsw i64 %147, 1
  store i64 %148, ptr @PL_tmps_ix, align 8, !tbaa !60
  %149 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %150 = icmp slt i64 %148, %149
  br i1 %150, label %154, label %151

151:                                              ; preds = %146
  %152 = tail call i64 @Perl_tmps_grow_p(i64 noundef %148) #17
  %153 = load i32, ptr %3, align 4, !tbaa !16
  br label %154

154:                                              ; preds = %151, %146
  %155 = phi i32 [ %153, %151 ], [ %134, %146 ]
  %156 = phi i64 [ %152, %151 ], [ %148, %146 ]
  %157 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %158 = getelementptr inbounds ptr, ptr %157, i64 %156
  store ptr %0, ptr %158, align 8, !tbaa !9
  %159 = or i32 %155, 524288
  store i32 %159, ptr %3, align 4, !tbaa !16
  br label %160

160:                                              ; preds = %138, %154
  %161 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  %162 = load i32, ptr %161, align 8, !tbaa !13
  %163 = add i32 %162, 1
  store i32 %163, ptr %161, align 8, !tbaa !13
  %164 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %165 = load ptr, ptr %164, align 8, !tbaa !17
  %166 = icmp eq ptr %165, null
  br i1 %166, label %204, label %167

167:                                              ; preds = %160
  %168 = getelementptr inbounds %struct.gp, ptr %165, i64 0, i32 3
  %169 = load i32, ptr %168, align 8, !tbaa !61
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %203

171:                                              ; preds = %167
  %172 = getelementptr inbounds %struct.gp, ptr %165, i64 0, i32 2
  %173 = load ptr, ptr %172, align 8, !tbaa !23
  %174 = icmp eq ptr %173, null
  br i1 %174, label %203, label %175

175:                                              ; preds = %171
  %176 = load ptr, ptr %0, align 8, !tbaa !62
  %177 = getelementptr inbounds %struct.xpvgv, ptr %176, i64 0, i32 5
  %178 = load ptr, ptr %177, align 8, !tbaa !17
  %179 = icmp eq ptr %178, null
  br i1 %179, label %203, label %180

180:                                              ; preds = %175
  %181 = getelementptr inbounds %struct.hv, ptr %178, i64 0, i32 2
  %182 = load i32, ptr %181, align 4, !tbaa !64
  %183 = and i32 %182, 33554432
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %203, label %185

185:                                              ; preds = %180
  %186 = getelementptr inbounds %struct.hv, ptr %178, i64 0, i32 3
  %187 = load ptr, ptr %186, align 8, !tbaa !17
  %188 = load ptr, ptr %178, align 8, !tbaa !66
  %189 = getelementptr inbounds %struct.xpvhv, ptr %188, i64 0, i32 3
  %190 = load i64, ptr %189, align 8, !tbaa !48
  %191 = add i64 %190, 1
  %192 = getelementptr inbounds ptr, ptr %187, i64 %191
  %193 = load ptr, ptr %192, align 8, !tbaa !17
  %194 = icmp eq ptr %193, null
  br i1 %194, label %203, label %195

195:                                              ; preds = %185
  %196 = getelementptr inbounds %struct.xpvhv_aux, ptr %192, i64 0, i32 4
  %197 = load i32, ptr %196, align 4, !tbaa !67
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %202, label %199

199:                                              ; preds = %195
  %200 = load ptr, ptr %193, align 8, !tbaa !9
  %201 = icmp eq ptr %200, null
  br i1 %201, label %203, label %202

202:                                              ; preds = %199, %195
  tail call void @Perl_mro_method_changed_in(ptr noundef nonnull %178) #17
  br label %203

203:                                              ; preds = %202, %199, %185, %180, %175, %171, %167
  tail call void @Perl_gp_free(ptr noundef nonnull %0) #17
  br label %204

204:                                              ; preds = %203, %160
  %205 = load ptr, ptr %0, align 8, !tbaa !26
  %206 = getelementptr inbounds %struct.xpvgv, ptr %205, i64 0, i32 5
  %207 = load ptr, ptr %206, align 8, !tbaa !17
  %208 = icmp eq ptr %207, null
  br i1 %208, label %213, label %209

209:                                              ; preds = %204
  tail call void @Perl_sv_del_backref(ptr noundef nonnull %207, ptr noundef nonnull %0)
  %210 = load ptr, ptr %0, align 8, !tbaa !26
  %211 = getelementptr inbounds %struct.xpvgv, ptr %210, i64 0, i32 5
  store ptr null, ptr %211, align 8, !tbaa !17
  %212 = load ptr, ptr %0, align 8, !tbaa !26
  br label %213

213:                                              ; preds = %209, %204
  %214 = phi ptr [ %212, %209 ], [ %205, %204 ]
  %215 = getelementptr inbounds %struct.xpvgv, ptr %214, i64 0, i32 2
  %216 = load i64, ptr %215, align 8, !tbaa !69
  %217 = and i64 %216, -3
  store i64 %217, ptr %215, align 8, !tbaa !69
  %218 = getelementptr inbounds %struct.xpvgv, ptr %214, i64 0, i32 4
  %219 = load ptr, ptr %218, align 8, !tbaa !17
  %220 = icmp eq ptr %219, null
  br i1 %220, label %222, label %221

221:                                              ; preds = %213
  tail call void @Perl_unshare_hek(ptr noundef nonnull %219) #17
  br label %222

222:                                              ; preds = %221, %213
  %223 = load i32, ptr %3, align 4, !tbaa !16
  %224 = and i32 %223, -32769
  store i32 %224, ptr %3, align 4, !tbaa !16
  %225 = and i32 %223, 255
  %226 = icmp eq i32 %225, 9
  br i1 %226, label %227, label %348

227:                                              ; preds = %222
  %228 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_body_roots, i64 0, i64 7), align 8, !tbaa !9
  %229 = icmp eq ptr %228, null
  br i1 %229, label %230, label %339

230:                                              ; preds = %227
  %231 = load ptr, ptr @PL_body_arenas, align 8, !tbaa !9
  %232 = icmp eq ptr %231, null
  br i1 %232, label %239, label %233

233:                                              ; preds = %230
  %234 = getelementptr inbounds %struct.arena_set, ptr %231, i64 0, i32 2
  %235 = load i32, ptr %234, align 4, !tbaa !29
  %236 = getelementptr inbounds %struct.arena_set, ptr %231, i64 0, i32 1
  %237 = load i32, ptr %236, align 8, !tbaa !37
  %238 = icmp ult i32 %235, %237
  br i1 %238, label %244, label %239

239:                                              ; preds = %233, %230
  %240 = tail call ptr @Perl_safesyscalloc(i64 noundef 1, i64 noundef 4072) #17
  %241 = getelementptr inbounds %struct.arena_set, ptr %240, i64 0, i32 1
  store i32 169, ptr %241, align 8, !tbaa !37
  store ptr %231, ptr %240, align 8, !tbaa !35
  store ptr %240, ptr @PL_body_arenas, align 8, !tbaa !9
  %242 = getelementptr inbounds %struct.arena_set, ptr %240, i64 0, i32 2
  %243 = load i32, ptr %242, align 4, !tbaa !29
  br label %244

244:                                              ; preds = %239, %233
  %245 = phi i32 [ %243, %239 ], [ %235, %233 ]
  %246 = phi ptr [ %240, %239 ], [ %231, %233 ]
  %247 = getelementptr inbounds %struct.arena_set, ptr %246, i64 0, i32 2
  %248 = add i32 %245, 1
  store i32 %248, ptr %247, align 4, !tbaa !29
  %249 = zext i32 %245 to i64
  %250 = getelementptr inbounds %struct.arena_set, ptr %246, i64 0, i32 3, i64 %249
  %251 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  store ptr %251, ptr %250, align 8, !tbaa !31
  %252 = getelementptr inbounds %struct.arena_set, ptr %246, i64 0, i32 3, i64 %249, i32 1
  store i64 4080, ptr %252, align 8, !tbaa !38
  %253 = getelementptr inbounds %struct.arena_set, ptr %246, i64 0, i32 3, i64 %249, i32 2
  store i32 7, ptr %253, align 8, !tbaa !39
  store ptr %251, ptr getelementptr inbounds ([16 x ptr], ptr @PL_body_roots, i64 0, i64 7), align 8, !tbaa !9
  %254 = getelementptr inbounds i8, ptr %251, i64 48
  store ptr %254, ptr %251, align 8, !tbaa !9
  %255 = getelementptr inbounds i8, ptr %251, i64 96
  store ptr %255, ptr %254, align 8, !tbaa !9
  %256 = getelementptr inbounds i8, ptr %251, i64 144
  store ptr %256, ptr %255, align 8, !tbaa !9
  %257 = getelementptr inbounds i8, ptr %251, i64 192
  store ptr %257, ptr %256, align 8, !tbaa !9
  %258 = getelementptr inbounds i8, ptr %251, i64 240
  store ptr %258, ptr %257, align 8, !tbaa !9
  %259 = getelementptr inbounds i8, ptr %251, i64 288
  store ptr %259, ptr %258, align 8, !tbaa !9
  %260 = getelementptr inbounds i8, ptr %251, i64 336
  store ptr %260, ptr %259, align 8, !tbaa !9
  %261 = getelementptr inbounds i8, ptr %251, i64 384
  store ptr %261, ptr %260, align 8, !tbaa !9
  %262 = getelementptr inbounds i8, ptr %251, i64 432
  store ptr %262, ptr %261, align 8, !tbaa !9
  %263 = getelementptr inbounds i8, ptr %251, i64 480
  store ptr %263, ptr %262, align 8, !tbaa !9
  %264 = getelementptr inbounds i8, ptr %251, i64 528
  store ptr %264, ptr %263, align 8, !tbaa !9
  %265 = getelementptr inbounds i8, ptr %251, i64 576
  store ptr %265, ptr %264, align 8, !tbaa !9
  %266 = getelementptr inbounds i8, ptr %251, i64 624
  store ptr %266, ptr %265, align 8, !tbaa !9
  %267 = getelementptr inbounds i8, ptr %251, i64 672
  store ptr %267, ptr %266, align 8, !tbaa !9
  %268 = getelementptr inbounds i8, ptr %251, i64 720
  store ptr %268, ptr %267, align 8, !tbaa !9
  %269 = getelementptr inbounds i8, ptr %251, i64 768
  store ptr %269, ptr %268, align 8, !tbaa !9
  %270 = getelementptr inbounds i8, ptr %251, i64 816
  store ptr %270, ptr %269, align 8, !tbaa !9
  %271 = getelementptr inbounds i8, ptr %251, i64 864
  store ptr %271, ptr %270, align 8, !tbaa !9
  %272 = getelementptr inbounds i8, ptr %251, i64 912
  store ptr %272, ptr %271, align 8, !tbaa !9
  %273 = getelementptr inbounds i8, ptr %251, i64 960
  store ptr %273, ptr %272, align 8, !tbaa !9
  %274 = getelementptr inbounds i8, ptr %251, i64 1008
  store ptr %274, ptr %273, align 8, !tbaa !9
  %275 = getelementptr inbounds i8, ptr %251, i64 1056
  store ptr %275, ptr %274, align 8, !tbaa !9
  %276 = getelementptr inbounds i8, ptr %251, i64 1104
  store ptr %276, ptr %275, align 8, !tbaa !9
  %277 = getelementptr inbounds i8, ptr %251, i64 1152
  store ptr %277, ptr %276, align 8, !tbaa !9
  %278 = getelementptr inbounds i8, ptr %251, i64 1200
  store ptr %278, ptr %277, align 8, !tbaa !9
  %279 = getelementptr inbounds i8, ptr %251, i64 1248
  store ptr %279, ptr %278, align 8, !tbaa !9
  %280 = getelementptr inbounds i8, ptr %251, i64 1296
  store ptr %280, ptr %279, align 8, !tbaa !9
  %281 = getelementptr inbounds i8, ptr %251, i64 1344
  store ptr %281, ptr %280, align 8, !tbaa !9
  %282 = getelementptr inbounds i8, ptr %251, i64 1392
  store ptr %282, ptr %281, align 8, !tbaa !9
  %283 = getelementptr inbounds i8, ptr %251, i64 1440
  store ptr %283, ptr %282, align 8, !tbaa !9
  %284 = getelementptr inbounds i8, ptr %251, i64 1488
  store ptr %284, ptr %283, align 8, !tbaa !9
  %285 = getelementptr inbounds i8, ptr %251, i64 1536
  store ptr %285, ptr %284, align 8, !tbaa !9
  %286 = getelementptr inbounds i8, ptr %251, i64 1584
  store ptr %286, ptr %285, align 8, !tbaa !9
  %287 = getelementptr inbounds i8, ptr %251, i64 1632
  store ptr %287, ptr %286, align 8, !tbaa !9
  %288 = getelementptr inbounds i8, ptr %251, i64 1680
  store ptr %288, ptr %287, align 8, !tbaa !9
  %289 = getelementptr inbounds i8, ptr %251, i64 1728
  store ptr %289, ptr %288, align 8, !tbaa !9
  %290 = getelementptr inbounds i8, ptr %251, i64 1776
  store ptr %290, ptr %289, align 8, !tbaa !9
  %291 = getelementptr inbounds i8, ptr %251, i64 1824
  store ptr %291, ptr %290, align 8, !tbaa !9
  %292 = getelementptr inbounds i8, ptr %251, i64 1872
  store ptr %292, ptr %291, align 8, !tbaa !9
  %293 = getelementptr inbounds i8, ptr %251, i64 1920
  store ptr %293, ptr %292, align 8, !tbaa !9
  %294 = getelementptr inbounds i8, ptr %251, i64 1968
  store ptr %294, ptr %293, align 8, !tbaa !9
  %295 = getelementptr inbounds i8, ptr %251, i64 2016
  store ptr %295, ptr %294, align 8, !tbaa !9
  %296 = getelementptr inbounds i8, ptr %251, i64 2064
  store ptr %296, ptr %295, align 8, !tbaa !9
  %297 = getelementptr inbounds i8, ptr %251, i64 2112
  store ptr %297, ptr %296, align 8, !tbaa !9
  %298 = getelementptr inbounds i8, ptr %251, i64 2160
  store ptr %298, ptr %297, align 8, !tbaa !9
  %299 = getelementptr inbounds i8, ptr %251, i64 2208
  store ptr %299, ptr %298, align 8, !tbaa !9
  %300 = getelementptr inbounds i8, ptr %251, i64 2256
  store ptr %300, ptr %299, align 8, !tbaa !9
  %301 = getelementptr inbounds i8, ptr %251, i64 2304
  store ptr %301, ptr %300, align 8, !tbaa !9
  %302 = getelementptr inbounds i8, ptr %251, i64 2352
  store ptr %302, ptr %301, align 8, !tbaa !9
  %303 = getelementptr inbounds i8, ptr %251, i64 2400
  store ptr %303, ptr %302, align 8, !tbaa !9
  %304 = getelementptr inbounds i8, ptr %251, i64 2448
  store ptr %304, ptr %303, align 8, !tbaa !9
  %305 = getelementptr inbounds i8, ptr %251, i64 2496
  store ptr %305, ptr %304, align 8, !tbaa !9
  %306 = getelementptr inbounds i8, ptr %251, i64 2544
  store ptr %306, ptr %305, align 8, !tbaa !9
  %307 = getelementptr inbounds i8, ptr %251, i64 2592
  store ptr %307, ptr %306, align 8, !tbaa !9
  %308 = getelementptr inbounds i8, ptr %251, i64 2640
  store ptr %308, ptr %307, align 8, !tbaa !9
  %309 = getelementptr inbounds i8, ptr %251, i64 2688
  store ptr %309, ptr %308, align 8, !tbaa !9
  %310 = getelementptr inbounds i8, ptr %251, i64 2736
  store ptr %310, ptr %309, align 8, !tbaa !9
  %311 = getelementptr inbounds i8, ptr %251, i64 2784
  store ptr %311, ptr %310, align 8, !tbaa !9
  %312 = getelementptr inbounds i8, ptr %251, i64 2832
  store ptr %312, ptr %311, align 8, !tbaa !9
  %313 = getelementptr inbounds i8, ptr %251, i64 2880
  store ptr %313, ptr %312, align 8, !tbaa !9
  %314 = getelementptr inbounds i8, ptr %251, i64 2928
  store ptr %314, ptr %313, align 8, !tbaa !9
  %315 = getelementptr inbounds i8, ptr %251, i64 2976
  store ptr %315, ptr %314, align 8, !tbaa !9
  %316 = getelementptr inbounds i8, ptr %251, i64 3024
  store ptr %316, ptr %315, align 8, !tbaa !9
  %317 = getelementptr inbounds i8, ptr %251, i64 3072
  store ptr %317, ptr %316, align 8, !tbaa !9
  %318 = getelementptr inbounds i8, ptr %251, i64 3120
  store ptr %318, ptr %317, align 8, !tbaa !9
  %319 = getelementptr inbounds i8, ptr %251, i64 3168
  store ptr %319, ptr %318, align 8, !tbaa !9
  %320 = getelementptr inbounds i8, ptr %251, i64 3216
  store ptr %320, ptr %319, align 8, !tbaa !9
  %321 = getelementptr inbounds i8, ptr %251, i64 3264
  store ptr %321, ptr %320, align 8, !tbaa !9
  %322 = getelementptr inbounds i8, ptr %251, i64 3312
  store ptr %322, ptr %321, align 8, !tbaa !9
  %323 = getelementptr inbounds i8, ptr %251, i64 3360
  store ptr %323, ptr %322, align 8, !tbaa !9
  %324 = getelementptr inbounds i8, ptr %251, i64 3408
  store ptr %324, ptr %323, align 8, !tbaa !9
  %325 = getelementptr inbounds i8, ptr %251, i64 3456
  store ptr %325, ptr %324, align 8, !tbaa !9
  %326 = getelementptr inbounds i8, ptr %251, i64 3504
  store ptr %326, ptr %325, align 8, !tbaa !9
  %327 = getelementptr inbounds i8, ptr %251, i64 3552
  store ptr %327, ptr %326, align 8, !tbaa !9
  %328 = getelementptr inbounds i8, ptr %251, i64 3600
  store ptr %328, ptr %327, align 8, !tbaa !9
  %329 = getelementptr inbounds i8, ptr %251, i64 3648
  store ptr %329, ptr %328, align 8, !tbaa !9
  %330 = getelementptr inbounds i8, ptr %251, i64 3696
  store ptr %330, ptr %329, align 8, !tbaa !9
  %331 = getelementptr inbounds i8, ptr %251, i64 3744
  store ptr %331, ptr %330, align 8, !tbaa !9
  %332 = getelementptr inbounds i8, ptr %251, i64 3792
  store ptr %332, ptr %331, align 8, !tbaa !9
  %333 = getelementptr inbounds i8, ptr %251, i64 3840
  store ptr %333, ptr %332, align 8, !tbaa !9
  %334 = getelementptr inbounds i8, ptr %251, i64 3888
  store ptr %334, ptr %333, align 8, !tbaa !9
  %335 = getelementptr inbounds i8, ptr %251, i64 3936
  store ptr %335, ptr %334, align 8, !tbaa !9
  %336 = getelementptr inbounds i8, ptr %251, i64 3984
  store ptr %336, ptr %335, align 8, !tbaa !9
  %337 = getelementptr inbounds i8, ptr %251, i64 4032
  store ptr %337, ptr %336, align 8, !tbaa !9
  store ptr null, ptr %337, align 8, !tbaa !9
  %338 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_body_roots, i64 0, i64 7), align 8, !tbaa !9
  br label %339

339:                                              ; preds = %227, %244
  %340 = phi ptr [ %338, %244 ], [ %228, %227 ]
  %341 = load ptr, ptr %340, align 8, !tbaa !9
  store ptr %341, ptr getelementptr inbounds ([16 x ptr], ptr @PL_body_roots, i64 0, i64 7), align 8, !tbaa !9
  %342 = load ptr, ptr %0, align 8, !tbaa !26
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %340, ptr noundef nonnull align 8 dereferenceable(48) %342, i64 48, i1 false), !tbaa.struct !71
  %343 = load ptr, ptr %0, align 8, !tbaa !26
  %344 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_body_roots, i64 0, i64 9), align 8, !tbaa !9
  store ptr %344, ptr %343, align 8, !tbaa !9
  store ptr %343, ptr getelementptr inbounds ([16 x ptr], ptr @PL_body_roots, i64 0, i64 9), align 8, !tbaa !9
  store ptr %340, ptr %0, align 8, !tbaa !26
  %345 = load i32, ptr %3, align 4, !tbaa !16
  %346 = and i32 %345, -256
  %347 = or i32 %346, 7
  store i32 %347, ptr %3, align 4, !tbaa !16
  br label %348

348:                                              ; preds = %339, %222
  %349 = phi i32 [ %347, %339 ], [ %224, %222 ]
  br i1 %78, label %378, label %350

350:                                              ; preds = %348
  %351 = and i32 %349, 1610547455
  store i32 %351, ptr %3, align 4, !tbaa !16
  %352 = and i32 %349, 33554432
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %379, label %354

354:                                              ; preds = %350
  %355 = load ptr, ptr %164, align 8, !tbaa !17
  %356 = getelementptr inbounds i8, ptr %355, i64 -1
  %357 = load i8, ptr %356, align 1, !tbaa !17
  %358 = zext i8 %357 to i64
  %359 = icmp eq i8 %357, 0
  br i1 %359, label %360, label %363

360:                                              ; preds = %354
  %361 = getelementptr inbounds i8, ptr %355, i64 -9
  %362 = load i64, ptr %361, align 1
  br label %363

363:                                              ; preds = %354, %360
  %364 = phi i64 [ %358, %354 ], [ %362, %360 ]
  %365 = load ptr, ptr %0, align 8, !tbaa !26
  %366 = getelementptr inbounds %struct.xpv, ptr %365, i64 0, i32 3
  %367 = load i64, ptr %366, align 8, !tbaa !17
  %368 = add i64 %367, %364
  store i64 %368, ptr %366, align 8, !tbaa !17
  %369 = load ptr, ptr %164, align 8, !tbaa !17
  %370 = sub i64 0, %364
  %371 = getelementptr inbounds i8, ptr %369, i64 %370
  store ptr %371, ptr %164, align 8, !tbaa !17
  %372 = load ptr, ptr %0, align 8, !tbaa !26
  %373 = getelementptr inbounds %struct.xpv, ptr %372, i64 0, i32 2
  %374 = load i64, ptr %373, align 8, !tbaa !57
  %375 = add i64 %374, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %371, ptr nonnull align 1 %355, i64 %375, i1 false)
  %376 = load i32, ptr %3, align 4, !tbaa !16
  %377 = and i32 %376, -33554433
  store i32 %377, ptr %3, align 4, !tbaa !16
  br label %379

378:                                              ; preds = %348
  tail call void @Perl_sv_setsv_flags(ptr noundef nonnull %0, ptr noundef %135, i32 noundef 0)
  br label %379

379:                                              ; preds = %378, %363, %350
  %380 = load ptr, ptr @PL_last_in_gv, align 8, !tbaa !9
  %381 = icmp eq ptr %380, %0
  br i1 %381, label %382, label %383

382:                                              ; preds = %379
  store ptr null, ptr @PL_last_in_gv, align 8, !tbaa !9
  br label %526

383:                                              ; preds = %379
  %384 = load ptr, ptr @PL_statgv, align 8, !tbaa !9
  %385 = icmp eq ptr %384, %0
  br i1 %385, label %386, label %526

386:                                              ; preds = %383
  store ptr null, ptr @PL_statgv, align 8, !tbaa !9
  br label %526

387:                                              ; preds = %69
  %388 = and i32 %65, 16777216
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %519, label %390

390:                                              ; preds = %387
  %391 = and i32 %65, 255
  br label %392

392:                                              ; preds = %390, %72
  %393 = phi i32 [ %391, %390 ], [ %73, %72 ]
  %394 = icmp eq i32 %393, 8
  %395 = and i32 %65, 16826623
  %396 = icmp eq i32 %395, 16777226
  %397 = or i1 %396, %394
  br i1 %397, label %398, label %519

398:                                              ; preds = %392
  %399 = icmp eq i32 %393, 10
  br i1 %399, label %409, label %400

400:                                              ; preds = %398
  %401 = load ptr, ptr %0, align 8, !tbaa !26
  %402 = getelementptr inbounds %struct.xpvmg, ptr %401, i64 0, i32 1
  %403 = load ptr, ptr %402, align 8, !tbaa !17
  %404 = icmp eq ptr %403, null
  br i1 %404, label %405, label %409

405:                                              ; preds = %400
  %406 = load ptr, ptr %401, align 8, !tbaa !50
  %407 = icmp eq ptr %406, null
  %408 = select i1 %407, i32 3, i32 7
  br label %409

409:                                              ; preds = %400, %405, %398
  %410 = phi i32 [ 0, %398 ], [ 7, %400 ], [ %408, %405 ]
  %411 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %412 = icmp eq ptr %411, null
  br i1 %412, label %413, label %442

413:                                              ; preds = %409
  %414 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %415 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %415, ptr %414, align 8, !tbaa !26
  %416 = getelementptr inbounds %struct.sv, ptr %414, i64 0, i32 1
  store i32 170, ptr %416, align 8, !tbaa !13
  %417 = getelementptr inbounds %struct.sv, ptr %414, i64 0, i32 2
  store i32 0, ptr %417, align 4, !tbaa !16
  store ptr %414, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %418 = getelementptr inbounds %struct.sv, ptr %414, i64 1
  store ptr %418, ptr @PL_sv_root, align 8, !tbaa !9
  br label %419

419:                                              ; preds = %419, %413
  %420 = phi ptr [ %418, %413 ], [ %437, %419 ]
  %421 = phi i64 [ 1, %413 ], [ %436, %419 ]
  %422 = getelementptr inbounds %struct.sv, ptr %420, i64 1
  store ptr %422, ptr %420, align 8, !tbaa !26
  %423 = getelementptr inbounds %struct.sv, ptr %414, i64 %421, i32 2
  store i32 255, ptr %423, align 4, !tbaa !16
  %424 = add nuw nsw i64 %421, 1
  %425 = getelementptr inbounds %struct.sv, ptr %414, i64 %424
  %426 = getelementptr inbounds %struct.sv, ptr %425, i64 1
  store ptr %426, ptr %425, align 8, !tbaa !26
  %427 = getelementptr inbounds %struct.sv, ptr %414, i64 %424, i32 2
  store i32 255, ptr %427, align 4, !tbaa !16
  %428 = add nuw nsw i64 %421, 2
  %429 = getelementptr inbounds %struct.sv, ptr %414, i64 %428
  %430 = getelementptr inbounds %struct.sv, ptr %429, i64 1
  store ptr %430, ptr %429, align 8, !tbaa !26
  %431 = getelementptr inbounds %struct.sv, ptr %414, i64 %428, i32 2
  store i32 255, ptr %431, align 4, !tbaa !16
  %432 = add nuw nsw i64 %421, 3
  %433 = getelementptr inbounds %struct.sv, ptr %414, i64 %432
  %434 = getelementptr inbounds %struct.sv, ptr %433, i64 1
  store ptr %434, ptr %433, align 8, !tbaa !26
  %435 = getelementptr inbounds %struct.sv, ptr %414, i64 %432, i32 2
  store i32 255, ptr %435, align 4, !tbaa !16
  %436 = add nuw nsw i64 %421, 4
  %437 = getelementptr inbounds %struct.sv, ptr %414, i64 %436
  %438 = icmp eq i64 %436, 169
  br i1 %438, label %439, label %419, !llvm.loop !59

439:                                              ; preds = %419
  store ptr null, ptr %437, align 8, !tbaa !26
  %440 = getelementptr inbounds %struct.sv, ptr %414, i64 169, i32 2
  store i32 255, ptr %440, align 4, !tbaa !16
  %441 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %442

442:                                              ; preds = %409, %439
  %443 = phi ptr [ %441, %439 ], [ %411, %409 ]
  %444 = load ptr, ptr %443, align 8, !tbaa !26
  store ptr %444, ptr @PL_sv_root, align 8, !tbaa !9
  %445 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %446 = add nsw i64 %445, 1
  store i64 %446, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %443, align 8, !tbaa !26
  %447 = getelementptr inbounds %struct.sv, ptr %443, i64 0, i32 1
  store i32 1, ptr %447, align 8, !tbaa !13
  %448 = getelementptr inbounds %struct.sv, ptr %443, i64 0, i32 2
  store i32 0, ptr %448, align 4, !tbaa !16
  %449 = icmp eq i32 %410, 0
  br i1 %449, label %450, label %453

450:                                              ; preds = %442
  %451 = getelementptr i8, ptr %0, i64 16
  %452 = load ptr, ptr %451, align 8, !tbaa !17
  br label %468

453:                                              ; preds = %442
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %443, i32 noundef %410)
  %454 = getelementptr i8, ptr %0, i64 16
  %455 = load ptr, ptr %454, align 8, !tbaa !17
  %456 = icmp eq i32 %410, 7
  br i1 %456, label %457, label %468

457:                                              ; preds = %453
  %458 = load ptr, ptr %0, align 8, !tbaa !26
  %459 = getelementptr inbounds %struct.xpvmg, ptr %458, i64 0, i32 1
  %460 = load ptr, ptr %459, align 8, !tbaa !17
  %461 = load ptr, ptr %443, align 8, !tbaa !26
  %462 = getelementptr inbounds %struct.xpvmg, ptr %461, i64 0, i32 1
  store ptr %460, ptr %462, align 8, !tbaa !17
  %463 = load ptr, ptr %0, align 8, !tbaa !26
  %464 = getelementptr inbounds %struct.xpvmg, ptr %463, i64 0, i32 1
  store ptr null, ptr %464, align 8, !tbaa !17
  %465 = load ptr, ptr %0, align 8, !tbaa !26
  %466 = load ptr, ptr %465, align 8, !tbaa !50
  %467 = load ptr, ptr %443, align 8, !tbaa !26
  store ptr %466, ptr %467, align 8, !tbaa !50
  store ptr null, ptr %465, align 8, !tbaa !50
  br label %468

468:                                              ; preds = %450, %457, %453
  %469 = phi ptr [ %452, %450 ], [ %455, %457 ], [ %455, %453 ]
  %470 = phi ptr [ %451, %450 ], [ %454, %457 ], [ %454, %453 ]
  br i1 %399, label %477, label %471

471:                                              ; preds = %468
  %472 = load ptr, ptr %0, align 8, !tbaa !26
  %473 = getelementptr inbounds %struct.xpv, ptr %472, i64 0, i32 2
  %474 = load i64, ptr %473, align 8, !tbaa !57
  %475 = load ptr, ptr %443, align 8, !tbaa !26
  %476 = getelementptr inbounds %struct.xpv, ptr %475, i64 0, i32 2
  store i64 %474, ptr %476, align 8, !tbaa !57
  br label %477

477:                                              ; preds = %471, %468
  %478 = and i32 %1, 4
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %483, label %480

480:                                              ; preds = %477
  %481 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  store ptr null, ptr %481, align 8, !tbaa !17
  %482 = load i32, ptr %3, align 4, !tbaa !16
  br label %502

483:                                              ; preds = %477
  %484 = load ptr, ptr %470, align 8, !tbaa !17
  %485 = getelementptr inbounds %struct.regexp, ptr %484, i64 0, i32 3
  %486 = load ptr, ptr %485, align 8, !tbaa !17
  %487 = load ptr, ptr %0, align 8, !tbaa !26
  %488 = getelementptr inbounds %struct.xpv, ptr %487, i64 0, i32 2
  %489 = load i64, ptr %488, align 8, !tbaa !57
  %490 = trunc i64 %489 to i32
  %491 = tail call ptr @Perl_savepvn(ptr noundef %486, i32 noundef %490) #17
  %492 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  store ptr %491, ptr %492, align 8, !tbaa !17
  %493 = load ptr, ptr %0, align 8, !tbaa !26
  %494 = getelementptr inbounds %struct.xpv, ptr %493, i64 0, i32 2
  %495 = load i64, ptr %494, align 8, !tbaa !57
  %496 = add i64 %495, 1
  %497 = select i1 %399, ptr %0, ptr %443
  %498 = load ptr, ptr %497, align 8, !tbaa !26
  %499 = getelementptr inbounds %struct.xpv, ptr %498, i64 0, i32 3
  store i64 %496, ptr %499, align 8, !tbaa !17
  %500 = load i32, ptr %3, align 4, !tbaa !16
  %501 = or i32 %500, 17408
  br label %502

502:                                              ; preds = %483, %480
  %503 = phi i32 [ %501, %483 ], [ %482, %480 ]
  %504 = and i32 %503, -16777217
  store i32 %504, ptr %3, align 4, !tbaa !16
  br i1 %399, label %509, label %505

505:                                              ; preds = %502
  %506 = and i32 %503, -16777472
  %507 = or i32 %506, %410
  store i32 %507, ptr %3, align 4, !tbaa !16
  %508 = load ptr, ptr %443, align 8, !tbaa !26
  store ptr %508, ptr %0, align 8, !tbaa !26
  br label %509

509:                                              ; preds = %505, %502
  %510 = load i32, ptr %448, align 4, !tbaa !16
  %511 = and i32 %510, -16777472
  %512 = or i32 %511, 16777224
  store i32 %512, ptr %448, align 4, !tbaa !16
  store ptr %469, ptr %443, align 8, !tbaa !26
  %513 = getelementptr inbounds %struct.sv, ptr %443, i64 0, i32 3
  store ptr %469, ptr %513, align 8, !tbaa !17
  %514 = load i32, ptr %447, align 8, !tbaa !13
  %515 = icmp ugt i32 %514, 1
  br i1 %515, label %516, label %518

516:                                              ; preds = %509
  %517 = add i32 %514, -1
  store i32 %517, ptr %447, align 8, !tbaa !13
  br label %526

518:                                              ; preds = %509
  tail call void @Perl_sv_free2(ptr noundef nonnull %443, i32 noundef %514)
  br label %526

519:                                              ; preds = %392, %387
  %520 = and i32 %65, 14680064
  %521 = icmp eq i32 %520, 0
  br i1 %521, label %526, label %522

522:                                              ; preds = %519
  %523 = tail call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 86) #17
  %524 = icmp eq ptr %523, null
  br i1 %524, label %526, label %525

525:                                              ; preds = %522
  tail call fastcc void @S_sv_unmagicext_flags(ptr noundef nonnull %0, i32 noundef 86, ptr noundef null, i32 noundef 0)
  br label %526

526:                                              ; preds = %518, %516, %386, %383, %382, %519, %522, %525, %68
  ret void
}

declare void @Perl_croak(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_reftype(ptr noundef %0, i32 noundef %1) local_unnamed_addr #1 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 1048576
  %7 = icmp eq i32 %6, 0
  %8 = select i1 %3, i1 true, i1 %7
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = tail call ptr @Perl_sv_ref(ptr noundef null, ptr noundef nonnull %0, i32 noundef %1)
  %11 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !16
  %13 = and i32 %12, 2098176
  %14 = icmp eq i32 %13, 1024
  %15 = tail call ptr @Perl_sv_ref(ptr noundef null, ptr noundef nonnull %0, i32 noundef %1)
  br i1 %14, label %16, label %19

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  br label %58

19:                                               ; preds = %9
  %20 = tail call ptr @Perl_sv_2pv_flags(ptr noundef %15, ptr noundef null, i32 noundef 34)
  br label %58

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %23 = trunc i32 %5 to i8
  switch i8 %23, label %57 [
    i8 0, label %24
    i8 1, label %24
    i8 2, label %24
    i8 3, label %24
    i8 5, label %24
    i8 6, label %24
    i8 7, label %24
    i8 10, label %37
    i8 11, label %58
    i8 12, label %47
    i8 13, label %48
    i8 9, label %49
    i8 14, label %53
    i8 15, label %54
    i8 4, label %55
    i8 8, label %56
  ]

24:                                               ; preds = %21, %21, %21, %21, %21, %21, %21
  %25 = and i32 %5, 14680064
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  %28 = tail call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 86) #17
  %29 = icmp eq ptr %28, null
  br i1 %29, label %30, label %58

30:                                               ; preds = %27
  %31 = load i32, ptr %22, align 4, !tbaa !16
  br label %32

32:                                               ; preds = %30, %24
  %33 = phi i32 [ %31, %30 ], [ %5, %24 ]
  %34 = and i32 %33, 2048
  %35 = icmp eq i32 %34, 0
  %36 = select i1 %35, ptr @.str.52, ptr @.str.51
  br label %58

37:                                               ; preds = %21
  %38 = and i32 %5, 2048
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %58

40:                                               ; preds = %37
  %41 = load ptr, ptr %0, align 8, !tbaa !26
  %42 = getelementptr inbounds %struct.xpvlv, ptr %41, i64 0, i32 9
  %43 = load i8, ptr %42, align 8, !tbaa !40
  %44 = and i8 %43, -33
  %45 = icmp eq i8 %44, 84
  %46 = select i1 %45, ptr @.str.52, ptr @.str.53
  br label %58

47:                                               ; preds = %21
  br label %58

48:                                               ; preds = %21
  br label %58

49:                                               ; preds = %21
  %50 = and i32 %5, 49152
  %51 = icmp eq i32 %50, 32768
  %52 = select i1 %51, ptr @.str.57, ptr @.str.52
  br label %58

53:                                               ; preds = %21
  br label %58

54:                                               ; preds = %21
  br label %58

55:                                               ; preds = %21
  br label %58

56:                                               ; preds = %21
  br label %58

57:                                               ; preds = %21
  br label %58

58:                                               ; preds = %21, %40, %37, %32, %27, %16, %19, %57, %56, %55, %54, %53, %49, %48, %47
  %59 = phi ptr [ @.str.62, %57 ], [ @.str.61, %56 ], [ @.str.60, %55 ], [ @.str.59, %54 ], [ @.str.58, %53 ], [ %52, %49 ], [ @.str.56, %48 ], [ @.str.55, %47 ], [ %18, %16 ], [ %20, %19 ], [ @.str.50, %27 ], [ %36, %32 ], [ %46, %40 ], [ @.str.51, %37 ], [ @.str.54, %21 ]
  ret ptr %59
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: mustprogress nofree nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local i32 @Perl_sv_backoff(ptr nocapture noundef %0) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !17
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 33554432
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds i8, ptr %3, i64 -1
  %10 = load i8, ptr %9, align 1, !tbaa !17
  %11 = zext i8 %10 to i64
  %12 = icmp eq i8 %10, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds i8, ptr %3, i64 -9
  %15 = load i64, ptr %14, align 1
  br label %16

16:                                               ; preds = %1, %13, %8
  %17 = phi i64 [ %11, %8 ], [ %15, %13 ], [ 0, %1 ]
  %18 = load ptr, ptr %0, align 8, !tbaa !26
  %19 = getelementptr inbounds %struct.xpv, ptr %18, i64 0, i32 3
  %20 = load i64, ptr %19, align 8, !tbaa !17
  %21 = add i64 %20, %17
  store i64 %21, ptr %19, align 8, !tbaa !17
  %22 = load ptr, ptr %2, align 8, !tbaa !17
  %23 = sub i64 0, %17
  %24 = getelementptr inbounds i8, ptr %22, i64 %23
  store ptr %24, ptr %2, align 8, !tbaa !17
  %25 = load ptr, ptr %0, align 8, !tbaa !26
  %26 = getelementptr inbounds %struct.xpv, ptr %25, i64 0, i32 2
  %27 = load i64, ptr %26, align 8, !tbaa !57
  %28 = add i64 %27, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %24, ptr align 1 %3, i64 %28, i1 false)
  %29 = load i32, ptr %4, align 4, !tbaa !16
  %30 = and i32 %29, -33554433
  store i32 %30, ptr %4, align 4, !tbaa !16
  ret i32 0
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #6

declare ptr @Perl_gv_fetchpvn_flags(ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare void @Perl_hv_clear(ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_grow(ptr noundef %0, i64 noundef %1) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 2048
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  tail call void @Perl_sv_unref_flags(ptr noundef nonnull %0, i32 noundef 0)
  %8 = load i32, ptr %3, align 4, !tbaa !16
  br label %9

9:                                                ; preds = %7, %2
  %10 = phi i32 [ %8, %7 ], [ %4, %2 ]
  %11 = and i32 %10, 255
  %12 = icmp ult i32 %11, 3
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 3)
  %14 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  br label %105

16:                                               ; preds = %9
  %17 = and i32 %10, 33554432
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %55, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = getelementptr inbounds i8, ptr %21, i64 -1
  %23 = load i8, ptr %22, align 1, !tbaa !17
  %24 = zext i8 %23 to i64
  %25 = icmp eq i8 %23, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = getelementptr inbounds i8, ptr %21, i64 -9
  %28 = load i64, ptr %27, align 1
  br label %29

29:                                               ; preds = %19, %26
  %30 = phi i64 [ %24, %19 ], [ %28, %26 ]
  %31 = load ptr, ptr %0, align 8, !tbaa !26
  %32 = getelementptr inbounds %struct.xpv, ptr %31, i64 0, i32 3
  %33 = load i64, ptr %32, align 8, !tbaa !17
  %34 = add i64 %33, %30
  store i64 %34, ptr %32, align 8, !tbaa !17
  %35 = load ptr, ptr %20, align 8, !tbaa !17
  %36 = sub i64 0, %30
  %37 = getelementptr inbounds i8, ptr %35, i64 %36
  store ptr %37, ptr %20, align 8, !tbaa !17
  %38 = load ptr, ptr %0, align 8, !tbaa !26
  %39 = getelementptr inbounds %struct.xpv, ptr %38, i64 0, i32 2
  %40 = load i64, ptr %39, align 8, !tbaa !57
  %41 = add i64 %40, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %37, ptr nonnull align 1 %21, i64 %41, i1 false)
  %42 = load i32, ptr %3, align 4, !tbaa !16
  %43 = and i32 %42, -33554433
  store i32 %43, ptr %3, align 4, !tbaa !16
  %44 = load ptr, ptr %20, align 8, !tbaa !17
  %45 = load ptr, ptr %0, align 8, !tbaa !26
  %46 = getelementptr inbounds %struct.xpv, ptr %45, i64 0, i32 3
  %47 = load i64, ptr %46, align 8, !tbaa !17
  %48 = icmp ult i64 %47, %1
  br i1 %48, label %49, label %105

49:                                               ; preds = %29
  %50 = getelementptr inbounds %struct.xpv, ptr %45, i64 0, i32 2
  %51 = load i64, ptr %50, align 8, !tbaa !57
  %52 = sub i64 %1, %51
  %53 = mul i64 %52, 10
  %54 = add i64 %53, %1
  br label %105

55:                                               ; preds = %16
  %56 = and i32 %10, 268435456
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %102, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !17
  %61 = load ptr, ptr %0, align 8, !tbaa !26
  %62 = getelementptr inbounds %struct.xpv, ptr %61, i64 0, i32 3
  %63 = load i64, ptr %62, align 8, !tbaa !17
  %64 = getelementptr inbounds %struct.xpv, ptr %61, i64 0, i32 2
  %65 = load i64, ptr %64, align 8, !tbaa !57
  %66 = and i32 %10, -268435457
  store i32 %66, ptr %3, align 4, !tbaa !16
  %67 = icmp eq i64 %63, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %58
  %69 = load i64, ptr %62, align 8, !tbaa !17
  %70 = getelementptr inbounds i8, ptr %60, i64 %69
  %71 = getelementptr inbounds i8, ptr %70, i64 -1
  %72 = load i8, ptr %71, align 1, !tbaa !17
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %102, label %74

74:                                               ; preds = %68
  %75 = add i8 %72, -1
  store i8 %75, ptr %71, align 1, !tbaa !17
  %76 = load ptr, ptr %0, align 8, !tbaa !26
  br label %77

77:                                               ; preds = %74, %58
  %78 = phi ptr [ %76, %74 ], [ %61, %58 ]
  store ptr null, ptr %59, align 8, !tbaa !17
  %79 = getelementptr inbounds %struct.xpv, ptr %78, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %79, i8 0, i64 16, i1 false)
  %80 = load i32, ptr %3, align 4, !tbaa !16
  %81 = and i32 %80, 268435456
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %77
  %84 = add i64 %65, 1
  br label %91

85:                                               ; preds = %77
  %86 = load ptr, ptr %0, align 8, !tbaa !26
  %87 = getelementptr inbounds %struct.xpv, ptr %86, i64 0, i32 3
  %88 = load i64, ptr %87, align 8, !tbaa !17
  %89 = add i64 %65, 1
  %90 = icmp ult i64 %88, %89
  br i1 %90, label %91, label %94

91:                                               ; preds = %83, %85
  %92 = phi i64 [ %84, %83 ], [ %89, %85 ]
  %93 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %92)
  br label %94

94:                                               ; preds = %91, %85
  %95 = load ptr, ptr %59, align 8, !tbaa !17
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %95, ptr align 1 %60, i64 %65, i1 false)
  %96 = load ptr, ptr %0, align 8, !tbaa !26
  %97 = getelementptr inbounds %struct.xpv, ptr %96, i64 0, i32 2
  store i64 %65, ptr %97, align 8, !tbaa !57
  %98 = load ptr, ptr %59, align 8, !tbaa !17
  %99 = getelementptr inbounds i8, ptr %98, i64 %65
  store i8 0, ptr %99, align 1, !tbaa !17
  br i1 %67, label %100, label %102

100:                                              ; preds = %94
  %101 = getelementptr inbounds i8, ptr %60, i64 -8
  tail call void @Perl_unshare_hek(ptr noundef nonnull %101) #17
  br label %102

102:                                              ; preds = %68, %100, %94, %55
  %103 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %104 = load ptr, ptr %103, align 8, !tbaa !17
  br label %105

105:                                              ; preds = %102, %49, %29, %13
  %106 = phi ptr [ %15, %13 ], [ %44, %49 ], [ %44, %29 ], [ %104, %102 ]
  %107 = phi i64 [ %1, %13 ], [ %54, %49 ], [ %1, %29 ], [ %1, %102 ]
  %108 = and i64 %107, 255
  %109 = icmp ne i64 %108, 0
  %110 = icmp ne i64 %107, -1
  %111 = and i1 %110, %109
  %112 = zext i1 %111 to i64
  %113 = add nuw i64 %107, %112
  %114 = load ptr, ptr %0, align 8, !tbaa !26
  %115 = getelementptr inbounds %struct.xpv, ptr %114, i64 0, i32 3
  %116 = load i64, ptr %115, align 8, !tbaa !17
  %117 = icmp ugt i64 %113, %116
  br i1 %117, label %118, label %152

118:                                              ; preds = %105
  %119 = getelementptr inbounds %struct.xpv, ptr %114, i64 0, i32 2
  %120 = load i64, ptr %119, align 8, !tbaa !57
  %121 = lshr i64 %120, 2
  %122 = add i64 %120, 10
  %123 = add i64 %122, %121
  %124 = tail call i64 @llvm.umax.i64(i64 %113, i64 %123)
  %125 = icmp eq i64 %116, 0
  %126 = add i64 %124, 7
  %127 = and i64 %126, -8
  %128 = tail call i64 @llvm.umax.i64(i64 %127, i64 %124)
  %129 = select i1 %125, i64 %124, i64 %128
  %130 = icmp ne i64 %116, 0
  %131 = icmp ne ptr %106, null
  %132 = select i1 %130, i1 %131, i1 false
  br i1 %132, label %133, label %135

133:                                              ; preds = %118
  %134 = tail call ptr @Perl_safesysrealloc(ptr noundef nonnull %106, i64 noundef %129) #17
  br label %147

135:                                              ; preds = %118
  %136 = tail call ptr @Perl_safesysmalloc(i64 noundef %129) #17
  %137 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %138 = load ptr, ptr %137, align 8, !tbaa !17
  %139 = icmp eq ptr %138, null
  br i1 %139, label %147, label %140

140:                                              ; preds = %135
  %141 = load ptr, ptr %0, align 8, !tbaa !26
  %142 = getelementptr inbounds %struct.xpv, ptr %141, i64 0, i32 2
  %143 = load i64, ptr %142, align 8, !tbaa !57
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %147, label %145

145:                                              ; preds = %140
  %146 = tail call i64 @llvm.umin.i64(i64 %129, i64 %143)
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %136, ptr nonnull align 1 %138, i64 %146, i1 false)
  br label %147

147:                                              ; preds = %133, %145, %140, %135
  %148 = phi ptr [ %134, %133 ], [ %136, %145 ], [ %136, %140 ], [ %136, %135 ]
  %149 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  store ptr %148, ptr %149, align 8, !tbaa !17
  %150 = load ptr, ptr %0, align 8, !tbaa !26
  %151 = getelementptr inbounds %struct.xpv, ptr %150, i64 0, i32 3
  store i64 %129, ptr %151, align 8, !tbaa !17
  br label %152

152:                                              ; preds = %147, %105
  %153 = phi ptr [ %148, %147 ], [ %106, %105 ]
  ret ptr %153
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_unref_flags(ptr noundef %0, i32 noundef %1) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !16
  %7 = and i32 %6, -2147481600
  %8 = icmp eq i32 %7, -2147481600
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  tail call void @Perl_sv_del_backref(ptr noundef %4, ptr noundef nonnull %0)
  %10 = load i32, ptr %5, align 4, !tbaa !16
  %11 = and i32 %10, 2147481599
  store i32 %11, ptr %5, align 4, !tbaa !16
  store ptr null, ptr %3, align 8, !tbaa !17
  br label %52

12:                                               ; preds = %2
  store ptr null, ptr %3, align 8, !tbaa !17
  %13 = and i32 %6, -2049
  store i32 %13, ptr %5, align 4, !tbaa !16
  %14 = getelementptr inbounds %struct.sv, ptr %4, i64 0, i32 1
  %15 = load i32, ptr %14, align 8, !tbaa !13
  %16 = icmp eq i32 %15, 1
  %17 = and i32 %1, 1
  %18 = icmp eq i32 %17, 0
  %19 = and i1 %18, %16
  br i1 %19, label %25, label %20

20:                                               ; preds = %12
  %21 = icmp ugt i32 %15, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = add i32 %15, -1
  store i32 %23, ptr %14, align 8, !tbaa !13
  br label %52

24:                                               ; preds = %20
  tail call void @Perl_sv_free2(ptr noundef nonnull %4, i32 noundef %15)
  br label %52

25:                                               ; preds = %12
  %26 = getelementptr inbounds %struct.sv, ptr %4, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !16
  %28 = and i32 %27, 134283264
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %25
  %31 = icmp eq ptr %4, @PL_sv_undef
  %32 = icmp eq ptr %4, @PL_sv_yes
  %33 = or i1 %31, %32
  %34 = icmp eq ptr %4, @PL_sv_no
  %35 = or i1 %34, %33
  %36 = icmp eq ptr %4, @PL_sv_placeholder
  %37 = or i1 %36, %35
  br i1 %37, label %52, label %38

38:                                               ; preds = %30, %25
  %39 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %40 = add nsw i64 %39, 1
  store i64 %40, ptr @PL_tmps_ix, align 8, !tbaa !60
  %41 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %42 = icmp slt i64 %40, %41
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = tail call i64 @Perl_tmps_grow_p(i64 noundef %40) #17
  %45 = load i32, ptr %26, align 4, !tbaa !16
  br label %46

46:                                               ; preds = %43, %38
  %47 = phi i32 [ %45, %43 ], [ %27, %38 ]
  %48 = phi i64 [ %44, %43 ], [ %40, %38 ]
  %49 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %50 = getelementptr inbounds ptr, ptr %49, i64 %48
  store ptr %4, ptr %50, align 8, !tbaa !9
  %51 = or i32 %47, 524288
  store i32 %51, ptr %26, align 4, !tbaa !16
  br label %52

52:                                               ; preds = %46, %30, %24, %22, %9
  ret void
}

declare ptr @Perl_safesysrealloc(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_setiv(ptr noundef %0, i64 noundef %1) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 427886592
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %0, i32 noundef 4)
  %8 = load i32, ptr %3, align 4, !tbaa !16
  br label %9

9:                                                ; preds = %7, %2
  %10 = phi i32 [ %8, %7 ], [ %4, %2 ]
  %11 = trunc i32 %10 to i8
  switch i8 %11, label %36 [
    i8 0, label %12
    i8 2, label %12
    i8 3, label %13
    i8 9, label %14
    i8 15, label %20
    i8 14, label %19
    i8 13, label %18
    i8 12, label %17
    i8 11, label %21
  ]

12:                                               ; preds = %9, %9
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 1)
  br label %36

13:                                               ; preds = %9
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 5)
  br label %36

14:                                               ; preds = %9
  %15 = and i32 %10, 49152
  %16 = icmp eq i32 %15, 32768
  br i1 %16, label %21, label %36

17:                                               ; preds = %9
  br label %21

18:                                               ; preds = %9
  br label %21

19:                                               ; preds = %9
  br label %21

20:                                               ; preds = %9
  br label %21

21:                                               ; preds = %14, %9, %17, %18, %19, %20
  %22 = phi ptr [ @.str.59, %20 ], [ @.str.58, %19 ], [ @.str.56, %18 ], [ @.str.55, %17 ], [ @.str.54, %9 ], [ @.str.57, %14 ]
  %23 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %24 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 4
  %25 = load i16, ptr %24, align 8
  %26 = and i16 %25, 511
  %27 = icmp eq i16 %26, 380
  br i1 %27, label %28, label %30

28:                                               ; preds = %21
  %29 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %23, i32 noundef 2) #17
  br label %34

30:                                               ; preds = %21
  %31 = zext i16 %26 to i64
  %32 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %31
  %33 = load ptr, ptr %32, align 8, !tbaa !9
  br label %34

34:                                               ; preds = %30, %28
  %35 = phi ptr [ %29, %28 ], [ %33, %30 ]
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.4, ptr noundef nonnull %22, ptr noundef %35) #17
  br label %36

36:                                               ; preds = %9, %34, %14, %13, %12
  %37 = load i32, ptr %3, align 4, !tbaa !16
  %38 = and i32 %37, 1610547455
  store i32 %38, ptr %3, align 4, !tbaa !16
  %39 = and i32 %37, 33554432
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %66, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  %44 = getelementptr inbounds i8, ptr %43, i64 -1
  %45 = load i8, ptr %44, align 1, !tbaa !17
  %46 = zext i8 %45 to i64
  %47 = icmp eq i8 %45, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, ptr %43, i64 -9
  %50 = load i64, ptr %49, align 1
  br label %51

51:                                               ; preds = %41, %48
  %52 = phi i64 [ %46, %41 ], [ %50, %48 ]
  %53 = load ptr, ptr %0, align 8, !tbaa !26
  %54 = getelementptr inbounds %struct.xpv, ptr %53, i64 0, i32 3
  %55 = load i64, ptr %54, align 8, !tbaa !17
  %56 = add i64 %55, %52
  store i64 %56, ptr %54, align 8, !tbaa !17
  %57 = load ptr, ptr %42, align 8, !tbaa !17
  %58 = sub i64 0, %52
  %59 = getelementptr inbounds i8, ptr %57, i64 %58
  store ptr %59, ptr %42, align 8, !tbaa !17
  %60 = load ptr, ptr %0, align 8, !tbaa !26
  %61 = getelementptr inbounds %struct.xpv, ptr %60, i64 0, i32 2
  %62 = load i64, ptr %61, align 8, !tbaa !57
  %63 = add i64 %62, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %59, ptr nonnull align 1 %43, i64 %63, i1 false)
  %64 = load i32, ptr %3, align 4, !tbaa !16
  %65 = and i32 %64, -33554433
  br label %66

66:                                               ; preds = %51, %36
  %67 = phi i32 [ %65, %51 ], [ %38, %36 ]
  %68 = or i32 %67, 4352
  store i32 %68, ptr %3, align 4, !tbaa !16
  %69 = load ptr, ptr %0, align 8, !tbaa !26
  %70 = getelementptr inbounds %struct.xpviv, ptr %69, i64 0, i32 4
  store i64 %1, ptr %70, align 8, !tbaa !17
  %71 = load i8, ptr @PL_tainting, align 1, !tbaa !5, !range !74, !noundef !75
  %72 = icmp eq i8 %71, 0
  %73 = load i8, ptr @PL_tainted, align 1, !range !74
  %74 = icmp eq i8 %73, 0
  %75 = select i1 %72, i1 true, i1 %74
  br i1 %75, label %77, label %76

76:                                               ; preds = %66
  tail call void @Perl_sv_magic(ptr noundef nonnull %0, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0)
  br label %77

77:                                               ; preds = %66, %76
  ret void
}

declare ptr @Perl_custom_op_get_field(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_magic(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #1 {
  %6 = icmp ugt i32 %2, 255
  br i1 %6, label %14, label %7

7:                                                ; preds = %5
  %8 = zext i32 %2 to i64
  %9 = getelementptr inbounds [256 x i8], ptr @PL_magic_data, i64 0, i64 %8
  %10 = load i8, ptr %9, align 1, !tbaa !17
  %11 = and i8 %10, 63
  %12 = zext i8 %11 to i32
  %13 = icmp ugt i8 %11, 31
  br i1 %13, label %14, label %16

14:                                               ; preds = %7, %5
  %15 = phi i32 [ 0, %5 ], [ %12, %7 ]
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.24, i32 noundef %2) #17
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %12, %7 ]
  %18 = icmp eq i32 %17, 31
  %19 = zext i32 %17 to i64
  %20 = getelementptr inbounds %struct.mgvtbl, ptr @PL_magic_vtables, i64 %19
  %21 = select i1 %18, ptr null, ptr %20
  %22 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  %24 = and i32 %23, 134283264
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %35, label %26

26:                                               ; preds = %16
  %27 = and i32 %2, 255
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds [256 x i8], ptr @PL_magic_data, i64 0, i64 %28
  %30 = load i8, ptr %29, align 1, !tbaa !17
  %31 = and i8 %30, 64
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %26
  tail call void @Perl_croak_no_modify() #17
  %34 = load i32, ptr %22, align 4, !tbaa !16
  br label %35

35:                                               ; preds = %26, %33, %16
  %36 = phi i32 [ %23, %26 ], [ %34, %33 ], [ %23, %16 ]
  %37 = and i32 %36, 14680064
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %35
  %40 = icmp eq i32 %2, 116
  %41 = and i32 %36, 255
  %42 = icmp ugt i32 %41, 6
  %43 = and i1 %40, %42
  br i1 %43, label %44, label %90

44:                                               ; preds = %39, %35
  %45 = load ptr, ptr %0, align 8, !tbaa !26
  %46 = getelementptr inbounds %struct.xpvmg, ptr %45, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8, !tbaa !17
  %48 = icmp eq ptr %47, null
  br i1 %48, label %61, label %49

49:                                               ; preds = %44
  %50 = tail call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef %2) #17
  %51 = icmp eq ptr %50, null
  br i1 %51, label %52, label %55

52:                                               ; preds = %49
  %53 = load i32, ptr %22, align 4, !tbaa !16
  %54 = and i32 %53, 14680064
  br label %61

55:                                               ; preds = %49
  %56 = icmp eq i32 %2, 116
  br i1 %56, label %57, label %97

57:                                               ; preds = %55
  %58 = getelementptr inbounds %struct.magic, ptr %50, i64 0, i32 5
  %59 = load i64, ptr %58, align 8, !tbaa !76
  %60 = or i64 %59, 1
  store i64 %60, ptr %58, align 8, !tbaa !76
  br label %97

61:                                               ; preds = %52, %44
  %62 = phi i32 [ %54, %52 ], [ %37, %44 ]
  %63 = phi i32 [ %53, %52 ], [ %36, %44 ]
  %64 = icmp eq i32 %62, 0
  %65 = and i32 %63, 536870912
  %66 = icmp eq i32 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %90, label %68

68:                                               ; preds = %61
  %69 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %70 = getelementptr inbounds %struct.cop, ptr %69, i64 0, i32 10
  %71 = load i32, ptr %70, align 8, !tbaa !79
  %72 = and i32 %71, 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %90

74:                                               ; preds = %68
  %75 = tail call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 103) #17
  %76 = icmp eq ptr %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %struct.magic, ptr %75, i64 0, i32 5
  %79 = load i64, ptr %78, align 8, !tbaa !76
  %80 = icmp eq i64 %79, -1
  br i1 %80, label %90, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %struct.magic, ptr %75, i64 0, i32 4
  %83 = load i8, ptr %82, align 1, !tbaa !81
  %84 = and i8 %83, 64
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %90, label %86

86:                                               ; preds = %81
  %87 = tail call i64 @Perl_sv_pos_b2u_flags(ptr noundef nonnull %0, i64 noundef %79, i32 noundef 32)
  store i64 %87, ptr %78, align 8, !tbaa !76
  %88 = load i8, ptr %82, align 1, !tbaa !81
  %89 = and i8 %88, -65
  store i8 %89, ptr %82, align 1, !tbaa !81
  br label %90

90:                                               ; preds = %39, %86, %81, %77, %74, %68, %61
  %91 = tail call ptr @Perl_sv_magicext(ptr noundef nonnull %0, ptr noundef %1, i32 noundef %2, ptr noundef %21, ptr noundef %3, i32 noundef %4)
  switch i32 %2, label %97 [
    i32 116, label %92
    i32 126, label %94
    i32 76, label %94
  ]

92:                                               ; preds = %90
  %93 = getelementptr inbounds %struct.magic, ptr %91, i64 0, i32 5
  store i64 1, ptr %93, align 8, !tbaa !76
  br label %97

94:                                               ; preds = %90, %90
  %95 = load i32, ptr %22, align 4, !tbaa !16
  %96 = or i32 %95, 8388608
  store i32 %96, ptr %22, align 4, !tbaa !16
  br label %97

97:                                               ; preds = %92, %94, %90, %55, %57
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_setiv_mg(ptr noundef %0, i64 noundef %1) local_unnamed_addr #1 {
  tail call void @Perl_sv_setiv(ptr noundef %0, i64 noundef %1)
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 4194304
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = tail call i32 @Perl_mg_set(ptr noundef nonnull %0) #17
  br label %9

9:                                                ; preds = %7, %2
  ret void
}

declare i32 @Perl_mg_set(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_setuv(ptr noundef %0, i64 noundef %1) local_unnamed_addr #1 {
  %3 = icmp sgt i64 %1, -1
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @Perl_sv_setiv(ptr noundef %0, i64 noundef %1)
  br label %11

5:                                                ; preds = %2
  tail call void @Perl_sv_setiv(ptr noundef %0, i64 noundef 0)
  %6 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !16
  %8 = or i32 %7, -2147483648
  store i32 %8, ptr %6, align 4, !tbaa !16
  %9 = load ptr, ptr %0, align 8, !tbaa !26
  %10 = getelementptr inbounds %struct.xpvuv, ptr %9, i64 0, i32 4
  store i64 %1, ptr %10, align 8, !tbaa !17
  br label %11

11:                                               ; preds = %4, %5
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_setuv_mg(ptr noundef %0, i64 noundef %1) local_unnamed_addr #1 {
  %3 = icmp sgt i64 %1, -1
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @Perl_sv_setiv(ptr noundef %0, i64 noundef %1)
  br label %11

5:                                                ; preds = %2
  tail call void @Perl_sv_setiv(ptr noundef %0, i64 noundef 0)
  %6 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !16
  %8 = or i32 %7, -2147483648
  store i32 %8, ptr %6, align 4, !tbaa !16
  %9 = load ptr, ptr %0, align 8, !tbaa !26
  %10 = getelementptr inbounds %struct.xpvuv, ptr %9, i64 0, i32 4
  store i64 %1, ptr %10, align 8, !tbaa !17
  br label %11

11:                                               ; preds = %4, %5
  %12 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %13 = load i32, ptr %12, align 4, !tbaa !16
  %14 = and i32 %13, 4194304
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %11
  %17 = tail call i32 @Perl_mg_set(ptr noundef nonnull %0) #17
  br label %18

18:                                               ; preds = %16, %11
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_setnv(ptr noundef %0, double noundef nofpclass(nan inf) %1) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 427886592
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %0, i32 noundef 4)
  %8 = load i32, ptr %3, align 4, !tbaa !16
  br label %9

9:                                                ; preds = %7, %2
  %10 = phi i32 [ %8, %7 ], [ %4, %2 ]
  %11 = trunc i32 %10 to i8
  switch i8 %11, label %36 [
    i8 0, label %12
    i8 1, label %12
    i8 3, label %13
    i8 5, label %13
    i8 9, label %14
    i8 15, label %20
    i8 14, label %19
    i8 13, label %18
    i8 12, label %17
    i8 11, label %21
  ]

12:                                               ; preds = %9, %9
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 2)
  br label %36

13:                                               ; preds = %9, %9
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 6)
  br label %36

14:                                               ; preds = %9
  %15 = and i32 %10, 49152
  %16 = icmp eq i32 %15, 32768
  br i1 %16, label %21, label %36

17:                                               ; preds = %9
  br label %21

18:                                               ; preds = %9
  br label %21

19:                                               ; preds = %9
  br label %21

20:                                               ; preds = %9
  br label %21

21:                                               ; preds = %14, %9, %17, %18, %19, %20
  %22 = phi ptr [ @.str.59, %20 ], [ @.str.58, %19 ], [ @.str.56, %18 ], [ @.str.55, %17 ], [ @.str.54, %9 ], [ @.str.57, %14 ]
  %23 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %24 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 4
  %25 = load i16, ptr %24, align 8
  %26 = and i16 %25, 511
  %27 = icmp eq i16 %26, 380
  br i1 %27, label %28, label %30

28:                                               ; preds = %21
  %29 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %23, i32 noundef 2) #17
  br label %34

30:                                               ; preds = %21
  %31 = zext i16 %26 to i64
  %32 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %31
  %33 = load ptr, ptr %32, align 8, !tbaa !9
  br label %34

34:                                               ; preds = %30, %28
  %35 = phi ptr [ %29, %28 ], [ %33, %30 ]
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.5, ptr noundef nonnull %22, ptr noundef %35) #17
  br label %36

36:                                               ; preds = %9, %12, %13, %14, %34
  %37 = load ptr, ptr %0, align 8, !tbaa !26
  %38 = getelementptr inbounds %struct.xpvnv, ptr %37, i64 0, i32 5
  store double %1, ptr %38, align 8, !tbaa !17
  %39 = load i32, ptr %3, align 4, !tbaa !16
  %40 = and i32 %39, 1610547455
  store i32 %40, ptr %3, align 4, !tbaa !16
  %41 = and i32 %39, 33554432
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %68, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %45 = load ptr, ptr %44, align 8, !tbaa !17
  %46 = getelementptr inbounds i8, ptr %45, i64 -1
  %47 = load i8, ptr %46, align 1, !tbaa !17
  %48 = zext i8 %47 to i64
  %49 = icmp eq i8 %47, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %43
  %51 = getelementptr inbounds i8, ptr %45, i64 -9
  %52 = load i64, ptr %51, align 1
  br label %53

53:                                               ; preds = %43, %50
  %54 = phi i64 [ %48, %43 ], [ %52, %50 ]
  %55 = load ptr, ptr %0, align 8, !tbaa !26
  %56 = getelementptr inbounds %struct.xpv, ptr %55, i64 0, i32 3
  %57 = load i64, ptr %56, align 8, !tbaa !17
  %58 = add i64 %57, %54
  store i64 %58, ptr %56, align 8, !tbaa !17
  %59 = load ptr, ptr %44, align 8, !tbaa !17
  %60 = sub i64 0, %54
  %61 = getelementptr inbounds i8, ptr %59, i64 %60
  store ptr %61, ptr %44, align 8, !tbaa !17
  %62 = load ptr, ptr %0, align 8, !tbaa !26
  %63 = getelementptr inbounds %struct.xpv, ptr %62, i64 0, i32 2
  %64 = load i64, ptr %63, align 8, !tbaa !57
  %65 = add i64 %64, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %61, ptr nonnull align 1 %45, i64 %65, i1 false)
  %66 = load i32, ptr %3, align 4, !tbaa !16
  %67 = and i32 %66, -33554433
  br label %68

68:                                               ; preds = %53, %36
  %69 = phi i32 [ %67, %53 ], [ %40, %36 ]
  %70 = or i32 %69, 8704
  store i32 %70, ptr %3, align 4, !tbaa !16
  %71 = load i8, ptr @PL_tainting, align 1, !tbaa !5, !range !74, !noundef !75
  %72 = icmp eq i8 %71, 0
  %73 = load i8, ptr @PL_tainted, align 1, !range !74
  %74 = icmp eq i8 %73, 0
  %75 = select i1 %72, i1 true, i1 %74
  br i1 %75, label %77, label %76

76:                                               ; preds = %68
  tail call void @Perl_sv_magic(ptr noundef nonnull %0, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0)
  br label %77

77:                                               ; preds = %68, %76
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_setnv_mg(ptr noundef %0, double noundef nofpclass(nan inf) %1) local_unnamed_addr #1 {
  tail call void @Perl_sv_setnv(ptr noundef %0, double noundef nofpclass(nan inf) %1)
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 4194304
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = tail call i32 @Perl_mg_set(ptr noundef nonnull %0) #17
  br label %9

9:                                                ; preds = %7, %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @Perl_looks_like_number(ptr noundef %0) local_unnamed_addr #1 {
  %2 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #17
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 17408
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %26, label %7

7:                                                ; preds = %1
  %8 = and i32 %4, 2098176
  %9 = icmp eq i32 %8, 1024
  br i1 %9, label %10, label %16

10:                                               ; preds = %7
  %11 = load ptr, ptr %0, align 8, !tbaa !26
  %12 = getelementptr inbounds %struct.xpv, ptr %11, i64 0, i32 2
  %13 = load i64, ptr %12, align 8, !tbaa !57
  store i64 %13, ptr %2, align 8, !tbaa !60
  %14 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  br label %19

16:                                               ; preds = %7
  %17 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %0, ptr noundef nonnull %2, i32 noundef 32)
  %18 = load i64, ptr %2, align 8, !tbaa !60
  br label %19

19:                                               ; preds = %16, %10
  %20 = phi i64 [ %13, %10 ], [ %18, %16 ]
  %21 = phi ptr [ %15, %10 ], [ %17, %16 ]
  %22 = call i32 @Perl_grok_number(ptr noundef %21, i64 noundef %20, ptr noundef null) #17
  %23 = and i32 %22, 64
  %24 = icmp eq i32 %23, 0
  %25 = select i1 %24, i32 %22, i32 0
  br label %28

26:                                               ; preds = %1
  %27 = and i32 %4, 13056
  br label %28

28:                                               ; preds = %19, %26
  %29 = phi i32 [ %25, %19 ], [ %27, %26 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #17
  ret i32 %29
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_2pv_flags(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #1 {
  %4 = alloca [22 x i8], align 16
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !16
  %7 = and i32 %6, 2097152
  %8 = icmp eq i32 %7, 0
  %9 = and i32 %2, 2
  %10 = icmp eq i32 %9, 0
  %11 = or i1 %10, %8
  br i1 %11, label %15, label %12

12:                                               ; preds = %3
  %13 = tail call i32 @Perl_mg_get(ptr noundef nonnull %0) #17
  %14 = load i32, ptr %5, align 4, !tbaa !16
  br label %15

15:                                               ; preds = %12, %3
  %16 = phi i32 [ %14, %12 ], [ %6, %3 ]
  %17 = and i32 %16, 2048
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %261, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !25
  %24 = and i32 %23, 1048576
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %101, label %26

26:                                               ; preds = %19
  %27 = load ptr, ptr %21, align 8, !tbaa !26
  %28 = load ptr, ptr %27, align 8, !tbaa !50
  %29 = getelementptr inbounds %struct.hv, ptr %28, i64 0, i32 2
  %30 = load i32, ptr %29, align 4, !tbaa !64
  %31 = and i32 %30, 268435456
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %101, label %33

33:                                               ; preds = %26
  %34 = and i32 %2, 8192
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %496

36:                                               ; preds = %33
  %37 = tail call ptr @Perl_amagic_call(ptr noundef nonnull %0, ptr noundef nonnull @PL_sv_undef, i32 noundef 10, i32 noundef 9) #17
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = load ptr, ptr %20, align 8, !tbaa !17
  br label %93

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 2
  %43 = load i32, ptr %42, align 4, !tbaa !16
  %44 = and i32 %43, 14680064
  %45 = icmp ne i32 %44, 0
  %46 = and i32 %43, 255
  %47 = icmp ugt i32 %46, 6
  %48 = and i1 %45, %47
  br i1 %48, label %49, label %63

49:                                               ; preds = %41
  %50 = load ptr, ptr %37, align 8, !tbaa !26
  %51 = getelementptr inbounds %struct.xpvmg, ptr %50, i64 0, i32 1
  %52 = load ptr, ptr %51, align 8, !tbaa !17
  %53 = icmp eq ptr %52, null
  br i1 %53, label %63, label %54

54:                                               ; preds = %49
  %55 = tail call ptr @Perl_mg_find(ptr noundef nonnull %37, i32 noundef 116) #17
  %56 = icmp eq ptr %55, null
  br i1 %56, label %63, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %struct.magic, ptr %55, i64 0, i32 5
  %59 = load i64, ptr %58, align 8, !tbaa !76
  %60 = and i64 %59, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %57
  store i8 1, ptr @PL_tainted, align 1, !tbaa !5
  br label %63

63:                                               ; preds = %54, %57, %49, %62, %41
  %64 = load i32, ptr %42, align 4, !tbaa !16
  %65 = and i32 %64, 2048
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !17
  %70 = load ptr, ptr %20, align 8, !tbaa !17
  %71 = icmp eq ptr %69, %70
  br i1 %71, label %93, label %72

72:                                               ; preds = %67, %63
  %73 = and i32 %64, 1024
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %83, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 3
  %77 = load ptr, ptr %76, align 8, !tbaa !17
  %78 = icmp eq ptr %1, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %75
  %80 = load ptr, ptr %37, align 8, !tbaa !26
  %81 = getelementptr inbounds %struct.xpv, ptr %80, i64 0, i32 2
  %82 = load i64, ptr %81, align 8, !tbaa !57
  store i64 %82, ptr %1, align 8, !tbaa !60
  br label %86

83:                                               ; preds = %72
  %84 = tail call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %37, ptr noundef %1, i32 noundef %2)
  %85 = load i32, ptr %42, align 4, !tbaa !16
  br label %86

86:                                               ; preds = %75, %79, %83
  %87 = phi i32 [ %64, %79 ], [ %64, %75 ], [ %85, %83 ]
  %88 = phi ptr [ %77, %79 ], [ %77, %75 ], [ %84, %83 ]
  %89 = and i32 %87, 536870912
  %90 = load i32, ptr %5, align 4, !tbaa !16
  %91 = and i32 %90, -536870913
  %92 = or i32 %91, %89
  store i32 %92, ptr %5, align 4, !tbaa !16
  br label %496

93:                                               ; preds = %67, %39
  %94 = phi ptr [ %40, %39 ], [ %69, %67 ]
  %95 = icmp eq ptr %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %struct.sv, ptr %94, i64 0, i32 2
  %98 = load i32, ptr %97, align 4, !tbaa !25
  br label %101

99:                                               ; preds = %93
  %100 = tail call ptr @Perl_savepvn(ptr noundef nonnull @.str.6, i32 noundef 7) #17
  br label %254

101:                                              ; preds = %96, %26, %19
  %102 = phi i32 [ %98, %96 ], [ %23, %19 ], [ %23, %26 ]
  %103 = phi ptr [ %94, %96 ], [ %21, %19 ], [ %21, %26 ]
  %104 = getelementptr inbounds %struct.sv, ptr %103, i64 0, i32 2
  %105 = and i32 %102, 255
  %106 = icmp eq i32 %105, 8
  br i1 %106, label %107, label %132

107:                                              ; preds = %101
  %108 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %109 = getelementptr inbounds %struct.cop, ptr %108, i64 0, i32 10
  %110 = load i32, ptr %109, align 8, !tbaa !79
  %111 = and i32 %110, 16777216
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %107
  %114 = tail call zeroext i1 @Perl_amagic_is_enabled(i32 noundef 10) #17
  %115 = load i32, ptr %104, align 4, !tbaa !25
  br i1 %114, label %116, label %132

116:                                              ; preds = %113, %107
  %117 = phi i32 [ %115, %113 ], [ %102, %107 ]
  %118 = and i32 %117, 536870912
  %119 = load i32, ptr %5, align 4, !tbaa !16
  %120 = and i32 %119, -536870913
  %121 = or i32 %120, %118
  store i32 %121, ptr %5, align 4, !tbaa !16
  %122 = icmp eq ptr %1, null
  br i1 %122, label %127, label %123

123:                                              ; preds = %116
  %124 = load ptr, ptr %103, align 8, !tbaa !82
  %125 = getelementptr inbounds %struct.xpv, ptr %124, i64 0, i32 2
  %126 = load i64, ptr %125, align 8, !tbaa !57
  store i64 %126, ptr %1, align 8, !tbaa !60
  br label %127

127:                                              ; preds = %123, %116
  %128 = getelementptr i8, ptr %103, i64 16
  %129 = load ptr, ptr %128, align 8, !tbaa !17
  %130 = getelementptr inbounds %struct.regexp, ptr %129, i64 0, i32 3
  %131 = load ptr, ptr %130, align 8, !tbaa !17
  br label %496

132:                                              ; preds = %113, %101
  %133 = phi i32 [ %102, %101 ], [ %115, %113 ]
  %134 = trunc i32 %133 to i8
  switch i8 %134, label %167 [
    i8 0, label %135
    i8 1, label %135
    i8 2, label %135
    i8 3, label %135
    i8 5, label %135
    i8 6, label %135
    i8 7, label %135
    i8 10, label %147
    i8 11, label %168
    i8 12, label %157
    i8 13, label %158
    i8 9, label %159
    i8 14, label %163
    i8 15, label %164
    i8 4, label %165
    i8 8, label %166
  ]

135:                                              ; preds = %132, %132, %132, %132, %132, %132, %132
  %136 = and i32 %133, 14680064
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %142, label %138

138:                                              ; preds = %135
  %139 = tail call ptr @Perl_mg_find(ptr noundef nonnull %103, i32 noundef 86) #17
  %140 = icmp eq ptr %139, null
  %141 = load i32, ptr %104, align 4, !tbaa !16
  br i1 %140, label %142, label %168

142:                                              ; preds = %138, %135
  %143 = phi i32 [ %133, %135 ], [ %141, %138 ]
  %144 = and i32 %143, 2048
  %145 = icmp eq i32 %144, 0
  %146 = select i1 %145, ptr @.str.52, ptr @.str.51
  br label %168

147:                                              ; preds = %132
  %148 = and i32 %133, 2048
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %168

150:                                              ; preds = %147
  %151 = load ptr, ptr %103, align 8, !tbaa !26
  %152 = getelementptr inbounds %struct.xpvlv, ptr %151, i64 0, i32 9
  %153 = load i8, ptr %152, align 8, !tbaa !40
  %154 = and i8 %153, -33
  %155 = icmp eq i8 %154, 84
  %156 = select i1 %155, ptr @.str.52, ptr @.str.53
  br label %168

157:                                              ; preds = %132
  br label %168

158:                                              ; preds = %132
  br label %168

159:                                              ; preds = %132
  %160 = and i32 %133, 49152
  %161 = icmp eq i32 %160, 32768
  %162 = select i1 %161, ptr @.str.57, ptr @.str.52
  br label %168

163:                                              ; preds = %132
  br label %168

164:                                              ; preds = %132
  br label %168

165:                                              ; preds = %132
  br label %168

166:                                              ; preds = %132
  br label %168

167:                                              ; preds = %132
  br label %168

168:                                              ; preds = %132, %138, %142, %147, %150, %157, %158, %159, %163, %164, %165, %166, %167
  %169 = phi i32 [ %133, %167 ], [ %133, %166 ], [ %133, %165 ], [ %133, %164 ], [ %133, %163 ], [ %133, %159 ], [ %133, %158 ], [ %133, %157 ], [ %141, %138 ], [ %143, %142 ], [ %133, %150 ], [ %133, %147 ], [ %133, %132 ]
  %170 = phi ptr [ @.str.62, %167 ], [ @.str.61, %166 ], [ @.str.60, %165 ], [ @.str.59, %164 ], [ @.str.58, %163 ], [ %162, %159 ], [ @.str.56, %158 ], [ @.str.55, %157 ], [ @.str.50, %138 ], [ %146, %142 ], [ %156, %150 ], [ @.str.51, %147 ], [ @.str.54, %132 ]
  %171 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %170) #18
  %172 = ptrtoint ptr %103 to i64
  %173 = and i32 %169, 1048576
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %219, label %175

175:                                              ; preds = %168
  %176 = load ptr, ptr %103, align 8, !tbaa !26
  %177 = load ptr, ptr %176, align 8, !tbaa !50
  %178 = getelementptr inbounds %struct.hv, ptr %177, i64 0, i32 2
  %179 = load i32, ptr %178, align 4, !tbaa !64
  %180 = and i32 %179, 33554432
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %214, label %182

182:                                              ; preds = %175
  %183 = getelementptr inbounds %struct.hv, ptr %177, i64 0, i32 3
  %184 = load ptr, ptr %183, align 8, !tbaa !17
  %185 = load ptr, ptr %177, align 8, !tbaa !66
  %186 = getelementptr inbounds %struct.xpvhv, ptr %185, i64 0, i32 3
  %187 = load i64, ptr %186, align 8, !tbaa !48
  %188 = add i64 %187, 1
  %189 = getelementptr inbounds ptr, ptr %184, i64 %188
  %190 = load ptr, ptr %189, align 8, !tbaa !17
  %191 = icmp eq ptr %190, null
  br i1 %191, label %214, label %192

192:                                              ; preds = %182
  %193 = getelementptr inbounds %struct.xpvhv_aux, ptr %189, i64 0, i32 4
  %194 = load i32, ptr %193, align 4, !tbaa !67
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %199, label %196

196:                                              ; preds = %192
  %197 = load ptr, ptr %190, align 8, !tbaa !9
  %198 = icmp eq ptr %197, null
  br i1 %198, label %214, label %199

199:                                              ; preds = %192, %196
  %200 = phi ptr [ %197, %196 ], [ %190, %192 ]
  %201 = getelementptr inbounds %struct.hek, ptr %200, i64 0, i32 2
  %202 = getelementptr inbounds %struct.hek, ptr %200, i64 0, i32 1
  %203 = load i32, ptr %202, align 4, !tbaa !84
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds i8, ptr %201, i64 %204
  %206 = getelementptr inbounds i8, ptr %205, i64 1
  %207 = load i8, ptr %206, align 1, !tbaa !17
  %208 = and i8 %207, 1
  %209 = load i32, ptr %5, align 4, !tbaa !16
  %210 = and i32 %209, -536870913
  %211 = zext i8 %208 to i32
  %212 = shl nuw nsw i32 %211, 29
  %213 = or i32 %212, %210
  store i32 %213, ptr %5, align 4, !tbaa !16
  br label %214

214:                                              ; preds = %199, %175, %182, %196
  %215 = phi i64 [ 8, %196 ], [ 8, %182 ], [ 8, %175 ], [ %204, %199 ]
  %216 = phi ptr [ @.str.7, %196 ], [ @.str.7, %182 ], [ @.str.7, %175 ], [ %201, %199 ]
  %217 = add i64 %171, 1
  %218 = add i64 %217, %215
  br label %219

219:                                              ; preds = %168, %214
  %220 = phi i64 [ %215, %214 ], [ 0, %168 ]
  %221 = phi ptr [ %216, %214 ], [ null, %168 ]
  %222 = phi i64 [ %218, %214 ], [ %171, %168 ]
  %223 = add i64 %222, 21
  %224 = tail call ptr @Perl_safesysmalloc(i64 noundef %223) #17
  %225 = getelementptr inbounds i8, ptr %224, i64 %223
  %226 = getelementptr inbounds i8, ptr %225, i64 -1
  store i8 0, ptr %226, align 1, !tbaa !17
  %227 = getelementptr inbounds i8, ptr %225, i64 -2
  store i8 41, ptr %227, align 1, !tbaa !17
  br label %228

228:                                              ; preds = %228, %219
  %229 = phi i64 [ %172, %219 ], [ %235, %228 ]
  %230 = phi ptr [ %227, %219 ], [ %234, %228 ]
  %231 = and i64 %229, 15
  %232 = getelementptr inbounds [0 x i8], ptr @PL_hexdigit, i64 0, i64 %231
  %233 = load i8, ptr %232, align 1, !tbaa !17
  %234 = getelementptr inbounds i8, ptr %230, i64 -1
  store i8 %233, ptr %234, align 1, !tbaa !17
  %235 = lshr i64 %229, 4
  %236 = icmp ult i64 %229, 16
  br i1 %236, label %237, label %228, !llvm.loop !86

237:                                              ; preds = %228
  %238 = getelementptr inbounds i8, ptr %230, i64 -2
  store i8 120, ptr %238, align 1, !tbaa !17
  %239 = getelementptr inbounds i8, ptr %230, i64 -3
  store i8 48, ptr %239, align 1, !tbaa !17
  %240 = getelementptr inbounds i8, ptr %230, i64 -4
  store i8 40, ptr %240, align 1, !tbaa !17
  %241 = sub i64 0, %171
  %242 = getelementptr inbounds i8, ptr %240, i64 %241
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %242, ptr nonnull align 1 %170, i64 %171, i1 false)
  %243 = icmp eq ptr %221, null
  br i1 %243, label %248, label %244

244:                                              ; preds = %237
  %245 = getelementptr inbounds i8, ptr %242, i64 -1
  store i8 61, ptr %245, align 1, !tbaa !17
  %246 = sub nsw i64 0, %220
  %247 = getelementptr inbounds i8, ptr %245, i64 %246
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %247, ptr nonnull align 1 %221, i64 %220, i1 false)
  br label %248

248:                                              ; preds = %244, %237
  %249 = phi ptr [ %247, %244 ], [ %242, %237 ]
  %250 = ptrtoint ptr %225 to i64
  %251 = ptrtoint ptr %249 to i64
  %252 = xor i64 %251, -1
  %253 = add i64 %252, %250
  br label %254

254:                                              ; preds = %248, %99
  %255 = phi ptr [ %224, %248 ], [ %100, %99 ]
  %256 = phi ptr [ %249, %248 ], [ %100, %99 ]
  %257 = phi i64 [ %253, %248 ], [ 7, %99 ]
  %258 = icmp eq ptr %1, null
  br i1 %258, label %260, label %259

259:                                              ; preds = %254
  store i64 %257, ptr %1, align 8, !tbaa !60
  br label %260

260:                                              ; preds = %259, %254
  tail call void @Perl_save_pushptr(ptr noundef %255, i32 noundef 10) #17
  br label %496

261:                                              ; preds = %15
  %262 = and i32 %16, 16384
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %273, label %264

264:                                              ; preds = %261
  %265 = icmp eq ptr %1, null
  br i1 %265, label %270, label %266

266:                                              ; preds = %264
  %267 = load ptr, ptr %0, align 8, !tbaa !26
  %268 = getelementptr inbounds %struct.xpv, ptr %267, i64 0, i32 2
  %269 = load i64, ptr %268, align 8, !tbaa !57
  store i64 %269, ptr %1, align 8, !tbaa !60
  br label %270

270:                                              ; preds = %266, %264
  %271 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %272 = load ptr, ptr %271, align 8, !tbaa !17
  br label %496

273:                                              ; preds = %261
  %274 = and i32 %16, 256
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %321, label %276

276:                                              ; preds = %273
  call void @llvm.lifetime.start.p0(i64 22, ptr nonnull %4) #17
  %277 = and i32 %16, 255
  %278 = icmp ult i32 %277, 5
  br i1 %278, label %279, label %280

279:                                              ; preds = %276
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 5)
  br label %280

280:                                              ; preds = %279, %276
  %281 = load ptr, ptr %0, align 8, !tbaa !26
  %282 = getelementptr inbounds %struct.xpviv, ptr %281, i64 0, i32 4
  %283 = load i64, ptr %282, align 8, !tbaa !17
  %284 = getelementptr inbounds i8, ptr %4, i64 22
  %285 = icmp slt i32 %16, 0
  %286 = tail call i64 @llvm.abs.i64(i64 %283, i1 false)
  %287 = select i1 %285, i64 %283, i64 %286
  br label %288

288:                                              ; preds = %288, %280
  %289 = phi ptr [ %284, %280 ], [ %294, %288 ]
  %290 = phi i64 [ %287, %280 ], [ %295, %288 ]
  %291 = urem i64 %290, 10
  %292 = trunc i64 %291 to i8
  %293 = or i8 %292, 48
  %294 = getelementptr inbounds i8, ptr %289, i64 -1
  store i8 %293, ptr %294, align 1, !tbaa !17
  %295 = udiv i64 %290, 10
  %296 = icmp ult i64 %290, 10
  br i1 %296, label %297, label %288, !llvm.loop !87

297:                                              ; preds = %288
  %298 = icmp sgt i64 %283, -1
  %299 = or i1 %285, %298
  br i1 %299, label %302, label %300

300:                                              ; preds = %297
  %301 = getelementptr inbounds i8, ptr %289, i64 -2
  store i8 45, ptr %301, align 1, !tbaa !17
  br label %302

302:                                              ; preds = %297, %300
  %303 = phi ptr [ %301, %300 ], [ %294, %297 ]
  %304 = ptrtoint ptr %284 to i64
  %305 = ptrtoint ptr %303 to i64
  %306 = sub i64 %304, %305
  %307 = getelementptr inbounds %struct.xpv, ptr %281, i64 0, i32 3
  %308 = load i64, ptr %307, align 8, !tbaa !17
  %309 = add i64 %306, 1
  %310 = icmp ult i64 %308, %309
  br i1 %310, label %311, label %313

311:                                              ; preds = %302
  %312 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %309)
  br label %316

313:                                              ; preds = %302
  %314 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %315 = load ptr, ptr %314, align 8, !tbaa !17
  br label %316

316:                                              ; preds = %313, %311
  %317 = phi ptr [ %312, %311 ], [ %315, %313 ]
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %317, ptr nonnull align 1 %303, i64 %306, i1 false)
  %318 = getelementptr inbounds i8, ptr %317, i64 %306
  store i8 0, ptr %318, align 1, !tbaa !17
  %319 = load i32, ptr %5, align 4, !tbaa !16
  %320 = or i32 %319, 17408
  store i32 %320, ptr %5, align 4, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 22, ptr nonnull %4) #17
  br label %483

321:                                              ; preds = %273
  %322 = and i32 %16, 512
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %377, label %324

324:                                              ; preds = %321
  %325 = and i32 %16, 254
  %326 = icmp ult i32 %325, 6
  br i1 %326, label %327, label %328

327:                                              ; preds = %324
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 6)
  br label %328

328:                                              ; preds = %327, %324
  %329 = load ptr, ptr %0, align 8, !tbaa !26
  %330 = getelementptr inbounds %struct.xpvnv, ptr %329, i64 0, i32 5
  %331 = load double, ptr %330, align 8, !tbaa !17
  %332 = fcmp fast oeq double %331, 0.000000e+00
  %333 = getelementptr inbounds %struct.xpv, ptr %329, i64 0, i32 3
  %334 = load i64, ptr %333, align 8, !tbaa !17
  br i1 %332, label %335, label %345

335:                                              ; preds = %328
  %336 = icmp ult i64 %334, 2
  br i1 %336, label %337, label %339

337:                                              ; preds = %335
  %338 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef 2)
  br label %342

339:                                              ; preds = %335
  %340 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %341 = load ptr, ptr %340, align 8, !tbaa !17
  br label %342

342:                                              ; preds = %339, %337
  %343 = phi ptr [ %338, %337 ], [ %341, %339 ]
  %344 = getelementptr inbounds i8, ptr %343, i64 1
  store i8 48, ptr %343, align 1, !tbaa !17
  store i8 0, ptr %344, align 1, !tbaa !17
  br label %483

345:                                              ; preds = %328
  %346 = icmp ult i64 %334, 5
  br i1 %346, label %347, label %352

347:                                              ; preds = %345
  %348 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef 5)
  %349 = load ptr, ptr %0, align 8, !tbaa !26
  %350 = getelementptr inbounds %struct.xpv, ptr %349, i64 0, i32 3
  %351 = load i64, ptr %350, align 8, !tbaa !17
  br label %352

352:                                              ; preds = %345, %347
  %353 = phi i64 [ %334, %345 ], [ %351, %347 ]
  %354 = phi ptr [ %329, %345 ], [ %349, %347 ]
  %355 = tail call ptr @__errno_location() #19
  %356 = load i32, ptr %355, align 4, !tbaa !25
  %357 = icmp ult i64 %353, 27
  br i1 %357, label %358, label %361

358:                                              ; preds = %352
  %359 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef 27)
  %360 = load ptr, ptr %0, align 8, !tbaa !26
  br label %364

361:                                              ; preds = %352
  %362 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %363 = load ptr, ptr %362, align 8, !tbaa !17
  br label %364

364:                                              ; preds = %358, %361
  %365 = phi ptr [ %360, %358 ], [ %354, %361 ]
  %366 = phi ptr [ %359, %358 ], [ %363, %361 ]
  %367 = getelementptr inbounds %struct.xpvnv, ptr %365, i64 0, i32 5
  %368 = load double, ptr %367, align 8, !tbaa !17
  %369 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %366, ptr noundef nonnull dereferenceable(1) @.str.8, i32 noundef 15, double noundef nofpclass(nan inf) %368) #17
  %370 = load i32, ptr %5, align 4, !tbaa !16
  %371 = or i32 %370, 17408
  store i32 %371, ptr %5, align 4, !tbaa !16
  store i32 %356, ptr %355, align 4, !tbaa !25
  br label %372

372:                                              ; preds = %372, %364
  %373 = phi ptr [ %366, %364 ], [ %376, %372 ]
  %374 = load i8, ptr %373, align 1, !tbaa !17
  %375 = icmp eq i8 %374, 0
  %376 = getelementptr inbounds i8, ptr %373, i64 1
  br i1 %375, label %483, label %372, !llvm.loop !88

377:                                              ; preds = %321
  %378 = and i32 %16, 49152
  %379 = icmp eq i32 %378, 32768
  %380 = and i32 %16, 255
  %381 = add nsw i32 %380, -9
  %382 = icmp ult i32 %381, 2
  %383 = select i1 %379, i1 %382, i1 false
  br i1 %383, label %384, label %448

384:                                              ; preds = %377
  %385 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %386 = icmp eq ptr %385, null
  br i1 %386, label %387, label %416

387:                                              ; preds = %384
  %388 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %389 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %389, ptr %388, align 8, !tbaa !26
  %390 = getelementptr inbounds %struct.sv, ptr %388, i64 0, i32 1
  store i32 170, ptr %390, align 8, !tbaa !13
  %391 = getelementptr inbounds %struct.sv, ptr %388, i64 0, i32 2
  store i32 0, ptr %391, align 4, !tbaa !16
  store ptr %388, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %392 = getelementptr inbounds %struct.sv, ptr %388, i64 1
  store ptr %392, ptr @PL_sv_root, align 8, !tbaa !9
  br label %393

393:                                              ; preds = %393, %387
  %394 = phi ptr [ %392, %387 ], [ %411, %393 ]
  %395 = phi i64 [ 1, %387 ], [ %410, %393 ]
  %396 = getelementptr inbounds %struct.sv, ptr %394, i64 1
  store ptr %396, ptr %394, align 8, !tbaa !26
  %397 = getelementptr inbounds %struct.sv, ptr %388, i64 %395, i32 2
  store i32 255, ptr %397, align 4, !tbaa !16
  %398 = add nuw nsw i64 %395, 1
  %399 = getelementptr inbounds %struct.sv, ptr %388, i64 %398
  %400 = getelementptr inbounds %struct.sv, ptr %399, i64 1
  store ptr %400, ptr %399, align 8, !tbaa !26
  %401 = getelementptr inbounds %struct.sv, ptr %388, i64 %398, i32 2
  store i32 255, ptr %401, align 4, !tbaa !16
  %402 = add nuw nsw i64 %395, 2
  %403 = getelementptr inbounds %struct.sv, ptr %388, i64 %402
  %404 = getelementptr inbounds %struct.sv, ptr %403, i64 1
  store ptr %404, ptr %403, align 8, !tbaa !26
  %405 = getelementptr inbounds %struct.sv, ptr %388, i64 %402, i32 2
  store i32 255, ptr %405, align 4, !tbaa !16
  %406 = add nuw nsw i64 %395, 3
  %407 = getelementptr inbounds %struct.sv, ptr %388, i64 %406
  %408 = getelementptr inbounds %struct.sv, ptr %407, i64 1
  store ptr %408, ptr %407, align 8, !tbaa !26
  %409 = getelementptr inbounds %struct.sv, ptr %388, i64 %406, i32 2
  store i32 255, ptr %409, align 4, !tbaa !16
  %410 = add nuw nsw i64 %395, 4
  %411 = getelementptr inbounds %struct.sv, ptr %388, i64 %410
  %412 = icmp eq i64 %410, 169
  br i1 %412, label %413, label %393, !llvm.loop !59

413:                                              ; preds = %393
  store ptr null, ptr %411, align 8, !tbaa !26
  %414 = getelementptr inbounds %struct.sv, ptr %388, i64 169, i32 2
  store i32 255, ptr %414, align 4, !tbaa !16
  %415 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %416

416:                                              ; preds = %413, %384
  %417 = phi ptr [ %415, %413 ], [ %385, %384 ]
  %418 = load ptr, ptr %417, align 8, !tbaa !26
  store ptr %418, ptr @PL_sv_root, align 8, !tbaa !9
  %419 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %420 = add nsw i64 %419, 1
  store i64 %420, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %417, align 8, !tbaa !26
  %421 = getelementptr inbounds %struct.sv, ptr %417, i64 0, i32 1
  store i32 1, ptr %421, align 8, !tbaa !13
  %422 = getelementptr inbounds %struct.sv, ptr %417, i64 0, i32 2
  store i32 524288, ptr %422, align 4, !tbaa !16
  %423 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %424 = add nsw i64 %423, 1
  store i64 %424, ptr @PL_tmps_ix, align 8, !tbaa !60
  %425 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %426 = icmp slt i64 %424, %425
  br i1 %426, label %429, label %427

427:                                              ; preds = %416
  %428 = tail call i64 @Perl_tmps_grow_p(i64 noundef %424) #17
  br label %429

429:                                              ; preds = %416, %427
  %430 = phi i64 [ %428, %427 ], [ %424, %416 ]
  %431 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %432 = getelementptr inbounds ptr, ptr %431, i64 %430
  store ptr %417, ptr %432, align 8, !tbaa !9
  tail call void @Perl_gv_efullname4(ptr noundef nonnull %417, ptr noundef nonnull %0, ptr noundef nonnull @.str.9, i1 noundef zeroext true) #17
  %433 = load i32, ptr %422, align 4, !tbaa !16
  %434 = and i32 %433, 536870912
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %439, label %436

436:                                              ; preds = %429
  %437 = load i32, ptr %5, align 4, !tbaa !16
  %438 = or i32 %437, 536870912
  store i32 %438, ptr %5, align 4, !tbaa !16
  br label %439

439:                                              ; preds = %436, %429
  %440 = icmp eq ptr %1, null
  br i1 %440, label %445, label %441

441:                                              ; preds = %439
  %442 = load ptr, ptr %417, align 8, !tbaa !26
  %443 = getelementptr inbounds %struct.xpv, ptr %442, i64 0, i32 2
  %444 = load i64, ptr %443, align 8, !tbaa !57
  store i64 %444, ptr %1, align 8, !tbaa !60
  br label %445

445:                                              ; preds = %441, %439
  %446 = getelementptr inbounds %struct.sv, ptr %417, i64 0, i32 3
  %447 = load ptr, ptr %446, align 8, !tbaa !17
  br label %496

448:                                              ; preds = %377
  %449 = icmp eq i32 %380, 8
  %450 = and i32 %16, 16826623
  %451 = icmp eq i32 %450, 16777226
  %452 = or i1 %449, %451
  %453 = icmp eq ptr %1, null
  br i1 %452, label %454, label %464

454:                                              ; preds = %448
  br i1 %453, label %459, label %455

455:                                              ; preds = %454
  %456 = load ptr, ptr %0, align 8, !tbaa !82
  %457 = getelementptr inbounds %struct.xpv, ptr %456, i64 0, i32 2
  %458 = load i64, ptr %457, align 8, !tbaa !57
  store i64 %458, ptr %1, align 8, !tbaa !60
  br label %459

459:                                              ; preds = %455, %454
  %460 = getelementptr i8, ptr %0, i64 16
  %461 = load ptr, ptr %460, align 8, !tbaa !17
  %462 = getelementptr inbounds %struct.regexp, ptr %461, i64 0, i32 3
  %463 = load ptr, ptr %462, align 8, !tbaa !17
  br label %496

464:                                              ; preds = %448
  br i1 %453, label %466, label %465

465:                                              ; preds = %464
  store i64 0, ptr %1, align 8, !tbaa !60
  br label %466

466:                                              ; preds = %465, %464
  %467 = and i32 %2, 2048
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %469, label %496

469:                                              ; preds = %466
  %470 = load i8, ptr @PL_localizing, align 1, !tbaa !17
  %471 = icmp eq i8 %470, 0
  br i1 %471, label %472, label %475

472:                                              ; preds = %469
  %473 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 41) #17
  br i1 %473, label %474, label %475

474:                                              ; preds = %472
  tail call void @Perl_report_uninit(ptr noundef nonnull %0)
  br label %475

475:                                              ; preds = %474, %472, %469
  %476 = load i32, ptr %5, align 4, !tbaa !16
  %477 = and i32 %476, 134283264
  %478 = icmp eq i32 %477, 0
  %479 = and i32 %476, 255
  %480 = icmp ult i32 %479, 3
  %481 = and i1 %478, %480
  br i1 %481, label %482, label %496

482:                                              ; preds = %475
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 3)
  br label %496

483:                                              ; preds = %372, %342, %316
  %484 = phi ptr [ %318, %316 ], [ %344, %342 ], [ %373, %372 ]
  %485 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %486 = load ptr, ptr %485, align 8, !tbaa !17
  %487 = ptrtoint ptr %484 to i64
  %488 = ptrtoint ptr %486 to i64
  %489 = sub i64 %487, %488
  %490 = icmp eq ptr %1, null
  br i1 %490, label %492, label %491

491:                                              ; preds = %483
  store i64 %489, ptr %1, align 8, !tbaa !60
  br label %492

492:                                              ; preds = %483, %491
  %493 = load ptr, ptr %0, align 8, !tbaa !26
  %494 = getelementptr inbounds %struct.xpv, ptr %493, i64 0, i32 2
  store i64 %489, ptr %494, align 8, !tbaa !57
  %495 = load ptr, ptr %485, align 8, !tbaa !17
  br label %496

496:                                              ; preds = %492, %270, %86, %33, %475, %482, %466, %127, %260, %459, %445
  %497 = phi ptr [ %447, %445 ], [ %463, %459 ], [ %131, %127 ], [ %256, %260 ], [ null, %466 ], [ @.str.10, %482 ], [ @.str.10, %475 ], [ %88, %86 ], [ null, %33 ], [ %272, %270 ], [ %495, %492 ]
  ret ptr %497
}

declare i32 @Perl_grok_number(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @Perl_sv_2iv_flags(ptr noundef %0, i32 noundef %1) local_unnamed_addr #1 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 2097152
  %7 = icmp eq i32 %6, 0
  %8 = and i32 %1, 2
  %9 = icmp eq i32 %8, 0
  %10 = or i1 %9, %7
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = tail call i32 @Perl_mg_get(ptr noundef nonnull %0) #17
  %13 = load i32, ptr %4, align 4, !tbaa !16
  br label %14

14:                                               ; preds = %11, %2
  %15 = phi i32 [ %13, %11 ], [ %5, %2 ]
  %16 = and i32 %15, 2048
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %103, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = getelementptr inbounds %struct.sv, ptr %20, i64 0, i32 2
  %22 = load i32, ptr %21, align 4, !tbaa !16
  %23 = and i32 %22, 1048576
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %99, label %25

25:                                               ; preds = %18
  %26 = load ptr, ptr %20, align 8, !tbaa !26
  %27 = load ptr, ptr %26, align 8, !tbaa !50
  %28 = getelementptr inbounds %struct.hv, ptr %27, i64 0, i32 2
  %29 = load i32, ptr %28, align 4, !tbaa !64
  %30 = and i32 %29, 268435456
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %99, label %32

32:                                               ; preds = %25
  %33 = and i32 %1, 8192
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %194

35:                                               ; preds = %32
  %36 = tail call ptr @Perl_amagic_call(ptr noundef nonnull %0, ptr noundef nonnull @PL_sv_undef, i32 noundef 9, i32 noundef 9) #17
  %37 = icmp eq ptr %36, null
  br i1 %37, label %99, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %40 = load i32, ptr %39, align 4, !tbaa !16
  %41 = and i32 %40, 2048
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 3
  %45 = load ptr, ptr %44, align 8, !tbaa !17
  %46 = load ptr, ptr %19, align 8, !tbaa !17
  %47 = icmp eq ptr %45, %46
  br i1 %47, label %99, label %48

48:                                               ; preds = %43, %38
  %49 = and i32 %40, 2097408
  %50 = icmp eq i32 %49, 256
  br i1 %50, label %94, label %51

51:                                               ; preds = %48, %91
  %52 = phi i32 [ %83, %91 ], [ %40, %48 ]
  %53 = phi ptr [ %79, %91 ], [ %36, %48 ]
  %54 = getelementptr inbounds %struct.sv, ptr %53, i64 0, i32 2
  %55 = and i32 %52, 2097152
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = tail call i32 @Perl_mg_get(ptr noundef nonnull %53) #17
  %59 = load i32, ptr %54, align 4, !tbaa !16
  br label %60

60:                                               ; preds = %57, %51
  %61 = phi i32 [ %59, %57 ], [ %52, %51 ]
  %62 = and i32 %61, 2048
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %103, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.sv, ptr %53, i64 0, i32 3
  %66 = load ptr, ptr %65, align 8, !tbaa !17
  %67 = getelementptr inbounds %struct.sv, ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !16
  %69 = and i32 %68, 1048576
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %99, label %71

71:                                               ; preds = %64
  %72 = load ptr, ptr %66, align 8, !tbaa !26
  %73 = load ptr, ptr %72, align 8, !tbaa !50
  %74 = getelementptr inbounds %struct.hv, ptr %73, i64 0, i32 2
  %75 = load i32, ptr %74, align 4, !tbaa !64
  %76 = and i32 %75, 268435456
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %99, label %78

78:                                               ; preds = %71
  %79 = tail call ptr @Perl_amagic_call(ptr noundef nonnull %53, ptr noundef nonnull @PL_sv_undef, i32 noundef 9, i32 noundef 9) #17
  %80 = icmp eq ptr %79, null
  br i1 %80, label %99, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %struct.sv, ptr %79, i64 0, i32 2
  %83 = load i32, ptr %82, align 4, !tbaa !16
  %84 = and i32 %83, 2048
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %91, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %struct.sv, ptr %79, i64 0, i32 3
  %88 = load ptr, ptr %87, align 8, !tbaa !17
  %89 = load ptr, ptr %65, align 8, !tbaa !17
  %90 = icmp eq ptr %88, %89
  br i1 %90, label %99, label %91

91:                                               ; preds = %86, %81
  %92 = and i32 %83, 2097408
  %93 = icmp eq i32 %92, 256
  br i1 %93, label %94, label %51, !llvm.loop !89

94:                                               ; preds = %91, %48
  %95 = phi ptr [ %36, %48 ], [ %79, %91 ]
  %96 = load ptr, ptr %95, align 8, !tbaa !26
  %97 = getelementptr inbounds %struct.xpviv, ptr %96, i64 0, i32 4
  %98 = load i64, ptr %97, align 8, !tbaa !17
  br label %194

99:                                               ; preds = %86, %78, %71, %64, %43, %35, %25, %18
  %100 = phi ptr [ %19, %18 ], [ %19, %25 ], [ %19, %35 ], [ %19, %43 ], [ %65, %64 ], [ %65, %71 ], [ %65, %78 ], [ %65, %86 ]
  %101 = load ptr, ptr %100, align 8, !tbaa !17
  %102 = ptrtoint ptr %101 to i64
  br label %194

103:                                              ; preds = %60, %14
  %104 = phi i32 [ %15, %14 ], [ %61, %60 ]
  %105 = phi ptr [ %0, %14 ], [ %53, %60 ]
  %106 = phi ptr [ %4, %14 ], [ %54, %60 ]
  %107 = and i32 %104, 1073741824
  %108 = icmp eq i32 %107, 0
  %109 = and i32 %104, 49152
  %110 = icmp eq i32 %109, 49152
  %111 = or i1 %108, %110
  %112 = and i32 %104, 255
  br i1 %111, label %115, label %113

113:                                              ; preds = %103
  %114 = and i32 %104, 16826623
  br label %120

115:                                              ; preds = %103
  %116 = icmp eq i32 %112, 8
  %117 = and i32 %104, 16826623
  %118 = icmp eq i32 %117, 16777226
  %119 = or i1 %116, %118
  br i1 %119, label %120, label %170

120:                                              ; preds = %113, %115
  %121 = phi i32 [ %114, %113 ], [ %117, %115 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #17
  %122 = icmp eq i32 %112, 8
  %123 = icmp eq i32 %121, 16777226
  %124 = or i1 %122, %123
  br i1 %124, label %125, label %129

125:                                              ; preds = %120
  %126 = getelementptr i8, ptr %105, i64 16
  %127 = load ptr, ptr %126, align 8, !tbaa !17
  %128 = getelementptr inbounds %struct.regexp, ptr %127, i64 0, i32 3
  br label %131

129:                                              ; preds = %120
  %130 = getelementptr inbounds %struct.sv, ptr %105, i64 0, i32 3
  br label %131

131:                                              ; preds = %129, %125
  %132 = phi ptr [ %128, %125 ], [ %130, %129 ]
  %133 = load ptr, ptr %132, align 8, !tbaa !17
  %134 = load ptr, ptr %105, align 8, !tbaa !26
  %135 = getelementptr inbounds %struct.xpv, ptr %134, i64 0, i32 2
  %136 = load i64, ptr %135, align 8, !tbaa !57
  %137 = call i32 @Perl_grok_number(ptr noundef %133, i64 noundef %136, ptr noundef nonnull %3) #17
  %138 = and i32 %137, 5
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %150

140:                                              ; preds = %131
  %141 = and i32 %137, 8
  %142 = icmp eq i32 %141, 0
  %143 = load i64, ptr %3, align 8, !tbaa !60
  br i1 %142, label %148, label %144

144:                                              ; preds = %140
  %145 = icmp sgt i64 %143, -1
  br i1 %145, label %146, label %150

146:                                              ; preds = %144
  %147 = sub nsw i64 0, %143
  br label %168

148:                                              ; preds = %140
  %149 = icmp ult i64 %143, 9223372036854775807
  br i1 %149, label %168, label %150

150:                                              ; preds = %144, %148, %131
  %151 = and i32 %137, 16
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %157, label %153

153:                                              ; preds = %150
  %154 = and i32 %137, 8
  %155 = icmp eq i32 %154, 0
  %156 = select i1 %155, i64 9223372036854775807, i64 -9223372036854775808
  br label %168

157:                                              ; preds = %150
  %158 = and i32 %137, 32
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %168

160:                                              ; preds = %157
  %161 = icmp eq i32 %137, 0
  br i1 %161, label %162, label %165

162:                                              ; preds = %160
  %163 = call zeroext i1 @Perl_ckwarn(i32 noundef 13) #17
  br i1 %163, label %164, label %165

164:                                              ; preds = %162
  call fastcc void @S_not_a_number(ptr noundef nonnull %105)
  br label %165

165:                                              ; preds = %162, %164, %160
  %166 = call fast nofpclass(nan inf) double @Perl_my_atof(ptr noundef %133) #17
  %167 = call i64 @Perl_cast_iv(double noundef nofpclass(nan inf) %166) #17
  br label %168

168:                                              ; preds = %157, %148, %165, %153, %146
  %169 = phi i64 [ %147, %146 ], [ %156, %153 ], [ %167, %165 ], [ %143, %148 ], [ 0, %157 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #17
  br label %194

170:                                              ; preds = %115
  %171 = and i32 %104, 134283264
  %172 = icmp ne i32 %171, 0
  %173 = and i32 %104, 65280
  %174 = icmp eq i32 %173, 0
  %175 = and i1 %172, %174
  br i1 %175, label %176, label %179

176:                                              ; preds = %170
  %177 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 41) #17
  br i1 %177, label %178, label %194

178:                                              ; preds = %176
  tail call void @Perl_report_uninit(ptr noundef nonnull %105)
  br label %194

179:                                              ; preds = %170
  %180 = and i32 %104, 4096
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %186

182:                                              ; preds = %179
  %183 = tail call fastcc zeroext i1 @S_sv_2iuv_common(ptr noundef nonnull %105)
  br i1 %183, label %194, label %184

184:                                              ; preds = %182
  %185 = load i32, ptr %106, align 4, !tbaa !16
  br label %186

186:                                              ; preds = %184, %179
  %187 = phi i32 [ %185, %184 ], [ %104, %179 ]
  %188 = load ptr, ptr %105, align 8, !tbaa !26
  %189 = getelementptr inbounds %struct.xpvuv, ptr %188, i64 0, i32 4
  %190 = getelementptr inbounds %struct.xpviv, ptr %188, i64 0, i32 4
  %191 = icmp slt i32 %187, 0
  %192 = select i1 %191, ptr %189, ptr %190
  %193 = load i64, ptr %192, align 8, !tbaa !17
  br label %194

194:                                              ; preds = %32, %94, %182, %176, %178, %186, %168, %99
  %195 = phi i64 [ %102, %99 ], [ %169, %168 ], [ %193, %186 ], [ 0, %178 ], [ 0, %176 ], [ 0, %182 ], [ %98, %94 ], [ 0, %32 ]
  ret i64 %195
}

declare i32 @Perl_mg_get(ptr noundef) local_unnamed_addr #3

declare ptr @Perl_amagic_call(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare zeroext i1 @Perl_ckwarn(i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_not_a_number(ptr noundef %0) unnamed_addr #1 {
  %2 = alloca [64 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %2) #17
  %3 = call fastcc ptr @S_sv_display(ptr noundef %0, ptr noundef nonnull %2)
  %4 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %5 = icmp eq ptr %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 4
  %8 = load i16, ptr %7, align 8
  %9 = and i16 %8, 511
  %10 = icmp eq i16 %9, 380
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %4, i32 noundef 2) #17
  br label %17

13:                                               ; preds = %6
  %14 = zext i16 %9 to i64
  %15 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %14
  %16 = load ptr, ptr %15, align 8, !tbaa !9
  br label %17

17:                                               ; preds = %13, %11
  %18 = phi ptr [ %12, %11 ], [ %16, %13 ]
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 13, ptr noundef nonnull @.str.92, ptr noundef %3, ptr noundef %18) #17
  br label %20

19:                                               ; preds = %1
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 13, ptr noundef nonnull @.str.93, ptr noundef %3) #17
  br label %20

20:                                               ; preds = %19, %17
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %2) #17
  ret void
}

declare i64 @Perl_cast_iv(double noundef nofpclass(nan inf)) local_unnamed_addr #3

declare nofpclass(nan inf) double @Perl_my_atof(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_report_uninit(ptr noundef %0) local_unnamed_addr #1 {
  %2 = alloca ptr, align 8
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %4 = icmp eq ptr %3, null
  br i1 %4, label %35, label %5

5:                                                ; preds = %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #17
  %6 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 4
  %7 = load i16, ptr %6, align 8
  %8 = and i16 %7, 511
  %9 = and i16 %7, 8703
  %10 = icmp eq i16 %9, 8260
  br i1 %10, label %19, label %11

11:                                               ; preds = %5
  %12 = icmp eq i16 %8, 380
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %3, i32 noundef 2) #17
  br label %19

15:                                               ; preds = %11
  %16 = zext i16 %8 to i64
  %17 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %16
  %18 = load ptr, ptr %17, align 8, !tbaa !9
  br label %19

19:                                               ; preds = %5, %13, %15
  %20 = phi ptr [ %14, %13 ], [ %18, %15 ], [ @.str.89, %5 ]
  store ptr %20, ptr %2, align 8, !tbaa !9
  %21 = icmp ne ptr %0, null
  %22 = load ptr, ptr @PL_curpad, align 8
  %23 = icmp ne ptr %22, null
  %24 = select i1 %21, i1 %23, i1 false
  br i1 %24, label %25, label %30

25:                                               ; preds = %19
  %26 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %27 = call fastcc ptr @S_find_uninit_var(ptr noundef %26, ptr noundef nonnull %0, i1 noundef zeroext false, ptr noundef nonnull %2)
  %28 = icmp eq ptr %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  tail call void @Perl_sv_insert_flags(ptr noundef nonnull %27, i64 noundef 0, i64 noundef 0, ptr noundef nonnull @.str.90, i64 noundef 1, i32 noundef 2)
  br label %30

30:                                               ; preds = %25, %29, %19
  %31 = phi ptr [ %27, %29 ], [ null, %25 ], [ null, %19 ]
  %32 = icmp eq ptr %31, null
  %33 = select i1 %32, ptr @PL_sv_no, ptr %31
  %34 = load ptr, ptr %2, align 8, !tbaa !9
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 41, ptr noundef nonnull @PL_warn_uninit_sv, ptr noundef nonnull %33, ptr noundef nonnull @.str.91, ptr noundef %34) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #17
  br label %36

35:                                               ; preds = %1
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 41, ptr noundef nonnull @PL_warn_uninit, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.10) #17
  br label %36

36:                                               ; preds = %35, %30
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i1 @S_sv_2iuv_common(ptr noundef %0) unnamed_addr #1 {
  %2 = alloca [64 x i8], align 16
  %3 = alloca [64 x i8], align 16
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !16
  %7 = and i32 %6, 8192
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %63, label %9

9:                                                ; preds = %1
  %10 = and i32 %6, 255
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %12, label %14

12:                                               ; preds = %9
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 6)
  %13 = load i32, ptr %5, align 4, !tbaa !16
  br label %14

14:                                               ; preds = %12, %9
  %15 = phi i32 [ %13, %12 ], [ %6, %9 ]
  %16 = or i32 %15, 4096
  store i32 %16, ptr %5, align 4, !tbaa !16
  %17 = load ptr, ptr %0, align 8, !tbaa !26
  %18 = getelementptr inbounds %struct.xpvnv, ptr %17, i64 0, i32 5
  %19 = load double, ptr %18, align 8, !tbaa !17
  %20 = fcmp fast olt double %19, 0x43E0000000000000
  br i1 %20, label %21, label %43

21:                                               ; preds = %14
  %22 = tail call i64 @Perl_cast_iv(double noundef nofpclass(nan inf) %19) #17
  %23 = load ptr, ptr %0, align 8, !tbaa !26
  %24 = getelementptr inbounds %struct.xpviv, ptr %23, i64 0, i32 4
  store i64 %22, ptr %24, align 8, !tbaa !17
  %25 = load ptr, ptr %0, align 8, !tbaa !26
  %26 = getelementptr inbounds %struct.xpvnv, ptr %25, i64 0, i32 5
  %27 = load double, ptr %26, align 8, !tbaa !17
  %28 = getelementptr inbounds %struct.xpviv, ptr %25, i64 0, i32 4
  %29 = load i64, ptr %28, align 8, !tbaa !17
  %30 = sitofp i64 %29 to double
  %31 = fcmp fast oeq double %27, %30
  %32 = icmp ne i64 %29, -9223372036854775808
  %33 = and i1 %32, %31
  %34 = tail call i64 @llvm.abs.i64(i64 %29, i1 true)
  %35 = icmp ult i64 %34, 9007199254740992
  %36 = select i1 %33, i1 %35, i1 false
  br i1 %36, label %37, label %410

37:                                               ; preds = %21
  %38 = load i32, ptr %5, align 4, !tbaa !16
  %39 = and i32 %38, 512
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %410, label %41

41:                                               ; preds = %37
  %42 = or i32 %38, 4352
  store i32 %42, ptr %5, align 4, !tbaa !16
  br label %410

43:                                               ; preds = %14
  %44 = tail call i64 @Perl_cast_uv(double noundef nofpclass(nan inf) %19) #17
  %45 = load ptr, ptr %0, align 8, !tbaa !26
  %46 = getelementptr inbounds %struct.xpvuv, ptr %45, i64 0, i32 4
  store i64 %44, ptr %46, align 8, !tbaa !17
  %47 = load ptr, ptr %0, align 8, !tbaa !26
  %48 = getelementptr inbounds %struct.xpvnv, ptr %47, i64 0, i32 5
  %49 = load double, ptr %48, align 8, !tbaa !17
  %50 = getelementptr inbounds %struct.xpvuv, ptr %47, i64 0, i32 4
  %51 = load i64, ptr %50, align 8, !tbaa !17
  %52 = uitofp i64 %51 to double
  %53 = fcmp fast une double %49, %52
  %54 = icmp ugt i64 %51, 9007199254740991
  %55 = or i1 %54, %53
  %56 = load i32, ptr %5, align 4, !tbaa !16
  %57 = and i32 %56, 512
  %58 = icmp eq i32 %57, 0
  %59 = select i1 %55, i1 true, i1 %58
  %60 = or i32 %56, 4352
  %61 = select i1 %59, i32 %56, i32 %60
  %62 = or i32 %61, -2147483648
  store i32 %62, ptr %5, align 4, !tbaa !16
  br label %410

63:                                               ; preds = %1
  %64 = and i32 %6, 16384
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %323, label %66

66:                                               ; preds = %63
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  %67 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %68 = load ptr, ptr %67, align 8, !tbaa !17
  %69 = load ptr, ptr %0, align 8, !tbaa !26
  %70 = getelementptr inbounds %struct.xpv, ptr %69, i64 0, i32 2
  %71 = load i64, ptr %70, align 8, !tbaa !57
  %72 = call i32 @Perl_grok_number(ptr noundef %68, i64 noundef %71, ptr noundef nonnull %4) #17
  %73 = and i32 %72, 5
  %74 = icmp eq i32 %73, 1
  %75 = load i32, ptr %5, align 4, !tbaa !16
  br i1 %74, label %76, label %84

76:                                               ; preds = %66
  %77 = and i32 %75, 255
  %78 = icmp ult i32 %77, 5
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 5)
  %80 = load i32, ptr %5, align 4, !tbaa !16
  br label %81

81:                                               ; preds = %79, %76
  %82 = phi i32 [ %80, %79 ], [ %75, %76 ]
  %83 = or i32 %82, 4352
  store i32 %83, ptr %5, align 4, !tbaa !16
  br label %88

84:                                               ; preds = %66
  %85 = and i32 %75, 254
  %86 = icmp ult i32 %85, 6
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 6)
  br label %88

88:                                               ; preds = %84, %87, %81
  %89 = and i32 %72, 48
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %171, label %91

91:                                               ; preds = %88
  %92 = call zeroext i1 @Perl_ckwarn(i32 noundef 13) #17
  %93 = and i32 %72, 64
  %94 = icmp ne i32 %93, 0
  %95 = and i1 %94, %92
  br i1 %95, label %96, label %115

96:                                               ; preds = %91
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %3) #17
  %97 = call fastcc ptr @S_sv_display(ptr noundef nonnull %0, ptr noundef nonnull %3)
  %98 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %99 = icmp eq ptr %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.op, ptr %98, i64 0, i32 4
  %102 = load i16, ptr %101, align 8
  %103 = and i16 %102, 511
  %104 = icmp eq i16 %103, 380
  br i1 %104, label %105, label %107

105:                                              ; preds = %100
  %106 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %98, i32 noundef 2) #17
  br label %111

107:                                              ; preds = %100
  %108 = zext i16 %103 to i64
  %109 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %108
  %110 = load ptr, ptr %109, align 8, !tbaa !9
  br label %111

111:                                              ; preds = %107, %105
  %112 = phi ptr [ %106, %105 ], [ %110, %107 ]
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 13, ptr noundef nonnull @.str.92, ptr noundef %97, ptr noundef %112) #17
  br label %114

113:                                              ; preds = %96
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 13, ptr noundef nonnull @.str.93, ptr noundef %97) #17
  br label %114

114:                                              ; preds = %111, %113
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %3) #17
  br label %115

115:                                              ; preds = %114, %91
  %116 = load i32, ptr %5, align 4, !tbaa !16
  %117 = and i32 %116, 1024
  %118 = icmp eq i32 %117, 0
  %119 = and i32 %72, 16
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %125, label %121

121:                                              ; preds = %115
  %122 = and i32 %72, 8
  %123 = icmp eq i32 %122, 0
  %124 = select fast i1 %123, double 0x7FF0000000000000, double 0xFFF0000000000000
  br label %134

125:                                              ; preds = %115
  %126 = and i32 %72, 32
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %134

128:                                              ; preds = %125
  br i1 %118, label %322, label %129

129:                                              ; preds = %128
  %130 = load ptr, ptr %67, align 8, !tbaa !17
  %131 = call fast nofpclass(nan inf) double @Perl_my_atof(ptr noundef %130) #17
  %132 = load ptr, ptr %0, align 8, !tbaa !26
  %133 = getelementptr inbounds %struct.xpvnv, ptr %132, i64 0, i32 5
  store double %131, ptr %133, align 8, !tbaa !17
  br label %322

134:                                              ; preds = %125, %121
  %135 = phi double [ %124, %121 ], [ 0x7FF8000000000000, %125 ]
  %136 = load ptr, ptr %0, align 8, !tbaa !26
  %137 = getelementptr inbounds %struct.xpvnv, ptr %136, i64 0, i32 5
  store double %135, ptr %137, align 8, !tbaa !17
  %138 = load i32, ptr %5, align 4, !tbaa !16
  %139 = and i32 %138, 1610547455
  store i32 %139, ptr %5, align 4, !tbaa !16
  %140 = and i32 %138, 33554432
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %166, label %142

142:                                              ; preds = %134
  %143 = load ptr, ptr %67, align 8, !tbaa !17
  %144 = getelementptr inbounds i8, ptr %143, i64 -1
  %145 = load i8, ptr %144, align 1, !tbaa !17
  %146 = zext i8 %145 to i64
  %147 = icmp eq i8 %145, 0
  br i1 %147, label %148, label %151

148:                                              ; preds = %142
  %149 = getelementptr inbounds i8, ptr %143, i64 -9
  %150 = load i64, ptr %149, align 1
  br label %151

151:                                              ; preds = %148, %142
  %152 = phi i64 [ %146, %142 ], [ %150, %148 ]
  %153 = load ptr, ptr %0, align 8, !tbaa !26
  %154 = getelementptr inbounds %struct.xpv, ptr %153, i64 0, i32 3
  %155 = load i64, ptr %154, align 8, !tbaa !17
  %156 = add i64 %155, %152
  store i64 %156, ptr %154, align 8, !tbaa !17
  %157 = load ptr, ptr %67, align 8, !tbaa !17
  %158 = sub i64 0, %152
  %159 = getelementptr inbounds i8, ptr %157, i64 %158
  store ptr %159, ptr %67, align 8, !tbaa !17
  %160 = load ptr, ptr %0, align 8, !tbaa !26
  %161 = getelementptr inbounds %struct.xpv, ptr %160, i64 0, i32 2
  %162 = load i64, ptr %161, align 8, !tbaa !57
  %163 = add i64 %162, 1
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %159, ptr nonnull align 1 %143, i64 %163, i1 false)
  %164 = load i32, ptr %5, align 4, !tbaa !16
  %165 = and i32 %164, -33554433
  br label %166

166:                                              ; preds = %151, %134
  %167 = phi i32 [ %165, %151 ], [ %139, %134 ]
  %168 = or i32 %167, 8704
  store i32 %168, ptr %5, align 4, !tbaa !16
  br i1 %118, label %322, label %169

169:                                              ; preds = %166
  %170 = or i32 %167, 26112
  store i32 %170, ptr %5, align 4, !tbaa !16
  br label %322

171:                                              ; preds = %88
  %172 = and i32 %72, 1
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %212, label %174

174:                                              ; preds = %171
  %175 = load i32, ptr %5, align 4, !tbaa !16
  %176 = or i32 %175, 4096
  store i32 %176, ptr %5, align 4, !tbaa !16
  %177 = and i32 %72, 8
  %178 = icmp eq i32 %177, 0
  %179 = load i64, ptr %4, align 8
  br i1 %178, label %180, label %189

180:                                              ; preds = %174
  %181 = icmp sgt i64 %179, -1
  %182 = load ptr, ptr %0, align 8, !tbaa !26
  br i1 %181, label %183, label %185

183:                                              ; preds = %180
  %184 = getelementptr inbounds %struct.xpviv, ptr %182, i64 0, i32 4
  store i64 %179, ptr %184, align 8, !tbaa !17
  br label %212

185:                                              ; preds = %180
  %186 = getelementptr inbounds %struct.xpvuv, ptr %182, i64 0, i32 4
  store i64 %179, ptr %186, align 8, !tbaa !17
  %187 = load i32, ptr %5, align 4, !tbaa !16
  %188 = or i32 %187, -2147483648
  store i32 %188, ptr %5, align 4, !tbaa !16
  br label %212

189:                                              ; preds = %174
  %190 = icmp ult i64 %179, -9223372036854775807
  br i1 %190, label %191, label %195

191:                                              ; preds = %189
  %192 = sub i64 0, %179
  %193 = load ptr, ptr %0, align 8, !tbaa !26
  %194 = getelementptr inbounds %struct.xpviv, ptr %193, i64 0, i32 4
  store i64 %192, ptr %194, align 8, !tbaa !17
  br label %212

195:                                              ; preds = %189
  %196 = and i32 %175, 254
  %197 = icmp ult i32 %196, 6
  br i1 %197, label %198, label %201

198:                                              ; preds = %195
  call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 6)
  %199 = load i32, ptr %5, align 4, !tbaa !16
  %200 = load i64, ptr %4, align 8, !tbaa !60
  br label %201

201:                                              ; preds = %198, %195
  %202 = phi i64 [ %200, %198 ], [ %179, %195 ]
  %203 = phi i32 [ %199, %198 ], [ %176, %195 ]
  %204 = and i32 %203, 2147470591
  %205 = or i32 %204, 12800
  store i32 %205, ptr %5, align 4, !tbaa !16
  %206 = uitofp i64 %202 to double
  %207 = fneg fast double %206
  %208 = load ptr, ptr %0, align 8, !tbaa !26
  %209 = getelementptr inbounds %struct.xpvnv, ptr %208, i64 0, i32 5
  store double %207, ptr %209, align 8, !tbaa !17
  %210 = load ptr, ptr %0, align 8, !tbaa !26
  %211 = getelementptr inbounds %struct.xpviv, ptr %210, i64 0, i32 4
  store i64 -9223372036854775808, ptr %211, align 8, !tbaa !17
  br label %212

212:                                              ; preds = %185, %183, %201, %191, %171
  br i1 %74, label %322, label %213

213:                                              ; preds = %212
  %214 = load i32, ptr %5, align 4, !tbaa !16
  %215 = and i32 %214, 1024
  %216 = icmp eq i32 %215, 0
  %217 = and i32 %72, 16
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %223, label %219

219:                                              ; preds = %213
  %220 = and i32 %72, 8
  %221 = icmp eq i32 %220, 0
  %222 = select fast i1 %221, double 0x7FF0000000000000, double 0xFFF0000000000000
  br label %232

223:                                              ; preds = %213
  %224 = and i32 %72, 32
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %232

226:                                              ; preds = %223
  br i1 %216, label %269, label %227

227:                                              ; preds = %226
  %228 = load ptr, ptr %67, align 8, !tbaa !17
  %229 = call fast nofpclass(nan inf) double @Perl_my_atof(ptr noundef %228) #17
  %230 = load ptr, ptr %0, align 8, !tbaa !26
  %231 = getelementptr inbounds %struct.xpvnv, ptr %230, i64 0, i32 5
  store double %229, ptr %231, align 8, !tbaa !17
  br label %269

232:                                              ; preds = %223, %219
  %233 = phi double [ %222, %219 ], [ 0x7FF8000000000000, %223 ]
  %234 = load ptr, ptr %0, align 8, !tbaa !26
  %235 = getelementptr inbounds %struct.xpvnv, ptr %234, i64 0, i32 5
  store double %233, ptr %235, align 8, !tbaa !17
  %236 = load i32, ptr %5, align 4, !tbaa !16
  %237 = and i32 %236, 1610547455
  store i32 %237, ptr %5, align 4, !tbaa !16
  %238 = and i32 %236, 33554432
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %264, label %240

240:                                              ; preds = %232
  %241 = load ptr, ptr %67, align 8, !tbaa !17
  %242 = getelementptr inbounds i8, ptr %241, i64 -1
  %243 = load i8, ptr %242, align 1, !tbaa !17
  %244 = zext i8 %243 to i64
  %245 = icmp eq i8 %243, 0
  br i1 %245, label %246, label %249

246:                                              ; preds = %240
  %247 = getelementptr inbounds i8, ptr %241, i64 -9
  %248 = load i64, ptr %247, align 1
  br label %249

249:                                              ; preds = %246, %240
  %250 = phi i64 [ %244, %240 ], [ %248, %246 ]
  %251 = load ptr, ptr %0, align 8, !tbaa !26
  %252 = getelementptr inbounds %struct.xpv, ptr %251, i64 0, i32 3
  %253 = load i64, ptr %252, align 8, !tbaa !17
  %254 = add i64 %253, %250
  store i64 %254, ptr %252, align 8, !tbaa !17
  %255 = load ptr, ptr %67, align 8, !tbaa !17
  %256 = sub i64 0, %250
  %257 = getelementptr inbounds i8, ptr %255, i64 %256
  store ptr %257, ptr %67, align 8, !tbaa !17
  %258 = load ptr, ptr %0, align 8, !tbaa !26
  %259 = getelementptr inbounds %struct.xpv, ptr %258, i64 0, i32 2
  %260 = load i64, ptr %259, align 8, !tbaa !57
  %261 = add i64 %260, 1
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %257, ptr nonnull align 1 %241, i64 %261, i1 false)
  %262 = load i32, ptr %5, align 4, !tbaa !16
  %263 = and i32 %262, -33554433
  br label %264

264:                                              ; preds = %249, %232
  %265 = phi i32 [ %263, %249 ], [ %237, %232 ]
  %266 = or i32 %265, 8704
  store i32 %266, ptr %5, align 4, !tbaa !16
  br i1 %216, label %274, label %267

267:                                              ; preds = %264
  %268 = or i32 %265, 26112
  store i32 %268, ptr %5, align 4, !tbaa !16
  br label %274

269:                                              ; preds = %226, %227
  %270 = icmp eq i32 %72, 0
  br i1 %270, label %271, label %274

271:                                              ; preds = %269
  %272 = call zeroext i1 @Perl_ckwarn(i32 noundef 13) #17
  br i1 %272, label %273, label %279

273:                                              ; preds = %271
  call fastcc void @S_not_a_number(ptr noundef nonnull %0)
  br label %279

274:                                              ; preds = %267, %264, %269
  %275 = icmp eq i32 %73, 5
  br i1 %275, label %276, label %279

276:                                              ; preds = %274
  %277 = load i32, ptr %5, align 4, !tbaa !16
  %278 = or i32 %277, 8704
  store i32 %278, ptr %5, align 4, !tbaa !16
  br label %322

279:                                              ; preds = %271, %273, %274
  %280 = phi i1 [ false, %274 ], [ true, %273 ], [ true, %271 ]
  %281 = load ptr, ptr %0, align 8, !tbaa !26
  %282 = getelementptr inbounds %struct.xpvnv, ptr %281, i64 0, i32 5
  %283 = load double, ptr %282, align 8, !tbaa !17
  %284 = call fast double @llvm.fabs.f64(double %283)
  %285 = call i64 @Perl_cast_uv(double noundef nofpclass(nan inf) %284) #17
  %286 = icmp ult i64 %285, 9007199254740992
  br i1 %286, label %287, label %317

287:                                              ; preds = %279
  %288 = load i32, ptr %5, align 4, !tbaa !16
  %289 = or i32 %288, 12800
  store i32 %289, ptr %5, align 4, !tbaa !16
  %290 = load ptr, ptr %0, align 8, !tbaa !26
  %291 = getelementptr inbounds %struct.xpvnv, ptr %290, i64 0, i32 5
  %292 = load double, ptr %291, align 8, !tbaa !17
  %293 = call i64 @Perl_cast_iv(double noundef nofpclass(nan inf) %292) #17
  %294 = load ptr, ptr %0, align 8, !tbaa !26
  %295 = getelementptr inbounds %struct.xpviv, ptr %294, i64 0, i32 4
  store i64 %293, ptr %295, align 8, !tbaa !17
  %296 = load ptr, ptr %0, align 8, !tbaa !26
  %297 = getelementptr inbounds %struct.xpviv, ptr %296, i64 0, i32 4
  %298 = load i64, ptr %297, align 8, !tbaa !17
  %299 = sitofp i64 %298 to double
  %300 = getelementptr inbounds %struct.xpvnv, ptr %296, i64 0, i32 5
  %301 = load double, ptr %300, align 8, !tbaa !17
  %302 = fcmp fast oeq double %301, %299
  br i1 %302, label %303, label %307

303:                                              ; preds = %287
  %304 = load i32, ptr %5, align 4, !tbaa !16
  %305 = or i32 %304, 4352
  store i32 %305, ptr %5, align 4, !tbaa !16
  %306 = load double, ptr %300, align 8, !tbaa !17
  br label %307

307:                                              ; preds = %303, %287
  %308 = phi double [ %306, %303 ], [ %301, %287 ]
  %309 = call fast double @llvm.fabs.f64(double %308)
  %310 = call i64 @Perl_cast_uv(double noundef nofpclass(nan inf) %309) #17
  %311 = icmp ult i64 %310, 9223372036854775807
  br i1 %311, label %318, label %312

312:                                              ; preds = %307
  %313 = load ptr, ptr %0, align 8, !tbaa !26
  %314 = getelementptr inbounds %struct.xpvnv, ptr %313, i64 0, i32 5
  %315 = load double, ptr %314, align 8, !tbaa !17
  %316 = call i64 @Perl_cast_uv(double noundef nofpclass(nan inf) %315) #17
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.94, double noundef nofpclass(nan inf) %315, i64 noundef %316, i64 noundef 9223372036854775807) #17
  br i1 %280, label %319, label %322

317:                                              ; preds = %279
  call fastcc void @S_sv_2iuv_non_preserve(ptr noundef nonnull %0)
  br i1 %280, label %319, label %322

318:                                              ; preds = %307
  br i1 %280, label %319, label %322

319:                                              ; preds = %312, %317, %318
  %320 = load i32, ptr %5, align 4, !tbaa !16
  %321 = and i32 %320, -769
  store i32 %321, ptr %5, align 4, !tbaa !16
  br label %322

322:                                              ; preds = %276, %312, %317, %169, %166, %129, %128, %212, %319, %318
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  br label %410

323:                                              ; preds = %63
  %324 = and i32 %6, 49152
  %325 = icmp eq i32 %324, 32768
  br i1 %325, label %326, label %399

326:                                              ; preds = %323
  %327 = and i32 %6, 255
  %328 = add nsw i32 %327, -9
  %329 = icmp ult i32 %328, 2
  br i1 %329, label %330, label %399

330:                                              ; preds = %326
  %331 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 13) #17
  br i1 %331, label %332, label %410

332:                                              ; preds = %330
  %333 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %334 = icmp eq ptr %333, null
  br i1 %334, label %335, label %364

335:                                              ; preds = %332
  %336 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %337 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %337, ptr %336, align 8, !tbaa !26
  %338 = getelementptr inbounds %struct.sv, ptr %336, i64 0, i32 1
  store i32 170, ptr %338, align 8, !tbaa !13
  %339 = getelementptr inbounds %struct.sv, ptr %336, i64 0, i32 2
  store i32 0, ptr %339, align 4, !tbaa !16
  store ptr %336, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %340 = getelementptr inbounds %struct.sv, ptr %336, i64 1
  store ptr %340, ptr @PL_sv_root, align 8, !tbaa !9
  br label %341

341:                                              ; preds = %341, %335
  %342 = phi ptr [ %340, %335 ], [ %359, %341 ]
  %343 = phi i64 [ 1, %335 ], [ %358, %341 ]
  %344 = getelementptr inbounds %struct.sv, ptr %342, i64 1
  store ptr %344, ptr %342, align 8, !tbaa !26
  %345 = getelementptr inbounds %struct.sv, ptr %336, i64 %343, i32 2
  store i32 255, ptr %345, align 4, !tbaa !16
  %346 = add nuw nsw i64 %343, 1
  %347 = getelementptr inbounds %struct.sv, ptr %336, i64 %346
  %348 = getelementptr inbounds %struct.sv, ptr %347, i64 1
  store ptr %348, ptr %347, align 8, !tbaa !26
  %349 = getelementptr inbounds %struct.sv, ptr %336, i64 %346, i32 2
  store i32 255, ptr %349, align 4, !tbaa !16
  %350 = add nuw nsw i64 %343, 2
  %351 = getelementptr inbounds %struct.sv, ptr %336, i64 %350
  %352 = getelementptr inbounds %struct.sv, ptr %351, i64 1
  store ptr %352, ptr %351, align 8, !tbaa !26
  %353 = getelementptr inbounds %struct.sv, ptr %336, i64 %350, i32 2
  store i32 255, ptr %353, align 4, !tbaa !16
  %354 = add nuw nsw i64 %343, 3
  %355 = getelementptr inbounds %struct.sv, ptr %336, i64 %354
  %356 = getelementptr inbounds %struct.sv, ptr %355, i64 1
  store ptr %356, ptr %355, align 8, !tbaa !26
  %357 = getelementptr inbounds %struct.sv, ptr %336, i64 %354, i32 2
  store i32 255, ptr %357, align 4, !tbaa !16
  %358 = add nuw nsw i64 %343, 4
  %359 = getelementptr inbounds %struct.sv, ptr %336, i64 %358
  %360 = icmp eq i64 %358, 169
  br i1 %360, label %361, label %341, !llvm.loop !59

361:                                              ; preds = %341
  store ptr null, ptr %359, align 8, !tbaa !26
  %362 = getelementptr inbounds %struct.sv, ptr %336, i64 169, i32 2
  store i32 255, ptr %362, align 4, !tbaa !16
  %363 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %364

364:                                              ; preds = %361, %332
  %365 = phi ptr [ %363, %361 ], [ %333, %332 ]
  %366 = load ptr, ptr %365, align 8, !tbaa !26
  store ptr %366, ptr @PL_sv_root, align 8, !tbaa !9
  %367 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %368 = add nsw i64 %367, 1
  store i64 %368, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %365, align 8, !tbaa !26
  %369 = getelementptr inbounds %struct.sv, ptr %365, i64 0, i32 1
  store i32 1, ptr %369, align 8, !tbaa !13
  %370 = getelementptr inbounds %struct.sv, ptr %365, i64 0, i32 2
  store i32 524288, ptr %370, align 4, !tbaa !16
  %371 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %372 = add nsw i64 %371, 1
  store i64 %372, ptr @PL_tmps_ix, align 8, !tbaa !60
  %373 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %374 = icmp slt i64 %372, %373
  br i1 %374, label %377, label %375

375:                                              ; preds = %364
  %376 = tail call i64 @Perl_tmps_grow_p(i64 noundef %372) #17
  br label %377

377:                                              ; preds = %364, %375
  %378 = phi i64 [ %376, %375 ], [ %372, %364 ]
  %379 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %380 = getelementptr inbounds ptr, ptr %379, i64 %378
  store ptr %365, ptr %380, align 8, !tbaa !9
  tail call void @Perl_gv_efullname4(ptr noundef nonnull %365, ptr noundef %0, ptr noundef nonnull @.str.9, i1 noundef zeroext true) #17
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %2) #17
  %381 = call fastcc ptr @S_sv_display(ptr noundef nonnull %365, ptr noundef nonnull %2)
  %382 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %383 = icmp eq ptr %382, null
  br i1 %383, label %397, label %384

384:                                              ; preds = %377
  %385 = getelementptr inbounds %struct.op, ptr %382, i64 0, i32 4
  %386 = load i16, ptr %385, align 8
  %387 = and i16 %386, 511
  %388 = icmp eq i16 %387, 380
  br i1 %388, label %389, label %391

389:                                              ; preds = %384
  %390 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %382, i32 noundef 2) #17
  br label %395

391:                                              ; preds = %384
  %392 = zext i16 %387 to i64
  %393 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %392
  %394 = load ptr, ptr %393, align 8, !tbaa !9
  br label %395

395:                                              ; preds = %391, %389
  %396 = phi ptr [ %390, %389 ], [ %394, %391 ]
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 13, ptr noundef nonnull @.str.92, ptr noundef %381, ptr noundef %396) #17
  br label %398

397:                                              ; preds = %377
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 13, ptr noundef nonnull @.str.93, ptr noundef %381) #17
  br label %398

398:                                              ; preds = %395, %397
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %2) #17
  br label %410

399:                                              ; preds = %326, %323
  %400 = load i8, ptr @PL_localizing, align 1, !tbaa !17
  %401 = icmp eq i8 %400, 0
  br i1 %401, label %402, label %405

402:                                              ; preds = %399
  %403 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 41) #17
  br i1 %403, label %404, label %405

404:                                              ; preds = %402
  tail call void @Perl_report_uninit(ptr noundef nonnull %0)
  br label %405

405:                                              ; preds = %404, %402, %399
  %406 = load i32, ptr %5, align 4, !tbaa !16
  %407 = and i32 %406, 255
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %410

409:                                              ; preds = %405
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 1)
  br label %410

410:                                              ; preds = %398, %330, %322, %37, %41, %21, %43, %405, %409
  %411 = phi i1 [ true, %409 ], [ true, %405 ], [ false, %322 ], [ false, %43 ], [ false, %21 ], [ false, %41 ], [ false, %37 ], [ true, %330 ], [ true, %398 ]
  ret i1 %411
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @Perl_sv_2uv_flags(ptr noundef %0, i32 noundef %1) local_unnamed_addr #1 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 2097152
  %7 = icmp eq i32 %6, 0
  %8 = and i32 %1, 2
  %9 = icmp eq i32 %8, 0
  %10 = or i1 %9, %7
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = tail call i32 @Perl_mg_get(ptr noundef nonnull %0) #17
  %13 = load i32, ptr %4, align 4, !tbaa !16
  br label %14

14:                                               ; preds = %11, %2
  %15 = phi i32 [ %13, %11 ], [ %5, %2 ]
  %16 = and i32 %15, 2048
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %103, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = getelementptr inbounds %struct.sv, ptr %20, i64 0, i32 2
  %22 = load i32, ptr %21, align 4, !tbaa !16
  %23 = and i32 %22, 1048576
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %99, label %25

25:                                               ; preds = %18
  %26 = load ptr, ptr %20, align 8, !tbaa !26
  %27 = load ptr, ptr %26, align 8, !tbaa !50
  %28 = getelementptr inbounds %struct.hv, ptr %27, i64 0, i32 2
  %29 = load i32, ptr %28, align 4, !tbaa !64
  %30 = and i32 %29, 268435456
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %99, label %32

32:                                               ; preds = %25
  %33 = and i32 %1, 8192
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %182

35:                                               ; preds = %32
  %36 = tail call ptr @Perl_amagic_call(ptr noundef nonnull %0, ptr noundef nonnull @PL_sv_undef, i32 noundef 9, i32 noundef 9) #17
  %37 = icmp eq ptr %36, null
  br i1 %37, label %99, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %40 = load i32, ptr %39, align 4, !tbaa !16
  %41 = and i32 %40, 2048
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 3
  %45 = load ptr, ptr %44, align 8, !tbaa !17
  %46 = load ptr, ptr %19, align 8, !tbaa !17
  %47 = icmp eq ptr %45, %46
  br i1 %47, label %99, label %48

48:                                               ; preds = %43, %38
  %49 = and i32 %40, -2145386240
  %50 = icmp eq i32 %49, -2147483392
  br i1 %50, label %94, label %51

51:                                               ; preds = %48, %91
  %52 = phi i32 [ %83, %91 ], [ %40, %48 ]
  %53 = phi ptr [ %79, %91 ], [ %36, %48 ]
  %54 = getelementptr inbounds %struct.sv, ptr %53, i64 0, i32 2
  %55 = and i32 %52, 2097152
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = tail call i32 @Perl_mg_get(ptr noundef nonnull %53) #17
  %59 = load i32, ptr %54, align 4, !tbaa !16
  br label %60

60:                                               ; preds = %57, %51
  %61 = phi i32 [ %59, %57 ], [ %52, %51 ]
  %62 = and i32 %61, 2048
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %103, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.sv, ptr %53, i64 0, i32 3
  %66 = load ptr, ptr %65, align 8, !tbaa !17
  %67 = getelementptr inbounds %struct.sv, ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !16
  %69 = and i32 %68, 1048576
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %99, label %71

71:                                               ; preds = %64
  %72 = load ptr, ptr %66, align 8, !tbaa !26
  %73 = load ptr, ptr %72, align 8, !tbaa !50
  %74 = getelementptr inbounds %struct.hv, ptr %73, i64 0, i32 2
  %75 = load i32, ptr %74, align 4, !tbaa !64
  %76 = and i32 %75, 268435456
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %99, label %78

78:                                               ; preds = %71
  %79 = tail call ptr @Perl_amagic_call(ptr noundef nonnull %53, ptr noundef nonnull @PL_sv_undef, i32 noundef 9, i32 noundef 9) #17
  %80 = icmp eq ptr %79, null
  br i1 %80, label %99, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %struct.sv, ptr %79, i64 0, i32 2
  %83 = load i32, ptr %82, align 4, !tbaa !16
  %84 = and i32 %83, 2048
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %91, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %struct.sv, ptr %79, i64 0, i32 3
  %88 = load ptr, ptr %87, align 8, !tbaa !17
  %89 = load ptr, ptr %65, align 8, !tbaa !17
  %90 = icmp eq ptr %88, %89
  br i1 %90, label %99, label %91

91:                                               ; preds = %86, %81
  %92 = and i32 %83, -2145386240
  %93 = icmp eq i32 %92, -2147483392
  br i1 %93, label %94, label %51, !llvm.loop !91

94:                                               ; preds = %91, %48
  %95 = phi ptr [ %36, %48 ], [ %79, %91 ]
  %96 = load ptr, ptr %95, align 8, !tbaa !26
  %97 = getelementptr inbounds %struct.xpvuv, ptr %96, i64 0, i32 4
  %98 = load i64, ptr %97, align 8, !tbaa !17
  br label %182

99:                                               ; preds = %86, %78, %71, %64, %43, %35, %25, %18
  %100 = phi ptr [ %19, %18 ], [ %19, %25 ], [ %19, %35 ], [ %19, %43 ], [ %65, %64 ], [ %65, %71 ], [ %65, %78 ], [ %65, %86 ]
  %101 = load ptr, ptr %100, align 8, !tbaa !17
  %102 = ptrtoint ptr %101 to i64
  br label %182

103:                                              ; preds = %60, %14
  %104 = phi i32 [ %15, %14 ], [ %61, %60 ]
  %105 = phi ptr [ %0, %14 ], [ %53, %60 ]
  %106 = phi ptr [ %4, %14 ], [ %54, %60 ]
  %107 = and i32 %104, 1073741824
  %108 = icmp eq i32 %107, 0
  %109 = and i32 %104, 49152
  %110 = icmp eq i32 %109, 49152
  %111 = or i1 %108, %110
  %112 = and i32 %104, 255
  br i1 %111, label %115, label %113

113:                                              ; preds = %103
  %114 = and i32 %104, 16826623
  br label %120

115:                                              ; preds = %103
  %116 = icmp eq i32 %112, 8
  %117 = and i32 %104, 16826623
  %118 = icmp eq i32 %117, 16777226
  %119 = or i1 %116, %118
  br i1 %119, label %120, label %158

120:                                              ; preds = %113, %115
  %121 = phi i32 [ %114, %113 ], [ %117, %115 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #17
  %122 = icmp eq i32 %112, 8
  %123 = icmp eq i32 %121, 16777226
  %124 = or i1 %122, %123
  br i1 %124, label %125, label %129

125:                                              ; preds = %120
  %126 = getelementptr i8, ptr %105, i64 16
  %127 = load ptr, ptr %126, align 8, !tbaa !17
  %128 = getelementptr inbounds %struct.regexp, ptr %127, i64 0, i32 3
  br label %131

129:                                              ; preds = %120
  %130 = getelementptr inbounds %struct.sv, ptr %105, i64 0, i32 3
  br label %131

131:                                              ; preds = %129, %125
  %132 = phi ptr [ %128, %125 ], [ %130, %129 ]
  %133 = load ptr, ptr %132, align 8, !tbaa !17
  %134 = load ptr, ptr %105, align 8, !tbaa !26
  %135 = getelementptr inbounds %struct.xpv, ptr %134, i64 0, i32 2
  %136 = load i64, ptr %135, align 8, !tbaa !57
  %137 = call i32 @Perl_grok_number(ptr noundef %133, i64 noundef %136, ptr noundef nonnull %3) #17
  %138 = and i32 %137, 13
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %142

140:                                              ; preds = %131
  %141 = load i64, ptr %3, align 8, !tbaa !60
  br label %156

142:                                              ; preds = %131
  %143 = and i32 %137, 16
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %156

145:                                              ; preds = %142
  %146 = and i32 %137, 32
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %156

148:                                              ; preds = %145
  %149 = icmp eq i32 %137, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %148
  %151 = call zeroext i1 @Perl_ckwarn(i32 noundef 13) #17
  br i1 %151, label %152, label %153

152:                                              ; preds = %150
  call fastcc void @S_not_a_number(ptr noundef nonnull %105)
  br label %153

153:                                              ; preds = %150, %152, %148
  %154 = call fast nofpclass(nan inf) double @Perl_my_atof(ptr noundef %133) #17
  %155 = call i64 @Perl_cast_uv(double noundef nofpclass(nan inf) %154) #17
  br label %156

156:                                              ; preds = %145, %142, %153, %140
  %157 = phi i64 [ %155, %153 ], [ %141, %140 ], [ -1, %142 ], [ 0, %145 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #17
  br label %182

158:                                              ; preds = %115
  %159 = and i32 %104, 134283264
  %160 = icmp ne i32 %159, 0
  %161 = and i32 %104, 65280
  %162 = icmp eq i32 %161, 0
  %163 = and i1 %160, %162
  br i1 %163, label %164, label %167

164:                                              ; preds = %158
  %165 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 41) #17
  br i1 %165, label %166, label %182

166:                                              ; preds = %164
  tail call void @Perl_report_uninit(ptr noundef nonnull %105)
  br label %182

167:                                              ; preds = %158
  %168 = and i32 %104, 4096
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %174

170:                                              ; preds = %167
  %171 = tail call fastcc zeroext i1 @S_sv_2iuv_common(ptr noundef nonnull %105)
  br i1 %171, label %182, label %172

172:                                              ; preds = %170
  %173 = load i32, ptr %106, align 4, !tbaa !16
  br label %174

174:                                              ; preds = %172, %167
  %175 = phi i32 [ %173, %172 ], [ %104, %167 ]
  %176 = load ptr, ptr %105, align 8, !tbaa !26
  %177 = getelementptr inbounds %struct.xpvuv, ptr %176, i64 0, i32 4
  %178 = getelementptr inbounds %struct.xpviv, ptr %176, i64 0, i32 4
  %179 = icmp slt i32 %175, 0
  %180 = select i1 %179, ptr %177, ptr %178
  %181 = load i64, ptr %180, align 8, !tbaa !17
  br label %182

182:                                              ; preds = %32, %94, %170, %164, %166, %174, %156, %99
  %183 = phi i64 [ %102, %99 ], [ %157, %156 ], [ %181, %174 ], [ 0, %166 ], [ 0, %164 ], [ 0, %170 ], [ %98, %94 ], [ 0, %32 ]
  ret i64 %183
}

declare i64 @Perl_cast_uv(double noundef nofpclass(nan inf)) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef %0, i32 noundef %1) local_unnamed_addr #1 {
  %3 = alloca [64 x i8], align 16
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !16
  %7 = and i32 %6, 2097152
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %27

9:                                                ; preds = %2
  %10 = and i32 %6, 1073741824
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %6, 49152
  %13 = icmp eq i32 %12, 49152
  %14 = or i1 %11, %13
  br i1 %14, label %15, label %27

15:                                               ; preds = %9
  %16 = and i32 %6, 255
  %17 = icmp eq i32 %16, 8
  %18 = and i32 %6, 16826623
  %19 = icmp eq i32 %18, 16777226
  %20 = or i1 %17, %19
  br i1 %20, label %27, label %21

21:                                               ; preds = %15
  %22 = and i32 %6, 427886592
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %236, label %24

24:                                               ; preds = %21
  %25 = and i32 %6, 2048
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %224, label %46

27:                                               ; preds = %15, %9, %2
  %28 = and i32 %1, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = tail call i32 @Perl_mg_get(ptr noundef nonnull %0) #17
  %32 = load i32, ptr %5, align 4, !tbaa !16
  br label %33

33:                                               ; preds = %30, %27
  %34 = phi i32 [ %32, %30 ], [ %6, %27 ]
  %35 = and i32 %34, 8192
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %102

37:                                               ; preds = %33
  %38 = and i32 %34, 20480
  %39 = icmp eq i32 %38, 16384
  br i1 %39, label %110, label %40

40:                                               ; preds = %37
  %41 = and i32 %34, 4096
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %148

43:                                               ; preds = %40
  %44 = and i32 %34, 2048
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %164, label %46

46:                                               ; preds = %24, %43
  %47 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  %49 = getelementptr inbounds %struct.sv, ptr %48, i64 0, i32 2
  %50 = load i32, ptr %49, align 4, !tbaa !16
  %51 = and i32 %50, 1048576
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %218, label %53

53:                                               ; preds = %46
  %54 = load ptr, ptr %48, align 8, !tbaa !26
  %55 = load ptr, ptr %54, align 8, !tbaa !50
  %56 = getelementptr inbounds %struct.hv, ptr %55, i64 0, i32 2
  %57 = load i32, ptr %56, align 4, !tbaa !64
  %58 = and i32 %57, 268435456
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %218, label %60

60:                                               ; preds = %53
  %61 = and i32 %1, 8192
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %412

63:                                               ; preds = %60
  %64 = tail call ptr @Perl_amagic_call(ptr noundef nonnull %0, ptr noundef nonnull @PL_sv_undef, i32 noundef 9, i32 noundef 9) #17
  %65 = icmp eq ptr %64, null
  br i1 %65, label %218, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %struct.sv, ptr %64, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !16
  %69 = and i32 %68, 2048
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %struct.sv, ptr %64, i64 0, i32 3
  %73 = load ptr, ptr %72, align 8, !tbaa !17
  %74 = load ptr, ptr %47, align 8, !tbaa !17
  %75 = icmp eq ptr %73, %74
  br i1 %75, label %218, label %76

76:                                               ; preds = %71, %66
  %77 = and i32 %68, 2097664
  %78 = icmp eq i32 %77, 512
  br i1 %78, label %213, label %79

79:                                               ; preds = %76, %210
  %80 = phi i32 [ %202, %210 ], [ %68, %76 ]
  %81 = phi ptr [ %198, %210 ], [ %64, %76 ]
  %82 = getelementptr inbounds %struct.sv, ptr %81, i64 0, i32 2
  %83 = and i32 %80, 2097152
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %97

85:                                               ; preds = %79
  %86 = and i32 %80, 1073741824
  %87 = icmp eq i32 %86, 0
  %88 = and i32 %80, 49152
  %89 = icmp eq i32 %88, 49152
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %97

91:                                               ; preds = %85
  %92 = and i32 %80, 255
  %93 = icmp eq i32 %92, 8
  %94 = and i32 %80, 16826623
  %95 = icmp eq i32 %94, 16777226
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %177

97:                                               ; preds = %85, %91, %79
  %98 = tail call i32 @Perl_mg_get(ptr noundef nonnull %81) #17
  %99 = load i32, ptr %82, align 4, !tbaa !16
  %100 = and i32 %99, 8192
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %107, label %102

102:                                              ; preds = %97, %33
  %103 = phi ptr [ %0, %33 ], [ %81, %97 ]
  %104 = load ptr, ptr %103, align 8, !tbaa !26
  %105 = getelementptr inbounds %struct.xpvnv, ptr %104, i64 0, i32 5
  %106 = load double, ptr %105, align 8, !tbaa !17
  br label %412

107:                                              ; preds = %97
  %108 = and i32 %99, 20480
  %109 = icmp eq i32 %108, 16384
  br i1 %109, label %110, label %145

110:                                              ; preds = %107, %37
  %111 = phi ptr [ %0, %37 ], [ %81, %107 ]
  %112 = getelementptr inbounds %struct.sv, ptr %111, i64 0, i32 3
  br label %113

113:                                              ; preds = %110, %173
  %114 = phi ptr [ %165, %173 ], [ %111, %110 ]
  %115 = phi ptr [ %176, %173 ], [ %112, %110 ]
  %116 = load ptr, ptr %115, align 8, !tbaa !17
  %117 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 13) #17
  br i1 %117, label %118, label %143

118:                                              ; preds = %113
  %119 = load ptr, ptr %114, align 8, !tbaa !26
  %120 = getelementptr inbounds %struct.xpv, ptr %119, i64 0, i32 2
  %121 = load i64, ptr %120, align 8, !tbaa !57
  %122 = tail call i32 @Perl_grok_number(ptr noundef %116, i64 noundef %121, ptr noundef null) #17
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %143

124:                                              ; preds = %118
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %3) #17
  %125 = call fastcc ptr @S_sv_display(ptr noundef nonnull %114, ptr noundef nonnull %3)
  %126 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %127 = icmp eq ptr %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.op, ptr %126, i64 0, i32 4
  %130 = load i16, ptr %129, align 8
  %131 = and i16 %130, 511
  %132 = icmp eq i16 %131, 380
  br i1 %132, label %133, label %135

133:                                              ; preds = %128
  %134 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %126, i32 noundef 2) #17
  br label %139

135:                                              ; preds = %128
  %136 = zext i16 %131 to i64
  %137 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %136
  %138 = load ptr, ptr %137, align 8, !tbaa !9
  br label %139

139:                                              ; preds = %135, %133
  %140 = phi ptr [ %134, %133 ], [ %138, %135 ]
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 13, ptr noundef nonnull @.str.92, ptr noundef %125, ptr noundef %140) #17
  br label %142

141:                                              ; preds = %124
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 13, ptr noundef nonnull @.str.93, ptr noundef %125) #17
  br label %142

142:                                              ; preds = %139, %141
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %3) #17
  br label %143

143:                                              ; preds = %142, %118, %113
  %144 = call fast nofpclass(nan inf) double @Perl_my_atof(ptr noundef %116) #17
  br label %412

145:                                              ; preds = %107
  %146 = and i32 %99, 4096
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %161, label %148

148:                                              ; preds = %145, %40
  %149 = phi ptr [ %0, %40 ], [ %81, %145 ]
  %150 = phi i32 [ %34, %40 ], [ %99, %145 ]
  %151 = icmp sgt i32 %150, -1
  %152 = load ptr, ptr %149, align 8, !tbaa !26
  br i1 %151, label %157, label %153

153:                                              ; preds = %148
  %154 = getelementptr inbounds %struct.xpvuv, ptr %152, i64 0, i32 4
  %155 = load i64, ptr %154, align 8, !tbaa !17
  %156 = uitofp i64 %155 to double
  br label %412

157:                                              ; preds = %148
  %158 = getelementptr inbounds %struct.xpviv, ptr %152, i64 0, i32 4
  %159 = load i64, ptr %158, align 8, !tbaa !17
  %160 = sitofp i64 %159 to double
  br label %412

161:                                              ; preds = %145
  %162 = and i32 %99, 2048
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %183

164:                                              ; preds = %161, %43
  %165 = phi ptr [ %0, %43 ], [ %81, %161 ]
  %166 = phi ptr [ %5, %43 ], [ %82, %161 ]
  %167 = phi i32 [ %34, %43 ], [ %99, %161 ]
  %168 = and i32 %167, 255
  %169 = icmp eq i32 %168, 8
  %170 = and i32 %167, 16826623
  %171 = icmp eq i32 %170, 16777226
  %172 = or i1 %169, %171
  br i1 %172, label %173, label %236

173:                                              ; preds = %164
  %174 = getelementptr i8, ptr %165, i64 16
  %175 = load ptr, ptr %174, align 8, !tbaa !17
  %176 = getelementptr inbounds %struct.regexp, ptr %175, i64 0, i32 3
  br label %113

177:                                              ; preds = %91
  %178 = and i32 %80, 427886592
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %236, label %180

180:                                              ; preds = %177
  %181 = and i32 %80, 2048
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %224, label %183

183:                                              ; preds = %180, %161
  %184 = getelementptr inbounds %struct.sv, ptr %81, i64 0, i32 3
  %185 = load ptr, ptr %184, align 8, !tbaa !17
  %186 = getelementptr inbounds %struct.sv, ptr %185, i64 0, i32 2
  %187 = load i32, ptr %186, align 4, !tbaa !16
  %188 = and i32 %187, 1048576
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %218, label %190

190:                                              ; preds = %183
  %191 = load ptr, ptr %185, align 8, !tbaa !26
  %192 = load ptr, ptr %191, align 8, !tbaa !50
  %193 = getelementptr inbounds %struct.hv, ptr %192, i64 0, i32 2
  %194 = load i32, ptr %193, align 4, !tbaa !64
  %195 = and i32 %194, 268435456
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %218, label %197

197:                                              ; preds = %190
  %198 = tail call ptr @Perl_amagic_call(ptr noundef nonnull %81, ptr noundef nonnull @PL_sv_undef, i32 noundef 9, i32 noundef 9) #17
  %199 = icmp eq ptr %198, null
  br i1 %199, label %218, label %200

200:                                              ; preds = %197
  %201 = getelementptr inbounds %struct.sv, ptr %198, i64 0, i32 2
  %202 = load i32, ptr %201, align 4, !tbaa !16
  %203 = and i32 %202, 2048
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %210, label %205

205:                                              ; preds = %200
  %206 = getelementptr inbounds %struct.sv, ptr %198, i64 0, i32 3
  %207 = load ptr, ptr %206, align 8, !tbaa !17
  %208 = load ptr, ptr %184, align 8, !tbaa !17
  %209 = icmp eq ptr %207, %208
  br i1 %209, label %218, label %210

210:                                              ; preds = %205, %200
  %211 = and i32 %202, 2097664
  %212 = icmp eq i32 %211, 512
  br i1 %212, label %213, label %79, !llvm.loop !92

213:                                              ; preds = %210, %76
  %214 = phi ptr [ %64, %76 ], [ %198, %210 ]
  %215 = load ptr, ptr %214, align 8, !tbaa !26
  %216 = getelementptr inbounds %struct.xpvnv, ptr %215, i64 0, i32 5
  %217 = load double, ptr %216, align 8, !tbaa !17
  br label %412

218:                                              ; preds = %205, %197, %190, %183, %71, %63, %53, %46
  %219 = phi ptr [ %0, %46 ], [ %0, %53 ], [ %0, %63 ], [ %0, %71 ], [ %81, %183 ], [ %81, %190 ], [ %81, %197 ], [ %81, %205 ]
  %220 = getelementptr inbounds %struct.sv, ptr %219, i64 0, i32 3
  %221 = load ptr, ptr %220, align 8, !tbaa !17
  %222 = ptrtoint ptr %221 to i64
  %223 = uitofp i64 %222 to double
  br label %412

224:                                              ; preds = %180, %24
  %225 = phi ptr [ %0, %24 ], [ %81, %180 ]
  %226 = phi ptr [ %5, %24 ], [ %82, %180 ]
  %227 = phi i32 [ %6, %24 ], [ %80, %180 ]
  %228 = and i32 %227, 134283264
  %229 = icmp ne i32 %228, 0
  %230 = and i32 %227, 65280
  %231 = icmp eq i32 %230, 0
  %232 = and i1 %229, %231
  br i1 %232, label %233, label %236

233:                                              ; preds = %224
  %234 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 41) #17
  br i1 %234, label %235, label %412

235:                                              ; preds = %233
  tail call void @Perl_report_uninit(ptr noundef nonnull %225)
  br label %412

236:                                              ; preds = %177, %21, %164, %224
  %237 = phi i32 [ %167, %164 ], [ %227, %224 ], [ %6, %21 ], [ %80, %177 ]
  %238 = phi ptr [ %165, %164 ], [ %225, %224 ], [ %0, %21 ], [ %81, %177 ]
  %239 = phi ptr [ %166, %164 ], [ %226, %224 ], [ %5, %21 ], [ %82, %177 ]
  %240 = and i32 %237, 255
  %241 = icmp ult i32 %240, 2
  br i1 %241, label %244, label %242

242:                                              ; preds = %236
  %243 = icmp ult i32 %240, 6
  br i1 %243, label %244, label %247

244:                                              ; preds = %242, %236
  %245 = phi i32 [ 2, %236 ], [ 6, %242 ]
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %238, i32 noundef %245)
  %246 = load i32, ptr %239, align 4, !tbaa !16
  br label %247

247:                                              ; preds = %244, %242
  %248 = phi i32 [ %246, %244 ], [ %237, %242 ]
  %249 = and i32 %248, 8192
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %255, label %251

251:                                              ; preds = %247
  %252 = load ptr, ptr %238, align 8, !tbaa !26
  %253 = getelementptr inbounds %struct.xpvnv, ptr %252, i64 0, i32 5
  %254 = load double, ptr %253, align 8, !tbaa !17
  br label %412

255:                                              ; preds = %247
  %256 = and i32 %248, 4096
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %298, label %258

258:                                              ; preds = %255
  %259 = icmp sgt i32 %248, -1
  %260 = load ptr, ptr %238, align 8, !tbaa !26
  br i1 %259, label %265, label %261

261:                                              ; preds = %258
  %262 = getelementptr inbounds %struct.xpvuv, ptr %260, i64 0, i32 4
  %263 = load i64, ptr %262, align 8, !tbaa !17
  %264 = uitofp i64 %263 to double
  br label %269

265:                                              ; preds = %258
  %266 = getelementptr inbounds %struct.xpviv, ptr %260, i64 0, i32 4
  %267 = load i64, ptr %266, align 8, !tbaa !17
  %268 = sitofp i64 %267 to double
  br label %269

269:                                              ; preds = %265, %261
  %270 = phi fast double [ %264, %261 ], [ %268, %265 ]
  %271 = getelementptr inbounds %struct.xpvnv, ptr %260, i64 0, i32 5
  store double %270, ptr %271, align 8, !tbaa !17
  %272 = load i32, ptr %239, align 4, !tbaa !16
  %273 = and i32 %272, -2147483392
  %274 = icmp eq i32 %273, -2147483392
  %275 = load ptr, ptr %238, align 8, !tbaa !26
  br i1 %274, label %276, label %285

276:                                              ; preds = %269
  %277 = getelementptr inbounds %struct.xpvuv, ptr %275, i64 0, i32 4
  %278 = load i64, ptr %277, align 8, !tbaa !17
  %279 = icmp eq i64 %278, -1
  br i1 %279, label %295, label %280

280:                                              ; preds = %276
  %281 = getelementptr inbounds %struct.xpvnv, ptr %275, i64 0, i32 5
  %282 = load double, ptr %281, align 8, !tbaa !17
  %283 = tail call i64 @Perl_cast_uv(double noundef nofpclass(nan inf) %282) #17
  %284 = icmp eq i64 %278, %283
  br i1 %284, label %292, label %295

285:                                              ; preds = %269
  %286 = getelementptr inbounds %struct.xpviv, ptr %275, i64 0, i32 4
  %287 = load i64, ptr %286, align 8, !tbaa !17
  %288 = getelementptr inbounds %struct.xpvnv, ptr %275, i64 0, i32 5
  %289 = load double, ptr %288, align 8, !tbaa !17
  %290 = tail call i64 @Perl_cast_iv(double noundef nofpclass(nan inf) %289) #17
  %291 = icmp eq i64 %287, %290
  br i1 %291, label %292, label %295

292:                                              ; preds = %285, %280
  %293 = load i32, ptr %239, align 4, !tbaa !16
  %294 = or i32 %293, 8704
  store i32 %294, ptr %239, align 4, !tbaa !16
  br label %408

295:                                              ; preds = %285, %280, %276
  %296 = load i32, ptr %239, align 4, !tbaa !16
  %297 = or i32 %296, 8192
  store i32 %297, ptr %239, align 4, !tbaa !16
  br label %408

298:                                              ; preds = %255
  %299 = and i32 %248, 16384
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %394, label %301

301:                                              ; preds = %298
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  %302 = getelementptr inbounds %struct.sv, ptr %238, i64 0, i32 3
  %303 = load ptr, ptr %302, align 8, !tbaa !17
  %304 = load ptr, ptr %238, align 8, !tbaa !26
  %305 = getelementptr inbounds %struct.xpv, ptr %304, i64 0, i32 2
  %306 = load i64, ptr %305, align 8, !tbaa !57
  %307 = call i32 @Perl_grok_number(ptr noundef %303, i64 noundef %306, ptr noundef nonnull %4) #17
  %308 = load i32, ptr %239, align 4, !tbaa !16
  %309 = and i32 %308, 4096
  %310 = icmp ne i32 %309, 0
  %311 = icmp ne i32 %307, 0
  %312 = select i1 %310, i1 true, i1 %311
  br i1 %312, label %316, label %313

313:                                              ; preds = %301
  %314 = call zeroext i1 @Perl_ckwarn(i32 noundef 13) #17
  br i1 %314, label %315, label %316

315:                                              ; preds = %313
  call fastcc void @S_not_a_number(ptr noundef nonnull %238)
  br label %316

316:                                              ; preds = %301, %313, %315
  %317 = load ptr, ptr %302, align 8, !tbaa !17
  %318 = call fast nofpclass(nan inf) double @Perl_my_atof(ptr noundef %317) #17
  %319 = load ptr, ptr %238, align 8, !tbaa !26
  %320 = getelementptr inbounds %struct.xpvnv, ptr %319, i64 0, i32 5
  store double %318, ptr %320, align 8, !tbaa !17
  %321 = load ptr, ptr %238, align 8, !tbaa !26
  %322 = getelementptr inbounds %struct.xpvnv, ptr %321, i64 0, i32 5
  %323 = load double, ptr %322, align 8, !tbaa !17
  %324 = call fast double @llvm.fabs.f64(double %323)
  %325 = call i64 @Perl_cast_uv(double noundef nofpclass(nan inf) %324) #17
  %326 = icmp ult i64 %325, 9007199254740992
  %327 = and i32 %307, 1
  %328 = icmp eq i32 %327, 0
  %329 = select i1 %326, i1 true, i1 %328
  br i1 %329, label %386, label %330

330:                                              ; preds = %316
  %331 = and i32 %307, 8
  %332 = icmp ne i32 %331, 0
  %333 = load i64, ptr %4, align 8
  %334 = icmp slt i64 %333, 0
  %335 = select i1 %332, i1 %334, i1 false
  %336 = load i32, ptr %239, align 4, !tbaa !16
  br i1 %335, label %337, label %339

337:                                              ; preds = %330
  %338 = or i32 %336, 8704
  br label %391

339:                                              ; preds = %330
  %340 = or i32 %336, 12288
  store i32 %340, ptr %239, align 4, !tbaa !16
  %341 = load ptr, ptr %238, align 8, !tbaa !26
  br i1 %332, label %342, label %345

342:                                              ; preds = %339
  %343 = sub nsw i64 0, %333
  %344 = getelementptr inbounds %struct.xpviv, ptr %341, i64 0, i32 4
  store i64 %343, ptr %344, align 8, !tbaa !17
  br label %353

345:                                              ; preds = %339
  %346 = icmp sgt i64 %333, -1
  br i1 %346, label %347, label %349

347:                                              ; preds = %345
  %348 = getelementptr inbounds %struct.xpviv, ptr %341, i64 0, i32 4
  store i64 %333, ptr %348, align 8, !tbaa !17
  br label %353

349:                                              ; preds = %345
  %350 = getelementptr inbounds %struct.xpvuv, ptr %341, i64 0, i32 4
  store i64 %333, ptr %350, align 8, !tbaa !17
  %351 = load i32, ptr %239, align 4, !tbaa !16
  %352 = or i32 %351, -2147483648
  store i32 %352, ptr %239, align 4, !tbaa !16
  br label %353

353:                                              ; preds = %347, %349, %342
  %354 = and i32 %307, 4
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %393

356:                                              ; preds = %353
  %357 = load ptr, ptr %238, align 8, !tbaa !26
  %358 = getelementptr inbounds %struct.xpvnv, ptr %357, i64 0, i32 5
  %359 = load double, ptr %358, align 8, !tbaa !17
  %360 = fcmp fast olt double %359, 0x43E0000000000000
  br i1 %360, label %361, label %369

361:                                              ; preds = %356
  %362 = getelementptr inbounds %struct.xpviv, ptr %357, i64 0, i32 4
  %363 = load i64, ptr %362, align 8, !tbaa !17
  %364 = call i64 @Perl_cast_iv(double noundef nofpclass(nan inf) %359) #17
  %365 = icmp eq i64 %363, %364
  %366 = load i32, ptr %239, align 4, !tbaa !16
  %367 = or i32 %366, 8704
  %368 = select i1 %365, i32 %367, i32 %366
  br label %383

369:                                              ; preds = %356
  %370 = call i64 @Perl_cast_uv(double noundef nofpclass(nan inf) %359) #17
  %371 = load i64, ptr %4, align 8, !tbaa !60
  %372 = icmp eq i64 %371, %370
  br i1 %372, label %375, label %373

373:                                              ; preds = %369
  %374 = load i32, ptr %239, align 4, !tbaa !16
  br label %383

375:                                              ; preds = %369
  %376 = load ptr, ptr %238, align 8, !tbaa !26
  %377 = getelementptr inbounds %struct.xpvuv, ptr %376, i64 0, i32 4
  %378 = load i64, ptr %377, align 8, !tbaa !17
  %379 = icmp eq i64 %378, -1
  %380 = load i32, ptr %239, align 4, !tbaa !16
  %381 = or i32 %380, 8704
  %382 = select i1 %379, i32 %380, i32 %381
  br label %383

383:                                              ; preds = %375, %361, %373
  %384 = phi i32 [ %374, %373 ], [ %368, %361 ], [ %382, %375 ]
  %385 = or i32 %384, 4352
  br label %391

386:                                              ; preds = %316
  %387 = load i32, ptr %239, align 4, !tbaa !16
  %388 = or i32 %387, 8704
  store i32 %388, ptr %239, align 4, !tbaa !16
  br i1 %311, label %393, label %389

389:                                              ; preds = %386
  %390 = and i32 %388, -769
  br label %391

391:                                              ; preds = %389, %383, %337
  %392 = phi i32 [ %338, %337 ], [ %385, %383 ], [ %390, %389 ]
  store i32 %392, ptr %239, align 4, !tbaa !16
  br label %393

393:                                              ; preds = %391, %353, %386
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  br label %408

394:                                              ; preds = %298
  %395 = and i32 %248, 49152
  %396 = icmp eq i32 %395, 32768
  br i1 %396, label %397, label %402

397:                                              ; preds = %394
  %398 = and i32 %248, 255
  %399 = add nsw i32 %398, -9
  %400 = icmp ult i32 %399, 2
  br i1 %400, label %401, label %402

401:                                              ; preds = %397
  tail call fastcc void @S_glob_2number(ptr noundef nonnull %238)
  br label %412

402:                                              ; preds = %397, %394
  %403 = load i8, ptr @PL_localizing, align 1, !tbaa !17
  %404 = icmp eq i8 %403, 0
  br i1 %404, label %405, label %412

405:                                              ; preds = %402
  %406 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 41) #17
  br i1 %406, label %407, label %412

407:                                              ; preds = %405
  tail call void @Perl_report_uninit(ptr noundef nonnull %238)
  br label %412

408:                                              ; preds = %292, %295, %393
  %409 = load ptr, ptr %238, align 8, !tbaa !26
  %410 = getelementptr inbounds %struct.xpvnv, ptr %409, i64 0, i32 5
  %411 = load double, ptr %410, align 8, !tbaa !17
  br label %412

412:                                              ; preds = %60, %213, %143, %157, %153, %102, %402, %405, %407, %233, %235, %408, %401, %251, %218
  %413 = phi double [ %223, %218 ], [ %254, %251 ], [ %411, %408 ], [ 0.000000e+00, %401 ], [ 0.000000e+00, %235 ], [ 0.000000e+00, %233 ], [ 0.000000e+00, %407 ], [ 0.000000e+00, %405 ], [ 0.000000e+00, %402 ], [ %144, %143 ], [ %160, %157 ], [ %156, %153 ], [ %106, %102 ], [ %217, %213 ], [ 0.000000e+00, %60 ]
  ret double %413
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_glob_2number(ptr noundef %0) unnamed_addr #1 {
  %2 = alloca [64 x i8], align 16
  %3 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 13) #17
  br i1 %3, label %4, label %71

4:                                                ; preds = %1
  %5 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %36

7:                                                ; preds = %4
  %8 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %9 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %9, ptr %8, align 8, !tbaa !26
  %10 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 1
  store i32 170, ptr %10, align 8, !tbaa !13
  %11 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 2
  store i32 0, ptr %11, align 4, !tbaa !16
  store ptr %8, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %12 = getelementptr inbounds %struct.sv, ptr %8, i64 1
  store ptr %12, ptr @PL_sv_root, align 8, !tbaa !9
  br label %13

13:                                               ; preds = %13, %7
  %14 = phi ptr [ %12, %7 ], [ %31, %13 ]
  %15 = phi i64 [ 1, %7 ], [ %30, %13 ]
  %16 = getelementptr inbounds %struct.sv, ptr %14, i64 1
  store ptr %16, ptr %14, align 8, !tbaa !26
  %17 = getelementptr inbounds %struct.sv, ptr %8, i64 %15, i32 2
  store i32 255, ptr %17, align 4, !tbaa !16
  %18 = add nuw nsw i64 %15, 1
  %19 = getelementptr inbounds %struct.sv, ptr %8, i64 %18
  %20 = getelementptr inbounds %struct.sv, ptr %19, i64 1
  store ptr %20, ptr %19, align 8, !tbaa !26
  %21 = getelementptr inbounds %struct.sv, ptr %8, i64 %18, i32 2
  store i32 255, ptr %21, align 4, !tbaa !16
  %22 = add nuw nsw i64 %15, 2
  %23 = getelementptr inbounds %struct.sv, ptr %8, i64 %22
  %24 = getelementptr inbounds %struct.sv, ptr %23, i64 1
  store ptr %24, ptr %23, align 8, !tbaa !26
  %25 = getelementptr inbounds %struct.sv, ptr %8, i64 %22, i32 2
  store i32 255, ptr %25, align 4, !tbaa !16
  %26 = add nuw nsw i64 %15, 3
  %27 = getelementptr inbounds %struct.sv, ptr %8, i64 %26
  %28 = getelementptr inbounds %struct.sv, ptr %27, i64 1
  store ptr %28, ptr %27, align 8, !tbaa !26
  %29 = getelementptr inbounds %struct.sv, ptr %8, i64 %26, i32 2
  store i32 255, ptr %29, align 4, !tbaa !16
  %30 = add nuw nsw i64 %15, 4
  %31 = getelementptr inbounds %struct.sv, ptr %8, i64 %30
  %32 = icmp eq i64 %30, 169
  br i1 %32, label %33, label %13, !llvm.loop !59

33:                                               ; preds = %13
  store ptr null, ptr %31, align 8, !tbaa !26
  %34 = getelementptr inbounds %struct.sv, ptr %8, i64 169, i32 2
  store i32 255, ptr %34, align 4, !tbaa !16
  %35 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %36

36:                                               ; preds = %33, %4
  %37 = phi ptr [ %35, %33 ], [ %5, %4 ]
  %38 = load ptr, ptr %37, align 8, !tbaa !26
  store ptr %38, ptr @PL_sv_root, align 8, !tbaa !9
  %39 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %40 = add nsw i64 %39, 1
  store i64 %40, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %37, align 8, !tbaa !26
  %41 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 1
  store i32 1, ptr %41, align 8, !tbaa !13
  %42 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 2
  store i32 524288, ptr %42, align 4, !tbaa !16
  %43 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %44 = add nsw i64 %43, 1
  store i64 %44, ptr @PL_tmps_ix, align 8, !tbaa !60
  %45 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %46 = icmp slt i64 %44, %45
  br i1 %46, label %49, label %47

47:                                               ; preds = %36
  %48 = tail call i64 @Perl_tmps_grow_p(i64 noundef %44) #17
  br label %49

49:                                               ; preds = %36, %47
  %50 = phi i64 [ %48, %47 ], [ %44, %36 ]
  %51 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %52 = getelementptr inbounds ptr, ptr %51, i64 %50
  store ptr %37, ptr %52, align 8, !tbaa !9
  tail call void @Perl_gv_efullname4(ptr noundef nonnull %37, ptr noundef %0, ptr noundef nonnull @.str.9, i1 noundef zeroext true) #17
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %2) #17
  %53 = call fastcc ptr @S_sv_display(ptr noundef nonnull %37, ptr noundef nonnull %2)
  %54 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %55 = icmp eq ptr %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 4
  %58 = load i16, ptr %57, align 8
  %59 = and i16 %58, 511
  %60 = icmp eq i16 %59, 380
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  %62 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %54, i32 noundef 2) #17
  br label %67

63:                                               ; preds = %56
  %64 = zext i16 %59 to i64
  %65 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %64
  %66 = load ptr, ptr %65, align 8, !tbaa !9
  br label %67

67:                                               ; preds = %63, %61
  %68 = phi ptr [ %62, %61 ], [ %66, %63 ]
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 13, ptr noundef nonnull @.str.92, ptr noundef %53, ptr noundef %68) #17
  br label %70

69:                                               ; preds = %49
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 13, ptr noundef nonnull @.str.93, ptr noundef %53) #17
  br label %70

70:                                               ; preds = %67, %69
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %2) #17
  br label %71

71:                                               ; preds = %70, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_2num(ptr noundef %0) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 4, !tbaa !16
  %4 = and i32 %3, 2048
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %184, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !17
  br label %9

9:                                                ; preds = %6, %55
  %10 = phi ptr [ %57, %55 ], [ %8, %6 ]
  %11 = phi ptr [ %25, %55 ], [ %0, %6 ]
  %12 = getelementptr inbounds %struct.sv, ptr %11, i64 0, i32 3
  %13 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !16
  %15 = and i32 %14, 1048576
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %60, label %17

17:                                               ; preds = %9
  %18 = load ptr, ptr %10, align 8, !tbaa !26
  %19 = load ptr, ptr %18, align 8, !tbaa !50
  %20 = getelementptr inbounds %struct.hv, ptr %19, i64 0, i32 2
  %21 = load i32, ptr %20, align 4, !tbaa !64
  %22 = and i32 %21, 268435456
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %60, label %24

24:                                               ; preds = %17
  %25 = tail call ptr @Perl_amagic_call(ptr noundef nonnull %11, ptr noundef nonnull @PL_sv_undef, i32 noundef 9, i32 noundef 9) #17
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %24
  %28 = load ptr, ptr %12, align 8, !tbaa !17
  br label %60

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.sv, ptr %25, i64 0, i32 2
  %31 = load i32, ptr %30, align 4, !tbaa !16
  %32 = and i32 %31, 14680064
  %33 = icmp ne i32 %32, 0
  %34 = and i32 %31, 255
  %35 = icmp ugt i32 %34, 6
  %36 = and i1 %33, %35
  br i1 %36, label %37, label %51

37:                                               ; preds = %29
  %38 = load ptr, ptr %25, align 8, !tbaa !26
  %39 = getelementptr inbounds %struct.xpvmg, ptr %38, i64 0, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !17
  %41 = icmp eq ptr %40, null
  br i1 %41, label %51, label %42

42:                                               ; preds = %37
  %43 = tail call ptr @Perl_mg_find(ptr noundef nonnull %25, i32 noundef 116) #17
  %44 = icmp eq ptr %43, null
  br i1 %44, label %51, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %struct.magic, ptr %43, i64 0, i32 5
  %47 = load i64, ptr %46, align 8, !tbaa !76
  %48 = and i64 %47, 1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %45
  store i8 1, ptr @PL_tainted, align 1, !tbaa !5
  br label %51

51:                                               ; preds = %42, %45, %37, %50, %29
  %52 = load i32, ptr %30, align 4, !tbaa !16
  %53 = and i32 %52, 2048
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %184, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.sv, ptr %25, i64 0, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !17
  %58 = load ptr, ptr %12, align 8, !tbaa !17
  %59 = icmp eq ptr %57, %58
  br i1 %59, label %60, label %9

60:                                               ; preds = %55, %17, %9, %27
  %61 = phi ptr [ %28, %27 ], [ %10, %9 ], [ %10, %17 ], [ %57, %55 ]
  %62 = ptrtoint ptr %61 to i64
  %63 = icmp sgt ptr %61, inttoptr (i64 -1 to ptr)
  %64 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %65 = icmp eq ptr %64, null
  br i1 %63, label %110, label %66

66:                                               ; preds = %60
  br i1 %65, label %67, label %96

67:                                               ; preds = %66
  %68 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %69 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %69, ptr %68, align 8, !tbaa !26
  %70 = getelementptr inbounds %struct.sv, ptr %68, i64 0, i32 1
  store i32 170, ptr %70, align 8, !tbaa !13
  %71 = getelementptr inbounds %struct.sv, ptr %68, i64 0, i32 2
  store i32 0, ptr %71, align 4, !tbaa !16
  store ptr %68, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %72 = getelementptr inbounds %struct.sv, ptr %68, i64 1
  store ptr %72, ptr @PL_sv_root, align 8, !tbaa !9
  br label %73

73:                                               ; preds = %73, %67
  %74 = phi ptr [ %72, %67 ], [ %91, %73 ]
  %75 = phi i64 [ 1, %67 ], [ %90, %73 ]
  %76 = getelementptr inbounds %struct.sv, ptr %74, i64 1
  store ptr %76, ptr %74, align 8, !tbaa !26
  %77 = getelementptr inbounds %struct.sv, ptr %68, i64 %75, i32 2
  store i32 255, ptr %77, align 4, !tbaa !16
  %78 = add nuw nsw i64 %75, 1
  %79 = getelementptr inbounds %struct.sv, ptr %68, i64 %78
  %80 = getelementptr inbounds %struct.sv, ptr %79, i64 1
  store ptr %80, ptr %79, align 8, !tbaa !26
  %81 = getelementptr inbounds %struct.sv, ptr %68, i64 %78, i32 2
  store i32 255, ptr %81, align 4, !tbaa !16
  %82 = add nuw nsw i64 %75, 2
  %83 = getelementptr inbounds %struct.sv, ptr %68, i64 %82
  %84 = getelementptr inbounds %struct.sv, ptr %83, i64 1
  store ptr %84, ptr %83, align 8, !tbaa !26
  %85 = getelementptr inbounds %struct.sv, ptr %68, i64 %82, i32 2
  store i32 255, ptr %85, align 4, !tbaa !16
  %86 = add nuw nsw i64 %75, 3
  %87 = getelementptr inbounds %struct.sv, ptr %68, i64 %86
  %88 = getelementptr inbounds %struct.sv, ptr %87, i64 1
  store ptr %88, ptr %87, align 8, !tbaa !26
  %89 = getelementptr inbounds %struct.sv, ptr %68, i64 %86, i32 2
  store i32 255, ptr %89, align 4, !tbaa !16
  %90 = add nuw nsw i64 %75, 4
  %91 = getelementptr inbounds %struct.sv, ptr %68, i64 %90
  %92 = icmp eq i64 %90, 169
  br i1 %92, label %93, label %73, !llvm.loop !59

93:                                               ; preds = %73
  store ptr null, ptr %91, align 8, !tbaa !26
  %94 = getelementptr inbounds %struct.sv, ptr %68, i64 169, i32 2
  store i32 255, ptr %94, align 4, !tbaa !16
  %95 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %96

96:                                               ; preds = %66, %93
  %97 = phi ptr [ %95, %93 ], [ %64, %66 ]
  %98 = load ptr, ptr %97, align 8, !tbaa !26
  store ptr %98, ptr @PL_sv_root, align 8, !tbaa !9
  %99 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %100 = add nsw i64 %99, 1
  store i64 %100, ptr @PL_sv_count, align 8, !tbaa !60
  %101 = getelementptr inbounds %struct.sv, ptr %97, i64 0, i32 1
  store i32 1, ptr %101, align 8, !tbaa !13
  %102 = getelementptr inbounds %struct.sv, ptr %97, i64 0, i32 2
  %103 = getelementptr %struct.sv, ptr %97, i64 -1, i32 1
  store ptr %103, ptr %97, align 8, !tbaa !26
  store i32 -2147479295, ptr %102, align 4, !tbaa !16
  %104 = getelementptr %struct.sv, ptr %97, i64 0, i32 3
  store i64 %62, ptr %104, align 8, !tbaa !17
  %105 = load i8, ptr @PL_tainting, align 1, !tbaa !5, !range !74, !noundef !75
  %106 = icmp eq i8 %105, 0
  %107 = load i8, ptr @PL_tainted, align 1, !range !74
  %108 = icmp eq i8 %107, 0
  %109 = select i1 %106, i1 true, i1 %108
  br i1 %109, label %156, label %154

110:                                              ; preds = %60
  br i1 %65, label %111, label %140

111:                                              ; preds = %110
  %112 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %113 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %113, ptr %112, align 8, !tbaa !26
  %114 = getelementptr inbounds %struct.sv, ptr %112, i64 0, i32 1
  store i32 170, ptr %114, align 8, !tbaa !13
  %115 = getelementptr inbounds %struct.sv, ptr %112, i64 0, i32 2
  store i32 0, ptr %115, align 4, !tbaa !16
  store ptr %112, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %116 = getelementptr inbounds %struct.sv, ptr %112, i64 1
  store ptr %116, ptr @PL_sv_root, align 8, !tbaa !9
  br label %117

117:                                              ; preds = %117, %111
  %118 = phi ptr [ %116, %111 ], [ %135, %117 ]
  %119 = phi i64 [ 1, %111 ], [ %134, %117 ]
  %120 = getelementptr inbounds %struct.sv, ptr %118, i64 1
  store ptr %120, ptr %118, align 8, !tbaa !26
  %121 = getelementptr inbounds %struct.sv, ptr %112, i64 %119, i32 2
  store i32 255, ptr %121, align 4, !tbaa !16
  %122 = add nuw nsw i64 %119, 1
  %123 = getelementptr inbounds %struct.sv, ptr %112, i64 %122
  %124 = getelementptr inbounds %struct.sv, ptr %123, i64 1
  store ptr %124, ptr %123, align 8, !tbaa !26
  %125 = getelementptr inbounds %struct.sv, ptr %112, i64 %122, i32 2
  store i32 255, ptr %125, align 4, !tbaa !16
  %126 = add nuw nsw i64 %119, 2
  %127 = getelementptr inbounds %struct.sv, ptr %112, i64 %126
  %128 = getelementptr inbounds %struct.sv, ptr %127, i64 1
  store ptr %128, ptr %127, align 8, !tbaa !26
  %129 = getelementptr inbounds %struct.sv, ptr %112, i64 %126, i32 2
  store i32 255, ptr %129, align 4, !tbaa !16
  %130 = add nuw nsw i64 %119, 3
  %131 = getelementptr inbounds %struct.sv, ptr %112, i64 %130
  %132 = getelementptr inbounds %struct.sv, ptr %131, i64 1
  store ptr %132, ptr %131, align 8, !tbaa !26
  %133 = getelementptr inbounds %struct.sv, ptr %112, i64 %130, i32 2
  store i32 255, ptr %133, align 4, !tbaa !16
  %134 = add nuw nsw i64 %119, 4
  %135 = getelementptr inbounds %struct.sv, ptr %112, i64 %134
  %136 = icmp eq i64 %134, 169
  br i1 %136, label %137, label %117, !llvm.loop !59

137:                                              ; preds = %117
  store ptr null, ptr %135, align 8, !tbaa !26
  %138 = getelementptr inbounds %struct.sv, ptr %112, i64 169, i32 2
  store i32 255, ptr %138, align 4, !tbaa !16
  %139 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %140

140:                                              ; preds = %137, %110
  %141 = phi ptr [ %139, %137 ], [ %64, %110 ]
  %142 = load ptr, ptr %141, align 8, !tbaa !26
  store ptr %142, ptr @PL_sv_root, align 8, !tbaa !9
  %143 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %144 = add nsw i64 %143, 1
  store i64 %144, ptr @PL_sv_count, align 8, !tbaa !60
  %145 = getelementptr inbounds %struct.sv, ptr %141, i64 0, i32 1
  store i32 1, ptr %145, align 8, !tbaa !13
  %146 = getelementptr inbounds %struct.sv, ptr %141, i64 0, i32 2
  %147 = getelementptr %struct.sv, ptr %141, i64 -1, i32 1
  store ptr %147, ptr %141, align 8, !tbaa !26
  store i32 4353, ptr %146, align 4, !tbaa !16
  %148 = getelementptr %struct.sv, ptr %141, i64 0, i32 3
  store i64 %62, ptr %148, align 8, !tbaa !17
  %149 = load i8, ptr @PL_tainting, align 1, !tbaa !5, !range !74, !noundef !75
  %150 = icmp eq i8 %149, 0
  %151 = load i8, ptr @PL_tainted, align 1, !range !74
  %152 = icmp eq i8 %151, 0
  %153 = select i1 %150, i1 true, i1 %152
  br i1 %153, label %156, label %154

154:                                              ; preds = %140, %96
  %155 = phi ptr [ %97, %96 ], [ %141, %140 ]
  tail call void @Perl_sv_magic(ptr noundef nonnull %155, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0)
  br label %156

156:                                              ; preds = %154, %140, %96
  %157 = phi ptr [ %97, %96 ], [ %141, %140 ], [ %155, %154 ]
  %158 = getelementptr inbounds %struct.sv, ptr %157, i64 0, i32 2
  %159 = load i32, ptr %158, align 4, !tbaa !16
  %160 = and i32 %159, 134283264
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %170, label %162

162:                                              ; preds = %156
  %163 = icmp eq ptr %157, @PL_sv_undef
  %164 = icmp eq ptr %157, @PL_sv_yes
  %165 = or i1 %163, %164
  %166 = icmp eq ptr %157, @PL_sv_no
  %167 = or i1 %166, %165
  %168 = icmp eq ptr %157, @PL_sv_placeholder
  %169 = or i1 %168, %167
  br i1 %169, label %184, label %170

170:                                              ; preds = %162, %156
  %171 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %172 = add nsw i64 %171, 1
  store i64 %172, ptr @PL_tmps_ix, align 8, !tbaa !60
  %173 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %174 = icmp slt i64 %172, %173
  br i1 %174, label %178, label %175

175:                                              ; preds = %170
  %176 = tail call i64 @Perl_tmps_grow_p(i64 noundef %172) #17
  %177 = load i32, ptr %158, align 4, !tbaa !16
  br label %178

178:                                              ; preds = %175, %170
  %179 = phi i32 [ %177, %175 ], [ %159, %170 ]
  %180 = phi i64 [ %176, %175 ], [ %172, %170 ]
  %181 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %182 = getelementptr inbounds ptr, ptr %181, i64 %180
  store ptr %157, ptr %182, align 8, !tbaa !9
  %183 = or i32 %179, 524288
  store i32 %183, ptr %158, align 4, !tbaa !16
  br label %184

184:                                              ; preds = %51, %1, %178, %162
  %185 = phi ptr [ %157, %162 ], [ %157, %178 ], [ %0, %1 ], [ %25, %51 ]
  ret ptr %185
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i1 @Perl_sv_tainted(ptr noundef %0) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 4, !tbaa !16
  %4 = and i32 %3, 255
  %5 = icmp ugt i32 %4, 6
  br i1 %5, label %6, label %20

6:                                                ; preds = %1
  %7 = load ptr, ptr %0, align 8, !tbaa !26
  %8 = getelementptr inbounds %struct.xpvmg, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = icmp eq ptr %9, null
  br i1 %10, label %20, label %11

11:                                               ; preds = %6
  %12 = tail call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 116) #17
  %13 = icmp eq ptr %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.magic, ptr %12, i64 0, i32 5
  %16 = load i64, ptr %15, align 8, !tbaa !76
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %11, %14
  br label %20

20:                                               ; preds = %1, %6, %19, %14
  %21 = phi i1 [ true, %14 ], [ false, %19 ], [ false, %6 ], [ false, %1 ]
  ret i1 %21
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_2mortal(ptr noundef returned %0) local_unnamed_addr #1 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %30, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 134283264
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = icmp eq ptr %0, @PL_sv_undef
  %10 = icmp eq ptr %0, @PL_sv_yes
  %11 = or i1 %9, %10
  %12 = icmp eq ptr %0, @PL_sv_no
  %13 = or i1 %12, %11
  %14 = icmp eq ptr %0, @PL_sv_placeholder
  %15 = or i1 %14, %13
  br i1 %15, label %30, label %16

16:                                               ; preds = %3, %8
  %17 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %18 = add nsw i64 %17, 1
  store i64 %18, ptr @PL_tmps_ix, align 8, !tbaa !60
  %19 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %20 = icmp slt i64 %18, %19
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = tail call i64 @Perl_tmps_grow_p(i64 noundef %18) #17
  %23 = load i32, ptr %4, align 4, !tbaa !16
  br label %24

24:                                               ; preds = %16, %21
  %25 = phi i32 [ %23, %21 ], [ %5, %16 ]
  %26 = phi i64 [ %22, %21 ], [ %18, %16 ]
  %27 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %28 = getelementptr inbounds ptr, ptr %27, i64 %26
  store ptr %0, ptr %28, align 8, !tbaa !9
  %29 = or i32 %25, 524288
  store i32 %29, ptr %4, align 4, !tbaa !16
  br label %30

30:                                               ; preds = %8, %1, %24
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSVuv(i64 noundef %0) local_unnamed_addr #1 {
  %2 = icmp sgt i64 %0, -1
  %3 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %4 = icmp eq ptr %3, null
  br i1 %2, label %5, label %49

5:                                                ; preds = %1
  br i1 %4, label %6, label %35

6:                                                ; preds = %5
  %7 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %8 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %8, ptr %7, align 8, !tbaa !26
  %9 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 1
  store i32 170, ptr %9, align 8, !tbaa !13
  %10 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  store i32 0, ptr %10, align 4, !tbaa !16
  store ptr %7, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %11 = getelementptr inbounds %struct.sv, ptr %7, i64 1
  store ptr %11, ptr @PL_sv_root, align 8, !tbaa !9
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi ptr [ %11, %6 ], [ %30, %12 ]
  %14 = phi i64 [ 1, %6 ], [ %29, %12 ]
  %15 = getelementptr inbounds %struct.sv, ptr %13, i64 1
  store ptr %15, ptr %13, align 8, !tbaa !26
  %16 = getelementptr inbounds %struct.sv, ptr %7, i64 %14, i32 2
  store i32 255, ptr %16, align 4, !tbaa !16
  %17 = add nuw nsw i64 %14, 1
  %18 = getelementptr inbounds %struct.sv, ptr %7, i64 %17
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 1
  store ptr %19, ptr %18, align 8, !tbaa !26
  %20 = getelementptr inbounds %struct.sv, ptr %7, i64 %17, i32 2
  store i32 255, ptr %20, align 4, !tbaa !16
  %21 = add nuw nsw i64 %14, 2
  %22 = getelementptr inbounds %struct.sv, ptr %7, i64 %21
  %23 = getelementptr inbounds %struct.sv, ptr %22, i64 1
  store ptr %23, ptr %22, align 8, !tbaa !26
  %24 = getelementptr inbounds %struct.sv, ptr %7, i64 %21, i32 2
  store i32 255, ptr %24, align 4, !tbaa !16
  %25 = add nuw nsw i64 %14, 3
  %26 = getelementptr inbounds %struct.sv, ptr %7, i64 %25
  %27 = getelementptr inbounds %struct.sv, ptr %26, i64 1
  store ptr %27, ptr %26, align 8, !tbaa !26
  %28 = getelementptr inbounds %struct.sv, ptr %7, i64 %25, i32 2
  store i32 255, ptr %28, align 4, !tbaa !16
  %29 = add nuw nsw i64 %14, 4
  %30 = getelementptr inbounds %struct.sv, ptr %7, i64 %29
  %31 = icmp eq i64 %29, 169
  br i1 %31, label %32, label %12, !llvm.loop !59

32:                                               ; preds = %12
  store ptr null, ptr %30, align 8, !tbaa !26
  %33 = getelementptr inbounds %struct.sv, ptr %7, i64 169, i32 2
  store i32 255, ptr %33, align 4, !tbaa !16
  %34 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %35

35:                                               ; preds = %32, %5
  %36 = phi ptr [ %34, %32 ], [ %3, %5 ]
  %37 = load ptr, ptr %36, align 8, !tbaa !26
  store ptr %37, ptr @PL_sv_root, align 8, !tbaa !9
  %38 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %39 = add nsw i64 %38, 1
  store i64 %39, ptr @PL_sv_count, align 8, !tbaa !60
  %40 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 1
  store i32 1, ptr %40, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %42 = getelementptr %struct.sv, ptr %36, i64 -1, i32 1
  store ptr %42, ptr %36, align 8, !tbaa !26
  store i32 4353, ptr %41, align 4, !tbaa !16
  %43 = getelementptr %struct.sv, ptr %36, i64 0, i32 3
  store i64 %0, ptr %43, align 8, !tbaa !17
  %44 = load i8, ptr @PL_tainting, align 1, !tbaa !5, !range !74, !noundef !75
  %45 = icmp eq i8 %44, 0
  %46 = load i8, ptr @PL_tainted, align 1, !range !74
  %47 = icmp eq i8 %46, 0
  %48 = select i1 %45, i1 true, i1 %47
  br i1 %48, label %95, label %93

49:                                               ; preds = %1
  br i1 %4, label %50, label %79

50:                                               ; preds = %49
  %51 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %52 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %52, ptr %51, align 8, !tbaa !26
  %53 = getelementptr inbounds %struct.sv, ptr %51, i64 0, i32 1
  store i32 170, ptr %53, align 8, !tbaa !13
  %54 = getelementptr inbounds %struct.sv, ptr %51, i64 0, i32 2
  store i32 0, ptr %54, align 4, !tbaa !16
  store ptr %51, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %55 = getelementptr inbounds %struct.sv, ptr %51, i64 1
  store ptr %55, ptr @PL_sv_root, align 8, !tbaa !9
  br label %56

56:                                               ; preds = %56, %50
  %57 = phi ptr [ %55, %50 ], [ %74, %56 ]
  %58 = phi i64 [ 1, %50 ], [ %73, %56 ]
  %59 = getelementptr inbounds %struct.sv, ptr %57, i64 1
  store ptr %59, ptr %57, align 8, !tbaa !26
  %60 = getelementptr inbounds %struct.sv, ptr %51, i64 %58, i32 2
  store i32 255, ptr %60, align 4, !tbaa !16
  %61 = add nuw nsw i64 %58, 1
  %62 = getelementptr inbounds %struct.sv, ptr %51, i64 %61
  %63 = getelementptr inbounds %struct.sv, ptr %62, i64 1
  store ptr %63, ptr %62, align 8, !tbaa !26
  %64 = getelementptr inbounds %struct.sv, ptr %51, i64 %61, i32 2
  store i32 255, ptr %64, align 4, !tbaa !16
  %65 = add nuw nsw i64 %58, 2
  %66 = getelementptr inbounds %struct.sv, ptr %51, i64 %65
  %67 = getelementptr inbounds %struct.sv, ptr %66, i64 1
  store ptr %67, ptr %66, align 8, !tbaa !26
  %68 = getelementptr inbounds %struct.sv, ptr %51, i64 %65, i32 2
  store i32 255, ptr %68, align 4, !tbaa !16
  %69 = add nuw nsw i64 %58, 3
  %70 = getelementptr inbounds %struct.sv, ptr %51, i64 %69
  %71 = getelementptr inbounds %struct.sv, ptr %70, i64 1
  store ptr %71, ptr %70, align 8, !tbaa !26
  %72 = getelementptr inbounds %struct.sv, ptr %51, i64 %69, i32 2
  store i32 255, ptr %72, align 4, !tbaa !16
  %73 = add nuw nsw i64 %58, 4
  %74 = getelementptr inbounds %struct.sv, ptr %51, i64 %73
  %75 = icmp eq i64 %73, 169
  br i1 %75, label %76, label %56, !llvm.loop !59

76:                                               ; preds = %56
  store ptr null, ptr %74, align 8, !tbaa !26
  %77 = getelementptr inbounds %struct.sv, ptr %51, i64 169, i32 2
  store i32 255, ptr %77, align 4, !tbaa !16
  %78 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %79

79:                                               ; preds = %49, %76
  %80 = phi ptr [ %78, %76 ], [ %3, %49 ]
  %81 = load ptr, ptr %80, align 8, !tbaa !26
  store ptr %81, ptr @PL_sv_root, align 8, !tbaa !9
  %82 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %83 = add nsw i64 %82, 1
  store i64 %83, ptr @PL_sv_count, align 8, !tbaa !60
  %84 = getelementptr inbounds %struct.sv, ptr %80, i64 0, i32 1
  store i32 1, ptr %84, align 8, !tbaa !13
  %85 = getelementptr inbounds %struct.sv, ptr %80, i64 0, i32 2
  %86 = getelementptr %struct.sv, ptr %80, i64 -1, i32 1
  store ptr %86, ptr %80, align 8, !tbaa !26
  store i32 -2147479295, ptr %85, align 4, !tbaa !16
  %87 = getelementptr %struct.sv, ptr %80, i64 0, i32 3
  store i64 %0, ptr %87, align 8, !tbaa !17
  %88 = load i8, ptr @PL_tainting, align 1, !tbaa !5, !range !74, !noundef !75
  %89 = icmp eq i8 %88, 0
  %90 = load i8, ptr @PL_tainted, align 1, !range !74
  %91 = icmp eq i8 %90, 0
  %92 = select i1 %89, i1 true, i1 %91
  br i1 %92, label %95, label %93

93:                                               ; preds = %79, %35
  %94 = phi ptr [ %36, %35 ], [ %80, %79 ]
  tail call void @Perl_sv_magic(ptr noundef nonnull %94, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0)
  br label %95

95:                                               ; preds = %93, %35, %79
  %96 = phi ptr [ %80, %79 ], [ %36, %35 ], [ %94, %93 ]
  ret ptr %96
}

declare ptr @Perl_savepvn(ptr noundef, i32 noundef) local_unnamed_addr #3

declare zeroext i1 @Perl_amagic_is_enabled(i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #7

declare void @Perl_save_pushptr(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare ptr @__errno_location() local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #9

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_newmortal() local_unnamed_addr #1 {
  %1 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %2 = icmp eq ptr %1, null
  br i1 %2, label %3, label %32

3:                                                ; preds = %0
  %4 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %5 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %5, ptr %4, align 8, !tbaa !26
  %6 = getelementptr inbounds %struct.sv, ptr %4, i64 0, i32 1
  store i32 170, ptr %6, align 8, !tbaa !13
  %7 = getelementptr inbounds %struct.sv, ptr %4, i64 0, i32 2
  store i32 0, ptr %7, align 4, !tbaa !16
  store ptr %4, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %8 = getelementptr inbounds %struct.sv, ptr %4, i64 1
  store ptr %8, ptr @PL_sv_root, align 8, !tbaa !9
  br label %9

9:                                                ; preds = %9, %3
  %10 = phi ptr [ %8, %3 ], [ %27, %9 ]
  %11 = phi i64 [ 1, %3 ], [ %26, %9 ]
  %12 = getelementptr inbounds %struct.sv, ptr %10, i64 1
  store ptr %12, ptr %10, align 8, !tbaa !26
  %13 = getelementptr inbounds %struct.sv, ptr %4, i64 %11, i32 2
  store i32 255, ptr %13, align 4, !tbaa !16
  %14 = add nuw nsw i64 %11, 1
  %15 = getelementptr inbounds %struct.sv, ptr %4, i64 %14
  %16 = getelementptr inbounds %struct.sv, ptr %15, i64 1
  store ptr %16, ptr %15, align 8, !tbaa !26
  %17 = getelementptr inbounds %struct.sv, ptr %4, i64 %14, i32 2
  store i32 255, ptr %17, align 4, !tbaa !16
  %18 = add nuw nsw i64 %11, 2
  %19 = getelementptr inbounds %struct.sv, ptr %4, i64 %18
  %20 = getelementptr inbounds %struct.sv, ptr %19, i64 1
  store ptr %20, ptr %19, align 8, !tbaa !26
  %21 = getelementptr inbounds %struct.sv, ptr %4, i64 %18, i32 2
  store i32 255, ptr %21, align 4, !tbaa !16
  %22 = add nuw nsw i64 %11, 3
  %23 = getelementptr inbounds %struct.sv, ptr %4, i64 %22
  %24 = getelementptr inbounds %struct.sv, ptr %23, i64 1
  store ptr %24, ptr %23, align 8, !tbaa !26
  %25 = getelementptr inbounds %struct.sv, ptr %4, i64 %22, i32 2
  store i32 255, ptr %25, align 4, !tbaa !16
  %26 = add nuw nsw i64 %11, 4
  %27 = getelementptr inbounds %struct.sv, ptr %4, i64 %26
  %28 = icmp eq i64 %26, 169
  br i1 %28, label %29, label %9, !llvm.loop !59

29:                                               ; preds = %9
  store ptr null, ptr %27, align 8, !tbaa !26
  %30 = getelementptr inbounds %struct.sv, ptr %4, i64 169, i32 2
  store i32 255, ptr %30, align 4, !tbaa !16
  %31 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %32

32:                                               ; preds = %0, %29
  %33 = phi ptr [ %31, %29 ], [ %1, %0 ]
  %34 = load ptr, ptr %33, align 8, !tbaa !26
  store ptr %34, ptr @PL_sv_root, align 8, !tbaa !9
  %35 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %36 = add nsw i64 %35, 1
  store i64 %36, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %33, align 8, !tbaa !26
  %37 = getelementptr inbounds %struct.sv, ptr %33, i64 0, i32 1
  store i32 1, ptr %37, align 8, !tbaa !13
  %38 = getelementptr inbounds %struct.sv, ptr %33, i64 0, i32 2
  store i32 524288, ptr %38, align 4, !tbaa !16
  %39 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %40 = add nsw i64 %39, 1
  store i64 %40, ptr @PL_tmps_ix, align 8, !tbaa !60
  %41 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %42 = icmp slt i64 %40, %41
  br i1 %42, label %45, label %43

43:                                               ; preds = %32
  %44 = tail call i64 @Perl_tmps_grow_p(i64 noundef %40) #17
  br label %45

45:                                               ; preds = %32, %43
  %46 = phi i64 [ %44, %43 ], [ %40, %32 ]
  %47 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %48 = getelementptr inbounds ptr, ptr %47, i64 %46
  store ptr %33, ptr %48, align 8, !tbaa !9
  ret ptr %33
}

declare void @Perl_gv_efullname4(ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_copypv_flags(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #1 {
  %4 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  %5 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !16
  %7 = and i32 %6, 2098176
  %8 = icmp eq i32 %7, 1024
  br i1 %8, label %9, label %15

9:                                                ; preds = %3
  %10 = load ptr, ptr %1, align 8, !tbaa !26
  %11 = getelementptr inbounds %struct.xpv, ptr %10, i64 0, i32 2
  %12 = load i64, ptr %11, align 8, !tbaa !57
  store i64 %12, ptr %4, align 8, !tbaa !60
  %13 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  br label %20

15:                                               ; preds = %3
  %16 = and i32 %2, 2
  %17 = or i32 %16, 32
  %18 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %1, ptr noundef nonnull %4, i32 noundef %17)
  %19 = load i64, ptr %4, align 8, !tbaa !60
  br label %20

20:                                               ; preds = %15, %9
  %21 = phi i64 [ %12, %9 ], [ %19, %15 ]
  %22 = phi ptr [ %14, %9 ], [ %18, %15 ]
  call void @Perl_sv_setpvn(ptr noundef %0, ptr noundef %22, i64 noundef %21)
  %23 = load i32, ptr %5, align 4, !tbaa !16
  %24 = and i32 %23, 536870912
  %25 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %26 = load i32, ptr %25, align 4, !tbaa !16
  %27 = and i32 %26, -536870913
  %28 = or i32 %27, %24
  store i32 %28, ptr %25, align 4, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_setpvn(ptr noundef %0, ptr noundef readonly %1, i64 noundef %2) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 427886592
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %0, i32 noundef 4)
  br label %9

9:                                                ; preds = %8, %3
  %10 = icmp eq ptr %1, null
  br i1 %10, label %11, label %39

11:                                               ; preds = %9
  %12 = load i32, ptr %4, align 4, !tbaa !16
  %13 = and i32 %12, 1610547455
  store i32 %13, ptr %4, align 4, !tbaa !16
  %14 = and i32 %12, 33554432
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %93, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  %19 = getelementptr inbounds i8, ptr %18, i64 -1
  %20 = load i8, ptr %19, align 1, !tbaa !17
  %21 = zext i8 %20 to i64
  %22 = icmp eq i8 %20, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %16
  %24 = getelementptr inbounds i8, ptr %18, i64 -9
  %25 = load i64, ptr %24, align 1
  br label %26

26:                                               ; preds = %16, %23
  %27 = phi i64 [ %21, %16 ], [ %25, %23 ]
  %28 = load ptr, ptr %0, align 8, !tbaa !26
  %29 = getelementptr inbounds %struct.xpv, ptr %28, i64 0, i32 3
  %30 = load i64, ptr %29, align 8, !tbaa !17
  %31 = add i64 %30, %27
  store i64 %31, ptr %29, align 8, !tbaa !17
  %32 = load ptr, ptr %17, align 8, !tbaa !17
  %33 = sub i64 0, %27
  %34 = getelementptr inbounds i8, ptr %32, i64 %33
  store ptr %34, ptr %17, align 8, !tbaa !17
  %35 = load ptr, ptr %0, align 8, !tbaa !26
  %36 = getelementptr inbounds %struct.xpv, ptr %35, i64 0, i32 2
  %37 = load i64, ptr %36, align 8, !tbaa !57
  %38 = add i64 %37, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %34, ptr nonnull align 1 %18, i64 %38, i1 false)
  br label %88

39:                                               ; preds = %9
  %40 = icmp slt i64 %2, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.22, i64 noundef %2) #17
  br label %42

42:                                               ; preds = %41, %39
  %43 = load i32, ptr %4, align 4, !tbaa !16
  %44 = and i32 %43, 255
  %45 = icmp ugt i32 %44, 2
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 3)
  %47 = load i32, ptr %4, align 4, !tbaa !16
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi i32 [ %47, %46 ], [ %43, %42 ]
  %50 = and i32 %49, 268435456
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = add i64 %2, 1
  br label %60

54:                                               ; preds = %48
  %55 = load ptr, ptr %0, align 8, !tbaa !26
  %56 = getelementptr inbounds %struct.xpv, ptr %55, i64 0, i32 3
  %57 = load i64, ptr %56, align 8, !tbaa !17
  %58 = add i64 %2, 1
  %59 = icmp ult i64 %57, %58
  br i1 %59, label %60, label %63

60:                                               ; preds = %52, %54
  %61 = phi i64 [ %53, %52 ], [ %58, %54 ]
  %62 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %61)
  br label %66

63:                                               ; preds = %54
  %64 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8, !tbaa !17
  br label %66

66:                                               ; preds = %63, %60
  %67 = phi ptr [ %62, %60 ], [ %65, %63 ]
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %67, ptr nonnull align 1 %1, i64 %2, i1 false)
  %68 = getelementptr inbounds i8, ptr %67, i64 %2
  store i8 0, ptr %68, align 1, !tbaa !17
  %69 = load ptr, ptr %0, align 8, !tbaa !26
  %70 = getelementptr inbounds %struct.xpv, ptr %69, i64 0, i32 2
  store i64 %2, ptr %70, align 8, !tbaa !57
  %71 = load i32, ptr %4, align 4, !tbaa !16
  %72 = and i32 %71, 2147418367
  %73 = or i32 %72, 17408
  store i32 %73, ptr %4, align 4, !tbaa !16
  %74 = load i8, ptr @PL_tainting, align 1, !tbaa !5, !range !74, !noundef !75
  %75 = icmp eq i8 %74, 0
  %76 = load i8, ptr @PL_tainted, align 1, !range !74
  %77 = icmp eq i8 %76, 0
  %78 = select i1 %75, i1 true, i1 %77
  br i1 %78, label %81, label %79

79:                                               ; preds = %66
  tail call void @Perl_sv_magic(ptr noundef nonnull %0, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0)
  %80 = load i32, ptr %4, align 4, !tbaa !16
  br label %81

81:                                               ; preds = %79, %66
  %82 = phi i32 [ %80, %79 ], [ %73, %66 ]
  %83 = and i32 %82, 255
  %84 = icmp eq i32 %83, 13
  br i1 %84, label %85, label %93

85:                                               ; preds = %81
  %86 = load ptr, ptr %0, align 8, !tbaa !26
  %87 = getelementptr inbounds %struct.xpvcv, ptr %86, i64 0, i32 12
  br label %88

88:                                               ; preds = %26, %85
  %89 = phi ptr [ %87, %85 ], [ %4, %26 ]
  %90 = phi i32 [ -8193, %85 ], [ -33554433, %26 ]
  %91 = load i32, ptr %89, align 4, !tbaa !25
  %92 = and i32 %91, %90
  store i32 %92, ptr %89, align 4, !tbaa !25
  br label %93

93:                                               ; preds = %88, %81, %11
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_2pvbyte(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 2097152
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = tail call i32 @Perl_mg_get(ptr noundef nonnull %0) #17
  %10 = load i32, ptr %4, align 4, !tbaa !16
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi i32 [ %5, %2 ], [ %10, %8 ]
  %13 = and i32 %12, 151060480
  %14 = icmp ne i32 %13, 0
  %15 = and i32 %12, 268435456
  %16 = icmp eq i32 %15, 0
  %17 = and i1 %14, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %11
  %19 = and i32 %12, 49152
  %20 = icmp eq i32 %19, 32768
  br i1 %20, label %21, label %28

21:                                               ; preds = %18
  %22 = and i32 %12, 255
  %23 = add nsw i32 %22, -11
  %24 = icmp ult i32 %23, -2
  %25 = and i32 %12, 2048
  %26 = icmp eq i32 %25, 0
  %27 = and i1 %26, %24
  br i1 %27, label %100, label %31

28:                                               ; preds = %18
  %29 = and i32 %12, 2048
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %100, label %31

31:                                               ; preds = %11, %21, %28
  %32 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %63

34:                                               ; preds = %31
  %35 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %36 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %36, ptr %35, align 8, !tbaa !26
  %37 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 1
  store i32 170, ptr %37, align 8, !tbaa !13
  %38 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 2
  store i32 0, ptr %38, align 4, !tbaa !16
  store ptr %35, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %39 = getelementptr inbounds %struct.sv, ptr %35, i64 1
  store ptr %39, ptr @PL_sv_root, align 8, !tbaa !9
  br label %40

40:                                               ; preds = %40, %34
  %41 = phi ptr [ %39, %34 ], [ %58, %40 ]
  %42 = phi i64 [ 1, %34 ], [ %57, %40 ]
  %43 = getelementptr inbounds %struct.sv, ptr %41, i64 1
  store ptr %43, ptr %41, align 8, !tbaa !26
  %44 = getelementptr inbounds %struct.sv, ptr %35, i64 %42, i32 2
  store i32 255, ptr %44, align 4, !tbaa !16
  %45 = add nuw nsw i64 %42, 1
  %46 = getelementptr inbounds %struct.sv, ptr %35, i64 %45
  %47 = getelementptr inbounds %struct.sv, ptr %46, i64 1
  store ptr %47, ptr %46, align 8, !tbaa !26
  %48 = getelementptr inbounds %struct.sv, ptr %35, i64 %45, i32 2
  store i32 255, ptr %48, align 4, !tbaa !16
  %49 = add nuw nsw i64 %42, 2
  %50 = getelementptr inbounds %struct.sv, ptr %35, i64 %49
  %51 = getelementptr inbounds %struct.sv, ptr %50, i64 1
  store ptr %51, ptr %50, align 8, !tbaa !26
  %52 = getelementptr inbounds %struct.sv, ptr %35, i64 %49, i32 2
  store i32 255, ptr %52, align 4, !tbaa !16
  %53 = add nuw nsw i64 %42, 3
  %54 = getelementptr inbounds %struct.sv, ptr %35, i64 %53
  %55 = getelementptr inbounds %struct.sv, ptr %54, i64 1
  store ptr %55, ptr %54, align 8, !tbaa !26
  %56 = getelementptr inbounds %struct.sv, ptr %35, i64 %53, i32 2
  store i32 255, ptr %56, align 4, !tbaa !16
  %57 = add nuw nsw i64 %42, 4
  %58 = getelementptr inbounds %struct.sv, ptr %35, i64 %57
  %59 = icmp eq i64 %57, 169
  br i1 %59, label %60, label %40, !llvm.loop !59

60:                                               ; preds = %40
  store ptr null, ptr %58, align 8, !tbaa !26
  %61 = getelementptr inbounds %struct.sv, ptr %35, i64 169, i32 2
  store i32 255, ptr %61, align 4, !tbaa !16
  %62 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %63

63:                                               ; preds = %60, %31
  %64 = phi ptr [ %62, %60 ], [ %32, %31 ]
  %65 = load ptr, ptr %64, align 8, !tbaa !26
  store ptr %65, ptr @PL_sv_root, align 8, !tbaa !9
  %66 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %67 = add nsw i64 %66, 1
  store i64 %67, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %64, align 8, !tbaa !26
  %68 = getelementptr inbounds %struct.sv, ptr %64, i64 0, i32 1
  store i32 1, ptr %68, align 8, !tbaa !13
  %69 = getelementptr inbounds %struct.sv, ptr %64, i64 0, i32 2
  store i32 524288, ptr %69, align 4, !tbaa !16
  %70 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %71 = add nsw i64 %70, 1
  store i64 %71, ptr @PL_tmps_ix, align 8, !tbaa !60
  %72 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %73 = icmp slt i64 %71, %72
  br i1 %73, label %76, label %74

74:                                               ; preds = %63
  %75 = tail call i64 @Perl_tmps_grow_p(i64 noundef %71) #17
  br label %76

76:                                               ; preds = %63, %74
  %77 = phi i64 [ %75, %74 ], [ %71, %63 ]
  %78 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %79 = getelementptr inbounds ptr, ptr %78, i64 %77
  store ptr %64, ptr %79, align 8, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #17
  %80 = load i32, ptr %4, align 4, !tbaa !16
  %81 = and i32 %80, 2098176
  %82 = icmp eq i32 %81, 1024
  br i1 %82, label %83, label %89

83:                                               ; preds = %76
  %84 = load ptr, ptr %0, align 8, !tbaa !26
  %85 = getelementptr inbounds %struct.xpv, ptr %84, i64 0, i32 2
  %86 = load i64, ptr %85, align 8, !tbaa !57
  store i64 %86, ptr %3, align 8, !tbaa !60
  %87 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %88 = load ptr, ptr %87, align 8, !tbaa !17
  br label %92

89:                                               ; preds = %76
  %90 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %0, ptr noundef nonnull %3, i32 noundef 32)
  %91 = load i64, ptr %3, align 8, !tbaa !60
  br label %92

92:                                               ; preds = %83, %89
  %93 = phi i64 [ %86, %83 ], [ %91, %89 ]
  %94 = phi ptr [ %88, %83 ], [ %90, %89 ]
  call void @Perl_sv_setpvn(ptr noundef nonnull %64, ptr noundef %94, i64 noundef %93)
  %95 = load i32, ptr %4, align 4, !tbaa !16
  %96 = and i32 %95, 536870912
  %97 = load i32, ptr %69, align 4, !tbaa !16
  %98 = and i32 %97, -536870913
  %99 = or i32 %98, %96
  store i32 %99, ptr %69, align 4, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #17
  br label %100

100:                                              ; preds = %21, %92, %28
  %101 = phi ptr [ %64, %92 ], [ %0, %28 ], [ %0, %21 ]
  %102 = call zeroext i1 @Perl_sv_utf8_downgrade(ptr noundef nonnull %101, i1 noundef zeroext false)
  %103 = icmp eq ptr %1, null
  %104 = getelementptr inbounds %struct.sv, ptr %101, i64 0, i32 2
  %105 = load i32, ptr %104, align 4, !tbaa !16
  %106 = and i32 %105, 2098176
  %107 = icmp eq i32 %106, 1024
  br i1 %103, label %117, label %108

108:                                              ; preds = %100
  br i1 %107, label %109, label %115

109:                                              ; preds = %108
  %110 = load ptr, ptr %101, align 8, !tbaa !26
  %111 = getelementptr inbounds %struct.xpv, ptr %110, i64 0, i32 2
  %112 = load i64, ptr %111, align 8, !tbaa !57
  store i64 %112, ptr %1, align 8, !tbaa !60
  %113 = getelementptr inbounds %struct.sv, ptr %101, i64 0, i32 3
  %114 = load ptr, ptr %113, align 8, !tbaa !17
  br label %123

115:                                              ; preds = %108
  %116 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %101, ptr noundef nonnull %1, i32 noundef 0)
  br label %123

117:                                              ; preds = %100
  br i1 %107, label %118, label %121

118:                                              ; preds = %117
  %119 = getelementptr inbounds %struct.sv, ptr %101, i64 0, i32 3
  %120 = load ptr, ptr %119, align 8, !tbaa !17
  br label %123

121:                                              ; preds = %117
  %122 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %101, ptr noundef null, i32 noundef 0)
  br label %123

123:                                              ; preds = %118, %121, %109, %115
  %124 = phi ptr [ %114, %109 ], [ %116, %115 ], [ %120, %118 ], [ %122, %121 ]
  ret ptr %124
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i1 @Perl_sv_utf8_downgrade(ptr noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 536887296
  %7 = icmp eq i32 %6, 536887296
  br i1 %7, label %8, label %127

8:                                                ; preds = %2
  %9 = load ptr, ptr %0, align 8, !tbaa !26
  %10 = getelementptr inbounds %struct.xpv, ptr %9, i64 0, i32 2
  %11 = load i64, ptr %10, align 8, !tbaa !57
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %127, label %13

13:                                               ; preds = %8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #17
  %14 = and i32 %5, 268435456
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %57, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  %19 = getelementptr inbounds %struct.xpv, ptr %9, i64 0, i32 3
  %20 = load i64, ptr %19, align 8, !tbaa !17
  %21 = and i32 %5, -268435457
  store i32 %21, ptr %4, align 4, !tbaa !16
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %32, label %23

23:                                               ; preds = %16
  %24 = load i64, ptr %19, align 8, !tbaa !17
  %25 = getelementptr inbounds i8, ptr %18, i64 %24
  %26 = getelementptr inbounds i8, ptr %25, i64 -1
  %27 = load i8, ptr %26, align 1, !tbaa !17
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %57, label %29

29:                                               ; preds = %23
  %30 = add i8 %27, -1
  store i8 %30, ptr %26, align 1, !tbaa !17
  %31 = load ptr, ptr %0, align 8, !tbaa !26
  br label %32

32:                                               ; preds = %29, %16
  %33 = phi ptr [ %31, %29 ], [ %9, %16 ]
  store ptr null, ptr %17, align 8, !tbaa !17
  %34 = getelementptr inbounds %struct.xpv, ptr %33, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %34, i8 0, i64 16, i1 false)
  %35 = load i32, ptr %4, align 4, !tbaa !16
  %36 = and i32 %35, 268435456
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %32
  %39 = add i64 %11, 1
  br label %46

40:                                               ; preds = %32
  %41 = load ptr, ptr %0, align 8, !tbaa !26
  %42 = getelementptr inbounds %struct.xpv, ptr %41, i64 0, i32 3
  %43 = load i64, ptr %42, align 8, !tbaa !17
  %44 = add i64 %11, 1
  %45 = icmp ult i64 %43, %44
  br i1 %45, label %46, label %49

46:                                               ; preds = %40, %38
  %47 = phi i64 [ %39, %38 ], [ %44, %40 ]
  %48 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %47)
  br label %49

49:                                               ; preds = %46, %40
  %50 = load ptr, ptr %17, align 8, !tbaa !17
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %50, ptr align 1 %18, i64 %11, i1 false)
  %51 = load ptr, ptr %0, align 8, !tbaa !26
  %52 = getelementptr inbounds %struct.xpv, ptr %51, i64 0, i32 2
  store i64 %11, ptr %52, align 8, !tbaa !57
  %53 = load ptr, ptr %17, align 8, !tbaa !17
  %54 = getelementptr inbounds i8, ptr %53, i64 %11
  store i8 0, ptr %54, align 1, !tbaa !17
  br i1 %22, label %55, label %57

55:                                               ; preds = %49
  %56 = getelementptr inbounds i8, ptr %18, i64 -8
  tail call void @Perl_unshare_hek(ptr noundef nonnull %56) #17
  br label %57

57:                                               ; preds = %55, %49, %23, %13
  %58 = load i32, ptr %4, align 4, !tbaa !16
  %59 = and i32 %58, 255
  %60 = icmp ugt i32 %59, 6
  br i1 %60, label %61, label %86

61:                                               ; preds = %57
  %62 = load ptr, ptr %0, align 8, !tbaa !26
  %63 = getelementptr inbounds %struct.xpvmg, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %63, align 8, !tbaa !17
  %65 = icmp eq ptr %64, null
  br i1 %65, label %86, label %66

66:                                               ; preds = %61
  %67 = tail call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 103) #17
  %68 = icmp eq ptr %67, null
  br i1 %68, label %80, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.magic, ptr %67, i64 0, i32 5
  %71 = load i64, ptr %70, align 8, !tbaa !76
  %72 = icmp sgt i64 %71, 0
  br i1 %72, label %73, label %80

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.magic, ptr %67, i64 0, i32 4
  %75 = load i8, ptr %74, align 1, !tbaa !81
  %76 = and i8 %75, 64
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %73
  %79 = tail call i64 @Perl_sv_pos_b2u_flags(ptr noundef nonnull %0, i64 noundef %71, i32 noundef 34)
  store i64 %79, ptr %70, align 8, !tbaa !76
  br label %80

80:                                               ; preds = %78, %73, %69, %66
  %81 = phi i32 [ 0, %78 ], [ 2, %73 ], [ 2, %69 ], [ 2, %66 ]
  %82 = tail call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 119) #17
  %83 = icmp eq ptr %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %80
  %85 = tail call i32 @Perl_magic_setutf8(ptr noundef nonnull %0, ptr noundef nonnull %82) #17
  br label %86

86:                                               ; preds = %80, %84, %61, %57
  %87 = phi i32 [ 2, %61 ], [ 2, %57 ], [ %81, %84 ], [ %81, %80 ]
  %88 = load i32, ptr %4, align 4, !tbaa !16
  %89 = and i32 %88, 2098176
  %90 = icmp eq i32 %89, 1024
  br i1 %90, label %91, label %97

91:                                               ; preds = %86
  %92 = load ptr, ptr %0, align 8, !tbaa !26
  %93 = getelementptr inbounds %struct.xpv, ptr %92, i64 0, i32 2
  %94 = load i64, ptr %93, align 8, !tbaa !57
  store i64 %94, ptr %3, align 8, !tbaa !60
  %95 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %96 = load ptr, ptr %95, align 8, !tbaa !17
  br label %99

97:                                               ; preds = %86
  %98 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %0, ptr noundef nonnull %3, i32 noundef %87)
  br label %99

99:                                               ; preds = %97, %91
  %100 = phi ptr [ %96, %91 ], [ %98, %97 ]
  %101 = call ptr @Perl_utf8_to_bytes(ptr noundef %100, ptr noundef nonnull %3) #17
  %102 = icmp eq ptr %101, null
  br i1 %102, label %103, label %121

103:                                              ; preds = %99
  br i1 %1, label %126, label %104

104:                                              ; preds = %103
  %105 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %106 = icmp eq ptr %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %struct.op, ptr %105, i64 0, i32 4
  %109 = load i16, ptr %108, align 8
  %110 = and i16 %109, 511
  %111 = icmp eq i16 %110, 380
  br i1 %111, label %112, label %114

112:                                              ; preds = %107
  %113 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %105, i32 noundef 2) #17
  br label %118

114:                                              ; preds = %107
  %115 = zext i16 %110 to i64
  %116 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %115
  %117 = load ptr, ptr %116, align 8, !tbaa !9
  br label %118

118:                                              ; preds = %114, %112
  %119 = phi ptr [ %113, %112 ], [ %117, %114 ]
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.11, ptr noundef %119) #17
  br label %121

120:                                              ; preds = %104
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.12) #17
  br label %121

121:                                              ; preds = %120, %118, %99
  %122 = load i64, ptr %3, align 8, !tbaa !60
  %123 = load ptr, ptr %0, align 8, !tbaa !26
  %124 = getelementptr inbounds %struct.xpv, ptr %123, i64 0, i32 2
  store i64 %122, ptr %124, align 8, !tbaa !57
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #17
  %125 = load i32, ptr %4, align 4, !tbaa !16
  br label %127

126:                                              ; preds = %103
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #17
  br label %130

127:                                              ; preds = %121, %8, %2
  %128 = phi i32 [ %125, %121 ], [ %5, %8 ], [ %5, %2 ]
  %129 = and i32 %128, -536870913
  store i32 %129, ptr %4, align 4, !tbaa !16
  br label %130

130:                                              ; preds = %126, %127
  %131 = phi i1 [ false, %126 ], [ true, %127 ]
  ret i1 %131
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_2pvutf8(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 151060480
  %6 = icmp ne i32 %5, 0
  %7 = and i32 %4, 268435456
  %8 = icmp eq i32 %7, 0
  %9 = and i1 %6, %8
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = and i32 %4, 49152
  %12 = icmp eq i32 %11, 32768
  br i1 %12, label %13, label %20

13:                                               ; preds = %10
  %14 = and i32 %4, 255
  %15 = add nsw i32 %14, -11
  %16 = icmp ult i32 %15, -2
  %17 = and i32 %4, 2048
  %18 = icmp eq i32 %17, 0
  %19 = and i1 %18, %16
  br i1 %19, label %25, label %23

20:                                               ; preds = %10
  %21 = and i32 %4, 2048
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %2, %13, %20
  %24 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %0, i32 noundef 1538)
  br label %30

25:                                               ; preds = %13, %20
  %26 = and i32 %4, 2097152
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %25
  %29 = tail call i32 @Perl_mg_get(ptr noundef nonnull %0) #17
  br label %30

30:                                               ; preds = %28, %25, %23
  %31 = phi ptr [ %24, %23 ], [ %0, %25 ], [ %0, %28 ]
  %32 = tail call i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef %31, i32 noundef 0, i64 noundef 0)
  %33 = icmp eq ptr %1, null
  %34 = getelementptr inbounds %struct.sv, ptr %31, i64 0, i32 2
  %35 = load i32, ptr %34, align 4, !tbaa !16
  %36 = and i32 %35, 2098176
  %37 = icmp eq i32 %36, 1024
  br i1 %33, label %47, label %38

38:                                               ; preds = %30
  br i1 %37, label %39, label %45

39:                                               ; preds = %38
  %40 = load ptr, ptr %31, align 8, !tbaa !26
  %41 = getelementptr inbounds %struct.xpv, ptr %40, i64 0, i32 2
  %42 = load i64, ptr %41, align 8, !tbaa !57
  store i64 %42, ptr %1, align 8, !tbaa !60
  %43 = getelementptr inbounds %struct.sv, ptr %31, i64 0, i32 3
  %44 = load ptr, ptr %43, align 8, !tbaa !17
  br label %53

45:                                               ; preds = %38
  %46 = tail call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %31, ptr noundef nonnull %1, i32 noundef 0)
  br label %53

47:                                               ; preds = %30
  br i1 %37, label %48, label %51

48:                                               ; preds = %47
  %49 = getelementptr inbounds %struct.sv, ptr %31, i64 0, i32 3
  %50 = load ptr, ptr %49, align 8, !tbaa !17
  br label %53

51:                                               ; preds = %47
  %52 = tail call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %31, ptr noundef null, i32 noundef 0)
  br label %53

53:                                               ; preds = %48, %51, %39, %45
  %54 = phi ptr [ %44, %39 ], [ %46, %45 ], [ %50, %48 ], [ %52, %51 ]
  ret ptr %54
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_mortalcopy_flags(ptr noundef %0, i32 noundef %1) local_unnamed_addr #1 {
  %3 = and i32 %1, 2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !16
  %8 = and i32 %7, 2097152
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = tail call i32 @Perl_mg_get(ptr noundef nonnull %0) #17
  br label %12

12:                                               ; preds = %10, %5, %2
  %13 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %44

15:                                               ; preds = %12
  %16 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %17 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %17, ptr %16, align 8, !tbaa !26
  %18 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 1
  store i32 170, ptr %18, align 8, !tbaa !13
  %19 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  store i32 0, ptr %19, align 4, !tbaa !16
  store ptr %16, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %20 = getelementptr inbounds %struct.sv, ptr %16, i64 1
  store ptr %20, ptr @PL_sv_root, align 8, !tbaa !9
  br label %21

21:                                               ; preds = %21, %15
  %22 = phi ptr [ %20, %15 ], [ %39, %21 ]
  %23 = phi i64 [ 1, %15 ], [ %38, %21 ]
  %24 = getelementptr inbounds %struct.sv, ptr %22, i64 1
  store ptr %24, ptr %22, align 8, !tbaa !26
  %25 = getelementptr inbounds %struct.sv, ptr %16, i64 %23, i32 2
  store i32 255, ptr %25, align 4, !tbaa !16
  %26 = add nuw nsw i64 %23, 1
  %27 = getelementptr inbounds %struct.sv, ptr %16, i64 %26
  %28 = getelementptr inbounds %struct.sv, ptr %27, i64 1
  store ptr %28, ptr %27, align 8, !tbaa !26
  %29 = getelementptr inbounds %struct.sv, ptr %16, i64 %26, i32 2
  store i32 255, ptr %29, align 4, !tbaa !16
  %30 = add nuw nsw i64 %23, 2
  %31 = getelementptr inbounds %struct.sv, ptr %16, i64 %30
  %32 = getelementptr inbounds %struct.sv, ptr %31, i64 1
  store ptr %32, ptr %31, align 8, !tbaa !26
  %33 = getelementptr inbounds %struct.sv, ptr %16, i64 %30, i32 2
  store i32 255, ptr %33, align 4, !tbaa !16
  %34 = add nuw nsw i64 %23, 3
  %35 = getelementptr inbounds %struct.sv, ptr %16, i64 %34
  %36 = getelementptr inbounds %struct.sv, ptr %35, i64 1
  store ptr %36, ptr %35, align 8, !tbaa !26
  %37 = getelementptr inbounds %struct.sv, ptr %16, i64 %34, i32 2
  store i32 255, ptr %37, align 4, !tbaa !16
  %38 = add nuw nsw i64 %23, 4
  %39 = getelementptr inbounds %struct.sv, ptr %16, i64 %38
  %40 = icmp eq i64 %38, 169
  br i1 %40, label %41, label %21, !llvm.loop !59

41:                                               ; preds = %21
  store ptr null, ptr %39, align 8, !tbaa !26
  %42 = getelementptr inbounds %struct.sv, ptr %16, i64 169, i32 2
  store i32 255, ptr %42, align 4, !tbaa !16
  %43 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %44

44:                                               ; preds = %12, %41
  %45 = phi ptr [ %43, %41 ], [ %13, %12 ]
  %46 = load ptr, ptr %45, align 8, !tbaa !26
  store ptr %46, ptr @PL_sv_root, align 8, !tbaa !9
  %47 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %48 = add nsw i64 %47, 1
  store i64 %48, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %45, align 8, !tbaa !26
  %49 = getelementptr inbounds %struct.sv, ptr %45, i64 0, i32 1
  store i32 1, ptr %49, align 8, !tbaa !13
  %50 = getelementptr inbounds %struct.sv, ptr %45, i64 0, i32 2
  store i32 0, ptr %50, align 4, !tbaa !16
  %51 = and i32 %1, -3
  tail call void @Perl_sv_setsv_flags(ptr noundef nonnull %45, ptr noundef %0, i32 noundef %51)
  %52 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %53 = add nsw i64 %52, 1
  store i64 %53, ptr @PL_tmps_ix, align 8, !tbaa !60
  %54 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %55 = icmp slt i64 %53, %54
  br i1 %55, label %58, label %56

56:                                               ; preds = %44
  %57 = tail call i64 @Perl_tmps_grow_p(i64 noundef %53) #17
  br label %58

58:                                               ; preds = %44, %56
  %59 = phi i64 [ %57, %56 ], [ %53, %44 ]
  %60 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %61 = getelementptr inbounds ptr, ptr %60, i64 %59
  store ptr %45, ptr %61, align 8, !tbaa !9
  %62 = load i32, ptr %50, align 4, !tbaa !16
  %63 = or i32 %62, 524288
  store i32 %63, ptr %50, align 4, !tbaa !16
  ret ptr %45
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef %0, i32 noundef %1, i64 noundef %2) local_unnamed_addr #1 {
  %4 = alloca i64, align 8
  %5 = icmp eq ptr %0, @PL_sv_undef
  br i1 %5, label %453, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = and i32 %8, 2098176
  %10 = icmp eq i32 %9, 1024
  br i1 %10, label %53, label %11

11:                                               ; preds = %6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  store i64 0, ptr %4, align 8, !tbaa !60
  %12 = and i32 %8, 134283264
  %13 = icmp eq i32 %12, 0
  %14 = and i32 %8, 28672
  %15 = icmp eq i32 %14, 0
  %16 = or i1 %13, %15
  br i1 %16, label %42, label %17

17:                                               ; preds = %11
  %18 = call ptr @Perl_sv_2pv_flags(ptr noundef %0, ptr noundef nonnull %4, i32 noundef %1)
  %19 = load i32, ptr %7, align 4, !tbaa !16
  %20 = and i32 %19, 536870912
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %49, label %22

22:                                               ; preds = %17
  %23 = icmp eq i64 %2, 0
  br i1 %23, label %51, label %24

24:                                               ; preds = %22
  %25 = and i32 %19, 268435456
  %26 = icmp eq i32 %25, 0
  %27 = load ptr, ptr %0, align 8, !tbaa !26
  br i1 %26, label %32, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.xpv, ptr %27, i64 0, i32 2
  %30 = load i64, ptr %29, align 8, !tbaa !57
  %31 = add i64 %30, %2
  br label %39

32:                                               ; preds = %24
  %33 = getelementptr inbounds %struct.xpv, ptr %27, i64 0, i32 3
  %34 = load i64, ptr %33, align 8, !tbaa !17
  %35 = getelementptr inbounds %struct.xpv, ptr %27, i64 0, i32 2
  %36 = load i64, ptr %35, align 8, !tbaa !57
  %37 = add i64 %36, %2
  %38 = icmp ult i64 %34, %37
  br i1 %38, label %39, label %51

39:                                               ; preds = %28, %32
  %40 = phi i64 [ %31, %28 ], [ %37, %32 ]
  %41 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %40)
  br label %51

42:                                               ; preds = %11
  %43 = and i32 %8, 430018304
  %44 = icmp eq i32 %43, 1024
  br i1 %44, label %49, label %45

45:                                               ; preds = %42
  %46 = and i32 %1, 2
  %47 = call ptr @Perl_sv_pvn_force_flags(ptr noundef %0, ptr noundef nonnull %4, i32 noundef %46)
  %48 = load i32, ptr %7, align 4, !tbaa !16
  br label %49

49:                                               ; preds = %42, %45, %17
  %50 = phi i32 [ %48, %45 ], [ %19, %17 ], [ %8, %42 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  br label %53

51:                                               ; preds = %22, %39, %32
  %52 = load i64, ptr %4, align 8, !tbaa !60
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  br label %453

53:                                               ; preds = %49, %6
  %54 = phi i32 [ %50, %49 ], [ %8, %6 ]
  %55 = and i32 %54, 536870912
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %82, label %57

57:                                               ; preds = %53
  %58 = icmp eq i64 %2, 0
  %59 = load ptr, ptr %0, align 8, !tbaa !26
  br i1 %58, label %78, label %60

60:                                               ; preds = %57
  %61 = and i32 %54, 268435456
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.xpv, ptr %59, i64 0, i32 2
  %65 = load i64, ptr %64, align 8, !tbaa !57
  %66 = add i64 %65, %2
  br label %74

67:                                               ; preds = %60
  %68 = getelementptr inbounds %struct.xpv, ptr %59, i64 0, i32 3
  %69 = load i64, ptr %68, align 8, !tbaa !17
  %70 = getelementptr inbounds %struct.xpv, ptr %59, i64 0, i32 2
  %71 = load i64, ptr %70, align 8, !tbaa !57
  %72 = add i64 %71, %2
  %73 = icmp ult i64 %69, %72
  br i1 %73, label %74, label %78

74:                                               ; preds = %63, %67
  %75 = phi i64 [ %66, %63 ], [ %72, %67 ]
  %76 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %75)
  %77 = load ptr, ptr %0, align 8, !tbaa !26
  br label %78

78:                                               ; preds = %67, %74, %57
  %79 = phi ptr [ %59, %67 ], [ %77, %74 ], [ %59, %57 ]
  %80 = getelementptr inbounds %struct.xpv, ptr %79, i64 0, i32 2
  %81 = load i64, ptr %80, align 8, !tbaa !57
  br label %453

82:                                               ; preds = %53
  %83 = and i32 %54, 268435456
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %129, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %87 = load ptr, ptr %86, align 8, !tbaa !17
  %88 = load ptr, ptr %0, align 8, !tbaa !26
  %89 = getelementptr inbounds %struct.xpv, ptr %88, i64 0, i32 3
  %90 = load i64, ptr %89, align 8, !tbaa !17
  %91 = getelementptr inbounds %struct.xpv, ptr %88, i64 0, i32 2
  %92 = load i64, ptr %91, align 8, !tbaa !57
  %93 = and i32 %54, -268435457
  store i32 %93, ptr %7, align 4, !tbaa !16
  %94 = icmp eq i64 %90, 0
  br i1 %94, label %104, label %95

95:                                               ; preds = %85
  %96 = load i64, ptr %89, align 8, !tbaa !17
  %97 = getelementptr inbounds i8, ptr %87, i64 %96
  %98 = getelementptr inbounds i8, ptr %97, i64 -1
  %99 = load i8, ptr %98, align 1, !tbaa !17
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %129, label %101

101:                                              ; preds = %95
  %102 = add i8 %99, -1
  store i8 %102, ptr %98, align 1, !tbaa !17
  %103 = load ptr, ptr %0, align 8, !tbaa !26
  br label %104

104:                                              ; preds = %101, %85
  %105 = phi ptr [ %103, %101 ], [ %88, %85 ]
  store ptr null, ptr %86, align 8, !tbaa !17
  %106 = getelementptr inbounds %struct.xpv, ptr %105, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %106, i8 0, i64 16, i1 false)
  %107 = load i32, ptr %7, align 4, !tbaa !16
  %108 = and i32 %107, 268435456
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %104
  %111 = add i64 %92, 1
  br label %118

112:                                              ; preds = %104
  %113 = load ptr, ptr %0, align 8, !tbaa !26
  %114 = getelementptr inbounds %struct.xpv, ptr %113, i64 0, i32 3
  %115 = load i64, ptr %114, align 8, !tbaa !17
  %116 = add i64 %92, 1
  %117 = icmp ult i64 %115, %116
  br i1 %117, label %118, label %121

118:                                              ; preds = %110, %112
  %119 = phi i64 [ %111, %110 ], [ %116, %112 ]
  %120 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %119)
  br label %121

121:                                              ; preds = %118, %112
  %122 = load ptr, ptr %86, align 8, !tbaa !17
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %122, ptr align 1 %87, i64 %92, i1 false)
  %123 = load ptr, ptr %0, align 8, !tbaa !26
  %124 = getelementptr inbounds %struct.xpv, ptr %123, i64 0, i32 2
  store i64 %92, ptr %124, align 8, !tbaa !57
  %125 = load ptr, ptr %86, align 8, !tbaa !17
  %126 = getelementptr inbounds i8, ptr %125, i64 %92
  store i8 0, ptr %126, align 1, !tbaa !17
  br i1 %94, label %127, label %129

127:                                              ; preds = %121
  %128 = getelementptr inbounds i8, ptr %87, i64 -8
  call void @Perl_unshare_hek(ptr noundef nonnull %128) #17
  br label %129

129:                                              ; preds = %95, %127, %121, %82
  %130 = load ptr, ptr @PL_encoding, align 8, !tbaa !9
  %131 = icmp eq ptr %130, null
  br i1 %131, label %132, label %141

132:                                              ; preds = %129
  %133 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !9
  %134 = icmp eq ptr %133, null
  br i1 %134, label %172, label %135

135:                                              ; preds = %132
  %136 = call ptr @Perl__get_encoding() #17
  %137 = icmp ne ptr %136, null
  %138 = and i32 %1, 8
  %139 = icmp eq i32 %138, 0
  %140 = and i1 %139, %137
  br i1 %140, label %144, label %172

141:                                              ; preds = %129
  %142 = and i32 %1, 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %172

144:                                              ; preds = %135, %141
  %145 = call ptr @Perl__get_encoding() #17
  %146 = call ptr @Perl_sv_recode_to_utf8(ptr noundef %0, ptr noundef %145)
  %147 = icmp eq i64 %2, 0
  %148 = load ptr, ptr %0, align 8, !tbaa !26
  br i1 %147, label %168, label %149

149:                                              ; preds = %144
  %150 = load i32, ptr %7, align 4, !tbaa !16
  %151 = and i32 %150, 268435456
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %157, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %struct.xpv, ptr %148, i64 0, i32 2
  %155 = load i64, ptr %154, align 8, !tbaa !57
  %156 = add i64 %155, %2
  br label %164

157:                                              ; preds = %149
  %158 = getelementptr inbounds %struct.xpv, ptr %148, i64 0, i32 3
  %159 = load i64, ptr %158, align 8, !tbaa !17
  %160 = getelementptr inbounds %struct.xpv, ptr %148, i64 0, i32 2
  %161 = load i64, ptr %160, align 8, !tbaa !57
  %162 = add i64 %161, %2
  %163 = icmp ult i64 %159, %162
  br i1 %163, label %164, label %168

164:                                              ; preds = %153, %157
  %165 = phi i64 [ %156, %153 ], [ %162, %157 ]
  %166 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %165)
  %167 = load ptr, ptr %0, align 8, !tbaa !26
  br label %168

168:                                              ; preds = %157, %164, %144
  %169 = phi ptr [ %148, %157 ], [ %167, %164 ], [ %148, %144 ]
  %170 = getelementptr inbounds %struct.xpv, ptr %169, i64 0, i32 2
  %171 = load i64, ptr %170, align 8, !tbaa !57
  br label %453

172:                                              ; preds = %132, %135, %141
  %173 = load ptr, ptr %0, align 8, !tbaa !26
  %174 = getelementptr inbounds %struct.xpv, ptr %173, i64 0, i32 2
  %175 = load i64, ptr %174, align 8, !tbaa !57
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %189

177:                                              ; preds = %172
  %178 = icmp eq i64 %2, 0
  br i1 %178, label %447, label %179

179:                                              ; preds = %177
  %180 = load i32, ptr %7, align 4, !tbaa !16
  %181 = and i32 %180, 268435456
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %187

183:                                              ; preds = %179
  %184 = getelementptr inbounds %struct.xpv, ptr %173, i64 0, i32 3
  %185 = load i64, ptr %184, align 8, !tbaa !17
  %186 = icmp ult i64 %185, %2
  br i1 %186, label %187, label %447

187:                                              ; preds = %183, %179
  %188 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %2)
  br label %447

189:                                              ; preds = %172
  %190 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %191 = load ptr, ptr %190, align 8, !tbaa !17
  %192 = getelementptr inbounds i8, ptr %191, i64 %175
  %193 = and i32 %1, 4096
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %222

195:                                              ; preds = %189, %198
  %196 = phi ptr [ %201, %198 ], [ %191, %189 ]
  %197 = icmp ult ptr %196, %192
  br i1 %197, label %198, label %202

198:                                              ; preds = %195
  %199 = load i8, ptr %196, align 1, !tbaa !17
  %200 = icmp sgt i8 %199, -1
  %201 = getelementptr inbounds i8, ptr %196, i64 1
  br i1 %200, label %195, label %222

202:                                              ; preds = %195
  %203 = load i32, ptr %7, align 4, !tbaa !16
  %204 = or i32 %203, 536870912
  store i32 %204, ptr %7, align 4, !tbaa !16
  %205 = icmp eq i64 %2, 0
  br i1 %205, label %453, label %206

206:                                              ; preds = %202
  %207 = and i32 %203, 268435456
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %211, label %209

209:                                              ; preds = %206
  %210 = add i64 %175, %2
  br label %216

211:                                              ; preds = %206
  %212 = getelementptr inbounds %struct.xpv, ptr %173, i64 0, i32 3
  %213 = load i64, ptr %212, align 8, !tbaa !17
  %214 = add i64 %175, %2
  %215 = icmp ult i64 %213, %214
  br i1 %215, label %216, label %453

216:                                              ; preds = %209, %211
  %217 = phi i64 [ %210, %209 ], [ %214, %211 ]
  %218 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %217)
  %219 = load ptr, ptr %0, align 8, !tbaa !26
  %220 = getelementptr inbounds %struct.xpv, ptr %219, i64 0, i32 2
  %221 = load i64, ptr %220, align 8, !tbaa !57
  br label %453

222:                                              ; preds = %198, %189
  %223 = phi i64 [ 0, %189 ], [ 1, %198 ]
  %224 = phi ptr [ %191, %189 ], [ %196, %198 ]
  %225 = ptrtoint ptr %224 to i64
  %226 = ptrtoint ptr %191 to i64
  %227 = sub i64 %225, %226
  %228 = ptrtoint ptr %192 to i64
  %229 = sub i64 %228, %225
  %230 = shl nsw i64 %229, 1
  %231 = add i64 %2, 1
  %232 = add i64 %231, %227
  %233 = add i64 %232, %230
  %234 = getelementptr inbounds %struct.xpv, ptr %173, i64 0, i32 3
  %235 = load i64, ptr %234, align 8, !tbaa !17
  %236 = icmp ult i64 %235, %233
  br i1 %236, label %237, label %339

237:                                              ; preds = %222
  %238 = call ptr @Perl_safesysmalloc(i64 noundef %233) #17
  %239 = icmp eq ptr %224, %191
  br i1 %239, label %242, label %240

240:                                              ; preds = %237
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %238, ptr align 1 %191, i64 %227, i1 false)
  %241 = getelementptr inbounds i8, ptr %238, i64 %227
  br label %242

242:                                              ; preds = %237, %240
  %243 = phi ptr [ %241, %240 ], [ %238, %237 ]
  %244 = icmp ult ptr %224, %192
  br i1 %244, label %245, label %305

245:                                              ; preds = %242
  %246 = add i64 %175, %226
  %247 = add i64 %225, 1
  %248 = and i64 %229, 1
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %266, label %250

250:                                              ; preds = %245
  %251 = load i8, ptr %224, align 1, !tbaa !17
  %252 = icmp sgt i8 %251, -1
  br i1 %252, label %260, label %253

253:                                              ; preds = %250
  %254 = lshr i8 %251, 6
  %255 = or i8 %254, -64
  %256 = getelementptr inbounds i8, ptr %243, i64 1
  %257 = and i8 %251, 63
  %258 = or i8 %257, -128
  %259 = getelementptr inbounds i8, ptr %243, i64 2
  store i8 %258, ptr %256, align 1, !tbaa !17
  br label %262

260:                                              ; preds = %250
  %261 = getelementptr inbounds i8, ptr %243, i64 1
  br label %262

262:                                              ; preds = %260, %253
  %263 = phi i8 [ %251, %260 ], [ %255, %253 ]
  %264 = phi ptr [ %261, %260 ], [ %259, %253 ]
  store i8 %263, ptr %243, align 1
  %265 = getelementptr inbounds i8, ptr %224, i64 1
  br label %266

266:                                              ; preds = %262, %245
  %267 = phi ptr [ %224, %245 ], [ %265, %262 ]
  %268 = phi ptr [ %243, %245 ], [ %264, %262 ]
  %269 = phi ptr [ undef, %245 ], [ %264, %262 ]
  %270 = icmp eq i64 %246, %247
  br i1 %270, label %305, label %271

271:                                              ; preds = %266, %300
  %272 = phi ptr [ %303, %300 ], [ %267, %266 ]
  %273 = phi ptr [ %302, %300 ], [ %268, %266 ]
  %274 = load i8, ptr %272, align 1, !tbaa !17
  %275 = icmp sgt i8 %274, -1
  br i1 %275, label %276, label %278

276:                                              ; preds = %271
  %277 = getelementptr inbounds i8, ptr %273, i64 1
  br label %285

278:                                              ; preds = %271
  %279 = lshr i8 %274, 6
  %280 = or i8 %279, -64
  %281 = getelementptr inbounds i8, ptr %273, i64 1
  %282 = and i8 %274, 63
  %283 = or i8 %282, -128
  %284 = getelementptr inbounds i8, ptr %273, i64 2
  store i8 %283, ptr %281, align 1, !tbaa !17
  br label %285

285:                                              ; preds = %276, %278
  %286 = phi i8 [ %274, %276 ], [ %280, %278 ]
  %287 = phi ptr [ %277, %276 ], [ %284, %278 ]
  store i8 %286, ptr %273, align 1
  %288 = getelementptr inbounds i8, ptr %272, i64 1
  %289 = load i8, ptr %288, align 1, !tbaa !17
  %290 = icmp sgt i8 %289, -1
  br i1 %290, label %298, label %291

291:                                              ; preds = %285
  %292 = lshr i8 %289, 6
  %293 = or i8 %292, -64
  %294 = getelementptr inbounds i8, ptr %287, i64 1
  %295 = and i8 %289, 63
  %296 = or i8 %295, -128
  %297 = getelementptr inbounds i8, ptr %287, i64 2
  store i8 %296, ptr %294, align 1, !tbaa !17
  br label %300

298:                                              ; preds = %285
  %299 = getelementptr inbounds i8, ptr %287, i64 1
  br label %300

300:                                              ; preds = %298, %291
  %301 = phi i8 [ %289, %298 ], [ %293, %291 ]
  %302 = phi ptr [ %299, %298 ], [ %297, %291 ]
  store i8 %301, ptr %287, align 1
  %303 = getelementptr inbounds i8, ptr %272, i64 2
  %304 = icmp ult ptr %303, %192
  br i1 %304, label %271, label %305, !llvm.loop !93

305:                                              ; preds = %266, %300, %242
  %306 = phi ptr [ %243, %242 ], [ %269, %266 ], [ %302, %300 ]
  store i8 0, ptr %306, align 1, !tbaa !17
  %307 = load ptr, ptr %0, align 8, !tbaa !26
  %308 = getelementptr inbounds %struct.xpv, ptr %307, i64 0, i32 3
  %309 = load i64, ptr %308, align 8, !tbaa !17
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %332, label %311

311:                                              ; preds = %305
  %312 = load i32, ptr %7, align 4, !tbaa !16
  %313 = and i32 %312, 33554432
  %314 = icmp eq i32 %313, 0
  %315 = load ptr, ptr %190, align 8, !tbaa !17
  br i1 %314, label %329, label %316

316:                                              ; preds = %311
  %317 = getelementptr inbounds i8, ptr %315, i64 -1
  %318 = load i8, ptr %317, align 1, !tbaa !17
  %319 = zext i8 %318 to i64
  %320 = icmp eq i8 %318, 0
  br i1 %320, label %321, label %324

321:                                              ; preds = %316
  %322 = getelementptr inbounds i8, ptr %315, i64 -9
  %323 = load i64, ptr %322, align 1
  br label %324

324:                                              ; preds = %321, %316
  %325 = phi i64 [ %319, %316 ], [ %323, %321 ]
  %326 = sub i64 0, %325
  %327 = getelementptr inbounds i8, ptr %315, i64 %326
  store ptr %327, ptr %190, align 8, !tbaa !17
  %328 = and i32 %312, -33554433
  store i32 %328, ptr %7, align 4, !tbaa !16
  br label %329

329:                                              ; preds = %311, %324
  %330 = phi ptr [ %315, %311 ], [ %327, %324 ]
  call void @Perl_safesysfree(ptr noundef %330) #17
  %331 = load ptr, ptr %0, align 8, !tbaa !26
  br label %332

332:                                              ; preds = %305, %329
  %333 = phi ptr [ %307, %305 ], [ %331, %329 ]
  store ptr %238, ptr %190, align 8, !tbaa !17
  %334 = ptrtoint ptr %306 to i64
  %335 = ptrtoint ptr %238 to i64
  %336 = sub i64 %334, %335
  %337 = getelementptr inbounds %struct.xpv, ptr %333, i64 0, i32 2
  store i64 %336, ptr %337, align 8, !tbaa !57
  %338 = getelementptr inbounds %struct.xpv, ptr %333, i64 0, i32 3
  store i64 %233, ptr %338, align 8, !tbaa !17
  br label %426

339:                                              ; preds = %222
  %340 = getelementptr inbounds i8, ptr %224, i64 %223
  %341 = icmp ult ptr %340, %192
  br i1 %341, label %342, label %397

342:                                              ; preds = %339
  %343 = add i64 %175, %226
  %344 = add i64 %223, %225
  %345 = sub i64 %343, %344
  %346 = icmp ult i64 %345, 16
  br i1 %346, label %385, label %347

347:                                              ; preds = %342
  %348 = and i64 %345, -16
  %349 = getelementptr i8, ptr %340, i64 %348
  %350 = insertelement <4 x i64> <i64 poison, i64 0, i64 0, i64 0>, i64 %223, i64 0
  br label %351

351:                                              ; preds = %351, %347
  %352 = phi i64 [ 0, %347 ], [ %377, %351 ]
  %353 = phi <4 x i64> [ %350, %347 ], [ %373, %351 ]
  %354 = phi <4 x i64> [ zeroinitializer, %347 ], [ %374, %351 ]
  %355 = phi <4 x i64> [ zeroinitializer, %347 ], [ %375, %351 ]
  %356 = phi <4 x i64> [ zeroinitializer, %347 ], [ %376, %351 ]
  %357 = getelementptr i8, ptr %340, i64 %352
  %358 = load <4 x i8>, ptr %357, align 1, !tbaa !17
  %359 = getelementptr i8, ptr %357, i64 4
  %360 = load <4 x i8>, ptr %359, align 1, !tbaa !17
  %361 = getelementptr i8, ptr %357, i64 8
  %362 = load <4 x i8>, ptr %361, align 1, !tbaa !17
  %363 = getelementptr i8, ptr %357, i64 12
  %364 = load <4 x i8>, ptr %363, align 1, !tbaa !17
  %365 = lshr <4 x i8> %358, <i8 7, i8 7, i8 7, i8 7>
  %366 = lshr <4 x i8> %360, <i8 7, i8 7, i8 7, i8 7>
  %367 = lshr <4 x i8> %362, <i8 7, i8 7, i8 7, i8 7>
  %368 = lshr <4 x i8> %364, <i8 7, i8 7, i8 7, i8 7>
  %369 = zext <4 x i8> %365 to <4 x i64>
  %370 = zext <4 x i8> %366 to <4 x i64>
  %371 = zext <4 x i8> %367 to <4 x i64>
  %372 = zext <4 x i8> %368 to <4 x i64>
  %373 = add <4 x i64> %353, %369
  %374 = add <4 x i64> %354, %370
  %375 = add <4 x i64> %355, %371
  %376 = add <4 x i64> %356, %372
  %377 = add nuw i64 %352, 16
  %378 = icmp eq i64 %377, %348
  br i1 %378, label %379, label %351, !llvm.loop !94

379:                                              ; preds = %351
  %380 = add <4 x i64> %374, %373
  %381 = add <4 x i64> %375, %380
  %382 = add <4 x i64> %376, %381
  %383 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %382)
  %384 = icmp eq i64 %345, %348
  br i1 %384, label %397, label %385

385:                                              ; preds = %342, %379
  %386 = phi ptr [ %340, %342 ], [ %349, %379 ]
  %387 = phi i64 [ %223, %342 ], [ %383, %379 ]
  br label %388

388:                                              ; preds = %385, %388
  %389 = phi ptr [ %391, %388 ], [ %386, %385 ]
  %390 = phi i64 [ %395, %388 ], [ %387, %385 ]
  %391 = getelementptr inbounds i8, ptr %389, i64 1
  %392 = load i8, ptr %389, align 1, !tbaa !17
  %393 = lshr i8 %392, 7
  %394 = zext i8 %393 to i64
  %395 = add i64 %390, %394
  %396 = icmp ult ptr %391, %192
  br i1 %396, label %388, label %397, !llvm.loop !97

397:                                              ; preds = %388, %379, %339
  %398 = phi i64 [ %223, %339 ], [ %383, %379 ], [ %395, %388 ]
  %399 = phi ptr [ %340, %339 ], [ %349, %379 ], [ %391, %388 ]
  %400 = getelementptr inbounds i8, ptr %399, i64 %398
  %401 = ptrtoint ptr %400 to i64
  %402 = sub i64 %401, %226
  store i64 %402, ptr %174, align 8, !tbaa !57
  store i8 0, ptr %400, align 1, !tbaa !17
  %403 = getelementptr inbounds i8, ptr %192, i64 -1
  %404 = icmp ult ptr %403, %224
  br i1 %404, label %426, label %405

405:                                              ; preds = %397
  %406 = getelementptr inbounds i8, ptr %400, i64 -1
  br label %407

407:                                              ; preds = %405, %422
  %408 = phi ptr [ %424, %422 ], [ %403, %405 ]
  %409 = phi ptr [ %423, %422 ], [ %406, %405 ]
  %410 = load i8, ptr %408, align 1, !tbaa !17
  %411 = icmp sgt i8 %410, -1
  br i1 %411, label %412, label %414

412:                                              ; preds = %407
  %413 = getelementptr inbounds i8, ptr %409, i64 -1
  store i8 %410, ptr %409, align 1, !tbaa !17
  br label %422

414:                                              ; preds = %407
  %415 = and i8 %410, 63
  %416 = or i8 %415, -128
  %417 = getelementptr inbounds i8, ptr %409, i64 -1
  store i8 %416, ptr %409, align 1, !tbaa !17
  %418 = load i8, ptr %408, align 1, !tbaa !17
  %419 = lshr i8 %418, 6
  %420 = or i8 %419, -64
  %421 = getelementptr inbounds i8, ptr %409, i64 -2
  store i8 %420, ptr %417, align 1, !tbaa !17
  br label %422

422:                                              ; preds = %414, %412
  %423 = phi ptr [ %413, %412 ], [ %421, %414 ]
  %424 = getelementptr inbounds i8, ptr %408, i64 -1
  %425 = icmp ult ptr %424, %224
  br i1 %425, label %426, label %407, !llvm.loop !98

426:                                              ; preds = %422, %397, %332
  %427 = load i32, ptr %7, align 4, !tbaa !16
  %428 = and i32 %427, 255
  %429 = icmp ugt i32 %428, 6
  br i1 %429, label %430, label %447

430:                                              ; preds = %426
  %431 = load ptr, ptr %0, align 8, !tbaa !26
  %432 = getelementptr inbounds %struct.xpvmg, ptr %431, i64 0, i32 1
  %433 = load ptr, ptr %432, align 8, !tbaa !17
  %434 = icmp eq ptr %433, null
  br i1 %434, label %447, label %435

435:                                              ; preds = %430
  %436 = call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 103) #17
  %437 = icmp eq ptr %436, null
  br i1 %437, label %442, label %438

438:                                              ; preds = %435
  %439 = getelementptr inbounds %struct.magic, ptr %436, i64 0, i32 4
  %440 = load i8, ptr %439, align 1, !tbaa !81
  %441 = and i8 %440, -65
  store i8 %441, ptr %439, align 1, !tbaa !81
  br label %442

442:                                              ; preds = %438, %435
  %443 = call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 119) #17
  %444 = icmp eq ptr %443, null
  br i1 %444, label %447, label %445

445:                                              ; preds = %442
  %446 = call i32 @Perl_magic_setutf8(ptr noundef nonnull %0, ptr noundef nonnull %443) #17
  br label %447

447:                                              ; preds = %426, %430, %445, %442, %183, %177, %187
  %448 = load i32, ptr %7, align 4, !tbaa !16
  %449 = or i32 %448, 536870912
  store i32 %449, ptr %7, align 4, !tbaa !16
  %450 = load ptr, ptr %0, align 8, !tbaa !26
  %451 = getelementptr inbounds %struct.xpv, ptr %450, i64 0, i32 2
  %452 = load i64, ptr %451, align 8, !tbaa !57
  br label %453

453:                                              ; preds = %211, %216, %202, %51, %3, %447, %168, %78
  %454 = phi i64 [ %81, %78 ], [ %452, %447 ], [ %171, %168 ], [ %52, %51 ], [ 0, %3 ], [ %175, %202 ], [ %221, %216 ], [ %175, %211 ]
  ret i64 %454
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i1 @Perl_sv_2bool_flags(ptr noundef %0, i32 noundef %1) local_unnamed_addr #1 {
  %3 = and i32 %1, 2
  %4 = icmp eq i32 %3, 0
  br label %5

5:                                                ; preds = %61, %2
  %6 = phi ptr [ %0, %2 ], [ %44, %61 ]
  %7 = phi i1 [ %4, %2 ], [ %60, %61 ]
  br i1 %7, label %15, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !16
  %11 = and i32 %10, 2097152
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %8
  %14 = tail call i32 @Perl_mg_get(ptr noundef nonnull %6) #17
  br label %15

15:                                               ; preds = %13, %8, %5
  %16 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %17 = load i32, ptr %16, align 4, !tbaa !16
  %18 = and i32 %17, 65280
  %19 = icmp ne i32 %18, 0
  %20 = and i32 %17, 255
  %21 = icmp eq i32 %20, 8
  %22 = or i1 %19, %21
  %23 = and i32 %17, 16826623
  %24 = icmp eq i32 %23, 16777226
  %25 = or i1 %24, %22
  br i1 %25, label %26, label %172

26:                                               ; preds = %15
  %27 = and i32 %17, 2048
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %110, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  %32 = getelementptr inbounds %struct.sv, ptr %31, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  %34 = and i32 %33, 1048576
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %107, label %36

36:                                               ; preds = %29
  %37 = load ptr, ptr %31, align 8, !tbaa !26
  %38 = load ptr, ptr %37, align 8, !tbaa !50
  %39 = getelementptr inbounds %struct.hv, ptr %38, i64 0, i32 2
  %40 = load i32, ptr %39, align 4, !tbaa !64
  %41 = and i32 %40, 268435456
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %107, label %43

43:                                               ; preds = %36
  %44 = tail call ptr @Perl_amagic_call(ptr noundef nonnull %6, ptr noundef nonnull @PL_sv_undef, i32 noundef 8, i32 noundef 9) #17
  %45 = icmp eq ptr %44, null
  br i1 %45, label %46, label %48

46:                                               ; preds = %43
  %47 = load ptr, ptr %30, align 8, !tbaa !17
  br label %107

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.sv, ptr %44, i64 0, i32 2
  %50 = load i32, ptr %49, align 4, !tbaa !16
  %51 = and i32 %50, 2048
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %struct.sv, ptr %44, i64 0, i32 3
  %55 = load ptr, ptr %54, align 8, !tbaa !17
  %56 = load ptr, ptr %30, align 8, !tbaa !17
  %57 = icmp eq ptr %55, %56
  br i1 %57, label %107, label %58

58:                                               ; preds = %53, %48
  %59 = and i32 %50, 2097152
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %58, %88
  br label %5

62:                                               ; preds = %58
  %63 = and i32 %50, 65280
  %64 = icmp ne i32 %63, 0
  %65 = and i32 %50, 255
  %66 = icmp eq i32 %65, 8
  %67 = or i1 %64, %66
  %68 = and i32 %50, 16826623
  %69 = icmp eq i32 %68, 16777226
  %70 = or i1 %69, %67
  br i1 %70, label %71, label %172

71:                                               ; preds = %62
  %72 = and i32 %50, 1024
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %88, label %74

74:                                               ; preds = %71
  %75 = load ptr, ptr %44, align 8, !tbaa !26
  %76 = icmp eq ptr %75, null
  br i1 %76, label %172, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %struct.xpv, ptr %75, i64 0, i32 2
  %79 = load i64, ptr %78, align 8, !tbaa !57
  %80 = icmp ugt i64 %79, 1
  br i1 %80, label %172, label %81

81:                                               ; preds = %77
  %82 = icmp eq i64 %79, 0
  br i1 %82, label %172, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %struct.sv, ptr %44, i64 0, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !17
  %86 = load i8, ptr %85, align 1, !tbaa !17
  %87 = icmp ne i8 %86, 48
  br label %172

88:                                               ; preds = %71
  %89 = and i32 %50, 768
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %61, label %91

91:                                               ; preds = %88
  %92 = and i32 %50, 256
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %99, label %94

94:                                               ; preds = %91
  %95 = load ptr, ptr %44, align 8, !tbaa !26
  %96 = getelementptr inbounds %struct.xpviv, ptr %95, i64 0, i32 4
  %97 = load i64, ptr %96, align 8, !tbaa !17
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %172

99:                                               ; preds = %94, %91
  %100 = and i32 %50, 512
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %172, label %102

102:                                              ; preds = %99
  %103 = load ptr, ptr %44, align 8, !tbaa !26
  %104 = getelementptr inbounds %struct.xpvnv, ptr %103, i64 0, i32 5
  %105 = load double, ptr %104, align 8, !tbaa !17
  %106 = fcmp fast une double %105, 0.000000e+00
  br label %172

107:                                              ; preds = %53, %36, %29, %46
  %108 = phi ptr [ %47, %46 ], [ %55, %53 ], [ %31, %36 ], [ %31, %29 ]
  %109 = icmp ne ptr %108, null
  br label %172

110:                                              ; preds = %26
  %111 = or i1 %21, %24
  br i1 %111, label %112, label %126

112:                                              ; preds = %110
  %113 = load ptr, ptr %6, align 8, !tbaa !26
  %114 = getelementptr inbounds %struct.xpv, ptr %113, i64 0, i32 2
  %115 = load i64, ptr %114, align 8, !tbaa !57
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %172, label %117

117:                                              ; preds = %112
  %118 = icmp eq i64 %115, 0
  br i1 %118, label %172, label %119

119:                                              ; preds = %117
  %120 = getelementptr i8, ptr %6, i64 16
  %121 = load ptr, ptr %120, align 8, !tbaa !17
  %122 = getelementptr inbounds %struct.regexp, ptr %121, i64 0, i32 3
  %123 = load ptr, ptr %122, align 8, !tbaa !17
  %124 = load i8, ptr %123, align 1, !tbaa !17
  %125 = icmp ne i8 %124, 48
  br label %172

126:                                              ; preds = %110
  %127 = icmp eq i32 %18, 0
  br i1 %127, label %172, label %128

128:                                              ; preds = %126
  %129 = and i32 %17, 1024
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %145, label %131

131:                                              ; preds = %128
  %132 = load ptr, ptr %6, align 8, !tbaa !26
  %133 = icmp eq ptr %132, null
  br i1 %133, label %172, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %struct.xpv, ptr %132, i64 0, i32 2
  %136 = load i64, ptr %135, align 8, !tbaa !57
  %137 = icmp ugt i64 %136, 1
  br i1 %137, label %172, label %138

138:                                              ; preds = %134
  %139 = icmp eq i64 %136, 0
  br i1 %139, label %172, label %140

140:                                              ; preds = %138
  %141 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 3
  %142 = load ptr, ptr %141, align 8, !tbaa !17
  %143 = load i8, ptr %142, align 1, !tbaa !17
  %144 = icmp ne i8 %143, 48
  br label %172

145:                                              ; preds = %128
  %146 = and i32 %17, 768
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %166, label %148

148:                                              ; preds = %145
  %149 = and i32 %17, 256
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %156, label %151

151:                                              ; preds = %148
  %152 = load ptr, ptr %6, align 8, !tbaa !26
  %153 = getelementptr inbounds %struct.xpviv, ptr %152, i64 0, i32 4
  %154 = load i64, ptr %153, align 8, !tbaa !17
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %172

156:                                              ; preds = %151, %148
  %157 = and i32 %17, 512
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %172, label %159

159:                                              ; preds = %156
  %160 = load ptr, ptr %6, align 8, !tbaa !26
  %161 = getelementptr inbounds %struct.xpvnv, ptr %160, i64 0, i32 5
  %162 = load double, ptr %161, align 8, !tbaa !17
  %163 = fcmp uno double %162, 0.000000e+00
  br i1 %163, label %172, label %164

164:                                              ; preds = %159
  %165 = fcmp fast une double %162, 0.000000e+00
  br label %172

166:                                              ; preds = %145
  %167 = and i32 %17, 49152
  %168 = icmp eq i32 %167, 32768
  br i1 %168, label %169, label %172

169:                                              ; preds = %166
  %170 = add nsw i32 %20, -9
  %171 = icmp ult i32 %170, 2
  br label %172

172:                                              ; preds = %62, %15, %77, %83, %81, %74, %99, %102, %94, %169, %126, %134, %140, %138, %131, %156, %164, %159, %151, %166, %112, %119, %117, %107
  %173 = phi i1 [ %109, %107 ], [ true, %112 ], [ false, %117 ], [ %125, %119 ], [ false, %126 ], [ false, %131 ], [ true, %134 ], [ false, %138 ], [ %144, %140 ], [ true, %151 ], [ false, %156 ], [ true, %159 ], [ %165, %164 ], [ false, %166 ], [ %171, %169 ], [ %106, %102 ], [ false, %99 ], [ true, %94 ], [ %87, %83 ], [ false, %81 ], [ true, %77 ], [ false, %74 ], [ false, %15 ], [ false, %62 ]
  ret i1 %173
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_pvn_force_flags(ptr noundef %0, ptr noundef writeonly %1, i32 noundef %2) local_unnamed_addr #1 {
  %4 = alloca i64, align 8
  %5 = and i32 %2, 2
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !16
  %10 = and i32 %9, 2097152
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %7
  %13 = tail call i32 @Perl_mg_get(ptr noundef nonnull %0) #17
  br label %14

14:                                               ; preds = %12, %7, %3
  %15 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !16
  %17 = and i32 %16, 427886592
  %18 = icmp eq i32 %17, 0
  %19 = and i32 %16, 134285312
  %20 = icmp eq i32 %19, 2048
  %21 = or i1 %18, %20
  br i1 %21, label %24, label %22

22:                                               ; preds = %14
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %0, i32 noundef 0)
  %23 = load i32, ptr %15, align 4, !tbaa !16
  br label %24

24:                                               ; preds = %22, %14
  %25 = phi i32 [ %23, %22 ], [ %16, %14 ]
  %26 = and i32 %25, 1024
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %24
  %29 = icmp eq ptr %1, null
  br i1 %29, label %164, label %30

30:                                               ; preds = %28
  %31 = load ptr, ptr %0, align 8, !tbaa !26
  %32 = getelementptr inbounds %struct.xpv, ptr %31, i64 0, i32 2
  %33 = load i64, ptr %32, align 8, !tbaa !57
  store i64 %33, ptr %1, align 8, !tbaa !60
  br label %164

34:                                               ; preds = %24
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  %35 = and i32 %25, 255
  %36 = icmp ugt i32 %35, 10
  br i1 %36, label %43, label %37

37:                                               ; preds = %34
  %38 = and i32 %25, 49152
  %39 = icmp eq i32 %38, 32768
  %40 = add nsw i32 %35, -9
  %41 = icmp ult i32 %40, 2
  %42 = and i1 %39, %41
  br i1 %42, label %43, label %94

43:                                               ; preds = %37, %34
  %44 = trunc i32 %25 to i8
  switch i8 %44, label %78 [
    i8 0, label %45
    i8 1, label %45
    i8 2, label %45
    i8 3, label %45
    i8 5, label %45
    i8 6, label %45
    i8 7, label %45
    i8 10, label %58
    i8 11, label %79
    i8 12, label %68
    i8 13, label %69
    i8 9, label %70
    i8 14, label %74
    i8 15, label %75
    i8 4, label %76
    i8 8, label %77
  ]

45:                                               ; preds = %43, %43, %43, %43, %43, %43, %43
  %46 = and i32 %25, 14680064
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = tail call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 86) #17
  %50 = icmp eq ptr %49, null
  br i1 %50, label %51, label %79

51:                                               ; preds = %48
  %52 = load i32, ptr %15, align 4, !tbaa !16
  br label %53

53:                                               ; preds = %51, %45
  %54 = phi i32 [ %52, %51 ], [ %25, %45 ]
  %55 = and i32 %54, 2048
  %56 = icmp eq i32 %55, 0
  %57 = select i1 %56, ptr @.str.52, ptr @.str.51
  br label %79

58:                                               ; preds = %43
  %59 = and i32 %25, 2048
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %79

61:                                               ; preds = %58
  %62 = load ptr, ptr %0, align 8, !tbaa !26
  %63 = getelementptr inbounds %struct.xpvlv, ptr %62, i64 0, i32 9
  %64 = load i8, ptr %63, align 8, !tbaa !40
  %65 = and i8 %64, -33
  %66 = icmp eq i8 %65, 84
  %67 = select i1 %66, ptr @.str.52, ptr @.str.53
  br label %79

68:                                               ; preds = %43
  br label %79

69:                                               ; preds = %43
  br label %79

70:                                               ; preds = %43
  %71 = and i32 %25, 49152
  %72 = icmp eq i32 %71, 32768
  %73 = select i1 %72, ptr @.str.57, ptr @.str.52
  br label %79

74:                                               ; preds = %43
  br label %79

75:                                               ; preds = %43
  br label %79

76:                                               ; preds = %43
  br label %79

77:                                               ; preds = %43
  br label %79

78:                                               ; preds = %43
  br label %79

79:                                               ; preds = %43, %48, %53, %58, %61, %68, %69, %70, %74, %75, %76, %77, %78
  %80 = phi ptr [ @.str.62, %78 ], [ @.str.61, %77 ], [ @.str.60, %76 ], [ @.str.59, %75 ], [ @.str.58, %74 ], [ %73, %70 ], [ @.str.56, %69 ], [ @.str.55, %68 ], [ @.str.50, %48 ], [ %57, %53 ], [ %67, %61 ], [ @.str.51, %58 ], [ @.str.54, %43 ]
  %81 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %82 = getelementptr inbounds %struct.op, ptr %81, i64 0, i32 4
  %83 = load i16, ptr %82, align 8
  %84 = and i16 %83, 511
  %85 = icmp eq i16 %84, 380
  br i1 %85, label %86, label %88

86:                                               ; preds = %79
  %87 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %81, i32 noundef 2) #17
  br label %92

88:                                               ; preds = %79
  %89 = zext i16 %84 to i64
  %90 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %89
  %91 = load ptr, ptr %90, align 8, !tbaa !9
  br label %92

92:                                               ; preds = %88, %86
  %93 = phi ptr [ %87, %86 ], [ %91, %88 ]
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.49, ptr noundef nonnull %80, ptr noundef %93) #17
  br label %94

94:                                               ; preds = %92, %37
  %95 = and i32 %2, -3
  %96 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %0, ptr noundef nonnull %4, i32 noundef %95)
  %97 = icmp eq ptr %96, null
  %98 = select i1 %97, ptr @.str.10, ptr %96
  %99 = icmp eq ptr %1, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %94
  %101 = load i64, ptr %4, align 8, !tbaa !60
  store i64 %101, ptr %1, align 8, !tbaa !60
  br label %102

102:                                              ; preds = %100, %94
  %103 = load i32, ptr %15, align 4, !tbaa !16
  %104 = and i32 %103, 255
  %105 = icmp ult i32 %104, 3
  br i1 %105, label %110, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %108 = load ptr, ptr %107, align 8, !tbaa !17
  %109 = icmp eq ptr %98, %108
  br i1 %109, label %149, label %110

110:                                              ; preds = %106, %102
  %111 = and i32 %103, 2048
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %110
  call void @Perl_sv_unref_flags(ptr noundef nonnull %0, i32 noundef 0)
  %114 = load i32, ptr %15, align 4, !tbaa !16
  %115 = and i32 %114, 255
  br label %116

116:                                              ; preds = %113, %110
  %117 = phi i32 [ %115, %113 ], [ %104, %110 ]
  %118 = phi i32 [ %114, %113 ], [ %103, %110 ]
  %119 = icmp ugt i32 %117, 2
  br i1 %119, label %122, label %120

120:                                              ; preds = %116
  call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 3)
  %121 = load i32, ptr %15, align 4, !tbaa !16
  br label %122

122:                                              ; preds = %120, %116
  %123 = phi i32 [ %121, %120 ], [ %118, %116 ]
  %124 = and i32 %123, 268435456
  %125 = icmp eq i32 %124, 0
  %126 = load i64, ptr %4, align 8, !tbaa !60
  br i1 %125, label %129, label %127

127:                                              ; preds = %122
  %128 = add i64 %126, 1
  br label %135

129:                                              ; preds = %122
  %130 = load ptr, ptr %0, align 8, !tbaa !26
  %131 = getelementptr inbounds %struct.xpv, ptr %130, i64 0, i32 3
  %132 = load i64, ptr %131, align 8, !tbaa !17
  %133 = add i64 %126, 1
  %134 = icmp ult i64 %132, %133
  br i1 %134, label %135, label %139

135:                                              ; preds = %127, %129
  %136 = phi i64 [ %128, %127 ], [ %133, %129 ]
  %137 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %136)
  %138 = load i64, ptr %4, align 8, !tbaa !60
  br label %139

139:                                              ; preds = %129, %135
  %140 = phi i64 [ %126, %129 ], [ %138, %135 ]
  %141 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %142 = load ptr, ptr %141, align 8, !tbaa !17
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %142, ptr nonnull align 1 %98, i64 %140, i1 false)
  %143 = load i64, ptr %4, align 8, !tbaa !60
  %144 = load ptr, ptr %0, align 8, !tbaa !26
  %145 = getelementptr inbounds %struct.xpv, ptr %144, i64 0, i32 2
  store i64 %143, ptr %145, align 8, !tbaa !57
  %146 = load ptr, ptr %141, align 8, !tbaa !17
  %147 = getelementptr inbounds i8, ptr %146, i64 %143
  store i8 0, ptr %147, align 1, !tbaa !17
  %148 = load i32, ptr %15, align 4, !tbaa !16
  br label %149

149:                                              ; preds = %139, %106
  %150 = phi i32 [ %148, %139 ], [ %103, %106 ]
  %151 = and i32 %150, 1024
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %162

153:                                              ; preds = %149
  %154 = or i32 %150, 17408
  store i32 %154, ptr %15, align 4, !tbaa !16
  %155 = load i8, ptr @PL_tainting, align 1, !tbaa !5, !range !74, !noundef !75
  %156 = icmp eq i8 %155, 0
  %157 = load i8, ptr @PL_tainted, align 1, !range !74
  %158 = icmp eq i8 %157, 0
  %159 = select i1 %156, i1 true, i1 %158
  br i1 %159, label %162, label %160

160:                                              ; preds = %153
  call void @Perl_sv_magic(ptr noundef nonnull %0, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0)
  %161 = load i32, ptr %15, align 4, !tbaa !16
  br label %162

162:                                              ; preds = %153, %160, %149
  %163 = phi i32 [ %154, %153 ], [ %161, %160 ], [ %150, %149 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  br label %164

164:                                              ; preds = %28, %30, %162
  %165 = phi i32 [ %25, %28 ], [ %25, %30 ], [ %163, %162 ]
  %166 = and i32 %165, 2147418367
  %167 = or i32 %166, 17408
  store i32 %167, ptr %15, align 4, !tbaa !16
  %168 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %169 = load ptr, ptr %168, align 8, !tbaa !17
  ret ptr %169
}

declare ptr @Perl__get_encoding() local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_recode_to_utf8(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 536871936
  %7 = icmp eq i32 %6, 1024
  br i1 %7, label %8, label %243

8:                                                ; preds = %2
  %9 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %10 = getelementptr inbounds %struct.cop, ptr %9, i64 0, i32 10
  %11 = load i32, ptr %10, align 8, !tbaa !79
  %12 = and i32 %11, 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %243

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !16
  %17 = and i32 %16, 2048
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %243, label %19

19:                                               ; preds = %14
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #17
  %20 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !9
  tail call void @Perl_push_scope() #17
  %21 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !9
  %22 = getelementptr inbounds %struct.stackinfo, ptr %21, i64 0, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !99
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %30

25:                                               ; preds = %19
  %26 = tail call ptr @Perl_new_stackinfo(i32 noundef 32, i32 noundef 22) #17
  %27 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !9
  %28 = getelementptr inbounds %struct.stackinfo, ptr %26, i64 0, i32 2
  store ptr %27, ptr %28, align 8, !tbaa !101
  %29 = getelementptr inbounds %struct.stackinfo, ptr %27, i64 0, i32 3
  store ptr %26, ptr %29, align 8, !tbaa !99
  br label %30

30:                                               ; preds = %25, %19
  %31 = phi ptr [ %23, %19 ], [ %26, %25 ]
  %32 = getelementptr inbounds %struct.stackinfo, ptr %31, i64 0, i32 6
  store i32 -1, ptr %32, align 8, !tbaa !102
  %33 = getelementptr inbounds %struct.stackinfo, ptr %31, i64 0, i32 4
  store i32 -1, ptr %33, align 8, !tbaa !103
  %34 = load ptr, ptr %31, align 8, !tbaa !104
  %35 = load ptr, ptr %34, align 8, !tbaa !105
  %36 = getelementptr inbounds %struct.xpvav, ptr %35, i64 0, i32 2
  store i64 0, ptr %36, align 8, !tbaa !107
  %37 = load ptr, ptr @PL_stack_base, align 8, !tbaa !9
  %38 = ptrtoint ptr %20 to i64
  %39 = ptrtoint ptr %37 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = load ptr, ptr @PL_curstack, align 8, !tbaa !9
  %43 = load ptr, ptr %42, align 8, !tbaa !105
  %44 = getelementptr inbounds %struct.xpvav, ptr %43, i64 0, i32 2
  store i64 %41, ptr %44, align 8, !tbaa !107
  %45 = getelementptr inbounds %struct.av, ptr %34, i64 0, i32 3
  %46 = load ptr, ptr %45, align 8, !tbaa !17
  store ptr %46, ptr @PL_stack_base, align 8, !tbaa !9
  %47 = load ptr, ptr %31, align 8, !tbaa !104
  %48 = load ptr, ptr %47, align 8, !tbaa !105
  %49 = getelementptr inbounds %struct.xpvav, ptr %48, i64 0, i32 3
  %50 = load i64, ptr %49, align 8, !tbaa !108
  %51 = getelementptr inbounds ptr, ptr %46, i64 %50
  store ptr %51, ptr @PL_stack_max, align 8, !tbaa !9
  %52 = load ptr, ptr %31, align 8, !tbaa !104
  %53 = load ptr, ptr %52, align 8, !tbaa !105
  %54 = getelementptr inbounds %struct.xpvav, ptr %53, i64 0, i32 2
  %55 = load i64, ptr %54, align 8, !tbaa !107
  %56 = getelementptr inbounds ptr, ptr %46, i64 %55
  store ptr %56, ptr @PL_stack_sp, align 8, !tbaa !9
  %57 = load ptr, ptr %31, align 8, !tbaa !104
  store ptr %57, ptr @PL_curstack, align 8, !tbaa !9
  store ptr %31, ptr @PL_curstackinfo, align 8, !tbaa !9
  tail call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %58 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  store i64 %58, ptr @PL_tmps_floor, align 8, !tbaa !60
  %59 = load i32, ptr %4, align 4, !tbaa !16
  %60 = and i32 %59, 131072
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %114, label %62

62:                                               ; preds = %30
  %63 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %64 = icmp eq ptr %63, null
  br i1 %64, label %65, label %95

65:                                               ; preds = %62
  %66 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %67 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %67, ptr %66, align 8, !tbaa !26
  %68 = getelementptr inbounds %struct.sv, ptr %66, i64 0, i32 1
  store i32 170, ptr %68, align 8, !tbaa !13
  %69 = getelementptr inbounds %struct.sv, ptr %66, i64 0, i32 2
  store i32 0, ptr %69, align 4, !tbaa !16
  store ptr %66, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %70 = getelementptr inbounds %struct.sv, ptr %66, i64 1
  store ptr %70, ptr @PL_sv_root, align 8, !tbaa !9
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi ptr [ %70, %65 ], [ %89, %71 ]
  %73 = phi i64 [ 1, %65 ], [ %88, %71 ]
  %74 = getelementptr inbounds %struct.sv, ptr %72, i64 1
  store ptr %74, ptr %72, align 8, !tbaa !26
  %75 = getelementptr inbounds %struct.sv, ptr %66, i64 %73, i32 2
  store i32 255, ptr %75, align 4, !tbaa !16
  %76 = add nuw nsw i64 %73, 1
  %77 = getelementptr inbounds %struct.sv, ptr %66, i64 %76
  %78 = getelementptr inbounds %struct.sv, ptr %77, i64 1
  store ptr %78, ptr %77, align 8, !tbaa !26
  %79 = getelementptr inbounds %struct.sv, ptr %66, i64 %76, i32 2
  store i32 255, ptr %79, align 4, !tbaa !16
  %80 = add nuw nsw i64 %73, 2
  %81 = getelementptr inbounds %struct.sv, ptr %66, i64 %80
  %82 = getelementptr inbounds %struct.sv, ptr %81, i64 1
  store ptr %82, ptr %81, align 8, !tbaa !26
  %83 = getelementptr inbounds %struct.sv, ptr %66, i64 %80, i32 2
  store i32 255, ptr %83, align 4, !tbaa !16
  %84 = add nuw nsw i64 %73, 3
  %85 = getelementptr inbounds %struct.sv, ptr %66, i64 %84
  %86 = getelementptr inbounds %struct.sv, ptr %85, i64 1
  store ptr %86, ptr %85, align 8, !tbaa !26
  %87 = getelementptr inbounds %struct.sv, ptr %66, i64 %84, i32 2
  store i32 255, ptr %87, align 4, !tbaa !16
  %88 = add nuw nsw i64 %73, 4
  %89 = getelementptr inbounds %struct.sv, ptr %66, i64 %88
  %90 = icmp eq i64 %88, 169
  br i1 %90, label %91, label %71, !llvm.loop !59

91:                                               ; preds = %71
  store ptr null, ptr %89, align 8, !tbaa !26
  %92 = getelementptr inbounds %struct.sv, ptr %66, i64 169, i32 2
  store i32 255, ptr %92, align 4, !tbaa !16
  %93 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %94 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  br label %95

95:                                               ; preds = %91, %62
  %96 = phi i64 [ %94, %91 ], [ %58, %62 ]
  %97 = phi ptr [ %93, %91 ], [ %63, %62 ]
  %98 = load ptr, ptr %97, align 8, !tbaa !26
  store ptr %98, ptr @PL_sv_root, align 8, !tbaa !9
  %99 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %100 = add nsw i64 %99, 1
  store i64 %100, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %97, align 8, !tbaa !26
  %101 = getelementptr inbounds %struct.sv, ptr %97, i64 0, i32 1
  store i32 1, ptr %101, align 8, !tbaa !13
  %102 = getelementptr inbounds %struct.sv, ptr %97, i64 0, i32 2
  store i32 524288, ptr %102, align 4, !tbaa !16
  %103 = add nsw i64 %96, 1
  store i64 %103, ptr @PL_tmps_ix, align 8, !tbaa !60
  %104 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %105 = icmp slt i64 %103, %104
  br i1 %105, label %108, label %106

106:                                              ; preds = %95
  %107 = tail call i64 @Perl_tmps_grow_p(i64 noundef %103) #17
  br label %108

108:                                              ; preds = %95, %106
  %109 = phi i64 [ %107, %106 ], [ %103, %95 ]
  %110 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %111 = getelementptr inbounds ptr, ptr %110, i64 %109
  store ptr %97, ptr %111, align 8, !tbaa !9
  %112 = icmp eq ptr %97, %0
  br i1 %112, label %114, label %113

113:                                              ; preds = %108
  tail call void @Perl_sv_setsv_flags(ptr noundef nonnull %97, ptr noundef %0, i32 noundef 1554)
  br label %114

114:                                              ; preds = %113, %108, %30
  %115 = phi ptr [ %97, %113 ], [ %0, %108 ], [ %0, %30 ]
  tail call void @Perl_save_re_context() #17
  %116 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !9
  %117 = getelementptr inbounds i32, ptr %116, i64 1
  store ptr %117, ptr @PL_markstack_ptr, align 8, !tbaa !9
  %118 = load ptr, ptr @PL_markstack_max, align 8, !tbaa !9
  %119 = icmp eq ptr %117, %118
  br i1 %119, label %120, label %122

120:                                              ; preds = %114
  %121 = tail call ptr @Perl_markstack_grow() #17
  br label %122

122:                                              ; preds = %114, %120
  %123 = phi ptr [ %121, %120 ], [ %117, %114 ]
  %124 = load ptr, ptr @PL_stack_base, align 8, !tbaa !9
  %125 = ptrtoint ptr %56 to i64
  %126 = ptrtoint ptr %124 to i64
  %127 = sub i64 %125, %126
  %128 = lshr exact i64 %127, 3
  %129 = trunc i64 %128 to i32
  store i32 %129, ptr %123, align 4, !tbaa !25
  %130 = load ptr, ptr @PL_stack_max, align 8, !tbaa !9
  %131 = ptrtoint ptr %130 to i64
  %132 = sub i64 %131, %125
  %133 = icmp slt i64 %132, 24
  br i1 %133, label %134, label %136

134:                                              ; preds = %122
  %135 = tail call ptr @Perl_stack_grow(ptr noundef %56, ptr noundef %56, i64 noundef 3) #17
  br label %136

136:                                              ; preds = %122, %134
  %137 = phi ptr [ %135, %134 ], [ %56, %122 ]
  %138 = getelementptr inbounds ptr, ptr %137, i64 1
  store ptr %1, ptr %138, align 8, !tbaa !9
  %139 = getelementptr inbounds ptr, ptr %137, i64 2
  store ptr %115, ptr %139, align 8, !tbaa !9
  store ptr %139, ptr @PL_stack_sp, align 8, !tbaa !9
  %140 = tail call i32 @Perl_call_method(ptr noundef nonnull @.str.83, i32 noundef 2) #17
  %141 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !9
  %142 = getelementptr inbounds ptr, ptr %141, i64 -1
  %143 = load ptr, ptr %141, align 8, !tbaa !9
  store ptr %142, ptr @PL_stack_sp, align 8, !tbaa !9
  %144 = getelementptr inbounds %struct.sv, ptr %143, i64 0, i32 2
  %145 = load i32, ptr %144, align 4, !tbaa !16
  %146 = and i32 %145, 2098176
  %147 = icmp eq i32 %146, 1024
  br i1 %147, label %148, label %154

148:                                              ; preds = %136
  %149 = load ptr, ptr %143, align 8, !tbaa !26
  %150 = getelementptr inbounds %struct.xpv, ptr %149, i64 0, i32 2
  %151 = load i64, ptr %150, align 8, !tbaa !57
  store i64 %151, ptr %3, align 8, !tbaa !60
  %152 = getelementptr inbounds %struct.sv, ptr %143, i64 0, i32 3
  %153 = load ptr, ptr %152, align 8, !tbaa !17
  br label %156

154:                                              ; preds = %136
  %155 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %143, ptr noundef nonnull %3, i32 noundef 34)
  br label %156

156:                                              ; preds = %154, %148
  %157 = phi ptr [ %153, %148 ], [ %155, %154 ]
  %158 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %159 = load ptr, ptr %158, align 8, !tbaa !17
  %160 = icmp eq ptr %157, %159
  br i1 %160, label %186, label %161

161:                                              ; preds = %156
  %162 = load i32, ptr %4, align 4, !tbaa !16
  %163 = and i32 %162, 268435456
  %164 = icmp eq i32 %163, 0
  %165 = load i64, ptr %3, align 8, !tbaa !60
  br i1 %164, label %168, label %166

166:                                              ; preds = %161
  %167 = add i64 %165, 1
  br label %174

168:                                              ; preds = %161
  %169 = load ptr, ptr %0, align 8, !tbaa !26
  %170 = getelementptr inbounds %struct.xpv, ptr %169, i64 0, i32 3
  %171 = load i64, ptr %170, align 8, !tbaa !17
  %172 = add i64 %165, 1
  %173 = icmp ult i64 %171, %172
  br i1 %173, label %174, label %180

174:                                              ; preds = %166, %168
  %175 = phi i64 [ %167, %166 ], [ %172, %168 ]
  %176 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %175)
  %177 = load ptr, ptr %158, align 8, !tbaa !17
  %178 = load i64, ptr %3, align 8, !tbaa !60
  %179 = add i64 %178, 1
  br label %180

180:                                              ; preds = %168, %174
  %181 = phi i64 [ %172, %168 ], [ %179, %174 ]
  %182 = phi ptr [ %159, %168 ], [ %177, %174 ]
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %182, ptr align 1 %157, i64 %181, i1 false)
  %183 = load i64, ptr %3, align 8, !tbaa !60
  %184 = load ptr, ptr %0, align 8, !tbaa !26
  %185 = getelementptr inbounds %struct.xpv, ptr %184, i64 0, i32 2
  store i64 %183, ptr %185, align 8, !tbaa !57
  br label %186

186:                                              ; preds = %180, %156
  %187 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %188 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !60
  %189 = icmp sgt i64 %187, %188
  br i1 %189, label %190, label %191

190:                                              ; preds = %186
  call void @Perl_free_tmps() #17
  br label %191

191:                                              ; preds = %186, %190
  %192 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !9
  %193 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !9
  %194 = getelementptr inbounds %struct.stackinfo, ptr %193, i64 0, i32 2
  %195 = load ptr, ptr %194, align 8, !tbaa !101
  %196 = icmp eq ptr %195, null
  br i1 %196, label %197, label %198

197:                                              ; preds = %191
  call void @Perl_croak_popstack() #17
  br label %198

198:                                              ; preds = %191, %197
  %199 = load ptr, ptr @PL_stack_base, align 8, !tbaa !9
  %200 = ptrtoint ptr %192 to i64
  %201 = ptrtoint ptr %199 to i64
  %202 = sub i64 %200, %201
  %203 = ashr exact i64 %202, 3
  %204 = load ptr, ptr @PL_curstack, align 8, !tbaa !9
  %205 = load ptr, ptr %204, align 8, !tbaa !105
  %206 = getelementptr inbounds %struct.xpvav, ptr %205, i64 0, i32 2
  store i64 %203, ptr %206, align 8, !tbaa !107
  %207 = load ptr, ptr %195, align 8, !tbaa !104
  %208 = getelementptr inbounds %struct.av, ptr %207, i64 0, i32 3
  %209 = load ptr, ptr %208, align 8, !tbaa !17
  store ptr %209, ptr @PL_stack_base, align 8, !tbaa !9
  %210 = load ptr, ptr %195, align 8, !tbaa !104
  %211 = load ptr, ptr %210, align 8, !tbaa !105
  %212 = getelementptr inbounds %struct.xpvav, ptr %211, i64 0, i32 3
  %213 = load i64, ptr %212, align 8, !tbaa !108
  %214 = getelementptr inbounds ptr, ptr %209, i64 %213
  store ptr %214, ptr @PL_stack_max, align 8, !tbaa !9
  %215 = load ptr, ptr %195, align 8, !tbaa !104
  %216 = load ptr, ptr %215, align 8, !tbaa !105
  %217 = getelementptr inbounds %struct.xpvav, ptr %216, i64 0, i32 2
  %218 = load i64, ptr %217, align 8, !tbaa !107
  %219 = getelementptr inbounds ptr, ptr %209, i64 %218
  store ptr %219, ptr @PL_stack_sp, align 8, !tbaa !9
  %220 = load ptr, ptr %195, align 8, !tbaa !104
  store ptr %220, ptr @PL_curstack, align 8, !tbaa !9
  store ptr %195, ptr @PL_curstackinfo, align 8, !tbaa !9
  call void @Perl_pop_scope() #17
  %221 = load i32, ptr %4, align 4, !tbaa !16
  %222 = and i32 %221, 255
  %223 = icmp ugt i32 %222, 6
  br i1 %223, label %224, label %239

224:                                              ; preds = %198
  %225 = load ptr, ptr %0, align 8, !tbaa !26
  %226 = getelementptr inbounds %struct.xpvmg, ptr %225, i64 0, i32 1
  %227 = load ptr, ptr %226, align 8, !tbaa !17
  %228 = icmp eq ptr %227, null
  br i1 %228, label %239, label %229

229:                                              ; preds = %224
  %230 = call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 103) #17
  %231 = icmp eq ptr %230, null
  br i1 %231, label %234, label %232

232:                                              ; preds = %229
  %233 = getelementptr inbounds %struct.magic, ptr %230, i64 0, i32 5
  store i64 -1, ptr %233, align 8, !tbaa !76
  br label %234

234:                                              ; preds = %232, %229
  %235 = call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 119) #17
  %236 = icmp eq ptr %235, null
  br i1 %236, label %239, label %237

237:                                              ; preds = %234
  %238 = call i32 @Perl_magic_setutf8(ptr noundef nonnull %0, ptr noundef nonnull %235) #17
  br label %239

239:                                              ; preds = %234, %237, %224, %198
  %240 = load i32, ptr %4, align 4, !tbaa !16
  %241 = or i32 %240, 536870912
  store i32 %241, ptr %4, align 4, !tbaa !16
  %242 = load ptr, ptr %158, align 8, !tbaa !17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #17
  br label %249

243:                                              ; preds = %14, %8, %2
  %244 = and i32 %5, 16384
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %249, label %246

246:                                              ; preds = %243
  %247 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %248 = load ptr, ptr %247, align 8, !tbaa !17
  br label %249

249:                                              ; preds = %246, %243, %239
  %250 = phi ptr [ %242, %239 ], [ %248, %246 ], [ null, %243 ]
  ret ptr %250
}

declare ptr @Perl_mg_find(ptr noundef, i32 noundef) local_unnamed_addr #3

declare i32 @Perl_magic_setutf8(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @Perl_sv_pos_b2u_flags(ptr noundef %0, i64 noundef %1, i32 noundef %2) local_unnamed_addr #1 {
  %4 = alloca i64, align 8
  %5 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #17
  store ptr null, ptr %5, align 8, !tbaa !9
  %6 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !16
  %8 = and i32 %7, 2098176
  %9 = icmp eq i32 %8, 1024
  br i1 %9, label %10, label %16

10:                                               ; preds = %3
  %11 = load ptr, ptr %0, align 8, !tbaa !26
  %12 = getelementptr inbounds %struct.xpv, ptr %11, i64 0, i32 2
  %13 = load i64, ptr %12, align 8, !tbaa !57
  store i64 %13, ptr %4, align 8, !tbaa !60
  %14 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  br label %19

16:                                               ; preds = %3
  %17 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %0, ptr noundef nonnull %4, i32 noundef %2)
  %18 = load i64, ptr %4, align 8, !tbaa !60
  br label %19

19:                                               ; preds = %16, %10
  %20 = phi i64 [ %13, %10 ], [ %18, %16 ]
  %21 = phi ptr [ %15, %10 ], [ %17, %16 ]
  %22 = icmp ult i64 %20, %1
  br i1 %22, label %23, label %24

23:                                               ; preds = %19
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.36, i64 noundef %20, i64 noundef %1) #17
  br label %24

24:                                               ; preds = %23, %19
  %25 = getelementptr inbounds i8, ptr %21, i64 %1
  %26 = load i32, ptr %6, align 4, !tbaa !16
  %27 = and i32 %26, 134283264
  %28 = icmp eq i32 %27, 0
  %29 = load i8, ptr @PL_utf8cache, align 1
  %30 = icmp ne i8 %29, 0
  %31 = select i1 %28, i1 %30, i1 false
  %32 = and i32 %26, 255
  %33 = icmp ugt i32 %32, 6
  %34 = and i1 %33, %31
  br i1 %34, label %35, label %120

35:                                               ; preds = %24
  %36 = call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 119) #17
  store ptr %36, ptr %5, align 8, !tbaa !9
  %37 = icmp eq ptr %36, null
  br i1 %37, label %120, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.magic, ptr %36, i64 0, i32 7
  %40 = load ptr, ptr %39, align 8, !tbaa !109
  %41 = icmp eq ptr %40, null
  br i1 %41, label %88, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds i64, ptr %40, i64 1
  %44 = load i64, ptr %43, align 8, !tbaa !60
  %45 = icmp eq i64 %44, %1
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = load i64, ptr %40, align 8, !tbaa !60
  br label %172

48:                                               ; preds = %42
  %49 = getelementptr inbounds i64, ptr %40, i64 3
  %50 = load i64, ptr %49, align 8, !tbaa !60
  %51 = icmp eq i64 %50, %1
  br i1 %51, label %52, label %55

52:                                               ; preds = %48
  %53 = getelementptr inbounds i64, ptr %40, i64 2
  %54 = load i64, ptr %53, align 8, !tbaa !60
  br label %172

55:                                               ; preds = %48
  %56 = icmp ult i64 %44, %1
  br i1 %56, label %57, label %72

57:                                               ; preds = %55
  %58 = getelementptr inbounds %struct.magic, ptr %36, i64 0, i32 5
  %59 = load i64, ptr %58, align 8, !tbaa !76
  %60 = icmp eq i64 %59, -1
  %61 = load i64, ptr %40, align 8, !tbaa !60
  %62 = getelementptr inbounds i8, ptr %21, i64 %44
  br i1 %60, label %69, label %63

63:                                               ; preds = %57
  %64 = load i64, ptr %4, align 8, !tbaa !60
  %65 = getelementptr inbounds i8, ptr %21, i64 %64
  %66 = sub i64 %59, %61
  %67 = call fastcc i64 @S_sv_pos_b2u_midway(ptr noundef %62, ptr noundef nonnull %25, ptr noundef %65, i64 noundef %66)
  %68 = add i64 %67, %61
  br label %116

69:                                               ; preds = %57
  %70 = call i64 @Perl_utf8_length(ptr noundef %62, ptr noundef nonnull %25) #17
  %71 = add i64 %70, %61
  br label %116

72:                                               ; preds = %55
  %73 = icmp ult i64 %50, %1
  %74 = getelementptr inbounds i8, ptr %21, i64 %50
  br i1 %73, label %75, label %84

75:                                               ; preds = %72
  %76 = getelementptr inbounds i8, ptr %21, i64 %44
  %77 = load i64, ptr %40, align 8, !tbaa !60
  %78 = getelementptr inbounds i64, ptr %40, i64 2
  %79 = load i64, ptr %78, align 8, !tbaa !60
  %80 = sub i64 %77, %79
  %81 = call fastcc i64 @S_sv_pos_b2u_midway(ptr noundef %74, ptr noundef nonnull %25, ptr noundef %76, i64 noundef %80)
  %82 = load i64, ptr %78, align 8, !tbaa !60
  %83 = add i64 %82, %81
  br label %116

84:                                               ; preds = %72
  %85 = getelementptr inbounds i64, ptr %40, i64 2
  %86 = load i64, ptr %85, align 8, !tbaa !60
  %87 = call fastcc i64 @S_sv_pos_b2u_midway(ptr noundef %21, ptr noundef %25, ptr noundef %74, i64 noundef %86)
  br label %116

88:                                               ; preds = %38
  %89 = getelementptr inbounds %struct.magic, ptr %36, i64 0, i32 5
  %90 = load i64, ptr %89, align 8, !tbaa !76
  %91 = icmp eq i64 %90, -1
  br i1 %91, label %120, label %92

92:                                               ; preds = %88
  %93 = load i64, ptr %4, align 8, !tbaa !60
  %94 = getelementptr inbounds i8, ptr %21, i64 %93
  %95 = ptrtoint ptr %25 to i64
  %96 = ptrtoint ptr %94 to i64
  %97 = sub i64 %96, %95
  %98 = shl i64 %97, 1
  %99 = icmp ugt i64 %98, %1
  br i1 %99, label %102, label %100

100:                                              ; preds = %92
  %101 = icmp sgt i64 %93, %1
  br i1 %101, label %104, label %116

102:                                              ; preds = %92
  %103 = call i64 @Perl_utf8_length(ptr noundef %21, ptr noundef %25) #17
  br label %116

104:                                              ; preds = %100, %113
  %105 = phi ptr [ %109, %113 ], [ %94, %100 ]
  %106 = phi i64 [ %114, %113 ], [ %90, %100 ]
  br label %107

107:                                              ; preds = %107, %104
  %108 = phi ptr [ %109, %107 ], [ %105, %104 ]
  %109 = getelementptr inbounds i8, ptr %108, i64 -1
  %110 = load i8, ptr %109, align 1, !tbaa !17
  %111 = and i8 %110, -64
  %112 = icmp eq i8 %111, -128
  br i1 %112, label %107, label %113, !llvm.loop !110

113:                                              ; preds = %107
  %114 = add i64 %106, -1
  %115 = icmp ugt ptr %109, %25
  br i1 %115, label %104, label %116, !llvm.loop !111

116:                                              ; preds = %113, %69, %63, %84, %75, %102, %100
  %117 = phi i64 [ %103, %102 ], [ %90, %100 ], [ %87, %84 ], [ %83, %75 ], [ %71, %69 ], [ %68, %63 ], [ %114, %113 ]
  %118 = load i8, ptr @PL_utf8cache, align 1
  %119 = icmp sgt i8 %118, -1
  br i1 %119, label %132, label %120

120:                                              ; preds = %24, %35, %88, %116
  %121 = phi ptr [ %36, %116 ], [ %36, %88 ], [ null, %35 ], [ null, %24 ]
  %122 = phi i64 [ %117, %116 ], [ 0, %88 ], [ 0, %35 ], [ 0, %24 ]
  %123 = phi i1 [ true, %116 ], [ false, %88 ], [ false, %35 ], [ false, %24 ]
  %124 = call i64 @Perl_utf8_length(ptr noundef %21, ptr noundef %25) #17
  %125 = load i8, ptr @PL_utf8cache, align 1
  %126 = icmp slt i8 %125, 0
  %127 = select i1 %123, i1 %126, i1 false
  br i1 %127, label %128, label %132

128:                                              ; preds = %120
  %129 = icmp eq i64 %122, %124
  br i1 %129, label %137, label %130

130:                                              ; preds = %128
  call void @Perl_save_I8(ptr noundef nonnull @PL_utf8cache) #17
  store i8 0, ptr @PL_utf8cache, align 1, !tbaa !17
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.100, ptr noundef nonnull @.str.37, i64 noundef %122, i64 noundef %124, ptr noundef %0) #17
  %131 = load i8, ptr @PL_utf8cache, align 1, !tbaa !17
  br label %132

132:                                              ; preds = %130, %120, %116
  %133 = phi ptr [ %121, %130 ], [ %121, %120 ], [ %36, %116 ]
  %134 = phi i8 [ %131, %130 ], [ %125, %120 ], [ %118, %116 ]
  %135 = phi i64 [ %124, %130 ], [ %124, %120 ], [ %117, %116 ]
  %136 = icmp eq i8 %134, 0
  br i1 %136, label %172, label %137

137:                                              ; preds = %128, %132
  %138 = phi ptr [ %133, %132 ], [ %121, %128 ]
  %139 = phi i64 [ %135, %132 ], [ %122, %128 ]
  %140 = load i64, ptr %4, align 8, !tbaa !60
  %141 = icmp eq i64 %140, %1
  br i1 %141, label %142, label %171

142:                                              ; preds = %137
  %143 = load i32, ptr %6, align 4, !tbaa !16
  %144 = and i32 %143, 136381440
  %145 = icmp eq i32 %144, 1024
  br i1 %145, label %146, label %172

146:                                              ; preds = %142
  %147 = icmp eq ptr %138, null
  br i1 %147, label %148, label %168

148:                                              ; preds = %146
  %149 = and i32 %143, 255
  %150 = icmp ult i32 %149, 7
  br i1 %150, label %158, label %151

151:                                              ; preds = %148
  %152 = call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 119) #17
  %153 = icmp eq ptr %152, null
  br i1 %153, label %154, label %168

154:                                              ; preds = %151
  %155 = load i32, ptr %6, align 4, !tbaa !16
  %156 = and i32 %155, 255
  %157 = icmp ugt i32 %156, 6
  br i1 %157, label %159, label %158

158:                                              ; preds = %148, %154
  call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 7)
  br label %159

159:                                              ; preds = %154, %158
  %160 = call ptr @Perl_safesyscalloc(i64 noundef 1, i64 noundef 48) #17
  %161 = load ptr, ptr %0, align 8, !tbaa !26
  %162 = getelementptr inbounds %struct.xpvmg, ptr %161, i64 0, i32 1
  %163 = load ptr, ptr %162, align 8, !tbaa !17
  store ptr %163, ptr %160, align 8, !tbaa !112
  store ptr %160, ptr %162, align 8, !tbaa !17
  %164 = getelementptr inbounds %struct.magic, ptr %160, i64 0, i32 6
  store ptr null, ptr %164, align 8, !tbaa !113
  %165 = getelementptr inbounds %struct.magic, ptr %160, i64 0, i32 3
  store i8 119, ptr %165, align 2, !tbaa !114
  %166 = getelementptr inbounds %struct.magic, ptr %160, i64 0, i32 5
  store i64 0, ptr %166, align 8, !tbaa !76
  %167 = getelementptr inbounds %struct.magic, ptr %160, i64 0, i32 1
  store ptr getelementptr inbounds ([31 x %struct.mgvtbl], ptr @PL_magic_vtables, i64 0, i64 28), ptr %167, align 8, !tbaa !115
  call void @Perl_mg_magical(ptr noundef nonnull %0) #17
  br label %168

168:                                              ; preds = %159, %151, %146
  %169 = phi ptr [ %160, %159 ], [ %152, %151 ], [ %138, %146 ]
  %170 = getelementptr inbounds %struct.magic, ptr %169, i64 0, i32 5
  store i64 %139, ptr %170, align 8, !tbaa !76
  br label %172

171:                                              ; preds = %137
  call fastcc void @S_utf8_mg_pos_cache_update(ptr noundef %0, ptr noundef nonnull %5, i64 noundef %1, i64 noundef %139, i64 noundef %140)
  br label %172

172:                                              ; preds = %168, %142, %46, %52, %132, %171
  %173 = phi i64 [ %139, %171 ], [ %135, %132 ], [ %47, %46 ], [ %54, %52 ], [ %139, %142 ], [ %139, %168 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  ret i64 %173
}

declare ptr @Perl_utf8_to_bytes(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_utf8_encode(ptr noundef %0) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 4, !tbaa !16
  %4 = and i32 %3, 134283264
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %0, i32 noundef 0)
  br label %7

7:                                                ; preds = %6, %1
  %8 = tail call i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef nonnull %0, i32 noundef 2, i64 noundef 0)
  %9 = load i32, ptr %2, align 4, !tbaa !16
  %10 = and i32 %9, -536870913
  store i32 %10, ptr %2, align 4, !tbaa !16
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i1 @Perl_sv_utf8_decode(ptr noundef %0) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 4, !tbaa !16
  %4 = and i32 %3, 16384
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %70, label %6

6:                                                ; preds = %1
  %7 = tail call zeroext i1 @Perl_sv_utf8_downgrade(ptr noundef nonnull %0, i1 noundef zeroext true)
  br i1 %7, label %8, label %70

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  %11 = load ptr, ptr %0, align 8, !tbaa !26
  %12 = getelementptr inbounds %struct.xpv, ptr %11, i64 0, i32 2
  %13 = load i64, ptr %12, align 8, !tbaa !57
  %14 = tail call zeroext i1 @Perl_is_utf8_string(ptr noundef %10, i64 noundef %13) #17
  br i1 %14, label %15, label %70

15:                                               ; preds = %8
  %16 = load ptr, ptr %9, align 8, !tbaa !17
  %17 = load ptr, ptr %0, align 8, !tbaa !26
  %18 = getelementptr inbounds %struct.xpv, ptr %17, i64 0, i32 2
  %19 = load i64, ptr %18, align 8, !tbaa !57
  %20 = getelementptr inbounds i8, ptr %16, i64 %19
  br label %21

21:                                               ; preds = %24, %15
  %22 = phi ptr [ %10, %15 ], [ %25, %24 ]
  %23 = icmp ult ptr %22, %20
  br i1 %23, label %24, label %31

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, ptr %22, i64 1
  %26 = load i8, ptr %22, align 1, !tbaa !17
  %27 = icmp sgt i8 %26, -1
  br i1 %27, label %21, label %28

28:                                               ; preds = %24
  %29 = load i32, ptr %2, align 4, !tbaa !16
  %30 = or i32 %29, 536870912
  store i32 %30, ptr %2, align 4, !tbaa !16
  br label %33

31:                                               ; preds = %21
  %32 = load i32, ptr %2, align 4, !tbaa !16
  br label %33

33:                                               ; preds = %31, %28
  %34 = phi i32 [ %32, %31 ], [ %30, %28 ]
  %35 = and i32 %34, 255
  %36 = icmp ugt i32 %35, 6
  br i1 %36, label %37, label %70

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.xpvmg, ptr %17, i64 0, i32 1
  %39 = load ptr, ptr %38, align 8, !tbaa !17
  %40 = icmp eq ptr %39, null
  br i1 %40, label %70, label %41

41:                                               ; preds = %37
  %42 = tail call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 103) #17
  %43 = icmp eq ptr %42, null
  br i1 %43, label %65, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.magic, ptr %42, i64 0, i32 5
  %46 = load i64, ptr %45, align 8, !tbaa !76
  %47 = trunc i64 %46 to i32
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %65

49:                                               ; preds = %44
  %50 = and i64 %46, 4294967295
  %51 = getelementptr inbounds i8, ptr %10, i64 %50
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %60, label %53

53:                                               ; preds = %49, %57
  %54 = phi ptr [ %58, %57 ], [ %51, %49 ]
  %55 = load i8, ptr %54, align 1, !tbaa !17
  %56 = icmp ugt i8 %55, -63
  br i1 %56, label %60, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds i8, ptr %54, i64 -1
  %59 = icmp ugt ptr %58, %10
  br i1 %59, label %53, label %60, !llvm.loop !116

60:                                               ; preds = %57, %53, %49
  %61 = phi ptr [ %51, %49 ], [ %54, %53 ], [ %58, %57 ]
  %62 = ptrtoint ptr %61 to i64
  %63 = ptrtoint ptr %10 to i64
  %64 = sub i64 %62, %63
  store i64 %64, ptr %45, align 8, !tbaa !76
  br label %65

65:                                               ; preds = %44, %60, %41
  %66 = tail call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 119) #17
  %67 = icmp eq ptr %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %65
  %69 = tail call i32 @Perl_magic_setutf8(ptr noundef nonnull %0, ptr noundef nonnull %66) #17
  br label %70

70:                                               ; preds = %33, %37, %68, %65, %1, %6, %8
  %71 = phi i1 [ false, %8 ], [ false, %6 ], [ true, %1 ], [ true, %65 ], [ true, %68 ], [ true, %37 ], [ true, %33 ]
  ret i1 %71
}

declare zeroext i1 @Perl_is_utf8_string(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_gv_setref(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = alloca ptr, align 8
  %4 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !17
  %6 = load ptr, ptr %0, align 8, !tbaa !26
  %7 = getelementptr inbounds %struct.xpvgv, ptr %6, i64 0, i32 2
  %8 = load i64, ptr %7, align 8, !tbaa !69
  %9 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !16
  %11 = and i32 %10, 255
  %12 = and i64 %8, 1
  %13 = icmp ne i64 %12, 0
  br i1 %13, label %14, label %31

14:                                               ; preds = %2
  %15 = and i64 %8, -2
  store i64 %15, ptr %7, align 8, !tbaa !69
  %16 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %17 = getelementptr inbounds %struct.cop, ptr %16, i64 0, i32 7
  %18 = load i32, ptr %17, align 4, !tbaa !117
  %19 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = getelementptr inbounds %struct.gp, ptr %20, i64 0, i32 9
  %22 = load i32, ptr %21, align 8
  %23 = and i32 %18, 2147483647
  %24 = and i32 %22, -2147483648
  %25 = or i32 %24, %23
  store i32 %25, ptr %21, align 8
  %26 = load ptr, ptr %19, align 8, !tbaa !17
  %27 = getelementptr inbounds %struct.gp, ptr %26, i64 0, i32 8
  store ptr %0, ptr %27, align 8, !tbaa !118
  %28 = load ptr, ptr %0, align 8, !tbaa !26
  %29 = getelementptr inbounds %struct.xpvgv, ptr %28, i64 0, i32 2
  %30 = load i64, ptr %29, align 8, !tbaa !69
  br label %31

31:                                               ; preds = %14, %2
  %32 = phi i64 [ %30, %14 ], [ %8, %2 ]
  %33 = phi ptr [ %28, %14 ], [ %6, %2 ]
  %34 = getelementptr inbounds %struct.xpvgv, ptr %33, i64 0, i32 2
  %35 = or i64 %32, 2
  store i64 %35, ptr %34, align 8, !tbaa !69
  %36 = trunc i32 %10 to i8
  switch i8 %36, label %57 [
    i8 13, label %37
    i8 12, label %41
    i8 11, label %45
    i8 15, label %49
    i8 14, label %53
  ]

37:                                               ; preds = %31
  %38 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %39 = load ptr, ptr %38, align 8, !tbaa !17
  %40 = getelementptr inbounds %struct.gp, ptr %39, i64 0, i32 2
  br label %60

41:                                               ; preds = %31
  %42 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  %44 = getelementptr inbounds %struct.gp, ptr %43, i64 0, i32 5
  br label %60

45:                                               ; preds = %31
  %46 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %47 = load ptr, ptr %46, align 8, !tbaa !17
  %48 = getelementptr inbounds %struct.gp, ptr %47, i64 0, i32 6
  br label %60

49:                                               ; preds = %31
  %50 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  %52 = getelementptr inbounds %struct.gp, ptr %51, i64 0, i32 1
  br label %60

53:                                               ; preds = %31
  %54 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %55 = load ptr, ptr %54, align 8, !tbaa !17
  %56 = getelementptr inbounds %struct.gp, ptr %55, i64 0, i32 7
  br label %60

57:                                               ; preds = %31
  %58 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !17
  br label %60

60:                                               ; preds = %57, %53, %49, %45, %41, %37
  %61 = phi ptr [ %59, %57 ], [ %55, %53 ], [ %51, %49 ], [ %47, %45 ], [ %43, %41 ], [ %39, %37 ]
  %62 = phi i1 [ false, %57 ], [ true, %53 ], [ true, %49 ], [ false, %45 ], [ false, %41 ], [ false, %37 ]
  %63 = phi i1 [ true, %57 ], [ false, %53 ], [ false, %49 ], [ false, %45 ], [ false, %41 ], [ false, %37 ]
  %64 = phi i64 [ 16, %57 ], [ 0, %53 ], [ 0, %49 ], [ 32, %45 ], [ 64, %41 ], [ 128, %37 ]
  %65 = phi ptr [ %59, %57 ], [ %56, %53 ], [ %52, %49 ], [ %48, %45 ], [ %44, %41 ], [ %40, %37 ]
  br i1 %13, label %66, label %112

66:                                               ; preds = %60
  %67 = icmp eq i32 %11, 13
  br i1 %67, label %68, label %109

68:                                               ; preds = %66
  %69 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %70 = getelementptr inbounds %struct.gp, ptr %61, i64 0, i32 3
  %71 = load i32, ptr %70, align 8, !tbaa !61
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %89, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %struct.gp, ptr %61, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8, !tbaa !23
  %76 = icmp eq ptr %75, null
  br i1 %76, label %84, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct.sv, ptr %75, i64 0, i32 1
  %79 = load i32, ptr %78, align 8, !tbaa !13
  %80 = icmp ugt i32 %79, 1
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  %82 = add i32 %79, -1
  store i32 %82, ptr %78, align 8, !tbaa !13
  br label %84

83:                                               ; preds = %77
  tail call void @Perl_sv_free2(ptr noundef nonnull %75, i32 noundef %79)
  br label %84

84:                                               ; preds = %73, %81, %83
  %85 = load ptr, ptr %69, align 8, !tbaa !17
  %86 = getelementptr inbounds %struct.gp, ptr %85, i64 0, i32 2
  store ptr null, ptr %86, align 8, !tbaa !23
  %87 = load ptr, ptr %69, align 8, !tbaa !17
  %88 = getelementptr inbounds %struct.gp, ptr %87, i64 0, i32 3
  store i32 0, ptr %88, align 8, !tbaa !61
  br label %89

89:                                               ; preds = %84, %68
  %90 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !25
  %91 = load ptr, ptr @PL_savestack, align 8, !tbaa !9
  %92 = sext i32 %90 to i64
  %93 = getelementptr inbounds %union.any, ptr %91, i64 %92
  %94 = getelementptr inbounds %union.any, ptr %93, i64 1
  store ptr %0, ptr %93, align 8, !tbaa !17
  %95 = getelementptr inbounds %union.any, ptr %93, i64 2
  store ptr %65, ptr %94, align 8, !tbaa !17
  %96 = load ptr, ptr %65, align 8, !tbaa !9
  %97 = icmp eq ptr %96, null
  br i1 %97, label %102, label %98

98:                                               ; preds = %89
  %99 = getelementptr inbounds %struct.sv, ptr %96, i64 0, i32 1
  %100 = load i32, ptr %99, align 8, !tbaa !13
  %101 = add i32 %100, 1
  store i32 %101, ptr %99, align 8, !tbaa !13
  br label %102

102:                                              ; preds = %89, %98
  %103 = getelementptr inbounds %union.any, ptr %93, i64 3
  store ptr %96, ptr %95, align 8, !tbaa !17
  store i64 51, ptr %103, align 8, !tbaa !17
  %104 = add nsw i32 %90, 4
  store i32 %104, ptr @PL_savestack_ix, align 4, !tbaa !25
  %105 = add nsw i32 %90, 8
  %106 = load i32, ptr @PL_savestack_max, align 4, !tbaa !25
  %107 = icmp sgt i32 %105, %106
  br i1 %107, label %108, label %110

108:                                              ; preds = %102
  tail call void @Perl_savestack_grow() #17
  br label %110

109:                                              ; preds = %66
  tail call void @Perl_save_generic_svref(ptr noundef %65) #17
  br label %112

110:                                              ; preds = %108, %102
  %111 = load ptr, ptr %65, align 8, !tbaa !9
  br label %115

112:                                              ; preds = %109, %60
  %113 = load ptr, ptr %65, align 8, !tbaa !9
  %114 = icmp eq i32 %11, 13
  br i1 %114, label %115, label %310

115:                                              ; preds = %110, %112
  %116 = phi ptr [ %111, %110 ], [ %113, %112 ]
  %117 = icmp eq ptr %116, %5
  br i1 %117, label %118, label %124

118:                                              ; preds = %115
  %119 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %120 = load ptr, ptr %119, align 8, !tbaa !17
  %121 = getelementptr inbounds %struct.gp, ptr %120, i64 0, i32 3
  %122 = load i32, ptr %121, align 8, !tbaa !61
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %310, label %124

124:                                              ; preds = %118, %115
  %125 = icmp eq ptr %116, null
  br i1 %125, label %269, label %126

126:                                              ; preds = %124
  %127 = getelementptr inbounds %struct.gv, ptr %0, i64 0, i32 3
  %128 = load ptr, ptr %127, align 8, !tbaa !17
  %129 = getelementptr inbounds %struct.gp, ptr %128, i64 0, i32 3
  %130 = load i32, ptr %129, align 8, !tbaa !61
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %223

132:                                              ; preds = %126
  %133 = load ptr, ptr %116, align 8, !tbaa !119
  %134 = getelementptr inbounds %struct.xpvcv, ptr %133, i64 0, i32 6
  %135 = load ptr, ptr %134, align 8, !tbaa !17
  %136 = icmp eq ptr %135, null
  br i1 %136, label %223, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %struct.xpvcv, ptr %133, i64 0, i32 12
  %139 = load i32, ptr %138, align 4, !tbaa !121
  %140 = and i32 %139, 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %137
  %143 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 19) #17
  br i1 %143, label %144, label %223

144:                                              ; preds = %142, %137
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #17
  %145 = load ptr, ptr %5, align 8, !tbaa !119
  %146 = getelementptr inbounds %struct.xpvcv, ptr %145, i64 0, i32 12
  %147 = load i32, ptr %146, align 4, !tbaa !121
  %148 = and i32 %147, 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %144
  %151 = tail call ptr @Perl_cv_const_sv(ptr noundef nonnull %5) #17
  br label %152

152:                                              ; preds = %144, %150
  %153 = phi ptr [ %151, %150 ], [ null, %144 ]
  store ptr %153, ptr %3, align 8, !tbaa !9
  %154 = load ptr, ptr %0, align 8, !tbaa !62
  %155 = getelementptr inbounds %struct.xpvgv, ptr %154, i64 0, i32 5
  %156 = load ptr, ptr %155, align 8, !tbaa !17
  %157 = getelementptr inbounds %struct.hv, ptr %156, i64 0, i32 2
  %158 = load i32, ptr %157, align 4, !tbaa !64
  %159 = and i32 %158, 33554432
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %177, label %161

161:                                              ; preds = %152
  %162 = getelementptr inbounds %struct.hv, ptr %156, i64 0, i32 3
  %163 = load ptr, ptr %162, align 8, !tbaa !17
  %164 = load ptr, ptr %156, align 8, !tbaa !66
  %165 = getelementptr inbounds %struct.xpvhv, ptr %164, i64 0, i32 3
  %166 = load i64, ptr %165, align 8, !tbaa !48
  %167 = add i64 %166, 1
  %168 = getelementptr inbounds ptr, ptr %163, i64 %167
  %169 = load ptr, ptr %168, align 8, !tbaa !17
  %170 = icmp eq ptr %169, null
  br i1 %170, label %177, label %171

171:                                              ; preds = %161
  %172 = getelementptr inbounds %struct.xpvhv_aux, ptr %168, i64 0, i32 4
  %173 = load i32, ptr %172, align 4, !tbaa !67
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %177, label %175

175:                                              ; preds = %171
  %176 = load ptr, ptr %169, align 8, !tbaa !9
  br label %177

177:                                              ; preds = %171, %152, %161, %175
  %178 = phi ptr [ %176, %175 ], [ null, %161 ], [ null, %152 ], [ %169, %171 ]
  %179 = load ptr, ptr %127, align 8, !tbaa !17
  %180 = getelementptr inbounds %struct.gp, ptr %179, i64 0, i32 8
  %181 = load ptr, ptr %180, align 8, !tbaa !118
  %182 = icmp eq ptr %181, null
  %183 = select i1 %182, ptr %0, ptr %181
  %184 = load ptr, ptr %183, align 8, !tbaa !62
  %185 = getelementptr inbounds %struct.xpvgv, ptr %184, i64 0, i32 4
  %186 = load ptr, ptr %185, align 8, !tbaa !17
  %187 = tail call ptr (ptr, ...) @Perl_newSVpvf(ptr noundef nonnull @.str.13, ptr noundef %178, ptr noundef %186)
  %188 = icmp eq ptr %187, null
  br i1 %188, label %216, label %189

189:                                              ; preds = %177
  %190 = getelementptr inbounds %struct.sv, ptr %187, i64 0, i32 2
  %191 = load i32, ptr %190, align 4, !tbaa !16
  %192 = and i32 %191, 134283264
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %202, label %194

194:                                              ; preds = %189
  %195 = icmp eq ptr %187, @PL_sv_undef
  %196 = icmp eq ptr %187, @PL_sv_yes
  %197 = or i1 %195, %196
  %198 = icmp eq ptr %187, @PL_sv_no
  %199 = or i1 %198, %197
  %200 = icmp eq ptr %187, @PL_sv_placeholder
  %201 = or i1 %200, %199
  br i1 %201, label %216, label %202

202:                                              ; preds = %194, %189
  %203 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %204 = add nsw i64 %203, 1
  store i64 %204, ptr @PL_tmps_ix, align 8, !tbaa !60
  %205 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %206 = icmp slt i64 %204, %205
  br i1 %206, label %210, label %207

207:                                              ; preds = %202
  %208 = tail call i64 @Perl_tmps_grow_p(i64 noundef %204) #17
  %209 = load i32, ptr %190, align 4, !tbaa !16
  br label %210

210:                                              ; preds = %207, %202
  %211 = phi i32 [ %209, %207 ], [ %191, %202 ]
  %212 = phi i64 [ %208, %207 ], [ %204, %202 ]
  %213 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %214 = getelementptr inbounds ptr, ptr %213, i64 %212
  store ptr %187, ptr %214, align 8, !tbaa !9
  %215 = or i32 %211, 524288
  store i32 %215, ptr %190, align 4, !tbaa !16
  br label %216

216:                                              ; preds = %177, %194, %210
  %217 = load ptr, ptr %5, align 8, !tbaa !119
  %218 = getelementptr inbounds %struct.xpvcv, ptr %217, i64 0, i32 12
  %219 = load i32, ptr %218, align 4, !tbaa !121
  %220 = and i32 %219, 4
  %221 = icmp eq i32 %220, 0
  %222 = select i1 %221, ptr null, ptr %3
  call void @Perl_report_redefined_cv(ptr noundef %187, ptr noundef nonnull %116, ptr noundef %222) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #17
  br label %223

223:                                              ; preds = %132, %216, %142, %126
  br i1 %13, label %269, label %224

224:                                              ; preds = %223
  %225 = load i32, ptr %9, align 4, !tbaa !16
  %226 = and i32 %225, 1024
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %264, label %228

228:                                              ; preds = %224
  %229 = and i32 %225, 255
  %230 = icmp eq i32 %229, 13
  %231 = load ptr, ptr %5, align 8, !tbaa !26
  br i1 %230, label %232, label %244

232:                                              ; preds = %228
  %233 = getelementptr inbounds %struct.xpvcv, ptr %231, i64 0, i32 12
  %234 = load i32, ptr %233, align 4, !tbaa !121
  %235 = and i32 %234, 8192
  %236 = icmp eq i32 %235, 0
  %237 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 3
  %238 = load ptr, ptr %237, align 8, !tbaa !17
  br i1 %236, label %247, label %239

239:                                              ; preds = %232
  %240 = getelementptr inbounds %struct.xpv, ptr %231, i64 0, i32 2
  %241 = load i64, ptr %240, align 8, !tbaa !57
  %242 = getelementptr inbounds i8, ptr %238, i64 %241
  %243 = getelementptr inbounds i8, ptr %242, i64 1
  br label %247

244:                                              ; preds = %228
  %245 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 3
  %246 = load ptr, ptr %245, align 8, !tbaa !17
  br label %260

247:                                              ; preds = %232, %239
  %248 = phi ptr [ %243, %239 ], [ %238, %232 ]
  %249 = getelementptr inbounds %struct.xpvcv, ptr %231, i64 0, i32 12
  %250 = load i32, ptr %249, align 4, !tbaa !121
  %251 = and i32 %250, 8192
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %260, label %253

253:                                              ; preds = %247
  %254 = getelementptr inbounds %struct.xpv, ptr %231, i64 0, i32 3
  %255 = load i64, ptr %254, align 8, !tbaa !17
  %256 = getelementptr inbounds %struct.xpv, ptr %231, i64 0, i32 2
  %257 = load i64, ptr %256, align 8, !tbaa !57
  %258 = add i64 %255, -2
  %259 = sub i64 %258, %257
  br label %264

260:                                              ; preds = %244, %247
  %261 = phi ptr [ %248, %247 ], [ %246, %244 ]
  %262 = getelementptr inbounds %struct.xpv, ptr %231, i64 0, i32 2
  %263 = load i64, ptr %262, align 8, !tbaa !57
  br label %264

264:                                              ; preds = %224, %260, %253
  %265 = phi ptr [ %248, %253 ], [ %261, %260 ], [ null, %224 ]
  %266 = phi i64 [ %259, %253 ], [ %263, %260 ], [ 0, %224 ]
  %267 = and i32 %225, 536870912
  %268 = select i1 %227, i32 0, i32 %267
  call void @Perl_cv_ckproto_len_flags(ptr noundef nonnull %116, ptr noundef nonnull %0, ptr noundef %265, i64 noundef %266, i32 noundef %268) #17
  br label %269

269:                                              ; preds = %223, %264, %124
  %270 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %271 = load ptr, ptr %270, align 8, !tbaa !17
  %272 = getelementptr inbounds %struct.gp, ptr %271, i64 0, i32 3
  store i32 0, ptr %272, align 8, !tbaa !61
  %273 = load ptr, ptr %0, align 8, !tbaa !26
  %274 = getelementptr inbounds %struct.xpvgv, ptr %273, i64 0, i32 2
  %275 = load i64, ptr %274, align 8, !tbaa !69
  %276 = or i64 %275, 4
  store i64 %276, ptr %274, align 8, !tbaa !69
  %277 = getelementptr inbounds %struct.xpvgv, ptr %273, i64 0, i32 5
  %278 = load ptr, ptr %277, align 8, !tbaa !17
  %279 = icmp eq ptr %278, null
  br i1 %279, label %310, label %280

280:                                              ; preds = %269
  %281 = load ptr, ptr %270, align 8, !tbaa !17
  %282 = getelementptr inbounds %struct.gp, ptr %281, i64 0, i32 4
  %283 = load i32, ptr %282, align 4, !tbaa !123
  %284 = icmp ugt i32 %283, 1
  br i1 %13, label %285, label %305

285:                                              ; preds = %280
  br i1 %284, label %286, label %309

286:                                              ; preds = %285
  %287 = add i32 %283, -1
  store i32 %287, ptr %282, align 4, !tbaa !123
  %288 = load ptr, ptr %270, align 8, !tbaa !17
  %289 = getelementptr inbounds %struct.gp, ptr %288, i64 0, i32 4
  %290 = load i32, ptr %289, align 4, !tbaa !123
  %291 = icmp ugt i32 %290, 1
  br i1 %291, label %292, label %295

292:                                              ; preds = %286
  %293 = load i32, ptr @PL_sub_generation, align 4, !tbaa !25
  %294 = add i32 %293, 1
  store i32 %294, ptr @PL_sub_generation, align 4, !tbaa !25
  br label %300

295:                                              ; preds = %286
  %296 = load ptr, ptr %277, align 8, !tbaa !17
  call void @Perl_mro_method_changed_in(ptr noundef %296) #17
  %297 = load ptr, ptr %270, align 8, !tbaa !17
  %298 = getelementptr inbounds %struct.gp, ptr %297, i64 0, i32 4
  %299 = load i32, ptr %298, align 4, !tbaa !123
  br label %300

300:                                              ; preds = %295, %292
  %301 = phi i32 [ %299, %295 ], [ %290, %292 ]
  %302 = phi ptr [ %297, %295 ], [ %288, %292 ]
  %303 = getelementptr inbounds %struct.gp, ptr %302, i64 0, i32 4
  %304 = add i32 %301, 1
  store i32 %304, ptr %303, align 4, !tbaa !123
  br label %310

305:                                              ; preds = %280
  br i1 %284, label %306, label %309

306:                                              ; preds = %305
  %307 = load i32, ptr @PL_sub_generation, align 4, !tbaa !25
  %308 = add i32 %307, 1
  store i32 %308, ptr @PL_sub_generation, align 4, !tbaa !25
  br label %310

309:                                              ; preds = %285, %305
  call void @Perl_mro_method_changed_in(ptr noundef nonnull %278) #17
  br label %310

310:                                              ; preds = %269, %306, %309, %300, %118, %112
  %311 = phi ptr [ %116, %269 ], [ %116, %306 ], [ %116, %309 ], [ %116, %300 ], [ %5, %118 ], [ %113, %112 ]
  %312 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 1
  %313 = load i32, ptr %312, align 8, !tbaa !13
  %314 = add i32 %313, 1
  store i32 %314, ptr %312, align 8, !tbaa !13
  store ptr %5, ptr %65, align 8, !tbaa !9
  br i1 %62, label %330, label %315

315:                                              ; preds = %310
  %316 = load ptr, ptr %0, align 8, !tbaa !26
  %317 = getelementptr inbounds %struct.xpvgv, ptr %316, i64 0, i32 2
  %318 = load i64, ptr %317, align 8, !tbaa !69
  %319 = and i64 %318, %64
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %330

321:                                              ; preds = %315
  %322 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %323 = getelementptr inbounds %struct.cop, ptr %322, i64 0, i32 8
  %324 = load ptr, ptr %323, align 8, !tbaa !124
  %325 = getelementptr inbounds %struct.xpvgv, ptr %316, i64 0, i32 5
  %326 = load ptr, ptr %325, align 8, !tbaa !17
  %327 = icmp eq ptr %324, %326
  br i1 %327, label %330, label %328

328:                                              ; preds = %321
  %329 = or i64 %318, %64
  store i64 %329, ptr %317, align 8, !tbaa !69
  br label %330

330:                                              ; preds = %328, %321, %315, %310
  br i1 %63, label %331, label %353

331:                                              ; preds = %330
  br i1 %13, label %332, label %334

332:                                              ; preds = %331
  call void @Perl_save_aliased_sv(ptr noundef nonnull %0) #17
  %333 = load i32, ptr %312, align 8, !tbaa !13
  br label %334

334:                                              ; preds = %332, %331
  %335 = phi i32 [ %333, %332 ], [ %314, %331 ]
  %336 = icmp ult i32 %335, 3
  br i1 %336, label %337, label %347

337:                                              ; preds = %334
  %338 = load i32, ptr %9, align 4, !tbaa !16
  %339 = and i32 %338, 8388608
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %341, label %347

341:                                              ; preds = %337
  %342 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %343 = load ptr, ptr %342, align 8, !tbaa !17
  %344 = getelementptr inbounds %struct.gp, ptr %343, i64 0, i32 9
  %345 = load i32, ptr %344, align 8
  %346 = and i32 %345, 2147483647
  store i32 %346, ptr %344, align 8
  br label %353

347:                                              ; preds = %337, %334
  %348 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %349 = load ptr, ptr %348, align 8, !tbaa !17
  %350 = getelementptr inbounds %struct.gp, ptr %349, i64 0, i32 9
  %351 = load i32, ptr %350, align 8
  %352 = or i32 %351, -2147483648
  store i32 %352, ptr %350, align 8
  br label %353

353:                                              ; preds = %341, %347, %330
  switch i8 %36, label %513 [
    i8 12, label %354
    i8 11, label %400
    i8 15, label %511
  ]

354:                                              ; preds = %353
  %355 = load ptr, ptr %0, align 8, !tbaa !9
  %356 = getelementptr inbounds %struct.xpvgv, ptr %355, i64 0, i32 4
  %357 = load ptr, ptr %356, align 8, !tbaa !17
  %358 = getelementptr inbounds %struct.hek, ptr %357, i64 0, i32 2
  %359 = getelementptr inbounds %struct.hek, ptr %357, i64 0, i32 1
  %360 = load i32, ptr %359, align 4, !tbaa !84
  %361 = sext i32 %360 to i64
  %362 = icmp ugt i32 %360, 1
  br i1 %362, label %363, label %373

363:                                              ; preds = %354
  %364 = add nsw i64 %361, -2
  %365 = getelementptr inbounds i8, ptr %358, i64 %364
  %366 = load i8, ptr %365, align 1, !tbaa !17
  %367 = icmp eq i8 %366, 58
  br i1 %367, label %368, label %513

368:                                              ; preds = %363
  %369 = add nsw i64 %361, -1
  %370 = getelementptr inbounds i8, ptr %358, i64 %369
  %371 = load i8, ptr %370, align 1, !tbaa !17
  %372 = icmp eq i8 %371, 58
  br i1 %372, label %378, label %513

373:                                              ; preds = %354
  %374 = icmp eq i32 %360, 1
  br i1 %374, label %375, label %513

375:                                              ; preds = %373
  %376 = load i8, ptr %358, align 1, !tbaa !17
  %377 = icmp eq i8 %376, 58
  br i1 %377, label %378, label %513

378:                                              ; preds = %375, %368
  %379 = icmp eq ptr %311, null
  br i1 %379, label %399, label %380

380:                                              ; preds = %378
  %381 = getelementptr inbounds %struct.sv, ptr %311, i64 0, i32 2
  %382 = load i32, ptr %381, align 4, !tbaa !16
  %383 = and i32 %382, 33554432
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %513, label %385

385:                                              ; preds = %380
  %386 = getelementptr inbounds %struct.sv, ptr %311, i64 0, i32 3
  %387 = load ptr, ptr %386, align 8, !tbaa !17
  %388 = load ptr, ptr %311, align 8, !tbaa !26
  %389 = getelementptr inbounds %struct.xpvhv, ptr %388, i64 0, i32 3
  %390 = load i64, ptr %389, align 8, !tbaa !48
  %391 = add i64 %390, 1
  %392 = getelementptr inbounds ptr, ptr %387, i64 %391
  %393 = load ptr, ptr %392, align 8, !tbaa !17
  %394 = icmp eq ptr %393, null
  br i1 %394, label %513, label %395

395:                                              ; preds = %385
  %396 = getelementptr inbounds %struct.xpvhv_aux, ptr %392, i64 0, i32 4
  %397 = load i32, ptr %396, align 4, !tbaa !67
  %398 = icmp eq i32 %397, -1
  br i1 %398, label %513, label %399

399:                                              ; preds = %395, %378
  call void @Perl_mro_package_moved(ptr noundef nonnull %5, ptr noundef %311, ptr noundef nonnull %0, i32 noundef 0) #17
  br label %513

400:                                              ; preds = %353
  %401 = icmp eq ptr %5, %311
  br i1 %401, label %513, label %402

402:                                              ; preds = %400
  %403 = load ptr, ptr %0, align 8, !tbaa !9
  %404 = getelementptr inbounds %struct.xpvgv, ptr %403, i64 0, i32 4
  %405 = load ptr, ptr %404, align 8, !tbaa !17
  %406 = getelementptr inbounds %struct.hek, ptr %405, i64 0, i32 2
  %407 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %406, ptr noundef nonnull dereferenceable(4) @.str.14) #18
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %513

409:                                              ; preds = %402
  %410 = getelementptr inbounds %struct.xpvgv, ptr %403, i64 0, i32 5
  %411 = load ptr, ptr %410, align 8, !tbaa !17
  %412 = icmp eq ptr %411, null
  br i1 %412, label %513, label %413

413:                                              ; preds = %409
  %414 = getelementptr inbounds %struct.hv, ptr %411, i64 0, i32 2
  %415 = load i32, ptr %414, align 4, !tbaa !64
  %416 = and i32 %415, 33554432
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %513, label %418

418:                                              ; preds = %413
  %419 = getelementptr inbounds %struct.hv, ptr %411, i64 0, i32 3
  %420 = load ptr, ptr %419, align 8, !tbaa !17
  %421 = load ptr, ptr %411, align 8, !tbaa !66
  %422 = getelementptr inbounds %struct.xpvhv, ptr %421, i64 0, i32 3
  %423 = load i64, ptr %422, align 8, !tbaa !48
  %424 = add i64 %423, 1
  %425 = getelementptr inbounds ptr, ptr %420, i64 %424
  %426 = load ptr, ptr %425, align 8, !tbaa !17
  %427 = icmp eq ptr %426, null
  br i1 %427, label %513, label %428

428:                                              ; preds = %418
  %429 = getelementptr inbounds %struct.xpvhv_aux, ptr %425, i64 0, i32 4
  %430 = load i32, ptr %429, align 4, !tbaa !67
  %431 = icmp eq i32 %430, -1
  br i1 %431, label %513, label %432

432:                                              ; preds = %428
  %433 = icmp eq ptr %311, null
  br i1 %433, label %441, label %434

434:                                              ; preds = %432
  %435 = getelementptr inbounds %struct.sv, ptr %311, i64 0, i32 2
  %436 = load i32, ptr %435, align 4, !tbaa !16
  %437 = and i32 %436, 4194304
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %441, label %439

439:                                              ; preds = %434
  %440 = call ptr @Perl_mg_find(ptr noundef nonnull %311, i32 noundef 73) #17
  br label %441

441:                                              ; preds = %432, %434, %439
  %442 = phi ptr [ %440, %439 ], [ null, %434 ], [ null, %432 ]
  %443 = load i32, ptr %9, align 4, !tbaa !16
  %444 = and i32 %443, 4194304
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %500, label %446

446:                                              ; preds = %441
  %447 = call ptr @Perl_mg_find(ptr noundef nonnull %5, i32 noundef 73) #17
  %448 = icmp eq ptr %447, null
  br i1 %448, label %500, label %449

449:                                              ; preds = %446
  %450 = getelementptr inbounds %struct.magic, ptr %447, i64 0, i32 6
  %451 = load ptr, ptr %450, align 8, !tbaa !113
  %452 = getelementptr inbounds %struct.sv, ptr %451, i64 0, i32 2
  %453 = load i32, ptr %452, align 4, !tbaa !16
  %454 = and i32 %453, 255
  %455 = icmp eq i32 %454, 11
  br i1 %455, label %459, label %456

456:                                              ; preds = %449
  %457 = call ptr @Perl_newSV_type(i32 noundef 11)
  %458 = load ptr, ptr %450, align 8, !tbaa !113
  call void @Perl_av_push(ptr noundef %457, ptr noundef %458) #17
  store ptr %457, ptr %450, align 8, !tbaa !113
  br label %459

459:                                              ; preds = %456, %449
  %460 = phi ptr [ %457, %456 ], [ %451, %449 ]
  %461 = icmp eq ptr %442, null
  br i1 %461, label %496, label %462

462:                                              ; preds = %459
  %463 = getelementptr inbounds %struct.magic, ptr %442, i64 0, i32 6
  %464 = load ptr, ptr %463, align 8, !tbaa !113
  %465 = getelementptr inbounds %struct.sv, ptr %464, i64 0, i32 2
  %466 = load i32, ptr %465, align 4, !tbaa !16
  %467 = and i32 %466, 255
  %468 = icmp eq i32 %467, 11
  br i1 %468, label %469, label %492

469:                                              ; preds = %462
  %470 = load ptr, ptr %464, align 8, !tbaa !105
  %471 = getelementptr inbounds %struct.xpvav, ptr %470, i64 0, i32 2
  %472 = load i64, ptr %471, align 8, !tbaa !107
  %473 = trunc i64 %472 to i32
  %474 = add i32 %473, 1
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %508, label %476

476:                                              ; preds = %469
  %477 = getelementptr inbounds %struct.av, ptr %464, i64 0, i32 3
  %478 = load ptr, ptr %477, align 8, !tbaa !17
  br label %479

479:                                              ; preds = %476, %479
  %480 = phi i32 [ %482, %479 ], [ %474, %476 ]
  %481 = phi ptr [ %489, %479 ], [ %478, %476 ]
  %482 = add nsw i32 %480, -1
  %483 = load ptr, ptr %450, align 8, !tbaa !113
  %484 = getelementptr inbounds ptr, ptr %481, i64 1
  %485 = load ptr, ptr %481, align 8, !tbaa !9
  %486 = getelementptr inbounds %struct.sv, ptr %485, i64 0, i32 1
  %487 = load i32, ptr %486, align 8, !tbaa !13
  %488 = add i32 %487, 1
  store i32 %488, ptr %486, align 8, !tbaa !13
  %489 = getelementptr inbounds ptr, ptr %481, i64 2
  %490 = load ptr, ptr %484, align 8, !tbaa !9
  call void @Perl_av_push(ptr noundef %483, ptr noundef %490) #17
  %491 = icmp eq i32 %482, 0
  br i1 %491, label %508, label %479, !llvm.loop !125

492:                                              ; preds = %462
  %493 = getelementptr inbounds %struct.sv, ptr %464, i64 0, i32 1
  %494 = load i32, ptr %493, align 8, !tbaa !13
  %495 = add i32 %494, 1
  store i32 %495, ptr %493, align 8, !tbaa !13
  call void @Perl_av_push(ptr noundef %460, ptr noundef nonnull %464) #17
  br label %508

496:                                              ; preds = %459
  %497 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  %498 = load i32, ptr %497, align 8, !tbaa !13
  %499 = add i32 %498, 1
  store i32 %499, ptr %497, align 8, !tbaa !13
  call void @Perl_av_push(ptr noundef %460, ptr noundef nonnull %0) #17
  br label %508

500:                                              ; preds = %446, %441
  %501 = icmp eq ptr %442, null
  br i1 %501, label %505, label %502

502:                                              ; preds = %500
  %503 = getelementptr inbounds %struct.magic, ptr %442, i64 0, i32 6
  %504 = load ptr, ptr %503, align 8, !tbaa !113
  br label %505

505:                                              ; preds = %500, %502
  %506 = phi ptr [ %504, %502 ], [ %0, %500 ]
  call void @Perl_sv_magic(ptr noundef nonnull %5, ptr noundef %506, i32 noundef 73, ptr noundef null, i32 noundef 0)
  %507 = call ptr @Perl_mg_find(ptr noundef nonnull %5, i32 noundef 73) #17
  br label %508

508:                                              ; preds = %479, %469, %496, %492, %505
  %509 = phi ptr [ %447, %492 ], [ %447, %496 ], [ %507, %505 ], [ %447, %469 ], [ %447, %479 ]
  %510 = call i32 @Perl_magic_clearisa(ptr noundef null, ptr noundef %509) #17
  br label %513

511:                                              ; preds = %353
  %512 = load ptr, ptr @PL_stashcache, align 8, !tbaa !9
  call void @Perl_hv_clear(ptr noundef %512) #17
  br label %513

513:                                              ; preds = %363, %368, %400, %402, %409, %428, %418, %413, %353, %373, %375, %399, %395, %385, %380, %511, %508
  %514 = icmp eq ptr %311, null
  %515 = select i1 %13, i1 true, i1 %514
  br i1 %515, label %523, label %516

516:                                              ; preds = %513
  %517 = getelementptr inbounds %struct.sv, ptr %311, i64 0, i32 1
  %518 = load i32, ptr %517, align 8, !tbaa !13
  %519 = icmp ugt i32 %518, 1
  br i1 %519, label %520, label %522

520:                                              ; preds = %516
  %521 = add i32 %518, -1
  store i32 %521, ptr %517, align 8, !tbaa !13
  br label %523

522:                                              ; preds = %516
  call void @Perl_sv_free2(ptr noundef nonnull %311, i32 noundef %518)
  br label %523

523:                                              ; preds = %522, %520, %513
  %524 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %525 = load i32, ptr %524, align 4, !tbaa !16
  %526 = and i32 %525, 14680064
  %527 = icmp ne i32 %526, 0
  %528 = and i32 %525, 255
  %529 = icmp ugt i32 %528, 6
  %530 = and i1 %527, %529
  br i1 %530, label %531, label %551

531:                                              ; preds = %523
  %532 = load ptr, ptr %1, align 8, !tbaa !26
  %533 = getelementptr inbounds %struct.xpvmg, ptr %532, i64 0, i32 1
  %534 = load ptr, ptr %533, align 8, !tbaa !17
  %535 = icmp eq ptr %534, null
  br i1 %535, label %551, label %536

536:                                              ; preds = %531
  %537 = call ptr @Perl_mg_find(ptr noundef nonnull %1, i32 noundef 116) #17
  %538 = icmp eq ptr %537, null
  br i1 %538, label %551, label %539

539:                                              ; preds = %536
  %540 = getelementptr inbounds %struct.magic, ptr %537, i64 0, i32 5
  %541 = load i64, ptr %540, align 8, !tbaa !76
  %542 = and i64 %541, 1
  %543 = icmp eq i64 %542, 0
  br i1 %543, label %551, label %544

544:                                              ; preds = %539
  %545 = load i8, ptr @PL_tainting, align 1, !range !74
  %546 = icmp eq i8 %545, 0
  %547 = load i8, ptr @PL_tainted, align 1, !range !74
  %548 = icmp eq i8 %547, 0
  %549 = select i1 %546, i1 true, i1 %548
  br i1 %549, label %551, label %550

550:                                              ; preds = %544
  call void @Perl_sv_magic(ptr noundef nonnull %0, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0)
  br label %551

551:                                              ; preds = %536, %539, %531, %550, %544, %523
  ret void
}

declare void @Perl_savestack_grow() local_unnamed_addr #3

declare void @Perl_save_generic_svref(ptr noundef) local_unnamed_addr #3

declare ptr @Perl_cv_const_sv(ptr noundef) local_unnamed_addr #3

declare void @Perl_report_redefined_cv(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSVpvf(ptr noundef %0, ...) local_unnamed_addr #1 {
  %2 = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %2) #17
  call void @llvm.va_start(ptr nonnull %2)
  %3 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %34

5:                                                ; preds = %1
  %6 = call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %7 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %7, ptr %6, align 8, !tbaa !26
  %8 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 1
  store i32 170, ptr %8, align 8, !tbaa !13
  %9 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  store i32 0, ptr %9, align 4, !tbaa !16
  store ptr %6, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %10 = getelementptr inbounds %struct.sv, ptr %6, i64 1
  store ptr %10, ptr @PL_sv_root, align 8, !tbaa !9
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi ptr [ %10, %5 ], [ %29, %11 ]
  %13 = phi i64 [ 1, %5 ], [ %28, %11 ]
  %14 = getelementptr inbounds %struct.sv, ptr %12, i64 1
  store ptr %14, ptr %12, align 8, !tbaa !26
  %15 = getelementptr inbounds %struct.sv, ptr %6, i64 %13, i32 2
  store i32 255, ptr %15, align 4, !tbaa !16
  %16 = add nuw nsw i64 %13, 1
  %17 = getelementptr inbounds %struct.sv, ptr %6, i64 %16
  %18 = getelementptr inbounds %struct.sv, ptr %17, i64 1
  store ptr %18, ptr %17, align 8, !tbaa !26
  %19 = getelementptr inbounds %struct.sv, ptr %6, i64 %16, i32 2
  store i32 255, ptr %19, align 4, !tbaa !16
  %20 = add nuw nsw i64 %13, 2
  %21 = getelementptr inbounds %struct.sv, ptr %6, i64 %20
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 1
  store ptr %22, ptr %21, align 8, !tbaa !26
  %23 = getelementptr inbounds %struct.sv, ptr %6, i64 %20, i32 2
  store i32 255, ptr %23, align 4, !tbaa !16
  %24 = add nuw nsw i64 %13, 3
  %25 = getelementptr inbounds %struct.sv, ptr %6, i64 %24
  %26 = getelementptr inbounds %struct.sv, ptr %25, i64 1
  store ptr %26, ptr %25, align 8, !tbaa !26
  %27 = getelementptr inbounds %struct.sv, ptr %6, i64 %24, i32 2
  store i32 255, ptr %27, align 4, !tbaa !16
  %28 = add nuw nsw i64 %13, 4
  %29 = getelementptr inbounds %struct.sv, ptr %6, i64 %28
  %30 = icmp eq i64 %28, 169
  br i1 %30, label %31, label %11, !llvm.loop !59

31:                                               ; preds = %11
  store ptr null, ptr %29, align 8, !tbaa !26
  %32 = getelementptr inbounds %struct.sv, ptr %6, i64 169, i32 2
  store i32 255, ptr %32, align 4, !tbaa !16
  %33 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %34

34:                                               ; preds = %1, %31
  %35 = phi ptr [ %33, %31 ], [ %3, %1 ]
  %36 = load ptr, ptr %35, align 8, !tbaa !26
  store ptr %36, ptr @PL_sv_root, align 8, !tbaa !9
  %37 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %38 = add nsw i64 %37, 1
  store i64 %38, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %35, align 8, !tbaa !26
  %39 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 1
  store i32 1, ptr %39, align 8, !tbaa !13
  %40 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 2
  store i32 0, ptr %40, align 4, !tbaa !16
  %41 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #18
  call void @Perl_sv_setpvn(ptr noundef nonnull %35, ptr noundef nonnull @.str.10, i64 noundef 0)
  call void @Perl_sv_vcatpvfn_flags(ptr noundef nonnull %35, ptr noundef %0, i64 noundef %41, ptr noundef nonnull %2, ptr noundef null, i32 noundef 0, ptr poison, i32 noundef 0)
  call void @llvm.va_end(ptr nonnull %2)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %2) #17
  ret ptr %35
}

declare void @Perl_cv_ckproto_len_flags(ptr noundef, ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #3

declare void @Perl_mro_method_changed_in(ptr noundef) local_unnamed_addr #3

declare void @Perl_save_aliased_sv(ptr noundef) local_unnamed_addr #3

declare void @Perl_mro_package_moved(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSV_type(i32 noundef %0) local_unnamed_addr #1 {
  %2 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %3 = icmp eq ptr %2, null
  br i1 %3, label %4, label %33

4:                                                ; preds = %1
  %5 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %6 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %6, ptr %5, align 8, !tbaa !26
  %7 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 1
  store i32 170, ptr %7, align 8, !tbaa !13
  %8 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 2
  store i32 0, ptr %8, align 4, !tbaa !16
  store ptr %5, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %9 = getelementptr inbounds %struct.sv, ptr %5, i64 1
  store ptr %9, ptr @PL_sv_root, align 8, !tbaa !9
  br label %10

10:                                               ; preds = %10, %4
  %11 = phi ptr [ %9, %4 ], [ %28, %10 ]
  %12 = phi i64 [ 1, %4 ], [ %27, %10 ]
  %13 = getelementptr inbounds %struct.sv, ptr %11, i64 1
  store ptr %13, ptr %11, align 8, !tbaa !26
  %14 = getelementptr inbounds %struct.sv, ptr %5, i64 %12, i32 2
  store i32 255, ptr %14, align 4, !tbaa !16
  %15 = add nuw nsw i64 %12, 1
  %16 = getelementptr inbounds %struct.sv, ptr %5, i64 %15
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 1
  store ptr %17, ptr %16, align 8, !tbaa !26
  %18 = getelementptr inbounds %struct.sv, ptr %5, i64 %15, i32 2
  store i32 255, ptr %18, align 4, !tbaa !16
  %19 = add nuw nsw i64 %12, 2
  %20 = getelementptr inbounds %struct.sv, ptr %5, i64 %19
  %21 = getelementptr inbounds %struct.sv, ptr %20, i64 1
  store ptr %21, ptr %20, align 8, !tbaa !26
  %22 = getelementptr inbounds %struct.sv, ptr %5, i64 %19, i32 2
  store i32 255, ptr %22, align 4, !tbaa !16
  %23 = add nuw nsw i64 %12, 3
  %24 = getelementptr inbounds %struct.sv, ptr %5, i64 %23
  %25 = getelementptr inbounds %struct.sv, ptr %24, i64 1
  store ptr %25, ptr %24, align 8, !tbaa !26
  %26 = getelementptr inbounds %struct.sv, ptr %5, i64 %23, i32 2
  store i32 255, ptr %26, align 4, !tbaa !16
  %27 = add nuw nsw i64 %12, 4
  %28 = getelementptr inbounds %struct.sv, ptr %5, i64 %27
  %29 = icmp eq i64 %27, 169
  br i1 %29, label %30, label %10, !llvm.loop !59

30:                                               ; preds = %10
  store ptr null, ptr %28, align 8, !tbaa !26
  %31 = getelementptr inbounds %struct.sv, ptr %5, i64 169, i32 2
  store i32 255, ptr %31, align 4, !tbaa !16
  %32 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %33

33:                                               ; preds = %1, %30
  %34 = phi ptr [ %32, %30 ], [ %2, %1 ]
  %35 = load ptr, ptr %34, align 8, !tbaa !26
  store ptr %35, ptr @PL_sv_root, align 8, !tbaa !9
  %36 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %37 = add nsw i64 %36, 1
  store i64 %37, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %34, align 8, !tbaa !26
  %38 = getelementptr inbounds %struct.sv, ptr %34, i64 0, i32 1
  store i32 1, ptr %38, align 8, !tbaa !13
  %39 = getelementptr inbounds %struct.sv, ptr %34, i64 0, i32 2
  store i32 0, ptr %39, align 4, !tbaa !16
  %40 = icmp eq i32 %0, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %33
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %34, i32 noundef %0)
  br label %42

42:                                               ; preds = %41, %33
  ret ptr %34
}

declare void @Perl_av_push(ptr noundef, ptr noundef) local_unnamed_addr #3

declare i32 @Perl_magic_clearisa(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_setsv_flags(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #1 {
  %4 = alloca i64, align 8
  %5 = icmp eq ptr %1, %0
  br i1 %5, label %882, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = icmp eq i32 %8, 255
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.15, ptr noundef %1, ptr noundef nonnull %0) #17
  %11 = load i32, ptr %7, align 4, !tbaa !16
  br label %12

12:                                               ; preds = %6, %10
  %13 = phi i32 [ %8, %6 ], [ %11, %10 ]
  %14 = and i32 %13, 427886592
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %0, i32 noundef 4)
  br label %17

17:                                               ; preds = %16, %12
  %18 = icmp eq ptr %1, null
  %19 = select i1 %18, ptr @PL_sv_undef, ptr %1
  %20 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 2
  %21 = load i32, ptr %20, align 4, !tbaa !16
  %22 = icmp eq i32 %21, 255
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.16, ptr noundef nonnull %19, ptr noundef nonnull %0) #17
  %24 = load i32, ptr %20, align 4, !tbaa !16
  br label %25

25:                                               ; preds = %17, %23
  %26 = phi i32 [ %21, %17 ], [ %24, %23 ]
  %27 = and i32 %26, 255
  %28 = load i32, ptr %7, align 4, !tbaa !16
  %29 = and i32 %28, 255
  %30 = trunc i32 %26 to i8
  switch i8 %30, label %135 [
    i8 0, label %31
    i8 1, label %63
    i8 2, label %101
    i8 3, label %125
    i8 5, label %127
    i8 6, label %129
    i8 8, label %154
    i8 4, label %192
    i8 10, label %192
    i8 9, label %192
    i8 7, label %192
    i8 11, label %136
    i8 15, label %134
    i8 14, label %133
    i8 12, label %131
    i8 13, label %132
  ]

31:                                               ; preds = %25, %101, %94
  %32 = add nsw i32 %29, -11
  %33 = icmp ult i32 %32, -2
  br i1 %33, label %34, label %236

34:                                               ; preds = %31
  %35 = and i32 %28, 1610547455
  store i32 %35, ptr %7, align 4, !tbaa !16
  %36 = and i32 %28, 33554432
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %882, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %40 = load ptr, ptr %39, align 8, !tbaa !17
  %41 = getelementptr inbounds i8, ptr %40, i64 -1
  %42 = load i8, ptr %41, align 1, !tbaa !17
  %43 = zext i8 %42 to i64
  %44 = icmp eq i8 %42, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %38
  %46 = getelementptr inbounds i8, ptr %40, i64 -9
  %47 = load i64, ptr %46, align 1
  br label %48

48:                                               ; preds = %38, %45
  %49 = phi i64 [ %43, %38 ], [ %47, %45 ]
  %50 = load ptr, ptr %0, align 8, !tbaa !26
  %51 = getelementptr inbounds %struct.xpv, ptr %50, i64 0, i32 3
  %52 = load i64, ptr %51, align 8, !tbaa !17
  %53 = add i64 %52, %49
  store i64 %53, ptr %51, align 8, !tbaa !17
  %54 = load ptr, ptr %39, align 8, !tbaa !17
  %55 = sub i64 0, %49
  %56 = getelementptr inbounds i8, ptr %54, i64 %55
  store ptr %56, ptr %39, align 8, !tbaa !17
  %57 = load ptr, ptr %0, align 8, !tbaa !26
  %58 = getelementptr inbounds %struct.xpv, ptr %57, i64 0, i32 2
  %59 = load i64, ptr %58, align 8, !tbaa !57
  %60 = add i64 %59, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %56, ptr nonnull align 1 %40, i64 %60, i1 false)
  %61 = load i32, ptr %7, align 4, !tbaa !16
  %62 = and i32 %61, -33554433
  store i32 %62, ptr %7, align 4, !tbaa !16
  br label %882

63:                                               ; preds = %25
  %64 = and i32 %26, 256
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %94, label %66

66:                                               ; preds = %63
  %67 = trunc i32 %28 to i8
  switch i8 %67, label %73 [
    i8 0, label %68
    i8 2, label %71
    i8 3, label %71
    i8 9, label %236
    i8 10, label %236
  ]

68:                                               ; preds = %66
  %69 = getelementptr %struct.sv, ptr %0, i64 -1, i32 1
  store ptr %69, ptr %0, align 8, !tbaa !26
  %70 = or i32 %28, 1
  br label %73

71:                                               ; preds = %66, %66
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 5)
  %72 = load i32, ptr %7, align 4, !tbaa !16
  br label %73

73:                                               ; preds = %66, %71, %68
  %74 = phi i32 [ %28, %66 ], [ %72, %71 ], [ %70, %68 ]
  %75 = and i32 %74, 1610547455
  store i32 %75, ptr %7, align 4, !tbaa !16
  %76 = and i32 %74, 33554432
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %73
  %79 = tail call i32 @Perl_sv_backoff(ptr noundef nonnull %0)
  %80 = load i32, ptr %7, align 4, !tbaa !16
  br label %81

81:                                               ; preds = %78, %73
  %82 = phi i32 [ %80, %78 ], [ %75, %73 ]
  %83 = or i32 %82, 4352
  store i32 %83, ptr %7, align 4, !tbaa !16
  %84 = load ptr, ptr %19, align 8, !tbaa !26
  %85 = getelementptr inbounds %struct.xpviv, ptr %84, i64 0, i32 4
  %86 = load i64, ptr %85, align 8, !tbaa !17
  %87 = load ptr, ptr %0, align 8, !tbaa !26
  %88 = getelementptr inbounds %struct.xpviv, ptr %87, i64 0, i32 4
  store i64 %86, ptr %88, align 8, !tbaa !17
  %89 = load i32, ptr %20, align 4, !tbaa !16
  %90 = icmp sgt i32 %89, -1
  br i1 %90, label %882, label %91

91:                                               ; preds = %81
  %92 = load i32, ptr %7, align 4, !tbaa !16
  %93 = or i32 %92, -2147483648
  store i32 %93, ptr %7, align 4, !tbaa !16
  br label %882

94:                                               ; preds = %63
  %95 = and i32 %26, 2048
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %31, label %97

97:                                               ; preds = %94
  %98 = icmp ult i32 %29, 3
  %99 = icmp ne i32 %29, 1
  %100 = and i1 %98, %99
  br i1 %100, label %233, label %236

101:                                              ; preds = %25
  %102 = and i32 %26, 512
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %31, label %104

104:                                              ; preds = %101
  %105 = trunc i32 %28 to i8
  switch i8 %105, label %109 [
    i8 0, label %107
    i8 1, label %107
    i8 3, label %106
    i8 5, label %106
    i8 9, label %236
    i8 10, label %236
  ]

106:                                              ; preds = %104, %104
  br label %107

107:                                              ; preds = %104, %104, %106
  %108 = phi i32 [ 6, %106 ], [ 2, %104 ], [ 2, %104 ]
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef %108)
  br label %109

109:                                              ; preds = %107, %104
  %110 = load ptr, ptr %19, align 8, !tbaa !26
  %111 = getelementptr inbounds %struct.xpvnv, ptr %110, i64 0, i32 5
  %112 = load double, ptr %111, align 8, !tbaa !17
  %113 = load ptr, ptr %0, align 8, !tbaa !26
  %114 = getelementptr inbounds %struct.xpvnv, ptr %113, i64 0, i32 5
  store double %112, ptr %114, align 8, !tbaa !17
  %115 = load i32, ptr %7, align 4, !tbaa !16
  %116 = and i32 %115, 1610547455
  store i32 %116, ptr %7, align 4, !tbaa !16
  %117 = and i32 %115, 33554432
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = tail call i32 @Perl_sv_backoff(ptr noundef nonnull %0)
  %121 = load i32, ptr %7, align 4, !tbaa !16
  br label %122

122:                                              ; preds = %119, %109
  %123 = phi i32 [ %121, %119 ], [ %116, %109 ]
  %124 = or i32 %123, 8704
  store i32 %124, ptr %7, align 4, !tbaa !16
  br label %882

125:                                              ; preds = %25
  %126 = icmp ult i32 %29, 3
  br i1 %126, label %233, label %236

127:                                              ; preds = %25
  %128 = icmp ult i32 %29, 5
  br i1 %128, label %233, label %236

129:                                              ; preds = %25
  %130 = icmp ult i32 %29, 6
  br i1 %130, label %233, label %236

131:                                              ; preds = %25
  br label %136

132:                                              ; preds = %25
  br label %136

133:                                              ; preds = %25
  br label %136

134:                                              ; preds = %25
  br label %136

135:                                              ; preds = %25
  br label %136

136:                                              ; preds = %25, %131, %132, %133, %134, %135
  %137 = phi ptr [ @.str.62, %135 ], [ @.str.59, %134 ], [ @.str.58, %133 ], [ @.str.56, %132 ], [ @.str.55, %131 ], [ @.str.54, %25 ]
  %138 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %139 = icmp eq ptr %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %struct.op, ptr %138, i64 0, i32 4
  %142 = load i16, ptr %141, align 8
  %143 = and i16 %142, 511
  %144 = icmp eq i16 %143, 380
  br i1 %144, label %145, label %147

145:                                              ; preds = %140
  %146 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %138, i32 noundef 2) #17
  br label %151

147:                                              ; preds = %140
  %148 = zext i16 %143 to i64
  %149 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %148
  %150 = load ptr, ptr %149, align 8, !tbaa !9
  br label %151

151:                                              ; preds = %147, %145
  %152 = phi ptr [ %146, %145 ], [ %150, %147 ]
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.17, ptr noundef nonnull %137, ptr noundef %152) #17
  br label %154

153:                                              ; preds = %136
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.18, ptr noundef nonnull %137) #17
  br label %154

154:                                              ; preds = %25, %151, %153, %219
  %155 = phi i32 [ 10, %219 ], [ 8, %25 ], [ %27, %153 ], [ %27, %151 ]
  %156 = icmp ult i32 %29, 8
  br i1 %156, label %157, label %236

157:                                              ; preds = %154
  %158 = icmp ugt i32 %29, 2
  br i1 %158, label %159, label %233

159:                                              ; preds = %157
  %160 = load ptr, ptr %0, align 8, !tbaa !26
  %161 = getelementptr inbounds %struct.xpv, ptr %160, i64 0, i32 3
  %162 = load i64, ptr %161, align 8, !tbaa !17
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %186, label %164

164:                                              ; preds = %159
  %165 = load i32, ptr %7, align 4, !tbaa !16
  %166 = and i32 %165, 33554432
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %169 = load ptr, ptr %168, align 8, !tbaa !17
  br i1 %167, label %183, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds i8, ptr %169, i64 -1
  %172 = load i8, ptr %171, align 1, !tbaa !17
  %173 = zext i8 %172 to i64
  %174 = icmp eq i8 %172, 0
  br i1 %174, label %175, label %178

175:                                              ; preds = %170
  %176 = getelementptr inbounds i8, ptr %169, i64 -9
  %177 = load i64, ptr %176, align 1
  br label %178

178:                                              ; preds = %175, %170
  %179 = phi i64 [ %173, %170 ], [ %177, %175 ]
  %180 = sub i64 0, %179
  %181 = getelementptr inbounds i8, ptr %169, i64 %180
  store ptr %181, ptr %168, align 8, !tbaa !17
  %182 = and i32 %165, -33554433
  store i32 %182, ptr %7, align 4, !tbaa !16
  br label %183

183:                                              ; preds = %164, %178
  %184 = phi ptr [ %181, %178 ], [ %169, %164 ]
  tail call void @Perl_safesysfree(ptr noundef %184) #17
  %185 = load ptr, ptr %0, align 8, !tbaa !26
  br label %186

186:                                              ; preds = %159, %183
  %187 = phi ptr [ %160, %159 ], [ %185, %183 ]
  %188 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  store ptr null, ptr %188, align 8, !tbaa !17
  %189 = getelementptr inbounds %struct.xpv, ptr %187, i64 0, i32 3
  store i64 0, ptr %189, align 8, !tbaa !17
  %190 = load ptr, ptr %0, align 8, !tbaa !26
  %191 = getelementptr inbounds %struct.xpv, ptr %190, i64 0, i32 2
  store i64 0, ptr %191, align 8, !tbaa !57
  br label %233

192:                                              ; preds = %25, %25, %25, %25
  %193 = and i32 %26, 2097152
  %194 = icmp eq i32 %193, 0
  %195 = and i32 %2, 2
  %196 = icmp eq i32 %195, 0
  %197 = or i1 %196, %194
  br i1 %197, label %202, label %198

198:                                              ; preds = %192
  %199 = tail call i32 @Perl_mg_get(ptr noundef nonnull %19) #17
  %200 = load i32, ptr %20, align 4, !tbaa !16
  %201 = and i32 %200, 255
  br label %202

202:                                              ; preds = %198, %192
  %203 = phi i32 [ %26, %192 ], [ %200, %198 ]
  %204 = phi i32 [ %27, %192 ], [ %201, %198 ]
  %205 = and i32 %203, 49152
  %206 = icmp eq i32 %205, 32768
  br i1 %206, label %207, label %217

207:                                              ; preds = %202
  %208 = and i32 %203, 255
  %209 = icmp eq i32 %208, 9
  br i1 %209, label %214, label %210

210:                                              ; preds = %207
  %211 = icmp eq i32 %208, 10
  %212 = icmp ult i32 %29, 11
  %213 = select i1 %211, i1 %212, i1 false
  br i1 %213, label %216, label %217

214:                                              ; preds = %207
  %215 = icmp ult i32 %29, 11
  br i1 %215, label %216, label %217

216:                                              ; preds = %210, %214
  tail call fastcc void @S_glob_assign_glob(ptr noundef nonnull %0, ptr noundef nonnull %19, i32 noundef %29)
  br label %882

217:                                              ; preds = %214, %210, %202
  %218 = icmp eq i32 %204, 10
  br i1 %218, label %219, label %229

219:                                              ; preds = %217
  %220 = and i32 %203, 255
  %221 = icmp eq i32 %220, 8
  %222 = and i32 %203, 16826623
  %223 = icmp eq i32 %222, 16777226
  %224 = or i1 %221, %223
  br i1 %224, label %154, label %225

225:                                              ; preds = %219
  %226 = load i32, ptr %7, align 4, !tbaa !16
  %227 = and i32 %226, 254
  %228 = icmp ugt i32 %227, 5
  br i1 %228, label %236, label %233

229:                                              ; preds = %217
  %230 = load i32, ptr %7, align 4, !tbaa !16
  %231 = and i32 %230, 255
  %232 = icmp ult i32 %231, %204
  br i1 %232, label %233, label %236

233:                                              ; preds = %229, %225, %157, %186, %129, %127, %125, %97
  %234 = phi i32 [ 1, %97 ], [ 3, %125 ], [ 5, %127 ], [ 6, %129 ], [ 8, %186 ], [ 8, %157 ], [ 6, %225 ], [ %204, %229 ]
  %235 = phi i32 [ 1, %97 ], [ 3, %125 ], [ 5, %127 ], [ 6, %129 ], [ %155, %186 ], [ %155, %157 ], [ 10, %225 ], [ %204, %229 ]
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef %234)
  br label %236

236:                                              ; preds = %233, %229, %225, %31, %97, %125, %127, %129, %154, %104, %104, %66, %66
  %237 = phi i32 [ %155, %154 ], [ 6, %129 ], [ 5, %127 ], [ 3, %125 ], [ 2, %104 ], [ 2, %104 ], [ %27, %31 ], [ 1, %66 ], [ 1, %66 ], [ 1, %97 ], [ 10, %225 ], [ %204, %229 ], [ %235, %233 ]
  %238 = load i32, ptr %7, align 4, !tbaa !16
  %239 = and i32 %238, 255
  %240 = load i32, ptr %20, align 4, !tbaa !16
  %241 = trunc i32 %238 to i8
  switch i8 %241, label %347 [
    i8 13, label %242
    i8 14, label %328
    i8 12, label %327
    i8 11, label %329
  ]

242:                                              ; preds = %236
  %243 = and i32 %240, 65280
  %244 = icmp ne i32 %243, 0
  %245 = and i32 %240, 255
  %246 = icmp eq i32 %245, 8
  %247 = or i1 %244, %246
  %248 = and i32 %240, 16826623
  %249 = icmp eq i32 %248, 16777226
  %250 = select i1 %247, i1 true, i1 %249
  br i1 %250, label %251, label %298

251:                                              ; preds = %242
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  %252 = and i32 %240, 2098176
  %253 = icmp eq i32 %252, 1024
  br i1 %253, label %254, label %260

254:                                              ; preds = %251
  %255 = load ptr, ptr %19, align 8, !tbaa !26
  %256 = getelementptr inbounds %struct.xpv, ptr %255, i64 0, i32 2
  %257 = load i64, ptr %256, align 8, !tbaa !57
  store i64 %257, ptr %4, align 8, !tbaa !60
  %258 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 3
  %259 = load ptr, ptr %258, align 8, !tbaa !17
  br label %264

260:                                              ; preds = %251
  %261 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %19, ptr noundef nonnull %4, i32 noundef 34)
  %262 = load i32, ptr %7, align 4, !tbaa !16
  %263 = load i64, ptr %4, align 8, !tbaa !60
  br label %264

264:                                              ; preds = %260, %254
  %265 = phi i64 [ %257, %254 ], [ %263, %260 ]
  %266 = phi i32 [ %238, %254 ], [ %262, %260 ]
  %267 = phi ptr [ %259, %254 ], [ %261, %260 ]
  %268 = and i32 %266, 268435456
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %272, label %270

270:                                              ; preds = %264
  %271 = add i64 %265, 1
  br label %278

272:                                              ; preds = %264
  %273 = load ptr, ptr %0, align 8, !tbaa !26
  %274 = getelementptr inbounds %struct.xpv, ptr %273, i64 0, i32 3
  %275 = load i64, ptr %274, align 8, !tbaa !17
  %276 = add i64 %265, 1
  %277 = icmp ult i64 %275, %276
  br i1 %277, label %278, label %283

278:                                              ; preds = %270, %272
  %279 = phi i64 [ %271, %270 ], [ %276, %272 ]
  %280 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %279)
  %281 = load i64, ptr %4, align 8, !tbaa !60
  %282 = add i64 %281, 1
  br label %283

283:                                              ; preds = %272, %278
  %284 = phi i64 [ %276, %272 ], [ %282, %278 ]
  %285 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %286 = load ptr, ptr %285, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %286, ptr align 1 %267, i64 %284, i1 false)
  %287 = load i64, ptr %4, align 8, !tbaa !60
  %288 = load ptr, ptr %0, align 8, !tbaa !26
  %289 = getelementptr inbounds %struct.xpv, ptr %288, i64 0, i32 2
  store i64 %287, ptr %289, align 8, !tbaa !57
  %290 = load i32, ptr %7, align 4, !tbaa !16
  %291 = and i32 %290, 1610547455
  %292 = and i32 %240, 536870912
  %293 = or i32 %292, %291
  %294 = or i32 %293, 17408
  store i32 %294, ptr %7, align 4, !tbaa !16
  %295 = getelementptr inbounds %struct.xpvcv, ptr %288, i64 0, i32 12
  %296 = load i32, ptr %295, align 4, !tbaa !121
  %297 = and i32 %296, -8193
  store i32 %297, ptr %295, align 4, !tbaa !121
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  br label %855

298:                                              ; preds = %242
  %299 = and i32 %238, 1610547455
  store i32 %299, ptr %7, align 4, !tbaa !16
  %300 = and i32 %238, 33554432
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %855, label %302

302:                                              ; preds = %298
  %303 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %304 = load ptr, ptr %303, align 8, !tbaa !17
  %305 = getelementptr inbounds i8, ptr %304, i64 -1
  %306 = load i8, ptr %305, align 1, !tbaa !17
  %307 = zext i8 %306 to i64
  %308 = icmp eq i8 %306, 0
  br i1 %308, label %309, label %312

309:                                              ; preds = %302
  %310 = getelementptr inbounds i8, ptr %304, i64 -9
  %311 = load i64, ptr %310, align 1
  br label %312

312:                                              ; preds = %302, %309
  %313 = phi i64 [ %307, %302 ], [ %311, %309 ]
  %314 = load ptr, ptr %0, align 8, !tbaa !26
  %315 = getelementptr inbounds %struct.xpv, ptr %314, i64 0, i32 3
  %316 = load i64, ptr %315, align 8, !tbaa !17
  %317 = add i64 %316, %313
  store i64 %317, ptr %315, align 8, !tbaa !17
  %318 = load ptr, ptr %303, align 8, !tbaa !17
  %319 = sub i64 0, %313
  %320 = getelementptr inbounds i8, ptr %318, i64 %319
  store ptr %320, ptr %303, align 8, !tbaa !17
  %321 = load ptr, ptr %0, align 8, !tbaa !26
  %322 = getelementptr inbounds %struct.xpv, ptr %321, i64 0, i32 2
  %323 = load i64, ptr %322, align 8, !tbaa !57
  %324 = add i64 %323, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %320, ptr nonnull align 1 %304, i64 %324, i1 false)
  %325 = load i32, ptr %7, align 4, !tbaa !16
  %326 = and i32 %325, -33554433
  store i32 %326, ptr %7, align 4, !tbaa !16
  br label %855

327:                                              ; preds = %236
  br label %329

328:                                              ; preds = %236
  br label %329

329:                                              ; preds = %236, %327, %328
  %330 = phi ptr [ @.str.58, %328 ], [ @.str.55, %327 ], [ @.str.54, %236 ]
  %331 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %332 = icmp eq ptr %331, null
  br i1 %332, label %346, label %333

333:                                              ; preds = %329
  %334 = getelementptr inbounds %struct.op, ptr %331, i64 0, i32 4
  %335 = load i16, ptr %334, align 8
  %336 = and i16 %335, 511
  %337 = icmp eq i16 %336, 380
  br i1 %337, label %338, label %340

338:                                              ; preds = %333
  %339 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %331, i32 noundef 2) #17
  br label %344

340:                                              ; preds = %333
  %341 = zext i16 %336 to i64
  %342 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %341
  %343 = load ptr, ptr %342, align 8, !tbaa !9
  br label %344

344:                                              ; preds = %340, %338
  %345 = phi ptr [ %339, %338 ], [ %343, %340 ]
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.19, ptr noundef nonnull %330, ptr noundef %345) #17
  br label %855

346:                                              ; preds = %329
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.20, ptr noundef nonnull %330) #17
  br label %855

347:                                              ; preds = %236
  %348 = and i32 %240, 2048
  %349 = icmp eq i32 %348, 0
  %350 = and i32 %238, 49152
  %351 = icmp eq i32 %350, 32768
  %352 = add nsw i32 %239, -9
  %353 = icmp ult i32 %352, 2
  %354 = and i1 %351, %353
  br i1 %349, label %440, label %355

355:                                              ; preds = %347
  br i1 %354, label %356, label %384

356:                                              ; preds = %355
  %357 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 3
  %358 = load ptr, ptr %357, align 8, !tbaa !17
  %359 = getelementptr inbounds %struct.sv, ptr %358, i64 0, i32 2
  %360 = load i32, ptr %359, align 4, !tbaa !16
  %361 = and i32 %360, 49407
  %362 = icmp eq i32 %361, 32777
  br i1 %362, label %363, label %386

363:                                              ; preds = %356
  %364 = icmp eq ptr %358, %0
  br i1 %364, label %365, label %383

365:                                              ; preds = %363
  %366 = load ptr, ptr %0, align 8, !tbaa !26
  %367 = getelementptr inbounds %struct.xpvgv, ptr %366, i64 0, i32 2
  %368 = load i64, ptr %367, align 8, !tbaa !69
  %369 = and i64 %368, 240
  %370 = icmp eq i64 %369, 240
  br i1 %370, label %380, label %371

371:                                              ; preds = %365
  %372 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %373 = getelementptr inbounds %struct.cop, ptr %372, i64 0, i32 8
  %374 = load ptr, ptr %373, align 8, !tbaa !124
  %375 = getelementptr inbounds %struct.xpvgv, ptr %366, i64 0, i32 5
  %376 = load ptr, ptr %375, align 8, !tbaa !17
  %377 = icmp eq ptr %374, %376
  %378 = or i64 %368, 240
  %379 = select i1 %377, i64 %368, i64 %378
  br label %380

380:                                              ; preds = %371, %365
  %381 = phi i64 [ %368, %365 ], [ %379, %371 ]
  %382 = or i64 %381, 2
  store i64 %382, ptr %367, align 8, !tbaa !69
  br label %882

383:                                              ; preds = %363
  tail call fastcc void @S_glob_assign_glob(ptr noundef nonnull %0, ptr noundef nonnull %358, i32 noundef %239)
  br label %882

384:                                              ; preds = %355
  %385 = icmp ugt i32 %239, 2
  br i1 %385, label %387, label %421

386:                                              ; preds = %356
  tail call void @Perl_gv_setref(ptr noundef nonnull %0, ptr noundef nonnull %19)
  br label %882

387:                                              ; preds = %384
  %388 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %389 = load ptr, ptr %388, align 8, !tbaa !17
  %390 = icmp eq ptr %389, null
  br i1 %390, label %421, label %391

391:                                              ; preds = %387
  %392 = load ptr, ptr %0, align 8, !tbaa !26
  %393 = getelementptr inbounds %struct.xpv, ptr %392, i64 0, i32 3
  %394 = load i64, ptr %393, align 8, !tbaa !17
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %415, label %396

396:                                              ; preds = %391
  %397 = and i32 %238, 33554432
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %412, label %399

399:                                              ; preds = %396
  %400 = getelementptr inbounds i8, ptr %389, i64 -1
  %401 = load i8, ptr %400, align 1, !tbaa !17
  %402 = zext i8 %401 to i64
  %403 = icmp eq i8 %401, 0
  br i1 %403, label %404, label %407

404:                                              ; preds = %399
  %405 = getelementptr inbounds i8, ptr %389, i64 -9
  %406 = load i64, ptr %405, align 1
  br label %407

407:                                              ; preds = %404, %399
  %408 = phi i64 [ %402, %399 ], [ %406, %404 ]
  %409 = sub i64 0, %408
  %410 = getelementptr inbounds i8, ptr %389, i64 %409
  store ptr %410, ptr %388, align 8, !tbaa !17
  %411 = and i32 %238, -33554433
  store i32 %411, ptr %7, align 4, !tbaa !16
  br label %412

412:                                              ; preds = %396, %407
  %413 = phi ptr [ %389, %396 ], [ %410, %407 ]
  tail call void @Perl_safesysfree(ptr noundef %413) #17
  %414 = load ptr, ptr %0, align 8, !tbaa !26
  br label %415

415:                                              ; preds = %391, %412
  %416 = phi ptr [ %392, %391 ], [ %414, %412 ]
  %417 = getelementptr inbounds %struct.xpv, ptr %416, i64 0, i32 3
  store i64 0, ptr %417, align 8, !tbaa !17
  %418 = load ptr, ptr %0, align 8, !tbaa !26
  %419 = getelementptr inbounds %struct.xpv, ptr %418, i64 0, i32 2
  store i64 0, ptr %419, align 8, !tbaa !57
  %420 = load i32, ptr %7, align 4, !tbaa !16
  br label %421

421:                                              ; preds = %387, %415, %384
  %422 = phi i32 [ %238, %387 ], [ %420, %415 ], [ %238, %384 ]
  %423 = and i32 %422, 1610547455
  store i32 %423, ptr %7, align 4, !tbaa !16
  %424 = and i32 %422, 33554432
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %428, label %426

426:                                              ; preds = %421
  %427 = tail call i32 @Perl_sv_backoff(ptr noundef nonnull %0)
  br label %428

428:                                              ; preds = %426, %421
  %429 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 3
  %430 = load ptr, ptr %429, align 8, !tbaa !17
  %431 = icmp eq ptr %430, null
  br i1 %431, label %436, label %432

432:                                              ; preds = %428
  %433 = getelementptr inbounds %struct.sv, ptr %430, i64 0, i32 1
  %434 = load i32, ptr %433, align 8, !tbaa !13
  %435 = add i32 %434, 1
  store i32 %435, ptr %433, align 8, !tbaa !13
  br label %436

436:                                              ; preds = %428, %432
  %437 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  store ptr %430, ptr %437, align 8, !tbaa !17
  %438 = load i32, ptr %7, align 4, !tbaa !16
  %439 = or i32 %438, %348
  store i32 %439, ptr %7, align 4, !tbaa !16
  br label %855

440:                                              ; preds = %347
  br i1 %354, label %441, label %524

441:                                              ; preds = %440
  %442 = and i32 %240, 65280
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %444, label %445

444:                                              ; preds = %441
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 12, ptr noundef nonnull @.str.21) #17
  br label %855

445:                                              ; preds = %441
  %446 = tail call ptr @Perl_gv_fetchsv(ptr noundef nonnull %19, i32 noundef 2049, i32 noundef 9) #17
  %447 = icmp eq ptr %446, %0
  br i1 %447, label %855, label %448

448:                                              ; preds = %445
  %449 = load ptr, ptr %0, align 8, !tbaa !9
  %450 = getelementptr inbounds %struct.xpvgv, ptr %449, i64 0, i32 4
  %451 = load ptr, ptr %450, align 8, !tbaa !17
  %452 = getelementptr inbounds %struct.hek, ptr %451, i64 0, i32 2
  %453 = getelementptr inbounds %struct.hek, ptr %451, i64 0, i32 1
  %454 = load i32, ptr %453, align 4, !tbaa !84
  %455 = sext i32 %454 to i64
  %456 = icmp ugt i32 %454, 1
  br i1 %456, label %457, label %467

457:                                              ; preds = %448
  %458 = add nsw i64 %455, -2
  %459 = getelementptr inbounds i8, ptr %452, i64 %458
  %460 = load i8, ptr %459, align 1, !tbaa !17
  %461 = icmp eq i8 %460, 58
  br i1 %461, label %462, label %483

462:                                              ; preds = %457
  %463 = add nsw i64 %455, -1
  %464 = getelementptr inbounds i8, ptr %452, i64 %463
  %465 = load i8, ptr %464, align 1, !tbaa !17
  %466 = icmp eq i8 %465, 58
  br i1 %466, label %472, label %483

467:                                              ; preds = %448
  %468 = icmp eq i32 %454, 1
  br i1 %468, label %469, label %483

469:                                              ; preds = %467
  %470 = load i8, ptr %452, align 1, !tbaa !17
  %471 = icmp eq i8 %470, 58
  br i1 %471, label %472, label %483

472:                                              ; preds = %469, %462
  %473 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %474 = load ptr, ptr %473, align 8, !tbaa !17
  %475 = getelementptr inbounds %struct.gp, ptr %474, i64 0, i32 5
  %476 = load ptr, ptr %475, align 8, !tbaa !22
  %477 = icmp eq ptr %476, null
  br i1 %477, label %483, label %478

478:                                              ; preds = %472
  %479 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %476)
  %480 = getelementptr inbounds %struct.sv, ptr %476, i64 0, i32 1
  %481 = load i32, ptr %480, align 8, !tbaa !13
  %482 = add i32 %481, 1
  store i32 %482, ptr %480, align 8, !tbaa !13
  br label %483

483:                                              ; preds = %457, %462, %472, %478, %469, %467
  %484 = phi ptr [ null, %469 ], [ null, %467 ], [ %476, %478 ], [ null, %472 ], [ null, %462 ], [ null, %457 ]
  %485 = phi i1 [ false, %469 ], [ false, %467 ], [ true, %478 ], [ true, %472 ], [ false, %462 ], [ false, %457 ]
  %486 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %487 = load ptr, ptr %486, align 8, !tbaa !17
  %488 = icmp eq ptr %487, null
  br i1 %488, label %494, label %489

489:                                              ; preds = %483
  %490 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %0)
  %491 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  %492 = load i32, ptr %491, align 8, !tbaa !13
  %493 = add i32 %492, 1
  store i32 %493, ptr %491, align 8, !tbaa !13
  tail call void @Perl_gp_free(ptr noundef nonnull %0) #17
  br label %494

494:                                              ; preds = %489, %483
  %495 = getelementptr inbounds %struct.gv, ptr %446, i64 0, i32 3
  %496 = load ptr, ptr %495, align 8, !tbaa !17
  %497 = tail call ptr @Perl_gp_ref(ptr noundef %496) #17
  store ptr %497, ptr %486, align 8, !tbaa !17
  br i1 %485, label %498, label %855

498:                                              ; preds = %494
  %499 = getelementptr inbounds %struct.gp, ptr %497, i64 0, i32 5
  %500 = load ptr, ptr %499, align 8, !tbaa !22
  %501 = icmp eq ptr %484, null
  br i1 %501, label %521, label %502

502:                                              ; preds = %498
  %503 = getelementptr inbounds %struct.hv, ptr %484, i64 0, i32 2
  %504 = load i32, ptr %503, align 4, !tbaa !64
  %505 = and i32 %504, 33554432
  %506 = icmp eq i32 %505, 0
  br i1 %506, label %855, label %507

507:                                              ; preds = %502
  %508 = getelementptr inbounds %struct.hv, ptr %484, i64 0, i32 3
  %509 = load ptr, ptr %508, align 8, !tbaa !17
  %510 = load ptr, ptr %484, align 8, !tbaa !66
  %511 = getelementptr inbounds %struct.xpvhv, ptr %510, i64 0, i32 3
  %512 = load i64, ptr %511, align 8, !tbaa !48
  %513 = add i64 %512, 1
  %514 = getelementptr inbounds ptr, ptr %509, i64 %513
  %515 = load ptr, ptr %514, align 8, !tbaa !17
  %516 = icmp eq ptr %515, null
  br i1 %516, label %855, label %517

517:                                              ; preds = %507
  %518 = getelementptr inbounds %struct.xpvhv_aux, ptr %514, i64 0, i32 4
  %519 = load i32, ptr %518, align 4, !tbaa !67
  %520 = icmp eq i32 %519, -1
  br i1 %520, label %855, label %523

521:                                              ; preds = %498
  %522 = icmp eq ptr %500, null
  br i1 %522, label %855, label %523

523:                                              ; preds = %517, %521
  tail call void @Perl_mro_package_moved(ptr noundef %500, ptr noundef %484, ptr noundef nonnull %0, i32 noundef 0) #17
  br label %855

524:                                              ; preds = %440
  %525 = and i32 %238, 253
  %526 = icmp eq i32 %525, 8
  br i1 %526, label %527, label %537

527:                                              ; preds = %524
  %528 = icmp eq i32 %237, 8
  br i1 %528, label %535, label %529

529:                                              ; preds = %527
  %530 = and i32 %240, 255
  %531 = icmp eq i32 %530, 8
  %532 = and i32 %240, 16826623
  %533 = icmp eq i32 %532, 16777226
  %534 = or i1 %531, %533
  br i1 %534, label %535, label %537

535:                                              ; preds = %529, %527
  %536 = tail call ptr @Perl_reg_temp_copy(ptr noundef nonnull %0, ptr noundef nonnull %19) #17
  br label %855

537:                                              ; preds = %529, %524
  %538 = and i32 %240, 16384
  %539 = icmp eq i32 %538, 0
  br i1 %539, label %810, label %540

540:                                              ; preds = %537
  %541 = load ptr, ptr %19, align 8, !tbaa !26
  %542 = getelementptr inbounds %struct.xpv, ptr %541, i64 0, i32 2
  %543 = load i64, ptr %542, align 8, !tbaa !57
  %544 = getelementptr inbounds %struct.xpv, ptr %541, i64 0, i32 3
  %545 = load i64, ptr %544, align 8, !tbaa !17
  %546 = and i32 %238, 1610547455
  %547 = or i32 %546, 17408
  store i32 %547, ptr %7, align 4, !tbaa !16
  %548 = and i32 %240, 268959744
  %549 = icmp eq i32 %548, 524288
  br i1 %549, label %564, label %550

550:                                              ; preds = %540
  %551 = and i32 %240, 402849792
  %552 = icmp eq i32 %551, 131072
  %553 = icmp ugt i64 %543, 1249
  %554 = select i1 %552, i1 %553, i1 false
  %555 = sub i64 %545, %543
  %556 = icmp ult i64 %555, 80
  %557 = select i1 %554, i1 %556, i1 false
  %558 = shl i64 %543, 1
  %559 = icmp ult i64 %545, %558
  %560 = select i1 %557, i1 %559, i1 false
  %561 = and i32 %240, 33554432
  %562 = icmp eq i32 %561, 0
  %563 = select i1 %560, i1 %562, i1 false
  br i1 %563, label %567, label %633

564:                                              ; preds = %540
  %565 = and i32 %240, 33554432
  %566 = icmp eq i32 %565, 0
  br i1 %566, label %567, label %633

567:                                              ; preds = %550, %564
  %568 = and i32 %2, 16
  %569 = icmp eq i32 %568, 0
  br i1 %569, label %570, label %633

570:                                              ; preds = %567
  %571 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 1
  %572 = load i32, ptr %571, align 8, !tbaa !13
  %573 = icmp eq i32 %572, 1
  %574 = icmp ne i64 %545, 0
  %575 = select i1 %573, i1 %574, i1 false
  br i1 %575, label %576, label %633

576:                                              ; preds = %570
  %577 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %578 = load ptr, ptr %577, align 8, !tbaa !17
  %579 = icmp eq ptr %578, null
  %580 = load ptr, ptr %0, align 8, !tbaa !26
  br i1 %579, label %604, label %581

581:                                              ; preds = %576
  %582 = getelementptr inbounds %struct.xpv, ptr %580, i64 0, i32 3
  %583 = load i64, ptr %582, align 8, !tbaa !17
  %584 = icmp eq i64 %583, 0
  br i1 %584, label %604, label %585

585:                                              ; preds = %581
  %586 = and i32 %238, 33554432
  %587 = icmp eq i32 %586, 0
  br i1 %587, label %601, label %588

588:                                              ; preds = %585
  %589 = getelementptr inbounds i8, ptr %578, i64 -1
  %590 = load i8, ptr %589, align 1, !tbaa !17
  %591 = zext i8 %590 to i64
  %592 = icmp eq i8 %590, 0
  br i1 %592, label %593, label %596

593:                                              ; preds = %588
  %594 = getelementptr inbounds i8, ptr %578, i64 -9
  %595 = load i64, ptr %594, align 1
  br label %596

596:                                              ; preds = %593, %588
  %597 = phi i64 [ %591, %588 ], [ %595, %593 ]
  %598 = sub i64 0, %597
  %599 = getelementptr inbounds i8, ptr %578, i64 %598
  store ptr %599, ptr %577, align 8, !tbaa !17
  %600 = and i32 %547, 1577010431
  store i32 %600, ptr %7, align 4, !tbaa !16
  br label %601

601:                                              ; preds = %585, %596
  %602 = phi ptr [ %578, %585 ], [ %599, %596 ]
  tail call void @Perl_safesysfree(ptr noundef %602) #17
  %603 = load ptr, ptr %0, align 8, !tbaa !26
  br label %604

604:                                              ; preds = %576, %601, %581
  %605 = phi ptr [ %580, %576 ], [ %603, %601 ], [ %580, %581 ]
  %606 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 3
  %607 = load ptr, ptr %606, align 8, !tbaa !17
  store ptr %607, ptr %577, align 8, !tbaa !17
  %608 = load ptr, ptr %19, align 8, !tbaa !26
  %609 = getelementptr inbounds %struct.xpv, ptr %608, i64 0, i32 3
  %610 = load i64, ptr %609, align 8, !tbaa !17
  %611 = getelementptr inbounds %struct.xpv, ptr %605, i64 0, i32 3
  store i64 %610, ptr %611, align 8, !tbaa !17
  %612 = load ptr, ptr %19, align 8, !tbaa !26
  %613 = getelementptr inbounds %struct.xpv, ptr %612, i64 0, i32 2
  %614 = load i64, ptr %613, align 8, !tbaa !57
  %615 = load ptr, ptr %0, align 8, !tbaa !26
  %616 = getelementptr inbounds %struct.xpv, ptr %615, i64 0, i32 2
  store i64 %614, ptr %616, align 8, !tbaa !57
  %617 = load i32, ptr %7, align 4, !tbaa !16
  %618 = and i32 %617, -524289
  store i32 %618, ptr %7, align 4, !tbaa !16
  %619 = load i32, ptr %20, align 4, !tbaa !16
  %620 = and i32 %619, 1610547455
  store i32 %620, ptr %20, align 4, !tbaa !16
  %621 = and i32 %619, 33554432
  %622 = icmp eq i32 %621, 0
  br i1 %622, label %626, label %623

623:                                              ; preds = %604
  %624 = tail call i32 @Perl_sv_backoff(ptr noundef nonnull %19)
  %625 = load ptr, ptr %19, align 8, !tbaa !26
  br label %626

626:                                              ; preds = %623, %604
  %627 = phi ptr [ %625, %623 ], [ %612, %604 ]
  store ptr null, ptr %606, align 8, !tbaa !17
  %628 = getelementptr inbounds %struct.xpv, ptr %627, i64 0, i32 3
  store i64 0, ptr %628, align 8, !tbaa !17
  %629 = load ptr, ptr %19, align 8, !tbaa !26
  %630 = getelementptr inbounds %struct.xpv, ptr %629, i64 0, i32 2
  store i64 0, ptr %630, align 8, !tbaa !57
  %631 = load i32, ptr %20, align 4, !tbaa !16
  %632 = and i32 %631, -524289
  store i32 %632, ptr %20, align 4, !tbaa !16
  br label %768

633:                                              ; preds = %570, %567, %564, %550
  %634 = and i32 %2, 512
  %635 = icmp eq i32 %634, 0
  br i1 %635, label %745, label %636

636:                                              ; preds = %633
  %637 = and i32 %240, 268435456
  %638 = icmp eq i32 %637, 0
  br i1 %638, label %663, label %639

639:                                              ; preds = %636
  %640 = icmp eq i64 %545, 0
  br i1 %640, label %693, label %641

641:                                              ; preds = %639
  %642 = icmp ugt i64 %543, 1249
  %643 = sub i64 %545, %543
  %644 = icmp ult i64 %643, 80
  %645 = select i1 %642, i1 %644, i1 false
  %646 = shl i64 %543, 1
  %647 = icmp ult i64 %545, %646
  %648 = select i1 %645, i1 %647, i1 false
  br i1 %648, label %655, label %649

649:                                              ; preds = %641
  %650 = load ptr, ptr %0, align 8, !tbaa !26
  %651 = getelementptr inbounds %struct.xpv, ptr %650, i64 0, i32 3
  %652 = load i64, ptr %651, align 8, !tbaa !17
  %653 = add i64 %543, 1
  %654 = icmp ult i64 %652, %653
  br i1 %654, label %655, label %745

655:                                              ; preds = %641, %649
  %656 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 3
  %657 = load ptr, ptr %656, align 8, !tbaa !17
  %658 = load i64, ptr %544, align 8, !tbaa !17
  %659 = getelementptr inbounds i8, ptr %657, i64 %658
  %660 = getelementptr inbounds i8, ptr %659, i64 -1
  %661 = load i8, ptr %660, align 1, !tbaa !17
  %662 = icmp eq i8 %661, -1
  br i1 %662, label %745, label %693

663:                                              ; preds = %636
  %664 = and i32 %240, 251743232
  %665 = icmp eq i32 %664, 17408
  br i1 %665, label %666, label %745

666:                                              ; preds = %663
  %667 = and i32 %238, 67108864
  %668 = icmp eq i32 %667, 0
  %669 = sub i64 %545, %543
  %670 = icmp ult i64 %669, 80
  %671 = select i1 %668, i1 %670, i1 false
  %672 = shl i64 %543, 1
  %673 = icmp ult i64 %545, %672
  %674 = select i1 %671, i1 %673, i1 false
  br i1 %674, label %675, label %745

675:                                              ; preds = %666
  %676 = add i64 %543, 1
  %677 = icmp ult i64 %676, %545
  br i1 %677, label %678, label %745

678:                                              ; preds = %675
  %679 = icmp ugt i64 %543, 1249
  br i1 %679, label %685, label %680

680:                                              ; preds = %678
  %681 = load ptr, ptr %0, align 8, !tbaa !26
  %682 = getelementptr inbounds %struct.xpv, ptr %681, i64 0, i32 3
  %683 = load i64, ptr %682, align 8, !tbaa !17
  %684 = icmp ult i64 %683, %676
  br i1 %684, label %685, label %745

685:                                              ; preds = %678, %680
  %686 = load i32, ptr %20, align 4, !tbaa !16
  %687 = or i32 %686, 268435456
  store i32 %687, ptr %20, align 4, !tbaa !16
  %688 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 3
  %689 = load ptr, ptr %688, align 8, !tbaa !17
  %690 = load i64, ptr %544, align 8, !tbaa !17
  %691 = getelementptr inbounds i8, ptr %689, i64 %690
  %692 = getelementptr inbounds i8, ptr %691, i64 -1
  store i8 0, ptr %692, align 1, !tbaa !17
  br label %693

693:                                              ; preds = %639, %655, %685
  %694 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %695 = load ptr, ptr %694, align 8, !tbaa !17
  %696 = icmp eq ptr %695, null
  br i1 %696, label %721, label %697

697:                                              ; preds = %693
  %698 = load ptr, ptr %0, align 8, !tbaa !26
  %699 = getelementptr inbounds %struct.xpv, ptr %698, i64 0, i32 3
  %700 = load i64, ptr %699, align 8, !tbaa !17
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %721, label %702

702:                                              ; preds = %697
  %703 = load i32, ptr %7, align 4, !tbaa !16
  %704 = and i32 %703, 33554432
  %705 = icmp eq i32 %704, 0
  br i1 %705, label %719, label %706

706:                                              ; preds = %702
  %707 = getelementptr inbounds i8, ptr %695, i64 -1
  %708 = load i8, ptr %707, align 1, !tbaa !17
  %709 = zext i8 %708 to i64
  %710 = icmp eq i8 %708, 0
  br i1 %710, label %711, label %714

711:                                              ; preds = %706
  %712 = getelementptr inbounds i8, ptr %695, i64 -9
  %713 = load i64, ptr %712, align 1
  br label %714

714:                                              ; preds = %711, %706
  %715 = phi i64 [ %709, %706 ], [ %713, %711 ]
  %716 = sub i64 0, %715
  %717 = getelementptr inbounds i8, ptr %695, i64 %716
  store ptr %717, ptr %694, align 8, !tbaa !17
  %718 = and i32 %703, -33554433
  store i32 %718, ptr %7, align 4, !tbaa !16
  br label %719

719:                                              ; preds = %702, %714
  %720 = phi ptr [ %695, %702 ], [ %717, %714 ]
  tail call void @Perl_safesysfree(ptr noundef %720) #17
  br label %721

721:                                              ; preds = %697, %719, %693
  %722 = icmp eq i64 %545, 0
  %723 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 3
  %724 = load ptr, ptr %723, align 8, !tbaa !17
  br i1 %722, label %733, label %725

725:                                              ; preds = %721
  %726 = load ptr, ptr %19, align 8, !tbaa !26
  %727 = getelementptr inbounds %struct.xpv, ptr %726, i64 0, i32 3
  %728 = load i64, ptr %727, align 8, !tbaa !17
  %729 = getelementptr inbounds i8, ptr %724, i64 %728
  %730 = getelementptr inbounds i8, ptr %729, i64 -1
  %731 = load i8, ptr %730, align 1, !tbaa !17
  %732 = add i8 %731, 1
  store i8 %732, ptr %730, align 1, !tbaa !17
  br label %737

733:                                              ; preds = %721
  %734 = getelementptr inbounds i8, ptr %724, i64 -16
  %735 = load i64, ptr %734, align 8, !tbaa !17
  %736 = add i64 %735, 1
  store i64 %736, ptr %734, align 8, !tbaa !17
  br label %737

737:                                              ; preds = %725, %733
  %738 = load ptr, ptr %723, align 8, !tbaa !17
  store ptr %738, ptr %694, align 8, !tbaa !17
  %739 = load ptr, ptr %0, align 8, !tbaa !26
  %740 = getelementptr inbounds %struct.xpv, ptr %739, i64 0, i32 3
  store i64 %545, ptr %740, align 8, !tbaa !17
  %741 = load ptr, ptr %0, align 8, !tbaa !26
  %742 = getelementptr inbounds %struct.xpv, ptr %741, i64 0, i32 2
  store i64 %543, ptr %742, align 8, !tbaa !57
  %743 = load i32, ptr %7, align 4, !tbaa !16
  %744 = or i32 %743, 268435456
  store i32 %744, ptr %7, align 4, !tbaa !16
  br label %768

745:                                              ; preds = %680, %675, %666, %663, %655, %649, %633
  %746 = and i32 %238, 268435456
  %747 = icmp eq i32 %746, 0
  br i1 %747, label %750, label %748

748:                                              ; preds = %745
  %749 = add i64 %543, 1
  br label %756

750:                                              ; preds = %745
  %751 = load ptr, ptr %0, align 8, !tbaa !26
  %752 = getelementptr inbounds %struct.xpv, ptr %751, i64 0, i32 3
  %753 = load i64, ptr %752, align 8, !tbaa !17
  %754 = add i64 %543, 1
  %755 = icmp ult i64 %753, %754
  br i1 %755, label %756, label %759

756:                                              ; preds = %748, %750
  %757 = phi i64 [ %749, %748 ], [ %754, %750 ]
  %758 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %757)
  br label %759

759:                                              ; preds = %750, %756
  %760 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %761 = load ptr, ptr %760, align 8, !tbaa !17
  %762 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 3
  %763 = load ptr, ptr %762, align 8, !tbaa !17
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %761, ptr align 1 %763, i64 %543, i1 false)
  %764 = load ptr, ptr %0, align 8, !tbaa !26
  %765 = getelementptr inbounds %struct.xpv, ptr %764, i64 0, i32 2
  store i64 %543, ptr %765, align 8, !tbaa !57
  %766 = load ptr, ptr %760, align 8, !tbaa !17
  %767 = getelementptr inbounds i8, ptr %766, i64 %543
  store i8 0, ptr %767, align 1, !tbaa !17
  br label %768

768:                                              ; preds = %737, %759, %626
  %769 = and i32 %240, 8192
  %770 = icmp eq i32 %769, 0
  br i1 %770, label %777, label %771

771:                                              ; preds = %768
  %772 = load ptr, ptr %19, align 8, !tbaa !26
  %773 = getelementptr inbounds %struct.xpvnv, ptr %772, i64 0, i32 5
  %774 = load double, ptr %773, align 8, !tbaa !17
  %775 = load ptr, ptr %0, align 8, !tbaa !26
  %776 = getelementptr inbounds %struct.xpvnv, ptr %775, i64 0, i32 5
  store double %774, ptr %776, align 8, !tbaa !17
  br label %777

777:                                              ; preds = %771, %768
  %778 = and i32 %240, 4096
  %779 = icmp eq i32 %778, 0
  br i1 %779, label %780, label %782

780:                                              ; preds = %777
  %781 = load i32, ptr %7, align 4, !tbaa !16
  br label %792

782:                                              ; preds = %777
  %783 = load ptr, ptr %19, align 8, !tbaa !26
  %784 = getelementptr inbounds %struct.xpviv, ptr %783, i64 0, i32 4
  %785 = load i64, ptr %784, align 8, !tbaa !17
  %786 = load ptr, ptr %0, align 8, !tbaa !26
  %787 = getelementptr inbounds %struct.xpviv, ptr %786, i64 0, i32 4
  store i64 %785, ptr %787, align 8, !tbaa !17
  %788 = load i32, ptr %7, align 4, !tbaa !16
  %789 = or i32 %788, -2147483648
  %790 = icmp slt i32 %240, 0
  %791 = select i1 %790, i32 %789, i32 %788
  br label %792

792:                                              ; preds = %782, %780
  %793 = phi i32 [ %781, %780 ], [ %791, %782 ]
  %794 = and i32 %240, 536883968
  %795 = or i32 %793, %794
  store i32 %795, ptr %7, align 4, !tbaa !16
  %796 = load i32, ptr %20, align 4, !tbaa !16
  %797 = and i32 %796, 14680064
  %798 = icmp eq i32 %797, 0
  br i1 %798, label %855, label %799

799:                                              ; preds = %792
  %800 = tail call ptr @Perl_mg_find(ptr noundef nonnull %19, i32 noundef 86) #17
  %801 = icmp eq ptr %800, null
  br i1 %801, label %855, label %802

802:                                              ; preds = %799
  %803 = getelementptr inbounds %struct.magic, ptr %800, i64 0, i32 7
  %804 = load ptr, ptr %803, align 8, !tbaa !109
  %805 = getelementptr inbounds %struct.magic, ptr %800, i64 0, i32 5
  %806 = load i64, ptr %805, align 8, !tbaa !76
  %807 = trunc i64 %806 to i32
  tail call void @Perl_sv_magic(ptr noundef nonnull %0, ptr noundef null, i32 noundef 86, ptr noundef %804, i32 noundef %807)
  %808 = load i32, ptr %7, align 4, !tbaa !16
  %809 = or i32 %808, 8388608
  store i32 %809, ptr %7, align 4, !tbaa !16
  br label %855

810:                                              ; preds = %537
  %811 = and i32 %240, 12288
  %812 = icmp eq i32 %811, 0
  br i1 %812, label %841, label %813

813:                                              ; preds = %810
  %814 = and i32 %238, 1610547455
  store i32 %814, ptr %7, align 4, !tbaa !16
  %815 = and i32 %238, 33554432
  %816 = icmp eq i32 %815, 0
  br i1 %816, label %820, label %817

817:                                              ; preds = %813
  %818 = tail call i32 @Perl_sv_backoff(ptr noundef nonnull %0)
  %819 = load i32, ptr %7, align 4, !tbaa !16
  br label %820

820:                                              ; preds = %817, %813
  %821 = phi i32 [ %819, %817 ], [ %814, %813 ]
  %822 = and i32 %240, -2147470592
  %823 = or i32 %821, %822
  store i32 %823, ptr %7, align 4, !tbaa !16
  %824 = and i32 %240, 4096
  %825 = icmp eq i32 %824, 0
  br i1 %825, label %832, label %826

826:                                              ; preds = %820
  %827 = load ptr, ptr %19, align 8, !tbaa !26
  %828 = getelementptr inbounds %struct.xpviv, ptr %827, i64 0, i32 4
  %829 = load i64, ptr %828, align 8, !tbaa !17
  %830 = load ptr, ptr %0, align 8, !tbaa !26
  %831 = getelementptr inbounds %struct.xpviv, ptr %830, i64 0, i32 4
  store i64 %829, ptr %831, align 8, !tbaa !17
  br label %832

832:                                              ; preds = %826, %820
  %833 = and i32 %240, 8192
  %834 = icmp eq i32 %833, 0
  br i1 %834, label %855, label %835

835:                                              ; preds = %832
  %836 = load ptr, ptr %19, align 8, !tbaa !26
  %837 = getelementptr inbounds %struct.xpvnv, ptr %836, i64 0, i32 5
  %838 = load double, ptr %837, align 8, !tbaa !17
  %839 = load ptr, ptr %0, align 8, !tbaa !26
  %840 = getelementptr inbounds %struct.xpvnv, ptr %839, i64 0, i32 5
  store double %838, ptr %840, align 8, !tbaa !17
  br label %855

841:                                              ; preds = %810
  %842 = and i32 %240, 49152
  %843 = icmp eq i32 %842, 32768
  br i1 %843, label %844, label %849

844:                                              ; preds = %841
  %845 = and i32 %240, 255
  %846 = add nsw i32 %845, -9
  %847 = icmp ult i32 %846, 2
  br i1 %847, label %848, label %849

848:                                              ; preds = %844
  tail call void @Perl_gv_efullname4(ptr noundef nonnull %0, ptr noundef nonnull %19, ptr noundef nonnull @.str.9, i1 noundef zeroext true) #17
  br label %855

849:                                              ; preds = %844, %841
  %850 = and i32 %238, 1610547455
  store i32 %850, ptr %7, align 4, !tbaa !16
  %851 = and i32 %238, 33554432
  %852 = icmp eq i32 %851, 0
  br i1 %852, label %855, label %853

853:                                              ; preds = %849
  %854 = tail call i32 @Perl_sv_backoff(ptr noundef nonnull %0)
  br label %855

855:                                              ; preds = %792, %849, %853, %799, %802, %445, %521, %523, %502, %507, %517, %494, %344, %346, %298, %312, %444, %848, %832, %835, %535, %436, %283
  %856 = load i32, ptr %20, align 4, !tbaa !16
  %857 = and i32 %856, 14680064
  %858 = icmp ne i32 %857, 0
  %859 = and i32 %856, 255
  %860 = icmp ugt i32 %859, 6
  %861 = and i1 %858, %860
  br i1 %861, label %862, label %882

862:                                              ; preds = %855
  %863 = load ptr, ptr %19, align 8, !tbaa !26
  %864 = getelementptr inbounds %struct.xpvmg, ptr %863, i64 0, i32 1
  %865 = load ptr, ptr %864, align 8, !tbaa !17
  %866 = icmp eq ptr %865, null
  br i1 %866, label %882, label %867

867:                                              ; preds = %862
  %868 = call ptr @Perl_mg_find(ptr noundef nonnull %19, i32 noundef 116) #17
  %869 = icmp eq ptr %868, null
  br i1 %869, label %882, label %870

870:                                              ; preds = %867
  %871 = getelementptr inbounds %struct.magic, ptr %868, i64 0, i32 5
  %872 = load i64, ptr %871, align 8, !tbaa !76
  %873 = and i64 %872, 1
  %874 = icmp eq i64 %873, 0
  br i1 %874, label %882, label %875

875:                                              ; preds = %870
  %876 = load i8, ptr @PL_tainting, align 1, !range !74
  %877 = icmp eq i8 %876, 0
  %878 = load i8, ptr @PL_tainted, align 1, !range !74
  %879 = icmp eq i8 %878, 0
  %880 = select i1 %877, i1 true, i1 %879
  br i1 %880, label %882, label %881

881:                                              ; preds = %875
  call void @Perl_sv_magic(ptr noundef nonnull %0, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0)
  br label %882

882:                                              ; preds = %867, %870, %862, %855, %875, %881, %81, %91, %34, %48, %3, %386, %383, %380, %216, %122
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_glob_assign_glob(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #1 {
  %4 = icmp eq i32 %2, 9
  br i1 %4, label %121, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !16
  %8 = and i32 %7, 49152
  %9 = icmp eq i32 %8, 32768
  br i1 %9, label %10, label %14

10:                                               ; preds = %5
  %11 = and i32 %7, 255
  %12 = add nsw i32 %11, -9
  %13 = icmp ult i32 %12, 2
  br i1 %13, label %121, label %14

14:                                               ; preds = %10, %5
  %15 = load ptr, ptr %1, align 8, !tbaa !26
  %16 = getelementptr inbounds %struct.xpvgv, ptr %15, i64 0, i32 4
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = getelementptr inbounds %struct.hek, ptr %17, i64 0, i32 2
  %19 = getelementptr inbounds %struct.hek, ptr %17, i64 0, i32 1
  %20 = load i32, ptr %19, align 4, !tbaa !84
  %21 = icmp sgt i32 %2, 2
  br i1 %21, label %22, label %55

22:                                               ; preds = %14
  %23 = load ptr, ptr %0, align 8, !tbaa !26
  %24 = getelementptr inbounds %struct.xpv, ptr %23, i64 0, i32 3
  %25 = load i64, ptr %24, align 8, !tbaa !17
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %48, label %27

27:                                               ; preds = %22
  %28 = and i32 %7, 33554432
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  br i1 %29, label %45, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds i8, ptr %31, i64 -1
  %34 = load i8, ptr %33, align 1, !tbaa !17
  %35 = zext i8 %34 to i64
  %36 = icmp eq i8 %34, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = getelementptr inbounds i8, ptr %31, i64 -9
  %39 = load i64, ptr %38, align 1
  br label %40

40:                                               ; preds = %37, %32
  %41 = phi i64 [ %35, %32 ], [ %39, %37 ]
  %42 = sub i64 0, %41
  %43 = getelementptr inbounds i8, ptr %31, i64 %42
  store ptr %43, ptr %30, align 8, !tbaa !17
  %44 = and i32 %7, -33554433
  store i32 %44, ptr %6, align 4, !tbaa !16
  br label %45

45:                                               ; preds = %27, %40
  %46 = phi ptr [ %43, %40 ], [ %31, %27 ]
  tail call void @Perl_safesysfree(ptr noundef %46) #17
  %47 = load ptr, ptr %0, align 8, !tbaa !26
  br label %48

48:                                               ; preds = %22, %45
  %49 = phi ptr [ %23, %22 ], [ %47, %45 ]
  %50 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  store ptr null, ptr %50, align 8, !tbaa !17
  %51 = getelementptr inbounds %struct.xpv, ptr %49, i64 0, i32 3
  store i64 0, ptr %51, align 8, !tbaa !17
  %52 = load ptr, ptr %0, align 8, !tbaa !26
  %53 = getelementptr inbounds %struct.xpv, ptr %52, i64 0, i32 2
  store i64 0, ptr %53, align 8, !tbaa !57
  %54 = load i32, ptr %6, align 4, !tbaa !16
  br label %55

55:                                               ; preds = %48, %14
  %56 = phi i32 [ %54, %48 ], [ %7, %14 ]
  %57 = and i32 %56, 255
  %58 = icmp ugt i32 %57, 8
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 9)
  %60 = load i32, ptr %6, align 4, !tbaa !16
  br label %61

61:                                               ; preds = %59, %55
  %62 = phi i32 [ %60, %59 ], [ %56, %55 ]
  %63 = and i32 %62, 1610547455
  store i32 %63, ptr %6, align 4, !tbaa !16
  %64 = and i32 %62, 33554432
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %91, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %68 = load ptr, ptr %67, align 8, !tbaa !17
  %69 = getelementptr inbounds i8, ptr %68, i64 -1
  %70 = load i8, ptr %69, align 1, !tbaa !17
  %71 = zext i8 %70 to i64
  %72 = icmp eq i8 %70, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %66
  %74 = getelementptr inbounds i8, ptr %68, i64 -9
  %75 = load i64, ptr %74, align 1
  br label %76

76:                                               ; preds = %66, %73
  %77 = phi i64 [ %71, %66 ], [ %75, %73 ]
  %78 = load ptr, ptr %0, align 8, !tbaa !26
  %79 = getelementptr inbounds %struct.xpv, ptr %78, i64 0, i32 3
  %80 = load i64, ptr %79, align 8, !tbaa !17
  %81 = add i64 %80, %77
  store i64 %81, ptr %79, align 8, !tbaa !17
  %82 = load ptr, ptr %67, align 8, !tbaa !17
  %83 = sub i64 0, %77
  %84 = getelementptr inbounds i8, ptr %82, i64 %83
  store ptr %84, ptr %67, align 8, !tbaa !17
  %85 = load ptr, ptr %0, align 8, !tbaa !26
  %86 = getelementptr inbounds %struct.xpv, ptr %85, i64 0, i32 2
  %87 = load i64, ptr %86, align 8, !tbaa !57
  %88 = add i64 %87, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %84, ptr nonnull align 1 %68, i64 %88, i1 false)
  %89 = load i32, ptr %6, align 4, !tbaa !16
  %90 = and i32 %89, -33554433
  br label %91

91:                                               ; preds = %76, %61
  %92 = phi i32 [ %90, %76 ], [ %63, %61 ]
  %93 = or i32 %92, 32768
  store i32 %93, ptr %6, align 4, !tbaa !16
  %94 = load ptr, ptr %1, align 8, !tbaa !26
  %95 = getelementptr inbounds %struct.xpvgv, ptr %94, i64 0, i32 5
  %96 = load ptr, ptr %95, align 8, !tbaa !17
  %97 = load ptr, ptr %0, align 8, !tbaa !26
  %98 = getelementptr inbounds %struct.xpvgv, ptr %97, i64 0, i32 5
  store ptr %96, ptr %98, align 8, !tbaa !17
  %99 = load ptr, ptr %0, align 8, !tbaa !26
  %100 = getelementptr inbounds %struct.xpvgv, ptr %99, i64 0, i32 5
  %101 = load ptr, ptr %100, align 8, !tbaa !17
  %102 = icmp eq ptr %101, null
  br i1 %102, label %104, label %103

103:                                              ; preds = %91
  tail call void @Perl_sv_add_backref(ptr noundef nonnull %101, ptr noundef nonnull %0)
  br label %104

104:                                              ; preds = %103, %91
  %105 = load ptr, ptr %1, align 8, !tbaa !26
  %106 = getelementptr inbounds %struct.xpvgv, ptr %105, i64 0, i32 4
  %107 = load ptr, ptr %106, align 8, !tbaa !17
  %108 = getelementptr inbounds %struct.hek, ptr %107, i64 0, i32 2
  %109 = getelementptr inbounds %struct.hek, ptr %107, i64 0, i32 1
  %110 = load i32, ptr %109, align 4, !tbaa !84
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i8, ptr %108, i64 %111
  %113 = getelementptr inbounds i8, ptr %112, i64 1
  %114 = load i8, ptr %113, align 1, !tbaa !17
  %115 = and i8 %114, 1
  %116 = zext i8 %115 to i32
  %117 = shl nuw nsw i32 %116, 29
  %118 = or i32 %117, 1
  tail call void @Perl_gv_name_set(ptr noundef nonnull %0, ptr noundef nonnull %18, i32 noundef %20, i32 noundef %118) #17
  %119 = load i32, ptr %6, align 4, !tbaa !16
  %120 = or i32 %119, 16777216
  store i32 %120, ptr %6, align 4, !tbaa !16
  br label %121

121:                                              ; preds = %10, %104, %3
  %122 = getelementptr inbounds %struct.gv, ptr %1, i64 0, i32 3
  %123 = load ptr, ptr %122, align 8, !tbaa !17
  %124 = icmp eq ptr %123, null
  br i1 %124, label %170, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.gp, ptr %123, i64 0, i32 3
  %127 = load i32, ptr %126, align 8, !tbaa !61
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %struct.gp, ptr %123, i64 0, i32 2
  %130 = load ptr, ptr %129, align 8, !tbaa !23
  %131 = icmp eq ptr %130, null
  br i1 %128, label %145, label %132

132:                                              ; preds = %125
  br i1 %131, label %140, label %133

133:                                              ; preds = %132
  %134 = getelementptr inbounds %struct.sv, ptr %130, i64 0, i32 1
  %135 = load i32, ptr %134, align 8, !tbaa !13
  %136 = icmp ugt i32 %135, 1
  br i1 %136, label %137, label %139

137:                                              ; preds = %133
  %138 = add i32 %135, -1
  store i32 %138, ptr %134, align 8, !tbaa !13
  br label %140

139:                                              ; preds = %133
  tail call void @Perl_sv_free2(ptr noundef nonnull %130, i32 noundef %135)
  br label %140

140:                                              ; preds = %132, %137, %139
  %141 = load ptr, ptr %122, align 8, !tbaa !17
  %142 = getelementptr inbounds %struct.gp, ptr %141, i64 0, i32 2
  store ptr null, ptr %142, align 8, !tbaa !23
  %143 = load ptr, ptr %122, align 8, !tbaa !17
  %144 = getelementptr inbounds %struct.gp, ptr %143, i64 0, i32 3
  store i32 0, ptr %144, align 8, !tbaa !61
  br label %170

145:                                              ; preds = %125
  br i1 %131, label %170, label %146

146:                                              ; preds = %145
  %147 = load ptr, ptr %0, align 8, !tbaa !26
  %148 = getelementptr inbounds %struct.xpvgv, ptr %147, i64 0, i32 5
  %149 = load ptr, ptr %148, align 8, !tbaa !17
  %150 = icmp eq ptr %149, null
  br i1 %150, label %170, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %struct.hv, ptr %149, i64 0, i32 2
  %153 = load i32, ptr %152, align 4, !tbaa !64
  %154 = and i32 %153, 33554432
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %170, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %struct.hv, ptr %149, i64 0, i32 3
  %158 = load ptr, ptr %157, align 8, !tbaa !17
  %159 = load ptr, ptr %149, align 8, !tbaa !66
  %160 = getelementptr inbounds %struct.xpvhv, ptr %159, i64 0, i32 3
  %161 = load i64, ptr %160, align 8, !tbaa !48
  %162 = add i64 %161, 1
  %163 = getelementptr inbounds ptr, ptr %158, i64 %162
  %164 = load ptr, ptr %163, align 8, !tbaa !17
  %165 = icmp eq ptr %164, null
  br i1 %165, label %170, label %166

166:                                              ; preds = %156
  %167 = getelementptr inbounds %struct.xpvhv_aux, ptr %163, i64 0, i32 4
  %168 = load i32, ptr %167, align 4, !tbaa !67
  %169 = icmp eq i32 %168, -1
  br i1 %169, label %170, label %207

170:                                              ; preds = %121, %145, %146, %151, %156, %166, %140
  %171 = getelementptr inbounds %struct.gv, ptr %0, i64 0, i32 3
  %172 = load ptr, ptr %171, align 8, !tbaa !17
  %173 = icmp eq ptr %172, null
  br i1 %173, label %207, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %struct.gp, ptr %172, i64 0, i32 3
  %176 = load i32, ptr %175, align 8, !tbaa !61
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %207

178:                                              ; preds = %174
  %179 = getelementptr inbounds %struct.gp, ptr %172, i64 0, i32 2
  %180 = load ptr, ptr %179, align 8, !tbaa !23
  %181 = icmp eq ptr %180, null
  br i1 %181, label %207, label %182

182:                                              ; preds = %178
  %183 = load ptr, ptr %0, align 8, !tbaa !26
  %184 = getelementptr inbounds %struct.xpvgv, ptr %183, i64 0, i32 5
  %185 = load ptr, ptr %184, align 8, !tbaa !17
  %186 = icmp eq ptr %185, null
  br i1 %186, label %207, label %187

187:                                              ; preds = %182
  %188 = getelementptr inbounds %struct.hv, ptr %185, i64 0, i32 2
  %189 = load i32, ptr %188, align 4, !tbaa !64
  %190 = and i32 %189, 33554432
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %207, label %192

192:                                              ; preds = %187
  %193 = getelementptr inbounds %struct.hv, ptr %185, i64 0, i32 3
  %194 = load ptr, ptr %193, align 8, !tbaa !17
  %195 = load ptr, ptr %185, align 8, !tbaa !66
  %196 = getelementptr inbounds %struct.xpvhv, ptr %195, i64 0, i32 3
  %197 = load i64, ptr %196, align 8, !tbaa !48
  %198 = add i64 %197, 1
  %199 = getelementptr inbounds ptr, ptr %194, i64 %198
  %200 = load ptr, ptr %199, align 8, !tbaa !17
  %201 = icmp eq ptr %200, null
  br i1 %201, label %207, label %202

202:                                              ; preds = %192
  %203 = getelementptr inbounds %struct.xpvhv_aux, ptr %199, i64 0, i32 4
  %204 = load i32, ptr %203, align 4, !tbaa !67
  %205 = icmp ne i32 %204, -1
  %206 = zext i1 %205 to i32
  br label %207

207:                                              ; preds = %202, %166, %187, %192, %174, %182, %178, %170
  %208 = phi i32 [ 0, %174 ], [ 0, %192 ], [ 0, %187 ], [ 0, %182 ], [ 0, %178 ], [ 0, %170 ], [ 1, %166 ], [ %206, %202 ]
  br i1 %4, label %209, label %329

209:                                              ; preds = %207
  %210 = load ptr, ptr %0, align 8, !tbaa !9
  %211 = getelementptr inbounds %struct.xpvgv, ptr %210, i64 0, i32 4
  %212 = load ptr, ptr %211, align 8, !tbaa !17
  %213 = getelementptr inbounds %struct.hek, ptr %212, i64 0, i32 2
  %214 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %213, ptr noundef nonnull dereferenceable(4) @.str.14) #18
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %239

216:                                              ; preds = %209
  %217 = getelementptr inbounds %struct.xpvgv, ptr %210, i64 0, i32 5
  %218 = load ptr, ptr %217, align 8, !tbaa !17
  %219 = icmp eq ptr %218, null
  br i1 %219, label %239, label %220

220:                                              ; preds = %216
  %221 = getelementptr inbounds %struct.hv, ptr %218, i64 0, i32 2
  %222 = load i32, ptr %221, align 4, !tbaa !64
  %223 = and i32 %222, 33554432
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %239, label %225

225:                                              ; preds = %220
  %226 = getelementptr inbounds %struct.hv, ptr %218, i64 0, i32 3
  %227 = load ptr, ptr %226, align 8, !tbaa !17
  %228 = load ptr, ptr %218, align 8, !tbaa !66
  %229 = getelementptr inbounds %struct.xpvhv, ptr %228, i64 0, i32 3
  %230 = load i64, ptr %229, align 8, !tbaa !48
  %231 = add i64 %230, 1
  %232 = getelementptr inbounds ptr, ptr %227, i64 %231
  %233 = load ptr, ptr %232, align 8, !tbaa !17
  %234 = icmp eq ptr %233, null
  br i1 %234, label %239, label %235

235:                                              ; preds = %225
  %236 = getelementptr inbounds %struct.xpvhv_aux, ptr %232, i64 0, i32 4
  %237 = load i32, ptr %236, align 4, !tbaa !67
  %238 = icmp eq i32 %237, -1
  br i1 %238, label %239, label %296

239:                                              ; preds = %220, %225, %235, %216, %209
  %240 = getelementptr inbounds %struct.hek, ptr %212, i64 0, i32 1
  %241 = load i32, ptr %240, align 4, !tbaa !84
  %242 = sext i32 %241 to i64
  %243 = icmp ugt i32 %241, 1
  br i1 %243, label %244, label %254

244:                                              ; preds = %239
  %245 = add nsw i64 %242, -2
  %246 = getelementptr inbounds i8, ptr %213, i64 %245
  %247 = load i8, ptr %246, align 1, !tbaa !17
  %248 = icmp eq i8 %247, 58
  br i1 %248, label %249, label %296

249:                                              ; preds = %244
  %250 = add nsw i64 %242, -1
  %251 = getelementptr inbounds i8, ptr %213, i64 %250
  %252 = load i8, ptr %251, align 1, !tbaa !17
  %253 = icmp eq i8 %252, 58
  br i1 %253, label %259, label %296

254:                                              ; preds = %239
  %255 = icmp eq i32 %241, 1
  br i1 %255, label %256, label %296

256:                                              ; preds = %254
  %257 = load i8, ptr %213, align 1, !tbaa !17
  %258 = icmp eq i8 %257, 58
  br i1 %258, label %259, label %296

259:                                              ; preds = %256, %249
  %260 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %261 = load ptr, ptr %260, align 8, !tbaa !17
  %262 = getelementptr inbounds %struct.gp, ptr %261, i64 0, i32 5
  %263 = load ptr, ptr %262, align 8, !tbaa !22
  %264 = icmp eq ptr %263, null
  br i1 %264, label %296, label %265

265:                                              ; preds = %259
  %266 = getelementptr inbounds %struct.sv, ptr %263, i64 0, i32 2
  %267 = load i32, ptr %266, align 4, !tbaa !16
  %268 = and i32 %267, 134283264
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %278, label %270

270:                                              ; preds = %265
  %271 = icmp eq ptr %263, @PL_sv_undef
  %272 = icmp eq ptr %263, @PL_sv_yes
  %273 = or i1 %271, %272
  %274 = icmp eq ptr %263, @PL_sv_no
  %275 = or i1 %274, %273
  %276 = icmp eq ptr %263, @PL_sv_placeholder
  %277 = or i1 %276, %275
  br i1 %277, label %292, label %278

278:                                              ; preds = %270, %265
  %279 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %280 = add nsw i64 %279, 1
  store i64 %280, ptr @PL_tmps_ix, align 8, !tbaa !60
  %281 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %282 = icmp slt i64 %280, %281
  br i1 %282, label %286, label %283

283:                                              ; preds = %278
  %284 = tail call i64 @Perl_tmps_grow_p(i64 noundef %280) #17
  %285 = load i32, ptr %266, align 4, !tbaa !16
  br label %286

286:                                              ; preds = %283, %278
  %287 = phi i32 [ %285, %283 ], [ %267, %278 ]
  %288 = phi i64 [ %284, %283 ], [ %280, %278 ]
  %289 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %290 = getelementptr inbounds ptr, ptr %289, i64 %288
  store ptr %263, ptr %290, align 8, !tbaa !9
  %291 = or i32 %287, 524288
  store i32 %291, ptr %266, align 4, !tbaa !16
  br label %292

292:                                              ; preds = %270, %286
  %293 = getelementptr inbounds %struct.sv, ptr %263, i64 0, i32 1
  %294 = load i32, ptr %293, align 8, !tbaa !13
  %295 = add i32 %294, 1
  store i32 %295, ptr %293, align 8, !tbaa !13
  br label %296

296:                                              ; preds = %244, %249, %259, %292, %256, %254, %235
  %297 = phi ptr [ %263, %292 ], [ null, %259 ], [ null, %256 ], [ null, %254 ], [ null, %235 ], [ null, %249 ], [ null, %244 ]
  %298 = phi i32 [ 3, %292 ], [ 3, %259 ], [ %208, %256 ], [ %208, %254 ], [ 2, %235 ], [ %208, %249 ], [ %208, %244 ]
  %299 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %300 = load i32, ptr %299, align 4, !tbaa !16
  %301 = and i32 %300, 134283264
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %311, label %303

303:                                              ; preds = %296
  %304 = icmp eq ptr %0, @PL_sv_undef
  %305 = icmp eq ptr %0, @PL_sv_yes
  %306 = or i1 %304, %305
  %307 = icmp eq ptr %0, @PL_sv_no
  %308 = or i1 %307, %306
  %309 = icmp eq ptr %0, @PL_sv_placeholder
  %310 = or i1 %309, %308
  br i1 %310, label %325, label %311

311:                                              ; preds = %303, %296
  %312 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %313 = add nsw i64 %312, 1
  store i64 %313, ptr @PL_tmps_ix, align 8, !tbaa !60
  %314 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %315 = icmp slt i64 %313, %314
  br i1 %315, label %319, label %316

316:                                              ; preds = %311
  %317 = tail call i64 @Perl_tmps_grow_p(i64 noundef %313) #17
  %318 = load i32, ptr %299, align 4, !tbaa !16
  br label %319

319:                                              ; preds = %316, %311
  %320 = phi i32 [ %318, %316 ], [ %300, %311 ]
  %321 = phi i64 [ %317, %316 ], [ %313, %311 ]
  %322 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %323 = getelementptr inbounds ptr, ptr %322, i64 %321
  store ptr %0, ptr %323, align 8, !tbaa !9
  %324 = or i32 %320, 524288
  store i32 %324, ptr %299, align 4, !tbaa !16
  br label %325

325:                                              ; preds = %303, %319
  %326 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  %327 = load i32, ptr %326, align 8, !tbaa !13
  %328 = add i32 %327, 1
  store i32 %328, ptr %326, align 8, !tbaa !13
  br label %329

329:                                              ; preds = %325, %207
  %330 = phi ptr [ %297, %325 ], [ null, %207 ]
  %331 = phi i32 [ %298, %325 ], [ %208, %207 ]
  tail call void @Perl_push_scope() #17
  %332 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 1
  %333 = load i32, ptr %332, align 8, !tbaa !13
  %334 = add i32 %333, 1
  store i32 %334, ptr %332, align 8, !tbaa !13
  tail call void @Perl_save_pushptr(ptr noundef nonnull %1, i32 noundef 11) #17
  tail call void @Perl_gp_free(ptr noundef nonnull %0) #17
  %335 = load ptr, ptr %0, align 8, !tbaa !26
  %336 = getelementptr inbounds %struct.xpvgv, ptr %335, i64 0, i32 2
  %337 = load i64, ptr %336, align 8, !tbaa !69
  %338 = and i64 %337, -2
  store i64 %338, ptr %336, align 8, !tbaa !69
  %339 = load ptr, ptr %122, align 8, !tbaa !17
  %340 = tail call ptr @Perl_gp_ref(ptr noundef %339) #17
  %341 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  store ptr %340, ptr %341, align 8, !tbaa !17
  tail call void @Perl_pop_scope() #17
  %342 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %343 = load i32, ptr %342, align 4, !tbaa !16
  %344 = and i32 %343, 14680064
  %345 = icmp ne i32 %344, 0
  %346 = and i32 %343, 255
  %347 = icmp ugt i32 %346, 6
  %348 = and i1 %345, %347
  br i1 %348, label %349, label %369

349:                                              ; preds = %329
  %350 = load ptr, ptr %1, align 8, !tbaa !26
  %351 = getelementptr inbounds %struct.xpvmg, ptr %350, i64 0, i32 1
  %352 = load ptr, ptr %351, align 8, !tbaa !17
  %353 = icmp eq ptr %352, null
  br i1 %353, label %369, label %354

354:                                              ; preds = %349
  %355 = tail call ptr @Perl_mg_find(ptr noundef nonnull %1, i32 noundef 116) #17
  %356 = icmp eq ptr %355, null
  br i1 %356, label %369, label %357

357:                                              ; preds = %354
  %358 = getelementptr inbounds %struct.magic, ptr %355, i64 0, i32 5
  %359 = load i64, ptr %358, align 8, !tbaa !76
  %360 = and i64 %359, 1
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %369, label %362

362:                                              ; preds = %357
  %363 = load i8, ptr @PL_tainting, align 1, !range !74
  %364 = icmp eq i8 %363, 0
  %365 = load i8, ptr @PL_tainted, align 1, !range !74
  %366 = icmp eq i8 %365, 0
  %367 = select i1 %364, i1 true, i1 %366
  br i1 %367, label %369, label %368

368:                                              ; preds = %362
  tail call void @Perl_sv_magic(ptr noundef nonnull %0, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0)
  br label %369

369:                                              ; preds = %354, %357, %349, %368, %362, %329
  %370 = load ptr, ptr %0, align 8, !tbaa !26
  %371 = getelementptr inbounds %struct.xpvgv, ptr %370, i64 0, i32 2
  %372 = load i64, ptr %371, align 8, !tbaa !69
  %373 = and i64 %372, 240
  %374 = icmp eq i64 %373, 240
  br i1 %374, label %384, label %375

375:                                              ; preds = %369
  %376 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %377 = getelementptr inbounds %struct.cop, ptr %376, i64 0, i32 8
  %378 = load ptr, ptr %377, align 8, !tbaa !124
  %379 = getelementptr inbounds %struct.xpvgv, ptr %370, i64 0, i32 5
  %380 = load ptr, ptr %379, align 8, !tbaa !17
  %381 = icmp eq ptr %378, %380
  %382 = or i64 %372, 240
  %383 = select i1 %381, i64 %372, i64 %382
  br label %384

384:                                              ; preds = %375, %369
  %385 = phi i64 [ %372, %369 ], [ %383, %375 ]
  %386 = or i64 %385, 2
  store i64 %386, ptr %371, align 8, !tbaa !69
  switch i32 %331, label %461 [
    i32 2, label %387
    i32 3, label %434
    i32 0, label %464
  ]

387:                                              ; preds = %384
  %388 = load ptr, ptr %122, align 8, !tbaa !17
  %389 = getelementptr inbounds %struct.gp, ptr %388, i64 0, i32 6
  %390 = load ptr, ptr %389, align 8, !tbaa !21
  %391 = icmp eq ptr %390, null
  br i1 %391, label %430, label %392

392:                                              ; preds = %387
  %393 = load ptr, ptr %341, align 8, !tbaa !17
  %394 = getelementptr inbounds %struct.gp, ptr %393, i64 0, i32 6
  %395 = load ptr, ptr %394, align 8, !tbaa !21
  %396 = getelementptr inbounds %struct.sv, ptr %395, i64 0, i32 2
  %397 = load i32, ptr %396, align 4, !tbaa !16
  %398 = and i32 %397, 4194304
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %429, label %400

400:                                              ; preds = %392
  %401 = tail call ptr @Perl_mg_find(ptr noundef nonnull %395, i32 noundef 73) #17
  %402 = icmp eq ptr %401, null
  br i1 %402, label %429, label %403

403:                                              ; preds = %400
  %404 = getelementptr inbounds %struct.magic, ptr %401, i64 0, i32 6
  %405 = load ptr, ptr %404, align 8, !tbaa !113
  %406 = getelementptr inbounds %struct.sv, ptr %405, i64 0, i32 2
  %407 = load i32, ptr %406, align 4, !tbaa !16
  %408 = and i32 %407, 255
  %409 = icmp eq i32 %408, 11
  br i1 %409, label %424, label %410

410:                                              ; preds = %403
  %411 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %412 = icmp eq ptr %411, null
  br i1 %412, label %417, label %413

413:                                              ; preds = %410
  %414 = load ptr, ptr %411, align 8, !tbaa !26
  store ptr %414, ptr @PL_sv_root, align 8, !tbaa !9
  %415 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %416 = add nsw i64 %415, 1
  store i64 %416, ptr @PL_sv_count, align 8, !tbaa !60
  br label %419

417:                                              ; preds = %410
  %418 = tail call fastcc ptr @S_more_sv()
  br label %419

419:                                              ; preds = %413, %417
  %420 = phi ptr [ %411, %413 ], [ %418, %417 ]
  store ptr null, ptr %420, align 8, !tbaa !26
  %421 = getelementptr inbounds %struct.sv, ptr %420, i64 0, i32 1
  store i32 1, ptr %421, align 8, !tbaa !13
  %422 = getelementptr inbounds %struct.sv, ptr %420, i64 0, i32 2
  store i32 0, ptr %422, align 4, !tbaa !16
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %420, i32 noundef 11)
  %423 = load ptr, ptr %404, align 8, !tbaa !113
  tail call void @Perl_av_push(ptr noundef nonnull %420, ptr noundef %423) #17
  store ptr %420, ptr %404, align 8, !tbaa !113
  br label %424

424:                                              ; preds = %419, %403
  %425 = phi ptr [ %420, %419 ], [ %405, %403 ]
  %426 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  %427 = load i32, ptr %426, align 8, !tbaa !13
  %428 = add i32 %427, 1
  store i32 %428, ptr %426, align 8, !tbaa !13
  tail call void @Perl_av_push(ptr noundef nonnull %425, ptr noundef nonnull %0) #17
  br label %430

429:                                              ; preds = %400, %392
  tail call void @Perl_sv_magic(ptr noundef nonnull %395, ptr noundef nonnull %0, i32 noundef 73, ptr noundef null, i32 noundef 0)
  br label %430

430:                                              ; preds = %424, %429, %387
  %431 = load ptr, ptr %0, align 8, !tbaa !26
  %432 = getelementptr inbounds %struct.xpvgv, ptr %431, i64 0, i32 5
  %433 = load ptr, ptr %432, align 8, !tbaa !17
  tail call void @Perl_mro_isa_changed_in(ptr noundef %433) #17
  br label %464

434:                                              ; preds = %384
  %435 = load ptr, ptr %341, align 8, !tbaa !17
  %436 = getelementptr inbounds %struct.gp, ptr %435, i64 0, i32 5
  %437 = load ptr, ptr %436, align 8, !tbaa !22
  %438 = icmp eq ptr %330, null
  br i1 %438, label %458, label %439

439:                                              ; preds = %434
  %440 = getelementptr inbounds %struct.hv, ptr %330, i64 0, i32 2
  %441 = load i32, ptr %440, align 4, !tbaa !64
  %442 = and i32 %441, 33554432
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %464, label %444

444:                                              ; preds = %439
  %445 = getelementptr inbounds %struct.hv, ptr %330, i64 0, i32 3
  %446 = load ptr, ptr %445, align 8, !tbaa !17
  %447 = load ptr, ptr %330, align 8, !tbaa !66
  %448 = getelementptr inbounds %struct.xpvhv, ptr %447, i64 0, i32 3
  %449 = load i64, ptr %448, align 8, !tbaa !48
  %450 = add i64 %449, 1
  %451 = getelementptr inbounds ptr, ptr %446, i64 %450
  %452 = load ptr, ptr %451, align 8, !tbaa !17
  %453 = icmp eq ptr %452, null
  br i1 %453, label %464, label %454

454:                                              ; preds = %444
  %455 = getelementptr inbounds %struct.xpvhv_aux, ptr %451, i64 0, i32 4
  %456 = load i32, ptr %455, align 4, !tbaa !67
  %457 = icmp eq i32 %456, -1
  br i1 %457, label %464, label %460

458:                                              ; preds = %434
  %459 = icmp eq ptr %437, null
  br i1 %459, label %464, label %460

460:                                              ; preds = %454, %458
  tail call void @Perl_mro_package_moved(ptr noundef %437, ptr noundef %330, ptr noundef nonnull %0, i32 noundef 0) #17
  br label %464

461:                                              ; preds = %384
  %462 = getelementptr inbounds %struct.xpvgv, ptr %370, i64 0, i32 5
  %463 = load ptr, ptr %462, align 8, !tbaa !17
  tail call void @Perl_mro_method_changed_in(ptr noundef %463) #17
  br label %464

464:                                              ; preds = %430, %461, %454, %444, %439, %460, %458, %384
  %465 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %466 = load i32, ptr %465, align 4, !tbaa !16
  %467 = and i32 %466, 255
  %468 = add nsw i32 %467, -9
  %469 = icmp ult i32 %468, 2
  br i1 %469, label %470, label %480

470:                                              ; preds = %464
  %471 = load ptr, ptr %341, align 8, !tbaa !17
  %472 = icmp eq ptr %471, null
  br i1 %472, label %480, label %473

473:                                              ; preds = %470
  %474 = getelementptr inbounds %struct.gp, ptr %471, i64 0, i32 1
  %475 = load ptr, ptr %474, align 8, !tbaa !24
  %476 = icmp ne ptr %475, null
  %477 = and i1 %4, %476
  br i1 %477, label %478, label %480

478:                                              ; preds = %473
  %479 = load ptr, ptr @PL_stashcache, align 8, !tbaa !9
  tail call void @Perl_hv_clear(ptr noundef %479) #17
  br label %480

480:                                              ; preds = %464, %470, %478, %473
  ret void
}

declare void @Perl_ck_warner(i32 noundef, ptr noundef, ...) local_unnamed_addr #3

declare ptr @Perl_gv_fetchsv(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare void @Perl_gp_free(ptr noundef) local_unnamed_addr #3

declare ptr @Perl_gp_ref(ptr noundef) local_unnamed_addr #3

declare ptr @Perl_reg_temp_copy(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_setsv_mg(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  tail call void @Perl_sv_setsv_flags(ptr noundef %0, ptr noundef %1, i32 noundef 1538)
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 4194304
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = tail call i32 @Perl_mg_set(ptr noundef nonnull %0) #17
  br label %9

9:                                                ; preds = %7, %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_setsv_cow(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = load ptr, ptr %1, align 8, !tbaa !26
  %4 = getelementptr inbounds %struct.xpv, ptr %3, i64 0, i32 2
  %5 = load i64, ptr %4, align 8, !tbaa !57
  %6 = getelementptr inbounds %struct.xpv, ptr %3, i64 0, i32 3
  %7 = load i64, ptr %6, align 8, !tbaa !17
  %8 = icmp eq ptr %0, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !16
  %12 = and i32 %11, 427886592
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %0, i32 noundef 4)
  br label %59

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = icmp eq ptr %17, null
  br i1 %18, label %59, label %19

19:                                               ; preds = %15
  tail call void @Perl_safesysfree(ptr noundef nonnull %17) #17
  br label %59

20:                                               ; preds = %2
  %21 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %52

23:                                               ; preds = %20
  %24 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %25 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %25, ptr %24, align 8, !tbaa !26
  %26 = getelementptr inbounds %struct.sv, ptr %24, i64 0, i32 1
  store i32 170, ptr %26, align 8, !tbaa !13
  %27 = getelementptr inbounds %struct.sv, ptr %24, i64 0, i32 2
  store i32 0, ptr %27, align 4, !tbaa !16
  store ptr %24, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %28 = getelementptr inbounds %struct.sv, ptr %24, i64 1
  store ptr %28, ptr @PL_sv_root, align 8, !tbaa !9
  br label %29

29:                                               ; preds = %29, %23
  %30 = phi ptr [ %28, %23 ], [ %47, %29 ]
  %31 = phi i64 [ 1, %23 ], [ %46, %29 ]
  %32 = getelementptr inbounds %struct.sv, ptr %30, i64 1
  store ptr %32, ptr %30, align 8, !tbaa !26
  %33 = getelementptr inbounds %struct.sv, ptr %24, i64 %31, i32 2
  store i32 255, ptr %33, align 4, !tbaa !16
  %34 = add nuw nsw i64 %31, 1
  %35 = getelementptr inbounds %struct.sv, ptr %24, i64 %34
  %36 = getelementptr inbounds %struct.sv, ptr %35, i64 1
  store ptr %36, ptr %35, align 8, !tbaa !26
  %37 = getelementptr inbounds %struct.sv, ptr %24, i64 %34, i32 2
  store i32 255, ptr %37, align 4, !tbaa !16
  %38 = add nuw nsw i64 %31, 2
  %39 = getelementptr inbounds %struct.sv, ptr %24, i64 %38
  %40 = getelementptr inbounds %struct.sv, ptr %39, i64 1
  store ptr %40, ptr %39, align 8, !tbaa !26
  %41 = getelementptr inbounds %struct.sv, ptr %24, i64 %38, i32 2
  store i32 255, ptr %41, align 4, !tbaa !16
  %42 = add nuw nsw i64 %31, 3
  %43 = getelementptr inbounds %struct.sv, ptr %24, i64 %42
  %44 = getelementptr inbounds %struct.sv, ptr %43, i64 1
  store ptr %44, ptr %43, align 8, !tbaa !26
  %45 = getelementptr inbounds %struct.sv, ptr %24, i64 %42, i32 2
  store i32 255, ptr %45, align 4, !tbaa !16
  %46 = add nuw nsw i64 %31, 4
  %47 = getelementptr inbounds %struct.sv, ptr %24, i64 %46
  %48 = icmp eq i64 %46, 169
  br i1 %48, label %49, label %29, !llvm.loop !59

49:                                               ; preds = %29
  store ptr null, ptr %47, align 8, !tbaa !26
  %50 = getelementptr inbounds %struct.sv, ptr %24, i64 169, i32 2
  store i32 255, ptr %50, align 4, !tbaa !16
  %51 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %52

52:                                               ; preds = %20, %49
  %53 = phi ptr [ %51, %49 ], [ %21, %20 ]
  %54 = load ptr, ptr %53, align 8, !tbaa !26
  store ptr %54, ptr @PL_sv_root, align 8, !tbaa !9
  %55 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %56 = add nsw i64 %55, 1
  store i64 %56, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %53, align 8, !tbaa !26
  %57 = getelementptr inbounds %struct.sv, ptr %53, i64 0, i32 1
  store i32 1, ptr %57, align 8, !tbaa !13
  %58 = getelementptr inbounds %struct.sv, ptr %53, i64 0, i32 2
  store i32 0, ptr %58, align 4, !tbaa !16
  br label %59

59:                                               ; preds = %14, %19, %15, %52
  %60 = phi ptr [ %0, %14 ], [ %0, %19 ], [ %0, %15 ], [ %53, %52 ]
  %61 = getelementptr inbounds %struct.sv, ptr %60, i64 0, i32 2
  %62 = load i32, ptr %61, align 4, !tbaa !16
  %63 = and i32 %62, 255
  %64 = icmp ugt i32 %63, 2
  br i1 %64, label %66, label %65

65:                                               ; preds = %59
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %60, i32 noundef 3)
  br label %66

66:                                               ; preds = %65, %59
  %67 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !16
  %69 = and i32 %68, 268435456
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %82, label %71

71:                                               ; preds = %66
  %72 = load ptr, ptr %1, align 8, !tbaa !26
  %73 = getelementptr inbounds %struct.xpv, ptr %72, i64 0, i32 3
  %74 = load i64, ptr %73, align 8, !tbaa !17
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %100

76:                                               ; preds = %71
  %77 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 3
  %78 = load ptr, ptr %77, align 8, !tbaa !17
  %79 = getelementptr inbounds i8, ptr %78, i64 -16
  %80 = load i64, ptr %79, align 8, !tbaa !17
  %81 = add i64 %80, 1
  store i64 %81, ptr %79, align 8, !tbaa !17
  br label %108

82:                                               ; preds = %66
  %83 = and i32 %68, 255
  %84 = icmp ugt i32 %83, 2
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %1, i32 noundef 3)
  %86 = load i32, ptr %67, align 4, !tbaa !16
  br label %87

87:                                               ; preds = %85, %82
  %88 = phi i32 [ %86, %85 ], [ %68, %82 ]
  %89 = or i32 %88, 268435456
  store i32 %89, ptr %67, align 4, !tbaa !16
  %90 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 3
  %91 = load ptr, ptr %90, align 8, !tbaa !17
  %92 = load ptr, ptr %1, align 8, !tbaa !26
  %93 = getelementptr inbounds %struct.xpv, ptr %92, i64 0, i32 3
  %94 = load i64, ptr %93, align 8, !tbaa !17
  %95 = getelementptr inbounds i8, ptr %91, i64 %94
  %96 = getelementptr inbounds i8, ptr %95, i64 -1
  store i8 0, ptr %96, align 1, !tbaa !17
  %97 = load ptr, ptr %1, align 8, !tbaa !26
  %98 = getelementptr inbounds %struct.xpv, ptr %97, i64 0, i32 3
  %99 = load i64, ptr %98, align 8, !tbaa !17
  br label %100

100:                                              ; preds = %71, %87
  %101 = phi i64 [ %74, %71 ], [ %99, %87 ]
  %102 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !17
  %104 = getelementptr inbounds i8, ptr %103, i64 %101
  %105 = getelementptr inbounds i8, ptr %104, i64 -1
  %106 = load i8, ptr %105, align 1, !tbaa !17
  %107 = add i8 %106, 1
  store i8 %107, ptr %105, align 1, !tbaa !17
  br label %108

108:                                              ; preds = %76, %100
  %109 = phi ptr [ %77, %76 ], [ %102, %100 ]
  %110 = load ptr, ptr %109, align 8, !tbaa !17
  %111 = getelementptr inbounds %struct.sv, ptr %60, i64 0, i32 3
  store ptr %110, ptr %111, align 8, !tbaa !17
  store i32 268452867, ptr %61, align 4, !tbaa !16
  %112 = load i32, ptr %67, align 4, !tbaa !16
  %113 = and i32 %112, 536870912
  %114 = or i32 %113, 268452867
  store i32 %114, ptr %61, align 4
  %115 = load ptr, ptr %60, align 8, !tbaa !26
  %116 = getelementptr inbounds %struct.xpv, ptr %115, i64 0, i32 3
  store i64 %7, ptr %116, align 8, !tbaa !17
  %117 = load ptr, ptr %60, align 8, !tbaa !26
  %118 = getelementptr inbounds %struct.xpv, ptr %117, i64 0, i32 2
  store i64 %5, ptr %118, align 8, !tbaa !57
  ret ptr %60
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_more_sv() unnamed_addr #1 {
  %1 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %2 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %2, ptr %1, align 8, !tbaa !26
  %3 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 1
  store i32 170, ptr %3, align 8, !tbaa !13
  %4 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  store i32 0, ptr %4, align 4, !tbaa !16
  store ptr %1, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %5 = getelementptr inbounds %struct.sv, ptr %1, i64 1
  store ptr %5, ptr @PL_sv_root, align 8, !tbaa !9
  br label %6

6:                                                ; preds = %6, %0
  %7 = phi ptr [ %5, %0 ], [ %24, %6 ]
  %8 = phi i64 [ 1, %0 ], [ %23, %6 ]
  %9 = getelementptr inbounds %struct.sv, ptr %7, i64 1
  store ptr %9, ptr %7, align 8, !tbaa !26
  %10 = getelementptr inbounds %struct.sv, ptr %1, i64 %8, i32 2
  store i32 255, ptr %10, align 4, !tbaa !16
  %11 = add nuw nsw i64 %8, 1
  %12 = getelementptr inbounds %struct.sv, ptr %1, i64 %11
  %13 = getelementptr inbounds %struct.sv, ptr %12, i64 1
  store ptr %13, ptr %12, align 8, !tbaa !26
  %14 = getelementptr inbounds %struct.sv, ptr %1, i64 %11, i32 2
  store i32 255, ptr %14, align 4, !tbaa !16
  %15 = add nuw nsw i64 %8, 2
  %16 = getelementptr inbounds %struct.sv, ptr %1, i64 %15
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 1
  store ptr %17, ptr %16, align 8, !tbaa !26
  %18 = getelementptr inbounds %struct.sv, ptr %1, i64 %15, i32 2
  store i32 255, ptr %18, align 4, !tbaa !16
  %19 = add nuw nsw i64 %8, 3
  %20 = getelementptr inbounds %struct.sv, ptr %1, i64 %19
  %21 = getelementptr inbounds %struct.sv, ptr %20, i64 1
  store ptr %21, ptr %20, align 8, !tbaa !26
  %22 = getelementptr inbounds %struct.sv, ptr %1, i64 %19, i32 2
  store i32 255, ptr %22, align 4, !tbaa !16
  %23 = add nuw nsw i64 %8, 4
  %24 = getelementptr inbounds %struct.sv, ptr %1, i64 %23
  %25 = icmp eq i64 %23, 169
  br i1 %25, label %26, label %6, !llvm.loop !59

26:                                               ; preds = %6
  store ptr null, ptr %24, align 8, !tbaa !26
  %27 = getelementptr inbounds %struct.sv, ptr %1, i64 169, i32 2
  store i32 255, ptr %27, align 4, !tbaa !16
  %28 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %29 = load ptr, ptr %28, align 8, !tbaa !26
  store ptr %29, ptr @PL_sv_root, align 8, !tbaa !9
  %30 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %31 = add nsw i64 %30, 1
  store i64 %31, ptr @PL_sv_count, align 8, !tbaa !60
  ret ptr %28
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_setpvn_mg(ptr noundef %0, ptr noundef %1, i64 noundef %2) local_unnamed_addr #1 {
  tail call void @Perl_sv_setpvn(ptr noundef %0, ptr noundef %1, i64 noundef %2)
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 4194304
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = tail call i32 @Perl_mg_set(ptr noundef nonnull %0) #17
  br label %10

10:                                               ; preds = %8, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_setpv(ptr noundef %0, ptr noundef readonly %1) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 427886592
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %0, i32 noundef 4)
  br label %8

8:                                                ; preds = %7, %2
  %9 = icmp eq ptr %1, null
  br i1 %9, label %10, label %38

10:                                               ; preds = %8
  %11 = load i32, ptr %3, align 4, !tbaa !16
  %12 = and i32 %11, 1610547455
  store i32 %12, ptr %3, align 4, !tbaa !16
  %13 = and i32 %11, 33554432
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %88, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = getelementptr inbounds i8, ptr %17, i64 -1
  %19 = load i8, ptr %18, align 1, !tbaa !17
  %20 = zext i8 %19 to i64
  %21 = icmp eq i8 %19, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %15
  %23 = getelementptr inbounds i8, ptr %17, i64 -9
  %24 = load i64, ptr %23, align 1
  br label %25

25:                                               ; preds = %15, %22
  %26 = phi i64 [ %20, %15 ], [ %24, %22 ]
  %27 = load ptr, ptr %0, align 8, !tbaa !26
  %28 = getelementptr inbounds %struct.xpv, ptr %27, i64 0, i32 3
  %29 = load i64, ptr %28, align 8, !tbaa !17
  %30 = add i64 %29, %26
  store i64 %30, ptr %28, align 8, !tbaa !17
  %31 = load ptr, ptr %16, align 8, !tbaa !17
  %32 = sub i64 0, %26
  %33 = getelementptr inbounds i8, ptr %31, i64 %32
  store ptr %33, ptr %16, align 8, !tbaa !17
  %34 = load ptr, ptr %0, align 8, !tbaa !26
  %35 = getelementptr inbounds %struct.xpv, ptr %34, i64 0, i32 2
  %36 = load i64, ptr %35, align 8, !tbaa !57
  %37 = add i64 %36, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %33, ptr nonnull align 1 %17, i64 %37, i1 false)
  br label %83

38:                                               ; preds = %8
  %39 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #18
  %40 = load i32, ptr %3, align 4, !tbaa !16
  %41 = and i32 %40, 255
  %42 = icmp ugt i32 %41, 2
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 3)
  %44 = load i32, ptr %3, align 4, !tbaa !16
  br label %45

45:                                               ; preds = %43, %38
  %46 = phi i32 [ %44, %43 ], [ %40, %38 ]
  %47 = and i32 %46, 268435456
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = add i64 %39, 1
  br label %57

51:                                               ; preds = %45
  %52 = load ptr, ptr %0, align 8, !tbaa !26
  %53 = getelementptr inbounds %struct.xpv, ptr %52, i64 0, i32 3
  %54 = load i64, ptr %53, align 8, !tbaa !17
  %55 = add i64 %39, 1
  %56 = icmp ult i64 %54, %55
  br i1 %56, label %57, label %60

57:                                               ; preds = %49, %51
  %58 = phi i64 [ %50, %49 ], [ %55, %51 ]
  %59 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %58)
  br label %60

60:                                               ; preds = %51, %57
  %61 = phi i64 [ %55, %51 ], [ %58, %57 ]
  %62 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %63 = load ptr, ptr %62, align 8, !tbaa !17
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %63, ptr nonnull align 1 %1, i64 %61, i1 false)
  %64 = load ptr, ptr %0, align 8, !tbaa !26
  %65 = getelementptr inbounds %struct.xpv, ptr %64, i64 0, i32 2
  store i64 %39, ptr %65, align 8, !tbaa !57
  %66 = load i32, ptr %3, align 4, !tbaa !16
  %67 = and i32 %66, 2147418367
  %68 = or i32 %67, 17408
  store i32 %68, ptr %3, align 4, !tbaa !16
  %69 = load i8, ptr @PL_tainting, align 1, !tbaa !5, !range !74, !noundef !75
  %70 = icmp eq i8 %69, 0
  %71 = load i8, ptr @PL_tainted, align 1, !range !74
  %72 = icmp eq i8 %71, 0
  %73 = select i1 %70, i1 true, i1 %72
  br i1 %73, label %76, label %74

74:                                               ; preds = %60
  tail call void @Perl_sv_magic(ptr noundef nonnull %0, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0)
  %75 = load i32, ptr %3, align 4, !tbaa !16
  br label %76

76:                                               ; preds = %74, %60
  %77 = phi i32 [ %75, %74 ], [ %68, %60 ]
  %78 = and i32 %77, 255
  %79 = icmp eq i32 %78, 13
  br i1 %79, label %80, label %88

80:                                               ; preds = %76
  %81 = load ptr, ptr %0, align 8, !tbaa !26
  %82 = getelementptr inbounds %struct.xpvcv, ptr %81, i64 0, i32 12
  br label %83

83:                                               ; preds = %25, %80
  %84 = phi ptr [ %82, %80 ], [ %3, %25 ]
  %85 = phi i32 [ -8193, %80 ], [ -33554433, %25 ]
  %86 = load i32, ptr %84, align 4, !tbaa !25
  %87 = and i32 %86, %85
  store i32 %87, ptr %84, align 4, !tbaa !25
  br label %88

88:                                               ; preds = %83, %76, %10
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_setpv_mg(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  tail call void @Perl_sv_setpv(ptr noundef %0, ptr noundef %1)
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 4194304
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = tail call i32 @Perl_mg_set(ptr noundef nonnull %0) #17
  br label %9

9:                                                ; preds = %7, %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_sethek(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = alloca i64, align 8
  %4 = icmp eq ptr %1, null
  br i1 %4, label %103, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.hek, ptr %1, i64 0, i32 1
  %7 = load i32, ptr %6, align 4, !tbaa !84
  %8 = icmp eq i32 %7, -2
  %9 = getelementptr inbounds %struct.hek, ptr %1, i64 0, i32 2
  br i1 %8, label %10, label %12

10:                                               ; preds = %5
  %11 = load ptr, ptr %9, align 4, !tbaa !9
  tail call void @Perl_sv_setsv_flags(ptr noundef %0, ptr noundef %11, i32 noundef 1538)
  br label %103

12:                                               ; preds = %5
  %13 = sext i32 %7 to i64
  %14 = getelementptr inbounds i8, ptr %9, i64 %13
  %15 = getelementptr inbounds i8, ptr %14, i64 1
  %16 = load i8, ptr %15, align 1, !tbaa !17
  %17 = zext i8 %16 to i32
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %12
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #17
  store i64 %13, ptr %3, align 8, !tbaa !60
  %21 = call ptr @Perl_bytes_to_utf8(ptr noundef nonnull %9, ptr noundef nonnull %3) #17
  %22 = load i64, ptr %3, align 8, !tbaa !60
  call void @Perl_sv_usepvn_flags(ptr noundef %0, ptr noundef %21, i64 noundef %22, i32 noundef 256)
  %23 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %24 = load i32, ptr %23, align 4, !tbaa !16
  %25 = or i32 %24, 536870912
  store i32 %25, ptr %23, align 4, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #17
  br label %103

26:                                               ; preds = %12
  %27 = and i32 %17, 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %43, label %29

29:                                               ; preds = %26
  tail call void @Perl_sv_setpvn(ptr noundef %0, ptr noundef nonnull %9, i64 noundef %13)
  %30 = load i32, ptr %6, align 4, !tbaa !84
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, ptr %9, i64 %31
  %33 = getelementptr inbounds i8, ptr %32, i64 1
  %34 = load i8, ptr %33, align 1, !tbaa !17
  %35 = and i8 %34, 1
  %36 = icmp eq i8 %35, 0
  %37 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %38 = load i32, ptr %37, align 4, !tbaa !16
  br i1 %36, label %41, label %39

39:                                               ; preds = %29
  %40 = or i32 %38, 536870912
  store i32 %40, ptr %37, align 4, !tbaa !16
  br label %103

41:                                               ; preds = %29
  %42 = and i32 %38, -536870913
  store i32 %42, ptr %37, align 4, !tbaa !16
  br label %103

43:                                               ; preds = %26
  %44 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %45 = load i32, ptr %44, align 4, !tbaa !16
  %46 = and i32 %45, 427886592
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %43
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %0, i32 noundef 4)
  %49 = load i32, ptr %44, align 4, !tbaa !16
  br label %50

50:                                               ; preds = %48, %43
  %51 = phi i32 [ %49, %48 ], [ %45, %43 ]
  %52 = and i32 %51, 255
  %53 = icmp ugt i32 %52, 2
  br i1 %53, label %55, label %54

54:                                               ; preds = %50
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 3)
  br label %55

55:                                               ; preds = %54, %50
  %56 = load ptr, ptr %0, align 8, !tbaa !26
  %57 = getelementptr inbounds %struct.xpv, ptr %56, i64 0, i32 3
  %58 = load i64, ptr %57, align 8, !tbaa !17
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %81, label %60

60:                                               ; preds = %55
  %61 = load i32, ptr %44, align 4, !tbaa !16
  %62 = and i32 %61, 33554432
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8, !tbaa !17
  br i1 %63, label %79, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds i8, ptr %65, i64 -1
  %68 = load i8, ptr %67, align 1, !tbaa !17
  %69 = zext i8 %68 to i64
  %70 = icmp eq i8 %68, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = getelementptr inbounds i8, ptr %65, i64 -9
  %73 = load i64, ptr %72, align 1
  br label %74

74:                                               ; preds = %71, %66
  %75 = phi i64 [ %69, %66 ], [ %73, %71 ]
  %76 = sub i64 0, %75
  %77 = getelementptr inbounds i8, ptr %65, i64 %76
  store ptr %77, ptr %64, align 8, !tbaa !17
  %78 = and i32 %61, -33554433
  store i32 %78, ptr %44, align 4, !tbaa !16
  br label %79

79:                                               ; preds = %60, %74
  %80 = phi ptr [ %77, %74 ], [ %65, %60 ]
  tail call void @Perl_safesysfree(ptr noundef %80) #17
  br label %81

81:                                               ; preds = %55, %79
  %82 = getelementptr inbounds i8, ptr %1, i64 -8
  %83 = load i64, ptr %82, align 8, !tbaa !17
  %84 = add i64 %83, 1
  store i64 %84, ptr %82, align 8, !tbaa !17
  %85 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  store ptr %9, ptr %85, align 8, !tbaa !17
  %86 = load i32, ptr %6, align 4, !tbaa !84
  %87 = sext i32 %86 to i64
  %88 = load ptr, ptr %0, align 8, !tbaa !26
  %89 = getelementptr inbounds %struct.xpv, ptr %88, i64 0, i32 2
  store i64 %87, ptr %89, align 8, !tbaa !57
  %90 = getelementptr inbounds %struct.xpv, ptr %88, i64 0, i32 3
  store i64 0, ptr %90, align 8, !tbaa !17
  %91 = load i32, ptr %44, align 4, !tbaa !16
  %92 = or i32 %91, 268452864
  store i32 %92, ptr %44, align 4, !tbaa !16
  %93 = load i32, ptr %6, align 4, !tbaa !84
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i8, ptr %9, i64 %94
  %96 = getelementptr inbounds i8, ptr %95, i64 1
  %97 = load i8, ptr %96, align 1, !tbaa !17
  %98 = and i8 %97, 1
  %99 = icmp eq i8 %98, 0
  %100 = and i32 %92, -536870913
  %101 = or i32 %91, 805323776
  %102 = select i1 %99, i32 %100, i32 %101
  store i32 %102, ptr %44, align 4, !tbaa !16
  br label %103

103:                                              ; preds = %20, %81, %41, %39, %2, %10
  ret void
}

declare ptr @Perl_bytes_to_utf8(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_usepvn_flags(ptr noundef %0, ptr noundef %1, i64 noundef %2, i32 noundef %3) local_unnamed_addr #1 {
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !16
  %7 = and i32 %6, 427886592
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %0, i32 noundef 4)
  %10 = load i32, ptr %5, align 4, !tbaa !16
  br label %11

11:                                               ; preds = %9, %4
  %12 = phi i32 [ %10, %9 ], [ %6, %4 ]
  %13 = and i32 %12, 255
  %14 = icmp ugt i32 %13, 2
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 3)
  br label %16

16:                                               ; preds = %15, %11
  %17 = icmp eq ptr %1, null
  br i1 %17, label %18, label %55

18:                                               ; preds = %16
  %19 = load i32, ptr %5, align 4, !tbaa !16
  %20 = and i32 %19, 1610547455
  store i32 %20, ptr %5, align 4, !tbaa !16
  %21 = and i32 %19, 33554432
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %48, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = getelementptr inbounds i8, ptr %25, i64 -1
  %27 = load i8, ptr %26, align 1, !tbaa !17
  %28 = zext i8 %27 to i64
  %29 = icmp eq i8 %27, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %23
  %31 = getelementptr inbounds i8, ptr %25, i64 -9
  %32 = load i64, ptr %31, align 1
  br label %33

33:                                               ; preds = %23, %30
  %34 = phi i64 [ %28, %23 ], [ %32, %30 ]
  %35 = load ptr, ptr %0, align 8, !tbaa !26
  %36 = getelementptr inbounds %struct.xpv, ptr %35, i64 0, i32 3
  %37 = load i64, ptr %36, align 8, !tbaa !17
  %38 = add i64 %37, %34
  store i64 %38, ptr %36, align 8, !tbaa !17
  %39 = load ptr, ptr %24, align 8, !tbaa !17
  %40 = sub i64 0, %34
  %41 = getelementptr inbounds i8, ptr %39, i64 %40
  store ptr %41, ptr %24, align 8, !tbaa !17
  %42 = load ptr, ptr %0, align 8, !tbaa !26
  %43 = getelementptr inbounds %struct.xpv, ptr %42, i64 0, i32 2
  %44 = load i64, ptr %43, align 8, !tbaa !57
  %45 = add i64 %44, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %41, ptr nonnull align 1 %25, i64 %45, i1 false)
  %46 = load i32, ptr %5, align 4, !tbaa !16
  %47 = and i32 %46, -33554433
  store i32 %47, ptr %5, align 4, !tbaa !16
  br label %48

48:                                               ; preds = %33, %18
  %49 = phi i32 [ %47, %33 ], [ %20, %18 ]
  %50 = and i32 %3, 128
  %51 = icmp eq i32 %50, 0
  %52 = and i32 %49, 4194304
  %53 = icmp eq i32 %52, 0
  %54 = select i1 %51, i1 true, i1 %53
  br i1 %54, label %120, label %118

55:                                               ; preds = %16
  %56 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !17
  %58 = icmp eq ptr %57, null
  br i1 %58, label %83, label %59

59:                                               ; preds = %55
  %60 = load ptr, ptr %0, align 8, !tbaa !26
  %61 = getelementptr inbounds %struct.xpv, ptr %60, i64 0, i32 3
  %62 = load i64, ptr %61, align 8, !tbaa !17
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %83, label %64

64:                                               ; preds = %59
  %65 = load i32, ptr %5, align 4, !tbaa !16
  %66 = and i32 %65, 33554432
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %81, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds i8, ptr %57, i64 -1
  %70 = load i8, ptr %69, align 1, !tbaa !17
  %71 = zext i8 %70 to i64
  %72 = icmp eq i8 %70, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %68
  %74 = getelementptr inbounds i8, ptr %57, i64 -9
  %75 = load i64, ptr %74, align 1
  br label %76

76:                                               ; preds = %73, %68
  %77 = phi i64 [ %71, %68 ], [ %75, %73 ]
  %78 = sub i64 0, %77
  %79 = getelementptr inbounds i8, ptr %57, i64 %78
  store ptr %79, ptr %56, align 8, !tbaa !17
  %80 = and i32 %65, -33554433
  store i32 %80, ptr %5, align 4, !tbaa !16
  br label %81

81:                                               ; preds = %64, %76
  %82 = phi ptr [ %57, %64 ], [ %79, %76 ]
  tail call void @Perl_safesysfree(ptr noundef %82) #17
  br label %83

83:                                               ; preds = %59, %81, %55
  %84 = and i32 %3, 256
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %92, label %86

86:                                               ; preds = %83
  %87 = add i64 %2, 1
  %88 = load ptr, ptr %0, align 8, !tbaa !26
  %89 = getelementptr inbounds %struct.xpv, ptr %88, i64 0, i32 3
  store i64 %87, ptr %89, align 8, !tbaa !17
  %90 = load ptr, ptr %0, align 8, !tbaa !26
  %91 = getelementptr inbounds %struct.xpv, ptr %90, i64 0, i32 2
  store i64 %2, ptr %91, align 8, !tbaa !57
  store ptr %1, ptr %56, align 8, !tbaa !17
  br label %101

92:                                               ; preds = %83
  %93 = and i64 %2, -8
  %94 = add i64 %93, 8
  %95 = tail call ptr @Perl_safesysrealloc(ptr noundef nonnull %1, i64 noundef %94) #17
  %96 = load ptr, ptr %0, align 8, !tbaa !26
  %97 = getelementptr inbounds %struct.xpv, ptr %96, i64 0, i32 3
  store i64 %94, ptr %97, align 8, !tbaa !17
  %98 = load ptr, ptr %0, align 8, !tbaa !26
  %99 = getelementptr inbounds %struct.xpv, ptr %98, i64 0, i32 2
  store i64 %2, ptr %99, align 8, !tbaa !57
  store ptr %95, ptr %56, align 8, !tbaa !17
  %100 = getelementptr inbounds i8, ptr %95, i64 %2
  store i8 0, ptr %100, align 1, !tbaa !17
  br label %101

101:                                              ; preds = %86, %92
  %102 = load i32, ptr %5, align 4, !tbaa !16
  %103 = and i32 %102, 2147418367
  %104 = or i32 %103, 17408
  store i32 %104, ptr %5, align 4, !tbaa !16
  %105 = load i8, ptr @PL_tainting, align 1, !tbaa !5, !range !74, !noundef !75
  %106 = icmp eq i8 %105, 0
  %107 = load i8, ptr @PL_tainted, align 1, !range !74
  %108 = icmp eq i8 %107, 0
  %109 = select i1 %106, i1 true, i1 %108
  br i1 %109, label %111, label %110

110:                                              ; preds = %101
  tail call void @Perl_sv_magic(ptr noundef nonnull %0, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0)
  br label %111

111:                                              ; preds = %110, %101
  %112 = and i32 %3, 128
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %120, label %114

114:                                              ; preds = %111
  %115 = load i32, ptr %5, align 4, !tbaa !16
  %116 = and i32 %115, 4194304
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %114, %48
  %119 = tail call i32 @Perl_mg_set(ptr noundef nonnull %0) #17
  br label %120

120:                                              ; preds = %118, %111, %114, %48
  ret void
}

declare void @Perl_croak_no_modify() local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @Perl_sv_unmagic(ptr noundef %0, i32 noundef %1) local_unnamed_addr #1 {
  tail call fastcc void @S_sv_unmagicext_flags(ptr noundef %0, i32 noundef %1, ptr noundef null, i32 noundef 0)
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_chop(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %99, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !16
  %7 = and i32 %6, 16384
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %99, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = ptrtoint ptr %1 to i64
  %13 = ptrtoint ptr %11 to i64
  %14 = sub i64 %12, %13
  %15 = icmp eq ptr %11, %1
  br i1 %15, label %99, label %16

16:                                               ; preds = %9
  %17 = load ptr, ptr %0, align 8, !tbaa !26
  %18 = getelementptr inbounds %struct.xpv, ptr %17, i64 0, i32 3
  %19 = load i64, ptr %18, align 8, !tbaa !17
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.xpv, ptr %17, i64 0, i32 2
  %23 = load i64, ptr %22, align 8, !tbaa !57
  br label %24

24:                                               ; preds = %16, %21
  %25 = phi i64 [ %23, %21 ], [ %19, %16 ]
  %26 = icmp ugt i64 %14, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = getelementptr inbounds i8, ptr %11, i64 %25
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.23, ptr noundef nonnull %1, ptr noundef %11, ptr noundef %28) #17
  %29 = load i32, ptr %5, align 4, !tbaa !16
  br label %30

30:                                               ; preds = %27, %24
  %31 = phi i32 [ %29, %27 ], [ %6, %24 ]
  %32 = and i32 %31, 427886592
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %0, i32 noundef 0)
  %35 = load i32, ptr %5, align 4, !tbaa !16
  br label %36

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ]
  %38 = and i32 %37, 2147418367
  %39 = or i32 %38, 17408
  store i32 %39, ptr %5, align 4, !tbaa !16
  %40 = and i32 %37, 33554432
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %70

42:                                               ; preds = %36
  %43 = load ptr, ptr %0, align 8, !tbaa !26
  %44 = getelementptr inbounds %struct.xpv, ptr %43, i64 0, i32 3
  %45 = load i64, ptr %44, align 8, !tbaa !17
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %67

47:                                               ; preds = %42
  %48 = load ptr, ptr %10, align 8, !tbaa !17
  %49 = getelementptr inbounds %struct.xpv, ptr %43, i64 0, i32 2
  %50 = load i64, ptr %49, align 8, !tbaa !57
  %51 = and i32 %37, 268435456
  %52 = icmp eq i32 %51, 0
  %53 = icmp eq i64 %50, -1
  %54 = select i1 %52, i1 %53, i1 false
  br i1 %54, label %59, label %55

55:                                               ; preds = %47
  %56 = add i64 %50, 1
  %57 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %56)
  %58 = load ptr, ptr %10, align 8, !tbaa !17
  br label %59

59:                                               ; preds = %47, %55
  %60 = phi ptr [ %48, %47 ], [ %58, %55 ]
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %60, ptr align 1 %48, i64 %50, i1 false)
  %61 = load ptr, ptr %10, align 8, !tbaa !17
  %62 = load ptr, ptr %0, align 8, !tbaa !26
  %63 = getelementptr inbounds %struct.xpv, ptr %62, i64 0, i32 2
  %64 = load i64, ptr %63, align 8, !tbaa !57
  %65 = getelementptr inbounds i8, ptr %61, i64 %64
  store i8 0, ptr %65, align 1, !tbaa !17
  %66 = load i32, ptr %5, align 4, !tbaa !16
  br label %67

67:                                               ; preds = %59, %42
  %68 = phi i32 [ %66, %59 ], [ %39, %42 ]
  %69 = or i32 %68, 33554432
  store i32 %69, ptr %5, align 4, !tbaa !16
  br label %79

70:                                               ; preds = %36
  %71 = load ptr, ptr %10, align 8, !tbaa !17
  %72 = getelementptr inbounds i8, ptr %71, i64 -1
  %73 = load i8, ptr %72, align 1, !tbaa !17
  %74 = zext i8 %73 to i64
  %75 = icmp eq i8 %73, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, ptr %71, i64 -9
  %78 = load i64, ptr %77, align 1
  br label %79

79:                                               ; preds = %67, %70, %76
  %80 = phi i64 [ %74, %70 ], [ %78, %76 ], [ 0, %67 ]
  %81 = load ptr, ptr %0, align 8, !tbaa !26
  %82 = getelementptr inbounds %struct.xpv, ptr %81, i64 0, i32 3
  %83 = load i64, ptr %82, align 8, !tbaa !17
  %84 = sub i64 %83, %14
  store i64 %84, ptr %82, align 8, !tbaa !17
  %85 = load ptr, ptr %0, align 8, !tbaa !26
  %86 = getelementptr inbounds %struct.xpv, ptr %85, i64 0, i32 2
  %87 = load i64, ptr %86, align 8, !tbaa !57
  %88 = sub i64 %87, %14
  store i64 %88, ptr %86, align 8, !tbaa !57
  %89 = load ptr, ptr %10, align 8, !tbaa !17
  %90 = getelementptr inbounds i8, ptr %89, i64 %14
  store ptr %90, ptr %10, align 8, !tbaa !17
  %91 = add i64 %80, %14
  %92 = icmp ult i64 %91, 256
  br i1 %92, label %93, label %96

93:                                               ; preds = %79
  %94 = trunc i64 %91 to i8
  %95 = getelementptr inbounds i8, ptr %90, i64 -1
  store i8 %94, ptr %95, align 1, !tbaa !17
  br label %99

96:                                               ; preds = %79
  %97 = getelementptr inbounds i8, ptr %90, i64 -1
  store i8 0, ptr %97, align 1, !tbaa !17
  %98 = getelementptr inbounds i8, ptr %90, i64 -9
  store i64 %91, ptr %98, align 1
  br label %99

99:                                               ; preds = %93, %96, %9, %2, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_catpvn_flags(ptr noundef %0, ptr noundef readonly %1, i64 noundef %2, i32 noundef %3) local_unnamed_addr #1 {
  %5 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #17
  %6 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !16
  %8 = and i32 %7, 430018304
  %9 = icmp eq i32 %8, 1024
  br i1 %9, label %10, label %16

10:                                               ; preds = %4
  %11 = load ptr, ptr %0, align 8, !tbaa !26
  %12 = getelementptr inbounds %struct.xpv, ptr %11, i64 0, i32 2
  %13 = load i64, ptr %12, align 8, !tbaa !57
  store i64 %13, ptr %5, align 8, !tbaa !60
  %14 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  br label %19

16:                                               ; preds = %4
  %17 = call ptr @Perl_sv_pvn_force_flags(ptr noundef nonnull %0, ptr noundef nonnull %5, i32 noundef %3)
  %18 = load i32, ptr %6, align 4, !tbaa !16
  br label %19

19:                                               ; preds = %16, %10
  %20 = phi i32 [ %7, %10 ], [ %18, %16 ]
  %21 = phi ptr [ %15, %10 ], [ %17, %16 ]
  %22 = and i32 %3, 16384
  %23 = icmp eq i32 %22, 0
  %24 = and i32 %20, 536870912
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %23, i1 true, i1 %25
  br i1 %26, label %27, label %67

27:                                               ; preds = %19
  %28 = and i32 %3, 32768
  %29 = icmp ne i32 %28, 0
  %30 = and i32 %20, 536870912
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %29, i1 %31, i1 false
  br i1 %32, label %33, label %39

33:                                               ; preds = %27
  %34 = add i64 %2, 1
  %35 = call i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef nonnull %0, i32 noundef 0, i64 noundef %34)
  %36 = load ptr, ptr %0, align 8, !tbaa !26
  %37 = getelementptr inbounds %struct.xpv, ptr %36, i64 0, i32 2
  %38 = load i64, ptr %37, align 8, !tbaa !57
  store i64 %38, ptr %5, align 8, !tbaa !60
  br label %56

39:                                               ; preds = %27
  %40 = and i32 %20, 268435456
  %41 = icmp eq i32 %40, 0
  %42 = load i64, ptr %5, align 8, !tbaa !60
  br i1 %41, label %46, label %43

43:                                               ; preds = %39
  %44 = add i64 %2, 1
  %45 = add i64 %44, %42
  br label %53

46:                                               ; preds = %39
  %47 = load ptr, ptr %0, align 8, !tbaa !26
  %48 = getelementptr inbounds %struct.xpv, ptr %47, i64 0, i32 3
  %49 = load i64, ptr %48, align 8, !tbaa !17
  %50 = add i64 %2, 1
  %51 = add i64 %50, %42
  %52 = icmp ult i64 %49, %51
  br i1 %52, label %53, label %56

53:                                               ; preds = %43, %46
  %54 = phi i64 [ %45, %43 ], [ %51, %46 ]
  %55 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %54)
  br label %56

56:                                               ; preds = %46, %53, %33
  %57 = icmp eq ptr %21, %1
  %58 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !17
  %60 = select i1 %57, ptr %59, ptr %1
  %61 = load i64, ptr %5, align 8, !tbaa !60
  %62 = getelementptr inbounds i8, ptr %59, i64 %61
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %62, ptr align 1 %60, i64 %2, i1 false)
  %63 = load ptr, ptr %0, align 8, !tbaa !26
  %64 = getelementptr inbounds %struct.xpv, ptr %63, i64 0, i32 2
  %65 = load i64, ptr %64, align 8, !tbaa !57
  %66 = add i64 %65, %2
  store i64 %66, ptr %64, align 8, !tbaa !57
  br label %123

67:                                               ; preds = %19
  %68 = getelementptr inbounds i8, ptr %1, i64 %2
  %69 = and i32 %20, 268435456
  %70 = icmp eq i32 %69, 0
  %71 = load i64, ptr %5, align 8, !tbaa !60
  br i1 %70, label %76, label %72

72:                                               ; preds = %67
  %73 = shl i64 %2, 1
  %74 = or i64 %73, 1
  %75 = add i64 %74, %71
  br label %84

76:                                               ; preds = %67
  %77 = load ptr, ptr %0, align 8, !tbaa !26
  %78 = getelementptr inbounds %struct.xpv, ptr %77, i64 0, i32 3
  %79 = load i64, ptr %78, align 8, !tbaa !17
  %80 = shl i64 %2, 1
  %81 = or i64 %80, 1
  %82 = add i64 %81, %71
  %83 = icmp ult i64 %79, %82
  br i1 %83, label %84, label %88

84:                                               ; preds = %72, %76
  %85 = phi i64 [ %75, %72 ], [ %82, %76 ]
  %86 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %85)
  %87 = load i64, ptr %5, align 8, !tbaa !60
  br label %88

88:                                               ; preds = %76, %84
  %89 = phi i64 [ %71, %76 ], [ %87, %84 ]
  %90 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %91 = load ptr, ptr %90, align 8, !tbaa !17
  %92 = getelementptr inbounds i8, ptr %91, i64 %89
  %93 = icmp sgt i64 %2, 0
  br i1 %93, label %94, label %115

94:                                               ; preds = %88, %108
  %95 = phi ptr [ %111, %108 ], [ %1, %88 ]
  %96 = phi ptr [ %110, %108 ], [ %92, %88 ]
  %97 = load i8, ptr %95, align 1, !tbaa !17
  %98 = icmp sgt i8 %97, -1
  br i1 %98, label %99, label %101

99:                                               ; preds = %94
  %100 = getelementptr inbounds i8, ptr %96, i64 1
  br label %108

101:                                              ; preds = %94
  %102 = lshr i8 %97, 6
  %103 = or i8 %102, -64
  %104 = getelementptr inbounds i8, ptr %96, i64 1
  %105 = and i8 %97, 63
  %106 = or i8 %105, -128
  %107 = getelementptr inbounds i8, ptr %96, i64 2
  store i8 %106, ptr %104, align 1, !tbaa !17
  br label %108

108:                                              ; preds = %99, %101
  %109 = phi i8 [ %97, %99 ], [ %103, %101 ]
  %110 = phi ptr [ %100, %99 ], [ %107, %101 ]
  store i8 %109, ptr %96, align 1
  %111 = getelementptr inbounds i8, ptr %95, i64 1
  %112 = icmp ult ptr %111, %68
  br i1 %112, label %94, label %113, !llvm.loop !126

113:                                              ; preds = %108
  %114 = load ptr, ptr %90, align 8, !tbaa !17
  br label %115

115:                                              ; preds = %113, %88
  %116 = phi ptr [ %91, %88 ], [ %114, %113 ]
  %117 = phi ptr [ %92, %88 ], [ %110, %113 ]
  %118 = ptrtoint ptr %117 to i64
  %119 = ptrtoint ptr %116 to i64
  %120 = sub i64 %118, %119
  %121 = load ptr, ptr %0, align 8, !tbaa !26
  %122 = getelementptr inbounds %struct.xpv, ptr %121, i64 0, i32 2
  store i64 %120, ptr %122, align 8, !tbaa !57
  br label %123

123:                                              ; preds = %115, %56
  %124 = phi i64 [ %120, %115 ], [ %66, %56 ]
  %125 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %126 = load ptr, ptr %125, align 8, !tbaa !17
  %127 = getelementptr inbounds i8, ptr %126, i64 %124
  store i8 0, ptr %127, align 1, !tbaa !17
  %128 = load i32, ptr %6, align 4, !tbaa !16
  %129 = and i32 %128, 2147418367
  %130 = or i32 %129, 17408
  store i32 %130, ptr %6, align 4, !tbaa !16
  %131 = load i8, ptr @PL_tainting, align 1, !tbaa !5, !range !74, !noundef !75
  %132 = icmp eq i8 %131, 0
  %133 = load i8, ptr @PL_tainted, align 1, !range !74
  %134 = icmp eq i8 %133, 0
  %135 = select i1 %132, i1 true, i1 %134
  br i1 %135, label %137, label %136

136:                                              ; preds = %123
  call void @Perl_sv_magic(ptr noundef nonnull %0, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0)
  br label %137

137:                                              ; preds = %136, %123
  %138 = and i32 %3, 128
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %146, label %140

140:                                              ; preds = %137
  %141 = load i32, ptr %6, align 4, !tbaa !16
  %142 = and i32 %141, 4194304
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %146, label %144

144:                                              ; preds = %140
  %145 = call i32 @Perl_mg_set(ptr noundef nonnull %0) #17
  br label %146

146:                                              ; preds = %144, %140, %137
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_catsv_flags(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #1 {
  %4 = alloca i64, align 8
  %5 = icmp eq ptr %1, null
  br i1 %5, label %55, label %6

6:                                                ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  %7 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = and i32 %8, 2098176
  %10 = icmp eq i32 %9, 1024
  br i1 %10, label %11, label %17

11:                                               ; preds = %6
  %12 = load ptr, ptr %1, align 8, !tbaa !26
  %13 = getelementptr inbounds %struct.xpv, ptr %12, i64 0, i32 2
  %14 = load i64, ptr %13, align 8, !tbaa !57
  store i64 %14, ptr %4, align 8, !tbaa !60
  %15 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  br label %20

17:                                               ; preds = %6
  %18 = or i32 %2, 32
  %19 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %1, ptr noundef nonnull %4, i32 noundef %18)
  br label %20

20:                                               ; preds = %17, %11
  %21 = phi ptr [ %16, %11 ], [ %19, %17 ]
  %22 = and i32 %2, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %26 = load i32, ptr %25, align 4, !tbaa !16
  %27 = and i32 %26, 2097152
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = call i32 @Perl_mg_get(ptr noundef nonnull %0) #17
  br label %31

31:                                               ; preds = %29, %24, %20
  %32 = load i64, ptr %4, align 8, !tbaa !60
  %33 = load i32, ptr %7, align 4, !tbaa !16
  %34 = and i32 %33, 536870912
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %31
  %37 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %38 = getelementptr inbounds %struct.cop, ptr %37, i64 0, i32 10
  %39 = load i32, ptr %38, align 8, !tbaa !79
  %40 = and i32 %39, 8
  %41 = icmp eq i32 %40, 0
  %42 = select i1 %41, i32 32768, i32 16384
  br label %43

43:                                               ; preds = %36, %31
  %44 = phi i32 [ 16384, %31 ], [ %42, %36 ]
  call void @Perl_sv_catpvn_flags(ptr noundef %0, ptr noundef %21, i64 noundef %32, i32 noundef %44)
  %45 = and i32 %2, 128
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %49 = load i32, ptr %48, align 4, !tbaa !16
  %50 = and i32 %49, 4194304
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %47
  %53 = call i32 @Perl_mg_set(ptr noundef nonnull %0) #17
  br label %54

54:                                               ; preds = %52, %47, %43
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  br label %55

55:                                               ; preds = %54, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_catpv(ptr noundef %0, ptr noundef readonly %1) local_unnamed_addr #1 {
  %3 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #17
  %4 = icmp eq ptr %1, null
  br i1 %4, label %61, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !16
  %8 = and i32 %7, 430018304
  %9 = icmp eq i32 %8, 1024
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = load ptr, ptr %0, align 8, !tbaa !26
  %12 = getelementptr inbounds %struct.xpv, ptr %11, i64 0, i32 2
  %13 = load i64, ptr %12, align 8, !tbaa !57
  store i64 %13, ptr %3, align 8, !tbaa !60
  %14 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  br label %20

16:                                               ; preds = %5
  %17 = call ptr @Perl_sv_pvn_force_flags(ptr noundef nonnull %0, ptr noundef nonnull %3, i32 noundef 2)
  %18 = load i32, ptr %6, align 4, !tbaa !16
  %19 = load i64, ptr %3, align 8, !tbaa !60
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i64 [ %13, %10 ], [ %19, %16 ]
  %22 = phi i32 [ %7, %10 ], [ %18, %16 ]
  %23 = phi ptr [ %15, %10 ], [ %17, %16 ]
  %24 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #18
  %25 = and i32 %22, 268435456
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %20
  %28 = add i64 %24, 1
  %29 = add i64 %28, %21
  br label %37

30:                                               ; preds = %20
  %31 = load ptr, ptr %0, align 8, !tbaa !26
  %32 = getelementptr inbounds %struct.xpv, ptr %31, i64 0, i32 3
  %33 = load i64, ptr %32, align 8, !tbaa !17
  %34 = add i64 %24, 1
  %35 = add i64 %34, %21
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %37, label %40

37:                                               ; preds = %27, %30
  %38 = phi i64 [ %29, %27 ], [ %35, %30 ]
  %39 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %38)
  br label %40

40:                                               ; preds = %30, %37
  %41 = icmp eq ptr %23, %1
  %42 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  %44 = select i1 %41, ptr %43, ptr %1
  %45 = load i64, ptr %3, align 8, !tbaa !60
  %46 = getelementptr inbounds i8, ptr %43, i64 %45
  %47 = add i64 %24, 1
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %46, ptr align 1 %44, i64 %47, i1 false)
  %48 = load ptr, ptr %0, align 8, !tbaa !26
  %49 = getelementptr inbounds %struct.xpv, ptr %48, i64 0, i32 2
  %50 = load i64, ptr %49, align 8, !tbaa !57
  %51 = add i64 %50, %24
  store i64 %51, ptr %49, align 8, !tbaa !57
  %52 = load i32, ptr %6, align 4, !tbaa !16
  %53 = and i32 %52, 2147418367
  %54 = or i32 %53, 17408
  store i32 %54, ptr %6, align 4, !tbaa !16
  %55 = load i8, ptr @PL_tainting, align 1, !tbaa !5, !range !74, !noundef !75
  %56 = icmp eq i8 %55, 0
  %57 = load i8, ptr @PL_tainted, align 1, !range !74
  %58 = icmp eq i8 %57, 0
  %59 = select i1 %56, i1 true, i1 %58
  br i1 %59, label %61, label %60

60:                                               ; preds = %40
  call void @Perl_sv_magic(ptr noundef nonnull %0, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0)
  br label %61

61:                                               ; preds = %40, %60, %2
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_catpv_flags(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #1 {
  %4 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #18
  tail call void @Perl_sv_catpvn_flags(ptr noundef %0, ptr noundef %1, i64 noundef %4, i32 noundef %2)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_catpv_mg(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  tail call void @Perl_sv_catpv(ptr noundef %0, ptr noundef %1)
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 4194304
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = tail call i32 @Perl_mg_set(ptr noundef nonnull %0) #17
  br label %9

9:                                                ; preds = %7, %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSV(i64 noundef %0) local_unnamed_addr #1 {
  %2 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %3 = icmp eq ptr %2, null
  br i1 %3, label %4, label %33

4:                                                ; preds = %1
  %5 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %6 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %6, ptr %5, align 8, !tbaa !26
  %7 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 1
  store i32 170, ptr %7, align 8, !tbaa !13
  %8 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 2
  store i32 0, ptr %8, align 4, !tbaa !16
  store ptr %5, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %9 = getelementptr inbounds %struct.sv, ptr %5, i64 1
  store ptr %9, ptr @PL_sv_root, align 8, !tbaa !9
  br label %10

10:                                               ; preds = %10, %4
  %11 = phi ptr [ %9, %4 ], [ %28, %10 ]
  %12 = phi i64 [ 1, %4 ], [ %27, %10 ]
  %13 = getelementptr inbounds %struct.sv, ptr %11, i64 1
  store ptr %13, ptr %11, align 8, !tbaa !26
  %14 = getelementptr inbounds %struct.sv, ptr %5, i64 %12, i32 2
  store i32 255, ptr %14, align 4, !tbaa !16
  %15 = add nuw nsw i64 %12, 1
  %16 = getelementptr inbounds %struct.sv, ptr %5, i64 %15
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 1
  store ptr %17, ptr %16, align 8, !tbaa !26
  %18 = getelementptr inbounds %struct.sv, ptr %5, i64 %15, i32 2
  store i32 255, ptr %18, align 4, !tbaa !16
  %19 = add nuw nsw i64 %12, 2
  %20 = getelementptr inbounds %struct.sv, ptr %5, i64 %19
  %21 = getelementptr inbounds %struct.sv, ptr %20, i64 1
  store ptr %21, ptr %20, align 8, !tbaa !26
  %22 = getelementptr inbounds %struct.sv, ptr %5, i64 %19, i32 2
  store i32 255, ptr %22, align 4, !tbaa !16
  %23 = add nuw nsw i64 %12, 3
  %24 = getelementptr inbounds %struct.sv, ptr %5, i64 %23
  %25 = getelementptr inbounds %struct.sv, ptr %24, i64 1
  store ptr %25, ptr %24, align 8, !tbaa !26
  %26 = getelementptr inbounds %struct.sv, ptr %5, i64 %23, i32 2
  store i32 255, ptr %26, align 4, !tbaa !16
  %27 = add nuw nsw i64 %12, 4
  %28 = getelementptr inbounds %struct.sv, ptr %5, i64 %27
  %29 = icmp eq i64 %27, 169
  br i1 %29, label %30, label %10, !llvm.loop !59

30:                                               ; preds = %10
  store ptr null, ptr %28, align 8, !tbaa !26
  %31 = getelementptr inbounds %struct.sv, ptr %5, i64 169, i32 2
  store i32 255, ptr %31, align 4, !tbaa !16
  %32 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %33

33:                                               ; preds = %1, %30
  %34 = phi ptr [ %32, %30 ], [ %2, %1 ]
  %35 = load ptr, ptr %34, align 8, !tbaa !26
  store ptr %35, ptr @PL_sv_root, align 8, !tbaa !9
  %36 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %37 = add nsw i64 %36, 1
  store i64 %37, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %34, align 8, !tbaa !26
  %38 = getelementptr inbounds %struct.sv, ptr %34, i64 0, i32 1
  store i32 1, ptr %38, align 8, !tbaa !13
  %39 = getelementptr inbounds %struct.sv, ptr %34, i64 0, i32 2
  store i32 0, ptr %39, align 4, !tbaa !16
  %40 = icmp eq i64 %0, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %33
  %42 = add i64 %0, 1
  %43 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %34, i64 noundef %42)
  br label %44

44:                                               ; preds = %41, %33
  ret ptr %34
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_magicext(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %5) local_unnamed_addr #1 {
  %7 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = and i32 %8, 255
  %10 = icmp ugt i32 %9, 6
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 7)
  br label %12

12:                                               ; preds = %11, %6
  %13 = tail call ptr @Perl_safesyscalloc(i64 noundef 1, i64 noundef 48) #17
  %14 = load ptr, ptr %0, align 8, !tbaa !26
  %15 = getelementptr inbounds %struct.xpvmg, ptr %14, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  store ptr %16, ptr %13, align 8, !tbaa !112
  store ptr %13, ptr %15, align 8, !tbaa !17
  %17 = icmp ne ptr %1, null
  %18 = icmp ne ptr %1, %0
  %19 = and i1 %18, %17
  br i1 %19, label %20, label %51

20:                                               ; preds = %12
  switch i32 %2, label %21 [
    i32 58, label %51
    i32 35, label %51
  ]

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  %24 = and i32 %23, 255
  %25 = icmp eq i32 %24, 9
  br i1 %25, label %26, label %53

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 3
  %28 = load ptr, ptr %27, align 8, !tbaa !17
  %29 = load ptr, ptr %28, align 8, !tbaa !19
  %30 = icmp eq ptr %29, %0
  br i1 %30, label %51, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.gp, ptr %28, i64 0, i32 5
  %33 = load ptr, ptr %32, align 8, !tbaa !22
  %34 = icmp eq ptr %33, %0
  br i1 %34, label %51, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.gp, ptr %28, i64 0, i32 6
  %37 = load ptr, ptr %36, align 8, !tbaa !21
  %38 = icmp eq ptr %37, %0
  br i1 %38, label %51, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.gp, ptr %28, i64 0, i32 2
  %41 = load ptr, ptr %40, align 8, !tbaa !23
  %42 = icmp eq ptr %41, %0
  br i1 %42, label %51, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.gp, ptr %28, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !24
  %46 = icmp eq ptr %45, %0
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.gp, ptr %28, i64 0, i32 7
  %49 = load ptr, ptr %48, align 8, !tbaa !127
  %50 = icmp eq ptr %49, %0
  br i1 %50, label %51, label %53

51:                                               ; preds = %20, %20, %47, %43, %39, %35, %31, %26, %12
  %52 = getelementptr inbounds %struct.magic, ptr %13, i64 0, i32 6
  store ptr %1, ptr %52, align 8, !tbaa !113
  br label %61

53:                                               ; preds = %47, %21
  %54 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 1
  %55 = load i32, ptr %54, align 8, !tbaa !13
  %56 = add i32 %55, 1
  store i32 %56, ptr %54, align 8, !tbaa !13
  %57 = getelementptr inbounds %struct.magic, ptr %13, i64 0, i32 6
  store ptr %1, ptr %57, align 8, !tbaa !113
  %58 = getelementptr inbounds %struct.magic, ptr %13, i64 0, i32 4
  %59 = load i8, ptr %58, align 1, !tbaa !81
  %60 = or i8 %59, 2
  store i8 %60, ptr %58, align 1, !tbaa !81
  br label %61

61:                                               ; preds = %53, %51
  %62 = icmp eq i32 %2, 113
  br i1 %62, label %63, label %95

63:                                               ; preds = %61
  %64 = load i32, ptr %7, align 4, !tbaa !16
  %65 = and i32 %64, 255
  %66 = icmp eq i32 %65, 15
  %67 = and i1 %17, %66
  br i1 %67, label %68, label %95

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %70 = load i32, ptr %69, align 4, !tbaa !16
  %71 = and i32 %70, 2048
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %95, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 3
  %75 = load ptr, ptr %74, align 8, !tbaa !17
  %76 = icmp eq ptr %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct.sv, ptr %75, i64 0, i32 2
  %79 = load i32, ptr %78, align 4, !tbaa !16
  %80 = and i32 %79, 255
  %81 = add nsw i32 %80, -9
  %82 = icmp ult i32 %81, 2
  br i1 %82, label %83, label %90

83:                                               ; preds = %77
  %84 = getelementptr inbounds %struct.sv, ptr %75, i64 0, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !17
  %86 = icmp eq ptr %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.gp, ptr %85, i64 0, i32 1
  %89 = load ptr, ptr %88, align 8, !tbaa !24
  br label %90

90:                                               ; preds = %77, %73, %83, %87
  %91 = phi ptr [ %89, %87 ], [ null, %83 ], [ null, %73 ], [ null, %77 ]
  %92 = icmp eq ptr %91, %0
  br i1 %92, label %93, label %95

93:                                               ; preds = %90
  %94 = tail call ptr @Perl_sv_rvweaken(ptr noundef nonnull %1)
  br label %95

95:                                               ; preds = %93, %90, %68, %63, %61
  %96 = trunc i32 %2 to i8
  %97 = getelementptr inbounds %struct.magic, ptr %13, i64 0, i32 3
  store i8 %96, ptr %97, align 2, !tbaa !114
  %98 = sext i32 %5 to i64
  %99 = getelementptr inbounds %struct.magic, ptr %13, i64 0, i32 5
  store i64 %98, ptr %99, align 8, !tbaa !76
  %100 = icmp eq ptr %4, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %95
  %102 = icmp sgt i32 %5, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %101
  %104 = tail call ptr @Perl_savepvn(ptr noundef nonnull %4, i32 noundef %5) #17
  br label %111

105:                                              ; preds = %101
  %106 = icmp eq i32 %5, -2
  br i1 %106, label %107, label %111

107:                                              ; preds = %105
  %108 = getelementptr inbounds %struct.sv, ptr %4, i64 0, i32 1
  %109 = load i32, ptr %108, align 8, !tbaa !13
  %110 = add i32 %109, 1
  store i32 %110, ptr %108, align 8, !tbaa !13
  br label %111

111:                                              ; preds = %105, %107, %103
  %112 = phi ptr [ %104, %103 ], [ %4, %107 ], [ %4, %105 ]
  %113 = getelementptr inbounds %struct.magic, ptr %13, i64 0, i32 7
  store ptr %112, ptr %113, align 8, !tbaa !109
  br label %114

114:                                              ; preds = %111, %95
  %115 = getelementptr inbounds %struct.magic, ptr %13, i64 0, i32 1
  store ptr %3, ptr %115, align 8, !tbaa !115
  tail call void @Perl_mg_magical(ptr noundef nonnull %0) #17
  ret ptr %13
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_rvweaken(ptr noundef returned %0) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 4, !tbaa !16
  %4 = and i32 %3, 65280
  %5 = icmp ne i32 %4, 0
  %6 = and i32 %3, 255
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7
  %9 = and i32 %3, 16826623
  %10 = icmp eq i32 %9, 16777226
  %11 = or i1 %10, %8
  br i1 %11, label %12, label %35

12:                                               ; preds = %1
  %13 = and i32 %3, 2048
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.25) #17
  br label %24

16:                                               ; preds = %12
  %17 = and i32 %3, -2147481600
  %18 = icmp eq i32 %17, -2147481600
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 12, ptr noundef nonnull @.str.26) #17
  br label %35

20:                                               ; preds = %16
  %21 = and i32 %3, 134283264
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  tail call void @Perl_croak_no_modify() #17
  br label %24

24:                                               ; preds = %23, %20, %15
  %25 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  tail call void @Perl_sv_add_backref(ptr noundef %26, ptr noundef nonnull %0)
  %27 = load i32, ptr %2, align 4, !tbaa !16
  %28 = or i32 %27, -2147481600
  store i32 %28, ptr %2, align 4, !tbaa !16
  %29 = getelementptr inbounds %struct.sv, ptr %26, i64 0, i32 1
  %30 = load i32, ptr %29, align 8, !tbaa !13
  %31 = icmp ugt i32 %30, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %24
  %33 = add i32 %30, -1
  store i32 %33, ptr %29, align 8, !tbaa !13
  br label %35

34:                                               ; preds = %24
  tail call void @Perl_sv_free2(ptr noundef nonnull %26, i32 noundef %30)
  br label %35

35:                                               ; preds = %34, %32, %1, %19
  ret ptr %0
}

declare void @Perl_mg_magical(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_magicext_mglob(ptr noundef %0) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 4, !tbaa !16
  %4 = and i32 %3, 255
  %5 = icmp eq i32 %4, 10
  br i1 %5, label %6, label %18

6:                                                ; preds = %1
  %7 = load ptr, ptr %0, align 8, !tbaa !26
  %8 = getelementptr inbounds %struct.xpvlv, ptr %7, i64 0, i32 9
  %9 = load i8, ptr %8, align 8, !tbaa !40
  %10 = icmp eq i8 %9, 121
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  tail call void @Perl_vivify_defelem(ptr noundef nonnull %0) #17
  %12 = load ptr, ptr %0, align 8, !tbaa !26
  %13 = getelementptr inbounds %struct.xpvlv, ptr %12, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !128
  %15 = getelementptr inbounds %struct.sv, ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !16
  %17 = and i32 %16, 255
  br label %18

18:                                               ; preds = %11, %1
  %19 = phi i32 [ %17, %11 ], [ %4, %1 ]
  %20 = phi ptr [ %14, %11 ], [ %0, %1 ]
  %21 = icmp ugt i32 %19, 6
  br i1 %21, label %23, label %22

22:                                               ; preds = %18
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %20, i32 noundef 7) #20
  br label %23

23:                                               ; preds = %6, %18, %22
  %24 = phi ptr [ %20, %18 ], [ %20, %22 ], [ %0, %6 ]
  %25 = tail call ptr @Perl_safesyscalloc(i64 noundef 1, i64 noundef 48) #17
  %26 = load ptr, ptr %24, align 8, !tbaa !26
  %27 = getelementptr inbounds %struct.xpvmg, ptr %26, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !17
  store ptr %28, ptr %25, align 8, !tbaa !112
  store ptr %25, ptr %27, align 8, !tbaa !17
  %29 = getelementptr inbounds %struct.magic, ptr %25, i64 0, i32 6
  store ptr null, ptr %29, align 8, !tbaa !113
  %30 = getelementptr inbounds %struct.magic, ptr %25, i64 0, i32 3
  store i8 103, ptr %30, align 2, !tbaa !114
  %31 = getelementptr inbounds %struct.magic, ptr %25, i64 0, i32 5
  store i64 0, ptr %31, align 8, !tbaa !76
  %32 = getelementptr inbounds %struct.magic, ptr %25, i64 0, i32 1
  store ptr getelementptr inbounds ([31 x %struct.mgvtbl], ptr @PL_magic_vtables, i64 0, i64 15), ptr %32, align 8, !tbaa !115
  tail call void @Perl_mg_magical(ptr noundef nonnull %24) #17
  ret ptr %25
}

declare void @Perl_vivify_defelem(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_sv_unmagicext_flags(ptr noundef %0, i32 noundef %1, ptr noundef readnone %2, i32 noundef %3) unnamed_addr #1 {
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !16
  %7 = and i32 %6, 255
  %8 = icmp ult i32 %7, 7
  br i1 %8, label %97, label %9

9:                                                ; preds = %4
  %10 = load ptr, ptr %0, align 8, !tbaa !26
  %11 = getelementptr inbounds %struct.xpvmg, ptr %10, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = icmp eq ptr %12, null
  br i1 %13, label %97, label %14

14:                                               ; preds = %9
  %15 = icmp eq i32 %3, 0
  br label %16

16:                                               ; preds = %14, %78
  %17 = phi ptr [ %11, %14 ], [ %79, %78 ]
  %18 = phi ptr [ %12, %14 ], [ %80, %78 ]
  %19 = getelementptr inbounds %struct.magic, ptr %18, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !115
  %21 = getelementptr inbounds %struct.magic, ptr %18, i64 0, i32 3
  %22 = load i8, ptr %21, align 2, !tbaa !114
  %23 = sext i8 %22 to i32
  %24 = icmp eq i32 %23, %1
  %25 = icmp eq ptr %20, %2
  %26 = select i1 %15, i1 true, i1 %25
  %27 = select i1 %24, i1 %26, i1 false
  br i1 %27, label %28, label %78

28:                                               ; preds = %16
  %29 = load ptr, ptr %18, align 8, !tbaa !112
  store ptr %29, ptr %17, align 8, !tbaa !9
  %30 = icmp eq ptr %20, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.mgvtbl, ptr %20, i64 0, i32 4
  %33 = load ptr, ptr %32, align 8, !tbaa !129
  %34 = icmp eq ptr %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = tail call i32 %33(ptr noundef nonnull %0, ptr noundef nonnull %18) #17
  br label %37

37:                                               ; preds = %35, %31, %28
  %38 = getelementptr inbounds %struct.magic, ptr %18, i64 0, i32 7
  %39 = load ptr, ptr %38, align 8, !tbaa !109
  %40 = icmp eq ptr %39, null
  br i1 %40, label %61, label %41

41:                                               ; preds = %37
  %42 = load i8, ptr %21, align 2, !tbaa !114
  %43 = icmp eq i8 %42, 103
  br i1 %43, label %61, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.magic, ptr %18, i64 0, i32 5
  %46 = load i64, ptr %45, align 8, !tbaa !76
  %47 = icmp sgt i64 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  tail call void @Perl_safesysfree(ptr noundef nonnull %39) #17
  br label %61

49:                                               ; preds = %44
  %50 = icmp eq i64 %46, -2
  br i1 %50, label %51, label %58

51:                                               ; preds = %49
  %52 = getelementptr inbounds %struct.sv, ptr %39, i64 0, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !13
  %54 = icmp ugt i32 %53, 1
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = add i32 %53, -1
  store i32 %56, ptr %52, align 8, !tbaa !13
  br label %61

57:                                               ; preds = %51
  tail call void @Perl_sv_free2(ptr noundef nonnull %39, i32 noundef %53)
  br label %61

58:                                               ; preds = %49
  %59 = icmp eq i8 %42, 119
  br i1 %59, label %60, label %61

60:                                               ; preds = %58
  tail call void @Perl_safesysfree(ptr noundef nonnull %39) #17
  br label %61

61:                                               ; preds = %57, %55, %48, %58, %60, %41, %37
  %62 = getelementptr inbounds %struct.magic, ptr %18, i64 0, i32 4
  %63 = load i8, ptr %62, align 1, !tbaa !81
  %64 = and i8 %63, 2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %77, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct.magic, ptr %18, i64 0, i32 6
  %68 = load ptr, ptr %67, align 8, !tbaa !113
  %69 = icmp eq ptr %68, null
  br i1 %69, label %77, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.sv, ptr %68, i64 0, i32 1
  %72 = load i32, ptr %71, align 8, !tbaa !13
  %73 = icmp ugt i32 %72, 1
  br i1 %73, label %74, label %76

74:                                               ; preds = %70
  %75 = add i32 %72, -1
  store i32 %75, ptr %71, align 8, !tbaa !13
  br label %77

76:                                               ; preds = %70
  tail call void @Perl_sv_free2(ptr noundef nonnull %68, i32 noundef %72)
  br label %77

77:                                               ; preds = %76, %74, %66, %61
  tail call void @Perl_safesysfree(ptr noundef nonnull %18) #17
  br label %78

78:                                               ; preds = %16, %77
  %79 = phi ptr [ %17, %77 ], [ %18, %16 ]
  %80 = load ptr, ptr %79, align 8, !tbaa !9
  %81 = icmp eq ptr %80, null
  br i1 %81, label %82, label %16, !llvm.loop !131

82:                                               ; preds = %78
  %83 = load ptr, ptr %0, align 8, !tbaa !26
  %84 = getelementptr inbounds %struct.xpvmg, ptr %83, i64 0, i32 1
  %85 = load ptr, ptr %84, align 8, !tbaa !17
  %86 = icmp eq ptr %85, null
  %87 = load i32, ptr %5, align 4, !tbaa !16
  br i1 %86, label %92, label %88

88:                                               ; preds = %82
  %89 = and i32 %87, 14680064
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %97, label %91

91:                                               ; preds = %88
  tail call void @Perl_mg_magical(ptr noundef nonnull %0) #17
  br label %97

92:                                               ; preds = %82
  %93 = and i32 %87, -14680065
  %94 = lshr i32 %87, 4
  %95 = and i32 %94, 1792
  %96 = or i32 %95, %93
  store i32 %96, ptr %5, align 4, !tbaa !16
  br label %97

97:                                               ; preds = %92, %91, %88, %4, %9
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @Perl_sv_unmagicext(ptr noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #1 {
  tail call fastcc void @S_sv_unmagicext_flags(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef 1)
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_add_backref(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 255
  %6 = icmp eq i32 %5, 12
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = tail call ptr @Perl_hv_backreferences_p(ptr noundef nonnull %0) #17
  br label %34

9:                                                ; preds = %2
  %10 = and i32 %4, 14680064
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %9
  %13 = tail call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 60) #17
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %31

15:                                               ; preds = %12
  %16 = load i32, ptr %3, align 4, !tbaa !16
  %17 = and i32 %16, 255
  br label %18

18:                                               ; preds = %15, %9
  %19 = phi i32 [ %17, %15 ], [ %5, %9 ]
  %20 = icmp ugt i32 %19, 6
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 7)
  br label %22

22:                                               ; preds = %18, %21
  %23 = tail call ptr @Perl_safesyscalloc(i64 noundef 1, i64 noundef 48) #17
  %24 = load ptr, ptr %0, align 8, !tbaa !26
  %25 = getelementptr inbounds %struct.xpvmg, ptr %24, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  store ptr %26, ptr %23, align 8, !tbaa !112
  store ptr %23, ptr %25, align 8, !tbaa !17
  %27 = getelementptr inbounds %struct.magic, ptr %23, i64 0, i32 6
  store ptr null, ptr %27, align 8, !tbaa !113
  %28 = getelementptr inbounds %struct.magic, ptr %23, i64 0, i32 3
  store i8 60, ptr %28, align 2, !tbaa !114
  %29 = getelementptr inbounds %struct.magic, ptr %23, i64 0, i32 5
  store i64 0, ptr %29, align 8, !tbaa !76
  %30 = getelementptr inbounds %struct.magic, ptr %23, i64 0, i32 1
  store ptr getelementptr inbounds ([31 x %struct.mgvtbl], ptr @PL_magic_vtables, i64 0, i64 2), ptr %30, align 8, !tbaa !115
  tail call void @Perl_mg_magical(ptr noundef nonnull %0) #17
  br label %31

31:                                               ; preds = %22, %12
  %32 = phi ptr [ %13, %12 ], [ %23, %22 ]
  %33 = getelementptr inbounds %struct.magic, ptr %32, i64 0, i32 6
  br label %34

34:                                               ; preds = %31, %7
  %35 = phi ptr [ %8, %7 ], [ %33, %31 ]
  %36 = phi ptr [ null, %7 ], [ %32, %31 ]
  %37 = load ptr, ptr %35, align 8, !tbaa !9
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %44

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %41 = load i32, ptr %40, align 4, !tbaa !16
  %42 = and i32 %41, 255
  %43 = icmp eq i32 %42, 11
  br i1 %43, label %49, label %130

44:                                               ; preds = %34
  %45 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 2
  %46 = load i32, ptr %45, align 4, !tbaa !16
  %47 = and i32 %46, 255
  %48 = icmp eq i32 %47, 11
  br i1 %48, label %112, label %49

49:                                               ; preds = %44, %39
  %50 = icmp eq ptr %36, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %struct.magic, ptr %36, i64 0, i32 4
  %53 = load i8, ptr %52, align 1, !tbaa !81
  %54 = or i8 %53, 2
  store i8 %54, ptr %52, align 1, !tbaa !81
  br label %55

55:                                               ; preds = %51, %49
  %56 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %57 = icmp eq ptr %56, null
  br i1 %57, label %58, label %87

58:                                               ; preds = %55
  %59 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %60 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %60, ptr %59, align 8, !tbaa !26
  %61 = getelementptr inbounds %struct.sv, ptr %59, i64 0, i32 1
  store i32 170, ptr %61, align 8, !tbaa !13
  %62 = getelementptr inbounds %struct.sv, ptr %59, i64 0, i32 2
  store i32 0, ptr %62, align 4, !tbaa !16
  store ptr %59, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %63 = getelementptr inbounds %struct.sv, ptr %59, i64 1
  store ptr %63, ptr @PL_sv_root, align 8, !tbaa !9
  br label %64

64:                                               ; preds = %64, %58
  %65 = phi ptr [ %63, %58 ], [ %82, %64 ]
  %66 = phi i64 [ 1, %58 ], [ %81, %64 ]
  %67 = getelementptr inbounds %struct.sv, ptr %65, i64 1
  store ptr %67, ptr %65, align 8, !tbaa !26
  %68 = getelementptr inbounds %struct.sv, ptr %59, i64 %66, i32 2
  store i32 255, ptr %68, align 4, !tbaa !16
  %69 = add nuw nsw i64 %66, 1
  %70 = getelementptr inbounds %struct.sv, ptr %59, i64 %69
  %71 = getelementptr inbounds %struct.sv, ptr %70, i64 1
  store ptr %71, ptr %70, align 8, !tbaa !26
  %72 = getelementptr inbounds %struct.sv, ptr %59, i64 %69, i32 2
  store i32 255, ptr %72, align 4, !tbaa !16
  %73 = add nuw nsw i64 %66, 2
  %74 = getelementptr inbounds %struct.sv, ptr %59, i64 %73
  %75 = getelementptr inbounds %struct.sv, ptr %74, i64 1
  store ptr %75, ptr %74, align 8, !tbaa !26
  %76 = getelementptr inbounds %struct.sv, ptr %59, i64 %73, i32 2
  store i32 255, ptr %76, align 4, !tbaa !16
  %77 = add nuw nsw i64 %66, 3
  %78 = getelementptr inbounds %struct.sv, ptr %59, i64 %77
  %79 = getelementptr inbounds %struct.sv, ptr %78, i64 1
  store ptr %79, ptr %78, align 8, !tbaa !26
  %80 = getelementptr inbounds %struct.sv, ptr %59, i64 %77, i32 2
  store i32 255, ptr %80, align 4, !tbaa !16
  %81 = add nuw nsw i64 %66, 4
  %82 = getelementptr inbounds %struct.sv, ptr %59, i64 %81
  %83 = icmp eq i64 %81, 169
  br i1 %83, label %84, label %64, !llvm.loop !59

84:                                               ; preds = %64
  store ptr null, ptr %82, align 8, !tbaa !26
  %85 = getelementptr inbounds %struct.sv, ptr %59, i64 169, i32 2
  store i32 255, ptr %85, align 4, !tbaa !16
  %86 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %87

87:                                               ; preds = %55, %84
  %88 = phi ptr [ %86, %84 ], [ %56, %55 ]
  %89 = load ptr, ptr %88, align 8, !tbaa !26
  store ptr %89, ptr @PL_sv_root, align 8, !tbaa !9
  %90 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %91 = add nsw i64 %90, 1
  store i64 %91, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %88, align 8, !tbaa !26
  %92 = getelementptr inbounds %struct.sv, ptr %88, i64 0, i32 1
  store i32 1, ptr %92, align 8, !tbaa !13
  %93 = getelementptr inbounds %struct.sv, ptr %88, i64 0, i32 2
  store i32 0, ptr %93, align 4, !tbaa !16
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %88, i32 noundef 11)
  %94 = load <2 x i32>, ptr %92, align 8, !tbaa !25
  %95 = add <2 x i32> %94, <i32 1, i32 poison>
  %96 = and <2 x i32> %94, <i32 poison, i32 -1073741825>
  %97 = shufflevector <2 x i32> %95, <2 x i32> %96, <2 x i32> <i32 0, i32 3>
  store <2 x i32> %97, ptr %92, align 8, !tbaa !25
  %98 = load ptr, ptr %35, align 8, !tbaa !9
  %99 = icmp eq ptr %98, null
  %100 = select i1 %99, i64 1, i64 2
  tail call void @Perl_av_extend(ptr noundef nonnull %88, i64 noundef %100) #17
  %101 = load ptr, ptr %35, align 8, !tbaa !9
  %102 = icmp eq ptr %101, null
  br i1 %102, label %111, label %103

103:                                              ; preds = %87
  %104 = getelementptr inbounds %struct.av, ptr %88, i64 0, i32 3
  %105 = load ptr, ptr %104, align 8, !tbaa !17
  %106 = load ptr, ptr %88, align 8, !tbaa !105
  %107 = getelementptr inbounds %struct.xpvav, ptr %106, i64 0, i32 2
  %108 = load i64, ptr %107, align 8, !tbaa !107
  %109 = add nsw i64 %108, 1
  store i64 %109, ptr %107, align 8, !tbaa !107
  %110 = getelementptr inbounds ptr, ptr %105, i64 %109
  store ptr %101, ptr %110, align 8, !tbaa !9
  br label %111

111:                                              ; preds = %103, %87
  store ptr %88, ptr %35, align 8, !tbaa !9
  br label %121

112:                                              ; preds = %44
  %113 = load ptr, ptr %37, align 8, !tbaa !105
  %114 = getelementptr inbounds %struct.xpvav, ptr %113, i64 0, i32 2
  %115 = load i64, ptr %114, align 8, !tbaa !107
  %116 = getelementptr inbounds %struct.xpvav, ptr %113, i64 0, i32 3
  %117 = load i64, ptr %116, align 8, !tbaa !108
  %118 = icmp slt i64 %115, %117
  br i1 %118, label %121, label %119

119:                                              ; preds = %112
  %120 = add nsw i64 %115, 1
  tail call void @Perl_av_extend(ptr noundef nonnull %37, i64 noundef %120) #17
  br label %121

121:                                              ; preds = %112, %119, %111
  %122 = phi ptr [ %88, %111 ], [ %37, %119 ], [ %37, %112 ]
  %123 = getelementptr inbounds %struct.av, ptr %122, i64 0, i32 3
  %124 = load ptr, ptr %123, align 8, !tbaa !17
  %125 = load ptr, ptr %122, align 8, !tbaa !105
  %126 = getelementptr inbounds %struct.xpvav, ptr %125, i64 0, i32 2
  %127 = load i64, ptr %126, align 8, !tbaa !107
  %128 = add nsw i64 %127, 1
  store i64 %128, ptr %126, align 8, !tbaa !107
  %129 = getelementptr inbounds ptr, ptr %124, i64 %128
  br label %130

130:                                              ; preds = %39, %121
  %131 = phi ptr [ %129, %121 ], [ %35, %39 ]
  store ptr %1, ptr %131, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_get_backrefs(ptr noundef %0) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 4, !tbaa !16
  %4 = and i32 %3, 255
  %5 = icmp eq i32 %4, 12
  br i1 %5, label %6, label %18

6:                                                ; preds = %1
  %7 = and i32 %3, 33554432
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %29, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.hv, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = load ptr, ptr %0, align 8, !tbaa !66
  %13 = getelementptr inbounds %struct.xpvhv, ptr %12, i64 0, i32 3
  %14 = load i64, ptr %13, align 8, !tbaa !48
  %15 = add i64 %14, 1
  %16 = getelementptr inbounds ptr, ptr %11, i64 %15
  %17 = getelementptr inbounds %struct.xpvhv_aux, ptr %16, i64 0, i32 1
  br label %26

18:                                               ; preds = %1
  %19 = and i32 %3, 14680064
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %29, label %21

21:                                               ; preds = %18
  %22 = tail call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 60) #17
  %23 = icmp eq ptr %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.magic, ptr %22, i64 0, i32 6
  br label %26

26:                                               ; preds = %9, %24
  %27 = phi ptr [ %25, %24 ], [ %17, %9 ]
  %28 = load ptr, ptr %27, align 8, !tbaa !9
  br label %29

29:                                               ; preds = %26, %21, %18, %6
  %30 = phi ptr [ null, %6 ], [ null, %18 ], [ null, %21 ], [ %28, %26 ]
  ret ptr %30
}

declare ptr @Perl_hv_backreferences_p(ptr noundef) local_unnamed_addr #3

declare void @Perl_av_extend(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_del_backref(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 255
  %6 = icmp eq i32 %5, 12
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = and i32 %4, 33554432
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %25, label %22

10:                                               ; preds = %2
  %11 = icmp eq i32 %4, 255
  %12 = load i32, ptr @PL_phase, align 4
  %13 = icmp eq i32 %12, 6
  %14 = select i1 %11, i1 %13, i1 false
  br i1 %14, label %88, label %15

15:                                               ; preds = %10
  %16 = and i32 %4, 14680064
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %15
  %19 = tail call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 60) #17
  %20 = icmp eq ptr %19, null
  %21 = getelementptr inbounds %struct.magic, ptr %19, i64 0, i32 6
  br i1 %20, label %25, label %26

22:                                               ; preds = %7
  %23 = tail call ptr @Perl_hv_backreferences_p(ptr noundef nonnull %0) #17
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %15, %18, %7, %22
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.27) #17
  br label %26

26:                                               ; preds = %18, %25, %22
  %27 = phi ptr [ null, %25 ], [ %23, %22 ], [ %21, %18 ]
  %28 = load ptr, ptr %27, align 8, !tbaa !9
  %29 = icmp eq ptr %28, null
  br i1 %29, label %30, label %43

30:                                               ; preds = %26
  %31 = load i32, ptr @PL_phase, align 4, !tbaa !17
  %32 = icmp eq i32 %31, 6
  %33 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  %34 = load i32, ptr %33, align 8, !tbaa !13
  %35 = icmp eq i32 %34, 0
  %36 = select i1 %32, i1 %35, i1 false
  br i1 %36, label %88, label %37

37:                                               ; preds = %30
  %38 = zext i32 %31 to i64
  %39 = getelementptr inbounds [0 x ptr], ptr @PL_phase_names, i64 0, i64 %38
  %40 = load ptr, ptr %39, align 8, !tbaa !9
  %41 = zext i32 %34 to i64
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.28, ptr noundef null, ptr noundef %40, i64 noundef %41) #17
  %42 = load ptr, ptr %27, align 8, !tbaa !9
  br label %43

43:                                               ; preds = %37, %26
  %44 = phi ptr [ %42, %37 ], [ %28, %26 ]
  %45 = getelementptr inbounds %struct.sv, ptr %44, i64 0, i32 2
  %46 = load i32, ptr %45, align 4, !tbaa !16
  %47 = and i32 %46, 255
  %48 = icmp eq i32 %47, 11
  br i1 %48, label %49, label %79

49:                                               ; preds = %43
  %50 = load ptr, ptr %44, align 8, !tbaa !105
  %51 = getelementptr inbounds %struct.xpvav, ptr %50, i64 0, i32 2
  %52 = load i64, ptr %51, align 8, !tbaa !107
  %53 = getelementptr inbounds %struct.av, ptr %44, i64 0, i32 3
  %54 = load ptr, ptr %53, align 8, !tbaa !17
  %55 = load ptr, ptr %54, align 8, !tbaa !9
  %56 = icmp eq ptr %55, %1
  br i1 %56, label %57, label %62

57:                                               ; preds = %49
  %58 = getelementptr inbounds ptr, ptr %54, i64 1
  store ptr %58, ptr %53, align 8, !tbaa !17
  %59 = getelementptr inbounds %struct.xpvav, ptr %50, i64 0, i32 3
  %60 = load i64, ptr %59, align 8, !tbaa !108
  %61 = add nsw i64 %60, -1
  store i64 %61, ptr %59, align 8, !tbaa !108
  br label %75

62:                                               ; preds = %49
  %63 = getelementptr inbounds ptr, ptr %54, i64 %52
  %64 = load ptr, ptr %63, align 8, !tbaa !9
  %65 = icmp eq ptr %64, %1
  br i1 %65, label %75, label %66

66:                                               ; preds = %62, %70
  %67 = phi ptr [ %68, %70 ], [ %63, %62 ]
  %68 = getelementptr inbounds ptr, ptr %67, i64 -1
  %69 = icmp ugt ptr %68, %54
  br i1 %69, label %70, label %75

70:                                               ; preds = %66
  %71 = load ptr, ptr %68, align 8, !tbaa !9
  %72 = icmp eq ptr %71, %1
  br i1 %72, label %73, label %66, !llvm.loop !132

73:                                               ; preds = %70
  store ptr %64, ptr %68, align 8, !tbaa !9
  %74 = load ptr, ptr %44, align 8, !tbaa !105
  br label %75

75:                                               ; preds = %66, %62, %73, %57
  %76 = phi ptr [ %50, %62 ], [ %74, %73 ], [ %50, %57 ], [ %50, %66 ]
  %77 = add nsw i64 %52, -1
  %78 = getelementptr inbounds %struct.xpvav, ptr %76, i64 0, i32 2
  store i64 %77, ptr %78, align 8, !tbaa !107
  br label %88

79:                                               ; preds = %43
  %80 = icmp eq i32 %46, 255
  %81 = load i32, ptr @PL_phase, align 4
  %82 = icmp eq i32 %81, 6
  %83 = select i1 %80, i1 %82, i1 false
  br i1 %83, label %88, label %84

84:                                               ; preds = %79
  %85 = icmp eq ptr %44, %1
  br i1 %85, label %87, label %86

86:                                               ; preds = %84
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.29, ptr noundef nonnull %44, ptr noundef %1) #17
  br label %87

87:                                               ; preds = %86, %84
  store ptr null, ptr %27, align 8, !tbaa !9
  br label %88

88:                                               ; preds = %30, %75, %79, %87, %10
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_kill_backrefs(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = alloca ptr, align 8
  store ptr %1, ptr %3, align 8, !tbaa !9
  %4 = icmp eq ptr %1, null
  br i1 %4, label %228, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.av, ptr %1, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !133
  %8 = icmp eq i32 %7, 255
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  %10 = load i8, ptr @PL_in_clean_all, align 1, !tbaa !5, !range !74, !noundef !75
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %228

12:                                               ; preds = %9
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.30) #17
  %13 = load i32, ptr %6, align 4, !tbaa !133
  br label %14

14:                                               ; preds = %5, %12
  %15 = phi i32 [ %7, %5 ], [ %13, %12 ]
  %16 = and i32 %15, 255
  %17 = icmp eq i32 %16, 11
  br i1 %17, label %18, label %28

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.av, ptr %1, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  %21 = icmp eq ptr %20, null
  br i1 %21, label %218, label %22

22:                                               ; preds = %18
  %23 = load ptr, ptr %1, align 8, !tbaa !105
  %24 = getelementptr inbounds %struct.xpvav, ptr %23, i64 0, i32 2
  %25 = load i64, ptr %24, align 8, !tbaa !107
  %26 = getelementptr inbounds ptr, ptr %20, i64 %25
  %27 = icmp slt i64 %25, 0
  br i1 %27, label %216, label %28

28:                                               ; preds = %14, %22
  %29 = phi ptr [ %20, %22 ], [ %3, %14 ]
  %30 = phi ptr [ %26, %22 ], [ %3, %14 ]
  %31 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %32 = getelementptr inbounds %struct.gv, ptr %0, i64 0, i32 3
  br label %33

33:                                               ; preds = %207, %28
  %34 = phi ptr [ %29, %28 ], [ %208, %207 ]
  %35 = load ptr, ptr %34, align 8, !tbaa !9
  %36 = icmp eq ptr %35, null
  br i1 %36, label %204, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 2
  %39 = load i32, ptr %38, align 4, !tbaa !16
  %40 = and i32 %39, -2147481600
  %41 = icmp eq i32 %40, -2147481600
  br i1 %41, label %42, label %75

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 3
  store ptr null, ptr %43, align 8, !tbaa !17
  %44 = and i32 %39, 1610547455
  store i32 %44, ptr %38, align 4, !tbaa !16
  %45 = and i32 %39, 33554432
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %68, label %47

47:                                               ; preds = %42
  %48 = load i8, ptr inttoptr (i64 -1 to ptr), align 1, !tbaa !17
  %49 = zext i8 %48 to i64
  %50 = icmp eq i8 %48, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %47
  %52 = load i64, ptr inttoptr (i64 -9 to ptr), align 1
  br label %53

53:                                               ; preds = %47, %51
  %54 = phi i64 [ %49, %47 ], [ %52, %51 ]
  %55 = load ptr, ptr %35, align 8, !tbaa !26
  %56 = getelementptr inbounds %struct.xpv, ptr %55, i64 0, i32 3
  %57 = load i64, ptr %56, align 8, !tbaa !17
  %58 = add i64 %57, %54
  store i64 %58, ptr %56, align 8, !tbaa !17
  %59 = load ptr, ptr %43, align 8, !tbaa !17
  %60 = sub i64 0, %54
  %61 = getelementptr inbounds i8, ptr %59, i64 %60
  store ptr %61, ptr %43, align 8, !tbaa !17
  %62 = load ptr, ptr %35, align 8, !tbaa !26
  %63 = getelementptr inbounds %struct.xpv, ptr %62, i64 0, i32 2
  %64 = load i64, ptr %63, align 8, !tbaa !57
  %65 = add i64 %64, 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %61, ptr align 4294967296 null, i64 %65, i1 false)
  %66 = load i32, ptr %38, align 4, !tbaa !16
  %67 = and i32 %66, -33554433
  br label %68

68:                                               ; preds = %53, %42
  %69 = phi i32 [ %67, %53 ], [ %44, %42 ]
  %70 = and i32 %69, 2147481599
  store i32 %70, ptr %38, align 4, !tbaa !16
  %71 = and i32 %69, 4194304
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %203, label %73

73:                                               ; preds = %68
  %74 = call i32 @Perl_mg_set(ptr noundef nonnull %35) #17
  br label %203

75:                                               ; preds = %37
  %76 = trunc i32 %39 to i8
  switch i8 %76, label %201 [
    i8 9, label %77
    i8 10, label %77
    i8 13, label %80
    i8 14, label %80
  ]

77:                                               ; preds = %75, %75
  %78 = load ptr, ptr %35, align 8, !tbaa !26
  %79 = getelementptr inbounds %struct.xpvgv, ptr %78, i64 0, i32 5
  store ptr null, ptr %79, align 8, !tbaa !17
  br label %203

80:                                               ; preds = %75, %75
  %81 = load i32, ptr %31, align 4, !tbaa !16
  %82 = and i32 %81, 255
  %83 = icmp eq i32 %82, 12
  br i1 %83, label %84, label %87

84:                                               ; preds = %80
  %85 = load ptr, ptr %35, align 8, !tbaa !119
  %86 = getelementptr inbounds %struct.xpvcv, ptr %85, i64 0, i32 4
  store ptr null, ptr %86, align 8, !tbaa !134
  br label %203

87:                                               ; preds = %80
  %88 = load ptr, ptr %32, align 8, !tbaa !17
  %89 = getelementptr inbounds %struct.gp, ptr %88, i64 0, i32 2
  %90 = load ptr, ptr %89, align 8, !tbaa !23
  %91 = icmp eq ptr %90, %35
  br i1 %91, label %92, label %102

92:                                               ; preds = %87
  %93 = getelementptr inbounds %struct.gp, ptr %88, i64 0, i32 4
  %94 = load i32, ptr %93, align 4, !tbaa !123
  %95 = icmp ult i32 %94, 2
  br i1 %95, label %96, label %102

96:                                               ; preds = %92
  %97 = getelementptr inbounds %struct.cv, ptr %35, i64 0, i32 1
  %98 = load i32, ptr %97, align 8, !tbaa !135
  %99 = icmp ult i32 %98, 2
  br i1 %99, label %100, label %102

100:                                              ; preds = %96
  %101 = load ptr, ptr %35, align 8, !tbaa !119
  br label %197

102:                                              ; preds = %96, %92, %87
  %103 = load ptr, ptr %0, align 8, !tbaa !62
  %104 = getelementptr inbounds %struct.xpvgv, ptr %103, i64 0, i32 5
  %105 = load ptr, ptr %104, align 8, !tbaa !17
  %106 = icmp eq ptr %105, null
  br i1 %106, label %139, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %struct.hv, ptr %105, i64 0, i32 2
  %109 = load i32, ptr %108, align 4, !tbaa !64
  %110 = and i32 %109, 33554432
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %139, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %struct.hv, ptr %105, i64 0, i32 3
  %114 = load ptr, ptr %113, align 8, !tbaa !17
  %115 = load ptr, ptr %105, align 8, !tbaa !66
  %116 = getelementptr inbounds %struct.xpvhv, ptr %115, i64 0, i32 3
  %117 = load i64, ptr %116, align 8, !tbaa !48
  %118 = add i64 %117, 1
  %119 = getelementptr inbounds ptr, ptr %114, i64 %118
  %120 = load ptr, ptr %119, align 8, !tbaa !17
  %121 = icmp eq ptr %120, null
  br i1 %121, label %139, label %122

122:                                              ; preds = %112
  %123 = getelementptr inbounds %struct.xpvhv_aux, ptr %119, i64 0, i32 4
  %124 = load i32, ptr %123, align 4, !tbaa !67
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %136, label %126

126:                                              ; preds = %122
  %127 = load ptr, ptr %120, align 8, !tbaa !9
  %128 = icmp eq ptr %127, null
  %129 = icmp eq i32 %124, -1
  %130 = or i1 %129, %128
  br i1 %130, label %139, label %131

131:                                              ; preds = %126
  %132 = icmp sgt i32 %124, 0
  br i1 %132, label %136, label %133

133:                                              ; preds = %131
  %134 = getelementptr inbounds ptr, ptr %120, i64 1
  %135 = load ptr, ptr %134, align 8, !tbaa !9
  br label %136

136:                                              ; preds = %133, %131, %122
  %137 = phi ptr [ %135, %133 ], [ %120, %122 ], [ %127, %131 ]
  %138 = call ptr @Perl_newSVhek(ptr noundef %137)
  br label %178

139:                                              ; preds = %126, %112, %107, %102
  %140 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %141 = icmp eq ptr %140, null
  br i1 %141, label %142, label %171

142:                                              ; preds = %139
  %143 = call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %144 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %144, ptr %143, align 8, !tbaa !26
  %145 = getelementptr inbounds %struct.sv, ptr %143, i64 0, i32 1
  store i32 170, ptr %145, align 8, !tbaa !13
  %146 = getelementptr inbounds %struct.sv, ptr %143, i64 0, i32 2
  store i32 0, ptr %146, align 4, !tbaa !16
  store ptr %143, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %147 = getelementptr inbounds %struct.sv, ptr %143, i64 1
  store ptr %147, ptr @PL_sv_root, align 8, !tbaa !9
  br label %148

148:                                              ; preds = %148, %142
  %149 = phi ptr [ %147, %142 ], [ %166, %148 ]
  %150 = phi i64 [ 1, %142 ], [ %165, %148 ]
  %151 = getelementptr inbounds %struct.sv, ptr %149, i64 1
  store ptr %151, ptr %149, align 8, !tbaa !26
  %152 = getelementptr inbounds %struct.sv, ptr %143, i64 %150, i32 2
  store i32 255, ptr %152, align 4, !tbaa !16
  %153 = add nuw nsw i64 %150, 1
  %154 = getelementptr inbounds %struct.sv, ptr %143, i64 %153
  %155 = getelementptr inbounds %struct.sv, ptr %154, i64 1
  store ptr %155, ptr %154, align 8, !tbaa !26
  %156 = getelementptr inbounds %struct.sv, ptr %143, i64 %153, i32 2
  store i32 255, ptr %156, align 4, !tbaa !16
  %157 = add nuw nsw i64 %150, 2
  %158 = getelementptr inbounds %struct.sv, ptr %143, i64 %157
  %159 = getelementptr inbounds %struct.sv, ptr %158, i64 1
  store ptr %159, ptr %158, align 8, !tbaa !26
  %160 = getelementptr inbounds %struct.sv, ptr %143, i64 %157, i32 2
  store i32 255, ptr %160, align 4, !tbaa !16
  %161 = add nuw nsw i64 %150, 3
  %162 = getelementptr inbounds %struct.sv, ptr %143, i64 %161
  %163 = getelementptr inbounds %struct.sv, ptr %162, i64 1
  store ptr %163, ptr %162, align 8, !tbaa !26
  %164 = getelementptr inbounds %struct.sv, ptr %143, i64 %161, i32 2
  store i32 255, ptr %164, align 4, !tbaa !16
  %165 = add nuw nsw i64 %150, 4
  %166 = getelementptr inbounds %struct.sv, ptr %143, i64 %165
  %167 = icmp eq i64 %165, 169
  br i1 %167, label %168, label %148, !llvm.loop !59

168:                                              ; preds = %148
  store ptr null, ptr %166, align 8, !tbaa !26
  %169 = getelementptr inbounds %struct.sv, ptr %143, i64 169, i32 2
  store i32 255, ptr %169, align 4, !tbaa !16
  %170 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %171

171:                                              ; preds = %168, %139
  %172 = phi ptr [ %170, %168 ], [ %140, %139 ]
  %173 = load ptr, ptr %172, align 8, !tbaa !26
  store ptr %173, ptr @PL_sv_root, align 8, !tbaa !9
  %174 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %175 = add nsw i64 %174, 1
  store i64 %175, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %172, align 8, !tbaa !26
  %176 = getelementptr inbounds %struct.sv, ptr %172, i64 0, i32 1
  store i32 1, ptr %176, align 8, !tbaa !13
  %177 = getelementptr inbounds %struct.sv, ptr %172, i64 0, i32 2
  store i32 0, ptr %177, align 4, !tbaa !16
  call void @Perl_sv_setpvn(ptr noundef nonnull %172, ptr noundef nonnull @.str.7, i64 noundef 8) #20
  br label %178

178:                                              ; preds = %171, %136
  %179 = phi ptr [ %138, %136 ], [ %172, %171 ]
  call void @Perl_sv_catpvn_flags(ptr noundef %179, ptr noundef nonnull @.str.95, i64 noundef 10, i32 noundef 2)
  %180 = call ptr @Perl_gv_fetchsv(ptr noundef %179, i32 noundef 2, i32 noundef 13) #17
  %181 = getelementptr inbounds %struct.sv, ptr %179, i64 0, i32 1
  %182 = load i32, ptr %181, align 8, !tbaa !13
  %183 = icmp ugt i32 %182, 1
  br i1 %183, label %184, label %186

184:                                              ; preds = %178
  %185 = add i32 %182, -1
  store i32 %185, ptr %181, align 8, !tbaa !13
  br label %187

186:                                              ; preds = %178
  call void @Perl_sv_free2(ptr noundef nonnull %179, i32 noundef %182)
  br label %187

187:                                              ; preds = %186, %184
  %188 = load ptr, ptr %35, align 8, !tbaa !119
  %189 = getelementptr inbounds %struct.xpvcv, ptr %188, i64 0, i32 12
  %190 = load i32, ptr %189, align 4, !tbaa !121
  %191 = or i32 %190, 1152
  store i32 %191, ptr %189, align 4, !tbaa !121
  %192 = icmp eq ptr %180, null
  br i1 %192, label %197, label %193

193:                                              ; preds = %187
  %194 = getelementptr inbounds %struct.sv, ptr %180, i64 0, i32 1
  %195 = load i32, ptr %194, align 8, !tbaa !13
  %196 = add i32 %195, 1
  store i32 %196, ptr %194, align 8, !tbaa !13
  br label %197

197:                                              ; preds = %100, %187, %193
  %198 = phi ptr [ %101, %100 ], [ %188, %187 ], [ %188, %193 ]
  %199 = phi ptr [ null, %100 ], [ null, %187 ], [ %180, %193 ]
  %200 = getelementptr inbounds %struct.xpvcv, ptr %198, i64 0, i32 7
  store ptr %199, ptr %200, align 8, !tbaa !17
  br label %203

201:                                              ; preds = %75
  %202 = zext i32 %39 to i64
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.31, i64 noundef %202) #17
  br label %203

203:                                              ; preds = %77, %84, %197, %201, %73, %68
  br i1 %17, label %209, label %212

204:                                              ; preds = %33
  %205 = getelementptr inbounds ptr, ptr %34, i64 1
  %206 = icmp ugt ptr %205, %30
  br i1 %206, label %215, label %207

207:                                              ; preds = %204, %212, %209
  %208 = phi ptr [ %205, %204 ], [ %213, %212 ], [ %210, %209 ]
  br label %33, !llvm.loop !136

209:                                              ; preds = %203
  store ptr null, ptr %34, align 8, !tbaa !9
  %210 = getelementptr inbounds ptr, ptr %34, i64 1
  %211 = icmp ugt ptr %210, %30
  br i1 %211, label %216, label %207

212:                                              ; preds = %203
  %213 = getelementptr inbounds ptr, ptr %34, i64 1
  %214 = icmp ugt ptr %213, %30
  br i1 %214, label %228, label %207

215:                                              ; preds = %204
  br i1 %17, label %216, label %228

216:                                              ; preds = %209, %22, %215
  %217 = load ptr, ptr %3, align 8, !tbaa !9
  br label %218

218:                                              ; preds = %216, %18
  %219 = phi ptr [ %217, %216 ], [ %1, %18 ]
  %220 = load ptr, ptr %219, align 8, !tbaa !105
  %221 = getelementptr inbounds %struct.xpvav, ptr %220, i64 0, i32 2
  store i64 -1, ptr %221, align 8, !tbaa !107
  %222 = getelementptr inbounds %struct.sv, ptr %219, i64 0, i32 1
  %223 = load i32, ptr %222, align 8, !tbaa !13
  %224 = icmp ugt i32 %223, 1
  br i1 %224, label %225, label %227

225:                                              ; preds = %218
  %226 = add i32 %223, -1
  store i32 %226, ptr %222, align 8, !tbaa !13
  br label %228

227:                                              ; preds = %218
  call void @Perl_sv_free2(ptr noundef nonnull %219, i32 noundef %223)
  br label %228

228:                                              ; preds = %212, %227, %225, %215, %9, %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_insert_flags(ptr noundef %0, i64 noundef %1, i64 noundef %2, ptr nocapture noundef readonly %3, i64 noundef %4, i32 noundef %5) local_unnamed_addr #1 {
  %7 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #17
  %8 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !16
  %10 = and i32 %9, 430018304
  %11 = icmp eq i32 %10, 1024
  br i1 %11, label %12, label %16

12:                                               ; preds = %6
  %13 = load ptr, ptr %0, align 8, !tbaa !26
  %14 = getelementptr inbounds %struct.xpv, ptr %13, i64 0, i32 2
  %15 = load i64, ptr %14, align 8, !tbaa !57
  store i64 %15, ptr %7, align 8, !tbaa !60
  br label %20

16:                                               ; preds = %6
  %17 = call ptr @Perl_sv_pvn_force_flags(ptr noundef nonnull %0, ptr noundef nonnull %7, i32 noundef %5)
  %18 = load i32, ptr %8, align 4, !tbaa !16
  %19 = load i64, ptr %7, align 8, !tbaa !60
  br label %20

20:                                               ; preds = %16, %12
  %21 = phi i64 [ %19, %16 ], [ %15, %12 ]
  %22 = phi i32 [ %18, %16 ], [ %9, %12 ]
  %23 = and i32 %22, 2147418367
  %24 = or i32 %23, 17408
  store i32 %24, ptr %8, align 4, !tbaa !16
  %25 = add i64 %2, %1
  %26 = icmp ugt i64 %25, %21
  br i1 %26, label %27, label %50

27:                                               ; preds = %20
  %28 = and i32 %22, 268435456
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %27
  %31 = add i64 %25, 1
  br label %38

32:                                               ; preds = %27
  %33 = load ptr, ptr %0, align 8, !tbaa !26
  %34 = getelementptr inbounds %struct.xpv, ptr %33, i64 0, i32 3
  %35 = load i64, ptr %34, align 8, !tbaa !17
  %36 = add i64 %25, 1
  %37 = icmp ult i64 %35, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %30, %32
  %39 = phi i64 [ %31, %30 ], [ %36, %32 ]
  %40 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %39)
  %41 = load i64, ptr %7, align 8, !tbaa !60
  br label %42

42:                                               ; preds = %32, %38
  %43 = phi i64 [ %21, %32 ], [ %41, %38 ]
  %44 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %45 = load ptr, ptr %44, align 8, !tbaa !17
  %46 = getelementptr inbounds i8, ptr %45, i64 %43
  %47 = sub i64 %25, %43
  call void @llvm.memset.p0.i64(ptr align 1 %46, i8 0, i64 %47, i1 false)
  %48 = load ptr, ptr %0, align 8, !tbaa !26
  %49 = getelementptr inbounds %struct.xpv, ptr %48, i64 0, i32 2
  store i64 %25, ptr %49, align 8, !tbaa !57
  br label %50

50:                                               ; preds = %20, %42
  %51 = load i8, ptr @PL_tainting, align 1, !tbaa !5, !range !74, !noundef !75
  %52 = icmp eq i8 %51, 0
  %53 = load i8, ptr @PL_tainted, align 1, !range !74
  %54 = icmp eq i8 %53, 0
  %55 = select i1 %52, i1 true, i1 %54
  br i1 %55, label %57, label %56

56:                                               ; preds = %50
  call void @Perl_sv_magic(ptr noundef nonnull %0, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0)
  br label %57

57:                                               ; preds = %56, %50
  %58 = sub i64 %4, %2
  %59 = icmp sgt i64 %58, 0
  br i1 %59, label %60, label %195

60:                                               ; preds = %57
  %61 = load i32, ptr %8, align 4, !tbaa !16
  %62 = and i32 %61, 268435456
  %63 = icmp eq i32 %62, 0
  %64 = load ptr, ptr %0, align 8, !tbaa !26
  br i1 %63, label %70, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %struct.xpv, ptr %64, i64 0, i32 2
  %67 = load i64, ptr %66, align 8, !tbaa !57
  %68 = add nuw i64 %58, 1
  %69 = add i64 %68, %67
  br label %78

70:                                               ; preds = %60
  %71 = getelementptr inbounds %struct.xpv, ptr %64, i64 0, i32 3
  %72 = load i64, ptr %71, align 8, !tbaa !17
  %73 = getelementptr inbounds %struct.xpv, ptr %64, i64 0, i32 2
  %74 = load i64, ptr %73, align 8, !tbaa !57
  %75 = add nuw i64 %58, 1
  %76 = add i64 %75, %74
  %77 = icmp ult i64 %72, %76
  br i1 %77, label %78, label %84

78:                                               ; preds = %65, %70
  %79 = phi i64 [ %69, %65 ], [ %76, %70 ]
  %80 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %79)
  %81 = load ptr, ptr %0, align 8, !tbaa !26
  %82 = getelementptr inbounds %struct.xpv, ptr %81, i64 0, i32 2
  %83 = load i64, ptr %82, align 8, !tbaa !57
  br label %87

84:                                               ; preds = %70
  %85 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !17
  br label %87

87:                                               ; preds = %84, %78
  %88 = phi i64 [ %83, %78 ], [ %74, %84 ]
  %89 = phi ptr [ %80, %78 ], [ %86, %84 ]
  %90 = ptrtoint ptr %89 to i64
  %91 = getelementptr inbounds i8, ptr %89, i64 %1
  %92 = getelementptr inbounds i8, ptr %91, i64 %2
  %93 = getelementptr inbounds i8, ptr %89, i64 %88
  %94 = getelementptr inbounds i8, ptr %93, i64 %58
  store i8 0, ptr %94, align 1, !tbaa !17
  %95 = icmp ugt ptr %93, %92
  br i1 %95, label %96, label %187

96:                                               ; preds = %87
  %97 = add i64 %2, %1
  %98 = sub i64 %88, %97
  %99 = icmp ult i64 %98, 8
  br i1 %99, label %177, label %100

100:                                              ; preds = %96
  %101 = add i64 %2, %1
  %102 = xor i64 %101, -1
  %103 = add i64 %88, %102
  %104 = add i64 %88, %4
  %105 = xor i64 %2, -1
  %106 = add i64 %104, %105
  %107 = getelementptr i8, ptr %89, i64 %106
  %108 = sub i64 0, %103
  %109 = getelementptr i8, ptr %107, i64 %108
  %110 = icmp ugt ptr %109, %107
  %111 = add i64 %88, -1
  %112 = getelementptr i8, ptr %89, i64 %111
  %113 = sub i64 0, %103
  %114 = getelementptr i8, ptr %112, i64 %113
  %115 = icmp ugt ptr %114, %112
  %116 = or i1 %110, %115
  br i1 %116, label %177, label %117

117:                                              ; preds = %100
  %118 = add i64 %88, %90
  %119 = add i64 %88, %4
  %120 = add i64 %119, %90
  %121 = sub i64 %2, %120
  %122 = add i64 %121, %118
  %123 = icmp ult i64 %122, 64
  br i1 %123, label %177, label %124

124:                                              ; preds = %117
  %125 = icmp ult i64 %98, 64
  br i1 %125, label %157, label %126

126:                                              ; preds = %124
  %127 = and i64 %98, -64
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi i64 [ 0, %126 ], [ %146, %128 ]
  %130 = sub i64 0, %129
  %131 = getelementptr i8, ptr %94, i64 %130
  %132 = sub i64 0, %129
  %133 = getelementptr i8, ptr %93, i64 %132
  %134 = getelementptr inbounds i8, ptr %133, i64 -16
  %135 = load <16 x i8>, ptr %134, align 1, !tbaa !17
  %136 = getelementptr inbounds i8, ptr %133, i64 -32
  %137 = load <16 x i8>, ptr %136, align 1, !tbaa !17
  %138 = getelementptr inbounds i8, ptr %133, i64 -48
  %139 = load <16 x i8>, ptr %138, align 1, !tbaa !17
  %140 = getelementptr inbounds i8, ptr %133, i64 -64
  %141 = load <16 x i8>, ptr %140, align 1, !tbaa !17
  %142 = getelementptr inbounds i8, ptr %131, i64 -16
  store <16 x i8> %135, ptr %142, align 1, !tbaa !17
  %143 = getelementptr inbounds i8, ptr %131, i64 -32
  store <16 x i8> %137, ptr %143, align 1, !tbaa !17
  %144 = getelementptr inbounds i8, ptr %131, i64 -48
  store <16 x i8> %139, ptr %144, align 1, !tbaa !17
  %145 = getelementptr inbounds i8, ptr %131, i64 -64
  store <16 x i8> %141, ptr %145, align 1, !tbaa !17
  %146 = add nuw i64 %129, 64
  %147 = icmp eq i64 %146, %127
  br i1 %147, label %148, label %128, !llvm.loop !137

148:                                              ; preds = %128
  %149 = icmp eq i64 %98, %127
  br i1 %149, label %187, label %150

150:                                              ; preds = %148
  %151 = sub i64 0, %127
  %152 = getelementptr i8, ptr %93, i64 %151
  %153 = sub i64 0, %127
  %154 = getelementptr i8, ptr %94, i64 %153
  %155 = and i64 %98, 56
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %177, label %157

157:                                              ; preds = %124, %150
  %158 = phi i64 [ %127, %150 ], [ 0, %124 ]
  %159 = and i64 %98, -8
  %160 = sub i64 0, %159
  %161 = getelementptr i8, ptr %94, i64 %160
  %162 = sub i64 0, %159
  %163 = getelementptr i8, ptr %93, i64 %162
  %164 = getelementptr i8, ptr %93, i64 -8
  %165 = getelementptr i8, ptr %94, i64 -8
  br label %166

166:                                              ; preds = %166, %157
  %167 = phi i64 [ %158, %157 ], [ %173, %166 ]
  %168 = sub i64 0, %167
  %169 = sub i64 0, %167
  %170 = getelementptr i8, ptr %164, i64 %169
  %171 = load <8 x i8>, ptr %170, align 1, !tbaa !17
  %172 = getelementptr i8, ptr %165, i64 %168
  store <8 x i8> %171, ptr %172, align 1, !tbaa !17
  %173 = add nuw i64 %167, 8
  %174 = icmp eq i64 %173, %159
  br i1 %174, label %175, label %166, !llvm.loop !138

175:                                              ; preds = %166
  %176 = icmp eq i64 %98, %159
  br i1 %176, label %187, label %177

177:                                              ; preds = %117, %100, %96, %150, %175
  %178 = phi ptr [ %94, %96 ], [ %94, %117 ], [ %94, %100 ], [ %154, %150 ], [ %161, %175 ]
  %179 = phi ptr [ %93, %96 ], [ %93, %117 ], [ %93, %100 ], [ %152, %150 ], [ %163, %175 ]
  br label %180

180:                                              ; preds = %177, %180
  %181 = phi ptr [ %185, %180 ], [ %178, %177 ]
  %182 = phi ptr [ %183, %180 ], [ %179, %177 ]
  %183 = getelementptr inbounds i8, ptr %182, i64 -1
  %184 = load i8, ptr %183, align 1, !tbaa !17
  %185 = getelementptr inbounds i8, ptr %181, i64 -1
  store i8 %184, ptr %185, align 1, !tbaa !17
  %186 = icmp ugt ptr %183, %92
  br i1 %186, label %180, label %187, !llvm.loop !139

187:                                              ; preds = %180, %148, %175, %87
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %91, ptr align 1 %3, i64 %4, i1 false)
  %188 = load ptr, ptr %0, align 8, !tbaa !26
  %189 = getelementptr inbounds %struct.xpv, ptr %188, i64 0, i32 2
  %190 = load i64, ptr %189, align 8, !tbaa !57
  %191 = add i64 %190, %58
  store i64 %191, ptr %189, align 8, !tbaa !57
  %192 = load i32, ptr %8, align 4, !tbaa !16
  %193 = and i32 %192, 4194304
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %254, label %252

195:                                              ; preds = %57
  %196 = icmp eq i64 %4, %2
  %197 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %198 = load ptr, ptr %197, align 8, !tbaa !17
  %199 = getelementptr inbounds i8, ptr %198, i64 %1
  br i1 %196, label %200, label %204

200:                                              ; preds = %195
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %199, ptr align 1 %3, i64 %2, i1 false)
  %201 = load i32, ptr %8, align 4, !tbaa !16
  %202 = and i32 %201, 4194304
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %254, label %252

204:                                              ; preds = %195
  %205 = getelementptr inbounds i8, ptr %199, i64 %2
  %206 = load ptr, ptr %0, align 8, !tbaa !26
  %207 = getelementptr inbounds %struct.xpv, ptr %206, i64 0, i32 2
  %208 = load i64, ptr %207, align 8, !tbaa !57
  %209 = getelementptr inbounds i8, ptr %198, i64 %208
  %210 = icmp ugt ptr %205, %209
  br i1 %210, label %211, label %212

211:                                              ; preds = %204
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.32, ptr noundef nonnull %205, ptr noundef %209) #17
  br label %212

212:                                              ; preds = %211, %204
  %213 = ptrtoint ptr %198 to i64
  %214 = ptrtoint ptr %209 to i64
  %215 = ptrtoint ptr %205 to i64
  %216 = sub i64 %214, %215
  %217 = icmp slt i64 %216, %1
  br i1 %217, label %218, label %233

218:                                              ; preds = %212
  %219 = icmp eq i64 %4, 0
  br i1 %219, label %222, label %220

220:                                              ; preds = %218
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %199, ptr align 1 %3, i64 %4, i1 false)
  %221 = getelementptr inbounds i8, ptr %199, i64 %4
  br label %222

222:                                              ; preds = %220, %218
  %223 = phi ptr [ %221, %220 ], [ %199, %218 ]
  %224 = icmp sgt i64 %216, 0
  br i1 %224, label %225, label %227

225:                                              ; preds = %222
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %223, ptr align 1 %205, i64 %216, i1 false)
  %226 = getelementptr inbounds i8, ptr %223, i64 %216
  br label %227

227:                                              ; preds = %225, %222
  %228 = phi ptr [ %226, %225 ], [ %223, %222 ]
  store i8 0, ptr %228, align 1, !tbaa !17
  %229 = ptrtoint ptr %228 to i64
  %230 = sub i64 %229, %213
  %231 = load ptr, ptr %0, align 8, !tbaa !26
  %232 = getelementptr inbounds %struct.xpv, ptr %231, i64 0, i32 2
  store i64 %230, ptr %232, align 8, !tbaa !57
  br label %248

233:                                              ; preds = %212
  %234 = icmp eq i64 %1, 0
  br i1 %234, label %242, label %235

235:                                              ; preds = %233
  %236 = sub i64 0, %4
  %237 = getelementptr inbounds i8, ptr %205, i64 %236
  %238 = sub i64 0, %1
  %239 = getelementptr inbounds i8, ptr %237, i64 %238
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %239, ptr align 1 %198, i64 %1, i1 false)
  call void @Perl_sv_chop(ptr noundef nonnull %0, ptr noundef nonnull %239)
  %240 = icmp eq i64 %4, 0
  br i1 %240, label %248, label %241

241:                                              ; preds = %235
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %237, ptr align 1 %3, i64 %4, i1 false)
  br label %248

242:                                              ; preds = %233
  %243 = icmp eq i64 %4, 0
  br i1 %243, label %247, label %244

244:                                              ; preds = %242
  %245 = sub i64 0, %4
  %246 = getelementptr inbounds i8, ptr %205, i64 %245
  call void @Perl_sv_chop(ptr noundef nonnull %0, ptr noundef nonnull %246)
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %246, ptr align 1 %3, i64 %4, i1 false)
  br label %248

247:                                              ; preds = %242
  call void @Perl_sv_chop(ptr noundef nonnull %0, ptr noundef %205)
  br label %248

248:                                              ; preds = %227, %244, %247, %235, %241
  %249 = load i32, ptr %8, align 4, !tbaa !16
  %250 = and i32 %249, 4194304
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %254, label %252

252:                                              ; preds = %248, %200, %187
  %253 = call i32 @Perl_mg_set(ptr noundef nonnull %0) #17
  br label %254

254:                                              ; preds = %252, %248, %200, %187
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_replace(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !13
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !16
  %7 = and i32 %6, 427886592
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %0, i32 noundef 4)
  br label %10

10:                                               ; preds = %9, %2
  %11 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 1
  %12 = load i32, ptr %11, align 8, !tbaa !13
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = zext i32 %12 to i64
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.33, i64 noundef %15) #17
  br label %16

16:                                               ; preds = %14, %10
  %17 = load i32, ptr %5, align 4, !tbaa !16
  %18 = and i32 %17, 14680064
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %42, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %22 = load i32, ptr %21, align 4, !tbaa !16
  %23 = and i32 %22, 14680064
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = tail call i32 @Perl_mg_free(ptr noundef nonnull %1) #17
  br label %28

27:                                               ; preds = %20
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %1, i32 noundef 7)
  br label %28

28:                                               ; preds = %25, %27
  %29 = load ptr, ptr %0, align 8, !tbaa !26
  %30 = getelementptr inbounds %struct.xpvmg, ptr %29, i64 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  %32 = load ptr, ptr %1, align 8, !tbaa !26
  %33 = getelementptr inbounds %struct.xpvmg, ptr %32, i64 0, i32 1
  store ptr %31, ptr %33, align 8, !tbaa !17
  %34 = load i32, ptr %5, align 4, !tbaa !16
  %35 = and i32 %34, 14680064
  %36 = load i32, ptr %21, align 4, !tbaa !16
  %37 = or i32 %36, %35
  store i32 %37, ptr %21, align 4, !tbaa !16
  %38 = load i32, ptr %5, align 4, !tbaa !16
  %39 = and i32 %38, -14680065
  store i32 %39, ptr %5, align 4, !tbaa !16
  %40 = load ptr, ptr %0, align 8, !tbaa !26
  %41 = getelementptr inbounds %struct.xpvmg, ptr %40, i64 0, i32 1
  store ptr null, ptr %41, align 8, !tbaa !17
  br label %42

42:                                               ; preds = %28, %16
  store i32 0, ptr %3, align 8, !tbaa !13
  tail call void @Perl_sv_clear(ptr noundef nonnull %0)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false), !tbaa.struct !140
  %43 = load i32, ptr %5, align 4, !tbaa !16
  %44 = and i32 %43, 255
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = getelementptr %struct.sv, ptr %0, i64 -1, i32 1
  store ptr %47, ptr %0, align 8, !tbaa !26
  br label %48

48:                                               ; preds = %46, %42
  store i32 %4, ptr %3, align 8, !tbaa !13
  %49 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %50 = load i32, ptr %49, align 4, !tbaa !16
  store i32 0, ptr %11, align 8, !tbaa !13
  store i32 255, ptr %49, align 4, !tbaa !16
  %51 = and i32 %50, 67108864
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  store ptr %54, ptr %1, align 8, !tbaa !26
  store ptr %1, ptr @PL_sv_root, align 8, !tbaa !9
  br label %55

55:                                               ; preds = %53, %48
  %56 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %57 = add nsw i64 %56, -1
  store i64 %57, ptr @PL_sv_count, align 8, !tbaa !60
  ret void
}

declare i32 @Perl_mg_free(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_clear(ptr noundef %0) local_unnamed_addr #1 {
  %2 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #17
  store i64 0, ptr %2, align 8, !tbaa !60
  %3 = icmp eq ptr %0, null
  br i1 %3, label %613, label %4

4:                                                ; preds = %1, %609
  %5 = phi ptr [ %611, %609 ], [ null, %1 ]
  %6 = phi ptr [ %610, %609 ], [ %0, %1 ]
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !25
  %9 = and i32 %8, 255
  %10 = icmp ult i32 %9, 2
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = and i32 %8, 2048
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %338

14:                                               ; preds = %11
  %15 = and i32 %8, 67108864
  %16 = or i32 %15, 255
  store i32 %16, ptr %7, align 4, !tbaa !16
  br label %413

17:                                               ; preds = %4
  %18 = icmp ugt i32 %9, 6
  br i1 %18, label %19, label %50

19:                                               ; preds = %17
  %20 = and i32 %8, 1048576
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %31, label %22

22:                                               ; preds = %19
  %23 = call fastcc zeroext i1 @S_curse(ptr noundef nonnull %6, i1 noundef zeroext true)
  br i1 %23, label %28, label %24

24:                                               ; preds = %22
  %25 = icmp eq ptr %5, null
  %26 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 2
  %27 = getelementptr inbounds %struct.av, ptr %5, i64 0, i32 3
  br i1 %25, label %613, label %440

28:                                               ; preds = %22
  %29 = load i32, ptr %7, align 4, !tbaa !16
  %30 = and i32 %29, 255
  br label %31

31:                                               ; preds = %28, %19
  %32 = phi i32 [ %30, %28 ], [ %9, %19 ]
  %33 = icmp eq i32 %32, 12
  br i1 %33, label %34, label %39

34:                                               ; preds = %31
  call void @Perl_hv_kill_backrefs(ptr noundef nonnull %6) #17
  %35 = load ptr, ptr %6, align 8, !tbaa !9
  %36 = getelementptr inbounds %struct.xpvmg, ptr %35, i64 0, i32 1
  %37 = load ptr, ptr %36, align 8, !tbaa !17
  %38 = icmp eq ptr %37, null
  br i1 %38, label %47, label %45

39:                                               ; preds = %31
  %40 = load ptr, ptr %6, align 8, !tbaa !9
  %41 = getelementptr inbounds %struct.xpvmg, ptr %40, i64 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !17
  %43 = icmp eq ptr %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %39
  call fastcc void @S_sv_unmagicext_flags(ptr noundef nonnull %6, i32 noundef 60, ptr noundef null, i32 noundef 0)
  br label %45

45:                                               ; preds = %34, %44
  %46 = call i32 @Perl_mg_free(ptr noundef nonnull %6) #17
  br label %47

47:                                               ; preds = %45, %39, %34
  %48 = load i32, ptr %7, align 4, !tbaa !16
  %49 = and i32 %48, -14680065
  store i32 %49, ptr %7, align 4, !tbaa !16
  br label %50

50:                                               ; preds = %47, %17
  %51 = phi i32 [ %49, %47 ], [ %8, %17 ]
  %52 = phi i32 [ %32, %47 ], [ %9, %17 ]
  switch i32 %52, label %385 [
    i32 15, label %53
    i32 8, label %113
    i32 13, label %114
    i32 14, label %114
    i32 12, label %120
    i32 11, label %175
    i32 10, label %200
    i32 9, label %243
    i32 7, label %317
    i32 6, label %317
    i32 5, label %317
    i32 4, label %317
    i32 3, label %317
  ]

53:                                               ; preds = %50
  %54 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 3
  %55 = load ptr, ptr %54, align 8, !tbaa !17
  %56 = icmp eq ptr %55, null
  br i1 %56, label %85, label %57

57:                                               ; preds = %53
  %58 = call ptr @Perl_PerlIO_stdin() #17
  %59 = icmp eq ptr %55, %58
  br i1 %59, label %85, label %60

60:                                               ; preds = %57
  %61 = load ptr, ptr %54, align 8, !tbaa !17
  %62 = call ptr @Perl_PerlIO_stdout() #17
  %63 = icmp eq ptr %61, %62
  br i1 %63, label %85, label %64

64:                                               ; preds = %60
  %65 = load ptr, ptr %54, align 8, !tbaa !17
  %66 = call ptr @Perl_PerlIO_stderr() #17
  %67 = icmp eq ptr %65, %66
  br i1 %67, label %85, label %68

68:                                               ; preds = %64
  %69 = load ptr, ptr %6, align 8, !tbaa !26
  %70 = getelementptr inbounds %struct.xpvio, ptr %69, i64 0, i32 17
  %71 = load i8, ptr %70, align 1, !tbaa !141
  %72 = and i8 %71, 64
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %85

74:                                               ; preds = %68
  %75 = getelementptr inbounds %struct.xpvio, ptr %69, i64 0, i32 16
  %76 = load i8, ptr %75, align 8, !tbaa !142
  %77 = add i8 %76, -43
  %78 = icmp ult i8 %77, 55
  %79 = zext i8 %77 to i55
  %80 = lshr i55 -18014398508957695, %79
  %81 = and i55 %80, 1
  %82 = icmp ne i55 %81, 0
  %83 = select i1 %78, i1 %82, i1 false
  %84 = call zeroext i1 @Perl_io_close(ptr noundef nonnull %6, ptr noundef null, i1 noundef zeroext false, i1 noundef zeroext %83) #17
  br label %85

85:                                               ; preds = %74, %68, %64, %60, %57, %53
  %86 = load ptr, ptr %6, align 8, !tbaa !26
  %87 = getelementptr inbounds %struct.xpvio, ptr %86, i64 0, i32 6
  %88 = load ptr, ptr %87, align 8, !tbaa !17
  %89 = icmp eq ptr %88, null
  br i1 %89, label %98, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.xpvio, ptr %86, i64 0, i32 17
  %92 = load i8, ptr %91, align 1, !tbaa !141
  %93 = and i8 %92, 64
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %90
  %96 = call i32 @closedir(ptr noundef nonnull %88)
  %97 = load ptr, ptr %6, align 8, !tbaa !26
  br label %98

98:                                               ; preds = %95, %90, %85
  %99 = phi ptr [ %97, %95 ], [ %86, %90 ], [ %86, %85 ]
  %100 = getelementptr inbounds %struct.xpvio, ptr %99, i64 0, i32 6
  store ptr null, ptr %100, align 8, !tbaa !17
  %101 = load ptr, ptr %6, align 8, !tbaa !26
  %102 = getelementptr inbounds %struct.xpvio, ptr %101, i64 0, i32 10
  %103 = load ptr, ptr %102, align 8, !tbaa !143
  call void @Perl_safesysfree(ptr noundef %103) #17
  %104 = load ptr, ptr %6, align 8, !tbaa !26
  %105 = getelementptr inbounds %struct.xpvio, ptr %104, i64 0, i32 12
  %106 = load ptr, ptr %105, align 8, !tbaa !144
  call void @Perl_safesysfree(ptr noundef %106) #17
  %107 = load ptr, ptr %6, align 8, !tbaa !26
  %108 = getelementptr inbounds %struct.xpvio, ptr %107, i64 0, i32 14
  %109 = load ptr, ptr %108, align 8, !tbaa !145
  call void @Perl_safesysfree(ptr noundef %109) #17
  %110 = load ptr, ptr @PL_statgv, align 8, !tbaa !9
  %111 = icmp eq ptr %6, %110
  br i1 %111, label %112, label %317

112:                                              ; preds = %98
  store ptr null, ptr @PL_statgv, align 8, !tbaa !9
  br label %317

113:                                              ; preds = %236, %50
  call void @Perl_pregfree2(ptr noundef nonnull %6) #17
  br label %317

114:                                              ; preds = %50, %50
  call void @Perl_cv_undef(ptr noundef nonnull %6) #17
  %115 = load ptr, ptr %6, align 8, !tbaa !26
  %116 = getelementptr inbounds %struct.xpvcv, ptr %115, i64 0, i32 4
  %117 = load ptr, ptr %116, align 8, !tbaa !134
  %118 = icmp eq ptr %117, null
  br i1 %118, label %317, label %119

119:                                              ; preds = %114
  call void @Perl_sv_del_backref(ptr noundef nonnull %117, ptr noundef nonnull %6)
  br label %317

120:                                              ; preds = %50
  %121 = load ptr, ptr @PL_last_swash_hv, align 8, !tbaa !9
  %122 = icmp eq ptr %121, %6
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  store ptr null, ptr @PL_last_swash_hv, align 8, !tbaa !9
  br label %124

124:                                              ; preds = %123, %120
  %125 = load ptr, ptr %6, align 8, !tbaa !9
  %126 = getelementptr inbounds %struct.xpvhv, ptr %125, i64 0, i32 2
  %127 = load i64, ptr %126, align 8, !tbaa !146
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %174, label %129

129:                                              ; preds = %124
  %130 = load i32, ptr @PL_phase, align 4, !tbaa !17
  %131 = icmp eq i32 %130, 6
  %132 = and i32 %51, 33554432
  %133 = icmp eq i32 %132, 0
  %134 = select i1 %131, i1 true, i1 %133
  br i1 %134, label %169, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %struct.hv, ptr %6, i64 0, i32 3
  %137 = load ptr, ptr %136, align 8, !tbaa !17
  %138 = getelementptr inbounds %struct.xpvhv, ptr %125, i64 0, i32 3
  %139 = load i64, ptr %138, align 8, !tbaa !48
  %140 = add i64 %139, 1
  %141 = getelementptr inbounds ptr, ptr %137, i64 %140
  %142 = load ptr, ptr %141, align 8, !tbaa !17
  %143 = icmp eq ptr %142, null
  br i1 %143, label %169, label %144

144:                                              ; preds = %135
  %145 = getelementptr inbounds %struct.xpvhv_aux, ptr %141, i64 0, i32 4
  %146 = load i32, ptr %145, align 4, !tbaa !67
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %144
  %149 = load ptr, ptr %142, align 8, !tbaa !9
  %150 = icmp eq ptr %149, null
  br i1 %150, label %169, label %151

151:                                              ; preds = %144, %148
  %152 = phi ptr [ %149, %148 ], [ %142, %144 ]
  %153 = load ptr, ptr @PL_stashcache, align 8, !tbaa !9
  %154 = icmp eq ptr %153, null
  br i1 %154, label %167, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %struct.hek, ptr %152, i64 0, i32 2
  %157 = getelementptr inbounds %struct.hek, ptr %152, i64 0, i32 1
  %158 = load i32, ptr %157, align 4, !tbaa !84
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds i8, ptr %156, i64 %159
  %161 = getelementptr inbounds i8, ptr %160, i64 1
  %162 = load i8, ptr %161, align 1, !tbaa !17
  %163 = and i8 %162, 1
  %164 = zext i8 %163 to i32
  %165 = load i32, ptr %152, align 4, !tbaa !147
  %166 = call ptr @Perl_hv_common(ptr noundef nonnull %153, ptr noundef null, ptr noundef nonnull %156, i64 noundef %159, i32 noundef %164, i32 noundef 68, ptr noundef null, i32 noundef %165) #17
  br label %167

167:                                              ; preds = %155, %151
  call void @Perl_hv_name_set(ptr noundef nonnull %6, ptr noundef null, i32 noundef 0, i32 noundef 0) #17
  %168 = load ptr, ptr %6, align 8, !tbaa !26
  br label %169

169:                                              ; preds = %135, %167, %148, %129
  %170 = phi ptr [ %125, %135 ], [ %168, %167 ], [ %125, %148 ], [ %125, %129 ]
  store ptr %5, ptr %170, align 8, !tbaa !50
  %171 = load i64, ptr %2, align 8, !tbaa !60
  %172 = getelementptr inbounds %struct.xpvmg, ptr %170, i64 0, i32 1
  store i64 %171, ptr %172, align 8, !tbaa !17
  store i64 0, ptr %2, align 8, !tbaa !60
  %173 = call ptr @Perl_hfree_next_entry(ptr noundef nonnull %6, ptr noundef nonnull %2) #17
  br label %432

174:                                              ; preds = %124
  call void @Perl_hv_undef_flags(ptr noundef nonnull %6, i32 noundef 2) #17
  br label %385

175:                                              ; preds = %50
  %176 = load ptr, ptr @PL_comppad, align 8, !tbaa !9
  %177 = icmp eq ptr %176, %6
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  store ptr null, ptr @PL_comppad, align 8, !tbaa !9
  store ptr null, ptr @PL_curpad, align 8, !tbaa !9
  br label %179

179:                                              ; preds = %178, %175
  %180 = and i32 %51, 1073741824
  %181 = icmp eq i32 %180, 0
  %182 = load ptr, ptr %6, align 8, !tbaa !105
  br i1 %181, label %187, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %struct.xpvav, ptr %182, i64 0, i32 2
  %185 = load i64, ptr %184, align 8, !tbaa !107
  %186 = icmp sgt i64 %185, -1
  br i1 %186, label %190, label %187

187:                                              ; preds = %179, %183
  %188 = getelementptr inbounds %struct.xpvav, ptr %182, i64 0, i32 4
  %189 = load ptr, ptr %188, align 8, !tbaa !46
  call void @Perl_safesysfree(ptr noundef %189) #17
  br label %385

190:                                              ; preds = %183
  %191 = getelementptr inbounds %struct.av, ptr %6, i64 0, i32 3
  %192 = load ptr, ptr %191, align 8, !tbaa !17
  %193 = add nsw i64 %185, -1
  store i64 %193, ptr %184, align 8, !tbaa !107
  %194 = getelementptr inbounds ptr, ptr %192, i64 %185
  %195 = load ptr, ptr %194, align 8, !tbaa !9
  %196 = load ptr, ptr %191, align 8, !tbaa !17
  %197 = getelementptr inbounds %struct.xpvav, ptr %182, i64 0, i32 3
  %198 = load i64, ptr %197, align 8, !tbaa !108
  %199 = getelementptr inbounds ptr, ptr %196, i64 %198
  store ptr %5, ptr %199, align 8, !tbaa !9
  br label %432

200:                                              ; preds = %50
  %201 = load ptr, ptr %6, align 8, !tbaa !26
  %202 = getelementptr inbounds %struct.xpvlv, ptr %201, i64 0, i32 9
  %203 = load i8, ptr %202, align 8, !tbaa !40
  switch i8 %203, label %225 [
    i8 84, label %204
    i8 116, label %236
  ]

204:                                              ; preds = %200
  %205 = getelementptr inbounds %struct.xpvlv, ptr %201, i64 0, i32 8
  %206 = load ptr, ptr %205, align 8, !tbaa !128
  %207 = getelementptr inbounds %struct.he, ptr %206, i64 0, i32 1
  %208 = load ptr, ptr %207, align 8, !tbaa !148
  %209 = getelementptr inbounds %struct.hek, ptr %208, i64 0, i32 2
  %210 = load ptr, ptr %209, align 4, !tbaa !9
  %211 = icmp eq ptr %210, null
  br i1 %211, label %222, label %212

212:                                              ; preds = %204
  %213 = getelementptr inbounds %struct.sv, ptr %210, i64 0, i32 1
  %214 = load i32, ptr %213, align 8, !tbaa !13
  %215 = icmp ugt i32 %214, 1
  br i1 %215, label %216, label %218

216:                                              ; preds = %212
  %217 = add i32 %214, -1
  store i32 %217, ptr %213, align 8, !tbaa !13
  br label %222

218:                                              ; preds = %212
  call void @Perl_sv_free2(ptr noundef nonnull %210, i32 noundef %214)
  %219 = load ptr, ptr %6, align 8, !tbaa !26
  %220 = getelementptr inbounds %struct.xpvlv, ptr %219, i64 0, i32 8
  %221 = load ptr, ptr %220, align 8, !tbaa !128
  br label %222

222:                                              ; preds = %204, %216, %218
  %223 = phi ptr [ %206, %204 ], [ %206, %216 ], [ %221, %218 ]
  %224 = load ptr, ptr @PL_hv_fetch_ent_mh, align 8, !tbaa !9
  store ptr %224, ptr %223, align 8, !tbaa !150
  store ptr %223, ptr @PL_hv_fetch_ent_mh, align 8, !tbaa !9
  br label %236

225:                                              ; preds = %200
  %226 = getelementptr inbounds %struct.xpvlv, ptr %201, i64 0, i32 8
  %227 = load ptr, ptr %226, align 8, !tbaa !128
  %228 = icmp eq ptr %227, null
  br i1 %228, label %236, label %229

229:                                              ; preds = %225
  %230 = getelementptr inbounds %struct.sv, ptr %227, i64 0, i32 1
  %231 = load i32, ptr %230, align 8, !tbaa !13
  %232 = icmp ugt i32 %231, 1
  br i1 %232, label %233, label %235

233:                                              ; preds = %229
  %234 = add i32 %231, -1
  store i32 %234, ptr %230, align 8, !tbaa !13
  br label %236

235:                                              ; preds = %229
  call void @Perl_sv_free2(ptr noundef nonnull %227, i32 noundef %231)
  br label %236

236:                                              ; preds = %235, %233, %225, %200, %222
  %237 = load i32, ptr %7, align 4, !tbaa !16
  %238 = and i32 %237, 255
  %239 = icmp eq i32 %238, 8
  %240 = and i32 %237, 16826623
  %241 = icmp eq i32 %240, 16777226
  %242 = or i1 %239, %241
  br i1 %242, label %113, label %243

243:                                              ; preds = %236, %50
  %244 = phi i32 [ %237, %236 ], [ %51, %50 ]
  %245 = and i32 %244, 49152
  %246 = icmp eq i32 %245, 32768
  br i1 %246, label %247, label %305

247:                                              ; preds = %243
  %248 = and i32 %244, 255
  %249 = add nsw i32 %248, -9
  %250 = icmp ult i32 %249, 2
  br i1 %250, label %251, label %305

251:                                              ; preds = %247
  %252 = getelementptr inbounds %struct.gv, ptr %6, i64 0, i32 3
  %253 = load ptr, ptr %252, align 8, !tbaa !17
  %254 = getelementptr inbounds %struct.gp, ptr %253, i64 0, i32 3
  %255 = load i32, ptr %254, align 8, !tbaa !61
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %286

257:                                              ; preds = %251
  %258 = getelementptr inbounds %struct.gp, ptr %253, i64 0, i32 2
  %259 = load ptr, ptr %258, align 8, !tbaa !23
  %260 = icmp eq ptr %259, null
  br i1 %260, label %286, label %261

261:                                              ; preds = %257
  %262 = load ptr, ptr %6, align 8, !tbaa !62
  %263 = getelementptr inbounds %struct.xpvgv, ptr %262, i64 0, i32 5
  %264 = load ptr, ptr %263, align 8, !tbaa !17
  %265 = icmp eq ptr %264, null
  br i1 %265, label %286, label %266

266:                                              ; preds = %261
  %267 = getelementptr inbounds %struct.hv, ptr %264, i64 0, i32 2
  %268 = load i32, ptr %267, align 4, !tbaa !64
  %269 = and i32 %268, 33554432
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %286, label %271

271:                                              ; preds = %266
  %272 = getelementptr inbounds %struct.hv, ptr %264, i64 0, i32 3
  %273 = load ptr, ptr %272, align 8, !tbaa !17
  %274 = load ptr, ptr %264, align 8, !tbaa !66
  %275 = getelementptr inbounds %struct.xpvhv, ptr %274, i64 0, i32 3
  %276 = load i64, ptr %275, align 8, !tbaa !48
  %277 = add i64 %276, 1
  %278 = getelementptr inbounds ptr, ptr %273, i64 %277
  %279 = load ptr, ptr %278, align 8, !tbaa !17
  %280 = icmp eq ptr %279, null
  br i1 %280, label %286, label %281

281:                                              ; preds = %271
  %282 = getelementptr inbounds %struct.xpvhv_aux, ptr %278, i64 0, i32 4
  %283 = load i32, ptr %282, align 4, !tbaa !67
  %284 = icmp eq i32 %283, -1
  br i1 %284, label %286, label %285

285:                                              ; preds = %281
  call void @Perl_mro_method_changed_in(ptr noundef nonnull %264) #17
  br label %286

286:                                              ; preds = %266, %271, %281, %251, %285, %261, %257
  call void @Perl_gp_free(ptr noundef nonnull %6) #17
  %287 = load ptr, ptr %6, align 8, !tbaa !26
  %288 = getelementptr inbounds %struct.xpvgv, ptr %287, i64 0, i32 4
  %289 = load ptr, ptr %288, align 8, !tbaa !17
  %290 = icmp eq ptr %289, null
  br i1 %290, label %292, label %291

291:                                              ; preds = %286
  call void @Perl_unshare_hek(ptr noundef nonnull %289) #17
  br label %292

292:                                              ; preds = %291, %286
  %293 = load i32, ptr %7, align 4, !tbaa !16
  %294 = and i32 %293, 1073741824
  %295 = icmp eq i32 %294, 0
  %296 = and i32 %293, 49152
  %297 = icmp eq i32 %296, 49152
  %298 = or i1 %295, %297
  br i1 %298, label %299, label %305

299:                                              ; preds = %292
  %300 = load ptr, ptr %6, align 8, !tbaa !26
  %301 = getelementptr inbounds %struct.xpvgv, ptr %300, i64 0, i32 5
  %302 = load ptr, ptr %301, align 8, !tbaa !17
  %303 = icmp eq ptr %302, null
  br i1 %303, label %305, label %304

304:                                              ; preds = %299
  call void @Perl_sv_del_backref(ptr noundef nonnull %302, ptr noundef nonnull %6)
  br label %305

305:                                              ; preds = %247, %292, %299, %304, %243
  %306 = load ptr, ptr @PL_last_in_gv, align 8, !tbaa !9
  %307 = icmp eq ptr %6, %306
  br i1 %307, label %308, label %309

308:                                              ; preds = %305
  store ptr null, ptr @PL_last_in_gv, align 8, !tbaa !9
  br label %317

309:                                              ; preds = %305
  %310 = load ptr, ptr @PL_statgv, align 8, !tbaa !9
  %311 = icmp eq ptr %6, %310
  br i1 %311, label %312, label %313

312:                                              ; preds = %309
  store ptr null, ptr @PL_statgv, align 8, !tbaa !9
  br label %317

313:                                              ; preds = %309
  %314 = load ptr, ptr @PL_stderrgv, align 8, !tbaa !9
  %315 = icmp eq ptr %6, %314
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  store ptr null, ptr @PL_stderrgv, align 8, !tbaa !9
  br label %317

317:                                              ; preds = %50, %50, %50, %50, %50, %312, %316, %313, %308, %114, %119, %98, %112, %113
  %318 = load i32, ptr %7, align 4, !tbaa !16
  %319 = and i32 %318, 33554432
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %335, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 3
  %323 = load ptr, ptr %322, align 8, !tbaa !17
  %324 = getelementptr inbounds i8, ptr %323, i64 -1
  %325 = load i8, ptr %324, align 1, !tbaa !17
  %326 = zext i8 %325 to i64
  %327 = icmp eq i8 %325, 0
  br i1 %327, label %328, label %331

328:                                              ; preds = %321
  %329 = getelementptr inbounds i8, ptr %323, i64 -9
  %330 = load i64, ptr %329, align 1
  br label %331

331:                                              ; preds = %328, %321
  %332 = phi i64 [ %326, %321 ], [ %330, %328 ]
  %333 = sub i64 0, %332
  %334 = getelementptr inbounds i8, ptr %323, i64 %333
  store ptr %334, ptr %322, align 8, !tbaa !17
  br label %335

335:                                              ; preds = %331, %317
  %336 = and i32 %318, 2048
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %346, label %338

338:                                              ; preds = %335, %11
  %339 = phi i32 [ %8, %11 ], [ %318, %335 ]
  %340 = phi i32 [ %9, %11 ], [ %52, %335 ]
  %341 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 3
  %342 = load ptr, ptr %341, align 8, !tbaa !17
  %343 = and i32 %339, -2147481600
  %344 = icmp eq i32 %343, -2147481600
  br i1 %344, label %345, label %385

345:                                              ; preds = %338
  call void @Perl_sv_del_backref(ptr noundef %342, ptr noundef nonnull %6)
  br label %385

346:                                              ; preds = %335
  %347 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 3
  %348 = load ptr, ptr %347, align 8, !tbaa !17
  %349 = icmp eq ptr %348, null
  br i1 %349, label %385, label %350

350:                                              ; preds = %346
  %351 = and i32 %318, 255
  %352 = icmp eq i32 %351, 15
  br i1 %352, label %353, label %359

353:                                              ; preds = %350
  %354 = load ptr, ptr %6, align 8, !tbaa !26
  %355 = getelementptr inbounds %struct.xpvio, ptr %354, i64 0, i32 17
  %356 = load i8, ptr %355, align 1, !tbaa !141
  %357 = and i8 %356, 64
  %358 = icmp eq i8 %357, 0
  br i1 %358, label %385, label %359

359:                                              ; preds = %353, %350
  %360 = and i32 %318, 268435456
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %378, label %362

362:                                              ; preds = %359
  %363 = load ptr, ptr %6, align 8, !tbaa !26
  %364 = getelementptr inbounds %struct.xpv, ptr %363, i64 0, i32 3
  %365 = load i64, ptr %364, align 8, !tbaa !17
  %366 = icmp eq i64 %365, 0
  br i1 %366, label %376, label %367

367:                                              ; preds = %362
  %368 = getelementptr inbounds i8, ptr %348, i64 %365
  %369 = getelementptr inbounds i8, ptr %368, i64 -1
  %370 = load i8, ptr %369, align 1, !tbaa !17
  %371 = icmp eq i8 %370, 0
  br i1 %371, label %378, label %372

372:                                              ; preds = %367
  %373 = add i8 %370, -1
  store i8 %373, ptr %369, align 1, !tbaa !17
  %374 = load ptr, ptr %6, align 8, !tbaa !26
  %375 = getelementptr inbounds %struct.xpv, ptr %374, i64 0, i32 3
  store i64 0, ptr %375, align 8, !tbaa !17
  br label %378

376:                                              ; preds = %362
  %377 = getelementptr inbounds i8, ptr %348, i64 -8
  call void @Perl_unshare_hek(ptr noundef nonnull %377) #17
  br label %378

378:                                              ; preds = %376, %372, %367, %359
  %379 = load ptr, ptr %6, align 8, !tbaa !26
  %380 = getelementptr inbounds %struct.xpv, ptr %379, i64 0, i32 3
  %381 = load i64, ptr %380, align 8, !tbaa !17
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %385, label %383

383:                                              ; preds = %378
  %384 = load ptr, ptr %347, align 8, !tbaa !17
  call void @Perl_safesysfree(ptr noundef %384) #17
  br label %385

385:                                              ; preds = %528, %187, %174, %50, %346, %353, %383, %378, %338, %345, %547
  %386 = phi ptr [ %530, %528 ], [ %549, %547 ], [ %6, %345 ], [ %6, %338 ], [ %6, %378 ], [ %6, %383 ], [ %6, %353 ], [ %6, %346 ], [ %6, %50 ], [ %6, %174 ], [ %6, %187 ]
  %387 = phi ptr [ null, %528 ], [ null, %547 ], [ null, %345 ], [ %342, %338 ], [ null, %378 ], [ null, %383 ], [ null, %353 ], [ null, %346 ], [ null, %50 ], [ null, %174 ], [ null, %187 ]
  %388 = phi ptr [ %536, %528 ], [ %553, %547 ], [ %5, %345 ], [ %5, %338 ], [ %5, %378 ], [ %5, %383 ], [ %5, %353 ], [ %5, %346 ], [ %5, %50 ], [ %5, %174 ], [ %5, %187 ]
  %389 = phi i32 [ 11, %528 ], [ %552, %547 ], [ %340, %345 ], [ %340, %338 ], [ %52, %378 ], [ %52, %383 ], [ %52, %353 ], [ %52, %346 ], [ %52, %50 ], [ 12, %174 ], [ 11, %187 ]
  %390 = getelementptr inbounds %struct.sv, ptr %386, i64 0, i32 2
  %391 = load i32, ptr %390, align 4, !tbaa !16
  %392 = and i32 %391, 67108864
  %393 = or i32 %392, 255
  store i32 %393, ptr %390, align 4, !tbaa !16
  %394 = zext i32 %389 to i64
  %395 = getelementptr inbounds %struct.body_details, ptr @bodies_by_type, i64 %394, i32 3
  %396 = load i8, ptr %395, align 1
  %397 = and i8 %396, 64
  %398 = icmp eq i8 %397, 0
  br i1 %398, label %407, label %399

399:                                              ; preds = %385
  %400 = load ptr, ptr %386, align 8, !tbaa !26
  %401 = getelementptr inbounds %struct.body_details, ptr @bodies_by_type, i64 %394, i32 2
  %402 = load i8, ptr %401, align 2, !tbaa !45
  %403 = zext i8 %402 to i64
  %404 = getelementptr inbounds i8, ptr %400, i64 %403
  %405 = getelementptr inbounds [16 x ptr], ptr @PL_body_roots, i64 0, i64 %394
  %406 = load ptr, ptr %405, align 8, !tbaa !9
  store ptr %406, ptr %404, align 8, !tbaa !9
  store ptr %404, ptr %405, align 8, !tbaa !9
  br label %413

407:                                              ; preds = %385
  %408 = getelementptr inbounds %struct.body_details, ptr @bodies_by_type, i64 %394
  %409 = load i8, ptr %408, align 8, !tbaa !42
  %410 = icmp eq i8 %409, 0
  br i1 %410, label %413, label %411

411:                                              ; preds = %407
  %412 = load ptr, ptr %386, align 8, !tbaa !26
  call void @Perl_safesysfree(ptr noundef %412) #17
  br label %413

413:                                              ; preds = %399, %411, %407, %14
  %414 = phi ptr [ %386, %399 ], [ %386, %411 ], [ %386, %407 ], [ %6, %14 ]
  %415 = phi ptr [ %387, %399 ], [ %387, %411 ], [ %387, %407 ], [ null, %14 ]
  %416 = phi ptr [ %388, %399 ], [ %388, %411 ], [ %388, %407 ], [ %5, %14 ]
  %417 = icmp eq ptr %414, %0
  br i1 %417, label %432, label %418

418:                                              ; preds = %413
  %419 = getelementptr inbounds %struct.sv, ptr %414, i64 0, i32 1
  %420 = load i32, ptr %419, align 8, !tbaa !13
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %422, label %432

422:                                              ; preds = %418
  %423 = getelementptr inbounds %struct.sv, ptr %414, i64 0, i32 2
  %424 = load i32, ptr %423, align 4, !tbaa !16
  store i32 255, ptr %423, align 4, !tbaa !16
  %425 = and i32 %424, 67108864
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %427, label %429

427:                                              ; preds = %422
  %428 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  store ptr %428, ptr %414, align 8, !tbaa !26
  store ptr %414, ptr @PL_sv_root, align 8, !tbaa !9
  br label %429

429:                                              ; preds = %427, %422
  %430 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %431 = add nsw i64 %430, -1
  store i64 %431, ptr @PL_sv_count, align 8, !tbaa !60
  br label %432

432:                                              ; preds = %190, %413, %418, %429, %169
  %433 = phi ptr [ %415, %418 ], [ %415, %429 ], [ %415, %413 ], [ %195, %190 ], [ %173, %169 ]
  %434 = phi ptr [ %416, %418 ], [ %416, %429 ], [ %416, %413 ], [ %6, %190 ], [ %6, %169 ]
  %435 = icmp eq ptr %434, null
  %436 = getelementptr inbounds %struct.sv, ptr %434, i64 0, i32 2
  %437 = getelementptr inbounds %struct.av, ptr %434, i64 0, i32 3
  %438 = icmp eq ptr %433, null
  br i1 %438, label %439, label %465

439:                                              ; preds = %432
  br i1 %435, label %613, label %440

440:                                              ; preds = %24, %439
  %441 = phi ptr [ %5, %24 ], [ %434, %439 ]
  %442 = phi ptr [ %26, %24 ], [ %436, %439 ]
  %443 = phi ptr [ %27, %24 ], [ %437, %439 ]
  %444 = load i32, ptr %442, align 4, !tbaa !16
  %445 = trunc i32 %444 to i8
  switch i8 %445, label %515 [
    i8 11, label %454
    i8 12, label %446
  ]

446:                                              ; preds = %440
  %447 = call ptr @Perl_hfree_next_entry(ptr noundef nonnull %441, ptr noundef nonnull %2) #17
  %448 = icmp eq ptr %447, null
  br i1 %448, label %449, label %465

449:                                              ; preds = %446
  %450 = load ptr, ptr %441, align 8, !tbaa !9
  %451 = getelementptr inbounds %struct.xpvhv, ptr %450, i64 0, i32 2
  %452 = load i64, ptr %451, align 8, !tbaa !146
  %453 = icmp eq i64 %452, 0
  br i1 %453, label %547, label %515

454:                                              ; preds = %440
  %455 = load ptr, ptr %441, align 8, !tbaa !105
  %456 = getelementptr inbounds %struct.xpvav, ptr %455, i64 0, i32 2
  %457 = load i64, ptr %456, align 8, !tbaa !107
  %458 = icmp sgt i64 %457, -1
  br i1 %458, label %459, label %528

459:                                              ; preds = %454
  %460 = load ptr, ptr %443, align 8, !tbaa !17
  %461 = add nsw i64 %457, -1
  store i64 %461, ptr %456, align 8, !tbaa !107
  %462 = getelementptr inbounds ptr, ptr %460, i64 %457
  %463 = load ptr, ptr %462, align 8, !tbaa !9
  %464 = icmp eq ptr %463, null
  br i1 %464, label %515, label %465

465:                                              ; preds = %459, %446, %432
  %466 = phi ptr [ %443, %459 ], [ %437, %432 ], [ %443, %446 ]
  %467 = phi ptr [ %442, %459 ], [ %436, %432 ], [ %442, %446 ]
  %468 = phi i1 [ false, %459 ], [ %435, %432 ], [ false, %446 ]
  %469 = phi ptr [ %441, %459 ], [ %434, %432 ], [ %441, %446 ]
  %470 = phi ptr [ %463, %459 ], [ %433, %432 ], [ %447, %446 ]
  %471 = getelementptr inbounds %struct.sv, ptr %470, i64 0, i32 1
  %472 = load i32, ptr %471, align 8, !tbaa !13
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %491, label %474

474:                                              ; preds = %465
  %475 = add i32 %472, -1
  store i32 %475, ptr %471, align 8, !tbaa !13
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %477, label %515

477:                                              ; preds = %474
  %478 = getelementptr inbounds %struct.sv, ptr %470, i64 0, i32 2
  %479 = load i32, ptr %478, align 4, !tbaa !16
  %480 = and i32 %479, 134283264
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %609, label %482

482:                                              ; preds = %477
  %483 = icmp eq ptr %470, @PL_sv_undef
  %484 = icmp eq ptr %470, @PL_sv_yes
  %485 = or i1 %483, %484
  %486 = icmp eq ptr %470, @PL_sv_no
  %487 = or i1 %486, %485
  %488 = icmp eq ptr %470, @PL_sv_placeholder
  %489 = or i1 %488, %487
  br i1 %489, label %490, label %609

490:                                              ; preds = %482
  store i32 2147483647, ptr %471, align 8, !tbaa !13
  br label %515

491:                                              ; preds = %465
  %492 = getelementptr inbounds %struct.sv, ptr %470, i64 0, i32 2
  %493 = load i32, ptr %492, align 4, !tbaa !16
  %494 = and i32 %493, 67108864
  %495 = icmp eq i32 %494, 0
  %496 = load i8, ptr @PL_in_clean_all, align 1, !range !74
  %497 = icmp eq i8 %496, 0
  %498 = select i1 %495, i1 %497, i1 false
  br i1 %498, label %499, label %515

499:                                              ; preds = %491
  %500 = and i32 %493, 134283264
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %511, label %502

502:                                              ; preds = %499
  %503 = icmp eq ptr %470, @PL_sv_undef
  %504 = icmp eq ptr %470, @PL_sv_yes
  %505 = or i1 %503, %504
  %506 = icmp eq ptr %470, @PL_sv_no
  %507 = or i1 %506, %505
  %508 = icmp eq ptr %470, @PL_sv_placeholder
  %509 = or i1 %508, %507
  br i1 %509, label %510, label %511

510:                                              ; preds = %502
  store i32 2147483647, ptr %471, align 8, !tbaa !13
  br label %515

511:                                              ; preds = %502, %499
  %512 = call zeroext i1 @Perl_ckwarn_d(i32 noundef 24) #17
  br i1 %512, label %513, label %515

513:                                              ; preds = %511
  %514 = ptrtoint ptr %470 to i64
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 24, ptr noundef nonnull @.str.34, i64 noundef %514) #17
  br label %515

515:                                              ; preds = %440, %449, %513, %511, %510, %491, %490, %474, %459
  %516 = phi ptr [ %466, %513 ], [ %466, %511 ], [ %466, %510 ], [ %466, %491 ], [ %466, %490 ], [ %466, %474 ], [ %443, %459 ], [ %443, %449 ], [ %443, %440 ]
  %517 = phi ptr [ %467, %513 ], [ %467, %511 ], [ %467, %510 ], [ %467, %491 ], [ %467, %490 ], [ %467, %474 ], [ %442, %459 ], [ %442, %449 ], [ %442, %440 ]
  %518 = phi i1 [ %468, %513 ], [ %468, %511 ], [ %468, %510 ], [ %468, %491 ], [ %468, %490 ], [ %468, %474 ], [ false, %459 ], [ false, %449 ], [ false, %440 ]
  %519 = phi ptr [ %469, %513 ], [ %469, %511 ], [ %469, %510 ], [ %469, %491 ], [ %469, %490 ], [ %469, %474 ], [ %441, %459 ], [ %441, %449 ], [ %441, %440 ]
  br i1 %518, label %613, label %520

520:                                              ; preds = %515, %591
  %521 = load i32, ptr %517, align 4, !tbaa !16
  %522 = trunc i32 %521 to i8
  switch i8 %522, label %591 [
    i8 11, label %523
    i8 12, label %539
  ]

523:                                              ; preds = %520
  %524 = load ptr, ptr %519, align 8, !tbaa !105
  %525 = getelementptr inbounds %struct.xpvav, ptr %524, i64 0, i32 2
  %526 = load i64, ptr %525, align 8, !tbaa !107
  %527 = icmp sgt i64 %526, -1
  br i1 %527, label %556, label %528

528:                                              ; preds = %523, %454
  %529 = phi ptr [ %443, %454 ], [ %516, %523 ]
  %530 = phi ptr [ %441, %454 ], [ %519, %523 ]
  %531 = phi ptr [ %455, %454 ], [ %524, %523 ]
  %532 = load ptr, ptr %529, align 8, !tbaa !17
  %533 = getelementptr inbounds %struct.xpvav, ptr %531, i64 0, i32 3
  %534 = load i64, ptr %533, align 8, !tbaa !108
  %535 = getelementptr inbounds ptr, ptr %532, i64 %534
  %536 = load ptr, ptr %535, align 8, !tbaa !9
  %537 = getelementptr inbounds %struct.xpvav, ptr %531, i64 0, i32 4
  %538 = load ptr, ptr %537, align 8, !tbaa !46
  call void @Perl_safesysfree(ptr noundef %538) #17
  br label %385

539:                                              ; preds = %520
  %540 = call ptr @Perl_hfree_next_entry(ptr noundef nonnull %519, ptr noundef nonnull %2) #17
  %541 = icmp eq ptr %540, null
  br i1 %541, label %542, label %562

542:                                              ; preds = %539
  %543 = load ptr, ptr %519, align 8, !tbaa !9
  %544 = getelementptr inbounds %struct.xpvhv, ptr %543, i64 0, i32 2
  %545 = load i64, ptr %544, align 8, !tbaa !146
  %546 = icmp eq i64 %545, 0
  br i1 %546, label %547, label %591

547:                                              ; preds = %542, %449
  %548 = phi ptr [ %442, %449 ], [ %517, %542 ]
  %549 = phi ptr [ %441, %449 ], [ %519, %542 ]
  %550 = phi ptr [ %450, %449 ], [ %543, %542 ]
  %551 = load i32, ptr %548, align 4, !tbaa !16
  %552 = and i32 %551, 255
  %553 = load ptr, ptr %550, align 8, !tbaa !50
  %554 = getelementptr inbounds %struct.xpvmg, ptr %550, i64 0, i32 1
  %555 = load i64, ptr %554, align 8, !tbaa !17
  store i64 %555, ptr %2, align 8, !tbaa !60
  call void @Perl_hv_undef_flags(ptr noundef nonnull %549, i32 noundef 2) #17
  br label %385

556:                                              ; preds = %523
  %557 = load ptr, ptr %516, align 8, !tbaa !17
  %558 = add nsw i64 %526, -1
  store i64 %558, ptr %525, align 8, !tbaa !107
  %559 = getelementptr inbounds ptr, ptr %557, i64 %526
  %560 = load ptr, ptr %559, align 8, !tbaa !9
  %561 = icmp eq ptr %560, null
  br i1 %561, label %591, label %562

562:                                              ; preds = %539, %556
  %563 = phi ptr [ %560, %556 ], [ %540, %539 ]
  %564 = getelementptr inbounds %struct.sv, ptr %563, i64 0, i32 1
  %565 = load i32, ptr %564, align 8, !tbaa !13
  %566 = icmp eq i32 %565, 0
  br i1 %566, label %567, label %592

567:                                              ; preds = %562
  %568 = getelementptr inbounds %struct.sv, ptr %563, i64 0, i32 2
  %569 = load i32, ptr %568, align 4, !tbaa !16
  %570 = and i32 %569, 67108864
  %571 = icmp eq i32 %570, 0
  %572 = load i8, ptr @PL_in_clean_all, align 1, !range !74
  %573 = icmp eq i8 %572, 0
  %574 = select i1 %571, i1 %573, i1 false
  br i1 %574, label %575, label %591

575:                                              ; preds = %567
  %576 = and i32 %569, 134283264
  %577 = icmp eq i32 %576, 0
  br i1 %577, label %587, label %578

578:                                              ; preds = %575
  %579 = icmp eq ptr %563, @PL_sv_undef
  %580 = icmp eq ptr %563, @PL_sv_yes
  %581 = or i1 %579, %580
  %582 = icmp eq ptr %563, @PL_sv_no
  %583 = or i1 %582, %581
  %584 = icmp eq ptr %563, @PL_sv_placeholder
  %585 = or i1 %584, %583
  br i1 %585, label %586, label %587

586:                                              ; preds = %578
  store i32 2147483647, ptr %564, align 8, !tbaa !13
  br label %591

587:                                              ; preds = %578, %575
  %588 = call zeroext i1 @Perl_ckwarn_d(i32 noundef 24) #17
  br i1 %588, label %589, label %591

589:                                              ; preds = %587
  %590 = ptrtoint ptr %563 to i64
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 24, ptr noundef nonnull @.str.34, i64 noundef %590) #17
  br label %591

591:                                              ; preds = %520, %542, %567, %586, %587, %589, %608, %556, %592
  br i1 %518, label %613, label %520, !llvm.loop !151

592:                                              ; preds = %562
  %593 = add i32 %565, -1
  store i32 %593, ptr %564, align 8, !tbaa !13
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %595, label %591

595:                                              ; preds = %592
  %596 = getelementptr inbounds %struct.sv, ptr %563, i64 0, i32 2
  %597 = load i32, ptr %596, align 4, !tbaa !16
  %598 = and i32 %597, 134283264
  %599 = icmp eq i32 %598, 0
  br i1 %599, label %609, label %600

600:                                              ; preds = %595
  %601 = icmp eq ptr %563, @PL_sv_undef
  %602 = icmp eq ptr %563, @PL_sv_yes
  %603 = or i1 %601, %602
  %604 = icmp eq ptr %563, @PL_sv_no
  %605 = or i1 %604, %603
  %606 = icmp eq ptr %563, @PL_sv_placeholder
  %607 = or i1 %606, %605
  br i1 %607, label %608, label %609

608:                                              ; preds = %600
  store i32 2147483647, ptr %564, align 8, !tbaa !13
  br label %591

609:                                              ; preds = %595, %600, %482, %477
  %610 = phi ptr [ %470, %477 ], [ %470, %482 ], [ %563, %600 ], [ %563, %595 ]
  %611 = phi ptr [ %469, %477 ], [ %469, %482 ], [ %519, %600 ], [ %519, %595 ]
  %612 = icmp eq ptr %610, null
  br i1 %612, label %613, label %4, !llvm.loop !152

613:                                              ; preds = %24, %439, %609, %515, %591, %1
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i1 @S_curse(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #1 {
  %3 = load ptr, ptr @PL_defstash, align 8, !tbaa !9
  %4 = icmp eq ptr %3, null
  br i1 %4, label %298, label %5

5:                                                ; preds = %2
  %6 = load ptr, ptr @PL_destroyhook, align 8, !tbaa !9
  %7 = tail call zeroext i1 %6(ptr noundef %0) #17
  br i1 %7, label %8, label %298

8:                                                ; preds = %5
  %9 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !9
  %10 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  %11 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %0, align 8, !tbaa !26
  %13 = load ptr, ptr %12, align 8, !tbaa !50
  br label %14

14:                                               ; preds = %265, %8
  %15 = phi ptr [ %13, %8 ], [ %267, %265 ]
  %16 = phi ptr [ %9, %8 ], [ %261, %265 ]
  %17 = getelementptr inbounds %struct.hv, ptr %15, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !64
  %19 = and i32 %18, 33554432
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %260, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct.hv, ptr %15, i64 0, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  %24 = load ptr, ptr %15, align 8, !tbaa !66
  %25 = getelementptr inbounds %struct.xpvhv, ptr %24, i64 0, i32 3
  %26 = load i64, ptr %25, align 8, !tbaa !48
  %27 = add i64 %26, 1
  %28 = getelementptr inbounds ptr, ptr %23, i64 %27
  %29 = load ptr, ptr %28, align 8, !tbaa !17
  %30 = icmp eq ptr %29, null
  br i1 %30, label %260, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %struct.xpvhv_aux, ptr %28, i64 0, i32 4
  %33 = load i32, ptr %32, align 4, !tbaa !67
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = load ptr, ptr %29, align 8, !tbaa !9
  %37 = icmp eq ptr %36, null
  br i1 %37, label %260, label %38

38:                                               ; preds = %31, %35
  %39 = and i32 %18, 1048576
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %56

41:                                               ; preds = %38
  %42 = load ptr, ptr %24, align 8, !tbaa !50
  %43 = icmp eq ptr %42, null
  br i1 %43, label %56, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.xpvhv_aux, ptr %28, i64 0, i32 5
  %46 = load ptr, ptr %45, align 8, !tbaa !153
  %47 = icmp eq ptr %46, null
  br i1 %47, label %48, label %50

48:                                               ; preds = %44
  %49 = tail call ptr @Perl_mro_meta_init(ptr noundef nonnull %15) #17
  br label %50

50:                                               ; preds = %44, %48
  %51 = phi ptr [ %49, %48 ], [ %46, %44 ]
  %52 = getelementptr inbounds %struct.mro_meta, ptr %51, i64 0, i32 8
  %53 = load i32, ptr %52, align 8, !tbaa !154
  %54 = load i32, ptr @PL_sub_generation, align 4, !tbaa !25
  %55 = icmp eq i32 %53, %54
  br i1 %55, label %83, label %56

56:                                               ; preds = %38, %50, %41
  %57 = phi ptr [ %42, %50 ], [ null, %41 ], [ null, %38 ]
  %58 = tail call ptr @Perl_gv_fetchmeth_pvn_autoload(ptr noundef nonnull %15, ptr noundef nonnull @.str.96, i64 noundef 7, i32 noundef 0, i32 noundef 0) #17
  %59 = icmp eq ptr %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.gv, ptr %58, i64 0, i32 3
  %62 = load ptr, ptr %61, align 8, !tbaa !17
  %63 = getelementptr inbounds %struct.gp, ptr %62, i64 0, i32 2
  %64 = load ptr, ptr %63, align 8, !tbaa !23
  br label %65

65:                                               ; preds = %60, %56
  %66 = phi ptr [ %64, %60 ], [ %57, %56 ]
  %67 = load i32, ptr %17, align 4, !tbaa !64
  %68 = and i32 %67, 1048576
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %83

70:                                               ; preds = %65
  %71 = icmp eq ptr %66, null
  %72 = select i1 %71, ptr inttoptr (i64 24 to ptr), ptr %66
  %73 = load ptr, ptr %15, align 8, !tbaa !66
  store ptr %72, ptr %73, align 8, !tbaa !50
  %74 = load i32, ptr @PL_sub_generation, align 4, !tbaa !25
  %75 = load ptr, ptr %22, align 8, !tbaa !17
  %76 = getelementptr inbounds %struct.xpvhv, ptr %73, i64 0, i32 3
  %77 = load i64, ptr %76, align 8, !tbaa !48
  %78 = add i64 %77, 1
  %79 = getelementptr inbounds ptr, ptr %75, i64 %78
  %80 = getelementptr inbounds %struct.xpvhv_aux, ptr %79, i64 0, i32 5
  %81 = load ptr, ptr %80, align 8, !tbaa !153
  %82 = getelementptr inbounds %struct.mro_meta, ptr %81, i64 0, i32 8
  store i32 %74, ptr %82, align 8, !tbaa !154
  br label %83

83:                                               ; preds = %65, %70, %50
  %84 = phi ptr [ %42, %50 ], [ %66, %70 ], [ %66, %65 ]
  %85 = ptrtoint ptr %84 to i64
  switch i64 %85, label %86 [
    i64 24, label %260
    i64 0, label %260
  ]

86:                                               ; preds = %83
  %87 = load ptr, ptr %84, align 8, !tbaa !119
  %88 = getelementptr inbounds %struct.xpvcv, ptr %87, i64 0, i32 12
  %89 = load i32, ptr %88, align 4, !tbaa !121
  %90 = and i32 %89, 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %260

92:                                               ; preds = %86
  %93 = and i32 %89, 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %110

95:                                               ; preds = %92
  %96 = getelementptr inbounds %struct.xpvcv, ptr %87, i64 0, i32 5
  %97 = load ptr, ptr %96, align 8, !tbaa !17
  %98 = icmp eq ptr %97, null
  br i1 %98, label %260, label %99

99:                                               ; preds = %95
  %100 = load ptr, ptr %97, align 8, !tbaa !156
  %101 = getelementptr inbounds %struct.op, ptr %100, i64 0, i32 4
  %102 = load i16, ptr %101, align 8
  %103 = and i16 %102, 511
  switch i16 %103, label %110 [
    i16 186, label %260
    i16 3, label %104
  ]

104:                                              ; preds = %99
  %105 = load ptr, ptr %100, align 8, !tbaa !156
  %106 = getelementptr inbounds %struct.op, ptr %105, i64 0, i32 4
  %107 = load i16, ptr %106, align 8
  %108 = and i16 %107, 511
  %109 = icmp eq i16 %108, 203
  br i1 %109, label %260, label %110

110:                                              ; preds = %99, %104, %92
  %111 = load i32, ptr %10, align 8, !tbaa !13
  %112 = add i32 %111, 1
  store i32 %112, ptr %10, align 8, !tbaa !13
  %113 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %114 = icmp eq ptr %113, null
  br i1 %114, label %115, label %144

115:                                              ; preds = %110
  %116 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %117 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %117, ptr %116, align 8, !tbaa !26
  %118 = getelementptr inbounds %struct.sv, ptr %116, i64 0, i32 1
  store i32 170, ptr %118, align 8, !tbaa !13
  %119 = getelementptr inbounds %struct.sv, ptr %116, i64 0, i32 2
  store i32 0, ptr %119, align 4, !tbaa !16
  store ptr %116, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %120 = getelementptr inbounds %struct.sv, ptr %116, i64 1
  store ptr %120, ptr @PL_sv_root, align 8, !tbaa !9
  br label %121

121:                                              ; preds = %121, %115
  %122 = phi ptr [ %120, %115 ], [ %139, %121 ]
  %123 = phi i64 [ 1, %115 ], [ %138, %121 ]
  %124 = getelementptr inbounds %struct.sv, ptr %122, i64 1
  store ptr %124, ptr %122, align 8, !tbaa !26
  %125 = getelementptr inbounds %struct.sv, ptr %116, i64 %123, i32 2
  store i32 255, ptr %125, align 4, !tbaa !16
  %126 = add nuw nsw i64 %123, 1
  %127 = getelementptr inbounds %struct.sv, ptr %116, i64 %126
  %128 = getelementptr inbounds %struct.sv, ptr %127, i64 1
  store ptr %128, ptr %127, align 8, !tbaa !26
  %129 = getelementptr inbounds %struct.sv, ptr %116, i64 %126, i32 2
  store i32 255, ptr %129, align 4, !tbaa !16
  %130 = add nuw nsw i64 %123, 2
  %131 = getelementptr inbounds %struct.sv, ptr %116, i64 %130
  %132 = getelementptr inbounds %struct.sv, ptr %131, i64 1
  store ptr %132, ptr %131, align 8, !tbaa !26
  %133 = getelementptr inbounds %struct.sv, ptr %116, i64 %130, i32 2
  store i32 255, ptr %133, align 4, !tbaa !16
  %134 = add nuw nsw i64 %123, 3
  %135 = getelementptr inbounds %struct.sv, ptr %116, i64 %134
  %136 = getelementptr inbounds %struct.sv, ptr %135, i64 1
  store ptr %136, ptr %135, align 8, !tbaa !26
  %137 = getelementptr inbounds %struct.sv, ptr %116, i64 %134, i32 2
  store i32 255, ptr %137, align 4, !tbaa !16
  %138 = add nuw nsw i64 %123, 4
  %139 = getelementptr inbounds %struct.sv, ptr %116, i64 %138
  %140 = icmp eq i64 %138, 169
  br i1 %140, label %141, label %121, !llvm.loop !59

141:                                              ; preds = %121
  store ptr null, ptr %139, align 8, !tbaa !26
  %142 = getelementptr inbounds %struct.sv, ptr %116, i64 169, i32 2
  store i32 255, ptr %142, align 4, !tbaa !16
  %143 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %144

144:                                              ; preds = %110, %141
  %145 = phi ptr [ %143, %141 ], [ %113, %110 ]
  %146 = load ptr, ptr %145, align 8, !tbaa !26
  store ptr %146, ptr @PL_sv_root, align 8, !tbaa !9
  %147 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %148 = add nsw i64 %147, 1
  store i64 %148, ptr @PL_sv_count, align 8, !tbaa !60
  %149 = getelementptr inbounds %struct.sv, ptr %145, i64 0, i32 1
  store i32 1, ptr %149, align 8, !tbaa !13
  %150 = getelementptr inbounds %struct.sv, ptr %145, i64 0, i32 2
  %151 = getelementptr inbounds %struct.sv, ptr %145, i64 0, i32 3
  %152 = getelementptr %struct.sv, ptr %145, i64 -1, i32 1
  store ptr %152, ptr %145, align 8, !tbaa !26
  store i32 2049, ptr %150, align 4, !tbaa !16
  store i64 0, ptr %151, align 8, !tbaa !17
  %153 = load i32, ptr %11, align 4, !tbaa !16
  %154 = and i32 %153, -524289
  store i32 %154, ptr %11, align 4, !tbaa !16
  store ptr %0, ptr %151, align 8, !tbaa !17
  %155 = load i32, ptr %150, align 4, !tbaa !16
  %156 = or i32 %155, 134283264
  store i32 %156, ptr %150, align 4, !tbaa !16
  tail call void @Perl_push_scope() #17
  %157 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !9
  %158 = getelementptr inbounds %struct.stackinfo, ptr %157, i64 0, i32 3
  %159 = load ptr, ptr %158, align 8, !tbaa !99
  %160 = icmp eq ptr %159, null
  br i1 %160, label %161, label %166

161:                                              ; preds = %144
  %162 = tail call ptr @Perl_new_stackinfo(i32 noundef 32, i32 noundef 22) #17
  %163 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !9
  %164 = getelementptr inbounds %struct.stackinfo, ptr %162, i64 0, i32 2
  store ptr %163, ptr %164, align 8, !tbaa !101
  %165 = getelementptr inbounds %struct.stackinfo, ptr %163, i64 0, i32 3
  store ptr %162, ptr %165, align 8, !tbaa !99
  br label %166

166:                                              ; preds = %161, %144
  %167 = phi ptr [ %159, %144 ], [ %162, %161 ]
  %168 = getelementptr inbounds %struct.stackinfo, ptr %167, i64 0, i32 6
  store i32 6, ptr %168, align 8, !tbaa !102
  %169 = getelementptr inbounds %struct.stackinfo, ptr %167, i64 0, i32 4
  store i32 -1, ptr %169, align 8, !tbaa !103
  %170 = load ptr, ptr %167, align 8, !tbaa !104
  %171 = load ptr, ptr %170, align 8, !tbaa !105
  %172 = getelementptr inbounds %struct.xpvav, ptr %171, i64 0, i32 2
  store i64 0, ptr %172, align 8, !tbaa !107
  %173 = load ptr, ptr @PL_stack_base, align 8, !tbaa !9
  %174 = ptrtoint ptr %16 to i64
  %175 = ptrtoint ptr %173 to i64
  %176 = sub i64 %174, %175
  %177 = ashr exact i64 %176, 3
  %178 = load ptr, ptr @PL_curstack, align 8, !tbaa !9
  %179 = load ptr, ptr %178, align 8, !tbaa !105
  %180 = getelementptr inbounds %struct.xpvav, ptr %179, i64 0, i32 2
  store i64 %177, ptr %180, align 8, !tbaa !107
  %181 = getelementptr inbounds %struct.av, ptr %170, i64 0, i32 3
  %182 = load ptr, ptr %181, align 8, !tbaa !17
  store ptr %182, ptr @PL_stack_base, align 8, !tbaa !9
  %183 = load ptr, ptr %167, align 8, !tbaa !104
  %184 = load ptr, ptr %183, align 8, !tbaa !105
  %185 = getelementptr inbounds %struct.xpvav, ptr %184, i64 0, i32 3
  %186 = load i64, ptr %185, align 8, !tbaa !108
  %187 = getelementptr inbounds ptr, ptr %182, i64 %186
  store ptr %187, ptr @PL_stack_max, align 8, !tbaa !9
  %188 = load ptr, ptr %167, align 8, !tbaa !104
  %189 = load ptr, ptr %188, align 8, !tbaa !105
  %190 = getelementptr inbounds %struct.xpvav, ptr %189, i64 0, i32 2
  %191 = load i64, ptr %190, align 8, !tbaa !107
  %192 = getelementptr inbounds ptr, ptr %182, i64 %191
  store ptr %192, ptr @PL_stack_sp, align 8, !tbaa !9
  %193 = load ptr, ptr %167, align 8, !tbaa !104
  store ptr %193, ptr @PL_curstack, align 8, !tbaa !9
  store ptr %167, ptr @PL_curstackinfo, align 8, !tbaa !9
  %194 = ptrtoint ptr %187 to i64
  %195 = ptrtoint ptr %192 to i64
  %196 = sub i64 %194, %195
  %197 = icmp slt i64 %196, 16
  br i1 %197, label %198, label %200

198:                                              ; preds = %166
  %199 = tail call ptr @Perl_stack_grow(ptr noundef %192, ptr noundef %192, i64 noundef 2) #17
  br label %200

200:                                              ; preds = %198, %166
  %201 = phi ptr [ %199, %198 ], [ %192, %166 ]
  %202 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !9
  %203 = getelementptr inbounds i32, ptr %202, i64 1
  store ptr %203, ptr @PL_markstack_ptr, align 8, !tbaa !9
  %204 = load ptr, ptr @PL_markstack_max, align 8, !tbaa !9
  %205 = icmp eq ptr %203, %204
  br i1 %205, label %206, label %208

206:                                              ; preds = %200
  %207 = tail call ptr @Perl_markstack_grow() #17
  br label %208

208:                                              ; preds = %200, %206
  %209 = phi ptr [ %207, %206 ], [ %203, %200 ]
  %210 = load ptr, ptr @PL_stack_base, align 8, !tbaa !9
  %211 = ptrtoint ptr %201 to i64
  %212 = ptrtoint ptr %210 to i64
  %213 = sub i64 %211, %212
  %214 = lshr exact i64 %213, 3
  %215 = trunc i64 %214 to i32
  store i32 %215, ptr %209, align 4, !tbaa !25
  %216 = getelementptr inbounds ptr, ptr %201, i64 1
  store ptr %145, ptr %216, align 8, !tbaa !9
  store ptr %216, ptr @PL_stack_sp, align 8, !tbaa !9
  %217 = tail call i32 @Perl_call_sv(ptr noundef nonnull %84, i32 noundef 45) #17
  %218 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !9
  %219 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !9
  %220 = getelementptr inbounds %struct.stackinfo, ptr %219, i64 0, i32 2
  %221 = load ptr, ptr %220, align 8, !tbaa !101
  %222 = icmp eq ptr %221, null
  br i1 %222, label %223, label %224

223:                                              ; preds = %208
  tail call void @Perl_croak_popstack() #17
  br label %224

224:                                              ; preds = %208, %223
  %225 = load ptr, ptr @PL_stack_base, align 8, !tbaa !9
  %226 = ptrtoint ptr %218 to i64
  %227 = ptrtoint ptr %225 to i64
  %228 = sub i64 %226, %227
  %229 = ashr exact i64 %228, 3
  %230 = load ptr, ptr @PL_curstack, align 8, !tbaa !9
  %231 = load ptr, ptr %230, align 8, !tbaa !105
  %232 = getelementptr inbounds %struct.xpvav, ptr %231, i64 0, i32 2
  store i64 %229, ptr %232, align 8, !tbaa !107
  %233 = load ptr, ptr %221, align 8, !tbaa !104
  %234 = getelementptr inbounds %struct.av, ptr %233, i64 0, i32 3
  %235 = load ptr, ptr %234, align 8, !tbaa !17
  store ptr %235, ptr @PL_stack_base, align 8, !tbaa !9
  %236 = load ptr, ptr %221, align 8, !tbaa !104
  %237 = load ptr, ptr %236, align 8, !tbaa !105
  %238 = getelementptr inbounds %struct.xpvav, ptr %237, i64 0, i32 3
  %239 = load i64, ptr %238, align 8, !tbaa !108
  %240 = getelementptr inbounds ptr, ptr %235, i64 %239
  store ptr %240, ptr @PL_stack_max, align 8, !tbaa !9
  %241 = load ptr, ptr %221, align 8, !tbaa !104
  %242 = load ptr, ptr %241, align 8, !tbaa !105
  %243 = getelementptr inbounds %struct.xpvav, ptr %242, i64 0, i32 2
  %244 = load i64, ptr %243, align 8, !tbaa !107
  %245 = getelementptr inbounds ptr, ptr %235, i64 %244
  store ptr %245, ptr @PL_stack_sp, align 8, !tbaa !9
  %246 = load ptr, ptr %221, align 8, !tbaa !104
  store ptr %246, ptr @PL_curstack, align 8, !tbaa !9
  store ptr %221, ptr @PL_curstackinfo, align 8, !tbaa !9
  tail call void @Perl_pop_scope() #17
  %247 = load i32, ptr %149, align 8, !tbaa !13
  %248 = icmp ult i32 %247, 2
  br i1 %248, label %249, label %256

249:                                              ; preds = %224
  %250 = load i32, ptr %10, align 8, !tbaa !13
  %251 = add i32 %250, -1
  store i32 %251, ptr %10, align 8, !tbaa !13
  store ptr null, ptr %151, align 8, !tbaa !17
  %252 = load i32, ptr %150, align 4, !tbaa !16
  %253 = and i32 %252, -2049
  store i32 %253, ptr %150, align 4, !tbaa !16
  %254 = load i32, ptr %149, align 8, !tbaa !13
  %255 = icmp ugt i32 %254, 1
  br i1 %255, label %256, label %259

256:                                              ; preds = %224, %249
  %257 = phi i32 [ %254, %249 ], [ %247, %224 ]
  %258 = add i32 %257, -1
  store i32 %258, ptr %149, align 8, !tbaa !13
  br label %260

259:                                              ; preds = %249
  tail call void @Perl_sv_free2(ptr noundef nonnull %145, i32 noundef %254)
  br label %260

260:                                              ; preds = %259, %256, %86, %95, %104, %83, %83, %99, %35, %21, %14
  %261 = phi ptr [ %16, %35 ], [ %16, %21 ], [ %16, %14 ], [ %16, %86 ], [ %16, %104 ], [ %16, %99 ], [ %16, %95 ], [ %16, %83 ], [ %16, %83 ], [ %245, %256 ], [ %245, %259 ]
  %262 = load i32, ptr %11, align 4, !tbaa !16
  %263 = and i32 %262, 1048576
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %269, label %265

265:                                              ; preds = %260
  %266 = load ptr, ptr %0, align 8, !tbaa !26
  %267 = load ptr, ptr %266, align 8, !tbaa !50
  %268 = icmp eq ptr %267, %15
  br i1 %268, label %269, label %14, !llvm.loop !158

269:                                              ; preds = %260, %265
  br i1 %1, label %270, label %298

270:                                              ; preds = %269
  %271 = load i32, ptr %10, align 8, !tbaa !13
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %298, label %273

273:                                              ; preds = %270
  %274 = load i8, ptr @PL_in_clean_objs, align 1, !tbaa !5, !range !74, !noundef !75
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %315, label %276

276:                                              ; preds = %273
  %277 = load i32, ptr %17, align 4, !tbaa !64
  %278 = and i32 %277, 33554432
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %296, label %280

280:                                              ; preds = %276
  %281 = getelementptr inbounds %struct.hv, ptr %15, i64 0, i32 3
  %282 = load ptr, ptr %281, align 8, !tbaa !17
  %283 = load ptr, ptr %15, align 8, !tbaa !66
  %284 = getelementptr inbounds %struct.xpvhv, ptr %283, i64 0, i32 3
  %285 = load i64, ptr %284, align 8, !tbaa !48
  %286 = add i64 %285, 1
  %287 = getelementptr inbounds ptr, ptr %282, i64 %286
  %288 = load ptr, ptr %287, align 8, !tbaa !17
  %289 = icmp eq ptr %288, null
  br i1 %289, label %296, label %290

290:                                              ; preds = %280
  %291 = getelementptr inbounds %struct.xpvhv_aux, ptr %287, i64 0, i32 4
  %292 = load i32, ptr %291, align 4, !tbaa !67
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %296, label %294

294:                                              ; preds = %290
  %295 = load ptr, ptr %288, align 8, !tbaa !9
  br label %296

296:                                              ; preds = %290, %276, %280, %294
  %297 = phi ptr [ %295, %294 ], [ null, %280 ], [ null, %276 ], [ %288, %290 ]
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.97, ptr noundef %297) #17
  br label %315

298:                                              ; preds = %269, %270, %5, %2
  %299 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %300 = load i32, ptr %299, align 4, !tbaa !16
  %301 = and i32 %300, 1048576
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %315, label %303

303:                                              ; preds = %298
  %304 = load ptr, ptr %0, align 8, !tbaa !26
  %305 = load ptr, ptr %304, align 8, !tbaa !50
  %306 = and i32 %300, -1048577
  store i32 %306, ptr %299, align 4, !tbaa !16
  store ptr null, ptr %304, align 8, !tbaa !50
  %307 = icmp eq ptr %305, null
  br i1 %307, label %315, label %308

308:                                              ; preds = %303
  %309 = getelementptr inbounds %struct.sv, ptr %305, i64 0, i32 1
  %310 = load i32, ptr %309, align 8, !tbaa !13
  %311 = icmp ugt i32 %310, 1
  br i1 %311, label %312, label %314

312:                                              ; preds = %308
  %313 = add i32 %310, -1
  store i32 %313, ptr %309, align 8, !tbaa !13
  br label %315

314:                                              ; preds = %308
  tail call void @Perl_sv_free2(ptr noundef nonnull %305, i32 noundef %310)
  br label %315

315:                                              ; preds = %314, %312, %303, %296, %273, %298
  %316 = phi i1 [ true, %298 ], [ false, %273 ], [ false, %296 ], [ true, %303 ], [ true, %312 ], [ true, %314 ]
  ret i1 %316
}

declare void @Perl_hv_kill_backrefs(ptr noundef) local_unnamed_addr #3

declare ptr @Perl_PerlIO_stdin() local_unnamed_addr #3

declare ptr @Perl_PerlIO_stdout() local_unnamed_addr #3

declare ptr @Perl_PerlIO_stderr() local_unnamed_addr #3

declare zeroext i1 @Perl_io_close(ptr noundef, ptr noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @closedir(ptr nocapture noundef) local_unnamed_addr #9

declare void @Perl_pregfree2(ptr noundef) local_unnamed_addr #3

declare void @Perl_cv_undef(ptr noundef) local_unnamed_addr #3

declare ptr @Perl_hv_common(ptr noundef, ptr noundef, ptr noundef, i64 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @Perl_hv_name_set(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare ptr @Perl_hfree_next_entry(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @Perl_hv_undef_flags(ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @Perl_unshare_hek(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_free(ptr noundef %0) local_unnamed_addr #1 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !13
  %6 = icmp ugt i32 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = add i32 %5, -1
  store i32 %8, ptr %4, align 8, !tbaa !13
  br label %10

9:                                                ; preds = %3
  tail call void @Perl_sv_free2(ptr noundef nonnull %0, i32 noundef %5)
  br label %10

10:                                               ; preds = %1, %7, %9
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable
define dso_local ptr @Perl_sv_newref(ptr noundef returned %0) local_unnamed_addr #10 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !13
  %6 = add i32 %5, 1
  store i32 %6, ptr %4, align 8, !tbaa !13
  br label %7

7:                                                ; preds = %3, %1
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_free2(ptr noundef %0, i32 noundef %1) local_unnamed_addr #1 {
  %3 = icmp eq i32 %1, 1
  br i1 %3, label %4, label %31

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  store i32 0, ptr %5, align 8, !tbaa !13
  %6 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !16
  %8 = and i32 %7, 134283264
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %4
  %11 = icmp eq ptr %0, @PL_sv_undef
  %12 = icmp eq ptr %0, @PL_sv_yes
  %13 = or i1 %11, %12
  %14 = icmp eq ptr %0, @PL_sv_no
  %15 = or i1 %14, %13
  %16 = icmp eq ptr %0, @PL_sv_placeholder
  %17 = or i1 %16, %15
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  store i32 2147483647, ptr %5, align 8, !tbaa !13
  br label %56

19:                                               ; preds = %10, %4
  tail call void @Perl_sv_clear(ptr noundef %0)
  %20 = load i32, ptr %5, align 8, !tbaa !13
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %56

22:                                               ; preds = %19
  %23 = load i32, ptr %6, align 4, !tbaa !16
  store i32 255, ptr %6, align 4, !tbaa !16
  %24 = and i32 %23, 67108864
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  store ptr %27, ptr %0, align 8, !tbaa !26
  store ptr %0, ptr @PL_sv_root, align 8, !tbaa !9
  br label %28

28:                                               ; preds = %26, %22
  %29 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %30 = add nsw i64 %29, -1
  store i64 %30, ptr @PL_sv_count, align 8, !tbaa !60
  br label %56

31:                                               ; preds = %2
  %32 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  %34 = and i32 %33, 67108864
  %35 = icmp eq i32 %34, 0
  %36 = load i8, ptr @PL_in_clean_all, align 1, !range !74
  %37 = icmp eq i8 %36, 0
  %38 = select i1 %35, i1 %37, i1 false
  br i1 %38, label %39, label %56

39:                                               ; preds = %31
  %40 = and i32 %33, 134283264
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %52, label %42

42:                                               ; preds = %39
  %43 = icmp eq ptr %0, @PL_sv_undef
  %44 = icmp eq ptr %0, @PL_sv_yes
  %45 = or i1 %43, %44
  %46 = icmp eq ptr %0, @PL_sv_no
  %47 = or i1 %46, %45
  %48 = icmp eq ptr %0, @PL_sv_placeholder
  %49 = or i1 %48, %47
  br i1 %49, label %50, label %52

50:                                               ; preds = %42
  %51 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  store i32 2147483647, ptr %51, align 8, !tbaa !13
  br label %56

52:                                               ; preds = %42, %39
  %53 = tail call zeroext i1 @Perl_ckwarn_d(i32 noundef 24) #17
  br i1 %53, label %54, label %56

54:                                               ; preds = %52
  %55 = ptrtoint ptr %0 to i64
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 24, ptr noundef nonnull @.str.34, i64 noundef %55) #17
  br label %56

56:                                               ; preds = %31, %19, %28, %18, %50, %54, %52
  ret void
}

declare zeroext i1 @Perl_ckwarn_d(i32 noundef) local_unnamed_addr #3

declare void @Perl_warner(i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @Perl_sv_len(ptr noundef %0) local_unnamed_addr #1 {
  %2 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #17
  %3 = icmp eq ptr %0, null
  br i1 %3, label %16, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !16
  %7 = and i32 %6, 2098176
  %8 = icmp eq i32 %7, 1024
  br i1 %8, label %9, label %13

9:                                                ; preds = %4
  %10 = load ptr, ptr %0, align 8, !tbaa !26
  %11 = getelementptr inbounds %struct.xpv, ptr %10, i64 0, i32 2
  %12 = load i64, ptr %11, align 8, !tbaa !57
  br label %16

13:                                               ; preds = %4
  %14 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %0, ptr noundef nonnull %2, i32 noundef 34)
  %15 = load i64, ptr %2, align 8, !tbaa !60
  br label %16

16:                                               ; preds = %9, %13, %1
  %17 = phi i64 [ 0, %1 ], [ %15, %13 ], [ %12, %9 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #17
  ret i64 %17
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @Perl_sv_len_utf8(ptr noundef %0) local_unnamed_addr #1 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 2097152
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = tail call i32 @Perl_mg_get(ptr noundef nonnull %0) #17
  br label %10

10:                                               ; preds = %3, %8
  %11 = tail call i64 @Perl_sv_len_utf8_nomg(ptr noundef nonnull %0)
  br label %12

12:                                               ; preds = %1, %10
  %13 = phi i64 [ %11, %10 ], [ 0, %1 ]
  ret i64 %13
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @Perl_sv_len_utf8_nomg(ptr noundef %0) local_unnamed_addr #1 {
  %2 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #17
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 2098176
  %6 = icmp eq i32 %5, 1024
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = load ptr, ptr %0, align 8, !tbaa !26
  %9 = getelementptr inbounds %struct.xpv, ptr %8, i64 0, i32 2
  %10 = load i64, ptr %9, align 8, !tbaa !57
  store i64 %10, ptr %2, align 8, !tbaa !60
  %11 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  br label %16

13:                                               ; preds = %1
  %14 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %0, ptr noundef nonnull %2, i32 noundef 32)
  %15 = load i32, ptr %3, align 4, !tbaa !16
  br label %16

16:                                               ; preds = %13, %7
  %17 = phi i32 [ %4, %7 ], [ %15, %13 ]
  %18 = phi ptr [ %12, %7 ], [ %14, %13 ]
  %19 = load i8, ptr @PL_utf8cache, align 1, !tbaa !17
  %20 = icmp eq i8 %19, 0
  %21 = and i32 %17, 536870912
  %22 = icmp eq i32 %21, 0
  br i1 %20, label %92, label %23

23:                                               ; preds = %16
  br i1 %22, label %24, label %26

24:                                               ; preds = %23
  %25 = load i64, ptr %2, align 8, !tbaa !60
  br label %97

26:                                               ; preds = %23
  %27 = and i32 %17, 14680064
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %59, label %29

29:                                               ; preds = %26
  %30 = call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 119) #17
  %31 = icmp eq ptr %30, null
  br i1 %31, label %59, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.magic, ptr %30, i64 0, i32 5
  %34 = load i64, ptr %33, align 8, !tbaa !76
  %35 = icmp eq i64 %34, -1
  br i1 %35, label %36, label %49

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.magic, ptr %30, i64 0, i32 7
  %38 = load ptr, ptr %37, align 8, !tbaa !109
  %39 = icmp eq ptr %38, null
  br i1 %39, label %59, label %40

40:                                               ; preds = %36
  %41 = load i64, ptr %38, align 8, !tbaa !60
  %42 = getelementptr inbounds i64, ptr %38, i64 1
  %43 = load i64, ptr %42, align 8, !tbaa !60
  %44 = getelementptr inbounds i8, ptr %18, i64 %43
  %45 = load i64, ptr %2, align 8, !tbaa !60
  %46 = getelementptr inbounds i8, ptr %18, i64 %45
  %47 = call i64 @Perl_utf8_length(ptr noundef %44, ptr noundef %46) #17
  %48 = add i64 %47, %41
  br label %49

49:                                               ; preds = %32, %40
  %50 = phi i64 [ %48, %40 ], [ %34, %32 ]
  %51 = load i8, ptr @PL_utf8cache, align 1, !tbaa !17
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %97

53:                                               ; preds = %49
  %54 = load i64, ptr %2, align 8, !tbaa !60
  %55 = getelementptr inbounds i8, ptr %18, i64 %54
  %56 = call i64 @Perl_utf8_length(ptr noundef %18, ptr noundef %55) #17
  %57 = icmp eq i64 %50, %56
  br i1 %57, label %97, label %58

58:                                               ; preds = %53
  call void @Perl_save_I8(ptr noundef nonnull @PL_utf8cache) #17
  store i8 0, ptr @PL_utf8cache, align 1, !tbaa !17
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.100, ptr noundef nonnull @.str.35, i64 noundef %50, i64 noundef %56, ptr noundef nonnull %0) #17
  br label %97

59:                                               ; preds = %26, %36, %29
  %60 = phi i1 [ false, %36 ], [ true, %29 ], [ true, %26 ]
  %61 = phi ptr [ %30, %36 ], [ null, %29 ], [ null, %26 ]
  %62 = load i64, ptr %2, align 8, !tbaa !60
  %63 = getelementptr inbounds i8, ptr %18, i64 %62
  %64 = call i64 @Perl_utf8_length(ptr noundef %18, ptr noundef %63) #17
  %65 = load i32, ptr %3, align 4, !tbaa !16
  %66 = and i32 %65, 136381440
  %67 = icmp eq i32 %66, 1024
  br i1 %67, label %68, label %97

68:                                               ; preds = %59
  br i1 %60, label %69, label %89

69:                                               ; preds = %68
  %70 = and i32 %65, 255
  %71 = icmp ult i32 %70, 7
  br i1 %71, label %79, label %72

72:                                               ; preds = %69
  %73 = call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 119) #17
  %74 = icmp eq ptr %73, null
  br i1 %74, label %75, label %89

75:                                               ; preds = %72
  %76 = load i32, ptr %3, align 4, !tbaa !16
  %77 = and i32 %76, 255
  %78 = icmp ugt i32 %77, 6
  br i1 %78, label %80, label %79

79:                                               ; preds = %69, %75
  call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 7)
  br label %80

80:                                               ; preds = %75, %79
  %81 = call ptr @Perl_safesyscalloc(i64 noundef 1, i64 noundef 48) #17
  %82 = load ptr, ptr %0, align 8, !tbaa !26
  %83 = getelementptr inbounds %struct.xpvmg, ptr %82, i64 0, i32 1
  %84 = load ptr, ptr %83, align 8, !tbaa !17
  store ptr %84, ptr %81, align 8, !tbaa !112
  store ptr %81, ptr %83, align 8, !tbaa !17
  %85 = getelementptr inbounds %struct.magic, ptr %81, i64 0, i32 6
  store ptr null, ptr %85, align 8, !tbaa !113
  %86 = getelementptr inbounds %struct.magic, ptr %81, i64 0, i32 3
  store i8 119, ptr %86, align 2, !tbaa !114
  %87 = getelementptr inbounds %struct.magic, ptr %81, i64 0, i32 5
  store i64 0, ptr %87, align 8, !tbaa !76
  %88 = getelementptr inbounds %struct.magic, ptr %81, i64 0, i32 1
  store ptr getelementptr inbounds ([31 x %struct.mgvtbl], ptr @PL_magic_vtables, i64 0, i64 28), ptr %88, align 8, !tbaa !115
  call void @Perl_mg_magical(ptr noundef nonnull %0) #17
  br label %89

89:                                               ; preds = %80, %72, %68
  %90 = phi ptr [ %81, %80 ], [ %73, %72 ], [ %61, %68 ]
  %91 = getelementptr inbounds %struct.magic, ptr %90, i64 0, i32 5
  store i64 %64, ptr %91, align 8, !tbaa !76
  br label %97

92:                                               ; preds = %16
  %93 = load i64, ptr %2, align 8, !tbaa !60
  br i1 %22, label %97, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds i8, ptr %18, i64 %93
  %96 = call i64 @Perl_utf8_length(ptr noundef %18, ptr noundef %95) #17
  br label %97

97:                                               ; preds = %92, %24, %49, %53, %58, %59, %89, %94
  %98 = phi i64 [ %96, %94 ], [ %50, %49 ], [ %50, %53 ], [ %50, %58 ], [ %64, %59 ], [ %64, %89 ], [ %25, %24 ], [ %93, %92 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #17
  ret i64 %98
}

declare i64 @Perl_utf8_length(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @Perl_sv_pos_u2b_flags(ptr noundef %0, i64 noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #1 {
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #17
  %7 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = and i32 %8, 2098176
  %10 = icmp eq i32 %9, 1024
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = load ptr, ptr %0, align 8, !tbaa !26
  %13 = getelementptr inbounds %struct.xpv, ptr %12, i64 0, i32 2
  %14 = load i64, ptr %13, align 8, !tbaa !57
  store i64 %14, ptr %5, align 8, !tbaa !60
  %15 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  br label %20

17:                                               ; preds = %4
  %18 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %0, ptr noundef nonnull %5, i32 noundef %3)
  %19 = load i64, ptr %5, align 8, !tbaa !60
  br label %20

20:                                               ; preds = %17, %11
  %21 = phi i64 [ %19, %17 ], [ %14, %11 ]
  %22 = phi ptr [ %18, %17 ], [ %16, %11 ]
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %36, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds i8, ptr %22, i64 %21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #17
  store ptr null, ptr %6, align 8, !tbaa !9
  %26 = call fastcc i64 @S_sv_pos_u2b_cached(ptr noundef nonnull %0, ptr noundef nonnull %6, ptr noundef %22, ptr noundef nonnull %25, i64 noundef %1, i64 noundef 0, i64 noundef 0)
  %27 = icmp eq ptr %2, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %24
  %29 = load i64, ptr %2, align 8, !tbaa !60
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = add i64 %29, %1
  %33 = call fastcc i64 @S_sv_pos_u2b_cached(ptr noundef nonnull %0, ptr noundef nonnull %6, ptr noundef %22, ptr noundef nonnull %25, i64 noundef %32, i64 noundef %1, i64 noundef %26)
  %34 = sub i64 %33, %26
  store i64 %34, ptr %2, align 8, !tbaa !60
  br label %35

35:                                               ; preds = %31, %28, %24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #17
  br label %39

36:                                               ; preds = %20
  %37 = icmp eq ptr %2, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %36
  store i64 0, ptr %2, align 8, !tbaa !60
  br label %39

39:                                               ; preds = %36, %38, %35
  %40 = phi i64 [ %26, %35 ], [ 0, %38 ], [ 0, %36 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #17
  ret i64 %40
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i64 @S_sv_pos_u2b_cached(ptr noundef %0, ptr nocapture noundef %1, ptr noundef %2, ptr noundef %3, i64 noundef %4, i64 noundef %5, i64 noundef %6) unnamed_addr #1 {
  %8 = icmp eq i64 %4, 0
  br i1 %8, label %302, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !16
  %12 = and i32 %11, 136380416
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %216

14:                                               ; preds = %9
  %15 = and i32 %11, 1024
  %16 = icmp ne i32 %15, 0
  %17 = load i8, ptr @PL_utf8cache, align 1
  %18 = icmp ne i8 %17, 0
  %19 = select i1 %16, i1 %18, i1 false
  br i1 %19, label %20, label %216

20:                                               ; preds = %14
  %21 = load ptr, ptr %1, align 8, !tbaa !9
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %29

23:                                               ; preds = %20
  %24 = and i32 %11, 255
  %25 = icmp ugt i32 %24, 6
  br i1 %25, label %26, label %216

26:                                               ; preds = %23
  %27 = tail call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 119) #17
  store ptr %27, ptr %1, align 8, !tbaa !9
  %28 = icmp eq ptr %27, null
  br i1 %28, label %216, label %29

29:                                               ; preds = %26, %20
  %30 = phi ptr [ %27, %26 ], [ %21, %20 ]
  %31 = getelementptr inbounds %struct.magic, ptr %30, i64 0, i32 7
  %32 = load ptr, ptr %31, align 8, !tbaa !109
  %33 = icmp eq ptr %32, null
  br i1 %33, label %123, label %34

34:                                               ; preds = %29
  %35 = load i64, ptr %32, align 8, !tbaa !60
  %36 = icmp eq i64 %35, %4
  br i1 %36, label %37, label %40

37:                                               ; preds = %34
  %38 = getelementptr inbounds i64, ptr %32, i64 1
  %39 = load i64, ptr %38, align 8, !tbaa !60
  br label %302

40:                                               ; preds = %34
  %41 = getelementptr inbounds i64, ptr %32, i64 2
  %42 = load i64, ptr %41, align 8, !tbaa !60
  %43 = icmp eq i64 %42, %4
  br i1 %43, label %44, label %47

44:                                               ; preds = %40
  %45 = getelementptr inbounds i64, ptr %32, i64 3
  %46 = load i64, ptr %45, align 8, !tbaa !60
  br label %302

47:                                               ; preds = %40
  %48 = icmp ult i64 %35, %4
  br i1 %48, label %49, label %96

49:                                               ; preds = %47
  %50 = icmp ugt i64 %35, %5
  br i1 %50, label %51, label %54

51:                                               ; preds = %49
  %52 = getelementptr inbounds i64, ptr %32, i64 1
  %53 = load i64, ptr %52, align 8, !tbaa !60
  br label %54

54:                                               ; preds = %51, %49
  %55 = phi i64 [ %53, %51 ], [ %6, %49 ]
  %56 = phi i64 [ %35, %51 ], [ %5, %49 ]
  %57 = getelementptr inbounds %struct.magic, ptr %30, i64 0, i32 5
  %58 = load i64, ptr %57, align 8, !tbaa !76
  %59 = icmp eq i64 %58, -1
  br i1 %59, label %66, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds i8, ptr %2, i64 %55
  %62 = sub i64 %4, %56
  %63 = sub i64 %58, %56
  %64 = tail call fastcc i64 @S_sv_pos_u2b_midway(ptr noundef %61, ptr noundef %3, i64 noundef %62, i64 noundef %63)
  %65 = add i64 %64, %55
  br label %218

66:                                               ; preds = %54
  %67 = sub i64 %4, %56
  %68 = getelementptr inbounds i8, ptr %2, i64 %55
  %69 = icmp ult ptr %68, %3
  %70 = icmp ne i64 %67, 0
  %71 = and i1 %69, %70
  br i1 %71, label %72, label %85

72:                                               ; preds = %66, %72
  %73 = phi i64 [ %75, %72 ], [ %67, %66 ]
  %74 = phi ptr [ %81, %72 ], [ %68, %66 ]
  %75 = add i64 %73, -1
  %76 = load i8, ptr %74, align 1, !tbaa !17
  %77 = zext i8 %76 to i64
  %78 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %77
  %79 = load i8, ptr %78, align 1, !tbaa !17
  %80 = zext i8 %79 to i64
  %81 = getelementptr inbounds i8, ptr %74, i64 %80
  %82 = icmp ult ptr %81, %3
  %83 = icmp ne i64 %75, 0
  %84 = select i1 %82, i1 %83, i1 false
  br i1 %84, label %72, label %85, !llvm.loop !159

85:                                               ; preds = %72, %66
  %86 = phi ptr [ %68, %66 ], [ %81, %72 ]
  %87 = phi i64 [ %67, %66 ], [ %75, %72 ]
  %88 = icmp uge ptr %86, %3
  %89 = zext i1 %88 to i8
  %90 = select i1 %88, ptr %3, ptr %86
  %91 = ptrtoint ptr %90 to i64
  %92 = ptrtoint ptr %68 to i64
  %93 = sub i64 %55, %92
  %94 = add i64 %93, %91
  %95 = sub i64 %4, %87
  br label %218

96:                                               ; preds = %47
  %97 = icmp ult i64 %42, %4
  br i1 %97, label %98, label %114

98:                                               ; preds = %96
  %99 = icmp ugt i64 %42, %5
  br i1 %99, label %100, label %103

100:                                              ; preds = %98
  %101 = getelementptr inbounds i64, ptr %32, i64 3
  %102 = load i64, ptr %101, align 8, !tbaa !60
  br label %103

103:                                              ; preds = %100, %98
  %104 = phi i64 [ %102, %100 ], [ %6, %98 ]
  %105 = phi i64 [ %42, %100 ], [ %5, %98 ]
  %106 = getelementptr inbounds i8, ptr %2, i64 %104
  %107 = getelementptr inbounds i64, ptr %32, i64 1
  %108 = load i64, ptr %107, align 8, !tbaa !60
  %109 = getelementptr inbounds i8, ptr %2, i64 %108
  %110 = sub i64 %4, %105
  %111 = sub i64 %35, %105
  %112 = tail call fastcc i64 @S_sv_pos_u2b_midway(ptr noundef %106, ptr noundef %109, i64 noundef %110, i64 noundef %111)
  %113 = add i64 %112, %104
  br label %218

114:                                              ; preds = %96
  %115 = getelementptr inbounds i8, ptr %2, i64 %6
  %116 = getelementptr inbounds i64, ptr %32, i64 3
  %117 = load i64, ptr %116, align 8, !tbaa !60
  %118 = getelementptr inbounds i8, ptr %2, i64 %117
  %119 = sub i64 %4, %5
  %120 = sub i64 %42, %5
  %121 = tail call fastcc i64 @S_sv_pos_u2b_midway(ptr noundef %115, ptr noundef %118, i64 noundef %119, i64 noundef %120)
  %122 = add i64 %121, %6
  br label %218

123:                                              ; preds = %29
  %124 = getelementptr inbounds %struct.magic, ptr %30, i64 0, i32 5
  %125 = load i64, ptr %124, align 8, !tbaa !76
  %126 = icmp eq i64 %125, -1
  br i1 %126, label %216, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds i8, ptr %2, i64 %6
  %129 = sub i64 %4, %5
  %130 = sub i64 %125, %4
  %131 = shl i64 %130, 1
  %132 = icmp ugt i64 %131, %129
  br i1 %132, label %159, label %133

133:                                              ; preds = %127
  %134 = icmp eq i64 %125, %4
  br i1 %134, label %210, label %135

135:                                              ; preds = %133
  %136 = xor i64 %4, -1
  %137 = add i64 %125, %136
  %138 = and i64 %130, 3
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %154, label %140

140:                                              ; preds = %135, %150
  %141 = phi i64 [ %151, %150 ], [ %130, %135 ]
  %142 = phi ptr [ %146, %150 ], [ %3, %135 ]
  %143 = phi i64 [ %152, %150 ], [ 0, %135 ]
  br label %144

144:                                              ; preds = %144, %140
  %145 = phi ptr [ %146, %144 ], [ %142, %140 ]
  %146 = getelementptr inbounds i8, ptr %145, i64 -1
  %147 = load i8, ptr %146, align 1, !tbaa !17
  %148 = and i8 %147, -64
  %149 = icmp eq i8 %148, -128
  br i1 %149, label %144, label %150, !llvm.loop !160

150:                                              ; preds = %144
  %151 = add i64 %141, -1
  %152 = add i64 %143, 1
  %153 = icmp eq i64 %152, %138
  br i1 %153, label %154, label %140, !llvm.loop !161

154:                                              ; preds = %150, %135
  %155 = phi ptr [ undef, %135 ], [ %146, %150 ]
  %156 = phi i64 [ %130, %135 ], [ %151, %150 ]
  %157 = phi ptr [ %3, %135 ], [ %146, %150 ]
  %158 = icmp ult i64 %137, 3
  br i1 %158, label %210, label %201

159:                                              ; preds = %127
  %160 = icmp uge ptr %128, %3
  %161 = icmp eq i64 %129, 0
  %162 = or i1 %161, %160
  br i1 %162, label %176, label %163

163:                                              ; preds = %159, %163
  %164 = phi ptr [ %172, %163 ], [ %128, %159 ]
  %165 = phi i64 [ %166, %163 ], [ %129, %159 ]
  %166 = add i64 %165, -1
  %167 = load i8, ptr %164, align 1, !tbaa !17
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %168
  %170 = load i8, ptr %169, align 1, !tbaa !17
  %171 = zext i8 %170 to i64
  %172 = getelementptr inbounds i8, ptr %164, i64 %171
  %173 = icmp uge ptr %172, %3
  %174 = icmp eq i64 %166, 0
  %175 = select i1 %173, i1 true, i1 %174
  br i1 %175, label %176, label %163, !llvm.loop !163

176:                                              ; preds = %163, %159
  %177 = phi ptr [ %128, %159 ], [ %172, %163 ]
  %178 = icmp ugt ptr %177, %3
  %179 = select i1 %178, ptr %3, ptr %177
  br label %210

180:                                              ; preds = %204, %180
  %181 = phi ptr [ %182, %180 ], [ %206, %204 ]
  %182 = getelementptr inbounds i8, ptr %181, i64 -1
  %183 = load i8, ptr %182, align 1, !tbaa !17
  %184 = and i8 %183, -64
  %185 = icmp eq i8 %184, -128
  br i1 %185, label %180, label %186, !llvm.loop !160

186:                                              ; preds = %180, %186
  %187 = phi ptr [ %188, %186 ], [ %182, %180 ]
  %188 = getelementptr inbounds i8, ptr %187, i64 -1
  %189 = load i8, ptr %188, align 1, !tbaa !17
  %190 = and i8 %189, -64
  %191 = icmp eq i8 %190, -128
  br i1 %191, label %186, label %192, !llvm.loop !160

192:                                              ; preds = %186, %192
  %193 = phi ptr [ %194, %192 ], [ %188, %186 ]
  %194 = getelementptr inbounds i8, ptr %193, i64 -1
  %195 = load i8, ptr %194, align 1, !tbaa !17
  %196 = and i8 %195, -64
  %197 = icmp eq i8 %196, -128
  br i1 %197, label %192, label %198, !llvm.loop !160

198:                                              ; preds = %192
  %199 = add i64 %202, -4
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %210, label %201, !llvm.loop !164

201:                                              ; preds = %154, %198
  %202 = phi i64 [ %199, %198 ], [ %156, %154 ]
  %203 = phi ptr [ %194, %198 ], [ %157, %154 ]
  br label %204

204:                                              ; preds = %204, %201
  %205 = phi ptr [ %206, %204 ], [ %203, %201 ]
  %206 = getelementptr inbounds i8, ptr %205, i64 -1
  %207 = load i8, ptr %206, align 1, !tbaa !17
  %208 = and i8 %207, -64
  %209 = icmp eq i8 %208, -128
  br i1 %209, label %204, label %180, !llvm.loop !160

210:                                              ; preds = %154, %198, %133, %176
  %211 = phi ptr [ %179, %176 ], [ %3, %133 ], [ %155, %154 ], [ %194, %198 ]
  %212 = ptrtoint ptr %211 to i64
  %213 = ptrtoint ptr %128 to i64
  %214 = sub i64 %6, %213
  %215 = add i64 %214, %212
  br label %218

216:                                              ; preds = %9, %123, %26, %23, %14
  %217 = load i8, ptr @PL_utf8cache, align 1
  br label %226

218:                                              ; preds = %85, %60, %114, %103, %210
  %219 = phi i64 [ %4, %210 ], [ %4, %114 ], [ %4, %103 ], [ %4, %60 ], [ %95, %85 ]
  %220 = phi i8 [ 0, %210 ], [ 0, %114 ], [ 0, %103 ], [ 0, %60 ], [ %89, %85 ]
  %221 = phi i64 [ %6, %210 ], [ %6, %114 ], [ %104, %103 ], [ %55, %60 ], [ %55, %85 ]
  %222 = phi i64 [ %215, %210 ], [ %122, %114 ], [ %113, %103 ], [ %65, %60 ], [ %94, %85 ]
  %223 = phi i64 [ %5, %210 ], [ %5, %114 ], [ %105, %103 ], [ %56, %60 ], [ %56, %85 ]
  %224 = load i8, ptr @PL_utf8cache, align 1
  %225 = icmp sgt i8 %224, -1
  br i1 %225, label %269, label %226

226:                                              ; preds = %216, %218
  %227 = phi i8 [ %217, %216 ], [ %224, %218 ]
  %228 = phi i64 [ %5, %216 ], [ %223, %218 ]
  %229 = phi i1 [ true, %216 ], [ false, %218 ]
  %230 = phi i64 [ 0, %216 ], [ %222, %218 ]
  %231 = phi i64 [ %6, %216 ], [ %221, %218 ]
  %232 = phi i8 [ 0, %216 ], [ %220, %218 ]
  %233 = phi i64 [ %4, %216 ], [ %219, %218 ]
  %234 = sub i64 %233, %228
  %235 = getelementptr inbounds i8, ptr %2, i64 %231
  %236 = icmp ult ptr %235, %3
  %237 = icmp ne i64 %234, 0
  %238 = select i1 %236, i1 %237, i1 false
  br i1 %238, label %239, label %252

239:                                              ; preds = %226, %239
  %240 = phi i64 [ %242, %239 ], [ %234, %226 ]
  %241 = phi ptr [ %248, %239 ], [ %235, %226 ]
  %242 = add i64 %240, -1
  %243 = load i8, ptr %241, align 1, !tbaa !17
  %244 = zext i8 %243 to i64
  %245 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %244
  %246 = load i8, ptr %245, align 1, !tbaa !17
  %247 = zext i8 %246 to i64
  %248 = getelementptr inbounds i8, ptr %241, i64 %247
  %249 = icmp ult ptr %248, %3
  %250 = icmp ne i64 %242, 0
  %251 = select i1 %249, i1 %250, i1 false
  br i1 %251, label %239, label %252, !llvm.loop !159

252:                                              ; preds = %239, %226
  %253 = phi ptr [ %235, %226 ], [ %248, %239 ]
  %254 = phi i64 [ %234, %226 ], [ %242, %239 ]
  %255 = icmp ult ptr %253, %3
  %256 = select i1 %255, i8 %232, i8 1
  %257 = select i1 %255, ptr %253, ptr %3
  %258 = ptrtoint ptr %257 to i64
  %259 = ptrtoint ptr %235 to i64
  %260 = sub i64 %258, %259
  %261 = add i64 %260, %231
  %262 = sub i64 %233, %254
  %263 = icmp sgt i8 %227, -1
  %264 = select i1 %229, i1 true, i1 %263
  %265 = icmp eq i64 %230, %261
  %266 = select i1 %264, i1 true, i1 %265
  br i1 %266, label %269, label %267

267:                                              ; preds = %252
  tail call void @Perl_save_I8(ptr noundef nonnull @PL_utf8cache) #17
  store i8 0, ptr @PL_utf8cache, align 1, !tbaa !17
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.100, ptr noundef nonnull @.str.98, i64 noundef %230, i64 noundef %261, ptr noundef %0) #17
  %268 = load i8, ptr @PL_utf8cache, align 1, !tbaa !17
  br label %269

269:                                              ; preds = %267, %252, %218
  %270 = phi i8 [ %224, %218 ], [ %227, %252 ], [ %268, %267 ]
  %271 = phi i64 [ %219, %218 ], [ %262, %252 ], [ %262, %267 ]
  %272 = phi i8 [ %220, %218 ], [ %256, %252 ], [ %256, %267 ]
  %273 = phi i64 [ %222, %218 ], [ %261, %252 ], [ %261, %267 ]
  %274 = icmp eq i8 %270, 0
  br i1 %274, label %302, label %275

275:                                              ; preds = %269
  %276 = load i32, ptr %10, align 4, !tbaa !16
  %277 = and i32 %276, 2098176
  %278 = icmp eq i32 %277, 1024
  br i1 %278, label %279, label %302

279:                                              ; preds = %275
  %280 = icmp eq i8 %272, 0
  br i1 %280, label %298, label %281

281:                                              ; preds = %279
  %282 = and i32 %276, 134283264
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %302

284:                                              ; preds = %281
  %285 = load ptr, ptr %1, align 8, !tbaa !9
  %286 = icmp eq ptr %285, null
  br i1 %286, label %287, label %295

287:                                              ; preds = %284
  %288 = and i32 %276, 255
  %289 = icmp ult i32 %288, 7
  br i1 %289, label %293, label %290

290:                                              ; preds = %287
  %291 = tail call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 119) #17
  store ptr %291, ptr %1, align 8, !tbaa !9
  %292 = icmp eq ptr %291, null
  br i1 %292, label %293, label %295

293:                                              ; preds = %290, %287
  %294 = tail call ptr @Perl_sv_magicext(ptr noundef nonnull %0, ptr noundef null, i32 noundef 119, ptr noundef nonnull getelementptr inbounds ([31 x %struct.mgvtbl], ptr @PL_magic_vtables, i64 0, i64 28), ptr noundef null, i32 noundef 0)
  store ptr %294, ptr %1, align 8, !tbaa !9
  br label %295

295:                                              ; preds = %293, %290, %284
  %296 = phi ptr [ %294, %293 ], [ %291, %290 ], [ %285, %284 ]
  %297 = getelementptr inbounds %struct.magic, ptr %296, i64 0, i32 5
  store i64 %271, ptr %297, align 8, !tbaa !76
  br label %302

298:                                              ; preds = %279
  %299 = ptrtoint ptr %3 to i64
  %300 = ptrtoint ptr %2 to i64
  %301 = sub i64 %299, %300
  tail call fastcc void @S_utf8_mg_pos_cache_update(ptr noundef nonnull %0, ptr noundef %1, i64 noundef %273, i64 noundef %271, i64 noundef %301)
  br label %302

302:                                              ; preds = %295, %281, %37, %44, %269, %275, %298, %7
  %303 = phi i64 [ 0, %7 ], [ %273, %298 ], [ %273, %275 ], [ %273, %269 ], [ %39, %37 ], [ %46, %44 ], [ %273, %281 ], [ %273, %295 ]
  ret i64 %303
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_pos_u2b(ptr noundef %0, ptr nocapture noundef %1, ptr noundef %2) local_unnamed_addr #1 {
  %4 = alloca i64, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = icmp eq ptr %2, null
  br i1 %8, label %46, label %9

9:                                                ; preds = %3
  %10 = load i32, ptr %2, align 4, !tbaa !25
  %11 = sext i32 %10 to i64
  %12 = load i32, ptr %1, align 4, !tbaa !25
  %13 = sext i32 %12 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #17
  %14 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %15 = load i32, ptr %14, align 4, !tbaa !16
  %16 = and i32 %15, 2098176
  %17 = icmp eq i32 %16, 1024
  br i1 %17, label %18, label %24

18:                                               ; preds = %9
  %19 = load ptr, ptr %0, align 8, !tbaa !26
  %20 = getelementptr inbounds %struct.xpv, ptr %19, i64 0, i32 2
  %21 = load i64, ptr %20, align 8, !tbaa !57
  store i64 %21, ptr %6, align 8, !tbaa !60
  %22 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  br label %27

24:                                               ; preds = %9
  %25 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %0, ptr noundef nonnull %6, i32 noundef 34)
  %26 = load i64, ptr %6, align 8, !tbaa !60
  br label %27

27:                                               ; preds = %24, %18
  %28 = phi i64 [ %26, %24 ], [ %21, %18 ]
  %29 = phi ptr [ %25, %24 ], [ %23, %18 ]
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %42, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds i8, ptr %29, i64 %28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #17
  store ptr null, ptr %7, align 8, !tbaa !9
  %33 = call fastcc i64 @S_sv_pos_u2b_cached(ptr noundef nonnull %0, ptr noundef nonnull %7, ptr noundef %29, ptr noundef nonnull %32, i64 noundef %13, i64 noundef 0, i64 noundef 0)
  %34 = icmp eq i32 %10, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = add nsw i64 %13, %11
  %37 = call fastcc i64 @S_sv_pos_u2b_cached(ptr noundef nonnull %0, ptr noundef nonnull %7, ptr noundef %29, ptr noundef nonnull %32, i64 noundef %36, i64 noundef %13, i64 noundef %33)
  %38 = sub i64 %37, %33
  br label %39

39:                                               ; preds = %35, %31
  %40 = phi i64 [ 0, %31 ], [ %38, %35 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #17
  %41 = trunc i64 %33 to i32
  br label %42

42:                                               ; preds = %27, %39
  %43 = phi i64 [ %40, %39 ], [ 0, %27 ]
  %44 = phi i32 [ %41, %39 ], [ 0, %27 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #17
  store i32 %44, ptr %1, align 4, !tbaa !25
  %45 = trunc i64 %43 to i32
  store i32 %45, ptr %2, align 4, !tbaa !25
  br label %72

46:                                               ; preds = %3
  %47 = load i32, ptr %1, align 4, !tbaa !25
  %48 = sext i32 %47 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  %49 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %50 = load i32, ptr %49, align 4, !tbaa !16
  %51 = and i32 %50, 2098176
  %52 = icmp eq i32 %51, 1024
  br i1 %52, label %53, label %59

53:                                               ; preds = %46
  %54 = load ptr, ptr %0, align 8, !tbaa !26
  %55 = getelementptr inbounds %struct.xpv, ptr %54, i64 0, i32 2
  %56 = load i64, ptr %55, align 8, !tbaa !57
  store i64 %56, ptr %4, align 8, !tbaa !60
  %57 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %58 = load ptr, ptr %57, align 8, !tbaa !17
  br label %62

59:                                               ; preds = %46
  %60 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %0, ptr noundef nonnull %4, i32 noundef 34)
  %61 = load i64, ptr %4, align 8, !tbaa !60
  br label %62

62:                                               ; preds = %59, %53
  %63 = phi i64 [ %61, %59 ], [ %56, %53 ]
  %64 = phi ptr [ %60, %59 ], [ %58, %53 ]
  %65 = icmp eq i64 %63, 0
  br i1 %65, label %70, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds i8, ptr %64, i64 %63
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #17
  store ptr null, ptr %5, align 8, !tbaa !9
  %68 = call fastcc i64 @S_sv_pos_u2b_cached(ptr noundef nonnull %0, ptr noundef nonnull %5, ptr noundef %64, ptr noundef nonnull %67, i64 noundef %48, i64 noundef 0, i64 noundef 0)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #17
  %69 = trunc i64 %68 to i32
  br label %70

70:                                               ; preds = %62, %66
  %71 = phi i32 [ %69, %66 ], [ 0, %62 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  store i32 %71, ptr %1, align 4, !tbaa !25
  br label %72

72:                                               ; preds = %70, %42
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i64 @S_sv_pos_b2u_midway(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3) unnamed_addr #1 {
  %5 = ptrtoint ptr %1 to i64
  %6 = ptrtoint ptr %0 to i64
  %7 = sub i64 %5, %6
  %8 = ptrtoint ptr %2 to i64
  %9 = sub i64 %8, %5
  %10 = shl i64 %9, 1
  %11 = icmp ult i64 %7, %10
  br i1 %11, label %14, label %12

12:                                               ; preds = %4
  %13 = icmp ugt ptr %2, %1
  br i1 %13, label %16, label %28

14:                                               ; preds = %4
  %15 = tail call i64 @Perl_utf8_length(ptr noundef %0, ptr noundef %1) #17
  br label %28

16:                                               ; preds = %12, %25
  %17 = phi ptr [ %21, %25 ], [ %2, %12 ]
  %18 = phi i64 [ %26, %25 ], [ %3, %12 ]
  br label %19

19:                                               ; preds = %16, %19
  %20 = phi ptr [ %21, %19 ], [ %17, %16 ]
  %21 = getelementptr inbounds i8, ptr %20, i64 -1
  %22 = load i8, ptr %21, align 1, !tbaa !17
  %23 = and i8 %22, -64
  %24 = icmp eq i8 %23, -128
  br i1 %24, label %19, label %25, !llvm.loop !110

25:                                               ; preds = %19
  %26 = add i64 %18, -1
  %27 = icmp ugt ptr %21, %1
  br i1 %27, label %16, label %28, !llvm.loop !111

28:                                               ; preds = %25, %12, %14
  %29 = phi i64 [ %15, %14 ], [ %3, %12 ], [ %26, %25 ]
  ret i64 %29
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_utf8_mg_pos_cache_update(ptr noundef %0, ptr nocapture noundef %1, i64 noundef %2, i64 noundef %3, i64 noundef %4) unnamed_addr #1 {
  %6 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !16
  %8 = and i32 %7, 134283264
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %132

10:                                               ; preds = %5
  %11 = load ptr, ptr %1, align 8, !tbaa !9
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %33

13:                                               ; preds = %10
  %14 = and i32 %7, 255
  %15 = icmp ult i32 %14, 7
  br i1 %15, label %23, label %16

16:                                               ; preds = %13
  %17 = tail call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 119) #17
  store ptr %17, ptr %1, align 8, !tbaa !9
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %33

19:                                               ; preds = %16
  %20 = load i32, ptr %6, align 4, !tbaa !16
  %21 = and i32 %20, 255
  %22 = icmp ugt i32 %21, 6
  br i1 %22, label %24, label %23

23:                                               ; preds = %13, %19
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 7)
  br label %24

24:                                               ; preds = %19, %23
  %25 = tail call ptr @Perl_safesyscalloc(i64 noundef 1, i64 noundef 48) #17
  %26 = load ptr, ptr %0, align 8, !tbaa !26
  %27 = getelementptr inbounds %struct.xpvmg, ptr %26, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !17
  store ptr %28, ptr %25, align 8, !tbaa !112
  store ptr %25, ptr %27, align 8, !tbaa !17
  %29 = getelementptr inbounds %struct.magic, ptr %25, i64 0, i32 6
  store ptr null, ptr %29, align 8, !tbaa !113
  %30 = getelementptr inbounds %struct.magic, ptr %25, i64 0, i32 3
  store i8 119, ptr %30, align 2, !tbaa !114
  %31 = getelementptr inbounds %struct.magic, ptr %25, i64 0, i32 5
  store i64 0, ptr %31, align 8, !tbaa !76
  %32 = getelementptr inbounds %struct.magic, ptr %25, i64 0, i32 1
  store ptr getelementptr inbounds ([31 x %struct.mgvtbl], ptr @PL_magic_vtables, i64 0, i64 28), ptr %32, align 8, !tbaa !115
  tail call void @Perl_mg_magical(ptr noundef nonnull %0) #17
  store ptr %25, ptr %1, align 8, !tbaa !9
  store i64 -1, ptr %31, align 8, !tbaa !76
  br label %33

33:                                               ; preds = %24, %16, %10
  %34 = phi ptr [ %25, %24 ], [ %17, %16 ], [ %11, %10 ]
  %35 = getelementptr inbounds %struct.magic, ptr %34, i64 0, i32 7
  %36 = load ptr, ptr %35, align 8, !tbaa !109
  %37 = icmp eq ptr %36, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %33
  %39 = tail call ptr @Perl_safesyscalloc(i64 noundef 4, i64 noundef 8) #17
  %40 = load ptr, ptr %1, align 8, !tbaa !9
  %41 = getelementptr inbounds %struct.magic, ptr %40, i64 0, i32 7
  store ptr %39, ptr %41, align 8, !tbaa !109
  br label %42

42:                                               ; preds = %38, %33
  %43 = phi ptr [ %36, %33 ], [ %39, %38 ]
  %44 = load i8, ptr @PL_utf8cache, align 1, !tbaa !17
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %57

46:                                               ; preds = %42
  %47 = load i32, ptr %6, align 4, !tbaa !16
  %48 = and i32 %47, 16384
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %57, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %52 = load ptr, ptr %51, align 8, !tbaa !17
  %53 = getelementptr inbounds i8, ptr %52, i64 %2
  %54 = tail call i64 @Perl_utf8_length(ptr noundef %52, ptr noundef %53) #17
  %55 = icmp eq i64 %54, %3
  br i1 %55, label %57, label %56

56:                                               ; preds = %50
  tail call void @Perl_save_I8(ptr noundef nonnull @PL_utf8cache) #17
  store i8 0, ptr @PL_utf8cache, align 1, !tbaa !17
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.100, ptr noundef nonnull @.str.99, i64 noundef %3, i64 noundef %54, ptr noundef nonnull %0) #17
  br label %57

57:                                               ; preds = %56, %50, %46, %42
  %58 = getelementptr inbounds i64, ptr %43, i64 1
  %59 = load i64, ptr %58, align 8, !tbaa !60
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %129, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds i64, ptr %43, i64 3
  %63 = load i64, ptr %62, align 8, !tbaa !60
  %64 = icmp eq i64 %63, 0
  %65 = icmp ult i64 %59, %2
  br i1 %64, label %66, label %72

66:                                               ; preds = %61
  br i1 %65, label %67, label %70

67:                                               ; preds = %66
  %68 = load i64, ptr %43, align 8, !tbaa !60
  %69 = getelementptr inbounds i64, ptr %43, i64 2
  store i64 %68, ptr %69, align 8, !tbaa !60
  store i64 %59, ptr %62, align 8, !tbaa !60
  br label %129

70:                                               ; preds = %66
  %71 = getelementptr inbounds i64, ptr %43, i64 2
  br label %129

72:                                               ; preds = %61
  br i1 %65, label %73, label %95

73:                                               ; preds = %72
  %74 = sub i64 %4, %2
  %75 = uitofp i64 %74 to float
  %76 = fmul fast float %75, %75
  %77 = sub i64 %2, %63
  %78 = uitofp i64 %77 to float
  %79 = fmul fast float %78, %78
  %80 = uitofp i64 %63 to float
  %81 = fmul fast float %80, %80
  %82 = fadd fast float %81, %76
  %83 = fadd fast float %82, %79
  %84 = sub i64 %2, %59
  %85 = uitofp i64 %84 to float
  %86 = fmul fast float %85, %85
  %87 = uitofp i64 %59 to float
  %88 = fmul fast float %87, %87
  %89 = fadd fast float %88, %76
  %90 = fadd fast float %89, %86
  %91 = fcmp fast olt float %90, %83
  br i1 %91, label %92, label %129

92:                                               ; preds = %73
  %93 = load i64, ptr %43, align 8, !tbaa !60
  %94 = getelementptr inbounds i64, ptr %43, i64 2
  store i64 %93, ptr %94, align 8, !tbaa !60
  store i64 %59, ptr %62, align 8, !tbaa !60
  br label %129

95:                                               ; preds = %72
  %96 = sub i64 %4, %59
  %97 = uitofp i64 %96 to float
  %98 = fmul fast float %97, %97
  %99 = sub i64 %59, %2
  %100 = uitofp i64 %99 to float
  %101 = fmul fast float %100, %100
  %102 = uitofp i64 %2 to float
  %103 = fmul fast float %102, %102
  %104 = fadd fast float %101, %103
  %105 = fadd fast float %104, %98
  %106 = icmp ult i64 %63, %2
  %107 = tail call i64 @llvm.umin.i64(i64 %63, i64 %2)
  %108 = uitofp i64 %107 to float
  %109 = tail call i64 @llvm.umax.i64(i64 %63, i64 %2)
  %110 = uitofp i64 %109 to float
  %111 = uitofp i64 %4 to float
  %112 = fsub fast float %111, %110
  %113 = fmul fast float %112, %112
  %114 = fsub fast float %110, %108
  %115 = fmul fast float %114, %114
  %116 = fmul fast float %108, %108
  %117 = fadd fast float %115, %116
  %118 = fadd fast float %117, %113
  %119 = fcmp fast olt float %105, %118
  br i1 %106, label %120, label %123

120:                                              ; preds = %95
  br i1 %119, label %121, label %129

121:                                              ; preds = %120
  %122 = getelementptr inbounds i64, ptr %43, i64 2
  br label %129

123:                                              ; preds = %95
  br i1 %119, label %127, label %124

124:                                              ; preds = %123
  %125 = getelementptr inbounds i64, ptr %43, i64 2
  %126 = load i64, ptr %125, align 8, !tbaa !60
  store i64 %126, ptr %43, align 8, !tbaa !60
  store i64 %63, ptr %58, align 8, !tbaa !60
  br label %127

127:                                              ; preds = %124, %123
  %128 = getelementptr inbounds i64, ptr %43, i64 2
  br label %129

129:                                              ; preds = %120, %73, %92, %57, %127, %121, %70, %67
  %130 = phi ptr [ %43, %67 ], [ %71, %70 ], [ %122, %121 ], [ %128, %127 ], [ %43, %57 ], [ %43, %92 ], [ %43, %73 ], [ %43, %120 ]
  %131 = phi ptr [ %58, %67 ], [ %62, %70 ], [ %62, %121 ], [ %62, %127 ], [ %58, %57 ], [ %58, %92 ], [ %58, %73 ], [ %58, %120 ]
  store i64 %3, ptr %130, align 8, !tbaa !60
  store i64 %2, ptr %131, align 8, !tbaa !60
  br label %132

132:                                              ; preds = %129, %5
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_pos_b2u(ptr noundef %0, ptr nocapture noundef %1) local_unnamed_addr #1 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = load i32, ptr %1, align 4, !tbaa !25
  %6 = sext i32 %5 to i64
  %7 = tail call i64 @Perl_sv_pos_b2u_flags(ptr noundef nonnull %0, i64 noundef %6, i32 noundef 34)
  %8 = trunc i64 %7 to i32
  store i32 %8, ptr %1, align 4, !tbaa !25
  br label %9

9:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @Perl_sv_eq_flags(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #1 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #17
  %6 = icmp eq ptr %0, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  store i64 0, ptr %4, align 8, !tbaa !60
  br label %53

8:                                                ; preds = %3
  %9 = icmp ne ptr %0, %1
  %10 = and i32 %2, 2
  %11 = icmp eq i32 %10, 0
  %12 = or i1 %9, %11
  br i1 %12, label %38, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %15 = load i32, ptr %14, align 4, !tbaa !16
  %16 = and i32 %15, 429983744
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %38, label %18

18:                                               ; preds = %13
  %19 = and i32 %15, 2098176
  %20 = icmp eq i32 %19, 1024
  br i1 %20, label %21, label %27

21:                                               ; preds = %18
  %22 = load ptr, ptr %0, align 8, !tbaa !26
  %23 = getelementptr inbounds %struct.xpv, ptr %22, i64 0, i32 2
  %24 = load i64, ptr %23, align 8, !tbaa !57
  store i64 %24, ptr %4, align 8, !tbaa !60
  %25 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  br label %31

27:                                               ; preds = %18
  %28 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %0, ptr noundef nonnull %4, i32 noundef 34)
  %29 = load i64, ptr %4, align 8, !tbaa !60
  %30 = load i32, ptr %14, align 4, !tbaa !16
  br label %31

31:                                               ; preds = %27, %21
  %32 = phi i32 [ %15, %21 ], [ %30, %27 ]
  %33 = phi i64 [ %24, %21 ], [ %29, %27 ]
  %34 = phi ptr [ %26, %21 ], [ %28, %27 ]
  %35 = and i32 %32, 536870912
  %36 = or i32 %35, 524288
  %37 = call ptr @Perl_newSVpvn_flags(ptr noundef %34, i64 noundef %33, i32 noundef %36)
  br label %38

38:                                               ; preds = %13, %31, %8
  %39 = phi ptr [ %37, %31 ], [ %0, %8 ], [ %0, %13 ]
  %40 = getelementptr inbounds %struct.sv, ptr %39, i64 0, i32 2
  %41 = load i32, ptr %40, align 4, !tbaa !16
  %42 = and i32 %41, 2098176
  %43 = icmp eq i32 %42, 1024
  br i1 %43, label %44, label %50

44:                                               ; preds = %38
  %45 = load ptr, ptr %39, align 8, !tbaa !26
  %46 = getelementptr inbounds %struct.xpv, ptr %45, i64 0, i32 2
  %47 = load i64, ptr %46, align 8, !tbaa !57
  store i64 %47, ptr %4, align 8, !tbaa !60
  %48 = getelementptr inbounds %struct.sv, ptr %39, i64 0, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  br label %53

50:                                               ; preds = %38
  %51 = or i32 %2, 32
  %52 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %39, ptr noundef nonnull %4, i32 noundef %51)
  br label %53

53:                                               ; preds = %44, %50, %7
  %54 = phi ptr [ null, %7 ], [ %39, %50 ], [ %39, %44 ]
  %55 = phi ptr [ @.str.10, %7 ], [ %52, %50 ], [ %49, %44 ]
  %56 = icmp eq ptr %1, null
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  store i64 0, ptr %5, align 8, !tbaa !60
  %58 = load i64, ptr %4, align 8, !tbaa !60
  br label %243

59:                                               ; preds = %53
  %60 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %61 = load i32, ptr %60, align 4, !tbaa !16
  %62 = and i32 %61, 2098176
  %63 = icmp eq i32 %62, 1024
  br i1 %63, label %64, label %70

64:                                               ; preds = %59
  %65 = load ptr, ptr %1, align 8, !tbaa !26
  %66 = getelementptr inbounds %struct.xpv, ptr %65, i64 0, i32 2
  %67 = load i64, ptr %66, align 8, !tbaa !57
  store i64 %67, ptr %5, align 8, !tbaa !60
  %68 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !17
  br label %74

70:                                               ; preds = %59
  %71 = or i32 %2, 32
  %72 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %1, ptr noundef nonnull %5, i32 noundef %71)
  %73 = load i64, ptr %5, align 8
  br label %74

74:                                               ; preds = %64, %70
  %75 = phi i64 [ %67, %64 ], [ %73, %70 ]
  %76 = phi ptr [ %69, %64 ], [ %72, %70 ]
  %77 = load i64, ptr %4, align 8, !tbaa !60
  %78 = icmp ne i64 %77, 0
  %79 = icmp ne i64 %75, 0
  %80 = select i1 %78, i1 %79, i1 false
  br i1 %80, label %81, label %243

81:                                               ; preds = %74
  %82 = getelementptr inbounds %struct.sv, ptr %54, i64 0, i32 2
  %83 = load i32, ptr %82, align 4, !tbaa !16
  %84 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %85 = load i32, ptr %84, align 4, !tbaa !16
  %86 = xor i32 %85, %83
  %87 = and i32 %86, 536870912
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %243, label %89

89:                                               ; preds = %81
  %90 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %91 = getelementptr inbounds %struct.cop, ptr %90, i64 0, i32 10
  %92 = load i32, ptr %91, align 8, !tbaa !79
  %93 = and i32 %92, 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %243

95:                                               ; preds = %89
  %96 = load ptr, ptr @PL_encoding, align 8, !tbaa !9
  %97 = icmp eq ptr %96, null
  br i1 %97, label %98, label %105

98:                                               ; preds = %95
  %99 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !9
  %100 = icmp eq ptr %99, null
  br i1 %100, label %227, label %101

101:                                              ; preds = %98
  %102 = call ptr @Perl__get_encoding() #17
  %103 = icmp eq ptr %102, null
  %104 = load i32, ptr %82, align 4, !tbaa !16
  br i1 %103, label %227, label %105

105:                                              ; preds = %101, %95
  %106 = phi i32 [ %83, %95 ], [ %104, %101 ]
  %107 = and i32 %106, 536870912
  %108 = icmp eq i32 %107, 0
  %109 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %110 = icmp eq ptr %109, null
  br i1 %108, label %162, label %111

111:                                              ; preds = %105
  %112 = load i64, ptr %5, align 8, !tbaa !60
  br i1 %110, label %113, label %142

113:                                              ; preds = %111
  %114 = call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %115 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %115, ptr %114, align 8, !tbaa !26
  %116 = getelementptr inbounds %struct.sv, ptr %114, i64 0, i32 1
  store i32 170, ptr %116, align 8, !tbaa !13
  %117 = getelementptr inbounds %struct.sv, ptr %114, i64 0, i32 2
  store i32 0, ptr %117, align 4, !tbaa !16
  store ptr %114, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %118 = getelementptr inbounds %struct.sv, ptr %114, i64 1
  store ptr %118, ptr @PL_sv_root, align 8, !tbaa !9
  br label %119

119:                                              ; preds = %119, %113
  %120 = phi ptr [ %118, %113 ], [ %137, %119 ]
  %121 = phi i64 [ 1, %113 ], [ %136, %119 ]
  %122 = getelementptr inbounds %struct.sv, ptr %120, i64 1
  store ptr %122, ptr %120, align 8, !tbaa !26
  %123 = getelementptr inbounds %struct.sv, ptr %114, i64 %121, i32 2
  store i32 255, ptr %123, align 4, !tbaa !16
  %124 = add nuw nsw i64 %121, 1
  %125 = getelementptr inbounds %struct.sv, ptr %114, i64 %124
  %126 = getelementptr inbounds %struct.sv, ptr %125, i64 1
  store ptr %126, ptr %125, align 8, !tbaa !26
  %127 = getelementptr inbounds %struct.sv, ptr %114, i64 %124, i32 2
  store i32 255, ptr %127, align 4, !tbaa !16
  %128 = add nuw nsw i64 %121, 2
  %129 = getelementptr inbounds %struct.sv, ptr %114, i64 %128
  %130 = getelementptr inbounds %struct.sv, ptr %129, i64 1
  store ptr %130, ptr %129, align 8, !tbaa !26
  %131 = getelementptr inbounds %struct.sv, ptr %114, i64 %128, i32 2
  store i32 255, ptr %131, align 4, !tbaa !16
  %132 = add nuw nsw i64 %121, 3
  %133 = getelementptr inbounds %struct.sv, ptr %114, i64 %132
  %134 = getelementptr inbounds %struct.sv, ptr %133, i64 1
  store ptr %134, ptr %133, align 8, !tbaa !26
  %135 = getelementptr inbounds %struct.sv, ptr %114, i64 %132, i32 2
  store i32 255, ptr %135, align 4, !tbaa !16
  %136 = add nuw nsw i64 %121, 4
  %137 = getelementptr inbounds %struct.sv, ptr %114, i64 %136
  %138 = icmp eq i64 %136, 169
  br i1 %138, label %139, label %119, !llvm.loop !59

139:                                              ; preds = %119
  store ptr null, ptr %137, align 8, !tbaa !26
  %140 = getelementptr inbounds %struct.sv, ptr %114, i64 169, i32 2
  store i32 255, ptr %140, align 4, !tbaa !16
  %141 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %142

142:                                              ; preds = %111, %139
  %143 = phi ptr [ %141, %139 ], [ %109, %111 ]
  %144 = load ptr, ptr %143, align 8, !tbaa !26
  store ptr %144, ptr @PL_sv_root, align 8, !tbaa !9
  %145 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %146 = add nsw i64 %145, 1
  store i64 %146, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %143, align 8, !tbaa !26
  %147 = getelementptr inbounds %struct.sv, ptr %143, i64 0, i32 1
  store i32 1, ptr %147, align 8, !tbaa !13
  %148 = getelementptr inbounds %struct.sv, ptr %143, i64 0, i32 2
  store i32 0, ptr %148, align 4, !tbaa !16
  call void @Perl_sv_setpvn(ptr noundef nonnull %143, ptr noundef %76, i64 noundef %112)
  %149 = call ptr @Perl__get_encoding() #17
  %150 = call ptr @Perl_sv_recode_to_utf8(ptr noundef nonnull %143, ptr noundef %149)
  %151 = load i32, ptr %148, align 4, !tbaa !16
  %152 = and i32 %151, 2098176
  %153 = icmp eq i32 %152, 1024
  br i1 %153, label %154, label %160

154:                                              ; preds = %142
  %155 = load ptr, ptr %143, align 8, !tbaa !26
  %156 = getelementptr inbounds %struct.xpv, ptr %155, i64 0, i32 2
  %157 = load i64, ptr %156, align 8, !tbaa !57
  store i64 %157, ptr %5, align 8, !tbaa !60
  %158 = getelementptr inbounds %struct.sv, ptr %143, i64 0, i32 3
  %159 = load ptr, ptr %158, align 8, !tbaa !17
  br label %213

160:                                              ; preds = %142
  %161 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %143, ptr noundef nonnull %5, i32 noundef 34)
  br label %213

162:                                              ; preds = %105
  %163 = load i64, ptr %4, align 8, !tbaa !60
  br i1 %110, label %164, label %193

164:                                              ; preds = %162
  %165 = call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %166 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %166, ptr %165, align 8, !tbaa !26
  %167 = getelementptr inbounds %struct.sv, ptr %165, i64 0, i32 1
  store i32 170, ptr %167, align 8, !tbaa !13
  %168 = getelementptr inbounds %struct.sv, ptr %165, i64 0, i32 2
  store i32 0, ptr %168, align 4, !tbaa !16
  store ptr %165, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %169 = getelementptr inbounds %struct.sv, ptr %165, i64 1
  store ptr %169, ptr @PL_sv_root, align 8, !tbaa !9
  br label %170

170:                                              ; preds = %170, %164
  %171 = phi ptr [ %169, %164 ], [ %188, %170 ]
  %172 = phi i64 [ 1, %164 ], [ %187, %170 ]
  %173 = getelementptr inbounds %struct.sv, ptr %171, i64 1
  store ptr %173, ptr %171, align 8, !tbaa !26
  %174 = getelementptr inbounds %struct.sv, ptr %165, i64 %172, i32 2
  store i32 255, ptr %174, align 4, !tbaa !16
  %175 = add nuw nsw i64 %172, 1
  %176 = getelementptr inbounds %struct.sv, ptr %165, i64 %175
  %177 = getelementptr inbounds %struct.sv, ptr %176, i64 1
  store ptr %177, ptr %176, align 8, !tbaa !26
  %178 = getelementptr inbounds %struct.sv, ptr %165, i64 %175, i32 2
  store i32 255, ptr %178, align 4, !tbaa !16
  %179 = add nuw nsw i64 %172, 2
  %180 = getelementptr inbounds %struct.sv, ptr %165, i64 %179
  %181 = getelementptr inbounds %struct.sv, ptr %180, i64 1
  store ptr %181, ptr %180, align 8, !tbaa !26
  %182 = getelementptr inbounds %struct.sv, ptr %165, i64 %179, i32 2
  store i32 255, ptr %182, align 4, !tbaa !16
  %183 = add nuw nsw i64 %172, 3
  %184 = getelementptr inbounds %struct.sv, ptr %165, i64 %183
  %185 = getelementptr inbounds %struct.sv, ptr %184, i64 1
  store ptr %185, ptr %184, align 8, !tbaa !26
  %186 = getelementptr inbounds %struct.sv, ptr %165, i64 %183, i32 2
  store i32 255, ptr %186, align 4, !tbaa !16
  %187 = add nuw nsw i64 %172, 4
  %188 = getelementptr inbounds %struct.sv, ptr %165, i64 %187
  %189 = icmp eq i64 %187, 169
  br i1 %189, label %190, label %170, !llvm.loop !59

190:                                              ; preds = %170
  store ptr null, ptr %188, align 8, !tbaa !26
  %191 = getelementptr inbounds %struct.sv, ptr %165, i64 169, i32 2
  store i32 255, ptr %191, align 4, !tbaa !16
  %192 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %193

193:                                              ; preds = %162, %190
  %194 = phi ptr [ %192, %190 ], [ %109, %162 ]
  %195 = load ptr, ptr %194, align 8, !tbaa !26
  store ptr %195, ptr @PL_sv_root, align 8, !tbaa !9
  %196 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %197 = add nsw i64 %196, 1
  store i64 %197, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %194, align 8, !tbaa !26
  %198 = getelementptr inbounds %struct.sv, ptr %194, i64 0, i32 1
  store i32 1, ptr %198, align 8, !tbaa !13
  %199 = getelementptr inbounds %struct.sv, ptr %194, i64 0, i32 2
  store i32 0, ptr %199, align 4, !tbaa !16
  call void @Perl_sv_setpvn(ptr noundef nonnull %194, ptr noundef %55, i64 noundef %163)
  %200 = call ptr @Perl__get_encoding() #17
  %201 = call ptr @Perl_sv_recode_to_utf8(ptr noundef nonnull %194, ptr noundef %200)
  %202 = load i32, ptr %199, align 4, !tbaa !16
  %203 = and i32 %202, 2098176
  %204 = icmp eq i32 %203, 1024
  br i1 %204, label %205, label %211

205:                                              ; preds = %193
  %206 = load ptr, ptr %194, align 8, !tbaa !26
  %207 = getelementptr inbounds %struct.xpv, ptr %206, i64 0, i32 2
  %208 = load i64, ptr %207, align 8, !tbaa !57
  store i64 %208, ptr %4, align 8, !tbaa !60
  %209 = getelementptr inbounds %struct.sv, ptr %194, i64 0, i32 3
  %210 = load ptr, ptr %209, align 8, !tbaa !17
  br label %213

211:                                              ; preds = %193
  %212 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %194, ptr noundef nonnull %4, i32 noundef 34)
  br label %213

213:                                              ; preds = %205, %211, %154, %160
  %214 = phi ptr [ %55, %160 ], [ %55, %154 ], [ %210, %205 ], [ %212, %211 ]
  %215 = phi ptr [ %161, %160 ], [ %159, %154 ], [ %76, %205 ], [ %76, %211 ]
  %216 = phi ptr [ %143, %160 ], [ %143, %154 ], [ %194, %205 ], [ %194, %211 ]
  %217 = load i64, ptr %4, align 8, !tbaa !60
  %218 = load i64, ptr %5, align 8, !tbaa !60
  %219 = icmp eq i64 %217, %218
  br i1 %219, label %248, label %220

220:                                              ; preds = %213
  %221 = getelementptr inbounds %struct.sv, ptr %216, i64 0, i32 1
  %222 = load i32, ptr %221, align 8, !tbaa !13
  %223 = icmp ugt i32 %222, 1
  br i1 %223, label %224, label %226

224:                                              ; preds = %220
  %225 = add i32 %222, -1
  store i32 %225, ptr %221, align 8, !tbaa !13
  br label %268

226:                                              ; preds = %220
  call void @Perl_sv_free2(ptr noundef nonnull %216, i32 noundef %222)
  br label %268

227:                                              ; preds = %98, %101
  %228 = phi i32 [ %83, %98 ], [ %104, %101 ]
  %229 = and i32 %228, 536870912
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %237, label %231

231:                                              ; preds = %227
  %232 = load i64, ptr %5, align 8, !tbaa !60
  %233 = load i64, ptr %4, align 8, !tbaa !60
  %234 = call i32 @Perl_bytes_cmp_utf8(ptr noundef %76, i64 noundef %232, ptr noundef %55, i64 noundef %233) #17
  %235 = icmp eq i32 %234, 0
  %236 = zext i1 %235 to i32
  br label %268

237:                                              ; preds = %227
  %238 = load i64, ptr %4, align 8, !tbaa !60
  %239 = load i64, ptr %5, align 8, !tbaa !60
  %240 = call i32 @Perl_bytes_cmp_utf8(ptr noundef %55, i64 noundef %238, ptr noundef %76, i64 noundef %239) #17
  %241 = icmp eq i32 %240, 0
  %242 = zext i1 %241 to i32
  br label %268

243:                                              ; preds = %57, %89, %81, %74
  %244 = phi i64 [ %75, %89 ], [ %75, %81 ], [ %75, %74 ], [ 0, %57 ]
  %245 = phi i64 [ %77, %89 ], [ %77, %81 ], [ %77, %74 ], [ %58, %57 ]
  %246 = phi ptr [ %76, %89 ], [ %76, %81 ], [ %76, %74 ], [ @.str.10, %57 ]
  %247 = icmp eq i64 %245, %244
  br i1 %247, label %248, label %268

248:                                              ; preds = %213, %243
  %249 = phi ptr [ null, %243 ], [ %216, %213 ]
  %250 = phi ptr [ %246, %243 ], [ %215, %213 ]
  %251 = phi ptr [ %55, %243 ], [ %214, %213 ]
  %252 = phi i64 [ %244, %243 ], [ %217, %213 ]
  %253 = icmp eq ptr %251, %250
  br i1 %253, label %258, label %254

254:                                              ; preds = %248
  %255 = call i32 @bcmp(ptr %251, ptr %250, i64 %252)
  %256 = icmp eq i32 %255, 0
  %257 = zext i1 %256 to i32
  br label %258

258:                                              ; preds = %248, %254
  %259 = phi i32 [ 1, %248 ], [ %257, %254 ]
  %260 = icmp eq ptr %249, null
  br i1 %260, label %268, label %261

261:                                              ; preds = %258
  %262 = getelementptr inbounds %struct.sv, ptr %249, i64 0, i32 1
  %263 = load i32, ptr %262, align 8, !tbaa !13
  %264 = icmp ugt i32 %263, 1
  br i1 %264, label %265, label %267

265:                                              ; preds = %261
  %266 = add i32 %263, -1
  store i32 %266, ptr %262, align 8, !tbaa !13
  br label %268

267:                                              ; preds = %261
  call void @Perl_sv_free2(ptr noundef nonnull %249, i32 noundef %263)
  br label %268

268:                                              ; preds = %243, %267, %265, %258, %226, %224, %237, %231
  %269 = phi i32 [ %236, %231 ], [ %242, %237 ], [ 0, %224 ], [ 0, %226 ], [ %259, %258 ], [ %259, %265 ], [ %259, %267 ], [ 0, %243 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  ret i32 %269
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSVpvn_flags(ptr noundef %0, i64 noundef %1, i32 noundef %2) local_unnamed_addr #1 {
  %4 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %35

6:                                                ; preds = %3
  %7 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %8 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %8, ptr %7, align 8, !tbaa !26
  %9 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 1
  store i32 170, ptr %9, align 8, !tbaa !13
  %10 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  store i32 0, ptr %10, align 4, !tbaa !16
  store ptr %7, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %11 = getelementptr inbounds %struct.sv, ptr %7, i64 1
  store ptr %11, ptr @PL_sv_root, align 8, !tbaa !9
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi ptr [ %11, %6 ], [ %30, %12 ]
  %14 = phi i64 [ 1, %6 ], [ %29, %12 ]
  %15 = getelementptr inbounds %struct.sv, ptr %13, i64 1
  store ptr %15, ptr %13, align 8, !tbaa !26
  %16 = getelementptr inbounds %struct.sv, ptr %7, i64 %14, i32 2
  store i32 255, ptr %16, align 4, !tbaa !16
  %17 = add nuw nsw i64 %14, 1
  %18 = getelementptr inbounds %struct.sv, ptr %7, i64 %17
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 1
  store ptr %19, ptr %18, align 8, !tbaa !26
  %20 = getelementptr inbounds %struct.sv, ptr %7, i64 %17, i32 2
  store i32 255, ptr %20, align 4, !tbaa !16
  %21 = add nuw nsw i64 %14, 2
  %22 = getelementptr inbounds %struct.sv, ptr %7, i64 %21
  %23 = getelementptr inbounds %struct.sv, ptr %22, i64 1
  store ptr %23, ptr %22, align 8, !tbaa !26
  %24 = getelementptr inbounds %struct.sv, ptr %7, i64 %21, i32 2
  store i32 255, ptr %24, align 4, !tbaa !16
  %25 = add nuw nsw i64 %14, 3
  %26 = getelementptr inbounds %struct.sv, ptr %7, i64 %25
  %27 = getelementptr inbounds %struct.sv, ptr %26, i64 1
  store ptr %27, ptr %26, align 8, !tbaa !26
  %28 = getelementptr inbounds %struct.sv, ptr %7, i64 %25, i32 2
  store i32 255, ptr %28, align 4, !tbaa !16
  %29 = add nuw nsw i64 %14, 4
  %30 = getelementptr inbounds %struct.sv, ptr %7, i64 %29
  %31 = icmp eq i64 %29, 169
  br i1 %31, label %32, label %12, !llvm.loop !59

32:                                               ; preds = %12
  store ptr null, ptr %30, align 8, !tbaa !26
  %33 = getelementptr inbounds %struct.sv, ptr %7, i64 169, i32 2
  store i32 255, ptr %33, align 4, !tbaa !16
  %34 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %35

35:                                               ; preds = %3, %32
  %36 = phi ptr [ %34, %32 ], [ %4, %3 ]
  %37 = load ptr, ptr %36, align 8, !tbaa !26
  store ptr %37, ptr @PL_sv_root, align 8, !tbaa !9
  %38 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %39 = add nsw i64 %38, 1
  store i64 %39, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %36, align 8, !tbaa !26
  %40 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 1
  store i32 1, ptr %40, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  store i32 0, ptr %41, align 4, !tbaa !16
  tail call void @Perl_sv_setpvn(ptr noundef nonnull %36, ptr noundef %0, i64 noundef %1)
  %42 = load i32, ptr %41, align 4, !tbaa !16
  %43 = or i32 %42, %2
  store i32 %43, ptr %41, align 4, !tbaa !16
  %44 = and i32 %2, 524288
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %57, label %46

46:                                               ; preds = %35
  %47 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %48 = add nsw i64 %47, 1
  store i64 %48, ptr @PL_tmps_ix, align 8, !tbaa !60
  %49 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %50 = icmp slt i64 %48, %49
  br i1 %50, label %53, label %51

51:                                               ; preds = %46
  %52 = tail call i64 @Perl_tmps_grow_p(i64 noundef %48) #17
  br label %53

53:                                               ; preds = %46, %51
  %54 = phi i64 [ %52, %51 ], [ %48, %46 ]
  %55 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %56 = getelementptr inbounds ptr, ptr %55, i64 %54
  store ptr %36, ptr %56, align 8, !tbaa !9
  br label %57

57:                                               ; preds = %53, %35
  ret ptr %36
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSVpvn(ptr noundef %0, i64 noundef %1) local_unnamed_addr #1 {
  %3 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %34

5:                                                ; preds = %2
  %6 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %7 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %7, ptr %6, align 8, !tbaa !26
  %8 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 1
  store i32 170, ptr %8, align 8, !tbaa !13
  %9 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  store i32 0, ptr %9, align 4, !tbaa !16
  store ptr %6, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %10 = getelementptr inbounds %struct.sv, ptr %6, i64 1
  store ptr %10, ptr @PL_sv_root, align 8, !tbaa !9
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi ptr [ %10, %5 ], [ %29, %11 ]
  %13 = phi i64 [ 1, %5 ], [ %28, %11 ]
  %14 = getelementptr inbounds %struct.sv, ptr %12, i64 1
  store ptr %14, ptr %12, align 8, !tbaa !26
  %15 = getelementptr inbounds %struct.sv, ptr %6, i64 %13, i32 2
  store i32 255, ptr %15, align 4, !tbaa !16
  %16 = add nuw nsw i64 %13, 1
  %17 = getelementptr inbounds %struct.sv, ptr %6, i64 %16
  %18 = getelementptr inbounds %struct.sv, ptr %17, i64 1
  store ptr %18, ptr %17, align 8, !tbaa !26
  %19 = getelementptr inbounds %struct.sv, ptr %6, i64 %16, i32 2
  store i32 255, ptr %19, align 4, !tbaa !16
  %20 = add nuw nsw i64 %13, 2
  %21 = getelementptr inbounds %struct.sv, ptr %6, i64 %20
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 1
  store ptr %22, ptr %21, align 8, !tbaa !26
  %23 = getelementptr inbounds %struct.sv, ptr %6, i64 %20, i32 2
  store i32 255, ptr %23, align 4, !tbaa !16
  %24 = add nuw nsw i64 %13, 3
  %25 = getelementptr inbounds %struct.sv, ptr %6, i64 %24
  %26 = getelementptr inbounds %struct.sv, ptr %25, i64 1
  store ptr %26, ptr %25, align 8, !tbaa !26
  %27 = getelementptr inbounds %struct.sv, ptr %6, i64 %24, i32 2
  store i32 255, ptr %27, align 4, !tbaa !16
  %28 = add nuw nsw i64 %13, 4
  %29 = getelementptr inbounds %struct.sv, ptr %6, i64 %28
  %30 = icmp eq i64 %28, 169
  br i1 %30, label %31, label %11, !llvm.loop !59

31:                                               ; preds = %11
  store ptr null, ptr %29, align 8, !tbaa !26
  %32 = getelementptr inbounds %struct.sv, ptr %6, i64 169, i32 2
  store i32 255, ptr %32, align 4, !tbaa !16
  %33 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %34

34:                                               ; preds = %2, %31
  %35 = phi ptr [ %33, %31 ], [ %3, %2 ]
  %36 = load ptr, ptr %35, align 8, !tbaa !26
  store ptr %36, ptr @PL_sv_root, align 8, !tbaa !9
  %37 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %38 = add nsw i64 %37, 1
  store i64 %38, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %35, align 8, !tbaa !26
  %39 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 1
  store i32 1, ptr %39, align 8, !tbaa !13
  %40 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 2
  store i32 0, ptr %40, align 4, !tbaa !16
  tail call void @Perl_sv_setpvn(ptr noundef nonnull %35, ptr noundef %0, i64 noundef %1)
  ret ptr %35
}

declare i32 @Perl_bytes_cmp_utf8(ptr noundef, i64 noundef, ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @memcmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @Perl_sv_cmp(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = tail call i32 @Perl_sv_cmp_flags(ptr noundef %0, ptr noundef %1, i32 noundef 2), !range !165
  ret i32 %3
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @Perl_sv_cmp_flags(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #1 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #17
  %6 = icmp eq ptr %0, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  store i64 0, ptr %4, align 8, !tbaa !60
  br label %22

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !16
  %11 = and i32 %10, 2098176
  %12 = icmp eq i32 %11, 1024
  br i1 %12, label %13, label %19

13:                                               ; preds = %8
  %14 = load ptr, ptr %0, align 8, !tbaa !26
  %15 = getelementptr inbounds %struct.xpv, ptr %14, i64 0, i32 2
  %16 = load i64, ptr %15, align 8, !tbaa !57
  store i64 %16, ptr %4, align 8, !tbaa !60
  %17 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  br label %22

19:                                               ; preds = %8
  %20 = or i32 %2, 32
  %21 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %0, ptr noundef nonnull %4, i32 noundef %20)
  br label %22

22:                                               ; preds = %13, %19, %7
  %23 = phi ptr [ @.str.10, %7 ], [ %18, %13 ], [ %21, %19 ]
  %24 = icmp eq ptr %1, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  store i64 0, ptr %5, align 8, !tbaa !60
  %26 = load i64, ptr %4, align 8
  br label %214

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %29 = load i32, ptr %28, align 4, !tbaa !16
  %30 = and i32 %29, 2098176
  %31 = icmp eq i32 %30, 1024
  br i1 %31, label %32, label %38

32:                                               ; preds = %27
  %33 = load ptr, ptr %1, align 8, !tbaa !26
  %34 = getelementptr inbounds %struct.xpv, ptr %33, i64 0, i32 2
  %35 = load i64, ptr %34, align 8, !tbaa !57
  store i64 %35, ptr %5, align 8, !tbaa !60
  %36 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !17
  br label %42

38:                                               ; preds = %27
  %39 = or i32 %2, 32
  %40 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %1, ptr noundef nonnull %5, i32 noundef %39)
  %41 = load i64, ptr %5, align 8
  br label %42

42:                                               ; preds = %32, %38
  %43 = phi i64 [ %35, %32 ], [ %41, %38 ]
  %44 = phi ptr [ %37, %32 ], [ %40, %38 ]
  %45 = load i64, ptr %4, align 8
  %46 = icmp ne i64 %45, 0
  %47 = icmp ne i64 %43, 0
  %48 = select i1 %46, i1 %47, i1 false
  br i1 %48, label %49, label %214

49:                                               ; preds = %42
  %50 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %51 = load i32, ptr %50, align 4, !tbaa !16
  %52 = and i32 %51, 536870912
  %53 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %54 = load i32, ptr %53, align 4, !tbaa !16
  %55 = and i32 %54, 536870912
  %56 = icmp eq i32 %52, %55
  br i1 %56, label %209, label %57

57:                                               ; preds = %49
  %58 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %59 = getelementptr inbounds %struct.cop, ptr %58, i64 0, i32 10
  %60 = load i32, ptr %59, align 8, !tbaa !79
  %61 = and i32 %60, 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %209

63:                                               ; preds = %57
  %64 = icmp eq i32 %52, 0
  %65 = load ptr, ptr @PL_encoding, align 8, !tbaa !9
  %66 = icmp eq ptr %65, null
  br i1 %64, label %138, label %67

67:                                               ; preds = %63
  br i1 %66, label %68, label %77

68:                                               ; preds = %67
  %69 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !9
  %70 = icmp eq ptr %69, null
  br i1 %70, label %130, label %71

71:                                               ; preds = %68
  %72 = call ptr @Perl__get_encoding() #17
  %73 = icmp eq ptr %72, null
  %74 = load i64, ptr %5, align 8, !tbaa !60
  br i1 %73, label %75, label %77

75:                                               ; preds = %71
  %76 = load i64, ptr %4, align 8, !tbaa !60
  br label %130

77:                                               ; preds = %71, %67
  %78 = phi i64 [ %43, %67 ], [ %74, %71 ]
  %79 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %80 = icmp eq ptr %79, null
  br i1 %80, label %81, label %110

81:                                               ; preds = %77
  %82 = call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %83 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %83, ptr %82, align 8, !tbaa !26
  %84 = getelementptr inbounds %struct.sv, ptr %82, i64 0, i32 1
  store i32 170, ptr %84, align 8, !tbaa !13
  %85 = getelementptr inbounds %struct.sv, ptr %82, i64 0, i32 2
  store i32 0, ptr %85, align 4, !tbaa !16
  store ptr %82, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %86 = getelementptr inbounds %struct.sv, ptr %82, i64 1
  store ptr %86, ptr @PL_sv_root, align 8, !tbaa !9
  br label %87

87:                                               ; preds = %87, %81
  %88 = phi ptr [ %86, %81 ], [ %105, %87 ]
  %89 = phi i64 [ 1, %81 ], [ %104, %87 ]
  %90 = getelementptr inbounds %struct.sv, ptr %88, i64 1
  store ptr %90, ptr %88, align 8, !tbaa !26
  %91 = getelementptr inbounds %struct.sv, ptr %82, i64 %89, i32 2
  store i32 255, ptr %91, align 4, !tbaa !16
  %92 = add nuw nsw i64 %89, 1
  %93 = getelementptr inbounds %struct.sv, ptr %82, i64 %92
  %94 = getelementptr inbounds %struct.sv, ptr %93, i64 1
  store ptr %94, ptr %93, align 8, !tbaa !26
  %95 = getelementptr inbounds %struct.sv, ptr %82, i64 %92, i32 2
  store i32 255, ptr %95, align 4, !tbaa !16
  %96 = add nuw nsw i64 %89, 2
  %97 = getelementptr inbounds %struct.sv, ptr %82, i64 %96
  %98 = getelementptr inbounds %struct.sv, ptr %97, i64 1
  store ptr %98, ptr %97, align 8, !tbaa !26
  %99 = getelementptr inbounds %struct.sv, ptr %82, i64 %96, i32 2
  store i32 255, ptr %99, align 4, !tbaa !16
  %100 = add nuw nsw i64 %89, 3
  %101 = getelementptr inbounds %struct.sv, ptr %82, i64 %100
  %102 = getelementptr inbounds %struct.sv, ptr %101, i64 1
  store ptr %102, ptr %101, align 8, !tbaa !26
  %103 = getelementptr inbounds %struct.sv, ptr %82, i64 %100, i32 2
  store i32 255, ptr %103, align 4, !tbaa !16
  %104 = add nuw nsw i64 %89, 4
  %105 = getelementptr inbounds %struct.sv, ptr %82, i64 %104
  %106 = icmp eq i64 %104, 169
  br i1 %106, label %107, label %87, !llvm.loop !59

107:                                              ; preds = %87
  store ptr null, ptr %105, align 8, !tbaa !26
  %108 = getelementptr inbounds %struct.sv, ptr %82, i64 169, i32 2
  store i32 255, ptr %108, align 4, !tbaa !16
  %109 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %110

110:                                              ; preds = %77, %107
  %111 = phi ptr [ %109, %107 ], [ %79, %77 ]
  %112 = load ptr, ptr %111, align 8, !tbaa !26
  store ptr %112, ptr @PL_sv_root, align 8, !tbaa !9
  %113 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %114 = add nsw i64 %113, 1
  store i64 %114, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %111, align 8, !tbaa !26
  %115 = getelementptr inbounds %struct.sv, ptr %111, i64 0, i32 1
  store i32 1, ptr %115, align 8, !tbaa !13
  %116 = getelementptr inbounds %struct.sv, ptr %111, i64 0, i32 2
  store i32 0, ptr %116, align 4, !tbaa !16
  call void @Perl_sv_setpvn(ptr noundef nonnull %111, ptr noundef %44, i64 noundef %78)
  %117 = call ptr @Perl__get_encoding() #17
  %118 = call ptr @Perl_sv_recode_to_utf8(ptr noundef nonnull %111, ptr noundef %117)
  %119 = load i32, ptr %116, align 4, !tbaa !16
  %120 = and i32 %119, 2098176
  %121 = icmp eq i32 %120, 1024
  br i1 %121, label %122, label %128

122:                                              ; preds = %110
  %123 = load ptr, ptr %111, align 8, !tbaa !26
  %124 = getelementptr inbounds %struct.xpv, ptr %123, i64 0, i32 2
  %125 = load i64, ptr %124, align 8, !tbaa !57
  store i64 %125, ptr %5, align 8, !tbaa !60
  %126 = getelementptr inbounds %struct.sv, ptr %111, i64 0, i32 3
  %127 = load ptr, ptr %126, align 8, !tbaa !17
  br label %209

128:                                              ; preds = %110
  %129 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %111, ptr noundef nonnull %5, i32 noundef 34)
  br label %209

130:                                              ; preds = %75, %68
  %131 = phi i64 [ %45, %68 ], [ %76, %75 ]
  %132 = phi i64 [ %43, %68 ], [ %74, %75 ]
  %133 = call i32 @Perl_bytes_cmp_utf8(ptr noundef %44, i64 noundef %132, ptr noundef %23, i64 noundef %131) #17
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %133, 1
  %136 = select i1 %135, i32 1, i32 -1
  %137 = select i1 %134, i32 0, i32 %136
  br label %248

138:                                              ; preds = %63
  br i1 %66, label %139, label %148

139:                                              ; preds = %138
  %140 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !9
  %141 = icmp eq ptr %140, null
  br i1 %141, label %201, label %142

142:                                              ; preds = %139
  %143 = call ptr @Perl__get_encoding() #17
  %144 = icmp eq ptr %143, null
  %145 = load i64, ptr %4, align 8, !tbaa !60
  br i1 %144, label %146, label %148

146:                                              ; preds = %142
  %147 = load i64, ptr %5, align 8, !tbaa !60
  br label %201

148:                                              ; preds = %142, %138
  %149 = phi i64 [ %45, %138 ], [ %145, %142 ]
  %150 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %151 = icmp eq ptr %150, null
  br i1 %151, label %152, label %181

152:                                              ; preds = %148
  %153 = call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %154 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %154, ptr %153, align 8, !tbaa !26
  %155 = getelementptr inbounds %struct.sv, ptr %153, i64 0, i32 1
  store i32 170, ptr %155, align 8, !tbaa !13
  %156 = getelementptr inbounds %struct.sv, ptr %153, i64 0, i32 2
  store i32 0, ptr %156, align 4, !tbaa !16
  store ptr %153, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %157 = getelementptr inbounds %struct.sv, ptr %153, i64 1
  store ptr %157, ptr @PL_sv_root, align 8, !tbaa !9
  br label %158

158:                                              ; preds = %158, %152
  %159 = phi ptr [ %157, %152 ], [ %176, %158 ]
  %160 = phi i64 [ 1, %152 ], [ %175, %158 ]
  %161 = getelementptr inbounds %struct.sv, ptr %159, i64 1
  store ptr %161, ptr %159, align 8, !tbaa !26
  %162 = getelementptr inbounds %struct.sv, ptr %153, i64 %160, i32 2
  store i32 255, ptr %162, align 4, !tbaa !16
  %163 = add nuw nsw i64 %160, 1
  %164 = getelementptr inbounds %struct.sv, ptr %153, i64 %163
  %165 = getelementptr inbounds %struct.sv, ptr %164, i64 1
  store ptr %165, ptr %164, align 8, !tbaa !26
  %166 = getelementptr inbounds %struct.sv, ptr %153, i64 %163, i32 2
  store i32 255, ptr %166, align 4, !tbaa !16
  %167 = add nuw nsw i64 %160, 2
  %168 = getelementptr inbounds %struct.sv, ptr %153, i64 %167
  %169 = getelementptr inbounds %struct.sv, ptr %168, i64 1
  store ptr %169, ptr %168, align 8, !tbaa !26
  %170 = getelementptr inbounds %struct.sv, ptr %153, i64 %167, i32 2
  store i32 255, ptr %170, align 4, !tbaa !16
  %171 = add nuw nsw i64 %160, 3
  %172 = getelementptr inbounds %struct.sv, ptr %153, i64 %171
  %173 = getelementptr inbounds %struct.sv, ptr %172, i64 1
  store ptr %173, ptr %172, align 8, !tbaa !26
  %174 = getelementptr inbounds %struct.sv, ptr %153, i64 %171, i32 2
  store i32 255, ptr %174, align 4, !tbaa !16
  %175 = add nuw nsw i64 %160, 4
  %176 = getelementptr inbounds %struct.sv, ptr %153, i64 %175
  %177 = icmp eq i64 %175, 169
  br i1 %177, label %178, label %158, !llvm.loop !59

178:                                              ; preds = %158
  store ptr null, ptr %176, align 8, !tbaa !26
  %179 = getelementptr inbounds %struct.sv, ptr %153, i64 169, i32 2
  store i32 255, ptr %179, align 4, !tbaa !16
  %180 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %181

181:                                              ; preds = %148, %178
  %182 = phi ptr [ %180, %178 ], [ %150, %148 ]
  %183 = load ptr, ptr %182, align 8, !tbaa !26
  store ptr %183, ptr @PL_sv_root, align 8, !tbaa !9
  %184 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %185 = add nsw i64 %184, 1
  store i64 %185, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %182, align 8, !tbaa !26
  %186 = getelementptr inbounds %struct.sv, ptr %182, i64 0, i32 1
  store i32 1, ptr %186, align 8, !tbaa !13
  %187 = getelementptr inbounds %struct.sv, ptr %182, i64 0, i32 2
  store i32 0, ptr %187, align 4, !tbaa !16
  call void @Perl_sv_setpvn(ptr noundef nonnull %182, ptr noundef %23, i64 noundef %149)
  %188 = call ptr @Perl__get_encoding() #17
  %189 = call ptr @Perl_sv_recode_to_utf8(ptr noundef nonnull %182, ptr noundef %188)
  %190 = load i32, ptr %187, align 4, !tbaa !16
  %191 = and i32 %190, 2098176
  %192 = icmp eq i32 %191, 1024
  br i1 %192, label %193, label %199

193:                                              ; preds = %181
  %194 = load ptr, ptr %182, align 8, !tbaa !26
  %195 = getelementptr inbounds %struct.xpv, ptr %194, i64 0, i32 2
  %196 = load i64, ptr %195, align 8, !tbaa !57
  store i64 %196, ptr %4, align 8, !tbaa !60
  %197 = getelementptr inbounds %struct.sv, ptr %182, i64 0, i32 3
  %198 = load ptr, ptr %197, align 8, !tbaa !17
  br label %214

199:                                              ; preds = %181
  %200 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %182, ptr noundef nonnull %4, i32 noundef 34)
  br label %209

201:                                              ; preds = %146, %139
  %202 = phi i64 [ %43, %139 ], [ %147, %146 ]
  %203 = phi i64 [ %45, %139 ], [ %145, %146 ]
  %204 = call i32 @Perl_bytes_cmp_utf8(ptr noundef %23, i64 noundef %203, ptr noundef %44, i64 noundef %202) #17
  %205 = icmp eq i32 %204, 0
  %206 = icmp sgt i32 %204, -1
  %207 = select i1 %206, i32 1, i32 -1
  %208 = select i1 %205, i32 0, i32 %207
  br label %248

209:                                              ; preds = %49, %57, %128, %122, %199
  %210 = phi ptr [ %182, %199 ], [ %111, %122 ], [ %111, %128 ], [ null, %49 ], [ null, %57 ]
  %211 = phi ptr [ %44, %199 ], [ %127, %122 ], [ %129, %128 ], [ %44, %49 ], [ %44, %57 ]
  %212 = phi ptr [ %200, %199 ], [ %23, %122 ], [ %23, %128 ], [ %23, %49 ], [ %23, %57 ]
  %213 = load i64, ptr %4, align 8
  br label %214

214:                                              ; preds = %25, %209, %193, %42
  %215 = phi i64 [ %213, %209 ], [ %196, %193 ], [ %45, %42 ], [ %26, %25 ]
  %216 = phi ptr [ %210, %209 ], [ %182, %193 ], [ null, %42 ], [ null, %25 ]
  %217 = phi ptr [ %211, %209 ], [ %44, %193 ], [ %44, %42 ], [ @.str.10, %25 ]
  %218 = phi ptr [ %212, %209 ], [ %198, %193 ], [ %23, %42 ], [ %23, %25 ]
  %219 = icmp eq i64 %215, 0
  %220 = load i64, ptr %5, align 8
  br i1 %219, label %221, label %224

221:                                              ; preds = %214
  %222 = icmp ne i64 %220, 0
  %223 = sext i1 %222 to i32
  br label %238

224:                                              ; preds = %214
  %225 = icmp eq i64 %220, 0
  br i1 %225, label %238, label %226

226:                                              ; preds = %224
  %227 = call i64 @llvm.umin.i64(i64 %215, i64 %220)
  %228 = call i32 @memcmp(ptr noundef %218, ptr noundef %217, i64 noundef %227) #18
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %233, label %230

230:                                              ; preds = %226
  %231 = icmp sgt i32 %228, -1
  %232 = select i1 %231, i32 1, i32 -1
  br label %238

233:                                              ; preds = %226
  %234 = icmp ult i64 %215, %220
  %235 = icmp eq i64 %215, %220
  %236 = select i1 %234, i32 -1, i32 1
  %237 = select i1 %235, i32 0, i32 %236
  br label %238

238:                                              ; preds = %233, %230, %224, %221
  %239 = phi i32 [ %223, %221 ], [ 1, %224 ], [ %232, %230 ], [ %237, %233 ]
  %240 = icmp eq ptr %216, null
  br i1 %240, label %248, label %241

241:                                              ; preds = %238
  %242 = getelementptr inbounds %struct.sv, ptr %216, i64 0, i32 1
  %243 = load i32, ptr %242, align 8, !tbaa !13
  %244 = icmp ugt i32 %243, 1
  br i1 %244, label %245, label %247

245:                                              ; preds = %241
  %246 = add i32 %243, -1
  store i32 %246, ptr %242, align 8, !tbaa !13
  br label %248

247:                                              ; preds = %241
  call void @Perl_sv_free2(ptr noundef nonnull %216, i32 noundef %243)
  br label %248

248:                                              ; preds = %247, %245, %238, %201, %130
  %249 = phi i32 [ %137, %130 ], [ %208, %201 ], [ %239, %238 ], [ %239, %245 ], [ %239, %247 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  ret i32 %249
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @Perl_sv_cmp_locale(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = tail call i32 @Perl_sv_cmp_flags(ptr noundef %0, ptr noundef %1, i32 noundef 2), !range !165
  ret i32 %3
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @Perl_sv_cmp_locale_flags(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #1 {
  %4 = tail call i32 @Perl_sv_cmp_flags(ptr noundef %0, ptr noundef %1, i32 noundef 2), !range !165
  ret i32 %4
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_gets(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #1 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.stat, align 8
  %9 = alloca [8192 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #17
  %10 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !16
  %12 = and i32 %11, 427886592
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %3
  %15 = icmp eq i32 %2, 0
  %16 = select i1 %15, i32 4, i32 0
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %0, i32 noundef %16)
  %17 = load i32, ptr %10, align 4, !tbaa !16
  br label %18

18:                                               ; preds = %14, %3
  %19 = phi i32 [ %17, %14 ], [ %11, %3 ]
  %20 = and i32 %19, 255
  %21 = icmp ugt i32 %20, 2
  br i1 %21, label %23, label %22

22:                                               ; preds = %18
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 3)
  br label %23

23:                                               ; preds = %22, %18
  %24 = icmp eq i32 %2, 0
  br i1 %24, label %144, label %25

25:                                               ; preds = %23
  %26 = tail call i32 @PerlIO_isutf8(ptr noundef %1) #17
  %27 = icmp eq i32 %26, 0
  %28 = load i32, ptr %10, align 4, !tbaa !16
  %29 = and i32 %28, 536870912
  %30 = icmp eq i32 %29, 0
  br i1 %27, label %52, label %31

31:                                               ; preds = %25
  br i1 %30, label %32, label %133

32:                                               ; preds = %31
  %33 = tail call i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef nonnull %0, i32 noundef 0, i64 noundef 0)
  %34 = sext i32 %2 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #17
  %35 = load i32, ptr %10, align 4, !tbaa !16
  %36 = and i32 %35, 2098176
  %37 = icmp eq i32 %36, 1024
  br i1 %37, label %38, label %44

38:                                               ; preds = %32
  %39 = load ptr, ptr %0, align 8, !tbaa !26
  %40 = getelementptr inbounds %struct.xpv, ptr %39, i64 0, i32 2
  %41 = load i64, ptr %40, align 8, !tbaa !57
  store i64 %41, ptr %5, align 8, !tbaa !60
  %42 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  br label %47

44:                                               ; preds = %32
  %45 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %0, ptr noundef nonnull %5, i32 noundef 34)
  %46 = load i64, ptr %5, align 8, !tbaa !60
  br label %47

47:                                               ; preds = %44, %38
  %48 = phi i64 [ %46, %44 ], [ %41, %38 ]
  %49 = phi ptr [ %45, %44 ], [ %43, %38 ]
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %51, label %136

51:                                               ; preds = %47
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #17
  br label %144

52:                                               ; preds = %25
  br i1 %30, label %133, label %53

53:                                               ; preds = %52
  %54 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %85

56:                                               ; preds = %53
  %57 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %58 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %58, ptr %57, align 8, !tbaa !26
  %59 = getelementptr inbounds %struct.sv, ptr %57, i64 0, i32 1
  store i32 170, ptr %59, align 8, !tbaa !13
  %60 = getelementptr inbounds %struct.sv, ptr %57, i64 0, i32 2
  store i32 0, ptr %60, align 4, !tbaa !16
  store ptr %57, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %61 = getelementptr inbounds %struct.sv, ptr %57, i64 1
  store ptr %61, ptr @PL_sv_root, align 8, !tbaa !9
  br label %62

62:                                               ; preds = %62, %56
  %63 = phi ptr [ %61, %56 ], [ %80, %62 ]
  %64 = phi i64 [ 1, %56 ], [ %79, %62 ]
  %65 = getelementptr inbounds %struct.sv, ptr %63, i64 1
  store ptr %65, ptr %63, align 8, !tbaa !26
  %66 = getelementptr inbounds %struct.sv, ptr %57, i64 %64, i32 2
  store i32 255, ptr %66, align 4, !tbaa !16
  %67 = add nuw nsw i64 %64, 1
  %68 = getelementptr inbounds %struct.sv, ptr %57, i64 %67
  %69 = getelementptr inbounds %struct.sv, ptr %68, i64 1
  store ptr %69, ptr %68, align 8, !tbaa !26
  %70 = getelementptr inbounds %struct.sv, ptr %57, i64 %67, i32 2
  store i32 255, ptr %70, align 4, !tbaa !16
  %71 = add nuw nsw i64 %64, 2
  %72 = getelementptr inbounds %struct.sv, ptr %57, i64 %71
  %73 = getelementptr inbounds %struct.sv, ptr %72, i64 1
  store ptr %73, ptr %72, align 8, !tbaa !26
  %74 = getelementptr inbounds %struct.sv, ptr %57, i64 %71, i32 2
  store i32 255, ptr %74, align 4, !tbaa !16
  %75 = add nuw nsw i64 %64, 3
  %76 = getelementptr inbounds %struct.sv, ptr %57, i64 %75
  %77 = getelementptr inbounds %struct.sv, ptr %76, i64 1
  store ptr %77, ptr %76, align 8, !tbaa !26
  %78 = getelementptr inbounds %struct.sv, ptr %57, i64 %75, i32 2
  store i32 255, ptr %78, align 4, !tbaa !16
  %79 = add nuw nsw i64 %64, 4
  %80 = getelementptr inbounds %struct.sv, ptr %57, i64 %79
  %81 = icmp eq i64 %79, 169
  br i1 %81, label %82, label %62, !llvm.loop !59

82:                                               ; preds = %62
  store ptr null, ptr %80, align 8, !tbaa !26
  %83 = getelementptr inbounds %struct.sv, ptr %57, i64 169, i32 2
  store i32 255, ptr %83, align 4, !tbaa !16
  %84 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %85

85:                                               ; preds = %82, %53
  %86 = phi ptr [ %84, %82 ], [ %54, %53 ]
  %87 = load ptr, ptr %86, align 8, !tbaa !26
  store ptr %87, ptr @PL_sv_root, align 8, !tbaa !9
  %88 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %89 = add nsw i64 %88, 1
  store i64 %89, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %86, align 8, !tbaa !26
  %90 = getelementptr inbounds %struct.sv, ptr %86, i64 0, i32 1
  store i32 1, ptr %90, align 8, !tbaa !13
  %91 = getelementptr inbounds %struct.sv, ptr %86, i64 0, i32 2
  store i32 0, ptr %91, align 4, !tbaa !16
  tail call void @Perl_push_scope() #17
  tail call void @Perl_save_pushptr(ptr noundef nonnull %86, i32 noundef 11) #17
  %92 = tail call ptr @Perl_sv_gets(ptr noundef nonnull %86, ptr noundef %1, i32 noundef 0)
  %93 = tail call i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef nonnull %86, i32 noundef 0, i64 noundef 0)
  %94 = sext i32 %2 to i64
  %95 = load ptr, ptr %0, align 8, !tbaa !26
  %96 = getelementptr inbounds %struct.xpv, ptr %95, i64 0, i32 2
  store i64 %94, ptr %96, align 8, !tbaa !57
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  %97 = load i32, ptr %91, align 4, !tbaa !16
  %98 = and i32 %97, 2098176
  %99 = icmp eq i32 %98, 1024
  br i1 %99, label %100, label %106

100:                                              ; preds = %85
  %101 = load ptr, ptr %86, align 8, !tbaa !26
  %102 = getelementptr inbounds %struct.xpv, ptr %101, i64 0, i32 2
  %103 = load i64, ptr %102, align 8, !tbaa !57
  store i64 %103, ptr %4, align 8, !tbaa !60
  %104 = getelementptr inbounds %struct.sv, ptr %86, i64 0, i32 3
  %105 = load ptr, ptr %104, align 8, !tbaa !17
  br label %108

106:                                              ; preds = %85
  %107 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %86, ptr noundef nonnull %4, i32 noundef 34) #20
  br label %108

108:                                              ; preds = %106, %100
  %109 = phi ptr [ %105, %100 ], [ %107, %106 ]
  %110 = load i32, ptr %10, align 4, !tbaa !16
  %111 = and i32 %110, 2097152
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %108
  %114 = call i32 @Perl_mg_get(ptr noundef nonnull %0) #17
  br label %115

115:                                              ; preds = %113, %108
  %116 = load i64, ptr %4, align 8, !tbaa !60
  %117 = load i32, ptr %91, align 4, !tbaa !16
  %118 = and i32 %117, 536870912
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %127, label %120

120:                                              ; preds = %115
  %121 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %122 = getelementptr inbounds %struct.cop, ptr %121, i64 0, i32 10
  %123 = load i32, ptr %122, align 8, !tbaa !79
  %124 = and i32 %123, 8
  %125 = icmp eq i32 %124, 0
  %126 = select i1 %125, i32 32768, i32 16384
  br label %127

127:                                              ; preds = %115, %120
  %128 = phi i32 [ 16384, %115 ], [ %126, %120 ]
  call void @Perl_sv_catpvn_flags(ptr noundef nonnull %0, ptr noundef %109, i64 noundef %116, i32 noundef %128) #20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  call void @Perl_pop_scope() #17
  %129 = load ptr, ptr %0, align 8, !tbaa !26
  %130 = getelementptr inbounds %struct.xpv, ptr %129, i64 0, i32 2
  %131 = load i64, ptr %130, align 8, !tbaa !57
  %132 = icmp eq i64 %131, %94
  br i1 %132, label %732, label %729

133:                                              ; preds = %52, %31
  %134 = and i32 %28, 1610547455
  %135 = or i32 %134, 17408
  store i32 %135, ptr %10, align 4, !tbaa !16
  br label %151

136:                                              ; preds = %47
  %137 = getelementptr inbounds i8, ptr %49, i64 %48
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #17
  store ptr null, ptr %6, align 8, !tbaa !9
  %138 = call fastcc i64 @S_sv_pos_u2b_cached(ptr noundef nonnull %0, ptr noundef nonnull %6, ptr noundef %49, ptr noundef nonnull %137, i64 noundef %34, i64 noundef 0, i64 noundef 0)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #17
  %139 = trunc i64 %138 to i32
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #17
  %140 = load i32, ptr %10, align 4, !tbaa !16
  %141 = and i32 %140, 1610547455
  %142 = or i32 %141, 17408
  store i32 %142, ptr %10, align 4, !tbaa !16
  %143 = icmp eq i32 %139, 0
  br i1 %143, label %148, label %151

144:                                              ; preds = %23, %51
  %145 = load i32, ptr %10, align 4, !tbaa !16
  %146 = and i32 %145, 1610547455
  %147 = or i32 %146, 17408
  store i32 %147, ptr %10, align 4, !tbaa !16
  br label %148

148:                                              ; preds = %144, %136
  %149 = load ptr, ptr %0, align 8, !tbaa !26
  %150 = getelementptr inbounds %struct.xpv, ptr %149, i64 0, i32 2
  store i64 0, ptr %150, align 8, !tbaa !57
  br label %151

151:                                              ; preds = %133, %148, %136
  %152 = phi i32 [ %2, %133 ], [ 0, %148 ], [ %139, %136 ]
  %153 = call i32 @PerlIO_isutf8(ptr noundef %1) #17
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %158, label %155

155:                                              ; preds = %151
  %156 = load i32, ptr %10, align 4, !tbaa !16
  %157 = or i32 %156, 536870912
  store i32 %157, ptr %10, align 4, !tbaa !16
  br label %158

158:                                              ; preds = %155, %151
  %159 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %160 = icmp eq ptr %159, @PL_compiling
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  store i64 1, ptr %7, align 8, !tbaa !60
  br label %455

162:                                              ; preds = %158
  %163 = load ptr, ptr @PL_rs, align 8, !tbaa !9
  %164 = getelementptr inbounds %struct.sv, ptr %163, i64 0, i32 2
  %165 = load i32, ptr %164, align 4, !tbaa !16
  %166 = and i32 %165, 65280
  %167 = icmp ne i32 %166, 0
  %168 = and i32 %165, 255
  %169 = icmp eq i32 %168, 8
  %170 = or i1 %167, %169
  %171 = and i32 %165, 16826623
  %172 = icmp eq i32 %171, 16777226
  %173 = or i1 %172, %170
  br i1 %173, label %212, label %174

174:                                              ; preds = %162
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %8) #17
  %175 = call i32 @Perl_PerlIO_fileno(ptr noundef %1) #17
  %176 = call i32 @fstat64(i32 noundef %175, ptr noundef nonnull %8) #17
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %211

178:                                              ; preds = %174
  %179 = getelementptr inbounds %struct.stat, ptr %8, i64 0, i32 3
  %180 = load i32, ptr %179, align 8, !tbaa !166
  %181 = and i32 %180, 61440
  %182 = icmp eq i32 %181, 32768
  br i1 %182, label %183, label %211

183:                                              ; preds = %178
  %184 = call i64 @Perl_PerlIO_tell(ptr noundef %1) #17
  %185 = icmp eq i64 %184, -1
  br i1 %185, label %211, label %186

186:                                              ; preds = %183
  %187 = getelementptr inbounds %struct.stat, ptr %8, i64 0, i32 8
  %188 = load i64, ptr %187, align 8, !tbaa !169
  %189 = sext i32 %152 to i64
  %190 = add nsw i64 %188, %189
  %191 = icmp sgt i64 %190, %184
  br i1 %191, label %192, label %211

192:                                              ; preds = %186
  %193 = load i32, ptr %10, align 4, !tbaa !16
  %194 = and i32 %193, 268435456
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %200, label %196

196:                                              ; preds = %192
  %197 = add nsw i64 %189, 2
  %198 = sub i64 %197, %184
  %199 = add i64 %198, %188
  br label %208

200:                                              ; preds = %192
  %201 = load ptr, ptr %0, align 8, !tbaa !26
  %202 = getelementptr inbounds %struct.xpv, ptr %201, i64 0, i32 3
  %203 = load i64, ptr %202, align 8, !tbaa !17
  %204 = add nsw i64 %189, 2
  %205 = sub i64 %204, %184
  %206 = add i64 %205, %188
  %207 = icmp ult i64 %203, %206
  br i1 %207, label %208, label %211

208:                                              ; preds = %196, %200
  %209 = phi i64 [ %199, %196 ], [ %206, %200 ]
  %210 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %209)
  br label %211

211:                                              ; preds = %174, %178, %200, %208, %186, %183
  store i64 0, ptr %7, align 8, !tbaa !60
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %8) #17
  br label %455

212:                                              ; preds = %162
  %213 = and i32 %165, 2048
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %389, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %struct.sv, ptr %163, i64 0, i32 3
  %217 = load ptr, ptr %216, align 8, !tbaa !17
  %218 = getelementptr inbounds %struct.sv, ptr %217, i64 0, i32 2
  %219 = load i32, ptr %218, align 4, !tbaa !16
  %220 = and i32 %219, 2097408
  %221 = icmp eq i32 %220, 256
  br i1 %221, label %222, label %226

222:                                              ; preds = %215
  %223 = load ptr, ptr %217, align 8, !tbaa !26
  %224 = getelementptr inbounds %struct.xpviv, ptr %223, i64 0, i32 4
  %225 = load i64, ptr %224, align 8, !tbaa !17
  br label %229

226:                                              ; preds = %215
  %227 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %217, i32 noundef 2)
  %228 = load ptr, ptr @PL_rs, align 8, !tbaa !9
  br label %229

229:                                              ; preds = %226, %222
  %230 = phi ptr [ %163, %222 ], [ %228, %226 ]
  %231 = phi i64 [ %225, %222 ], [ %227, %226 ]
  %232 = icmp sgt i64 %231, 0
  br i1 %232, label %236, label %233

233:                                              ; preds = %229
  %234 = getelementptr inbounds %struct.sv, ptr %230, i64 0, i32 2
  %235 = load i32, ptr %234, align 4, !tbaa !16
  br label %389

236:                                              ; preds = %229
  %237 = getelementptr inbounds %struct.sv, ptr %230, i64 0, i32 3
  %238 = load ptr, ptr %237, align 8, !tbaa !17
  %239 = getelementptr inbounds %struct.sv, ptr %238, i64 0, i32 2
  %240 = load i32, ptr %239, align 4, !tbaa !16
  %241 = and i32 %240, -2145386240
  %242 = icmp eq i32 %241, -2147483392
  br i1 %242, label %243, label %247

243:                                              ; preds = %236
  %244 = load ptr, ptr %238, align 8, !tbaa !26
  %245 = getelementptr inbounds %struct.xpvuv, ptr %244, i64 0, i32 4
  %246 = load i64, ptr %245, align 8, !tbaa !17
  br label %249

247:                                              ; preds = %236
  %248 = call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %238, i32 noundef 2)
  br label %249

249:                                              ; preds = %247, %243
  %250 = phi i64 [ %246, %243 ], [ %248, %247 ]
  %251 = load i32, ptr %10, align 4, !tbaa !16
  %252 = and i32 %251, 268435456
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %258, label %254

254:                                              ; preds = %249
  %255 = sext i32 %152 to i64
  %256 = add nsw i64 %255, 1
  %257 = add i64 %256, %250
  br label %266

258:                                              ; preds = %249
  %259 = load ptr, ptr %0, align 8, !tbaa !26
  %260 = getelementptr inbounds %struct.xpv, ptr %259, i64 0, i32 3
  %261 = load i64, ptr %260, align 8, !tbaa !17
  %262 = sext i32 %152 to i64
  %263 = add nsw i64 %262, 1
  %264 = add i64 %263, %250
  %265 = icmp ult i64 %261, %264
  br i1 %265, label %266, label %270

266:                                              ; preds = %258, %254
  %267 = phi i64 [ %257, %254 ], [ %264, %258 ]
  %268 = phi i64 [ %255, %254 ], [ %262, %258 ]
  %269 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %267)
  br label %273

270:                                              ; preds = %258
  %271 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %272 = load ptr, ptr %271, align 8, !tbaa !17
  br label %273

273:                                              ; preds = %270, %266
  %274 = phi i64 [ %262, %270 ], [ %268, %266 ]
  %275 = phi ptr [ %272, %270 ], [ %269, %266 ]
  %276 = getelementptr inbounds i8, ptr %275, i64 %274
  %277 = call i64 @Perl_PerlIO_read(ptr noundef %1, ptr noundef %276, i64 noundef %250) #17
  %278 = call i32 @PerlIO_isutf8(ptr noundef %1) #17
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i64 %277, 1
  %281 = select i1 %279, i1 true, i1 %280
  %282 = icmp eq i64 %250, 0
  %283 = select i1 %281, i1 true, i1 %282
  br i1 %283, label %377, label %284

284:                                              ; preds = %273
  %285 = getelementptr inbounds i8, ptr %276, i64 %277
  %286 = add nsw i64 %274, 1
  %287 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  br label %288

288:                                              ; preds = %373, %284
  %289 = phi i64 [ %277, %284 ], [ %374, %373 ]
  %290 = phi ptr [ %276, %284 ], [ %369, %373 ]
  %291 = phi i64 [ 0, %284 ], [ %330, %373 ]
  %292 = phi i8 [ 1, %284 ], [ %329, %373 ]
  %293 = phi i64 [ 0, %284 ], [ %328, %373 ]
  %294 = phi ptr [ %276, %284 ], [ %376, %373 ]
  %295 = phi ptr [ %285, %284 ], [ %375, %373 ]
  %296 = icmp ult ptr %294, %295
  br i1 %296, label %297, label %326

297:                                              ; preds = %288
  %298 = and i8 %292, 1
  %299 = icmp eq i8 %298, 0
  br i1 %299, label %306, label %300

300:                                              ; preds = %297
  %301 = load i8, ptr %294, align 1, !tbaa !17
  %302 = zext i8 %301 to i64
  %303 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %302
  %304 = load i8, ptr %303, align 1, !tbaa !17
  %305 = zext i8 %304 to i64
  br label %306

306:                                              ; preds = %300, %297
  %307 = phi i64 [ %305, %300 ], [ %291, %297 ]
  %308 = getelementptr inbounds i8, ptr %294, i64 %307
  %309 = icmp ugt ptr %308, %295
  br i1 %309, label %326, label %310

310:                                              ; preds = %306
  %311 = add i64 %293, 1
  %312 = icmp ult ptr %308, %295
  br i1 %312, label %313, label %326

313:                                              ; preds = %310, %323
  %314 = phi i64 [ %324, %323 ], [ %311, %310 ]
  %315 = phi ptr [ %321, %323 ], [ %308, %310 ]
  %316 = load i8, ptr %315, align 1, !tbaa !17
  %317 = zext i8 %316 to i64
  %318 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %317
  %319 = load i8, ptr %318, align 1, !tbaa !17
  %320 = zext i8 %319 to i64
  %321 = getelementptr inbounds i8, ptr %315, i64 %320
  %322 = icmp ugt ptr %321, %295
  br i1 %322, label %326, label %323

323:                                              ; preds = %313
  %324 = add i64 %314, 1
  %325 = icmp ult ptr %321, %295
  br i1 %325, label %313, label %326, !llvm.loop !170

326:                                              ; preds = %323, %313, %310, %306, %288
  %327 = phi ptr [ %294, %288 ], [ %294, %306 ], [ %308, %310 ], [ %315, %313 ], [ %321, %323 ]
  %328 = phi i64 [ %293, %288 ], [ %293, %306 ], [ %311, %310 ], [ %314, %313 ], [ %324, %323 ]
  %329 = phi i8 [ %292, %288 ], [ 0, %306 ], [ 1, %310 ], [ 0, %313 ], [ 1, %323 ]
  %330 = phi i64 [ %291, %288 ], [ %307, %306 ], [ %307, %310 ], [ %320, %313 ], [ %320, %323 ]
  %331 = icmp ult i64 %328, %250
  br i1 %331, label %332, label %377

332:                                              ; preds = %326
  %333 = ptrtoint ptr %327 to i64
  %334 = ptrtoint ptr %290 to i64
  %335 = sub i64 %333, %334
  %336 = and i8 %329, 1
  %337 = icmp eq i8 %336, 0
  br i1 %337, label %340, label %338

338:                                              ; preds = %332
  %339 = sub i64 %250, %328
  br label %347

340:                                              ; preds = %332
  %341 = ptrtoint ptr %295 to i64
  %342 = xor i64 %328, -1
  %343 = sub i64 %250, %341
  %344 = add i64 %343, %333
  %345 = add i64 %344, %342
  %346 = add i64 %345, %330
  br label %347

347:                                              ; preds = %340, %338
  %348 = phi i64 [ %339, %338 ], [ %346, %340 ]
  %349 = load i32, ptr %10, align 4, !tbaa !16
  %350 = and i32 %349, 268435456
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %355, label %352

352:                                              ; preds = %347
  %353 = add i64 %289, %286
  %354 = add i64 %353, %348
  br label %362

355:                                              ; preds = %347
  %356 = load ptr, ptr %0, align 8, !tbaa !26
  %357 = getelementptr inbounds %struct.xpv, ptr %356, i64 0, i32 3
  %358 = load i64, ptr %357, align 8, !tbaa !17
  %359 = add i64 %289, %286
  %360 = add i64 %359, %348
  %361 = icmp ult i64 %358, %360
  br i1 %361, label %362, label %365

362:                                              ; preds = %355, %352
  %363 = phi i64 [ %354, %352 ], [ %360, %355 ]
  %364 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %363)
  br label %367

365:                                              ; preds = %355
  %366 = load ptr, ptr %287, align 8, !tbaa !17
  br label %367

367:                                              ; preds = %365, %362
  %368 = phi ptr [ %364, %362 ], [ %366, %365 ]
  %369 = getelementptr inbounds i8, ptr %368, i64 %274
  %370 = getelementptr inbounds i8, ptr %369, i64 %289
  %371 = call i64 @Perl_PerlIO_read(ptr noundef %1, ptr noundef %370, i64 noundef %348) #17
  %372 = icmp slt i64 %371, 1
  br i1 %372, label %377, label %373

373:                                              ; preds = %367
  %374 = add nsw i64 %371, %289
  %375 = getelementptr inbounds i8, ptr %369, i64 %374
  %376 = getelementptr inbounds i8, ptr %369, i64 %335
  br label %288

377:                                              ; preds = %367, %326, %273
  %378 = phi ptr [ %276, %273 ], [ %369, %367 ], [ %290, %326 ]
  %379 = phi i64 [ %277, %273 ], [ %289, %326 ], [ %289, %367 ]
  %380 = call i64 @llvm.smax.i64(i64 %379, i64 0)
  %381 = add nsw i64 %380, %274
  %382 = load ptr, ptr %0, align 8, !tbaa !26
  %383 = getelementptr inbounds %struct.xpv, ptr %382, i64 0, i32 2
  store i64 %381, ptr %383, align 8, !tbaa !57
  %384 = getelementptr inbounds i8, ptr %378, i64 %380
  store i8 0, ptr %384, align 1, !tbaa !17
  %385 = load ptr, ptr %0, align 8, !tbaa !26
  %386 = getelementptr inbounds %struct.xpv, ptr %385, i64 0, i32 2
  %387 = load i64, ptr %386, align 8, !tbaa !57
  %388 = icmp eq i64 %387, %274
  br i1 %388, label %732, label %729

389:                                              ; preds = %233, %212
  %390 = phi i32 [ %235, %233 ], [ %165, %212 ]
  %391 = phi ptr [ %230, %233 ], [ %163, %212 ]
  %392 = and i32 %390, 1024
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %399, label %394

394:                                              ; preds = %389
  %395 = load ptr, ptr %391, align 8, !tbaa !26
  %396 = getelementptr inbounds %struct.xpv, ptr %395, i64 0, i32 2
  %397 = load i64, ptr %396, align 8, !tbaa !57
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %447, label %399

399:                                              ; preds = %394, %389
  %400 = call i32 @PerlIO_isutf8(ptr noundef %1) #17
  %401 = icmp eq i32 %400, 0
  %402 = load ptr, ptr @PL_rs, align 8, !tbaa !9
  %403 = getelementptr inbounds %struct.sv, ptr %402, i64 0, i32 2
  %404 = load i32, ptr %403, align 4, !tbaa !16
  br i1 %401, label %416, label %405

405:                                              ; preds = %399
  %406 = and i32 %404, 538969088
  %407 = icmp eq i32 %406, 536871936
  br i1 %407, label %408, label %414

408:                                              ; preds = %405
  %409 = load ptr, ptr %402, align 8, !tbaa !26
  %410 = getelementptr inbounds %struct.xpv, ptr %409, i64 0, i32 2
  %411 = load i64, ptr %410, align 8, !tbaa !57
  store i64 %411, ptr %7, align 8, !tbaa !60
  %412 = getelementptr inbounds %struct.sv, ptr %402, i64 0, i32 3
  %413 = load ptr, ptr %412, align 8, !tbaa !17
  br label %439

414:                                              ; preds = %405
  %415 = call ptr @Perl_sv_2pvutf8(ptr noundef nonnull %402, ptr noundef nonnull %7)
  br label %436

416:                                              ; preds = %399
  %417 = and i32 %404, 536870912
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %422, label %419

419:                                              ; preds = %416
  %420 = call zeroext i1 @Perl_sv_utf8_downgrade(ptr noundef nonnull %402, i1 noundef zeroext true)
  br i1 %420, label %422, label %421

421:                                              ; preds = %419
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.40) #17
  br label %422

422:                                              ; preds = %419, %421, %416
  %423 = load ptr, ptr @PL_rs, align 8, !tbaa !9
  %424 = getelementptr inbounds %struct.sv, ptr %423, i64 0, i32 2
  %425 = load i32, ptr %424, align 4, !tbaa !16
  %426 = and i32 %425, 2098176
  %427 = icmp eq i32 %426, 1024
  br i1 %427, label %428, label %434

428:                                              ; preds = %422
  %429 = load ptr, ptr %423, align 8, !tbaa !26
  %430 = getelementptr inbounds %struct.xpv, ptr %429, i64 0, i32 2
  %431 = load i64, ptr %430, align 8, !tbaa !57
  store i64 %431, ptr %7, align 8, !tbaa !60
  %432 = getelementptr inbounds %struct.sv, ptr %423, i64 0, i32 3
  %433 = load ptr, ptr %432, align 8, !tbaa !17
  br label %439

434:                                              ; preds = %422
  %435 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %423, ptr noundef nonnull %7, i32 noundef 34)
  br label %436

436:                                              ; preds = %414, %434
  %437 = phi ptr [ %435, %434 ], [ %415, %414 ]
  %438 = load i64, ptr %7, align 8, !tbaa !60
  br label %439

439:                                              ; preds = %436, %428, %408
  %440 = phi i64 [ %438, %436 ], [ %431, %428 ], [ %411, %408 ]
  %441 = phi ptr [ %437, %436 ], [ %433, %428 ], [ %413, %408 ]
  %442 = icmp eq i64 %440, 0
  br i1 %442, label %455, label %443

443:                                              ; preds = %439
  %444 = add i64 %440, -1
  %445 = getelementptr inbounds i8, ptr %441, i64 %444
  %446 = load i8, ptr %445, align 1, !tbaa !17
  br label %455

447:                                              ; preds = %394
  store i64 2, ptr %7, align 8, !tbaa !60
  br label %448

448:                                              ; preds = %447, %451
  %449 = call i32 @Perl_PerlIO_eof(ptr noundef %1) #17
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %451, label %732

451:                                              ; preds = %448
  %452 = call i32 @PerlIO_getc(ptr noundef %1) #17
  switch i32 %452, label %453 [
    i32 10, label %448
    i32 -1, label %732
  ]

453:                                              ; preds = %451
  %454 = call i32 @PerlIO_ungetc(ptr noundef %1, i32 noundef %452) #17
  br label %455

455:                                              ; preds = %211, %439, %161, %443, %453
  %456 = phi i8 [ 10, %453 ], [ %446, %443 ], [ 10, %161 ], [ 0, %439 ], [ 0, %211 ]
  %457 = phi i1 [ true, %453 ], [ false, %443 ], [ false, %161 ], [ false, %439 ], [ false, %211 ]
  %458 = phi ptr [ @.str.39, %453 ], [ %441, %443 ], [ @.str.38, %161 ], [ %441, %439 ], [ null, %211 ]
  %459 = phi i32 [ %452, %453 ], [ 0, %443 ], [ 0, %161 ], [ 0, %439 ], [ 0, %211 ]
  %460 = call i32 @PerlIO_fast_gets(ptr noundef %1) #17
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %646, label %462

462:                                              ; preds = %455
  %463 = call i64 @Perl_PerlIO_get_cnt(ptr noundef %1) #17
  %464 = load ptr, ptr %0, align 8, !tbaa !26
  %465 = getelementptr inbounds %struct.xpv, ptr %464, i64 0, i32 3
  %466 = load i64, ptr %465, align 8, !tbaa !17
  %467 = trunc i64 %466 to i32
  %468 = sub i32 %467, %152
  %469 = sext i32 %468 to i64
  %470 = add nsw i64 %463, 1
  %471 = icmp slt i64 %470, %469
  br i1 %471, label %501, label %472

472:                                              ; preds = %462
  %473 = load i64, ptr %7, align 8, !tbaa !60
  %474 = icmp ne i64 %473, 0
  %475 = icmp sgt i64 %463, 80
  %476 = and i1 %475, %474
  %477 = icmp slt i32 %152, %467
  %478 = and i1 %477, %476
  br i1 %478, label %479, label %486

479:                                              ; preds = %472
  %480 = sub i64 %463, %466
  %481 = trunc i64 %480 to i32
  %482 = add nsw i32 %152, 1
  %483 = add i32 %482, %481
  %484 = sext i32 %483 to i64
  %485 = sub nsw i64 %463, %484
  br label %501

486:                                              ; preds = %472
  %487 = load i32, ptr %10, align 4, !tbaa !16
  %488 = and i32 %487, 268435456
  %489 = icmp eq i32 %488, 0
  %490 = sext i32 %152 to i64
  br i1 %489, label %491, label %496

491:                                              ; preds = %486
  %492 = icmp slt i64 %463, 1
  %493 = select i1 %492, i64 2, i64 %470
  %494 = add nsw i64 %493, %490
  %495 = icmp ult i64 %466, %494
  br i1 %495, label %496, label %501

496:                                              ; preds = %486, %491
  %497 = icmp slt i64 %463, 1
  %498 = select i1 %497, i64 2, i64 %470
  %499 = add nsw i64 %498, %490
  %500 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %499)
  br label %501

501:                                              ; preds = %462, %491, %479, %496
  %502 = phi i64 [ %485, %479 ], [ %463, %496 ], [ %463, %491 ], [ %463, %462 ]
  %503 = phi i32 [ %483, %479 ], [ 0, %496 ], [ 0, %491 ], [ 0, %462 ]
  %504 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %505 = load ptr, ptr %504, align 8, !tbaa !17
  %506 = sext i32 %152 to i64
  %507 = getelementptr inbounds i8, ptr %505, i64 %506
  %508 = call ptr @Perl_PerlIO_get_ptr(ptr noundef %1) #17
  %509 = sext i8 %456 to i32
  %510 = add nsw i64 %506, 2
  br label %511

511:                                              ; preds = %564, %501
  %512 = phi ptr [ %566, %564 ], [ %507, %501 ]
  %513 = phi i64 [ %546, %564 ], [ %502, %501 ]
  %514 = phi i32 [ %521, %564 ], [ %459, %501 ]
  %515 = phi ptr [ %544, %564 ], [ %508, %501 ]
  %516 = phi i32 [ 0, %564 ], [ %503, %501 ]
  %517 = icmp eq i32 %516, 0
  br label %518

518:                                              ; preds = %608, %511
  %519 = phi ptr [ %512, %511 ], [ %609, %608 ]
  %520 = phi i64 [ %513, %511 ], [ %610, %608 ]
  %521 = phi i32 [ %514, %511 ], [ %611, %608 ]
  %522 = phi ptr [ %515, %511 ], [ %612, %608 ]
  %523 = icmp sgt i64 %520, 0
  br i1 %523, label %524, label %541

524:                                              ; preds = %518
  %525 = load i64, ptr %7, align 8, !tbaa !60
  %526 = icmp eq i64 %525, 0
  br i1 %526, label %538, label %527

527:                                              ; preds = %524, %532
  %528 = phi ptr [ %536, %532 ], [ %519, %524 ]
  %529 = phi i64 [ %533, %532 ], [ %520, %524 ]
  %530 = phi ptr [ %534, %532 ], [ %522, %524 ]
  %531 = icmp sgt i64 %529, 0
  br i1 %531, label %532, label %541

532:                                              ; preds = %527
  %533 = add nsw i64 %529, -1
  %534 = getelementptr inbounds i8, ptr %530, i64 1
  %535 = load i8, ptr %530, align 1, !tbaa !17
  %536 = getelementptr inbounds i8, ptr %528, i64 1
  store i8 %535, ptr %528, align 1, !tbaa !17
  %537 = icmp eq i8 %535, %456
  br i1 %537, label %613, label %527, !llvm.loop !171

538:                                              ; preds = %524
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %519, ptr align 1 %522, i64 %520, i1 false)
  %539 = getelementptr inbounds i8, ptr %519, i64 %520
  %540 = getelementptr inbounds i8, ptr %522, i64 %520
  br label %567

541:                                              ; preds = %527, %518
  %542 = phi ptr [ %519, %518 ], [ %528, %527 ]
  %543 = phi i64 [ %520, %518 ], [ 0, %527 ]
  %544 = phi ptr [ %522, %518 ], [ %530, %527 ]
  br i1 %517, label %567, label %545

545:                                              ; preds = %541
  %546 = sext i32 %516 to i64
  %547 = load ptr, ptr %504, align 8, !tbaa !17
  %548 = ptrtoint ptr %542 to i64
  %549 = ptrtoint ptr %547 to i64
  %550 = sub i64 %548, %549
  %551 = load ptr, ptr %0, align 8, !tbaa !26
  %552 = getelementptr inbounds %struct.xpv, ptr %551, i64 0, i32 2
  store i64 %550, ptr %552, align 8, !tbaa !57
  %553 = load i32, ptr %10, align 4, !tbaa !16
  %554 = and i32 %553, 268435456
  %555 = icmp ne i32 %554, 0
  %556 = getelementptr inbounds %struct.xpv, ptr %551, i64 0, i32 3
  %557 = load i64, ptr %556, align 8, !tbaa !17
  %558 = add nsw i64 %510, %546
  %559 = add i64 %558, %557
  %560 = icmp ult i64 %557, %559
  %561 = select i1 %555, i1 true, i1 %560
  br i1 %561, label %562, label %564

562:                                              ; preds = %545
  %563 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %559)
  br label %564

564:                                              ; preds = %545, %562
  %565 = load ptr, ptr %504, align 8, !tbaa !17
  %566 = getelementptr inbounds i8, ptr %565, i64 %550
  br label %511

567:                                              ; preds = %541, %538
  %568 = phi ptr [ %542, %541 ], [ %539, %538 ]
  %569 = phi i64 [ %543, %541 ], [ 0, %538 ]
  %570 = phi ptr [ %544, %541 ], [ %540, %538 ]
  call void @Perl_PerlIO_set_ptrcnt(ptr noundef %1, ptr noundef %570, i64 noundef %569) #17
  %571 = call i32 @PerlIO_getc(ptr noundef %1) #17
  %572 = call i64 @Perl_PerlIO_get_cnt(ptr noundef %1) #17
  %573 = call ptr @Perl_PerlIO_get_ptr(ptr noundef %1) #17
  %574 = icmp eq i32 %571, -1
  br i1 %574, label %633, label %575

575:                                              ; preds = %567
  %576 = load ptr, ptr %504, align 8, !tbaa !17
  %577 = ptrtoint ptr %568 to i64
  %578 = ptrtoint ptr %576 to i64
  %579 = sub i64 %577, %578
  %580 = load ptr, ptr %0, align 8, !tbaa !26
  %581 = getelementptr inbounds %struct.xpv, ptr %580, i64 0, i32 2
  store i64 %579, ptr %581, align 8, !tbaa !57
  %582 = load i32, ptr %10, align 4, !tbaa !16
  %583 = and i32 %582, 268435456
  %584 = icmp eq i32 %583, 0
  br i1 %584, label %588, label %585

585:                                              ; preds = %575
  %586 = add i64 %572, 2
  %587 = add i64 %586, %579
  br label %594

588:                                              ; preds = %575
  %589 = getelementptr inbounds %struct.xpv, ptr %580, i64 0, i32 3
  %590 = load i64, ptr %589, align 8, !tbaa !17
  %591 = add i64 %572, 2
  %592 = add i64 %591, %579
  %593 = icmp ult i64 %590, %592
  br i1 %593, label %594, label %597

594:                                              ; preds = %585, %588
  %595 = phi i64 [ %587, %585 ], [ %592, %588 ]
  %596 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %595)
  br label %597

597:                                              ; preds = %588, %594
  %598 = load ptr, ptr %504, align 8, !tbaa !17
  %599 = getelementptr inbounds i8, ptr %598, i64 %579
  %600 = trunc i32 %571 to i8
  %601 = getelementptr inbounds i8, ptr %599, i64 1
  store i8 %600, ptr %599, align 1, !tbaa !17
  %602 = load i64, ptr %7, align 8, !tbaa !60
  %603 = icmp eq i64 %602, 0
  br i1 %603, label %608, label %604

604:                                              ; preds = %597
  %605 = shl i32 %571, 24
  %606 = ashr exact i32 %605, 24
  %607 = icmp eq i32 %606, %509
  br i1 %607, label %615, label %608

608:                                              ; preds = %604, %597, %628, %622
  %609 = phi ptr [ %601, %604 ], [ %601, %597 ], [ %617, %628 ], [ %617, %622 ]
  %610 = phi i64 [ %572, %604 ], [ %572, %597 ], [ %618, %628 ], [ %618, %622 ]
  %611 = phi i32 [ %571, %604 ], [ %571, %597 ], [ %619, %628 ], [ %619, %622 ]
  %612 = phi ptr [ %573, %604 ], [ %573, %597 ], [ %620, %628 ], [ %620, %622 ]
  br label %518

613:                                              ; preds = %532
  %614 = load i64, ptr %7, align 8, !tbaa !60
  br label %615

615:                                              ; preds = %613, %604
  %616 = phi i64 [ %602, %604 ], [ %614, %613 ]
  %617 = phi ptr [ %601, %604 ], [ %536, %613 ]
  %618 = phi i64 [ %572, %604 ], [ %533, %613 ]
  %619 = phi i32 [ %571, %604 ], [ %521, %613 ]
  %620 = phi ptr [ %573, %604 ], [ %534, %613 ]
  %621 = icmp ugt i64 %616, 1
  br i1 %621, label %622, label %628

622:                                              ; preds = %615
  %623 = load ptr, ptr %504, align 8, !tbaa !17
  %624 = ptrtoint ptr %617 to i64
  %625 = ptrtoint ptr %623 to i64
  %626 = sub i64 %624, %625
  %627 = icmp ult i64 %626, %616
  br i1 %627, label %608, label %628

628:                                              ; preds = %622, %615
  %629 = sub i64 0, %616
  %630 = getelementptr inbounds i8, ptr %617, i64 %629
  %631 = call i32 @bcmp(ptr nonnull %630, ptr %458, i64 %616)
  %632 = icmp eq i32 %631, 0
  br i1 %632, label %633, label %608

633:                                              ; preds = %628, %567
  %634 = phi ptr [ %617, %628 ], [ %568, %567 ]
  %635 = phi i64 [ %618, %628 ], [ %572, %567 ]
  %636 = phi i32 [ %619, %628 ], [ -1, %567 ]
  %637 = phi ptr [ %620, %628 ], [ %573, %567 ]
  %638 = sext i32 %516 to i64
  %639 = add nsw i64 %635, %638
  call void @Perl_PerlIO_set_ptrcnt(ptr noundef %1, ptr noundef %637, i64 noundef %639) #17
  store i8 0, ptr %634, align 1, !tbaa !17
  %640 = load ptr, ptr %504, align 8, !tbaa !17
  %641 = ptrtoint ptr %634 to i64
  %642 = ptrtoint ptr %640 to i64
  %643 = sub i64 %641, %642
  %644 = load ptr, ptr %0, align 8, !tbaa !26
  %645 = getelementptr inbounds %struct.xpv, ptr %644, i64 0, i32 2
  store i64 %643, ptr %645, align 8, !tbaa !57
  br label %713

646:                                              ; preds = %455
  call void @llvm.lifetime.start.p0(i64 8192, ptr nonnull %9) #17
  %647 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %648 = sext i8 %456 to i32
  %649 = ptrtoint ptr %9 to i64
  br label %650

650:                                              ; preds = %710, %646
  %651 = phi i32 [ %152, %646 ], [ -1, %710 ]
  %652 = load i64, ptr %7, align 8, !tbaa !60
  %653 = icmp eq i64 %652, 0
  br i1 %653, label %673, label %654

654:                                              ; preds = %650, %659
  %655 = phi i64 [ %661, %659 ], [ 0, %650 ]
  %656 = getelementptr inbounds i8, ptr %9, i64 %655
  %657 = call i32 @PerlIO_getc(ptr noundef %1) #17
  %658 = icmp eq i32 %657, -1
  br i1 %658, label %669, label %659

659:                                              ; preds = %654
  %660 = trunc i32 %657 to i8
  %661 = add nuw nsw i64 %655, 1
  store i8 %660, ptr %656, align 1, !tbaa !17
  %662 = shl i32 %657, 24
  %663 = ashr exact i32 %662, 24
  %664 = icmp ne i32 %663, %648
  %665 = icmp ult i64 %655, 8191
  %666 = select i1 %664, i1 %665, i1 false
  br i1 %666, label %654, label %667, !llvm.loop !172

667:                                              ; preds = %659
  %668 = getelementptr inbounds i8, ptr %9, i64 %661
  br label %669

669:                                              ; preds = %654, %667
  %670 = phi ptr [ %668, %667 ], [ %656, %654 ]
  %671 = ptrtoint ptr %670 to i64
  %672 = sub i64 %671, %649
  br label %681

673:                                              ; preds = %650
  %674 = call i64 @Perl_PerlIO_read(ptr noundef %1, ptr noundef nonnull %9, i64 noundef 8192) #17
  %675 = icmp sgt i64 %674, 0
  br i1 %675, label %676, label %681

676:                                              ; preds = %673
  %677 = add nsw i64 %674, -1
  %678 = getelementptr inbounds [8192 x i8], ptr %9, i64 0, i64 %677
  %679 = load i8, ptr %678, align 1, !tbaa !17
  %680 = zext i8 %679 to i32
  br label %681

681:                                              ; preds = %673, %676, %669
  %682 = phi i64 [ %672, %669 ], [ %674, %676 ], [ %674, %673 ]
  %683 = phi i32 [ %657, %669 ], [ %680, %676 ], [ -1, %673 ]
  %684 = call i64 @llvm.smax.i64(i64 %682, i64 0)
  %685 = icmp eq i32 %651, 0
  br i1 %685, label %687, label %686

686:                                              ; preds = %681
  call void @Perl_sv_catpvn_flags(ptr noundef %0, ptr noundef nonnull %9, i64 noundef %684, i32 noundef 0)
  br label %688

687:                                              ; preds = %681
  call void @Perl_sv_setpvn(ptr noundef %0, ptr noundef nonnull %9, i64 noundef %684)
  br label %688

688:                                              ; preds = %687, %686
  %689 = icmp eq i32 %683, -1
  br i1 %689, label %711, label %690

690:                                              ; preds = %688
  %691 = load i64, ptr %7, align 8, !tbaa !60
  %692 = icmp eq i64 %691, 0
  br i1 %692, label %705, label %693

693:                                              ; preds = %690
  %694 = load ptr, ptr %0, align 8, !tbaa !26
  %695 = getelementptr inbounds %struct.xpv, ptr %694, i64 0, i32 2
  %696 = load i64, ptr %695, align 8, !tbaa !57
  %697 = icmp ult i64 %696, %691
  br i1 %697, label %705, label %698

698:                                              ; preds = %693
  %699 = load ptr, ptr %647, align 8, !tbaa !17
  %700 = getelementptr inbounds i8, ptr %699, i64 %696
  %701 = sub i64 0, %691
  %702 = getelementptr inbounds i8, ptr %700, i64 %701
  %703 = call i32 @bcmp(ptr nonnull %702, ptr %458, i64 %691)
  %704 = icmp eq i32 %703, 0
  br i1 %704, label %711, label %705

705:                                              ; preds = %698, %693, %690
  %706 = icmp ult i64 %684, 8192
  br i1 %706, label %707, label %710

707:                                              ; preds = %705
  %708 = call i32 @Perl_PerlIO_eof(ptr noundef %1) #17
  %709 = icmp eq i32 %708, 0
  br i1 %709, label %710, label %711

710:                                              ; preds = %707, %705
  br label %650

711:                                              ; preds = %707, %698, %688
  %712 = phi i32 [ -1, %707 ], [ %651, %698 ], [ %651, %688 ]
  call void @llvm.lifetime.end.p0(i64 8192, ptr nonnull %9) #17
  br label %713

713:                                              ; preds = %711, %633
  %714 = phi i32 [ %712, %711 ], [ %152, %633 ]
  %715 = phi i32 [ %683, %711 ], [ %636, %633 ]
  %716 = icmp ne i32 %715, -1
  %717 = select i1 %457, i1 %716, i1 false
  br i1 %717, label %718, label %723

718:                                              ; preds = %713, %718
  %719 = call i32 @PerlIO_getc(ptr noundef %1) #17
  %720 = icmp eq i32 %719, 10
  br i1 %720, label %718, label %721, !llvm.loop !173

721:                                              ; preds = %718
  %722 = call i32 @PerlIO_ungetc(ptr noundef %1, i32 noundef %719) #17
  br label %723

723:                                              ; preds = %721, %713
  %724 = load ptr, ptr %0, align 8, !tbaa !26
  %725 = getelementptr inbounds %struct.xpv, ptr %724, i64 0, i32 2
  %726 = load i64, ptr %725, align 8, !tbaa !57
  %727 = sext i32 %714 to i64
  %728 = icmp eq i64 %726, %727
  br i1 %728, label %732, label %729

729:                                              ; preds = %723, %377, %127
  %730 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %731 = load ptr, ptr %730, align 8, !tbaa !17
  br label %732

732:                                              ; preds = %451, %448, %729, %377, %127, %723
  %733 = phi ptr [ null, %723 ], [ null, %127 ], [ null, %377 ], [ %731, %729 ], [ null, %448 ], [ null, %451 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #17
  ret ptr %733
}

declare i32 @PerlIO_isutf8(ptr noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @fstat64(i32 noundef, ptr nocapture noundef) local_unnamed_addr #9

declare i32 @Perl_PerlIO_fileno(ptr noundef) local_unnamed_addr #3

declare i64 @Perl_PerlIO_tell(ptr noundef) local_unnamed_addr #3

declare i32 @Perl_PerlIO_eof(ptr noundef) local_unnamed_addr #3

declare i32 @PerlIO_getc(ptr noundef) local_unnamed_addr #3

declare i32 @PerlIO_ungetc(ptr noundef, i32 noundef) local_unnamed_addr #3

declare i32 @PerlIO_fast_gets(ptr noundef) local_unnamed_addr #3

declare i64 @Perl_PerlIO_get_cnt(ptr noundef) local_unnamed_addr #3

declare ptr @Perl_PerlIO_get_ptr(ptr noundef) local_unnamed_addr #3

declare void @Perl_PerlIO_set_ptrcnt(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #3

declare i64 @Perl_PerlIO_read(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_inc(ptr noundef %0) local_unnamed_addr #1 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 2097152
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = tail call i32 @Perl_mg_get(ptr noundef nonnull %0) #17
  br label %10

10:                                               ; preds = %3, %8
  tail call void @Perl_sv_inc_nomg(ptr noundef nonnull %0)
  br label %11

11:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_inc_nomg(ptr noundef %0) local_unnamed_addr #1 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %364, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 427886592
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %40, label %8

8:                                                ; preds = %3
  %9 = and i32 %5, 134283264
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %8
  tail call void @Perl_croak_no_modify() #17
  %12 = load i32, ptr %4, align 4, !tbaa !16
  br label %13

13:                                               ; preds = %11, %8
  %14 = phi i32 [ %12, %11 ], [ %5, %8 ]
  %15 = and i32 %14, 2048
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 2
  %21 = load i32, ptr %20, align 4, !tbaa !16
  %22 = and i32 %21, 1048576
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %36, label %24

24:                                               ; preds = %17
  %25 = load ptr, ptr %19, align 8, !tbaa !26
  %26 = load ptr, ptr %25, align 8, !tbaa !50
  %27 = getelementptr inbounds %struct.hv, ptr %26, i64 0, i32 2
  %28 = load i32, ptr %27, align 4, !tbaa !64
  %29 = and i32 %28, 268435456
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %24
  %32 = tail call ptr @Perl_amagic_call(ptr noundef nonnull %0, ptr noundef nonnull @PL_sv_undef, i32 noundef 6, i32 noundef 9) #17
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %364

34:                                               ; preds = %31
  %35 = load ptr, ptr %18, align 8, !tbaa !17
  br label %36

36:                                               ; preds = %34, %24, %17
  %37 = phi ptr [ %35, %34 ], [ %19, %24 ], [ %19, %17 ]
  %38 = ptrtoint ptr %37 to i64
  tail call void @Perl_sv_unref_flags(ptr noundef nonnull %0, i32 noundef 0)
  tail call void @Perl_sv_setiv(ptr noundef nonnull %0, i64 noundef %38)
  br label %40

39:                                               ; preds = %13
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %0, i32 noundef 0)
  br label %40

40:                                               ; preds = %36, %39, %3
  %41 = load i32, ptr %4, align 4, !tbaa !16
  %42 = and i32 %41, 12288
  %43 = icmp eq i32 %42, 8192
  br i1 %43, label %44, label %51

44:                                               ; preds = %40
  %45 = and i32 %41, 2097408
  %46 = icmp eq i32 %45, 256
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %0, i32 noundef 2)
  %49 = load i32, ptr %4, align 4, !tbaa !16
  %50 = and i32 %49, 12288
  br label %51

51:                                               ; preds = %47, %44, %40
  %52 = phi i32 [ %42, %40 ], [ 8192, %44 ], [ %50, %47 ]
  %53 = phi i32 [ %41, %40 ], [ %41, %44 ], [ %49, %47 ]
  %54 = and i32 %53, 256
  %55 = icmp ne i32 %54, 0
  %56 = icmp eq i32 %52, 4096
  %57 = or i1 %55, %56
  br i1 %57, label %58, label %148

58:                                               ; preds = %51, %278
  %59 = phi i32 [ %280, %278 ], [ %53, %51 ]
  %60 = icmp sgt i32 %59, -1
  %61 = load ptr, ptr %0, align 8, !tbaa !26
  br i1 %60, label %103, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.xpvuv, ptr %61, i64 0, i32 4
  %64 = load i64, ptr %63, align 8, !tbaa !17
  %65 = icmp eq i64 %64, -1
  br i1 %65, label %66, label %67

66:                                               ; preds = %62
  tail call void @Perl_sv_setnv(ptr noundef nonnull %0, double noundef nofpclass(nan inf) 0x43F0000000000000)
  br label %98

67:                                               ; preds = %62
  %68 = and i32 %59, -536936193
  store i32 %68, ptr %4, align 4, !tbaa !16
  %69 = and i32 %59, 33554432
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %95, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %73 = load ptr, ptr %72, align 8, !tbaa !17
  %74 = getelementptr inbounds i8, ptr %73, i64 -1
  %75 = load i8, ptr %74, align 1, !tbaa !17
  %76 = zext i8 %75 to i64
  %77 = icmp eq i8 %75, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %71
  %79 = getelementptr inbounds i8, ptr %73, i64 -9
  %80 = load i64, ptr %79, align 1
  br label %81

81:                                               ; preds = %71, %78
  %82 = phi i64 [ %76, %71 ], [ %80, %78 ]
  %83 = getelementptr inbounds %struct.xpv, ptr %61, i64 0, i32 3
  %84 = load i64, ptr %83, align 8, !tbaa !17
  %85 = add i64 %84, %82
  store i64 %85, ptr %83, align 8, !tbaa !17
  %86 = load ptr, ptr %72, align 8, !tbaa !17
  %87 = sub i64 0, %82
  %88 = getelementptr inbounds i8, ptr %86, i64 %87
  store ptr %88, ptr %72, align 8, !tbaa !17
  %89 = load ptr, ptr %0, align 8, !tbaa !26
  %90 = getelementptr inbounds %struct.xpv, ptr %89, i64 0, i32 2
  %91 = load i64, ptr %90, align 8, !tbaa !57
  %92 = add i64 %91, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %88, ptr nonnull align 1 %73, i64 %92, i1 false)
  %93 = load i32, ptr %4, align 4, !tbaa !16
  %94 = and i32 %93, -33554433
  br label %95

95:                                               ; preds = %81, %67
  %96 = phi i32 [ %94, %81 ], [ %68, %67 ]
  %97 = or i32 %96, 4352
  store i32 %97, ptr %4, align 4, !tbaa !16
  br label %98

98:                                               ; preds = %66, %95
  %99 = load ptr, ptr %0, align 8, !tbaa !26
  %100 = getelementptr inbounds %struct.xpvuv, ptr %99, i64 0, i32 4
  %101 = load i64, ptr %100, align 8, !tbaa !17
  %102 = add i64 %101, 1
  store i64 %102, ptr %100, align 8, !tbaa !17
  br label %364

103:                                              ; preds = %58
  %104 = getelementptr inbounds %struct.xpviv, ptr %61, i64 0, i32 4
  %105 = load i64, ptr %104, align 8, !tbaa !17
  %106 = icmp eq i64 %105, 9223372036854775807
  br i1 %106, label %107, label %112

107:                                              ; preds = %103
  tail call void @Perl_sv_setiv(ptr noundef nonnull %0, i64 noundef 0)
  %108 = load i32, ptr %4, align 4, !tbaa !16
  %109 = or i32 %108, -2147483648
  store i32 %109, ptr %4, align 4, !tbaa !16
  %110 = load ptr, ptr %0, align 8, !tbaa !26
  %111 = getelementptr inbounds %struct.xpvuv, ptr %110, i64 0, i32 4
  store i64 -9223372036854775808, ptr %111, align 8, !tbaa !17
  br label %364

112:                                              ; preds = %103
  %113 = and i32 %59, 1610547455
  store i32 %113, ptr %4, align 4, !tbaa !16
  %114 = and i32 %59, 33554432
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %141, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %118 = load ptr, ptr %117, align 8, !tbaa !17
  %119 = getelementptr inbounds i8, ptr %118, i64 -1
  %120 = load i8, ptr %119, align 1, !tbaa !17
  %121 = zext i8 %120 to i64
  %122 = icmp eq i8 %120, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %116
  %124 = getelementptr inbounds i8, ptr %118, i64 -9
  %125 = load i64, ptr %124, align 1
  br label %126

126:                                              ; preds = %116, %123
  %127 = phi i64 [ %121, %116 ], [ %125, %123 ]
  %128 = getelementptr inbounds %struct.xpv, ptr %61, i64 0, i32 3
  %129 = load i64, ptr %128, align 8, !tbaa !17
  %130 = add i64 %129, %127
  store i64 %130, ptr %128, align 8, !tbaa !17
  %131 = load ptr, ptr %117, align 8, !tbaa !17
  %132 = sub i64 0, %127
  %133 = getelementptr inbounds i8, ptr %131, i64 %132
  store ptr %133, ptr %117, align 8, !tbaa !17
  %134 = load ptr, ptr %0, align 8, !tbaa !26
  %135 = getelementptr inbounds %struct.xpv, ptr %134, i64 0, i32 2
  %136 = load i64, ptr %135, align 8, !tbaa !57
  %137 = add i64 %136, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %133, ptr nonnull align 1 %118, i64 %137, i1 false)
  %138 = load i32, ptr %4, align 4, !tbaa !16
  %139 = and i32 %138, -33554433
  %140 = load ptr, ptr %0, align 8, !tbaa !26
  br label %141

141:                                              ; preds = %126, %112
  %142 = phi ptr [ %140, %126 ], [ %61, %112 ]
  %143 = phi i32 [ %139, %126 ], [ %113, %112 ]
  %144 = or i32 %143, 4352
  store i32 %144, ptr %4, align 4, !tbaa !16
  %145 = getelementptr inbounds %struct.xpviv, ptr %142, i64 0, i32 4
  %146 = load i64, ptr %145, align 8, !tbaa !17
  %147 = add nsw i64 %146, 1
  store i64 %147, ptr %145, align 8, !tbaa !17
  br label %364

148:                                              ; preds = %51
  %149 = and i32 %53, 8192
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %195, label %151

151:                                              ; preds = %148
  %152 = load ptr, ptr %0, align 8, !tbaa !26
  %153 = getelementptr inbounds %struct.xpvnv, ptr %152, i64 0, i32 5
  %154 = load double, ptr %153, align 8, !tbaa !17
  %155 = tail call zeroext i1 @Perl_isinfnan(double noundef nofpclass(nan inf) %154) #17
  %156 = fcmp fast ult double %154, 0x4340000000000000
  %157 = select i1 %155, i1 true, i1 %156
  br i1 %157, label %159, label %158

158:                                              ; preds = %151
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 46, ptr noundef nonnull @.str.41, double noundef nofpclass(nan inf) %154) #17
  br label %159

159:                                              ; preds = %151, %158
  %160 = load i32, ptr %4, align 4, !tbaa !16
  %161 = and i32 %160, 1610547455
  store i32 %161, ptr %4, align 4, !tbaa !16
  %162 = and i32 %160, 33554432
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %189, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %166 = load ptr, ptr %165, align 8, !tbaa !17
  %167 = getelementptr inbounds i8, ptr %166, i64 -1
  %168 = load i8, ptr %167, align 1, !tbaa !17
  %169 = zext i8 %168 to i64
  %170 = icmp eq i8 %168, 0
  br i1 %170, label %171, label %174

171:                                              ; preds = %164
  %172 = getelementptr inbounds i8, ptr %166, i64 -9
  %173 = load i64, ptr %172, align 1
  br label %174

174:                                              ; preds = %164, %171
  %175 = phi i64 [ %169, %164 ], [ %173, %171 ]
  %176 = load ptr, ptr %0, align 8, !tbaa !26
  %177 = getelementptr inbounds %struct.xpv, ptr %176, i64 0, i32 3
  %178 = load i64, ptr %177, align 8, !tbaa !17
  %179 = add i64 %178, %175
  store i64 %179, ptr %177, align 8, !tbaa !17
  %180 = load ptr, ptr %165, align 8, !tbaa !17
  %181 = sub i64 0, %175
  %182 = getelementptr inbounds i8, ptr %180, i64 %181
  store ptr %182, ptr %165, align 8, !tbaa !17
  %183 = load ptr, ptr %0, align 8, !tbaa !26
  %184 = getelementptr inbounds %struct.xpv, ptr %183, i64 0, i32 2
  %185 = load i64, ptr %184, align 8, !tbaa !57
  %186 = add i64 %185, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %182, ptr nonnull align 1 %166, i64 %186, i1 false)
  %187 = load i32, ptr %4, align 4, !tbaa !16
  %188 = and i32 %187, -33554433
  br label %189

189:                                              ; preds = %174, %159
  %190 = phi i32 [ %188, %174 ], [ %161, %159 ]
  %191 = or i32 %190, 8704
  store i32 %191, ptr %4, align 4, !tbaa !16
  %192 = fadd fast double %154, 1.000000e+00
  %193 = load ptr, ptr %0, align 8, !tbaa !26
  %194 = getelementptr inbounds %struct.xpvnv, ptr %193, i64 0, i32 5
  store double %192, ptr %194, align 8, !tbaa !17
  br label %364

195:                                              ; preds = %148
  %196 = and i32 %53, 16384
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %203, label %198

198:                                              ; preds = %195
  %199 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %200 = load ptr, ptr %199, align 8, !tbaa !17
  %201 = load i8, ptr %200, align 1, !tbaa !17
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %203, label %245

203:                                              ; preds = %198, %195
  %204 = and i32 %53, 255
  %205 = icmp ult i32 %204, 5
  br i1 %205, label %206, label %210

206:                                              ; preds = %203
  %207 = icmp ugt i32 %204, 1
  %208 = select i1 %207, i32 5, i32 1
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef %208)
  %209 = load i32, ptr %4, align 4, !tbaa !16
  br label %210

210:                                              ; preds = %206, %203
  %211 = phi i32 [ %209, %206 ], [ %53, %203 ]
  %212 = and i32 %211, 1610547455
  store i32 %212, ptr %4, align 4, !tbaa !16
  %213 = and i32 %211, 33554432
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %240, label %215

215:                                              ; preds = %210
  %216 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %217 = load ptr, ptr %216, align 8, !tbaa !17
  %218 = getelementptr inbounds i8, ptr %217, i64 -1
  %219 = load i8, ptr %218, align 1, !tbaa !17
  %220 = zext i8 %219 to i64
  %221 = icmp eq i8 %219, 0
  br i1 %221, label %222, label %225

222:                                              ; preds = %215
  %223 = getelementptr inbounds i8, ptr %217, i64 -9
  %224 = load i64, ptr %223, align 1
  br label %225

225:                                              ; preds = %215, %222
  %226 = phi i64 [ %220, %215 ], [ %224, %222 ]
  %227 = load ptr, ptr %0, align 8, !tbaa !26
  %228 = getelementptr inbounds %struct.xpv, ptr %227, i64 0, i32 3
  %229 = load i64, ptr %228, align 8, !tbaa !17
  %230 = add i64 %229, %226
  store i64 %230, ptr %228, align 8, !tbaa !17
  %231 = load ptr, ptr %216, align 8, !tbaa !17
  %232 = sub i64 0, %226
  %233 = getelementptr inbounds i8, ptr %231, i64 %232
  store ptr %233, ptr %216, align 8, !tbaa !17
  %234 = load ptr, ptr %0, align 8, !tbaa !26
  %235 = getelementptr inbounds %struct.xpv, ptr %234, i64 0, i32 2
  %236 = load i64, ptr %235, align 8, !tbaa !57
  %237 = add i64 %236, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %233, ptr nonnull align 1 %217, i64 %237, i1 false)
  %238 = load i32, ptr %4, align 4, !tbaa !16
  %239 = and i32 %238, -33554433
  br label %240

240:                                              ; preds = %225, %210
  %241 = phi i32 [ %239, %225 ], [ %212, %210 ]
  %242 = or i32 %241, 4352
  store i32 %242, ptr %4, align 4, !tbaa !16
  %243 = load ptr, ptr %0, align 8, !tbaa !26
  %244 = getelementptr inbounds %struct.xpviv, ptr %243, i64 0, i32 4
  store i64 1, ptr %244, align 8, !tbaa !17
  br label %364

245:                                              ; preds = %198, %245
  %246 = phi ptr [ %253, %245 ], [ %200, %198 ]
  %247 = load i8, ptr %246, align 1, !tbaa !17
  %248 = zext i8 %247 to i64
  %249 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %248
  %250 = load i32, ptr %249, align 4, !tbaa !25
  %251 = and i32 %250, 16388
  %252 = icmp eq i32 %251, 16388
  %253 = getelementptr inbounds i8, ptr %246, i64 1
  br i1 %252, label %245, label %254, !llvm.loop !174

254:                                              ; preds = %245, %254
  %255 = phi ptr [ %262, %254 ], [ %246, %245 ]
  %256 = load i8, ptr %255, align 1, !tbaa !17
  %257 = zext i8 %256 to i64
  %258 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %257
  %259 = load i32, ptr %258, align 4, !tbaa !25
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = getelementptr inbounds i8, ptr %255, i64 1
  br i1 %261, label %263, label %254, !llvm.loop !175

263:                                              ; preds = %254
  %264 = load ptr, ptr %0, align 8, !tbaa !26
  %265 = getelementptr inbounds %struct.xpv, ptr %264, i64 0, i32 2
  %266 = load i64, ptr %265, align 8, !tbaa !57
  %267 = getelementptr inbounds i8, ptr %200, i64 %266
  %268 = icmp ult ptr %255, %267
  br i1 %268, label %272, label %269

269:                                              ; preds = %263
  %270 = getelementptr inbounds i8, ptr %255, i64 -1
  %271 = icmp ult ptr %270, %200
  br i1 %271, label %318, label %291

272:                                              ; preds = %263
  %273 = tail call i32 @Perl_grok_number_flags(ptr noundef nonnull %200, i64 noundef %266, ptr noundef null, i32 noundef 16) #17
  %274 = icmp ne i32 %273, 0
  %275 = and i32 %273, 16
  %276 = icmp eq i32 %275, 0
  %277 = and i1 %274, %276
  br i1 %277, label %278, label %283

278:                                              ; preds = %272
  %279 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %0, i32 noundef 2)
  %280 = load i32, ptr %4, align 4, !tbaa !16
  %281 = and i32 %280, 256
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %287, label %58

283:                                              ; preds = %272
  br i1 %274, label %287, label %284

284:                                              ; preds = %283
  %285 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 13) #17
  br i1 %285, label %286, label %287

286:                                              ; preds = %284
  tail call fastcc void @S_not_incrementable(ptr noundef nonnull %0)
  br label %287

287:                                              ; preds = %278, %286, %284, %283
  %288 = load ptr, ptr %199, align 8, !tbaa !17
  %289 = tail call fast nofpclass(nan inf) double @Perl_my_atof(ptr noundef %288) #17
  %290 = fadd fast double %289, 1.000000e+00
  tail call void @Perl_sv_setnv(ptr noundef nonnull %0, double noundef nofpclass(nan inf) %290)
  br label %364

291:                                              ; preds = %269, %310
  %292 = phi ptr [ %312, %310 ], [ %270, %269 ]
  %293 = load i8, ptr %292, align 1, !tbaa !17
  %294 = zext i8 %293 to i64
  %295 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %294
  %296 = load i32, ptr %295, align 4, !tbaa !25
  %297 = and i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = add i8 %293, 1
  store i8 %299, ptr %292, align 1, !tbaa !17
  br i1 %298, label %302, label %300

300:                                              ; preds = %291
  %301 = icmp slt i8 %299, 58
  br i1 %301, label %364, label %310

302:                                              ; preds = %291
  %303 = zext i8 %299 to i64
  %304 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %303
  %305 = load i32, ptr %304, align 4, !tbaa !25
  %306 = and i32 %305, 16388
  %307 = icmp eq i32 %306, 16388
  br i1 %307, label %364, label %308

308:                                              ; preds = %302
  %309 = add i8 %293, -25
  br label %310

310:                                              ; preds = %300, %308
  %311 = phi i8 [ %309, %308 ], [ 48, %300 ]
  store i8 %311, ptr %292, align 1, !tbaa !17
  %312 = getelementptr inbounds i8, ptr %292, i64 -1
  %313 = load ptr, ptr %199, align 8, !tbaa !17
  %314 = icmp ult ptr %312, %313
  br i1 %314, label %315, label %291, !llvm.loop !176

315:                                              ; preds = %310
  %316 = load i32, ptr %4, align 4, !tbaa !16
  %317 = load ptr, ptr %0, align 8, !tbaa !26
  br label %318

318:                                              ; preds = %315, %269
  %319 = phi ptr [ %317, %315 ], [ %264, %269 ]
  %320 = phi i32 [ %316, %315 ], [ %53, %269 ]
  %321 = and i32 %320, 268435456
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %327, label %323

323:                                              ; preds = %318
  %324 = getelementptr inbounds %struct.xpv, ptr %319, i64 0, i32 2
  %325 = load i64, ptr %324, align 8, !tbaa !57
  %326 = add i64 %325, 2
  br label %334

327:                                              ; preds = %318
  %328 = getelementptr inbounds %struct.xpv, ptr %319, i64 0, i32 3
  %329 = load i64, ptr %328, align 8, !tbaa !17
  %330 = getelementptr inbounds %struct.xpv, ptr %319, i64 0, i32 2
  %331 = load i64, ptr %330, align 8, !tbaa !57
  %332 = add i64 %331, 2
  %333 = icmp ult i64 %329, %332
  br i1 %333, label %334, label %340

334:                                              ; preds = %323, %327
  %335 = phi i64 [ %326, %323 ], [ %332, %327 ]
  %336 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %335)
  %337 = load ptr, ptr %0, align 8, !tbaa !26
  %338 = getelementptr inbounds %struct.xpv, ptr %337, i64 0, i32 2
  %339 = load i64, ptr %338, align 8, !tbaa !57
  br label %340

340:                                              ; preds = %327, %334
  %341 = phi i64 [ %331, %327 ], [ %339, %334 ]
  %342 = phi ptr [ %319, %327 ], [ %337, %334 ]
  %343 = getelementptr inbounds %struct.xpv, ptr %342, i64 0, i32 2
  %344 = add i64 %341, 1
  store i64 %344, ptr %343, align 8, !tbaa !57
  %345 = load ptr, ptr %199, align 8, !tbaa !17
  %346 = getelementptr inbounds i8, ptr %345, i64 %344
  %347 = icmp ult i64 %341, 9223372036854775807
  br i1 %347, label %348, label %354

348:                                              ; preds = %340, %348
  %349 = phi ptr [ %350, %348 ], [ %346, %340 ]
  %350 = getelementptr inbounds i8, ptr %349, i64 -1
  %351 = load i8, ptr %350, align 1, !tbaa !17
  store i8 %351, ptr %349, align 1, !tbaa !17
  %352 = load ptr, ptr %199, align 8, !tbaa !17
  %353 = icmp ugt ptr %350, %352
  br i1 %353, label %348, label %354, !llvm.loop !177

354:                                              ; preds = %348, %340
  %355 = phi ptr [ %346, %340 ], [ %350, %348 ]
  %356 = getelementptr inbounds i8, ptr %355, i64 1
  %357 = load i8, ptr %356, align 1, !tbaa !17
  %358 = zext i8 %357 to i64
  %359 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %358
  %360 = load i32, ptr %359, align 4, !tbaa !25
  %361 = and i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = select i1 %362, i8 %357, i8 49
  store i8 %363, ptr %355, align 1, !tbaa !17
  br label %364

364:                                              ; preds = %302, %300, %287, %98, %141, %107, %31, %1, %354, %240, %189
  ret void
}

declare zeroext i1 @Perl_isinfnan(double noundef nofpclass(nan inf)) local_unnamed_addr #3

declare i32 @Perl_grok_number_flags(ptr noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_not_incrementable(ptr noundef %0) unnamed_addr #1 {
  %2 = alloca [64 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %2) #17
  %3 = call fastcc ptr @S_sv_display(ptr noundef %0, ptr noundef nonnull %2)
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 13, ptr noundef nonnull @.str.101, ptr noundef %3) #17
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %2) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_dec(ptr noundef %0) local_unnamed_addr #1 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 2097152
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = tail call i32 @Perl_mg_get(ptr noundef nonnull %0) #17
  br label %10

10:                                               ; preds = %3, %8
  tail call void @Perl_sv_dec_nomg(ptr noundef nonnull %0)
  br label %11

11:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_dec_nomg(ptr noundef %0) local_unnamed_addr #1 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %275, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 427886592
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %40, label %8

8:                                                ; preds = %3
  %9 = and i32 %5, 134283264
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %8
  tail call void @Perl_croak_no_modify() #17
  %12 = load i32, ptr %4, align 4, !tbaa !16
  br label %13

13:                                               ; preds = %11, %8
  %14 = phi i32 [ %12, %11 ], [ %5, %8 ]
  %15 = and i32 %14, 2048
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 2
  %21 = load i32, ptr %20, align 4, !tbaa !16
  %22 = and i32 %21, 1048576
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %36, label %24

24:                                               ; preds = %17
  %25 = load ptr, ptr %19, align 8, !tbaa !26
  %26 = load ptr, ptr %25, align 8, !tbaa !50
  %27 = getelementptr inbounds %struct.hv, ptr %26, i64 0, i32 2
  %28 = load i32, ptr %27, align 4, !tbaa !64
  %29 = and i32 %28, 268435456
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %24
  %32 = tail call ptr @Perl_amagic_call(ptr noundef nonnull %0, ptr noundef nonnull @PL_sv_undef, i32 noundef 7, i32 noundef 9) #17
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %275

34:                                               ; preds = %31
  %35 = load ptr, ptr %18, align 8, !tbaa !17
  br label %36

36:                                               ; preds = %34, %24, %17
  %37 = phi ptr [ %35, %34 ], [ %19, %24 ], [ %19, %17 ]
  %38 = ptrtoint ptr %37 to i64
  tail call void @Perl_sv_unref_flags(ptr noundef nonnull %0, i32 noundef 0)
  tail call void @Perl_sv_setiv(ptr noundef nonnull %0, i64 noundef %38)
  br label %40

39:                                               ; preds = %13
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %0, i32 noundef 0)
  br label %40

40:                                               ; preds = %36, %39, %3
  %41 = load i32, ptr %4, align 4, !tbaa !16
  %42 = and i32 %41, 256
  %43 = icmp ne i32 %42, 0
  %44 = and i32 %41, 12288
  %45 = icmp eq i32 %44, 4096
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %164

47:                                               ; preds = %40, %266
  %48 = phi i32 [ %268, %266 ], [ %41, %40 ]
  %49 = icmp sgt i32 %48, -1
  %50 = load ptr, ptr %0, align 8, !tbaa !26
  br i1 %49, label %123, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.xpvuv, ptr %50, i64 0, i32 4
  %53 = load i64, ptr %52, align 8, !tbaa !17
  %54 = icmp eq i64 %53, 0
  %55 = and i32 %48, 33554432
  %56 = icmp eq i32 %55, 0
  br i1 %54, label %57, label %89

57:                                               ; preds = %51
  %58 = and i32 %48, 1610547455
  store i32 %58, ptr %4, align 4, !tbaa !16
  br i1 %56, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !17
  %62 = getelementptr inbounds i8, ptr %61, i64 -1
  %63 = load i8, ptr %62, align 1, !tbaa !17
  %64 = zext i8 %63 to i64
  %65 = icmp eq i8 %63, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %59
  %67 = getelementptr inbounds i8, ptr %61, i64 -9
  %68 = load i64, ptr %67, align 1
  br label %69

69:                                               ; preds = %59, %66
  %70 = phi i64 [ %64, %59 ], [ %68, %66 ]
  %71 = getelementptr inbounds %struct.xpv, ptr %50, i64 0, i32 3
  %72 = load i64, ptr %71, align 8, !tbaa !17
  %73 = add i64 %72, %70
  store i64 %73, ptr %71, align 8, !tbaa !17
  %74 = load ptr, ptr %60, align 8, !tbaa !17
  %75 = sub i64 0, %70
  %76 = getelementptr inbounds i8, ptr %74, i64 %75
  store ptr %76, ptr %60, align 8, !tbaa !17
  %77 = load ptr, ptr %0, align 8, !tbaa !26
  %78 = getelementptr inbounds %struct.xpv, ptr %77, i64 0, i32 2
  %79 = load i64, ptr %78, align 8, !tbaa !57
  %80 = add i64 %79, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %76, ptr nonnull align 1 %61, i64 %80, i1 false)
  %81 = load i32, ptr %4, align 4, !tbaa !16
  %82 = and i32 %81, -33554433
  %83 = load ptr, ptr %0, align 8, !tbaa !26
  br label %84

84:                                               ; preds = %69, %57
  %85 = phi ptr [ %83, %69 ], [ %50, %57 ]
  %86 = phi i32 [ %82, %69 ], [ %58, %57 ]
  %87 = or i32 %86, 4352
  store i32 %87, ptr %4, align 4, !tbaa !16
  %88 = getelementptr inbounds %struct.xpviv, ptr %85, i64 0, i32 4
  store i64 -1, ptr %88, align 8, !tbaa !17
  br label %275

89:                                               ; preds = %51
  %90 = and i32 %48, -536936193
  store i32 %90, ptr %4, align 4, !tbaa !16
  br i1 %56, label %116, label %91

91:                                               ; preds = %89
  %92 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %93 = load ptr, ptr %92, align 8, !tbaa !17
  %94 = getelementptr inbounds i8, ptr %93, i64 -1
  %95 = load i8, ptr %94, align 1, !tbaa !17
  %96 = zext i8 %95 to i64
  %97 = icmp eq i8 %95, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %91
  %99 = getelementptr inbounds i8, ptr %93, i64 -9
  %100 = load i64, ptr %99, align 1
  br label %101

101:                                              ; preds = %91, %98
  %102 = phi i64 [ %96, %91 ], [ %100, %98 ]
  %103 = getelementptr inbounds %struct.xpv, ptr %50, i64 0, i32 3
  %104 = load i64, ptr %103, align 8, !tbaa !17
  %105 = add i64 %104, %102
  store i64 %105, ptr %103, align 8, !tbaa !17
  %106 = load ptr, ptr %92, align 8, !tbaa !17
  %107 = sub i64 0, %102
  %108 = getelementptr inbounds i8, ptr %106, i64 %107
  store ptr %108, ptr %92, align 8, !tbaa !17
  %109 = load ptr, ptr %0, align 8, !tbaa !26
  %110 = getelementptr inbounds %struct.xpv, ptr %109, i64 0, i32 2
  %111 = load i64, ptr %110, align 8, !tbaa !57
  %112 = add i64 %111, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %108, ptr nonnull align 1 %93, i64 %112, i1 false)
  %113 = load i32, ptr %4, align 4, !tbaa !16
  %114 = and i32 %113, -33554433
  %115 = load ptr, ptr %0, align 8, !tbaa !26
  br label %116

116:                                              ; preds = %101, %89
  %117 = phi ptr [ %115, %101 ], [ %50, %89 ]
  %118 = phi i32 [ %114, %101 ], [ %90, %89 ]
  %119 = or i32 %118, 4352
  store i32 %119, ptr %4, align 4, !tbaa !16
  %120 = getelementptr inbounds %struct.xpvuv, ptr %117, i64 0, i32 4
  %121 = load i64, ptr %120, align 8, !tbaa !17
  %122 = add i64 %121, -1
  store i64 %122, ptr %120, align 8, !tbaa !17
  br label %275

123:                                              ; preds = %47
  %124 = getelementptr inbounds %struct.xpviv, ptr %50, i64 0, i32 4
  %125 = load i64, ptr %124, align 8, !tbaa !17
  %126 = icmp eq i64 %125, -9223372036854775808
  br i1 %126, label %127, label %128

127:                                              ; preds = %123
  tail call void @Perl_sv_setnv(ptr noundef nonnull %0, double noundef nofpclass(nan inf) 0xC3E0000000000000)
  br label %167

128:                                              ; preds = %123
  %129 = and i32 %48, 1610547455
  store i32 %129, ptr %4, align 4, !tbaa !16
  %130 = and i32 %48, 33554432
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %157, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %134 = load ptr, ptr %133, align 8, !tbaa !17
  %135 = getelementptr inbounds i8, ptr %134, i64 -1
  %136 = load i8, ptr %135, align 1, !tbaa !17
  %137 = zext i8 %136 to i64
  %138 = icmp eq i8 %136, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %132
  %140 = getelementptr inbounds i8, ptr %134, i64 -9
  %141 = load i64, ptr %140, align 1
  br label %142

142:                                              ; preds = %132, %139
  %143 = phi i64 [ %137, %132 ], [ %141, %139 ]
  %144 = getelementptr inbounds %struct.xpv, ptr %50, i64 0, i32 3
  %145 = load i64, ptr %144, align 8, !tbaa !17
  %146 = add i64 %145, %143
  store i64 %146, ptr %144, align 8, !tbaa !17
  %147 = load ptr, ptr %133, align 8, !tbaa !17
  %148 = sub i64 0, %143
  %149 = getelementptr inbounds i8, ptr %147, i64 %148
  store ptr %149, ptr %133, align 8, !tbaa !17
  %150 = load ptr, ptr %0, align 8, !tbaa !26
  %151 = getelementptr inbounds %struct.xpv, ptr %150, i64 0, i32 2
  %152 = load i64, ptr %151, align 8, !tbaa !57
  %153 = add i64 %152, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %149, ptr nonnull align 1 %134, i64 %153, i1 false)
  %154 = load i32, ptr %4, align 4, !tbaa !16
  %155 = and i32 %154, -33554433
  %156 = load ptr, ptr %0, align 8, !tbaa !26
  br label %157

157:                                              ; preds = %142, %128
  %158 = phi ptr [ %156, %142 ], [ %50, %128 ]
  %159 = phi i32 [ %155, %142 ], [ %129, %128 ]
  %160 = or i32 %159, 4352
  store i32 %160, ptr %4, align 4, !tbaa !16
  %161 = getelementptr inbounds %struct.xpviv, ptr %158, i64 0, i32 4
  %162 = load i64, ptr %161, align 8, !tbaa !17
  %163 = add nsw i64 %162, -1
  store i64 %163, ptr %161, align 8, !tbaa !17
  br label %275

164:                                              ; preds = %40
  %165 = and i32 %41, 8192
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %211, label %167

167:                                              ; preds = %164, %127
  %168 = load ptr, ptr %0, align 8, !tbaa !26
  %169 = getelementptr inbounds %struct.xpvnv, ptr %168, i64 0, i32 5
  %170 = load double, ptr %169, align 8, !tbaa !17
  %171 = tail call zeroext i1 @Perl_isinfnan(double noundef nofpclass(nan inf) %170) #17
  %172 = fcmp fast ugt double %170, 0xC340000000000000
  %173 = select i1 %171, i1 true, i1 %172
  br i1 %173, label %175, label %174

174:                                              ; preds = %167
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 46, ptr noundef nonnull @.str.42, double noundef nofpclass(nan inf) %170) #17
  br label %175

175:                                              ; preds = %167, %174
  %176 = load i32, ptr %4, align 4, !tbaa !16
  %177 = and i32 %176, 1610547455
  store i32 %177, ptr %4, align 4, !tbaa !16
  %178 = and i32 %176, 33554432
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %205, label %180

180:                                              ; preds = %175
  %181 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %182 = load ptr, ptr %181, align 8, !tbaa !17
  %183 = getelementptr inbounds i8, ptr %182, i64 -1
  %184 = load i8, ptr %183, align 1, !tbaa !17
  %185 = zext i8 %184 to i64
  %186 = icmp eq i8 %184, 0
  br i1 %186, label %187, label %190

187:                                              ; preds = %180
  %188 = getelementptr inbounds i8, ptr %182, i64 -9
  %189 = load i64, ptr %188, align 1
  br label %190

190:                                              ; preds = %180, %187
  %191 = phi i64 [ %185, %180 ], [ %189, %187 ]
  %192 = load ptr, ptr %0, align 8, !tbaa !26
  %193 = getelementptr inbounds %struct.xpv, ptr %192, i64 0, i32 3
  %194 = load i64, ptr %193, align 8, !tbaa !17
  %195 = add i64 %194, %191
  store i64 %195, ptr %193, align 8, !tbaa !17
  %196 = load ptr, ptr %181, align 8, !tbaa !17
  %197 = sub i64 0, %191
  %198 = getelementptr inbounds i8, ptr %196, i64 %197
  store ptr %198, ptr %181, align 8, !tbaa !17
  %199 = load ptr, ptr %0, align 8, !tbaa !26
  %200 = getelementptr inbounds %struct.xpv, ptr %199, i64 0, i32 2
  %201 = load i64, ptr %200, align 8, !tbaa !57
  %202 = add i64 %201, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %198, ptr nonnull align 1 %182, i64 %202, i1 false)
  %203 = load i32, ptr %4, align 4, !tbaa !16
  %204 = and i32 %203, -33554433
  br label %205

205:                                              ; preds = %190, %175
  %206 = phi i32 [ %204, %190 ], [ %177, %175 ]
  %207 = or i32 %206, 8704
  store i32 %207, ptr %4, align 4, !tbaa !16
  %208 = fadd fast double %170, -1.000000e+00
  %209 = load ptr, ptr %0, align 8, !tbaa !26
  %210 = getelementptr inbounds %struct.xpvnv, ptr %209, i64 0, i32 5
  store double %208, ptr %210, align 8, !tbaa !17
  br label %275

211:                                              ; preds = %164
  %212 = and i32 %41, 16384
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %255

214:                                              ; preds = %211
  %215 = and i32 %41, 255
  %216 = icmp ult i32 %215, 5
  br i1 %216, label %217, label %220

217:                                              ; preds = %214
  %218 = icmp ugt i32 %215, 1
  %219 = select i1 %218, i32 5, i32 1
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef %219)
  br label %220

220:                                              ; preds = %214, %217
  %221 = load ptr, ptr %0, align 8, !tbaa !26
  %222 = getelementptr inbounds %struct.xpviv, ptr %221, i64 0, i32 4
  store i64 -1, ptr %222, align 8, !tbaa !17
  %223 = load i32, ptr %4, align 4, !tbaa !16
  %224 = and i32 %223, 1610547455
  store i32 %224, ptr %4, align 4, !tbaa !16
  %225 = and i32 %223, 33554432
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %252, label %227

227:                                              ; preds = %220
  %228 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %229 = load ptr, ptr %228, align 8, !tbaa !17
  %230 = getelementptr inbounds i8, ptr %229, i64 -1
  %231 = load i8, ptr %230, align 1, !tbaa !17
  %232 = zext i8 %231 to i64
  %233 = icmp eq i8 %231, 0
  br i1 %233, label %234, label %237

234:                                              ; preds = %227
  %235 = getelementptr inbounds i8, ptr %229, i64 -9
  %236 = load i64, ptr %235, align 1
  br label %237

237:                                              ; preds = %227, %234
  %238 = phi i64 [ %232, %227 ], [ %236, %234 ]
  %239 = load ptr, ptr %0, align 8, !tbaa !26
  %240 = getelementptr inbounds %struct.xpv, ptr %239, i64 0, i32 3
  %241 = load i64, ptr %240, align 8, !tbaa !17
  %242 = add i64 %241, %238
  store i64 %242, ptr %240, align 8, !tbaa !17
  %243 = load ptr, ptr %228, align 8, !tbaa !17
  %244 = sub i64 0, %238
  %245 = getelementptr inbounds i8, ptr %243, i64 %244
  store ptr %245, ptr %228, align 8, !tbaa !17
  %246 = load ptr, ptr %0, align 8, !tbaa !26
  %247 = getelementptr inbounds %struct.xpv, ptr %246, i64 0, i32 2
  %248 = load i64, ptr %247, align 8, !tbaa !57
  %249 = add i64 %248, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %245, ptr nonnull align 1 %229, i64 %249, i1 false)
  %250 = load i32, ptr %4, align 4, !tbaa !16
  %251 = and i32 %250, -33554433
  br label %252

252:                                              ; preds = %237, %220
  %253 = phi i32 [ %251, %237 ], [ %224, %220 ]
  %254 = or i32 %253, 4352
  store i32 %254, ptr %4, align 4, !tbaa !16
  br label %275

255:                                              ; preds = %211
  %256 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %257 = load ptr, ptr %256, align 8, !tbaa !17
  %258 = load ptr, ptr %0, align 8, !tbaa !26
  %259 = getelementptr inbounds %struct.xpv, ptr %258, i64 0, i32 2
  %260 = load i64, ptr %259, align 8, !tbaa !57
  %261 = tail call i32 @Perl_grok_number(ptr noundef %257, i64 noundef %260, ptr noundef null) #17
  %262 = icmp ne i32 %261, 0
  %263 = and i32 %261, 16
  %264 = icmp eq i32 %263, 0
  %265 = and i1 %262, %264
  br i1 %265, label %266, label %271

266:                                              ; preds = %255
  %267 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %0, i32 noundef 2)
  %268 = load i32, ptr %4, align 4, !tbaa !16
  %269 = and i32 %268, 256
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %47

271:                                              ; preds = %255, %266
  %272 = load ptr, ptr %256, align 8, !tbaa !17
  %273 = tail call fast nofpclass(nan inf) double @Perl_my_atof(ptr noundef %272) #17
  %274 = fadd fast double %273, -1.000000e+00
  tail call void @Perl_sv_setnv(ptr noundef nonnull %0, double noundef nofpclass(nan inf) %274)
  br label %275

275:                                              ; preds = %157, %116, %84, %31, %1, %271, %252, %205
  ret void
}

declare i64 @Perl_tmps_grow_p(i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSVpv(ptr noundef %0, i64 noundef %1) local_unnamed_addr #1 {
  %3 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %34

5:                                                ; preds = %2
  %6 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %7 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %7, ptr %6, align 8, !tbaa !26
  %8 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 1
  store i32 170, ptr %8, align 8, !tbaa !13
  %9 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  store i32 0, ptr %9, align 4, !tbaa !16
  store ptr %6, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %10 = getelementptr inbounds %struct.sv, ptr %6, i64 1
  store ptr %10, ptr @PL_sv_root, align 8, !tbaa !9
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi ptr [ %10, %5 ], [ %29, %11 ]
  %13 = phi i64 [ 1, %5 ], [ %28, %11 ]
  %14 = getelementptr inbounds %struct.sv, ptr %12, i64 1
  store ptr %14, ptr %12, align 8, !tbaa !26
  %15 = getelementptr inbounds %struct.sv, ptr %6, i64 %13, i32 2
  store i32 255, ptr %15, align 4, !tbaa !16
  %16 = add nuw nsw i64 %13, 1
  %17 = getelementptr inbounds %struct.sv, ptr %6, i64 %16
  %18 = getelementptr inbounds %struct.sv, ptr %17, i64 1
  store ptr %18, ptr %17, align 8, !tbaa !26
  %19 = getelementptr inbounds %struct.sv, ptr %6, i64 %16, i32 2
  store i32 255, ptr %19, align 4, !tbaa !16
  %20 = add nuw nsw i64 %13, 2
  %21 = getelementptr inbounds %struct.sv, ptr %6, i64 %20
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 1
  store ptr %22, ptr %21, align 8, !tbaa !26
  %23 = getelementptr inbounds %struct.sv, ptr %6, i64 %20, i32 2
  store i32 255, ptr %23, align 4, !tbaa !16
  %24 = add nuw nsw i64 %13, 3
  %25 = getelementptr inbounds %struct.sv, ptr %6, i64 %24
  %26 = getelementptr inbounds %struct.sv, ptr %25, i64 1
  store ptr %26, ptr %25, align 8, !tbaa !26
  %27 = getelementptr inbounds %struct.sv, ptr %6, i64 %24, i32 2
  store i32 255, ptr %27, align 4, !tbaa !16
  %28 = add nuw nsw i64 %13, 4
  %29 = getelementptr inbounds %struct.sv, ptr %6, i64 %28
  %30 = icmp eq i64 %28, 169
  br i1 %30, label %31, label %11, !llvm.loop !59

31:                                               ; preds = %11
  store ptr null, ptr %29, align 8, !tbaa !26
  %32 = getelementptr inbounds %struct.sv, ptr %6, i64 169, i32 2
  store i32 255, ptr %32, align 4, !tbaa !16
  %33 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %34

34:                                               ; preds = %2, %31
  %35 = phi ptr [ %33, %31 ], [ %3, %2 ]
  %36 = load ptr, ptr %35, align 8, !tbaa !26
  store ptr %36, ptr @PL_sv_root, align 8, !tbaa !9
  %37 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %38 = add nsw i64 %37, 1
  store i64 %38, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %35, align 8, !tbaa !26
  %39 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 1
  store i32 1, ptr %39, align 8, !tbaa !13
  %40 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 2
  store i32 0, ptr %40, align 4, !tbaa !16
  %41 = icmp ne i64 %1, 0
  %42 = icmp eq ptr %0, null
  %43 = or i1 %42, %41
  br i1 %43, label %46, label %44

44:                                               ; preds = %34
  %45 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #18
  br label %46

46:                                               ; preds = %34, %44
  %47 = phi i64 [ %45, %44 ], [ %1, %34 ]
  tail call void @Perl_sv_setpvn(ptr noundef nonnull %35, ptr noundef %0, i64 noundef %47)
  ret ptr %35
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSVhek(ptr noundef %0) local_unnamed_addr #1 {
  %2 = alloca i64, align 8
  %3 = icmp eq ptr %0, null
  br i1 %3, label %4, label %43

4:                                                ; preds = %1
  %5 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %36

7:                                                ; preds = %4
  %8 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %9 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %9, ptr %8, align 8, !tbaa !26
  %10 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 1
  store i32 170, ptr %10, align 8, !tbaa !13
  %11 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 2
  store i32 0, ptr %11, align 4, !tbaa !16
  store ptr %8, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %12 = getelementptr inbounds %struct.sv, ptr %8, i64 1
  store ptr %12, ptr @PL_sv_root, align 8, !tbaa !9
  br label %13

13:                                               ; preds = %13, %7
  %14 = phi ptr [ %12, %7 ], [ %31, %13 ]
  %15 = phi i64 [ 1, %7 ], [ %30, %13 ]
  %16 = getelementptr inbounds %struct.sv, ptr %14, i64 1
  store ptr %16, ptr %14, align 8, !tbaa !26
  %17 = getelementptr inbounds %struct.sv, ptr %8, i64 %15, i32 2
  store i32 255, ptr %17, align 4, !tbaa !16
  %18 = add nuw nsw i64 %15, 1
  %19 = getelementptr inbounds %struct.sv, ptr %8, i64 %18
  %20 = getelementptr inbounds %struct.sv, ptr %19, i64 1
  store ptr %20, ptr %19, align 8, !tbaa !26
  %21 = getelementptr inbounds %struct.sv, ptr %8, i64 %18, i32 2
  store i32 255, ptr %21, align 4, !tbaa !16
  %22 = add nuw nsw i64 %15, 2
  %23 = getelementptr inbounds %struct.sv, ptr %8, i64 %22
  %24 = getelementptr inbounds %struct.sv, ptr %23, i64 1
  store ptr %24, ptr %23, align 8, !tbaa !26
  %25 = getelementptr inbounds %struct.sv, ptr %8, i64 %22, i32 2
  store i32 255, ptr %25, align 4, !tbaa !16
  %26 = add nuw nsw i64 %15, 3
  %27 = getelementptr inbounds %struct.sv, ptr %8, i64 %26
  %28 = getelementptr inbounds %struct.sv, ptr %27, i64 1
  store ptr %28, ptr %27, align 8, !tbaa !26
  %29 = getelementptr inbounds %struct.sv, ptr %8, i64 %26, i32 2
  store i32 255, ptr %29, align 4, !tbaa !16
  %30 = add nuw nsw i64 %15, 4
  %31 = getelementptr inbounds %struct.sv, ptr %8, i64 %30
  %32 = icmp eq i64 %30, 169
  br i1 %32, label %33, label %13, !llvm.loop !59

33:                                               ; preds = %13
  store ptr null, ptr %31, align 8, !tbaa !26
  %34 = getelementptr inbounds %struct.sv, ptr %8, i64 169, i32 2
  store i32 255, ptr %34, align 4, !tbaa !16
  %35 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %36

36:                                               ; preds = %4, %33
  %37 = phi ptr [ %35, %33 ], [ %5, %4 ]
  %38 = load ptr, ptr %37, align 8, !tbaa !26
  store ptr %38, ptr @PL_sv_root, align 8, !tbaa !9
  %39 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %40 = add nsw i64 %39, 1
  store i64 %40, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %37, align 8, !tbaa !26
  %41 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 1
  store i32 1, ptr %41, align 8, !tbaa !13
  %42 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 2
  store i32 0, ptr %42, align 4, !tbaa !16
  br label %261

43:                                               ; preds = %1
  %44 = getelementptr inbounds %struct.hek, ptr %0, i64 0, i32 1
  %45 = load i32, ptr %44, align 4, !tbaa !84
  %46 = icmp eq i32 %45, -2
  %47 = getelementptr inbounds %struct.hek, ptr %0, i64 0, i32 2
  br i1 %46, label %48, label %101

48:                                               ; preds = %43
  %49 = load ptr, ptr %47, align 4, !tbaa !9
  %50 = icmp eq ptr %49, null
  br i1 %50, label %261, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.sv, ptr %49, i64 0, i32 2
  %53 = load i32, ptr %52, align 4, !tbaa !16
  %54 = and i32 %53, 255
  %55 = icmp eq i32 %54, 255
  br i1 %55, label %56, label %57

56:                                               ; preds = %51
  tail call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 24, ptr noundef nonnull @.str.44) #17
  br label %261

57:                                               ; preds = %51
  %58 = and i32 %53, 2097152
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = tail call i32 @Perl_mg_get(ptr noundef nonnull %49) #17
  br label %62

62:                                               ; preds = %60, %57
  %63 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %64 = icmp eq ptr %63, null
  br i1 %64, label %65, label %94

65:                                               ; preds = %62
  %66 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %67 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %67, ptr %66, align 8, !tbaa !26
  %68 = getelementptr inbounds %struct.sv, ptr %66, i64 0, i32 1
  store i32 170, ptr %68, align 8, !tbaa !13
  %69 = getelementptr inbounds %struct.sv, ptr %66, i64 0, i32 2
  store i32 0, ptr %69, align 4, !tbaa !16
  store ptr %66, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %70 = getelementptr inbounds %struct.sv, ptr %66, i64 1
  store ptr %70, ptr @PL_sv_root, align 8, !tbaa !9
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi ptr [ %70, %65 ], [ %89, %71 ]
  %73 = phi i64 [ 1, %65 ], [ %88, %71 ]
  %74 = getelementptr inbounds %struct.sv, ptr %72, i64 1
  store ptr %74, ptr %72, align 8, !tbaa !26
  %75 = getelementptr inbounds %struct.sv, ptr %66, i64 %73, i32 2
  store i32 255, ptr %75, align 4, !tbaa !16
  %76 = add nuw nsw i64 %73, 1
  %77 = getelementptr inbounds %struct.sv, ptr %66, i64 %76
  %78 = getelementptr inbounds %struct.sv, ptr %77, i64 1
  store ptr %78, ptr %77, align 8, !tbaa !26
  %79 = getelementptr inbounds %struct.sv, ptr %66, i64 %76, i32 2
  store i32 255, ptr %79, align 4, !tbaa !16
  %80 = add nuw nsw i64 %73, 2
  %81 = getelementptr inbounds %struct.sv, ptr %66, i64 %80
  %82 = getelementptr inbounds %struct.sv, ptr %81, i64 1
  store ptr %82, ptr %81, align 8, !tbaa !26
  %83 = getelementptr inbounds %struct.sv, ptr %66, i64 %80, i32 2
  store i32 255, ptr %83, align 4, !tbaa !16
  %84 = add nuw nsw i64 %73, 3
  %85 = getelementptr inbounds %struct.sv, ptr %66, i64 %84
  %86 = getelementptr inbounds %struct.sv, ptr %85, i64 1
  store ptr %86, ptr %85, align 8, !tbaa !26
  %87 = getelementptr inbounds %struct.sv, ptr %66, i64 %84, i32 2
  store i32 255, ptr %87, align 4, !tbaa !16
  %88 = add nuw nsw i64 %73, 4
  %89 = getelementptr inbounds %struct.sv, ptr %66, i64 %88
  %90 = icmp eq i64 %88, 169
  br i1 %90, label %91, label %71, !llvm.loop !59

91:                                               ; preds = %71
  store ptr null, ptr %89, align 8, !tbaa !26
  %92 = getelementptr inbounds %struct.sv, ptr %66, i64 169, i32 2
  store i32 255, ptr %92, align 4, !tbaa !16
  %93 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %94

94:                                               ; preds = %62, %91
  %95 = phi ptr [ %93, %91 ], [ %63, %62 ]
  %96 = load ptr, ptr %95, align 8, !tbaa !26
  store ptr %96, ptr @PL_sv_root, align 8, !tbaa !9
  %97 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %98 = add nsw i64 %97, 1
  store i64 %98, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %95, align 8, !tbaa !26
  %99 = getelementptr inbounds %struct.sv, ptr %95, i64 0, i32 1
  store i32 1, ptr %99, align 8, !tbaa !13
  %100 = getelementptr inbounds %struct.sv, ptr %95, i64 0, i32 2
  store i32 0, ptr %100, align 4, !tbaa !16
  tail call void @Perl_sv_setsv_flags(ptr noundef nonnull %95, ptr noundef nonnull %49, i32 noundef 16)
  br label %261

101:                                              ; preds = %43
  %102 = sext i32 %45 to i64
  %103 = getelementptr inbounds i8, ptr %47, i64 %102
  %104 = getelementptr inbounds i8, ptr %103, i64 1
  %105 = load i8, ptr %104, align 1, !tbaa !17
  %106 = zext i8 %105 to i32
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %152, label %109

109:                                              ; preds = %101
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #17
  store i64 %102, ptr %2, align 8, !tbaa !60
  %110 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %111 = icmp eq ptr %110, null
  br i1 %111, label %112, label %141

112:                                              ; preds = %109
  %113 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %114 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %114, ptr %113, align 8, !tbaa !26
  %115 = getelementptr inbounds %struct.sv, ptr %113, i64 0, i32 1
  store i32 170, ptr %115, align 8, !tbaa !13
  %116 = getelementptr inbounds %struct.sv, ptr %113, i64 0, i32 2
  store i32 0, ptr %116, align 4, !tbaa !16
  store ptr %113, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %117 = getelementptr inbounds %struct.sv, ptr %113, i64 1
  store ptr %117, ptr @PL_sv_root, align 8, !tbaa !9
  br label %118

118:                                              ; preds = %118, %112
  %119 = phi ptr [ %117, %112 ], [ %136, %118 ]
  %120 = phi i64 [ 1, %112 ], [ %135, %118 ]
  %121 = getelementptr inbounds %struct.sv, ptr %119, i64 1
  store ptr %121, ptr %119, align 8, !tbaa !26
  %122 = getelementptr inbounds %struct.sv, ptr %113, i64 %120, i32 2
  store i32 255, ptr %122, align 4, !tbaa !16
  %123 = add nuw nsw i64 %120, 1
  %124 = getelementptr inbounds %struct.sv, ptr %113, i64 %123
  %125 = getelementptr inbounds %struct.sv, ptr %124, i64 1
  store ptr %125, ptr %124, align 8, !tbaa !26
  %126 = getelementptr inbounds %struct.sv, ptr %113, i64 %123, i32 2
  store i32 255, ptr %126, align 4, !tbaa !16
  %127 = add nuw nsw i64 %120, 2
  %128 = getelementptr inbounds %struct.sv, ptr %113, i64 %127
  %129 = getelementptr inbounds %struct.sv, ptr %128, i64 1
  store ptr %129, ptr %128, align 8, !tbaa !26
  %130 = getelementptr inbounds %struct.sv, ptr %113, i64 %127, i32 2
  store i32 255, ptr %130, align 4, !tbaa !16
  %131 = add nuw nsw i64 %120, 3
  %132 = getelementptr inbounds %struct.sv, ptr %113, i64 %131
  %133 = getelementptr inbounds %struct.sv, ptr %132, i64 1
  store ptr %133, ptr %132, align 8, !tbaa !26
  %134 = getelementptr inbounds %struct.sv, ptr %113, i64 %131, i32 2
  store i32 255, ptr %134, align 4, !tbaa !16
  %135 = add nuw nsw i64 %120, 4
  %136 = getelementptr inbounds %struct.sv, ptr %113, i64 %135
  %137 = icmp eq i64 %135, 169
  br i1 %137, label %138, label %118, !llvm.loop !59

138:                                              ; preds = %118
  store ptr null, ptr %136, align 8, !tbaa !26
  %139 = getelementptr inbounds %struct.sv, ptr %113, i64 169, i32 2
  store i32 255, ptr %139, align 4, !tbaa !16
  %140 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %141

141:                                              ; preds = %109, %138
  %142 = phi ptr [ %140, %138 ], [ %110, %109 ]
  %143 = load ptr, ptr %142, align 8, !tbaa !26
  store ptr %143, ptr @PL_sv_root, align 8, !tbaa !9
  %144 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %145 = add nsw i64 %144, 1
  store i64 %145, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %142, align 8, !tbaa !26
  %146 = getelementptr inbounds %struct.sv, ptr %142, i64 0, i32 1
  store i32 1, ptr %146, align 8, !tbaa !13
  %147 = getelementptr inbounds %struct.sv, ptr %142, i64 0, i32 2
  store i32 0, ptr %147, align 4, !tbaa !16
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %142, i32 noundef 3)
  %148 = call ptr @Perl_bytes_to_utf8(ptr noundef nonnull %47, ptr noundef nonnull %2) #17
  %149 = load i64, ptr %2, align 8, !tbaa !60
  call void @Perl_sv_usepvn_flags(ptr noundef nonnull %142, ptr noundef %148, i64 noundef %149, i32 noundef 256)
  %150 = load i32, ptr %147, align 4, !tbaa !16
  %151 = or i32 %150, 536870912
  store i32 %151, ptr %147, align 4, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #17
  br label %261

152:                                              ; preds = %101
  %153 = and i32 %106, 8
  %154 = icmp eq i32 %153, 0
  %155 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %156 = icmp eq ptr %155, null
  br i1 %154, label %204, label %157

157:                                              ; preds = %152
  br i1 %156, label %158, label %187

158:                                              ; preds = %157
  %159 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %160 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %160, ptr %159, align 8, !tbaa !26
  %161 = getelementptr inbounds %struct.sv, ptr %159, i64 0, i32 1
  store i32 170, ptr %161, align 8, !tbaa !13
  %162 = getelementptr inbounds %struct.sv, ptr %159, i64 0, i32 2
  store i32 0, ptr %162, align 4, !tbaa !16
  store ptr %159, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %163 = getelementptr inbounds %struct.sv, ptr %159, i64 1
  store ptr %163, ptr @PL_sv_root, align 8, !tbaa !9
  br label %164

164:                                              ; preds = %164, %158
  %165 = phi ptr [ %163, %158 ], [ %182, %164 ]
  %166 = phi i64 [ 1, %158 ], [ %181, %164 ]
  %167 = getelementptr inbounds %struct.sv, ptr %165, i64 1
  store ptr %167, ptr %165, align 8, !tbaa !26
  %168 = getelementptr inbounds %struct.sv, ptr %159, i64 %166, i32 2
  store i32 255, ptr %168, align 4, !tbaa !16
  %169 = add nuw nsw i64 %166, 1
  %170 = getelementptr inbounds %struct.sv, ptr %159, i64 %169
  %171 = getelementptr inbounds %struct.sv, ptr %170, i64 1
  store ptr %171, ptr %170, align 8, !tbaa !26
  %172 = getelementptr inbounds %struct.sv, ptr %159, i64 %169, i32 2
  store i32 255, ptr %172, align 4, !tbaa !16
  %173 = add nuw nsw i64 %166, 2
  %174 = getelementptr inbounds %struct.sv, ptr %159, i64 %173
  %175 = getelementptr inbounds %struct.sv, ptr %174, i64 1
  store ptr %175, ptr %174, align 8, !tbaa !26
  %176 = getelementptr inbounds %struct.sv, ptr %159, i64 %173, i32 2
  store i32 255, ptr %176, align 4, !tbaa !16
  %177 = add nuw nsw i64 %166, 3
  %178 = getelementptr inbounds %struct.sv, ptr %159, i64 %177
  %179 = getelementptr inbounds %struct.sv, ptr %178, i64 1
  store ptr %179, ptr %178, align 8, !tbaa !26
  %180 = getelementptr inbounds %struct.sv, ptr %159, i64 %177, i32 2
  store i32 255, ptr %180, align 4, !tbaa !16
  %181 = add nuw nsw i64 %166, 4
  %182 = getelementptr inbounds %struct.sv, ptr %159, i64 %181
  %183 = icmp eq i64 %181, 169
  br i1 %183, label %184, label %164, !llvm.loop !59

184:                                              ; preds = %164
  store ptr null, ptr %182, align 8, !tbaa !26
  %185 = getelementptr inbounds %struct.sv, ptr %159, i64 169, i32 2
  store i32 255, ptr %185, align 4, !tbaa !16
  %186 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %187

187:                                              ; preds = %157, %184
  %188 = phi ptr [ %186, %184 ], [ %155, %157 ]
  %189 = load ptr, ptr %188, align 8, !tbaa !26
  store ptr %189, ptr @PL_sv_root, align 8, !tbaa !9
  %190 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %191 = add nsw i64 %190, 1
  store i64 %191, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %188, align 8, !tbaa !26
  %192 = getelementptr inbounds %struct.sv, ptr %188, i64 0, i32 1
  store i32 1, ptr %192, align 8, !tbaa !13
  %193 = getelementptr inbounds %struct.sv, ptr %188, i64 0, i32 2
  store i32 0, ptr %193, align 4, !tbaa !16
  tail call void @Perl_sv_setpvn(ptr noundef nonnull %188, ptr noundef nonnull %47, i64 noundef %102)
  %194 = load i32, ptr %44, align 4, !tbaa !84
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8, ptr %47, i64 %195
  %197 = getelementptr inbounds i8, ptr %196, i64 1
  %198 = load i8, ptr %197, align 1, !tbaa !17
  %199 = and i8 %198, 1
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %261, label %201

201:                                              ; preds = %187
  %202 = load i32, ptr %193, align 4, !tbaa !16
  %203 = or i32 %202, 536870912
  store i32 %203, ptr %193, align 4, !tbaa !16
  br label %261

204:                                              ; preds = %152
  br i1 %156, label %205, label %234

205:                                              ; preds = %204
  %206 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %207 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %207, ptr %206, align 8, !tbaa !26
  %208 = getelementptr inbounds %struct.sv, ptr %206, i64 0, i32 1
  store i32 170, ptr %208, align 8, !tbaa !13
  %209 = getelementptr inbounds %struct.sv, ptr %206, i64 0, i32 2
  store i32 0, ptr %209, align 4, !tbaa !16
  store ptr %206, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %210 = getelementptr inbounds %struct.sv, ptr %206, i64 1
  store ptr %210, ptr @PL_sv_root, align 8, !tbaa !9
  br label %211

211:                                              ; preds = %211, %205
  %212 = phi ptr [ %210, %205 ], [ %229, %211 ]
  %213 = phi i64 [ 1, %205 ], [ %228, %211 ]
  %214 = getelementptr inbounds %struct.sv, ptr %212, i64 1
  store ptr %214, ptr %212, align 8, !tbaa !26
  %215 = getelementptr inbounds %struct.sv, ptr %206, i64 %213, i32 2
  store i32 255, ptr %215, align 4, !tbaa !16
  %216 = add nuw nsw i64 %213, 1
  %217 = getelementptr inbounds %struct.sv, ptr %206, i64 %216
  %218 = getelementptr inbounds %struct.sv, ptr %217, i64 1
  store ptr %218, ptr %217, align 8, !tbaa !26
  %219 = getelementptr inbounds %struct.sv, ptr %206, i64 %216, i32 2
  store i32 255, ptr %219, align 4, !tbaa !16
  %220 = add nuw nsw i64 %213, 2
  %221 = getelementptr inbounds %struct.sv, ptr %206, i64 %220
  %222 = getelementptr inbounds %struct.sv, ptr %221, i64 1
  store ptr %222, ptr %221, align 8, !tbaa !26
  %223 = getelementptr inbounds %struct.sv, ptr %206, i64 %220, i32 2
  store i32 255, ptr %223, align 4, !tbaa !16
  %224 = add nuw nsw i64 %213, 3
  %225 = getelementptr inbounds %struct.sv, ptr %206, i64 %224
  %226 = getelementptr inbounds %struct.sv, ptr %225, i64 1
  store ptr %226, ptr %225, align 8, !tbaa !26
  %227 = getelementptr inbounds %struct.sv, ptr %206, i64 %224, i32 2
  store i32 255, ptr %227, align 4, !tbaa !16
  %228 = add nuw nsw i64 %213, 4
  %229 = getelementptr inbounds %struct.sv, ptr %206, i64 %228
  %230 = icmp eq i64 %228, 169
  br i1 %230, label %231, label %211, !llvm.loop !59

231:                                              ; preds = %211
  store ptr null, ptr %229, align 8, !tbaa !26
  %232 = getelementptr inbounds %struct.sv, ptr %206, i64 169, i32 2
  store i32 255, ptr %232, align 4, !tbaa !16
  %233 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %234

234:                                              ; preds = %204, %231
  %235 = phi ptr [ %233, %231 ], [ %155, %204 ]
  %236 = load ptr, ptr %235, align 8, !tbaa !26
  store ptr %236, ptr @PL_sv_root, align 8, !tbaa !9
  %237 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %238 = add nsw i64 %237, 1
  store i64 %238, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %235, align 8, !tbaa !26
  %239 = getelementptr inbounds %struct.sv, ptr %235, i64 0, i32 1
  store i32 1, ptr %239, align 8, !tbaa !13
  %240 = getelementptr inbounds %struct.sv, ptr %235, i64 0, i32 2
  store i32 0, ptr %240, align 4, !tbaa !16
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %235, i32 noundef 3)
  %241 = getelementptr inbounds i8, ptr %0, i64 -8
  %242 = load i64, ptr %241, align 8, !tbaa !17
  %243 = add i64 %242, 1
  store i64 %243, ptr %241, align 8, !tbaa !17
  %244 = getelementptr inbounds %struct.sv, ptr %235, i64 0, i32 3
  store ptr %47, ptr %244, align 8, !tbaa !17
  %245 = load i32, ptr %44, align 4, !tbaa !84
  %246 = sext i32 %245 to i64
  %247 = load ptr, ptr %235, align 8, !tbaa !26
  %248 = getelementptr inbounds %struct.xpv, ptr %247, i64 0, i32 2
  store i64 %246, ptr %248, align 8, !tbaa !57
  %249 = getelementptr inbounds %struct.xpv, ptr %247, i64 0, i32 3
  store i64 0, ptr %249, align 8, !tbaa !17
  %250 = load i32, ptr %240, align 4, !tbaa !16
  %251 = or i32 %250, 268452864
  store i32 %251, ptr %240, align 4, !tbaa !16
  %252 = load i32, ptr %44, align 4, !tbaa !84
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds i8, ptr %47, i64 %253
  %255 = getelementptr inbounds i8, ptr %254, i64 1
  %256 = load i8, ptr %255, align 1, !tbaa !17
  %257 = and i8 %256, 1
  %258 = icmp eq i8 %257, 0
  br i1 %258, label %261, label %259

259:                                              ; preds = %234
  %260 = or i32 %250, 805323776
  store i32 %260, ptr %240, align 4, !tbaa !16
  br label %261

261:                                              ; preds = %94, %56, %48, %141, %201, %187, %259, %234, %36
  %262 = phi ptr [ %37, %36 ], [ %142, %141 ], [ %188, %201 ], [ %188, %187 ], [ %235, %259 ], [ %235, %234 ], [ null, %56 ], [ %95, %94 ], [ null, %48 ]
  ret ptr %262
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSVsv(ptr noundef %0) local_unnamed_addr #1 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %53, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 255
  %7 = icmp eq i32 %6, 255
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  tail call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 24, ptr noundef nonnull @.str.44) #17
  br label %53

9:                                                ; preds = %3
  %10 = and i32 %5, 2097152
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %9
  %13 = tail call i32 @Perl_mg_get(ptr noundef nonnull %0) #17
  br label %14

14:                                               ; preds = %9, %12
  %15 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %46

17:                                               ; preds = %14
  %18 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %19 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %19, ptr %18, align 8, !tbaa !26
  %20 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 1
  store i32 170, ptr %20, align 8, !tbaa !13
  %21 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  store i32 0, ptr %21, align 4, !tbaa !16
  store ptr %18, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %22 = getelementptr inbounds %struct.sv, ptr %18, i64 1
  store ptr %22, ptr @PL_sv_root, align 8, !tbaa !9
  br label %23

23:                                               ; preds = %23, %17
  %24 = phi ptr [ %22, %17 ], [ %41, %23 ]
  %25 = phi i64 [ 1, %17 ], [ %40, %23 ]
  %26 = getelementptr inbounds %struct.sv, ptr %24, i64 1
  store ptr %26, ptr %24, align 8, !tbaa !26
  %27 = getelementptr inbounds %struct.sv, ptr %18, i64 %25, i32 2
  store i32 255, ptr %27, align 4, !tbaa !16
  %28 = add nuw nsw i64 %25, 1
  %29 = getelementptr inbounds %struct.sv, ptr %18, i64 %28
  %30 = getelementptr inbounds %struct.sv, ptr %29, i64 1
  store ptr %30, ptr %29, align 8, !tbaa !26
  %31 = getelementptr inbounds %struct.sv, ptr %18, i64 %28, i32 2
  store i32 255, ptr %31, align 4, !tbaa !16
  %32 = add nuw nsw i64 %25, 2
  %33 = getelementptr inbounds %struct.sv, ptr %18, i64 %32
  %34 = getelementptr inbounds %struct.sv, ptr %33, i64 1
  store ptr %34, ptr %33, align 8, !tbaa !26
  %35 = getelementptr inbounds %struct.sv, ptr %18, i64 %32, i32 2
  store i32 255, ptr %35, align 4, !tbaa !16
  %36 = add nuw nsw i64 %25, 3
  %37 = getelementptr inbounds %struct.sv, ptr %18, i64 %36
  %38 = getelementptr inbounds %struct.sv, ptr %37, i64 1
  store ptr %38, ptr %37, align 8, !tbaa !26
  %39 = getelementptr inbounds %struct.sv, ptr %18, i64 %36, i32 2
  store i32 255, ptr %39, align 4, !tbaa !16
  %40 = add nuw nsw i64 %25, 4
  %41 = getelementptr inbounds %struct.sv, ptr %18, i64 %40
  %42 = icmp eq i64 %40, 169
  br i1 %42, label %43, label %23, !llvm.loop !59

43:                                               ; preds = %23
  store ptr null, ptr %41, align 8, !tbaa !26
  %44 = getelementptr inbounds %struct.sv, ptr %18, i64 169, i32 2
  store i32 255, ptr %44, align 4, !tbaa !16
  %45 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %46

46:                                               ; preds = %14, %43
  %47 = phi ptr [ %45, %43 ], [ %15, %14 ]
  %48 = load ptr, ptr %47, align 8, !tbaa !26
  store ptr %48, ptr @PL_sv_root, align 8, !tbaa !9
  %49 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %50 = add nsw i64 %49, 1
  store i64 %50, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %47, align 8, !tbaa !26
  %51 = getelementptr inbounds %struct.sv, ptr %47, i64 0, i32 1
  store i32 1, ptr %51, align 8, !tbaa !13
  %52 = getelementptr inbounds %struct.sv, ptr %47, i64 0, i32 2
  store i32 0, ptr %52, align 4, !tbaa !16
  tail call void @Perl_sv_setsv_flags(ptr noundef nonnull %47, ptr noundef nonnull %0, i32 noundef 16)
  br label %53

53:                                               ; preds = %1, %46, %8
  %54 = phi ptr [ null, %8 ], [ %47, %46 ], [ null, %1 ]
  ret ptr %54
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSVpvn_share(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 {
  %4 = alloca i8, align 1
  %5 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4) #17
  store i8 0, ptr %4, align 1, !tbaa !5
  %6 = icmp slt i32 %1, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #17
  %8 = sub nsw i32 0, %1
  %9 = zext i32 %8 to i64
  store i64 %9, ptr %5, align 8, !tbaa !60
  store i8 1, ptr %4, align 1, !tbaa !5
  %10 = call ptr @Perl_bytes_from_utf8(ptr noundef %0, ptr noundef nonnull %5, ptr noundef nonnull %4) #17
  %11 = load i64, ptr %5, align 8, !tbaa !60
  %12 = trunc i64 %11 to i32
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #17
  br label %13

13:                                               ; preds = %7, %3
  %14 = phi i32 [ %12, %7 ], [ %1, %3 ]
  %15 = phi ptr [ %10, %7 ], [ %0, %3 ]
  %16 = icmp eq i32 %2, 0
  br i1 %16, label %17, label %58

17:                                               ; preds = %13
  %18 = sext i32 %14 to i64
  %19 = getelementptr inbounds i8, ptr %15, i64 %18
  %20 = add i32 %14, 544173908
  %21 = icmp sgt i32 %14, 0
  br i1 %21, label %22, label %33

22:                                               ; preds = %17, %22
  %23 = phi i32 [ %31, %22 ], [ %20, %17 ]
  %24 = phi ptr [ %28, %22 ], [ %15, %17 ]
  %25 = mul i32 %23, 1025
  %26 = lshr i32 %25, 6
  %27 = xor i32 %26, %25
  %28 = getelementptr inbounds i8, ptr %24, i64 1
  %29 = load i8, ptr %24, align 1, !tbaa !17
  %30 = zext i8 %29 to i32
  %31 = add i32 %27, %30
  %32 = icmp ult ptr %28, %19
  br i1 %32, label %22, label %33, !llvm.loop !178

33:                                               ; preds = %22, %17
  %34 = phi i32 [ %20, %17 ], [ %31, %22 ]
  %35 = mul i32 %34, 1025
  %36 = lshr i32 %35, 6
  %37 = xor i32 %36, %35
  %38 = mul i32 %37, 1025
  %39 = add i32 %38, 73800
  %40 = lshr i32 %39, 6
  %41 = xor i32 %40, %39
  %42 = mul i32 %41, 1025
  %43 = add i32 %42, 113775
  %44 = lshr i32 %43, 6
  %45 = xor i32 %44, %43
  %46 = mul i32 %45, 1025
  %47 = add i32 %46, 118900
  %48 = lshr i32 %47, 6
  %49 = xor i32 %48, %47
  %50 = mul i32 %49, 1025
  %51 = add i32 %50, 32800
  %52 = lshr i32 %51, 6
  %53 = xor i32 %52, %51
  %54 = mul i32 %53, 9
  %55 = lshr i32 %54, 11
  %56 = xor i32 %55, %54
  %57 = mul i32 %56, 32769
  br label %58

58:                                               ; preds = %13, %33
  %59 = phi i32 [ %2, %13 ], [ %57, %33 ]
  %60 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %61 = icmp eq ptr %60, null
  br i1 %61, label %62, label %91

62:                                               ; preds = %58
  %63 = call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %64 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %64, ptr %63, align 8, !tbaa !26
  %65 = getelementptr inbounds %struct.sv, ptr %63, i64 0, i32 1
  store i32 170, ptr %65, align 8, !tbaa !13
  %66 = getelementptr inbounds %struct.sv, ptr %63, i64 0, i32 2
  store i32 0, ptr %66, align 4, !tbaa !16
  store ptr %63, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %67 = getelementptr inbounds %struct.sv, ptr %63, i64 1
  store ptr %67, ptr @PL_sv_root, align 8, !tbaa !9
  br label %68

68:                                               ; preds = %68, %62
  %69 = phi ptr [ %67, %62 ], [ %86, %68 ]
  %70 = phi i64 [ 1, %62 ], [ %85, %68 ]
  %71 = getelementptr inbounds %struct.sv, ptr %69, i64 1
  store ptr %71, ptr %69, align 8, !tbaa !26
  %72 = getelementptr inbounds %struct.sv, ptr %63, i64 %70, i32 2
  store i32 255, ptr %72, align 4, !tbaa !16
  %73 = add nuw nsw i64 %70, 1
  %74 = getelementptr inbounds %struct.sv, ptr %63, i64 %73
  %75 = getelementptr inbounds %struct.sv, ptr %74, i64 1
  store ptr %75, ptr %74, align 8, !tbaa !26
  %76 = getelementptr inbounds %struct.sv, ptr %63, i64 %73, i32 2
  store i32 255, ptr %76, align 4, !tbaa !16
  %77 = add nuw nsw i64 %70, 2
  %78 = getelementptr inbounds %struct.sv, ptr %63, i64 %77
  %79 = getelementptr inbounds %struct.sv, ptr %78, i64 1
  store ptr %79, ptr %78, align 8, !tbaa !26
  %80 = getelementptr inbounds %struct.sv, ptr %63, i64 %77, i32 2
  store i32 255, ptr %80, align 4, !tbaa !16
  %81 = add nuw nsw i64 %70, 3
  %82 = getelementptr inbounds %struct.sv, ptr %63, i64 %81
  %83 = getelementptr inbounds %struct.sv, ptr %82, i64 1
  store ptr %83, ptr %82, align 8, !tbaa !26
  %84 = getelementptr inbounds %struct.sv, ptr %63, i64 %81, i32 2
  store i32 255, ptr %84, align 4, !tbaa !16
  %85 = add nuw nsw i64 %70, 4
  %86 = getelementptr inbounds %struct.sv, ptr %63, i64 %85
  %87 = icmp eq i64 %85, 169
  br i1 %87, label %88, label %68, !llvm.loop !59

88:                                               ; preds = %68
  store ptr null, ptr %86, align 8, !tbaa !26
  %89 = getelementptr inbounds %struct.sv, ptr %63, i64 169, i32 2
  store i32 255, ptr %89, align 4, !tbaa !16
  %90 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %91

91:                                               ; preds = %58, %88
  %92 = phi ptr [ %90, %88 ], [ %60, %58 ]
  %93 = load ptr, ptr %92, align 8, !tbaa !26
  store ptr %93, ptr @PL_sv_root, align 8, !tbaa !9
  %94 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %95 = add nsw i64 %94, 1
  store i64 %95, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %92, align 8, !tbaa !26
  %96 = getelementptr inbounds %struct.sv, ptr %92, i64 0, i32 1
  store i32 1, ptr %96, align 8, !tbaa !13
  %97 = getelementptr inbounds %struct.sv, ptr %92, i64 0, i32 2
  store i32 0, ptr %97, align 4, !tbaa !16
  call void @Perl_sv_upgrade(ptr noundef nonnull %92, i32 noundef 3)
  %98 = load i8, ptr %4, align 1, !tbaa !5, !range !74, !noundef !75
  %99 = icmp eq i8 %98, 0
  %100 = sub nsw i32 0, %14
  %101 = select i1 %99, i32 %14, i32 %100
  %102 = call ptr @Perl_share_hek(ptr noundef %15, i32 noundef %101, i32 noundef %59) #17
  %103 = getelementptr inbounds %struct.hek, ptr %102, i64 0, i32 2
  %104 = getelementptr inbounds %struct.sv, ptr %92, i64 0, i32 3
  store ptr %103, ptr %104, align 8, !tbaa !17
  %105 = sext i32 %14 to i64
  %106 = load ptr, ptr %92, align 8, !tbaa !26
  %107 = getelementptr inbounds %struct.xpv, ptr %106, i64 0, i32 2
  store i64 %105, ptr %107, align 8, !tbaa !57
  %108 = getelementptr inbounds %struct.xpv, ptr %106, i64 0, i32 3
  store i64 0, ptr %108, align 8, !tbaa !17
  %109 = load i32, ptr %97, align 4, !tbaa !16
  %110 = or i32 %109, 268452864
  store i32 %110, ptr %97, align 4, !tbaa !16
  %111 = load i8, ptr %4, align 1, !tbaa !5, !range !74, !noundef !75
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %91
  %114 = or i32 %109, 805323776
  store i32 %114, ptr %97, align 4, !tbaa !16
  br label %115

115:                                              ; preds = %113, %91
  %116 = icmp eq ptr %15, %0
  br i1 %116, label %118, label %117

117:                                              ; preds = %115
  call void @Perl_safesysfree(ptr noundef %15) #17
  br label %118

118:                                              ; preds = %117, %115
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #17
  ret ptr %92
}

declare ptr @Perl_bytes_from_utf8(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @Perl_share_hek(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSVpv_share(ptr noundef %0, i32 noundef %1) local_unnamed_addr #1 {
  %3 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #18
  %4 = trunc i64 %3 to i32
  %5 = tail call ptr @Perl_newSVpvn_share(ptr noundef %0, i32 noundef %4, i32 noundef %1)
  ret ptr %5
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start(ptr) #11

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_vnewSVpvf(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %34

5:                                                ; preds = %2
  %6 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %7 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %7, ptr %6, align 8, !tbaa !26
  %8 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 1
  store i32 170, ptr %8, align 8, !tbaa !13
  %9 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  store i32 0, ptr %9, align 4, !tbaa !16
  store ptr %6, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %10 = getelementptr inbounds %struct.sv, ptr %6, i64 1
  store ptr %10, ptr @PL_sv_root, align 8, !tbaa !9
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi ptr [ %10, %5 ], [ %29, %11 ]
  %13 = phi i64 [ 1, %5 ], [ %28, %11 ]
  %14 = getelementptr inbounds %struct.sv, ptr %12, i64 1
  store ptr %14, ptr %12, align 8, !tbaa !26
  %15 = getelementptr inbounds %struct.sv, ptr %6, i64 %13, i32 2
  store i32 255, ptr %15, align 4, !tbaa !16
  %16 = add nuw nsw i64 %13, 1
  %17 = getelementptr inbounds %struct.sv, ptr %6, i64 %16
  %18 = getelementptr inbounds %struct.sv, ptr %17, i64 1
  store ptr %18, ptr %17, align 8, !tbaa !26
  %19 = getelementptr inbounds %struct.sv, ptr %6, i64 %16, i32 2
  store i32 255, ptr %19, align 4, !tbaa !16
  %20 = add nuw nsw i64 %13, 2
  %21 = getelementptr inbounds %struct.sv, ptr %6, i64 %20
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 1
  store ptr %22, ptr %21, align 8, !tbaa !26
  %23 = getelementptr inbounds %struct.sv, ptr %6, i64 %20, i32 2
  store i32 255, ptr %23, align 4, !tbaa !16
  %24 = add nuw nsw i64 %13, 3
  %25 = getelementptr inbounds %struct.sv, ptr %6, i64 %24
  %26 = getelementptr inbounds %struct.sv, ptr %25, i64 1
  store ptr %26, ptr %25, align 8, !tbaa !26
  %27 = getelementptr inbounds %struct.sv, ptr %6, i64 %24, i32 2
  store i32 255, ptr %27, align 4, !tbaa !16
  %28 = add nuw nsw i64 %13, 4
  %29 = getelementptr inbounds %struct.sv, ptr %6, i64 %28
  %30 = icmp eq i64 %28, 169
  br i1 %30, label %31, label %11, !llvm.loop !59

31:                                               ; preds = %11
  store ptr null, ptr %29, align 8, !tbaa !26
  %32 = getelementptr inbounds %struct.sv, ptr %6, i64 169, i32 2
  store i32 255, ptr %32, align 4, !tbaa !16
  %33 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %34

34:                                               ; preds = %2, %31
  %35 = phi ptr [ %33, %31 ], [ %3, %2 ]
  %36 = load ptr, ptr %35, align 8, !tbaa !26
  store ptr %36, ptr @PL_sv_root, align 8, !tbaa !9
  %37 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %38 = add nsw i64 %37, 1
  store i64 %38, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %35, align 8, !tbaa !26
  %39 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 1
  store i32 1, ptr %39, align 8, !tbaa !13
  %40 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 2
  store i32 0, ptr %40, align 4, !tbaa !16
  %41 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #18
  tail call void @Perl_sv_setpvn(ptr noundef nonnull %35, ptr noundef nonnull @.str.10, i64 noundef 0)
  tail call void @Perl_sv_vcatpvfn_flags(ptr noundef nonnull %35, ptr noundef %0, i64 noundef %41, ptr noundef %1, ptr noundef null, i32 noundef 0, ptr poison, i32 noundef 0)
  ret ptr %35
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end(ptr) #11

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_vsetpvfn(ptr noundef %0, ptr noundef %1, i64 noundef %2, ptr noundef %3, ptr nocapture noundef readonly %4, i32 noundef %5, ptr nocapture noundef readnone %6) local_unnamed_addr #1 {
  tail call void @Perl_sv_setpvn(ptr noundef %0, ptr noundef nonnull @.str.10, i64 noundef 0)
  tail call void @Perl_sv_vcatpvfn_flags(ptr noundef %0, ptr noundef %1, i64 noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %5, ptr poison, i32 noundef 0)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSVnv(double noundef nofpclass(nan inf) %0) local_unnamed_addr #1 {
  %2 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %3 = icmp eq ptr %2, null
  br i1 %3, label %4, label %33

4:                                                ; preds = %1
  %5 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %6 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %6, ptr %5, align 8, !tbaa !26
  %7 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 1
  store i32 170, ptr %7, align 8, !tbaa !13
  %8 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 2
  store i32 0, ptr %8, align 4, !tbaa !16
  store ptr %5, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %9 = getelementptr inbounds %struct.sv, ptr %5, i64 1
  store ptr %9, ptr @PL_sv_root, align 8, !tbaa !9
  br label %10

10:                                               ; preds = %10, %4
  %11 = phi ptr [ %9, %4 ], [ %28, %10 ]
  %12 = phi i64 [ 1, %4 ], [ %27, %10 ]
  %13 = getelementptr inbounds %struct.sv, ptr %11, i64 1
  store ptr %13, ptr %11, align 8, !tbaa !26
  %14 = getelementptr inbounds %struct.sv, ptr %5, i64 %12, i32 2
  store i32 255, ptr %14, align 4, !tbaa !16
  %15 = add nuw nsw i64 %12, 1
  %16 = getelementptr inbounds %struct.sv, ptr %5, i64 %15
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 1
  store ptr %17, ptr %16, align 8, !tbaa !26
  %18 = getelementptr inbounds %struct.sv, ptr %5, i64 %15, i32 2
  store i32 255, ptr %18, align 4, !tbaa !16
  %19 = add nuw nsw i64 %12, 2
  %20 = getelementptr inbounds %struct.sv, ptr %5, i64 %19
  %21 = getelementptr inbounds %struct.sv, ptr %20, i64 1
  store ptr %21, ptr %20, align 8, !tbaa !26
  %22 = getelementptr inbounds %struct.sv, ptr %5, i64 %19, i32 2
  store i32 255, ptr %22, align 4, !tbaa !16
  %23 = add nuw nsw i64 %12, 3
  %24 = getelementptr inbounds %struct.sv, ptr %5, i64 %23
  %25 = getelementptr inbounds %struct.sv, ptr %24, i64 1
  store ptr %25, ptr %24, align 8, !tbaa !26
  %26 = getelementptr inbounds %struct.sv, ptr %5, i64 %23, i32 2
  store i32 255, ptr %26, align 4, !tbaa !16
  %27 = add nuw nsw i64 %12, 4
  %28 = getelementptr inbounds %struct.sv, ptr %5, i64 %27
  %29 = icmp eq i64 %27, 169
  br i1 %29, label %30, label %10, !llvm.loop !59

30:                                               ; preds = %10
  store ptr null, ptr %28, align 8, !tbaa !26
  %31 = getelementptr inbounds %struct.sv, ptr %5, i64 169, i32 2
  store i32 255, ptr %31, align 4, !tbaa !16
  %32 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %33

33:                                               ; preds = %1, %30
  %34 = phi ptr [ %32, %30 ], [ %2, %1 ]
  %35 = load ptr, ptr %34, align 8, !tbaa !26
  store ptr %35, ptr @PL_sv_root, align 8, !tbaa !9
  %36 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %37 = add nsw i64 %36, 1
  store i64 %37, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %34, align 8, !tbaa !26
  %38 = getelementptr inbounds %struct.sv, ptr %34, i64 0, i32 1
  store i32 1, ptr %38, align 8, !tbaa !13
  %39 = getelementptr inbounds %struct.sv, ptr %34, i64 0, i32 2
  store i32 0, ptr %39, align 4, !tbaa !16
  tail call void @Perl_sv_setnv(ptr noundef nonnull %34, double noundef nofpclass(nan inf) %0)
  ret ptr %34
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSViv(i64 noundef %0) local_unnamed_addr #1 {
  %2 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %3 = icmp eq ptr %2, null
  br i1 %3, label %4, label %33

4:                                                ; preds = %1
  %5 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %6 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %6, ptr %5, align 8, !tbaa !26
  %7 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 1
  store i32 170, ptr %7, align 8, !tbaa !13
  %8 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 2
  store i32 0, ptr %8, align 4, !tbaa !16
  store ptr %5, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %9 = getelementptr inbounds %struct.sv, ptr %5, i64 1
  store ptr %9, ptr @PL_sv_root, align 8, !tbaa !9
  br label %10

10:                                               ; preds = %10, %4
  %11 = phi ptr [ %9, %4 ], [ %28, %10 ]
  %12 = phi i64 [ 1, %4 ], [ %27, %10 ]
  %13 = getelementptr inbounds %struct.sv, ptr %11, i64 1
  store ptr %13, ptr %11, align 8, !tbaa !26
  %14 = getelementptr inbounds %struct.sv, ptr %5, i64 %12, i32 2
  store i32 255, ptr %14, align 4, !tbaa !16
  %15 = add nuw nsw i64 %12, 1
  %16 = getelementptr inbounds %struct.sv, ptr %5, i64 %15
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 1
  store ptr %17, ptr %16, align 8, !tbaa !26
  %18 = getelementptr inbounds %struct.sv, ptr %5, i64 %15, i32 2
  store i32 255, ptr %18, align 4, !tbaa !16
  %19 = add nuw nsw i64 %12, 2
  %20 = getelementptr inbounds %struct.sv, ptr %5, i64 %19
  %21 = getelementptr inbounds %struct.sv, ptr %20, i64 1
  store ptr %21, ptr %20, align 8, !tbaa !26
  %22 = getelementptr inbounds %struct.sv, ptr %5, i64 %19, i32 2
  store i32 255, ptr %22, align 4, !tbaa !16
  %23 = add nuw nsw i64 %12, 3
  %24 = getelementptr inbounds %struct.sv, ptr %5, i64 %23
  %25 = getelementptr inbounds %struct.sv, ptr %24, i64 1
  store ptr %25, ptr %24, align 8, !tbaa !26
  %26 = getelementptr inbounds %struct.sv, ptr %5, i64 %23, i32 2
  store i32 255, ptr %26, align 4, !tbaa !16
  %27 = add nuw nsw i64 %12, 4
  %28 = getelementptr inbounds %struct.sv, ptr %5, i64 %27
  %29 = icmp eq i64 %27, 169
  br i1 %29, label %30, label %10, !llvm.loop !59

30:                                               ; preds = %10
  store ptr null, ptr %28, align 8, !tbaa !26
  %31 = getelementptr inbounds %struct.sv, ptr %5, i64 169, i32 2
  store i32 255, ptr %31, align 4, !tbaa !16
  %32 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %33

33:                                               ; preds = %1, %30
  %34 = phi ptr [ %32, %30 ], [ %2, %1 ]
  %35 = load ptr, ptr %34, align 8, !tbaa !26
  store ptr %35, ptr @PL_sv_root, align 8, !tbaa !9
  %36 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %37 = add nsw i64 %36, 1
  store i64 %37, ptr @PL_sv_count, align 8, !tbaa !60
  %38 = getelementptr inbounds %struct.sv, ptr %34, i64 0, i32 1
  store i32 1, ptr %38, align 8, !tbaa !13
  %39 = getelementptr inbounds %struct.sv, ptr %34, i64 0, i32 2
  %40 = getelementptr %struct.sv, ptr %34, i64 -1, i32 1
  store ptr %40, ptr %34, align 8, !tbaa !26
  store i32 4353, ptr %39, align 4, !tbaa !16
  %41 = getelementptr %struct.sv, ptr %34, i64 0, i32 3
  store i64 %0, ptr %41, align 8, !tbaa !17
  %42 = load i8, ptr @PL_tainting, align 1, !tbaa !5, !range !74, !noundef !75
  %43 = icmp eq i8 %42, 0
  %44 = load i8, ptr @PL_tainted, align 1, !range !74
  %45 = icmp eq i8 %44, 0
  %46 = select i1 %43, i1 true, i1 %45
  br i1 %46, label %48, label %47

47:                                               ; preds = %33
  tail call void @Perl_sv_magic(ptr noundef nonnull %34, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0)
  br label %48

48:                                               ; preds = %47, %33
  ret ptr %34
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newRV_noinc(ptr noundef %0) local_unnamed_addr #1 {
  %2 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %3 = icmp eq ptr %2, null
  br i1 %3, label %4, label %33

4:                                                ; preds = %1
  %5 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %6 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %6, ptr %5, align 8, !tbaa !26
  %7 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 1
  store i32 170, ptr %7, align 8, !tbaa !13
  %8 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 2
  store i32 0, ptr %8, align 4, !tbaa !16
  store ptr %5, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %9 = getelementptr inbounds %struct.sv, ptr %5, i64 1
  store ptr %9, ptr @PL_sv_root, align 8, !tbaa !9
  br label %10

10:                                               ; preds = %10, %4
  %11 = phi ptr [ %9, %4 ], [ %28, %10 ]
  %12 = phi i64 [ 1, %4 ], [ %27, %10 ]
  %13 = getelementptr inbounds %struct.sv, ptr %11, i64 1
  store ptr %13, ptr %11, align 8, !tbaa !26
  %14 = getelementptr inbounds %struct.sv, ptr %5, i64 %12, i32 2
  store i32 255, ptr %14, align 4, !tbaa !16
  %15 = add nuw nsw i64 %12, 1
  %16 = getelementptr inbounds %struct.sv, ptr %5, i64 %15
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 1
  store ptr %17, ptr %16, align 8, !tbaa !26
  %18 = getelementptr inbounds %struct.sv, ptr %5, i64 %15, i32 2
  store i32 255, ptr %18, align 4, !tbaa !16
  %19 = add nuw nsw i64 %12, 2
  %20 = getelementptr inbounds %struct.sv, ptr %5, i64 %19
  %21 = getelementptr inbounds %struct.sv, ptr %20, i64 1
  store ptr %21, ptr %20, align 8, !tbaa !26
  %22 = getelementptr inbounds %struct.sv, ptr %5, i64 %19, i32 2
  store i32 255, ptr %22, align 4, !tbaa !16
  %23 = add nuw nsw i64 %12, 3
  %24 = getelementptr inbounds %struct.sv, ptr %5, i64 %23
  %25 = getelementptr inbounds %struct.sv, ptr %24, i64 1
  store ptr %25, ptr %24, align 8, !tbaa !26
  %26 = getelementptr inbounds %struct.sv, ptr %5, i64 %23, i32 2
  store i32 255, ptr %26, align 4, !tbaa !16
  %27 = add nuw nsw i64 %12, 4
  %28 = getelementptr inbounds %struct.sv, ptr %5, i64 %27
  %29 = icmp eq i64 %27, 169
  br i1 %29, label %30, label %10, !llvm.loop !59

30:                                               ; preds = %10
  store ptr null, ptr %28, align 8, !tbaa !26
  %31 = getelementptr inbounds %struct.sv, ptr %5, i64 169, i32 2
  store i32 255, ptr %31, align 4, !tbaa !16
  %32 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %33

33:                                               ; preds = %1, %30
  %34 = phi ptr [ %32, %30 ], [ %2, %1 ]
  %35 = load ptr, ptr %34, align 8, !tbaa !26
  store ptr %35, ptr @PL_sv_root, align 8, !tbaa !9
  %36 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %37 = add nsw i64 %36, 1
  store i64 %37, ptr @PL_sv_count, align 8, !tbaa !60
  %38 = getelementptr inbounds %struct.sv, ptr %34, i64 0, i32 1
  store i32 1, ptr %38, align 8, !tbaa !13
  %39 = getelementptr inbounds %struct.sv, ptr %34, i64 0, i32 2
  %40 = getelementptr inbounds %struct.sv, ptr %34, i64 0, i32 3
  %41 = getelementptr %struct.sv, ptr %34, i64 -1, i32 1
  store ptr %41, ptr %34, align 8, !tbaa !26
  store i32 2049, ptr %39, align 4, !tbaa !16
  store i64 0, ptr %40, align 8, !tbaa !17
  %42 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %43 = load i32, ptr %42, align 4, !tbaa !16
  %44 = and i32 %43, -524289
  store i32 %44, ptr %42, align 4, !tbaa !16
  store ptr %0, ptr %40, align 8, !tbaa !17
  ret ptr %34
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newRV(ptr noundef %0) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 8, !tbaa !13
  %4 = add i32 %3, 1
  store i32 %4, ptr %2, align 8, !tbaa !13
  %5 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %36

7:                                                ; preds = %1
  %8 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %9 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %9, ptr %8, align 8, !tbaa !26
  %10 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 1
  store i32 170, ptr %10, align 8, !tbaa !13
  %11 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 2
  store i32 0, ptr %11, align 4, !tbaa !16
  store ptr %8, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %12 = getelementptr inbounds %struct.sv, ptr %8, i64 1
  store ptr %12, ptr @PL_sv_root, align 8, !tbaa !9
  br label %13

13:                                               ; preds = %13, %7
  %14 = phi ptr [ %12, %7 ], [ %31, %13 ]
  %15 = phi i64 [ 1, %7 ], [ %30, %13 ]
  %16 = getelementptr inbounds %struct.sv, ptr %14, i64 1
  store ptr %16, ptr %14, align 8, !tbaa !26
  %17 = getelementptr inbounds %struct.sv, ptr %8, i64 %15, i32 2
  store i32 255, ptr %17, align 4, !tbaa !16
  %18 = add nuw nsw i64 %15, 1
  %19 = getelementptr inbounds %struct.sv, ptr %8, i64 %18
  %20 = getelementptr inbounds %struct.sv, ptr %19, i64 1
  store ptr %20, ptr %19, align 8, !tbaa !26
  %21 = getelementptr inbounds %struct.sv, ptr %8, i64 %18, i32 2
  store i32 255, ptr %21, align 4, !tbaa !16
  %22 = add nuw nsw i64 %15, 2
  %23 = getelementptr inbounds %struct.sv, ptr %8, i64 %22
  %24 = getelementptr inbounds %struct.sv, ptr %23, i64 1
  store ptr %24, ptr %23, align 8, !tbaa !26
  %25 = getelementptr inbounds %struct.sv, ptr %8, i64 %22, i32 2
  store i32 255, ptr %25, align 4, !tbaa !16
  %26 = add nuw nsw i64 %15, 3
  %27 = getelementptr inbounds %struct.sv, ptr %8, i64 %26
  %28 = getelementptr inbounds %struct.sv, ptr %27, i64 1
  store ptr %28, ptr %27, align 8, !tbaa !26
  %29 = getelementptr inbounds %struct.sv, ptr %8, i64 %26, i32 2
  store i32 255, ptr %29, align 4, !tbaa !16
  %30 = add nuw nsw i64 %15, 4
  %31 = getelementptr inbounds %struct.sv, ptr %8, i64 %30
  %32 = icmp eq i64 %30, 169
  br i1 %32, label %33, label %13, !llvm.loop !59

33:                                               ; preds = %13
  store ptr null, ptr %31, align 8, !tbaa !26
  %34 = getelementptr inbounds %struct.sv, ptr %8, i64 169, i32 2
  store i32 255, ptr %34, align 4, !tbaa !16
  %35 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %36

36:                                               ; preds = %1, %33
  %37 = phi ptr [ %35, %33 ], [ %5, %1 ]
  %38 = load ptr, ptr %37, align 8, !tbaa !26
  store ptr %38, ptr @PL_sv_root, align 8, !tbaa !9
  %39 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %40 = add nsw i64 %39, 1
  store i64 %40, ptr @PL_sv_count, align 8, !tbaa !60
  %41 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 1
  store i32 1, ptr %41, align 8, !tbaa !13
  %42 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 2
  %43 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 3
  %44 = getelementptr %struct.sv, ptr %37, i64 -1, i32 1
  store ptr %44, ptr %37, align 8, !tbaa !26
  store i32 2049, ptr %42, align 4, !tbaa !16
  store i64 0, ptr %43, align 8, !tbaa !17
  %45 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %46 = load i32, ptr %45, align 4, !tbaa !16
  %47 = and i32 %46, -524289
  store i32 %47, ptr %45, align 4, !tbaa !16
  store ptr %0, ptr %43, align 8, !tbaa !17
  ret ptr %37
}

declare void @Perl_ck_warner_d(i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_reset(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = load i8, ptr %0, align 1, !tbaa !17
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, ptr null, ptr %0
  %6 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #18
  tail call void @Perl_sv_resetpvn(ptr noundef %5, i64 noundef %6, ptr noundef %1)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_resetpvn(ptr noundef readonly %0, i64 noundef %1, ptr noundef %2) local_unnamed_addr #1 {
  %4 = alloca [256 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %4) #17
  %5 = icmp eq ptr %2, null
  br i1 %5, label %182, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.hv, ptr %2, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !64
  %9 = and i32 %8, 255
  %10 = icmp eq i32 %9, 12
  br i1 %10, label %11, label %182

11:                                               ; preds = %6
  %12 = icmp eq ptr %0, null
  br i1 %12, label %13, label %33

13:                                               ; preds = %11
  %14 = tail call ptr @Perl_mg_find(ptr noundef nonnull %2, i32 noundef 58) #17
  %15 = icmp eq ptr %14, null
  br i1 %15, label %182, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.magic, ptr %14, i64 0, i32 5
  %18 = load i64, ptr %17, align 8, !tbaa !76
  %19 = lshr i64 %18, 3
  %20 = getelementptr inbounds %struct.magic, ptr %14, i64 0, i32 7
  %21 = load ptr, ptr %20, align 8, !tbaa !109
  %22 = and i64 %19, 4294967295
  %23 = getelementptr inbounds ptr, ptr %21, i64 %22
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %182, label %25

25:                                               ; preds = %16, %25
  %26 = phi ptr [ %31, %25 ], [ %21, %16 ]
  %27 = load ptr, ptr %26, align 8, !tbaa !9
  %28 = getelementptr inbounds %struct.pmop, ptr %27, i64 0, i32 10
  %29 = load i32, ptr %28, align 8, !tbaa !179
  %30 = and i32 %29, -2097153
  store i32 %30, ptr %28, align 8, !tbaa !179
  %31 = getelementptr inbounds ptr, ptr %26, i64 1
  %32 = icmp ult ptr %31, %23
  br i1 %32, label %25, label %182, !llvm.loop !181

33:                                               ; preds = %11
  %34 = getelementptr inbounds %struct.hv, ptr %2, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !17
  %36 = icmp eq ptr %35, null
  br i1 %36, label %182, label %37

37:                                               ; preds = %33
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(256) %4, i8 0, i64 256, i1 false)
  %38 = getelementptr inbounds i8, ptr %0, i64 %1
  %39 = icmp sgt i64 %1, 0
  br i1 %39, label %42, label %182

40:                                               ; preds = %174, %61
  %41 = icmp ult ptr %50, %38
  br i1 %41, label %42, label %182, !llvm.loop !182

42:                                               ; preds = %37, %40
  %43 = phi ptr [ %50, %40 ], [ %0, %37 ]
  %44 = load i8, ptr %43, align 1, !tbaa !17
  %45 = getelementptr inbounds i8, ptr %43, i64 1
  %46 = load i8, ptr %45, align 1, !tbaa !17
  %47 = icmp eq i8 %46, 45
  %48 = select i1 %47, i64 2, i64 0
  %49 = getelementptr inbounds i8, ptr %43, i64 %48
  %50 = getelementptr inbounds i8, ptr %49, i64 1
  %51 = load i8, ptr %49, align 1, !tbaa !17
  %52 = icmp ugt i8 %44, %51
  br i1 %52, label %61, label %53

53:                                               ; preds = %42
  %54 = zext i8 %51 to i64
  %55 = zext i8 %44 to i64
  %56 = zext i8 %44 to i64
  %57 = getelementptr i8, ptr %4, i64 %56
  %58 = sub nsw i64 %54, %55
  %59 = and i64 %58, 4294967295
  %60 = add nuw nsw i64 %59, 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %57, i8 1, i64 %60, i1 false), !tbaa !17
  br label %61

61:                                               ; preds = %53, %42
  %62 = load ptr, ptr %2, align 8, !tbaa !66
  %63 = getelementptr inbounds %struct.xpvhv, ptr %62, i64 0, i32 3
  %64 = load i64, ptr %63, align 8, !tbaa !48
  %65 = and i64 %64, 2147483648
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %40

67:                                               ; preds = %61, %174
  %68 = phi ptr [ %175, %174 ], [ %62, %61 ]
  %69 = phi i64 [ %176, %174 ], [ 0, %61 ]
  %70 = load ptr, ptr %34, align 8, !tbaa !17
  %71 = getelementptr inbounds ptr, ptr %70, i64 %69
  %72 = load ptr, ptr %71, align 8, !tbaa !9
  %73 = icmp eq ptr %72, null
  br i1 %73, label %174, label %74

74:                                               ; preds = %67, %169
  %75 = phi ptr [ %170, %169 ], [ %72, %67 ]
  %76 = getelementptr inbounds %struct.he, ptr %75, i64 0, i32 1
  %77 = load ptr, ptr %76, align 8, !tbaa !148
  %78 = getelementptr inbounds %struct.hek, ptr %77, i64 0, i32 2
  %79 = load i8, ptr %78, align 4, !tbaa !17
  %80 = zext i8 %79 to i64
  %81 = getelementptr inbounds [256 x i8], ptr %4, i64 0, i64 %80
  %82 = load i8, ptr %81, align 1, !tbaa !17
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %169, label %84

84:                                               ; preds = %74
  %85 = getelementptr inbounds %struct.he, ptr %75, i64 0, i32 2
  %86 = load ptr, ptr %85, align 8, !tbaa !17
  %87 = getelementptr inbounds %struct.gv, ptr %86, i64 0, i32 3
  %88 = load ptr, ptr %87, align 8, !tbaa !17
  %89 = load ptr, ptr %88, align 8, !tbaa !19
  %90 = icmp eq ptr %89, null
  br i1 %90, label %134, label %91

91:                                               ; preds = %84
  %92 = getelementptr inbounds %struct.sv, ptr %89, i64 0, i32 2
  %93 = load i32, ptr %92, align 4, !tbaa !16
  %94 = and i32 %93, 134283264
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %134

96:                                               ; preds = %91
  %97 = and i32 %93, 427886592
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %96
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %89, i32 noundef 4)
  %100 = load i32, ptr %92, align 4, !tbaa !16
  br label %101

101:                                              ; preds = %99, %96
  %102 = phi i32 [ %100, %99 ], [ %93, %96 ]
  %103 = and i32 %102, 255
  %104 = icmp eq i32 %103, 9
  br i1 %104, label %134, label %105

105:                                              ; preds = %101
  %106 = and i32 %102, 1610547455
  store i32 %106, ptr %92, align 4, !tbaa !16
  %107 = and i32 %102, 33554432
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %134, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %struct.sv, ptr %89, i64 0, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !17
  %112 = getelementptr inbounds i8, ptr %111, i64 -1
  %113 = load i8, ptr %112, align 1, !tbaa !17
  %114 = zext i8 %113 to i64
  %115 = icmp eq i8 %113, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %109
  %117 = getelementptr inbounds i8, ptr %111, i64 -9
  %118 = load i64, ptr %117, align 1
  br label %119

119:                                              ; preds = %109, %116
  %120 = phi i64 [ %114, %109 ], [ %118, %116 ]
  %121 = load ptr, ptr %89, align 8, !tbaa !26
  %122 = getelementptr inbounds %struct.xpv, ptr %121, i64 0, i32 3
  %123 = load i64, ptr %122, align 8, !tbaa !17
  %124 = add i64 %123, %120
  store i64 %124, ptr %122, align 8, !tbaa !17
  %125 = load ptr, ptr %110, align 8, !tbaa !17
  %126 = sub i64 0, %120
  %127 = getelementptr inbounds i8, ptr %125, i64 %126
  store ptr %127, ptr %110, align 8, !tbaa !17
  %128 = load ptr, ptr %89, align 8, !tbaa !26
  %129 = getelementptr inbounds %struct.xpv, ptr %128, i64 0, i32 2
  %130 = load i64, ptr %129, align 8, !tbaa !57
  %131 = add i64 %130, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %127, ptr nonnull align 1 %111, i64 %131, i1 false)
  %132 = load i32, ptr %92, align 4, !tbaa !16
  %133 = and i32 %132, -33554433
  store i32 %133, ptr %92, align 4, !tbaa !16
  br label %134

134:                                              ; preds = %105, %119, %101, %91, %84
  %135 = load ptr, ptr %87, align 8, !tbaa !17
  %136 = getelementptr inbounds %struct.gp, ptr %135, i64 0, i32 6
  %137 = load ptr, ptr %136, align 8, !tbaa !21
  %138 = icmp eq ptr %137, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %134
  tail call void @Perl_av_clear(ptr noundef nonnull %137) #17
  %140 = load ptr, ptr %87, align 8, !tbaa !17
  br label %141

141:                                              ; preds = %139, %134
  %142 = phi ptr [ %140, %139 ], [ %135, %134 ]
  %143 = getelementptr inbounds %struct.gp, ptr %142, i64 0, i32 5
  %144 = load ptr, ptr %143, align 8, !tbaa !22
  %145 = icmp eq ptr %144, null
  br i1 %145, label %169, label %146

146:                                              ; preds = %141
  %147 = getelementptr inbounds %struct.hv, ptr %144, i64 0, i32 2
  %148 = load i32, ptr %147, align 4, !tbaa !64
  %149 = and i32 %148, 33554432
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %168, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %struct.hv, ptr %144, i64 0, i32 3
  %153 = load ptr, ptr %152, align 8, !tbaa !17
  %154 = load ptr, ptr %144, align 8, !tbaa !66
  %155 = getelementptr inbounds %struct.xpvhv, ptr %154, i64 0, i32 3
  %156 = load i64, ptr %155, align 8, !tbaa !48
  %157 = add i64 %156, 1
  %158 = getelementptr inbounds ptr, ptr %153, i64 %157
  %159 = load ptr, ptr %158, align 8, !tbaa !17
  %160 = icmp eq ptr %159, null
  br i1 %160, label %168, label %161

161:                                              ; preds = %151
  %162 = getelementptr inbounds %struct.xpvhv_aux, ptr %158, i64 0, i32 4
  %163 = load i32, ptr %162, align 4, !tbaa !67
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %169, label %165

165:                                              ; preds = %161
  %166 = load ptr, ptr %159, align 8, !tbaa !9
  %167 = icmp eq ptr %166, null
  br i1 %167, label %168, label %169

168:                                              ; preds = %146, %151, %165
  tail call void @Perl_hv_clear(ptr noundef nonnull %144) #17
  br label %169

169:                                              ; preds = %141, %168, %165, %161, %74
  %170 = load ptr, ptr %75, align 8, !tbaa !9
  %171 = icmp eq ptr %170, null
  br i1 %171, label %172, label %74, !llvm.loop !183

172:                                              ; preds = %169
  %173 = load ptr, ptr %2, align 8, !tbaa !66
  br label %174

174:                                              ; preds = %172, %67
  %175 = phi ptr [ %173, %172 ], [ %68, %67 ]
  %176 = add nuw nsw i64 %69, 1
  %177 = getelementptr inbounds %struct.xpvhv, ptr %175, i64 0, i32 3
  %178 = load i64, ptr %177, align 8, !tbaa !48
  %179 = shl i64 %178, 32
  %180 = ashr exact i64 %179, 32
  %181 = icmp slt i64 %69, %180
  br i1 %181, label %67, label %40, !llvm.loop !184

182:                                              ; preds = %40, %25, %37, %16, %33, %13, %3, %6
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %4) #17
  ret void
}

declare void @Perl_av_clear(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_2io(ptr noundef %0) local_unnamed_addr #1 {
  br label %2

2:                                                ; preds = %48, %1
  %3 = phi ptr [ %0, %1 ], [ %49, %48 ]
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = trunc i32 %5 to i8
  switch i8 %6, label %26 [
    i8 15, label %125
    i8 9, label %7
    i8 10, label %7
  ]

7:                                                ; preds = %2, %2
  %8 = and i32 %5, 49152
  %9 = icmp eq i32 %8, 32768
  br i1 %9, label %10, label %26

10:                                               ; preds = %7
  %11 = and i32 %5, 255
  %12 = add nsw i32 %11, -9
  %13 = icmp ult i32 %12, 2
  br i1 %13, label %14, label %26

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.gv, ptr %3, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = icmp eq ptr %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.gp, ptr %16, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !24
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %125

22:                                               ; preds = %14, %18
  %23 = load ptr, ptr %3, align 8, !tbaa !62
  %24 = getelementptr inbounds %struct.xpvgv, ptr %23, i64 0, i32 4
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.45, ptr noundef %25) #17
  br label %125

26:                                               ; preds = %10, %7, %2
  %27 = and i32 %5, 65280
  %28 = icmp ne i32 %27, 0
  %29 = and i32 %5, 255
  %30 = icmp eq i32 %29, 8
  %31 = or i1 %28, %30
  %32 = and i32 %5, 16826623
  %33 = icmp eq i32 %32, 16777226
  %34 = or i1 %33, %31
  br i1 %34, label %37, label %35

35:                                               ; preds = %26
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @PL_no_usym, ptr noundef nonnull @.str.46) #17
  %36 = load i32, ptr %4, align 4, !tbaa !16
  br label %37

37:                                               ; preds = %35, %26
  %38 = phi i32 [ %36, %35 ], [ %5, %26 ]
  %39 = and i32 %38, 2048
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %53, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  %44 = getelementptr inbounds %struct.sv, ptr %43, i64 0, i32 2
  %45 = load i32, ptr %44, align 4, !tbaa !16
  %46 = and i32 %45, 2097152
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %41, %50
  %49 = phi ptr [ %43, %41 ], [ %52, %50 ]
  br label %2

50:                                               ; preds = %41
  %51 = tail call i32 @Perl_mg_get(ptr noundef nonnull %43) #17
  %52 = load ptr, ptr %42, align 8, !tbaa !17
  br label %48

53:                                               ; preds = %37
  %54 = tail call ptr @Perl_gv_fetchsv(ptr noundef nonnull %3, i32 noundef 2048, i32 noundef 15) #17
  %55 = icmp eq ptr %54, null
  br i1 %55, label %70, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %struct.sv, ptr %54, i64 0, i32 2
  %58 = load i32, ptr %57, align 4, !tbaa !16
  %59 = and i32 %58, 255
  %60 = add nsw i32 %59, -9
  %61 = icmp ult i32 %60, 2
  br i1 %61, label %62, label %70

62:                                               ; preds = %56
  %63 = getelementptr inbounds %struct.gv, ptr %54, i64 0, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !17
  %65 = icmp eq ptr %64, null
  br i1 %65, label %70, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.gp, ptr %64, i64 0, i32 1
  %68 = load ptr, ptr %67, align 8, !tbaa !24
  %69 = icmp eq ptr %68, null
  br i1 %69, label %70, label %125

70:                                               ; preds = %53, %56, %62, %66
  %71 = load i32, ptr %4, align 4, !tbaa !16
  %72 = and i32 %71, 2097152
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %123, label %74

74:                                               ; preds = %70
  %75 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %76 = icmp eq ptr %75, null
  br i1 %76, label %77, label %106

77:                                               ; preds = %74
  %78 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %79 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %79, ptr %78, align 8, !tbaa !26
  %80 = getelementptr inbounds %struct.sv, ptr %78, i64 0, i32 1
  store i32 170, ptr %80, align 8, !tbaa !13
  %81 = getelementptr inbounds %struct.sv, ptr %78, i64 0, i32 2
  store i32 0, ptr %81, align 4, !tbaa !16
  store ptr %78, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %82 = getelementptr inbounds %struct.sv, ptr %78, i64 1
  store ptr %82, ptr @PL_sv_root, align 8, !tbaa !9
  br label %83

83:                                               ; preds = %83, %77
  %84 = phi ptr [ %82, %77 ], [ %101, %83 ]
  %85 = phi i64 [ 1, %77 ], [ %100, %83 ]
  %86 = getelementptr inbounds %struct.sv, ptr %84, i64 1
  store ptr %86, ptr %84, align 8, !tbaa !26
  %87 = getelementptr inbounds %struct.sv, ptr %78, i64 %85, i32 2
  store i32 255, ptr %87, align 4, !tbaa !16
  %88 = add nuw nsw i64 %85, 1
  %89 = getelementptr inbounds %struct.sv, ptr %78, i64 %88
  %90 = getelementptr inbounds %struct.sv, ptr %89, i64 1
  store ptr %90, ptr %89, align 8, !tbaa !26
  %91 = getelementptr inbounds %struct.sv, ptr %78, i64 %88, i32 2
  store i32 255, ptr %91, align 4, !tbaa !16
  %92 = add nuw nsw i64 %85, 2
  %93 = getelementptr inbounds %struct.sv, ptr %78, i64 %92
  %94 = getelementptr inbounds %struct.sv, ptr %93, i64 1
  store ptr %94, ptr %93, align 8, !tbaa !26
  %95 = getelementptr inbounds %struct.sv, ptr %78, i64 %92, i32 2
  store i32 255, ptr %95, align 4, !tbaa !16
  %96 = add nuw nsw i64 %85, 3
  %97 = getelementptr inbounds %struct.sv, ptr %78, i64 %96
  %98 = getelementptr inbounds %struct.sv, ptr %97, i64 1
  store ptr %98, ptr %97, align 8, !tbaa !26
  %99 = getelementptr inbounds %struct.sv, ptr %78, i64 %96, i32 2
  store i32 255, ptr %99, align 4, !tbaa !16
  %100 = add nuw nsw i64 %85, 4
  %101 = getelementptr inbounds %struct.sv, ptr %78, i64 %100
  %102 = icmp eq i64 %100, 169
  br i1 %102, label %103, label %83, !llvm.loop !59

103:                                              ; preds = %83
  store ptr null, ptr %101, align 8, !tbaa !26
  %104 = getelementptr inbounds %struct.sv, ptr %78, i64 169, i32 2
  store i32 255, ptr %104, align 4, !tbaa !16
  %105 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %106

106:                                              ; preds = %103, %74
  %107 = phi ptr [ %105, %103 ], [ %75, %74 ]
  %108 = load ptr, ptr %107, align 8, !tbaa !26
  store ptr %108, ptr @PL_sv_root, align 8, !tbaa !9
  %109 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %110 = add nsw i64 %109, 1
  store i64 %110, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %107, align 8, !tbaa !26
  %111 = getelementptr inbounds %struct.sv, ptr %107, i64 0, i32 1
  store i32 1, ptr %111, align 8, !tbaa !13
  %112 = getelementptr inbounds %struct.sv, ptr %107, i64 0, i32 2
  store i32 524288, ptr %112, align 4, !tbaa !16
  %113 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %114 = add nsw i64 %113, 1
  store i64 %114, ptr @PL_tmps_ix, align 8, !tbaa !60
  %115 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %116 = icmp slt i64 %114, %115
  br i1 %116, label %119, label %117

117:                                              ; preds = %106
  %118 = tail call i64 @Perl_tmps_grow_p(i64 noundef %114) #17
  br label %119

119:                                              ; preds = %106, %117
  %120 = phi i64 [ %118, %117 ], [ %114, %106 ]
  %121 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %122 = getelementptr inbounds ptr, ptr %121, i64 %120
  store ptr %107, ptr %122, align 8, !tbaa !9
  tail call void @Perl_sv_setsv_flags(ptr noundef nonnull %107, ptr noundef %3, i32 noundef 1536)
  br label %123

123:                                              ; preds = %119, %70
  %124 = phi ptr [ %107, %119 ], [ %3, %70 ]
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.47, ptr noundef nonnull %124) #17
  br label %125

125:                                              ; preds = %2, %22, %18, %123, %66
  %126 = phi ptr [ %68, %66 ], [ null, %123 ], [ %20, %18 ], [ null, %22 ], [ %3, %2 ]
  ret ptr %126
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_2cv(ptr noundef %0, ptr nocapture noundef writeonly %1, ptr nocapture noundef writeonly %2, i32 noundef %3) local_unnamed_addr #1 {
  %5 = icmp eq ptr %0, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  store ptr null, ptr %1, align 8, !tbaa !9
  store ptr null, ptr %2, align 8, !tbaa !9
  br label %128

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !16
  %10 = trunc i32 %9 to i8
  switch i8 %10, label %16 [
    i8 13, label %11
    i8 12, label %15
    i8 11, label %15
  ]

11:                                               ; preds = %7
  %12 = load ptr, ptr %0, align 8, !tbaa !26
  %13 = getelementptr inbounds %struct.xpvcv, ptr %12, i64 0, i32 4
  %14 = load ptr, ptr %13, align 8, !tbaa !134
  store ptr %14, ptr %1, align 8, !tbaa !9
  store ptr null, ptr %2, align 8, !tbaa !9
  br label %128

15:                                               ; preds = %7, %7
  store ptr null, ptr %1, align 8, !tbaa !9
  store ptr null, ptr %2, align 8, !tbaa !9
  br label %128

16:                                               ; preds = %7
  %17 = and i32 %9, 2097152
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = tail call i32 @Perl_mg_get(ptr noundef nonnull %0) #17
  %21 = load i32, ptr %8, align 4, !tbaa !16
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi i32 [ %9, %16 ], [ %21, %19 ]
  %24 = and i32 %23, 2048
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %71, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %28 = load ptr, ptr %27, align 8, !tbaa !17
  %29 = getelementptr inbounds %struct.sv, ptr %28, i64 0, i32 2
  %30 = load i32, ptr %29, align 4, !tbaa !16
  %31 = and i32 %30, 1048576
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %46, label %33

33:                                               ; preds = %26
  %34 = load ptr, ptr %28, align 8, !tbaa !26
  %35 = load ptr, ptr %34, align 8, !tbaa !50
  %36 = getelementptr inbounds %struct.hv, ptr %35, i64 0, i32 2
  %37 = load i32, ptr %36, align 4, !tbaa !64
  %38 = and i32 %37, 268435456
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %33
  %41 = tail call ptr @Perl_amagic_deref_call(ptr noundef nonnull %0, i32 noundef 5) #17
  %42 = getelementptr inbounds %struct.sv, ptr %41, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  %44 = getelementptr inbounds %struct.sv, ptr %43, i64 0, i32 2
  %45 = load i32, ptr %44, align 4, !tbaa !16
  br label %46

46:                                               ; preds = %40, %33, %26
  %47 = phi i32 [ %45, %40 ], [ %30, %33 ], [ %30, %26 ]
  %48 = phi ptr [ %43, %40 ], [ %28, %33 ], [ %28, %26 ]
  %49 = getelementptr inbounds %struct.sv, ptr %48, i64 0, i32 2
  %50 = and i32 %47, 255
  %51 = icmp eq i32 %50, 13
  br i1 %51, label %52, label %56

52:                                               ; preds = %46
  store ptr null, ptr %2, align 8, !tbaa !9
  %53 = load ptr, ptr %48, align 8, !tbaa !119
  %54 = getelementptr inbounds %struct.xpvcv, ptr %53, i64 0, i32 4
  %55 = load ptr, ptr %54, align 8, !tbaa !134
  store ptr %55, ptr %1, align 8, !tbaa !9
  br label %128

56:                                               ; preds = %46
  %57 = and i32 %47, 2097152
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %56
  %60 = tail call i32 @Perl_mg_get(ptr noundef nonnull %48) #17
  %61 = load i32, ptr %49, align 4, !tbaa !16
  br label %62

62:                                               ; preds = %56, %59
  %63 = phi i32 [ %47, %56 ], [ %61, %59 ]
  %64 = and i32 %63, 49152
  %65 = icmp eq i32 %64, 32768
  br i1 %65, label %66, label %70

66:                                               ; preds = %62
  %67 = and i32 %63, 255
  %68 = add nsw i32 %67, -9
  %69 = icmp ult i32 %68, 2
  br i1 %69, label %78, label %70

70:                                               ; preds = %62, %66
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.48) #17
  store ptr null, ptr %2, align 8, !tbaa !9
  br label %84

71:                                               ; preds = %22
  %72 = and i32 %23, 49152
  %73 = icmp eq i32 %72, 32768
  br i1 %73, label %74, label %80

74:                                               ; preds = %71
  %75 = and i32 %23, 255
  %76 = add nsw i32 %75, -9
  %77 = icmp ult i32 %76, 2
  br i1 %77, label %78, label %80

78:                                               ; preds = %66, %74
  %79 = phi ptr [ %0, %74 ], [ %48, %66 ]
  store ptr %79, ptr %2, align 8, !tbaa !9
  br label %85

80:                                               ; preds = %71, %74
  %81 = or i32 %3, 2048
  %82 = tail call ptr @Perl_gv_fetchsv(ptr noundef nonnull %0, i32 noundef %81, i32 noundef 13) #17
  store ptr %82, ptr %2, align 8, !tbaa !9
  %83 = icmp eq ptr %82, null
  br i1 %83, label %84, label %85

84:                                               ; preds = %70, %80
  store ptr null, ptr %1, align 8, !tbaa !9
  br label %128

85:                                               ; preds = %78, %80
  %86 = phi ptr [ %79, %78 ], [ %82, %80 ]
  %87 = getelementptr inbounds %struct.gv, ptr %86, i64 0, i32 2
  %88 = load i32, ptr %87, align 4, !tbaa !185
  %89 = and i32 %88, 49152
  %90 = icmp eq i32 %89, 32768
  br i1 %90, label %91, label %95

91:                                               ; preds = %85
  %92 = and i32 %88, 255
  %93 = add nsw i32 %92, -9
  %94 = icmp ult i32 %93, 2
  br i1 %94, label %96, label %95

95:                                               ; preds = %91, %85
  store ptr null, ptr %1, align 8, !tbaa !9
  br label %128

96:                                               ; preds = %91
  %97 = getelementptr inbounds %struct.gv, ptr %86, i64 0, i32 3
  %98 = load ptr, ptr %97, align 8, !tbaa !17
  %99 = getelementptr inbounds %struct.gp, ptr %98, i64 0, i32 8
  %100 = load ptr, ptr %99, align 8, !tbaa !118
  %101 = icmp eq ptr %100, null
  %102 = select i1 %101, ptr %86, ptr %100
  %103 = load ptr, ptr %102, align 8, !tbaa !62
  %104 = getelementptr inbounds %struct.xpvgv, ptr %103, i64 0, i32 5
  %105 = load ptr, ptr %104, align 8, !tbaa !17
  store ptr %105, ptr %1, align 8, !tbaa !9
  %106 = and i32 %3, -1025
  %107 = icmp eq i32 %106, 0
  %108 = load ptr, ptr %97, align 8, !tbaa !17
  br i1 %107, label %120, label %109

109:                                              ; preds = %96
  %110 = getelementptr inbounds %struct.gp, ptr %108, i64 0, i32 3
  %111 = load i32, ptr %110, align 8, !tbaa !61
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %117

113:                                              ; preds = %109
  %114 = getelementptr inbounds %struct.gp, ptr %108, i64 0, i32 2
  %115 = load ptr, ptr %114, align 8, !tbaa !23
  %116 = icmp eq ptr %115, null
  br i1 %116, label %117, label %120

117:                                              ; preds = %109, %113
  %118 = tail call ptr @Perl_newSTUB(ptr noundef nonnull %86, i1 noundef zeroext false) #17
  %119 = load ptr, ptr %97, align 8, !tbaa !17
  br label %120

120:                                              ; preds = %117, %113, %96
  %121 = phi ptr [ %119, %117 ], [ %108, %113 ], [ %108, %96 ]
  %122 = getelementptr inbounds %struct.gp, ptr %121, i64 0, i32 3
  %123 = load i32, ptr %122, align 8, !tbaa !61
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %120
  %126 = getelementptr inbounds %struct.gp, ptr %121, i64 0, i32 2
  %127 = load ptr, ptr %126, align 8, !tbaa !23
  br label %128

128:                                              ; preds = %125, %120, %95, %84, %52, %15, %11, %6
  %129 = phi ptr [ %48, %52 ], [ null, %95 ], [ null, %84 ], [ null, %15 ], [ %0, %11 ], [ null, %6 ], [ %127, %125 ], [ null, %120 ]
  ret ptr %129
}

declare ptr @Perl_amagic_deref_call(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @Perl_newSTUB(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @Perl_sv_true(ptr noundef %0) local_unnamed_addr #1 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %41, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 1024
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %3
  %9 = load ptr, ptr %0, align 8, !tbaa !26
  %10 = icmp eq ptr %9, null
  br i1 %10, label %22, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.xpv, ptr %9, i64 0, i32 2
  %13 = load i64, ptr %12, align 8, !tbaa !57
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %41, label %15

15:                                               ; preds = %11
  %16 = icmp eq i64 %13, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = load i8, ptr %19, align 1, !tbaa !17
  %21 = icmp eq i8 %20, 48
  br i1 %21, label %22, label %41

22:                                               ; preds = %17, %15, %8
  br label %41

23:                                               ; preds = %3
  %24 = and i32 %5, 256
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %23
  %27 = load ptr, ptr %0, align 8, !tbaa !26
  %28 = getelementptr inbounds %struct.xpviv, ptr %27, i64 0, i32 4
  %29 = load i64, ptr %28, align 8, !tbaa !17
  %30 = icmp ne i64 %29, 0
  br label %41

31:                                               ; preds = %23
  %32 = and i32 %5, 512
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = load ptr, ptr %0, align 8, !tbaa !26
  %36 = getelementptr inbounds %struct.xpvnv, ptr %35, i64 0, i32 5
  %37 = load double, ptr %36, align 8, !tbaa !17
  %38 = fcmp fast une double %37, 0.000000e+00
  br label %41

39:                                               ; preds = %31
  %40 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %0, i32 noundef 2)
  br label %41

41:                                               ; preds = %22, %17, %11, %1, %39, %34, %26
  %42 = phi i1 [ %30, %26 ], [ %38, %34 ], [ %40, %39 ], [ false, %1 ], [ false, %22 ], [ true, %17 ], [ true, %11 ]
  %43 = zext i1 %42 to i32
  ret i32 %43
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_pvbyten_force(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = tail call ptr @Perl_sv_pvn_force_flags(ptr noundef %0, ptr noundef %1, i32 noundef 2)
  %4 = tail call zeroext i1 @Perl_sv_utf8_downgrade(ptr noundef %0, i1 noundef zeroext false)
  %5 = load ptr, ptr %0, align 8, !tbaa !26
  %6 = getelementptr inbounds %struct.xpv, ptr %5, i64 0, i32 2
  %7 = load i64, ptr %6, align 8, !tbaa !57
  store i64 %7, ptr %1, align 8, !tbaa !60
  %8 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  ret ptr %9
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_pvutf8n_force(ptr noundef %0, ptr nocapture noundef writeonly %1) local_unnamed_addr #1 {
  %3 = tail call ptr @Perl_sv_pvn_force_flags(ptr noundef %0, ptr noundef null, i32 noundef 2)
  %4 = tail call i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef %0, i32 noundef 0, i64 noundef 0)
  %5 = load ptr, ptr %0, align 8, !tbaa !26
  %6 = getelementptr inbounds %struct.xpv, ptr %5, i64 0, i32 2
  %7 = load i64, ptr %6, align 8, !tbaa !57
  store i64 %7, ptr %1, align 8, !tbaa !60
  %8 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  ret ptr %9
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_ref(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #1 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %5, label %54

5:                                                ; preds = %3
  %6 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %37

8:                                                ; preds = %5
  %9 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %10 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %10, ptr %9, align 8, !tbaa !26
  %11 = getelementptr inbounds %struct.sv, ptr %9, i64 0, i32 1
  store i32 170, ptr %11, align 8, !tbaa !13
  %12 = getelementptr inbounds %struct.sv, ptr %9, i64 0, i32 2
  store i32 0, ptr %12, align 4, !tbaa !16
  store ptr %9, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %13 = getelementptr inbounds %struct.sv, ptr %9, i64 1
  store ptr %13, ptr @PL_sv_root, align 8, !tbaa !9
  br label %14

14:                                               ; preds = %14, %8
  %15 = phi ptr [ %13, %8 ], [ %32, %14 ]
  %16 = phi i64 [ 1, %8 ], [ %31, %14 ]
  %17 = getelementptr inbounds %struct.sv, ptr %15, i64 1
  store ptr %17, ptr %15, align 8, !tbaa !26
  %18 = getelementptr inbounds %struct.sv, ptr %9, i64 %16, i32 2
  store i32 255, ptr %18, align 4, !tbaa !16
  %19 = add nuw nsw i64 %16, 1
  %20 = getelementptr inbounds %struct.sv, ptr %9, i64 %19
  %21 = getelementptr inbounds %struct.sv, ptr %20, i64 1
  store ptr %21, ptr %20, align 8, !tbaa !26
  %22 = getelementptr inbounds %struct.sv, ptr %9, i64 %19, i32 2
  store i32 255, ptr %22, align 4, !tbaa !16
  %23 = add nuw nsw i64 %16, 2
  %24 = getelementptr inbounds %struct.sv, ptr %9, i64 %23
  %25 = getelementptr inbounds %struct.sv, ptr %24, i64 1
  store ptr %25, ptr %24, align 8, !tbaa !26
  %26 = getelementptr inbounds %struct.sv, ptr %9, i64 %23, i32 2
  store i32 255, ptr %26, align 4, !tbaa !16
  %27 = add nuw nsw i64 %16, 3
  %28 = getelementptr inbounds %struct.sv, ptr %9, i64 %27
  %29 = getelementptr inbounds %struct.sv, ptr %28, i64 1
  store ptr %29, ptr %28, align 8, !tbaa !26
  %30 = getelementptr inbounds %struct.sv, ptr %9, i64 %27, i32 2
  store i32 255, ptr %30, align 4, !tbaa !16
  %31 = add nuw nsw i64 %16, 4
  %32 = getelementptr inbounds %struct.sv, ptr %9, i64 %31
  %33 = icmp eq i64 %31, 169
  br i1 %33, label %34, label %14, !llvm.loop !59

34:                                               ; preds = %14
  store ptr null, ptr %32, align 8, !tbaa !26
  %35 = getelementptr inbounds %struct.sv, ptr %9, i64 169, i32 2
  store i32 255, ptr %35, align 4, !tbaa !16
  %36 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %37

37:                                               ; preds = %34, %5
  %38 = phi ptr [ %36, %34 ], [ %6, %5 ]
  %39 = load ptr, ptr %38, align 8, !tbaa !26
  store ptr %39, ptr @PL_sv_root, align 8, !tbaa !9
  %40 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %41 = add nsw i64 %40, 1
  store i64 %41, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %38, align 8, !tbaa !26
  %42 = getelementptr inbounds %struct.sv, ptr %38, i64 0, i32 1
  store i32 1, ptr %42, align 8, !tbaa !13
  %43 = getelementptr inbounds %struct.sv, ptr %38, i64 0, i32 2
  store i32 524288, ptr %43, align 4, !tbaa !16
  %44 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %45 = add nsw i64 %44, 1
  store i64 %45, ptr @PL_tmps_ix, align 8, !tbaa !60
  %46 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %47 = icmp slt i64 %45, %46
  br i1 %47, label %50, label %48

48:                                               ; preds = %37
  %49 = tail call i64 @Perl_tmps_grow_p(i64 noundef %45) #17
  br label %50

50:                                               ; preds = %37, %48
  %51 = phi i64 [ %49, %48 ], [ %45, %37 ]
  %52 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %53 = getelementptr inbounds ptr, ptr %52, i64 %51
  store ptr %38, ptr %53, align 8, !tbaa !9
  br label %54

54:                                               ; preds = %50, %3
  %55 = phi ptr [ %0, %3 ], [ %38, %50 ]
  %56 = icmp eq i32 %2, 0
  %57 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %58 = load i32, ptr %57, align 4, !tbaa !16
  %59 = and i32 %58, 1048576
  %60 = icmp eq i32 %59, 0
  %61 = select i1 %56, i1 true, i1 %60
  br i1 %61, label %89, label %62

62:                                               ; preds = %54
  %63 = load ptr, ptr %1, align 8, !tbaa !26
  %64 = load ptr, ptr %63, align 8, !tbaa !50
  %65 = getelementptr inbounds %struct.hv, ptr %64, i64 0, i32 2
  %66 = load i32, ptr %65, align 4, !tbaa !64
  %67 = and i32 %66, 33554432
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %88, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %struct.hv, ptr %64, i64 0, i32 3
  %71 = load ptr, ptr %70, align 8, !tbaa !17
  %72 = load ptr, ptr %64, align 8, !tbaa !66
  %73 = getelementptr inbounds %struct.xpvhv, ptr %72, i64 0, i32 3
  %74 = load i64, ptr %73, align 8, !tbaa !48
  %75 = add i64 %74, 1
  %76 = getelementptr inbounds ptr, ptr %71, i64 %75
  %77 = load ptr, ptr %76, align 8, !tbaa !17
  %78 = icmp eq ptr %77, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %69
  %80 = getelementptr inbounds %struct.xpvhv_aux, ptr %76, i64 0, i32 4
  %81 = load i32, ptr %80, align 4, !tbaa !67
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %79
  %84 = load ptr, ptr %77, align 8, !tbaa !9
  %85 = icmp eq ptr %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %83, %79
  %87 = phi ptr [ %77, %79 ], [ %84, %83 ]
  tail call void @Perl_sv_sethek(ptr noundef nonnull %55, ptr noundef nonnull %87)
  br label %128

88:                                               ; preds = %62, %69, %83
  tail call void @Perl_sv_setpvn(ptr noundef nonnull %55, ptr noundef nonnull @.str.7, i64 noundef 8)
  br label %128

89:                                               ; preds = %54
  %90 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %91 = trunc i32 %58 to i8
  switch i8 %91, label %125 [
    i8 0, label %92
    i8 1, label %92
    i8 2, label %92
    i8 3, label %92
    i8 5, label %92
    i8 6, label %92
    i8 7, label %92
    i8 10, label %105
    i8 11, label %126
    i8 12, label %115
    i8 13, label %116
    i8 9, label %117
    i8 14, label %121
    i8 15, label %122
    i8 4, label %123
    i8 8, label %124
  ]

92:                                               ; preds = %89, %89, %89, %89, %89, %89, %89
  %93 = and i32 %58, 14680064
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %100, label %95

95:                                               ; preds = %92
  %96 = tail call ptr @Perl_mg_find(ptr noundef nonnull %1, i32 noundef 86) #17
  %97 = icmp eq ptr %96, null
  br i1 %97, label %98, label %126

98:                                               ; preds = %95
  %99 = load i32, ptr %90, align 4, !tbaa !16
  br label %100

100:                                              ; preds = %98, %92
  %101 = phi i32 [ %99, %98 ], [ %58, %92 ]
  %102 = and i32 %101, 2048
  %103 = icmp eq i32 %102, 0
  %104 = select i1 %103, ptr @.str.52, ptr @.str.51
  br label %126

105:                                              ; preds = %89
  %106 = and i32 %58, 2048
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %126

108:                                              ; preds = %105
  %109 = load ptr, ptr %1, align 8, !tbaa !26
  %110 = getelementptr inbounds %struct.xpvlv, ptr %109, i64 0, i32 9
  %111 = load i8, ptr %110, align 8, !tbaa !40
  %112 = and i8 %111, -33
  %113 = icmp eq i8 %112, 84
  %114 = select i1 %113, ptr @.str.52, ptr @.str.53
  br label %126

115:                                              ; preds = %89
  br label %126

116:                                              ; preds = %89
  br label %126

117:                                              ; preds = %89
  %118 = and i32 %58, 49152
  %119 = icmp eq i32 %118, 32768
  %120 = select i1 %119, ptr @.str.57, ptr @.str.52
  br label %126

121:                                              ; preds = %89
  br label %126

122:                                              ; preds = %89
  br label %126

123:                                              ; preds = %89
  br label %126

124:                                              ; preds = %89
  br label %126

125:                                              ; preds = %89
  br label %126

126:                                              ; preds = %89, %95, %100, %105, %108, %115, %116, %117, %121, %122, %123, %124, %125
  %127 = phi ptr [ @.str.62, %125 ], [ @.str.61, %124 ], [ @.str.60, %123 ], [ @.str.59, %122 ], [ @.str.58, %121 ], [ %120, %117 ], [ @.str.56, %116 ], [ @.str.55, %115 ], [ @.str.50, %95 ], [ %104, %100 ], [ %114, %108 ], [ @.str.51, %105 ], [ @.str.54, %89 ]
  tail call void @Perl_sv_setpv(ptr noundef nonnull %55, ptr noundef nonnull %127)
  br label %128

128:                                              ; preds = %86, %88, %126
  ret ptr %55
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @Perl_sv_isobject(ptr noundef %0) local_unnamed_addr #1 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 2097152
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = tail call i32 @Perl_mg_get(ptr noundef nonnull %0) #17
  %10 = load i32, ptr %4, align 4, !tbaa !16
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi i32 [ %5, %3 ], [ %10, %8 ]
  %13 = and i32 %12, 2048
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = getelementptr inbounds %struct.sv, ptr %17, i64 0, i32 2
  %19 = load i32, ptr %18, align 4, !tbaa !16
  %20 = lshr i32 %19, 20
  %21 = and i32 %20, 1
  br label %22

22:                                               ; preds = %15, %11, %1
  %23 = phi i32 [ 0, %1 ], [ 0, %11 ], [ %21, %15 ]
  ret i32 %23
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @Perl_sv_isa(ptr noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #1 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %53, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !16
  %7 = and i32 %6, 2097152
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = tail call i32 @Perl_mg_get(ptr noundef nonnull %0) #17
  %11 = load i32, ptr %5, align 4, !tbaa !16
  br label %12

12:                                               ; preds = %4, %9
  %13 = phi i32 [ %6, %4 ], [ %11, %9 ]
  %14 = and i32 %13, 2048
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %53, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !17
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = and i32 %20, 1048576
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %53, label %23

23:                                               ; preds = %16
  %24 = load ptr, ptr %18, align 8, !tbaa !26
  %25 = load ptr, ptr %24, align 8, !tbaa !50
  %26 = getelementptr inbounds %struct.hv, ptr %25, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !64
  %28 = and i32 %27, 33554432
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %53, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %struct.hv, ptr %25, i64 0, i32 3
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  %33 = load ptr, ptr %25, align 8, !tbaa !66
  %34 = getelementptr inbounds %struct.xpvhv, ptr %33, i64 0, i32 3
  %35 = load i64, ptr %34, align 8, !tbaa !48
  %36 = add i64 %35, 1
  %37 = getelementptr inbounds ptr, ptr %32, i64 %36
  %38 = load ptr, ptr %37, align 8, !tbaa !17
  %39 = icmp eq ptr %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %30
  %41 = getelementptr inbounds %struct.xpvhv_aux, ptr %37, i64 0, i32 4
  %42 = load i32, ptr %41, align 4, !tbaa !67
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = load ptr, ptr %38, align 8, !tbaa !17
  %46 = icmp eq ptr %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %40, %44
  %48 = phi ptr [ %45, %44 ], [ %38, %40 ]
  %49 = getelementptr inbounds %struct.hek, ptr %48, i64 0, i32 2
  %50 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %49, ptr noundef nonnull dereferenceable(1) %1) #18
  %51 = icmp eq i32 %50, 0
  %52 = zext i1 %51 to i32
  br label %53

53:                                               ; preds = %23, %30, %44, %16, %12, %2, %47
  %54 = phi i32 [ %52, %47 ], [ 0, %2 ], [ 0, %12 ], [ 0, %16 ], [ 0, %44 ], [ 0, %30 ], [ 0, %23 ]
  ret i32 %54
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSVrv(ptr noundef %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %34

5:                                                ; preds = %2
  %6 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %7 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %7, ptr %6, align 8, !tbaa !26
  %8 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 1
  store i32 170, ptr %8, align 8, !tbaa !13
  %9 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  store i32 0, ptr %9, align 4, !tbaa !16
  store ptr %6, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %10 = getelementptr inbounds %struct.sv, ptr %6, i64 1
  store ptr %10, ptr @PL_sv_root, align 8, !tbaa !9
  br label %11

11:                                               ; preds = %11, %5
  %12 = phi ptr [ %10, %5 ], [ %29, %11 ]
  %13 = phi i64 [ 1, %5 ], [ %28, %11 ]
  %14 = getelementptr inbounds %struct.sv, ptr %12, i64 1
  store ptr %14, ptr %12, align 8, !tbaa !26
  %15 = getelementptr inbounds %struct.sv, ptr %6, i64 %13, i32 2
  store i32 255, ptr %15, align 4, !tbaa !16
  %16 = add nuw nsw i64 %13, 1
  %17 = getelementptr inbounds %struct.sv, ptr %6, i64 %16
  %18 = getelementptr inbounds %struct.sv, ptr %17, i64 1
  store ptr %18, ptr %17, align 8, !tbaa !26
  %19 = getelementptr inbounds %struct.sv, ptr %6, i64 %16, i32 2
  store i32 255, ptr %19, align 4, !tbaa !16
  %20 = add nuw nsw i64 %13, 2
  %21 = getelementptr inbounds %struct.sv, ptr %6, i64 %20
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 1
  store ptr %22, ptr %21, align 8, !tbaa !26
  %23 = getelementptr inbounds %struct.sv, ptr %6, i64 %20, i32 2
  store i32 255, ptr %23, align 4, !tbaa !16
  %24 = add nuw nsw i64 %13, 3
  %25 = getelementptr inbounds %struct.sv, ptr %6, i64 %24
  %26 = getelementptr inbounds %struct.sv, ptr %25, i64 1
  store ptr %26, ptr %25, align 8, !tbaa !26
  %27 = getelementptr inbounds %struct.sv, ptr %6, i64 %24, i32 2
  store i32 255, ptr %27, align 4, !tbaa !16
  %28 = add nuw nsw i64 %13, 4
  %29 = getelementptr inbounds %struct.sv, ptr %6, i64 %28
  %30 = icmp eq i64 %28, 169
  br i1 %30, label %31, label %11, !llvm.loop !59

31:                                               ; preds = %11
  store ptr null, ptr %29, align 8, !tbaa !26
  %32 = getelementptr inbounds %struct.sv, ptr %6, i64 169, i32 2
  store i32 255, ptr %32, align 4, !tbaa !16
  %33 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %34

34:                                               ; preds = %2, %31
  %35 = phi ptr [ %33, %31 ], [ %3, %2 ]
  %36 = load ptr, ptr %35, align 8, !tbaa !26
  store ptr %36, ptr @PL_sv_root, align 8, !tbaa !9
  %37 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %38 = add nsw i64 %37, 1
  store i64 %38, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %35, align 8, !tbaa !26
  %39 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 1
  store i32 1, ptr %39, align 8, !tbaa !13
  %40 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 2
  store i32 0, ptr %40, align 4, !tbaa !16
  %41 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %42 = load i32, ptr %41, align 4, !tbaa !16
  %43 = and i32 %42, 427886592
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %34
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %0, i32 noundef 4)
  %46 = load i32, ptr %41, align 4, !tbaa !16
  br label %47

47:                                               ; preds = %45, %34
  %48 = phi i32 [ %46, %45 ], [ %42, %34 ]
  %49 = and i32 %48, 255
  %50 = icmp ugt i32 %49, 6
  br i1 %50, label %51, label %54

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !13
  store i32 0, ptr %52, align 8, !tbaa !13
  tail call void @Perl_sv_clear(ptr noundef nonnull %0)
  store i32 0, ptr %41, align 4, !tbaa !16
  store i32 %53, ptr %52, align 8, !tbaa !13
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 1)
  br label %105

54:                                               ; preds = %47
  %55 = and i32 %48, 2048
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %68, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !17
  %60 = icmp eq ptr %59, null
  br i1 %60, label %105, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.sv, ptr %59, i64 0, i32 1
  %63 = load i32, ptr %62, align 8, !tbaa !13
  %64 = icmp ugt i32 %63, 1
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = add i32 %63, -1
  store i32 %66, ptr %62, align 8, !tbaa !13
  br label %105

67:                                               ; preds = %61
  tail call void @Perl_sv_free2(ptr noundef nonnull %59, i32 noundef %63)
  br label %105

68:                                               ; preds = %54
  %69 = icmp ugt i32 %49, 2
  %70 = icmp eq i32 %49, 1
  %71 = or i1 %69, %70
  br i1 %71, label %73, label %72

72:                                               ; preds = %68
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %0, i32 noundef 1)
  br label %105

73:                                               ; preds = %68
  br i1 %69, label %74, label %105

74:                                               ; preds = %73
  %75 = load ptr, ptr %0, align 8, !tbaa !26
  %76 = getelementptr inbounds %struct.xpv, ptr %75, i64 0, i32 3
  %77 = load i64, ptr %76, align 8, !tbaa !17
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %100, label %79

79:                                               ; preds = %74
  %80 = and i32 %48, 33554432
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %83 = load ptr, ptr %82, align 8, !tbaa !17
  br i1 %81, label %97, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds i8, ptr %83, i64 -1
  %86 = load i8, ptr %85, align 1, !tbaa !17
  %87 = zext i8 %86 to i64
  %88 = icmp eq i8 %86, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = getelementptr inbounds i8, ptr %83, i64 -9
  %91 = load i64, ptr %90, align 1
  br label %92

92:                                               ; preds = %89, %84
  %93 = phi i64 [ %87, %84 ], [ %91, %89 ]
  %94 = sub i64 0, %93
  %95 = getelementptr inbounds i8, ptr %83, i64 %94
  store ptr %95, ptr %82, align 8, !tbaa !17
  %96 = and i32 %48, -33554433
  store i32 %96, ptr %41, align 4, !tbaa !16
  br label %97

97:                                               ; preds = %79, %92
  %98 = phi ptr [ %95, %92 ], [ %83, %79 ]
  tail call void @Perl_safesysfree(ptr noundef %98) #17
  %99 = load ptr, ptr %0, align 8, !tbaa !26
  br label %100

100:                                              ; preds = %74, %97
  %101 = phi ptr [ %75, %74 ], [ %99, %97 ]
  %102 = getelementptr inbounds %struct.xpv, ptr %101, i64 0, i32 3
  store i64 0, ptr %102, align 8, !tbaa !17
  %103 = load ptr, ptr %0, align 8, !tbaa !26
  %104 = getelementptr inbounds %struct.xpv, ptr %103, i64 0, i32 2
  store i64 0, ptr %104, align 8, !tbaa !57
  br label %105

105:                                              ; preds = %67, %65, %57, %73, %100, %72, %51
  %106 = load i32, ptr %41, align 4, !tbaa !16
  %107 = and i32 %106, 1610547455
  store i32 %107, ptr %41, align 4, !tbaa !16
  %108 = and i32 %106, 33554432
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %135, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %112 = load ptr, ptr %111, align 8, !tbaa !17
  %113 = getelementptr inbounds i8, ptr %112, i64 -1
  %114 = load i8, ptr %113, align 1, !tbaa !17
  %115 = zext i8 %114 to i64
  %116 = icmp eq i8 %114, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %110
  %118 = getelementptr inbounds i8, ptr %112, i64 -9
  %119 = load i64, ptr %118, align 1
  br label %120

120:                                              ; preds = %110, %117
  %121 = phi i64 [ %115, %110 ], [ %119, %117 ]
  %122 = load ptr, ptr %0, align 8, !tbaa !26
  %123 = getelementptr inbounds %struct.xpv, ptr %122, i64 0, i32 3
  %124 = load i64, ptr %123, align 8, !tbaa !17
  %125 = add i64 %124, %121
  store i64 %125, ptr %123, align 8, !tbaa !17
  %126 = load ptr, ptr %111, align 8, !tbaa !17
  %127 = sub i64 0, %121
  %128 = getelementptr inbounds i8, ptr %126, i64 %127
  store ptr %128, ptr %111, align 8, !tbaa !17
  %129 = load ptr, ptr %0, align 8, !tbaa !26
  %130 = getelementptr inbounds %struct.xpv, ptr %129, i64 0, i32 2
  %131 = load i64, ptr %130, align 8, !tbaa !57
  %132 = add i64 %131, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %128, ptr nonnull align 1 %112, i64 %132, i1 false)
  %133 = load i32, ptr %41, align 4, !tbaa !16
  %134 = and i32 %133, -33554433
  br label %135

135:                                              ; preds = %120, %105
  %136 = phi i32 [ %134, %120 ], [ %107, %105 ]
  %137 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  store ptr %35, ptr %137, align 8, !tbaa !17
  %138 = or i32 %136, 2048
  store i32 %138, ptr %41, align 4, !tbaa !16
  %139 = icmp eq ptr %1, null
  br i1 %139, label %143, label %140

140:                                              ; preds = %135
  %141 = tail call ptr @Perl_gv_stashpv(ptr noundef nonnull %1, i32 noundef 1) #17
  %142 = tail call ptr @Perl_sv_bless(ptr noundef nonnull %0, ptr noundef %141)
  br label %143

143:                                              ; preds = %140, %135
  ret ptr %35
}

declare ptr @Perl_gv_stashpv(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_bless(ptr noundef returned %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 2097152
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call i32 @Perl_mg_get(ptr noundef nonnull %0) #17
  %9 = load i32, ptr %3, align 4, !tbaa !16
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi i32 [ %4, %2 ], [ %9, %7 ]
  %12 = and i32 %11, 2048
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63) #17
  br label %15

15:                                               ; preds = %14, %10
  %16 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = getelementptr inbounds %struct.sv, ptr %17, i64 0, i32 2
  %19 = load i32, ptr %18, align 4, !tbaa !16
  %20 = and i32 %19, 135331840
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %34, label %22

22:                                               ; preds = %15
  %23 = and i32 %19, 134283264
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %22
  tail call void @Perl_croak_no_modify() #17
  %26 = load i32, ptr %18, align 4, !tbaa !16
  br label %27

27:                                               ; preds = %25, %22
  %28 = phi i32 [ %26, %25 ], [ %19, %22 ]
  %29 = and i32 %28, 1048576
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = load ptr, ptr %17, align 8, !tbaa !26
  %33 = load ptr, ptr %32, align 8, !tbaa !50
  br label %34

34:                                               ; preds = %27, %31, %15
  %35 = phi i32 [ %28, %31 ], [ %28, %27 ], [ %19, %15 ]
  %36 = phi ptr [ %33, %31 ], [ null, %27 ], [ null, %15 ]
  %37 = or i32 %35, 1048576
  store i32 %37, ptr %18, align 4, !tbaa !16
  %38 = and i32 %35, 255
  %39 = icmp ugt i32 %38, 6
  br i1 %39, label %41, label %40

40:                                               ; preds = %34
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %17, i32 noundef 7)
  br label %41

41:                                               ; preds = %40, %34
  %42 = icmp eq ptr %1, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !13
  %46 = add i32 %45, 1
  store i32 %46, ptr %44, align 8, !tbaa !13
  br label %47

47:                                               ; preds = %41, %43
  %48 = load ptr, ptr %17, align 8, !tbaa !26
  store ptr %1, ptr %48, align 8, !tbaa !50
  %49 = icmp eq ptr %36, null
  br i1 %49, label %57, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 1
  %52 = load i32, ptr %51, align 8, !tbaa !13
  %53 = icmp ugt i32 %52, 1
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = add i32 %52, -1
  store i32 %55, ptr %51, align 8, !tbaa !13
  br label %57

56:                                               ; preds = %50
  tail call void @Perl_sv_free2(ptr noundef nonnull %36, i32 noundef %52)
  br label %57

57:                                               ; preds = %47, %54, %56
  %58 = load i32, ptr %18, align 4, !tbaa !16
  %59 = and i32 %58, 4194304
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %57
  %62 = tail call ptr @Perl_mg_find(ptr noundef nonnull %17, i32 noundef 126) #17
  %63 = icmp eq ptr %62, null
  br i1 %63, label %64, label %67

64:                                               ; preds = %61
  %65 = tail call ptr @Perl_mg_find(ptr noundef nonnull %17, i32 noundef 85) #17
  %66 = icmp eq ptr %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %64, %61
  %68 = tail call i32 @Perl_mg_set(ptr noundef nonnull %17) #17
  br label %69

69:                                               ; preds = %64, %67, %57
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSVavdefelem(ptr noundef %0, i64 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 {
  %4 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %35

6:                                                ; preds = %3
  %7 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %8 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %8, ptr %7, align 8, !tbaa !26
  %9 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 1
  store i32 170, ptr %9, align 8, !tbaa !13
  %10 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  store i32 0, ptr %10, align 4, !tbaa !16
  store ptr %7, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %11 = getelementptr inbounds %struct.sv, ptr %7, i64 1
  store ptr %11, ptr @PL_sv_root, align 8, !tbaa !9
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi ptr [ %11, %6 ], [ %30, %12 ]
  %14 = phi i64 [ 1, %6 ], [ %29, %12 ]
  %15 = getelementptr inbounds %struct.sv, ptr %13, i64 1
  store ptr %15, ptr %13, align 8, !tbaa !26
  %16 = getelementptr inbounds %struct.sv, ptr %7, i64 %14, i32 2
  store i32 255, ptr %16, align 4, !tbaa !16
  %17 = add nuw nsw i64 %14, 1
  %18 = getelementptr inbounds %struct.sv, ptr %7, i64 %17
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 1
  store ptr %19, ptr %18, align 8, !tbaa !26
  %20 = getelementptr inbounds %struct.sv, ptr %7, i64 %17, i32 2
  store i32 255, ptr %20, align 4, !tbaa !16
  %21 = add nuw nsw i64 %14, 2
  %22 = getelementptr inbounds %struct.sv, ptr %7, i64 %21
  %23 = getelementptr inbounds %struct.sv, ptr %22, i64 1
  store ptr %23, ptr %22, align 8, !tbaa !26
  %24 = getelementptr inbounds %struct.sv, ptr %7, i64 %21, i32 2
  store i32 255, ptr %24, align 4, !tbaa !16
  %25 = add nuw nsw i64 %14, 3
  %26 = getelementptr inbounds %struct.sv, ptr %7, i64 %25
  %27 = getelementptr inbounds %struct.sv, ptr %26, i64 1
  store ptr %27, ptr %26, align 8, !tbaa !26
  %28 = getelementptr inbounds %struct.sv, ptr %7, i64 %25, i32 2
  store i32 255, ptr %28, align 4, !tbaa !16
  %29 = add nuw nsw i64 %14, 4
  %30 = getelementptr inbounds %struct.sv, ptr %7, i64 %29
  %31 = icmp eq i64 %29, 169
  br i1 %31, label %32, label %12, !llvm.loop !59

32:                                               ; preds = %12
  store ptr null, ptr %30, align 8, !tbaa !26
  %33 = getelementptr inbounds %struct.sv, ptr %7, i64 169, i32 2
  store i32 255, ptr %33, align 4, !tbaa !16
  %34 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %35

35:                                               ; preds = %3, %32
  %36 = phi ptr [ %34, %32 ], [ %4, %3 ]
  %37 = load ptr, ptr %36, align 8, !tbaa !26
  store ptr %37, ptr @PL_sv_root, align 8, !tbaa !9
  %38 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %39 = add nsw i64 %38, 1
  store i64 %39, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %36, align 8, !tbaa !26
  %40 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 1
  store i32 1, ptr %40, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  store i32 0, ptr %41, align 4, !tbaa !16
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %36, i32 noundef 10) #20
  %42 = load ptr, ptr %36, align 8, !tbaa !26
  %43 = getelementptr inbounds %struct.xpvlv, ptr %42, i64 0, i32 9
  store i8 121, ptr %43, align 8, !tbaa !40
  tail call void @Perl_sv_magic(ptr noundef nonnull %36, ptr noundef null, i32 noundef 121, ptr noundef null, i32 noundef 0)
  %44 = getelementptr inbounds %struct.av, ptr %0, i64 0, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !186
  %46 = add i32 %45, 1
  store i32 %46, ptr %44, align 8, !tbaa !186
  %47 = load ptr, ptr %36, align 8, !tbaa !26
  %48 = getelementptr inbounds %struct.xpvlv, ptr %47, i64 0, i32 8
  store ptr %0, ptr %48, align 8, !tbaa !128
  %49 = getelementptr inbounds %struct.xpvlv, ptr %47, i64 0, i32 6
  store i64 %1, ptr %49, align 8, !tbaa !17
  %50 = select i1 %2, i64 1, i64 -1
  %51 = load ptr, ptr %36, align 8, !tbaa !26
  %52 = getelementptr inbounds %struct.xpvlv, ptr %51, i64 0, i32 7
  store i64 %50, ptr %52, align 8, !tbaa !187
  ret ptr %36
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_setref_pv(ptr noundef returned %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #1 {
  %4 = icmp eq ptr %2, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  tail call void @Perl_sv_setsv_flags(ptr noundef %0, ptr noundef nonnull @PL_sv_undef, i32 noundef 1538)
  %6 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !16
  %8 = and i32 %7, 4194304
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %5
  %11 = tail call i32 @Perl_mg_set(ptr noundef nonnull %0) #17
  br label %15

12:                                               ; preds = %3
  %13 = tail call ptr @Perl_newSVrv(ptr noundef %0, ptr noundef %1)
  %14 = ptrtoint ptr %2 to i64
  tail call void @Perl_sv_setiv(ptr noundef %13, i64 noundef %14)
  br label %15

15:                                               ; preds = %5, %10, %12
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_setref_iv(ptr noundef returned %0, ptr noundef %1, i64 noundef %2) local_unnamed_addr #1 {
  %4 = tail call ptr @Perl_newSVrv(ptr noundef %0, ptr noundef %1)
  tail call void @Perl_sv_setiv(ptr noundef %4, i64 noundef %2)
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_setref_uv(ptr noundef returned %0, ptr noundef %1, i64 noundef %2) local_unnamed_addr #1 {
  %4 = tail call ptr @Perl_newSVrv(ptr noundef %0, ptr noundef %1)
  %5 = icmp sgt i64 %2, -1
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @Perl_sv_setiv(ptr noundef %4, i64 noundef %2)
  br label %13

7:                                                ; preds = %3
  tail call void @Perl_sv_setiv(ptr noundef %4, i64 noundef 0)
  %8 = getelementptr inbounds %struct.sv, ptr %4, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !16
  %10 = or i32 %9, -2147483648
  store i32 %10, ptr %8, align 4, !tbaa !16
  %11 = load ptr, ptr %4, align 8, !tbaa !26
  %12 = getelementptr inbounds %struct.xpvuv, ptr %11, i64 0, i32 4
  store i64 %2, ptr %12, align 8, !tbaa !17
  br label %13

13:                                               ; preds = %6, %7
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_setref_nv(ptr noundef returned %0, ptr noundef %1, double noundef nofpclass(nan inf) %2) local_unnamed_addr #1 {
  %4 = tail call ptr @Perl_newSVrv(ptr noundef %0, ptr noundef %1)
  tail call void @Perl_sv_setnv(ptr noundef %4, double noundef nofpclass(nan inf) %2)
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_sv_setref_pvn(ptr noundef returned %0, ptr noundef %1, ptr noundef %2, i64 noundef %3) local_unnamed_addr #1 {
  %5 = tail call ptr @Perl_newSVrv(ptr noundef %0, ptr noundef %1)
  tail call void @Perl_sv_setpvn(ptr noundef %5, ptr noundef %2, i64 noundef %3)
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_untaint(ptr noundef %0) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 4, !tbaa !16
  %4 = and i32 %3, 255
  %5 = icmp ugt i32 %4, 6
  br i1 %5, label %6, label %18

6:                                                ; preds = %1
  %7 = load ptr, ptr %0, align 8, !tbaa !26
  %8 = getelementptr inbounds %struct.xpvmg, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = icmp eq ptr %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = tail call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 116) #17
  %13 = icmp eq ptr %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.magic, ptr %12, i64 0, i32 5
  %16 = load i64, ptr %15, align 8, !tbaa !76
  %17 = and i64 %16, -2
  store i64 %17, ptr %15, align 8, !tbaa !76
  br label %18

18:                                               ; preds = %11, %14, %6, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_setpviv(ptr noundef %0, i64 noundef %1) local_unnamed_addr #1 {
  %3 = alloca [22 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 22, ptr nonnull %3) #17
  %4 = getelementptr inbounds i8, ptr %3, i64 22
  %5 = tail call i64 @llvm.abs.i64(i64 %1, i1 false)
  br label %6

6:                                                ; preds = %6, %2
  %7 = phi ptr [ %4, %2 ], [ %12, %6 ]
  %8 = phi i64 [ %5, %2 ], [ %13, %6 ]
  %9 = urem i64 %8, 10
  %10 = trunc i64 %9 to i8
  %11 = or i8 %10, 48
  %12 = getelementptr inbounds i8, ptr %7, i64 -1
  store i8 %11, ptr %12, align 1, !tbaa !17
  %13 = udiv i64 %8, 10
  %14 = icmp ult i64 %8, 10
  br i1 %14, label %15, label %6, !llvm.loop !87

15:                                               ; preds = %6
  %16 = icmp sgt i64 %1, -1
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds i8, ptr %7, i64 -2
  store i8 45, ptr %18, align 1, !tbaa !17
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi ptr [ %18, %17 ], [ %12, %15 ]
  %21 = ptrtoint ptr %4 to i64
  %22 = ptrtoint ptr %20 to i64
  %23 = sub i64 %21, %22
  call void @Perl_sv_setpvn(ptr noundef %0, ptr noundef nonnull %20, i64 noundef %23)
  call void @llvm.lifetime.end.p0(i64 22, ptr nonnull %3) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_setpviv_mg(ptr noundef %0, i64 noundef %1) local_unnamed_addr #1 {
  %3 = alloca [22 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 22, ptr nonnull %3) #17
  %4 = getelementptr inbounds i8, ptr %3, i64 22
  %5 = tail call i64 @llvm.abs.i64(i64 %1, i1 false)
  br label %6

6:                                                ; preds = %6, %2
  %7 = phi ptr [ %4, %2 ], [ %12, %6 ]
  %8 = phi i64 [ %5, %2 ], [ %13, %6 ]
  %9 = urem i64 %8, 10
  %10 = trunc i64 %9 to i8
  %11 = or i8 %10, 48
  %12 = getelementptr inbounds i8, ptr %7, i64 -1
  store i8 %11, ptr %12, align 1, !tbaa !17
  %13 = udiv i64 %8, 10
  %14 = icmp ult i64 %8, 10
  br i1 %14, label %15, label %6, !llvm.loop !87

15:                                               ; preds = %6
  %16 = icmp sgt i64 %1, -1
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds i8, ptr %7, i64 -2
  store i8 45, ptr %18, align 1, !tbaa !17
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi ptr [ %18, %17 ], [ %12, %15 ]
  %21 = ptrtoint ptr %4 to i64
  %22 = ptrtoint ptr %20 to i64
  %23 = sub i64 %21, %22
  call void @Perl_sv_setpvn(ptr noundef %0, ptr noundef nonnull %20, i64 noundef %23)
  call void @llvm.lifetime.end.p0(i64 22, ptr nonnull %3) #17
  %24 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %25 = load i32, ptr %24, align 4, !tbaa !16
  %26 = and i32 %25, 4194304
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %19
  %29 = call i32 @Perl_mg_set(ptr noundef nonnull %0) #17
  br label %30

30:                                               ; preds = %28, %19
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_setpvf(ptr noundef %0, ptr noundef %1, ...) local_unnamed_addr #1 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #17
  call void @llvm.va_start(ptr nonnull %3)
  %4 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #18
  call void @Perl_sv_setpvn(ptr noundef %0, ptr noundef nonnull @.str.10, i64 noundef 0)
  call void @Perl_sv_vcatpvfn_flags(ptr noundef %0, ptr noundef %1, i64 noundef %4, ptr noundef nonnull %3, ptr noundef null, i32 noundef 0, ptr poison, i32 noundef 0)
  call void @llvm.va_end(ptr nonnull %3)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_vsetpvf(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #1 {
  %4 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #18
  tail call void @Perl_sv_setpvn(ptr noundef %0, ptr noundef nonnull @.str.10, i64 noundef 0)
  tail call void @Perl_sv_vcatpvfn_flags(ptr noundef %0, ptr noundef %1, i64 noundef %4, ptr noundef %2, ptr noundef null, i32 noundef 0, ptr poison, i32 noundef 0)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_setpvf_mg(ptr noundef %0, ptr noundef %1, ...) local_unnamed_addr #1 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #17
  call void @llvm.va_start(ptr nonnull %3)
  %4 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #18
  call void @Perl_sv_setpvn(ptr noundef %0, ptr noundef nonnull @.str.10, i64 noundef 0)
  call void @Perl_sv_vcatpvfn_flags(ptr noundef %0, ptr noundef %1, i64 noundef %4, ptr noundef nonnull %3, ptr noundef null, i32 noundef 0, ptr poison, i32 noundef 0)
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !16
  %7 = and i32 %6, 4194304
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = call i32 @Perl_mg_set(ptr noundef nonnull %0) #17
  br label %11

11:                                               ; preds = %2, %9
  call void @llvm.va_end(ptr nonnull %3)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_vsetpvf_mg(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #1 {
  %4 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #18
  tail call void @Perl_sv_setpvn(ptr noundef %0, ptr noundef nonnull @.str.10, i64 noundef 0)
  tail call void @Perl_sv_vcatpvfn_flags(ptr noundef %0, ptr noundef %1, i64 noundef %4, ptr noundef %2, ptr noundef null, i32 noundef 0, ptr poison, i32 noundef 0)
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !16
  %7 = and i32 %6, 4194304
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = tail call i32 @Perl_mg_set(ptr noundef nonnull %0) #17
  br label %11

11:                                               ; preds = %9, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_catpvf(ptr noundef %0, ptr noundef %1, ...) local_unnamed_addr #1 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #17
  call void @llvm.va_start(ptr nonnull %3)
  %4 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #18
  call void @Perl_sv_vcatpvfn_flags(ptr noundef %0, ptr noundef %1, i64 noundef %4, ptr noundef nonnull %3, ptr noundef null, i32 noundef 0, ptr poison, i32 noundef 130)
  call void @llvm.va_end(ptr nonnull %3)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_vcatpvfn_flags(ptr noundef %0, ptr noundef %1, i64 noundef %2, ptr noundef %3, ptr nocapture noundef readonly %4, i32 noundef %5, ptr nocapture readnone %6, i32 noundef %7) local_unnamed_addr #1 {
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca [127 x i8], align 16
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca [14 x i8], align 1
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca [17 x i8], align 16
  %24 = ptrtoint ptr %23 to i64
  %25 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #17
  %26 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !16
  %28 = and i32 %27, 536870912
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %8
  %31 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %32 = getelementptr inbounds %struct.cop, ptr %31, i64 0, i32 10
  %33 = load i32, ptr %32, align 8, !tbaa !79
  %34 = and i32 %33, 8
  %35 = icmp eq i32 %34, 0
  br label %36

36:                                               ; preds = %30, %8
  %37 = phi i1 [ false, %8 ], [ %35, %30 ]
  call void @llvm.lifetime.start.p0(i64 127, ptr nonnull %12) #17
  %38 = and i32 %7, 2
  %39 = icmp eq i32 %38, 0
  %40 = and i32 %27, 2097152
  %41 = icmp eq i32 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %46, label %43

43:                                               ; preds = %36
  %44 = tail call i32 @Perl_mg_get(ptr noundef nonnull %0) #17
  %45 = load i32, ptr %26, align 4, !tbaa !16
  br label %46

46:                                               ; preds = %43, %36
  %47 = phi i32 [ %45, %43 ], [ %27, %36 ]
  %48 = and i32 %47, 430018304
  %49 = icmp eq i32 %48, 1024
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = load ptr, ptr %0, align 8, !tbaa !26
  %52 = getelementptr inbounds %struct.xpv, ptr %51, i64 0, i32 2
  %53 = load i64, ptr %52, align 8, !tbaa !57
  store i64 %53, ptr %11, align 8, !tbaa !60
  br label %56

54:                                               ; preds = %46
  %55 = call ptr @Perl_sv_pvn_force_flags(ptr noundef nonnull %0, ptr noundef nonnull %11, i32 noundef 0)
  br label %56

56:                                               ; preds = %54, %50
  switch i64 %2, label %141 [
    i64 0, label %57
    i64 2, label %77
  ]

57:                                               ; preds = %56
  %58 = icmp eq i32 %5, 0
  br i1 %58, label %3396, label %59

59:                                               ; preds = %57
  %60 = call zeroext i1 @Perl_ckwarn(i32 noundef 67) #17
  br i1 %60, label %61, label %3396

61:                                               ; preds = %59
  %62 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %63 = icmp eq ptr %62, null
  br i1 %63, label %75, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %struct.op, ptr %62, i64 0, i32 4
  %66 = load i16, ptr %65, align 8
  %67 = and i16 %66, 511
  %68 = icmp eq i16 %67, 380
  br i1 %68, label %69, label %71

69:                                               ; preds = %64
  %70 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %62, i32 noundef 2) #17
  br label %75

71:                                               ; preds = %64
  %72 = zext i16 %67 to i64
  %73 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %72
  %74 = load ptr, ptr %73, align 8, !tbaa !9
  br label %75

75:                                               ; preds = %61, %69, %71
  %76 = phi ptr [ %70, %69 ], [ %74, %71 ], [ @.str.65, %61 ]
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 67, ptr noundef nonnull @.str.64, ptr noundef %76) #17
  br label %3396

77:                                               ; preds = %56
  %78 = load i8, ptr %1, align 1, !tbaa !17
  %79 = icmp eq i8 %78, 37
  br i1 %79, label %80, label %139

80:                                               ; preds = %77
  %81 = getelementptr inbounds i8, ptr %1, i64 1
  %82 = load i8, ptr %81, align 1, !tbaa !17
  %83 = icmp eq i8 %82, 115
  br i1 %83, label %84, label %139

84:                                               ; preds = %80
  %85 = icmp sgt i32 %5, 1
  br i1 %85, label %86, label %104

86:                                               ; preds = %84
  %87 = call zeroext i1 @Perl_ckwarn(i32 noundef 67) #17
  br i1 %87, label %88, label %104

88:                                               ; preds = %86
  %89 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %90 = icmp eq ptr %89, null
  br i1 %90, label %102, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %struct.op, ptr %89, i64 0, i32 4
  %93 = load i16, ptr %92, align 8
  %94 = and i16 %93, 511
  %95 = icmp eq i16 %94, 380
  br i1 %95, label %96, label %98

96:                                               ; preds = %91
  %97 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %89, i32 noundef 2) #17
  br label %102

98:                                               ; preds = %91
  %99 = zext i16 %94 to i64
  %100 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %99
  %101 = load ptr, ptr %100, align 8, !tbaa !9
  br label %102

102:                                              ; preds = %88, %96, %98
  %103 = phi ptr [ %97, %96 ], [ %101, %98 ], [ @.str.65, %88 ]
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 67, ptr noundef nonnull @.str.64, ptr noundef %103) #17
  br label %104

104:                                              ; preds = %102, %86, %84
  %105 = icmp eq ptr %3, null
  br i1 %105, label %125, label %106

106:                                              ; preds = %104
  %107 = load i32, ptr %3, align 8
  %108 = icmp ult i32 %107, 41
  br i1 %108, label %109, label %115

109:                                              ; preds = %106
  %110 = getelementptr inbounds %struct.__va_list_tag, ptr %3, i64 0, i32 3
  %111 = load ptr, ptr %110, align 8
  %112 = zext i32 %107 to i64
  %113 = getelementptr i8, ptr %111, i64 %112
  %114 = add nuw nsw i32 %107, 8
  store i32 %114, ptr %3, align 8
  br label %119

115:                                              ; preds = %106
  %116 = getelementptr inbounds %struct.__va_list_tag, ptr %3, i64 0, i32 2
  %117 = load ptr, ptr %116, align 8
  %118 = getelementptr i8, ptr %117, i64 8
  store ptr %118, ptr %116, align 8
  br label %119

119:                                              ; preds = %115, %109
  %120 = phi ptr [ %113, %109 ], [ %117, %115 ]
  %121 = load ptr, ptr %120, align 8
  %122 = icmp eq ptr %121, null
  %123 = select i1 %122, ptr @Perl_sv_vcatpvfn_flags.nullstr, ptr %121
  %124 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %123) #18
  call void @Perl_sv_catpvn_flags(ptr noundef nonnull %0, ptr noundef nonnull %123, i64 noundef %124, i32 noundef 0)
  br label %3396

125:                                              ; preds = %104
  %126 = icmp sgt i32 %5, 0
  br i1 %126, label %127, label %138

127:                                              ; preds = %125
  %128 = load ptr, ptr %4, align 8, !tbaa !9
  %129 = getelementptr inbounds %struct.sv, ptr %128, i64 0, i32 2
  %130 = load i32, ptr %129, align 4, !tbaa !16
  %131 = and i32 %130, 2097152
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %136, label %133

133:                                              ; preds = %127
  %134 = call i32 @Perl_mg_get(ptr noundef nonnull %128) #17
  %135 = load ptr, ptr %4, align 8, !tbaa !9
  br label %136

136:                                              ; preds = %127, %133
  %137 = phi ptr [ %128, %127 ], [ %135, %133 ]
  call void @Perl_sv_catsv_flags(ptr noundef nonnull %0, ptr noundef %137, i32 noundef 0)
  br label %3396

138:                                              ; preds = %125
  call fastcc void @S_vcatpvfn_missing_argument()
  br label %3396

139:                                              ; preds = %80, %77
  %140 = icmp ne ptr %3, null
  br label %223

141:                                              ; preds = %56
  %142 = icmp ne ptr %3, null
  %143 = icmp eq i64 %2, 3
  %144 = and i1 %143, %142
  br i1 %144, label %145, label %223

145:                                              ; preds = %141
  %146 = load i8, ptr %1, align 1, !tbaa !17
  %147 = icmp eq i8 %146, 37
  br i1 %147, label %148, label %323

148:                                              ; preds = %145
  %149 = getelementptr inbounds i8, ptr %1, i64 1
  %150 = load i8, ptr %149, align 1, !tbaa !17
  %151 = icmp eq i8 %150, 45
  br i1 %151, label %152, label %323

152:                                              ; preds = %148
  %153 = getelementptr inbounds i8, ptr %1, i64 2
  %154 = load i8, ptr %153, align 1, !tbaa !17
  %155 = icmp eq i8 %154, 112
  br i1 %155, label %156, label %323

156:                                              ; preds = %152
  %157 = icmp sgt i32 %5, 1
  br i1 %157, label %158, label %176

158:                                              ; preds = %156
  %159 = call zeroext i1 @Perl_ckwarn(i32 noundef 67) #17
  br i1 %159, label %160, label %176

160:                                              ; preds = %158
  %161 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %162 = icmp eq ptr %161, null
  br i1 %162, label %174, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %struct.op, ptr %161, i64 0, i32 4
  %165 = load i16, ptr %164, align 8
  %166 = and i16 %165, 511
  %167 = icmp eq i16 %166, 380
  br i1 %167, label %168, label %170

168:                                              ; preds = %163
  %169 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %161, i32 noundef 2) #17
  br label %174

170:                                              ; preds = %163
  %171 = zext i16 %166 to i64
  %172 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %171
  %173 = load ptr, ptr %172, align 8, !tbaa !9
  br label %174

174:                                              ; preds = %160, %168, %170
  %175 = phi ptr [ %169, %168 ], [ %173, %170 ], [ @.str.65, %160 ]
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 67, ptr noundef nonnull @.str.64, ptr noundef %175) #17
  br label %176

176:                                              ; preds = %174, %158, %156
  %177 = load i32, ptr %3, align 8
  %178 = icmp ult i32 %177, 41
  br i1 %178, label %179, label %185

179:                                              ; preds = %176
  %180 = getelementptr inbounds %struct.__va_list_tag, ptr %3, i64 0, i32 3
  %181 = load ptr, ptr %180, align 8
  %182 = zext i32 %177 to i64
  %183 = getelementptr i8, ptr %181, i64 %182
  %184 = add nuw nsw i32 %177, 8
  store i32 %184, ptr %3, align 8
  br label %189

185:                                              ; preds = %176
  %186 = getelementptr inbounds %struct.__va_list_tag, ptr %3, i64 0, i32 2
  %187 = load ptr, ptr %186, align 8
  %188 = getelementptr i8, ptr %187, i64 8
  store ptr %188, ptr %186, align 8
  br label %189

189:                                              ; preds = %185, %179
  %190 = phi ptr [ %183, %179 ], [ %187, %185 ]
  %191 = load ptr, ptr %190, align 8
  %192 = icmp eq ptr %191, null
  br i1 %192, label %3396, label %193

193:                                              ; preds = %189
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #17
  %194 = getelementptr inbounds %struct.sv, ptr %191, i64 0, i32 2
  %195 = load i32, ptr %194, align 4, !tbaa !16
  %196 = and i32 %195, 2098176
  %197 = icmp eq i32 %196, 1024
  br i1 %197, label %198, label %204

198:                                              ; preds = %193
  %199 = load ptr, ptr %191, align 8, !tbaa !26
  %200 = getelementptr inbounds %struct.xpv, ptr %199, i64 0, i32 2
  %201 = load i64, ptr %200, align 8, !tbaa !57
  store i64 %201, ptr %10, align 8, !tbaa !60
  %202 = getelementptr inbounds %struct.sv, ptr %191, i64 0, i32 3
  %203 = load ptr, ptr %202, align 8, !tbaa !17
  br label %208

204:                                              ; preds = %193
  %205 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %191, ptr noundef nonnull %10, i32 noundef 32)
  %206 = load i64, ptr %10, align 8, !tbaa !60
  %207 = load i32, ptr %194, align 4, !tbaa !16
  br label %208

208:                                              ; preds = %204, %198
  %209 = phi i32 [ %195, %198 ], [ %207, %204 ]
  %210 = phi i64 [ %201, %198 ], [ %206, %204 ]
  %211 = phi ptr [ %203, %198 ], [ %205, %204 ]
  %212 = and i32 %209, 536870912
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %221, label %214

214:                                              ; preds = %208
  %215 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %216 = getelementptr inbounds %struct.cop, ptr %215, i64 0, i32 10
  %217 = load i32, ptr %216, align 8, !tbaa !79
  %218 = and i32 %217, 8
  %219 = icmp eq i32 %218, 0
  %220 = select i1 %219, i32 32768, i32 16384
  br label %221

221:                                              ; preds = %214, %208
  %222 = phi i32 [ 16384, %208 ], [ %220, %214 ]
  call void @Perl_sv_catpvn_flags(ptr noundef nonnull %0, ptr noundef %211, i64 noundef %210, i32 noundef %222)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #17
  br label %3396

223:                                              ; preds = %139, %141
  %224 = phi i1 [ %140, %139 ], [ %142, %141 ]
  %225 = icmp eq ptr %3, null
  %226 = icmp ult i64 %2, 6
  %227 = and i1 %226, %225
  br i1 %227, label %228, label %304

228:                                              ; preds = %223
  %229 = load i8, ptr %1, align 1, !tbaa !17
  %230 = icmp eq i8 %229, 37
  br i1 %230, label %231, label %304

231:                                              ; preds = %228
  %232 = getelementptr inbounds i8, ptr %1, i64 1
  %233 = load i8, ptr %232, align 1, !tbaa !17
  %234 = icmp eq i8 %233, 46
  br i1 %234, label %235, label %304

235:                                              ; preds = %231
  %236 = add nsw i64 %2, -1
  %237 = getelementptr inbounds i8, ptr %1, i64 %236
  %238 = load i8, ptr %237, align 1, !tbaa !17
  %239 = and i8 %238, -2
  %240 = icmp eq i8 %239, 102
  br i1 %240, label %241, label %304

241:                                              ; preds = %235
  %242 = getelementptr inbounds i8, ptr %1, i64 2
  %243 = load i8, ptr %242, align 1, !tbaa !17
  %244 = add i8 %243, -48
  %245 = icmp ult i8 %244, 10
  br i1 %245, label %246, label %258

246:                                              ; preds = %241, %246
  %247 = phi i8 [ %255, %246 ], [ %243, %241 ]
  %248 = phi i32 [ %254, %246 ], [ 0, %241 ]
  %249 = phi ptr [ %252, %246 ], [ %242, %241 ]
  %250 = zext i8 %247 to i32
  %251 = mul i32 %248, 10
  %252 = getelementptr inbounds i8, ptr %249, i64 1
  %253 = add nsw i32 %250, -48
  %254 = add i32 %253, %251
  %255 = load i8, ptr %252, align 1, !tbaa !17
  %256 = add i8 %255, -48
  %257 = icmp ult i8 %256, 10
  br i1 %257, label %246, label %258, !llvm.loop !188

258:                                              ; preds = %246, %241
  %259 = phi ptr [ %242, %241 ], [ %252, %246 ]
  %260 = phi i32 [ 0, %241 ], [ %254, %246 ]
  %261 = ptrtoint ptr %259 to i64
  %262 = ptrtoint ptr %1 to i64
  %263 = sub i64 %261, %262
  %264 = add i64 %2, 4294967295
  %265 = and i64 %264, 4294967295
  %266 = icmp eq i64 %263, %265
  %267 = icmp sgt i32 %5, 0
  %268 = and i1 %267, %266
  br i1 %268, label %269, label %304

269:                                              ; preds = %258
  %270 = load ptr, ptr %4, align 8, !tbaa !9
  %271 = getelementptr inbounds %struct.sv, ptr %270, i64 0, i32 2
  %272 = load i32, ptr %271, align 4, !tbaa !16
  %273 = and i32 %272, 2097664
  %274 = icmp eq i32 %273, 512
  br i1 %274, label %275, label %279

275:                                              ; preds = %269
  %276 = load ptr, ptr %270, align 8, !tbaa !26
  %277 = getelementptr inbounds %struct.xpvnv, ptr %276, i64 0, i32 5
  %278 = load double, ptr %277, align 8, !tbaa !17
  br label %281

279:                                              ; preds = %269
  %280 = call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %270, i32 noundef 2)
  br label %281

281:                                              ; preds = %279, %275
  %282 = phi fast double [ %278, %275 ], [ %280, %279 ]
  %283 = call zeroext i1 @Perl_isinfnan(double noundef nofpclass(nan inf) %282) #17
  br i1 %283, label %304, label %284

284:                                              ; preds = %281
  %285 = load i8, ptr %259, align 1, !tbaa !17
  %286 = icmp eq i8 %285, 103
  br i1 %286, label %287, label %295

287:                                              ; preds = %284
  %288 = add i32 %260, -1
  %289 = icmp ult i32 %288, 101
  br i1 %289, label %290, label %304

290:                                              ; preds = %287
  %291 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %12, ptr noundef nonnull dereferenceable(1) @.str.8, i32 noundef %260, double noundef nofpclass(nan inf) %282) #17
  %292 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %12) #18
  call void @Perl_sv_catpvn_flags(ptr noundef %0, ptr noundef nonnull %12, i64 noundef %292, i32 noundef 0)
  %293 = load i8, ptr %12, align 16, !tbaa !17
  %294 = icmp eq i8 %293, 0
  br i1 %294, label %304, label %3396

295:                                              ; preds = %284
  %296 = icmp eq i32 %260, 0
  br i1 %296, label %297, label %304

297:                                              ; preds = %295
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #17
  %298 = getelementptr inbounds i8, ptr %12, i64 127
  %299 = call fastcc ptr @S_F0convert(double noundef nofpclass(nan inf) %282, ptr noundef nonnull %298, ptr noundef nonnull %13)
  %300 = icmp eq ptr %299, null
  br i1 %300, label %303, label %301

301:                                              ; preds = %297
  %302 = load i64, ptr %13, align 8, !tbaa !60
  call void @Perl_sv_catpvn_flags(ptr noundef %0, ptr noundef nonnull %299, i64 noundef %302, i32 noundef 0)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #17
  br label %3396

303:                                              ; preds = %297
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #17
  br label %304

304:                                              ; preds = %281, %295, %287, %290, %303, %235, %258, %231, %228, %223
  %305 = icmp slt i32 %5, 1
  %306 = or i1 %305, %224
  br i1 %306, label %320, label %307

307:                                              ; preds = %304
  %308 = load ptr, ptr %4, align 8, !tbaa !9
  %309 = getelementptr inbounds %struct.sv, ptr %308, i64 0, i32 2
  %310 = load i32, ptr %309, align 4, !tbaa !16
  %311 = and i32 %310, 536870912
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %320, label %313

313:                                              ; preds = %307
  %314 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %315 = getelementptr inbounds %struct.cop, ptr %314, i64 0, i32 10
  %316 = load i32, ptr %315, align 8, !tbaa !79
  %317 = and i32 %316, 8
  %318 = icmp eq i32 %317, 0
  %319 = select i1 %318, i1 true, i1 %37
  br label %320

320:                                              ; preds = %313, %307, %304
  %321 = phi i1 [ %37, %304 ], [ %37, %307 ], [ %319, %313 ]
  %322 = icmp sgt i64 %2, 0
  br i1 %322, label %323, label %3364

323:                                              ; preds = %152, %148, %145, %320
  %324 = phi i1 [ %321, %320 ], [ %37, %145 ], [ %37, %148 ], [ %37, %152 ]
  %325 = phi i1 [ %224, %320 ], [ true, %145 ], [ true, %148 ], [ true, %152 ]
  %326 = getelementptr inbounds i8, ptr %1, i64 %2
  %327 = zext i1 %324 to i8
  %328 = getelementptr inbounds %struct.__va_list_tag, ptr %3, i64 0, i32 2
  %329 = getelementptr inbounds %struct.__va_list_tag, ptr %3, i64 0, i32 3
  %330 = getelementptr inbounds i8, ptr %12, i64 127
  %331 = getelementptr inbounds %struct.__va_list_tag, ptr %3, i64 0, i32 1
  %332 = getelementptr inbounds i8, ptr %23, i64 1
  %333 = getelementptr inbounds i8, ptr %12, i64 126
  %334 = getelementptr inbounds i8, ptr %12, i64 125
  %335 = ptrtoint ptr %15 to i64
  %336 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %337 = sub i64 0, %24
  %338 = getelementptr i8, ptr %23, i64 %337
  %339 = getelementptr inbounds i8, ptr %12, i64 124
  %340 = ptrtoint ptr %330 to i64
  %341 = getelementptr inbounds i8, ptr %14, i64 1
  %342 = getelementptr inbounds i8, ptr %14, i64 1
  %343 = getelementptr inbounds i8, ptr %14, i64 1
  br label %344

344:                                              ; preds = %323, %3356
  %345 = phi ptr [ %1, %323 ], [ %3357, %3356 ]
  %346 = phi i32 [ 0, %323 ], [ %3362, %3356 ]
  %347 = phi ptr [ null, %323 ], [ %3361, %3356 ]
  %348 = phi i8 [ %327, %323 ], [ %3360, %3356 ]
  %349 = phi ptr [ null, %323 ], [ %462, %3356 ]
  %350 = phi i8 [ 0, %323 ], [ %3359, %3356 ]
  %351 = phi i8 [ 0, %323 ], [ %3358, %3356 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14)
  call void @llvm.lifetime.start.p0(i64 14, ptr nonnull %15) #17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %16) #17
  store i64 0, ptr %16, align 8, !tbaa !60
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %17) #17
  store i64 0, ptr %17, align 8, !tbaa !60
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %18) #17
  store i8 0, ptr %18, align 1, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %19) #17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %20) #17
  store i64 1, ptr %20, align 8, !tbaa !60
  br label %352

352:                                              ; preds = %344, %356
  %353 = phi ptr [ %345, %344 ], [ %357, %356 ]
  %354 = load i8, ptr %353, align 1, !tbaa !17
  %355 = icmp eq i8 %354, 37
  br i1 %355, label %359, label %356

356:                                              ; preds = %352
  %357 = getelementptr inbounds i8, ptr %353, i64 1
  %358 = icmp ult ptr %357, %326
  br i1 %358, label %352, label %359, !llvm.loop !189

359:                                              ; preds = %356, %352
  %360 = phi ptr [ %357, %356 ], [ %353, %352 ]
  %361 = icmp ugt ptr %360, %345
  br i1 %361, label %362, label %461

362:                                              ; preds = %359
  %363 = and i8 %348, 1
  %364 = icmp eq i8 %363, 0
  %365 = select i1 %364, i1 true, i1 %37
  br i1 %365, label %457, label %366

366:                                              ; preds = %362
  %367 = icmp eq ptr %349, null
  %368 = ptrtoint ptr %360 to i64
  %369 = ptrtoint ptr %345 to i64
  %370 = sub i64 %368, %369
  br i1 %367, label %371, label %422

371:                                              ; preds = %366
  %372 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %373 = icmp eq ptr %372, null
  br i1 %373, label %374, label %403

374:                                              ; preds = %371
  %375 = call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %376 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %376, ptr %375, align 8, !tbaa !26
  %377 = getelementptr inbounds %struct.sv, ptr %375, i64 0, i32 1
  store i32 170, ptr %377, align 8, !tbaa !13
  %378 = getelementptr inbounds %struct.sv, ptr %375, i64 0, i32 2
  store i32 0, ptr %378, align 4, !tbaa !16
  store ptr %375, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %379 = getelementptr inbounds %struct.sv, ptr %375, i64 1
  store ptr %379, ptr @PL_sv_root, align 8, !tbaa !9
  br label %380

380:                                              ; preds = %380, %374
  %381 = phi ptr [ %379, %374 ], [ %398, %380 ]
  %382 = phi i64 [ 1, %374 ], [ %397, %380 ]
  %383 = getelementptr inbounds %struct.sv, ptr %381, i64 1
  store ptr %383, ptr %381, align 8, !tbaa !26
  %384 = getelementptr inbounds %struct.sv, ptr %375, i64 %382, i32 2
  store i32 255, ptr %384, align 4, !tbaa !16
  %385 = add nuw nsw i64 %382, 1
  %386 = getelementptr inbounds %struct.sv, ptr %375, i64 %385
  %387 = getelementptr inbounds %struct.sv, ptr %386, i64 1
  store ptr %387, ptr %386, align 8, !tbaa !26
  %388 = getelementptr inbounds %struct.sv, ptr %375, i64 %385, i32 2
  store i32 255, ptr %388, align 4, !tbaa !16
  %389 = add nuw nsw i64 %382, 2
  %390 = getelementptr inbounds %struct.sv, ptr %375, i64 %389
  %391 = getelementptr inbounds %struct.sv, ptr %390, i64 1
  store ptr %391, ptr %390, align 8, !tbaa !26
  %392 = getelementptr inbounds %struct.sv, ptr %375, i64 %389, i32 2
  store i32 255, ptr %392, align 4, !tbaa !16
  %393 = add nuw nsw i64 %382, 3
  %394 = getelementptr inbounds %struct.sv, ptr %375, i64 %393
  %395 = getelementptr inbounds %struct.sv, ptr %394, i64 1
  store ptr %395, ptr %394, align 8, !tbaa !26
  %396 = getelementptr inbounds %struct.sv, ptr %375, i64 %393, i32 2
  store i32 255, ptr %396, align 4, !tbaa !16
  %397 = add nuw nsw i64 %382, 4
  %398 = getelementptr inbounds %struct.sv, ptr %375, i64 %397
  %399 = icmp eq i64 %397, 169
  br i1 %399, label %400, label %380, !llvm.loop !59

400:                                              ; preds = %380
  store ptr null, ptr %398, align 8, !tbaa !26
  %401 = getelementptr inbounds %struct.sv, ptr %375, i64 169, i32 2
  store i32 255, ptr %401, align 4, !tbaa !16
  %402 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %403

403:                                              ; preds = %371, %400
  %404 = phi ptr [ %402, %400 ], [ %372, %371 ]
  %405 = load ptr, ptr %404, align 8, !tbaa !26
  store ptr %405, ptr @PL_sv_root, align 8, !tbaa !9
  %406 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %407 = add nsw i64 %406, 1
  store i64 %407, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %404, align 8, !tbaa !26
  %408 = getelementptr inbounds %struct.sv, ptr %404, i64 0, i32 1
  store i32 1, ptr %408, align 8, !tbaa !13
  %409 = getelementptr inbounds %struct.sv, ptr %404, i64 0, i32 2
  store i32 0, ptr %409, align 4, !tbaa !16
  call void @Perl_sv_setpvn(ptr noundef nonnull %404, ptr noundef %345, i64 noundef %370)
  %410 = load i32, ptr %409, align 4, !tbaa !16
  %411 = or i32 %410, 524288
  store i32 %411, ptr %409, align 4, !tbaa !16
  %412 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %413 = add nsw i64 %412, 1
  store i64 %413, ptr @PL_tmps_ix, align 8, !tbaa !60
  %414 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %415 = icmp slt i64 %413, %414
  br i1 %415, label %418, label %416

416:                                              ; preds = %403
  %417 = call i64 @Perl_tmps_grow_p(i64 noundef %413) #17
  br label %418

418:                                              ; preds = %403, %416
  %419 = phi i64 [ %417, %416 ], [ %413, %403 ]
  %420 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %421 = getelementptr inbounds ptr, ptr %420, i64 %419
  store ptr %404, ptr %421, align 8, !tbaa !9
  br label %423

422:                                              ; preds = %366
  call void @Perl_sv_setpvn(ptr noundef nonnull %349, ptr noundef %345, i64 noundef %370)
  br label %423

423:                                              ; preds = %418, %422
  %424 = phi ptr [ %349, %422 ], [ %404, %418 ]
  %425 = getelementptr inbounds %struct.sv, ptr %424, i64 0, i32 2
  %426 = load i32, ptr %425, align 4, !tbaa !16
  %427 = and i32 %426, -536870913
  store i32 %427, ptr %425, align 4, !tbaa !16
  %428 = call i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef nonnull %424, i32 noundef 2, i64 noundef 0)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #17
  %429 = load i32, ptr %425, align 4, !tbaa !16
  %430 = and i32 %429, 2098176
  %431 = icmp eq i32 %430, 1024
  br i1 %431, label %432, label %438

432:                                              ; preds = %423
  %433 = load ptr, ptr %424, align 8, !tbaa !26
  %434 = getelementptr inbounds %struct.xpv, ptr %433, i64 0, i32 2
  %435 = load i64, ptr %434, align 8, !tbaa !57
  store i64 %435, ptr %9, align 8, !tbaa !60
  %436 = getelementptr inbounds %struct.sv, ptr %424, i64 0, i32 3
  %437 = load ptr, ptr %436, align 8, !tbaa !17
  br label %442

438:                                              ; preds = %423
  %439 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %424, ptr noundef nonnull %9, i32 noundef 32)
  %440 = load i64, ptr %9, align 8, !tbaa !60
  %441 = load i32, ptr %425, align 4, !tbaa !16
  br label %442

442:                                              ; preds = %438, %432
  %443 = phi i32 [ %429, %432 ], [ %441, %438 ]
  %444 = phi i64 [ %435, %432 ], [ %440, %438 ]
  %445 = phi ptr [ %437, %432 ], [ %439, %438 ]
  %446 = and i32 %443, 536870912
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %455, label %448

448:                                              ; preds = %442
  %449 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %450 = getelementptr inbounds %struct.cop, ptr %449, i64 0, i32 10
  %451 = load i32, ptr %450, align 8, !tbaa !79
  %452 = and i32 %451, 8
  %453 = icmp eq i32 %452, 0
  %454 = select i1 %453, i32 32768, i32 16384
  br label %455

455:                                              ; preds = %442, %448
  %456 = phi i32 [ 16384, %442 ], [ %454, %448 ]
  call void @Perl_sv_catpvn_flags(ptr noundef %0, ptr noundef %445, i64 noundef %444, i32 noundef %456)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #17
  br label %461

457:                                              ; preds = %362
  %458 = ptrtoint ptr %360 to i64
  %459 = ptrtoint ptr %345 to i64
  %460 = sub i64 %458, %459
  call void @Perl_sv_catpvn_flags(ptr noundef %0, ptr noundef %345, i64 noundef %460, i32 noundef 0)
  br label %461

461:                                              ; preds = %455, %457, %359
  %462 = phi ptr [ %349, %359 ], [ %349, %457 ], [ %424, %455 ]
  %463 = phi ptr [ %345, %359 ], [ %360, %457 ], [ %360, %455 ]
  %464 = getelementptr inbounds i8, ptr %360, i64 1
  br i1 %355, label %465, label %3355

465:                                              ; preds = %461
  br i1 %325, label %466, label %651

466:                                              ; preds = %465
  %467 = load i8, ptr %464, align 1, !tbaa !17
  %468 = icmp eq i8 %467, 45
  br i1 %468, label %469, label %472

469:                                              ; preds = %466
  %470 = getelementptr inbounds i8, ptr %360, i64 2
  %471 = load i8, ptr %470, align 1, !tbaa !17
  br label %523

472:                                              ; preds = %466
  %473 = call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %464, ptr noundef nonnull dereferenceable(8) @.str.67, i64 noundef 7) #18
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %475, label %523

475:                                              ; preds = %472
  %476 = load i32, ptr %3, align 8
  %477 = icmp ult i32 %476, 41
  br i1 %477, label %484, label %478

478:                                              ; preds = %475
  %479 = load ptr, ptr %328, align 8
  %480 = getelementptr i8, ptr %479, i64 8
  store ptr %480, ptr %328, align 8
  %481 = load i32, ptr %479, align 4
  %482 = icmp ne i32 %481, 0
  %483 = zext i1 %482 to i8
  br label %495

484:                                              ; preds = %475
  %485 = load ptr, ptr %329, align 8
  %486 = zext i32 %476 to i64
  %487 = getelementptr i8, ptr %485, i64 %486
  %488 = add nuw nsw i32 %476, 8
  store i32 %488, ptr %3, align 8
  %489 = load i32, ptr %487, align 4
  %490 = icmp ne i32 %489, 0
  %491 = zext i1 %490 to i8
  %492 = icmp ult i32 %476, 33
  br i1 %492, label %501, label %493

493:                                              ; preds = %484
  %494 = load ptr, ptr %328, align 8
  br label %495

495:                                              ; preds = %493, %478
  %496 = phi ptr [ %480, %478 ], [ %494, %493 ]
  %497 = phi i8 [ %483, %478 ], [ %491, %493 ]
  %498 = getelementptr i8, ptr %496, i64 8
  store ptr %498, ptr %328, align 8
  %499 = load i64, ptr %496, align 8
  %500 = call i64 @llvm.smax.i64(i64 %499, i64 0)
  store i64 %500, ptr %16, align 8
  br label %514

501:                                              ; preds = %484
  %502 = zext i32 %488 to i64
  %503 = getelementptr i8, ptr %485, i64 %502
  %504 = add nuw nsw i32 %476, 16
  store i32 %504, ptr %3, align 8
  %505 = load i64, ptr %503, align 8
  %506 = call i64 @llvm.smax.i64(i64 %505, i64 0)
  store i64 %506, ptr %16, align 8
  %507 = icmp ult i32 %476, 25
  br i1 %507, label %510, label %508

508:                                              ; preds = %501
  %509 = load ptr, ptr %328, align 8
  br label %514

510:                                              ; preds = %501
  %511 = zext i32 %504 to i64
  %512 = getelementptr i8, ptr %485, i64 %511
  %513 = add nuw nsw i32 %476, 24
  store i32 %513, ptr %3, align 8
  br label %518

514:                                              ; preds = %508, %495
  %515 = phi ptr [ %498, %495 ], [ %509, %508 ]
  %516 = phi i8 [ %497, %495 ], [ %491, %508 ]
  %517 = getelementptr i8, ptr %515, i64 8
  store ptr %517, ptr %328, align 8
  br label %518

518:                                              ; preds = %510, %514
  %519 = phi i8 [ %491, %510 ], [ %516, %514 ]
  %520 = phi ptr [ %512, %510 ], [ %515, %514 ]
  %521 = load ptr, ptr %520, align 8
  %522 = getelementptr inbounds i8, ptr %360, i64 8
  br label %3119

523:                                              ; preds = %472, %469
  %524 = phi i8 [ %471, %469 ], [ %467, %472 ]
  %525 = phi ptr [ %470, %469 ], [ %464, %472 ]
  %526 = sext i8 %524 to i32
  %527 = add nsw i32 %526, -49
  %528 = icmp ult i32 %527, 9
  br i1 %528, label %529, label %571

529:                                              ; preds = %523
  %530 = getelementptr inbounds i8, ptr %525, i64 1
  %531 = add nsw i32 %526, -48
  %532 = load i8, ptr %530, align 1, !tbaa !17
  %533 = zext i8 %532 to i64
  %534 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %533
  %535 = load i32, ptr %534, align 4, !tbaa !25
  %536 = and i32 %535, 2
  %537 = icmp eq i32 %536, 0
  br i1 %537, label %571, label %538

538:                                              ; preds = %529, %564
  %539 = phi i8 [ %565, %564 ], [ %532, %529 ]
  %540 = phi ptr [ %543, %564 ], [ %530, %529 ]
  %541 = phi i32 [ %546, %564 ], [ %531, %529 ]
  %542 = mul nsw i32 %541, 10
  %543 = getelementptr inbounds i8, ptr %540, i64 1
  %544 = sext i8 %539 to i32
  %545 = add nsw i32 %544, -48
  %546 = add i32 %545, %542
  %547 = icmp slt i32 %546, %541
  br i1 %547, label %548, label %564

548:                                              ; preds = %538
  %549 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %550 = icmp eq ptr %549, null
  br i1 %550, label %562, label %551

551:                                              ; preds = %548
  %552 = getelementptr inbounds %struct.op, ptr %549, i64 0, i32 4
  %553 = load i16, ptr %552, align 8
  %554 = and i16 %553, 511
  %555 = icmp eq i16 %554, 380
  br i1 %555, label %556, label %558

556:                                              ; preds = %551
  %557 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %549, i32 noundef 2) #17
  br label %562

558:                                              ; preds = %551
  %559 = zext i16 %554 to i64
  %560 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %559
  %561 = load ptr, ptr %560, align 8, !tbaa !9
  br label %562

562:                                              ; preds = %558, %556, %548
  %563 = phi ptr [ %557, %556 ], [ %561, %558 ], [ @.str.104, %548 ]
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.103, ptr noundef %563) #17
  br label %564

564:                                              ; preds = %562, %538
  %565 = load i8, ptr %543, align 1, !tbaa !17
  %566 = zext i8 %565 to i64
  %567 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %566
  %568 = load i32, ptr %567, align 4, !tbaa !25
  %569 = and i32 %568, 2
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %571, label %538, !llvm.loop !190

571:                                              ; preds = %564, %529, %523
  %572 = phi i8 [ %524, %523 ], [ %532, %529 ], [ %565, %564 ]
  %573 = phi ptr [ %525, %523 ], [ %530, %529 ], [ %543, %564 ]
  %574 = phi i32 [ 0, %523 ], [ %531, %529 ], [ %546, %564 ]
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds i8, ptr %573, i64 1
  %577 = icmp eq i8 %572, 112
  br i1 %577, label %578, label %651

578:                                              ; preds = %571
  br i1 %468, label %579, label %620

579:                                              ; preds = %578
  %580 = icmp ne i32 %574, 0
  %581 = zext i1 %580 to i8
  %582 = load i32, ptr %3, align 8
  %583 = icmp ult i32 %582, 41
  br i1 %583, label %584, label %589

584:                                              ; preds = %579
  %585 = load ptr, ptr %329, align 8
  %586 = zext i32 %582 to i64
  %587 = getelementptr i8, ptr %585, i64 %586
  %588 = add nuw nsw i32 %582, 8
  store i32 %588, ptr %3, align 8
  br label %592

589:                                              ; preds = %579
  %590 = load ptr, ptr %328, align 8
  %591 = getelementptr i8, ptr %590, i64 8
  store ptr %591, ptr %328, align 8
  br label %592

592:                                              ; preds = %589, %584
  %593 = phi ptr [ %587, %584 ], [ %590, %589 ]
  %594 = load ptr, ptr %593, align 8
  %595 = getelementptr inbounds %struct.sv, ptr %594, i64 0, i32 2
  %596 = load i32, ptr %595, align 4, !tbaa !16
  %597 = and i32 %596, 2098176
  %598 = icmp eq i32 %597, 1024
  br i1 %598, label %599, label %605

599:                                              ; preds = %592
  %600 = load ptr, ptr %594, align 8, !tbaa !26
  %601 = getelementptr inbounds %struct.xpv, ptr %600, i64 0, i32 2
  %602 = load i64, ptr %601, align 8, !tbaa !57
  store i64 %602, ptr %16, align 8, !tbaa !60
  %603 = getelementptr inbounds %struct.sv, ptr %594, i64 0, i32 3
  %604 = load ptr, ptr %603, align 8, !tbaa !17
  br label %608

605:                                              ; preds = %592
  %606 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %594, ptr noundef nonnull %16, i32 noundef 34)
  %607 = load i32, ptr %595, align 4, !tbaa !16
  br label %608

608:                                              ; preds = %605, %599
  %609 = phi i32 [ %596, %599 ], [ %607, %605 ]
  %610 = phi ptr [ %604, %599 ], [ %606, %605 ]
  %611 = and i32 %609, 536870912
  %612 = icmp eq i32 %611, 0
  br i1 %612, label %1892, label %613

613:                                              ; preds = %608
  %614 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %615 = getelementptr inbounds %struct.cop, ptr %614, i64 0, i32 10
  %616 = load i32, ptr %615, align 8, !tbaa !79
  %617 = and i32 %616, 8
  %618 = icmp eq i32 %617, 0
  %619 = zext i1 %618 to i8
  br label %1892

620:                                              ; preds = %578
  %621 = icmp eq i32 %574, 3
  %622 = and i32 %574, -2
  %623 = icmp eq i32 %622, 2
  br i1 %623, label %624, label %648

624:                                              ; preds = %620
  %625 = load i32, ptr %3, align 8
  %626 = icmp ult i32 %625, 41
  br i1 %626, label %627, label %632

627:                                              ; preds = %624
  %628 = load ptr, ptr %329, align 8
  %629 = zext i32 %625 to i64
  %630 = getelementptr i8, ptr %628, i64 %629
  %631 = add nuw nsw i32 %625, 8
  store i32 %631, ptr %3, align 8
  br label %635

632:                                              ; preds = %624
  %633 = load ptr, ptr %328, align 8
  %634 = getelementptr i8, ptr %633, i64 8
  store ptr %634, ptr %328, align 8
  br label %635

635:                                              ; preds = %632, %627
  %636 = phi ptr [ %630, %627 ], [ %633, %632 ]
  %637 = load ptr, ptr %636, align 8
  %638 = getelementptr inbounds %struct.hek, ptr %637, i64 0, i32 2
  %639 = getelementptr inbounds %struct.hek, ptr %637, i64 0, i32 1
  %640 = load i32, ptr %639, align 4, !tbaa !84
  %641 = sext i32 %640 to i64
  store i64 %641, ptr %16, align 8, !tbaa !60
  %642 = getelementptr inbounds i8, ptr %638, i64 %641
  %643 = getelementptr inbounds i8, ptr %642, i64 1
  %644 = load i8, ptr %643, align 1, !tbaa !17
  %645 = and i8 %644, 1
  %646 = select i1 %621, i64 256, i64 0
  %647 = zext i1 %621 to i8
  br label %1892

648:                                              ; preds = %620
  %649 = icmp eq i32 %574, 0
  br i1 %649, label %651, label %650

650:                                              ; preds = %648
  call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 24, ptr noundef nonnull @.str.68) #17
  br label %651

651:                                              ; preds = %648, %650, %571, %465
  %652 = load i8, ptr %464, align 1, !tbaa !17
  %653 = sext i8 %652 to i32
  %654 = add nsw i32 %653, -49
  %655 = icmp ult i32 %654, 9
  br i1 %655, label %656, label %715

656:                                              ; preds = %651
  %657 = getelementptr inbounds i8, ptr %360, i64 2
  %658 = add nsw i32 %653, -48
  %659 = load i8, ptr %657, align 1, !tbaa !17
  %660 = zext i8 %659 to i64
  %661 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %660
  %662 = load i32, ptr %661, align 4, !tbaa !25
  %663 = and i32 %662, 2
  %664 = icmp eq i32 %663, 0
  br i1 %664, label %665, label %667

665:                                              ; preds = %656
  %666 = zext i32 %658 to i64
  br label %703

667:                                              ; preds = %656, %693
  %668 = phi i8 [ %694, %693 ], [ %659, %656 ]
  %669 = phi ptr [ %672, %693 ], [ %657, %656 ]
  %670 = phi i32 [ %675, %693 ], [ %658, %656 ]
  %671 = mul nsw i32 %670, 10
  %672 = getelementptr inbounds i8, ptr %669, i64 1
  %673 = sext i8 %668 to i32
  %674 = add nsw i32 %673, -48
  %675 = add i32 %674, %671
  %676 = icmp slt i32 %675, %670
  br i1 %676, label %677, label %693

677:                                              ; preds = %667
  %678 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %679 = icmp eq ptr %678, null
  br i1 %679, label %691, label %680

680:                                              ; preds = %677
  %681 = getelementptr inbounds %struct.op, ptr %678, i64 0, i32 4
  %682 = load i16, ptr %681, align 8
  %683 = and i16 %682, 511
  %684 = icmp eq i16 %683, 380
  br i1 %684, label %685, label %687

685:                                              ; preds = %680
  %686 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %678, i32 noundef 2) #17
  br label %691

687:                                              ; preds = %680
  %688 = zext i16 %683 to i64
  %689 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %688
  %690 = load ptr, ptr %689, align 8, !tbaa !9
  br label %691

691:                                              ; preds = %687, %685, %677
  %692 = phi ptr [ %686, %685 ], [ %690, %687 ], [ @.str.104, %677 ]
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.103, ptr noundef %692) #17
  br label %693

693:                                              ; preds = %691, %667
  %694 = load i8, ptr %672, align 1, !tbaa !17
  %695 = zext i8 %694 to i64
  %696 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %695
  %697 = load i32, ptr %696, align 4, !tbaa !25
  %698 = and i32 %697, 2
  %699 = icmp eq i32 %698, 0
  br i1 %699, label %700, label %667, !llvm.loop !190

700:                                              ; preds = %693
  %701 = sext i32 %675 to i64
  %702 = icmp eq i32 %675, 0
  br i1 %702, label %715, label %703

703:                                              ; preds = %665, %700
  %704 = phi i8 [ %659, %665 ], [ %694, %700 ]
  %705 = phi i64 [ %666, %665 ], [ %701, %700 ]
  %706 = phi i32 [ %658, %665 ], [ %675, %700 ]
  %707 = phi ptr [ %657, %665 ], [ %672, %700 ]
  %708 = icmp eq i8 %704, 36
  br i1 %708, label %709, label %1232

709:                                              ; preds = %703
  %710 = getelementptr inbounds i8, ptr %707, i64 1
  %711 = and i8 %350, 1
  %712 = icmp eq i8 %711, 0
  %713 = select i1 %712, i8 1, i8 %350
  %714 = load i8, ptr %710, align 1, !tbaa !17
  br label %715

715:                                              ; preds = %651, %709, %700
  %716 = phi i8 [ %694, %700 ], [ %714, %709 ], [ %652, %651 ]
  %717 = phi i64 [ 0, %700 ], [ %705, %709 ], [ 0, %651 ]
  %718 = phi ptr [ %672, %700 ], [ %710, %709 ], [ %464, %651 ]
  %719 = phi i32 [ 0, %700 ], [ %706, %709 ], [ 0, %651 ]
  %720 = phi i8 [ %350, %700 ], [ %713, %709 ], [ %350, %651 ]
  %721 = icmp eq i8 %716, 0
  br i1 %721, label %928, label %722

722:                                              ; preds = %715, %749
  %723 = phi i8 [ %758, %749 ], [ %716, %715 ]
  %724 = phi i8 [ %751, %749 ], [ 0, %715 ]
  %725 = phi i8 [ %738, %749 ], [ 0, %715 ]
  %726 = phi i8 [ %733, %749 ], [ 32, %715 ]
  %727 = phi i8 [ %757, %749 ], [ 0, %715 ]
  %728 = phi ptr [ %756, %749 ], [ %718, %715 ]
  br label %729

729:                                              ; preds = %722, %766
  %730 = phi i8 [ %723, %722 ], [ %771, %766 ]
  %731 = phi i8 [ %724, %722 ], [ %768, %766 ]
  %732 = phi i8 [ %725, %722 ], [ %738, %766 ]
  %733 = phi i8 [ %726, %722 ], [ %767, %766 ]
  %734 = phi ptr [ %728, %722 ], [ %770, %766 ]
  br label %735

735:                                              ; preds = %729, %760
  %736 = phi i8 [ %730, %729 ], [ %764, %760 ]
  %737 = phi i8 [ %731, %729 ], [ %761, %760 ]
  %738 = phi i8 [ %732, %729 ], [ 1, %760 ]
  %739 = phi ptr [ %734, %729 ], [ %763, %760 ]
  %740 = sext i8 %736 to i32
  switch i32 %740, label %777 [
    i32 32, label %749
    i32 43, label %749
    i32 45, label %760
    i32 48, label %766
    i32 35, label %741
  ]

741:                                              ; preds = %735
  %742 = getelementptr inbounds i8, ptr %739, i64 1
  %743 = load i8, ptr %742, align 1, !tbaa !17
  %744 = icmp eq i8 %743, 0
  br i1 %744, label %928, label %745

745:                                              ; preds = %741, %773
  %746 = phi i8 [ %775, %773 ], [ %743, %741 ]
  %747 = phi ptr [ %774, %773 ], [ %742, %741 ]
  %748 = sext i8 %746 to i32
  switch i32 %748, label %777 [
    i32 32, label %749
    i32 43, label %749
    i32 45, label %760
    i32 48, label %766
    i32 35, label %773
  ]

749:                                              ; preds = %735, %735, %745, %745
  %750 = phi i8 [ %746, %745 ], [ %746, %745 ], [ %736, %735 ], [ %736, %735 ]
  %751 = phi i8 [ 1, %745 ], [ 1, %745 ], [ %737, %735 ], [ %737, %735 ]
  %752 = phi ptr [ %747, %745 ], [ %747, %745 ], [ %739, %735 ], [ %739, %735 ]
  %753 = icmp eq i8 %727, 43
  %754 = icmp eq i8 %750, 32
  %755 = and i1 %753, %754
  %756 = getelementptr inbounds i8, ptr %752, i64 1
  %757 = select i1 %755, i8 43, i8 %750
  %758 = load i8, ptr %756, align 1, !tbaa !17
  %759 = icmp eq i8 %758, 0
  br i1 %759, label %928, label %722, !llvm.loop !191

760:                                              ; preds = %745, %735
  %761 = phi i8 [ %737, %735 ], [ 1, %745 ]
  %762 = phi ptr [ %739, %735 ], [ %747, %745 ]
  %763 = getelementptr inbounds i8, ptr %762, i64 1
  %764 = load i8, ptr %763, align 1, !tbaa !17
  %765 = icmp eq i8 %764, 0
  br i1 %765, label %928, label %735, !llvm.loop !191

766:                                              ; preds = %735, %745
  %767 = phi i8 [ %746, %745 ], [ %736, %735 ]
  %768 = phi i8 [ 1, %745 ], [ %737, %735 ]
  %769 = phi ptr [ %747, %745 ], [ %739, %735 ]
  %770 = getelementptr inbounds i8, ptr %769, i64 1
  %771 = load i8, ptr %770, align 1, !tbaa !17
  %772 = icmp eq i8 %771, 0
  br i1 %772, label %928, label %729, !llvm.loop !191

773:                                              ; preds = %745
  %774 = getelementptr inbounds i8, ptr %747, i64 1
  %775 = load i8, ptr %774, align 1, !tbaa !17
  %776 = icmp eq i8 %775, 0
  br i1 %776, label %928, label %745, !llvm.loop !192

777:                                              ; preds = %735, %745
  %778 = phi i8 [ %746, %745 ], [ %736, %735 ]
  %779 = phi ptr [ %747, %745 ], [ %739, %735 ]
  %780 = phi i8 [ 1, %745 ], [ %737, %735 ]
  %781 = icmp eq i8 %778, 42
  br i1 %781, label %782, label %840

782:                                              ; preds = %777
  %783 = getelementptr inbounds i8, ptr %779, i64 1
  %784 = load i8, ptr %783, align 1, !tbaa !17
  %785 = sext i8 %784 to i32
  %786 = add nsw i32 %785, -49
  %787 = icmp ult i32 %786, 9
  br i1 %787, label %788, label %840

788:                                              ; preds = %782
  %789 = getelementptr inbounds i8, ptr %779, i64 2
  %790 = add nsw i32 %785, -48
  %791 = load i8, ptr %789, align 1, !tbaa !17
  %792 = zext i8 %791 to i64
  %793 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %792
  %794 = load i32, ptr %793, align 4, !tbaa !25
  %795 = and i32 %794, 2
  %796 = icmp eq i32 %795, 0
  br i1 %796, label %832, label %797

797:                                              ; preds = %788, %823
  %798 = phi i8 [ %824, %823 ], [ %791, %788 ]
  %799 = phi ptr [ %802, %823 ], [ %789, %788 ]
  %800 = phi i32 [ %805, %823 ], [ %790, %788 ]
  %801 = mul nsw i32 %800, 10
  %802 = getelementptr inbounds i8, ptr %799, i64 1
  %803 = sext i8 %798 to i32
  %804 = add nsw i32 %803, -48
  %805 = add i32 %804, %801
  %806 = icmp slt i32 %805, %800
  br i1 %806, label %807, label %823

807:                                              ; preds = %797
  %808 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %809 = icmp eq ptr %808, null
  br i1 %809, label %821, label %810

810:                                              ; preds = %807
  %811 = getelementptr inbounds %struct.op, ptr %808, i64 0, i32 4
  %812 = load i16, ptr %811, align 8
  %813 = and i16 %812, 511
  %814 = icmp eq i16 %813, 380
  br i1 %814, label %815, label %817

815:                                              ; preds = %810
  %816 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %808, i32 noundef 2) #17
  br label %821

817:                                              ; preds = %810
  %818 = zext i16 %813 to i64
  %819 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %818
  %820 = load ptr, ptr %819, align 8, !tbaa !9
  br label %821

821:                                              ; preds = %817, %815, %807
  %822 = phi ptr [ %816, %815 ], [ %820, %817 ], [ @.str.104, %807 ]
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.103, ptr noundef %822) #17
  br label %823

823:                                              ; preds = %821, %797
  %824 = load i8, ptr %802, align 1, !tbaa !17
  %825 = zext i8 %824 to i64
  %826 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %825
  %827 = load i32, ptr %826, align 4, !tbaa !25
  %828 = and i32 %827, 2
  %829 = icmp eq i32 %828, 0
  br i1 %829, label %830, label %797, !llvm.loop !190

830:                                              ; preds = %823
  %831 = icmp eq i32 %805, 0
  br i1 %831, label %840, label %832

832:                                              ; preds = %788, %830
  %833 = phi i8 [ %824, %830 ], [ %791, %788 ]
  %834 = phi i32 [ %805, %830 ], [ %790, %788 ]
  %835 = phi ptr [ %802, %830 ], [ %789, %788 ]
  %836 = getelementptr inbounds i8, ptr %835, i64 1
  %837 = icmp eq i8 %833, 36
  br i1 %837, label %838, label %2987

838:                                              ; preds = %832
  %839 = load i8, ptr %836, align 1, !tbaa !17
  br label %840

840:                                              ; preds = %830, %838, %782, %777
  %841 = phi i32 [ 0, %782 ], [ 0, %777 ], [ %834, %838 ], [ 0, %830 ]
  %842 = phi i8 [ %784, %782 ], [ %778, %777 ], [ %839, %838 ], [ %824, %830 ]
  %843 = phi ptr [ %783, %782 ], [ %779, %777 ], [ %836, %838 ], [ %802, %830 ]
  %844 = phi i8 [ 1, %782 ], [ 0, %777 ], [ 1, %838 ], [ 1, %830 ]
  %845 = phi i8 [ %720, %782 ], [ %720, %777 ], [ 1, %838 ], [ %720, %830 ]
  %846 = icmp eq i8 %842, 118
  br i1 %846, label %847, label %918

847:                                              ; preds = %840
  %848 = getelementptr inbounds i8, ptr %843, i64 1
  %849 = load i8, ptr %848, align 1, !tbaa !17
  %850 = icmp eq i8 %849, 42
  br i1 %850, label %851, label %909

851:                                              ; preds = %847
  %852 = getelementptr inbounds i8, ptr %843, i64 2
  %853 = load i8, ptr %852, align 1, !tbaa !17
  %854 = sext i8 %853 to i32
  %855 = add nsw i32 %854, -49
  %856 = icmp ult i32 %855, 9
  br i1 %856, label %857, label %909

857:                                              ; preds = %851
  %858 = getelementptr inbounds i8, ptr %843, i64 3
  %859 = add nsw i32 %854, -48
  %860 = load i8, ptr %858, align 1, !tbaa !17
  %861 = zext i8 %860 to i64
  %862 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %861
  %863 = load i32, ptr %862, align 4, !tbaa !25
  %864 = and i32 %863, 2
  %865 = icmp eq i32 %864, 0
  br i1 %865, label %901, label %866

866:                                              ; preds = %857, %892
  %867 = phi i8 [ %893, %892 ], [ %860, %857 ]
  %868 = phi ptr [ %871, %892 ], [ %858, %857 ]
  %869 = phi i32 [ %874, %892 ], [ %859, %857 ]
  %870 = mul nsw i32 %869, 10
  %871 = getelementptr inbounds i8, ptr %868, i64 1
  %872 = sext i8 %867 to i32
  %873 = add nsw i32 %872, -48
  %874 = add i32 %873, %870
  %875 = icmp slt i32 %874, %869
  br i1 %875, label %876, label %892

876:                                              ; preds = %866
  %877 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %878 = icmp eq ptr %877, null
  br i1 %878, label %890, label %879

879:                                              ; preds = %876
  %880 = getelementptr inbounds %struct.op, ptr %877, i64 0, i32 4
  %881 = load i16, ptr %880, align 8
  %882 = and i16 %881, 511
  %883 = icmp eq i16 %882, 380
  br i1 %883, label %888, label %884

884:                                              ; preds = %879
  %885 = zext i16 %882 to i64
  %886 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %885
  %887 = load ptr, ptr %886, align 8, !tbaa !9
  br label %890

888:                                              ; preds = %879
  %889 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %877, i32 noundef 2) #17
  br label %890

890:                                              ; preds = %888, %884, %876
  %891 = phi ptr [ %889, %888 ], [ %887, %884 ], [ @.str.104, %876 ]
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.103, ptr noundef %891) #17
  br label %892

892:                                              ; preds = %890, %866
  %893 = load i8, ptr %871, align 1, !tbaa !17
  %894 = zext i8 %893 to i64
  %895 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %894
  %896 = load i32, ptr %895, align 4, !tbaa !25
  %897 = and i32 %896, 2
  %898 = icmp eq i32 %897, 0
  br i1 %898, label %899, label %866, !llvm.loop !190

899:                                              ; preds = %892
  %900 = icmp eq i32 %874, 0
  br i1 %900, label %909, label %901

901:                                              ; preds = %899, %857
  %902 = phi i8 [ %893, %899 ], [ %860, %857 ]
  %903 = phi i32 [ %874, %899 ], [ %859, %857 ]
  %904 = phi ptr [ %871, %899 ], [ %858, %857 ]
  %905 = getelementptr inbounds i8, ptr %904, i64 1
  %906 = icmp eq i8 %902, 36
  br i1 %906, label %907, label %2987

907:                                              ; preds = %901
  %908 = load i8, ptr %905, align 1, !tbaa !17
  br label %909

909:                                              ; preds = %899, %907, %851, %847
  %910 = phi i8 [ %849, %847 ], [ %853, %851 ], [ %908, %907 ], [ %893, %899 ]
  %911 = phi ptr [ %848, %847 ], [ %852, %851 ], [ %905, %907 ], [ %871, %899 ]
  %912 = phi i32 [ 0, %847 ], [ 0, %851 ], [ %903, %907 ], [ 0, %899 ]
  %913 = phi i8 [ 0, %847 ], [ 1, %851 ], [ 1, %907 ], [ 1, %899 ]
  %914 = phi i8 [ %845, %847 ], [ %845, %851 ], [ 1, %907 ], [ %845, %899 ]
  %915 = icmp eq i8 %910, 118
  br i1 %915, label %916, label %918

916:                                              ; preds = %909
  %917 = getelementptr inbounds i8, ptr %911, i64 1
  br label %2987

918:                                              ; preds = %909, %840
  %919 = phi i32 [ 0, %840 ], [ %841, %909 ]
  %920 = phi i1 [ false, %840 ], [ %781, %909 ]
  %921 = phi i8 [ 0, %840 ], [ 1, %909 ]
  %922 = phi i8 [ %842, %840 ], [ %910, %909 ]
  %923 = phi ptr [ %843, %840 ], [ %911, %909 ]
  %924 = phi i32 [ %841, %840 ], [ %912, %909 ]
  %925 = phi i8 [ %844, %840 ], [ %913, %909 ]
  %926 = phi i8 [ %845, %840 ], [ %914, %909 ]
  %927 = icmp eq i8 %925, 0
  br i1 %927, label %928, label %995

928:                                              ; preds = %749, %766, %760, %741, %773, %715, %918
  %929 = phi i8 [ %926, %918 ], [ %720, %715 ], [ %720, %773 ], [ %720, %741 ], [ %720, %760 ], [ %720, %766 ], [ %720, %749 ]
  %930 = phi i32 [ %924, %918 ], [ 0, %715 ], [ 0, %773 ], [ 0, %741 ], [ 0, %760 ], [ 0, %766 ], [ 0, %749 ]
  %931 = phi ptr [ %923, %918 ], [ %718, %715 ], [ %774, %773 ], [ %763, %760 ], [ %742, %741 ], [ %770, %766 ], [ %756, %749 ]
  %932 = phi i8 [ %922, %918 ], [ 0, %715 ], [ 0, %773 ], [ 0, %741 ], [ 0, %760 ], [ 0, %766 ], [ 0, %749 ]
  %933 = phi i8 [ %921, %918 ], [ 0, %715 ], [ 0, %773 ], [ 0, %741 ], [ 0, %760 ], [ 0, %766 ], [ 0, %749 ]
  %934 = phi i1 [ %920, %918 ], [ false, %715 ], [ false, %773 ], [ false, %741 ], [ false, %760 ], [ false, %766 ], [ false, %749 ]
  %935 = phi i32 [ %919, %918 ], [ 0, %715 ], [ 0, %773 ], [ 0, %741 ], [ 0, %760 ], [ 0, %766 ], [ 0, %749 ]
  %936 = phi i8 [ %780, %918 ], [ 0, %715 ], [ 1, %773 ], [ %761, %760 ], [ 1, %741 ], [ %768, %766 ], [ %751, %749 ]
  %937 = phi i8 [ %738, %918 ], [ 0, %715 ], [ %738, %773 ], [ 1, %760 ], [ %738, %741 ], [ %738, %766 ], [ %738, %749 ]
  %938 = phi i8 [ %733, %918 ], [ 32, %715 ], [ %733, %773 ], [ %733, %741 ], [ %733, %760 ], [ %767, %766 ], [ %733, %749 ]
  %939 = phi i8 [ %727, %918 ], [ 0, %715 ], [ %727, %773 ], [ %727, %741 ], [ %727, %760 ], [ %727, %766 ], [ %757, %749 ]
  %940 = phi i1 [ %846, %918 ], [ false, %715 ], [ false, %773 ], [ false, %741 ], [ false, %760 ], [ false, %766 ], [ false, %749 ]
  %941 = icmp eq i8 %932, 48
  %942 = zext i1 %941 to i64
  %943 = getelementptr inbounds i8, ptr %931, i64 %942
  %944 = select i1 %941, i8 48, i8 %938
  %945 = load i8, ptr %943, align 1, !tbaa !17
  %946 = sext i8 %945 to i32
  %947 = add nsw i32 %946, -49
  %948 = icmp ult i32 %947, 9
  br i1 %948, label %949, label %991

949:                                              ; preds = %928
  %950 = getelementptr inbounds i8, ptr %943, i64 1
  %951 = add nsw i32 %946, -48
  %952 = load i8, ptr %950, align 1, !tbaa !17
  %953 = zext i8 %952 to i64
  %954 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %953
  %955 = load i32, ptr %954, align 4, !tbaa !25
  %956 = and i32 %955, 2
  %957 = icmp eq i32 %956, 0
  br i1 %957, label %991, label %958

958:                                              ; preds = %949, %984
  %959 = phi i8 [ %985, %984 ], [ %952, %949 ]
  %960 = phi ptr [ %963, %984 ], [ %950, %949 ]
  %961 = phi i32 [ %966, %984 ], [ %951, %949 ]
  %962 = mul nsw i32 %961, 10
  %963 = getelementptr inbounds i8, ptr %960, i64 1
  %964 = sext i8 %959 to i32
  %965 = add nsw i32 %964, -48
  %966 = add i32 %965, %962
  %967 = icmp slt i32 %966, %961
  br i1 %967, label %968, label %984

968:                                              ; preds = %958
  %969 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %970 = icmp eq ptr %969, null
  br i1 %970, label %982, label %971

971:                                              ; preds = %968
  %972 = getelementptr inbounds %struct.op, ptr %969, i64 0, i32 4
  %973 = load i16, ptr %972, align 8
  %974 = and i16 %973, 511
  %975 = icmp eq i16 %974, 380
  br i1 %975, label %976, label %978

976:                                              ; preds = %971
  %977 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %969, i32 noundef 2) #17
  br label %982

978:                                              ; preds = %971
  %979 = zext i16 %974 to i64
  %980 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %979
  %981 = load ptr, ptr %980, align 8, !tbaa !9
  br label %982

982:                                              ; preds = %978, %976, %968
  %983 = phi ptr [ %977, %976 ], [ %981, %978 ], [ @.str.104, %968 ]
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.103, ptr noundef %983) #17
  br label %984

984:                                              ; preds = %982, %958
  %985 = load i8, ptr %963, align 1, !tbaa !17
  %986 = zext i8 %985 to i64
  %987 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %986
  %988 = load i32, ptr %987, align 4, !tbaa !25
  %989 = and i32 %988, 2
  %990 = icmp eq i32 %989, 0
  br i1 %990, label %991, label %958, !llvm.loop !190

991:                                              ; preds = %984, %928, %949
  %992 = phi ptr [ %950, %949 ], [ %943, %928 ], [ %963, %984 ]
  %993 = phi i32 [ %951, %949 ], [ 0, %928 ], [ %966, %984 ]
  %994 = sext i32 %993 to i64
  br label %995

995:                                              ; preds = %991, %918
  %996 = phi i1 [ true, %991 ], [ false, %918 ]
  %997 = phi i8 [ %929, %991 ], [ %926, %918 ]
  %998 = phi i32 [ %930, %991 ], [ %924, %918 ]
  %999 = phi i8 [ %933, %991 ], [ %921, %918 ]
  %1000 = phi i1 [ %934, %991 ], [ %920, %918 ]
  %1001 = phi i32 [ %935, %991 ], [ %919, %918 ]
  %1002 = phi i8 [ %936, %991 ], [ %780, %918 ]
  %1003 = phi i8 [ %937, %991 ], [ %738, %918 ]
  %1004 = phi i8 [ %939, %991 ], [ %727, %918 ]
  %1005 = phi i1 [ %940, %991 ], [ %846, %918 ]
  %1006 = phi ptr [ %992, %991 ], [ %923, %918 ]
  %1007 = phi i64 [ %994, %991 ], [ %717, %918 ]
  %1008 = phi i8 [ %944, %991 ], [ %733, %918 ]
  %1009 = and i1 %1000, %1005
  br i1 %1009, label %1010, label %1177

1010:                                             ; preds = %995
  br i1 %325, label %1011, label %1025

1011:                                             ; preds = %1010
  %1012 = load i32, ptr %3, align 8
  %1013 = icmp ult i32 %1012, 41
  br i1 %1013, label %1014, label %1019

1014:                                             ; preds = %1011
  %1015 = load ptr, ptr %329, align 8
  %1016 = zext i32 %1012 to i64
  %1017 = getelementptr i8, ptr %1015, i64 %1016
  %1018 = add nuw nsw i32 %1012, 8
  store i32 %1018, ptr %3, align 8
  br label %1022

1019:                                             ; preds = %1011
  %1020 = load ptr, ptr %328, align 8
  %1021 = getelementptr i8, ptr %1020, i64 8
  store ptr %1021, ptr %328, align 8
  br label %1022

1022:                                             ; preds = %1019, %1014
  %1023 = phi ptr [ %1017, %1014 ], [ %1020, %1019 ]
  %1024 = load ptr, ptr %1023, align 8
  br label %1079

1025:                                             ; preds = %1010
  %1026 = icmp eq i32 %1001, 0
  br i1 %1026, label %1054, label %1027

1027:                                             ; preds = %1025
  %1028 = icmp slt i32 %1001, 1
  %1029 = icmp sgt i32 %1001, %5
  %1030 = or i1 %1028, %1029
  br i1 %1030, label %1036, label %1031

1031:                                             ; preds = %1027
  %1032 = add nsw i32 %1001, -1
  %1033 = zext i32 %1032 to i64
  %1034 = getelementptr inbounds ptr, ptr %4, i64 %1033
  %1035 = load ptr, ptr %1034, align 8, !tbaa !9
  br label %1079

1036:                                             ; preds = %1027
  %1037 = call zeroext i1 @Perl_ckwarn(i32 noundef 66) #17
  br i1 %1037, label %1038, label %1079

1038:                                             ; preds = %1036
  %1039 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %1040 = icmp eq ptr %1039, null
  br i1 %1040, label %1052, label %1041

1041:                                             ; preds = %1038
  %1042 = getelementptr inbounds %struct.op, ptr %1039, i64 0, i32 4
  %1043 = load i16, ptr %1042, align 8
  %1044 = and i16 %1043, 511
  %1045 = icmp eq i16 %1044, 380
  br i1 %1045, label %1046, label %1048

1046:                                             ; preds = %1041
  %1047 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %1039, i32 noundef 2) #17
  br label %1052

1048:                                             ; preds = %1041
  %1049 = zext i16 %1044 to i64
  %1050 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %1049
  %1051 = load ptr, ptr %1050, align 8, !tbaa !9
  br label %1052

1052:                                             ; preds = %1048, %1046, %1038
  %1053 = phi ptr [ %1047, %1046 ], [ %1051, %1048 ], [ @.str.65, %1038 ]
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 66, ptr noundef nonnull @.str.102, ptr noundef %1053) #17
  br label %1079

1054:                                             ; preds = %1025
  %1055 = icmp slt i32 %346, %5
  br i1 %1055, label %1056, label %1061

1056:                                             ; preds = %1054
  %1057 = add nsw i32 %346, 1
  %1058 = sext i32 %346 to i64
  %1059 = getelementptr inbounds ptr, ptr %4, i64 %1058
  %1060 = load ptr, ptr %1059, align 8, !tbaa !9
  br label %1079

1061:                                             ; preds = %1054
  %1062 = call zeroext i1 @Perl_ckwarn(i32 noundef 66) #17
  br i1 %1062, label %1063, label %1079

1063:                                             ; preds = %1061
  %1064 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %1065 = icmp eq ptr %1064, null
  br i1 %1065, label %1077, label %1066

1066:                                             ; preds = %1063
  %1067 = getelementptr inbounds %struct.op, ptr %1064, i64 0, i32 4
  %1068 = load i16, ptr %1067, align 8
  %1069 = and i16 %1068, 511
  %1070 = icmp eq i16 %1069, 380
  br i1 %1070, label %1071, label %1073

1071:                                             ; preds = %1066
  %1072 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %1064, i32 noundef 2) #17
  br label %1077

1073:                                             ; preds = %1066
  %1074 = zext i16 %1069 to i64
  %1075 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %1074
  %1076 = load ptr, ptr %1075, align 8, !tbaa !9
  br label %1077

1077:                                             ; preds = %1073, %1071, %1063
  %1078 = phi ptr [ %1072, %1071 ], [ %1076, %1073 ], [ @.str.65, %1063 ]
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 66, ptr noundef nonnull @.str.102, ptr noundef %1078) #17
  br label %1079

1079:                                             ; preds = %1077, %1061, %1052, %1036, %1056, %1031, %1022
  %1080 = phi ptr [ %1024, %1022 ], [ %1035, %1031 ], [ %1060, %1056 ], [ @PL_sv_no, %1036 ], [ @PL_sv_no, %1052 ], [ @PL_sv_no, %1061 ], [ @PL_sv_no, %1077 ]
  %1081 = phi i32 [ %346, %1022 ], [ %346, %1031 ], [ %1057, %1056 ], [ %346, %1036 ], [ %346, %1052 ], [ %346, %1061 ], [ %346, %1077 ]
  %1082 = getelementptr inbounds %struct.sv, ptr %1080, i64 0, i32 2
  %1083 = load i32, ptr %1082, align 4, !tbaa !16
  %1084 = and i32 %1083, 2098176
  %1085 = icmp eq i32 %1084, 1024
  br i1 %1085, label %1086, label %1092

1086:                                             ; preds = %1079
  %1087 = load ptr, ptr %1080, align 8, !tbaa !26
  %1088 = getelementptr inbounds %struct.xpv, ptr %1087, i64 0, i32 2
  %1089 = load i64, ptr %1088, align 8, !tbaa !57
  store i64 %1089, ptr %20, align 8, !tbaa !60
  %1090 = getelementptr inbounds %struct.sv, ptr %1080, i64 0, i32 3
  %1091 = load ptr, ptr %1090, align 8, !tbaa !17
  br label %1095

1092:                                             ; preds = %1079
  %1093 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %1080, ptr noundef nonnull %20, i32 noundef 34)
  %1094 = load i32, ptr %1082, align 4, !tbaa !16
  br label %1095

1095:                                             ; preds = %1092, %1086
  %1096 = phi i32 [ %1083, %1086 ], [ %1094, %1092 ]
  %1097 = phi ptr [ %1091, %1086 ], [ %1093, %1092 ]
  %1098 = and i32 %1096, 536870912
  %1099 = icmp eq i32 %1098, 0
  br i1 %1099, label %1106, label %1100

1100:                                             ; preds = %1095
  %1101 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %1102 = getelementptr inbounds %struct.cop, ptr %1101, i64 0, i32 10
  %1103 = load i32, ptr %1102, align 8, !tbaa !79
  %1104 = and i32 %1103, 8
  %1105 = icmp eq i32 %1104, 0
  br i1 %1105, label %1177, label %1106

1106:                                             ; preds = %1100, %1095
  %1107 = and i8 %348, 1
  %1108 = icmp eq i8 %1107, 0
  br i1 %1108, label %1177, label %1109

1109:                                             ; preds = %1106
  %1110 = and i32 %1096, 2097152
  %1111 = icmp eq i32 %1110, 0
  br i1 %1111, label %1114, label %1112

1112:                                             ; preds = %1109
  %1113 = call i32 @Perl_mg_get(ptr noundef nonnull %1080) #17
  br label %1114

1114:                                             ; preds = %1112, %1109
  %1115 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %1116 = icmp eq ptr %1115, null
  br i1 %1116, label %1117, label %1146

1117:                                             ; preds = %1114
  %1118 = call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %1119 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %1119, ptr %1118, align 8, !tbaa !26
  %1120 = getelementptr inbounds %struct.sv, ptr %1118, i64 0, i32 1
  store i32 170, ptr %1120, align 8, !tbaa !13
  %1121 = getelementptr inbounds %struct.sv, ptr %1118, i64 0, i32 2
  store i32 0, ptr %1121, align 4, !tbaa !16
  store ptr %1118, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %1122 = getelementptr inbounds %struct.sv, ptr %1118, i64 1
  store ptr %1122, ptr @PL_sv_root, align 8, !tbaa !9
  br label %1123

1123:                                             ; preds = %1123, %1117
  %1124 = phi ptr [ %1122, %1117 ], [ %1141, %1123 ]
  %1125 = phi i64 [ 1, %1117 ], [ %1140, %1123 ]
  %1126 = getelementptr inbounds %struct.sv, ptr %1124, i64 1
  store ptr %1126, ptr %1124, align 8, !tbaa !26
  %1127 = getelementptr inbounds %struct.sv, ptr %1118, i64 %1125, i32 2
  store i32 255, ptr %1127, align 4, !tbaa !16
  %1128 = add nuw nsw i64 %1125, 1
  %1129 = getelementptr inbounds %struct.sv, ptr %1118, i64 %1128
  %1130 = getelementptr inbounds %struct.sv, ptr %1129, i64 1
  store ptr %1130, ptr %1129, align 8, !tbaa !26
  %1131 = getelementptr inbounds %struct.sv, ptr %1118, i64 %1128, i32 2
  store i32 255, ptr %1131, align 4, !tbaa !16
  %1132 = add nuw nsw i64 %1125, 2
  %1133 = getelementptr inbounds %struct.sv, ptr %1118, i64 %1132
  %1134 = getelementptr inbounds %struct.sv, ptr %1133, i64 1
  store ptr %1134, ptr %1133, align 8, !tbaa !26
  %1135 = getelementptr inbounds %struct.sv, ptr %1118, i64 %1132, i32 2
  store i32 255, ptr %1135, align 4, !tbaa !16
  %1136 = add nuw nsw i64 %1125, 3
  %1137 = getelementptr inbounds %struct.sv, ptr %1118, i64 %1136
  %1138 = getelementptr inbounds %struct.sv, ptr %1137, i64 1
  store ptr %1138, ptr %1137, align 8, !tbaa !26
  %1139 = getelementptr inbounds %struct.sv, ptr %1118, i64 %1136, i32 2
  store i32 255, ptr %1139, align 4, !tbaa !16
  %1140 = add nuw nsw i64 %1125, 4
  %1141 = getelementptr inbounds %struct.sv, ptr %1118, i64 %1140
  %1142 = icmp eq i64 %1140, 169
  br i1 %1142, label %1143, label %1123, !llvm.loop !59

1143:                                             ; preds = %1123
  store ptr null, ptr %1141, align 8, !tbaa !26
  %1144 = getelementptr inbounds %struct.sv, ptr %1118, i64 169, i32 2
  store i32 255, ptr %1144, align 4, !tbaa !16
  %1145 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %1146

1146:                                             ; preds = %1114, %1143
  %1147 = phi ptr [ %1145, %1143 ], [ %1115, %1114 ]
  %1148 = load ptr, ptr %1147, align 8, !tbaa !26
  store ptr %1148, ptr @PL_sv_root, align 8, !tbaa !9
  %1149 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %1150 = add nsw i64 %1149, 1
  store i64 %1150, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %1147, align 8, !tbaa !26
  %1151 = getelementptr inbounds %struct.sv, ptr %1147, i64 0, i32 1
  store i32 1, ptr %1151, align 8, !tbaa !13
  %1152 = getelementptr inbounds %struct.sv, ptr %1147, i64 0, i32 2
  store i32 0, ptr %1152, align 4, !tbaa !16
  call void @Perl_sv_setsv_flags(ptr noundef nonnull %1147, ptr noundef %1080, i32 noundef 1536)
  %1153 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %1154 = add nsw i64 %1153, 1
  store i64 %1154, ptr @PL_tmps_ix, align 8, !tbaa !60
  %1155 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %1156 = icmp slt i64 %1154, %1155
  br i1 %1156, label %1159, label %1157

1157:                                             ; preds = %1146
  %1158 = call i64 @Perl_tmps_grow_p(i64 noundef %1154) #17
  br label %1159

1159:                                             ; preds = %1146, %1157
  %1160 = phi i64 [ %1158, %1157 ], [ %1154, %1146 ]
  %1161 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %1162 = getelementptr inbounds ptr, ptr %1161, i64 %1160
  store ptr %1147, ptr %1162, align 8, !tbaa !9
  %1163 = load i32, ptr %1152, align 4, !tbaa !16
  %1164 = or i32 %1163, 524288
  store i32 %1164, ptr %1152, align 4, !tbaa !16
  %1165 = call i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef nonnull %1147, i32 noundef 2, i64 noundef 0)
  %1166 = load i32, ptr %1152, align 4, !tbaa !16
  %1167 = and i32 %1166, 2098176
  %1168 = icmp eq i32 %1167, 1024
  br i1 %1168, label %1169, label %1175

1169:                                             ; preds = %1159
  %1170 = load ptr, ptr %1147, align 8, !tbaa !26
  %1171 = getelementptr inbounds %struct.xpv, ptr %1170, i64 0, i32 2
  %1172 = load i64, ptr %1171, align 8, !tbaa !57
  store i64 %1172, ptr %20, align 8, !tbaa !60
  %1173 = getelementptr inbounds %struct.sv, ptr %1147, i64 0, i32 3
  %1174 = load ptr, ptr %1173, align 8, !tbaa !17
  br label %1177

1175:                                             ; preds = %1159
  %1176 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %1147, ptr noundef nonnull %20, i32 noundef 34)
  br label %1177

1177:                                             ; preds = %1169, %1175, %1100, %995, %1106
  %1178 = phi i8 [ 0, %1106 ], [ 0, %995 ], [ 1, %1100 ], [ 1, %1175 ], [ 1, %1169 ]
  %1179 = phi ptr [ %1097, %1106 ], [ @.str.66, %995 ], [ %1097, %1100 ], [ %1176, %1175 ], [ %1174, %1169 ]
  %1180 = phi i32 [ %1081, %1106 ], [ %346, %995 ], [ %1081, %1100 ], [ %1081, %1175 ], [ %1081, %1169 ]
  br i1 %996, label %1232, label %1181

1181:                                             ; preds = %1177
  br i1 %325, label %1182, label %1196

1182:                                             ; preds = %1181
  %1183 = load i32, ptr %3, align 8
  %1184 = icmp ult i32 %1183, 41
  br i1 %1184, label %1185, label %1190

1185:                                             ; preds = %1182
  %1186 = load ptr, ptr %329, align 8
  %1187 = zext i32 %1183 to i64
  %1188 = getelementptr i8, ptr %1186, i64 %1187
  %1189 = add nuw nsw i32 %1183, 8
  store i32 %1189, ptr %3, align 8
  br label %1193

1190:                                             ; preds = %1182
  %1191 = load ptr, ptr %328, align 8
  %1192 = getelementptr i8, ptr %1191, i64 8
  store ptr %1192, ptr %328, align 8
  br label %1193

1193:                                             ; preds = %1190, %1185
  %1194 = phi ptr [ %1188, %1185 ], [ %1191, %1190 ]
  %1195 = load i32, ptr %1194, align 4
  br label %1224

1196:                                             ; preds = %1181
  %1197 = icmp eq i32 %998, 0
  br i1 %1197, label %1200, label %1198

1198:                                             ; preds = %1196
  %1199 = icmp sgt i32 %998, %5
  br i1 %1199, label %1220, label %1202

1200:                                             ; preds = %1196
  %1201 = icmp slt i32 %1180, %5
  br i1 %1201, label %1202, label %1220

1202:                                             ; preds = %1200, %1198
  %1203 = add nsw i32 %998, -1
  %1204 = zext i1 %1197 to i32
  %1205 = add nsw i32 %1180, %1204
  %1206 = select i1 %1197, i32 %1180, i32 %1203
  %1207 = sext i32 %1206 to i64
  %1208 = getelementptr inbounds ptr, ptr %4, i64 %1207
  %1209 = load ptr, ptr %1208, align 8, !tbaa !9
  store ptr %1209, ptr @PL_Sv, align 8, !tbaa !9
  %1210 = getelementptr inbounds %struct.sv, ptr %1209, i64 0, i32 2
  %1211 = load i32, ptr %1210, align 4, !tbaa !16
  %1212 = and i32 %1211, 2097408
  %1213 = icmp eq i32 %1212, 256
  br i1 %1213, label %1214, label %1218

1214:                                             ; preds = %1202
  %1215 = load ptr, ptr %1209, align 8, !tbaa !26
  %1216 = getelementptr inbounds %struct.xpviv, ptr %1215, i64 0, i32 4
  %1217 = load i64, ptr %1216, align 8, !tbaa !17
  br label %1220

1218:                                             ; preds = %1202
  %1219 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %1209, i32 noundef 2)
  br label %1220

1220:                                             ; preds = %1198, %1200, %1214, %1218
  %1221 = phi i32 [ %1205, %1214 ], [ %1205, %1218 ], [ %1180, %1198 ], [ %1180, %1200 ]
  %1222 = phi i64 [ %1217, %1214 ], [ %1219, %1218 ], [ 0, %1198 ], [ 0, %1200 ]
  %1223 = trunc i64 %1222 to i32
  br label %1224

1224:                                             ; preds = %1220, %1193
  %1225 = phi i32 [ %1223, %1220 ], [ %1195, %1193 ]
  %1226 = phi i32 [ %1221, %1220 ], [ %1180, %1193 ]
  store i32 %1225, ptr %19, align 4, !tbaa !25
  %1227 = lshr i32 %1225, 31
  %1228 = trunc i32 %1227 to i8
  %1229 = or i8 %1003, %1228
  %1230 = call i32 @llvm.abs.i32(i32 %1225, i1 true)
  %1231 = zext i32 %1230 to i64
  br label %1232

1232:                                             ; preds = %1177, %1224, %703
  %1233 = phi ptr [ %1006, %1177 ], [ %1006, %1224 ], [ %707, %703 ]
  %1234 = phi i8 [ %1178, %1177 ], [ %1178, %1224 ], [ 0, %703 ]
  %1235 = phi i64 [ %1007, %1177 ], [ %1231, %1224 ], [ %705, %703 ]
  %1236 = phi ptr [ %1179, %1177 ], [ %1179, %1224 ], [ @.str.66, %703 ]
  %1237 = phi i32 [ %719, %1177 ], [ %719, %1224 ], [ 0, %703 ]
  %1238 = phi i32 [ %998, %1177 ], [ %998, %1224 ], [ 0, %703 ]
  %1239 = phi i8 [ %1004, %1177 ], [ %1004, %1224 ], [ 0, %703 ]
  %1240 = phi i8 [ %1008, %1177 ], [ %1008, %1224 ], [ 32, %703 ]
  %1241 = phi i8 [ %999, %1177 ], [ %999, %1224 ], [ 0, %703 ]
  %1242 = phi i8 [ %1003, %1177 ], [ %1229, %1224 ], [ 0, %703 ]
  %1243 = phi i8 [ %1002, %1177 ], [ %1002, %1224 ], [ 0, %703 ]
  %1244 = phi i8 [ %997, %1177 ], [ %997, %1224 ], [ %350, %703 ]
  %1245 = phi i32 [ %1180, %1177 ], [ %1226, %1224 ], [ %346, %703 ]
  %1246 = load i8, ptr %1233, align 1, !tbaa !17
  %1247 = icmp eq i8 %1246, 46
  br i1 %1247, label %1248, label %1377

1248:                                             ; preds = %1232
  %1249 = getelementptr inbounds i8, ptr %1233, i64 1
  %1250 = load i8, ptr %1249, align 1, !tbaa !17
  %1251 = icmp eq i8 %1250, 42
  br i1 %1251, label %1258, label %1252

1252:                                             ; preds = %1248
  %1253 = zext i8 %1250 to i64
  %1254 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1253
  %1255 = load i32, ptr %1254, align 4, !tbaa !25
  %1256 = and i32 %1255, 2
  %1257 = icmp eq i32 %1256, 0
  br i1 %1257, label %1377, label %1362

1258:                                             ; preds = %1248
  %1259 = getelementptr inbounds i8, ptr %1233, i64 2
  %1260 = load i8, ptr %1259, align 1, !tbaa !17
  %1261 = sext i8 %1260 to i32
  %1262 = add nsw i32 %1261, -49
  %1263 = icmp ult i32 %1262, 9
  br i1 %1263, label %1264, label %1312

1264:                                             ; preds = %1258
  %1265 = getelementptr inbounds i8, ptr %1233, i64 3
  %1266 = load i8, ptr %1265, align 1, !tbaa !17
  %1267 = zext i8 %1266 to i64
  %1268 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1267
  %1269 = load i32, ptr %1268, align 4, !tbaa !25
  %1270 = and i32 %1269, 2
  %1271 = icmp eq i32 %1270, 0
  br i1 %1271, label %1309, label %1272

1272:                                             ; preds = %1264
  %1273 = add nsw i32 %1261, -48
  br label %1274

1274:                                             ; preds = %1272, %1300
  %1275 = phi i8 [ %1301, %1300 ], [ %1266, %1272 ]
  %1276 = phi ptr [ %1279, %1300 ], [ %1265, %1272 ]
  %1277 = phi i32 [ %1282, %1300 ], [ %1273, %1272 ]
  %1278 = mul nsw i32 %1277, 10
  %1279 = getelementptr inbounds i8, ptr %1276, i64 1
  %1280 = sext i8 %1275 to i32
  %1281 = add nsw i32 %1280, -48
  %1282 = add i32 %1281, %1278
  %1283 = icmp slt i32 %1282, %1277
  br i1 %1283, label %1284, label %1300

1284:                                             ; preds = %1274
  %1285 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %1286 = icmp eq ptr %1285, null
  br i1 %1286, label %1298, label %1287

1287:                                             ; preds = %1284
  %1288 = getelementptr inbounds %struct.op, ptr %1285, i64 0, i32 4
  %1289 = load i16, ptr %1288, align 8
  %1290 = and i16 %1289, 511
  %1291 = icmp eq i16 %1290, 380
  br i1 %1291, label %1292, label %1294

1292:                                             ; preds = %1287
  %1293 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %1285, i32 noundef 2) #17
  br label %1298

1294:                                             ; preds = %1287
  %1295 = zext i16 %1290 to i64
  %1296 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %1295
  %1297 = load ptr, ptr %1296, align 8, !tbaa !9
  br label %1298

1298:                                             ; preds = %1294, %1292, %1284
  %1299 = phi ptr [ %1293, %1292 ], [ %1297, %1294 ], [ @.str.104, %1284 ]
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.103, ptr noundef %1299) #17
  br label %1300

1300:                                             ; preds = %1298, %1274
  %1301 = load i8, ptr %1279, align 1, !tbaa !17
  %1302 = zext i8 %1301 to i64
  %1303 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1302
  %1304 = load i32, ptr %1303, align 4, !tbaa !25
  %1305 = and i32 %1304, 2
  %1306 = icmp eq i32 %1305, 0
  br i1 %1306, label %1307, label %1274, !llvm.loop !190

1307:                                             ; preds = %1300
  %1308 = icmp eq i32 %1282, 0
  br i1 %1308, label %1312, label %1309

1309:                                             ; preds = %1264, %1307
  %1310 = phi ptr [ %1279, %1307 ], [ %1265, %1264 ]
  %1311 = getelementptr inbounds i8, ptr %1310, i64 1
  br label %2987

1312:                                             ; preds = %1258, %1307
  %1313 = phi ptr [ %1279, %1307 ], [ %1259, %1258 ]
  br i1 %325, label %1314, label %1328

1314:                                             ; preds = %1312
  %1315 = load i32, ptr %3, align 8
  %1316 = icmp ult i32 %1315, 41
  br i1 %1316, label %1317, label %1322

1317:                                             ; preds = %1314
  %1318 = load ptr, ptr %329, align 8
  %1319 = zext i32 %1315 to i64
  %1320 = getelementptr i8, ptr %1318, i64 %1319
  %1321 = add nuw nsw i32 %1315, 8
  store i32 %1321, ptr %3, align 8
  br label %1325

1322:                                             ; preds = %1314
  %1323 = load ptr, ptr %328, align 8
  %1324 = getelementptr i8, ptr %1323, i64 8
  store ptr %1324, ptr %328, align 8
  br label %1325

1325:                                             ; preds = %1322, %1317
  %1326 = phi ptr [ %1320, %1317 ], [ %1323, %1322 ]
  %1327 = load i32, ptr %1326, align 4
  br label %1356

1328:                                             ; preds = %1312
  %1329 = icmp eq i32 %1238, 0
  br i1 %1329, label %1332, label %1330

1330:                                             ; preds = %1328
  %1331 = icmp sgt i32 %1238, %5
  br i1 %1331, label %1352, label %1334

1332:                                             ; preds = %1328
  %1333 = icmp slt i32 %1245, %5
  br i1 %1333, label %1334, label %1352

1334:                                             ; preds = %1332, %1330
  %1335 = add nsw i32 %1238, -1
  %1336 = zext i1 %1329 to i32
  %1337 = add nsw i32 %1245, %1336
  %1338 = select i1 %1329, i32 %1245, i32 %1335
  %1339 = sext i32 %1338 to i64
  %1340 = getelementptr inbounds ptr, ptr %4, i64 %1339
  %1341 = load ptr, ptr %1340, align 8, !tbaa !9
  store ptr %1341, ptr @PL_Sv, align 8, !tbaa !9
  %1342 = getelementptr inbounds %struct.sv, ptr %1341, i64 0, i32 2
  %1343 = load i32, ptr %1342, align 4, !tbaa !16
  %1344 = and i32 %1343, 2097408
  %1345 = icmp eq i32 %1344, 256
  br i1 %1345, label %1346, label %1350

1346:                                             ; preds = %1334
  %1347 = load ptr, ptr %1341, align 8, !tbaa !26
  %1348 = getelementptr inbounds %struct.xpviv, ptr %1347, i64 0, i32 4
  %1349 = load i64, ptr %1348, align 8, !tbaa !17
  br label %1352

1350:                                             ; preds = %1334
  %1351 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %1341, i32 noundef 2)
  br label %1352

1352:                                             ; preds = %1330, %1332, %1346, %1350
  %1353 = phi i32 [ %1337, %1346 ], [ %1337, %1350 ], [ %1245, %1330 ], [ %1245, %1332 ]
  %1354 = phi i64 [ %1349, %1346 ], [ %1351, %1350 ], [ 0, %1330 ], [ 0, %1332 ]
  %1355 = trunc i64 %1354 to i32
  br label %1356

1356:                                             ; preds = %1352, %1325
  %1357 = phi i32 [ %1355, %1352 ], [ %1327, %1325 ]
  %1358 = phi i32 [ %1353, %1352 ], [ %1245, %1325 ]
  store i32 %1357, ptr %19, align 4, !tbaa !25
  %1359 = sext i32 %1357 to i64
  %1360 = icmp sgt i32 %1357, -1
  %1361 = zext i1 %1360 to i8
  br label %1377

1362:                                             ; preds = %1252, %1362
  %1363 = phi i8 [ %1371, %1362 ], [ %1250, %1252 ]
  %1364 = phi i64 [ %1370, %1362 ], [ 0, %1252 ]
  %1365 = phi ptr [ %1367, %1362 ], [ %1249, %1252 ]
  %1366 = mul i64 %1364, 10
  %1367 = getelementptr inbounds i8, ptr %1365, i64 1
  %1368 = sext i8 %1363 to i64
  %1369 = add nsw i64 %1368, -48
  %1370 = add i64 %1369, %1366
  %1371 = load i8, ptr %1367, align 1, !tbaa !17
  %1372 = zext i8 %1371 to i64
  %1373 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1372
  %1374 = load i32, ptr %1373, align 4, !tbaa !25
  %1375 = and i32 %1374, 2
  %1376 = icmp eq i32 %1375, 0
  br i1 %1376, label %1377, label %1362, !llvm.loop !193

1377:                                             ; preds = %1362, %1252, %1356, %1232
  %1378 = phi ptr [ %1313, %1356 ], [ %1233, %1232 ], [ %1249, %1252 ], [ %1367, %1362 ]
  %1379 = phi i64 [ %1359, %1356 ], [ 0, %1232 ], [ 0, %1252 ], [ %1370, %1362 ]
  %1380 = phi i8 [ %1361, %1356 ], [ 0, %1232 ], [ 1, %1252 ], [ 1, %1362 ]
  %1381 = phi i32 [ %1358, %1356 ], [ %1245, %1232 ], [ %1245, %1252 ], [ %1245, %1362 ]
  %1382 = and i8 %1241, 1
  %1383 = icmp ne i8 %1382, 0
  br i1 %1383, label %1384, label %1573

1384:                                             ; preds = %1377
  br i1 %325, label %1385, label %1426

1385:                                             ; preds = %1384
  %1386 = load i32, ptr %3, align 8
  %1387 = icmp ult i32 %1386, 41
  br i1 %1387, label %1388, label %1393

1388:                                             ; preds = %1385
  %1389 = load ptr, ptr %329, align 8
  %1390 = zext i32 %1386 to i64
  %1391 = getelementptr i8, ptr %1389, i64 %1390
  %1392 = add nuw nsw i32 %1386, 8
  store i32 %1392, ptr %3, align 8
  br label %1396

1393:                                             ; preds = %1385
  %1394 = load ptr, ptr %328, align 8
  %1395 = getelementptr i8, ptr %1394, i64 8
  store ptr %1395, ptr %328, align 8
  br label %1396

1396:                                             ; preds = %1393, %1388
  %1397 = phi ptr [ %1391, %1388 ], [ %1394, %1393 ]
  %1398 = load ptr, ptr %1397, align 8
  %1399 = getelementptr inbounds %struct.sv, ptr %1398, i64 0, i32 2
  %1400 = load i32, ptr %1399, align 4, !tbaa !16
  %1401 = and i32 %1400, 2098176
  %1402 = icmp eq i32 %1401, 1024
  br i1 %1402, label %1403, label %1409

1403:                                             ; preds = %1396
  %1404 = load ptr, ptr %1398, align 8, !tbaa !26
  %1405 = getelementptr inbounds %struct.xpv, ptr %1404, i64 0, i32 2
  %1406 = load i64, ptr %1405, align 8, !tbaa !57
  store i64 %1406, ptr %17, align 8, !tbaa !60
  %1407 = getelementptr inbounds %struct.sv, ptr %1398, i64 0, i32 3
  %1408 = load ptr, ptr %1407, align 8, !tbaa !17
  br label %1412

1409:                                             ; preds = %1396
  %1410 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %1398, ptr noundef nonnull %17, i32 noundef 34)
  %1411 = load i32, ptr %1399, align 4, !tbaa !16
  br label %1412

1412:                                             ; preds = %1409, %1403
  %1413 = phi i32 [ %1400, %1403 ], [ %1411, %1409 ]
  %1414 = phi ptr [ %1408, %1403 ], [ %1410, %1409 ]
  %1415 = and i32 %1413, 536870912
  %1416 = icmp eq i32 %1415, 0
  br i1 %1416, label %1423, label %1417

1417:                                             ; preds = %1412
  %1418 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %1419 = getelementptr inbounds %struct.cop, ptr %1418, i64 0, i32 10
  %1420 = load i32, ptr %1419, align 8, !tbaa !79
  %1421 = and i32 %1420, 8
  %1422 = icmp eq i32 %1421, 0
  br label %1423

1423:                                             ; preds = %1417, %1412
  %1424 = phi i1 [ false, %1412 ], [ %1422, %1417 ]
  %1425 = zext i1 %1424 to i8
  br label %1573

1426:                                             ; preds = %1384
  %1427 = icmp eq i32 %1237, 0
  br i1 %1427, label %1432, label %1428

1428:                                             ; preds = %1426
  %1429 = icmp slt i32 %1237, 1
  %1430 = icmp sgt i32 %1237, %5
  %1431 = or i1 %1429, %1430
  br i1 %1431, label %1570, label %1434

1432:                                             ; preds = %1426
  %1433 = icmp slt i32 %1381, %5
  br i1 %1433, label %1434, label %1570

1434:                                             ; preds = %1428, %1432
  %1435 = add nsw i32 %1237, -1
  %1436 = zext i1 %1427 to i32
  %1437 = add nsw i32 %1381, %1436
  %1438 = select i1 %1427, i32 %1381, i32 %1435
  %1439 = sext i32 %1438 to i64
  %1440 = getelementptr inbounds ptr, ptr %4, i64 %1439
  %1441 = load ptr, ptr %1440, align 8, !tbaa !9
  %1442 = getelementptr inbounds %struct.sv, ptr %1441, i64 0, i32 2
  %1443 = load i32, ptr %1442, align 4, !tbaa !16
  %1444 = and i32 %1443, 2098176
  %1445 = icmp eq i32 %1444, 1024
  br i1 %1445, label %1446, label %1452

1446:                                             ; preds = %1434
  %1447 = load ptr, ptr %1441, align 8, !tbaa !26
  %1448 = getelementptr inbounds %struct.xpv, ptr %1447, i64 0, i32 2
  %1449 = load i64, ptr %1448, align 8, !tbaa !57
  store i64 %1449, ptr %17, align 8, !tbaa !60
  %1450 = getelementptr inbounds %struct.sv, ptr %1441, i64 0, i32 3
  %1451 = load ptr, ptr %1450, align 8, !tbaa !17
  br label %1455

1452:                                             ; preds = %1434
  %1453 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %1441, ptr noundef nonnull %17, i32 noundef 34)
  %1454 = load i32, ptr %1442, align 4, !tbaa !16
  br label %1455

1455:                                             ; preds = %1452, %1446
  %1456 = phi i32 [ %1443, %1446 ], [ %1454, %1452 ]
  %1457 = phi ptr [ %1451, %1446 ], [ %1453, %1452 ]
  %1458 = and i32 %1456, 536870912
  %1459 = icmp eq i32 %1458, 0
  br i1 %1459, label %1466, label %1460

1460:                                             ; preds = %1455
  %1461 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %1462 = getelementptr inbounds %struct.cop, ptr %1461, i64 0, i32 10
  %1463 = load i32, ptr %1462, align 8, !tbaa !79
  %1464 = and i32 %1463, 8
  %1465 = icmp eq i32 %1464, 0
  br label %1466

1466:                                             ; preds = %1455, %1460
  %1467 = phi i1 [ false, %1455 ], [ %1465, %1460 ]
  %1468 = zext i1 %1467 to i8
  %1469 = and i32 %1456, 2097152
  %1470 = icmp eq i32 %1469, 0
  br i1 %1470, label %1474, label %1471

1471:                                             ; preds = %1466
  %1472 = call i32 @Perl_mg_get(ptr noundef nonnull %1441) #17
  %1473 = load i32, ptr %1442, align 4, !tbaa !16
  br label %1474

1474:                                             ; preds = %1471, %1466
  %1475 = phi i32 [ %1456, %1466 ], [ %1473, %1471 ]
  %1476 = and i32 %1475, 2048
  %1477 = icmp eq i32 %1476, 0
  br i1 %1477, label %1573, label %1478

1478:                                             ; preds = %1474
  %1479 = getelementptr inbounds %struct.sv, ptr %1441, i64 0, i32 3
  %1480 = load ptr, ptr %1479, align 8, !tbaa !17
  %1481 = getelementptr inbounds %struct.sv, ptr %1480, i64 0, i32 2
  %1482 = load i32, ptr %1481, align 4, !tbaa !16
  %1483 = and i32 %1482, 1048576
  %1484 = icmp eq i32 %1483, 0
  br i1 %1484, label %1573, label %1485

1485:                                             ; preds = %1478
  %1486 = call zeroext i1 @Perl_sv_derived_from(ptr noundef nonnull %1441, ptr noundef nonnull @.str.69) #17
  br i1 %1486, label %1487, label %1573

1487:                                             ; preds = %1485
  %1488 = load ptr, ptr %1479, align 8, !tbaa !17
  %1489 = call ptr @Perl_hv_common_key_len(ptr noundef %1488, ptr noundef nonnull @.str.70, i32 noundef 5, i32 noundef 8, ptr noundef null, i32 noundef 0) #17
  %1490 = icmp eq ptr %1489, null
  br i1 %1490, label %1492, label %1491

1491:                                             ; preds = %1487
  call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 34, ptr noundef nonnull @.str.71) #17
  br label %1570

1492:                                             ; preds = %1487
  %1493 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %1494 = icmp eq ptr %1493, null
  br i1 %1494, label %1495, label %1524

1495:                                             ; preds = %1492
  %1496 = call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %1497 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %1497, ptr %1496, align 8, !tbaa !26
  %1498 = getelementptr inbounds %struct.sv, ptr %1496, i64 0, i32 1
  store i32 170, ptr %1498, align 8, !tbaa !13
  %1499 = getelementptr inbounds %struct.sv, ptr %1496, i64 0, i32 2
  store i32 0, ptr %1499, align 4, !tbaa !16
  store ptr %1496, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %1500 = getelementptr inbounds %struct.sv, ptr %1496, i64 1
  store ptr %1500, ptr @PL_sv_root, align 8, !tbaa !9
  br label %1501

1501:                                             ; preds = %1501, %1495
  %1502 = phi ptr [ %1500, %1495 ], [ %1519, %1501 ]
  %1503 = phi i64 [ 1, %1495 ], [ %1518, %1501 ]
  %1504 = getelementptr inbounds %struct.sv, ptr %1502, i64 1
  store ptr %1504, ptr %1502, align 8, !tbaa !26
  %1505 = getelementptr inbounds %struct.sv, ptr %1496, i64 %1503, i32 2
  store i32 255, ptr %1505, align 4, !tbaa !16
  %1506 = add nuw nsw i64 %1503, 1
  %1507 = getelementptr inbounds %struct.sv, ptr %1496, i64 %1506
  %1508 = getelementptr inbounds %struct.sv, ptr %1507, i64 1
  store ptr %1508, ptr %1507, align 8, !tbaa !26
  %1509 = getelementptr inbounds %struct.sv, ptr %1496, i64 %1506, i32 2
  store i32 255, ptr %1509, align 4, !tbaa !16
  %1510 = add nuw nsw i64 %1503, 2
  %1511 = getelementptr inbounds %struct.sv, ptr %1496, i64 %1510
  %1512 = getelementptr inbounds %struct.sv, ptr %1511, i64 1
  store ptr %1512, ptr %1511, align 8, !tbaa !26
  %1513 = getelementptr inbounds %struct.sv, ptr %1496, i64 %1510, i32 2
  store i32 255, ptr %1513, align 4, !tbaa !16
  %1514 = add nuw nsw i64 %1503, 3
  %1515 = getelementptr inbounds %struct.sv, ptr %1496, i64 %1514
  %1516 = getelementptr inbounds %struct.sv, ptr %1515, i64 1
  store ptr %1516, ptr %1515, align 8, !tbaa !26
  %1517 = getelementptr inbounds %struct.sv, ptr %1496, i64 %1514, i32 2
  store i32 255, ptr %1517, align 4, !tbaa !16
  %1518 = add nuw nsw i64 %1503, 4
  %1519 = getelementptr inbounds %struct.sv, ptr %1496, i64 %1518
  %1520 = icmp eq i64 %1518, 169
  br i1 %1520, label %1521, label %1501, !llvm.loop !59

1521:                                             ; preds = %1501
  store ptr null, ptr %1519, align 8, !tbaa !26
  %1522 = getelementptr inbounds %struct.sv, ptr %1496, i64 169, i32 2
  store i32 255, ptr %1522, align 4, !tbaa !16
  %1523 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %1524

1524:                                             ; preds = %1521, %1492
  %1525 = phi ptr [ %1523, %1521 ], [ %1493, %1492 ]
  %1526 = load ptr, ptr %1525, align 8, !tbaa !26
  store ptr %1526, ptr @PL_sv_root, align 8, !tbaa !9
  %1527 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %1528 = add nsw i64 %1527, 1
  store i64 %1528, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %1525, align 8, !tbaa !26
  %1529 = getelementptr inbounds %struct.sv, ptr %1525, i64 0, i32 1
  store i32 1, ptr %1529, align 8, !tbaa !13
  %1530 = getelementptr inbounds %struct.sv, ptr %1525, i64 0, i32 2
  store i32 524288, ptr %1530, align 4, !tbaa !16
  %1531 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %1532 = add nsw i64 %1531, 1
  store i64 %1532, ptr @PL_tmps_ix, align 8, !tbaa !60
  %1533 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %1534 = icmp slt i64 %1532, %1533
  br i1 %1534, label %1537, label %1535

1535:                                             ; preds = %1524
  %1536 = call i64 @Perl_tmps_grow_p(i64 noundef %1532) #17
  br label %1537

1537:                                             ; preds = %1524, %1535
  %1538 = phi i64 [ %1536, %1535 ], [ %1532, %1524 ]
  %1539 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %1540 = getelementptr inbounds ptr, ptr %1539, i64 %1538
  store ptr %1525, ptr %1540, align 8, !tbaa !9
  %1541 = load i64, ptr %17, align 8, !tbaa !60
  %1542 = getelementptr inbounds i8, ptr %1457, i64 %1541
  %1543 = call ptr @Perl_scan_vstring(ptr noundef %1457, ptr noundef %1542, ptr noundef nonnull %1525) #17
  %1544 = load i32, ptr %1530, align 4, !tbaa !16
  %1545 = and i32 %1544, 2098176
  %1546 = icmp eq i32 %1545, 1024
  br i1 %1546, label %1547, label %1553

1547:                                             ; preds = %1537
  %1548 = load ptr, ptr %1525, align 8, !tbaa !26
  %1549 = getelementptr inbounds %struct.xpv, ptr %1548, i64 0, i32 2
  %1550 = load i64, ptr %1549, align 8, !tbaa !57
  store i64 %1550, ptr %17, align 8, !tbaa !60
  %1551 = getelementptr inbounds %struct.sv, ptr %1525, i64 0, i32 3
  %1552 = load ptr, ptr %1551, align 8, !tbaa !17
  br label %1556

1553:                                             ; preds = %1537
  %1554 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %1525, ptr noundef nonnull %17, i32 noundef 34)
  %1555 = load i32, ptr %1530, align 4, !tbaa !16
  br label %1556

1556:                                             ; preds = %1553, %1547
  %1557 = phi i32 [ %1544, %1547 ], [ %1555, %1553 ]
  %1558 = phi ptr [ %1552, %1547 ], [ %1554, %1553 ]
  %1559 = and i32 %1557, 536870912
  %1560 = icmp eq i32 %1559, 0
  br i1 %1560, label %1567, label %1561

1561:                                             ; preds = %1556
  %1562 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %1563 = getelementptr inbounds %struct.cop, ptr %1562, i64 0, i32 10
  %1564 = load i32, ptr %1563, align 8, !tbaa !79
  %1565 = and i32 %1564, 8
  %1566 = icmp eq i32 %1565, 0
  br label %1567

1567:                                             ; preds = %1561, %1556
  %1568 = phi i1 [ false, %1556 ], [ %1566, %1561 ]
  %1569 = zext i1 %1568 to i8
  br label %1573

1570:                                             ; preds = %1428, %1432, %1491
  %1571 = phi i8 [ %1468, %1491 ], [ 0, %1428 ], [ 0, %1432 ]
  %1572 = phi i32 [ %1437, %1491 ], [ %1381, %1428 ], [ %1381, %1432 ]
  store i64 0, ptr %17, align 8, !tbaa !60
  br label %1573

1573:                                             ; preds = %1474, %1423, %1478, %1485, %1567, %1570, %1377
  %1574 = phi ptr [ %1414, %1423 ], [ @.str.10, %1570 ], [ %1558, %1567 ], [ %1457, %1485 ], [ %1457, %1478 ], [ null, %1377 ], [ %1457, %1474 ]
  %1575 = phi i8 [ %1425, %1423 ], [ %1571, %1570 ], [ %1569, %1567 ], [ %1468, %1485 ], [ %1468, %1478 ], [ 0, %1377 ], [ %1468, %1474 ]
  %1576 = phi i32 [ %1381, %1423 ], [ %1572, %1570 ], [ %1437, %1567 ], [ %1437, %1485 ], [ %1437, %1478 ], [ %1381, %1377 ], [ %1437, %1474 ]
  %1577 = load i8, ptr %1378, align 1, !tbaa !17
  %1578 = sext i8 %1577 to i32
  switch i32 %1578, label %1593 [
    i32 76, label %1588
    i32 113, label %1588
    i32 108, label %1579
    i32 104, label %1583
    i32 86, label %1587
    i32 122, label %1587
    i32 116, label %1587
  ]

1579:                                             ; preds = %1573
  %1580 = getelementptr inbounds i8, ptr %1378, i64 1
  %1581 = load i8, ptr %1580, align 1, !tbaa !17
  %1582 = icmp eq i8 %1581, 108
  br i1 %1582, label %1588, label %1593

1583:                                             ; preds = %1573
  %1584 = getelementptr inbounds i8, ptr %1378, i64 1
  %1585 = load i8, ptr %1584, align 1, !tbaa !17
  %1586 = icmp eq i8 %1585, 104
  br i1 %1586, label %1588, label %1593

1587:                                             ; preds = %1573, %1573, %1573
  br label %1588

1588:                                             ; preds = %1583, %1579, %1573, %1573, %1587
  %1589 = phi i64 [ 1, %1587 ], [ 1, %1573 ], [ 1, %1573 ], [ 2, %1579 ], [ 2, %1583 ]
  %1590 = phi i8 [ %1577, %1587 ], [ 113, %1573 ], [ 113, %1573 ], [ 113, %1579 ], [ 99, %1583 ]
  %1591 = getelementptr inbounds i8, ptr %1378, i64 %1589
  %1592 = load i8, ptr %1591, align 1, !tbaa !17
  br label %1593

1593:                                             ; preds = %1588, %1583, %1579, %1573
  %1594 = phi i8 [ %1592, %1588 ], [ %1585, %1583 ], [ %1581, %1579 ], [ %1577, %1573 ]
  %1595 = phi ptr [ %1591, %1588 ], [ %1584, %1583 ], [ %1580, %1579 ], [ %1378, %1573 ]
  %1596 = phi i8 [ %1590, %1588 ], [ 104, %1583 ], [ 108, %1579 ], [ 0, %1573 ]
  %1597 = icmp eq i8 %1594, 37
  br i1 %1597, label %1598, label %1601

1598:                                             ; preds = %1593
  %1599 = getelementptr inbounds i8, ptr %1595, i64 1
  store i64 1, ptr %16, align 8, !tbaa !60
  br i1 %1383, label %1600, label %1892

1600:                                             ; preds = %1598
  store i8 37, ptr %18, align 1, !tbaa !17
  br label %2987

1601:                                             ; preds = %1593
  %1602 = or i1 %325, %1383
  br i1 %1602, label %1655, label %1603

1603:                                             ; preds = %1601
  %1604 = icmp eq i32 %1237, 0
  br i1 %1604, label %1627, label %1605

1605:                                             ; preds = %1603
  %1606 = icmp slt i32 %1237, 1
  %1607 = icmp sgt i32 %1237, %5
  %1608 = or i1 %1606, %1607
  br i1 %1608, label %1611, label %1609

1609:                                             ; preds = %1605
  %1610 = add nsw i32 %1237, -1
  br label %1649

1611:                                             ; preds = %1605
  %1612 = call zeroext i1 @Perl_ckwarn(i32 noundef 66) #17
  br i1 %1612, label %1613, label %1661

1613:                                             ; preds = %1611
  %1614 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %1615 = icmp eq ptr %1614, null
  br i1 %1615, label %1659, label %1616

1616:                                             ; preds = %1613
  %1617 = getelementptr inbounds %struct.op, ptr %1614, i64 0, i32 4
  %1618 = load i16, ptr %1617, align 8
  %1619 = and i16 %1618, 511
  %1620 = icmp eq i16 %1619, 380
  br i1 %1620, label %1621, label %1623

1621:                                             ; preds = %1616
  %1622 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %1614, i32 noundef 2) #17
  br label %1659

1623:                                             ; preds = %1616
  %1624 = zext i16 %1619 to i64
  %1625 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %1624
  %1626 = load ptr, ptr %1625, align 8, !tbaa !9
  br label %1659

1627:                                             ; preds = %1603
  %1628 = icmp sgt i32 %1576, -1
  %1629 = icmp slt i32 %1576, %5
  %1630 = and i1 %1628, %1629
  br i1 %1630, label %1631, label %1633

1631:                                             ; preds = %1627
  %1632 = add nuw nsw i32 %1576, 1
  br label %1649

1633:                                             ; preds = %1627
  %1634 = call zeroext i1 @Perl_ckwarn(i32 noundef 66) #17
  br i1 %1634, label %1635, label %1661

1635:                                             ; preds = %1633
  %1636 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %1637 = icmp eq ptr %1636, null
  br i1 %1637, label %1659, label %1638

1638:                                             ; preds = %1635
  %1639 = getelementptr inbounds %struct.op, ptr %1636, i64 0, i32 4
  %1640 = load i16, ptr %1639, align 8
  %1641 = and i16 %1640, 511
  %1642 = icmp eq i16 %1641, 380
  br i1 %1642, label %1643, label %1645

1643:                                             ; preds = %1638
  %1644 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %1636, i32 noundef 2) #17
  br label %1659

1645:                                             ; preds = %1638
  %1646 = zext i16 %1641 to i64
  %1647 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %1646
  %1648 = load ptr, ptr %1647, align 8, !tbaa !9
  br label %1659

1649:                                             ; preds = %1609, %1631
  %1650 = phi i32 [ %1576, %1631 ], [ %1610, %1609 ]
  %1651 = phi i32 [ %1632, %1631 ], [ %1576, %1609 ]
  %1652 = zext i32 %1650 to i64
  %1653 = getelementptr inbounds ptr, ptr %4, i64 %1652
  %1654 = load ptr, ptr %1653, align 8, !tbaa !9
  br label %1655

1655:                                             ; preds = %1649, %1601
  %1656 = phi ptr [ %347, %1601 ], [ %1654, %1649 ]
  %1657 = phi i32 [ %1576, %1601 ], [ %1651, %1649 ]
  %1658 = icmp eq ptr %1656, null
  br i1 %1658, label %1700, label %1661

1659:                                             ; preds = %1635, %1643, %1645, %1613, %1621, %1623
  %1660 = phi ptr [ %1622, %1621 ], [ %1626, %1623 ], [ @.str.65, %1613 ], [ %1644, %1643 ], [ %1648, %1645 ], [ @.str.65, %1635 ]
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 66, ptr noundef nonnull @.str.102, ptr noundef %1660) #17
  br label %1661

1661:                                             ; preds = %1659, %1633, %1611, %1655
  %1662 = phi i32 [ %1657, %1655 ], [ %1576, %1611 ], [ %1576, %1633 ], [ %1576, %1659 ]
  %1663 = phi ptr [ %1656, %1655 ], [ @PL_sv_no, %1611 ], [ @PL_sv_no, %1633 ], [ @PL_sv_no, %1659 ]
  %1664 = load i8, ptr %1595, align 1, !tbaa !17
  %1665 = sext i8 %1664 to i32
  %1666 = call ptr @memchr(ptr noundef nonnull dereferenceable(1) @.str.72, i32 %1665, i64 14)
  %1667 = icmp eq ptr %1666, null
  br i1 %1667, label %1700, label %1668

1668:                                             ; preds = %1661
  %1669 = getelementptr inbounds %struct.sv, ptr %1663, i64 0, i32 2
  %1670 = load i32, ptr %1669, align 4, !tbaa !16
  %1671 = and i32 %1670, 2097152
  %1672 = icmp eq i32 %1671, 0
  br i1 %1672, label %1676, label %1673

1673:                                             ; preds = %1668
  %1674 = call i32 @Perl_mg_get(ptr noundef nonnull %1663) #17
  %1675 = load i32, ptr %1669, align 4, !tbaa !16
  br label %1676

1676:                                             ; preds = %1668, %1673
  %1677 = phi i32 [ %1670, %1668 ], [ %1675, %1673 ]
  %1678 = and i32 %1677, 2048
  %1679 = icmp eq i32 %1678, 0
  br i1 %1679, label %1696, label %1680

1680:                                             ; preds = %1676
  %1681 = getelementptr inbounds %struct.sv, ptr %1663, i64 0, i32 3
  %1682 = load ptr, ptr %1681, align 8, !tbaa !17
  %1683 = getelementptr inbounds %struct.sv, ptr %1682, i64 0, i32 2
  %1684 = load i32, ptr %1683, align 4, !tbaa !16
  %1685 = and i32 %1684, 1048576
  %1686 = icmp eq i32 %1685, 0
  br i1 %1686, label %1696, label %1687

1687:                                             ; preds = %1680
  %1688 = load ptr, ptr %1682, align 8, !tbaa !26
  %1689 = load ptr, ptr %1688, align 8, !tbaa !50
  %1690 = getelementptr inbounds %struct.hv, ptr %1689, i64 0, i32 2
  %1691 = load i32, ptr %1690, align 4, !tbaa !64
  %1692 = and i32 %1691, 268435456
  %1693 = icmp eq i32 %1692, 0
  br i1 %1693, label %1696, label %1694

1694:                                             ; preds = %1687
  %1695 = call ptr @Perl_sv_2num(ptr noundef nonnull %1663)
  br label %1696

1696:                                             ; preds = %1676, %1680, %1687, %1694
  %1697 = phi ptr [ %1695, %1694 ], [ %1663, %1687 ], [ %1663, %1680 ], [ %1663, %1676 ]
  %1698 = call zeroext i1 @Perl_isinfnansv(ptr noundef %1697) #17
  %1699 = load i8, ptr %1595, align 1, !tbaa !17
  br label %1700

1700:                                             ; preds = %1696, %1661, %1655
  %1701 = phi i8 [ %1699, %1696 ], [ %1664, %1661 ], [ %1594, %1655 ]
  %1702 = phi i32 [ %1662, %1696 ], [ %1662, %1661 ], [ %1657, %1655 ]
  %1703 = phi i1 [ %1698, %1696 ], [ false, %1661 ], [ false, %1655 ]
  %1704 = phi ptr [ %1697, %1696 ], [ %1663, %1661 ], [ null, %1655 ]
  %1705 = getelementptr inbounds i8, ptr %1595, i64 1
  store i8 %1701, ptr %18, align 1, !tbaa !17
  %1706 = sext i8 %1701 to i32
  switch i32 %1706, label %2987 [
    i32 99, label %1707
    i32 115, label %1773
    i32 112, label %1914
    i32 68, label %1941
    i32 100, label %1942
    i32 105, label %1942
    i32 85, label %2104
    i32 117, label %2110
    i32 66, label %2105
    i32 98, label %2105
    i32 79, label %2106
    i32 111, label %2107
    i32 88, label %2109
    i32 120, label %2109
    i32 70, label %2445
    i32 101, label %2448
    i32 69, label %2448
    i32 102, label %2448
    i32 103, label %2448
    i32 71, label %2448
    i32 97, label %2448
    i32 65, label %2448
    i32 110, label %2844
  ]

1707:                                             ; preds = %1700
  br i1 %1383, label %2987, label %1708

1708:                                             ; preds = %1707
  br i1 %1703, label %1709, label %1725

1709:                                             ; preds = %1708
  %1710 = getelementptr inbounds %struct.sv, ptr %1704, i64 0, i32 2
  %1711 = load i32, ptr %1710, align 4, !tbaa !16
  %1712 = and i32 %1711, 512
  %1713 = icmp eq i32 %1712, 0
  br i1 %1713, label %1718, label %1714

1714:                                             ; preds = %1709
  %1715 = load ptr, ptr %1704, align 8, !tbaa !26
  %1716 = getelementptr inbounds %struct.xpvnv, ptr %1715, i64 0, i32 5
  %1717 = load double, ptr %1716, align 8, !tbaa !17
  br label %1722

1718:                                             ; preds = %1709
  %1719 = call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %1704, i32 noundef 0)
  %1720 = load i8, ptr %18, align 1, !tbaa !17
  %1721 = sext i8 %1720 to i32
  br label %1722

1722:                                             ; preds = %1718, %1714
  %1723 = phi i32 [ %1721, %1718 ], [ 99, %1714 ]
  %1724 = phi fast double [ %1719, %1718 ], [ %1717, %1714 ]
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.73, double noundef nofpclass(nan inf) %1724, i32 noundef %1723) #17
  br label %1725

1725:                                             ; preds = %1722, %1708
  br i1 %325, label %1726, label %1741

1726:                                             ; preds = %1725
  %1727 = load i32, ptr %3, align 8
  %1728 = icmp ult i32 %1727, 41
  br i1 %1728, label %1729, label %1734

1729:                                             ; preds = %1726
  %1730 = load ptr, ptr %329, align 8
  %1731 = zext i32 %1727 to i64
  %1732 = getelementptr i8, ptr %1730, i64 %1731
  %1733 = add nuw nsw i32 %1727, 8
  store i32 %1733, ptr %3, align 8
  br label %1737

1734:                                             ; preds = %1726
  %1735 = load ptr, ptr %328, align 8
  %1736 = getelementptr i8, ptr %1735, i64 8
  store ptr %1736, ptr %328, align 8
  br label %1737

1737:                                             ; preds = %1734, %1729
  %1738 = phi ptr [ %1732, %1729 ], [ %1735, %1734 ]
  %1739 = load i32, ptr %1738, align 4
  %1740 = sext i32 %1739 to i64
  br label %1752

1741:                                             ; preds = %1725
  %1742 = getelementptr inbounds %struct.sv, ptr %1704, i64 0, i32 2
  %1743 = load i32, ptr %1742, align 4, !tbaa !16
  %1744 = and i32 %1743, 256
  %1745 = icmp eq i32 %1744, 0
  br i1 %1745, label %1750, label %1746

1746:                                             ; preds = %1741
  %1747 = load ptr, ptr %1704, align 8, !tbaa !26
  %1748 = getelementptr inbounds %struct.xpviv, ptr %1747, i64 0, i32 4
  %1749 = load i64, ptr %1748, align 8, !tbaa !17
  br label %1752

1750:                                             ; preds = %1741
  %1751 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %1704, i32 noundef 0)
  br label %1752

1752:                                             ; preds = %1746, %1750, %1737
  %1753 = phi i64 [ %1740, %1737 ], [ %1749, %1746 ], [ %1751, %1750 ]
  %1754 = icmp ugt i64 %1753, 255
  br i1 %1754, label %1761, label %1755

1755:                                             ; preds = %1752
  %1756 = icmp ult i64 %1753, 128
  br i1 %1756, label %1771, label %1757

1757:                                             ; preds = %1755
  %1758 = load i32, ptr %26, align 4, !tbaa !16
  %1759 = and i32 %1758, 536870912
  %1760 = icmp eq i32 %1759, 0
  br i1 %1760, label %1771, label %1761

1761:                                             ; preds = %1757, %1752
  %1762 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %1763 = getelementptr inbounds %struct.cop, ptr %1762, i64 0, i32 10
  %1764 = load i32, ptr %1763, align 8, !tbaa !79
  %1765 = and i32 %1764, 8
  %1766 = icmp eq i32 %1765, 0
  br i1 %1766, label %1767, label %1771

1767:                                             ; preds = %1761
  %1768 = call ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef nonnull %15, i64 noundef %1753, i64 noundef 0) #17
  %1769 = ptrtoint ptr %1768 to i64
  %1770 = sub i64 %1769, %335
  store i64 %1770, ptr %16, align 8, !tbaa !60
  br label %1892

1771:                                             ; preds = %1761, %1757, %1755
  %1772 = trunc i64 %1753 to i8
  store i8 %1772, ptr %18, align 1, !tbaa !17
  store i64 1, ptr %16, align 8, !tbaa !60
  br label %1892

1773:                                             ; preds = %1700
  br i1 %1383, label %2987, label %1774

1774:                                             ; preds = %1773
  br i1 %325, label %1775, label %1793

1775:                                             ; preds = %1774
  %1776 = load i32, ptr %3, align 8
  %1777 = icmp ult i32 %1776, 41
  br i1 %1777, label %1778, label %1783

1778:                                             ; preds = %1775
  %1779 = load ptr, ptr %329, align 8
  %1780 = zext i32 %1776 to i64
  %1781 = getelementptr i8, ptr %1779, i64 %1780
  %1782 = add nuw nsw i32 %1776, 8
  store i32 %1782, ptr %3, align 8
  br label %1786

1783:                                             ; preds = %1775
  %1784 = load ptr, ptr %328, align 8
  %1785 = getelementptr i8, ptr %1784, i64 8
  store ptr %1785, ptr %328, align 8
  br label %1786

1786:                                             ; preds = %1783, %1778
  %1787 = phi ptr [ %1781, %1778 ], [ %1784, %1783 ]
  %1788 = load ptr, ptr %1787, align 8
  %1789 = icmp eq ptr %1788, null
  br i1 %1789, label %1792, label %1790

1790:                                             ; preds = %1786
  %1791 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1788) #18
  store i64 %1791, ptr %16, align 8, !tbaa !60
  br label %1892

1792:                                             ; preds = %1786
  store i64 6, ptr %16, align 8, !tbaa !60
  br label %1892

1793:                                             ; preds = %1774
  %1794 = getelementptr inbounds %struct.sv, ptr %1704, i64 0, i32 2
  %1795 = load i32, ptr %1794, align 4, !tbaa !16
  %1796 = and i32 %1795, 2098176
  %1797 = icmp eq i32 %1796, 1024
  br i1 %1797, label %1798, label %1804

1798:                                             ; preds = %1793
  %1799 = load ptr, ptr %1704, align 8, !tbaa !26
  %1800 = getelementptr inbounds %struct.xpv, ptr %1799, i64 0, i32 2
  %1801 = load i64, ptr %1800, align 8, !tbaa !57
  store i64 %1801, ptr %16, align 8, !tbaa !60
  %1802 = getelementptr inbounds %struct.sv, ptr %1704, i64 0, i32 3
  %1803 = load ptr, ptr %1802, align 8, !tbaa !17
  br label %1807

1804:                                             ; preds = %1793
  %1805 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %1704, ptr noundef nonnull %16, i32 noundef 34)
  %1806 = load i32, ptr %1794, align 4, !tbaa !16
  br label %1807

1807:                                             ; preds = %1804, %1798
  %1808 = phi i32 [ %1795, %1798 ], [ %1806, %1804 ]
  %1809 = phi ptr [ %1803, %1798 ], [ %1805, %1804 ]
  %1810 = and i32 %1808, 536870912
  %1811 = icmp eq i32 %1810, 0
  br i1 %1811, label %1892, label %1812

1812:                                             ; preds = %1807
  %1813 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %1814 = getelementptr inbounds %struct.cop, ptr %1813, i64 0, i32 10
  %1815 = load i32, ptr %1814, align 8, !tbaa !79
  %1816 = and i32 %1815, 8
  %1817 = icmp eq i32 %1816, 0
  br i1 %1817, label %1818, label %1892

1818:                                             ; preds = %1812
  %1819 = icmp ne i8 %1380, 0
  %1820 = load i64, ptr %16, align 8
  %1821 = icmp ult i64 %1379, %1820
  %1822 = select i1 %1819, i1 %1821, i1 false
  br i1 %1822, label %1823, label %1852

1823:                                             ; preds = %1818
  %1824 = and i32 %1808, 2097152
  %1825 = icmp eq i32 %1824, 0
  br i1 %1825, label %1826, label %1843

1826:                                             ; preds = %1823
  %1827 = and i32 %1808, 2048
  %1828 = icmp eq i32 %1827, 0
  br i1 %1828, label %1846, label %1829

1829:                                             ; preds = %1826
  %1830 = getelementptr inbounds %struct.sv, ptr %1704, i64 0, i32 3
  %1831 = load ptr, ptr %1830, align 8, !tbaa !17
  %1832 = getelementptr inbounds %struct.sv, ptr %1831, i64 0, i32 2
  %1833 = load i32, ptr %1832, align 4, !tbaa !16
  %1834 = and i32 %1833, 1048576
  %1835 = icmp eq i32 %1834, 0
  br i1 %1835, label %1846, label %1836

1836:                                             ; preds = %1829
  %1837 = load ptr, ptr %1831, align 8, !tbaa !26
  %1838 = load ptr, ptr %1837, align 8, !tbaa !50
  %1839 = getelementptr inbounds %struct.hv, ptr %1838, i64 0, i32 2
  %1840 = load i32, ptr %1839, align 4, !tbaa !64
  %1841 = and i32 %1840, 268435456
  %1842 = icmp eq i32 %1841, 0
  br i1 %1842, label %1846, label %1843

1843:                                             ; preds = %1836, %1823
  %1844 = getelementptr inbounds i8, ptr %1809, i64 %1820
  %1845 = call i64 @Perl_utf8_length(ptr noundef %1809, ptr noundef nonnull %1844) #17
  br label %1848

1846:                                             ; preds = %1836, %1829, %1826
  %1847 = call i64 @Perl_sv_len_utf8(ptr noundef nonnull %1704)
  br label %1848

1848:                                             ; preds = %1846, %1843
  %1849 = phi i64 [ %1845, %1843 ], [ %1847, %1846 ]
  %1850 = call i64 @llvm.umin.i64(i64 %1379, i64 %1849)
  %1851 = call fastcc i64 @S_sv_or_pv_pos_u2b(ptr noundef nonnull %1704, ptr noundef %1809, i64 noundef %1850)
  br label %1852

1852:                                             ; preds = %1848, %1818
  %1853 = phi i64 [ %1851, %1848 ], [ %1379, %1818 ]
  %1854 = icmp eq i64 %1235, 0
  br i1 %1854, label %1892, label %1855

1855:                                             ; preds = %1852
  %1856 = load i64, ptr %16, align 8
  %1857 = icmp ult i64 %1853, %1856
  %1858 = select i1 %1819, i1 %1857, i1 false
  br i1 %1858, label %1859, label %1862

1859:                                             ; preds = %1855
  %1860 = sub i64 %1235, %1379
  %1861 = add i64 %1860, %1853
  br label %1892

1862:                                             ; preds = %1855
  %1863 = load i32, ptr %1794, align 4, !tbaa !16
  %1864 = and i32 %1863, 2097152
  %1865 = icmp eq i32 %1864, 0
  br i1 %1865, label %1866, label %1883

1866:                                             ; preds = %1862
  %1867 = and i32 %1863, 2048
  %1868 = icmp eq i32 %1867, 0
  br i1 %1868, label %1886, label %1869

1869:                                             ; preds = %1866
  %1870 = getelementptr inbounds %struct.sv, ptr %1704, i64 0, i32 3
  %1871 = load ptr, ptr %1870, align 8, !tbaa !17
  %1872 = getelementptr inbounds %struct.sv, ptr %1871, i64 0, i32 2
  %1873 = load i32, ptr %1872, align 4, !tbaa !16
  %1874 = and i32 %1873, 1048576
  %1875 = icmp eq i32 %1874, 0
  br i1 %1875, label %1886, label %1876

1876:                                             ; preds = %1869
  %1877 = load ptr, ptr %1871, align 8, !tbaa !26
  %1878 = load ptr, ptr %1877, align 8, !tbaa !50
  %1879 = getelementptr inbounds %struct.hv, ptr %1878, i64 0, i32 2
  %1880 = load i32, ptr %1879, align 4, !tbaa !64
  %1881 = and i32 %1880, 268435456
  %1882 = icmp eq i32 %1881, 0
  br i1 %1882, label %1886, label %1883

1883:                                             ; preds = %1876, %1862
  %1884 = getelementptr inbounds i8, ptr %1809, i64 %1856
  %1885 = call i64 @Perl_utf8_length(ptr noundef %1809, ptr noundef %1884) #17
  br label %1888

1886:                                             ; preds = %1876, %1869, %1866
  %1887 = call i64 @Perl_sv_len_utf8(ptr noundef nonnull %1704)
  br label %1888

1888:                                             ; preds = %1886, %1883
  %1889 = phi i64 [ %1885, %1883 ], [ %1887, %1886 ]
  %1890 = add i64 %1856, %1235
  %1891 = sub i64 %1890, %1889
  br label %1892

1892:                                             ; preds = %608, %613, %635, %1852, %1888, %1859, %1792, %1790, %1812, %1807, %1767, %1771, %1598
  %1893 = phi ptr [ %1599, %1598 ], [ %1705, %1792 ], [ %1705, %1790 ], [ %1705, %1807 ], [ %1705, %1852 ], [ %1705, %1859 ], [ %1705, %1888 ], [ %1705, %1812 ], [ %1705, %1767 ], [ %1705, %1771 ], [ %576, %635 ], [ %576, %613 ], [ %576, %608 ]
  %1894 = phi i8 [ %1234, %1598 ], [ %1234, %1792 ], [ %1234, %1790 ], [ %1234, %1807 ], [ 1, %1852 ], [ 1, %1859 ], [ 1, %1888 ], [ %1234, %1812 ], [ 1, %1767 ], [ %1234, %1771 ], [ %645, %635 ], [ %619, %613 ], [ 0, %608 ]
  %1895 = phi ptr [ %1595, %1598 ], [ @Perl_sv_vcatpvfn_flags.nullstr, %1792 ], [ %1788, %1790 ], [ %1809, %1807 ], [ %1809, %1852 ], [ %1809, %1859 ], [ %1809, %1888 ], [ %1809, %1812 ], [ %15, %1767 ], [ %18, %1771 ], [ %638, %635 ], [ %610, %613 ], [ %610, %608 ]
  %1896 = phi i64 [ %1379, %1598 ], [ %1379, %1792 ], [ %1379, %1790 ], [ %1379, %1807 ], [ %1853, %1852 ], [ %1853, %1859 ], [ %1853, %1888 ], [ %1379, %1812 ], [ %1379, %1767 ], [ %1379, %1771 ], [ %646, %635 ], [ %575, %613 ], [ %575, %608 ]
  %1897 = phi ptr [ %1574, %1598 ], [ %1574, %1792 ], [ %1574, %1790 ], [ %1574, %1807 ], [ %1574, %1852 ], [ %1574, %1859 ], [ %1574, %1888 ], [ %1574, %1812 ], [ %1574, %1767 ], [ %1574, %1771 ], [ null, %635 ], [ null, %613 ], [ null, %608 ]
  %1898 = phi i8 [ %1380, %1598 ], [ %1380, %1792 ], [ %1380, %1790 ], [ %1380, %1807 ], [ %1380, %1852 ], [ 1, %1859 ], [ %1380, %1888 ], [ %1380, %1812 ], [ %1380, %1767 ], [ %1380, %1771 ], [ %647, %635 ], [ %581, %613 ], [ %581, %608 ]
  %1899 = phi i64 [ %1235, %1598 ], [ %1235, %1792 ], [ %1235, %1790 ], [ %1235, %1807 ], [ 0, %1852 ], [ %1861, %1859 ], [ %1891, %1888 ], [ %1235, %1812 ], [ %1235, %1767 ], [ %1235, %1771 ], [ 0, %635 ], [ 0, %613 ], [ 0, %608 ]
  %1900 = phi ptr [ %1236, %1598 ], [ %1236, %1792 ], [ %1236, %1790 ], [ %1236, %1807 ], [ %1236, %1852 ], [ %1236, %1859 ], [ %1236, %1888 ], [ %1236, %1812 ], [ %1236, %1767 ], [ %1236, %1771 ], [ @.str.66, %635 ], [ @.str.66, %613 ], [ @.str.66, %608 ]
  %1901 = phi i8 [ %1240, %1598 ], [ %1240, %1792 ], [ %1240, %1790 ], [ %1240, %1807 ], [ %1240, %1852 ], [ %1240, %1859 ], [ %1240, %1888 ], [ %1240, %1812 ], [ %1240, %1767 ], [ %1240, %1771 ], [ 32, %635 ], [ 32, %613 ], [ 32, %608 ]
  %1902 = phi i8 [ %1575, %1598 ], [ %1575, %1792 ], [ %1575, %1790 ], [ %1575, %1807 ], [ %1575, %1852 ], [ %1575, %1859 ], [ %1575, %1888 ], [ %1575, %1812 ], [ %1575, %1767 ], [ %1575, %1771 ], [ 0, %635 ], [ 0, %613 ], [ 0, %608 ]
  %1903 = phi i8 [ %1241, %1598 ], [ %1241, %1792 ], [ %1241, %1790 ], [ %1241, %1807 ], [ %1241, %1852 ], [ %1241, %1859 ], [ %1241, %1888 ], [ %1241, %1812 ], [ %1241, %1767 ], [ %1241, %1771 ], [ 0, %635 ], [ 0, %613 ], [ 0, %608 ]
  %1904 = phi i8 [ %1242, %1598 ], [ %1242, %1792 ], [ %1242, %1790 ], [ %1242, %1807 ], [ %1242, %1852 ], [ %1242, %1859 ], [ %1242, %1888 ], [ %1242, %1812 ], [ %1242, %1767 ], [ %1242, %1771 ], [ 0, %635 ], [ 0, %613 ], [ 0, %608 ]
  %1905 = phi i8 [ %1243, %1598 ], [ %1243, %1792 ], [ %1243, %1790 ], [ %1243, %1807 ], [ %1243, %1852 ], [ %1243, %1859 ], [ %1243, %1888 ], [ %1243, %1812 ], [ %1243, %1767 ], [ %1243, %1771 ], [ 0, %635 ], [ 0, %613 ], [ 0, %608 ]
  %1906 = phi i8 [ %1244, %1598 ], [ %1244, %1792 ], [ %1244, %1790 ], [ %1244, %1807 ], [ %1244, %1852 ], [ %1244, %1859 ], [ %1244, %1888 ], [ %1244, %1812 ], [ %1244, %1767 ], [ %1244, %1771 ], [ %350, %635 ], [ %350, %613 ], [ %350, %608 ]
  %1907 = phi ptr [ %347, %1598 ], [ %1704, %1792 ], [ %1704, %1790 ], [ %1704, %1807 ], [ %1704, %1852 ], [ %1704, %1859 ], [ %1704, %1888 ], [ %1704, %1812 ], [ %1704, %1767 ], [ %1704, %1771 ], [ %347, %635 ], [ %594, %613 ], [ %594, %608 ]
  %1908 = phi i32 [ %1576, %1598 ], [ %1702, %1792 ], [ %1702, %1790 ], [ %1702, %1807 ], [ %1702, %1852 ], [ %1702, %1859 ], [ %1702, %1888 ], [ %1702, %1812 ], [ %1702, %1767 ], [ %1702, %1771 ], [ %346, %635 ], [ %346, %613 ], [ %346, %608 ]
  %1909 = icmp ne i8 %1898, 0
  %1910 = load i64, ptr %16, align 8
  %1911 = icmp ult i64 %1896, %1910
  %1912 = select i1 %1909, i1 %1911, i1 false
  br i1 %1912, label %1913, label %3119

1913:                                             ; preds = %1892
  store i64 %1896, ptr %16, align 8, !tbaa !60
  br label %3119

1914:                                             ; preds = %1700
  br i1 %1703, label %2445, label %1915

1915:                                             ; preds = %1914
  %1916 = or i8 %1243, %1241
  %1917 = and i8 %1916, 1
  %1918 = icmp eq i8 %1917, 0
  br i1 %1918, label %1919, label %2987

1919:                                             ; preds = %1915
  br i1 %325, label %1920, label %1934

1920:                                             ; preds = %1919
  %1921 = load i32, ptr %3, align 8
  %1922 = icmp ult i32 %1921, 41
  br i1 %1922, label %1923, label %1928

1923:                                             ; preds = %1920
  %1924 = load ptr, ptr %329, align 8
  %1925 = zext i32 %1921 to i64
  %1926 = getelementptr i8, ptr %1924, i64 %1925
  %1927 = add nuw nsw i32 %1921, 8
  store i32 %1927, ptr %3, align 8
  br label %1931

1928:                                             ; preds = %1920
  %1929 = load ptr, ptr %328, align 8
  %1930 = getelementptr i8, ptr %1929, i64 8
  store ptr %1930, ptr %328, align 8
  br label %1931

1931:                                             ; preds = %1928, %1923
  %1932 = phi ptr [ %1926, %1923 ], [ %1929, %1928 ]
  %1933 = load ptr, ptr %1932, align 8
  br label %1934

1934:                                             ; preds = %1931, %1919
  %1935 = phi ptr [ %1933, %1931 ], [ %1704, %1919 ]
  %1936 = ptrtoint ptr %1935 to i64
  %1937 = icmp eq ptr %1935, null
  %1938 = and i8 %1243, 1
  %1939 = icmp eq i8 %1938, 0
  %1940 = select i1 %1937, i1 true, i1 %1939
  br label %2330

1941:                                             ; preds = %1700
  br label %1942

1942:                                             ; preds = %1700, %1700, %1941
  %1943 = phi i8 [ %1596, %1700 ], [ %1596, %1700 ], [ 113, %1941 ]
  br i1 %1703, label %2445, label %1944

1944:                                             ; preds = %1942
  br i1 %1383, label %1945, label %1966

1945:                                             ; preds = %1944
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %21) #17
  %1946 = load i64, ptr %17, align 8, !tbaa !60
  %1947 = icmp eq i64 %1946, 0
  br i1 %1947, label %1965, label %1948

1948:                                             ; preds = %1945
  %1949 = icmp eq i8 %1575, 0
  br i1 %1949, label %1954, label %1950

1950:                                             ; preds = %1948
  %1951 = call i64 @Perl_utf8n_to_uvchr(ptr noundef %1574, i64 noundef %1946, ptr noundef nonnull %21, i32 noundef 1) #17
  %1952 = load i64, ptr %21, align 8, !tbaa !60
  %1953 = load i64, ptr %17, align 8, !tbaa !60
  br label %1957

1954:                                             ; preds = %1948
  %1955 = load i8, ptr %1574, align 1, !tbaa !17
  %1956 = zext i8 %1955 to i64
  br label %1957

1957:                                             ; preds = %1954, %1950
  %1958 = phi i64 [ %1953, %1950 ], [ %1946, %1954 ]
  %1959 = phi i64 [ %1952, %1950 ], [ 1, %1954 ]
  %1960 = phi i64 [ %1951, %1950 ], [ %1956, %1954 ]
  %1961 = getelementptr inbounds i8, ptr %1574, i64 %1959
  %1962 = sub i64 %1958, %1959
  store i64 %1962, ptr %17, align 8, !tbaa !60
  %1963 = icmp eq i8 %1239, 0
  br i1 %1963, label %2094, label %1964

1964:                                             ; preds = %1957
  store i8 %1239, ptr %14, align 4, !tbaa !17
  br label %2094

1965:                                             ; preds = %1945
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %21) #17
  br label %3356

1966:                                             ; preds = %1944
  br i1 %325, label %1967, label %2074

1967:                                             ; preds = %1966
  %1968 = sext i8 %1943 to i32
  switch i32 %1968, label %2045 [
    i32 99, label %1969
    i32 104, label %1986
    i32 108, label %2003
    i32 86, label %2017
    i32 122, label %2031
    i32 113, label %2060
  ]

1969:                                             ; preds = %1967
  %1970 = load i32, ptr %3, align 8
  %1971 = icmp ult i32 %1970, 41
  br i1 %1971, label %1972, label %1977

1972:                                             ; preds = %1969
  %1973 = load ptr, ptr %329, align 8
  %1974 = zext i32 %1970 to i64
  %1975 = getelementptr i8, ptr %1973, i64 %1974
  %1976 = add nuw nsw i32 %1970, 8
  store i32 %1976, ptr %3, align 8
  br label %1980

1977:                                             ; preds = %1969
  %1978 = load ptr, ptr %328, align 8
  %1979 = getelementptr i8, ptr %1978, i64 8
  store ptr %1979, ptr %328, align 8
  br label %1980

1980:                                             ; preds = %1977, %1972
  %1981 = phi ptr [ %1975, %1972 ], [ %1978, %1977 ]
  %1982 = load i32, ptr %1981, align 4
  %1983 = zext i32 %1982 to i64
  %1984 = shl i64 %1983, 56
  %1985 = ashr exact i64 %1984, 56
  br label %2096

1986:                                             ; preds = %1967
  %1987 = load i32, ptr %3, align 8
  %1988 = icmp ult i32 %1987, 41
  br i1 %1988, label %1989, label %1994

1989:                                             ; preds = %1986
  %1990 = load ptr, ptr %329, align 8
  %1991 = zext i32 %1987 to i64
  %1992 = getelementptr i8, ptr %1990, i64 %1991
  %1993 = add nuw nsw i32 %1987, 8
  store i32 %1993, ptr %3, align 8
  br label %1997

1994:                                             ; preds = %1986
  %1995 = load ptr, ptr %328, align 8
  %1996 = getelementptr i8, ptr %1995, i64 8
  store ptr %1996, ptr %328, align 8
  br label %1997

1997:                                             ; preds = %1994, %1989
  %1998 = phi ptr [ %1992, %1989 ], [ %1995, %1994 ]
  %1999 = load i32, ptr %1998, align 4
  %2000 = zext i32 %1999 to i64
  %2001 = shl i64 %2000, 48
  %2002 = ashr exact i64 %2001, 48
  br label %2096

2003:                                             ; preds = %1967
  %2004 = load i32, ptr %3, align 8
  %2005 = icmp ult i32 %2004, 41
  br i1 %2005, label %2006, label %2011

2006:                                             ; preds = %2003
  %2007 = load ptr, ptr %329, align 8
  %2008 = zext i32 %2004 to i64
  %2009 = getelementptr i8, ptr %2007, i64 %2008
  %2010 = add nuw nsw i32 %2004, 8
  store i32 %2010, ptr %3, align 8
  br label %2014

2011:                                             ; preds = %2003
  %2012 = load ptr, ptr %328, align 8
  %2013 = getelementptr i8, ptr %2012, i64 8
  store ptr %2013, ptr %328, align 8
  br label %2014

2014:                                             ; preds = %2011, %2006
  %2015 = phi ptr [ %2009, %2006 ], [ %2012, %2011 ]
  %2016 = load i64, ptr %2015, align 8
  br label %2096

2017:                                             ; preds = %1967
  %2018 = load i32, ptr %3, align 8
  %2019 = icmp ult i32 %2018, 41
  br i1 %2019, label %2020, label %2025

2020:                                             ; preds = %2017
  %2021 = load ptr, ptr %329, align 8
  %2022 = zext i32 %2018 to i64
  %2023 = getelementptr i8, ptr %2021, i64 %2022
  %2024 = add nuw nsw i32 %2018, 8
  store i32 %2024, ptr %3, align 8
  br label %2028

2025:                                             ; preds = %2017
  %2026 = load ptr, ptr %328, align 8
  %2027 = getelementptr i8, ptr %2026, i64 8
  store ptr %2027, ptr %328, align 8
  br label %2028

2028:                                             ; preds = %2025, %2020
  %2029 = phi ptr [ %2023, %2020 ], [ %2026, %2025 ]
  %2030 = load i64, ptr %2029, align 8
  br label %2096

2031:                                             ; preds = %1967
  %2032 = load i32, ptr %3, align 8
  %2033 = icmp ult i32 %2032, 41
  br i1 %2033, label %2034, label %2039

2034:                                             ; preds = %2031
  %2035 = load ptr, ptr %329, align 8
  %2036 = zext i32 %2032 to i64
  %2037 = getelementptr i8, ptr %2035, i64 %2036
  %2038 = add nuw nsw i32 %2032, 8
  store i32 %2038, ptr %3, align 8
  br label %2042

2039:                                             ; preds = %2031
  %2040 = load ptr, ptr %328, align 8
  %2041 = getelementptr i8, ptr %2040, i64 8
  store ptr %2041, ptr %328, align 8
  br label %2042

2042:                                             ; preds = %2039, %2034
  %2043 = phi ptr [ %2037, %2034 ], [ %2040, %2039 ]
  %2044 = load i64, ptr %2043, align 8
  br label %2096

2045:                                             ; preds = %1967
  %2046 = load i32, ptr %3, align 8
  %2047 = icmp ult i32 %2046, 41
  br i1 %2047, label %2048, label %2053

2048:                                             ; preds = %2045
  %2049 = load ptr, ptr %329, align 8
  %2050 = zext i32 %2046 to i64
  %2051 = getelementptr i8, ptr %2049, i64 %2050
  %2052 = add nuw nsw i32 %2046, 8
  store i32 %2052, ptr %3, align 8
  br label %2056

2053:                                             ; preds = %2045
  %2054 = load ptr, ptr %328, align 8
  %2055 = getelementptr i8, ptr %2054, i64 8
  store ptr %2055, ptr %328, align 8
  br label %2056

2056:                                             ; preds = %2053, %2048
  %2057 = phi ptr [ %2051, %2048 ], [ %2054, %2053 ]
  %2058 = load i32, ptr %2057, align 4
  %2059 = sext i32 %2058 to i64
  br label %2096

2060:                                             ; preds = %1967
  %2061 = load i32, ptr %3, align 8
  %2062 = icmp ult i32 %2061, 41
  br i1 %2062, label %2063, label %2068

2063:                                             ; preds = %2060
  %2064 = load ptr, ptr %329, align 8
  %2065 = zext i32 %2061 to i64
  %2066 = getelementptr i8, ptr %2064, i64 %2065
  %2067 = add nuw nsw i32 %2061, 8
  store i32 %2067, ptr %3, align 8
  br label %2071

2068:                                             ; preds = %2060
  %2069 = load ptr, ptr %328, align 8
  %2070 = getelementptr i8, ptr %2069, i64 8
  store ptr %2070, ptr %328, align 8
  br label %2071

2071:                                             ; preds = %2068, %2063
  %2072 = phi ptr [ %2066, %2063 ], [ %2069, %2068 ]
  %2073 = load i64, ptr %2072, align 8
  br label %2096

2074:                                             ; preds = %1966
  %2075 = getelementptr inbounds %struct.sv, ptr %1704, i64 0, i32 2
  %2076 = load i32, ptr %2075, align 4, !tbaa !16
  %2077 = and i32 %2076, 256
  %2078 = icmp eq i32 %2077, 0
  br i1 %2078, label %2083, label %2079

2079:                                             ; preds = %2074
  %2080 = load ptr, ptr %1704, align 8, !tbaa !26
  %2081 = getelementptr inbounds %struct.xpviv, ptr %2080, i64 0, i32 4
  %2082 = load i64, ptr %2081, align 8, !tbaa !17
  br label %2085

2083:                                             ; preds = %2074
  %2084 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %1704, i32 noundef 0)
  br label %2085

2085:                                             ; preds = %2083, %2079
  %2086 = phi i64 [ %2082, %2079 ], [ %2084, %2083 ]
  %2087 = sext i8 %1943 to i32
  switch i32 %2087, label %2096 [
    i32 99, label %2088
    i32 104, label %2091
  ]

2088:                                             ; preds = %2085
  %2089 = shl i64 %2086, 56
  %2090 = ashr exact i64 %2089, 56
  br label %2096

2091:                                             ; preds = %2085
  %2092 = shl i64 %2086, 48
  %2093 = ashr exact i64 %2092, 48
  br label %2096

2094:                                             ; preds = %1957, %1964
  %2095 = phi i64 [ 0, %1957 ], [ 1, %1964 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %21) #17
  br label %2275

2096:                                             ; preds = %2088, %2091, %2085, %2071, %2056, %2042, %2028, %2014, %1997, %1980
  %2097 = phi i64 [ %2086, %2085 ], [ %2090, %2088 ], [ %2093, %2091 ], [ %1985, %1980 ], [ %2002, %1997 ], [ %2016, %2014 ], [ %2030, %2028 ], [ %2044, %2042 ], [ %2073, %2071 ], [ %2059, %2056 ]
  %2098 = icmp sgt i64 %2097, -1
  br i1 %2098, label %2099, label %2102

2099:                                             ; preds = %2096
  %2100 = icmp eq i8 %1239, 0
  br i1 %2100, label %2275, label %2101

2101:                                             ; preds = %2099
  store i8 %1239, ptr %14, align 4, !tbaa !17
  br label %2275

2102:                                             ; preds = %2096
  %2103 = sub i64 0, %2097
  store i8 45, ptr %14, align 4, !tbaa !17
  br label %2275

2104:                                             ; preds = %1700
  br label %2110

2105:                                             ; preds = %1700, %1700
  br label %2110

2106:                                             ; preds = %1700
  br label %2107

2107:                                             ; preds = %1700, %2106
  %2108 = phi i8 [ %1596, %1700 ], [ 113, %2106 ]
  br label %2110

2109:                                             ; preds = %1700, %1700
  br label %2110

2110:                                             ; preds = %2104, %1700, %2109, %2107, %2105
  %2111 = phi i32 [ 16, %2109 ], [ 8, %2107 ], [ 2, %2105 ], [ 10, %1700 ], [ 10, %2104 ]
  %2112 = phi i8 [ %1596, %2109 ], [ %2108, %2107 ], [ %1596, %2105 ], [ %1596, %1700 ], [ 113, %2104 ]
  br i1 %1703, label %2445, label %2113

2113:                                             ; preds = %2110
  br i1 %1383, label %2114, label %2151

2114:                                             ; preds = %3346, %2113
  %2115 = phi ptr [ %3120, %3346 ], [ %1705, %2113 ]
  %2116 = phi i8 [ %3216, %3346 ], [ %1234, %2113 ]
  %2117 = phi i64 [ %3124, %3346 ], [ %1379, %2113 ]
  %2118 = phi ptr [ %3125, %3346 ], [ %1574, %2113 ]
  %2119 = phi i32 [ %3126, %3346 ], [ %2111, %2113 ]
  %2120 = phi i8 [ %3127, %3346 ], [ %1380, %2113 ]
  %2121 = phi i64 [ %3218, %3346 ], [ %1235, %2113 ]
  %2122 = phi ptr [ %3130, %3346 ], [ %1236, %2113 ]
  %2123 = phi i8 [ %3131, %3346 ], [ %1240, %2113 ]
  %2124 = phi i8 [ %3132, %3346 ], [ %1575, %2113 ]
  %2125 = phi i8 [ %3336, %3346 ], [ %1241, %2113 ]
  %2126 = phi i8 [ %3134, %3346 ], [ %1242, %2113 ]
  %2127 = phi i8 [ %3135, %3346 ], [ %1243, %2113 ]
  %2128 = phi i8 [ %3136, %3346 ], [ %351, %2113 ]
  %2129 = phi i8 [ %3137, %3346 ], [ %1244, %2113 ]
  %2130 = phi i8 [ %3340, %3346 ], [ %348, %2113 ]
  %2131 = phi ptr [ %3139, %3346 ], [ %1704, %2113 ]
  %2132 = phi i32 [ %3140, %3346 ], [ %1702, %2113 ]
  %2133 = load i64, ptr %17, align 8, !tbaa !60
  %2134 = icmp eq i64 %2133, 0
  br i1 %2134, label %3356, label %2135

2135:                                             ; preds = %2114
  %2136 = and i8 %2124, 1
  %2137 = icmp eq i8 %2136, 0
  br i1 %2137, label %2142, label %2138

2138:                                             ; preds = %2135
  %2139 = call i64 @Perl_utf8n_to_uvchr(ptr noundef %2118, i64 noundef %2133, ptr noundef nonnull %22, i32 noundef 1) #17
  %2140 = load i64, ptr %22, align 8, !tbaa !60
  %2141 = load i64, ptr %17, align 8, !tbaa !60
  br label %2145

2142:                                             ; preds = %2135
  %2143 = load i8, ptr %2118, align 1, !tbaa !17
  %2144 = zext i8 %2143 to i64
  store i64 1, ptr %22, align 8, !tbaa !60
  br label %2145

2145:                                             ; preds = %2142, %2138
  %2146 = phi i64 [ %2141, %2138 ], [ %2133, %2142 ]
  %2147 = phi i64 [ %2140, %2138 ], [ 1, %2142 ]
  %2148 = phi i64 [ %2139, %2138 ], [ %2144, %2142 ]
  %2149 = getelementptr inbounds i8, ptr %2118, i64 %2147
  %2150 = sub i64 %2146, %2147
  store i64 %2150, ptr %17, align 8, !tbaa !60
  br label %2281

2151:                                             ; preds = %2113
  br i1 %325, label %2152, label %2257

2152:                                             ; preds = %2151
  %2153 = sext i8 %2112 to i32
  switch i32 %2153, label %2228 [
    i32 99, label %2154
    i32 104, label %2170
    i32 108, label %2186
    i32 86, label %2200
    i32 122, label %2214
    i32 113, label %2243
  ]

2154:                                             ; preds = %2152
  %2155 = load i32, ptr %3, align 8
  %2156 = icmp ult i32 %2155, 41
  br i1 %2156, label %2157, label %2162

2157:                                             ; preds = %2154
  %2158 = load ptr, ptr %329, align 8
  %2159 = zext i32 %2155 to i64
  %2160 = getelementptr i8, ptr %2158, i64 %2159
  %2161 = add nuw nsw i32 %2155, 8
  store i32 %2161, ptr %3, align 8
  br label %2165

2162:                                             ; preds = %2154
  %2163 = load ptr, ptr %328, align 8
  %2164 = getelementptr i8, ptr %2163, i64 8
  store ptr %2164, ptr %328, align 8
  br label %2165

2165:                                             ; preds = %2162, %2157
  %2166 = phi ptr [ %2160, %2157 ], [ %2163, %2162 ]
  %2167 = load i32, ptr %2166, align 4
  %2168 = and i32 %2167, 255
  %2169 = zext i32 %2168 to i64
  br label %2281

2170:                                             ; preds = %2152
  %2171 = load i32, ptr %3, align 8
  %2172 = icmp ult i32 %2171, 41
  br i1 %2172, label %2173, label %2178

2173:                                             ; preds = %2170
  %2174 = load ptr, ptr %329, align 8
  %2175 = zext i32 %2171 to i64
  %2176 = getelementptr i8, ptr %2174, i64 %2175
  %2177 = add nuw nsw i32 %2171, 8
  store i32 %2177, ptr %3, align 8
  br label %2181

2178:                                             ; preds = %2170
  %2179 = load ptr, ptr %328, align 8
  %2180 = getelementptr i8, ptr %2179, i64 8
  store ptr %2180, ptr %328, align 8
  br label %2181

2181:                                             ; preds = %2178, %2173
  %2182 = phi ptr [ %2176, %2173 ], [ %2179, %2178 ]
  %2183 = load i32, ptr %2182, align 4
  %2184 = and i32 %2183, 65535
  %2185 = zext i32 %2184 to i64
  br label %2281

2186:                                             ; preds = %2152
  %2187 = load i32, ptr %3, align 8
  %2188 = icmp ult i32 %2187, 41
  br i1 %2188, label %2189, label %2194

2189:                                             ; preds = %2186
  %2190 = load ptr, ptr %329, align 8
  %2191 = zext i32 %2187 to i64
  %2192 = getelementptr i8, ptr %2190, i64 %2191
  %2193 = add nuw nsw i32 %2187, 8
  store i32 %2193, ptr %3, align 8
  br label %2197

2194:                                             ; preds = %2186
  %2195 = load ptr, ptr %328, align 8
  %2196 = getelementptr i8, ptr %2195, i64 8
  store ptr %2196, ptr %328, align 8
  br label %2197

2197:                                             ; preds = %2194, %2189
  %2198 = phi ptr [ %2192, %2189 ], [ %2195, %2194 ]
  %2199 = load i64, ptr %2198, align 8
  br label %2281

2200:                                             ; preds = %2152
  %2201 = load i32, ptr %3, align 8
  %2202 = icmp ult i32 %2201, 41
  br i1 %2202, label %2203, label %2208

2203:                                             ; preds = %2200
  %2204 = load ptr, ptr %329, align 8
  %2205 = zext i32 %2201 to i64
  %2206 = getelementptr i8, ptr %2204, i64 %2205
  %2207 = add nuw nsw i32 %2201, 8
  store i32 %2207, ptr %3, align 8
  br label %2211

2208:                                             ; preds = %2200
  %2209 = load ptr, ptr %328, align 8
  %2210 = getelementptr i8, ptr %2209, i64 8
  store ptr %2210, ptr %328, align 8
  br label %2211

2211:                                             ; preds = %2208, %2203
  %2212 = phi ptr [ %2206, %2203 ], [ %2209, %2208 ]
  %2213 = load i64, ptr %2212, align 8
  br label %2281

2214:                                             ; preds = %2152
  %2215 = load i32, ptr %3, align 8
  %2216 = icmp ult i32 %2215, 41
  br i1 %2216, label %2217, label %2222

2217:                                             ; preds = %2214
  %2218 = load ptr, ptr %329, align 8
  %2219 = zext i32 %2215 to i64
  %2220 = getelementptr i8, ptr %2218, i64 %2219
  %2221 = add nuw nsw i32 %2215, 8
  store i32 %2221, ptr %3, align 8
  br label %2225

2222:                                             ; preds = %2214
  %2223 = load ptr, ptr %328, align 8
  %2224 = getelementptr i8, ptr %2223, i64 8
  store ptr %2224, ptr %328, align 8
  br label %2225

2225:                                             ; preds = %2222, %2217
  %2226 = phi ptr [ %2220, %2217 ], [ %2223, %2222 ]
  %2227 = load i64, ptr %2226, align 8
  br label %2281

2228:                                             ; preds = %2152
  %2229 = load i32, ptr %3, align 8
  %2230 = icmp ult i32 %2229, 41
  br i1 %2230, label %2231, label %2236

2231:                                             ; preds = %2228
  %2232 = load ptr, ptr %329, align 8
  %2233 = zext i32 %2229 to i64
  %2234 = getelementptr i8, ptr %2232, i64 %2233
  %2235 = add nuw nsw i32 %2229, 8
  store i32 %2235, ptr %3, align 8
  br label %2239

2236:                                             ; preds = %2228
  %2237 = load ptr, ptr %328, align 8
  %2238 = getelementptr i8, ptr %2237, i64 8
  store ptr %2238, ptr %328, align 8
  br label %2239

2239:                                             ; preds = %2236, %2231
  %2240 = phi ptr [ %2234, %2231 ], [ %2237, %2236 ]
  %2241 = load i32, ptr %2240, align 4
  %2242 = zext i32 %2241 to i64
  br label %2281

2243:                                             ; preds = %2152
  %2244 = load i32, ptr %3, align 8
  %2245 = icmp ult i32 %2244, 41
  br i1 %2245, label %2246, label %2251

2246:                                             ; preds = %2243
  %2247 = load ptr, ptr %329, align 8
  %2248 = zext i32 %2244 to i64
  %2249 = getelementptr i8, ptr %2247, i64 %2248
  %2250 = add nuw nsw i32 %2244, 8
  store i32 %2250, ptr %3, align 8
  br label %2254

2251:                                             ; preds = %2243
  %2252 = load ptr, ptr %328, align 8
  %2253 = getelementptr i8, ptr %2252, i64 8
  store ptr %2253, ptr %328, align 8
  br label %2254

2254:                                             ; preds = %2251, %2246
  %2255 = phi ptr [ %2249, %2246 ], [ %2252, %2251 ]
  %2256 = load i64, ptr %2255, align 8
  br label %2281

2257:                                             ; preds = %2151
  %2258 = getelementptr inbounds %struct.sv, ptr %1704, i64 0, i32 2
  %2259 = load i32, ptr %2258, align 4, !tbaa !16
  %2260 = and i32 %2259, 256
  %2261 = icmp eq i32 %2260, 0
  br i1 %2261, label %2266, label %2262

2262:                                             ; preds = %2257
  %2263 = load ptr, ptr %1704, align 8, !tbaa !26
  %2264 = getelementptr inbounds %struct.xpvuv, ptr %2263, i64 0, i32 4
  %2265 = load i64, ptr %2264, align 8, !tbaa !17
  br label %2268

2266:                                             ; preds = %2257
  %2267 = call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %1704, i32 noundef 0)
  br label %2268

2268:                                             ; preds = %2266, %2262
  %2269 = phi i64 [ %2265, %2262 ], [ %2267, %2266 ]
  %2270 = sext i8 %2112 to i32
  switch i32 %2270, label %2281 [
    i32 99, label %2271
    i32 104, label %2273
  ]

2271:                                             ; preds = %2268
  %2272 = and i64 %2269, 255
  br label %2281

2273:                                             ; preds = %2268
  %2274 = and i64 %2269, 65535
  br label %2281

2275:                                             ; preds = %2094, %2099, %2101, %2102
  %2276 = phi i64 [ 1, %2102 ], [ 1, %2101 ], [ 0, %2099 ], [ %2095, %2094 ]
  %2277 = phi ptr [ %1574, %2102 ], [ %1574, %2101 ], [ %1574, %2099 ], [ %1961, %2094 ]
  %2278 = phi i64 [ %2103, %2102 ], [ %2097, %2101 ], [ %2097, %2099 ], [ %1960, %2094 ]
  %2279 = and i8 %1243, 1
  %2280 = icmp eq i8 %2279, 0
  br label %2307

2281:                                             ; preds = %2271, %2273, %2268, %2145, %2165, %2181, %2197, %2211, %2225, %2239, %2254
  %2282 = phi ptr [ %2115, %2145 ], [ %1705, %2239 ], [ %1705, %2254 ], [ %1705, %2225 ], [ %1705, %2211 ], [ %1705, %2197 ], [ %1705, %2181 ], [ %1705, %2165 ], [ %1705, %2268 ], [ %1705, %2273 ], [ %1705, %2271 ]
  %2283 = phi i8 [ %2116, %2145 ], [ %1234, %2239 ], [ %1234, %2254 ], [ %1234, %2225 ], [ %1234, %2211 ], [ %1234, %2197 ], [ %1234, %2181 ], [ %1234, %2165 ], [ %1234, %2268 ], [ %1234, %2273 ], [ %1234, %2271 ]
  %2284 = phi i64 [ %2117, %2145 ], [ %1379, %2239 ], [ %1379, %2254 ], [ %1379, %2225 ], [ %1379, %2211 ], [ %1379, %2197 ], [ %1379, %2181 ], [ %1379, %2165 ], [ %1379, %2268 ], [ %1379, %2273 ], [ %1379, %2271 ]
  %2285 = phi ptr [ %2149, %2145 ], [ %1574, %2239 ], [ %1574, %2254 ], [ %1574, %2225 ], [ %1574, %2211 ], [ %1574, %2197 ], [ %1574, %2181 ], [ %1574, %2165 ], [ %1574, %2268 ], [ %1574, %2273 ], [ %1574, %2271 ]
  %2286 = phi i32 [ %2119, %2145 ], [ %2111, %2239 ], [ %2111, %2254 ], [ %2111, %2225 ], [ %2111, %2211 ], [ %2111, %2197 ], [ %2111, %2181 ], [ %2111, %2165 ], [ %2111, %2268 ], [ %2111, %2273 ], [ %2111, %2271 ]
  %2287 = phi i64 [ %2148, %2145 ], [ %2242, %2239 ], [ %2256, %2254 ], [ %2227, %2225 ], [ %2213, %2211 ], [ %2199, %2197 ], [ %2185, %2181 ], [ %2169, %2165 ], [ %2269, %2268 ], [ %2274, %2273 ], [ %2272, %2271 ]
  %2288 = phi i8 [ %2120, %2145 ], [ %1380, %2239 ], [ %1380, %2254 ], [ %1380, %2225 ], [ %1380, %2211 ], [ %1380, %2197 ], [ %1380, %2181 ], [ %1380, %2165 ], [ %1380, %2268 ], [ %1380, %2273 ], [ %1380, %2271 ]
  %2289 = phi i64 [ %2121, %2145 ], [ %1235, %2239 ], [ %1235, %2254 ], [ %1235, %2225 ], [ %1235, %2211 ], [ %1235, %2197 ], [ %1235, %2181 ], [ %1235, %2165 ], [ %1235, %2268 ], [ %1235, %2273 ], [ %1235, %2271 ]
  %2290 = phi ptr [ %2122, %2145 ], [ %1236, %2239 ], [ %1236, %2254 ], [ %1236, %2225 ], [ %1236, %2211 ], [ %1236, %2197 ], [ %1236, %2181 ], [ %1236, %2165 ], [ %1236, %2268 ], [ %1236, %2273 ], [ %1236, %2271 ]
  %2291 = phi i8 [ %2123, %2145 ], [ %1240, %2239 ], [ %1240, %2254 ], [ %1240, %2225 ], [ %1240, %2211 ], [ %1240, %2197 ], [ %1240, %2181 ], [ %1240, %2165 ], [ %1240, %2268 ], [ %1240, %2273 ], [ %1240, %2271 ]
  %2292 = phi i8 [ %2124, %2145 ], [ %1575, %2239 ], [ %1575, %2254 ], [ %1575, %2225 ], [ %1575, %2211 ], [ %1575, %2197 ], [ %1575, %2181 ], [ %1575, %2165 ], [ %1575, %2268 ], [ %1575, %2273 ], [ %1575, %2271 ]
  %2293 = phi i8 [ %2125, %2145 ], [ %1241, %2239 ], [ %1241, %2254 ], [ %1241, %2225 ], [ %1241, %2211 ], [ %1241, %2197 ], [ %1241, %2181 ], [ %1241, %2165 ], [ %1241, %2268 ], [ %1241, %2273 ], [ %1241, %2271 ]
  %2294 = phi i8 [ %2126, %2145 ], [ %1242, %2239 ], [ %1242, %2254 ], [ %1242, %2225 ], [ %1242, %2211 ], [ %1242, %2197 ], [ %1242, %2181 ], [ %1242, %2165 ], [ %1242, %2268 ], [ %1242, %2273 ], [ %1242, %2271 ]
  %2295 = phi i8 [ %2127, %2145 ], [ %1243, %2239 ], [ %1243, %2254 ], [ %1243, %2225 ], [ %1243, %2211 ], [ %1243, %2197 ], [ %1243, %2181 ], [ %1243, %2165 ], [ %1243, %2268 ], [ %1243, %2273 ], [ %1243, %2271 ]
  %2296 = phi i8 [ %2128, %2145 ], [ %351, %2239 ], [ %351, %2254 ], [ %351, %2225 ], [ %351, %2211 ], [ %351, %2197 ], [ %351, %2181 ], [ %351, %2165 ], [ %351, %2268 ], [ %351, %2273 ], [ %351, %2271 ]
  %2297 = phi i8 [ %2129, %2145 ], [ %1244, %2239 ], [ %1244, %2254 ], [ %1244, %2225 ], [ %1244, %2211 ], [ %1244, %2197 ], [ %1244, %2181 ], [ %1244, %2165 ], [ %1244, %2268 ], [ %1244, %2273 ], [ %1244, %2271 ]
  %2298 = phi i8 [ %2130, %2145 ], [ %348, %2239 ], [ %348, %2254 ], [ %348, %2225 ], [ %348, %2211 ], [ %348, %2197 ], [ %348, %2181 ], [ %348, %2165 ], [ %348, %2268 ], [ %348, %2273 ], [ %348, %2271 ]
  %2299 = phi ptr [ %2131, %2145 ], [ %1704, %2239 ], [ %1704, %2254 ], [ %1704, %2225 ], [ %1704, %2211 ], [ %1704, %2197 ], [ %1704, %2181 ], [ %1704, %2165 ], [ %1704, %2268 ], [ %1704, %2273 ], [ %1704, %2271 ]
  %2300 = phi i32 [ %2132, %2145 ], [ %1702, %2239 ], [ %1702, %2254 ], [ %1702, %2225 ], [ %1702, %2211 ], [ %1702, %2197 ], [ %1702, %2181 ], [ %1702, %2165 ], [ %1702, %2268 ], [ %1702, %2273 ], [ %1702, %2271 ]
  %2301 = icmp eq i64 %2287, 0
  %2302 = and i8 %2295, 1
  %2303 = icmp eq i8 %2302, 0
  %2304 = select i1 %2301, i1 true, i1 %2303
  switch i32 %2286, label %2307 [
    i32 16, label %2305
    i32 8, label %2365
    i32 2, label %2379
  ]

2305:                                             ; preds = %2281
  %2306 = load i8, ptr %18, align 1, !tbaa !17
  br label %2330

2307:                                             ; preds = %2275, %2281
  %2308 = phi i1 [ %2280, %2275 ], [ %2303, %2281 ]
  %2309 = phi i32 [ %1702, %2275 ], [ %2300, %2281 ]
  %2310 = phi ptr [ %1704, %2275 ], [ %2299, %2281 ]
  %2311 = phi i8 [ %348, %2275 ], [ %2298, %2281 ]
  %2312 = phi i8 [ %1244, %2275 ], [ %2297, %2281 ]
  %2313 = phi i8 [ %351, %2275 ], [ %2296, %2281 ]
  %2314 = phi i8 [ %1243, %2275 ], [ %2295, %2281 ]
  %2315 = phi i8 [ %1242, %2275 ], [ %2294, %2281 ]
  %2316 = phi i8 [ %1241, %2275 ], [ %2293, %2281 ]
  %2317 = phi i8 [ %1575, %2275 ], [ %2292, %2281 ]
  %2318 = phi i8 [ %1240, %2275 ], [ %2291, %2281 ]
  %2319 = phi ptr [ %1236, %2275 ], [ %2290, %2281 ]
  %2320 = phi i64 [ %1235, %2275 ], [ %2289, %2281 ]
  %2321 = phi i8 [ %1380, %2275 ], [ %2288, %2281 ]
  %2322 = phi i64 [ %2278, %2275 ], [ %2287, %2281 ]
  %2323 = phi i32 [ 10, %2275 ], [ %2286, %2281 ]
  %2324 = phi ptr [ %2277, %2275 ], [ %2285, %2281 ]
  %2325 = phi i64 [ %1379, %2275 ], [ %2284, %2281 ]
  %2326 = phi i64 [ %2276, %2275 ], [ 0, %2281 ]
  %2327 = phi i8 [ %1234, %2275 ], [ %2283, %2281 ]
  %2328 = phi ptr [ %1705, %2275 ], [ %2282, %2281 ]
  %2329 = zext i32 %2323 to i64
  br label %2391

2330:                                             ; preds = %2305, %1934
  %2331 = phi i8 [ %1701, %1934 ], [ %2306, %2305 ]
  %2332 = phi i1 [ %1940, %1934 ], [ %2304, %2305 ]
  %2333 = phi i1 [ %1939, %1934 ], [ %2303, %2305 ]
  %2334 = phi i32 [ %1702, %1934 ], [ %2300, %2305 ]
  %2335 = phi ptr [ %1704, %1934 ], [ %2299, %2305 ]
  %2336 = phi i8 [ %348, %1934 ], [ %2298, %2305 ]
  %2337 = phi i8 [ %1244, %1934 ], [ %2297, %2305 ]
  %2338 = phi i8 [ %351, %1934 ], [ %2296, %2305 ]
  %2339 = phi i8 [ %1243, %1934 ], [ %2295, %2305 ]
  %2340 = phi i8 [ %1242, %1934 ], [ %2294, %2305 ]
  %2341 = phi i8 [ %1241, %1934 ], [ %2293, %2305 ]
  %2342 = phi i8 [ %1575, %1934 ], [ %2292, %2305 ]
  %2343 = phi i8 [ %1240, %1934 ], [ %2291, %2305 ]
  %2344 = phi ptr [ %1236, %1934 ], [ %2290, %2305 ]
  %2345 = phi i64 [ %1235, %1934 ], [ %2289, %2305 ]
  %2346 = phi i8 [ %1380, %1934 ], [ %2288, %2305 ]
  %2347 = phi i64 [ %1936, %1934 ], [ %2287, %2305 ]
  %2348 = phi ptr [ %1574, %1934 ], [ %2285, %2305 ]
  %2349 = phi i64 [ %1379, %1934 ], [ %2284, %2305 ]
  %2350 = phi i8 [ %1234, %1934 ], [ %2283, %2305 ]
  %2351 = phi ptr [ %1705, %1934 ], [ %2282, %2305 ]
  %2352 = icmp eq i8 %2331, 88
  %2353 = select i1 %2352, ptr getelementptr inbounds ([0 x i8], ptr @PL_hexdigit, i64 0, i64 16), ptr @PL_hexdigit
  br label %2354

2354:                                             ; preds = %2354, %2330
  %2355 = phi i64 [ %2347, %2330 ], [ %2361, %2354 ]
  %2356 = phi ptr [ %330, %2330 ], [ %2360, %2354 ]
  %2357 = and i64 %2355, 15
  %2358 = getelementptr inbounds i8, ptr %2353, i64 %2357
  %2359 = load i8, ptr %2358, align 1, !tbaa !17
  %2360 = getelementptr inbounds i8, ptr %2356, i64 -1
  store i8 %2359, ptr %2360, align 1, !tbaa !17
  %2361 = lshr i64 %2355, 4
  %2362 = icmp ult i64 %2355, 16
  br i1 %2362, label %2363, label %2354, !llvm.loop !194

2363:                                             ; preds = %2354
  br i1 %2332, label %2400, label %2364

2364:                                             ; preds = %2363
  store i8 48, ptr %14, align 4, !tbaa !17
  store i8 %2331, ptr %343, align 1, !tbaa !17
  br label %2400

2365:                                             ; preds = %2281, %2365
  %2366 = phi i64 [ %2372, %2365 ], [ %2287, %2281 ]
  %2367 = phi ptr [ %2371, %2365 ], [ %330, %2281 ]
  %2368 = trunc i64 %2366 to i8
  %2369 = and i8 %2368, 7
  %2370 = or i8 %2369, 48
  %2371 = getelementptr inbounds i8, ptr %2367, i64 -1
  store i8 %2370, ptr %2371, align 1, !tbaa !17
  %2372 = lshr i64 %2366, 3
  %2373 = icmp ult i64 %2366, 8
  br i1 %2373, label %2374, label %2365, !llvm.loop !195

2374:                                             ; preds = %2365
  %2375 = icmp eq i8 %2370, 48
  %2376 = or i1 %2303, %2375
  br i1 %2376, label %2400, label %2377

2377:                                             ; preds = %2374
  %2378 = getelementptr inbounds i8, ptr %2367, i64 -2
  store i8 48, ptr %2378, align 1, !tbaa !17
  br label %2400

2379:                                             ; preds = %2281, %2379
  %2380 = phi i64 [ %2386, %2379 ], [ %2287, %2281 ]
  %2381 = phi ptr [ %2385, %2379 ], [ %330, %2281 ]
  %2382 = trunc i64 %2380 to i8
  %2383 = and i8 %2382, 1
  %2384 = or i8 %2383, 48
  %2385 = getelementptr inbounds i8, ptr %2381, i64 -1
  store i8 %2384, ptr %2385, align 1, !tbaa !17
  %2386 = lshr i64 %2380, 1
  %2387 = icmp ult i64 %2380, 2
  br i1 %2387, label %2388, label %2379, !llvm.loop !196

2388:                                             ; preds = %2379
  br i1 %2304, label %2400, label %2389

2389:                                             ; preds = %2388
  store i8 48, ptr %14, align 4, !tbaa !17
  %2390 = load i8, ptr %18, align 1, !tbaa !17
  store i8 %2390, ptr %342, align 1, !tbaa !17
  br label %2400

2391:                                             ; preds = %2307, %2391
  %2392 = phi i64 [ %2398, %2391 ], [ %2322, %2307 ]
  %2393 = phi ptr [ %2397, %2391 ], [ %330, %2307 ]
  %2394 = urem i64 %2392, %2329
  %2395 = trunc i64 %2394 to i8
  %2396 = add i8 %2395, 48
  %2397 = getelementptr inbounds i8, ptr %2393, i64 -1
  store i8 %2396, ptr %2397, align 1, !tbaa !17
  %2398 = udiv i64 %2392, %2329
  %2399 = icmp ult i64 %2392, %2329
  br i1 %2399, label %2400, label %2391, !llvm.loop !197

2400:                                             ; preds = %2391, %2388, %2389, %2374, %2377, %2363, %2364
  %2401 = phi i8 [ %2384, %2389 ], [ %2384, %2388 ], [ 48, %2377 ], [ %2370, %2374 ], [ %2359, %2364 ], [ %2359, %2363 ], [ %2396, %2391 ]
  %2402 = phi i1 [ false, %2389 ], [ %2303, %2388 ], [ false, %2377 ], [ %2303, %2374 ], [ %2333, %2364 ], [ %2333, %2363 ], [ %2308, %2391 ]
  %2403 = phi i32 [ %2300, %2389 ], [ %2300, %2388 ], [ %2300, %2377 ], [ %2300, %2374 ], [ %2334, %2364 ], [ %2334, %2363 ], [ %2309, %2391 ]
  %2404 = phi ptr [ %2299, %2389 ], [ %2299, %2388 ], [ %2299, %2377 ], [ %2299, %2374 ], [ %2335, %2364 ], [ %2335, %2363 ], [ %2310, %2391 ]
  %2405 = phi i8 [ %2298, %2389 ], [ %2298, %2388 ], [ %2298, %2377 ], [ %2298, %2374 ], [ %2336, %2364 ], [ %2336, %2363 ], [ %2311, %2391 ]
  %2406 = phi i8 [ %2297, %2389 ], [ %2297, %2388 ], [ %2297, %2377 ], [ %2297, %2374 ], [ %2337, %2364 ], [ %2337, %2363 ], [ %2312, %2391 ]
  %2407 = phi i8 [ %2296, %2389 ], [ %2296, %2388 ], [ %2296, %2377 ], [ %2296, %2374 ], [ %2338, %2364 ], [ %2338, %2363 ], [ %2313, %2391 ]
  %2408 = phi i8 [ %2295, %2389 ], [ %2295, %2388 ], [ %2295, %2377 ], [ %2295, %2374 ], [ %2339, %2364 ], [ %2339, %2363 ], [ %2314, %2391 ]
  %2409 = phi i8 [ %2294, %2389 ], [ %2294, %2388 ], [ %2294, %2377 ], [ %2294, %2374 ], [ %2340, %2364 ], [ %2340, %2363 ], [ %2315, %2391 ]
  %2410 = phi i8 [ %2293, %2389 ], [ %2293, %2388 ], [ %2293, %2377 ], [ %2293, %2374 ], [ %2341, %2364 ], [ %2341, %2363 ], [ %2316, %2391 ]
  %2411 = phi i8 [ %2292, %2389 ], [ %2292, %2388 ], [ %2292, %2377 ], [ %2292, %2374 ], [ %2342, %2364 ], [ %2342, %2363 ], [ %2317, %2391 ]
  %2412 = phi i8 [ %2291, %2389 ], [ %2291, %2388 ], [ %2291, %2377 ], [ %2291, %2374 ], [ %2343, %2364 ], [ %2343, %2363 ], [ %2318, %2391 ]
  %2413 = phi ptr [ %2290, %2389 ], [ %2290, %2388 ], [ %2290, %2377 ], [ %2290, %2374 ], [ %2344, %2364 ], [ %2344, %2363 ], [ %2319, %2391 ]
  %2414 = phi i64 [ %2289, %2389 ], [ %2289, %2388 ], [ %2289, %2377 ], [ %2289, %2374 ], [ %2345, %2364 ], [ %2345, %2363 ], [ %2320, %2391 ]
  %2415 = phi i8 [ %2288, %2389 ], [ %2288, %2388 ], [ %2288, %2377 ], [ %2288, %2374 ], [ %2346, %2364 ], [ %2346, %2363 ], [ %2321, %2391 ]
  %2416 = phi i32 [ 2, %2389 ], [ 2, %2388 ], [ 8, %2377 ], [ 8, %2374 ], [ 16, %2364 ], [ 16, %2363 ], [ %2323, %2391 ]
  %2417 = phi ptr [ %2285, %2389 ], [ %2285, %2388 ], [ %2285, %2377 ], [ %2285, %2374 ], [ %2348, %2364 ], [ %2348, %2363 ], [ %2324, %2391 ]
  %2418 = phi i64 [ %2284, %2389 ], [ %2284, %2388 ], [ %2284, %2377 ], [ %2284, %2374 ], [ %2349, %2364 ], [ %2349, %2363 ], [ %2325, %2391 ]
  %2419 = phi i8 [ %2283, %2389 ], [ %2283, %2388 ], [ %2283, %2377 ], [ %2283, %2374 ], [ %2350, %2364 ], [ %2350, %2363 ], [ %2327, %2391 ]
  %2420 = phi ptr [ %2282, %2389 ], [ %2282, %2388 ], [ %2282, %2377 ], [ %2282, %2374 ], [ %2351, %2364 ], [ %2351, %2363 ], [ %2328, %2391 ]
  %2421 = phi i64 [ 2, %2389 ], [ 0, %2388 ], [ 0, %2377 ], [ 0, %2374 ], [ 2, %2364 ], [ 0, %2363 ], [ %2326, %2391 ]
  %2422 = phi ptr [ %2385, %2389 ], [ %2385, %2388 ], [ %2378, %2377 ], [ %2371, %2374 ], [ %2360, %2364 ], [ %2360, %2363 ], [ %2397, %2391 ]
  %2423 = ptrtoint ptr %2422 to i64
  %2424 = sub i64 %340, %2423
  store i64 %2424, ptr %16, align 8, !tbaa !60
  %2425 = and i8 %2415, 1
  %2426 = icmp eq i8 %2425, 0
  br i1 %2426, label %3119, label %2427

2427:                                             ; preds = %2400
  %2428 = icmp ugt i64 %2418, %2424
  br i1 %2428, label %2429, label %2431

2429:                                             ; preds = %2427
  %2430 = sub i64 %2418, %2424
  br label %2441

2431:                                             ; preds = %2427
  %2432 = icmp eq i64 %2418, 0
  %2433 = icmp eq i64 %2424, 1
  %2434 = select i1 %2432, i1 %2433, i1 false
  br i1 %2434, label %2435, label %2441

2435:                                             ; preds = %2431
  %2436 = icmp eq i8 %2401, 48
  %2437 = icmp ne i32 %2416, 8
  %2438 = select i1 %2437, i1 true, i1 %2402
  %2439 = select i1 %2436, i1 %2438, i1 false
  br i1 %2439, label %2440, label %2441

2440:                                             ; preds = %2435
  store i64 0, ptr %16, align 8, !tbaa !60
  br label %2441

2441:                                             ; preds = %2431, %2435, %2440, %2429
  %2442 = phi i64 [ %2430, %2429 ], [ 0, %2440 ], [ 0, %2435 ], [ 0, %2431 ]
  %2443 = icmp eq i8 %2412, 48
  %2444 = select i1 %2443, i8 32, i8 %2412
  br label %3119

2445:                                             ; preds = %1914, %1942, %2110, %1700
  %2446 = phi i32 [ 0, %1700 ], [ %2111, %2110 ], [ 0, %1942 ], [ 0, %1914 ]
  %2447 = phi i8 [ %1596, %1700 ], [ %2112, %2110 ], [ %1943, %1942 ], [ %1596, %1914 ]
  store i8 102, ptr %18, align 1, !tbaa !17
  br label %2448

2448:                                             ; preds = %1700, %1700, %1700, %1700, %1700, %1700, %1700, %2445
  %2449 = phi i8 [ %1701, %1700 ], [ %1701, %1700 ], [ %1701, %1700 ], [ %1701, %1700 ], [ %1701, %1700 ], [ %1701, %1700 ], [ %1701, %1700 ], [ 102, %2445 ]
  %2450 = phi i32 [ 0, %1700 ], [ 0, %1700 ], [ 0, %1700 ], [ 0, %1700 ], [ 0, %1700 ], [ 0, %1700 ], [ 0, %1700 ], [ %2446, %2445 ]
  %2451 = phi i8 [ %1596, %1700 ], [ %1596, %1700 ], [ %1596, %1700 ], [ %1596, %1700 ], [ %1596, %1700 ], [ %1596, %1700 ], [ %1596, %1700 ], [ %2447, %2445 ]
  br i1 %1383, label %2987, label %2452

2452:                                             ; preds = %2448
  %2453 = sext i8 %2451 to i32
  switch i32 %2453, label %2454 [
    i32 106, label %2987
    i32 116, label %2987
    i32 122, label %2987
    i32 99, label %2987
    i32 104, label %2987
  ]

2454:                                             ; preds = %2452
  br i1 %325, label %2455, label %2479

2455:                                             ; preds = %2454
  %2456 = icmp eq i8 %2451, 113
  br i1 %2456, label %2457, label %2464

2457:                                             ; preds = %2455
  %2458 = load ptr, ptr %328, align 8
  %2459 = getelementptr inbounds i8, ptr %2458, i64 15
  %2460 = call ptr @llvm.ptrmask.p0.i64(ptr nonnull %2459, i64 -16)
  %2461 = getelementptr i8, ptr %2460, i64 16
  store ptr %2461, ptr %328, align 8
  %2462 = load x86_fp80, ptr %2460, align 16
  %2463 = fptrunc x86_fp80 %2462 to double
  br label %2502

2464:                                             ; preds = %2455
  %2465 = load i32, ptr %331, align 4
  %2466 = icmp ult i32 %2465, 161
  br i1 %2466, label %2467, label %2472

2467:                                             ; preds = %2464
  %2468 = load ptr, ptr %329, align 8
  %2469 = zext i32 %2465 to i64
  %2470 = getelementptr i8, ptr %2468, i64 %2469
  %2471 = add nuw nsw i32 %2465, 16
  store i32 %2471, ptr %331, align 4
  br label %2475

2472:                                             ; preds = %2464
  %2473 = load ptr, ptr %328, align 8
  %2474 = getelementptr i8, ptr %2473, i64 8
  store ptr %2474, ptr %328, align 8
  br label %2475

2475:                                             ; preds = %2472, %2467
  %2476 = phi ptr [ %2470, %2467 ], [ %2473, %2472 ]
  %2477 = load double, ptr %2476, align 8
  %2478 = fpext double %2477 to x86_fp80
  br label %2502

2479:                                             ; preds = %2454
  br i1 %1703, label %2487, label %2480

2480:                                             ; preds = %2479
  %2481 = getelementptr inbounds %struct.sv, ptr %1704, i64 0, i32 2
  %2482 = load i32, ptr %2481, align 4, !tbaa !16
  %2483 = and i32 %2482, 2097152
  %2484 = icmp eq i32 %2483, 0
  br i1 %2484, label %2487, label %2485

2485:                                             ; preds = %2480
  %2486 = call i32 @Perl_mg_get(ptr noundef nonnull %1704) #17
  br label %2487

2487:                                             ; preds = %2485, %2480, %2479
  %2488 = getelementptr inbounds %struct.sv, ptr %1704, i64 0, i32 2
  %2489 = load i32, ptr %2488, align 4, !tbaa !16
  %2490 = and i32 %2489, 512
  %2491 = icmp eq i32 %2490, 0
  br i1 %2491, label %2496, label %2492

2492:                                             ; preds = %2487
  %2493 = load ptr, ptr %1704, align 8, !tbaa !26
  %2494 = getelementptr inbounds %struct.xpvnv, ptr %2493, i64 0, i32 5
  %2495 = load double, ptr %2494, align 8, !tbaa !17
  br label %2498

2496:                                             ; preds = %2487
  %2497 = call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %1704, i32 noundef 0)
  br label %2498

2498:                                             ; preds = %2496, %2492
  %2499 = phi fast double [ %2495, %2492 ], [ %2497, %2496 ]
  %2500 = fpext double %2499 to x86_fp80
  %2501 = load i8, ptr %18, align 1, !tbaa !17
  br label %2502

2502:                                             ; preds = %2457, %2475, %2498
  %2503 = phi i8 [ %2449, %2457 ], [ %2449, %2475 ], [ %2501, %2498 ]
  %2504 = phi x86_fp80 [ %2462, %2457 ], [ %2478, %2475 ], [ %2500, %2498 ]
  %2505 = phi double [ %2463, %2457 ], [ %2477, %2475 ], [ %2499, %2498 ]
  %2506 = and i8 %2503, -33
  %2507 = icmp eq i8 %2506, 69
  br i1 %2507, label %2530, label %2508

2508:                                             ; preds = %2502
  store i32 -2147483648, ptr %19, align 4, !tbaa !25
  %2509 = fptrunc x86_fp80 %2504 to double
  %2510 = call fast nofpclass(nan inf) double @frexp(double noundef nofpclass(nan inf) %2509, ptr noundef nonnull %19) #17
  %2511 = load i32, ptr %19, align 4, !tbaa !25
  %2512 = icmp eq i32 %2511, -2147483648
  br i1 %2512, label %2515, label %2513

2513:                                             ; preds = %2508
  %2514 = icmp eq i8 %2506, 65
  br i1 %2514, label %2520, label %2523

2515:                                             ; preds = %2508
  %2516 = call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.74, x86_fp80 noundef nofpclass(nan inf) %2504) #17
  %2517 = load i8, ptr %18, align 1, !tbaa !17
  %2518 = and i8 %2517, -33
  %2519 = icmp eq i8 %2518, 65
  br i1 %2519, label %2520, label %2530

2520:                                             ; preds = %2515, %2513
  %2521 = fcmp fast olt x86_fp80 %2504, 0xK00000000000000000000
  %2522 = select i1 %2521, i64 1, i64 30
  br label %2530

2523:                                             ; preds = %2513
  %2524 = icmp sgt i32 %2511, 0
  br i1 %2524, label %2525, label %2530

2525:                                             ; preds = %2523
  %2526 = mul nsw i32 %2511, 146
  %2527 = sdiv i32 %2526, 485
  %2528 = add nsw i32 %2527, 1
  %2529 = sext i32 %2528 to i64
  br label %2530

2530:                                             ; preds = %2515, %2520, %2525, %2523, %2502
  %2531 = phi i64 [ 0, %2502 ], [ %2522, %2520 ], [ %2529, %2525 ], [ 0, %2523 ], [ 0, %2515 ]
  %2532 = phi i8 [ %351, %2502 ], [ 1, %2520 ], [ 0, %2525 ], [ 0, %2523 ], [ 0, %2515 ]
  %2533 = icmp ne i8 %1380, 0
  %2534 = select i1 %2533, i64 %1379, i64 6
  %2535 = add i64 %2531, %2534
  %2536 = call i64 @llvm.umax.i64(i64 %2535, i64 %1235)
  %2537 = add i64 %2536, 20
  %2538 = load i64, ptr @PL_efloatsize, align 8, !tbaa !60
  %2539 = icmp ult i64 %2538, %2537
  br i1 %2539, label %2540, label %2544

2540:                                             ; preds = %2530
  %2541 = load ptr, ptr @PL_efloatbuf, align 8, !tbaa !9
  call void @Perl_safesysfree(ptr noundef %2541) #17
  %2542 = add i64 %2536, 40
  store i64 %2542, ptr @PL_efloatsize, align 8, !tbaa !60
  %2543 = call ptr @Perl_safesysmalloc(i64 noundef %2542) #17
  store ptr %2543, ptr @PL_efloatbuf, align 8, !tbaa !9
  store i8 0, ptr %2543, align 1, !tbaa !17
  br label %2544

2544:                                             ; preds = %2540, %2530
  %2545 = icmp eq i64 %1235, 0
  br i1 %2545, label %2546, label %2582

2546:                                             ; preds = %2544
  %2547 = and i8 %1242, 1
  %2548 = icmp ne i8 %2547, 0
  %2549 = icmp ne i8 %1239, 0
  %2550 = select i1 %2548, i1 true, i1 %2549
  br i1 %2550, label %2582, label %2551

2551:                                             ; preds = %2546
  %2552 = and i8 %1243, 1
  %2553 = icmp eq i8 %2552, 0
  %2554 = icmp ne i8 %1240, 48
  %2555 = select i1 %2553, i1 %2554, i1 false
  %2556 = icmp ne i8 %2451, 113
  %2557 = and i1 %2533, %2556
  %2558 = select i1 %2555, i1 %2557, i1 false
  br i1 %2558, label %2559, label %2582

2559:                                             ; preds = %2551
  %2560 = fptrunc x86_fp80 %2504 to double
  %2561 = call zeroext i1 @Perl_isinfnan(double noundef nofpclass(nan inf) %2560) #17
  br i1 %2561, label %2582, label %2562

2562:                                             ; preds = %2559
  %2563 = load i8, ptr %18, align 1, !tbaa !17
  %2564 = icmp eq i8 %2563, 103
  %2565 = icmp ne i64 %1379, 0
  %2566 = select i1 %2564, i1 %2565, i1 false
  br i1 %2566, label %2567, label %2576

2567:                                             ; preds = %2562
  %2568 = load ptr, ptr @PL_efloatbuf, align 8, !tbaa !9
  %2569 = trunc i64 %1379 to i32
  %2570 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %2568, ptr noundef nonnull dereferenceable(1) @.str.8, i32 noundef %2569, double noundef nofpclass(nan inf) %2560) #17
  %2571 = load ptr, ptr @PL_efloatbuf, align 8, !tbaa !9
  %2572 = load i8, ptr %2571, align 1, !tbaa !17
  %2573 = icmp eq i8 %2572, 0
  br i1 %2573, label %2582, label %2574

2574:                                             ; preds = %2567
  %2575 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %2571) #18
  store i64 %2575, ptr %16, align 8, !tbaa !60
  br label %2841

2576:                                             ; preds = %2562
  %2577 = icmp ne i8 %2563, 102
  %2578 = select i1 %2577, i1 true, i1 %2565
  br i1 %2578, label %2582, label %2579

2579:                                             ; preds = %2576
  %2580 = call fastcc ptr @S_F0convert(double noundef nofpclass(nan inf) %2505, ptr noundef nonnull %330, ptr noundef nonnull %16)
  %2581 = icmp eq ptr %2580, null
  br i1 %2581, label %2582, label %3119

2582:                                             ; preds = %2567, %2579, %2576, %2559, %2551, %2546, %2544
  %2583 = and i8 %2532, 1
  %2584 = icmp eq i8 %2583, 0
  br i1 %2584, label %2769, label %2585

2585:                                             ; preds = %2582
  %2586 = load ptr, ptr @PL_efloatbuf, align 8, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %23) #17
  %2587 = load i8, ptr %18, align 1, !tbaa !17
  %2588 = icmp eq i8 %2587, 97
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %25) #17
  store i32 0, ptr %25, align 4, !tbaa !25
  %2589 = call fastcc ptr @S_hextract(double noundef nofpclass(nan inf) %2505, ptr noundef nonnull %25, ptr noundef nonnull %23, ptr noundef null)
  %2590 = ptrtoint ptr %2589 to i64
  %2591 = call fastcc ptr @S_hextract(double noundef nofpclass(nan inf) %2505, ptr noundef nonnull %25, ptr noundef nonnull %23, ptr noundef nonnull %2589)
  %2592 = fcmp fast olt x86_fp80 %2504, 0xK00000000000000000000
  %2593 = bitcast double %2505 to i64
  %2594 = icmp slt i64 %2593, 0
  %2595 = select i1 %2592, i1 true, i1 %2594
  br i1 %2595, label %2598, label %2596

2596:                                             ; preds = %2585
  %2597 = icmp eq i8 %1239, 0
  br i1 %2597, label %2601, label %2598

2598:                                             ; preds = %2596, %2585
  %2599 = phi i8 [ 45, %2585 ], [ %1239, %2596 ]
  %2600 = getelementptr inbounds i8, ptr %2586, i64 1
  store i8 %2599, ptr %2586, align 1, !tbaa !17
  br label %2601

2601:                                             ; preds = %2598, %2596
  %2602 = phi ptr [ %2586, %2596 ], [ %2600, %2598 ]
  %2603 = getelementptr inbounds i8, ptr %2602, i64 1
  store i8 48, ptr %2602, align 1, !tbaa !17
  %2604 = select i1 %2588, i8 120, i8 88
  %2605 = select i1 %2588, ptr @PL_hexdigit, ptr getelementptr inbounds ([0 x i8], ptr @PL_hexdigit, i64 0, i64 16)
  %2606 = getelementptr inbounds i8, ptr %2602, i64 2
  store i8 %2604, ptr %2603, align 1, !tbaa !17
  %2607 = icmp ult ptr %23, %2589
  br i1 %2607, label %2608, label %2689

2608:                                             ; preds = %2601
  %2609 = getelementptr i8, ptr %338, i64 %2590
  br label %2610

2610:                                             ; preds = %2608, %2614
  %2611 = phi ptr [ %2615, %2614 ], [ %23, %2608 ]
  %2612 = load i8, ptr %2611, align 1, !tbaa !17
  %2613 = icmp eq i8 %2612, 0
  br i1 %2613, label %2614, label %2617

2614:                                             ; preds = %2610
  %2615 = getelementptr inbounds i8, ptr %2611, i64 1
  %2616 = icmp eq ptr %2615, %2609
  br i1 %2616, label %2689, label %2610, !llvm.loop !198

2617:                                             ; preds = %2610, %2621
  %2618 = phi ptr [ %2619, %2621 ], [ %2589, %2610 ]
  %2619 = getelementptr inbounds i8, ptr %2618, i64 -1
  %2620 = icmp ult ptr %2619, %23
  br i1 %2620, label %2624, label %2621

2621:                                             ; preds = %2617
  %2622 = load i8, ptr %2619, align 1, !tbaa !17
  %2623 = icmp eq i8 %2622, 0
  br i1 %2623, label %2617, label %2624, !llvm.loop !199

2624:                                             ; preds = %2621, %2617
  %2625 = phi ptr [ null, %2617 ], [ %2619, %2621 ]
  %2626 = fcmp fast une x86_fp80 %2504, 0xK00000000000000000000
  br i1 %2626, label %2627, label %2630

2627:                                             ; preds = %2624
  %2628 = load i32, ptr %25, align 4, !tbaa !25
  %2629 = add nsw i32 %2628, -1
  store i32 %2629, ptr %25, align 4, !tbaa !25
  br label %2630

2630:                                             ; preds = %2627, %2624
  %2631 = icmp eq i64 %1379, 0
  br i1 %2631, label %2680, label %2632

2632:                                             ; preds = %2630
  %2633 = add i64 %1379, 1
  %2634 = sub i64 %2590, %24
  %2635 = icmp slt i64 %2633, %2634
  br i1 %2635, label %2636, label %2675

2636:                                             ; preds = %2632
  %2637 = getelementptr inbounds i8, ptr %23, i64 %1379
  %2638 = getelementptr inbounds i8, ptr %2637, i64 1
  %2639 = load i8, ptr %2638, align 1, !tbaa !17
  %2640 = icmp ult i8 %2639, 9
  %2641 = icmp eq i8 %2639, 8
  %2642 = getelementptr inbounds i8, ptr %2637, i64 2
  %2643 = icmp ult ptr %2642, %2589
  %2644 = select i1 %2641, i1 %2643, i1 false
  br i1 %2644, label %2648, label %2652

2645:                                             ; preds = %2648
  %2646 = getelementptr inbounds i8, ptr %2649, i64 1
  %2647 = icmp ult ptr %2646, %2589
  br i1 %2647, label %2648, label %2652, !llvm.loop !200

2648:                                             ; preds = %2636, %2645
  %2649 = phi ptr [ %2646, %2645 ], [ %2642, %2636 ]
  %2650 = load i8, ptr %2649, align 1, !tbaa !17
  %2651 = icmp eq i8 %2650, 0
  br i1 %2651, label %2645, label %2655

2652:                                             ; preds = %2645, %2636
  %2653 = icmp slt i64 %1379, 0
  %2654 = or i1 %2653, %2640
  br i1 %2654, label %2680, label %2657

2655:                                             ; preds = %2648
  %2656 = icmp slt i64 %1379, 0
  br i1 %2656, label %2680, label %2657

2657:                                             ; preds = %2652, %2655
  %2658 = select i1 %2588, ptr getelementptr inbounds ([0 x i8], ptr @PL_hexdigit, i64 0, i64 1), ptr getelementptr inbounds ([0 x i8], ptr @PL_hexdigit, i64 0, i64 17)
  br label %2659

2659:                                             ; preds = %2657, %2671
  %2660 = phi ptr [ %2637, %2657 ], [ %2673, %2671 ]
  %2661 = phi ptr [ %2606, %2657 ], [ %2672, %2671 ]
  %2662 = load i8, ptr %2660, align 1, !tbaa !17
  %2663 = icmp ult i8 %2662, 15
  br i1 %2663, label %2664, label %2666

2664:                                             ; preds = %2659
  %2665 = add nuw nsw i8 %2662, 1
  store i8 %2665, ptr %2660, align 1, !tbaa !17
  br label %2680

2666:                                             ; preds = %2659
  store i8 0, ptr %2660, align 1, !tbaa !17
  %2667 = icmp eq ptr %2660, %23
  br i1 %2667, label %2668, label %2671

2668:                                             ; preds = %2666
  %2669 = load i8, ptr %2658, align 1, !tbaa !17
  %2670 = getelementptr inbounds i8, ptr %2661, i64 1
  store i8 %2669, ptr %2661, align 1, !tbaa !17
  br label %2671

2671:                                             ; preds = %2666, %2668
  %2672 = phi ptr [ %2670, %2668 ], [ %2661, %2666 ]
  %2673 = getelementptr inbounds i8, ptr %2660, i64 -1
  %2674 = icmp ult ptr %2673, %23
  br i1 %2674, label %2680, label %2659, !llvm.loop !201

2675:                                             ; preds = %2632
  %2676 = ptrtoint ptr %2625 to i64
  %2677 = add i64 %1379, %24
  %2678 = sub i64 %2677, %2676
  %2679 = trunc i64 %2678 to i32
  br label %2680

2680:                                             ; preds = %2671, %2655, %2652, %2664, %2675, %2630
  %2681 = phi ptr [ %2606, %2675 ], [ %2606, %2630 ], [ %2661, %2664 ], [ %2606, %2652 ], [ %2606, %2655 ], [ %2672, %2671 ]
  %2682 = phi ptr [ %2625, %2675 ], [ %2625, %2630 ], [ %2637, %2664 ], [ %2637, %2652 ], [ %2637, %2655 ], [ %2637, %2671 ]
  %2683 = phi i32 [ %2679, %2675 ], [ 0, %2630 ], [ 0, %2664 ], [ 0, %2652 ], [ 0, %2655 ], [ 0, %2671 ]
  %2684 = load i8, ptr %23, align 16, !tbaa !17
  %2685 = zext i8 %2684 to i64
  %2686 = getelementptr inbounds i8, ptr %2605, i64 %2685
  %2687 = load i8, ptr %2686, align 1, !tbaa !17
  store i8 %2687, ptr %2681, align 1, !tbaa !17
  %2688 = icmp ult ptr %2611, %2682
  br label %2692

2689:                                             ; preds = %2614, %2601
  %2690 = phi ptr [ %23, %2601 ], [ %2609, %2614 ]
  store i8 48, ptr %2606, align 1, !tbaa !17
  store i32 0, ptr %25, align 4, !tbaa !25
  %2691 = trunc i64 %1379 to i32
  br label %2692

2692:                                             ; preds = %2680, %2689
  %2693 = phi ptr [ %2606, %2689 ], [ %2681, %2680 ]
  %2694 = phi ptr [ %2690, %2689 ], [ %332, %2680 ]
  %2695 = phi ptr [ null, %2689 ], [ %2682, %2680 ]
  %2696 = phi i32 [ %2691, %2689 ], [ %2683, %2680 ]
  %2697 = phi i1 [ false, %2689 ], [ %2688, %2680 ]
  %2698 = getelementptr inbounds i8, ptr %2693, i64 1
  %2699 = icmp ne i64 %1379, 0
  %2700 = and i8 %1243, 1
  %2701 = icmp ne i8 %2700, 0
  %2702 = select i1 %2699, i1 true, i1 %2701
  %2703 = or i1 %2702, %2697
  br i1 %2703, label %2704, label %2706

2704:                                             ; preds = %2692
  %2705 = getelementptr inbounds i8, ptr %2693, i64 2
  store i8 46, ptr %2698, align 1, !tbaa !17
  br label %2706

2706:                                             ; preds = %2692, %2704
  %2707 = phi ptr [ %2705, %2704 ], [ %2698, %2692 ]
  %2708 = icmp eq ptr %2695, null
  %2709 = icmp ugt ptr %2694, %2695
  %2710 = select i1 %2708, i1 true, i1 %2709
  br i1 %2710, label %2721, label %2711

2711:                                             ; preds = %2706, %2711
  %2712 = phi ptr [ %2714, %2711 ], [ %2694, %2706 ]
  %2713 = phi ptr [ %2719, %2711 ], [ %2707, %2706 ]
  %2714 = getelementptr inbounds i8, ptr %2712, i64 1
  %2715 = load i8, ptr %2712, align 1, !tbaa !17
  %2716 = zext i8 %2715 to i64
  %2717 = getelementptr inbounds i8, ptr %2605, i64 %2716
  %2718 = load i8, ptr %2717, align 1, !tbaa !17
  %2719 = getelementptr inbounds i8, ptr %2713, i64 1
  store i8 %2718, ptr %2713, align 1, !tbaa !17
  %2720 = icmp ugt ptr %2714, %2695
  br i1 %2720, label %2721, label %2711, !llvm.loop !202

2721:                                             ; preds = %2711, %2706
  %2722 = phi ptr [ %2707, %2706 ], [ %2719, %2711 ]
  %2723 = icmp sgt i32 %2696, 0
  br i1 %2723, label %2724, label %2730

2724:                                             ; preds = %2721
  %2725 = zext i32 %2696 to i64
  call void @llvm.memset.p0.i64(ptr nonnull align 1 %2722, i8 48, i64 %2725, i1 false), !tbaa !17
  %2726 = add nsw i32 %2696, -1
  %2727 = zext i32 %2726 to i64
  %2728 = getelementptr i8, ptr %2722, i64 1
  %2729 = getelementptr i8, ptr %2728, i64 %2727
  br label %2730

2730:                                             ; preds = %2724, %2721
  %2731 = phi ptr [ %2722, %2721 ], [ %2729, %2724 ]
  %2732 = load ptr, ptr @PL_efloatbuf, align 8, !tbaa !9
  %2733 = ptrtoint ptr %2731 to i64
  %2734 = ptrtoint ptr %2732 to i64
  %2735 = sub i64 %2733, %2734
  store i64 %2735, ptr %16, align 8, !tbaa !60
  %2736 = load i64, ptr @PL_efloatsize, align 8, !tbaa !60
  %2737 = sub i64 %2736, %2735
  %2738 = select i1 %2588, i32 112, i32 80
  %2739 = load i32, ptr %25, align 4, !tbaa !25
  %2740 = call i32 (ptr, i64, ptr, ...) @Perl_my_snprintf(ptr noundef nonnull %2731, i64 noundef %2737, ptr noundef nonnull @.str.75, i32 noundef %2738, i32 noundef %2739) #17
  %2741 = sext i32 %2740 to i64
  %2742 = load i64, ptr %16, align 8, !tbaa !60
  %2743 = add i64 %2742, %2741
  store i64 %2743, ptr %16, align 8, !tbaa !60
  %2744 = icmp ult i64 %2743, %1235
  br i1 %2744, label %2745, label %2770

2745:                                             ; preds = %2730
  %2746 = and i8 %1242, 1
  %2747 = icmp eq i8 %2746, 0
  br i1 %2747, label %2752, label %2748

2748:                                             ; preds = %2745
  %2749 = load ptr, ptr @PL_efloatbuf, align 8, !tbaa !9
  %2750 = getelementptr inbounds i8, ptr %2749, i64 %2743
  %2751 = sub i64 %1235, %2743
  call void @llvm.memset.p0.i64(ptr align 1 %2750, i8 32, i64 %2751, i1 false)
  br label %2768

2752:                                             ; preds = %2745
  %2753 = icmp eq i8 %1240, 48
  br i1 %2753, label %2754, label %2760

2754:                                             ; preds = %2752
  %2755 = sub i64 %1235, %2743
  %2756 = load ptr, ptr @PL_efloatbuf, align 8, !tbaa !9
  %2757 = getelementptr inbounds i8, ptr %2756, i64 2
  %2758 = getelementptr inbounds i8, ptr %2757, i64 %2755
  %2759 = add i64 %2743, -2
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %2758, ptr nonnull align 1 %2757, i64 %2759, i1 false)
  call void @llvm.memset.p0.i64(ptr nonnull align 1 %2757, i8 48, i64 %2755, i1 false)
  br label %2768

2760:                                             ; preds = %2752
  %2761 = load ptr, ptr @PL_efloatbuf, align 8, !tbaa !9
  %2762 = getelementptr inbounds i8, ptr %2761, i64 %1235
  %2763 = sub i64 0, %2743
  %2764 = getelementptr inbounds i8, ptr %2762, i64 %2763
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %2764, ptr align 1 %2761, i64 %2743, i1 false)
  %2765 = load ptr, ptr @PL_efloatbuf, align 8, !tbaa !9
  %2766 = load i64, ptr %16, align 8, !tbaa !60
  %2767 = sub i64 %1235, %2766
  call void @llvm.memset.p0.i64(ptr align 1 %2765, i8 32, i64 %2767, i1 false)
  br label %2768

2768:                                             ; preds = %2748, %2760, %2754
  store i64 %1235, ptr %16, align 8, !tbaa !60
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %25) #17
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %23) #17
  br label %2841

2769:                                             ; preds = %2582
  store i64 0, ptr %16, align 8, !tbaa !60
  br label %2772

2770:                                             ; preds = %2730
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %25) #17
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %23) #17
  %2771 = icmp eq i64 %2743, 0
  br i1 %2771, label %2772, label %2841

2772:                                             ; preds = %2769, %2770
  store i8 0, ptr %333, align 2, !tbaa !17
  %2773 = load i8, ptr %18, align 1, !tbaa !17
  store i8 %2773, ptr %334, align 1, !tbaa !17
  %2774 = icmp eq i8 %2451, 113
  br i1 %2774, label %2775, label %2776

2775:                                             ; preds = %2772
  store i8 76, ptr %339, align 4, !tbaa !17
  br label %2776

2776:                                             ; preds = %2775, %2772
  %2777 = phi ptr [ %334, %2772 ], [ %339, %2775 ]
  br i1 %2533, label %2778, label %2791

2778:                                             ; preds = %2776
  %2779 = trunc i64 %1379 to i32
  br label %2780

2780:                                             ; preds = %2780, %2778
  %2781 = phi i32 [ %2779, %2778 ], [ %2787, %2780 ]
  %2782 = phi ptr [ %2777, %2778 ], [ %2786, %2780 ]
  %2783 = urem i32 %2781, 10
  %2784 = trunc i32 %2783 to i8
  %2785 = or i8 %2784, 48
  %2786 = getelementptr inbounds i8, ptr %2782, i64 -1
  store i8 %2785, ptr %2786, align 1, !tbaa !17
  %2787 = udiv i32 %2781, 10
  %2788 = icmp ult i32 %2781, 10
  br i1 %2788, label %2789, label %2780, !llvm.loop !203

2789:                                             ; preds = %2780
  %2790 = getelementptr inbounds i8, ptr %2782, i64 -2
  store i8 46, ptr %2790, align 1, !tbaa !17
  br label %2791

2791:                                             ; preds = %2789, %2776
  %2792 = phi i32 [ 0, %2789 ], [ %2450, %2776 ]
  %2793 = phi ptr [ %2790, %2789 ], [ %2777, %2776 ]
  br i1 %2545, label %2805, label %2794

2794:                                             ; preds = %2791
  %2795 = trunc i64 %1235 to i32
  br label %2796

2796:                                             ; preds = %2796, %2794
  %2797 = phi i32 [ %2795, %2794 ], [ %2803, %2796 ]
  %2798 = phi ptr [ %2793, %2794 ], [ %2802, %2796 ]
  %2799 = urem i32 %2797, 10
  %2800 = trunc i32 %2799 to i8
  %2801 = or i8 %2800, 48
  %2802 = getelementptr inbounds i8, ptr %2798, i64 -1
  store i8 %2801, ptr %2802, align 1, !tbaa !17
  %2803 = udiv i32 %2797, 10
  %2804 = icmp ult i32 %2797, 10
  br i1 %2804, label %2805, label %2796, !llvm.loop !204

2805:                                             ; preds = %2796, %2791
  %2806 = phi i32 [ %2792, %2791 ], [ 0, %2796 ]
  %2807 = phi ptr [ %2793, %2791 ], [ %2802, %2796 ]
  %2808 = icmp eq i8 %1240, 48
  br i1 %2808, label %2809, label %2811

2809:                                             ; preds = %2805
  %2810 = getelementptr inbounds i8, ptr %2807, i64 -1
  store i8 48, ptr %2810, align 1, !tbaa !17
  br label %2811

2811:                                             ; preds = %2809, %2805
  %2812 = phi ptr [ %2810, %2809 ], [ %2807, %2805 ]
  %2813 = and i8 %1242, 1
  %2814 = icmp eq i8 %2813, 0
  br i1 %2814, label %2817, label %2815

2815:                                             ; preds = %2811
  %2816 = getelementptr inbounds i8, ptr %2812, i64 -1
  store i8 45, ptr %2816, align 1, !tbaa !17
  br label %2817

2817:                                             ; preds = %2815, %2811
  %2818 = phi ptr [ %2816, %2815 ], [ %2812, %2811 ]
  %2819 = icmp eq i8 %1239, 0
  br i1 %2819, label %2822, label %2820

2820:                                             ; preds = %2817
  %2821 = getelementptr inbounds i8, ptr %2818, i64 -1
  store i8 %1239, ptr %2821, align 1, !tbaa !17
  br label %2822

2822:                                             ; preds = %2820, %2817
  %2823 = phi ptr [ %2821, %2820 ], [ %2818, %2817 ]
  %2824 = and i8 %1243, 1
  %2825 = icmp eq i8 %2824, 0
  br i1 %2825, label %2828, label %2826

2826:                                             ; preds = %2822
  %2827 = getelementptr inbounds i8, ptr %2823, i64 -1
  store i8 35, ptr %2827, align 1, !tbaa !17
  br label %2828

2828:                                             ; preds = %2826, %2822
  %2829 = phi ptr [ %2827, %2826 ], [ %2823, %2822 ]
  %2830 = getelementptr inbounds i8, ptr %2829, i64 -1
  store i8 37, ptr %2830, align 1, !tbaa !17
  %2831 = load ptr, ptr @PL_efloatbuf, align 8, !tbaa !9
  %2832 = load i64, ptr @PL_efloatsize, align 8, !tbaa !60
  br i1 %2774, label %2833, label %2835

2833:                                             ; preds = %2828
  %2834 = call i32 (ptr, i64, ptr, ...) @Perl_my_snprintf(ptr noundef %2831, i64 noundef %2832, ptr noundef nonnull %2830, x86_fp80 noundef nofpclass(nan inf) %2504) #17
  br label %2838

2835:                                             ; preds = %2828
  %2836 = fptrunc x86_fp80 %2504 to double
  %2837 = call i32 (ptr, i64, ptr, ...) @Perl_my_snprintf(ptr noundef %2831, i64 noundef %2832, ptr noundef nonnull %2830, double noundef nofpclass(nan inf) %2836) #17
  br label %2838

2838:                                             ; preds = %2835, %2833
  %2839 = phi i32 [ %2834, %2833 ], [ %2837, %2835 ]
  %2840 = sext i32 %2839 to i64
  store i64 %2840, ptr %16, align 8, !tbaa !60
  br label %2841

2841:                                             ; preds = %2768, %2770, %2838, %2574
  %2842 = phi i32 [ %2806, %2838 ], [ %2450, %2770 ], [ %2450, %2574 ], [ %2450, %2768 ]
  %2843 = load ptr, ptr @PL_efloatbuf, align 8, !tbaa !9
  br label %3119

2844:                                             ; preds = %1700
  br i1 %1383, label %2987, label %2845

2845:                                             ; preds = %2844
  %2846 = load ptr, ptr %0, align 8, !tbaa !26
  %2847 = getelementptr inbounds %struct.xpv, ptr %2846, i64 0, i32 2
  %2848 = load i64, ptr %2847, align 8, !tbaa !57
  %2849 = load i64, ptr %11, align 8, !tbaa !60
  %2850 = sub i64 %2848, %2849
  %2851 = trunc i64 %2850 to i32
  store i32 %2851, ptr %19, align 4, !tbaa !25
  br i1 %325, label %2852, label %2962

2852:                                             ; preds = %2845
  %2853 = sext i8 %1596 to i32
  switch i32 %2853, label %2884 [
    i32 99, label %2854
    i32 104, label %2869
    i32 108, label %2898
    i32 86, label %2914
    i32 122, label %2930
    i32 113, label %2946
  ]

2854:                                             ; preds = %2852
  %2855 = trunc i64 %2850 to i8
  %2856 = load i32, ptr %3, align 8
  %2857 = icmp ult i32 %2856, 41
  br i1 %2857, label %2858, label %2863

2858:                                             ; preds = %2854
  %2859 = load ptr, ptr %329, align 8
  %2860 = zext i32 %2856 to i64
  %2861 = getelementptr i8, ptr %2859, i64 %2860
  %2862 = add nuw nsw i32 %2856, 8
  store i32 %2862, ptr %3, align 8
  br label %2866

2863:                                             ; preds = %2854
  %2864 = load ptr, ptr %328, align 8
  %2865 = getelementptr i8, ptr %2864, i64 8
  store ptr %2865, ptr %328, align 8
  br label %2866

2866:                                             ; preds = %2863, %2858
  %2867 = phi ptr [ %2861, %2858 ], [ %2864, %2863 ]
  %2868 = load ptr, ptr %2867, align 8
  store i8 %2855, ptr %2868, align 1, !tbaa !17
  br label %3356

2869:                                             ; preds = %2852
  %2870 = trunc i64 %2850 to i16
  %2871 = load i32, ptr %3, align 8
  %2872 = icmp ult i32 %2871, 41
  br i1 %2872, label %2873, label %2878

2873:                                             ; preds = %2869
  %2874 = load ptr, ptr %329, align 8
  %2875 = zext i32 %2871 to i64
  %2876 = getelementptr i8, ptr %2874, i64 %2875
  %2877 = add nuw nsw i32 %2871, 8
  store i32 %2877, ptr %3, align 8
  br label %2881

2878:                                             ; preds = %2869
  %2879 = load ptr, ptr %328, align 8
  %2880 = getelementptr i8, ptr %2879, i64 8
  store ptr %2880, ptr %328, align 8
  br label %2881

2881:                                             ; preds = %2878, %2873
  %2882 = phi ptr [ %2876, %2873 ], [ %2879, %2878 ]
  %2883 = load ptr, ptr %2882, align 8
  store i16 %2870, ptr %2883, align 2, !tbaa !205
  br label %3356

2884:                                             ; preds = %2852
  %2885 = load i32, ptr %3, align 8
  %2886 = icmp ult i32 %2885, 41
  br i1 %2886, label %2887, label %2892

2887:                                             ; preds = %2884
  %2888 = load ptr, ptr %329, align 8
  %2889 = zext i32 %2885 to i64
  %2890 = getelementptr i8, ptr %2888, i64 %2889
  %2891 = add nuw nsw i32 %2885, 8
  store i32 %2891, ptr %3, align 8
  br label %2895

2892:                                             ; preds = %2884
  %2893 = load ptr, ptr %328, align 8
  %2894 = getelementptr i8, ptr %2893, i64 8
  store ptr %2894, ptr %328, align 8
  br label %2895

2895:                                             ; preds = %2892, %2887
  %2896 = phi ptr [ %2890, %2887 ], [ %2893, %2892 ]
  %2897 = load ptr, ptr %2896, align 8
  store i32 %2851, ptr %2897, align 4, !tbaa !25
  br label %3356

2898:                                             ; preds = %2852
  %2899 = shl i64 %2850, 32
  %2900 = ashr exact i64 %2899, 32
  %2901 = load i32, ptr %3, align 8
  %2902 = icmp ult i32 %2901, 41
  br i1 %2902, label %2903, label %2908

2903:                                             ; preds = %2898
  %2904 = load ptr, ptr %329, align 8
  %2905 = zext i32 %2901 to i64
  %2906 = getelementptr i8, ptr %2904, i64 %2905
  %2907 = add nuw nsw i32 %2901, 8
  store i32 %2907, ptr %3, align 8
  br label %2911

2908:                                             ; preds = %2898
  %2909 = load ptr, ptr %328, align 8
  %2910 = getelementptr i8, ptr %2909, i64 8
  store ptr %2910, ptr %328, align 8
  br label %2911

2911:                                             ; preds = %2908, %2903
  %2912 = phi ptr [ %2906, %2903 ], [ %2909, %2908 ]
  %2913 = load ptr, ptr %2912, align 8
  store i64 %2900, ptr %2913, align 8, !tbaa !60
  br label %3356

2914:                                             ; preds = %2852
  %2915 = shl i64 %2850, 32
  %2916 = ashr exact i64 %2915, 32
  %2917 = load i32, ptr %3, align 8
  %2918 = icmp ult i32 %2917, 41
  br i1 %2918, label %2919, label %2924

2919:                                             ; preds = %2914
  %2920 = load ptr, ptr %329, align 8
  %2921 = zext i32 %2917 to i64
  %2922 = getelementptr i8, ptr %2920, i64 %2921
  %2923 = add nuw nsw i32 %2917, 8
  store i32 %2923, ptr %3, align 8
  br label %2927

2924:                                             ; preds = %2914
  %2925 = load ptr, ptr %328, align 8
  %2926 = getelementptr i8, ptr %2925, i64 8
  store ptr %2926, ptr %328, align 8
  br label %2927

2927:                                             ; preds = %2924, %2919
  %2928 = phi ptr [ %2922, %2919 ], [ %2925, %2924 ]
  %2929 = load ptr, ptr %2928, align 8
  store i64 %2916, ptr %2929, align 8, !tbaa !60
  br label %3356

2930:                                             ; preds = %2852
  %2931 = shl i64 %2850, 32
  %2932 = ashr exact i64 %2931, 32
  %2933 = load i32, ptr %3, align 8
  %2934 = icmp ult i32 %2933, 41
  br i1 %2934, label %2935, label %2940

2935:                                             ; preds = %2930
  %2936 = load ptr, ptr %329, align 8
  %2937 = zext i32 %2933 to i64
  %2938 = getelementptr i8, ptr %2936, i64 %2937
  %2939 = add nuw nsw i32 %2933, 8
  store i32 %2939, ptr %3, align 8
  br label %2943

2940:                                             ; preds = %2930
  %2941 = load ptr, ptr %328, align 8
  %2942 = getelementptr i8, ptr %2941, i64 8
  store ptr %2942, ptr %328, align 8
  br label %2943

2943:                                             ; preds = %2940, %2935
  %2944 = phi ptr [ %2938, %2935 ], [ %2941, %2940 ]
  %2945 = load ptr, ptr %2944, align 8
  store i64 %2932, ptr %2945, align 8, !tbaa !60
  br label %3356

2946:                                             ; preds = %2852
  %2947 = shl i64 %2850, 32
  %2948 = ashr exact i64 %2947, 32
  %2949 = load i32, ptr %3, align 8
  %2950 = icmp ult i32 %2949, 41
  br i1 %2950, label %2951, label %2956

2951:                                             ; preds = %2946
  %2952 = load ptr, ptr %329, align 8
  %2953 = zext i32 %2949 to i64
  %2954 = getelementptr i8, ptr %2952, i64 %2953
  %2955 = add nuw nsw i32 %2949, 8
  store i32 %2955, ptr %3, align 8
  br label %2959

2956:                                             ; preds = %2946
  %2957 = load ptr, ptr %328, align 8
  %2958 = getelementptr i8, ptr %2957, i64 8
  store ptr %2958, ptr %328, align 8
  br label %2959

2959:                                             ; preds = %2956, %2951
  %2960 = phi ptr [ %2954, %2951 ], [ %2957, %2956 ]
  %2961 = load ptr, ptr %2960, align 8
  store i64 %2948, ptr %2961, align 8, !tbaa !60
  br label %3356

2962:                                             ; preds = %2845
  %2963 = and i8 %348, 1
  %2964 = icmp eq i8 %2963, 0
  br i1 %2964, label %2967, label %2965

2965:                                             ; preds = %2962
  %2966 = call i64 @Perl_sv_len_utf8(ptr noundef nonnull %0)
  br label %2970

2967:                                             ; preds = %2962
  %2968 = shl i64 %2850, 32
  %2969 = ashr exact i64 %2968, 32
  br label %2970

2970:                                             ; preds = %2967, %2965
  %2971 = phi i64 [ %2966, %2965 ], [ %2969, %2967 ]
  %2972 = icmp sgt i64 %2971, -1
  br i1 %2972, label %2973, label %2974

2973:                                             ; preds = %2970
  call void @Perl_sv_setiv(ptr noundef %1704, i64 noundef %2971)
  br label %2980

2974:                                             ; preds = %2970
  call void @Perl_sv_setiv(ptr noundef %1704, i64 noundef 0)
  %2975 = getelementptr inbounds %struct.sv, ptr %1704, i64 0, i32 2
  %2976 = load i32, ptr %2975, align 4, !tbaa !16
  %2977 = or i32 %2976, -2147483648
  store i32 %2977, ptr %2975, align 4, !tbaa !16
  %2978 = load ptr, ptr %1704, align 8, !tbaa !26
  %2979 = getelementptr inbounds %struct.xpvuv, ptr %2978, i64 0, i32 4
  store i64 %2971, ptr %2979, align 8, !tbaa !17
  br label %2980

2980:                                             ; preds = %2974, %2973
  %2981 = getelementptr inbounds %struct.sv, ptr %1704, i64 0, i32 2
  %2982 = load i32, ptr %2981, align 4, !tbaa !16
  %2983 = and i32 %2982, 4194304
  %2984 = icmp eq i32 %2983, 0
  br i1 %2984, label %3356, label %2985

2985:                                             ; preds = %2980
  %2986 = call i32 @Perl_mg_set(ptr noundef nonnull %1704) #17
  br label %3356

2987:                                             ; preds = %832, %901, %916, %1915, %1309, %2452, %2452, %2452, %1700, %2844, %2452, %2452, %2448, %1773, %1707, %1600
  %2988 = phi ptr [ %1599, %1600 ], [ %1705, %1700 ], [ %1705, %2844 ], [ %1705, %2448 ], [ %1705, %2452 ], [ %1705, %2452 ], [ %1705, %2452 ], [ %1705, %2452 ], [ %1705, %2452 ], [ %1705, %1915 ], [ %1705, %1773 ], [ %1705, %1707 ], [ %1311, %1309 ], [ %836, %832 ], [ %905, %901 ], [ %917, %916 ]
  %2989 = phi i8 [ %1244, %1600 ], [ %1244, %1700 ], [ %1244, %2844 ], [ %1244, %2448 ], [ %1244, %2452 ], [ %1244, %2452 ], [ %1244, %2452 ], [ %1244, %2452 ], [ %1244, %2452 ], [ %1244, %1915 ], [ %1244, %1773 ], [ %1244, %1707 ], [ %1244, %1309 ], [ %720, %832 ], [ %845, %901 ], [ %914, %916 ]
  %2990 = phi ptr [ %347, %1600 ], [ %1704, %1700 ], [ %1704, %2844 ], [ %1704, %2448 ], [ %1704, %2452 ], [ %1704, %2452 ], [ %1704, %2452 ], [ %1704, %2452 ], [ %1704, %2452 ], [ %1704, %1915 ], [ %1704, %1773 ], [ %1704, %1707 ], [ %347, %1309 ], [ %347, %832 ], [ %347, %901 ], [ %347, %916 ]
  br i1 %325, label %3074, label %2991

2991:                                             ; preds = %2987
  %2992 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %2993 = getelementptr inbounds %struct.op, ptr %2992, i64 0, i32 4
  %2994 = load i16, ptr %2993, align 8
  %2995 = and i16 %2994, 511
  switch i16 %2995, label %3074 [
    i16 237, label %2996
    i16 125, label %2996
  ]

2996:                                             ; preds = %2991, %2991
  %2997 = call zeroext i1 @Perl_ckwarn(i32 noundef 34) #17
  br i1 %2997, label %2998, label %3074

2998:                                             ; preds = %2996
  %2999 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %3000 = icmp eq ptr %2999, null
  br i1 %3000, label %3001, label %3030

3001:                                             ; preds = %2998
  %3002 = call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %3003 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %3003, ptr %3002, align 8, !tbaa !26
  %3004 = getelementptr inbounds %struct.sv, ptr %3002, i64 0, i32 1
  store i32 170, ptr %3004, align 8, !tbaa !13
  %3005 = getelementptr inbounds %struct.sv, ptr %3002, i64 0, i32 2
  store i32 0, ptr %3005, align 4, !tbaa !16
  store ptr %3002, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %3006 = getelementptr inbounds %struct.sv, ptr %3002, i64 1
  store ptr %3006, ptr @PL_sv_root, align 8, !tbaa !9
  br label %3007

3007:                                             ; preds = %3007, %3001
  %3008 = phi ptr [ %3006, %3001 ], [ %3025, %3007 ]
  %3009 = phi i64 [ 1, %3001 ], [ %3024, %3007 ]
  %3010 = getelementptr inbounds %struct.sv, ptr %3008, i64 1
  store ptr %3010, ptr %3008, align 8, !tbaa !26
  %3011 = getelementptr inbounds %struct.sv, ptr %3002, i64 %3009, i32 2
  store i32 255, ptr %3011, align 4, !tbaa !16
  %3012 = add nuw nsw i64 %3009, 1
  %3013 = getelementptr inbounds %struct.sv, ptr %3002, i64 %3012
  %3014 = getelementptr inbounds %struct.sv, ptr %3013, i64 1
  store ptr %3014, ptr %3013, align 8, !tbaa !26
  %3015 = getelementptr inbounds %struct.sv, ptr %3002, i64 %3012, i32 2
  store i32 255, ptr %3015, align 4, !tbaa !16
  %3016 = add nuw nsw i64 %3009, 2
  %3017 = getelementptr inbounds %struct.sv, ptr %3002, i64 %3016
  %3018 = getelementptr inbounds %struct.sv, ptr %3017, i64 1
  store ptr %3018, ptr %3017, align 8, !tbaa !26
  %3019 = getelementptr inbounds %struct.sv, ptr %3002, i64 %3016, i32 2
  store i32 255, ptr %3019, align 4, !tbaa !16
  %3020 = add nuw nsw i64 %3009, 3
  %3021 = getelementptr inbounds %struct.sv, ptr %3002, i64 %3020
  %3022 = getelementptr inbounds %struct.sv, ptr %3021, i64 1
  store ptr %3022, ptr %3021, align 8, !tbaa !26
  %3023 = getelementptr inbounds %struct.sv, ptr %3002, i64 %3020, i32 2
  store i32 255, ptr %3023, align 4, !tbaa !16
  %3024 = add nuw nsw i64 %3009, 4
  %3025 = getelementptr inbounds %struct.sv, ptr %3002, i64 %3024
  %3026 = icmp eq i64 %3024, 169
  br i1 %3026, label %3027, label %3007, !llvm.loop !59

3027:                                             ; preds = %3007
  store ptr null, ptr %3025, align 8, !tbaa !26
  %3028 = getelementptr inbounds %struct.sv, ptr %3002, i64 169, i32 2
  store i32 255, ptr %3028, align 4, !tbaa !16
  %3029 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %3030

3030:                                             ; preds = %3027, %2998
  %3031 = phi ptr [ %3029, %3027 ], [ %2999, %2998 ]
  %3032 = load ptr, ptr %3031, align 8, !tbaa !26
  store ptr %3032, ptr @PL_sv_root, align 8, !tbaa !9
  %3033 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %3034 = add nsw i64 %3033, 1
  store i64 %3034, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %3031, align 8, !tbaa !26
  %3035 = getelementptr inbounds %struct.sv, ptr %3031, i64 0, i32 1
  store i32 1, ptr %3035, align 8, !tbaa !13
  %3036 = getelementptr inbounds %struct.sv, ptr %3031, i64 0, i32 2
  store i32 524288, ptr %3036, align 4, !tbaa !16
  %3037 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %3038 = add nsw i64 %3037, 1
  store i64 %3038, ptr @PL_tmps_ix, align 8, !tbaa !60
  %3039 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %3040 = icmp slt i64 %3038, %3039
  br i1 %3040, label %3043, label %3041

3041:                                             ; preds = %3030
  %3042 = call i64 @Perl_tmps_grow_p(i64 noundef %3038) #17
  br label %3043

3043:                                             ; preds = %3030, %3041
  %3044 = phi i64 [ %3042, %3041 ], [ %3038, %3030 ]
  %3045 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %3046 = getelementptr inbounds ptr, ptr %3045, i64 %3044
  store ptr %3031, ptr %3046, align 8, !tbaa !9
  %3047 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %3048 = getelementptr inbounds %struct.op, ptr %3047, i64 0, i32 4
  %3049 = load i16, ptr %3048, align 8
  %3050 = and i16 %3049, 511
  %3051 = icmp eq i16 %3050, 237
  %3052 = select i1 %3051, ptr @.str.10, ptr @.str.77
  call void (ptr, ptr, ...) @Perl_sv_setpvf(ptr noundef nonnull %3031, ptr noundef nonnull @.str.76, ptr noundef nonnull %3052)
  %3053 = icmp ult ptr %464, %326
  br i1 %3053, label %3054, label %3072

3054:                                             ; preds = %3043
  %3055 = icmp ult ptr %2988, %326
  %3056 = select i1 %3055, ptr %2988, ptr %326
  call void @Perl_sv_catpvn_flags(ptr noundef nonnull %3031, ptr noundef nonnull @.str.78, i64 noundef 2, i32 noundef 2)
  %3057 = icmp ult ptr %464, %3056
  br i1 %3057, label %3058, label %3071

3058:                                             ; preds = %3054, %3068
  %3059 = phi ptr [ %3069, %3068 ], [ %464, %3054 ]
  %3060 = load i8, ptr %3059, align 1, !tbaa !17
  %3061 = zext i8 %3060 to i64
  %3062 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %3061
  %3063 = load i32, ptr %3062, align 4, !tbaa !25
  %3064 = and i32 %3063, 16448
  %3065 = icmp eq i32 %3064, 16448
  br i1 %3065, label %3066, label %3067

3066:                                             ; preds = %3058
  call void @Perl_sv_catpvn_flags(ptr noundef nonnull %3031, ptr noundef nonnull %3059, i64 noundef 1, i32 noundef 0)
  br label %3068

3067:                                             ; preds = %3058
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef nonnull %3031, ptr noundef nonnull @.str.79, i64 noundef %3061)
  br label %3068

3068:                                             ; preds = %3066, %3067
  %3069 = getelementptr inbounds i8, ptr %3059, i64 1
  %3070 = icmp ult ptr %3069, %3056
  br i1 %3070, label %3058, label %3071, !llvm.loop !206

3071:                                             ; preds = %3068, %3054
  call void @Perl_sv_catpvn_flags(ptr noundef nonnull %3031, ptr noundef nonnull @.str.80, i64 noundef 1, i32 noundef 2)
  br label %3073

3072:                                             ; preds = %3043
  call void @Perl_sv_catpvn_flags(ptr noundef nonnull %3031, ptr noundef nonnull @.str.81, i64 noundef 13, i32 noundef 2)
  br label %3073

3073:                                             ; preds = %3072, %3071
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 34, ptr noundef nonnull @.str.82, ptr noundef nonnull %3031) #17
  br label %3074

3074:                                             ; preds = %2991, %3073, %2996, %2987
  %3075 = load i8, ptr %18, align 1, !tbaa !17
  %3076 = icmp eq i8 %3075, 0
  %3077 = sext i1 %3076 to i64
  %3078 = getelementptr inbounds i8, ptr %2988, i64 %3077
  %3079 = ptrtoint ptr %3078 to i64
  %3080 = ptrtoint ptr %463 to i64
  %3081 = sub i64 %3079, %3080
  store i64 %3081, ptr %16, align 8, !tbaa !60
  %3082 = load i32, ptr %26, align 4, !tbaa !16
  %3083 = and i32 %3082, 268435456
  %3084 = icmp eq i32 %3083, 0
  %3085 = load ptr, ptr %0, align 8, !tbaa !26
  br i1 %3084, label %3091, label %3086

3086:                                             ; preds = %3074
  %3087 = getelementptr inbounds %struct.xpv, ptr %3085, i64 0, i32 2
  %3088 = load i64, ptr %3087, align 8, !tbaa !57
  %3089 = add i64 %3081, 1
  %3090 = add i64 %3089, %3088
  br label %3099

3091:                                             ; preds = %3074
  %3092 = getelementptr inbounds %struct.xpv, ptr %3085, i64 0, i32 3
  %3093 = load i64, ptr %3092, align 8, !tbaa !17
  %3094 = getelementptr inbounds %struct.xpv, ptr %3085, i64 0, i32 2
  %3095 = load i64, ptr %3094, align 8, !tbaa !57
  %3096 = add i64 %3081, 1
  %3097 = add i64 %3096, %3095
  %3098 = icmp ult i64 %3093, %3097
  br i1 %3098, label %3099, label %3106

3099:                                             ; preds = %3086, %3091
  %3100 = phi i64 [ %3090, %3086 ], [ %3097, %3091 ]
  %3101 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %3100)
  %3102 = load ptr, ptr %0, align 8, !tbaa !26
  %3103 = getelementptr inbounds %struct.xpv, ptr %3102, i64 0, i32 2
  %3104 = load i64, ptr %3103, align 8, !tbaa !57
  %3105 = load i64, ptr %16, align 8, !tbaa !60
  br label %3106

3106:                                             ; preds = %3091, %3099
  %3107 = phi i64 [ %3081, %3091 ], [ %3105, %3099 ]
  %3108 = phi i64 [ %3095, %3091 ], [ %3104, %3099 ]
  %3109 = load ptr, ptr %336, align 8, !tbaa !17
  %3110 = getelementptr inbounds i8, ptr %3109, i64 %3108
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %3110, ptr align 1 %463, i64 %3107, i1 false)
  %3111 = load i64, ptr %16, align 8, !tbaa !60
  %3112 = getelementptr inbounds i8, ptr %3110, i64 %3111
  store i8 0, ptr %3112, align 1, !tbaa !17
  %3113 = load ptr, ptr %336, align 8, !tbaa !17
  %3114 = ptrtoint ptr %3112 to i64
  %3115 = ptrtoint ptr %3113 to i64
  %3116 = sub i64 %3114, %3115
  %3117 = load ptr, ptr %0, align 8, !tbaa !26
  %3118 = getelementptr inbounds %struct.xpv, ptr %3117, i64 0, i32 2
  store i64 %3116, ptr %3118, align 8, !tbaa !57
  br label %3356

3119:                                             ; preds = %2400, %2441, %1892, %1913, %518, %2579, %2841
  %3120 = phi ptr [ %1705, %2841 ], [ %1705, %2579 ], [ %522, %518 ], [ %1893, %1913 ], [ %1893, %1892 ], [ %2420, %2441 ], [ %2420, %2400 ]
  %3121 = phi i8 [ %1234, %2841 ], [ %1234, %2579 ], [ %519, %518 ], [ %1894, %1913 ], [ %1894, %1892 ], [ %2419, %2441 ], [ %2419, %2400 ]
  %3122 = phi i64 [ 0, %2841 ], [ 0, %2579 ], [ 0, %518 ], [ 0, %1913 ], [ 0, %1892 ], [ %2421, %2441 ], [ %2421, %2400 ]
  %3123 = phi ptr [ %2843, %2841 ], [ %2580, %2579 ], [ %521, %518 ], [ %1895, %1913 ], [ %1895, %1892 ], [ %2422, %2441 ], [ %2422, %2400 ]
  %3124 = phi i64 [ %1379, %2841 ], [ 0, %2579 ], [ 0, %518 ], [ %1896, %1913 ], [ %1896, %1892 ], [ %2418, %2441 ], [ %2418, %2400 ]
  %3125 = phi ptr [ %1574, %2841 ], [ %1574, %2579 ], [ null, %518 ], [ %1897, %1913 ], [ %1897, %1892 ], [ %2417, %2441 ], [ %2417, %2400 ]
  %3126 = phi i32 [ %2842, %2841 ], [ %2450, %2579 ], [ 0, %518 ], [ 0, %1913 ], [ 0, %1892 ], [ %2416, %2441 ], [ %2416, %2400 ]
  %3127 = phi i8 [ %1380, %2841 ], [ 1, %2579 ], [ 0, %518 ], [ 1, %1913 ], [ %1898, %1892 ], [ %2415, %2441 ], [ %2415, %2400 ]
  %3128 = phi i64 [ 0, %2841 ], [ 0, %2579 ], [ 0, %518 ], [ 0, %1913 ], [ 0, %1892 ], [ %2442, %2441 ], [ 0, %2400 ]
  %3129 = phi i64 [ %1235, %2841 ], [ 0, %2579 ], [ 0, %518 ], [ %1899, %1913 ], [ %1899, %1892 ], [ %2414, %2441 ], [ %2414, %2400 ]
  %3130 = phi ptr [ %1236, %2841 ], [ %1236, %2579 ], [ @.str.66, %518 ], [ %1900, %1913 ], [ %1900, %1892 ], [ %2413, %2441 ], [ %2413, %2400 ]
  %3131 = phi i8 [ %1240, %2841 ], [ %1240, %2579 ], [ 32, %518 ], [ %1901, %1913 ], [ %1901, %1892 ], [ %2444, %2441 ], [ %2412, %2400 ]
  %3132 = phi i8 [ %1575, %2841 ], [ %1575, %2579 ], [ 0, %518 ], [ %1902, %1913 ], [ %1902, %1892 ], [ %2411, %2441 ], [ %2411, %2400 ]
  %3133 = phi i8 [ %1241, %2841 ], [ %1241, %2579 ], [ 0, %518 ], [ %1903, %1913 ], [ %1903, %1892 ], [ %2410, %2441 ], [ %2410, %2400 ]
  %3134 = phi i8 [ %1242, %2841 ], [ %1242, %2579 ], [ 0, %518 ], [ %1904, %1913 ], [ %1904, %1892 ], [ %2409, %2441 ], [ %2409, %2400 ]
  %3135 = phi i8 [ %1243, %2841 ], [ %1243, %2579 ], [ 0, %518 ], [ %1905, %1913 ], [ %1905, %1892 ], [ %2408, %2441 ], [ %2408, %2400 ]
  %3136 = phi i8 [ %2532, %2841 ], [ %2532, %2579 ], [ %351, %518 ], [ %351, %1913 ], [ %351, %1892 ], [ %2407, %2441 ], [ %2407, %2400 ]
  %3137 = phi i8 [ %1244, %2841 ], [ %1244, %2579 ], [ %350, %518 ], [ %1906, %1913 ], [ %1906, %1892 ], [ %2406, %2441 ], [ %2406, %2400 ]
  %3138 = phi i8 [ %348, %2841 ], [ %348, %2579 ], [ %348, %518 ], [ %348, %1913 ], [ %348, %1892 ], [ %2405, %2441 ], [ %2405, %2400 ]
  %3139 = phi ptr [ %1704, %2841 ], [ %1704, %2579 ], [ %347, %518 ], [ %1907, %1913 ], [ %1907, %1892 ], [ %2404, %2441 ], [ %2404, %2400 ]
  %3140 = phi i32 [ %1702, %2841 ], [ %1702, %2579 ], [ %346, %518 ], [ %1908, %1913 ], [ %1908, %1892 ], [ %2403, %2441 ], [ %2403, %2400 ]
  %3141 = and i8 %3121, 1
  %3142 = and i8 %3138, 1
  %3143 = icmp eq i8 %3141, %3142
  br i1 %3143, label %3215, label %3144

3144:                                             ; preds = %3119
  %3145 = icmp eq i8 %3141, 0
  br i1 %3145, label %3153, label %3146

3146:                                             ; preds = %3144
  %3147 = load ptr, ptr %0, align 8, !tbaa !26
  %3148 = getelementptr inbounds %struct.xpv, ptr %3147, i64 0, i32 2
  %3149 = load i64, ptr %3148, align 8, !tbaa !57
  %3150 = icmp eq i64 %3149, 0
  br i1 %3150, label %3215, label %3151

3151:                                             ; preds = %3146
  %3152 = call i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef nonnull %0, i32 noundef 2, i64 noundef 0)
  br label %3215

3153:                                             ; preds = %3144
  %3154 = load i64, ptr %16, align 8, !tbaa !60
  %3155 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %3156 = icmp eq ptr %3155, null
  br i1 %3156, label %3157, label %3186

3157:                                             ; preds = %3153
  %3158 = call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %3159 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %3159, ptr %3158, align 8, !tbaa !26
  %3160 = getelementptr inbounds %struct.sv, ptr %3158, i64 0, i32 1
  store i32 170, ptr %3160, align 8, !tbaa !13
  %3161 = getelementptr inbounds %struct.sv, ptr %3158, i64 0, i32 2
  store i32 0, ptr %3161, align 4, !tbaa !16
  store ptr %3158, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %3162 = getelementptr inbounds %struct.sv, ptr %3158, i64 1
  store ptr %3162, ptr @PL_sv_root, align 8, !tbaa !9
  br label %3163

3163:                                             ; preds = %3163, %3157
  %3164 = phi ptr [ %3162, %3157 ], [ %3181, %3163 ]
  %3165 = phi i64 [ 1, %3157 ], [ %3180, %3163 ]
  %3166 = getelementptr inbounds %struct.sv, ptr %3164, i64 1
  store ptr %3166, ptr %3164, align 8, !tbaa !26
  %3167 = getelementptr inbounds %struct.sv, ptr %3158, i64 %3165, i32 2
  store i32 255, ptr %3167, align 4, !tbaa !16
  %3168 = add nuw nsw i64 %3165, 1
  %3169 = getelementptr inbounds %struct.sv, ptr %3158, i64 %3168
  %3170 = getelementptr inbounds %struct.sv, ptr %3169, i64 1
  store ptr %3170, ptr %3169, align 8, !tbaa !26
  %3171 = getelementptr inbounds %struct.sv, ptr %3158, i64 %3168, i32 2
  store i32 255, ptr %3171, align 4, !tbaa !16
  %3172 = add nuw nsw i64 %3165, 2
  %3173 = getelementptr inbounds %struct.sv, ptr %3158, i64 %3172
  %3174 = getelementptr inbounds %struct.sv, ptr %3173, i64 1
  store ptr %3174, ptr %3173, align 8, !tbaa !26
  %3175 = getelementptr inbounds %struct.sv, ptr %3158, i64 %3172, i32 2
  store i32 255, ptr %3175, align 4, !tbaa !16
  %3176 = add nuw nsw i64 %3165, 3
  %3177 = getelementptr inbounds %struct.sv, ptr %3158, i64 %3176
  %3178 = getelementptr inbounds %struct.sv, ptr %3177, i64 1
  store ptr %3178, ptr %3177, align 8, !tbaa !26
  %3179 = getelementptr inbounds %struct.sv, ptr %3158, i64 %3176, i32 2
  store i32 255, ptr %3179, align 4, !tbaa !16
  %3180 = add nuw nsw i64 %3165, 4
  %3181 = getelementptr inbounds %struct.sv, ptr %3158, i64 %3180
  %3182 = icmp eq i64 %3180, 169
  br i1 %3182, label %3183, label %3163, !llvm.loop !59

3183:                                             ; preds = %3163
  store ptr null, ptr %3181, align 8, !tbaa !26
  %3184 = getelementptr inbounds %struct.sv, ptr %3158, i64 169, i32 2
  store i32 255, ptr %3184, align 4, !tbaa !16
  %3185 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %3186

3186:                                             ; preds = %3153, %3183
  %3187 = phi ptr [ %3185, %3183 ], [ %3155, %3153 ]
  %3188 = load ptr, ptr %3187, align 8, !tbaa !26
  store ptr %3188, ptr @PL_sv_root, align 8, !tbaa !9
  %3189 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %3190 = add nsw i64 %3189, 1
  store i64 %3190, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %3187, align 8, !tbaa !26
  %3191 = getelementptr inbounds %struct.sv, ptr %3187, i64 0, i32 1
  store i32 1, ptr %3191, align 8, !tbaa !13
  %3192 = getelementptr inbounds %struct.sv, ptr %3187, i64 0, i32 2
  store i32 0, ptr %3192, align 4, !tbaa !16
  call void @Perl_sv_setpvn(ptr noundef nonnull %3187, ptr noundef %3123, i64 noundef %3154)
  %3193 = load i32, ptr %3192, align 4, !tbaa !16
  %3194 = or i32 %3193, 524288
  store i32 %3194, ptr %3192, align 4, !tbaa !16
  %3195 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %3196 = add nsw i64 %3195, 1
  store i64 %3196, ptr @PL_tmps_ix, align 8, !tbaa !60
  %3197 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %3198 = icmp slt i64 %3196, %3197
  br i1 %3198, label %3201, label %3199

3199:                                             ; preds = %3186
  %3200 = call i64 @Perl_tmps_grow_p(i64 noundef %3196) #17
  br label %3201

3201:                                             ; preds = %3186, %3199
  %3202 = phi i64 [ %3200, %3199 ], [ %3196, %3186 ]
  %3203 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %3204 = getelementptr inbounds ptr, ptr %3203, i64 %3202
  store ptr %3187, ptr %3204, align 8, !tbaa !9
  %3205 = call i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef nonnull %3187, i32 noundef 2, i64 noundef 0)
  %3206 = getelementptr inbounds %struct.sv, ptr %3187, i64 0, i32 3
  %3207 = load ptr, ptr %3206, align 8, !tbaa !17
  %3208 = load ptr, ptr %3187, align 8, !tbaa !26
  %3209 = getelementptr inbounds %struct.xpv, ptr %3208, i64 0, i32 2
  %3210 = load i64, ptr %3209, align 8, !tbaa !57
  store i64 %3210, ptr %16, align 8, !tbaa !60
  %3211 = icmp eq i64 %3129, 0
  %3212 = sub i64 %3129, %3154
  %3213 = add i64 %3212, %3210
  %3214 = select i1 %3211, i64 0, i64 %3213
  br label %3215

3215:                                             ; preds = %3201, %3151, %3146, %3119
  %3216 = phi i8 [ %3121, %3151 ], [ %3121, %3146 ], [ 1, %3201 ], [ %3121, %3119 ]
  %3217 = phi ptr [ %3123, %3151 ], [ %3123, %3146 ], [ %3207, %3201 ], [ %3123, %3119 ]
  %3218 = phi i64 [ %3129, %3151 ], [ %3129, %3146 ], [ %3214, %3201 ], [ %3129, %3119 ]
  %3219 = add i64 %3128, %3122
  %3220 = load i64, ptr %16, align 8, !tbaa !60
  %3221 = add i64 %3219, %3220
  %3222 = icmp ult i64 %3221, %3128
  br i1 %3222, label %3223, label %3224

3223:                                             ; preds = %3215
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.107, ptr noundef nonnull @PL_memory_wrap) #17
  br label %3224

3224:                                             ; preds = %3223, %3215
  %3225 = call i64 @llvm.umax.i64(i64 %3221, i64 %3218)
  %3226 = sub i64 %3225, %3221
  %3227 = load ptr, ptr %0, align 8, !tbaa !26
  %3228 = getelementptr inbounds %struct.xpv, ptr %3227, i64 0, i32 2
  %3229 = load i64, ptr %3228, align 8, !tbaa !57
  %3230 = xor i64 %3229, -1
  %3231 = load i64, ptr %20, align 8, !tbaa !60
  %3232 = xor i64 %3231, -1
  %3233 = add i64 %3232, %3230
  %3234 = icmp ult i64 %3225, %3233
  br i1 %3234, label %3237, label %3235

3235:                                             ; preds = %3224
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.107, ptr noundef nonnull @PL_memory_wrap) #17
  %3236 = load ptr, ptr %0, align 8, !tbaa !26
  br label %3237

3237:                                             ; preds = %3235, %3224
  %3238 = phi ptr [ %3236, %3235 ], [ %3227, %3224 ]
  %3239 = load i32, ptr %26, align 4, !tbaa !16
  %3240 = and i32 %3239, 268435456
  %3241 = icmp eq i32 %3240, 0
  br i1 %3241, label %3249, label %3242

3242:                                             ; preds = %3237
  %3243 = getelementptr inbounds %struct.xpv, ptr %3238, i64 0, i32 2
  %3244 = load i64, ptr %3243, align 8, !tbaa !57
  %3245 = load i64, ptr %20, align 8, !tbaa !60
  %3246 = add i64 %3225, 1
  %3247 = add i64 %3246, %3244
  %3248 = add i64 %3247, %3245
  br label %3259

3249:                                             ; preds = %3237
  %3250 = getelementptr inbounds %struct.xpv, ptr %3238, i64 0, i32 3
  %3251 = load i64, ptr %3250, align 8, !tbaa !17
  %3252 = getelementptr inbounds %struct.xpv, ptr %3238, i64 0, i32 2
  %3253 = load i64, ptr %3252, align 8, !tbaa !57
  %3254 = load i64, ptr %20, align 8, !tbaa !60
  %3255 = add i64 %3225, 1
  %3256 = add i64 %3255, %3253
  %3257 = add i64 %3256, %3254
  %3258 = icmp ult i64 %3251, %3257
  br i1 %3258, label %3259, label %3265

3259:                                             ; preds = %3242, %3249
  %3260 = phi i64 [ %3248, %3242 ], [ %3257, %3249 ]
  %3261 = call ptr @Perl_sv_grow(ptr noundef nonnull %0, i64 noundef %3260)
  %3262 = load ptr, ptr %0, align 8, !tbaa !26
  %3263 = getelementptr inbounds %struct.xpv, ptr %3262, i64 0, i32 2
  %3264 = load i64, ptr %3263, align 8, !tbaa !57
  br label %3265

3265:                                             ; preds = %3249, %3259
  %3266 = phi i64 [ %3253, %3249 ], [ %3264, %3259 ]
  %3267 = load ptr, ptr %336, align 8, !tbaa !17
  %3268 = getelementptr i8, ptr %3267, i64 %3266
  %3269 = icmp ne i64 %3122, 0
  %3270 = icmp eq i8 %3131, 48
  %3271 = select i1 %3269, i1 %3270, i1 false
  %3272 = trunc i64 %3122 to i32
  %3273 = icmp sgt i32 %3272, 0
  %3274 = and i1 %3273, %3271
  br i1 %3274, label %3275, label %3281

3275:                                             ; preds = %3265
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %3268, ptr nonnull align 4 %14, i64 %3122, i1 false), !tbaa !17
  %3276 = add nuw nsw i64 %3122, 4294967295
  %3277 = and i64 %3276, 4294967295
  %3278 = add i64 %3266, %3277
  %3279 = getelementptr i8, ptr %3267, i64 1
  %3280 = getelementptr i8, ptr %3279, i64 %3278
  br label %3281

3281:                                             ; preds = %3275, %3265
  %3282 = phi ptr [ %3268, %3265 ], [ %3280, %3275 ]
  %3283 = icmp ult i64 %3221, %3218
  %3284 = and i8 %3134, 1
  %3285 = icmp eq i8 %3284, 0
  %3286 = select i1 %3283, i1 %3285, i1 false
  br i1 %3286, label %3287, label %3289

3287:                                             ; preds = %3281
  call void @llvm.memset.p0.i64(ptr align 1 %3282, i8 %3131, i64 %3226, i1 false)
  %3288 = getelementptr inbounds i8, ptr %3282, i64 %3226
  br label %3289

3289:                                             ; preds = %3287, %3281
  %3290 = phi ptr [ %3288, %3287 ], [ %3282, %3281 ]
  %3291 = icmp ne i8 %3131, 48
  %3292 = select i1 %3269, i1 %3291, i1 false
  %3293 = and i1 %3273, %3292
  br i1 %3293, label %3294, label %3302

3294:                                             ; preds = %3289
  %3295 = and i64 %3122, 4294967295
  %3296 = load i8, ptr %14, align 4, !tbaa !17
  %3297 = getelementptr inbounds i8, ptr %3290, i64 1
  store i8 %3296, ptr %3290, align 1, !tbaa !17
  %3298 = icmp eq i64 %3295, 1
  br i1 %3298, label %3302, label %3299, !llvm.loop !207

3299:                                             ; preds = %3294
  %3300 = load i8, ptr %341, align 1, !tbaa !17
  %3301 = getelementptr inbounds i8, ptr %3290, i64 2
  store i8 %3300, ptr %3297, align 1, !tbaa !17
  br label %3302

3302:                                             ; preds = %3294, %3299, %3289
  %3303 = phi ptr [ %3290, %3289 ], [ %3297, %3294 ], [ %3301, %3299 ]
  %3304 = and i64 %3128, 4294967295
  %3305 = icmp eq i64 %3304, 0
  br i1 %3305, label %3311, label %3306

3306:                                             ; preds = %3302
  call void @llvm.memset.p0.i64(ptr align 1 %3303, i8 48, i64 %3304, i1 false), !tbaa !17
  %3307 = add i64 %3128, 4294967295
  %3308 = and i64 %3307, 4294967295
  %3309 = getelementptr i8, ptr %3303, i64 1
  %3310 = getelementptr i8, ptr %3309, i64 %3308
  br label %3311

3311:                                             ; preds = %3306, %3302
  %3312 = phi ptr [ %3303, %3302 ], [ %3310, %3306 ]
  %3313 = load i64, ptr %16, align 8, !tbaa !60
  %3314 = icmp eq i64 %3313, 0
  br i1 %3314, label %3318, label %3315

3315:                                             ; preds = %3311
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %3312, ptr align 1 %3217, i64 %3313, i1 false)
  %3316 = load i64, ptr %16, align 8, !tbaa !60
  %3317 = getelementptr inbounds i8, ptr %3312, i64 %3316
  br label %3318

3318:                                             ; preds = %3315, %3311
  %3319 = phi ptr [ %3317, %3315 ], [ %3312, %3311 ]
  %3320 = xor i1 %3283, true
  %3321 = select i1 %3320, i1 true, i1 %3285
  br i1 %3321, label %3324, label %3322

3322:                                             ; preds = %3318
  call void @llvm.memset.p0.i64(ptr align 1 %3319, i8 32, i64 %3226, i1 false)
  %3323 = getelementptr inbounds i8, ptr %3319, i64 %3226
  br label %3324

3324:                                             ; preds = %3322, %3318
  %3325 = phi ptr [ %3323, %3322 ], [ %3319, %3318 ]
  %3326 = and i8 %3133, 1
  %3327 = icmp eq i8 %3326, 0
  br i1 %3327, label %3335, label %3328

3328:                                             ; preds = %3324
  %3329 = load i64, ptr %17, align 8, !tbaa !60
  %3330 = icmp eq i64 %3329, 0
  br i1 %3330, label %3335, label %3331

3331:                                             ; preds = %3328
  %3332 = load i64, ptr %20, align 8, !tbaa !60
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %3325, ptr align 1 %3130, i64 %3332, i1 false)
  %3333 = load i64, ptr %20, align 8, !tbaa !60
  %3334 = getelementptr inbounds i8, ptr %3325, i64 %3333
  br label %3335

3335:                                             ; preds = %3328, %3331, %3324
  %3336 = phi i8 [ %3133, %3331 ], [ %3133, %3324 ], [ 0, %3328 ]
  %3337 = phi ptr [ %3334, %3331 ], [ %3325, %3324 ], [ %3325, %3328 ]
  %3338 = and i8 %3216, 1
  %3339 = icmp eq i8 %3338, 0
  %3340 = select i1 %3339, i8 %3138, i8 1
  %3341 = and i8 %3340, 1
  %3342 = icmp eq i8 %3341, 0
  br i1 %3342, label %3346, label %3343

3343:                                             ; preds = %3335
  %3344 = load i32, ptr %26, align 4, !tbaa !16
  %3345 = or i32 %3344, 536870912
  store i32 %3345, ptr %26, align 4, !tbaa !16
  br label %3346

3346:                                             ; preds = %3343, %3335
  store i8 0, ptr %3337, align 1, !tbaa !17
  %3347 = load ptr, ptr %336, align 8, !tbaa !17
  %3348 = ptrtoint ptr %3337 to i64
  %3349 = ptrtoint ptr %3347 to i64
  %3350 = sub i64 %3348, %3349
  %3351 = load ptr, ptr %0, align 8, !tbaa !26
  %3352 = getelementptr inbounds %struct.xpv, ptr %3351, i64 0, i32 2
  store i64 %3350, ptr %3352, align 8, !tbaa !57
  %3353 = and i8 %3336, 1
  %3354 = icmp eq i8 %3353, 0
  br i1 %3354, label %3356, label %2114

3355:                                             ; preds = %461
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %20) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %19) #17
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %18) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %17) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %16) #17
  call void @llvm.lifetime.end.p0(i64 14, ptr nonnull %15) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14)
  br label %3364

3356:                                             ; preds = %2985, %2980, %3106, %1965, %2114, %2866, %2881, %2895, %2911, %2927, %2943, %2959, %3346
  %3357 = phi ptr [ %1705, %1965 ], [ %1705, %2866 ], [ %1705, %2881 ], [ %1705, %2911 ], [ %1705, %2927 ], [ %1705, %2943 ], [ %1705, %2959 ], [ %1705, %2895 ], [ %3078, %3106 ], [ %2115, %2114 ], [ %3120, %3346 ], [ %1705, %2980 ], [ %1705, %2985 ]
  %3358 = phi i8 [ %351, %1965 ], [ %351, %2866 ], [ %351, %2881 ], [ %351, %2911 ], [ %351, %2927 ], [ %351, %2943 ], [ %351, %2959 ], [ %351, %2895 ], [ %351, %3106 ], [ %2128, %2114 ], [ %3136, %3346 ], [ %351, %2980 ], [ %351, %2985 ]
  %3359 = phi i8 [ %1244, %1965 ], [ %1244, %2866 ], [ %1244, %2881 ], [ %1244, %2911 ], [ %1244, %2927 ], [ %1244, %2943 ], [ %1244, %2959 ], [ %1244, %2895 ], [ %2989, %3106 ], [ %2129, %2114 ], [ %3137, %3346 ], [ %1244, %2980 ], [ %1244, %2985 ]
  %3360 = phi i8 [ %348, %1965 ], [ %348, %2866 ], [ %348, %2881 ], [ %348, %2911 ], [ %348, %2927 ], [ %348, %2943 ], [ %348, %2959 ], [ %348, %2895 ], [ %348, %3106 ], [ %2130, %2114 ], [ %3340, %3346 ], [ %348, %2980 ], [ %348, %2985 ]
  %3361 = phi ptr [ %1704, %1965 ], [ %1704, %2866 ], [ %1704, %2881 ], [ %1704, %2911 ], [ %1704, %2927 ], [ %1704, %2943 ], [ %1704, %2959 ], [ %1704, %2895 ], [ %2990, %3106 ], [ %2131, %2114 ], [ %3139, %3346 ], [ %1704, %2980 ], [ %1704, %2985 ]
  %3362 = phi i32 [ %1702, %1965 ], [ %1702, %2866 ], [ %1702, %2881 ], [ %1702, %2911 ], [ %1702, %2927 ], [ %1702, %2943 ], [ %1702, %2959 ], [ %1702, %2895 ], [ %346, %3106 ], [ %2132, %2114 ], [ %3140, %3346 ], [ %1702, %2980 ], [ %1702, %2985 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %20) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %19) #17
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %18) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %17) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %16) #17
  call void @llvm.lifetime.end.p0(i64 14, ptr nonnull %15) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14)
  %3363 = icmp ult ptr %3357, %326
  br i1 %3363, label %344, label %3364, !llvm.loop !208

3364:                                             ; preds = %3356, %320, %3355
  %3365 = phi i8 [ %350, %3355 ], [ 0, %320 ], [ %3359, %3356 ]
  %3366 = phi i32 [ %346, %3355 ], [ 0, %320 ], [ %3362, %3356 ]
  %3367 = and i8 %3365, 1
  %3368 = icmp eq i8 %3367, 0
  %3369 = icmp slt i32 %3366, %5
  %3370 = select i1 %3368, i1 %3369, i1 false
  br i1 %3370, label %3371, label %3389

3371:                                             ; preds = %3364
  %3372 = call zeroext i1 @Perl_ckwarn(i32 noundef 67) #17
  br i1 %3372, label %3373, label %3389

3373:                                             ; preds = %3371
  %3374 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %3375 = icmp eq ptr %3374, null
  br i1 %3375, label %3387, label %3376

3376:                                             ; preds = %3373
  %3377 = getelementptr inbounds %struct.op, ptr %3374, i64 0, i32 4
  %3378 = load i16, ptr %3377, align 8
  %3379 = and i16 %3378, 511
  %3380 = icmp eq i16 %3379, 380
  br i1 %3380, label %3381, label %3383

3381:                                             ; preds = %3376
  %3382 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %3374, i32 noundef 2) #17
  br label %3387

3383:                                             ; preds = %3376
  %3384 = zext i16 %3379 to i64
  %3385 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %3384
  %3386 = load ptr, ptr %3385, align 8, !tbaa !9
  br label %3387

3387:                                             ; preds = %3373, %3381, %3383
  %3388 = phi ptr [ %3382, %3381 ], [ %3386, %3383 ], [ @.str.65, %3373 ]
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 67, ptr noundef nonnull @.str.64, ptr noundef %3388) #17
  br label %3389

3389:                                             ; preds = %3364, %3371, %3387
  %3390 = load i8, ptr @PL_tainting, align 1, !tbaa !5, !range !74, !noundef !75
  %3391 = icmp eq i8 %3390, 0
  %3392 = load i8, ptr @PL_tainted, align 1, !range !74
  %3393 = icmp eq i8 %3392, 0
  %3394 = select i1 %3391, i1 true, i1 %3393
  br i1 %3394, label %3396, label %3395

3395:                                             ; preds = %3389
  call void @Perl_sv_magic(ptr noundef %0, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0)
  br label %3396

3396:                                             ; preds = %221, %189, %301, %290, %3389, %3395, %119, %138, %136, %57, %59, %75
  call void @llvm.lifetime.end.p0(i64 127, ptr nonnull %12) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_vcatpvf(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #1 {
  %4 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #18
  tail call void @Perl_sv_vcatpvfn_flags(ptr noundef %0, ptr noundef %1, i64 noundef %4, ptr noundef %2, ptr noundef null, i32 noundef 0, ptr poison, i32 noundef 130)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_catpvf_mg(ptr noundef %0, ptr noundef %1, ...) local_unnamed_addr #1 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #17
  call void @llvm.va_start(ptr nonnull %3)
  %4 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #18
  call void @Perl_sv_vcatpvfn_flags(ptr noundef %0, ptr noundef %1, i64 noundef %4, ptr noundef nonnull %3, ptr noundef null, i32 noundef 0, ptr poison, i32 noundef 130)
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !16
  %7 = and i32 %6, 4194304
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = call i32 @Perl_mg_set(ptr noundef nonnull %0) #17
  br label %11

11:                                               ; preds = %2, %9
  call void @llvm.va_end(ptr nonnull %3)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_vcatpvf_mg(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #1 {
  %4 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #18
  tail call void @Perl_sv_vcatpvfn_flags(ptr noundef %0, ptr noundef %1, i64 noundef %4, ptr noundef %2, ptr noundef null, i32 noundef 0, ptr poison, i32 noundef 130)
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !16
  %7 = and i32 %6, 4194304
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = tail call i32 @Perl_mg_set(ptr noundef nonnull %0) #17
  br label %11

11:                                               ; preds = %9, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_sv_vcatpvfn(ptr noundef %0, ptr noundef %1, i64 noundef %2, ptr noundef %3, ptr nocapture noundef readonly %4, i32 noundef %5, ptr nocapture noundef readnone %6) local_unnamed_addr #1 {
  tail call void @Perl_sv_vcatpvfn_flags(ptr noundef %0, ptr noundef %1, i64 noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %5, ptr poison, i32 noundef 130)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_vcatpvfn_missing_argument() unnamed_addr #1 {
  %1 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 66) #17
  br i1 %1, label %2, label %18

2:                                                ; preds = %0
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !9
  %4 = icmp eq ptr %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 4
  %7 = load i16, ptr %6, align 8
  %8 = and i16 %7, 511
  %9 = icmp eq i16 %8, 380
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %3, i32 noundef 2) #17
  br label %16

12:                                               ; preds = %5
  %13 = zext i16 %8 to i64
  %14 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %13
  %15 = load ptr, ptr %14, align 8, !tbaa !9
  br label %16

16:                                               ; preds = %2, %10, %12
  %17 = phi ptr [ %11, %10 ], [ %15, %12 ], [ @.str.65, %2 ]
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 66, ptr noundef nonnull @.str.102, ptr noundef %17) #17
  br label %18

18:                                               ; preds = %16, %0
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_F0convert(double noundef nofpclass(nan inf) %0, ptr noundef %1, ptr nocapture noundef writeonly %2) unnamed_addr #1 {
  %4 = fcmp fast olt double %0, 0.000000e+00
  %5 = tail call zeroext i1 @Perl_isinfnan(double noundef nofpclass(nan inf) %0) #17
  br i1 %5, label %37, label %6

6:                                                ; preds = %3
  %7 = fneg fast double %0
  %8 = select nnan ninf i1 %4, double %7, double %0
  %9 = fcmp fast olt double %8, 0x43F0000000000000
  br i1 %9, label %10, label %40

10:                                               ; preds = %6
  %11 = fadd fast double %8, 5.000000e-01
  %12 = fptoui double %11 to i64
  %13 = and i64 %12, 1
  %14 = icmp ne i64 %13, 0
  %15 = uitofp i64 %12 to double
  %16 = fcmp fast oeq double %11, %15
  %17 = select i1 %14, i1 %16, i1 false
  %18 = sext i1 %17 to i64
  %19 = add i64 %18, %12
  br label %20

20:                                               ; preds = %20, %10
  %21 = phi i64 [ %19, %10 ], [ %27, %20 ]
  %22 = phi ptr [ %1, %10 ], [ %26, %20 ]
  %23 = urem i64 %21, 10
  %24 = trunc i64 %23 to i8
  %25 = or i8 %24, 48
  %26 = getelementptr inbounds i8, ptr %22, i64 -1
  store i8 %25, ptr %26, align 1, !tbaa !17
  %27 = udiv i64 %21, 10
  %28 = icmp ult i64 %21, 10
  br i1 %28, label %29, label %20, !llvm.loop !209

29:                                               ; preds = %20
  br i1 %4, label %30, label %32

30:                                               ; preds = %29
  %31 = getelementptr inbounds i8, ptr %22, i64 -2
  store i8 45, ptr %31, align 1, !tbaa !17
  br label %32

32:                                               ; preds = %30, %29
  %33 = phi ptr [ %31, %30 ], [ %26, %29 ]
  %34 = ptrtoint ptr %1 to i64
  %35 = ptrtoint ptr %33 to i64
  %36 = sub i64 %34, %35
  br label %37

37:                                               ; preds = %3, %32
  %38 = phi i64 [ %36, %32 ], [ 0, %3 ]
  %39 = phi ptr [ %33, %32 ], [ %1, %3 ]
  store i64 %38, ptr %2, align 8, !tbaa !60
  br label %40

40:                                               ; preds = %37, %6
  %41 = phi ptr [ null, %6 ], [ %39, %37 ]
  ret ptr %41
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #7

declare zeroext i1 @Perl_sv_derived_from(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @Perl_hv_common_key_len(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @Perl_scan_vstring(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare zeroext i1 @Perl_isinfnansv(ptr noundef) local_unnamed_addr #3

declare ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i64 @S_sv_or_pv_pos_u2b(ptr noundef %0, ptr noundef %1, i64 noundef %2) unnamed_addr #1 {
  %4 = alloca i64, align 8
  %5 = alloca ptr, align 8
  %6 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !16
  %8 = and i32 %7, 2097152
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %27

10:                                               ; preds = %3
  %11 = and i32 %7, 2048
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %33, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 2
  %17 = load i32, ptr %16, align 4, !tbaa !16
  %18 = and i32 %17, 1048576
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %33, label %20

20:                                               ; preds = %13
  %21 = load ptr, ptr %15, align 8, !tbaa !26
  %22 = load ptr, ptr %21, align 8, !tbaa !50
  %23 = getelementptr inbounds %struct.hv, ptr %22, i64 0, i32 2
  %24 = load i32, ptr %23, align 4, !tbaa !64
  %25 = and i32 %24, 268435456
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %20, %3
  %28 = trunc i64 %2 to i32
  %29 = tail call ptr @Perl_utf8_hop(ptr noundef %1, i32 noundef %28) #17
  %30 = ptrtoint ptr %29 to i64
  %31 = ptrtoint ptr %1 to i64
  %32 = sub i64 %30, %31
  br label %54

33:                                               ; preds = %20, %13, %10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  %34 = and i32 %7, 2098176
  %35 = icmp eq i32 %34, 1024
  br i1 %35, label %36, label %42

36:                                               ; preds = %33
  %37 = load ptr, ptr %0, align 8, !tbaa !26
  %38 = getelementptr inbounds %struct.xpv, ptr %37, i64 0, i32 2
  %39 = load i64, ptr %38, align 8, !tbaa !57
  store i64 %39, ptr %4, align 8, !tbaa !60
  %40 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %41 = load ptr, ptr %40, align 8, !tbaa !17
  br label %45

42:                                               ; preds = %33
  %43 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %0, ptr noundef nonnull %4, i32 noundef 32)
  %44 = load i64, ptr %4, align 8, !tbaa !60
  br label %45

45:                                               ; preds = %42, %36
  %46 = phi i64 [ %44, %42 ], [ %39, %36 ]
  %47 = phi ptr [ %43, %42 ], [ %41, %36 ]
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds i8, ptr %47, i64 %46
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #17
  store ptr null, ptr %5, align 8, !tbaa !9
  %51 = call fastcc i64 @S_sv_pos_u2b_cached(ptr noundef nonnull %0, ptr noundef nonnull %5, ptr noundef %47, ptr noundef nonnull %50, i64 noundef %2, i64 noundef 0, i64 noundef 0)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #17
  br label %52

52:                                               ; preds = %45, %49
  %53 = phi i64 [ %51, %49 ], [ 0, %45 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  br label %54

54:                                               ; preds = %52, %27
  %55 = phi i64 [ %32, %27 ], [ %53, %52 ]
  ret i64 %55
}

declare i64 @Perl_utf8n_to_uvchr(ptr noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare ptr @llvm.ptrmask.p0.i64(ptr, i64) #12

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: write)
declare nofpclass(nan inf) double @frexp(double noundef nofpclass(nan inf), ptr nocapture noundef) local_unnamed_addr #13

declare ptr @Perl_die(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc nonnull ptr @S_hextract(double noundef nofpclass(nan inf) %0, ptr nocapture noundef %1, ptr noundef %2, ptr noundef readnone %3) unnamed_addr #1 {
  %5 = tail call fast double @llvm.fabs.f64(double %0)
  %6 = tail call fast nofpclass(nan inf) double @frexp(double noundef nofpclass(nan inf) %5, ptr noundef %1) #17
  %7 = icmp eq ptr %3, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds i8, ptr %2, i64 16
  %10 = icmp ule ptr %3, %2
  %11 = icmp ult ptr %9, %3
  %12 = select i1 %10, i1 true, i1 %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %8
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.105) #17
  br label %14

14:                                               ; preds = %8, %13
  %15 = fcmp fast oeq double %0, 0.000000e+00
  br i1 %15, label %20, label %18

16:                                               ; preds = %4
  %17 = fcmp fast oeq double %0, 0.000000e+00
  br i1 %17, label %21, label %18

18:                                               ; preds = %14, %16
  %19 = fcmp fast olt double %5, 1.000000e+00
  br i1 %19, label %28, label %23

20:                                               ; preds = %14
  store i8 0, ptr %2, align 1, !tbaa !17
  br label %21

21:                                               ; preds = %16, %20
  %22 = getelementptr inbounds i8, ptr %2, i64 1
  store i32 0, ptr %1, align 4, !tbaa !25
  br label %104

23:                                               ; preds = %28, %18
  %24 = phi i32 [ 1, %18 ], [ %32, %28 ]
  %25 = phi double [ 1.000000e+00, %18 ], [ %31, %28 ]
  store i32 %24, ptr %1, align 4, !tbaa !25
  %26 = fmul fast double %25, 2.000000e+00
  %27 = fcmp fast ult double %5, %26
  br i1 %27, label %41, label %34

28:                                               ; preds = %18, %28
  %29 = phi double [ %31, %28 ], [ 1.000000e+00, %18 ]
  %30 = phi i32 [ %32, %28 ], [ 1, %18 ]
  %31 = fmul fast double %29, 5.000000e-01
  %32 = add nsw i32 %30, -1
  %33 = fcmp fast ogt double %31, %5
  br i1 %33, label %28, label %23, !llvm.loop !210

34:                                               ; preds = %23, %34
  %35 = phi i32 [ %37, %34 ], [ %24, %23 ]
  %36 = phi double [ %38, %34 ], [ %26, %23 ]
  %37 = add nsw i32 %35, 1
  %38 = fmul fast double %36, 2.000000e+00
  %39 = fcmp fast ult double %5, %38
  br i1 %39, label %40, label %34, !llvm.loop !211

40:                                               ; preds = %34
  store i32 %37, ptr %1, align 4, !tbaa !25
  br label %41

41:                                               ; preds = %40, %23
  %42 = phi double [ %36, %40 ], [ %25, %23 ]
  %43 = fcmp fast ult double %5, %42
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = fsub fast double %5, %42
  br i1 %7, label %50, label %47

46:                                               ; preds = %41
  br i1 %7, label %50, label %47

47:                                               ; preds = %46, %44
  %48 = phi i8 [ 1, %44 ], [ 0, %46 ]
  %49 = phi double [ %45, %44 ], [ %5, %46 ]
  store i8 %48, ptr %2, align 1, !tbaa !17
  br label %50

50:                                               ; preds = %47, %46, %44
  %51 = phi double [ %45, %44 ], [ %5, %46 ], [ %49, %47 ]
  %52 = getelementptr inbounds i8, ptr %2, i64 1
  %53 = fcmp fast ogt double %51, 0.000000e+00
  br i1 %53, label %54, label %104

54:                                               ; preds = %50
  %55 = fmul fast double %42, 5.000000e-01
  br i1 %7, label %56, label %75

56:                                               ; preds = %54, %56
  %57 = phi double [ %73, %56 ], [ %55, %54 ]
  %58 = phi i8 [ %72, %56 ], [ 8, %54 ]
  %59 = phi i8 [ %71, %56 ], [ 0, %54 ]
  %60 = phi double [ %64, %56 ], [ %51, %54 ]
  %61 = phi ptr [ %70, %56 ], [ %52, %54 ]
  %62 = fcmp fast ult double %60, %57
  %63 = select i1 %62, double 0.000000e+00, double %57
  %64 = fsub fast double %60, %63
  %65 = select i1 %62, i8 0, i8 %58
  %66 = or i8 %65, %59
  %67 = icmp eq i8 %58, 1
  %68 = lshr i8 %58, 1
  %69 = zext i1 %67 to i64
  %70 = getelementptr inbounds i8, ptr %61, i64 %69
  %71 = select i1 %67, i8 0, i8 %66
  %72 = select i1 %67, i8 8, i8 %68
  %73 = fmul fast double %57, 5.000000e-01
  %74 = fcmp fast ogt double %64, 0.000000e+00
  br i1 %74, label %56, label %97, !llvm.loop !212

75:                                               ; preds = %54, %91
  %76 = phi double [ %95, %91 ], [ %55, %54 ]
  %77 = phi i8 [ %94, %91 ], [ 8, %54 ]
  %78 = phi i8 [ %93, %91 ], [ 0, %54 ]
  %79 = phi double [ %83, %91 ], [ %51, %54 ]
  %80 = phi ptr [ %92, %91 ], [ %52, %54 ]
  %81 = fcmp fast ult double %79, %76
  %82 = select i1 %81, double 0.000000e+00, double %76
  %83 = fsub fast double %79, %82
  %84 = select i1 %81, i8 0, i8 %77
  %85 = or i8 %84, %78
  %86 = icmp eq i8 %77, 1
  br i1 %86, label %87, label %89

87:                                               ; preds = %75
  store i8 %85, ptr %80, align 1, !tbaa !17
  %88 = getelementptr inbounds i8, ptr %80, i64 1
  br label %91

89:                                               ; preds = %75
  %90 = lshr i8 %77, 1
  br label %91

91:                                               ; preds = %89, %87
  %92 = phi ptr [ %88, %87 ], [ %80, %89 ]
  %93 = phi i8 [ 0, %87 ], [ %85, %89 ]
  %94 = phi i8 [ 8, %87 ], [ %90, %89 ]
  %95 = fmul fast double %76, 5.000000e-01
  %96 = fcmp fast ogt double %83, 0.000000e+00
  br i1 %96, label %75, label %97, !llvm.loop !212

97:                                               ; preds = %91, %56
  %98 = phi ptr [ %70, %56 ], [ %92, %91 ]
  %99 = phi i8 [ %71, %56 ], [ %93, %91 ]
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds i8, ptr %98, i64 1
  br i1 %7, label %104, label %103

103:                                              ; preds = %101
  store i8 %99, ptr %98, align 1, !tbaa !17
  br label %104

104:                                              ; preds = %101, %50, %97, %103, %21
  %105 = phi ptr [ %22, %21 ], [ %102, %103 ], [ %98, %97 ], [ %52, %50 ], [ %102, %101 ]
  %106 = icmp ugt ptr %105, %2
  %107 = ptrtoint ptr %105 to i64
  %108 = ptrtoint ptr %2 to i64
  %109 = sub i64 %107, %108
  %110 = icmp slt i64 %109, 17
  %111 = and i1 %106, %110
  %112 = icmp eq ptr %105, %3
  %113 = or i1 %7, %112
  %114 = and i1 %113, %111
  br i1 %114, label %116, label %115

115:                                              ; preds = %104
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.106) #17
  br label %116

116:                                              ; preds = %104, %115
  ret ptr %105
}

declare i32 @Perl_my_snprintf(ptr noundef, i64 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ptr_table_new() local_unnamed_addr #1 {
  %1 = tail call ptr @Perl_safesysmalloc(i64 noundef 48) #17
  %2 = getelementptr inbounds %struct.ptr_tbl, ptr %1, i64 0, i32 1
  store i64 511, ptr %2, align 8, !tbaa !213
  %3 = getelementptr inbounds %struct.ptr_tbl, ptr %1, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %3, i8 0, i64 32, i1 false)
  %4 = tail call ptr @Perl_safesyscalloc(i64 noundef 512, i64 noundef 8) #17
  store ptr %4, ptr %1, align 8, !tbaa !215
  ret ptr %1
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @Perl_ptr_table_fetch(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #14 {
  %3 = load ptr, ptr %0, align 8, !tbaa !215
  %4 = getelementptr i8, ptr %0, i64 8
  %5 = load i64, ptr %4, align 8, !tbaa !213
  %6 = ptrtoint ptr %1 to i64
  %7 = lshr i64 %6, 3
  %8 = lshr i64 %6, 10
  %9 = xor i64 %7, %8
  %10 = lshr i64 %6, 20
  %11 = xor i64 %9, %10
  %12 = and i64 %5, %11
  %13 = getelementptr inbounds ptr, ptr %3, i64 %12
  br label %14

14:                                               ; preds = %18, %2
  %15 = phi ptr [ %13, %2 ], [ %16, %18 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !9
  %17 = icmp eq ptr %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.ptr_tbl_ent, ptr %16, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !216
  %21 = icmp eq ptr %20, %1
  br i1 %21, label %22, label %14, !llvm.loop !218

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.ptr_tbl_ent, ptr %16, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !219
  br label %25

25:                                               ; preds = %14, %22
  %26 = phi ptr [ %24, %22 ], [ null, %14 ]
  ret ptr %26
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_ptr_table_store(ptr nocapture noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #1 {
  %4 = load ptr, ptr %0, align 8, !tbaa !215
  %5 = getelementptr i8, ptr %0, i64 8
  %6 = load i64, ptr %5, align 8, !tbaa !213
  %7 = ptrtoint ptr %1 to i64
  %8 = lshr i64 %7, 3
  %9 = lshr i64 %7, 10
  %10 = xor i64 %8, %9
  %11 = lshr i64 %7, 20
  %12 = xor i64 %10, %11
  %13 = and i64 %6, %12
  %14 = getelementptr inbounds ptr, ptr %4, i64 %13
  br label %15

15:                                               ; preds = %19, %3
  %16 = phi ptr [ %14, %3 ], [ %17, %19 ]
  %17 = load ptr, ptr %16, align 8, !tbaa !9
  %18 = icmp eq ptr %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.ptr_tbl_ent, ptr %17, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !216
  %22 = icmp eq ptr %21, %1
  br i1 %22, label %23, label %15, !llvm.loop !218

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.ptr_tbl_ent, ptr %17, i64 0, i32 2
  store ptr %2, ptr %24, align 8, !tbaa !219
  br label %94

25:                                               ; preds = %15
  %26 = getelementptr inbounds %struct.ptr_tbl, ptr %0, i64 0, i32 4
  %27 = load ptr, ptr %26, align 8, !tbaa !220
  %28 = getelementptr inbounds %struct.ptr_tbl, ptr %0, i64 0, i32 5
  %29 = load ptr, ptr %28, align 8, !tbaa !221
  %30 = icmp eq ptr %27, %29
  br i1 %30, label %31, label %38

31:                                               ; preds = %25
  %32 = tail call ptr @Perl_safesysmalloc(i64 noundef 8192) #17
  %33 = getelementptr inbounds %struct.ptr_tbl, ptr %0, i64 0, i32 3
  %34 = load ptr, ptr %33, align 8, !tbaa !222
  store ptr %34, ptr %32, align 8, !tbaa !223
  store ptr %32, ptr %33, align 8, !tbaa !222
  %35 = getelementptr inbounds %struct.ptr_tbl_arena, ptr %32, i64 0, i32 1
  %36 = getelementptr inbounds %struct.ptr_tbl_arena, ptr %32, i64 1
  store ptr %36, ptr %28, align 8, !tbaa !221
  %37 = load ptr, ptr %0, align 8, !tbaa !215
  br label %38

38:                                               ; preds = %31, %25
  %39 = phi ptr [ %37, %31 ], [ %4, %25 ]
  %40 = phi ptr [ %35, %31 ], [ %27, %25 ]
  %41 = getelementptr inbounds %struct.ptr_tbl_ent, ptr %40, i64 1
  store ptr %41, ptr %26, align 8, !tbaa !220
  %42 = getelementptr inbounds %struct.ptr_tbl_ent, ptr %40, i64 0, i32 1
  store ptr %1, ptr %42, align 8, !tbaa !216
  %43 = getelementptr inbounds %struct.ptr_tbl_ent, ptr %40, i64 0, i32 2
  store ptr %2, ptr %43, align 8, !tbaa !219
  %44 = getelementptr inbounds ptr, ptr %39, i64 %13
  %45 = load ptr, ptr %44, align 8, !tbaa !9
  store ptr %45, ptr %40, align 8, !tbaa !225
  store ptr %40, ptr %44, align 8, !tbaa !9
  %46 = getelementptr inbounds %struct.ptr_tbl, ptr %0, i64 0, i32 2
  %47 = load i64, ptr %46, align 8, !tbaa !226
  %48 = add i64 %47, 1
  store i64 %48, ptr %46, align 8, !tbaa !226
  %49 = load ptr, ptr %40, align 8, !tbaa !225
  %50 = icmp eq ptr %49, null
  br i1 %50, label %94, label %51

51:                                               ; preds = %38
  %52 = load i64, ptr %5, align 8, !tbaa !213
  %53 = icmp ugt i64 %48, %52
  br i1 %53, label %54, label %94

54:                                               ; preds = %51
  %55 = load ptr, ptr %0, align 8, !tbaa !215
  %56 = add nuw i64 %52, 1
  %57 = shl i64 %56, 1
  %58 = shl i64 %56, 4
  %59 = tail call ptr @Perl_safesysrealloc(ptr noundef %55, i64 noundef %58) #17
  %60 = getelementptr inbounds ptr, ptr %59, i64 %56
  %61 = shl i64 %56, 3
  tail call void @llvm.memset.p0.i64(ptr nonnull align 1 %60, i8 0, i64 %61, i1 false)
  %62 = add i64 %57, -1
  store i64 %62, ptr %5, align 8, !tbaa !213
  store ptr %59, ptr %0, align 8, !tbaa !215
  br label %63

63:                                               ; preds = %54, %90
  %64 = phi ptr [ %92, %90 ], [ %59, %54 ]
  %65 = phi i64 [ %91, %90 ], [ 0, %54 ]
  %66 = load ptr, ptr %64, align 8, !tbaa !9
  %67 = icmp eq ptr %66, null
  br i1 %67, label %90, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds ptr, ptr %64, i64 %56
  br label %70

70:                                               ; preds = %86, %68
  %71 = phi ptr [ %64, %68 ], [ %87, %86 ]
  %72 = phi ptr [ %66, %68 ], [ %88, %86 ]
  %73 = getelementptr inbounds %struct.ptr_tbl_ent, ptr %72, i64 0, i32 1
  %74 = load ptr, ptr %73, align 8, !tbaa !216
  %75 = ptrtoint ptr %74 to i64
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 10
  %78 = xor i64 %76, %77
  %79 = lshr i64 %75, 20
  %80 = xor i64 %78, %79
  %81 = and i64 %80, %62
  %82 = icmp eq i64 %81, %65
  br i1 %82, label %86, label %83

83:                                               ; preds = %70
  %84 = load ptr, ptr %72, align 8, !tbaa !225
  store ptr %84, ptr %71, align 8, !tbaa !9
  %85 = load ptr, ptr %69, align 8, !tbaa !9
  store ptr %85, ptr %72, align 8, !tbaa !225
  store ptr %72, ptr %69, align 8, !tbaa !9
  br label %86

86:                                               ; preds = %83, %70
  %87 = phi ptr [ %71, %83 ], [ %72, %70 ]
  %88 = load ptr, ptr %87, align 8, !tbaa !9
  %89 = icmp eq ptr %88, null
  br i1 %89, label %90, label %70, !llvm.loop !227

90:                                               ; preds = %86, %63
  %91 = add nuw i64 %65, 1
  %92 = getelementptr inbounds ptr, ptr %64, i64 1
  %93 = icmp eq i64 %65, %52
  br i1 %93, label %94, label %63, !llvm.loop !228

94:                                               ; preds = %90, %38, %51, %23
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_ptr_table_split(ptr nocapture noundef %0) local_unnamed_addr #1 {
  %2 = load ptr, ptr %0, align 8, !tbaa !215
  %3 = getelementptr inbounds %struct.ptr_tbl, ptr %0, i64 0, i32 1
  %4 = load i64, ptr %3, align 8, !tbaa !213
  %5 = add i64 %4, 1
  %6 = shl i64 %5, 1
  %7 = shl i64 %5, 4
  %8 = tail call ptr @Perl_safesysrealloc(ptr noundef %2, i64 noundef %7) #17
  %9 = getelementptr inbounds ptr, ptr %8, i64 %5
  %10 = shl i64 %5, 3
  tail call void @llvm.memset.p0.i64(ptr align 1 %9, i8 0, i64 %10, i1 false)
  %11 = add i64 %6, -1
  store i64 %11, ptr %3, align 8, !tbaa !213
  store ptr %8, ptr %0, align 8, !tbaa !215
  %12 = icmp eq i64 %5, 0
  br i1 %12, label %44, label %13

13:                                               ; preds = %1, %40
  %14 = phi ptr [ %42, %40 ], [ %8, %1 ]
  %15 = phi i64 [ %41, %40 ], [ 0, %1 ]
  %16 = load ptr, ptr %14, align 8, !tbaa !9
  %17 = icmp eq ptr %16, null
  br i1 %17, label %40, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds ptr, ptr %14, i64 %5
  br label %20

20:                                               ; preds = %36, %18
  %21 = phi ptr [ %14, %18 ], [ %37, %36 ]
  %22 = phi ptr [ %16, %18 ], [ %38, %36 ]
  %23 = getelementptr inbounds %struct.ptr_tbl_ent, ptr %22, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !216
  %25 = ptrtoint ptr %24 to i64
  %26 = lshr i64 %25, 3
  %27 = lshr i64 %25, 10
  %28 = xor i64 %26, %27
  %29 = lshr i64 %25, 20
  %30 = xor i64 %28, %29
  %31 = and i64 %30, %11
  %32 = icmp eq i64 %31, %15
  br i1 %32, label %36, label %33

33:                                               ; preds = %20
  %34 = load ptr, ptr %22, align 8, !tbaa !225
  store ptr %34, ptr %21, align 8, !tbaa !9
  %35 = load ptr, ptr %19, align 8, !tbaa !9
  store ptr %35, ptr %22, align 8, !tbaa !225
  store ptr %22, ptr %19, align 8, !tbaa !9
  br label %36

36:                                               ; preds = %20, %33
  %37 = phi ptr [ %21, %33 ], [ %22, %20 ]
  %38 = load ptr, ptr %37, align 8, !tbaa !9
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %20, !llvm.loop !227

40:                                               ; preds = %36, %13
  %41 = add nuw i64 %15, 1
  %42 = getelementptr inbounds ptr, ptr %14, i64 1
  %43 = icmp eq i64 %15, %4
  br i1 %43, label %44, label %13, !llvm.loop !228

44:                                               ; preds = %40, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_ptr_table_clear(ptr noundef %0) local_unnamed_addr #1 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %21, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.ptr_tbl, ptr %0, i64 0, i32 2
  %5 = load i64, ptr %4, align 8, !tbaa !226
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.ptr_tbl, ptr %0, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !222
  %10 = load ptr, ptr %0, align 8, !tbaa !215
  %11 = getelementptr inbounds %struct.ptr_tbl, ptr %0, i64 0, i32 1
  %12 = load i64, ptr %11, align 8, !tbaa !213
  %13 = shl i64 %12, 3
  %14 = add i64 %13, 8
  tail call void @llvm.memset.p0.i64(ptr align 1 %10, i8 0, i64 %14, i1 false)
  %15 = icmp eq ptr %9, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %7, %16
  %17 = phi ptr [ %18, %16 ], [ %9, %7 ]
  %18 = load ptr, ptr %17, align 8, !tbaa !223
  tail call void @Perl_safesysfree(ptr noundef nonnull %17) #17
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %16, !llvm.loop !229

20:                                               ; preds = %16, %7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %4, i8 0, i64 32, i1 false)
  br label %21

21:                                               ; preds = %20, %3, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_ptr_table_free(ptr noundef %0) local_unnamed_addr #1 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %13, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.ptr_tbl, ptr %0, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !222
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3, %7
  %8 = phi ptr [ %9, %7 ], [ %5, %3 ]
  %9 = load ptr, ptr %8, align 8, !tbaa !223
  tail call void @Perl_safesysfree(ptr noundef nonnull %8) #17
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %7, !llvm.loop !230

11:                                               ; preds = %7, %3
  %12 = load ptr, ptr %0, align 8, !tbaa !215
  tail call void @Perl_safesysfree(ptr noundef %12) #17
  tail call void @Perl_safesysfree(ptr noundef nonnull %0) #17
  br label %13

13:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_init_constants() local_unnamed_addr #1 {
  store i32 2147483647, ptr getelementptr inbounds (%struct.sv, ptr @PL_sv_undef, i64 0, i32 1), align 8, !tbaa !13
  store i32 134283264, ptr getelementptr inbounds (%struct.sv, ptr @PL_sv_undef, i64 0, i32 2), align 4, !tbaa !16
  store ptr null, ptr @PL_sv_undef, align 8, !tbaa !26
  %1 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_body_roots, i64 0, i64 6), align 16, !tbaa !9
  %2 = icmp eq ptr %1, null
  br i1 %2, label %3, label %130

3:                                                ; preds = %0
  %4 = load ptr, ptr @PL_body_arenas, align 8, !tbaa !9
  %5 = icmp eq ptr %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.arena_set, ptr %4, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !29
  %9 = getelementptr inbounds %struct.arena_set, ptr %4, i64 0, i32 1
  %10 = load i32, ptr %9, align 8, !tbaa !37
  %11 = icmp ult i32 %8, %10
  br i1 %11, label %17, label %12

12:                                               ; preds = %6, %3
  %13 = tail call ptr @Perl_safesyscalloc(i64 noundef 1, i64 noundef 4072) #17
  %14 = getelementptr inbounds %struct.arena_set, ptr %13, i64 0, i32 1
  store i32 169, ptr %14, align 8, !tbaa !37
  store ptr %4, ptr %13, align 8, !tbaa !35
  store ptr %13, ptr @PL_body_arenas, align 8, !tbaa !9
  %15 = getelementptr inbounds %struct.arena_set, ptr %13, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !29
  br label %17

17:                                               ; preds = %12, %6
  %18 = phi i32 [ %16, %12 ], [ %8, %6 ]
  %19 = phi ptr [ %13, %12 ], [ %4, %6 ]
  %20 = getelementptr inbounds %struct.arena_set, ptr %19, i64 0, i32 2
  %21 = add i32 %18, 1
  store i32 %21, ptr %20, align 4, !tbaa !29
  %22 = zext i32 %18 to i64
  %23 = getelementptr inbounds %struct.arena_set, ptr %19, i64 0, i32 3, i64 %22
  %24 = tail call ptr @Perl_safesysmalloc(i64 noundef 3296) #17
  store ptr %24, ptr %23, align 8, !tbaa !31
  %25 = getelementptr inbounds %struct.arena_set, ptr %19, i64 0, i32 3, i64 %22, i32 1
  store i64 3296, ptr %25, align 8, !tbaa !38
  %26 = getelementptr inbounds %struct.arena_set, ptr %19, i64 0, i32 3, i64 %22, i32 2
  store i32 6, ptr %26, align 8, !tbaa !39
  store ptr %24, ptr getelementptr inbounds ([16 x ptr], ptr @PL_body_roots, i64 0, i64 6), align 16, !tbaa !9
  %27 = getelementptr inbounds i8, ptr %24, i64 32
  store ptr %27, ptr %24, align 8, !tbaa !9
  %28 = getelementptr inbounds i8, ptr %24, i64 64
  store ptr %28, ptr %27, align 8, !tbaa !9
  %29 = getelementptr inbounds i8, ptr %24, i64 96
  store ptr %29, ptr %28, align 8, !tbaa !9
  %30 = getelementptr inbounds i8, ptr %24, i64 128
  store ptr %30, ptr %29, align 8, !tbaa !9
  %31 = getelementptr inbounds i8, ptr %24, i64 160
  store ptr %31, ptr %30, align 8, !tbaa !9
  %32 = getelementptr inbounds i8, ptr %24, i64 192
  store ptr %32, ptr %31, align 8, !tbaa !9
  %33 = getelementptr inbounds i8, ptr %24, i64 224
  store ptr %33, ptr %32, align 8, !tbaa !9
  %34 = getelementptr inbounds i8, ptr %24, i64 256
  store ptr %34, ptr %33, align 8, !tbaa !9
  %35 = getelementptr inbounds i8, ptr %24, i64 288
  store ptr %35, ptr %34, align 8, !tbaa !9
  %36 = getelementptr inbounds i8, ptr %24, i64 320
  store ptr %36, ptr %35, align 8, !tbaa !9
  %37 = getelementptr inbounds i8, ptr %24, i64 352
  store ptr %37, ptr %36, align 8, !tbaa !9
  %38 = getelementptr inbounds i8, ptr %24, i64 384
  store ptr %38, ptr %37, align 8, !tbaa !9
  %39 = getelementptr inbounds i8, ptr %24, i64 416
  store ptr %39, ptr %38, align 8, !tbaa !9
  %40 = getelementptr inbounds i8, ptr %24, i64 448
  store ptr %40, ptr %39, align 8, !tbaa !9
  %41 = getelementptr inbounds i8, ptr %24, i64 480
  store ptr %41, ptr %40, align 8, !tbaa !9
  %42 = getelementptr inbounds i8, ptr %24, i64 512
  store ptr %42, ptr %41, align 8, !tbaa !9
  %43 = getelementptr inbounds i8, ptr %24, i64 544
  store ptr %43, ptr %42, align 8, !tbaa !9
  %44 = getelementptr inbounds i8, ptr %24, i64 576
  store ptr %44, ptr %43, align 8, !tbaa !9
  %45 = getelementptr inbounds i8, ptr %24, i64 608
  store ptr %45, ptr %44, align 8, !tbaa !9
  %46 = getelementptr inbounds i8, ptr %24, i64 640
  store ptr %46, ptr %45, align 8, !tbaa !9
  %47 = getelementptr inbounds i8, ptr %24, i64 672
  store ptr %47, ptr %46, align 8, !tbaa !9
  %48 = getelementptr inbounds i8, ptr %24, i64 704
  store ptr %48, ptr %47, align 8, !tbaa !9
  %49 = getelementptr inbounds i8, ptr %24, i64 736
  store ptr %49, ptr %48, align 8, !tbaa !9
  %50 = getelementptr inbounds i8, ptr %24, i64 768
  store ptr %50, ptr %49, align 8, !tbaa !9
  %51 = getelementptr inbounds i8, ptr %24, i64 800
  store ptr %51, ptr %50, align 8, !tbaa !9
  %52 = getelementptr inbounds i8, ptr %24, i64 832
  store ptr %52, ptr %51, align 8, !tbaa !9
  %53 = getelementptr inbounds i8, ptr %24, i64 864
  store ptr %53, ptr %52, align 8, !tbaa !9
  %54 = getelementptr inbounds i8, ptr %24, i64 896
  store ptr %54, ptr %53, align 8, !tbaa !9
  %55 = getelementptr inbounds i8, ptr %24, i64 928
  store ptr %55, ptr %54, align 8, !tbaa !9
  %56 = getelementptr inbounds i8, ptr %24, i64 960
  store ptr %56, ptr %55, align 8, !tbaa !9
  %57 = getelementptr inbounds i8, ptr %24, i64 992
  store ptr %57, ptr %56, align 8, !tbaa !9
  %58 = getelementptr inbounds i8, ptr %24, i64 1024
  store ptr %58, ptr %57, align 8, !tbaa !9
  %59 = getelementptr inbounds i8, ptr %24, i64 1056
  store ptr %59, ptr %58, align 8, !tbaa !9
  %60 = getelementptr inbounds i8, ptr %24, i64 1088
  store ptr %60, ptr %59, align 8, !tbaa !9
  %61 = getelementptr inbounds i8, ptr %24, i64 1120
  store ptr %61, ptr %60, align 8, !tbaa !9
  %62 = getelementptr inbounds i8, ptr %24, i64 1152
  store ptr %62, ptr %61, align 8, !tbaa !9
  %63 = getelementptr inbounds i8, ptr %24, i64 1184
  store ptr %63, ptr %62, align 8, !tbaa !9
  %64 = getelementptr inbounds i8, ptr %24, i64 1216
  store ptr %64, ptr %63, align 8, !tbaa !9
  %65 = getelementptr inbounds i8, ptr %24, i64 1248
  store ptr %65, ptr %64, align 8, !tbaa !9
  %66 = getelementptr inbounds i8, ptr %24, i64 1280
  store ptr %66, ptr %65, align 8, !tbaa !9
  %67 = getelementptr inbounds i8, ptr %24, i64 1312
  store ptr %67, ptr %66, align 8, !tbaa !9
  %68 = getelementptr inbounds i8, ptr %24, i64 1344
  store ptr %68, ptr %67, align 8, !tbaa !9
  %69 = getelementptr inbounds i8, ptr %24, i64 1376
  store ptr %69, ptr %68, align 8, !tbaa !9
  %70 = getelementptr inbounds i8, ptr %24, i64 1408
  store ptr %70, ptr %69, align 8, !tbaa !9
  %71 = getelementptr inbounds i8, ptr %24, i64 1440
  store ptr %71, ptr %70, align 8, !tbaa !9
  %72 = getelementptr inbounds i8, ptr %24, i64 1472
  store ptr %72, ptr %71, align 8, !tbaa !9
  %73 = getelementptr inbounds i8, ptr %24, i64 1504
  store ptr %73, ptr %72, align 8, !tbaa !9
  %74 = getelementptr inbounds i8, ptr %24, i64 1536
  store ptr %74, ptr %73, align 8, !tbaa !9
  %75 = getelementptr inbounds i8, ptr %24, i64 1568
  store ptr %75, ptr %74, align 8, !tbaa !9
  %76 = getelementptr inbounds i8, ptr %24, i64 1600
  store ptr %76, ptr %75, align 8, !tbaa !9
  %77 = getelementptr inbounds i8, ptr %24, i64 1632
  store ptr %77, ptr %76, align 8, !tbaa !9
  %78 = getelementptr inbounds i8, ptr %24, i64 1664
  store ptr %78, ptr %77, align 8, !tbaa !9
  %79 = getelementptr inbounds i8, ptr %24, i64 1696
  store ptr %79, ptr %78, align 8, !tbaa !9
  %80 = getelementptr inbounds i8, ptr %24, i64 1728
  store ptr %80, ptr %79, align 8, !tbaa !9
  %81 = getelementptr inbounds i8, ptr %24, i64 1760
  store ptr %81, ptr %80, align 8, !tbaa !9
  %82 = getelementptr inbounds i8, ptr %24, i64 1792
  store ptr %82, ptr %81, align 8, !tbaa !9
  %83 = getelementptr inbounds i8, ptr %24, i64 1824
  store ptr %83, ptr %82, align 8, !tbaa !9
  %84 = getelementptr inbounds i8, ptr %24, i64 1856
  store ptr %84, ptr %83, align 8, !tbaa !9
  %85 = getelementptr inbounds i8, ptr %24, i64 1888
  store ptr %85, ptr %84, align 8, !tbaa !9
  %86 = getelementptr inbounds i8, ptr %24, i64 1920
  store ptr %86, ptr %85, align 8, !tbaa !9
  %87 = getelementptr inbounds i8, ptr %24, i64 1952
  store ptr %87, ptr %86, align 8, !tbaa !9
  %88 = getelementptr inbounds i8, ptr %24, i64 1984
  store ptr %88, ptr %87, align 8, !tbaa !9
  %89 = getelementptr inbounds i8, ptr %24, i64 2016
  store ptr %89, ptr %88, align 8, !tbaa !9
  %90 = getelementptr inbounds i8, ptr %24, i64 2048
  store ptr %90, ptr %89, align 8, !tbaa !9
  %91 = getelementptr inbounds i8, ptr %24, i64 2080
  store ptr %91, ptr %90, align 8, !tbaa !9
  %92 = getelementptr inbounds i8, ptr %24, i64 2112
  store ptr %92, ptr %91, align 8, !tbaa !9
  %93 = getelementptr inbounds i8, ptr %24, i64 2144
  store ptr %93, ptr %92, align 8, !tbaa !9
  %94 = getelementptr inbounds i8, ptr %24, i64 2176
  store ptr %94, ptr %93, align 8, !tbaa !9
  %95 = getelementptr inbounds i8, ptr %24, i64 2208
  store ptr %95, ptr %94, align 8, !tbaa !9
  %96 = getelementptr inbounds i8, ptr %24, i64 2240
  store ptr %96, ptr %95, align 8, !tbaa !9
  %97 = getelementptr inbounds i8, ptr %24, i64 2272
  store ptr %97, ptr %96, align 8, !tbaa !9
  %98 = getelementptr inbounds i8, ptr %24, i64 2304
  store ptr %98, ptr %97, align 8, !tbaa !9
  %99 = getelementptr inbounds i8, ptr %24, i64 2336
  store ptr %99, ptr %98, align 8, !tbaa !9
  %100 = getelementptr inbounds i8, ptr %24, i64 2368
  store ptr %100, ptr %99, align 8, !tbaa !9
  %101 = getelementptr inbounds i8, ptr %24, i64 2400
  store ptr %101, ptr %100, align 8, !tbaa !9
  %102 = getelementptr inbounds i8, ptr %24, i64 2432
  store ptr %102, ptr %101, align 8, !tbaa !9
  %103 = getelementptr inbounds i8, ptr %24, i64 2464
  store ptr %103, ptr %102, align 8, !tbaa !9
  %104 = getelementptr inbounds i8, ptr %24, i64 2496
  store ptr %104, ptr %103, align 8, !tbaa !9
  %105 = getelementptr inbounds i8, ptr %24, i64 2528
  store ptr %105, ptr %104, align 8, !tbaa !9
  %106 = getelementptr inbounds i8, ptr %24, i64 2560
  store ptr %106, ptr %105, align 8, !tbaa !9
  %107 = getelementptr inbounds i8, ptr %24, i64 2592
  store ptr %107, ptr %106, align 8, !tbaa !9
  %108 = getelementptr inbounds i8, ptr %24, i64 2624
  store ptr %108, ptr %107, align 8, !tbaa !9
  %109 = getelementptr inbounds i8, ptr %24, i64 2656
  store ptr %109, ptr %108, align 8, !tbaa !9
  %110 = getelementptr inbounds i8, ptr %24, i64 2688
  store ptr %110, ptr %109, align 8, !tbaa !9
  %111 = getelementptr inbounds i8, ptr %24, i64 2720
  store ptr %111, ptr %110, align 8, !tbaa !9
  %112 = getelementptr inbounds i8, ptr %24, i64 2752
  store ptr %112, ptr %111, align 8, !tbaa !9
  %113 = getelementptr inbounds i8, ptr %24, i64 2784
  store ptr %113, ptr %112, align 8, !tbaa !9
  %114 = getelementptr inbounds i8, ptr %24, i64 2816
  store ptr %114, ptr %113, align 8, !tbaa !9
  %115 = getelementptr inbounds i8, ptr %24, i64 2848
  store ptr %115, ptr %114, align 8, !tbaa !9
  %116 = getelementptr inbounds i8, ptr %24, i64 2880
  store ptr %116, ptr %115, align 8, !tbaa !9
  %117 = getelementptr inbounds i8, ptr %24, i64 2912
  store ptr %117, ptr %116, align 8, !tbaa !9
  %118 = getelementptr inbounds i8, ptr %24, i64 2944
  store ptr %118, ptr %117, align 8, !tbaa !9
  %119 = getelementptr inbounds i8, ptr %24, i64 2976
  store ptr %119, ptr %118, align 8, !tbaa !9
  %120 = getelementptr inbounds i8, ptr %24, i64 3008
  store ptr %120, ptr %119, align 8, !tbaa !9
  %121 = getelementptr inbounds i8, ptr %24, i64 3040
  store ptr %121, ptr %120, align 8, !tbaa !9
  %122 = getelementptr inbounds i8, ptr %24, i64 3072
  store ptr %122, ptr %121, align 8, !tbaa !9
  %123 = getelementptr inbounds i8, ptr %24, i64 3104
  store ptr %123, ptr %122, align 8, !tbaa !9
  %124 = getelementptr inbounds i8, ptr %24, i64 3136
  store ptr %124, ptr %123, align 8, !tbaa !9
  %125 = getelementptr inbounds i8, ptr %24, i64 3168
  store ptr %125, ptr %124, align 8, !tbaa !9
  %126 = getelementptr inbounds i8, ptr %24, i64 3200
  store ptr %126, ptr %125, align 8, !tbaa !9
  %127 = getelementptr inbounds i8, ptr %24, i64 3232
  store ptr %127, ptr %126, align 8, !tbaa !9
  %128 = getelementptr inbounds i8, ptr %24, i64 3264
  store ptr %128, ptr %127, align 8, !tbaa !9
  store ptr null, ptr %128, align 8, !tbaa !9
  %129 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_body_roots, i64 0, i64 6), align 16, !tbaa !9
  br label %130

130:                                              ; preds = %0, %17
  %131 = phi ptr [ %129, %17 ], [ %1, %0 ]
  %132 = load ptr, ptr %131, align 8, !tbaa !9
  store ptr %132, ptr getelementptr inbounds ([16 x ptr], ptr @PL_body_roots, i64 0, i64 6), align 16, !tbaa !9
  %133 = getelementptr inbounds i8, ptr %131, i64 -16
  store ptr %133, ptr @PL_sv_no, align 8, !tbaa !26
  store i32 2147483647, ptr getelementptr inbounds (%struct.sv, ptr @PL_sv_no, i64 0, i32 1), align 8, !tbaa !13
  store i32 134313734, ptr getelementptr inbounds (%struct.sv, ptr @PL_sv_no, i64 0, i32 2), align 4, !tbaa !16
  %134 = icmp eq ptr %132, null
  br i1 %134, label %135, label %263

135:                                              ; preds = %130
  %136 = load ptr, ptr @PL_body_arenas, align 8, !tbaa !9
  %137 = icmp eq ptr %136, null
  br i1 %137, label %144, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %struct.arena_set, ptr %136, i64 0, i32 2
  %140 = load i32, ptr %139, align 4, !tbaa !29
  %141 = getelementptr inbounds %struct.arena_set, ptr %136, i64 0, i32 1
  %142 = load i32, ptr %141, align 8, !tbaa !37
  %143 = icmp ult i32 %140, %142
  br i1 %143, label %149, label %144

144:                                              ; preds = %138, %135
  %145 = tail call ptr @Perl_safesyscalloc(i64 noundef 1, i64 noundef 4072) #17
  %146 = getelementptr inbounds %struct.arena_set, ptr %145, i64 0, i32 1
  store i32 169, ptr %146, align 8, !tbaa !37
  store ptr %136, ptr %145, align 8, !tbaa !35
  store ptr %145, ptr @PL_body_arenas, align 8, !tbaa !9
  %147 = getelementptr inbounds %struct.arena_set, ptr %145, i64 0, i32 2
  %148 = load i32, ptr %147, align 4, !tbaa !29
  br label %149

149:                                              ; preds = %144, %138
  %150 = phi i32 [ %148, %144 ], [ %140, %138 ]
  %151 = phi ptr [ %145, %144 ], [ %136, %138 ]
  %152 = getelementptr inbounds %struct.arena_set, ptr %151, i64 0, i32 2
  %153 = add i32 %150, 1
  store i32 %153, ptr %152, align 4, !tbaa !29
  %154 = zext i32 %150 to i64
  %155 = getelementptr inbounds %struct.arena_set, ptr %151, i64 0, i32 3, i64 %154
  %156 = tail call ptr @Perl_safesysmalloc(i64 noundef 3296) #17
  store ptr %156, ptr %155, align 8, !tbaa !31
  %157 = getelementptr inbounds %struct.arena_set, ptr %151, i64 0, i32 3, i64 %154, i32 1
  store i64 3296, ptr %157, align 8, !tbaa !38
  %158 = getelementptr inbounds %struct.arena_set, ptr %151, i64 0, i32 3, i64 %154, i32 2
  store i32 6, ptr %158, align 8, !tbaa !39
  store ptr %156, ptr getelementptr inbounds ([16 x ptr], ptr @PL_body_roots, i64 0, i64 6), align 16, !tbaa !9
  %159 = getelementptr inbounds i8, ptr %156, i64 32
  store ptr %159, ptr %156, align 8, !tbaa !9
  %160 = getelementptr inbounds i8, ptr %156, i64 64
  store ptr %160, ptr %159, align 8, !tbaa !9
  %161 = getelementptr inbounds i8, ptr %156, i64 96
  store ptr %161, ptr %160, align 8, !tbaa !9
  %162 = getelementptr inbounds i8, ptr %156, i64 128
  store ptr %162, ptr %161, align 8, !tbaa !9
  %163 = getelementptr inbounds i8, ptr %156, i64 160
  store ptr %163, ptr %162, align 8, !tbaa !9
  %164 = getelementptr inbounds i8, ptr %156, i64 192
  store ptr %164, ptr %163, align 8, !tbaa !9
  %165 = getelementptr inbounds i8, ptr %156, i64 224
  store ptr %165, ptr %164, align 8, !tbaa !9
  %166 = getelementptr inbounds i8, ptr %156, i64 256
  store ptr %166, ptr %165, align 8, !tbaa !9
  %167 = getelementptr inbounds i8, ptr %156, i64 288
  store ptr %167, ptr %166, align 8, !tbaa !9
  %168 = getelementptr inbounds i8, ptr %156, i64 320
  store ptr %168, ptr %167, align 8, !tbaa !9
  %169 = getelementptr inbounds i8, ptr %156, i64 352
  store ptr %169, ptr %168, align 8, !tbaa !9
  %170 = getelementptr inbounds i8, ptr %156, i64 384
  store ptr %170, ptr %169, align 8, !tbaa !9
  %171 = getelementptr inbounds i8, ptr %156, i64 416
  store ptr %171, ptr %170, align 8, !tbaa !9
  %172 = getelementptr inbounds i8, ptr %156, i64 448
  store ptr %172, ptr %171, align 8, !tbaa !9
  %173 = getelementptr inbounds i8, ptr %156, i64 480
  store ptr %173, ptr %172, align 8, !tbaa !9
  %174 = getelementptr inbounds i8, ptr %156, i64 512
  store ptr %174, ptr %173, align 8, !tbaa !9
  %175 = getelementptr inbounds i8, ptr %156, i64 544
  store ptr %175, ptr %174, align 8, !tbaa !9
  %176 = getelementptr inbounds i8, ptr %156, i64 576
  store ptr %176, ptr %175, align 8, !tbaa !9
  %177 = getelementptr inbounds i8, ptr %156, i64 608
  store ptr %177, ptr %176, align 8, !tbaa !9
  %178 = getelementptr inbounds i8, ptr %156, i64 640
  store ptr %178, ptr %177, align 8, !tbaa !9
  %179 = getelementptr inbounds i8, ptr %156, i64 672
  store ptr %179, ptr %178, align 8, !tbaa !9
  %180 = getelementptr inbounds i8, ptr %156, i64 704
  store ptr %180, ptr %179, align 8, !tbaa !9
  %181 = getelementptr inbounds i8, ptr %156, i64 736
  store ptr %181, ptr %180, align 8, !tbaa !9
  %182 = getelementptr inbounds i8, ptr %156, i64 768
  store ptr %182, ptr %181, align 8, !tbaa !9
  %183 = getelementptr inbounds i8, ptr %156, i64 800
  store ptr %183, ptr %182, align 8, !tbaa !9
  %184 = getelementptr inbounds i8, ptr %156, i64 832
  store ptr %184, ptr %183, align 8, !tbaa !9
  %185 = getelementptr inbounds i8, ptr %156, i64 864
  store ptr %185, ptr %184, align 8, !tbaa !9
  %186 = getelementptr inbounds i8, ptr %156, i64 896
  store ptr %186, ptr %185, align 8, !tbaa !9
  %187 = getelementptr inbounds i8, ptr %156, i64 928
  store ptr %187, ptr %186, align 8, !tbaa !9
  %188 = getelementptr inbounds i8, ptr %156, i64 960
  store ptr %188, ptr %187, align 8, !tbaa !9
  %189 = getelementptr inbounds i8, ptr %156, i64 992
  store ptr %189, ptr %188, align 8, !tbaa !9
  %190 = getelementptr inbounds i8, ptr %156, i64 1024
  store ptr %190, ptr %189, align 8, !tbaa !9
  %191 = getelementptr inbounds i8, ptr %156, i64 1056
  store ptr %191, ptr %190, align 8, !tbaa !9
  %192 = getelementptr inbounds i8, ptr %156, i64 1088
  store ptr %192, ptr %191, align 8, !tbaa !9
  %193 = getelementptr inbounds i8, ptr %156, i64 1120
  store ptr %193, ptr %192, align 8, !tbaa !9
  %194 = getelementptr inbounds i8, ptr %156, i64 1152
  store ptr %194, ptr %193, align 8, !tbaa !9
  %195 = getelementptr inbounds i8, ptr %156, i64 1184
  store ptr %195, ptr %194, align 8, !tbaa !9
  %196 = getelementptr inbounds i8, ptr %156, i64 1216
  store ptr %196, ptr %195, align 8, !tbaa !9
  %197 = getelementptr inbounds i8, ptr %156, i64 1248
  store ptr %197, ptr %196, align 8, !tbaa !9
  %198 = getelementptr inbounds i8, ptr %156, i64 1280
  store ptr %198, ptr %197, align 8, !tbaa !9
  %199 = getelementptr inbounds i8, ptr %156, i64 1312
  store ptr %199, ptr %198, align 8, !tbaa !9
  %200 = getelementptr inbounds i8, ptr %156, i64 1344
  store ptr %200, ptr %199, align 8, !tbaa !9
  %201 = getelementptr inbounds i8, ptr %156, i64 1376
  store ptr %201, ptr %200, align 8, !tbaa !9
  %202 = getelementptr inbounds i8, ptr %156, i64 1408
  store ptr %202, ptr %201, align 8, !tbaa !9
  %203 = getelementptr inbounds i8, ptr %156, i64 1440
  store ptr %203, ptr %202, align 8, !tbaa !9
  %204 = getelementptr inbounds i8, ptr %156, i64 1472
  store ptr %204, ptr %203, align 8, !tbaa !9
  %205 = getelementptr inbounds i8, ptr %156, i64 1504
  store ptr %205, ptr %204, align 8, !tbaa !9
  %206 = getelementptr inbounds i8, ptr %156, i64 1536
  store ptr %206, ptr %205, align 8, !tbaa !9
  %207 = getelementptr inbounds i8, ptr %156, i64 1568
  store ptr %207, ptr %206, align 8, !tbaa !9
  %208 = getelementptr inbounds i8, ptr %156, i64 1600
  store ptr %208, ptr %207, align 8, !tbaa !9
  %209 = getelementptr inbounds i8, ptr %156, i64 1632
  store ptr %209, ptr %208, align 8, !tbaa !9
  %210 = getelementptr inbounds i8, ptr %156, i64 1664
  store ptr %210, ptr %209, align 8, !tbaa !9
  %211 = getelementptr inbounds i8, ptr %156, i64 1696
  store ptr %211, ptr %210, align 8, !tbaa !9
  %212 = getelementptr inbounds i8, ptr %156, i64 1728
  store ptr %212, ptr %211, align 8, !tbaa !9
  %213 = getelementptr inbounds i8, ptr %156, i64 1760
  store ptr %213, ptr %212, align 8, !tbaa !9
  %214 = getelementptr inbounds i8, ptr %156, i64 1792
  store ptr %214, ptr %213, align 8, !tbaa !9
  %215 = getelementptr inbounds i8, ptr %156, i64 1824
  store ptr %215, ptr %214, align 8, !tbaa !9
  %216 = getelementptr inbounds i8, ptr %156, i64 1856
  store ptr %216, ptr %215, align 8, !tbaa !9
  %217 = getelementptr inbounds i8, ptr %156, i64 1888
  store ptr %217, ptr %216, align 8, !tbaa !9
  %218 = getelementptr inbounds i8, ptr %156, i64 1920
  store ptr %218, ptr %217, align 8, !tbaa !9
  %219 = getelementptr inbounds i8, ptr %156, i64 1952
  store ptr %219, ptr %218, align 8, !tbaa !9
  %220 = getelementptr inbounds i8, ptr %156, i64 1984
  store ptr %220, ptr %219, align 8, !tbaa !9
  %221 = getelementptr inbounds i8, ptr %156, i64 2016
  store ptr %221, ptr %220, align 8, !tbaa !9
  %222 = getelementptr inbounds i8, ptr %156, i64 2048
  store ptr %222, ptr %221, align 8, !tbaa !9
  %223 = getelementptr inbounds i8, ptr %156, i64 2080
  store ptr %223, ptr %222, align 8, !tbaa !9
  %224 = getelementptr inbounds i8, ptr %156, i64 2112
  store ptr %224, ptr %223, align 8, !tbaa !9
  %225 = getelementptr inbounds i8, ptr %156, i64 2144
  store ptr %225, ptr %224, align 8, !tbaa !9
  %226 = getelementptr inbounds i8, ptr %156, i64 2176
  store ptr %226, ptr %225, align 8, !tbaa !9
  %227 = getelementptr inbounds i8, ptr %156, i64 2208
  store ptr %227, ptr %226, align 8, !tbaa !9
  %228 = getelementptr inbounds i8, ptr %156, i64 2240
  store ptr %228, ptr %227, align 8, !tbaa !9
  %229 = getelementptr inbounds i8, ptr %156, i64 2272
  store ptr %229, ptr %228, align 8, !tbaa !9
  %230 = getelementptr inbounds i8, ptr %156, i64 2304
  store ptr %230, ptr %229, align 8, !tbaa !9
  %231 = getelementptr inbounds i8, ptr %156, i64 2336
  store ptr %231, ptr %230, align 8, !tbaa !9
  %232 = getelementptr inbounds i8, ptr %156, i64 2368
  store ptr %232, ptr %231, align 8, !tbaa !9
  %233 = getelementptr inbounds i8, ptr %156, i64 2400
  store ptr %233, ptr %232, align 8, !tbaa !9
  %234 = getelementptr inbounds i8, ptr %156, i64 2432
  store ptr %234, ptr %233, align 8, !tbaa !9
  %235 = getelementptr inbounds i8, ptr %156, i64 2464
  store ptr %235, ptr %234, align 8, !tbaa !9
  %236 = getelementptr inbounds i8, ptr %156, i64 2496
  store ptr %236, ptr %235, align 8, !tbaa !9
  %237 = getelementptr inbounds i8, ptr %156, i64 2528
  store ptr %237, ptr %236, align 8, !tbaa !9
  %238 = getelementptr inbounds i8, ptr %156, i64 2560
  store ptr %238, ptr %237, align 8, !tbaa !9
  %239 = getelementptr inbounds i8, ptr %156, i64 2592
  store ptr %239, ptr %238, align 8, !tbaa !9
  %240 = getelementptr inbounds i8, ptr %156, i64 2624
  store ptr %240, ptr %239, align 8, !tbaa !9
  %241 = getelementptr inbounds i8, ptr %156, i64 2656
  store ptr %241, ptr %240, align 8, !tbaa !9
  %242 = getelementptr inbounds i8, ptr %156, i64 2688
  store ptr %242, ptr %241, align 8, !tbaa !9
  %243 = getelementptr inbounds i8, ptr %156, i64 2720
  store ptr %243, ptr %242, align 8, !tbaa !9
  %244 = getelementptr inbounds i8, ptr %156, i64 2752
  store ptr %244, ptr %243, align 8, !tbaa !9
  %245 = getelementptr inbounds i8, ptr %156, i64 2784
  store ptr %245, ptr %244, align 8, !tbaa !9
  %246 = getelementptr inbounds i8, ptr %156, i64 2816
  store ptr %246, ptr %245, align 8, !tbaa !9
  %247 = getelementptr inbounds i8, ptr %156, i64 2848
  store ptr %247, ptr %246, align 8, !tbaa !9
  %248 = getelementptr inbounds i8, ptr %156, i64 2880
  store ptr %248, ptr %247, align 8, !tbaa !9
  %249 = getelementptr inbounds i8, ptr %156, i64 2912
  store ptr %249, ptr %248, align 8, !tbaa !9
  %250 = getelementptr inbounds i8, ptr %156, i64 2944
  store ptr %250, ptr %249, align 8, !tbaa !9
  %251 = getelementptr inbounds i8, ptr %156, i64 2976
  store ptr %251, ptr %250, align 8, !tbaa !9
  %252 = getelementptr inbounds i8, ptr %156, i64 3008
  store ptr %252, ptr %251, align 8, !tbaa !9
  %253 = getelementptr inbounds i8, ptr %156, i64 3040
  store ptr %253, ptr %252, align 8, !tbaa !9
  %254 = getelementptr inbounds i8, ptr %156, i64 3072
  store ptr %254, ptr %253, align 8, !tbaa !9
  %255 = getelementptr inbounds i8, ptr %156, i64 3104
  store ptr %255, ptr %254, align 8, !tbaa !9
  %256 = getelementptr inbounds i8, ptr %156, i64 3136
  store ptr %256, ptr %255, align 8, !tbaa !9
  %257 = getelementptr inbounds i8, ptr %156, i64 3168
  store ptr %257, ptr %256, align 8, !tbaa !9
  %258 = getelementptr inbounds i8, ptr %156, i64 3200
  store ptr %258, ptr %257, align 8, !tbaa !9
  %259 = getelementptr inbounds i8, ptr %156, i64 3232
  store ptr %259, ptr %258, align 8, !tbaa !9
  %260 = getelementptr inbounds i8, ptr %156, i64 3264
  store ptr %260, ptr %259, align 8, !tbaa !9
  store ptr null, ptr %260, align 8, !tbaa !9
  %261 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_body_roots, i64 0, i64 6), align 16, !tbaa !9
  %262 = load ptr, ptr @PL_sv_no, align 8, !tbaa !26
  br label %263

263:                                              ; preds = %130, %149
  %264 = phi ptr [ %262, %149 ], [ %133, %130 ]
  %265 = phi ptr [ %261, %149 ], [ %132, %130 ]
  %266 = load ptr, ptr %265, align 8, !tbaa !9
  store ptr %266, ptr getelementptr inbounds ([16 x ptr], ptr @PL_body_roots, i64 0, i64 6), align 16, !tbaa !9
  %267 = getelementptr inbounds i8, ptr %265, i64 -16
  store ptr %267, ptr @PL_sv_yes, align 8, !tbaa !26
  store i32 2147483647, ptr getelementptr inbounds (%struct.sv, ptr @PL_sv_yes, i64 0, i32 1), align 8, !tbaa !13
  store i32 134313734, ptr getelementptr inbounds (%struct.sv, ptr @PL_sv_yes, i64 0, i32 2), align 4, !tbaa !16
  store ptr @PL_No, ptr getelementptr inbounds (%struct.sv, ptr @PL_sv_no, i64 0, i32 3), align 8, !tbaa !17
  %268 = getelementptr inbounds %struct.xpv, ptr %264, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %268, i8 0, i64 32, i1 false)
  store ptr @PL_Yes, ptr getelementptr inbounds (%struct.sv, ptr @PL_sv_yes, i64 0, i32 3), align 8, !tbaa !17
  store i64 1, ptr %265, align 8, !tbaa !57
  %269 = getelementptr inbounds i8, ptr %265, i64 8
  store i64 0, ptr %269, align 8, !tbaa !17
  %270 = getelementptr inbounds i8, ptr %265, i64 16
  store i64 1, ptr %270, align 8, !tbaa !17
  %271 = getelementptr inbounds i8, ptr %265, i64 24
  store double 1.000000e+00, ptr %271, align 8, !tbaa !17
  store ptr @PL_No, ptr @PL_padname_const, align 8, !tbaa !231
  ret void
}

declare void @Perl_push_scope() local_unnamed_addr #3

declare ptr @Perl_new_stackinfo(i32 noundef, i32 noundef) local_unnamed_addr #3

declare void @Perl_save_strlen(ptr noundef) local_unnamed_addr #3

declare void @Perl_save_re_context() local_unnamed_addr #3

declare ptr @Perl_markstack_grow() local_unnamed_addr #3

declare ptr @Perl_stack_grow(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #3

declare i32 @Perl_call_method(ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @Perl_free_tmps() local_unnamed_addr #3

declare void @Perl_croak_popstack() local_unnamed_addr #3

declare void @Perl_pop_scope() local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i1 @Perl_sv_cat_decode(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr nocapture noundef %3, ptr noundef %4, i32 noundef %5) local_unnamed_addr #1 {
  %7 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = and i32 %8, 1024
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %207, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %13 = load i32, ptr %12, align 4, !tbaa !16
  %14 = and i32 %13, 1024
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %207, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !16
  %19 = and i32 %18, 2048
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %207, label %21

21:                                               ; preds = %16
  %22 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !9
  tail call void @Perl_push_scope() #17
  tail call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %23 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  store i64 %23, ptr @PL_tmps_floor, align 8, !tbaa !60
  tail call void @Perl_save_re_context() #17
  %24 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !9
  %25 = getelementptr inbounds i32, ptr %24, i64 1
  store ptr %25, ptr @PL_markstack_ptr, align 8, !tbaa !9
  %26 = load ptr, ptr @PL_markstack_max, align 8, !tbaa !9
  %27 = icmp eq ptr %25, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %21
  %29 = tail call ptr @Perl_markstack_grow() #17
  br label %30

30:                                               ; preds = %21, %28
  %31 = phi ptr [ %29, %28 ], [ %25, %21 ]
  %32 = load ptr, ptr @PL_stack_base, align 8, !tbaa !9
  %33 = ptrtoint ptr %22 to i64
  %34 = ptrtoint ptr %32 to i64
  %35 = sub i64 %33, %34
  %36 = lshr exact i64 %35, 3
  %37 = trunc i64 %36 to i32
  store i32 %37, ptr %31, align 4, !tbaa !25
  %38 = load ptr, ptr @PL_stack_max, align 8, !tbaa !9
  %39 = ptrtoint ptr %38 to i64
  %40 = sub i64 %39, %33
  %41 = icmp slt i64 %40, 48
  br i1 %41, label %42, label %44

42:                                               ; preds = %30
  %43 = tail call ptr @Perl_stack_grow(ptr noundef %22, ptr noundef %22, i64 noundef 6) #17
  br label %44

44:                                               ; preds = %30, %42
  %45 = phi ptr [ %43, %42 ], [ %22, %30 ]
  %46 = getelementptr inbounds ptr, ptr %45, i64 1
  store ptr %1, ptr %46, align 8, !tbaa !9
  %47 = getelementptr inbounds ptr, ptr %45, i64 2
  store ptr %0, ptr %47, align 8, !tbaa !9
  %48 = getelementptr inbounds ptr, ptr %45, i64 3
  store ptr %2, ptr %48, align 8, !tbaa !9
  %49 = load i32, ptr %3, align 4, !tbaa !25
  %50 = sext i32 %49 to i64
  %51 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %52 = icmp eq ptr %51, null
  br i1 %52, label %53, label %82

53:                                               ; preds = %44
  %54 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %55 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %55, ptr %54, align 8, !tbaa !26
  %56 = getelementptr inbounds %struct.sv, ptr %54, i64 0, i32 1
  store i32 170, ptr %56, align 8, !tbaa !13
  %57 = getelementptr inbounds %struct.sv, ptr %54, i64 0, i32 2
  store i32 0, ptr %57, align 4, !tbaa !16
  store ptr %54, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %58 = getelementptr inbounds %struct.sv, ptr %54, i64 1
  store ptr %58, ptr @PL_sv_root, align 8, !tbaa !9
  br label %59

59:                                               ; preds = %59, %53
  %60 = phi ptr [ %58, %53 ], [ %77, %59 ]
  %61 = phi i64 [ 1, %53 ], [ %76, %59 ]
  %62 = getelementptr inbounds %struct.sv, ptr %60, i64 1
  store ptr %62, ptr %60, align 8, !tbaa !26
  %63 = getelementptr inbounds %struct.sv, ptr %54, i64 %61, i32 2
  store i32 255, ptr %63, align 4, !tbaa !16
  %64 = add nuw nsw i64 %61, 1
  %65 = getelementptr inbounds %struct.sv, ptr %54, i64 %64
  %66 = getelementptr inbounds %struct.sv, ptr %65, i64 1
  store ptr %66, ptr %65, align 8, !tbaa !26
  %67 = getelementptr inbounds %struct.sv, ptr %54, i64 %64, i32 2
  store i32 255, ptr %67, align 4, !tbaa !16
  %68 = add nuw nsw i64 %61, 2
  %69 = getelementptr inbounds %struct.sv, ptr %54, i64 %68
  %70 = getelementptr inbounds %struct.sv, ptr %69, i64 1
  store ptr %70, ptr %69, align 8, !tbaa !26
  %71 = getelementptr inbounds %struct.sv, ptr %54, i64 %68, i32 2
  store i32 255, ptr %71, align 4, !tbaa !16
  %72 = add nuw nsw i64 %61, 3
  %73 = getelementptr inbounds %struct.sv, ptr %54, i64 %72
  %74 = getelementptr inbounds %struct.sv, ptr %73, i64 1
  store ptr %74, ptr %73, align 8, !tbaa !26
  %75 = getelementptr inbounds %struct.sv, ptr %54, i64 %72, i32 2
  store i32 255, ptr %75, align 4, !tbaa !16
  %76 = add nuw nsw i64 %61, 4
  %77 = getelementptr inbounds %struct.sv, ptr %54, i64 %76
  %78 = icmp eq i64 %76, 169
  br i1 %78, label %79, label %59, !llvm.loop !59

79:                                               ; preds = %59
  store ptr null, ptr %77, align 8, !tbaa !26
  %80 = getelementptr inbounds %struct.sv, ptr %54, i64 169, i32 2
  store i32 255, ptr %80, align 4, !tbaa !16
  %81 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %82

82:                                               ; preds = %79, %44
  %83 = phi ptr [ %81, %79 ], [ %51, %44 ]
  %84 = load ptr, ptr %83, align 8, !tbaa !26
  store ptr %84, ptr @PL_sv_root, align 8, !tbaa !9
  %85 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %86 = add nsw i64 %85, 1
  store i64 %86, ptr @PL_sv_count, align 8, !tbaa !60
  %87 = getelementptr inbounds %struct.sv, ptr %83, i64 0, i32 1
  store i32 1, ptr %87, align 8, !tbaa !13
  %88 = getelementptr inbounds %struct.sv, ptr %83, i64 0, i32 2
  %89 = getelementptr %struct.sv, ptr %83, i64 -1, i32 1
  store ptr %89, ptr %83, align 8, !tbaa !26
  store i32 4353, ptr %88, align 4, !tbaa !16
  %90 = getelementptr %struct.sv, ptr %83, i64 0, i32 3
  store i64 %50, ptr %90, align 8, !tbaa !17
  %91 = load i8, ptr @PL_tainting, align 1, !tbaa !5, !range !74, !noundef !75
  %92 = icmp eq i8 %91, 0
  %93 = load i8, ptr @PL_tainted, align 1, !range !74
  %94 = icmp eq i8 %93, 0
  %95 = select i1 %92, i1 true, i1 %94
  br i1 %95, label %108, label %96

96:                                               ; preds = %82
  tail call void @Perl_sv_magic(ptr noundef nonnull %83, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0)
  %97 = load i32, ptr %88, align 4, !tbaa !16
  %98 = and i32 %97, 134283264
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %108, label %100

100:                                              ; preds = %96
  %101 = icmp eq ptr %83, @PL_sv_undef
  %102 = icmp eq ptr %83, @PL_sv_yes
  %103 = or i1 %101, %102
  %104 = icmp eq ptr %83, @PL_sv_no
  %105 = or i1 %104, %103
  %106 = icmp eq ptr %83, @PL_sv_placeholder
  %107 = or i1 %106, %105
  br i1 %107, label %123, label %108

108:                                              ; preds = %82, %100, %96
  %109 = phi i32 [ %97, %100 ], [ %97, %96 ], [ 4353, %82 ]
  %110 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %111 = add nsw i64 %110, 1
  store i64 %111, ptr @PL_tmps_ix, align 8, !tbaa !60
  %112 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %113 = icmp slt i64 %111, %112
  br i1 %113, label %117, label %114

114:                                              ; preds = %108
  %115 = tail call i64 @Perl_tmps_grow_p(i64 noundef %111) #17
  %116 = load i32, ptr %88, align 4, !tbaa !16
  br label %117

117:                                              ; preds = %114, %108
  %118 = phi i32 [ %116, %114 ], [ %109, %108 ]
  %119 = phi i64 [ %115, %114 ], [ %111, %108 ]
  %120 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %121 = getelementptr inbounds ptr, ptr %120, i64 %119
  store ptr %83, ptr %121, align 8, !tbaa !9
  %122 = or i32 %118, 524288
  store i32 %122, ptr %88, align 4, !tbaa !16
  br label %123

123:                                              ; preds = %100, %117
  %124 = getelementptr inbounds ptr, ptr %45, i64 4
  store ptr %83, ptr %124, align 8, !tbaa !9
  %125 = sext i32 %5 to i64
  %126 = tail call ptr @Perl_newSVpvn_flags(ptr noundef %4, i64 noundef %125, i32 noundef 524288)
  %127 = getelementptr inbounds ptr, ptr %45, i64 5
  store ptr %126, ptr %127, align 8, !tbaa !9
  store ptr %127, ptr @PL_stack_sp, align 8, !tbaa !9
  %128 = tail call i32 @Perl_call_method(ptr noundef nonnull @.str.84, i32 noundef 2) #17
  %129 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !9
  %130 = load ptr, ptr %129, align 8, !tbaa !9
  %131 = icmp eq ptr %130, null
  br i1 %131, label %188, label %132

132:                                              ; preds = %123
  %133 = getelementptr inbounds %struct.sv, ptr %130, i64 0, i32 2
  %134 = load i32, ptr %133, align 4, !tbaa !16
  %135 = and i32 %134, 2097152
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %139, label %137

137:                                              ; preds = %132
  %138 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %130, i32 noundef 2)
  br label %188

139:                                              ; preds = %132
  %140 = and i32 %134, 65280
  %141 = icmp ne i32 %140, 0
  %142 = and i32 %134, 255
  %143 = icmp eq i32 %142, 8
  %144 = or i1 %141, %143
  %145 = and i32 %134, 16826623
  %146 = icmp eq i32 %145, 16777226
  %147 = or i1 %146, %144
  br i1 %147, label %148, label %188

148:                                              ; preds = %139
  %149 = and i32 %134, 1024
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %165, label %151

151:                                              ; preds = %148
  %152 = load ptr, ptr %130, align 8, !tbaa !26
  %153 = icmp eq ptr %152, null
  br i1 %153, label %188, label %154

154:                                              ; preds = %151
  %155 = getelementptr inbounds %struct.xpv, ptr %152, i64 0, i32 2
  %156 = load i64, ptr %155, align 8, !tbaa !57
  %157 = icmp ugt i64 %156, 1
  br i1 %157, label %188, label %158

158:                                              ; preds = %154
  %159 = icmp eq i64 %156, 0
  br i1 %159, label %188, label %160

160:                                              ; preds = %158
  %161 = getelementptr inbounds %struct.sv, ptr %130, i64 0, i32 3
  %162 = load ptr, ptr %161, align 8, !tbaa !17
  %163 = load i8, ptr %162, align 1, !tbaa !17
  %164 = icmp ne i8 %163, 48
  br label %188

165:                                              ; preds = %148
  %166 = and i32 %134, 768
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %186, label %168

168:                                              ; preds = %165
  %169 = and i32 %134, 256
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %176, label %171

171:                                              ; preds = %168
  %172 = load ptr, ptr %130, align 8, !tbaa !26
  %173 = getelementptr inbounds %struct.xpviv, ptr %172, i64 0, i32 4
  %174 = load i64, ptr %173, align 8, !tbaa !17
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %188

176:                                              ; preds = %171, %168
  %177 = and i32 %134, 512
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %188, label %179

179:                                              ; preds = %176
  %180 = load ptr, ptr %130, align 8, !tbaa !26
  %181 = getelementptr inbounds %struct.xpvnv, ptr %180, i64 0, i32 5
  %182 = load double, ptr %181, align 8, !tbaa !17
  %183 = fcmp uno double %182, 0.000000e+00
  br i1 %183, label %188, label %184

184:                                              ; preds = %179
  %185 = fcmp fast une double %182, 0.000000e+00
  br label %188

186:                                              ; preds = %165
  %187 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %130, i32 noundef 0)
  br label %188

188:                                              ; preds = %137, %186, %139, %154, %160, %158, %151, %176, %184, %179, %171, %123
  %189 = phi i1 [ false, %123 ], [ %138, %137 ], [ %187, %186 ], [ false, %139 ], [ false, %151 ], [ true, %154 ], [ false, %158 ], [ %164, %160 ], [ true, %171 ], [ false, %176 ], [ true, %179 ], [ %185, %184 ]
  %190 = load i32, ptr %88, align 4, !tbaa !16
  %191 = and i32 %190, 2097408
  %192 = icmp eq i32 %191, 256
  br i1 %192, label %193, label %197

193:                                              ; preds = %188
  %194 = load ptr, ptr %83, align 8, !tbaa !26
  %195 = getelementptr inbounds %struct.xpviv, ptr %194, i64 0, i32 4
  %196 = load i64, ptr %195, align 8, !tbaa !17
  br label %199

197:                                              ; preds = %188
  %198 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %83, i32 noundef 2)
  br label %199

199:                                              ; preds = %197, %193
  %200 = phi i64 [ %196, %193 ], [ %198, %197 ]
  %201 = trunc i64 %200 to i32
  store i32 %201, ptr %3, align 4, !tbaa !25
  store ptr %129, ptr @PL_stack_sp, align 8, !tbaa !9
  %202 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %203 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !60
  %204 = icmp sgt i64 %202, %203
  br i1 %204, label %205, label %206

205:                                              ; preds = %199
  tail call void @Perl_free_tmps() #17
  br label %206

206:                                              ; preds = %205, %199
  tail call void @Perl_pop_scope() #17
  br label %208

207:                                              ; preds = %16, %11, %6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.85) #17
  br label %208

208:                                              ; preds = %207, %206
  %209 = phi i1 [ %189, %206 ], [ false, %207 ]
  ret i1 %209
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_varname(ptr noundef %0, i8 noundef signext %1, i64 noundef %2, ptr nocapture noundef readonly %3, i32 noundef %4, i32 noundef %5) local_unnamed_addr #1 {
  %7 = alloca [2 x i8], align 1
  %8 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %9 = icmp eq ptr %8, null
  br i1 %9, label %10, label %39

10:                                               ; preds = %6
  %11 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %12 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %12, ptr %11, align 8, !tbaa !26
  %13 = getelementptr inbounds %struct.sv, ptr %11, i64 0, i32 1
  store i32 170, ptr %13, align 8, !tbaa !13
  %14 = getelementptr inbounds %struct.sv, ptr %11, i64 0, i32 2
  store i32 0, ptr %14, align 4, !tbaa !16
  store ptr %11, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %15 = getelementptr inbounds %struct.sv, ptr %11, i64 1
  store ptr %15, ptr @PL_sv_root, align 8, !tbaa !9
  br label %16

16:                                               ; preds = %16, %10
  %17 = phi ptr [ %15, %10 ], [ %34, %16 ]
  %18 = phi i64 [ 1, %10 ], [ %33, %16 ]
  %19 = getelementptr inbounds %struct.sv, ptr %17, i64 1
  store ptr %19, ptr %17, align 8, !tbaa !26
  %20 = getelementptr inbounds %struct.sv, ptr %11, i64 %18, i32 2
  store i32 255, ptr %20, align 4, !tbaa !16
  %21 = add nuw nsw i64 %18, 1
  %22 = getelementptr inbounds %struct.sv, ptr %11, i64 %21
  %23 = getelementptr inbounds %struct.sv, ptr %22, i64 1
  store ptr %23, ptr %22, align 8, !tbaa !26
  %24 = getelementptr inbounds %struct.sv, ptr %11, i64 %21, i32 2
  store i32 255, ptr %24, align 4, !tbaa !16
  %25 = add nuw nsw i64 %18, 2
  %26 = getelementptr inbounds %struct.sv, ptr %11, i64 %25
  %27 = getelementptr inbounds %struct.sv, ptr %26, i64 1
  store ptr %27, ptr %26, align 8, !tbaa !26
  %28 = getelementptr inbounds %struct.sv, ptr %11, i64 %25, i32 2
  store i32 255, ptr %28, align 4, !tbaa !16
  %29 = add nuw nsw i64 %18, 3
  %30 = getelementptr inbounds %struct.sv, ptr %11, i64 %29
  %31 = getelementptr inbounds %struct.sv, ptr %30, i64 1
  store ptr %31, ptr %30, align 8, !tbaa !26
  %32 = getelementptr inbounds %struct.sv, ptr %11, i64 %29, i32 2
  store i32 255, ptr %32, align 4, !tbaa !16
  %33 = add nuw nsw i64 %18, 4
  %34 = getelementptr inbounds %struct.sv, ptr %11, i64 %33
  %35 = icmp eq i64 %33, 169
  br i1 %35, label %36, label %16, !llvm.loop !59

36:                                               ; preds = %16
  store ptr null, ptr %34, align 8, !tbaa !26
  %37 = getelementptr inbounds %struct.sv, ptr %11, i64 169, i32 2
  store i32 255, ptr %37, align 4, !tbaa !16
  %38 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %39

39:                                               ; preds = %36, %6
  %40 = phi ptr [ %38, %36 ], [ %8, %6 ]
  %41 = load ptr, ptr %40, align 8, !tbaa !26
  store ptr %41, ptr @PL_sv_root, align 8, !tbaa !9
  %42 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %43 = add nsw i64 %42, 1
  store i64 %43, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %40, align 8, !tbaa !26
  %44 = getelementptr inbounds %struct.sv, ptr %40, i64 0, i32 1
  store i32 1, ptr %44, align 8, !tbaa !13
  %45 = getelementptr inbounds %struct.sv, ptr %40, i64 0, i32 2
  store i32 524288, ptr %45, align 4, !tbaa !16
  %46 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %47 = add nsw i64 %46, 1
  store i64 %47, ptr @PL_tmps_ix, align 8, !tbaa !60
  %48 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %49 = icmp slt i64 %47, %48
  br i1 %49, label %52, label %50

50:                                               ; preds = %39
  %51 = tail call i64 @Perl_tmps_grow_p(i64 noundef %47) #17
  br label %52

52:                                               ; preds = %39, %50
  %53 = phi i64 [ %51, %50 ], [ %47, %39 ]
  %54 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %55 = getelementptr inbounds ptr, ptr %54, i64 %53
  store ptr %40, ptr %55, align 8, !tbaa !9
  %56 = icmp eq ptr %0, null
  br i1 %56, label %72, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.gv, ptr %0, i64 0, i32 2
  %59 = load i32, ptr %58, align 4, !tbaa !185
  %60 = and i32 %59, 255
  %61 = icmp eq i32 %60, 9
  br i1 %61, label %62, label %75

62:                                               ; preds = %57
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %7) #17
  store i8 %1, ptr %7, align 1, !tbaa !17
  %63 = getelementptr inbounds [2 x i8], ptr %7, i64 0, i64 1
  store i8 0, ptr %63, align 1, !tbaa !17
  call void @Perl_gv_fullname4(ptr noundef nonnull %40, ptr noundef nonnull %0, ptr noundef nonnull %7, i1 noundef zeroext false) #17
  %64 = getelementptr inbounds %struct.sv, ptr %40, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8, !tbaa !17
  %66 = getelementptr inbounds i8, ptr %65, i64 1
  %67 = load i8, ptr %66, align 1, !tbaa !17
  %68 = icmp ult i8 %67, 27
  br i1 %68, label %69, label %71

69:                                               ; preds = %62
  store i8 94, ptr %7, align 1, !tbaa !17
  %70 = add nuw nsw i8 %67, 64
  store i8 %70, ptr %63, align 1, !tbaa !17
  call void @Perl_sv_insert_flags(ptr noundef nonnull %40, i64 noundef 1, i64 noundef 1, ptr noundef nonnull %7, i64 noundef 2, i32 noundef 2)
  br label %71

71:                                               ; preds = %69, %62
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %7) #17
  br label %92

72:                                               ; preds = %52
  %73 = tail call ptr @Perl_find_runcv(ptr noundef null) #17
  %74 = icmp eq ptr %73, null
  br i1 %74, label %150, label %75

75:                                               ; preds = %57, %72
  %76 = phi ptr [ %73, %72 ], [ %0, %57 ]
  %77 = load ptr, ptr %76, align 8, !tbaa !119
  %78 = getelementptr inbounds %struct.xpvcv, ptr %77, i64 0, i32 9
  %79 = load ptr, ptr %78, align 8, !tbaa !17
  %80 = icmp eq ptr %79, null
  br i1 %80, label %150, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %struct.padlist, ptr %79, i64 0, i32 1
  %83 = load ptr, ptr %82, align 8, !tbaa !233
  %84 = load ptr, ptr %83, align 8, !tbaa !9
  %85 = tail call ptr @Perl_padnamelist_fetch(ptr noundef %84, i64 noundef %2) #17
  %86 = load ptr, ptr %85, align 8, !tbaa !231
  %87 = getelementptr inbounds %struct.padname, ptr %85, i64 0, i32 7
  %88 = load i8, ptr %87, align 8, !tbaa !235
  %89 = zext i8 %88 to i64
  tail call void @Perl_sv_setpvn(ptr noundef nonnull %40, ptr noundef %86, i64 noundef %89)
  %90 = load i32, ptr %45, align 4, !tbaa !16
  %91 = or i32 %90, 536870912
  store i32 %91, ptr %45, align 4, !tbaa !16
  br label %92

92:                                               ; preds = %81, %71
  switch i32 %5, label %150 [
    i32 3, label %93
    i32 2, label %145
    i32 4, label %149
  ]

93:                                               ; preds = %92
  %94 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %95 = icmp eq ptr %94, null
  br i1 %95, label %96, label %125

96:                                               ; preds = %93
  %97 = call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %98 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %98, ptr %97, align 8, !tbaa !26
  %99 = getelementptr inbounds %struct.sv, ptr %97, i64 0, i32 1
  store i32 170, ptr %99, align 8, !tbaa !13
  %100 = getelementptr inbounds %struct.sv, ptr %97, i64 0, i32 2
  store i32 0, ptr %100, align 4, !tbaa !16
  store ptr %97, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %101 = getelementptr inbounds %struct.sv, ptr %97, i64 1
  store ptr %101, ptr @PL_sv_root, align 8, !tbaa !9
  br label %102

102:                                              ; preds = %102, %96
  %103 = phi ptr [ %101, %96 ], [ %120, %102 ]
  %104 = phi i64 [ 1, %96 ], [ %119, %102 ]
  %105 = getelementptr inbounds %struct.sv, ptr %103, i64 1
  store ptr %105, ptr %103, align 8, !tbaa !26
  %106 = getelementptr inbounds %struct.sv, ptr %97, i64 %104, i32 2
  store i32 255, ptr %106, align 4, !tbaa !16
  %107 = add nuw nsw i64 %104, 1
  %108 = getelementptr inbounds %struct.sv, ptr %97, i64 %107
  %109 = getelementptr inbounds %struct.sv, ptr %108, i64 1
  store ptr %109, ptr %108, align 8, !tbaa !26
  %110 = getelementptr inbounds %struct.sv, ptr %97, i64 %107, i32 2
  store i32 255, ptr %110, align 4, !tbaa !16
  %111 = add nuw nsw i64 %104, 2
  %112 = getelementptr inbounds %struct.sv, ptr %97, i64 %111
  %113 = getelementptr inbounds %struct.sv, ptr %112, i64 1
  store ptr %113, ptr %112, align 8, !tbaa !26
  %114 = getelementptr inbounds %struct.sv, ptr %97, i64 %111, i32 2
  store i32 255, ptr %114, align 4, !tbaa !16
  %115 = add nuw nsw i64 %104, 3
  %116 = getelementptr inbounds %struct.sv, ptr %97, i64 %115
  %117 = getelementptr inbounds %struct.sv, ptr %116, i64 1
  store ptr %117, ptr %116, align 8, !tbaa !26
  %118 = getelementptr inbounds %struct.sv, ptr %97, i64 %115, i32 2
  store i32 255, ptr %118, align 4, !tbaa !16
  %119 = add nuw nsw i64 %104, 4
  %120 = getelementptr inbounds %struct.sv, ptr %97, i64 %119
  %121 = icmp eq i64 %119, 169
  br i1 %121, label %122, label %102, !llvm.loop !59

122:                                              ; preds = %102
  store ptr null, ptr %120, align 8, !tbaa !26
  %123 = getelementptr inbounds %struct.sv, ptr %97, i64 169, i32 2
  store i32 255, ptr %123, align 4, !tbaa !16
  %124 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %125

125:                                              ; preds = %93, %122
  %126 = phi ptr [ %124, %122 ], [ %94, %93 ]
  %127 = load ptr, ptr %126, align 8, !tbaa !26
  store ptr %127, ptr @PL_sv_root, align 8, !tbaa !9
  %128 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %129 = add nsw i64 %128, 1
  store i64 %129, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %126, align 8, !tbaa !26
  %130 = getelementptr inbounds %struct.sv, ptr %126, i64 0, i32 1
  store i32 1, ptr %130, align 8, !tbaa !13
  %131 = getelementptr inbounds %struct.sv, ptr %126, i64 0, i32 2
  store i32 0, ptr %131, align 4, !tbaa !16
  %132 = getelementptr inbounds %struct.sv, ptr %40, i64 0, i32 3
  %133 = load ptr, ptr %132, align 8, !tbaa !17
  store i8 36, ptr %133, align 1, !tbaa !17
  %134 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 3
  %135 = load ptr, ptr %134, align 8, !tbaa !17
  %136 = load ptr, ptr %3, align 8, !tbaa !26
  %137 = getelementptr inbounds %struct.xpv, ptr %136, i64 0, i32 2
  %138 = load i64, ptr %137, align 8, !tbaa !57
  %139 = call ptr @Perl_pv_pretty(ptr noundef nonnull %126, ptr noundef %135, i64 noundef %138, i64 noundef 32, ptr noundef null, ptr noundef null, i32 noundef 515) #17
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef nonnull %40, ptr noundef nonnull @.str.86, ptr noundef %139)
  %140 = load i32, ptr %130, align 8, !tbaa !13
  %141 = icmp ugt i32 %140, 1
  br i1 %141, label %142, label %144

142:                                              ; preds = %125
  %143 = add i32 %140, -1
  store i32 %143, ptr %130, align 8, !tbaa !13
  br label %150

144:                                              ; preds = %125
  call void @Perl_sv_free2(ptr noundef nonnull %126, i32 noundef %140)
  br label %150

145:                                              ; preds = %92
  %146 = getelementptr inbounds %struct.sv, ptr %40, i64 0, i32 3
  %147 = load ptr, ptr %146, align 8, !tbaa !17
  store i8 36, ptr %147, align 1, !tbaa !17
  %148 = sext i32 %4 to i64
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef nonnull %40, ptr noundef nonnull @.str.87, i64 noundef %148)
  br label %150

149:                                              ; preds = %92
  call void @Perl_sv_insert_flags(ptr noundef nonnull %40, i64 noundef 0, i64 noundef 0, ptr noundef nonnull @.str.88, i64 noundef 7, i32 noundef 0)
  br label %150

150:                                              ; preds = %144, %142, %149, %145, %92, %75, %72
  %151 = phi ptr [ null, %72 ], [ null, %75 ], [ %40, %92 ], [ %40, %145 ], [ %40, %149 ], [ %40, %142 ], [ %40, %144 ]
  ret ptr %151
}

declare void @Perl_gv_fullname4(ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

declare ptr @Perl_find_runcv(ptr noundef) local_unnamed_addr #3

declare ptr @Perl_padnamelist_fetch(ptr noundef, i64 noundef) local_unnamed_addr #3

declare ptr @Perl_pv_pretty(ptr noundef, ptr noundef, i64 noundef, i64 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_find_uninit_var(ptr noundef readonly %0, ptr noundef %1, i1 noundef zeroext %2, ptr nocapture noundef writeonly %3) unnamed_addr #1 {
  %5 = icmp eq ptr %0, null
  br i1 %5, label %856, label %6

6:                                                ; preds = %4
  %7 = icmp ne ptr %1, @PL_sv_undef
  %8 = icmp ne ptr %1, @PL_sv_placeholder
  %9 = and i1 %7, %8
  %10 = xor i1 %2, true
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %856

12:                                               ; preds = %6, %129
  %13 = phi ptr [ %130, %129 ], [ %0, %6 ]
  %14 = phi i1 [ %131, %129 ], [ %2, %6 ]
  %15 = load ptr, ptr @PL_op, align 8
  %16 = load ptr, ptr @PL_curpad, align 8
  %17 = getelementptr inbounds %struct.binop, ptr %15, i64 0, i32 8
  br label %18

18:                                               ; preds = %12, %252
  %19 = phi ptr [ %253, %252 ], [ %13, %12 ]
  %20 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 4
  %21 = load i16, ptr %20, align 8
  %22 = and i16 %21, 511
  %23 = zext i16 %22 to i32
  switch i32 %23, label %795 [
    i32 135, label %24
    i32 149, label %24
    i32 10, label %24
    i32 11, label %24
    i32 15, label %122
    i32 9, label %151
    i32 6, label %160
    i32 137, label %177
    i32 136, label %205
    i32 148, label %235
    i32 138, label %255
    i32 150, label %255
    i32 153, label %431
    i32 38, label %681
    i32 220, label %683
    i32 35, label %716
    i32 36, label %716
    i32 33, label %716
    i32 31, label %716
    i32 237, label %748
    i32 238, label %748
    i32 239, label %748
    i32 342, label %794
    i32 380, label %794
    i32 24, label %794
    i32 222, label %794
    i32 223, label %794
    i32 225, label %794
    i32 228, label %794
    i32 233, label %794
    i32 242, label %794
    i32 251, label %794
    i32 249, label %794
    i32 253, label %794
    i32 254, label %794
    i32 255, label %794
    i32 256, label %794
    i32 257, label %794
    i32 258, label %794
    i32 259, label %794
    i32 261, label %794
    i32 263, label %794
    i32 266, label %794
    i32 267, label %794
    i32 268, label %794
    i32 277, label %794
    i32 269, label %794
    i32 270, label %794
    i32 271, label %794
    i32 278, label %794
    i32 272, label %794
    i32 279, label %794
    i32 273, label %794
    i32 283, label %794
    i32 284, label %794
    i32 289, label %794
    i32 285, label %794
    i32 280, label %794
    i32 282, label %794
    i32 281, label %794
    i32 290, label %794
    i32 286, label %794
    i32 287, label %794
    i32 288, label %794
    i32 291, label %794
    i32 292, label %794
    i32 274, label %794
    i32 275, label %794
    i32 276, label %794
    i32 302, label %794
    i32 305, label %794
    i32 306, label %794
    i32 307, label %794
    i32 308, label %794
    i32 309, label %794
    i32 310, label %794
    i32 325, label %794
    i32 326, label %794
    i32 337, label %794
    i32 376, label %794
    i32 44, label %794
    i32 121, label %794
    i32 141, label %794
    i32 144, label %794
    i32 167, label %794
    i32 188, label %794
    i32 340, label %794
    i32 19, label %794
    i32 83, label %794
    i32 107, label %794
    i32 154, label %794
    i32 240, label %794
    i32 241, label %794
    i32 185, label %856
    i32 208, label %856
    i32 174, label %767
    i32 175, label %767
    i32 46, label %777
    i32 42, label %782
    i32 41, label %782
  ]

24:                                               ; preds = %18, %18, %18, %18
  switch i16 %22, label %25 [
    i16 10, label %26
    i16 11, label %26
    i16 390, label %26
  ]

25:                                               ; preds = %24
  br label %26

26:                                               ; preds = %24, %24, %24, %25
  %27 = phi i1 [ true, %24 ], [ false, %25 ], [ true, %24 ], [ true, %24 ]
  switch i16 %22, label %39 [
    i16 11, label %37
    i16 149, label %37
    i16 390, label %28
  ]

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 3
  %30 = load i64, ptr %29, align 8, !tbaa !236
  %31 = getelementptr inbounds ptr, ptr %16, i64 %30
  %32 = load ptr, ptr %31, align 8, !tbaa !9
  %33 = getelementptr inbounds %struct.sv, ptr %32, i64 0, i32 2
  %34 = load i32, ptr %33, align 4, !tbaa !16
  %35 = and i32 %34, 255
  %36 = icmp eq i32 %35, 12
  br label %37

37:                                               ; preds = %26, %26, %28
  %38 = phi i1 [ true, %26 ], [ %36, %28 ], [ true, %26 ]
  br i1 %27, label %66, label %44

39:                                               ; preds = %26
  br i1 %27, label %40, label %44

40:                                               ; preds = %39
  %41 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 3
  %42 = load i64, ptr %41, align 8, !tbaa !236
  %43 = getelementptr inbounds ptr, ptr %16, i64 %42
  br label %76

44:                                               ; preds = %39, %37
  %45 = phi i1 [ false, %39 ], [ %38, %37 ]
  %46 = getelementptr inbounds %struct.unop, ptr %19, i64 0, i32 7
  %47 = load ptr, ptr %46, align 8, !tbaa !237
  %48 = getelementptr inbounds %struct.op, ptr %47, i64 0, i32 4
  %49 = load i16, ptr %48, align 8
  %50 = and i16 %49, 511
  %51 = icmp eq i16 %50, 7
  br i1 %51, label %52, label %64

52:                                               ; preds = %44
  %53 = getelementptr inbounds %struct.svop, ptr %47, i64 0, i32 7
  %54 = load ptr, ptr %53, align 8, !tbaa !239
  %55 = icmp eq ptr %54, null
  br i1 %55, label %856, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.gv, ptr %54, i64 0, i32 3
  %58 = load ptr, ptr %57, align 8, !tbaa !17
  br i1 %45, label %59, label %62

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.gp, ptr %58, i64 0, i32 5
  %61 = load ptr, ptr %60, align 8, !tbaa !9
  br label %71

62:                                               ; preds = %56
  %63 = getelementptr inbounds %struct.gp, ptr %58, i64 0, i32 6
  br label %76

64:                                               ; preds = %44
  %65 = icmp eq ptr %15, %19
  br i1 %65, label %252, label %856

66:                                               ; preds = %37
  %67 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 3
  %68 = load i64, ptr %67, align 8, !tbaa !236
  %69 = getelementptr inbounds ptr, ptr %16, i64 %68
  %70 = load ptr, ptr %69, align 8, !tbaa !9
  br i1 %38, label %71, label %80

71:                                               ; preds = %59, %66
  %72 = phi ptr [ %61, %59 ], [ %70, %66 ]
  %73 = phi ptr [ %54, %59 ], [ null, %66 ]
  %74 = tail call fastcc ptr @S_find_hash_subscript(ptr noundef %72, ptr noundef %1)
  %75 = icmp eq ptr %74, null
  br i1 %75, label %111, label %113

76:                                               ; preds = %62, %40
  %77 = phi ptr [ %43, %40 ], [ %63, %62 ]
  %78 = phi ptr [ null, %40 ], [ %54, %62 ]
  %79 = load ptr, ptr %77, align 8, !tbaa !9
  br label %80

80:                                               ; preds = %76, %66
  %81 = phi ptr [ %70, %66 ], [ %79, %76 ]
  %82 = phi ptr [ null, %66 ], [ %78, %76 ]
  %83 = icmp eq ptr %81, null
  br i1 %83, label %112, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.av, ptr %81, i64 0, i32 2
  %86 = load i32, ptr %85, align 4, !tbaa !133
  %87 = and i32 %86, 14680064
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %112

89:                                               ; preds = %84
  %90 = getelementptr inbounds %struct.av, ptr %81, i64 0, i32 3
  %91 = load ptr, ptr %90, align 8, !tbaa !17
  %92 = icmp eq ptr %91, null
  br i1 %92, label %112, label %93

93:                                               ; preds = %89
  %94 = load ptr, ptr %81, align 8, !tbaa !105
  %95 = getelementptr inbounds %struct.xpvav, ptr %94, i64 0, i32 2
  %96 = load i64, ptr %95, align 8, !tbaa !107
  %97 = icmp slt i64 %96, 1001
  %98 = trunc i64 %96 to i32
  %99 = icmp sgt i32 %98, -1
  %100 = and i1 %97, %99
  %101 = and i1 %7, %100
  br i1 %101, label %102, label %112

102:                                              ; preds = %93, %108
  %103 = phi i32 [ %109, %108 ], [ %98, %93 ]
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds ptr, ptr %91, i64 %104
  %106 = load ptr, ptr %105, align 8, !tbaa !9
  %107 = icmp eq ptr %106, %1
  br i1 %107, label %113, label %108

108:                                              ; preds = %102
  %109 = add nsw i32 %103, -1
  %110 = icmp sgt i32 %103, 0
  br i1 %110, label %102, label %112, !llvm.loop !241

111:                                              ; preds = %71
  br i1 %14, label %856, label %113

112:                                              ; preds = %108, %93, %89, %84, %80
  br i1 %14, label %856, label %113

113:                                              ; preds = %102, %112, %71, %111
  %114 = phi ptr [ %73, %71 ], [ %73, %111 ], [ %82, %112 ], [ %82, %102 ]
  %115 = phi i32 [ 3, %71 ], [ 4, %111 ], [ 4, %112 ], [ 2, %102 ]
  %116 = phi ptr [ %74, %71 ], [ null, %111 ], [ null, %112 ], [ null, %102 ]
  %117 = phi i32 [ 0, %71 ], [ 0, %111 ], [ -1, %112 ], [ %103, %102 ]
  %118 = phi i8 [ 37, %71 ], [ 37, %111 ], [ 64, %112 ], [ 64, %102 ]
  %119 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 3
  %120 = load i64, ptr %119, align 8, !tbaa !236
  %121 = tail call ptr @Perl_varname(ptr noundef %114, i8 noundef signext %118, i64 noundef %120, ptr noundef %116, i32 noundef %117, i32 noundef %115)
  br label %856

122:                                              ; preds = %18
  %123 = getelementptr inbounds %struct.unop, ptr %19, i64 0, i32 7
  %124 = load ptr, ptr %123, align 8, !tbaa !237
  %125 = getelementptr inbounds %struct.op, ptr %124, i64 0, i32 4
  %126 = load i16, ptr %125, align 8
  %127 = and i16 %126, 511
  %128 = icmp eq i16 %127, 7
  br i1 %128, label %134, label %129

129:                                              ; preds = %122, %845
  %130 = phi ptr [ %841, %845 ], [ %124, %122 ]
  %131 = phi i1 [ %812, %845 ], [ true, %122 ]
  %132 = xor i1 %131, true
  %133 = or i1 %9, %132
  br i1 %133, label %12, label %856

134:                                              ; preds = %122
  %135 = getelementptr inbounds %struct.svop, ptr %124, i64 0, i32 7
  %136 = load ptr, ptr %135, align 8, !tbaa !239
  %137 = icmp eq ptr %136, null
  br i1 %137, label %856, label %138

138:                                              ; preds = %134
  %139 = load ptr, ptr %136, align 8, !tbaa !62
  %140 = getelementptr inbounds %struct.xpvgv, ptr %139, i64 0, i32 5
  %141 = load ptr, ptr %140, align 8, !tbaa !17
  %142 = icmp eq ptr %141, null
  br i1 %142, label %856, label %143

143:                                              ; preds = %138
  br i1 %14, label %144, label %149

144:                                              ; preds = %143
  %145 = getelementptr inbounds %struct.gv, ptr %136, i64 0, i32 3
  %146 = load ptr, ptr %145, align 8, !tbaa !17
  %147 = load ptr, ptr %146, align 8, !tbaa !19
  %148 = icmp eq ptr %147, %1
  br i1 %148, label %149, label %856

149:                                              ; preds = %144, %143
  %150 = tail call ptr @Perl_varname(ptr noundef nonnull %136, i8 noundef signext 36, i64 noundef 0, ptr noundef null, i32 noundef 0, i32 noundef 1)
  br label %856

151:                                              ; preds = %18
  %152 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 3
  %153 = load i64, ptr %152, align 8, !tbaa !236
  br i1 %14, label %154, label %158

154:                                              ; preds = %151
  %155 = getelementptr inbounds ptr, ptr %16, i64 %153
  %156 = load ptr, ptr %155, align 8, !tbaa !9
  %157 = icmp eq ptr %156, %1
  br i1 %157, label %158, label %856

158:                                              ; preds = %151, %154
  %159 = tail call ptr @Perl_varname(ptr noundef null, i8 noundef signext 36, i64 noundef %153, ptr noundef null, i32 noundef 0, i32 noundef 1)
  br label %856

160:                                              ; preds = %18
  %161 = getelementptr inbounds %struct.svop, ptr %19, i64 0, i32 7
  %162 = load ptr, ptr %161, align 8, !tbaa !239
  %163 = icmp eq ptr %162, null
  br i1 %163, label %856, label %164

164:                                              ; preds = %160
  br i1 %14, label %165, label %170

165:                                              ; preds = %164
  %166 = getelementptr inbounds %struct.gv, ptr %162, i64 0, i32 3
  %167 = load ptr, ptr %166, align 8, !tbaa !17
  %168 = load ptr, ptr %167, align 8, !tbaa !19
  %169 = icmp eq ptr %168, %1
  br i1 %169, label %170, label %856

170:                                              ; preds = %165, %164
  %171 = load ptr, ptr %162, align 8, !tbaa !62
  %172 = getelementptr inbounds %struct.xpvgv, ptr %171, i64 0, i32 5
  %173 = load ptr, ptr %172, align 8, !tbaa !17
  %174 = icmp eq ptr %173, null
  br i1 %174, label %856, label %175

175:                                              ; preds = %170
  %176 = tail call ptr @Perl_varname(ptr noundef nonnull %162, i8 noundef signext 36, i64 noundef 0, ptr noundef null, i32 noundef 0, i32 noundef 1)
  br label %856

177:                                              ; preds = %18
  br i1 %14, label %178, label %198

178:                                              ; preds = %177
  %179 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 3
  %180 = load i64, ptr %179, align 8, !tbaa !236
  %181 = getelementptr inbounds ptr, ptr %16, i64 %180
  %182 = load ptr, ptr %181, align 8, !tbaa !9
  %183 = icmp eq ptr %182, null
  br i1 %183, label %856, label %184

184:                                              ; preds = %178
  %185 = getelementptr inbounds %struct.av, ptr %182, i64 0, i32 2
  %186 = load i32, ptr %185, align 4, !tbaa !133
  %187 = and i32 %186, 8388608
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %856

189:                                              ; preds = %184
  %190 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 6
  %191 = load i8, ptr %190, align 1, !tbaa !242
  %192 = sext i8 %191 to i64
  %193 = tail call ptr @Perl_av_fetch(ptr noundef nonnull %182, i64 noundef %192, i32 noundef 0) #17
  %194 = icmp eq ptr %193, null
  br i1 %194, label %856, label %195

195:                                              ; preds = %189
  %196 = load ptr, ptr %193, align 8, !tbaa !9
  %197 = icmp eq ptr %196, %1
  br i1 %197, label %198, label %856

198:                                              ; preds = %195, %177
  %199 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 3
  %200 = load i64, ptr %199, align 8, !tbaa !236
  %201 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 6
  %202 = load i8, ptr %201, align 1, !tbaa !242
  %203 = sext i8 %202 to i32
  %204 = tail call ptr @Perl_varname(ptr noundef null, i8 noundef signext 36, i64 noundef %200, ptr noundef null, i32 noundef %203, i32 noundef 2)
  br label %856

205:                                              ; preds = %18
  %206 = getelementptr inbounds %struct.svop, ptr %19, i64 0, i32 7
  %207 = load ptr, ptr %206, align 8, !tbaa !239
  %208 = icmp eq ptr %207, null
  br i1 %208, label %856, label %209

209:                                              ; preds = %205
  br i1 %14, label %210, label %230

210:                                              ; preds = %209
  %211 = getelementptr inbounds %struct.gv, ptr %207, i64 0, i32 3
  %212 = load ptr, ptr %211, align 8, !tbaa !17
  %213 = getelementptr inbounds %struct.gp, ptr %212, i64 0, i32 6
  %214 = load ptr, ptr %213, align 8, !tbaa !21
  %215 = icmp eq ptr %214, null
  br i1 %215, label %856, label %216

216:                                              ; preds = %210
  %217 = getelementptr inbounds %struct.av, ptr %214, i64 0, i32 2
  %218 = load i32, ptr %217, align 4, !tbaa !133
  %219 = and i32 %218, 8388608
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %856

221:                                              ; preds = %216
  %222 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 6
  %223 = load i8, ptr %222, align 1, !tbaa !242
  %224 = sext i8 %223 to i64
  %225 = tail call ptr @Perl_av_fetch(ptr noundef nonnull %214, i64 noundef %224, i32 noundef 0) #17
  %226 = icmp eq ptr %225, null
  br i1 %226, label %856, label %227

227:                                              ; preds = %221
  %228 = load ptr, ptr %225, align 8, !tbaa !9
  %229 = icmp eq ptr %228, %1
  br i1 %229, label %230, label %856

230:                                              ; preds = %227, %209
  %231 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 6
  %232 = load i8, ptr %231, align 1, !tbaa !242
  %233 = sext i8 %232 to i32
  %234 = tail call ptr @Perl_varname(ptr noundef nonnull %207, i8 noundef signext 36, i64 noundef 0, ptr noundef null, i32 noundef %233, i32 noundef 2)
  br label %856

235:                                              ; preds = %18
  %236 = getelementptr inbounds %struct.unop, ptr %19, i64 0, i32 7
  %237 = load ptr, ptr %236, align 8, !tbaa !237
  %238 = icmp eq ptr %237, null
  br i1 %238, label %856, label %239

239:                                              ; preds = %235
  %240 = getelementptr inbounds %struct.op, ptr %237, i64 0, i32 4
  %241 = load i16, ptr %240, align 8
  %242 = and i16 %241, 511
  %243 = icmp eq i16 %242, 0
  br i1 %243, label %244, label %856

244:                                              ; preds = %239
  %245 = getelementptr inbounds %struct.op, ptr %237, i64 0, i32 3
  %246 = load i64, ptr %245, align 8, !tbaa !236
  switch i64 %246, label %856 [
    i64 138, label %247
    i64 150, label %247
  ]

247:                                              ; preds = %244, %244
  %248 = getelementptr inbounds %struct.binop, ptr %237, i64 0, i32 8
  br label %249

249:                                              ; preds = %255, %681, %247
  %250 = phi ptr [ %248, %247 ], [ %682, %681 ], [ %17, %255 ]
  %251 = load ptr, ptr %250, align 8, !tbaa !9
  br label %252

252:                                              ; preds = %249, %64
  %253 = phi ptr [ %47, %64 ], [ %251, %249 ]
  %254 = icmp eq ptr %253, null
  br i1 %254, label %856, label %18

255:                                              ; preds = %18, %18
  %256 = icmp eq ptr %15, %19
  br i1 %256, label %249, label %257

257:                                              ; preds = %255
  %258 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 4
  %259 = getelementptr inbounds %struct.binop, ptr %19, i64 0, i32 7
  %260 = load ptr, ptr %259, align 8, !tbaa !243
  %261 = getelementptr inbounds %struct.binop, ptr %19, i64 0, i32 8
  %262 = load ptr, ptr %261, align 8, !tbaa !245
  %263 = getelementptr inbounds %struct.op, ptr %260, i64 0, i32 4
  %264 = load i16, ptr %263, align 8
  %265 = and i16 %264, 511
  switch i16 %265, label %856 [
    i16 10, label %266
    i16 11, label %266
    i16 135, label %270
    i16 149, label %270
  ]

266:                                              ; preds = %257, %257
  %267 = getelementptr inbounds %struct.op, ptr %260, i64 0, i32 3
  %268 = load i64, ptr %267, align 8, !tbaa !236
  %269 = getelementptr inbounds ptr, ptr %16, i64 %268
  br label %289

270:                                              ; preds = %257, %257
  %271 = getelementptr inbounds %struct.unop, ptr %260, i64 0, i32 7
  %272 = load ptr, ptr %271, align 8, !tbaa !237
  %273 = getelementptr inbounds %struct.op, ptr %272, i64 0, i32 4
  %274 = load i16, ptr %273, align 8
  %275 = and i16 %274, 511
  %276 = icmp eq i16 %275, 7
  br i1 %276, label %277, label %856

277:                                              ; preds = %270
  %278 = getelementptr inbounds %struct.svop, ptr %272, i64 0, i32 7
  %279 = load ptr, ptr %278, align 8, !tbaa !239
  %280 = icmp eq ptr %279, null
  br i1 %280, label %856, label %281

281:                                              ; preds = %277
  %282 = icmp eq i16 %265, 149
  %283 = getelementptr inbounds %struct.gv, ptr %279, i64 0, i32 3
  %284 = load ptr, ptr %283, align 8, !tbaa !17
  br i1 %282, label %285, label %287

285:                                              ; preds = %281
  %286 = getelementptr inbounds %struct.gp, ptr %284, i64 0, i32 5
  br label %289

287:                                              ; preds = %281
  %288 = getelementptr inbounds %struct.gp, ptr %284, i64 0, i32 6
  br label %289

289:                                              ; preds = %285, %287, %266
  %290 = phi ptr [ null, %266 ], [ %279, %287 ], [ %279, %285 ]
  %291 = phi ptr [ %269, %266 ], [ %288, %287 ], [ %286, %285 ]
  %292 = load ptr, ptr %291, align 8, !tbaa !9
  %293 = icmp eq ptr %292, null
  br i1 %293, label %856, label %294

294:                                              ; preds = %289
  %295 = icmp eq ptr %262, null
  br i1 %295, label %404, label %296

296:                                              ; preds = %294
  %297 = getelementptr inbounds %struct.op, ptr %262, i64 0, i32 4
  %298 = load i16, ptr %297, align 8
  %299 = and i16 %298, 511
  %300 = icmp eq i16 %299, 101
  br i1 %300, label %301, label %308

301:                                              ; preds = %296
  %302 = getelementptr inbounds %struct.unop, ptr %262, i64 0, i32 7
  %303 = load ptr, ptr %302, align 8, !tbaa !237
  %304 = icmp eq ptr %303, null
  br i1 %304, label %404, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds %struct.op, ptr %303, i64 0, i32 4
  %307 = load i16, ptr %306, align 8
  br label %308

308:                                              ; preds = %305, %296
  %309 = phi i16 [ %307, %305 ], [ %298, %296 ]
  %310 = phi ptr [ %303, %305 ], [ %262, %296 ]
  %311 = and i16 %309, 511
  %312 = icmp eq i16 %311, 5
  br i1 %312, label %313, label %404

313:                                              ; preds = %308
  %314 = getelementptr inbounds %struct.svop, ptr %310, i64 0, i32 7
  %315 = load ptr, ptr %314, align 8, !tbaa !239
  %316 = getelementptr inbounds %struct.sv, ptr %315, i64 0, i32 2
  %317 = load i32, ptr %316, align 4, !tbaa !16
  %318 = and i32 %317, 65280
  %319 = icmp ne i32 %318, 0
  %320 = and i32 %317, 255
  %321 = icmp eq i32 %320, 8
  %322 = or i1 %319, %321
  %323 = and i32 %317, 16826623
  %324 = icmp eq i32 %323, 16777226
  %325 = or i1 %324, %322
  br i1 %325, label %326, label %404

326:                                              ; preds = %313
  br i1 %300, label %327, label %330

327:                                              ; preds = %326
  %328 = tail call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @.str.108, i64 noundef 1, i32 noundef 524288)
  %329 = load ptr, ptr %314, align 8, !tbaa !239
  tail call void @Perl_sv_catsv_flags(ptr noundef %328, ptr noundef %329, i32 noundef 2)
  br label %330

330:                                              ; preds = %326, %327
  %331 = phi ptr [ %328, %327 ], [ %315, %326 ]
  br i1 %14, label %332, label %369

332:                                              ; preds = %330
  %333 = getelementptr inbounds %struct.sv, ptr %292, i64 0, i32 2
  %334 = load i32, ptr %333, align 4, !tbaa !16
  %335 = and i32 %334, 14680064
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %856

337:                                              ; preds = %332
  %338 = load i16, ptr %258, align 8
  %339 = and i16 %338, 511
  %340 = icmp eq i16 %339, 150
  br i1 %340, label %341, label %348

341:                                              ; preds = %337
  %342 = tail call ptr @Perl_hv_common(ptr noundef nonnull %292, ptr noundef %331, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 0, ptr noundef null, i32 noundef 0) #17
  %343 = icmp eq ptr %342, null
  br i1 %343, label %856, label %344

344:                                              ; preds = %341
  %345 = getelementptr inbounds %struct.he, ptr %342, i64 0, i32 2
  %346 = load ptr, ptr %345, align 8, !tbaa !17
  %347 = icmp eq ptr %346, %1
  br i1 %347, label %369, label %856

348:                                              ; preds = %337
  %349 = load ptr, ptr %314, align 8, !tbaa !239
  %350 = getelementptr inbounds %struct.sv, ptr %349, i64 0, i32 2
  %351 = load i32, ptr %350, align 4, !tbaa !16
  %352 = and i32 %351, 2097408
  %353 = icmp eq i32 %352, 256
  br i1 %353, label %354, label %358

354:                                              ; preds = %348
  %355 = load ptr, ptr %349, align 8, !tbaa !26
  %356 = getelementptr inbounds %struct.xpviv, ptr %355, i64 0, i32 4
  %357 = load i64, ptr %356, align 8, !tbaa !17
  br label %360

358:                                              ; preds = %348
  %359 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %349, i32 noundef 2)
  br label %360

360:                                              ; preds = %358, %354
  %361 = phi i64 [ %357, %354 ], [ %359, %358 ]
  %362 = sub nsw i64 0, %361
  %363 = select i1 %300, i64 %362, i64 %361
  %364 = tail call ptr @Perl_av_fetch(ptr noundef nonnull %292, i64 noundef %363, i32 noundef 0) #17
  %365 = icmp eq ptr %364, null
  br i1 %365, label %856, label %366

366:                                              ; preds = %360
  %367 = load ptr, ptr %364, align 8, !tbaa !9
  %368 = icmp eq ptr %367, %1
  br i1 %368, label %369, label %856

369:                                              ; preds = %344, %366, %330
  %370 = load i16, ptr %258, align 8
  %371 = and i16 %370, 511
  %372 = icmp eq i16 %371, 150
  %373 = getelementptr inbounds %struct.op, ptr %260, i64 0, i32 3
  %374 = load i64, ptr %373, align 8, !tbaa !236
  br i1 %372, label %375, label %377

375:                                              ; preds = %369
  %376 = tail call ptr @Perl_varname(ptr noundef %290, i8 noundef signext 37, i64 noundef %374, ptr noundef %331, i32 noundef 0, i32 noundef 3)
  br label %856

377:                                              ; preds = %369
  %378 = load ptr, ptr %314, align 8, !tbaa !239
  %379 = getelementptr inbounds %struct.sv, ptr %378, i64 0, i32 2
  %380 = load i32, ptr %379, align 4, !tbaa !16
  %381 = and i32 %380, 2097408
  %382 = icmp eq i32 %381, 256
  br i1 %300, label %383, label %393

383:                                              ; preds = %377
  br i1 %382, label %384, label %388

384:                                              ; preds = %383
  %385 = load ptr, ptr %378, align 8, !tbaa !26
  %386 = getelementptr inbounds %struct.xpviv, ptr %385, i64 0, i32 4
  %387 = load i64, ptr %386, align 8, !tbaa !17
  br label %390

388:                                              ; preds = %383
  %389 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %378, i32 noundef 2)
  br label %390

390:                                              ; preds = %388, %384
  %391 = phi i64 [ %387, %384 ], [ %389, %388 ]
  %392 = sub nsw i64 0, %391
  br label %400

393:                                              ; preds = %377
  br i1 %382, label %394, label %398

394:                                              ; preds = %393
  %395 = load ptr, ptr %378, align 8, !tbaa !26
  %396 = getelementptr inbounds %struct.xpviv, ptr %395, i64 0, i32 4
  %397 = load i64, ptr %396, align 8, !tbaa !17
  br label %400

398:                                              ; preds = %393
  %399 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %378, i32 noundef 2)
  br label %400

400:                                              ; preds = %394, %398, %390
  %401 = phi i64 [ %392, %390 ], [ %397, %394 ], [ %399, %398 ]
  %402 = trunc i64 %401 to i32
  %403 = tail call ptr @Perl_varname(ptr noundef %290, i8 noundef signext 64, i64 noundef %374, ptr noundef null, i32 noundef %402, i32 noundef 2)
  br label %856

404:                                              ; preds = %294, %313, %308, %301
  %405 = icmp eq i16 %22, 150
  br i1 %405, label %406, label %413

406:                                              ; preds = %404
  %407 = tail call fastcc ptr @S_find_hash_subscript(ptr noundef nonnull %292, ptr noundef %1)
  %408 = icmp eq ptr %407, null
  br i1 %408, label %420, label %409

409:                                              ; preds = %406
  %410 = getelementptr inbounds %struct.op, ptr %260, i64 0, i32 3
  %411 = load i64, ptr %410, align 8, !tbaa !236
  %412 = tail call ptr @Perl_varname(ptr noundef %290, i8 noundef signext 37, i64 noundef %411, ptr noundef nonnull %407, i32 noundef 0, i32 noundef 3)
  br label %856

413:                                              ; preds = %404
  %414 = tail call fastcc i32 @S_find_array_subscript(ptr noundef nonnull %292, ptr noundef %1)
  %415 = icmp slt i32 %414, 0
  br i1 %415, label %420, label %416

416:                                              ; preds = %413
  %417 = getelementptr inbounds %struct.op, ptr %260, i64 0, i32 3
  %418 = load i64, ptr %417, align 8, !tbaa !236
  %419 = tail call ptr @Perl_varname(ptr noundef %290, i8 noundef signext 64, i64 noundef %418, ptr noundef null, i32 noundef %414, i32 noundef 2)
  br label %856

420:                                              ; preds = %413, %406
  br i1 %14, label %856, label %421

421:                                              ; preds = %420
  %422 = load i16, ptr %263, align 8
  %423 = and i16 %422, 511
  %424 = icmp eq i16 %423, 10
  %425 = icmp eq i16 %423, 135
  %426 = or i1 %424, %425
  %427 = select i1 %426, i8 64, i8 37
  %428 = getelementptr inbounds %struct.op, ptr %260, i64 0, i32 3
  %429 = load i64, ptr %428, align 8, !tbaa !236
  %430 = tail call ptr @Perl_varname(ptr noundef %290, i8 noundef signext %427, i64 noundef %429, ptr noundef null, i32 noundef 0, i32 noundef 4)
  br label %856

431:                                              ; preds = %18
  %432 = getelementptr inbounds %struct.unop_aux, ptr %19, i64 0, i32 8
  %433 = load ptr, ptr %432, align 8, !tbaa !246
  %434 = load i64, ptr %433, align 8, !tbaa !17
  %435 = icmp eq ptr %15, %19
  %436 = load ptr, ptr @PL_multideref_pc, align 8
  %437 = select i1 %435, ptr %436, ptr null
  %438 = freeze ptr %437
  %439 = icmp eq ptr %438, null
  br i1 %439, label %440, label %502

440:                                              ; preds = %431, %481
  %441 = phi i64 [ %463, %481 ], [ 0, %431 ]
  %442 = phi ptr [ %464, %481 ], [ null, %431 ]
  %443 = phi i64 [ %484, %481 ], [ 0, %431 ]
  %444 = phi i32 [ %489, %481 ], [ 0, %431 ]
  %445 = phi ptr [ %486, %481 ], [ %433, %431 ]
  %446 = phi i64 [ %493, %481 ], [ %434, %431 ]
  br label %494

447:                                              ; preds = %494, %494
  %448 = getelementptr inbounds %union.UNOP_AUX_item, ptr %495, i64 1
  br label %462

449:                                              ; preds = %494, %494
  %450 = getelementptr inbounds %union.UNOP_AUX_item, ptr %495, i64 1
  br label %462

451:                                              ; preds = %494, %499
  %452 = phi i8 [ 0, %499 ], [ 1, %494 ]
  %453 = getelementptr inbounds %union.UNOP_AUX_item, ptr %495, i64 1
  %454 = load ptr, ptr %453, align 8, !tbaa !17
  br label %462

455:                                              ; preds = %494, %498
  %456 = phi i8 [ 0, %498 ], [ 1, %494 ]
  %457 = getelementptr inbounds %union.UNOP_AUX_item, ptr %495, i64 1
  %458 = load i64, ptr %457, align 8, !tbaa !17
  br label %462

459:                                              ; preds = %494
  %460 = getelementptr inbounds %union.UNOP_AUX_item, ptr %495, i64 1
  %461 = load i64, ptr %460, align 8, !tbaa !17
  br label %494

462:                                              ; preds = %494, %449, %500, %447, %501, %455, %451
  %463 = phi i64 [ 0, %451 ], [ %458, %455 ], [ 0, %447 ], [ 0, %501 ], [ 0, %449 ], [ 0, %500 ], [ %441, %494 ]
  %464 = phi ptr [ %454, %451 ], [ null, %455 ], [ null, %447 ], [ null, %501 ], [ null, %449 ], [ null, %500 ], [ %442, %494 ]
  %465 = phi ptr [ %453, %451 ], [ %457, %455 ], [ %448, %447 ], [ %495, %501 ], [ %450, %449 ], [ %495, %500 ], [ %495, %494 ]
  %466 = phi i8 [ %452, %451 ], [ %456, %455 ], [ 0, %447 ], [ 0, %501 ], [ 1, %449 ], [ 1, %500 ], [ 0, %494 ]
  %467 = and i64 %496, 48
  switch i64 %467, label %481 [
    i64 48, label %478
    i64 16, label %471
    i64 32, label %468
  ]

468:                                              ; preds = %462
  %469 = getelementptr inbounds %union.UNOP_AUX_item, ptr %465, i64 1
  %470 = load i64, ptr %469, align 8, !tbaa !17
  br label %481

471:                                              ; preds = %462
  %472 = icmp eq i8 %466, 0
  %473 = getelementptr inbounds %union.UNOP_AUX_item, ptr %465, i64 1
  br i1 %472, label %476, label %474

474:                                              ; preds = %471
  %475 = load ptr, ptr %473, align 8, !tbaa !17
  br label %481

476:                                              ; preds = %471
  %477 = load i64, ptr %473, align 8, !tbaa !17
  br label %481

478:                                              ; preds = %462
  %479 = getelementptr inbounds %union.UNOP_AUX_item, ptr %465, i64 1
  %480 = load ptr, ptr %479, align 8, !tbaa !17
  br label %481

481:                                              ; preds = %478, %476, %474, %468, %462
  %482 = phi i64 [ 0, %462 ], [ %470, %468 ], [ 0, %474 ], [ 0, %476 ], [ 0, %478 ]
  %483 = phi ptr [ null, %462 ], [ null, %468 ], [ null, %474 ], [ null, %476 ], [ %480, %478 ]
  %484 = phi i64 [ %443, %462 ], [ %443, %468 ], [ %443, %474 ], [ %477, %476 ], [ %443, %478 ]
  %485 = phi ptr [ null, %462 ], [ null, %468 ], [ %475, %474 ], [ null, %476 ], [ null, %478 ]
  %486 = phi ptr [ %465, %462 ], [ %469, %468 ], [ %473, %474 ], [ %473, %476 ], [ %479, %478 ]
  %487 = icmp ne i64 %467, 0
  %488 = zext i1 %487 to i32
  %489 = add nuw nsw i32 %444, %488
  %490 = and i64 %496, 64
  %491 = icmp eq i64 %490, 0
  %492 = and i1 %487, %491
  %493 = lshr i64 %496, 7
  br i1 %492, label %440, label %566

494:                                              ; preds = %459, %440
  %495 = phi ptr [ %460, %459 ], [ %445, %440 ]
  %496 = phi i64 [ %461, %459 ], [ %446, %440 ]
  %497 = and i64 %496, 15
  switch i64 %497, label %462 [
    i64 0, label %459
    i64 12, label %455
    i64 5, label %498
    i64 13, label %451
    i64 6, label %499
    i64 9, label %449
    i64 10, label %449
    i64 8, label %500
    i64 11, label %500
    i64 2, label %447
    i64 3, label %447
    i64 1, label %501
    i64 4, label %501
  ]

498:                                              ; preds = %494
  br label %455

499:                                              ; preds = %494
  br label %451

500:                                              ; preds = %494, %494
  br label %462

501:                                              ; preds = %494, %494
  br label %462

502:                                              ; preds = %431, %551
  %503 = phi i64 [ %533, %551 ], [ 0, %431 ]
  %504 = phi ptr [ %534, %551 ], [ null, %431 ]
  %505 = phi i64 [ %554, %551 ], [ 0, %431 ]
  %506 = phi i32 [ %559, %551 ], [ 0, %431 ]
  %507 = phi ptr [ %556, %551 ], [ %433, %431 ]
  %508 = phi i64 [ %564, %551 ], [ %434, %431 ]
  br label %509

509:                                              ; preds = %502, %513
  %510 = phi ptr [ %514, %513 ], [ %507, %502 ]
  %511 = phi i64 [ %515, %513 ], [ %508, %502 ]
  %512 = and i64 %511, 15
  switch i64 %512, label %530 [
    i64 0, label %513
    i64 12, label %516
    i64 5, label %517
    i64 13, label %521
    i64 6, label %522
    i64 9, label %526
    i64 10, label %526
    i64 8, label %531
    i64 11, label %531
    i64 2, label %528
    i64 3, label %528
    i64 1, label %532
    i64 4, label %532
  ]

513:                                              ; preds = %509
  %514 = getelementptr inbounds %union.UNOP_AUX_item, ptr %510, i64 1
  %515 = load i64, ptr %514, align 8, !tbaa !17
  br label %509

516:                                              ; preds = %509
  br label %517

517:                                              ; preds = %509, %516
  %518 = phi i8 [ 1, %516 ], [ 0, %509 ]
  %519 = getelementptr inbounds %union.UNOP_AUX_item, ptr %510, i64 1
  %520 = load i64, ptr %519, align 8, !tbaa !17
  br label %532

521:                                              ; preds = %509
  br label %522

522:                                              ; preds = %509, %521
  %523 = phi i8 [ 1, %521 ], [ 0, %509 ]
  %524 = getelementptr inbounds %union.UNOP_AUX_item, ptr %510, i64 1
  %525 = load ptr, ptr %524, align 8, !tbaa !17
  br label %532

526:                                              ; preds = %509, %509
  %527 = getelementptr inbounds %union.UNOP_AUX_item, ptr %510, i64 1
  br label %532

528:                                              ; preds = %509, %509
  %529 = getelementptr inbounds %union.UNOP_AUX_item, ptr %510, i64 1
  br label %532

530:                                              ; preds = %509
  br label %532

531:                                              ; preds = %509, %509
  br label %532

532:                                              ; preds = %509, %509, %531, %530, %528, %526, %522, %517
  %533 = phi i64 [ 0, %522 ], [ %520, %517 ], [ 0, %526 ], [ 0, %528 ], [ %503, %530 ], [ 0, %531 ], [ 0, %509 ], [ 0, %509 ]
  %534 = phi ptr [ %525, %522 ], [ null, %517 ], [ null, %526 ], [ null, %528 ], [ %504, %530 ], [ null, %531 ], [ null, %509 ], [ null, %509 ]
  %535 = phi ptr [ %524, %522 ], [ %519, %517 ], [ %527, %526 ], [ %529, %528 ], [ %510, %530 ], [ %510, %531 ], [ %510, %509 ], [ %510, %509 ]
  %536 = phi i8 [ %523, %522 ], [ %518, %517 ], [ 1, %526 ], [ 0, %528 ], [ 0, %530 ], [ 1, %531 ], [ 0, %509 ], [ 0, %509 ]
  %537 = and i64 %511, 48
  switch i64 %537, label %551 [
    i64 48, label %548
    i64 16, label %538
    i64 32, label %545
  ]

538:                                              ; preds = %532
  %539 = icmp eq i8 %536, 0
  %540 = getelementptr inbounds %union.UNOP_AUX_item, ptr %535, i64 1
  br i1 %539, label %543, label %541

541:                                              ; preds = %538
  %542 = load ptr, ptr %540, align 8, !tbaa !17
  br label %551

543:                                              ; preds = %538
  %544 = load i64, ptr %540, align 8, !tbaa !17
  br label %551

545:                                              ; preds = %532
  %546 = getelementptr inbounds %union.UNOP_AUX_item, ptr %535, i64 1
  %547 = load i64, ptr %546, align 8, !tbaa !17
  br label %551

548:                                              ; preds = %532
  %549 = getelementptr inbounds %union.UNOP_AUX_item, ptr %535, i64 1
  %550 = load ptr, ptr %549, align 8, !tbaa !17
  br label %551

551:                                              ; preds = %541, %543, %532, %548, %545
  %552 = phi i64 [ 0, %532 ], [ %547, %545 ], [ 0, %541 ], [ 0, %543 ], [ 0, %548 ]
  %553 = phi ptr [ null, %532 ], [ null, %545 ], [ null, %541 ], [ null, %543 ], [ %550, %548 ]
  %554 = phi i64 [ %505, %532 ], [ %505, %545 ], [ %505, %541 ], [ %544, %543 ], [ %505, %548 ]
  %555 = phi ptr [ null, %532 ], [ null, %545 ], [ %542, %541 ], [ null, %543 ], [ null, %548 ]
  %556 = phi ptr [ %535, %532 ], [ %546, %545 ], [ %540, %541 ], [ %540, %543 ], [ %549, %548 ]
  %557 = icmp ne i64 %537, 0
  %558 = zext i1 %557 to i32
  %559 = add nuw nsw i32 %506, %558
  %560 = and i64 %511, 64
  %561 = icmp eq i64 %560, 0
  %562 = and i1 %557, %561
  %563 = icmp ne ptr %556, %438
  %564 = lshr i64 %511, 7
  %565 = select i1 %562, i1 %563, i1 false
  br i1 %565, label %502, label %566

566:                                              ; preds = %551, %481
  %567 = phi i64 [ %482, %481 ], [ %552, %551 ]
  %568 = phi ptr [ %483, %481 ], [ %553, %551 ]
  %569 = phi i64 [ %484, %481 ], [ %554, %551 ]
  %570 = phi ptr [ %485, %481 ], [ %555, %551 ]
  %571 = phi i32 [ %489, %481 ], [ %559, %551 ]
  %572 = phi i1 [ %491, %481 ], [ %561, %551 ]
  %573 = phi i64 [ %463, %481 ], [ %533, %551 ]
  %574 = phi ptr [ %464, %481 ], [ %534, %551 ]
  %575 = phi i8 [ %466, %481 ], [ %536, %551 ]
  %576 = phi i64 [ %467, %481 ], [ %537, %551 ]
  br i1 %435, label %577, label %600

577:                                              ; preds = %566
  br i1 %572, label %588, label %578

578:                                              ; preds = %577
  %579 = getelementptr inbounds %struct.op, ptr %15, i64 0, i32 6
  %580 = load i8, ptr %579, align 1, !tbaa !242
  %581 = zext i8 %580 to i32
  %582 = and i32 %581, 48
  %583 = icmp eq i32 %582, 0
  br i1 %583, label %588, label %584

584:                                              ; preds = %578
  %585 = and i32 %581, 16
  %586 = icmp eq i32 %585, 0
  %587 = select i1 %586, ptr @.str.110, ptr @.str.109
  br label %591

588:                                              ; preds = %578, %577
  %589 = icmp eq i8 %575, 0
  %590 = select i1 %589, ptr @.str.112, ptr @.str.111
  br label %591

591:                                              ; preds = %588, %584
  %592 = phi ptr [ %587, %584 ], [ %590, %588 ]
  store ptr %592, ptr %3, align 8, !tbaa !9
  %593 = icmp eq ptr %568, null
  br i1 %593, label %596, label %594

594:                                              ; preds = %591
  %595 = tail call ptr @Perl_varname(ptr noundef nonnull %568, i8 noundef signext 36, i64 noundef 0, ptr noundef null, i32 noundef 0, i32 noundef 1)
  br label %856

596:                                              ; preds = %591
  %597 = icmp eq i64 %567, 0
  br i1 %597, label %856, label %598

598:                                              ; preds = %596
  %599 = tail call ptr @Perl_varname(ptr noundef null, i8 noundef signext 36, i64 noundef %567, ptr noundef null, i32 noundef 0, i32 noundef 1)
  br label %856

600:                                              ; preds = %566
  %601 = icmp eq i32 %571, 1
  br i1 %601, label %602, label %856

602:                                              ; preds = %600
  %603 = icmp eq i64 %573, 0
  br i1 %603, label %604, label %611

604:                                              ; preds = %602
  %605 = icmp eq ptr %574, null
  br i1 %605, label %856, label %606

606:                                              ; preds = %604
  %607 = icmp eq i8 %575, 0
  %608 = getelementptr inbounds %struct.gv, ptr %574, i64 0, i32 3
  %609 = load ptr, ptr %608, align 8, !tbaa !17
  %610 = icmp eq i64 %576, 16
  br i1 %607, label %615, label %618

611:                                              ; preds = %602
  %612 = getelementptr inbounds ptr, ptr %16, i64 %573
  %613 = load ptr, ptr %612, align 8, !tbaa !9
  %614 = icmp eq i64 %576, 16
  br i1 %614, label %621, label %663

615:                                              ; preds = %606
  %616 = getelementptr inbounds %struct.gp, ptr %609, i64 0, i32 6
  %617 = load ptr, ptr %616, align 8, !tbaa !9
  br i1 %610, label %622, label %671

618:                                              ; preds = %606
  %619 = getelementptr inbounds %struct.gp, ptr %609, i64 0, i32 5
  %620 = load ptr, ptr %619, align 8, !tbaa !9
  br i1 %610, label %623, label %665

621:                                              ; preds = %611
  br i1 %14, label %624, label %656

622:                                              ; preds = %615
  br i1 %14, label %629, label %660

623:                                              ; preds = %618
  br i1 %14, label %634, label %658

624:                                              ; preds = %621
  %625 = getelementptr inbounds %struct.sv, ptr %613, i64 0, i32 2
  %626 = load i32, ptr %625, align 4, !tbaa !16
  %627 = and i32 %626, 14680064
  %628 = icmp eq i32 %627, 0
  br i1 %628, label %639, label %856

629:                                              ; preds = %622
  %630 = getelementptr inbounds %struct.sv, ptr %617, i64 0, i32 2
  %631 = load i32, ptr %630, align 4, !tbaa !16
  %632 = and i32 %631, 14680064
  %633 = icmp eq i32 %632, 0
  br i1 %633, label %649, label %856

634:                                              ; preds = %623
  %635 = getelementptr inbounds %struct.sv, ptr %620, i64 0, i32 2
  %636 = load i32, ptr %635, align 4, !tbaa !16
  %637 = and i32 %636, 14680064
  %638 = icmp eq i32 %637, 0
  br i1 %638, label %641, label %856

639:                                              ; preds = %624
  %640 = icmp eq i8 %575, 0
  br i1 %640, label %649, label %641

641:                                              ; preds = %634, %639
  %642 = phi ptr [ %613, %639 ], [ %620, %634 ]
  %643 = tail call ptr @Perl_hv_common(ptr noundef nonnull %642, ptr noundef %570, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 0, ptr noundef null, i32 noundef 0) #17
  %644 = icmp eq ptr %643, null
  br i1 %644, label %856, label %645

645:                                              ; preds = %641
  %646 = getelementptr inbounds %struct.he, ptr %643, i64 0, i32 2
  %647 = load ptr, ptr %646, align 8, !tbaa !17
  %648 = icmp eq ptr %647, %1
  br i1 %648, label %658, label %856

649:                                              ; preds = %629, %639
  %650 = phi ptr [ %613, %639 ], [ %617, %629 ]
  %651 = tail call ptr @Perl_av_fetch(ptr noundef nonnull %650, i64 noundef %569, i32 noundef 0) #17
  %652 = icmp eq ptr %651, null
  br i1 %652, label %856, label %653

653:                                              ; preds = %649
  %654 = load ptr, ptr %651, align 8, !tbaa !9
  %655 = icmp eq ptr %654, %1
  br i1 %655, label %660, label %856

656:                                              ; preds = %621
  %657 = icmp eq i8 %575, 0
  br i1 %657, label %660, label %658

658:                                              ; preds = %623, %645, %656
  %659 = tail call ptr @Perl_varname(ptr noundef %574, i8 noundef signext 37, i64 noundef %573, ptr noundef %570, i32 noundef 0, i32 noundef 3)
  br label %856

660:                                              ; preds = %622, %653, %656
  %661 = trunc i64 %569 to i32
  %662 = tail call ptr @Perl_varname(ptr noundef %574, i8 noundef signext 64, i64 noundef %573, ptr noundef null, i32 noundef %661, i32 noundef 2)
  br label %856

663:                                              ; preds = %611
  %664 = icmp eq i8 %575, 0
  br i1 %664, label %671, label %665

665:                                              ; preds = %618, %663
  %666 = phi ptr [ %613, %663 ], [ %620, %618 ]
  %667 = tail call fastcc ptr @S_find_hash_subscript(ptr noundef %666, ptr noundef %1)
  %668 = icmp eq ptr %667, null
  br i1 %668, label %677, label %669

669:                                              ; preds = %665
  %670 = tail call ptr @Perl_varname(ptr noundef %574, i8 noundef signext 37, i64 noundef %573, ptr noundef nonnull %667, i32 noundef 0, i32 noundef 3)
  br label %856

671:                                              ; preds = %615, %663
  %672 = phi ptr [ %613, %663 ], [ %617, %615 ]
  %673 = tail call fastcc i32 @S_find_array_subscript(ptr noundef %672, ptr noundef %1)
  %674 = icmp slt i32 %673, 0
  br i1 %674, label %677, label %675

675:                                              ; preds = %671
  %676 = tail call ptr @Perl_varname(ptr noundef %574, i8 noundef signext 64, i64 noundef %573, ptr noundef null, i32 noundef %673, i32 noundef 2)
  br label %856

677:                                              ; preds = %671, %665
  %678 = phi i8 [ 64, %671 ], [ 37, %665 ]
  br i1 %14, label %856, label %679

679:                                              ; preds = %677
  %680 = tail call ptr @Perl_varname(ptr noundef %574, i8 noundef signext %678, i64 noundef %573, ptr noundef null, i32 noundef 0, i32 noundef 4)
  br label %856

681:                                              ; preds = %18
  %682 = getelementptr inbounds %struct.binop, ptr %19, i64 0, i32 7
  br label %249

683:                                              ; preds = %18
  %684 = getelementptr inbounds %struct.unop, ptr %19, i64 0, i32 7
  %685 = load ptr, ptr %684, align 8, !tbaa !237
  %686 = getelementptr inbounds %struct.op, ptr %685, i64 0, i32 4
  %687 = load i16, ptr %686, align 8
  %688 = and i16 %687, 511
  switch i16 %688, label %696 [
    i16 3, label %693
    i16 0, label %689
  ]

689:                                              ; preds = %683
  %690 = getelementptr inbounds %struct.op, ptr %685, i64 0, i32 3
  %691 = load i64, ptr %690, align 8, !tbaa !236
  %692 = icmp eq i64 %691, 3
  br i1 %692, label %693, label %696

693:                                              ; preds = %683, %689
  %694 = getelementptr inbounds %struct.op, ptr %685, i64 0, i32 1
  %695 = load ptr, ptr %694, align 8, !tbaa !248
  br label %696

696:                                              ; preds = %683, %693, %689
  %697 = phi ptr [ %695, %693 ], [ %685, %689 ], [ %685, %683 ]
  %698 = getelementptr inbounds %struct.op, ptr %697, i64 0, i32 1
  %699 = load ptr, ptr %698, align 8, !tbaa !248
  %700 = icmp eq ptr %699, null
  br i1 %700, label %701, label %795

701:                                              ; preds = %696
  %702 = getelementptr inbounds %struct.op, ptr %697, i64 0, i32 4
  %703 = load i16, ptr %702, align 8
  %704 = and i16 %703, 511
  %705 = icmp eq i16 %704, 7
  br i1 %705, label %706, label %856

706:                                              ; preds = %701
  %707 = getelementptr inbounds %struct.svop, ptr %697, i64 0, i32 7
  %708 = load ptr, ptr %707, align 8, !tbaa !239
  br i1 %14, label %709, label %714

709:                                              ; preds = %706
  %710 = getelementptr inbounds %struct.gv, ptr %708, i64 0, i32 3
  %711 = load ptr, ptr %710, align 8, !tbaa !17
  %712 = load ptr, ptr %711, align 8, !tbaa !19
  %713 = icmp eq ptr %712, %1
  br i1 %713, label %714, label %856

714:                                              ; preds = %709, %706
  %715 = tail call ptr @Perl_varname(ptr noundef %708, i8 noundef signext 36, i64 noundef 0, ptr noundef null, i32 noundef 0, i32 noundef 1)
  br label %856

716:                                              ; preds = %18, %18, %18, %18
  %717 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 5
  %718 = load i8, ptr %717, align 2, !tbaa !249
  %719 = and i8 %718, 64
  %720 = icmp eq i8 %719, 0
  br i1 %720, label %721, label %795

721:                                              ; preds = %716
  %722 = load ptr, ptr @PL_defgv, align 8, !tbaa !9
  %723 = getelementptr inbounds %struct.gv, ptr %722, i64 0, i32 3
  %724 = load ptr, ptr %723, align 8, !tbaa !17
  %725 = load ptr, ptr %724, align 8, !tbaa !9
  %726 = icmp eq ptr %725, null
  br i1 %726, label %727, label %732

727:                                              ; preds = %721
  %728 = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %722, i32 noundef 0) #17
  %729 = getelementptr inbounds %struct.gv, ptr %728, i64 0, i32 3
  %730 = load ptr, ptr %729, align 8, !tbaa !17
  %731 = load ptr, ptr %730, align 8, !tbaa !9
  br label %732

732:                                              ; preds = %721, %727
  %733 = phi ptr [ %731, %727 ], [ %725, %721 ]
  %734 = icmp eq ptr %733, %1
  br i1 %734, label %735, label %737

735:                                              ; preds = %732
  %736 = tail call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @.str.113, i64 noundef 2, i32 noundef 524288)
  br label %856

737:                                              ; preds = %732
  %738 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 3
  %739 = load i64, ptr %738, align 8, !tbaa !236
  %740 = icmp eq i64 %739, 0
  br i1 %740, label %795, label %741

741:                                              ; preds = %737
  %742 = load ptr, ptr @PL_curpad, align 8, !tbaa !9
  %743 = getelementptr inbounds ptr, ptr %742, i64 %739
  %744 = load ptr, ptr %743, align 8, !tbaa !9
  %745 = icmp eq ptr %744, %1
  br i1 %745, label %746, label %795

746:                                              ; preds = %741
  %747 = tail call ptr @Perl_varname(ptr noundef null, i8 noundef signext 36, i64 noundef %739, ptr noundef null, i32 noundef 0, i32 noundef 1)
  br label %856

748:                                              ; preds = %18, %18, %18
  %749 = getelementptr inbounds %struct.unop, ptr %19, i64 0, i32 7
  %750 = load ptr, ptr %749, align 8, !tbaa !237
  %751 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 5
  %752 = load i8, ptr %751, align 2, !tbaa !249
  %753 = and i8 %752, 64
  %754 = icmp eq i8 %753, 0
  br i1 %754, label %807, label %755

755:                                              ; preds = %748
  %756 = getelementptr inbounds %struct.op, ptr %750, i64 0, i32 4
  %757 = load i16, ptr %756, align 8
  %758 = and i16 %757, 511
  switch i16 %758, label %811 [
    i16 3, label %763
    i16 0, label %759
  ]

759:                                              ; preds = %755
  %760 = getelementptr inbounds %struct.op, ptr %750, i64 0, i32 3
  %761 = load i64, ptr %760, align 8, !tbaa !236
  %762 = icmp eq i64 %761, 3
  br i1 %762, label %763, label %811

763:                                              ; preds = %755, %759
  %764 = getelementptr inbounds %struct.op, ptr %750, i64 0, i32 1
  %765 = load ptr, ptr %764, align 8, !tbaa !248
  %766 = getelementptr inbounds %struct.op, ptr %765, i64 0, i32 1
  br label %803

767:                                              ; preds = %18, %18
  %768 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.66, i64 noundef 1, i32 noundef 128, i32 noundef 3) #17
  %769 = icmp eq ptr %768, null
  br i1 %769, label %795, label %770

770:                                              ; preds = %767
  %771 = getelementptr inbounds %struct.gv, ptr %768, i64 0, i32 3
  %772 = load ptr, ptr %771, align 8, !tbaa !17
  %773 = load ptr, ptr %772, align 8, !tbaa !19
  %774 = icmp eq ptr %773, %1
  br i1 %774, label %775, label %795

775:                                              ; preds = %770
  %776 = tail call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @.str.114, i64 noundef 2, i32 noundef 524288)
  br label %856

777:                                              ; preds = %18
  %778 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 5
  %779 = load i8, ptr %778, align 2, !tbaa !249
  %780 = and i8 %779, 32
  %781 = icmp eq i8 %780, 0
  br i1 %781, label %856, label %782

782:                                              ; preds = %18, %18, %777
  %783 = load ptr, ptr @PL_rs, align 8, !tbaa !9
  %784 = getelementptr inbounds %struct.sv, ptr %783, i64 0, i32 2
  %785 = load i32, ptr %784, align 4, !tbaa !16
  %786 = and i32 %785, 2048
  %787 = icmp eq i32 %786, 0
  br i1 %787, label %795, label %788

788:                                              ; preds = %782
  %789 = getelementptr inbounds %struct.sv, ptr %783, i64 0, i32 3
  %790 = load ptr, ptr %789, align 8, !tbaa !17
  %791 = icmp eq ptr %790, %1
  br i1 %791, label %792, label %795

792:                                              ; preds = %788
  %793 = tail call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @.str.115, i64 noundef 5, i32 noundef 524288)
  br label %856

794:                                              ; preds = %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18, %18
  br label %795

795:                                              ; preds = %18, %794, %767, %770, %788, %782, %716, %737, %741, %696
  %796 = phi i1 [ %14, %788 ], [ %14, %782 ], [ %14, %716 ], [ %14, %741 ], [ %14, %737 ], [ %14, %696 ], [ %14, %770 ], [ %14, %767 ], [ true, %794 ], [ %14, %18 ]
  %797 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 5
  %798 = load i8, ptr %797, align 2, !tbaa !249
  %799 = and i8 %798, 4
  %800 = icmp eq i8 %799, 0
  br i1 %800, label %856, label %801

801:                                              ; preds = %795
  %802 = getelementptr inbounds %struct.unop, ptr %19, i64 0, i32 7
  br label %803

803:                                              ; preds = %801, %763
  %804 = phi ptr [ %766, %763 ], [ %802, %801 ]
  %805 = phi i1 [ true, %763 ], [ %796, %801 ]
  %806 = load ptr, ptr %804, align 8, !tbaa !9
  br label %807

807:                                              ; preds = %803, %748
  %808 = phi ptr [ %750, %748 ], [ %806, %803 ]
  %809 = phi i1 [ true, %748 ], [ %805, %803 ]
  %810 = icmp eq ptr %808, null
  br i1 %810, label %856, label %811

811:                                              ; preds = %755, %759, %807
  %812 = phi i1 [ %809, %807 ], [ true, %759 ], [ true, %755 ]
  %813 = phi ptr [ %808, %807 ], [ %750, %759 ], [ %750, %755 ]
  br label %814

814:                                              ; preds = %811, %840
  %815 = phi ptr [ %841, %840 ], [ null, %811 ]
  %816 = phi ptr [ %843, %840 ], [ %813, %811 ]
  %817 = getelementptr inbounds %struct.op, ptr %816, i64 0, i32 4
  %818 = load i16, ptr %817, align 8
  %819 = and i16 %818, 511
  switch i16 %819, label %838 [
    i16 5, label %820
    i16 0, label %833
    i16 3, label %840
    i16 390, label %840
  ]

820:                                              ; preds = %814
  %821 = getelementptr inbounds %struct.svop, ptr %816, i64 0, i32 7
  %822 = load ptr, ptr %821, align 8, !tbaa !239
  %823 = getelementptr inbounds %struct.sv, ptr %822, i64 0, i32 2
  %824 = load i32, ptr %823, align 4, !tbaa !16
  %825 = and i32 %824, 65280
  %826 = icmp ne i32 %825, 0
  %827 = and i32 %824, 255
  %828 = icmp eq i32 %827, 8
  %829 = or i1 %826, %828
  %830 = and i32 %824, 16826623
  %831 = icmp eq i32 %830, 16777226
  %832 = or i1 %831, %829
  br i1 %832, label %840, label %838

833:                                              ; preds = %814
  %834 = getelementptr inbounds %struct.op, ptr %816, i64 0, i32 5
  %835 = load i8, ptr %834, align 2, !tbaa !249
  %836 = and i8 %835, 4
  %837 = icmp eq i8 %836, 0
  br i1 %837, label %840, label %838

838:                                              ; preds = %814, %833, %820
  %839 = icmp eq ptr %815, null
  br i1 %839, label %840, label %847

840:                                              ; preds = %820, %833, %814, %814, %838
  %841 = phi ptr [ %816, %838 ], [ %815, %814 ], [ %815, %814 ], [ %815, %833 ], [ %815, %820 ]
  %842 = getelementptr inbounds %struct.op, ptr %816, i64 0, i32 1
  %843 = load ptr, ptr %842, align 8, !tbaa !248
  %844 = icmp eq ptr %843, null
  br i1 %844, label %845, label %814, !llvm.loop !250

845:                                              ; preds = %840
  %846 = icmp eq ptr %841, null
  br i1 %846, label %847, label %129

847:                                              ; preds = %845, %838
  br label %848

848:                                              ; preds = %847, %852
  %849 = phi ptr [ %854, %852 ], [ %813, %847 ]
  %850 = tail call fastcc ptr @S_find_uninit_var(ptr noundef nonnull %849, ptr noundef %1, i1 noundef zeroext true, ptr noundef %3)
  %851 = icmp eq ptr %850, null
  br i1 %851, label %852, label %856

852:                                              ; preds = %848
  %853 = getelementptr inbounds %struct.op, ptr %849, i64 0, i32 1
  %854 = load ptr, ptr %853, align 8, !tbaa !248
  %855 = icmp eq ptr %854, null
  br i1 %855, label %856, label %848, !llvm.loop !251

856:                                              ; preds = %129, %807, %795, %777, %239, %235, %18, %18, %244, %64, %252, %852, %848, %6, %112, %629, %634, %4, %138, %134, %144, %154, %170, %165, %160, %205, %709, %701, %111, %52, %184, %178, %189, %195, %216, %210, %221, %227, %277, %289, %332, %420, %270, %257, %341, %360, %600, %604, %624, %677, %641, %649, %366, %344, %645, %653, %658, %660, %596, %675, %669, %679, %598, %594, %400, %375, %416, %409, %421, %113, %775, %792, %746, %735, %714, %230, %198, %175, %158, %149
  %857 = phi ptr [ %793, %792 ], [ %776, %775 ], [ %736, %735 ], [ %747, %746 ], [ %715, %714 ], [ %234, %230 ], [ %204, %198 ], [ %176, %175 ], [ %159, %158 ], [ %150, %149 ], [ %121, %113 ], [ %403, %400 ], [ %376, %375 ], [ %419, %416 ], [ %412, %409 ], [ %430, %421 ], [ %662, %660 ], [ %659, %658 ], [ null, %596 ], [ %676, %675 ], [ %670, %669 ], [ %680, %679 ], [ %599, %598 ], [ %595, %594 ], [ null, %653 ], [ null, %645 ], [ null, %344 ], [ null, %366 ], [ null, %649 ], [ null, %641 ], [ null, %677 ], [ null, %624 ], [ null, %604 ], [ null, %600 ], [ null, %360 ], [ null, %341 ], [ null, %257 ], [ null, %270 ], [ null, %420 ], [ null, %332 ], [ null, %289 ], [ null, %277 ], [ null, %227 ], [ null, %221 ], [ null, %210 ], [ null, %216 ], [ null, %195 ], [ null, %189 ], [ null, %178 ], [ null, %184 ], [ null, %52 ], [ null, %111 ], [ null, %701 ], [ null, %709 ], [ null, %205 ], [ null, %160 ], [ null, %165 ], [ null, %170 ], [ null, %154 ], [ null, %144 ], [ null, %134 ], [ null, %138 ], [ null, %4 ], [ null, %634 ], [ null, %629 ], [ null, %112 ], [ null, %6 ], [ %850, %848 ], [ null, %852 ], [ null, %252 ], [ null, %64 ], [ null, %244 ], [ null, %18 ], [ null, %18 ], [ null, %235 ], [ null, %239 ], [ null, %777 ], [ null, %795 ], [ null, %807 ], [ null, %129 ]
  ret ptr %857
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_sv_display(ptr noundef %0, ptr noundef writeonly %1) unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 536870912
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %65, label %7

7:                                                ; preds = %2
  %8 = load ptr, ptr @PL_curcop, align 8, !tbaa !9
  %9 = getelementptr inbounds %struct.cop, ptr %8, i64 0, i32 10
  %10 = load i32, ptr %9, align 8, !tbaa !79
  %11 = and i32 %10, 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %65

13:                                               ; preds = %7
  %14 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %45

16:                                               ; preds = %13
  %17 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %18 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %18, ptr %17, align 8, !tbaa !26
  %19 = getelementptr inbounds %struct.sv, ptr %17, i64 0, i32 1
  store i32 170, ptr %19, align 8, !tbaa !13
  %20 = getelementptr inbounds %struct.sv, ptr %17, i64 0, i32 2
  store i32 0, ptr %20, align 4, !tbaa !16
  store ptr %17, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %21 = getelementptr inbounds %struct.sv, ptr %17, i64 1
  store ptr %21, ptr @PL_sv_root, align 8, !tbaa !9
  br label %22

22:                                               ; preds = %22, %16
  %23 = phi ptr [ %21, %16 ], [ %40, %22 ]
  %24 = phi i64 [ 1, %16 ], [ %39, %22 ]
  %25 = getelementptr inbounds %struct.sv, ptr %23, i64 1
  store ptr %25, ptr %23, align 8, !tbaa !26
  %26 = getelementptr inbounds %struct.sv, ptr %17, i64 %24, i32 2
  store i32 255, ptr %26, align 4, !tbaa !16
  %27 = add nuw nsw i64 %24, 1
  %28 = getelementptr inbounds %struct.sv, ptr %17, i64 %27
  %29 = getelementptr inbounds %struct.sv, ptr %28, i64 1
  store ptr %29, ptr %28, align 8, !tbaa !26
  %30 = getelementptr inbounds %struct.sv, ptr %17, i64 %27, i32 2
  store i32 255, ptr %30, align 4, !tbaa !16
  %31 = add nuw nsw i64 %24, 2
  %32 = getelementptr inbounds %struct.sv, ptr %17, i64 %31
  %33 = getelementptr inbounds %struct.sv, ptr %32, i64 1
  store ptr %33, ptr %32, align 8, !tbaa !26
  %34 = getelementptr inbounds %struct.sv, ptr %17, i64 %31, i32 2
  store i32 255, ptr %34, align 4, !tbaa !16
  %35 = add nuw nsw i64 %24, 3
  %36 = getelementptr inbounds %struct.sv, ptr %17, i64 %35
  %37 = getelementptr inbounds %struct.sv, ptr %36, i64 1
  store ptr %37, ptr %36, align 8, !tbaa !26
  %38 = getelementptr inbounds %struct.sv, ptr %17, i64 %35, i32 2
  store i32 255, ptr %38, align 4, !tbaa !16
  %39 = add nuw nsw i64 %24, 4
  %40 = getelementptr inbounds %struct.sv, ptr %17, i64 %39
  %41 = icmp eq i64 %39, 169
  br i1 %41, label %42, label %22, !llvm.loop !59

42:                                               ; preds = %22
  store ptr null, ptr %40, align 8, !tbaa !26
  %43 = getelementptr inbounds %struct.sv, ptr %17, i64 169, i32 2
  store i32 255, ptr %43, align 4, !tbaa !16
  %44 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %45

45:                                               ; preds = %13, %42
  %46 = phi ptr [ %44, %42 ], [ %14, %13 ]
  %47 = load ptr, ptr %46, align 8, !tbaa !26
  store ptr %47, ptr @PL_sv_root, align 8, !tbaa !9
  %48 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %49 = add nsw i64 %48, 1
  store i64 %49, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %46, align 8, !tbaa !26
  %50 = getelementptr inbounds %struct.sv, ptr %46, i64 0, i32 1
  store i32 1, ptr %50, align 8, !tbaa !13
  %51 = getelementptr inbounds %struct.sv, ptr %46, i64 0, i32 2
  store i32 0, ptr %51, align 4, !tbaa !16
  tail call void @Perl_sv_setpvn(ptr noundef nonnull %46, ptr noundef nonnull @.str.10, i64 noundef 0)
  %52 = load i32, ptr %51, align 4, !tbaa !16
  %53 = or i32 %52, 524288
  store i32 %53, ptr %51, align 4, !tbaa !16
  %54 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %55 = add nsw i64 %54, 1
  store i64 %55, ptr @PL_tmps_ix, align 8, !tbaa !60
  %56 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %57 = icmp slt i64 %55, %56
  br i1 %57, label %60, label %58

58:                                               ; preds = %45
  %59 = tail call i64 @Perl_tmps_grow_p(i64 noundef %55) #17
  br label %60

60:                                               ; preds = %45, %58
  %61 = phi i64 [ %59, %58 ], [ %55, %45 ]
  %62 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %63 = getelementptr inbounds ptr, ptr %62, i64 %61
  store ptr %46, ptr %63, align 8, !tbaa !9
  %64 = tail call ptr @Perl_sv_uni_display(ptr noundef nonnull %46, ptr noundef %0, i64 noundef 10, i64 noundef 1) #17
  br label %151

65:                                               ; preds = %7, %2
  %66 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %67 = load ptr, ptr %66, align 8, !tbaa !17
  %68 = load ptr, ptr %0, align 8, !tbaa !26
  %69 = getelementptr inbounds %struct.xpv, ptr %68, i64 0, i32 2
  %70 = load i64, ptr %69, align 8, !tbaa !57
  %71 = getelementptr inbounds i8, ptr %67, i64 %70
  %72 = icmp sgt i64 %70, 0
  br i1 %72, label %73, label %149

73:                                               ; preds = %65, %137
  %74 = phi ptr [ %140, %137 ], [ %1, %65 ]
  %75 = phi ptr [ %139, %137 ], [ %67, %65 ]
  %76 = phi i64 [ %138, %137 ], [ 0, %65 ]
  %77 = load i8, ptr %75, align 1, !tbaa !17
  %78 = zext i8 %77 to i32
  %79 = icmp sgt i8 %77, -1
  br i1 %79, label %85, label %80

80:                                               ; preds = %73
  %81 = add nsw i64 %76, 1
  %82 = getelementptr inbounds i8, ptr %1, i64 %81
  store i8 77, ptr %74, align 1, !tbaa !17
  %83 = add nsw i64 %76, 2
  store i8 45, ptr %82, align 1, !tbaa !17
  %84 = and i32 %78, 127
  br label %85

85:                                               ; preds = %80, %73
  %86 = phi i64 [ %76, %73 ], [ %83, %80 ]
  %87 = phi i32 [ %78, %73 ], [ %84, %80 ]
  %88 = getelementptr inbounds i8, ptr %1, i64 %86
  %89 = trunc i32 %87 to i8
  switch i8 %89, label %110 [
    i8 10, label %90
    i8 13, label %94
    i8 12, label %98
    i8 92, label %102
    i8 0, label %106
  ]

90:                                               ; preds = %85
  %91 = add nsw i64 %86, 1
  %92 = getelementptr inbounds i8, ptr %1, i64 %91
  store i8 92, ptr %88, align 1, !tbaa !17
  %93 = add nsw i64 %86, 2
  store i8 110, ptr %92, align 1, !tbaa !17
  br label %137

94:                                               ; preds = %85
  %95 = add nsw i64 %86, 1
  %96 = getelementptr inbounds i8, ptr %1, i64 %95
  store i8 92, ptr %88, align 1, !tbaa !17
  %97 = add nsw i64 %86, 2
  store i8 114, ptr %96, align 1, !tbaa !17
  br label %137

98:                                               ; preds = %85
  %99 = add nsw i64 %86, 1
  %100 = getelementptr inbounds i8, ptr %1, i64 %99
  store i8 92, ptr %88, align 1, !tbaa !17
  %101 = add nsw i64 %86, 2
  store i8 102, ptr %100, align 1, !tbaa !17
  br label %137

102:                                              ; preds = %85
  %103 = add nsw i64 %86, 1
  %104 = getelementptr inbounds i8, ptr %1, i64 %103
  store i8 92, ptr %88, align 1, !tbaa !17
  %105 = add nsw i64 %86, 2
  store i8 92, ptr %104, align 1, !tbaa !17
  br label %137

106:                                              ; preds = %85
  %107 = add nsw i64 %86, 1
  %108 = getelementptr inbounds i8, ptr %1, i64 %107
  store i8 92, ptr %88, align 1, !tbaa !17
  %109 = add nsw i64 %86, 2
  store i8 48, ptr %108, align 1, !tbaa !17
  br label %137

110:                                              ; preds = %85
  %111 = icmp ult i32 %87, 128
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = zext i32 %87 to i64
  br label %124

114:                                              ; preds = %110
  %115 = tail call ptr @__ctype_b_loc() #19
  %116 = load ptr, ptr %115, align 8, !tbaa !9
  %117 = zext i32 %87 to i64
  %118 = getelementptr inbounds i16, ptr %116, i64 %117
  %119 = load i16, ptr %118, align 2, !tbaa !205
  %120 = and i16 %119, 16384
  %121 = icmp eq i16 %120, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %114
  %123 = add nsw i64 %86, 1
  store i8 %89, ptr %88, align 1, !tbaa !17
  br label %137

124:                                              ; preds = %112, %114
  %125 = phi i64 [ %113, %112 ], [ %117, %114 ]
  %126 = add nsw i64 %86, 1
  %127 = getelementptr inbounds i8, ptr %1, i64 %126
  store i8 94, ptr %88, align 1, !tbaa !17
  %128 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %125
  %129 = load i32, ptr %128, align 4, !tbaa !25
  %130 = and i32 %129, 16392
  %131 = icmp eq i32 %130, 16392
  %132 = add nuw nsw i32 %87, 224
  %133 = select i1 %131, i32 %132, i32 %87
  %134 = trunc i32 %133 to i8
  %135 = xor i8 %134, 64
  %136 = add nsw i64 %86, 2
  store i8 %135, ptr %127, align 1, !tbaa !17
  br label %137

137:                                              ; preds = %94, %102, %122, %124, %106, %98, %90
  %138 = phi i64 [ %93, %90 ], [ %97, %94 ], [ %101, %98 ], [ %105, %102 ], [ %109, %106 ], [ %123, %122 ], [ %136, %124 ]
  %139 = getelementptr inbounds i8, ptr %75, i64 1
  %140 = getelementptr inbounds i8, ptr %1, i64 %138
  %141 = icmp ult ptr %139, %71
  %142 = icmp slt i64 %138, 56
  %143 = select i1 %141, i1 %142, i1 false
  br i1 %143, label %73, label %144, !llvm.loop !252

144:                                              ; preds = %137
  br i1 %141, label %145, label %149

145:                                              ; preds = %144
  %146 = getelementptr inbounds i8, ptr %140, i64 1
  store i8 46, ptr %140, align 1, !tbaa !17
  %147 = getelementptr inbounds i8, ptr %140, i64 2
  store i8 46, ptr %146, align 1, !tbaa !17
  %148 = getelementptr inbounds i8, ptr %140, i64 3
  store i8 46, ptr %147, align 1, !tbaa !17
  br label %149

149:                                              ; preds = %65, %145, %144
  %150 = phi ptr [ %148, %145 ], [ %140, %144 ], [ %1, %65 ]
  store i8 0, ptr %150, align 1, !tbaa !17
  br label %151

151:                                              ; preds = %149, %60
  %152 = phi ptr [ %1, %149 ], [ %64, %60 ]
  ret ptr %152
}

declare ptr @Perl_sv_uni_display(ptr noundef, ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare ptr @__ctype_b_loc() local_unnamed_addr #8

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_sv_2iuv_non_preserve(ptr nocapture noundef %0) unnamed_addr #1 {
  %2 = load ptr, ptr %0, align 8, !tbaa !26
  %3 = getelementptr inbounds %struct.xpvnv, ptr %2, i64 0, i32 5
  %4 = load double, ptr %3, align 8, !tbaa !17
  %5 = fcmp fast olt double %4, 0xC3E0000000000000
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = or i32 %8, 12800
  store i32 %9, ptr %7, align 4, !tbaa !16
  %10 = getelementptr inbounds %struct.xpviv, ptr %2, i64 0, i32 4
  store i64 -9223372036854775808, ptr %10, align 8, !tbaa !17
  br label %54

11:                                               ; preds = %1
  %12 = fcmp fast ogt double %4, 0x43F0000000000000
  %13 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !16
  br i1 %12, label %15, label %18

15:                                               ; preds = %11
  %16 = or i32 %14, -2147470848
  store i32 %16, ptr %13, align 4, !tbaa !16
  %17 = getelementptr inbounds %struct.xpvuv, ptr %2, i64 0, i32 4
  store i64 -1, ptr %17, align 8, !tbaa !17
  br label %54

18:                                               ; preds = %11
  %19 = or i32 %14, 12800
  store i32 %19, ptr %13, align 4, !tbaa !16
  %20 = load double, ptr %3, align 8, !tbaa !17
  %21 = fcmp fast ugt double %20, 0x43E0000000000000
  br i1 %21, label %36, label %22

22:                                               ; preds = %18
  %23 = tail call i64 @Perl_cast_iv(double noundef nofpclass(nan inf) %20) #17
  %24 = load ptr, ptr %0, align 8, !tbaa !26
  %25 = getelementptr inbounds %struct.xpviv, ptr %24, i64 0, i32 4
  store i64 %23, ptr %25, align 8, !tbaa !17
  %26 = load ptr, ptr %0, align 8, !tbaa !26
  %27 = getelementptr inbounds %struct.xpviv, ptr %26, i64 0, i32 4
  %28 = load i64, ptr %27, align 8, !tbaa !17
  %29 = sitofp i64 %28 to double
  %30 = getelementptr inbounds %struct.xpvnv, ptr %26, i64 0, i32 5
  %31 = load double, ptr %30, align 8, !tbaa !17
  %32 = fcmp fast oeq double %31, %29
  br i1 %32, label %33, label %54

33:                                               ; preds = %22
  %34 = load i32, ptr %13, align 4, !tbaa !16
  %35 = or i32 %34, 4352
  store i32 %35, ptr %13, align 4, !tbaa !16
  br label %54

36:                                               ; preds = %18
  %37 = or i32 %14, -2147470848
  store i32 %37, ptr %13, align 4, !tbaa !16
  %38 = load double, ptr %3, align 8, !tbaa !17
  %39 = tail call i64 @Perl_cast_uv(double noundef nofpclass(nan inf) %38) #17
  %40 = load ptr, ptr %0, align 8, !tbaa !26
  %41 = getelementptr inbounds %struct.xpvuv, ptr %40, i64 0, i32 4
  store i64 %39, ptr %41, align 8, !tbaa !17
  %42 = load ptr, ptr %0, align 8, !tbaa !26
  %43 = getelementptr inbounds %struct.xpvuv, ptr %42, i64 0, i32 4
  %44 = load i64, ptr %43, align 8, !tbaa !17
  %45 = uitofp i64 %44 to double
  %46 = getelementptr inbounds %struct.xpvnv, ptr %42, i64 0, i32 5
  %47 = load double, ptr %46, align 8, !tbaa !17
  %48 = fcmp fast une double %47, %45
  %49 = icmp eq i64 %44, -1
  %50 = or i1 %48, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %36
  %52 = load i32, ptr %13, align 4, !tbaa !16
  %53 = or i32 %52, 4352
  store i32 %53, ptr %13, align 4, !tbaa !16
  br label %54

54:                                               ; preds = %51, %36, %33, %22, %15, %6
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fabs.f64(double) #12

declare void @Perl_gv_name_set(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare void @Perl_mro_isa_changed_in(ptr noundef) local_unnamed_addr #3

declare ptr @Perl_mro_meta_init(ptr noundef) local_unnamed_addr #3

declare ptr @Perl_gv_fetchmeth_pvn_autoload(ptr noundef, ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare i32 @Perl_call_sv(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define internal fastcc i64 @S_sv_pos_u2b_midway(ptr noundef %0, ptr noundef %1, i64 noundef %2, i64 noundef %3) unnamed_addr #14 {
  %5 = sub i64 %3, %2
  %6 = shl i64 %5, 1
  %7 = icmp ugt i64 %6, %2
  br i1 %7, label %34, label %8

8:                                                ; preds = %4
  %9 = icmp eq i64 %3, %2
  br i1 %9, label %85, label %10

10:                                               ; preds = %8
  %11 = xor i64 %2, -1
  %12 = add i64 %11, %3
  %13 = and i64 %5, 3
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %29, label %15

15:                                               ; preds = %10, %25
  %16 = phi i64 [ %26, %25 ], [ %5, %10 ]
  %17 = phi ptr [ %21, %25 ], [ %1, %10 ]
  %18 = phi i64 [ %27, %25 ], [ 0, %10 ]
  br label %19

19:                                               ; preds = %19, %15
  %20 = phi ptr [ %21, %19 ], [ %17, %15 ]
  %21 = getelementptr inbounds i8, ptr %20, i64 -1
  %22 = load i8, ptr %21, align 1, !tbaa !17
  %23 = and i8 %22, -64
  %24 = icmp eq i8 %23, -128
  br i1 %24, label %19, label %25, !llvm.loop !160

25:                                               ; preds = %19
  %26 = add i64 %16, -1
  %27 = add i64 %18, 1
  %28 = icmp eq i64 %27, %13
  br i1 %28, label %29, label %15, !llvm.loop !253

29:                                               ; preds = %25, %10
  %30 = phi ptr [ undef, %10 ], [ %21, %25 ]
  %31 = phi i64 [ %5, %10 ], [ %26, %25 ]
  %32 = phi ptr [ %1, %10 ], [ %21, %25 ]
  %33 = icmp ult i64 %12, 3
  br i1 %33, label %85, label %76

34:                                               ; preds = %4
  %35 = icmp uge ptr %0, %1
  %36 = icmp eq i64 %2, 0
  %37 = or i1 %35, %36
  br i1 %37, label %51, label %38

38:                                               ; preds = %34, %38
  %39 = phi ptr [ %47, %38 ], [ %0, %34 ]
  %40 = phi i64 [ %41, %38 ], [ %2, %34 ]
  %41 = add i64 %40, -1
  %42 = load i8, ptr %39, align 1, !tbaa !17
  %43 = zext i8 %42 to i64
  %44 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %43
  %45 = load i8, ptr %44, align 1, !tbaa !17
  %46 = zext i8 %45 to i64
  %47 = getelementptr inbounds i8, ptr %39, i64 %46
  %48 = icmp uge ptr %47, %1
  %49 = icmp eq i64 %41, 0
  %50 = select i1 %48, i1 true, i1 %49
  br i1 %50, label %51, label %38, !llvm.loop !163

51:                                               ; preds = %38, %34
  %52 = phi ptr [ %0, %34 ], [ %47, %38 ]
  %53 = icmp ugt ptr %52, %1
  %54 = select i1 %53, ptr %1, ptr %52
  br label %85

55:                                               ; preds = %79, %55
  %56 = phi ptr [ %57, %55 ], [ %81, %79 ]
  %57 = getelementptr inbounds i8, ptr %56, i64 -1
  %58 = load i8, ptr %57, align 1, !tbaa !17
  %59 = and i8 %58, -64
  %60 = icmp eq i8 %59, -128
  br i1 %60, label %55, label %61, !llvm.loop !160

61:                                               ; preds = %55, %61
  %62 = phi ptr [ %63, %61 ], [ %57, %55 ]
  %63 = getelementptr inbounds i8, ptr %62, i64 -1
  %64 = load i8, ptr %63, align 1, !tbaa !17
  %65 = and i8 %64, -64
  %66 = icmp eq i8 %65, -128
  br i1 %66, label %61, label %67, !llvm.loop !160

67:                                               ; preds = %61, %67
  %68 = phi ptr [ %69, %67 ], [ %63, %61 ]
  %69 = getelementptr inbounds i8, ptr %68, i64 -1
  %70 = load i8, ptr %69, align 1, !tbaa !17
  %71 = and i8 %70, -64
  %72 = icmp eq i8 %71, -128
  br i1 %72, label %67, label %73, !llvm.loop !160

73:                                               ; preds = %67
  %74 = add i64 %77, -4
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %85, label %76, !llvm.loop !164

76:                                               ; preds = %29, %73
  %77 = phi i64 [ %74, %73 ], [ %31, %29 ]
  %78 = phi ptr [ %69, %73 ], [ %32, %29 ]
  br label %79

79:                                               ; preds = %79, %76
  %80 = phi ptr [ %81, %79 ], [ %78, %76 ]
  %81 = getelementptr inbounds i8, ptr %80, i64 -1
  %82 = load i8, ptr %81, align 1, !tbaa !17
  %83 = and i8 %82, -64
  %84 = icmp eq i8 %83, -128
  br i1 %84, label %79, label %55, !llvm.loop !160

85:                                               ; preds = %29, %73, %8, %51
  %86 = phi ptr [ %54, %51 ], [ %1, %8 ], [ %30, %29 ], [ %69, %73 ]
  %87 = ptrtoint ptr %86 to i64
  %88 = ptrtoint ptr %0 to i64
  %89 = sub i64 %87, %88
  ret i64 %89
}

declare void @Perl_save_I8(ptr noundef) local_unnamed_addr #3

declare ptr @Perl_utf8_hop(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_find_hash_subscript(ptr noundef readonly %0, ptr noundef readnone %1) unnamed_addr #1 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %142, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.hv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !64
  %7 = and i32 %6, 14680064
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %142

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.hv, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = icmp eq ptr %11, null
  br i1 %12, label %142, label %13

13:                                               ; preds = %9
  %14 = load ptr, ptr %0, align 8, !tbaa !66
  %15 = getelementptr inbounds %struct.xpvhv, ptr %14, i64 0, i32 2
  %16 = load i64, ptr %15, align 8, !tbaa !146
  %17 = icmp ugt i64 %16, 1000
  br i1 %17, label %142, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.xpvhv, ptr %14, i64 0, i32 3
  %20 = load i64, ptr %19, align 8, !tbaa !48
  %21 = and i64 %20, 2147483648
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %142

23:                                               ; preds = %18
  %24 = and i64 %20, 4294967295
  br label %25

25:                                               ; preds = %23, %134
  %26 = phi i64 [ %24, %23 ], [ %135, %134 ]
  %27 = getelementptr inbounds ptr, ptr %11, i64 %26
  br label %28

28:                                               ; preds = %32, %25
  %29 = phi ptr [ %27, %25 ], [ %30, %32 ]
  %30 = load ptr, ptr %29, align 8, !tbaa !9
  %31 = icmp eq ptr %30, null
  br i1 %31, label %134, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.he, ptr %30, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !17
  %35 = icmp ne ptr %34, %1
  %36 = icmp eq ptr %34, @PL_sv_undef
  %37 = or i1 %35, %36
  %38 = icmp eq ptr %34, @PL_sv_placeholder
  %39 = or i1 %38, %37
  br i1 %39, label %28, label %40, !llvm.loop !254

40:                                               ; preds = %32
  %41 = getelementptr inbounds %struct.he, ptr %30, i64 0, i32 1
  %42 = load ptr, ptr %41, align 8, !tbaa !148
  %43 = getelementptr inbounds %struct.hek, ptr %42, i64 0, i32 1
  %44 = load i32, ptr %43, align 4, !tbaa !84
  %45 = icmp eq i32 %44, -2
  br i1 %45, label %46, label %100

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.hek, ptr %42, i64 0, i32 2
  %48 = load ptr, ptr %47, align 4, !tbaa !9
  %49 = getelementptr inbounds %struct.sv, ptr %48, i64 0, i32 2
  %50 = load i32, ptr %49, align 4, !tbaa !16
  %51 = and i32 %50, 2097152
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %46
  %54 = tail call i32 @Perl_mg_get(ptr noundef nonnull %48) #17
  br label %55

55:                                               ; preds = %53, %46
  %56 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  %57 = icmp eq ptr %56, null
  br i1 %57, label %58, label %87

58:                                               ; preds = %55
  %59 = tail call ptr @Perl_safesysmalloc(i64 noundef 4080) #17
  %60 = load ptr, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  store ptr %60, ptr %59, align 8, !tbaa !26
  %61 = getelementptr inbounds %struct.sv, ptr %59, i64 0, i32 1
  store i32 170, ptr %61, align 8, !tbaa !13
  %62 = getelementptr inbounds %struct.sv, ptr %59, i64 0, i32 2
  store i32 0, ptr %62, align 4, !tbaa !16
  store ptr %59, ptr @PL_sv_arenaroot, align 8, !tbaa !9
  %63 = getelementptr inbounds %struct.sv, ptr %59, i64 1
  store ptr %63, ptr @PL_sv_root, align 8, !tbaa !9
  br label %64

64:                                               ; preds = %64, %58
  %65 = phi ptr [ %63, %58 ], [ %82, %64 ]
  %66 = phi i64 [ 1, %58 ], [ %81, %64 ]
  %67 = getelementptr inbounds %struct.sv, ptr %65, i64 1
  store ptr %67, ptr %65, align 8, !tbaa !26
  %68 = getelementptr inbounds %struct.sv, ptr %59, i64 %66, i32 2
  store i32 255, ptr %68, align 4, !tbaa !16
  %69 = add nuw nsw i64 %66, 1
  %70 = getelementptr inbounds %struct.sv, ptr %59, i64 %69
  %71 = getelementptr inbounds %struct.sv, ptr %70, i64 1
  store ptr %71, ptr %70, align 8, !tbaa !26
  %72 = getelementptr inbounds %struct.sv, ptr %59, i64 %69, i32 2
  store i32 255, ptr %72, align 4, !tbaa !16
  %73 = add nuw nsw i64 %66, 2
  %74 = getelementptr inbounds %struct.sv, ptr %59, i64 %73
  %75 = getelementptr inbounds %struct.sv, ptr %74, i64 1
  store ptr %75, ptr %74, align 8, !tbaa !26
  %76 = getelementptr inbounds %struct.sv, ptr %59, i64 %73, i32 2
  store i32 255, ptr %76, align 4, !tbaa !16
  %77 = add nuw nsw i64 %66, 3
  %78 = getelementptr inbounds %struct.sv, ptr %59, i64 %77
  %79 = getelementptr inbounds %struct.sv, ptr %78, i64 1
  store ptr %79, ptr %78, align 8, !tbaa !26
  %80 = getelementptr inbounds %struct.sv, ptr %59, i64 %77, i32 2
  store i32 255, ptr %80, align 4, !tbaa !16
  %81 = add nuw nsw i64 %66, 4
  %82 = getelementptr inbounds %struct.sv, ptr %59, i64 %81
  %83 = icmp eq i64 %81, 169
  br i1 %83, label %84, label %64, !llvm.loop !59

84:                                               ; preds = %64
  store ptr null, ptr %82, align 8, !tbaa !26
  %85 = getelementptr inbounds %struct.sv, ptr %59, i64 169, i32 2
  store i32 255, ptr %85, align 4, !tbaa !16
  %86 = load ptr, ptr @PL_sv_root, align 8, !tbaa !9
  br label %87

87:                                               ; preds = %55, %84
  %88 = phi ptr [ %86, %84 ], [ %56, %55 ]
  %89 = load ptr, ptr %88, align 8, !tbaa !26
  store ptr %89, ptr @PL_sv_root, align 8, !tbaa !9
  %90 = load i64, ptr @PL_sv_count, align 8, !tbaa !60
  %91 = add nsw i64 %90, 1
  store i64 %91, ptr @PL_sv_count, align 8, !tbaa !60
  store ptr null, ptr %88, align 8, !tbaa !26
  %92 = getelementptr inbounds %struct.sv, ptr %88, i64 0, i32 1
  store i32 1, ptr %92, align 8, !tbaa !13
  %93 = getelementptr inbounds %struct.sv, ptr %88, i64 0, i32 2
  store i32 0, ptr %93, align 4, !tbaa !16
  tail call void @Perl_sv_setsv_flags(ptr noundef nonnull %88, ptr noundef %48, i32 noundef 1536)
  %94 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %95 = add nsw i64 %94, 1
  store i64 %95, ptr @PL_tmps_ix, align 8, !tbaa !60
  %96 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %97 = icmp slt i64 %95, %96
  br i1 %97, label %129, label %98

98:                                               ; preds = %87
  %99 = tail call i64 @Perl_tmps_grow_p(i64 noundef %95) #17
  br label %129

100:                                              ; preds = %40
  %101 = tail call ptr @Perl_newSVhek(ptr noundef nonnull %42)
  %102 = icmp eq ptr %101, null
  br i1 %102, label %142, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %struct.sv, ptr %101, i64 0, i32 2
  %105 = load i32, ptr %104, align 4, !tbaa !16
  %106 = and i32 %105, 134283264
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %116, label %108

108:                                              ; preds = %103
  %109 = icmp eq ptr %101, @PL_sv_undef
  %110 = icmp eq ptr %101, @PL_sv_yes
  %111 = or i1 %109, %110
  %112 = icmp eq ptr %101, @PL_sv_no
  %113 = or i1 %112, %111
  %114 = icmp eq ptr %101, @PL_sv_placeholder
  %115 = or i1 %114, %113
  br i1 %115, label %142, label %116

116:                                              ; preds = %108, %103
  %117 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !60
  %118 = add nsw i64 %117, 1
  store i64 %118, ptr @PL_tmps_ix, align 8, !tbaa !60
  %119 = load i64, ptr @PL_tmps_max, align 8, !tbaa !60
  %120 = icmp slt i64 %118, %119
  br i1 %120, label %124, label %121

121:                                              ; preds = %116
  %122 = tail call i64 @Perl_tmps_grow_p(i64 noundef %118) #17
  %123 = load i32, ptr %104, align 4, !tbaa !16
  br label %124

124:                                              ; preds = %121, %116
  %125 = phi i32 [ %123, %121 ], [ %105, %116 ]
  %126 = phi i64 [ %122, %121 ], [ %118, %116 ]
  %127 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %128 = getelementptr inbounds ptr, ptr %127, i64 %126
  store ptr %101, ptr %128, align 8, !tbaa !9
  br label %137

129:                                              ; preds = %98, %87
  %130 = phi i64 [ %99, %98 ], [ %95, %87 ]
  %131 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !9
  %132 = getelementptr inbounds ptr, ptr %131, i64 %130
  store ptr %88, ptr %132, align 8, !tbaa !9
  %133 = load i32, ptr %93, align 4, !tbaa !16
  br label %137

134:                                              ; preds = %28
  %135 = add nsw i64 %26, -1
  %136 = icmp sgt i64 %26, 0
  br i1 %136, label %25, label %142, !llvm.loop !255

137:                                              ; preds = %124, %129
  %138 = phi i32 [ %133, %129 ], [ %125, %124 ]
  %139 = phi ptr [ %93, %129 ], [ %104, %124 ]
  %140 = phi ptr [ %88, %129 ], [ %101, %124 ]
  %141 = or i32 %138, 524288
  store i32 %141, ptr %139, align 4, !tbaa !16
  br label %142

142:                                              ; preds = %134, %137, %18, %100, %108, %2, %4, %9, %13
  %143 = phi ptr [ null, %13 ], [ null, %9 ], [ null, %4 ], [ null, %2 ], [ %101, %108 ], [ null, %100 ], [ null, %18 ], [ %140, %137 ], [ null, %134 ]
  ret ptr %143
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define internal fastcc i32 @S_find_array_subscript(ptr noundef readonly %0, ptr noundef readnone %1) unnamed_addr #14 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %32, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.av, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !133
  %7 = and i32 %6, 14680064
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %32

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.av, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = icmp eq ptr %11, null
  br i1 %12, label %32, label %13

13:                                               ; preds = %9
  %14 = load ptr, ptr %0, align 8, !tbaa !105
  %15 = getelementptr inbounds %struct.xpvav, ptr %14, i64 0, i32 2
  %16 = load i64, ptr %15, align 8, !tbaa !107
  %17 = icmp slt i64 %16, 1001
  %18 = icmp ne ptr %1, @PL_sv_undef
  %19 = and i1 %18, %17
  %20 = trunc i64 %16 to i32
  %21 = icmp sgt i32 %20, -1
  %22 = and i1 %19, %21
  br i1 %22, label %23, label %32

23:                                               ; preds = %13, %29
  %24 = phi i32 [ %30, %29 ], [ %20, %13 ]
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds ptr, ptr %11, i64 %25
  %27 = load ptr, ptr %26, align 8, !tbaa !9
  %28 = icmp eq ptr %27, %1
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = add nsw i32 %24, -1
  %31 = icmp sgt i32 %24, 0
  br i1 %31, label %23, label %32, !llvm.loop !241

32:                                               ; preds = %23, %29, %2, %4, %9, %13
  %33 = phi i32 [ -1, %13 ], [ -1, %9 ], [ -1, %4 ], [ -1, %2 ], [ %24, %23 ], [ -1, %29 ]
  ret i32 %33
}

declare ptr @Perl_av_fetch(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #3

declare ptr @Perl_gv_add_by_type(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #15

; Function Attrs: nofree nounwind willreturn memory(argmem: read)
declare i32 @bcmp(ptr nocapture, ptr nocapture, i64) local_unnamed_addr #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umin.i64(i64, i64) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #15

; Function Attrs: nofree nounwind willreturn memory(argmem: read)
declare ptr @memchr(ptr, i32, i64) local_unnamed_addr #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.abs.i64(i64, i1 immarg) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i8 @llvm.umax.i8(i8, i8) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.vector.reduce.add.v4i64(<4 x i64>) #15

attributes #0 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #4 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #5 = { mustprogress nofree nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #6 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #7 = { mustprogress nofree nounwind willreturn memory(argmem: read) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #8 = { mustprogress nofree nosync nounwind willreturn memory(none) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #9 = { nofree nounwind "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #10 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #11 = { mustprogress nocallback nofree nosync nounwind willreturn }
attributes #12 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #13 = { mustprogress nofree nounwind willreturn memory(argmem: write) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #14 = { nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #15 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #16 = { nofree nounwind willreturn memory(argmem: read) }
attributes #17 = { nounwind }
attributes #18 = { nounwind willreturn memory(read) }
attributes #19 = { nounwind willreturn memory(none) }
attributes #20 = { "function-inline-cost-multiplier"="2" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !6, i64 0}
!6 = !{!"_Bool", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!10, !10, i64 0}
!10 = !{!"any pointer", !7, i64 0}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.mustprogress"}
!13 = !{!14, !15, i64 8}
!14 = !{!"sv", !10, i64 0, !15, i64 8, !15, i64 12, !7, i64 16}
!15 = !{!"int", !7, i64 0}
!16 = !{!14, !15, i64 12}
!17 = !{!7, !7, i64 0}
!18 = distinct !{!18, !12}
!19 = !{!20, !10, i64 0}
!20 = !{!"gp", !10, i64 0, !10, i64 8, !10, i64 16, !15, i64 24, !15, i64 28, !10, i64 32, !10, i64 40, !10, i64 48, !10, i64 56, !15, i64 64, !15, i64 67, !10, i64 72}
!21 = !{!20, !10, i64 40}
!22 = !{!20, !10, i64 32}
!23 = !{!20, !10, i64 16}
!24 = !{!20, !10, i64 8}
!25 = !{!15, !15, i64 0}
!26 = !{!14, !10, i64 0}
!27 = distinct !{!27, !12}
!28 = distinct !{!28, !12}
!29 = !{!30, !15, i64 12}
!30 = !{!"arena_set", !10, i64 0, !15, i64 8, !15, i64 12, !7, i64 16}
!31 = !{!32, !10, i64 0}
!32 = !{!"arena_desc", !10, i64 0, !33, i64 8, !7, i64 16}
!33 = !{!"long", !7, i64 0}
!34 = distinct !{!34, !12}
!35 = !{!30, !10, i64 0}
!36 = distinct !{!36, !12}
!37 = !{!30, !15, i64 8}
!38 = !{!32, !33, i64 8}
!39 = !{!32, !7, i64 16}
!40 = !{!41, !7, i64 72}
!41 = !{!"xpvlv", !10, i64 0, !7, i64 8, !33, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !33, i64 56, !10, i64 64, !7, i64 72, !7, i64 73}
!42 = !{!43, !7, i64 0}
!43 = !{!"body_details", !7, i64 0, !7, i64 1, !7, i64 2, !15, i64 3, !15, i64 3, !15, i64 3, !15, i64 3, !15, i64 4}
!44 = !{!43, !15, i64 4}
!45 = !{!43, !7, i64 2}
!46 = !{!47, !10, i64 32}
!47 = !{!"xpvav", !10, i64 0, !7, i64 8, !33, i64 16, !33, i64 24, !10, i64 32}
!48 = !{!49, !33, i64 24}
!49 = !{!"xpvhv", !10, i64 0, !7, i64 8, !33, i64 16, !33, i64 24}
!50 = !{!51, !10, i64 0}
!51 = !{!"xpvmg", !10, i64 0, !7, i64 8, !33, i64 16, !7, i64 24, !7, i64 32, !7, i64 40}
!52 = !{!43, !7, i64 1}
!53 = !{!54, !15, i64 12}
!54 = !{!"io", !10, i64 0, !15, i64 8, !15, i64 12, !7, i64 16}
!55 = !{!56, !33, i64 64}
!56 = !{!"xpvio", !10, i64 0, !7, i64 8, !33, i64 16, !7, i64 24, !7, i64 32, !10, i64 40, !7, i64 48, !33, i64 56, !33, i64 64, !33, i64 72, !10, i64 80, !10, i64 88, !10, i64 96, !10, i64 104, !10, i64 112, !10, i64 120, !7, i64 128, !7, i64 129}
!57 = !{!58, !33, i64 16}
!58 = !{!"xpv", !10, i64 0, !7, i64 8, !33, i64 16, !7, i64 24}
!59 = distinct !{!59, !12}
!60 = !{!33, !33, i64 0}
!61 = !{!20, !15, i64 24}
!62 = !{!63, !10, i64 0}
!63 = !{!"gv", !10, i64 0, !15, i64 8, !15, i64 12, !7, i64 16}
!64 = !{!65, !15, i64 12}
!65 = !{!"hv", !10, i64 0, !15, i64 8, !15, i64 12, !7, i64 16}
!66 = !{!65, !10, i64 0}
!67 = !{!68, !15, i64 28}
!68 = !{!"xpvhv_aux", !7, i64 0, !10, i64 8, !10, i64 16, !15, i64 24, !15, i64 28, !10, i64 32, !15, i64 40, !15, i64 44, !15, i64 48, !15, i64 52}
!69 = !{!70, !33, i64 16}
!70 = !{!"xpvgv", !10, i64 0, !7, i64 8, !33, i64 16, !7, i64 24, !7, i64 32, !7, i64 40}
!71 = !{i64 0, i64 8, !9, i64 8, i64 8, !9, i64 8, i64 8, !60, i64 16, i64 8, !60, i64 24, i64 8, !60, i64 24, i64 8, !9, i64 32, i64 8, !60, i64 32, i64 8, !60, i64 32, i64 8, !9, i64 40, i64 8, !72, i64 40, i64 8, !9, i64 40, i64 4, !25, i64 44, i64 4, !25}
!72 = !{!73, !73, i64 0}
!73 = !{!"double", !7, i64 0}
!74 = !{i8 0, i8 2}
!75 = !{}
!76 = !{!77, !33, i64 24}
!77 = !{!"magic", !10, i64 0, !10, i64 8, !78, i64 16, !7, i64 18, !7, i64 19, !33, i64 24, !10, i64 32, !10, i64 40}
!78 = !{!"short", !7, i64 0}
!79 = !{!80, !15, i64 56}
!80 = !{!"cop", !10, i64 0, !10, i64 8, !10, i64 16, !33, i64 24, !15, i64 32, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !7, i64 34, !7, i64 35, !15, i64 36, !10, i64 40, !10, i64 48, !15, i64 56, !15, i64 60, !10, i64 64, !10, i64 72}
!81 = !{!77, !7, i64 19}
!82 = !{!83, !10, i64 0}
!83 = !{!"p5rx", !10, i64 0, !15, i64 8, !15, i64 12, !7, i64 16}
!84 = !{!85, !15, i64 4}
!85 = !{!"hek", !15, i64 0, !15, i64 4, !7, i64 8}
!86 = distinct !{!86, !12}
!87 = distinct !{!87, !12}
!88 = distinct !{!88, !12}
!89 = distinct !{!89, !90}
!90 = !{!"llvm.loop.peeled.count", i32 1}
!91 = distinct !{!91, !90}
!92 = distinct !{!92, !90}
!93 = distinct !{!93, !12}
!94 = distinct !{!94, !12, !95, !96}
!95 = !{!"llvm.loop.isvectorized", i32 1}
!96 = !{!"llvm.loop.unroll.runtime.disable"}
!97 = distinct !{!97, !12, !96, !95}
!98 = distinct !{!98, !12}
!99 = !{!100, !10, i64 24}
!100 = !{!"stackinfo", !10, i64 0, !10, i64 8, !10, i64 16, !10, i64 24, !15, i64 32, !15, i64 36, !15, i64 40, !15, i64 44}
!101 = !{!100, !10, i64 16}
!102 = !{!100, !15, i64 40}
!103 = !{!100, !15, i64 32}
!104 = !{!100, !10, i64 0}
!105 = !{!106, !10, i64 0}
!106 = !{!"av", !10, i64 0, !15, i64 8, !15, i64 12, !7, i64 16}
!107 = !{!47, !33, i64 16}
!108 = !{!47, !33, i64 24}
!109 = !{!77, !10, i64 40}
!110 = distinct !{!110, !12}
!111 = distinct !{!111, !12}
!112 = !{!77, !10, i64 0}
!113 = !{!77, !10, i64 32}
!114 = !{!77, !7, i64 18}
!115 = !{!77, !10, i64 8}
!116 = distinct !{!116, !12}
!117 = !{!80, !15, i64 36}
!118 = !{!20, !10, i64 56}
!119 = !{!120, !10, i64 0}
!120 = !{!"cv", !10, i64 0, !15, i64 8, !15, i64 12, !7, i64 16}
!121 = !{!122, !15, i64 92}
!122 = !{!"xpvcv", !10, i64 0, !7, i64 8, !33, i64 16, !7, i64 24, !10, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !10, i64 64, !7, i64 72, !10, i64 80, !15, i64 88, !15, i64 92, !15, i64 96}
!123 = !{!20, !15, i64 28}
!124 = !{!80, !10, i64 40}
!125 = distinct !{!125, !12}
!126 = distinct !{!126, !12}
!127 = !{!20, !10, i64 48}
!128 = !{!41, !10, i64 64}
!129 = !{!130, !10, i64 32}
!130 = !{!"mgvtbl", !10, i64 0, !10, i64 8, !10, i64 16, !10, i64 24, !10, i64 32, !10, i64 40, !10, i64 48, !10, i64 56}
!131 = distinct !{!131, !12}
!132 = distinct !{!132, !12}
!133 = !{!106, !15, i64 12}
!134 = !{!122, !10, i64 32}
!135 = !{!120, !15, i64 8}
!136 = distinct !{!136, !12}
!137 = distinct !{!137, !12, !95, !96}
!138 = distinct !{!138, !12, !95, !96}
!139 = distinct !{!139, !12, !95}
!140 = !{i64 0, i64 8, !9, i64 8, i64 4, !25, i64 12, i64 4, !25, i64 16, i64 8, !9, i64 16, i64 8, !60, i64 16, i64 8, !60, i64 16, i64 8, !72, i64 16, i64 8, !9, i64 16, i64 8, !9, i64 16, i64 8, !9, i64 16, i64 8, !9, i64 16, i64 8, !9, i64 16, i64 8, !9}
!141 = !{!56, !7, i64 129}
!142 = !{!56, !7, i64 128}
!143 = !{!56, !10, i64 80}
!144 = !{!56, !10, i64 96}
!145 = !{!56, !10, i64 112}
!146 = !{!49, !33, i64 16}
!147 = !{!85, !15, i64 0}
!148 = !{!149, !10, i64 8}
!149 = !{!"he", !10, i64 0, !10, i64 8, !7, i64 16}
!150 = !{!149, !10, i64 0}
!151 = distinct !{!151, !90}
!152 = distinct !{!152, !12}
!153 = !{!68, !10, i64 32}
!154 = !{!155, !15, i64 56}
!155 = !{!"mro_meta", !10, i64 0, !10, i64 8, !10, i64 16, !15, i64 24, !15, i64 28, !10, i64 32, !10, i64 40, !10, i64 48, !15, i64 56}
!156 = !{!157, !10, i64 0}
!157 = !{!"op", !10, i64 0, !10, i64 8, !10, i64 16, !33, i64 24, !15, i64 32, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !7, i64 34, !7, i64 35}
!158 = distinct !{!158, !12}
!159 = distinct !{!159, !12}
!160 = distinct !{!160, !12}
!161 = distinct !{!161, !162}
!162 = !{!"llvm.loop.unroll.disable"}
!163 = distinct !{!163, !12}
!164 = distinct !{!164, !12}
!165 = !{i32 -1, i32 2}
!166 = !{!167, !15, i64 24}
!167 = !{!"stat", !33, i64 0, !33, i64 8, !33, i64 16, !15, i64 24, !15, i64 28, !15, i64 32, !15, i64 36, !33, i64 40, !33, i64 48, !33, i64 56, !33, i64 64, !168, i64 72, !168, i64 88, !168, i64 104, !7, i64 120}
!168 = !{!"timespec", !33, i64 0, !33, i64 8}
!169 = !{!167, !33, i64 48}
!170 = distinct !{!170, !12, !90}
!171 = distinct !{!171, !12}
!172 = distinct !{!172, !12}
!173 = distinct !{!173, !12}
!174 = distinct !{!174, !12}
!175 = distinct !{!175, !12}
!176 = distinct !{!176, !12}
!177 = distinct !{!177, !12}
!178 = distinct !{!178, !12}
!179 = !{!180, !15, i64 64}
!180 = !{!"pmop", !10, i64 0, !10, i64 8, !10, i64 16, !33, i64 24, !15, i64 32, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !7, i64 34, !7, i64 35, !10, i64 40, !10, i64 48, !10, i64 56, !15, i64 64, !7, i64 72, !7, i64 80, !10, i64 88}
!181 = distinct !{!181, !12}
!182 = distinct !{!182, !12}
!183 = distinct !{!183, !12}
!184 = distinct !{!184, !12}
!185 = !{!63, !15, i64 12}
!186 = !{!106, !15, i64 8}
!187 = !{!41, !33, i64 56}
!188 = distinct !{!188, !12}
!189 = distinct !{!189, !12}
!190 = distinct !{!190, !12}
!191 = distinct !{!191, !12}
!192 = distinct !{!192, !12, !90}
!193 = distinct !{!193, !12}
!194 = distinct !{!194, !12}
!195 = distinct !{!195, !12}
!196 = distinct !{!196, !12}
!197 = distinct !{!197, !12}
!198 = distinct !{!198, !12}
!199 = distinct !{!199, !12}
!200 = distinct !{!200, !12}
!201 = distinct !{!201, !12}
!202 = distinct !{!202, !12}
!203 = distinct !{!203, !12}
!204 = distinct !{!204, !12}
!205 = !{!78, !78, i64 0}
!206 = distinct !{!206, !12}
!207 = distinct !{!207, !12}
!208 = distinct !{!208, !12}
!209 = distinct !{!209, !12}
!210 = distinct !{!210, !12}
!211 = distinct !{!211, !12}
!212 = distinct !{!212, !12}
!213 = !{!214, !33, i64 8}
!214 = !{!"ptr_tbl", !10, i64 0, !33, i64 8, !33, i64 16, !10, i64 24, !10, i64 32, !10, i64 40}
!215 = !{!214, !10, i64 0}
!216 = !{!217, !10, i64 8}
!217 = !{!"ptr_tbl_ent", !10, i64 0, !10, i64 8, !10, i64 16}
!218 = distinct !{!218, !12}
!219 = !{!217, !10, i64 16}
!220 = !{!214, !10, i64 32}
!221 = !{!214, !10, i64 40}
!222 = !{!214, !10, i64 24}
!223 = !{!224, !10, i64 0}
!224 = !{!"ptr_tbl_arena", !10, i64 0, !7, i64 8}
!225 = !{!217, !10, i64 0}
!226 = !{!214, !33, i64 16}
!227 = distinct !{!227, !12}
!228 = distinct !{!228, !12}
!229 = distinct !{!229, !12}
!230 = distinct !{!230, !12}
!231 = !{!232, !10, i64 0}
!232 = !{!"padname", !10, i64 0, !10, i64 8, !7, i64 16, !15, i64 24, !15, i64 28, !15, i64 32, !15, i64 36, !7, i64 40, !7, i64 41}
!233 = !{!234, !10, i64 8}
!234 = !{!"padlist", !33, i64 0, !10, i64 8, !15, i64 16, !15, i64 20}
!235 = !{!232, !7, i64 40}
!236 = !{!157, !33, i64 24}
!237 = !{!238, !10, i64 40}
!238 = !{!"unop", !10, i64 0, !10, i64 8, !10, i64 16, !33, i64 24, !15, i64 32, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !7, i64 34, !7, i64 35, !10, i64 40}
!239 = !{!240, !10, i64 40}
!240 = !{!"svop", !10, i64 0, !10, i64 8, !10, i64 16, !33, i64 24, !15, i64 32, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !7, i64 34, !7, i64 35, !10, i64 40}
!241 = distinct !{!241, !12}
!242 = !{!157, !7, i64 35}
!243 = !{!244, !10, i64 40}
!244 = !{!"binop", !10, i64 0, !10, i64 8, !10, i64 16, !33, i64 24, !15, i64 32, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !7, i64 34, !7, i64 35, !10, i64 40, !10, i64 48}
!245 = !{!244, !10, i64 48}
!246 = !{!247, !10, i64 48}
!247 = !{!"unop_aux", !10, i64 0, !10, i64 8, !10, i64 16, !33, i64 24, !15, i64 32, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !7, i64 34, !7, i64 35, !10, i64 40, !10, i64 48}
!248 = !{!157, !10, i64 8}
!249 = !{!157, !7, i64 34}
!250 = distinct !{!250, !12}
!251 = distinct !{!251, !12}
!252 = distinct !{!252, !12}
!253 = distinct !{!253, !162}
!254 = distinct !{!254, !12}
!255 = distinct !{!255, !12}
