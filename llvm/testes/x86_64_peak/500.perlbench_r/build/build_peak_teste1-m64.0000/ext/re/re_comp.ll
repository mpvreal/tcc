; ModuleID = 'ext/re/re_comp.c'
source_filename = "ext/re/re_comp.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.regexp_engine = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.cop = type { ptr, ptr, ptr, i64, i16, i8, i8, i32, ptr, ptr, i32, i32, ptr, ptr }
%struct.sv = type { ptr, i32, i32, %union.anon }
%union.anon = type { ptr }
%struct.scan_data_t = type { i64, i64, ptr, i64, i64, i64, ptr, ptr, i64, ptr, i32, ptr, i64, i64, ptr, i64, i32, i32, ptr, ptr }
%struct.RExC_state_t = type { i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, ptr, ptr, ptr, %struct.regnode_ssc, i32, i32, i32, i64, i32, i32, i32, i32, ptr, ptr, ptr, i32, i32, i32, ptr, ptr, i32, ptr, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i64, ptr, ptr, i32, i32, ptr, ptr, i32, ptr, i32, ptr, ptr }
%struct.regnode_ssc = type { i8, i8, i16, i32, [32 x i8], i32, ptr }
%struct.xpviv = type { ptr, %union._xmgu, i64, %union.anon.0, %union._xivu }
%union._xmgu = type { ptr }
%union.anon.0 = type { i64 }
%union._xivu = type { i64 }
%struct.op = type { ptr, ptr, ptr, i64, i16, i8, i8 }
%struct.listop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr }
%struct.svop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr }
%struct.xpv = type { ptr, %union._xmgu, i64, %union.anon.1 }
%union.anon.1 = type { i64 }
%struct.hv = type { ptr, i32, i32, %union.anon.2 }
%union.anon.2 = type { ptr }
%struct.p5rx = type { ptr, i32, i32, %union.anon.4 }
%union.anon.4 = type { ptr }
%struct.reg_code_block = type { i64, i64, ptr, ptr }
%struct.regexp = type { ptr, %union._xmgu, i64, %union.anon.5, ptr, ptr, ptr, i32, i64, i64, i64, ptr, i32, i32, ptr, i32, i32, ptr, ptr, ptr, i64, i64, i64, i64, i16, ptr }
%union.anon.5 = type { i64 }
%struct.stackinfo = type { ptr, ptr, ptr, ptr, i32, i32, i32, i32 }
%struct.xpvav = type { ptr, %union._xmgu, i64, i64, ptr }
%struct.av = type { ptr, i32, i32, %union.anon.12 }
%union.anon.12 = type { ptr }
%struct.gv = type { ptr, i32, i32, %union.anon.13 }
%union.anon.13 = type { ptr }
%struct.xpvnv = type { ptr, %union._xmgu, i64, %union.anon.14, %union._xivu, %union._xnvu }
%union.anon.14 = type { i64 }
%union._xnvu = type { double }
%struct.regexp_internal = type { i32, %union.anon.8, ptr, ptr, ptr, i32, [1 x %struct.regnode] }
%union.anon.8 = type { ptr }
%struct.regnode = type { i8, i8, i16 }
%struct.xpvio = type { ptr, %union._xmgu, i64, %union.anon.6, %union._xivu, ptr, %union.anon.7, i64, i64, i64, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8 }
%union.anon.6 = type { i64 }
%union.anon.7 = type { ptr }
%struct.regnode_1 = type { i8, i8, i16, i32 }
%struct.regnode_charclass_class = type { i8, i8, i16, i32, [32 x i8], i32 }
%struct.regnode_2 = type { i8, i8, i16, i16, i16 }
%struct.reg_data = type { i32, ptr, [1 x ptr] }
%struct._reg_trie_data = type { i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, i16, i32, i64, i64, i32, i32, i32, i64 }
%struct._reg_trie_state = type { i16, %union.anon.15 }
%union.anon.15 = type { ptr }
%struct._reg_ac_data = type { i32, i32, ptr, ptr }
%struct._reg_trie_trans = type { i32, i32 }
%struct.reg_substr_data = type { i8, [3 x %struct.reg_substr_datum] }
%struct.reg_substr_datum = type { i64, i64, ptr, ptr, i64 }
%struct.regnode_2L = type { i8, i8, i16, i32, i32 }
%struct.he = type { ptr, ptr, %union.anon.9 }
%union.anon.9 = type { ptr }
%struct.regnode_string = type { i8, i8, i16, [1 x i8] }
%struct.regnode_charclass = type { i8, i8, i16, i32, [32 x i8] }
%struct.regexp_paren_pair = type { i64, i64, i64 }
%struct.regmatch_info = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i64, i8, i8, i8, i8 }
%struct.scan_frame = type { ptr, ptr, i32, i32, i32, ptr, ptr, ptr }
%struct.magic = type { ptr, ptr, i16, i8, i8, i64, ptr, ptr }
%struct.xpvuv = type { ptr, %union._xmgu, i64, %union.anon.17, %union._xivu }
%union.anon.17 = type { i64 }
%struct.xpvinvlist = type { ptr, %union._xmgu, i64, %union.anon.16, i64, i64, i8 }
%union.anon.16 = type { i64 }
%struct.xpvhv = type { ptr, %union._xmgu, i64, i64 }
%struct.pmop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr, ptr, i32, %union.anon.10, %union.anon.11, ptr }
%union.anon.10 = type { ptr }
%union.anon.11 = type { ptr }
%struct.xpvmg = type { ptr, %union._xmgu, i64, %union.anon.3, %union._xivu, %union._xnvu }
%union.anon.3 = type { i64 }
%struct._reg_trie_trans_list_elem = type { i16, i32 }
%struct.reg_trie_wordinfo = type { i16, i32, i32 }
%struct.__va_list_tag = type { i32, i32, ptr, ptr }
%struct.xpvhv_aux = type { %union._xhvnameu, ptr, ptr, i32, i32, ptr, i32, i32, i32, i32 }
%union._xhvnameu = type { ptr }
%struct.hek = type { i32, i32, [1 x i8] }

@.str = private unnamed_addr constant [60 x i8] c"Assertion %s failed: file \22ext/re/../../regcomp.c\22, line %d\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"pattern\00", align 1
@my_reg_engine = external constant %struct.regexp_engine, align 8
@.str.2 = private unnamed_addr constant [15 x i8] c"\12E_DEBUG_FLAGS\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"eng\00", align 1
@PL_colorset = external local_unnamed_addr global i8, align 1
@PL_AboveLatin1 = external local_unnamed_addr global ptr, align 8
@AboveLatin1_invlist = internal constant [5 x i64] [i64 2, i64 148565664, i64 1, i64 0, i64 256], align 16
@Latin1_invlist = internal constant [5 x i64] [i64 2, i64 148565664, i64 0, i64 0, i64 256], align 16
@PL_Latin1 = external local_unnamed_addr global ptr, align 8
@UpperLatin1_invlist = internal constant [6 x i64] [i64 3, i64 148565664, i64 1, i64 0, i64 128, i64 256], align 16
@PL_UpperLatin1 = external local_unnamed_addr global ptr, align 8
@_Perl_Any_Folds_invlist = internal constant [238 x i64] [i64 235, i64 148565664, i64 1, i64 0, i64 65, i64 91, i64 97, i64 123, i64 181, i64 182, i64 192, i64 215, i64 216, i64 247, i64 248, i64 305, i64 306, i64 312, i64 313, i64 397, i64 398, i64 411, i64 412, i64 426, i64 428, i64 442, i64 444, i64 446, i64 447, i64 448, i64 452, i64 545, i64 546, i64 564, i64 570, i64 597, i64 598, i64 600, i64 601, i64 602, i64 603, i64 605, i64 608, i64 610, i64 611, i64 612, i64 613, i64 615, i64 616, i64 618, i64 619, i64 621, i64 623, i64 624, i64 625, i64 627, i64 629, i64 630, i64 637, i64 638, i64 640, i64 641, i64 643, i64 644, i64 647, i64 653, i64 658, i64 659, i64 670, i64 671, i64 700, i64 701, i64 702, i64 703, i64 768, i64 770, i64 775, i64 777, i64 778, i64 779, i64 780, i64 781, i64 787, i64 788, i64 817, i64 818, i64 834, i64 835, i64 837, i64 838, i64 880, i64 884, i64 886, i64 888, i64 891, i64 894, i64 895, i64 896, i64 902, i64 903, i64 904, i64 907, i64 908, i64 909, i64 910, i64 930, i64 931, i64 978, i64 981, i64 1014, i64 1015, i64 1020, i64 1021, i64 1154, i64 1162, i64 1328, i64 1329, i64 1367, i64 1377, i64 1416, i64 4256, i64 4294, i64 4295, i64 4296, i64 4301, i64 4302, i64 7545, i64 7546, i64 7549, i64 7550, i64 7680, i64 7836, i64 7838, i64 7839, i64 7840, i64 7958, i64 7960, i64 7966, i64 7968, i64 8006, i64 8008, i64 8014, i64 8016, i64 8024, i64 8025, i64 8026, i64 8027, i64 8028, i64 8029, i64 8030, i64 8031, i64 8062, i64 8064, i64 8117, i64 8118, i64 8125, i64 8126, i64 8127, i64 8130, i64 8133, i64 8134, i64 8141, i64 8144, i64 8148, i64 8150, i64 8156, i64 8160, i64 8173, i64 8178, i64 8181, i64 8182, i64 8189, i64 8486, i64 8487, i64 8490, i64 8492, i64 8498, i64 8499, i64 8526, i64 8527, i64 8544, i64 8576, i64 8579, i64 8581, i64 9398, i64 9450, i64 11264, i64 11311, i64 11312, i64 11359, i64 11360, i64 11377, i64 11378, i64 11380, i64 11381, i64 11383, i64 11390, i64 11492, i64 11499, i64 11503, i64 11506, i64 11508, i64 11520, i64 11558, i64 11559, i64 11560, i64 11565, i64 11566, i64 42560, i64 42606, i64 42624, i64 42652, i64 42786, i64 42800, i64 42802, i64 42864, i64 42873, i64 42888, i64 42891, i64 42894, i64 42896, i64 42900, i64 42902, i64 42926, i64 42928, i64 42930, i64 64256, i64 64263, i64 64275, i64 64280, i64 65313, i64 65339, i64 65345, i64 65371, i64 66560, i64 66640, i64 71840, i64 71904], align 16
@PL_utf8_foldable = external local_unnamed_addr global ptr, align 8
@_Perl_Folds_To_Multi_Char_invlist = internal constant [62 x i64] [i64 59, i64 148565664, i64 1, i64 0, i64 223, i64 224, i64 304, i64 305, i64 329, i64 330, i64 496, i64 497, i64 912, i64 913, i64 944, i64 945, i64 1415, i64 1416, i64 7830, i64 7835, i64 7838, i64 7839, i64 8016, i64 8017, i64 8018, i64 8019, i64 8020, i64 8021, i64 8022, i64 8023, i64 8064, i64 8112, i64 8114, i64 8117, i64 8118, i64 8120, i64 8124, i64 8125, i64 8130, i64 8133, i64 8134, i64 8136, i64 8140, i64 8141, i64 8146, i64 8148, i64 8150, i64 8152, i64 8162, i64 8165, i64 8166, i64 8168, i64 8178, i64 8181, i64 8182, i64 8184, i64 8188, i64 8189, i64 64256, i64 64263, i64 64275, i64 64280], align 16
@PL_HasMultiCharFold = external local_unnamed_addr global ptr, align 8
@PL_InBitmap = external local_unnamed_addr global ptr, align 8
@.str.4 = private unnamed_addr constant [5 x i8] c"expr\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"!new_patternp\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"Assembling pattern from %d elements%s\0A\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c" for split\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.9 = private unnamed_addr constant [123 x i8] c"expr->op_type == OP_PUSHMARK || (expr->op_type == OP_NULL && expr->op_targ == OP_PUSHMARK) || expr->op_type == OP_PADRANGE\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"Precompiled pattern%s\0A\00", align 1
@PL_curcop = external local_unnamed_addr global ptr, align 8
@PL_colors = external local_unnamed_addr global [6 x ptr], align 16
@.str.11 = private unnamed_addr constant [22 x i8] c"%sCompiling REx%s %s\0A\00", align 1
@PL_compiling = external global %struct.cop, align 8
@PL_tainting = external local_unnamed_addr global i8, align 1
@PL_tainted = external local_unnamed_addr global i8, align 1
@.str.12 = private unnamed_addr constant [42 x i8] c"Eval-group in insecure regular expression\00", align 1
@.str.13 = private unnamed_addr constant [30 x i8] c"!pRExC_state->runtime_code_qr\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"Starting first pass (sizing)\0A\00", align 1
@PL_valid_types_PVX = external local_unnamed_addr constant [0 x i8], align 1
@.str.15 = private unnamed_addr constant [70 x i8] c"PL_valid_types_PVX[((svtype)((code_blocksv)->sv_flags & 0xff)) & 0xf]\00", align 1
@.str.16 = private unnamed_addr constant [192 x i8] c"!((((code_blocksv)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((code_blocksv)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((code_blocksv)->sv_flags & 0xff)) == SVt_PVLV))\00", align 1
@.str.17 = private unnamed_addr constant [115 x i8] c"!(((svtype)((code_blocksv)->sv_flags & 0xff)) == SVt_PVIO && !(((XPVIO*) (code_blocksv)->sv_any)->xio_flags & 64))\00", align 1
@.str.18 = private unnamed_addr constant [70 x i8] c"panic: reg returned NULL to re_op_compile for sizing pass, flags=%#lx\00", align 1
@.str.19 = private unnamed_addr constant [57 x i8] c"Required size %ld nodes\0AStarting second pass (creation)\0A\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str.21 = private unnamed_addr constant [26 x i8] c"%s in regex m/%d%lu%4p%s/\00", align 1
@.str.22 = private unnamed_addr constant [20 x i8] c"Regexp out of space\00", align 1
@.str.24 = private unnamed_addr constant [63 x i8] c"(S_ReANY((const REGEXP *)(rx))->xpv_len_u.xpvlenu_pv - p) < 16\00", align 1
@.str.25 = private unnamed_addr constant [111 x i8] c"PL_valid_types_PVX[((svtype)((rx)->sv_flags & 0xff)) & 0xf] || ((svtype)((rx)->sv_flags & 0xff)) == SVt_REGEXP\00", align 1
@.str.26 = private unnamed_addr constant [162 x i8] c"!((((rx)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((rx)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((rx)->sv_flags & 0xff)) == SVt_PVLV))\00", align 1
@.str.27 = private unnamed_addr constant [95 x i8] c"!(((svtype)((rx)->sv_flags & 0xff)) == SVt_PVIO && !(((XPVIO*) (rx)->sv_any)->xio_flags & 64))\00", align 1
@.str.28 = private unnamed_addr constant [38 x i8] c"%s %lu bytes for offset annotations.\0A\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"Got\00", align 1
@.str.30 = private unnamed_addr constant [13 x i8] c"Couldn't get\00", align 1
@.str.31 = private unnamed_addr constant [74 x i8] c"panic: reg returned NULL to re_op_compile for generation pass, flags=%#lx\00", align 1
@.str.32 = private unnamed_addr constant [12 x i8] c"Restudying\0A\00", align 1
@PL_regkind = external local_unnamed_addr constant [0 x i8], align 1
@regarglen = internal unnamed_addr constant [94 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\02\00\00\01\01\09\01\09\02\00\01\01\01\00\00\01\01\01\01\01\01\01\00\00\00\00", align 16
@.str.33 = private unnamed_addr constant [23 x i8] c"%*sfirst:>%3d: %s (%d)\00", align 1
@.str.34 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c" [ \00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.37 = private unnamed_addr constant [18 x i8] c"SF_FL_BEFORE_SEOL\00", align 1
@.str.38 = private unnamed_addr constant [18 x i8] c"SF_FL_BEFORE_MEOL\00", align 1
@.str.39 = private unnamed_addr constant [10 x i8] c"SF_IS_INF\00", align 1
@.str.40 = private unnamed_addr constant [11 x i8] c"SF_HAS_PAR\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"SF_IN_PAR\00", align 1
@.str.42 = private unnamed_addr constant [12 x i8] c"SF_HAS_EVAL\00", align 1
@.str.43 = private unnamed_addr constant [14 x i8] c"SCF_DO_SUBSTR\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"SCF_DO_STCLASS_AND\00", align 1
@.str.45 = private unnamed_addr constant [18 x i8] c"SCF_DO_STCLASS_OR\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"SCF_DO_STCLASS\00", align 1
@.str.47 = private unnamed_addr constant [23 x i8] c"SCF_WHILEM_VISITED_POS\00", align 1
@.str.48 = private unnamed_addr constant [17 x i8] c"SCF_TRIE_RESTUDY\00", align 1
@.str.49 = private unnamed_addr constant [16 x i8] c"SCF_SEEN_ACCEPT\00", align 1
@.str.50 = private unnamed_addr constant [23 x i8] c"SCF_TRIE_DOING_RESTUDY\00", align 1
@.str.51 = private unnamed_addr constant [14 x i8] c"SCF_IN_DEFINE\00", align 1
@.str.52 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.53 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@PL_simple_bitmask = external local_unnamed_addr constant [0 x i8], align 1
@.str.54 = private unnamed_addr constant [14 x i8] c"first at %ld\0A\00", align 1
@PL_scopestack_name = external local_unnamed_addr global ptr, align 8
@.str.55 = private unnamed_addr constant [12 x i8] c"study_chunk\00", align 1
@PL_scopestack_ix = external local_unnamed_addr global i32, align 4
@PL_debug = external global i32, align 4
@.str.56 = private unnamed_addr constant [39 x i8] c"%s scope %ld (savestack=%ld) at %s:%d\0A\00", align 1
@.str.57 = private unnamed_addr constant [20 x i8] c"ENTER \22study_chunk\22\00", align 1
@PL_savestack_ix = external local_unnamed_addr global i32, align 4
@.str.58 = private unnamed_addr constant [23 x i8] c"ext/re/../../regcomp.c\00", align 1
@.str.59 = private unnamed_addr constant [12 x i8] c"RExC_seen: \00", align 1
@.str.60 = private unnamed_addr constant [19 x i8] c"REG_ZERO_LEN_SEEN \00", align 1
@.str.61 = private unnamed_addr constant [21 x i8] c"REG_LOOKBEHIND_SEEN \00", align 1
@.str.62 = private unnamed_addr constant [15 x i8] c"REG_GPOS_SEEN \00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c"REG_CANY_SEEN \00", align 1
@.str.64 = private unnamed_addr constant [18 x i8] c"REG_RECURSE_SEEN \00", align 1
@.str.65 = private unnamed_addr constant [29 x i8] c"REG_TOP_LEVEL_BRANCHES_SEEN \00", align 1
@.str.66 = private unnamed_addr constant [18 x i8] c"REG_VERBARG_SEEN \00", align 1
@.str.67 = private unnamed_addr constant [19 x i8] c"REG_CUTGROUP_SEEN \00", align 1
@.str.68 = private unnamed_addr constant [25 x i8] c"REG_RUN_ON_COMMENT_SEEN \00", align 1
@.str.69 = private unnamed_addr constant [25 x i8] c"REG_UNFOLDED_MULTI_SEEN \00", align 1
@.str.70 = private unnamed_addr constant [18 x i8] c"REG_GOSTART_SEEN \00", align 1
@.str.71 = private unnamed_addr constant [31 x i8] c"REG_UNBOUNDED_QUANTIFIER_SEEN \00", align 1
@.str.72 = private unnamed_addr constant [20 x i8] c"LEAVE \22study_chunk\22\00", align 1
@.str.73 = private unnamed_addr constant [139 x i8] c"((char*)PL_scopestack_name[PL_scopestack_ix-1] == (char*)\22study_chunk\22) || (!strcmp(PL_scopestack_name[PL_scopestack_ix-1],\22study_chunk\22))\00", align 1
@.str.75 = private unnamed_addr constant [25 x i8] c"synthetic stclass \22%s\22.\0A\00", align 1
@.str.76 = private unnamed_addr constant [18 x i8] c"\0AMulti Top Level\0A\00", align 1
@.str.77 = private unnamed_addr constant [38 x i8] c"minlen: %ld r->minlen:%ld maxlen:%ld\0A\00", align 1
@.str.78 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.79 = private unnamed_addr constant [33 x i8] c"study_chunk_recursed_count: %lu\0A\00", align 1
@.str.80 = private unnamed_addr constant [16 x i8] c"Final program:\0A\00", align 1
@.str.81 = private unnamed_addr constant [17 x i8] c"Offsets: [%lu]\0A\09\00", align 1
@.str.82 = private unnamed_addr constant [14 x i8] c"%lu:%lu[%lu] \00", align 1
@.str.83 = private unnamed_addr constant [3 x i8] c"rx\00", align 1
@PL_sv_yes = external global %struct.sv, align 8
@PL_sv_no = external global %struct.sv, align 8
@.str.84 = private unnamed_addr constant [38 x i8] c"panic: Unknown flags %d in named_buff\00", align 1
@.str.85 = private unnamed_addr constant [43 x i8] c"panic: Unknown flags %d in named_buff_iter\00", align 1
@.str.86 = private unnamed_addr constant [7 x i8] c"namesv\00", align 1
@PL_sv_undef = external global %struct.sv, align 8
@.str.87 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.88 = private unnamed_addr constant [45 x i8] c"panic: Unknown flags %d in named_buff_scalar\00", align 1
@PL_curpm = external local_unnamed_addr global ptr, align 8
@.str.89 = private unnamed_addr constant [16 x i8] c"s >= rx->subbeg\00", align 1
@.str.90 = private unnamed_addr constant [53 x i8] c"(STRLEN)rx->sublen >= (STRLEN)((s - rx->subbeg) + i)\00", align 1
@.str.91 = private unnamed_addr constant [46 x i8] c"((svtype)((sv)->sv_flags & 0xff)) >= SVt_PVMG\00", align 1
@PL_localizing = external local_unnamed_addr global i8, align 1
@.str.92 = private unnamed_addr constant [3 x i8] c"sv\00", align 1
@.str.93 = private unnamed_addr constant [7 x i8] c"Regexp\00", align 1
@.str.95 = private unnamed_addr constant [22 x i8] c"anchored %s%s at %ld \00", align 1
@.str.96 = private unnamed_addr constant [2 x i8] c"$\00", align 1
@.str.97 = private unnamed_addr constant [27 x i8] c"anchored utf8 %s%s at %ld \00", align 1
@.str.98 = private unnamed_addr constant [27 x i8] c"floating %s%s at %ld..%lu \00", align 1
@.str.99 = private unnamed_addr constant [32 x i8] c"floating utf8 %s%s at %ld..%lu \00", align 1
@.str.100 = private unnamed_addr constant [19 x i8] c"(checking floating\00", align 1
@.str.101 = private unnamed_addr constant [19 x i8] c"(checking anchored\00", align 1
@.str.102 = private unnamed_addr constant [8 x i8] c" noscan\00", align 1
@.str.103 = private unnamed_addr constant [7 x i8] c" isall\00", align 1
@.str.104 = private unnamed_addr constant [3 x i8] c") \00", align 1
@.str.105 = private unnamed_addr constant [12 x i8] c"stclass %s \00", align 1
@.str.106 = private unnamed_addr constant [9 x i8] c"anchored\00", align 1
@.str.107 = private unnamed_addr constant [7 x i8] c"(MBOL)\00", align 1
@.str.108 = private unnamed_addr constant [7 x i8] c"(SBOL)\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c"(GPOS)\00", align 1
@.str.110 = private unnamed_addr constant [10 x i8] c"GPOS:%lu \00", align 1
@.str.111 = private unnamed_addr constant [6 x i8] c"plus \00", align 1
@.str.112 = private unnamed_addr constant [10 x i8] c"implicit \00", align 1
@.str.113 = private unnamed_addr constant [12 x i8] c"minlen %ld \00", align 1
@.str.114 = private unnamed_addr constant [11 x i8] c"with eval \00", align 1
@.str.115 = private unnamed_addr constant [14 x i8] c"r->extflags: \00", align 1
@.str.116 = private unnamed_addr constant [14 x i8] c"r->intflags: \00", align 1
@my_regprop.anyofs = internal unnamed_addr constant [32 x ptr] [ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148], align 16
@.str.117 = private unnamed_addr constant [3 x i8] c"\\w\00", align 1
@.str.118 = private unnamed_addr constant [3 x i8] c"\\W\00", align 1
@.str.119 = private unnamed_addr constant [3 x i8] c"\\d\00", align 1
@.str.120 = private unnamed_addr constant [3 x i8] c"\\D\00", align 1
@.str.121 = private unnamed_addr constant [10 x i8] c"[:alpha:]\00", align 1
@.str.122 = private unnamed_addr constant [11 x i8] c"[:^alpha:]\00", align 1
@.str.123 = private unnamed_addr constant [10 x i8] c"[:lower:]\00", align 1
@.str.124 = private unnamed_addr constant [11 x i8] c"[:^lower:]\00", align 1
@.str.125 = private unnamed_addr constant [10 x i8] c"[:upper:]\00", align 1
@.str.126 = private unnamed_addr constant [11 x i8] c"[:^upper:]\00", align 1
@.str.127 = private unnamed_addr constant [10 x i8] c"[:punct:]\00", align 1
@.str.128 = private unnamed_addr constant [11 x i8] c"[:^punct:]\00", align 1
@.str.129 = private unnamed_addr constant [10 x i8] c"[:print:]\00", align 1
@.str.130 = private unnamed_addr constant [11 x i8] c"[:^print:]\00", align 1
@.str.131 = private unnamed_addr constant [10 x i8] c"[:alnum:]\00", align 1
@.str.132 = private unnamed_addr constant [11 x i8] c"[:^alnum:]\00", align 1
@.str.133 = private unnamed_addr constant [10 x i8] c"[:graph:]\00", align 1
@.str.134 = private unnamed_addr constant [11 x i8] c"[:^graph:]\00", align 1
@.str.135 = private unnamed_addr constant [10 x i8] c"[:cased:]\00", align 1
@.str.136 = private unnamed_addr constant [11 x i8] c"[:^cased:]\00", align 1
@.str.137 = private unnamed_addr constant [3 x i8] c"\\s\00", align 1
@.str.138 = private unnamed_addr constant [3 x i8] c"\\S\00", align 1
@.str.139 = private unnamed_addr constant [10 x i8] c"[:blank:]\00", align 1
@.str.140 = private unnamed_addr constant [11 x i8] c"[:^blank:]\00", align 1
@.str.141 = private unnamed_addr constant [11 x i8] c"[:xdigit:]\00", align 1
@.str.142 = private unnamed_addr constant [12 x i8] c"[:^xdigit:]\00", align 1
@.str.143 = private unnamed_addr constant [10 x i8] c"[:cntrl:]\00", align 1
@.str.144 = private unnamed_addr constant [11 x i8] c"[:^cntrl:]\00", align 1
@.str.145 = private unnamed_addr constant [10 x i8] c"[:ascii:]\00", align 1
@.str.146 = private unnamed_addr constant [11 x i8] c"[:^ascii:]\00", align 1
@.str.147 = private unnamed_addr constant [3 x i8] c"\\v\00", align 1
@.str.148 = private unnamed_addr constant [3 x i8] c"\\V\00", align 1
@.str.149 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@.str.150 = private unnamed_addr constant [32 x i8] c"Corrupted regexp opcode %d > %d\00", align 1
@PL_reg_name = external local_unnamed_addr global [0 x ptr], align 8
@.str.151 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.152 = private unnamed_addr constant [4 x i8] c"-%s\00", align 1
@.str.153 = private unnamed_addr constant [38 x i8] c"<S:%lu/%ld W:%lu L:%lu/%lu C:%lu/%lu>\00", align 1
@.str.154 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.155 = private unnamed_addr constant [5 x i8] c"[%d]\00", align 1
@.str.156 = private unnamed_addr constant [9 x i8] c" {%d,%d}\00", align 1
@.str.157 = private unnamed_addr constant [8 x i8] c"[%d/%d]\00", align 1
@.str.158 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.159 = private unnamed_addr constant [7 x i8] c" '%-p'\00", align 1
@.str.160 = private unnamed_addr constant [6 x i8] c"%s%ld\00", align 1
@.str.161 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.162 = private unnamed_addr constant [7 x i8] c": FAIL\00", align 1
@.str.163 = private unnamed_addr constant [24 x i8] c": ACCEPT - EMPTY STRING\00", align 1
@.str.164 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.165 = private unnamed_addr constant [8 x i8] c"%d[%+d]\00", align 1
@.str.166 = private unnamed_addr constant [5 x i8] c":%-p\00", align 1
@.str.167 = private unnamed_addr constant [6 x i8] c"{loc}\00", align 1
@.str.168 = private unnamed_addr constant [4 x i8] c"{i}\00", align 1
@.str.169 = private unnamed_addr constant [4 x i8] c"[%s\00", align 1
@.str.170 = private unnamed_addr constant [2 x i8] c"^\00", align 1
@.str.171 = private unnamed_addr constant [7 x i8] c"%s][%s\00", align 1
@.str.172 = private unnamed_addr constant [22 x i8] c"{non-utf8-latin1-all}\00", align 1
@.str.173 = private unnamed_addr constant [19 x i8] c"{above_bitmap_all}\00", align 1
@.str.174 = private unnamed_addr constant [17 x i8] c"{outside bitmap}\00", align 1
@.str.175 = private unnamed_addr constant [7 x i8] c"{utf8}\00", align 1
@.str.176 = private unnamed_addr constant [8 x i8] c"%.*s...\00", align 1
@.str.177 = private unnamed_addr constant [14 x i8] c"{utf8 locale}\00", align 1
@.str.178 = private unnamed_addr constant [4 x i8] c"%s]\00", align 1
@.str.179 = private unnamed_addr constant [19 x i8] c"[illegal type=%d])\00", align 1
@.str.180 = private unnamed_addr constant [6 x i8] c"{gcb}\00", align 1
@.str.181 = private unnamed_addr constant [5 x i8] c"{sb}\00", align 1
@.str.182 = private unnamed_addr constant [5 x i8] c"{wb}\00", align 1
@reltable.my_regprop = private unnamed_addr constant [4 x i32] [i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.8 to i64), i64 ptrtoint (ptr @reltable.my_regprop to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.180 to i64), i64 ptrtoint (ptr @reltable.my_regprop to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.181 to i64), i64 ptrtoint (ptr @reltable.my_regprop to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.182 to i64), i64 ptrtoint (ptr @reltable.my_regprop to i64)) to i32)], align 4
@.str.183 = private unnamed_addr constant [6 x i8] c" /%s/\00", align 1
@.str.184 = private unnamed_addr constant [3 x i8] c"\\A\00", align 1
@.str.185 = private unnamed_addr constant [39 x i8] c"%sUsing REx %ssubstr:%s \22%s%.60s%s%s\22\0A\00", align 1
@.str.186 = private unnamed_addr constant [6 x i8] c"utf8 \00", align 1
@.str.187 = private unnamed_addr constant [21 x i8] c"%sFreeing REx:%s %s\0A\00", align 1
@.str.188 = private unnamed_addr constant [15 x i8] c"ri->regstclass\00", align 1
@.str.189 = private unnamed_addr constant [30 x i8] c"panic: regfree data code '%c'\00", align 1
@.str.190 = private unnamed_addr constant [59 x i8] c"oplist->op_type == OP_PADAV || oplist->op_type == OP_RV2AV\00", align 1
@.str.191 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.192 = private unnamed_addr constant [33 x i8] c"n < pRExC_state->num_code_blocks\00", align 1
@.str.193 = private unnamed_addr constant [7 x i8] c"oplist\00", align 1
@.str.194 = private unnamed_addr constant [38 x i8] c"Overloaded qr did not return a REGEXP\00", align 1
@.str.195 = private unnamed_addr constant [59 x i8] c"Assertion %s failed: file \22ext/re/../../inline.h\22, line %d\00", align 1
@.str.196 = private unnamed_addr constant [137 x i8] c"(((svtype)((re)->sv_flags & 0xff)) == SVt_REGEXP || ((re)->sv_flags & (0xff|0x00004000|0x00008000|0x01000000)) == (SVt_PVLV|0x01000000))\00", align 1
@.str.197 = private unnamed_addr constant [53 x i8] c"(pRExC_state->utf8) && ((qr)->sv_flags & 0x20000000)\00", align 1
@PL_stack_sp = external local_unnamed_addr global ptr, align 8
@.str.198 = private unnamed_addr constant [14 x i8] c"pat[s] == '('\00", align 1
@.str.199 = private unnamed_addr constant [45 x i8] c"%sre-parsing pattern for runtime code:%s %s\0A\00", align 1
@.str.200 = private unnamed_addr constant [6 x i8] c"ENTER\00", align 1
@PL_tmps_floor = external global i64, align 8
@PL_tmps_ix = external local_unnamed_addr global i64, align 8
@PL_curstackinfo = external local_unnamed_addr global ptr, align 8
@.str.201 = private unnamed_addr constant [28 x i8] c"push STACKINFO %d at %s:%d\0A\00", align 1
@PL_stack_base = external local_unnamed_addr global ptr, align 8
@PL_curstack = external local_unnamed_addr global ptr, align 8
@PL_stack_max = external local_unnamed_addr global ptr, align 8
@PL_markstack_ptr = external local_unnamed_addr global ptr, align 8
@PL_markstack = external local_unnamed_addr global ptr, align 8
@PL_errgv = external local_unnamed_addr global ptr, align 8
@.str.202 = private unnamed_addr constant [4 x i8] c"%-p\00", align 1
@.str.203 = private unnamed_addr constant [34 x i8] c"((qr_ref)->sv_flags & 0x00000800)\00", align 1
@.str.204 = private unnamed_addr constant [109 x i8] c"((svtype)((qr)->sv_flags & 0xff)) == SVt_REGEXP && (S_ReANY((const REGEXP *)((REGEXP*)qr))->engine)->op_comp\00", align 1
@.str.205 = private unnamed_addr constant [28 x i8] c"pop  STACKINFO %d at %s:%d\0A\00", align 1
@.str.206 = private unnamed_addr constant [6 x i8] c"LEAVE\00", align 1
@.str.207 = private unnamed_addr constant [37 x i8] c"src->end < r2->code_blocks[i2].start\00", align 1
@.str.208 = private unnamed_addr constant [54 x i8] c"r1->code_blocks[i1].start > r2->code_blocks[i2].start\00", align 1
@.str.209 = private unnamed_addr constant [37 x i8] c"src->end < r1->code_blocks[i1].start\00", align 1
@.str.210 = private unnamed_addr constant [23 x i8] c"pat[src->start] == '('\00", align 1
@.str.211 = private unnamed_addr constant [21 x i8] c"pat[src->end] == ')'\00", align 1
@.str.212 = private unnamed_addr constant [60 x i8] c"UTF8 mismatch! Converting to utf8 for resizing and compile\0A\00", align 1
@.str.213 = private unnamed_addr constant [16 x i8] c"*(d - 1) == '('\00", align 1
@.str.214 = private unnamed_addr constant [16 x i8] c"*(d - 1) == ')'\00", align 1
@.str.216 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.217 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@.str.218 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str.219 = private unnamed_addr constant [3 x i8] c"aa\00", align 1
@.str.220 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.221 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.223 = private unnamed_addr constant [12 x i8] c"pRExC_state\00", align 1
@.str.225 = private unnamed_addr constant [37 x i8] c"%*sStclass Failtable (%lu states): 0\00", align 1
@.str.226 = private unnamed_addr constant [6 x i8] c", %lu\00", align 1
@.str.227 = private unnamed_addr constant [4 x i8] c"ssc\00", align 1
@.str.228 = private unnamed_addr constant [48 x i8] c"(((ssc)->type) == 19 && ((ssc)->next_off) == 1)\00", align 1
@.str.229 = private unnamed_addr constant [8 x i8] c"invlist\00", align 1
@.str.230 = private unnamed_addr constant [116 x i8] c"panic: attempting to append to an inversion list, but wasn't at the end of the list, final=%lu, start=%lu, match=%c\00", align 1
@.str.231 = private unnamed_addr constant [54 x i8] c"((svtype)((invlist)->sv_flags & 0xff)) == SVt_INVLIST\00", align 1
@.str.232 = private unnamed_addr constant [67 x i8] c"Assertion %s failed: file \22ext/re/../../invlist_inline.h\22, line %d\00", align 1
@.str.233 = private unnamed_addr constant [26 x i8] c"! S__invlist_len(invlist)\00", align 1
@.str.234 = private unnamed_addr constant [24 x i8] c"S__invlist_len(invlist)\00", align 1
@.str.235 = private unnamed_addr constant [33 x i8] c"0 == *(((invlist)->sv_u.svu_pv))\00", align 1
@.str.236 = private unnamed_addr constant [121 x i8] c"PL_valid_types_PVX[((svtype)((invlist)->sv_flags & 0xff)) & 0xf] || ((svtype)((invlist)->sv_flags & 0xff)) == SVt_REGEXP\00", align 1
@.str.237 = private unnamed_addr constant [177 x i8] c"!((((invlist)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((invlist)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((invlist)->sv_flags & 0xff)) == SVt_PVLV))\00", align 1
@.str.238 = private unnamed_addr constant [105 x i8] c"!(((svtype)((invlist)->sv_flags & 0xff)) == SVt_PVIO && !(((XPVIO*) (invlist)->sv_any)->xio_flags & 64))\00", align 1
@.str.239 = private unnamed_addr constant [147 x i8] c"((XPV*) (invlist)->sv_any)->xpv_len_u.xpvlenu_len == 0 || ((XPV*) (invlist)->sv_any)->xpv_cur <= ((XPV*) (invlist)->sv_any)->xpv_len_u.xpvlenu_len\00", align 1
@.str.241 = private unnamed_addr constant [8 x i8] c"minlenp\00", align 1
@.str.242 = private unnamed_addr constant [7 x i8] c"deltap\00", align 1
@.str.243 = private unnamed_addr constant [5 x i8] c"last\00", align 1
@.str.244 = private unnamed_addr constant [93 x i8] c"%*sstudy_chunk stopparen=%ld recursed_count=%lu depth=%lu recursed_depth=%lu scan=%p last=%p\00", align 1
@.str.245 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str.246 = private unnamed_addr constant [33 x i8] c"%*sPeep:Pos:%ld/%ld Flags: 0x%lX\00", align 1
@.str.247 = private unnamed_addr constant [27 x i8] c" Whilem_c: %ld Lcp: %ld %s\00", align 1
@.str.248 = private unnamed_addr constant [5 x i8] c"INF \00", align 1
@.str.249 = private unnamed_addr constant [65 x i8] c"Last:'%s' %ld:%ld/%ld %sFixed:'%s' @ %ld %sFloat: '%s' @ %ld/%ld\00", align 1
@.str.250 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.251 = private unnamed_addr constant [21 x i8] c"%*sPeep>%3d: %s (%d)\00", align 1
@.str.252 = private unnamed_addr constant [21 x i8] c"((scan)->type) == 66\00", align 1
@.str.253 = private unnamed_addr constant [30 x i8] c"%*sexpect IFTHEN>%3d: %s (%d)\00", align 1
@.str.254 = private unnamed_addr constant [21 x i8] c"%*sscan>%3d: %s (%d)\00", align 1
@.str.255 = private unnamed_addr constant [21 x i8] c"%*snext>%3d: %s (%d)\00", align 1
@.str.256 = private unnamed_addr constant [23 x i8] c"%*sBranch>%3d: %s (%d)\00", align 1
@.str.257 = private unnamed_addr constant [11 x i8] c"!and_withp\00", align 1
@.str.258 = private unnamed_addr constant [15 x i8] c"\12E_TRIE_MAXBUF\00", align 1
@.str.259 = private unnamed_addr constant [9 x i8] c"%*s%s%s\0A\00", align 1
@.str.260 = private unnamed_addr constant [48 x i8] c"Looking for TRIE'able sequences. Tail node is: \00", align 1
@.str.261 = private unnamed_addr constant [13 x i8] c"%*s- %s (%d)\00", align 1
@.str.262 = private unnamed_addr constant [7 x i8] c" -> %s\00", align 1
@.str.263 = private unnamed_addr constant [8 x i8] c"\09=> %s\09\00", align 1
@.str.264 = private unnamed_addr constant [52 x i8] c"(First==%d,Last==%d,Cur==%d,tt==%s,nt==%s,nnt==%s)\0A\00", align 1
@.str.265 = private unnamed_addr constant [30 x i8] c"%*s- %s (%d) <SCAN FINISHED>\0A\00", align 1
@.str.266 = private unnamed_addr constant [40 x i8] c"%*s- %s (%d) <NOTHING BRANCH SEQUENCE>\0A\00", align 1
@.str.267 = private unnamed_addr constant [32 x i8] c"%*sset:Pos:%ld/%ld Flags: 0x%lX\00", align 1
@.str.268 = private unnamed_addr constant [32 x i8] c"%*sinf:Pos:%ld/%ld Flags: 0x%lX\00", align 1
@.str.269 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.270 = private unnamed_addr constant [38 x i8] c"%*sframe-new:Pos:%ld/%ld Flags: 0x%lX\00", align 1
@.str.271 = private unnamed_addr constant [21 x i8] c"%*sfnew>%3d: %s (%d)\00", align 1
@.str.272 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.273 = private unnamed_addr constant [9 x i8] c"min >= 0\00", align 1
@.str.274 = private unnamed_addr constant [15 x i8] c"EXACTF_invlist\00", align 1
@PL_varies_bitmask = external local_unnamed_addr constant [0 x i8], align 1
@.str.275 = private unnamed_addr constant [69 x i8] c"Quantifier unexpected on zero-length expression in regex m/%d%lu%4p/\00", align 1
@.str.276 = private unnamed_addr constant [123 x i8] c"PL_valid_types_PVX[((svtype)((last_str)->sv_flags & 0xff)) & 0xf] || ((svtype)((last_str)->sv_flags & 0xff)) == SVt_REGEXP\00", align 1
@.str.277 = private unnamed_addr constant [180 x i8] c"!((((last_str)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((last_str)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((last_str)->sv_flags & 0xff)) == SVt_PVLV))\00", align 1
@.str.278 = private unnamed_addr constant [107 x i8] c"!(((svtype)((last_str)->sv_flags & 0xff)) == SVt_PVIO && !(((XPVIO*) (last_str)->sv_any)->xio_flags & 64))\00", align 1
@.str.279 = private unnamed_addr constant [139 x i8] c"PL_valid_types_PVX[((svtype)((data->last_found)->sv_flags & 0xff)) & 0xf] || ((svtype)((data->last_found)->sv_flags & 0xff)) == SVt_REGEXP\00", align 1
@.str.280 = private unnamed_addr constant [204 x i8] c"!((((data->last_found)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((data->last_found)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((data->last_found)->sv_flags & 0xff)) == SVt_PVLV))\00", align 1
@.str.281 = private unnamed_addr constant [123 x i8] c"!(((svtype)((data->last_found)->sv_flags & 0xff)) == SVt_PVIO && !(((XPVIO*) (data->last_found)->sv_any)->xio_flags & 64))\00", align 1
@.str.282 = private unnamed_addr constant [40 x i8] c"panic: unexpected varying REx opcode %d\00", align 1
@PL_XPosix_ptrs = external local_unnamed_addr global [16 x ptr], align 16
@.str.283 = private unnamed_addr constant [39 x i8] c"panic: unexpected simple REx opcode %d\00", align 1
@.str.284 = private unnamed_addr constant [15 x i8] c"flags & 0x1000\00", align 1
@.str.285 = private unnamed_addr constant [43 x i8] c"Variable length lookbehind not implemented\00", align 1
@.str.286 = private unnamed_addr constant [66 x i8] c"Lookbehind longer than %lu not implemented in regex m/%d%lu%4p%s/\00", align 1
@.str.287 = private unnamed_addr constant [38 x i8] c"%*sframe-end:Pos:%ld/%ld Flags: 0x%lX\00", align 1
@.str.288 = private unnamed_addr constant [21 x i8] c"%*sfend>%3d: %s (%d)\00", align 1
@.str.289 = private unnamed_addr constant [7 x i8] c"!frame\00", align 1
@.str.290 = private unnamed_addr constant [36 x i8] c"%*spre-fin:Pos:%ld/%ld Flags: 0x%lX\00", align 1
@.str.291 = private unnamed_addr constant [37 x i8] c"%*spost-fin:Pos:%ld/%ld Flags: 0x%lX\00", align 1
@.str.295 = private unnamed_addr constant [21 x i8] c"%*sjoin>%3d: %s (%d)\00", align 1
@.str.296 = private unnamed_addr constant [22 x i8] c"%*sskip:>%3d: %s (%d)\00", align 1
@.str.297 = private unnamed_addr constant [21 x i8] c"%*smerg>%3d: %s (%d)\00", align 1
@PL_utf8skip = external local_unnamed_addr constant [0 x i8], align 1
@PL_charclass = external local_unnamed_addr constant [0 x i32], align 4
@.str.298 = private unnamed_addr constant [310 x i8] c"(((sizeof(*s) == 1) || !(((unsigned long)(*s)) & ~0xFF)) && ((PL_charclass[(U8) (*s)] & ((1U << (2)) | (1U << (14)))) == ((1U << (2)) | (1U << (14))))) || (((sizeof('s') == 1) || !(((unsigned long)('s')) & ~0xFF)) && ((PL_charclass[(U8) ('s')] & ((1U << (2)) | (1U << (14)))) == ((1U << (2)) | (1U << (14)))))\00", align 1
@.str.299 = private unnamed_addr constant [322 x i8] c"(((sizeof(*(s+1)) == 1) || !(((unsigned long)(*(s+1))) & ~0xFF)) && ((PL_charclass[(U8) (*(s+1))] & ((1U << (2)) | (1U << (14)))) == ((1U << (2)) | (1U << (14))))) || (((sizeof('s') == 1) || !(((unsigned long)('s')) & ~0xFF)) && ((PL_charclass[(U8) ('s')] & ((1U << (2)) | (1U << (14)))) == ((1U << (2)) | (1U << (14)))))\00", align 1
@.str.300 = private unnamed_addr constant [21 x i8] c"%*sfinl>%3d: %s (%d)\00", align 1
@reg_off_by_arg = internal unnamed_addr constant <{ [72 x i8], [22 x i8] }> <{ [72 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\02\02\01\01\00\00\00\00\01", [22 x i8] zeroinitializer }>, align 16
@.str.302 = private unnamed_addr constant [8 x i8] c"or_with\00", align 1
@.str.303 = private unnamed_addr constant [5 x i8] c"node\00", align 1
@.str.304 = private unnamed_addr constant [41 x i8] c"(pRExC_state->rxi)->data->what[n] == 's'\00", align 1
@.str.305 = private unnamed_addr constant [9 x i8] c"and_with\00", align 1
@.str.306 = private unnamed_addr constant [219 x i8] c"i % 2 != 0 || ! (((regnode_charclass_posixl*) ((regnode_charclass_posixl*) and_with))->classflags & (1U << (i))) || ! (((regnode_charclass_posixl*) ((regnode_charclass_posixl*) and_with))->classflags & (1U << (i + 1)))\00", align 1
@.str.308 = private unnamed_addr constant [12 x i8] c"startbranch\00", align 1
@.str.309 = private unnamed_addr constant [6 x i8] c"first\00", align 1
@.str.310 = private unnamed_addr constant [5 x i8] c"tail\00", align 1
@PL_fold_latin1 = external constant [0 x i8], align 1
@PL_fold = external constant [0 x i8], align 1
@.str.311 = private unnamed_addr constant [53 x i8] c"panic! In trie construction, unknown node type %u %s\00", align 1
@.str.312 = private unnamed_addr constant [16 x i8] c"re_trie_maxbuff\00", align 1
@.str.313 = private unnamed_addr constant [64 x i8] c"%*smake_trie start==%d, first==%d, last==%d, tail==%d depth=%d\0A\00", align 1
@.str.314 = private unnamed_addr constant [12 x i8] c"*uc != 0xDF\00", align 1
@PL_latin1_lc = external local_unnamed_addr constant [0 x i8], align 1
@.str.315 = private unnamed_addr constant [117 x i8] c"PL_valid_types_PVX[((svtype)((zlopp)->sv_flags & 0xff)) & 0xf] || ((svtype)((zlopp)->sv_flags & 0xff)) == SVt_REGEXP\00", align 1
@.str.316 = private unnamed_addr constant [171 x i8] c"!((((zlopp)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((zlopp)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((zlopp)->sv_flags & 0xff)) == SVt_PVLV))\00", align 1
@.str.317 = private unnamed_addr constant [101 x i8] c"!(((svtype)((zlopp)->sv_flags & 0xff)) == SVt_PVIO && !(((XPVIO*) (zlopp)->sv_any)->xio_flags & 64))\00", align 1
@.str.318 = private unnamed_addr constant [61 x i8] c"!((zlopp)->sv_flags & 0x00000800) || !((zlopp)->sv_u.svu_rv)\00", align 1
@.str.319 = private unnamed_addr constant [57 x i8] c"(sizeof(uvc) == 1) || !(((unsigned long)(uvc)) & ~0x7FF)\00", align 1
@.str.320 = private unnamed_addr constant [52 x i8] c"error creating/fetching widecharmap entry for 0x%lX\00", align 1
@.str.321 = private unnamed_addr constant [44 x i8] c"%*sTRIE(%s): W:%d C:%d Uq:%d Min:%d Max:%d\0A\00", align 1
@.str.322 = private unnamed_addr constant [5 x i8] c"UTF8\00", align 1
@.str.323 = private unnamed_addr constant [7 x i8] c"NATIVE\00", align 1
@.str.324 = private unnamed_addr constant [39 x i8] c"%*sCompiling trie using list compiler\0A\00", align 1
@.str.325 = private unnamed_addr constant [53 x i8] c"panic! In trie construction, no char mapping for %ld\00", align 1
@.str.326 = private unnamed_addr constant [40 x i8] c"%*sCompiling trie using table compiler\0A\00", align 1
@.str.327 = private unnamed_addr constant [64 x i8] c"%*sAlloc: %d Orig: %ld elements, Final:%ld. Savings of %%%5.2f\0A\00", align 1
@.str.328 = private unnamed_addr constant [33 x i8] c"%*sStatecount:%lx Lasttrans:%lx\0A\00", align 1
@.str.329 = private unnamed_addr constant [34 x i8] c"%*sMJD offset:%lu MJD length:%lu\0A\00", align 1
@.str.330 = private unnamed_addr constant [32 x i8] c"%*sNew Start State=%lu Class: [\00", align 1
@.str.331 = private unnamed_addr constant [40 x i8] c"%*sPrefix State: %lu Idx:%lu Char='%s'\0A\00", align 1
@.str.332 = private unnamed_addr constant [3 x i8] c"]\0A\00", align 1
@.str.333 = private unnamed_addr constant [34 x i8] c"** (%d) offset of node %d is %d.\0A\00", align 1
@.str.334 = private unnamed_addr constant [36 x i8] c"value of node is %d in Offset macro\00", align 1
@.str.335 = private unnamed_addr constant [32 x i8] c"** (%d) size of node %d is %d.\0A\00", align 1
@.str.336 = private unnamed_addr constant [36 x i8] c"value of node is %d in Length macro\00", align 1
@.str.338 = private unnamed_addr constant [11 x i8] c"revcharmap\00", align 1
@.str.339 = private unnamed_addr constant [39 x i8] c"%*sState :Word | Transition Data\0A%*s%s\00", align 1
@.str.340 = private unnamed_addr constant [32 x i8] c"------:-----+-----------------\0A\00", align 1
@.str.341 = private unnamed_addr constant [11 x i8] c"%*s %4lX :\00", align 1
@.str.342 = private unnamed_addr constant [6 x i8] c"%5s| \00", align 1
@.str.343 = private unnamed_addr constant [7 x i8] c"W%4x| \00", align 1
@.str.344 = private unnamed_addr constant [16 x i8] c"%*s:%3X=%4lX | \00", align 1
@.str.345 = private unnamed_addr constant [7 x i8] c"\0A%*s| \00", align 1
@.str.346 = private unnamed_addr constant [11 x i8] c"%*sChar : \00", align 1
@.str.347 = private unnamed_addr constant [4 x i8] c"%*s\00", align 1
@.str.348 = private unnamed_addr constant [12 x i8] c"\0A%*sState+-\00", align 1
@.str.349 = private unnamed_addr constant [5 x i8] c"%.*s\00", align 1
@.str.350 = private unnamed_addr constant [9 x i8] c"--------\00", align 1
@.str.351 = private unnamed_addr constant [11 x i8] c"%*s%4lX : \00", align 1
@.str.352 = private unnamed_addr constant [5 x i8] c"%*lX\00", align 1
@.str.353 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.354 = private unnamed_addr constant [9 x i8] c" (%4lX)\0A\00", align 1
@.str.355 = private unnamed_addr constant [14 x i8] c" (%4lX) W%4X\0A\00", align 1
@.str.356 = private unnamed_addr constant [24 x i8] c"%*sChar : %-6s%-6s%-4s \00", align 1
@.str.357 = private unnamed_addr constant [6 x i8] c"Match\00", align 1
@.str.358 = private unnamed_addr constant [5 x i8] c"Base\00", align 1
@.str.359 = private unnamed_addr constant [4 x i8] c"Ofs\00", align 1
@.str.360 = private unnamed_addr constant [34 x i8] c"\0A%*sState|-----------------------\00", align 1
@.str.361 = private unnamed_addr constant [10 x i8] c"%*s#%4lX|\00", align 1
@.str.362 = private unnamed_addr constant [6 x i8] c" W%4X\00", align 1
@.str.363 = private unnamed_addr constant [4 x i8] c"%6s\00", align 1
@.str.364 = private unnamed_addr constant [8 x i8] c" @%4lX \00", align 1
@.str.365 = private unnamed_addr constant [8 x i8] c"+%2lX[ \00", align 1
@.str.366 = private unnamed_addr constant [5 x i8] c"   .\00", align 1
@.str.367 = private unnamed_addr constant [27 x i8] c"%*sword_info N:(prev,len)=\00", align 1
@.str.368 = private unnamed_addr constant [12 x i8] c" %d:(%d,%d)\00", align 1
@PL_utf8_foldclosures = external local_unnamed_addr global ptr, align 8
@.str.369 = private unnamed_addr constant [4 x i8] c"c_p\00", align 1
@.str.370 = private unnamed_addr constant [132 x i8] c"((! ((((sizeof(cp) == 1) || !(((unsigned long)(cp)) & ~0xFF))) ? (_Bool)1 : (_Bool)0)) || (PL_charclass[(U8) (cp)] & (1U << (19))))\00", align 1
@.str.371 = private unnamed_addr constant [69 x i8] c"(! ((pRExC_state->emit) == (regnode *) & (pRExC_state->emit_dummy)))\00", align 1
@.str.372 = private unnamed_addr constant [154 x i8] c"Perl folding rules are not up-to-date for 0x%02X; please use the perlbug utility to report; in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.373 = private unnamed_addr constant [36 x i8] c"%*scommit: Pos:%ld/%ld Flags: 0x%lX\00", align 1
@.str.374 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.375 = private unnamed_addr constant [34 x i8] c"! (((ssc)->flags) & ~(0x10|0x02))\00", align 1
@.str.376 = private unnamed_addr constant [69 x i8] c"! (((ssc)->flags) & (0x04 | 0x08)) || (pRExC_state->contains_locale)\00", align 1
@.str.377 = private unnamed_addr constant [12 x i8] c"invlist_ptr\00", align 1
@.str.378 = private unnamed_addr constant [33 x i8] c"PL_regkind[((node)->type)] == 19\00", align 1
@.str.379 = private unnamed_addr constant [35 x i8] c"! (((node)->flags) & (0x02 |0x20))\00", align 1
@.str.380 = private unnamed_addr constant [36 x i8] c"((node)->flags) & (0x02 |0x20|0x04)\00", align 1
@.str.381 = private unnamed_addr constant [8 x i8] c"cp_list\00", align 1
@.str.382 = private unnamed_addr constant [3 x i8] c"av\00", align 1
@.str.383 = private unnamed_addr constant [46 x i8] c"((svtype)((av)->sv_flags & 0xff)) == SVt_PVAV\00", align 1
@.str.384 = private unnamed_addr constant [6 x i8] c"flagp\00", align 1
@.str.385 = private unnamed_addr constant [5 x i8] c"%16s\00", align 1
@.str.386 = private unnamed_addr constant [5 x i8] c"|%4d\00", align 1
@.str.387 = private unnamed_addr constant [5 x i8] c"|%4s\00", align 1
@.str.388 = private unnamed_addr constant [9 x i8] c"|%*s%-4s\00", align 1
@.str.389 = private unnamed_addr constant [5 x i8] c"reg \00", align 1
@.str.390 = private unnamed_addr constant [4 x i8] c"%4s\00", align 1
@.str.391 = private unnamed_addr constant [65 x i8] c"%s in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.392 = private unnamed_addr constant [50 x i8] c"In '(*VERB...)', the '(' and '*' must be adjacent\00", align 1
@.str.393 = private unnamed_addr constant [35 x i8] c"Unterminated verb pattern argument\00", align 1
@.str.394 = private unnamed_addr constant [26 x i8] c"Unterminated verb pattern\00", align 1
@.str.395 = private unnamed_addr constant [7 x i8] c"ACCEPT\00", align 1
@.str.396 = private unnamed_addr constant [7 x i8] c"COMMIT\00", align 1
@.str.397 = private unnamed_addr constant [5 x i8] c"FAIL\00", align 1
@.str.398 = private unnamed_addr constant [5 x i8] c"MARK\00", align 1
@.str.399 = private unnamed_addr constant [6 x i8] c"PRUNE\00", align 1
@.str.400 = private unnamed_addr constant [5 x i8] c"SKIP\00", align 1
@.str.401 = private unnamed_addr constant [5 x i8] c"THEN\00", align 1
@.str.402 = private unnamed_addr constant [32 x i8] c"Unknown verb pattern '%d%lu%4p'\00", align 1
@.str.403 = private unnamed_addr constant [63 x i8] c" in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.404 = private unnamed_addr constant [45 x i8] c"Verb pattern '%.*s' may not have an argument\00", align 1
@.str.405 = private unnamed_addr constant [45 x i8] c"Verb pattern '%.*s' has a mandatory argument\00", align 1
@.str.406 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.407 = private unnamed_addr constant [46 x i8] c"In '(?...)', the '(' and '?' must be adjacent\00", align 1
@.str.408 = private unnamed_addr constant [32 x i8] c"Sequence %.3s... not terminated\00", align 1
@.str.409 = private unnamed_addr constant [34 x i8] c"Sequence (%.*s...) not recognized\00", align 1
@.str.410 = private unnamed_addr constant [32 x i8] c"Sequence (?%c... not terminated\00", align 1
@.str.411 = private unnamed_addr constant [35 x i8] c"panic: reg_scan_name returned NULL\00", align 1
@.str.412 = private unnamed_addr constant [49 x i8] c"panic: paren_name hash element allocation failed\00", align 1
@.str.413 = private unnamed_addr constant [119 x i8] c"PL_valid_types_PVX[((svtype)((sv_dat)->sv_flags & 0xff)) & 0xf] || ((svtype)((sv_dat)->sv_flags & 0xff)) == SVt_REGEXP\00", align 1
@.str.414 = private unnamed_addr constant [174 x i8] c"!((((sv_dat)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((sv_dat)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((sv_dat)->sv_flags & 0xff)) == SVt_PVLV))\00", align 1
@.str.415 = private unnamed_addr constant [103 x i8] c"!(((svtype)((sv_dat)->sv_flags & 0xff)) == SVt_PVIO && !(((XPVIO*) (sv_dat)->sv_any)->xio_flags & 64))\00", align 1
@PL_valid_types_IV_set = external local_unnamed_addr constant [0 x i8], align 1
@.str.416 = private unnamed_addr constant [67 x i8] c"PL_valid_types_IV_set[((svtype)((sv_dat)->sv_flags & 0xff)) & 0xf]\00", align 1
@.str.417 = private unnamed_addr constant [34 x i8] c"Sequence (?%c...) not implemented\00", align 1
@.str.418 = private unnamed_addr constant [29 x i8] c"Sequence (?R) not terminated\00", align 1
@.str.419 = private unnamed_addr constant [31 x i8] c"Sequence (?&... not terminated\00", align 1
@.str.420 = private unnamed_addr constant [16 x i8] c"Illegal pattern\00", align 1
@.str.421 = private unnamed_addr constant [24 x i8] c"Expecting close bracket\00", align 1
@.str.422 = private unnamed_addr constant [31 x i8] c"Reference to nonexistent group\00", align 1
@.str.423 = private unnamed_addr constant [28 x i8] c"%*s%*s Recurse #%lu to %ld\0A\00", align 1
@.str.424 = private unnamed_addr constant [7 x i8] c"|    |\00", align 1
@.str.425 = private unnamed_addr constant [38 x i8] c"Sequence (%d%lu%4p...) not recognized\00", align 1
@.str.426 = private unnamed_addr constant [47 x i8] c"panic: Sequence (?{...}): no code block found\0A\00", align 1
@.str.427 = private unnamed_addr constant [49 x i8] c"Eval-group not allowed at runtime, use re 'eval'\00", align 1
@.str.428 = private unnamed_addr constant [3 x i8] c"rl\00", align 1
@.str.429 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.430 = private unnamed_addr constant [33 x i8] c"Sequence (?(%c... not terminated\00", align 1
@.str.431 = private unnamed_addr constant [7 x i8] c"DEFINE\00", align 1
@.str.432 = private unnamed_addr constant [32 x i8] c"Switch condition not recognized\00", align 1
@.str.433 = private unnamed_addr constant [66 x i8] c"panic: regbranch returned NULL, flags=%#lx in regex m/%d%lu%4p%s/\00", align 1
@.str.434 = private unnamed_addr constant [40 x i8] c"(?(DEFINE)....) does not allow branches\00", align 1
@.str.435 = private unnamed_addr constant [39 x i8] c"Switch (?(condition)... not terminated\00", align 1
@.str.436 = private unnamed_addr constant [51 x i8] c"Switch (?(condition)... contains too many branches\00", align 1
@.str.437 = private unnamed_addr constant [34 x i8] c"Unknown switch condition (?(...))\00", align 1
@.str.438 = private unnamed_addr constant [23 x i8] c"Sequence (? incomplete\00", align 1
@.str.439 = private unnamed_addr constant [38 x i8] c"%*s%*s Setting open paren #%ld to %d\0A\00", align 1
@.str.440 = private unnamed_addr constant [39 x i8] c"%*s%*s Setting close paren #%ld to %d\0A\00", align 1
@.str.441 = private unnamed_addr constant [22 x i8] c"!(pRExC_state->opend)\00", align 1
@.str.442 = private unnamed_addr constant [5 x i8] c"lsbr\00", align 1
@.str.443 = private unnamed_addr constant [54 x i8] c"~ tying lastbr %s (%ld) to ender %s (%ld) offset %ld\0A\00", align 1
@.str.444 = private unnamed_addr constant [5 x i8] c"NADA\00", align 1
@.str.445 = private unnamed_addr constant [56 x i8] c"~ converting ret %s (%ld) to ender %s (%ld) offset %ld\0A\00", align 1
@S_reg.parens = internal constant [6 x i8] c"=!<,>\00", align 1
@.str.446 = private unnamed_addr constant [12 x i8] c"Unmatched (\00", align 1
@.str.447 = private unnamed_addr constant [12 x i8] c"Unmatched )\00", align 1
@.str.448 = private unnamed_addr constant [22 x i8] c"Junk on end of regexp\00", align 1
@.str.449 = private unnamed_addr constant [5 x i8] c"pat1\00", align 1
@.str.451 = private unnamed_addr constant [9 x i8] c"%d%lu%4p\00", align 1
@.str.452 = private unnamed_addr constant [9 x i8] c"reganode\00", align 1
@.str.453 = private unnamed_addr constant [19 x i8] c"regarglen[op] == 1\00", align 1
@.str.454 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.455 = private unnamed_addr constant [28 x i8] c"extra_size >= regarglen[op]\00", align 1
@.str.456 = private unnamed_addr constant [50 x i8] c"panic: reg_node overrun trying to emit %d, %p>=%p\00", align 1
@.str.457 = private unnamed_addr constant [44 x i8] c"%s:%d: (op %s) %s %lu (len %lu) (max %lu).\0A\00", align 1
@.str.458 = private unnamed_addr constant [27 x i8] c"Overwriting end of array!\0A\00", align 1
@.str.459 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.460 = private unnamed_addr constant [9 x i8] c"reg_node\00", align 1
@.str.461 = private unnamed_addr constant [19 x i8] c"regarglen[op] == 0\00", align 1
@.str.462 = private unnamed_addr constant [31 x i8] c"Sequence (?#... not terminated\00", align 1
@.str.463 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str.465 = private unnamed_addr constant [43 x i8] c"(pRExC_state->parse) <= (pRExC_state->end)\00", align 1
@.str.466 = private unnamed_addr constant [54 x i8] c"Group name must start with a non-digit word character\00", align 1
@.str.467 = private unnamed_addr constant [34 x i8] c"panic: no svname in reg_scan_name\00", align 1
@.str.468 = private unnamed_addr constant [37 x i8] c"Reference to nonexistent named group\00", align 1
@.str.470 = private unnamed_addr constant [11 x i8] c"reg2Lanode\00", align 1
@.str.471 = private unnamed_addr constant [19 x i8] c"regarglen[op] == 2\00", align 1
@.str.472 = private unnamed_addr constant [4 x i8] c"val\00", align 1
@.str.473 = private unnamed_addr constant [17 x i8] c"~ %s (%d) %s %s\0A\00", align 1
@.str.474 = private unnamed_addr constant [3 x i8] c"->\00", align 1
@.str.475 = private unnamed_addr constant [5 x i8] c"brnc\00", align 1
@.str.476 = private unnamed_addr constant [65 x i8] c"panic: regpiece returned NULL, flags=%#lx in regex m/%d%lu%4p%s/\00", align 1
@.str.477 = private unnamed_addr constant [5 x i8] c"piec\00", align 1
@.str.478 = private unnamed_addr constant [64 x i8] c"panic: regatom returned NULL, flags=%#lx in regex m/%d%lu%4p%s/\00", align 1
@.str.479 = private unnamed_addr constant [26 x i8] c"Invalid quantifier in {,}\00", align 1
@.str.480 = private unnamed_addr constant [33 x i8] c"Quantifier in {,} bigger than %d\00", align 1
@.str.481 = private unnamed_addr constant [102 x i8] c"Quantifier {n,m} with n > m can't match in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.482 = private unnamed_addr constant [102 x i8] c"Useless use of greediness modifier '%c' in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.483 = private unnamed_addr constant [102 x i8] c"%d%lu%4p matches null string many times in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.484 = private unnamed_addr constant [19 x i8] c"Nested quantifiers\00", align 1
@.str.485 = private unnamed_addr constant [5 x i8] c"atom\00", align 1
@.str.486 = private unnamed_addr constant [12 x i8] c"Unmatched [\00", align 1
@.str.487 = private unnamed_addr constant [76 x i8] c"panic: regclass returned NULL to regatom, flags=%#lx in regex m/%d%lu%4p%s/\00", align 1
@.str.488 = private unnamed_addr constant [71 x i8] c"panic: reg returned NULL to regatom, flags=%#lx in regex m/%d%lu%4p%s/\00", align 1
@.str.489 = private unnamed_addr constant [13 x i8] c"Internal urp\00", align 1
@.str.490 = private unnamed_addr constant [27 x i8] c"Quantifier follows nothing\00", align 1
@.str.491 = private unnamed_addr constant [79 x i8] c"\\C is deprecated in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.492 = private unnamed_addr constant [29 x i8] c"Missing right brace on \\%c{}\00", align 1
@.str.493 = private unnamed_addr constant [12 x i8] c"Empty \\%c{}\00", align 1
@.str.494 = private unnamed_addr constant [3 x i8] c"cb\00", align 1
@.str.495 = private unnamed_addr constant [36 x i8] c"'%d%lu%4p' is an unknown bound type\00", align 1
@.str.496 = private unnamed_addr constant [97 x i8] c"Using /u for '%.*s' instead of /%s in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.497 = private unnamed_addr constant [32 x i8] c"Sequence %.2s... not terminated\00", align 1
@.str.498 = private unnamed_addr constant [29 x i8] c"Reference to invalid group 0\00", align 1
@.str.499 = private unnamed_addr constant [27 x i8] c"Unterminated \\g... pattern\00", align 1
@.str.500 = private unnamed_addr constant [43 x i8] c"Reference to nonexistent or unclosed group\00", align 1
@.str.501 = private unnamed_addr constant [29 x i8] c"Unterminated \\g{...} pattern\00", align 1
@.str.502 = private unnamed_addr constant [11 x i8] c"Trailing \\\00", align 1
@.str.503 = private unnamed_addr constant [38 x i8] c"panic: grok_bslash_N set RESTART_UTF8\00", align 1
@PL_encoding = external local_unnamed_addr global ptr, align 8
@PL_lex_encoding = external local_unnamed_addr global ptr, align 8
@.str.504 = private unnamed_addr constant [103 x i8] c"Invalid escape in the specified encoding in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.505 = private unnamed_addr constant [103 x i8] c"Unrecognized escape \\%.*s passed through in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.506 = private unnamed_addr constant [122 x i8] c"Unescaped left brace in regex is deprecated, passed through in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.507 = private unnamed_addr constant [319 x i8] c"(((sizeof(ender) == 1) || !(((unsigned long)(ender)) & ~0xFF)) && ((PL_charclass[(U8) (ender)] & ((1U << (2)) | (1U << (14)))) == ((1U << (2)) | (1U << (14))))) || (((sizeof('s') == 1) || !(((unsigned long)('s')) & ~0xFF)) && ((PL_charclass[(U8) ('s')] & ((1U << (2)) | (1U << (14)))) == ((1U << (2)) | (1U << (14)))))\00", align 1
@.str.508 = private unnamed_addr constant [322 x i8] c"(((sizeof(*(s-1)) == 1) || !(((unsigned long)(*(s-1))) & ~0xFF)) && ((PL_charclass[(U8) (*(s-1))] & ((1U << (2)) | (1U << (14)))) == ((1U << (2)) | (1U << (14))))) || (((sizeof('s') == 1) || !(((unsigned long)('s')) & ~0xFF)) && ((PL_charclass[(U8) ('s')] & ((1U << (2)) | (1U << (14)))) == ((1U << (2)) | (1U << (14)))))\00", align 1
@.str.509 = private unnamed_addr constant [11 x i8] c"len >= 127\00", align 1
@PL_NonL1NonFinalFold = external local_unnamed_addr global ptr, align 8
@NonL1_Perl_Non_Final_Folds_invlist = internal constant [48 x i64] [i64 45, i64 148565664, i64 1, i64 0, i64 700, i64 701, i64 776, i64 777, i64 787, i64 788, i64 834, i64 835, i64 940, i64 941, i64 942, i64 943, i64 945, i64 946, i64 951, i64 952, i64 953, i64 954, i64 961, i64 962, i64 965, i64 966, i64 969, i64 970, i64 974, i64 975, i64 1381, i64 1382, i64 1396, i64 1397, i64 1406, i64 1407, i64 7936, i64 7944, i64 7968, i64 7976, i64 8032, i64 8040, i64 8048, i64 8049, i64 8052, i64 8053, i64 8060, i64 8061], align 16
@.str.510 = private unnamed_addr constant [18 x i8] c"Internal disaster\00", align 1
@.str.511 = private unnamed_addr constant [5 x i8] c"clas\00", align 1
@.str.512 = private unnamed_addr constant [11 x i8] c"# comment\0A\00", align 1
@.str.513 = private unnamed_addr constant [116 x i8] c"POSIX syntax [%c %c] belongs inside character classes in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.514 = private unnamed_addr constant [59 x i8] c"\\N in a character class must be a named character: \\N{...}\00", align 1
@.str.515 = private unnamed_addr constant [17 x i8] c"Zero length \\N{}\00", align 1
@.str.516 = private unnamed_addr constant [107 x i8] c"Ignoring zero length \\N{} in character class in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.517 = private unnamed_addr constant [88 x i8] c"\\N{} in inverted character class or as a range end-point is restricted to one character\00", align 1
@.str.518 = private unnamed_addr constant [129 x i8] c"Using just the first character returned by \\N{} in character class in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.519 = private unnamed_addr constant [10 x i8] c"%s%.*s%s\0A\00", align 1
@.str.520 = private unnamed_addr constant [3 x i8] c"__\00", align 1
@.str.521 = private unnamed_addr constant [3 x i8] c"_i\00", align 1
@.str.522 = private unnamed_addr constant [5 x i8] c"utf8\00", align 1
@PL_curstash = external local_unnamed_addr global ptr, align 8
@.str.523 = private unnamed_addr constant [31 x i8] c"Property '%d%lu%4p' is unknown\00", align 1
@.str.524 = private unnamed_addr constant [3 x i8] c"::\00", align 1
@.str.525 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.526 = private unnamed_addr constant [7 x i8] c"%s::%s\00", align 1
@.str.527 = private unnamed_addr constant [18 x i8] c"%cutf8::%d%lu%4p\0A\00", align 1
@.str.528 = private unnamed_addr constant [28 x i8] c"Need exactly 3 octal digits\00", align 1
@.str.529 = private unnamed_addr constant [41 x i8] c"Invalid escape in the specified encoding\00", align 1
@.str.530 = private unnamed_addr constant [43 x i8] c"Unrecognized escape \\%c in character class\00", align 1
@.str.531 = private unnamed_addr constant [120 x i8] c"Unrecognized escape \\%c in character class passed through in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.532 = private unnamed_addr constant [26 x i8] c"False [] range \22%d%lu%4p\22\00", align 1
@.str.533 = private unnamed_addr constant [88 x i8] c"False [] range \22%d%lu%4p\22 in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.534 = private unnamed_addr constant [77 x i8] c"! (((ret)->flags) & 0x08) || (namedclass + ((namedclass % 2) ? -1 : 1)) >= 0\00", align 1
@.str.535 = private unnamed_addr constant [69 x i8] c"namedclass == (((((15) * 2)))+2) || namedclass == (((((15) * 2)))+3)\00", align 1
@.str.536 = private unnamed_addr constant [28 x i8] c"Invalid [] range \22%d%lu%4p\22\00", align 1
@.str.537 = private unnamed_addr constant [23 x i8] c"False [] range \22%*.*s\22\00", align 1
@.str.538 = private unnamed_addr constant [85 x i8] c"False [] range \22%*.*s\22 in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.539 = private unnamed_addr constant [8 x i8] c"\\x{%lX}\00", align 1
@.str.540 = private unnamed_addr constant [107 x i8] c"Both or neither range ends should be Unicode in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.541 = private unnamed_addr constant [137 x i8] c"Ranges of ASCII printables should be some subset of \220-9\22, \22A-Z\22, or \22a-z\22 in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.542 = private unnamed_addr constant [309 x i8] c"! (! ((index_start) & 1)) || (S_invlist_array(PL_XPosix_ptrs[1])[index_start+1] - S_invlist_array(PL_XPosix_ptrs[1])[index_start] == 10) || (S_invlist_array(PL_XPosix_ptrs[1])[index_start+1] - S_invlist_array(PL_XPosix_ptrs[1])[index_start] == 11 && S_invlist_array(PL_XPosix_ptrs[1])[index_start] == 0x19D0)\00", align 1
@.str.543 = private unnamed_addr constant [115 x i8] c"Ranges of digits should be from the same group of 10 in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.544 = private unnamed_addr constant [108 x i8] c"\22%.*s\22 is more clearly written simply as \22%s\22 in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.545 = private unnamed_addr constant [3 x i8] c"?:\00", align 1
@.str.546 = private unnamed_addr constant [9 x i8] c"! invert\00", align 1
@.str.547 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.548 = private unnamed_addr constant [3 x i8] c"|[\00", align 1
@.str.549 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.550 = private unnamed_addr constant [30 x i8] c"Unmatched '%c' in POSIX class\00", align 1
@.str.551 = private unnamed_addr constant [8 x i8] c"*t == c\00", align 1
@.str.552 = private unnamed_addr constant [5 x i8] c"word\00", align 1
@.str.553 = private unnamed_addr constant [5 x i8] c"alph\00", align 1
@.str.554 = private unnamed_addr constant [5 x i8] c"spac\00", align 1
@.str.555 = private unnamed_addr constant [5 x i8] c"grap\00", align 1
@.str.556 = private unnamed_addr constant [5 x i8] c"asci\00", align 1
@.str.557 = private unnamed_addr constant [5 x i8] c"blan\00", align 1
@.str.558 = private unnamed_addr constant [5 x i8] c"cntr\00", align 1
@.str.559 = private unnamed_addr constant [5 x i8] c"alnu\00", align 1
@.str.560 = private unnamed_addr constant [5 x i8] c"lowe\00", align 1
@.str.561 = private unnamed_addr constant [5 x i8] c"uppe\00", align 1
@.str.562 = private unnamed_addr constant [5 x i8] c"digi\00", align 1
@.str.563 = private unnamed_addr constant [5 x i8] c"prin\00", align 1
@.str.564 = private unnamed_addr constant [5 x i8] c"punc\00", align 1
@.str.565 = private unnamed_addr constant [7 x i8] c"xdigit\00", align 1
@.str.566 = private unnamed_addr constant [33 x i8] c"POSIX class [:%d%lu%4p:] unknown\00", align 1
@.str.567 = private unnamed_addr constant [21 x i8] c"posixcc[skip] == ':'\00", align 1
@.str.568 = private unnamed_addr constant [23 x i8] c"posixcc[skip+1] == ']'\00", align 1
@.str.569 = private unnamed_addr constant [55 x i8] c"POSIX syntax [%c %c] is reserved for future extensions\00", align 1
@.str.570 = private unnamed_addr constant [29 x i8] c"Unmatched '[' in POSIX class\00", align 1
@.str.571 = private unnamed_addr constant [13 x i8] c"multi_string\00", align 1
@.str.572 = private unnamed_addr constant [3 x i8] c"\\a\00", align 1
@.str.573 = private unnamed_addr constant [3 x i8] c"\\b\00", align 1
@.str.574 = private unnamed_addr constant [3 x i8] c"\\e\00", align 1
@.str.575 = private unnamed_addr constant [3 x i8] c"\\f\00", align 1
@.str.576 = private unnamed_addr constant [3 x i8] c"\\n\00", align 1
@.str.577 = private unnamed_addr constant [3 x i8] c"\\r\00", align 1
@.str.578 = private unnamed_addr constant [3 x i8] c"\\t\00", align 1
@.str.579 = private unnamed_addr constant [74 x i8] c"((node_p) ? (_Bool)1 : (_Bool)0) ^ ((code_point_p) ? (_Bool)1 : (_Bool)0)\00", align 1
@.str.580 = private unnamed_addr constant [23 x i8] c"! (node_p && cp_count)\00", align 1
@.str.581 = private unnamed_addr constant [23 x i8] c"Missing braces on \\N{}\00", align 1
@.str.582 = private unnamed_addr constant [3 x i8] c"U+\00", align 1
@.str.583 = private unnamed_addr constant [39 x i8] c"\\N{NAME} must be resolved by the lexer\00", align 1
@.str.584 = private unnamed_addr constant [3 x i8] c".}\00", align 1
@.str.585 = private unnamed_addr constant [40 x i8] c"Invalid hexadecimal number in \\N{U+...}\00", align 1
@.str.586 = private unnamed_addr constant [4 x i8] c"\\x{\00", align 1
@.str.587 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.588 = private unnamed_addr constant [77 x i8] c"panic: reg returned NULL to grok_bslash_N, flags=%#lx in regex m/%d%lu%4p%s/\00", align 1
@.str.589 = private unnamed_addr constant [59 x i8] c"Assertion %s failed: file \22ext/re/../../dquote.c\22, line %d\00", align 1
@.str.590 = private unnamed_addr constant [15 x i8] c"*start == '\\\\'\00", align 1
@.str.591 = private unnamed_addr constant [3 x i8] c"uv\00", align 1
@.str.592 = private unnamed_addr constant [10 x i8] c"error_msg\00", align 1
@.str.593 = private unnamed_addr constant [11 x i8] c"**s == 'o'\00", align 1
@.str.594 = private unnamed_addr constant [23 x i8] c"Missing braces on \\o{}\00", align 1
@.str.595 = private unnamed_addr constant [27 x i8] c"Missing right brace on \\o{\00", align 1
@.str.596 = private unnamed_addr constant [22 x i8] c"Number with no digits\00", align 1
@.str.597 = private unnamed_addr constant [20 x i8] c"Non-octal character\00", align 1
@.str.598 = private unnamed_addr constant [50 x i8] c"Non-octal character '%c'.  Resolved as \22\\o{%.*s}\22\00", align 1
@.str.599 = private unnamed_addr constant [182 x i8] c"( (*uv) < 0x80 ? 1 : (*uv) < 0x800 ? 2 : (*uv) < 0x10000 ? 3 : (*uv) < 0x200000 ? 4 : (*uv) < 0x4000000 ? 5 : (*uv) < 0x80000000 ? 6 : (*uv) < 0x1000000000UL ? 7 : 13 ) < *s - start\00", align 1
@.str.600 = private unnamed_addr constant [11 x i8] c"**s == 'x'\00", align 1
@.str.601 = private unnamed_addr constant [18 x i8] c"Non-hex character\00", align 1
@.str.602 = private unnamed_addr constant [45 x i8] c"Use \\x{...} for more than two hex characters\00", align 1
@.str.603 = private unnamed_addr constant [28 x i8] c"Missing right brace on \\x{}\00", align 1
@.str.604 = private unnamed_addr constant [49 x i8] c"Character following \22\\c\22 must be printable ASCII\00", align 1
@.str.605 = private unnamed_addr constant [26 x i8] c"Use \22%c\22 instead of \22\\c{\22\00", align 1
@.str.606 = private unnamed_addr constant [23 x i8] c"Sequence \22\\c{\22 invalid\00", align 1
@.str.607 = private unnamed_addr constant [46 x i8] c"\22\\c%c\22 is more clearly written simply as \22%s\22\00", align 1
@.str.608 = private unnamed_addr constant [23 x i8] c"*s == '8' || *s == '9'\00", align 1
@.str.609 = private unnamed_addr constant [32 x i8] c"'%.*s' resolved to '\\o{%.*s}%c'\00", align 1
@.str.612 = private unnamed_addr constant [15 x i8] c"oregcomp_parse\00", align 1
@.str.613 = private unnamed_addr constant [29 x i8] c"(?[...]) not valid in locale\00", align 1
@.str.614 = private unnamed_addr constant [80 x i8] c"panic: regclass returned NULL to handle_sets, flags=%#lx in regex m/%d%lu%4p%s/\00", align 1
@.str.615 = private unnamed_addr constant [25 x i8] c"Syntax error in (?[...])\00", align 1
@.str.616 = private unnamed_addr constant [101 x i8] c"The regex_sets feature is experimental in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.617 = private unnamed_addr constant [33 x i8] c"panic: Read past end of '(?[ ])'\00", align 1
@.str.618 = private unnamed_addr constant [27 x i8] c"Expecting '(?flags:(?[...'\00", align 1
@.str.619 = private unnamed_addr constant [94 x i8] c"(pRExC_state->parse) < (pRExC_state->end) && ((int)*(const U8*)((pRExC_state->parse))) == ')'\00", align 1
@.str.620 = private unnamed_addr constant [42 x i8] c"Unexpected '(' with no preceding operator\00", align 1
@.str.621 = private unnamed_addr constant [15 x i8] c"Unexpected ')'\00", align 1
@.str.622 = private unnamed_addr constant [10 x i8] c"fence_ptr\00", align 1
@.str.623 = private unnamed_addr constant [58 x i8] c"Unexpected binary operator '%c' with no preceding operand\00", align 1
@.str.624 = private unnamed_addr constant [35 x i8] c"(! ((lhs)->sv_flags & 0x00000100))\00", align 1
@.str.625 = private unnamed_addr constant [21 x i8] c"Unexpected character\00", align 1
@.str.626 = private unnamed_addr constant [8 x i8] c"top_ptr\00", align 1
@.str.627 = private unnamed_addr constant [35 x i8] c"Operand with no preceding operator\00", align 1
@.str.628 = private unnamed_addr constant [38 x i8] c"Incomplete expression within '(?[ ])'\00", align 1
@.str.629 = private unnamed_addr constant [16 x i8] c"\\x{%lX}-\\x{%lX}\00", align 1
@.str.630 = private unnamed_addr constant [16 x i8] c"*(p - 1) == '['\00", align 1
@.str.631 = private unnamed_addr constant [51 x i8] c"Regexp modifier \22%c\22 may appear a maximum of twice\00", align 1
@.str.632 = private unnamed_addr constant [42 x i8] c"Regexp modifier \22%c\22 may not appear twice\00", align 1
@.str.633 = private unnamed_addr constant [54 x i8] c"Regexp modifiers \22%c\22 and \22%c\22 are mutually exclusive\00", align 1
@.str.634 = private unnamed_addr constant [50 x i8] c"Regexp modifier \22%c\22 may not appear after the \22-\22\00", align 1
@.str.635 = private unnamed_addr constant [98 x i8] c"Useless (%s%c) - %suse /%c modifier in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.636 = private unnamed_addr constant [3 x i8] c"?-\00", align 1
@.str.637 = private unnamed_addr constant [7 x i8] c"don't \00", align 1
@.str.638 = private unnamed_addr constant [97 x i8] c"Useless (%sc) - %suse /gc modifier in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.639 = private unnamed_addr constant [83 x i8] c"Useless use of (?-p) in regex; marked by <-- HERE in m/%d%lu%4p <-- HERE %d%lu%4p/\00", align 1
@.str.640 = private unnamed_addr constant [55 x i8] c"Having more than one /%c regexp modifier is deprecated\00", align 1
@.str.641 = private unnamed_addr constant [30 x i8] c"Sequence (?... not terminated\00", align 1
@.str.642 = private unnamed_addr constant [5 x i8] c"opnd\00", align 1
@.str.643 = private unnamed_addr constant [5 x i8] c"inst\00", align 1
@.str.644 = private unnamed_addr constant [7 x i8] c" - %s\0A\00", align 1
@.str.645 = private unnamed_addr constant [47 x i8] c"%s(%d): (op %s) %s copy %lu -> %lu (max %lu).\0A\00", align 1
@.str.646 = private unnamed_addr constant [11 x i8] c"reg_insert\00", align 1
@.str.647 = private unnamed_addr constant [42 x i8] c"%s(%d): (op %s) %s %lu <- %lu (max %lu).\0A\00", align 1
@.str.648 = private unnamed_addr constant [10 x i8] c"reginsert\00", align 1
@.str.649 = private unnamed_addr constant [5 x i8] c"tsdy\00", align 1
@.str.650 = private unnamed_addr constant [17 x i8] c"~ %s (%d) -> %s\0A\00", align 1
@.str.651 = private unnamed_addr constant [36 x i8] c"~ attach to %s (%ld) offset to %ld\0A\00", align 1
@PL_reg_extflags_name = external local_unnamed_addr global [0 x ptr], align 8
@.str.652 = private unnamed_addr constant [8 x i8] c"UNICODE\00", align 1
@.str.653 = private unnamed_addr constant [7 x i8] c"LOCALE\00", align 1
@.str.654 = private unnamed_addr constant [17 x i8] c"ASCII-RESTRICTED\00", align 1
@.str.655 = private unnamed_addr constant [22 x i8] c"ASCII-MORE_RESTRICTED\00", align 1
@.str.656 = private unnamed_addr constant [22 x i8] c"UNKNOWN CHARACTER SET\00", align 1
@.str.657 = private unnamed_addr constant [14 x i8] c"%s[none-set]\0A\00", align 1
@PL_reg_intflags_name = external local_unnamed_addr global [0 x ptr], align 8
@.str.658 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@.str.659 = private unnamed_addr constant [13 x i8] c"start <= end\00", align 1
@.str.660 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.661 = private unnamed_addr constant [20 x i8] c"\\x{%02lX}-\\x{%02lX}\00", align 1
@.str.663 = private unnamed_addr constant [10 x i8] c"\\x{%04lX}\00", align 1
@.str.664 = private unnamed_addr constant [2 x i8] c"\\\00", align 1
@.str.665 = private unnamed_addr constant [9 x i8] c"\\x{%02X}\00", align 1
@.str.666 = private unnamed_addr constant [7 x i8] c"bitmap\00", align 1
@.str.667 = private unnamed_addr constant [14 x i8] c" (%ld nodes)\0A\00", align 1
@.str.668 = private unnamed_addr constant [11 x i8] c"%4ld:%*s%s\00", align 1
@.str.669 = private unnamed_addr constant [5 x i8] c" (0)\00", align 1
@.str.670 = private unnamed_addr constant [8 x i8] c" (FAIL)\00", align 1
@.str.671 = private unnamed_addr constant [7 x i8] c" (%ld)\00", align 1
@.str.672 = private unnamed_addr constant [5 x i8] c"next\00", align 1
@.str.673 = private unnamed_addr constant [7 x i8] c"%*s%s \00", align 1
@.str.674 = private unnamed_addr constant [4 x i8] c"???\00", align 1
@.str.675 = private unnamed_addr constant [7 x i8] c"(%lu)\0A\00", align 1
@switch.table.my_re_op_compile = private unnamed_addr constant [5 x i64] [i64 1, i64 1, i64 1, i64 1, i64 2], align 8
@reltable.my_re_op_compile = private unnamed_addr constant [5 x i32] [i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.216 to i64), i64 ptrtoint (ptr @reltable.my_re_op_compile to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.217 to i64), i64 ptrtoint (ptr @reltable.my_re_op_compile to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.218 to i64), i64 ptrtoint (ptr @reltable.my_re_op_compile to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.78 to i64), i64 ptrtoint (ptr @reltable.my_re_op_compile to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.219 to i64), i64 ptrtoint (ptr @reltable.my_re_op_compile to i64)) to i32)], align 4
@switch.table.S_study_chunk = private unnamed_addr constant [9 x i8] c"\96\97\98\99\9A\9E\9E\9E\9E", align 1
@switch.table.S_study_chunk.684 = private unnamed_addr constant [10 x i8] c"((((#(%(((", align 1
@switch.table.S_study_chunk.685 = private unnamed_addr constant [10 x i8] c"\1F ((#$#(((", align 1
@reltable.my_regdump = private unnamed_addr constant [4 x i32] [i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.653 to i64), i64 ptrtoint (ptr @reltable.my_regdump to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.652 to i64), i64 ptrtoint (ptr @reltable.my_regdump to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.654 to i64), i64 ptrtoint (ptr @reltable.my_regdump to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.655 to i64), i64 ptrtoint (ptr @reltable.my_regdump to i64)) to i32)], align 4

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @my_re_compile(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %3 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #15
  store ptr %0, ptr %3, align 8, !tbaa !5
  %4 = icmp eq ptr %0, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, i32 noundef 5780) #15
  br label %6

6:                                                ; preds = %2, %5
  %7 = call ptr @my_re_op_compile(ptr noundef nonnull %3, i32 noundef 1, ptr noundef null, ptr noundef nonnull @my_reg_engine, ptr noundef null, ptr noundef null, i32 noundef %1, i32 noundef 0)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #15
  ret ptr %7
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

declare void @Perl_croak(ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @my_re_op_compile(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef readonly %4, ptr noundef writeonly %5, i32 noundef %6, i32 noundef %7) local_unnamed_addr #0 {
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  %16 = alloca i8, align 1
  %17 = alloca %struct.scan_data_t, align 8
  %18 = alloca %struct.RExC_state_t, align 8
  %19 = alloca %struct.RExC_state_t, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca %struct.regnode_ssc, align 8
  %23 = alloca i64, align 8
  %24 = alloca ptr, align 8
  %25 = alloca i64, align 8
  %26 = alloca %struct.regnode_ssc, align 8
  %27 = alloca i64, align 8
  %28 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %15) #15
  store i64 0, ptr %15, align 8, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %16) #15
  store i8 0, ptr %16, align 1, !tbaa !11
  call void @llvm.lifetime.start.p0(i64 152, ptr nonnull %17) #15
  call void @llvm.lifetime.start.p0(i64 392, ptr nonnull %18) #15
  call void @llvm.lifetime.start.p0(i64 392, ptr nonnull %19)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %20)
  store volatile i64 0, ptr %20, align 8, !tbaa !9
  %29 = load volatile i64, ptr %20, align 8, !tbaa !9
  %30 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %31 = icmp eq ptr %30, null
  br i1 %31, label %51, label %32

32:                                               ; preds = %8
  %33 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 2
  %34 = load i32, ptr %33, align 4, !tbaa !13
  %35 = and i32 %34, 256
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %32
  tail call void @Perl_sv_setuv(ptr noundef nonnull %30, i64 noundef 65288) #15
  %38 = load i32, ptr %33, align 4, !tbaa !13
  br label %39

39:                                               ; preds = %37, %32
  %40 = phi i32 [ %38, %37 ], [ %34, %32 ]
  %41 = and i32 %40, 2097408
  %42 = icmp eq i32 %41, 256
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = load ptr, ptr %30, align 8, !tbaa !16
  %45 = getelementptr inbounds %struct.xpviv, ptr %44, i64 0, i32 4
  %46 = load i64, ptr %45, align 8, !tbaa !17
  br label %49

47:                                               ; preds = %39
  %48 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %30, i32 noundef 2) #15
  br label %49

49:                                               ; preds = %47, %43
  %50 = phi i64 [ %46, %43 ], [ %48, %47 ]
  store volatile i64 %50, ptr %20, align 8, !tbaa !9
  br label %51

51:                                               ; preds = %49, %8
  %52 = icmp eq ptr %3, null
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.3, i32 noundef 6422) #15
  br label %54

54:                                               ; preds = %53, %51
  %55 = load i8, ptr @PL_colorset, align 1, !tbaa !11, !range !18, !noundef !19
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @Perl_reginitcolors() #15
  br label %58

58:                                               ; preds = %57, %54
  %59 = load ptr, ptr @PL_AboveLatin1, align 8, !tbaa !5
  %60 = icmp eq ptr %59, null
  br i1 %60, label %61, label %69

61:                                               ; preds = %58
  %62 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @AboveLatin1_invlist) #15
  store ptr %62, ptr @PL_AboveLatin1, align 8, !tbaa !5
  %63 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @Latin1_invlist) #15
  store ptr %63, ptr @PL_Latin1, align 8, !tbaa !5
  %64 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @UpperLatin1_invlist) #15
  store ptr %64, ptr @PL_UpperLatin1, align 8, !tbaa !5
  %65 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @_Perl_Any_Folds_invlist) #15
  store ptr %65, ptr @PL_utf8_foldable, align 8, !tbaa !5
  %66 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @_Perl_Folds_To_Multi_Char_invlist) #15
  store ptr %66, ptr @PL_HasMultiCharFold, align 8, !tbaa !5
  %67 = tail call ptr @Perl__new_invlist(i64 noundef 2) #15
  store ptr %67, ptr @PL_InBitmap, align 8, !tbaa !5
  %68 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %67, i64 noundef 0, i64 noundef 255) #15
  store ptr %68, ptr @PL_InBitmap, align 8, !tbaa !5
  br label %69

69:                                               ; preds = %61, %58
  %70 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 38
  store ptr null, ptr %70, align 8, !tbaa !20
  %71 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 39
  store i32 0, ptr %71, align 8, !tbaa !24
  %72 = icmp eq ptr %5, null
  br i1 %72, label %74, label %73

73:                                               ; preds = %69
  store i8 0, ptr %5, align 1, !tbaa !11
  br label %74

74:                                               ; preds = %73, %69
  %75 = icmp eq ptr %2, null
  br i1 %75, label %115, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %78 = load i16, ptr %77, align 8
  %79 = and i16 %78, 511
  switch i16 %79, label %112 [
    i16 158, label %84
    i16 0, label %80
  ]

80:                                               ; preds = %76
  %81 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %82 = load i64, ptr %81, align 8, !tbaa !25
  %83 = icmp eq i64 %82, 158
  br i1 %83, label %84, label %112

84:                                               ; preds = %76, %80
  %85 = getelementptr inbounds %struct.listop, ptr %2, i64 0, i32 7
  %86 = load ptr, ptr %85, align 8, !tbaa !5
  %87 = icmp eq ptr %86, null
  br i1 %87, label %112, label %88

88:                                               ; preds = %84, %101
  %89 = phi ptr [ %104, %101 ], [ %86, %84 ]
  %90 = phi i32 [ %102, %101 ], [ 0, %84 ]
  %91 = getelementptr inbounds %struct.op, ptr %89, i64 0, i32 4
  %92 = load i16, ptr %91, align 8
  %93 = and i16 %92, 511
  %94 = icmp eq i16 %93, 0
  br i1 %94, label %95, label %101

95:                                               ; preds = %88
  %96 = getelementptr inbounds %struct.op, ptr %89, i64 0, i32 5
  %97 = load i8, ptr %96, align 2, !tbaa !27
  %98 = lshr i8 %97, 7
  %99 = zext i8 %98 to i32
  %100 = add nsw i32 %90, %99
  br label %101

101:                                              ; preds = %95, %88
  %102 = phi i32 [ %90, %88 ], [ %100, %95 ]
  %103 = getelementptr inbounds %struct.op, ptr %89, i64 0, i32 1
  %104 = load ptr, ptr %103, align 8, !tbaa !5
  %105 = icmp eq ptr %104, null
  br i1 %105, label %106, label %88, !llvm.loop !28

106:                                              ; preds = %101
  %107 = icmp eq i32 %102, 0
  br i1 %107, label %112, label %108

108:                                              ; preds = %106
  store i32 %102, ptr %71, align 8, !tbaa !24
  %109 = sext i32 %102 to i64
  %110 = shl nsw i64 %109, 5
  %111 = tail call ptr @Perl_safesysmalloc(i64 noundef %110) #15
  store ptr %111, ptr %70, align 8, !tbaa !20
  br label %112

112:                                              ; preds = %84, %106, %108, %76, %80
  %113 = phi i32 [ 0, %106 ], [ %102, %108 ], [ 0, %76 ], [ 0, %80 ], [ 0, %84 ]
  %114 = icmp eq i32 %1, 0
  br i1 %114, label %118, label %176

115:                                              ; preds = %74
  %116 = icmp eq i32 %1, 0
  br i1 %116, label %117, label %176

117:                                              ; preds = %115
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.4, i32 noundef 6472) #15
  br label %118

118:                                              ; preds = %112, %117
  %119 = phi i32 [ %113, %112 ], [ 0, %117 ]
  %120 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %121 = load i16, ptr %120, align 8
  %122 = and i16 %121, 511
  %123 = icmp eq i16 %122, 5
  br i1 %123, label %140, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %struct.listop, ptr %2, i64 0, i32 7
  %126 = load ptr, ptr %125, align 8, !tbaa !5
  %127 = icmp eq ptr %126, null
  br i1 %127, label %140, label %128

128:                                              ; preds = %124, %128
  %129 = phi ptr [ %138, %128 ], [ %126, %124 ]
  %130 = phi i32 [ %136, %128 ], [ 0, %124 ]
  %131 = getelementptr inbounds %struct.op, ptr %129, i64 0, i32 4
  %132 = load i16, ptr %131, align 8
  %133 = and i16 %132, 511
  %134 = icmp eq i16 %133, 5
  %135 = zext i1 %134 to i32
  %136 = add nuw nsw i32 %130, %135
  %137 = getelementptr inbounds %struct.op, ptr %129, i64 0, i32 1
  %138 = load ptr, ptr %137, align 8, !tbaa !5
  %139 = icmp eq ptr %138, null
  br i1 %139, label %140, label %128, !llvm.loop !30

140:                                              ; preds = %128, %124, %118
  %141 = phi i32 [ 1, %118 ], [ 0, %124 ], [ %136, %128 ]
  %142 = icmp eq ptr %0, null
  br i1 %142, label %144, label %143

143:                                              ; preds = %140
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.5, i32 noundef 6484) #15
  br label %144

144:                                              ; preds = %140, %143
  %145 = sext i32 %141 to i64
  %146 = shl nsw i64 %145, 3
  %147 = tail call ptr @Perl_safesysmalloc(i64 noundef %146) #15
  tail call void @Perl_save_pushptr(ptr noundef %147, i32 noundef 10) #15
  %148 = load i16, ptr %120, align 8
  %149 = and i16 %148, 511
  %150 = icmp eq i16 %149, 5
  br i1 %150, label %151, label %154

151:                                              ; preds = %144
  %152 = getelementptr inbounds %struct.svop, ptr %2, i64 0, i32 7
  %153 = load ptr, ptr %152, align 8, !tbaa !31
  store ptr %153, ptr %147, align 8, !tbaa !5
  br label %176

154:                                              ; preds = %144
  %155 = getelementptr inbounds %struct.listop, ptr %2, i64 0, i32 7
  %156 = load ptr, ptr %155, align 8, !tbaa !5
  %157 = icmp eq ptr %156, null
  br i1 %157, label %176, label %158

158:                                              ; preds = %154, %171
  %159 = phi ptr [ %174, %171 ], [ %156, %154 ]
  %160 = phi i32 [ %172, %171 ], [ 0, %154 ]
  %161 = getelementptr inbounds %struct.op, ptr %159, i64 0, i32 4
  %162 = load i16, ptr %161, align 8
  %163 = and i16 %162, 511
  %164 = icmp eq i16 %163, 5
  br i1 %164, label %165, label %171

165:                                              ; preds = %158
  %166 = getelementptr inbounds %struct.svop, ptr %159, i64 0, i32 7
  %167 = load ptr, ptr %166, align 8, !tbaa !31
  %168 = add nsw i32 %160, 1
  %169 = sext i32 %160 to i64
  %170 = getelementptr inbounds ptr, ptr %147, i64 %169
  store ptr %167, ptr %170, align 8, !tbaa !5
  br label %171

171:                                              ; preds = %158, %165
  %172 = phi i32 [ %168, %165 ], [ %160, %158 ]
  %173 = getelementptr inbounds %struct.op, ptr %159, i64 0, i32 1
  %174 = load ptr, ptr %173, align 8, !tbaa !5
  %175 = icmp eq ptr %174, null
  br i1 %175, label %176, label %158, !llvm.loop !33

176:                                              ; preds = %171, %154, %115, %151, %112
  %177 = phi i32 [ %113, %112 ], [ %119, %151 ], [ 0, %115 ], [ %119, %154 ], [ %119, %171 ]
  %178 = phi ptr [ %0, %112 ], [ %147, %151 ], [ %0, %115 ], [ %147, %154 ], [ %147, %171 ]
  %179 = phi i32 [ %1, %112 ], [ %141, %151 ], [ %1, %115 ], [ %141, %154 ], [ %141, %171 ]
  %180 = load volatile i64, ptr %20, align 8, !tbaa !9
  %181 = and i64 %180, 1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %189, label %183

183:                                              ; preds = %176
  %184 = tail call ptr @Perl_PerlIO_stderr() #15
  %185 = and i32 %6, 2048
  %186 = icmp eq i32 %185, 0
  %187 = select i1 %186, ptr @.str.8, ptr @.str.7
  %188 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %184, ptr noundef nonnull @.str.6, i32 noundef %179, ptr noundef nonnull %187) #15
  br label %189

189:                                              ; preds = %183, %176
  %190 = icmp eq i32 %177, 0
  br i1 %190, label %210, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %193 = load i16, ptr %192, align 8
  %194 = and i16 %193, 511
  %195 = icmp eq i16 %194, 5
  br i1 %195, label %210, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %struct.listop, ptr %2, i64 0, i32 7
  %198 = load ptr, ptr %197, align 8, !tbaa !34
  %199 = getelementptr inbounds %struct.op, ptr %198, i64 0, i32 4
  %200 = load i16, ptr %199, align 8
  %201 = and i16 %200, 511
  switch i16 %201, label %206 [
    i16 3, label %207
    i16 0, label %202
    i16 390, label %207
  ]

202:                                              ; preds = %196
  %203 = getelementptr inbounds %struct.op, ptr %198, i64 0, i32 3
  %204 = load i64, ptr %203, align 8, !tbaa !25
  %205 = icmp eq i64 %204, 3
  br i1 %205, label %207, label %206

206:                                              ; preds = %196, %202
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.9, i32 noundef 6512) #15
  br label %207

207:                                              ; preds = %196, %196, %202, %206
  %208 = getelementptr inbounds %struct.op, ptr %198, i64 0, i32 1
  %209 = load ptr, ptr %208, align 8, !tbaa !36
  br label %210

210:                                              ; preds = %207, %191, %189
  %211 = phi ptr [ %209, %207 ], [ %2, %191 ], [ %2, %189 ]
  %212 = call fastcc ptr @S_concat_pat(ptr noundef nonnull %18, ptr noundef null, ptr noundef %178, i32 noundef %179, ptr noundef %211, ptr noundef nonnull %16, ptr noundef null)
  %213 = getelementptr inbounds %struct.sv, ptr %212, i64 0, i32 2
  %214 = load i32, ptr %213, align 4, !tbaa !13
  %215 = and i32 %214, 2048
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %222, label %217

217:                                              ; preds = %210
  %218 = getelementptr inbounds %struct.sv, ptr %212, i64 0, i32 3
  %219 = load ptr, ptr %218, align 8, !tbaa !17
  %220 = getelementptr inbounds %struct.sv, ptr %219, i64 0, i32 2
  %221 = load i32, ptr %220, align 4, !tbaa !13
  br label %222

222:                                              ; preds = %217, %210
  %223 = phi i32 [ %221, %217 ], [ %214, %210 ]
  %224 = phi ptr [ %219, %217 ], [ %212, %210 ]
  %225 = and i32 %223, 255
  %226 = icmp eq i32 %225, 8
  br i1 %226, label %227, label %243

227:                                              ; preds = %222
  br i1 %72, label %229, label %228

228:                                              ; preds = %227
  store i8 1, ptr %5, align 1, !tbaa !11
  br label %229

229:                                              ; preds = %228, %227
  %230 = getelementptr inbounds %struct.sv, ptr %224, i64 0, i32 1
  %231 = load i32, ptr %230, align 8, !tbaa !37
  %232 = add i32 %231, 1
  store i32 %232, ptr %230, align 8, !tbaa !37
  %233 = load ptr, ptr %70, align 8, !tbaa !20
  tail call void @Perl_safesysfree(ptr noundef %233) #15
  %234 = load volatile i64, ptr %20, align 8, !tbaa !9
  %235 = and i64 %234, 1
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %3496, label %237

237:                                              ; preds = %229
  %238 = tail call ptr @Perl_PerlIO_stderr() #15
  %239 = and i32 %6, 2048
  %240 = icmp eq i32 %239, 0
  %241 = select i1 %240, ptr @.str.8, ptr @.str.7
  %242 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %238, ptr noundef nonnull @.str.10, ptr noundef nonnull %241) #15
  br label %3496

243:                                              ; preds = %222
  %244 = and i32 %214, 2098176
  %245 = icmp eq i32 %244, 1024
  br i1 %245, label %246, label %252

246:                                              ; preds = %243
  %247 = load ptr, ptr %212, align 8, !tbaa !16
  %248 = getelementptr inbounds %struct.xpv, ptr %247, i64 0, i32 2
  %249 = load i64, ptr %248, align 8, !tbaa !38
  store i64 %249, ptr %11, align 8, !tbaa !9
  %250 = getelementptr inbounds %struct.sv, ptr %212, i64 0, i32 3
  %251 = load ptr, ptr %250, align 8, !tbaa !17
  br label %254

252:                                              ; preds = %243
  %253 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %212, ptr noundef nonnull %11, i32 noundef 0) #15
  br label %254

254:                                              ; preds = %252, %246
  %255 = phi ptr [ %251, %246 ], [ %253, %252 ]
  store ptr %255, ptr %12, align 8, !tbaa !5
  %256 = getelementptr inbounds %struct.regexp_engine, ptr %3, i64 0, i32 11
  %257 = load ptr, ptr %256, align 8, !tbaa !40
  %258 = icmp eq ptr %257, null
  br i1 %258, label %259, label %306

259:                                              ; preds = %254
  %260 = load i32, ptr %213, align 4, !tbaa !13
  %261 = and i32 %260, 536870912
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %271, label %263

263:                                              ; preds = %259
  %264 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %265 = getelementptr inbounds %struct.cop, ptr %264, i64 0, i32 10
  %266 = load i32, ptr %265, align 8, !tbaa !42
  %267 = and i32 %266, 8
  %268 = and i32 %260, 2097152
  %269 = or i32 %267, %268
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %274, label %291

271:                                              ; preds = %259
  %272 = and i32 %260, 2097152
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %291

274:                                              ; preds = %263, %271
  %275 = and i32 %260, 2048
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %301, label %277

277:                                              ; preds = %274
  %278 = getelementptr inbounds %struct.sv, ptr %212, i64 0, i32 3
  %279 = load ptr, ptr %278, align 8, !tbaa !17
  %280 = getelementptr inbounds %struct.sv, ptr %279, i64 0, i32 2
  %281 = load i32, ptr %280, align 4, !tbaa !13
  %282 = and i32 %281, 1048576
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %301, label %284

284:                                              ; preds = %277
  %285 = load ptr, ptr %279, align 8, !tbaa !16
  %286 = load ptr, ptr %285, align 8, !tbaa !44
  %287 = getelementptr inbounds %struct.hv, ptr %286, i64 0, i32 2
  %288 = load i32, ptr %287, align 4, !tbaa !46
  %289 = and i32 %288, 268435456
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %301, label %291

291:                                              ; preds = %284, %271, %263
  %292 = load i64, ptr %11, align 8, !tbaa !9
  %293 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %294 = getelementptr inbounds %struct.cop, ptr %293, i64 0, i32 10
  %295 = load i32, ptr %294, align 8, !tbaa !42
  %296 = and i32 %295, 8
  %297 = icmp eq i32 %296, 0
  %298 = or i32 %261, 524288
  %299 = select i1 %297, i32 %298, i32 524288
  %300 = call ptr @Perl_newSVpvn_flags(ptr noundef %255, i64 noundef %292, i32 noundef %299) #15
  br label %301

301:                                              ; preds = %291, %284, %277, %274
  %302 = phi ptr [ %300, %291 ], [ %212, %284 ], [ %212, %277 ], [ %212, %274 ]
  %303 = load ptr, ptr %70, align 8, !tbaa !20
  call void @Perl_safesysfree(ptr noundef %303) #15
  %304 = load ptr, ptr %3, align 8, !tbaa !48
  %305 = call ptr %304(ptr noundef %302, i32 noundef %6) #15
  br label %3496

306:                                              ; preds = %254
  %307 = load i64, ptr %11, align 8, !tbaa !9
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %318, label %309

309:                                              ; preds = %306
  %310 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %311 = getelementptr inbounds %struct.cop, ptr %310, i64 0, i32 10
  %312 = load i32, ptr %311, align 8, !tbaa !42
  %313 = and i32 %312, 8
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %318

315:                                              ; preds = %309
  %316 = load i32, ptr %213, align 4, !tbaa !13
  %317 = and i32 %316, 536870912
  br label %318

318:                                              ; preds = %306, %309, %315
  %319 = phi i32 [ %317, %315 ], [ 0, %309 ], [ 0, %306 ]
  %320 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 26
  store i32 %319, ptr %320, align 4, !tbaa !49
  %321 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 25
  store i32 %319, ptr %321, align 8, !tbaa !50
  %322 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 27
  store i32 0, ptr %322, align 8, !tbaa !51
  %323 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 34
  store i32 0, ptr %323, align 8, !tbaa !52
  %324 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 35
  store i32 0, ptr %324, align 4, !tbaa !53
  %325 = lshr i32 %7, 10
  %326 = and i32 %325, 1
  %327 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 45
  store i32 %326, ptr %327, align 4, !tbaa !54
  %328 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 46
  store ptr null, ptr %328, align 8, !tbaa !55
  %329 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 42
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %329, i8 0, i64 20, i1 false)
  %330 = call ptr @Perl_sv_newmortal() #15
  %331 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 51
  store ptr %330, ptr %331, align 8, !tbaa !56
  %332 = call ptr @Perl_sv_newmortal() #15
  %333 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 52
  store ptr %332, ptr %333, align 8, !tbaa !57
  %334 = load volatile i64, ptr %20, align 8, !tbaa !9
  %335 = and i64 %334, 255
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %350, label %337

337:                                              ; preds = %318
  %338 = call ptr @Perl_sv_newmortal() #15
  %339 = load i64, ptr %11, align 8, !tbaa !9
  %340 = load ptr, ptr @PL_colors, align 16, !tbaa !5
  %341 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 1), align 8, !tbaa !5
  %342 = load i32, ptr %321, align 8, !tbaa !50
  %343 = icmp eq i32 %342, 0
  %344 = select i1 %343, i32 33795, i32 34051
  %345 = call ptr @Perl_pv_pretty(ptr noundef %338, ptr noundef %255, i64 noundef %339, i64 noundef 60, ptr noundef %340, ptr noundef %341, i32 noundef %344) #15
  %346 = call ptr @Perl_PerlIO_stderr() #15
  %347 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 4), align 16, !tbaa !5
  %348 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 5), align 8, !tbaa !5
  %349 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %346, ptr noundef nonnull @.str.11, ptr noundef %347, ptr noundef %348, ptr noundef %345) #15
  br label %350

350:                                              ; preds = %337, %318
  %351 = icmp sgt i32 %7, -1
  %352 = icmp ne ptr %4, null
  %353 = getelementptr inbounds %struct.p5rx, ptr %4, i64 0, i32 2
  %354 = getelementptr inbounds %struct.p5rx, ptr %4, i64 0, i32 3
  %355 = and i32 %6, 4095
  %356 = and i32 %6, 4
  %357 = icmp eq i32 %356, 0
  %358 = and i32 %6, 896
  %359 = icmp eq i32 %358, 0
  %360 = and i32 %6, -897
  %361 = or i32 %360, 256
  %362 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 2
  %363 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 1
  %364 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 15
  %365 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 16
  %366 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 41
  %367 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 33
  %368 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 21
  %369 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 20
  %370 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 36
  %371 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 37
  %372 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 8
  %373 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 6
  %374 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 7
  %375 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 14
  %376 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 18
  %377 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 19
  %378 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 17
  %379 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 13
  %380 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 12
  %381 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 9
  %382 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 22
  %383 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 23
  %384 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 28
  %385 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 49
  %386 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 29
  %387 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 31
  %388 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 32
  %389 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 30
  %390 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 40
  %391 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 48
  %392 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 47
  br label %393

393:                                              ; preds = %1236, %350
  %394 = phi i8 [ %450, %1236 ], [ 0, %350 ]
  %395 = phi ptr [ %1229, %1236 ], [ null, %350 ]
  br label %396

396:                                              ; preds = %393, %1135
  %397 = phi i8 [ %450, %1135 ], [ %394, %393 ]
  br i1 %351, label %398, label %405

398:                                              ; preds = %396
  %399 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %400 = icmp eq ptr %399, @PL_compiling
  br i1 %400, label %401, label %449

401:                                              ; preds = %398
  %402 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !42
  %403 = and i32 %402, 2097152
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %449, label %405

405:                                              ; preds = %401, %396
  %406 = load ptr, ptr %12, align 8, !tbaa !5
  %407 = load i64, ptr %11, align 8, !tbaa !9
  %408 = load ptr, ptr %70, align 8
  %409 = load i32, ptr %71, align 8
  %410 = icmp eq i64 %407, 0
  br i1 %410, label %449, label %411

411:                                              ; preds = %405, %444
  %412 = phi i64 [ %447, %444 ], [ 0, %405 ]
  %413 = phi i32 [ %445, %444 ], [ 0, %405 ]
  %414 = icmp slt i32 %413, %409
  br i1 %414, label %415, label %424

415:                                              ; preds = %411
  %416 = sext i32 %413 to i64
  %417 = getelementptr inbounds %struct.reg_code_block, ptr %408, i64 %416
  %418 = load i64, ptr %417, align 8, !tbaa !58
  %419 = icmp eq i64 %412, %418
  br i1 %419, label %420, label %424

420:                                              ; preds = %415
  %421 = getelementptr inbounds %struct.reg_code_block, ptr %408, i64 %416, i32 1
  %422 = load i64, ptr %421, align 8, !tbaa !60
  %423 = add nsw i32 %413, 1
  br label %444

424:                                              ; preds = %415, %411
  %425 = getelementptr inbounds i8, ptr %406, i64 %412
  %426 = load i8, ptr %425, align 1, !tbaa !17
  %427 = icmp eq i8 %426, 40
  br i1 %427, label %428, label %444

428:                                              ; preds = %424
  %429 = add i64 %412, 2
  %430 = icmp ugt i64 %429, %407
  br i1 %430, label %444, label %431

431:                                              ; preds = %428
  %432 = add nuw i64 %412, 1
  %433 = getelementptr inbounds i8, ptr %406, i64 %432
  %434 = load i8, ptr %433, align 1, !tbaa !17
  %435 = icmp eq i8 %434, 63
  br i1 %435, label %436, label %444

436:                                              ; preds = %431
  %437 = getelementptr inbounds i8, ptr %406, i64 %429
  %438 = load i8, ptr %437, align 1, !tbaa !17
  switch i8 %438, label %444 [
    i8 123, label %449
    i8 63, label %439
  ]

439:                                              ; preds = %436
  %440 = add i64 %412, 3
  %441 = getelementptr inbounds i8, ptr %406, i64 %440
  %442 = load i8, ptr %441, align 1, !tbaa !17
  %443 = icmp eq i8 %442, 123
  br i1 %443, label %449, label %444

444:                                              ; preds = %439, %436, %431, %428, %424, %420
  %445 = phi i32 [ %423, %420 ], [ %413, %439 ], [ %413, %431 ], [ %413, %428 ], [ %413, %424 ], [ %413, %436 ]
  %446 = phi i64 [ %422, %420 ], [ %412, %439 ], [ %412, %431 ], [ %412, %428 ], [ %412, %424 ], [ %412, %436 ]
  %447 = add i64 %446, 1
  %448 = icmp ult i64 %447, %407
  br i1 %448, label %411, label %449, !llvm.loop !61

449:                                              ; preds = %444, %439, %436, %405, %401, %398
  %450 = phi i8 [ %397, %401 ], [ %397, %398 ], [ 0, %405 ], [ 1, %436 ], [ 1, %439 ], [ 0, %444 ]
  %451 = load i8, ptr %16, align 1, !range !18
  %452 = icmp eq i8 %451, 0
  %453 = select i1 %352, i1 %452, i1 false
  br i1 %453, label %454, label %560

454:                                              ; preds = %449
  %455 = load i32, ptr %353, align 4, !tbaa !62
  %456 = load i32, ptr %321, align 8, !tbaa !50
  %457 = icmp eq i32 %456, 0
  %458 = and i32 %455, 536870912
  %459 = icmp ne i32 %458, 0
  %460 = xor i1 %457, %459
  br i1 %460, label %461, label %560

461:                                              ; preds = %454
  %462 = and i32 %455, 255
  %463 = icmp eq i32 %462, 8
  %464 = and i32 %455, 16826623
  %465 = icmp eq i32 %464, 16777226
  %466 = or i1 %463, %465
  br i1 %466, label %468, label %467

467:                                              ; preds = %461
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %468

468:                                              ; preds = %461, %467
  %469 = load ptr, ptr %354, align 8, !tbaa !17
  %470 = getelementptr inbounds %struct.regexp, ptr %469, i64 0, i32 24
  %471 = load i16, ptr %470, align 8
  %472 = lshr i16 %471, 4
  %473 = and i16 %472, 511
  %474 = zext i16 %473 to i32
  %475 = icmp eq i32 %355, %474
  br i1 %475, label %476, label %560

476:                                              ; preds = %468
  %477 = load i32, ptr %353, align 4, !tbaa !62
  %478 = and i32 %477, 255
  %479 = icmp eq i32 %478, 8
  %480 = and i32 %477, 16826623
  %481 = icmp eq i32 %480, 16777226
  %482 = or i1 %479, %481
  br i1 %482, label %488, label %483

483:                                              ; preds = %476
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  %484 = load ptr, ptr %354, align 8, !tbaa !17
  %485 = load i32, ptr %353, align 4, !tbaa !62
  %486 = and i32 %485, 255
  %487 = and i32 %485, 16826623
  br label %488

488:                                              ; preds = %476, %483
  %489 = phi i32 [ %480, %476 ], [ %487, %483 ]
  %490 = phi i32 [ %478, %476 ], [ %486, %483 ]
  %491 = phi ptr [ %469, %476 ], [ %484, %483 ]
  %492 = getelementptr inbounds %struct.regexp, ptr %491, i64 0, i32 3
  %493 = load ptr, ptr %492, align 8, !tbaa !17
  %494 = icmp eq i32 %490, 8
  %495 = icmp eq i32 %489, 16777226
  %496 = or i1 %494, %495
  br i1 %496, label %498, label %497

497:                                              ; preds = %488
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %498

498:                                              ; preds = %488, %497
  %499 = icmp eq ptr %493, null
  br i1 %499, label %560, label %500

500:                                              ; preds = %498
  %501 = load ptr, ptr %4, align 8, !tbaa !64
  %502 = getelementptr inbounds %struct.xpv, ptr %501, i64 0, i32 2
  %503 = load i64, ptr %502, align 8, !tbaa !38
  %504 = load i32, ptr %353, align 4, !tbaa !62
  %505 = and i32 %504, 255
  %506 = icmp eq i32 %505, 8
  %507 = and i32 %504, 16826623
  %508 = icmp eq i32 %507, 16777226
  %509 = or i1 %506, %508
  br i1 %509, label %511, label %510

510:                                              ; preds = %500
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %511

511:                                              ; preds = %500, %510
  %512 = load ptr, ptr %354, align 8, !tbaa !17
  %513 = getelementptr inbounds %struct.regexp, ptr %512, i64 0, i32 24
  %514 = load i16, ptr %513, align 8
  %515 = and i16 %514, 15
  %516 = zext i16 %515 to i64
  %517 = xor i64 %516, -1
  %518 = add i64 %503, %517
  %519 = load i64, ptr %11, align 8, !tbaa !9
  %520 = icmp eq i64 %518, %519
  br i1 %520, label %521, label %560

521:                                              ; preds = %511
  %522 = load i32, ptr %353, align 4, !tbaa !62
  %523 = and i32 %522, 255
  %524 = icmp eq i32 %523, 8
  %525 = and i32 %522, 16826623
  %526 = icmp eq i32 %525, 16777226
  %527 = or i1 %524, %526
  br i1 %527, label %533, label %528

528:                                              ; preds = %521
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  %529 = load ptr, ptr %354, align 8, !tbaa !17
  %530 = load i32, ptr %353, align 4, !tbaa !62
  %531 = and i32 %530, 255
  %532 = and i32 %530, 16826623
  br label %533

533:                                              ; preds = %521, %528
  %534 = phi i32 [ %525, %521 ], [ %532, %528 ]
  %535 = phi i32 [ %523, %521 ], [ %531, %528 ]
  %536 = phi ptr [ %512, %521 ], [ %529, %528 ]
  %537 = getelementptr inbounds %struct.regexp, ptr %536, i64 0, i32 3
  %538 = load ptr, ptr %537, align 8, !tbaa !17
  %539 = icmp eq i32 %535, 8
  %540 = icmp eq i32 %534, 16777226
  %541 = or i1 %539, %540
  br i1 %541, label %544, label %542

542:                                              ; preds = %533
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  %543 = load ptr, ptr %354, align 8, !tbaa !17
  br label %544

544:                                              ; preds = %533, %542
  %545 = phi ptr [ %536, %533 ], [ %543, %542 ]
  %546 = getelementptr inbounds %struct.regexp, ptr %545, i64 0, i32 24
  %547 = load i16, ptr %546, align 8
  %548 = and i16 %547, 15
  %549 = zext i16 %548 to i64
  %550 = getelementptr inbounds i8, ptr %538, i64 %549
  %551 = load ptr, ptr %12, align 8, !tbaa !5
  %552 = load i64, ptr %11, align 8, !tbaa !9
  %553 = call i32 @bcmp(ptr %550, ptr %551, i64 %552)
  %554 = icmp eq i32 %553, 0
  %555 = and i8 %450, 1
  %556 = icmp eq i8 %555, 0
  %557 = select i1 %554, i1 %556, i1 false
  br i1 %557, label %558, label %560

558:                                              ; preds = %544
  %559 = load ptr, ptr %70, align 8, !tbaa !20
  call void @Perl_safesysfree(ptr noundef %559) #15
  br label %3496

560:                                              ; preds = %544, %511, %498, %468, %454, %449
  br i1 %357, label %562, label %561

561:                                              ; preds = %560
  store i32 1, ptr %324, align 4, !tbaa !53
  br label %562

562:                                              ; preds = %561, %560
  %563 = load i32, ptr %321, align 8, !tbaa !50
  %564 = icmp ne i32 %563, 0
  %565 = and i1 %359, %564
  %566 = select i1 %565, i32 %361, i32 %6
  %567 = load ptr, ptr %12, align 8, !tbaa !5
  store ptr %567, ptr %362, align 8, !tbaa !65
  store i32 %566, ptr %18, align 8, !tbaa !66
  store i32 %7, ptr %363, align 4, !tbaa !67
  %568 = and i8 %450, 1
  %569 = icmp eq i8 %568, 0
  br i1 %569, label %1137, label %570

570:                                              ; preds = %562
  %571 = load i8, ptr @PL_tainting, align 1, !tbaa !11, !range !18, !noundef !19
  %572 = icmp eq i8 %571, 0
  %573 = load i8, ptr @PL_tainted, align 1, !range !18
  %574 = icmp eq i8 %573, 0
  %575 = select i1 %572, i1 true, i1 %574
  br i1 %575, label %577, label %576

576:                                              ; preds = %570
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.12) #15
  br label %577

577:                                              ; preds = %576, %570
  %578 = load i64, ptr %11, align 8, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10)
  store volatile i64 0, ptr %10, align 8, !tbaa !9
  %579 = load volatile i64, ptr %10, align 8, !tbaa !9
  %580 = call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %581 = icmp eq ptr %580, null
  br i1 %581, label %601, label %582

582:                                              ; preds = %577
  %583 = getelementptr inbounds %struct.sv, ptr %580, i64 0, i32 2
  %584 = load i32, ptr %583, align 4, !tbaa !13
  %585 = and i32 %584, 256
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %587, label %589

587:                                              ; preds = %582
  call void @Perl_sv_setuv(ptr noundef nonnull %580, i64 noundef 65288) #15
  %588 = load i32, ptr %583, align 4, !tbaa !13
  br label %589

589:                                              ; preds = %587, %582
  %590 = phi i32 [ %588, %587 ], [ %584, %582 ]
  %591 = and i32 %590, 2097408
  %592 = icmp eq i32 %591, 256
  br i1 %592, label %593, label %597

593:                                              ; preds = %589
  %594 = load ptr, ptr %580, align 8, !tbaa !16
  %595 = getelementptr inbounds %struct.xpviv, ptr %594, i64 0, i32 4
  %596 = load i64, ptr %595, align 8, !tbaa !17
  br label %599

597:                                              ; preds = %589
  %598 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %580, i32 noundef 2) #15
  br label %599

599:                                              ; preds = %597, %593
  %600 = phi i64 [ %596, %593 ], [ %598, %597 ]
  store volatile i64 %600, ptr %10, align 8, !tbaa !9
  br label %601

601:                                              ; preds = %599, %577
  %602 = load ptr, ptr %328, align 8, !tbaa !55
  %603 = icmp eq ptr %602, null
  br i1 %603, label %613, label %604

604:                                              ; preds = %601
  store ptr null, ptr %328, align 8, !tbaa !55
  %605 = load i32, ptr %321, align 8, !tbaa !50
  %606 = icmp eq i32 %605, 0
  br i1 %606, label %612, label %607

607:                                              ; preds = %604
  %608 = getelementptr inbounds %struct.sv, ptr %602, i64 0, i32 2
  %609 = load i32, ptr %608, align 4, !tbaa !13
  %610 = and i32 %609, 536870912
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %612, label %989

612:                                              ; preds = %607, %604
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.197, i32 noundef 6134) #15
  br label %989

613:                                              ; preds = %601
  %614 = trunc i64 %578 to i32
  %615 = add i32 %614, 6
  %616 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %617 = icmp eq i64 %578, 0
  br i1 %617, label %675, label %618

618:                                              ; preds = %613
  %619 = and i64 %578, 3
  %620 = icmp ult i64 %578, 4
  br i1 %620, label %657, label %621

621:                                              ; preds = %618
  %622 = and i64 %578, -4
  br label %623

623:                                              ; preds = %652, %621
  %624 = phi i64 [ 0, %621 ], [ %654, %652 ]
  %625 = phi i32 [ %615, %621 ], [ %653, %652 ]
  %626 = phi i64 [ 0, %621 ], [ %655, %652 ]
  %627 = getelementptr inbounds i8, ptr %567, i64 %624
  %628 = load i8, ptr %627, align 1, !tbaa !17
  switch i8 %628, label %631 [
    i8 39, label %629
    i8 92, label %629
  ]

629:                                              ; preds = %623, %623
  %630 = add nsw i32 %625, 1
  br label %631

631:                                              ; preds = %629, %623
  %632 = phi i32 [ %630, %629 ], [ %625, %623 ]
  %633 = or i64 %624, 1
  %634 = getelementptr inbounds i8, ptr %567, i64 %633
  %635 = load i8, ptr %634, align 1, !tbaa !17
  switch i8 %635, label %638 [
    i8 39, label %636
    i8 92, label %636
  ]

636:                                              ; preds = %631, %631
  %637 = add nsw i32 %632, 1
  br label %638

638:                                              ; preds = %636, %631
  %639 = phi i32 [ %637, %636 ], [ %632, %631 ]
  %640 = or i64 %624, 2
  %641 = getelementptr inbounds i8, ptr %567, i64 %640
  %642 = load i8, ptr %641, align 1, !tbaa !17
  switch i8 %642, label %645 [
    i8 39, label %643
    i8 92, label %643
  ]

643:                                              ; preds = %638, %638
  %644 = add nsw i32 %639, 1
  br label %645

645:                                              ; preds = %643, %638
  %646 = phi i32 [ %644, %643 ], [ %639, %638 ]
  %647 = or i64 %624, 3
  %648 = getelementptr inbounds i8, ptr %567, i64 %647
  %649 = load i8, ptr %648, align 1, !tbaa !17
  switch i8 %649, label %652 [
    i8 39, label %650
    i8 92, label %650
  ]

650:                                              ; preds = %645, %645
  %651 = add nsw i32 %646, 1
  br label %652

652:                                              ; preds = %650, %645
  %653 = phi i32 [ %651, %650 ], [ %646, %645 ]
  %654 = add nuw i64 %624, 4
  %655 = add i64 %626, 4
  %656 = icmp eq i64 %655, %622
  br i1 %656, label %657, label %623, !llvm.loop !68

657:                                              ; preds = %652, %618
  %658 = phi i32 [ undef, %618 ], [ %653, %652 ]
  %659 = phi i64 [ 0, %618 ], [ %654, %652 ]
  %660 = phi i32 [ %615, %618 ], [ %653, %652 ]
  %661 = icmp eq i64 %619, 0
  br i1 %661, label %675, label %662

662:                                              ; preds = %657, %670
  %663 = phi i64 [ %672, %670 ], [ %659, %657 ]
  %664 = phi i32 [ %671, %670 ], [ %660, %657 ]
  %665 = phi i64 [ %673, %670 ], [ 0, %657 ]
  %666 = getelementptr inbounds i8, ptr %567, i64 %663
  %667 = load i8, ptr %666, align 1, !tbaa !17
  switch i8 %667, label %670 [
    i8 39, label %668
    i8 92, label %668
  ]

668:                                              ; preds = %662, %662
  %669 = add nsw i32 %664, 1
  br label %670

670:                                              ; preds = %668, %662
  %671 = phi i32 [ %669, %668 ], [ %664, %662 ]
  %672 = add nuw i64 %663, 1
  %673 = add i64 %665, 1
  %674 = icmp eq i64 %673, %619
  br i1 %674, label %675, label %662, !llvm.loop !69

675:                                              ; preds = %657, %670, %613
  %676 = phi i32 [ %615, %613 ], [ %658, %657 ], [ %671, %670 ]
  %677 = sext i32 %676 to i64
  %678 = call ptr @Perl_safesysmalloc(i64 noundef %677) #15
  %679 = getelementptr inbounds i8, ptr %678, i64 1
  store i8 113, ptr %678, align 1, !tbaa !17
  %680 = getelementptr inbounds i8, ptr %678, i64 2
  store i8 114, ptr %679, align 1, !tbaa !17
  %681 = getelementptr inbounds i8, ptr %678, i64 3
  store i8 39, ptr %680, align 1, !tbaa !17
  br i1 %617, label %735, label %682

682:                                              ; preds = %675, %729
  %683 = phi i32 [ %732, %729 ], [ 0, %675 ]
  %684 = phi i64 [ %733, %729 ], [ 0, %675 ]
  %685 = phi ptr [ %730, %729 ], [ %681, %675 ]
  %686 = load i32, ptr %71, align 8, !tbaa !24
  %687 = icmp slt i32 %683, %686
  br i1 %687, label %688, label %719

688:                                              ; preds = %682
  %689 = load ptr, ptr %70, align 8, !tbaa !20
  %690 = sext i32 %683 to i64
  %691 = getelementptr inbounds %struct.reg_code_block, ptr %689, i64 %690
  %692 = load i64, ptr %691, align 8, !tbaa !58
  %693 = icmp eq i64 %684, %692
  br i1 %693, label %694, label %719

694:                                              ; preds = %688
  %695 = getelementptr inbounds i8, ptr %567, i64 %684
  %696 = load i8, ptr %695, align 1, !tbaa !17
  %697 = icmp eq i8 %696, 40
  br i1 %697, label %700, label %698

698:                                              ; preds = %694
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.198, i32 noundef 6159) #15
  %699 = load ptr, ptr %70, align 8, !tbaa !20
  br label %700

700:                                              ; preds = %698, %694
  %701 = phi ptr [ %689, %694 ], [ %699, %698 ]
  %702 = getelementptr inbounds %struct.reg_code_block, ptr %701, i64 %690, i32 1
  %703 = load i64, ptr %702, align 8, !tbaa !60
  %704 = icmp ugt i64 %684, %703
  br i1 %704, label %714, label %705

705:                                              ; preds = %700, %705
  %706 = phi i64 [ %709, %705 ], [ %684, %700 ]
  %707 = phi ptr [ %708, %705 ], [ %685, %700 ]
  %708 = getelementptr inbounds i8, ptr %707, i64 1
  store i8 95, ptr %707, align 1, !tbaa !17
  %709 = add i64 %706, 1
  %710 = load ptr, ptr %70, align 8, !tbaa !20
  %711 = getelementptr inbounds %struct.reg_code_block, ptr %710, i64 %690, i32 1
  %712 = load i64, ptr %711, align 8, !tbaa !60
  %713 = icmp ugt i64 %709, %712
  br i1 %713, label %714, label %705, !llvm.loop !71

714:                                              ; preds = %705, %700
  %715 = phi ptr [ %685, %700 ], [ %708, %705 ]
  %716 = phi i64 [ %684, %700 ], [ %709, %705 ]
  %717 = add i64 %716, -1
  %718 = add nsw i32 %683, 1
  br label %729

719:                                              ; preds = %688, %682
  %720 = getelementptr inbounds i8, ptr %567, i64 %684
  %721 = load i8, ptr %720, align 1, !tbaa !17
  switch i8 %721, label %725 [
    i8 39, label %722
    i8 92, label %722
  ]

722:                                              ; preds = %719, %719
  %723 = getelementptr inbounds i8, ptr %685, i64 1
  store i8 92, ptr %685, align 1, !tbaa !17
  %724 = load i8, ptr %720, align 1, !tbaa !17
  br label %725

725:                                              ; preds = %722, %719
  %726 = phi i8 [ %724, %722 ], [ %721, %719 ]
  %727 = phi ptr [ %723, %722 ], [ %685, %719 ]
  %728 = getelementptr inbounds i8, ptr %727, i64 1
  store i8 %726, ptr %727, align 1, !tbaa !17
  br label %729

729:                                              ; preds = %725, %714
  %730 = phi ptr [ %715, %714 ], [ %728, %725 ]
  %731 = phi i64 [ %717, %714 ], [ %684, %725 ]
  %732 = phi i32 [ %718, %714 ], [ %683, %725 ]
  %733 = add nuw i64 %731, 1
  %734 = icmp ult i64 %733, %578
  br i1 %734, label %682, label %735, !llvm.loop !72

735:                                              ; preds = %729, %675
  %736 = phi ptr [ %681, %675 ], [ %730, %729 ]
  %737 = getelementptr inbounds i8, ptr %736, i64 1
  store i8 39, ptr %736, align 1, !tbaa !17
  %738 = load i32, ptr %363, align 4, !tbaa !67
  %739 = and i32 %738, 8
  %740 = icmp eq i32 %739, 0
  br i1 %740, label %743, label %741

741:                                              ; preds = %735
  %742 = getelementptr inbounds i8, ptr %736, i64 2
  store i8 120, ptr %737, align 1, !tbaa !17
  br label %743

743:                                              ; preds = %741, %735
  %744 = phi ptr [ %742, %741 ], [ %737, %735 ]
  %745 = getelementptr inbounds i8, ptr %744, i64 1
  store i8 0, ptr %744, align 1, !tbaa !17
  %746 = load volatile i64, ptr %10, align 8, !tbaa !9
  %747 = and i64 %746, 255
  %748 = icmp eq i64 %747, 0
  br i1 %748, label %754, label %749

749:                                              ; preds = %743
  %750 = call ptr @Perl_PerlIO_stderr() #15
  %751 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 4), align 16, !tbaa !5
  %752 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 5), align 8, !tbaa !5
  %753 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %750, ptr noundef nonnull @.str.199, ptr noundef %751, ptr noundef %752, ptr noundef nonnull %678) #15
  br label %754

754:                                              ; preds = %749, %743
  %755 = ptrtoint ptr %745 to i64
  %756 = ptrtoint ptr %678 to i64
  %757 = xor i64 %756, -1
  %758 = add i64 %755, %757
  %759 = load i32, ptr %321, align 8, !tbaa !50
  %760 = icmp eq i32 %759, 0
  %761 = select i1 %760, i32 0, i32 536870912
  %762 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull %678, i64 noundef %758, i32 noundef %761) #15
  call void @Perl_safesysfree(ptr noundef nonnull %678) #15
  call void @Perl_push_scope() #15
  %763 = load volatile i32, ptr @PL_debug, align 4, !tbaa !73
  %764 = and i32 %763, 4
  %765 = icmp eq i32 %764, 0
  br i1 %765, label %771, label %766

766:                                              ; preds = %754
  %767 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !73
  %768 = sext i32 %767 to i64
  %769 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !73
  %770 = sext i32 %769 to i64
  call void (ptr, ...) @Perl_deb(ptr noundef nonnull @.str.56, ptr noundef nonnull @.str.200, i64 noundef %768, i64 noundef %770, ptr noundef nonnull @.str.58, i32 noundef 6185) #15
  br label %771

771:                                              ; preds = %766, %754
  call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #15
  %772 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !9
  store i64 %772, ptr @PL_tmps_floor, align 8, !tbaa !9
  call void @Perl_save_re_context() #15
  %773 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !5
  %774 = getelementptr inbounds %struct.stackinfo, ptr %773, i64 0, i32 3
  %775 = load ptr, ptr %774, align 8, !tbaa !74
  %776 = load volatile i32, ptr @PL_debug, align 4, !tbaa !73
  %777 = and i32 %776, 4
  %778 = icmp eq i32 %777, 0
  br i1 %778, label %787, label %779

779:                                              ; preds = %771, %779
  %780 = phi ptr [ %784, %779 ], [ %773, %771 ]
  %781 = phi i32 [ %782, %779 ], [ 0, %771 ]
  %782 = add nuw nsw i32 %781, 1
  %783 = getelementptr inbounds %struct.stackinfo, ptr %780, i64 0, i32 2
  %784 = load ptr, ptr %783, align 8, !tbaa !5
  %785 = icmp eq ptr %784, null
  br i1 %785, label %786, label %779, !llvm.loop !76

786:                                              ; preds = %779
  call void (ptr, ...) @Perl_deb(ptr noundef nonnull @.str.201, i32 noundef %782, ptr noundef nonnull @.str.58, i32 noundef 6188) #15
  br label %787

787:                                              ; preds = %786, %771
  %788 = icmp eq ptr %775, null
  br i1 %788, label %789, label %794

789:                                              ; preds = %787
  %790 = call ptr @Perl_new_stackinfo(i32 noundef 32, i32 noundef 22) #15
  %791 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !5
  %792 = getelementptr inbounds %struct.stackinfo, ptr %790, i64 0, i32 2
  store ptr %791, ptr %792, align 8, !tbaa !77
  %793 = getelementptr inbounds %struct.stackinfo, ptr %791, i64 0, i32 3
  store ptr %790, ptr %793, align 8, !tbaa !74
  br label %794

794:                                              ; preds = %789, %787
  %795 = phi ptr [ %775, %787 ], [ %790, %789 ]
  %796 = getelementptr inbounds %struct.stackinfo, ptr %795, i64 0, i32 6
  store i32 9, ptr %796, align 8, !tbaa !78
  %797 = getelementptr inbounds %struct.stackinfo, ptr %795, i64 0, i32 4
  store i32 -1, ptr %797, align 8, !tbaa !79
  %798 = load ptr, ptr %795, align 8, !tbaa !80
  %799 = load ptr, ptr %798, align 8, !tbaa !81
  %800 = getelementptr inbounds %struct.xpvav, ptr %799, i64 0, i32 2
  store i64 0, ptr %800, align 8, !tbaa !83
  %801 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %802 = ptrtoint ptr %616 to i64
  %803 = ptrtoint ptr %801 to i64
  %804 = sub i64 %802, %803
  %805 = ashr exact i64 %804, 3
  %806 = load ptr, ptr @PL_curstack, align 8, !tbaa !5
  %807 = load ptr, ptr %806, align 8, !tbaa !81
  %808 = getelementptr inbounds %struct.xpvav, ptr %807, i64 0, i32 2
  store i64 %805, ptr %808, align 8, !tbaa !83
  %809 = getelementptr inbounds %struct.av, ptr %798, i64 0, i32 3
  %810 = load ptr, ptr %809, align 8, !tbaa !17
  store ptr %810, ptr @PL_stack_base, align 8, !tbaa !5
  %811 = load ptr, ptr %795, align 8, !tbaa !80
  %812 = load ptr, ptr %811, align 8, !tbaa !81
  %813 = getelementptr inbounds %struct.xpvav, ptr %812, i64 0, i32 3
  %814 = load i64, ptr %813, align 8, !tbaa !85
  %815 = getelementptr inbounds ptr, ptr %810, i64 %814
  store ptr %815, ptr @PL_stack_max, align 8, !tbaa !5
  %816 = load ptr, ptr %795, align 8, !tbaa !80
  %817 = load ptr, ptr %816, align 8, !tbaa !81
  %818 = getelementptr inbounds %struct.xpvav, ptr %817, i64 0, i32 2
  %819 = load i64, ptr %818, align 8, !tbaa !83
  %820 = getelementptr inbounds ptr, ptr %810, i64 %819
  store ptr %820, ptr @PL_stack_sp, align 8, !tbaa !5
  %821 = load ptr, ptr %795, align 8, !tbaa !80
  store ptr %821, ptr @PL_curstack, align 8, !tbaa !5
  store ptr %795, ptr @PL_curstackinfo, align 8, !tbaa !5
  %822 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %823 = load ptr, ptr @PL_markstack, align 8, !tbaa !5
  %824 = ptrtoint ptr %822 to i64
  %825 = ptrtoint ptr %823 to i64
  %826 = sub i64 %824, %825
  %827 = lshr exact i64 %826, 2
  %828 = trunc i64 %827 to i32
  %829 = getelementptr inbounds %struct.stackinfo, ptr %795, i64 0, i32 7
  store i32 %828, ptr %829, align 4, !tbaa !86
  %830 = call i32 @Perl_eval_sv(ptr noundef %762, i32 noundef 2050) #15
  %831 = getelementptr inbounds %struct.sv, ptr %762, i64 0, i32 1
  %832 = load i32, ptr %831, align 8, !tbaa !37
  %833 = icmp ugt i32 %832, 1
  br i1 %833, label %834, label %836

834:                                              ; preds = %794
  %835 = add i32 %832, -1
  store i32 %835, ptr %831, align 8, !tbaa !37
  br label %837

836:                                              ; preds = %794
  call void @Perl_sv_free2(ptr noundef nonnull %762, i32 noundef %832) #15
  br label %837

837:                                              ; preds = %836, %834
  %838 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %839 = getelementptr inbounds ptr, ptr %838, i64 -1
  %840 = load ptr, ptr %838, align 8, !tbaa !5
  store ptr %839, ptr @PL_stack_sp, align 8, !tbaa !5
  %841 = load ptr, ptr @PL_errgv, align 8, !tbaa !5
  %842 = getelementptr inbounds %struct.gv, ptr %841, i64 0, i32 3
  %843 = load ptr, ptr %842, align 8, !tbaa !17
  %844 = load ptr, ptr %843, align 8, !tbaa !5
  %845 = icmp eq ptr %844, null
  br i1 %845, label %846, label %851

846:                                              ; preds = %837
  %847 = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %841, i32 noundef 0) #15
  %848 = getelementptr inbounds %struct.gv, ptr %847, i64 0, i32 3
  %849 = load ptr, ptr %848, align 8, !tbaa !17
  %850 = load ptr, ptr %849, align 8, !tbaa !5
  br label %851

851:                                              ; preds = %846, %837
  %852 = phi ptr [ %850, %846 ], [ %844, %837 ]
  %853 = getelementptr inbounds %struct.sv, ptr %852, i64 0, i32 2
  %854 = load i32, ptr %853, align 4, !tbaa !13
  %855 = and i32 %854, 2097152
  %856 = icmp eq i32 %855, 0
  br i1 %856, label %859, label %857

857:                                              ; preds = %851
  %858 = call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %852, i32 noundef 2) #15
  br i1 %858, label %906, label %908

859:                                              ; preds = %851
  %860 = and i32 %854, 65280
  %861 = icmp ne i32 %860, 0
  %862 = and i32 %854, 255
  %863 = icmp eq i32 %862, 8
  %864 = or i1 %861, %863
  %865 = and i32 %854, 16826623
  %866 = icmp eq i32 %865, 16777226
  %867 = or i1 %866, %864
  br i1 %867, label %868, label %908

868:                                              ; preds = %859
  %869 = and i32 %854, 1024
  %870 = icmp eq i32 %869, 0
  br i1 %870, label %885, label %871

871:                                              ; preds = %868
  %872 = load ptr, ptr %852, align 8, !tbaa !16
  %873 = icmp eq ptr %872, null
  br i1 %873, label %908, label %874

874:                                              ; preds = %871
  %875 = getelementptr inbounds %struct.xpv, ptr %872, i64 0, i32 2
  %876 = load i64, ptr %875, align 8, !tbaa !38
  %877 = icmp ugt i64 %876, 1
  br i1 %877, label %906, label %878

878:                                              ; preds = %874
  %879 = icmp eq i64 %876, 0
  br i1 %879, label %908, label %880

880:                                              ; preds = %878
  %881 = getelementptr inbounds %struct.sv, ptr %852, i64 0, i32 3
  %882 = load ptr, ptr %881, align 8, !tbaa !17
  %883 = load i8, ptr %882, align 1, !tbaa !17
  %884 = icmp eq i8 %883, 48
  br i1 %884, label %908, label %906

885:                                              ; preds = %868
  %886 = and i32 %854, 768
  %887 = icmp eq i32 %886, 0
  br i1 %887, label %904, label %888

888:                                              ; preds = %885
  %889 = and i32 %854, 256
  %890 = icmp eq i32 %889, 0
  br i1 %890, label %896, label %891

891:                                              ; preds = %888
  %892 = load ptr, ptr %852, align 8, !tbaa !16
  %893 = getelementptr inbounds %struct.xpviv, ptr %892, i64 0, i32 4
  %894 = load i64, ptr %893, align 8, !tbaa !17
  %895 = icmp eq i64 %894, 0
  br i1 %895, label %896, label %906

896:                                              ; preds = %891, %888
  %897 = and i32 %854, 512
  %898 = icmp eq i32 %897, 0
  br i1 %898, label %908, label %899

899:                                              ; preds = %896
  %900 = load ptr, ptr %852, align 8, !tbaa !16
  %901 = getelementptr inbounds %struct.xpvnv, ptr %900, i64 0, i32 5
  %902 = load double, ptr %901, align 8, !tbaa !17
  %903 = fcmp une double %902, 0.000000e+00
  br i1 %903, label %906, label %908

904:                                              ; preds = %885
  %905 = call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %852, i32 noundef 0) #15
  br i1 %905, label %906, label %908

906:                                              ; preds = %904, %899, %891, %880, %874, %857
  %907 = load ptr, ptr %70, align 8, !tbaa !20
  call void @Perl_safesysfree(ptr noundef %907) #15
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.202, ptr noundef nonnull %852) #15
  br label %908

908:                                              ; preds = %906, %904, %899, %896, %880, %878, %871, %859, %857
  %909 = getelementptr inbounds %struct.sv, ptr %840, i64 0, i32 2
  %910 = load i32, ptr %909, align 4, !tbaa !13
  %911 = and i32 %910, 2048
  %912 = icmp eq i32 %911, 0
  br i1 %912, label %913, label %914

913:                                              ; preds = %908
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.203, i32 noundef 6206) #15
  br label %914

914:                                              ; preds = %913, %908
  %915 = getelementptr inbounds %struct.sv, ptr %840, i64 0, i32 3
  %916 = load ptr, ptr %915, align 8, !tbaa !17
  %917 = getelementptr inbounds %struct.sv, ptr %916, i64 0, i32 2
  %918 = load i32, ptr %917, align 4, !tbaa !73
  %919 = and i32 %918, 255
  %920 = icmp eq i32 %919, 8
  br i1 %920, label %921, label %929

921:                                              ; preds = %914
  %922 = getelementptr inbounds %struct.p5rx, ptr %916, i64 0, i32 3
  %923 = load ptr, ptr %922, align 8, !tbaa !17
  %924 = getelementptr inbounds %struct.regexp, ptr %923, i64 0, i32 4
  %925 = load ptr, ptr %924, align 8, !tbaa !87
  %926 = getelementptr inbounds %struct.regexp_engine, ptr %925, i64 0, i32 11
  %927 = load ptr, ptr %926, align 8, !tbaa !40
  %928 = icmp eq ptr %927, null
  br i1 %928, label %929, label %930

929:                                              ; preds = %921, %914
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.204, i32 noundef 6208) #15
  br label %930

930:                                              ; preds = %929, %921
  %931 = getelementptr inbounds %struct.sv, ptr %916, i64 0, i32 1
  %932 = load i32, ptr %931, align 8, !tbaa !37
  %933 = add i32 %932, 1
  store i32 %933, ptr %931, align 8, !tbaa !37
  %934 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %935 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !5
  %936 = getelementptr inbounds %struct.stackinfo, ptr %935, i64 0, i32 2
  %937 = load ptr, ptr %936, align 8, !tbaa !77
  %938 = load volatile i32, ptr @PL_debug, align 4, !tbaa !73
  %939 = and i32 %938, 4
  %940 = icmp eq i32 %939, 0
  br i1 %940, label %949, label %941

941:                                              ; preds = %930, %941
  %942 = phi ptr [ %946, %941 ], [ %935, %930 ]
  %943 = phi i32 [ %944, %941 ], [ -1, %930 ]
  %944 = add nsw i32 %943, 1
  %945 = getelementptr inbounds %struct.stackinfo, ptr %942, i64 0, i32 2
  %946 = load ptr, ptr %945, align 8, !tbaa !5
  %947 = icmp eq ptr %946, null
  br i1 %947, label %948, label %941, !llvm.loop !89

948:                                              ; preds = %941
  call void (ptr, ...) @Perl_deb(ptr noundef nonnull @.str.205, i32 noundef %944, ptr noundef nonnull @.str.58, i32 noundef 6212) #15
  br label %949

949:                                              ; preds = %948, %930
  %950 = icmp eq ptr %937, null
  br i1 %950, label %951, label %952

951:                                              ; preds = %949
  call void @Perl_croak_popstack() #15
  br label %952

952:                                              ; preds = %951, %949
  %953 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %954 = ptrtoint ptr %934 to i64
  %955 = ptrtoint ptr %953 to i64
  %956 = sub i64 %954, %955
  %957 = ashr exact i64 %956, 3
  %958 = load ptr, ptr @PL_curstack, align 8, !tbaa !5
  %959 = load ptr, ptr %958, align 8, !tbaa !81
  %960 = getelementptr inbounds %struct.xpvav, ptr %959, i64 0, i32 2
  store i64 %957, ptr %960, align 8, !tbaa !83
  %961 = load ptr, ptr %937, align 8, !tbaa !80
  %962 = getelementptr inbounds %struct.av, ptr %961, i64 0, i32 3
  %963 = load ptr, ptr %962, align 8, !tbaa !17
  store ptr %963, ptr @PL_stack_base, align 8, !tbaa !5
  %964 = load ptr, ptr %937, align 8, !tbaa !80
  %965 = load ptr, ptr %964, align 8, !tbaa !81
  %966 = getelementptr inbounds %struct.xpvav, ptr %965, i64 0, i32 3
  %967 = load i64, ptr %966, align 8, !tbaa !85
  %968 = getelementptr inbounds ptr, ptr %963, i64 %967
  store ptr %968, ptr @PL_stack_max, align 8, !tbaa !5
  %969 = load ptr, ptr %937, align 8, !tbaa !80
  %970 = load ptr, ptr %969, align 8, !tbaa !81
  %971 = getelementptr inbounds %struct.xpvav, ptr %970, i64 0, i32 2
  %972 = load i64, ptr %971, align 8, !tbaa !83
  %973 = getelementptr inbounds ptr, ptr %963, i64 %972
  store ptr %973, ptr @PL_stack_sp, align 8, !tbaa !5
  %974 = load ptr, ptr %937, align 8, !tbaa !80
  store ptr %974, ptr @PL_curstack, align 8, !tbaa !5
  store ptr %937, ptr @PL_curstackinfo, align 8, !tbaa !5
  %975 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !9
  %976 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !9
  %977 = icmp sgt i64 %975, %976
  br i1 %977, label %978, label %979

978:                                              ; preds = %952
  call void @Perl_free_tmps() #15
  br label %979

979:                                              ; preds = %978, %952
  %980 = load volatile i32, ptr @PL_debug, align 4, !tbaa !73
  %981 = and i32 %980, 4
  %982 = icmp eq i32 %981, 0
  br i1 %982, label %988, label %983

983:                                              ; preds = %979
  %984 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !73
  %985 = sext i32 %984 to i64
  %986 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !73
  %987 = sext i32 %986 to i64
  call void (ptr, ...) @Perl_deb(ptr noundef nonnull @.str.56, ptr noundef nonnull @.str.206, i64 noundef %985, i64 noundef %987, ptr noundef nonnull @.str.58, i32 noundef 6214) #15
  br label %988

988:                                              ; preds = %983, %979
  call void @Perl_pop_scope() #15
  br label %989

989:                                              ; preds = %988, %612, %607
  %990 = phi ptr [ %602, %607 ], [ %602, %612 ], [ %916, %988 ]
  %991 = load i32, ptr %321, align 8, !tbaa !50
  %992 = icmp eq i32 %991, 0
  br i1 %992, label %996, label %993

993:                                              ; preds = %989
  %994 = getelementptr inbounds %struct.p5rx, ptr %990, i64 0, i32 2
  %995 = load i32, ptr %994, align 4, !tbaa !62
  br label %1005

996:                                              ; preds = %989
  %997 = getelementptr inbounds %struct.sv, ptr %990, i64 0, i32 2
  %998 = load i32, ptr %997, align 4, !tbaa !73
  %999 = and i32 %998, 536870912
  %1000 = icmp eq i32 %999, 0
  br i1 %1000, label %1005, label %1001

1001:                                             ; preds = %996
  %1002 = load ptr, ptr %328, align 8, !tbaa !55
  %1003 = icmp eq ptr %1002, null
  br i1 %1003, label %1135, label %1004

1004:                                             ; preds = %1001
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.13, i32 noundef 6221) #15
  br label %1135

1005:                                             ; preds = %996, %993
  %1006 = phi i32 [ %995, %993 ], [ %998, %996 ]
  %1007 = and i32 %1006, 255
  %1008 = icmp eq i32 %1007, 8
  %1009 = and i32 %1006, 16826623
  %1010 = icmp eq i32 %1009, 16777226
  %1011 = or i1 %1008, %1010
  br i1 %1011, label %1013, label %1012

1012:                                             ; preds = %1005
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %1013

1013:                                             ; preds = %1012, %1005
  %1014 = getelementptr inbounds %struct.p5rx, ptr %990, i64 0, i32 3
  %1015 = load ptr, ptr %1014, align 8, !tbaa !17
  %1016 = getelementptr inbounds %struct.regexp, ptr %1015, i64 0, i32 14
  %1017 = load ptr, ptr %1016, align 8, !tbaa !90
  %1018 = getelementptr inbounds %struct.regexp_internal, ptr %1017, i64 0, i32 5
  %1019 = load i32, ptr %1018, align 8, !tbaa !91
  %1020 = icmp eq i32 %1019, 0
  br i1 %1020, label %1021, label %1028

1021:                                             ; preds = %1013
  %1022 = getelementptr inbounds %struct.sv, ptr %990, i64 0, i32 1
  %1023 = load i32, ptr %1022, align 8, !tbaa !37
  %1024 = icmp ugt i32 %1023, 1
  br i1 %1024, label %1025, label %1027

1025:                                             ; preds = %1021
  %1026 = add i32 %1023, -1
  store i32 %1026, ptr %1022, align 8, !tbaa !37
  br label %1134

1027:                                             ; preds = %1021
  call void @Perl_sv_free2(ptr noundef nonnull %990, i32 noundef %1023) #15
  br label %1134

1028:                                             ; preds = %1013
  %1029 = load i32, ptr %71, align 8, !tbaa !24
  %1030 = add nsw i32 %1029, %1019
  %1031 = sext i32 %1030 to i64
  %1032 = shl nsw i64 %1031, 5
  %1033 = call ptr @Perl_safesysmalloc(i64 noundef %1032) #15
  %1034 = getelementptr inbounds %struct.regexp_internal, ptr %1017, i64 0, i32 4
  %1035 = getelementptr inbounds %struct.sv, ptr %990, i64 0, i32 1
  br label %1036

1036:                                             ; preds = %1122, %1028
  %1037 = phi ptr [ %1033, %1028 ], [ %1125, %1122 ]
  %1038 = phi i32 [ 0, %1028 ], [ %1092, %1122 ]
  %1039 = phi i32 [ 0, %1028 ], [ %1093, %1122 ]
  %1040 = load i32, ptr %71, align 8, !tbaa !24
  %1041 = icmp slt i32 %1038, %1040
  br i1 %1041, label %1045, label %1042

1042:                                             ; preds = %1036
  %1043 = load i32, ptr %1018, align 8, !tbaa !91
  %1044 = icmp slt i32 %1039, %1043
  br i1 %1044, label %1045, label %1126

1045:                                             ; preds = %1042, %1036
  %1046 = icmp eq i32 %1038, %1040
  br i1 %1046, label %1047, label %1052

1047:                                             ; preds = %1045
  %1048 = load ptr, ptr %1034, align 8, !tbaa !93
  %1049 = add nsw i32 %1039, 1
  %1050 = sext i32 %1039 to i64
  %1051 = getelementptr inbounds %struct.reg_code_block, ptr %1048, i64 %1050
  br label %1091

1052:                                             ; preds = %1045
  %1053 = load i32, ptr %1018, align 8, !tbaa !91
  %1054 = icmp eq i32 %1039, %1053
  %1055 = load ptr, ptr %70, align 8, !tbaa !20
  br i1 %1054, label %1056, label %1060

1056:                                             ; preds = %1052
  %1057 = add nsw i32 %1038, 1
  %1058 = sext i32 %1038 to i64
  %1059 = getelementptr inbounds %struct.reg_code_block, ptr %1055, i64 %1058
  br label %1091

1060:                                             ; preds = %1052
  %1061 = sext i32 %1038 to i64
  %1062 = getelementptr inbounds %struct.reg_code_block, ptr %1055, i64 %1061
  %1063 = load i64, ptr %1062, align 8, !tbaa !58
  %1064 = load ptr, ptr %1034, align 8, !tbaa !93
  %1065 = sext i32 %1039 to i64
  %1066 = getelementptr inbounds %struct.reg_code_block, ptr %1064, i64 %1065
  %1067 = load i64, ptr %1066, align 8, !tbaa !58
  %1068 = icmp ult i64 %1063, %1067
  br i1 %1068, label %1069, label %1075

1069:                                             ; preds = %1060
  %1070 = add nsw i32 %1038, 1
  %1071 = getelementptr inbounds %struct.reg_code_block, ptr %1055, i64 %1061, i32 1
  %1072 = load i64, ptr %1071, align 8, !tbaa !60
  %1073 = icmp ult i64 %1072, %1067
  br i1 %1073, label %1091, label %1074

1074:                                             ; preds = %1069
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.207, i32 noundef 6264) #15
  br label %1091

1075:                                             ; preds = %1060
  %1076 = icmp ugt i64 %1063, %1067
  br i1 %1076, label %1082, label %1077

1077:                                             ; preds = %1075
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.208, i32 noundef 6268) #15
  %1078 = load ptr, ptr %1034, align 8, !tbaa !93
  %1079 = load ptr, ptr %70, align 8, !tbaa !20
  %1080 = getelementptr inbounds %struct.reg_code_block, ptr %1079, i64 %1061
  %1081 = load i64, ptr %1080, align 8, !tbaa !58
  br label %1082

1082:                                             ; preds = %1077, %1075
  %1083 = phi i64 [ %1063, %1075 ], [ %1081, %1077 ]
  %1084 = phi ptr [ %1064, %1075 ], [ %1078, %1077 ]
  %1085 = add nsw i32 %1039, 1
  %1086 = getelementptr inbounds %struct.reg_code_block, ptr %1084, i64 %1065
  %1087 = getelementptr inbounds %struct.reg_code_block, ptr %1084, i64 %1065, i32 1
  %1088 = load i64, ptr %1087, align 8, !tbaa !60
  %1089 = icmp ult i64 %1088, %1083
  br i1 %1089, label %1091, label %1090

1090:                                             ; preds = %1082
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.209, i32 noundef 6271) #15
  br label %1091

1091:                                             ; preds = %1090, %1082, %1074, %1069, %1056, %1047
  %1092 = phi i32 [ %1038, %1047 ], [ %1057, %1056 ], [ %1070, %1069 ], [ %1070, %1074 ], [ %1038, %1082 ], [ %1038, %1090 ]
  %1093 = phi i32 [ %1049, %1047 ], [ %1039, %1056 ], [ %1039, %1069 ], [ %1039, %1074 ], [ %1085, %1082 ], [ %1085, %1090 ]
  %1094 = phi ptr [ %1051, %1047 ], [ %1059, %1056 ], [ %1062, %1069 ], [ %1062, %1074 ], [ %1086, %1082 ], [ %1086, %1090 ]
  %1095 = phi i1 [ true, %1047 ], [ false, %1056 ], [ false, %1069 ], [ false, %1074 ], [ true, %1082 ], [ true, %1090 ]
  %1096 = load i64, ptr %1094, align 8, !tbaa !58
  %1097 = getelementptr inbounds i8, ptr %567, i64 %1096
  %1098 = load i8, ptr %1097, align 1, !tbaa !17
  %1099 = icmp eq i8 %1098, 40
  br i1 %1099, label %1101, label %1100

1100:                                             ; preds = %1091
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.210, i32 noundef 6274) #15
  br label %1101

1101:                                             ; preds = %1100, %1091
  %1102 = getelementptr inbounds %struct.reg_code_block, ptr %1094, i64 0, i32 1
  %1103 = load i64, ptr %1102, align 8, !tbaa !60
  %1104 = getelementptr inbounds i8, ptr %567, i64 %1103
  %1105 = load i8, ptr %1104, align 1, !tbaa !17
  %1106 = icmp eq i8 %1105, 41
  br i1 %1106, label %1109, label %1107

1107:                                             ; preds = %1101
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.211, i32 noundef 6275) #15
  %1108 = load i64, ptr %1102, align 8, !tbaa !60
  br label %1109

1109:                                             ; preds = %1107, %1101
  %1110 = phi i64 [ %1103, %1101 ], [ %1108, %1107 ]
  %1111 = load i64, ptr %1094, align 8, !tbaa !58
  store i64 %1111, ptr %1037, align 8, !tbaa !58
  %1112 = getelementptr inbounds %struct.reg_code_block, ptr %1037, i64 0, i32 1
  store i64 %1110, ptr %1112, align 8, !tbaa !60
  %1113 = getelementptr inbounds %struct.reg_code_block, ptr %1094, i64 0, i32 2
  %1114 = load ptr, ptr %1113, align 8, !tbaa !94
  %1115 = getelementptr inbounds %struct.reg_code_block, ptr %1037, i64 0, i32 2
  store ptr %1114, ptr %1115, align 8, !tbaa !94
  br i1 %1095, label %1116, label %1119

1116:                                             ; preds = %1109
  %1117 = load i32, ptr %1035, align 8, !tbaa !37
  %1118 = add i32 %1117, 1
  store i32 %1118, ptr %1035, align 8, !tbaa !37
  br label %1122

1119:                                             ; preds = %1109
  %1120 = getelementptr inbounds %struct.reg_code_block, ptr %1094, i64 0, i32 3
  %1121 = load ptr, ptr %1120, align 8, !tbaa !95
  br label %1122

1122:                                             ; preds = %1119, %1116
  %1123 = phi ptr [ %1121, %1119 ], [ %990, %1116 ]
  %1124 = getelementptr inbounds %struct.reg_code_block, ptr %1037, i64 0, i32 3
  store ptr %1123, ptr %1124, align 8, !tbaa !95
  %1125 = getelementptr inbounds %struct.reg_code_block, ptr %1037, i64 1
  br label %1036, !llvm.loop !96

1126:                                             ; preds = %1042
  %1127 = add nsw i32 %1043, %1040
  store i32 %1127, ptr %71, align 8, !tbaa !24
  %1128 = load ptr, ptr %70, align 8, !tbaa !20
  call void @Perl_safesysfree(ptr noundef %1128) #15
  store ptr %1033, ptr %70, align 8, !tbaa !20
  %1129 = load i32, ptr %1035, align 8, !tbaa !37
  %1130 = icmp ugt i32 %1129, 1
  br i1 %1130, label %1131, label %1133

1131:                                             ; preds = %1126
  %1132 = add i32 %1129, -1
  store i32 %1132, ptr %1035, align 8, !tbaa !37
  br label %1134

1133:                                             ; preds = %1126
  call void @Perl_sv_free2(ptr noundef nonnull %990, i32 noundef %1129) #15
  br label %1134

1134:                                             ; preds = %1131, %1133, %1027, %1025
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10)
  br label %1137

1135:                                             ; preds = %1004, %1001
  store ptr %990, ptr %328, align 8, !tbaa !55
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10)
  %1136 = load i32, ptr %71, align 8, !tbaa !24
  call fastcc void @S_pat_upgrade_to_utf8(ptr noundef nonnull %18, ptr noundef nonnull %12, ptr noundef nonnull %11, i32 noundef %1136)
  br label %396

1137:                                             ; preds = %562, %1134
  %1138 = load ptr, ptr %328, align 8, !tbaa !55
  %1139 = icmp eq ptr %1138, null
  br i1 %1139, label %1141, label %1140

1140:                                             ; preds = %1137
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.13, i32 noundef 6633) #15
  br label %1141

1141:                                             ; preds = %1137, %1140
  store i32 0, ptr %364, align 4, !tbaa !97
  store i32 0, ptr %365, align 8, !tbaa !98
  store i64 0, ptr %366, align 8, !tbaa !99
  store i32 0, ptr %367, align 4, !tbaa !100
  %1142 = load ptr, ptr %12, align 8, !tbaa !5
  %1143 = load i8, ptr %1142, align 1, !tbaa !17
  %1144 = icmp eq i8 %1143, 94
  %1145 = sext i1 %1144 to i32
  store i32 %1145, ptr %368, align 4, !tbaa !101
  store i32 0, ptr %369, align 8, !tbaa !102
  store i32 0, ptr %370, align 8, !tbaa !103
  store i32 0, ptr %371, align 4, !tbaa !104
  store ptr %1142, ptr %372, align 8, !tbaa !105
  store ptr %1142, ptr %373, align 8, !tbaa !106
  %1146 = load i64, ptr %11, align 8, !tbaa !9
  %1147 = getelementptr inbounds i8, ptr %1142, i64 %1146
  store ptr %1147, ptr %374, align 8, !tbaa !107
  store i32 0, ptr %375, align 8, !tbaa !108
  store i32 1, ptr %376, align 8, !tbaa !109
  store i32 0, ptr %377, align 4, !tbaa !110
  store i64 0, ptr %378, align 8, !tbaa !111
  store ptr %379, ptr %380, align 8, !tbaa !112
  store i64 0, ptr %381, align 8, !tbaa !113
  store ptr null, ptr %385, align 8, !tbaa !114
  store ptr null, ptr %387, align 8, !tbaa !115
  store i32 0, ptr %388, align 8, !tbaa !116
  store i32 0, ptr %390, align 4, !tbaa !117
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %382, i8 0, i64 24, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %384, i8 0, i64 20, i1 false)
  %1148 = load volatile i64, ptr %20, align 8, !tbaa !9
  %1149 = and i64 %1148, 1
  %1150 = icmp eq i64 %1149, 0
  br i1 %1150, label %1154, label %1151

1151:                                             ; preds = %1141
  %1152 = call ptr @Perl_PerlIO_stderr() #15
  %1153 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1152, ptr noundef nonnull @.str.14) #15
  br label %1154

1154:                                             ; preds = %1151, %1141
  store i32 0, ptr %391, align 8, !tbaa !118
  store ptr null, ptr %392, align 8, !tbaa !119
  %1155 = load ptr, ptr %70, align 8, !tbaa !20
  %1156 = icmp eq ptr %1155, null
  %1157 = icmp ne ptr %395, null
  %1158 = select i1 %1156, i1 true, i1 %1157
  br i1 %1158, label %1228, label %1159

1159:                                             ; preds = %1154
  %1160 = call ptr @Perl_newSV_type(i32 noundef 3) #15
  call void @Perl_save_pushptr(ptr noundef %1160, i32 noundef 11) #15
  %1161 = getelementptr inbounds %struct.sv, ptr %1160, i64 0, i32 2
  %1162 = load i32, ptr %1161, align 4, !tbaa !13
  %1163 = and i32 %1162, 15
  %1164 = zext i32 %1163 to i64
  %1165 = getelementptr inbounds [0 x i8], ptr @PL_valid_types_PVX, i64 0, i64 %1164
  %1166 = load i8, ptr %1165, align 1, !tbaa !11, !range !18, !noundef !19
  %1167 = icmp eq i8 %1166, 0
  br i1 %1167, label %1168, label %1170

1168:                                             ; preds = %1159
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.15, i32 noundef 6684) #15
  %1169 = load i32, ptr %1161, align 4, !tbaa !13
  br label %1170

1170:                                             ; preds = %1159, %1168
  %1171 = phi i32 [ %1162, %1159 ], [ %1169, %1168 ]
  %1172 = and i32 %1171, 49152
  %1173 = icmp eq i32 %1172, 32768
  br i1 %1173, label %1174, label %1180

1174:                                             ; preds = %1170
  %1175 = and i32 %1171, 255
  %1176 = add nsw i32 %1175, -9
  %1177 = icmp ult i32 %1176, 2
  br i1 %1177, label %1178, label %1180

1178:                                             ; preds = %1174
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.16, i32 noundef 6684) #15
  %1179 = load i32, ptr %1161, align 4, !tbaa !13
  br label %1180

1180:                                             ; preds = %1174, %1170, %1178
  %1181 = phi i32 [ %1171, %1174 ], [ %1171, %1170 ], [ %1179, %1178 ]
  %1182 = and i32 %1181, 255
  %1183 = icmp eq i32 %1182, 15
  br i1 %1183, label %1184, label %1192

1184:                                             ; preds = %1180
  %1185 = load ptr, ptr %1160, align 8, !tbaa !16
  %1186 = getelementptr inbounds %struct.xpvio, ptr %1185, i64 0, i32 17
  %1187 = load i8, ptr %1186, align 1, !tbaa !120
  %1188 = and i8 %1187, 64
  %1189 = icmp eq i8 %1188, 0
  br i1 %1189, label %1190, label %1192

1190:                                             ; preds = %1184
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.17, i32 noundef 6684) #15
  %1191 = load i32, ptr %1161, align 4, !tbaa !13
  br label %1192

1192:                                             ; preds = %1180, %1184, %1190
  %1193 = phi i32 [ %1181, %1180 ], [ %1181, %1184 ], [ %1191, %1190 ]
  %1194 = load ptr, ptr %70, align 8, !tbaa !20
  %1195 = getelementptr inbounds %struct.sv, ptr %1160, i64 0, i32 3
  store ptr %1194, ptr %1195, align 8, !tbaa !17
  %1196 = and i32 %1193, 15
  %1197 = zext i32 %1196 to i64
  %1198 = getelementptr inbounds [0 x i8], ptr @PL_valid_types_PVX, i64 0, i64 %1197
  %1199 = load i8, ptr %1198, align 1, !tbaa !11, !range !18, !noundef !19
  %1200 = icmp eq i8 %1199, 0
  br i1 %1200, label %1201, label %1203

1201:                                             ; preds = %1192
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.15, i32 noundef 6685) #15
  %1202 = load i32, ptr %1161, align 4, !tbaa !13
  br label %1203

1203:                                             ; preds = %1192, %1201
  %1204 = phi i32 [ %1193, %1192 ], [ %1202, %1201 ]
  %1205 = and i32 %1204, 49152
  %1206 = icmp eq i32 %1205, 32768
  br i1 %1206, label %1207, label %1213

1207:                                             ; preds = %1203
  %1208 = and i32 %1204, 255
  %1209 = add nsw i32 %1208, -9
  %1210 = icmp ult i32 %1209, 2
  br i1 %1210, label %1211, label %1213

1211:                                             ; preds = %1207
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.16, i32 noundef 6685) #15
  %1212 = load i32, ptr %1161, align 4, !tbaa !13
  br label %1213

1213:                                             ; preds = %1207, %1203, %1211
  %1214 = phi i32 [ %1204, %1207 ], [ %1204, %1203 ], [ %1212, %1211 ]
  %1215 = and i32 %1214, 255
  %1216 = icmp eq i32 %1215, 15
  %1217 = load ptr, ptr %1160, align 8, !tbaa !16
  br i1 %1216, label %1218, label %1225

1218:                                             ; preds = %1213
  %1219 = getelementptr inbounds %struct.xpvio, ptr %1217, i64 0, i32 17
  %1220 = load i8, ptr %1219, align 1, !tbaa !120
  %1221 = and i8 %1220, 64
  %1222 = icmp eq i8 %1221, 0
  br i1 %1222, label %1223, label %1225

1223:                                             ; preds = %1218
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.17, i32 noundef 6685) #15
  %1224 = load ptr, ptr %1160, align 8, !tbaa !16
  br label %1225

1225:                                             ; preds = %1213, %1218, %1223
  %1226 = phi ptr [ %1217, %1213 ], [ %1217, %1218 ], [ %1224, %1223 ]
  %1227 = getelementptr inbounds %struct.xpv, ptr %1226, i64 0, i32 3
  store i64 1, ptr %1227, align 8, !tbaa !17
  br label %1228

1228:                                             ; preds = %1225, %1154
  %1229 = phi ptr [ %395, %1154 ], [ %1160, %1225 ]
  %1230 = call fastcc ptr @S_reg(ptr noundef nonnull %18, i32 noundef 0, ptr noundef nonnull %14, i32 noundef 1)
  %1231 = icmp eq ptr %1230, null
  br i1 %1231, label %1232, label %1240

1232:                                             ; preds = %1228
  %1233 = load i32, ptr %14, align 4, !tbaa !73
  %1234 = and i32 %1233, 32
  %1235 = icmp eq i32 %1234, 0
  br i1 %1235, label %1238, label %1236

1236:                                             ; preds = %1232
  %1237 = load i32, ptr %71, align 8, !tbaa !24
  call fastcc void @S_pat_upgrade_to_utf8(ptr noundef nonnull %18, ptr noundef nonnull %12, ptr noundef nonnull %11, i32 noundef %1237)
  br label %393

1238:                                             ; preds = %1232
  %1239 = sext i32 %1233 to i64
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.18, i64 noundef %1239) #15
  br label %1240

1240:                                             ; preds = %1228, %1238
  %1241 = icmp eq ptr %1229, null
  br i1 %1241, label %1277, label %1242

1242:                                             ; preds = %1240
  %1243 = getelementptr inbounds %struct.sv, ptr %1229, i64 0, i32 2
  %1244 = load i32, ptr %1243, align 4, !tbaa !13
  %1245 = and i32 %1244, 15
  %1246 = zext i32 %1245 to i64
  %1247 = getelementptr inbounds [0 x i8], ptr @PL_valid_types_PVX, i64 0, i64 %1246
  %1248 = load i8, ptr %1247, align 1, !tbaa !11, !range !18, !noundef !19
  %1249 = icmp eq i8 %1248, 0
  br i1 %1249, label %1250, label %1252

1250:                                             ; preds = %1242
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.15, i32 noundef 6704) #15
  %1251 = load i32, ptr %1243, align 4, !tbaa !13
  br label %1252

1252:                                             ; preds = %1242, %1250
  %1253 = phi i32 [ %1244, %1242 ], [ %1251, %1250 ]
  %1254 = and i32 %1253, 49152
  %1255 = icmp eq i32 %1254, 32768
  br i1 %1255, label %1256, label %1262

1256:                                             ; preds = %1252
  %1257 = and i32 %1253, 255
  %1258 = add nsw i32 %1257, -9
  %1259 = icmp ult i32 %1258, 2
  br i1 %1259, label %1260, label %1262

1260:                                             ; preds = %1256
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.16, i32 noundef 6704) #15
  %1261 = load i32, ptr %1243, align 4, !tbaa !13
  br label %1262

1262:                                             ; preds = %1256, %1252, %1260
  %1263 = phi i32 [ %1253, %1256 ], [ %1253, %1252 ], [ %1261, %1260 ]
  %1264 = and i32 %1263, 255
  %1265 = icmp eq i32 %1264, 15
  %1266 = load ptr, ptr %1229, align 8, !tbaa !16
  br i1 %1265, label %1267, label %1274

1267:                                             ; preds = %1262
  %1268 = getelementptr inbounds %struct.xpvio, ptr %1266, i64 0, i32 17
  %1269 = load i8, ptr %1268, align 1, !tbaa !120
  %1270 = and i8 %1269, 64
  %1271 = icmp eq i8 %1270, 0
  br i1 %1271, label %1272, label %1274

1272:                                             ; preds = %1267
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.17, i32 noundef 6704) #15
  %1273 = load ptr, ptr %1229, align 8, !tbaa !16
  br label %1274

1274:                                             ; preds = %1262, %1267, %1272
  %1275 = phi ptr [ %1266, %1262 ], [ %1266, %1267 ], [ %1273, %1272 ]
  %1276 = getelementptr inbounds %struct.xpv, ptr %1275, i64 0, i32 3
  store i64 0, ptr %1276, align 8, !tbaa !17
  br label %1277

1277:                                             ; preds = %1240, %1274
  %1278 = load volatile i64, ptr %20, align 8, !tbaa !9
  %1279 = and i64 %1278, 1
  %1280 = icmp eq i64 %1279, 0
  br i1 %1280, label %1285, label %1281

1281:                                             ; preds = %1277
  %1282 = call ptr @Perl_PerlIO_stderr() #15
  %1283 = load i64, ptr %378, align 8, !tbaa !111
  %1284 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1282, ptr noundef nonnull @.str.19, i64 noundef %1283) #15
  store i32 0, ptr %391, align 8, !tbaa !118
  store ptr null, ptr %392, align 8, !tbaa !119
  br label %1285

1285:                                             ; preds = %1281, %1277
  %1286 = load i32, ptr %321, align 8, !tbaa !50
  %1287 = icmp ne i32 %1286, 0
  %1288 = load i32, ptr %322, align 8
  %1289 = icmp ne i32 %1288, 0
  %1290 = select i1 %1287, i1 true, i1 %1289
  %1291 = and i32 %566, 896
  %1292 = icmp eq i32 %1291, 0
  %1293 = select i1 %1290, i1 %1292, i1 false
  %1294 = select i1 %1293, i32 %361, i32 %566
  %1295 = load i64, ptr %378, align 8, !tbaa !111
  %1296 = icmp sgt i64 %1295, 65535
  br i1 %1296, label %1297, label %1303

1297:                                             ; preds = %1285
  %1298 = load i32, ptr %369, align 8, !tbaa !102
  %1299 = icmp eq i32 %1298, 0
  br i1 %1299, label %1303, label %1300

1300:                                             ; preds = %1297
  %1301 = sext i32 %1298 to i64
  %1302 = add nsw i64 %1295, %1301
  store i64 %1302, ptr %378, align 8, !tbaa !111
  br label %1304

1303:                                             ; preds = %1297, %1285
  store i32 0, ptr %369, align 8, !tbaa !102
  br label %1304

1304:                                             ; preds = %1303, %1300
  %1305 = load i64, ptr %381, align 8, !tbaa !113
  %1306 = icmp sgt i64 %1305, 15
  br i1 %1306, label %1307, label %1308

1307:                                             ; preds = %1304
  store i64 15, ptr %381, align 8, !tbaa !113
  br label %1308

1308:                                             ; preds = %1307, %1304
  %1309 = call ptr @Perl_newSV_type(i32 noundef 8) #15
  %1310 = getelementptr inbounds %struct.p5rx, ptr %1309, i64 0, i32 2
  %1311 = load i32, ptr %1310, align 4, !tbaa !62
  %1312 = and i32 %1311, 255
  %1313 = icmp eq i32 %1312, 8
  %1314 = and i32 %1311, 16826623
  %1315 = icmp eq i32 %1314, 16777226
  %1316 = or i1 %1313, %1315
  br i1 %1316, label %1318, label %1317

1317:                                             ; preds = %1308
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %1318

1318:                                             ; preds = %1308, %1317
  %1319 = getelementptr inbounds %struct.p5rx, ptr %1309, i64 0, i32 3
  %1320 = load ptr, ptr %1319, align 8, !tbaa !17
  %1321 = load i64, ptr %378, align 8, !tbaa !111
  %1322 = shl i64 %1321, 2
  %1323 = and i64 %1322, 17179869180
  %1324 = add nuw nsw i64 %1323, 48
  %1325 = call ptr @Perl_safesysmalloc(i64 noundef %1324) #15
  %1326 = icmp eq ptr %1320, null
  %1327 = icmp eq ptr %1325, null
  %1328 = select i1 %1326, i1 true, i1 %1327
  br i1 %1328, label %1329, label %1349

1329:                                             ; preds = %1318
  %1330 = load ptr, ptr %374, align 8, !tbaa !107
  %1331 = load ptr, ptr %362, align 8, !tbaa !65
  %1332 = ptrtoint ptr %1330 to i64
  %1333 = ptrtoint ptr %1331 to i64
  %1334 = sub i64 %1332, %1333
  %1335 = load ptr, ptr %380, align 8, !tbaa !112
  %1336 = icmp eq ptr %1335, %379
  br i1 %1336, label %1341, label %1337

1337:                                             ; preds = %1329
  %1338 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 3
  %1339 = load ptr, ptr %1338, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1339, i32 noundef 11) #15
  %1340 = load ptr, ptr %362, align 8, !tbaa !65
  br label %1341

1341:                                             ; preds = %1337, %1329
  %1342 = phi ptr [ %1340, %1337 ], [ %1331, %1329 ]
  %1343 = icmp sgt i64 %1334, 127
  %1344 = select i1 %1343, i64 117, i64 %1334
  %1345 = select i1 %1343, ptr @.str.20, ptr @.str.8
  %1346 = load i32, ptr %321, align 8, !tbaa !50
  %1347 = icmp ne i32 %1346, 0
  %1348 = zext i1 %1347 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.22, i32 noundef %1348, i64 noundef %1344, ptr noundef %1342, ptr noundef nonnull %1345) #15
  br label %1349

1349:                                             ; preds = %1318, %1341
  %1350 = load i64, ptr %378, align 8, !tbaa !111
  %1351 = shl i64 %1350, 2
  %1352 = and i64 %1351, 17179869180
  %1353 = add nuw nsw i64 %1352, 48
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %1325, i8 0, i64 %1353, i1 false)
  %1354 = getelementptr inbounds %struct.regexp, ptr %1320, i64 0, i32 14
  store ptr %1325, ptr %1354, align 8, !tbaa !90
  %1355 = getelementptr inbounds %struct.regexp, ptr %1320, i64 0, i32 4
  store ptr %3, ptr %1355, align 8, !tbaa !87
  %1356 = getelementptr inbounds %struct.regexp, ptr %1320, i64 0, i32 7
  store i32 %1294, ptr %1356, align 8, !tbaa !123
  %1357 = getelementptr inbounds %struct.regexp, ptr %1320, i64 0, i32 24
  %1358 = trunc i32 %6 to i16
  %1359 = load i16, ptr %1357, align 8
  %1360 = shl i16 %1358, 4
  %1361 = and i16 %1360, 8176
  %1362 = and i16 %1359, -8177
  %1363 = or i16 %1362, %1361
  store i16 %1363, ptr %1357, align 8
  %1364 = and i32 %7, 1073741824
  %1365 = icmp eq i32 %1364, 0
  br i1 %1365, label %1366, label %1369

1366:                                             ; preds = %1349
  %1367 = load i32, ptr %71, align 8, !tbaa !24
  %1368 = icmp sgt i32 %1367, 0
  br i1 %1368, label %1374, label %1388

1369:                                             ; preds = %1349
  %1370 = load ptr, ptr %70, align 8, !tbaa !20
  %1371 = getelementptr inbounds %struct.regexp_internal, ptr %1325, i64 0, i32 4
  store ptr %1370, ptr %1371, align 8, !tbaa !93
  %1372 = load i32, ptr %71, align 8, !tbaa !24
  %1373 = getelementptr inbounds %struct.regexp_internal, ptr %1325, i64 0, i32 5
  store i32 %1372, ptr %1373, align 8, !tbaa !91
  br label %1391

1374:                                             ; preds = %1366, %1383
  %1375 = phi i32 [ %1384, %1383 ], [ %1367, %1366 ]
  %1376 = phi i64 [ %1385, %1383 ], [ 0, %1366 ]
  %1377 = load ptr, ptr %70, align 8, !tbaa !20
  %1378 = getelementptr inbounds %struct.reg_code_block, ptr %1377, i64 %1376, i32 3
  %1379 = load ptr, ptr %1378, align 8, !tbaa !95
  %1380 = icmp eq ptr %1379, null
  br i1 %1380, label %1383, label %1381

1381:                                             ; preds = %1374
  call void @Perl_save_pushptr(ptr noundef nonnull %1379, i32 noundef 11) #15
  %1382 = load i32, ptr %71, align 8, !tbaa !24
  br label %1383

1383:                                             ; preds = %1374, %1381
  %1384 = phi i32 [ %1375, %1374 ], [ %1382, %1381 ]
  %1385 = add nuw nsw i64 %1376, 1
  %1386 = sext i32 %1384 to i64
  %1387 = icmp slt i64 %1385, %1386
  br i1 %1387, label %1374, label %1388, !llvm.loop !124

1388:                                             ; preds = %1383, %1366
  %1389 = load ptr, ptr %70, align 8, !tbaa !20
  call void @Perl_save_pushptr(ptr noundef %1389, i32 noundef 10) #15
  %1390 = load i32, ptr %1356, align 8, !tbaa !123
  br label %1391

1391:                                             ; preds = %1388, %1369
  %1392 = phi i32 [ %1390, %1388 ], [ %1294, %1369 ]
  %1393 = and i32 %1392, 64
  %1394 = icmp eq i32 %1393, 0
  %1395 = and i32 %1392, 896
  %1396 = icmp eq i32 %1395, 0
  %1397 = and i32 %1392, 47
  %1398 = icmp ne i32 %1397, 47
  %1399 = or i1 %1398, %1396
  %1400 = load i32, ptr %365, align 8, !tbaa !98
  %1401 = and i32 %1400, 512
  %1402 = icmp eq i32 %1401, 0
  %1403 = load i64, ptr %11, align 8, !tbaa !9
  %1404 = lshr exact i32 %1393, 6
  %1405 = zext i32 %1404 to i64
  %1406 = lshr exact i32 %1401, 9
  %1407 = zext i32 %1406 to i64
  %1408 = zext i1 %1399 to i64
  %1409 = select i1 %1396, i64 0, i64 2
  %1410 = add i64 %1403, 11
  %1411 = add i64 %1410, %1405
  %1412 = add i64 %1411, %1409
  %1413 = add i64 %1412, %1407
  %1414 = add i64 %1413, %1408
  %1415 = call ptr @Perl_safesysmalloc(i64 noundef %1414) #15
  %1416 = getelementptr inbounds %struct.regexp, ptr %1320, i64 0, i32 3
  store ptr %1415, ptr %1416, align 8, !tbaa !17
  %1417 = load i32, ptr %321, align 8, !tbaa !50
  %1418 = icmp eq i32 %1417, 0
  br i1 %1418, label %1422, label %1419

1419:                                             ; preds = %1391
  %1420 = load i32, ptr %1310, align 4, !tbaa !62
  %1421 = or i32 %1420, 536870912
  store i32 %1421, ptr %1310, align 4, !tbaa !62
  br label %1422

1422:                                             ; preds = %1419, %1391
  %1423 = getelementptr inbounds i8, ptr %1415, i64 1
  store i8 40, ptr %1415, align 1, !tbaa !17
  %1424 = getelementptr inbounds i8, ptr %1415, i64 2
  store i8 63, ptr %1423, align 1, !tbaa !17
  br i1 %1399, label %1425, label %1427

1425:                                             ; preds = %1422
  %1426 = getelementptr inbounds i8, ptr %1415, i64 3
  store i8 94, ptr %1424, align 1, !tbaa !17
  br i1 %1396, label %1445, label %1427

1427:                                             ; preds = %1422, %1425
  %1428 = phi ptr [ %1426, %1425 ], [ %1424, %1422 ]
  %1429 = load i32, ptr %1356, align 8, !tbaa !123
  %1430 = lshr i32 %1429, 7
  %1431 = and i32 %1430, 7
  %1432 = icmp ult i32 %1431, 5
  br i1 %1432, label %1434, label %1433

1433:                                             ; preds = %1427
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.220, i32 noundef 376) #15
  br label %1441

1434:                                             ; preds = %1427
  %1435 = zext i32 %1431 to i64
  %1436 = getelementptr inbounds [5 x i64], ptr @switch.table.my_re_op_compile, i64 0, i64 %1435
  %1437 = load i64, ptr %1436, align 8
  %1438 = zext i32 %1431 to i64
  %1439 = shl i64 %1438, 2
  %1440 = call ptr @llvm.load.relative.i64(ptr @reltable.my_re_op_compile, i64 %1439)
  br label %1441

1441:                                             ; preds = %1434, %1433
  %1442 = phi i64 [ 1, %1433 ], [ %1437, %1434 ]
  %1443 = phi ptr [ @.str.221, %1433 ], [ %1440, %1434 ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %1428, ptr noundef nonnull align 1 dereferenceable(1) %1443, i64 %1442, i1 false)
  %1444 = getelementptr inbounds i8, ptr %1428, i64 %1442
  br label %1445

1445:                                             ; preds = %1441, %1425
  %1446 = phi ptr [ %1444, %1441 ], [ %1426, %1425 ]
  br i1 %1394, label %1449, label %1447

1447:                                             ; preds = %1445
  %1448 = getelementptr inbounds i8, ptr %1446, i64 1
  store i8 112, ptr %1446, align 1, !tbaa !17
  br label %1449

1449:                                             ; preds = %1447, %1445
  %1450 = phi ptr [ %1448, %1447 ], [ %1446, %1445 ]
  %1451 = and i32 %1392, 1
  %1452 = icmp eq i32 %1451, 0
  br i1 %1452, label %1455, label %1453

1453:                                             ; preds = %1449
  %1454 = getelementptr inbounds i8, ptr %1450, i64 1
  store i8 109, ptr %1450, align 1, !tbaa !17
  br label %1455

1455:                                             ; preds = %1453, %1449
  %1456 = phi ptr [ %1454, %1453 ], [ %1450, %1449 ]
  %1457 = and i32 %1392, 2
  %1458 = icmp eq i32 %1457, 0
  br i1 %1458, label %1461, label %1459

1459:                                             ; preds = %1455
  %1460 = getelementptr inbounds i8, ptr %1456, i64 1
  store i8 115, ptr %1456, align 1, !tbaa !17
  br label %1461

1461:                                             ; preds = %1459, %1455
  %1462 = phi ptr [ %1460, %1459 ], [ %1456, %1455 ]
  %1463 = and i32 %1392, 4
  %1464 = icmp eq i32 %1463, 0
  br i1 %1464, label %1467, label %1465

1465:                                             ; preds = %1461
  %1466 = getelementptr inbounds i8, ptr %1462, i64 1
  store i8 105, ptr %1462, align 1, !tbaa !17
  br label %1467

1467:                                             ; preds = %1465, %1461
  %1468 = phi ptr [ %1466, %1465 ], [ %1462, %1461 ]
  %1469 = and i32 %1392, 8
  %1470 = icmp eq i32 %1469, 0
  br i1 %1470, label %1473, label %1471

1471:                                             ; preds = %1467
  %1472 = getelementptr inbounds i8, ptr %1468, i64 1
  store i8 120, ptr %1468, align 1, !tbaa !17
  br label %1473

1473:                                             ; preds = %1467, %1471
  %1474 = phi ptr [ %1472, %1471 ], [ %1468, %1467 ]
  %1475 = and i32 %1392, 32
  %1476 = icmp eq i32 %1475, 0
  br i1 %1476, label %1479, label %1477

1477:                                             ; preds = %1473
  %1478 = getelementptr inbounds i8, ptr %1474, i64 1
  store i8 110, ptr %1474, align 1, !tbaa !17
  br label %1479

1479:                                             ; preds = %1477, %1473
  %1480 = phi ptr [ %1478, %1477 ], [ %1474, %1473 ]
  %1481 = getelementptr inbounds i8, ptr %1480, i64 1
  store i8 58, ptr %1480, align 1, !tbaa !17
  %1482 = load ptr, ptr %362, align 8, !tbaa !65
  %1483 = load i64, ptr %11, align 8, !tbaa !9
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1481, ptr align 1 %1482, i64 %1483, i1 false)
  %1484 = load i32, ptr %1310, align 4, !tbaa !62
  %1485 = and i32 %1484, 255
  %1486 = icmp eq i32 %1485, 8
  %1487 = and i32 %1484, 16826623
  %1488 = icmp eq i32 %1487, 16777226
  %1489 = or i1 %1486, %1488
  br i1 %1489, label %1491, label %1490

1490:                                             ; preds = %1479
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %1491

1491:                                             ; preds = %1479, %1490
  %1492 = load ptr, ptr %1319, align 8, !tbaa !17
  %1493 = getelementptr inbounds %struct.regexp, ptr %1492, i64 0, i32 3
  %1494 = load ptr, ptr %1493, align 8, !tbaa !17
  %1495 = ptrtoint ptr %1494 to i64
  %1496 = ptrtoint ptr %1481 to i64
  %1497 = sub i64 %1495, %1496
  %1498 = icmp slt i64 %1497, 16
  br i1 %1498, label %1500, label %1499

1499:                                             ; preds = %1491
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.24, i32 noundef 6828) #15
  br label %1500

1500:                                             ; preds = %1491, %1499
  %1501 = load i32, ptr %1310, align 4, !tbaa !62
  %1502 = and i32 %1501, 255
  %1503 = icmp eq i32 %1502, 8
  %1504 = and i32 %1501, 16826623
  %1505 = icmp eq i32 %1504, 16777226
  %1506 = or i1 %1503, %1505
  br i1 %1506, label %1508, label %1507

1507:                                             ; preds = %1500
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %1508

1508:                                             ; preds = %1500, %1507
  %1509 = load ptr, ptr %1319, align 8, !tbaa !17
  %1510 = getelementptr inbounds %struct.regexp, ptr %1509, i64 0, i32 3
  %1511 = load ptr, ptr %1510, align 8, !tbaa !17
  %1512 = ptrtoint ptr %1511 to i64
  %1513 = sub i64 %1496, %1512
  %1514 = trunc i64 %1513 to i16
  %1515 = load i16, ptr %1357, align 8
  %1516 = and i16 %1514, 15
  %1517 = and i16 %1515, -16
  %1518 = or i16 %1516, %1517
  store i16 %1518, ptr %1357, align 8
  %1519 = load i64, ptr %11, align 8, !tbaa !9
  %1520 = getelementptr inbounds i8, ptr %1481, i64 %1519
  br i1 %1402, label %1523, label %1521

1521:                                             ; preds = %1508
  %1522 = getelementptr inbounds i8, ptr %1520, i64 1
  store i8 10, ptr %1520, align 1, !tbaa !17
  br label %1523

1523:                                             ; preds = %1521, %1508
  %1524 = phi ptr [ %1522, %1521 ], [ %1520, %1508 ]
  %1525 = getelementptr inbounds i8, ptr %1524, i64 1
  store i8 41, ptr %1524, align 1, !tbaa !17
  store i8 0, ptr %1525, align 1, !tbaa !17
  %1526 = load i32, ptr %1310, align 4, !tbaa !62
  %1527 = and i32 %1526, 15
  %1528 = zext i32 %1527 to i64
  %1529 = getelementptr inbounds [0 x i8], ptr @PL_valid_types_PVX, i64 0, i64 %1528
  %1530 = load i8, ptr %1529, align 1, !tbaa !11, !range !18, !noundef !19
  %1531 = icmp ne i8 %1530, 0
  %1532 = and i32 %1526, 255
  %1533 = icmp eq i32 %1532, 8
  %1534 = or i1 %1531, %1533
  br i1 %1534, label %1537, label %1535

1535:                                             ; preds = %1523
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.25, i32 noundef 6835) #15
  %1536 = load i32, ptr %1310, align 4, !tbaa !62
  br label %1537

1537:                                             ; preds = %1523, %1535
  %1538 = phi i32 [ %1526, %1523 ], [ %1536, %1535 ]
  %1539 = and i32 %1538, 49152
  %1540 = icmp eq i32 %1539, 32768
  br i1 %1540, label %1541, label %1547

1541:                                             ; preds = %1537
  %1542 = and i32 %1538, 255
  %1543 = add nsw i32 %1542, -9
  %1544 = icmp ult i32 %1543, 2
  br i1 %1544, label %1545, label %1547

1545:                                             ; preds = %1541
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.26, i32 noundef 6835) #15
  %1546 = load i32, ptr %1310, align 4, !tbaa !62
  br label %1547

1547:                                             ; preds = %1541, %1537, %1545
  %1548 = phi i32 [ %1538, %1541 ], [ %1538, %1537 ], [ %1546, %1545 ]
  %1549 = and i32 %1548, 255
  %1550 = icmp eq i32 %1549, 15
  br i1 %1550, label %1551, label %1560

1551:                                             ; preds = %1547
  %1552 = load ptr, ptr %1309, align 8, !tbaa !64
  %1553 = getelementptr inbounds %struct.xpvio, ptr %1552, i64 0, i32 17
  %1554 = load i8, ptr %1553, align 1, !tbaa !120
  %1555 = and i8 %1554, 64
  %1556 = icmp eq i8 %1555, 0
  br i1 %1556, label %1557, label %1560

1557:                                             ; preds = %1551
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.27, i32 noundef 6835) #15
  %1558 = load i32, ptr %1310, align 4, !tbaa !62
  %1559 = and i32 %1558, 255
  br label %1560

1560:                                             ; preds = %1547, %1551, %1557
  %1561 = phi i32 [ %1549, %1547 ], [ 15, %1551 ], [ %1559, %1557 ]
  %1562 = phi i32 [ %1548, %1547 ], [ %1548, %1551 ], [ %1558, %1557 ]
  %1563 = icmp eq i32 %1561, 8
  %1564 = and i32 %1562, 16826623
  %1565 = icmp eq i32 %1564, 16777226
  %1566 = or i1 %1563, %1565
  br i1 %1566, label %1568, label %1567

1567:                                             ; preds = %1560
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %1568

1568:                                             ; preds = %1560, %1567
  %1569 = load ptr, ptr %1319, align 8, !tbaa !17
  %1570 = getelementptr inbounds %struct.regexp, ptr %1569, i64 0, i32 3
  %1571 = load ptr, ptr %1570, align 8, !tbaa !17
  %1572 = ptrtoint ptr %1525 to i64
  %1573 = ptrtoint ptr %1571 to i64
  %1574 = sub i64 %1572, %1573
  %1575 = load ptr, ptr %1309, align 8, !tbaa !64
  %1576 = getelementptr inbounds %struct.xpv, ptr %1575, i64 0, i32 2
  store i64 %1574, ptr %1576, align 8, !tbaa !38
  %1577 = getelementptr inbounds %struct.regexp, ptr %1320, i64 0, i32 13
  store i32 0, ptr %1577, align 4, !tbaa !125
  %1578 = load i32, ptr %376, align 8, !tbaa !109
  %1579 = add nsw i32 %1578, -1
  %1580 = getelementptr inbounds %struct.regexp, ptr %1320, i64 0, i32 12
  store i32 %1579, ptr %1580, align 8, !tbaa !126
  %1581 = load i32, ptr %365, align 8, !tbaa !98
  %1582 = and i32 %1581, 32
  %1583 = icmp eq i32 %1582, 0
  br i1 %1583, label %1591, label %1584

1584:                                             ; preds = %1568
  %1585 = sext i32 %1578 to i64
  %1586 = call ptr @Perl_safesyscalloc(i64 noundef %1585, i64 noundef 8) #15
  store ptr %1586, ptr %382, align 8, !tbaa !127
  call void @Perl_save_pushptr(ptr noundef %1586, i32 noundef 10) #15
  %1587 = load i32, ptr %376, align 8, !tbaa !109
  %1588 = sext i32 %1587 to i64
  %1589 = call ptr @Perl_safesyscalloc(i64 noundef %1588, i64 noundef 8) #15
  store ptr %1589, ptr %383, align 8, !tbaa !128
  call void @Perl_save_pushptr(ptr noundef %1589, i32 noundef 10) #15
  %1590 = load i32, ptr %365, align 8, !tbaa !98
  br label %1591

1591:                                             ; preds = %1584, %1568
  %1592 = phi i32 [ %1590, %1584 ], [ %1581, %1568 ]
  %1593 = and i32 %1592, 2080
  %1594 = icmp eq i32 %1593, 0
  br i1 %1594, label %1605, label %1595

1595:                                             ; preds = %1591
  %1596 = load i32, ptr %376, align 8, !tbaa !109
  %1597 = ashr i32 %1596, 3
  %1598 = and i32 %1596, 7
  %1599 = icmp ne i32 %1598, 0
  %1600 = zext i1 %1599 to i32
  %1601 = add nsw i32 %1597, %1600
  store i32 %1601, ptr %388, align 8, !tbaa !116
  %1602 = mul i32 %1601, %1596
  %1603 = zext i32 %1602 to i64
  %1604 = call ptr @Perl_safesysmalloc(i64 noundef %1603) #15
  store ptr %1604, ptr %387, align 8, !tbaa !115
  call void @Perl_save_pushptr(ptr noundef %1604, i32 noundef 10) #15
  br label %1605

1605:                                             ; preds = %1595, %1591
  %1606 = load i64, ptr %378, align 8, !tbaa !111
  %1607 = shl nsw i64 %1606, 1
  %1608 = or i64 %1607, 1
  %1609 = call ptr @Perl_safesyscalloc(i64 noundef %1608, i64 noundef 4) #15
  %1610 = getelementptr inbounds %struct.regexp_internal, ptr %1325, i64 0, i32 1
  store ptr %1609, ptr %1610, align 8, !tbaa !17
  %1611 = load volatile i64, ptr %20, align 8, !tbaa !9
  %1612 = and i64 %1611, 131072
  %1613 = icmp eq i64 %1612, 0
  br i1 %1613, label %1624, label %1614

1614:                                             ; preds = %1605
  %1615 = call ptr @Perl_PerlIO_stderr() #15
  %1616 = load ptr, ptr %1610, align 8, !tbaa !17
  %1617 = icmp eq ptr %1616, null
  %1618 = select i1 %1617, ptr @.str.30, ptr @.str.29
  %1619 = load i64, ptr %378, align 8, !tbaa !111
  %1620 = shl i64 %1619, 3
  %1621 = or i64 %1620, 4
  %1622 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1615, ptr noundef nonnull @.str.28, ptr noundef nonnull %1618, i64 noundef %1621) #15
  %1623 = load ptr, ptr %1610, align 8, !tbaa !17
  br label %1624

1624:                                             ; preds = %1614, %1605
  %1625 = phi ptr [ %1623, %1614 ], [ %1609, %1605 ]
  %1626 = load i64, ptr %378, align 8, !tbaa !111
  %1627 = trunc i64 %1626 to i32
  store i32 %1627, ptr %1625, align 4, !tbaa !73
  %1628 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 3
  store ptr %1309, ptr %1628, align 8, !tbaa !122
  %1629 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 4
  store ptr %1320, ptr %1629, align 8, !tbaa !129
  %1630 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 5
  store ptr %1325, ptr %1630, align 8, !tbaa !130
  store i32 %1294, ptr %18, align 8, !tbaa !66
  store i32 %7, ptr %363, align 4, !tbaa !67
  %1631 = load ptr, ptr %12, align 8, !tbaa !5
  store ptr %1631, ptr %372, align 8, !tbaa !105
  %1632 = load i64, ptr %11, align 8, !tbaa !9
  %1633 = getelementptr inbounds i8, ptr %1631, i64 %1632
  store ptr %1633, ptr %374, align 8, !tbaa !107
  store i32 0, ptr %375, align 8, !tbaa !108
  store i32 1, ptr %376, align 8, !tbaa !109
  %1634 = getelementptr inbounds %struct.regexp_internal, ptr %1325, i64 0, i32 6
  %1635 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 10
  store ptr %1634, ptr %1635, align 8, !tbaa !131
  %1636 = getelementptr inbounds %struct.regnode, ptr %1634, i64 %1626
  %1637 = getelementptr inbounds %struct.regnode, ptr %1636, i64 1
  %1638 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 11
  store ptr %1637, ptr %1638, align 8, !tbaa !132
  store i32 0, ptr %390, align 4, !tbaa !117
  %1639 = getelementptr inbounds %struct.regexp_internal, ptr %1325, i64 1
  store ptr %1639, ptr %380, align 8, !tbaa !112
  store i8 -100, ptr %1634, align 1, !tbaa !17
  %1640 = call fastcc ptr @S_reg(ptr noundef nonnull %18, i32 noundef 0, ptr noundef nonnull %14, i32 noundef 1)
  %1641 = icmp eq ptr %1640, null
  br i1 %1641, label %1642, label %1652

1642:                                             ; preds = %1624
  %1643 = getelementptr inbounds %struct.sv, ptr %1309, i64 0, i32 1
  %1644 = load i32, ptr %1643, align 8, !tbaa !37
  %1645 = icmp ugt i32 %1644, 1
  br i1 %1645, label %1646, label %1648

1646:                                             ; preds = %1642
  %1647 = add i32 %1644, -1
  store i32 %1647, ptr %1643, align 8, !tbaa !37
  br label %1649

1648:                                             ; preds = %1642
  call void @Perl_sv_free2(ptr noundef nonnull %1309, i32 noundef %1644) #15
  br label %1649

1649:                                             ; preds = %1646, %1648
  %1650 = load i32, ptr %14, align 4, !tbaa !73
  %1651 = sext i32 %1650 to i64
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.31, i64 noundef %1651) #15
  br label %1652

1652:                                             ; preds = %1649, %1624
  %1653 = call ptr @Perl_safesysmalloc(i64 noundef 128) #15
  %1654 = getelementptr inbounds %struct.regexp, ptr %1320, i64 0, i32 11
  store ptr %1653, ptr %1654, align 8, !tbaa !133
  %1655 = load i32, ptr %389, align 8, !tbaa !134
  %1656 = icmp eq i32 %1655, 0
  br i1 %1656, label %1660, label %1657

1657:                                             ; preds = %1652
  %1658 = sext i32 %1655 to i64
  %1659 = call ptr @Perl_safesyscalloc(i64 noundef %1658, i64 noundef 8) #15
  store ptr %1659, ptr %386, align 8, !tbaa !135
  call void @Perl_save_pushptr(ptr noundef %1659, i32 noundef 10) #15
  br label %1660

1660:                                             ; preds = %1657, %1652
  %1661 = getelementptr inbounds %struct.regexp, ptr %1320, i64 0, i32 8
  %1662 = getelementptr inbounds %struct.RExC_state_t, ptr %18, i64 0, i32 50
  %1663 = getelementptr inbounds %struct.regexp_internal, ptr %1325, i64 0, i32 2
  %1664 = getelementptr inbounds %struct.regnode_ssc, ptr %26, i64 0, i32 1
  %1665 = getelementptr inbounds %struct.regnode_ssc, ptr %26, i64 0, i32 2
  %1666 = getelementptr inbounds %struct.regnode_1, ptr %26, i64 0, i32 3
  %1667 = getelementptr inbounds %struct.regnode_charclass_class, ptr %26, i64 0, i32 5
  %1668 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 19
  %1669 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 18
  %1670 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 16
  %1671 = getelementptr inbounds %struct.regexp_internal, ptr %1325, i64 0, i32 3
  %1672 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 7
  %1673 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 11
  %1674 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 2
  %1675 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 6
  %1676 = getelementptr inbounds %struct.regnode_ssc, ptr %22, i64 0, i32 1
  %1677 = getelementptr inbounds %struct.regnode_ssc, ptr %22, i64 0, i32 2
  %1678 = getelementptr inbounds %struct.regnode_1, ptr %22, i64 0, i32 3
  %1679 = getelementptr inbounds %struct.regnode_charclass_class, ptr %22, i64 0, i32 5
  %1680 = ptrtoint ptr %1639 to i64
  br label %1681

1681:                                             ; preds = %2853, %1660
  %1682 = phi i1 [ false, %1660 ], [ true, %2853 ]
  store i64 0, ptr %15, align 8, !tbaa !9
  store i64 0, ptr %1661, align 8, !tbaa !136
  store i32 0, ptr %1662, align 8, !tbaa !137
  %1683 = load ptr, ptr %1654, align 8, !tbaa !133
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(128) %1683, i8 0, i64 128, i1 false)
  %1684 = load ptr, ptr %387, align 8, !tbaa !115
  %1685 = icmp eq ptr %1684, null
  br i1 %1685, label %1691, label %1686

1686:                                             ; preds = %1681
  %1687 = load i32, ptr %388, align 8, !tbaa !116
  %1688 = load i32, ptr %376, align 8, !tbaa !109
  %1689 = mul i32 %1688, %1687
  %1690 = zext i32 %1689 to i64
  call void @llvm.memset.p0.i64(ptr nonnull align 1 %1684, i8 0, i64 %1690, i1 false)
  br label %1691

1691:                                             ; preds = %1686, %1681
  br i1 %1682, label %1693, label %1692

1692:                                             ; preds = %1691
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %17, i8 0, i64 152, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(392) %19, ptr noundef nonnull align 8 dereferenceable(392) %18, i64 392, i1 false), !tbaa.struct !138
  br label %1706

1693:                                             ; preds = %1691
  %1694 = load i32, ptr %365, align 8, !tbaa !98
  %1695 = load volatile i64, ptr %20, align 8, !tbaa !9
  %1696 = and i64 %1695, 2
  %1697 = icmp eq i64 %1696, 0
  br i1 %1697, label %1701, label %1698

1698:                                             ; preds = %1693
  %1699 = call ptr @Perl_PerlIO_stderr() #15
  %1700 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1699, ptr noundef nonnull @.str.32) #15
  br label %1701

1701:                                             ; preds = %1698, %1693
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(392) %18, ptr noundef nonnull align 8 dereferenceable(392) %19, i64 392, i1 false), !tbaa.struct !138
  %1702 = and i32 %1694, 64
  %1703 = load i32, ptr %365, align 8
  %1704 = and i32 %1703, -65
  %1705 = or i32 %1704, %1702
  store i32 %1705, ptr %365, align 8, !tbaa !98
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %17, i8 0, i64 152, i1 false)
  br label %1706

1706:                                             ; preds = %1701, %1692
  %1707 = load i32, ptr %18, align 8, !tbaa !66
  store i32 %1707, ptr %1356, align 8, !tbaa !123
  %1708 = load i32, ptr %321, align 8, !tbaa !50
  %1709 = icmp eq i32 %1708, 0
  br i1 %1709, label %1713, label %1710

1710:                                             ; preds = %1706
  %1711 = load i32, ptr %1310, align 4, !tbaa !62
  %1712 = or i32 %1711, 536870912
  store i32 %1712, ptr %1310, align 4, !tbaa !62
  br label %1713

1713:                                             ; preds = %1706, %1710
  store ptr null, ptr %1663, align 8, !tbaa !140
  %1714 = load i32, ptr %375, align 8, !tbaa !108
  %1715 = icmp sgt i32 %1714, 9
  br i1 %1715, label %1716, label %1719

1716:                                             ; preds = %1713
  %1717 = load i32, ptr %1577, align 4, !tbaa !125
  %1718 = or i32 %1717, 4
  store i32 %1718, ptr %1577, align 4, !tbaa !125
  br label %1719

1719:                                             ; preds = %1716, %1713
  store ptr %1639, ptr %13, align 8, !tbaa !5
  %1720 = load i32, ptr %365, align 8, !tbaa !98
  %1721 = and i32 %1720, 64
  %1722 = icmp eq i32 %1721, 0
  br i1 %1722, label %1723, label %2854

1723:                                             ; preds = %1719
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %21) #15
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %22) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %23) #15
  store i64 0, ptr %23, align 8, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %24) #15
  store ptr %1639, ptr %24, align 8, !tbaa !5
  br label %1724

1724:                                             ; preds = %1770, %1723
  %1725 = phi ptr [ %1776, %1770 ], [ %1639, %1723 ]
  %1726 = phi i32 [ %1774, %1770 ], [ 0, %1723 ]
  %1727 = phi i32 [ %1773, %1770 ], [ 0, %1723 ]
  %1728 = phi i32 [ %1775, %1770 ], [ 0, %1723 ]
  %1729 = phi i32 [ %1772, %1770 ], [ 0, %1723 ]
  %1730 = call ptr @Perl_regnext(ptr noundef nonnull %1725) #15
  %1731 = getelementptr inbounds %struct.regnode, ptr %1725, i64 0, i32 1
  %1732 = load i8, ptr %1731, align 1, !tbaa !141
  switch i8 %1732, label %1740 [
    i8 49, label %1761
    i8 30, label %1733
    i8 63, label %1737
    i8 43, label %1770
    i8 69, label %1760
  ]

1733:                                             ; preds = %1724
  %1734 = getelementptr inbounds %struct.regnode, ptr %1730, i64 0, i32 1
  %1735 = load i8, ptr %1734, align 1, !tbaa !141
  %1736 = icmp eq i8 %1735, 30
  br i1 %1736, label %1740, label %1761

1737:                                             ; preds = %1724
  %1738 = load i8, ptr %1725, align 2, !tbaa !143
  %1739 = icmp eq i8 %1738, 0
  br i1 %1739, label %1761, label %1740

1740:                                             ; preds = %1724, %1733, %1737
  %1741 = zext i8 %1732 to i64
  %1742 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %1741
  %1743 = load i8, ptr %1742, align 1, !tbaa !17
  %1744 = icmp eq i8 %1743, 44
  br i1 %1744, label %1745, label %1749

1745:                                             ; preds = %1740
  %1746 = getelementptr inbounds %struct.regnode_2, ptr %1725, i64 0, i32 3
  %1747 = load i16, ptr %1746, align 2, !tbaa !144
  %1748 = icmp eq i16 %1747, 0
  br i1 %1748, label %1749, label %1758

1749:                                             ; preds = %1745, %1740
  %1750 = icmp eq i8 %1732, 40
  br i1 %1750, label %1751, label %1777

1751:                                             ; preds = %1749
  %1752 = getelementptr inbounds %struct.regnode, ptr %1730, i64 0, i32 1
  %1753 = load i8, ptr %1752, align 1, !tbaa !141
  %1754 = zext i8 %1753 to i64
  %1755 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %1754
  %1756 = load i8, ptr %1755, align 1, !tbaa !17
  %1757 = icmp eq i8 %1756, 0
  br i1 %1757, label %1777, label %1761

1758:                                             ; preds = %1745
  %1759 = icmp eq i8 %1732, 43
  br i1 %1759, label %1770, label %1761

1760:                                             ; preds = %1724
  br label %1761

1761:                                             ; preds = %1758, %1724, %1751, %1733, %1737, %1760
  %1762 = phi i32 [ %1729, %1760 ], [ 1, %1737 ], [ %1729, %1724 ], [ %1729, %1751 ], [ %1729, %1733 ], [ %1729, %1758 ]
  %1763 = phi i32 [ %1727, %1760 ], [ %1727, %1737 ], [ 1, %1724 ], [ %1727, %1751 ], [ %1727, %1733 ], [ %1727, %1758 ]
  %1764 = phi i32 [ 1, %1760 ], [ %1726, %1737 ], [ %1726, %1724 ], [ %1726, %1751 ], [ %1726, %1733 ], [ %1726, %1758 ]
  %1765 = zext i8 %1732 to i64
  %1766 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %1765
  %1767 = load i8, ptr %1766, align 1, !tbaa !17
  %1768 = zext i8 %1767 to i64
  %1769 = getelementptr inbounds %struct.regnode, ptr %1725, i64 %1768
  br label %1770

1770:                                             ; preds = %1758, %1724, %1761
  %1771 = phi ptr [ %1769, %1761 ], [ %1725, %1758 ], [ %1725, %1724 ]
  %1772 = phi i32 [ %1762, %1761 ], [ %1729, %1758 ], [ %1729, %1724 ]
  %1773 = phi i32 [ %1763, %1761 ], [ %1727, %1758 ], [ %1727, %1724 ]
  %1774 = phi i32 [ %1764, %1761 ], [ %1726, %1758 ], [ %1726, %1724 ]
  %1775 = phi i32 [ %1728, %1761 ], [ 1, %1758 ], [ 1, %1724 ]
  %1776 = getelementptr inbounds %struct.regnode, ptr %1771, i64 1
  br label %1724, !llvm.loop !146

1777:                                             ; preds = %1749, %1751
  store ptr %1725, ptr %24, align 8, !tbaa !5
  %1778 = icmp eq i32 %1727, 0
  %1779 = icmp eq i32 %1729, 0
  br label %1780

1780:                                             ; preds = %2237, %1777
  %1781 = phi ptr [ %2239, %2237 ], [ %1725, %1777 ]
  %1782 = load volatile i64, ptr %20, align 8, !tbaa !9
  %1783 = and i64 %1782, 2
  %1784 = icmp eq i64 %1783, 0
  br i1 %1784, label %1947, label %1785

1785:                                             ; preds = %1780
  %1786 = call ptr @Perl_regnext(ptr noundef nonnull %1781) #15
  %1787 = load ptr, ptr %1629, align 8, !tbaa !129
  %1788 = load ptr, ptr %331, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %1787, ptr noundef %1788, ptr noundef nonnull %1781, ptr noundef null, ptr noundef nonnull %18)
  %1789 = call ptr @Perl_PerlIO_stderr() #15
  %1790 = load ptr, ptr %1635, align 8
  %1791 = ptrtoint ptr %1781 to i64
  %1792 = ptrtoint ptr %1790 to i64
  %1793 = sub i64 %1791, %1792
  %1794 = lshr exact i64 %1793, 2
  %1795 = trunc i64 %1794 to i32
  %1796 = load ptr, ptr %331, align 8, !tbaa !56
  %1797 = getelementptr inbounds %struct.sv, ptr %1796, i64 0, i32 2
  %1798 = load i32, ptr %1797, align 4, !tbaa !13
  %1799 = and i32 %1798, 2098176
  %1800 = icmp eq i32 %1799, 1024
  br i1 %1800, label %1801, label %1804

1801:                                             ; preds = %1785
  %1802 = getelementptr inbounds %struct.sv, ptr %1796, i64 0, i32 3
  %1803 = load ptr, ptr %1802, align 8, !tbaa !17
  br label %1808

1804:                                             ; preds = %1785
  %1805 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %1796, ptr noundef null, i32 noundef 34) #15
  %1806 = load ptr, ptr %1635, align 8
  %1807 = ptrtoint ptr %1806 to i64
  br label %1808

1808:                                             ; preds = %1804, %1801
  %1809 = phi i64 [ %1807, %1804 ], [ %1792, %1801 ]
  %1810 = phi ptr [ %1805, %1804 ], [ %1803, %1801 ]
  %1811 = icmp eq ptr %1786, null
  %1812 = ptrtoint ptr %1786 to i64
  %1813 = sub i64 %1812, %1809
  %1814 = lshr exact i64 %1813, 2
  %1815 = trunc i64 %1814 to i32
  %1816 = select i1 %1811, i32 0, i32 %1815
  %1817 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1789, ptr noundef nonnull @.str.33, i32 noundef 0, ptr noundef nonnull @.str.8, i32 noundef %1795, ptr noundef %1810, i32 noundef %1816) #15
  %1818 = load i32, ptr %14, align 4, !tbaa !73
  %1819 = icmp eq i32 %1818, 0
  br i1 %1819, label %1944, label %1820

1820:                                             ; preds = %1808
  %1821 = call ptr @Perl_PerlIO_stderr() #15
  %1822 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1821, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.35) #15
  %1823 = load i32, ptr %14, align 4, !tbaa !73
  %1824 = and i32 %1823, 16
  %1825 = icmp eq i32 %1824, 0
  br i1 %1825, label %1830, label %1826

1826:                                             ; preds = %1820
  %1827 = call ptr @Perl_PerlIO_stderr() #15
  %1828 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1827, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.37) #15
  %1829 = load i32, ptr %14, align 4, !tbaa !73
  br label %1830

1830:                                             ; preds = %1826, %1820
  %1831 = phi i32 [ %1829, %1826 ], [ %1823, %1820 ]
  %1832 = and i32 %1831, 32
  %1833 = icmp eq i32 %1832, 0
  br i1 %1833, label %1838, label %1834

1834:                                             ; preds = %1830
  %1835 = call ptr @Perl_PerlIO_stderr() #15
  %1836 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1835, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.38) #15
  %1837 = load i32, ptr %14, align 4, !tbaa !73
  br label %1838

1838:                                             ; preds = %1834, %1830
  %1839 = phi i32 [ %1837, %1834 ], [ %1831, %1830 ]
  %1840 = and i32 %1839, 64
  %1841 = icmp eq i32 %1840, 0
  br i1 %1841, label %1846, label %1842

1842:                                             ; preds = %1838
  %1843 = call ptr @Perl_PerlIO_stderr() #15
  %1844 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1843, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.39) #15
  %1845 = load i32, ptr %14, align 4, !tbaa !73
  br label %1846

1846:                                             ; preds = %1842, %1838
  %1847 = phi i32 [ %1845, %1842 ], [ %1839, %1838 ]
  %1848 = and i32 %1847, 128
  %1849 = icmp eq i32 %1848, 0
  br i1 %1849, label %1854, label %1850

1850:                                             ; preds = %1846
  %1851 = call ptr @Perl_PerlIO_stderr() #15
  %1852 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1851, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.40) #15
  %1853 = load i32, ptr %14, align 4, !tbaa !73
  br label %1854

1854:                                             ; preds = %1850, %1846
  %1855 = phi i32 [ %1853, %1850 ], [ %1847, %1846 ]
  %1856 = and i32 %1855, 256
  %1857 = icmp eq i32 %1856, 0
  br i1 %1857, label %1862, label %1858

1858:                                             ; preds = %1854
  %1859 = call ptr @Perl_PerlIO_stderr() #15
  %1860 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1859, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.41) #15
  %1861 = load i32, ptr %14, align 4, !tbaa !73
  br label %1862

1862:                                             ; preds = %1858, %1854
  %1863 = phi i32 [ %1861, %1858 ], [ %1855, %1854 ]
  %1864 = and i32 %1863, 512
  %1865 = icmp eq i32 %1864, 0
  br i1 %1865, label %1870, label %1866

1866:                                             ; preds = %1862
  %1867 = call ptr @Perl_PerlIO_stderr() #15
  %1868 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1867, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.42) #15
  %1869 = load i32, ptr %14, align 4, !tbaa !73
  br label %1870

1870:                                             ; preds = %1866, %1862
  %1871 = phi i32 [ %1869, %1866 ], [ %1863, %1862 ]
  %1872 = and i32 %1871, 1024
  %1873 = icmp eq i32 %1872, 0
  br i1 %1873, label %1878, label %1874

1874:                                             ; preds = %1870
  %1875 = call ptr @Perl_PerlIO_stderr() #15
  %1876 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1875, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.43) #15
  %1877 = load i32, ptr %14, align 4, !tbaa !73
  br label %1878

1878:                                             ; preds = %1874, %1870
  %1879 = phi i32 [ %1877, %1874 ], [ %1871, %1870 ]
  %1880 = and i32 %1879, 2048
  %1881 = icmp eq i32 %1880, 0
  br i1 %1881, label %1886, label %1882

1882:                                             ; preds = %1878
  %1883 = call ptr @Perl_PerlIO_stderr() #15
  %1884 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1883, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.44) #15
  %1885 = load i32, ptr %14, align 4, !tbaa !73
  br label %1886

1886:                                             ; preds = %1882, %1878
  %1887 = phi i32 [ %1885, %1882 ], [ %1879, %1878 ]
  %1888 = and i32 %1887, 4096
  %1889 = icmp eq i32 %1888, 0
  br i1 %1889, label %1894, label %1890

1890:                                             ; preds = %1886
  %1891 = call ptr @Perl_PerlIO_stderr() #15
  %1892 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1891, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.45) #15
  %1893 = load i32, ptr %14, align 4, !tbaa !73
  br label %1894

1894:                                             ; preds = %1890, %1886
  %1895 = phi i32 [ %1893, %1890 ], [ %1887, %1886 ]
  %1896 = and i32 %1895, 6144
  %1897 = icmp eq i32 %1896, 0
  br i1 %1897, label %1902, label %1898

1898:                                             ; preds = %1894
  %1899 = call ptr @Perl_PerlIO_stderr() #15
  %1900 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1899, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.46) #15
  %1901 = load i32, ptr %14, align 4, !tbaa !73
  br label %1902

1902:                                             ; preds = %1898, %1894
  %1903 = phi i32 [ %1901, %1898 ], [ %1895, %1894 ]
  %1904 = and i32 %1903, 8192
  %1905 = icmp eq i32 %1904, 0
  br i1 %1905, label %1910, label %1906

1906:                                             ; preds = %1902
  %1907 = call ptr @Perl_PerlIO_stderr() #15
  %1908 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1907, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.47) #15
  %1909 = load i32, ptr %14, align 4, !tbaa !73
  br label %1910

1910:                                             ; preds = %1906, %1902
  %1911 = phi i32 [ %1909, %1906 ], [ %1903, %1902 ]
  %1912 = and i32 %1911, 16384
  %1913 = icmp eq i32 %1912, 0
  br i1 %1913, label %1918, label %1914

1914:                                             ; preds = %1910
  %1915 = call ptr @Perl_PerlIO_stderr() #15
  %1916 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1915, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.48) #15
  %1917 = load i32, ptr %14, align 4, !tbaa !73
  br label %1918

1918:                                             ; preds = %1914, %1910
  %1919 = phi i32 [ %1917, %1914 ], [ %1911, %1910 ]
  %1920 = and i32 %1919, 32768
  %1921 = icmp eq i32 %1920, 0
  br i1 %1921, label %1926, label %1922

1922:                                             ; preds = %1918
  %1923 = call ptr @Perl_PerlIO_stderr() #15
  %1924 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1923, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.49) #15
  %1925 = load i32, ptr %14, align 4, !tbaa !73
  br label %1926

1926:                                             ; preds = %1922, %1918
  %1927 = phi i32 [ %1925, %1922 ], [ %1919, %1918 ]
  %1928 = and i32 %1927, 65536
  %1929 = icmp eq i32 %1928, 0
  br i1 %1929, label %1934, label %1930

1930:                                             ; preds = %1926
  %1931 = call ptr @Perl_PerlIO_stderr() #15
  %1932 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1931, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.50) #15
  %1933 = load i32, ptr %14, align 4, !tbaa !73
  br label %1934

1934:                                             ; preds = %1930, %1926
  %1935 = phi i32 [ %1933, %1930 ], [ %1927, %1926 ]
  %1936 = and i32 %1935, 131072
  %1937 = icmp eq i32 %1936, 0
  br i1 %1937, label %1941, label %1938

1938:                                             ; preds = %1934
  %1939 = call ptr @Perl_PerlIO_stderr() #15
  %1940 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1939, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.51) #15
  br label %1941

1941:                                             ; preds = %1938, %1934
  %1942 = call ptr @Perl_PerlIO_stderr() #15
  %1943 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1942, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.52) #15
  br label %1944

1944:                                             ; preds = %1941, %1808
  %1945 = call ptr @Perl_PerlIO_stderr() #15
  %1946 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1945, ptr noundef nonnull @.str.53) #15
  br label %1947

1947:                                             ; preds = %1944, %1780
  %1948 = getelementptr inbounds %struct.regnode, ptr %1781, i64 0, i32 1
  %1949 = load i8, ptr %1948, align 1, !tbaa !141
  %1950 = zext i8 %1949 to i64
  %1951 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %1950
  %1952 = load i8, ptr %1951, align 1, !tbaa !17
  switch i8 %1952, label %2218 [
    i8 31, label %1953
    i8 72, label %1957
  ]

1953:                                             ; preds = %1947
  store ptr %1781, ptr %24, align 8
  %1954 = add i8 %1949, -31
  %1955 = icmp ult i8 %1954, 2
  br i1 %1955, label %2274, label %1956

1956:                                             ; preds = %1953
  store ptr %1781, ptr %1663, align 8, !tbaa !140
  br label %2274

1957:                                             ; preds = %1947
  %1958 = load ptr, ptr %1671, align 8, !tbaa !147
  %1959 = getelementptr inbounds %struct.regnode_1, ptr %1781, i64 0, i32 3
  %1960 = load i32, ptr %1959, align 4, !tbaa !148
  %1961 = zext i32 %1960 to i64
  %1962 = getelementptr inbounds %struct.reg_data, ptr %1958, i64 0, i32 2, i64 %1961
  %1963 = load ptr, ptr %1962, align 8, !tbaa !5
  %1964 = getelementptr inbounds %struct._reg_trie_data, ptr %1963, i64 0, i32 10
  %1965 = load i64, ptr %1964, align 8, !tbaa !150
  %1966 = icmp eq i64 %1965, 0
  br i1 %1966, label %2218, label %1967

1967:                                             ; preds = %1957
  %1968 = getelementptr inbounds %struct.regnode, ptr %1781, i64 0, i32 1
  store ptr %1781, ptr %24, align 8
  %1969 = load ptr, ptr %1630, align 8, !tbaa !130
  %1970 = getelementptr inbounds %struct.regexp_internal, ptr %1969, i64 0, i32 3
  %1971 = load ptr, ptr %1970, align 8, !tbaa !147
  %1972 = getelementptr inbounds %struct.reg_data, ptr %1971, i64 0, i32 2, i64 %1961
  %1973 = load ptr, ptr %1972, align 8, !tbaa !5
  %1974 = getelementptr inbounds %struct._reg_trie_data, ptr %1973, i64 0, i32 8
  %1975 = load i16, ptr %1974, align 8, !tbaa !152
  %1976 = zext i16 %1975 to i32
  %1977 = getelementptr inbounds %struct._reg_trie_data, ptr %1973, i64 0, i32 13
  %1978 = load i32, ptr %1977, align 4, !tbaa !153
  %1979 = getelementptr inbounds %struct._reg_trie_data, ptr %1973, i64 0, i32 1
  %1980 = load i32, ptr %1979, align 4, !tbaa !154
  %1981 = add i32 %1980, %1976
  %1982 = getelementptr inbounds %struct._reg_trie_data, ptr %1973, i64 0, i32 3
  %1983 = load ptr, ptr %1982, align 8, !tbaa !155
  %1984 = getelementptr inbounds %struct._reg_trie_state, ptr %1983, i64 1, i32 1
  %1985 = load i32, ptr %1984, align 8, !tbaa !17
  %1986 = load i32, ptr %1971, align 8, !tbaa !156
  %1987 = add i32 %1986, 1
  %1988 = zext i32 %1986 to i64
  %1989 = shl nuw nsw i64 %1988, 3
  %1990 = add nuw nsw i64 %1989, 24
  %1991 = call ptr @Perl_safesysrealloc(ptr noundef nonnull %1971, i64 noundef %1990) #15
  %1992 = load ptr, ptr %1630, align 8, !tbaa !130
  %1993 = getelementptr inbounds %struct.regexp_internal, ptr %1992, i64 0, i32 3
  store ptr %1991, ptr %1993, align 8, !tbaa !147
  %1994 = icmp eq i32 %1986, 0
  br i1 %1994, label %2000, label %1995

1995:                                             ; preds = %1967
  %1996 = getelementptr inbounds %struct.reg_data, ptr %1991, i64 0, i32 1
  %1997 = load ptr, ptr %1996, align 8, !tbaa !158
  %1998 = zext i32 %1987 to i64
  %1999 = call ptr @Perl_safesysrealloc(ptr noundef %1997, i64 noundef %1998) #15
  br label %2002

2000:                                             ; preds = %1967
  %2001 = call ptr @Perl_safesysmalloc(i64 noundef 1) #15
  br label %2002

2002:                                             ; preds = %2000, %1995
  %2003 = phi ptr [ %1999, %1995 ], [ %2001, %2000 ]
  %2004 = load ptr, ptr %1630, align 8, !tbaa !130
  %2005 = getelementptr inbounds %struct.regexp_internal, ptr %2004, i64 0, i32 3
  %2006 = load ptr, ptr %2005, align 8, !tbaa !147
  %2007 = getelementptr inbounds %struct.reg_data, ptr %2006, i64 0, i32 1
  store ptr %2003, ptr %2007, align 8, !tbaa !158
  store i32 %1987, ptr %2006, align 8, !tbaa !156
  %2008 = getelementptr inbounds i8, ptr %2003, i64 %1988
  store i8 84, ptr %2008, align 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9)
  store volatile i64 0, ptr %9, align 8, !tbaa !9
  %2009 = load volatile i64, ptr %9, align 8, !tbaa !9
  %2010 = call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %2011 = icmp eq ptr %2010, null
  br i1 %2011, label %2031, label %2012

2012:                                             ; preds = %2002
  %2013 = getelementptr inbounds %struct.sv, ptr %2010, i64 0, i32 2
  %2014 = load i32, ptr %2013, align 4, !tbaa !13
  %2015 = and i32 %2014, 256
  %2016 = icmp eq i32 %2015, 0
  br i1 %2016, label %2017, label %2019

2017:                                             ; preds = %2012
  call void @Perl_sv_setuv(ptr noundef nonnull %2010, i64 noundef 65288) #15
  %2018 = load i32, ptr %2013, align 4, !tbaa !13
  br label %2019

2019:                                             ; preds = %2017, %2012
  %2020 = phi i32 [ %2018, %2017 ], [ %2014, %2012 ]
  %2021 = and i32 %2020, 2097408
  %2022 = icmp eq i32 %2021, 256
  br i1 %2022, label %2023, label %2027

2023:                                             ; preds = %2019
  %2024 = load ptr, ptr %2010, align 8, !tbaa !16
  %2025 = getelementptr inbounds %struct.xpviv, ptr %2024, i64 0, i32 4
  %2026 = load i64, ptr %2025, align 8, !tbaa !17
  br label %2029

2027:                                             ; preds = %2019
  %2028 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %2010, i32 noundef 2) #15
  br label %2029

2029:                                             ; preds = %2027, %2023
  %2030 = phi i64 [ %2026, %2023 ], [ %2028, %2027 ]
  store volatile i64 %2030, ptr %9, align 8, !tbaa !9
  br label %2031

2031:                                             ; preds = %2029, %2002
  %2032 = load i8, ptr %1968, align 1, !tbaa !141
  %2033 = icmp eq i8 %2032, 72
  br i1 %2033, label %2034, label %2037

2034:                                             ; preds = %2031
  %2035 = call noalias dereferenceable_or_null(8) ptr @calloc(i64 noundef 1, i64 noundef 8) #16
  %2036 = load i64, ptr %1781, align 4
  store i64 %2036, ptr %2035, align 4
  br label %2039

2037:                                             ; preds = %2031
  %2038 = call noalias dereferenceable_or_null(40) ptr @calloc(i64 noundef 1, i64 noundef 40) #16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(40) %2038, ptr noundef nonnull align 4 dereferenceable(40) %1781, i64 40, i1 false), !tbaa.struct !159
  br label %2039

2039:                                             ; preds = %2037, %2034
  %2040 = phi ptr [ %2035, %2034 ], [ %2038, %2037 ]
  %2041 = getelementptr inbounds %struct.regnode, ptr %2040, i64 0, i32 1
  %2042 = load i8, ptr %2041, align 1, !tbaa !141
  %2043 = add i8 %2042, 2
  store i8 %2043, ptr %2041, align 1, !tbaa !141
  %2044 = getelementptr inbounds %struct.regnode_1, ptr %2040, i64 0, i32 3
  store i32 %1986, ptr %2044, align 4, !tbaa !148
  %2045 = call noalias dereferenceable_or_null(24) ptr @calloc(i64 noundef 1, i64 noundef 24) #16
  %2046 = load ptr, ptr %1630, align 8, !tbaa !130
  %2047 = getelementptr inbounds %struct.regexp_internal, ptr %2046, i64 0, i32 3
  %2048 = load ptr, ptr %2047, align 8, !tbaa !147
  %2049 = getelementptr inbounds %struct.reg_data, ptr %2048, i64 0, i32 2, i64 %1988
  store ptr %2045, ptr %2049, align 8, !tbaa !5
  %2050 = getelementptr inbounds %struct._reg_ac_data, ptr %2045, i64 0, i32 1
  store i32 %1960, ptr %2050, align 4, !tbaa !160
  %2051 = zext i32 %1978 to i64
  %2052 = shl nuw nsw i64 %2051, 4
  %2053 = call noalias ptr @malloc(i64 noundef %2052) #17
  %2054 = getelementptr inbounds %struct._reg_ac_data, ptr %2045, i64 0, i32 3
  store ptr %2053, ptr %2054, align 8, !tbaa !162
  %2055 = load ptr, ptr %1982, align 8, !tbaa !155
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %2053, ptr align 1 %2055, i64 %2052, i1 false)
  %2056 = call ptr @Perl_safesyscalloc(i64 noundef %2051, i64 noundef 4) #15
  %2057 = call noalias ptr @calloc(i64 noundef %2051, i64 noundef 4) #16
  %2058 = getelementptr inbounds %struct._reg_ac_data, ptr %2045, i64 0, i32 2
  store ptr %2057, ptr %2058, align 8, !tbaa !163
  store i32 1, ptr %2045, align 8, !tbaa !164
  %2059 = getelementptr inbounds i32, ptr %2057, i64 1
  store i32 1, ptr %2059, align 4, !tbaa !73
  store i32 1, ptr %2057, align 4, !tbaa !73
  %2060 = icmp eq i16 %1975, 0
  br i1 %2060, label %2197, label %2061

2061:                                             ; preds = %2039
  %2062 = getelementptr inbounds %struct._reg_trie_data, ptr %1973, i64 0, i32 4
  %2063 = sub i32 %1985, %1976
  %2064 = zext i16 %1975 to i64
  br label %2168

2065:                                             ; preds = %2193
  %2066 = icmp eq i32 %2194, 0
  br i1 %2066, label %2197, label %2067

2067:                                             ; preds = %2065
  %2068 = load ptr, ptr %1982, align 8, !tbaa !155
  br label %2069

2069:                                             ; preds = %2165, %2067
  %2070 = phi i32 [ %2166, %2165 ], [ 0, %2067 ]
  %2071 = phi i32 [ %2158, %2165 ], [ %2194, %2067 ]
  %2072 = urem i32 %2070, %1978
  %2073 = zext i32 %2072 to i64
  %2074 = getelementptr inbounds i32, ptr %2056, i64 %2073
  %2075 = load i32, ptr %2074, align 4, !tbaa !73
  %2076 = zext i32 %2075 to i64
  %2077 = getelementptr inbounds %struct._reg_trie_state, ptr %2068, i64 %2076, i32 1
  %2078 = load i32, ptr %2077, align 8, !tbaa !17
  %2079 = sub i32 %2078, %1976
  %2080 = icmp eq i32 %2075, 1
  %2081 = zext i1 %2080 to i32
  br label %2082

2082:                                             ; preds = %2157, %2069
  %2083 = phi i64 [ 0, %2069 ], [ %2159, %2157 ]
  %2084 = phi i32 [ %2071, %2069 ], [ %2158, %2157 ]
  %2085 = trunc i64 %2083 to i32
  %2086 = add i32 %2078, %2085
  %2087 = icmp uge i32 %2086, %1976
  %2088 = icmp ult i32 %2086, %1981
  %2089 = select i1 %2087, i1 %2088, i1 false
  br i1 %2089, label %2090, label %2103

2090:                                             ; preds = %2082
  %2091 = load ptr, ptr %2062, align 8, !tbaa !165
  %2092 = add i32 %2079, %2085
  %2093 = zext i32 %2092 to i64
  %2094 = getelementptr inbounds %struct._reg_trie_trans, ptr %2091, i64 %2093, i32 1
  %2095 = load i32, ptr %2094, align 4, !tbaa !166
  %2096 = icmp eq i32 %2075, %2095
  br i1 %2096, label %2097, label %2103

2097:                                             ; preds = %2090
  %2098 = getelementptr inbounds %struct._reg_trie_trans, ptr %2091, i64 %2093
  %2099 = load i32, ptr %2098, align 4, !tbaa !168
  %2100 = icmp ne i32 %2099, 0
  %2101 = or i1 %2080, %2100
  %2102 = select i1 %2100, i32 %2099, i32 %2081
  br i1 %2101, label %2161, label %2157

2103:                                             ; preds = %2090, %2082
  br i1 %2080, label %2161, label %2157

2104:                                             ; preds = %2133, %2161
  %2105 = phi i32 [ %2075, %2161 ], [ %2108, %2133 ]
  %2106 = zext i32 %2105 to i64
  %2107 = getelementptr inbounds i32, ptr %2057, i64 %2106
  %2108 = load i32, ptr %2107, align 4, !tbaa !73
  %2109 = zext i32 %2108 to i64
  %2110 = getelementptr inbounds %struct._reg_trie_state, ptr %2163, i64 %2109, i32 1
  %2111 = load i32, ptr %2110, align 8, !tbaa !17
  %2112 = add i32 %2111, %2085
  %2113 = icmp uge i32 %2112, %1976
  %2114 = icmp ult i32 %2112, %1981
  %2115 = select i1 %2113, i1 %2114, i1 false
  br i1 %2115, label %2118, label %2116

2116:                                             ; preds = %2104
  %2117 = icmp eq i32 %2108, 1
  br i1 %2117, label %2136, label %2133

2118:                                             ; preds = %2104
  %2119 = load ptr, ptr %2062, align 8, !tbaa !165
  %2120 = add i32 %2164, %2111
  %2121 = zext i32 %2120 to i64
  %2122 = getelementptr inbounds %struct._reg_trie_trans, ptr %2119, i64 %2121, i32 1
  %2123 = load i32, ptr %2122, align 4, !tbaa !166
  %2124 = icmp eq i32 %2108, %2123
  br i1 %2124, label %2125, label %2131

2125:                                             ; preds = %2118
  %2126 = getelementptr inbounds %struct._reg_trie_trans, ptr %2119, i64 %2121
  %2127 = load i32, ptr %2126, align 4, !tbaa !168
  %2128 = icmp ne i32 %2127, 0
  %2129 = icmp eq i32 %2108, 1
  %2130 = or i1 %2129, %2128
  br i1 %2130, label %2134, label %2133

2131:                                             ; preds = %2118
  %2132 = icmp eq i32 %2108, 1
  br i1 %2132, label %2136, label %2133

2133:                                             ; preds = %2131, %2125, %2116
  br label %2104, !llvm.loop !169

2134:                                             ; preds = %2125
  %2135 = icmp eq i32 %2127, 0
  br i1 %2135, label %2136, label %2139

2136:                                             ; preds = %2131, %2116, %2134
  %2137 = icmp eq i32 %2108, 1
  %2138 = zext i1 %2137 to i32
  br label %2139

2139:                                             ; preds = %2136, %2134
  %2140 = phi i32 [ %2138, %2136 ], [ %2127, %2134 ]
  %2141 = zext i32 %2162 to i64
  %2142 = getelementptr inbounds i32, ptr %2057, i64 %2141
  store i32 %2140, ptr %2142, align 4, !tbaa !73
  %2143 = getelementptr inbounds %struct._reg_trie_state, ptr %2163, i64 %2141
  %2144 = load i16, ptr %2143, align 8, !tbaa !170
  %2145 = icmp eq i16 %2144, 0
  br i1 %2145, label %2146, label %2152

2146:                                             ; preds = %2139
  %2147 = zext i32 %2140 to i64
  %2148 = getelementptr inbounds %struct._reg_trie_state, ptr %2163, i64 %2147
  %2149 = load i16, ptr %2148, align 8, !tbaa !170
  %2150 = icmp eq i16 %2149, 0
  br i1 %2150, label %2152, label %2151

2151:                                             ; preds = %2146
  store i16 %2149, ptr %2143, align 8, !tbaa !170
  br label %2152

2152:                                             ; preds = %2151, %2146, %2139
  %2153 = add i32 %2084, 1
  %2154 = urem i32 %2084, %1978
  %2155 = zext i32 %2154 to i64
  %2156 = getelementptr inbounds i32, ptr %2056, i64 %2155
  store i32 %2162, ptr %2156, align 4, !tbaa !73
  br label %2157

2157:                                             ; preds = %2152, %2103, %2097
  %2158 = phi i32 [ %2153, %2152 ], [ %2084, %2103 ], [ %2084, %2097 ]
  %2159 = add nuw nsw i64 %2083, 1
  %2160 = icmp eq i64 %2159, %2064
  br i1 %2160, label %2165, label %2082, !llvm.loop !172

2161:                                             ; preds = %2103, %2097
  %2162 = phi i32 [ 1, %2103 ], [ %2102, %2097 ]
  %2163 = load ptr, ptr %2054, align 8, !tbaa !162
  %2164 = sub i32 %2085, %1976
  br label %2104

2165:                                             ; preds = %2157
  %2166 = add nuw i32 %2070, 1
  %2167 = icmp ult i32 %2166, %2158
  br i1 %2167, label %2069, label %2197, !llvm.loop !173

2168:                                             ; preds = %2193, %2061
  %2169 = phi i64 [ 0, %2061 ], [ %2195, %2193 ]
  %2170 = phi i32 [ 0, %2061 ], [ %2194, %2193 ]
  %2171 = trunc i64 %2169 to i32
  %2172 = add i32 %1985, %2171
  %2173 = icmp uge i32 %2172, %1976
  %2174 = icmp ult i32 %2172, %1981
  %2175 = select i1 %2173, i1 %2174, i1 false
  br i1 %2175, label %2176, label %2193

2176:                                             ; preds = %2168
  %2177 = load ptr, ptr %2062, align 8, !tbaa !165
  %2178 = add i32 %2063, %2171
  %2179 = zext i32 %2178 to i64
  %2180 = getelementptr inbounds %struct._reg_trie_trans, ptr %2177, i64 %2179, i32 1
  %2181 = load i32, ptr %2180, align 4, !tbaa !166
  %2182 = icmp eq i32 %2181, 1
  br i1 %2182, label %2183, label %2193

2183:                                             ; preds = %2176
  %2184 = getelementptr inbounds %struct._reg_trie_trans, ptr %2177, i64 %2179
  %2185 = load i32, ptr %2184, align 4, !tbaa !168
  %2186 = icmp eq i32 %2185, 0
  br i1 %2186, label %2193, label %2187

2187:                                             ; preds = %2183
  %2188 = zext i32 %2170 to i64
  %2189 = getelementptr inbounds i32, ptr %2056, i64 %2188
  store i32 %2185, ptr %2189, align 4, !tbaa !73
  %2190 = add i32 %2170, 1
  %2191 = zext i32 %2185 to i64
  %2192 = getelementptr inbounds i32, ptr %2057, i64 %2191
  store i32 1, ptr %2192, align 4, !tbaa !73
  br label %2193

2193:                                             ; preds = %2187, %2183, %2176, %2168
  %2194 = phi i32 [ %2190, %2187 ], [ %2170, %2183 ], [ %2170, %2176 ], [ %2170, %2168 ]
  %2195 = add nuw nsw i64 %2169, 1
  %2196 = icmp eq i64 %2195, %2064
  br i1 %2196, label %2065, label %2168, !llvm.loop !174

2197:                                             ; preds = %2165, %2065, %2039
  store i32 0, ptr %2059, align 4, !tbaa !73
  store i32 0, ptr %2057, align 4, !tbaa !73
  %2198 = load volatile i64, ptr %9, align 8, !tbaa !9
  %2199 = and i64 %2198, 4
  %2200 = icmp eq i64 %2199, 0
  br i1 %2200, label %2217, label %2201

2201:                                             ; preds = %2197
  %2202 = call ptr @Perl_PerlIO_stderr() #15
  %2203 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2202, ptr noundef nonnull @.str.225, i32 noundef 0, ptr noundef nonnull @.str.8, i64 noundef %2051) #15
  %2204 = icmp ugt i32 %1978, 1
  br i1 %2204, label %2205, label %2214

2205:                                             ; preds = %2201, %2205
  %2206 = phi i64 [ %2212, %2205 ], [ 1, %2201 ]
  %2207 = call ptr @Perl_PerlIO_stderr() #15
  %2208 = getelementptr inbounds i32, ptr %2057, i64 %2206
  %2209 = load i32, ptr %2208, align 4, !tbaa !73
  %2210 = zext i32 %2209 to i64
  %2211 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2207, ptr noundef nonnull @.str.226, i64 noundef %2210) #15
  %2212 = add nuw nsw i64 %2206, 1
  %2213 = icmp eq i64 %2212, %2051
  br i1 %2213, label %2214, label %2205, !llvm.loop !175

2214:                                             ; preds = %2205, %2201
  %2215 = call ptr @Perl_PerlIO_stderr() #15
  %2216 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2215, ptr noundef nonnull @.str.53) #15
  br label %2217

2217:                                             ; preds = %2197, %2214
  call void @Perl_safesysfree(ptr noundef %2056) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9)
  store ptr %2040, ptr %1663, align 8, !tbaa !140
  br label %2274

2218:                                             ; preds = %1947, %1957
  %2219 = zext i8 %1949 to i32
  %2220 = lshr i32 %2219, 3
  %2221 = zext i32 %2220 to i64
  %2222 = getelementptr inbounds [0 x i8], ptr @PL_simple_bitmask, i64 0, i64 %2221
  %2223 = load i8, ptr %2222, align 1, !tbaa !17
  %2224 = zext i8 %2223 to i32
  %2225 = and i32 %2219, 7
  %2226 = shl nuw nsw i32 1, %2225
  %2227 = and i32 %2226, %2224
  %2228 = icmp eq i32 %2227, 0
  br i1 %2228, label %2230, label %2229

2229:                                             ; preds = %2218
  store ptr %1781, ptr %24, align 8
  store ptr %1781, ptr %1663, align 8, !tbaa !140
  br label %2274

2230:                                             ; preds = %2218
  switch i8 %1952, label %2240 [
    i8 8, label %2231
    i8 12, label %2231
    i8 2, label %2232
  ]

2231:                                             ; preds = %2230, %2230
  store ptr %1781, ptr %24, align 8
  store ptr %1781, ptr %1663, align 8, !tbaa !140
  br label %2274

2232:                                             ; preds = %2230
  %2233 = icmp eq i8 %1949, 3
  %2234 = select i1 %2233, i32 1024, i32 2048
  %2235 = load i32, ptr %1577, align 4, !tbaa !125
  %2236 = or i32 %2235, %2234
  br label %2237

2237:                                             ; preds = %2232, %2242, %2269
  %2238 = phi i32 [ %2236, %2232 ], [ %2244, %2242 ], [ %2272, %2269 ]
  store i32 %2238, ptr %1577, align 4, !tbaa !125
  %2239 = getelementptr inbounds %struct.regnode, ptr %1781, i64 1
  br label %1780

2240:                                             ; preds = %2230
  %2241 = icmp eq i8 %1949, 7
  br i1 %2241, label %2242, label %2245

2242:                                             ; preds = %2240
  %2243 = load i32, ptr %1577, align 4, !tbaa !125
  %2244 = or i32 %2243, 4096
  br label %2237

2245:                                             ; preds = %2240
  br i1 %1778, label %2252, label %2246

2246:                                             ; preds = %2245
  %2247 = load i32, ptr %364, align 4, !tbaa !97
  %2248 = icmp eq i32 %2247, 0
  %2249 = select i1 %2248, i1 %1779, i1 false
  %2250 = icmp eq i8 %1949, 42
  %2251 = and i1 %2250, %2249
  br i1 %2251, label %2255, label %2273

2252:                                             ; preds = %2245
  br i1 %1779, label %2253, label %2290

2253:                                             ; preds = %2252
  %2254 = icmp eq i8 %1949, 42
  br i1 %2254, label %2255, label %2273

2255:                                             ; preds = %2246, %2253
  %2256 = getelementptr inbounds %struct.regnode, ptr %1781, i64 1, i32 1
  %2257 = load i8, ptr %2256, align 1, !tbaa !141
  %2258 = zext i8 %2257 to i64
  %2259 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %2258
  %2260 = load i8, ptr %2259, align 1, !tbaa !17
  %2261 = icmp eq i8 %2260, 16
  br i1 %2261, label %2262, label %2273

2262:                                             ; preds = %2255
  %2263 = load i32, ptr %1577, align 4, !tbaa !125
  %2264 = and i32 %2263, 7168
  %2265 = icmp eq i32 %2264, 0
  %2266 = load i32, ptr %71, align 8
  %2267 = icmp eq i32 %2266, 0
  %2268 = select i1 %2265, i1 %2267, i1 false
  br i1 %2268, label %2269, label %2273

2269:                                             ; preds = %2262
  %2270 = icmp eq i8 %2257, 16
  %2271 = select i1 %2270, i32 1026, i32 2050
  %2272 = or i32 %2263, %2271
  br label %2237

2273:                                             ; preds = %2246, %2253, %2255, %2262
  store ptr %1781, ptr %24, align 8
  br label %2274

2274:                                             ; preds = %2273, %1953, %2217, %2231, %2229, %1956
  %2275 = icmp eq i32 %1728, 0
  %2276 = icmp ne i32 %1726, 0
  %2277 = select i1 %2275, i1 true, i1 %2276
  %2278 = icmp ne i32 %1729, 0
  %2279 = select i1 %2277, i1 true, i1 %2278
  br i1 %2279, label %2291, label %2280

2280:                                             ; preds = %2274
  %2281 = load i32, ptr %364, align 4
  %2282 = icmp eq i32 %2281, 0
  %2283 = select i1 %1778, i1 true, i1 %2282
  %2284 = load i32, ptr %71, align 8
  %2285 = icmp eq i32 %2284, 0
  %2286 = select i1 %2283, i1 %2285, i1 false
  br i1 %2286, label %2287, label %2291

2287:                                             ; preds = %2280
  %2288 = load i32, ptr %1577, align 4, !tbaa !125
  %2289 = or i32 %2288, 1
  store i32 %2289, ptr %1577, align 4, !tbaa !125
  br label %2291

2290:                                             ; preds = %2252
  store ptr %1781, ptr %24, align 8
  br label %2291

2291:                                             ; preds = %2290, %2280, %2274, %2287
  %2292 = load volatile i64, ptr %20, align 8, !tbaa !9
  %2293 = and i64 %2292, 1
  %2294 = icmp eq i64 %2293, 0
  %2295 = or i1 %1682, %2294
  br i1 %2295, label %2303, label %2296

2296:                                             ; preds = %2291
  %2297 = call ptr @Perl_PerlIO_stderr() #15
  %2298 = ptrtoint ptr %1781 to i64
  %2299 = sub i64 %2298, %1680
  %2300 = ashr exact i64 %2299, 2
  %2301 = add nsw i64 %2300, 1
  %2302 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2297, ptr noundef nonnull @.str.54, i64 noundef %2301) #15
  br label %2303

2303:                                             ; preds = %2296, %2291
  %2304 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.8, i64 noundef 0) #15
  store ptr %2304, ptr %1672, align 8, !tbaa !176
  %2305 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.8, i64 noundef 0) #15
  store ptr %2305, ptr %1673, align 8, !tbaa !178
  %2306 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.8, i64 noundef 0) #15
  store ptr %2306, ptr %1674, align 8, !tbaa !179
  store ptr %1672, ptr %1675, align 8, !tbaa !180
  call void @Perl_push_scope() #15
  %2307 = load ptr, ptr @PL_scopestack_name, align 8, !tbaa !5
  %2308 = icmp eq ptr %2307, null
  br i1 %2308, label %2314, label %2309

2309:                                             ; preds = %2303
  %2310 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !73
  %2311 = add nsw i32 %2310, -1
  %2312 = sext i32 %2311 to i64
  %2313 = getelementptr inbounds ptr, ptr %2307, i64 %2312
  store ptr @.str.55, ptr %2313, align 8, !tbaa !5
  br label %2314

2314:                                             ; preds = %2309, %2303
  %2315 = load volatile i32, ptr @PL_debug, align 4, !tbaa !73
  %2316 = and i32 %2315, 4
  %2317 = icmp eq i32 %2316, 0
  br i1 %2317, label %2323, label %2318

2318:                                             ; preds = %2314
  %2319 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !73
  %2320 = sext i32 %2319 to i64
  %2321 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !73
  %2322 = sext i32 %2321 to i64
  call void (ptr, ...) @Perl_deb(ptr noundef nonnull @.str.56, ptr noundef nonnull @.str.57, i64 noundef %2320, i64 noundef %2322, ptr noundef nonnull @.str.58, i32 noundef 7076) #15
  br label %2323

2323:                                             ; preds = %2318, %2314
  %2324 = load ptr, ptr %1672, align 8, !tbaa !176
  call void @Perl_save_pushptr(ptr noundef %2324, i32 noundef 11) #15
  %2325 = load ptr, ptr %1673, align 8, !tbaa !178
  call void @Perl_save_pushptr(ptr noundef %2325, i32 noundef 11) #15
  %2326 = load ptr, ptr %1674, align 8, !tbaa !179
  call void @Perl_save_pushptr(ptr noundef %2326, i32 noundef 11) #15
  store ptr %1639, ptr %24, align 8, !tbaa !5
  %2327 = load ptr, ptr %1663, align 8, !tbaa !140
  %2328 = icmp eq ptr %2327, null
  br i1 %2328, label %2329, label %2333

2329:                                             ; preds = %2323
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %22, i8 0, i64 56, i1 false)
  store i8 19, ptr %1676, align 1, !tbaa !181
  store i16 1, ptr %1677, align 2, !tbaa !182
  store i32 -1, ptr %1678, align 4, !tbaa !148
  call fastcc void @S_ssc_anything(ptr noundef nonnull %22)
  %2330 = load i32, ptr %323, align 8, !tbaa !52
  %2331 = icmp eq i32 %2330, 0
  %2332 = select i1 %2331, i32 0, i32 536870911
  store i32 %2332, ptr %1679, align 8
  store ptr %22, ptr %1668, align 8, !tbaa !183
  br label %2333

2333:                                             ; preds = %2323, %2329
  %2334 = phi i32 [ 2048, %2329 ], [ 0, %2323 ]
  store ptr %23, ptr %1669, align 8, !tbaa !184
  %2335 = load volatile i64, ptr %20, align 8, !tbaa !9
  %2336 = and i64 %2335, 1048578
  %2337 = icmp eq i64 %2336, 1048578
  br i1 %2337, label %2338, label %2438

2338:                                             ; preds = %2333
  %2339 = call ptr @Perl_PerlIO_stderr() #15
  %2340 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2339, ptr noundef nonnull @.str.59) #15
  %2341 = load i32, ptr %365, align 8, !tbaa !98
  %2342 = and i32 %2341, 1
  %2343 = icmp eq i32 %2342, 0
  br i1 %2343, label %2348, label %2344

2344:                                             ; preds = %2338
  %2345 = call ptr @Perl_PerlIO_stderr() #15
  %2346 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2345, ptr noundef nonnull @.str.60) #15
  %2347 = load i32, ptr %365, align 8, !tbaa !98
  br label %2348

2348:                                             ; preds = %2344, %2338
  %2349 = phi i32 [ %2347, %2344 ], [ %2341, %2338 ]
  %2350 = and i32 %2349, 2
  %2351 = icmp eq i32 %2350, 0
  br i1 %2351, label %2356, label %2352

2352:                                             ; preds = %2348
  %2353 = call ptr @Perl_PerlIO_stderr() #15
  %2354 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2353, ptr noundef nonnull @.str.61) #15
  %2355 = load i32, ptr %365, align 8, !tbaa !98
  br label %2356

2356:                                             ; preds = %2352, %2348
  %2357 = phi i32 [ %2355, %2352 ], [ %2349, %2348 ]
  %2358 = and i32 %2357, 4
  %2359 = icmp eq i32 %2358, 0
  br i1 %2359, label %2364, label %2360

2360:                                             ; preds = %2356
  %2361 = call ptr @Perl_PerlIO_stderr() #15
  %2362 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2361, ptr noundef nonnull @.str.62) #15
  %2363 = load i32, ptr %365, align 8, !tbaa !98
  br label %2364

2364:                                             ; preds = %2360, %2356
  %2365 = phi i32 [ %2363, %2360 ], [ %2357, %2356 ]
  %2366 = and i32 %2365, 16
  %2367 = icmp eq i32 %2366, 0
  br i1 %2367, label %2372, label %2368

2368:                                             ; preds = %2364
  %2369 = call ptr @Perl_PerlIO_stderr() #15
  %2370 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2369, ptr noundef nonnull @.str.63) #15
  %2371 = load i32, ptr %365, align 8, !tbaa !98
  br label %2372

2372:                                             ; preds = %2368, %2364
  %2373 = phi i32 [ %2371, %2368 ], [ %2365, %2364 ]
  %2374 = and i32 %2373, 32
  %2375 = icmp eq i32 %2374, 0
  br i1 %2375, label %2380, label %2376

2376:                                             ; preds = %2372
  %2377 = call ptr @Perl_PerlIO_stderr() #15
  %2378 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2377, ptr noundef nonnull @.str.64) #15
  %2379 = load i32, ptr %365, align 8, !tbaa !98
  br label %2380

2380:                                             ; preds = %2376, %2372
  %2381 = phi i32 [ %2379, %2376 ], [ %2373, %2372 ]
  %2382 = and i32 %2381, 64
  %2383 = icmp eq i32 %2382, 0
  br i1 %2383, label %2388, label %2384

2384:                                             ; preds = %2380
  %2385 = call ptr @Perl_PerlIO_stderr() #15
  %2386 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2385, ptr noundef nonnull @.str.65) #15
  %2387 = load i32, ptr %365, align 8, !tbaa !98
  br label %2388

2388:                                             ; preds = %2384, %2380
  %2389 = phi i32 [ %2387, %2384 ], [ %2381, %2380 ]
  %2390 = and i32 %2389, 128
  %2391 = icmp eq i32 %2390, 0
  br i1 %2391, label %2396, label %2392

2392:                                             ; preds = %2388
  %2393 = call ptr @Perl_PerlIO_stderr() #15
  %2394 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2393, ptr noundef nonnull @.str.66) #15
  %2395 = load i32, ptr %365, align 8, !tbaa !98
  br label %2396

2396:                                             ; preds = %2392, %2388
  %2397 = phi i32 [ %2395, %2392 ], [ %2389, %2388 ]
  %2398 = and i32 %2397, 256
  %2399 = icmp eq i32 %2398, 0
  br i1 %2399, label %2404, label %2400

2400:                                             ; preds = %2396
  %2401 = call ptr @Perl_PerlIO_stderr() #15
  %2402 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2401, ptr noundef nonnull @.str.67) #15
  %2403 = load i32, ptr %365, align 8, !tbaa !98
  br label %2404

2404:                                             ; preds = %2400, %2396
  %2405 = phi i32 [ %2403, %2400 ], [ %2397, %2396 ]
  %2406 = and i32 %2405, 512
  %2407 = icmp eq i32 %2406, 0
  br i1 %2407, label %2412, label %2408

2408:                                             ; preds = %2404
  %2409 = call ptr @Perl_PerlIO_stderr() #15
  %2410 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2409, ptr noundef nonnull @.str.68) #15
  %2411 = load i32, ptr %365, align 8, !tbaa !98
  br label %2412

2412:                                             ; preds = %2408, %2404
  %2413 = phi i32 [ %2411, %2408 ], [ %2405, %2404 ]
  %2414 = and i32 %2413, 1024
  %2415 = icmp eq i32 %2414, 0
  br i1 %2415, label %2420, label %2416

2416:                                             ; preds = %2412
  %2417 = call ptr @Perl_PerlIO_stderr() #15
  %2418 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2417, ptr noundef nonnull @.str.69) #15
  %2419 = load i32, ptr %365, align 8, !tbaa !98
  br label %2420

2420:                                             ; preds = %2416, %2412
  %2421 = phi i32 [ %2419, %2416 ], [ %2413, %2412 ]
  %2422 = and i32 %2421, 2048
  %2423 = icmp eq i32 %2422, 0
  br i1 %2423, label %2428, label %2424

2424:                                             ; preds = %2420
  %2425 = call ptr @Perl_PerlIO_stderr() #15
  %2426 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2425, ptr noundef nonnull @.str.70) #15
  %2427 = load i32, ptr %365, align 8, !tbaa !98
  br label %2428

2428:                                             ; preds = %2424, %2420
  %2429 = phi i32 [ %2427, %2424 ], [ %2421, %2420 ]
  %2430 = and i32 %2429, 4096
  %2431 = icmp eq i32 %2430, 0
  br i1 %2431, label %2435, label %2432

2432:                                             ; preds = %2428
  %2433 = call ptr @Perl_PerlIO_stderr() #15
  %2434 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2433, ptr noundef nonnull @.str.71) #15
  br label %2435

2435:                                             ; preds = %2432, %2428
  %2436 = call ptr @Perl_PerlIO_stderr() #15
  %2437 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2436, ptr noundef nonnull @.str.53) #15
  br label %2438

2438:                                             ; preds = %2435, %2333
  %2439 = load i64, ptr %378, align 8, !tbaa !111
  %2440 = getelementptr inbounds %struct.regnode, ptr %1639, i64 %2439
  %2441 = select i1 %1682, i32 74752, i32 9216
  %2442 = or i32 %2441, %2334
  %2443 = call fastcc i64 @S_study_chunk(ptr noundef nonnull %18, ptr noundef nonnull %24, ptr noundef nonnull %15, ptr noundef nonnull %21, ptr noundef nonnull %2440, ptr noundef nonnull %17, i32 noundef -1, i32 noundef 0, i32 noundef %2442, i32 noundef 0)
  store i64 %2443, ptr %15, align 8, !tbaa !9
  %2444 = load i32, ptr %1670, align 8, !tbaa !185
  %2445 = and i32 %2444, 16384
  %2446 = icmp eq i32 %2445, 0
  %2447 = or i1 %1682, %2446
  br i1 %2447, label %2471, label %2448

2448:                                             ; preds = %2438
  %2449 = load volatile i32, ptr @PL_debug, align 4, !tbaa !73
  %2450 = and i32 %2449, 4
  %2451 = icmp eq i32 %2450, 0
  br i1 %2451, label %2457, label %2452

2452:                                             ; preds = %2448
  %2453 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !73
  %2454 = sext i32 %2453 to i64
  %2455 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !73
  %2456 = sext i32 %2455 to i64
  call void (ptr, ...) @Perl_deb(ptr noundef nonnull @.str.56, ptr noundef nonnull @.str.72, i64 noundef %2454, i64 noundef %2456, ptr noundef nonnull @.str.58, i32 noundef 7098) #15
  br label %2457

2457:                                             ; preds = %2452, %2448
  %2458 = load ptr, ptr @PL_scopestack_name, align 8, !tbaa !5
  %2459 = icmp eq ptr %2458, null
  br i1 %2459, label %2852, label %2460

2460:                                             ; preds = %2457
  %2461 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !73
  %2462 = add nsw i32 %2461, -1
  %2463 = sext i32 %2462 to i64
  %2464 = getelementptr inbounds ptr, ptr %2458, i64 %2463
  %2465 = load ptr, ptr %2464, align 8, !tbaa !5
  %2466 = icmp eq ptr %2465, @.str.55
  br i1 %2466, label %2852, label %2467

2467:                                             ; preds = %2460
  %2468 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %2465, ptr noundef nonnull dereferenceable(12) @.str.55) #18
  %2469 = icmp eq i32 %2468, 0
  br i1 %2469, label %2852, label %2470

2470:                                             ; preds = %2467
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.73, i32 noundef 7098) #15
  br label %2852

2471:                                             ; preds = %2438
  %2472 = load i32, ptr %376, align 8, !tbaa !109
  %2473 = icmp eq i32 %2472, 1
  %2474 = load ptr, ptr %1675, align 8
  %2475 = icmp eq ptr %2474, %1672
  %2476 = select i1 %2473, i1 %2475, i1 false
  %2477 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 4
  %2478 = load i64, ptr %2477, align 8
  %2479 = icmp eq i64 %2478, 0
  %2480 = select i1 %2476, i1 %2479, i1 false
  %2481 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 3
  %2482 = load i64, ptr %2481, align 8
  %2483 = icmp sgt i64 %2482, 0
  %2484 = select i1 %2480, i1 %2483, i1 false
  %2485 = load i32, ptr %368, align 4
  %2486 = icmp eq i32 %2485, 0
  %2487 = select i1 %2484, i1 %2486, i1 false
  br i1 %2487, label %2488, label %2495

2488:                                             ; preds = %2471
  %2489 = load i32, ptr %365, align 8, !tbaa !98
  %2490 = and i32 %2489, 132
  %2491 = icmp eq i32 %2490, 0
  br i1 %2491, label %2492, label %2495

2492:                                             ; preds = %2488
  %2493 = load i32, ptr %1356, align 8, !tbaa !123
  %2494 = or i32 %2493, 524288
  store i32 %2494, ptr %1356, align 8, !tbaa !123
  br label %2495

2495:                                             ; preds = %2492, %2488, %2471
  call fastcc void @S_scan_commit(ptr noundef nonnull %18, ptr noundef nonnull %17, ptr noundef nonnull %15, i32 noundef 0)
  %2496 = load i32, ptr %321, align 8, !tbaa !50
  %2497 = icmp eq i32 %2496, 0
  %2498 = load ptr, ptr %1673, align 8, !tbaa !178
  br i1 %2497, label %2501, label %2499

2499:                                             ; preds = %2495
  %2500 = call i64 @Perl_sv_len_utf8(ptr noundef %2498) #15
  br label %2505

2501:                                             ; preds = %2495
  %2502 = load ptr, ptr %2498, align 8, !tbaa !16
  %2503 = getelementptr inbounds %struct.xpv, ptr %2502, i64 0, i32 2
  %2504 = load i64, ptr %2503, align 8, !tbaa !38
  br label %2505

2505:                                             ; preds = %2501, %2499
  %2506 = phi i64 [ %2500, %2499 ], [ %2504, %2501 ]
  %2507 = load ptr, ptr %1672, align 8, !tbaa !176
  %2508 = load ptr, ptr %2507, align 8, !tbaa !16
  %2509 = getelementptr inbounds %struct.xpv, ptr %2508, i64 0, i32 2
  %2510 = load i64, ptr %2509, align 8, !tbaa !38
  %2511 = icmp eq i64 %2510, 0
  br i1 %2511, label %2512, label %2516

2512:                                             ; preds = %2505
  %2513 = load ptr, ptr %1673, align 8, !tbaa !178
  %2514 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 12
  %2515 = load i64, ptr %2514, align 8, !tbaa !186
  br label %2530

2516:                                             ; preds = %2505
  %2517 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 8
  %2518 = load i64, ptr %2517, align 8, !tbaa !187
  %2519 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 12
  %2520 = load i64, ptr %2519, align 8, !tbaa !186
  %2521 = icmp eq i64 %2518, %2520
  %2522 = load ptr, ptr %1673, align 8, !tbaa !178
  br i1 %2521, label %2523, label %2530

2523:                                             ; preds = %2516
  %2524 = load ptr, ptr %2522, align 8, !tbaa !16
  %2525 = getelementptr inbounds %struct.xpv, ptr %2524, i64 0, i32 2
  %2526 = load i64, ptr %2525, align 8, !tbaa !38
  %2527 = icmp eq i64 %2510, %2526
  br i1 %2527, label %2528, label %2530

2528:                                             ; preds = %2523
  %2529 = load ptr, ptr %1654, align 8, !tbaa !133
  br label %2600

2530:                                             ; preds = %2512, %2523, %2516
  %2531 = phi i64 [ %2515, %2512 ], [ %2518, %2523 ], [ %2520, %2516 ]
  %2532 = phi ptr [ %2513, %2512 ], [ %2522, %2523 ], [ %2522, %2516 ]
  %2533 = load ptr, ptr %1654, align 8, !tbaa !133
  %2534 = getelementptr inbounds %struct.reg_substr_data, ptr %2533, i64 0, i32 1, i64 1, i32 3
  %2535 = getelementptr inbounds %struct.reg_substr_data, ptr %2533, i64 0, i32 1, i64 1, i32 2
  %2536 = getelementptr inbounds %struct.reg_substr_data, ptr %2533, i64 0, i32 1, i64 1, i32 4
  %2537 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 15
  %2538 = load i64, ptr %2537, align 8, !tbaa !188
  %2539 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 12
  %2540 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 14
  %2541 = load ptr, ptr %2540, align 8, !tbaa !189
  %2542 = load i32, ptr %1670, align 8, !tbaa !185
  %2543 = and i32 %2542, 48
  %2544 = icmp eq i32 %2543, 0
  %2545 = and i32 %2542, 32
  %2546 = icmp ne i32 %2545, 0
  %2547 = load i32, ptr %18, align 8
  %2548 = load i32, ptr %365, align 8
  %2549 = icmp eq i64 %2506, 0
  br i1 %2549, label %2550, label %2559

2550:                                             ; preds = %2530
  br i1 %2544, label %2600, label %2551

2551:                                             ; preds = %2550
  %2552 = and i32 %2547, 1
  %2553 = icmp ne i32 %2552, 0
  %2554 = xor i1 %2546, true
  %2555 = select i1 %2554, i1 true, i1 %2553
  %2556 = and i32 %2548, 1024
  %2557 = icmp eq i32 %2556, 0
  %2558 = select i1 %2555, i1 %2557, i1 false
  br i1 %2558, label %2562, label %2600

2559:                                             ; preds = %2530
  %2560 = and i32 %2548, 1024
  %2561 = icmp eq i32 %2560, 0
  br i1 %2561, label %2562, label %2600

2562:                                             ; preds = %2559, %2551
  %2563 = getelementptr inbounds %struct.sv, ptr %2532, i64 0, i32 2
  %2564 = load i32, ptr %2563, align 4, !tbaa !13
  %2565 = and i32 %2564, 536870912
  %2566 = icmp eq i32 %2565, 0
  %2567 = select i1 %2566, ptr %2535, ptr %2534
  %2568 = select i1 %2566, ptr %2534, ptr %2535
  store ptr %2532, ptr %2567, align 8, !tbaa !5
  store ptr null, ptr %2568, align 8, !tbaa !5
  %2569 = icmp eq ptr %2541, null
  br i1 %2569, label %2572, label %2570

2570:                                             ; preds = %2562
  %2571 = load i64, ptr %2541, align 8, !tbaa !9
  br label %2572

2572:                                             ; preds = %2570, %2562
  %2573 = phi i64 [ %2571, %2570 ], [ %2506, %2562 ]
  %2574 = icmp ugt i32 %2564, -1073741825
  %2575 = zext i1 %2574 to i64
  %2576 = add i64 %2506, %2531
  %2577 = sub i64 %2538, %2576
  %2578 = add i64 %2577, %2575
  %2579 = add i64 %2578, %2573
  store i64 %2579, ptr %2536, align 8, !tbaa !9
  %2580 = and i32 %2547, 1
  %2581 = icmp eq i32 %2580, 0
  %2582 = select i1 %2546, i1 %2581, i1 false
  %2583 = select i1 %2544, i1 true, i1 %2582
  %2584 = select i1 %2583, i32 0, i32 15
  call void @Perl_fbm_compile(ptr noundef nonnull %2532, i32 noundef %2584) #15
  %2585 = load i64, ptr %2539, align 8, !tbaa !186
  %2586 = load i64, ptr %2537, align 8, !tbaa !188
  %2587 = sub nsw i64 %2585, %2586
  %2588 = load ptr, ptr %1654, align 8, !tbaa !133
  %2589 = getelementptr inbounds %struct.reg_substr_data, ptr %2588, i64 0, i32 1, i64 1
  store i64 %2587, ptr %2589, align 8, !tbaa !190
  %2590 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 13
  %2591 = load i64, ptr %2590, align 8, !tbaa !192
  %2592 = getelementptr inbounds %struct.reg_substr_data, ptr %2588, i64 0, i32 1, i64 1, i32 1
  %2593 = icmp eq i64 %2591, 9223372036854775807
  %2594 = sub nsw i64 %2591, %2586
  %2595 = select i1 %2593, i64 9223372036854775807, i64 %2594
  store i64 %2595, ptr %2592, align 8, !tbaa !193
  %2596 = load ptr, ptr %1673, align 8, !tbaa !178
  %2597 = getelementptr inbounds %struct.sv, ptr %2596, i64 0, i32 1
  %2598 = load i32, ptr %2597, align 8, !tbaa !37
  %2599 = add i32 %2598, 1
  store i32 %2599, ptr %2597, align 8, !tbaa !37
  br label %2603

2600:                                             ; preds = %2528, %2551, %2550, %2559
  %2601 = phi ptr [ %2529, %2528 ], [ %2533, %2551 ], [ %2533, %2550 ], [ %2533, %2559 ]
  %2602 = getelementptr inbounds %struct.reg_substr_data, ptr %2601, i64 0, i32 1, i64 1, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2602, i8 0, i64 16, i1 false)
  br label %2603

2603:                                             ; preds = %2600, %2572
  %2604 = phi ptr [ %2601, %2600 ], [ %2588, %2572 ]
  %2605 = phi i64 [ 0, %2600 ], [ %2506, %2572 ]
  %2606 = load i32, ptr %321, align 8, !tbaa !50
  %2607 = icmp eq i32 %2606, 0
  %2608 = load ptr, ptr %1672, align 8, !tbaa !176
  br i1 %2607, label %2613, label %2609

2609:                                             ; preds = %2603
  %2610 = call i64 @Perl_sv_len_utf8(ptr noundef %2608) #15
  %2611 = load ptr, ptr %1672, align 8, !tbaa !176
  %2612 = load ptr, ptr %1654, align 8, !tbaa !133
  br label %2617

2613:                                             ; preds = %2603
  %2614 = load ptr, ptr %2608, align 8, !tbaa !16
  %2615 = getelementptr inbounds %struct.xpv, ptr %2614, i64 0, i32 2
  %2616 = load i64, ptr %2615, align 8, !tbaa !38
  br label %2617

2617:                                             ; preds = %2613, %2609
  %2618 = phi ptr [ %2612, %2609 ], [ %2604, %2613 ]
  %2619 = phi ptr [ %2611, %2609 ], [ %2608, %2613 ]
  %2620 = phi i64 [ %2610, %2609 ], [ %2616, %2613 ]
  %2621 = getelementptr inbounds %struct.reg_substr_data, ptr %2618, i64 0, i32 1, i64 0, i32 3
  %2622 = getelementptr inbounds %struct.reg_substr_data, ptr %2618, i64 0, i32 1, i64 0, i32 2
  %2623 = getelementptr inbounds %struct.reg_substr_data, ptr %2618, i64 0, i32 1, i64 0, i32 4
  %2624 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 10
  %2625 = load i32, ptr %2624, align 8, !tbaa !194
  %2626 = sext i32 %2625 to i64
  %2627 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 8
  %2628 = load i64, ptr %2627, align 8, !tbaa !187
  %2629 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 9
  %2630 = load ptr, ptr %2629, align 8, !tbaa !195
  %2631 = load i32, ptr %1670, align 8, !tbaa !185
  %2632 = and i32 %2631, 12
  %2633 = icmp eq i32 %2632, 0
  %2634 = and i32 %2631, 8
  %2635 = icmp ne i32 %2634, 0
  %2636 = load i32, ptr %18, align 8
  %2637 = load i32, ptr %365, align 8
  %2638 = icmp eq i64 %2620, 0
  br i1 %2638, label %2639, label %2648

2639:                                             ; preds = %2617
  br i1 %2633, label %2684, label %2640

2640:                                             ; preds = %2639
  %2641 = and i32 %2636, 1
  %2642 = icmp ne i32 %2641, 0
  %2643 = xor i1 %2635, true
  %2644 = select i1 %2643, i1 true, i1 %2642
  %2645 = and i32 %2637, 1024
  %2646 = icmp eq i32 %2645, 0
  %2647 = select i1 %2644, i1 %2646, i1 false
  br i1 %2647, label %2651, label %2684

2648:                                             ; preds = %2617
  %2649 = and i32 %2637, 1024
  %2650 = icmp eq i32 %2649, 0
  br i1 %2650, label %2651, label %2684

2651:                                             ; preds = %2648, %2640
  %2652 = getelementptr inbounds %struct.sv, ptr %2619, i64 0, i32 2
  %2653 = load i32, ptr %2652, align 4, !tbaa !13
  %2654 = and i32 %2653, 536870912
  %2655 = icmp eq i32 %2654, 0
  %2656 = select i1 %2655, ptr %2622, ptr %2621
  %2657 = select i1 %2655, ptr %2621, ptr %2622
  store ptr %2619, ptr %2656, align 8, !tbaa !5
  store ptr null, ptr %2657, align 8, !tbaa !5
  %2658 = icmp eq ptr %2630, null
  br i1 %2658, label %2661, label %2659

2659:                                             ; preds = %2651
  %2660 = load i64, ptr %2630, align 8, !tbaa !9
  br label %2661

2661:                                             ; preds = %2659, %2651
  %2662 = phi i64 [ %2660, %2659 ], [ %2620, %2651 ]
  %2663 = icmp ugt i32 %2653, -1073741825
  %2664 = zext i1 %2663 to i64
  %2665 = add i64 %2628, %2620
  %2666 = sub i64 %2626, %2665
  %2667 = add i64 %2666, %2664
  %2668 = add i64 %2667, %2662
  store i64 %2668, ptr %2623, align 8, !tbaa !9
  %2669 = and i32 %2636, 1
  %2670 = icmp eq i32 %2669, 0
  %2671 = select i1 %2635, i1 %2670, i1 false
  %2672 = select i1 %2633, i1 true, i1 %2671
  %2673 = select i1 %2672, i32 0, i32 15
  call void @Perl_fbm_compile(ptr noundef nonnull %2619, i32 noundef %2673) #15
  %2674 = load i64, ptr %2627, align 8, !tbaa !187
  %2675 = load i32, ptr %2624, align 8, !tbaa !194
  %2676 = sext i32 %2675 to i64
  %2677 = sub nsw i64 %2674, %2676
  %2678 = load ptr, ptr %1654, align 8, !tbaa !133
  %2679 = getelementptr inbounds %struct.reg_substr_data, ptr %2678, i64 0, i32 1
  store i64 %2677, ptr %2679, align 8, !tbaa !190
  %2680 = load ptr, ptr %1672, align 8, !tbaa !176
  %2681 = getelementptr inbounds %struct.sv, ptr %2680, i64 0, i32 1
  %2682 = load i32, ptr %2681, align 8, !tbaa !37
  %2683 = add i32 %2682, 1
  store i32 %2683, ptr %2681, align 8, !tbaa !37
  br label %2685

2684:                                             ; preds = %2648, %2639, %2640
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2622, i8 0, i64 16, i1 false)
  br label %2685

2685:                                             ; preds = %2661, %2684
  %2686 = phi i64 [ %2620, %2661 ], [ 0, %2684 ]
  %2687 = load volatile i32, ptr @PL_debug, align 4, !tbaa !73
  %2688 = and i32 %2687, 4
  %2689 = icmp eq i32 %2688, 0
  br i1 %2689, label %2695, label %2690

2690:                                             ; preds = %2685
  %2691 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !73
  %2692 = sext i32 %2691 to i64
  %2693 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !73
  %2694 = sext i32 %2693 to i64
  call void (ptr, ...) @Perl_deb(ptr noundef nonnull @.str.56, ptr noundef nonnull @.str.72, i64 noundef %2692, i64 noundef %2694, ptr noundef nonnull @.str.58, i32 noundef 7160) #15
  br label %2695

2695:                                             ; preds = %2690, %2685
  %2696 = load ptr, ptr @PL_scopestack_name, align 8, !tbaa !5
  %2697 = icmp eq ptr %2696, null
  br i1 %2697, label %2709, label %2698

2698:                                             ; preds = %2695
  %2699 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !73
  %2700 = add nsw i32 %2699, -1
  %2701 = sext i32 %2700 to i64
  %2702 = getelementptr inbounds ptr, ptr %2696, i64 %2701
  %2703 = load ptr, ptr %2702, align 8, !tbaa !5
  %2704 = icmp eq ptr %2703, @.str.55
  br i1 %2704, label %2709, label %2705

2705:                                             ; preds = %2698
  %2706 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %2703, ptr noundef nonnull dereferenceable(12) @.str.55) #18
  %2707 = icmp eq i32 %2706, 0
  br i1 %2707, label %2709, label %2708

2708:                                             ; preds = %2705
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.73, i32 noundef 7160) #15
  br label %2709

2709:                                             ; preds = %2708, %2705, %2698, %2695
  call void @Perl_pop_scope() #15
  %2710 = load ptr, ptr %1663, align 8, !tbaa !140
  %2711 = icmp eq ptr %2710, null
  br i1 %2711, label %2718, label %2712

2712:                                             ; preds = %2709
  %2713 = getelementptr inbounds %struct.regnode, ptr %2710, i64 0, i32 1
  %2714 = load i8, ptr %2713, align 1, !tbaa !141
  %2715 = and i8 %2714, -2
  %2716 = icmp eq i8 %2715, 16
  br i1 %2716, label %2717, label %2718

2717:                                             ; preds = %2712
  store ptr null, ptr %1663, align 8, !tbaa !140
  br label %2718

2718:                                             ; preds = %2712, %2717, %2709
  %2719 = load ptr, ptr %1654, align 8, !tbaa !133
  %2720 = getelementptr inbounds %struct.reg_substr_data, ptr %2719, i64 0, i32 1, i64 0, i32 2
  %2721 = load ptr, ptr %2720, align 8, !tbaa !196
  %2722 = icmp eq ptr %2721, null
  br i1 %2722, label %2723, label %2727

2723:                                             ; preds = %2718
  %2724 = getelementptr inbounds %struct.reg_substr_data, ptr %2719, i64 0, i32 1, i64 0, i32 3
  %2725 = load ptr, ptr %2724, align 8, !tbaa !197
  %2726 = icmp eq ptr %2725, null
  br i1 %2726, label %2732, label %2727

2727:                                             ; preds = %2723, %2718
  %2728 = getelementptr inbounds %struct.reg_substr_data, ptr %2719, i64 0, i32 1
  %2729 = load i64, ptr %2728, align 8, !tbaa !190
  %2730 = icmp ne i64 %2729, 0
  %2731 = and i1 %2328, %2730
  br i1 %2731, label %2733, label %2801

2732:                                             ; preds = %2723
  br i1 %2328, label %2733, label %2801

2733:                                             ; preds = %2727, %2732
  %2734 = load ptr, ptr %1668, align 8, !tbaa !183
  %2735 = load i8, ptr %2734, align 8, !tbaa !198
  %2736 = and i8 %2735, 1
  %2737 = icmp eq i8 %2736, 0
  br i1 %2737, label %2738, label %2801

2738:                                             ; preds = %2733
  %2739 = call fastcc zeroext i1 @S_is_ssc_worth_it(ptr noundef nonnull %18, ptr noundef nonnull %2734)
  br i1 %2739, label %2740, label %2801

2740:                                             ; preds = %2738
  %2741 = load ptr, ptr %1630, align 8, !tbaa !130
  %2742 = getelementptr inbounds %struct.regexp_internal, ptr %2741, i64 0, i32 3
  %2743 = load ptr, ptr %2742, align 8, !tbaa !147
  %2744 = icmp eq ptr %2743, null
  br i1 %2744, label %2747, label %2745

2745:                                             ; preds = %2740
  %2746 = load i32, ptr %2743, align 8, !tbaa !156
  br label %2747

2747:                                             ; preds = %2745, %2740
  %2748 = phi i32 [ %2746, %2745 ], [ 0, %2740 ]
  %2749 = add i32 %2748, 1
  %2750 = zext i32 %2748 to i64
  %2751 = shl nuw nsw i64 %2750, 3
  %2752 = add nuw nsw i64 %2751, 24
  %2753 = call ptr @Perl_safesysrealloc(ptr noundef %2743, i64 noundef %2752) #15
  %2754 = load ptr, ptr %1630, align 8, !tbaa !130
  %2755 = getelementptr inbounds %struct.regexp_internal, ptr %2754, i64 0, i32 3
  store ptr %2753, ptr %2755, align 8, !tbaa !147
  %2756 = icmp eq i32 %2748, 0
  br i1 %2756, label %2762, label %2757

2757:                                             ; preds = %2747
  %2758 = getelementptr inbounds %struct.reg_data, ptr %2753, i64 0, i32 1
  %2759 = load ptr, ptr %2758, align 8, !tbaa !158
  %2760 = zext i32 %2749 to i64
  %2761 = call ptr @Perl_safesysrealloc(ptr noundef %2759, i64 noundef %2760) #15
  br label %2764

2762:                                             ; preds = %2747
  %2763 = call ptr @Perl_safesysmalloc(i64 noundef 1) #15
  br label %2764

2764:                                             ; preds = %2757, %2762
  %2765 = phi ptr [ %2761, %2757 ], [ %2763, %2762 ]
  %2766 = load ptr, ptr %1630, align 8, !tbaa !130
  %2767 = getelementptr inbounds %struct.regexp_internal, ptr %2766, i64 0, i32 3
  %2768 = load ptr, ptr %2767, align 8, !tbaa !147
  %2769 = getelementptr inbounds %struct.reg_data, ptr %2768, i64 0, i32 1
  store ptr %2765, ptr %2769, align 8, !tbaa !158
  store i32 %2749, ptr %2768, align 8, !tbaa !156
  %2770 = getelementptr inbounds i8, ptr %2765, i64 %2750
  store i8 102, ptr %2770, align 1
  %2771 = load ptr, ptr %1668, align 8, !tbaa !183
  call fastcc void @S_ssc_finalize(ptr noundef nonnull %18, ptr noundef %2771)
  %2772 = call ptr @Perl_safesysmalloc(i64 noundef 56) #15
  %2773 = load ptr, ptr %1630, align 8, !tbaa !130
  %2774 = getelementptr inbounds %struct.regexp_internal, ptr %2773, i64 0, i32 3
  %2775 = load ptr, ptr %2774, align 8, !tbaa !147
  %2776 = getelementptr inbounds %struct.reg_data, ptr %2775, i64 0, i32 2, i64 %2750
  store ptr %2772, ptr %2776, align 8, !tbaa !5
  %2777 = load ptr, ptr %1630, align 8, !tbaa !130
  %2778 = getelementptr inbounds %struct.regexp_internal, ptr %2777, i64 0, i32 3
  %2779 = load ptr, ptr %2778, align 8, !tbaa !147
  %2780 = getelementptr inbounds %struct.reg_data, ptr %2779, i64 0, i32 2, i64 %2750
  %2781 = load ptr, ptr %2780, align 8, !tbaa !5
  %2782 = load ptr, ptr %1668, align 8, !tbaa !183
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %2781, ptr noundef nonnull align 8 dereferenceable(56) %2782, i64 56, i1 false), !tbaa.struct !199
  %2783 = load ptr, ptr %1630, align 8, !tbaa !130
  %2784 = getelementptr inbounds %struct.regexp_internal, ptr %2783, i64 0, i32 3
  %2785 = load ptr, ptr %2784, align 8, !tbaa !147
  %2786 = getelementptr inbounds %struct.reg_data, ptr %2785, i64 0, i32 2, i64 %2750
  %2787 = load ptr, ptr %2786, align 8, !tbaa !5
  store ptr %2787, ptr %1663, align 8, !tbaa !140
  %2788 = load i32, ptr %1577, align 4, !tbaa !125
  %2789 = and i32 %2788, -2
  store i32 %2789, ptr %1577, align 4, !tbaa !125
  %2790 = load volatile i64, ptr %20, align 8, !tbaa !9
  %2791 = and i64 %2790, 255
  %2792 = icmp eq i64 %2791, 0
  br i1 %2792, label %2800, label %2793

2793:                                             ; preds = %2764
  %2794 = call ptr @Perl_sv_newmortal() #15
  %2795 = load ptr, ptr %1668, align 8, !tbaa !183
  call void @my_regprop(ptr noundef nonnull %1320, ptr noundef %2794, ptr noundef %2795, ptr noundef null, ptr noundef nonnull %18)
  %2796 = call ptr @Perl_PerlIO_stderr() #15
  %2797 = getelementptr inbounds %struct.sv, ptr %2794, i64 0, i32 3
  %2798 = load ptr, ptr %2797, align 8, !tbaa !17
  %2799 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2796, ptr noundef nonnull @.str.75, ptr noundef %2798) #15
  br label %2800

2800:                                             ; preds = %2793, %2764
  store ptr null, ptr %1668, align 8, !tbaa !183
  br label %2801

2801:                                             ; preds = %2800, %2738, %2733, %2732, %2727
  %2802 = icmp ugt i64 %2686, %2605
  %2803 = load ptr, ptr %1654, align 8, !tbaa !133
  %2804 = getelementptr inbounds %struct.reg_substr_data, ptr %2803, i64 0, i32 1, i64 2, i32 4
  %2805 = getelementptr inbounds %struct.reg_substr_data, ptr %2803, i64 0, i32 1, i64 2, i32 2
  %2806 = getelementptr inbounds %struct.reg_substr_data, ptr %2803, i64 0, i32 1, i64 2, i32 3
  br i1 %2802, label %2807, label %2823

2807:                                             ; preds = %2801
  store i8 0, ptr %2803, align 8, !tbaa !200
  %2808 = getelementptr inbounds %struct.reg_substr_data, ptr %2803, i64 0, i32 1, i64 0, i32 4
  %2809 = load i64, ptr %2808, align 8, !tbaa !202
  store i64 %2809, ptr %2804, align 8, !tbaa !202
  %2810 = getelementptr inbounds %struct.reg_substr_data, ptr %2803, i64 0, i32 1, i64 0, i32 2
  %2811 = load ptr, ptr %2810, align 8, !tbaa !196
  store ptr %2811, ptr %2805, align 8, !tbaa !196
  %2812 = getelementptr inbounds %struct.reg_substr_data, ptr %2803, i64 0, i32 1, i64 0, i32 3
  %2813 = load ptr, ptr %2812, align 8, !tbaa !197
  store ptr %2813, ptr %2806, align 8, !tbaa !197
  %2814 = getelementptr inbounds %struct.reg_substr_data, ptr %2803, i64 0, i32 1
  %2815 = load i64, ptr %2814, align 8, !tbaa !190
  %2816 = getelementptr inbounds %struct.reg_substr_data, ptr %2803, i64 0, i32 1, i64 2, i32 1
  store i64 %2815, ptr %2816, align 8, !tbaa !193
  %2817 = getelementptr inbounds %struct.reg_substr_data, ptr %2803, i64 0, i32 1, i64 2
  store i64 %2815, ptr %2817, align 8, !tbaa !190
  %2818 = load i32, ptr %1577, align 4, !tbaa !125
  %2819 = and i32 %2818, 6144
  %2820 = icmp eq i32 %2819, 0
  br i1 %2820, label %2833, label %2821

2821:                                             ; preds = %2807
  %2822 = or i32 %2818, 64
  store i32 %2822, ptr %1577, align 4, !tbaa !125
  br label %2833

2823:                                             ; preds = %2801
  store i8 1, ptr %2803, align 8, !tbaa !200
  %2824 = getelementptr inbounds %struct.reg_substr_data, ptr %2803, i64 0, i32 1, i64 1, i32 4
  %2825 = load i64, ptr %2824, align 8, !tbaa !202
  store i64 %2825, ptr %2804, align 8, !tbaa !202
  %2826 = getelementptr inbounds %struct.reg_substr_data, ptr %2803, i64 0, i32 1, i64 1, i32 2
  %2827 = load ptr, ptr %2826, align 8, !tbaa !196
  store ptr %2827, ptr %2805, align 8, !tbaa !196
  %2828 = getelementptr inbounds %struct.reg_substr_data, ptr %2803, i64 0, i32 1, i64 1, i32 3
  %2829 = load ptr, ptr %2828, align 8, !tbaa !197
  store ptr %2829, ptr %2806, align 8, !tbaa !197
  %2830 = getelementptr inbounds %struct.reg_substr_data, ptr %2803, i64 0, i32 1, i64 1
  %2831 = getelementptr inbounds %struct.reg_substr_data, ptr %2803, i64 0, i32 1, i64 2
  %2832 = load <2 x i64>, ptr %2830, align 8, !tbaa !9
  store <2 x i64> %2832, ptr %2831, align 8, !tbaa !9
  br label %2833

2833:                                             ; preds = %2807, %2821, %2823
  %2834 = phi ptr [ %2813, %2807 ], [ %2813, %2821 ], [ %2829, %2823 ]
  %2835 = phi ptr [ %2811, %2807 ], [ %2811, %2821 ], [ %2827, %2823 ]
  %2836 = icmp eq ptr %2835, null
  br i1 %2836, label %2837, label %2839

2837:                                             ; preds = %2833
  %2838 = icmp eq ptr %2834, null
  br i1 %2838, label %2848, label %2839

2839:                                             ; preds = %2837, %2833
  %2840 = phi ptr [ %2835, %2833 ], [ %2834, %2837 ]
  %2841 = load i32, ptr %1356, align 8, !tbaa !123
  %2842 = or i32 %2841, 6291456
  store i32 %2842, ptr %1356, align 8, !tbaa !123
  %2843 = getelementptr inbounds %struct.sv, ptr %2840, i64 0, i32 2
  %2844 = load i32, ptr %2843, align 4, !tbaa !13
  %2845 = icmp ugt i32 %2844, -1073741825
  br i1 %2845, label %2846, label %2848

2846:                                             ; preds = %2839
  %2847 = or i32 %2841, 14680064
  store i32 %2847, ptr %1356, align 8, !tbaa !123
  br label %2848

2848:                                             ; preds = %2837, %2846, %2839
  %2849 = getelementptr inbounds %struct.reg_substr_data, ptr %2803, i64 0, i32 1
  %2850 = load i64, ptr %2849, align 8, !tbaa !190
  %2851 = getelementptr inbounds %struct.reg_substr_data, ptr %2803, i64 0, i32 1, i64 0, i32 1
  store i64 %2850, ptr %2851, align 8, !tbaa !193
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %24) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %23) #15
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %22) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %21) #15
  br label %3051

2852:                                             ; preds = %2457, %2460, %2467, %2470
  call void @Perl_pop_scope() #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %24) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %23) #15
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %22) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %21) #15
  br label %2853

2853:                                             ; preds = %2852, %3050
  br label %1681

2854:                                             ; preds = %1719
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %25) #15
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %26) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %27) #15
  store i64 0, ptr %27, align 8, !tbaa !9
  %2855 = load volatile i64, ptr %20, align 8, !tbaa !9
  %2856 = and i64 %2855, 1
  %2857 = icmp eq i64 %2856, 0
  br i1 %2857, label %2861, label %2858

2858:                                             ; preds = %2854
  %2859 = call ptr @Perl_PerlIO_stderr() #15
  %2860 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2859, ptr noundef nonnull @.str.76) #15
  br label %2861

2861:                                             ; preds = %2858, %2854
  store ptr %1639, ptr %13, align 8, !tbaa !5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %26, i8 0, i64 56, i1 false)
  store i8 19, ptr %1664, align 1, !tbaa !181
  store i16 1, ptr %1665, align 2, !tbaa !182
  store i32 -1, ptr %1666, align 4, !tbaa !148
  call fastcc void @S_ssc_anything(ptr noundef nonnull %26)
  %2862 = load i32, ptr %323, align 8, !tbaa !52
  %2863 = icmp eq i32 %2862, 0
  %2864 = select i1 %2863, i32 0, i32 536870911
  store i32 %2864, ptr %1667, align 8
  store ptr %26, ptr %1668, align 8, !tbaa !183
  store ptr %27, ptr %1669, align 8, !tbaa !184
  %2865 = load volatile i64, ptr %20, align 8, !tbaa !9
  %2866 = and i64 %2865, 1048578
  %2867 = icmp eq i64 %2866, 1048578
  br i1 %2867, label %2868, label %2968

2868:                                             ; preds = %2861
  %2869 = call ptr @Perl_PerlIO_stderr() #15
  %2870 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2869, ptr noundef nonnull @.str.59) #15
  %2871 = load i32, ptr %365, align 8, !tbaa !98
  %2872 = and i32 %2871, 1
  %2873 = icmp eq i32 %2872, 0
  br i1 %2873, label %2878, label %2874

2874:                                             ; preds = %2868
  %2875 = call ptr @Perl_PerlIO_stderr() #15
  %2876 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2875, ptr noundef nonnull @.str.60) #15
  %2877 = load i32, ptr %365, align 8, !tbaa !98
  br label %2878

2878:                                             ; preds = %2874, %2868
  %2879 = phi i32 [ %2877, %2874 ], [ %2871, %2868 ]
  %2880 = and i32 %2879, 2
  %2881 = icmp eq i32 %2880, 0
  br i1 %2881, label %2886, label %2882

2882:                                             ; preds = %2878
  %2883 = call ptr @Perl_PerlIO_stderr() #15
  %2884 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2883, ptr noundef nonnull @.str.61) #15
  %2885 = load i32, ptr %365, align 8, !tbaa !98
  br label %2886

2886:                                             ; preds = %2882, %2878
  %2887 = phi i32 [ %2885, %2882 ], [ %2879, %2878 ]
  %2888 = and i32 %2887, 4
  %2889 = icmp eq i32 %2888, 0
  br i1 %2889, label %2894, label %2890

2890:                                             ; preds = %2886
  %2891 = call ptr @Perl_PerlIO_stderr() #15
  %2892 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2891, ptr noundef nonnull @.str.62) #15
  %2893 = load i32, ptr %365, align 8, !tbaa !98
  br label %2894

2894:                                             ; preds = %2890, %2886
  %2895 = phi i32 [ %2893, %2890 ], [ %2887, %2886 ]
  %2896 = and i32 %2895, 16
  %2897 = icmp eq i32 %2896, 0
  br i1 %2897, label %2902, label %2898

2898:                                             ; preds = %2894
  %2899 = call ptr @Perl_PerlIO_stderr() #15
  %2900 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2899, ptr noundef nonnull @.str.63) #15
  %2901 = load i32, ptr %365, align 8, !tbaa !98
  br label %2902

2902:                                             ; preds = %2898, %2894
  %2903 = phi i32 [ %2901, %2898 ], [ %2895, %2894 ]
  %2904 = and i32 %2903, 32
  %2905 = icmp eq i32 %2904, 0
  br i1 %2905, label %2910, label %2906

2906:                                             ; preds = %2902
  %2907 = call ptr @Perl_PerlIO_stderr() #15
  %2908 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2907, ptr noundef nonnull @.str.64) #15
  %2909 = load i32, ptr %365, align 8, !tbaa !98
  br label %2910

2910:                                             ; preds = %2906, %2902
  %2911 = phi i32 [ %2909, %2906 ], [ %2903, %2902 ]
  %2912 = and i32 %2911, 64
  %2913 = icmp eq i32 %2912, 0
  br i1 %2913, label %2918, label %2914

2914:                                             ; preds = %2910
  %2915 = call ptr @Perl_PerlIO_stderr() #15
  %2916 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2915, ptr noundef nonnull @.str.65) #15
  %2917 = load i32, ptr %365, align 8, !tbaa !98
  br label %2918

2918:                                             ; preds = %2914, %2910
  %2919 = phi i32 [ %2917, %2914 ], [ %2911, %2910 ]
  %2920 = and i32 %2919, 128
  %2921 = icmp eq i32 %2920, 0
  br i1 %2921, label %2926, label %2922

2922:                                             ; preds = %2918
  %2923 = call ptr @Perl_PerlIO_stderr() #15
  %2924 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2923, ptr noundef nonnull @.str.66) #15
  %2925 = load i32, ptr %365, align 8, !tbaa !98
  br label %2926

2926:                                             ; preds = %2922, %2918
  %2927 = phi i32 [ %2925, %2922 ], [ %2919, %2918 ]
  %2928 = and i32 %2927, 256
  %2929 = icmp eq i32 %2928, 0
  br i1 %2929, label %2934, label %2930

2930:                                             ; preds = %2926
  %2931 = call ptr @Perl_PerlIO_stderr() #15
  %2932 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2931, ptr noundef nonnull @.str.67) #15
  %2933 = load i32, ptr %365, align 8, !tbaa !98
  br label %2934

2934:                                             ; preds = %2930, %2926
  %2935 = phi i32 [ %2933, %2930 ], [ %2927, %2926 ]
  %2936 = and i32 %2935, 512
  %2937 = icmp eq i32 %2936, 0
  br i1 %2937, label %2942, label %2938

2938:                                             ; preds = %2934
  %2939 = call ptr @Perl_PerlIO_stderr() #15
  %2940 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2939, ptr noundef nonnull @.str.68) #15
  %2941 = load i32, ptr %365, align 8, !tbaa !98
  br label %2942

2942:                                             ; preds = %2938, %2934
  %2943 = phi i32 [ %2941, %2938 ], [ %2935, %2934 ]
  %2944 = and i32 %2943, 1024
  %2945 = icmp eq i32 %2944, 0
  br i1 %2945, label %2950, label %2946

2946:                                             ; preds = %2942
  %2947 = call ptr @Perl_PerlIO_stderr() #15
  %2948 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2947, ptr noundef nonnull @.str.69) #15
  %2949 = load i32, ptr %365, align 8, !tbaa !98
  br label %2950

2950:                                             ; preds = %2946, %2942
  %2951 = phi i32 [ %2949, %2946 ], [ %2943, %2942 ]
  %2952 = and i32 %2951, 2048
  %2953 = icmp eq i32 %2952, 0
  br i1 %2953, label %2958, label %2954

2954:                                             ; preds = %2950
  %2955 = call ptr @Perl_PerlIO_stderr() #15
  %2956 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2955, ptr noundef nonnull @.str.70) #15
  %2957 = load i32, ptr %365, align 8, !tbaa !98
  br label %2958

2958:                                             ; preds = %2954, %2950
  %2959 = phi i32 [ %2957, %2954 ], [ %2951, %2950 ]
  %2960 = and i32 %2959, 4096
  %2961 = icmp eq i32 %2960, 0
  br i1 %2961, label %2965, label %2962

2962:                                             ; preds = %2958
  %2963 = call ptr @Perl_PerlIO_stderr() #15
  %2964 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2963, ptr noundef nonnull @.str.71) #15
  br label %2965

2965:                                             ; preds = %2962, %2958
  %2966 = call ptr @Perl_PerlIO_stderr() #15
  %2967 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2966, ptr noundef nonnull @.str.53) #15
  br label %2968

2968:                                             ; preds = %2965, %2861
  %2969 = load i64, ptr %378, align 8, !tbaa !111
  %2970 = getelementptr inbounds %struct.regnode, ptr %1639, i64 %2969
  %2971 = select i1 %1682, i32 75776, i32 10240
  %2972 = call fastcc i64 @S_study_chunk(ptr noundef nonnull %18, ptr noundef nonnull %13, ptr noundef nonnull %15, ptr noundef nonnull %25, ptr noundef nonnull %2970, ptr noundef nonnull %17, i32 noundef -1, i32 noundef 0, i32 noundef %2971, i32 noundef 0)
  store i64 %2972, ptr %15, align 8, !tbaa !9
  %2973 = load i32, ptr %1670, align 8, !tbaa !185
  %2974 = and i32 %2973, 16384
  %2975 = icmp eq i32 %2974, 0
  %2976 = or i1 %1682, %2975
  br i1 %2976, label %2977, label %3050

2977:                                             ; preds = %2968
  %2978 = load ptr, ptr %1654, align 8, !tbaa !133
  %2979 = getelementptr inbounds %struct.reg_substr_data, ptr %2978, i64 0, i32 1, i64 1, i32 2
  %2980 = getelementptr inbounds %struct.reg_substr_data, ptr %2978, i64 0, i32 1, i64 0, i32 2
  %2981 = getelementptr inbounds %struct.reg_substr_data, ptr %2978, i64 0, i32 1, i64 2, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2980, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2979, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2981, i8 0, i64 16, i1 false)
  %2982 = load ptr, ptr %1668, align 8, !tbaa !183
  %2983 = load i8, ptr %2982, align 8, !tbaa !198
  %2984 = and i8 %2983, 1
  %2985 = icmp eq i8 %2984, 0
  br i1 %2985, label %2986, label %3049

2986:                                             ; preds = %2977
  %2987 = call fastcc zeroext i1 @S_is_ssc_worth_it(ptr noundef nonnull %18, ptr noundef nonnull %2982)
  br i1 %2987, label %2988, label %3049

2988:                                             ; preds = %2986
  %2989 = load ptr, ptr %1630, align 8, !tbaa !130
  %2990 = getelementptr inbounds %struct.regexp_internal, ptr %2989, i64 0, i32 3
  %2991 = load ptr, ptr %2990, align 8, !tbaa !147
  %2992 = icmp eq ptr %2991, null
  br i1 %2992, label %2995, label %2993

2993:                                             ; preds = %2988
  %2994 = load i32, ptr %2991, align 8, !tbaa !156
  br label %2995

2995:                                             ; preds = %2993, %2988
  %2996 = phi i32 [ %2994, %2993 ], [ 0, %2988 ]
  %2997 = add i32 %2996, 1
  %2998 = zext i32 %2996 to i64
  %2999 = shl nuw nsw i64 %2998, 3
  %3000 = add nuw nsw i64 %2999, 24
  %3001 = call ptr @Perl_safesysrealloc(ptr noundef %2991, i64 noundef %3000) #15
  %3002 = load ptr, ptr %1630, align 8, !tbaa !130
  %3003 = getelementptr inbounds %struct.regexp_internal, ptr %3002, i64 0, i32 3
  store ptr %3001, ptr %3003, align 8, !tbaa !147
  %3004 = icmp eq i32 %2996, 0
  br i1 %3004, label %3010, label %3005

3005:                                             ; preds = %2995
  %3006 = getelementptr inbounds %struct.reg_data, ptr %3001, i64 0, i32 1
  %3007 = load ptr, ptr %3006, align 8, !tbaa !158
  %3008 = zext i32 %2997 to i64
  %3009 = call ptr @Perl_safesysrealloc(ptr noundef %3007, i64 noundef %3008) #15
  br label %3012

3010:                                             ; preds = %2995
  %3011 = call ptr @Perl_safesysmalloc(i64 noundef 1) #15
  br label %3012

3012:                                             ; preds = %3005, %3010
  %3013 = phi ptr [ %3009, %3005 ], [ %3011, %3010 ]
  %3014 = load ptr, ptr %1630, align 8, !tbaa !130
  %3015 = getelementptr inbounds %struct.regexp_internal, ptr %3014, i64 0, i32 3
  %3016 = load ptr, ptr %3015, align 8, !tbaa !147
  %3017 = getelementptr inbounds %struct.reg_data, ptr %3016, i64 0, i32 1
  store ptr %3013, ptr %3017, align 8, !tbaa !158
  store i32 %2997, ptr %3016, align 8, !tbaa !156
  %3018 = getelementptr inbounds i8, ptr %3013, i64 %2998
  store i8 102, ptr %3018, align 1
  %3019 = load ptr, ptr %1668, align 8, !tbaa !183
  call fastcc void @S_ssc_finalize(ptr noundef nonnull %18, ptr noundef %3019)
  %3020 = call ptr @Perl_safesysmalloc(i64 noundef 56) #15
  %3021 = load ptr, ptr %1630, align 8, !tbaa !130
  %3022 = getelementptr inbounds %struct.regexp_internal, ptr %3021, i64 0, i32 3
  %3023 = load ptr, ptr %3022, align 8, !tbaa !147
  %3024 = getelementptr inbounds %struct.reg_data, ptr %3023, i64 0, i32 2, i64 %2998
  store ptr %3020, ptr %3024, align 8, !tbaa !5
  %3025 = load ptr, ptr %1630, align 8, !tbaa !130
  %3026 = getelementptr inbounds %struct.regexp_internal, ptr %3025, i64 0, i32 3
  %3027 = load ptr, ptr %3026, align 8, !tbaa !147
  %3028 = getelementptr inbounds %struct.reg_data, ptr %3027, i64 0, i32 2, i64 %2998
  %3029 = load ptr, ptr %3028, align 8, !tbaa !5
  %3030 = load ptr, ptr %1668, align 8, !tbaa !183
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %3029, ptr noundef nonnull align 8 dereferenceable(56) %3030, i64 56, i1 false), !tbaa.struct !199
  %3031 = load ptr, ptr %1630, align 8, !tbaa !130
  %3032 = getelementptr inbounds %struct.regexp_internal, ptr %3031, i64 0, i32 3
  %3033 = load ptr, ptr %3032, align 8, !tbaa !147
  %3034 = getelementptr inbounds %struct.reg_data, ptr %3033, i64 0, i32 2, i64 %2998
  %3035 = load ptr, ptr %3034, align 8, !tbaa !5
  store ptr %3035, ptr %1663, align 8, !tbaa !140
  %3036 = load i32, ptr %1577, align 4, !tbaa !125
  %3037 = and i32 %3036, -2
  store i32 %3037, ptr %1577, align 4, !tbaa !125
  %3038 = load volatile i64, ptr %20, align 8, !tbaa !9
  %3039 = and i64 %3038, 255
  %3040 = icmp eq i64 %3039, 0
  br i1 %3040, label %3048, label %3041

3041:                                             ; preds = %3012
  %3042 = call ptr @Perl_sv_newmortal() #15
  %3043 = load ptr, ptr %1668, align 8, !tbaa !183
  call void @my_regprop(ptr noundef nonnull %1320, ptr noundef %3042, ptr noundef %3043, ptr noundef null, ptr noundef nonnull %18)
  %3044 = call ptr @Perl_PerlIO_stderr() #15
  %3045 = getelementptr inbounds %struct.sv, ptr %3042, i64 0, i32 3
  %3046 = load ptr, ptr %3045, align 8, !tbaa !17
  %3047 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3044, ptr noundef nonnull @.str.75, ptr noundef %3046) #15
  br label %3048

3048:                                             ; preds = %3041, %3012
  store ptr null, ptr %1668, align 8, !tbaa !183
  br label %3049

3049:                                             ; preds = %3048, %2986, %2977
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %27) #15
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %26) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %25) #15
  br label %3051

3050:                                             ; preds = %2968
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %27) #15
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %26) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %25) #15
  br label %2853

3051:                                             ; preds = %3049, %2848
  %3052 = load i32, ptr %365, align 8, !tbaa !98
  %3053 = and i32 %3052, 4096
  %3054 = icmp eq i32 %3053, 0
  br i1 %3054, label %3058, label %3055

3055:                                             ; preds = %3051
  %3056 = load i32, ptr %1356, align 8, !tbaa !123
  %3057 = or i32 %3056, 262144
  store i32 %3057, ptr %1356, align 8, !tbaa !123
  br label %3060

3058:                                             ; preds = %3051
  %3059 = load i64, ptr %366, align 8, !tbaa !99
  br label %3060

3060:                                             ; preds = %3055, %3058
  %3061 = phi i64 [ %3059, %3058 ], [ 32767, %3055 ]
  %3062 = getelementptr inbounds %struct.regexp, ptr %1320, i64 0, i32 23
  store i64 %3061, ptr %3062, align 8
  %3063 = load volatile i64, ptr %20, align 8, !tbaa !9
  %3064 = and i64 %3063, 2
  %3065 = icmp eq i64 %3064, 0
  br i1 %3065, label %3072, label %3066

3066:                                             ; preds = %3060
  %3067 = call ptr @Perl_PerlIO_stderr() #15
  %3068 = load i64, ptr %15, align 8, !tbaa !9
  %3069 = load i64, ptr %1661, align 8, !tbaa !136
  %3070 = load i64, ptr %366, align 8, !tbaa !99
  %3071 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3067, ptr noundef nonnull @.str.77, i64 noundef %3068, i64 noundef %3069, i64 noundef %3070) #15
  br label %3072

3072:                                             ; preds = %3066, %3060
  %3073 = load i64, ptr %15, align 8, !tbaa !9
  %3074 = getelementptr inbounds %struct.regexp, ptr %1320, i64 0, i32 9
  store i64 %3073, ptr %3074, align 8, !tbaa !203
  %3075 = load i64, ptr %1661, align 8, !tbaa !136
  %3076 = icmp slt i64 %3075, %3073
  br i1 %3076, label %3077, label %3078

3077:                                             ; preds = %3072
  store i64 %3073, ptr %1661, align 8, !tbaa !136
  br label %3078

3078:                                             ; preds = %3077, %3072
  %3079 = load i32, ptr %365, align 8, !tbaa !98
  %3080 = and i32 %3079, 4
  %3081 = icmp eq i32 %3080, 0
  br i1 %3081, label %3085, label %3082

3082:                                             ; preds = %3078
  %3083 = load i32, ptr %1577, align 4, !tbaa !125
  %3084 = or i32 %3083, 256
  store i32 %3084, ptr %1577, align 4, !tbaa !125
  br label %3085

3085:                                             ; preds = %3082, %3078
  %3086 = and i32 %3079, 2
  %3087 = icmp eq i32 %3086, 0
  br i1 %3087, label %3091, label %3088

3088:                                             ; preds = %3085
  %3089 = load i32, ptr %1356, align 8, !tbaa !123
  %3090 = or i32 %3089, 65536
  store i32 %3090, ptr %1356, align 8, !tbaa !123
  br label %3091

3091:                                             ; preds = %3088, %3085
  %3092 = load i32, ptr %71, align 8, !tbaa !24
  %3093 = icmp eq i32 %3092, 0
  br i1 %3093, label %3097, label %3094

3094:                                             ; preds = %3091
  %3095 = load i32, ptr %1356, align 8, !tbaa !123
  %3096 = or i32 %3095, 131072
  store i32 %3096, ptr %1356, align 8, !tbaa !123
  br label %3097

3097:                                             ; preds = %3094, %3091
  %3098 = and i32 %3079, 16
  %3099 = icmp eq i32 %3098, 0
  br i1 %3099, label %3103, label %3100

3100:                                             ; preds = %3097
  %3101 = load i32, ptr %1577, align 4, !tbaa !125
  %3102 = or i32 %3101, 128
  store i32 %3102, ptr %1577, align 4, !tbaa !125
  br label %3103

3103:                                             ; preds = %3100, %3097
  %3104 = and i32 %3079, 128
  %3105 = icmp eq i32 %3104, 0
  br i1 %3105, label %3111, label %3106

3106:                                             ; preds = %3103
  %3107 = load i32, ptr %1577, align 4, !tbaa !125
  %3108 = or i32 %3107, 8
  store i32 %3108, ptr %1577, align 4, !tbaa !125
  %3109 = load i32, ptr %1356, align 8, !tbaa !123
  %3110 = or i32 %3109, 65536
  store i32 %3110, ptr %1356, align 8, !tbaa !123
  br label %3111

3111:                                             ; preds = %3106, %3103
  %3112 = and i32 %3079, 256
  %3113 = icmp eq i32 %3112, 0
  br i1 %3113, label %3117, label %3114

3114:                                             ; preds = %3111
  %3115 = load i32, ptr %1577, align 4, !tbaa !125
  %3116 = or i32 %3115, 16
  store i32 %3116, ptr %1577, align 4, !tbaa !125
  br label %3117

3117:                                             ; preds = %3114, %3111
  br i1 %351, label %3121, label %3118

3118:                                             ; preds = %3117
  %3119 = load i32, ptr %1577, align 4, !tbaa !125
  %3120 = or i32 %3119, 32
  store i32 %3120, ptr %1577, align 4, !tbaa !125
  br label %3121

3121:                                             ; preds = %3118, %3117
  %3122 = load ptr, ptr %384, align 8, !tbaa !204
  %3123 = icmp eq ptr %3122, null
  br i1 %3123, label %3128, label %3124

3124:                                             ; preds = %3121
  %3125 = getelementptr inbounds %struct.sv, ptr %3122, i64 0, i32 1
  %3126 = load i32, ptr %3125, align 8, !tbaa !37
  %3127 = add i32 %3126, 1
  store i32 %3127, ptr %3125, align 8, !tbaa !37
  br label %3128

3128:                                             ; preds = %3121, %3124
  %3129 = getelementptr inbounds %struct.regexp, ptr %1320, i64 0, i32 6
  store ptr %3122, ptr %3129, align 8
  %3130 = load i32, ptr %1577, align 4, !tbaa !125
  %3131 = and i32 %3130, 7168
  %3132 = icmp eq i32 %3131, 0
  br i1 %3132, label %3136, label %3133

3133:                                             ; preds = %3128
  %3134 = load i32, ptr %1356, align 8, !tbaa !123
  %3135 = or i32 %3134, 16777216
  store i32 %3135, ptr %1356, align 8, !tbaa !123
  br label %3136

3136:                                             ; preds = %3133, %3128
  %3137 = getelementptr inbounds i8, ptr %1325, i64 49
  %3138 = load i8, ptr %3137, align 1, !tbaa !141
  %3139 = call ptr @Perl_regnext(ptr noundef nonnull %1639) #15
  %3140 = getelementptr inbounds %struct.regnode, ptr %3139, i64 0, i32 1
  %3141 = load i8, ptr %3140, align 1, !tbaa !141
  %3142 = zext i8 %3138 to i64
  %3143 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %3142
  %3144 = load i8, ptr %3143, align 1, !tbaa !17
  %3145 = icmp eq i8 %3144, 40
  %3146 = icmp eq i8 %3141, 0
  %3147 = select i1 %3145, i1 %3146, i1 false
  br i1 %3147, label %3148, label %3151

3148:                                             ; preds = %3136
  %3149 = load i32, ptr %1356, align 8, !tbaa !123
  %3150 = or i32 %3149, -2147483648
  br label %3189

3151:                                             ; preds = %3136
  switch i8 %3138, label %3172 [
    i8 3, label %3156
    i8 2, label %3152
    i8 43, label %3160
  ]

3152:                                             ; preds = %3151
  %3153 = load i8, ptr %1639, align 2, !tbaa !143
  %3154 = icmp eq i8 %3153, 0
  %3155 = select i1 %3154, i1 %3146, i1 false
  br i1 %3155, label %3157, label %3191

3156:                                             ; preds = %3151
  br i1 %3146, label %3157, label %3191

3157:                                             ; preds = %3152, %3156
  %3158 = load i32, ptr %1356, align 8, !tbaa !123
  %3159 = or i32 %3158, 268435456
  br label %3189

3160:                                             ; preds = %3151
  %3161 = zext i8 %3141 to i64
  %3162 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %3161
  %3163 = load i8, ptr %3162, align 1, !tbaa !17
  %3164 = icmp eq i8 %3163, 21
  br i1 %3164, label %3165, label %3191

3165:                                             ; preds = %3160
  %3166 = load i8, ptr %3139, align 2, !tbaa !143
  %3167 = icmp eq i8 %3166, 10
  %3168 = select i1 %3167, i1 %3146, i1 false
  br i1 %3168, label %3169, label %3191

3169:                                             ; preds = %3165
  %3170 = load i32, ptr %1356, align 8, !tbaa !123
  %3171 = or i32 %3170, 1073741824
  br label %3189

3172:                                             ; preds = %3151
  %3173 = load i32, ptr %1356, align 8, !tbaa !123
  %3174 = and i32 %3173, 2048
  %3175 = icmp ne i32 %3174, 0
  %3176 = add i8 %3138, -31
  %3177 = icmp ult i8 %3176, 2
  %3178 = select i1 %3175, i1 %3177, i1 false
  br i1 %3178, label %3179, label %3191

3179:                                             ; preds = %3172
  %3180 = load i8, ptr %1639, align 2, !tbaa !205
  %3181 = icmp eq i8 %3180, 1
  br i1 %3181, label %3182, label %3191

3182:                                             ; preds = %3179
  %3183 = getelementptr inbounds i8, ptr %1325, i64 52
  %3184 = load i8, ptr %3183, align 2, !tbaa !17
  %3185 = icmp eq i8 %3184, 32
  %3186 = select i1 %3185, i1 %3146, i1 false
  br i1 %3186, label %3187, label %3191

3187:                                             ; preds = %3182
  %3188 = or i32 %3173, 1610612736
  br label %3189

3189:                                             ; preds = %3148, %3169, %3187, %3157
  %3190 = phi i32 [ %3159, %3157 ], [ %3188, %3187 ], [ %3171, %3169 ], [ %3150, %3148 ]
  store i32 %3190, ptr %1356, align 8, !tbaa !123
  br label %3191

3191:                                             ; preds = %3189, %3160, %3165, %3156, %3152, %3172, %3179, %3182
  %3192 = load i32, ptr %323, align 8, !tbaa !52
  %3193 = icmp eq i32 %3192, 0
  br i1 %3193, label %3197, label %3194

3194:                                             ; preds = %3191
  %3195 = load i32, ptr %1356, align 8, !tbaa !123
  %3196 = or i32 %3195, 134217728
  store i32 %3196, ptr %1356, align 8, !tbaa !123
  br label %3197

3197:                                             ; preds = %3194, %3191
  %3198 = load ptr, ptr %384, align 8, !tbaa !204
  %3199 = icmp eq ptr %3198, null
  br i1 %3199, label %3241, label %3200

3200:                                             ; preds = %3197
  %3201 = load ptr, ptr %1630, align 8, !tbaa !130
  %3202 = getelementptr inbounds %struct.regexp_internal, ptr %3201, i64 0, i32 3
  %3203 = load ptr, ptr %3202, align 8, !tbaa !147
  %3204 = icmp eq ptr %3203, null
  br i1 %3204, label %3207, label %3205

3205:                                             ; preds = %3200
  %3206 = load i32, ptr %3203, align 8, !tbaa !156
  br label %3207

3207:                                             ; preds = %3205, %3200
  %3208 = phi i32 [ %3206, %3205 ], [ 0, %3200 ]
  %3209 = add i32 %3208, 1
  %3210 = zext i32 %3208 to i64
  %3211 = shl nuw nsw i64 %3210, 3
  %3212 = add nuw nsw i64 %3211, 24
  %3213 = call ptr @Perl_safesysrealloc(ptr noundef %3203, i64 noundef %3212) #15
  %3214 = load ptr, ptr %1630, align 8, !tbaa !130
  %3215 = getelementptr inbounds %struct.regexp_internal, ptr %3214, i64 0, i32 3
  store ptr %3213, ptr %3215, align 8, !tbaa !147
  %3216 = icmp eq i32 %3208, 0
  br i1 %3216, label %3222, label %3217

3217:                                             ; preds = %3207
  %3218 = getelementptr inbounds %struct.reg_data, ptr %3213, i64 0, i32 1
  %3219 = load ptr, ptr %3218, align 8, !tbaa !158
  %3220 = zext i32 %3209 to i64
  %3221 = call ptr @Perl_safesysrealloc(ptr noundef %3219, i64 noundef %3220) #15
  br label %3224

3222:                                             ; preds = %3207
  %3223 = call ptr @Perl_safesysmalloc(i64 noundef 1) #15
  br label %3224

3224:                                             ; preds = %3217, %3222
  %3225 = phi ptr [ %3221, %3217 ], [ %3223, %3222 ]
  %3226 = load ptr, ptr %1630, align 8, !tbaa !130
  %3227 = getelementptr inbounds %struct.regexp_internal, ptr %3226, i64 0, i32 3
  %3228 = load ptr, ptr %3227, align 8, !tbaa !147
  %3229 = getelementptr inbounds %struct.reg_data, ptr %3228, i64 0, i32 1
  store ptr %3225, ptr %3229, align 8, !tbaa !158
  store i32 %3209, ptr %3228, align 8, !tbaa !156
  %3230 = getelementptr inbounds i8, ptr %3225, i64 %3210
  store i8 97, ptr %3230, align 1
  store i32 %3208, ptr %1325, align 8, !tbaa !207
  %3231 = load ptr, ptr %385, align 8, !tbaa !114
  %3232 = icmp eq ptr %3231, null
  br i1 %3232, label %3237, label %3233

3233:                                             ; preds = %3224
  %3234 = getelementptr inbounds %struct.sv, ptr %3231, i64 0, i32 1
  %3235 = load i32, ptr %3234, align 8, !tbaa !37
  %3236 = add i32 %3235, 1
  store i32 %3236, ptr %3234, align 8, !tbaa !37
  br label %3237

3237:                                             ; preds = %3224, %3233
  %3238 = load ptr, ptr %1671, align 8, !tbaa !147
  %3239 = sext i32 %3208 to i64
  %3240 = getelementptr inbounds %struct.reg_data, ptr %3238, i64 0, i32 2, i64 %3239
  store ptr %3231, ptr %3240, align 8, !tbaa !5
  br label %3242

3241:                                             ; preds = %3197
  store i32 0, ptr %1325, align 8, !tbaa !207
  br label %3242

3242:                                             ; preds = %3241, %3237
  %3243 = load i32, ptr %389, align 8, !tbaa !134
  %3244 = icmp eq i32 %3243, 0
  br i1 %3244, label %3305, label %3245

3245:                                             ; preds = %3242
  %3246 = load ptr, ptr %386, align 8, !tbaa !135
  %3247 = load ptr, ptr %382, align 8, !tbaa !127
  %3248 = sext i32 %3243 to i64
  %3249 = and i32 %3243, 1
  %3250 = icmp eq i32 %3249, 0
  br i1 %3250, label %3267, label %3251

3251:                                             ; preds = %3245
  %3252 = add nsw i64 %3248, -1
  %3253 = getelementptr inbounds ptr, ptr %3246, i64 %3252
  %3254 = load ptr, ptr %3253, align 8, !tbaa !5
  %3255 = getelementptr inbounds %struct.regnode_1, ptr %3254, i64 0, i32 3
  %3256 = load i32, ptr %3255, align 4, !tbaa !148
  %3257 = add i32 %3256, -1
  %3258 = zext i32 %3257 to i64
  %3259 = getelementptr inbounds ptr, ptr %3247, i64 %3258
  %3260 = load ptr, ptr %3259, align 8, !tbaa !5
  %3261 = ptrtoint ptr %3260 to i64
  %3262 = ptrtoint ptr %3254 to i64
  %3263 = sub i64 %3261, %3262
  %3264 = lshr exact i64 %3263, 2
  %3265 = trunc i64 %3264 to i32
  %3266 = getelementptr inbounds %struct.regnode_2L, ptr %3254, i64 0, i32 4
  store i32 %3265, ptr %3266, align 4, !tbaa !208
  br label %3267

3267:                                             ; preds = %3251, %3245
  %3268 = phi i64 [ %3248, %3245 ], [ %3252, %3251 ]
  %3269 = icmp eq i32 %3243, 1
  br i1 %3269, label %3304, label %3270

3270:                                             ; preds = %3267, %3270
  %3271 = phi i64 [ %3287, %3270 ], [ %3268, %3267 ]
  %3272 = add nsw i64 %3271, -1
  %3273 = getelementptr inbounds ptr, ptr %3246, i64 %3272
  %3274 = load ptr, ptr %3273, align 8, !tbaa !5
  %3275 = getelementptr inbounds %struct.regnode_1, ptr %3274, i64 0, i32 3
  %3276 = load i32, ptr %3275, align 4, !tbaa !148
  %3277 = add i32 %3276, -1
  %3278 = zext i32 %3277 to i64
  %3279 = getelementptr inbounds ptr, ptr %3247, i64 %3278
  %3280 = load ptr, ptr %3279, align 8, !tbaa !5
  %3281 = ptrtoint ptr %3280 to i64
  %3282 = ptrtoint ptr %3274 to i64
  %3283 = sub i64 %3281, %3282
  %3284 = lshr exact i64 %3283, 2
  %3285 = trunc i64 %3284 to i32
  %3286 = getelementptr inbounds %struct.regnode_2L, ptr %3274, i64 0, i32 4
  store i32 %3285, ptr %3286, align 4, !tbaa !208
  %3287 = add nsw i64 %3271, -2
  %3288 = getelementptr inbounds ptr, ptr %3246, i64 %3287
  %3289 = load ptr, ptr %3288, align 8, !tbaa !5
  %3290 = getelementptr inbounds %struct.regnode_1, ptr %3289, i64 0, i32 3
  %3291 = load i32, ptr %3290, align 4, !tbaa !148
  %3292 = add i32 %3291, -1
  %3293 = zext i32 %3292 to i64
  %3294 = getelementptr inbounds ptr, ptr %3247, i64 %3293
  %3295 = load ptr, ptr %3294, align 8, !tbaa !5
  %3296 = ptrtoint ptr %3295 to i64
  %3297 = ptrtoint ptr %3289 to i64
  %3298 = sub i64 %3296, %3297
  %3299 = lshr exact i64 %3298, 2
  %3300 = trunc i64 %3299 to i32
  %3301 = getelementptr inbounds %struct.regnode_2L, ptr %3289, i64 0, i32 4
  store i32 %3300, ptr %3301, align 4, !tbaa !208
  %3302 = and i64 %3287, 4294967295
  %3303 = icmp eq i64 %3302, 0
  br i1 %3303, label %3304, label %3270, !llvm.loop !210

3304:                                             ; preds = %3270, %3267
  store i32 0, ptr %389, align 8, !tbaa !134
  br label %3305

3305:                                             ; preds = %3304, %3242
  %3306 = load i32, ptr %376, align 8, !tbaa !109
  %3307 = sext i32 %3306 to i64
  %3308 = call ptr @Perl_safesyscalloc(i64 noundef %3307, i64 noundef 24) #15
  %3309 = getelementptr inbounds %struct.regexp, ptr %1320, i64 0, i32 17
  store ptr %3308, ptr %3309, align 8, !tbaa !211
  %3310 = load volatile i64, ptr %20, align 8, !tbaa !9
  %3311 = and i64 %3310, 32
  %3312 = icmp eq i64 %3311, 0
  br i1 %3312, label %3318, label %3313

3313:                                             ; preds = %3305
  %3314 = call ptr @Perl_PerlIO_stderr() #15
  %3315 = load i32, ptr %1662, align 8, !tbaa !137
  %3316 = zext i32 %3315 to i64
  %3317 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3314, ptr noundef nonnull @.str.79, i64 noundef %3316) #15
  br label %3318

3318:                                             ; preds = %3305, %3313
  %3319 = load volatile i64, ptr %20, align 8, !tbaa !9
  %3320 = and i64 %3319, 8
  %3321 = icmp eq i64 %3320, 0
  br i1 %3321, label %3429, label %3322

3322:                                             ; preds = %3318
  %3323 = load volatile i64, ptr %20, align 8, !tbaa !9
  %3324 = and i64 %3323, 1048578
  %3325 = icmp eq i64 %3324, 1048578
  br i1 %3325, label %3326, label %3426

3326:                                             ; preds = %3322
  %3327 = call ptr @Perl_PerlIO_stderr() #15
  %3328 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3327, ptr noundef nonnull @.str.59) #15
  %3329 = load i32, ptr %365, align 8, !tbaa !98
  %3330 = and i32 %3329, 1
  %3331 = icmp eq i32 %3330, 0
  br i1 %3331, label %3336, label %3332

3332:                                             ; preds = %3326
  %3333 = call ptr @Perl_PerlIO_stderr() #15
  %3334 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3333, ptr noundef nonnull @.str.60) #15
  %3335 = load i32, ptr %365, align 8, !tbaa !98
  br label %3336

3336:                                             ; preds = %3332, %3326
  %3337 = phi i32 [ %3335, %3332 ], [ %3329, %3326 ]
  %3338 = and i32 %3337, 2
  %3339 = icmp eq i32 %3338, 0
  br i1 %3339, label %3344, label %3340

3340:                                             ; preds = %3336
  %3341 = call ptr @Perl_PerlIO_stderr() #15
  %3342 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3341, ptr noundef nonnull @.str.61) #15
  %3343 = load i32, ptr %365, align 8, !tbaa !98
  br label %3344

3344:                                             ; preds = %3340, %3336
  %3345 = phi i32 [ %3343, %3340 ], [ %3337, %3336 ]
  %3346 = and i32 %3345, 4
  %3347 = icmp eq i32 %3346, 0
  br i1 %3347, label %3352, label %3348

3348:                                             ; preds = %3344
  %3349 = call ptr @Perl_PerlIO_stderr() #15
  %3350 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3349, ptr noundef nonnull @.str.62) #15
  %3351 = load i32, ptr %365, align 8, !tbaa !98
  br label %3352

3352:                                             ; preds = %3348, %3344
  %3353 = phi i32 [ %3351, %3348 ], [ %3345, %3344 ]
  %3354 = and i32 %3353, 16
  %3355 = icmp eq i32 %3354, 0
  br i1 %3355, label %3360, label %3356

3356:                                             ; preds = %3352
  %3357 = call ptr @Perl_PerlIO_stderr() #15
  %3358 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3357, ptr noundef nonnull @.str.63) #15
  %3359 = load i32, ptr %365, align 8, !tbaa !98
  br label %3360

3360:                                             ; preds = %3356, %3352
  %3361 = phi i32 [ %3359, %3356 ], [ %3353, %3352 ]
  %3362 = and i32 %3361, 32
  %3363 = icmp eq i32 %3362, 0
  br i1 %3363, label %3368, label %3364

3364:                                             ; preds = %3360
  %3365 = call ptr @Perl_PerlIO_stderr() #15
  %3366 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3365, ptr noundef nonnull @.str.64) #15
  %3367 = load i32, ptr %365, align 8, !tbaa !98
  br label %3368

3368:                                             ; preds = %3364, %3360
  %3369 = phi i32 [ %3367, %3364 ], [ %3361, %3360 ]
  %3370 = and i32 %3369, 64
  %3371 = icmp eq i32 %3370, 0
  br i1 %3371, label %3376, label %3372

3372:                                             ; preds = %3368
  %3373 = call ptr @Perl_PerlIO_stderr() #15
  %3374 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3373, ptr noundef nonnull @.str.65) #15
  %3375 = load i32, ptr %365, align 8, !tbaa !98
  br label %3376

3376:                                             ; preds = %3372, %3368
  %3377 = phi i32 [ %3375, %3372 ], [ %3369, %3368 ]
  %3378 = and i32 %3377, 128
  %3379 = icmp eq i32 %3378, 0
  br i1 %3379, label %3384, label %3380

3380:                                             ; preds = %3376
  %3381 = call ptr @Perl_PerlIO_stderr() #15
  %3382 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3381, ptr noundef nonnull @.str.66) #15
  %3383 = load i32, ptr %365, align 8, !tbaa !98
  br label %3384

3384:                                             ; preds = %3380, %3376
  %3385 = phi i32 [ %3383, %3380 ], [ %3377, %3376 ]
  %3386 = and i32 %3385, 256
  %3387 = icmp eq i32 %3386, 0
  br i1 %3387, label %3392, label %3388

3388:                                             ; preds = %3384
  %3389 = call ptr @Perl_PerlIO_stderr() #15
  %3390 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3389, ptr noundef nonnull @.str.67) #15
  %3391 = load i32, ptr %365, align 8, !tbaa !98
  br label %3392

3392:                                             ; preds = %3388, %3384
  %3393 = phi i32 [ %3391, %3388 ], [ %3385, %3384 ]
  %3394 = and i32 %3393, 512
  %3395 = icmp eq i32 %3394, 0
  br i1 %3395, label %3400, label %3396

3396:                                             ; preds = %3392
  %3397 = call ptr @Perl_PerlIO_stderr() #15
  %3398 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3397, ptr noundef nonnull @.str.68) #15
  %3399 = load i32, ptr %365, align 8, !tbaa !98
  br label %3400

3400:                                             ; preds = %3396, %3392
  %3401 = phi i32 [ %3399, %3396 ], [ %3393, %3392 ]
  %3402 = and i32 %3401, 1024
  %3403 = icmp eq i32 %3402, 0
  br i1 %3403, label %3408, label %3404

3404:                                             ; preds = %3400
  %3405 = call ptr @Perl_PerlIO_stderr() #15
  %3406 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3405, ptr noundef nonnull @.str.69) #15
  %3407 = load i32, ptr %365, align 8, !tbaa !98
  br label %3408

3408:                                             ; preds = %3404, %3400
  %3409 = phi i32 [ %3407, %3404 ], [ %3401, %3400 ]
  %3410 = and i32 %3409, 2048
  %3411 = icmp eq i32 %3410, 0
  br i1 %3411, label %3416, label %3412

3412:                                             ; preds = %3408
  %3413 = call ptr @Perl_PerlIO_stderr() #15
  %3414 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3413, ptr noundef nonnull @.str.70) #15
  %3415 = load i32, ptr %365, align 8, !tbaa !98
  br label %3416

3416:                                             ; preds = %3412, %3408
  %3417 = phi i32 [ %3415, %3412 ], [ %3409, %3408 ]
  %3418 = and i32 %3417, 4096
  %3419 = icmp eq i32 %3418, 0
  br i1 %3419, label %3423, label %3420

3420:                                             ; preds = %3416
  %3421 = call ptr @Perl_PerlIO_stderr() #15
  %3422 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3421, ptr noundef nonnull @.str.71) #15
  br label %3423

3423:                                             ; preds = %3420, %3416
  %3424 = call ptr @Perl_PerlIO_stderr() #15
  %3425 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3424, ptr noundef nonnull @.str.53) #15
  br label %3426

3426:                                             ; preds = %3423, %3322
  %3427 = call ptr @Perl_PerlIO_stderr() #15
  %3428 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3427, ptr noundef nonnull @.str.80) #15
  call void @my_regdump(ptr noundef %1320)
  br label %3429

3429:                                             ; preds = %3318, %3426
  %3430 = load volatile i64, ptr %20, align 8, !tbaa !9
  %3431 = and i64 %3430, 131072
  %3432 = icmp eq i64 %3431, 0
  br i1 %3432, label %3496, label %3433

3433:                                             ; preds = %3429
  %3434 = load ptr, ptr %1610, align 8, !tbaa !17
  %3435 = icmp eq ptr %3434, null
  br i1 %3435, label %3496, label %3436

3436:                                             ; preds = %3433
  %3437 = load i32, ptr %3434, align 4, !tbaa !73
  %3438 = zext i32 %3437 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %28)
  store volatile i64 0, ptr %28, align 8, !tbaa !9
  %3439 = load volatile i64, ptr %28, align 8, !tbaa !9
  %3440 = call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %3441 = icmp eq ptr %3440, null
  br i1 %3441, label %3461, label %3442

3442:                                             ; preds = %3436
  %3443 = getelementptr inbounds %struct.sv, ptr %3440, i64 0, i32 2
  %3444 = load i32, ptr %3443, align 4, !tbaa !13
  %3445 = and i32 %3444, 256
  %3446 = icmp eq i32 %3445, 0
  br i1 %3446, label %3447, label %3449

3447:                                             ; preds = %3442
  call void @Perl_sv_setuv(ptr noundef nonnull %3440, i64 noundef 65288) #15
  %3448 = load i32, ptr %3443, align 4, !tbaa !13
  br label %3449

3449:                                             ; preds = %3447, %3442
  %3450 = phi i32 [ %3448, %3447 ], [ %3444, %3442 ]
  %3451 = and i32 %3450, 2097408
  %3452 = icmp eq i32 %3451, 256
  br i1 %3452, label %3453, label %3457

3453:                                             ; preds = %3449
  %3454 = load ptr, ptr %3440, align 8, !tbaa !16
  %3455 = getelementptr inbounds %struct.xpviv, ptr %3454, i64 0, i32 4
  %3456 = load i64, ptr %3455, align 8, !tbaa !17
  br label %3459

3457:                                             ; preds = %3449
  %3458 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %3440, i32 noundef 2) #15
  br label %3459

3459:                                             ; preds = %3457, %3453
  %3460 = phi i64 [ %3456, %3453 ], [ %3458, %3457 ]
  store volatile i64 %3460, ptr %28, align 8, !tbaa !9
  br label %3461

3461:                                             ; preds = %3459, %3436
  %3462 = call ptr @Perl_PerlIO_stderr() #15
  %3463 = load ptr, ptr %1610, align 8, !tbaa !17
  %3464 = load i32, ptr %3463, align 4, !tbaa !73
  %3465 = zext i32 %3464 to i64
  %3466 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3462, ptr noundef nonnull @.str.81, i64 noundef %3465) #15
  %3467 = icmp eq i32 %3437, 0
  br i1 %3467, label %3493, label %3468

3468:                                             ; preds = %3461, %3490
  %3469 = phi i64 [ %3491, %3490 ], [ 1, %3461 ]
  %3470 = load ptr, ptr %1610, align 8, !tbaa !17
  %3471 = shl nuw nsw i64 %3469, 1
  %3472 = add nsw i64 %3471, -1
  %3473 = getelementptr inbounds i32, ptr %3470, i64 %3472
  %3474 = load i32, ptr %3473, align 4, !tbaa !73
  %3475 = icmp eq i32 %3474, 0
  br i1 %3475, label %3476, label %3480

3476:                                             ; preds = %3468
  %3477 = getelementptr inbounds i32, ptr %3470, i64 %3471
  %3478 = load i32, ptr %3477, align 4, !tbaa !73
  %3479 = icmp eq i32 %3478, 0
  br i1 %3479, label %3490, label %3480

3480:                                             ; preds = %3476, %3468
  %3481 = call ptr @Perl_PerlIO_stderr() #15
  %3482 = load ptr, ptr %1610, align 8, !tbaa !17
  %3483 = getelementptr inbounds i32, ptr %3482, i64 %3472
  %3484 = load i32, ptr %3483, align 4, !tbaa !73
  %3485 = zext i32 %3484 to i64
  %3486 = getelementptr inbounds i32, ptr %3482, i64 %3471
  %3487 = load i32, ptr %3486, align 4, !tbaa !73
  %3488 = zext i32 %3487 to i64
  %3489 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3481, ptr noundef nonnull @.str.82, i64 noundef %3469, i64 noundef %3485, i64 noundef %3488) #15
  br label %3490

3490:                                             ; preds = %3476, %3480
  %3491 = add nuw nsw i64 %3469, 1
  %3492 = icmp eq i64 %3469, %3438
  br i1 %3492, label %3493, label %3468, !llvm.loop !212

3493:                                             ; preds = %3490, %3461
  %3494 = call ptr @Perl_PerlIO_stderr() #15
  %3495 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3494, ptr noundef nonnull @.str.53) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %28)
  br label %3496

3496:                                             ; preds = %237, %229, %3429, %3493, %3433, %558, %301
  %3497 = phi ptr [ %4, %558 ], [ %305, %301 ], [ %1309, %3433 ], [ %1309, %3493 ], [ %1309, %3429 ], [ %224, %229 ], [ %224, %237 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %20)
  call void @llvm.lifetime.end.p0(i64 392, ptr nonnull %19)
  call void @llvm.lifetime.end.p0(i64 392, ptr nonnull %18) #15
  call void @llvm.lifetime.end.p0(i64 152, ptr nonnull %17) #15
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %16) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %15) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #15
  ret ptr %3497
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

declare ptr @Perl_get_sv(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_sv_setuv(ptr noundef, i64 noundef) local_unnamed_addr #2

declare i64 @Perl_sv_2iv_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_reginitcolors() local_unnamed_addr #2

declare ptr @Perl__new_invlist_C_array(ptr noundef) local_unnamed_addr #2

declare ptr @Perl__new_invlist(i64 noundef) local_unnamed_addr #2

declare ptr @Perl__add_range_to_invlist(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

declare ptr @Perl_safesysmalloc(i64 noundef) local_unnamed_addr #2

declare void @Perl_save_pushptr(ptr noundef, i32 noundef) local_unnamed_addr #2

declare i32 @PerlIO_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

declare ptr @Perl_PerlIO_stderr() local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_concat_pat(ptr nocapture noundef %0, ptr noundef %1, ptr noundef readonly %2, i32 noundef %3, ptr noundef %4, ptr nocapture noundef writeonly %5, ptr noundef %6) unnamed_addr #0 {
  %8 = alloca i64, align 8
  %9 = alloca ptr, align 8
  %10 = icmp eq ptr %1, null
  %11 = icmp ne i32 %3, 1
  %12 = and i1 %10, %11
  br i1 %12, label %13, label %15

13:                                               ; preds = %7
  %14 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.8, i64 noundef 0) #15
  tail call void @Perl_save_pushptr(ptr noundef %14, i32 noundef 11) #15
  br label %15

15:                                               ; preds = %13, %7
  %16 = phi ptr [ %14, %13 ], [ %1, %7 ]
  %17 = sext i32 %3 to i64
  %18 = getelementptr inbounds ptr, ptr %2, i64 %17
  %19 = icmp sgt i32 %3, 0
  br i1 %19, label %20, label %437

20:                                               ; preds = %15
  %21 = icmp eq ptr %6, null
  %22 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 39
  %23 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 38
  br label %24

24:                                               ; preds = %20, %431
  %25 = phi ptr [ %16, %20 ], [ %434, %431 ]
  %26 = phi ptr [ %4, %20 ], [ %433, %431 ]
  %27 = phi ptr [ %2, %20 ], [ %435, %431 ]
  %28 = phi i32 [ 0, %20 ], [ %432, %431 ]
  %29 = phi i8 [ 0, %20 ], [ %39, %431 ]
  %30 = and i8 %29, 1
  %31 = icmp ne i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  %33 = load ptr, ptr %27, align 8, !tbaa !5
  br label %34

34:                                               ; preds = %24, %32
  %35 = phi ptr [ %33, %32 ], [ %6, %24 ]
  %36 = icmp eq ptr %35, null
  %37 = select i1 %36, ptr @PL_sv_undef, ptr %35
  %38 = select i1 %21, i8 %29, i8 1
  %39 = select i1 %31, i8 0, i8 %38
  %40 = sext i1 %31 to i64
  %41 = getelementptr inbounds ptr, ptr %27, i64 %40
  %42 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 2
  %43 = load i32, ptr %42, align 4, !tbaa !13
  %44 = and i32 %43, 255
  %45 = icmp eq i32 %44, 11
  br i1 %45, label %46, label %99

46:                                               ; preds = %34
  %47 = and i32 %43, 8388608
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %46
  %50 = call i32 @Perl_mg_size(ptr noundef nonnull %37) #15
  %51 = sext i32 %50 to i64
  br label %56

52:                                               ; preds = %46
  %53 = load ptr, ptr %37, align 8, !tbaa !81
  %54 = getelementptr inbounds %struct.xpvav, ptr %53, i64 0, i32 2
  %55 = load i64, ptr %54, align 8, !tbaa !83
  br label %56

56:                                               ; preds = %52, %49
  %57 = phi i64 [ %51, %49 ], [ %55, %52 ]
  %58 = add i64 %57, 1
  %59 = icmp eq ptr %26, null
  br i1 %59, label %68, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.op, ptr %26, i64 0, i32 4
  %62 = load i16, ptr %61, align 8
  %63 = and i16 %62, 511
  switch i16 %63, label %64 [
    i16 10, label %65
    i16 135, label %65
  ]

64:                                               ; preds = %60
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.190, i32 noundef 5902) #15
  br label %65

65:                                               ; preds = %60, %60, %64
  %66 = getelementptr inbounds %struct.op, ptr %26, i64 0, i32 1
  %67 = load ptr, ptr %66, align 8, !tbaa !36
  br label %68

68:                                               ; preds = %65, %56
  %69 = phi ptr [ %67, %65 ], [ null, %56 ]
  %70 = load i32, ptr %42, align 4, !tbaa !213
  %71 = and i32 %70, 8388608
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %88, label %73

73:                                               ; preds = %68
  %74 = shl i64 %58, 3
  %75 = call ptr @Perl_safesysmalloc(i64 noundef %74) #15
  call void @Perl_save_pushptr(ptr noundef %75, i32 noundef 10) #15
  %76 = icmp slt i64 %57, 0
  br i1 %76, label %91, label %77

77:                                               ; preds = %73, %83
  %78 = phi i64 [ %86, %83 ], [ 0, %73 ]
  %79 = call ptr @Perl_av_fetch(ptr noundef nonnull %37, i64 noundef %78, i32 noundef 0) #15
  %80 = icmp eq ptr %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %77
  %82 = load ptr, ptr %79, align 8, !tbaa !5
  br label %83

83:                                               ; preds = %77, %81
  %84 = phi ptr [ %82, %81 ], [ @PL_sv_undef, %77 ]
  %85 = getelementptr inbounds ptr, ptr %75, i64 %78
  store ptr %84, ptr %85, align 8, !tbaa !5
  %86 = add nuw i64 %78, 1
  %87 = icmp eq i64 %78, %57
  br i1 %87, label %91, label %77, !llvm.loop !214

88:                                               ; preds = %68
  %89 = getelementptr inbounds %struct.av, ptr %37, i64 0, i32 3
  %90 = load ptr, ptr %89, align 8, !tbaa !17
  br label %91

91:                                               ; preds = %83, %73, %88
  %92 = phi ptr [ %90, %88 ], [ %75, %73 ], [ %75, %83 ]
  %93 = trunc i64 %58 to i32
  %94 = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.191, i64 noundef 1, i32 noundef 2, i32 noundef 3) #15
  %95 = getelementptr inbounds %struct.gv, ptr %94, i64 0, i32 3
  %96 = load ptr, ptr %95, align 8, !tbaa !17
  %97 = load ptr, ptr %96, align 8, !tbaa !215
  %98 = call fastcc ptr @S_concat_pat(ptr noundef %0, ptr noundef %25, ptr noundef %92, i32 noundef %93, ptr noundef null, ptr noundef %5, ptr noundef %97)
  br label %431

99:                                               ; preds = %34
  %100 = icmp eq ptr %26, null
  br i1 %100, label %141, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds %struct.op, ptr %26, i64 0, i32 4
  %103 = load i16, ptr %102, align 8
  %104 = and i16 %103, 511
  %105 = icmp eq i16 %104, 0
  br i1 %105, label %106, label %134

106:                                              ; preds = %101
  %107 = getelementptr inbounds %struct.op, ptr %26, i64 0, i32 5
  %108 = load i8, ptr %107, align 2, !tbaa !27
  %109 = icmp sgt i8 %108, -1
  br i1 %109, label %134, label %110

110:                                              ; preds = %106
  %111 = load i32, ptr %22, align 8, !tbaa !24
  %112 = icmp slt i32 %28, %111
  br i1 %112, label %114, label %113

113:                                              ; preds = %110
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.192, i32 noundef 5944) #15
  br label %114

114:                                              ; preds = %110, %113
  %115 = icmp eq ptr %25, null
  br i1 %115, label %120, label %116

116:                                              ; preds = %114
  %117 = load ptr, ptr %25, align 8, !tbaa !16
  %118 = getelementptr inbounds %struct.xpv, ptr %117, i64 0, i32 2
  %119 = load i64, ptr %118, align 8, !tbaa !38
  br label %120

120:                                              ; preds = %114, %116
  %121 = phi i64 [ %119, %116 ], [ 0, %114 ]
  %122 = load ptr, ptr %23, align 8, !tbaa !20
  %123 = sext i32 %28 to i64
  %124 = getelementptr inbounds %struct.reg_code_block, ptr %122, i64 %123
  store i64 %121, ptr %124, align 8, !tbaa !58
  %125 = getelementptr inbounds %struct.reg_code_block, ptr %122, i64 %123, i32 2
  store ptr %26, ptr %125, align 8, !tbaa !94
  %126 = getelementptr inbounds %struct.reg_code_block, ptr %122, i64 %123, i32 3
  store ptr null, ptr %126, align 8, !tbaa !95
  %127 = getelementptr inbounds %struct.op, ptr %26, i64 0, i32 1
  %128 = load ptr, ptr %127, align 8, !tbaa !36
  %129 = icmp eq ptr %128, null
  br i1 %129, label %133, label %130

130:                                              ; preds = %120
  %131 = add nsw i32 %28, 1
  %132 = load i32, ptr %42, align 4, !tbaa !13
  br label %134

133:                                              ; preds = %120
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.193, i32 noundef 5951) #15
  unreachable

134:                                              ; preds = %130, %106, %101
  %135 = phi i32 [ %132, %130 ], [ %43, %106 ], [ %43, %101 ]
  %136 = phi i1 [ true, %130 ], [ false, %106 ], [ false, %101 ]
  %137 = phi i32 [ %131, %130 ], [ %28, %106 ], [ %28, %101 ]
  %138 = phi ptr [ %128, %130 ], [ %26, %106 ], [ %26, %101 ]
  %139 = getelementptr inbounds %struct.op, ptr %138, i64 0, i32 1
  %140 = load ptr, ptr %139, align 8, !tbaa !36
  br label %141

141:                                              ; preds = %134, %99
  %142 = phi i32 [ %135, %134 ], [ %43, %99 ]
  %143 = phi i1 [ %136, %134 ], [ false, %99 ]
  %144 = phi i32 [ %137, %134 ], [ %28, %99 ]
  %145 = phi ptr [ %140, %134 ], [ null, %99 ]
  %146 = and i32 %142, 2097152
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %141
  %149 = call i32 @Perl_mg_get(ptr noundef nonnull %37) #15
  %150 = load i32, ptr %42, align 4, !tbaa !13
  br label %151

151:                                              ; preds = %141, %148
  %152 = phi i32 [ %142, %141 ], [ %150, %148 ]
  %153 = and i32 %152, 2048
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %188, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 3
  %157 = load ptr, ptr %156, align 8, !tbaa !17
  %158 = getelementptr inbounds %struct.sv, ptr %157, i64 0, i32 2
  %159 = load i32, ptr %158, align 4, !tbaa !13
  %160 = and i32 %159, 1048576
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %188, label %162

162:                                              ; preds = %155
  %163 = load ptr, ptr %157, align 8, !tbaa !16
  %164 = load ptr, ptr %163, align 8, !tbaa !44
  %165 = getelementptr inbounds %struct.hv, ptr %164, i64 0, i32 2
  %166 = load i32, ptr %165, align 4, !tbaa !46
  %167 = and i32 %166, 268435456
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %188, label %169

169:                                              ; preds = %162
  %170 = call ptr @Perl_amagic_call(ptr noundef nonnull %37, ptr noundef nonnull @PL_sv_undef, i32 noundef 74, i32 noundef 9) #15
  %171 = icmp eq ptr %170, null
  br i1 %171, label %188, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %struct.sv, ptr %170, i64 0, i32 2
  %174 = load i32, ptr %173, align 4, !tbaa !13
  %175 = and i32 %174, 2048
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %182, label %177

177:                                              ; preds = %172
  %178 = getelementptr inbounds %struct.sv, ptr %170, i64 0, i32 3
  %179 = load ptr, ptr %178, align 8, !tbaa !17
  %180 = getelementptr inbounds %struct.sv, ptr %179, i64 0, i32 2
  %181 = load i32, ptr %180, align 4, !tbaa !13
  br label %182

182:                                              ; preds = %177, %172
  %183 = phi i32 [ %181, %177 ], [ %174, %172 ]
  %184 = phi ptr [ %179, %177 ], [ %170, %172 ]
  %185 = and i32 %183, 255
  %186 = icmp eq i32 %185, 8
  br i1 %186, label %188, label %187

187:                                              ; preds = %182
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.194) #15
  br label %188

188:                                              ; preds = %169, %187, %182, %162, %155, %151
  %189 = phi ptr [ %37, %162 ], [ %37, %155 ], [ %37, %151 ], [ %37, %169 ], [ %184, %187 ], [ %184, %182 ]
  %190 = icmp eq ptr %25, null
  br i1 %190, label %235, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds %struct.sv, ptr %25, i64 0, i32 2
  %193 = load i32, ptr %192, align 4, !tbaa !13
  %194 = and i32 %193, 2048
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %210, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %struct.sv, ptr %25, i64 0, i32 3
  %198 = load ptr, ptr %197, align 8, !tbaa !17
  %199 = getelementptr inbounds %struct.sv, ptr %198, i64 0, i32 2
  %200 = load i32, ptr %199, align 4, !tbaa !13
  %201 = and i32 %200, 1048576
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %210, label %203

203:                                              ; preds = %196
  %204 = load ptr, ptr %198, align 8, !tbaa !16
  %205 = load ptr, ptr %204, align 8, !tbaa !44
  %206 = getelementptr inbounds %struct.hv, ptr %205, i64 0, i32 2
  %207 = load i32, ptr %206, align 4, !tbaa !46
  %208 = and i32 %207, 268435456
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %229

210:                                              ; preds = %203, %196, %191
  %211 = getelementptr inbounds %struct.sv, ptr %189, i64 0, i32 2
  %212 = load i32, ptr %211, align 4, !tbaa !13
  %213 = and i32 %212, 2048
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %235, label %215

215:                                              ; preds = %210
  %216 = getelementptr inbounds %struct.sv, ptr %189, i64 0, i32 3
  %217 = load ptr, ptr %216, align 8, !tbaa !17
  %218 = getelementptr inbounds %struct.sv, ptr %217, i64 0, i32 2
  %219 = load i32, ptr %218, align 4, !tbaa !13
  %220 = and i32 %219, 1048576
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %235, label %222

222:                                              ; preds = %215
  %223 = load ptr, ptr %217, align 8, !tbaa !16
  %224 = load ptr, ptr %223, align 8, !tbaa !44
  %225 = getelementptr inbounds %struct.hv, ptr %224, i64 0, i32 2
  %226 = load i32, ptr %225, align 4, !tbaa !46
  %227 = and i32 %226, 268435456
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %235, label %229

229:                                              ; preds = %222, %203
  %230 = call ptr @Perl_amagic_call(ptr noundef nonnull %25, ptr noundef nonnull %189, i32 noundef 70, i32 noundef 4) #15
  %231 = icmp eq ptr %230, null
  br i1 %231, label %235, label %232

232:                                              ; preds = %229
  call void @Perl_sv_setsv_flags(ptr noundef nonnull %25, ptr noundef nonnull %230, i32 noundef 1538) #15
  %233 = load i32, ptr %22, align 8, !tbaa !24
  %234 = sub nsw i32 %233, %144
  store i32 %234, ptr %22, align 8, !tbaa !24
  br label %431

235:                                              ; preds = %229, %222, %215, %210, %188
  %236 = getelementptr inbounds %struct.sv, ptr %189, i64 0, i32 2
  %237 = load i32, ptr %236, align 4, !tbaa !13
  %238 = and i32 %237, 2048
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %300, label %240

240:                                              ; preds = %235, %282
  %241 = phi ptr [ %276, %282 ], [ %236, %235 ]
  %242 = phi ptr [ %257, %282 ], [ %189, %235 ]
  %243 = getelementptr inbounds %struct.sv, ptr %242, i64 0, i32 3
  %244 = load ptr, ptr %243, align 8, !tbaa !17
  %245 = getelementptr inbounds %struct.sv, ptr %244, i64 0, i32 2
  %246 = load i32, ptr %245, align 4, !tbaa !13
  %247 = and i32 %246, 1048576
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %286, label %249

249:                                              ; preds = %240
  %250 = load ptr, ptr %244, align 8, !tbaa !16
  %251 = load ptr, ptr %250, align 8, !tbaa !44
  %252 = getelementptr inbounds %struct.hv, ptr %251, i64 0, i32 2
  %253 = load i32, ptr %252, align 4, !tbaa !46
  %254 = and i32 %253, 268435456
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %286, label %256

256:                                              ; preds = %249
  %257 = call ptr @Perl_amagic_call(ptr noundef nonnull %242, ptr noundef nonnull @PL_sv_undef, i32 noundef 10, i32 noundef 9) #15
  %258 = icmp eq ptr %257, null
  %259 = icmp eq ptr %257, %242
  %260 = or i1 %258, %259
  br i1 %260, label %286, label %261

261:                                              ; preds = %256
  %262 = load i32, ptr %241, align 4, !tbaa !13
  %263 = and i32 %262, 2048
  %264 = icmp eq i32 %263, 0
  %265 = getelementptr inbounds %struct.sv, ptr %257, i64 0, i32 2
  %266 = load i32, ptr %265, align 4, !tbaa !13
  %267 = and i32 %266, 2048
  %268 = icmp eq i32 %267, 0
  %269 = select i1 %264, i1 true, i1 %268
  br i1 %269, label %275, label %270

270:                                              ; preds = %261
  %271 = load ptr, ptr %243, align 8, !tbaa !17
  %272 = getelementptr inbounds %struct.sv, ptr %257, i64 0, i32 3
  %273 = load ptr, ptr %272, align 8, !tbaa !17
  %274 = icmp eq ptr %271, %273
  br i1 %274, label %286, label %275

275:                                              ; preds = %261, %270
  %276 = getelementptr inbounds %struct.sv, ptr %257, i64 0, i32 2
  %277 = and i32 %266, 2097152
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %282, label %279

279:                                              ; preds = %275
  %280 = call i32 @Perl_mg_get(ptr noundef nonnull %257) #15
  %281 = load i32, ptr %276, align 4, !tbaa !13
  br label %282

282:                                              ; preds = %275, %279
  %283 = phi i32 [ %266, %275 ], [ %281, %279 ]
  %284 = and i32 %283, 2048
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %240, !llvm.loop !217

286:                                              ; preds = %270, %282, %240, %249, %256
  %287 = phi ptr [ %242, %270 ], [ %257, %282 ], [ %242, %240 ], [ %242, %249 ], [ %242, %256 ]
  %288 = phi ptr [ %241, %270 ], [ %276, %282 ], [ %241, %240 ], [ %241, %249 ], [ %241, %256 ]
  %289 = load i32, ptr %288, align 4, !tbaa !13
  %290 = and i32 %289, 2048
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %300, label %292

292:                                              ; preds = %286
  %293 = getelementptr inbounds %struct.sv, ptr %287, i64 0, i32 3
  %294 = load ptr, ptr %293, align 8, !tbaa !17
  %295 = getelementptr inbounds %struct.sv, ptr %294, i64 0, i32 2
  %296 = load i32, ptr %295, align 4, !tbaa !13
  %297 = and i32 %296, 255
  %298 = icmp eq i32 %297, 8
  %299 = select i1 %298, ptr %294, ptr %287
  br label %300

300:                                              ; preds = %235, %292, %286
  %301 = phi ptr [ %287, %286 ], [ %299, %292 ], [ %189, %235 ]
  br i1 %190, label %333, label %302

302:                                              ; preds = %300
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #15
  %303 = getelementptr inbounds %struct.sv, ptr %25, i64 0, i32 2
  %304 = load i32, ptr %303, align 4, !tbaa !13
  %305 = and i32 %304, 430018304
  %306 = icmp eq i32 %305, 1024
  br i1 %306, label %307, label %313

307:                                              ; preds = %302
  %308 = load ptr, ptr %25, align 8, !tbaa !16
  %309 = getelementptr inbounds %struct.xpv, ptr %308, i64 0, i32 2
  %310 = load i64, ptr %309, align 8, !tbaa !38
  store i64 %310, ptr %8, align 8, !tbaa !9
  %311 = getelementptr inbounds %struct.sv, ptr %25, i64 0, i32 3
  %312 = load ptr, ptr %311, align 8, !tbaa !17
  br label %316

313:                                              ; preds = %302
  %314 = call ptr @Perl_sv_pvn_force_flags(ptr noundef nonnull %25, ptr noundef nonnull %8, i32 noundef 0) #15
  %315 = load i64, ptr %8, align 8, !tbaa !9
  br label %316

316:                                              ; preds = %313, %307
  %317 = phi i64 [ %310, %307 ], [ %315, %313 ]
  %318 = phi ptr [ %312, %307 ], [ %314, %313 ]
  store ptr %318, ptr %9, align 8, !tbaa !5
  %319 = getelementptr inbounds %struct.sv, ptr %301, i64 0, i32 2
  %320 = load i32, ptr %319, align 4, !tbaa !13
  %321 = and i32 %320, 536870912
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %332, label %323

323:                                              ; preds = %316
  %324 = load i32, ptr %303, align 4, !tbaa !13
  %325 = and i32 %324, 536870912
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %332

327:                                              ; preds = %323
  call fastcc void @S_pat_upgrade_to_utf8(ptr noundef %0, ptr noundef nonnull %9, ptr noundef nonnull %8, i32 noundef %144)
  %328 = load ptr, ptr %9, align 8, !tbaa !5
  %329 = load i64, ptr %8, align 8, !tbaa !9
  call void @Perl_sv_setpvn(ptr noundef nonnull %25, ptr noundef %328, i64 noundef %329) #15
  %330 = load i32, ptr %303, align 4, !tbaa !13
  %331 = or i32 %330, 536870912
  store i32 %331, ptr %303, align 4, !tbaa !13
  br label %332

332:                                              ; preds = %327, %323, %316
  call void @Perl_sv_catsv_flags(ptr noundef nonnull %25, ptr noundef nonnull %301, i32 noundef 0) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #15
  br label %333

333:                                              ; preds = %300, %332
  %334 = phi ptr [ %301, %332 ], [ null, %300 ]
  %335 = phi i64 [ %317, %332 ], [ 0, %300 ]
  %336 = phi ptr [ %25, %332 ], [ %301, %300 ]
  br i1 %143, label %337, label %346

337:                                              ; preds = %333
  %338 = load ptr, ptr %336, align 8, !tbaa !16
  %339 = getelementptr inbounds %struct.xpv, ptr %338, i64 0, i32 2
  %340 = load i64, ptr %339, align 8, !tbaa !38
  %341 = add i64 %340, -1
  %342 = load ptr, ptr %23, align 8, !tbaa !20
  %343 = add nsw i32 %144, -1
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds %struct.reg_code_block, ptr %342, i64 %344, i32 1
  store i64 %341, ptr %345, align 8, !tbaa !60
  br label %346

346:                                              ; preds = %333, %337
  %347 = icmp eq ptr %334, null
  br i1 %347, label %431, label %348

348:                                              ; preds = %346
  %349 = getelementptr inbounds %struct.sv, ptr %334, i64 0, i32 2
  %350 = load i32, ptr %349, align 4, !tbaa !73
  %351 = and i32 %350, 255
  %352 = icmp eq i32 %351, 8
  br i1 %352, label %353, label %431

353:                                              ; preds = %348
  %354 = getelementptr inbounds %struct.p5rx, ptr %334, i64 0, i32 3
  %355 = load ptr, ptr %354, align 8, !tbaa !17
  %356 = getelementptr inbounds %struct.regexp, ptr %355, i64 0, i32 4
  %357 = load ptr, ptr %356, align 8, !tbaa !87
  %358 = getelementptr inbounds %struct.regexp_engine, ptr %357, i64 0, i32 11
  %359 = load ptr, ptr %358, align 8, !tbaa !40
  %360 = getelementptr inbounds %struct.p5rx, ptr %334, i64 0, i32 3
  %361 = icmp eq ptr %359, null
  br i1 %361, label %431, label %362

362:                                              ; preds = %353
  %363 = getelementptr inbounds %struct.regexp, ptr %355, i64 0, i32 14
  %364 = load ptr, ptr %363, align 8, !tbaa !90
  %365 = getelementptr inbounds %struct.regexp_internal, ptr %364, i64 0, i32 5
  %366 = load i32, ptr %365, align 8, !tbaa !91
  %367 = getelementptr inbounds %struct.regexp_internal, ptr %364, i64 0, i32 5
  %368 = icmp eq i32 %366, 0
  br i1 %368, label %431, label %369

369:                                              ; preds = %362
  store i8 1, ptr %5, align 1, !tbaa !11
  %370 = load ptr, ptr %23, align 8, !tbaa !20
  %371 = load i32, ptr %22, align 8, !tbaa !24
  %372 = add nsw i32 %371, %366
  %373 = sext i32 %372 to i64
  %374 = shl nsw i64 %373, 5
  %375 = call ptr @Perl_safesysrealloc(ptr noundef %370, i64 noundef %374) #15
  store ptr %375, ptr %23, align 8, !tbaa !20
  %376 = load i32, ptr %367, align 8, !tbaa !91
  %377 = load i32, ptr %22, align 8, !tbaa !24
  %378 = add nsw i32 %377, %376
  store i32 %378, ptr %22, align 8, !tbaa !24
  %379 = icmp sgt i32 %376, 0
  br i1 %379, label %380, label %431

380:                                              ; preds = %369
  %381 = getelementptr inbounds %struct.regexp_internal, ptr %364, i64 0, i32 4
  %382 = sext i32 %144 to i64
  br label %383

383:                                              ; preds = %380, %404
  %384 = phi i64 [ %382, %380 ], [ %424, %404 ]
  %385 = phi i64 [ 0, %380 ], [ %425, %404 ]
  %386 = load i32, ptr %349, align 4, !tbaa !62
  %387 = and i32 %386, 255
  %388 = icmp eq i32 %387, 8
  %389 = and i32 %386, 16826623
  %390 = icmp eq i32 %389, 16777226
  %391 = or i1 %388, %390
  br i1 %391, label %393, label %392

392:                                              ; preds = %383
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %393

393:                                              ; preds = %383, %392
  %394 = load ptr, ptr %360, align 8, !tbaa !17
  %395 = getelementptr inbounds %struct.regexp, ptr %394, i64 0, i32 24
  %396 = load i16, ptr %395, align 8
  %397 = and i16 %396, 15
  %398 = zext i16 %397 to i64
  %399 = add i64 %335, %398
  %400 = load i32, ptr %22, align 8, !tbaa !24
  %401 = sext i32 %400 to i64
  %402 = icmp slt i64 %384, %401
  br i1 %402, label %404, label %403

403:                                              ; preds = %393
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.192, i32 noundef 6040) #15
  br label %404

404:                                              ; preds = %393, %403
  %405 = load ptr, ptr %381, align 8, !tbaa !93
  %406 = getelementptr inbounds %struct.reg_code_block, ptr %405, i64 %385
  %407 = load ptr, ptr %23, align 8, !tbaa !20
  %408 = getelementptr inbounds %struct.reg_code_block, ptr %407, i64 %384
  %409 = load <2 x i64>, ptr %406, align 8, !tbaa !9
  %410 = insertelement <2 x i64> poison, i64 %399, i64 0
  %411 = shufflevector <2 x i64> %410, <2 x i64> poison, <2 x i32> zeroinitializer
  %412 = add <2 x i64> %409, %411
  store <2 x i64> %412, ptr %408, align 8, !tbaa !9
  %413 = getelementptr inbounds %struct.reg_code_block, ptr %405, i64 %385, i32 2
  %414 = load ptr, ptr %413, align 8, !tbaa !94
  %415 = getelementptr inbounds %struct.reg_code_block, ptr %407, i64 %384, i32 2
  store ptr %414, ptr %415, align 8, !tbaa !94
  %416 = getelementptr inbounds %struct.reg_code_block, ptr %405, i64 %385, i32 3
  %417 = load ptr, ptr %416, align 8, !tbaa !95
  %418 = icmp eq ptr %417, null
  %419 = select i1 %418, ptr %334, ptr %417
  %420 = getelementptr inbounds %struct.sv, ptr %419, i64 0, i32 1
  %421 = load i32, ptr %420, align 8, !tbaa !37
  %422 = add i32 %421, 1
  store i32 %422, ptr %420, align 8, !tbaa !37
  %423 = getelementptr inbounds %struct.reg_code_block, ptr %407, i64 %384, i32 3
  store ptr %419, ptr %423, align 8, !tbaa !95
  %424 = add nsw i64 %384, 1
  %425 = add nuw nsw i64 %385, 1
  %426 = load i32, ptr %367, align 8, !tbaa !91
  %427 = sext i32 %426 to i64
  %428 = icmp slt i64 %425, %427
  br i1 %428, label %383, label %429, !llvm.loop !218

429:                                              ; preds = %404
  %430 = trunc i64 %424 to i32
  br label %431

431:                                              ; preds = %429, %369, %232, %346, %348, %353, %362, %91
  %432 = phi i32 [ %28, %91 ], [ %144, %353 ], [ %144, %348 ], [ %144, %346 ], [ %144, %362 ], [ 0, %232 ], [ %144, %369 ], [ %430, %429 ]
  %433 = phi ptr [ %69, %91 ], [ %145, %353 ], [ %145, %348 ], [ %145, %346 ], [ %145, %362 ], [ %145, %232 ], [ %145, %369 ], [ %145, %429 ]
  %434 = phi ptr [ %98, %91 ], [ %336, %353 ], [ %336, %348 ], [ %336, %346 ], [ %336, %362 ], [ %25, %232 ], [ %336, %369 ], [ %336, %429 ]
  %435 = getelementptr inbounds ptr, ptr %41, i64 1
  %436 = icmp ult ptr %435, %18
  br i1 %436, label %24, label %437, !llvm.loop !219

437:                                              ; preds = %431, %15
  %438 = phi ptr [ %16, %15 ], [ %434, %431 ]
  br i1 %12, label %439, label %446

439:                                              ; preds = %437
  %440 = getelementptr inbounds %struct.sv, ptr %438, i64 0, i32 2
  %441 = load i32, ptr %440, align 4, !tbaa !13
  %442 = and i32 %441, 4194304
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %446, label %444

444:                                              ; preds = %439
  %445 = call i32 @Perl_mg_set(ptr noundef nonnull %438) #15
  br label %446

446:                                              ; preds = %444, %439, %437
  ret ptr %438
}

declare void @Perl_safesysfree(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_sv_2pv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_newSVpvn_flags(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_sv_newmortal() local_unnamed_addr #2

declare ptr @Perl_pv_pretty(ptr noundef, ptr noundef, i64 noundef, i64 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_pat_upgrade_to_utf8(ptr nocapture noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = alloca i64, align 8
  %6 = load ptr, ptr %1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  store volatile i64 0, ptr %5, align 8, !tbaa !9
  %7 = load volatile i64, ptr %5, align 8, !tbaa !9
  %8 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %9 = icmp eq ptr %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !13
  %13 = and i32 %12, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  tail call void @Perl_sv_setuv(ptr noundef nonnull %8, i64 noundef 65288) #15
  %16 = load i32, ptr %11, align 4, !tbaa !13
  br label %17

17:                                               ; preds = %15, %10
  %18 = phi i32 [ %16, %15 ], [ %12, %10 ]
  %19 = and i32 %18, 2097408
  %20 = icmp eq i32 %19, 256
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = load ptr, ptr %8, align 8, !tbaa !16
  %23 = getelementptr inbounds %struct.xpviv, ptr %22, i64 0, i32 4
  %24 = load i64, ptr %23, align 8, !tbaa !17
  br label %27

25:                                               ; preds = %17
  %26 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %8, i32 noundef 2) #15
  br label %27

27:                                               ; preds = %25, %21
  %28 = phi i64 [ %24, %21 ], [ %26, %25 ]
  store volatile i64 %28, ptr %5, align 8, !tbaa !9
  br label %29

29:                                               ; preds = %27, %4
  %30 = load volatile i64, ptr %5, align 8, !tbaa !9
  %31 = and i64 %30, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = tail call ptr @Perl_PerlIO_stderr() #15
  %35 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %34, ptr noundef nonnull @.str.212) #15
  br label %36

36:                                               ; preds = %33, %29
  %37 = load i64, ptr %2, align 8, !tbaa !9
  %38 = shl i64 %37, 1
  %39 = or i64 %38, 1
  %40 = tail call ptr @Perl_safesysmalloc(i64 noundef %39) #15
  %41 = load i64, ptr %2, align 8, !tbaa !9
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %36
  %44 = ptrtoint ptr %40 to i64
  br label %107

45:                                               ; preds = %36
  %46 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 38
  %47 = ptrtoint ptr %40 to i64
  %48 = xor i64 %47, -1
  br label %49

49:                                               ; preds = %45, %99
  %50 = phi i8 [ 0, %45 ], [ %101, %99 ]
  %51 = phi i64 [ 0, %45 ], [ %102, %99 ]
  %52 = phi i32 [ 0, %45 ], [ %100, %99 ]
  %53 = phi ptr [ %40, %45 ], [ %68, %99 ]
  %54 = getelementptr inbounds i8, ptr %6, i64 %51
  %55 = load i8, ptr %54, align 1, !tbaa !17
  %56 = icmp sgt i8 %55, -1
  br i1 %56, label %57, label %59

57:                                               ; preds = %49
  %58 = getelementptr inbounds i8, ptr %53, i64 1
  br label %66

59:                                               ; preds = %49
  %60 = lshr i8 %55, 6
  %61 = or i8 %60, -64
  %62 = getelementptr inbounds i8, ptr %53, i64 1
  %63 = and i8 %55, 63
  %64 = or i8 %63, -128
  %65 = getelementptr inbounds i8, ptr %53, i64 2
  store i8 %64, ptr %62, align 1, !tbaa !17
  br label %66

66:                                               ; preds = %57, %59
  %67 = phi i8 [ %55, %57 ], [ %61, %59 ]
  %68 = phi ptr [ %58, %57 ], [ %65, %59 ]
  store i8 %67, ptr %53, align 1
  %69 = icmp slt i32 %52, %3
  br i1 %69, label %70, label %99

70:                                               ; preds = %66
  %71 = and i8 %50, 1
  %72 = icmp eq i8 %71, 0
  %73 = load ptr, ptr %46, align 8, !tbaa !20
  %74 = sext i32 %52 to i64
  br i1 %72, label %75, label %86

75:                                               ; preds = %70
  %76 = getelementptr inbounds %struct.reg_code_block, ptr %73, i64 %74
  %77 = load i64, ptr %76, align 8, !tbaa !58
  %78 = icmp eq i64 %77, %51
  br i1 %78, label %79, label %99

79:                                               ; preds = %75
  %80 = ptrtoint ptr %68 to i64
  %81 = add i64 %80, %48
  store i64 %81, ptr %76, align 8, !tbaa !58
  %82 = getelementptr inbounds i8, ptr %68, i64 -1
  %83 = load i8, ptr %82, align 1, !tbaa !17
  %84 = icmp eq i8 %83, 40
  br i1 %84, label %99, label %85

85:                                               ; preds = %79
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.213, i32 noundef 5820) #15
  br label %99

86:                                               ; preds = %70
  %87 = getelementptr inbounds %struct.reg_code_block, ptr %73, i64 %74, i32 1
  %88 = load i64, ptr %87, align 8, !tbaa !60
  %89 = icmp eq i64 %88, %51
  br i1 %89, label %90, label %99

90:                                               ; preds = %86
  %91 = ptrtoint ptr %68 to i64
  %92 = add i64 %91, %48
  store i64 %92, ptr %87, align 8, !tbaa !60
  %93 = getelementptr inbounds i8, ptr %68, i64 -1
  %94 = load i8, ptr %93, align 1, !tbaa !17
  %95 = icmp eq i8 %94, 41
  br i1 %95, label %97, label %96

96:                                               ; preds = %90
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.214, i32 noundef 5825) #15
  br label %97

97:                                               ; preds = %90, %96
  %98 = add nsw i32 %52, 1
  br label %99

99:                                               ; preds = %75, %85, %79, %97, %86, %66
  %100 = phi i32 [ %98, %97 ], [ %52, %86 ], [ %52, %66 ], [ %52, %79 ], [ %52, %85 ], [ %52, %75 ]
  %101 = phi i8 [ 0, %97 ], [ %50, %86 ], [ %50, %66 ], [ 1, %79 ], [ 1, %85 ], [ %50, %75 ]
  %102 = add nuw i64 %51, 1
  %103 = load i64, ptr %2, align 8, !tbaa !9
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %49, label %105, !llvm.loop !220

105:                                              ; preds = %99
  %106 = ptrtoint ptr %68 to i64
  br label %107

107:                                              ; preds = %43, %105
  %108 = phi i64 [ %44, %43 ], [ %106, %105 ]
  %109 = phi i64 [ %44, %43 ], [ %47, %105 ]
  %110 = phi ptr [ %40, %43 ], [ %68, %105 ]
  store i8 0, ptr %110, align 1, !tbaa !17
  %111 = sub i64 %108, %109
  store i64 %111, ptr %2, align 8, !tbaa !9
  store ptr %40, ptr %1, align 8, !tbaa !5
  tail call void @Perl_save_pushptr(ptr noundef %40, i32 noundef 10) #15
  %112 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  store i32 1, ptr %112, align 8, !tbaa !50
  %113 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 26
  store i32 1, ptr %113, align 4, !tbaa !49
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  ret void
}

declare ptr @Perl_newSV_type(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_reg(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  %12 = load i32, ptr %0, align 8, !tbaa !66
  %13 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !105
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  store volatile i64 0, ptr %6, align 8, !tbaa !9
  %15 = load volatile i64, ptr %6, align 8, !tbaa !9
  %16 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %17 = icmp eq ptr %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !13
  %21 = and i32 %20, 256
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  tail call void @Perl_sv_setuv(ptr noundef nonnull %16, i64 noundef 65288) #15
  %24 = load i32, ptr %19, align 4, !tbaa !13
  br label %25

25:                                               ; preds = %23, %18
  %26 = phi i32 [ %24, %23 ], [ %20, %18 ]
  %27 = and i32 %26, 2097408
  %28 = icmp eq i32 %27, 256
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = load ptr, ptr %16, align 8, !tbaa !16
  %31 = getelementptr inbounds %struct.xpviv, ptr %30, i64 0, i32 4
  %32 = load i64, ptr %31, align 8, !tbaa !17
  br label %35

33:                                               ; preds = %25
  %34 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %16, i32 noundef 2) #15
  br label %35

35:                                               ; preds = %33, %29
  %36 = phi i64 [ %32, %29 ], [ %34, %33 ]
  store volatile i64 %36, ptr %6, align 8, !tbaa !9
  br label %37

37:                                               ; preds = %4, %35
  %38 = icmp eq ptr %2, null
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.384, i32 noundef 9782) #15
  br label %40

40:                                               ; preds = %39, %37
  %41 = load volatile i64, ptr %6, align 8, !tbaa !9
  %42 = and i64 %41, 1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %105, label %44

44:                                               ; preds = %40
  %45 = load volatile i64, ptr %6, align 8, !tbaa !9
  %46 = and i64 %45, 1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %102, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 47
  %50 = load ptr, ptr %49, align 8, !tbaa !119
  %51 = load ptr, ptr %13, align 8, !tbaa !105
  %52 = icmp eq ptr %50, %51
  %53 = tail call ptr @Perl_PerlIO_stderr() #15
  br i1 %52, label %65, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 51
  %56 = load ptr, ptr %55, align 8, !tbaa !56
  %57 = load ptr, ptr %13, align 8, !tbaa !105
  %58 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %59 = load ptr, ptr %58, align 8, !tbaa !107
  %60 = ptrtoint ptr %59 to i64
  %61 = ptrtoint ptr %57 to i64
  %62 = sub i64 %60, %61
  %63 = tail call ptr @Perl_pv_pretty(ptr noundef %56, ptr noundef %57, i64 noundef %62, i64 noundef 16, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.8, i32 noundef 33294) #15
  %64 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %53, ptr noundef nonnull @.str.34, ptr noundef %63) #15
  br label %67

65:                                               ; preds = %48
  %66 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %53, ptr noundef nonnull @.str.385, ptr noundef nonnull @.str.8) #15
  br label %67

67:                                               ; preds = %65, %54
  %68 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %69 = load ptr, ptr %68, align 8, !tbaa !112
  %70 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %71 = icmp eq ptr %69, %70
  br i1 %71, label %72, label %77

72:                                               ; preds = %67
  %73 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %74 = load i64, ptr %73, align 8, !tbaa !111
  %75 = trunc i64 %74 to i32
  %76 = add i32 %75, 1
  br label %87

77:                                               ; preds = %67
  %78 = icmp eq ptr %69, null
  br i1 %78, label %87, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %81 = load ptr, ptr %80, align 8, !tbaa !131
  %82 = ptrtoint ptr %69 to i64
  %83 = ptrtoint ptr %81 to i64
  %84 = sub i64 %82, %83
  %85 = lshr exact i64 %84, 2
  %86 = trunc i64 %85 to i32
  br label %87

87:                                               ; preds = %79, %77, %72
  %88 = phi i32 [ %76, %72 ], [ %86, %79 ], [ -1, %77 ]
  %89 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 48
  %90 = load i32, ptr %89, align 8, !tbaa !118
  %91 = icmp eq i32 %90, %88
  %92 = tail call ptr @Perl_PerlIO_stderr() #15
  br i1 %91, label %95, label %93

93:                                               ; preds = %87
  %94 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %92, ptr noundef nonnull @.str.386, i32 noundef %88) #15
  br label %97

95:                                               ; preds = %87
  %96 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %92, ptr noundef nonnull @.str.387, ptr noundef nonnull @.str.8) #15
  br label %97

97:                                               ; preds = %95, %93
  %98 = tail call ptr @Perl_PerlIO_stderr() #15
  %99 = shl i32 %3, 1
  %100 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %98, ptr noundef nonnull @.str.388, i32 noundef %99, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.389) #15
  store i32 %88, ptr %89, align 8, !tbaa !118
  %101 = load ptr, ptr %13, align 8, !tbaa !105
  store ptr %101, ptr %49, align 8, !tbaa !119
  br label %102

102:                                              ; preds = %97, %44
  %103 = tail call ptr @Perl_PerlIO_stderr() #15
  %104 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %103, ptr noundef nonnull @.str.390, ptr noundef nonnull @.str.53) #15
  br label %105

105:                                              ; preds = %102, %40
  store i32 0, ptr %2, align 4, !tbaa !73
  switch i32 %1, label %106 [
    i32 0, label %2325
    i32 2, label %108
  ]

106:                                              ; preds = %105
  %107 = load ptr, ptr %13, align 8, !tbaa !105
  br label %113

108:                                              ; preds = %105
  %109 = load ptr, ptr %13, align 8, !tbaa !105
  %110 = getelementptr inbounds i8, ptr %109, i64 -1
  %111 = load i8, ptr %110, align 1, !tbaa !17
  %112 = icmp ne i8 %111, 40
  br label %113

113:                                              ; preds = %106, %108
  %114 = phi ptr [ %109, %108 ], [ %107, %106 ]
  %115 = phi i1 [ %112, %108 ], [ false, %106 ]
  %116 = load i8, ptr %114, align 1, !tbaa !17
  switch i8 %116, label %2178 [
    i8 42, label %117
    i8 63, label %490
  ]

117:                                              ; preds = %113
  br i1 %115, label %118, label %147

118:                                              ; preds = %117
  %119 = getelementptr inbounds i8, ptr %114, i64 1
  store ptr %119, ptr %13, align 8, !tbaa !105
  %120 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %121 = load ptr, ptr %120, align 8, !tbaa !112
  %122 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %123 = icmp eq ptr %121, %122
  br i1 %123, label %128, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %126 = load ptr, ptr %125, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %126, i32 noundef 11) #15
  %127 = load ptr, ptr %13, align 8, !tbaa !105
  br label %128

128:                                              ; preds = %118, %124
  %129 = phi ptr [ %119, %118 ], [ %127, %124 ]
  %130 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %131 = load ptr, ptr %130, align 8, !tbaa !107
  %132 = icmp ugt ptr %129, %131
  %133 = select i1 %132, ptr %131, ptr %129
  %134 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %135 = load ptr, ptr %134, align 8, !tbaa !65
  %136 = ptrtoint ptr %133 to i64
  %137 = ptrtoint ptr %135 to i64
  %138 = sub i64 %136, %137
  %139 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %140 = load i32, ptr %139, align 8, !tbaa !50
  %141 = icmp ne i32 %140, 0
  %142 = zext i1 %141 to i32
  %143 = ptrtoint ptr %131 to i64
  %144 = sub i64 %143, %136
  %145 = getelementptr inbounds i8, ptr %135, i64 %138
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.392, i32 noundef %142, i64 noundef %138, ptr noundef %135, i32 noundef %142, i64 noundef %144, ptr noundef %145) #15
  %146 = load ptr, ptr %13, align 8, !tbaa !105
  br label %147

147:                                              ; preds = %128, %117
  %148 = phi ptr [ %114, %117 ], [ %146, %128 ]
  br label %149

149:                                              ; preds = %147, %152
  %150 = phi ptr [ %153, %152 ], [ %148, %147 ]
  %151 = load i8, ptr %150, align 1, !tbaa !17
  switch i8 %151, label %152 [
    i8 0, label %196
    i8 41, label %196
    i8 58, label %154
  ]

152:                                              ; preds = %149
  %153 = getelementptr inbounds i8, ptr %150, i64 1
  store ptr %153, ptr %13, align 8, !tbaa !105
  br label %149, !llvm.loop !221

154:                                              ; preds = %149
  %155 = getelementptr inbounds i8, ptr %150, i64 1
  %156 = getelementptr inbounds i8, ptr %114, i64 1
  %157 = ptrtoint ptr %150 to i64
  %158 = ptrtoint ptr %156 to i64
  %159 = sub i64 %157, %158
  br label %160

160:                                              ; preds = %160, %154
  %161 = phi ptr [ %150, %154 ], [ %162, %160 ]
  %162 = getelementptr inbounds i8, ptr %161, i64 1
  store ptr %162, ptr %13, align 8, !tbaa !105
  %163 = load i8, ptr %162, align 1, !tbaa !17
  switch i8 %163, label %160 [
    i8 41, label %192
    i8 0, label %164
  ]

164:                                              ; preds = %160
  %165 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %166 = load ptr, ptr %165, align 8, !tbaa !112
  %167 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %168 = icmp eq ptr %166, %167
  br i1 %168, label %173, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %171 = load ptr, ptr %170, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %171, i32 noundef 11) #15
  %172 = load ptr, ptr %13, align 8, !tbaa !105
  br label %173

173:                                              ; preds = %164, %169
  %174 = phi ptr [ %162, %164 ], [ %172, %169 ]
  %175 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %176 = load ptr, ptr %175, align 8, !tbaa !107
  %177 = icmp ugt ptr %174, %176
  %178 = select i1 %177, ptr %176, ptr %174
  %179 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %180 = load ptr, ptr %179, align 8, !tbaa !65
  %181 = ptrtoint ptr %178 to i64
  %182 = ptrtoint ptr %180 to i64
  %183 = sub i64 %181, %182
  %184 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %185 = load i32, ptr %184, align 8, !tbaa !50
  %186 = icmp ne i32 %185, 0
  %187 = zext i1 %186 to i32
  %188 = ptrtoint ptr %176 to i64
  %189 = sub i64 %188, %181
  %190 = getelementptr inbounds i8, ptr %180, i64 %183
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.393, i32 noundef %187, i64 noundef %183, ptr noundef %180, i32 noundef %187, i64 noundef %189, ptr noundef %190) #15
  %191 = load ptr, ptr %13, align 8, !tbaa !105
  br label %192

192:                                              ; preds = %160, %173
  %193 = phi ptr [ %191, %173 ], [ %162, %160 ]
  %194 = icmp eq ptr %193, %155
  %195 = select i1 %194, ptr null, ptr %155
  br label %229

196:                                              ; preds = %149, %149
  %197 = getelementptr inbounds i8, ptr %114, i64 1
  %198 = ptrtoint ptr %150 to i64
  %199 = ptrtoint ptr %197 to i64
  %200 = sub i64 %198, %199
  %201 = icmp eq i8 %151, 41
  br i1 %201, label %229, label %202

202:                                              ; preds = %196
  %203 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %204 = load ptr, ptr %203, align 8, !tbaa !112
  %205 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %206 = icmp eq ptr %204, %205
  br i1 %206, label %211, label %207

207:                                              ; preds = %202
  %208 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %209 = load ptr, ptr %208, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %209, i32 noundef 11) #15
  %210 = load ptr, ptr %13, align 8, !tbaa !105
  br label %211

211:                                              ; preds = %202, %207
  %212 = phi ptr [ %150, %202 ], [ %210, %207 ]
  %213 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %214 = load ptr, ptr %213, align 8, !tbaa !107
  %215 = icmp ugt ptr %212, %214
  %216 = select i1 %215, ptr %214, ptr %212
  %217 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %218 = load ptr, ptr %217, align 8, !tbaa !65
  %219 = ptrtoint ptr %216 to i64
  %220 = ptrtoint ptr %218 to i64
  %221 = sub i64 %219, %220
  %222 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %223 = load i32, ptr %222, align 8, !tbaa !50
  %224 = icmp ne i32 %223, 0
  %225 = zext i1 %224 to i32
  %226 = ptrtoint ptr %214 to i64
  %227 = sub i64 %226, %219
  %228 = getelementptr inbounds i8, ptr %218, i64 %221
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.394, i32 noundef %225, i64 noundef %221, ptr noundef %218, i32 noundef %225, i64 noundef %227, ptr noundef %228) #15
  br label %229

229:                                              ; preds = %196, %211, %192
  %230 = phi i64 [ %159, %192 ], [ %200, %211 ], [ %200, %196 ]
  %231 = phi ptr [ %156, %192 ], [ %197, %211 ], [ %197, %196 ]
  %232 = phi ptr [ %195, %192 ], [ null, %211 ], [ null, %196 ]
  %233 = load i8, ptr %231, align 1, !tbaa !17
  %234 = sext i8 %233 to i32
  switch i32 %234, label %276 [
    i32 65, label %235
    i32 67, label %240
    i32 70, label %245
    i32 58, label %249
    i32 77, label %249
    i32 80, label %256
    i32 83, label %261
    i32 84, label %263
  ]

235:                                              ; preds = %229
  %236 = icmp eq i64 %230, 6
  br i1 %236, label %237, label %276

237:                                              ; preds = %235
  %238 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(6) %231, ptr noundef nonnull dereferenceable(6) @.str.395, i64 6)
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %320, label %276

240:                                              ; preds = %229
  %241 = icmp eq i64 %230, 6
  br i1 %241, label %242, label %276

242:                                              ; preds = %240
  %243 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(6) %231, ptr noundef nonnull dereferenceable(6) @.str.396, i64 6)
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %317, label %276

245:                                              ; preds = %229
  switch i64 %230, label %276 [
    i64 1, label %451
    i64 4, label %246
  ]

246:                                              ; preds = %245
  %247 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %231, ptr noundef nonnull dereferenceable(4) @.str.397, i64 4)
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %451, label %276

249:                                              ; preds = %229, %229
  %250 = icmp eq ptr %150, %231
  br i1 %250, label %334, label %251

251:                                              ; preds = %249
  %252 = icmp eq i64 %230, 4
  br i1 %252, label %253, label %276

253:                                              ; preds = %251
  %254 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %231, ptr noundef nonnull dereferenceable(4) @.str.398, i64 4)
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %334, label %276

256:                                              ; preds = %229
  %257 = icmp eq i64 %230, 5
  br i1 %257, label %258, label %276

258:                                              ; preds = %256
  %259 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(5) %231, ptr noundef nonnull dereferenceable(5) @.str.399, i64 5)
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %317, label %276

261:                                              ; preds = %229
  %262 = icmp eq i64 %230, 4
  br i1 %262, label %273, label %276

263:                                              ; preds = %229
  %264 = icmp eq i64 %230, 4
  br i1 %264, label %265, label %276

265:                                              ; preds = %263
  %266 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %231, ptr noundef nonnull dereferenceable(4) @.str.401, i64 4)
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %276

268:                                              ; preds = %265
  %269 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %270 = load i32, ptr %269, align 8, !tbaa !98
  %271 = or i32 %270, 256
  store i32 %271, ptr %269, align 8, !tbaa !98
  %272 = icmp ne ptr %232, null
  br label %360

273:                                              ; preds = %261
  %274 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %231, ptr noundef nonnull dereferenceable(4) @.str.400, i64 4)
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %317, label %276

276:                                              ; preds = %245, %235, %237, %240, %246, %251, %253, %256, %261, %263, %265, %229, %258, %242, %273
  %277 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %278 = load i32, ptr %277, align 8, !tbaa !50
  %279 = icmp eq i32 %278, 0
  %280 = load ptr, ptr %13, align 8, !tbaa !105
  br i1 %279, label %287, label %281

281:                                              ; preds = %276
  %282 = load i8, ptr %280, align 1, !tbaa !17
  %283 = zext i8 %282 to i64
  %284 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %283
  %285 = load i8, ptr %284, align 1, !tbaa !17
  %286 = zext i8 %285 to i64
  br label %287

287:                                              ; preds = %276, %281
  %288 = phi i64 [ %286, %281 ], [ 1, %276 ]
  %289 = getelementptr inbounds i8, ptr %280, i64 %288
  store ptr %289, ptr %13, align 8, !tbaa !105
  %290 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %291 = load ptr, ptr %290, align 8, !tbaa !65
  %292 = ptrtoint ptr %289 to i64
  %293 = ptrtoint ptr %291 to i64
  %294 = sub i64 %292, %293
  %295 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %296 = load ptr, ptr %295, align 8, !tbaa !112
  %297 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %298 = icmp eq ptr %296, %297
  br i1 %298, label %305, label %299

299:                                              ; preds = %287
  %300 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %301 = load ptr, ptr %300, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %301, i32 noundef 11) #15
  %302 = load i32, ptr %277, align 8, !tbaa !50
  %303 = load ptr, ptr %290, align 8, !tbaa !65
  %304 = ptrtoint ptr %303 to i64
  br label %305

305:                                              ; preds = %299, %287
  %306 = phi i64 [ %304, %299 ], [ %293, %287 ]
  %307 = phi ptr [ %303, %299 ], [ %291, %287 ]
  %308 = phi i32 [ %302, %299 ], [ %278, %287 ]
  %309 = icmp ne i32 %308, 0
  %310 = zext i1 %309 to i32
  %311 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %312 = load ptr, ptr %311, align 8, !tbaa !107
  %313 = ptrtoint ptr %312 to i64
  %314 = add i64 %306, %294
  %315 = sub i64 %313, %314
  %316 = getelementptr inbounds i8, ptr %307, i64 %294
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %309, ptr noundef nonnull @.str.402, ptr nonnull poison, i32 noundef %310, i64 noundef %230, ptr noundef nonnull %231, i32 noundef %310, i64 noundef %294, ptr noundef %307, i32 noundef %310, i64 noundef %315, ptr noundef %316)
  br label %317

317:                                              ; preds = %258, %242, %273, %305
  %318 = phi i8 [ 85, %258 ], [ 88, %242 ], [ 87, %273 ], [ 0, %305 ]
  %319 = icmp ne ptr %232, null
  br label %360

320:                                              ; preds = %237
  %321 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 19
  %322 = load i32, ptr %321, align 4, !tbaa !110
  %323 = icmp ne ptr %232, null
  %324 = icmp ne i32 %322, 0
  %325 = select i1 %323, i1 %324, i1 false
  br i1 %325, label %326, label %360

326:                                              ; preds = %320
  %327 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %328 = load ptr, ptr %327, align 8, !tbaa !112
  %329 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %330 = icmp eq ptr %328, %329
  br i1 %330, label %430, label %331

331:                                              ; preds = %326
  %332 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %333 = load ptr, ptr %332, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %333, i32 noundef 11) #15
  br label %430

334:                                              ; preds = %249, %253
  %335 = icmp eq ptr %232, null
  br i1 %335, label %336, label %360

336:                                              ; preds = %334
  %337 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %338 = load ptr, ptr %337, align 8, !tbaa !112
  %339 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %340 = icmp eq ptr %338, %339
  br i1 %340, label %344, label %341

341:                                              ; preds = %336
  %342 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %343 = load ptr, ptr %342, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %343, i32 noundef 11) #15
  br label %344

344:                                              ; preds = %336, %341
  %345 = load ptr, ptr %13, align 8, !tbaa !105
  %346 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %347 = load ptr, ptr %346, align 8, !tbaa !65
  %348 = ptrtoint ptr %345 to i64
  %349 = ptrtoint ptr %347 to i64
  %350 = sub i64 %348, %349
  %351 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %352 = load i32, ptr %351, align 8, !tbaa !50
  %353 = icmp ne i32 %352, 0
  %354 = zext i1 %353 to i32
  %355 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %356 = load ptr, ptr %355, align 8, !tbaa !107
  %357 = ptrtoint ptr %356 to i64
  %358 = sub i64 %357, %348
  %359 = getelementptr inbounds i8, ptr %347, i64 %350
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %353, ptr noundef nonnull @.str.405, ptr nonnull poison, i64 noundef %230, ptr noundef nonnull %231, i32 noundef %354, i64 noundef %350, ptr noundef %347, i32 noundef %354, i64 noundef %358, ptr noundef %359)
  br label %446

360:                                              ; preds = %320, %317, %334, %268
  %361 = phi i32 [ 0, %334 ], [ 0, %268 ], [ %322, %320 ], [ 0, %317 ]
  %362 = phi i8 [ 86, %334 ], [ 89, %268 ], [ 83, %320 ], [ %318, %317 ]
  %363 = phi i1 [ true, %334 ], [ %272, %268 ], [ %323, %320 ], [ %319, %317 ]
  %364 = phi i1 [ false, %334 ], [ false, %268 ], [ %324, %320 ], [ false, %317 ]
  %365 = zext i8 %362 to i64
  %366 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %365
  %367 = load i8, ptr %366, align 1, !tbaa !17
  %368 = zext i8 %367 to i64
  %369 = tail call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext %362, i64 noundef %368, ptr noundef nonnull @.str.452)
  %370 = icmp eq i8 %367, 1
  br i1 %370, label %372, label %371

371:                                              ; preds = %360
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.453, i32 noundef 16379) #15
  br label %372

372:                                              ; preds = %371, %360
  %373 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %374 = load ptr, ptr %373, align 8, !tbaa !112
  %375 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %376 = icmp eq ptr %374, %375
  br i1 %376, label %382, label %377

377:                                              ; preds = %372
  %378 = getelementptr inbounds %struct.regnode_1, ptr %369, i64 0, i32 3
  store i32 %361, ptr %378, align 4, !tbaa !148
  %379 = getelementptr inbounds %struct.regnode, ptr %369, i64 0, i32 1
  store i8 %362, ptr %379, align 1, !tbaa !141
  %380 = getelementptr inbounds %struct.regnode, ptr %369, i64 0, i32 2
  store i16 0, ptr %380, align 2, !tbaa !222
  %381 = getelementptr inbounds %struct.regnode, ptr %369, i64 2
  store ptr %381, ptr %373, align 8, !tbaa !112
  br label %382

382:                                              ; preds = %372, %377
  %383 = phi ptr [ %375, %372 ], [ %381, %377 ]
  br i1 %364, label %487, label %384

384:                                              ; preds = %382
  %385 = icmp eq ptr %383, %375
  br i1 %385, label %446, label %386

386:                                              ; preds = %384
  br i1 %363, label %387, label %429

387:                                              ; preds = %386
  %388 = load ptr, ptr %13, align 8, !tbaa !105
  %389 = ptrtoint ptr %388 to i64
  %390 = ptrtoint ptr %232 to i64
  %391 = sub i64 %389, %390
  %392 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull %232, i64 noundef %391) #15
  %393 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %394 = load ptr, ptr %393, align 8, !tbaa !130
  %395 = getelementptr inbounds %struct.regexp_internal, ptr %394, i64 0, i32 3
  %396 = load ptr, ptr %395, align 8, !tbaa !147
  %397 = icmp eq ptr %396, null
  br i1 %397, label %400, label %398

398:                                              ; preds = %387
  %399 = load i32, ptr %396, align 8, !tbaa !156
  br label %400

400:                                              ; preds = %398, %387
  %401 = phi i32 [ %399, %398 ], [ 0, %387 ]
  %402 = add i32 %401, 1
  %403 = zext i32 %401 to i64
  %404 = shl nuw nsw i64 %403, 3
  %405 = add nuw nsw i64 %404, 24
  %406 = tail call ptr @Perl_safesysrealloc(ptr noundef %396, i64 noundef %405) #15
  %407 = load ptr, ptr %393, align 8, !tbaa !130
  %408 = getelementptr inbounds %struct.regexp_internal, ptr %407, i64 0, i32 3
  store ptr %406, ptr %408, align 8, !tbaa !147
  %409 = icmp eq i32 %401, 0
  br i1 %409, label %415, label %410

410:                                              ; preds = %400
  %411 = getelementptr inbounds %struct.reg_data, ptr %406, i64 0, i32 1
  %412 = load ptr, ptr %411, align 8, !tbaa !158
  %413 = zext i32 %402 to i64
  %414 = tail call ptr @Perl_safesysrealloc(ptr noundef %412, i64 noundef %413) #15
  br label %417

415:                                              ; preds = %400
  %416 = tail call ptr @Perl_safesysmalloc(i64 noundef 1) #15
  br label %417

417:                                              ; preds = %410, %415
  %418 = phi ptr [ %414, %410 ], [ %416, %415 ]
  %419 = load ptr, ptr %393, align 8, !tbaa !130
  %420 = getelementptr inbounds %struct.regexp_internal, ptr %419, i64 0, i32 3
  %421 = load ptr, ptr %420, align 8, !tbaa !147
  %422 = getelementptr inbounds %struct.reg_data, ptr %421, i64 0, i32 1
  store ptr %418, ptr %422, align 8, !tbaa !158
  store i32 %402, ptr %421, align 8, !tbaa !156
  %423 = getelementptr inbounds i8, ptr %418, i64 %403
  store i8 83, ptr %423, align 1
  %424 = getelementptr inbounds %struct.regnode_1, ptr %369, i64 0, i32 3
  store i32 %401, ptr %424, align 4, !tbaa !148
  %425 = load ptr, ptr %393, align 8, !tbaa !130
  %426 = getelementptr inbounds %struct.regexp_internal, ptr %425, i64 0, i32 3
  %427 = load ptr, ptr %426, align 8, !tbaa !147
  %428 = getelementptr inbounds %struct.reg_data, ptr %427, i64 0, i32 2, i64 %403
  store ptr %392, ptr %428, align 8, !tbaa !5
  store i8 0, ptr %369, align 2, !tbaa !143
  br label %446

429:                                              ; preds = %386
  store i8 1, ptr %369, align 2, !tbaa !143
  br label %446

430:                                              ; preds = %331, %326
  %431 = load ptr, ptr %13, align 8, !tbaa !105
  %432 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %433 = load ptr, ptr %432, align 8, !tbaa !65
  %434 = ptrtoint ptr %431 to i64
  %435 = ptrtoint ptr %433 to i64
  %436 = sub i64 %434, %435
  %437 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %438 = load i32, ptr %437, align 8, !tbaa !50
  %439 = icmp ne i32 %438, 0
  %440 = zext i1 %439 to i32
  %441 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %442 = load ptr, ptr %441, align 8, !tbaa !107
  %443 = ptrtoint ptr %442 to i64
  %444 = sub i64 %443, %434
  %445 = getelementptr inbounds i8, ptr %433, i64 %436
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %439, ptr noundef nonnull @.str.404, ptr nonnull poison, i64 noundef 6, ptr noundef nonnull %231, i32 noundef %440, i64 noundef %436, ptr noundef %433, i32 noundef %440, i64 noundef %444, ptr noundef %445)
  br label %487

446:                                              ; preds = %384, %417, %429, %344
  %447 = phi ptr [ undef, %344 ], [ %369, %429 ], [ %369, %417 ], [ %369, %384 ]
  %448 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %449 = load i32, ptr %448, align 8, !tbaa !98
  %450 = or i32 %449, 128
  store i32 %450, ptr %448, align 8, !tbaa !98
  br label %487

451:                                              ; preds = %245, %246
  %452 = icmp eq ptr %232, null
  br i1 %452, label %477, label %453

453:                                              ; preds = %451
  %454 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %455 = load ptr, ptr %454, align 8, !tbaa !112
  %456 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %457 = icmp eq ptr %455, %456
  br i1 %457, label %461, label %458

458:                                              ; preds = %453
  %459 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %460 = load ptr, ptr %459, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %460, i32 noundef 11) #15
  br label %461

461:                                              ; preds = %453, %458
  %462 = load ptr, ptr %13, align 8, !tbaa !105
  %463 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %464 = load ptr, ptr %463, align 8, !tbaa !65
  %465 = ptrtoint ptr %462 to i64
  %466 = ptrtoint ptr %464 to i64
  %467 = sub i64 %465, %466
  %468 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %469 = load i32, ptr %468, align 8, !tbaa !50
  %470 = icmp ne i32 %469, 0
  %471 = zext i1 %470 to i32
  %472 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %473 = load ptr, ptr %472, align 8, !tbaa !107
  %474 = ptrtoint ptr %473 to i64
  %475 = sub i64 %474, %465
  %476 = getelementptr inbounds i8, ptr %464, i64 %467
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %470, ptr noundef nonnull @.str.404, ptr nonnull poison, i64 noundef %230, ptr noundef nonnull %231, i32 noundef %471, i64 noundef %467, ptr noundef %464, i32 noundef %471, i64 noundef %475, ptr noundef %476)
  br label %487

477:                                              ; preds = %451
  %478 = tail call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 82, i64 noundef 0, ptr noundef nonnull @.str.460)
  %479 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %480 = load ptr, ptr %479, align 8, !tbaa !112
  %481 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %482 = icmp eq ptr %480, %481
  br i1 %482, label %487, label %483

483:                                              ; preds = %477
  %484 = getelementptr inbounds %struct.regnode, ptr %478, i64 0, i32 1
  store i8 82, ptr %484, align 1, !tbaa !141
  %485 = getelementptr inbounds %struct.regnode, ptr %478, i64 0, i32 2
  store i16 0, ptr %485, align 2, !tbaa !222
  %486 = getelementptr inbounds %struct.regnode, ptr %478, i64 1
  store ptr %486, ptr %479, align 8, !tbaa !112
  br label %487

487:                                              ; preds = %446, %461, %430, %477, %483, %382
  %488 = phi ptr [ undef, %430 ], [ %447, %446 ], [ undef, %461 ], [ %478, %477 ], [ %478, %483 ], [ %369, %382 ]
  %489 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %3305

490:                                              ; preds = %113
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #15
  br i1 %115, label %491, label %520

491:                                              ; preds = %490
  %492 = getelementptr inbounds i8, ptr %114, i64 1
  store ptr %492, ptr %13, align 8, !tbaa !105
  %493 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %494 = load ptr, ptr %493, align 8, !tbaa !112
  %495 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %496 = icmp eq ptr %494, %495
  br i1 %496, label %501, label %497

497:                                              ; preds = %491
  %498 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %499 = load ptr, ptr %498, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %499, i32 noundef 11) #15
  %500 = load ptr, ptr %13, align 8, !tbaa !105
  br label %501

501:                                              ; preds = %491, %497
  %502 = phi ptr [ %492, %491 ], [ %500, %497 ]
  %503 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %504 = load ptr, ptr %503, align 8, !tbaa !107
  %505 = icmp ugt ptr %502, %504
  %506 = select i1 %505, ptr %504, ptr %502
  %507 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %508 = load ptr, ptr %507, align 8, !tbaa !65
  %509 = ptrtoint ptr %506 to i64
  %510 = ptrtoint ptr %508 to i64
  %511 = sub i64 %509, %510
  %512 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %513 = load i32, ptr %512, align 8, !tbaa !50
  %514 = icmp ne i32 %513, 0
  %515 = zext i1 %514 to i32
  %516 = ptrtoint ptr %504 to i64
  %517 = sub i64 %516, %509
  %518 = getelementptr inbounds i8, ptr %508, i64 %511
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.407, i32 noundef %515, i64 noundef %511, ptr noundef %508, i32 noundef %515, i64 noundef %517, ptr noundef %518) #15
  %519 = load ptr, ptr %13, align 8, !tbaa !105
  br label %520

520:                                              ; preds = %501, %490
  %521 = phi ptr [ %519, %501 ], [ %114, %490 ]
  %522 = getelementptr inbounds i8, ptr %521, i64 1
  %523 = getelementptr inbounds i8, ptr %521, i64 2
  store ptr %523, ptr %13, align 8, !tbaa !105
  %524 = load i8, ptr %522, align 1, !tbaa !17
  %525 = sext i8 %524 to i32
  switch i32 %525, label %2167 [
    i32 80, label %526
    i32 60, label %737
    i32 39, label %741
    i32 61, label %990
    i32 33, label %995
    i32 124, label %1006
    i32 58, label %2173
    i32 62, label %2173
    i32 36, label %1009
    i32 64, label %1009
    i32 48, label %1034
    i32 82, label %1034
    i32 38, label %1070
    i32 43, label %1118
    i32 45, label %1151
    i32 49, label %1155
    i32 50, label %1155
    i32 51, label %1155
    i32 52, label %1155
    i32 53, label %1155
    i32 54, label %1155
    i32 55, label %1155
    i32 56, label %1155
    i32 57, label %1155
    i32 63, label %1412
    i32 123, label %1464
    i32 40, label %1714
    i32 91, label %2138
    i32 0, label %2140
  ]

526:                                              ; preds = %520
  %527 = getelementptr inbounds i8, ptr %521, i64 3
  store ptr %527, ptr %13, align 8, !tbaa !105
  %528 = load i8, ptr %523, align 1, !tbaa !17
  %529 = sext i8 %528 to i32
  switch i8 %528, label %695 [
    i8 60, label %741
    i8 62, label %1070
    i8 61, label %530
  ]

530:                                              ; preds = %526
  %531 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %532 = load ptr, ptr %531, align 8, !tbaa !112
  %533 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %534 = icmp eq ptr %532, %533
  %535 = select i1 %534, i32 0, i32 2
  %536 = tail call fastcc ptr @S_reg_scan_name(ptr noundef nonnull %0, i32 noundef %535)
  %537 = load ptr, ptr %13, align 8, !tbaa !105
  %538 = icmp eq ptr %537, %527
  br i1 %538, label %542, label %539

539:                                              ; preds = %530
  %540 = load i8, ptr %537, align 1, !tbaa !17
  %541 = icmp eq i8 %540, 41
  br i1 %541, label %565, label %542

542:                                              ; preds = %530, %539
  %543 = load ptr, ptr %531, align 8, !tbaa !112
  %544 = icmp eq ptr %543, %533
  br i1 %544, label %549, label %545

545:                                              ; preds = %542
  %546 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %547 = load ptr, ptr %546, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %547, i32 noundef 11) #15
  %548 = load ptr, ptr %13, align 8, !tbaa !105
  br label %549

549:                                              ; preds = %542, %545
  %550 = phi ptr [ %537, %542 ], [ %548, %545 ]
  %551 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %552 = load ptr, ptr %551, align 8, !tbaa !65
  %553 = ptrtoint ptr %550 to i64
  %554 = ptrtoint ptr %552 to i64
  %555 = sub i64 %553, %554
  %556 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %557 = load i32, ptr %556, align 8, !tbaa !50
  %558 = icmp ne i32 %557, 0
  %559 = zext i1 %558 to i32
  %560 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %561 = load ptr, ptr %560, align 8, !tbaa !107
  %562 = ptrtoint ptr %561 to i64
  %563 = sub i64 %562, %553
  %564 = getelementptr inbounds i8, ptr %552, i64 %555
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %558, ptr noundef nonnull @.str.408, ptr nonnull poison, ptr noundef %14, i32 noundef %559, i64 noundef %555, ptr noundef %552, i32 noundef %559, i64 noundef %563, ptr noundef %564)
  br label %565

565:                                              ; preds = %549, %539
  %566 = load ptr, ptr %531, align 8, !tbaa !112
  %567 = icmp eq ptr %566, %533
  br i1 %567, label %581, label %568

568:                                              ; preds = %565
  %569 = tail call fastcc i32 @S_add_data(ptr noundef nonnull %0, ptr noundef nonnull @.str.406, i32 noundef 1)
  %570 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %571 = load ptr, ptr %570, align 8, !tbaa !130
  %572 = getelementptr inbounds %struct.regexp_internal, ptr %571, i64 0, i32 3
  %573 = load ptr, ptr %572, align 8, !tbaa !147
  %574 = zext i32 %569 to i64
  %575 = getelementptr inbounds %struct.reg_data, ptr %573, i64 0, i32 2, i64 %574
  store ptr %536, ptr %575, align 8, !tbaa !5
  %576 = icmp eq ptr %536, null
  br i1 %576, label %581, label %577

577:                                              ; preds = %568
  %578 = getelementptr inbounds %struct.sv, ptr %536, i64 0, i32 1
  %579 = load i32, ptr %578, align 8, !tbaa !37
  %580 = add i32 %579, 1
  store i32 %580, ptr %578, align 8, !tbaa !37
  br label %581

581:                                              ; preds = %568, %577, %565
  %582 = phi i32 [ 0, %565 ], [ %569, %577 ], [ %569, %568 ]
  %583 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 15
  store i32 1, ptr %583, align 4, !tbaa !97
  %584 = load i32, ptr %0, align 8, !tbaa !66
  %585 = and i32 %584, 4
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %596, label %587

587:                                              ; preds = %581
  %588 = lshr i32 %584, 7
  %589 = and i32 %588, 7
  %590 = icmp eq i32 %589, 4
  br i1 %590, label %596, label %591

591:                                              ; preds = %587
  %592 = icmp ugt i32 %589, 1
  br i1 %592, label %596, label %593

593:                                              ; preds = %591
  %594 = icmp eq i32 %589, 1
  %595 = select i1 %594, i8 58, i8 57
  br label %596

596:                                              ; preds = %587, %591, %593, %581
  %597 = phi i8 [ 56, %581 ], [ 60, %587 ], [ %595, %593 ], [ 59, %591 ]
  %598 = tail call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext %597, i32 noundef %582)
  %599 = load i32, ptr %2, align 4, !tbaa !73
  %600 = or i32 %599, 1
  store i32 %600, ptr %2, align 4, !tbaa !73
  %601 = load ptr, ptr %531, align 8, !tbaa !112
  %602 = icmp eq ptr %601, %533
  br i1 %602, label %649, label %603

603:                                              ; preds = %596
  %604 = load volatile i64, ptr %6, align 8, !tbaa !9
  %605 = and i64 %604, 262144
  %606 = icmp eq i64 %605, 0
  br i1 %606, label %607, label %609

607:                                              ; preds = %603
  %608 = ptrtoint ptr %598 to i64
  br label %624

609:                                              ; preds = %603
  %610 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %611 = load ptr, ptr %610, align 8, !tbaa !131
  %612 = ptrtoint ptr %598 to i64
  %613 = ptrtoint ptr %611 to i64
  %614 = sub i64 %612, %613
  %615 = lshr exact i64 %614, 2
  %616 = trunc i64 %615 to i32
  %617 = getelementptr inbounds i8, ptr %14, i64 1
  %618 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %619 = load ptr, ptr %618, align 8, !tbaa !106
  %620 = ptrtoint ptr %617 to i64
  %621 = ptrtoint ptr %619 to i64
  %622 = sub i64 %620, %621
  %623 = trunc i64 %622 to i32
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 9963, i32 noundef %616, i32 noundef %623) #15
  br label %624

624:                                              ; preds = %607, %609
  %625 = phi i64 [ %608, %607 ], [ %612, %609 ]
  %626 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %627 = load ptr, ptr %626, align 8, !tbaa !131
  %628 = ptrtoint ptr %627 to i64
  %629 = sub i64 %625, %628
  %630 = icmp slt i64 %629, 0
  br i1 %630, label %631, label %634

631:                                              ; preds = %624
  %632 = lshr exact i64 %629, 2
  %633 = trunc i64 %632 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %633) #15
  br label %649

634:                                              ; preds = %624
  %635 = getelementptr inbounds i8, ptr %14, i64 1
  %636 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %637 = load ptr, ptr %636, align 8, !tbaa !106
  %638 = ptrtoint ptr %635 to i64
  %639 = ptrtoint ptr %637 to i64
  %640 = sub i64 %638, %639
  %641 = trunc i64 %640 to i32
  %642 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %643 = load ptr, ptr %642, align 8, !tbaa !130
  %644 = getelementptr inbounds %struct.regexp_internal, ptr %643, i64 0, i32 1
  %645 = load ptr, ptr %644, align 8, !tbaa !17
  %646 = lshr exact i64 %629, 1
  %647 = add nsw i64 %646, -1
  %648 = getelementptr inbounds i32, ptr %645, i64 %647
  store i32 %641, ptr %648, align 4, !tbaa !73
  br label %649

649:                                              ; preds = %596, %634, %631
  %650 = load ptr, ptr %531, align 8, !tbaa !112
  %651 = icmp eq ptr %650, %533
  br i1 %651, label %693, label %652

652:                                              ; preds = %649
  %653 = load volatile i64, ptr %6, align 8, !tbaa !9
  %654 = and i64 %653, 262144
  %655 = icmp eq i64 %654, 0
  br i1 %655, label %656, label %658

656:                                              ; preds = %652
  %657 = ptrtoint ptr %598 to i64
  br label %671

658:                                              ; preds = %652
  %659 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %660 = load ptr, ptr %659, align 8, !tbaa !131
  %661 = ptrtoint ptr %598 to i64
  %662 = ptrtoint ptr %660 to i64
  %663 = sub i64 %661, %662
  %664 = lshr exact i64 %663, 2
  %665 = trunc i64 %664 to i32
  %666 = load ptr, ptr %13, align 8, !tbaa !105
  %667 = ptrtoint ptr %666 to i64
  %668 = ptrtoint ptr %14 to i64
  %669 = sub i64 %667, %668
  %670 = trunc i64 %669 to i32
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 9964, i32 noundef %665, i32 noundef %670) #15
  br label %671

671:                                              ; preds = %656, %658
  %672 = phi i64 [ %657, %656 ], [ %661, %658 ]
  %673 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %674 = load ptr, ptr %673, align 8, !tbaa !131
  %675 = ptrtoint ptr %674 to i64
  %676 = sub i64 %672, %675
  %677 = icmp slt i64 %676, 0
  br i1 %677, label %678, label %681

678:                                              ; preds = %671
  %679 = lshr exact i64 %676, 2
  %680 = trunc i64 %679 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %680) #15
  br label %693

681:                                              ; preds = %671
  %682 = load ptr, ptr %13, align 8, !tbaa !105
  %683 = ptrtoint ptr %682 to i64
  %684 = ptrtoint ptr %14 to i64
  %685 = sub i64 %683, %684
  %686 = trunc i64 %685 to i32
  %687 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %688 = load ptr, ptr %687, align 8, !tbaa !130
  %689 = getelementptr inbounds %struct.regexp_internal, ptr %688, i64 0, i32 1
  %690 = load ptr, ptr %689, align 8, !tbaa !17
  %691 = lshr exact i64 %676, 1
  %692 = getelementptr inbounds i32, ptr %690, i64 %691
  store i32 %686, ptr %692, align 4, !tbaa !73
  br label %693

693:                                              ; preds = %678, %681, %649
  %694 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %2321

695:                                              ; preds = %526
  store ptr %523, ptr %13, align 8, !tbaa !105
  %696 = load i8, ptr %523, align 1, !tbaa !17
  %697 = icmp eq i8 %696, 0
  br i1 %697, label %707, label %698

698:                                              ; preds = %695
  %699 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %700 = load i32, ptr %699, align 8, !tbaa !50
  %701 = icmp eq i32 %700, 0
  br i1 %701, label %707, label %702

702:                                              ; preds = %698
  %703 = zext i8 %696 to i64
  %704 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %703
  %705 = load i8, ptr %704, align 1, !tbaa !17
  %706 = zext i8 %705 to i64
  br label %707

707:                                              ; preds = %702, %698, %695
  %708 = phi i64 [ 0, %695 ], [ %706, %702 ], [ 1, %698 ]
  %709 = getelementptr inbounds i8, ptr %523, i64 %708
  store ptr %709, ptr %13, align 8, !tbaa !105
  %710 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %711 = load ptr, ptr %710, align 8, !tbaa !112
  %712 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %713 = icmp eq ptr %711, %712
  br i1 %713, label %718, label %714

714:                                              ; preds = %707
  %715 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %716 = load ptr, ptr %715, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %716, i32 noundef 11) #15
  %717 = load ptr, ptr %13, align 8, !tbaa !105
  br label %718

718:                                              ; preds = %707, %714
  %719 = phi ptr [ %709, %707 ], [ %717, %714 ]
  %720 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %721 = load ptr, ptr %720, align 8, !tbaa !65
  %722 = ptrtoint ptr %719 to i64
  %723 = ptrtoint ptr %721 to i64
  %724 = sub i64 %722, %723
  %725 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %726 = load i32, ptr %725, align 8, !tbaa !50
  %727 = icmp ne i32 %726, 0
  %728 = zext i1 %727 to i32
  %729 = ptrtoint ptr %114 to i64
  %730 = sub i64 %722, %729
  %731 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %732 = load ptr, ptr %731, align 8, !tbaa !107
  %733 = ptrtoint ptr %732 to i64
  %734 = sub i64 %733, %722
  %735 = getelementptr inbounds i8, ptr %721, i64 %724
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %727, ptr noundef nonnull @.str.409, ptr nonnull poison, i64 noundef %730, ptr noundef nonnull %114, i32 noundef %728, i64 noundef %724, ptr noundef %721, i32 noundef %728, i64 noundef %734, ptr noundef %735)
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.220, i32 noundef 9974) #15
  %736 = load ptr, ptr %13, align 8, !tbaa !105
  br label %737

737:                                              ; preds = %520, %718
  %738 = phi ptr [ %523, %520 ], [ %736, %718 ]
  %739 = phi i32 [ %525, %520 ], [ %529, %718 ]
  %740 = load i8, ptr %738, align 1, !tbaa !17
  switch i8 %740, label %741 [
    i8 33, label %981
    i8 61, label %980
  ]

741:                                              ; preds = %526, %737, %520
  %742 = phi ptr [ %523, %520 ], [ %738, %737 ], [ %527, %526 ]
  %743 = phi i32 [ %525, %520 ], [ 60, %737 ], [ 60, %526 ]
  %744 = phi i32 [ %525, %520 ], [ 62, %737 ], [ 62, %526 ]
  %745 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %746 = load ptr, ptr %745, align 8, !tbaa !112
  %747 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %748 = icmp eq ptr %746, %747
  %749 = zext i1 %748 to i32
  %750 = tail call fastcc ptr @S_reg_scan_name(ptr noundef nonnull %0, i32 noundef %749)
  %751 = load ptr, ptr %13, align 8, !tbaa !105
  %752 = icmp eq ptr %751, %742
  br i1 %752, label %757, label %753

753:                                              ; preds = %741
  %754 = load i8, ptr %751, align 1, !tbaa !17
  %755 = sext i8 %754 to i32
  %756 = icmp eq i32 %744, %755
  br i1 %756, label %780, label %757

757:                                              ; preds = %741, %753
  %758 = load ptr, ptr %745, align 8, !tbaa !112
  %759 = icmp eq ptr %758, %747
  br i1 %759, label %764, label %760

760:                                              ; preds = %757
  %761 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %762 = load ptr, ptr %761, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %762, i32 noundef 11) #15
  %763 = load ptr, ptr %13, align 8, !tbaa !105
  br label %764

764:                                              ; preds = %757, %760
  %765 = phi ptr [ %751, %757 ], [ %763, %760 ]
  %766 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %767 = load ptr, ptr %766, align 8, !tbaa !65
  %768 = ptrtoint ptr %765 to i64
  %769 = ptrtoint ptr %767 to i64
  %770 = sub i64 %768, %769
  %771 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %772 = load i32, ptr %771, align 8, !tbaa !50
  %773 = icmp ne i32 %772, 0
  %774 = zext i1 %773 to i32
  %775 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %776 = load ptr, ptr %775, align 8, !tbaa !107
  %777 = ptrtoint ptr %776 to i64
  %778 = sub i64 %777, %768
  %779 = getelementptr inbounds i8, ptr %767, i64 %770
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %773, ptr noundef nonnull @.str.410, ptr nonnull poison, i32 noundef %743, i32 noundef %774, i64 noundef %770, ptr noundef %767, i32 noundef %774, i64 noundef %778, ptr noundef %779)
  br label %780

780:                                              ; preds = %764, %753
  %781 = load ptr, ptr %745, align 8, !tbaa !112
  %782 = icmp eq ptr %781, %747
  br i1 %782, label %783, label %2176

783:                                              ; preds = %780
  %784 = icmp eq ptr %750, null
  br i1 %784, label %785, label %786

785:                                              ; preds = %783
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.411) #15
  br label %786

786:                                              ; preds = %785, %783
  %787 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 28
  %788 = load ptr, ptr %787, align 8, !tbaa !204
  %789 = icmp eq ptr %788, null
  br i1 %789, label %790, label %797

790:                                              ; preds = %786
  %791 = tail call ptr @Perl_newSV_type(i32 noundef 12) #15
  store ptr %791, ptr %787, align 8, !tbaa !204
  %792 = tail call ptr @Perl_sv_2mortal(ptr noundef %791) #15
  %793 = tail call ptr @Perl_newSV_type(i32 noundef 11) #15
  %794 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 49
  store ptr %793, ptr %794, align 8, !tbaa !114
  %795 = tail call ptr @Perl_sv_2mortal(ptr noundef %793) #15
  %796 = load ptr, ptr %787, align 8, !tbaa !204
  br label %797

797:                                              ; preds = %790, %786
  %798 = phi ptr [ %796, %790 ], [ %788, %786 ]
  %799 = tail call ptr @Perl_hv_common(ptr noundef %798, ptr noundef %750, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 16, ptr noundef null, i32 noundef 0) #15
  %800 = icmp eq ptr %799, null
  br i1 %800, label %805, label %801

801:                                              ; preds = %797
  %802 = getelementptr inbounds %struct.he, ptr %799, i64 0, i32 2
  %803 = load ptr, ptr %802, align 8, !tbaa !17
  %804 = icmp eq ptr %803, null
  br i1 %804, label %805, label %806

805:                                              ; preds = %797, %801
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.412) #15
  br label %960

806:                                              ; preds = %801
  %807 = getelementptr inbounds %struct.sv, ptr %803, i64 0, i32 2
  %808 = load i32, ptr %807, align 4, !tbaa !13
  %809 = and i32 %808, 1024
  %810 = icmp eq i32 %809, 0
  br i1 %810, label %923, label %811

811:                                              ; preds = %806
  %812 = and i32 %808, 2097408
  %813 = icmp eq i32 %812, 256
  br i1 %813, label %814, label %818

814:                                              ; preds = %811
  %815 = load ptr, ptr %803, align 8, !tbaa !16
  %816 = getelementptr inbounds %struct.xpviv, ptr %815, i64 0, i32 4
  %817 = load i64, ptr %816, align 8, !tbaa !17
  br label %820

818:                                              ; preds = %811
  %819 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %803, i32 noundef 2) #15
  br label %820

820:                                              ; preds = %818, %814
  %821 = phi i64 [ %817, %814 ], [ %819, %818 ]
  %822 = getelementptr inbounds %struct.sv, ptr %803, i64 0, i32 3
  %823 = load ptr, ptr %822, align 8, !tbaa !17
  %824 = icmp sgt i64 %821, 0
  br i1 %824, label %825, label %836

825:                                              ; preds = %820
  %826 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %827 = load i32, ptr %826, align 8, !tbaa !109
  br label %831

828:                                              ; preds = %831
  %829 = add nuw nsw i64 %832, 1
  %830 = icmp eq i64 %829, %821
  br i1 %830, label %836, label %831, !llvm.loop !223

831:                                              ; preds = %825, %828
  %832 = phi i64 [ 0, %825 ], [ %829, %828 ]
  %833 = getelementptr inbounds i32, ptr %823, i64 %832
  %834 = load i32, ptr %833, align 4, !tbaa !73
  %835 = icmp eq i32 %834, %827
  br i1 %835, label %960, label %828

836:                                              ; preds = %828, %820
  %837 = icmp eq i64 %821, 0
  br i1 %837, label %960, label %838

838:                                              ; preds = %836
  %839 = load i32, ptr %807, align 4, !tbaa !13
  %840 = and i32 %839, 268435456
  %841 = icmp eq i32 %840, 0
  %842 = load ptr, ptr %803, align 8, !tbaa !16
  br i1 %841, label %847, label %843

843:                                              ; preds = %838
  %844 = getelementptr inbounds %struct.xpv, ptr %842, i64 0, i32 2
  %845 = load i64, ptr %844, align 8, !tbaa !38
  %846 = add i64 %845, 5
  br label %854

847:                                              ; preds = %838
  %848 = getelementptr inbounds %struct.xpv, ptr %842, i64 0, i32 3
  %849 = load i64, ptr %848, align 8, !tbaa !17
  %850 = getelementptr inbounds %struct.xpv, ptr %842, i64 0, i32 2
  %851 = load i64, ptr %850, align 8, !tbaa !38
  %852 = add i64 %851, 5
  %853 = icmp ult i64 %849, %852
  br i1 %853, label %854, label %858

854:                                              ; preds = %843, %847
  %855 = phi i64 [ %846, %843 ], [ %852, %847 ]
  %856 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %803, i64 noundef %855) #15
  %857 = load i32, ptr %807, align 4, !tbaa !13
  br label %858

858:                                              ; preds = %847, %854
  %859 = phi i32 [ %857, %854 ], [ %839, %847 ]
  %860 = phi ptr [ %856, %854 ], [ %823, %847 ]
  %861 = and i32 %859, 15
  %862 = zext i32 %861 to i64
  %863 = getelementptr inbounds [0 x i8], ptr @PL_valid_types_PVX, i64 0, i64 %862
  %864 = load i8, ptr %863, align 1, !tbaa !11, !range !18, !noundef !19
  %865 = icmp ne i8 %864, 0
  %866 = and i32 %859, 255
  %867 = icmp eq i32 %866, 8
  %868 = or i1 %867, %865
  br i1 %868, label %871, label %869

869:                                              ; preds = %858
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.413, i32 noundef 10032) #15
  %870 = load i32, ptr %807, align 4, !tbaa !13
  br label %871

871:                                              ; preds = %858, %869
  %872 = phi i32 [ %859, %858 ], [ %870, %869 ]
  %873 = and i32 %872, 49152
  %874 = icmp eq i32 %873, 32768
  br i1 %874, label %875, label %881

875:                                              ; preds = %871
  %876 = and i32 %872, 255
  %877 = add nsw i32 %876, -9
  %878 = icmp ult i32 %877, 2
  br i1 %878, label %879, label %881

879:                                              ; preds = %875
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.414, i32 noundef 10032) #15
  %880 = load i32, ptr %807, align 4, !tbaa !13
  br label %881

881:                                              ; preds = %875, %871, %879
  %882 = phi i32 [ %872, %875 ], [ %872, %871 ], [ %880, %879 ]
  %883 = and i32 %882, 255
  %884 = icmp eq i32 %883, 15
  %885 = load ptr, ptr %803, align 8, !tbaa !16
  br i1 %884, label %886, label %893

886:                                              ; preds = %881
  %887 = getelementptr inbounds %struct.xpvio, ptr %885, i64 0, i32 17
  %888 = load i8, ptr %887, align 1, !tbaa !120
  %889 = and i8 %888, 64
  %890 = icmp eq i8 %889, 0
  br i1 %890, label %891, label %893

891:                                              ; preds = %886
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.415, i32 noundef 10032) #15
  %892 = load ptr, ptr %803, align 8, !tbaa !16
  br label %893

893:                                              ; preds = %881, %886, %891
  %894 = phi ptr [ %885, %881 ], [ %885, %886 ], [ %892, %891 ]
  %895 = getelementptr inbounds %struct.xpv, ptr %894, i64 0, i32 2
  %896 = load i64, ptr %895, align 8, !tbaa !38
  %897 = add i64 %896, 4
  store i64 %897, ptr %895, align 8, !tbaa !38
  %898 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %899 = load i32, ptr %898, align 8, !tbaa !109
  %900 = getelementptr inbounds i32, ptr %860, i64 %821
  store i32 %899, ptr %900, align 4, !tbaa !73
  %901 = load i32, ptr %807, align 4, !tbaa !13
  %902 = and i32 %901, 15
  %903 = zext i32 %902 to i64
  %904 = getelementptr inbounds [0 x i8], ptr @PL_valid_types_IV_set, i64 0, i64 %903
  %905 = load i8, ptr %904, align 1, !tbaa !11, !range !18, !noundef !19
  %906 = icmp eq i8 %905, 0
  br i1 %906, label %907, label %909

907:                                              ; preds = %893
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.416, i32 noundef 10034) #15
  %908 = load i32, ptr %807, align 4, !tbaa !13
  br label %909

909:                                              ; preds = %893, %907
  %910 = phi i32 [ %901, %893 ], [ %908, %907 ]
  %911 = and i32 %910, 49152
  %912 = icmp eq i32 %911, 32768
  br i1 %912, label %913, label %918

913:                                              ; preds = %909
  %914 = and i32 %910, 255
  %915 = add nsw i32 %914, -9
  %916 = icmp ult i32 %915, 2
  br i1 %916, label %917, label %918

917:                                              ; preds = %913
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.414, i32 noundef 10034) #15
  br label %918

918:                                              ; preds = %913, %909, %917
  %919 = load ptr, ptr %803, align 8, !tbaa !16
  %920 = getelementptr inbounds %struct.xpviv, ptr %919, i64 0, i32 4
  %921 = load i64, ptr %920, align 8, !tbaa !17
  %922 = add nsw i64 %921, 1
  store i64 %922, ptr %920, align 8, !tbaa !17
  br label %960

923:                                              ; preds = %806
  %924 = and i32 %808, 254
  %925 = icmp ugt i32 %924, 5
  br i1 %925, label %927, label %926

926:                                              ; preds = %923
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %803, i32 noundef 6) #15
  br label %927

927:                                              ; preds = %926, %923
  %928 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  tail call void @Perl_sv_setpvn(ptr noundef nonnull %803, ptr noundef nonnull %928, i64 noundef 4) #15
  %929 = load i32, ptr %807, align 4, !tbaa !13
  %930 = and i32 %929, 49152
  %931 = icmp eq i32 %930, 32768
  br i1 %931, label %932, label %938

932:                                              ; preds = %927
  %933 = and i32 %929, 255
  %934 = add nsw i32 %933, -9
  %935 = icmp ult i32 %934, 2
  br i1 %935, label %936, label %938

936:                                              ; preds = %932
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.414, i32 noundef 10040) #15
  %937 = load i32, ptr %807, align 4, !tbaa !13
  br label %938

938:                                              ; preds = %932, %927, %936
  %939 = phi i32 [ %929, %932 ], [ %929, %927 ], [ %937, %936 ]
  %940 = or i32 %939, 4352
  store i32 %940, ptr %807, align 4, !tbaa !13
  %941 = and i32 %939, 15
  %942 = zext i32 %941 to i64
  %943 = getelementptr inbounds [0 x i8], ptr @PL_valid_types_IV_set, i64 0, i64 %942
  %944 = load i8, ptr %943, align 1, !tbaa !11, !range !18, !noundef !19
  %945 = icmp eq i8 %944, 0
  br i1 %945, label %946, label %948

946:                                              ; preds = %938
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.416, i32 noundef 10041) #15
  %947 = load i32, ptr %807, align 4, !tbaa !13
  br label %948

948:                                              ; preds = %938, %946
  %949 = phi i32 [ %940, %938 ], [ %947, %946 ]
  %950 = and i32 %949, 49152
  %951 = icmp eq i32 %950, 32768
  br i1 %951, label %952, label %957

952:                                              ; preds = %948
  %953 = and i32 %949, 255
  %954 = add nsw i32 %953, -9
  %955 = icmp ult i32 %954, 2
  br i1 %955, label %956, label %957

956:                                              ; preds = %952
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.414, i32 noundef 10041) #15
  br label %957

957:                                              ; preds = %952, %948, %956
  %958 = load ptr, ptr %803, align 8, !tbaa !16
  %959 = getelementptr inbounds %struct.xpviv, ptr %958, i64 0, i32 4
  store i64 1, ptr %959, align 8, !tbaa !17
  br label %960

960:                                              ; preds = %831, %836, %918, %957, %805
  %961 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 49
  %962 = load ptr, ptr %961, align 8, !tbaa !114
  %963 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %964 = load i32, ptr %963, align 8, !tbaa !109
  %965 = sext i32 %964 to i64
  br i1 %784, label %970, label %966

966:                                              ; preds = %960
  %967 = getelementptr inbounds %struct.sv, ptr %750, i64 0, i32 1
  %968 = load i32, ptr %967, align 8, !tbaa !37
  %969 = add i32 %968, 1
  store i32 %969, ptr %967, align 8, !tbaa !37
  br label %970

970:                                              ; preds = %960, %966
  %971 = tail call ptr @Perl_av_store(ptr noundef %962, i64 noundef %965, ptr noundef %750) #15
  %972 = icmp eq ptr %971, null
  br i1 %972, label %973, label %2176

973:                                              ; preds = %970
  %974 = getelementptr inbounds %struct.sv, ptr %750, i64 0, i32 1
  %975 = load i32, ptr %974, align 8, !tbaa !37
  %976 = icmp ugt i32 %975, 1
  br i1 %976, label %977, label %979

977:                                              ; preds = %973
  %978 = add i32 %975, -1
  store i32 %978, ptr %974, align 8, !tbaa !37
  br label %2176

979:                                              ; preds = %973
  tail call void @Perl_sv_free2(ptr noundef nonnull %750, i32 noundef %975) #15
  br label %2176

980:                                              ; preds = %737
  br label %981

981:                                              ; preds = %737, %980
  %982 = phi i32 [ 44, %737 ], [ %739, %980 ]
  %983 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %984 = load i32, ptr %983, align 8, !tbaa !98
  %985 = or i32 %984, 2
  store i32 %985, ptr %983, align 8, !tbaa !98
  %986 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 33
  %987 = load i32, ptr %986, align 4, !tbaa !100
  %988 = add nsw i32 %987, 1
  store i32 %988, ptr %986, align 4, !tbaa !100
  %989 = getelementptr inbounds i8, ptr %738, i64 1
  store ptr %989, ptr %13, align 8, !tbaa !105
  br label %990

990:                                              ; preds = %520, %981
  %991 = phi i32 [ %525, %520 ], [ %982, %981 ]
  %992 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %993 = load i32, ptr %992, align 4, !tbaa !101
  %994 = add nsw i32 %993, 1
  store i32 %994, ptr %992, align 4, !tbaa !101
  br label %2173

995:                                              ; preds = %520
  %996 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %997 = load i32, ptr %996, align 4, !tbaa !101
  %998 = add nsw i32 %997, 1
  store i32 %998, ptr %996, align 4, !tbaa !101
  store ptr %522, ptr %13, align 8, !tbaa !105
  %999 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %1000 = load ptr, ptr %13, align 8, !tbaa !105
  %1001 = load i8, ptr %1000, align 1, !tbaa !17
  %1002 = icmp eq i8 %1001, 41
  br i1 %1002, label %1003, label %2173

1003:                                             ; preds = %995
  %1004 = tail call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 82)
  %1005 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %2321

1006:                                             ; preds = %520
  %1007 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %1008 = load i32, ptr %1007, align 8, !tbaa !109
  br label %2173

1009:                                             ; preds = %520, %520
  %1010 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1011 = load ptr, ptr %1010, align 8, !tbaa !112
  %1012 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1013 = icmp eq ptr %1011, %1012
  br i1 %1013, label %1018, label %1014

1014:                                             ; preds = %1009
  %1015 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1016 = load ptr, ptr %1015, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %1016, i32 noundef 11) #15
  %1017 = load ptr, ptr %13, align 8, !tbaa !105
  br label %1018

1018:                                             ; preds = %1009, %1014
  %1019 = phi ptr [ %523, %1009 ], [ %1017, %1014 ]
  %1020 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1021 = load ptr, ptr %1020, align 8, !tbaa !65
  %1022 = ptrtoint ptr %1019 to i64
  %1023 = ptrtoint ptr %1021 to i64
  %1024 = sub i64 %1022, %1023
  %1025 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1026 = load i32, ptr %1025, align 8, !tbaa !50
  %1027 = icmp ne i32 %1026, 0
  %1028 = zext i1 %1027 to i32
  %1029 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1030 = load ptr, ptr %1029, align 8, !tbaa !107
  %1031 = ptrtoint ptr %1030 to i64
  %1032 = sub i64 %1031, %1022
  %1033 = getelementptr inbounds i8, ptr %1021, i64 %1024
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %1027, ptr noundef nonnull @.str.417, ptr nonnull poison, i32 noundef %525, i32 noundef %1028, i64 noundef %1024, ptr noundef %1021, i32 noundef %1028, i64 noundef %1032, ptr noundef %1033)
  br label %2173

1034:                                             ; preds = %520, %520
  %1035 = load i8, ptr %523, align 1, !tbaa !17
  %1036 = icmp eq i8 %1035, 41
  br i1 %1036, label %1062, label %1037

1037:                                             ; preds = %1034
  %1038 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1039 = load ptr, ptr %1038, align 8, !tbaa !107
  %1040 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1041 = load ptr, ptr %1040, align 8, !tbaa !65
  %1042 = ptrtoint ptr %1039 to i64
  %1043 = ptrtoint ptr %1041 to i64
  %1044 = sub i64 %1042, %1043
  %1045 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1046 = load ptr, ptr %1045, align 8, !tbaa !112
  %1047 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1048 = icmp eq ptr %1046, %1047
  br i1 %1048, label %1053, label %1049

1049:                                             ; preds = %1037
  %1050 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1051 = load ptr, ptr %1050, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %1051, i32 noundef 11) #15
  %1052 = load ptr, ptr %1040, align 8, !tbaa !65
  br label %1053

1053:                                             ; preds = %1049, %1037
  %1054 = phi ptr [ %1052, %1049 ], [ %1041, %1037 ]
  %1055 = icmp sgt i64 %1044, 127
  %1056 = select i1 %1055, ptr @.str.20, ptr @.str.8
  %1057 = select i1 %1055, i64 117, i64 %1044
  %1058 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1059 = load i32, ptr %1058, align 8, !tbaa !50
  %1060 = icmp ne i32 %1059, 0
  %1061 = zext i1 %1060 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.418, i32 noundef %1061, i64 noundef %1057, ptr noundef %1054, ptr noundef nonnull %1056) #15
  br label %1062

1062:                                             ; preds = %1053, %1034
  %1063 = tail call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 77)
  %1064 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %1065 = load i32, ptr %1064, align 8, !tbaa !98
  %1066 = or i32 %1065, 2048
  store i32 %1066, ptr %1064, align 8, !tbaa !98
  %1067 = load i32, ptr %2, align 4, !tbaa !73
  %1068 = or i32 %1067, 8
  store i32 %1068, ptr %2, align 4, !tbaa !73
  %1069 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %2321

1070:                                             ; preds = %520, %526
  %1071 = phi ptr [ %14, %526 ], [ %522, %520 ]
  %1072 = phi i32 [ 62, %526 ], [ %525, %520 ]
  %1073 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1074 = load ptr, ptr %1073, align 8, !tbaa !112
  %1075 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1076 = icmp eq ptr %1074, %1075
  %1077 = select i1 %1076, i32 0, i32 2
  %1078 = tail call fastcc ptr @S_reg_scan_name(ptr noundef nonnull %0, i32 noundef %1077)
  %1079 = icmp eq ptr %1078, null
  br i1 %1079, label %1084, label %1080

1080:                                             ; preds = %1070
  %1081 = getelementptr inbounds %struct.sv, ptr %1078, i64 0, i32 3
  %1082 = load ptr, ptr %1081, align 8, !tbaa !17
  %1083 = load i32, ptr %1082, align 4, !tbaa !73
  br label %1084

1084:                                             ; preds = %1070, %1080
  %1085 = phi i32 [ %1083, %1080 ], [ 0, %1070 ]
  %1086 = load ptr, ptr %13, align 8, !tbaa !105
  %1087 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1088 = load ptr, ptr %1087, align 8, !tbaa !107
  %1089 = icmp eq ptr %1086, %1088
  br i1 %1089, label %1093, label %1090

1090:                                             ; preds = %1084
  %1091 = load i8, ptr %1086, align 1, !tbaa !17
  %1092 = icmp eq i8 %1091, 41
  br i1 %1092, label %1208, label %1093

1093:                                             ; preds = %1084, %1090
  %1094 = load ptr, ptr %1073, align 8, !tbaa !112
  %1095 = icmp eq ptr %1094, %1075
  br i1 %1095, label %1101, label %1096

1096:                                             ; preds = %1093
  %1097 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1098 = load ptr, ptr %1097, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %1098, i32 noundef 11) #15
  %1099 = load ptr, ptr %13, align 8, !tbaa !105
  %1100 = load ptr, ptr %1087, align 8, !tbaa !107
  br label %1101

1101:                                             ; preds = %1093, %1096
  %1102 = phi ptr [ %1088, %1093 ], [ %1100, %1096 ]
  %1103 = phi ptr [ %1086, %1093 ], [ %1099, %1096 ]
  %1104 = icmp ugt ptr %1103, %1102
  %1105 = select i1 %1104, ptr %1102, ptr %1103
  %1106 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1107 = load ptr, ptr %1106, align 8, !tbaa !65
  %1108 = ptrtoint ptr %1105 to i64
  %1109 = ptrtoint ptr %1107 to i64
  %1110 = sub i64 %1108, %1109
  %1111 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1112 = load i32, ptr %1111, align 8, !tbaa !50
  %1113 = icmp ne i32 %1112, 0
  %1114 = zext i1 %1113 to i32
  %1115 = ptrtoint ptr %1102 to i64
  %1116 = sub i64 %1115, %1108
  %1117 = getelementptr inbounds i8, ptr %1107, i64 %1110
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.419, i32 noundef %1114, i64 noundef %1110, ptr noundef %1107, i32 noundef %1114, i64 noundef %1116, ptr noundef %1117) #15
  br label %1208

1118:                                             ; preds = %520
  %1119 = load i8, ptr %523, align 1, !tbaa !17
  %1120 = add i8 %1119, -49
  %1121 = icmp ult i8 %1120, 9
  br i1 %1121, label %1156, label %1122

1122:                                             ; preds = %1118
  %1123 = getelementptr inbounds i8, ptr %521, i64 3
  store ptr %1123, ptr %13, align 8, !tbaa !105
  %1124 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1125 = load ptr, ptr %1124, align 8, !tbaa !112
  %1126 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1127 = icmp eq ptr %1125, %1126
  br i1 %1127, label %1132, label %1128

1128:                                             ; preds = %1122
  %1129 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1130 = load ptr, ptr %1129, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %1130, i32 noundef 11) #15
  %1131 = load ptr, ptr %13, align 8, !tbaa !105
  br label %1132

1132:                                             ; preds = %1122, %1128
  %1133 = phi ptr [ %1123, %1122 ], [ %1131, %1128 ]
  %1134 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1135 = load ptr, ptr %1134, align 8, !tbaa !107
  %1136 = icmp ugt ptr %1133, %1135
  %1137 = select i1 %1136, ptr %1135, ptr %1133
  %1138 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1139 = load ptr, ptr %1138, align 8, !tbaa !65
  %1140 = ptrtoint ptr %1137 to i64
  %1141 = ptrtoint ptr %1139 to i64
  %1142 = sub i64 %1140, %1141
  %1143 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1144 = load i32, ptr %1143, align 8, !tbaa !50
  %1145 = icmp ne i32 %1144, 0
  %1146 = zext i1 %1145 to i32
  %1147 = ptrtoint ptr %1135 to i64
  %1148 = sub i64 %1147, %1140
  %1149 = getelementptr inbounds i8, ptr %1139, i64 %1142
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.420, i32 noundef %1146, i64 noundef %1142, ptr noundef %1139, i32 noundef %1146, i64 noundef %1148, ptr noundef %1149) #15
  %1150 = load ptr, ptr %13, align 8, !tbaa !105
  br label %1156

1151:                                             ; preds = %520
  %1152 = load i8, ptr %523, align 1, !tbaa !17
  %1153 = add i8 %1152, -49
  %1154 = icmp ult i8 %1153, 9
  br i1 %1154, label %1155, label %2167

1155:                                             ; preds = %1151, %520, %520, %520, %520, %520, %520, %520, %520, %520
  store ptr %522, ptr %13, align 8, !tbaa !105
  br label %1156

1156:                                             ; preds = %1118, %1132, %1155
  %1157 = phi ptr [ %523, %1118 ], [ %1150, %1132 ], [ %522, %1155 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #15
  %1158 = getelementptr inbounds i8, ptr %1157, i64 -1
  %1159 = load i8, ptr %1157, align 1, !tbaa !17
  %1160 = icmp eq i8 %1159, 45
  br i1 %1160, label %1161, label %1163

1161:                                             ; preds = %1156
  %1162 = getelementptr inbounds i8, ptr %1157, i64 1
  store ptr %1162, ptr %13, align 8, !tbaa !105
  br label %1163

1163:                                             ; preds = %1161, %1156
  %1164 = phi ptr [ %1162, %1161 ], [ %1157, %1156 ]
  %1165 = call zeroext i1 @Perl_grok_atoUV(ptr noundef nonnull %1164, ptr noundef nonnull %8, ptr noundef nonnull %7) #15
  %1166 = load i64, ptr %8, align 8
  %1167 = icmp ult i64 %1166, 2147483648
  %1168 = select i1 %1165, i1 %1167, i1 false
  br i1 %1168, label %1171, label %1169

1169:                                             ; preds = %1163
  %1170 = load ptr, ptr %13, align 8, !tbaa !105
  br label %1174

1171:                                             ; preds = %1163
  %1172 = trunc i64 %1166 to i32
  %1173 = load ptr, ptr %7, align 8, !tbaa !5
  store ptr %1173, ptr %13, align 8, !tbaa !105
  br label %1174

1174:                                             ; preds = %1169, %1171
  %1175 = phi ptr [ %1173, %1171 ], [ %1170, %1169 ]
  %1176 = phi i32 [ %1172, %1171 ], [ 2147483647, %1169 ]
  %1177 = sub nsw i32 0, %1176
  %1178 = select i1 %1160, i32 %1177, i32 %1176
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #15
  %1179 = load i8, ptr %1175, align 1, !tbaa !17
  %1180 = icmp eq i8 %1179, 41
  br i1 %1180, label %1208, label %1181

1181:                                             ; preds = %1174
  %1182 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1183 = load ptr, ptr %1182, align 8, !tbaa !112
  %1184 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1185 = icmp eq ptr %1183, %1184
  br i1 %1185, label %1190, label %1186

1186:                                             ; preds = %1181
  %1187 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1188 = load ptr, ptr %1187, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1188, i32 noundef 11) #15
  %1189 = load ptr, ptr %13, align 8, !tbaa !105
  br label %1190

1190:                                             ; preds = %1181, %1186
  %1191 = phi ptr [ %1175, %1181 ], [ %1189, %1186 ]
  %1192 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1193 = load ptr, ptr %1192, align 8, !tbaa !107
  %1194 = icmp ugt ptr %1191, %1193
  %1195 = select i1 %1194, ptr %1193, ptr %1191
  %1196 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1197 = load ptr, ptr %1196, align 8, !tbaa !65
  %1198 = ptrtoint ptr %1195 to i64
  %1199 = ptrtoint ptr %1197 to i64
  %1200 = sub i64 %1198, %1199
  %1201 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1202 = load i32, ptr %1201, align 8, !tbaa !50
  %1203 = icmp ne i32 %1202, 0
  %1204 = zext i1 %1203 to i32
  %1205 = ptrtoint ptr %1193 to i64
  %1206 = sub i64 %1205, %1198
  %1207 = getelementptr inbounds i8, ptr %1197, i64 %1200
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.421, i32 noundef %1204, i64 noundef %1200, ptr noundef %1197, i32 noundef %1204, i64 noundef %1206, ptr noundef %1207) #15
  br label %1208

1208:                                             ; preds = %1174, %1190, %1090, %1101
  %1209 = phi ptr [ %1158, %1190 ], [ %1158, %1174 ], [ %1071, %1101 ], [ %1071, %1090 ]
  %1210 = phi i32 [ %1178, %1190 ], [ %1178, %1174 ], [ %1085, %1101 ], [ %1085, %1090 ]
  %1211 = phi i32 [ %525, %1190 ], [ %525, %1174 ], [ %1072, %1101 ], [ %1072, %1090 ]
  switch i32 %1211, label %1251 [
    i32 45, label %1212
    i32 43, label %1246
  ]

1212:                                             ; preds = %1208
  %1213 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %1214 = load i32, ptr %1213, align 8, !tbaa !109
  %1215 = add nsw i32 %1214, %1210
  %1216 = icmp slt i32 %1215, 1
  br i1 %1216, label %1217, label %1251

1217:                                             ; preds = %1212
  %1218 = load ptr, ptr %13, align 8, !tbaa !105
  %1219 = getelementptr inbounds i8, ptr %1218, i64 1
  store ptr %1219, ptr %13, align 8, !tbaa !105
  %1220 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1221 = load ptr, ptr %1220, align 8, !tbaa !112
  %1222 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1223 = icmp eq ptr %1221, %1222
  br i1 %1223, label %1228, label %1224

1224:                                             ; preds = %1217
  %1225 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1226 = load ptr, ptr %1225, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1226, i32 noundef 11) #15
  %1227 = load ptr, ptr %13, align 8, !tbaa !105
  br label %1228

1228:                                             ; preds = %1217, %1224
  %1229 = phi ptr [ %1219, %1217 ], [ %1227, %1224 ]
  %1230 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1231 = load ptr, ptr %1230, align 8, !tbaa !107
  %1232 = icmp ugt ptr %1229, %1231
  %1233 = select i1 %1232, ptr %1231, ptr %1229
  %1234 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1235 = load ptr, ptr %1234, align 8, !tbaa !65
  %1236 = ptrtoint ptr %1233 to i64
  %1237 = ptrtoint ptr %1235 to i64
  %1238 = sub i64 %1236, %1237
  %1239 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1240 = load i32, ptr %1239, align 8, !tbaa !50
  %1241 = icmp ne i32 %1240, 0
  %1242 = zext i1 %1241 to i32
  %1243 = ptrtoint ptr %1231 to i64
  %1244 = sub i64 %1243, %1236
  %1245 = getelementptr inbounds i8, ptr %1235, i64 %1238
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.422, i32 noundef %1242, i64 noundef %1238, ptr noundef %1235, i32 noundef %1242, i64 noundef %1244, ptr noundef %1245) #15
  br label %1251

1246:                                             ; preds = %1208
  %1247 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %1248 = load i32, ptr %1247, align 8, !tbaa !109
  %1249 = add i32 %1210, -1
  %1250 = add i32 %1249, %1248
  br label %1251

1251:                                             ; preds = %1228, %1212, %1246, %1208
  %1252 = phi i32 [ %1215, %1228 ], [ %1215, %1212 ], [ %1250, %1246 ], [ %1210, %1208 ]
  %1253 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 30
  %1254 = load i32, ptr %1253, align 8, !tbaa !134
  %1255 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 76, i64 noundef 2, ptr noundef nonnull @.str.470)
  %1256 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1257 = load ptr, ptr %1256, align 8, !tbaa !112
  %1258 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1259 = icmp eq ptr %1257, %1258
  br i1 %1259, label %1310, label %1260

1260:                                             ; preds = %1251
  %1261 = getelementptr inbounds %struct.regnode_1, ptr %1255, i64 0, i32 3
  store i32 %1252, ptr %1261, align 4, !tbaa !148
  %1262 = getelementptr inbounds %struct.regnode_2L, ptr %1255, i64 0, i32 4
  store i32 %1254, ptr %1262, align 4, !tbaa !208
  %1263 = getelementptr inbounds %struct.regnode, ptr %1255, i64 0, i32 1
  store i8 76, ptr %1263, align 1, !tbaa !141
  %1264 = getelementptr inbounds %struct.regnode, ptr %1255, i64 0, i32 2
  store i16 0, ptr %1264, align 2, !tbaa !222
  %1265 = getelementptr inbounds %struct.regnode, ptr %1255, i64 3
  store ptr %1265, ptr %1256, align 8, !tbaa !112
  %1266 = icmp eq ptr %1265, %1258
  br i1 %1266, label %1310, label %1267

1267:                                             ; preds = %1260
  %1268 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 4
  %1269 = load ptr, ptr %1268, align 8, !tbaa !129
  %1270 = getelementptr inbounds %struct.regexp, ptr %1269, i64 0, i32 12
  %1271 = load i32, ptr %1270, align 8, !tbaa !126
  %1272 = icmp sgt i32 %1252, %1271
  br i1 %1272, label %1273, label %1295

1273:                                             ; preds = %1267
  %1274 = load ptr, ptr %13, align 8, !tbaa !105
  %1275 = getelementptr inbounds i8, ptr %1274, i64 1
  store ptr %1275, ptr %13, align 8, !tbaa !105
  %1276 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1277 = load ptr, ptr %1276, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1277, i32 noundef 11) #15
  %1278 = load ptr, ptr %13, align 8, !tbaa !105
  %1279 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1280 = load ptr, ptr %1279, align 8, !tbaa !107
  %1281 = icmp ugt ptr %1278, %1280
  %1282 = select i1 %1281, ptr %1280, ptr %1278
  %1283 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1284 = load ptr, ptr %1283, align 8, !tbaa !65
  %1285 = ptrtoint ptr %1282 to i64
  %1286 = ptrtoint ptr %1284 to i64
  %1287 = sub i64 %1285, %1286
  %1288 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1289 = load i32, ptr %1288, align 8, !tbaa !50
  %1290 = icmp ne i32 %1289, 0
  %1291 = zext i1 %1290 to i32
  %1292 = ptrtoint ptr %1280 to i64
  %1293 = sub i64 %1292, %1285
  %1294 = getelementptr inbounds i8, ptr %1284, i64 %1287
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.422, i32 noundef %1291, i64 noundef %1287, ptr noundef %1284, i32 noundef %1291, i64 noundef %1293, ptr noundef %1294) #15
  br label %1295

1295:                                             ; preds = %1273, %1267
  %1296 = load i32, ptr %1253, align 8, !tbaa !134
  %1297 = add nsw i32 %1296, 1
  store i32 %1297, ptr %1253, align 8, !tbaa !134
  %1298 = load volatile i64, ptr %6, align 8, !tbaa !9
  %1299 = and i64 %1298, 1048578
  %1300 = icmp eq i64 %1299, 1048578
  br i1 %1300, label %1301, label %1310

1301:                                             ; preds = %1295
  %1302 = call ptr @Perl_PerlIO_stderr() #15
  %1303 = shl i32 %3, 1
  %1304 = or i32 %1303, 1
  %1305 = load i32, ptr %1261, align 4, !tbaa !148
  %1306 = zext i32 %1305 to i64
  %1307 = load i32, ptr %1262, align 4, !tbaa !208
  %1308 = sext i32 %1307 to i64
  %1309 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1302, ptr noundef nonnull @.str.423, i32 noundef 22, ptr noundef nonnull @.str.424, i32 noundef %1304, ptr noundef nonnull @.str.8, i64 noundef %1306, i64 noundef %1308) #15
  br label %1310

1310:                                             ; preds = %1251, %1295, %1301, %1260
  %1311 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %1312 = load i32, ptr %1311, align 8, !tbaa !98
  %1313 = or i32 %1312, 32
  store i32 %1313, ptr %1311, align 8, !tbaa !98
  %1314 = load ptr, ptr %1256, align 8, !tbaa !112
  %1315 = icmp eq ptr %1314, %1258
  br i1 %1315, label %1361, label %1316

1316:                                             ; preds = %1310
  %1317 = load volatile i64, ptr %6, align 8, !tbaa !9
  %1318 = and i64 %1317, 262144
  %1319 = icmp eq i64 %1318, 0
  br i1 %1319, label %1320, label %1322

1320:                                             ; preds = %1316
  %1321 = ptrtoint ptr %1255 to i64
  br label %1337

1322:                                             ; preds = %1316
  %1323 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %1324 = load ptr, ptr %1323, align 8, !tbaa !131
  %1325 = ptrtoint ptr %1255 to i64
  %1326 = ptrtoint ptr %1324 to i64
  %1327 = sub i64 %1325, %1326
  %1328 = lshr exact i64 %1327, 2
  %1329 = trunc i64 %1328 to i32
  %1330 = getelementptr inbounds %struct.regnode, ptr %1255, i64 0, i32 1
  %1331 = load i8, ptr %1330, align 1, !tbaa !141
  %1332 = zext i8 %1331 to i64
  %1333 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %1332
  %1334 = load i8, ptr %1333, align 1, !tbaa !17
  %1335 = zext i8 %1334 to i32
  %1336 = add nuw nsw i32 %1335, 1
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 10186, i32 noundef %1329, i32 noundef %1336) #15
  br label %1337

1337:                                             ; preds = %1320, %1322
  %1338 = phi i64 [ %1321, %1320 ], [ %1325, %1322 ]
  %1339 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %1340 = load ptr, ptr %1339, align 8, !tbaa !131
  %1341 = ptrtoint ptr %1340 to i64
  %1342 = sub i64 %1338, %1341
  %1343 = icmp slt i64 %1342, 0
  br i1 %1343, label %1344, label %1347

1344:                                             ; preds = %1337
  %1345 = lshr exact i64 %1342, 2
  %1346 = trunc i64 %1345 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %1346) #15
  br label %1361

1347:                                             ; preds = %1337
  %1348 = getelementptr inbounds %struct.regnode, ptr %1255, i64 0, i32 1
  %1349 = load i8, ptr %1348, align 1, !tbaa !141
  %1350 = zext i8 %1349 to i64
  %1351 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %1350
  %1352 = load i8, ptr %1351, align 1, !tbaa !17
  %1353 = zext i8 %1352 to i32
  %1354 = add nuw nsw i32 %1353, 1
  %1355 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %1356 = load ptr, ptr %1355, align 8, !tbaa !130
  %1357 = getelementptr inbounds %struct.regexp_internal, ptr %1356, i64 0, i32 1
  %1358 = load ptr, ptr %1357, align 8, !tbaa !17
  %1359 = lshr exact i64 %1342, 1
  %1360 = getelementptr inbounds i32, ptr %1358, i64 %1359
  store i32 %1354, ptr %1360, align 4, !tbaa !73
  br label %1361

1361:                                             ; preds = %1310, %1347, %1344
  %1362 = load ptr, ptr %1256, align 8, !tbaa !112
  %1363 = icmp eq ptr %1362, %1258
  br i1 %1363, label %1408, label %1364

1364:                                             ; preds = %1361
  %1365 = load volatile i64, ptr %6, align 8, !tbaa !9
  %1366 = and i64 %1365, 262144
  %1367 = icmp eq i64 %1366, 0
  br i1 %1367, label %1368, label %1370

1368:                                             ; preds = %1364
  %1369 = ptrtoint ptr %1255 to i64
  br label %1384

1370:                                             ; preds = %1364
  %1371 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %1372 = load ptr, ptr %1371, align 8, !tbaa !131
  %1373 = ptrtoint ptr %1255 to i64
  %1374 = ptrtoint ptr %1372 to i64
  %1375 = sub i64 %1373, %1374
  %1376 = lshr exact i64 %1375, 2
  %1377 = trunc i64 %1376 to i32
  %1378 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %1379 = load ptr, ptr %1378, align 8, !tbaa !106
  %1380 = ptrtoint ptr %1209 to i64
  %1381 = ptrtoint ptr %1379 to i64
  %1382 = sub i64 %1380, %1381
  %1383 = trunc i64 %1382 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 10187, i32 noundef %1377, i32 noundef %1383) #15
  br label %1384

1384:                                             ; preds = %1368, %1370
  %1385 = phi i64 [ %1369, %1368 ], [ %1373, %1370 ]
  %1386 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %1387 = load ptr, ptr %1386, align 8, !tbaa !131
  %1388 = ptrtoint ptr %1387 to i64
  %1389 = sub i64 %1385, %1388
  %1390 = icmp slt i64 %1389, 0
  br i1 %1390, label %1391, label %1394

1391:                                             ; preds = %1384
  %1392 = lshr exact i64 %1389, 2
  %1393 = trunc i64 %1392 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %1393) #15
  br label %1408

1394:                                             ; preds = %1384
  %1395 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %1396 = load ptr, ptr %1395, align 8, !tbaa !106
  %1397 = ptrtoint ptr %1209 to i64
  %1398 = ptrtoint ptr %1396 to i64
  %1399 = sub i64 %1397, %1398
  %1400 = trunc i64 %1399 to i32
  %1401 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %1402 = load ptr, ptr %1401, align 8, !tbaa !130
  %1403 = getelementptr inbounds %struct.regexp_internal, ptr %1402, i64 0, i32 1
  %1404 = load ptr, ptr %1403, align 8, !tbaa !17
  %1405 = lshr exact i64 %1389, 1
  %1406 = add nsw i64 %1405, -1
  %1407 = getelementptr inbounds i32, ptr %1404, i64 %1406
  store i32 %1400, ptr %1407, align 4, !tbaa !73
  br label %1408

1408:                                             ; preds = %1391, %1394, %1361
  %1409 = load i32, ptr %2, align 4, !tbaa !73
  %1410 = or i32 %1409, 8
  store i32 %1410, ptr %2, align 4, !tbaa !73
  %1411 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %2321

1412:                                             ; preds = %520
  %1413 = load i8, ptr %523, align 1, !tbaa !17
  switch i8 %1413, label %1414 [
    i8 123, label %1459
    i8 0, label %1423
  ]

1414:                                             ; preds = %1412
  %1415 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1416 = load i32, ptr %1415, align 8, !tbaa !50
  %1417 = icmp eq i32 %1416, 0
  br i1 %1417, label %1423, label %1418

1418:                                             ; preds = %1414
  %1419 = zext i8 %1413 to i64
  %1420 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1419
  %1421 = load i8, ptr %1420, align 1, !tbaa !17
  %1422 = zext i8 %1421 to i64
  br label %1423

1423:                                             ; preds = %1412, %1418, %1414
  %1424 = phi i64 [ %1422, %1418 ], [ 1, %1414 ], [ 0, %1412 ]
  %1425 = getelementptr inbounds i8, ptr %523, i64 %1424
  store ptr %1425, ptr %13, align 8, !tbaa !105
  %1426 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1427 = load ptr, ptr %1426, align 8, !tbaa !65
  %1428 = ptrtoint ptr %1425 to i64
  %1429 = ptrtoint ptr %1427 to i64
  %1430 = sub i64 %1428, %1429
  %1431 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1432 = load ptr, ptr %1431, align 8, !tbaa !112
  %1433 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1434 = icmp eq ptr %1432, %1433
  br i1 %1434, label %1442, label %1435

1435:                                             ; preds = %1423
  %1436 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1437 = load ptr, ptr %1436, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %1437, i32 noundef 11) #15
  %1438 = load ptr, ptr %13, align 8, !tbaa !105
  %1439 = load ptr, ptr %1426, align 8, !tbaa !65
  %1440 = ptrtoint ptr %1438 to i64
  %1441 = ptrtoint ptr %1439 to i64
  br label %1442

1442:                                             ; preds = %1435, %1423
  %1443 = phi i64 [ %1441, %1435 ], [ %1429, %1423 ]
  %1444 = phi i64 [ %1440, %1435 ], [ %1428, %1423 ]
  %1445 = phi ptr [ %1439, %1435 ], [ %1427, %1423 ]
  %1446 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1447 = load i32, ptr %1446, align 8, !tbaa !50
  %1448 = icmp ne i32 %1447, 0
  %1449 = zext i1 %1448 to i32
  %1450 = ptrtoint ptr %114 to i64
  %1451 = sub i64 %1444, %1450
  %1452 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1453 = load ptr, ptr %1452, align 8, !tbaa !107
  %1454 = ptrtoint ptr %1453 to i64
  %1455 = add i64 %1443, %1430
  %1456 = sub i64 %1454, %1455
  %1457 = getelementptr inbounds i8, ptr %1445, i64 %1430
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %1448, ptr noundef nonnull @.str.425, ptr nonnull poison, i32 noundef %1449, i64 noundef %1451, ptr noundef nonnull %114, i32 noundef %1449, i64 noundef %1430, ptr noundef %1445, i32 noundef %1449, i64 noundef %1456, ptr noundef %1457)
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.220, i32 noundef 10203) #15
  %1458 = load ptr, ptr %13, align 8, !tbaa !105
  br label %1459

1459:                                             ; preds = %1412, %1442
  %1460 = phi ptr [ %523, %1412 ], [ %1458, %1442 ]
  %1461 = load i32, ptr %2, align 4, !tbaa !73
  %1462 = or i32 %1461, 8
  store i32 %1462, ptr %2, align 4, !tbaa !73
  %1463 = getelementptr inbounds i8, ptr %1460, i64 1
  store ptr %1463, ptr %13, align 8, !tbaa !105
  br label %1464

1464:                                             ; preds = %520, %1459
  %1465 = phi ptr [ %523, %520 ], [ %1463, %1459 ]
  %1466 = phi i1 [ false, %520 ], [ true, %1459 ]
  %1467 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %1468 = load i32, ptr %1467, align 4, !tbaa !101
  %1469 = add nsw i32 %1468, 1
  store i32 %1469, ptr %1467, align 4, !tbaa !101
  %1470 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 39
  %1471 = load i32, ptr %1470, align 8, !tbaa !24
  %1472 = icmp eq i32 %1471, 0
  br i1 %1472, label %1492, label %1473

1473:                                             ; preds = %1464
  %1474 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 40
  %1475 = load i32, ptr %1474, align 4, !tbaa !117
  %1476 = icmp slt i32 %1475, %1471
  br i1 %1476, label %1477, label %1492

1477:                                             ; preds = %1473
  %1478 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 38
  %1479 = load ptr, ptr %1478, align 8, !tbaa !20
  %1480 = sext i32 %1475 to i64
  %1481 = getelementptr inbounds %struct.reg_code_block, ptr %1479, i64 %1480
  %1482 = load i64, ptr %1481, align 8, !tbaa !58
  %1483 = getelementptr inbounds i8, ptr %1465, i64 -3
  %1484 = sext i1 %1466 to i64
  %1485 = getelementptr inbounds i8, ptr %1483, i64 %1484
  %1486 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %1487 = load ptr, ptr %1486, align 8, !tbaa !106
  %1488 = ptrtoint ptr %1485 to i64
  %1489 = ptrtoint ptr %1487 to i64
  %1490 = sub i64 %1488, %1489
  %1491 = icmp eq i64 %1482, %1490
  br i1 %1491, label %1553, label %1492

1492:                                             ; preds = %1477, %1473, %1464
  %1493 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 1
  %1494 = load i32, ptr %1493, align 4, !tbaa !67
  %1495 = icmp sgt i32 %1494, -1
  br i1 %1495, label %1521, label %1496

1496:                                             ; preds = %1492
  %1497 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1498 = load ptr, ptr %1497, align 8, !tbaa !107
  %1499 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1500 = load ptr, ptr %1499, align 8, !tbaa !65
  %1501 = ptrtoint ptr %1498 to i64
  %1502 = ptrtoint ptr %1500 to i64
  %1503 = sub i64 %1501, %1502
  %1504 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1505 = load ptr, ptr %1504, align 8, !tbaa !112
  %1506 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1507 = icmp eq ptr %1505, %1506
  br i1 %1507, label %1512, label %1508

1508:                                             ; preds = %1496
  %1509 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1510 = load ptr, ptr %1509, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %1510, i32 noundef 11) #15
  %1511 = load ptr, ptr %1499, align 8, !tbaa !65
  br label %1512

1512:                                             ; preds = %1508, %1496
  %1513 = phi ptr [ %1511, %1508 ], [ %1500, %1496 ]
  %1514 = icmp sgt i64 %1503, 127
  %1515 = select i1 %1514, ptr @.str.20, ptr @.str.8
  %1516 = select i1 %1514, i64 117, i64 %1503
  %1517 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1518 = load i32, ptr %1517, align 8, !tbaa !50
  %1519 = icmp ne i32 %1518, 0
  %1520 = zext i1 %1519 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.426, i32 noundef %1520, i64 noundef %1516, ptr noundef %1513, ptr noundef nonnull %1515) #15
  br label %1521

1521:                                             ; preds = %1492, %1512
  %1522 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1523 = load ptr, ptr %1522, align 8, !tbaa !107
  %1524 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1525 = load ptr, ptr %1524, align 8, !tbaa !65
  %1526 = ptrtoint ptr %1523 to i64
  %1527 = ptrtoint ptr %1525 to i64
  %1528 = sub i64 %1526, %1527
  %1529 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1530 = load ptr, ptr %1529, align 8, !tbaa !112
  %1531 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1532 = icmp eq ptr %1530, %1531
  br i1 %1532, label %1537, label %1533

1533:                                             ; preds = %1521
  %1534 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1535 = load ptr, ptr %1534, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %1535, i32 noundef 11) #15
  %1536 = load ptr, ptr %1524, align 8, !tbaa !65
  br label %1537

1537:                                             ; preds = %1533, %1521
  %1538 = phi ptr [ %1536, %1533 ], [ %1525, %1521 ]
  %1539 = icmp sgt i64 %1528, 127
  %1540 = select i1 %1539, ptr @.str.20, ptr @.str.8
  %1541 = select i1 %1539, i64 117, i64 %1528
  %1542 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1543 = load i32, ptr %1542, align 8, !tbaa !50
  %1544 = icmp ne i32 %1543, 0
  %1545 = zext i1 %1544 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.427, i32 noundef %1545, i64 noundef %1541, ptr noundef %1538, ptr noundef nonnull %1540) #15
  %1546 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 38
  %1547 = load ptr, ptr %1546, align 8, !tbaa !20
  %1548 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 40
  %1549 = load i32, ptr %1548, align 4, !tbaa !117
  %1550 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %1551 = load ptr, ptr %1550, align 8, !tbaa !106
  %1552 = sext i32 %1549 to i64
  br label %1553

1553:                                             ; preds = %1537, %1477
  %1554 = phi i32 [ %1549, %1537 ], [ %1475, %1477 ]
  %1555 = phi i64 [ %1552, %1537 ], [ %1480, %1477 ]
  %1556 = phi ptr [ %1551, %1537 ], [ %1487, %1477 ]
  %1557 = phi ptr [ %1547, %1537 ], [ %1479, %1477 ]
  %1558 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 40
  %1559 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %1560 = getelementptr inbounds %struct.reg_code_block, ptr %1557, i64 %1555, i32 1
  %1561 = load i64, ptr %1560, align 8, !tbaa !60
  %1562 = getelementptr inbounds i8, ptr %1556, i64 %1561
  store ptr %1562, ptr %13, align 8, !tbaa !105
  %1563 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1564 = load ptr, ptr %1563, align 8, !tbaa !112
  %1565 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1566 = icmp eq ptr %1564, %1565
  br i1 %1566, label %1607, label %1567

1567:                                             ; preds = %1553
  %1568 = getelementptr inbounds %struct.reg_code_block, ptr %1557, i64 %1555, i32 2
  %1569 = load ptr, ptr %1568, align 8, !tbaa !94
  %1570 = getelementptr inbounds %struct.reg_code_block, ptr %1557, i64 %1555, i32 3
  %1571 = load ptr, ptr %1570, align 8, !tbaa !95
  %1572 = icmp eq ptr %1571, null
  br i1 %1572, label %1589, label %1573

1573:                                             ; preds = %1567
  %1574 = tail call fastcc i32 @S_add_data(ptr noundef nonnull %0, ptr noundef nonnull @.str.428, i32 noundef 2)
  %1575 = load ptr, ptr %1570, align 8, !tbaa !95
  %1576 = icmp eq ptr %1575, null
  br i1 %1576, label %1581, label %1577

1577:                                             ; preds = %1573
  %1578 = getelementptr inbounds %struct.sv, ptr %1575, i64 0, i32 1
  %1579 = load i32, ptr %1578, align 8, !tbaa !37
  %1580 = add i32 %1579, 1
  store i32 %1580, ptr %1578, align 8, !tbaa !37
  br label %1581

1581:                                             ; preds = %1573, %1577
  %1582 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %1583 = load ptr, ptr %1582, align 8, !tbaa !130
  %1584 = getelementptr inbounds %struct.regexp_internal, ptr %1583, i64 0, i32 3
  %1585 = load ptr, ptr %1584, align 8, !tbaa !147
  %1586 = zext i32 %1574 to i64
  %1587 = getelementptr inbounds %struct.reg_data, ptr %1585, i64 0, i32 2, i64 %1586
  store ptr %1575, ptr %1587, align 8, !tbaa !5
  %1588 = add i32 %1574, 1
  br label %1597

1589:                                             ; preds = %1567
  %1590 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 1
  %1591 = load i32, ptr %1590, align 4, !tbaa !67
  %1592 = and i32 %1591, 268435456
  %1593 = icmp eq i32 %1592, 0
  %1594 = select i1 %1593, ptr @.str.217, ptr @.str.429
  %1595 = tail call fastcc i32 @S_add_data(ptr noundef nonnull %0, ptr noundef nonnull %1594, i32 noundef 1)
  %1596 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  br label %1597

1597:                                             ; preds = %1589, %1581
  %1598 = phi i32 [ %1588, %1581 ], [ %1595, %1589 ]
  %1599 = phi ptr [ %1582, %1581 ], [ %1596, %1589 ]
  %1600 = phi i32 [ %1574, %1581 ], [ %1595, %1589 ]
  %1601 = load ptr, ptr %1599, align 8, !tbaa !130
  %1602 = getelementptr inbounds %struct.regexp_internal, ptr %1601, i64 0, i32 3
  %1603 = load ptr, ptr %1602, align 8, !tbaa !147
  %1604 = zext i32 %1598 to i64
  %1605 = getelementptr inbounds %struct.reg_data, ptr %1603, i64 0, i32 2, i64 %1604
  store ptr %1569, ptr %1605, align 8, !tbaa !5
  %1606 = load i32, ptr %1558, align 4, !tbaa !117
  br label %1607

1607:                                             ; preds = %1597, %1553
  %1608 = phi i32 [ %1554, %1553 ], [ %1606, %1597 ]
  %1609 = phi i32 [ 0, %1553 ], [ %1600, %1597 ]
  %1610 = add nsw i32 %1608, 1
  store i32 %1610, ptr %1558, align 4, !tbaa !117
  %1611 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br i1 %1466, label %1612, label %1622

1612:                                             ; preds = %1607
  %1613 = tail call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 70)
  %1614 = load i32, ptr %0, align 8, !tbaa !66
  %1615 = and i32 %1614, 2047
  %1616 = tail call fastcc ptr @S_reg2Lanode(ptr noundef nonnull %0, i8 noundef zeroext 68, i32 noundef %1609, i32 noundef %1615)
  %1617 = load ptr, ptr %1563, align 8, !tbaa !112
  %1618 = icmp eq ptr %1617, %1565
  br i1 %1618, label %1620, label %1619

1619:                                             ; preds = %1612
  store i8 2, ptr %1613, align 2, !tbaa !143
  br label %1620

1620:                                             ; preds = %1619, %1612
  %1621 = add i32 %3, 1
  tail call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %1613, ptr noundef %1616, i32 noundef %1621)
  br label %2321

1622:                                             ; preds = %1607
  %1623 = tail call fastcc ptr @S_reg2Lanode(ptr noundef nonnull %0, i8 noundef zeroext 68, i32 noundef %1609, i32 noundef 0)
  %1624 = load ptr, ptr %1563, align 8, !tbaa !112
  %1625 = icmp eq ptr %1624, %1565
  br i1 %1625, label %1669, label %1626

1626:                                             ; preds = %1622
  %1627 = load volatile i64, ptr %6, align 8, !tbaa !9
  %1628 = and i64 %1627, 262144
  %1629 = icmp eq i64 %1628, 0
  br i1 %1629, label %1630, label %1632

1630:                                             ; preds = %1626
  %1631 = ptrtoint ptr %1623 to i64
  br label %1646

1632:                                             ; preds = %1626
  %1633 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %1634 = load ptr, ptr %1633, align 8, !tbaa !131
  %1635 = ptrtoint ptr %1623 to i64
  %1636 = ptrtoint ptr %1634 to i64
  %1637 = sub i64 %1635, %1636
  %1638 = lshr exact i64 %1637, 2
  %1639 = trunc i64 %1638 to i32
  %1640 = load ptr, ptr %13, align 8, !tbaa !105
  %1641 = ptrtoint ptr %1640 to i64
  %1642 = ptrtoint ptr %14 to i64
  %1643 = sub i64 %1641, %1642
  %1644 = trunc i64 %1643 to i32
  %1645 = add i32 %1644, 1
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 10264, i32 noundef %1639, i32 noundef %1645) #15
  br label %1646

1646:                                             ; preds = %1630, %1632
  %1647 = phi i64 [ %1631, %1630 ], [ %1635, %1632 ]
  %1648 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %1649 = load ptr, ptr %1648, align 8, !tbaa !131
  %1650 = ptrtoint ptr %1649 to i64
  %1651 = sub i64 %1647, %1650
  %1652 = icmp slt i64 %1651, 0
  br i1 %1652, label %1653, label %1656

1653:                                             ; preds = %1646
  %1654 = lshr exact i64 %1651, 2
  %1655 = trunc i64 %1654 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %1655) #15
  br label %1669

1656:                                             ; preds = %1646
  %1657 = load ptr, ptr %13, align 8, !tbaa !105
  %1658 = ptrtoint ptr %1657 to i64
  %1659 = ptrtoint ptr %14 to i64
  %1660 = sub i64 %1658, %1659
  %1661 = trunc i64 %1660 to i32
  %1662 = add i32 %1661, 1
  %1663 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %1664 = load ptr, ptr %1663, align 8, !tbaa !130
  %1665 = getelementptr inbounds %struct.regexp_internal, ptr %1664, i64 0, i32 1
  %1666 = load ptr, ptr %1665, align 8, !tbaa !17
  %1667 = lshr exact i64 %1651, 1
  %1668 = getelementptr inbounds i32, ptr %1666, i64 %1667
  store i32 %1662, ptr %1668, align 4, !tbaa !73
  br label %1669

1669:                                             ; preds = %1622, %1656, %1653
  %1670 = load ptr, ptr %1563, align 8, !tbaa !112
  %1671 = icmp eq ptr %1670, %1565
  br i1 %1671, label %2321, label %1672

1672:                                             ; preds = %1669
  %1673 = load volatile i64, ptr %6, align 8, !tbaa !9
  %1674 = and i64 %1673, 262144
  %1675 = icmp eq i64 %1674, 0
  br i1 %1675, label %1676, label %1678

1676:                                             ; preds = %1672
  %1677 = ptrtoint ptr %1623 to i64
  br label %1691

1678:                                             ; preds = %1672
  %1679 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %1680 = load ptr, ptr %1679, align 8, !tbaa !131
  %1681 = ptrtoint ptr %1623 to i64
  %1682 = ptrtoint ptr %1680 to i64
  %1683 = sub i64 %1681, %1682
  %1684 = lshr exact i64 %1683, 2
  %1685 = trunc i64 %1684 to i32
  %1686 = load ptr, ptr %1559, align 8, !tbaa !106
  %1687 = ptrtoint ptr %14 to i64
  %1688 = ptrtoint ptr %1686 to i64
  %1689 = sub i64 %1687, %1688
  %1690 = trunc i64 %1689 to i32
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 10265, i32 noundef %1685, i32 noundef %1690) #15
  br label %1691

1691:                                             ; preds = %1676, %1678
  %1692 = phi i64 [ %1677, %1676 ], [ %1681, %1678 ]
  %1693 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %1694 = load ptr, ptr %1693, align 8, !tbaa !131
  %1695 = ptrtoint ptr %1694 to i64
  %1696 = sub i64 %1692, %1695
  %1697 = icmp slt i64 %1696, 0
  br i1 %1697, label %1698, label %1701

1698:                                             ; preds = %1691
  %1699 = lshr exact i64 %1696, 2
  %1700 = trunc i64 %1699 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %1700) #15
  br label %2321

1701:                                             ; preds = %1691
  %1702 = load ptr, ptr %1559, align 8, !tbaa !106
  %1703 = ptrtoint ptr %14 to i64
  %1704 = ptrtoint ptr %1702 to i64
  %1705 = sub i64 %1703, %1704
  %1706 = trunc i64 %1705 to i32
  %1707 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %1708 = load ptr, ptr %1707, align 8, !tbaa !130
  %1709 = getelementptr inbounds %struct.regexp_internal, ptr %1708, i64 0, i32 1
  %1710 = load ptr, ptr %1709, align 8, !tbaa !17
  %1711 = lshr exact i64 %1696, 1
  %1712 = add nsw i64 %1711, -1
  %1713 = getelementptr inbounds i32, ptr %1710, i64 %1712
  store i32 %1706, ptr %1713, align 4, !tbaa !73
  br label %2321

1714:                                             ; preds = %520
  %1715 = load i8, ptr %523, align 1, !tbaa !17
  switch i8 %1715, label %1795 [
    i8 63, label %1716
    i8 60, label %1734
    i8 39, label %1734
  ]

1716:                                             ; preds = %1714
  %1717 = getelementptr inbounds i8, ptr %521, i64 3
  %1718 = load i8, ptr %1717, align 1, !tbaa !17
  switch i8 %1718, label %2100 [
    i8 61, label %1719
    i8 33, label %1719
    i8 60, label %1719
    i8 123, label %1719
  ]

1719:                                             ; preds = %1716, %1716, %1716, %1716
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #15
  %1720 = tail call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 70)
  %1721 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1722 = load ptr, ptr %1721, align 8, !tbaa !112
  %1723 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1724 = icmp eq ptr %1722, %1723
  br i1 %1724, label %1726, label %1725

1725:                                             ; preds = %1719
  store i8 1, ptr %1720, align 2, !tbaa !143
  br label %1726

1726:                                             ; preds = %1725, %1719
  %1727 = add i32 %3, 1
  %1728 = call fastcc ptr @S_reg(ptr noundef nonnull %0, i32 noundef 1, ptr noundef nonnull %9, i32 noundef %1727)
  %1729 = load i32, ptr %9, align 4, !tbaa !73
  %1730 = and i32 %1729, 32
  %1731 = icmp eq i32 %1730, 0
  br i1 %1731, label %1732, label %1733

1732:                                             ; preds = %1726
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %1720, ptr noundef %1728, i32 noundef %1727)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #15
  br label %1903

1733:                                             ; preds = %1726
  store i32 32, ptr %2, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #15
  br label %2321

1734:                                             ; preds = %1714, %1714
  %1735 = icmp eq i8 %1715, 60
  %1736 = getelementptr inbounds i8, ptr %521, i64 3
  store ptr %1736, ptr %13, align 8, !tbaa !105
  %1737 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1738 = load ptr, ptr %1737, align 8, !tbaa !112
  %1739 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1740 = icmp eq ptr %1738, %1739
  %1741 = select i1 %1740, i32 0, i32 2
  %1742 = tail call fastcc ptr @S_reg_scan_name(ptr noundef nonnull %0, i32 noundef %1741)
  %1743 = load ptr, ptr %13, align 8, !tbaa !105
  %1744 = icmp eq ptr %1743, %523
  br i1 %1744, label %1749, label %1745

1745:                                             ; preds = %1734
  %1746 = select i1 %1735, i8 62, i8 39
  %1747 = load i8, ptr %1743, align 1, !tbaa !17
  %1748 = icmp eq i8 %1747, %1746
  br i1 %1748, label %1774, label %1749

1749:                                             ; preds = %1734, %1745
  %1750 = load ptr, ptr %1737, align 8, !tbaa !112
  %1751 = icmp eq ptr %1750, %1739
  br i1 %1751, label %1756, label %1752

1752:                                             ; preds = %1749
  %1753 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1754 = load ptr, ptr %1753, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %1754, i32 noundef 11) #15
  %1755 = load ptr, ptr %13, align 8, !tbaa !105
  br label %1756

1756:                                             ; preds = %1749, %1752
  %1757 = phi ptr [ %1743, %1749 ], [ %1755, %1752 ]
  %1758 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1759 = load ptr, ptr %1758, align 8, !tbaa !65
  %1760 = ptrtoint ptr %1757 to i64
  %1761 = ptrtoint ptr %1759 to i64
  %1762 = sub i64 %1760, %1761
  %1763 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1764 = load i32, ptr %1763, align 8, !tbaa !50
  %1765 = icmp ne i32 %1764, 0
  %1766 = zext i1 %1765 to i32
  %1767 = select i1 %1735, i32 60, i32 39
  %1768 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1769 = load ptr, ptr %1768, align 8, !tbaa !107
  %1770 = ptrtoint ptr %1769 to i64
  %1771 = sub i64 %1770, %1760
  %1772 = getelementptr inbounds i8, ptr %1759, i64 %1762
  tail call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %1765, ptr noundef nonnull @.str.430, ptr nonnull poison, i32 noundef %1767, i32 noundef %1766, i64 noundef %1762, ptr noundef %1759, i32 noundef %1766, i64 noundef %1771, ptr noundef %1772)
  %1773 = load ptr, ptr %13, align 8, !tbaa !105
  br label %1774

1774:                                             ; preds = %1756, %1745
  %1775 = phi ptr [ %1773, %1756 ], [ %1743, %1745 ]
  %1776 = getelementptr inbounds i8, ptr %1775, i64 1
  store ptr %1776, ptr %13, align 8, !tbaa !105
  %1777 = load ptr, ptr %1737, align 8, !tbaa !112
  %1778 = icmp eq ptr %1777, %1739
  br i1 %1778, label %1792, label %1779

1779:                                             ; preds = %1774
  %1780 = tail call fastcc i32 @S_add_data(ptr noundef nonnull %0, ptr noundef nonnull @.str.406, i32 noundef 1)
  %1781 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %1782 = load ptr, ptr %1781, align 8, !tbaa !130
  %1783 = getelementptr inbounds %struct.regexp_internal, ptr %1782, i64 0, i32 3
  %1784 = load ptr, ptr %1783, align 8, !tbaa !147
  %1785 = zext i32 %1780 to i64
  %1786 = getelementptr inbounds %struct.reg_data, ptr %1784, i64 0, i32 2, i64 %1785
  store ptr %1742, ptr %1786, align 8, !tbaa !5
  %1787 = icmp eq ptr %1742, null
  br i1 %1787, label %1792, label %1788

1788:                                             ; preds = %1779
  %1789 = getelementptr inbounds %struct.sv, ptr %1742, i64 0, i32 1
  %1790 = load i32, ptr %1789, align 8, !tbaa !37
  %1791 = add i32 %1790, 1
  store i32 %1791, ptr %1789, align 8, !tbaa !37
  br label %1792

1792:                                             ; preds = %1779, %1788, %1774
  %1793 = phi i32 [ 0, %1774 ], [ %1780, %1788 ], [ %1780, %1779 ]
  %1794 = tail call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext 78, i32 noundef %1793)
  br label %1858

1795:                                             ; preds = %1714
  %1796 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1797 = load ptr, ptr %1796, align 8, !tbaa !107
  %1798 = ptrtoint ptr %1797 to i64
  %1799 = ptrtoint ptr %523 to i64
  %1800 = sub i64 %1798, %1799
  %1801 = icmp sgt i64 %1800, 5
  br i1 %1801, label %1802, label %1809

1802:                                             ; preds = %1795
  %1803 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %523, ptr noundef nonnull dereferenceable(7) @.str.431, i64 noundef 6) #18
  %1804 = icmp eq i32 %1803, 0
  br i1 %1804, label %1805, label %1809

1805:                                             ; preds = %1802
  %1806 = tail call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext 80, i32 noundef 0)
  %1807 = load ptr, ptr %13, align 8, !tbaa !105
  %1808 = getelementptr inbounds i8, ptr %1807, i64 6
  store ptr %1808, ptr %13, align 8, !tbaa !105
  br label %1858

1809:                                             ; preds = %1802, %1795
  %1810 = icmp eq i8 %1715, 82
  br i1 %1810, label %1811, label %1844

1811:                                             ; preds = %1809
  %1812 = getelementptr inbounds i8, ptr %521, i64 3
  store ptr %1812, ptr %13, align 8, !tbaa !105
  %1813 = load i8, ptr %1812, align 1, !tbaa !17
  %1814 = add i8 %1813, -49
  %1815 = icmp ult i8 %1814, 9
  br i1 %1815, label %1816, label %1826

1816:                                             ; preds = %1811
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #15
  %1817 = call zeroext i1 @Perl_grok_atoUV(ptr noundef nonnull %1812, ptr noundef nonnull %10, ptr noundef nonnull %7) #15
  %1818 = load i64, ptr %10, align 8
  %1819 = icmp ult i64 %1818, 2147483648
  %1820 = select i1 %1817, i1 %1819, i1 false
  br i1 %1820, label %1821, label %1824

1821:                                             ; preds = %1816
  %1822 = trunc i64 %1818 to i32
  %1823 = load ptr, ptr %7, align 8, !tbaa !5
  store ptr %1823, ptr %13, align 8, !tbaa !105
  br label %1824

1824:                                             ; preds = %1821, %1816
  %1825 = phi i32 [ %1822, %1821 ], [ 0, %1816 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #15
  br label %1841

1826:                                             ; preds = %1811
  %1827 = icmp eq i8 %1813, 38
  br i1 %1827, label %1828, label %1841

1828:                                             ; preds = %1826
  %1829 = getelementptr inbounds i8, ptr %521, i64 4
  store ptr %1829, ptr %13, align 8, !tbaa !105
  %1830 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1831 = load ptr, ptr %1830, align 8, !tbaa !112
  %1832 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1833 = icmp eq ptr %1831, %1832
  %1834 = select i1 %1833, i32 0, i32 2
  %1835 = tail call fastcc ptr @S_reg_scan_name(ptr noundef nonnull %0, i32 noundef %1834)
  %1836 = icmp eq ptr %1835, null
  br i1 %1836, label %1841, label %1837

1837:                                             ; preds = %1828
  %1838 = getelementptr inbounds %struct.sv, ptr %1835, i64 0, i32 3
  %1839 = load ptr, ptr %1838, align 8, !tbaa !17
  %1840 = load i32, ptr %1839, align 4, !tbaa !73
  br label %1841

1841:                                             ; preds = %1837, %1828, %1826, %1824
  %1842 = phi i32 [ %1825, %1824 ], [ 0, %1826 ], [ %1840, %1837 ], [ 0, %1828 ]
  %1843 = call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext 79, i32 noundef %1842)
  br label %1858

1844:                                             ; preds = %1809
  %1845 = add i8 %1715, -49
  %1846 = icmp ult i8 %1845, 9
  br i1 %1846, label %1847, label %2100

1847:                                             ; preds = %1844
  %1848 = call zeroext i1 @Perl_grok_atoUV(ptr noundef nonnull %523, ptr noundef nonnull %11, ptr noundef nonnull %7) #15
  %1849 = load i64, ptr %11, align 8
  %1850 = icmp ult i64 %1849, 2147483648
  %1851 = select i1 %1848, i1 %1850, i1 false
  br i1 %1851, label %1852, label %1855

1852:                                             ; preds = %1847
  %1853 = trunc i64 %1849 to i32
  %1854 = load ptr, ptr %7, align 8, !tbaa !5
  store ptr %1854, ptr %13, align 8, !tbaa !105
  br label %1855

1855:                                             ; preds = %1852, %1847
  %1856 = phi i32 [ %1853, %1852 ], [ 0, %1847 ]
  %1857 = call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext 67, i32 noundef %1856)
  br label %1858

1858:                                             ; preds = %1792, %1855, %1841, %1805
  %1859 = phi i32 [ 0, %1792 ], [ 0, %1841 ], [ 0, %1855 ], [ 1, %1805 ]
  %1860 = phi ptr [ %1794, %1792 ], [ %1843, %1841 ], [ %1857, %1855 ], [ %1806, %1805 ]
  %1861 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %1862 = load i8, ptr %1861, align 1, !tbaa !17
  %1863 = icmp eq i8 %1862, 41
  br i1 %1863, label %1903, label %1864

1864:                                             ; preds = %1858
  store ptr %1861, ptr %13, align 8, !tbaa !105
  %1865 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1866 = load i32, ptr %1865, align 8, !tbaa !50
  %1867 = icmp eq i32 %1866, 0
  br i1 %1867, label %1874, label %1868

1868:                                             ; preds = %1864
  %1869 = load i8, ptr %1861, align 1, !tbaa !17
  %1870 = zext i8 %1869 to i64
  %1871 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1870
  %1872 = load i8, ptr %1871, align 1, !tbaa !17
  %1873 = zext i8 %1872 to i64
  br label %1874

1874:                                             ; preds = %1864, %1868
  %1875 = phi i64 [ %1873, %1868 ], [ 1, %1864 ]
  %1876 = getelementptr inbounds i8, ptr %1861, i64 %1875
  store ptr %1876, ptr %13, align 8, !tbaa !105
  %1877 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1878 = load ptr, ptr %1877, align 8, !tbaa !112
  %1879 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1880 = icmp eq ptr %1878, %1879
  br i1 %1880, label %1886, label %1881

1881:                                             ; preds = %1874
  %1882 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1883 = load ptr, ptr %1882, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1883, i32 noundef 11) #15
  %1884 = load ptr, ptr %13, align 8, !tbaa !105
  %1885 = load i32, ptr %1865, align 8, !tbaa !50
  br label %1886

1886:                                             ; preds = %1874, %1881
  %1887 = phi i32 [ %1866, %1874 ], [ %1885, %1881 ]
  %1888 = phi ptr [ %1876, %1874 ], [ %1884, %1881 ]
  %1889 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1890 = load ptr, ptr %1889, align 8, !tbaa !107
  %1891 = icmp ugt ptr %1888, %1890
  %1892 = select i1 %1891, ptr %1890, ptr %1888
  %1893 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1894 = load ptr, ptr %1893, align 8, !tbaa !65
  %1895 = ptrtoint ptr %1892 to i64
  %1896 = ptrtoint ptr %1894 to i64
  %1897 = sub i64 %1895, %1896
  %1898 = icmp ne i32 %1887, 0
  %1899 = zext i1 %1898 to i32
  %1900 = ptrtoint ptr %1890 to i64
  %1901 = sub i64 %1900, %1895
  %1902 = getelementptr inbounds i8, ptr %1894, i64 %1897
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.432, i32 noundef %1899, i64 noundef %1897, ptr noundef %1894, i32 noundef %1899, i64 noundef %1901, ptr noundef %1902) #15
  br label %1903

1903:                                             ; preds = %1732, %1858, %1886
  %1904 = phi i32 [ %1859, %1886 ], [ %1859, %1858 ], [ 0, %1732 ]
  %1905 = phi ptr [ %1860, %1886 ], [ %1860, %1858 ], [ %1720, %1732 ]
  %1906 = call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext 66, i32 noundef 0)
  %1907 = add i32 %3, 1
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %1905, ptr noundef %1906, i32 noundef %1907)
  %1908 = call fastcc ptr @S_regbranch(ptr noundef nonnull %0, ptr noundef nonnull %5, i32 noundef 1, i32 noundef %1907)
  %1909 = icmp eq ptr %1908, null
  br i1 %1909, label %1910, label %1943

1910:                                             ; preds = %1903
  %1911 = load i32, ptr %5, align 4, !tbaa !73
  %1912 = and i32 %1911, 32
  %1913 = icmp eq i32 %1912, 0
  br i1 %1913, label %1915, label %1914

1914:                                             ; preds = %1910
  store i32 32, ptr %2, align 4, !tbaa !73
  br label %2321

1915:                                             ; preds = %1910
  %1916 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1917 = load ptr, ptr %1916, align 8, !tbaa !107
  %1918 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1919 = load ptr, ptr %1918, align 8, !tbaa !65
  %1920 = ptrtoint ptr %1917 to i64
  %1921 = ptrtoint ptr %1919 to i64
  %1922 = sub i64 %1920, %1921
  %1923 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1924 = load ptr, ptr %1923, align 8, !tbaa !112
  %1925 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1926 = icmp eq ptr %1924, %1925
  br i1 %1926, label %1932, label %1927

1927:                                             ; preds = %1915
  %1928 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1929 = load ptr, ptr %1928, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1929, i32 noundef 11) #15
  %1930 = load i32, ptr %5, align 4, !tbaa !73
  %1931 = load ptr, ptr %1918, align 8, !tbaa !65
  br label %1932

1932:                                             ; preds = %1927, %1915
  %1933 = phi ptr [ %1931, %1927 ], [ %1919, %1915 ]
  %1934 = phi i32 [ %1930, %1927 ], [ %1911, %1915 ]
  %1935 = icmp sgt i64 %1922, 127
  %1936 = select i1 %1935, ptr @.str.20, ptr @.str.8
  %1937 = select i1 %1935, i64 117, i64 %1922
  %1938 = sext i32 %1934 to i64
  %1939 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1940 = load i32, ptr %1939, align 8, !tbaa !50
  %1941 = icmp ne i32 %1940, 0
  %1942 = zext i1 %1941 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.433, i64 noundef %1938, i32 noundef %1942, i64 noundef %1937, ptr noundef %1933, ptr noundef nonnull %1936) #15
  br label %1945

1943:                                             ; preds = %1903
  %1944 = call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext 61, i32 noundef 0)
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef nonnull %1908, ptr noundef %1944, i32 noundef %1907)
  br label %1945

1945:                                             ; preds = %1943, %1932
  %1946 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %1947 = load i8, ptr %1946, align 1, !tbaa !17
  %1948 = load i32, ptr %5, align 4, !tbaa !73
  %1949 = and i32 %1948, 1
  %1950 = icmp eq i32 %1949, 0
  br i1 %1950, label %1954, label %1951

1951:                                             ; preds = %1945
  %1952 = load i32, ptr %2, align 4, !tbaa !73
  %1953 = or i32 %1952, 1
  store i32 %1953, ptr %2, align 4, !tbaa !73
  br label %1954

1954:                                             ; preds = %1951, %1945
  %1955 = icmp eq i8 %1947, 124
  br i1 %1955, label %1956, label %2031

1956:                                             ; preds = %1954
  %1957 = icmp eq i32 %1904, 0
  br i1 %1957, label %1984, label %1958

1958:                                             ; preds = %1956
  %1959 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1960 = load ptr, ptr %1959, align 8, !tbaa !112
  %1961 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1962 = icmp eq ptr %1960, %1961
  br i1 %1962, label %1966, label %1963

1963:                                             ; preds = %1958
  %1964 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1965 = load ptr, ptr %1964, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1965, i32 noundef 11) #15
  br label %1966

1966:                                             ; preds = %1958, %1963
  %1967 = load ptr, ptr %13, align 8, !tbaa !105
  %1968 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1969 = load ptr, ptr %1968, align 8, !tbaa !107
  %1970 = icmp ugt ptr %1967, %1969
  %1971 = select i1 %1970, ptr %1969, ptr %1967
  %1972 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1973 = load ptr, ptr %1972, align 8, !tbaa !65
  %1974 = ptrtoint ptr %1971 to i64
  %1975 = ptrtoint ptr %1973 to i64
  %1976 = sub i64 %1974, %1975
  %1977 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1978 = load i32, ptr %1977, align 8, !tbaa !50
  %1979 = icmp ne i32 %1978, 0
  %1980 = zext i1 %1979 to i32
  %1981 = ptrtoint ptr %1969 to i64
  %1982 = sub i64 %1981, %1974
  %1983 = getelementptr inbounds i8, ptr %1973, i64 %1976
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.434, i32 noundef %1980, i64 noundef %1976, ptr noundef %1973, i32 noundef %1980, i64 noundef %1982, ptr noundef %1983) #15
  br label %1984

1984:                                             ; preds = %1966, %1956
  %1985 = call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext 66, i32 noundef 0)
  %1986 = call fastcc ptr @S_regbranch(ptr noundef nonnull %0, ptr noundef nonnull %5, i32 noundef 1, i32 noundef %1907)
  %1987 = icmp eq ptr %1986, null
  br i1 %1987, label %1988, label %2021

1988:                                             ; preds = %1984
  %1989 = load i32, ptr %5, align 4, !tbaa !73
  %1990 = and i32 %1989, 32
  %1991 = icmp eq i32 %1990, 0
  br i1 %1991, label %1993, label %1992

1992:                                             ; preds = %1988
  store i32 32, ptr %2, align 4, !tbaa !73
  br label %2321

1993:                                             ; preds = %1988
  %1994 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %1995 = load ptr, ptr %1994, align 8, !tbaa !107
  %1996 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1997 = load ptr, ptr %1996, align 8, !tbaa !65
  %1998 = ptrtoint ptr %1995 to i64
  %1999 = ptrtoint ptr %1997 to i64
  %2000 = sub i64 %1998, %1999
  %2001 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2002 = load ptr, ptr %2001, align 8, !tbaa !112
  %2003 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2004 = icmp eq ptr %2002, %2003
  br i1 %2004, label %2010, label %2005

2005:                                             ; preds = %1993
  %2006 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %2007 = load ptr, ptr %2006, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %2007, i32 noundef 11) #15
  %2008 = load i32, ptr %5, align 4, !tbaa !73
  %2009 = load ptr, ptr %1996, align 8, !tbaa !65
  br label %2010

2010:                                             ; preds = %2005, %1993
  %2011 = phi ptr [ %2009, %2005 ], [ %1997, %1993 ]
  %2012 = phi i32 [ %2008, %2005 ], [ %1989, %1993 ]
  %2013 = icmp sgt i64 %2000, 127
  %2014 = select i1 %2013, ptr @.str.20, ptr @.str.8
  %2015 = select i1 %2013, i64 117, i64 %2000
  %2016 = sext i32 %2012 to i64
  %2017 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %2018 = load i32, ptr %2017, align 8, !tbaa !50
  %2019 = icmp ne i32 %2018, 0
  %2020 = zext i1 %2019 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.433, i64 noundef %2016, i32 noundef %2020, i64 noundef %2015, ptr noundef %2011, ptr noundef nonnull %2014) #15
  br label %2021

2021:                                             ; preds = %2010, %1984
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %1905, ptr noundef %1985, i32 noundef %1907)
  %2022 = load i32, ptr %5, align 4, !tbaa !73
  %2023 = and i32 %2022, 1
  %2024 = icmp eq i32 %2023, 0
  br i1 %2024, label %2028, label %2025

2025:                                             ; preds = %2021
  %2026 = load i32, ptr %2, align 4, !tbaa !73
  %2027 = or i32 %2026, 1
  store i32 %2027, ptr %2, align 4, !tbaa !73
  br label %2028

2028:                                             ; preds = %2025, %2021
  %2029 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %2030 = load i8, ptr %2029, align 1, !tbaa !17
  br label %2031

2031:                                             ; preds = %1954, %2028
  %2032 = phi i8 [ %2030, %2028 ], [ %1947, %1954 ]
  %2033 = phi ptr [ %1985, %2028 ], [ null, %1954 ]
  %2034 = icmp eq i8 %2032, 41
  br i1 %2034, label %2090, label %2035

2035:                                             ; preds = %2031
  %2036 = load ptr, ptr %13, align 8, !tbaa !105
  %2037 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %2038 = load ptr, ptr %2037, align 8, !tbaa !107
  %2039 = icmp ugt ptr %2036, %2038
  %2040 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2041 = load ptr, ptr %2040, align 8, !tbaa !112
  %2042 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2043 = icmp eq ptr %2041, %2042
  br i1 %2039, label %2044, label %2067

2044:                                             ; preds = %2035
  br i1 %2043, label %2050, label %2045

2045:                                             ; preds = %2044
  %2046 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %2047 = load ptr, ptr %2046, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %2047, i32 noundef 11) #15
  %2048 = load ptr, ptr %13, align 8, !tbaa !105
  %2049 = load ptr, ptr %2037, align 8, !tbaa !107
  br label %2050

2050:                                             ; preds = %2044, %2045
  %2051 = phi ptr [ %2038, %2044 ], [ %2049, %2045 ]
  %2052 = phi ptr [ %2036, %2044 ], [ %2048, %2045 ]
  %2053 = icmp ugt ptr %2052, %2051
  %2054 = select i1 %2053, ptr %2051, ptr %2052
  %2055 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2056 = load ptr, ptr %2055, align 8, !tbaa !65
  %2057 = ptrtoint ptr %2054 to i64
  %2058 = ptrtoint ptr %2056 to i64
  %2059 = sub i64 %2057, %2058
  %2060 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %2061 = load i32, ptr %2060, align 8, !tbaa !50
  %2062 = icmp ne i32 %2061, 0
  %2063 = zext i1 %2062 to i32
  %2064 = ptrtoint ptr %2051 to i64
  %2065 = sub i64 %2064, %2057
  %2066 = getelementptr inbounds i8, ptr %2056, i64 %2059
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.435, i32 noundef %2063, i64 noundef %2059, ptr noundef %2056, i32 noundef %2063, i64 noundef %2065, ptr noundef %2066) #15
  br label %2090

2067:                                             ; preds = %2035
  br i1 %2043, label %2073, label %2068

2068:                                             ; preds = %2067
  %2069 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %2070 = load ptr, ptr %2069, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %2070, i32 noundef 11) #15
  %2071 = load ptr, ptr %13, align 8, !tbaa !105
  %2072 = load ptr, ptr %2037, align 8, !tbaa !107
  br label %2073

2073:                                             ; preds = %2067, %2068
  %2074 = phi ptr [ %2038, %2067 ], [ %2072, %2068 ]
  %2075 = phi ptr [ %2036, %2067 ], [ %2071, %2068 ]
  %2076 = icmp ugt ptr %2075, %2074
  %2077 = select i1 %2076, ptr %2074, ptr %2075
  %2078 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2079 = load ptr, ptr %2078, align 8, !tbaa !65
  %2080 = ptrtoint ptr %2077 to i64
  %2081 = ptrtoint ptr %2079 to i64
  %2082 = sub i64 %2080, %2081
  %2083 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %2084 = load i32, ptr %2083, align 8, !tbaa !50
  %2085 = icmp ne i32 %2084, 0
  %2086 = zext i1 %2085 to i32
  %2087 = ptrtoint ptr %2074 to i64
  %2088 = sub i64 %2087, %2080
  %2089 = getelementptr inbounds i8, ptr %2079, i64 %2082
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.436, i32 noundef %2086, i64 noundef %2082, ptr noundef %2079, i32 noundef %2086, i64 noundef %2088, ptr noundef %2089) #15
  br label %2090

2090:                                             ; preds = %2050, %2073, %2031
  %2091 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 41)
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %1908, ptr noundef %2091, i32 noundef %1907)
  %2092 = icmp eq ptr %2033, null
  br i1 %2092, label %2095, label %2093

2093:                                             ; preds = %2090
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef nonnull %2033, ptr noundef %2091, i32 noundef %1907)
  %2094 = getelementptr inbounds %struct.regnode, ptr %2033, i64 2
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef nonnull %2094, ptr noundef %2091, i32 noundef %1907)
  br label %2096

2095:                                             ; preds = %2090
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %1905, ptr noundef %2091, i32 noundef %1907)
  br label %2096

2096:                                             ; preds = %2095, %2093
  %2097 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %2098 = load i64, ptr %2097, align 8, !tbaa !111
  %2099 = add nsw i64 %2098, 1
  store i64 %2099, ptr %2097, align 8, !tbaa !111
  br label %2321

2100:                                             ; preds = %1716, %1844
  %2101 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %2102 = load i32, ptr %2101, align 8, !tbaa !50
  %2103 = icmp eq i32 %2102, 0
  br i1 %2103, label %2109, label %2104

2104:                                             ; preds = %2100
  %2105 = zext i8 %1715 to i64
  %2106 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %2105
  %2107 = load i8, ptr %2106, align 1, !tbaa !17
  %2108 = zext i8 %2107 to i64
  br label %2109

2109:                                             ; preds = %2100, %2104
  %2110 = phi i64 [ %2108, %2104 ], [ 1, %2100 ]
  %2111 = getelementptr inbounds i8, ptr %523, i64 %2110
  store ptr %2111, ptr %13, align 8, !tbaa !105
  %2112 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2113 = load ptr, ptr %2112, align 8, !tbaa !112
  %2114 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2115 = icmp eq ptr %2113, %2114
  br i1 %2115, label %2121, label %2116

2116:                                             ; preds = %2109
  %2117 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %2118 = load ptr, ptr %2117, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %2118, i32 noundef 11) #15
  %2119 = load ptr, ptr %13, align 8, !tbaa !105
  %2120 = load i32, ptr %2101, align 8, !tbaa !50
  br label %2121

2121:                                             ; preds = %2116, %2109
  %2122 = phi i32 [ %2120, %2116 ], [ %2102, %2109 ]
  %2123 = phi ptr [ %2119, %2116 ], [ %2111, %2109 ]
  %2124 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %2125 = load ptr, ptr %2124, align 8, !tbaa !107
  %2126 = icmp ugt ptr %2123, %2125
  %2127 = select i1 %2126, ptr %2125, ptr %2123
  %2128 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2129 = load ptr, ptr %2128, align 8, !tbaa !65
  %2130 = ptrtoint ptr %2127 to i64
  %2131 = ptrtoint ptr %2129 to i64
  %2132 = sub i64 %2130, %2131
  %2133 = icmp ne i32 %2122, 0
  %2134 = zext i1 %2133 to i32
  %2135 = ptrtoint ptr %2125 to i64
  %2136 = sub i64 %2135, %2130
  %2137 = getelementptr inbounds i8, ptr %2129, i64 %2132
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.437, i32 noundef %2134, i64 noundef %2132, ptr noundef %2129, i32 noundef %2134, i64 noundef %2136, ptr noundef %2137) #15
  br label %2138

2138:                                             ; preds = %2121, %520
  %2139 = tail call fastcc ptr @S_handle_regex_sets(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull %2, i32 noundef %3, ptr noundef %14)
  br label %2321

2140:                                             ; preds = %520
  store ptr %522, ptr %13, align 8, !tbaa !105
  %2141 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2142 = load ptr, ptr %2141, align 8, !tbaa !112
  %2143 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2144 = icmp eq ptr %2142, %2143
  br i1 %2144, label %2149, label %2145

2145:                                             ; preds = %2140
  %2146 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %2147 = load ptr, ptr %2146, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %2147, i32 noundef 11) #15
  %2148 = load ptr, ptr %13, align 8, !tbaa !105
  br label %2149

2149:                                             ; preds = %2140, %2145
  %2150 = phi ptr [ %522, %2140 ], [ %2148, %2145 ]
  %2151 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %2152 = load ptr, ptr %2151, align 8, !tbaa !107
  %2153 = icmp ugt ptr %2150, %2152
  %2154 = select i1 %2153, ptr %2152, ptr %2150
  %2155 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2156 = load ptr, ptr %2155, align 8, !tbaa !65
  %2157 = ptrtoint ptr %2154 to i64
  %2158 = ptrtoint ptr %2156 to i64
  %2159 = sub i64 %2157, %2158
  %2160 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %2161 = load i32, ptr %2160, align 8, !tbaa !50
  %2162 = icmp ne i32 %2161, 0
  %2163 = zext i1 %2162 to i32
  %2164 = ptrtoint ptr %2152 to i64
  %2165 = sub i64 %2164, %2157
  %2166 = getelementptr inbounds i8, ptr %2156, i64 %2159
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.438, i32 noundef %2163, i64 noundef %2159, ptr noundef %2156, i32 noundef %2163, i64 noundef %2165, ptr noundef %2166) #15
  br label %2173

2167:                                             ; preds = %1151, %520
  store ptr %522, ptr %13, align 8, !tbaa !105
  tail call fastcc void @S_parse_lparen_question_flags(ptr noundef nonnull %0)
  %2168 = load ptr, ptr %13, align 8, !tbaa !105
  %2169 = load i8, ptr %2168, align 1, !tbaa !17
  switch i8 %2169, label %2170 [
    i8 58, label %2323
    i8 0, label %2172
  ]

2170:                                             ; preds = %2167
  %2171 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %2172

2172:                                             ; preds = %2167, %2170
  store i32 16, ptr %2, align 4, !tbaa !73
  br label %2321

2173:                                             ; preds = %520, %520, %995, %2149, %1018, %1006, %990
  %2174 = phi i32 [ 0, %990 ], [ 0, %995 ], [ %1008, %1006 ], [ 0, %520 ], [ 0, %520 ], [ 0, %1018 ], [ 0, %2149 ]
  %2175 = phi i32 [ %991, %990 ], [ 33, %995 ], [ 58, %1006 ], [ %525, %520 ], [ %525, %520 ], [ %525, %1018 ], [ 0, %2149 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #15
  br label %2325

2176:                                             ; preds = %780, %970, %977, %979
  %2177 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #15
  br label %2182

2178:                                             ; preds = %113
  %2179 = load i32, ptr %0, align 8, !tbaa !66
  %2180 = and i32 %2179, 32
  %2181 = icmp eq i32 %2180, 0
  br i1 %2181, label %2182, label %2325

2182:                                             ; preds = %2178, %2176
  %2183 = phi i32 [ 1, %2176 ], [ %1, %2178 ]
  %2184 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %2185 = load i32, ptr %2184, align 8, !tbaa !109
  %2186 = add nsw i32 %2185, 1
  store i32 %2186, ptr %2184, align 8, !tbaa !109
  %2187 = tail call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 49, i64 noundef 1, ptr noundef nonnull @.str.452)
  %2188 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2189 = load ptr, ptr %2188, align 8, !tbaa !112
  %2190 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2191 = icmp eq ptr %2189, %2190
  br i1 %2191, label %2272, label %2192

2192:                                             ; preds = %2182
  %2193 = getelementptr inbounds %struct.regnode_1, ptr %2187, i64 0, i32 3
  store i32 %2185, ptr %2193, align 4, !tbaa !148
  %2194 = getelementptr inbounds %struct.regnode, ptr %2187, i64 0, i32 1
  store i8 49, ptr %2194, align 1, !tbaa !141
  %2195 = getelementptr inbounds %struct.regnode, ptr %2187, i64 0, i32 2
  store i16 0, ptr %2195, align 2, !tbaa !222
  %2196 = getelementptr inbounds %struct.regnode, ptr %2187, i64 2
  store ptr %2196, ptr %2188, align 8, !tbaa !112
  %2197 = icmp eq ptr %2196, %2190
  br i1 %2197, label %2272, label %2198

2198:                                             ; preds = %2192
  %2199 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 19
  %2200 = load i32, ptr %2199, align 4, !tbaa !110
  %2201 = icmp eq i32 %2200, 0
  br i1 %2201, label %2202, label %2203

2202:                                             ; preds = %2198
  store i32 %2185, ptr %2199, align 4, !tbaa !110
  br label %2203

2203:                                             ; preds = %2202, %2198
  %2204 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %2205 = load i32, ptr %2204, align 8, !tbaa !98
  %2206 = and i32 %2205, 32
  %2207 = icmp eq i32 %2206, 0
  br i1 %2207, label %2238, label %2208

2208:                                             ; preds = %2203
  %2209 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 22
  %2210 = load ptr, ptr %2209, align 8, !tbaa !127
  %2211 = add nsw i32 %2185, -1
  %2212 = sext i32 %2211 to i64
  %2213 = getelementptr inbounds ptr, ptr %2210, i64 %2212
  %2214 = load ptr, ptr %2213, align 8, !tbaa !5
  %2215 = icmp eq ptr %2214, null
  br i1 %2215, label %2216, label %2238

2216:                                             ; preds = %2208
  %2217 = load volatile i64, ptr %6, align 8, !tbaa !9
  %2218 = and i64 %2217, 1048578
  %2219 = icmp eq i64 %2218, 1048578
  br i1 %2219, label %2220, label %2234

2220:                                             ; preds = %2216
  %2221 = tail call ptr @Perl_PerlIO_stderr() #15
  %2222 = shl i32 %3, 1
  %2223 = or i32 %2222, 1
  %2224 = sext i32 %2185 to i64
  %2225 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2226 = load ptr, ptr %2225, align 8, !tbaa !131
  %2227 = ptrtoint ptr %2187 to i64
  %2228 = ptrtoint ptr %2226 to i64
  %2229 = sub i64 %2227, %2228
  %2230 = lshr exact i64 %2229, 2
  %2231 = trunc i64 %2230 to i32
  %2232 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2221, ptr noundef nonnull @.str.439, i32 noundef 22, ptr noundef nonnull @.str.424, i32 noundef %2223, ptr noundef nonnull @.str.8, i64 noundef %2224, i32 noundef %2231) #15
  %2233 = load ptr, ptr %2209, align 8, !tbaa !127
  br label %2234

2234:                                             ; preds = %2220, %2216
  %2235 = phi ptr [ %2233, %2220 ], [ %2210, %2216 ]
  %2236 = getelementptr inbounds ptr, ptr %2235, i64 %2212
  store ptr %2187, ptr %2236, align 8, !tbaa !5
  %2237 = load ptr, ptr %2188, align 8, !tbaa !112
  br label %2238

2238:                                             ; preds = %2234, %2208, %2203
  %2239 = phi ptr [ %2237, %2234 ], [ %2196, %2208 ], [ %2196, %2203 ]
  %2240 = icmp eq ptr %2239, %2190
  br i1 %2240, label %2272, label %2241

2241:                                             ; preds = %2238
  %2242 = load volatile i64, ptr %6, align 8, !tbaa !9
  %2243 = and i64 %2242, 262144
  %2244 = icmp eq i64 %2243, 0
  br i1 %2244, label %2245, label %2247

2245:                                             ; preds = %2241
  %2246 = ptrtoint ptr %2187 to i64
  br label %2255

2247:                                             ; preds = %2241
  %2248 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2249 = load ptr, ptr %2248, align 8, !tbaa !131
  %2250 = ptrtoint ptr %2187 to i64
  %2251 = ptrtoint ptr %2249 to i64
  %2252 = sub i64 %2250, %2251
  %2253 = lshr exact i64 %2252, 2
  %2254 = trunc i64 %2253 to i32
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 10471, i32 noundef %2254, i32 noundef 1) #15
  br label %2255

2255:                                             ; preds = %2245, %2247
  %2256 = phi i64 [ %2246, %2245 ], [ %2250, %2247 ]
  %2257 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2258 = load ptr, ptr %2257, align 8, !tbaa !131
  %2259 = ptrtoint ptr %2258 to i64
  %2260 = sub i64 %2256, %2259
  %2261 = icmp slt i64 %2260, 0
  br i1 %2261, label %2262, label %2265

2262:                                             ; preds = %2255
  %2263 = lshr exact i64 %2260, 2
  %2264 = trunc i64 %2263 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %2264) #15
  br label %2272

2265:                                             ; preds = %2255
  %2266 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %2267 = load ptr, ptr %2266, align 8, !tbaa !130
  %2268 = getelementptr inbounds %struct.regexp_internal, ptr %2267, i64 0, i32 1
  %2269 = load ptr, ptr %2268, align 8, !tbaa !17
  %2270 = lshr exact i64 %2260, 1
  %2271 = getelementptr inbounds i32, ptr %2269, i64 %2270
  store i32 1, ptr %2271, align 4, !tbaa !73
  br label %2272

2272:                                             ; preds = %2182, %2192, %2238, %2265, %2262
  %2273 = load ptr, ptr %2188, align 8, !tbaa !112
  %2274 = icmp eq ptr %2273, %2190
  br i1 %2274, label %2325, label %2275

2275:                                             ; preds = %2272
  %2276 = load volatile i64, ptr %6, align 8, !tbaa !9
  %2277 = and i64 %2276, 262144
  %2278 = icmp eq i64 %2277, 0
  br i1 %2278, label %2279, label %2281

2279:                                             ; preds = %2275
  %2280 = ptrtoint ptr %2187 to i64
  br label %2296

2281:                                             ; preds = %2275
  %2282 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2283 = load ptr, ptr %2282, align 8, !tbaa !131
  %2284 = ptrtoint ptr %2187 to i64
  %2285 = ptrtoint ptr %2283 to i64
  %2286 = sub i64 %2284, %2285
  %2287 = lshr exact i64 %2286, 2
  %2288 = trunc i64 %2287 to i32
  %2289 = load ptr, ptr %13, align 8, !tbaa !105
  %2290 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %2291 = load ptr, ptr %2290, align 8, !tbaa !106
  %2292 = ptrtoint ptr %2289 to i64
  %2293 = ptrtoint ptr %2291 to i64
  %2294 = sub i64 %2292, %2293
  %2295 = trunc i64 %2294 to i32
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 10472, i32 noundef %2288, i32 noundef %2295) #15
  br label %2296

2296:                                             ; preds = %2279, %2281
  %2297 = phi i64 [ %2280, %2279 ], [ %2284, %2281 ]
  %2298 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2299 = load ptr, ptr %2298, align 8, !tbaa !131
  %2300 = ptrtoint ptr %2299 to i64
  %2301 = sub i64 %2297, %2300
  %2302 = icmp slt i64 %2301, 0
  br i1 %2302, label %2303, label %2306

2303:                                             ; preds = %2296
  %2304 = lshr exact i64 %2301, 2
  %2305 = trunc i64 %2304 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %2305) #15
  br label %2325

2306:                                             ; preds = %2296
  %2307 = load ptr, ptr %13, align 8, !tbaa !105
  %2308 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %2309 = load ptr, ptr %2308, align 8, !tbaa !106
  %2310 = ptrtoint ptr %2307 to i64
  %2311 = ptrtoint ptr %2309 to i64
  %2312 = sub i64 %2310, %2311
  %2313 = trunc i64 %2312 to i32
  %2314 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %2315 = load ptr, ptr %2314, align 8, !tbaa !130
  %2316 = getelementptr inbounds %struct.regexp_internal, ptr %2315, i64 0, i32 1
  %2317 = load ptr, ptr %2316, align 8, !tbaa !17
  %2318 = lshr exact i64 %2301, 1
  %2319 = add nsw i64 %2318, -1
  %2320 = getelementptr inbounds i32, ptr %2317, i64 %2319
  store i32 %2313, ptr %2320, align 4, !tbaa !73
  br label %2325

2321:                                             ; preds = %1620, %1698, %1701, %1669, %693, %1003, %1062, %1408, %2138, %2172, %1914, %2096, %1992, %1733
  %2322 = phi ptr [ null, %2172 ], [ %2139, %2138 ], [ %1255, %1408 ], [ %1063, %1062 ], [ %1004, %1003 ], [ %598, %693 ], [ %1613, %1620 ], [ %1623, %1698 ], [ %1623, %1701 ], [ %1623, %1669 ], [ null, %1733 ], [ null, %1992 ], [ %1905, %2096 ], [ null, %1914 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #15
  br label %3305

2323:                                             ; preds = %2167
  %2324 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #15
  br label %2325

2325:                                             ; preds = %2303, %2306, %2272, %2178, %2173, %2323, %105
  %2326 = phi i32 [ 0, %2323 ], [ %1, %105 ], [ %2174, %2173 ], [ 0, %2178 ], [ 0, %2272 ], [ 0, %2306 ], [ 0, %2303 ]
  %2327 = phi i1 [ true, %2323 ], [ true, %105 ], [ true, %2173 ], [ true, %2178 ], [ false, %2272 ], [ false, %2306 ], [ false, %2303 ]
  %2328 = phi i32 [ 0, %2323 ], [ %1, %105 ], [ 0, %2173 ], [ 0, %2178 ], [ %2185, %2272 ], [ %2185, %2306 ], [ %2185, %2303 ]
  %2329 = phi ptr [ null, %2323 ], [ null, %105 ], [ null, %2173 ], [ null, %2178 ], [ %2187, %2272 ], [ %2187, %2306 ], [ %2187, %2303 ]
  %2330 = phi i32 [ 58, %2323 ], [ %1, %105 ], [ %2175, %2173 ], [ 58, %2178 ], [ %2183, %2272 ], [ %2183, %2306 ], [ %2183, %2303 ]
  %2331 = load ptr, ptr %13, align 8, !tbaa !105
  %2332 = add i32 %3, 1
  %2333 = call fastcc ptr @S_regbranch(ptr noundef nonnull %0, ptr noundef nonnull %5, i32 noundef 1, i32 noundef %2332)
  %2334 = icmp eq ptr %2333, null
  br i1 %2334, label %2335, label %2368

2335:                                             ; preds = %2325
  %2336 = load i32, ptr %5, align 4, !tbaa !73
  %2337 = and i32 %2336, 32
  %2338 = icmp eq i32 %2337, 0
  br i1 %2338, label %2340, label %2339

2339:                                             ; preds = %2335
  store i32 32, ptr %2, align 4, !tbaa !73
  br label %3305

2340:                                             ; preds = %2335
  %2341 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %2342 = load ptr, ptr %2341, align 8, !tbaa !107
  %2343 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2344 = load ptr, ptr %2343, align 8, !tbaa !65
  %2345 = ptrtoint ptr %2342 to i64
  %2346 = ptrtoint ptr %2344 to i64
  %2347 = sub i64 %2345, %2346
  %2348 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2349 = load ptr, ptr %2348, align 8, !tbaa !112
  %2350 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2351 = icmp eq ptr %2349, %2350
  br i1 %2351, label %2357, label %2352

2352:                                             ; preds = %2340
  %2353 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %2354 = load ptr, ptr %2353, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %2354, i32 noundef 11) #15
  %2355 = load i32, ptr %5, align 4, !tbaa !73
  %2356 = load ptr, ptr %2343, align 8, !tbaa !65
  br label %2357

2357:                                             ; preds = %2352, %2340
  %2358 = phi ptr [ %2356, %2352 ], [ %2344, %2340 ]
  %2359 = phi i32 [ %2355, %2352 ], [ %2336, %2340 ]
  %2360 = icmp sgt i64 %2347, 127
  %2361 = select i1 %2360, ptr @.str.20, ptr @.str.8
  %2362 = select i1 %2360, i64 117, i64 %2347
  %2363 = sext i32 %2359 to i64
  %2364 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %2365 = load i32, ptr %2364, align 8, !tbaa !50
  %2366 = icmp ne i32 %2365, 0
  %2367 = zext i1 %2366 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.433, i64 noundef %2363, i32 noundef %2367, i64 noundef %2362, ptr noundef %2358, ptr noundef nonnull %2361) #15
  br label %2368

2368:                                             ; preds = %2357, %2325
  %2369 = load ptr, ptr %13, align 8, !tbaa !105
  %2370 = load i8, ptr %2369, align 1, !tbaa !17
  %2371 = icmp eq i8 %2370, 124
  br i1 %2371, label %2372, label %2474

2372:                                             ; preds = %2368
  %2373 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2374 = load ptr, ptr %2373, align 8, !tbaa !112
  %2375 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2376 = icmp eq ptr %2374, %2375
  br i1 %2376, label %2382, label %2377

2377:                                             ; preds = %2372
  %2378 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 20
  %2379 = load i32, ptr %2378, align 8, !tbaa !102
  %2380 = icmp eq i32 %2379, 0
  br i1 %2380, label %2382, label %2381

2381:                                             ; preds = %2377
  call fastcc void @S_reginsert(ptr noundef nonnull %0, i8 noundef zeroext 62, ptr noundef %2333, i32 noundef %2332)
  br label %2467

2382:                                             ; preds = %2377, %2372
  call fastcc void @S_reginsert(ptr noundef nonnull %0, i8 noundef zeroext 30, ptr noundef %2333, i32 noundef %2332)
  %2383 = load ptr, ptr %2373, align 8, !tbaa !112
  %2384 = icmp eq ptr %2383, %2375
  br i1 %2384, label %2420, label %2385

2385:                                             ; preds = %2382
  %2386 = load volatile i64, ptr %6, align 8, !tbaa !9
  %2387 = and i64 %2386, 262144
  %2388 = icmp eq i64 %2387, 0
  br i1 %2388, label %2389, label %2391

2389:                                             ; preds = %2385
  %2390 = ptrtoint ptr %2333 to i64
  br label %2401

2391:                                             ; preds = %2385
  %2392 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2393 = load ptr, ptr %2392, align 8, !tbaa !131
  %2394 = ptrtoint ptr %2333 to i64
  %2395 = ptrtoint ptr %2393 to i64
  %2396 = sub i64 %2394, %2395
  %2397 = lshr exact i64 %2396, 2
  %2398 = trunc i64 %2397 to i32
  %2399 = icmp ne i32 %2330, 0
  %2400 = zext i1 %2399 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 10503, i32 noundef %2398, i32 noundef %2400) #15
  br label %2401

2401:                                             ; preds = %2389, %2391
  %2402 = phi i64 [ %2390, %2389 ], [ %2394, %2391 ]
  %2403 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2404 = load ptr, ptr %2403, align 8, !tbaa !131
  %2405 = ptrtoint ptr %2404 to i64
  %2406 = sub i64 %2402, %2405
  %2407 = icmp slt i64 %2406, 0
  br i1 %2407, label %2408, label %2411

2408:                                             ; preds = %2401
  %2409 = lshr exact i64 %2406, 2
  %2410 = trunc i64 %2409 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %2410) #15
  br label %2420

2411:                                             ; preds = %2401
  %2412 = icmp ne i32 %2330, 0
  %2413 = zext i1 %2412 to i32
  %2414 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %2415 = load ptr, ptr %2414, align 8, !tbaa !130
  %2416 = getelementptr inbounds %struct.regexp_internal, ptr %2415, i64 0, i32 1
  %2417 = load ptr, ptr %2416, align 8, !tbaa !17
  %2418 = lshr exact i64 %2406, 1
  %2419 = getelementptr inbounds i32, ptr %2417, i64 %2418
  store i32 %2413, ptr %2419, align 4, !tbaa !73
  br label %2420

2420:                                             ; preds = %2382, %2411, %2408
  %2421 = load ptr, ptr %2373, align 8, !tbaa !112
  %2422 = icmp eq ptr %2421, %2375
  br i1 %2422, label %2467, label %2423

2423:                                             ; preds = %2420
  %2424 = load volatile i64, ptr %6, align 8, !tbaa !9
  %2425 = and i64 %2424, 262144
  %2426 = icmp eq i64 %2425, 0
  br i1 %2426, label %2427, label %2429

2427:                                             ; preds = %2423
  %2428 = ptrtoint ptr %2333 to i64
  br label %2443

2429:                                             ; preds = %2423
  %2430 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2431 = load ptr, ptr %2430, align 8, !tbaa !131
  %2432 = ptrtoint ptr %2333 to i64
  %2433 = ptrtoint ptr %2431 to i64
  %2434 = sub i64 %2432, %2433
  %2435 = lshr exact i64 %2434, 2
  %2436 = trunc i64 %2435 to i32
  %2437 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %2438 = load ptr, ptr %2437, align 8, !tbaa !106
  %2439 = ptrtoint ptr %2331 to i64
  %2440 = ptrtoint ptr %2438 to i64
  %2441 = sub i64 %2439, %2440
  %2442 = trunc i64 %2441 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 10504, i32 noundef %2436, i32 noundef %2442) #15
  br label %2443

2443:                                             ; preds = %2427, %2429
  %2444 = phi i64 [ %2428, %2427 ], [ %2432, %2429 ]
  %2445 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2446 = load ptr, ptr %2445, align 8, !tbaa !131
  %2447 = ptrtoint ptr %2446 to i64
  %2448 = sub i64 %2444, %2447
  %2449 = icmp slt i64 %2448, 0
  br i1 %2449, label %2450, label %2453

2450:                                             ; preds = %2443
  %2451 = lshr exact i64 %2448, 2
  %2452 = trunc i64 %2451 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %2452) #15
  br label %2467

2453:                                             ; preds = %2443
  %2454 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %2455 = load ptr, ptr %2454, align 8, !tbaa !106
  %2456 = ptrtoint ptr %2331 to i64
  %2457 = ptrtoint ptr %2455 to i64
  %2458 = sub i64 %2456, %2457
  %2459 = trunc i64 %2458 to i32
  %2460 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %2461 = load ptr, ptr %2460, align 8, !tbaa !130
  %2462 = getelementptr inbounds %struct.regexp_internal, ptr %2461, i64 0, i32 1
  %2463 = load ptr, ptr %2462, align 8, !tbaa !17
  %2464 = lshr exact i64 %2448, 1
  %2465 = add nsw i64 %2464, -1
  %2466 = getelementptr inbounds i32, ptr %2463, i64 %2465
  store i32 %2459, ptr %2466, align 4, !tbaa !73
  br label %2467

2467:                                             ; preds = %2420, %2453, %2450, %2381
  %2468 = load ptr, ptr %2373, align 8, !tbaa !112
  %2469 = icmp eq ptr %2468, %2375
  br i1 %2469, label %2470, label %2481

2470:                                             ; preds = %2467
  %2471 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 20
  %2472 = load i32, ptr %2471, align 8, !tbaa !102
  %2473 = add nsw i32 %2472, 1
  store i32 %2473, ptr %2471, align 8, !tbaa !102
  br label %2481

2474:                                             ; preds = %2368
  %2475 = icmp eq i32 %2330, 58
  br i1 %2475, label %2476, label %2481

2476:                                             ; preds = %2474
  %2477 = load i32, ptr %5, align 4, !tbaa !73
  %2478 = and i32 %2477, 2
  %2479 = load i32, ptr %2, align 4, !tbaa !73
  %2480 = or i32 %2479, %2478
  store i32 %2480, ptr %2, align 4, !tbaa !73
  br label %2481

2481:                                             ; preds = %2474, %2476, %2467, %2470
  br i1 %2327, label %2483, label %2482

2482:                                             ; preds = %2481
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %2329, ptr noundef %2333, i32 noundef %2332)
  br label %2486

2483:                                             ; preds = %2481
  %2484 = icmp eq i32 %2330, 63
  %2485 = select i1 %2484, ptr %2329, ptr %2333
  br label %2486

2486:                                             ; preds = %2483, %2482
  %2487 = phi ptr [ %2329, %2482 ], [ %2485, %2483 ]
  %2488 = load i32, ptr %5, align 4, !tbaa !73
  %2489 = and i32 %2488, 13
  %2490 = load i32, ptr %2, align 4, !tbaa !73
  %2491 = or i32 %2490, %2489
  store i32 %2491, ptr %2, align 4, !tbaa !73
  %2492 = load ptr, ptr %13, align 8, !tbaa !105
  %2493 = load i8, ptr %2492, align 1, !tbaa !17
  %2494 = icmp eq i8 %2493, 124
  br i1 %2494, label %2495, label %2582

2495:                                             ; preds = %2486
  %2496 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2497 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2498 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 20
  %2499 = icmp eq i32 %2326, 0
  %2500 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %2501 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %2502 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2503 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %2504 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  br label %2505

2505:                                             ; preds = %2495, %2574
  %2506 = phi ptr [ %2333, %2495 ], [ %2544, %2574 ]
  %2507 = phi ptr [ null, %2495 ], [ %2537, %2574 ]
  %2508 = phi i32 [ %2326, %2495 ], [ %2543, %2574 ]
  %2509 = load ptr, ptr %2496, align 8, !tbaa !112
  %2510 = icmp eq ptr %2509, %2497
  %2511 = load i32, ptr %2498, align 8, !tbaa !102
  br i1 %2510, label %2532, label %2512

2512:                                             ; preds = %2505
  %2513 = icmp eq i32 %2511, 0
  br i1 %2513, label %2526, label %2514

2514:                                             ; preds = %2512
  %2515 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 61, i64 noundef 1, ptr noundef nonnull @.str.452)
  %2516 = load ptr, ptr %2496, align 8, !tbaa !112
  %2517 = icmp eq ptr %2516, %2497
  br i1 %2517, label %2523, label %2518

2518:                                             ; preds = %2514
  %2519 = getelementptr inbounds %struct.regnode_1, ptr %2515, i64 0, i32 3
  store i32 0, ptr %2519, align 4, !tbaa !148
  %2520 = getelementptr inbounds %struct.regnode, ptr %2515, i64 0, i32 1
  store i8 61, ptr %2520, align 1, !tbaa !141
  %2521 = getelementptr inbounds %struct.regnode, ptr %2515, i64 0, i32 2
  store i16 0, ptr %2521, align 2, !tbaa !222
  %2522 = getelementptr inbounds %struct.regnode, ptr %2515, i64 2
  store ptr %2522, ptr %2496, align 8, !tbaa !112
  br label %2523

2523:                                             ; preds = %2514, %2518
  %2524 = getelementptr inbounds %struct.regnode, ptr %2506, i64 2
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef nonnull %2524, ptr noundef %2515, i32 noundef %2332)
  %2525 = load ptr, ptr %2496, align 8, !tbaa !112
  br label %2526

2526:                                             ; preds = %2523, %2512
  %2527 = phi ptr [ %2525, %2523 ], [ %2509, %2512 ]
  %2528 = phi ptr [ %2515, %2523 ], [ %2507, %2512 ]
  %2529 = icmp eq ptr %2527, %2497
  br i1 %2529, label %2530, label %2536

2530:                                             ; preds = %2526
  %2531 = load i32, ptr %2498, align 8, !tbaa !102
  br label %2532

2532:                                             ; preds = %2530, %2505
  %2533 = phi i32 [ %2531, %2530 ], [ %2511, %2505 ]
  %2534 = phi ptr [ %2528, %2530 ], [ %2507, %2505 ]
  %2535 = add nsw i32 %2533, 2
  store i32 %2535, ptr %2498, align 8, !tbaa !102
  br label %2536

2536:                                             ; preds = %2532, %2526
  %2537 = phi ptr [ %2534, %2532 ], [ %2528, %2526 ]
  %2538 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br i1 %2499, label %2542, label %2539

2539:                                             ; preds = %2536
  %2540 = load i32, ptr %2500, align 8, !tbaa !109
  %2541 = call i32 @llvm.smax.i32(i32 %2540, i32 %2508)
  store i32 %2326, ptr %2500, align 8, !tbaa !109
  br label %2542

2542:                                             ; preds = %2539, %2536
  %2543 = phi i32 [ %2541, %2539 ], [ %2508, %2536 ]
  %2544 = call fastcc ptr @S_regbranch(ptr noundef nonnull %0, ptr noundef nonnull %5, i32 noundef 0, i32 noundef %2332)
  %2545 = icmp eq ptr %2544, null
  br i1 %2545, label %2547, label %2546

2546:                                             ; preds = %2542
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %2506, ptr noundef nonnull %2544, i32 noundef %2332)
  br label %2574

2547:                                             ; preds = %2542
  %2548 = load i32, ptr %5, align 4, !tbaa !73
  %2549 = and i32 %2548, 32
  %2550 = icmp eq i32 %2549, 0
  br i1 %2550, label %2552, label %2551

2551:                                             ; preds = %2547
  store i32 32, ptr %2, align 4, !tbaa !73
  br label %3305

2552:                                             ; preds = %2547
  %2553 = load ptr, ptr %2501, align 8, !tbaa !107
  %2554 = load ptr, ptr %2502, align 8, !tbaa !65
  %2555 = ptrtoint ptr %2553 to i64
  %2556 = ptrtoint ptr %2554 to i64
  %2557 = sub i64 %2555, %2556
  %2558 = load ptr, ptr %2496, align 8, !tbaa !112
  %2559 = icmp eq ptr %2558, %2497
  br i1 %2559, label %2564, label %2560

2560:                                             ; preds = %2552
  %2561 = load ptr, ptr %2503, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %2561, i32 noundef 11) #15
  %2562 = load i32, ptr %5, align 4, !tbaa !73
  %2563 = load ptr, ptr %2502, align 8, !tbaa !65
  br label %2564

2564:                                             ; preds = %2560, %2552
  %2565 = phi ptr [ %2563, %2560 ], [ %2554, %2552 ]
  %2566 = phi i32 [ %2562, %2560 ], [ %2548, %2552 ]
  %2567 = icmp sgt i64 %2557, 127
  %2568 = select i1 %2567, ptr @.str.20, ptr @.str.8
  %2569 = select i1 %2567, i64 117, i64 %2557
  %2570 = sext i32 %2566 to i64
  %2571 = load i32, ptr %2504, align 8, !tbaa !50
  %2572 = icmp ne i32 %2571, 0
  %2573 = zext i1 %2572 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.433, i64 noundef %2570, i32 noundef %2573, i64 noundef %2569, ptr noundef %2565, ptr noundef nonnull %2568) #15
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %2506, ptr noundef null, i32 noundef %2332)
  br label %2574

2574:                                             ; preds = %2546, %2564
  %2575 = load i32, ptr %5, align 4, !tbaa !73
  %2576 = and i32 %2575, 13
  %2577 = load i32, ptr %2, align 4, !tbaa !73
  %2578 = or i32 %2577, %2576
  store i32 %2578, ptr %2, align 4, !tbaa !73
  %2579 = load ptr, ptr %13, align 8, !tbaa !105
  %2580 = load i8, ptr %2579, align 1, !tbaa !17
  %2581 = icmp eq i8 %2580, 124
  br i1 %2581, label %2505, label %2582, !llvm.loop !224

2582:                                             ; preds = %2574, %2486
  %2583 = phi i32 [ %2491, %2486 ], [ %2578, %2574 ]
  %2584 = phi i32 [ %2326, %2486 ], [ %2543, %2574 ]
  %2585 = phi ptr [ null, %2486 ], [ %2537, %2574 ]
  %2586 = phi ptr [ %2333, %2486 ], [ %2544, %2574 ]
  %2587 = icmp ne i32 %2330, 58
  %2588 = or i1 %2587, %2371
  br i1 %2588, label %2589, label %3079

2589:                                             ; preds = %2582
  switch i32 %2330, label %2758 [
    i32 58, label %2590
    i32 1, label %2600
    i32 2, label %2600
    i32 60, label %2729
    i32 44, label %2729
    i32 61, label %2729
    i32 33, label %2729
    i32 62, label %2731
    i32 0, label %2741
  ]

2590:                                             ; preds = %2589
  %2591 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 41, i64 noundef 0, ptr noundef nonnull @.str.460)
  %2592 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2593 = load ptr, ptr %2592, align 8, !tbaa !112
  %2594 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2595 = icmp eq ptr %2593, %2594
  br i1 %2595, label %2758, label %2596

2596:                                             ; preds = %2590
  %2597 = getelementptr inbounds %struct.regnode, ptr %2591, i64 0, i32 1
  store i8 41, ptr %2597, align 1, !tbaa !141
  %2598 = getelementptr inbounds %struct.regnode, ptr %2591, i64 0, i32 2
  store i16 0, ptr %2598, align 2, !tbaa !222
  %2599 = getelementptr inbounds %struct.regnode, ptr %2591, i64 1
  store ptr %2599, ptr %2592, align 8, !tbaa !112
  br label %2758

2600:                                             ; preds = %2589, %2589
  %2601 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 50, i64 noundef 1, ptr noundef nonnull @.str.452)
  %2602 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2603 = load ptr, ptr %2602, align 8, !tbaa !112
  %2604 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2605 = icmp eq ptr %2603, %2604
  br i1 %2605, label %2644, label %2606

2606:                                             ; preds = %2600
  %2607 = getelementptr inbounds %struct.regnode_1, ptr %2601, i64 0, i32 3
  store i32 %2328, ptr %2607, align 4, !tbaa !148
  %2608 = getelementptr inbounds %struct.regnode, ptr %2601, i64 0, i32 1
  store i8 50, ptr %2608, align 1, !tbaa !141
  %2609 = getelementptr inbounds %struct.regnode, ptr %2601, i64 0, i32 2
  store i16 0, ptr %2609, align 2, !tbaa !222
  %2610 = getelementptr inbounds %struct.regnode, ptr %2601, i64 2
  store ptr %2610, ptr %2602, align 8, !tbaa !112
  %2611 = icmp eq ptr %2610, %2604
  br i1 %2611, label %2644, label %2612

2612:                                             ; preds = %2606
  %2613 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %2614 = load i32, ptr %2613, align 8, !tbaa !98
  %2615 = and i32 %2614, 32
  %2616 = icmp eq i32 %2615, 0
  br i1 %2616, label %2644, label %2617

2617:                                             ; preds = %2612
  %2618 = load volatile i64, ptr %6, align 8, !tbaa !9
  %2619 = and i64 %2618, 1048578
  %2620 = icmp eq i64 %2619, 1048578
  br i1 %2620, label %2621, label %2634

2621:                                             ; preds = %2617
  %2622 = call ptr @Perl_PerlIO_stderr() #15
  %2623 = shl i32 %3, 1
  %2624 = or i32 %2623, 1
  %2625 = sext i32 %2328 to i64
  %2626 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2627 = load ptr, ptr %2626, align 8, !tbaa !131
  %2628 = ptrtoint ptr %2601 to i64
  %2629 = ptrtoint ptr %2627 to i64
  %2630 = sub i64 %2628, %2629
  %2631 = lshr exact i64 %2630, 2
  %2632 = trunc i64 %2631 to i32
  %2633 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2622, ptr noundef nonnull @.str.440, i32 noundef 22, ptr noundef nonnull @.str.424, i32 noundef %2624, ptr noundef nonnull @.str.8, i64 noundef %2625, i32 noundef %2632) #15
  br label %2634

2634:                                             ; preds = %2621, %2617
  %2635 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 23
  %2636 = load ptr, ptr %2635, align 8, !tbaa !128
  %2637 = add nsw i32 %2328, -1
  %2638 = sext i32 %2637 to i64
  %2639 = getelementptr inbounds ptr, ptr %2636, i64 %2638
  store ptr %2601, ptr %2639, align 8, !tbaa !5
  %2640 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 19
  %2641 = load i32, ptr %2640, align 4, !tbaa !110
  %2642 = icmp eq i32 %2641, %2328
  br i1 %2642, label %2643, label %2644

2643:                                             ; preds = %2634
  store i32 0, ptr %2640, align 4, !tbaa !110
  br label %2644

2644:                                             ; preds = %2600, %2606, %2612, %2643, %2634
  %2645 = load ptr, ptr %2602, align 8, !tbaa !112
  %2646 = icmp eq ptr %2645, %2604
  br i1 %2646, label %2695, label %2647

2647:                                             ; preds = %2644
  %2648 = load volatile i64, ptr %6, align 8, !tbaa !9
  %2649 = and i64 %2648, 262144
  %2650 = icmp eq i64 %2649, 0
  br i1 %2650, label %2651, label %2653

2651:                                             ; preds = %2647
  %2652 = ptrtoint ptr %2601 to i64
  br label %2669

2653:                                             ; preds = %2647
  %2654 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2655 = load ptr, ptr %2654, align 8, !tbaa !131
  %2656 = ptrtoint ptr %2601 to i64
  %2657 = ptrtoint ptr %2655 to i64
  %2658 = sub i64 %2656, %2657
  %2659 = lshr exact i64 %2658, 2
  %2660 = trunc i64 %2659 to i32
  %2661 = load ptr, ptr %13, align 8, !tbaa !105
  %2662 = getelementptr inbounds i8, ptr %2661, i64 1
  %2663 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %2664 = load ptr, ptr %2663, align 8, !tbaa !106
  %2665 = ptrtoint ptr %2662 to i64
  %2666 = ptrtoint ptr %2664 to i64
  %2667 = sub i64 %2665, %2666
  %2668 = trunc i64 %2667 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 10565, i32 noundef %2660, i32 noundef %2668) #15
  br label %2669

2669:                                             ; preds = %2651, %2653
  %2670 = phi i64 [ %2652, %2651 ], [ %2656, %2653 ]
  %2671 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2672 = load ptr, ptr %2671, align 8, !tbaa !131
  %2673 = ptrtoint ptr %2672 to i64
  %2674 = sub i64 %2670, %2673
  %2675 = icmp slt i64 %2674, 0
  br i1 %2675, label %2676, label %2679

2676:                                             ; preds = %2669
  %2677 = lshr exact i64 %2674, 2
  %2678 = trunc i64 %2677 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %2678) #15
  br label %2695

2679:                                             ; preds = %2669
  %2680 = load ptr, ptr %13, align 8, !tbaa !105
  %2681 = getelementptr inbounds i8, ptr %2680, i64 1
  %2682 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %2683 = load ptr, ptr %2682, align 8, !tbaa !106
  %2684 = ptrtoint ptr %2681 to i64
  %2685 = ptrtoint ptr %2683 to i64
  %2686 = sub i64 %2684, %2685
  %2687 = trunc i64 %2686 to i32
  %2688 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %2689 = load ptr, ptr %2688, align 8, !tbaa !130
  %2690 = getelementptr inbounds %struct.regexp_internal, ptr %2689, i64 0, i32 1
  %2691 = load ptr, ptr %2690, align 8, !tbaa !17
  %2692 = lshr exact i64 %2674, 1
  %2693 = add nsw i64 %2692, -1
  %2694 = getelementptr inbounds i32, ptr %2691, i64 %2693
  store i32 %2687, ptr %2694, align 4, !tbaa !73
  br label %2695

2695:                                             ; preds = %2644, %2679, %2676
  %2696 = load ptr, ptr %2602, align 8, !tbaa !112
  %2697 = icmp eq ptr %2696, %2604
  br i1 %2697, label %2758, label %2698

2698:                                             ; preds = %2695
  %2699 = load volatile i64, ptr %6, align 8, !tbaa !9
  %2700 = and i64 %2699, 262144
  %2701 = icmp eq i64 %2700, 0
  br i1 %2701, label %2702, label %2704

2702:                                             ; preds = %2698
  %2703 = ptrtoint ptr %2601 to i64
  br label %2712

2704:                                             ; preds = %2698
  %2705 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2706 = load ptr, ptr %2705, align 8, !tbaa !131
  %2707 = ptrtoint ptr %2601 to i64
  %2708 = ptrtoint ptr %2706 to i64
  %2709 = sub i64 %2707, %2708
  %2710 = lshr exact i64 %2709, 2
  %2711 = trunc i64 %2710 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 10566, i32 noundef %2711, i32 noundef 1) #15
  br label %2712

2712:                                             ; preds = %2702, %2704
  %2713 = phi i64 [ %2703, %2702 ], [ %2707, %2704 ]
  %2714 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2715 = load ptr, ptr %2714, align 8, !tbaa !131
  %2716 = ptrtoint ptr %2715 to i64
  %2717 = sub i64 %2713, %2716
  %2718 = icmp slt i64 %2717, 0
  br i1 %2718, label %2719, label %2722

2719:                                             ; preds = %2712
  %2720 = lshr exact i64 %2717, 2
  %2721 = trunc i64 %2720 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %2721) #15
  br label %2758

2722:                                             ; preds = %2712
  %2723 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %2724 = load ptr, ptr %2723, align 8, !tbaa !130
  %2725 = getelementptr inbounds %struct.regexp_internal, ptr %2724, i64 0, i32 1
  %2726 = load ptr, ptr %2725, align 8, !tbaa !17
  %2727 = lshr exact i64 %2717, 1
  %2728 = getelementptr inbounds i32, ptr %2726, i64 %2727
  store i32 1, ptr %2728, align 4, !tbaa !73
  br label %2758

2729:                                             ; preds = %2589, %2589, %2589, %2589
  %2730 = and i32 %2583, -2
  store i32 %2730, ptr %2, align 4, !tbaa !73
  br label %2731

2731:                                             ; preds = %2729, %2589
  %2732 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 1, i64 noundef 0, ptr noundef nonnull @.str.460)
  %2733 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2734 = load ptr, ptr %2733, align 8, !tbaa !112
  %2735 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2736 = icmp eq ptr %2734, %2735
  br i1 %2736, label %2758, label %2737

2737:                                             ; preds = %2731
  %2738 = getelementptr inbounds %struct.regnode, ptr %2732, i64 0, i32 1
  store i8 1, ptr %2738, align 1, !tbaa !141
  %2739 = getelementptr inbounds %struct.regnode, ptr %2732, i64 0, i32 2
  store i16 0, ptr %2739, align 2, !tbaa !222
  %2740 = getelementptr inbounds %struct.regnode, ptr %2732, i64 1
  store ptr %2740, ptr %2733, align 8, !tbaa !112
  br label %2758

2741:                                             ; preds = %2589
  %2742 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 0, i64 noundef 0, ptr noundef nonnull @.str.460)
  %2743 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2744 = load ptr, ptr %2743, align 8, !tbaa !112
  %2745 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2746 = icmp eq ptr %2744, %2745
  br i1 %2746, label %2758, label %2747

2747:                                             ; preds = %2741
  %2748 = getelementptr inbounds %struct.regnode, ptr %2742, i64 0, i32 1
  store i8 0, ptr %2748, align 1, !tbaa !141
  %2749 = getelementptr inbounds %struct.regnode, ptr %2742, i64 0, i32 2
  store i16 0, ptr %2749, align 2, !tbaa !222
  %2750 = getelementptr inbounds %struct.regnode, ptr %2742, i64 1
  store ptr %2750, ptr %2743, align 8, !tbaa !112
  %2751 = icmp eq ptr %2750, %2745
  br i1 %2751, label %2758, label %2752

2752:                                             ; preds = %2747
  %2753 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 24
  %2754 = load ptr, ptr %2753, align 8, !tbaa !225
  %2755 = icmp eq ptr %2754, null
  br i1 %2755, label %2757, label %2756

2756:                                             ; preds = %2752
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.441, i32 noundef 10580) #15
  br label %2757

2757:                                             ; preds = %2752, %2756
  store ptr %2742, ptr %2753, align 8, !tbaa !225
  br label %2758

2758:                                             ; preds = %2741, %2737, %2731, %2596, %2590, %2589, %2719, %2722, %2695, %2757, %2747
  %2759 = phi ptr [ %2585, %2589 ], [ %2742, %2747 ], [ %2742, %2757 ], [ %2601, %2695 ], [ %2601, %2719 ], [ %2601, %2722 ], [ %2591, %2590 ], [ %2591, %2596 ], [ %2732, %2731 ], [ %2732, %2737 ], [ %2742, %2741 ]
  %2760 = load volatile i64, ptr %6, align 8, !tbaa !9
  %2761 = and i64 %2760, 1
  %2762 = icmp eq i64 %2761, 0
  br i1 %2762, label %2886, label %2763

2763:                                             ; preds = %2758
  %2764 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2765 = load ptr, ptr %2764, align 8, !tbaa !112
  %2766 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2767 = icmp eq ptr %2765, %2766
  br i1 %2767, label %2886, label %2768

2768:                                             ; preds = %2763
  %2769 = load volatile i64, ptr %6, align 8, !tbaa !9
  %2770 = and i64 %2769, 1
  %2771 = icmp eq i64 %2770, 0
  br i1 %2771, label %2824, label %2772

2772:                                             ; preds = %2768
  %2773 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 47
  %2774 = load ptr, ptr %2773, align 8, !tbaa !119
  %2775 = load ptr, ptr %13, align 8, !tbaa !105
  %2776 = icmp eq ptr %2774, %2775
  %2777 = call ptr @Perl_PerlIO_stderr() #15
  br i1 %2776, label %2789, label %2778

2778:                                             ; preds = %2772
  %2779 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 51
  %2780 = load ptr, ptr %2779, align 8, !tbaa !56
  %2781 = load ptr, ptr %13, align 8, !tbaa !105
  %2782 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %2783 = load ptr, ptr %2782, align 8, !tbaa !107
  %2784 = ptrtoint ptr %2783 to i64
  %2785 = ptrtoint ptr %2781 to i64
  %2786 = sub i64 %2784, %2785
  %2787 = call ptr @Perl_pv_pretty(ptr noundef %2780, ptr noundef %2781, i64 noundef %2786, i64 noundef 16, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.8, i32 noundef 33294) #15
  %2788 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2777, ptr noundef nonnull @.str.34, ptr noundef %2787) #15
  br label %2791

2789:                                             ; preds = %2772
  %2790 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2777, ptr noundef nonnull @.str.385, ptr noundef nonnull @.str.8) #15
  br label %2791

2791:                                             ; preds = %2789, %2778
  %2792 = load ptr, ptr %2764, align 8, !tbaa !112
  %2793 = icmp eq ptr %2792, %2766
  br i1 %2793, label %2794, label %2799

2794:                                             ; preds = %2791
  %2795 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %2796 = load i64, ptr %2795, align 8, !tbaa !111
  %2797 = trunc i64 %2796 to i32
  %2798 = add i32 %2797, 1
  br label %2809

2799:                                             ; preds = %2791
  %2800 = icmp eq ptr %2792, null
  br i1 %2800, label %2809, label %2801

2801:                                             ; preds = %2799
  %2802 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2803 = load ptr, ptr %2802, align 8, !tbaa !131
  %2804 = ptrtoint ptr %2792 to i64
  %2805 = ptrtoint ptr %2803 to i64
  %2806 = sub i64 %2804, %2805
  %2807 = lshr exact i64 %2806, 2
  %2808 = trunc i64 %2807 to i32
  br label %2809

2809:                                             ; preds = %2801, %2799, %2794
  %2810 = phi i32 [ %2798, %2794 ], [ %2808, %2801 ], [ -1, %2799 ]
  %2811 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 48
  %2812 = load i32, ptr %2811, align 8, !tbaa !118
  %2813 = icmp eq i32 %2812, %2810
  %2814 = call ptr @Perl_PerlIO_stderr() #15
  br i1 %2813, label %2817, label %2815

2815:                                             ; preds = %2809
  %2816 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2814, ptr noundef nonnull @.str.386, i32 noundef %2810) #15
  br label %2819

2817:                                             ; preds = %2809
  %2818 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2814, ptr noundef nonnull @.str.387, ptr noundef nonnull @.str.8) #15
  br label %2819

2819:                                             ; preds = %2817, %2815
  %2820 = call ptr @Perl_PerlIO_stderr() #15
  %2821 = shl i32 %3, 1
  %2822 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2820, ptr noundef nonnull @.str.388, i32 noundef %2821, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.442) #15
  store i32 %2810, ptr %2811, align 8, !tbaa !118
  %2823 = load ptr, ptr %13, align 8, !tbaa !105
  store ptr %2823, ptr %2773, align 8, !tbaa !119
  br label %2824

2824:                                             ; preds = %2819, %2768
  %2825 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 4
  %2826 = load ptr, ptr %2825, align 8, !tbaa !129
  %2827 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 51
  %2828 = load ptr, ptr %2827, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %2826, ptr noundef %2828, ptr noundef %2586, ptr noundef null, ptr noundef nonnull %0)
  %2829 = load ptr, ptr %2825, align 8, !tbaa !129
  %2830 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 52
  %2831 = load ptr, ptr %2830, align 8, !tbaa !57
  call void @my_regprop(ptr noundef %2829, ptr noundef %2831, ptr noundef %2759, ptr noundef null, ptr noundef nonnull %0)
  %2832 = call ptr @Perl_PerlIO_stderr() #15
  %2833 = load ptr, ptr %2827, align 8, !tbaa !56
  %2834 = getelementptr inbounds %struct.sv, ptr %2833, i64 0, i32 2
  %2835 = load i32, ptr %2834, align 4, !tbaa !13
  %2836 = and i32 %2835, 2098176
  %2837 = icmp eq i32 %2836, 1024
  br i1 %2837, label %2838, label %2841

2838:                                             ; preds = %2824
  %2839 = getelementptr inbounds %struct.sv, ptr %2833, i64 0, i32 3
  %2840 = load ptr, ptr %2839, align 8, !tbaa !17
  br label %2843

2841:                                             ; preds = %2824
  %2842 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %2833, ptr noundef null, i32 noundef 34) #15
  br label %2843

2843:                                             ; preds = %2841, %2838
  %2844 = phi ptr [ %2840, %2838 ], [ %2842, %2841 ]
  %2845 = icmp eq ptr %2586, null
  br i1 %2845, label %2853, label %2846

2846:                                             ; preds = %2843
  %2847 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2848 = load ptr, ptr %2847, align 8, !tbaa !131
  %2849 = ptrtoint ptr %2586 to i64
  %2850 = ptrtoint ptr %2848 to i64
  %2851 = sub i64 %2849, %2850
  %2852 = ashr exact i64 %2851, 2
  br label %2853

2853:                                             ; preds = %2843, %2846
  %2854 = phi i64 [ %2852, %2846 ], [ -1, %2843 ]
  %2855 = shl i64 %2854, 32
  %2856 = ashr exact i64 %2855, 32
  %2857 = load ptr, ptr %2830, align 8, !tbaa !57
  %2858 = getelementptr inbounds %struct.sv, ptr %2857, i64 0, i32 2
  %2859 = load i32, ptr %2858, align 4, !tbaa !13
  %2860 = and i32 %2859, 2098176
  %2861 = icmp eq i32 %2860, 1024
  br i1 %2861, label %2862, label %2865

2862:                                             ; preds = %2853
  %2863 = getelementptr inbounds %struct.sv, ptr %2857, i64 0, i32 3
  %2864 = load ptr, ptr %2863, align 8, !tbaa !17
  br label %2867

2865:                                             ; preds = %2853
  %2866 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %2857, ptr noundef null, i32 noundef 34) #15
  br label %2867

2867:                                             ; preds = %2865, %2862
  %2868 = phi ptr [ %2864, %2862 ], [ %2866, %2865 ]
  %2869 = icmp eq ptr %2759, null
  br i1 %2869, label %2877, label %2870

2870:                                             ; preds = %2867
  %2871 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2872 = load ptr, ptr %2871, align 8, !tbaa !131
  %2873 = ptrtoint ptr %2759 to i64
  %2874 = ptrtoint ptr %2872 to i64
  %2875 = sub i64 %2873, %2874
  %2876 = ashr exact i64 %2875, 2
  br label %2877

2877:                                             ; preds = %2867, %2870
  %2878 = phi i64 [ %2873, %2870 ], [ 0, %2867 ]
  %2879 = phi i64 [ %2876, %2870 ], [ -1, %2867 ]
  %2880 = shl i64 %2879, 32
  %2881 = ashr exact i64 %2880, 32
  %2882 = ptrtoint ptr %2586 to i64
  %2883 = sub i64 %2878, %2882
  %2884 = ashr exact i64 %2883, 2
  %2885 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2832, ptr noundef nonnull @.str.443, ptr noundef %2844, i64 noundef %2856, ptr noundef %2868, i64 noundef %2881, i64 noundef %2884) #15
  br label %2886

2886:                                             ; preds = %2763, %2877, %2758
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %2586, ptr noundef %2759, i32 noundef %2332)
  br i1 %2371, label %2887, label %3077

2887:                                             ; preds = %2886
  %2888 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %2889 = load ptr, ptr %2888, align 8, !tbaa !112
  %2890 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %2891 = icmp eq ptr %2889, %2890
  br i1 %2891, label %3077, label %2892

2892:                                             ; preds = %2887
  %2893 = icmp eq i32 %3, 1
  br i1 %2893, label %2894, label %2898

2894:                                             ; preds = %2892
  %2895 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %2896 = load i32, ptr %2895, align 8, !tbaa !98
  %2897 = or i32 %2896, 64
  store i32 %2897, ptr %2895, align 8, !tbaa !98
  br label %2898

2898:                                             ; preds = %2894, %2892
  %2899 = icmp eq ptr %2487, null
  br i1 %2899, label %2925, label %2900

2900:                                             ; preds = %2898, %2919
  %2901 = phi ptr [ %2921, %2919 ], [ %2487, %2898 ]
  %2902 = phi i8 [ %2920, %2919 ], [ 1, %2898 ]
  %2903 = getelementptr inbounds %struct.regnode, ptr %2901, i64 0, i32 1
  %2904 = load i8, ptr %2903, align 1, !tbaa !141
  %2905 = zext i8 %2904 to i64
  %2906 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %2905
  %2907 = load i8, ptr %2906, align 1, !tbaa !17
  switch i8 %2907, label %2919 [
    i8 30, label %2908
    i8 62, label %2917
  ]

2908:                                             ; preds = %2900
  %2909 = getelementptr inbounds %struct.regnode, ptr %2901, i64 1
  call fastcc void @S_regtail_study(ptr noundef nonnull %0, ptr noundef nonnull %2909, ptr noundef %2759, i32 noundef %2332)
  %2910 = getelementptr inbounds %struct.regnode, ptr %2901, i64 1, i32 1
  %2911 = load i8, ptr %2910, align 1, !tbaa !141
  %2912 = icmp eq i8 %2911, 40
  br i1 %2912, label %2913, label %2916

2913:                                             ; preds = %2908
  %2914 = call ptr @Perl_regnext(ptr noundef nonnull %2909) #15
  %2915 = icmp eq ptr %2914, %2759
  br i1 %2915, label %2919, label %2916

2916:                                             ; preds = %2913, %2908
  br label %2919

2917:                                             ; preds = %2900
  %2918 = getelementptr inbounds %struct.regnode, ptr %2901, i64 2
  call fastcc void @S_regtail_study(ptr noundef nonnull %0, ptr noundef nonnull %2918, ptr noundef %2759, i32 noundef %2332)
  br label %2919

2919:                                             ; preds = %2900, %2917, %2913, %2916
  %2920 = phi i8 [ 0, %2916 ], [ %2902, %2913 ], [ 0, %2917 ], [ %2902, %2900 ]
  %2921 = call ptr @Perl_regnext(ptr noundef nonnull %2901) #15
  %2922 = icmp eq ptr %2921, null
  br i1 %2922, label %2923, label %2900, !llvm.loop !226

2923:                                             ; preds = %2919
  %2924 = icmp eq i8 %2920, 0
  br i1 %2924, label %3077, label %2925

2925:                                             ; preds = %2898, %2923
  %2926 = getelementptr inbounds %struct.regnode, ptr %2487, i64 0, i32 1
  %2927 = load i8, ptr %2926, align 1, !tbaa !141
  %2928 = zext i8 %2927 to i64
  %2929 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %2928
  %2930 = load i8, ptr %2929, align 1, !tbaa !17
  %2931 = icmp eq i8 %2930, 30
  br i1 %2931, label %2934, label %2932

2932:                                             ; preds = %2925
  %2933 = call ptr @Perl_regnext(ptr noundef nonnull %2487) #15
  br label %2934

2934:                                             ; preds = %2925, %2932
  %2935 = phi ptr [ %2933, %2932 ], [ %2487, %2925 ]
  %2936 = load volatile i64, ptr %6, align 8, !tbaa !9
  %2937 = and i64 %2936, 1
  %2938 = icmp eq i64 %2937, 0
  br i1 %2938, label %3053, label %2939

2939:                                             ; preds = %2934
  %2940 = load ptr, ptr %2888, align 8, !tbaa !112
  %2941 = icmp eq ptr %2940, %2890
  br i1 %2941, label %3053, label %2942

2942:                                             ; preds = %2939
  %2943 = load volatile i64, ptr %6, align 8, !tbaa !9
  %2944 = and i64 %2943, 1
  %2945 = icmp eq i64 %2944, 0
  br i1 %2945, label %2998, label %2946

2946:                                             ; preds = %2942
  %2947 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 47
  %2948 = load ptr, ptr %2947, align 8, !tbaa !119
  %2949 = load ptr, ptr %13, align 8, !tbaa !105
  %2950 = icmp eq ptr %2948, %2949
  %2951 = call ptr @Perl_PerlIO_stderr() #15
  br i1 %2950, label %2963, label %2952

2952:                                             ; preds = %2946
  %2953 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 51
  %2954 = load ptr, ptr %2953, align 8, !tbaa !56
  %2955 = load ptr, ptr %13, align 8, !tbaa !105
  %2956 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %2957 = load ptr, ptr %2956, align 8, !tbaa !107
  %2958 = ptrtoint ptr %2957 to i64
  %2959 = ptrtoint ptr %2955 to i64
  %2960 = sub i64 %2958, %2959
  %2961 = call ptr @Perl_pv_pretty(ptr noundef %2954, ptr noundef %2955, i64 noundef %2960, i64 noundef 16, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.8, i32 noundef 33294) #15
  %2962 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2951, ptr noundef nonnull @.str.34, ptr noundef %2961) #15
  br label %2965

2963:                                             ; preds = %2946
  %2964 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2951, ptr noundef nonnull @.str.385, ptr noundef nonnull @.str.8) #15
  br label %2965

2965:                                             ; preds = %2963, %2952
  %2966 = load ptr, ptr %2888, align 8, !tbaa !112
  %2967 = icmp eq ptr %2966, %2890
  br i1 %2967, label %2968, label %2973

2968:                                             ; preds = %2965
  %2969 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %2970 = load i64, ptr %2969, align 8, !tbaa !111
  %2971 = trunc i64 %2970 to i32
  %2972 = add i32 %2971, 1
  br label %2983

2973:                                             ; preds = %2965
  %2974 = icmp eq ptr %2966, null
  br i1 %2974, label %2983, label %2975

2975:                                             ; preds = %2973
  %2976 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2977 = load ptr, ptr %2976, align 8, !tbaa !131
  %2978 = ptrtoint ptr %2966 to i64
  %2979 = ptrtoint ptr %2977 to i64
  %2980 = sub i64 %2978, %2979
  %2981 = lshr exact i64 %2980, 2
  %2982 = trunc i64 %2981 to i32
  br label %2983

2983:                                             ; preds = %2975, %2973, %2968
  %2984 = phi i32 [ %2972, %2968 ], [ %2982, %2975 ], [ -1, %2973 ]
  %2985 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 48
  %2986 = load i32, ptr %2985, align 8, !tbaa !118
  %2987 = icmp eq i32 %2986, %2984
  %2988 = call ptr @Perl_PerlIO_stderr() #15
  br i1 %2987, label %2991, label %2989

2989:                                             ; preds = %2983
  %2990 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2988, ptr noundef nonnull @.str.386, i32 noundef %2984) #15
  br label %2993

2991:                                             ; preds = %2983
  %2992 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2988, ptr noundef nonnull @.str.387, ptr noundef nonnull @.str.8) #15
  br label %2993

2993:                                             ; preds = %2991, %2989
  %2994 = call ptr @Perl_PerlIO_stderr() #15
  %2995 = shl i32 %3, 1
  %2996 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2994, ptr noundef nonnull @.str.388, i32 noundef %2995, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.444) #15
  store i32 %2984, ptr %2985, align 8, !tbaa !118
  %2997 = load ptr, ptr %13, align 8, !tbaa !105
  store ptr %2997, ptr %2947, align 8, !tbaa !119
  br label %2998

2998:                                             ; preds = %2993, %2942
  %2999 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 4
  %3000 = load ptr, ptr %2999, align 8, !tbaa !129
  %3001 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 51
  %3002 = load ptr, ptr %3001, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %3000, ptr noundef %3002, ptr noundef nonnull %2487, ptr noundef null, ptr noundef nonnull %0)
  %3003 = load ptr, ptr %2999, align 8, !tbaa !129
  %3004 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 52
  %3005 = load ptr, ptr %3004, align 8, !tbaa !57
  call void @my_regprop(ptr noundef %3003, ptr noundef %3005, ptr noundef %2759, ptr noundef null, ptr noundef nonnull %0)
  %3006 = call ptr @Perl_PerlIO_stderr() #15
  %3007 = load ptr, ptr %3001, align 8, !tbaa !56
  %3008 = getelementptr inbounds %struct.sv, ptr %3007, i64 0, i32 2
  %3009 = load i32, ptr %3008, align 4, !tbaa !13
  %3010 = and i32 %3009, 2098176
  %3011 = icmp eq i32 %3010, 1024
  br i1 %3011, label %3012, label %3015

3012:                                             ; preds = %2998
  %3013 = getelementptr inbounds %struct.sv, ptr %3007, i64 0, i32 3
  %3014 = load ptr, ptr %3013, align 8, !tbaa !17
  br label %3017

3015:                                             ; preds = %2998
  %3016 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %3007, ptr noundef null, i32 noundef 34) #15
  br label %3017

3017:                                             ; preds = %3015, %3012
  %3018 = phi ptr [ %3014, %3012 ], [ %3016, %3015 ]
  %3019 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %3020 = load ptr, ptr %3019, align 8, !tbaa !131
  %3021 = ptrtoint ptr %2487 to i64
  %3022 = ptrtoint ptr %3020 to i64
  %3023 = sub i64 %3021, %3022
  %3024 = shl i64 %3023, 30
  %3025 = ashr exact i64 %3024, 32
  %3026 = load ptr, ptr %3004, align 8, !tbaa !57
  %3027 = getelementptr inbounds %struct.sv, ptr %3026, i64 0, i32 2
  %3028 = load i32, ptr %3027, align 4, !tbaa !13
  %3029 = and i32 %3028, 2098176
  %3030 = icmp eq i32 %3029, 1024
  br i1 %3030, label %3031, label %3034

3031:                                             ; preds = %3017
  %3032 = getelementptr inbounds %struct.sv, ptr %3026, i64 0, i32 3
  %3033 = load ptr, ptr %3032, align 8, !tbaa !17
  br label %3036

3034:                                             ; preds = %3017
  %3035 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %3026, ptr noundef null, i32 noundef 34) #15
  br label %3036

3036:                                             ; preds = %3034, %3031
  %3037 = phi ptr [ %3033, %3031 ], [ %3035, %3034 ]
  %3038 = icmp eq ptr %2759, null
  br i1 %3038, label %3045, label %3039

3039:                                             ; preds = %3036
  %3040 = load ptr, ptr %3019, align 8, !tbaa !131
  %3041 = ptrtoint ptr %2759 to i64
  %3042 = ptrtoint ptr %3040 to i64
  %3043 = sub i64 %3041, %3042
  %3044 = ashr exact i64 %3043, 2
  br label %3045

3045:                                             ; preds = %3036, %3039
  %3046 = phi i64 [ %3041, %3039 ], [ 0, %3036 ]
  %3047 = phi i64 [ %3044, %3039 ], [ -1, %3036 ]
  %3048 = shl i64 %3047, 32
  %3049 = ashr exact i64 %3048, 32
  %3050 = sub i64 %3046, %3021
  %3051 = ashr exact i64 %3050, 2
  %3052 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3006, ptr noundef nonnull @.str.445, ptr noundef %3018, i64 noundef %3025, ptr noundef %3037, i64 noundef %3049, i64 noundef %3051) #15
  br label %3053

3053:                                             ; preds = %2939, %3045, %2934
  %3054 = getelementptr inbounds %struct.regnode, ptr %2935, i64 0, i32 1
  store i8 40, ptr %3054, align 1, !tbaa !141
  %3055 = getelementptr inbounds %struct.regnode, ptr %2759, i64 0, i32 1
  %3056 = load i8, ptr %3055, align 1, !tbaa !141
  %3057 = icmp eq i8 %3056, 41
  br i1 %3057, label %3061, label %3058

3058:                                             ; preds = %3053
  %3059 = getelementptr inbounds %struct.regnode, ptr %2935, i64 1
  %3060 = icmp ult ptr %3059, %2759
  br i1 %3060, label %3064, label %3070

3061:                                             ; preds = %3053
  %3062 = getelementptr inbounds %struct.regnode, ptr %2935, i64 0, i32 2
  store i16 0, ptr %3062, align 2, !tbaa !222
  %3063 = getelementptr inbounds %struct.regnode, ptr %2935, i64 1
  store ptr %3063, ptr %2888, align 8, !tbaa !112
  br label %3077

3064:                                             ; preds = %3058, %3064
  %3065 = phi ptr [ %3068, %3064 ], [ %3059, %3058 ]
  %3066 = phi ptr [ %3065, %3064 ], [ %2935, %3058 ]
  %3067 = getelementptr inbounds %struct.regnode, ptr %3066, i64 1, i32 1
  store i8 92, ptr %3067, align 1, !tbaa !141
  %3068 = getelementptr inbounds %struct.regnode, ptr %3065, i64 1
  %3069 = icmp ult ptr %3068, %2759
  br i1 %3069, label %3064, label %3070, !llvm.loop !227

3070:                                             ; preds = %3064, %3058
  %3071 = ptrtoint ptr %2759 to i64
  %3072 = ptrtoint ptr %2935 to i64
  %3073 = sub i64 %3071, %3072
  %3074 = lshr exact i64 %3073, 2
  %3075 = trunc i64 %3074 to i16
  %3076 = getelementptr inbounds %struct.regnode, ptr %2935, i64 0, i32 2
  store i16 %3075, ptr %3076, align 2, !tbaa !222
  br label %3077

3077:                                             ; preds = %2923, %3070, %3061, %2886, %2887
  %3078 = icmp eq i32 %2330, 0
  br i1 %3078, label %3234, label %3079

3079:                                             ; preds = %2582, %3077
  %3080 = call ptr @memchr(ptr nonnull dereferenceable(1) @S_reg.parens, i32 %2330, i64 6)
  %3081 = icmp eq ptr %3080, null
  br i1 %3081, label %3196, label %3082

3082:                                             ; preds = %3079
  %3083 = ptrtoint ptr %3080 to i64
  %3084 = sub i64 %3083, ptrtoint (ptr @S_reg.parens to i64)
  %3085 = and i64 %3084, 1
  %3086 = icmp eq i64 %3085, 0
  %3087 = select i1 %3086, i8 63, i8 64
  %3088 = icmp sgt i64 %3084, 1
  %3089 = icmp ne i32 %2330, 62
  %3090 = select i1 %3089, i8 %3087, i8 65
  %3091 = and i1 %3089, %3088
  %3092 = zext i1 %3091 to i8
  call fastcc void @S_reginsert(ptr noundef nonnull %0, i8 noundef zeroext %3090, ptr noundef %2487, i32 noundef %2332)
  %3093 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %3094 = load ptr, ptr %3093, align 8, !tbaa !112
  %3095 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %3096 = icmp eq ptr %3094, %3095
  br i1 %3096, label %3138, label %3097

3097:                                             ; preds = %3082
  %3098 = load volatile i64, ptr %6, align 8, !tbaa !9
  %3099 = and i64 %3098, 262144
  %3100 = icmp eq i64 %3099, 0
  br i1 %3100, label %3101, label %3103

3101:                                             ; preds = %3097
  %3102 = ptrtoint ptr %2487 to i64
  br label %3116

3103:                                             ; preds = %3097
  %3104 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %3105 = load ptr, ptr %3104, align 8, !tbaa !131
  %3106 = ptrtoint ptr %2487 to i64
  %3107 = ptrtoint ptr %3105 to i64
  %3108 = sub i64 %3106, %3107
  %3109 = lshr exact i64 %3108, 2
  %3110 = trunc i64 %3109 to i32
  %3111 = load ptr, ptr %13, align 8, !tbaa !105
  %3112 = ptrtoint ptr %3111 to i64
  %3113 = ptrtoint ptr %2331 to i64
  %3114 = sub i64 %3112, %3113
  %3115 = trunc i64 %3114 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 10661, i32 noundef %3110, i32 noundef %3115) #15
  br label %3116

3116:                                             ; preds = %3101, %3103
  %3117 = phi i64 [ %3102, %3101 ], [ %3106, %3103 ]
  %3118 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %3119 = load ptr, ptr %3118, align 8, !tbaa !131
  %3120 = ptrtoint ptr %3119 to i64
  %3121 = sub i64 %3117, %3120
  %3122 = icmp slt i64 %3121, 0
  br i1 %3122, label %3123, label %3126

3123:                                             ; preds = %3116
  %3124 = lshr exact i64 %3121, 2
  %3125 = trunc i64 %3124 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %3125) #15
  br label %3138

3126:                                             ; preds = %3116
  %3127 = load ptr, ptr %13, align 8, !tbaa !105
  %3128 = ptrtoint ptr %3127 to i64
  %3129 = ptrtoint ptr %2331 to i64
  %3130 = sub i64 %3128, %3129
  %3131 = trunc i64 %3130 to i32
  %3132 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %3133 = load ptr, ptr %3132, align 8, !tbaa !130
  %3134 = getelementptr inbounds %struct.regexp_internal, ptr %3133, i64 0, i32 1
  %3135 = load ptr, ptr %3134, align 8, !tbaa !17
  %3136 = lshr exact i64 %3121, 1
  %3137 = getelementptr inbounds i32, ptr %3135, i64 %3136
  store i32 %3131, ptr %3137, align 4, !tbaa !73
  br label %3138

3138:                                             ; preds = %3082, %3126, %3123
  %3139 = load ptr, ptr %3093, align 8, !tbaa !112
  %3140 = icmp eq ptr %3139, %3095
  br i1 %3140, label %3187, label %3141

3141:                                             ; preds = %3138
  %3142 = load volatile i64, ptr %6, align 8, !tbaa !9
  %3143 = and i64 %3142, 262144
  %3144 = icmp eq i64 %3143, 0
  br i1 %3144, label %3145, label %3147

3145:                                             ; preds = %3141
  %3146 = ptrtoint ptr %2487 to i64
  br label %3162

3147:                                             ; preds = %3141
  %3148 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %3149 = load ptr, ptr %3148, align 8, !tbaa !131
  %3150 = ptrtoint ptr %2487 to i64
  %3151 = ptrtoint ptr %3149 to i64
  %3152 = sub i64 %3150, %3151
  %3153 = lshr exact i64 %3152, 2
  %3154 = trunc i64 %3153 to i32
  %3155 = getelementptr inbounds i8, ptr %2331, i64 1
  %3156 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %3157 = load ptr, ptr %3156, align 8, !tbaa !106
  %3158 = ptrtoint ptr %3155 to i64
  %3159 = ptrtoint ptr %3157 to i64
  %3160 = sub i64 %3158, %3159
  %3161 = trunc i64 %3160 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 10662, i32 noundef %3154, i32 noundef %3161) #15
  br label %3162

3162:                                             ; preds = %3145, %3147
  %3163 = phi i64 [ %3146, %3145 ], [ %3150, %3147 ]
  %3164 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %3165 = load ptr, ptr %3164, align 8, !tbaa !131
  %3166 = ptrtoint ptr %3165 to i64
  %3167 = sub i64 %3163, %3166
  %3168 = icmp slt i64 %3167, 0
  br i1 %3168, label %3169, label %3172

3169:                                             ; preds = %3162
  %3170 = lshr exact i64 %3167, 2
  %3171 = trunc i64 %3170 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %3171) #15
  br label %3187

3172:                                             ; preds = %3162
  %3173 = getelementptr inbounds i8, ptr %2331, i64 1
  %3174 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %3175 = load ptr, ptr %3174, align 8, !tbaa !106
  %3176 = ptrtoint ptr %3173 to i64
  %3177 = ptrtoint ptr %3175 to i64
  %3178 = sub i64 %3176, %3177
  %3179 = trunc i64 %3178 to i32
  %3180 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %3181 = load ptr, ptr %3180, align 8, !tbaa !130
  %3182 = getelementptr inbounds %struct.regexp_internal, ptr %3181, i64 0, i32 1
  %3183 = load ptr, ptr %3182, align 8, !tbaa !17
  %3184 = lshr exact i64 %3167, 1
  %3185 = add nsw i64 %3184, -1
  %3186 = getelementptr inbounds i32, ptr %3183, i64 %3185
  store i32 %3179, ptr %3186, align 4, !tbaa !73
  br label %3187

3187:                                             ; preds = %3138, %3172, %3169
  store i8 %3092, ptr %2487, align 2, !tbaa !143
  %3188 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 41, i64 noundef 0, ptr noundef nonnull @.str.460)
  %3189 = load ptr, ptr %3093, align 8, !tbaa !112
  %3190 = icmp eq ptr %3189, %3095
  br i1 %3190, label %3195, label %3191

3191:                                             ; preds = %3187
  %3192 = getelementptr inbounds %struct.regnode, ptr %3188, i64 0, i32 1
  store i8 41, ptr %3192, align 1, !tbaa !141
  %3193 = getelementptr inbounds %struct.regnode, ptr %3188, i64 0, i32 2
  store i16 0, ptr %3193, align 2, !tbaa !222
  %3194 = getelementptr inbounds %struct.regnode, ptr %3188, i64 1
  store ptr %3194, ptr %3093, align 8, !tbaa !112
  br label %3195

3195:                                             ; preds = %3187, %3191
  call fastcc void @S_regtail_study(ptr noundef nonnull %0, ptr noundef nonnull %2487, ptr noundef %3188, i32 noundef %2332)
  br label %3196

3196:                                             ; preds = %3079, %3195
  %3197 = load i32, ptr %0, align 8, !tbaa !66
  %3198 = and i32 %3197, 64
  %3199 = or i32 %3198, %12
  store i32 %3199, ptr %0, align 8, !tbaa !66
  %3200 = load ptr, ptr %13, align 8, !tbaa !105
  %3201 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %3202 = load ptr, ptr %3201, align 8, !tbaa !107
  %3203 = icmp ult ptr %3200, %3202
  br i1 %3203, label %3204, label %3208

3204:                                             ; preds = %3196
  %3205 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %3206 = load i8, ptr %3205, align 1, !tbaa !17
  %3207 = icmp eq i8 %3206, 41
  br i1 %3207, label %3294, label %3208

3208:                                             ; preds = %3204, %3196
  store ptr %14, ptr %13, align 8, !tbaa !105
  %3209 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %3210 = load ptr, ptr %3209, align 8, !tbaa !112
  %3211 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %3212 = icmp eq ptr %3210, %3211
  br i1 %3212, label %3217, label %3213

3213:                                             ; preds = %3208
  %3214 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %3215 = load ptr, ptr %3214, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %3215, i32 noundef 11) #15
  %3216 = load ptr, ptr %13, align 8, !tbaa !105
  br label %3217

3217:                                             ; preds = %3208, %3213
  %3218 = phi ptr [ %14, %3208 ], [ %3216, %3213 ]
  %3219 = load ptr, ptr %3201, align 8, !tbaa !107
  %3220 = icmp ugt ptr %3218, %3219
  %3221 = select i1 %3220, ptr %3219, ptr %3218
  %3222 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %3223 = load ptr, ptr %3222, align 8, !tbaa !65
  %3224 = ptrtoint ptr %3221 to i64
  %3225 = ptrtoint ptr %3223 to i64
  %3226 = sub i64 %3224, %3225
  %3227 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %3228 = load i32, ptr %3227, align 8, !tbaa !50
  %3229 = icmp ne i32 %3228, 0
  %3230 = zext i1 %3229 to i32
  %3231 = ptrtoint ptr %3219 to i64
  %3232 = sub i64 %3231, %3224
  %3233 = getelementptr inbounds i8, ptr %3223, i64 %3226
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.446, i32 noundef %3230, i64 noundef %3226, ptr noundef %3223, i32 noundef %3230, i64 noundef %3232, ptr noundef %3233) #15
  br label %3294

3234:                                             ; preds = %3077
  %3235 = load ptr, ptr %13, align 8, !tbaa !105
  %3236 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %3237 = load ptr, ptr %3236, align 8, !tbaa !107
  %3238 = icmp ult ptr %3235, %3237
  br i1 %3238, label %3239, label %3294

3239:                                             ; preds = %3234
  %3240 = load i8, ptr %3235, align 1, !tbaa !17
  %3241 = icmp eq i8 %3240, 41
  br i1 %3241, label %3242, label %3270

3242:                                             ; preds = %3239
  %3243 = getelementptr inbounds i8, ptr %3235, i64 1
  store ptr %3243, ptr %13, align 8, !tbaa !105
  %3244 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %3245 = load ptr, ptr %3244, align 8, !tbaa !112
  %3246 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %3247 = icmp eq ptr %3245, %3246
  br i1 %3247, label %3253, label %3248

3248:                                             ; preds = %3242
  %3249 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %3250 = load ptr, ptr %3249, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %3250, i32 noundef 11) #15
  %3251 = load ptr, ptr %13, align 8, !tbaa !105
  %3252 = load ptr, ptr %3236, align 8, !tbaa !107
  br label %3253

3253:                                             ; preds = %3242, %3248
  %3254 = phi ptr [ %3237, %3242 ], [ %3252, %3248 ]
  %3255 = phi ptr [ %3243, %3242 ], [ %3251, %3248 ]
  %3256 = icmp ugt ptr %3255, %3254
  %3257 = select i1 %3256, ptr %3254, ptr %3255
  %3258 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %3259 = load ptr, ptr %3258, align 8, !tbaa !65
  %3260 = ptrtoint ptr %3257 to i64
  %3261 = ptrtoint ptr %3259 to i64
  %3262 = sub i64 %3260, %3261
  %3263 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %3264 = load i32, ptr %3263, align 8, !tbaa !50
  %3265 = icmp ne i32 %3264, 0
  %3266 = zext i1 %3265 to i32
  %3267 = ptrtoint ptr %3254 to i64
  %3268 = sub i64 %3267, %3260
  %3269 = getelementptr inbounds i8, ptr %3259, i64 %3262
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.447, i32 noundef %3266, i64 noundef %3262, ptr noundef %3259, i32 noundef %3266, i64 noundef %3268, ptr noundef %3269) #15
  br label %3293

3270:                                             ; preds = %3239
  %3271 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %3272 = load ptr, ptr %3271, align 8, !tbaa !65
  %3273 = ptrtoint ptr %3237 to i64
  %3274 = ptrtoint ptr %3272 to i64
  %3275 = sub i64 %3273, %3274
  %3276 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %3277 = load ptr, ptr %3276, align 8, !tbaa !112
  %3278 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %3279 = icmp eq ptr %3277, %3278
  br i1 %3279, label %3284, label %3280

3280:                                             ; preds = %3270
  %3281 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %3282 = load ptr, ptr %3281, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %3282, i32 noundef 11) #15
  %3283 = load ptr, ptr %3271, align 8, !tbaa !65
  br label %3284

3284:                                             ; preds = %3280, %3270
  %3285 = phi ptr [ %3283, %3280 ], [ %3272, %3270 ]
  %3286 = icmp sgt i64 %3275, 127
  %3287 = select i1 %3286, ptr @.str.20, ptr @.str.8
  %3288 = select i1 %3286, i64 117, i64 %3275
  %3289 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %3290 = load i32, ptr %3289, align 8, !tbaa !50
  %3291 = icmp ne i32 %3290, 0
  %3292 = zext i1 %3291 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.448, i32 noundef %3292, i64 noundef %3288, ptr noundef %3285, ptr noundef nonnull %3287) #15
  br label %3293

3293:                                             ; preds = %3284, %3253
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.220, i32 noundef 10684) #15
  br label %3294

3294:                                             ; preds = %3234, %3293, %3204, %3217
  %3295 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 33
  %3296 = load i32, ptr %3295, align 4, !tbaa !100
  %3297 = icmp eq i32 %3296, 0
  br i1 %3297, label %3300, label %3298

3298:                                             ; preds = %3294
  %3299 = add nsw i32 %3296, -1
  store i32 %3299, ptr %3295, align 4, !tbaa !100
  br label %3300

3300:                                             ; preds = %3298, %3294
  %3301 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %3302 = load i32, ptr %3301, align 8, !tbaa !109
  %3303 = icmp sgt i32 %2584, %3302
  br i1 %3303, label %3304, label %3305

3304:                                             ; preds = %3300
  store i32 %2584, ptr %3301, align 8, !tbaa !109
  br label %3305

3305:                                             ; preds = %2321, %487, %3300, %3304, %2551, %2339
  %3306 = phi ptr [ null, %2339 ], [ null, %2551 ], [ %2487, %3304 ], [ %2487, %3300 ], [ %488, %487 ], [ %2322, %2321 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  ret ptr %3306
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #4

declare ptr @Perl_safesyscalloc(i64 noundef, i64 noundef) local_unnamed_addr #2

declare ptr @Perl_regnext(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @my_regprop(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef readonly %3, ptr noundef readonly %4) local_unnamed_addr #0 {
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = getelementptr inbounds %struct.regexp, ptr %0, i64 0, i32 14
  %13 = load ptr, ptr %12, align 8, !tbaa !90
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  store volatile i64 0, ptr %6, align 8, !tbaa !9
  %14 = load volatile i64, ptr %6, align 8, !tbaa !9
  %15 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %16 = icmp eq ptr %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 2
  %19 = load i32, ptr %18, align 4, !tbaa !13
  %20 = and i32 %19, 256
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  tail call void @Perl_sv_setuv(ptr noundef nonnull %15, i64 noundef 65288) #15
  %23 = load i32, ptr %18, align 4, !tbaa !13
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i32 [ %23, %22 ], [ %19, %17 ]
  %26 = and i32 %25, 2097408
  %27 = icmp eq i32 %26, 256
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = load ptr, ptr %15, align 8, !tbaa !16
  %30 = getelementptr inbounds %struct.xpviv, ptr %29, i64 0, i32 4
  %31 = load i64, ptr %30, align 8, !tbaa !17
  br label %34

32:                                               ; preds = %24
  %33 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %15, i32 noundef 2) #15
  br label %34

34:                                               ; preds = %32, %28
  %35 = phi i64 [ %31, %28 ], [ %33, %32 ]
  store volatile i64 %35, ptr %6, align 8, !tbaa !9
  br label %36

36:                                               ; preds = %34, %5
  %37 = icmp eq ptr %1, null
  br i1 %37, label %38, label %39

38:                                               ; preds = %36
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.92, i32 noundef 16870) #15
  br label %39

39:                                               ; preds = %36, %38
  %40 = icmp eq ptr %2, null
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.149, i32 noundef 16870) #15
  br label %42

42:                                               ; preds = %39, %41
  tail call void @Perl_sv_setpvn(ptr noundef %1, ptr noundef nonnull @.str.8, i64 noundef 0) #15
  %43 = getelementptr inbounds %struct.regnode, ptr %2, i64 0, i32 1
  %44 = load i8, ptr %43, align 1, !tbaa !141
  %45 = icmp ugt i8 %44, 93
  br i1 %45, label %46, label %49

46:                                               ; preds = %42
  %47 = zext i8 %44 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.150, i32 noundef %47, i32 noundef 93) #15
  %48 = load i8, ptr %43, align 1, !tbaa !141
  br label %49

49:                                               ; preds = %46, %42
  %50 = phi i8 [ %48, %46 ], [ %44, %42 ]
  %51 = zext i8 %50 to i64
  %52 = getelementptr inbounds [0 x ptr], ptr @PL_reg_name, i64 0, i64 %51
  %53 = load ptr, ptr %52, align 8, !tbaa !5
  tail call void @Perl_sv_catpv(ptr noundef %1, ptr noundef %53) #15
  %54 = load i8, ptr %43, align 1, !tbaa !141
  %55 = zext i8 %54 to i64
  %56 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %55
  %57 = load i8, ptr %56, align 1, !tbaa !17
  switch i8 %57, label %143 [
    i8 31, label %58
    i8 72, label %65
    i8 44, label %123
    i8 48, label %136
  ]

58:                                               ; preds = %49
  tail call void @Perl_sv_catpvn_flags(ptr noundef %1, ptr noundef nonnull @.str.151, i64 noundef 1, i32 noundef 2) #15
  %59 = getelementptr inbounds %struct.regnode_string, ptr %2, i64 0, i32 3
  %60 = load i8, ptr %2, align 2, !tbaa !205
  %61 = zext i8 %60 to i64
  %62 = load ptr, ptr @PL_colors, align 16, !tbaa !5
  %63 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 1), align 8, !tbaa !5
  %64 = tail call ptr @Perl_pv_pretty(ptr noundef %1, ptr noundef nonnull %59, i64 noundef %61, i64 noundef 60, ptr noundef %62, ptr noundef %63, i32 noundef 17926) #15
  br label %481

65:                                               ; preds = %49
  %66 = getelementptr inbounds %struct.regnode_1, ptr %2, i64 0, i32 3
  %67 = load i32, ptr %66, align 4, !tbaa !148
  %68 = icmp sgt i8 %54, 73
  %69 = getelementptr inbounds %struct.regexp_internal, ptr %13, i64 0, i32 3
  %70 = load ptr, ptr %69, align 8, !tbaa !147
  br i1 %68, label %71, label %77

71:                                               ; preds = %65
  %72 = zext i32 %67 to i64
  %73 = getelementptr inbounds %struct.reg_data, ptr %70, i64 0, i32 2, i64 %72
  %74 = load ptr, ptr %73, align 8, !tbaa !5
  %75 = getelementptr inbounds %struct._reg_ac_data, ptr %74, i64 0, i32 1
  %76 = load i32, ptr %75, align 4, !tbaa !160
  br label %77

77:                                               ; preds = %65, %71
  %78 = phi i32 [ %76, %71 ], [ %67, %65 ]
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %struct.reg_data, ptr %70, i64 0, i32 2, i64 %79
  %81 = load ptr, ptr %80, align 8, !tbaa !5
  %82 = load i8, ptr %2, align 2, !tbaa !143
  %83 = zext i8 %82 to i64
  %84 = getelementptr inbounds [0 x ptr], ptr @PL_reg_name, i64 0, i64 %83
  %85 = load ptr, ptr %84, align 8, !tbaa !5
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.152, ptr noundef %85) #15
  %86 = load volatile i64, ptr %6, align 8, !tbaa !9
  %87 = and i64 %86, 4
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %109, label %89

89:                                               ; preds = %77
  %90 = getelementptr inbounds %struct._reg_trie_data, ptr %81, i64 0, i32 9
  %91 = load i32, ptr %90, align 4, !tbaa !228
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds %struct._reg_trie_data, ptr %81, i64 0, i32 13
  %94 = load i32, ptr %93, align 4, !tbaa !153
  %95 = zext i32 %94 to i64
  %96 = add nsw i64 %95, -1
  %97 = getelementptr inbounds %struct._reg_trie_data, ptr %81, i64 0, i32 14
  %98 = load i32, ptr %97, align 8, !tbaa !229
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds %struct._reg_trie_data, ptr %81, i64 0, i32 10
  %101 = load i64, ptr %100, align 8, !tbaa !150
  %102 = getelementptr inbounds %struct._reg_trie_data, ptr %81, i64 0, i32 11
  %103 = load i64, ptr %102, align 8, !tbaa !230
  %104 = getelementptr inbounds %struct._reg_trie_data, ptr %81, i64 0, i32 15
  %105 = load i64, ptr %104, align 8, !tbaa !231
  %106 = getelementptr inbounds %struct._reg_trie_data, ptr %81, i64 0, i32 8
  %107 = load i16, ptr %106, align 8, !tbaa !152
  %108 = zext i16 %107 to i64
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.153, i64 noundef %92, i64 noundef %96, i64 noundef %99, i64 noundef %101, i64 noundef %103, i64 noundef %105, i64 noundef %108) #15
  br label %109

109:                                              ; preds = %89, %77
  %110 = and i8 %54, -3
  %111 = icmp eq i8 %110, 73
  br i1 %111, label %116, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %struct._reg_trie_data, ptr %81, i64 0, i32 5
  %114 = load ptr, ptr %113, align 8, !tbaa !232
  %115 = icmp eq ptr %114, null
  br i1 %115, label %481, label %118

116:                                              ; preds = %109
  tail call void @Perl_sv_catpvn_flags(ptr noundef %1, ptr noundef nonnull @.str.154, i64 noundef 1, i32 noundef 2) #15
  %117 = getelementptr inbounds %struct.regnode_charclass, ptr %2, i64 0, i32 4
  br label %120

118:                                              ; preds = %112
  tail call void @Perl_sv_catpvn_flags(ptr noundef %1, ptr noundef nonnull @.str.154, i64 noundef 1, i32 noundef 2) #15
  %119 = load ptr, ptr %113, align 8, !tbaa !232
  br label %120

120:                                              ; preds = %118, %116
  %121 = phi ptr [ %117, %116 ], [ %119, %118 ]
  %122 = tail call fastcc zeroext i1 @S_put_charclass_bitmap_innards(ptr noundef %1, ptr noundef %121, ptr noundef null)
  tail call void @Perl_sv_catpvn_flags(ptr noundef %1, ptr noundef nonnull @.str.52, i64 noundef 1, i32 noundef 2) #15
  br label %481

123:                                              ; preds = %49
  %124 = add i8 %54, -45
  %125 = icmp ult i8 %124, 3
  br i1 %125, label %126, label %129

126:                                              ; preds = %123
  %127 = load i8, ptr %2, align 2, !tbaa !143
  %128 = zext i8 %127 to i32
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.155, i32 noundef %128) #15
  br label %129

129:                                              ; preds = %123, %126
  %130 = getelementptr inbounds %struct.regnode_2, ptr %2, i64 0, i32 3
  %131 = load i16, ptr %130, align 2, !tbaa !144
  %132 = zext i16 %131 to i32
  %133 = getelementptr inbounds %struct.regnode_2, ptr %2, i64 0, i32 4
  %134 = load i16, ptr %133, align 2, !tbaa !233
  %135 = zext i16 %134 to i32
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.156, i32 noundef %132, i32 noundef %135) #15
  br label %481

136:                                              ; preds = %49
  %137 = load i8, ptr %2, align 2, !tbaa !143
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %145, label %139

139:                                              ; preds = %136
  %140 = zext i8 %137 to i32
  %141 = and i32 %140, 15
  %142 = lshr i32 %140, 4
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.157, i32 noundef %141, i32 noundef %142) #15
  br label %481

143:                                              ; preds = %49
  %144 = icmp eq i8 %57, 51
  switch i8 %57, label %145 [
    i8 67, label %148
    i8 51, label %148
    i8 50, label %148
    i8 49, label %148
  ]

145:                                              ; preds = %136, %143
  %146 = phi i1 [ %144, %143 ], [ false, %136 ]
  %147 = icmp eq i8 %54, 83
  br i1 %147, label %148, label %251

148:                                              ; preds = %143, %143, %143, %143, %145
  %149 = phi i1 [ %144, %143 ], [ %144, %143 ], [ %144, %143 ], [ %144, %143 ], [ %146, %145 ]
  %150 = getelementptr inbounds %struct.regnode_1, ptr %2, i64 0, i32 3
  %151 = load i32, ptr %150, align 4, !tbaa !148
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.158, i32 noundef %151) #15
  %152 = getelementptr inbounds %struct.regexp, ptr %0, i64 0, i32 6
  %153 = load ptr, ptr %152, align 8, !tbaa !234
  %154 = icmp eq ptr %153, null
  br i1 %154, label %161, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %struct.regexp_internal, ptr %13, i64 0, i32 3
  %157 = load ptr, ptr %156, align 8, !tbaa !147
  %158 = load i32, ptr %13, align 8, !tbaa !207
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds %struct.reg_data, ptr %157, i64 0, i32 2, i64 %159
  br label %165

161:                                              ; preds = %148
  %162 = icmp eq ptr %4, null
  br i1 %162, label %216, label %163

163:                                              ; preds = %161
  %164 = getelementptr inbounds %struct.RExC_state_t, ptr %4, i64 0, i32 49
  br label %165

165:                                              ; preds = %163, %155
  %166 = phi ptr [ %160, %155 ], [ %164, %163 ]
  %167 = load ptr, ptr %166, align 8, !tbaa !5
  %168 = icmp eq ptr %167, null
  br i1 %168, label %216, label %169

169:                                              ; preds = %165
  br i1 %149, label %170, label %173

170:                                              ; preds = %169
  %171 = load i8, ptr %43, align 1, !tbaa !141
  %172 = icmp ult i8 %171, 56
  br i1 %172, label %173, label %178

173:                                              ; preds = %170, %169
  %174 = load i32, ptr %150, align 4, !tbaa !148
  %175 = zext i32 %174 to i64
  %176 = tail call ptr @Perl_av_fetch(ptr noundef nonnull %167, i64 noundef %175, i32 noundef 0) #15
  %177 = icmp eq ptr %176, null
  br i1 %177, label %216, label %213

178:                                              ; preds = %170
  %179 = getelementptr inbounds %struct.regexp_internal, ptr %13, i64 0, i32 3
  %180 = load ptr, ptr %179, align 8, !tbaa !147
  %181 = load i32, ptr %150, align 4, !tbaa !148
  %182 = zext i32 %181 to i64
  %183 = getelementptr inbounds %struct.reg_data, ptr %180, i64 0, i32 2, i64 %182
  %184 = load ptr, ptr %183, align 8, !tbaa !5
  %185 = getelementptr inbounds %struct.sv, ptr %184, i64 0, i32 3
  %186 = load ptr, ptr %185, align 8, !tbaa !17
  %187 = load i32, ptr %186, align 4, !tbaa !73
  %188 = sext i32 %187 to i64
  %189 = tail call ptr @Perl_av_fetch(ptr noundef nonnull %167, i64 noundef %188, i32 noundef 0) #15
  %190 = icmp eq ptr %189, null
  br i1 %190, label %216, label %191

191:                                              ; preds = %178
  %192 = load ptr, ptr %184, align 8, !tbaa !16
  %193 = getelementptr inbounds %struct.xpviv, ptr %192, i64 0, i32 4
  %194 = load i64, ptr %193, align 8, !tbaa !17
  %195 = icmp sgt i64 %194, 0
  br i1 %195, label %196, label %213

196:                                              ; preds = %191
  %197 = load i32, ptr %186, align 4, !tbaa !73
  %198 = sext i32 %197 to i64
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.160, ptr noundef nonnull @.str.8, i64 noundef %198) #15
  %199 = load ptr, ptr %184, align 8, !tbaa !16
  %200 = getelementptr inbounds %struct.xpviv, ptr %199, i64 0, i32 4
  %201 = load i64, ptr %200, align 8, !tbaa !17
  %202 = icmp sgt i64 %201, 1
  br i1 %202, label %203, label %213

203:                                              ; preds = %196, %203
  %204 = phi i64 [ %208, %203 ], [ 1, %196 ]
  %205 = getelementptr inbounds i32, ptr %186, i64 %204
  %206 = load i32, ptr %205, align 4, !tbaa !73
  %207 = sext i32 %206 to i64
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.160, ptr noundef nonnull @.str.161, i64 noundef %207) #15
  %208 = add nuw nsw i64 %204, 1
  %209 = load ptr, ptr %184, align 8, !tbaa !16
  %210 = getelementptr inbounds %struct.xpviv, ptr %209, i64 0, i32 4
  %211 = load i64, ptr %210, align 8, !tbaa !17
  %212 = icmp sgt i64 %211, %208
  br i1 %212, label %203, label %213, !llvm.loop !235

213:                                              ; preds = %203, %191, %196, %173
  %214 = phi ptr [ %176, %173 ], [ %189, %196 ], [ %189, %191 ], [ %189, %203 ]
  %215 = load ptr, ptr %214, align 8, !tbaa !5
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.159, ptr noundef %215) #15
  br label %216

216:                                              ; preds = %213, %161, %178, %173, %165
  %217 = icmp ne ptr %3, null
  %218 = and i1 %217, %149
  br i1 %218, label %219, label %481

219:                                              ; preds = %216
  %220 = load i32, ptr %150, align 4, !tbaa !148
  %221 = getelementptr inbounds %struct.regexp, ptr %0, i64 0, i32 17
  %222 = load ptr, ptr %221, align 8, !tbaa !211
  %223 = zext i32 %220 to i64
  %224 = getelementptr inbounds %struct.regexp_paren_pair, ptr %222, i64 %223
  %225 = load i64, ptr %224, align 8, !tbaa !237
  %226 = getelementptr inbounds %struct.regexp, ptr %0, i64 0, i32 15
  %227 = load i32, ptr %226, align 8, !tbaa !239
  %228 = icmp ult i32 %227, %220
  %229 = and i64 %225, 4294967295
  %230 = icmp eq i64 %229, 4294967295
  %231 = select i1 %228, i1 true, i1 %230
  br i1 %231, label %232, label %233

232:                                              ; preds = %219
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.162) #15
  br label %481

233:                                              ; preds = %219
  %234 = shl i64 %225, 32
  %235 = ashr exact i64 %234, 32
  %236 = getelementptr inbounds %struct.regexp_paren_pair, ptr %222, i64 %223, i32 1
  %237 = load i64, ptr %236, align 8, !tbaa !240
  %238 = icmp eq i64 %235, %237
  br i1 %238, label %239, label %240

239:                                              ; preds = %233
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.163) #15
  br label %481

240:                                              ; preds = %233
  %241 = getelementptr inbounds %struct.regmatch_info, ptr %3, i64 0, i32 1
  %242 = load ptr, ptr %241, align 8, !tbaa !241
  %243 = getelementptr inbounds i8, ptr %242, i64 %235
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.164) #15
  %244 = load ptr, ptr %221, align 8, !tbaa !211
  %245 = getelementptr inbounds %struct.regexp_paren_pair, ptr %244, i64 %223
  %246 = getelementptr inbounds %struct.regexp_paren_pair, ptr %244, i64 %223, i32 1
  %247 = load i64, ptr %246, align 8, !tbaa !240
  %248 = load i64, ptr %245, align 8, !tbaa !237
  %249 = sub nsw i64 %247, %248
  %250 = tail call ptr @Perl_pv_pretty(ptr noundef %1, ptr noundef %243, i64 noundef %249, i64 noundef 32, ptr noundef null, ptr noundef null, i32 noundef 16899) #15
  br label %481

251:                                              ; preds = %145
  switch i8 %57, label %458 [
    i8 76, label %252
    i8 84, label %283
    i8 70, label %294
    i8 19, label %297
    i8 25, label %441
    i8 21, label %441
  ]

252:                                              ; preds = %251
  %253 = getelementptr inbounds %struct.regexp, ptr %0, i64 0, i32 6
  %254 = load ptr, ptr %253, align 8, !tbaa !234
  %255 = icmp eq ptr %254, null
  br i1 %255, label %262, label %256

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.regexp_internal, ptr %13, i64 0, i32 3
  %258 = load ptr, ptr %257, align 8, !tbaa !147
  %259 = load i32, ptr %13, align 8, !tbaa !207
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds %struct.reg_data, ptr %258, i64 0, i32 2, i64 %260
  br label %266

262:                                              ; preds = %252
  %263 = icmp eq ptr %4, null
  br i1 %263, label %269, label %264

264:                                              ; preds = %262
  %265 = getelementptr inbounds %struct.RExC_state_t, ptr %4, i64 0, i32 49
  br label %266

266:                                              ; preds = %256, %264
  %267 = phi ptr [ %265, %264 ], [ %261, %256 ]
  %268 = load ptr, ptr %267, align 8, !tbaa !5
  br label %269

269:                                              ; preds = %266, %262
  %270 = phi ptr [ null, %262 ], [ %268, %266 ]
  %271 = getelementptr inbounds %struct.regnode_1, ptr %2, i64 0, i32 3
  %272 = load i32, ptr %271, align 4, !tbaa !148
  %273 = getelementptr inbounds %struct.regnode_2L, ptr %2, i64 0, i32 4
  %274 = load i32, ptr %273, align 4, !tbaa !208
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.165, i32 noundef %272, i32 noundef %274) #15
  %275 = icmp eq ptr %270, null
  br i1 %275, label %481, label %276

276:                                              ; preds = %269
  %277 = load i32, ptr %271, align 4, !tbaa !148
  %278 = zext i32 %277 to i64
  %279 = tail call ptr @Perl_av_fetch(ptr noundef nonnull %270, i64 noundef %278, i32 noundef 0) #15
  %280 = icmp eq ptr %279, null
  br i1 %280, label %481, label %281

281:                                              ; preds = %276
  %282 = load ptr, ptr %279, align 8, !tbaa !5
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.159, ptr noundef %282) #15
  br label %481

283:                                              ; preds = %251
  %284 = load i8, ptr %2, align 2, !tbaa !143
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %286, label %481

286:                                              ; preds = %283
  %287 = getelementptr inbounds %struct.regexp_internal, ptr %13, i64 0, i32 3
  %288 = load ptr, ptr %287, align 8, !tbaa !147
  %289 = getelementptr inbounds %struct.regnode_1, ptr %2, i64 0, i32 3
  %290 = load i32, ptr %289, align 4, !tbaa !148
  %291 = zext i32 %290 to i64
  %292 = getelementptr inbounds %struct.reg_data, ptr %288, i64 0, i32 2, i64 %291
  %293 = load ptr, ptr %292, align 8, !tbaa !5
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.166, ptr noundef %293) #15
  br label %481

294:                                              ; preds = %251
  %295 = load i8, ptr %2, align 2, !tbaa !143
  %296 = zext i8 %295 to i32
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.155, i32 noundef %296) #15
  br label %481

297:                                              ; preds = %251
  %298 = load i8, ptr %2, align 2, !tbaa !143
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #15
  %299 = icmp eq i8 %54, 20
  br i1 %299, label %300, label %301

300:                                              ; preds = %297
  tail call void @Perl_sv_catpvn_flags(ptr noundef %1, ptr noundef nonnull @.str.167, i64 noundef 5, i32 noundef 2) #15
  br label %301

301:                                              ; preds = %300, %297
  %302 = zext i8 %298 to i32
  %303 = and i32 %302, 4
  %304 = icmp ne i32 %303, 0
  br i1 %304, label %305, label %306

305:                                              ; preds = %301
  tail call void @Perl_sv_catpvn_flags(ptr noundef %1, ptr noundef nonnull @.str.168, i64 noundef 3, i32 noundef 2) #15
  br label %306

306:                                              ; preds = %305, %301
  %307 = load ptr, ptr @PL_colors, align 16, !tbaa !5
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.169, ptr noundef %307) #15
  %308 = and i32 %302, 1
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %311, label %310

310:                                              ; preds = %306
  tail call void @Perl_sv_catpvn_flags(ptr noundef %1, ptr noundef nonnull @.str.170, i64 noundef 1, i32 noundef 2) #15
  br label %311

311:                                              ; preds = %310, %306
  %312 = getelementptr inbounds %struct.regnode_charclass, ptr %2, i64 0, i32 4
  %313 = call fastcc zeroext i1 @S_put_charclass_bitmap_innards(ptr noundef %1, ptr noundef nonnull %312, ptr noundef nonnull %7)
  %314 = zext i1 %313 to i32
  %315 = load i8, ptr %2, align 2, !tbaa !143
  %316 = and i8 %315, 8
  %317 = icmp eq i8 %316, 0
  br i1 %317, label %337, label %318

318:                                              ; preds = %311
  %319 = getelementptr inbounds %struct.regnode_charclass_class, ptr %2, i64 0, i32 5
  %320 = load i32, ptr %319, align 4, !tbaa !243
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %337, label %322

322:                                              ; preds = %318, %333
  %323 = phi i64 [ %335, %333 ], [ 0, %318 ]
  %324 = phi i32 [ %334, %333 ], [ %314, %318 ]
  %325 = load i32, ptr %319, align 4, !tbaa !243
  %326 = trunc i64 %323 to i32
  %327 = shl nuw nsw i32 1, %326
  %328 = and i32 %325, %327
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %333, label %330

330:                                              ; preds = %322
  %331 = getelementptr inbounds [32 x ptr], ptr @my_regprop.anyofs, i64 0, i64 %323
  %332 = load ptr, ptr %331, align 8, !tbaa !5
  call void @Perl_sv_catpv(ptr noundef %1, ptr noundef %332) #15
  br label %333

333:                                              ; preds = %322, %330
  %334 = phi i32 [ 1, %330 ], [ %324, %322 ]
  %335 = add nuw nsw i64 %323, 1
  %336 = icmp eq i64 %335, 30
  br i1 %336, label %337, label %322, !llvm.loop !245

337:                                              ; preds = %333, %318, %311
  %338 = phi i32 [ %314, %318 ], [ %314, %311 ], [ %334, %333 ]
  %339 = and i32 %302, 102
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %429, label %341

341:                                              ; preds = %337
  %342 = icmp eq i32 %338, 0
  br i1 %342, label %347, label %343

343:                                              ; preds = %341
  %344 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 1), align 8, !tbaa !5
  %345 = load ptr, ptr @PL_colors, align 16, !tbaa !5
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.171, ptr noundef %344, ptr noundef %345) #15
  br i1 %309, label %347, label %346

346:                                              ; preds = %343
  call void @Perl_sv_catpvn_flags(ptr noundef %1, ptr noundef nonnull @.str.170, i64 noundef 1, i32 noundef 2) #15
  br label %347

347:                                              ; preds = %343, %346, %341
  %348 = icmp sgt i8 %298, -1
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  call void @Perl_sv_catpvn_flags(ptr noundef %1, ptr noundef nonnull @.str.172, i64 noundef 21, i32 noundef 2) #15
  br label %350

350:                                              ; preds = %349, %347
  %351 = and i32 %302, 64
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %354, label %353

353:                                              ; preds = %350
  call void @Perl_sv_catpvn_flags(ptr noundef %1, ptr noundef nonnull @.str.173, i64 noundef 18, i32 noundef 2) #15
  br label %354

354:                                              ; preds = %353, %350
  %355 = getelementptr inbounds %struct.regnode_1, ptr %2, i64 0, i32 3
  %356 = load i32, ptr %355, align 4, !tbaa !148
  %357 = icmp eq i32 %356, -1
  br i1 %357, label %429, label %358

358:                                              ; preds = %354
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #15
  %359 = load ptr, ptr %7, align 8, !tbaa !5
  %360 = call ptr @Perl__get_regclass_nonbitmap_data(ptr noundef %0, ptr noundef nonnull %2, i1 noundef zeroext false, ptr noundef nonnull %8, ptr noundef nonnull %9, ptr noundef %359) #15
  %361 = load ptr, ptr %8, align 8
  %362 = icmp ne ptr %361, null
  %363 = icmp ne ptr %361, @PL_sv_undef
  %364 = and i1 %362, %363
  br i1 %364, label %365, label %408

365:                                              ; preds = %358
  %366 = call ptr @Perl_savesvpv(ptr noundef nonnull %361) #15
  br label %367

367:                                              ; preds = %370, %365
  %368 = phi ptr [ %366, %365 ], [ %371, %370 ]
  %369 = load i8, ptr %368, align 1, !tbaa !17
  switch i8 %369, label %370 [
    i8 10, label %372
    i8 0, label %400
  ]

370:                                              ; preds = %367
  %371 = getelementptr inbounds i8, ptr %368, i64 1
  br label %367, !llvm.loop !246

372:                                              ; preds = %367
  %373 = getelementptr inbounds i8, ptr %368, i64 1
  %374 = and i32 %302, 32
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %377, label %376

376:                                              ; preds = %372
  call void @Perl_sv_catpvn_flags(ptr noundef %1, ptr noundef nonnull @.str.174, i64 noundef 16, i32 noundef 2) #15
  br label %378

377:                                              ; preds = %372
  call void @Perl_sv_catpvn_flags(ptr noundef %1, ptr noundef nonnull @.str.175, i64 noundef 6, i32 noundef 2) #15
  br label %378

378:                                              ; preds = %376, %377
  %379 = ptrtoint ptr %366 to i64
  br label %380

380:                                              ; preds = %392, %378
  %381 = phi ptr [ %373, %378 ], [ %393, %392 ]
  %382 = load i8, ptr %381, align 1, !tbaa !17
  switch i8 %382, label %392 [
    i8 0, label %394
    i8 10, label %383
    i8 9, label %390
  ]

383:                                              ; preds = %380
  %384 = ptrtoint ptr %381 to i64
  %385 = sub i64 %384, %379
  %386 = icmp sgt i64 %385, 256
  br i1 %386, label %387, label %390

387:                                              ; preds = %383
  %388 = trunc i64 %385 to i32
  %389 = add i32 %388, -1
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.176, i32 noundef %389, ptr noundef nonnull %373) #15
  br label %400

390:                                              ; preds = %380, %383
  %391 = phi i8 [ 32, %383 ], [ 45, %380 ]
  store i8 %391, ptr %381, align 1, !tbaa !17
  br label %392

392:                                              ; preds = %390, %380
  %393 = getelementptr inbounds i8, ptr %381, i64 1
  br label %380, !llvm.loop !247

394:                                              ; preds = %380
  %395 = getelementptr inbounds i8, ptr %381, i64 -1
  %396 = load i8, ptr %395, align 1, !tbaa !17
  %397 = icmp eq i8 %396, 32
  br i1 %397, label %398, label %399

398:                                              ; preds = %394
  store i8 0, ptr %395, align 1, !tbaa !17
  br label %399

399:                                              ; preds = %398, %394
  call void @Perl_sv_catpv(ptr noundef %1, ptr noundef nonnull %373) #15
  br label %400

400:                                              ; preds = %367, %399, %387
  call void @Perl_safesysfree(ptr noundef %366) #15
  %401 = load ptr, ptr %8, align 8, !tbaa !5
  %402 = getelementptr inbounds %struct.sv, ptr %401, i64 0, i32 1
  %403 = load i32, ptr %402, align 8, !tbaa !37
  %404 = icmp ugt i32 %403, 1
  br i1 %404, label %405, label %407

405:                                              ; preds = %400
  %406 = add i32 %403, -1
  store i32 %406, ptr %402, align 8, !tbaa !37
  br label %408

407:                                              ; preds = %400
  call void @Perl_sv_free2(ptr noundef nonnull %401, i32 noundef %403) #15
  br label %408

408:                                              ; preds = %407, %405, %358
  %409 = load ptr, ptr %9, align 8
  %410 = icmp ne ptr %409, null
  %411 = select i1 %304, i1 %410, i1 false
  %412 = icmp ne ptr %409, @PL_sv_undef
  %413 = select i1 %411, i1 %412, i1 false
  br i1 %413, label %414, label %428

414:                                              ; preds = %408
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #15
  call void @Perl_sv_catpvn_flags(ptr noundef %1, ptr noundef nonnull @.str.177, i64 noundef 13, i32 noundef 2) #15
  %415 = load ptr, ptr %9, align 8, !tbaa !5
  call fastcc void @S_invlist_iterinit(ptr noundef %415)
  br label %416

416:                                              ; preds = %420, %414
  %417 = phi i32 [ 256, %414 ], [ %423, %420 ]
  %418 = load ptr, ptr %9, align 8, !tbaa !5
  %419 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef %418, ptr noundef nonnull %10, ptr noundef nonnull %11)
  br i1 %419, label %420, label %426

420:                                              ; preds = %416
  %421 = load i64, ptr %10, align 8, !tbaa !9
  %422 = load i64, ptr %11, align 8, !tbaa !9
  call fastcc void @S_put_range(ptr noundef %1, i64 noundef %421, i64 noundef %422, i1 noundef zeroext false)
  %423 = add nsw i32 %417, -1
  %424 = icmp eq i32 %417, 0
  br i1 %424, label %425, label %416, !llvm.loop !248

425:                                              ; preds = %420
  call void @Perl_sv_catpvn_flags(ptr noundef %1, ptr noundef nonnull @.str.20, i64 noundef 3, i32 noundef 2) #15
  br label %426

426:                                              ; preds = %416, %425
  %427 = load ptr, ptr %9, align 8, !tbaa !5
  call fastcc void @S_invlist_iterfinish(ptr noundef %427)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #15
  br label %428

428:                                              ; preds = %426, %408
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #15
  br label %429

429:                                              ; preds = %354, %428, %337
  %430 = load ptr, ptr %7, align 8, !tbaa !5
  %431 = icmp eq ptr %430, null
  br i1 %431, label %439, label %432

432:                                              ; preds = %429
  %433 = getelementptr inbounds %struct.sv, ptr %430, i64 0, i32 1
  %434 = load i32, ptr %433, align 8, !tbaa !37
  %435 = icmp ugt i32 %434, 1
  br i1 %435, label %436, label %438

436:                                              ; preds = %432
  %437 = add i32 %434, -1
  store i32 %437, ptr %433, align 8, !tbaa !37
  br label %439

438:                                              ; preds = %432
  call void @Perl_sv_free2(ptr noundef nonnull %430, i32 noundef %434) #15
  br label %439

439:                                              ; preds = %429, %436, %438
  %440 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 1), align 8, !tbaa !5
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.178, ptr noundef %440) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #15
  br label %481

441:                                              ; preds = %251, %251
  %442 = load i8, ptr %2, align 2, !tbaa !143
  %443 = shl i8 %442, 1
  %444 = icmp ult i8 %443, 32
  br i1 %444, label %445, label %456

445:                                              ; preds = %441
  %446 = zext i8 %443 to i64
  %447 = getelementptr inbounds [32 x ptr], ptr @my_regprop.anyofs, i64 0, i64 %446
  %448 = load ptr, ptr %447, align 16, !tbaa !5
  %449 = load i8, ptr %448, align 1, !tbaa !17
  %450 = icmp eq i8 %449, 91
  br i1 %450, label %452, label %451

451:                                              ; preds = %445
  tail call void @Perl_sv_catpv(ptr noundef %1, ptr noundef nonnull @.str.154) #15
  br label %452

452:                                              ; preds = %451, %445
  tail call void @Perl_sv_catpv(ptr noundef %1, ptr noundef nonnull %448) #15
  %453 = load i8, ptr %448, align 1, !tbaa !17
  %454 = icmp eq i8 %453, 91
  br i1 %454, label %481, label %455

455:                                              ; preds = %452
  tail call void @Perl_sv_catpv(ptr noundef %1, ptr noundef nonnull @.str.52) #15
  br label %481

456:                                              ; preds = %441
  %457 = zext i8 %443 to i32
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.179, i32 noundef %457) #15
  br label %481

458:                                              ; preds = %251
  %459 = and i8 %57, -5
  %460 = icmp eq i8 %459, 8
  br i1 %460, label %461, label %466

461:                                              ; preds = %458
  %462 = load i8, ptr %2, align 2, !tbaa !143
  %463 = zext i8 %462 to i64
  %464 = shl i64 %463, 2
  %465 = call ptr @llvm.load.relative.i64(ptr @reltable.my_regprop, i64 %464)
  tail call void @Perl_sv_catpv(ptr noundef %1, ptr noundef %465) #15
  br label %481

466:                                              ; preds = %458
  %467 = icmp eq i8 %57, 62
  %468 = add i8 %54, -63
  %469 = icmp ult i8 %468, 2
  %470 = and i1 %467, %469
  br i1 %470, label %471, label %475

471:                                              ; preds = %466
  %472 = load i8, ptr %2, align 2, !tbaa !143
  %473 = zext i8 %472 to i32
  %474 = sub nsw i32 0, %473
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.155, i32 noundef %474) #15
  br label %481

475:                                              ; preds = %466
  %476 = icmp eq i8 %54, 2
  br i1 %476, label %477, label %481

477:                                              ; preds = %475
  %478 = load i8, ptr %2, align 2, !tbaa !143
  %479 = icmp eq i8 %478, 0
  %480 = select i1 %479, ptr @.str.170, ptr @.str.184
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1, ptr noundef nonnull @.str.183, ptr noundef nonnull %480) #15
  br label %481

481:                                              ; preds = %456, %455, %452, %269, %281, %276, %216, %239, %240, %232, %112, %120, %139, %294, %471, %477, %475, %461, %439, %283, %286, %129, %58
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  ret void
}

declare ptr @Perl_newSVpvn(ptr noundef, i64 noundef) local_unnamed_addr #2

declare void @Perl_push_scope() local_unnamed_addr #2

declare void @Perl_deb(ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_ssc_init(ptr noundef readonly %0, ptr noundef %1) unnamed_addr #0 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 1053) #15
  br label %5

5:                                                ; preds = %2, %4
  %6 = icmp eq ptr %1, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %5
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(56) %1, i8 0, i64 56, i1 false)
  %8 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 1
  store i8 19, ptr %8, align 1, !tbaa !181
  %9 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 2
  store i16 1, ptr %9, align 2, !tbaa !182
  %10 = getelementptr inbounds %struct.regnode_1, ptr %1, i64 0, i32 3
  store i32 -1, ptr %10, align 4, !tbaa !148
  tail call fastcc void @S_ssc_anything(ptr noundef nonnull %1)
  br label %12

11:                                               ; preds = %5
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1053) #15
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4294967296 dereferenceable(56) null, i8 0, i64 56, i1 false)
  store i8 19, ptr inttoptr (i64 1 to ptr), align 1, !tbaa !181
  store i16 1, ptr inttoptr (i64 2 to ptr), align 2, !tbaa !182
  store i32 -1, ptr inttoptr (i64 4 to ptr), align 4, !tbaa !148
  tail call fastcc void @S_ssc_anything(ptr noundef null)
  br label %12

12:                                               ; preds = %7, %11
  %13 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 34
  %14 = load i32, ptr %13, align 8, !tbaa !52
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i32 0, i32 536870911
  %17 = getelementptr inbounds %struct.regnode_charclass_class, ptr %1, i64 0, i32 5
  store i32 %16, ptr %17, align 4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i64 @S_study_chunk(ptr noundef %0, ptr nocapture noundef %1, ptr noundef %2, ptr noundef writeonly %3, ptr noundef %4, ptr noundef %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9) unnamed_addr #0 {
  %11 = alloca ptr, align 8
  %12 = alloca [40 x i8], align 16
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca ptr, align 8
  %17 = alloca %struct.scan_data_t, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca %struct.regnode_ssc, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca %struct.regnode_ssc, align 8
  %26 = alloca i64, align 8
  %27 = alloca %struct.regnode_ssc, align 8
  %28 = alloca ptr, align 8
  %29 = alloca i64, align 8
  %30 = alloca ptr, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca ptr, align 8
  %34 = alloca %struct.regnode_ssc, align 8
  %35 = alloca %struct.regnode_ssc, align 8
  %36 = alloca i64, align 8
  %37 = alloca i64, align 8
  %38 = alloca %struct.regnode_ssc, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %16) #15
  %39 = load ptr, ptr %1, align 8, !tbaa !5
  store ptr %39, ptr %16, align 8, !tbaa !5
  %40 = and i32 %8, 1024
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %10
  %43 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 16
  %44 = load i32, ptr %43, align 8, !tbaa !185
  %45 = and i32 %44, 64
  %46 = icmp ne i32 %45, 0
  br label %47

47:                                               ; preds = %42, %10
  %48 = phi i1 [ false, %10 ], [ %46, %42 ]
  %49 = zext i1 %48 to i32
  %50 = getelementptr inbounds %struct.regnode, ptr %39, i64 0, i32 1
  %51 = load i8, ptr %50, align 1, !tbaa !141
  %52 = icmp eq i8 %51, 49
  br i1 %52, label %53, label %56

53:                                               ; preds = %47
  %54 = getelementptr inbounds %struct.regnode_1, ptr %39, i64 0, i32 3
  %55 = load i32, ptr %54, align 4, !tbaa !148
  br label %56

56:                                               ; preds = %47, %53
  %57 = phi i32 [ %55, %53 ], [ 0, %47 ]
  call void @llvm.lifetime.start.p0(i64 152, ptr nonnull %17) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %18)
  store volatile i64 0, ptr %18, align 8, !tbaa !9
  %58 = load volatile i64, ptr %18, align 8, !tbaa !9
  %59 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %60 = icmp eq ptr %59, null
  br i1 %60, label %80, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.sv, ptr %59, i64 0, i32 2
  %63 = load i32, ptr %62, align 4, !tbaa !13
  %64 = and i32 %63, 256
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %61
  tail call void @Perl_sv_setuv(ptr noundef nonnull %59, i64 noundef 65288) #15
  %67 = load i32, ptr %62, align 4, !tbaa !13
  br label %68

68:                                               ; preds = %66, %61
  %69 = phi i32 [ %67, %66 ], [ %63, %61 ]
  %70 = and i32 %69, 2097408
  %71 = icmp eq i32 %70, 256
  br i1 %71, label %72, label %76

72:                                               ; preds = %68
  %73 = load ptr, ptr %59, align 8, !tbaa !16
  %74 = getelementptr inbounds %struct.xpviv, ptr %73, i64 0, i32 4
  %75 = load i64, ptr %74, align 8, !tbaa !17
  br label %78

76:                                               ; preds = %68
  %77 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %59, i32 noundef 2) #15
  br label %78

78:                                               ; preds = %76, %72
  %79 = phi i64 [ %75, %72 ], [ %77, %76 ]
  store volatile i64 %79, ptr %18, align 8, !tbaa !9
  br label %80

80:                                               ; preds = %78, %56
  %81 = icmp eq ptr %0, null
  br i1 %81, label %82, label %83

82:                                               ; preds = %80
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 3785) #15
  br label %83

83:                                               ; preds = %82, %80
  %84 = icmp eq ptr %2, null
  br i1 %84, label %85, label %86

85:                                               ; preds = %83
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.241, i32 noundef 3785) #15
  br label %86

86:                                               ; preds = %83, %85
  %87 = icmp eq ptr %3, null
  br i1 %87, label %88, label %89

88:                                               ; preds = %86
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.242, i32 noundef 3785) #15
  br label %89

89:                                               ; preds = %86, %88
  %90 = icmp eq ptr %4, null
  br i1 %90, label %91, label %92

91:                                               ; preds = %89
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.243, i32 noundef 3785) #15
  br label %92

92:                                               ; preds = %89, %91
  %93 = icmp eq i32 %9, 0
  br i1 %93, label %94, label %102

94:                                               ; preds = %92, %99
  %95 = phi ptr [ %100, %99 ], [ %39, %92 ]
  %96 = getelementptr inbounds %struct.regnode, ptr %95, i64 0, i32 1
  %97 = load i8, ptr %96, align 1, !tbaa !141
  %98 = icmp eq i8 %97, 49
  br i1 %98, label %99, label %102

99:                                               ; preds = %94
  %100 = tail call ptr @Perl_regnext(ptr noundef nonnull %95) #15
  %101 = icmp eq ptr %100, null
  br i1 %101, label %102, label %94

102:                                              ; preds = %94, %99, %92
  %103 = phi ptr [ %39, %92 ], [ %95, %94 ], [ null, %99 ]
  %104 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 50
  %105 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %106 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 31
  %107 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 32
  %108 = icmp ne ptr %5, null
  %109 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 1
  %110 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 16
  %111 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 17
  %112 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 18
  %113 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 2
  %114 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 3
  %115 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 4
  %116 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 5
  %117 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 6
  %118 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 7
  %119 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 8
  %120 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 11
  %121 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 12
  %122 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 13
  %123 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 4
  %124 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 51
  %125 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %126 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %127 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %128 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 24
  %129 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 29
  %130 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 22
  %131 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 23
  %132 = getelementptr inbounds %struct.scan_data_t, ptr %5, i64 0, i32 19
  %133 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 43
  %134 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 44
  %135 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 42
  %136 = getelementptr inbounds %struct.regnode_ssc, ptr %22, i64 0, i32 1
  %137 = getelementptr inbounds %struct.regnode_ssc, ptr %22, i64 0, i32 2
  %138 = getelementptr inbounds %struct.regnode_1, ptr %22, i64 0, i32 3
  %139 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 34
  %140 = getelementptr inbounds %struct.regnode_charclass_class, ptr %22, i64 0, i32 5
  %141 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 18
  %142 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 17
  %143 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 1
  %144 = getelementptr inbounds %struct.regnode_ssc, ptr %25, i64 0, i32 1
  %145 = getelementptr inbounds %struct.regnode_ssc, ptr %25, i64 0, i32 2
  %146 = getelementptr inbounds %struct.regnode_1, ptr %25, i64 0, i32 3
  %147 = getelementptr inbounds %struct.regnode_charclass_class, ptr %25, i64 0, i32 5
  %148 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 19
  %149 = getelementptr inbounds %struct.scan_data_t, ptr %17, i64 0, i32 16
  %150 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %151 = getelementptr inbounds %struct.regnode_ssc, ptr %27, i64 0, i32 1
  %152 = getelementptr inbounds %struct.regnode_ssc, ptr %27, i64 0, i32 2
  %153 = getelementptr inbounds %struct.regnode_1, ptr %27, i64 0, i32 3
  %154 = getelementptr inbounds %struct.regnode_charclass_class, ptr %27, i64 0, i32 5
  %155 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %156 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %157 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %158 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 9
  %159 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %160 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  br label %161

161:                                              ; preds = %7204, %102
  %162 = phi ptr [ %39, %102 ], [ %7207, %7204 ]
  %163 = phi ptr [ null, %102 ], [ %7215, %7204 ]
  %164 = phi i64 [ 9223372036854775807, %102 ], [ %6867, %7204 ]
  %165 = phi ptr [ null, %102 ], [ %6868, %7204 ]
  %166 = phi i32 [ %57, %102 ], [ %6869, %7204 ]
  %167 = phi i32 [ 0, %102 ], [ %6870, %7204 ]
  %168 = phi i32 [ %49, %102 ], [ %6871, %7204 ]
  %169 = phi i64 [ 0, %102 ], [ %6872, %7204 ]
  %170 = phi i32 [ 0, %102 ], [ %6873, %7204 ]
  %171 = phi i64 [ 0, %102 ], [ %6874, %7204 ]
  %172 = phi i32 [ %9, %102 ], [ %6880, %7204 ]
  %173 = phi i32 [ %8, %102 ], [ %6876, %7204 ]
  %174 = phi ptr [ null, %102 ], [ %6877, %7204 ]
  %175 = phi i32 [ %7, %102 ], [ %7211, %7204 ]
  %176 = phi i32 [ %6, %102 ], [ %7209, %7204 ]
  %177 = phi ptr [ %4, %102 ], [ %7205, %7204 ]
  %178 = load i32, ptr %104, align 8, !tbaa !137
  %179 = add i32 %178, 1
  store i32 %179, ptr %104, align 8, !tbaa !137
  %180 = load volatile i64, ptr %18, align 8, !tbaa !9
  %181 = and i64 %180, 1048578
  %182 = icmp eq i64 %181, 1048578
  br i1 %182, label %183, label %257

183:                                              ; preds = %161
  %184 = call ptr @Perl_PerlIO_stderr() #15
  %185 = shl i32 %172, 1
  %186 = sext i32 %176 to i64
  %187 = load i32, ptr %104, align 8, !tbaa !137
  %188 = zext i32 %187 to i64
  %189 = zext i32 %172 to i64
  %190 = zext i32 %175 to i64
  %191 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %184, ptr noundef nonnull @.str.244, i32 noundef %185, ptr noundef nonnull @.str.8, i64 noundef %186, i64 noundef %188, i64 noundef %189, i64 noundef %190, ptr noundef %162, ptr noundef %177) #15
  %192 = icmp eq i32 %175, 0
  br i1 %192, label %254, label %193

193:                                              ; preds = %183, %252
  %194 = phi i32 [ %247, %252 ], [ 0, %183 ]
  %195 = load i32, ptr %105, align 8, !tbaa !109
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %246, label %197

197:                                              ; preds = %193
  %198 = load ptr, ptr %106, align 8, !tbaa !115
  %199 = load i32, ptr %107, align 8, !tbaa !116
  %200 = mul i32 %199, %194
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds i8, ptr %198, i64 %201
  %203 = icmp eq i32 %194, 0
  %204 = add i32 %194, -1
  %205 = mul i32 %199, %204
  %206 = zext i32 %205 to i64
  %207 = getelementptr inbounds i8, ptr %198, i64 %206
  br i1 %203, label %208, label %222

208:                                              ; preds = %197, %219
  %209 = phi i32 [ %220, %219 ], [ 0, %197 ]
  %210 = lshr i32 %209, 3
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds i8, ptr %202, i64 %211
  %213 = load i8, ptr %212, align 1, !tbaa !17
  %214 = zext i8 %213 to i32
  %215 = and i32 %209, 7
  %216 = shl nuw nsw i32 1, %215
  %217 = and i32 %216, %214
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %239

219:                                              ; preds = %208
  %220 = add nuw i32 %209, 1
  %221 = icmp eq i32 %220, %195
  br i1 %221, label %246, label %208, !llvm.loop !249

222:                                              ; preds = %197, %243
  %223 = phi i32 [ %244, %243 ], [ 0, %197 ]
  %224 = lshr i32 %223, 3
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds i8, ptr %202, i64 %225
  %227 = load i8, ptr %226, align 1, !tbaa !17
  %228 = zext i8 %227 to i32
  %229 = and i32 %223, 7
  %230 = shl nuw nsw i32 1, %229
  %231 = and i32 %230, %228
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %243, label %233

233:                                              ; preds = %222
  %234 = getelementptr inbounds i8, ptr %207, i64 %225
  %235 = load i8, ptr %234, align 1, !tbaa !17
  %236 = zext i8 %235 to i32
  %237 = and i32 %230, %236
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %243

239:                                              ; preds = %233, %208
  %240 = phi i32 [ %209, %208 ], [ %223, %233 ]
  %241 = call ptr @Perl_PerlIO_stderr() #15
  %242 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %241, ptr noundef nonnull @.str.245, i32 noundef %240) #15
  br label %246

243:                                              ; preds = %222, %233
  %244 = add nuw i32 %223, 1
  %245 = icmp eq i32 %244, %195
  br i1 %245, label %246, label %222, !llvm.loop !249

246:                                              ; preds = %243, %219, %193, %239
  %247 = add nuw i32 %194, 1
  %248 = icmp ult i32 %247, %175
  br i1 %248, label %249, label %252

249:                                              ; preds = %246
  %250 = call ptr @Perl_PerlIO_stderr() #15
  %251 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %250, ptr noundef nonnull @.str.161) #15
  br label %252

252:                                              ; preds = %246, %249
  %253 = icmp eq i32 %247, %175
  br i1 %253, label %254, label %193, !llvm.loop !250

254:                                              ; preds = %252, %183
  %255 = call ptr @Perl_PerlIO_stderr() #15
  %256 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %255, ptr noundef nonnull @.str.53) #15
  br label %257

257:                                              ; preds = %254, %161
  %258 = icmp eq ptr %162, null
  br i1 %258, label %6865, label %259

259:                                              ; preds = %257, %6847
  %260 = phi ptr [ %6863, %6847 ], [ %162, %257 ]
  %261 = phi ptr [ %6848, %6847 ], [ %177, %257 ]
  %262 = phi i32 [ %6849, %6847 ], [ %176, %257 ]
  %263 = phi i32 [ %6850, %6847 ], [ %175, %257 ]
  %264 = phi ptr [ %6851, %6847 ], [ %174, %257 ]
  %265 = phi i32 [ %6852, %6847 ], [ %173, %257 ]
  %266 = phi i32 [ %6853, %6847 ], [ %172, %257 ]
  %267 = phi i64 [ %6854, %6847 ], [ %171, %257 ]
  %268 = phi i32 [ %6855, %6847 ], [ %170, %257 ]
  %269 = phi i64 [ %6856, %6847 ], [ %169, %257 ]
  %270 = phi i32 [ %6857, %6847 ], [ %168, %257 ]
  %271 = phi i32 [ %6858, %6847 ], [ %167, %257 ]
  %272 = phi i32 [ %6859, %6847 ], [ %166, %257 ]
  %273 = phi ptr [ %6860, %6847 ], [ %165, %257 ]
  %274 = phi i64 [ %6861, %6847 ], [ %164, %257 ]
  %275 = phi ptr [ %6862, %6847 ], [ %163, %257 ]
  %276 = getelementptr inbounds %struct.regnode, ptr %260, i64 0, i32 1
  %277 = load i8, ptr %276, align 1, !tbaa !141
  %278 = icmp ne i8 %277, 0
  %279 = icmp ult ptr %260, %261
  %280 = select i1 %278, i1 %279, i1 false
  br i1 %280, label %281, label %6865

281:                                              ; preds = %259
  %282 = load volatile i64, ptr %18, align 8, !tbaa !9
  %283 = and i64 %282, 1048578
  %284 = icmp eq i64 %283, 1048578
  %285 = and i1 %108, %284
  br i1 %285, label %286, label %464

286:                                              ; preds = %281
  %287 = call ptr @Perl_PerlIO_stderr() #15
  %288 = shl nsw i32 %266, 1
  %289 = load i64, ptr %5, align 8, !tbaa !251
  %290 = load i64, ptr %109, align 8, !tbaa !252
  %291 = load i32, ptr %110, align 8, !tbaa !185
  %292 = sext i32 %291 to i64
  %293 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %287, ptr noundef nonnull @.str.246, i32 noundef %288, ptr noundef nonnull @.str.8, i64 noundef %289, i64 noundef %290, i64 noundef %292) #15
  %294 = load i32, ptr %110, align 8, !tbaa !185
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %420, label %296

296:                                              ; preds = %286
  %297 = call ptr @Perl_PerlIO_stderr() #15
  %298 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %297, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.35) #15
  %299 = load i32, ptr %110, align 8, !tbaa !185
  %300 = and i32 %299, 16
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %306, label %302

302:                                              ; preds = %296
  %303 = call ptr @Perl_PerlIO_stderr() #15
  %304 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %303, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.37) #15
  %305 = load i32, ptr %110, align 8, !tbaa !185
  br label %306

306:                                              ; preds = %302, %296
  %307 = phi i32 [ %305, %302 ], [ %299, %296 ]
  %308 = and i32 %307, 32
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %314, label %310

310:                                              ; preds = %306
  %311 = call ptr @Perl_PerlIO_stderr() #15
  %312 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %311, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.38) #15
  %313 = load i32, ptr %110, align 8, !tbaa !185
  br label %314

314:                                              ; preds = %310, %306
  %315 = phi i32 [ %313, %310 ], [ %307, %306 ]
  %316 = and i32 %315, 64
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %322, label %318

318:                                              ; preds = %314
  %319 = call ptr @Perl_PerlIO_stderr() #15
  %320 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %319, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.39) #15
  %321 = load i32, ptr %110, align 8, !tbaa !185
  br label %322

322:                                              ; preds = %318, %314
  %323 = phi i32 [ %321, %318 ], [ %315, %314 ]
  %324 = and i32 %323, 128
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %330, label %326

326:                                              ; preds = %322
  %327 = call ptr @Perl_PerlIO_stderr() #15
  %328 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %327, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.40) #15
  %329 = load i32, ptr %110, align 8, !tbaa !185
  br label %330

330:                                              ; preds = %326, %322
  %331 = phi i32 [ %329, %326 ], [ %323, %322 ]
  %332 = and i32 %331, 256
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %338, label %334

334:                                              ; preds = %330
  %335 = call ptr @Perl_PerlIO_stderr() #15
  %336 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %335, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.41) #15
  %337 = load i32, ptr %110, align 8, !tbaa !185
  br label %338

338:                                              ; preds = %334, %330
  %339 = phi i32 [ %337, %334 ], [ %331, %330 ]
  %340 = and i32 %339, 512
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %346, label %342

342:                                              ; preds = %338
  %343 = call ptr @Perl_PerlIO_stderr() #15
  %344 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %343, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.42) #15
  %345 = load i32, ptr %110, align 8, !tbaa !185
  br label %346

346:                                              ; preds = %342, %338
  %347 = phi i32 [ %345, %342 ], [ %339, %338 ]
  %348 = and i32 %347, 1024
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %354, label %350

350:                                              ; preds = %346
  %351 = call ptr @Perl_PerlIO_stderr() #15
  %352 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %351, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.43) #15
  %353 = load i32, ptr %110, align 8, !tbaa !185
  br label %354

354:                                              ; preds = %350, %346
  %355 = phi i32 [ %353, %350 ], [ %347, %346 ]
  %356 = and i32 %355, 2048
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %362, label %358

358:                                              ; preds = %354
  %359 = call ptr @Perl_PerlIO_stderr() #15
  %360 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %359, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.44) #15
  %361 = load i32, ptr %110, align 8, !tbaa !185
  br label %362

362:                                              ; preds = %358, %354
  %363 = phi i32 [ %361, %358 ], [ %355, %354 ]
  %364 = and i32 %363, 4096
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %370, label %366

366:                                              ; preds = %362
  %367 = call ptr @Perl_PerlIO_stderr() #15
  %368 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %367, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.45) #15
  %369 = load i32, ptr %110, align 8, !tbaa !185
  br label %370

370:                                              ; preds = %366, %362
  %371 = phi i32 [ %369, %366 ], [ %363, %362 ]
  %372 = and i32 %371, 6144
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %378, label %374

374:                                              ; preds = %370
  %375 = call ptr @Perl_PerlIO_stderr() #15
  %376 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %375, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.46) #15
  %377 = load i32, ptr %110, align 8, !tbaa !185
  br label %378

378:                                              ; preds = %374, %370
  %379 = phi i32 [ %377, %374 ], [ %371, %370 ]
  %380 = and i32 %379, 8192
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %386, label %382

382:                                              ; preds = %378
  %383 = call ptr @Perl_PerlIO_stderr() #15
  %384 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %383, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.47) #15
  %385 = load i32, ptr %110, align 8, !tbaa !185
  br label %386

386:                                              ; preds = %382, %378
  %387 = phi i32 [ %385, %382 ], [ %379, %378 ]
  %388 = and i32 %387, 16384
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %394, label %390

390:                                              ; preds = %386
  %391 = call ptr @Perl_PerlIO_stderr() #15
  %392 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %391, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.48) #15
  %393 = load i32, ptr %110, align 8, !tbaa !185
  br label %394

394:                                              ; preds = %390, %386
  %395 = phi i32 [ %393, %390 ], [ %387, %386 ]
  %396 = and i32 %395, 32768
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %402, label %398

398:                                              ; preds = %394
  %399 = call ptr @Perl_PerlIO_stderr() #15
  %400 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %399, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.49) #15
  %401 = load i32, ptr %110, align 8, !tbaa !185
  br label %402

402:                                              ; preds = %398, %394
  %403 = phi i32 [ %401, %398 ], [ %395, %394 ]
  %404 = and i32 %403, 65536
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %410, label %406

406:                                              ; preds = %402
  %407 = call ptr @Perl_PerlIO_stderr() #15
  %408 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %407, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.50) #15
  %409 = load i32, ptr %110, align 8, !tbaa !185
  br label %410

410:                                              ; preds = %406, %402
  %411 = phi i32 [ %409, %406 ], [ %403, %402 ]
  %412 = and i32 %411, 131072
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %417, label %414

414:                                              ; preds = %410
  %415 = call ptr @Perl_PerlIO_stderr() #15
  %416 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %415, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.51) #15
  br label %417

417:                                              ; preds = %414, %410
  %418 = call ptr @Perl_PerlIO_stderr() #15
  %419 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %418, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.52) #15
  br label %420

420:                                              ; preds = %417, %286
  %421 = call ptr @Perl_PerlIO_stderr() #15
  %422 = load i32, ptr %111, align 4, !tbaa !253
  %423 = sext i32 %422 to i64
  %424 = load ptr, ptr %112, align 8, !tbaa !184
  %425 = icmp eq ptr %424, null
  br i1 %425, label %428, label %426

426:                                              ; preds = %420
  %427 = load i64, ptr %424, align 8, !tbaa !9
  br label %428

428:                                              ; preds = %420, %426
  %429 = phi i64 [ %427, %426 ], [ -1, %420 ]
  %430 = icmp eq i32 %270, 0
  %431 = select i1 %430, ptr @.str.8, ptr @.str.248
  %432 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %421, ptr noundef nonnull @.str.247, i64 noundef %423, i64 noundef %429, ptr noundef nonnull %431) #15
  %433 = load ptr, ptr %113, align 8, !tbaa !179
  %434 = icmp eq ptr %433, null
  br i1 %434, label %461, label %435

435:                                              ; preds = %428
  %436 = call ptr @Perl_PerlIO_stderr() #15
  %437 = load ptr, ptr %113, align 8, !tbaa !179
  %438 = getelementptr inbounds %struct.sv, ptr %437, i64 0, i32 3
  %439 = load ptr, ptr %438, align 8, !tbaa !17
  %440 = load i64, ptr %114, align 8, !tbaa !254
  %441 = load i64, ptr %115, align 8, !tbaa !255
  %442 = load i64, ptr %116, align 8, !tbaa !256
  %443 = load ptr, ptr %117, align 8, !tbaa !180
  %444 = icmp ne ptr %443, null
  %445 = icmp eq ptr %443, %118
  %446 = and i1 %444, %445
  %447 = select i1 %446, ptr @.str.250, ptr @.str.8
  %448 = load ptr, ptr %118, align 8, !tbaa !176
  %449 = getelementptr inbounds %struct.sv, ptr %448, i64 0, i32 3
  %450 = load ptr, ptr %449, align 8, !tbaa !17
  %451 = load i64, ptr %119, align 8, !tbaa !187
  %452 = icmp eq ptr %443, %120
  %453 = and i1 %444, %452
  %454 = select i1 %453, ptr @.str.250, ptr @.str.8
  %455 = load ptr, ptr %120, align 8, !tbaa !178
  %456 = getelementptr inbounds %struct.sv, ptr %455, i64 0, i32 3
  %457 = load ptr, ptr %456, align 8, !tbaa !17
  %458 = load i64, ptr %121, align 8, !tbaa !186
  %459 = load i64, ptr %122, align 8, !tbaa !192
  %460 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %436, ptr noundef nonnull @.str.249, ptr noundef %439, i64 noundef %440, i64 noundef %441, i64 noundef %442, ptr noundef nonnull %447, ptr noundef %450, i64 noundef %451, ptr noundef nonnull %454, ptr noundef %457, i64 noundef %458, i64 noundef %459) #15
  br label %461

461:                                              ; preds = %435, %428
  %462 = call ptr @Perl_PerlIO_stderr() #15
  %463 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %462, ptr noundef nonnull @.str.53) #15
  br label %464

464:                                              ; preds = %281, %461
  %465 = load volatile i64, ptr %18, align 8, !tbaa !9
  %466 = and i64 %465, 2
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %602, label %468

468:                                              ; preds = %464
  %469 = call ptr @Perl_regnext(ptr noundef nonnull %260) #15
  %470 = load ptr, ptr %123, align 8, !tbaa !129
  %471 = load ptr, ptr %124, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %470, ptr noundef %471, ptr noundef nonnull %260, ptr noundef null, ptr noundef %0)
  %472 = call ptr @Perl_PerlIO_stderr() #15
  %473 = shl nsw i32 %266, 1
  %474 = load ptr, ptr %125, align 8, !tbaa !131
  %475 = ptrtoint ptr %260 to i64
  %476 = ptrtoint ptr %474 to i64
  %477 = sub i64 %475, %476
  %478 = lshr exact i64 %477, 2
  %479 = trunc i64 %478 to i32
  %480 = load ptr, ptr %124, align 8, !tbaa !56
  %481 = getelementptr inbounds %struct.sv, ptr %480, i64 0, i32 2
  %482 = load i32, ptr %481, align 4, !tbaa !13
  %483 = and i32 %482, 2098176
  %484 = icmp eq i32 %483, 1024
  br i1 %484, label %485, label %488

485:                                              ; preds = %468
  %486 = getelementptr inbounds %struct.sv, ptr %480, i64 0, i32 3
  %487 = load ptr, ptr %486, align 8, !tbaa !17
  br label %490

488:                                              ; preds = %468
  %489 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %480, ptr noundef null, i32 noundef 34) #15
  br label %490

490:                                              ; preds = %488, %485
  %491 = phi ptr [ %487, %485 ], [ %489, %488 ]
  %492 = icmp eq ptr %469, null
  br i1 %492, label %500, label %493

493:                                              ; preds = %490
  %494 = load ptr, ptr %125, align 8, !tbaa !131
  %495 = ptrtoint ptr %469 to i64
  %496 = ptrtoint ptr %494 to i64
  %497 = sub i64 %495, %496
  %498 = lshr exact i64 %497, 2
  %499 = trunc i64 %498 to i32
  br label %500

500:                                              ; preds = %490, %493
  %501 = phi i32 [ %499, %493 ], [ 0, %490 ]
  %502 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %472, ptr noundef nonnull @.str.251, i32 noundef %473, ptr noundef nonnull @.str.8, i32 noundef %479, ptr noundef %491, i32 noundef %501) #15
  %503 = icmp eq i32 %265, 0
  br i1 %503, label %599, label %504

504:                                              ; preds = %500
  %505 = call ptr @Perl_PerlIO_stderr() #15
  %506 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %505, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.35) #15
  %507 = and i32 %265, 16
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %512, label %509

509:                                              ; preds = %504
  %510 = call ptr @Perl_PerlIO_stderr() #15
  %511 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %510, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.37) #15
  br label %512

512:                                              ; preds = %509, %504
  %513 = and i32 %265, 32
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %518, label %515

515:                                              ; preds = %512
  %516 = call ptr @Perl_PerlIO_stderr() #15
  %517 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %516, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.38) #15
  br label %518

518:                                              ; preds = %515, %512
  %519 = and i32 %265, 64
  %520 = icmp eq i32 %519, 0
  br i1 %520, label %524, label %521

521:                                              ; preds = %518
  %522 = call ptr @Perl_PerlIO_stderr() #15
  %523 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %522, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.39) #15
  br label %524

524:                                              ; preds = %521, %518
  %525 = and i32 %265, 128
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %530, label %527

527:                                              ; preds = %524
  %528 = call ptr @Perl_PerlIO_stderr() #15
  %529 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %528, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.40) #15
  br label %530

530:                                              ; preds = %527, %524
  %531 = and i32 %265, 256
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %536, label %533

533:                                              ; preds = %530
  %534 = call ptr @Perl_PerlIO_stderr() #15
  %535 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %534, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.41) #15
  br label %536

536:                                              ; preds = %533, %530
  %537 = and i32 %265, 512
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %542, label %539

539:                                              ; preds = %536
  %540 = call ptr @Perl_PerlIO_stderr() #15
  %541 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %540, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.42) #15
  br label %542

542:                                              ; preds = %539, %536
  %543 = and i32 %265, 1024
  %544 = icmp eq i32 %543, 0
  br i1 %544, label %548, label %545

545:                                              ; preds = %542
  %546 = call ptr @Perl_PerlIO_stderr() #15
  %547 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %546, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.43) #15
  br label %548

548:                                              ; preds = %545, %542
  %549 = and i32 %265, 2048
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %554, label %551

551:                                              ; preds = %548
  %552 = call ptr @Perl_PerlIO_stderr() #15
  %553 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %552, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.44) #15
  br label %554

554:                                              ; preds = %551, %548
  %555 = and i32 %265, 4096
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %560, label %557

557:                                              ; preds = %554
  %558 = call ptr @Perl_PerlIO_stderr() #15
  %559 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %558, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.45) #15
  br label %560

560:                                              ; preds = %557, %554
  %561 = and i32 %265, 6144
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %566, label %563

563:                                              ; preds = %560
  %564 = call ptr @Perl_PerlIO_stderr() #15
  %565 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %564, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.46) #15
  br label %566

566:                                              ; preds = %563, %560
  %567 = and i32 %265, 8192
  %568 = icmp eq i32 %567, 0
  br i1 %568, label %572, label %569

569:                                              ; preds = %566
  %570 = call ptr @Perl_PerlIO_stderr() #15
  %571 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %570, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.47) #15
  br label %572

572:                                              ; preds = %569, %566
  %573 = and i32 %265, 16384
  %574 = icmp eq i32 %573, 0
  br i1 %574, label %578, label %575

575:                                              ; preds = %572
  %576 = call ptr @Perl_PerlIO_stderr() #15
  %577 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %576, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.48) #15
  br label %578

578:                                              ; preds = %575, %572
  %579 = and i32 %265, 32768
  %580 = icmp eq i32 %579, 0
  br i1 %580, label %584, label %581

581:                                              ; preds = %578
  %582 = call ptr @Perl_PerlIO_stderr() #15
  %583 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %582, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.49) #15
  br label %584

584:                                              ; preds = %581, %578
  %585 = and i32 %265, 65536
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %590, label %587

587:                                              ; preds = %584
  %588 = call ptr @Perl_PerlIO_stderr() #15
  %589 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %588, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.50) #15
  br label %590

590:                                              ; preds = %587, %584
  %591 = and i32 %265, 131072
  %592 = icmp eq i32 %591, 0
  br i1 %592, label %596, label %593

593:                                              ; preds = %590
  %594 = call ptr @Perl_PerlIO_stderr() #15
  %595 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %594, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.51) #15
  br label %596

596:                                              ; preds = %593, %590
  %597 = call ptr @Perl_PerlIO_stderr() #15
  %598 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %597, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.52) #15
  br label %599

599:                                              ; preds = %596, %500
  %600 = call ptr @Perl_PerlIO_stderr() #15
  %601 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %600, ptr noundef nonnull @.str.53) #15
  br label %602

602:                                              ; preds = %599, %464
  %603 = load i8, ptr %276, align 1, !tbaa !141
  %604 = zext i8 %603 to i64
  %605 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %604
  %606 = load i8, ptr %605, align 1, !tbaa !17
  %607 = icmp eq i8 %606, 31
  br i1 %607, label %608, label %2125

608:                                              ; preds = %602
  %609 = add i32 %266, 1
  %610 = call ptr @Perl_regnext(ptr noundef nonnull %260) #15
  %611 = load i8, ptr %260, align 2, !tbaa !205
  %612 = zext i8 %611 to i64
  %613 = add nuw nsw i64 %612, 3
  %614 = lshr i64 %613, 2
  %615 = add nuw nsw i64 %614, 1
  %616 = getelementptr inbounds %struct.regnode, ptr %260, i64 %615
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %14)
  store volatile i64 0, ptr %14, align 8, !tbaa !9
  %617 = load volatile i64, ptr %14, align 8, !tbaa !9
  %618 = call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %619 = icmp eq ptr %618, null
  br i1 %619, label %639, label %620

620:                                              ; preds = %608
  %621 = getelementptr inbounds %struct.sv, ptr %618, i64 0, i32 2
  %622 = load i32, ptr %621, align 4, !tbaa !13
  %623 = and i32 %622, 256
  %624 = icmp eq i32 %623, 0
  br i1 %624, label %625, label %627

625:                                              ; preds = %620
  call void @Perl_sv_setuv(ptr noundef nonnull %618, i64 noundef 65288) #15
  %626 = load i32, ptr %621, align 4, !tbaa !13
  br label %627

627:                                              ; preds = %625, %620
  %628 = phi i32 [ %626, %625 ], [ %622, %620 ]
  %629 = and i32 %628, 2097408
  %630 = icmp eq i32 %629, 256
  br i1 %630, label %631, label %635

631:                                              ; preds = %627
  %632 = load ptr, ptr %618, align 8, !tbaa !16
  %633 = getelementptr inbounds %struct.xpviv, ptr %632, i64 0, i32 4
  %634 = load i64, ptr %633, align 8, !tbaa !17
  br label %637

635:                                              ; preds = %627
  %636 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %618, i32 noundef 2) #15
  br label %637

637:                                              ; preds = %635, %631
  %638 = phi i64 [ %634, %631 ], [ %636, %635 ]
  store volatile i64 %638, ptr %14, align 8, !tbaa !9
  br label %639

639:                                              ; preds = %637, %608
  br i1 %81, label %640, label %641

640:                                              ; preds = %639
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 3441) #15
  br label %641

641:                                              ; preds = %640, %639
  %642 = load volatile i64, ptr %14, align 8, !tbaa !9
  %643 = and i64 %642, 2
  %644 = icmp eq i64 %643, 0
  br i1 %644, label %682, label %645

645:                                              ; preds = %641
  %646 = call ptr @Perl_regnext(ptr noundef nonnull %260) #15
  %647 = load ptr, ptr %123, align 8, !tbaa !129
  %648 = load ptr, ptr %124, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %647, ptr noundef %648, ptr noundef nonnull %260, ptr noundef null, ptr noundef %0)
  %649 = call ptr @Perl_PerlIO_stderr() #15
  %650 = shl nsw i32 %609, 1
  %651 = load ptr, ptr %125, align 8, !tbaa !131
  %652 = ptrtoint ptr %260 to i64
  %653 = ptrtoint ptr %651 to i64
  %654 = sub i64 %652, %653
  %655 = lshr exact i64 %654, 2
  %656 = trunc i64 %655 to i32
  %657 = load ptr, ptr %124, align 8, !tbaa !56
  %658 = getelementptr inbounds %struct.sv, ptr %657, i64 0, i32 2
  %659 = load i32, ptr %658, align 4, !tbaa !13
  %660 = and i32 %659, 2098176
  %661 = icmp eq i32 %660, 1024
  br i1 %661, label %662, label %665

662:                                              ; preds = %645
  %663 = getelementptr inbounds %struct.sv, ptr %657, i64 0, i32 3
  %664 = load ptr, ptr %663, align 8, !tbaa !17
  br label %667

665:                                              ; preds = %645
  %666 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %657, ptr noundef null, i32 noundef 34) #15
  br label %667

667:                                              ; preds = %665, %662
  %668 = phi ptr [ %664, %662 ], [ %666, %665 ]
  %669 = icmp eq ptr %646, null
  br i1 %669, label %677, label %670

670:                                              ; preds = %667
  %671 = load ptr, ptr %125, align 8, !tbaa !131
  %672 = ptrtoint ptr %646 to i64
  %673 = ptrtoint ptr %671 to i64
  %674 = sub i64 %672, %673
  %675 = lshr exact i64 %674, 2
  %676 = trunc i64 %675 to i32
  br label %677

677:                                              ; preds = %670, %667
  %678 = phi i32 [ %676, %670 ], [ 0, %667 ]
  %679 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %649, ptr noundef nonnull @.str.295, i32 noundef %650, ptr noundef nonnull @.str.8, i32 noundef %656, ptr noundef %668, i32 noundef %678) #15
  %680 = call ptr @Perl_PerlIO_stderr() #15
  %681 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %680, ptr noundef nonnull @.str.53) #15
  br label %682

682:                                              ; preds = %677, %641
  %683 = icmp eq ptr %610, null
  br i1 %683, label %845, label %684

684:                                              ; preds = %682
  %685 = getelementptr inbounds %struct.regnode, ptr %260, i64 0, i32 2
  %686 = shl nsw i32 %609, 1
  %687 = getelementptr inbounds %struct.regnode_string, ptr %260, i64 0, i32 3
  br label %688

688:                                              ; preds = %839, %684
  %689 = phi ptr [ %610, %684 ], [ %843, %839 ]
  %690 = phi i32 [ 1, %684 ], [ %719, %839 ]
  %691 = phi ptr [ %616, %684 ], [ %842, %839 ]
  %692 = phi i32 [ 0, %684 ], [ %841, %839 ]
  %693 = phi ptr [ %260, %684 ], [ %840, %839 ]
  %694 = getelementptr inbounds %struct.regnode, ptr %689, i64 0, i32 1
  %695 = load i8, ptr %694, align 1, !tbaa !141
  %696 = zext i8 %695 to i64
  %697 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %696
  %698 = load i8, ptr %697, align 1, !tbaa !17
  %699 = icmp eq i8 %698, 40
  br i1 %699, label %705, label %700

700:                                              ; preds = %688
  %701 = icmp eq i32 %690, 0
  br i1 %701, label %845, label %702

702:                                              ; preds = %700
  %703 = load i8, ptr %276, align 1, !tbaa !141
  %704 = icmp eq i8 %695, %703
  br i1 %704, label %705, label %849

705:                                              ; preds = %702, %688
  %706 = getelementptr inbounds %struct.regnode, ptr %689, i64 0, i32 2
  %707 = load i16, ptr %706, align 2, !tbaa !222
  %708 = icmp eq i16 %707, 0
  br i1 %708, label %845, label %709

709:                                              ; preds = %705
  %710 = zext i16 %707 to i32
  %711 = load i16, ptr %685, align 2, !tbaa !222
  %712 = zext i16 %711 to i32
  %713 = add nuw nsw i32 %712, %710
  %714 = icmp ult i32 %713, 32767
  br i1 %714, label %715, label %845

715:                                              ; preds = %709
  %716 = icmp eq i8 %695, 41
  %717 = icmp ugt ptr %689, %691
  %718 = select i1 %716, i1 true, i1 %717
  %719 = select i1 %718, i32 0, i32 %690
  br i1 %699, label %720, label %770

720:                                              ; preds = %715
  %721 = load volatile i64, ptr %14, align 8, !tbaa !9
  %722 = and i64 %721, 2
  %723 = icmp eq i64 %722, 0
  br i1 %723, label %762, label %724

724:                                              ; preds = %720
  %725 = call ptr @Perl_regnext(ptr noundef nonnull %689) #15
  %726 = load ptr, ptr %123, align 8, !tbaa !129
  %727 = load ptr, ptr %124, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %726, ptr noundef %727, ptr noundef nonnull %689, ptr noundef null, ptr noundef %0)
  %728 = call ptr @Perl_PerlIO_stderr() #15
  %729 = load ptr, ptr %125, align 8, !tbaa !131
  %730 = ptrtoint ptr %689 to i64
  %731 = ptrtoint ptr %729 to i64
  %732 = sub i64 %730, %731
  %733 = lshr exact i64 %732, 2
  %734 = trunc i64 %733 to i32
  %735 = load ptr, ptr %124, align 8, !tbaa !56
  %736 = getelementptr inbounds %struct.sv, ptr %735, i64 0, i32 2
  %737 = load i32, ptr %736, align 4, !tbaa !13
  %738 = and i32 %737, 2098176
  %739 = icmp eq i32 %738, 1024
  br i1 %739, label %740, label %743

740:                                              ; preds = %724
  %741 = getelementptr inbounds %struct.sv, ptr %735, i64 0, i32 3
  %742 = load ptr, ptr %741, align 8, !tbaa !17
  br label %745

743:                                              ; preds = %724
  %744 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %735, ptr noundef null, i32 noundef 34) #15
  br label %745

745:                                              ; preds = %743, %740
  %746 = phi ptr [ %742, %740 ], [ %744, %743 ]
  %747 = icmp eq ptr %725, null
  br i1 %747, label %755, label %748

748:                                              ; preds = %745
  %749 = load ptr, ptr %125, align 8, !tbaa !131
  %750 = ptrtoint ptr %725 to i64
  %751 = ptrtoint ptr %749 to i64
  %752 = sub i64 %750, %751
  %753 = lshr exact i64 %752, 2
  %754 = trunc i64 %753 to i32
  br label %755

755:                                              ; preds = %748, %745
  %756 = phi i32 [ %754, %748 ], [ 0, %745 ]
  %757 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %728, ptr noundef nonnull @.str.296, i32 noundef %686, ptr noundef nonnull @.str.8, i32 noundef %734, ptr noundef %746, i32 noundef %756) #15
  %758 = call ptr @Perl_PerlIO_stderr() #15
  %759 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %758, ptr noundef nonnull @.str.53) #15
  %760 = load i16, ptr %706, align 2, !tbaa !222
  %761 = load i16, ptr %685, align 2, !tbaa !222
  br label %762

762:                                              ; preds = %755, %720
  %763 = phi i16 [ %761, %755 ], [ %711, %720 ]
  %764 = phi i16 [ %760, %755 ], [ %707, %720 ]
  %765 = add i16 %764, %763
  store i16 %765, ptr %685, align 2, !tbaa !222
  %766 = getelementptr inbounds %struct.regnode, ptr %689, i64 1
  %767 = icmp eq i32 %719, 0
  %768 = select i1 %767, ptr %693, ptr %689
  %769 = call ptr @Perl_regnext(ptr noundef nonnull %689) #15
  br label %839

770:                                              ; preds = %715
  %771 = icmp eq i32 %719, 0
  br i1 %771, label %839, label %772

772:                                              ; preds = %770
  %773 = load i8, ptr %260, align 2, !tbaa !205
  %774 = zext i8 %773 to i32
  %775 = call ptr @Perl_regnext(ptr noundef nonnull %689) #15
  %776 = load i8, ptr %689, align 2, !tbaa !205
  %777 = zext i8 %776 to i32
  %778 = add nuw nsw i32 %777, %774
  %779 = icmp ugt i32 %778, 255
  br i1 %779, label %845, label %780

780:                                              ; preds = %772
  %781 = load volatile i64, ptr %14, align 8, !tbaa !9
  %782 = and i64 %781, 2
  %783 = icmp eq i64 %782, 0
  br i1 %783, label %821, label %784

784:                                              ; preds = %780
  %785 = call ptr @Perl_regnext(ptr noundef nonnull %689) #15
  %786 = load ptr, ptr %123, align 8, !tbaa !129
  %787 = load ptr, ptr %124, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %786, ptr noundef %787, ptr noundef nonnull %689, ptr noundef null, ptr noundef %0)
  %788 = call ptr @Perl_PerlIO_stderr() #15
  %789 = load ptr, ptr %125, align 8, !tbaa !131
  %790 = ptrtoint ptr %689 to i64
  %791 = ptrtoint ptr %789 to i64
  %792 = sub i64 %790, %791
  %793 = lshr exact i64 %792, 2
  %794 = trunc i64 %793 to i32
  %795 = load ptr, ptr %124, align 8, !tbaa !56
  %796 = getelementptr inbounds %struct.sv, ptr %795, i64 0, i32 2
  %797 = load i32, ptr %796, align 4, !tbaa !13
  %798 = and i32 %797, 2098176
  %799 = icmp eq i32 %798, 1024
  br i1 %799, label %800, label %803

800:                                              ; preds = %784
  %801 = getelementptr inbounds %struct.sv, ptr %795, i64 0, i32 3
  %802 = load ptr, ptr %801, align 8, !tbaa !17
  br label %805

803:                                              ; preds = %784
  %804 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %795, ptr noundef null, i32 noundef 34) #15
  br label %805

805:                                              ; preds = %803, %800
  %806 = phi ptr [ %802, %800 ], [ %804, %803 ]
  %807 = icmp eq ptr %785, null
  br i1 %807, label %815, label %808

808:                                              ; preds = %805
  %809 = load ptr, ptr %125, align 8, !tbaa !131
  %810 = ptrtoint ptr %785 to i64
  %811 = ptrtoint ptr %809 to i64
  %812 = sub i64 %810, %811
  %813 = lshr exact i64 %812, 2
  %814 = trunc i64 %813 to i32
  br label %815

815:                                              ; preds = %808, %805
  %816 = phi i32 [ %814, %808 ], [ 0, %805 ]
  %817 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %788, ptr noundef nonnull @.str.297, i32 noundef %686, ptr noundef nonnull @.str.8, i32 noundef %794, ptr noundef %806, i32 noundef %816) #15
  %818 = call ptr @Perl_PerlIO_stderr() #15
  %819 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %818, ptr noundef nonnull @.str.53) #15
  %820 = load i8, ptr %689, align 2, !tbaa !205
  br label %821

821:                                              ; preds = %815, %780
  %822 = phi i8 [ %776, %780 ], [ %820, %815 ]
  %823 = load i16, ptr %706, align 2, !tbaa !222
  %824 = load i16, ptr %685, align 2, !tbaa !222
  %825 = add i16 %824, %823
  store i16 %825, ptr %685, align 2, !tbaa !222
  %826 = load i8, ptr %260, align 2, !tbaa !205
  %827 = add i8 %826, %822
  store i8 %827, ptr %260, align 2, !tbaa !205
  %828 = load i8, ptr %689, align 2, !tbaa !205
  %829 = zext i8 %828 to i64
  %830 = zext i8 %773 to i64
  %831 = getelementptr inbounds i8, ptr %687, i64 %830
  %832 = getelementptr inbounds %struct.regnode_string, ptr %689, i64 0, i32 3
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %831, ptr nonnull align 2 %832, i64 %829, i1 false)
  %833 = add nuw nsw i64 %829, 3
  %834 = lshr i64 %833, 2
  %835 = add nuw nsw i64 %834, 1
  %836 = getelementptr inbounds %struct.regnode, ptr %689, i64 %835
  %837 = getelementptr inbounds %struct.regnode, ptr %689, i64 %834
  %838 = add i32 %692, 1
  br label %839

839:                                              ; preds = %821, %770, %762
  %840 = phi ptr [ %768, %762 ], [ %693, %770 ], [ %837, %821 ]
  %841 = phi i32 [ %692, %762 ], [ %692, %770 ], [ %838, %821 ]
  %842 = phi ptr [ %766, %762 ], [ %691, %770 ], [ %836, %821 ]
  %843 = phi ptr [ %769, %762 ], [ %689, %770 ], [ %775, %821 ]
  %844 = icmp eq ptr %843, null
  br i1 %844, label %845, label %688, !llvm.loop !257

845:                                              ; preds = %839, %772, %709, %705, %700, %682
  %846 = phi ptr [ %260, %682 ], [ %693, %772 ], [ %693, %705 ], [ %693, %700 ], [ %840, %839 ], [ %693, %709 ]
  %847 = phi i32 [ 0, %682 ], [ %692, %772 ], [ %692, %705 ], [ %692, %700 ], [ %841, %839 ], [ %692, %709 ]
  %848 = load i8, ptr %276, align 1, !tbaa !141
  br label %849

849:                                              ; preds = %702, %845
  %850 = phi i8 [ %848, %845 ], [ %703, %702 ]
  %851 = phi ptr [ %846, %845 ], [ %693, %702 ]
  %852 = phi i32 [ %847, %845 ], [ %692, %702 ]
  %853 = add i8 %850, -31
  %854 = icmp ult i8 %853, 2
  br i1 %854, label %2058, label %855

855:                                              ; preds = %849
  %856 = getelementptr inbounds %struct.regnode_string, ptr %260, i64 0, i32 3
  %857 = load i8, ptr %260, align 2, !tbaa !205
  %858 = zext i8 %857 to i64
  %859 = getelementptr inbounds i8, ptr %856, i64 %858
  %860 = load i32, ptr %126, align 8, !tbaa !50
  %861 = icmp eq i32 %860, 0
  br i1 %861, label %1940, label %862

862:                                              ; preds = %855
  %863 = icmp eq i8 %850, 34
  br i1 %863, label %864, label %1019

864:                                              ; preds = %862
  %865 = mul nuw nsw i64 %858, 3
  %866 = add nuw nsw i64 %865, 1
  %867 = call ptr @Perl_safesysmalloc(i64 noundef %866) #15
  %868 = icmp eq i8 %857, 0
  br i1 %868, label %1019, label %869

869:                                              ; preds = %864, %1014
  %870 = phi i8 [ %1015, %1014 ], [ 0, %864 ]
  %871 = phi ptr [ %1016, %1014 ], [ %867, %864 ]
  %872 = phi ptr [ %1017, %1014 ], [ %856, %864 ]
  %873 = load i8, ptr %872, align 1, !tbaa !17
  %874 = zext i8 %873 to i64
  %875 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %874
  %876 = load i8, ptr %875, align 1, !tbaa !17
  %877 = zext i8 %876 to i64
  %878 = icmp sgt i8 %873, -1
  %879 = and i8 %873, -2
  %880 = icmp eq i8 %879, -62
  %881 = or i1 %878, %880
  br i1 %881, label %923, label %882

882:                                              ; preds = %869
  switch i8 %873, label %921 [
    i8 -60, label %883
    i8 -57, label %883
    i8 -59, label %887
    i8 -50, label %890
    i8 -31, label %895
    i8 -30, label %904
    i8 -17, label %913
  ]

883:                                              ; preds = %882, %882
  %884 = getelementptr inbounds i8, ptr %872, i64 1
  %885 = load i8, ptr %884, align 1, !tbaa !17
  %886 = icmp eq i8 %885, -80
  br i1 %886, label %923, label %921

887:                                              ; preds = %882
  %888 = getelementptr inbounds i8, ptr %872, i64 1
  %889 = load i8, ptr %888, align 1, !tbaa !17
  switch i8 %889, label %921 [
    i8 -119, label %935
    i8 -72, label %935
    i8 -65, label %935
  ]

890:                                              ; preds = %882
  %891 = getelementptr inbounds i8, ptr %872, i64 1
  %892 = load i8, ptr %891, align 1, !tbaa !17
  %893 = and i8 %892, -33
  %894 = icmp eq i8 %893, -100
  br i1 %894, label %1010, label %921

895:                                              ; preds = %882
  %896 = getelementptr inbounds i8, ptr %872, i64 1
  %897 = load i8, ptr %896, align 1, !tbaa !17
  %898 = icmp eq i8 %897, -70
  br i1 %898, label %899, label %921

899:                                              ; preds = %895
  %900 = getelementptr inbounds i8, ptr %872, i64 2
  %901 = load i8, ptr %900, align 1, !tbaa !17
  %902 = add i8 %901, 106
  %903 = icmp ult i8 %902, 9
  br i1 %903, label %952, label %921

904:                                              ; preds = %882
  %905 = getelementptr inbounds i8, ptr %872, i64 1
  %906 = load i8, ptr %905, align 1, !tbaa !17
  %907 = icmp eq i8 %906, -124
  br i1 %907, label %908, label %921

908:                                              ; preds = %904
  %909 = getelementptr inbounds i8, ptr %872, i64 2
  %910 = load i8, ptr %909, align 1, !tbaa !17
  %911 = and i8 %910, -2
  %912 = icmp eq i8 %911, -86
  br i1 %912, label %1010, label %921

913:                                              ; preds = %882
  %914 = getelementptr inbounds i8, ptr %872, i64 1
  %915 = load i8, ptr %914, align 1, !tbaa !17
  %916 = icmp eq i8 %915, -84
  br i1 %916, label %917, label %921

917:                                              ; preds = %913
  %918 = getelementptr inbounds i8, ptr %872, i64 2
  %919 = load i8, ptr %918, align 1, !tbaa !17
  %920 = icmp ult i8 %919, -121
  br i1 %920, label %999, label %921

921:                                              ; preds = %952, %899, %917, %913, %908, %904, %895, %890, %887, %883, %882
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %871, ptr nonnull align 1 %872, i64 %877, i1 false)
  %922 = getelementptr inbounds i8, ptr %871, i64 %877
  br label %1014

923:                                              ; preds = %883, %869
  switch i8 %873, label %1001 [
    i8 -61, label %927
    i8 -60, label %931
    i8 -57, label %931
    i8 -59, label %924
    i8 -50, label %938
    i8 -42, label %943
    i8 -31, label %947
    i8 -17, label %988
  ]

924:                                              ; preds = %923
  %925 = getelementptr inbounds i8, ptr %872, i64 1
  %926 = load i8, ptr %925, align 1, !tbaa !17
  br label %935

927:                                              ; preds = %923
  %928 = getelementptr inbounds i8, ptr %872, i64 1
  %929 = load i8, ptr %928, align 1, !tbaa !17
  %930 = icmp eq i8 %929, -97
  br i1 %930, label %999, label %1010

931:                                              ; preds = %923, %923
  %932 = getelementptr inbounds i8, ptr %872, i64 1
  %933 = load i8, ptr %932, align 1, !tbaa !17
  %934 = icmp eq i8 %933, -80
  br i1 %934, label %999, label %1010

935:                                              ; preds = %924, %887, %887, %887
  %936 = phi i8 [ %926, %924 ], [ %889, %887 ], [ %889, %887 ], [ %889, %887 ]
  %937 = icmp eq i8 %936, -119
  br i1 %937, label %999, label %1010

938:                                              ; preds = %923
  %939 = getelementptr inbounds i8, ptr %872, i64 1
  %940 = load i8, ptr %939, align 1, !tbaa !17
  %941 = and i8 %940, -33
  %942 = icmp eq i8 %941, -112
  br i1 %942, label %999, label %1010

943:                                              ; preds = %923
  %944 = getelementptr inbounds i8, ptr %872, i64 1
  %945 = load i8, ptr %944, align 1, !tbaa !17
  %946 = icmp eq i8 %945, -121
  br i1 %946, label %999, label %1010

947:                                              ; preds = %923
  %948 = getelementptr inbounds i8, ptr %872, i64 1
  %949 = load i8, ptr %948, align 1, !tbaa !17
  switch i8 %949, label %1010 [
    i8 -70, label %950
    i8 -67, label %963
    i8 -66, label %968
    i8 -65, label %978
  ]

950:                                              ; preds = %947
  %951 = getelementptr inbounds i8, ptr %872, i64 2
  br label %960

952:                                              ; preds = %899
  %953 = zext i8 %902 to i16
  %954 = lshr i16 287, %953
  %955 = and i16 %954, 1
  %956 = icmp eq i16 %955, 0
  br i1 %956, label %921, label %957

957:                                              ; preds = %952
  %958 = sext i8 %902 to i64
  %959 = getelementptr inbounds [9 x i8], ptr @switch.table.S_study_chunk, i64 0, i64 %958
  br label %960

960:                                              ; preds = %957, %950
  %961 = phi ptr [ %959, %957 ], [ %951, %950 ]
  %962 = load i8, ptr %961, align 1
  switch i8 %962, label %1010 [
    i8 -98, label %999
    i8 -102, label %999
    i8 -103, label %999
    i8 -104, label %999
    i8 -105, label %999
    i8 -106, label %999
  ]

963:                                              ; preds = %947
  %964 = getelementptr inbounds i8, ptr %872, i64 2
  %965 = load i8, ptr %964, align 1, !tbaa !17
  %966 = and i8 %965, -7
  %967 = icmp eq i8 %966, -112
  br i1 %967, label %999, label %1010

968:                                              ; preds = %947
  %969 = getelementptr inbounds i8, ptr %872, i64 2
  %970 = load i8, ptr %969, align 1, !tbaa !17
  %971 = zext i8 %970 to i32
  %972 = insertelement <4 x i32> poison, i32 %971, i64 0
  %973 = shufflevector <4 x i32> %972, <4 x i32> poison, <4 x i32> zeroinitializer
  %974 = and <4 x i32> %973, <i32 240, i32 224, i32 250, i32 247>
  %975 = icmp eq <4 x i32> %974, <i32 160, i32 128, i32 178, i32 180>
  %976 = bitcast <4 x i1> %975 to i4
  %977 = icmp eq i4 %976, 0
  br i1 %977, label %1010, label %999

978:                                              ; preds = %947
  %979 = getelementptr inbounds i8, ptr %872, i64 2
  %980 = load i8, ptr %979, align 1, !tbaa !17
  %981 = freeze i8 %980
  %982 = and i8 %981, -54
  %983 = icmp eq i8 %982, -126
  %984 = icmp eq i8 %981, -92
  %985 = or i1 %984, %983
  br i1 %985, label %999, label %986

986:                                              ; preds = %978
  %987 = and i8 %981, -9
  switch i8 %987, label %1010 [
    i8 -76, label %999
    i8 -124, label %999
  ]

988:                                              ; preds = %923
  %989 = getelementptr inbounds i8, ptr %872, i64 1
  %990 = load i8, ptr %989, align 1, !tbaa !17
  %991 = icmp eq i8 %990, -84
  br i1 %991, label %992, label %1010

992:                                              ; preds = %988
  %993 = getelementptr inbounds i8, ptr %872, i64 2
  %994 = load i8, ptr %993, align 1, !tbaa !17
  %995 = icmp ult i8 %994, -121
  %996 = add i8 %994, 109
  %997 = icmp ult i8 %996, 5
  %998 = or i1 %995, %997
  br i1 %998, label %999, label %1010

999:                                              ; preds = %917, %992, %986, %986, %978, %968, %963, %960, %960, %960, %960, %960, %960, %943, %938, %935, %931, %927
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %871, ptr nonnull align 1 %872, i64 %877, i1 false)
  %1000 = getelementptr inbounds i8, ptr %871, i64 %877
  br label %1014

1001:                                             ; preds = %923
  br i1 %878, label %1002, label %1010

1002:                                             ; preds = %1001
  %1003 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %874
  %1004 = load i32, ptr %1003, align 4, !tbaa !73
  %1005 = and i32 %1004, 16400
  %1006 = icmp eq i32 %1005, 16400
  %1007 = add nuw i8 %873, 32
  %1008 = select i1 %1006, i8 %1007, i8 %873
  %1009 = getelementptr inbounds i8, ptr %871, i64 1
  store i8 %1008, ptr %871, align 1, !tbaa !17
  br label %1014

1010:                                             ; preds = %1001, %992, %988, %986, %968, %963, %960, %947, %943, %938, %935, %931, %927, %908, %890
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %15) #15
  %1011 = call i64 @Perl__to_utf8_fold_flags(ptr noundef nonnull %872, ptr noundef %871, ptr noundef nonnull %15, i8 noundef zeroext 2) #15
  %1012 = load i64, ptr %15, align 8, !tbaa !9
  %1013 = getelementptr inbounds i8, ptr %871, i64 %1012
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %15) #15
  br label %1014

1014:                                             ; preds = %1010, %1002, %999, %921
  %1015 = phi i8 [ %870, %1002 ], [ %870, %1010 ], [ 1, %999 ], [ %870, %921 ]
  %1016 = phi ptr [ %1009, %1002 ], [ %1013, %1010 ], [ %1000, %999 ], [ %922, %921 ]
  %1017 = getelementptr inbounds i8, ptr %872, i64 %877
  %1018 = icmp ult ptr %1017, %859
  br i1 %1018, label %869, label %1019, !llvm.loop !258

1019:                                             ; preds = %1014, %864, %862
  %1020 = phi i8 [ 0, %864 ], [ 0, %862 ], [ %1015, %1014 ]
  %1021 = phi ptr [ %867, %864 ], [ %856, %862 ], [ %867, %1014 ]
  %1022 = phi ptr [ %867, %864 ], [ %859, %862 ], [ %1016, %1014 ]
  %1023 = phi ptr [ %867, %864 ], [ null, %862 ], [ %867, %1014 ]
  %1024 = getelementptr inbounds i8, ptr %1022, i64 -1
  %1025 = icmp ult ptr %1021, %1024
  br i1 %1025, label %1026, label %1926

1026:                                             ; preds = %1019
  %1027 = ptrtoint ptr %1022 to i64
  br label %1028

1028:                                             ; preds = %1922, %1026
  %1029 = phi i32 [ 0, %1026 ], [ %1924, %1922 ]
  %1030 = phi ptr [ %1021, %1026 ], [ %1923, %1922 ]
  %1031 = ptrtoint ptr %1030 to i64
  %1032 = sub i64 %1027, %1031
  %1033 = icmp sgt i64 %1032, 5
  br i1 %1033, label %1034, label %1336

1034:                                             ; preds = %1028
  %1035 = load i8, ptr %1030, align 1, !tbaa !17
  switch i8 %1035, label %1876 [
    i8 97, label %1036
    i8 102, label %1045
    i8 104, label %1055
    i8 105, label %1064
    i8 106, label %1073
    i8 115, label %1082
    i8 116, label %1087
    i8 119, label %1096
    i8 121, label %1096
    i8 -59, label %1105
    i8 -54, label %1118
    i8 -50, label %1127
    i8 -49, label %1189
    i8 -43, label %1271
    i8 -31, label %1299
  ]

1036:                                             ; preds = %1034
  %1037 = getelementptr inbounds i8, ptr %1030, i64 1
  %1038 = load i8, ptr %1037, align 1, !tbaa !17
  %1039 = icmp eq i8 %1038, -54
  br i1 %1039, label %1040, label %1876

1040:                                             ; preds = %1036
  %1041 = getelementptr inbounds i8, ptr %1030, i64 2
  %1042 = load i8, ptr %1041, align 1, !tbaa !17
  %1043 = freeze i8 %1042
  %1044 = icmp eq i8 %1043, -66
  br i1 %1044, label %1891, label %1876

1045:                                             ; preds = %1034
  %1046 = getelementptr inbounds i8, ptr %1030, i64 1
  %1047 = load i8, ptr %1046, align 1, !tbaa !17
  switch i8 %1047, label %1876 [
    i8 102, label %1048
    i8 105, label %1891
    i8 108, label %1891
  ]

1048:                                             ; preds = %1045
  %1049 = getelementptr inbounds i8, ptr %1030, i64 2
  %1050 = load i8, ptr %1049, align 1, !tbaa !17
  %1051 = icmp eq i8 %1050, 108
  %1052 = icmp eq i8 %1050, 105
  %1053 = or i1 %1051, %1052
  %1054 = select i1 %1053, i64 3, i64 2
  br label %1891

1055:                                             ; preds = %1034
  %1056 = getelementptr inbounds i8, ptr %1030, i64 1
  %1057 = load i8, ptr %1056, align 1, !tbaa !17
  %1058 = icmp eq i8 %1057, -52
  br i1 %1058, label %1059, label %1876

1059:                                             ; preds = %1055
  %1060 = getelementptr inbounds i8, ptr %1030, i64 2
  %1061 = load i8, ptr %1060, align 1, !tbaa !17
  %1062 = freeze i8 %1061
  %1063 = icmp eq i8 %1062, -79
  br i1 %1063, label %1891, label %1876

1064:                                             ; preds = %1034
  %1065 = getelementptr inbounds i8, ptr %1030, i64 1
  %1066 = load i8, ptr %1065, align 1, !tbaa !17
  %1067 = icmp eq i8 %1066, -52
  br i1 %1067, label %1068, label %1876

1068:                                             ; preds = %1064
  %1069 = getelementptr inbounds i8, ptr %1030, i64 2
  %1070 = load i8, ptr %1069, align 1, !tbaa !17
  %1071 = freeze i8 %1070
  %1072 = icmp eq i8 %1071, -121
  br i1 %1072, label %1891, label %1876

1073:                                             ; preds = %1034
  %1074 = getelementptr inbounds i8, ptr %1030, i64 1
  %1075 = load i8, ptr %1074, align 1, !tbaa !17
  %1076 = icmp eq i8 %1075, -52
  br i1 %1076, label %1077, label %1876

1077:                                             ; preds = %1073
  %1078 = getelementptr inbounds i8, ptr %1030, i64 2
  %1079 = load i8, ptr %1078, align 1, !tbaa !17
  %1080 = freeze i8 %1079
  %1081 = icmp eq i8 %1080, -116
  br i1 %1081, label %1891, label %1876

1082:                                             ; preds = %1034
  %1083 = getelementptr inbounds i8, ptr %1030, i64 1
  %1084 = load i8, ptr %1083, align 1, !tbaa !17
  %1085 = add i8 %1084, -115
  %1086 = icmp ult i8 %1085, 2
  br i1 %1086, label %1883, label %1876

1087:                                             ; preds = %1034
  %1088 = getelementptr inbounds i8, ptr %1030, i64 1
  %1089 = load i8, ptr %1088, align 1, !tbaa !17
  %1090 = icmp eq i8 %1089, -52
  br i1 %1090, label %1091, label %1876

1091:                                             ; preds = %1087
  %1092 = getelementptr inbounds i8, ptr %1030, i64 2
  %1093 = load i8, ptr %1092, align 1, !tbaa !17
  %1094 = freeze i8 %1093
  %1095 = icmp eq i8 %1094, -120
  br i1 %1095, label %1891, label %1876

1096:                                             ; preds = %1034, %1034
  %1097 = getelementptr inbounds i8, ptr %1030, i64 1
  %1098 = load i8, ptr %1097, align 1, !tbaa !17
  %1099 = icmp eq i8 %1098, -52
  br i1 %1099, label %1100, label %1876

1100:                                             ; preds = %1096
  %1101 = getelementptr inbounds i8, ptr %1030, i64 2
  %1102 = load i8, ptr %1101, align 1, !tbaa !17
  %1103 = freeze i8 %1102
  %1104 = icmp eq i8 %1103, -118
  br i1 %1104, label %1891, label %1876

1105:                                             ; preds = %1034
  %1106 = getelementptr inbounds i8, ptr %1030, i64 1
  %1107 = load i8, ptr %1106, align 1, !tbaa !17
  %1108 = icmp eq i8 %1107, -65
  br i1 %1108, label %1109, label %1876

1109:                                             ; preds = %1105
  %1110 = getelementptr inbounds i8, ptr %1030, i64 2
  %1111 = load i8, ptr %1110, align 1, !tbaa !17
  %1112 = icmp eq i8 %1111, -59
  br i1 %1112, label %1113, label %1876

1113:                                             ; preds = %1109
  %1114 = getelementptr inbounds i8, ptr %1030, i64 3
  %1115 = load i8, ptr %1114, align 1, !tbaa !17
  %1116 = freeze i8 %1115
  %1117 = icmp eq i8 %1116, -65
  br i1 %1117, label %1891, label %1876

1118:                                             ; preds = %1034
  %1119 = getelementptr inbounds i8, ptr %1030, i64 1
  %1120 = load i8, ptr %1119, align 1, !tbaa !17
  %1121 = icmp eq i8 %1120, -68
  br i1 %1121, label %1122, label %1876

1122:                                             ; preds = %1118
  %1123 = getelementptr inbounds i8, ptr %1030, i64 2
  %1124 = load i8, ptr %1123, align 1, !tbaa !17
  %1125 = freeze i8 %1124
  %1126 = icmp eq i8 %1125, 110
  br i1 %1126, label %1891, label %1876

1127:                                             ; preds = %1034
  %1128 = getelementptr inbounds i8, ptr %1030, i64 1
  %1129 = load i8, ptr %1128, align 1, !tbaa !17
  %1130 = and i8 %1129, -3
  %1131 = icmp eq i8 %1130, -84
  br i1 %1131, label %1132, label %1141

1132:                                             ; preds = %1127
  %1133 = getelementptr inbounds i8, ptr %1030, i64 2
  %1134 = load i8, ptr %1133, align 1, !tbaa !17
  %1135 = icmp eq i8 %1134, -50
  br i1 %1135, label %1136, label %1876

1136:                                             ; preds = %1132
  %1137 = getelementptr inbounds i8, ptr %1030, i64 3
  %1138 = load i8, ptr %1137, align 1, !tbaa !17
  %1139 = freeze i8 %1138
  %1140 = icmp eq i8 %1139, -71
  br i1 %1140, label %1891, label %1876

1141:                                             ; preds = %1127
  switch i8 %1129, label %1876 [
    i8 -79, label %1142
    i8 -73, label %1142
    i8 -71, label %1164
  ]

1142:                                             ; preds = %1141, %1141
  %1143 = getelementptr inbounds i8, ptr %1030, i64 2
  %1144 = load i8, ptr %1143, align 1, !tbaa !17
  switch i8 %1144, label %1876 [
    i8 -51, label %1145
    i8 -50, label %1159
  ]

1145:                                             ; preds = %1142
  %1146 = getelementptr inbounds i8, ptr %1030, i64 3
  %1147 = load i8, ptr %1146, align 1, !tbaa !17
  %1148 = icmp eq i8 %1147, -126
  br i1 %1148, label %1149, label %1876

1149:                                             ; preds = %1145
  %1150 = getelementptr inbounds i8, ptr %1030, i64 4
  %1151 = load i8, ptr %1150, align 1, !tbaa !17
  %1152 = icmp eq i8 %1151, -50
  br i1 %1152, label %1153, label %1891

1153:                                             ; preds = %1149
  %1154 = getelementptr inbounds i8, ptr %1030, i64 5
  %1155 = load i8, ptr %1154, align 1, !tbaa !17
  %1156 = freeze i8 %1155
  %1157 = icmp eq i8 %1156, -71
  %1158 = select i1 %1157, i64 6, i64 4
  br label %1891

1159:                                             ; preds = %1142
  %1160 = getelementptr inbounds i8, ptr %1030, i64 3
  %1161 = load i8, ptr %1160, align 1, !tbaa !17
  %1162 = freeze i8 %1161
  %1163 = icmp eq i8 %1162, -71
  br i1 %1163, label %1891, label %1876

1164:                                             ; preds = %1141
  %1165 = getelementptr inbounds i8, ptr %1030, i64 2
  %1166 = load i8, ptr %1165, align 1, !tbaa !17
  switch i8 %1166, label %1876 [
    i8 -52, label %1167
    i8 -51, label %1184
  ]

1167:                                             ; preds = %1164
  %1168 = getelementptr inbounds i8, ptr %1030, i64 3
  %1169 = load i8, ptr %1168, align 1, !tbaa !17
  %1170 = icmp eq i8 %1169, -120
  br i1 %1170, label %1171, label %1876

1171:                                             ; preds = %1167
  %1172 = getelementptr inbounds i8, ptr %1030, i64 4
  %1173 = load i8, ptr %1172, align 1, !tbaa !17
  switch i8 %1173, label %1876 [
    i8 -52, label %1174
    i8 -51, label %1179
  ]

1174:                                             ; preds = %1171
  %1175 = getelementptr inbounds i8, ptr %1030, i64 5
  %1176 = load i8, ptr %1175, align 1, !tbaa !17
  %1177 = and i8 %1176, -2
  %1178 = icmp eq i8 %1177, -128
  br i1 %1178, label %1891, label %1876

1179:                                             ; preds = %1171
  %1180 = getelementptr inbounds i8, ptr %1030, i64 5
  %1181 = load i8, ptr %1180, align 1, !tbaa !17
  %1182 = freeze i8 %1181
  %1183 = icmp eq i8 %1182, -126
  br i1 %1183, label %1891, label %1876

1184:                                             ; preds = %1164
  %1185 = getelementptr inbounds i8, ptr %1030, i64 3
  %1186 = load i8, ptr %1185, align 1, !tbaa !17
  %1187 = freeze i8 %1186
  %1188 = icmp eq i8 %1187, -126
  br i1 %1188, label %1891, label %1876

1189:                                             ; preds = %1034
  %1190 = getelementptr inbounds i8, ptr %1030, i64 1
  %1191 = load i8, ptr %1190, align 1, !tbaa !17
  switch i8 %1191, label %1876 [
    i8 -127, label %1192
    i8 -123, label %1201
    i8 -119, label %1240
    i8 -114, label %1262
  ]

1192:                                             ; preds = %1189
  %1193 = getelementptr inbounds i8, ptr %1030, i64 2
  %1194 = load i8, ptr %1193, align 1, !tbaa !17
  %1195 = icmp eq i8 %1194, -52
  br i1 %1195, label %1196, label %1876

1196:                                             ; preds = %1192
  %1197 = getelementptr inbounds i8, ptr %1030, i64 3
  %1198 = load i8, ptr %1197, align 1, !tbaa !17
  %1199 = freeze i8 %1198
  %1200 = icmp eq i8 %1199, -109
  br i1 %1200, label %1891, label %1876

1201:                                             ; preds = %1189
  %1202 = getelementptr inbounds i8, ptr %1030, i64 2
  %1203 = load i8, ptr %1202, align 1, !tbaa !17
  switch i8 %1203, label %1876 [
    i8 -52, label %1204
    i8 -51, label %1235
  ]

1204:                                             ; preds = %1201
  %1205 = getelementptr inbounds i8, ptr %1030, i64 3
  %1206 = load i8, ptr %1205, align 1, !tbaa !17
  switch i8 %1206, label %1876 [
    i8 -120, label %1207
    i8 -109, label %1220
  ]

1207:                                             ; preds = %1204
  %1208 = getelementptr inbounds i8, ptr %1030, i64 4
  %1209 = load i8, ptr %1208, align 1, !tbaa !17
  switch i8 %1209, label %1876 [
    i8 -52, label %1210
    i8 -51, label %1215
  ]

1210:                                             ; preds = %1207
  %1211 = getelementptr inbounds i8, ptr %1030, i64 5
  %1212 = load i8, ptr %1211, align 1, !tbaa !17
  %1213 = and i8 %1212, -2
  %1214 = icmp eq i8 %1213, -128
  br i1 %1214, label %1891, label %1876

1215:                                             ; preds = %1207
  %1216 = getelementptr inbounds i8, ptr %1030, i64 5
  %1217 = load i8, ptr %1216, align 1, !tbaa !17
  %1218 = freeze i8 %1217
  %1219 = icmp eq i8 %1218, -126
  br i1 %1219, label %1891, label %1876

1220:                                             ; preds = %1204
  %1221 = getelementptr inbounds i8, ptr %1030, i64 4
  %1222 = load i8, ptr %1221, align 1, !tbaa !17
  switch i8 %1222, label %1891 [
    i8 -52, label %1223
    i8 -51, label %1229
  ]

1223:                                             ; preds = %1220
  %1224 = getelementptr inbounds i8, ptr %1030, i64 5
  %1225 = load i8, ptr %1224, align 1, !tbaa !17
  %1226 = and i8 %1225, -2
  %1227 = icmp eq i8 %1226, -128
  %1228 = select i1 %1227, i64 6, i64 4
  br label %1891

1229:                                             ; preds = %1220
  %1230 = getelementptr inbounds i8, ptr %1030, i64 5
  %1231 = load i8, ptr %1230, align 1, !tbaa !17
  %1232 = freeze i8 %1231
  %1233 = icmp eq i8 %1232, -126
  %1234 = select i1 %1233, i64 6, i64 4
  br label %1891

1235:                                             ; preds = %1201
  %1236 = getelementptr inbounds i8, ptr %1030, i64 3
  %1237 = load i8, ptr %1236, align 1, !tbaa !17
  %1238 = freeze i8 %1237
  %1239 = icmp eq i8 %1238, -126
  br i1 %1239, label %1891, label %1876

1240:                                             ; preds = %1189
  %1241 = getelementptr inbounds i8, ptr %1030, i64 2
  %1242 = load i8, ptr %1241, align 1, !tbaa !17
  switch i8 %1242, label %1876 [
    i8 -51, label %1243
    i8 -50, label %1257
  ]

1243:                                             ; preds = %1240
  %1244 = getelementptr inbounds i8, ptr %1030, i64 3
  %1245 = load i8, ptr %1244, align 1, !tbaa !17
  %1246 = icmp eq i8 %1245, -126
  br i1 %1246, label %1247, label %1876

1247:                                             ; preds = %1243
  %1248 = getelementptr inbounds i8, ptr %1030, i64 4
  %1249 = load i8, ptr %1248, align 1, !tbaa !17
  %1250 = icmp eq i8 %1249, -50
  br i1 %1250, label %1251, label %1891

1251:                                             ; preds = %1247
  %1252 = getelementptr inbounds i8, ptr %1030, i64 5
  %1253 = load i8, ptr %1252, align 1, !tbaa !17
  %1254 = freeze i8 %1253
  %1255 = icmp eq i8 %1254, -71
  %1256 = select i1 %1255, i64 6, i64 4
  br label %1891

1257:                                             ; preds = %1240
  %1258 = getelementptr inbounds i8, ptr %1030, i64 3
  %1259 = load i8, ptr %1258, align 1, !tbaa !17
  %1260 = freeze i8 %1259
  %1261 = icmp eq i8 %1260, -71
  br i1 %1261, label %1891, label %1876

1262:                                             ; preds = %1189
  %1263 = getelementptr inbounds i8, ptr %1030, i64 2
  %1264 = load i8, ptr %1263, align 1, !tbaa !17
  %1265 = icmp eq i8 %1264, -50
  br i1 %1265, label %1266, label %1876

1266:                                             ; preds = %1262
  %1267 = getelementptr inbounds i8, ptr %1030, i64 3
  %1268 = load i8, ptr %1267, align 1, !tbaa !17
  %1269 = freeze i8 %1268
  %1270 = icmp eq i8 %1269, -71
  br i1 %1270, label %1891, label %1876

1271:                                             ; preds = %1034
  %1272 = getelementptr inbounds i8, ptr %1030, i64 1
  %1273 = load i8, ptr %1272, align 1, !tbaa !17
  switch i8 %1273, label %1876 [
    i8 -91, label %1274
    i8 -76, label %1283
    i8 -66, label %1290
  ]

1274:                                             ; preds = %1271
  %1275 = getelementptr inbounds i8, ptr %1030, i64 2
  %1276 = load i8, ptr %1275, align 1, !tbaa !17
  %1277 = icmp eq i8 %1276, -42
  br i1 %1277, label %1278, label %1876

1278:                                             ; preds = %1274
  %1279 = getelementptr inbounds i8, ptr %1030, i64 3
  %1280 = load i8, ptr %1279, align 1, !tbaa !17
  %1281 = freeze i8 %1280
  %1282 = icmp eq i8 %1281, -126
  br i1 %1282, label %1891, label %1876

1283:                                             ; preds = %1271
  %1284 = getelementptr inbounds i8, ptr %1030, i64 2
  %1285 = load i8, ptr %1284, align 1, !tbaa !17
  %1286 = icmp eq i8 %1285, -43
  br i1 %1286, label %1287, label %1876

1287:                                             ; preds = %1283
  %1288 = getelementptr inbounds i8, ptr %1030, i64 3
  %1289 = load i8, ptr %1288, align 1, !tbaa !17
  switch i8 %1289, label %1876 [
    i8 -83, label %1891
    i8 -85, label %1891
    i8 -91, label %1891
    i8 -74, label %1891
  ]

1290:                                             ; preds = %1271
  %1291 = getelementptr inbounds i8, ptr %1030, i64 2
  %1292 = load i8, ptr %1291, align 1, !tbaa !17
  %1293 = icmp eq i8 %1292, -43
  br i1 %1293, label %1294, label %1876

1294:                                             ; preds = %1290
  %1295 = getelementptr inbounds i8, ptr %1030, i64 3
  %1296 = load i8, ptr %1295, align 1, !tbaa !17
  %1297 = freeze i8 %1296
  %1298 = icmp eq i8 %1297, -74
  br i1 %1298, label %1891, label %1876

1299:                                             ; preds = %1034
  %1300 = getelementptr inbounds i8, ptr %1030, i64 1
  %1301 = load i8, ptr %1300, align 1, !tbaa !17
  switch i8 %1301, label %1876 [
    i8 -68, label %1302
    i8 -67, label %1316
  ]

1302:                                             ; preds = %1299
  %1303 = getelementptr inbounds i8, ptr %1030, i64 2
  %1304 = load i8, ptr %1303, align 1, !tbaa !17
  %1305 = and i8 %1304, -40
  %1306 = icmp eq i8 %1305, -128
  br i1 %1306, label %1307, label %1876

1307:                                             ; preds = %1302
  %1308 = getelementptr inbounds i8, ptr %1030, i64 3
  %1309 = load i8, ptr %1308, align 1, !tbaa !17
  %1310 = icmp eq i8 %1309, -50
  br i1 %1310, label %1311, label %1876

1311:                                             ; preds = %1307
  %1312 = getelementptr inbounds i8, ptr %1030, i64 4
  %1313 = load i8, ptr %1312, align 1, !tbaa !17
  %1314 = freeze i8 %1313
  %1315 = icmp eq i8 %1314, -71
  br i1 %1315, label %1891, label %1876

1316:                                             ; preds = %1299
  %1317 = getelementptr inbounds i8, ptr %1030, i64 2
  %1318 = load i8, ptr %1317, align 1, !tbaa !17
  %1319 = zext i8 %1318 to i32
  %1320 = and i32 %1319, 248
  %1321 = icmp eq i32 %1320, 160
  %1322 = and i32 %1319, 251
  %1323 = icmp eq i32 %1322, 176
  %1324 = or i1 %1321, %1323
  %1325 = icmp eq i8 %1318, -68
  %1326 = or i1 %1325, %1324
  br i1 %1326, label %1327, label %1876

1327:                                             ; preds = %1316
  %1328 = getelementptr inbounds i8, ptr %1030, i64 3
  %1329 = load i8, ptr %1328, align 1, !tbaa !17
  %1330 = icmp eq i8 %1329, -50
  br i1 %1330, label %1331, label %1876

1331:                                             ; preds = %1327
  %1332 = getelementptr inbounds i8, ptr %1030, i64 4
  %1333 = load i8, ptr %1332, align 1, !tbaa !17
  %1334 = freeze i8 %1333
  %1335 = icmp eq i8 %1334, -71
  br i1 %1335, label %1891, label %1876

1336:                                             ; preds = %1028
  %1337 = icmp eq i64 %1032, 5
  br i1 %1337, label %1338, label %1577

1338:                                             ; preds = %1336
  %1339 = load i8, ptr %1030, align 1, !tbaa !17
  switch i8 %1339, label %1876 [
    i8 97, label %1340
    i8 102, label %1349
    i8 104, label %1359
    i8 105, label %1368
    i8 106, label %1377
    i8 115, label %1386
    i8 116, label %1391
    i8 119, label %1400
    i8 121, label %1400
    i8 -59, label %1409
    i8 -54, label %1422
    i8 -50, label %1431
    i8 -49, label %1467
    i8 -43, label %1512
    i8 -31, label %1540
  ]

1340:                                             ; preds = %1338
  %1341 = getelementptr inbounds i8, ptr %1030, i64 1
  %1342 = load i8, ptr %1341, align 1, !tbaa !17
  %1343 = icmp eq i8 %1342, -54
  br i1 %1343, label %1344, label %1876

1344:                                             ; preds = %1340
  %1345 = getelementptr inbounds i8, ptr %1030, i64 2
  %1346 = load i8, ptr %1345, align 1, !tbaa !17
  %1347 = freeze i8 %1346
  %1348 = icmp eq i8 %1347, -66
  br i1 %1348, label %1891, label %1876

1349:                                             ; preds = %1338
  %1350 = getelementptr inbounds i8, ptr %1030, i64 1
  %1351 = load i8, ptr %1350, align 1, !tbaa !17
  switch i8 %1351, label %1876 [
    i8 102, label %1352
    i8 105, label %1891
    i8 108, label %1891
  ]

1352:                                             ; preds = %1349
  %1353 = getelementptr inbounds i8, ptr %1030, i64 2
  %1354 = load i8, ptr %1353, align 1, !tbaa !17
  %1355 = icmp eq i8 %1354, 108
  %1356 = icmp eq i8 %1354, 105
  %1357 = or i1 %1355, %1356
  %1358 = select i1 %1357, i64 3, i64 2
  br label %1891

1359:                                             ; preds = %1338
  %1360 = getelementptr inbounds i8, ptr %1030, i64 1
  %1361 = load i8, ptr %1360, align 1, !tbaa !17
  %1362 = icmp eq i8 %1361, -52
  br i1 %1362, label %1363, label %1876

1363:                                             ; preds = %1359
  %1364 = getelementptr inbounds i8, ptr %1030, i64 2
  %1365 = load i8, ptr %1364, align 1, !tbaa !17
  %1366 = freeze i8 %1365
  %1367 = icmp eq i8 %1366, -79
  br i1 %1367, label %1891, label %1876

1368:                                             ; preds = %1338
  %1369 = getelementptr inbounds i8, ptr %1030, i64 1
  %1370 = load i8, ptr %1369, align 1, !tbaa !17
  %1371 = icmp eq i8 %1370, -52
  br i1 %1371, label %1372, label %1876

1372:                                             ; preds = %1368
  %1373 = getelementptr inbounds i8, ptr %1030, i64 2
  %1374 = load i8, ptr %1373, align 1, !tbaa !17
  %1375 = freeze i8 %1374
  %1376 = icmp eq i8 %1375, -121
  br i1 %1376, label %1891, label %1876

1377:                                             ; preds = %1338
  %1378 = getelementptr inbounds i8, ptr %1030, i64 1
  %1379 = load i8, ptr %1378, align 1, !tbaa !17
  %1380 = icmp eq i8 %1379, -52
  br i1 %1380, label %1381, label %1876

1381:                                             ; preds = %1377
  %1382 = getelementptr inbounds i8, ptr %1030, i64 2
  %1383 = load i8, ptr %1382, align 1, !tbaa !17
  %1384 = freeze i8 %1383
  %1385 = icmp eq i8 %1384, -116
  br i1 %1385, label %1891, label %1876

1386:                                             ; preds = %1338
  %1387 = getelementptr inbounds i8, ptr %1030, i64 1
  %1388 = load i8, ptr %1387, align 1, !tbaa !17
  %1389 = add i8 %1388, -115
  %1390 = icmp ult i8 %1389, 2
  br i1 %1390, label %1883, label %1876

1391:                                             ; preds = %1338
  %1392 = getelementptr inbounds i8, ptr %1030, i64 1
  %1393 = load i8, ptr %1392, align 1, !tbaa !17
  %1394 = icmp eq i8 %1393, -52
  br i1 %1394, label %1395, label %1876

1395:                                             ; preds = %1391
  %1396 = getelementptr inbounds i8, ptr %1030, i64 2
  %1397 = load i8, ptr %1396, align 1, !tbaa !17
  %1398 = freeze i8 %1397
  %1399 = icmp eq i8 %1398, -120
  br i1 %1399, label %1891, label %1876

1400:                                             ; preds = %1338, %1338
  %1401 = getelementptr inbounds i8, ptr %1030, i64 1
  %1402 = load i8, ptr %1401, align 1, !tbaa !17
  %1403 = icmp eq i8 %1402, -52
  br i1 %1403, label %1404, label %1876

1404:                                             ; preds = %1400
  %1405 = getelementptr inbounds i8, ptr %1030, i64 2
  %1406 = load i8, ptr %1405, align 1, !tbaa !17
  %1407 = freeze i8 %1406
  %1408 = icmp eq i8 %1407, -118
  br i1 %1408, label %1891, label %1876

1409:                                             ; preds = %1338
  %1410 = getelementptr inbounds i8, ptr %1030, i64 1
  %1411 = load i8, ptr %1410, align 1, !tbaa !17
  %1412 = icmp eq i8 %1411, -65
  br i1 %1412, label %1413, label %1876

1413:                                             ; preds = %1409
  %1414 = getelementptr inbounds i8, ptr %1030, i64 2
  %1415 = load i8, ptr %1414, align 1, !tbaa !17
  %1416 = icmp eq i8 %1415, -59
  br i1 %1416, label %1417, label %1876

1417:                                             ; preds = %1413
  %1418 = getelementptr inbounds i8, ptr %1030, i64 3
  %1419 = load i8, ptr %1418, align 1, !tbaa !17
  %1420 = freeze i8 %1419
  %1421 = icmp eq i8 %1420, -65
  br i1 %1421, label %1891, label %1876

1422:                                             ; preds = %1338
  %1423 = getelementptr inbounds i8, ptr %1030, i64 1
  %1424 = load i8, ptr %1423, align 1, !tbaa !17
  %1425 = icmp eq i8 %1424, -68
  br i1 %1425, label %1426, label %1876

1426:                                             ; preds = %1422
  %1427 = getelementptr inbounds i8, ptr %1030, i64 2
  %1428 = load i8, ptr %1427, align 1, !tbaa !17
  %1429 = freeze i8 %1428
  %1430 = icmp eq i8 %1429, 110
  br i1 %1430, label %1891, label %1876

1431:                                             ; preds = %1338
  %1432 = getelementptr inbounds i8, ptr %1030, i64 1
  %1433 = load i8, ptr %1432, align 1, !tbaa !17
  %1434 = and i8 %1433, -3
  %1435 = icmp eq i8 %1434, -84
  br i1 %1435, label %1436, label %1445

1436:                                             ; preds = %1431
  %1437 = getelementptr inbounds i8, ptr %1030, i64 2
  %1438 = load i8, ptr %1437, align 1, !tbaa !17
  %1439 = icmp eq i8 %1438, -50
  br i1 %1439, label %1440, label %1876

1440:                                             ; preds = %1436
  %1441 = getelementptr inbounds i8, ptr %1030, i64 3
  %1442 = load i8, ptr %1441, align 1, !tbaa !17
  %1443 = freeze i8 %1442
  %1444 = icmp eq i8 %1443, -71
  br i1 %1444, label %1891, label %1876

1445:                                             ; preds = %1431
  switch i8 %1433, label %1876 [
    i8 -79, label %1446
    i8 -73, label %1446
    i8 -71, label %1458
  ]

1446:                                             ; preds = %1445, %1445
  %1447 = getelementptr inbounds i8, ptr %1030, i64 2
  %1448 = load i8, ptr %1447, align 1, !tbaa !17
  switch i8 %1448, label %1876 [
    i8 -51, label %1449
    i8 -50, label %1453
  ]

1449:                                             ; preds = %1446
  %1450 = getelementptr inbounds i8, ptr %1030, i64 3
  %1451 = load i8, ptr %1450, align 1, !tbaa !17
  %1452 = icmp eq i8 %1451, -126
  br i1 %1452, label %1891, label %1876

1453:                                             ; preds = %1446
  %1454 = getelementptr inbounds i8, ptr %1030, i64 3
  %1455 = load i8, ptr %1454, align 1, !tbaa !17
  %1456 = freeze i8 %1455
  %1457 = icmp eq i8 %1456, -71
  br i1 %1457, label %1891, label %1876

1458:                                             ; preds = %1445
  %1459 = getelementptr inbounds i8, ptr %1030, i64 2
  %1460 = load i8, ptr %1459, align 1, !tbaa !17
  %1461 = icmp eq i8 %1460, -51
  br i1 %1461, label %1462, label %1876

1462:                                             ; preds = %1458
  %1463 = getelementptr inbounds i8, ptr %1030, i64 3
  %1464 = load i8, ptr %1463, align 1, !tbaa !17
  %1465 = freeze i8 %1464
  %1466 = icmp eq i8 %1465, -126
  br i1 %1466, label %1891, label %1876

1467:                                             ; preds = %1338
  %1468 = getelementptr inbounds i8, ptr %1030, i64 1
  %1469 = load i8, ptr %1468, align 1, !tbaa !17
  switch i8 %1469, label %1876 [
    i8 -127, label %1470
    i8 -123, label %1479
    i8 -119, label %1491
    i8 -114, label %1503
  ]

1470:                                             ; preds = %1467
  %1471 = getelementptr inbounds i8, ptr %1030, i64 2
  %1472 = load i8, ptr %1471, align 1, !tbaa !17
  %1473 = icmp eq i8 %1472, -52
  br i1 %1473, label %1474, label %1876

1474:                                             ; preds = %1470
  %1475 = getelementptr inbounds i8, ptr %1030, i64 3
  %1476 = load i8, ptr %1475, align 1, !tbaa !17
  %1477 = freeze i8 %1476
  %1478 = icmp eq i8 %1477, -109
  br i1 %1478, label %1891, label %1876

1479:                                             ; preds = %1467
  %1480 = getelementptr inbounds i8, ptr %1030, i64 2
  %1481 = load i8, ptr %1480, align 1, !tbaa !17
  switch i8 %1481, label %1876 [
    i8 -52, label %1482
    i8 -51, label %1486
  ]

1482:                                             ; preds = %1479
  %1483 = getelementptr inbounds i8, ptr %1030, i64 3
  %1484 = load i8, ptr %1483, align 1, !tbaa !17
  %1485 = icmp eq i8 %1484, -109
  br i1 %1485, label %1891, label %1876

1486:                                             ; preds = %1479
  %1487 = getelementptr inbounds i8, ptr %1030, i64 3
  %1488 = load i8, ptr %1487, align 1, !tbaa !17
  %1489 = freeze i8 %1488
  %1490 = icmp eq i8 %1489, -126
  br i1 %1490, label %1891, label %1876

1491:                                             ; preds = %1467
  %1492 = getelementptr inbounds i8, ptr %1030, i64 2
  %1493 = load i8, ptr %1492, align 1, !tbaa !17
  switch i8 %1493, label %1876 [
    i8 -51, label %1494
    i8 -50, label %1498
  ]

1494:                                             ; preds = %1491
  %1495 = getelementptr inbounds i8, ptr %1030, i64 3
  %1496 = load i8, ptr %1495, align 1, !tbaa !17
  %1497 = icmp eq i8 %1496, -126
  br i1 %1497, label %1891, label %1876

1498:                                             ; preds = %1491
  %1499 = getelementptr inbounds i8, ptr %1030, i64 3
  %1500 = load i8, ptr %1499, align 1, !tbaa !17
  %1501 = freeze i8 %1500
  %1502 = icmp eq i8 %1501, -71
  br i1 %1502, label %1891, label %1876

1503:                                             ; preds = %1467
  %1504 = getelementptr inbounds i8, ptr %1030, i64 2
  %1505 = load i8, ptr %1504, align 1, !tbaa !17
  %1506 = icmp eq i8 %1505, -50
  br i1 %1506, label %1507, label %1876

1507:                                             ; preds = %1503
  %1508 = getelementptr inbounds i8, ptr %1030, i64 3
  %1509 = load i8, ptr %1508, align 1, !tbaa !17
  %1510 = freeze i8 %1509
  %1511 = icmp eq i8 %1510, -71
  br i1 %1511, label %1891, label %1876

1512:                                             ; preds = %1338
  %1513 = getelementptr inbounds i8, ptr %1030, i64 1
  %1514 = load i8, ptr %1513, align 1, !tbaa !17
  switch i8 %1514, label %1876 [
    i8 -91, label %1515
    i8 -76, label %1524
    i8 -66, label %1531
  ]

1515:                                             ; preds = %1512
  %1516 = getelementptr inbounds i8, ptr %1030, i64 2
  %1517 = load i8, ptr %1516, align 1, !tbaa !17
  %1518 = icmp eq i8 %1517, -42
  br i1 %1518, label %1519, label %1876

1519:                                             ; preds = %1515
  %1520 = getelementptr inbounds i8, ptr %1030, i64 3
  %1521 = load i8, ptr %1520, align 1, !tbaa !17
  %1522 = freeze i8 %1521
  %1523 = icmp eq i8 %1522, -126
  br i1 %1523, label %1891, label %1876

1524:                                             ; preds = %1512
  %1525 = getelementptr inbounds i8, ptr %1030, i64 2
  %1526 = load i8, ptr %1525, align 1, !tbaa !17
  %1527 = icmp eq i8 %1526, -43
  br i1 %1527, label %1528, label %1876

1528:                                             ; preds = %1524
  %1529 = getelementptr inbounds i8, ptr %1030, i64 3
  %1530 = load i8, ptr %1529, align 1, !tbaa !17
  switch i8 %1530, label %1876 [
    i8 -83, label %1891
    i8 -85, label %1891
    i8 -91, label %1891
    i8 -74, label %1891
  ]

1531:                                             ; preds = %1512
  %1532 = getelementptr inbounds i8, ptr %1030, i64 2
  %1533 = load i8, ptr %1532, align 1, !tbaa !17
  %1534 = icmp eq i8 %1533, -43
  br i1 %1534, label %1535, label %1876

1535:                                             ; preds = %1531
  %1536 = getelementptr inbounds i8, ptr %1030, i64 3
  %1537 = load i8, ptr %1536, align 1, !tbaa !17
  %1538 = freeze i8 %1537
  %1539 = icmp eq i8 %1538, -74
  br i1 %1539, label %1891, label %1876

1540:                                             ; preds = %1338
  %1541 = getelementptr inbounds i8, ptr %1030, i64 1
  %1542 = load i8, ptr %1541, align 1, !tbaa !17
  switch i8 %1542, label %1876 [
    i8 -68, label %1543
    i8 -67, label %1557
  ]

1543:                                             ; preds = %1540
  %1544 = getelementptr inbounds i8, ptr %1030, i64 2
  %1545 = load i8, ptr %1544, align 1, !tbaa !17
  %1546 = and i8 %1545, -40
  %1547 = icmp eq i8 %1546, -128
  br i1 %1547, label %1548, label %1876

1548:                                             ; preds = %1543
  %1549 = getelementptr inbounds i8, ptr %1030, i64 3
  %1550 = load i8, ptr %1549, align 1, !tbaa !17
  %1551 = icmp eq i8 %1550, -50
  br i1 %1551, label %1552, label %1876

1552:                                             ; preds = %1548
  %1553 = getelementptr inbounds i8, ptr %1030, i64 4
  %1554 = load i8, ptr %1553, align 1, !tbaa !17
  %1555 = freeze i8 %1554
  %1556 = icmp eq i8 %1555, -71
  br i1 %1556, label %1891, label %1876

1557:                                             ; preds = %1540
  %1558 = getelementptr inbounds i8, ptr %1030, i64 2
  %1559 = load i8, ptr %1558, align 1, !tbaa !17
  %1560 = zext i8 %1559 to i32
  %1561 = and i32 %1560, 248
  %1562 = icmp eq i32 %1561, 160
  %1563 = and i32 %1560, 251
  %1564 = icmp eq i32 %1563, 176
  %1565 = or i1 %1562, %1564
  %1566 = icmp eq i8 %1559, -68
  %1567 = or i1 %1566, %1565
  br i1 %1567, label %1568, label %1876

1568:                                             ; preds = %1557
  %1569 = getelementptr inbounds i8, ptr %1030, i64 3
  %1570 = load i8, ptr %1569, align 1, !tbaa !17
  %1571 = icmp eq i8 %1570, -50
  br i1 %1571, label %1572, label %1876

1572:                                             ; preds = %1568
  %1573 = getelementptr inbounds i8, ptr %1030, i64 4
  %1574 = load i8, ptr %1573, align 1, !tbaa !17
  %1575 = freeze i8 %1574
  %1576 = icmp eq i8 %1575, -71
  br i1 %1576, label %1891, label %1876

1577:                                             ; preds = %1336
  %1578 = icmp sgt i64 %1032, 3
  br i1 %1578, label %1579, label %1781

1579:                                             ; preds = %1577
  %1580 = load i8, ptr %1030, align 1, !tbaa !17
  switch i8 %1580, label %1876 [
    i8 97, label %1581
    i8 102, label %1590
    i8 104, label %1600
    i8 105, label %1609
    i8 106, label %1618
    i8 115, label %1627
    i8 116, label %1632
    i8 119, label %1641
    i8 121, label %1641
    i8 -59, label %1650
    i8 -54, label %1663
    i8 -50, label %1672
    i8 -49, label %1708
    i8 -43, label %1753
  ]

1581:                                             ; preds = %1579
  %1582 = getelementptr inbounds i8, ptr %1030, i64 1
  %1583 = load i8, ptr %1582, align 1, !tbaa !17
  %1584 = icmp eq i8 %1583, -54
  br i1 %1584, label %1585, label %1876

1585:                                             ; preds = %1581
  %1586 = getelementptr inbounds i8, ptr %1030, i64 2
  %1587 = load i8, ptr %1586, align 1, !tbaa !17
  %1588 = freeze i8 %1587
  %1589 = icmp eq i8 %1588, -66
  br i1 %1589, label %1891, label %1876

1590:                                             ; preds = %1579
  %1591 = getelementptr inbounds i8, ptr %1030, i64 1
  %1592 = load i8, ptr %1591, align 1, !tbaa !17
  switch i8 %1592, label %1876 [
    i8 102, label %1593
    i8 105, label %1891
    i8 108, label %1891
  ]

1593:                                             ; preds = %1590
  %1594 = getelementptr inbounds i8, ptr %1030, i64 2
  %1595 = load i8, ptr %1594, align 1, !tbaa !17
  %1596 = icmp eq i8 %1595, 108
  %1597 = icmp eq i8 %1595, 105
  %1598 = or i1 %1596, %1597
  %1599 = select i1 %1598, i64 3, i64 2
  br label %1891

1600:                                             ; preds = %1579
  %1601 = getelementptr inbounds i8, ptr %1030, i64 1
  %1602 = load i8, ptr %1601, align 1, !tbaa !17
  %1603 = icmp eq i8 %1602, -52
  br i1 %1603, label %1604, label %1876

1604:                                             ; preds = %1600
  %1605 = getelementptr inbounds i8, ptr %1030, i64 2
  %1606 = load i8, ptr %1605, align 1, !tbaa !17
  %1607 = freeze i8 %1606
  %1608 = icmp eq i8 %1607, -79
  br i1 %1608, label %1891, label %1876

1609:                                             ; preds = %1579
  %1610 = getelementptr inbounds i8, ptr %1030, i64 1
  %1611 = load i8, ptr %1610, align 1, !tbaa !17
  %1612 = icmp eq i8 %1611, -52
  br i1 %1612, label %1613, label %1876

1613:                                             ; preds = %1609
  %1614 = getelementptr inbounds i8, ptr %1030, i64 2
  %1615 = load i8, ptr %1614, align 1, !tbaa !17
  %1616 = freeze i8 %1615
  %1617 = icmp eq i8 %1616, -121
  br i1 %1617, label %1891, label %1876

1618:                                             ; preds = %1579
  %1619 = getelementptr inbounds i8, ptr %1030, i64 1
  %1620 = load i8, ptr %1619, align 1, !tbaa !17
  %1621 = icmp eq i8 %1620, -52
  br i1 %1621, label %1622, label %1876

1622:                                             ; preds = %1618
  %1623 = getelementptr inbounds i8, ptr %1030, i64 2
  %1624 = load i8, ptr %1623, align 1, !tbaa !17
  %1625 = freeze i8 %1624
  %1626 = icmp eq i8 %1625, -116
  br i1 %1626, label %1891, label %1876

1627:                                             ; preds = %1579
  %1628 = getelementptr inbounds i8, ptr %1030, i64 1
  %1629 = load i8, ptr %1628, align 1, !tbaa !17
  %1630 = add i8 %1629, -115
  %1631 = icmp ult i8 %1630, 2
  br i1 %1631, label %1883, label %1876

1632:                                             ; preds = %1579
  %1633 = getelementptr inbounds i8, ptr %1030, i64 1
  %1634 = load i8, ptr %1633, align 1, !tbaa !17
  %1635 = icmp eq i8 %1634, -52
  br i1 %1635, label %1636, label %1876

1636:                                             ; preds = %1632
  %1637 = getelementptr inbounds i8, ptr %1030, i64 2
  %1638 = load i8, ptr %1637, align 1, !tbaa !17
  %1639 = freeze i8 %1638
  %1640 = icmp eq i8 %1639, -120
  br i1 %1640, label %1891, label %1876

1641:                                             ; preds = %1579, %1579
  %1642 = getelementptr inbounds i8, ptr %1030, i64 1
  %1643 = load i8, ptr %1642, align 1, !tbaa !17
  %1644 = icmp eq i8 %1643, -52
  br i1 %1644, label %1645, label %1876

1645:                                             ; preds = %1641
  %1646 = getelementptr inbounds i8, ptr %1030, i64 2
  %1647 = load i8, ptr %1646, align 1, !tbaa !17
  %1648 = freeze i8 %1647
  %1649 = icmp eq i8 %1648, -118
  br i1 %1649, label %1891, label %1876

1650:                                             ; preds = %1579
  %1651 = getelementptr inbounds i8, ptr %1030, i64 1
  %1652 = load i8, ptr %1651, align 1, !tbaa !17
  %1653 = icmp eq i8 %1652, -65
  br i1 %1653, label %1654, label %1876

1654:                                             ; preds = %1650
  %1655 = getelementptr inbounds i8, ptr %1030, i64 2
  %1656 = load i8, ptr %1655, align 1, !tbaa !17
  %1657 = icmp eq i8 %1656, -59
  br i1 %1657, label %1658, label %1876

1658:                                             ; preds = %1654
  %1659 = getelementptr inbounds i8, ptr %1030, i64 3
  %1660 = load i8, ptr %1659, align 1, !tbaa !17
  %1661 = freeze i8 %1660
  %1662 = icmp eq i8 %1661, -65
  br i1 %1662, label %1891, label %1876

1663:                                             ; preds = %1579
  %1664 = getelementptr inbounds i8, ptr %1030, i64 1
  %1665 = load i8, ptr %1664, align 1, !tbaa !17
  %1666 = icmp eq i8 %1665, -68
  br i1 %1666, label %1667, label %1876

1667:                                             ; preds = %1663
  %1668 = getelementptr inbounds i8, ptr %1030, i64 2
  %1669 = load i8, ptr %1668, align 1, !tbaa !17
  %1670 = freeze i8 %1669
  %1671 = icmp eq i8 %1670, 110
  br i1 %1671, label %1891, label %1876

1672:                                             ; preds = %1579
  %1673 = getelementptr inbounds i8, ptr %1030, i64 1
  %1674 = load i8, ptr %1673, align 1, !tbaa !17
  %1675 = and i8 %1674, -3
  %1676 = icmp eq i8 %1675, -84
  br i1 %1676, label %1677, label %1686

1677:                                             ; preds = %1672
  %1678 = getelementptr inbounds i8, ptr %1030, i64 2
  %1679 = load i8, ptr %1678, align 1, !tbaa !17
  %1680 = icmp eq i8 %1679, -50
  br i1 %1680, label %1681, label %1876

1681:                                             ; preds = %1677
  %1682 = getelementptr inbounds i8, ptr %1030, i64 3
  %1683 = load i8, ptr %1682, align 1, !tbaa !17
  %1684 = freeze i8 %1683
  %1685 = icmp eq i8 %1684, -71
  br i1 %1685, label %1891, label %1876

1686:                                             ; preds = %1672
  switch i8 %1674, label %1876 [
    i8 -79, label %1687
    i8 -73, label %1687
    i8 -71, label %1699
  ]

1687:                                             ; preds = %1686, %1686
  %1688 = getelementptr inbounds i8, ptr %1030, i64 2
  %1689 = load i8, ptr %1688, align 1, !tbaa !17
  switch i8 %1689, label %1876 [
    i8 -51, label %1690
    i8 -50, label %1694
  ]

1690:                                             ; preds = %1687
  %1691 = getelementptr inbounds i8, ptr %1030, i64 3
  %1692 = load i8, ptr %1691, align 1, !tbaa !17
  %1693 = icmp eq i8 %1692, -126
  br i1 %1693, label %1891, label %1876

1694:                                             ; preds = %1687
  %1695 = getelementptr inbounds i8, ptr %1030, i64 3
  %1696 = load i8, ptr %1695, align 1, !tbaa !17
  %1697 = freeze i8 %1696
  %1698 = icmp eq i8 %1697, -71
  br i1 %1698, label %1891, label %1876

1699:                                             ; preds = %1686
  %1700 = getelementptr inbounds i8, ptr %1030, i64 2
  %1701 = load i8, ptr %1700, align 1, !tbaa !17
  %1702 = icmp eq i8 %1701, -51
  br i1 %1702, label %1703, label %1876

1703:                                             ; preds = %1699
  %1704 = getelementptr inbounds i8, ptr %1030, i64 3
  %1705 = load i8, ptr %1704, align 1, !tbaa !17
  %1706 = freeze i8 %1705
  %1707 = icmp eq i8 %1706, -126
  br i1 %1707, label %1891, label %1876

1708:                                             ; preds = %1579
  %1709 = getelementptr inbounds i8, ptr %1030, i64 1
  %1710 = load i8, ptr %1709, align 1, !tbaa !17
  switch i8 %1710, label %1876 [
    i8 -127, label %1711
    i8 -123, label %1720
    i8 -119, label %1732
    i8 -114, label %1744
  ]

1711:                                             ; preds = %1708
  %1712 = getelementptr inbounds i8, ptr %1030, i64 2
  %1713 = load i8, ptr %1712, align 1, !tbaa !17
  %1714 = icmp eq i8 %1713, -52
  br i1 %1714, label %1715, label %1876

1715:                                             ; preds = %1711
  %1716 = getelementptr inbounds i8, ptr %1030, i64 3
  %1717 = load i8, ptr %1716, align 1, !tbaa !17
  %1718 = freeze i8 %1717
  %1719 = icmp eq i8 %1718, -109
  br i1 %1719, label %1891, label %1876

1720:                                             ; preds = %1708
  %1721 = getelementptr inbounds i8, ptr %1030, i64 2
  %1722 = load i8, ptr %1721, align 1, !tbaa !17
  switch i8 %1722, label %1876 [
    i8 -52, label %1723
    i8 -51, label %1727
  ]

1723:                                             ; preds = %1720
  %1724 = getelementptr inbounds i8, ptr %1030, i64 3
  %1725 = load i8, ptr %1724, align 1, !tbaa !17
  %1726 = icmp eq i8 %1725, -109
  br i1 %1726, label %1891, label %1876

1727:                                             ; preds = %1720
  %1728 = getelementptr inbounds i8, ptr %1030, i64 3
  %1729 = load i8, ptr %1728, align 1, !tbaa !17
  %1730 = freeze i8 %1729
  %1731 = icmp eq i8 %1730, -126
  br i1 %1731, label %1891, label %1876

1732:                                             ; preds = %1708
  %1733 = getelementptr inbounds i8, ptr %1030, i64 2
  %1734 = load i8, ptr %1733, align 1, !tbaa !17
  switch i8 %1734, label %1876 [
    i8 -51, label %1735
    i8 -50, label %1739
  ]

1735:                                             ; preds = %1732
  %1736 = getelementptr inbounds i8, ptr %1030, i64 3
  %1737 = load i8, ptr %1736, align 1, !tbaa !17
  %1738 = icmp eq i8 %1737, -126
  br i1 %1738, label %1891, label %1876

1739:                                             ; preds = %1732
  %1740 = getelementptr inbounds i8, ptr %1030, i64 3
  %1741 = load i8, ptr %1740, align 1, !tbaa !17
  %1742 = freeze i8 %1741
  %1743 = icmp eq i8 %1742, -71
  br i1 %1743, label %1891, label %1876

1744:                                             ; preds = %1708
  %1745 = getelementptr inbounds i8, ptr %1030, i64 2
  %1746 = load i8, ptr %1745, align 1, !tbaa !17
  %1747 = icmp eq i8 %1746, -50
  br i1 %1747, label %1748, label %1876

1748:                                             ; preds = %1744
  %1749 = getelementptr inbounds i8, ptr %1030, i64 3
  %1750 = load i8, ptr %1749, align 1, !tbaa !17
  %1751 = freeze i8 %1750
  %1752 = icmp eq i8 %1751, -71
  br i1 %1752, label %1891, label %1876

1753:                                             ; preds = %1579
  %1754 = getelementptr inbounds i8, ptr %1030, i64 1
  %1755 = load i8, ptr %1754, align 1, !tbaa !17
  switch i8 %1755, label %1876 [
    i8 -91, label %1756
    i8 -76, label %1765
    i8 -66, label %1772
  ]

1756:                                             ; preds = %1753
  %1757 = getelementptr inbounds i8, ptr %1030, i64 2
  %1758 = load i8, ptr %1757, align 1, !tbaa !17
  %1759 = icmp eq i8 %1758, -42
  br i1 %1759, label %1760, label %1876

1760:                                             ; preds = %1756
  %1761 = getelementptr inbounds i8, ptr %1030, i64 3
  %1762 = load i8, ptr %1761, align 1, !tbaa !17
  %1763 = freeze i8 %1762
  %1764 = icmp eq i8 %1763, -126
  br i1 %1764, label %1891, label %1876

1765:                                             ; preds = %1753
  %1766 = getelementptr inbounds i8, ptr %1030, i64 2
  %1767 = load i8, ptr %1766, align 1, !tbaa !17
  %1768 = icmp eq i8 %1767, -43
  br i1 %1768, label %1769, label %1876

1769:                                             ; preds = %1765
  %1770 = getelementptr inbounds i8, ptr %1030, i64 3
  %1771 = load i8, ptr %1770, align 1, !tbaa !17
  switch i8 %1771, label %1876 [
    i8 -83, label %1891
    i8 -85, label %1891
    i8 -91, label %1891
    i8 -74, label %1891
  ]

1772:                                             ; preds = %1753
  %1773 = getelementptr inbounds i8, ptr %1030, i64 2
  %1774 = load i8, ptr %1773, align 1, !tbaa !17
  %1775 = icmp eq i8 %1774, -43
  br i1 %1775, label %1776, label %1876

1776:                                             ; preds = %1772
  %1777 = getelementptr inbounds i8, ptr %1030, i64 3
  %1778 = load i8, ptr %1777, align 1, !tbaa !17
  %1779 = freeze i8 %1778
  %1780 = icmp eq i8 %1779, -74
  br i1 %1780, label %1891, label %1876

1781:                                             ; preds = %1577
  %1782 = icmp eq i64 %1032, 3
  br i1 %1782, label %1783, label %1863

1783:                                             ; preds = %1781
  %1784 = load i8, ptr %1030, align 1, !tbaa !17
  switch i8 %1784, label %1876 [
    i8 97, label %1785
    i8 102, label %1794
    i8 104, label %1804
    i8 105, label %1813
    i8 106, label %1822
    i8 115, label %1831
    i8 116, label %1836
    i8 119, label %1845
    i8 121, label %1845
    i8 -54, label %1854
  ]

1785:                                             ; preds = %1783
  %1786 = getelementptr inbounds i8, ptr %1030, i64 1
  %1787 = load i8, ptr %1786, align 1, !tbaa !17
  %1788 = icmp eq i8 %1787, -54
  br i1 %1788, label %1789, label %1876

1789:                                             ; preds = %1785
  %1790 = getelementptr inbounds i8, ptr %1030, i64 2
  %1791 = load i8, ptr %1790, align 1, !tbaa !17
  %1792 = freeze i8 %1791
  %1793 = icmp eq i8 %1792, -66
  br i1 %1793, label %1891, label %1876

1794:                                             ; preds = %1783
  %1795 = getelementptr inbounds i8, ptr %1030, i64 1
  %1796 = load i8, ptr %1795, align 1, !tbaa !17
  switch i8 %1796, label %1876 [
    i8 102, label %1797
    i8 105, label %1891
    i8 108, label %1891
  ]

1797:                                             ; preds = %1794
  %1798 = getelementptr inbounds i8, ptr %1030, i64 2
  %1799 = load i8, ptr %1798, align 1, !tbaa !17
  %1800 = icmp eq i8 %1799, 108
  %1801 = icmp eq i8 %1799, 105
  %1802 = or i1 %1800, %1801
  %1803 = select i1 %1802, i64 3, i64 2
  br label %1891

1804:                                             ; preds = %1783
  %1805 = getelementptr inbounds i8, ptr %1030, i64 1
  %1806 = load i8, ptr %1805, align 1, !tbaa !17
  %1807 = icmp eq i8 %1806, -52
  br i1 %1807, label %1808, label %1876

1808:                                             ; preds = %1804
  %1809 = getelementptr inbounds i8, ptr %1030, i64 2
  %1810 = load i8, ptr %1809, align 1, !tbaa !17
  %1811 = freeze i8 %1810
  %1812 = icmp eq i8 %1811, -79
  br i1 %1812, label %1891, label %1876

1813:                                             ; preds = %1783
  %1814 = getelementptr inbounds i8, ptr %1030, i64 1
  %1815 = load i8, ptr %1814, align 1, !tbaa !17
  %1816 = icmp eq i8 %1815, -52
  br i1 %1816, label %1817, label %1876

1817:                                             ; preds = %1813
  %1818 = getelementptr inbounds i8, ptr %1030, i64 2
  %1819 = load i8, ptr %1818, align 1, !tbaa !17
  %1820 = freeze i8 %1819
  %1821 = icmp eq i8 %1820, -121
  br i1 %1821, label %1891, label %1876

1822:                                             ; preds = %1783
  %1823 = getelementptr inbounds i8, ptr %1030, i64 1
  %1824 = load i8, ptr %1823, align 1, !tbaa !17
  %1825 = icmp eq i8 %1824, -52
  br i1 %1825, label %1826, label %1876

1826:                                             ; preds = %1822
  %1827 = getelementptr inbounds i8, ptr %1030, i64 2
  %1828 = load i8, ptr %1827, align 1, !tbaa !17
  %1829 = freeze i8 %1828
  %1830 = icmp eq i8 %1829, -116
  br i1 %1830, label %1891, label %1876

1831:                                             ; preds = %1783
  %1832 = getelementptr inbounds i8, ptr %1030, i64 1
  %1833 = load i8, ptr %1832, align 1, !tbaa !17
  %1834 = add i8 %1833, -115
  %1835 = icmp ult i8 %1834, 2
  br i1 %1835, label %1883, label %1876

1836:                                             ; preds = %1783
  %1837 = getelementptr inbounds i8, ptr %1030, i64 1
  %1838 = load i8, ptr %1837, align 1, !tbaa !17
  %1839 = icmp eq i8 %1838, -52
  br i1 %1839, label %1840, label %1876

1840:                                             ; preds = %1836
  %1841 = getelementptr inbounds i8, ptr %1030, i64 2
  %1842 = load i8, ptr %1841, align 1, !tbaa !17
  %1843 = freeze i8 %1842
  %1844 = icmp eq i8 %1843, -120
  br i1 %1844, label %1891, label %1876

1845:                                             ; preds = %1783, %1783
  %1846 = getelementptr inbounds i8, ptr %1030, i64 1
  %1847 = load i8, ptr %1846, align 1, !tbaa !17
  %1848 = icmp eq i8 %1847, -52
  br i1 %1848, label %1849, label %1876

1849:                                             ; preds = %1845
  %1850 = getelementptr inbounds i8, ptr %1030, i64 2
  %1851 = load i8, ptr %1850, align 1, !tbaa !17
  %1852 = freeze i8 %1851
  %1853 = icmp eq i8 %1852, -118
  br i1 %1853, label %1891, label %1876

1854:                                             ; preds = %1783
  %1855 = getelementptr inbounds i8, ptr %1030, i64 1
  %1856 = load i8, ptr %1855, align 1, !tbaa !17
  %1857 = icmp eq i8 %1856, -68
  br i1 %1857, label %1858, label %1876

1858:                                             ; preds = %1854
  %1859 = getelementptr inbounds i8, ptr %1030, i64 2
  %1860 = load i8, ptr %1859, align 1, !tbaa !17
  %1861 = freeze i8 %1860
  %1862 = icmp eq i8 %1861, 110
  br i1 %1862, label %1891, label %1876

1863:                                             ; preds = %1781
  %1864 = icmp sgt i64 %1032, 1
  %1865 = load i8, ptr %1030, align 1, !tbaa !17
  br i1 %1864, label %1866, label %1876

1866:                                             ; preds = %1863
  switch i8 %1865, label %1876 [
    i8 102, label %1867
    i8 115, label %1870
  ]

1867:                                             ; preds = %1866
  %1868 = getelementptr inbounds i8, ptr %1030, i64 1
  %1869 = load i8, ptr %1868, align 1, !tbaa !17
  switch i8 %1869, label %1876 [
    i8 102, label %1891
    i8 105, label %1891
    i8 108, label %1891
  ]

1870:                                             ; preds = %1866
  %1871 = getelementptr inbounds i8, ptr %1030, i64 1
  %1872 = load i8, ptr %1871, align 1, !tbaa !17
  %1873 = freeze i8 %1872
  %1874 = add i8 %1873, -115
  %1875 = icmp ult i8 %1874, 2
  br i1 %1875, label %1883, label %1876

1876:                                             ; preds = %1870, %1867, %1866, %1863, %1858, %1854, %1849, %1845, %1840, %1836, %1831, %1826, %1822, %1817, %1813, %1808, %1804, %1794, %1789, %1785, %1783, %1776, %1772, %1769, %1765, %1760, %1756, %1753, %1748, %1744, %1739, %1735, %1732, %1727, %1723, %1720, %1715, %1711, %1708, %1703, %1699, %1694, %1690, %1687, %1686, %1681, %1677, %1667, %1663, %1658, %1654, %1650, %1645, %1641, %1636, %1632, %1627, %1622, %1618, %1613, %1609, %1604, %1600, %1590, %1585, %1581, %1579, %1572, %1568, %1557, %1552, %1548, %1543, %1540, %1535, %1531, %1528, %1524, %1519, %1515, %1512, %1507, %1503, %1498, %1494, %1491, %1486, %1482, %1479, %1474, %1470, %1467, %1462, %1458, %1453, %1449, %1446, %1445, %1440, %1436, %1426, %1422, %1417, %1413, %1409, %1404, %1400, %1395, %1391, %1386, %1381, %1377, %1372, %1368, %1363, %1359, %1349, %1344, %1340, %1338, %1331, %1327, %1316, %1311, %1307, %1302, %1299, %1294, %1290, %1287, %1283, %1278, %1274, %1271, %1266, %1262, %1257, %1243, %1240, %1235, %1215, %1210, %1207, %1204, %1201, %1196, %1192, %1189, %1184, %1179, %1174, %1171, %1167, %1164, %1159, %1145, %1142, %1141, %1136, %1132, %1122, %1118, %1113, %1109, %1105, %1100, %1096, %1091, %1087, %1082, %1077, %1073, %1068, %1064, %1059, %1055, %1045, %1040, %1036, %1034
  %1877 = phi i8 [ 115, %1831 ], [ 115, %1627 ], [ 115, %1386 ], [ 115, %1082 ], [ %1865, %1866 ], [ %1784, %1783 ], [ -54, %1854 ], [ %1784, %1845 ], [ 116, %1836 ], [ 106, %1822 ], [ 105, %1813 ], [ 104, %1804 ], [ 97, %1785 ], [ -43, %1753 ], [ -43, %1772 ], [ -43, %1769 ], [ -43, %1765 ], [ -43, %1756 ], [ -49, %1708 ], [ -49, %1744 ], [ -49, %1732 ], [ -49, %1720 ], [ -49, %1711 ], [ -50, %1686 ], [ -50, %1699 ], [ -50, %1687 ], [ -50, %1677 ], [ -54, %1663 ], [ -59, %1650 ], [ -59, %1654 ], [ %1580, %1641 ], [ 116, %1632 ], [ 106, %1618 ], [ 105, %1609 ], [ 104, %1600 ], [ 97, %1581 ], [ -31, %1557 ], [ -31, %1540 ], [ -31, %1568 ], [ -31, %1543 ], [ -31, %1548 ], [ -43, %1512 ], [ -43, %1531 ], [ -43, %1528 ], [ -43, %1524 ], [ -43, %1515 ], [ -49, %1467 ], [ -49, %1503 ], [ -49, %1491 ], [ -49, %1479 ], [ -49, %1470 ], [ -50, %1445 ], [ -50, %1458 ], [ -50, %1446 ], [ -50, %1436 ], [ -54, %1422 ], [ -59, %1409 ], [ -59, %1413 ], [ %1339, %1400 ], [ 116, %1391 ], [ 106, %1377 ], [ 105, %1368 ], [ 104, %1359 ], [ 97, %1340 ], [ -31, %1316 ], [ -31, %1299 ], [ -31, %1327 ], [ -31, %1302 ], [ -31, %1307 ], [ -43, %1271 ], [ -43, %1290 ], [ -43, %1287 ], [ -43, %1283 ], [ -43, %1274 ], [ -49, %1189 ], [ -49, %1262 ], [ -49, %1240 ], [ -49, %1207 ], [ -49, %1201 ], [ -49, %1192 ], [ -50, %1171 ], [ -50, %1164 ], [ -50, %1142 ], [ -50, %1132 ], [ -54, %1118 ], [ -59, %1105 ], [ -59, %1109 ], [ %1035, %1096 ], [ 116, %1087 ], [ 106, %1073 ], [ 105, %1064 ], [ 104, %1055 ], [ 97, %1036 ], [ -50, %1145 ], [ -50, %1174 ], [ -50, %1167 ], [ -49, %1210 ], [ -49, %1243 ], [ -50, %1449 ], [ -49, %1482 ], [ -49, %1494 ], [ -50, %1690 ], [ -49, %1723 ], [ -49, %1735 ], [ %1865, %1863 ], [ -50, %1141 ], [ -49, %1204 ], [ %1035, %1034 ], [ %1339, %1338 ], [ %1580, %1579 ], [ 97, %1040 ], [ 102, %1045 ], [ 104, %1059 ], [ 105, %1068 ], [ 106, %1077 ], [ 116, %1091 ], [ %1035, %1100 ], [ -59, %1113 ], [ -54, %1122 ], [ -50, %1136 ], [ -50, %1159 ], [ -50, %1179 ], [ -50, %1184 ], [ -49, %1196 ], [ -49, %1215 ], [ -49, %1235 ], [ -49, %1257 ], [ -49, %1266 ], [ -43, %1278 ], [ -43, %1294 ], [ -31, %1311 ], [ -31, %1331 ], [ 97, %1344 ], [ 102, %1349 ], [ 104, %1363 ], [ 105, %1372 ], [ 106, %1381 ], [ 116, %1395 ], [ %1339, %1404 ], [ -59, %1417 ], [ -54, %1426 ], [ -50, %1440 ], [ -50, %1453 ], [ -50, %1462 ], [ -49, %1474 ], [ -49, %1486 ], [ -49, %1498 ], [ -49, %1507 ], [ -43, %1519 ], [ -43, %1535 ], [ -31, %1552 ], [ -31, %1572 ], [ 97, %1585 ], [ 102, %1590 ], [ 104, %1604 ], [ 105, %1613 ], [ 106, %1622 ], [ 116, %1636 ], [ %1580, %1645 ], [ -59, %1658 ], [ -54, %1667 ], [ -50, %1681 ], [ -50, %1694 ], [ -50, %1703 ], [ -49, %1715 ], [ -49, %1727 ], [ -49, %1739 ], [ -49, %1748 ], [ -43, %1760 ], [ -43, %1776 ], [ 97, %1789 ], [ 102, %1794 ], [ 104, %1808 ], [ 105, %1817 ], [ 106, %1826 ], [ 116, %1840 ], [ %1784, %1849 ], [ -54, %1858 ], [ 102, %1867 ], [ 115, %1870 ]
  %1878 = zext i8 %1877 to i64
  %1879 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1878
  %1880 = load i8, ptr %1879, align 1, !tbaa !17
  %1881 = zext i8 %1880 to i64
  %1882 = getelementptr inbounds i8, ptr %1030, i64 %1881
  br label %1922, !llvm.loop !259

1883:                                             ; preds = %1870, %1831, %1627, %1386, %1082
  %1884 = phi i8 [ %1873, %1870 ], [ %1084, %1082 ], [ %1388, %1386 ], [ %1629, %1627 ], [ %1833, %1831 ]
  %1885 = icmp eq i8 %1884, 115
  br i1 %1885, label %1886, label %1891

1886:                                             ; preds = %1883
  %1887 = load i8, ptr %276, align 1, !tbaa !141
  switch i8 %1887, label %1888 [
    i8 36, label %1894
    i8 39, label %1894
    i8 34, label %1889
  ]

1888:                                             ; preds = %1886
  store i8 37, ptr %276, align 1, !tbaa !141
  br label %1889

1889:                                             ; preds = %1888, %1886
  %1890 = getelementptr inbounds i8, ptr %1030, i64 2
  br label %1917

1891:                                             ; preds = %1883, %1867, %1867, %1867, %1858, %1849, %1840, %1826, %1817, %1808, %1797, %1794, %1794, %1789, %1776, %1769, %1769, %1769, %1769, %1760, %1748, %1739, %1735, %1727, %1723, %1715, %1703, %1694, %1690, %1681, %1667, %1658, %1645, %1636, %1622, %1613, %1604, %1593, %1590, %1590, %1585, %1572, %1552, %1535, %1528, %1528, %1528, %1528, %1519, %1507, %1498, %1494, %1486, %1482, %1474, %1462, %1453, %1449, %1440, %1426, %1417, %1404, %1395, %1381, %1372, %1363, %1352, %1349, %1349, %1344, %1331, %1311, %1294, %1287, %1287, %1287, %1287, %1278, %1266, %1257, %1251, %1247, %1235, %1229, %1223, %1220, %1215, %1210, %1196, %1184, %1179, %1174, %1159, %1153, %1149, %1136, %1122, %1113, %1100, %1091, %1077, %1068, %1059, %1048, %1045, %1045, %1040
  %1892 = phi i64 [ 2, %1883 ], [ 4, %1769 ], [ 4, %1769 ], [ 4, %1769 ], [ 4, %1769 ], [ 4, %1528 ], [ 4, %1528 ], [ 4, %1528 ], [ 4, %1528 ], [ 4, %1287 ], [ 4, %1287 ], [ 4, %1287 ], [ 4, %1287 ], [ 3, %1040 ], [ 3, %1059 ], [ 3, %1068 ], [ 3, %1077 ], [ 3, %1091 ], [ 3, %1100 ], [ 4, %1113 ], [ 3, %1122 ], [ 4, %1136 ], [ 4, %1149 ], [ 4, %1159 ], [ 6, %1179 ], [ 4, %1184 ], [ 4, %1196 ], [ 6, %1215 ], [ 4, %1220 ], [ 4, %1235 ], [ 4, %1247 ], [ 4, %1257 ], [ 4, %1266 ], [ 4, %1278 ], [ 4, %1294 ], [ 5, %1311 ], [ 5, %1331 ], [ 3, %1344 ], [ 3, %1363 ], [ 3, %1372 ], [ 3, %1381 ], [ 3, %1395 ], [ 3, %1404 ], [ 4, %1417 ], [ 3, %1426 ], [ 4, %1440 ], [ 4, %1453 ], [ 4, %1462 ], [ 4, %1474 ], [ 4, %1486 ], [ 4, %1498 ], [ 4, %1507 ], [ 4, %1519 ], [ 4, %1535 ], [ 5, %1552 ], [ 5, %1572 ], [ 3, %1585 ], [ 3, %1604 ], [ 3, %1613 ], [ 3, %1622 ], [ 3, %1636 ], [ 3, %1645 ], [ 4, %1658 ], [ 3, %1667 ], [ 4, %1681 ], [ 4, %1694 ], [ 4, %1703 ], [ 4, %1715 ], [ 4, %1727 ], [ 4, %1739 ], [ 4, %1748 ], [ 4, %1760 ], [ 4, %1776 ], [ 3, %1789 ], [ 3, %1808 ], [ 3, %1817 ], [ 3, %1826 ], [ 3, %1840 ], [ 3, %1849 ], [ 3, %1858 ], [ 6, %1174 ], [ 6, %1210 ], [ 4, %1449 ], [ 4, %1482 ], [ 4, %1494 ], [ 4, %1690 ], [ 4, %1723 ], [ 4, %1735 ], [ 2, %1867 ], [ 2, %1867 ], [ 2, %1867 ], [ 2, %1794 ], [ 2, %1794 ], [ 2, %1590 ], [ 2, %1590 ], [ 2, %1349 ], [ 2, %1349 ], [ 2, %1045 ], [ 2, %1045 ], [ %1158, %1153 ], [ %1234, %1229 ], [ %1256, %1251 ], [ %1228, %1223 ], [ %1054, %1048 ], [ %1358, %1352 ], [ %1599, %1593 ], [ %1803, %1797 ]
  %1893 = load i8, ptr %276, align 1, !tbaa !141
  br label %1894

1894:                                             ; preds = %1891, %1886, %1886
  %1895 = phi i8 [ %1893, %1891 ], [ %1887, %1886 ], [ %1887, %1886 ]
  %1896 = phi i64 [ %1892, %1891 ], [ 2, %1886 ], [ 2, %1886 ]
  %1897 = getelementptr inbounds i8, ptr %1030, i64 %1896
  switch i8 %1895, label %1899 [
    i8 36, label %1898
    i8 39, label %1898
  ]

1898:                                             ; preds = %1894, %1894
  br label %1902

1899:                                             ; preds = %1894
  %1900 = call i64 @Perl_utf8_length(ptr noundef nonnull %1030, ptr noundef nonnull %1897) #15
  %1901 = trunc i64 %1900 to i32
  br label %1917

1902:                                             ; preds = %1898, %1907
  %1903 = phi i32 [ %1913, %1907 ], [ 0, %1898 ]
  %1904 = phi ptr [ %1912, %1907 ], [ %1030, %1898 ]
  %1905 = load i8, ptr %1904, align 1, !tbaa !17
  %1906 = icmp sgt i8 %1905, -1
  br i1 %1906, label %1915, label %1907

1907:                                             ; preds = %1902
  %1908 = zext i8 %1905 to i64
  %1909 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1908
  %1910 = load i8, ptr %1909, align 1, !tbaa !17
  %1911 = zext i8 %1910 to i64
  %1912 = getelementptr inbounds i8, ptr %1904, i64 %1911
  %1913 = add nuw nsw i32 %1903, 1
  %1914 = icmp ult ptr %1912, %1897
  br i1 %1914, label %1902, label %1917, !llvm.loop !260

1915:                                             ; preds = %1902
  %1916 = getelementptr inbounds i8, ptr %1904, i64 1
  br label %1922

1917:                                             ; preds = %1907, %1899, %1889
  %1918 = phi ptr [ %1890, %1889 ], [ %1897, %1899 ], [ %1912, %1907 ]
  %1919 = phi i32 [ 2, %1889 ], [ %1901, %1899 ], [ %1913, %1907 ]
  %1920 = add i32 %1029, -1
  %1921 = add i32 %1920, %1919
  br label %1922

1922:                                             ; preds = %1917, %1915, %1876
  %1923 = phi ptr [ %1882, %1876 ], [ %1918, %1917 ], [ %1916, %1915 ]
  %1924 = phi i32 [ %1029, %1876 ], [ %1921, %1917 ], [ %1029, %1915 ]
  %1925 = icmp ult ptr %1923, %1024
  br i1 %1925, label %1028, label %1926

1926:                                             ; preds = %1922, %1019
  %1927 = phi i32 [ 0, %1019 ], [ %1924, %1922 ]
  %1928 = load i8, ptr %276, align 1, !tbaa !141
  %1929 = icmp eq i8 %1928, 34
  br i1 %1929, label %1930, label %1937

1930:                                             ; preds = %1926
  %1931 = load i8, ptr %260, align 2, !tbaa !205
  %1932 = zext i8 %1931 to i64
  %1933 = getelementptr inbounds i8, ptr %856, i64 %1932
  %1934 = call i64 @Perl_utf8_length(ptr noundef nonnull %856, ptr noundef nonnull %1933) #15
  %1935 = trunc i64 %1934 to i32
  %1936 = call i32 @llvm.smin.i32(i32 %1927, i32 %1935)
  br label %1937

1937:                                             ; preds = %1930, %1926
  %1938 = phi i32 [ %1936, %1930 ], [ %1927, %1926 ]
  %1939 = sext i32 %1938 to i64
  call void @Perl_safesysfree(ptr noundef %1023) #15
  br label %2058

1940:                                             ; preds = %855
  switch i8 %850, label %1951 [
    i8 36, label %1941
    i8 33, label %1953
    i8 34, label %1953
  ]

1941:                                             ; preds = %1940
  %1942 = icmp eq i8 %857, 0
  br i1 %1942, label %2058, label %1946

1943:                                             ; preds = %1946
  %1944 = getelementptr inbounds i8, ptr %1947, i64 1
  %1945 = icmp ult ptr %1944, %859
  br i1 %1945, label %1946, label %2058, !llvm.loop !261

1946:                                             ; preds = %1941, %1943
  %1947 = phi ptr [ %1944, %1943 ], [ %856, %1941 ]
  %1948 = load i8, ptr %1947, align 1, !tbaa !17
  %1949 = icmp eq i8 %1948, -33
  br i1 %1949, label %1950, label %1943

1950:                                             ; preds = %1946
  store i8 39, ptr %276, align 1, !tbaa !141
  br label %2058

1951:                                             ; preds = %1940
  %1952 = getelementptr inbounds i8, ptr %859, i64 -1
  br label %1953

1953:                                             ; preds = %1951, %1940, %1940
  %1954 = phi ptr [ %1952, %1951 ], [ %859, %1940 ], [ %859, %1940 ]
  %1955 = icmp ult ptr %856, %1954
  br i1 %1955, label %1956, label %2058

1956:                                             ; preds = %1953
  %1957 = ptrtoint ptr %859 to i64
  br label %1958

1958:                                             ; preds = %2052, %1956
  %1959 = phi i64 [ 0, %1956 ], [ %2053, %2052 ]
  %1960 = phi i8 [ 0, %1956 ], [ %2054, %2052 ]
  %1961 = phi ptr [ %856, %1956 ], [ %2056, %2052 ]
  %1962 = ptrtoint ptr %1961 to i64
  %1963 = sub i64 %1957, %1962
  %1964 = icmp sgt i64 %1963, 2
  br i1 %1964, label %1965, label %1982

1965:                                             ; preds = %1958
  %1966 = load i8, ptr %1961, align 1, !tbaa !17
  %1967 = and i8 %1966, -33
  switch i8 %1967, label %1998 [
    i8 70, label %1968
    i8 83, label %1975
  ]

1968:                                             ; preds = %1965
  %1969 = getelementptr inbounds i8, ptr %1961, i64 1
  %1970 = load i8, ptr %1969, align 1, !tbaa !17
  %1971 = and i8 %1970, -33
  switch i8 %1971, label %1998 [
    i8 70, label %1972
    i8 73, label %2006
    i8 76, label %2006
  ]

1972:                                             ; preds = %1968
  %1973 = getelementptr inbounds i8, ptr %1961, i64 2
  %1974 = load i8, ptr %1973, align 1, !tbaa !17
  switch i8 %1974, label %2006 [
    i8 108, label %2046
    i8 105, label %2046
    i8 76, label %2046
    i8 73, label %2046
  ]

1975:                                             ; preds = %1965
  %1976 = getelementptr inbounds i8, ptr %1961, i64 1
  %1977 = load i8, ptr %1976, align 1, !tbaa !17
  %1978 = freeze i8 %1977
  %1979 = and i8 %1978, -33
  %1980 = add i8 %1979, -83
  %1981 = icmp ult i8 %1980, 2
  br i1 %1981, label %2006, label %1998

1982:                                             ; preds = %1958
  %1983 = icmp eq i64 %1963, 2
  %1984 = load i8, ptr %1961, align 1, !tbaa !17
  br i1 %1983, label %1985, label %1998

1985:                                             ; preds = %1982
  %1986 = and i8 %1984, -33
  switch i8 %1986, label %1998 [
    i8 70, label %1987
    i8 83, label %1991
  ]

1987:                                             ; preds = %1985
  %1988 = getelementptr inbounds i8, ptr %1961, i64 1
  %1989 = load i8, ptr %1988, align 1, !tbaa !17
  %1990 = and i8 %1989, -33
  switch i8 %1990, label %1998 [
    i8 70, label %2006
    i8 73, label %2006
    i8 76, label %2006
  ]

1991:                                             ; preds = %1985
  %1992 = getelementptr inbounds i8, ptr %1961, i64 1
  %1993 = load i8, ptr %1992, align 1, !tbaa !17
  %1994 = freeze i8 %1993
  %1995 = and i8 %1994, -33
  %1996 = add i8 %1995, -83
  %1997 = icmp ult i8 %1996, 2
  br i1 %1997, label %2006, label %1998

1998:                                             ; preds = %1968, %1975, %1982, %1987, %1991, %1985, %1965
  %1999 = phi i8 [ %1966, %1965 ], [ %1984, %1985 ], [ %1984, %1991 ], [ %1984, %1987 ], [ %1984, %1982 ], [ %1966, %1975 ], [ %1966, %1968 ]
  %2000 = icmp eq i8 %1999, -33
  br i1 %2000, label %2001, label %2052, !llvm.loop !262

2001:                                             ; preds = %1998
  %2002 = load i8, ptr %276, align 1, !tbaa !141
  %2003 = add i8 %2002, -33
  %2004 = icmp ult i8 %2003, 2
  %2005 = select i1 %2004, i8 1, i8 %1960
  br label %2052, !llvm.loop !262

2006:                                             ; preds = %1991, %1987, %1987, %1987, %1975, %1972, %1968, %1968
  %2007 = phi i8 [ %1966, %1972 ], [ %1984, %1991 ], [ %1984, %1987 ], [ %1984, %1987 ], [ %1984, %1987 ], [ %1966, %1975 ], [ %1966, %1968 ], [ %1966, %1968 ]
  %2008 = zext i8 %2007 to i64
  %2009 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2008
  %2010 = load i32, ptr %2009, align 4, !tbaa !73
  %2011 = and i32 %2010, 16388
  %2012 = icmp eq i32 %2011, 16388
  br i1 %2012, label %2019, label %2013

2013:                                             ; preds = %2006
  %2014 = load i32, ptr getelementptr inbounds ([0 x i32], ptr @PL_charclass, i64 0, i64 115), align 4, !tbaa !73
  %2015 = and i32 %2014, 16388
  %2016 = icmp eq i32 %2015, 16388
  br i1 %2016, label %2019, label %2017

2017:                                             ; preds = %2013
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.298, i32 noundef 3693) #15
  %2018 = load i8, ptr %1961, align 1, !tbaa !17
  br label %2019

2019:                                             ; preds = %2017, %2013, %2006
  %2020 = phi i8 [ %2007, %2006 ], [ %2007, %2013 ], [ %2018, %2017 ]
  %2021 = and i8 %2020, -33
  %2022 = icmp eq i8 %2021, 83
  br i1 %2022, label %2023, label %2046

2023:                                             ; preds = %2019
  %2024 = getelementptr inbounds i8, ptr %1961, i64 1
  %2025 = load i8, ptr %2024, align 1, !tbaa !17
  %2026 = zext i8 %2025 to i64
  %2027 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2026
  %2028 = load i32, ptr %2027, align 4, !tbaa !73
  %2029 = and i32 %2028, 16388
  %2030 = icmp eq i32 %2029, 16388
  br i1 %2030, label %2037, label %2031

2031:                                             ; preds = %2023
  %2032 = load i32, ptr getelementptr inbounds ([0 x i32], ptr @PL_charclass, i64 0, i64 115), align 4, !tbaa !73
  %2033 = and i32 %2032, 16388
  %2034 = icmp eq i32 %2033, 16388
  br i1 %2034, label %2037, label %2035

2035:                                             ; preds = %2031
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.299, i32 noundef 3694) #15
  %2036 = load i8, ptr %2024, align 1, !tbaa !17
  br label %2037

2037:                                             ; preds = %2035, %2031, %2023
  %2038 = phi i8 [ %2025, %2023 ], [ %2025, %2031 ], [ %2036, %2035 ]
  %2039 = and i8 %2038, -33
  %2040 = icmp eq i8 %2039, 83
  br i1 %2040, label %2041, label %2046

2041:                                             ; preds = %2037
  %2042 = load i8, ptr %276, align 1, !tbaa !141
  %2043 = add i8 %2042, -33
  %2044 = icmp ult i8 %2043, 2
  br i1 %2044, label %2046, label %2045

2045:                                             ; preds = %2041
  store i8 37, ptr %276, align 1, !tbaa !141
  br label %2046

2046:                                             ; preds = %2045, %2041, %2037, %2019, %1972, %1972, %1972, %1972
  %2047 = phi i32 [ 2, %2041 ], [ 2, %2045 ], [ 2, %2037 ], [ 2, %2019 ], [ 3, %1972 ], [ 3, %1972 ], [ 3, %1972 ], [ 3, %1972 ]
  %2048 = add nsw i32 %2047, -1
  %2049 = zext i32 %2048 to i64
  %2050 = add i64 %1959, %2049
  %2051 = zext i32 %2047 to i64
  br label %2052

2052:                                             ; preds = %2001, %2046, %1998
  %2053 = phi i64 [ %1959, %1998 ], [ %2050, %2046 ], [ %1959, %2001 ]
  %2054 = phi i8 [ %1960, %1998 ], [ %1960, %2046 ], [ %2005, %2001 ]
  %2055 = phi i64 [ 1, %1998 ], [ %2051, %2046 ], [ 1, %2001 ]
  %2056 = getelementptr inbounds i8, ptr %1961, i64 %2055
  %2057 = icmp ult ptr %2056, %1954
  br i1 %2057, label %1958, label %2058

2058:                                             ; preds = %1943, %2052, %1953, %1950, %1941, %1937, %849
  %2059 = phi i64 [ 0, %849 ], [ 0, %1953 ], [ 0, %1941 ], [ 0, %1950 ], [ %1939, %1937 ], [ %2053, %2052 ], [ 0, %1943 ]
  %2060 = phi i8 [ 0, %849 ], [ 0, %1953 ], [ 0, %1941 ], [ 1, %1950 ], [ %1020, %1937 ], [ %2054, %2052 ], [ 0, %1943 ]
  %2061 = load i8, ptr %260, align 2, !tbaa !205
  %2062 = zext i8 %2061 to i64
  %2063 = add nuw nsw i64 %2062, 3
  %2064 = lshr i64 %2063, 2
  %2065 = add nuw nsw i64 %2064, 1
  %2066 = getelementptr inbounds %struct.regnode, ptr %260, i64 %2065
  %2067 = icmp ugt ptr %2066, %851
  br i1 %2067, label %2074, label %2068

2068:                                             ; preds = %2058, %2068
  %2069 = phi ptr [ %2072, %2068 ], [ %2066, %2058 ]
  %2070 = getelementptr inbounds %struct.regnode, ptr %2069, i64 0, i32 1
  store i8 92, ptr %2070, align 1, !tbaa !141
  store i8 0, ptr %2069, align 2, !tbaa !143
  %2071 = getelementptr inbounds %struct.regnode, ptr %2069, i64 0, i32 2
  store i16 0, ptr %2071, align 2, !tbaa !222
  %2072 = getelementptr inbounds %struct.regnode, ptr %2069, i64 1
  %2073 = icmp ugt ptr %2072, %851
  br i1 %2073, label %2074, label %2068, !llvm.loop !263

2074:                                             ; preds = %2068, %2058
  %2075 = load volatile i64, ptr %14, align 8, !tbaa !9
  %2076 = and i64 %2075, 2
  %2077 = icmp ne i64 %2076, 0
  %2078 = icmp ne i32 %852, 0
  %2079 = select i1 %2077, i1 %2078, i1 false
  br i1 %2079, label %2080, label %2121

2080:                                             ; preds = %2074
  %2081 = load volatile i64, ptr %14, align 8, !tbaa !9
  %2082 = and i64 %2081, 2
  %2083 = icmp eq i64 %2082, 0
  br i1 %2083, label %2121, label %2084

2084:                                             ; preds = %2080
  %2085 = call ptr @Perl_regnext(ptr noundef nonnull %260) #15
  %2086 = load ptr, ptr %123, align 8, !tbaa !129
  %2087 = load ptr, ptr %124, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %2086, ptr noundef %2087, ptr noundef nonnull %260, ptr noundef null, ptr noundef %0)
  %2088 = call ptr @Perl_PerlIO_stderr() #15
  %2089 = shl nsw i32 %609, 1
  %2090 = load ptr, ptr %125, align 8, !tbaa !131
  %2091 = ptrtoint ptr %260 to i64
  %2092 = ptrtoint ptr %2090 to i64
  %2093 = sub i64 %2091, %2092
  %2094 = lshr exact i64 %2093, 2
  %2095 = trunc i64 %2094 to i32
  %2096 = load ptr, ptr %124, align 8, !tbaa !56
  %2097 = getelementptr inbounds %struct.sv, ptr %2096, i64 0, i32 2
  %2098 = load i32, ptr %2097, align 4, !tbaa !13
  %2099 = and i32 %2098, 2098176
  %2100 = icmp eq i32 %2099, 1024
  br i1 %2100, label %2101, label %2104

2101:                                             ; preds = %2084
  %2102 = getelementptr inbounds %struct.sv, ptr %2096, i64 0, i32 3
  %2103 = load ptr, ptr %2102, align 8, !tbaa !17
  br label %2106

2104:                                             ; preds = %2084
  %2105 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %2096, ptr noundef null, i32 noundef 34) #15
  br label %2106

2106:                                             ; preds = %2104, %2101
  %2107 = phi ptr [ %2103, %2101 ], [ %2105, %2104 ]
  %2108 = icmp eq ptr %2085, null
  br i1 %2108, label %2116, label %2109

2109:                                             ; preds = %2106
  %2110 = load ptr, ptr %125, align 8, !tbaa !131
  %2111 = ptrtoint ptr %2085 to i64
  %2112 = ptrtoint ptr %2110 to i64
  %2113 = sub i64 %2111, %2112
  %2114 = lshr exact i64 %2113, 2
  %2115 = trunc i64 %2114 to i32
  br label %2116

2116:                                             ; preds = %2109, %2106
  %2117 = phi i32 [ %2115, %2109 ], [ 0, %2106 ]
  %2118 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2088, ptr noundef nonnull @.str.300, i32 noundef %2089, ptr noundef nonnull @.str.8, i32 noundef %2095, ptr noundef %2107, i32 noundef %2117) #15
  %2119 = call ptr @Perl_PerlIO_stderr() #15
  %2120 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2119, ptr noundef nonnull @.str.53) #15
  br label %2121

2121:                                             ; preds = %2074, %2080, %2116
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %14)
  %2122 = load ptr, ptr %16, align 8, !tbaa !5
  %2123 = getelementptr inbounds %struct.regnode, ptr %2122, i64 0, i32 1
  %2124 = load i8, ptr %2123, align 1, !tbaa !141
  br label %2125

2125:                                             ; preds = %2121, %602
  %2126 = phi i8 [ %2124, %2121 ], [ %603, %602 ]
  %2127 = phi ptr [ %2122, %2121 ], [ %260, %602 ]
  %2128 = phi i64 [ %2059, %2121 ], [ 0, %602 ]
  %2129 = phi i8 [ %2060, %2121 ], [ 0, %602 ]
  %2130 = getelementptr inbounds %struct.regnode, ptr %2127, i64 0, i32 1
  %2131 = icmp eq i8 %2126, 47
  br i1 %2131, label %4272, label %2132

2132:                                             ; preds = %2125
  %2133 = zext i8 %2126 to i64
  %2134 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %2133
  %2135 = load i8, ptr %2134, align 1, !tbaa !17
  %2136 = icmp eq i8 %2135, 0
  %2137 = select i1 %2136, i32 65535, i32 2147483647
  br i1 %2136, label %2141, label %2138

2138:                                             ; preds = %2132
  %2139 = getelementptr inbounds %struct.regnode_1, ptr %2127, i64 0, i32 3
  %2140 = load i32, ptr %2139, align 4, !tbaa !148
  br label %2145

2141:                                             ; preds = %2132
  %2142 = getelementptr inbounds %struct.regnode, ptr %2127, i64 0, i32 2
  %2143 = load i16, ptr %2142, align 2, !tbaa !222
  %2144 = zext i16 %2143 to i32
  br label %2145

2145:                                             ; preds = %2141, %2138
  %2146 = phi i32 [ %2140, %2138 ], [ %2144, %2141 ]
  br label %2147

2147:                                             ; preds = %2145, %2170
  %2148 = phi ptr [ %2150, %2170 ], [ %2127, %2145 ]
  %2149 = phi i32 [ %2172, %2170 ], [ %2146, %2145 ]
  %2150 = call ptr @Perl_regnext(ptr noundef nonnull %2148) #15
  %2151 = icmp eq ptr %2150, null
  br i1 %2151, label %2174, label %2152

2152:                                             ; preds = %2147
  %2153 = getelementptr inbounds %struct.regnode, ptr %2150, i64 0, i32 1
  %2154 = load i8, ptr %2153, align 1, !tbaa !141
  %2155 = zext i8 %2154 to i64
  %2156 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %2155
  %2157 = load i8, ptr %2156, align 1, !tbaa !17
  %2158 = icmp eq i8 %2157, 40
  br i1 %2158, label %2159, label %2164

2159:                                             ; preds = %2152
  %2160 = getelementptr inbounds %struct.regnode, ptr %2150, i64 0, i32 2
  %2161 = load i16, ptr %2160, align 2, !tbaa !222
  %2162 = zext i16 %2161 to i32
  %2163 = icmp eq i16 %2161, 0
  br i1 %2163, label %2164, label %2170

2164:                                             ; preds = %2159, %2152
  %2165 = icmp eq i8 %2154, 61
  br i1 %2165, label %2166, label %2174

2166:                                             ; preds = %2164
  %2167 = getelementptr inbounds %struct.regnode_1, ptr %2150, i64 0, i32 3
  %2168 = load i32, ptr %2167, align 4, !tbaa !148
  %2169 = icmp eq i32 %2168, 0
  br i1 %2169, label %2174, label %2170

2170:                                             ; preds = %2166, %2159
  %2171 = phi i32 [ %2162, %2159 ], [ %2168, %2166 ]
  %2172 = add nsw i32 %2171, %2149
  %2173 = icmp slt i32 %2172, %2137
  br i1 %2173, label %2147, label %2174, !llvm.loop !264

2174:                                             ; preds = %2166, %2164, %2147, %2170
  %2175 = load i8, ptr %2130, align 1, !tbaa !141
  %2176 = zext i8 %2175 to i64
  %2177 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %2176
  %2178 = load i8, ptr %2177, align 1, !tbaa !17
  %2179 = icmp eq i8 %2178, 0
  br i1 %2179, label %2182, label %2180

2180:                                             ; preds = %2174
  %2181 = getelementptr inbounds %struct.regnode_1, ptr %2127, i64 0, i32 3
  store i32 %2149, ptr %2181, align 4, !tbaa !148
  br label %2185

2182:                                             ; preds = %2174
  %2183 = trunc i32 %2149 to i16
  %2184 = getelementptr inbounds %struct.regnode, ptr %2127, i64 0, i32 2
  store i16 %2183, ptr %2184, align 2, !tbaa !222
  br label %2185

2185:                                             ; preds = %2180, %2182
  %2186 = zext i8 %2175 to i32
  switch i8 %2175, label %4272 [
    i8 80, label %2187
    i8 30, label %2615
    i8 62, label %2615
    i8 66, label %2615
    i8 32, label %4121
    i8 31, label %4121
    i8 65, label %3745
    i8 76, label %3302
    i8 77, label %3317
  ]

2187:                                             ; preds = %2185
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %19) #15
  store i64 0, ptr %19, align 8, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %20) #15
  store i64 0, ptr %20, align 8, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %21) #15
  store i64 0, ptr %21, align 8, !tbaa !9
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %17, i8 0, i64 152, i1 false)
  %2188 = call ptr @Perl_regnext(ptr noundef nonnull %2127) #15
  %2189 = getelementptr inbounds %struct.regnode, ptr %2188, i64 0, i32 1
  %2190 = load i8, ptr %2189, align 1, !tbaa !141
  %2191 = icmp eq i8 %2190, 66
  br i1 %2191, label %2193, label %2192

2192:                                             ; preds = %2187
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.252, i32 noundef 3882) #15
  br label %2193

2193:                                             ; preds = %2192, %2187
  %2194 = load volatile i64, ptr %18, align 8, !tbaa !9
  %2195 = and i64 %2194, 2
  %2196 = icmp eq i64 %2195, 0
  br i1 %2196, label %2331, label %2197

2197:                                             ; preds = %2193
  %2198 = call ptr @Perl_regnext(ptr noundef nonnull %2188) #15
  %2199 = load ptr, ptr %123, align 8, !tbaa !129
  %2200 = load ptr, ptr %124, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %2199, ptr noundef %2200, ptr noundef nonnull %2188, ptr noundef null, ptr noundef %0)
  %2201 = call ptr @Perl_PerlIO_stderr() #15
  %2202 = shl nsw i32 %266, 1
  %2203 = load ptr, ptr %125, align 8, !tbaa !131
  %2204 = ptrtoint ptr %2188 to i64
  %2205 = ptrtoint ptr %2203 to i64
  %2206 = sub i64 %2204, %2205
  %2207 = lshr exact i64 %2206, 2
  %2208 = trunc i64 %2207 to i32
  %2209 = load ptr, ptr %124, align 8, !tbaa !56
  %2210 = getelementptr inbounds %struct.sv, ptr %2209, i64 0, i32 2
  %2211 = load i32, ptr %2210, align 4, !tbaa !13
  %2212 = and i32 %2211, 2098176
  %2213 = icmp eq i32 %2212, 1024
  br i1 %2213, label %2214, label %2217

2214:                                             ; preds = %2197
  %2215 = getelementptr inbounds %struct.sv, ptr %2209, i64 0, i32 3
  %2216 = load ptr, ptr %2215, align 8, !tbaa !17
  br label %2219

2217:                                             ; preds = %2197
  %2218 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %2209, ptr noundef null, i32 noundef 34) #15
  br label %2219

2219:                                             ; preds = %2217, %2214
  %2220 = phi ptr [ %2216, %2214 ], [ %2218, %2217 ]
  %2221 = icmp eq ptr %2198, null
  br i1 %2221, label %2229, label %2222

2222:                                             ; preds = %2219
  %2223 = load ptr, ptr %125, align 8, !tbaa !131
  %2224 = ptrtoint ptr %2198 to i64
  %2225 = ptrtoint ptr %2223 to i64
  %2226 = sub i64 %2224, %2225
  %2227 = lshr exact i64 %2226, 2
  %2228 = trunc i64 %2227 to i32
  br label %2229

2229:                                             ; preds = %2219, %2222
  %2230 = phi i32 [ %2228, %2222 ], [ 0, %2219 ]
  %2231 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2201, ptr noundef nonnull @.str.253, i32 noundef %2202, ptr noundef nonnull @.str.8, i32 noundef %2208, ptr noundef %2220, i32 noundef %2230) #15
  %2232 = icmp eq i32 %265, 0
  br i1 %2232, label %2328, label %2233

2233:                                             ; preds = %2229
  %2234 = call ptr @Perl_PerlIO_stderr() #15
  %2235 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2234, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.35) #15
  %2236 = and i32 %265, 16
  %2237 = icmp eq i32 %2236, 0
  br i1 %2237, label %2241, label %2238

2238:                                             ; preds = %2233
  %2239 = call ptr @Perl_PerlIO_stderr() #15
  %2240 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2239, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.37) #15
  br label %2241

2241:                                             ; preds = %2238, %2233
  %2242 = and i32 %265, 32
  %2243 = icmp eq i32 %2242, 0
  br i1 %2243, label %2247, label %2244

2244:                                             ; preds = %2241
  %2245 = call ptr @Perl_PerlIO_stderr() #15
  %2246 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2245, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.38) #15
  br label %2247

2247:                                             ; preds = %2244, %2241
  %2248 = and i32 %265, 64
  %2249 = icmp eq i32 %2248, 0
  br i1 %2249, label %2253, label %2250

2250:                                             ; preds = %2247
  %2251 = call ptr @Perl_PerlIO_stderr() #15
  %2252 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2251, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.39) #15
  br label %2253

2253:                                             ; preds = %2250, %2247
  %2254 = and i32 %265, 128
  %2255 = icmp eq i32 %2254, 0
  br i1 %2255, label %2259, label %2256

2256:                                             ; preds = %2253
  %2257 = call ptr @Perl_PerlIO_stderr() #15
  %2258 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2257, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.40) #15
  br label %2259

2259:                                             ; preds = %2256, %2253
  %2260 = and i32 %265, 256
  %2261 = icmp eq i32 %2260, 0
  br i1 %2261, label %2265, label %2262

2262:                                             ; preds = %2259
  %2263 = call ptr @Perl_PerlIO_stderr() #15
  %2264 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2263, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.41) #15
  br label %2265

2265:                                             ; preds = %2262, %2259
  %2266 = and i32 %265, 512
  %2267 = icmp eq i32 %2266, 0
  br i1 %2267, label %2271, label %2268

2268:                                             ; preds = %2265
  %2269 = call ptr @Perl_PerlIO_stderr() #15
  %2270 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2269, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.42) #15
  br label %2271

2271:                                             ; preds = %2268, %2265
  %2272 = and i32 %265, 1024
  %2273 = icmp eq i32 %2272, 0
  br i1 %2273, label %2277, label %2274

2274:                                             ; preds = %2271
  %2275 = call ptr @Perl_PerlIO_stderr() #15
  %2276 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2275, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.43) #15
  br label %2277

2277:                                             ; preds = %2274, %2271
  %2278 = and i32 %265, 2048
  %2279 = icmp eq i32 %2278, 0
  br i1 %2279, label %2283, label %2280

2280:                                             ; preds = %2277
  %2281 = call ptr @Perl_PerlIO_stderr() #15
  %2282 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2281, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.44) #15
  br label %2283

2283:                                             ; preds = %2280, %2277
  %2284 = and i32 %265, 4096
  %2285 = icmp eq i32 %2284, 0
  br i1 %2285, label %2289, label %2286

2286:                                             ; preds = %2283
  %2287 = call ptr @Perl_PerlIO_stderr() #15
  %2288 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2287, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.45) #15
  br label %2289

2289:                                             ; preds = %2286, %2283
  %2290 = and i32 %265, 6144
  %2291 = icmp eq i32 %2290, 0
  br i1 %2291, label %2295, label %2292

2292:                                             ; preds = %2289
  %2293 = call ptr @Perl_PerlIO_stderr() #15
  %2294 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2293, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.46) #15
  br label %2295

2295:                                             ; preds = %2292, %2289
  %2296 = and i32 %265, 8192
  %2297 = icmp eq i32 %2296, 0
  br i1 %2297, label %2301, label %2298

2298:                                             ; preds = %2295
  %2299 = call ptr @Perl_PerlIO_stderr() #15
  %2300 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2299, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.47) #15
  br label %2301

2301:                                             ; preds = %2298, %2295
  %2302 = and i32 %265, 16384
  %2303 = icmp eq i32 %2302, 0
  br i1 %2303, label %2307, label %2304

2304:                                             ; preds = %2301
  %2305 = call ptr @Perl_PerlIO_stderr() #15
  %2306 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2305, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.48) #15
  br label %2307

2307:                                             ; preds = %2304, %2301
  %2308 = and i32 %265, 32768
  %2309 = icmp eq i32 %2308, 0
  br i1 %2309, label %2313, label %2310

2310:                                             ; preds = %2307
  %2311 = call ptr @Perl_PerlIO_stderr() #15
  %2312 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2311, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.49) #15
  br label %2313

2313:                                             ; preds = %2310, %2307
  %2314 = and i32 %265, 65536
  %2315 = icmp eq i32 %2314, 0
  br i1 %2315, label %2319, label %2316

2316:                                             ; preds = %2313
  %2317 = call ptr @Perl_PerlIO_stderr() #15
  %2318 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2317, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.50) #15
  br label %2319

2319:                                             ; preds = %2316, %2313
  %2320 = and i32 %265, 131072
  %2321 = icmp eq i32 %2320, 0
  br i1 %2321, label %2325, label %2322

2322:                                             ; preds = %2319
  %2323 = call ptr @Perl_PerlIO_stderr() #15
  %2324 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2323, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.51) #15
  br label %2325

2325:                                             ; preds = %2322, %2319
  %2326 = call ptr @Perl_PerlIO_stderr() #15
  %2327 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2326, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.52) #15
  br label %2328

2328:                                             ; preds = %2325, %2229
  %2329 = call ptr @Perl_PerlIO_stderr() #15
  %2330 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2329, ptr noundef nonnull @.str.53) #15
  br label %2331

2331:                                             ; preds = %2328, %2193
  store ptr %21, ptr %141, align 8, !tbaa !184
  %2332 = load i64, ptr %2, align 8, !tbaa !9
  store i64 %2332, ptr %19, align 8, !tbaa !9
  %2333 = call ptr @Perl_regnext(ptr noundef nonnull %2188) #15
  %2334 = getelementptr inbounds %struct.regnode, ptr %2188, i64 2
  store ptr %2334, ptr %16, align 8, !tbaa !5
  %2335 = load volatile i64, ptr %18, align 8, !tbaa !9
  %2336 = and i64 %2335, 2
  %2337 = icmp eq i64 %2336, 0
  br i1 %2337, label %2472, label %2338

2338:                                             ; preds = %2331
  %2339 = call ptr @Perl_regnext(ptr noundef nonnull %2334) #15
  %2340 = load ptr, ptr %123, align 8, !tbaa !129
  %2341 = load ptr, ptr %124, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %2340, ptr noundef %2341, ptr noundef nonnull %2334, ptr noundef null, ptr noundef %0)
  %2342 = call ptr @Perl_PerlIO_stderr() #15
  %2343 = shl nsw i32 %266, 1
  %2344 = load ptr, ptr %125, align 8, !tbaa !131
  %2345 = ptrtoint ptr %2334 to i64
  %2346 = ptrtoint ptr %2344 to i64
  %2347 = sub i64 %2345, %2346
  %2348 = lshr exact i64 %2347, 2
  %2349 = trunc i64 %2348 to i32
  %2350 = load ptr, ptr %124, align 8, !tbaa !56
  %2351 = getelementptr inbounds %struct.sv, ptr %2350, i64 0, i32 2
  %2352 = load i32, ptr %2351, align 4, !tbaa !13
  %2353 = and i32 %2352, 2098176
  %2354 = icmp eq i32 %2353, 1024
  br i1 %2354, label %2355, label %2358

2355:                                             ; preds = %2338
  %2356 = getelementptr inbounds %struct.sv, ptr %2350, i64 0, i32 3
  %2357 = load ptr, ptr %2356, align 8, !tbaa !17
  br label %2360

2358:                                             ; preds = %2338
  %2359 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %2350, ptr noundef null, i32 noundef 34) #15
  br label %2360

2360:                                             ; preds = %2358, %2355
  %2361 = phi ptr [ %2357, %2355 ], [ %2359, %2358 ]
  %2362 = icmp eq ptr %2339, null
  br i1 %2362, label %2370, label %2363

2363:                                             ; preds = %2360
  %2364 = load ptr, ptr %125, align 8, !tbaa !131
  %2365 = ptrtoint ptr %2339 to i64
  %2366 = ptrtoint ptr %2364 to i64
  %2367 = sub i64 %2365, %2366
  %2368 = lshr exact i64 %2367, 2
  %2369 = trunc i64 %2368 to i32
  br label %2370

2370:                                             ; preds = %2360, %2363
  %2371 = phi i32 [ %2369, %2363 ], [ 0, %2360 ]
  %2372 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2342, ptr noundef nonnull @.str.254, i32 noundef %2343, ptr noundef nonnull @.str.8, i32 noundef %2349, ptr noundef %2361, i32 noundef %2371) #15
  %2373 = icmp eq i32 %265, 0
  br i1 %2373, label %2469, label %2374

2374:                                             ; preds = %2370
  %2375 = call ptr @Perl_PerlIO_stderr() #15
  %2376 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2375, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.35) #15
  %2377 = and i32 %265, 16
  %2378 = icmp eq i32 %2377, 0
  br i1 %2378, label %2382, label %2379

2379:                                             ; preds = %2374
  %2380 = call ptr @Perl_PerlIO_stderr() #15
  %2381 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2380, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.37) #15
  br label %2382

2382:                                             ; preds = %2379, %2374
  %2383 = and i32 %265, 32
  %2384 = icmp eq i32 %2383, 0
  br i1 %2384, label %2388, label %2385

2385:                                             ; preds = %2382
  %2386 = call ptr @Perl_PerlIO_stderr() #15
  %2387 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2386, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.38) #15
  br label %2388

2388:                                             ; preds = %2385, %2382
  %2389 = and i32 %265, 64
  %2390 = icmp eq i32 %2389, 0
  br i1 %2390, label %2394, label %2391

2391:                                             ; preds = %2388
  %2392 = call ptr @Perl_PerlIO_stderr() #15
  %2393 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2392, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.39) #15
  br label %2394

2394:                                             ; preds = %2391, %2388
  %2395 = and i32 %265, 128
  %2396 = icmp eq i32 %2395, 0
  br i1 %2396, label %2400, label %2397

2397:                                             ; preds = %2394
  %2398 = call ptr @Perl_PerlIO_stderr() #15
  %2399 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2398, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.40) #15
  br label %2400

2400:                                             ; preds = %2397, %2394
  %2401 = and i32 %265, 256
  %2402 = icmp eq i32 %2401, 0
  br i1 %2402, label %2406, label %2403

2403:                                             ; preds = %2400
  %2404 = call ptr @Perl_PerlIO_stderr() #15
  %2405 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2404, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.41) #15
  br label %2406

2406:                                             ; preds = %2403, %2400
  %2407 = and i32 %265, 512
  %2408 = icmp eq i32 %2407, 0
  br i1 %2408, label %2412, label %2409

2409:                                             ; preds = %2406
  %2410 = call ptr @Perl_PerlIO_stderr() #15
  %2411 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2410, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.42) #15
  br label %2412

2412:                                             ; preds = %2409, %2406
  %2413 = and i32 %265, 1024
  %2414 = icmp eq i32 %2413, 0
  br i1 %2414, label %2418, label %2415

2415:                                             ; preds = %2412
  %2416 = call ptr @Perl_PerlIO_stderr() #15
  %2417 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2416, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.43) #15
  br label %2418

2418:                                             ; preds = %2415, %2412
  %2419 = and i32 %265, 2048
  %2420 = icmp eq i32 %2419, 0
  br i1 %2420, label %2424, label %2421

2421:                                             ; preds = %2418
  %2422 = call ptr @Perl_PerlIO_stderr() #15
  %2423 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2422, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.44) #15
  br label %2424

2424:                                             ; preds = %2421, %2418
  %2425 = and i32 %265, 4096
  %2426 = icmp eq i32 %2425, 0
  br i1 %2426, label %2430, label %2427

2427:                                             ; preds = %2424
  %2428 = call ptr @Perl_PerlIO_stderr() #15
  %2429 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2428, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.45) #15
  br label %2430

2430:                                             ; preds = %2427, %2424
  %2431 = and i32 %265, 6144
  %2432 = icmp eq i32 %2431, 0
  br i1 %2432, label %2436, label %2433

2433:                                             ; preds = %2430
  %2434 = call ptr @Perl_PerlIO_stderr() #15
  %2435 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2434, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.46) #15
  br label %2436

2436:                                             ; preds = %2433, %2430
  %2437 = and i32 %265, 8192
  %2438 = icmp eq i32 %2437, 0
  br i1 %2438, label %2442, label %2439

2439:                                             ; preds = %2436
  %2440 = call ptr @Perl_PerlIO_stderr() #15
  %2441 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2440, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.47) #15
  br label %2442

2442:                                             ; preds = %2439, %2436
  %2443 = and i32 %265, 16384
  %2444 = icmp eq i32 %2443, 0
  br i1 %2444, label %2448, label %2445

2445:                                             ; preds = %2442
  %2446 = call ptr @Perl_PerlIO_stderr() #15
  %2447 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2446, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.48) #15
  br label %2448

2448:                                             ; preds = %2445, %2442
  %2449 = and i32 %265, 32768
  %2450 = icmp eq i32 %2449, 0
  br i1 %2450, label %2454, label %2451

2451:                                             ; preds = %2448
  %2452 = call ptr @Perl_PerlIO_stderr() #15
  %2453 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2452, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.49) #15
  br label %2454

2454:                                             ; preds = %2451, %2448
  %2455 = and i32 %265, 65536
  %2456 = icmp eq i32 %2455, 0
  br i1 %2456, label %2460, label %2457

2457:                                             ; preds = %2454
  %2458 = call ptr @Perl_PerlIO_stderr() #15
  %2459 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2458, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.50) #15
  br label %2460

2460:                                             ; preds = %2457, %2454
  %2461 = and i32 %265, 131072
  %2462 = icmp eq i32 %2461, 0
  br i1 %2462, label %2466, label %2463

2463:                                             ; preds = %2460
  %2464 = call ptr @Perl_PerlIO_stderr() #15
  %2465 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2464, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.51) #15
  br label %2466

2466:                                             ; preds = %2463, %2460
  %2467 = call ptr @Perl_PerlIO_stderr() #15
  %2468 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2467, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.52) #15
  br label %2469

2469:                                             ; preds = %2466, %2370
  %2470 = call ptr @Perl_PerlIO_stderr() #15
  %2471 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2470, ptr noundef nonnull @.str.53) #15
  br label %2472

2472:                                             ; preds = %2331, %2469
  %2473 = load volatile i64, ptr %18, align 8, !tbaa !9
  %2474 = and i64 %2473, 2
  %2475 = icmp ne i64 %2474, 0
  %2476 = icmp ne ptr %2333, null
  %2477 = select i1 %2475, i1 %2476, i1 false
  br i1 %2477, label %2478, label %2612

2478:                                             ; preds = %2472
  %2479 = call ptr @Perl_regnext(ptr noundef nonnull %2333) #15
  %2480 = load ptr, ptr %123, align 8, !tbaa !129
  %2481 = load ptr, ptr %124, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %2480, ptr noundef %2481, ptr noundef nonnull %2333, ptr noundef null, ptr noundef %0)
  %2482 = call ptr @Perl_PerlIO_stderr() #15
  %2483 = shl nsw i32 %266, 1
  %2484 = load ptr, ptr %125, align 8, !tbaa !131
  %2485 = ptrtoint ptr %2333 to i64
  %2486 = ptrtoint ptr %2484 to i64
  %2487 = sub i64 %2485, %2486
  %2488 = lshr exact i64 %2487, 2
  %2489 = trunc i64 %2488 to i32
  %2490 = load ptr, ptr %124, align 8, !tbaa !56
  %2491 = getelementptr inbounds %struct.sv, ptr %2490, i64 0, i32 2
  %2492 = load i32, ptr %2491, align 4, !tbaa !13
  %2493 = and i32 %2492, 2098176
  %2494 = icmp eq i32 %2493, 1024
  br i1 %2494, label %2495, label %2498

2495:                                             ; preds = %2478
  %2496 = getelementptr inbounds %struct.sv, ptr %2490, i64 0, i32 3
  %2497 = load ptr, ptr %2496, align 8, !tbaa !17
  br label %2500

2498:                                             ; preds = %2478
  %2499 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %2490, ptr noundef null, i32 noundef 34) #15
  br label %2500

2500:                                             ; preds = %2498, %2495
  %2501 = phi ptr [ %2497, %2495 ], [ %2499, %2498 ]
  %2502 = icmp eq ptr %2479, null
  br i1 %2502, label %2510, label %2503

2503:                                             ; preds = %2500
  %2504 = load ptr, ptr %125, align 8, !tbaa !131
  %2505 = ptrtoint ptr %2479 to i64
  %2506 = ptrtoint ptr %2504 to i64
  %2507 = sub i64 %2505, %2506
  %2508 = lshr exact i64 %2507, 2
  %2509 = trunc i64 %2508 to i32
  br label %2510

2510:                                             ; preds = %2500, %2503
  %2511 = phi i32 [ %2509, %2503 ], [ 0, %2500 ]
  %2512 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2482, ptr noundef nonnull @.str.255, i32 noundef %2483, ptr noundef nonnull @.str.8, i32 noundef %2489, ptr noundef %2501, i32 noundef %2511) #15
  %2513 = icmp eq i32 %265, 0
  br i1 %2513, label %2609, label %2514

2514:                                             ; preds = %2510
  %2515 = call ptr @Perl_PerlIO_stderr() #15
  %2516 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2515, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.35) #15
  %2517 = and i32 %265, 16
  %2518 = icmp eq i32 %2517, 0
  br i1 %2518, label %2522, label %2519

2519:                                             ; preds = %2514
  %2520 = call ptr @Perl_PerlIO_stderr() #15
  %2521 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2520, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.37) #15
  br label %2522

2522:                                             ; preds = %2519, %2514
  %2523 = and i32 %265, 32
  %2524 = icmp eq i32 %2523, 0
  br i1 %2524, label %2528, label %2525

2525:                                             ; preds = %2522
  %2526 = call ptr @Perl_PerlIO_stderr() #15
  %2527 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2526, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.38) #15
  br label %2528

2528:                                             ; preds = %2525, %2522
  %2529 = and i32 %265, 64
  %2530 = icmp eq i32 %2529, 0
  br i1 %2530, label %2534, label %2531

2531:                                             ; preds = %2528
  %2532 = call ptr @Perl_PerlIO_stderr() #15
  %2533 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2532, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.39) #15
  br label %2534

2534:                                             ; preds = %2531, %2528
  %2535 = and i32 %265, 128
  %2536 = icmp eq i32 %2535, 0
  br i1 %2536, label %2540, label %2537

2537:                                             ; preds = %2534
  %2538 = call ptr @Perl_PerlIO_stderr() #15
  %2539 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2538, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.40) #15
  br label %2540

2540:                                             ; preds = %2537, %2534
  %2541 = and i32 %265, 256
  %2542 = icmp eq i32 %2541, 0
  br i1 %2542, label %2546, label %2543

2543:                                             ; preds = %2540
  %2544 = call ptr @Perl_PerlIO_stderr() #15
  %2545 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2544, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.41) #15
  br label %2546

2546:                                             ; preds = %2543, %2540
  %2547 = and i32 %265, 512
  %2548 = icmp eq i32 %2547, 0
  br i1 %2548, label %2552, label %2549

2549:                                             ; preds = %2546
  %2550 = call ptr @Perl_PerlIO_stderr() #15
  %2551 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2550, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.42) #15
  br label %2552

2552:                                             ; preds = %2549, %2546
  %2553 = and i32 %265, 1024
  %2554 = icmp eq i32 %2553, 0
  br i1 %2554, label %2558, label %2555

2555:                                             ; preds = %2552
  %2556 = call ptr @Perl_PerlIO_stderr() #15
  %2557 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2556, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.43) #15
  br label %2558

2558:                                             ; preds = %2555, %2552
  %2559 = and i32 %265, 2048
  %2560 = icmp eq i32 %2559, 0
  br i1 %2560, label %2564, label %2561

2561:                                             ; preds = %2558
  %2562 = call ptr @Perl_PerlIO_stderr() #15
  %2563 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2562, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.44) #15
  br label %2564

2564:                                             ; preds = %2561, %2558
  %2565 = and i32 %265, 4096
  %2566 = icmp eq i32 %2565, 0
  br i1 %2566, label %2570, label %2567

2567:                                             ; preds = %2564
  %2568 = call ptr @Perl_PerlIO_stderr() #15
  %2569 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2568, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.45) #15
  br label %2570

2570:                                             ; preds = %2567, %2564
  %2571 = and i32 %265, 6144
  %2572 = icmp eq i32 %2571, 0
  br i1 %2572, label %2576, label %2573

2573:                                             ; preds = %2570
  %2574 = call ptr @Perl_PerlIO_stderr() #15
  %2575 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2574, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.46) #15
  br label %2576

2576:                                             ; preds = %2573, %2570
  %2577 = and i32 %265, 8192
  %2578 = icmp eq i32 %2577, 0
  br i1 %2578, label %2582, label %2579

2579:                                             ; preds = %2576
  %2580 = call ptr @Perl_PerlIO_stderr() #15
  %2581 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2580, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.47) #15
  br label %2582

2582:                                             ; preds = %2579, %2576
  %2583 = and i32 %265, 16384
  %2584 = icmp eq i32 %2583, 0
  br i1 %2584, label %2588, label %2585

2585:                                             ; preds = %2582
  %2586 = call ptr @Perl_PerlIO_stderr() #15
  %2587 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2586, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.48) #15
  br label %2588

2588:                                             ; preds = %2585, %2582
  %2589 = and i32 %265, 32768
  %2590 = icmp eq i32 %2589, 0
  br i1 %2590, label %2594, label %2591

2591:                                             ; preds = %2588
  %2592 = call ptr @Perl_PerlIO_stderr() #15
  %2593 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2592, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.49) #15
  br label %2594

2594:                                             ; preds = %2591, %2588
  %2595 = and i32 %265, 65536
  %2596 = icmp eq i32 %2595, 0
  br i1 %2596, label %2600, label %2597

2597:                                             ; preds = %2594
  %2598 = call ptr @Perl_PerlIO_stderr() #15
  %2599 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2598, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.50) #15
  br label %2600

2600:                                             ; preds = %2597, %2594
  %2601 = and i32 %265, 131072
  %2602 = icmp eq i32 %2601, 0
  br i1 %2602, label %2606, label %2603

2603:                                             ; preds = %2600
  %2604 = call ptr @Perl_PerlIO_stderr() #15
  %2605 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2604, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.51) #15
  br label %2606

2606:                                             ; preds = %2603, %2600
  %2607 = call ptr @Perl_PerlIO_stderr() #15
  %2608 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2607, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.52) #15
  br label %2609

2609:                                             ; preds = %2606, %2510
  %2610 = call ptr @Perl_PerlIO_stderr() #15
  %2611 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2610, ptr noundef nonnull @.str.53) #15
  br label %2612

2612:                                             ; preds = %2609, %2472
  %2613 = add i32 %266, 1
  %2614 = call fastcc i64 @S_study_chunk(ptr noundef %0, ptr noundef nonnull %16, ptr noundef nonnull %19, ptr noundef nonnull %20, ptr noundef %2333, ptr noundef nonnull %17, i32 noundef %262, i32 noundef %263, i32 noundef 131072, i32 noundef %2613)
  store ptr %2333, ptr %16, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %21) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %20) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %19) #15
  br label %6835

2615:                                             ; preds = %2185, %2185, %2185
  %2616 = call ptr @Perl_regnext(ptr noundef nonnull %2127) #15
  %2617 = load i8, ptr %2130, align 1, !tbaa !141
  %2618 = getelementptr inbounds %struct.regnode, ptr %2616, i64 0, i32 1
  %2619 = load i8, ptr %2618, align 1, !tbaa !141
  %2620 = icmp eq i8 %2619, %2617
  %2621 = icmp eq i8 %2617, 66
  %2622 = or i1 %2621, %2620
  br i1 %2622, label %2623, label %3296

2623:                                             ; preds = %2615
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %22) #15
  %2624 = and i32 %265, 1024
  %2625 = icmp eq i32 %2624, 0
  br i1 %2625, label %2627, label %2626

2626:                                             ; preds = %2623
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef %5, ptr noundef %2, i32 noundef %270)
  br label %2627

2627:                                             ; preds = %2626, %2623
  %2628 = and i32 %265, 6144
  %2629 = icmp eq i32 %2628, 0
  br i1 %2629, label %2636, label %2630

2630:                                             ; preds = %2627
  br i1 %81, label %2631, label %2632

2631:                                             ; preds = %2630
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 1053) #15
  br label %2632

2632:                                             ; preds = %2630, %2631
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %22, i8 0, i64 56, i1 false)
  store i8 19, ptr %136, align 1, !tbaa !181
  store i16 1, ptr %137, align 2, !tbaa !182
  store i32 -1, ptr %138, align 4, !tbaa !148
  call fastcc void @S_ssc_anything(ptr noundef nonnull %22)
  %2633 = load i32, ptr %139, align 8, !tbaa !52
  %2634 = icmp eq i32 %2633, 0
  %2635 = select i1 %2634, i32 0, i32 536870911
  store i32 %2635, ptr %140, align 8
  br label %2636

2636:                                             ; preds = %2632, %2627
  %2637 = load ptr, ptr %16, align 8
  %2638 = getelementptr inbounds %struct.regnode, ptr %2637, i64 0, i32 1
  %2639 = load i8, ptr %2638, align 1, !tbaa !141
  %2640 = icmp eq i8 %2639, %2617
  br i1 %2640, label %2641, label %2860

2641:                                             ; preds = %2636
  %2642 = shl nsw i32 %266, 1
  %2643 = icmp eq i8 %2617, 30
  %2644 = select i1 %2643, i64 1, i64 2
  %2645 = add i32 %266, 1
  br label %2646

2646:                                             ; preds = %2641, %2854
  %2647 = phi ptr [ %2637, %2641 ], [ %2799, %2854 ]
  %2648 = phi i32 [ %265, %2641 ], [ %2849, %2854 ]
  %2649 = phi i32 [ %268, %2641 ], [ %2826, %2854 ]
  %2650 = phi i32 [ %270, %2641 ], [ %2821, %2854 ]
  %2651 = phi i32 [ %271, %2641 ], [ %2820, %2854 ]
  %2652 = phi i64 [ %274, %2641 ], [ %2850, %2854 ]
  %2653 = phi i64 [ 0, %2641 ], [ %2819, %2854 ]
  %2654 = phi i64 [ 9223372036854775807, %2641 ], [ %2814, %2854 ]
  %2655 = phi i64 [ 0, %2641 ], [ %2793, %2854 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %23) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %24) #15
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %25) #15
  %2656 = load volatile i64, ptr %18, align 8, !tbaa !9
  %2657 = and i64 %2656, 2
  %2658 = icmp eq i64 %2657, 0
  br i1 %2658, label %2792, label %2659

2659:                                             ; preds = %2646
  %2660 = call ptr @Perl_regnext(ptr noundef nonnull %2647) #15
  %2661 = load ptr, ptr %123, align 8, !tbaa !129
  %2662 = load ptr, ptr %124, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %2661, ptr noundef %2662, ptr noundef nonnull %2647, ptr noundef null, ptr noundef %0)
  %2663 = call ptr @Perl_PerlIO_stderr() #15
  %2664 = load ptr, ptr %125, align 8, !tbaa !131
  %2665 = ptrtoint ptr %2647 to i64
  %2666 = ptrtoint ptr %2664 to i64
  %2667 = sub i64 %2665, %2666
  %2668 = lshr exact i64 %2667, 2
  %2669 = trunc i64 %2668 to i32
  %2670 = load ptr, ptr %124, align 8, !tbaa !56
  %2671 = getelementptr inbounds %struct.sv, ptr %2670, i64 0, i32 2
  %2672 = load i32, ptr %2671, align 4, !tbaa !13
  %2673 = and i32 %2672, 2098176
  %2674 = icmp eq i32 %2673, 1024
  br i1 %2674, label %2675, label %2678

2675:                                             ; preds = %2659
  %2676 = getelementptr inbounds %struct.sv, ptr %2670, i64 0, i32 3
  %2677 = load ptr, ptr %2676, align 8, !tbaa !17
  br label %2680

2678:                                             ; preds = %2659
  %2679 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %2670, ptr noundef null, i32 noundef 34) #15
  br label %2680

2680:                                             ; preds = %2678, %2675
  %2681 = phi ptr [ %2677, %2675 ], [ %2679, %2678 ]
  %2682 = icmp eq ptr %2660, null
  br i1 %2682, label %2690, label %2683

2683:                                             ; preds = %2680
  %2684 = load ptr, ptr %125, align 8, !tbaa !131
  %2685 = ptrtoint ptr %2660 to i64
  %2686 = ptrtoint ptr %2684 to i64
  %2687 = sub i64 %2685, %2686
  %2688 = lshr exact i64 %2687, 2
  %2689 = trunc i64 %2688 to i32
  br label %2690

2690:                                             ; preds = %2680, %2683
  %2691 = phi i32 [ %2689, %2683 ], [ 0, %2680 ]
  %2692 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2663, ptr noundef nonnull @.str.256, i32 noundef %2642, ptr noundef nonnull @.str.8, i32 noundef %2669, ptr noundef %2681, i32 noundef %2691) #15
  %2693 = icmp eq i32 %2648, 0
  br i1 %2693, label %2789, label %2694

2694:                                             ; preds = %2690
  %2695 = call ptr @Perl_PerlIO_stderr() #15
  %2696 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2695, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.35) #15
  %2697 = and i32 %2648, 16
  %2698 = icmp eq i32 %2697, 0
  br i1 %2698, label %2702, label %2699

2699:                                             ; preds = %2694
  %2700 = call ptr @Perl_PerlIO_stderr() #15
  %2701 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2700, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.37) #15
  br label %2702

2702:                                             ; preds = %2699, %2694
  %2703 = and i32 %2648, 32
  %2704 = icmp eq i32 %2703, 0
  br i1 %2704, label %2708, label %2705

2705:                                             ; preds = %2702
  %2706 = call ptr @Perl_PerlIO_stderr() #15
  %2707 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2706, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.38) #15
  br label %2708

2708:                                             ; preds = %2705, %2702
  %2709 = and i32 %2648, 64
  %2710 = icmp eq i32 %2709, 0
  br i1 %2710, label %2714, label %2711

2711:                                             ; preds = %2708
  %2712 = call ptr @Perl_PerlIO_stderr() #15
  %2713 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2712, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.39) #15
  br label %2714

2714:                                             ; preds = %2711, %2708
  %2715 = and i32 %2648, 128
  %2716 = icmp eq i32 %2715, 0
  br i1 %2716, label %2720, label %2717

2717:                                             ; preds = %2714
  %2718 = call ptr @Perl_PerlIO_stderr() #15
  %2719 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2718, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.40) #15
  br label %2720

2720:                                             ; preds = %2717, %2714
  %2721 = and i32 %2648, 256
  %2722 = icmp eq i32 %2721, 0
  br i1 %2722, label %2726, label %2723

2723:                                             ; preds = %2720
  %2724 = call ptr @Perl_PerlIO_stderr() #15
  %2725 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2724, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.41) #15
  br label %2726

2726:                                             ; preds = %2723, %2720
  %2727 = and i32 %2648, 512
  %2728 = icmp eq i32 %2727, 0
  br i1 %2728, label %2732, label %2729

2729:                                             ; preds = %2726
  %2730 = call ptr @Perl_PerlIO_stderr() #15
  %2731 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2730, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.42) #15
  br label %2732

2732:                                             ; preds = %2729, %2726
  %2733 = and i32 %2648, 1024
  %2734 = icmp eq i32 %2733, 0
  br i1 %2734, label %2738, label %2735

2735:                                             ; preds = %2732
  %2736 = call ptr @Perl_PerlIO_stderr() #15
  %2737 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2736, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.43) #15
  br label %2738

2738:                                             ; preds = %2735, %2732
  %2739 = and i32 %2648, 2048
  %2740 = icmp eq i32 %2739, 0
  br i1 %2740, label %2744, label %2741

2741:                                             ; preds = %2738
  %2742 = call ptr @Perl_PerlIO_stderr() #15
  %2743 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2742, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.44) #15
  br label %2744

2744:                                             ; preds = %2741, %2738
  %2745 = and i32 %2648, 4096
  %2746 = icmp eq i32 %2745, 0
  br i1 %2746, label %2750, label %2747

2747:                                             ; preds = %2744
  %2748 = call ptr @Perl_PerlIO_stderr() #15
  %2749 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2748, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.45) #15
  br label %2750

2750:                                             ; preds = %2747, %2744
  %2751 = and i32 %2648, 6144
  %2752 = icmp eq i32 %2751, 0
  br i1 %2752, label %2756, label %2753

2753:                                             ; preds = %2750
  %2754 = call ptr @Perl_PerlIO_stderr() #15
  %2755 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2754, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.46) #15
  br label %2756

2756:                                             ; preds = %2753, %2750
  %2757 = and i32 %2648, 8192
  %2758 = icmp eq i32 %2757, 0
  br i1 %2758, label %2762, label %2759

2759:                                             ; preds = %2756
  %2760 = call ptr @Perl_PerlIO_stderr() #15
  %2761 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2760, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.47) #15
  br label %2762

2762:                                             ; preds = %2759, %2756
  %2763 = and i32 %2648, 16384
  %2764 = icmp eq i32 %2763, 0
  br i1 %2764, label %2768, label %2765

2765:                                             ; preds = %2762
  %2766 = call ptr @Perl_PerlIO_stderr() #15
  %2767 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2766, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.48) #15
  br label %2768

2768:                                             ; preds = %2765, %2762
  %2769 = and i32 %2648, 32768
  %2770 = icmp eq i32 %2769, 0
  br i1 %2770, label %2774, label %2771

2771:                                             ; preds = %2768
  %2772 = call ptr @Perl_PerlIO_stderr() #15
  %2773 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2772, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.49) #15
  br label %2774

2774:                                             ; preds = %2771, %2768
  %2775 = and i32 %2648, 65536
  %2776 = icmp eq i32 %2775, 0
  br i1 %2776, label %2780, label %2777

2777:                                             ; preds = %2774
  %2778 = call ptr @Perl_PerlIO_stderr() #15
  %2779 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2778, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.50) #15
  br label %2780

2780:                                             ; preds = %2777, %2774
  %2781 = and i32 %2648, 131072
  %2782 = icmp eq i32 %2781, 0
  br i1 %2782, label %2786, label %2783

2783:                                             ; preds = %2780
  %2784 = call ptr @Perl_PerlIO_stderr() #15
  %2785 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2784, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.51) #15
  br label %2786

2786:                                             ; preds = %2783, %2780
  %2787 = call ptr @Perl_PerlIO_stderr() #15
  %2788 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2787, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.52) #15
  br label %2789

2789:                                             ; preds = %2786, %2690
  %2790 = call ptr @Perl_PerlIO_stderr() #15
  %2791 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2790, ptr noundef nonnull @.str.53) #15
  br label %2792

2792:                                             ; preds = %2789, %2646
  %2793 = add nuw nsw i64 %2655, 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %17, i8 0, i64 152, i1 false)
  br i1 %108, label %2794, label %2797

2794:                                             ; preds = %2792
  %2795 = load i32, ptr %111, align 4, !tbaa !253
  store i32 %2795, ptr %142, align 4, !tbaa !253
  %2796 = load ptr, ptr %112, align 8, !tbaa !184
  br label %2797

2797:                                             ; preds = %2792, %2794
  %2798 = phi ptr [ %2796, %2794 ], [ %24, %2792 ]
  store ptr %2798, ptr %141, align 8, !tbaa !184
  store i64 %269, ptr %143, align 8, !tbaa !252
  %2799 = call ptr @Perl_regnext(ptr noundef nonnull %2647) #15
  %2800 = getelementptr inbounds %struct.regnode, ptr %2647, i64 %2644
  store ptr %2800, ptr %16, align 8, !tbaa !5
  %2801 = and i32 %2648, 6144
  %2802 = icmp eq i32 %2801, 0
  br i1 %2802, label %2809, label %2803

2803:                                             ; preds = %2797
  br i1 %81, label %2804, label %2805

2804:                                             ; preds = %2803
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 1053) #15
  br label %2805

2805:                                             ; preds = %2803, %2804
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %25, i8 0, i64 56, i1 false)
  store i8 19, ptr %144, align 1, !tbaa !181
  store i16 1, ptr %145, align 2, !tbaa !182
  store i32 -1, ptr %146, align 4, !tbaa !148
  call fastcc void @S_ssc_anything(ptr noundef nonnull %25)
  %2806 = load i32, ptr %139, align 8, !tbaa !52
  %2807 = icmp eq i32 %2806, 0
  %2808 = select i1 %2807, i32 0, i32 536870911
  store i32 %2808, ptr %147, align 8
  store ptr %25, ptr %148, align 8, !tbaa !183
  br label %2809

2809:                                             ; preds = %2805, %2797
  %2810 = phi i32 [ 2048, %2805 ], [ 0, %2797 ]
  %2811 = and i32 %2648, 8192
  %2812 = or i32 %2810, %2811
  %2813 = call fastcc i64 @S_study_chunk(ptr noundef %0, ptr noundef nonnull %16, ptr noundef %2, ptr noundef nonnull %23, ptr noundef %2799, ptr noundef nonnull %17, i32 noundef %262, i32 noundef %263, i32 noundef %2812, i32 noundef %2645)
  %2814 = call i64 @llvm.smin.i64(i64 %2654, i64 %2813)
  %2815 = load i64, ptr %23, align 8, !tbaa !9
  %2816 = icmp eq i64 %2815, 9223372036854775807
  %2817 = add nsw i64 %2815, %2813
  %2818 = call i64 @llvm.smax.i64(i64 %2653, i64 %2817)
  %2819 = select i1 %2816, i64 9223372036854775807, i64 %2818
  %2820 = select i1 %2816, i32 1, i32 %2651
  %2821 = select i1 %2816, i32 1, i32 %2650
  store ptr %2799, ptr %16, align 8, !tbaa !5
  %2822 = load i32, ptr %149, align 8, !tbaa !185
  %2823 = and i32 %2822, 384
  %2824 = icmp ne i32 %2823, 0
  %2825 = zext i1 %2824 to i32
  %2826 = add nsw i32 %2649, %2825
  %2827 = and i32 %2822, 32768
  %2828 = icmp eq i32 %2827, 0
  br i1 %2828, label %2837, label %2829

2829:                                             ; preds = %2809
  %2830 = icmp sgt i64 %2652, %2813
  %2831 = add nsw i64 %2814, %267
  %2832 = select i1 %2830, i64 %2831, i64 %2652
  %2833 = and i32 %2648, -1025
  br i1 %108, label %2834, label %2848

2834:                                             ; preds = %2829
  %2835 = load i32, ptr %110, align 8, !tbaa !185
  %2836 = or i32 %2835, 32768
  store i32 %2836, ptr %110, align 8, !tbaa !185
  br label %2838

2837:                                             ; preds = %2809
  br i1 %108, label %2838, label %2848

2838:                                             ; preds = %2834, %2837
  %2839 = phi i32 [ %2833, %2834 ], [ %2648, %2837 ]
  %2840 = phi i64 [ %2832, %2834 ], [ %2652, %2837 ]
  %2841 = and i32 %2822, 512
  %2842 = icmp eq i32 %2841, 0
  br i1 %2842, label %2846, label %2843

2843:                                             ; preds = %2838
  %2844 = load i32, ptr %110, align 8, !tbaa !185
  %2845 = or i32 %2844, 512
  store i32 %2845, ptr %110, align 8, !tbaa !185
  br label %2846

2846:                                             ; preds = %2843, %2838
  %2847 = load i32, ptr %142, align 4, !tbaa !253
  store i32 %2847, ptr %111, align 4, !tbaa !253
  br label %2848

2848:                                             ; preds = %2829, %2846, %2837
  %2849 = phi i32 [ %2839, %2846 ], [ %2648, %2837 ], [ %2833, %2829 ]
  %2850 = phi i64 [ %2840, %2846 ], [ %2652, %2837 ], [ %2832, %2829 ]
  %2851 = and i32 %2849, 6144
  %2852 = icmp eq i32 %2851, 0
  br i1 %2852, label %2854, label %2853

2853:                                             ; preds = %2848
  call fastcc void @S_ssc_or(ptr noundef %0, ptr noundef nonnull %22, ptr noundef nonnull %25)
  br label %2854

2854:                                             ; preds = %2853, %2848
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %25) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %24) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %23) #15
  %2855 = getelementptr inbounds %struct.regnode, ptr %2799, i64 0, i32 1
  %2856 = load i8, ptr %2855, align 1, !tbaa !141
  %2857 = icmp eq i8 %2856, %2617
  br i1 %2857, label %2646, label %2858, !llvm.loop !265

2858:                                             ; preds = %2854
  %2859 = and i32 %2849, 1024
  br label %2860

2860:                                             ; preds = %2858, %2636
  %2861 = phi i32 [ %2859, %2858 ], [ %2624, %2636 ]
  %2862 = phi ptr [ %2799, %2858 ], [ %2637, %2636 ]
  %2863 = phi i64 [ %2793, %2858 ], [ 0, %2636 ]
  %2864 = phi i64 [ %2814, %2858 ], [ 9223372036854775807, %2636 ]
  %2865 = phi i64 [ %2819, %2858 ], [ 0, %2636 ]
  %2866 = phi i64 [ %2850, %2858 ], [ %274, %2636 ]
  %2867 = phi i32 [ %2820, %2858 ], [ %271, %2636 ]
  %2868 = phi i32 [ %2821, %2858 ], [ %270, %2636 ]
  %2869 = phi i32 [ %2826, %2858 ], [ %268, %2636 ]
  %2870 = phi i32 [ %2849, %2858 ], [ %265, %2636 ]
  %2871 = icmp ult i64 %2863, 2
  %2872 = select i1 %2621, i1 %2871, i1 false
  %2873 = select i1 %2872, i64 0, i64 %2864
  %2874 = icmp eq i32 %2861, 0
  br i1 %2874, label %2888, label %2875

2875:                                             ; preds = %2860
  %2876 = load i64, ptr %5, align 8, !tbaa !251
  %2877 = add nsw i64 %2876, %2873
  store i64 %2877, ptr %5, align 8, !tbaa !251
  %2878 = load i64, ptr %109, align 8, !tbaa !252
  %2879 = sub nsw i64 %2865, %2873
  %2880 = sub nsw i64 9223372036854775807, %2879
  %2881 = icmp slt i64 %2878, %2880
  %2882 = add nsw i64 %2878, %2879
  %2883 = select i1 %2881, i64 %2882, i64 9223372036854775807
  store i64 %2883, ptr %109, align 8, !tbaa !252
  %2884 = icmp ne i64 %2865, %2873
  %2885 = icmp ne i32 %2868, 0
  %2886 = select i1 %2884, i1 true, i1 %2885
  br i1 %2886, label %2887, label %2888

2887:                                             ; preds = %2875
  store ptr %120, ptr %117, align 8, !tbaa !180
  br label %2888

2888:                                             ; preds = %2887, %2875, %2860
  %2889 = add nsw i64 %2873, %267
  %2890 = icmp eq i64 %269, 9223372036854775807
  %2891 = add i64 %2865, %269
  %2892 = sub i64 %2891, %2873
  %2893 = call i64 @llvm.umin.i64(i64 %2892, i64 9223372036854775807)
  %2894 = select i1 %2890, i64 9223372036854775807, i64 %2893
  %2895 = and i32 %2870, 4096
  %2896 = icmp eq i32 %2895, 0
  br i1 %2896, label %2903, label %2897

2897:                                             ; preds = %2888
  %2898 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_or(ptr noundef %0, ptr noundef %2898, ptr noundef nonnull %22)
  %2899 = icmp eq i64 %2873, 0
  br i1 %2899, label %2920, label %2900

2900:                                             ; preds = %2897
  %2901 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %2901, ptr noundef %264)
  %2902 = and i32 %2870, -6145
  br label %2920

2903:                                             ; preds = %2888
  %2904 = and i32 %2870, 2048
  %2905 = icmp eq i32 %2904, 0
  br i1 %2905, label %2920, label %2906

2906:                                             ; preds = %2903
  %2907 = icmp eq i64 %2873, 0
  br i1 %2907, label %2911, label %2908

2908:                                             ; preds = %2906
  %2909 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %2909, ptr noundef nonnull %22)
  %2910 = and i32 %2870, -6145
  br label %2920

2911:                                             ; preds = %2906
  %2912 = icmp eq ptr %264, null
  br i1 %2912, label %2914, label %2913

2913:                                             ; preds = %2911
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.257, i32 noundef 4022) #15
  br label %2914

2914:                                             ; preds = %2911, %2913
  %2915 = call ptr @Perl_safesysmalloc(i64 noundef 56) #15
  call void @Perl_save_pushptr(ptr noundef %2915, i32 noundef 10) #15
  %2916 = load ptr, ptr %132, align 8, !tbaa !183
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %2915, ptr noundef nonnull align 8 dereferenceable(56) %2916, i64 56, i1 false), !tbaa.struct !199
  %2917 = and i32 %2870, -6145
  %2918 = load ptr, ptr %132, align 8, !tbaa !183
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %2918, ptr noundef nonnull align 8 dereferenceable(56) %22, i64 56, i1 false), !tbaa.struct !199
  %2919 = or i32 %2917, 4096
  br label %2920

2920:                                             ; preds = %2903, %2914, %2908, %2897, %2900
  %2921 = phi i32 [ %2902, %2900 ], [ %2870, %2897 ], [ %2910, %2908 ], [ %2919, %2914 ], [ %2870, %2903 ]
  %2922 = phi ptr [ %264, %2900 ], [ %264, %2897 ], [ %264, %2908 ], [ %2915, %2914 ], [ %264, %2903 ]
  %2923 = load i8, ptr %2130, align 1, !tbaa !141
  %2924 = icmp eq i8 %2923, 30
  br i1 %2924, label %2925, label %3293

2925:                                             ; preds = %2920
  %2926 = icmp eq ptr %273, null
  br i1 %2926, label %2927, label %2934

2927:                                             ; preds = %2925
  %2928 = call ptr @Perl_get_sv(ptr noundef nonnull @.str.258, i32 noundef 1) #15
  %2929 = getelementptr inbounds %struct.sv, ptr %2928, i64 0, i32 2
  %2930 = load i32, ptr %2929, align 4, !tbaa !13
  %2931 = and i32 %2930, 256
  %2932 = icmp eq i32 %2931, 0
  br i1 %2932, label %2933, label %2934

2933:                                             ; preds = %2927
  call void @Perl_sv_setiv(ptr noundef nonnull %2928, i64 noundef 65536) #15
  br label %2934

2934:                                             ; preds = %2927, %2933, %2925
  %2935 = phi ptr [ %273, %2925 ], [ %2928, %2927 ], [ %2928, %2933 ]
  %2936 = getelementptr inbounds %struct.sv, ptr %2935, i64 0, i32 2
  %2937 = load i32, ptr %2936, align 4, !tbaa !13
  %2938 = and i32 %2937, 2097408
  %2939 = icmp eq i32 %2938, 256
  br i1 %2939, label %2940, label %2944

2940:                                             ; preds = %2934
  %2941 = load ptr, ptr %2935, align 8, !tbaa !16
  %2942 = getelementptr inbounds %struct.xpviv, ptr %2941, i64 0, i32 4
  %2943 = load i64, ptr %2942, align 8, !tbaa !17
  br label %2946

2944:                                             ; preds = %2934
  %2945 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %2935, i32 noundef 2) #15
  br label %2946

2946:                                             ; preds = %2944, %2940
  %2947 = phi i64 [ %2943, %2940 ], [ %2945, %2944 ]
  %2948 = icmp sgt i64 %2947, -1
  br i1 %2948, label %2949, label %3293

2949:                                             ; preds = %2946
  %2950 = getelementptr inbounds %struct.regnode, ptr %2862, i64 0, i32 1
  %2951 = load i8, ptr %2950, align 1, !tbaa !141
  %2952 = icmp eq i8 %2951, 41
  br i1 %2952, label %2953, label %2959

2953:                                             ; preds = %2949, %2953
  %2954 = phi ptr [ %2955, %2953 ], [ %2862, %2949 ]
  %2955 = call ptr @Perl_regnext(ptr noundef nonnull %2954) #15
  %2956 = getelementptr inbounds %struct.regnode, ptr %2955, i64 0, i32 1
  %2957 = load i8, ptr %2956, align 1, !tbaa !141
  %2958 = icmp eq i8 %2957, 41
  br i1 %2958, label %2953, label %2959, !llvm.loop !266

2959:                                             ; preds = %2953, %2949
  %2960 = phi ptr [ %2862, %2949 ], [ %2955, %2953 ]
  %2961 = load volatile i64, ptr %18, align 8, !tbaa !9
  %2962 = and i64 %2961, 4
  %2963 = icmp eq i64 %2962, 0
  br i1 %2963, label %2983, label %2964

2964:                                             ; preds = %2959
  %2965 = load ptr, ptr %123, align 8, !tbaa !129
  %2966 = load ptr, ptr %124, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %2965, ptr noundef %2966, ptr noundef nonnull %2960, ptr noundef null, ptr noundef %0)
  %2967 = call ptr @Perl_PerlIO_stderr() #15
  %2968 = shl nsw i32 %266, 1
  %2969 = add nsw i32 %2968, 2
  %2970 = load ptr, ptr %124, align 8, !tbaa !56
  %2971 = getelementptr inbounds %struct.sv, ptr %2970, i64 0, i32 2
  %2972 = load i32, ptr %2971, align 4, !tbaa !13
  %2973 = and i32 %2972, 2098176
  %2974 = icmp eq i32 %2973, 1024
  br i1 %2974, label %2975, label %2978

2975:                                             ; preds = %2964
  %2976 = getelementptr inbounds %struct.sv, ptr %2970, i64 0, i32 3
  %2977 = load ptr, ptr %2976, align 8, !tbaa !17
  br label %2980

2978:                                             ; preds = %2964
  %2979 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %2970, ptr noundef null, i32 noundef 34) #15
  br label %2980

2980:                                             ; preds = %2978, %2975
  %2981 = phi ptr [ %2977, %2975 ], [ %2979, %2978 ]
  %2982 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2967, ptr noundef nonnull @.str.259, i32 noundef %2969, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.260, ptr noundef %2981) #15
  br label %2983

2983:                                             ; preds = %2980, %2959
  %2984 = icmp eq ptr %2127, %2862
  br i1 %2984, label %3179, label %2985

2985:                                             ; preds = %2983
  %2986 = shl nsw i32 %266, 1
  %2987 = add nsw i32 %2986, 2
  %2988 = add i32 %266, 1
  br label %2989

2989:                                             ; preds = %2985, %3172
  %2990 = phi ptr [ %2127, %2985 ], [ %3177, %3172 ]
  %2991 = phi ptr [ null, %2985 ], [ %3176, %3172 ]
  %2992 = phi ptr [ null, %2985 ], [ %3175, %3172 ]
  %2993 = phi i8 [ 0, %2985 ], [ %3174, %3172 ]
  %2994 = phi i32 [ 0, %2985 ], [ %3173, %3172 ]
  %2995 = getelementptr inbounds %struct.regnode, ptr %2990, i64 1
  %2996 = getelementptr inbounds %struct.regnode, ptr %2990, i64 1, i32 1
  %2997 = load i8, ptr %2996, align 1, !tbaa !141
  %2998 = add i8 %2997, -31
  %2999 = icmp ult i8 %2998, 10
  br i1 %2999, label %3003, label %3000

3000:                                             ; preds = %3003, %2989
  %3001 = icmp eq i8 %2997, 38
  %3002 = select i1 %3001, i8 38, i8 0
  br label %3012

3003:                                             ; preds = %2989
  %3004 = zext i8 %2998 to i16
  %3005 = lshr i16 627, %3004
  %3006 = and i16 %3005, 1
  %3007 = icmp eq i16 %3006, 0
  br i1 %3007, label %3000, label %3008

3008:                                             ; preds = %3003
  %3009 = sext i8 %2998 to i64
  %3010 = getelementptr inbounds [10 x i8], ptr @switch.table.S_study_chunk.685, i64 0, i64 %3009
  %3011 = load i8, ptr %3010, align 1
  br label %3012

3012:                                             ; preds = %3008, %3000
  %3013 = phi i8 [ %3002, %3000 ], [ %3011, %3008 ]
  %3014 = call ptr @Perl_regnext(ptr noundef nonnull %2995) #15
  %3015 = icmp eq ptr %3014, null
  %3016 = icmp eq ptr %3014, %2960
  %3017 = or i1 %3015, %3016
  br i1 %3017, label %3038, label %3018

3018:                                             ; preds = %3012
  %3019 = getelementptr inbounds %struct.regnode, ptr %3014, i64 0, i32 1
  %3020 = load i8, ptr %3019, align 1, !tbaa !141
  %3021 = add i8 %3020, -31
  %3022 = icmp ult i8 %3021, 10
  br i1 %3022, label %3026, label %3023

3023:                                             ; preds = %3026, %3018
  %3024 = icmp eq i8 %3020, 38
  %3025 = select i1 %3024, i8 38, i8 0
  br label %3038

3026:                                             ; preds = %3018
  %3027 = zext i8 %3021 to i16
  %3028 = lshr i16 627, %3027
  %3029 = and i16 %3028, 1
  %3030 = icmp eq i16 %3029, 0
  br i1 %3030, label %3023, label %3031

3031:                                             ; preds = %3026
  %3032 = sext i8 %3021 to i64
  %3033 = getelementptr inbounds [10 x i8], ptr @switch.table.S_study_chunk.684, i64 0, i64 %3032
  %3034 = load i8, ptr %3033, align 1
  %3035 = sext i8 %3021 to i64
  %3036 = getelementptr inbounds [10 x i8], ptr @switch.table.S_study_chunk.685, i64 0, i64 %3035
  %3037 = load i8, ptr %3036, align 1
  br label %3038

3038:                                             ; preds = %3031, %3012, %3023
  %3039 = phi i8 [ %3020, %3023 ], [ 0, %3012 ], [ %3034, %3031 ]
  %3040 = phi i8 [ %3025, %3023 ], [ 0, %3012 ], [ %3037, %3031 ]
  %3041 = load volatile i64, ptr %18, align 8, !tbaa !9
  %3042 = and i64 %3041, 4
  %3043 = icmp eq i64 %3042, 0
  br i1 %3043, label %3132, label %3044

3044:                                             ; preds = %3038
  %3045 = load ptr, ptr %123, align 8, !tbaa !129
  %3046 = load ptr, ptr %124, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %3045, ptr noundef %3046, ptr noundef nonnull %2990, ptr noundef null, ptr noundef %0)
  %3047 = call ptr @Perl_PerlIO_stderr() #15
  %3048 = load ptr, ptr %124, align 8, !tbaa !56
  %3049 = getelementptr inbounds %struct.sv, ptr %3048, i64 0, i32 2
  %3050 = load i32, ptr %3049, align 4, !tbaa !13
  %3051 = and i32 %3050, 2098176
  %3052 = icmp eq i32 %3051, 1024
  br i1 %3052, label %3053, label %3056

3053:                                             ; preds = %3044
  %3054 = getelementptr inbounds %struct.sv, ptr %3048, i64 0, i32 3
  %3055 = load ptr, ptr %3054, align 8, !tbaa !17
  br label %3058

3056:                                             ; preds = %3044
  %3057 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %3048, ptr noundef null, i32 noundef 34) #15
  br label %3058

3058:                                             ; preds = %3056, %3053
  %3059 = phi ptr [ %3055, %3053 ], [ %3057, %3056 ]
  %3060 = load ptr, ptr %125, align 8, !tbaa !131
  %3061 = ptrtoint ptr %2990 to i64
  %3062 = ptrtoint ptr %3060 to i64
  %3063 = sub i64 %3061, %3062
  %3064 = lshr exact i64 %3063, 2
  %3065 = trunc i64 %3064 to i32
  %3066 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3047, ptr noundef nonnull @.str.261, i32 noundef %2987, ptr noundef nonnull @.str.8, ptr noundef %3059, i32 noundef %3065) #15
  %3067 = load ptr, ptr %123, align 8, !tbaa !129
  %3068 = load ptr, ptr %124, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %3067, ptr noundef %3068, ptr noundef nonnull %2995, ptr noundef null, ptr noundef nonnull %0)
  %3069 = call ptr @Perl_PerlIO_stderr() #15
  %3070 = load ptr, ptr %124, align 8, !tbaa !56
  %3071 = getelementptr inbounds %struct.sv, ptr %3070, i64 0, i32 2
  %3072 = load i32, ptr %3071, align 4, !tbaa !13
  %3073 = and i32 %3072, 2098176
  %3074 = icmp eq i32 %3073, 1024
  br i1 %3074, label %3075, label %3078

3075:                                             ; preds = %3058
  %3076 = getelementptr inbounds %struct.sv, ptr %3070, i64 0, i32 3
  %3077 = load ptr, ptr %3076, align 8, !tbaa !17
  br label %3080

3078:                                             ; preds = %3058
  %3079 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %3070, ptr noundef null, i32 noundef 34) #15
  br label %3080

3080:                                             ; preds = %3078, %3075
  %3081 = phi ptr [ %3077, %3075 ], [ %3079, %3078 ]
  %3082 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3069, ptr noundef nonnull @.str.262, ptr noundef %3081) #15
  br i1 %3015, label %3100, label %3083

3083:                                             ; preds = %3080
  %3084 = load ptr, ptr %123, align 8, !tbaa !129
  %3085 = load ptr, ptr %124, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %3084, ptr noundef %3085, ptr noundef nonnull %3014, ptr noundef null, ptr noundef nonnull %0)
  %3086 = call ptr @Perl_PerlIO_stderr() #15
  %3087 = load ptr, ptr %124, align 8, !tbaa !56
  %3088 = getelementptr inbounds %struct.sv, ptr %3087, i64 0, i32 2
  %3089 = load i32, ptr %3088, align 4, !tbaa !13
  %3090 = and i32 %3089, 2098176
  %3091 = icmp eq i32 %3090, 1024
  br i1 %3091, label %3092, label %3095

3092:                                             ; preds = %3083
  %3093 = getelementptr inbounds %struct.sv, ptr %3087, i64 0, i32 3
  %3094 = load ptr, ptr %3093, align 8, !tbaa !17
  br label %3097

3095:                                             ; preds = %3083
  %3096 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %3087, ptr noundef null, i32 noundef 34) #15
  br label %3097

3097:                                             ; preds = %3095, %3092
  %3098 = phi ptr [ %3094, %3092 ], [ %3096, %3095 ]
  %3099 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3086, ptr noundef nonnull @.str.263, ptr noundef %3098) #15
  br label %3100

3100:                                             ; preds = %3097, %3080
  %3101 = call ptr @Perl_PerlIO_stderr() #15
  %3102 = icmp eq ptr %2991, null
  %3103 = load ptr, ptr %125, align 8, !tbaa !131
  %3104 = ptrtoint ptr %2991 to i64
  %3105 = ptrtoint ptr %3103 to i64
  %3106 = sub i64 %3104, %3105
  %3107 = lshr exact i64 %3106, 2
  %3108 = trunc i64 %3107 to i32
  %3109 = select i1 %3102, i32 -1, i32 %3108
  %3110 = icmp eq ptr %2992, null
  %3111 = ptrtoint ptr %3103 to i64
  %3112 = ptrtoint ptr %2992 to i64
  %3113 = ptrtoint ptr %3103 to i64
  %3114 = sub i64 %3112, %3113
  %3115 = lshr exact i64 %3114, 2
  %3116 = trunc i64 %3115 to i32
  %3117 = select i1 %3110, i64 %3111, i64 %3113
  %3118 = select i1 %3110, i32 -1, i32 %3116
  %3119 = sub i64 %3061, %3117
  %3120 = lshr exact i64 %3119, 2
  %3121 = trunc i64 %3120 to i32
  %3122 = zext i8 %2993 to i64
  %3123 = getelementptr inbounds [0 x ptr], ptr @PL_reg_name, i64 0, i64 %3122
  %3124 = load ptr, ptr %3123, align 8, !tbaa !5
  %3125 = zext i8 %3013 to i64
  %3126 = getelementptr inbounds [0 x ptr], ptr @PL_reg_name, i64 0, i64 %3125
  %3127 = load ptr, ptr %3126, align 8, !tbaa !5
  %3128 = zext i8 %3040 to i64
  %3129 = getelementptr inbounds [0 x ptr], ptr @PL_reg_name, i64 0, i64 %3128
  %3130 = load ptr, ptr %3129, align 8, !tbaa !5
  %3131 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3101, ptr noundef nonnull @.str.264, i32 noundef %3109, i32 noundef %3118, i32 noundef %3121, ptr noundef %3124, ptr noundef %3127, ptr noundef %3130) #15
  br label %3132

3132:                                             ; preds = %3100, %3038
  %3133 = icmp eq i8 %3013, 0
  br i1 %3133, label %3161, label %3134

3134:                                             ; preds = %3132
  %3135 = icmp eq i8 %3013, 40
  %3136 = icmp eq i8 %2993, 40
  %3137 = select i1 %3135, i1 true, i1 %3136
  br i1 %3137, label %3142, label %3138

3138:                                             ; preds = %3134
  %3139 = icmp eq i8 %2993, %3013
  %3140 = icmp ult i32 %2994, 65535
  %3141 = select i1 %3139, i1 %3140, i1 false
  br i1 %3141, label %3144, label %3161

3142:                                             ; preds = %3134
  %3143 = icmp ult i32 %2994, 65535
  br i1 %3143, label %3144, label %3161

3144:                                             ; preds = %3138, %3142
  %3145 = icmp eq ptr %2991, null
  br i1 %3145, label %3146, label %3152

3146:                                             ; preds = %3144
  br i1 %3135, label %3147, label %3154

3147:                                             ; preds = %3146
  %3148 = icmp eq i8 %3040, 0
  br i1 %3148, label %3149, label %3154

3149:                                             ; preds = %3147
  %3150 = icmp eq i8 %3039, 0
  %3151 = select i1 %3150, ptr %2990, ptr null
  br label %3154

3152:                                             ; preds = %3144
  %3153 = select i1 %3136, i8 %3013, i8 %2993
  br label %3154

3154:                                             ; preds = %3149, %3146, %3147, %3152
  %3155 = phi i8 [ %3153, %3152 ], [ %3040, %3147 ], [ %2993, %3149 ], [ %3013, %3146 ]
  %3156 = phi ptr [ %2990, %3152 ], [ %2992, %3147 ], [ %2992, %3149 ], [ %2992, %3146 ]
  %3157 = phi ptr [ %2991, %3152 ], [ %2990, %3147 ], [ %3151, %3149 ], [ %2990, %3146 ]
  %3158 = icmp ne ptr %3157, null
  %3159 = zext i1 %3158 to i32
  %3160 = add nuw nsw i32 %2994, %3159
  br label %3172

3161:                                             ; preds = %3142, %3138, %3132
  %3162 = icmp eq ptr %2992, null
  br i1 %3162, label %3167, label %3163

3163:                                             ; preds = %3161
  switch i8 %2993, label %3164 [
    i8 40, label %3167
    i8 0, label %3167
  ]

3164:                                             ; preds = %3163
  %3165 = zext i8 %2993 to i32
  %3166 = call fastcc i32 @S_make_trie(ptr noundef %0, ptr noundef %2127, ptr noundef %2991, ptr noundef nonnull %2990, ptr noundef %2960, i32 noundef %2994, i32 noundef %3165, i32 noundef %2988), !range !267
  br label %3167

3167:                                             ; preds = %3164, %3163, %3163, %3161
  br i1 %3133, label %3168, label %3172

3168:                                             ; preds = %3167
  %3169 = icmp eq ptr %2991, null
  %3170 = select i1 %3169, i32 %2994, i32 0
  %3171 = select i1 %3169, i8 %2993, i8 0
  br label %3172

3172:                                             ; preds = %3168, %3154, %3167
  %3173 = phi i32 [ %3160, %3154 ], [ 1, %3167 ], [ %3170, %3168 ]
  %3174 = phi i8 [ %3155, %3154 ], [ %3013, %3167 ], [ %3171, %3168 ]
  %3175 = phi ptr [ %3156, %3154 ], [ null, %3167 ], [ null, %3168 ]
  %3176 = phi ptr [ %3157, %3154 ], [ %2990, %3167 ], [ null, %3168 ]
  %3177 = call ptr @Perl_regnext(ptr noundef nonnull %2990) #15
  %3178 = icmp eq ptr %3177, %2862
  br i1 %3178, label %3179, label %2989, !llvm.loop !268

3179:                                             ; preds = %3172, %2983
  %3180 = phi i32 [ 0, %2983 ], [ %3173, %3172 ]
  %3181 = phi i8 [ 0, %2983 ], [ %3174, %3172 ]
  %3182 = phi ptr [ null, %2983 ], [ %3175, %3172 ]
  %3183 = phi ptr [ null, %2983 ], [ %3176, %3172 ]
  %3184 = phi ptr [ %2127, %2983 ], [ %2862, %3172 ]
  %3185 = load volatile i64, ptr %18, align 8, !tbaa !9
  %3186 = and i64 %3185, 4
  %3187 = icmp eq i64 %3186, 0
  br i1 %3187, label %3217, label %3188

3188:                                             ; preds = %3179
  %3189 = load ptr, ptr %123, align 8, !tbaa !129
  %3190 = load ptr, ptr %124, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %3189, ptr noundef %3190, ptr noundef %3184, ptr noundef null, ptr noundef %0)
  %3191 = call ptr @Perl_PerlIO_stderr() #15
  %3192 = shl nsw i32 %266, 1
  %3193 = add nsw i32 %3192, 2
  %3194 = load ptr, ptr %124, align 8, !tbaa !56
  %3195 = getelementptr inbounds %struct.sv, ptr %3194, i64 0, i32 2
  %3196 = load i32, ptr %3195, align 4, !tbaa !13
  %3197 = and i32 %3196, 2098176
  %3198 = icmp eq i32 %3197, 1024
  br i1 %3198, label %3199, label %3202

3199:                                             ; preds = %3188
  %3200 = getelementptr inbounds %struct.sv, ptr %3194, i64 0, i32 3
  %3201 = load ptr, ptr %3200, align 8, !tbaa !17
  br label %3204

3202:                                             ; preds = %3188
  %3203 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %3194, ptr noundef null, i32 noundef 34) #15
  br label %3204

3204:                                             ; preds = %3202, %3199
  %3205 = phi ptr [ %3201, %3199 ], [ %3203, %3202 ]
  %3206 = icmp eq ptr %3184, null
  br i1 %3206, label %3214, label %3207

3207:                                             ; preds = %3204
  %3208 = load ptr, ptr %125, align 8, !tbaa !131
  %3209 = ptrtoint ptr %3184 to i64
  %3210 = ptrtoint ptr %3208 to i64
  %3211 = sub i64 %3209, %3210
  %3212 = lshr exact i64 %3211, 2
  %3213 = trunc i64 %3212 to i32
  br label %3214

3214:                                             ; preds = %3204, %3207
  %3215 = phi i32 [ %3213, %3207 ], [ -1, %3204 ]
  %3216 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3191, ptr noundef nonnull @.str.265, i32 noundef %3193, ptr noundef nonnull @.str.8, ptr noundef %3205, i32 noundef %3215) #15
  br label %3217

3217:                                             ; preds = %3214, %3179
  %3218 = icmp ne ptr %3182, null
  %3219 = zext i8 %3181 to i32
  %3220 = icmp ne i8 %3181, 0
  %3221 = select i1 %3218, i1 %3220, i1 false
  br i1 %3221, label %3222, label %3293

3222:                                             ; preds = %3217
  %3223 = icmp eq i8 %3181, 40
  br i1 %3223, label %3243, label %3224

3224:                                             ; preds = %3222
  %3225 = add i32 %266, 1
  %3226 = call fastcc i32 @S_make_trie(ptr noundef %0, ptr noundef %2127, ptr noundef %3183, ptr noundef %3184, ptr noundef %2960, i32 noundef %3180, i32 noundef %3219, i32 noundef %3225), !range !267
  %3227 = icmp eq i32 %3226, 4
  %3228 = icmp eq ptr %2127, %3183
  %3229 = select i1 %3227, i1 %3228, i1 false
  br i1 %3229, label %3234, label %3230

3230:                                             ; preds = %3224
  %3231 = icmp eq ptr %103, %3183
  %3232 = icmp eq i32 %266, 0
  %3233 = select i1 %3231, i1 %3232, i1 false
  br i1 %3233, label %3236, label %3293

3234:                                             ; preds = %3224
  %3235 = icmp eq i32 %266, 0
  br i1 %3235, label %3236, label %3293

3236:                                             ; preds = %3230, %3234
  %3237 = or i32 %2921, 16384
  %3238 = icmp eq ptr %2862, %2960
  %3239 = select i1 %3228, i1 %3238, i1 false
  br i1 %3239, label %3240, label %3293

3240:                                             ; preds = %3236
  %3241 = load i32, ptr %150, align 8, !tbaa !98
  %3242 = and i32 %3241, -65
  store i32 %3242, ptr %150, align 8, !tbaa !98
  br label %3293

3243:                                             ; preds = %3222
  %3244 = icmp eq ptr %2127, %3183
  br i1 %3244, label %3245, label %3293

3245:                                             ; preds = %3243
  %3246 = load volatile i64, ptr %18, align 8, !tbaa !9
  %3247 = and i64 %3246, 4
  %3248 = icmp eq i64 %3247, 0
  br i1 %3248, label %3278, label %3249

3249:                                             ; preds = %3245
  %3250 = load ptr, ptr %123, align 8, !tbaa !129
  %3251 = load ptr, ptr %124, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %3250, ptr noundef %3251, ptr noundef %3184, ptr noundef null, ptr noundef %0)
  %3252 = call ptr @Perl_PerlIO_stderr() #15
  %3253 = shl nsw i32 %266, 1
  %3254 = add nsw i32 %3253, 2
  %3255 = load ptr, ptr %124, align 8, !tbaa !56
  %3256 = getelementptr inbounds %struct.sv, ptr %3255, i64 0, i32 2
  %3257 = load i32, ptr %3256, align 4, !tbaa !13
  %3258 = and i32 %3257, 2098176
  %3259 = icmp eq i32 %3258, 1024
  br i1 %3259, label %3260, label %3263

3260:                                             ; preds = %3249
  %3261 = getelementptr inbounds %struct.sv, ptr %3255, i64 0, i32 3
  %3262 = load ptr, ptr %3261, align 8, !tbaa !17
  br label %3265

3263:                                             ; preds = %3249
  %3264 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %3255, ptr noundef null, i32 noundef 34) #15
  br label %3265

3265:                                             ; preds = %3263, %3260
  %3266 = phi ptr [ %3262, %3260 ], [ %3264, %3263 ]
  %3267 = icmp eq ptr %3184, null
  br i1 %3267, label %3275, label %3268

3268:                                             ; preds = %3265
  %3269 = load ptr, ptr %125, align 8, !tbaa !131
  %3270 = ptrtoint ptr %3184 to i64
  %3271 = ptrtoint ptr %3269 to i64
  %3272 = sub i64 %3270, %3271
  %3273 = lshr exact i64 %3272, 2
  %3274 = trunc i64 %3273 to i32
  br label %3275

3275:                                             ; preds = %3265, %3268
  %3276 = phi i32 [ %3274, %3268 ], [ -1, %3265 ]
  %3277 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3252, ptr noundef nonnull @.str.266, i32 noundef %3254, ptr noundef nonnull @.str.8, ptr noundef %3266, i32 noundef %3276) #15
  br label %3278

3278:                                             ; preds = %3275, %3245
  store i8 40, ptr %2130, align 1, !tbaa !141
  %3279 = ptrtoint ptr %2960 to i64
  %3280 = ptrtoint ptr %2127 to i64
  %3281 = sub i64 %3279, %3280
  %3282 = lshr exact i64 %3281, 2
  %3283 = trunc i64 %3282 to i16
  %3284 = getelementptr inbounds %struct.regnode, ptr %2127, i64 0, i32 2
  store i16 %3283, ptr %3284, align 2, !tbaa !222
  %3285 = getelementptr inbounds %struct.regnode, ptr %2127, i64 1
  %3286 = icmp ult ptr %3285, %2960
  br i1 %3286, label %3287, label %3293

3287:                                             ; preds = %3278, %3287
  %3288 = phi ptr [ %3291, %3287 ], [ %3285, %3278 ]
  %3289 = phi ptr [ %3288, %3287 ], [ %2127, %3278 ]
  %3290 = getelementptr inbounds %struct.regnode, ptr %3289, i64 1, i32 1
  store i8 92, ptr %3290, align 1, !tbaa !141
  %3291 = getelementptr inbounds %struct.regnode, ptr %3288, i64 1
  %3292 = icmp ult ptr %3291, %2960
  br i1 %3292, label %3287, label %3293, !llvm.loop !269

3293:                                             ; preds = %3287, %3278, %2946, %3236, %3240, %3234, %3230, %3243, %3217, %2920
  %3294 = phi ptr [ %273, %2920 ], [ %2935, %3217 ], [ %2935, %3243 ], [ %2935, %3230 ], [ %2935, %3234 ], [ %2935, %3240 ], [ %2935, %3236 ], [ %2935, %2946 ], [ %2935, %3278 ], [ %2935, %3287 ]
  %3295 = phi i32 [ %2921, %2920 ], [ %2921, %3217 ], [ %2921, %3243 ], [ %2921, %3230 ], [ %2921, %3234 ], [ %3237, %3240 ], [ %3237, %3236 ], [ %2921, %2946 ], [ %2921, %3278 ], [ %2921, %3287 ]
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %22) #15
  br label %6847, !llvm.loop !270

3296:                                             ; preds = %2615
  %3297 = icmp eq i8 %2617, 62
  br i1 %3297, label %3298, label %3300

3298:                                             ; preds = %3296
  %3299 = getelementptr inbounds %struct.regnode, ptr %2127, i64 2
  store ptr %3299, ptr %16, align 8, !tbaa !5
  br label %6847, !llvm.loop !270

3300:                                             ; preds = %3296
  %3301 = getelementptr inbounds %struct.regnode, ptr %2127, i64 1
  store ptr %3301, ptr %16, align 8, !tbaa !5
  br label %6847, !llvm.loop !270

3302:                                             ; preds = %2185
  %3303 = getelementptr inbounds %struct.regnode_1, ptr %2127, i64 0, i32 3
  %3304 = load i32, ptr %3303, align 4, !tbaa !148
  %3305 = load ptr, ptr %129, align 8, !tbaa !135
  %3306 = getelementptr inbounds %struct.regnode_2L, ptr %2127, i64 0, i32 4
  %3307 = load i32, ptr %3306, align 4, !tbaa !208
  %3308 = sext i32 %3307 to i64
  %3309 = getelementptr inbounds ptr, ptr %3305, i64 %3308
  store ptr %2127, ptr %3309, align 8, !tbaa !5
  %3310 = load ptr, ptr %130, align 8, !tbaa !127
  %3311 = add nsw i32 %3304, -1
  %3312 = sext i32 %3311 to i64
  %3313 = getelementptr inbounds ptr, ptr %3310, i64 %3312
  %3314 = load ptr, ptr %3313, align 8, !tbaa !5
  %3315 = load ptr, ptr %131, align 8, !tbaa !128
  %3316 = getelementptr inbounds ptr, ptr %3315, i64 %3312
  br label %3320

3317:                                             ; preds = %2185
  %3318 = load ptr, ptr %127, align 8, !tbaa !130
  %3319 = getelementptr inbounds %struct.regexp_internal, ptr %3318, i64 1
  br label %3320

3320:                                             ; preds = %3317, %3302
  %3321 = phi i32 [ %3304, %3302 ], [ 0, %3317 ]
  %3322 = phi ptr [ %3314, %3302 ], [ %3319, %3317 ]
  %3323 = phi ptr [ %3316, %3302 ], [ %128, %3317 ]
  %3324 = load ptr, ptr %3323, align 8, !tbaa !5
  %3325 = and i32 %265, 131072
  %3326 = icmp eq i32 %3325, 0
  br i1 %3326, label %3327, label %3342

3327:                                             ; preds = %3320
  %3328 = icmp ne i32 %271, 0
  %3329 = icmp ne i32 %270, 0
  %3330 = select i1 %3328, i1 true, i1 %3329
  br i1 %3330, label %3339, label %3331

3331:                                             ; preds = %3327
  br i1 %108, label %3332, label %3344

3332:                                             ; preds = %3331
  %3333 = load i32, ptr %110, align 8, !tbaa !185
  %3334 = and i32 %3333, 64
  %3335 = icmp ne i32 %3334, 0
  %3336 = and i32 %265, 7168
  %3337 = icmp eq i32 %3336, 0
  %3338 = select i1 %3335, i1 %3337, i1 false
  br i1 %3338, label %3342, label %3344

3339:                                             ; preds = %3327
  %3340 = and i32 %265, 7168
  %3341 = icmp eq i32 %3340, 0
  br i1 %3341, label %3342, label %3344

3342:                                             ; preds = %3332, %3339, %3320
  %3343 = call ptr @Perl_regnext(ptr noundef nonnull %2127) #15
  store ptr %3343, ptr %16, align 8, !tbaa !5
  br label %6847, !llvm.loop !270

3344:                                             ; preds = %3339, %3332, %3331
  %3345 = icmp eq i32 %263, 0
  %3346 = load ptr, ptr %106, align 8, !tbaa !115
  br i1 %3345, label %3362, label %3347

3347:                                             ; preds = %3344
  %3348 = add i32 %263, -1
  %3349 = load i32, ptr %107, align 8, !tbaa !116
  %3350 = mul i32 %3349, %3348
  %3351 = zext i32 %3350 to i64
  %3352 = getelementptr inbounds i8, ptr %3346, i64 %3351
  %3353 = ashr i32 %3321, 3
  %3354 = sext i32 %3353 to i64
  %3355 = getelementptr inbounds i8, ptr %3352, i64 %3354
  %3356 = load i8, ptr %3355, align 1, !tbaa !17
  %3357 = zext i8 %3356 to i32
  %3358 = and i32 %3321, 7
  %3359 = shl nuw nsw i32 1, %3358
  %3360 = and i32 %3359, %3357
  %3361 = icmp eq i32 %3360, 0
  br i1 %3361, label %3365, label %3552

3362:                                             ; preds = %3344
  %3363 = load i32, ptr %107, align 8, !tbaa !116
  %3364 = zext i32 %3363 to i64
  call void @llvm.memset.p0.i64(ptr align 1 %3346, i8 0, i64 %3364, i1 false)
  br label %3370

3365:                                             ; preds = %3347
  %3366 = mul i32 %3349, %263
  %3367 = zext i32 %3366 to i64
  %3368 = getelementptr inbounds i8, ptr %3346, i64 %3367
  %3369 = zext i32 %3349 to i64
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %3368, ptr nonnull align 1 %3352, i64 %3369, i1 false)
  br label %3370

3370:                                             ; preds = %3362, %3365
  %3371 = load volatile i64, ptr %18, align 8, !tbaa !9
  %3372 = and i64 %3371, 1048578
  %3373 = icmp eq i64 %3372, 1048578
  %3374 = and i1 %108, %3373
  br i1 %3374, label %3375, label %3748

3375:                                             ; preds = %3370
  %3376 = call ptr @Perl_PerlIO_stderr() #15
  %3377 = shl nsw i32 %266, 1
  %3378 = load i64, ptr %5, align 8, !tbaa !251
  %3379 = load i64, ptr %109, align 8, !tbaa !252
  %3380 = load i32, ptr %110, align 8, !tbaa !185
  %3381 = sext i32 %3380 to i64
  %3382 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3376, ptr noundef nonnull @.str.267, i32 noundef %3377, ptr noundef nonnull @.str.8, i64 noundef %3378, i64 noundef %3379, i64 noundef %3381) #15
  %3383 = load i32, ptr %110, align 8, !tbaa !185
  %3384 = icmp eq i32 %3383, 0
  br i1 %3384, label %3509, label %3385

3385:                                             ; preds = %3375
  %3386 = call ptr @Perl_PerlIO_stderr() #15
  %3387 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3386, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.35) #15
  %3388 = load i32, ptr %110, align 8, !tbaa !185
  %3389 = and i32 %3388, 16
  %3390 = icmp eq i32 %3389, 0
  br i1 %3390, label %3395, label %3391

3391:                                             ; preds = %3385
  %3392 = call ptr @Perl_PerlIO_stderr() #15
  %3393 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3392, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.37) #15
  %3394 = load i32, ptr %110, align 8, !tbaa !185
  br label %3395

3395:                                             ; preds = %3391, %3385
  %3396 = phi i32 [ %3394, %3391 ], [ %3388, %3385 ]
  %3397 = and i32 %3396, 32
  %3398 = icmp eq i32 %3397, 0
  br i1 %3398, label %3403, label %3399

3399:                                             ; preds = %3395
  %3400 = call ptr @Perl_PerlIO_stderr() #15
  %3401 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3400, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.38) #15
  %3402 = load i32, ptr %110, align 8, !tbaa !185
  br label %3403

3403:                                             ; preds = %3399, %3395
  %3404 = phi i32 [ %3402, %3399 ], [ %3396, %3395 ]
  %3405 = and i32 %3404, 64
  %3406 = icmp eq i32 %3405, 0
  br i1 %3406, label %3411, label %3407

3407:                                             ; preds = %3403
  %3408 = call ptr @Perl_PerlIO_stderr() #15
  %3409 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3408, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.39) #15
  %3410 = load i32, ptr %110, align 8, !tbaa !185
  br label %3411

3411:                                             ; preds = %3407, %3403
  %3412 = phi i32 [ %3410, %3407 ], [ %3404, %3403 ]
  %3413 = and i32 %3412, 128
  %3414 = icmp eq i32 %3413, 0
  br i1 %3414, label %3419, label %3415

3415:                                             ; preds = %3411
  %3416 = call ptr @Perl_PerlIO_stderr() #15
  %3417 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3416, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.40) #15
  %3418 = load i32, ptr %110, align 8, !tbaa !185
  br label %3419

3419:                                             ; preds = %3415, %3411
  %3420 = phi i32 [ %3418, %3415 ], [ %3412, %3411 ]
  %3421 = and i32 %3420, 256
  %3422 = icmp eq i32 %3421, 0
  br i1 %3422, label %3427, label %3423

3423:                                             ; preds = %3419
  %3424 = call ptr @Perl_PerlIO_stderr() #15
  %3425 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3424, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.41) #15
  %3426 = load i32, ptr %110, align 8, !tbaa !185
  br label %3427

3427:                                             ; preds = %3423, %3419
  %3428 = phi i32 [ %3426, %3423 ], [ %3420, %3419 ]
  %3429 = and i32 %3428, 512
  %3430 = icmp eq i32 %3429, 0
  br i1 %3430, label %3435, label %3431

3431:                                             ; preds = %3427
  %3432 = call ptr @Perl_PerlIO_stderr() #15
  %3433 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3432, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.42) #15
  %3434 = load i32, ptr %110, align 8, !tbaa !185
  br label %3435

3435:                                             ; preds = %3431, %3427
  %3436 = phi i32 [ %3434, %3431 ], [ %3428, %3427 ]
  %3437 = and i32 %3436, 1024
  %3438 = icmp eq i32 %3437, 0
  br i1 %3438, label %3443, label %3439

3439:                                             ; preds = %3435
  %3440 = call ptr @Perl_PerlIO_stderr() #15
  %3441 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3440, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.43) #15
  %3442 = load i32, ptr %110, align 8, !tbaa !185
  br label %3443

3443:                                             ; preds = %3439, %3435
  %3444 = phi i32 [ %3442, %3439 ], [ %3436, %3435 ]
  %3445 = and i32 %3444, 2048
  %3446 = icmp eq i32 %3445, 0
  br i1 %3446, label %3451, label %3447

3447:                                             ; preds = %3443
  %3448 = call ptr @Perl_PerlIO_stderr() #15
  %3449 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3448, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.44) #15
  %3450 = load i32, ptr %110, align 8, !tbaa !185
  br label %3451

3451:                                             ; preds = %3447, %3443
  %3452 = phi i32 [ %3450, %3447 ], [ %3444, %3443 ]
  %3453 = and i32 %3452, 4096
  %3454 = icmp eq i32 %3453, 0
  br i1 %3454, label %3459, label %3455

3455:                                             ; preds = %3451
  %3456 = call ptr @Perl_PerlIO_stderr() #15
  %3457 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3456, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.45) #15
  %3458 = load i32, ptr %110, align 8, !tbaa !185
  br label %3459

3459:                                             ; preds = %3455, %3451
  %3460 = phi i32 [ %3458, %3455 ], [ %3452, %3451 ]
  %3461 = and i32 %3460, 6144
  %3462 = icmp eq i32 %3461, 0
  br i1 %3462, label %3467, label %3463

3463:                                             ; preds = %3459
  %3464 = call ptr @Perl_PerlIO_stderr() #15
  %3465 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3464, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.46) #15
  %3466 = load i32, ptr %110, align 8, !tbaa !185
  br label %3467

3467:                                             ; preds = %3463, %3459
  %3468 = phi i32 [ %3466, %3463 ], [ %3460, %3459 ]
  %3469 = and i32 %3468, 8192
  %3470 = icmp eq i32 %3469, 0
  br i1 %3470, label %3475, label %3471

3471:                                             ; preds = %3467
  %3472 = call ptr @Perl_PerlIO_stderr() #15
  %3473 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3472, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.47) #15
  %3474 = load i32, ptr %110, align 8, !tbaa !185
  br label %3475

3475:                                             ; preds = %3471, %3467
  %3476 = phi i32 [ %3474, %3471 ], [ %3468, %3467 ]
  %3477 = and i32 %3476, 16384
  %3478 = icmp eq i32 %3477, 0
  br i1 %3478, label %3483, label %3479

3479:                                             ; preds = %3475
  %3480 = call ptr @Perl_PerlIO_stderr() #15
  %3481 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3480, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.48) #15
  %3482 = load i32, ptr %110, align 8, !tbaa !185
  br label %3483

3483:                                             ; preds = %3479, %3475
  %3484 = phi i32 [ %3482, %3479 ], [ %3476, %3475 ]
  %3485 = and i32 %3484, 32768
  %3486 = icmp eq i32 %3485, 0
  br i1 %3486, label %3491, label %3487

3487:                                             ; preds = %3483
  %3488 = call ptr @Perl_PerlIO_stderr() #15
  %3489 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3488, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.49) #15
  %3490 = load i32, ptr %110, align 8, !tbaa !185
  br label %3491

3491:                                             ; preds = %3487, %3483
  %3492 = phi i32 [ %3490, %3487 ], [ %3484, %3483 ]
  %3493 = and i32 %3492, 65536
  %3494 = icmp eq i32 %3493, 0
  br i1 %3494, label %3499, label %3495

3495:                                             ; preds = %3491
  %3496 = call ptr @Perl_PerlIO_stderr() #15
  %3497 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3496, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.50) #15
  %3498 = load i32, ptr %110, align 8, !tbaa !185
  br label %3499

3499:                                             ; preds = %3495, %3491
  %3500 = phi i32 [ %3498, %3495 ], [ %3492, %3491 ]
  %3501 = and i32 %3500, 131072
  %3502 = icmp eq i32 %3501, 0
  br i1 %3502, label %3506, label %3503

3503:                                             ; preds = %3499
  %3504 = call ptr @Perl_PerlIO_stderr() #15
  %3505 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3504, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.51) #15
  br label %3506

3506:                                             ; preds = %3503, %3499
  %3507 = call ptr @Perl_PerlIO_stderr() #15
  %3508 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3507, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.52) #15
  br label %3509

3509:                                             ; preds = %3506, %3375
  %3510 = call ptr @Perl_PerlIO_stderr() #15
  %3511 = load i32, ptr %111, align 4, !tbaa !253
  %3512 = sext i32 %3511 to i64
  %3513 = load ptr, ptr %112, align 8, !tbaa !184
  %3514 = icmp eq ptr %3513, null
  br i1 %3514, label %3517, label %3515

3515:                                             ; preds = %3509
  %3516 = load i64, ptr %3513, align 8, !tbaa !9
  br label %3517

3517:                                             ; preds = %3509, %3515
  %3518 = phi i64 [ %3516, %3515 ], [ -1, %3509 ]
  %3519 = select i1 %3329, ptr @.str.248, ptr @.str.8
  %3520 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3510, ptr noundef nonnull @.str.247, i64 noundef %3512, i64 noundef %3518, ptr noundef nonnull %3519) #15
  %3521 = load ptr, ptr %113, align 8, !tbaa !179
  %3522 = icmp eq ptr %3521, null
  br i1 %3522, label %3549, label %3523

3523:                                             ; preds = %3517
  %3524 = call ptr @Perl_PerlIO_stderr() #15
  %3525 = load ptr, ptr %113, align 8, !tbaa !179
  %3526 = getelementptr inbounds %struct.sv, ptr %3525, i64 0, i32 3
  %3527 = load ptr, ptr %3526, align 8, !tbaa !17
  %3528 = load i64, ptr %114, align 8, !tbaa !254
  %3529 = load i64, ptr %115, align 8, !tbaa !255
  %3530 = load i64, ptr %116, align 8, !tbaa !256
  %3531 = load ptr, ptr %117, align 8, !tbaa !180
  %3532 = icmp ne ptr %3531, null
  %3533 = icmp eq ptr %3531, %118
  %3534 = and i1 %3532, %3533
  %3535 = select i1 %3534, ptr @.str.250, ptr @.str.8
  %3536 = load ptr, ptr %118, align 8, !tbaa !176
  %3537 = getelementptr inbounds %struct.sv, ptr %3536, i64 0, i32 3
  %3538 = load ptr, ptr %3537, align 8, !tbaa !17
  %3539 = load i64, ptr %119, align 8, !tbaa !187
  %3540 = icmp eq ptr %3531, %120
  %3541 = and i1 %3532, %3540
  %3542 = select i1 %3541, ptr @.str.250, ptr @.str.8
  %3543 = load ptr, ptr %120, align 8, !tbaa !178
  %3544 = getelementptr inbounds %struct.sv, ptr %3543, i64 0, i32 3
  %3545 = load ptr, ptr %3544, align 8, !tbaa !17
  %3546 = load i64, ptr %121, align 8, !tbaa !186
  %3547 = load i64, ptr %122, align 8, !tbaa !192
  %3548 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3524, ptr noundef nonnull @.str.249, ptr noundef %3527, i64 noundef %3528, i64 noundef %3529, i64 noundef %3530, ptr noundef nonnull %3535, ptr noundef %3538, i64 noundef %3539, ptr noundef nonnull %3542, ptr noundef %3545, i64 noundef %3546, i64 noundef %3547) #15
  br label %3549

3549:                                             ; preds = %3523, %3517
  %3550 = call ptr @Perl_PerlIO_stderr() #15
  %3551 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3550, ptr noundef nonnull @.str.53) #15
  br label %3748

3552:                                             ; preds = %3347
  %3553 = load volatile i64, ptr %18, align 8, !tbaa !9
  %3554 = and i64 %3553, 1048578
  %3555 = icmp eq i64 %3554, 1048578
  %3556 = and i1 %108, %3555
  br i1 %3556, label %3557, label %3734

3557:                                             ; preds = %3552
  %3558 = call ptr @Perl_PerlIO_stderr() #15
  %3559 = shl nsw i32 %266, 1
  %3560 = load i64, ptr %5, align 8, !tbaa !251
  %3561 = load i64, ptr %109, align 8, !tbaa !252
  %3562 = load i32, ptr %110, align 8, !tbaa !185
  %3563 = sext i32 %3562 to i64
  %3564 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3558, ptr noundef nonnull @.str.268, i32 noundef %3559, ptr noundef nonnull @.str.8, i64 noundef %3560, i64 noundef %3561, i64 noundef %3563) #15
  %3565 = load i32, ptr %110, align 8, !tbaa !185
  %3566 = icmp eq i32 %3565, 0
  br i1 %3566, label %3691, label %3567

3567:                                             ; preds = %3557
  %3568 = call ptr @Perl_PerlIO_stderr() #15
  %3569 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3568, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.35) #15
  %3570 = load i32, ptr %110, align 8, !tbaa !185
  %3571 = and i32 %3570, 16
  %3572 = icmp eq i32 %3571, 0
  br i1 %3572, label %3577, label %3573

3573:                                             ; preds = %3567
  %3574 = call ptr @Perl_PerlIO_stderr() #15
  %3575 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3574, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.37) #15
  %3576 = load i32, ptr %110, align 8, !tbaa !185
  br label %3577

3577:                                             ; preds = %3573, %3567
  %3578 = phi i32 [ %3576, %3573 ], [ %3570, %3567 ]
  %3579 = and i32 %3578, 32
  %3580 = icmp eq i32 %3579, 0
  br i1 %3580, label %3585, label %3581

3581:                                             ; preds = %3577
  %3582 = call ptr @Perl_PerlIO_stderr() #15
  %3583 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3582, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.38) #15
  %3584 = load i32, ptr %110, align 8, !tbaa !185
  br label %3585

3585:                                             ; preds = %3581, %3577
  %3586 = phi i32 [ %3584, %3581 ], [ %3578, %3577 ]
  %3587 = and i32 %3586, 64
  %3588 = icmp eq i32 %3587, 0
  br i1 %3588, label %3593, label %3589

3589:                                             ; preds = %3585
  %3590 = call ptr @Perl_PerlIO_stderr() #15
  %3591 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3590, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.39) #15
  %3592 = load i32, ptr %110, align 8, !tbaa !185
  br label %3593

3593:                                             ; preds = %3589, %3585
  %3594 = phi i32 [ %3592, %3589 ], [ %3586, %3585 ]
  %3595 = and i32 %3594, 128
  %3596 = icmp eq i32 %3595, 0
  br i1 %3596, label %3601, label %3597

3597:                                             ; preds = %3593
  %3598 = call ptr @Perl_PerlIO_stderr() #15
  %3599 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3598, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.40) #15
  %3600 = load i32, ptr %110, align 8, !tbaa !185
  br label %3601

3601:                                             ; preds = %3597, %3593
  %3602 = phi i32 [ %3600, %3597 ], [ %3594, %3593 ]
  %3603 = and i32 %3602, 256
  %3604 = icmp eq i32 %3603, 0
  br i1 %3604, label %3609, label %3605

3605:                                             ; preds = %3601
  %3606 = call ptr @Perl_PerlIO_stderr() #15
  %3607 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3606, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.41) #15
  %3608 = load i32, ptr %110, align 8, !tbaa !185
  br label %3609

3609:                                             ; preds = %3605, %3601
  %3610 = phi i32 [ %3608, %3605 ], [ %3602, %3601 ]
  %3611 = and i32 %3610, 512
  %3612 = icmp eq i32 %3611, 0
  br i1 %3612, label %3617, label %3613

3613:                                             ; preds = %3609
  %3614 = call ptr @Perl_PerlIO_stderr() #15
  %3615 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3614, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.42) #15
  %3616 = load i32, ptr %110, align 8, !tbaa !185
  br label %3617

3617:                                             ; preds = %3613, %3609
  %3618 = phi i32 [ %3616, %3613 ], [ %3610, %3609 ]
  %3619 = and i32 %3618, 1024
  %3620 = icmp eq i32 %3619, 0
  br i1 %3620, label %3625, label %3621

3621:                                             ; preds = %3617
  %3622 = call ptr @Perl_PerlIO_stderr() #15
  %3623 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3622, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.43) #15
  %3624 = load i32, ptr %110, align 8, !tbaa !185
  br label %3625

3625:                                             ; preds = %3621, %3617
  %3626 = phi i32 [ %3624, %3621 ], [ %3618, %3617 ]
  %3627 = and i32 %3626, 2048
  %3628 = icmp eq i32 %3627, 0
  br i1 %3628, label %3633, label %3629

3629:                                             ; preds = %3625
  %3630 = call ptr @Perl_PerlIO_stderr() #15
  %3631 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3630, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.44) #15
  %3632 = load i32, ptr %110, align 8, !tbaa !185
  br label %3633

3633:                                             ; preds = %3629, %3625
  %3634 = phi i32 [ %3632, %3629 ], [ %3626, %3625 ]
  %3635 = and i32 %3634, 4096
  %3636 = icmp eq i32 %3635, 0
  br i1 %3636, label %3641, label %3637

3637:                                             ; preds = %3633
  %3638 = call ptr @Perl_PerlIO_stderr() #15
  %3639 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3638, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.45) #15
  %3640 = load i32, ptr %110, align 8, !tbaa !185
  br label %3641

3641:                                             ; preds = %3637, %3633
  %3642 = phi i32 [ %3640, %3637 ], [ %3634, %3633 ]
  %3643 = and i32 %3642, 6144
  %3644 = icmp eq i32 %3643, 0
  br i1 %3644, label %3649, label %3645

3645:                                             ; preds = %3641
  %3646 = call ptr @Perl_PerlIO_stderr() #15
  %3647 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3646, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.46) #15
  %3648 = load i32, ptr %110, align 8, !tbaa !185
  br label %3649

3649:                                             ; preds = %3645, %3641
  %3650 = phi i32 [ %3648, %3645 ], [ %3642, %3641 ]
  %3651 = and i32 %3650, 8192
  %3652 = icmp eq i32 %3651, 0
  br i1 %3652, label %3657, label %3653

3653:                                             ; preds = %3649
  %3654 = call ptr @Perl_PerlIO_stderr() #15
  %3655 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3654, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.47) #15
  %3656 = load i32, ptr %110, align 8, !tbaa !185
  br label %3657

3657:                                             ; preds = %3653, %3649
  %3658 = phi i32 [ %3656, %3653 ], [ %3650, %3649 ]
  %3659 = and i32 %3658, 16384
  %3660 = icmp eq i32 %3659, 0
  br i1 %3660, label %3665, label %3661

3661:                                             ; preds = %3657
  %3662 = call ptr @Perl_PerlIO_stderr() #15
  %3663 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3662, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.48) #15
  %3664 = load i32, ptr %110, align 8, !tbaa !185
  br label %3665

3665:                                             ; preds = %3661, %3657
  %3666 = phi i32 [ %3664, %3661 ], [ %3658, %3657 ]
  %3667 = and i32 %3666, 32768
  %3668 = icmp eq i32 %3667, 0
  br i1 %3668, label %3673, label %3669

3669:                                             ; preds = %3665
  %3670 = call ptr @Perl_PerlIO_stderr() #15
  %3671 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3670, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.49) #15
  %3672 = load i32, ptr %110, align 8, !tbaa !185
  br label %3673

3673:                                             ; preds = %3669, %3665
  %3674 = phi i32 [ %3672, %3669 ], [ %3666, %3665 ]
  %3675 = and i32 %3674, 65536
  %3676 = icmp eq i32 %3675, 0
  br i1 %3676, label %3681, label %3677

3677:                                             ; preds = %3673
  %3678 = call ptr @Perl_PerlIO_stderr() #15
  %3679 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3678, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.50) #15
  %3680 = load i32, ptr %110, align 8, !tbaa !185
  br label %3681

3681:                                             ; preds = %3677, %3673
  %3682 = phi i32 [ %3680, %3677 ], [ %3674, %3673 ]
  %3683 = and i32 %3682, 131072
  %3684 = icmp eq i32 %3683, 0
  br i1 %3684, label %3688, label %3685

3685:                                             ; preds = %3681
  %3686 = call ptr @Perl_PerlIO_stderr() #15
  %3687 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3686, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.51) #15
  br label %3688

3688:                                             ; preds = %3685, %3681
  %3689 = call ptr @Perl_PerlIO_stderr() #15
  %3690 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3689, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.52) #15
  br label %3691

3691:                                             ; preds = %3688, %3557
  %3692 = call ptr @Perl_PerlIO_stderr() #15
  %3693 = load i32, ptr %111, align 4, !tbaa !253
  %3694 = sext i32 %3693 to i64
  %3695 = load ptr, ptr %112, align 8, !tbaa !184
  %3696 = icmp eq ptr %3695, null
  br i1 %3696, label %3699, label %3697

3697:                                             ; preds = %3691
  %3698 = load i64, ptr %3695, align 8, !tbaa !9
  br label %3699

3699:                                             ; preds = %3691, %3697
  %3700 = phi i64 [ %3698, %3697 ], [ -1, %3691 ]
  %3701 = select i1 %3329, ptr @.str.248, ptr @.str.8
  %3702 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3692, ptr noundef nonnull @.str.247, i64 noundef %3694, i64 noundef %3700, ptr noundef nonnull %3701) #15
  %3703 = load ptr, ptr %113, align 8, !tbaa !179
  %3704 = icmp eq ptr %3703, null
  br i1 %3704, label %3731, label %3705

3705:                                             ; preds = %3699
  %3706 = call ptr @Perl_PerlIO_stderr() #15
  %3707 = load ptr, ptr %113, align 8, !tbaa !179
  %3708 = getelementptr inbounds %struct.sv, ptr %3707, i64 0, i32 3
  %3709 = load ptr, ptr %3708, align 8, !tbaa !17
  %3710 = load i64, ptr %114, align 8, !tbaa !254
  %3711 = load i64, ptr %115, align 8, !tbaa !255
  %3712 = load i64, ptr %116, align 8, !tbaa !256
  %3713 = load ptr, ptr %117, align 8, !tbaa !180
  %3714 = icmp ne ptr %3713, null
  %3715 = icmp eq ptr %3713, %118
  %3716 = and i1 %3714, %3715
  %3717 = select i1 %3716, ptr @.str.250, ptr @.str.8
  %3718 = load ptr, ptr %118, align 8, !tbaa !176
  %3719 = getelementptr inbounds %struct.sv, ptr %3718, i64 0, i32 3
  %3720 = load ptr, ptr %3719, align 8, !tbaa !17
  %3721 = load i64, ptr %119, align 8, !tbaa !187
  %3722 = icmp eq ptr %3713, %120
  %3723 = and i1 %3714, %3722
  %3724 = select i1 %3723, ptr @.str.250, ptr @.str.8
  %3725 = load ptr, ptr %120, align 8, !tbaa !178
  %3726 = getelementptr inbounds %struct.sv, ptr %3725, i64 0, i32 3
  %3727 = load ptr, ptr %3726, align 8, !tbaa !17
  %3728 = load i64, ptr %121, align 8, !tbaa !186
  %3729 = load i64, ptr %122, align 8, !tbaa !192
  %3730 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3706, ptr noundef nonnull @.str.249, ptr noundef %3709, i64 noundef %3710, i64 noundef %3711, i64 noundef %3712, ptr noundef nonnull %3717, ptr noundef %3720, i64 noundef %3721, ptr noundef nonnull %3724, ptr noundef %3727, i64 noundef %3728, i64 noundef %3729) #15
  br label %3731

3731:                                             ; preds = %3705, %3699
  %3732 = call ptr @Perl_PerlIO_stderr() #15
  %3733 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3732, ptr noundef nonnull @.str.53) #15
  br label %3734

3734:                                             ; preds = %3731, %3552
  %3735 = and i32 %265, 1024
  %3736 = icmp eq i32 %3735, 0
  br i1 %3736, label %3738, label %3737

3737:                                             ; preds = %3734
  call fastcc void @S_scan_commit(ptr noundef nonnull %0, ptr noundef %5, ptr noundef %2, i32 noundef %270)
  store ptr %120, ptr %117, align 8, !tbaa !180
  br label %3738

3738:                                             ; preds = %3737, %3734
  %3739 = and i32 %265, 4096
  %3740 = icmp eq i32 %3739, 0
  br i1 %3740, label %3743, label %3741

3741:                                             ; preds = %3738
  %3742 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_anything(ptr noundef %3742)
  br label %3743

3743:                                             ; preds = %3738, %3741
  %3744 = and i32 %265, -6145
  br label %6835

3745:                                             ; preds = %2185
  %3746 = getelementptr inbounds %struct.regnode, ptr %2127, i64 2
  %3747 = call ptr @Perl_regnext(ptr noundef nonnull %2127) #15
  br label %3764

3748:                                             ; preds = %3370, %3549
  %3749 = and i32 %3321, 7
  %3750 = shl nuw nsw i32 1, %3749
  %3751 = load ptr, ptr %106, align 8, !tbaa !115
  %3752 = load i32, ptr %107, align 8, !tbaa !116
  %3753 = mul i32 %3752, %263
  %3754 = zext i32 %3753 to i64
  %3755 = getelementptr inbounds i8, ptr %3751, i64 %3754
  %3756 = ashr i32 %3321, 3
  %3757 = sext i32 %3756 to i64
  %3758 = getelementptr inbounds i8, ptr %3755, i64 %3757
  %3759 = load i8, ptr %3758, align 1, !tbaa !17
  %3760 = trunc i32 %3750 to i8
  %3761 = or i8 %3759, %3760
  store i8 %3761, ptr %3758, align 1, !tbaa !17
  %3762 = add i32 %263, 1
  %3763 = icmp eq ptr %3322, null
  br i1 %3763, label %6835, label %3764

3764:                                             ; preds = %3745, %3748
  %3765 = phi i32 [ %263, %3745 ], [ %3762, %3748 ]
  %3766 = phi ptr [ %3747, %3745 ], [ %3324, %3748 ]
  %3767 = phi ptr [ %3746, %3745 ], [ %3322, %3748 ]
  %3768 = phi i32 [ %262, %3745 ], [ %3321, %3748 ]
  %3769 = icmp eq ptr %3766, null
  br i1 %3769, label %3770, label %3771

3770:                                             ; preds = %3764
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.269, i32 noundef 4463) #15
  br label %3771

3771:                                             ; preds = %3764, %3770
  %3772 = load ptr, ptr %133, align 8, !tbaa !271
  %3773 = icmp eq ptr %3772, null
  br i1 %3773, label %3774, label %3776

3774:                                             ; preds = %3771
  %3775 = call ptr @Perl_safesyscalloc(i64 noundef 1, i64 noundef 56) #15
  call void @Perl_save_destructor_x(ptr noundef nonnull @S_unwind_scan_frames, ptr noundef %3775) #15
  store ptr %3775, ptr %135, align 8, !tbaa !272
  br label %3785

3776:                                             ; preds = %3771
  %3777 = getelementptr inbounds %struct.scan_frame, ptr %3772, i64 0, i32 7
  %3778 = load ptr, ptr %3777, align 8, !tbaa !273
  %3779 = icmp eq ptr %3778, null
  br i1 %3779, label %3780, label %3789

3780:                                             ; preds = %3776
  %3781 = call ptr @Perl_safesyscalloc(i64 noundef 1, i64 noundef 56) #15
  %3782 = load ptr, ptr %133, align 8, !tbaa !271
  %3783 = getelementptr inbounds %struct.scan_frame, ptr %3782, i64 0, i32 7
  store ptr %3781, ptr %3783, align 8, !tbaa !273
  %3784 = getelementptr inbounds %struct.scan_frame, ptr %3781, i64 0, i32 6
  store ptr %3782, ptr %3784, align 8, !tbaa !275
  br label %3785

3785:                                             ; preds = %3774, %3780
  %3786 = phi ptr [ %3775, %3774 ], [ %3781, %3780 ]
  %3787 = load i32, ptr %134, align 8, !tbaa !276
  %3788 = add i32 %3787, 1
  store i32 %3788, ptr %134, align 8, !tbaa !276
  br label %3789

3789:                                             ; preds = %3785, %3776
  %3790 = phi ptr [ %3778, %3776 ], [ %3786, %3785 ]
  store ptr %3790, ptr %133, align 8, !tbaa !271
  %3791 = load ptr, ptr %16, align 8
  %3792 = call ptr @Perl_regnext(ptr noundef %3791) #15
  %3793 = getelementptr inbounds %struct.scan_frame, ptr %3790, i64 0, i32 1
  store ptr %3792, ptr %3793, align 8, !tbaa !277
  store ptr %261, ptr %3790, align 8, !tbaa !278
  %3794 = getelementptr inbounds %struct.scan_frame, ptr %3790, i64 0, i32 3
  store i32 %262, ptr %3794, align 4, !tbaa !279
  %3795 = getelementptr inbounds %struct.scan_frame, ptr %3790, i64 0, i32 2
  store i32 %263, ptr %3795, align 8, !tbaa !280
  %3796 = getelementptr inbounds %struct.scan_frame, ptr %3790, i64 0, i32 5
  store ptr %275, ptr %3796, align 8, !tbaa !281
  %3797 = load volatile i64, ptr %18, align 8, !tbaa !9
  %3798 = and i64 %3797, 1048578
  %3799 = icmp eq i64 %3798, 1048578
  %3800 = and i1 %108, %3799
  br i1 %3800, label %3801, label %3979

3801:                                             ; preds = %3789
  %3802 = call ptr @Perl_PerlIO_stderr() #15
  %3803 = shl nsw i32 %266, 1
  %3804 = load i64, ptr %5, align 8, !tbaa !251
  %3805 = load i64, ptr %109, align 8, !tbaa !252
  %3806 = load i32, ptr %110, align 8, !tbaa !185
  %3807 = sext i32 %3806 to i64
  %3808 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3802, ptr noundef nonnull @.str.270, i32 noundef %3803, ptr noundef nonnull @.str.8, i64 noundef %3804, i64 noundef %3805, i64 noundef %3807) #15
  %3809 = load i32, ptr %110, align 8, !tbaa !185
  %3810 = icmp eq i32 %3809, 0
  br i1 %3810, label %3935, label %3811

3811:                                             ; preds = %3801
  %3812 = call ptr @Perl_PerlIO_stderr() #15
  %3813 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3812, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.35) #15
  %3814 = load i32, ptr %110, align 8, !tbaa !185
  %3815 = and i32 %3814, 16
  %3816 = icmp eq i32 %3815, 0
  br i1 %3816, label %3821, label %3817

3817:                                             ; preds = %3811
  %3818 = call ptr @Perl_PerlIO_stderr() #15
  %3819 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3818, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.37) #15
  %3820 = load i32, ptr %110, align 8, !tbaa !185
  br label %3821

3821:                                             ; preds = %3817, %3811
  %3822 = phi i32 [ %3820, %3817 ], [ %3814, %3811 ]
  %3823 = and i32 %3822, 32
  %3824 = icmp eq i32 %3823, 0
  br i1 %3824, label %3829, label %3825

3825:                                             ; preds = %3821
  %3826 = call ptr @Perl_PerlIO_stderr() #15
  %3827 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3826, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.38) #15
  %3828 = load i32, ptr %110, align 8, !tbaa !185
  br label %3829

3829:                                             ; preds = %3825, %3821
  %3830 = phi i32 [ %3828, %3825 ], [ %3822, %3821 ]
  %3831 = and i32 %3830, 64
  %3832 = icmp eq i32 %3831, 0
  br i1 %3832, label %3837, label %3833

3833:                                             ; preds = %3829
  %3834 = call ptr @Perl_PerlIO_stderr() #15
  %3835 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3834, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.39) #15
  %3836 = load i32, ptr %110, align 8, !tbaa !185
  br label %3837

3837:                                             ; preds = %3833, %3829
  %3838 = phi i32 [ %3836, %3833 ], [ %3830, %3829 ]
  %3839 = and i32 %3838, 128
  %3840 = icmp eq i32 %3839, 0
  br i1 %3840, label %3845, label %3841

3841:                                             ; preds = %3837
  %3842 = call ptr @Perl_PerlIO_stderr() #15
  %3843 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3842, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.40) #15
  %3844 = load i32, ptr %110, align 8, !tbaa !185
  br label %3845

3845:                                             ; preds = %3841, %3837
  %3846 = phi i32 [ %3844, %3841 ], [ %3838, %3837 ]
  %3847 = and i32 %3846, 256
  %3848 = icmp eq i32 %3847, 0
  br i1 %3848, label %3853, label %3849

3849:                                             ; preds = %3845
  %3850 = call ptr @Perl_PerlIO_stderr() #15
  %3851 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3850, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.41) #15
  %3852 = load i32, ptr %110, align 8, !tbaa !185
  br label %3853

3853:                                             ; preds = %3849, %3845
  %3854 = phi i32 [ %3852, %3849 ], [ %3846, %3845 ]
  %3855 = and i32 %3854, 512
  %3856 = icmp eq i32 %3855, 0
  br i1 %3856, label %3861, label %3857

3857:                                             ; preds = %3853
  %3858 = call ptr @Perl_PerlIO_stderr() #15
  %3859 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3858, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.42) #15
  %3860 = load i32, ptr %110, align 8, !tbaa !185
  br label %3861

3861:                                             ; preds = %3857, %3853
  %3862 = phi i32 [ %3860, %3857 ], [ %3854, %3853 ]
  %3863 = and i32 %3862, 1024
  %3864 = icmp eq i32 %3863, 0
  br i1 %3864, label %3869, label %3865

3865:                                             ; preds = %3861
  %3866 = call ptr @Perl_PerlIO_stderr() #15
  %3867 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3866, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.43) #15
  %3868 = load i32, ptr %110, align 8, !tbaa !185
  br label %3869

3869:                                             ; preds = %3865, %3861
  %3870 = phi i32 [ %3868, %3865 ], [ %3862, %3861 ]
  %3871 = and i32 %3870, 2048
  %3872 = icmp eq i32 %3871, 0
  br i1 %3872, label %3877, label %3873

3873:                                             ; preds = %3869
  %3874 = call ptr @Perl_PerlIO_stderr() #15
  %3875 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3874, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.44) #15
  %3876 = load i32, ptr %110, align 8, !tbaa !185
  br label %3877

3877:                                             ; preds = %3873, %3869
  %3878 = phi i32 [ %3876, %3873 ], [ %3870, %3869 ]
  %3879 = and i32 %3878, 4096
  %3880 = icmp eq i32 %3879, 0
  br i1 %3880, label %3885, label %3881

3881:                                             ; preds = %3877
  %3882 = call ptr @Perl_PerlIO_stderr() #15
  %3883 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3882, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.45) #15
  %3884 = load i32, ptr %110, align 8, !tbaa !185
  br label %3885

3885:                                             ; preds = %3881, %3877
  %3886 = phi i32 [ %3884, %3881 ], [ %3878, %3877 ]
  %3887 = and i32 %3886, 6144
  %3888 = icmp eq i32 %3887, 0
  br i1 %3888, label %3893, label %3889

3889:                                             ; preds = %3885
  %3890 = call ptr @Perl_PerlIO_stderr() #15
  %3891 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3890, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.46) #15
  %3892 = load i32, ptr %110, align 8, !tbaa !185
  br label %3893

3893:                                             ; preds = %3889, %3885
  %3894 = phi i32 [ %3892, %3889 ], [ %3886, %3885 ]
  %3895 = and i32 %3894, 8192
  %3896 = icmp eq i32 %3895, 0
  br i1 %3896, label %3901, label %3897

3897:                                             ; preds = %3893
  %3898 = call ptr @Perl_PerlIO_stderr() #15
  %3899 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3898, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.47) #15
  %3900 = load i32, ptr %110, align 8, !tbaa !185
  br label %3901

3901:                                             ; preds = %3897, %3893
  %3902 = phi i32 [ %3900, %3897 ], [ %3894, %3893 ]
  %3903 = and i32 %3902, 16384
  %3904 = icmp eq i32 %3903, 0
  br i1 %3904, label %3909, label %3905

3905:                                             ; preds = %3901
  %3906 = call ptr @Perl_PerlIO_stderr() #15
  %3907 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3906, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.48) #15
  %3908 = load i32, ptr %110, align 8, !tbaa !185
  br label %3909

3909:                                             ; preds = %3905, %3901
  %3910 = phi i32 [ %3908, %3905 ], [ %3902, %3901 ]
  %3911 = and i32 %3910, 32768
  %3912 = icmp eq i32 %3911, 0
  br i1 %3912, label %3917, label %3913

3913:                                             ; preds = %3909
  %3914 = call ptr @Perl_PerlIO_stderr() #15
  %3915 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3914, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.49) #15
  %3916 = load i32, ptr %110, align 8, !tbaa !185
  br label %3917

3917:                                             ; preds = %3913, %3909
  %3918 = phi i32 [ %3916, %3913 ], [ %3910, %3909 ]
  %3919 = and i32 %3918, 65536
  %3920 = icmp eq i32 %3919, 0
  br i1 %3920, label %3925, label %3921

3921:                                             ; preds = %3917
  %3922 = call ptr @Perl_PerlIO_stderr() #15
  %3923 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3922, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.50) #15
  %3924 = load i32, ptr %110, align 8, !tbaa !185
  br label %3925

3925:                                             ; preds = %3921, %3917
  %3926 = phi i32 [ %3924, %3921 ], [ %3918, %3917 ]
  %3927 = and i32 %3926, 131072
  %3928 = icmp eq i32 %3927, 0
  br i1 %3928, label %3932, label %3929

3929:                                             ; preds = %3925
  %3930 = call ptr @Perl_PerlIO_stderr() #15
  %3931 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3930, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.51) #15
  br label %3932

3932:                                             ; preds = %3929, %3925
  %3933 = call ptr @Perl_PerlIO_stderr() #15
  %3934 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3933, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.52) #15
  br label %3935

3935:                                             ; preds = %3932, %3801
  %3936 = call ptr @Perl_PerlIO_stderr() #15
  %3937 = load i32, ptr %111, align 4, !tbaa !253
  %3938 = sext i32 %3937 to i64
  %3939 = load ptr, ptr %112, align 8, !tbaa !184
  %3940 = icmp eq ptr %3939, null
  br i1 %3940, label %3943, label %3941

3941:                                             ; preds = %3935
  %3942 = load i64, ptr %3939, align 8, !tbaa !9
  br label %3943

3943:                                             ; preds = %3935, %3941
  %3944 = phi i64 [ %3942, %3941 ], [ -1, %3935 ]
  %3945 = icmp eq i32 %270, 0
  %3946 = select i1 %3945, ptr @.str.8, ptr @.str.248
  %3947 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3936, ptr noundef nonnull @.str.247, i64 noundef %3938, i64 noundef %3944, ptr noundef nonnull %3946) #15
  %3948 = load ptr, ptr %113, align 8, !tbaa !179
  %3949 = icmp eq ptr %3948, null
  br i1 %3949, label %3976, label %3950

3950:                                             ; preds = %3943
  %3951 = call ptr @Perl_PerlIO_stderr() #15
  %3952 = load ptr, ptr %113, align 8, !tbaa !179
  %3953 = getelementptr inbounds %struct.sv, ptr %3952, i64 0, i32 3
  %3954 = load ptr, ptr %3953, align 8, !tbaa !17
  %3955 = load i64, ptr %114, align 8, !tbaa !254
  %3956 = load i64, ptr %115, align 8, !tbaa !255
  %3957 = load i64, ptr %116, align 8, !tbaa !256
  %3958 = load ptr, ptr %117, align 8, !tbaa !180
  %3959 = icmp ne ptr %3958, null
  %3960 = icmp eq ptr %3958, %118
  %3961 = and i1 %3959, %3960
  %3962 = select i1 %3961, ptr @.str.250, ptr @.str.8
  %3963 = load ptr, ptr %118, align 8, !tbaa !176
  %3964 = getelementptr inbounds %struct.sv, ptr %3963, i64 0, i32 3
  %3965 = load ptr, ptr %3964, align 8, !tbaa !17
  %3966 = load i64, ptr %119, align 8, !tbaa !187
  %3967 = icmp eq ptr %3958, %120
  %3968 = and i1 %3959, %3967
  %3969 = select i1 %3968, ptr @.str.250, ptr @.str.8
  %3970 = load ptr, ptr %120, align 8, !tbaa !178
  %3971 = getelementptr inbounds %struct.sv, ptr %3970, i64 0, i32 3
  %3972 = load ptr, ptr %3971, align 8, !tbaa !17
  %3973 = load i64, ptr %121, align 8, !tbaa !186
  %3974 = load i64, ptr %122, align 8, !tbaa !192
  %3975 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3951, ptr noundef nonnull @.str.249, ptr noundef %3954, i64 noundef %3955, i64 noundef %3956, i64 noundef %3957, ptr noundef nonnull %3962, ptr noundef %3965, i64 noundef %3966, ptr noundef nonnull %3969, ptr noundef %3972, i64 noundef %3973, i64 noundef %3974) #15
  br label %3976

3976:                                             ; preds = %3950, %3943
  %3977 = call ptr @Perl_PerlIO_stderr() #15
  %3978 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3977, ptr noundef nonnull @.str.53) #15
  br label %3979

3979:                                             ; preds = %3789, %3976
  %3980 = load volatile i64, ptr %18, align 8, !tbaa !9
  %3981 = and i64 %3980, 2
  %3982 = icmp ne i64 %3981, 0
  %3983 = icmp ne ptr %3791, null
  %3984 = and i1 %3983, %3982
  br i1 %3984, label %3985, label %4119

3985:                                             ; preds = %3979
  %3986 = call ptr @Perl_regnext(ptr noundef nonnull %3791) #15
  %3987 = load ptr, ptr %123, align 8, !tbaa !129
  %3988 = load ptr, ptr %124, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %3987, ptr noundef %3988, ptr noundef nonnull %3791, ptr noundef null, ptr noundef nonnull %0)
  %3989 = call ptr @Perl_PerlIO_stderr() #15
  %3990 = shl nsw i32 %266, 1
  %3991 = load ptr, ptr %125, align 8, !tbaa !131
  %3992 = ptrtoint ptr %3791 to i64
  %3993 = ptrtoint ptr %3991 to i64
  %3994 = sub i64 %3992, %3993
  %3995 = lshr exact i64 %3994, 2
  %3996 = trunc i64 %3995 to i32
  %3997 = load ptr, ptr %124, align 8, !tbaa !56
  %3998 = getelementptr inbounds %struct.sv, ptr %3997, i64 0, i32 2
  %3999 = load i32, ptr %3998, align 4, !tbaa !13
  %4000 = and i32 %3999, 2098176
  %4001 = icmp eq i32 %4000, 1024
  br i1 %4001, label %4002, label %4005

4002:                                             ; preds = %3985
  %4003 = getelementptr inbounds %struct.sv, ptr %3997, i64 0, i32 3
  %4004 = load ptr, ptr %4003, align 8, !tbaa !17
  br label %4007

4005:                                             ; preds = %3985
  %4006 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %3997, ptr noundef null, i32 noundef 34) #15
  br label %4007

4007:                                             ; preds = %4005, %4002
  %4008 = phi ptr [ %4004, %4002 ], [ %4006, %4005 ]
  %4009 = icmp eq ptr %3986, null
  br i1 %4009, label %4017, label %4010

4010:                                             ; preds = %4007
  %4011 = load ptr, ptr %125, align 8, !tbaa !131
  %4012 = ptrtoint ptr %3986 to i64
  %4013 = ptrtoint ptr %4011 to i64
  %4014 = sub i64 %4012, %4013
  %4015 = lshr exact i64 %4014, 2
  %4016 = trunc i64 %4015 to i32
  br label %4017

4017:                                             ; preds = %4007, %4010
  %4018 = phi i32 [ %4016, %4010 ], [ 0, %4007 ]
  %4019 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3989, ptr noundef nonnull @.str.271, i32 noundef %3990, ptr noundef nonnull @.str.8, i32 noundef %3996, ptr noundef %4008, i32 noundef %4018) #15
  %4020 = icmp eq i32 %265, 0
  br i1 %4020, label %4116, label %4021

4021:                                             ; preds = %4017
  %4022 = call ptr @Perl_PerlIO_stderr() #15
  %4023 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %4022, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.35) #15
  %4024 = and i32 %265, 16
  %4025 = icmp eq i32 %4024, 0
  br i1 %4025, label %4029, label %4026

4026:                                             ; preds = %4021
  %4027 = call ptr @Perl_PerlIO_stderr() #15
  %4028 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %4027, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.37) #15
  br label %4029

4029:                                             ; preds = %4026, %4021
  %4030 = and i32 %265, 32
  %4031 = icmp eq i32 %4030, 0
  br i1 %4031, label %4035, label %4032

4032:                                             ; preds = %4029
  %4033 = call ptr @Perl_PerlIO_stderr() #15
  %4034 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %4033, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.38) #15
  br label %4035

4035:                                             ; preds = %4032, %4029
  %4036 = and i32 %265, 64
  %4037 = icmp eq i32 %4036, 0
  br i1 %4037, label %4041, label %4038

4038:                                             ; preds = %4035
  %4039 = call ptr @Perl_PerlIO_stderr() #15
  %4040 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %4039, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.39) #15
  br label %4041

4041:                                             ; preds = %4038, %4035
  %4042 = and i32 %265, 128
  %4043 = icmp eq i32 %4042, 0
  br i1 %4043, label %4047, label %4044

4044:                                             ; preds = %4041
  %4045 = call ptr @Perl_PerlIO_stderr() #15
  %4046 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %4045, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.40) #15
  br label %4047

4047:                                             ; preds = %4044, %4041
  %4048 = and i32 %265, 256
  %4049 = icmp eq i32 %4048, 0
  br i1 %4049, label %4053, label %4050

4050:                                             ; preds = %4047
  %4051 = call ptr @Perl_PerlIO_stderr() #15
  %4052 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %4051, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.41) #15
  br label %4053

4053:                                             ; preds = %4050, %4047
  %4054 = and i32 %265, 512
  %4055 = icmp eq i32 %4054, 0
  br i1 %4055, label %4059, label %4056

4056:                                             ; preds = %4053
  %4057 = call ptr @Perl_PerlIO_stderr() #15
  %4058 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %4057, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.42) #15
  br label %4059

4059:                                             ; preds = %4056, %4053
  %4060 = and i32 %265, 1024
  %4061 = icmp eq i32 %4060, 0
  br i1 %4061, label %4065, label %4062

4062:                                             ; preds = %4059
  %4063 = call ptr @Perl_PerlIO_stderr() #15
  %4064 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %4063, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.43) #15
  br label %4065

4065:                                             ; preds = %4062, %4059
  %4066 = and i32 %265, 2048
  %4067 = icmp eq i32 %4066, 0
  br i1 %4067, label %4071, label %4068

4068:                                             ; preds = %4065
  %4069 = call ptr @Perl_PerlIO_stderr() #15
  %4070 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %4069, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.44) #15
  br label %4071

4071:                                             ; preds = %4068, %4065
  %4072 = and i32 %265, 4096
  %4073 = icmp eq i32 %4072, 0
  br i1 %4073, label %4077, label %4074

4074:                                             ; preds = %4071
  %4075 = call ptr @Perl_PerlIO_stderr() #15
  %4076 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %4075, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.45) #15
  br label %4077

4077:                                             ; preds = %4074, %4071
  %4078 = and i32 %265, 6144
  %4079 = icmp eq i32 %4078, 0
  br i1 %4079, label %4083, label %4080

4080:                                             ; preds = %4077
  %4081 = call ptr @Perl_PerlIO_stderr() #15
  %4082 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %4081, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.46) #15
  br label %4083

4083:                                             ; preds = %4080, %4077
  %4084 = and i32 %265, 8192
  %4085 = icmp eq i32 %4084, 0
  br i1 %4085, label %4089, label %4086

4086:                                             ; preds = %4083
  %4087 = call ptr @Perl_PerlIO_stderr() #15
  %4088 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %4087, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.47) #15
  br label %4089

4089:                                             ; preds = %4086, %4083
  %4090 = and i32 %265, 16384
  %4091 = icmp eq i32 %4090, 0
  br i1 %4091, label %4095, label %4092

4092:                                             ; preds = %4089
  %4093 = call ptr @Perl_PerlIO_stderr() #15
  %4094 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %4093, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.48) #15
  br label %4095

4095:                                             ; preds = %4092, %4089
  %4096 = and i32 %265, 32768
  %4097 = icmp eq i32 %4096, 0
  br i1 %4097, label %4101, label %4098

4098:                                             ; preds = %4095
  %4099 = call ptr @Perl_PerlIO_stderr() #15
  %4100 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %4099, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.49) #15
  br label %4101

4101:                                             ; preds = %4098, %4095
  %4102 = and i32 %265, 65536
  %4103 = icmp eq i32 %4102, 0
  br i1 %4103, label %4107, label %4104

4104:                                             ; preds = %4101
  %4105 = call ptr @Perl_PerlIO_stderr() #15
  %4106 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %4105, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.50) #15
  br label %4107

4107:                                             ; preds = %4104, %4101
  %4108 = and i32 %265, 131072
  %4109 = icmp eq i32 %4108, 0
  br i1 %4109, label %4113, label %4110

4110:                                             ; preds = %4107
  %4111 = call ptr @Perl_PerlIO_stderr() #15
  %4112 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %4111, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.51) #15
  br label %4113

4113:                                             ; preds = %4110, %4107
  %4114 = call ptr @Perl_PerlIO_stderr() #15
  %4115 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %4114, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.52) #15
  br label %4116

4116:                                             ; preds = %4113, %4017
  %4117 = call ptr @Perl_PerlIO_stderr() #15
  %4118 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %4117, ptr noundef nonnull @.str.53) #15
  br label %4119

4119:                                             ; preds = %4116, %3979
  store ptr %3767, ptr %16, align 8, !tbaa !5
  %4120 = add i32 %266, 1
  br label %6847

4121:                                             ; preds = %2185, %2185
  %4122 = load i8, ptr %2127, align 2, !tbaa !205
  %4123 = zext i8 %4122 to i64
  %4124 = load i32, ptr %126, align 8, !tbaa !50
  %4125 = icmp eq i32 %4124, 0
  %4126 = getelementptr inbounds %struct.regnode_string, ptr %2127, i64 0, i32 3
  br i1 %4125, label %4133, label %4127

4127:                                             ; preds = %4121
  %4128 = getelementptr inbounds i8, ptr %4126, i64 %4123
  %4129 = call zeroext i1 @Perl_ckwarn_d(i32 noundef 44) #15
  %4130 = select i1 %4129, i32 0, i32 -8161
  %4131 = call i64 @Perl_utf8n_to_uvchr(ptr noundef nonnull %4126, i64 noundef %4123, ptr noundef null, i32 noundef %4130) #15
  %4132 = call i64 @Perl_utf8_length(ptr noundef nonnull %4126, ptr noundef nonnull %4128) #15
  br label %4136

4133:                                             ; preds = %4121
  %4134 = load i8, ptr %4126, align 2, !tbaa !17
  %4135 = zext i8 %4134 to i64
  br label %4136

4136:                                             ; preds = %4133, %4127
  %4137 = phi i64 [ %4132, %4127 ], [ %4123, %4133 ]
  %4138 = phi i64 [ %4131, %4127 ], [ %4135, %4133 ]
  %4139 = add nsw i64 %4137, %267
  %4140 = and i32 %265, 1024
  %4141 = icmp eq i32 %4140, 0
  br i1 %4141, label %4191, label %4142

4142:                                             ; preds = %4136
  %4143 = load i64, ptr %114, align 8, !tbaa !254
  %4144 = icmp eq i64 %4143, -1
  br i1 %4144, label %4145, label %4153

4145:                                             ; preds = %4142
  %4146 = load i64, ptr %5, align 8, !tbaa !251
  store i64 %4146, ptr %115, align 8, !tbaa !255
  %4147 = icmp eq i32 %270, 0
  br i1 %4147, label %4148, label %4151

4148:                                             ; preds = %4145
  %4149 = load i64, ptr %109, align 8, !tbaa !252
  %4150 = add nsw i64 %4149, %4146
  br label %4151

4151:                                             ; preds = %4145, %4148
  %4152 = phi i64 [ %4150, %4148 ], [ 9223372036854775807, %4145 ]
  store i64 %4152, ptr %116, align 8, !tbaa !256
  br label %4153

4153:                                             ; preds = %4151, %4142
  %4154 = load ptr, ptr %113, align 8, !tbaa !179
  %4155 = getelementptr inbounds %struct.regnode_string, ptr %2127, i64 0, i32 3
  %4156 = load i8, ptr %2127, align 2, !tbaa !205
  %4157 = zext i8 %4156 to i64
  call void @Perl_sv_catpvn_flags(ptr noundef %4154, ptr noundef nonnull %4155, i64 noundef %4157, i32 noundef 2) #15
  %4158 = load i32, ptr %126, align 8, !tbaa !50
  %4159 = icmp eq i32 %4158, 0
  %4160 = load ptr, ptr %113, align 8, !tbaa !179
  %4161 = getelementptr inbounds %struct.sv, ptr %4160, i64 0, i32 2
  %4162 = load i32, ptr %4161, align 4, !tbaa !13
  br i1 %4159, label %4165, label %4163

4163:                                             ; preds = %4153
  %4164 = or i32 %4162, 536870912
  store i32 %4164, ptr %4161, align 4, !tbaa !13
  br label %4165

4165:                                             ; preds = %4153, %4163
  %4166 = phi i32 [ %4164, %4163 ], [ %4162, %4153 ]
  %4167 = and i32 %4166, 536870912
  %4168 = icmp eq i32 %4167, 0
  %4169 = and i32 %4166, 14680064
  %4170 = icmp eq i32 %4169, 0
  %4171 = or i1 %4168, %4170
  br i1 %4171, label %4186, label %4172

4172:                                             ; preds = %4165
  %4173 = call ptr @Perl_mg_find(ptr noundef nonnull %4160, i32 noundef 119) #15
  %4174 = icmp eq ptr %4173, null
  br i1 %4174, label %4186, label %4175

4175:                                             ; preds = %4172
  %4176 = getelementptr inbounds %struct.magic, ptr %4173, i64 0, i32 5
  %4177 = load i64, ptr %4176, align 8, !tbaa !282
  %4178 = icmp sgt i64 %4177, -1
  br i1 %4178, label %4179, label %4186

4179:                                             ; preds = %4175
  %4180 = load i8, ptr %2127, align 2, !tbaa !205
  %4181 = zext i8 %4180 to i64
  %4182 = getelementptr inbounds i8, ptr %4155, i64 %4181
  %4183 = call i64 @Perl_utf8_length(ptr noundef nonnull %4155, ptr noundef nonnull %4182) #15
  %4184 = load i64, ptr %4176, align 8, !tbaa !282
  %4185 = add i64 %4184, %4183
  store i64 %4185, ptr %4176, align 8, !tbaa !282
  br label %4186

4186:                                             ; preds = %4165, %4179, %4175, %4172
  %4187 = load i64, ptr %5, align 8, !tbaa !251
  %4188 = add nsw i64 %4187, %4137
  store i64 %4188, ptr %114, align 8, !tbaa !254
  store i64 %4188, ptr %5, align 8, !tbaa !251
  %4189 = load i32, ptr %110, align 8, !tbaa !185
  %4190 = and i32 %4189, -4
  store i32 %4190, ptr %110, align 8, !tbaa !185
  br label %4191

4191:                                             ; preds = %4186, %4136
  %4192 = and i32 %265, 2048
  %4193 = icmp eq i32 %4192, 0
  br i1 %4193, label %4246, label %4194

4194:                                             ; preds = %4191
  %4195 = load ptr, ptr %132, align 8, !tbaa !183
  %4196 = call ptr @Perl__new_invlist(i64 noundef 2) #15
  %4197 = icmp eq ptr %4195, null
  br i1 %4197, label %4198, label %4199

4198:                                             ; preds = %4194
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1510) #15
  br label %4199

4199:                                             ; preds = %4198, %4194
  %4200 = getelementptr inbounds %struct.regnode_ssc, ptr %4195, i64 0, i32 1
  %4201 = load i8, ptr %4200, align 1, !tbaa !181
  %4202 = icmp eq i8 %4201, 19
  br i1 %4202, label %4203, label %4207

4203:                                             ; preds = %4199
  %4204 = getelementptr inbounds %struct.regnode_ssc, ptr %4195, i64 0, i32 2
  %4205 = load i16, ptr %4204, align 2, !tbaa !182
  %4206 = icmp eq i16 %4205, 1
  br i1 %4206, label %4208, label %4207

4207:                                             ; preds = %4203, %4199
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1512) #15
  br label %4208

4208:                                             ; preds = %4207, %4203
  %4209 = call ptr @Perl__add_range_to_invlist(ptr noundef %4196, i64 noundef %4138, i64 noundef %4138) #15
  %4210 = icmp eq ptr %4209, null
  br i1 %4210, label %4211, label %4212

4211:                                             ; preds = %4208
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 1483) #15
  br label %4212

4212:                                             ; preds = %4211, %4208
  %4213 = load i8, ptr %4200, align 1, !tbaa !181
  %4214 = icmp eq i8 %4213, 19
  br i1 %4214, label %4215, label %4219

4215:                                             ; preds = %4212
  %4216 = getelementptr inbounds %struct.regnode_ssc, ptr %4195, i64 0, i32 2
  %4217 = load i16, ptr %4216, align 2, !tbaa !182
  %4218 = icmp eq i16 %4217, 1
  br i1 %4218, label %4220, label %4219

4219:                                             ; preds = %4215, %4212
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1485) #15
  br label %4220

4220:                                             ; preds = %4219, %4215
  %4221 = getelementptr inbounds %struct.regnode_ssc, ptr %4195, i64 0, i32 6
  %4222 = load ptr, ptr %4221, align 8, !tbaa !284
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %4222, ptr noundef %4209, i1 noundef zeroext false, ptr noundef nonnull %4221) #15
  %4223 = getelementptr inbounds %struct.sv, ptr %4209, i64 0, i32 1
  %4224 = load i32, ptr %4223, align 8, !tbaa !37
  %4225 = icmp ugt i32 %4224, 1
  br i1 %4225, label %4226, label %4228

4226:                                             ; preds = %4220
  %4227 = add i32 %4224, -1
  store i32 %4227, ptr %4223, align 8, !tbaa !37
  br label %4229

4228:                                             ; preds = %4220
  call void @Perl_sv_free2(ptr noundef nonnull %4209, i32 noundef %4224) #15
  br label %4229

4229:                                             ; preds = %4228, %4226
  %4230 = load ptr, ptr %132, align 8, !tbaa !183
  %4231 = load i8, ptr %4230, align 8, !tbaa !198
  %4232 = and i8 %4231, -2
  store i8 %4232, ptr %4230, align 8, !tbaa !198
  %4233 = getelementptr inbounds %struct.regnode_ssc, ptr %4230, i64 0, i32 1
  %4234 = load i8, ptr %4233, align 1, !tbaa !181
  %4235 = icmp eq i8 %4234, 19
  br i1 %4235, label %4236, label %4240

4236:                                             ; preds = %4229
  %4237 = getelementptr inbounds %struct.regnode_ssc, ptr %4230, i64 0, i32 2
  %4238 = load i16, ptr %4237, align 2, !tbaa !182
  %4239 = icmp eq i16 %4238, 1
  br i1 %4239, label %4242, label %4240

4240:                                             ; preds = %4236, %4229
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1527) #15
  %4241 = load i8, ptr %4230, align 8, !tbaa !198
  br label %4242

4242:                                             ; preds = %4236, %4240
  %4243 = phi i8 [ %4232, %4236 ], [ %4241, %4240 ]
  %4244 = getelementptr inbounds %struct.regnode_charclass_class, ptr %4230, i64 0, i32 5
  store i32 0, ptr %4244, align 4, !tbaa !243
  %4245 = and i8 %4243, -13
  store i8 %4245, ptr %4230, align 8, !tbaa !198
  br label %4270

4246:                                             ; preds = %4191
  %4247 = and i32 %265, 4096
  %4248 = icmp eq i32 %4247, 0
  br i1 %4248, label %4270, label %4249

4249:                                             ; preds = %4246
  %4250 = load ptr, ptr %132, align 8, !tbaa !183
  %4251 = icmp eq ptr %4250, null
  br i1 %4251, label %4252, label %4253

4252:                                             ; preds = %4249
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1496) #15
  br label %4253

4253:                                             ; preds = %4252, %4249
  %4254 = getelementptr inbounds %struct.regnode_ssc, ptr %4250, i64 0, i32 1
  %4255 = load i8, ptr %4254, align 1, !tbaa !181
  %4256 = icmp eq i8 %4255, 19
  br i1 %4256, label %4257, label %4261

4257:                                             ; preds = %4253
  %4258 = getelementptr inbounds %struct.regnode_ssc, ptr %4250, i64 0, i32 2
  %4259 = load i16, ptr %4258, align 2, !tbaa !182
  %4260 = icmp eq i16 %4259, 1
  br i1 %4260, label %4262, label %4261

4261:                                             ; preds = %4257, %4253
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1498) #15
  br label %4262

4262:                                             ; preds = %4257, %4261
  %4263 = getelementptr inbounds %struct.regnode_ssc, ptr %4250, i64 0, i32 6
  %4264 = load ptr, ptr %4263, align 8, !tbaa !284
  %4265 = call ptr @Perl__add_range_to_invlist(ptr noundef %4264, i64 noundef %4138, i64 noundef %4138) #15
  store ptr %4265, ptr %4263, align 8, !tbaa !284
  %4266 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_and(ptr noundef nonnull %0, ptr noundef %4266, ptr noundef %264)
  %4267 = load ptr, ptr %132, align 8, !tbaa !183
  %4268 = load i8, ptr %4267, align 8, !tbaa !198
  %4269 = and i8 %4268, -2
  store i8 %4269, ptr %4267, align 8, !tbaa !198
  br label %4270

4270:                                             ; preds = %4246, %4262, %4242
  %4271 = and i32 %265, -6145
  br label %6835

4272:                                             ; preds = %2125, %2185
  %4273 = phi i32 [ %2186, %2185 ], [ 47, %2125 ]
  %4274 = phi i8 [ %2175, %2185 ], [ 47, %2125 ]
  %4275 = zext i8 %4274 to i64
  %4276 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %4275
  %4277 = load i8, ptr %4276, align 1, !tbaa !17
  %4278 = icmp eq i8 %4277, 31
  br i1 %4278, label %4279, label %5363

4279:                                             ; preds = %4272
  %4280 = load i8, ptr %2127, align 2, !tbaa !205
  %4281 = zext i8 %4280 to i64
  %4282 = getelementptr inbounds %struct.regnode_string, ptr %2127, i64 0, i32 3
  %4283 = and i32 %265, 1024
  %4284 = icmp eq i32 %4283, 0
  br i1 %4284, label %4288, label %4285

4285:                                             ; preds = %4279
  br i1 %108, label %4286, label %4287

4286:                                             ; preds = %4285
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef nonnull %5, ptr noundef %2, i32 noundef %270)
  br label %4288

4287:                                             ; preds = %4285
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.272, i32 noundef 4556) #15
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef null, ptr noundef %2, i32 noundef %270)
  br label %4288

4288:                                             ; preds = %4287, %4286, %4279
  %4289 = load i32, ptr %126, align 8, !tbaa !50
  %4290 = icmp eq i32 %4289, 0
  br i1 %4290, label %4294, label %4291

4291:                                             ; preds = %4288
  %4292 = getelementptr inbounds i8, ptr %4282, i64 %4281
  %4293 = call i64 @Perl_utf8_length(ptr noundef nonnull %4282, ptr noundef nonnull %4292) #15
  br label %4294

4294:                                             ; preds = %4288, %4291
  %4295 = phi i64 [ %4293, %4291 ], [ %4281, %4288 ]
  %4296 = icmp eq i8 %2129, 0
  br i1 %4296, label %4300, label %4297

4297:                                             ; preds = %4294
  %4298 = load i32, ptr %150, align 8, !tbaa !98
  %4299 = or i32 %4298, 1024
  store i32 %4299, ptr %150, align 8, !tbaa !98
  br label %4300

4300:                                             ; preds = %4297, %4294
  %4301 = sub i64 %4295, %2128
  %4302 = add i64 %4301, %267
  %4303 = icmp sgt i64 %4302, -1
  br i1 %4303, label %4305, label %4304

4304:                                             ; preds = %4300
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.273, i32 noundef 4566) #15
  br label %4305

4305:                                             ; preds = %4300, %4304
  %4306 = add i64 %2128, %269
  br i1 %4284, label %4315, label %4307

4307:                                             ; preds = %4305
  %4308 = load i64, ptr %5, align 8, !tbaa !251
  %4309 = add i64 %4308, %4301
  %4310 = call i64 @llvm.smax.i64(i64 %4309, i64 0)
  store i64 %4310, ptr %5, align 8, !tbaa !251
  %4311 = load i64, ptr %109, align 8, !tbaa !252
  %4312 = add i64 %4311, %2128
  store i64 %4312, ptr %109, align 8, !tbaa !252
  %4313 = icmp eq i64 %2128, 0
  br i1 %4313, label %4315, label %4314

4314:                                             ; preds = %4307
  store ptr %120, ptr %117, align 8, !tbaa !180
  br label %4315

4315:                                             ; preds = %4307, %4314, %4305
  %4316 = and i32 %265, 6144
  %4317 = icmp eq i32 %4316, 0
  br i1 %4317, label %6835, label %4318

4318:                                             ; preds = %4315
  %4319 = load ptr, ptr %16, align 8, !tbaa !5
  %4320 = getelementptr inbounds %struct.regnode_string, ptr %4319, i64 0, i32 3
  %4321 = load i8, ptr %4319, align 2, !tbaa !205
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #15
  %4322 = call ptr @Perl__new_invlist(i64 noundef 4) #15
  store ptr %4322, ptr %11, align 8, !tbaa !5
  %4323 = load i32, ptr %126, align 8, !tbaa !50
  %4324 = icmp eq i32 %4323, 0
  br i1 %4324, label %4325, label %4384

4325:                                             ; preds = %4318
  %4326 = load i8, ptr %4320, align 1, !tbaa !17
  %4327 = zext i8 %4326 to i64
  %4328 = icmp ugt i8 %4321, 2
  br i1 %4328, label %4329, label %4341

4329:                                             ; preds = %4325
  %4330 = and i8 %4326, -33
  switch i8 %4330, label %4357 [
    i8 70, label %4331
    i8 83, label %4335
  ]

4331:                                             ; preds = %4329
  %4332 = getelementptr inbounds %struct.regnode_string, ptr %4319, i64 0, i32 3, i64 1
  %4333 = load i8, ptr %4332, align 1, !tbaa !17
  %4334 = and i8 %4333, -33
  switch i8 %4334, label %4357 [
    i8 70, label %4355
    i8 73, label %4355
    i8 76, label %4355
  ]

4335:                                             ; preds = %4329
  %4336 = getelementptr inbounds %struct.regnode_string, ptr %4319, i64 0, i32 3, i64 1
  %4337 = load i8, ptr %4336, align 1, !tbaa !17
  %4338 = and i8 %4337, -33
  %4339 = add i8 %4338, -83
  %4340 = icmp ult i8 %4339, 2
  br i1 %4340, label %4355, label %4357

4341:                                             ; preds = %4325
  %4342 = icmp eq i8 %4321, 2
  br i1 %4342, label %4343, label %4357

4343:                                             ; preds = %4341
  %4344 = and i8 %4326, -33
  switch i8 %4344, label %4357 [
    i8 70, label %4345
    i8 83, label %4349
  ]

4345:                                             ; preds = %4343
  %4346 = getelementptr inbounds %struct.regnode_string, ptr %4319, i64 0, i32 3, i64 1
  %4347 = load i8, ptr %4346, align 1, !tbaa !17
  %4348 = and i8 %4347, -33
  switch i8 %4348, label %4357 [
    i8 70, label %4355
    i8 73, label %4355
    i8 76, label %4355
  ]

4349:                                             ; preds = %4343
  %4350 = getelementptr inbounds %struct.regnode_string, ptr %4319, i64 0, i32 3, i64 1
  %4351 = load i8, ptr %4350, align 1, !tbaa !17
  %4352 = and i8 %4351, -33
  %4353 = add i8 %4352, -83
  %4354 = icmp ult i8 %4353, 2
  br i1 %4354, label %4355, label %4357

4355:                                             ; preds = %4349, %4345, %4345, %4345, %4335, %4331, %4331, %4331
  %4356 = call ptr @Perl__add_range_to_invlist(ptr noundef %4322, i64 noundef 0, i64 noundef -1) #15
  br label %5284

4357:                                             ; preds = %4349, %4345, %4343, %4341, %4335, %4331, %4329
  %4358 = getelementptr inbounds %struct.regnode, ptr %4319, i64 0, i32 1
  %4359 = load i8, ptr %4358, align 1, !tbaa !141
  %4360 = icmp eq i8 %4359, 34
  %4361 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %4327
  br i1 %4360, label %4362, label %4365

4362:                                             ; preds = %4357
  %4363 = load ptr, ptr @PL_Latin1, align 8, !tbaa !5
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %4322, ptr noundef %4363, i1 noundef zeroext false, ptr noundef nonnull %11) #15
  %4364 = load i32, ptr %4361, align 4, !tbaa !73
  br label %4375

4365:                                             ; preds = %4357
  %4366 = call ptr @Perl__add_range_to_invlist(ptr noundef %4322, i64 noundef %4327, i64 noundef %4327) #15
  store ptr %4366, ptr %11, align 8, !tbaa !5
  %4367 = load i32, ptr %4361, align 4, !tbaa !73
  %4368 = and i32 %4367, 4194304
  %4369 = icmp eq i32 %4368, 0
  br i1 %4369, label %4375, label %4370

4370:                                             ; preds = %4365
  %4371 = getelementptr inbounds [0 x i8], ptr @PL_fold_latin1, i64 0, i64 %4327
  %4372 = load i8, ptr %4371, align 1, !tbaa !17
  %4373 = zext i8 %4372 to i64
  %4374 = call ptr @Perl__add_range_to_invlist(ptr noundef %4366, i64 noundef %4373, i64 noundef %4373) #15
  store ptr %4374, ptr %11, align 8, !tbaa !5
  br label %4375

4375:                                             ; preds = %4370, %4365, %4362
  %4376 = phi i32 [ %4364, %4362 ], [ %4367, %4365 ], [ %4367, %4370 ]
  %4377 = and i32 %4376, 524288
  %4378 = icmp eq i32 %4377, 0
  br i1 %4378, label %5282, label %4379

4379:                                             ; preds = %4375
  %4380 = icmp sgt i8 %4326, -1
  br i1 %4380, label %4381, label %4383

4381:                                             ; preds = %4379
  %4382 = load i8, ptr %4358, align 1, !tbaa !141
  switch i8 %4382, label %4383 [
    i8 36, label %5282
    i8 39, label %5282
  ]

4383:                                             ; preds = %4381, %4379
  call fastcc void @S_add_above_Latin1_folds(ptr noundef nonnull %0, i8 noundef zeroext %4326, ptr noundef nonnull %11)
  br label %5282

4384:                                             ; preds = %4318
  %4385 = zext i8 %4321 to i64
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %12) #15
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(40) %12, i8 0, i64 40, i1 false)
  %4386 = load i8, ptr %4320, align 1, !tbaa !17
  %4387 = zext i8 %4386 to i64
  %4388 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %4387
  %4389 = load i8, ptr %4388, align 1, !tbaa !17
  %4390 = getelementptr inbounds i8, ptr %4320, i64 %4385
  %4391 = call zeroext i1 @Perl_ckwarn_d(i32 noundef 44) #15
  %4392 = select i1 %4391, i32 0, i32 -8161
  %4393 = call i64 @Perl_utf8n_to_uvchr(ptr noundef nonnull %4320, i64 noundef %4385, ptr noundef null, i32 noundef %4392) #15
  %4394 = getelementptr inbounds %struct.regnode, ptr %4319, i64 0, i32 1
  %4395 = load i8, ptr %4394, align 1, !tbaa !141
  %4396 = icmp eq i8 %4395, 34
  br i1 %4396, label %4397, label %4488

4397:                                             ; preds = %4384
  %4398 = icmp ult i64 %4393, 256
  %4399 = icmp eq i64 %4393, 304
  %4400 = or i1 %4398, %4399
  br i1 %4400, label %4445, label %4401

4401:                                             ; preds = %4397
  %4402 = icmp ugt i64 %4393, 304
  br i1 %4402, label %4403, label %4488

4403:                                             ; preds = %4401
  %4404 = icmp eq i64 %4393, 329
  br i1 %4404, label %4445, label %4405

4405:                                             ; preds = %4403
  %4406 = icmp ugt i64 %4393, 329
  br i1 %4406, label %4407, label %4488

4407:                                             ; preds = %4405
  %4408 = icmp eq i64 %4393, 376
  br i1 %4408, label %4445, label %4409

4409:                                             ; preds = %4407
  %4410 = icmp ugt i64 %4393, 376
  br i1 %4410, label %4411, label %4488

4411:                                             ; preds = %4409
  %4412 = icmp eq i64 %4393, 383
  br i1 %4412, label %4445, label %4413

4413:                                             ; preds = %4411
  %4414 = icmp ugt i64 %4393, 383
  br i1 %4414, label %4415, label %4488

4415:                                             ; preds = %4413
  %4416 = icmp eq i64 %4393, 496
  br i1 %4416, label %4445, label %4417

4417:                                             ; preds = %4415
  %4418 = icmp ugt i64 %4393, 496
  br i1 %4418, label %4419, label %4488

4419:                                             ; preds = %4417
  %4420 = icmp eq i64 %4393, 700
  br i1 %4420, label %4445, label %4421

4421:                                             ; preds = %4419
  %4422 = icmp ugt i64 %4393, 700
  br i1 %4422, label %4423, label %4488

4423:                                             ; preds = %4421
  %4424 = icmp eq i64 %4393, 924
  br i1 %4424, label %4445, label %4425

4425:                                             ; preds = %4423
  %4426 = icmp ugt i64 %4393, 924
  br i1 %4426, label %4427, label %4488

4427:                                             ; preds = %4425
  %4428 = icmp eq i64 %4393, 956
  br i1 %4428, label %4445, label %4429

4429:                                             ; preds = %4427
  %4430 = icmp ugt i64 %4393, 956
  br i1 %4430, label %4431, label %4488

4431:                                             ; preds = %4429
  %4432 = add i64 %4393, -7830
  %4433 = icmp ult i64 %4432, 5
  br i1 %4433, label %4445, label %4434

4434:                                             ; preds = %4431
  %4435 = icmp ugt i64 %4393, 7834
  br i1 %4435, label %4436, label %4488

4436:                                             ; preds = %4434
  %4437 = icmp eq i64 %4393, 7838
  br i1 %4437, label %4445, label %4438

4438:                                             ; preds = %4436
  %4439 = icmp ugt i64 %4393, 7838
  br i1 %4439, label %4440, label %4488

4440:                                             ; preds = %4438
  %4441 = icmp eq i64 %4393, 8490
  br i1 %4441, label %4445, label %4442

4442:                                             ; preds = %4440
  %4443 = icmp ugt i64 %4393, 8490
  br i1 %4443, label %4444, label %4488

4444:                                             ; preds = %4442
  switch i64 %4393, label %4488 [
    i64 64262, label %4445
    i64 64261, label %4445
    i64 64260, label %4445
    i64 64259, label %4445
    i64 64258, label %4445
    i64 64257, label %4445
    i64 64256, label %4445
    i64 8491, label %4445
  ]

4445:                                             ; preds = %4444, %4444, %4444, %4444, %4444, %4444, %4444, %4444, %4440, %4436, %4431, %4427, %4423, %4419, %4415, %4411, %4407, %4403, %4397
  %4446 = icmp eq i8 %4321, 0
  br i1 %4446, label %4482, label %4447

4447:                                             ; preds = %4445, %4473
  %4448 = phi ptr [ %4475, %4473 ], [ %4320, %4445 ]
  %4449 = phi i32 [ %4476, %4473 ], [ 0, %4445 ]
  %4450 = phi ptr [ %4474, %4473 ], [ %12, %4445 ]
  %4451 = load i8, ptr %4448, align 1, !tbaa !17
  %4452 = icmp sgt i8 %4451, -1
  br i1 %4452, label %4453, label %4463

4453:                                             ; preds = %4447
  %4454 = zext i8 %4451 to i64
  %4455 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %4454
  %4456 = load i32, ptr %4455, align 4, !tbaa !73
  %4457 = and i32 %4456, 16400
  %4458 = icmp eq i32 %4457, 16400
  %4459 = add nuw i8 %4451, 32
  %4460 = select i1 %4458, i8 %4459, i8 %4451
  %4461 = getelementptr inbounds i8, ptr %4450, i64 1
  store i8 %4460, ptr %4450, align 1, !tbaa !17
  %4462 = getelementptr inbounds i8, ptr %4448, i64 1
  br label %4473

4463:                                             ; preds = %4447
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #15
  %4464 = call i64 @Perl__to_utf8_fold_flags(ptr noundef nonnull %4448, ptr noundef %4450, ptr noundef nonnull %13, i8 noundef zeroext 2) #15
  %4465 = load i64, ptr %13, align 8, !tbaa !9
  %4466 = getelementptr inbounds i8, ptr %4450, i64 %4465
  %4467 = load i8, ptr %4448, align 1, !tbaa !17
  %4468 = zext i8 %4467 to i64
  %4469 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %4468
  %4470 = load i8, ptr %4469, align 1, !tbaa !17
  %4471 = zext i8 %4470 to i64
  %4472 = getelementptr inbounds i8, ptr %4448, i64 %4471
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #15
  br label %4473

4473:                                             ; preds = %4463, %4453
  %4474 = phi ptr [ %4461, %4453 ], [ %4466, %4463 ]
  %4475 = phi ptr [ %4462, %4453 ], [ %4472, %4463 ]
  %4476 = add nuw nsw i32 %4449, 1
  %4477 = icmp ult i32 %4449, 2
  %4478 = icmp ult ptr %4475, %4390
  %4479 = select i1 %4477, i1 %4478, i1 false
  br i1 %4479, label %4447, label %4480, !llvm.loop !285

4480:                                             ; preds = %4473
  %4481 = load i8, ptr %12, align 16, !tbaa !17
  br label %4482

4482:                                             ; preds = %4480, %4445
  %4483 = phi i8 [ 0, %4445 ], [ %4481, %4480 ]
  %4484 = phi ptr [ %12, %4445 ], [ %4474, %4480 ]
  %4485 = zext i8 %4483 to i64
  %4486 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %4485
  %4487 = load i8, ptr %4486, align 1, !tbaa !17
  br label %4488

4488:                                             ; preds = %4482, %4444, %4442, %4438, %4434, %4429, %4425, %4421, %4417, %4413, %4409, %4405, %4401, %4384
  %4489 = phi ptr [ %4484, %4482 ], [ %4390, %4442 ], [ %4390, %4438 ], [ %4390, %4434 ], [ %4390, %4429 ], [ %4390, %4425 ], [ %4390, %4421 ], [ %4390, %4417 ], [ %4390, %4413 ], [ %4390, %4409 ], [ %4390, %4405 ], [ %4390, %4401 ], [ %4390, %4384 ], [ %4390, %4444 ]
  %4490 = phi i8 [ %4487, %4482 ], [ %4389, %4442 ], [ %4389, %4438 ], [ %4389, %4434 ], [ %4389, %4429 ], [ %4389, %4425 ], [ %4389, %4421 ], [ %4389, %4417 ], [ %4389, %4413 ], [ %4389, %4409 ], [ %4389, %4405 ], [ %4389, %4401 ], [ %4389, %4384 ], [ %4389, %4444 ]
  %4491 = phi ptr [ %12, %4482 ], [ %4320, %4442 ], [ %4320, %4438 ], [ %4320, %4434 ], [ %4320, %4429 ], [ %4320, %4425 ], [ %4320, %4421 ], [ %4320, %4417 ], [ %4320, %4413 ], [ %4320, %4409 ], [ %4320, %4405 ], [ %4320, %4401 ], [ %4320, %4384 ], [ %4320, %4444 ]
  %4492 = ptrtoint ptr %4489 to i64
  %4493 = ptrtoint ptr %4491 to i64
  %4494 = sub i64 %4492, %4493
  %4495 = icmp sgt i64 %4494, 5
  br i1 %4495, label %4496, label %4735

4496:                                             ; preds = %4488
  %4497 = load i8, ptr %4491, align 1, !tbaa !17
  switch i8 %4497, label %5213 [
    i8 97, label %4498
    i8 102, label %4506
    i8 104, label %4509
    i8 105, label %4517
    i8 106, label %4525
    i8 115, label %4533
    i8 116, label %4538
    i8 119, label %4546
    i8 121, label %4546
    i8 -59, label %4554
    i8 -54, label %4566
    i8 -50, label %4574
    i8 -49, label %4622
    i8 -43, label %4674
    i8 -31, label %4700
  ]

4498:                                             ; preds = %4496
  %4499 = getelementptr inbounds i8, ptr %4491, i64 1
  %4500 = load i8, ptr %4499, align 1, !tbaa !17
  %4501 = icmp eq i8 %4500, -54
  br i1 %4501, label %4502, label %5213

4502:                                             ; preds = %4498
  %4503 = getelementptr inbounds i8, ptr %4491, i64 2
  %4504 = load i8, ptr %4503, align 1, !tbaa !17
  %4505 = icmp eq i8 %4504, -66
  br i1 %4505, label %5210, label %5213

4506:                                             ; preds = %4496
  %4507 = getelementptr inbounds i8, ptr %4491, i64 1
  %4508 = load i8, ptr %4507, align 1, !tbaa !17
  switch i8 %4508, label %5213 [
    i8 102, label %5210
    i8 105, label %5210
    i8 108, label %5210
  ]

4509:                                             ; preds = %4496
  %4510 = getelementptr inbounds i8, ptr %4491, i64 1
  %4511 = load i8, ptr %4510, align 1, !tbaa !17
  %4512 = icmp eq i8 %4511, -52
  br i1 %4512, label %4513, label %5213

4513:                                             ; preds = %4509
  %4514 = getelementptr inbounds i8, ptr %4491, i64 2
  %4515 = load i8, ptr %4514, align 1, !tbaa !17
  %4516 = icmp eq i8 %4515, -79
  br i1 %4516, label %5210, label %5213

4517:                                             ; preds = %4496
  %4518 = getelementptr inbounds i8, ptr %4491, i64 1
  %4519 = load i8, ptr %4518, align 1, !tbaa !17
  %4520 = icmp eq i8 %4519, -52
  br i1 %4520, label %4521, label %5213

4521:                                             ; preds = %4517
  %4522 = getelementptr inbounds i8, ptr %4491, i64 2
  %4523 = load i8, ptr %4522, align 1, !tbaa !17
  %4524 = icmp eq i8 %4523, -121
  br i1 %4524, label %5210, label %5213

4525:                                             ; preds = %4496
  %4526 = getelementptr inbounds i8, ptr %4491, i64 1
  %4527 = load i8, ptr %4526, align 1, !tbaa !17
  %4528 = icmp eq i8 %4527, -52
  br i1 %4528, label %4529, label %5213

4529:                                             ; preds = %4525
  %4530 = getelementptr inbounds i8, ptr %4491, i64 2
  %4531 = load i8, ptr %4530, align 1, !tbaa !17
  %4532 = icmp eq i8 %4531, -116
  br i1 %4532, label %5210, label %5213

4533:                                             ; preds = %4496
  %4534 = getelementptr inbounds i8, ptr %4491, i64 1
  %4535 = load i8, ptr %4534, align 1, !tbaa !17
  %4536 = add i8 %4535, -115
  %4537 = icmp ult i8 %4536, 2
  br i1 %4537, label %5210, label %5213

4538:                                             ; preds = %4496
  %4539 = getelementptr inbounds i8, ptr %4491, i64 1
  %4540 = load i8, ptr %4539, align 1, !tbaa !17
  %4541 = icmp eq i8 %4540, -52
  br i1 %4541, label %4542, label %5213

4542:                                             ; preds = %4538
  %4543 = getelementptr inbounds i8, ptr %4491, i64 2
  %4544 = load i8, ptr %4543, align 1, !tbaa !17
  %4545 = icmp eq i8 %4544, -120
  br i1 %4545, label %5210, label %5213

4546:                                             ; preds = %4496, %4496
  %4547 = getelementptr inbounds i8, ptr %4491, i64 1
  %4548 = load i8, ptr %4547, align 1, !tbaa !17
  %4549 = icmp eq i8 %4548, -52
  br i1 %4549, label %4550, label %5213

4550:                                             ; preds = %4546
  %4551 = getelementptr inbounds i8, ptr %4491, i64 2
  %4552 = load i8, ptr %4551, align 1, !tbaa !17
  %4553 = icmp eq i8 %4552, -118
  br i1 %4553, label %5210, label %5213

4554:                                             ; preds = %4496
  %4555 = getelementptr inbounds i8, ptr %4491, i64 1
  %4556 = load i8, ptr %4555, align 1, !tbaa !17
  %4557 = icmp eq i8 %4556, -65
  br i1 %4557, label %4558, label %5213

4558:                                             ; preds = %4554
  %4559 = getelementptr inbounds i8, ptr %4491, i64 2
  %4560 = load i8, ptr %4559, align 1, !tbaa !17
  %4561 = icmp eq i8 %4560, -59
  br i1 %4561, label %4562, label %5213

4562:                                             ; preds = %4558
  %4563 = getelementptr inbounds i8, ptr %4491, i64 3
  %4564 = load i8, ptr %4563, align 1, !tbaa !17
  %4565 = icmp eq i8 %4564, -65
  br i1 %4565, label %5210, label %5213

4566:                                             ; preds = %4496
  %4567 = getelementptr inbounds i8, ptr %4491, i64 1
  %4568 = load i8, ptr %4567, align 1, !tbaa !17
  %4569 = icmp eq i8 %4568, -68
  br i1 %4569, label %4570, label %5213

4570:                                             ; preds = %4566
  %4571 = getelementptr inbounds i8, ptr %4491, i64 2
  %4572 = load i8, ptr %4571, align 1, !tbaa !17
  %4573 = icmp eq i8 %4572, 110
  br i1 %4573, label %5210, label %5213

4574:                                             ; preds = %4496
  %4575 = getelementptr inbounds i8, ptr %4491, i64 1
  %4576 = load i8, ptr %4575, align 1, !tbaa !17
  %4577 = and i8 %4576, -3
  %4578 = icmp eq i8 %4577, -84
  br i1 %4578, label %4579, label %4587

4579:                                             ; preds = %4574
  %4580 = getelementptr inbounds i8, ptr %4491, i64 2
  %4581 = load i8, ptr %4580, align 1, !tbaa !17
  %4582 = icmp eq i8 %4581, -50
  br i1 %4582, label %4583, label %5213

4583:                                             ; preds = %4579
  %4584 = getelementptr inbounds i8, ptr %4491, i64 3
  %4585 = load i8, ptr %4584, align 1, !tbaa !17
  %4586 = icmp eq i8 %4585, -71
  br i1 %4586, label %5210, label %5213

4587:                                             ; preds = %4574
  switch i8 %4576, label %5213 [
    i8 -79, label %4588
    i8 -73, label %4588
    i8 -71, label %4599
  ]

4588:                                             ; preds = %4587, %4587
  %4589 = getelementptr inbounds i8, ptr %4491, i64 2
  %4590 = load i8, ptr %4589, align 1, !tbaa !17
  switch i8 %4590, label %5213 [
    i8 -51, label %4591
    i8 -50, label %4595
  ]

4591:                                             ; preds = %4588
  %4592 = getelementptr inbounds i8, ptr %4491, i64 3
  %4593 = load i8, ptr %4592, align 1, !tbaa !17
  %4594 = icmp eq i8 %4593, -126
  br i1 %4594, label %5210, label %5213

4595:                                             ; preds = %4588
  %4596 = getelementptr inbounds i8, ptr %4491, i64 3
  %4597 = load i8, ptr %4596, align 1, !tbaa !17
  %4598 = icmp eq i8 %4597, -71
  br i1 %4598, label %5210, label %5213

4599:                                             ; preds = %4587
  %4600 = getelementptr inbounds i8, ptr %4491, i64 2
  %4601 = load i8, ptr %4600, align 1, !tbaa !17
  switch i8 %4601, label %5213 [
    i8 -52, label %4602
    i8 -51, label %4618
  ]

4602:                                             ; preds = %4599
  %4603 = getelementptr inbounds i8, ptr %4491, i64 3
  %4604 = load i8, ptr %4603, align 1, !tbaa !17
  %4605 = icmp eq i8 %4604, -120
  br i1 %4605, label %4606, label %5213

4606:                                             ; preds = %4602
  %4607 = getelementptr inbounds i8, ptr %4491, i64 4
  %4608 = load i8, ptr %4607, align 1, !tbaa !17
  switch i8 %4608, label %5213 [
    i8 -52, label %4609
    i8 -51, label %4614
  ]

4609:                                             ; preds = %4606
  %4610 = getelementptr inbounds i8, ptr %4491, i64 5
  %4611 = load i8, ptr %4610, align 1, !tbaa !17
  %4612 = and i8 %4611, -2
  %4613 = icmp eq i8 %4612, -128
  br i1 %4613, label %5210, label %5213

4614:                                             ; preds = %4606
  %4615 = getelementptr inbounds i8, ptr %4491, i64 5
  %4616 = load i8, ptr %4615, align 1, !tbaa !17
  %4617 = icmp eq i8 %4616, -126
  br i1 %4617, label %5210, label %5213

4618:                                             ; preds = %4599
  %4619 = getelementptr inbounds i8, ptr %4491, i64 3
  %4620 = load i8, ptr %4619, align 1, !tbaa !17
  %4621 = icmp eq i8 %4620, -126
  br i1 %4621, label %5210, label %5213

4622:                                             ; preds = %4496
  %4623 = getelementptr inbounds i8, ptr %4491, i64 1
  %4624 = load i8, ptr %4623, align 1, !tbaa !17
  switch i8 %4624, label %5213 [
    i8 -127, label %4625
    i8 -123, label %4633
    i8 -119, label %4655
    i8 -114, label %4666
  ]

4625:                                             ; preds = %4622
  %4626 = getelementptr inbounds i8, ptr %4491, i64 2
  %4627 = load i8, ptr %4626, align 1, !tbaa !17
  %4628 = icmp eq i8 %4627, -52
  br i1 %4628, label %4629, label %5213

4629:                                             ; preds = %4625
  %4630 = getelementptr inbounds i8, ptr %4491, i64 3
  %4631 = load i8, ptr %4630, align 1, !tbaa !17
  %4632 = icmp eq i8 %4631, -109
  br i1 %4632, label %5210, label %5213

4633:                                             ; preds = %4622
  %4634 = getelementptr inbounds i8, ptr %4491, i64 2
  %4635 = load i8, ptr %4634, align 1, !tbaa !17
  switch i8 %4635, label %5213 [
    i8 -52, label %4636
    i8 -51, label %4651
  ]

4636:                                             ; preds = %4633
  %4637 = getelementptr inbounds i8, ptr %4491, i64 3
  %4638 = load i8, ptr %4637, align 1, !tbaa !17
  switch i8 %4638, label %5213 [
    i8 -120, label %4639
    i8 -109, label %5210
  ]

4639:                                             ; preds = %4636
  %4640 = getelementptr inbounds i8, ptr %4491, i64 4
  %4641 = load i8, ptr %4640, align 1, !tbaa !17
  switch i8 %4641, label %5213 [
    i8 -52, label %4642
    i8 -51, label %4647
  ]

4642:                                             ; preds = %4639
  %4643 = getelementptr inbounds i8, ptr %4491, i64 5
  %4644 = load i8, ptr %4643, align 1, !tbaa !17
  %4645 = and i8 %4644, -2
  %4646 = icmp eq i8 %4645, -128
  br i1 %4646, label %5210, label %5213

4647:                                             ; preds = %4639
  %4648 = getelementptr inbounds i8, ptr %4491, i64 5
  %4649 = load i8, ptr %4648, align 1, !tbaa !17
  %4650 = icmp eq i8 %4649, -126
  br i1 %4650, label %5210, label %5213

4651:                                             ; preds = %4633
  %4652 = getelementptr inbounds i8, ptr %4491, i64 3
  %4653 = load i8, ptr %4652, align 1, !tbaa !17
  %4654 = icmp eq i8 %4653, -126
  br i1 %4654, label %5210, label %5213

4655:                                             ; preds = %4622
  %4656 = getelementptr inbounds i8, ptr %4491, i64 2
  %4657 = load i8, ptr %4656, align 1, !tbaa !17
  switch i8 %4657, label %5213 [
    i8 -51, label %4658
    i8 -50, label %4662
  ]

4658:                                             ; preds = %4655
  %4659 = getelementptr inbounds i8, ptr %4491, i64 3
  %4660 = load i8, ptr %4659, align 1, !tbaa !17
  %4661 = icmp eq i8 %4660, -126
  br i1 %4661, label %5210, label %5213

4662:                                             ; preds = %4655
  %4663 = getelementptr inbounds i8, ptr %4491, i64 3
  %4664 = load i8, ptr %4663, align 1, !tbaa !17
  %4665 = icmp eq i8 %4664, -71
  br i1 %4665, label %5210, label %5213

4666:                                             ; preds = %4622
  %4667 = getelementptr inbounds i8, ptr %4491, i64 2
  %4668 = load i8, ptr %4667, align 1, !tbaa !17
  %4669 = icmp eq i8 %4668, -50
  br i1 %4669, label %4670, label %5213

4670:                                             ; preds = %4666
  %4671 = getelementptr inbounds i8, ptr %4491, i64 3
  %4672 = load i8, ptr %4671, align 1, !tbaa !17
  %4673 = icmp eq i8 %4672, -71
  br i1 %4673, label %5210, label %5213

4674:                                             ; preds = %4496
  %4675 = getelementptr inbounds i8, ptr %4491, i64 1
  %4676 = load i8, ptr %4675, align 1, !tbaa !17
  switch i8 %4676, label %5213 [
    i8 -91, label %4677
    i8 -76, label %4685
    i8 -66, label %4692
  ]

4677:                                             ; preds = %4674
  %4678 = getelementptr inbounds i8, ptr %4491, i64 2
  %4679 = load i8, ptr %4678, align 1, !tbaa !17
  %4680 = icmp eq i8 %4679, -42
  br i1 %4680, label %4681, label %5213

4681:                                             ; preds = %4677
  %4682 = getelementptr inbounds i8, ptr %4491, i64 3
  %4683 = load i8, ptr %4682, align 1, !tbaa !17
  %4684 = icmp eq i8 %4683, -126
  br i1 %4684, label %5210, label %5213

4685:                                             ; preds = %4674
  %4686 = getelementptr inbounds i8, ptr %4491, i64 2
  %4687 = load i8, ptr %4686, align 1, !tbaa !17
  %4688 = icmp eq i8 %4687, -43
  br i1 %4688, label %4689, label %5213

4689:                                             ; preds = %4685
  %4690 = getelementptr inbounds i8, ptr %4491, i64 3
  %4691 = load i8, ptr %4690, align 1, !tbaa !17
  switch i8 %4691, label %5213 [
    i8 -74, label %5210
    i8 -83, label %5210
    i8 -85, label %5210
    i8 -91, label %5210
  ]

4692:                                             ; preds = %4674
  %4693 = getelementptr inbounds i8, ptr %4491, i64 2
  %4694 = load i8, ptr %4693, align 1, !tbaa !17
  %4695 = icmp eq i8 %4694, -43
  br i1 %4695, label %4696, label %5213

4696:                                             ; preds = %4692
  %4697 = getelementptr inbounds i8, ptr %4491, i64 3
  %4698 = load i8, ptr %4697, align 1, !tbaa !17
  %4699 = icmp eq i8 %4698, -74
  br i1 %4699, label %5210, label %5213

4700:                                             ; preds = %4496
  %4701 = getelementptr inbounds i8, ptr %4491, i64 1
  %4702 = load i8, ptr %4701, align 1, !tbaa !17
  switch i8 %4702, label %5213 [
    i8 -68, label %4703
    i8 -67, label %4716
  ]

4703:                                             ; preds = %4700
  %4704 = getelementptr inbounds i8, ptr %4491, i64 2
  %4705 = load i8, ptr %4704, align 1, !tbaa !17
  %4706 = and i8 %4705, -40
  %4707 = icmp eq i8 %4706, -128
  br i1 %4707, label %4708, label %5213

4708:                                             ; preds = %4703
  %4709 = getelementptr inbounds i8, ptr %4491, i64 3
  %4710 = load i8, ptr %4709, align 1, !tbaa !17
  %4711 = icmp eq i8 %4710, -50
  br i1 %4711, label %4712, label %5213

4712:                                             ; preds = %4708
  %4713 = getelementptr inbounds i8, ptr %4491, i64 4
  %4714 = load i8, ptr %4713, align 1, !tbaa !17
  %4715 = icmp eq i8 %4714, -71
  br i1 %4715, label %5210, label %5213

4716:                                             ; preds = %4700
  %4717 = getelementptr inbounds i8, ptr %4491, i64 2
  %4718 = load i8, ptr %4717, align 1, !tbaa !17
  %4719 = zext i8 %4718 to i32
  %4720 = and i32 %4719, 248
  %4721 = icmp eq i32 %4720, 160
  %4722 = and i32 %4719, 251
  %4723 = icmp eq i32 %4722, 176
  %4724 = or i1 %4721, %4723
  %4725 = icmp eq i8 %4718, -68
  %4726 = or i1 %4725, %4724
  br i1 %4726, label %4727, label %5213

4727:                                             ; preds = %4716
  %4728 = getelementptr inbounds i8, ptr %4491, i64 3
  %4729 = load i8, ptr %4728, align 1, !tbaa !17
  %4730 = icmp eq i8 %4729, -50
  br i1 %4730, label %4731, label %5213

4731:                                             ; preds = %4727
  %4732 = getelementptr inbounds i8, ptr %4491, i64 4
  %4733 = load i8, ptr %4732, align 1, !tbaa !17
  %4734 = icmp eq i8 %4733, -71
  br i1 %4734, label %5210, label %5213

4735:                                             ; preds = %4488
  %4736 = icmp eq i64 %4494, 5
  br i1 %4736, label %4737, label %4950

4737:                                             ; preds = %4735
  %4738 = load i8, ptr %4491, align 1, !tbaa !17
  switch i8 %4738, label %5213 [
    i8 97, label %4739
    i8 102, label %4747
    i8 104, label %4750
    i8 105, label %4758
    i8 106, label %4766
    i8 115, label %4774
    i8 116, label %4779
    i8 119, label %4787
    i8 121, label %4787
    i8 -59, label %4795
    i8 -54, label %4807
    i8 -50, label %4815
    i8 -49, label %4848
    i8 -43, label %4889
    i8 -31, label %4915
  ]

4739:                                             ; preds = %4737
  %4740 = getelementptr inbounds i8, ptr %4491, i64 1
  %4741 = load i8, ptr %4740, align 1, !tbaa !17
  %4742 = icmp eq i8 %4741, -54
  br i1 %4742, label %4743, label %5213

4743:                                             ; preds = %4739
  %4744 = getelementptr inbounds i8, ptr %4491, i64 2
  %4745 = load i8, ptr %4744, align 1, !tbaa !17
  %4746 = icmp eq i8 %4745, -66
  br i1 %4746, label %5210, label %5213

4747:                                             ; preds = %4737
  %4748 = getelementptr inbounds i8, ptr %4491, i64 1
  %4749 = load i8, ptr %4748, align 1, !tbaa !17
  switch i8 %4749, label %5213 [
    i8 102, label %5210
    i8 105, label %5210
    i8 108, label %5210
  ]

4750:                                             ; preds = %4737
  %4751 = getelementptr inbounds i8, ptr %4491, i64 1
  %4752 = load i8, ptr %4751, align 1, !tbaa !17
  %4753 = icmp eq i8 %4752, -52
  br i1 %4753, label %4754, label %5213

4754:                                             ; preds = %4750
  %4755 = getelementptr inbounds i8, ptr %4491, i64 2
  %4756 = load i8, ptr %4755, align 1, !tbaa !17
  %4757 = icmp eq i8 %4756, -79
  br i1 %4757, label %5210, label %5213

4758:                                             ; preds = %4737
  %4759 = getelementptr inbounds i8, ptr %4491, i64 1
  %4760 = load i8, ptr %4759, align 1, !tbaa !17
  %4761 = icmp eq i8 %4760, -52
  br i1 %4761, label %4762, label %5213

4762:                                             ; preds = %4758
  %4763 = getelementptr inbounds i8, ptr %4491, i64 2
  %4764 = load i8, ptr %4763, align 1, !tbaa !17
  %4765 = icmp eq i8 %4764, -121
  br i1 %4765, label %5210, label %5213

4766:                                             ; preds = %4737
  %4767 = getelementptr inbounds i8, ptr %4491, i64 1
  %4768 = load i8, ptr %4767, align 1, !tbaa !17
  %4769 = icmp eq i8 %4768, -52
  br i1 %4769, label %4770, label %5213

4770:                                             ; preds = %4766
  %4771 = getelementptr inbounds i8, ptr %4491, i64 2
  %4772 = load i8, ptr %4771, align 1, !tbaa !17
  %4773 = icmp eq i8 %4772, -116
  br i1 %4773, label %5210, label %5213

4774:                                             ; preds = %4737
  %4775 = getelementptr inbounds i8, ptr %4491, i64 1
  %4776 = load i8, ptr %4775, align 1, !tbaa !17
  %4777 = add i8 %4776, -115
  %4778 = icmp ult i8 %4777, 2
  br i1 %4778, label %5210, label %5213

4779:                                             ; preds = %4737
  %4780 = getelementptr inbounds i8, ptr %4491, i64 1
  %4781 = load i8, ptr %4780, align 1, !tbaa !17
  %4782 = icmp eq i8 %4781, -52
  br i1 %4782, label %4783, label %5213

4783:                                             ; preds = %4779
  %4784 = getelementptr inbounds i8, ptr %4491, i64 2
  %4785 = load i8, ptr %4784, align 1, !tbaa !17
  %4786 = icmp eq i8 %4785, -120
  br i1 %4786, label %5210, label %5213

4787:                                             ; preds = %4737, %4737
  %4788 = getelementptr inbounds i8, ptr %4491, i64 1
  %4789 = load i8, ptr %4788, align 1, !tbaa !17
  %4790 = icmp eq i8 %4789, -52
  br i1 %4790, label %4791, label %5213

4791:                                             ; preds = %4787
  %4792 = getelementptr inbounds i8, ptr %4491, i64 2
  %4793 = load i8, ptr %4792, align 1, !tbaa !17
  %4794 = icmp eq i8 %4793, -118
  br i1 %4794, label %5210, label %5213

4795:                                             ; preds = %4737
  %4796 = getelementptr inbounds i8, ptr %4491, i64 1
  %4797 = load i8, ptr %4796, align 1, !tbaa !17
  %4798 = icmp eq i8 %4797, -65
  br i1 %4798, label %4799, label %5213

4799:                                             ; preds = %4795
  %4800 = getelementptr inbounds i8, ptr %4491, i64 2
  %4801 = load i8, ptr %4800, align 1, !tbaa !17
  %4802 = icmp eq i8 %4801, -59
  br i1 %4802, label %4803, label %5213

4803:                                             ; preds = %4799
  %4804 = getelementptr inbounds i8, ptr %4491, i64 3
  %4805 = load i8, ptr %4804, align 1, !tbaa !17
  %4806 = icmp eq i8 %4805, -65
  br i1 %4806, label %5210, label %5213

4807:                                             ; preds = %4737
  %4808 = getelementptr inbounds i8, ptr %4491, i64 1
  %4809 = load i8, ptr %4808, align 1, !tbaa !17
  %4810 = icmp eq i8 %4809, -68
  br i1 %4810, label %4811, label %5213

4811:                                             ; preds = %4807
  %4812 = getelementptr inbounds i8, ptr %4491, i64 2
  %4813 = load i8, ptr %4812, align 1, !tbaa !17
  %4814 = icmp eq i8 %4813, 110
  br i1 %4814, label %5210, label %5213

4815:                                             ; preds = %4737
  %4816 = getelementptr inbounds i8, ptr %4491, i64 1
  %4817 = load i8, ptr %4816, align 1, !tbaa !17
  %4818 = and i8 %4817, -3
  %4819 = icmp eq i8 %4818, -84
  br i1 %4819, label %4820, label %4828

4820:                                             ; preds = %4815
  %4821 = getelementptr inbounds i8, ptr %4491, i64 2
  %4822 = load i8, ptr %4821, align 1, !tbaa !17
  %4823 = icmp eq i8 %4822, -50
  br i1 %4823, label %4824, label %5213

4824:                                             ; preds = %4820
  %4825 = getelementptr inbounds i8, ptr %4491, i64 3
  %4826 = load i8, ptr %4825, align 1, !tbaa !17
  %4827 = icmp eq i8 %4826, -71
  br i1 %4827, label %5210, label %5213

4828:                                             ; preds = %4815
  switch i8 %4817, label %5213 [
    i8 -79, label %4829
    i8 -73, label %4829
    i8 -71, label %4840
  ]

4829:                                             ; preds = %4828, %4828
  %4830 = getelementptr inbounds i8, ptr %4491, i64 2
  %4831 = load i8, ptr %4830, align 1, !tbaa !17
  switch i8 %4831, label %5213 [
    i8 -51, label %4832
    i8 -50, label %4836
  ]

4832:                                             ; preds = %4829
  %4833 = getelementptr inbounds i8, ptr %4491, i64 3
  %4834 = load i8, ptr %4833, align 1, !tbaa !17
  %4835 = icmp eq i8 %4834, -126
  br i1 %4835, label %5210, label %5213

4836:                                             ; preds = %4829
  %4837 = getelementptr inbounds i8, ptr %4491, i64 3
  %4838 = load i8, ptr %4837, align 1, !tbaa !17
  %4839 = icmp eq i8 %4838, -71
  br i1 %4839, label %5210, label %5213

4840:                                             ; preds = %4828
  %4841 = getelementptr inbounds i8, ptr %4491, i64 2
  %4842 = load i8, ptr %4841, align 1, !tbaa !17
  %4843 = icmp eq i8 %4842, -51
  br i1 %4843, label %4844, label %5213

4844:                                             ; preds = %4840
  %4845 = getelementptr inbounds i8, ptr %4491, i64 3
  %4846 = load i8, ptr %4845, align 1, !tbaa !17
  %4847 = icmp eq i8 %4846, -126
  br i1 %4847, label %5210, label %5213

4848:                                             ; preds = %4737
  %4849 = getelementptr inbounds i8, ptr %4491, i64 1
  %4850 = load i8, ptr %4849, align 1, !tbaa !17
  switch i8 %4850, label %5213 [
    i8 -127, label %4851
    i8 -123, label %4859
    i8 -119, label %4870
    i8 -114, label %4881
  ]

4851:                                             ; preds = %4848
  %4852 = getelementptr inbounds i8, ptr %4491, i64 2
  %4853 = load i8, ptr %4852, align 1, !tbaa !17
  %4854 = icmp eq i8 %4853, -52
  br i1 %4854, label %4855, label %5213

4855:                                             ; preds = %4851
  %4856 = getelementptr inbounds i8, ptr %4491, i64 3
  %4857 = load i8, ptr %4856, align 1, !tbaa !17
  %4858 = icmp eq i8 %4857, -109
  br i1 %4858, label %5210, label %5213

4859:                                             ; preds = %4848
  %4860 = getelementptr inbounds i8, ptr %4491, i64 2
  %4861 = load i8, ptr %4860, align 1, !tbaa !17
  switch i8 %4861, label %5213 [
    i8 -52, label %4862
    i8 -51, label %4866
  ]

4862:                                             ; preds = %4859
  %4863 = getelementptr inbounds i8, ptr %4491, i64 3
  %4864 = load i8, ptr %4863, align 1, !tbaa !17
  %4865 = icmp eq i8 %4864, -109
  br i1 %4865, label %5210, label %5213

4866:                                             ; preds = %4859
  %4867 = getelementptr inbounds i8, ptr %4491, i64 3
  %4868 = load i8, ptr %4867, align 1, !tbaa !17
  %4869 = icmp eq i8 %4868, -126
  br i1 %4869, label %5210, label %5213

4870:                                             ; preds = %4848
  %4871 = getelementptr inbounds i8, ptr %4491, i64 2
  %4872 = load i8, ptr %4871, align 1, !tbaa !17
  switch i8 %4872, label %5213 [
    i8 -51, label %4873
    i8 -50, label %4877
  ]

4873:                                             ; preds = %4870
  %4874 = getelementptr inbounds i8, ptr %4491, i64 3
  %4875 = load i8, ptr %4874, align 1, !tbaa !17
  %4876 = icmp eq i8 %4875, -126
  br i1 %4876, label %5210, label %5213

4877:                                             ; preds = %4870
  %4878 = getelementptr inbounds i8, ptr %4491, i64 3
  %4879 = load i8, ptr %4878, align 1, !tbaa !17
  %4880 = icmp eq i8 %4879, -71
  br i1 %4880, label %5210, label %5213

4881:                                             ; preds = %4848
  %4882 = getelementptr inbounds i8, ptr %4491, i64 2
  %4883 = load i8, ptr %4882, align 1, !tbaa !17
  %4884 = icmp eq i8 %4883, -50
  br i1 %4884, label %4885, label %5213

4885:                                             ; preds = %4881
  %4886 = getelementptr inbounds i8, ptr %4491, i64 3
  %4887 = load i8, ptr %4886, align 1, !tbaa !17
  %4888 = icmp eq i8 %4887, -71
  br i1 %4888, label %5210, label %5213

4889:                                             ; preds = %4737
  %4890 = getelementptr inbounds i8, ptr %4491, i64 1
  %4891 = load i8, ptr %4890, align 1, !tbaa !17
  switch i8 %4891, label %5213 [
    i8 -91, label %4892
    i8 -76, label %4900
    i8 -66, label %4907
  ]

4892:                                             ; preds = %4889
  %4893 = getelementptr inbounds i8, ptr %4491, i64 2
  %4894 = load i8, ptr %4893, align 1, !tbaa !17
  %4895 = icmp eq i8 %4894, -42
  br i1 %4895, label %4896, label %5213

4896:                                             ; preds = %4892
  %4897 = getelementptr inbounds i8, ptr %4491, i64 3
  %4898 = load i8, ptr %4897, align 1, !tbaa !17
  %4899 = icmp eq i8 %4898, -126
  br i1 %4899, label %5210, label %5213

4900:                                             ; preds = %4889
  %4901 = getelementptr inbounds i8, ptr %4491, i64 2
  %4902 = load i8, ptr %4901, align 1, !tbaa !17
  %4903 = icmp eq i8 %4902, -43
  br i1 %4903, label %4904, label %5213

4904:                                             ; preds = %4900
  %4905 = getelementptr inbounds i8, ptr %4491, i64 3
  %4906 = load i8, ptr %4905, align 1, !tbaa !17
  switch i8 %4906, label %5213 [
    i8 -74, label %5210
    i8 -83, label %5210
    i8 -85, label %5210
    i8 -91, label %5210
  ]

4907:                                             ; preds = %4889
  %4908 = getelementptr inbounds i8, ptr %4491, i64 2
  %4909 = load i8, ptr %4908, align 1, !tbaa !17
  %4910 = icmp eq i8 %4909, -43
  br i1 %4910, label %4911, label %5213

4911:                                             ; preds = %4907
  %4912 = getelementptr inbounds i8, ptr %4491, i64 3
  %4913 = load i8, ptr %4912, align 1, !tbaa !17
  %4914 = icmp eq i8 %4913, -74
  br i1 %4914, label %5210, label %5213

4915:                                             ; preds = %4737
  %4916 = getelementptr inbounds i8, ptr %4491, i64 1
  %4917 = load i8, ptr %4916, align 1, !tbaa !17
  switch i8 %4917, label %5213 [
    i8 -68, label %4918
    i8 -67, label %4931
  ]

4918:                                             ; preds = %4915
  %4919 = getelementptr inbounds i8, ptr %4491, i64 2
  %4920 = load i8, ptr %4919, align 1, !tbaa !17
  %4921 = and i8 %4920, -40
  %4922 = icmp eq i8 %4921, -128
  br i1 %4922, label %4923, label %5213

4923:                                             ; preds = %4918
  %4924 = getelementptr inbounds i8, ptr %4491, i64 3
  %4925 = load i8, ptr %4924, align 1, !tbaa !17
  %4926 = icmp eq i8 %4925, -50
  br i1 %4926, label %4927, label %5213

4927:                                             ; preds = %4923
  %4928 = getelementptr inbounds i8, ptr %4491, i64 4
  %4929 = load i8, ptr %4928, align 1, !tbaa !17
  %4930 = icmp eq i8 %4929, -71
  br i1 %4930, label %5210, label %5213

4931:                                             ; preds = %4915
  %4932 = getelementptr inbounds i8, ptr %4491, i64 2
  %4933 = load i8, ptr %4932, align 1, !tbaa !17
  %4934 = zext i8 %4933 to i32
  %4935 = and i32 %4934, 248
  %4936 = icmp eq i32 %4935, 160
  %4937 = and i32 %4934, 251
  %4938 = icmp eq i32 %4937, 176
  %4939 = or i1 %4936, %4938
  %4940 = icmp eq i8 %4933, -68
  %4941 = or i1 %4940, %4939
  br i1 %4941, label %4942, label %5213

4942:                                             ; preds = %4931
  %4943 = getelementptr inbounds i8, ptr %4491, i64 3
  %4944 = load i8, ptr %4943, align 1, !tbaa !17
  %4945 = icmp eq i8 %4944, -50
  br i1 %4945, label %4946, label %5213

4946:                                             ; preds = %4942
  %4947 = getelementptr inbounds i8, ptr %4491, i64 4
  %4948 = load i8, ptr %4947, align 1, !tbaa !17
  %4949 = icmp eq i8 %4948, -71
  br i1 %4949, label %5210, label %5213

4950:                                             ; preds = %4735
  %4951 = icmp sgt i64 %4494, 3
  br i1 %4951, label %4952, label %5130

4952:                                             ; preds = %4950
  %4953 = load i8, ptr %4491, align 1, !tbaa !17
  switch i8 %4953, label %5213 [
    i8 97, label %4954
    i8 102, label %4962
    i8 104, label %4965
    i8 105, label %4973
    i8 106, label %4981
    i8 115, label %4989
    i8 116, label %4994
    i8 119, label %5002
    i8 121, label %5002
    i8 -59, label %5010
    i8 -54, label %5022
    i8 -50, label %5030
    i8 -49, label %5063
    i8 -43, label %5104
  ]

4954:                                             ; preds = %4952
  %4955 = getelementptr inbounds i8, ptr %4491, i64 1
  %4956 = load i8, ptr %4955, align 1, !tbaa !17
  %4957 = icmp eq i8 %4956, -54
  br i1 %4957, label %4958, label %5213

4958:                                             ; preds = %4954
  %4959 = getelementptr inbounds i8, ptr %4491, i64 2
  %4960 = load i8, ptr %4959, align 1, !tbaa !17
  %4961 = icmp eq i8 %4960, -66
  br i1 %4961, label %5210, label %5213

4962:                                             ; preds = %4952
  %4963 = getelementptr inbounds i8, ptr %4491, i64 1
  %4964 = load i8, ptr %4963, align 1, !tbaa !17
  switch i8 %4964, label %5213 [
    i8 102, label %5210
    i8 105, label %5210
    i8 108, label %5210
  ]

4965:                                             ; preds = %4952
  %4966 = getelementptr inbounds i8, ptr %4491, i64 1
  %4967 = load i8, ptr %4966, align 1, !tbaa !17
  %4968 = icmp eq i8 %4967, -52
  br i1 %4968, label %4969, label %5213

4969:                                             ; preds = %4965
  %4970 = getelementptr inbounds i8, ptr %4491, i64 2
  %4971 = load i8, ptr %4970, align 1, !tbaa !17
  %4972 = icmp eq i8 %4971, -79
  br i1 %4972, label %5210, label %5213

4973:                                             ; preds = %4952
  %4974 = getelementptr inbounds i8, ptr %4491, i64 1
  %4975 = load i8, ptr %4974, align 1, !tbaa !17
  %4976 = icmp eq i8 %4975, -52
  br i1 %4976, label %4977, label %5213

4977:                                             ; preds = %4973
  %4978 = getelementptr inbounds i8, ptr %4491, i64 2
  %4979 = load i8, ptr %4978, align 1, !tbaa !17
  %4980 = icmp eq i8 %4979, -121
  br i1 %4980, label %5210, label %5213

4981:                                             ; preds = %4952
  %4982 = getelementptr inbounds i8, ptr %4491, i64 1
  %4983 = load i8, ptr %4982, align 1, !tbaa !17
  %4984 = icmp eq i8 %4983, -52
  br i1 %4984, label %4985, label %5213

4985:                                             ; preds = %4981
  %4986 = getelementptr inbounds i8, ptr %4491, i64 2
  %4987 = load i8, ptr %4986, align 1, !tbaa !17
  %4988 = icmp eq i8 %4987, -116
  br i1 %4988, label %5210, label %5213

4989:                                             ; preds = %4952
  %4990 = getelementptr inbounds i8, ptr %4491, i64 1
  %4991 = load i8, ptr %4990, align 1, !tbaa !17
  %4992 = add i8 %4991, -115
  %4993 = icmp ult i8 %4992, 2
  br i1 %4993, label %5210, label %5213

4994:                                             ; preds = %4952
  %4995 = getelementptr inbounds i8, ptr %4491, i64 1
  %4996 = load i8, ptr %4995, align 1, !tbaa !17
  %4997 = icmp eq i8 %4996, -52
  br i1 %4997, label %4998, label %5213

4998:                                             ; preds = %4994
  %4999 = getelementptr inbounds i8, ptr %4491, i64 2
  %5000 = load i8, ptr %4999, align 1, !tbaa !17
  %5001 = icmp eq i8 %5000, -120
  br i1 %5001, label %5210, label %5213

5002:                                             ; preds = %4952, %4952
  %5003 = getelementptr inbounds i8, ptr %4491, i64 1
  %5004 = load i8, ptr %5003, align 1, !tbaa !17
  %5005 = icmp eq i8 %5004, -52
  br i1 %5005, label %5006, label %5213

5006:                                             ; preds = %5002
  %5007 = getelementptr inbounds i8, ptr %4491, i64 2
  %5008 = load i8, ptr %5007, align 1, !tbaa !17
  %5009 = icmp eq i8 %5008, -118
  br i1 %5009, label %5210, label %5213

5010:                                             ; preds = %4952
  %5011 = getelementptr inbounds i8, ptr %4491, i64 1
  %5012 = load i8, ptr %5011, align 1, !tbaa !17
  %5013 = icmp eq i8 %5012, -65
  br i1 %5013, label %5014, label %5213

5014:                                             ; preds = %5010
  %5015 = getelementptr inbounds i8, ptr %4491, i64 2
  %5016 = load i8, ptr %5015, align 1, !tbaa !17
  %5017 = icmp eq i8 %5016, -59
  br i1 %5017, label %5018, label %5213

5018:                                             ; preds = %5014
  %5019 = getelementptr inbounds i8, ptr %4491, i64 3
  %5020 = load i8, ptr %5019, align 1, !tbaa !17
  %5021 = icmp eq i8 %5020, -65
  br i1 %5021, label %5210, label %5213

5022:                                             ; preds = %4952
  %5023 = getelementptr inbounds i8, ptr %4491, i64 1
  %5024 = load i8, ptr %5023, align 1, !tbaa !17
  %5025 = icmp eq i8 %5024, -68
  br i1 %5025, label %5026, label %5213

5026:                                             ; preds = %5022
  %5027 = getelementptr inbounds i8, ptr %4491, i64 2
  %5028 = load i8, ptr %5027, align 1, !tbaa !17
  %5029 = icmp eq i8 %5028, 110
  br i1 %5029, label %5210, label %5213

5030:                                             ; preds = %4952
  %5031 = getelementptr inbounds i8, ptr %4491, i64 1
  %5032 = load i8, ptr %5031, align 1, !tbaa !17
  %5033 = and i8 %5032, -3
  %5034 = icmp eq i8 %5033, -84
  br i1 %5034, label %5035, label %5043

5035:                                             ; preds = %5030
  %5036 = getelementptr inbounds i8, ptr %4491, i64 2
  %5037 = load i8, ptr %5036, align 1, !tbaa !17
  %5038 = icmp eq i8 %5037, -50
  br i1 %5038, label %5039, label %5213

5039:                                             ; preds = %5035
  %5040 = getelementptr inbounds i8, ptr %4491, i64 3
  %5041 = load i8, ptr %5040, align 1, !tbaa !17
  %5042 = icmp eq i8 %5041, -71
  br i1 %5042, label %5210, label %5213

5043:                                             ; preds = %5030
  switch i8 %5032, label %5213 [
    i8 -79, label %5044
    i8 -73, label %5044
    i8 -71, label %5055
  ]

5044:                                             ; preds = %5043, %5043
  %5045 = getelementptr inbounds i8, ptr %4491, i64 2
  %5046 = load i8, ptr %5045, align 1, !tbaa !17
  switch i8 %5046, label %5213 [
    i8 -51, label %5047
    i8 -50, label %5051
  ]

5047:                                             ; preds = %5044
  %5048 = getelementptr inbounds i8, ptr %4491, i64 3
  %5049 = load i8, ptr %5048, align 1, !tbaa !17
  %5050 = icmp eq i8 %5049, -126
  br i1 %5050, label %5210, label %5213

5051:                                             ; preds = %5044
  %5052 = getelementptr inbounds i8, ptr %4491, i64 3
  %5053 = load i8, ptr %5052, align 1, !tbaa !17
  %5054 = icmp eq i8 %5053, -71
  br i1 %5054, label %5210, label %5213

5055:                                             ; preds = %5043
  %5056 = getelementptr inbounds i8, ptr %4491, i64 2
  %5057 = load i8, ptr %5056, align 1, !tbaa !17
  %5058 = icmp eq i8 %5057, -51
  br i1 %5058, label %5059, label %5213

5059:                                             ; preds = %5055
  %5060 = getelementptr inbounds i8, ptr %4491, i64 3
  %5061 = load i8, ptr %5060, align 1, !tbaa !17
  %5062 = icmp eq i8 %5061, -126
  br i1 %5062, label %5210, label %5213

5063:                                             ; preds = %4952
  %5064 = getelementptr inbounds i8, ptr %4491, i64 1
  %5065 = load i8, ptr %5064, align 1, !tbaa !17
  switch i8 %5065, label %5213 [
    i8 -127, label %5066
    i8 -123, label %5074
    i8 -119, label %5085
    i8 -114, label %5096
  ]

5066:                                             ; preds = %5063
  %5067 = getelementptr inbounds i8, ptr %4491, i64 2
  %5068 = load i8, ptr %5067, align 1, !tbaa !17
  %5069 = icmp eq i8 %5068, -52
  br i1 %5069, label %5070, label %5213

5070:                                             ; preds = %5066
  %5071 = getelementptr inbounds i8, ptr %4491, i64 3
  %5072 = load i8, ptr %5071, align 1, !tbaa !17
  %5073 = icmp eq i8 %5072, -109
  br i1 %5073, label %5210, label %5213

5074:                                             ; preds = %5063
  %5075 = getelementptr inbounds i8, ptr %4491, i64 2
  %5076 = load i8, ptr %5075, align 1, !tbaa !17
  switch i8 %5076, label %5213 [
    i8 -52, label %5077
    i8 -51, label %5081
  ]

5077:                                             ; preds = %5074
  %5078 = getelementptr inbounds i8, ptr %4491, i64 3
  %5079 = load i8, ptr %5078, align 1, !tbaa !17
  %5080 = icmp eq i8 %5079, -109
  br i1 %5080, label %5210, label %5213

5081:                                             ; preds = %5074
  %5082 = getelementptr inbounds i8, ptr %4491, i64 3
  %5083 = load i8, ptr %5082, align 1, !tbaa !17
  %5084 = icmp eq i8 %5083, -126
  br i1 %5084, label %5210, label %5213

5085:                                             ; preds = %5063
  %5086 = getelementptr inbounds i8, ptr %4491, i64 2
  %5087 = load i8, ptr %5086, align 1, !tbaa !17
  switch i8 %5087, label %5213 [
    i8 -51, label %5088
    i8 -50, label %5092
  ]

5088:                                             ; preds = %5085
  %5089 = getelementptr inbounds i8, ptr %4491, i64 3
  %5090 = load i8, ptr %5089, align 1, !tbaa !17
  %5091 = icmp eq i8 %5090, -126
  br i1 %5091, label %5210, label %5213

5092:                                             ; preds = %5085
  %5093 = getelementptr inbounds i8, ptr %4491, i64 3
  %5094 = load i8, ptr %5093, align 1, !tbaa !17
  %5095 = icmp eq i8 %5094, -71
  br i1 %5095, label %5210, label %5213

5096:                                             ; preds = %5063
  %5097 = getelementptr inbounds i8, ptr %4491, i64 2
  %5098 = load i8, ptr %5097, align 1, !tbaa !17
  %5099 = icmp eq i8 %5098, -50
  br i1 %5099, label %5100, label %5213

5100:                                             ; preds = %5096
  %5101 = getelementptr inbounds i8, ptr %4491, i64 3
  %5102 = load i8, ptr %5101, align 1, !tbaa !17
  %5103 = icmp eq i8 %5102, -71
  br i1 %5103, label %5210, label %5213

5104:                                             ; preds = %4952
  %5105 = getelementptr inbounds i8, ptr %4491, i64 1
  %5106 = load i8, ptr %5105, align 1, !tbaa !17
  switch i8 %5106, label %5213 [
    i8 -91, label %5107
    i8 -76, label %5115
    i8 -66, label %5122
  ]

5107:                                             ; preds = %5104
  %5108 = getelementptr inbounds i8, ptr %4491, i64 2
  %5109 = load i8, ptr %5108, align 1, !tbaa !17
  %5110 = icmp eq i8 %5109, -42
  br i1 %5110, label %5111, label %5213

5111:                                             ; preds = %5107
  %5112 = getelementptr inbounds i8, ptr %4491, i64 3
  %5113 = load i8, ptr %5112, align 1, !tbaa !17
  %5114 = icmp eq i8 %5113, -126
  br i1 %5114, label %5210, label %5213

5115:                                             ; preds = %5104
  %5116 = getelementptr inbounds i8, ptr %4491, i64 2
  %5117 = load i8, ptr %5116, align 1, !tbaa !17
  %5118 = icmp eq i8 %5117, -43
  br i1 %5118, label %5119, label %5213

5119:                                             ; preds = %5115
  %5120 = getelementptr inbounds i8, ptr %4491, i64 3
  %5121 = load i8, ptr %5120, align 1, !tbaa !17
  switch i8 %5121, label %5213 [
    i8 -74, label %5210
    i8 -83, label %5210
    i8 -85, label %5210
    i8 -91, label %5210
  ]

5122:                                             ; preds = %5104
  %5123 = getelementptr inbounds i8, ptr %4491, i64 2
  %5124 = load i8, ptr %5123, align 1, !tbaa !17
  %5125 = icmp eq i8 %5124, -43
  br i1 %5125, label %5126, label %5213

5126:                                             ; preds = %5122
  %5127 = getelementptr inbounds i8, ptr %4491, i64 3
  %5128 = load i8, ptr %5127, align 1, !tbaa !17
  %5129 = icmp eq i8 %5128, -74
  br i1 %5129, label %5210, label %5213

5130:                                             ; preds = %4950
  %5131 = icmp eq i64 %4494, 3
  br i1 %5131, label %5132, label %5198

5132:                                             ; preds = %5130
  %5133 = load i8, ptr %4491, align 1, !tbaa !17
  switch i8 %5133, label %5213 [
    i8 97, label %5134
    i8 102, label %5142
    i8 104, label %5145
    i8 105, label %5153
    i8 106, label %5161
    i8 115, label %5169
    i8 116, label %5174
    i8 119, label %5182
    i8 121, label %5182
    i8 -54, label %5190
  ]

5134:                                             ; preds = %5132
  %5135 = getelementptr inbounds i8, ptr %4491, i64 1
  %5136 = load i8, ptr %5135, align 1, !tbaa !17
  %5137 = icmp eq i8 %5136, -54
  br i1 %5137, label %5138, label %5213

5138:                                             ; preds = %5134
  %5139 = getelementptr inbounds i8, ptr %4491, i64 2
  %5140 = load i8, ptr %5139, align 1, !tbaa !17
  %5141 = icmp eq i8 %5140, -66
  br i1 %5141, label %5210, label %5213

5142:                                             ; preds = %5132
  %5143 = getelementptr inbounds i8, ptr %4491, i64 1
  %5144 = load i8, ptr %5143, align 1, !tbaa !17
  switch i8 %5144, label %5213 [
    i8 102, label %5210
    i8 105, label %5210
    i8 108, label %5210
  ]

5145:                                             ; preds = %5132
  %5146 = getelementptr inbounds i8, ptr %4491, i64 1
  %5147 = load i8, ptr %5146, align 1, !tbaa !17
  %5148 = icmp eq i8 %5147, -52
  br i1 %5148, label %5149, label %5213

5149:                                             ; preds = %5145
  %5150 = getelementptr inbounds i8, ptr %4491, i64 2
  %5151 = load i8, ptr %5150, align 1, !tbaa !17
  %5152 = icmp eq i8 %5151, -79
  br i1 %5152, label %5210, label %5213

5153:                                             ; preds = %5132
  %5154 = getelementptr inbounds i8, ptr %4491, i64 1
  %5155 = load i8, ptr %5154, align 1, !tbaa !17
  %5156 = icmp eq i8 %5155, -52
  br i1 %5156, label %5157, label %5213

5157:                                             ; preds = %5153
  %5158 = getelementptr inbounds i8, ptr %4491, i64 2
  %5159 = load i8, ptr %5158, align 1, !tbaa !17
  %5160 = icmp eq i8 %5159, -121
  br i1 %5160, label %5210, label %5213

5161:                                             ; preds = %5132
  %5162 = getelementptr inbounds i8, ptr %4491, i64 1
  %5163 = load i8, ptr %5162, align 1, !tbaa !17
  %5164 = icmp eq i8 %5163, -52
  br i1 %5164, label %5165, label %5213

5165:                                             ; preds = %5161
  %5166 = getelementptr inbounds i8, ptr %4491, i64 2
  %5167 = load i8, ptr %5166, align 1, !tbaa !17
  %5168 = icmp eq i8 %5167, -116
  br i1 %5168, label %5210, label %5213

5169:                                             ; preds = %5132
  %5170 = getelementptr inbounds i8, ptr %4491, i64 1
  %5171 = load i8, ptr %5170, align 1, !tbaa !17
  %5172 = add i8 %5171, -115
  %5173 = icmp ult i8 %5172, 2
  br i1 %5173, label %5210, label %5213

5174:                                             ; preds = %5132
  %5175 = getelementptr inbounds i8, ptr %4491, i64 1
  %5176 = load i8, ptr %5175, align 1, !tbaa !17
  %5177 = icmp eq i8 %5176, -52
  br i1 %5177, label %5178, label %5213

5178:                                             ; preds = %5174
  %5179 = getelementptr inbounds i8, ptr %4491, i64 2
  %5180 = load i8, ptr %5179, align 1, !tbaa !17
  %5181 = icmp eq i8 %5180, -120
  br i1 %5181, label %5210, label %5213

5182:                                             ; preds = %5132, %5132
  %5183 = getelementptr inbounds i8, ptr %4491, i64 1
  %5184 = load i8, ptr %5183, align 1, !tbaa !17
  %5185 = icmp eq i8 %5184, -52
  br i1 %5185, label %5186, label %5213

5186:                                             ; preds = %5182
  %5187 = getelementptr inbounds i8, ptr %4491, i64 2
  %5188 = load i8, ptr %5187, align 1, !tbaa !17
  %5189 = icmp eq i8 %5188, -118
  br i1 %5189, label %5210, label %5213

5190:                                             ; preds = %5132
  %5191 = getelementptr inbounds i8, ptr %4491, i64 1
  %5192 = load i8, ptr %5191, align 1, !tbaa !17
  %5193 = icmp eq i8 %5192, -68
  br i1 %5193, label %5194, label %5213

5194:                                             ; preds = %5190
  %5195 = getelementptr inbounds i8, ptr %4491, i64 2
  %5196 = load i8, ptr %5195, align 1, !tbaa !17
  %5197 = icmp eq i8 %5196, 110
  br i1 %5197, label %5210, label %5213

5198:                                             ; preds = %5130
  %5199 = icmp sgt i64 %4494, 1
  br i1 %5199, label %5200, label %5213

5200:                                             ; preds = %5198
  %5201 = load i8, ptr %4491, align 1, !tbaa !17
  switch i8 %5201, label %5213 [
    i8 102, label %5202
    i8 115, label %5205
  ]

5202:                                             ; preds = %5200
  %5203 = getelementptr inbounds i8, ptr %4491, i64 1
  %5204 = load i8, ptr %5203, align 1, !tbaa !17
  switch i8 %5204, label %5213 [
    i8 102, label %5210
    i8 105, label %5210
    i8 108, label %5210
  ]

5205:                                             ; preds = %5200
  %5206 = getelementptr inbounds i8, ptr %4491, i64 1
  %5207 = load i8, ptr %5206, align 1, !tbaa !17
  %5208 = add i8 %5207, -115
  %5209 = icmp ult i8 %5208, 2
  br i1 %5209, label %5210, label %5213

5210:                                             ; preds = %5205, %5202, %5202, %5202, %5194, %5186, %5178, %5169, %5165, %5157, %5149, %5142, %5142, %5142, %5138, %5126, %5119, %5119, %5119, %5119, %5111, %5100, %5092, %5088, %5081, %5077, %5070, %5059, %5051, %5047, %5039, %5026, %5018, %5006, %4998, %4989, %4985, %4977, %4969, %4962, %4962, %4962, %4958, %4946, %4927, %4911, %4904, %4904, %4904, %4904, %4896, %4885, %4877, %4873, %4866, %4862, %4855, %4844, %4836, %4832, %4824, %4811, %4803, %4791, %4783, %4774, %4770, %4762, %4754, %4747, %4747, %4747, %4743, %4731, %4712, %4696, %4689, %4689, %4689, %4689, %4681, %4670, %4662, %4658, %4651, %4647, %4642, %4636, %4629, %4618, %4614, %4609, %4595, %4591, %4583, %4570, %4562, %4550, %4542, %4533, %4529, %4521, %4513, %4506, %4506, %4506, %4502
  %5211 = load ptr, ptr %11, align 8, !tbaa !5
  %5212 = call ptr @Perl__add_range_to_invlist(ptr noundef %5211, i64 noundef 0, i64 noundef -1) #15
  store ptr %5212, ptr %11, align 8, !tbaa !5
  br label %5281

5213:                                             ; preds = %5205, %5202, %5200, %5198, %5194, %5190, %5186, %5182, %5178, %5174, %5169, %5165, %5161, %5157, %5153, %5149, %5145, %5142, %5138, %5134, %5132, %5126, %5122, %5119, %5115, %5111, %5107, %5104, %5100, %5096, %5092, %5088, %5085, %5081, %5077, %5074, %5070, %5066, %5063, %5059, %5055, %5051, %5047, %5044, %5043, %5039, %5035, %5026, %5022, %5018, %5014, %5010, %5006, %5002, %4998, %4994, %4989, %4985, %4981, %4977, %4973, %4969, %4965, %4962, %4958, %4954, %4952, %4946, %4942, %4931, %4927, %4923, %4918, %4915, %4911, %4907, %4904, %4900, %4896, %4892, %4889, %4885, %4881, %4877, %4873, %4870, %4866, %4862, %4859, %4855, %4851, %4848, %4844, %4840, %4836, %4832, %4829, %4828, %4824, %4820, %4811, %4807, %4803, %4799, %4795, %4791, %4787, %4783, %4779, %4774, %4770, %4766, %4762, %4758, %4754, %4750, %4747, %4743, %4739, %4737, %4731, %4727, %4716, %4712, %4708, %4703, %4700, %4696, %4692, %4689, %4685, %4681, %4677, %4674, %4670, %4666, %4662, %4658, %4655, %4651, %4647, %4642, %4639, %4636, %4633, %4629, %4625, %4622, %4618, %4614, %4609, %4606, %4602, %4599, %4595, %4591, %4588, %4587, %4583, %4579, %4570, %4566, %4562, %4558, %4554, %4550, %4546, %4542, %4538, %4533, %4529, %4525, %4521, %4517, %4513, %4509, %4506, %4502, %4498, %4496
  %5214 = load ptr, ptr %11, align 8, !tbaa !5
  %5215 = call ptr @Perl__add_range_to_invlist(ptr noundef %5214, i64 noundef %4393, i64 noundef %4393) #15
  store ptr %5215, ptr %11, align 8, !tbaa !5
  %5216 = load ptr, ptr @PL_utf8_foldclosures, align 8, !tbaa !5
  %5217 = icmp eq ptr %5216, null
  br i1 %5217, label %5218, label %5220

5218:                                             ; preds = %5213
  call void @Perl__load_PL_utf8_foldclosures() #15
  %5219 = load ptr, ptr @PL_utf8_foldclosures, align 8, !tbaa !5
  br label %5220

5220:                                             ; preds = %5218, %5213
  %5221 = phi ptr [ %5219, %5218 ], [ %5216, %5213 ]
  %5222 = zext i8 %4490 to i32
  %5223 = call ptr @Perl_hv_common_key_len(ptr noundef %5221, ptr noundef nonnull %4491, i32 noundef %5222, i32 noundef 32, ptr noundef null, i32 noundef 0) #15
  %5224 = icmp eq ptr %5223, null
  br i1 %5224, label %5281, label %5225

5225:                                             ; preds = %5220
  %5226 = load ptr, ptr %5223, align 8, !tbaa !5
  %5227 = icmp eq ptr %5226, null
  %5228 = getelementptr inbounds %struct.av, ptr %5226, i64 0, i32 2
  %5229 = icmp ult i64 %4393, 128
  br label %5230

5230:                                             ; preds = %5278, %5225
  %5231 = phi ptr [ %5215, %5225 ], [ %5279, %5278 ]
  %5232 = phi i64 [ 0, %5225 ], [ %5280, %5278 ]
  br i1 %5227, label %5233, label %5234

5233:                                             ; preds = %5230
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.382, i32 noundef 20) #15
  br label %5234

5234:                                             ; preds = %5233, %5230
  %5235 = load i32, ptr %5228, align 4, !tbaa !73
  %5236 = and i32 %5235, 255
  %5237 = icmp eq i32 %5236, 11
  br i1 %5237, label %5240, label %5238

5238:                                             ; preds = %5234
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.383, i32 noundef 21) #15
  %5239 = load i32, ptr %5228, align 4, !tbaa !13
  br label %5240

5240:                                             ; preds = %5238, %5234
  %5241 = phi i32 [ %5235, %5234 ], [ %5239, %5238 ]
  %5242 = and i32 %5241, 8388608
  %5243 = icmp eq i32 %5242, 0
  br i1 %5243, label %5247, label %5244

5244:                                             ; preds = %5240
  %5245 = call i32 @Perl_mg_size(ptr noundef nonnull %5226) #15
  %5246 = sext i32 %5245 to i64
  br label %5251

5247:                                             ; preds = %5240
  %5248 = load ptr, ptr %5226, align 8, !tbaa !81
  %5249 = getelementptr inbounds %struct.xpvav, ptr %5248, i64 0, i32 2
  %5250 = load i64, ptr %5249, align 8, !tbaa !83
  br label %5251

5251:                                             ; preds = %5247, %5244
  %5252 = phi i64 [ %5246, %5244 ], [ %5250, %5247 ]
  %5253 = icmp sgt i64 %5232, %5252
  br i1 %5253, label %5281, label %5254

5254:                                             ; preds = %5251
  %5255 = call ptr @Perl_av_fetch(ptr noundef nonnull %5226, i64 noundef %5232, i32 noundef 0) #15
  %5256 = icmp eq ptr %5255, null
  br i1 %5256, label %5257, label %5258

5257:                                             ; preds = %5254
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.369, i32 noundef 9501) #15
  br label %5258

5258:                                             ; preds = %5257, %5254
  %5259 = load ptr, ptr %5255, align 8, !tbaa !5
  %5260 = getelementptr inbounds %struct.sv, ptr %5259, i64 0, i32 2
  %5261 = load i32, ptr %5260, align 4, !tbaa !13
  %5262 = and i32 %5261, -2145386240
  %5263 = icmp eq i32 %5262, -2147483392
  br i1 %5263, label %5264, label %5268

5264:                                             ; preds = %5258
  %5265 = load ptr, ptr %5259, align 8, !tbaa !16
  %5266 = getelementptr inbounds %struct.xpvuv, ptr %5265, i64 0, i32 4
  %5267 = load i64, ptr %5266, align 8, !tbaa !17
  br label %5270

5268:                                             ; preds = %5258
  %5269 = call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %5259, i32 noundef 2) #15
  br label %5270

5270:                                             ; preds = %5268, %5264
  %5271 = phi i64 [ %5267, %5264 ], [ %5269, %5268 ]
  %5272 = load i8, ptr %4394, align 1, !tbaa !141
  switch i8 %5272, label %5276 [
    i8 36, label %5273
    i8 39, label %5273
  ]

5273:                                             ; preds = %5270, %5270
  %5274 = icmp ugt i64 %5271, 127
  %5275 = xor i1 %5229, %5274
  br i1 %5275, label %5276, label %5278

5276:                                             ; preds = %5273, %5270
  %5277 = call ptr @Perl__add_range_to_invlist(ptr noundef %5231, i64 noundef %5271, i64 noundef %5271) #15
  store ptr %5277, ptr %11, align 8, !tbaa !5
  br label %5278

5278:                                             ; preds = %5276, %5273
  %5279 = phi ptr [ %5231, %5273 ], [ %5277, %5276 ]
  %5280 = add nuw nsw i64 %5232, 1
  br label %5230, !llvm.loop !286

5281:                                             ; preds = %5251, %5220, %5210
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %12) #15
  br label %5282

5282:                                             ; preds = %5281, %4383, %4381, %4381, %4375
  %5283 = load ptr, ptr %11, align 8, !tbaa !5
  br label %5284

5284:                                             ; preds = %5282, %4355
  %5285 = phi ptr [ %5283, %5282 ], [ %4356, %4355 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #15
  %5286 = icmp eq ptr %5285, null
  br i1 %5286, label %5287, label %5288

5287:                                             ; preds = %5284
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.274, i32 noundef 4582) #15
  br label %5288

5288:                                             ; preds = %5284, %5287
  %5289 = and i32 %265, 2048
  %5290 = icmp eq i32 %5289, 0
  br i1 %5290, label %5332, label %5291

5291:                                             ; preds = %5288
  %5292 = load ptr, ptr %16, align 8, !tbaa !5
  %5293 = getelementptr inbounds %struct.regnode, ptr %5292, i64 0, i32 1
  %5294 = load i8, ptr %5293, align 1, !tbaa !141
  %5295 = icmp eq i8 %5294, 34
  %5296 = load ptr, ptr %132, align 8, !tbaa !183
  br i1 %5295, label %5314, label %5297

5297:                                             ; preds = %5291
  %5298 = icmp eq ptr %5296, null
  br i1 %5298, label %5299, label %5300

5299:                                             ; preds = %5297
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1525) #15
  br label %5300

5300:                                             ; preds = %5299, %5297
  %5301 = getelementptr inbounds %struct.regnode_ssc, ptr %5296, i64 0, i32 1
  %5302 = load i8, ptr %5301, align 1, !tbaa !181
  %5303 = icmp eq i8 %5302, 19
  br i1 %5303, label %5304, label %5308

5304:                                             ; preds = %5300
  %5305 = getelementptr inbounds %struct.regnode_ssc, ptr %5296, i64 0, i32 2
  %5306 = load i16, ptr %5305, align 2, !tbaa !182
  %5307 = icmp eq i16 %5306, 1
  br i1 %5307, label %5309, label %5308

5308:                                             ; preds = %5304, %5300
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1527) #15
  br label %5309

5309:                                             ; preds = %5304, %5308
  %5310 = getelementptr inbounds %struct.regnode_charclass_class, ptr %5296, i64 0, i32 5
  store i32 0, ptr %5310, align 4, !tbaa !243
  %5311 = load i8, ptr %5296, align 8, !tbaa !198
  %5312 = and i8 %5311, -13
  store i8 %5312, ptr %5296, align 8, !tbaa !198
  %5313 = load ptr, ptr %132, align 8, !tbaa !183
  br label %5314

5314:                                             ; preds = %5291, %5309
  %5315 = phi ptr [ %5296, %5291 ], [ %5313, %5309 ]
  %5316 = load i8, ptr %5315, align 8, !tbaa !198
  %5317 = and i8 %5316, -2
  store i8 %5317, ptr %5315, align 8, !tbaa !198
  %5318 = getelementptr inbounds %struct.regnode_charclass_class, ptr %5315, i64 0, i32 5
  store i32 0, ptr %5318, align 4, !tbaa !243
  br i1 %5286, label %5319, label %5320

5319:                                             ; preds = %5314
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 1483) #15
  br label %5320

5320:                                             ; preds = %5319, %5314
  %5321 = getelementptr inbounds %struct.regnode_ssc, ptr %5315, i64 0, i32 1
  %5322 = load i8, ptr %5321, align 1, !tbaa !181
  %5323 = icmp eq i8 %5322, 19
  br i1 %5323, label %5324, label %5328

5324:                                             ; preds = %5320
  %5325 = getelementptr inbounds %struct.regnode_ssc, ptr %5315, i64 0, i32 2
  %5326 = load i16, ptr %5325, align 2, !tbaa !182
  %5327 = icmp eq i16 %5326, 1
  br i1 %5327, label %5329, label %5328

5328:                                             ; preds = %5324, %5320
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1485) #15
  br label %5329

5329:                                             ; preds = %5324, %5328
  %5330 = getelementptr inbounds %struct.regnode_ssc, ptr %5315, i64 0, i32 6
  %5331 = load ptr, ptr %5330, align 8, !tbaa !284
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %5331, ptr noundef %5285, i1 noundef zeroext false, ptr noundef nonnull %5330) #15
  br label %5354

5332:                                             ; preds = %5288
  %5333 = load ptr, ptr %132, align 8, !tbaa !183
  %5334 = icmp eq ptr %5333, null
  br i1 %5334, label %5335, label %5336

5335:                                             ; preds = %5332
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1468) #15
  br label %5336

5336:                                             ; preds = %5335, %5332
  br i1 %5286, label %5337, label %5338

5337:                                             ; preds = %5336
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 1468) #15
  br label %5338

5338:                                             ; preds = %5337, %5336
  %5339 = getelementptr inbounds %struct.regnode_ssc, ptr %5333, i64 0, i32 1
  %5340 = load i8, ptr %5339, align 1, !tbaa !181
  %5341 = icmp eq i8 %5340, 19
  br i1 %5341, label %5342, label %5346

5342:                                             ; preds = %5338
  %5343 = getelementptr inbounds %struct.regnode_ssc, ptr %5333, i64 0, i32 2
  %5344 = load i16, ptr %5343, align 2, !tbaa !182
  %5345 = icmp eq i16 %5344, 1
  br i1 %5345, label %5347, label %5346

5346:                                             ; preds = %5342, %5338
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1470) #15
  br label %5347

5347:                                             ; preds = %5342, %5346
  %5348 = getelementptr inbounds %struct.regnode_ssc, ptr %5333, i64 0, i32 6
  %5349 = load ptr, ptr %5348, align 8, !tbaa !284
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %5349, ptr noundef %5285, i1 noundef zeroext false, ptr noundef nonnull %5348) #15
  %5350 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %5350, ptr noundef %264)
  %5351 = load ptr, ptr %132, align 8, !tbaa !183
  %5352 = load i8, ptr %5351, align 8, !tbaa !198
  %5353 = and i8 %5352, -2
  store i8 %5353, ptr %5351, align 8, !tbaa !198
  br label %5354

5354:                                             ; preds = %5347, %5329
  %5355 = and i32 %265, -6145
  br i1 %5286, label %6835, label %5356

5356:                                             ; preds = %5354
  %5357 = getelementptr inbounds %struct.sv, ptr %5285, i64 0, i32 1
  %5358 = load i32, ptr %5357, align 8, !tbaa !37
  %5359 = icmp ugt i32 %5358, 1
  br i1 %5359, label %5360, label %5362

5360:                                             ; preds = %5356
  %5361 = add i32 %5358, -1
  store i32 %5361, ptr %5357, align 8, !tbaa !37
  br label %6835

5362:                                             ; preds = %5356
  call void @Perl_sv_free2(ptr noundef nonnull %5285, i32 noundef %5358) #15
  br label %6835

5363:                                             ; preds = %4272
  %5364 = lshr i32 %4273, 3
  %5365 = zext i32 %5364 to i64
  %5366 = getelementptr inbounds [0 x i8], ptr @PL_varies_bitmask, i64 0, i64 %5365
  %5367 = load i8, ptr %5366, align 1, !tbaa !17
  %5368 = zext i8 %5367 to i32
  %5369 = and i32 %4273, 7
  %5370 = shl nuw nsw i32 1, %5369
  %5371 = and i32 %5370, %5368
  %5372 = icmp eq i32 %5371, 0
  br i1 %5372, label %6137, label %5373

5373:                                             ; preds = %5363
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %26) #15
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %27) #15
  switch i8 %4277, label %6106 [
    i8 48, label %7216
    i8 43, label %5374
    i8 42, label %5393
    i8 44, label %5403
    i8 51, label %6107
    i8 29, label %6107
  ]

5374:                                             ; preds = %5373
  %5375 = and i32 %265, 7168
  %5376 = icmp eq i32 %5375, 0
  br i1 %5376, label %5385, label %5377

5377:                                             ; preds = %5374
  %5378 = getelementptr inbounds %struct.regnode, ptr %2127, i64 1, i32 1
  %5379 = load i8, ptr %5378, align 1, !tbaa !141
  %5380 = add i8 %5379, -33
  %5381 = icmp ult i8 %5380, -2
  %5382 = and i32 %265, 6144
  %5383 = icmp eq i32 %5382, 0
  %5384 = select i1 %5381, i1 %5383, i1 false
  br i1 %5384, label %5385, label %5448

5385:                                             ; preds = %5377, %5374
  %5386 = and i32 %265, 1024
  %5387 = icmp eq i32 %5386, 0
  br i1 %5387, label %5391, label %5388

5388:                                             ; preds = %5385
  %5389 = load i64, ptr %5, align 8, !tbaa !251
  %5390 = add nsw i64 %5389, 1
  store i64 %5390, ptr %5, align 8, !tbaa !251
  br label %5391

5391:                                             ; preds = %5388, %5385
  %5392 = add nsw i64 %267, 1
  br label %5393

5393:                                             ; preds = %5373, %5391
  %5394 = phi i64 [ %267, %5373 ], [ %5392, %5391 ]
  %5395 = and i32 %265, 6144
  %5396 = icmp eq i32 %5395, 0
  br i1 %5396, label %5397, label %5443

5397:                                             ; preds = %5393
  %5398 = and i32 %265, 1024
  %5399 = icmp eq i32 %5398, 0
  br i1 %5399, label %5401, label %5400

5400:                                             ; preds = %5397
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef %5, ptr noundef %2, i32 noundef %270)
  store ptr %120, ptr %117, align 8, !tbaa !180
  br label %5401

5401:                                             ; preds = %5400, %5397
  %5402 = call ptr @Perl_regnext(ptr noundef nonnull %2127) #15
  store ptr %5402, ptr %16, align 8, !tbaa !5
  br label %6071

5403:                                             ; preds = %5373
  %5404 = icmp sgt i32 %262, 0
  %5405 = add i8 %4274, -45
  %5406 = icmp ult i8 %5405, 2
  %5407 = and i1 %5404, %5406
  br i1 %5407, label %5408, label %5412

5408:                                             ; preds = %5403
  %5409 = load i8, ptr %2127, align 2, !tbaa !143
  %5410 = zext i8 %5409 to i32
  %5411 = icmp eq i32 %262, %5410
  br i1 %5411, label %5419, label %5412

5412:                                             ; preds = %5408, %5403
  %5413 = getelementptr inbounds %struct.regnode_2, ptr %2127, i64 0, i32 3
  %5414 = load i16, ptr %5413, align 2, !tbaa !144
  %5415 = zext i16 %5414 to i64
  %5416 = getelementptr inbounds %struct.regnode_2, ptr %2127, i64 0, i32 4
  %5417 = load i16, ptr %5416, align 2, !tbaa !233
  %5418 = zext i16 %5417 to i64
  br label %5419

5419:                                             ; preds = %5408, %5412
  %5420 = phi i64 [ %5415, %5412 ], [ 1, %5408 ]
  %5421 = phi i64 [ %5418, %5412 ], [ 1, %5408 ]
  %5422 = call ptr @Perl_regnext(ptr noundef nonnull %2127) #15
  %5423 = load i8, ptr %2130, align 1, !tbaa !141
  %5424 = icmp eq i8 %5423, 47
  br i1 %5424, label %5425, label %5435

5425:                                             ; preds = %5419
  br i1 %108, label %5426, label %5429

5426:                                             ; preds = %5425
  %5427 = load ptr, ptr %112, align 8, !tbaa !184
  %5428 = load i64, ptr %5427, align 8, !tbaa !9
  br label %5429

5429:                                             ; preds = %5425, %5426
  %5430 = phi i64 [ %5428, %5426 ], [ 0, %5425 ]
  %5431 = trunc i64 %5430 to i32
  %5432 = trunc i64 %5430 to i8
  %5433 = icmp sgt i32 %5431, 255
  %5434 = select i1 %5433, i8 -1, i8 %5432
  store i8 %5434, ptr %2127, align 2, !tbaa !143
  br label %5435

5435:                                             ; preds = %5419, %5429
  %5436 = getelementptr inbounds %struct.regnode, ptr %2127, i64 2
  store ptr %5436, ptr %16, align 8, !tbaa !5
  %5437 = getelementptr inbounds %struct.regnode, ptr %2127, i64 2, i32 1
  %5438 = load i8, ptr %5437, align 1, !tbaa !141
  %5439 = icmp eq i8 %5438, 68
  %5440 = zext i1 %5439 to i32
  %5441 = and i32 %265, 1024
  %5442 = icmp eq i32 %5441, 0
  br i1 %5442, label %5467, label %5453

5443:                                             ; preds = %5393
  %5444 = call ptr @Perl_regnext(ptr noundef nonnull %2127) #15
  %5445 = getelementptr inbounds %struct.regnode, ptr %2127, i64 1
  store ptr %5445, ptr %16, align 8, !tbaa !5
  %5446 = and i32 %265, 1024
  %5447 = icmp eq i32 %5446, 0
  br i1 %5447, label %5467, label %5455

5448:                                             ; preds = %5377
  %5449 = call ptr @Perl_regnext(ptr noundef nonnull %2127) #15
  %5450 = getelementptr inbounds %struct.regnode, ptr %2127, i64 1
  store ptr %5450, ptr %16, align 8, !tbaa !5
  %5451 = and i32 %265, 1024
  %5452 = icmp eq i32 %5451, 0
  br i1 %5452, label %5467, label %5460

5453:                                             ; preds = %5435
  %5454 = icmp eq i64 %5420, 0
  br i1 %5454, label %5455, label %5460

5455:                                             ; preds = %5443, %5453
  %5456 = phi i64 [ %5421, %5453 ], [ 32767, %5443 ]
  %5457 = phi i32 [ %5440, %5453 ], [ 0, %5443 ]
  %5458 = phi ptr [ %5422, %5453 ], [ %5444, %5443 ]
  %5459 = phi i64 [ %267, %5453 ], [ %5394, %5443 ]
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef %5, ptr noundef %2, i32 noundef %270)
  br label %5460

5460:                                             ; preds = %5453, %5455, %5448
  %5461 = phi i64 [ 0, %5455 ], [ %5420, %5453 ], [ 1, %5448 ]
  %5462 = phi i64 [ %5456, %5455 ], [ %5421, %5453 ], [ 32767, %5448 ]
  %5463 = phi i32 [ %5457, %5455 ], [ %5440, %5453 ], [ 0, %5448 ]
  %5464 = phi ptr [ %5458, %5455 ], [ %5422, %5453 ], [ %5449, %5448 ]
  %5465 = phi i64 [ %5459, %5455 ], [ %267, %5453 ], [ %267, %5448 ]
  %5466 = load i64, ptr %5, align 8, !tbaa !251
  br label %5473

5467:                                             ; preds = %5443, %5448, %5435
  %5468 = phi i64 [ %267, %5435 ], [ %267, %5448 ], [ %5394, %5443 ]
  %5469 = phi ptr [ %5422, %5435 ], [ %5449, %5448 ], [ %5444, %5443 ]
  %5470 = phi i32 [ %5440, %5435 ], [ 0, %5448 ], [ 0, %5443 ]
  %5471 = phi i64 [ %5421, %5435 ], [ 32767, %5448 ], [ 32767, %5443 ]
  %5472 = phi i64 [ %5420, %5435 ], [ 1, %5448 ], [ 0, %5443 ]
  br i1 %108, label %5473, label %5485

5473:                                             ; preds = %5460, %5467
  %5474 = phi i64 [ %5466, %5460 ], [ 0, %5467 ]
  %5475 = phi i64 [ %5461, %5460 ], [ %5472, %5467 ]
  %5476 = phi i64 [ %5462, %5460 ], [ %5471, %5467 ]
  %5477 = phi i32 [ %5463, %5460 ], [ %5470, %5467 ]
  %5478 = phi ptr [ %5464, %5460 ], [ %5469, %5467 ]
  %5479 = phi i64 [ %5465, %5460 ], [ %5468, %5467 ]
  %5480 = load i32, ptr %110, align 8, !tbaa !185
  %5481 = and i32 %5480, -897
  store i32 %5481, ptr %110, align 8, !tbaa !185
  %5482 = icmp eq i32 %270, 0
  br i1 %5482, label %5485, label %5483

5483:                                             ; preds = %5473
  %5484 = or i32 %5481, 64
  store i32 %5484, ptr %110, align 8, !tbaa !185
  br label %5485

5485:                                             ; preds = %5473, %5483, %5467
  %5486 = phi i64 [ %5474, %5483 ], [ %5474, %5473 ], [ 0, %5467 ]
  %5487 = phi i64 [ %5475, %5483 ], [ %5475, %5473 ], [ %5472, %5467 ]
  %5488 = phi i64 [ %5476, %5483 ], [ %5476, %5473 ], [ %5471, %5467 ]
  %5489 = phi i32 [ %5477, %5483 ], [ %5477, %5473 ], [ %5470, %5467 ]
  %5490 = phi ptr [ %5478, %5483 ], [ %5478, %5473 ], [ %5469, %5467 ]
  %5491 = phi i64 [ %5479, %5483 ], [ %5479, %5473 ], [ %5468, %5467 ]
  %5492 = phi i32 [ %5480, %5483 ], [ %5480, %5473 ], [ 0, %5467 ]
  %5493 = and i32 %265, 6144
  %5494 = icmp eq i32 %5493, 0
  br i1 %5494, label %5504, label %5495

5495:                                             ; preds = %5485
  br i1 %81, label %5496, label %5497

5496:                                             ; preds = %5495
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 1053) #15
  br label %5497

5497:                                             ; preds = %5495, %5496
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %27, i8 0, i64 56, i1 false)
  store i8 19, ptr %151, align 1, !tbaa !181
  store i16 1, ptr %152, align 2, !tbaa !182
  store i32 -1, ptr %153, align 4, !tbaa !148
  call fastcc void @S_ssc_anything(ptr noundef nonnull %27)
  %5498 = load i32, ptr %139, align 8, !tbaa !52
  %5499 = icmp eq i32 %5498, 0
  %5500 = select i1 %5499, i32 0, i32 536870911
  store i32 %5500, ptr %154, align 8
  %5501 = load ptr, ptr %132, align 8, !tbaa !183
  store ptr %27, ptr %132, align 8, !tbaa !183
  %5502 = and i32 %265, -6145
  %5503 = or i32 %5502, 2048
  br label %5504

5504:                                             ; preds = %5497, %5485
  %5505 = phi i32 [ %5503, %5497 ], [ %265, %5485 ]
  %5506 = phi ptr [ %5501, %5497 ], [ null, %5485 ]
  %5507 = icmp ugt i64 %5487, 1
  br i1 %5507, label %5509, label %5508

5508:                                             ; preds = %5504
  switch i64 %5488, label %5509 [
    i64 32767, label %5511
    i64 1, label %5511
    i64 0, label %5511
  ]

5509:                                             ; preds = %5508, %5504
  %5510 = and i32 %5505, -8193
  br label %5511

5511:                                             ; preds = %5508, %5508, %5508, %5509
  %5512 = phi i32 [ %5510, %5509 ], [ %5505, %5508 ], [ %5505, %5508 ], [ %5505, %5508 ]
  %5513 = icmp eq i64 %5487, 0
  %5514 = and i32 %5512, -1025
  %5515 = select i1 %5513, i32 %5514, i32 %5512
  %5516 = add i32 %266, 1
  %5517 = call fastcc i64 @S_study_chunk(ptr noundef %0, ptr noundef nonnull %16, ptr noundef %2, ptr noundef nonnull %26, ptr noundef nonnull %261, ptr noundef %5, i32 noundef %262, i32 noundef %263, i32 noundef %5515, i32 noundef %5516)
  br i1 %5494, label %5519, label %5518

5518:                                             ; preds = %5511
  store ptr %5506, ptr %132, align 8, !tbaa !183
  br label %5519

5519:                                             ; preds = %5518, %5511
  %5520 = icmp eq i64 %5517, 0
  %5521 = select i1 %5513, i1 true, i1 %5520
  %5522 = and i32 %265, 4096
  %5523 = icmp eq i32 %5522, 0
  br i1 %5521, label %5524, label %5542

5524:                                             ; preds = %5519
  br i1 %5523, label %5527, label %5525

5525:                                             ; preds = %5524
  %5526 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_or(ptr noundef %0, ptr noundef %5526, ptr noundef nonnull %27)
  br label %5553

5527:                                             ; preds = %5524
  %5528 = and i32 %265, 2048
  %5529 = icmp eq i32 %5528, 0
  br i1 %5529, label %5553, label %5530

5530:                                             ; preds = %5527
  %5531 = icmp eq ptr %264, null
  br i1 %5531, label %5533, label %5532

5532:                                             ; preds = %5530
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.257, i32 noundef 4713) #15
  br label %5533

5533:                                             ; preds = %5530, %5532
  %5534 = call ptr @Perl_safesysmalloc(i64 noundef 56) #15
  call void @Perl_save_pushptr(ptr noundef %5534, i32 noundef 10) #15
  %5535 = load ptr, ptr %132, align 8, !tbaa !183
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %5534, ptr noundef nonnull align 8 dereferenceable(56) %5535, i64 56, i1 false), !tbaa.struct !199
  %5536 = and i32 %265, -6145
  %5537 = load ptr, ptr %132, align 8, !tbaa !183
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %5537, ptr noundef nonnull align 8 dereferenceable(56) %27, i64 56, i1 false), !tbaa.struct !199
  %5538 = or i32 %5536, 4096
  %5539 = load ptr, ptr %132, align 8, !tbaa !183
  %5540 = load i8, ptr %5539, align 8, !tbaa !198
  %5541 = or i8 %5540, 1
  store i8 %5541, ptr %5539, align 8, !tbaa !198
  br label %5553

5542:                                             ; preds = %5519
  br i1 %5523, label %5546, label %5543

5543:                                             ; preds = %5542
  %5544 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_or(ptr noundef %0, ptr noundef %5544, ptr noundef nonnull %27)
  %5545 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %5545, ptr noundef %264)
  br label %5551

5546:                                             ; preds = %5542
  %5547 = and i32 %265, 2048
  %5548 = icmp eq i32 %5547, 0
  br i1 %5548, label %5551, label %5549

5549:                                             ; preds = %5546
  %5550 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %5550, ptr noundef nonnull %27)
  br label %5551

5551:                                             ; preds = %5546, %5549, %5543
  %5552 = and i32 %265, -6145
  br label %5553

5553:                                             ; preds = %5525, %5533, %5527, %5551
  %5554 = phi i32 [ %265, %5525 ], [ %5538, %5533 ], [ %265, %5527 ], [ %5552, %5551 ]
  %5555 = phi ptr [ %264, %5525 ], [ %5534, %5533 ], [ %264, %5527 ], [ %264, %5551 ]
  %5556 = load ptr, ptr %16, align 8, !tbaa !5
  %5557 = icmp eq ptr %5556, null
  %5558 = select i1 %5557, ptr %5490, ptr %5556
  store ptr %5558, ptr %16, align 8
  %5559 = and i32 %5554, 65536
  %5560 = icmp eq i32 %5559, 0
  br i1 %5560, label %5561, label %5594

5561:                                             ; preds = %5553
  %5562 = icmp eq i32 %5489, 0
  %5563 = and i1 %5513, %5562
  %5564 = icmp ne i64 %5488, 1
  %5565 = xor i1 %5563, true
  %5566 = select i1 %5565, i1 true, i1 %5564
  %5567 = select i1 %5566, i1 %5520, i1 false
  %5568 = load i64, ptr %26, align 8
  %5569 = icmp eq i64 %5568, 0
  %5570 = select i1 %5567, i1 %5569, i1 false
  %5571 = and i1 %108, %5570
  br i1 %5571, label %5572, label %5596

5572:                                             ; preds = %5561
  %5573 = load i32, ptr %110, align 8, !tbaa !185
  %5574 = and i32 %5573, 384
  %5575 = icmp eq i32 %5574, 0
  %5576 = icmp ult i64 %5488, 10923
  %5577 = select i1 %5575, i1 %5576, i1 false
  br i1 %5577, label %5578, label %5594

5578:                                             ; preds = %5572
  %5579 = load ptr, ptr %155, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %5579, i32 noundef 11) #15
  %5580 = load i32, ptr %126, align 8, !tbaa !50
  %5581 = icmp ne i32 %5580, 0
  %5582 = zext i1 %5581 to i32
  %5583 = load ptr, ptr %156, align 8, !tbaa !107
  %5584 = load ptr, ptr %157, align 8, !tbaa !65
  %5585 = ptrtoint ptr %5583 to i64
  %5586 = ptrtoint ptr %5584 to i64
  %5587 = sub i64 %5585, %5586
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.275, i32 noundef %5582, i64 noundef %5587, ptr noundef %5584) #15
  %5588 = load ptr, ptr %155, align 8, !tbaa !122
  %5589 = icmp eq ptr %5588, null
  br i1 %5589, label %5594, label %5590

5590:                                             ; preds = %5578
  %5591 = getelementptr inbounds %struct.sv, ptr %5588, i64 0, i32 1
  %5592 = load i32, ptr %5591, align 8, !tbaa !37
  %5593 = add i32 %5592, 1
  store i32 %5593, ptr %5591, align 8, !tbaa !37
  br label %5594

5594:                                             ; preds = %5553, %5572, %5578, %5590
  %5595 = load i64, ptr %26, align 8
  br label %5596

5596:                                             ; preds = %5594, %5561
  %5597 = phi i64 [ %5595, %5594 ], [ %5568, %5561 ]
  %5598 = mul nsw i64 %5517, %5487
  %5599 = add nsw i64 %5598, %5491
  %5600 = icmp eq i64 %5597, 9223372036854775807
  br i1 %5600, label %5606, label %5601

5601:                                             ; preds = %5596
  %5602 = icmp eq i64 %5488, 32767
  %5603 = add nsw i64 %5597, %5517
  %5604 = icmp sgt i64 %5603, 0
  %5605 = select i1 %5602, i1 %5604, i1 false
  br label %5606

5606:                                             ; preds = %5601, %5596
  %5607 = phi i1 [ true, %5596 ], [ %5605, %5601 ]
  %5608 = zext i1 %5607 to i32
  %5609 = or i32 %271, %5608
  %5610 = or i32 %5609, %270
  %5611 = icmp eq i32 %5610, 0
  br i1 %5611, label %5612, label %5617

5612:                                             ; preds = %5606
  %5613 = add nsw i64 %5597, %5517
  %5614 = mul nsw i64 %5613, %5488
  %5615 = sub i64 %269, %5598
  %5616 = add i64 %5615, %5614
  br label %5617

5617:                                             ; preds = %5606, %5612
  %5618 = phi i64 [ %5616, %5612 ], [ 9223372036854775807, %5606 ]
  %5619 = load i8, ptr %2130, align 1, !tbaa !141
  %5620 = icmp eq i8 %5619, 47
  %5621 = and i1 %108, %5620
  br i1 %5621, label %5622, label %5685

5622:                                             ; preds = %5617
  %5623 = load i32, ptr %110, align 8, !tbaa !185
  %5624 = and i32 %5623, 256
  %5625 = icmp eq i32 %5624, 0
  br i1 %5625, label %5683, label %5626

5626:                                             ; preds = %5622
  %5627 = and i32 %5623, 512
  %5628 = icmp eq i32 %5627, 0
  %5629 = icmp eq i64 %5597, 0
  %5630 = and i1 %5629, %5628
  %5631 = icmp eq i64 %5517, 1
  %5632 = select i1 %5630, i1 %5631, i1 false
  br i1 %5632, label %5633, label %5683

5633:                                             ; preds = %5626
  %5634 = getelementptr inbounds %struct.regnode, ptr %2127, i64 2
  %5635 = call ptr @Perl_regnext(ptr noundef nonnull %5634) #15
  %5636 = getelementptr inbounds %struct.regnode, ptr %5635, i64 0, i32 1
  %5637 = load i8, ptr %5636, align 1, !tbaa !141
  %5638 = zext i8 %5637 to i32
  %5639 = lshr i32 %5638, 3
  %5640 = zext i32 %5639 to i64
  %5641 = getelementptr inbounds [0 x i8], ptr @PL_simple_bitmask, i64 0, i64 %5640
  %5642 = load i8, ptr %5641, align 1, !tbaa !17
  %5643 = zext i8 %5642 to i32
  %5644 = and i32 %5638, 7
  %5645 = shl nuw nsw i32 1, %5644
  %5646 = and i32 %5645, %5643
  %5647 = icmp eq i32 %5646, 0
  br i1 %5647, label %5648, label %5656

5648:                                             ; preds = %5633
  %5649 = zext i8 %5637 to i64
  %5650 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %5649
  %5651 = load i8, ptr %5650, align 1, !tbaa !17
  %5652 = icmp eq i8 %5651, 31
  br i1 %5652, label %5653, label %5683

5653:                                             ; preds = %5648
  %5654 = load i8, ptr %5635, align 2, !tbaa !205
  %5655 = icmp eq i8 %5654, 1
  br i1 %5655, label %5656, label %5683

5656:                                             ; preds = %5653, %5633
  %5657 = call ptr @Perl_regnext(ptr noundef nonnull %5635) #15
  %5658 = getelementptr inbounds %struct.regnode, ptr %5657, i64 0, i32 1
  %5659 = load i8, ptr %5658, align 1, !tbaa !141
  %5660 = icmp eq i8 %5659, 50
  br i1 %5660, label %5661, label %5683

5661:                                             ; preds = %5656
  %5662 = load ptr, ptr %130, align 8, !tbaa !127
  %5663 = icmp eq ptr %5662, null
  br i1 %5663, label %5673, label %5664

5664:                                             ; preds = %5661
  %5665 = getelementptr inbounds %struct.regnode, ptr %2127, i64 3
  %5666 = load i32, ptr %5665, align 4, !tbaa !148
  %5667 = add i32 %5666, -1
  %5668 = zext i32 %5667 to i64
  %5669 = getelementptr inbounds ptr, ptr %5662, i64 %5668
  store ptr %2127, ptr %5669, align 8, !tbaa !5
  %5670 = getelementptr inbounds %struct.regnode, ptr %5657, i64 2
  %5671 = load ptr, ptr %131, align 8, !tbaa !128
  %5672 = getelementptr inbounds ptr, ptr %5671, i64 %5668
  store ptr %5670, ptr %5672, align 8, !tbaa !5
  br label %5673

5673:                                             ; preds = %5664, %5661
  %5674 = getelementptr inbounds %struct.regnode_1, ptr %5657, i64 0, i32 3
  %5675 = load i32, ptr %5674, align 4, !tbaa !148
  %5676 = trunc i32 %5675 to i8
  store i8 %5676, ptr %2127, align 2, !tbaa !143
  store i8 45, ptr %2130, align 1, !tbaa !141
  %5677 = getelementptr inbounds %struct.regnode, ptr %2127, i64 2, i32 1
  store i8 40, ptr %5677, align 1, !tbaa !141
  %5678 = getelementptr inbounds %struct.regnode, ptr %2127, i64 3, i32 1
  store i8 92, ptr %5678, align 1, !tbaa !141
  %5679 = getelementptr inbounds %struct.regnode, ptr %2127, i64 3, i32 2
  store i16 0, ptr %5679, align 2, !tbaa !222
  %5680 = getelementptr inbounds %struct.regnode, ptr %5635, i64 0, i32 2
  store i16 0, ptr %5680, align 2, !tbaa !222
  store i8 92, ptr %5658, align 1, !tbaa !141
  %5681 = getelementptr inbounds %struct.regnode, ptr %5657, i64 1, i32 1
  store i8 92, ptr %5681, align 1, !tbaa !141
  %5682 = getelementptr inbounds %struct.regnode, ptr %5657, i64 1, i32 2
  store i16 0, ptr %5682, align 2, !tbaa !222
  br label %5683

5683:                                             ; preds = %5626, %5622, %5656, %5648, %5653, %5673
  %5684 = load i8, ptr %2130, align 1, !tbaa !141
  br label %5685

5685:                                             ; preds = %5683, %5617
  %5686 = phi i8 [ %5684, %5683 ], [ %5619, %5617 ]
  %5687 = icmp eq i8 %5686, 47
  %5688 = and i1 %108, %5687
  br i1 %5688, label %5689, label %5747

5689:                                             ; preds = %5685
  %5690 = load i32, ptr %110, align 8, !tbaa !185
  %5691 = and i32 %5690, 128
  %5692 = icmp eq i32 %5691, 0
  br i1 %5692, label %5693, label %5748

5693:                                             ; preds = %5689
  %5694 = and i32 %5690, 512
  %5695 = icmp eq i32 %5694, 0
  %5696 = load i64, ptr %26, align 8
  %5697 = icmp eq i64 %5696, 0
  %5698 = select i1 %5695, i1 %5697, i1 false
  %5699 = icmp ne i64 %5517, 0
  %5700 = select i1 %5698, i1 %5699, i1 false
  br i1 %5700, label %5701, label %5748

5701:                                             ; preds = %5693
  %5702 = load i32, ptr %150, align 8, !tbaa !98
  %5703 = and i32 %5702, 1024
  %5704 = icmp eq i32 %5703, 0
  br i1 %5704, label %5705, label %5748

5705:                                             ; preds = %5701
  %5706 = getelementptr inbounds %struct.regnode, ptr %2127, i64 2
  store i8 46, ptr %2130, align 1, !tbaa !141
  br label %5707

5707:                                             ; preds = %5711, %5705
  %5708 = phi ptr [ %5706, %5705 ], [ %5709, %5711 ]
  %5709 = call ptr @Perl_regnext(ptr noundef nonnull %5708) #15
  %5710 = icmp eq ptr %5709, null
  br i1 %5710, label %5715, label %5711

5711:                                             ; preds = %5707
  %5712 = getelementptr inbounds %struct.regnode, ptr %5709, i64 0, i32 1
  %5713 = load i8, ptr %5712, align 1, !tbaa !141
  %5714 = icmp eq i8 %5713, 48
  br i1 %5714, label %5715, label %5707, !llvm.loop !287

5715:                                             ; preds = %5707, %5711
  %5716 = getelementptr inbounds %struct.regnode, ptr %5709, i64 0, i32 1
  store i8 1, ptr %5716, align 1, !tbaa !141
  %5717 = load i32, ptr %110, align 8, !tbaa !185
  %5718 = and i32 %5717, 256
  %5719 = icmp eq i32 %5718, 0
  br i1 %5719, label %5746, label %5720

5720:                                             ; preds = %5715
  %5721 = getelementptr inbounds %struct.regnode, ptr %5708, i64 0, i32 1
  %5722 = load i8, ptr %5721, align 1, !tbaa !141
  %5723 = icmp eq i8 %5722, 50
  br i1 %5723, label %5724, label %5746

5724:                                             ; preds = %5720
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %28) #15
  store ptr %5706, ptr %28, align 8, !tbaa !5
  %5725 = getelementptr inbounds %struct.regnode_1, ptr %5708, i64 0, i32 3
  %5726 = load i32, ptr %5725, align 4, !tbaa !148
  %5727 = trunc i32 %5726 to i8
  store i8 %5727, ptr %2127, align 2, !tbaa !143
  %5728 = load ptr, ptr %130, align 8, !tbaa !127
  %5729 = icmp eq ptr %5728, null
  br i1 %5729, label %5739, label %5730

5730:                                             ; preds = %5724
  %5731 = getelementptr inbounds %struct.regnode, ptr %2127, i64 3
  %5732 = load i32, ptr %5731, align 4, !tbaa !148
  %5733 = add i32 %5732, -1
  %5734 = zext i32 %5733 to i64
  %5735 = getelementptr inbounds ptr, ptr %5728, i64 %5734
  store ptr %2127, ptr %5735, align 8, !tbaa !5
  %5736 = getelementptr inbounds %struct.regnode, ptr %5709, i64 1
  %5737 = load ptr, ptr %131, align 8, !tbaa !128
  %5738 = getelementptr inbounds ptr, ptr %5737, i64 %5734
  store ptr %5736, ptr %5738, align 8, !tbaa !5
  br label %5739

5739:                                             ; preds = %5730, %5724
  %5740 = getelementptr inbounds %struct.regnode, ptr %2127, i64 2, i32 1
  store i8 92, ptr %5740, align 1, !tbaa !141
  store i8 92, ptr %5721, align 1, !tbaa !141
  %5741 = getelementptr inbounds %struct.regnode, ptr %2127, i64 3, i32 1
  store i8 92, ptr %5741, align 1, !tbaa !141
  %5742 = getelementptr inbounds %struct.regnode, ptr %5708, i64 1, i32 1
  store i8 92, ptr %5742, align 1, !tbaa !141
  %5743 = getelementptr inbounds %struct.regnode, ptr %2127, i64 3, i32 2
  store i16 0, ptr %5743, align 2, !tbaa !222
  %5744 = getelementptr inbounds %struct.regnode, ptr %5708, i64 1, i32 2
  store i16 0, ptr %5744, align 2, !tbaa !222
  %5745 = call fastcc i64 @S_study_chunk(ptr noundef nonnull %0, ptr noundef nonnull %28, ptr noundef %2, ptr noundef nonnull %26, ptr noundef nonnull %5708, ptr noundef null, i32 noundef %262, i32 noundef %263, i32 noundef 0, i32 noundef %5516)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %28) #15
  br label %5779

5746:                                             ; preds = %5720, %5715
  store i8 0, ptr %2127, align 2, !tbaa !143
  br label %5779

5747:                                             ; preds = %5685
  br i1 %5687, label %5748, label %5779

5748:                                             ; preds = %5689, %5693, %5701, %5747
  %5749 = and i32 %5554, 8192
  %5750 = icmp ne i32 %5749, 0
  %5751 = icmp eq i64 %5488, 32767
  %5752 = select i1 %5750, i1 %5751, i1 false
  %5753 = and i1 %108, %5752
  br i1 %5753, label %5754, label %5779

5754:                                             ; preds = %5748
  %5755 = load i32, ptr %111, align 4, !tbaa !253
  %5756 = add nsw i32 %5755, 1
  store i32 %5756, ptr %111, align 4, !tbaa !253
  %5757 = icmp slt i32 %5755, 15
  br i1 %5757, label %5758, label %5779

5758:                                             ; preds = %5754
  %5759 = getelementptr inbounds %struct.regnode, ptr %2127, i64 0, i32 2
  %5760 = load i16, ptr %5759, align 2, !tbaa !222
  %5761 = zext i16 %5760 to i64
  %5762 = getelementptr inbounds %struct.regnode, ptr %2127, i64 %5761
  %5763 = getelementptr %struct.regnode, ptr %5762, i64 -1, i32 1
  %5764 = load i8, ptr %5763, align 1, !tbaa !141
  %5765 = icmp eq i8 %5764, 40
  br i1 %5765, label %5766, label %5771

5766:                                             ; preds = %5758
  %5767 = getelementptr inbounds %struct.regnode_1, ptr %5762, i64 0, i32 3
  %5768 = load i32, ptr %5767, align 4, !tbaa !148
  %5769 = zext i32 %5768 to i64
  %5770 = getelementptr inbounds %struct.regnode, ptr %5762, i64 %5769
  br label %5771

5771:                                             ; preds = %5766, %5758
  %5772 = phi ptr [ %5770, %5766 ], [ %5762, %5758 ]
  %5773 = zext i32 %5756 to i64
  %5774 = load i64, ptr %158, align 8, !tbaa !113
  %5775 = shl i64 %5774, 4
  %5776 = or i64 %5775, %5773
  %5777 = trunc i64 %5776 to i8
  %5778 = getelementptr inbounds %struct.regnode, ptr %5772, i64 -1
  store i8 %5777, ptr %5778, align 2, !tbaa !143
  br label %5779

5779:                                             ; preds = %5739, %5746, %5747, %5748, %5754, %5771
  %5780 = and i32 %5492, 384
  %5781 = icmp ne i32 %5780, 0
  %5782 = select i1 %108, i1 %5781, i1 false
  %5783 = zext i1 %5782 to i32
  %5784 = add nsw i32 %268, %5783
  %5785 = and i32 %5554, 1024
  %5786 = icmp eq i32 %5785, 0
  br i1 %5786, label %6064, label %5787

5787:                                             ; preds = %5779
  %5788 = icmp ne i64 %5487, 0
  %5789 = load i64, ptr %114, align 8, !tbaa !254
  %5790 = icmp sgt i64 %5789, 0
  %5791 = select i1 %5790, i1 %5788, i1 false
  br i1 %5791, label %5792, label %6005

5792:                                             ; preds = %5787
  %5793 = load i64, ptr %115, align 8, !tbaa !255
  %5794 = call i64 @llvm.smax.i64(i64 %5486, i64 %5793)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %29) #15
  %5795 = load ptr, ptr %113, align 8, !tbaa !179
  %5796 = getelementptr inbounds %struct.sv, ptr %5795, i64 0, i32 2
  %5797 = load i32, ptr %5796, align 4, !tbaa !13
  %5798 = and i32 %5797, 2098176
  %5799 = icmp eq i32 %5798, 1024
  br i1 %5799, label %5800, label %5806

5800:                                             ; preds = %5792
  %5801 = load ptr, ptr %5795, align 8, !tbaa !16
  %5802 = getelementptr inbounds %struct.xpv, ptr %5801, i64 0, i32 2
  %5803 = load i64, ptr %5802, align 8, !tbaa !38
  store i64 %5803, ptr %29, align 8, !tbaa !9
  %5804 = getelementptr inbounds %struct.sv, ptr %5795, i64 0, i32 3
  %5805 = load ptr, ptr %5804, align 8, !tbaa !17
  br label %5809

5806:                                             ; preds = %5792
  %5807 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %5795, ptr noundef nonnull %29, i32 noundef 34) #15
  %5808 = load i64, ptr %115, align 8, !tbaa !255
  br label %5809

5809:                                             ; preds = %5806, %5800
  %5810 = phi i64 [ %5793, %5800 ], [ %5808, %5806 ]
  %5811 = phi ptr [ %5805, %5800 ], [ %5807, %5806 ]
  %5812 = sub nsw i64 %5794, %5810
  %5813 = load i32, ptr %126, align 8, !tbaa !50
  %5814 = icmp eq i32 %5813, 0
  br i1 %5814, label %5815, label %5819

5815:                                             ; preds = %5809
  %5816 = load i64, ptr %29, align 8, !tbaa !9
  %5817 = sub i64 %5816, %5812
  store i64 %5817, ptr %29, align 8, !tbaa !9
  %5818 = getelementptr inbounds i8, ptr %5811, i64 %5812
  br label %5831

5819:                                             ; preds = %5809
  %5820 = trunc i64 %5812 to i32
  %5821 = call ptr @Perl_utf8_hop(ptr noundef %5811, i32 noundef %5820) #15
  %5822 = ptrtoint ptr %5821 to i64
  %5823 = ptrtoint ptr %5811 to i64
  %5824 = sub i64 %5822, %5823
  %5825 = load i32, ptr %126, align 8, !tbaa !50
  %5826 = load i64, ptr %29, align 8, !tbaa !9
  %5827 = sub i64 %5826, %5824
  store i64 %5827, ptr %29, align 8, !tbaa !9
  %5828 = getelementptr inbounds i8, ptr %5811, i64 %5824
  %5829 = freeze i32 %5825
  %5830 = icmp eq i32 %5829, 0
  br i1 %5830, label %5831, label %5834

5831:                                             ; preds = %5815, %5819
  %5832 = phi ptr [ %5818, %5815 ], [ %5828, %5819 ]
  %5833 = phi i64 [ %5817, %5815 ], [ %5827, %5819 ]
  br label %5834

5834:                                             ; preds = %5819, %5831
  %5835 = phi ptr [ %5832, %5831 ], [ %5828, %5819 ]
  %5836 = phi i64 [ %5833, %5831 ], [ %5827, %5819 ]
  %5837 = phi i32 [ 0, %5831 ], [ 536870912, %5819 ]
  %5838 = call ptr @Perl_newSVpvn_flags(ptr noundef %5835, i64 noundef %5836, i32 noundef %5837) #15
  %5839 = load i32, ptr %126, align 8, !tbaa !50
  %5840 = icmp eq i32 %5839, 0
  %5841 = load i64, ptr %29, align 8, !tbaa !9
  br i1 %5840, label %5845, label %5842

5842:                                             ; preds = %5834
  %5843 = getelementptr inbounds i8, ptr %5835, i64 %5841
  %5844 = call i64 @Perl_utf8_length(ptr noundef %5835, ptr noundef %5843) #15
  br label %5845

5845:                                             ; preds = %5834, %5842
  %5846 = phi i64 [ %5844, %5842 ], [ %5841, %5834 ]
  %5847 = load i64, ptr %26, align 8, !tbaa !9
  %5848 = icmp eq i64 %5847, 0
  %5849 = icmp sge i64 %5486, %5793
  %5850 = select i1 %5848, i1 %5849, i1 false
  br i1 %5850, label %5851, label %5989

5851:                                             ; preds = %5845
  br i1 %5507, label %5852, label %6003

5852:                                             ; preds = %5851
  %5853 = getelementptr inbounds %struct.sv, ptr %5838, i64 0, i32 2
  %5854 = load i32, ptr %5853, align 4, !tbaa !13
  %5855 = and i32 %5854, 268435456
  %5856 = icmp eq i32 %5855, 0
  %5857 = load i64, ptr %29, align 8, !tbaa !9
  br i1 %5856, label %5861, label %5858

5858:                                             ; preds = %5852
  %5859 = mul i64 %5857, %5487
  %5860 = add i64 %5859, 1
  br label %5868

5861:                                             ; preds = %5852
  %5862 = load ptr, ptr %5838, align 8, !tbaa !16
  %5863 = getelementptr inbounds %struct.xpv, ptr %5862, i64 0, i32 3
  %5864 = load i64, ptr %5863, align 8, !tbaa !17
  %5865 = mul i64 %5857, %5487
  %5866 = add i64 %5865, 1
  %5867 = icmp ult i64 %5864, %5866
  br i1 %5867, label %5868, label %5872

5868:                                             ; preds = %5858, %5861
  %5869 = phi i64 [ %5860, %5858 ], [ %5866, %5861 ]
  %5870 = call ptr @Perl_sv_grow(ptr noundef nonnull %5838, i64 noundef %5869) #15
  %5871 = load i64, ptr %29, align 8, !tbaa !9
  br label %5872

5872:                                             ; preds = %5861, %5868
  %5873 = phi i64 [ %5857, %5861 ], [ %5871, %5868 ]
  %5874 = getelementptr inbounds %struct.sv, ptr %5838, i64 0, i32 3
  %5875 = load ptr, ptr %5874, align 8, !tbaa !17
  %5876 = getelementptr inbounds i8, ptr %5875, i64 %5873
  %5877 = trunc i64 %5873 to i32
  %5878 = add nsw i64 %5487, -1
  call void @Perl_repeatcpy(ptr noundef %5876, ptr noundef %5875, i32 noundef %5877, i64 noundef %5878) #15
  %5879 = load i32, ptr %5853, align 4, !tbaa !13
  %5880 = and i32 %5879, 15
  %5881 = zext i32 %5880 to i64
  %5882 = getelementptr inbounds [0 x i8], ptr @PL_valid_types_PVX, i64 0, i64 %5881
  %5883 = load i8, ptr %5882, align 1, !tbaa !11, !range !18, !noundef !19
  %5884 = icmp ne i8 %5883, 0
  %5885 = and i32 %5879, 255
  %5886 = icmp eq i32 %5885, 8
  %5887 = or i1 %5884, %5886
  br i1 %5887, label %5890, label %5888

5888:                                             ; preds = %5872
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.276, i32 noundef 4911) #15
  %5889 = load i32, ptr %5853, align 4, !tbaa !13
  br label %5890

5890:                                             ; preds = %5872, %5888
  %5891 = phi i32 [ %5879, %5872 ], [ %5889, %5888 ]
  %5892 = and i32 %5891, 49152
  %5893 = icmp eq i32 %5892, 32768
  br i1 %5893, label %5894, label %5900

5894:                                             ; preds = %5890
  %5895 = and i32 %5891, 255
  %5896 = add nsw i32 %5895, -9
  %5897 = icmp ult i32 %5896, 2
  br i1 %5897, label %5898, label %5900

5898:                                             ; preds = %5894
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.277, i32 noundef 4911) #15
  %5899 = load i32, ptr %5853, align 4, !tbaa !13
  br label %5900

5900:                                             ; preds = %5894, %5890, %5898
  %5901 = phi i32 [ %5891, %5894 ], [ %5891, %5890 ], [ %5899, %5898 ]
  %5902 = and i32 %5901, 255
  %5903 = icmp eq i32 %5902, 15
  %5904 = load ptr, ptr %5838, align 8, !tbaa !16
  br i1 %5903, label %5905, label %5912

5905:                                             ; preds = %5900
  %5906 = getelementptr inbounds %struct.xpvio, ptr %5904, i64 0, i32 17
  %5907 = load i8, ptr %5906, align 1, !tbaa !120
  %5908 = and i8 %5907, 64
  %5909 = icmp eq i8 %5908, 0
  br i1 %5909, label %5910, label %5912

5910:                                             ; preds = %5905
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.278, i32 noundef 4911) #15
  %5911 = load ptr, ptr %5838, align 8, !tbaa !16
  br label %5912

5912:                                             ; preds = %5900, %5905, %5910
  %5913 = phi ptr [ %5904, %5900 ], [ %5904, %5905 ], [ %5911, %5910 ]
  %5914 = getelementptr inbounds %struct.xpv, ptr %5913, i64 0, i32 2
  %5915 = load i64, ptr %5914, align 8, !tbaa !38
  %5916 = mul i64 %5915, %5487
  store i64 %5916, ptr %5914, align 8, !tbaa !38
  %5917 = load ptr, ptr %113, align 8, !tbaa !179
  %5918 = getelementptr inbounds %struct.sv, ptr %5917, i64 0, i32 2
  %5919 = load i32, ptr %5918, align 4, !tbaa !13
  %5920 = and i32 %5919, 15
  %5921 = zext i32 %5920 to i64
  %5922 = getelementptr inbounds [0 x i8], ptr @PL_valid_types_PVX, i64 0, i64 %5921
  %5923 = load i8, ptr %5922, align 1, !tbaa !11, !range !18, !noundef !19
  %5924 = icmp ne i8 %5923, 0
  %5925 = and i32 %5919, 255
  %5926 = icmp eq i32 %5925, 8
  %5927 = or i1 %5924, %5926
  br i1 %5927, label %5932, label %5928

5928:                                             ; preds = %5912
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.279, i32 noundef 4914) #15
  %5929 = load ptr, ptr %113, align 8, !tbaa !179
  %5930 = getelementptr inbounds %struct.sv, ptr %5929, i64 0, i32 2
  %5931 = load i32, ptr %5930, align 4, !tbaa !13
  br label %5932

5932:                                             ; preds = %5912, %5928
  %5933 = phi i32 [ %5919, %5912 ], [ %5931, %5928 ]
  %5934 = phi ptr [ %5917, %5912 ], [ %5929, %5928 ]
  %5935 = and i32 %5933, 49152
  %5936 = icmp eq i32 %5935, 32768
  br i1 %5936, label %5937, label %5945

5937:                                             ; preds = %5932
  %5938 = and i32 %5933, 255
  %5939 = add nsw i32 %5938, -9
  %5940 = icmp ult i32 %5939, 2
  br i1 %5940, label %5941, label %5945

5941:                                             ; preds = %5937
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.280, i32 noundef 4914) #15
  %5942 = load ptr, ptr %113, align 8, !tbaa !179
  %5943 = getelementptr inbounds %struct.sv, ptr %5942, i64 0, i32 2
  %5944 = load i32, ptr %5943, align 4, !tbaa !13
  br label %5945

5945:                                             ; preds = %5937, %5932, %5941
  %5946 = phi i32 [ %5933, %5937 ], [ %5933, %5932 ], [ %5944, %5941 ]
  %5947 = phi ptr [ %5934, %5937 ], [ %5934, %5932 ], [ %5942, %5941 ]
  %5948 = and i32 %5946, 255
  %5949 = icmp eq i32 %5948, 15
  br i1 %5949, label %5950, label %5958

5950:                                             ; preds = %5945
  %5951 = load ptr, ptr %5947, align 8, !tbaa !16
  %5952 = getelementptr inbounds %struct.xpvio, ptr %5951, i64 0, i32 17
  %5953 = load i8, ptr %5952, align 1, !tbaa !120
  %5954 = and i8 %5953, 64
  %5955 = icmp eq i8 %5954, 0
  br i1 %5955, label %5956, label %5958

5956:                                             ; preds = %5950
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.281, i32 noundef 4914) #15
  %5957 = load ptr, ptr %113, align 8, !tbaa !179
  br label %5958

5958:                                             ; preds = %5945, %5950, %5956
  %5959 = phi ptr [ %5947, %5945 ], [ %5947, %5950 ], [ %5957, %5956 ]
  %5960 = load ptr, ptr %5959, align 8, !tbaa !16
  %5961 = getelementptr inbounds %struct.xpv, ptr %5960, i64 0, i32 2
  %5962 = load i64, ptr %5961, align 8, !tbaa !38
  %5963 = load i64, ptr %29, align 8, !tbaa !9
  %5964 = sub i64 %5962, %5963
  store i64 %5964, ptr %5961, align 8, !tbaa !38
  call void @Perl_sv_catsv_flags(ptr noundef nonnull %5959, ptr noundef nonnull %5838, i32 noundef 2) #15
  %5965 = load ptr, ptr %113, align 8, !tbaa !179
  %5966 = getelementptr inbounds %struct.sv, ptr %5965, i64 0, i32 2
  %5967 = load i32, ptr %5966, align 4, !tbaa !13
  %5968 = and i32 %5967, 536870912
  %5969 = icmp eq i32 %5968, 0
  %5970 = and i32 %5967, 14680064
  %5971 = icmp eq i32 %5970, 0
  %5972 = or i1 %5969, %5971
  br i1 %5972, label %5983, label %5973

5973:                                             ; preds = %5958
  %5974 = call ptr @Perl_mg_find(ptr noundef nonnull %5965, i32 noundef 119) #15
  %5975 = icmp eq ptr %5974, null
  br i1 %5975, label %5983, label %5976

5976:                                             ; preds = %5973
  %5977 = getelementptr inbounds %struct.magic, ptr %5974, i64 0, i32 5
  %5978 = load i64, ptr %5977, align 8, !tbaa !282
  %5979 = icmp sgt i64 %5978, -1
  br i1 %5979, label %5980, label %5983

5980:                                             ; preds = %5976
  %5981 = mul i64 %5846, %5878
  %5982 = add i64 %5978, %5981
  store i64 %5982, ptr %5977, align 8, !tbaa !282
  br label %5983

5983:                                             ; preds = %5958, %5980, %5976, %5973
  %5984 = mul i64 %5846, %5487
  %5985 = load i64, ptr %29, align 8, !tbaa !9
  %5986 = mul i64 %5985, %5878
  %5987 = load i64, ptr %114, align 8, !tbaa !254
  %5988 = add i64 %5987, %5986
  store i64 %5988, ptr %114, align 8, !tbaa !254
  br label %6003

5989:                                             ; preds = %5845
  %5990 = add nsw i64 %5487, -1
  %5991 = mul nsw i64 %5517, %5990
  %5992 = load i64, ptr %115, align 8, !tbaa !255
  %5993 = add nsw i64 %5992, %5991
  store i64 %5993, ptr %115, align 8, !tbaa !255
  br i1 %5611, label %5994, label %6001

5994:                                             ; preds = %5989
  %5995 = load i64, ptr %116, align 8, !tbaa !256
  %5996 = add nsw i64 %5488, -1
  %5997 = load i64, ptr %109, align 8, !tbaa !252
  %5998 = add nsw i64 %5997, %5517
  %5999 = mul nsw i64 %5998, %5996
  %6000 = add nsw i64 %5999, %5995
  br label %6001

6001:                                             ; preds = %5989, %5994
  %6002 = phi i64 [ %6000, %5994 ], [ 9223372036854775807, %5989 ]
  store i64 %6002, ptr %116, align 8, !tbaa !256
  br label %6003

6003:                                             ; preds = %5851, %5983, %6001
  %6004 = phi i64 [ %5984, %5983 ], [ %5846, %5851 ], [ %5846, %6001 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %29) #15
  br label %6005

6005:                                             ; preds = %6003, %5787
  %6006 = phi ptr [ %5838, %6003 ], [ null, %5787 ]
  %6007 = phi i64 [ %6004, %6003 ], [ 0, %5787 ]
  %6008 = sext i1 %5788 to i64
  %6009 = add nsw i64 %5487, %6008
  %6010 = mul nsw i64 %5517, %6009
  %6011 = load i64, ptr %5, align 8, !tbaa !251
  %6012 = add nsw i64 %6011, %6010
  store i64 %6012, ptr %5, align 8, !tbaa !251
  %6013 = load i64, ptr %26, align 8, !tbaa !9
  %6014 = icmp eq i64 %6013, 9223372036854775807
  br i1 %6014, label %6026, label %6015

6015:                                             ; preds = %6005
  %6016 = mul nsw i64 %6013, %6008
  %6017 = add nsw i64 %6013, %5517
  %6018 = mul nsw i64 %6017, %5488
  %6019 = sub i64 %6016, %5598
  %6020 = add i64 %6019, %6018
  %6021 = load i64, ptr %109, align 8, !tbaa !252
  %6022 = sub nsw i64 9223372036854775807, %6021
  %6023 = icmp slt i64 %6020, %6022
  %6024 = add nsw i64 %6021, %6020
  %6025 = select i1 %6023, i64 %6024, i64 9223372036854775807
  br label %6026

6026:                                             ; preds = %6015, %6005
  %6027 = phi i64 [ 9223372036854775807, %6005 ], [ %6025, %6015 ]
  store i64 %6027, ptr %109, align 8, !tbaa !252
  %6028 = icmp eq i64 %5487, %5488
  br i1 %6028, label %6055, label %6029

6029:                                             ; preds = %6026
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef nonnull %5, ptr noundef %2, i32 noundef %5610)
  %6030 = icmp ne ptr %6006, null
  %6031 = select i1 %5788, i1 %6030, i1 false
  br i1 %6031, label %6032, label %6054

6032:                                             ; preds = %6029
  %6033 = load ptr, ptr %113, align 8, !tbaa !179
  %6034 = getelementptr inbounds %struct.sv, ptr %6033, i64 0, i32 2
  %6035 = load i32, ptr %6034, align 4, !tbaa !13
  %6036 = and i32 %6035, 536870912
  %6037 = icmp eq i32 %6036, 0
  %6038 = and i32 %6035, 14680064
  %6039 = icmp eq i32 %6038, 0
  %6040 = or i1 %6037, %6039
  br i1 %6040, label %6046, label %6041

6041:                                             ; preds = %6032
  %6042 = call ptr @Perl_mg_find(ptr noundef nonnull %6033, i32 noundef 119) #15
  %6043 = icmp eq ptr %6042, null
  br i1 %6043, label %6046, label %6044

6044:                                             ; preds = %6041
  %6045 = getelementptr inbounds %struct.magic, ptr %6042, i64 0, i32 5
  store i64 -1, ptr %6045, align 8, !tbaa !282
  br label %6046

6046:                                             ; preds = %6032, %6044, %6041
  call void @Perl_sv_setsv_flags(ptr noundef nonnull %6033, ptr noundef nonnull %6006, i32 noundef 1538) #15
  %6047 = load i64, ptr %5, align 8, !tbaa !251
  store i64 %6047, ptr %114, align 8, !tbaa !254
  %6048 = sub i64 %6047, %6007
  store i64 %6048, ptr %115, align 8, !tbaa !255
  br i1 %5611, label %6049, label %6052

6049:                                             ; preds = %6046
  %6050 = load i64, ptr %109, align 8, !tbaa !252
  %6051 = add i64 %6048, %6050
  br label %6052

6052:                                             ; preds = %6046, %6049
  %6053 = phi i64 [ %6051, %6049 ], [ 9223372036854775807, %6046 ]
  store i64 %6053, ptr %116, align 8, !tbaa !256
  br label %6054

6054:                                             ; preds = %6052, %6029
  store ptr %120, ptr %117, align 8, !tbaa !180
  br label %6055

6055:                                             ; preds = %6054, %6026
  %6056 = icmp eq ptr %6006, null
  br i1 %6056, label %6064, label %6057

6057:                                             ; preds = %6055
  %6058 = getelementptr inbounds %struct.sv, ptr %6006, i64 0, i32 1
  %6059 = load i32, ptr %6058, align 8, !tbaa !37
  %6060 = icmp ugt i32 %6059, 1
  br i1 %6060, label %6061, label %6063

6061:                                             ; preds = %6057
  %6062 = add i32 %6059, -1
  store i32 %6062, ptr %6058, align 8, !tbaa !37
  br label %6064

6063:                                             ; preds = %6057
  call void @Perl_sv_free2(ptr noundef nonnull %6006, i32 noundef %6059) #15
  br label %6064

6064:                                             ; preds = %6063, %6061, %6055, %5779
  %6065 = and i32 %5492, 512
  %6066 = icmp ne i32 %6065, 0
  %6067 = select i1 %108, i1 %6066, i1 false
  br i1 %6067, label %6068, label %6071

6068:                                             ; preds = %6064
  %6069 = load i32, ptr %110, align 8, !tbaa !185
  %6070 = or i32 %6069, 512
  store i32 %6070, ptr %110, align 8, !tbaa !185
  br label %6071

6071:                                             ; preds = %6064, %6068, %5401
  %6072 = phi i32 [ %5609, %6068 ], [ %5609, %6064 ], [ 1, %5401 ]
  %6073 = phi i32 [ %5610, %6068 ], [ %5610, %6064 ], [ 1, %5401 ]
  %6074 = phi i64 [ %5618, %6068 ], [ %5618, %6064 ], [ %269, %5401 ]
  %6075 = phi i32 [ %5784, %6068 ], [ %5784, %6064 ], [ %268, %5401 ]
  %6076 = phi i64 [ %5599, %6068 ], [ %5599, %6064 ], [ %5394, %5401 ]
  %6077 = phi i32 [ %5554, %6068 ], [ %5554, %6064 ], [ %265, %5401 ]
  %6078 = phi ptr [ %5555, %6068 ], [ %5555, %6064 ], [ %264, %5401 ]
  %6079 = load i8, ptr %2130, align 1, !tbaa !141
  %6080 = icmp eq i8 %6079, 47
  br i1 %6080, label %6846, label %6081, !llvm.loop !270

6081:                                             ; preds = %6071
  %6082 = call ptr @Perl_regnext(ptr noundef nonnull %2127) #15
  %6083 = getelementptr inbounds %struct.regnode, ptr %6082, i64 0, i32 1
  %6084 = load i8, ptr %6083, align 1, !tbaa !141
  %6085 = zext i8 %6084 to i64
  %6086 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %6085
  %6087 = load i8, ptr %6086, align 1, !tbaa !17
  %6088 = icmp eq i8 %6087, 40
  br i1 %6088, label %6089, label %6846, !llvm.loop !270

6089:                                             ; preds = %6081
  %6090 = getelementptr inbounds %struct.regnode, ptr %2127, i64 0, i32 2
  br label %6091

6091:                                             ; preds = %6089, %6096
  %6092 = phi ptr [ %6082, %6089 ], [ %6099, %6096 ]
  %6093 = getelementptr inbounds %struct.regnode, ptr %6092, i64 0, i32 2
  %6094 = load i16, ptr %6093, align 2, !tbaa !222
  %6095 = icmp eq i16 %6094, 0
  br i1 %6095, label %6846, label %6096, !llvm.loop !270

6096:                                             ; preds = %6091
  %6097 = load i16, ptr %6090, align 2, !tbaa !222
  %6098 = add i16 %6097, %6094
  store i16 %6098, ptr %6090, align 2, !tbaa !222
  %6099 = call ptr @Perl_regnext(ptr noundef nonnull %2127) #15
  %6100 = getelementptr inbounds %struct.regnode, ptr %6099, i64 0, i32 1
  %6101 = load i8, ptr %6100, align 1, !tbaa !141
  %6102 = zext i8 %6101 to i64
  %6103 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %6102
  %6104 = load i8, ptr %6103, align 1, !tbaa !17
  %6105 = icmp eq i8 %6104, 40
  br i1 %6105, label %6091, label %6846, !llvm.loop !288

6106:                                             ; preds = %5373
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.282, i32 noundef %4273) #15
  br label %6107

6107:                                             ; preds = %5373, %5373, %6106
  %6108 = and i32 %265, 1024
  %6109 = icmp eq i32 %6108, 0
  br i1 %6109, label %6111, label %6110

6110:                                             ; preds = %6107
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef %5, ptr noundef %2, i32 noundef %270)
  store ptr %120, ptr %117, align 8, !tbaa !180
  br label %6111

6111:                                             ; preds = %6110, %6107
  %6112 = and i32 %265, 4096
  %6113 = icmp eq i32 %6112, 0
  br i1 %6113, label %6135, label %6114

6114:                                             ; preds = %6111
  %6115 = load i8, ptr %2130, align 1, !tbaa !141
  %6116 = icmp eq i8 %6115, 29
  %6117 = load ptr, ptr %132, align 8, !tbaa !183
  br i1 %6116, label %6118, label %6134

6118:                                             ; preds = %6114
  %6119 = icmp eq ptr %6117, null
  br i1 %6119, label %6120, label %6121

6120:                                             ; preds = %6118
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1496) #15
  br label %6121

6121:                                             ; preds = %6120, %6118
  %6122 = getelementptr inbounds %struct.regnode_ssc, ptr %6117, i64 0, i32 1
  %6123 = load i8, ptr %6122, align 1, !tbaa !181
  %6124 = icmp eq i8 %6123, 19
  br i1 %6124, label %6125, label %6129

6125:                                             ; preds = %6121
  %6126 = getelementptr inbounds %struct.regnode_ssc, ptr %6117, i64 0, i32 2
  %6127 = load i16, ptr %6126, align 2, !tbaa !182
  %6128 = icmp eq i16 %6127, 1
  br i1 %6128, label %6130, label %6129

6129:                                             ; preds = %6125, %6121
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1498) #15
  br label %6130

6130:                                             ; preds = %6125, %6129
  %6131 = getelementptr inbounds %struct.regnode_ssc, ptr %6117, i64 0, i32 6
  %6132 = load ptr, ptr %6131, align 8, !tbaa !284
  %6133 = call ptr @Perl__add_range_to_invlist(ptr noundef %6132, i64 noundef 0, i64 noundef -1) #15
  store ptr %6133, ptr %6131, align 8, !tbaa !284
  br label %6135

6134:                                             ; preds = %6114
  call fastcc void @S_ssc_anything(ptr noundef %6117)
  br label %6135

6135:                                             ; preds = %6111, %6134, %6130
  %6136 = and i32 %265, -6145
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %27) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %26) #15
  br label %6835

6137:                                             ; preds = %5363
  %6138 = icmp eq i8 %4274, 91
  br i1 %6138, label %6139, label %6222

6139:                                             ; preds = %6137
  %6140 = and i32 %265, 6144
  %6141 = icmp eq i32 %6140, 0
  br i1 %6141, label %6211, label %6142

6142:                                             ; preds = %6139
  %6143 = and i32 %265, 2048
  %6144 = icmp eq i32 %6143, 0
  br i1 %6144, label %6181, label %6145

6145:                                             ; preds = %6142
  %6146 = load ptr, ptr %132, align 8, !tbaa !183
  %6147 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 15), align 8, !tbaa !5
  %6148 = icmp eq ptr %6146, null
  br i1 %6148, label %6149, label %6150

6149:                                             ; preds = %6145
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1483) #15
  br label %6150

6150:                                             ; preds = %6149, %6145
  %6151 = icmp eq ptr %6147, null
  br i1 %6151, label %6152, label %6153

6152:                                             ; preds = %6150
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 1483) #15
  br label %6153

6153:                                             ; preds = %6152, %6150
  %6154 = getelementptr inbounds %struct.regnode_ssc, ptr %6146, i64 0, i32 1
  %6155 = load i8, ptr %6154, align 1, !tbaa !181
  %6156 = icmp eq i8 %6155, 19
  br i1 %6156, label %6157, label %6161

6157:                                             ; preds = %6153
  %6158 = getelementptr inbounds %struct.regnode_ssc, ptr %6146, i64 0, i32 2
  %6159 = load i16, ptr %6158, align 2, !tbaa !182
  %6160 = icmp eq i16 %6159, 1
  br i1 %6160, label %6162, label %6161

6161:                                             ; preds = %6157, %6153
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1485) #15
  br label %6162

6162:                                             ; preds = %6157, %6161
  %6163 = getelementptr inbounds %struct.regnode_ssc, ptr %6146, i64 0, i32 6
  %6164 = load ptr, ptr %6163, align 8, !tbaa !284
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %6164, ptr noundef %6147, i1 noundef zeroext false, ptr noundef nonnull %6163) #15
  %6165 = load ptr, ptr %132, align 8, !tbaa !183
  %6166 = icmp eq ptr %6165, null
  br i1 %6166, label %6167, label %6168

6167:                                             ; preds = %6162
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1525) #15
  br label %6168

6168:                                             ; preds = %6167, %6162
  %6169 = getelementptr inbounds %struct.regnode_ssc, ptr %6165, i64 0, i32 1
  %6170 = load i8, ptr %6169, align 1, !tbaa !181
  %6171 = icmp eq i8 %6170, 19
  br i1 %6171, label %6172, label %6176

6172:                                             ; preds = %6168
  %6173 = getelementptr inbounds %struct.regnode_ssc, ptr %6165, i64 0, i32 2
  %6174 = load i16, ptr %6173, align 2, !tbaa !182
  %6175 = icmp eq i16 %6174, 1
  br i1 %6175, label %6177, label %6176

6176:                                             ; preds = %6172, %6168
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1527) #15
  br label %6177

6177:                                             ; preds = %6172, %6176
  %6178 = getelementptr inbounds %struct.regnode_charclass_class, ptr %6165, i64 0, i32 5
  store i32 0, ptr %6178, align 4, !tbaa !243
  %6179 = load i8, ptr %6165, align 8, !tbaa !198
  %6180 = and i8 %6179, -13
  store i8 %6180, ptr %6165, align 8, !tbaa !198
  br label %6205

6181:                                             ; preds = %6142
  %6182 = and i32 %265, 4096
  %6183 = icmp eq i32 %6182, 0
  br i1 %6183, label %6209, label %6184

6184:                                             ; preds = %6181
  %6185 = load ptr, ptr %132, align 8, !tbaa !183
  %6186 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 15), align 8, !tbaa !5
  %6187 = icmp eq ptr %6185, null
  br i1 %6187, label %6188, label %6189

6188:                                             ; preds = %6184
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1468) #15
  br label %6189

6189:                                             ; preds = %6188, %6184
  %6190 = icmp eq ptr %6186, null
  br i1 %6190, label %6191, label %6192

6191:                                             ; preds = %6189
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 1468) #15
  br label %6192

6192:                                             ; preds = %6191, %6189
  %6193 = getelementptr inbounds %struct.regnode_ssc, ptr %6185, i64 0, i32 1
  %6194 = load i8, ptr %6193, align 1, !tbaa !181
  %6195 = icmp eq i8 %6194, 19
  br i1 %6195, label %6196, label %6200

6196:                                             ; preds = %6192
  %6197 = getelementptr inbounds %struct.regnode_ssc, ptr %6185, i64 0, i32 2
  %6198 = load i16, ptr %6197, align 2, !tbaa !182
  %6199 = icmp eq i16 %6198, 1
  br i1 %6199, label %6201, label %6200

6200:                                             ; preds = %6196, %6192
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1470) #15
  br label %6201

6201:                                             ; preds = %6196, %6200
  %6202 = getelementptr inbounds %struct.regnode_ssc, ptr %6185, i64 0, i32 6
  %6203 = load ptr, ptr %6202, align 8, !tbaa !284
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %6203, ptr noundef %6186, i1 noundef zeroext false, ptr noundef nonnull %6202) #15
  %6204 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %6204, ptr noundef %264)
  br label %6205

6205:                                             ; preds = %6177, %6201
  %6206 = load ptr, ptr %132, align 8, !tbaa !183
  %6207 = load i8, ptr %6206, align 8, !tbaa !198
  %6208 = and i8 %6207, -2
  store i8 %6208, ptr %6206, align 8, !tbaa !198
  br label %6209

6209:                                             ; preds = %6205, %6181
  %6210 = and i32 %265, -6145
  br label %6211

6211:                                             ; preds = %6209, %6139
  %6212 = phi i32 [ %6210, %6209 ], [ %265, %6139 ]
  %6213 = add nsw i64 %267, 1
  %6214 = icmp eq i64 %269, 9223372036854775807
  %6215 = add nsw i64 %269, 1
  %6216 = select i1 %6214, i64 9223372036854775807, i64 %6215
  %6217 = and i32 %6212, 1024
  %6218 = icmp eq i32 %6217, 0
  br i1 %6218, label %6835, label %6219

6219:                                             ; preds = %6211
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef %5, ptr noundef %2, i32 noundef %270)
  %6220 = load <2 x i64>, ptr %5, align 8, !tbaa !9
  %6221 = add nsw <2 x i64> %6220, <i64 1, i64 1>
  store <2 x i64> %6221, ptr %5, align 8, !tbaa !9
  store ptr %120, ptr %117, align 8, !tbaa !180
  br label %6835

6222:                                             ; preds = %6137
  %6223 = getelementptr inbounds [0 x i8], ptr @PL_simple_bitmask, i64 0, i64 %5365
  %6224 = load i8, ptr %6223, align 1, !tbaa !17
  %6225 = zext i8 %6224 to i32
  %6226 = and i32 %5370, %6225
  %6227 = icmp eq i32 %6226, 0
  br i1 %6227, label %6432, label %6228

6228:                                             ; preds = %6222
  %6229 = and i32 %265, 1024
  %6230 = icmp eq i32 %6229, 0
  br i1 %6230, label %6234, label %6231

6231:                                             ; preds = %6228
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef %5, ptr noundef %2, i32 noundef %270)
  %6232 = load i64, ptr %5, align 8, !tbaa !251
  %6233 = add nsw i64 %6232, 1
  store i64 %6233, ptr %5, align 8, !tbaa !251
  br label %6234

6234:                                             ; preds = %6231, %6228
  %6235 = add nsw i64 %267, 1
  %6236 = and i32 %265, 6144
  %6237 = icmp eq i32 %6236, 0
  br i1 %6237, label %6835, label %6238

6238:                                             ; preds = %6234
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %30) #15
  store ptr null, ptr %30, align 8, !tbaa !5
  %6239 = load ptr, ptr %132, align 8, !tbaa !183
  %6240 = load i8, ptr %6239, align 8, !tbaa !198
  %6241 = and i8 %6240, -2
  store i8 %6241, ptr %6239, align 8, !tbaa !198
  %6242 = load ptr, ptr %16, align 8, !tbaa !5
  %6243 = getelementptr inbounds %struct.regnode, ptr %6242, i64 0, i32 1
  %6244 = load i8, ptr %6243, align 1, !tbaa !141
  switch i8 %6244, label %6245 [
    i8 18, label %6247
    i8 17, label %6247
    i8 16, label %6252
    i8 20, label %6272
    i8 19, label %6272
    i8 26, label %6277
    i8 22, label %6278
    i8 28, label %6324
    i8 24, label %6325
    i8 25, label %6337
    i8 27, label %6337
    i8 21, label %6338
    i8 23, label %6338
  ]

6245:                                             ; preds = %6238
  %6246 = zext i8 %6244 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.283, i32 noundef %6246) #15
  br label %6247

6247:                                             ; preds = %6238, %6238, %6245
  %6248 = and i32 %265, 4096
  %6249 = icmp eq i32 %6248, 0
  br i1 %6249, label %6425, label %6250

6250:                                             ; preds = %6247
  %6251 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_add_range(ptr noundef %6251, i64 noundef 0, i64 noundef -1)
  br label %6425

6252:                                             ; preds = %6238
  %6253 = call ptr @Perl__new_invlist(i64 noundef 2) #15
  %6254 = call ptr @Perl__add_range_to_invlist(ptr noundef %6253, i64 noundef 10, i64 noundef 10) #15
  %6255 = and i32 %265, 4096
  %6256 = icmp eq i32 %6255, 0
  br i1 %6256, label %6259, label %6257

6257:                                             ; preds = %6252
  %6258 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_union(ptr noundef %6258, ptr noundef %6254, i1 noundef zeroext true)
  br label %6265

6259:                                             ; preds = %6252
  %6260 = and i32 %265, 2048
  %6261 = icmp eq i32 %6260, 0
  br i1 %6261, label %6265, label %6262

6262:                                             ; preds = %6259
  %6263 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_intersection(ptr noundef %6263, ptr noundef %6254, i1 noundef zeroext true)
  %6264 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_clear_locale(ptr noundef %6264)
  br label %6265

6265:                                             ; preds = %6259, %6262, %6257
  %6266 = getelementptr inbounds %struct.sv, ptr %6254, i64 0, i32 1
  %6267 = load i32, ptr %6266, align 8, !tbaa !37
  %6268 = icmp ugt i32 %6267, 1
  br i1 %6268, label %6269, label %6271

6269:                                             ; preds = %6265
  %6270 = add i32 %6267, -1
  store i32 %6270, ptr %6266, align 8, !tbaa !37
  br label %6425

6271:                                             ; preds = %6265
  call void @Perl_sv_free2(ptr noundef nonnull %6254, i32 noundef %6267) #15
  br label %6425

6272:                                             ; preds = %6238, %6238
  %6273 = and i32 %265, 2048
  %6274 = icmp eq i32 %6273, 0
  br i1 %6274, label %6276, label %6275

6275:                                             ; preds = %6272
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef nonnull %6239, ptr noundef nonnull %6242)
  br label %6425

6276:                                             ; preds = %6272
  call fastcc void @S_ssc_or(ptr noundef %0, ptr noundef nonnull %6239, ptr noundef nonnull %6242)
  br label %6425

6277:                                             ; preds = %6238
  br label %6278

6278:                                             ; preds = %6238, %6277
  %6279 = phi i1 [ false, %6238 ], [ true, %6277 ]
  %6280 = load i8, ptr %6242, align 2, !tbaa !143
  %6281 = shl i8 %6280, 1
  %6282 = zext i1 %6279 to i8
  %6283 = or i8 %6281, %6282
  %6284 = and i32 %265, 2048
  %6285 = icmp eq i32 %6284, 0
  br i1 %6285, label %6298, label %6286

6286:                                             ; preds = %6278
  %6287 = getelementptr inbounds %struct.regnode_charclass_class, ptr %6239, i64 0, i32 5
  %6288 = load i32, ptr %6287, align 4, !tbaa !243
  %6289 = zext i8 %6283 to i32
  %6290 = shl nuw i32 1, %6289
  %6291 = and i32 %6288, %6290
  %6292 = icmp eq i32 %6291, 0
  %6293 = select i1 %6292, i32 0, i32 %6290
  store i32 %6293, ptr %6287, align 4
  %6294 = call ptr @Perl__new_invlist(i64 noundef 0) #15
  %6295 = call ptr @Perl_sv_2mortal(ptr noundef %6294) #15
  %6296 = load ptr, ptr %132, align 8, !tbaa !183
  %6297 = getelementptr inbounds %struct.regnode_ssc, ptr %6296, i64 0, i32 6
  store ptr %6295, ptr %6297, align 8, !tbaa !284
  br label %6425

6298:                                             ; preds = %6278
  %6299 = zext i8 %6283 to i32
  %6300 = select i1 %6279, i32 -1, i32 1
  %6301 = add nsw i32 %6300, %6299
  %6302 = and i32 %265, 4096
  %6303 = icmp eq i32 %6302, 0
  br i1 %6303, label %6304, label %6306

6304:                                             ; preds = %6298
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.284, i32 noundef 5132) #15
  %6305 = load ptr, ptr %132, align 8, !tbaa !183
  br label %6306

6306:                                             ; preds = %6298, %6304
  %6307 = phi ptr [ %6239, %6298 ], [ %6305, %6304 ]
  %6308 = getelementptr inbounds %struct.regnode_charclass_class, ptr %6307, i64 0, i32 5
  %6309 = load i32, ptr %6308, align 4, !tbaa !243
  %6310 = shl nuw i32 1, %6301
  %6311 = and i32 %6309, %6310
  %6312 = icmp eq i32 %6311, 0
  br i1 %6312, label %6321, label %6313

6313:                                             ; preds = %6306
  call fastcc void @S_ssc_add_range(ptr noundef nonnull %6307, i64 noundef 0, i64 noundef -1)
  %6314 = shl nuw i32 1, %6299
  %6315 = load ptr, ptr %132, align 8, !tbaa !183
  %6316 = getelementptr inbounds %struct.regnode_charclass_class, ptr %6315, i64 0, i32 5
  %6317 = load i32, ptr %6316, align 4, !tbaa !243
  %6318 = or i32 %6310, %6314
  %6319 = xor i32 %6318, -1
  %6320 = and i32 %6317, %6319
  store i32 %6320, ptr %6316, align 4, !tbaa !243
  br label %6425

6321:                                             ; preds = %6306
  %6322 = shl nuw i32 1, %6299
  %6323 = or i32 %6309, %6322
  store i32 %6323, ptr %6308, align 4, !tbaa !243
  br label %6425

6324:                                             ; preds = %6238
  br label %6325

6325:                                             ; preds = %6238, %6324
  %6326 = phi i8 [ 0, %6238 ], [ 1, %6324 ]
  %6327 = load i8, ptr %6242, align 2, !tbaa !143
  %6328 = icmp eq i8 %6327, 14
  br i1 %6328, label %6329, label %6332

6329:                                             ; preds = %6325
  %6330 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 14), align 16, !tbaa !5
  %6331 = call fastcc ptr @S_invlist_clone(ptr noundef %6330)
  store ptr %6331, ptr %30, align 8, !tbaa !5
  br label %6349

6332:                                             ; preds = %6325
  %6333 = zext i8 %6327 to i64
  %6334 = getelementptr inbounds [16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 %6333
  %6335 = load ptr, ptr %6334, align 8, !tbaa !5
  %6336 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 14), align 16, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %6335, ptr noundef %6336, i1 noundef zeroext false, ptr noundef nonnull %30) #15
  br label %6349

6337:                                             ; preds = %6238, %6238
  br label %6338

6338:                                             ; preds = %6238, %6238, %6337
  %6339 = phi i8 [ 0, %6238 ], [ 0, %6238 ], [ 1, %6337 ]
  %6340 = load i8, ptr %6242, align 2, !tbaa !143
  %6341 = zext i8 %6340 to i64
  %6342 = getelementptr inbounds [16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 %6341
  %6343 = load ptr, ptr %6342, align 8, !tbaa !5
  %6344 = call fastcc ptr @S_invlist_clone(ptr noundef %6343)
  store ptr %6344, ptr %30, align 8, !tbaa !5
  %6345 = load i8, ptr %6243, align 1, !tbaa !141
  %6346 = icmp eq i8 %6345, 25
  br i1 %6346, label %6347, label %6349

6347:                                             ; preds = %6338
  %6348 = load ptr, ptr @PL_UpperLatin1, align 8, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %6344, ptr noundef %6348, i1 noundef zeroext true, ptr noundef nonnull %30) #15
  br label %6349

6349:                                             ; preds = %6338, %6347, %6329, %6332
  %6350 = phi i8 [ %6339, %6347 ], [ %6339, %6338 ], [ %6326, %6329 ], [ %6326, %6332 ]
  %6351 = and i32 %265, 2048
  %6352 = icmp eq i32 %6351, 0
  br i1 %6352, label %6390, label %6353

6353:                                             ; preds = %6349
  %6354 = load ptr, ptr %132, align 8, !tbaa !183
  %6355 = load ptr, ptr %30, align 8, !tbaa !5
  %6356 = icmp ne i8 %6350, 0
  %6357 = icmp eq ptr %6354, null
  br i1 %6357, label %6358, label %6359

6358:                                             ; preds = %6353
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1483) #15
  br label %6359

6359:                                             ; preds = %6358, %6353
  %6360 = icmp eq ptr %6355, null
  br i1 %6360, label %6361, label %6362

6361:                                             ; preds = %6359
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 1483) #15
  br label %6362

6362:                                             ; preds = %6361, %6359
  %6363 = getelementptr inbounds %struct.regnode_ssc, ptr %6354, i64 0, i32 1
  %6364 = load i8, ptr %6363, align 1, !tbaa !181
  %6365 = icmp eq i8 %6364, 19
  br i1 %6365, label %6366, label %6370

6366:                                             ; preds = %6362
  %6367 = getelementptr inbounds %struct.regnode_ssc, ptr %6354, i64 0, i32 2
  %6368 = load i16, ptr %6367, align 2, !tbaa !182
  %6369 = icmp eq i16 %6368, 1
  br i1 %6369, label %6371, label %6370

6370:                                             ; preds = %6366, %6362
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1485) #15
  br label %6371

6371:                                             ; preds = %6366, %6370
  %6372 = getelementptr inbounds %struct.regnode_ssc, ptr %6354, i64 0, i32 6
  %6373 = load ptr, ptr %6372, align 8, !tbaa !284
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %6373, ptr noundef %6355, i1 noundef zeroext %6356, ptr noundef nonnull %6372) #15
  %6374 = load ptr, ptr %132, align 8, !tbaa !183
  %6375 = icmp eq ptr %6374, null
  br i1 %6375, label %6376, label %6377

6376:                                             ; preds = %6371
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1525) #15
  br label %6377

6377:                                             ; preds = %6376, %6371
  %6378 = getelementptr inbounds %struct.regnode_ssc, ptr %6374, i64 0, i32 1
  %6379 = load i8, ptr %6378, align 1, !tbaa !181
  %6380 = icmp eq i8 %6379, 19
  br i1 %6380, label %6381, label %6385

6381:                                             ; preds = %6377
  %6382 = getelementptr inbounds %struct.regnode_ssc, ptr %6374, i64 0, i32 2
  %6383 = load i16, ptr %6382, align 2, !tbaa !182
  %6384 = icmp eq i16 %6383, 1
  br i1 %6384, label %6386, label %6385

6385:                                             ; preds = %6381, %6377
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1527) #15
  br label %6386

6386:                                             ; preds = %6381, %6385
  %6387 = getelementptr inbounds %struct.regnode_charclass_class, ptr %6374, i64 0, i32 5
  store i32 0, ptr %6387, align 4, !tbaa !243
  %6388 = load i8, ptr %6374, align 8, !tbaa !198
  %6389 = and i8 %6388, -13
  store i8 %6389, ptr %6374, align 8, !tbaa !198
  br label %6415

6390:                                             ; preds = %6349
  %6391 = and i32 %265, 4096
  %6392 = icmp eq i32 %6391, 0
  br i1 %6392, label %6393, label %6394

6393:                                             ; preds = %6390
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.284, i32 noundef 5191) #15
  br label %6394

6394:                                             ; preds = %6390, %6393
  %6395 = load ptr, ptr %132, align 8, !tbaa !183
  %6396 = load ptr, ptr %30, align 8, !tbaa !5
  %6397 = icmp ne i8 %6350, 0
  %6398 = icmp eq ptr %6395, null
  br i1 %6398, label %6399, label %6400

6399:                                             ; preds = %6394
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1468) #15
  br label %6400

6400:                                             ; preds = %6399, %6394
  %6401 = icmp eq ptr %6396, null
  br i1 %6401, label %6402, label %6403

6402:                                             ; preds = %6400
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 1468) #15
  br label %6403

6403:                                             ; preds = %6402, %6400
  %6404 = getelementptr inbounds %struct.regnode_ssc, ptr %6395, i64 0, i32 1
  %6405 = load i8, ptr %6404, align 1, !tbaa !181
  %6406 = icmp eq i8 %6405, 19
  br i1 %6406, label %6407, label %6411

6407:                                             ; preds = %6403
  %6408 = getelementptr inbounds %struct.regnode_ssc, ptr %6395, i64 0, i32 2
  %6409 = load i16, ptr %6408, align 2, !tbaa !182
  %6410 = icmp eq i16 %6409, 1
  br i1 %6410, label %6412, label %6411

6411:                                             ; preds = %6407, %6403
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1470) #15
  br label %6412

6412:                                             ; preds = %6407, %6411
  %6413 = getelementptr inbounds %struct.regnode_ssc, ptr %6395, i64 0, i32 6
  %6414 = load ptr, ptr %6413, align 8, !tbaa !284
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %6414, ptr noundef %6396, i1 noundef zeroext %6397, ptr noundef nonnull %6413) #15
  br label %6415

6415:                                             ; preds = %6412, %6386
  %6416 = load ptr, ptr %30, align 8, !tbaa !5
  %6417 = icmp eq ptr %6416, null
  br i1 %6417, label %6425, label %6418

6418:                                             ; preds = %6415
  %6419 = getelementptr inbounds %struct.sv, ptr %6416, i64 0, i32 1
  %6420 = load i32, ptr %6419, align 8, !tbaa !37
  %6421 = icmp ugt i32 %6420, 1
  br i1 %6421, label %6422, label %6424

6422:                                             ; preds = %6418
  %6423 = add i32 %6420, -1
  store i32 %6423, ptr %6419, align 8, !tbaa !37
  br label %6425

6424:                                             ; preds = %6418
  call void @Perl_sv_free2(ptr noundef nonnull %6416, i32 noundef %6420) #15
  br label %6425

6425:                                             ; preds = %6424, %6422, %6415, %6271, %6269, %6313, %6321, %6286, %6275, %6276, %6247, %6250
  %6426 = and i32 %265, 4096
  %6427 = icmp eq i32 %6426, 0
  br i1 %6427, label %6430, label %6428

6428:                                             ; preds = %6425
  %6429 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %6429, ptr noundef %264)
  br label %6430

6430:                                             ; preds = %6428, %6425
  %6431 = and i32 %265, -6145
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %30) #15
  br label %6835

6432:                                             ; preds = %6222
  %6433 = icmp ne i8 %4277, 4
  %6434 = and i32 %265, 1024
  %6435 = icmp eq i32 %6434, 0
  %6436 = select i1 %6433, i1 true, i1 %6435
  br i1 %6436, label %6442, label %6437

6437:                                             ; preds = %6432
  %6438 = icmp eq i8 %4274, 5
  %6439 = select i1 %6438, i32 2, i32 1
  %6440 = load i32, ptr %110, align 8, !tbaa !185
  %6441 = or i32 %6440, %6439
  store i32 %6441, ptr %110, align 8, !tbaa !185
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef %5, ptr noundef %2, i32 noundef %270)
  br label %6835

6442:                                             ; preds = %6432
  %6443 = icmp eq i8 %4277, 62
  br i1 %6443, label %6444, label %6550

6444:                                             ; preds = %6442
  %6445 = load i8, ptr %2127, align 2, !tbaa !143
  %6446 = icmp ne i8 %6445, 0
  %6447 = or i1 %108, %6446
  %6448 = and i32 %265, 6144
  %6449 = icmp ne i32 %6448, 0
  %6450 = select i1 %6447, i1 true, i1 %6449
  %6451 = add i8 %4274, -63
  %6452 = icmp ult i8 %6451, 2
  %6453 = and i1 %6452, %6450
  br i1 %6453, label %6454, label %6550

6454:                                             ; preds = %6444
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %31) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %32) #15
  store i64 0, ptr %32, align 8, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %33) #15
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %34) #15
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %17, i8 0, i64 152, i1 false)
  br i1 %108, label %6455, label %6458

6455:                                             ; preds = %6454
  %6456 = load i32, ptr %111, align 4, !tbaa !253
  store i32 %6456, ptr %142, align 4, !tbaa !253
  %6457 = load ptr, ptr %112, align 8, !tbaa !184
  br label %6458

6458:                                             ; preds = %6454, %6455
  %6459 = phi ptr [ %6457, %6455 ], [ %32, %6454 ]
  store ptr %6459, ptr %141, align 8, !tbaa !184
  store i64 %269, ptr %143, align 8, !tbaa !252
  br i1 %6449, label %6460, label %6467

6460:                                             ; preds = %6458
  %6461 = load i8, ptr %2127, align 2, !tbaa !143
  %6462 = icmp eq i8 %6461, 0
  br i1 %6462, label %6463, label %6467

6463:                                             ; preds = %6460
  %6464 = load i8, ptr %2130, align 1, !tbaa !141
  %6465 = icmp eq i8 %6464, 63
  br i1 %6465, label %6466, label %6467

6466:                                             ; preds = %6463
  call fastcc void @S_ssc_init(ptr noundef %0, ptr noundef nonnull %34)
  store ptr %34, ptr %148, align 8, !tbaa !183
  br label %6467

6467:                                             ; preds = %6466, %6463, %6460, %6458
  %6468 = phi i1 [ true, %6460 ], [ false, %6466 ], [ true, %6463 ], [ true, %6458 ]
  %6469 = phi i32 [ 0, %6460 ], [ 2048, %6466 ], [ 0, %6463 ], [ 0, %6458 ]
  %6470 = and i32 %265, 8192
  %6471 = or i32 %6469, %6470
  %6472 = load ptr, ptr %16, align 8, !tbaa !5
  %6473 = call ptr @Perl_regnext(ptr noundef %6472) #15
  %6474 = getelementptr inbounds %struct.regnode, ptr %6472, i64 2
  store ptr %6474, ptr %33, align 8, !tbaa !5
  %6475 = add i32 %266, 1
  %6476 = call fastcc i64 @S_study_chunk(ptr noundef %0, ptr noundef nonnull %33, ptr noundef %2, ptr noundef nonnull %31, ptr noundef nonnull %261, ptr noundef nonnull %17, i32 noundef %262, i32 noundef %263, i32 noundef %6471, i32 noundef %6475)
  %6477 = load i8, ptr %6472, align 2, !tbaa !143
  %6478 = icmp eq i8 %6477, 0
  br i1 %6478, label %6524, label %6479

6479:                                             ; preds = %6467
  %6480 = load i64, ptr %31, align 8, !tbaa !9
  %6481 = icmp eq i64 %6480, 0
  br i1 %6481, label %6501, label %6482

6482:                                             ; preds = %6479
  %6483 = load ptr, ptr %156, align 8, !tbaa !107
  %6484 = load ptr, ptr %157, align 8, !tbaa !65
  %6485 = ptrtoint ptr %6483 to i64
  %6486 = ptrtoint ptr %6484 to i64
  %6487 = sub i64 %6485, %6486
  %6488 = load ptr, ptr %159, align 8, !tbaa !112
  %6489 = icmp eq ptr %6488, %160
  br i1 %6489, label %6493, label %6490

6490:                                             ; preds = %6482
  %6491 = load ptr, ptr %155, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %6491, i32 noundef 11) #15
  %6492 = load ptr, ptr %157, align 8, !tbaa !65
  br label %6493

6493:                                             ; preds = %6490, %6482
  %6494 = phi ptr [ %6492, %6490 ], [ %6484, %6482 ]
  %6495 = icmp sgt i64 %6487, 127
  %6496 = select i1 %6495, ptr @.str.20, ptr @.str.8
  %6497 = select i1 %6495, i64 117, i64 %6487
  %6498 = load i32, ptr %126, align 8, !tbaa !50
  %6499 = icmp ne i32 %6498, 0
  %6500 = zext i1 %6499 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.285, i32 noundef %6500, i64 noundef %6497, ptr noundef %6494, ptr noundef nonnull %6496) #15
  br label %6522

6501:                                             ; preds = %6479
  %6502 = icmp sgt i64 %6476, 255
  br i1 %6502, label %6503, label %6522

6503:                                             ; preds = %6501
  %6504 = load ptr, ptr %156, align 8, !tbaa !107
  %6505 = load ptr, ptr %157, align 8, !tbaa !65
  %6506 = ptrtoint ptr %6504 to i64
  %6507 = ptrtoint ptr %6505 to i64
  %6508 = sub i64 %6506, %6507
  %6509 = load ptr, ptr %159, align 8, !tbaa !112
  %6510 = icmp eq ptr %6509, %160
  br i1 %6510, label %6514, label %6511

6511:                                             ; preds = %6503
  %6512 = load ptr, ptr %155, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %6512, i32 noundef 11) #15
  %6513 = load ptr, ptr %157, align 8, !tbaa !65
  br label %6514

6514:                                             ; preds = %6511, %6503
  %6515 = phi ptr [ %6513, %6511 ], [ %6505, %6503 ]
  %6516 = icmp sgt i64 %6508, 127
  %6517 = select i1 %6516, ptr @.str.20, ptr @.str.8
  %6518 = select i1 %6516, i64 117, i64 %6508
  %6519 = load i32, ptr %126, align 8, !tbaa !50
  %6520 = icmp ne i32 %6519, 0
  %6521 = zext i1 %6520 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.286, i64 noundef 255, i32 noundef %6521, i64 noundef %6518, ptr noundef %6515, ptr noundef nonnull %6517) #15
  br label %6522

6522:                                             ; preds = %6501, %6514, %6493
  %6523 = trunc i64 %6476 to i8
  store i8 %6523, ptr %6472, align 2, !tbaa !143
  br label %6524

6524:                                             ; preds = %6522, %6467
  br i1 %108, label %6525, label %6538

6525:                                             ; preds = %6524
  %6526 = load i32, ptr %149, align 8, !tbaa !185
  %6527 = and i32 %6526, 384
  %6528 = icmp ne i32 %6527, 0
  %6529 = zext i1 %6528 to i32
  %6530 = add nsw i32 %268, %6529
  %6531 = and i32 %6526, 512
  %6532 = icmp eq i32 %6531, 0
  br i1 %6532, label %6536, label %6533

6533:                                             ; preds = %6525
  %6534 = load i32, ptr %110, align 8, !tbaa !185
  %6535 = or i32 %6534, 512
  store i32 %6535, ptr %110, align 8, !tbaa !185
  br label %6536

6536:                                             ; preds = %6533, %6525
  %6537 = load i32, ptr %142, align 4, !tbaa !253
  store i32 %6537, ptr %111, align 4, !tbaa !253
  br label %6538

6538:                                             ; preds = %6536, %6524
  %6539 = phi i32 [ %6530, %6536 ], [ %268, %6524 ]
  br i1 %6468, label %6549, label %6540

6540:                                             ; preds = %6538
  %6541 = and i32 %265, 4096
  %6542 = icmp eq i32 %6541, 0
  %6543 = load ptr, ptr %132, align 8, !tbaa !183
  br i1 %6542, label %6545, label %6544

6544:                                             ; preds = %6540
  call fastcc void @S_ssc_init(ptr noundef %0, ptr noundef %6543)
  br label %6549

6545:                                             ; preds = %6540
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %6543, ptr noundef nonnull %34)
  %6546 = load ptr, ptr %132, align 8, !tbaa !183
  %6547 = load i8, ptr %6546, align 8, !tbaa !198
  %6548 = or i8 %6547, 1
  store i8 %6548, ptr %6546, align 8, !tbaa !198
  br label %6549

6549:                                             ; preds = %6544, %6545, %6538
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %34) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %33) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %32) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %31) #15
  br label %6835

6550:                                             ; preds = %6444, %6442
  switch i8 %4274, label %6585 [
    i8 49, label %6551
    i8 50, label %6557
    i8 68, label %6581
  ]

6551:                                             ; preds = %6550
  %6552 = getelementptr inbounds %struct.regnode_1, ptr %2127, i64 0, i32 3
  %6553 = load i32, ptr %6552, align 4, !tbaa !148
  %6554 = icmp ne i32 %262, %6553
  %6555 = zext i1 %6554 to i32
  %6556 = add nsw i32 %268, %6555
  br label %6835

6557:                                             ; preds = %6550
  %6558 = getelementptr inbounds %struct.regnode_1, ptr %2127, i64 0, i32 3
  %6559 = load i32, ptr %6558, align 4, !tbaa !148
  %6560 = icmp eq i32 %262, %6559
  br i1 %6560, label %6865, label %6561

6561:                                             ; preds = %6557
  %6562 = icmp eq i32 %6559, %272
  br i1 %6562, label %6563, label %6573

6563:                                             ; preds = %6561
  %6564 = call ptr @Perl_regnext(ptr noundef nonnull %2127) #15
  %6565 = icmp eq ptr %6564, null
  br i1 %6565, label %6573, label %6566

6566:                                             ; preds = %6563
  %6567 = getelementptr inbounds %struct.regnode, ptr %6564, i64 0, i32 1
  %6568 = load i8, ptr %6567, align 1, !tbaa !141
  %6569 = icmp ne i8 %6568, 48
  %6570 = icmp ult ptr %6564, %261
  %6571 = select i1 %6569, i1 %6570, i1 false
  %6572 = select i1 %6571, i32 0, i32 %272
  br label %6573

6573:                                             ; preds = %6566, %6563, %6561
  %6574 = phi i32 [ %272, %6563 ], [ %272, %6561 ], [ %6572, %6566 ]
  br i1 %108, label %6575, label %6835

6575:                                             ; preds = %6573
  %6576 = load ptr, ptr %16, align 8, !tbaa !5
  %6577 = getelementptr inbounds %struct.regnode_1, ptr %6576, i64 0, i32 3
  %6578 = load i32, ptr %6577, align 4, !tbaa !148
  %6579 = zext i32 %6578 to i64
  %6580 = load ptr, ptr %112, align 8, !tbaa !184
  store i64 %6579, ptr %6580, align 8, !tbaa !9
  br label %6835

6581:                                             ; preds = %6550
  br i1 %108, label %6582, label %6835

6582:                                             ; preds = %6581
  %6583 = load i32, ptr %110, align 8, !tbaa !185
  %6584 = or i32 %6583, 512
  store i32 %6584, ptr %110, align 8, !tbaa !185
  br label %6835

6585:                                             ; preds = %6550
  %6586 = icmp eq i8 %4277, 81
  br i1 %6586, label %6587, label %6601

6587:                                             ; preds = %6585
  br i1 %6435, label %6590, label %6588

6588:                                             ; preds = %6587
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef %5, ptr noundef %2, i32 noundef %270)
  %6589 = and i32 %265, -1025
  br label %6590

6590:                                             ; preds = %6588, %6587
  %6591 = phi i32 [ %6589, %6588 ], [ %265, %6587 ]
  br i1 %108, label %6592, label %6835

6592:                                             ; preds = %6590
  %6593 = load ptr, ptr %16, align 8, !tbaa !5
  %6594 = getelementptr inbounds %struct.regnode, ptr %6593, i64 0, i32 1
  %6595 = load i8, ptr %6594, align 1, !tbaa !141
  %6596 = icmp eq i8 %6595, 83
  br i1 %6596, label %6597, label %6835

6597:                                             ; preds = %6592
  %6598 = load i32, ptr %110, align 8, !tbaa !185
  %6599 = or i32 %6598, 32768
  store i32 %6599, ptr %110, align 8, !tbaa !185
  %6600 = call i64 @llvm.smin.i64(i64 %274, i64 %267)
  br label %6835

6601:                                             ; preds = %6585
  switch i8 %4274, label %6642 [
    i8 70, label %6602
    i8 7, label %6614
  ]

6602:                                             ; preds = %6601
  %6603 = load i8, ptr %2127, align 2, !tbaa !143
  %6604 = icmp eq i8 %6603, 2
  br i1 %6604, label %6605, label %6642

6605:                                             ; preds = %6602
  br i1 %6435, label %6607, label %6606

6606:                                             ; preds = %6605
  call fastcc void @S_scan_commit(ptr noundef %0, ptr noundef %5, ptr noundef %2, i32 noundef %270)
  store ptr %120, ptr %117, align 8, !tbaa !180
  br label %6607

6607:                                             ; preds = %6606, %6605
  %6608 = and i32 %265, 4096
  %6609 = icmp eq i32 %6608, 0
  br i1 %6609, label %6612, label %6610

6610:                                             ; preds = %6607
  %6611 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_anything(ptr noundef %6611)
  br label %6612

6612:                                             ; preds = %6610, %6607
  %6613 = and i32 %265, -6145
  br label %6835

6614:                                             ; preds = %6601
  %6615 = load ptr, ptr %123, align 8, !tbaa !129
  %6616 = getelementptr inbounds %struct.regexp, ptr %6615, i64 0, i32 13
  %6617 = load i32, ptr %6616, align 4, !tbaa !125
  %6618 = and i32 %6617, 512
  %6619 = icmp ne i32 %6618, 0
  %6620 = icmp ne i64 %269, 0
  %6621 = select i1 %6619, i1 true, i1 %6620
  %6622 = icmp ne i32 %270, 0
  %6623 = select i1 %6621, i1 true, i1 %6622
  br i1 %6623, label %6639, label %6624

6624:                                             ; preds = %6614
  br i1 %108, label %6625, label %6628

6625:                                             ; preds = %6624
  %6626 = load i64, ptr %109, align 8, !tbaa !252
  %6627 = icmp eq i64 %6626, 0
  br i1 %6627, label %6628, label %6639

6628:                                             ; preds = %6625, %6624
  %6629 = and i32 %6617, 7168
  %6630 = icmp ne i32 %6629, 0
  %6631 = select i1 %6630, i1 true, i1 %6435
  br i1 %6631, label %6634, label %6632

6632:                                             ; preds = %6628
  %6633 = or i32 %6617, 4096
  store i32 %6633, ptr %6616, align 4, !tbaa !125
  br label %6634

6634:                                             ; preds = %6632, %6628
  %6635 = getelementptr inbounds %struct.regexp, ptr %6615, i64 0, i32 10
  %6636 = load i64, ptr %6635, align 8, !tbaa !289
  %6637 = icmp ult i64 %6636, %267
  br i1 %6637, label %6638, label %6835

6638:                                             ; preds = %6634
  store i64 %267, ptr %6635, align 8, !tbaa !289
  br label %6835

6639:                                             ; preds = %6625, %6614
  %6640 = or i32 %6617, 512
  store i32 %6640, ptr %6616, align 4, !tbaa !125
  %6641 = getelementptr inbounds %struct.regexp, ptr %6615, i64 0, i32 10
  store i64 0, ptr %6641, align 8, !tbaa !289
  br label %6835

6642:                                             ; preds = %6601, %6602
  %6643 = icmp eq i8 %4277, 72
  br i1 %6643, label %6644, label %6835

6644:                                             ; preds = %6642
  %6645 = call ptr @Perl_regnext(ptr noundef nonnull %2127) #15
  %6646 = load ptr, ptr %127, align 8, !tbaa !130
  %6647 = getelementptr inbounds %struct.regexp_internal, ptr %6646, i64 0, i32 3
  %6648 = load ptr, ptr %6647, align 8, !tbaa !147
  %6649 = load ptr, ptr %16, align 8, !tbaa !5
  %6650 = getelementptr inbounds %struct.regnode_1, ptr %6649, i64 0, i32 3
  %6651 = load i32, ptr %6650, align 4, !tbaa !148
  %6652 = zext i32 %6651 to i64
  %6653 = getelementptr inbounds %struct.reg_data, ptr %6648, i64 0, i32 2, i64 %6652
  %6654 = load ptr, ptr %6653, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %35) #15
  br i1 %6435, label %6656, label %6655

6655:                                             ; preds = %6644
  call fastcc void @S_scan_commit(ptr noundef nonnull %0, ptr noundef %5, ptr noundef %2, i32 noundef %270)
  br label %6656

6656:                                             ; preds = %6655, %6644
  %6657 = and i32 %265, 6144
  %6658 = icmp eq i32 %6657, 0
  br i1 %6658, label %6660, label %6659

6659:                                             ; preds = %6656
  call fastcc void @S_ssc_init(ptr noundef nonnull %0, ptr noundef nonnull %35)
  br label %6660

6660:                                             ; preds = %6659, %6656
  %6661 = getelementptr inbounds %struct._reg_trie_data, ptr %6654, i64 0, i32 6
  %6662 = load ptr, ptr %6661, align 8, !tbaa !290
  %6663 = icmp eq ptr %6662, null
  br i1 %6663, label %6672, label %6664

6664:                                             ; preds = %6660
  %6665 = getelementptr inbounds %struct._reg_trie_data, ptr %6654, i64 0, i32 14
  %6666 = load i32, ptr %6665, align 8, !tbaa !229
  %6667 = icmp eq i32 %6666, 0
  br i1 %6667, label %6781, label %6668

6668:                                             ; preds = %6664
  %6669 = add i32 %266, 1
  %6670 = getelementptr inbounds %struct._reg_trie_data, ptr %6654, i64 0, i32 10
  %6671 = getelementptr inbounds %struct._reg_trie_data, ptr %6654, i64 0, i32 11
  br label %6677

6672:                                             ; preds = %6660
  %6673 = getelementptr inbounds %struct._reg_trie_data, ptr %6654, i64 0, i32 10
  %6674 = load i64, ptr %6673, align 8, !tbaa !150
  %6675 = getelementptr inbounds %struct._reg_trie_data, ptr %6654, i64 0, i32 11
  %6676 = load i64, ptr %6675, align 8, !tbaa !230
  br label %6781

6677:                                             ; preds = %6668, %6775
  %6678 = phi i32 [ 1, %6668 ], [ %6776, %6775 ]
  %6679 = phi ptr [ null, %6668 ], [ %6729, %6775 ]
  %6680 = phi i64 [ 9223372036854775807, %6668 ], [ %6732, %6775 ]
  %6681 = phi i64 [ 0, %6668 ], [ %6743, %6775 ]
  %6682 = phi i32 [ %265, %6668 ], [ %6770, %6775 ]
  %6683 = phi i32 [ %268, %6668 ], [ %6748, %6775 ]
  %6684 = phi i32 [ %270, %6668 ], [ %6742, %6775 ]
  %6685 = phi i32 [ %271, %6668 ], [ %6741, %6775 ]
  %6686 = phi i64 [ %274, %6668 ], [ %6771, %6775 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %36) #15
  store i64 0, ptr %36, align 8, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %37) #15
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %38) #15
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %17, i8 0, i64 152, i1 false)
  br i1 %108, label %6687, label %6690

6687:                                             ; preds = %6677
  %6688 = load i32, ptr %111, align 4, !tbaa !253
  store i32 %6688, ptr %142, align 4, !tbaa !253
  %6689 = load ptr, ptr %112, align 8, !tbaa !184
  br label %6690

6690:                                             ; preds = %6677, %6687
  %6691 = phi ptr [ %6689, %6687 ], [ %37, %6677 ]
  store ptr %6691, ptr %141, align 8, !tbaa !184
  store i64 %269, ptr %143, align 8, !tbaa !252
  %6692 = and i32 %6682, 6144
  %6693 = icmp eq i32 %6692, 0
  br i1 %6693, label %6695, label %6694

6694:                                             ; preds = %6690
  call fastcc void @S_ssc_init(ptr noundef %0, ptr noundef nonnull %38)
  store ptr %38, ptr %148, align 8, !tbaa !183
  br label %6695

6695:                                             ; preds = %6694, %6690
  %6696 = phi i32 [ 2048, %6694 ], [ 0, %6690 ]
  %6697 = and i32 %6682, 8192
  %6698 = or i32 %6696, %6697
  %6699 = load ptr, ptr %6661, align 8, !tbaa !290
  %6700 = zext i32 %6678 to i64
  %6701 = getelementptr inbounds i16, ptr %6699, i64 %6700
  %6702 = load i16, ptr %6701, align 2, !tbaa !139
  %6703 = icmp eq i16 %6702, 0
  br i1 %6703, label %6715, label %6704

6704:                                             ; preds = %6695
  %6705 = icmp eq ptr %6679, null
  br i1 %6705, label %6706, label %6710

6706:                                             ; preds = %6704
  %6707 = load i16, ptr %6699, align 2, !tbaa !139
  %6708 = zext i16 %6707 to i64
  %6709 = getelementptr inbounds %struct.regnode, ptr %2127, i64 %6708
  br label %6710

6710:                                             ; preds = %6706, %6704
  %6711 = phi ptr [ %6679, %6704 ], [ %6709, %6706 ]
  %6712 = zext i16 %6702 to i64
  %6713 = getelementptr inbounds %struct.regnode, ptr %2127, i64 %6712
  store ptr %6713, ptr %16, align 8, !tbaa !5
  %6714 = call fastcc i64 @S_study_chunk(ptr noundef %0, ptr noundef nonnull %16, ptr noundef %2, ptr noundef nonnull %36, ptr noundef %6711, ptr noundef nonnull %17, i32 noundef %262, i32 noundef %263, i32 noundef %6698, i32 noundef %6669)
  br label %6715

6715:                                             ; preds = %6710, %6695
  %6716 = phi ptr [ %6711, %6710 ], [ %6679, %6695 ]
  %6717 = phi i64 [ %6714, %6710 ], [ 0, %6695 ]
  %6718 = icmp eq ptr %6716, null
  br i1 %6718, label %6728, label %6719

6719:                                             ; preds = %6715
  %6720 = getelementptr inbounds %struct.regnode, ptr %6716, i64 0, i32 1
  %6721 = load i8, ptr %6720, align 1, !tbaa !141
  %6722 = zext i8 %6721 to i64
  %6723 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %6722
  %6724 = load i8, ptr %6723, align 1, !tbaa !17
  %6725 = icmp eq i8 %6724, 30
  br i1 %6725, label %6726, label %6728

6726:                                             ; preds = %6719
  %6727 = call ptr @Perl_regnext(ptr noundef nonnull %6716) #15
  br label %6728

6728:                                             ; preds = %6726, %6719, %6715
  %6729 = phi ptr [ %6727, %6726 ], [ %6716, %6719 ], [ null, %6715 ]
  %6730 = load i64, ptr %6670, align 8, !tbaa !150
  %6731 = add i64 %6730, %6717
  %6732 = call i64 @llvm.smin.i64(i64 %6680, i64 %6731)
  %6733 = load i64, ptr %36, align 8, !tbaa !9
  %6734 = icmp eq i64 %6733, 9223372036854775807
  br i1 %6734, label %6740, label %6735

6735:                                             ; preds = %6728
  %6736 = add nsw i64 %6733, %6717
  %6737 = load i64, ptr %6671, align 8, !tbaa !230
  %6738 = add i64 %6736, %6737
  %6739 = call i64 @llvm.smax.i64(i64 %6681, i64 %6738)
  br label %6740

6740:                                             ; preds = %6735, %6728
  %6741 = phi i32 [ 1, %6728 ], [ %6685, %6735 ]
  %6742 = phi i32 [ 1, %6728 ], [ %6684, %6735 ]
  %6743 = phi i64 [ 9223372036854775807, %6728 ], [ %6739, %6735 ]
  %6744 = load i32, ptr %149, align 8, !tbaa !185
  %6745 = and i32 %6744, 384
  %6746 = icmp ne i32 %6745, 0
  %6747 = zext i1 %6746 to i32
  %6748 = add nsw i32 %6683, %6747
  %6749 = and i32 %6744, 32768
  %6750 = icmp eq i32 %6749, 0
  br i1 %6750, label %6758, label %6751

6751:                                             ; preds = %6740
  %6752 = add nsw i64 %6732, %267
  %6753 = call i64 @llvm.smin.i64(i64 %6686, i64 %6752)
  %6754 = and i32 %6682, -1025
  br i1 %108, label %6755, label %6769

6755:                                             ; preds = %6751
  %6756 = load i32, ptr %110, align 8, !tbaa !185
  %6757 = or i32 %6756, 32768
  store i32 %6757, ptr %110, align 8, !tbaa !185
  br label %6759

6758:                                             ; preds = %6740
  br i1 %108, label %6759, label %6769

6759:                                             ; preds = %6755, %6758
  %6760 = phi i32 [ %6754, %6755 ], [ %6682, %6758 ]
  %6761 = phi i64 [ %6753, %6755 ], [ %6686, %6758 ]
  %6762 = and i32 %6744, 512
  %6763 = icmp eq i32 %6762, 0
  br i1 %6763, label %6767, label %6764

6764:                                             ; preds = %6759
  %6765 = load i32, ptr %110, align 8, !tbaa !185
  %6766 = or i32 %6765, 512
  store i32 %6766, ptr %110, align 8, !tbaa !185
  br label %6767

6767:                                             ; preds = %6764, %6759
  %6768 = load i32, ptr %142, align 4, !tbaa !253
  store i32 %6768, ptr %111, align 4, !tbaa !253
  br label %6769

6769:                                             ; preds = %6751, %6767, %6758
  %6770 = phi i32 [ %6760, %6767 ], [ %6682, %6758 ], [ %6754, %6751 ]
  %6771 = phi i64 [ %6761, %6767 ], [ %6686, %6758 ], [ %6753, %6751 ]
  %6772 = and i32 %6770, 6144
  %6773 = icmp eq i32 %6772, 0
  br i1 %6773, label %6775, label %6774

6774:                                             ; preds = %6769
  call fastcc void @S_ssc_or(ptr noundef %0, ptr noundef nonnull %35, ptr noundef nonnull %38)
  br label %6775

6775:                                             ; preds = %6774, %6769
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %38) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %37) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %36) #15
  %6776 = add i32 %6678, 1
  %6777 = load i32, ptr %6665, align 8, !tbaa !229
  %6778 = icmp ugt i32 %6776, %6777
  br i1 %6778, label %6779, label %6677, !llvm.loop !291

6779:                                             ; preds = %6775
  %6780 = and i32 %6770, 1024
  br label %6781

6781:                                             ; preds = %6779, %6664, %6672
  %6782 = phi i32 [ %6780, %6779 ], [ %6434, %6664 ], [ %6434, %6672 ]
  %6783 = phi i64 [ %6771, %6779 ], [ %274, %6664 ], [ %274, %6672 ]
  %6784 = phi i32 [ %6741, %6779 ], [ %271, %6664 ], [ %271, %6672 ]
  %6785 = phi i32 [ %6742, %6779 ], [ %270, %6664 ], [ %270, %6672 ]
  %6786 = phi i32 [ %6748, %6779 ], [ %268, %6664 ], [ %268, %6672 ]
  %6787 = phi i32 [ %6770, %6779 ], [ %265, %6664 ], [ %265, %6672 ]
  %6788 = phi i64 [ %6743, %6779 ], [ 0, %6664 ], [ %6676, %6672 ]
  %6789 = phi i64 [ %6732, %6779 ], [ 9223372036854775807, %6664 ], [ %6674, %6672 ]
  %6790 = icmp eq i32 %6782, 0
  br i1 %6790, label %6801, label %6791

6791:                                             ; preds = %6781
  %6792 = sub i64 %6788, %6789
  %6793 = load <2 x i64>, ptr %5, align 8, !tbaa !9
  %6794 = insertelement <2 x i64> poison, i64 %6789, i64 0
  %6795 = insertelement <2 x i64> %6794, i64 %6792, i64 1
  %6796 = add nsw <2 x i64> %6793, %6795
  store <2 x i64> %6796, ptr %5, align 8, !tbaa !9
  %6797 = icmp ne i64 %6788, %6789
  %6798 = icmp ne i32 %6785, 0
  %6799 = select i1 %6797, i1 true, i1 %6798
  br i1 %6799, label %6800, label %6801

6800:                                             ; preds = %6791
  store ptr %120, ptr %117, align 8, !tbaa !180
  br label %6801

6801:                                             ; preds = %6800, %6791, %6781
  %6802 = add nsw i64 %6789, %267
  %6803 = icmp eq i64 %269, 9223372036854775807
  %6804 = add i64 %6788, %269
  %6805 = sub i64 %6804, %6789
  %6806 = select i1 %6803, i64 9223372036854775807, i64 %6805
  %6807 = and i32 %6787, 4096
  %6808 = icmp eq i32 %6807, 0
  br i1 %6808, label %6815, label %6809

6809:                                             ; preds = %6801
  %6810 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_or(ptr noundef %0, ptr noundef %6810, ptr noundef nonnull %35)
  %6811 = icmp eq i64 %6789, 0
  br i1 %6811, label %6832, label %6812

6812:                                             ; preds = %6809
  %6813 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %6813, ptr noundef %264)
  %6814 = and i32 %6787, -6145
  br label %6832

6815:                                             ; preds = %6801
  %6816 = and i32 %6787, 2048
  %6817 = icmp eq i32 %6816, 0
  br i1 %6817, label %6832, label %6818

6818:                                             ; preds = %6815
  %6819 = icmp eq i64 %6789, 0
  br i1 %6819, label %6823, label %6820

6820:                                             ; preds = %6818
  %6821 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %6821, ptr noundef nonnull %35)
  %6822 = and i32 %6787, -6145
  br label %6832

6823:                                             ; preds = %6818
  %6824 = icmp eq ptr %264, null
  br i1 %6824, label %6826, label %6825

6825:                                             ; preds = %6823
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.257, i32 noundef 5549) #15
  br label %6826

6826:                                             ; preds = %6823, %6825
  %6827 = call ptr @Perl_safesysmalloc(i64 noundef 56) #15
  call void @Perl_save_pushptr(ptr noundef %6827, i32 noundef 10) #15
  %6828 = load ptr, ptr %132, align 8, !tbaa !183
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %6827, ptr noundef nonnull align 8 dereferenceable(56) %6828, i64 56, i1 false), !tbaa.struct !199
  %6829 = and i32 %6787, -6145
  %6830 = load ptr, ptr %132, align 8, !tbaa !183
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %6830, ptr noundef nonnull align 8 dereferenceable(56) %35, i64 56, i1 false), !tbaa.struct !199
  %6831 = or i32 %6829, 4096
  br label %6832

6832:                                             ; preds = %6815, %6826, %6820, %6809, %6812
  %6833 = phi i32 [ %6814, %6812 ], [ %6787, %6809 ], [ %6822, %6820 ], [ %6831, %6826 ], [ %6787, %6815 ]
  %6834 = phi ptr [ %264, %6812 ], [ %264, %6809 ], [ %264, %6820 ], [ %6827, %6826 ], [ %264, %6815 ]
  store ptr %6645, ptr %16, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %35) #15
  br label %6847

6835:                                             ; preds = %3743, %3748, %6135, %5362, %5360, %5354, %6597, %6551, %4315, %4270, %6430, %6234, %6549, %6575, %6573, %6592, %6590, %6634, %6638, %6639, %6642, %6612, %6581, %6582, %6437, %6211, %6219, %2612
  %6836 = phi i64 [ %274, %2612 ], [ %274, %4270 ], [ %274, %6135 ], [ %274, %6219 ], [ %274, %6211 ], [ %274, %6430 ], [ %274, %6234 ], [ %274, %6437 ], [ %274, %6549 ], [ %274, %6575 ], [ %274, %6573 ], [ %274, %6582 ], [ %274, %6581 ], [ %274, %6592 ], [ %274, %6590 ], [ %274, %6612 ], [ %274, %6639 ], [ %274, %6638 ], [ %274, %6634 ], [ %274, %6642 ], [ %274, %4315 ], [ %274, %6551 ], [ %6600, %6597 ], [ %274, %5354 ], [ %274, %5360 ], [ %274, %5362 ], [ %274, %3748 ], [ %274, %3743 ]
  %6837 = phi i32 [ %272, %2612 ], [ %272, %4270 ], [ %272, %6135 ], [ %272, %6219 ], [ %272, %6211 ], [ %272, %6430 ], [ %272, %6234 ], [ %272, %6437 ], [ %272, %6549 ], [ %6574, %6575 ], [ %6574, %6573 ], [ %272, %6582 ], [ %272, %6581 ], [ %272, %6592 ], [ %272, %6590 ], [ %272, %6612 ], [ %272, %6639 ], [ %272, %6638 ], [ %272, %6634 ], [ %272, %6642 ], [ %272, %4315 ], [ %272, %6551 ], [ %272, %6597 ], [ %272, %5354 ], [ %272, %5360 ], [ %272, %5362 ], [ %272, %3748 ], [ %272, %3743 ]
  %6838 = phi i32 [ %271, %2612 ], [ %271, %4270 ], [ 1, %6135 ], [ %271, %6219 ], [ %271, %6211 ], [ %271, %6430 ], [ %271, %6234 ], [ %271, %6437 ], [ %271, %6549 ], [ %271, %6575 ], [ %271, %6573 ], [ %271, %6582 ], [ %271, %6581 ], [ %271, %6592 ], [ %271, %6590 ], [ 1, %6612 ], [ %271, %6639 ], [ %271, %6638 ], [ %271, %6634 ], [ %271, %6642 ], [ %271, %4315 ], [ %271, %6551 ], [ %271, %6597 ], [ %271, %5354 ], [ %271, %5360 ], [ %271, %5362 ], [ %271, %3748 ], [ 1, %3743 ]
  %6839 = phi i32 [ %270, %2612 ], [ %270, %4270 ], [ 1, %6135 ], [ %270, %6219 ], [ %270, %6211 ], [ %270, %6430 ], [ %270, %6234 ], [ %270, %6437 ], [ %270, %6549 ], [ %270, %6575 ], [ %270, %6573 ], [ %270, %6582 ], [ %270, %6581 ], [ %270, %6592 ], [ %270, %6590 ], [ 1, %6612 ], [ %270, %6639 ], [ 0, %6638 ], [ 0, %6634 ], [ %270, %6642 ], [ %270, %4315 ], [ %270, %6551 ], [ %270, %6597 ], [ %270, %5354 ], [ %270, %5360 ], [ %270, %5362 ], [ %270, %3748 ], [ 1, %3743 ]
  %6840 = phi i64 [ %269, %2612 ], [ %269, %4270 ], [ %269, %6135 ], [ %6216, %6219 ], [ %6216, %6211 ], [ %269, %6430 ], [ %269, %6234 ], [ %269, %6437 ], [ %269, %6549 ], [ %269, %6575 ], [ %269, %6573 ], [ %269, %6582 ], [ %269, %6581 ], [ %269, %6592 ], [ %269, %6590 ], [ %269, %6612 ], [ %269, %6639 ], [ 0, %6638 ], [ 0, %6634 ], [ %269, %6642 ], [ %4306, %4315 ], [ %269, %6551 ], [ %269, %6597 ], [ %4306, %5354 ], [ %4306, %5360 ], [ %4306, %5362 ], [ %269, %3748 ], [ %269, %3743 ]
  %6841 = phi i32 [ %268, %2612 ], [ %268, %4270 ], [ %268, %6135 ], [ %268, %6219 ], [ %268, %6211 ], [ %268, %6430 ], [ %268, %6234 ], [ %268, %6437 ], [ %6539, %6549 ], [ %268, %6575 ], [ %268, %6573 ], [ %268, %6582 ], [ %268, %6581 ], [ %268, %6592 ], [ %268, %6590 ], [ %268, %6612 ], [ %268, %6639 ], [ %268, %6638 ], [ %268, %6634 ], [ %268, %6642 ], [ %268, %4315 ], [ %6556, %6551 ], [ %268, %6597 ], [ %268, %5354 ], [ %268, %5360 ], [ %268, %5362 ], [ %268, %3748 ], [ %268, %3743 ]
  %6842 = phi i64 [ %267, %2612 ], [ %4139, %4270 ], [ %267, %6135 ], [ %6213, %6219 ], [ %6213, %6211 ], [ %6235, %6430 ], [ %6235, %6234 ], [ %267, %6437 ], [ %267, %6549 ], [ %267, %6575 ], [ %267, %6573 ], [ %267, %6582 ], [ %267, %6581 ], [ %267, %6592 ], [ %267, %6590 ], [ %267, %6612 ], [ %267, %6639 ], [ %267, %6638 ], [ %267, %6634 ], [ %267, %6642 ], [ %4302, %4315 ], [ %267, %6551 ], [ %267, %6597 ], [ %4302, %5354 ], [ %4302, %5360 ], [ %4302, %5362 ], [ %267, %3748 ], [ %267, %3743 ]
  %6843 = phi i32 [ %265, %2612 ], [ %4271, %4270 ], [ %6136, %6135 ], [ %6212, %6219 ], [ %6212, %6211 ], [ %6431, %6430 ], [ %265, %6234 ], [ %265, %6437 ], [ %265, %6549 ], [ %265, %6575 ], [ %265, %6573 ], [ %265, %6582 ], [ %265, %6581 ], [ %6591, %6592 ], [ %6591, %6590 ], [ %6613, %6612 ], [ %265, %6639 ], [ %265, %6638 ], [ %265, %6634 ], [ %265, %6642 ], [ %265, %4315 ], [ %265, %6551 ], [ %6591, %6597 ], [ %5355, %5354 ], [ %5355, %5360 ], [ %5355, %5362 ], [ %265, %3748 ], [ %3744, %3743 ]
  %6844 = load ptr, ptr %16, align 8, !tbaa !5
  %6845 = call ptr @Perl_regnext(ptr noundef %6844) #15
  store ptr %6845, ptr %16, align 8, !tbaa !5
  br label %6847

6846:                                             ; preds = %6091, %6096, %6071, %6081
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %27) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %26) #15
  br label %6847

6847:                                             ; preds = %4119, %3342, %3293, %3300, %3298, %6832, %6835, %6846
  %6848 = phi ptr [ %261, %6846 ], [ %3766, %4119 ], [ %261, %3342 ], [ %261, %3293 ], [ %261, %3300 ], [ %261, %3298 ], [ %261, %6832 ], [ %261, %6835 ]
  %6849 = phi i32 [ %262, %6846 ], [ %3768, %4119 ], [ %262, %3342 ], [ %262, %3293 ], [ %262, %3300 ], [ %262, %3298 ], [ %262, %6832 ], [ %262, %6835 ]
  %6850 = phi i32 [ %263, %6846 ], [ %3765, %4119 ], [ %263, %3342 ], [ %263, %3293 ], [ %263, %3300 ], [ %263, %3298 ], [ %263, %6832 ], [ %263, %6835 ]
  %6851 = phi ptr [ %6078, %6846 ], [ %264, %4119 ], [ %264, %3342 ], [ %2922, %3293 ], [ %264, %3300 ], [ %264, %3298 ], [ %6834, %6832 ], [ %264, %6835 ]
  %6852 = phi i32 [ %6077, %6846 ], [ %265, %4119 ], [ %265, %3342 ], [ %3295, %3293 ], [ %265, %3300 ], [ %265, %3298 ], [ %6833, %6832 ], [ %6843, %6835 ]
  %6853 = phi i32 [ %266, %6846 ], [ %4120, %4119 ], [ %266, %3342 ], [ %266, %3293 ], [ %266, %3300 ], [ %266, %3298 ], [ %266, %6832 ], [ %266, %6835 ]
  %6854 = phi i64 [ %6076, %6846 ], [ %267, %4119 ], [ %267, %3342 ], [ %2889, %3293 ], [ %267, %3300 ], [ %267, %3298 ], [ %6802, %6832 ], [ %6842, %6835 ]
  %6855 = phi i32 [ %6075, %6846 ], [ %268, %4119 ], [ %268, %3342 ], [ %2869, %3293 ], [ %268, %3300 ], [ %268, %3298 ], [ %6786, %6832 ], [ %6841, %6835 ]
  %6856 = phi i64 [ %6074, %6846 ], [ %269, %4119 ], [ %269, %3342 ], [ %2894, %3293 ], [ %269, %3300 ], [ %269, %3298 ], [ %6806, %6832 ], [ %6840, %6835 ]
  %6857 = phi i32 [ %6073, %6846 ], [ %270, %4119 ], [ %270, %3342 ], [ %2868, %3293 ], [ %270, %3300 ], [ %270, %3298 ], [ %6785, %6832 ], [ %6839, %6835 ]
  %6858 = phi i32 [ %6072, %6846 ], [ %271, %4119 ], [ %271, %3342 ], [ %2867, %3293 ], [ %271, %3300 ], [ %271, %3298 ], [ %6784, %6832 ], [ %6838, %6835 ]
  %6859 = phi i32 [ %272, %6846 ], [ %272, %4119 ], [ %272, %3342 ], [ %272, %3293 ], [ %272, %3300 ], [ %272, %3298 ], [ %272, %6832 ], [ %6837, %6835 ]
  %6860 = phi ptr [ %273, %6846 ], [ %273, %4119 ], [ %273, %3342 ], [ %3294, %3293 ], [ %273, %3300 ], [ %273, %3298 ], [ %273, %6832 ], [ %273, %6835 ]
  %6861 = phi i64 [ %274, %6846 ], [ %274, %4119 ], [ %274, %3342 ], [ %2866, %3293 ], [ %274, %3300 ], [ %274, %3298 ], [ %6783, %6832 ], [ %6836, %6835 ]
  %6862 = phi ptr [ %275, %6846 ], [ %3790, %4119 ], [ %275, %3342 ], [ %275, %3293 ], [ %275, %3300 ], [ %275, %3298 ], [ %275, %6832 ], [ %275, %6835 ]
  %6863 = load ptr, ptr %16, align 8
  %6864 = icmp eq ptr %6863, null
  br i1 %6864, label %6865, label %259, !llvm.loop !270

6865:                                             ; preds = %6847, %259, %6557, %257
  %6866 = phi ptr [ %163, %257 ], [ %275, %6557 ], [ %275, %259 ], [ %6862, %6847 ]
  %6867 = phi i64 [ %164, %257 ], [ %274, %6557 ], [ %274, %259 ], [ %6861, %6847 ]
  %6868 = phi ptr [ %165, %257 ], [ %273, %6557 ], [ %273, %259 ], [ %6860, %6847 ]
  %6869 = phi i32 [ %166, %257 ], [ %272, %6557 ], [ %272, %259 ], [ %6859, %6847 ]
  %6870 = phi i32 [ %167, %257 ], [ %271, %6557 ], [ %271, %259 ], [ %6858, %6847 ]
  %6871 = phi i32 [ %168, %257 ], [ %270, %6557 ], [ %270, %259 ], [ %6857, %6847 ]
  %6872 = phi i64 [ %169, %257 ], [ %269, %6557 ], [ %269, %259 ], [ %6856, %6847 ]
  %6873 = phi i32 [ %170, %257 ], [ %268, %6557 ], [ %268, %259 ], [ %6855, %6847 ]
  %6874 = phi i64 [ %171, %257 ], [ %267, %6557 ], [ %267, %259 ], [ %6854, %6847 ]
  %6875 = phi i32 [ %172, %257 ], [ %266, %6557 ], [ %266, %259 ], [ %6853, %6847 ]
  %6876 = phi i32 [ %173, %257 ], [ %265, %6557 ], [ %265, %259 ], [ %6852, %6847 ]
  %6877 = phi ptr [ %174, %257 ], [ %264, %6557 ], [ %264, %259 ], [ %6851, %6847 ]
  %6878 = icmp eq ptr %6866, null
  br i1 %6878, label %7220, label %6879

6879:                                             ; preds = %6865
  %6880 = add i32 %6875, -1
  %6881 = load volatile i64, ptr %18, align 8, !tbaa !9
  %6882 = and i64 %6881, 1048578
  %6883 = icmp eq i64 %6882, 1048578
  %6884 = and i1 %108, %6883
  br i1 %6884, label %6885, label %7063

6885:                                             ; preds = %6879
  %6886 = call ptr @Perl_PerlIO_stderr() #15
  %6887 = shl nsw i32 %6880, 1
  %6888 = load i64, ptr %5, align 8, !tbaa !251
  %6889 = load i64, ptr %109, align 8, !tbaa !252
  %6890 = load i32, ptr %110, align 8, !tbaa !185
  %6891 = sext i32 %6890 to i64
  %6892 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %6886, ptr noundef nonnull @.str.287, i32 noundef %6887, ptr noundef nonnull @.str.8, i64 noundef %6888, i64 noundef %6889, i64 noundef %6891) #15
  %6893 = load i32, ptr %110, align 8, !tbaa !185
  %6894 = icmp eq i32 %6893, 0
  br i1 %6894, label %7019, label %6895

6895:                                             ; preds = %6885
  %6896 = call ptr @Perl_PerlIO_stderr() #15
  %6897 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %6896, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.35) #15
  %6898 = load i32, ptr %110, align 8, !tbaa !185
  %6899 = and i32 %6898, 16
  %6900 = icmp eq i32 %6899, 0
  br i1 %6900, label %6905, label %6901

6901:                                             ; preds = %6895
  %6902 = call ptr @Perl_PerlIO_stderr() #15
  %6903 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %6902, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.37) #15
  %6904 = load i32, ptr %110, align 8, !tbaa !185
  br label %6905

6905:                                             ; preds = %6901, %6895
  %6906 = phi i32 [ %6904, %6901 ], [ %6898, %6895 ]
  %6907 = and i32 %6906, 32
  %6908 = icmp eq i32 %6907, 0
  br i1 %6908, label %6913, label %6909

6909:                                             ; preds = %6905
  %6910 = call ptr @Perl_PerlIO_stderr() #15
  %6911 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %6910, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.38) #15
  %6912 = load i32, ptr %110, align 8, !tbaa !185
  br label %6913

6913:                                             ; preds = %6909, %6905
  %6914 = phi i32 [ %6912, %6909 ], [ %6906, %6905 ]
  %6915 = and i32 %6914, 64
  %6916 = icmp eq i32 %6915, 0
  br i1 %6916, label %6921, label %6917

6917:                                             ; preds = %6913
  %6918 = call ptr @Perl_PerlIO_stderr() #15
  %6919 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %6918, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.39) #15
  %6920 = load i32, ptr %110, align 8, !tbaa !185
  br label %6921

6921:                                             ; preds = %6917, %6913
  %6922 = phi i32 [ %6920, %6917 ], [ %6914, %6913 ]
  %6923 = and i32 %6922, 128
  %6924 = icmp eq i32 %6923, 0
  br i1 %6924, label %6929, label %6925

6925:                                             ; preds = %6921
  %6926 = call ptr @Perl_PerlIO_stderr() #15
  %6927 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %6926, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.40) #15
  %6928 = load i32, ptr %110, align 8, !tbaa !185
  br label %6929

6929:                                             ; preds = %6925, %6921
  %6930 = phi i32 [ %6928, %6925 ], [ %6922, %6921 ]
  %6931 = and i32 %6930, 256
  %6932 = icmp eq i32 %6931, 0
  br i1 %6932, label %6937, label %6933

6933:                                             ; preds = %6929
  %6934 = call ptr @Perl_PerlIO_stderr() #15
  %6935 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %6934, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.41) #15
  %6936 = load i32, ptr %110, align 8, !tbaa !185
  br label %6937

6937:                                             ; preds = %6933, %6929
  %6938 = phi i32 [ %6936, %6933 ], [ %6930, %6929 ]
  %6939 = and i32 %6938, 512
  %6940 = icmp eq i32 %6939, 0
  br i1 %6940, label %6945, label %6941

6941:                                             ; preds = %6937
  %6942 = call ptr @Perl_PerlIO_stderr() #15
  %6943 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %6942, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.42) #15
  %6944 = load i32, ptr %110, align 8, !tbaa !185
  br label %6945

6945:                                             ; preds = %6941, %6937
  %6946 = phi i32 [ %6944, %6941 ], [ %6938, %6937 ]
  %6947 = and i32 %6946, 1024
  %6948 = icmp eq i32 %6947, 0
  br i1 %6948, label %6953, label %6949

6949:                                             ; preds = %6945
  %6950 = call ptr @Perl_PerlIO_stderr() #15
  %6951 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %6950, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.43) #15
  %6952 = load i32, ptr %110, align 8, !tbaa !185
  br label %6953

6953:                                             ; preds = %6949, %6945
  %6954 = phi i32 [ %6952, %6949 ], [ %6946, %6945 ]
  %6955 = and i32 %6954, 2048
  %6956 = icmp eq i32 %6955, 0
  br i1 %6956, label %6961, label %6957

6957:                                             ; preds = %6953
  %6958 = call ptr @Perl_PerlIO_stderr() #15
  %6959 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %6958, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.44) #15
  %6960 = load i32, ptr %110, align 8, !tbaa !185
  br label %6961

6961:                                             ; preds = %6957, %6953
  %6962 = phi i32 [ %6960, %6957 ], [ %6954, %6953 ]
  %6963 = and i32 %6962, 4096
  %6964 = icmp eq i32 %6963, 0
  br i1 %6964, label %6969, label %6965

6965:                                             ; preds = %6961
  %6966 = call ptr @Perl_PerlIO_stderr() #15
  %6967 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %6966, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.45) #15
  %6968 = load i32, ptr %110, align 8, !tbaa !185
  br label %6969

6969:                                             ; preds = %6965, %6961
  %6970 = phi i32 [ %6968, %6965 ], [ %6962, %6961 ]
  %6971 = and i32 %6970, 6144
  %6972 = icmp eq i32 %6971, 0
  br i1 %6972, label %6977, label %6973

6973:                                             ; preds = %6969
  %6974 = call ptr @Perl_PerlIO_stderr() #15
  %6975 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %6974, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.46) #15
  %6976 = load i32, ptr %110, align 8, !tbaa !185
  br label %6977

6977:                                             ; preds = %6973, %6969
  %6978 = phi i32 [ %6976, %6973 ], [ %6970, %6969 ]
  %6979 = and i32 %6978, 8192
  %6980 = icmp eq i32 %6979, 0
  br i1 %6980, label %6985, label %6981

6981:                                             ; preds = %6977
  %6982 = call ptr @Perl_PerlIO_stderr() #15
  %6983 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %6982, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.47) #15
  %6984 = load i32, ptr %110, align 8, !tbaa !185
  br label %6985

6985:                                             ; preds = %6981, %6977
  %6986 = phi i32 [ %6984, %6981 ], [ %6978, %6977 ]
  %6987 = and i32 %6986, 16384
  %6988 = icmp eq i32 %6987, 0
  br i1 %6988, label %6993, label %6989

6989:                                             ; preds = %6985
  %6990 = call ptr @Perl_PerlIO_stderr() #15
  %6991 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %6990, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.48) #15
  %6992 = load i32, ptr %110, align 8, !tbaa !185
  br label %6993

6993:                                             ; preds = %6989, %6985
  %6994 = phi i32 [ %6992, %6989 ], [ %6986, %6985 ]
  %6995 = and i32 %6994, 32768
  %6996 = icmp eq i32 %6995, 0
  br i1 %6996, label %7001, label %6997

6997:                                             ; preds = %6993
  %6998 = call ptr @Perl_PerlIO_stderr() #15
  %6999 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %6998, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.49) #15
  %7000 = load i32, ptr %110, align 8, !tbaa !185
  br label %7001

7001:                                             ; preds = %6997, %6993
  %7002 = phi i32 [ %7000, %6997 ], [ %6994, %6993 ]
  %7003 = and i32 %7002, 65536
  %7004 = icmp eq i32 %7003, 0
  br i1 %7004, label %7009, label %7005

7005:                                             ; preds = %7001
  %7006 = call ptr @Perl_PerlIO_stderr() #15
  %7007 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7006, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.50) #15
  %7008 = load i32, ptr %110, align 8, !tbaa !185
  br label %7009

7009:                                             ; preds = %7005, %7001
  %7010 = phi i32 [ %7008, %7005 ], [ %7002, %7001 ]
  %7011 = and i32 %7010, 131072
  %7012 = icmp eq i32 %7011, 0
  br i1 %7012, label %7016, label %7013

7013:                                             ; preds = %7009
  %7014 = call ptr @Perl_PerlIO_stderr() #15
  %7015 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7014, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.51) #15
  br label %7016

7016:                                             ; preds = %7013, %7009
  %7017 = call ptr @Perl_PerlIO_stderr() #15
  %7018 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7017, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.52) #15
  br label %7019

7019:                                             ; preds = %7016, %6885
  %7020 = call ptr @Perl_PerlIO_stderr() #15
  %7021 = load i32, ptr %111, align 4, !tbaa !253
  %7022 = sext i32 %7021 to i64
  %7023 = load ptr, ptr %112, align 8, !tbaa !184
  %7024 = icmp eq ptr %7023, null
  br i1 %7024, label %7027, label %7025

7025:                                             ; preds = %7019
  %7026 = load i64, ptr %7023, align 8, !tbaa !9
  br label %7027

7027:                                             ; preds = %7019, %7025
  %7028 = phi i64 [ %7026, %7025 ], [ -1, %7019 ]
  %7029 = icmp eq i32 %6871, 0
  %7030 = select i1 %7029, ptr @.str.8, ptr @.str.248
  %7031 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7020, ptr noundef nonnull @.str.247, i64 noundef %7022, i64 noundef %7028, ptr noundef nonnull %7030) #15
  %7032 = load ptr, ptr %113, align 8, !tbaa !179
  %7033 = icmp eq ptr %7032, null
  br i1 %7033, label %7060, label %7034

7034:                                             ; preds = %7027
  %7035 = call ptr @Perl_PerlIO_stderr() #15
  %7036 = load ptr, ptr %113, align 8, !tbaa !179
  %7037 = getelementptr inbounds %struct.sv, ptr %7036, i64 0, i32 3
  %7038 = load ptr, ptr %7037, align 8, !tbaa !17
  %7039 = load i64, ptr %114, align 8, !tbaa !254
  %7040 = load i64, ptr %115, align 8, !tbaa !255
  %7041 = load i64, ptr %116, align 8, !tbaa !256
  %7042 = load ptr, ptr %117, align 8, !tbaa !180
  %7043 = icmp ne ptr %7042, null
  %7044 = icmp eq ptr %7042, %118
  %7045 = and i1 %7043, %7044
  %7046 = select i1 %7045, ptr @.str.250, ptr @.str.8
  %7047 = load ptr, ptr %118, align 8, !tbaa !176
  %7048 = getelementptr inbounds %struct.sv, ptr %7047, i64 0, i32 3
  %7049 = load ptr, ptr %7048, align 8, !tbaa !17
  %7050 = load i64, ptr %119, align 8, !tbaa !187
  %7051 = icmp eq ptr %7042, %120
  %7052 = and i1 %7043, %7051
  %7053 = select i1 %7052, ptr @.str.250, ptr @.str.8
  %7054 = load ptr, ptr %120, align 8, !tbaa !178
  %7055 = getelementptr inbounds %struct.sv, ptr %7054, i64 0, i32 3
  %7056 = load ptr, ptr %7055, align 8, !tbaa !17
  %7057 = load i64, ptr %121, align 8, !tbaa !186
  %7058 = load i64, ptr %122, align 8, !tbaa !192
  %7059 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7035, ptr noundef nonnull @.str.249, ptr noundef %7038, i64 noundef %7039, i64 noundef %7040, i64 noundef %7041, ptr noundef nonnull %7046, ptr noundef %7049, i64 noundef %7050, ptr noundef nonnull %7053, ptr noundef %7056, i64 noundef %7057, i64 noundef %7058) #15
  br label %7060

7060:                                             ; preds = %7034, %7027
  %7061 = call ptr @Perl_PerlIO_stderr() #15
  %7062 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7061, ptr noundef nonnull @.str.53) #15
  br label %7063

7063:                                             ; preds = %6879, %7060
  %7064 = load volatile i64, ptr %18, align 8, !tbaa !9
  %7065 = and i64 %7064, 2
  %7066 = icmp ne i64 %7065, 0
  %7067 = load ptr, ptr %16, align 8
  %7068 = icmp ne ptr %7067, null
  %7069 = select i1 %7066, i1 %7068, i1 false
  br i1 %7069, label %7070, label %7204

7070:                                             ; preds = %7063
  %7071 = call ptr @Perl_regnext(ptr noundef nonnull %7067) #15
  %7072 = load ptr, ptr %123, align 8, !tbaa !129
  %7073 = load ptr, ptr %124, align 8, !tbaa !56
  call void @my_regprop(ptr noundef %7072, ptr noundef %7073, ptr noundef nonnull %7067, ptr noundef null, ptr noundef %0)
  %7074 = call ptr @Perl_PerlIO_stderr() #15
  %7075 = shl nsw i32 %6880, 1
  %7076 = load ptr, ptr %125, align 8, !tbaa !131
  %7077 = ptrtoint ptr %7067 to i64
  %7078 = ptrtoint ptr %7076 to i64
  %7079 = sub i64 %7077, %7078
  %7080 = lshr exact i64 %7079, 2
  %7081 = trunc i64 %7080 to i32
  %7082 = load ptr, ptr %124, align 8, !tbaa !56
  %7083 = getelementptr inbounds %struct.sv, ptr %7082, i64 0, i32 2
  %7084 = load i32, ptr %7083, align 4, !tbaa !13
  %7085 = and i32 %7084, 2098176
  %7086 = icmp eq i32 %7085, 1024
  br i1 %7086, label %7087, label %7090

7087:                                             ; preds = %7070
  %7088 = getelementptr inbounds %struct.sv, ptr %7082, i64 0, i32 3
  %7089 = load ptr, ptr %7088, align 8, !tbaa !17
  br label %7092

7090:                                             ; preds = %7070
  %7091 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %7082, ptr noundef null, i32 noundef 34) #15
  br label %7092

7092:                                             ; preds = %7090, %7087
  %7093 = phi ptr [ %7089, %7087 ], [ %7091, %7090 ]
  %7094 = icmp eq ptr %7071, null
  br i1 %7094, label %7102, label %7095

7095:                                             ; preds = %7092
  %7096 = load ptr, ptr %125, align 8, !tbaa !131
  %7097 = ptrtoint ptr %7071 to i64
  %7098 = ptrtoint ptr %7096 to i64
  %7099 = sub i64 %7097, %7098
  %7100 = lshr exact i64 %7099, 2
  %7101 = trunc i64 %7100 to i32
  br label %7102

7102:                                             ; preds = %7092, %7095
  %7103 = phi i32 [ %7101, %7095 ], [ 0, %7092 ]
  %7104 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7074, ptr noundef nonnull @.str.288, i32 noundef %7075, ptr noundef nonnull @.str.8, i32 noundef %7081, ptr noundef %7093, i32 noundef %7103) #15
  %7105 = icmp eq i32 %6876, 0
  br i1 %7105, label %7201, label %7106

7106:                                             ; preds = %7102
  %7107 = call ptr @Perl_PerlIO_stderr() #15
  %7108 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7107, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.35) #15
  %7109 = and i32 %6876, 16
  %7110 = icmp eq i32 %7109, 0
  br i1 %7110, label %7114, label %7111

7111:                                             ; preds = %7106
  %7112 = call ptr @Perl_PerlIO_stderr() #15
  %7113 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7112, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.37) #15
  br label %7114

7114:                                             ; preds = %7111, %7106
  %7115 = and i32 %6876, 32
  %7116 = icmp eq i32 %7115, 0
  br i1 %7116, label %7120, label %7117

7117:                                             ; preds = %7114
  %7118 = call ptr @Perl_PerlIO_stderr() #15
  %7119 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7118, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.38) #15
  br label %7120

7120:                                             ; preds = %7117, %7114
  %7121 = and i32 %6876, 64
  %7122 = icmp eq i32 %7121, 0
  br i1 %7122, label %7126, label %7123

7123:                                             ; preds = %7120
  %7124 = call ptr @Perl_PerlIO_stderr() #15
  %7125 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7124, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.39) #15
  br label %7126

7126:                                             ; preds = %7123, %7120
  %7127 = and i32 %6876, 128
  %7128 = icmp eq i32 %7127, 0
  br i1 %7128, label %7132, label %7129

7129:                                             ; preds = %7126
  %7130 = call ptr @Perl_PerlIO_stderr() #15
  %7131 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7130, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.40) #15
  br label %7132

7132:                                             ; preds = %7129, %7126
  %7133 = and i32 %6876, 256
  %7134 = icmp eq i32 %7133, 0
  br i1 %7134, label %7138, label %7135

7135:                                             ; preds = %7132
  %7136 = call ptr @Perl_PerlIO_stderr() #15
  %7137 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7136, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.41) #15
  br label %7138

7138:                                             ; preds = %7135, %7132
  %7139 = and i32 %6876, 512
  %7140 = icmp eq i32 %7139, 0
  br i1 %7140, label %7144, label %7141

7141:                                             ; preds = %7138
  %7142 = call ptr @Perl_PerlIO_stderr() #15
  %7143 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7142, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.42) #15
  br label %7144

7144:                                             ; preds = %7141, %7138
  %7145 = and i32 %6876, 1024
  %7146 = icmp eq i32 %7145, 0
  br i1 %7146, label %7150, label %7147

7147:                                             ; preds = %7144
  %7148 = call ptr @Perl_PerlIO_stderr() #15
  %7149 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7148, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.43) #15
  br label %7150

7150:                                             ; preds = %7147, %7144
  %7151 = and i32 %6876, 2048
  %7152 = icmp eq i32 %7151, 0
  br i1 %7152, label %7156, label %7153

7153:                                             ; preds = %7150
  %7154 = call ptr @Perl_PerlIO_stderr() #15
  %7155 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7154, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.44) #15
  br label %7156

7156:                                             ; preds = %7153, %7150
  %7157 = and i32 %6876, 4096
  %7158 = icmp eq i32 %7157, 0
  br i1 %7158, label %7162, label %7159

7159:                                             ; preds = %7156
  %7160 = call ptr @Perl_PerlIO_stderr() #15
  %7161 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7160, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.45) #15
  br label %7162

7162:                                             ; preds = %7159, %7156
  %7163 = and i32 %6876, 6144
  %7164 = icmp eq i32 %7163, 0
  br i1 %7164, label %7168, label %7165

7165:                                             ; preds = %7162
  %7166 = call ptr @Perl_PerlIO_stderr() #15
  %7167 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7166, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.46) #15
  br label %7168

7168:                                             ; preds = %7165, %7162
  %7169 = and i32 %6876, 8192
  %7170 = icmp eq i32 %7169, 0
  br i1 %7170, label %7174, label %7171

7171:                                             ; preds = %7168
  %7172 = call ptr @Perl_PerlIO_stderr() #15
  %7173 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7172, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.47) #15
  br label %7174

7174:                                             ; preds = %7171, %7168
  %7175 = and i32 %6876, 16384
  %7176 = icmp eq i32 %7175, 0
  br i1 %7176, label %7180, label %7177

7177:                                             ; preds = %7174
  %7178 = call ptr @Perl_PerlIO_stderr() #15
  %7179 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7178, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.48) #15
  br label %7180

7180:                                             ; preds = %7177, %7174
  %7181 = and i32 %6876, 32768
  %7182 = icmp eq i32 %7181, 0
  br i1 %7182, label %7186, label %7183

7183:                                             ; preds = %7180
  %7184 = call ptr @Perl_PerlIO_stderr() #15
  %7185 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7184, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.49) #15
  br label %7186

7186:                                             ; preds = %7183, %7180
  %7187 = and i32 %6876, 65536
  %7188 = icmp eq i32 %7187, 0
  br i1 %7188, label %7192, label %7189

7189:                                             ; preds = %7186
  %7190 = call ptr @Perl_PerlIO_stderr() #15
  %7191 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7190, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.50) #15
  br label %7192

7192:                                             ; preds = %7189, %7186
  %7193 = and i32 %6876, 131072
  %7194 = icmp eq i32 %7193, 0
  br i1 %7194, label %7198, label %7195

7195:                                             ; preds = %7192
  %7196 = call ptr @Perl_PerlIO_stderr() #15
  %7197 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7196, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.51) #15
  br label %7198

7198:                                             ; preds = %7195, %7192
  %7199 = call ptr @Perl_PerlIO_stderr() #15
  %7200 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7199, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.52) #15
  br label %7201

7201:                                             ; preds = %7198, %7102
  %7202 = call ptr @Perl_PerlIO_stderr() #15
  %7203 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7202, ptr noundef nonnull @.str.53) #15
  br label %7204

7204:                                             ; preds = %7201, %7063
  %7205 = load ptr, ptr %6866, align 8, !tbaa !278
  %7206 = getelementptr inbounds %struct.scan_frame, ptr %6866, i64 0, i32 1
  %7207 = load ptr, ptr %7206, align 8, !tbaa !277
  store ptr %7207, ptr %16, align 8, !tbaa !5
  %7208 = getelementptr inbounds %struct.scan_frame, ptr %6866, i64 0, i32 3
  %7209 = load i32, ptr %7208, align 4, !tbaa !279
  %7210 = getelementptr inbounds %struct.scan_frame, ptr %6866, i64 0, i32 2
  %7211 = load i32, ptr %7210, align 8, !tbaa !280
  %7212 = getelementptr inbounds %struct.scan_frame, ptr %6866, i64 0, i32 6
  %7213 = load ptr, ptr %7212, align 8, !tbaa !275
  store ptr %7213, ptr %133, align 8, !tbaa !271
  %7214 = getelementptr inbounds %struct.scan_frame, ptr %6866, i64 0, i32 5
  %7215 = load ptr, ptr %7214, align 8, !tbaa !281
  br label %161

7216:                                             ; preds = %5373
  %7217 = getelementptr inbounds %struct.regnode, ptr %2127, i64 1
  store ptr %7217, ptr %16, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %27) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %26) #15
  %7218 = icmp eq ptr %275, null
  br i1 %7218, label %7220, label %7219

7219:                                             ; preds = %7216
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.289, i32 noundef 5610) #15
  br label %7220

7220:                                             ; preds = %6865, %7219, %7216
  %7221 = phi ptr [ %264, %7219 ], [ %264, %7216 ], [ %6877, %6865 ]
  %7222 = phi i32 [ %265, %7219 ], [ %265, %7216 ], [ %6876, %6865 ]
  %7223 = phi i32 [ %266, %7219 ], [ %266, %7216 ], [ %6875, %6865 ]
  %7224 = phi i64 [ %267, %7219 ], [ %267, %7216 ], [ %6874, %6865 ]
  %7225 = phi i32 [ %268, %7219 ], [ %268, %7216 ], [ %6873, %6865 ]
  %7226 = phi i64 [ %269, %7219 ], [ %269, %7216 ], [ %6872, %6865 ]
  %7227 = phi i32 [ %270, %7219 ], [ %270, %7216 ], [ %6871, %6865 ]
  %7228 = phi i32 [ %271, %7219 ], [ %271, %7216 ], [ %6870, %6865 ]
  %7229 = phi i32 [ %272, %7219 ], [ %272, %7216 ], [ %6869, %6865 ]
  %7230 = phi i64 [ %274, %7219 ], [ %274, %7216 ], [ %6867, %6865 ]
  %7231 = load volatile i64, ptr %18, align 8, !tbaa !9
  %7232 = and i64 %7231, 1048578
  %7233 = icmp eq i64 %7232, 1048578
  %7234 = and i1 %108, %7233
  br i1 %7234, label %7235, label %7413

7235:                                             ; preds = %7220
  %7236 = call ptr @Perl_PerlIO_stderr() #15
  %7237 = shl nsw i32 %7223, 1
  %7238 = load i64, ptr %5, align 8, !tbaa !251
  %7239 = load i64, ptr %109, align 8, !tbaa !252
  %7240 = load i32, ptr %110, align 8, !tbaa !185
  %7241 = sext i32 %7240 to i64
  %7242 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7236, ptr noundef nonnull @.str.290, i32 noundef %7237, ptr noundef nonnull @.str.8, i64 noundef %7238, i64 noundef %7239, i64 noundef %7241) #15
  %7243 = load i32, ptr %110, align 8, !tbaa !185
  %7244 = icmp eq i32 %7243, 0
  br i1 %7244, label %7369, label %7245

7245:                                             ; preds = %7235
  %7246 = call ptr @Perl_PerlIO_stderr() #15
  %7247 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7246, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.35) #15
  %7248 = load i32, ptr %110, align 8, !tbaa !185
  %7249 = and i32 %7248, 16
  %7250 = icmp eq i32 %7249, 0
  br i1 %7250, label %7255, label %7251

7251:                                             ; preds = %7245
  %7252 = call ptr @Perl_PerlIO_stderr() #15
  %7253 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7252, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.37) #15
  %7254 = load i32, ptr %110, align 8, !tbaa !185
  br label %7255

7255:                                             ; preds = %7251, %7245
  %7256 = phi i32 [ %7254, %7251 ], [ %7248, %7245 ]
  %7257 = and i32 %7256, 32
  %7258 = icmp eq i32 %7257, 0
  br i1 %7258, label %7263, label %7259

7259:                                             ; preds = %7255
  %7260 = call ptr @Perl_PerlIO_stderr() #15
  %7261 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7260, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.38) #15
  %7262 = load i32, ptr %110, align 8, !tbaa !185
  br label %7263

7263:                                             ; preds = %7259, %7255
  %7264 = phi i32 [ %7262, %7259 ], [ %7256, %7255 ]
  %7265 = and i32 %7264, 64
  %7266 = icmp eq i32 %7265, 0
  br i1 %7266, label %7271, label %7267

7267:                                             ; preds = %7263
  %7268 = call ptr @Perl_PerlIO_stderr() #15
  %7269 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7268, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.39) #15
  %7270 = load i32, ptr %110, align 8, !tbaa !185
  br label %7271

7271:                                             ; preds = %7267, %7263
  %7272 = phi i32 [ %7270, %7267 ], [ %7264, %7263 ]
  %7273 = and i32 %7272, 128
  %7274 = icmp eq i32 %7273, 0
  br i1 %7274, label %7279, label %7275

7275:                                             ; preds = %7271
  %7276 = call ptr @Perl_PerlIO_stderr() #15
  %7277 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7276, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.40) #15
  %7278 = load i32, ptr %110, align 8, !tbaa !185
  br label %7279

7279:                                             ; preds = %7275, %7271
  %7280 = phi i32 [ %7278, %7275 ], [ %7272, %7271 ]
  %7281 = and i32 %7280, 256
  %7282 = icmp eq i32 %7281, 0
  br i1 %7282, label %7287, label %7283

7283:                                             ; preds = %7279
  %7284 = call ptr @Perl_PerlIO_stderr() #15
  %7285 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7284, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.41) #15
  %7286 = load i32, ptr %110, align 8, !tbaa !185
  br label %7287

7287:                                             ; preds = %7283, %7279
  %7288 = phi i32 [ %7286, %7283 ], [ %7280, %7279 ]
  %7289 = and i32 %7288, 512
  %7290 = icmp eq i32 %7289, 0
  br i1 %7290, label %7295, label %7291

7291:                                             ; preds = %7287
  %7292 = call ptr @Perl_PerlIO_stderr() #15
  %7293 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7292, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.42) #15
  %7294 = load i32, ptr %110, align 8, !tbaa !185
  br label %7295

7295:                                             ; preds = %7291, %7287
  %7296 = phi i32 [ %7294, %7291 ], [ %7288, %7287 ]
  %7297 = and i32 %7296, 1024
  %7298 = icmp eq i32 %7297, 0
  br i1 %7298, label %7303, label %7299

7299:                                             ; preds = %7295
  %7300 = call ptr @Perl_PerlIO_stderr() #15
  %7301 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7300, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.43) #15
  %7302 = load i32, ptr %110, align 8, !tbaa !185
  br label %7303

7303:                                             ; preds = %7299, %7295
  %7304 = phi i32 [ %7302, %7299 ], [ %7296, %7295 ]
  %7305 = and i32 %7304, 2048
  %7306 = icmp eq i32 %7305, 0
  br i1 %7306, label %7311, label %7307

7307:                                             ; preds = %7303
  %7308 = call ptr @Perl_PerlIO_stderr() #15
  %7309 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7308, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.44) #15
  %7310 = load i32, ptr %110, align 8, !tbaa !185
  br label %7311

7311:                                             ; preds = %7307, %7303
  %7312 = phi i32 [ %7310, %7307 ], [ %7304, %7303 ]
  %7313 = and i32 %7312, 4096
  %7314 = icmp eq i32 %7313, 0
  br i1 %7314, label %7319, label %7315

7315:                                             ; preds = %7311
  %7316 = call ptr @Perl_PerlIO_stderr() #15
  %7317 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7316, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.45) #15
  %7318 = load i32, ptr %110, align 8, !tbaa !185
  br label %7319

7319:                                             ; preds = %7315, %7311
  %7320 = phi i32 [ %7318, %7315 ], [ %7312, %7311 ]
  %7321 = and i32 %7320, 6144
  %7322 = icmp eq i32 %7321, 0
  br i1 %7322, label %7327, label %7323

7323:                                             ; preds = %7319
  %7324 = call ptr @Perl_PerlIO_stderr() #15
  %7325 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7324, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.46) #15
  %7326 = load i32, ptr %110, align 8, !tbaa !185
  br label %7327

7327:                                             ; preds = %7323, %7319
  %7328 = phi i32 [ %7326, %7323 ], [ %7320, %7319 ]
  %7329 = and i32 %7328, 8192
  %7330 = icmp eq i32 %7329, 0
  br i1 %7330, label %7335, label %7331

7331:                                             ; preds = %7327
  %7332 = call ptr @Perl_PerlIO_stderr() #15
  %7333 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7332, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.47) #15
  %7334 = load i32, ptr %110, align 8, !tbaa !185
  br label %7335

7335:                                             ; preds = %7331, %7327
  %7336 = phi i32 [ %7334, %7331 ], [ %7328, %7327 ]
  %7337 = and i32 %7336, 16384
  %7338 = icmp eq i32 %7337, 0
  br i1 %7338, label %7343, label %7339

7339:                                             ; preds = %7335
  %7340 = call ptr @Perl_PerlIO_stderr() #15
  %7341 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7340, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.48) #15
  %7342 = load i32, ptr %110, align 8, !tbaa !185
  br label %7343

7343:                                             ; preds = %7339, %7335
  %7344 = phi i32 [ %7342, %7339 ], [ %7336, %7335 ]
  %7345 = and i32 %7344, 32768
  %7346 = icmp eq i32 %7345, 0
  br i1 %7346, label %7351, label %7347

7347:                                             ; preds = %7343
  %7348 = call ptr @Perl_PerlIO_stderr() #15
  %7349 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7348, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.49) #15
  %7350 = load i32, ptr %110, align 8, !tbaa !185
  br label %7351

7351:                                             ; preds = %7347, %7343
  %7352 = phi i32 [ %7350, %7347 ], [ %7344, %7343 ]
  %7353 = and i32 %7352, 65536
  %7354 = icmp eq i32 %7353, 0
  br i1 %7354, label %7359, label %7355

7355:                                             ; preds = %7351
  %7356 = call ptr @Perl_PerlIO_stderr() #15
  %7357 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7356, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.50) #15
  %7358 = load i32, ptr %110, align 8, !tbaa !185
  br label %7359

7359:                                             ; preds = %7355, %7351
  %7360 = phi i32 [ %7358, %7355 ], [ %7352, %7351 ]
  %7361 = and i32 %7360, 131072
  %7362 = icmp eq i32 %7361, 0
  br i1 %7362, label %7366, label %7363

7363:                                             ; preds = %7359
  %7364 = call ptr @Perl_PerlIO_stderr() #15
  %7365 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7364, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.51) #15
  br label %7366

7366:                                             ; preds = %7363, %7359
  %7367 = call ptr @Perl_PerlIO_stderr() #15
  %7368 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7367, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.52) #15
  br label %7369

7369:                                             ; preds = %7366, %7235
  %7370 = call ptr @Perl_PerlIO_stderr() #15
  %7371 = load i32, ptr %111, align 4, !tbaa !253
  %7372 = sext i32 %7371 to i64
  %7373 = load ptr, ptr %112, align 8, !tbaa !184
  %7374 = icmp eq ptr %7373, null
  br i1 %7374, label %7377, label %7375

7375:                                             ; preds = %7369
  %7376 = load i64, ptr %7373, align 8, !tbaa !9
  br label %7377

7377:                                             ; preds = %7369, %7375
  %7378 = phi i64 [ %7376, %7375 ], [ -1, %7369 ]
  %7379 = icmp eq i32 %7227, 0
  %7380 = select i1 %7379, ptr @.str.8, ptr @.str.248
  %7381 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7370, ptr noundef nonnull @.str.247, i64 noundef %7372, i64 noundef %7378, ptr noundef nonnull %7380) #15
  %7382 = load ptr, ptr %113, align 8, !tbaa !179
  %7383 = icmp eq ptr %7382, null
  br i1 %7383, label %7410, label %7384

7384:                                             ; preds = %7377
  %7385 = call ptr @Perl_PerlIO_stderr() #15
  %7386 = load ptr, ptr %113, align 8, !tbaa !179
  %7387 = getelementptr inbounds %struct.sv, ptr %7386, i64 0, i32 3
  %7388 = load ptr, ptr %7387, align 8, !tbaa !17
  %7389 = load i64, ptr %114, align 8, !tbaa !254
  %7390 = load i64, ptr %115, align 8, !tbaa !255
  %7391 = load i64, ptr %116, align 8, !tbaa !256
  %7392 = load ptr, ptr %117, align 8, !tbaa !180
  %7393 = icmp ne ptr %7392, null
  %7394 = icmp eq ptr %7392, %118
  %7395 = and i1 %7393, %7394
  %7396 = select i1 %7395, ptr @.str.250, ptr @.str.8
  %7397 = load ptr, ptr %118, align 8, !tbaa !176
  %7398 = getelementptr inbounds %struct.sv, ptr %7397, i64 0, i32 3
  %7399 = load ptr, ptr %7398, align 8, !tbaa !17
  %7400 = load i64, ptr %119, align 8, !tbaa !187
  %7401 = icmp eq ptr %7392, %120
  %7402 = and i1 %7393, %7401
  %7403 = select i1 %7402, ptr @.str.250, ptr @.str.8
  %7404 = load ptr, ptr %120, align 8, !tbaa !178
  %7405 = getelementptr inbounds %struct.sv, ptr %7404, i64 0, i32 3
  %7406 = load ptr, ptr %7405, align 8, !tbaa !17
  %7407 = load i64, ptr %121, align 8, !tbaa !186
  %7408 = load i64, ptr %122, align 8, !tbaa !192
  %7409 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7385, ptr noundef nonnull @.str.249, ptr noundef %7388, i64 noundef %7389, i64 noundef %7390, i64 noundef %7391, ptr noundef nonnull %7396, ptr noundef %7399, i64 noundef %7400, ptr noundef nonnull %7403, ptr noundef %7406, i64 noundef %7407, i64 noundef %7408) #15
  br label %7410

7410:                                             ; preds = %7384, %7377
  %7411 = call ptr @Perl_PerlIO_stderr() #15
  %7412 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7411, ptr noundef nonnull @.str.53) #15
  br label %7413

7413:                                             ; preds = %7410, %7220
  %7414 = load ptr, ptr %16, align 8, !tbaa !5
  store ptr %7414, ptr %1, align 8, !tbaa !5
  %7415 = icmp eq i32 %7228, 0
  %7416 = select i1 %7415, i64 %7226, i64 9223372036854775807
  store i64 %7416, ptr %3, align 8, !tbaa !9
  %7417 = and i32 %7222, 1024
  %7418 = icmp ne i32 %7417, 0
  %7419 = icmp ne i32 %7227, 0
  %7420 = select i1 %7418, i1 %7419, i1 false
  br i1 %7420, label %7421, label %7424

7421:                                             ; preds = %7413
  %7422 = load i64, ptr %5, align 8, !tbaa !251
  %7423 = sub nsw i64 9223372036854775807, %7422
  store i64 %7423, ptr %109, align 8, !tbaa !252
  br label %7424

7424:                                             ; preds = %7421, %7413
  %7425 = icmp slt i32 %7229, 256
  %7426 = icmp ne i32 %7229, 0
  %7427 = and i1 %7425, %7426
  %7428 = icmp eq i32 %7225, 1
  %7429 = select i1 %7427, i1 %7428, i1 false
  %7430 = and i1 %108, %7429
  br i1 %7430, label %7434, label %7431

7431:                                             ; preds = %7424
  %7432 = icmp ne i32 %7225, 0
  %7433 = and i1 %108, %7432
  br i1 %7433, label %7434, label %7439

7434:                                             ; preds = %7431, %7424
  %7435 = phi i32 [ 256, %7424 ], [ 128, %7431 ]
  %7436 = load i32, ptr %110, align 8, !tbaa !185
  %7437 = and i32 %7436, -385
  %7438 = or i32 %7437, %7435
  store i32 %7438, ptr %110, align 8, !tbaa !185
  br label %7439

7439:                                             ; preds = %7434, %7431
  %7440 = and i32 %7222, 4096
  %7441 = icmp eq i32 %7440, 0
  br i1 %7441, label %7444, label %7442

7442:                                             ; preds = %7439
  %7443 = load ptr, ptr %132, align 8, !tbaa !183
  call fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %7443, ptr noundef %7221)
  br label %7444

7444:                                             ; preds = %7442, %7439
  %7445 = and i32 %7222, 16384
  %7446 = icmp eq i32 %7445, 0
  br i1 %7446, label %7450, label %7447

7447:                                             ; preds = %7444
  %7448 = load i32, ptr %110, align 8, !tbaa !185
  %7449 = or i32 %7448, 16384
  store i32 %7449, ptr %110, align 8, !tbaa !185
  br label %7450

7450:                                             ; preds = %7444, %7447
  %7451 = load volatile i64, ptr %18, align 8, !tbaa !9
  %7452 = and i64 %7451, 1048578
  %7453 = icmp eq i64 %7452, 1048578
  %7454 = and i1 %108, %7453
  br i1 %7454, label %7455, label %7632

7455:                                             ; preds = %7450
  %7456 = call ptr @Perl_PerlIO_stderr() #15
  %7457 = shl nsw i32 %7223, 1
  %7458 = load i64, ptr %5, align 8, !tbaa !251
  %7459 = load i64, ptr %109, align 8, !tbaa !252
  %7460 = load i32, ptr %110, align 8, !tbaa !185
  %7461 = sext i32 %7460 to i64
  %7462 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7456, ptr noundef nonnull @.str.291, i32 noundef %7457, ptr noundef nonnull @.str.8, i64 noundef %7458, i64 noundef %7459, i64 noundef %7461) #15
  %7463 = load i32, ptr %110, align 8, !tbaa !185
  %7464 = icmp eq i32 %7463, 0
  br i1 %7464, label %7589, label %7465

7465:                                             ; preds = %7455
  %7466 = call ptr @Perl_PerlIO_stderr() #15
  %7467 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7466, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.35) #15
  %7468 = load i32, ptr %110, align 8, !tbaa !185
  %7469 = and i32 %7468, 16
  %7470 = icmp eq i32 %7469, 0
  br i1 %7470, label %7475, label %7471

7471:                                             ; preds = %7465
  %7472 = call ptr @Perl_PerlIO_stderr() #15
  %7473 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7472, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.37) #15
  %7474 = load i32, ptr %110, align 8, !tbaa !185
  br label %7475

7475:                                             ; preds = %7471, %7465
  %7476 = phi i32 [ %7474, %7471 ], [ %7468, %7465 ]
  %7477 = and i32 %7476, 32
  %7478 = icmp eq i32 %7477, 0
  br i1 %7478, label %7483, label %7479

7479:                                             ; preds = %7475
  %7480 = call ptr @Perl_PerlIO_stderr() #15
  %7481 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7480, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.38) #15
  %7482 = load i32, ptr %110, align 8, !tbaa !185
  br label %7483

7483:                                             ; preds = %7479, %7475
  %7484 = phi i32 [ %7482, %7479 ], [ %7476, %7475 ]
  %7485 = and i32 %7484, 64
  %7486 = icmp eq i32 %7485, 0
  br i1 %7486, label %7491, label %7487

7487:                                             ; preds = %7483
  %7488 = call ptr @Perl_PerlIO_stderr() #15
  %7489 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7488, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.39) #15
  %7490 = load i32, ptr %110, align 8, !tbaa !185
  br label %7491

7491:                                             ; preds = %7487, %7483
  %7492 = phi i32 [ %7490, %7487 ], [ %7484, %7483 ]
  %7493 = and i32 %7492, 128
  %7494 = icmp eq i32 %7493, 0
  br i1 %7494, label %7499, label %7495

7495:                                             ; preds = %7491
  %7496 = call ptr @Perl_PerlIO_stderr() #15
  %7497 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7496, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.40) #15
  %7498 = load i32, ptr %110, align 8, !tbaa !185
  br label %7499

7499:                                             ; preds = %7495, %7491
  %7500 = phi i32 [ %7498, %7495 ], [ %7492, %7491 ]
  %7501 = and i32 %7500, 256
  %7502 = icmp eq i32 %7501, 0
  br i1 %7502, label %7507, label %7503

7503:                                             ; preds = %7499
  %7504 = call ptr @Perl_PerlIO_stderr() #15
  %7505 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7504, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.41) #15
  %7506 = load i32, ptr %110, align 8, !tbaa !185
  br label %7507

7507:                                             ; preds = %7503, %7499
  %7508 = phi i32 [ %7506, %7503 ], [ %7500, %7499 ]
  %7509 = and i32 %7508, 512
  %7510 = icmp eq i32 %7509, 0
  br i1 %7510, label %7515, label %7511

7511:                                             ; preds = %7507
  %7512 = call ptr @Perl_PerlIO_stderr() #15
  %7513 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7512, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.42) #15
  %7514 = load i32, ptr %110, align 8, !tbaa !185
  br label %7515

7515:                                             ; preds = %7511, %7507
  %7516 = phi i32 [ %7514, %7511 ], [ %7508, %7507 ]
  %7517 = and i32 %7516, 1024
  %7518 = icmp eq i32 %7517, 0
  br i1 %7518, label %7523, label %7519

7519:                                             ; preds = %7515
  %7520 = call ptr @Perl_PerlIO_stderr() #15
  %7521 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7520, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.43) #15
  %7522 = load i32, ptr %110, align 8, !tbaa !185
  br label %7523

7523:                                             ; preds = %7519, %7515
  %7524 = phi i32 [ %7522, %7519 ], [ %7516, %7515 ]
  %7525 = and i32 %7524, 2048
  %7526 = icmp eq i32 %7525, 0
  br i1 %7526, label %7531, label %7527

7527:                                             ; preds = %7523
  %7528 = call ptr @Perl_PerlIO_stderr() #15
  %7529 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7528, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.44) #15
  %7530 = load i32, ptr %110, align 8, !tbaa !185
  br label %7531

7531:                                             ; preds = %7527, %7523
  %7532 = phi i32 [ %7530, %7527 ], [ %7524, %7523 ]
  %7533 = and i32 %7532, 4096
  %7534 = icmp eq i32 %7533, 0
  br i1 %7534, label %7539, label %7535

7535:                                             ; preds = %7531
  %7536 = call ptr @Perl_PerlIO_stderr() #15
  %7537 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7536, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.45) #15
  %7538 = load i32, ptr %110, align 8, !tbaa !185
  br label %7539

7539:                                             ; preds = %7535, %7531
  %7540 = phi i32 [ %7538, %7535 ], [ %7532, %7531 ]
  %7541 = and i32 %7540, 6144
  %7542 = icmp eq i32 %7541, 0
  br i1 %7542, label %7547, label %7543

7543:                                             ; preds = %7539
  %7544 = call ptr @Perl_PerlIO_stderr() #15
  %7545 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7544, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.46) #15
  %7546 = load i32, ptr %110, align 8, !tbaa !185
  br label %7547

7547:                                             ; preds = %7543, %7539
  %7548 = phi i32 [ %7546, %7543 ], [ %7540, %7539 ]
  %7549 = and i32 %7548, 8192
  %7550 = icmp eq i32 %7549, 0
  br i1 %7550, label %7555, label %7551

7551:                                             ; preds = %7547
  %7552 = call ptr @Perl_PerlIO_stderr() #15
  %7553 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7552, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.47) #15
  %7554 = load i32, ptr %110, align 8, !tbaa !185
  br label %7555

7555:                                             ; preds = %7551, %7547
  %7556 = phi i32 [ %7554, %7551 ], [ %7548, %7547 ]
  %7557 = and i32 %7556, 16384
  %7558 = icmp eq i32 %7557, 0
  br i1 %7558, label %7563, label %7559

7559:                                             ; preds = %7555
  %7560 = call ptr @Perl_PerlIO_stderr() #15
  %7561 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7560, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.48) #15
  %7562 = load i32, ptr %110, align 8, !tbaa !185
  br label %7563

7563:                                             ; preds = %7559, %7555
  %7564 = phi i32 [ %7562, %7559 ], [ %7556, %7555 ]
  %7565 = and i32 %7564, 32768
  %7566 = icmp eq i32 %7565, 0
  br i1 %7566, label %7571, label %7567

7567:                                             ; preds = %7563
  %7568 = call ptr @Perl_PerlIO_stderr() #15
  %7569 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7568, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.49) #15
  %7570 = load i32, ptr %110, align 8, !tbaa !185
  br label %7571

7571:                                             ; preds = %7567, %7563
  %7572 = phi i32 [ %7570, %7567 ], [ %7564, %7563 ]
  %7573 = and i32 %7572, 65536
  %7574 = icmp eq i32 %7573, 0
  br i1 %7574, label %7579, label %7575

7575:                                             ; preds = %7571
  %7576 = call ptr @Perl_PerlIO_stderr() #15
  %7577 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7576, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.50) #15
  %7578 = load i32, ptr %110, align 8, !tbaa !185
  br label %7579

7579:                                             ; preds = %7575, %7571
  %7580 = phi i32 [ %7578, %7575 ], [ %7572, %7571 ]
  %7581 = and i32 %7580, 131072
  %7582 = icmp eq i32 %7581, 0
  br i1 %7582, label %7586, label %7583

7583:                                             ; preds = %7579
  %7584 = call ptr @Perl_PerlIO_stderr() #15
  %7585 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7584, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.51) #15
  br label %7586

7586:                                             ; preds = %7583, %7579
  %7587 = call ptr @Perl_PerlIO_stderr() #15
  %7588 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7587, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.52) #15
  br label %7589

7589:                                             ; preds = %7586, %7455
  %7590 = call ptr @Perl_PerlIO_stderr() #15
  %7591 = load i32, ptr %111, align 4, !tbaa !253
  %7592 = sext i32 %7591 to i64
  %7593 = load ptr, ptr %112, align 8, !tbaa !184
  %7594 = icmp eq ptr %7593, null
  br i1 %7594, label %7597, label %7595

7595:                                             ; preds = %7589
  %7596 = load i64, ptr %7593, align 8, !tbaa !9
  br label %7597

7597:                                             ; preds = %7589, %7595
  %7598 = phi i64 [ %7596, %7595 ], [ -1, %7589 ]
  %7599 = select i1 %7419, ptr @.str.248, ptr @.str.8
  %7600 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7590, ptr noundef nonnull @.str.247, i64 noundef %7592, i64 noundef %7598, ptr noundef nonnull %7599) #15
  %7601 = load ptr, ptr %113, align 8, !tbaa !179
  %7602 = icmp eq ptr %7601, null
  br i1 %7602, label %7629, label %7603

7603:                                             ; preds = %7597
  %7604 = call ptr @Perl_PerlIO_stderr() #15
  %7605 = load ptr, ptr %113, align 8, !tbaa !179
  %7606 = getelementptr inbounds %struct.sv, ptr %7605, i64 0, i32 3
  %7607 = load ptr, ptr %7606, align 8, !tbaa !17
  %7608 = load i64, ptr %114, align 8, !tbaa !254
  %7609 = load i64, ptr %115, align 8, !tbaa !255
  %7610 = load i64, ptr %116, align 8, !tbaa !256
  %7611 = load ptr, ptr %117, align 8, !tbaa !180
  %7612 = icmp eq ptr %7611, null
  %7613 = icmp eq ptr %7611, %118
  %7614 = select i1 %7613, ptr @.str.250, ptr @.str.8
  %7615 = select i1 %7612, ptr @.str.8, ptr %7614
  %7616 = load ptr, ptr %118, align 8, !tbaa !176
  %7617 = getelementptr inbounds %struct.sv, ptr %7616, i64 0, i32 3
  %7618 = load ptr, ptr %7617, align 8, !tbaa !17
  %7619 = load i64, ptr %119, align 8, !tbaa !187
  %7620 = icmp eq ptr %7611, %120
  %7621 = select i1 %7620, ptr @.str.250, ptr @.str.8
  %7622 = select i1 %7612, ptr @.str.8, ptr %7621
  %7623 = load ptr, ptr %120, align 8, !tbaa !178
  %7624 = getelementptr inbounds %struct.sv, ptr %7623, i64 0, i32 3
  %7625 = load ptr, ptr %7624, align 8, !tbaa !17
  %7626 = load i64, ptr %121, align 8, !tbaa !186
  %7627 = load i64, ptr %122, align 8, !tbaa !192
  %7628 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7604, ptr noundef nonnull @.str.249, ptr noundef %7607, i64 noundef %7608, i64 noundef %7609, i64 noundef %7610, ptr noundef nonnull %7615, ptr noundef %7618, i64 noundef %7619, ptr noundef nonnull %7622, ptr noundef %7625, i64 noundef %7626, i64 noundef %7627) #15
  br label %7629

7629:                                             ; preds = %7603, %7597
  %7630 = call ptr @Perl_PerlIO_stderr() #15
  %7631 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %7630, ptr noundef nonnull @.str.53) #15
  br label %7632

7632:                                             ; preds = %7629, %7450
  %7633 = call i64 @llvm.smin.i64(i64 %7224, i64 %7230)
  %7634 = load i32, ptr %150, align 8, !tbaa !98
  %7635 = and i32 %7634, 4096
  %7636 = icmp eq i32 %7635, 0
  br i1 %7636, label %7637, label %7647

7637:                                             ; preds = %7632
  %7638 = sub nsw i64 9223372036854775807, %7226
  %7639 = icmp sgt i64 %7633, %7638
  %7640 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 41
  br i1 %7639, label %7645, label %7641

7641:                                             ; preds = %7637
  %7642 = load i64, ptr %7640, align 8, !tbaa !99
  %7643 = add nsw i64 %7633, %7226
  %7644 = icmp slt i64 %7642, %7643
  br i1 %7644, label %7645, label %7647

7645:                                             ; preds = %7641, %7637
  %7646 = phi i64 [ 9223372036854775807, %7637 ], [ %7643, %7641 ]
  store i64 %7646, ptr %7640, align 8, !tbaa !99
  br label %7647

7647:                                             ; preds = %7645, %7632, %7641
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %18)
  call void @llvm.lifetime.end.p0(i64 152, ptr nonnull %17) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %16) #15
  ret i64 %7633
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #5

declare void @Perl_pop_scope() local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_scan_commit(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %7 = load i32, ptr %6, align 8, !tbaa !50
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !179
  br i1 %8, label %11, label %15

11:                                               ; preds = %4
  %12 = load ptr, ptr %10, align 8, !tbaa !16
  %13 = getelementptr inbounds %struct.xpv, ptr %12, i64 0, i32 2
  %14 = load i64, ptr %13, align 8, !tbaa !38
  br label %24

15:                                               ; preds = %4
  %16 = tail call i64 @Perl_sv_len_utf8(ptr noundef %10) #15
  %17 = load i32, ptr %6, align 8, !tbaa !50
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 6
  %21 = load ptr, ptr %20, align 8, !tbaa !180
  %22 = load ptr, ptr %21, align 8, !tbaa !5
  %23 = tail call i64 @Perl_sv_len_utf8(ptr noundef %22) #15
  br label %32

24:                                               ; preds = %11, %15
  %25 = phi i64 [ %14, %11 ], [ %16, %15 ]
  %26 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 6
  %27 = load ptr, ptr %26, align 8, !tbaa !180
  %28 = load ptr, ptr %27, align 8, !tbaa !5
  %29 = load ptr, ptr %28, align 8, !tbaa !16
  %30 = getelementptr inbounds %struct.xpv, ptr %29, i64 0, i32 2
  %31 = load i64, ptr %30, align 8, !tbaa !38
  br label %32

32:                                               ; preds = %24, %19
  %33 = phi i64 [ %16, %19 ], [ %25, %24 ]
  %34 = phi i64 [ %23, %19 ], [ %31, %24 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  store volatile i64 0, ptr %5, align 8, !tbaa !9
  %35 = load volatile i64, ptr %5, align 8, !tbaa !9
  %36 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %37 = icmp eq ptr %36, null
  br i1 %37, label %57, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %40 = load i32, ptr %39, align 4, !tbaa !13
  %41 = and i32 %40, 256
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %38
  tail call void @Perl_sv_setuv(ptr noundef nonnull %36, i64 noundef 65288) #15
  %44 = load i32, ptr %39, align 4, !tbaa !13
  br label %45

45:                                               ; preds = %43, %38
  %46 = phi i32 [ %44, %43 ], [ %40, %38 ]
  %47 = and i32 %46, 2097408
  %48 = icmp eq i32 %47, 256
  br i1 %48, label %49, label %53

49:                                               ; preds = %45
  %50 = load ptr, ptr %36, align 8, !tbaa !16
  %51 = getelementptr inbounds %struct.xpviv, ptr %50, i64 0, i32 4
  %52 = load i64, ptr %51, align 8, !tbaa !17
  br label %55

53:                                               ; preds = %45
  %54 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %36, i32 noundef 2) #15
  br label %55

55:                                               ; preds = %53, %49
  %56 = phi i64 [ %52, %49 ], [ %54, %53 ]
  store volatile i64 %56, ptr %5, align 8, !tbaa !9
  br label %57

57:                                               ; preds = %55, %32
  %58 = icmp eq ptr %2, null
  br i1 %58, label %59, label %60

59:                                               ; preds = %57
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.241, i32 noundef 939) #15
  br label %60

60:                                               ; preds = %57, %59
  %61 = icmp ult i64 %33, %34
  br i1 %61, label %138, label %62

62:                                               ; preds = %60
  %63 = icmp ugt i64 %33, %34
  br i1 %63, label %69, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 16
  %66 = load i32, ptr %65, align 8, !tbaa !185
  %67 = and i32 %66, 3
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %138, label %69

69:                                               ; preds = %62, %64
  %70 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 6
  %71 = load ptr, ptr %70, align 8, !tbaa !180
  %72 = load ptr, ptr %71, align 8, !tbaa !5
  %73 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 2
  %74 = load ptr, ptr %73, align 8, !tbaa !179
  %75 = icmp eq ptr %72, %74
  br i1 %75, label %87, label %76

76:                                               ; preds = %69
  tail call void @Perl_sv_setsv_flags(ptr noundef %72, ptr noundef %74, i32 noundef 1538) #15
  %77 = load ptr, ptr %70, align 8, !tbaa !180
  %78 = load ptr, ptr %77, align 8, !tbaa !5
  %79 = getelementptr inbounds %struct.sv, ptr %78, i64 0, i32 2
  %80 = load i32, ptr %79, align 4, !tbaa !13
  %81 = and i32 %80, 4194304
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %76
  %84 = tail call i32 @Perl_mg_set(ptr noundef nonnull %78) #15
  %85 = load ptr, ptr %70, align 8, !tbaa !180
  %86 = load ptr, ptr %85, align 8, !tbaa !5
  br label %87

87:                                               ; preds = %83, %76, %69
  %88 = phi ptr [ %86, %83 ], [ %78, %76 ], [ %72, %69 ]
  %89 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 7
  %90 = load ptr, ptr %89, align 8, !tbaa !176
  %91 = icmp eq ptr %88, %90
  %92 = icmp eq i64 %33, 0
  %93 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 4
  %94 = select i1 %92, ptr %1, ptr %93
  %95 = load i64, ptr %94, align 8, !tbaa !9
  br i1 %91, label %96, label %108

96:                                               ; preds = %87
  %97 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 8
  store i64 %95, ptr %97, align 8, !tbaa !187
  %98 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 16
  %99 = load i32, ptr %98, align 8, !tbaa !185
  %100 = and i32 %99, 3
  %101 = icmp eq i32 %100, 0
  %102 = and i32 %99, -13
  %103 = shl nuw nsw i32 %100, 2
  %104 = or i32 %103, %99
  %105 = select i1 %101, i32 %102, i32 %104
  store i32 %105, ptr %98, align 8, !tbaa !185
  %106 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 9
  store ptr %2, ptr %106, align 8, !tbaa !195
  %107 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 10
  store i32 0, ptr %107, align 8, !tbaa !194
  br label %138

108:                                              ; preds = %87
  %109 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 12
  store i64 %95, ptr %109, align 8, !tbaa !186
  br i1 %92, label %113, label %110

110:                                              ; preds = %108
  %111 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 5
  %112 = load i64, ptr %111, align 8, !tbaa !256
  br label %121

113:                                              ; preds = %108
  %114 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 1
  %115 = load i64, ptr %114, align 8, !tbaa !252
  %116 = load i64, ptr %1, align 8, !tbaa !251
  %117 = sub nsw i64 9223372036854775807, %116
  %118 = icmp sgt i64 %115, %117
  %119 = add nsw i64 %116, %115
  %120 = select i1 %118, i64 9223372036854775807, i64 %119
  br label %121

121:                                              ; preds = %113, %110
  %122 = phi i64 [ %112, %110 ], [ %120, %113 ]
  %123 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 13
  %124 = icmp ne i32 %3, 0
  %125 = icmp slt i64 %122, 0
  %126 = select i1 %124, i1 true, i1 %125
  %127 = select i1 %126, i64 9223372036854775807, i64 %122
  store i64 %127, ptr %123, align 8
  %128 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 16
  %129 = load i32, ptr %128, align 8, !tbaa !185
  %130 = and i32 %129, 3
  %131 = icmp eq i32 %130, 0
  %132 = and i32 %129, -49
  %133 = shl nuw nsw i32 %130, 4
  %134 = or i32 %133, %129
  %135 = select i1 %131, i32 %132, i32 %134
  store i32 %135, ptr %128, align 8, !tbaa !185
  %136 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 14
  store ptr %2, ptr %136, align 8, !tbaa !189
  %137 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 15
  store i64 0, ptr %137, align 8, !tbaa !188
  br label %138

138:                                              ; preds = %60, %64, %121, %96
  %139 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 2
  %140 = load ptr, ptr %139, align 8, !tbaa !179
  %141 = getelementptr inbounds %struct.sv, ptr %140, i64 0, i32 2
  %142 = load i32, ptr %141, align 4, !tbaa !13
  %143 = and i32 %142, 15
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds [0 x i8], ptr @PL_valid_types_PVX, i64 0, i64 %144
  %146 = load i8, ptr %145, align 1, !tbaa !11, !range !18, !noundef !19
  %147 = icmp ne i8 %146, 0
  %148 = and i32 %142, 255
  %149 = icmp eq i32 %148, 8
  %150 = or i1 %147, %149
  br i1 %150, label %155, label %151

151:                                              ; preds = %138
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.279, i32 noundef 972) #15
  %152 = load ptr, ptr %139, align 8, !tbaa !179
  %153 = getelementptr inbounds %struct.sv, ptr %152, i64 0, i32 2
  %154 = load i32, ptr %153, align 4, !tbaa !13
  br label %155

155:                                              ; preds = %138, %151
  %156 = phi i32 [ %142, %138 ], [ %154, %151 ]
  %157 = phi ptr [ %140, %138 ], [ %152, %151 ]
  %158 = and i32 %156, 49152
  %159 = icmp eq i32 %158, 32768
  br i1 %159, label %160, label %168

160:                                              ; preds = %155
  %161 = and i32 %156, 255
  %162 = add nsw i32 %161, -9
  %163 = icmp ult i32 %162, 2
  br i1 %163, label %164, label %168

164:                                              ; preds = %160
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.280, i32 noundef 972) #15
  %165 = load ptr, ptr %139, align 8, !tbaa !179
  %166 = getelementptr inbounds %struct.sv, ptr %165, i64 0, i32 2
  %167 = load i32, ptr %166, align 4, !tbaa !13
  br label %168

168:                                              ; preds = %160, %155, %164
  %169 = phi i32 [ %156, %160 ], [ %156, %155 ], [ %167, %164 ]
  %170 = phi ptr [ %157, %160 ], [ %157, %155 ], [ %165, %164 ]
  %171 = and i32 %169, 255
  %172 = icmp eq i32 %171, 15
  br i1 %172, label %173, label %183

173:                                              ; preds = %168
  %174 = load ptr, ptr %170, align 8, !tbaa !16
  %175 = getelementptr inbounds %struct.xpvio, ptr %174, i64 0, i32 17
  %176 = load i8, ptr %175, align 1, !tbaa !120
  %177 = and i8 %176, 64
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %179, label %183

179:                                              ; preds = %173
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.281, i32 noundef 972) #15
  %180 = load ptr, ptr %139, align 8, !tbaa !179
  %181 = getelementptr inbounds %struct.sv, ptr %180, i64 0, i32 2
  %182 = load i32, ptr %181, align 4, !tbaa !13
  br label %183

183:                                              ; preds = %168, %173, %179
  %184 = phi i32 [ %169, %168 ], [ %169, %173 ], [ %182, %179 ]
  %185 = phi ptr [ %170, %168 ], [ %170, %173 ], [ %180, %179 ]
  %186 = load ptr, ptr %185, align 8, !tbaa !16
  %187 = getelementptr inbounds %struct.xpv, ptr %186, i64 0, i32 2
  store i64 0, ptr %187, align 8, !tbaa !38
  %188 = and i32 %184, 536870912
  %189 = icmp eq i32 %188, 0
  %190 = and i32 %184, 14680064
  %191 = icmp eq i32 %190, 0
  %192 = or i1 %189, %191
  br i1 %192, label %198, label %193

193:                                              ; preds = %183
  %194 = tail call ptr @Perl_mg_find(ptr noundef nonnull %185, i32 noundef 119) #15
  %195 = icmp eq ptr %194, null
  br i1 %195, label %198, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds %struct.magic, ptr %194, i64 0, i32 5
  store i64 0, ptr %197, align 8, !tbaa !282
  br label %198

198:                                              ; preds = %193, %196, %183
  %199 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 3
  store i64 -1, ptr %199, align 8, !tbaa !254
  %200 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 16
  %201 = load i32, ptr %200, align 8, !tbaa !185
  %202 = and i32 %201, -4
  store i32 %202, ptr %200, align 8, !tbaa !185
  %203 = load volatile i64, ptr %5, align 8, !tbaa !9
  %204 = and i64 %203, 1048578
  %205 = icmp eq i64 %204, 1048578
  br i1 %205, label %206, label %394

206:                                              ; preds = %198
  %207 = tail call ptr @Perl_PerlIO_stderr() #15
  %208 = load i64, ptr %1, align 8, !tbaa !251
  %209 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 1
  %210 = load i64, ptr %209, align 8, !tbaa !252
  %211 = load i32, ptr %200, align 8, !tbaa !185
  %212 = sext i32 %211 to i64
  %213 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %207, ptr noundef nonnull @.str.373, i32 noundef 0, ptr noundef nonnull @.str.8, i64 noundef %208, i64 noundef %210, i64 noundef %212) #15
  %214 = load i32, ptr %200, align 8, !tbaa !185
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %340, label %216

216:                                              ; preds = %206
  %217 = tail call ptr @Perl_PerlIO_stderr() #15
  %218 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %217, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.35) #15
  %219 = load i32, ptr %200, align 8, !tbaa !185
  %220 = and i32 %219, 16
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %226, label %222

222:                                              ; preds = %216
  %223 = tail call ptr @Perl_PerlIO_stderr() #15
  %224 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %223, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.37) #15
  %225 = load i32, ptr %200, align 8, !tbaa !185
  br label %226

226:                                              ; preds = %222, %216
  %227 = phi i32 [ %225, %222 ], [ %219, %216 ]
  %228 = and i32 %227, 32
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %234, label %230

230:                                              ; preds = %226
  %231 = tail call ptr @Perl_PerlIO_stderr() #15
  %232 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %231, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.38) #15
  %233 = load i32, ptr %200, align 8, !tbaa !185
  br label %234

234:                                              ; preds = %230, %226
  %235 = phi i32 [ %233, %230 ], [ %227, %226 ]
  %236 = and i32 %235, 64
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %242, label %238

238:                                              ; preds = %234
  %239 = tail call ptr @Perl_PerlIO_stderr() #15
  %240 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %239, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.39) #15
  %241 = load i32, ptr %200, align 8, !tbaa !185
  br label %242

242:                                              ; preds = %238, %234
  %243 = phi i32 [ %241, %238 ], [ %235, %234 ]
  %244 = and i32 %243, 128
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %250, label %246

246:                                              ; preds = %242
  %247 = tail call ptr @Perl_PerlIO_stderr() #15
  %248 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %247, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.40) #15
  %249 = load i32, ptr %200, align 8, !tbaa !185
  br label %250

250:                                              ; preds = %246, %242
  %251 = phi i32 [ %249, %246 ], [ %243, %242 ]
  %252 = and i32 %251, 256
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %258, label %254

254:                                              ; preds = %250
  %255 = tail call ptr @Perl_PerlIO_stderr() #15
  %256 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %255, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.41) #15
  %257 = load i32, ptr %200, align 8, !tbaa !185
  br label %258

258:                                              ; preds = %254, %250
  %259 = phi i32 [ %257, %254 ], [ %251, %250 ]
  %260 = and i32 %259, 512
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %266, label %262

262:                                              ; preds = %258
  %263 = tail call ptr @Perl_PerlIO_stderr() #15
  %264 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %263, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.42) #15
  %265 = load i32, ptr %200, align 8, !tbaa !185
  br label %266

266:                                              ; preds = %262, %258
  %267 = phi i32 [ %265, %262 ], [ %259, %258 ]
  %268 = and i32 %267, 1024
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %274, label %270

270:                                              ; preds = %266
  %271 = tail call ptr @Perl_PerlIO_stderr() #15
  %272 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %271, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.43) #15
  %273 = load i32, ptr %200, align 8, !tbaa !185
  br label %274

274:                                              ; preds = %270, %266
  %275 = phi i32 [ %273, %270 ], [ %267, %266 ]
  %276 = and i32 %275, 2048
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %282, label %278

278:                                              ; preds = %274
  %279 = tail call ptr @Perl_PerlIO_stderr() #15
  %280 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %279, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.44) #15
  %281 = load i32, ptr %200, align 8, !tbaa !185
  br label %282

282:                                              ; preds = %278, %274
  %283 = phi i32 [ %281, %278 ], [ %275, %274 ]
  %284 = and i32 %283, 4096
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %290, label %286

286:                                              ; preds = %282
  %287 = tail call ptr @Perl_PerlIO_stderr() #15
  %288 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %287, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.45) #15
  %289 = load i32, ptr %200, align 8, !tbaa !185
  br label %290

290:                                              ; preds = %286, %282
  %291 = phi i32 [ %289, %286 ], [ %283, %282 ]
  %292 = and i32 %291, 6144
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %298, label %294

294:                                              ; preds = %290
  %295 = tail call ptr @Perl_PerlIO_stderr() #15
  %296 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %295, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.46) #15
  %297 = load i32, ptr %200, align 8, !tbaa !185
  br label %298

298:                                              ; preds = %294, %290
  %299 = phi i32 [ %297, %294 ], [ %291, %290 ]
  %300 = and i32 %299, 8192
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %306, label %302

302:                                              ; preds = %298
  %303 = tail call ptr @Perl_PerlIO_stderr() #15
  %304 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %303, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.47) #15
  %305 = load i32, ptr %200, align 8, !tbaa !185
  br label %306

306:                                              ; preds = %302, %298
  %307 = phi i32 [ %305, %302 ], [ %299, %298 ]
  %308 = and i32 %307, 16384
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %314, label %310

310:                                              ; preds = %306
  %311 = tail call ptr @Perl_PerlIO_stderr() #15
  %312 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %311, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.48) #15
  %313 = load i32, ptr %200, align 8, !tbaa !185
  br label %314

314:                                              ; preds = %310, %306
  %315 = phi i32 [ %313, %310 ], [ %307, %306 ]
  %316 = and i32 %315, 32768
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %322, label %318

318:                                              ; preds = %314
  %319 = tail call ptr @Perl_PerlIO_stderr() #15
  %320 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %319, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.49) #15
  %321 = load i32, ptr %200, align 8, !tbaa !185
  br label %322

322:                                              ; preds = %318, %314
  %323 = phi i32 [ %321, %318 ], [ %315, %314 ]
  %324 = and i32 %323, 65536
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %330, label %326

326:                                              ; preds = %322
  %327 = tail call ptr @Perl_PerlIO_stderr() #15
  %328 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %327, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.50) #15
  %329 = load i32, ptr %200, align 8, !tbaa !185
  br label %330

330:                                              ; preds = %326, %322
  %331 = phi i32 [ %329, %326 ], [ %323, %322 ]
  %332 = and i32 %331, 131072
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %337, label %334

334:                                              ; preds = %330
  %335 = tail call ptr @Perl_PerlIO_stderr() #15
  %336 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %335, ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.51) #15
  br label %337

337:                                              ; preds = %334, %330
  %338 = tail call ptr @Perl_PerlIO_stderr() #15
  %339 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %338, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.52) #15
  br label %340

340:                                              ; preds = %337, %206
  %341 = tail call ptr @Perl_PerlIO_stderr() #15
  %342 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 17
  %343 = load i32, ptr %342, align 4, !tbaa !253
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 18
  %346 = load ptr, ptr %345, align 8, !tbaa !184
  %347 = icmp eq ptr %346, null
  br i1 %347, label %350, label %348

348:                                              ; preds = %340
  %349 = load i64, ptr %346, align 8, !tbaa !9
  br label %350

350:                                              ; preds = %340, %348
  %351 = phi i64 [ %349, %348 ], [ -1, %340 ]
  %352 = icmp eq i32 %3, 0
  %353 = select i1 %352, ptr @.str.8, ptr @.str.248
  %354 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %341, ptr noundef nonnull @.str.247, i64 noundef %344, i64 noundef %351, ptr noundef nonnull %353) #15
  %355 = load ptr, ptr %139, align 8, !tbaa !179
  %356 = icmp eq ptr %355, null
  br i1 %356, label %391, label %357

357:                                              ; preds = %350
  %358 = tail call ptr @Perl_PerlIO_stderr() #15
  %359 = load ptr, ptr %139, align 8, !tbaa !179
  %360 = getelementptr inbounds %struct.sv, ptr %359, i64 0, i32 3
  %361 = load ptr, ptr %360, align 8, !tbaa !17
  %362 = load i64, ptr %199, align 8, !tbaa !254
  %363 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 4
  %364 = load i64, ptr %363, align 8, !tbaa !255
  %365 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 5
  %366 = load i64, ptr %365, align 8, !tbaa !256
  %367 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 6
  %368 = load ptr, ptr %367, align 8, !tbaa !180
  %369 = icmp eq ptr %368, null
  %370 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 7
  %371 = icmp eq ptr %368, %370
  %372 = select i1 %371, ptr @.str.250, ptr @.str.8
  %373 = select i1 %369, ptr @.str.8, ptr %372
  %374 = load ptr, ptr %370, align 8, !tbaa !176
  %375 = getelementptr inbounds %struct.sv, ptr %374, i64 0, i32 3
  %376 = load ptr, ptr %375, align 8, !tbaa !17
  %377 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 8
  %378 = load i64, ptr %377, align 8, !tbaa !187
  %379 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 11
  %380 = icmp eq ptr %368, %379
  %381 = select i1 %380, ptr @.str.250, ptr @.str.8
  %382 = select i1 %369, ptr @.str.8, ptr %381
  %383 = load ptr, ptr %379, align 8, !tbaa !178
  %384 = getelementptr inbounds %struct.sv, ptr %383, i64 0, i32 3
  %385 = load ptr, ptr %384, align 8, !tbaa !17
  %386 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 12
  %387 = load i64, ptr %386, align 8, !tbaa !186
  %388 = getelementptr inbounds %struct.scan_data_t, ptr %1, i64 0, i32 13
  %389 = load i64, ptr %388, align 8, !tbaa !192
  %390 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %358, ptr noundef nonnull @.str.249, ptr noundef %361, i64 noundef %362, i64 noundef %364, i64 noundef %366, ptr noundef nonnull %373, ptr noundef %376, i64 noundef %378, ptr noundef nonnull %382, ptr noundef %385, i64 noundef %387, i64 noundef %389) #15
  br label %391

391:                                              ; preds = %357, %350
  %392 = tail call ptr @Perl_PerlIO_stderr() #15
  %393 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %392, ptr noundef nonnull @.str.53) #15
  br label %394

394:                                              ; preds = %391, %198
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  ret void
}

declare i64 @Perl_sv_len_utf8(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i1 @S_is_ssc_worth_it(ptr nocapture noundef readonly %0, ptr noundef readonly %1) unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i32, ptr %0, align 8, !tbaa !66
  %6 = lshr i32 %5, 7
  %7 = and i32 %6, 7
  switch i32 %7, label %52 [
    i32 1, label %53
    i32 2, label %8
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 6
  %10 = load ptr, ptr %9, align 8, !tbaa !284
  %11 = icmp eq ptr %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.229, i32 noundef 38) #15
  br label %13

13:                                               ; preds = %12, %8
  %14 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 2
  %15 = load i32, ptr %14, align 4, !tbaa !13
  %16 = and i32 %15, 255
  %17 = icmp eq i32 %16, 4
  br i1 %17, label %19, label %18

18:                                               ; preds = %13
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 40) #15
  br label %19

19:                                               ; preds = %18, %13
  %20 = load ptr, ptr %10, align 8, !tbaa !16
  %21 = getelementptr inbounds %struct.xpv, ptr %20, i64 0, i32 2
  %22 = load i64, ptr %21, align 8, !tbaa !38
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %49, label %24

24:                                               ; preds = %19
  %25 = lshr i64 %22, 3
  %26 = load i32, ptr %14, align 4, !tbaa !13
  %27 = and i32 %26, 255
  %28 = icmp eq i32 %27, 4
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 27) #15
  %30 = load ptr, ptr %10, align 8, !tbaa !16
  br label %31

31:                                               ; preds = %29, %24
  %32 = phi ptr [ %20, %24 ], [ %30, %29 ]
  %33 = getelementptr inbounds %struct.xpvinvlist, ptr %32, i64 0, i32 6
  %34 = load i8, ptr %33, align 1, !tbaa !11, !range !18, !noundef !19
  %35 = zext i8 %34 to i64
  %36 = icmp eq i64 %25, %35
  br i1 %36, label %49, label %37

37:                                               ; preds = %31
  %38 = tail call fastcc ptr @S_invlist_array(ptr noundef nonnull %10)
  %39 = xor i64 %35, -1
  %40 = add nsw i64 %25, %39
  %41 = and i64 %40, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds i64, ptr %38, i64 %40
  %45 = load i64, ptr %44, align 8, !tbaa !9
  %46 = freeze i64 %45
  %47 = add i64 %46, -1
  %48 = icmp ult i64 %47, 256
  br i1 %48, label %49, label %50

49:                                               ; preds = %19, %31, %43
  br label %50

50:                                               ; preds = %49, %43, %37
  %51 = phi i32 [ 56402, %43 ], [ 127, %49 ], [ 56402, %37 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #15
  br label %57

52:                                               ; preds = %2
  br label %53

53:                                               ; preds = %2, %52
  %54 = phi i32 [ 127, %2 ], [ 63, %52 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #15
  %55 = icmp eq ptr %1, null
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1572) #15
  br label %57

57:                                               ; preds = %50, %53, %56
  %58 = phi i32 [ %51, %50 ], [ %54, %53 ], [ %54, %56 ]
  %59 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 6
  %60 = load ptr, ptr %59, align 8, !tbaa !284
  %61 = icmp eq ptr %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %struct.sv, ptr %60, i64 0, i32 2
  %64 = load i32, ptr %63, align 4, !tbaa !13
  %65 = and i32 %64, 255
  %66 = icmp eq i32 %65, 4
  br i1 %66, label %72, label %67

67:                                               ; preds = %62
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  br label %72

68:                                               ; preds = %57
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9125) #15
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9115) #15
  %69 = load i32, ptr inttoptr (i64 12 to ptr), align 4, !tbaa !13
  %70 = and i32 %69, 255
  %71 = icmp ne i32 %70, 4
  tail call void @llvm.assume(i1 %71)
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  unreachable

72:                                               ; preds = %62, %67
  %73 = load ptr, ptr %60, align 8, !tbaa !16
  %74 = getelementptr inbounds %struct.xpvinvlist, ptr %73, i64 0, i32 5
  store i64 0, ptr %74, align 8, !tbaa !9
  br label %75

75:                                               ; preds = %92, %72
  %76 = phi i64 [ 0, %72 ], [ %98, %92 ]
  %77 = load ptr, ptr %59, align 8, !tbaa !284
  %78 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef %77, ptr noundef nonnull %3, ptr noundef nonnull %4)
  br i1 %78, label %79, label %117

79:                                               ; preds = %75
  %80 = load i32, ptr %0, align 8, !tbaa !66
  %81 = and i32 %80, 896
  %82 = icmp eq i32 %81, 256
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = load i64, ptr %4, align 8, !tbaa !9
  %85 = load i64, ptr %3, align 8, !tbaa !9
  br label %92

86:                                               ; preds = %79
  %87 = load i64, ptr %3, align 8, !tbaa !9
  %88 = icmp ugt i64 %87, 255
  br i1 %88, label %117, label %89

89:                                               ; preds = %86
  %90 = load i64, ptr %4, align 8
  %91 = call i64 @llvm.umin.i64(i64 %90, i64 255)
  store i64 %91, ptr %4, align 8, !tbaa !9
  br label %92

92:                                               ; preds = %83, %89
  %93 = phi i64 [ %85, %83 ], [ %87, %89 ]
  %94 = phi i64 [ %84, %83 ], [ %91, %89 ]
  %95 = and i64 %76, 4294967295
  %96 = add nuw nsw i64 %95, 1
  %97 = add i64 %96, %94
  %98 = sub i64 %97, %93
  %99 = trunc i64 %98 to i32
  %100 = icmp ult i32 %58, %99
  br i1 %100, label %101, label %75, !llvm.loop !292

101:                                              ; preds = %92
  %102 = load ptr, ptr %59, align 8, !tbaa !284
  %103 = icmp eq ptr %102, null
  br i1 %103, label %110, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %struct.sv, ptr %102, i64 0, i32 2
  %106 = load i32, ptr %105, align 4, !tbaa !13
  %107 = and i32 %106, 255
  %108 = icmp eq i32 %107, 4
  br i1 %108, label %114, label %109

109:                                              ; preds = %104
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  br label %114

110:                                              ; preds = %101
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9141) #15
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9115) #15
  %111 = load i32, ptr inttoptr (i64 12 to ptr), align 4, !tbaa !13
  %112 = and i32 %111, 255
  %113 = icmp ne i32 %112, 4
  call void @llvm.assume(i1 %113)
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  unreachable

114:                                              ; preds = %104, %109
  %115 = load ptr, ptr %102, align 8, !tbaa !16
  %116 = getelementptr inbounds %struct.xpvinvlist, ptr %115, i64 0, i32 5
  store i64 -1, ptr %116, align 8, !tbaa !9
  br label %117

117:                                              ; preds = %75, %86, %114
  %118 = phi i1 [ false, %114 ], [ true, %86 ], [ true, %75 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #15
  ret i1 %118
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @S_add_data(ptr nocapture noundef readonly %0, ptr noundef readonly %1, i32 noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %5 = load ptr, ptr %4, align 8, !tbaa !130
  %6 = getelementptr inbounds %struct.regexp_internal, ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !147
  %8 = icmp eq ptr %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = load i32, ptr %7, align 8, !tbaa !156
  br label %11

11:                                               ; preds = %9, %3
  %12 = phi i32 [ %10, %9 ], [ 0, %3 ]
  %13 = icmp eq ptr %1, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %11
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.374, i32 noundef 5654) #15
  %15 = load ptr, ptr %4, align 8, !tbaa !130
  %16 = getelementptr inbounds %struct.regexp_internal, ptr %15, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !147
  br label %18

18:                                               ; preds = %11, %14
  %19 = phi ptr [ %7, %11 ], [ %17, %14 ]
  %20 = add i32 %12, %2
  %21 = add i32 %20, -1
  %22 = zext i32 %21 to i64
  %23 = shl nuw nsw i64 %22, 3
  %24 = add nuw nsw i64 %23, 24
  %25 = tail call ptr @Perl_safesysrealloc(ptr noundef %19, i64 noundef %24) #15
  %26 = load ptr, ptr %4, align 8, !tbaa !130
  %27 = getelementptr inbounds %struct.regexp_internal, ptr %26, i64 0, i32 3
  store ptr %25, ptr %27, align 8, !tbaa !147
  %28 = icmp eq i32 %12, 0
  br i1 %28, label %39, label %29

29:                                               ; preds = %18
  %30 = getelementptr inbounds %struct.reg_data, ptr %25, i64 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !158
  %32 = zext i32 %20 to i64
  %33 = tail call ptr @Perl_safesysrealloc(ptr noundef %31, i64 noundef %32) #15
  %34 = load ptr, ptr %4, align 8, !tbaa !130
  %35 = getelementptr inbounds %struct.regexp_internal, ptr %34, i64 0, i32 3
  %36 = load ptr, ptr %35, align 8, !tbaa !147
  %37 = getelementptr inbounds %struct.reg_data, ptr %36, i64 0, i32 1
  store ptr %33, ptr %37, align 8, !tbaa !158
  %38 = zext i32 %2 to i64
  br label %46

39:                                               ; preds = %18
  %40 = zext i32 %2 to i64
  %41 = tail call ptr @Perl_safesysmalloc(i64 noundef %40) #15
  %42 = load ptr, ptr %4, align 8, !tbaa !130
  %43 = getelementptr inbounds %struct.regexp_internal, ptr %42, i64 0, i32 3
  %44 = load ptr, ptr %43, align 8, !tbaa !147
  %45 = getelementptr inbounds %struct.reg_data, ptr %44, i64 0, i32 1
  store ptr %41, ptr %45, align 8, !tbaa !158
  br label %46

46:                                               ; preds = %39, %29
  %47 = phi i64 [ %40, %39 ], [ %38, %29 ]
  %48 = phi ptr [ %41, %39 ], [ %33, %29 ]
  %49 = phi ptr [ %44, %39 ], [ %36, %29 ]
  store i32 %20, ptr %49, align 8, !tbaa !156
  %50 = zext i32 %12 to i64
  %51 = getelementptr inbounds i8, ptr %48, i64 %50
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %51, ptr align 1 %1, i64 %47, i1 false)
  ret i32 %12
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_ssc_finalize(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #15
  %4 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 6
  %5 = load ptr, ptr %4, align 8, !tbaa !284
  %6 = tail call fastcc ptr @S_invlist_clone(ptr noundef %5)
  store ptr %6, ptr %3, align 8, !tbaa !5
  %7 = icmp eq ptr %0, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 1608) #15
  br label %9

9:                                                ; preds = %8, %2
  %10 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 1
  %11 = load i8, ptr %10, align 1, !tbaa !181
  %12 = icmp eq i8 %11, 19
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 2
  %15 = load i16, ptr %14, align 2, !tbaa !182
  %16 = icmp eq i16 %15, 1
  br i1 %16, label %18, label %17

17:                                               ; preds = %13, %9
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1610) #15
  br label %18

18:                                               ; preds = %13, %17
  %19 = load i8, ptr %1, align 8, !tbaa !198
  %20 = and i8 %19, -19
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %18
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.375, i32 noundef 1615) #15
  br label %23

23:                                               ; preds = %18, %22
  call fastcc void @S_populate_ANYOF_from_invlist(ptr noundef nonnull %1, ptr noundef nonnull %3)
  %24 = load ptr, ptr %3, align 8, !tbaa !5
  call fastcc void @S_set_ANYOF_arg(ptr noundef %0, ptr noundef nonnull %1, ptr noundef %24, ptr noundef null, ptr noundef null, ptr noundef null, i1 noundef zeroext false)
  store ptr null, ptr %4, align 8, !tbaa !284
  %25 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 5
  %26 = load i32, ptr %25, align 8, !tbaa !293
  %27 = icmp eq i32 %26, 0
  %28 = load i8, ptr %1, align 8, !tbaa !198
  br i1 %27, label %31, label %29

29:                                               ; preds = %23
  %30 = or i8 %28, 8
  store i8 %30, ptr %1, align 8, !tbaa !198
  br label %31

31:                                               ; preds = %23, %29
  %32 = phi i8 [ %28, %23 ], [ %30, %29 ]
  %33 = and i8 %32, 12
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 34
  %37 = load i32, ptr %36, align 8, !tbaa !52
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.376, i32 noundef 1629) #15
  br label %40

40:                                               ; preds = %31, %35, %39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #15
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @my_regdump(ptr noundef %0) local_unnamed_addr #0 {
  %2 = alloca i64, align 8
  %3 = tail call ptr @Perl_sv_newmortal() #15
  %4 = tail call ptr @Perl_sv_newmortal() #15
  %5 = getelementptr inbounds %struct.regexp, ptr %0, i64 0, i32 14
  %6 = load ptr, ptr %5, align 8, !tbaa !90
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  store volatile i64 0, ptr %2, align 8, !tbaa !9
  %7 = load volatile i64, ptr %2, align 8, !tbaa !9
  %8 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %9 = icmp eq ptr %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !13
  %13 = and i32 %12, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  tail call void @Perl_sv_setuv(ptr noundef nonnull %8, i64 noundef 65288) #15
  %16 = load i32, ptr %11, align 4, !tbaa !13
  br label %17

17:                                               ; preds = %15, %10
  %18 = phi i32 [ %16, %15 ], [ %12, %10 ]
  %19 = and i32 %18, 2097408
  %20 = icmp eq i32 %19, 256
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = load ptr, ptr %8, align 8, !tbaa !16
  %23 = getelementptr inbounds %struct.xpviv, ptr %22, i64 0, i32 4
  %24 = load i64, ptr %23, align 8, !tbaa !17
  br label %27

25:                                               ; preds = %17
  %26 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %8, i32 noundef 2) #15
  br label %27

27:                                               ; preds = %25, %21
  %28 = phi i64 [ %24, %21 ], [ %26, %25 ]
  store volatile i64 %28, ptr %2, align 8, !tbaa !9
  br label %29

29:                                               ; preds = %27, %1
  %30 = getelementptr inbounds %struct.regexp_internal, ptr %6, i64 0, i32 6
  %31 = getelementptr inbounds %struct.regexp_internal, ptr %6, i64 1
  %32 = tail call fastcc ptr @S_dumpuntil(ptr noundef nonnull %0, ptr noundef nonnull %30, ptr noundef nonnull %31, ptr noundef null, ptr noundef null, ptr noundef %3, i32 noundef 0, i32 noundef 0)
  %33 = getelementptr inbounds %struct.regexp, ptr %0, i64 0, i32 11
  %34 = load ptr, ptr %33, align 8, !tbaa !133
  %35 = getelementptr inbounds %struct.reg_substr_data, ptr %34, i64 0, i32 1, i64 0, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !196
  %37 = icmp eq ptr %36, null
  br i1 %37, label %63, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 3
  %40 = load ptr, ptr %39, align 8, !tbaa !17
  %41 = load ptr, ptr %36, align 8, !tbaa !16
  %42 = getelementptr inbounds %struct.xpv, ptr %41, i64 0, i32 2
  %43 = load i64, ptr %42, align 8, !tbaa !38
  %44 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %45 = load i32, ptr %44, align 4, !tbaa !13
  %46 = icmp ugt i32 %45, -1073741825
  %47 = sext i1 %46 to i64
  %48 = add i64 %43, %47
  %49 = load ptr, ptr @PL_colors, align 16, !tbaa !5
  %50 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 1), align 8, !tbaa !5
  %51 = tail call ptr @Perl_pv_pretty(ptr noundef %4, ptr noundef %40, i64 noundef %48, i64 noundef 30, ptr noundef %49, ptr noundef %50, i32 noundef 33795) #15
  %52 = tail call ptr @Perl_PerlIO_stderr() #15
  %53 = load ptr, ptr %33, align 8, !tbaa !133
  %54 = getelementptr inbounds %struct.reg_substr_data, ptr %53, i64 0, i32 1
  %55 = getelementptr inbounds %struct.reg_substr_data, ptr %53, i64 0, i32 1, i64 0, i32 2
  %56 = load ptr, ptr %55, align 8, !tbaa !196
  %57 = getelementptr inbounds %struct.sv, ptr %56, i64 0, i32 2
  %58 = load i32, ptr %57, align 4, !tbaa !13
  %59 = icmp ugt i32 %58, -1073741825
  %60 = select i1 %59, ptr @.str.96, ptr @.str.8
  %61 = load i64, ptr %54, align 8, !tbaa !190
  %62 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %52, ptr noundef nonnull @.str.95, ptr noundef %51, ptr noundef nonnull %60, i64 noundef %61) #15
  br label %92

63:                                               ; preds = %29
  %64 = getelementptr inbounds %struct.reg_substr_data, ptr %34, i64 0, i32 1, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8, !tbaa !197
  %66 = icmp eq ptr %65, null
  br i1 %66, label %92, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.sv, ptr %65, i64 0, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !17
  %70 = load ptr, ptr %65, align 8, !tbaa !16
  %71 = getelementptr inbounds %struct.xpv, ptr %70, i64 0, i32 2
  %72 = load i64, ptr %71, align 8, !tbaa !38
  %73 = getelementptr inbounds %struct.sv, ptr %65, i64 0, i32 2
  %74 = load i32, ptr %73, align 4, !tbaa !13
  %75 = icmp ugt i32 %74, -1073741825
  %76 = sext i1 %75 to i64
  %77 = add i64 %72, %76
  %78 = load ptr, ptr @PL_colors, align 16, !tbaa !5
  %79 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 1), align 8, !tbaa !5
  %80 = tail call ptr @Perl_pv_pretty(ptr noundef %4, ptr noundef %69, i64 noundef %77, i64 noundef 30, ptr noundef %78, ptr noundef %79, i32 noundef 34051) #15
  %81 = tail call ptr @Perl_PerlIO_stderr() #15
  %82 = load ptr, ptr %33, align 8, !tbaa !133
  %83 = getelementptr inbounds %struct.reg_substr_data, ptr %82, i64 0, i32 1
  %84 = getelementptr inbounds %struct.reg_substr_data, ptr %82, i64 0, i32 1, i64 0, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !197
  %86 = getelementptr inbounds %struct.sv, ptr %85, i64 0, i32 2
  %87 = load i32, ptr %86, align 4, !tbaa !13
  %88 = icmp ugt i32 %87, -1073741825
  %89 = select i1 %88, ptr @.str.96, ptr @.str.8
  %90 = load i64, ptr %83, align 8, !tbaa !190
  %91 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %81, ptr noundef nonnull @.str.97, ptr noundef %80, ptr noundef nonnull %89, i64 noundef %90) #15
  br label %92

92:                                               ; preds = %63, %67, %38
  %93 = load ptr, ptr %33, align 8, !tbaa !133
  %94 = getelementptr inbounds %struct.reg_substr_data, ptr %93, i64 0, i32 1, i64 1, i32 2
  %95 = load ptr, ptr %94, align 8, !tbaa !196
  %96 = icmp eq ptr %95, null
  br i1 %96, label %124, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %struct.sv, ptr %95, i64 0, i32 3
  %99 = load ptr, ptr %98, align 8, !tbaa !17
  %100 = load ptr, ptr %95, align 8, !tbaa !16
  %101 = getelementptr inbounds %struct.xpv, ptr %100, i64 0, i32 2
  %102 = load i64, ptr %101, align 8, !tbaa !38
  %103 = getelementptr inbounds %struct.sv, ptr %95, i64 0, i32 2
  %104 = load i32, ptr %103, align 4, !tbaa !13
  %105 = icmp ugt i32 %104, -1073741825
  %106 = sext i1 %105 to i64
  %107 = add i64 %102, %106
  %108 = load ptr, ptr @PL_colors, align 16, !tbaa !5
  %109 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 1), align 8, !tbaa !5
  %110 = tail call ptr @Perl_pv_pretty(ptr noundef %4, ptr noundef %99, i64 noundef %107, i64 noundef 30, ptr noundef %108, ptr noundef %109, i32 noundef 33795) #15
  %111 = tail call ptr @Perl_PerlIO_stderr() #15
  %112 = load ptr, ptr %33, align 8, !tbaa !133
  %113 = getelementptr inbounds %struct.reg_substr_data, ptr %112, i64 0, i32 1, i64 1
  %114 = getelementptr inbounds %struct.reg_substr_data, ptr %112, i64 0, i32 1, i64 1, i32 2
  %115 = load ptr, ptr %114, align 8, !tbaa !196
  %116 = getelementptr inbounds %struct.sv, ptr %115, i64 0, i32 2
  %117 = load i32, ptr %116, align 4, !tbaa !13
  %118 = icmp ugt i32 %117, -1073741825
  %119 = select i1 %118, ptr @.str.96, ptr @.str.8
  %120 = load i64, ptr %113, align 8, !tbaa !190
  %121 = getelementptr inbounds %struct.reg_substr_data, ptr %112, i64 0, i32 1, i64 1, i32 1
  %122 = load i64, ptr %121, align 8, !tbaa !193
  %123 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %111, ptr noundef nonnull @.str.98, ptr noundef %110, ptr noundef nonnull %119, i64 noundef %120, i64 noundef %122) #15
  br label %155

124:                                              ; preds = %92
  %125 = getelementptr inbounds %struct.reg_substr_data, ptr %93, i64 0, i32 1, i64 1, i32 3
  %126 = load ptr, ptr %125, align 8, !tbaa !197
  %127 = icmp eq ptr %126, null
  br i1 %127, label %155, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.sv, ptr %126, i64 0, i32 3
  %130 = load ptr, ptr %129, align 8, !tbaa !17
  %131 = load ptr, ptr %126, align 8, !tbaa !16
  %132 = getelementptr inbounds %struct.xpv, ptr %131, i64 0, i32 2
  %133 = load i64, ptr %132, align 8, !tbaa !38
  %134 = getelementptr inbounds %struct.sv, ptr %126, i64 0, i32 2
  %135 = load i32, ptr %134, align 4, !tbaa !13
  %136 = icmp ugt i32 %135, -1073741825
  %137 = sext i1 %136 to i64
  %138 = add i64 %133, %137
  %139 = load ptr, ptr @PL_colors, align 16, !tbaa !5
  %140 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 1), align 8, !tbaa !5
  %141 = tail call ptr @Perl_pv_pretty(ptr noundef %4, ptr noundef %130, i64 noundef %138, i64 noundef 30, ptr noundef %139, ptr noundef %140, i32 noundef 34051) #15
  %142 = tail call ptr @Perl_PerlIO_stderr() #15
  %143 = load ptr, ptr %33, align 8, !tbaa !133
  %144 = getelementptr inbounds %struct.reg_substr_data, ptr %143, i64 0, i32 1, i64 1
  %145 = getelementptr inbounds %struct.reg_substr_data, ptr %143, i64 0, i32 1, i64 1, i32 3
  %146 = load ptr, ptr %145, align 8, !tbaa !197
  %147 = getelementptr inbounds %struct.sv, ptr %146, i64 0, i32 2
  %148 = load i32, ptr %147, align 4, !tbaa !13
  %149 = icmp ugt i32 %148, -1073741825
  %150 = select i1 %149, ptr @.str.96, ptr @.str.8
  %151 = load i64, ptr %144, align 8, !tbaa !190
  %152 = getelementptr inbounds %struct.reg_substr_data, ptr %143, i64 0, i32 1, i64 1, i32 1
  %153 = load i64, ptr %152, align 8, !tbaa !193
  %154 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %142, ptr noundef nonnull @.str.99, ptr noundef %141, ptr noundef nonnull %150, i64 noundef %151, i64 noundef %153) #15
  br label %155

155:                                              ; preds = %124, %128, %97
  %156 = load ptr, ptr %33, align 8, !tbaa !133
  %157 = getelementptr inbounds %struct.reg_substr_data, ptr %156, i64 0, i32 1, i64 2, i32 2
  %158 = load ptr, ptr %157, align 8, !tbaa !196
  %159 = icmp eq ptr %158, null
  br i1 %159, label %160, label %164

160:                                              ; preds = %155
  %161 = getelementptr inbounds %struct.reg_substr_data, ptr %156, i64 0, i32 1, i64 2, i32 3
  %162 = load ptr, ptr %161, align 8, !tbaa !197
  %163 = icmp eq ptr %162, null
  br i1 %163, label %182, label %164

164:                                              ; preds = %160, %155
  %165 = tail call ptr @Perl_PerlIO_stderr() #15
  %166 = load ptr, ptr %33, align 8, !tbaa !133
  %167 = getelementptr inbounds %struct.reg_substr_data, ptr %166, i64 0, i32 1, i64 2, i32 2
  %168 = load ptr, ptr %167, align 8, !tbaa !196
  %169 = getelementptr inbounds %struct.reg_substr_data, ptr %166, i64 0, i32 1, i64 1, i32 2
  %170 = load ptr, ptr %169, align 8, !tbaa !196
  %171 = icmp eq ptr %168, %170
  br i1 %171, label %172, label %179

172:                                              ; preds = %164
  %173 = getelementptr inbounds %struct.reg_substr_data, ptr %166, i64 0, i32 1, i64 2, i32 3
  %174 = load ptr, ptr %173, align 8, !tbaa !197
  %175 = getelementptr inbounds %struct.reg_substr_data, ptr %166, i64 0, i32 1, i64 1, i32 3
  %176 = load ptr, ptr %175, align 8, !tbaa !197
  %177 = icmp eq ptr %174, %176
  %178 = select i1 %177, ptr @.str.100, ptr @.str.101
  br label %179

179:                                              ; preds = %172, %164
  %180 = phi ptr [ @.str.101, %164 ], [ %178, %172 ]
  %181 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %165, ptr noundef nonnull %180) #15
  br label %182

182:                                              ; preds = %179, %160
  %183 = getelementptr inbounds %struct.regexp, ptr %0, i64 0, i32 13
  %184 = load i32, ptr %183, align 4, !tbaa !125
  %185 = and i32 %184, 64
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %190, label %187

187:                                              ; preds = %182
  %188 = tail call ptr @Perl_PerlIO_stderr() #15
  %189 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %188, ptr noundef nonnull @.str.102) #15
  br label %190

190:                                              ; preds = %187, %182
  %191 = getelementptr inbounds %struct.regexp, ptr %0, i64 0, i32 7
  %192 = load i32, ptr %191, align 8, !tbaa !123
  %193 = and i32 %192, 524288
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %198, label %195

195:                                              ; preds = %190
  %196 = tail call ptr @Perl_PerlIO_stderr() #15
  %197 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %196, ptr noundef nonnull @.str.103) #15
  br label %198

198:                                              ; preds = %195, %190
  %199 = load ptr, ptr %33, align 8, !tbaa !133
  %200 = getelementptr inbounds %struct.reg_substr_data, ptr %199, i64 0, i32 1, i64 2, i32 2
  %201 = load ptr, ptr %200, align 8, !tbaa !196
  %202 = icmp eq ptr %201, null
  br i1 %202, label %203, label %207

203:                                              ; preds = %198
  %204 = getelementptr inbounds %struct.reg_substr_data, ptr %199, i64 0, i32 1, i64 2, i32 3
  %205 = load ptr, ptr %204, align 8, !tbaa !197
  %206 = icmp eq ptr %205, null
  br i1 %206, label %210, label %207

207:                                              ; preds = %203, %198
  %208 = tail call ptr @Perl_PerlIO_stderr() #15
  %209 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %208, ptr noundef nonnull @.str.104) #15
  br label %210

210:                                              ; preds = %207, %203
  %211 = getelementptr inbounds %struct.regexp_internal, ptr %6, i64 0, i32 2
  %212 = load ptr, ptr %211, align 8, !tbaa !140
  %213 = icmp eq ptr %212, null
  br i1 %213, label %219, label %214

214:                                              ; preds = %210
  tail call void @my_regprop(ptr noundef nonnull %0, ptr noundef %3, ptr noundef nonnull %212, ptr noundef null, ptr noundef null)
  %215 = tail call ptr @Perl_PerlIO_stderr() #15
  %216 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 3
  %217 = load ptr, ptr %216, align 8, !tbaa !17
  %218 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %215, ptr noundef nonnull @.str.105, ptr noundef %217) #15
  br label %219

219:                                              ; preds = %214, %210
  %220 = load i32, ptr %183, align 4, !tbaa !125
  %221 = and i32 %220, 7168
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %252, label %223

223:                                              ; preds = %219
  %224 = tail call ptr @Perl_PerlIO_stderr() #15
  %225 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %224, ptr noundef nonnull @.str.106) #15
  %226 = load i32, ptr %183, align 4, !tbaa !125
  %227 = and i32 %226, 1024
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %233, label %229

229:                                              ; preds = %223
  %230 = tail call ptr @Perl_PerlIO_stderr() #15
  %231 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %230, ptr noundef nonnull @.str.107) #15
  %232 = load i32, ptr %183, align 4, !tbaa !125
  br label %233

233:                                              ; preds = %229, %223
  %234 = phi i32 [ %232, %229 ], [ %226, %223 ]
  %235 = and i32 %234, 2048
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %241, label %237

237:                                              ; preds = %233
  %238 = tail call ptr @Perl_PerlIO_stderr() #15
  %239 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %238, ptr noundef nonnull @.str.108) #15
  %240 = load i32, ptr %183, align 4, !tbaa !125
  br label %241

241:                                              ; preds = %237, %233
  %242 = phi i32 [ %240, %237 ], [ %234, %233 ]
  %243 = and i32 %242, 4096
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %248, label %245

245:                                              ; preds = %241
  %246 = tail call ptr @Perl_PerlIO_stderr() #15
  %247 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %246, ptr noundef nonnull @.str.109) #15
  br label %248

248:                                              ; preds = %245, %241
  %249 = tail call ptr @Perl_PerlIO_stderr() #15
  %250 = tail call i32 @PerlIO_putc(ptr noundef %249, i32 noundef 32) #15
  %251 = load i32, ptr %183, align 4, !tbaa !125
  br label %252

252:                                              ; preds = %248, %219
  %253 = phi i32 [ %251, %248 ], [ %220, %219 ]
  %254 = and i32 %253, 256
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %262, label %256

256:                                              ; preds = %252
  %257 = tail call ptr @Perl_PerlIO_stderr() #15
  %258 = getelementptr inbounds %struct.regexp, ptr %0, i64 0, i32 10
  %259 = load i64, ptr %258, align 8, !tbaa !289
  %260 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %257, ptr noundef nonnull @.str.110, i64 noundef %259) #15
  %261 = load i32, ptr %183, align 4, !tbaa !125
  br label %262

262:                                              ; preds = %256, %252
  %263 = phi i32 [ %261, %256 ], [ %253, %252 ]
  %264 = and i32 %263, 1
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %270, label %266

266:                                              ; preds = %262
  %267 = tail call ptr @Perl_PerlIO_stderr() #15
  %268 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %267, ptr noundef nonnull @.str.111) #15
  %269 = load i32, ptr %183, align 4, !tbaa !125
  br label %270

270:                                              ; preds = %266, %262
  %271 = phi i32 [ %269, %266 ], [ %263, %262 ]
  %272 = and i32 %271, 2
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %277, label %274

274:                                              ; preds = %270
  %275 = tail call ptr @Perl_PerlIO_stderr() #15
  %276 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %275, ptr noundef nonnull @.str.112) #15
  br label %277

277:                                              ; preds = %274, %270
  %278 = tail call ptr @Perl_PerlIO_stderr() #15
  %279 = getelementptr inbounds %struct.regexp, ptr %0, i64 0, i32 8
  %280 = load i64, ptr %279, align 8, !tbaa !136
  %281 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %278, ptr noundef nonnull @.str.113, i64 noundef %280) #15
  %282 = load i32, ptr %191, align 8, !tbaa !123
  %283 = and i32 %282, 131072
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %288, label %285

285:                                              ; preds = %277
  %286 = tail call ptr @Perl_PerlIO_stderr() #15
  %287 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %286, ptr noundef nonnull @.str.114) #15
  br label %288

288:                                              ; preds = %285, %277
  %289 = tail call ptr @Perl_PerlIO_stderr() #15
  %290 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %289, ptr noundef nonnull @.str.53) #15
  %291 = load volatile i64, ptr %2, align 8, !tbaa !9
  %292 = and i64 %291, 16
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %591, label %294

294:                                              ; preds = %288
  %295 = load i32, ptr %191, align 8, !tbaa !123
  br label %296

296:                                              ; preds = %317, %294
  %297 = phi i64 [ 0, %294 ], [ %319, %317 ]
  %298 = phi i32 [ 0, %294 ], [ %318, %317 ]
  %299 = trunc i64 %297 to i32
  %300 = shl nuw i32 1, %299
  %301 = and i32 %300, %295
  %302 = icmp ne i32 %301, 0
  %303 = and i32 %300, 896
  %304 = icmp eq i32 %303, 0
  %305 = and i1 %302, %304
  br i1 %305, label %306, label %317

306:                                              ; preds = %296
  %307 = add nsw i32 %298, 1
  %308 = icmp eq i32 %298, 0
  br i1 %308, label %309, label %312

309:                                              ; preds = %306
  %310 = tail call ptr @Perl_PerlIO_stderr() #15
  %311 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %310, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.115) #15
  br label %312

312:                                              ; preds = %309, %306
  %313 = tail call ptr @Perl_PerlIO_stderr() #15
  %314 = getelementptr inbounds [0 x ptr], ptr @PL_reg_extflags_name, i64 0, i64 %297
  %315 = load ptr, ptr %314, align 8, !tbaa !5
  %316 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %313, ptr noundef nonnull @.str.36, ptr noundef %315) #15
  br label %317

317:                                              ; preds = %312, %296
  %318 = phi i32 [ %307, %312 ], [ %298, %296 ]
  %319 = add nuw nsw i64 %297, 1
  %320 = icmp eq i64 %319, 32
  br i1 %320, label %321, label %296, !llvm.loop !294

321:                                              ; preds = %317
  %322 = lshr i32 %295, 7
  %323 = and i32 %322, 7
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %342, label %325

325:                                              ; preds = %321
  %326 = add nsw i32 %318, 1
  %327 = icmp eq i32 %318, 0
  br i1 %327, label %328, label %331

328:                                              ; preds = %325
  %329 = tail call ptr @Perl_PerlIO_stderr() #15
  %330 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %329, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.115) #15
  br label %331

331:                                              ; preds = %328, %325
  %332 = icmp ult i32 %323, 5
  br i1 %332, label %333, label %338

333:                                              ; preds = %331
  %334 = add nsw i32 %323, -1
  %335 = sext i32 %334 to i64
  %336 = shl i64 %335, 2
  %337 = call ptr @llvm.load.relative.i64(ptr @reltable.my_regdump, i64 %336)
  br label %338

338:                                              ; preds = %331, %333
  %339 = phi ptr [ %337, %333 ], [ @.str.656, %331 ]
  %340 = tail call ptr @Perl_PerlIO_stderr() #15
  %341 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %340, ptr noundef nonnull %339) #15
  br label %342

342:                                              ; preds = %338, %321
  %343 = phi i32 [ %318, %321 ], [ %326, %338 ]
  %344 = icmp eq i32 %343, 0
  %345 = tail call ptr @Perl_PerlIO_stderr() #15
  br i1 %344, label %348, label %346

346:                                              ; preds = %342
  %347 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %345, ptr noundef nonnull @.str.53) #15
  br label %350

348:                                              ; preds = %342
  %349 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %345, ptr noundef nonnull @.str.657, ptr noundef nonnull @.str.115) #15
  br label %350

350:                                              ; preds = %346, %348
  %351 = load i32, ptr %183, align 4, !tbaa !125
  %352 = and i32 %351, 1
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %357

354:                                              ; preds = %350
  %355 = and i32 %351, 2
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %375, label %365

357:                                              ; preds = %350
  %358 = tail call ptr @Perl_PerlIO_stderr() #15
  %359 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %358, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.116) #15
  %360 = tail call ptr @Perl_PerlIO_stderr() #15
  %361 = load ptr, ptr @PL_reg_intflags_name, align 8, !tbaa !5
  %362 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %360, ptr noundef nonnull @.str.36, ptr noundef %361) #15
  %363 = and i32 %351, 2
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %378, label %368

365:                                              ; preds = %354
  %366 = tail call ptr @Perl_PerlIO_stderr() #15
  %367 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %366, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.116) #15
  br label %368

368:                                              ; preds = %357, %365
  %369 = phi i32 [ 1, %365 ], [ 2, %357 ]
  %370 = tail call ptr @Perl_PerlIO_stderr() #15
  %371 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_reg_intflags_name, i64 0, i64 1), align 8, !tbaa !5
  %372 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %370, ptr noundef nonnull @.str.36, ptr noundef %371) #15
  %373 = and i32 %351, 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %391, label %381

375:                                              ; preds = %354
  %376 = and i32 %351, 4
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %395, label %383

378:                                              ; preds = %357
  %379 = and i32 %351, 4
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %398, label %386

381:                                              ; preds = %368
  %382 = add nuw nsw i32 %369, 1
  br label %386

383:                                              ; preds = %375
  %384 = tail call ptr @Perl_PerlIO_stderr() #15
  %385 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %384, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.116) #15
  br label %386

386:                                              ; preds = %381, %383, %378
  %387 = phi i32 [ 1, %383 ], [ %382, %381 ], [ 2, %378 ]
  %388 = tail call ptr @Perl_PerlIO_stderr() #15
  %389 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_reg_intflags_name, i64 0, i64 2), align 8, !tbaa !5
  %390 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %388, ptr noundef nonnull @.str.36, ptr noundef %389) #15
  br label %391

391:                                              ; preds = %386, %368
  %392 = phi i32 [ %387, %386 ], [ %369, %368 ]
  %393 = and i32 %351, 8
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %411, label %401

395:                                              ; preds = %375
  %396 = and i32 %351, 8
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %415, label %403

398:                                              ; preds = %378
  %399 = and i32 %351, 8
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %418, label %406

401:                                              ; preds = %391
  %402 = add nuw nsw i32 %392, 1
  br label %406

403:                                              ; preds = %395
  %404 = tail call ptr @Perl_PerlIO_stderr() #15
  %405 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %404, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.116) #15
  br label %406

406:                                              ; preds = %401, %403, %398
  %407 = phi i32 [ 1, %403 ], [ %402, %401 ], [ 2, %398 ]
  %408 = tail call ptr @Perl_PerlIO_stderr() #15
  %409 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_reg_intflags_name, i64 0, i64 3), align 8, !tbaa !5
  %410 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %408, ptr noundef nonnull @.str.36, ptr noundef %409) #15
  br label %411

411:                                              ; preds = %406, %391
  %412 = phi i32 [ %407, %406 ], [ %392, %391 ]
  %413 = and i32 %351, 16
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %431, label %421

415:                                              ; preds = %395
  %416 = and i32 %351, 16
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %435, label %423

418:                                              ; preds = %398
  %419 = and i32 %351, 16
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %438, label %426

421:                                              ; preds = %411
  %422 = add nuw nsw i32 %412, 1
  br label %426

423:                                              ; preds = %415
  %424 = tail call ptr @Perl_PerlIO_stderr() #15
  %425 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %424, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.116) #15
  br label %426

426:                                              ; preds = %421, %423, %418
  %427 = phi i32 [ 1, %423 ], [ %422, %421 ], [ 2, %418 ]
  %428 = tail call ptr @Perl_PerlIO_stderr() #15
  %429 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_reg_intflags_name, i64 0, i64 4), align 8, !tbaa !5
  %430 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %428, ptr noundef nonnull @.str.36, ptr noundef %429) #15
  br label %431

431:                                              ; preds = %426, %411
  %432 = phi i32 [ %427, %426 ], [ %412, %411 ]
  %433 = and i32 %351, 32
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %451, label %441

435:                                              ; preds = %415
  %436 = and i32 %351, 32
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %455, label %443

438:                                              ; preds = %418
  %439 = and i32 %351, 32
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %458, label %446

441:                                              ; preds = %431
  %442 = add nuw nsw i32 %432, 1
  br label %446

443:                                              ; preds = %435
  %444 = tail call ptr @Perl_PerlIO_stderr() #15
  %445 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %444, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.116) #15
  br label %446

446:                                              ; preds = %441, %443, %438
  %447 = phi i32 [ 1, %443 ], [ %442, %441 ], [ 2, %438 ]
  %448 = tail call ptr @Perl_PerlIO_stderr() #15
  %449 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_reg_intflags_name, i64 0, i64 5), align 8, !tbaa !5
  %450 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %448, ptr noundef nonnull @.str.36, ptr noundef %449) #15
  br label %451

451:                                              ; preds = %446, %431
  %452 = phi i32 [ %447, %446 ], [ %432, %431 ]
  %453 = and i32 %351, 64
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %471, label %461

455:                                              ; preds = %435
  %456 = and i32 %351, 64
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %475, label %463

458:                                              ; preds = %438
  %459 = and i32 %351, 64
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %478, label %466

461:                                              ; preds = %451
  %462 = add nuw nsw i32 %452, 1
  br label %466

463:                                              ; preds = %455
  %464 = tail call ptr @Perl_PerlIO_stderr() #15
  %465 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %464, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.116) #15
  br label %466

466:                                              ; preds = %461, %463, %458
  %467 = phi i32 [ 1, %463 ], [ %462, %461 ], [ 2, %458 ]
  %468 = tail call ptr @Perl_PerlIO_stderr() #15
  %469 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_reg_intflags_name, i64 0, i64 6), align 8, !tbaa !5
  %470 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %468, ptr noundef nonnull @.str.36, ptr noundef %469) #15
  br label %471

471:                                              ; preds = %466, %451
  %472 = phi i32 [ %467, %466 ], [ %452, %451 ]
  %473 = and i32 %351, 128
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %491, label %481

475:                                              ; preds = %455
  %476 = and i32 %351, 128
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %495, label %483

478:                                              ; preds = %458
  %479 = and i32 %351, 128
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %498, label %486

481:                                              ; preds = %471
  %482 = add nuw nsw i32 %472, 1
  br label %486

483:                                              ; preds = %475
  %484 = tail call ptr @Perl_PerlIO_stderr() #15
  %485 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %484, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.116) #15
  br label %486

486:                                              ; preds = %481, %483, %478
  %487 = phi i32 [ 1, %483 ], [ %482, %481 ], [ 2, %478 ]
  %488 = tail call ptr @Perl_PerlIO_stderr() #15
  %489 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_reg_intflags_name, i64 0, i64 7), align 8, !tbaa !5
  %490 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %488, ptr noundef nonnull @.str.36, ptr noundef %489) #15
  br label %491

491:                                              ; preds = %486, %471
  %492 = phi i32 [ %487, %486 ], [ %472, %471 ]
  %493 = and i32 %351, 256
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %511, label %501

495:                                              ; preds = %475
  %496 = and i32 %351, 256
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %515, label %503

498:                                              ; preds = %478
  %499 = and i32 %351, 256
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %518, label %506

501:                                              ; preds = %491
  %502 = add nuw nsw i32 %492, 1
  br label %506

503:                                              ; preds = %495
  %504 = tail call ptr @Perl_PerlIO_stderr() #15
  %505 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %504, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.116) #15
  br label %506

506:                                              ; preds = %501, %503, %498
  %507 = phi i32 [ 1, %503 ], [ %502, %501 ], [ 2, %498 ]
  %508 = tail call ptr @Perl_PerlIO_stderr() #15
  %509 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_reg_intflags_name, i64 0, i64 8), align 8, !tbaa !5
  %510 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %508, ptr noundef nonnull @.str.36, ptr noundef %509) #15
  br label %511

511:                                              ; preds = %506, %491
  %512 = phi i32 [ %507, %506 ], [ %492, %491 ]
  %513 = and i32 %351, 512
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %531, label %521

515:                                              ; preds = %495
  %516 = and i32 %351, 512
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %535, label %523

518:                                              ; preds = %498
  %519 = and i32 %351, 512
  %520 = icmp eq i32 %519, 0
  br i1 %520, label %538, label %526

521:                                              ; preds = %511
  %522 = add nuw nsw i32 %512, 1
  br label %526

523:                                              ; preds = %515
  %524 = tail call ptr @Perl_PerlIO_stderr() #15
  %525 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %524, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.116) #15
  br label %526

526:                                              ; preds = %521, %523, %518
  %527 = phi i32 [ 1, %523 ], [ %522, %521 ], [ 2, %518 ]
  %528 = tail call ptr @Perl_PerlIO_stderr() #15
  %529 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_reg_intflags_name, i64 0, i64 9), align 8, !tbaa !5
  %530 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %528, ptr noundef nonnull @.str.36, ptr noundef %529) #15
  br label %531

531:                                              ; preds = %526, %511
  %532 = phi i32 [ %527, %526 ], [ %512, %511 ]
  %533 = and i32 %351, 1024
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %551, label %541

535:                                              ; preds = %515
  %536 = and i32 %351, 1024
  %537 = icmp eq i32 %536, 0
  br i1 %537, label %555, label %543

538:                                              ; preds = %518
  %539 = and i32 %351, 1024
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %558, label %546

541:                                              ; preds = %531
  %542 = add nuw nsw i32 %532, 1
  br label %546

543:                                              ; preds = %535
  %544 = tail call ptr @Perl_PerlIO_stderr() #15
  %545 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %544, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.116) #15
  br label %546

546:                                              ; preds = %541, %543, %538
  %547 = phi i32 [ 1, %543 ], [ %542, %541 ], [ 2, %538 ]
  %548 = tail call ptr @Perl_PerlIO_stderr() #15
  %549 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_reg_intflags_name, i64 0, i64 10), align 8, !tbaa !5
  %550 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %548, ptr noundef nonnull @.str.36, ptr noundef %549) #15
  br label %551

551:                                              ; preds = %546, %531
  %552 = phi i32 [ %547, %546 ], [ %532, %531 ]
  %553 = and i32 %351, 2048
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %568, label %564

555:                                              ; preds = %535
  %556 = and i32 %351, 2048
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %568, label %561

558:                                              ; preds = %538
  %559 = and i32 %351, 2048
  %560 = icmp eq i32 %559, 0
  br i1 %560, label %573, label %564

561:                                              ; preds = %555
  %562 = tail call ptr @Perl_PerlIO_stderr() #15
  %563 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %562, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.116) #15
  br label %564

564:                                              ; preds = %551, %561, %558
  %565 = tail call ptr @Perl_PerlIO_stderr() #15
  %566 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_reg_intflags_name, i64 0, i64 11), align 8, !tbaa !5
  %567 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %565, ptr noundef nonnull @.str.36, ptr noundef %566) #15
  br label %568

568:                                              ; preds = %555, %564, %551
  %569 = phi i32 [ 1, %564 ], [ %552, %551 ], [ 0, %555 ]
  %570 = and i32 %351, 4096
  %571 = icmp eq i32 %570, 0
  %572 = icmp eq i32 %569, 0
  br i1 %571, label %584, label %576

573:                                              ; preds = %558
  %574 = and i32 %351, 4096
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %585, label %580

576:                                              ; preds = %568
  br i1 %572, label %577, label %580

577:                                              ; preds = %576
  %578 = tail call ptr @Perl_PerlIO_stderr() #15
  %579 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %578, ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.116) #15
  br label %580

580:                                              ; preds = %577, %576, %573
  %581 = tail call ptr @Perl_PerlIO_stderr() #15
  %582 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_reg_intflags_name, i64 0, i64 12), align 8, !tbaa !5
  %583 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %581, ptr noundef nonnull @.str.36, ptr noundef %582) #15
  br label %585

584:                                              ; preds = %568
  br i1 %572, label %588, label %585

585:                                              ; preds = %584, %580, %573
  %586 = tail call ptr @Perl_PerlIO_stderr() #15
  %587 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %586, ptr noundef nonnull @.str.53) #15
  br label %591

588:                                              ; preds = %584
  %589 = tail call ptr @Perl_PerlIO_stderr() #15
  %590 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %589, ptr noundef nonnull @.str.657, ptr noundef nonnull @.str.116) #15
  br label %591

591:                                              ; preds = %588, %585, %288
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @my_reg_named_buff(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readnone %2, i32 noundef %3) local_unnamed_addr #0 {
  %5 = icmp eq ptr %0, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.83, i32 noundef 7413) #15
  br label %7

7:                                                ; preds = %4, %6
  %8 = and i32 %3, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  %11 = tail call ptr @my_reg_named_buff_fetch(ptr noundef %0, ptr noundef %1, i32 noundef %3)
  br label %33

12:                                               ; preds = %7
  %13 = and i32 %3, 14
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %12
  tail call void @Perl_croak_no_modify() #15
  br label %33

16:                                               ; preds = %12
  %17 = and i32 %3, 16
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = tail call zeroext i1 @my_reg_named_buff_exists(ptr noundef %0, ptr noundef %1, i32 noundef %3)
  %21 = select i1 %20, ptr @PL_sv_yes, ptr @PL_sv_no
  br label %33

22:                                               ; preds = %16
  %23 = and i32 %3, 2048
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %22
  %26 = tail call ptr @my_reg_named_buff_all(ptr noundef %0, i32 noundef %3)
  br label %33

27:                                               ; preds = %22
  %28 = and i32 %3, 4128
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %27
  %31 = tail call ptr @my_reg_named_buff_scalar(ptr noundef %0, i32 noundef %3)
  br label %33

32:                                               ; preds = %27
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.84, i32 noundef %3) #15
  br label %33

33:                                               ; preds = %32, %30, %25, %19, %15, %10
  %34 = phi ptr [ %11, %10 ], [ null, %15 ], [ %21, %19 ], [ %26, %25 ], [ %31, %30 ], [ null, %32 ]
  ret ptr %34
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @my_reg_named_buff_fetch(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !62
  %6 = and i32 %5, 255
  %7 = icmp eq i32 %6, 8
  %8 = and i32 %5, 16826623
  %9 = icmp eq i32 %8, 16777226
  %10 = or i1 %7, %9
  br i1 %10, label %12, label %11

11:                                               ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %12

12:                                               ; preds = %3, %11
  %13 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.83, i32 noundef 7462) #15
  br label %17

17:                                               ; preds = %12, %16
  %18 = icmp eq ptr %1, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %17
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.86, i32 noundef 7462) #15
  br label %20

20:                                               ; preds = %17, %19
  %21 = and i32 %2, 512
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = tail call ptr @Perl_newSV_type(i32 noundef 11) #15
  %25 = freeze ptr %24
  br label %26

26:                                               ; preds = %23, %20
  %27 = phi ptr [ %25, %23 ], [ null, %20 ]
  br i1 %15, label %130, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 6
  %30 = load ptr, ptr %29, align 8, !tbaa !234
  %31 = icmp eq ptr %30, null
  br i1 %31, label %130, label %32

32:                                               ; preds = %28
  %33 = tail call ptr @Perl_hv_common(ptr noundef nonnull %30, ptr noundef %1, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 0, ptr noundef null, i32 noundef 0) #15
  %34 = icmp eq ptr %33, null
  br i1 %34, label %130, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %struct.he, ptr %33, i64 0, i32 2
  %37 = load ptr, ptr %36, align 8, !tbaa !17
  %38 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 3
  %39 = load ptr, ptr %38, align 8, !tbaa !17
  %40 = load ptr, ptr %37, align 8, !tbaa !16
  %41 = getelementptr inbounds %struct.xpviv, ptr %40, i64 0, i32 4
  %42 = load i64, ptr %41, align 8, !tbaa !17
  %43 = icmp sgt i64 %42, 0
  br i1 %43, label %44, label %126

44:                                               ; preds = %35
  %45 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 12
  %46 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 17
  %47 = icmp eq ptr %27, null
  br i1 %47, label %48, label %85

48:                                               ; preds = %44
  %49 = load i32, ptr %45, align 8, !tbaa !126
  br label %50

50:                                               ; preds = %82, %48
  %51 = phi i64 [ 0, %48 ], [ %83, %82 ]
  %52 = getelementptr inbounds i32, ptr %39, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !73
  %54 = icmp slt i32 %49, %53
  br i1 %54, label %82, label %55

55:                                               ; preds = %50
  %56 = load ptr, ptr %46, align 8, !tbaa !211
  %57 = sext i32 %53 to i64
  %58 = getelementptr inbounds %struct.regexp_paren_pair, ptr %56, i64 %57
  %59 = load i64, ptr %58, align 8, !tbaa !237
  %60 = icmp eq i64 %59, -1
  br i1 %60, label %82, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %struct.regexp_paren_pair, ptr %56, i64 %57, i32 1
  %63 = load i64, ptr %62, align 8, !tbaa !240
  %64 = icmp eq i64 %63, -1
  br i1 %64, label %82, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds i32, ptr %39, i64 %51
  %67 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.8, i64 noundef 0) #15
  %68 = load i32, ptr %4, align 4, !tbaa !62
  %69 = and i32 %68, 255
  %70 = icmp eq i32 %69, 8
  %71 = and i32 %68, 16826623
  %72 = icmp eq i32 %71, 16777226
  %73 = or i1 %70, %72
  br i1 %73, label %75, label %74

74:                                               ; preds = %65
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %75

75:                                               ; preds = %74, %65
  %76 = load ptr, ptr %13, align 8, !tbaa !17
  %77 = getelementptr inbounds %struct.regexp, ptr %76, i64 0, i32 4
  %78 = load ptr, ptr %77, align 8, !tbaa !87
  %79 = getelementptr inbounds %struct.regexp_engine, ptr %78, i64 0, i32 5
  %80 = load ptr, ptr %79, align 8, !tbaa !295
  %81 = load i32, ptr %66, align 4, !tbaa !73
  tail call void %80(ptr noundef nonnull %0, i32 noundef %81, ptr noundef %67) #15
  br label %130

82:                                               ; preds = %61, %55, %50
  %83 = add nuw nsw i64 %51, 1
  %84 = icmp slt i64 %83, %42
  br i1 %84, label %50, label %126, !llvm.loop !296

85:                                               ; preds = %44, %119
  %86 = phi i64 [ %121, %119 ], [ 0, %44 ]
  %87 = load i32, ptr %45, align 8, !tbaa !126
  %88 = getelementptr inbounds i32, ptr %39, i64 %86
  %89 = load i32, ptr %88, align 4, !tbaa !73
  %90 = icmp slt i32 %87, %89
  br i1 %90, label %117, label %91

91:                                               ; preds = %85
  %92 = load ptr, ptr %46, align 8, !tbaa !211
  %93 = sext i32 %89 to i64
  %94 = getelementptr inbounds %struct.regexp_paren_pair, ptr %92, i64 %93
  %95 = load i64, ptr %94, align 8, !tbaa !237
  %96 = icmp eq i64 %95, -1
  br i1 %96, label %117, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %struct.regexp_paren_pair, ptr %92, i64 %93, i32 1
  %99 = load i64, ptr %98, align 8, !tbaa !240
  %100 = icmp eq i64 %99, -1
  br i1 %100, label %117, label %101

101:                                              ; preds = %97
  %102 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.8, i64 noundef 0) #15
  %103 = load i32, ptr %4, align 4, !tbaa !62
  %104 = and i32 %103, 255
  %105 = icmp eq i32 %104, 8
  %106 = and i32 %103, 16826623
  %107 = icmp eq i32 %106, 16777226
  %108 = or i1 %105, %107
  br i1 %108, label %110, label %109

109:                                              ; preds = %101
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %110

110:                                              ; preds = %101, %109
  %111 = load ptr, ptr %13, align 8, !tbaa !17
  %112 = getelementptr inbounds %struct.regexp, ptr %111, i64 0, i32 4
  %113 = load ptr, ptr %112, align 8, !tbaa !87
  %114 = getelementptr inbounds %struct.regexp_engine, ptr %113, i64 0, i32 5
  %115 = load ptr, ptr %114, align 8, !tbaa !295
  %116 = load i32, ptr %88, align 4, !tbaa !73
  tail call void %115(ptr noundef nonnull %0, i32 noundef %116, ptr noundef %102) #15
  br label %119

117:                                              ; preds = %97, %91, %85
  %118 = tail call ptr @Perl_newSVsv(ptr noundef nonnull @PL_sv_undef) #15
  br label %119

119:                                              ; preds = %110, %117
  %120 = phi ptr [ %118, %117 ], [ %102, %110 ]
  tail call void @Perl_av_push(ptr noundef nonnull %27, ptr noundef %120) #15
  %121 = add nuw nsw i64 %86, 1
  %122 = load ptr, ptr %37, align 8, !tbaa !16
  %123 = getelementptr inbounds %struct.xpviv, ptr %122, i64 0, i32 4
  %124 = load i64, ptr %123, align 8, !tbaa !17
  %125 = icmp slt i64 %121, %124
  br i1 %125, label %85, label %126, !llvm.loop !296

126:                                              ; preds = %119, %82, %35
  %127 = icmp eq ptr %27, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = tail call ptr @Perl_newRV_noinc(ptr noundef nonnull %27) #15
  br label %130

130:                                              ; preds = %75, %32, %126, %26, %28, %128
  %131 = phi ptr [ %129, %128 ], [ null, %28 ], [ null, %26 ], [ null, %126 ], [ null, %32 ], [ %67, %75 ]
  ret ptr %131
}

declare void @Perl_croak_no_modify() local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i1 @my_reg_named_buff_exists(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !62
  %6 = and i32 %5, 255
  %7 = icmp eq i32 %6, 8
  %8 = and i32 %5, 16826623
  %9 = icmp eq i32 %8, 16777226
  %10 = or i1 %7, %9
  br i1 %10, label %12, label %11

11:                                               ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %12

12:                                               ; preds = %3, %11
  %13 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.83, i32 noundef 7502) #15
  br label %17

17:                                               ; preds = %12, %16
  %18 = icmp eq ptr %1, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %17
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.87, i32 noundef 7502) #15
  br label %20

20:                                               ; preds = %17, %19
  br i1 %15, label %55, label %21

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 6
  %23 = load ptr, ptr %22, align 8, !tbaa !234
  %24 = icmp eq ptr %23, null
  br i1 %24, label %55, label %25

25:                                               ; preds = %21
  %26 = and i32 %2, 512
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = tail call ptr @Perl_hv_common(ptr noundef nonnull %23, ptr noundef %1, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 8, ptr noundef null, i32 noundef 0) #15
  %30 = icmp ne ptr %29, null
  br label %55

31:                                               ; preds = %25
  %32 = load i32, ptr %4, align 4, !tbaa !62
  %33 = and i32 %32, 255
  %34 = icmp eq i32 %33, 8
  %35 = and i32 %32, 16826623
  %36 = icmp eq i32 %35, 16777226
  %37 = or i1 %34, %36
  br i1 %37, label %39, label %38

38:                                               ; preds = %31
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %39

39:                                               ; preds = %31, %38
  %40 = load ptr, ptr %13, align 8, !tbaa !17
  %41 = getelementptr inbounds %struct.regexp, ptr %40, i64 0, i32 4
  %42 = load ptr, ptr %41, align 8, !tbaa !87
  %43 = getelementptr inbounds %struct.regexp_engine, ptr %42, i64 0, i32 8
  %44 = load ptr, ptr %43, align 8, !tbaa !297
  %45 = or i32 %2, 1
  %46 = tail call ptr %44(ptr noundef nonnull %0, ptr noundef %1, ptr noundef null, i32 noundef %45) #15
  %47 = icmp eq ptr %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds %struct.sv, ptr %46, i64 0, i32 1
  %50 = load i32, ptr %49, align 8, !tbaa !37
  %51 = icmp ugt i32 %50, 1
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = add i32 %50, -1
  store i32 %53, ptr %49, align 8, !tbaa !37
  br label %55

54:                                               ; preds = %48
  tail call void @Perl_sv_free2(ptr noundef nonnull %46, i32 noundef %50) #15
  br label %55

55:                                               ; preds = %54, %52, %20, %21, %39, %28
  %56 = phi i1 [ %30, %28 ], [ false, %39 ], [ false, %21 ], [ false, %20 ], [ true, %52 ], [ true, %54 ]
  ret i1 %56
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @my_reg_named_buff_all(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !62
  %5 = and i32 %4, 255
  %6 = icmp eq i32 %5, 8
  %7 = and i32 %4, 16826623
  %8 = icmp eq i32 %7, 16777226
  %9 = or i1 %6, %8
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %11

11:                                               ; preds = %2, %10
  %12 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = tail call ptr @Perl_newSV_type(i32 noundef 11) #15
  %15 = icmp eq ptr %13, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %11
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.83, i32 noundef 7604) #15
  br label %76

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.regexp, ptr %13, i64 0, i32 6
  %19 = load ptr, ptr %18, align 8, !tbaa !234
  %20 = icmp eq ptr %19, null
  br i1 %20, label %76, label %21

21:                                               ; preds = %17
  %22 = tail call i32 @Perl_hv_iterinit(ptr noundef nonnull %19) #15
  %23 = tail call ptr @Perl_hv_iternext_flags(ptr noundef nonnull %19, i32 noundef 0) #15
  %24 = icmp eq ptr %23, null
  br i1 %24, label %76, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.regexp, ptr %13, i64 0, i32 15
  %27 = getelementptr inbounds %struct.regexp, ptr %13, i64 0, i32 17
  %28 = and i32 %1, 512
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %25, %30
  %31 = phi ptr [ %35, %30 ], [ %23, %25 ]
  %32 = getelementptr inbounds %struct.he, ptr %31, i64 0, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !298
  %34 = tail call ptr @Perl_newSVhek(ptr noundef %33) #15
  tail call void @Perl_av_push(ptr noundef %14, ptr noundef %34) #15
  %35 = tail call ptr @Perl_hv_iternext_flags(ptr noundef nonnull %19, i32 noundef 0) #15
  %36 = icmp eq ptr %35, null
  br i1 %36, label %76, label %30, !llvm.loop !300

37:                                               ; preds = %25, %73
  %38 = phi ptr [ %74, %73 ], [ %23, %25 ]
  %39 = getelementptr inbounds %struct.he, ptr %38, i64 0, i32 2
  %40 = load ptr, ptr %39, align 8, !tbaa !17
  %41 = getelementptr inbounds %struct.sv, ptr %40, i64 0, i32 3
  %42 = load ptr, ptr %41, align 8, !tbaa !17
  %43 = load ptr, ptr %40, align 8, !tbaa !16
  %44 = getelementptr inbounds %struct.xpviv, ptr %43, i64 0, i32 4
  %45 = load i64, ptr %44, align 8, !tbaa !17
  %46 = icmp sgt i64 %45, 0
  br i1 %46, label %47, label %73

47:                                               ; preds = %37
  %48 = load i32, ptr %26, align 8, !tbaa !239
  br label %49

49:                                               ; preds = %47, %64
  %50 = phi i64 [ 0, %47 ], [ %65, %64 ]
  %51 = getelementptr inbounds i32, ptr %42, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !73
  %53 = icmp slt i32 %48, %52
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  %55 = load ptr, ptr %27, align 8, !tbaa !211
  %56 = sext i32 %52 to i64
  %57 = getelementptr inbounds %struct.regexp_paren_pair, ptr %55, i64 %56
  %58 = load i64, ptr %57, align 8, !tbaa !237
  %59 = icmp eq i64 %58, -1
  br i1 %59, label %64, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %struct.regexp_paren_pair, ptr %55, i64 %56, i32 1
  %62 = load i64, ptr %61, align 8, !tbaa !240
  %63 = icmp eq i64 %62, -1
  br i1 %63, label %64, label %67

64:                                               ; preds = %49, %54, %60
  %65 = add nuw nsw i64 %50, 1
  %66 = icmp eq i64 %65, %45
  br i1 %66, label %73, label %49, !llvm.loop !301

67:                                               ; preds = %60
  %68 = icmp eq i32 %52, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %struct.he, ptr %38, i64 0, i32 1
  %71 = load ptr, ptr %70, align 8, !tbaa !298
  %72 = tail call ptr @Perl_newSVhek(ptr noundef %71) #15
  tail call void @Perl_av_push(ptr noundef %14, ptr noundef %72) #15
  br label %73

73:                                               ; preds = %64, %37, %67, %69
  %74 = tail call ptr @Perl_hv_iternext_flags(ptr noundef nonnull %19, i32 noundef 0) #15
  %75 = icmp eq ptr %74, null
  br i1 %75, label %76, label %37, !llvm.loop !300

76:                                               ; preds = %30, %73, %21, %16, %17
  %77 = tail call ptr @Perl_newRV_noinc(ptr noundef %14) #15
  ret ptr %77
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @my_reg_named_buff_scalar(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !62
  %5 = and i32 %4, 255
  %6 = icmp eq i32 %5, 8
  %7 = and i32 %4, 16826623
  %8 = icmp eq i32 %7, 16777226
  %9 = or i1 %6, %8
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %11

11:                                               ; preds = %2, %10
  %12 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.83, i32 noundef 7578) #15
  br label %82

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.regexp, ptr %13, i64 0, i32 6
  %18 = load ptr, ptr %17, align 8, !tbaa !234
  %19 = icmp eq ptr %18, null
  br i1 %19, label %82, label %20

20:                                               ; preds = %16
  %21 = and i32 %1, 4608
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %18, align 8, !tbaa !302
  %25 = getelementptr inbounds %struct.xpvhv, ptr %24, i64 0, i32 2
  %26 = load i64, ptr %25, align 8, !tbaa !303
  %27 = tail call ptr @Perl_newSViv(i64 noundef %26) #15
  br label %82

28:                                               ; preds = %20
  %29 = and i32 %1, 256
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %81, label %31

31:                                               ; preds = %28
  %32 = load i32, ptr %3, align 4, !tbaa !62
  %33 = and i32 %32, 255
  %34 = icmp eq i32 %33, 8
  %35 = and i32 %32, 16826623
  %36 = icmp eq i32 %35, 16777226
  %37 = or i1 %34, %36
  br i1 %37, label %40, label %38

38:                                               ; preds = %31
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  %39 = load ptr, ptr %12, align 8, !tbaa !17
  br label %40

40:                                               ; preds = %31, %38
  %41 = phi ptr [ %13, %31 ], [ %39, %38 ]
  %42 = getelementptr inbounds %struct.regexp, ptr %41, i64 0, i32 4
  %43 = load ptr, ptr %42, align 8, !tbaa !87
  %44 = getelementptr inbounds %struct.regexp_engine, ptr %43, i64 0, i32 8
  %45 = load ptr, ptr %44, align 8, !tbaa !297
  %46 = or i32 %1, 2048
  %47 = tail call ptr %45(ptr noundef nonnull %0, ptr noundef null, ptr noundef null, i32 noundef %46) #15
  %48 = getelementptr inbounds %struct.sv, ptr %47, i64 0, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  %50 = icmp eq ptr %49, null
  br i1 %50, label %51, label %52

51:                                               ; preds = %40
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.382, i32 noundef 20) #15
  br label %52

52:                                               ; preds = %51, %40
  %53 = getelementptr inbounds %struct.av, ptr %49, i64 0, i32 2
  %54 = load i32, ptr %53, align 4, !tbaa !73
  %55 = and i32 %54, 255
  %56 = icmp eq i32 %55, 11
  br i1 %56, label %59, label %57

57:                                               ; preds = %52
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.383, i32 noundef 21) #15
  %58 = load i32, ptr %53, align 4, !tbaa !13
  br label %59

59:                                               ; preds = %57, %52
  %60 = phi i32 [ %54, %52 ], [ %58, %57 ]
  %61 = and i32 %60, 8388608
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %59
  %64 = tail call i32 @Perl_mg_size(ptr noundef nonnull %49) #15
  %65 = sext i32 %64 to i64
  br label %70

66:                                               ; preds = %59
  %67 = load ptr, ptr %49, align 8, !tbaa !81
  %68 = getelementptr inbounds %struct.xpvav, ptr %67, i64 0, i32 2
  %69 = load i64, ptr %68, align 8, !tbaa !83
  br label %70

70:                                               ; preds = %63, %66
  %71 = phi i64 [ %65, %63 ], [ %69, %66 ]
  %72 = getelementptr inbounds %struct.sv, ptr %47, i64 0, i32 1
  %73 = load i32, ptr %72, align 8, !tbaa !37
  %74 = icmp ugt i32 %73, 1
  br i1 %74, label %75, label %77

75:                                               ; preds = %70
  %76 = add i32 %73, -1
  store i32 %76, ptr %72, align 8, !tbaa !37
  br label %78

77:                                               ; preds = %70
  tail call void @Perl_sv_free2(ptr noundef nonnull %47, i32 noundef %73) #15
  br label %78

78:                                               ; preds = %75, %77
  %79 = add nsw i64 %71, 1
  %80 = tail call ptr @Perl_newSViv(i64 noundef %79) #15
  br label %82

81:                                               ; preds = %28
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.88, i32 noundef %1) #15
  br label %82

82:                                               ; preds = %15, %16, %81, %78, %23
  %83 = phi ptr [ %27, %23 ], [ %80, %78 ], [ null, %81 ], [ @PL_sv_undef, %16 ], [ @PL_sv_undef, %15 ]
  ret ptr %83
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @my_reg_named_buff_iter(ptr noundef %0, ptr nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #0 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.83, i32 noundef 7440) #15
  br label %6

6:                                                ; preds = %3, %5
  %7 = and i32 %2, 64
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  %10 = tail call ptr @my_reg_named_buff_firstkey(ptr noundef %0, i32 noundef %2)
  br label %17

11:                                               ; preds = %6
  %12 = and i32 %2, 128
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %11
  %15 = tail call ptr @my_reg_named_buff_nextkey(ptr noundef %0, i32 noundef %2)
  br label %17

16:                                               ; preds = %11
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.85, i32 noundef %2) #15
  br label %17

17:                                               ; preds = %16, %14, %9
  %18 = phi ptr [ %10, %9 ], [ %15, %14 ], [ null, %16 ]
  ret ptr %18
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @my_reg_named_buff_firstkey(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !62
  %5 = and i32 %4, 255
  %6 = icmp eq i32 %5, 8
  %7 = and i32 %4, 16826623
  %8 = icmp eq i32 %7, 16777226
  %9 = or i1 %6, %8
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %11

11:                                               ; preds = %2, %10
  %12 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.83, i32 noundef 7526) #15
  br label %38

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.regexp, ptr %13, i64 0, i32 6
  %18 = load ptr, ptr %17, align 8, !tbaa !234
  %19 = icmp eq ptr %18, null
  br i1 %19, label %38, label %20

20:                                               ; preds = %16
  %21 = tail call i32 @Perl_hv_iterinit(ptr noundef nonnull %18) #15
  %22 = load i32, ptr %3, align 4, !tbaa !62
  %23 = and i32 %22, 255
  %24 = icmp eq i32 %23, 8
  %25 = and i32 %22, 16826623
  %26 = icmp eq i32 %25, 16777226
  %27 = or i1 %24, %26
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %29

29:                                               ; preds = %20, %28
  %30 = load ptr, ptr %12, align 8, !tbaa !17
  %31 = getelementptr inbounds %struct.regexp, ptr %30, i64 0, i32 4
  %32 = load ptr, ptr %31, align 8, !tbaa !87
  %33 = getelementptr inbounds %struct.regexp_engine, ptr %32, i64 0, i32 9
  %34 = load ptr, ptr %33, align 8, !tbaa !305
  %35 = and i32 %1, -193
  %36 = or i32 %35, 128
  %37 = tail call ptr %34(ptr noundef nonnull %0, ptr noundef null, i32 noundef %36) #15
  br label %38

38:                                               ; preds = %15, %16, %29
  %39 = phi ptr [ %37, %29 ], [ null, %16 ], [ null, %15 ]
  ret ptr %39
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @my_reg_named_buff_nextkey(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !62
  %6 = and i32 %5, 255
  %7 = icmp eq i32 %6, 8
  %8 = and i32 %5, 16826623
  %9 = icmp eq i32 %8, 16777226
  %10 = or i1 %7, %9
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %12

12:                                               ; preds = %2, %11
  %13 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  store volatile i64 0, ptr %3, align 8, !tbaa !9
  %15 = load volatile i64, ptr %3, align 8, !tbaa !9
  %16 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %17 = icmp eq ptr %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !13
  %21 = and i32 %20, 256
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  tail call void @Perl_sv_setuv(ptr noundef nonnull %16, i64 noundef 65288) #15
  %24 = load i32, ptr %19, align 4, !tbaa !13
  br label %25

25:                                               ; preds = %23, %18
  %26 = phi i32 [ %24, %23 ], [ %20, %18 ]
  %27 = and i32 %26, 2097408
  %28 = icmp eq i32 %27, 256
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = load ptr, ptr %16, align 8, !tbaa !16
  %31 = getelementptr inbounds %struct.xpviv, ptr %30, i64 0, i32 4
  %32 = load i64, ptr %31, align 8, !tbaa !17
  br label %35

33:                                               ; preds = %25
  %34 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %16, i32 noundef 2) #15
  br label %35

35:                                               ; preds = %33, %29
  %36 = phi i64 [ %32, %29 ], [ %34, %33 ]
  store volatile i64 %36, ptr %3, align 8, !tbaa !9
  br label %37

37:                                               ; preds = %35, %12
  %38 = icmp eq ptr %14, null
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.83, i32 noundef 7543) #15
  br label %92

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 6
  %42 = load ptr, ptr %41, align 8, !tbaa !234
  %43 = icmp eq ptr %42, null
  br i1 %43, label %92, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 15
  %46 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 17
  %47 = and i32 %1, 512
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = tail call ptr @Perl_hv_iternext_flags(ptr noundef nonnull %42, i32 noundef 0) #15
  %51 = icmp eq ptr %50, null
  br i1 %51, label %92, label %87

52:                                               ; preds = %44, %84
  %53 = tail call ptr @Perl_hv_iternext_flags(ptr noundef nonnull %42, i32 noundef 0) #15
  %54 = icmp eq ptr %53, null
  br i1 %54, label %92, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %struct.he, ptr %53, i64 0, i32 2
  %57 = load ptr, ptr %56, align 8, !tbaa !17
  %58 = getelementptr inbounds %struct.sv, ptr %57, i64 0, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !17
  %60 = load ptr, ptr %57, align 8, !tbaa !16
  %61 = getelementptr inbounds %struct.xpviv, ptr %60, i64 0, i32 4
  %62 = load i64, ptr %61, align 8, !tbaa !17
  %63 = icmp sgt i64 %62, 0
  br i1 %63, label %64, label %84

64:                                               ; preds = %55
  %65 = load i32, ptr %45, align 8, !tbaa !239
  br label %66

66:                                               ; preds = %64, %81
  %67 = phi i64 [ 0, %64 ], [ %82, %81 ]
  %68 = getelementptr inbounds i32, ptr %59, i64 %67
  %69 = load i32, ptr %68, align 4, !tbaa !73
  %70 = icmp slt i32 %65, %69
  br i1 %70, label %81, label %71

71:                                               ; preds = %66
  %72 = load ptr, ptr %46, align 8, !tbaa !211
  %73 = sext i32 %69 to i64
  %74 = getelementptr inbounds %struct.regexp_paren_pair, ptr %72, i64 %73
  %75 = load i64, ptr %74, align 8, !tbaa !237
  %76 = icmp eq i64 %75, -1
  br i1 %76, label %81, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %struct.regexp_paren_pair, ptr %72, i64 %73, i32 1
  %79 = load i64, ptr %78, align 8, !tbaa !240
  %80 = icmp eq i64 %79, -1
  br i1 %80, label %81, label %84

81:                                               ; preds = %66, %71, %77
  %82 = add nuw nsw i64 %67, 1
  %83 = icmp eq i64 %82, %62
  br i1 %83, label %84, label %66, !llvm.loop !306

84:                                               ; preds = %81, %77, %55
  %85 = phi i64 [ 0, %55 ], [ %73, %77 ], [ 0, %81 ]
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %52, label %87, !llvm.loop !307

87:                                               ; preds = %84, %49
  %88 = phi ptr [ %50, %49 ], [ %53, %84 ]
  %89 = getelementptr inbounds %struct.he, ptr %88, i64 0, i32 1
  %90 = load ptr, ptr %89, align 8, !tbaa !298
  %91 = tail call ptr @Perl_newSVhek(ptr noundef %90) #15
  br label %92

92:                                               ; preds = %52, %49, %40, %39, %87
  %93 = phi ptr [ %91, %87 ], [ null, %39 ], [ null, %40 ], [ null, %49 ], [ null, %52 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  ret ptr %93
}

declare ptr @Perl_hv_common(ptr noundef, ptr noundef, ptr noundef, i64 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_newSVsv(ptr noundef) local_unnamed_addr #2

declare void @Perl_av_push(ptr noundef, ptr noundef) local_unnamed_addr #2

declare ptr @Perl_newRV_noinc(ptr noundef) local_unnamed_addr #2

declare i32 @Perl_hv_iterinit(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_hv_iternext_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_newSVhek(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_newSViv(i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @my_reg_numbered_buff_fetch(ptr noundef readonly %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !62
  %6 = and i32 %5, 255
  %7 = icmp eq i32 %6, 8
  %8 = and i32 %5, 16826623
  %9 = icmp eq i32 %8, 16777226
  %10 = or i1 %7, %9
  br i1 %10, label %12, label %11

11:                                               ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %12

12:                                               ; preds = %3, %11
  %13 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.83, i32 noundef 7643) #15
  br label %17

17:                                               ; preds = %12, %16
  %18 = icmp eq i32 %1, -3
  %19 = add i32 %1, 5
  %20 = icmp ult i32 %19, 3
  br i1 %20, label %21, label %44

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 7
  %23 = load i32, ptr %22, align 8, !tbaa !123
  %24 = and i32 %23, 64
  %25 = icmp eq i32 %24, 0
  %26 = lshr exact i32 %24, 6
  %27 = trunc i32 %26 to i8
  %28 = load ptr, ptr @PL_curpm, align 8
  %29 = icmp ne ptr %28, null
  %30 = select i1 %25, i1 %29, i1 false
  br i1 %30, label %31, label %41

31:                                               ; preds = %21
  %32 = getelementptr inbounds %struct.pmop, ptr %28, i64 0, i32 9
  %33 = load ptr, ptr %32, align 8, !tbaa !308
  %34 = icmp eq ptr %33, %0
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.pmop, ptr %28, i64 0, i32 10
  %37 = load i32, ptr %36, align 8, !tbaa !310
  %38 = trunc i32 %37 to i8
  %39 = lshr i8 %38, 6
  %40 = and i8 %39, 1
  br label %41

41:                                               ; preds = %31, %35, %21
  %42 = phi i8 [ %40, %35 ], [ %27, %31 ], [ %27, %21 ]
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %174, label %44

44:                                               ; preds = %41, %17
  %45 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 18
  %46 = load ptr, ptr %45, align 8, !tbaa !311
  %47 = icmp eq ptr %46, null
  br i1 %47, label %174, label %48

48:                                               ; preds = %44
  %49 = select i1 %18, i32 0, i32 %1
  switch i32 %49, label %73 [
    i32 -2, label %50
    i32 -5, label %50
    i32 -1, label %57
    i32 -4, label %57
  ]

50:                                               ; preds = %48, %48
  %51 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 17
  %52 = load ptr, ptr %51, align 8, !tbaa !211
  %53 = load i64, ptr %52, align 8, !tbaa !237
  %54 = icmp eq i64 %53, -1
  br i1 %54, label %55, label %103

55:                                               ; preds = %50
  %56 = icmp eq i32 %49, -4
  br i1 %56, label %57, label %174

57:                                               ; preds = %55, %48, %48
  %58 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 17
  %59 = load ptr, ptr %58, align 8, !tbaa !211
  %60 = getelementptr inbounds %struct.regexp_paren_pair, ptr %59, i64 0, i32 1
  %61 = load i64, ptr %60, align 8, !tbaa !240
  %62 = icmp eq i64 %61, -1
  br i1 %62, label %174, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 21
  %65 = load i64, ptr %64, align 8, !tbaa !312
  %66 = sub i64 0, %65
  %67 = getelementptr inbounds i8, ptr %46, i64 %66
  %68 = getelementptr inbounds i8, ptr %67, i64 %61
  %69 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 20
  %70 = load i64, ptr %69, align 8, !tbaa !313
  %71 = sub i64 %65, %61
  %72 = add i64 %71, %70
  br label %97

73:                                               ; preds = %48
  %74 = icmp sgt i32 %49, -1
  br i1 %74, label %75, label %174

75:                                               ; preds = %73
  %76 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 12
  %77 = load i32, ptr %76, align 8, !tbaa !126
  %78 = icmp sgt i32 %49, %77
  br i1 %78, label %174, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 17
  %81 = load ptr, ptr %80, align 8, !tbaa !211
  %82 = zext i32 %49 to i64
  %83 = getelementptr inbounds %struct.regexp_paren_pair, ptr %81, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !237
  %85 = icmp eq i64 %84, -1
  br i1 %85, label %174, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %struct.regexp_paren_pair, ptr %81, i64 %82, i32 1
  %88 = load i64, ptr %87, align 8, !tbaa !240
  %89 = icmp eq i64 %88, -1
  br i1 %89, label %174, label %90

90:                                               ; preds = %86
  %91 = sub nsw i64 %88, %84
  %92 = getelementptr inbounds i8, ptr %46, i64 %84
  %93 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 21
  %94 = load i64, ptr %93, align 8, !tbaa !312
  %95 = sub i64 0, %94
  %96 = getelementptr inbounds i8, ptr %92, i64 %95
  br label %97

97:                                               ; preds = %63, %90
  %98 = phi i64 [ %72, %63 ], [ %91, %90 ]
  %99 = phi ptr [ %68, %63 ], [ %96, %90 ]
  %100 = icmp ult ptr %99, %46
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.89, i32 noundef 7697) #15
  %102 = load ptr, ptr %45, align 8, !tbaa !311
  br label %103

103:                                              ; preds = %50, %97, %101
  %104 = phi ptr [ %46, %97 ], [ %102, %101 ], [ %46, %50 ]
  %105 = phi ptr [ %99, %97 ], [ %99, %101 ], [ %46, %50 ]
  %106 = phi i64 [ %98, %97 ], [ %98, %101 ], [ %53, %50 ]
  %107 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 20
  %108 = load i64, ptr %107, align 8, !tbaa !313
  %109 = ptrtoint ptr %105 to i64
  %110 = ptrtoint ptr %104 to i64
  %111 = add i64 %106, %109
  %112 = sub i64 %111, %110
  %113 = icmp ult i64 %108, %112
  br i1 %113, label %114, label %115

114:                                              ; preds = %103
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.90, i32 noundef 7698) #15
  br label %115

115:                                              ; preds = %103, %114
  %116 = icmp sgt i64 %106, -1
  br i1 %116, label %117, label %174

117:                                              ; preds = %115
  %118 = load i8, ptr @PL_tainted, align 1, !tbaa !11, !range !18, !noundef !19
  store i8 0, ptr @PL_tainted, align 1, !tbaa !11
  tail call void @Perl_sv_setpvn(ptr noundef %2, ptr noundef %105, i64 noundef %106) #15
  store i8 %118, ptr @PL_tainted, align 1, !tbaa !11
  %119 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 13
  %120 = load i32, ptr %119, align 4, !tbaa !125
  %121 = and i32 %120, 128
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 7
  %124 = load i32, ptr %123, align 8, !tbaa !123
  %125 = and i32 %124, 1048576
  %126 = icmp eq i32 %125, 0
  br i1 %122, label %132, label %127

127:                                              ; preds = %117
  br i1 %126, label %137, label %128

128:                                              ; preds = %127
  %129 = icmp eq i64 %106, 0
  br i1 %129, label %133, label %130

130:                                              ; preds = %128
  %131 = tail call zeroext i1 @Perl_is_utf8_string(ptr noundef %105, i64 noundef %106) #15
  br i1 %131, label %133, label %137

132:                                              ; preds = %117
  br i1 %126, label %137, label %133

133:                                              ; preds = %128, %132, %130
  %134 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 2
  %135 = load i32, ptr %134, align 4, !tbaa !13
  %136 = or i32 %135, 536870912
  store i32 %136, ptr %134, align 4, !tbaa !13
  br label %141

137:                                              ; preds = %127, %132, %130
  %138 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 2
  %139 = load i32, ptr %138, align 4, !tbaa !13
  %140 = and i32 %139, -536870913
  store i32 %140, ptr %138, align 4, !tbaa !13
  br label %141

141:                                              ; preds = %137, %133
  %142 = phi i32 [ %140, %137 ], [ %136, %133 ]
  %143 = load i8, ptr @PL_tainting, align 1, !tbaa !11, !range !18, !noundef !19
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %175, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %struct.regexp, ptr %14, i64 0, i32 7
  %147 = load i32, ptr %146, align 8, !tbaa !123
  %148 = and i32 %147, 67108864
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %173, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 2
  %152 = and i32 %142, 255
  %153 = icmp ugt i32 %152, 6
  br i1 %153, label %154, label %172

154:                                              ; preds = %150
  %155 = load ptr, ptr %2, align 8, !tbaa !16
  %156 = getelementptr inbounds %struct.xpvmg, ptr %155, i64 0, i32 1
  %157 = load ptr, ptr %156, align 8, !tbaa !17
  store i8 1, ptr @PL_tainted, align 1, !tbaa !11
  %158 = load ptr, ptr %157, align 8, !tbaa !314
  store ptr %158, ptr %156, align 8, !tbaa !17
  tail call void @Perl_sv_magic(ptr noundef nonnull %2, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0) #15
  %159 = load ptr, ptr %2, align 8, !tbaa !16
  %160 = getelementptr inbounds %struct.xpvmg, ptr %159, i64 0, i32 1
  %161 = load ptr, ptr %160, align 8, !tbaa !17
  %162 = icmp eq ptr %161, null
  br i1 %162, label %175, label %163

163:                                              ; preds = %154
  store ptr %161, ptr %157, align 8, !tbaa !314
  %164 = load i32, ptr %151, align 4, !tbaa !13
  %165 = and i32 %164, 255
  %166 = icmp ugt i32 %165, 6
  br i1 %166, label %169, label %167

167:                                              ; preds = %163
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.91, i32 noundef 7727) #15
  %168 = load ptr, ptr %2, align 8, !tbaa !16
  br label %169

169:                                              ; preds = %163, %167
  %170 = phi ptr [ %159, %163 ], [ %168, %167 ]
  %171 = getelementptr inbounds %struct.xpvmg, ptr %170, i64 0, i32 1
  store ptr %157, ptr %171, align 8, !tbaa !17
  br label %175

172:                                              ; preds = %150
  store i8 1, ptr @PL_tainted, align 1, !tbaa !11
  tail call void @Perl_sv_magic(ptr noundef nonnull %2, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0) #15
  br label %175

173:                                              ; preds = %145
  tail call void @Perl_sv_untaint(ptr noundef nonnull %2) #15
  br label %175

174:                                              ; preds = %55, %57, %41, %115, %73, %75, %79, %86, %44
  tail call void @Perl_sv_setsv_flags(ptr noundef %2, ptr noundef nonnull @PL_sv_undef, i32 noundef 1538) #15
  br label %175

175:                                              ; preds = %141, %173, %172, %169, %154, %174
  ret void
}

declare void @Perl_sv_setpvn(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

declare zeroext i1 @Perl_is_utf8_string(ptr noundef, i64 noundef) local_unnamed_addr #2

declare void @Perl_sv_magic(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_sv_untaint(ptr noundef) local_unnamed_addr #2

declare void @Perl_sv_setsv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @my_reg_numbered_buff_store(ptr noundef readnone %0, i32 noundef %1, ptr nocapture noundef readnone %2) local_unnamed_addr #0 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.83, i32 noundef 7747) #15
  br label %6

6:                                                ; preds = %3, %5
  %7 = load i8, ptr @PL_localizing, align 1, !tbaa !17
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  tail call void @Perl_croak_no_modify() #15
  br label %10

10:                                               ; preds = %9, %6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @my_reg_numbered_buff_length(ptr noundef readonly %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #0 {
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !62
  %8 = and i32 %7, 255
  %9 = icmp eq i32 %8, 8
  %10 = and i32 %7, 16826623
  %11 = icmp eq i32 %10, 16777226
  %12 = or i1 %9, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %14

14:                                               ; preds = %3, %13
  %15 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.83, i32 noundef 7765) #15
  br label %19

19:                                               ; preds = %14, %18
  %20 = icmp eq ptr %1, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.92, i32 noundef 7765) #15
  br label %22

22:                                               ; preds = %19, %21
  %23 = add i32 %2, 5
  %24 = icmp ult i32 %23, 3
  br i1 %24, label %25, label %48

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.regexp, ptr %16, i64 0, i32 7
  %27 = load i32, ptr %26, align 8, !tbaa !123
  %28 = and i32 %27, 64
  %29 = icmp eq i32 %28, 0
  %30 = lshr exact i32 %28, 6
  %31 = trunc i32 %30 to i8
  %32 = load ptr, ptr @PL_curpm, align 8
  %33 = icmp ne ptr %32, null
  %34 = select i1 %29, i1 %33, i1 false
  br i1 %34, label %35, label %45

35:                                               ; preds = %25
  %36 = getelementptr inbounds %struct.pmop, ptr %32, i64 0, i32 9
  %37 = load ptr, ptr %36, align 8, !tbaa !308
  %38 = icmp eq ptr %37, %0
  br i1 %38, label %39, label %45

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.pmop, ptr %32, i64 0, i32 10
  %41 = load i32, ptr %40, align 8, !tbaa !310
  %42 = trunc i32 %41 to i8
  %43 = lshr i8 %42, 6
  %44 = and i8 %43, 1
  br label %45

45:                                               ; preds = %35, %39, %25
  %46 = phi i8 [ %44, %39 ], [ %31, %35 ], [ %31, %25 ]
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %89, label %48

48:                                               ; preds = %45, %22
  switch i32 %2, label %72 [
    i32 -5, label %49
    i32 -2, label %49
    i32 -4, label %57
    i32 -1, label %57
  ]

49:                                               ; preds = %48, %48
  %50 = getelementptr inbounds %struct.regexp, ptr %16, i64 0, i32 17
  %51 = load ptr, ptr %50, align 8, !tbaa !211
  %52 = load i64, ptr %51, align 8, !tbaa !237
  %53 = icmp ne i64 %52, -1
  %54 = trunc i64 %52 to i32
  %55 = icmp sgt i32 %54, 0
  %56 = and i1 %53, %55
  br i1 %56, label %95, label %118

57:                                               ; preds = %48, %48
  %58 = getelementptr inbounds %struct.regexp, ptr %16, i64 0, i32 17
  %59 = load ptr, ptr %58, align 8, !tbaa !211
  %60 = getelementptr inbounds %struct.regexp_paren_pair, ptr %59, i64 0, i32 1
  %61 = load i64, ptr %60, align 8, !tbaa !240
  %62 = icmp eq i64 %61, -1
  br i1 %62, label %118, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %struct.regexp, ptr %16, i64 0, i32 20
  %65 = load i64, ptr %64, align 8, !tbaa !313
  %66 = sub nsw i64 %65, %61
  %67 = trunc i64 %66 to i32
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %118

69:                                               ; preds = %63
  %70 = trunc i64 %61 to i32
  %71 = trunc i64 %65 to i32
  br label %95

72:                                               ; preds = %48
  %73 = getelementptr inbounds %struct.regexp, ptr %16, i64 0, i32 12
  %74 = load i32, ptr %73, align 8, !tbaa !126
  %75 = icmp slt i32 %74, %2
  br i1 %75, label %89, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.regexp, ptr %16, i64 0, i32 17
  %78 = load ptr, ptr %77, align 8, !tbaa !211
  %79 = sext i32 %2 to i64
  %80 = getelementptr inbounds %struct.regexp_paren_pair, ptr %78, i64 %79
  %81 = load i64, ptr %80, align 8, !tbaa !237
  %82 = trunc i64 %81 to i32
  %83 = icmp eq i32 %82, -1
  br i1 %83, label %89, label %84

84:                                               ; preds = %76
  %85 = getelementptr inbounds %struct.regexp_paren_pair, ptr %78, i64 %79, i32 1
  %86 = load i64, ptr %85, align 8, !tbaa !240
  %87 = trunc i64 %86 to i32
  %88 = icmp eq i32 %87, -1
  br i1 %88, label %89, label %92

89:                                               ; preds = %45, %72, %76, %84
  %90 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 41) #15
  br i1 %90, label %91, label %118

91:                                               ; preds = %89
  tail call void @Perl_report_uninit(ptr noundef %1) #15
  br label %118

92:                                               ; preds = %84
  %93 = sub nsw i32 %87, %82
  %94 = icmp sgt i32 %93, 0
  br i1 %94, label %95, label %118

95:                                               ; preds = %49, %69, %92
  %96 = phi i32 [ %87, %92 ], [ %54, %49 ], [ %71, %69 ]
  %97 = phi i32 [ %82, %92 ], [ 0, %49 ], [ %70, %69 ]
  %98 = phi i32 [ %93, %92 ], [ %54, %49 ], [ %67, %69 ]
  %99 = getelementptr inbounds %struct.regexp, ptr %16, i64 0, i32 7
  %100 = load i32, ptr %99, align 8, !tbaa !123
  %101 = and i32 %100, 1048576
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %118, label %103

103:                                              ; preds = %95
  %104 = getelementptr inbounds %struct.regexp, ptr %16, i64 0, i32 18
  %105 = load ptr, ptr %104, align 8, !tbaa !311
  %106 = getelementptr inbounds %struct.regexp, ptr %16, i64 0, i32 21
  %107 = load i64, ptr %106, align 8, !tbaa !312
  %108 = sub i64 0, %107
  %109 = getelementptr inbounds i8, ptr %105, i64 %108
  %110 = sext i32 %97 to i64
  %111 = getelementptr inbounds i8, ptr %109, i64 %110
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #15
  %112 = sub nsw i32 %96, %97
  %113 = sext i32 %112 to i64
  %114 = call zeroext i1 @Perl_is_utf8_string_loclen(ptr noundef %111, i64 noundef %113, ptr noundef nonnull %4, ptr noundef nonnull %5) #15
  %115 = load i64, ptr %5, align 8
  %116 = trunc i64 %115 to i32
  %117 = select i1 %114, i32 %116, i32 %112
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #15
  br label %118

118:                                              ; preds = %92, %95, %103, %89, %91, %57, %63, %49
  %119 = phi i32 [ 0, %49 ], [ 0, %63 ], [ 0, %57 ], [ 0, %91 ], [ 0, %89 ], [ %117, %103 ], [ %98, %95 ], [ %93, %92 ]
  ret i32 %119
}

declare zeroext i1 @Perl_ckwarn(i32 noundef) local_unnamed_addr #2

declare void @Perl_report_uninit(ptr noundef) local_unnamed_addr #2

declare zeroext i1 @Perl_is_utf8_string_loclen(ptr noundef, i64 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @my_reg_qr_package(ptr noundef readnone %0) local_unnamed_addr #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %1
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.83, i32 noundef 7841) #15
  br label %4

4:                                                ; preds = %1, %3
  %5 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.93, i64 noundef 6) #15
  ret ptr %5
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_dumpuntil(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5, i32 noundef %6, i32 noundef %7) unnamed_addr #0 {
  %9 = alloca i64, align 8
  %10 = getelementptr inbounds %struct.regexp, ptr %0, i64 0, i32 14
  %11 = load ptr, ptr %10, align 8, !tbaa !90
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9)
  store volatile i64 0, ptr %9, align 8, !tbaa !9
  %12 = load volatile i64, ptr %9, align 8, !tbaa !9
  %13 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %14 = icmp eq ptr %13, null
  br i1 %14, label %34, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.sv, ptr %13, i64 0, i32 2
  %17 = load i32, ptr %16, align 4, !tbaa !13
  %18 = and i32 %17, 256
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  tail call void @Perl_sv_setuv(ptr noundef nonnull %13, i64 noundef 65288) #15
  %21 = load i32, ptr %16, align 4, !tbaa !13
  br label %22

22:                                               ; preds = %20, %15
  %23 = phi i32 [ %21, %20 ], [ %17, %15 ]
  %24 = and i32 %23, 2097408
  %25 = icmp eq i32 %24, 256
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = load ptr, ptr %13, align 8, !tbaa !16
  %28 = getelementptr inbounds %struct.xpviv, ptr %27, i64 0, i32 4
  %29 = load i64, ptr %28, align 8, !tbaa !17
  br label %32

30:                                               ; preds = %22
  %31 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %13, i32 noundef 2) #15
  br label %32

32:                                               ; preds = %30, %26
  %33 = phi i64 [ %29, %26 ], [ %31, %30 ]
  store volatile i64 %33, ptr %9, align 8, !tbaa !9
  br label %34

34:                                               ; preds = %8, %32
  %35 = icmp eq ptr %1, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %34
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.658, i32 noundef 18099) #15
  br label %37

37:                                               ; preds = %34, %36
  %38 = icmp eq ptr %2, null
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.303, i32 noundef 18099) #15
  br label %40

40:                                               ; preds = %37, %39
  %41 = icmp eq ptr %5, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.92, i32 noundef 18099) #15
  br label %43

43:                                               ; preds = %40, %42
  %44 = icmp ne ptr %4, null
  %45 = icmp ult ptr %4, %3
  %46 = and i1 %44, %45
  %47 = select i1 %46, ptr %4, ptr %3
  %48 = load i8, ptr getelementptr inbounds ([0 x i8], ptr @PL_regkind, i64 0, i64 93), align 1, !tbaa !17
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %436, label %50

50:                                               ; preds = %43
  %51 = icmp eq ptr %47, null
  %52 = ptrtoint ptr %1 to i64
  %53 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 3
  %54 = getelementptr inbounds %struct.regexp_internal, ptr %11, i64 0, i32 3
  %55 = add i32 %7, 1
  br label %56

56:                                               ; preds = %50, %416
  %57 = phi ptr [ %2, %50 ], [ %417, %416 ]
  %58 = phi i32 [ %6, %50 ], [ %419, %416 ]
  %59 = phi ptr [ null, %50 ], [ %418, %416 ]
  %60 = icmp ult ptr %57, %47
  %61 = select i1 %51, i1 true, i1 %60
  br i1 %61, label %62, label %421

62:                                               ; preds = %56
  %63 = icmp eq ptr %57, null
  br i1 %63, label %64, label %65

64:                                               ; preds = %62
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.303, i32 noundef 18110) #15
  br label %65

65:                                               ; preds = %62, %64
  %66 = getelementptr inbounds %struct.regnode, ptr %57, i64 0, i32 1
  %67 = load i8, ptr %66, align 1, !tbaa !141
  %68 = and i8 %67, -3
  %69 = icmp eq i8 %68, 48
  %70 = sext i1 %69 to i32
  %71 = add nsw i32 %58, %70
  %72 = tail call ptr @Perl_regnext(ptr noundef %57) #15
  %73 = load i8, ptr %66, align 1, !tbaa !141
  %74 = icmp eq i8 %73, 92
  %75 = icmp eq ptr %59, null
  br i1 %74, label %76, label %81

76:                                               ; preds = %65
  br i1 %75, label %77, label %134

77:                                               ; preds = %76
  %78 = load volatile i64, ptr %9, align 8, !tbaa !9
  %79 = and i64 %78, 2
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %134, label %93

81:                                               ; preds = %65
  br i1 %75, label %93, label %82

82:                                               ; preds = %81
  %83 = load volatile i64, ptr %9, align 8, !tbaa !9
  %84 = and i64 %83, 2
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %93, label %86

86:                                               ; preds = %82
  %87 = tail call ptr @Perl_PerlIO_stderr() #15
  %88 = ptrtoint ptr %57 to i64
  %89 = ptrtoint ptr %59 to i64
  %90 = sub i64 %88, %89
  %91 = ashr exact i64 %90, 2
  %92 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %87, ptr noundef nonnull @.str.667, i64 noundef %91) #15
  br label %93

93:                                               ; preds = %82, %86, %77, %81
  %94 = phi ptr [ null, %81 ], [ %57, %77 ], [ null, %86 ], [ null, %82 ]
  tail call void @my_regprop(ptr noundef %0, ptr noundef %5, ptr noundef nonnull %57, ptr noundef null, ptr noundef null)
  %95 = tail call ptr @Perl_PerlIO_stderr() #15
  %96 = ptrtoint ptr %57 to i64
  %97 = sub i64 %96, %52
  %98 = ashr exact i64 %97, 2
  %99 = shl nsw i32 %71, 1
  %100 = or i32 %99, 1
  %101 = load ptr, ptr %53, align 8, !tbaa !17
  %102 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %95, ptr noundef nonnull @.str.668, i64 noundef %98, i32 noundef %100, ptr noundef nonnull @.str.8, ptr noundef %101) #15
  %103 = load i8, ptr %66, align 1, !tbaa !141
  %104 = icmp eq i8 %103, 92
  br i1 %104, label %134, label %105

105:                                              ; preds = %93
  %106 = icmp eq ptr %72, null
  br i1 %106, label %107, label %110

107:                                              ; preds = %105
  %108 = tail call ptr @Perl_PerlIO_stderr() #15
  %109 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %108, ptr noundef nonnull @.str.669) #15
  br label %131

110:                                              ; preds = %105
  %111 = zext i8 %67 to i64
  %112 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %111
  %113 = load i8, ptr %112, align 1, !tbaa !17
  %114 = icmp eq i8 %113, 30
  br i1 %114, label %115, label %125

115:                                              ; preds = %110
  %116 = getelementptr inbounds %struct.regnode, ptr %72, i64 0, i32 1
  %117 = load i8, ptr %116, align 1, !tbaa !141
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %118
  %120 = load i8, ptr %119, align 1, !tbaa !17
  %121 = icmp eq i8 %120, 30
  br i1 %121, label %125, label %122

122:                                              ; preds = %115
  %123 = tail call ptr @Perl_PerlIO_stderr() #15
  %124 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %123, ptr noundef nonnull @.str.670) #15
  br label %131

125:                                              ; preds = %115, %110
  %126 = tail call ptr @Perl_PerlIO_stderr() #15
  %127 = ptrtoint ptr %72 to i64
  %128 = sub i64 %127, %52
  %129 = ashr exact i64 %128, 2
  %130 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %126, ptr noundef nonnull @.str.671, i64 noundef %129) #15
  br label %131

131:                                              ; preds = %122, %125, %107
  %132 = tail call ptr @Perl_PerlIO_stderr() #15
  %133 = tail call i32 @PerlIO_putc(ptr noundef %132, i32 noundef 10) #15
  br label %134

134:                                              ; preds = %93, %131, %76, %77
  %135 = phi ptr [ %59, %76 ], [ %94, %131 ], [ %94, %93 ], [ null, %77 ]
  %136 = zext i8 %67 to i64
  %137 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %136
  %138 = load i8, ptr %137, align 1, !tbaa !17
  switch i8 %138, label %325 [
    i8 62, label %139
    i8 30, label %169
    i8 72, label %189
  ]

139:                                              ; preds = %134
  %140 = icmp eq ptr %72, null
  br i1 %140, label %141, label %142

141:                                              ; preds = %139
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.672, i32 noundef 18144) #15
  br label %142

142:                                              ; preds = %139, %141
  %143 = getelementptr inbounds %struct.regnode, ptr %72, i64 0, i32 1
  %144 = load i8, ptr %143, align 1, !tbaa !141
  %145 = icmp eq i8 %144, 61
  br i1 %145, label %146, label %148

146:                                              ; preds = %142
  %147 = tail call ptr @Perl_regnext(ptr noundef nonnull %72) #15
  br label %148

148:                                              ; preds = %142, %146
  %149 = phi ptr [ %147, %146 ], [ %72, %142 ]
  %150 = icmp ule ptr %149, %47
  %151 = select i1 %51, i1 true, i1 %150
  %152 = select i1 %151, ptr %149, ptr %47
  %153 = icmp eq ptr %135, null
  br i1 %153, label %165, label %154

154:                                              ; preds = %148
  %155 = load volatile i64, ptr %9, align 8, !tbaa !9
  %156 = and i64 %155, 2
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %165, label %158

158:                                              ; preds = %154
  %159 = tail call ptr @Perl_PerlIO_stderr() #15
  %160 = ptrtoint ptr %57 to i64
  %161 = ptrtoint ptr %135 to i64
  %162 = sub i64 %160, %161
  %163 = ashr exact i64 %162, 2
  %164 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %159, ptr noundef nonnull @.str.667, i64 noundef %163) #15
  br label %165

165:                                              ; preds = %154, %158, %148
  %166 = getelementptr inbounds %struct.regnode, ptr %57, i64 2
  %167 = add nsw i32 %71, 1
  %168 = tail call fastcc ptr @S_dumpuntil(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %166, ptr noundef %152, ptr noundef %47, ptr noundef %5, i32 noundef %167, i32 noundef %55)
  br label %411

169:                                              ; preds = %134
  %170 = icmp eq ptr %72, null
  br i1 %170, label %171, label %172

171:                                              ; preds = %169
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.672, i32 noundef 18155) #15
  br label %172

172:                                              ; preds = %169, %171
  %173 = icmp eq ptr %135, null
  br i1 %173, label %185, label %174

174:                                              ; preds = %172
  %175 = load volatile i64, ptr %9, align 8, !tbaa !9
  %176 = and i64 %175, 2
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %185, label %178

178:                                              ; preds = %174
  %179 = tail call ptr @Perl_PerlIO_stderr() #15
  %180 = ptrtoint ptr %57 to i64
  %181 = ptrtoint ptr %135 to i64
  %182 = sub i64 %180, %181
  %183 = ashr exact i64 %182, 2
  %184 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %179, ptr noundef nonnull @.str.667, i64 noundef %183) #15
  br label %185

185:                                              ; preds = %174, %178, %172
  %186 = getelementptr inbounds %struct.regnode, ptr %57, i64 1
  %187 = add nsw i32 %71, 1
  %188 = tail call fastcc ptr @S_dumpuntil(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %186, ptr noundef %72, ptr noundef %47, ptr noundef %5, i32 noundef %187, i32 noundef %55)
  br label %411

189:                                              ; preds = %134
  %190 = load i8, ptr %66, align 1, !tbaa !141
  %191 = getelementptr inbounds %struct.regnode_1, ptr %57, i64 0, i32 3
  %192 = load i32, ptr %191, align 4, !tbaa !148
  %193 = icmp sgt i8 %190, 73
  %194 = load ptr, ptr %54, align 8, !tbaa !147
  br i1 %193, label %195, label %201

195:                                              ; preds = %189
  %196 = zext i32 %192 to i64
  %197 = getelementptr inbounds %struct.reg_data, ptr %194, i64 0, i32 2, i64 %196
  %198 = load ptr, ptr %197, align 8, !tbaa !5
  %199 = getelementptr inbounds %struct._reg_ac_data, ptr %198, i64 0, i32 1
  %200 = load i32, ptr %199, align 4, !tbaa !160
  br label %201

201:                                              ; preds = %189, %195
  %202 = phi i32 [ %200, %195 ], [ %192, %189 ]
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds %struct.reg_data, ptr %194, i64 0, i32 2, i64 %203
  %205 = load ptr, ptr %204, align 8, !tbaa !5
  %206 = add i32 %192, 2
  %207 = zext i32 %206 to i64
  %208 = getelementptr inbounds %struct.reg_data, ptr %194, i64 0, i32 2, i64 %207
  %209 = load ptr, ptr %208, align 8, !tbaa !5
  tail call void @Perl_sv_setpvn(ptr noundef %5, ptr noundef nonnull @.str.8, i64 noundef 0) #15
  %210 = getelementptr inbounds %struct._reg_trie_data, ptr %205, i64 0, i32 14
  %211 = load i32, ptr %210, align 8, !tbaa !229
  %212 = icmp sgt i32 %211, 0
  br i1 %212, label %213, label %320

213:                                              ; preds = %201
  %214 = shl i32 %71, 1
  %215 = add i32 %214, 6
  %216 = getelementptr inbounds %struct._reg_trie_data, ptr %205, i64 0, i32 6
  %217 = add nsw i32 %71, 1
  br label %218

218:                                              ; preds = %213, %312
  %219 = phi i64 [ 0, %213 ], [ %313, %312 ]
  %220 = phi ptr [ %57, %213 ], [ %316, %312 ]
  %221 = phi ptr [ null, %213 ], [ %315, %312 ]
  %222 = phi ptr [ %135, %213 ], [ %314, %312 ]
  %223 = tail call ptr @Perl_av_fetch(ptr noundef %209, i64 noundef %219, i32 noundef 0) #15
  %224 = tail call ptr @Perl_PerlIO_stderr() #15
  %225 = icmp eq ptr %223, null
  br i1 %225, label %253, label %226

226:                                              ; preds = %218
  %227 = load ptr, ptr %223, align 8, !tbaa !5
  %228 = getelementptr inbounds %struct.sv, ptr %227, i64 0, i32 2
  %229 = load i32, ptr %228, align 4, !tbaa !13
  %230 = and i32 %229, 2098176
  %231 = icmp eq i32 %230, 1024
  br i1 %231, label %232, label %235

232:                                              ; preds = %226
  %233 = getelementptr inbounds %struct.sv, ptr %227, i64 0, i32 3
  %234 = load ptr, ptr %233, align 8, !tbaa !17
  br label %240

235:                                              ; preds = %226
  %236 = tail call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %227, ptr noundef null, i32 noundef 34) #15
  %237 = load ptr, ptr %223, align 8, !tbaa !5
  %238 = getelementptr inbounds %struct.sv, ptr %237, i64 0, i32 2
  %239 = load i32, ptr %238, align 4, !tbaa !13
  br label %240

240:                                              ; preds = %235, %232
  %241 = phi i32 [ %229, %232 ], [ %239, %235 ]
  %242 = phi ptr [ %227, %232 ], [ %237, %235 ]
  %243 = phi ptr [ %234, %232 ], [ %236, %235 ]
  %244 = load ptr, ptr %242, align 8, !tbaa !16
  %245 = getelementptr inbounds %struct.xpv, ptr %244, i64 0, i32 2
  %246 = load i64, ptr %245, align 8, !tbaa !38
  %247 = load ptr, ptr @PL_colors, align 16, !tbaa !5
  %248 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 1), align 8, !tbaa !5
  %249 = lshr i32 %241, 21
  %250 = and i32 %249, 256
  %251 = or i32 %250, 6
  %252 = tail call ptr @Perl_pv_pretty(ptr noundef %5, ptr noundef %243, i64 noundef %246, i64 noundef 60, ptr noundef %247, ptr noundef %248, i32 noundef %251) #15
  br label %253

253:                                              ; preds = %218, %240
  %254 = phi ptr [ %252, %240 ], [ @.str.674, %218 ]
  %255 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %224, ptr noundef nonnull @.str.673, i32 noundef %215, ptr noundef nonnull @.str.8, ptr noundef %254) #15
  %256 = load ptr, ptr %216, align 8, !tbaa !290
  %257 = icmp eq ptr %256, null
  br i1 %257, label %308, label %258

258:                                              ; preds = %253
  %259 = add nuw nsw i64 %219, 1
  %260 = getelementptr inbounds i16, ptr %256, i64 %259
  %261 = load i16, ptr %260, align 2, !tbaa !139
  %262 = tail call ptr @Perl_PerlIO_stderr() #15
  %263 = icmp eq i16 %261, 0
  %264 = zext i16 %261 to i64
  %265 = getelementptr inbounds %struct.regnode, ptr %57, i64 %264
  %266 = select i1 %263, ptr %72, ptr %265
  %267 = ptrtoint ptr %266 to i64
  %268 = sub i64 %267, %52
  %269 = ashr exact i64 %268, 2
  %270 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %262, ptr noundef nonnull @.str.675, i64 noundef %269) #15
  br i1 %263, label %294, label %271

271:                                              ; preds = %258
  %272 = icmp eq ptr %221, null
  br i1 %272, label %273, label %278

273:                                              ; preds = %271
  %274 = load ptr, ptr %216, align 8, !tbaa !290
  %275 = load i16, ptr %274, align 2, !tbaa !139
  %276 = zext i16 %275 to i64
  %277 = getelementptr inbounds %struct.regnode, ptr %57, i64 %276
  br label %278

278:                                              ; preds = %273, %271
  %279 = phi ptr [ %221, %271 ], [ %277, %273 ]
  %280 = icmp eq ptr %222, null
  br i1 %280, label %292, label %281

281:                                              ; preds = %278
  %282 = load volatile i64, ptr %9, align 8, !tbaa !9
  %283 = and i64 %282, 2
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %292, label %285

285:                                              ; preds = %281
  %286 = tail call ptr @Perl_PerlIO_stderr() #15
  %287 = ptrtoint ptr %220 to i64
  %288 = ptrtoint ptr %222 to i64
  %289 = sub i64 %287, %288
  %290 = ashr exact i64 %289, 2
  %291 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %286, ptr noundef nonnull @.str.667, i64 noundef %290) #15
  br label %292

292:                                              ; preds = %281, %285, %278
  %293 = tail call fastcc ptr @S_dumpuntil(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %265, ptr noundef %279, ptr noundef %47, ptr noundef %5, i32 noundef %217, i32 noundef %55)
  br label %294

294:                                              ; preds = %292, %258
  %295 = phi ptr [ null, %292 ], [ %222, %258 ]
  %296 = phi ptr [ %279, %292 ], [ %221, %258 ]
  %297 = phi ptr [ %293, %292 ], [ %220, %258 ]
  %298 = icmp eq ptr %296, null
  br i1 %298, label %312, label %299

299:                                              ; preds = %294
  %300 = getelementptr inbounds %struct.regnode, ptr %296, i64 0, i32 1
  %301 = load i8, ptr %300, align 1, !tbaa !141
  %302 = zext i8 %301 to i64
  %303 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %302
  %304 = load i8, ptr %303, align 1, !tbaa !17
  %305 = icmp eq i8 %304, 30
  br i1 %305, label %306, label %312

306:                                              ; preds = %299
  %307 = tail call ptr @Perl_regnext(ptr noundef nonnull %296) #15
  br label %312

308:                                              ; preds = %253
  %309 = tail call ptr @Perl_PerlIO_stderr() #15
  %310 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %309, ptr noundef nonnull @.str.53) #15
  %311 = add nuw nsw i64 %219, 1
  br label %312

312:                                              ; preds = %294, %299, %306, %308
  %313 = phi i64 [ %259, %294 ], [ %259, %299 ], [ %259, %306 ], [ %311, %308 ]
  %314 = phi ptr [ %295, %294 ], [ %295, %299 ], [ %295, %306 ], [ %222, %308 ]
  %315 = phi ptr [ null, %294 ], [ %296, %299 ], [ %307, %306 ], [ %221, %308 ]
  %316 = phi ptr [ %297, %294 ], [ %297, %299 ], [ %297, %306 ], [ %220, %308 ]
  %317 = load i32, ptr %210, align 8, !tbaa !229
  %318 = sext i32 %317 to i64
  %319 = icmp slt i64 %313, %318
  br i1 %319, label %218, label %320, !llvm.loop !315

320:                                              ; preds = %312, %201
  %321 = phi ptr [ %135, %201 ], [ %314, %312 ]
  %322 = icmp ule ptr %72, %47
  %323 = select i1 %51, i1 true, i1 %322
  %324 = select i1 %323, ptr %72, ptr %47
  br label %411

325:                                              ; preds = %134
  %326 = icmp eq i8 %67, 44
  br i1 %326, label %327, label %345

327:                                              ; preds = %325
  %328 = icmp eq ptr %135, null
  br i1 %328, label %340, label %329

329:                                              ; preds = %327
  %330 = load volatile i64, ptr %9, align 8, !tbaa !9
  %331 = and i64 %330, 2
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %340, label %333

333:                                              ; preds = %329
  %334 = tail call ptr @Perl_PerlIO_stderr() #15
  %335 = ptrtoint ptr %57 to i64
  %336 = ptrtoint ptr %135 to i64
  %337 = sub i64 %335, %336
  %338 = ashr exact i64 %337, 2
  %339 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %334, ptr noundef nonnull @.str.667, i64 noundef %338) #15
  br label %340

340:                                              ; preds = %327, %333, %329
  %341 = getelementptr inbounds %struct.regnode, ptr %57, i64 2
  %342 = getelementptr inbounds %struct.regnode, ptr %57, i64 3
  %343 = add nsw i32 %71, 1
  %344 = tail call fastcc ptr @S_dumpuntil(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %341, ptr noundef nonnull %342, ptr noundef %47, ptr noundef %5, i32 noundef %343, i32 noundef %55)
  br label %416

345:                                              ; preds = %325
  %346 = icmp eq i8 %138, 44
  %347 = icmp ne i8 %67, 47
  %348 = and i1 %347, %346
  br i1 %348, label %349, label %369

349:                                              ; preds = %345
  %350 = icmp eq ptr %72, null
  br i1 %350, label %351, label %352

351:                                              ; preds = %349
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.672, i32 noundef 18216) #15
  br label %352

352:                                              ; preds = %349, %351
  %353 = icmp eq ptr %135, null
  br i1 %353, label %365, label %354

354:                                              ; preds = %352
  %355 = load volatile i64, ptr %9, align 8, !tbaa !9
  %356 = and i64 %355, 2
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %365, label %358

358:                                              ; preds = %354
  %359 = tail call ptr @Perl_PerlIO_stderr() #15
  %360 = ptrtoint ptr %57 to i64
  %361 = ptrtoint ptr %135 to i64
  %362 = sub i64 %360, %361
  %363 = ashr exact i64 %362, 2
  %364 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %359, ptr noundef nonnull @.str.667, i64 noundef %363) #15
  br label %365

365:                                              ; preds = %354, %358, %352
  %366 = getelementptr inbounds %struct.regnode, ptr %57, i64 2
  %367 = add nsw i32 %71, 1
  %368 = tail call fastcc ptr @S_dumpuntil(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %366, ptr noundef %72, ptr noundef %47, ptr noundef %5, i32 noundef %367, i32 noundef %55)
  br label %411

369:                                              ; preds = %345
  %370 = and i8 %67, -2
  %371 = icmp eq i8 %370, 42
  br i1 %371, label %372, label %390

372:                                              ; preds = %369
  %373 = icmp eq ptr %135, null
  br i1 %373, label %385, label %374

374:                                              ; preds = %372
  %375 = load volatile i64, ptr %9, align 8, !tbaa !9
  %376 = and i64 %375, 2
  %377 = icmp eq i64 %376, 0
  br i1 %377, label %385, label %378

378:                                              ; preds = %374
  %379 = tail call ptr @Perl_PerlIO_stderr() #15
  %380 = ptrtoint ptr %57 to i64
  %381 = ptrtoint ptr %135 to i64
  %382 = sub i64 %380, %381
  %383 = ashr exact i64 %382, 2
  %384 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %379, ptr noundef nonnull @.str.667, i64 noundef %383) #15
  br label %385

385:                                              ; preds = %374, %378, %372
  %386 = getelementptr inbounds %struct.regnode, ptr %57, i64 1
  %387 = getelementptr inbounds %struct.regnode, ptr %57, i64 2
  %388 = add nsw i32 %71, 1
  %389 = tail call fastcc ptr @S_dumpuntil(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %386, ptr noundef nonnull %387, ptr noundef %47, ptr noundef %5, i32 noundef %388, i32 noundef %55)
  br label %411

390:                                              ; preds = %369
  switch i8 %138, label %405 [
    i8 19, label %391
    i8 31, label %398
  ]

391:                                              ; preds = %390
  %392 = load i8, ptr %57, align 2, !tbaa !143
  %393 = and i8 %392, 8
  %394 = icmp eq i8 %393, 0
  %395 = select i1 %394, i64 10, i64 11
  %396 = getelementptr inbounds %struct.regnode, ptr %57, i64 %395
  %397 = getelementptr inbounds %struct.regnode, ptr %396, i64 1
  br label %411

398:                                              ; preds = %390
  %399 = load i8, ptr %57, align 2, !tbaa !205
  %400 = zext i8 %399 to i64
  %401 = add nuw nsw i64 %400, 3
  %402 = lshr i64 %401, 2
  %403 = getelementptr inbounds %struct.regnode, ptr %57, i64 %402
  %404 = getelementptr inbounds %struct.regnode, ptr %403, i64 1
  br label %411

405:                                              ; preds = %390
  %406 = getelementptr inbounds %struct.regnode, ptr %57, i64 1
  %407 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %136
  %408 = load i8, ptr %407, align 1, !tbaa !17
  %409 = zext i8 %408 to i64
  %410 = getelementptr inbounds %struct.regnode, ptr %406, i64 %409
  br label %411

411:                                              ; preds = %185, %385, %398, %405, %391, %365, %320, %165
  %412 = phi ptr [ null, %165 ], [ null, %185 ], [ %321, %320 ], [ null, %365 ], [ null, %385 ], [ %135, %391 ], [ %135, %398 ], [ %135, %405 ]
  %413 = phi ptr [ %168, %165 ], [ %188, %185 ], [ %324, %320 ], [ %368, %365 ], [ %389, %385 ], [ %397, %391 ], [ %404, %398 ], [ %410, %405 ]
  switch i8 %67, label %416 [
    i8 49, label %414
    i8 47, label %414
  ]

414:                                              ; preds = %411, %411
  %415 = add nsw i32 %71, 1
  br label %416

416:                                              ; preds = %340, %411, %414
  %417 = phi ptr [ %413, %414 ], [ %413, %411 ], [ %344, %340 ]
  %418 = phi ptr [ %412, %414 ], [ %412, %411 ], [ null, %340 ]
  %419 = phi i32 [ %415, %414 ], [ %71, %411 ], [ %71, %340 ]
  %420 = icmp eq i8 %138, 0
  br i1 %420, label %421, label %56, !llvm.loop !316

421:                                              ; preds = %56, %416
  %422 = phi ptr [ %59, %56 ], [ %418, %416 ]
  %423 = phi ptr [ %57, %56 ], [ %417, %416 ]
  %424 = icmp eq ptr %422, null
  br i1 %424, label %436, label %425

425:                                              ; preds = %421
  %426 = load volatile i64, ptr %9, align 8, !tbaa !9
  %427 = and i64 %426, 2
  %428 = icmp eq i64 %427, 0
  br i1 %428, label %436, label %429

429:                                              ; preds = %425
  %430 = tail call ptr @Perl_PerlIO_stderr() #15
  %431 = ptrtoint ptr %423 to i64
  %432 = ptrtoint ptr %422 to i64
  %433 = sub i64 %431, %432
  %434 = ashr exact i64 %433, 2
  %435 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %430, ptr noundef nonnull @.str.667, i64 noundef %434) #15
  br label %436

436:                                              ; preds = %43, %425, %429, %421
  %437 = phi ptr [ %423, %425 ], [ %423, %429 ], [ %423, %421 ], [ %2, %43 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9)
  ret ptr %437
}

declare i32 @PerlIO_putc(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_sv_catpv(ptr noundef, ptr noundef) local_unnamed_addr #2

declare void @Perl_sv_catpvn_flags(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_sv_catpvf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i1 @S_put_charclass_bitmap_innards(ptr noundef %0, ptr noundef readonly %1, ptr noundef %2) unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #15
  store ptr null, ptr %6, align 8, !tbaa !5
  %7 = icmp eq ptr %0, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.92, i32 noundef 17988) #15
  br label %9

9:                                                ; preds = %3, %8
  %10 = icmp eq ptr %1, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.666, i32 noundef 17988) #15
  br label %12

12:                                               ; preds = %9, %11
  %13 = icmp eq ptr %2, null
  %14 = select i1 %13, ptr %6, ptr %2
  %15 = tail call ptr @Perl__new_invlist(i64 noundef 128) #15
  store ptr %15, ptr %14, align 8, !tbaa !5
  br label %16

16:                                               ; preds = %12, %43
  %17 = phi ptr [ %15, %12 ], [ %44, %43 ]
  %18 = phi i64 [ 0, %12 ], [ %46, %43 ]
  %19 = phi i32 [ 0, %12 ], [ %45, %43 ]
  %20 = trunc i64 %18 to i32
  %21 = lshr i64 %18, 3
  %22 = and i64 %21, 536870911
  %23 = getelementptr inbounds i8, ptr %1, i64 %22
  %24 = load i8, ptr %23, align 1, !tbaa !17
  %25 = zext i8 %24 to i32
  %26 = and i32 %20, 7
  %27 = shl nuw nsw i32 1, %26
  %28 = and i32 %27, %25
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %43, label %30

30:                                               ; preds = %16
  %31 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %17, i64 noundef %18, i64 noundef %18) #15
  store ptr %31, ptr %14, align 8, !tbaa !5
  %32 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %18
  %33 = load i32, ptr %32, align 4, !tbaa !73
  %34 = and i32 %33, 16416
  %35 = icmp eq i32 %34, 16416
  br i1 %35, label %36, label %43

36:                                               ; preds = %30
  %37 = and i32 %20, 2147483646
  %38 = icmp eq i32 %37, 92
  br i1 %38, label %41, label %39

39:                                               ; preds = %36
  %40 = add i32 %19, 1
  switch i32 %20, label %43 [
    i32 94, label %41
    i32 45, label %41
  ]

41:                                               ; preds = %39, %39, %36
  %42 = add i32 %19, 2
  br label %43

43:                                               ; preds = %39, %16, %41, %30
  %44 = phi ptr [ %31, %41 ], [ %31, %39 ], [ %31, %30 ], [ %17, %16 ]
  %45 = phi i32 [ %42, %41 ], [ %40, %39 ], [ %19, %30 ], [ %19, %16 ]
  %46 = add nuw nsw i64 %18, 1
  %47 = icmp eq i64 %46, 256
  br i1 %47, label %48, label %16, !llvm.loop !317

48:                                               ; preds = %43
  %49 = icmp eq ptr %44, null
  br i1 %49, label %50, label %51

50:                                               ; preds = %48
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.229, i32 noundef 38) #15
  br label %51

51:                                               ; preds = %50, %48
  %52 = getelementptr inbounds %struct.sv, ptr %44, i64 0, i32 2
  %53 = load i32, ptr %52, align 4, !tbaa !13
  %54 = and i32 %53, 255
  %55 = icmp eq i32 %54, 4
  br i1 %55, label %57, label %56

56:                                               ; preds = %51
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 40) #15
  br label %57

57:                                               ; preds = %56, %51
  %58 = load ptr, ptr %44, align 8, !tbaa !16
  %59 = getelementptr inbounds %struct.xpv, ptr %58, i64 0, i32 2
  %60 = load i64, ptr %59, align 8, !tbaa !38
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = lshr i64 %60, 3
  %64 = load i32, ptr %52, align 4, !tbaa !13
  %65 = and i32 %64, 255
  %66 = icmp eq i32 %65, 4
  br i1 %66, label %69, label %67

67:                                               ; preds = %62
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 27) #15
  %68 = load ptr, ptr %44, align 8, !tbaa !16
  br label %69

69:                                               ; preds = %62, %67
  %70 = phi ptr [ %58, %62 ], [ %68, %67 ]
  %71 = getelementptr inbounds %struct.xpvinvlist, ptr %70, i64 0, i32 6
  %72 = load i8, ptr %71, align 1, !tbaa !11, !range !18, !noundef !19
  %73 = zext i8 %72 to i64
  %74 = icmp eq i64 %63, %73
  br i1 %74, label %75, label %85

75:                                               ; preds = %57, %69
  %76 = load ptr, ptr %6, align 8, !tbaa !5
  %77 = icmp eq ptr %76, null
  br i1 %77, label %187, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %struct.sv, ptr %76, i64 0, i32 1
  %80 = load i32, ptr %79, align 8, !tbaa !37
  %81 = icmp ugt i32 %80, 1
  br i1 %81, label %82, label %84

82:                                               ; preds = %78
  %83 = add i32 %80, -1
  store i32 %83, ptr %79, align 8, !tbaa !37
  br label %187

84:                                               ; preds = %78
  tail call void @Perl_sv_free2(ptr noundef nonnull %76, i32 noundef %80) #15
  br label %187

85:                                               ; preds = %69
  %86 = load ptr, ptr %14, align 8, !tbaa !5
  %87 = icmp eq ptr %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %struct.sv, ptr %86, i64 0, i32 2
  %90 = load i32, ptr %89, align 4, !tbaa !13
  %91 = and i32 %90, 255
  %92 = icmp eq i32 %91, 4
  br i1 %92, label %98, label %93

93:                                               ; preds = %88
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  br label %98

94:                                               ; preds = %85
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9125) #15
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9115) #15
  %95 = load i32, ptr inttoptr (i64 12 to ptr), align 4, !tbaa !13
  %96 = and i32 %95, 255
  %97 = icmp ne i32 %96, 4
  tail call void @llvm.assume(i1 %97)
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  unreachable

98:                                               ; preds = %88, %93
  %99 = load ptr, ptr %86, align 8, !tbaa !16
  %100 = getelementptr inbounds %struct.xpvinvlist, ptr %99, i64 0, i32 5
  store i64 0, ptr %100, align 8, !tbaa !9
  br label %101

101:                                              ; preds = %107, %98
  %102 = load ptr, ptr %14, align 8, !tbaa !5
  %103 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef %102, ptr noundef nonnull %4, ptr noundef nonnull %5)
  %104 = load i64, ptr %4, align 8
  %105 = icmp ult i64 %104, 127
  %106 = select i1 %103, i1 %105, i1 false
  br i1 %106, label %107, label %118

107:                                              ; preds = %101
  %108 = icmp ult i64 %104, 34
  %109 = load i64, ptr %5, align 8
  %110 = icmp ugt i64 %109, 124
  %111 = select i1 %108, i1 %110, i1 false
  br i1 %111, label %112, label %101, !llvm.loop !318

112:                                              ; preds = %107
  %113 = icmp ugt i64 %109, 126
  br i1 %113, label %114, label %115

114:                                              ; preds = %112
  store i64 126, ptr %5, align 8, !tbaa !9
  br label %115

115:                                              ; preds = %114, %112
  %116 = icmp ult i64 %104, 32
  br i1 %116, label %117, label %118

117:                                              ; preds = %115
  store i64 32, ptr %4, align 8, !tbaa !9
  br label %118

118:                                              ; preds = %101, %115, %117
  %119 = xor i1 %106, true
  %120 = load ptr, ptr %14, align 8, !tbaa !5
  %121 = icmp eq ptr %120, null
  br i1 %121, label %128, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %struct.sv, ptr %120, i64 0, i32 2
  %124 = load i32, ptr %123, align 4, !tbaa !13
  %125 = and i32 %124, 255
  %126 = icmp eq i32 %125, 4
  br i1 %126, label %132, label %127

127:                                              ; preds = %122
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  br label %132

128:                                              ; preds = %118
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9141) #15
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9115) #15
  %129 = load i32, ptr inttoptr (i64 12 to ptr), align 4, !tbaa !13
  %130 = and i32 %129, 255
  %131 = icmp ne i32 %130, 4
  call void @llvm.assume(i1 %131)
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  unreachable

132:                                              ; preds = %122, %127
  %133 = load ptr, ptr %120, align 8, !tbaa !16
  %134 = getelementptr inbounds %struct.xpvinvlist, ptr %133, i64 0, i32 5
  store i64 -1, ptr %134, align 8, !tbaa !9
  %135 = icmp ult i32 %45, 23
  %136 = select i1 %106, i1 true, i1 %135
  br i1 %136, label %141, label %137

137:                                              ; preds = %132
  call void @Perl_sv_catpvn_flags(ptr noundef %0, ptr noundef nonnull @.str.170, i64 noundef 1, i32 noundef 2) #15
  %138 = load ptr, ptr %14, align 8, !tbaa !5
  %139 = load ptr, ptr @PL_InBitmap, align 8, !tbaa !5
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %138, ptr noundef %139, i1 noundef zeroext true, ptr noundef nonnull %14) #15
  %140 = load ptr, ptr %14, align 8, !tbaa !5
  call void @Perl__invlist_invert(ptr noundef %140) #15
  br label %141

141:                                              ; preds = %137, %132
  %142 = load ptr, ptr %14, align 8, !tbaa !5
  %143 = icmp eq ptr %142, null
  br i1 %143, label %151, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %struct.sv, ptr %142, i64 0, i32 2
  %146 = load i32, ptr %145, align 4, !tbaa !13
  %147 = and i32 %146, 255
  %148 = icmp eq i32 %147, 4
  br i1 %148, label %155, label %149

149:                                              ; preds = %144
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  %150 = load ptr, ptr %14, align 8, !tbaa !5
  br label %155

151:                                              ; preds = %141
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9125) #15
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9115) #15
  %152 = load i32, ptr inttoptr (i64 12 to ptr), align 4, !tbaa !13
  %153 = and i32 %152, 255
  %154 = icmp ne i32 %153, 4
  call void @llvm.assume(i1 %154)
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  unreachable

155:                                              ; preds = %144, %149
  %156 = phi ptr [ %142, %144 ], [ %150, %149 ]
  %157 = load ptr, ptr %142, align 8, !tbaa !16
  %158 = getelementptr inbounds %struct.xpvinvlist, ptr %157, i64 0, i32 5
  store i64 0, ptr %158, align 8, !tbaa !9
  %159 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef %156, ptr noundef nonnull %4, ptr noundef nonnull %5)
  %160 = load i64, ptr %4, align 8
  %161 = icmp ult i64 %160, 256
  %162 = select i1 %159, i1 %161, i1 false
  br i1 %162, label %163, label %171

163:                                              ; preds = %155, %163
  %164 = phi i64 [ %168, %163 ], [ %160, %155 ]
  %165 = load i64, ptr %5, align 8, !tbaa !9
  call fastcc void @S_put_range(ptr noundef %0, i64 noundef %164, i64 noundef %165, i1 noundef zeroext %119)
  %166 = load ptr, ptr %14, align 8, !tbaa !5
  %167 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef %166, ptr noundef nonnull %4, ptr noundef nonnull %5)
  %168 = load i64, ptr %4, align 8
  %169 = icmp ult i64 %168, 256
  %170 = select i1 %167, i1 %169, i1 false
  br i1 %170, label %163, label %171, !llvm.loop !319

171:                                              ; preds = %163, %155
  %172 = load ptr, ptr %14, align 8, !tbaa !5
  %173 = icmp eq ptr %172, null
  br i1 %173, label %180, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds %struct.sv, ptr %172, i64 0, i32 2
  %176 = load i32, ptr %175, align 4, !tbaa !13
  %177 = and i32 %176, 255
  %178 = icmp eq i32 %177, 4
  br i1 %178, label %184, label %179

179:                                              ; preds = %174
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  br label %184

180:                                              ; preds = %171
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9141) #15
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9115) #15
  %181 = load i32, ptr inttoptr (i64 12 to ptr), align 4, !tbaa !13
  %182 = and i32 %181, 255
  %183 = icmp ne i32 %182, 4
  call void @llvm.assume(i1 %183)
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  unreachable

184:                                              ; preds = %174, %179
  %185 = load ptr, ptr %172, align 8, !tbaa !16
  %186 = getelementptr inbounds %struct.xpvinvlist, ptr %185, i64 0, i32 5
  store i64 -1, ptr %186, align 8, !tbaa !9
  br label %187

187:                                              ; preds = %84, %82, %75, %184
  %188 = phi i1 [ true, %184 ], [ false, %75 ], [ false, %82 ], [ false, %84 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #15
  ret i1 %188
}

declare ptr @Perl_av_fetch(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl__get_regclass_nonbitmap_data(ptr noundef, ptr noundef, i1 noundef zeroext, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

declare ptr @Perl_savesvpv(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_invlist_iterinit(ptr noundef readonly %0) unnamed_addr #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !13
  %6 = and i32 %5, 255
  %7 = icmp eq i32 %6, 4
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  br label %13

9:                                                ; preds = %1
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9125) #15
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9115) #15
  %10 = load i32, ptr inttoptr (i64 12 to ptr), align 4, !tbaa !13
  %11 = and i32 %10, 255
  %12 = icmp ne i32 %11, 4
  tail call void @llvm.assume(i1 %12)
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  unreachable

13:                                               ; preds = %8, %3
  %14 = load ptr, ptr %0, align 8, !tbaa !16
  %15 = getelementptr inbounds %struct.xpvinvlist, ptr %14, i64 0, i32 5
  store i64 0, ptr %15, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i1 @S_invlist_iternext(ptr noundef %0, ptr noundef writeonly %1, ptr noundef writeonly %2) unnamed_addr #0 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9115) #15
  br label %6

6:                                                ; preds = %5, %3
  %7 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !13
  %9 = and i32 %8, 255
  %10 = icmp eq i32 %9, 4
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = load ptr, ptr %0, align 8, !tbaa !16
  br label %20

13:                                               ; preds = %6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  %14 = load i32, ptr %7, align 4, !tbaa !13
  %15 = and i32 %14, 255
  %16 = load ptr, ptr %0, align 8, !tbaa !16
  %17 = icmp eq i32 %15, 4
  br i1 %17, label %20, label %18

18:                                               ; preds = %13
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 40) #15
  %19 = load ptr, ptr %0, align 8, !tbaa !16
  br label %20

20:                                               ; preds = %11, %18, %13
  %21 = phi ptr [ %16, %18 ], [ %16, %13 ], [ %12, %11 ]
  %22 = phi ptr [ %19, %18 ], [ %16, %13 ], [ %12, %11 ]
  %23 = getelementptr inbounds %struct.xpvinvlist, ptr %21, i64 0, i32 5
  %24 = getelementptr inbounds %struct.xpv, ptr %22, i64 0, i32 2
  %25 = load i64, ptr %24, align 8, !tbaa !38
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %40, label %27

27:                                               ; preds = %20
  %28 = lshr i64 %25, 3
  %29 = load i32, ptr %7, align 4, !tbaa !13
  %30 = and i32 %29, 255
  %31 = icmp eq i32 %30, 4
  br i1 %31, label %34, label %32

32:                                               ; preds = %27
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 27) #15
  %33 = load ptr, ptr %0, align 8, !tbaa !16
  br label %34

34:                                               ; preds = %32, %27
  %35 = phi ptr [ %22, %27 ], [ %33, %32 ]
  %36 = getelementptr inbounds %struct.xpvinvlist, ptr %35, i64 0, i32 6
  %37 = load i8, ptr %36, align 1, !tbaa !11, !range !18, !noundef !19
  %38 = zext i8 %37 to i64
  %39 = sub nsw i64 %28, %38
  br label %40

40:                                               ; preds = %34, %20
  %41 = phi i64 [ %39, %34 ], [ 0, %20 ]
  %42 = icmp eq ptr %1, null
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.658, i32 noundef 9160) #15
  br label %44

44:                                               ; preds = %40, %43
  %45 = icmp eq ptr %2, null
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.269, i32 noundef 9160) #15
  br label %47

47:                                               ; preds = %44, %46
  %48 = load i64, ptr %23, align 8, !tbaa !9
  %49 = icmp ult i64 %48, %41
  br i1 %49, label %51, label %50

50:                                               ; preds = %47
  store i64 -1, ptr %23, align 8, !tbaa !9
  br label %66

51:                                               ; preds = %47
  %52 = tail call fastcc ptr @S_invlist_array(ptr noundef nonnull %0)
  %53 = load i64, ptr %23, align 8, !tbaa !9
  %54 = add i64 %53, 1
  store i64 %54, ptr %23, align 8, !tbaa !9
  %55 = getelementptr inbounds i64, ptr %52, i64 %53
  %56 = load i64, ptr %55, align 8, !tbaa !9
  store i64 %56, ptr %1, align 8, !tbaa !9
  %57 = load i64, ptr %23, align 8, !tbaa !9
  %58 = icmp ult i64 %57, %41
  br i1 %58, label %59, label %64

59:                                               ; preds = %51
  %60 = add nuw i64 %57, 1
  store i64 %60, ptr %23, align 8, !tbaa !9
  %61 = getelementptr inbounds i64, ptr %52, i64 %57
  %62 = load i64, ptr %61, align 8, !tbaa !9
  %63 = add i64 %62, -1
  br label %64

64:                                               ; preds = %51, %59
  %65 = phi i64 [ %63, %59 ], [ -1, %51 ]
  store i64 %65, ptr %2, align 8, !tbaa !9
  br label %66

66:                                               ; preds = %64, %50
  ret i1 %49
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_put_range(ptr noundef %0, i64 noundef %1, i64 noundef %2, i1 noundef zeroext %3) unnamed_addr #0 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = icmp ugt i64 %1, %2
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.659, i32 noundef 17825) #15
  br label %9

9:                                                ; preds = %4, %8
  %10 = icmp eq ptr %0, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.92, i32 noundef 17827) #15
  br label %12

12:                                               ; preds = %9, %11
  br i1 %7, label %194, label %13

13:                                               ; preds = %12
  %14 = add i64 %2, 1
  br i1 %3, label %15, label %20

15:                                               ; preds = %13
  %16 = tail call i64 @llvm.umin.i64(i64 %2, i64 126)
  %17 = add nuw nsw i64 %16, 1
  %18 = tail call i64 @llvm.umin.i64(i64 %2, i64 255)
  %19 = tail call i64 @llvm.umin.i64(i64 %2, i64 255)
  br label %23

20:                                               ; preds = %13
  %21 = sub i64 %2, %1
  %22 = icmp ult i64 %21, 3
  br i1 %22, label %27, label %128

23:                                               ; preds = %15, %191
  %24 = phi i64 [ %192, %191 ], [ %1, %15 ]
  %25 = sub i64 %2, %24
  %26 = icmp ult i64 %25, 3
  br i1 %26, label %27, label %59

27:                                               ; preds = %23, %20
  %28 = phi i64 [ %1, %20 ], [ %24, %23 ]
  %29 = icmp ugt i64 %28, %2
  br i1 %29, label %194, label %30

30:                                               ; preds = %27, %56
  %31 = phi i64 [ %57, %56 ], [ %28, %27 ]
  br i1 %10, label %32, label %33

32:                                               ; preds = %30
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.92, i32 noundef 17792) #15
  br label %33

33:                                               ; preds = %32, %30
  %34 = icmp ugt i64 %31, 255
  br i1 %34, label %35, label %36

35:                                               ; preds = %33
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %0, ptr noundef nonnull @.str.663, i64 noundef %31) #15
  br label %56

36:                                               ; preds = %33
  %37 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %31
  %38 = load i32, ptr %37, align 4, !tbaa !73
  %39 = and i32 %38, 16448
  %40 = icmp eq i32 %39, 16448
  %41 = trunc i64 %31 to i8
  br i1 %40, label %42, label %45

42:                                               ; preds = %36
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6) #15
  store i8 %41, ptr %6, align 1, !tbaa !17
  switch i64 %31, label %44 [
    i64 94, label %43
    i64 93, label %43
    i64 92, label %43
    i64 45, label %43
  ]

43:                                               ; preds = %42, %42, %42, %42
  call void @Perl_sv_catpvn_flags(ptr noundef %0, ptr noundef nonnull @.str.664, i64 noundef 1, i32 noundef 2) #15
  br label %44

44:                                               ; preds = %43, %42
  call void @Perl_sv_catpvn_flags(ptr noundef %0, ptr noundef nonnull %6, i64 noundef 1, i32 noundef 2) #15
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6) #15
  br label %56

45:                                               ; preds = %36
  switch i8 %41, label %54 [
    i8 7, label %52
    i8 8, label %46
    i8 27, label %47
    i8 12, label %48
    i8 10, label %49
    i8 13, label %50
    i8 9, label %51
  ]

46:                                               ; preds = %45
  br label %52

47:                                               ; preds = %45
  br label %52

48:                                               ; preds = %45
  br label %52

49:                                               ; preds = %45
  br label %52

50:                                               ; preds = %45
  br label %52

51:                                               ; preds = %45
  br label %52

52:                                               ; preds = %51, %50, %49, %48, %47, %46, %45
  %53 = phi ptr [ @.str.572, %45 ], [ @.str.573, %46 ], [ @.str.574, %47 ], [ @.str.575, %48 ], [ @.str.576, %49 ], [ @.str.577, %50 ], [ @.str.578, %51 ]
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %0, ptr noundef nonnull @.str.34, ptr noundef nonnull %53) #15
  br label %56

54:                                               ; preds = %45
  %55 = trunc i64 %31 to i32
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %0, ptr noundef nonnull @.str.665, i32 noundef %55) #15
  br label %56

56:                                               ; preds = %35, %44, %52, %54
  %57 = add i64 %31, 1
  %58 = icmp ugt i64 %57, %2
  br i1 %58, label %194, label %30, !llvm.loop !320

59:                                               ; preds = %23
  %60 = icmp ult i64 %24, 127
  br i1 %60, label %61, label %128

61:                                               ; preds = %59
  %62 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %24
  %63 = load i32, ptr %62, align 4, !tbaa !73
  %64 = and i32 %63, 16448
  %65 = icmp eq i32 %64, 16448
  br i1 %65, label %84, label %66

66:                                               ; preds = %61
  %67 = add nuw nsw i64 %24, 1
  %68 = tail call i64 @llvm.umax.i64(i64 %67, i64 %17)
  %69 = add i64 %68, -1
  br label %70

70:                                               ; preds = %66, %73
  %71 = phi i64 [ %74, %73 ], [ %24, %66 ]
  %72 = icmp eq i64 %71, %69
  br i1 %72, label %79, label %73

73:                                               ; preds = %70
  %74 = add nuw nsw i64 %71, 1
  %75 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %74
  %76 = load i32, ptr %75, align 4, !tbaa !73
  %77 = and i32 %76, 16448
  %78 = icmp eq i32 %77, 16448
  br i1 %78, label %79, label %70, !llvm.loop !321

79:                                               ; preds = %70, %73
  %80 = phi i64 [ %68, %70 ], [ %74, %73 ]
  %81 = icmp ugt i64 %80, 126
  %82 = select i1 %81, i64 %14, i64 %80
  %83 = add i64 %82, -1
  tail call fastcc void @S_put_range(ptr noundef %0, i64 noundef %24, i64 noundef %83, i1 noundef zeroext false)
  br label %191

84:                                               ; preds = %61
  %85 = and i32 %63, 16512
  %86 = icmp eq i32 %85, 16512
  br i1 %86, label %87, label %108

87:                                               ; preds = %84
  %88 = and i32 %63, 2
  %89 = icmp eq i32 %88, 0
  %90 = and i32 %63, 16400
  %91 = icmp eq i32 %90, 16400
  %92 = select i1 %91, i32 16400, i32 16392
  %93 = select i1 %89, i32 %92, i32 16386
  br label %94

94:                                               ; preds = %98, %87
  %95 = phi i64 [ %24, %87 ], [ %96, %98 ]
  %96 = add nuw nsw i64 %95, 1
  %97 = icmp ult i64 %95, %19
  br i1 %97, label %98, label %103

98:                                               ; preds = %94
  %99 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %96
  %100 = load i32, ptr %99, align 4, !tbaa !73
  %101 = and i32 %100, %93
  %102 = icmp eq i32 %101, %93
  br i1 %102, label %94, label %103, !llvm.loop !322

103:                                              ; preds = %94, %98
  %104 = sub nuw nsw i64 %95, %24
  %105 = icmp ult i64 %104, 3
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  tail call fastcc void @S_put_range(ptr noundef %0, i64 noundef %24, i64 noundef %95, i1 noundef zeroext false)
  br label %191

107:                                              ; preds = %103
  tail call fastcc void @S_put_code_point(ptr noundef %0, i64 noundef %24)
  tail call void @Perl_sv_catpvn_flags(ptr noundef %0, ptr noundef nonnull @.str.660, i64 noundef 1, i32 noundef 2) #15
  tail call fastcc void @S_put_code_point(ptr noundef %0, i64 noundef %95)
  br label %191

108:                                              ; preds = %84
  %109 = and i32 %63, 16416
  %110 = icmp eq i32 %109, 16416
  %111 = and i32 %63, 17408
  %112 = icmp eq i32 %111, 17408
  %113 = or i1 %110, %112
  br i1 %113, label %114, label %131

114:                                              ; preds = %108
  %115 = icmp ugt i64 %24, %2
  br i1 %115, label %191, label %116, !llvm.loop !323

116:                                              ; preds = %114, %125
  %117 = phi i64 [ %126, %125 ], [ %24, %114 ]
  %118 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !73
  %120 = and i32 %119, 16416
  %121 = icmp eq i32 %120, 16416
  %122 = and i32 %119, 17408
  %123 = icmp eq i32 %122, 17408
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %191, !llvm.loop !323

125:                                              ; preds = %116
  tail call fastcc void @S_put_code_point(ptr noundef %0, i64 noundef %117)
  %126 = add nuw nsw i64 %117, 1
  %127 = icmp ult i64 %117, %18
  br i1 %127, label %116, label %191, !llvm.loop !324

128:                                              ; preds = %59, %20
  %129 = phi i64 [ %1, %20 ], [ %24, %59 ]
  %130 = icmp ult i64 %129, 256
  br i1 %130, label %131, label %164

131:                                              ; preds = %108, %128
  %132 = phi i64 [ %129, %128 ], [ %24, %108 ]
  br label %133

133:                                              ; preds = %131, %161
  %134 = phi i64 [ %162, %161 ], [ %132, %131 ]
  %135 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %134
  %136 = load i32, ptr %135, align 4, !tbaa !73
  %137 = and i32 %136, 8388608
  %138 = icmp eq i32 %137, 0
  %139 = icmp ugt i64 %134, %2
  %140 = or i1 %139, %138
  br i1 %140, label %164, label %141

141:                                              ; preds = %133
  br i1 %10, label %142, label %143

142:                                              ; preds = %141
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.92, i32 noundef 17792) #15
  br label %143

143:                                              ; preds = %141, %142
  %144 = and i32 %136, 16448
  %145 = icmp eq i32 %144, 16448
  %146 = trunc i64 %134 to i8
  br i1 %145, label %147, label %150

147:                                              ; preds = %143
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #15
  store i8 %146, ptr %5, align 1, !tbaa !17
  switch i64 %134, label %149 [
    i64 94, label %148
    i64 93, label %148
    i64 92, label %148
    i64 45, label %148
  ]

148:                                              ; preds = %147, %147, %147, %147
  call void @Perl_sv_catpvn_flags(ptr noundef %0, ptr noundef nonnull @.str.664, i64 noundef 1, i32 noundef 2) #15
  br label %149

149:                                              ; preds = %148, %147
  call void @Perl_sv_catpvn_flags(ptr noundef %0, ptr noundef nonnull %5, i64 noundef 1, i32 noundef 2) #15
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #15
  br label %161

150:                                              ; preds = %143
  switch i8 %146, label %159 [
    i8 7, label %157
    i8 8, label %151
    i8 27, label %152
    i8 12, label %153
    i8 10, label %154
    i8 13, label %155
    i8 9, label %156
  ]

151:                                              ; preds = %150
  br label %157

152:                                              ; preds = %150
  br label %157

153:                                              ; preds = %150
  br label %157

154:                                              ; preds = %150
  br label %157

155:                                              ; preds = %150
  br label %157

156:                                              ; preds = %150
  br label %157

157:                                              ; preds = %156, %155, %154, %153, %152, %151, %150
  %158 = phi ptr [ @.str.572, %150 ], [ @.str.573, %151 ], [ @.str.574, %152 ], [ @.str.575, %153 ], [ @.str.576, %154 ], [ @.str.577, %155 ], [ @.str.578, %156 ]
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %0, ptr noundef nonnull @.str.34, ptr noundef nonnull %158) #15
  br label %161

159:                                              ; preds = %150
  %160 = trunc i64 %134 to i32
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %0, ptr noundef nonnull @.str.665, i32 noundef %160) #15
  br label %161

161:                                              ; preds = %149, %157, %159
  %162 = add i64 %134, 1
  %163 = icmp eq i64 %162, 256
  br i1 %163, label %164, label %133, !llvm.loop !325

164:                                              ; preds = %161, %133, %128
  %165 = phi i64 [ %129, %128 ], [ %134, %133 ], [ 256, %161 ]
  %166 = icmp ult i64 %165, %2
  %167 = icmp ult i64 %2, 256
  %168 = and i1 %167, %166
  br i1 %168, label %169, label %189

169:                                              ; preds = %164
  %170 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2
  %171 = load i32, ptr %170, align 4, !tbaa !73
  %172 = and i32 %171, 8388608
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %189, label %174

174:                                              ; preds = %169, %178
  %175 = phi i64 [ %176, %178 ], [ %2, %169 ]
  %176 = add nsw i64 %175, -1
  %177 = icmp ult i64 %176, 256
  br i1 %177, label %178, label %183

178:                                              ; preds = %174
  %179 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %176
  %180 = load i32, ptr %179, align 4, !tbaa !73
  %181 = and i32 %180, 8388608
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %174, !llvm.loop !326

183:                                              ; preds = %174, %178
  call fastcc void @S_put_range(ptr noundef %0, i64 noundef %165, i64 noundef %176, i1 noundef zeroext false)
  %184 = icmp ugt i64 %175, %2
  br i1 %184, label %194, label %185

185:                                              ; preds = %183, %185
  %186 = phi i64 [ %187, %185 ], [ %175, %183 ]
  call fastcc void @S_put_code_point(ptr noundef %0, i64 noundef %186)
  %187 = add i64 %186, 1
  %188 = icmp ugt i64 %187, %2
  br i1 %188, label %194, label %185, !llvm.loop !327

189:                                              ; preds = %169, %164
  %190 = call i64 @llvm.umin.i64(i64 %2, i64 255)
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %0, ptr noundef nonnull @.str.661, i64 noundef %165, i64 noundef %190) #15
  br label %194

191:                                              ; preds = %125, %116, %114, %106, %107, %79
  %192 = phi i64 [ %82, %79 ], [ %96, %107 ], [ %96, %106 ], [ %24, %114 ], [ %126, %125 ], [ %117, %116 ]
  %193 = icmp ugt i64 %192, %2
  br i1 %193, label %194, label %23

194:                                              ; preds = %191, %185, %56, %12, %183, %27, %189
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_invlist_iterfinish(ptr noundef readonly %0) unnamed_addr #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !13
  %6 = and i32 %5, 255
  %7 = icmp eq i32 %6, 4
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  br label %13

9:                                                ; preds = %1
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9141) #15
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9115) #15
  %10 = load i32, ptr inttoptr (i64 12 to ptr), align 4, !tbaa !13
  %11 = and i32 %10, 255
  %12 = icmp ne i32 %11, 4
  tail call void @llvm.assume(i1 %12)
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  unreachable

13:                                               ; preds = %8, %3
  %14 = load ptr, ptr %0, align 8, !tbaa !16
  %15 = getelementptr inbounds %struct.xpvinvlist, ptr %14, i64 0, i32 5
  store i64 -1, ptr %15, align 8, !tbaa !9
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @my_re_intuit_string(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !62
  %5 = and i32 %4, 255
  %6 = icmp eq i32 %5, 8
  %7 = and i32 %4, 16826623
  %8 = icmp eq i32 %7, 16777226
  %9 = or i1 %6, %8
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %11

11:                                               ; preds = %1, %10
  %12 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  store volatile i64 0, ptr %2, align 8, !tbaa !9
  %14 = load volatile i64, ptr %2, align 8, !tbaa !9
  %15 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %16 = icmp eq ptr %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 2
  %19 = load i32, ptr %18, align 4, !tbaa !13
  %20 = and i32 %19, 256
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  tail call void @Perl_sv_setuv(ptr noundef nonnull %15, i64 noundef 65288) #15
  %23 = load i32, ptr %18, align 4, !tbaa !13
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i32 [ %23, %22 ], [ %19, %17 ]
  %26 = and i32 %25, 2097408
  %27 = icmp eq i32 %26, 256
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = load ptr, ptr %15, align 8, !tbaa !16
  %30 = getelementptr inbounds %struct.xpviv, ptr %29, i64 0, i32 4
  %31 = load i64, ptr %30, align 8, !tbaa !17
  br label %34

32:                                               ; preds = %24
  %33 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %15, i32 noundef 2) #15
  br label %34

34:                                               ; preds = %32, %28
  %35 = phi i64 [ %31, %28 ], [ %33, %32 ]
  store volatile i64 %35, ptr %2, align 8, !tbaa !9
  br label %36

36:                                               ; preds = %11, %34
  %37 = load volatile i64, ptr %2, align 8, !tbaa !9
  %38 = and i64 %37, 255
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %86, label %40

40:                                               ; preds = %36
  %41 = load i32, ptr %3, align 4, !tbaa !62
  %42 = and i32 %41, 536870912
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %struct.regexp, ptr %13, i64 0, i32 11
  %45 = load ptr, ptr %44, align 8, !tbaa !133
  br i1 %43, label %46, label %53

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.reg_substr_data, ptr %45, i64 0, i32 1, i64 2, i32 2
  %48 = load ptr, ptr %47, align 8, !tbaa !5
  %49 = getelementptr inbounds %struct.sv, ptr %48, i64 0, i32 2
  %50 = load i32, ptr %49, align 4, !tbaa !13
  %51 = and i32 %50, 2098176
  %52 = icmp eq i32 %51, 1024
  br i1 %52, label %60, label %64

53:                                               ; preds = %40
  %54 = getelementptr inbounds %struct.reg_substr_data, ptr %45, i64 0, i32 1, i64 2, i32 3
  %55 = load ptr, ptr %54, align 8, !tbaa !5
  %56 = getelementptr inbounds %struct.sv, ptr %55, i64 0, i32 2
  %57 = load i32, ptr %56, align 4, !tbaa !13
  %58 = and i32 %57, 2098176
  %59 = icmp eq i32 %58, 1024
  br i1 %59, label %60, label %64

60:                                               ; preds = %46, %53
  %61 = phi ptr [ %55, %53 ], [ %48, %46 ]
  %62 = getelementptr inbounds %struct.sv, ptr %61, i64 0, i32 3
  %63 = load ptr, ptr %62, align 8, !tbaa !17
  br label %67

64:                                               ; preds = %46, %53
  %65 = phi ptr [ %55, %53 ], [ %48, %46 ]
  %66 = tail call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %65, ptr noundef null, i32 noundef 34) #15
  br label %67

67:                                               ; preds = %64, %60
  %68 = phi ptr [ %63, %60 ], [ %66, %64 ]
  %69 = load i8, ptr @PL_colorset, align 1, !tbaa !11, !range !18, !noundef !19
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %67
  tail call void @Perl_reginitcolors() #15
  br label %72

72:                                               ; preds = %71, %67
  %73 = tail call ptr @Perl_PerlIO_stderr() #15
  %74 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 4), align 16, !tbaa !5
  %75 = load i32, ptr %3, align 4, !tbaa !62
  %76 = and i32 %75, 536870912
  %77 = icmp eq i32 %76, 0
  %78 = select i1 %77, ptr @.str.8, ptr @.str.186
  %79 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 5), align 8, !tbaa !5
  %80 = load ptr, ptr @PL_colors, align 16, !tbaa !5
  %81 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 1), align 8, !tbaa !5
  %82 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %68) #18
  %83 = icmp ugt i64 %82, 60
  %84 = select i1 %83, ptr @.str.20, ptr @.str.8
  %85 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %73, ptr noundef nonnull @.str.185, ptr noundef %74, ptr noundef nonnull %78, ptr noundef %79, ptr noundef %80, ptr noundef %68, ptr noundef %81, ptr noundef nonnull %84) #15
  br label %86

86:                                               ; preds = %72, %36
  %87 = load i32, ptr %3, align 4, !tbaa !62
  %88 = and i32 %87, 536870912
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %struct.regexp, ptr %13, i64 0, i32 11
  %91 = load ptr, ptr %90, align 8, !tbaa !133
  %92 = getelementptr inbounds %struct.reg_substr_data, ptr %91, i64 0, i32 1, i64 2, i32 3
  %93 = getelementptr inbounds %struct.reg_substr_data, ptr %91, i64 0, i32 1, i64 2, i32 2
  %94 = select i1 %89, ptr %93, ptr %92
  %95 = load ptr, ptr %94, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  ret ptr %95
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @my_regfree(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !62
  %5 = and i32 %4, 255
  %6 = icmp eq i32 %5, 8
  %7 = and i32 %4, 16826623
  %8 = icmp eq i32 %7, 16777226
  %9 = or i1 %6, %8
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  br label %11

11:                                               ; preds = %1, %10
  %12 = getelementptr inbounds %struct.p5rx, ptr %0, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.regexp, ptr %13, i64 0, i32 14
  %15 = load ptr, ptr %14, align 8, !tbaa !90
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  store volatile i64 0, ptr %2, align 8, !tbaa !9
  %16 = load volatile i64, ptr %2, align 8, !tbaa !9
  %17 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %18 = icmp eq ptr %17, null
  br i1 %18, label %38, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %struct.sv, ptr %17, i64 0, i32 2
  %21 = load i32, ptr %20, align 4, !tbaa !13
  %22 = and i32 %21, 256
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  tail call void @Perl_sv_setuv(ptr noundef nonnull %17, i64 noundef 65288) #15
  %25 = load i32, ptr %20, align 4, !tbaa !13
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i32 [ %25, %24 ], [ %21, %19 ]
  %28 = and i32 %27, 2097408
  %29 = icmp eq i32 %28, 256
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = load ptr, ptr %17, align 8, !tbaa !16
  %32 = getelementptr inbounds %struct.xpviv, ptr %31, i64 0, i32 4
  %33 = load i64, ptr %32, align 8, !tbaa !17
  br label %36

34:                                               ; preds = %26
  %35 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %17, i32 noundef 2) #15
  br label %36

36:                                               ; preds = %34, %30
  %37 = phi i64 [ %33, %30 ], [ %35, %34 ]
  store volatile i64 %37, ptr %2, align 8, !tbaa !9
  br label %38

38:                                               ; preds = %11, %36
  %39 = load volatile i64, ptr %2, align 8, !tbaa !9
  %40 = and i64 %39, 255
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = load i8, ptr @PL_colorset, align 1, !tbaa !11, !range !18, !noundef !19
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @Perl_reginitcolors() #15
  br label %46

46:                                               ; preds = %45, %42
  %47 = tail call ptr @Perl_sv_newmortal() #15
  %48 = load i32, ptr %3, align 4, !tbaa !62
  %49 = and i32 %48, 255
  %50 = icmp eq i32 %49, 8
  %51 = and i32 %48, 16826623
  %52 = icmp eq i32 %51, 16777226
  %53 = or i1 %50, %52
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  %55 = load i32, ptr %3, align 4, !tbaa !62
  %56 = and i32 %55, 255
  %57 = and i32 %55, 16826623
  br label %58

58:                                               ; preds = %46, %54
  %59 = phi i32 [ %51, %46 ], [ %57, %54 ]
  %60 = phi i32 [ %49, %46 ], [ %56, %54 ]
  %61 = phi i32 [ %48, %46 ], [ %55, %54 ]
  %62 = load ptr, ptr %12, align 8, !tbaa !17
  %63 = getelementptr inbounds %struct.regexp, ptr %62, i64 0, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !17
  %65 = icmp eq i32 %60, 8
  %66 = icmp eq i32 %59, 16777226
  %67 = or i1 %65, %66
  br i1 %67, label %73, label %68

68:                                               ; preds = %58
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  %69 = load ptr, ptr %12, align 8, !tbaa !17
  %70 = load i32, ptr %3, align 4, !tbaa !62
  %71 = and i32 %70, 255
  %72 = and i32 %70, 16826623
  br label %73

73:                                               ; preds = %58, %68
  %74 = phi i32 [ %59, %58 ], [ %72, %68 ]
  %75 = phi i32 [ %60, %58 ], [ %71, %68 ]
  %76 = phi i32 [ %61, %58 ], [ %70, %68 ]
  %77 = phi ptr [ %62, %58 ], [ %69, %68 ]
  %78 = getelementptr inbounds %struct.regexp, ptr %77, i64 0, i32 24
  %79 = load i16, ptr %78, align 8
  %80 = and i16 %79, 15
  %81 = zext i16 %80 to i64
  %82 = getelementptr inbounds i8, ptr %64, i64 %81
  %83 = load ptr, ptr %0, align 8, !tbaa !64
  %84 = getelementptr inbounds %struct.xpv, ptr %83, i64 0, i32 2
  %85 = load i64, ptr %84, align 8, !tbaa !38
  %86 = icmp eq i32 %75, 8
  %87 = icmp eq i32 %74, 16777226
  %88 = or i1 %86, %87
  br i1 %88, label %96, label %89

89:                                               ; preds = %73
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.196, i32 noundef 133) #15
  %90 = load ptr, ptr %12, align 8, !tbaa !17
  %91 = getelementptr inbounds %struct.regexp, ptr %90, i64 0, i32 24
  %92 = load i16, ptr %91, align 8
  %93 = load i32, ptr %3, align 4, !tbaa !62
  %94 = and i16 %92, 15
  %95 = zext i16 %94 to i64
  br label %96

96:                                               ; preds = %73, %89
  %97 = phi i64 [ %81, %73 ], [ %95, %89 ]
  %98 = phi i32 [ %76, %73 ], [ %93, %89 ]
  %99 = xor i64 %97, -1
  %100 = add i64 %85, %99
  %101 = load ptr, ptr @PL_colors, align 16, !tbaa !5
  %102 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 1), align 8, !tbaa !5
  %103 = lshr i32 %98, 21
  %104 = and i32 %103, 256
  %105 = or i32 %104, 33795
  %106 = tail call ptr @Perl_pv_pretty(ptr noundef %47, ptr noundef %82, i64 noundef %100, i64 noundef 60, ptr noundef %101, ptr noundef %102, i32 noundef %105) #15
  %107 = tail call ptr @Perl_PerlIO_stderr() #15
  %108 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 4), align 16, !tbaa !5
  %109 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 5), align 8, !tbaa !5
  %110 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %107, ptr noundef nonnull @.str.187, ptr noundef %108, ptr noundef %109, ptr noundef %106) #15
  br label %111

111:                                              ; preds = %96, %38
  %112 = getelementptr inbounds %struct.regexp_internal, ptr %15, i64 0, i32 1
  %113 = load ptr, ptr %112, align 8, !tbaa !17
  %114 = icmp eq ptr %113, null
  br i1 %114, label %116, label %115

115:                                              ; preds = %111
  tail call void @Perl_safesysfree(ptr noundef nonnull %113) #15
  br label %116

116:                                              ; preds = %115, %111
  %117 = getelementptr inbounds %struct.regexp_internal, ptr %15, i64 0, i32 4
  %118 = load ptr, ptr %117, align 8, !tbaa !93
  %119 = icmp eq ptr %118, null
  br i1 %119, label %148, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %struct.regexp_internal, ptr %15, i64 0, i32 5
  %122 = load i32, ptr %121, align 8, !tbaa !91
  %123 = icmp sgt i32 %122, 0
  br i1 %123, label %124, label %146

124:                                              ; preds = %120, %139
  %125 = phi i32 [ %140, %139 ], [ %122, %120 ]
  %126 = phi i64 [ %141, %139 ], [ 0, %120 ]
  %127 = load ptr, ptr %117, align 8, !tbaa !93
  %128 = getelementptr inbounds %struct.reg_code_block, ptr %127, i64 %126, i32 3
  %129 = load ptr, ptr %128, align 8, !tbaa !95
  %130 = icmp eq ptr %129, null
  br i1 %130, label %139, label %131

131:                                              ; preds = %124
  %132 = getelementptr inbounds %struct.sv, ptr %129, i64 0, i32 1
  %133 = load i32, ptr %132, align 8, !tbaa !37
  %134 = icmp ugt i32 %133, 1
  br i1 %134, label %135, label %137

135:                                              ; preds = %131
  %136 = add i32 %133, -1
  store i32 %136, ptr %132, align 8, !tbaa !37
  br label %139

137:                                              ; preds = %131
  tail call void @Perl_sv_free2(ptr noundef nonnull %129, i32 noundef %133) #15
  %138 = load i32, ptr %121, align 8, !tbaa !91
  br label %139

139:                                              ; preds = %124, %135, %137
  %140 = phi i32 [ %125, %124 ], [ %125, %135 ], [ %138, %137 ]
  %141 = add nuw nsw i64 %126, 1
  %142 = sext i32 %140 to i64
  %143 = icmp slt i64 %141, %142
  br i1 %143, label %124, label %144, !llvm.loop !328

144:                                              ; preds = %139
  %145 = load ptr, ptr %117, align 8, !tbaa !93
  br label %146

146:                                              ; preds = %144, %120
  %147 = phi ptr [ %145, %144 ], [ %118, %120 ]
  tail call void @Perl_safesysfree(ptr noundef %147) #15
  br label %148

148:                                              ; preds = %146, %116
  %149 = getelementptr inbounds %struct.regexp_internal, ptr %15, i64 0, i32 3
  %150 = load ptr, ptr %149, align 8, !tbaa !147
  %151 = icmp eq ptr %150, null
  br i1 %151, label %241, label %152

152:                                              ; preds = %148
  %153 = load i32, ptr %150, align 8, !tbaa !156
  %154 = icmp sgt i32 %153, 0
  br i1 %154, label %155, label %236

155:                                              ; preds = %152
  %156 = getelementptr inbounds %struct.regexp_internal, ptr %15, i64 0, i32 2
  %157 = zext i32 %153 to i64
  br label %158

158:                                              ; preds = %155, %232
  %159 = phi i64 [ %157, %155 ], [ %160, %232 ]
  %160 = add nsw i64 %159, -1
  %161 = load ptr, ptr %149, align 8, !tbaa !147
  %162 = getelementptr inbounds %struct.reg_data, ptr %161, i64 0, i32 1
  %163 = load ptr, ptr %162, align 8, !tbaa !158
  %164 = and i64 %160, 4294967295
  %165 = getelementptr inbounds i8, ptr %163, i64 %164
  %166 = load i8, ptr %165, align 1, !tbaa !17
  switch i8 %166, label %230 [
    i8 97, label %167
    i8 114, label %167
    i8 115, label %167
    i8 83, label %167
    i8 117, label %167
    i8 102, label %178
    i8 108, label %232
    i8 76, label %232
    i8 84, label %181
    i8 116, label %202
  ]

167:                                              ; preds = %158, %158, %158, %158, %158
  %168 = getelementptr inbounds %struct.reg_data, ptr %161, i64 0, i32 2, i64 %164
  %169 = load ptr, ptr %168, align 8, !tbaa !5
  %170 = icmp eq ptr %169, null
  br i1 %170, label %232, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %struct.sv, ptr %169, i64 0, i32 1
  %173 = load i32, ptr %172, align 8, !tbaa !37
  %174 = icmp ugt i32 %173, 1
  br i1 %174, label %175, label %177

175:                                              ; preds = %171
  %176 = add i32 %173, -1
  store i32 %176, ptr %172, align 8, !tbaa !37
  br label %232

177:                                              ; preds = %171
  tail call void @Perl_sv_free2(ptr noundef nonnull %169, i32 noundef %173) #15
  br label %232

178:                                              ; preds = %158
  %179 = getelementptr inbounds %struct.reg_data, ptr %161, i64 0, i32 2, i64 %164
  %180 = load ptr, ptr %179, align 8, !tbaa !5
  tail call void @Perl_safesysfree(ptr noundef %180) #15
  br label %232

181:                                              ; preds = %158
  %182 = getelementptr inbounds %struct.reg_data, ptr %161, i64 0, i32 2, i64 %164
  %183 = load ptr, ptr %182, align 8, !tbaa !5
  %184 = load i32, ptr %183, align 8, !tbaa !164
  %185 = add i32 %184, -1
  store i32 %185, ptr %183, align 8, !tbaa !164
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %232

187:                                              ; preds = %181
  %188 = getelementptr inbounds %struct._reg_ac_data, ptr %183, i64 0, i32 3
  %189 = load ptr, ptr %188, align 8, !tbaa !162
  tail call void @free(ptr noundef %189) #15
  %190 = getelementptr inbounds %struct._reg_ac_data, ptr %183, i64 0, i32 2
  %191 = load ptr, ptr %190, align 8, !tbaa !163
  tail call void @free(ptr noundef %191) #15
  %192 = load ptr, ptr %149, align 8, !tbaa !147
  %193 = getelementptr inbounds %struct.reg_data, ptr %192, i64 0, i32 2, i64 %164
  %194 = load ptr, ptr %193, align 8, !tbaa !5
  tail call void @free(ptr noundef %194) #15
  %195 = load ptr, ptr %156, align 8, !tbaa !140
  %196 = icmp eq ptr %195, null
  br i1 %196, label %197, label %200

197:                                              ; preds = %187
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.188, i32 noundef 17431) #15
  %198 = load ptr, ptr %156, align 8, !tbaa !140
  %199 = icmp eq ptr %198, null
  br i1 %199, label %232, label %200

200:                                              ; preds = %187, %197
  %201 = phi ptr [ %198, %197 ], [ %195, %187 ]
  tail call void @free(ptr noundef nonnull %201) #15
  store ptr null, ptr %156, align 8, !tbaa !140
  br label %232

202:                                              ; preds = %158
  %203 = getelementptr inbounds %struct.reg_data, ptr %161, i64 0, i32 2, i64 %164
  %204 = load ptr, ptr %203, align 8, !tbaa !5
  %205 = load i32, ptr %204, align 8, !tbaa !329
  %206 = add i32 %205, -1
  store i32 %206, ptr %204, align 8, !tbaa !329
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %232

208:                                              ; preds = %202
  %209 = getelementptr inbounds %struct._reg_trie_data, ptr %204, i64 0, i32 2
  %210 = load ptr, ptr %209, align 8, !tbaa !330
  tail call void @free(ptr noundef %210) #15
  %211 = getelementptr inbounds %struct._reg_trie_data, ptr %204, i64 0, i32 3
  %212 = load ptr, ptr %211, align 8, !tbaa !155
  tail call void @free(ptr noundef %212) #15
  %213 = getelementptr inbounds %struct._reg_trie_data, ptr %204, i64 0, i32 4
  %214 = load ptr, ptr %213, align 8, !tbaa !165
  tail call void @free(ptr noundef %214) #15
  %215 = getelementptr inbounds %struct._reg_trie_data, ptr %204, i64 0, i32 5
  %216 = load ptr, ptr %215, align 8, !tbaa !232
  %217 = icmp eq ptr %216, null
  br i1 %217, label %219, label %218

218:                                              ; preds = %208
  tail call void @free(ptr noundef nonnull %216) #15
  br label %219

219:                                              ; preds = %218, %208
  %220 = getelementptr inbounds %struct._reg_trie_data, ptr %204, i64 0, i32 6
  %221 = load ptr, ptr %220, align 8, !tbaa !290
  %222 = icmp eq ptr %221, null
  br i1 %222, label %224, label %223

223:                                              ; preds = %219
  tail call void @free(ptr noundef nonnull %221) #15
  br label %224

224:                                              ; preds = %223, %219
  %225 = getelementptr inbounds %struct._reg_trie_data, ptr %204, i64 0, i32 7
  %226 = load ptr, ptr %225, align 8, !tbaa !331
  tail call void @free(ptr noundef %226) #15
  %227 = load ptr, ptr %149, align 8, !tbaa !147
  %228 = getelementptr inbounds %struct.reg_data, ptr %227, i64 0, i32 2, i64 %164
  %229 = load ptr, ptr %228, align 8, !tbaa !5
  tail call void @free(ptr noundef %229) #15
  br label %232

230:                                              ; preds = %158
  %231 = zext i8 %166 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.189, i32 noundef %231) #15
  br label %232

232:                                              ; preds = %177, %175, %167, %202, %224, %181, %200, %197, %158, %158, %230, %178
  %233 = icmp ugt i64 %159, 1
  br i1 %233, label %158, label %234, !llvm.loop !332

234:                                              ; preds = %232
  %235 = load ptr, ptr %149, align 8, !tbaa !147
  br label %236

236:                                              ; preds = %234, %152
  %237 = phi ptr [ %235, %234 ], [ %150, %152 ]
  %238 = getelementptr inbounds %struct.reg_data, ptr %237, i64 0, i32 1
  %239 = load ptr, ptr %238, align 8, !tbaa !158
  tail call void @Perl_safesysfree(ptr noundef %239) #15
  %240 = load ptr, ptr %149, align 8, !tbaa !147
  tail call void @Perl_safesysfree(ptr noundef %240) #15
  br label %241

241:                                              ; preds = %236, %148
  tail call void @Perl_safesysfree(ptr noundef nonnull %15) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  ret void
}

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #6

declare i32 @Perl_mg_size(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_gv_fetchpvn_flags(ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

declare i32 @Perl_mg_get(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_amagic_call(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_sv_pvn_force_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_sv_catsv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_safesysrealloc(ptr noundef, i64 noundef) local_unnamed_addr #2

declare i32 @Perl_mg_set(ptr noundef) local_unnamed_addr #2

declare void @Perl_save_strlen(ptr noundef) local_unnamed_addr #2

declare void @Perl_save_re_context() local_unnamed_addr #2

declare ptr @Perl_new_stackinfo(i32 noundef, i32 noundef) local_unnamed_addr #2

declare i32 @Perl_eval_sv(ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_gv_add_by_type(ptr noundef, i32 noundef) local_unnamed_addr #2

declare zeroext i1 @Perl_sv_2bool_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_croak_popstack() local_unnamed_addr #2

declare void @Perl_free_tmps() local_unnamed_addr #2

declare void @Perl_sv_free2(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @calloc(i64 noundef, i64 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #8

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_ssc_anything(ptr noundef %0) unnamed_addr #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %1
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 994) #15
  br label %4

4:                                                ; preds = %1, %3
  %5 = getelementptr inbounds %struct.regnode_ssc, ptr %0, i64 0, i32 1
  %6 = load i8, ptr %5, align 1, !tbaa !181
  %7 = icmp eq i8 %6, 19
  br i1 %7, label %8, label %12

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.regnode_ssc, ptr %0, i64 0, i32 2
  %10 = load i16, ptr %9, align 2, !tbaa !182
  %11 = icmp eq i16 %10, 1
  br i1 %11, label %13, label %12

12:                                               ; preds = %8, %4
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 996) #15
  br label %13

13:                                               ; preds = %8, %12
  %14 = tail call ptr @Perl__new_invlist(i64 noundef 2) #15
  %15 = tail call ptr @Perl_sv_2mortal(ptr noundef %14) #15
  %16 = getelementptr inbounds %struct.regnode_ssc, ptr %0, i64 0, i32 6
  store ptr %15, ptr %16, align 8, !tbaa !284
  %17 = icmp eq ptr %15, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %13
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 8108) #15
  br label %19

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 2
  %21 = load i32, ptr %20, align 4, !tbaa !13
  %22 = and i32 %21, 255
  %23 = icmp eq i32 %22, 4
  br i1 %23, label %25, label %24

24:                                               ; preds = %19
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 8110) #15
  br label %25

25:                                               ; preds = %24, %19
  %26 = load ptr, ptr %15, align 8, !tbaa !16
  %27 = getelementptr inbounds %struct.xpv, ptr %26, i64 0, i32 3
  %28 = load i64, ptr %27, align 8, !tbaa !17
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.xpv, ptr %26, i64 0, i32 2
  %32 = load i64, ptr %31, align 8, !tbaa !38
  br label %33

33:                                               ; preds = %30, %25
  %34 = phi i64 [ %32, %30 ], [ %28, %25 ]
  %35 = lshr i64 %34, 3
  %36 = add nsw i64 %35, -1
  %37 = load i32, ptr %20, align 4, !tbaa !13
  %38 = and i32 %37, 255
  %39 = icmp eq i32 %38, 4
  br i1 %39, label %43, label %40

40:                                               ; preds = %33
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 40) #15
  %41 = load ptr, ptr %15, align 8, !tbaa !16
  %42 = load i32, ptr %20, align 4, !tbaa !13
  br label %43

43:                                               ; preds = %40, %33
  %44 = phi i32 [ %42, %40 ], [ %37, %33 ]
  %45 = phi ptr [ %41, %40 ], [ %26, %33 ]
  %46 = getelementptr inbounds %struct.xpv, ptr %45, i64 0, i32 2
  %47 = load i64, ptr %46, align 8, !tbaa !38
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %64, label %49

49:                                               ; preds = %43
  %50 = lshr i64 %47, 3
  %51 = and i32 %44, 255
  %52 = icmp eq i32 %51, 4
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 27) #15
  %54 = load ptr, ptr %15, align 8, !tbaa !16
  br label %55

55:                                               ; preds = %53, %49
  %56 = phi ptr [ %45, %49 ], [ %54, %53 ]
  %57 = getelementptr inbounds %struct.xpvinvlist, ptr %56, i64 0, i32 6
  %58 = load i8, ptr %57, align 1, !tbaa !11, !range !18, !noundef !19
  %59 = zext i8 %58 to i64
  %60 = sub nsw i64 %50, %59
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %104

62:                                               ; preds = %55
  %63 = load i32, ptr %20, align 4, !tbaa !13
  br label %64

64:                                               ; preds = %62, %43
  %65 = phi ptr [ %56, %62 ], [ %45, %43 ]
  %66 = phi i32 [ %63, %62 ], [ %44, %43 ]
  %67 = and i32 %66, 255
  %68 = icmp eq i32 %67, 4
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 3
  %71 = load ptr, ptr %70, align 8, !tbaa !17
  br label %81

72:                                               ; preds = %64
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 27) #15
  %73 = load i32, ptr %20, align 4, !tbaa !13
  %74 = and i32 %73, 255
  %75 = load ptr, ptr %15, align 8, !tbaa !16
  %76 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 3
  %77 = load ptr, ptr %76, align 8, !tbaa !17
  %78 = icmp eq i32 %74, 4
  br i1 %78, label %81, label %79

79:                                               ; preds = %72
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 40) #15
  %80 = load ptr, ptr %15, align 8, !tbaa !16
  br label %81

81:                                               ; preds = %79, %72, %69
  %82 = phi ptr [ %77, %79 ], [ %77, %72 ], [ %71, %69 ]
  %83 = phi ptr [ %75, %79 ], [ %75, %72 ], [ %65, %69 ]
  %84 = phi ptr [ %80, %79 ], [ %75, %72 ], [ %65, %69 ]
  %85 = getelementptr inbounds %struct.xpv, ptr %84, i64 0, i32 2
  %86 = load i64, ptr %85, align 8, !tbaa !38
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %102, label %88

88:                                               ; preds = %81
  %89 = lshr i64 %86, 3
  %90 = load i32, ptr %20, align 4, !tbaa !13
  %91 = and i32 %90, 255
  %92 = icmp eq i32 %91, 4
  br i1 %92, label %95, label %93

93:                                               ; preds = %88
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 27) #15
  %94 = load ptr, ptr %15, align 8, !tbaa !16
  br label %95

95:                                               ; preds = %93, %88
  %96 = phi ptr [ %84, %88 ], [ %94, %93 ]
  %97 = getelementptr inbounds %struct.xpvinvlist, ptr %96, i64 0, i32 6
  %98 = load i8, ptr %97, align 1, !tbaa !11, !range !18, !noundef !19
  %99 = zext i8 %98 to i64
  %100 = icmp eq i64 %89, %99
  br i1 %100, label %102, label %101

101:                                              ; preds = %95
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.233, i32 noundef 8018) #15
  br label %102

102:                                              ; preds = %101, %95, %81
  %103 = getelementptr inbounds %struct.xpvinvlist, ptr %83, i64 0, i32 6
  store i64 0, ptr %82, align 8, !tbaa !9
  store i8 0, ptr %103, align 1, !tbaa !11
  br label %126

104:                                              ; preds = %55
  %105 = add nsw i64 %60, -1
  %106 = tail call fastcc ptr @S_invlist_array(ptr noundef nonnull %15)
  %107 = getelementptr inbounds i64, ptr %106, i64 %105
  %108 = load i64, ptr %107, align 8, !tbaa !9
  %109 = icmp ne i64 %108, 0
  %110 = and i64 %105, 1
  %111 = icmp eq i64 %110, 0
  %112 = select i1 %109, i1 true, i1 %111
  br i1 %112, label %113, label %115

113:                                              ; preds = %104
  %114 = select i1 %111, i32 116, i32 102
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.230, i64 noundef %108, i64 noundef 0, i32 noundef %114) #15
  br label %115

115:                                              ; preds = %113, %104
  %116 = load i32, ptr %20, align 4, !tbaa !13
  %117 = and i32 %116, 255
  %118 = icmp eq i32 %117, 4
  br i1 %118, label %120, label %119

119:                                              ; preds = %115
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 27) #15
  br label %120

120:                                              ; preds = %119, %115
  %121 = load ptr, ptr %15, align 8, !tbaa !16
  %122 = getelementptr inbounds %struct.xpvinvlist, ptr %121, i64 0, i32 6
  %123 = load i8, ptr %122, align 1, !tbaa !11, !range !18, !noundef !19
  %124 = load i64, ptr %107, align 8, !tbaa !9
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %164, label %126

126:                                              ; preds = %120, %102
  %127 = phi i64 [ 0, %102 ], [ %60, %120 ]
  %128 = phi i8 [ 0, %102 ], [ %123, %120 ]
  %129 = phi ptr [ %82, %102 ], [ %106, %120 ]
  %130 = add nsw i64 %127, 2
  %131 = icmp ult i64 %36, %130
  br i1 %131, label %132, label %158

132:                                              ; preds = %126
  %133 = load i32, ptr %20, align 4, !tbaa !13
  %134 = and i32 %133, 255
  %135 = icmp eq i32 %134, 4
  br i1 %135, label %138, label %136

136:                                              ; preds = %132
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 8214) #15
  %137 = load i32, ptr %20, align 4, !tbaa !13
  br label %138

138:                                              ; preds = %136, %132
  %139 = phi i32 [ %133, %132 ], [ %137, %136 ]
  %140 = and i32 %139, 268435456
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %145, label %142

142:                                              ; preds = %138
  %143 = shl i64 %130, 3
  %144 = add i64 %143, 8
  br label %152

145:                                              ; preds = %138
  %146 = load ptr, ptr %15, align 8, !tbaa !16
  %147 = getelementptr inbounds %struct.xpv, ptr %146, i64 0, i32 3
  %148 = load i64, ptr %147, align 8, !tbaa !17
  %149 = shl i64 %130, 3
  %150 = add i64 %149, 8
  %151 = icmp ult i64 %148, %150
  br i1 %151, label %152, label %155

152:                                              ; preds = %145, %142
  %153 = phi i64 [ %144, %142 ], [ %150, %145 ]
  %154 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %15, i64 noundef %153) #15
  br label %155

155:                                              ; preds = %152, %145
  %156 = icmp ne i8 %128, 0
  tail call fastcc void @S_invlist_set_len(ptr noundef nonnull %15, i64 noundef %130, i1 noundef zeroext %156)
  %157 = tail call fastcc ptr @S_invlist_array(ptr noundef nonnull %15)
  br label %160

158:                                              ; preds = %126
  %159 = icmp ne i8 %128, 0
  tail call fastcc void @S_invlist_set_len(ptr noundef nonnull %15, i64 noundef %130, i1 noundef zeroext %159)
  br label %160

160:                                              ; preds = %158, %155
  %161 = phi ptr [ %157, %155 ], [ %129, %158 ]
  %162 = getelementptr inbounds i64, ptr %161, i64 %127
  store i64 0, ptr %162, align 8, !tbaa !9
  %163 = add nsw i64 %127, 1
  br label %164

164:                                              ; preds = %120, %160
  %165 = phi i8 [ %128, %160 ], [ %123, %120 ]
  %166 = phi i64 [ %163, %160 ], [ %105, %120 ]
  %167 = icmp ne i8 %165, 0
  tail call fastcc void @S_invlist_set_len(ptr noundef nonnull %15, i64 noundef %166, i1 noundef zeroext %167)
  %168 = load i8, ptr %0, align 8, !tbaa !198
  %169 = or i8 %168, 1
  store i8 %169, ptr %0, align 8, !tbaa !198
  ret void
}

declare ptr @Perl_sv_2mortal(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i64 @S__invlist_len(ptr noundef readonly %0) unnamed_addr #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %1
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.229, i32 noundef 38) #15
  br label %4

4:                                                ; preds = %1, %3
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !13
  %7 = and i32 %6, 255
  %8 = icmp eq i32 %7, 4
  br i1 %8, label %10, label %9

9:                                                ; preds = %4
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 40) #15
  br label %10

10:                                               ; preds = %4, %9
  %11 = load ptr, ptr %0, align 8, !tbaa !16
  %12 = getelementptr inbounds %struct.xpv, ptr %11, i64 0, i32 2
  %13 = load i64, ptr %12, align 8, !tbaa !38
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %10
  %16 = lshr i64 %13, 3
  %17 = load i32, ptr %5, align 4, !tbaa !13
  %18 = and i32 %17, 255
  %19 = icmp eq i32 %18, 4
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 27) #15
  %21 = load ptr, ptr %0, align 8, !tbaa !16
  br label %22

22:                                               ; preds = %15, %20
  %23 = phi ptr [ %11, %15 ], [ %21, %20 ]
  %24 = getelementptr inbounds %struct.xpvinvlist, ptr %23, i64 0, i32 6
  %25 = load i8, ptr %24, align 1, !tbaa !11, !range !18, !noundef !19
  %26 = zext i8 %25 to i64
  %27 = sub nsw i64 %16, %26
  br label %28

28:                                               ; preds = %10, %22
  %29 = phi i64 [ %27, %22 ], [ 0, %10 ]
  ret i64 %29
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_invlist_array(ptr noundef readonly %0) unnamed_addr #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %27, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !13
  %6 = and i32 %5, 255
  %7 = icmp eq i32 %6, 4
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 40) #15
  br label %9

9:                                                ; preds = %8, %3
  %10 = load ptr, ptr %0, align 8, !tbaa !16
  %11 = getelementptr inbounds %struct.xpv, ptr %10, i64 0, i32 2
  %12 = load i64, ptr %11, align 8, !tbaa !38
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %31, label %14

14:                                               ; preds = %9
  %15 = lshr i64 %12, 3
  %16 = load i32, ptr %4, align 4, !tbaa !13
  %17 = and i32 %16, 255
  %18 = icmp eq i32 %17, 4
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 27) #15
  %20 = load ptr, ptr %0, align 8, !tbaa !16
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi ptr [ %10, %14 ], [ %20, %19 ]
  %23 = getelementptr inbounds %struct.xpvinvlist, ptr %22, i64 0, i32 6
  %24 = load i8, ptr %23, align 1, !tbaa !11, !range !18, !noundef !19
  %25 = zext i8 %24 to i64
  %26 = icmp eq i64 %15, %25
  br i1 %26, label %31, label %32

27:                                               ; preds = %1
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.229, i32 noundef 66) #15
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.229, i32 noundef 38) #15
  %28 = load i32, ptr inttoptr (i64 12 to ptr), align 4, !tbaa !13
  %29 = and i32 %28, 255
  %30 = icmp ne i32 %29, 4
  tail call void @llvm.assume(i1 %30)
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 40) #15
  unreachable

31:                                               ; preds = %9, %21
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.234, i32 noundef 70) #15
  br label %32

32:                                               ; preds = %21, %31
  %33 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %34 = load ptr, ptr %33, align 8, !tbaa !17
  %35 = load i8, ptr %34, align 1, !tbaa !17
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.235, i32 noundef 76) #15
  %38 = load ptr, ptr %33, align 8, !tbaa !17
  br label %39

39:                                               ; preds = %37, %32
  %40 = phi ptr [ %38, %37 ], [ %34, %32 ]
  %41 = load i32, ptr %4, align 4, !tbaa !13
  %42 = and i32 %41, 255
  %43 = icmp eq i32 %42, 4
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 27) #15
  br label %45

45:                                               ; preds = %39, %44
  %46 = load ptr, ptr %0, align 8, !tbaa !16
  %47 = getelementptr inbounds %struct.xpvinvlist, ptr %46, i64 0, i32 6
  %48 = load i8, ptr %47, align 1, !tbaa !11, !range !18, !noundef !19
  %49 = zext i8 %48 to i64
  %50 = getelementptr inbounds i64, ptr %40, i64 %49
  ret ptr %50
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_invlist_set_len(ptr noundef readonly %0, i64 noundef %1, i1 noundef zeroext %2) unnamed_addr #0 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 8033) #15
  br label %6

6:                                                ; preds = %3, %5
  %7 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !13
  %9 = and i32 %8, 255
  %10 = icmp eq i32 %9, 4
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 8035) #15
  %12 = load i32, ptr %7, align 4, !tbaa !13
  %13 = and i32 %12, 255
  %14 = icmp eq i32 %13, 8
  br label %15

15:                                               ; preds = %11, %6
  %16 = phi i1 [ %14, %11 ], [ false, %6 ]
  %17 = phi i32 [ %12, %11 ], [ %8, %6 ]
  %18 = and i32 %17, 15
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [0 x i8], ptr @PL_valid_types_PVX, i64 0, i64 %19
  %21 = load i8, ptr %20, align 1, !tbaa !11, !range !18, !noundef !19
  %22 = icmp ne i8 %21, 0
  %23 = or i1 %22, %16
  br i1 %23, label %26, label %24

24:                                               ; preds = %15
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.236, i32 noundef 8040) #15
  %25 = load i32, ptr %7, align 4, !tbaa !13
  br label %26

26:                                               ; preds = %15, %24
  %27 = phi i32 [ %17, %15 ], [ %25, %24 ]
  %28 = and i32 %27, 49152
  %29 = icmp eq i32 %28, 32768
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = and i32 %27, 255
  %32 = add nsw i32 %31, -9
  %33 = icmp ult i32 %32, 2
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.237, i32 noundef 8040) #15
  %35 = load i32, ptr %7, align 4, !tbaa !13
  br label %36

36:                                               ; preds = %30, %26, %34
  %37 = phi i32 [ %27, %30 ], [ %27, %26 ], [ %35, %34 ]
  %38 = and i32 %37, 255
  %39 = icmp eq i32 %38, 15
  %40 = load ptr, ptr %0, align 8, !tbaa !16
  br i1 %39, label %41, label %48

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.xpvio, ptr %40, i64 0, i32 17
  %43 = load i8, ptr %42, align 1, !tbaa !120
  %44 = and i8 %43, 64
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.238, i32 noundef 8040) #15
  %47 = load ptr, ptr %0, align 8, !tbaa !16
  br label %48

48:                                               ; preds = %36, %41, %46
  %49 = phi ptr [ %40, %36 ], [ %40, %41 ], [ %47, %46 ]
  %50 = icmp eq i64 %1, 0
  %51 = zext i1 %2 to i64
  %52 = add nsw i64 %51, %1
  %53 = shl i64 %52, 3
  %54 = select i1 %50, i64 0, i64 %53
  %55 = getelementptr inbounds %struct.xpv, ptr %49, i64 0, i32 2
  store i64 %54, ptr %55, align 8, !tbaa !38
  %56 = getelementptr inbounds %struct.xpv, ptr %49, i64 0, i32 3
  %57 = load i64, ptr %56, align 8, !tbaa !17
  %58 = icmp ne i64 %57, 0
  %59 = icmp ugt i64 %54, %57
  %60 = select i1 %58, i1 %59, i1 false
  br i1 %60, label %61, label %62

61:                                               ; preds = %48
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.239, i32 noundef 8041) #15
  br label %62

62:                                               ; preds = %48, %61
  ret void
}

declare ptr @Perl_sv_grow(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_ssc_or(ptr noundef %0, ptr noundef %1, ptr noundef readonly %2) unnamed_addr #0 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 1404) #15
  br label %6

6:                                                ; preds = %3, %5
  %7 = icmp eq ptr %1, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1404) #15
  br label %9

9:                                                ; preds = %6, %8
  %10 = icmp eq ptr %2, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.302, i32 noundef 1404) #15
  br label %12

12:                                               ; preds = %9, %11
  %13 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 1
  %14 = load i8, ptr %13, align 1, !tbaa !181
  %15 = icmp eq i8 %14, 19
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 2
  %18 = load i16, ptr %17, align 2, !tbaa !182
  %19 = icmp eq i16 %18, 1
  br i1 %19, label %21, label %20

20:                                               ; preds = %16, %12
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1406) #15
  br label %21

21:                                               ; preds = %16, %20
  %22 = getelementptr inbounds %struct.regnode_charclass, ptr %2, i64 0, i32 1
  %23 = load i8, ptr %22, align 1, !tbaa !333
  %24 = icmp eq i8 %23, 19
  br i1 %24, label %25, label %33

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.regnode_charclass, ptr %2, i64 0, i32 2
  %27 = load i16, ptr %26, align 2, !tbaa !335
  %28 = icmp eq i16 %27, 1
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.regnode_ssc, ptr %2, i64 0, i32 6
  %31 = load ptr, ptr %30, align 8, !tbaa !284
  %32 = load i8, ptr %2, align 4, !tbaa !336
  br label %37

33:                                               ; preds = %25, %21
  %34 = tail call fastcc ptr @S_get_ANYOF_cp_list_for_ssc(ptr noundef %0, ptr noundef nonnull %2)
  %35 = load i8, ptr %2, align 4, !tbaa !336
  %36 = and i8 %35, 18
  br label %37

37:                                               ; preds = %33, %29
  %38 = phi i8 [ %32, %29 ], [ %35, %33 ]
  %39 = phi ptr [ %31, %29 ], [ %34, %33 ]
  %40 = phi i8 [ %32, %29 ], [ %36, %33 ]
  %41 = load i8, ptr %1, align 8, !tbaa !198
  %42 = or i8 %41, %40
  store i8 %42, ptr %1, align 8, !tbaa !198
  %43 = and i8 %38, 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %37
  %46 = load i8, ptr %22, align 1, !tbaa !333
  %47 = icmp eq i8 %46, 19
  br i1 %47, label %48, label %97

48:                                               ; preds = %45
  %49 = getelementptr inbounds %struct.regnode_charclass, ptr %2, i64 0, i32 2
  %50 = load i16, ptr %49, align 2, !tbaa !335
  %51 = icmp ne i16 %50, 1
  %52 = and i8 %38, 8
  %53 = icmp eq i8 %52, 0
  %54 = or i1 %53, %51
  br i1 %54, label %97, label %58

55:                                               ; preds = %37
  %56 = and i8 %38, 8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %97, label %58

58:                                               ; preds = %48, %55
  %59 = getelementptr inbounds %struct.regnode_charclass_class, ptr %2, i64 0, i32 5
  %60 = load i32, ptr %59, align 4, !tbaa !243
  %61 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 5
  %62 = load i32, ptr %61, align 8, !tbaa !293
  %63 = or i32 %62, %60
  store i32 %63, ptr %61, align 8, !tbaa !293
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %97, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 2
  %67 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 6
  br label %68

68:                                               ; preds = %65, %93
  %69 = phi i32 [ %63, %65 ], [ %94, %93 ]
  %70 = phi i32 [ 0, %65 ], [ %95, %93 ]
  %71 = shl nuw nsw i32 1, %70
  %72 = and i32 %69, %71
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %93, label %74

74:                                               ; preds = %68
  %75 = or i32 %70, 1
  %76 = shl nuw nsw i32 1, %75
  %77 = and i32 %69, %76
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %93, label %79

79:                                               ; preds = %74
  %80 = load i8, ptr %13, align 1, !tbaa !181
  %81 = icmp eq i8 %80, 19
  br i1 %81, label %82, label %85

82:                                               ; preds = %79
  %83 = load i16, ptr %66, align 2, !tbaa !182
  %84 = icmp eq i16 %83, 1
  br i1 %84, label %86, label %85

85:                                               ; preds = %82, %79
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1498) #15
  br label %86

86:                                               ; preds = %82, %85
  %87 = load ptr, ptr %67, align 8, !tbaa !284
  %88 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %87, i64 noundef 0, i64 noundef -1) #15
  store ptr %88, ptr %67, align 8, !tbaa !284
  %89 = load i32, ptr %61, align 4, !tbaa !243
  %90 = or i32 %76, %71
  %91 = xor i32 %90, -1
  %92 = and i32 %89, %91
  store i32 %92, ptr %61, align 4, !tbaa !243
  br label %93

93:                                               ; preds = %68, %74, %86
  %94 = phi i32 [ %69, %68 ], [ %69, %74 ], [ %92, %86 ]
  %95 = add nuw nsw i32 %70, 2
  %96 = icmp ult i32 %70, 28
  br i1 %96, label %68, label %97, !llvm.loop !337

97:                                               ; preds = %93, %48, %45, %58, %55
  %98 = icmp eq ptr %39, null
  br i1 %98, label %99, label %100

99:                                               ; preds = %97
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 1468) #15
  br label %100

100:                                              ; preds = %99, %97
  %101 = load i8, ptr %13, align 1, !tbaa !181
  %102 = icmp eq i8 %101, 19
  br i1 %102, label %103, label %107

103:                                              ; preds = %100
  %104 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 2
  %105 = load i16, ptr %104, align 2, !tbaa !182
  %106 = icmp eq i16 %105, 1
  br i1 %106, label %108, label %107

107:                                              ; preds = %103, %100
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1470) #15
  br label %108

108:                                              ; preds = %103, %107
  %109 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 6
  %110 = load ptr, ptr %109, align 8, !tbaa !284
  tail call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %110, ptr noundef %39, i1 noundef zeroext false, ptr noundef nonnull %109) #15
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_ssc_and(ptr noundef %0, ptr noundef %1, ptr noundef %2) unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = icmp eq ptr %0, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 1235) #15
  br label %8

8:                                                ; preds = %3, %7
  %9 = icmp eq ptr %1, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1235) #15
  br label %11

11:                                               ; preds = %8, %10
  %12 = icmp eq ptr %2, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.305, i32 noundef 1235) #15
  br label %14

14:                                               ; preds = %11, %13
  %15 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 1
  %16 = load i8, ptr %15, align 1, !tbaa !181
  %17 = icmp eq i8 %16, 19
  br i1 %17, label %18, label %22

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 2
  %20 = load i16, ptr %19, align 2, !tbaa !182
  %21 = icmp eq i16 %20, 1
  br i1 %21, label %23, label %22

22:                                               ; preds = %18, %14
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1237) #15
  br label %23

23:                                               ; preds = %18, %22
  %24 = getelementptr inbounds %struct.regnode_charclass, ptr %2, i64 0, i32 1
  %25 = load i8, ptr %24, align 1, !tbaa !17
  %26 = icmp eq i8 %25, 19
  br i1 %26, label %27, label %125

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.regnode_charclass, ptr %2, i64 0, i32 2
  %29 = load i16, ptr %28, align 2, !tbaa !139
  %30 = icmp eq i16 %29, 1
  br i1 %30, label %31, label %125

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.regnode_ssc, ptr %2, i64 0, i32 6
  %33 = load ptr, ptr %32, align 8, !tbaa !284
  %34 = load i8, ptr %2, align 4, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #15
  %35 = and i8 %34, 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %119, label %37

37:                                               ; preds = %31
  %38 = icmp eq ptr %33, null
  br i1 %38, label %46, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.sv, ptr %33, i64 0, i32 2
  %41 = load i32, ptr %40, align 4, !tbaa !13
  %42 = and i32 %41, 255
  %43 = icmp eq i32 %42, 4
  br i1 %43, label %50, label %44

44:                                               ; preds = %39
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  %45 = load ptr, ptr %32, align 8, !tbaa !284
  br label %50

46:                                               ; preds = %37
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9125) #15
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9115) #15
  %47 = load i32, ptr inttoptr (i64 12 to ptr), align 4, !tbaa !13
  %48 = and i32 %47, 255
  %49 = icmp ne i32 %48, 4
  tail call void @llvm.assume(i1 %49)
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  unreachable

50:                                               ; preds = %44, %39
  %51 = phi ptr [ %33, %39 ], [ %45, %44 ]
  %52 = load ptr, ptr %33, align 8, !tbaa !16
  %53 = getelementptr inbounds %struct.xpvinvlist, ptr %52, i64 0, i32 5
  store i64 0, ptr %53, align 8, !tbaa !9
  %54 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef %51, ptr noundef nonnull %4, ptr noundef nonnull %5)
  %55 = load i64, ptr %4, align 8
  %56 = icmp eq i64 %55, 0
  %57 = select i1 %54, i1 %56, i1 false
  br i1 %57, label %58, label %76

58:                                               ; preds = %50
  %59 = load i64, ptr %5, align 8, !tbaa !9
  %60 = icmp eq i64 %59, -1
  %61 = load ptr, ptr %32, align 8, !tbaa !284
  %62 = icmp eq ptr %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.sv, ptr %61, i64 0, i32 2
  %65 = load i32, ptr %64, align 4, !tbaa !13
  %66 = and i32 %65, 255
  %67 = icmp eq i32 %66, 4
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  br label %73

69:                                               ; preds = %58
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9141) #15
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9115) #15
  %70 = load i32, ptr inttoptr (i64 12 to ptr), align 4, !tbaa !13
  %71 = and i32 %70, 255
  %72 = icmp ne i32 %71, 4
  call void @llvm.assume(i1 %72)
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  unreachable

73:                                               ; preds = %68, %63
  %74 = load ptr, ptr %61, align 8, !tbaa !16
  %75 = getelementptr inbounds %struct.xpvinvlist, ptr %74, i64 0, i32 5
  store i64 -1, ptr %75, align 8, !tbaa !9
  br i1 %60, label %117, label %92

76:                                               ; preds = %50
  %77 = load ptr, ptr %32, align 8, !tbaa !284
  %78 = icmp eq ptr %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %struct.sv, ptr %77, i64 0, i32 2
  %81 = load i32, ptr %80, align 4, !tbaa !13
  %82 = and i32 %81, 255
  %83 = icmp eq i32 %82, 4
  br i1 %83, label %89, label %84

84:                                               ; preds = %79
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  br label %89

85:                                               ; preds = %76
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9141) #15
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9115) #15
  %86 = load i32, ptr inttoptr (i64 12 to ptr), align 4, !tbaa !13
  %87 = and i32 %86, 255
  %88 = icmp ne i32 %87, 4
  call void @llvm.assume(i1 %88)
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  unreachable

89:                                               ; preds = %84, %79
  %90 = load ptr, ptr %77, align 8, !tbaa !16
  %91 = getelementptr inbounds %struct.xpvinvlist, ptr %90, i64 0, i32 5
  store i64 -1, ptr %91, align 8, !tbaa !9
  br label %92

92:                                               ; preds = %89, %73
  %93 = getelementptr inbounds %struct.regnode_ssc, ptr %2, i64 0, i32 5
  %94 = load i32, ptr %93, align 8, !tbaa !73
  %95 = freeze i32 %94
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %119, label %97

97:                                               ; preds = %92
  %98 = insertelement <8 x i32> poison, i32 %95, i64 0
  %99 = shufflevector <8 x i32> %98, <8 x i32> poison, <8 x i32> zeroinitializer
  %100 = and <8 x i32> %99, <i32 12, i32 3, i32 48, i32 192, i32 768, i32 3072, i32 12288, i32 49152>
  %101 = icmp eq <8 x i32> %100, <i32 12, i32 3, i32 48, i32 192, i32 768, i32 3072, i32 12288, i32 49152>
  %102 = insertelement <4 x i32> poison, i32 %95, i64 0
  %103 = shufflevector <4 x i32> %102, <4 x i32> poison, <4 x i32> zeroinitializer
  %104 = and <4 x i32> %103, <i32 196608, i32 786432, i32 3145728, i32 12582912>
  %105 = icmp eq <4 x i32> %104, <i32 196608, i32 786432, i32 3145728, i32 12582912>
  %106 = and i32 %95, 50331648
  %107 = icmp eq i32 %106, 50331648
  %108 = and i32 %95, 201326592
  %109 = icmp eq i32 %108, 201326592
  %110 = bitcast <8 x i1> %101 to i8
  %111 = icmp ne i8 %110, 0
  %112 = bitcast <4 x i1> %105 to i4
  %113 = icmp ne i4 %112, 0
  %114 = or i1 %111, %113
  %115 = or i1 %114, %107
  %116 = or i1 %115, %109
  br i1 %116, label %117, label %120

117:                                              ; preds = %73, %97
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #15
  %118 = or i8 %34, 16
  br label %129

119:                                              ; preds = %31, %92
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #15
  br label %124

120:                                              ; preds = %97
  %121 = and i32 %95, 805306368
  %122 = icmp eq i32 %121, 805306368
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #15
  %123 = or i8 %34, 16
  br i1 %122, label %129, label %124

124:                                              ; preds = %119, %120
  br label %129

125:                                              ; preds = %27, %23
  %126 = tail call fastcc ptr @S_get_ANYOF_cp_list_for_ssc(ptr noundef %0, ptr noundef nonnull %2)
  %127 = load i8, ptr %2, align 4, !tbaa !336
  %128 = and i8 %127, 18
  br label %129

129:                                              ; preds = %124, %120, %117, %125
  %130 = phi i8 [ %128, %125 ], [ %34, %124 ], [ %123, %120 ], [ %118, %117 ]
  %131 = phi ptr [ %126, %125 ], [ %33, %124 ], [ %33, %120 ], [ %33, %117 ]
  %132 = load i8, ptr %1, align 8, !tbaa !198
  %133 = and i8 %132, %130
  store i8 %133, ptr %1, align 8, !tbaa !198
  %134 = load i8, ptr %2, align 4, !tbaa !336
  %135 = and i8 %134, 1
  %136 = icmp eq i8 %135, 0
  %137 = load i8, ptr %24, align 1, !tbaa !333
  %138 = icmp eq i8 %137, 19
  br i1 %136, label %201, label %139

139:                                              ; preds = %129
  br i1 %138, label %140, label %144

140:                                              ; preds = %139
  %141 = getelementptr inbounds %struct.regnode_charclass, ptr %2, i64 0, i32 2
  %142 = load i16, ptr %141, align 2, !tbaa !335
  %143 = icmp eq i16 %142, 1
  br i1 %143, label %202, label %144

144:                                              ; preds = %139, %140
  %145 = icmp eq ptr %131, null
  br i1 %145, label %146, label %147

146:                                              ; preds = %144
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 1483) #15
  br label %147

147:                                              ; preds = %146, %144
  %148 = load i8, ptr %15, align 1, !tbaa !181
  %149 = icmp eq i8 %148, 19
  br i1 %149, label %150, label %154

150:                                              ; preds = %147
  %151 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 2
  %152 = load i16, ptr %151, align 2, !tbaa !182
  %153 = icmp eq i16 %152, 1
  br i1 %153, label %155, label %154

154:                                              ; preds = %150, %147
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1485) #15
  br label %155

155:                                              ; preds = %150, %154
  %156 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 6
  %157 = load ptr, ptr %156, align 8, !tbaa !284
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %157, ptr noundef %131, i1 noundef zeroext false, ptr noundef nonnull %156) #15
  %158 = load i8, ptr %2, align 4, !tbaa !336
  %159 = and i8 %158, 8
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %161, label %163

161:                                              ; preds = %155
  %162 = getelementptr inbounds %struct.regnode_charclass_class, ptr %1, i64 0, i32 5
  store i32 0, ptr %162, align 4, !tbaa !243
  br label %270

163:                                              ; preds = %155
  %164 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 5
  %165 = load i32, ptr %164, align 8, !tbaa !293
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %270, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %struct.regnode_charclass_class, ptr %2, i64 0, i32 5
  %169 = load i32, ptr %168, align 4, !tbaa !243
  br label %170

170:                                              ; preds = %167, %187
  %171 = phi i32 [ %169, %167 ], [ %188, %187 ]
  %172 = phi i32 [ 1, %167 ], [ %195, %187 ]
  %173 = phi i32 [ 0, %167 ], [ %194, %187 ]
  %174 = phi i32 [ 0, %167 ], [ %196, %187 ]
  %175 = and i32 %174, 1
  %176 = icmp ne i32 %175, 0
  %177 = shl nuw nsw i32 1, %174
  %178 = and i32 %171, %177
  %179 = icmp eq i32 %178, 0
  %180 = select i1 %176, i1 true, i1 %179
  br i1 %180, label %187, label %181

181:                                              ; preds = %170
  %182 = shl nuw nsw i32 2, %174
  %183 = and i32 %171, %182
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %187, label %185

185:                                              ; preds = %181
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.306, i32 noundef 1349) #15
  %186 = load i32, ptr %168, align 4, !tbaa !243
  br label %187

187:                                              ; preds = %170, %181, %185
  %188 = phi i32 [ %171, %181 ], [ %186, %185 ], [ %171, %170 ]
  %189 = and i32 %188, %177
  %190 = icmp eq i32 %189, 0
  %191 = add nsw i32 %172, %174
  %192 = shl nuw nsw i32 1, %191
  %193 = select i1 %190, i32 0, i32 %192
  %194 = or i32 %193, %173
  %195 = sub nsw i32 0, %172
  %196 = add nuw nsw i32 %174, 1
  %197 = icmp eq i32 %196, 30
  br i1 %197, label %198, label %170, !llvm.loop !338

198:                                              ; preds = %187
  %199 = load i32, ptr %164, align 8, !tbaa !293
  %200 = and i32 %199, %194
  store i32 %200, ptr %164, align 8, !tbaa !293
  br label %270

201:                                              ; preds = %129
  br i1 %138, label %202, label %209

202:                                              ; preds = %140, %201
  %203 = getelementptr inbounds %struct.regnode_charclass, ptr %2, i64 0, i32 2
  %204 = load i16, ptr %203, align 2, !tbaa !335
  %205 = icmp eq i16 %204, 1
  br i1 %205, label %206, label %209

206:                                              ; preds = %202
  %207 = call fastcc i32 @S_ssc_is_cp_posixl_init(ptr noundef %0, ptr noundef nonnull %2), !range !339
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %270

209:                                              ; preds = %206, %202, %201
  %210 = call fastcc i32 @S_ssc_is_cp_posixl_init(ptr noundef %0, ptr noundef nonnull %1), !range !339
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %229, label %212

212:                                              ; preds = %209
  %213 = load i8, ptr %24, align 1, !tbaa !333
  %214 = icmp eq i8 %213, 19
  br i1 %214, label %215, label %220

215:                                              ; preds = %212
  %216 = getelementptr inbounds %struct.regnode_charclass, ptr %2, i64 0, i32 2
  %217 = load i16, ptr %216, align 2, !tbaa !335
  %218 = icmp eq i16 %217, 1
  br i1 %218, label %219, label %220

219:                                              ; preds = %215
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %1, ptr noundef nonnull align 8 dereferenceable(56) %2, i64 56, i1 false), !tbaa.struct !199
  br label %270

220:                                              ; preds = %215, %212
  %221 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 6
  store ptr %131, ptr %221, align 8, !tbaa !284
  %222 = getelementptr inbounds %struct.regnode_charclass_class, ptr %1, i64 0, i32 5
  store i32 0, ptr %222, align 4, !tbaa !243
  %223 = load i8, ptr %2, align 4, !tbaa !336
  %224 = and i8 %223, 8
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %270, label %226

226:                                              ; preds = %220
  %227 = getelementptr inbounds %struct.regnode_charclass_class, ptr %2, i64 0, i32 5
  %228 = load i32, ptr %227, align 4, !tbaa !243
  store i32 %228, ptr %222, align 8, !tbaa !293
  br label %270

229:                                              ; preds = %209
  %230 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 5
  %231 = load i32, ptr %230, align 8, !tbaa !293
  %232 = icmp eq i32 %231, 0
  %233 = load i8, ptr %2, align 4, !tbaa !336
  %234 = and i8 %233, 8
  %235 = icmp eq i8 %234, 0
  br i1 %232, label %236, label %237

236:                                              ; preds = %229
  br i1 %235, label %256, label %238

237:                                              ; preds = %229
  br i1 %235, label %242, label %238

238:                                              ; preds = %236, %237
  %239 = getelementptr inbounds %struct.regnode_charclass_class, ptr %2, i64 0, i32 5
  %240 = load i32, ptr %239, align 4, !tbaa !243
  %241 = and i32 %240, %231
  store i32 %241, ptr %230, align 8, !tbaa !293
  br label %242

242:                                              ; preds = %237, %238
  %243 = icmp eq ptr %131, null
  br i1 %243, label %244, label %245

244:                                              ; preds = %242
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 1468) #15
  br label %245

245:                                              ; preds = %244, %242
  %246 = load i8, ptr %15, align 1, !tbaa !181
  %247 = icmp eq i8 %246, 19
  br i1 %247, label %248, label %252

248:                                              ; preds = %245
  %249 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 2
  %250 = load i16, ptr %249, align 2, !tbaa !182
  %251 = icmp eq i16 %250, 1
  br i1 %251, label %253, label %252

252:                                              ; preds = %248, %245
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1470) #15
  br label %253

253:                                              ; preds = %248, %252
  %254 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 6
  %255 = load ptr, ptr %254, align 8, !tbaa !284
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %255, ptr noundef %131, i1 noundef zeroext false, ptr noundef nonnull %254) #15
  br label %270

256:                                              ; preds = %236
  %257 = icmp eq ptr %131, null
  br i1 %257, label %258, label %259

258:                                              ; preds = %256
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 1483) #15
  br label %259

259:                                              ; preds = %258, %256
  %260 = load i8, ptr %15, align 1, !tbaa !181
  %261 = icmp eq i8 %260, 19
  br i1 %261, label %262, label %266

262:                                              ; preds = %259
  %263 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 2
  %264 = load i16, ptr %263, align 2, !tbaa !182
  %265 = icmp eq i16 %264, 1
  br i1 %265, label %267, label %266

266:                                              ; preds = %262, %259
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1485) #15
  br label %267

267:                                              ; preds = %262, %266
  %268 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 6
  %269 = load ptr, ptr %268, align 8, !tbaa !284
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %269, ptr noundef %131, i1 noundef zeroext false, ptr noundef nonnull %268) #15
  br label %270

270:                                              ; preds = %161, %163, %198, %206, %253, %267, %219, %226, %220
  ret void
}

declare void @Perl_sv_setiv(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @S_make_trie(ptr noundef readonly %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7) unnamed_addr #0 {
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i64, align 8
  %19 = tail call ptr @Perl_newSV_type(i32 noundef 11) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #15
  store i64 0, ptr %12, align 8, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #15
  store i64 0, ptr %13, align 8, !tbaa !9
  %20 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %21 = load ptr, ptr %20, align 8, !tbaa !130
  %22 = getelementptr inbounds %struct.regexp_internal, ptr %21, i64 0, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !147
  %24 = icmp eq ptr %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %8
  %26 = load i32, ptr %23, align 8, !tbaa !156
  br label %27

27:                                               ; preds = %25, %8
  %28 = phi i32 [ %26, %25 ], [ 0, %8 ]
  %29 = add i32 %28, 4
  %30 = add i32 %28, 3
  %31 = zext i32 %30 to i64
  %32 = shl nuw nsw i64 %31, 3
  %33 = add nuw nsw i64 %32, 24
  %34 = tail call ptr @Perl_safesysrealloc(ptr noundef %23, i64 noundef %33) #15
  %35 = load ptr, ptr %20, align 8, !tbaa !130
  %36 = getelementptr inbounds %struct.regexp_internal, ptr %35, i64 0, i32 3
  store ptr %34, ptr %36, align 8, !tbaa !147
  %37 = icmp eq i32 %28, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %27
  %39 = getelementptr inbounds %struct.reg_data, ptr %34, i64 0, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !158
  %41 = zext i32 %29 to i64
  %42 = tail call ptr @Perl_safesysrealloc(ptr noundef %40, i64 noundef %41) #15
  br label %45

43:                                               ; preds = %27
  %44 = tail call ptr @Perl_safesysmalloc(i64 noundef 4) #15
  br label %45

45:                                               ; preds = %38, %43
  %46 = phi ptr [ %42, %38 ], [ %44, %43 ]
  %47 = load ptr, ptr %20, align 8, !tbaa !130
  %48 = getelementptr inbounds %struct.regexp_internal, ptr %47, i64 0, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !147
  %50 = getelementptr inbounds %struct.reg_data, ptr %49, i64 0, i32 1
  store ptr %46, ptr %50, align 8, !tbaa !158
  store i32 %29, ptr %49, align 8, !tbaa !156
  %51 = zext i32 %28 to i64
  %52 = getelementptr inbounds i8, ptr %46, i64 %51
  store i32 1970632052, ptr %52, align 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %14)
  store volatile i64 0, ptr %14, align 8, !tbaa !9
  %53 = load volatile i64, ptr %14, align 8, !tbaa !9
  %54 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %55 = icmp eq ptr %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %struct.sv, ptr %54, i64 0, i32 2
  %58 = load i32, ptr %57, align 4, !tbaa !13
  %59 = and i32 %58, 256
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  tail call void @Perl_sv_setuv(ptr noundef nonnull %54, i64 noundef 65288) #15
  %62 = load i32, ptr %57, align 4, !tbaa !13
  br label %63

63:                                               ; preds = %61, %56
  %64 = phi i32 [ %62, %61 ], [ %58, %56 ]
  %65 = and i32 %64, 2097408
  %66 = icmp eq i32 %65, 256
  br i1 %66, label %67, label %71

67:                                               ; preds = %63
  %68 = load ptr, ptr %54, align 8, !tbaa !16
  %69 = getelementptr inbounds %struct.xpviv, ptr %68, i64 0, i32 4
  %70 = load i64, ptr %69, align 8, !tbaa !17
  br label %73

71:                                               ; preds = %63
  %72 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %54, i32 noundef 2) #15
  br label %73

73:                                               ; preds = %71, %67
  %74 = phi i64 [ %70, %67 ], [ %72, %71 ]
  store volatile i64 %74, ptr %14, align 8, !tbaa !9
  br label %75

75:                                               ; preds = %45, %73
  %76 = icmp eq ptr %1, null
  br i1 %76, label %77, label %78

77:                                               ; preds = %75
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.308, i32 noundef 2153) #15
  br label %78

78:                                               ; preds = %75, %77
  %79 = icmp eq ptr %2, null
  br i1 %79, label %80, label %81

80:                                               ; preds = %78
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.309, i32 noundef 2153) #15
  br label %81

81:                                               ; preds = %78, %80
  %82 = icmp eq ptr %3, null
  br i1 %82, label %83, label %84

83:                                               ; preds = %81
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.243, i32 noundef 2153) #15
  br label %84

84:                                               ; preds = %81, %83
  %85 = icmp eq ptr %4, null
  br i1 %85, label %86, label %87

86:                                               ; preds = %84
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.310, i32 noundef 2153) #15
  br label %87

87:                                               ; preds = %84, %86
  switch i32 %6, label %90 [
    i32 31, label %94
    i32 32, label %94
    i32 36, label %88
    i32 37, label %88
    i32 35, label %88
    i32 38, label %88
    i32 33, label %89
  ]

88:                                               ; preds = %87, %87, %87, %87
  br label %94

89:                                               ; preds = %87
  br label %94

90:                                               ; preds = %87
  %91 = zext i32 %6 to i64
  %92 = getelementptr inbounds [0 x ptr], ptr @PL_reg_name, i64 0, i64 %91
  %93 = load ptr, ptr %92, align 8, !tbaa !5
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.311, i32 noundef %6, ptr noundef %93) #15
  br label %94

94:                                               ; preds = %87, %87, %90, %89, %88
  %95 = phi i1 [ true, %90 ], [ false, %89 ], [ false, %88 ], [ true, %87 ], [ true, %87 ]
  %96 = phi i1 [ false, %90 ], [ icmp eq (ptr @PL_fold, ptr @PL_fold_latin1), %89 ], [ true, %88 ], [ false, %87 ], [ false, %87 ]
  %97 = phi ptr [ null, %90 ], [ @PL_fold, %89 ], [ @PL_fold_latin1, %88 ], [ null, %87 ], [ null, %87 ]
  %98 = tail call noalias dereferenceable_or_null(104) ptr @calloc(i64 noundef 1, i64 noundef 104) #16
  store i32 1, ptr %98, align 8, !tbaa !329
  %99 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 9
  store i32 1, ptr %99, align 4, !tbaa !228
  %100 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 14
  store i32 %5, ptr %100, align 8, !tbaa !229
  %101 = load ptr, ptr %20, align 8, !tbaa !130
  %102 = getelementptr inbounds %struct.regexp_internal, ptr %101, i64 0, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !147
  %104 = getelementptr inbounds %struct.reg_data, ptr %103, i64 0, i32 2, i64 %51
  store ptr %98, ptr %104, align 8, !tbaa !5
  %105 = tail call noalias dereferenceable_or_null(512) ptr @calloc(i64 noundef 256, i64 noundef 2) #16
  %106 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 2
  store ptr %105, ptr %106, align 8, !tbaa !330
  %107 = add i32 %6, -31
  %108 = icmp ult i32 %107, 2
  br i1 %108, label %109, label %112

109:                                              ; preds = %94
  %110 = tail call noalias dereferenceable_or_null(32) ptr @calloc(i64 noundef 32, i64 noundef 1) #16
  %111 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 5
  store ptr %110, ptr %111, align 8, !tbaa !232
  br label %112

112:                                              ; preds = %94, %109
  %113 = add i32 %5, 1
  %114 = zext i32 %113 to i64
  %115 = tail call noalias ptr @calloc(i64 noundef %114, i64 noundef 12) #16
  %116 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 7
  store ptr %115, ptr %116, align 8, !tbaa !331
  %117 = tail call ptr @Perl_newSV_type(i32 noundef 11) #15
  %118 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.258, i32 noundef 1) #15
  %119 = icmp eq ptr %118, null
  br i1 %119, label %120, label %121

120:                                              ; preds = %112
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.312, i32 noundef 2184) #15
  br label %121

121:                                              ; preds = %112, %120
  %122 = getelementptr inbounds %struct.sv, ptr %118, i64 0, i32 2
  %123 = load i32, ptr %122, align 4, !tbaa !13
  %124 = and i32 %123, 256
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %121
  tail call void @Perl_sv_setiv(ptr noundef nonnull %118, i64 noundef 65536) #15
  br label %127

127:                                              ; preds = %121, %126
  %128 = load volatile i64, ptr %14, align 8, !tbaa !9
  %129 = and i64 %128, 4
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %176, label %131

131:                                              ; preds = %127
  %132 = tail call ptr @Perl_PerlIO_stderr() #15
  %133 = shl nsw i32 %7, 1
  %134 = add nsw i32 %133, 2
  br i1 %76, label %143, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %137 = load ptr, ptr %136, align 8, !tbaa !131
  %138 = ptrtoint ptr %1 to i64
  %139 = ptrtoint ptr %137 to i64
  %140 = sub i64 %138, %139
  %141 = lshr exact i64 %140, 2
  %142 = trunc i64 %141 to i32
  br label %143

143:                                              ; preds = %131, %135
  %144 = phi i32 [ %142, %135 ], [ -1, %131 ]
  br i1 %79, label %153, label %145

145:                                              ; preds = %143
  %146 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %147 = load ptr, ptr %146, align 8, !tbaa !131
  %148 = ptrtoint ptr %2 to i64
  %149 = ptrtoint ptr %147 to i64
  %150 = sub i64 %148, %149
  %151 = lshr exact i64 %150, 2
  %152 = trunc i64 %151 to i32
  br label %153

153:                                              ; preds = %143, %145
  %154 = phi i32 [ %152, %145 ], [ -1, %143 ]
  br i1 %82, label %163, label %155

155:                                              ; preds = %153
  %156 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %157 = load ptr, ptr %156, align 8, !tbaa !131
  %158 = ptrtoint ptr %3 to i64
  %159 = ptrtoint ptr %157 to i64
  %160 = sub i64 %158, %159
  %161 = lshr exact i64 %160, 2
  %162 = trunc i64 %161 to i32
  br label %163

163:                                              ; preds = %153, %155
  %164 = phi i32 [ %162, %155 ], [ -1, %153 ]
  br i1 %85, label %173, label %165

165:                                              ; preds = %163
  %166 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %167 = load ptr, ptr %166, align 8, !tbaa !131
  %168 = ptrtoint ptr %4 to i64
  %169 = ptrtoint ptr %167 to i64
  %170 = sub i64 %168, %169
  %171 = lshr exact i64 %170, 2
  %172 = trunc i64 %171 to i32
  br label %173

173:                                              ; preds = %163, %165
  %174 = phi i32 [ %172, %165 ], [ -1, %163 ]
  %175 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %132, ptr noundef nonnull @.str.313, i32 noundef %134, ptr noundef nonnull @.str.8, i32 noundef %144, i32 noundef %154, i32 noundef %164, i32 noundef %174, i32 noundef %7) #15
  br label %176

176:                                              ; preds = %173, %127
  %177 = icmp eq ptr %2, %1
  br i1 %177, label %178, label %182

178:                                              ; preds = %176
  %179 = getelementptr inbounds %struct.regnode, ptr %3, i64 0, i32 1
  %180 = load i8, ptr %179, align 1, !tbaa !141
  %181 = icmp eq i8 %180, 30
  br i1 %181, label %182, label %184

182:                                              ; preds = %178, %176
  %183 = getelementptr inbounds %struct.regnode, ptr %2, i64 1
  br label %184

184:                                              ; preds = %178, %182
  %185 = phi ptr [ %183, %182 ], [ %1, %178 ]
  %186 = icmp ult ptr %2, %3
  br i1 %186, label %187, label %1601

187:                                              ; preds = %184
  %188 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 5
  %189 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 10
  %190 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 15
  %191 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %192 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 8
  %193 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 11
  br label %194

194:                                              ; preds = %187, %1597
  %195 = phi ptr [ null, %187 ], [ %1598, %1597 ]
  %196 = phi ptr [ %2, %187 ], [ %1599, %1597 ]
  %197 = getelementptr inbounds %struct.regnode, ptr %196, i64 1
  %198 = getelementptr inbounds %struct.regnode, ptr %196, i64 2
  %199 = load i8, ptr %197, align 2, !tbaa !205
  %200 = zext i8 %199 to i64
  %201 = getelementptr inbounds i8, ptr %198, i64 %200
  %202 = load ptr, ptr %188, align 8, !tbaa !232
  %203 = icmp ne ptr %202, null
  %204 = zext i1 %203 to i8
  %205 = getelementptr inbounds %struct.regnode, ptr %196, i64 1, i32 1
  %206 = load i8, ptr %205, align 1, !tbaa !141
  %207 = icmp eq i8 %206, 40
  br i1 %207, label %208, label %222

208:                                              ; preds = %194
  %209 = call ptr @Perl_regnext(ptr noundef nonnull %197) #15
  %210 = icmp eq ptr %209, %4
  br i1 %210, label %221, label %211

211:                                              ; preds = %208
  %212 = getelementptr inbounds %struct.regnode, ptr %209, i64 0, i32 1
  %213 = load i8, ptr %212, align 1, !tbaa !141
  %214 = zext i8 %213 to i32
  %215 = icmp eq i32 %214, %6
  br i1 %215, label %216, label %221

216:                                              ; preds = %211
  %217 = getelementptr inbounds %struct.regnode_string, ptr %209, i64 0, i32 3
  %218 = load i8, ptr %209, align 2, !tbaa !205
  %219 = zext i8 %218 to i64
  %220 = getelementptr inbounds i8, ptr %217, i64 %219
  store i64 %219, ptr %189, align 8, !tbaa !150
  br label %222

221:                                              ; preds = %208, %211
  store i64 0, ptr %189, align 8, !tbaa !150
  br label %1597

222:                                              ; preds = %216, %194
  %223 = phi ptr [ %201, %194 ], [ %220, %216 ]
  %224 = phi ptr [ %198, %194 ], [ %217, %216 ]
  %225 = phi ptr [ %197, %194 ], [ %209, %216 ]
  br i1 %203, label %226, label %244

226:                                              ; preds = %222
  %227 = load i8, ptr %224, align 1, !tbaa !17
  %228 = and i8 %227, 7
  %229 = shl nuw i8 1, %228
  %230 = load ptr, ptr %188, align 8, !tbaa !232
  %231 = lshr i8 %227, 3
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds i8, ptr %230, i64 %232
  %234 = load i8, ptr %233, align 1, !tbaa !17
  %235 = or i8 %229, %234
  store i8 %235, ptr %233, align 1, !tbaa !17
  %236 = getelementptr inbounds %struct.regnode, ptr %225, i64 0, i32 1
  %237 = load i8, ptr %236, align 1, !tbaa !141
  %238 = icmp eq i8 %237, 37
  br i1 %238, label %239, label %244

239:                                              ; preds = %226
  %240 = load ptr, ptr %188, align 8, !tbaa !232
  %241 = getelementptr inbounds i8, ptr %240, i64 27
  %242 = load i8, ptr %241, align 1, !tbaa !17
  %243 = or i8 %242, -128
  store i8 %243, ptr %241, align 1, !tbaa !17
  br label %244

244:                                              ; preds = %226, %239, %222
  %245 = icmp ult ptr %224, %223
  br i1 %245, label %246, label %1583

246:                                              ; preds = %244
  %247 = ptrtoint ptr %223 to i64
  br label %248

248:                                              ; preds = %246, %1575
  %249 = phi ptr [ %195, %246 ], [ %1579, %1575 ]
  %250 = phi ptr [ %224, %246 ], [ %1581, %1575 ]
  %251 = phi i32 [ 0, %246 ], [ %1576, %1575 ]
  %252 = phi i64 [ 0, %246 ], [ %1577, %1575 ]
  %253 = phi i64 [ 0, %246 ], [ %279, %1575 ]
  %254 = phi i8 [ %204, %246 ], [ %1578, %1575 ]
  %255 = load i64, ptr %190, align 8, !tbaa !231
  %256 = add i64 %255, 1
  store i64 %256, ptr %190, align 8, !tbaa !231
  %257 = load i32, ptr %191, align 8, !tbaa !50
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %261, label %259

259:                                              ; preds = %248
  %260 = call i64 @Perl_valid_utf8_to_uvchr(ptr noundef %250, ptr noundef nonnull %12) #15
  store i64 %260, ptr %13, align 8, !tbaa !9
  br label %277

261:                                              ; preds = %248
  %262 = load i8, ptr %250, align 1, !tbaa !17
  br i1 %96, label %263, label %275

263:                                              ; preds = %261
  %264 = icmp eq i8 %262, -33
  br i1 %264, label %265, label %267

265:                                              ; preds = %263
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.314, i32 noundef 2263) #15
  %266 = load i8, ptr %250, align 1, !tbaa !17
  br label %267

267:                                              ; preds = %263, %265
  %268 = phi i8 [ %262, %263 ], [ %266, %265 ]
  %269 = zext i8 %268 to i64
  %270 = getelementptr inbounds [0 x i8], ptr @PL_latin1_lc, i64 0, i64 %269
  %271 = load i8, ptr %270, align 1, !tbaa !17
  %272 = zext i8 %271 to i64
  %273 = icmp eq i8 %271, -75
  %274 = select i1 %273, i64 956, i64 %272
  store i64 %274, ptr %13, align 8
  store i64 1, ptr %12, align 8, !tbaa !9
  br label %277

275:                                              ; preds = %261
  %276 = zext i8 %262 to i64
  store i64 %276, ptr %13, align 8, !tbaa !9
  store i64 1, ptr %12, align 8, !tbaa !9
  br label %277

277:                                              ; preds = %267, %275, %259
  %278 = phi i64 [ %274, %267 ], [ %276, %275 ], [ %260, %259 ]
  %279 = add i64 %253, 1
  br i1 %95, label %1200, label %280

280:                                              ; preds = %277
  %281 = icmp sgt i32 %251, 0
  br i1 %281, label %282, label %294

282:                                              ; preds = %280
  %283 = load i32, ptr %191, align 8, !tbaa !50
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %291, label %285

285:                                              ; preds = %282
  %286 = load i8, ptr %250, align 1, !tbaa !17
  %287 = zext i8 %286 to i64
  %288 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %287
  %289 = load i8, ptr %288, align 1, !tbaa !17
  %290 = zext i8 %289 to i32
  br label %291

291:                                              ; preds = %282, %285
  %292 = phi i32 [ %290, %285 ], [ 1, %282 ]
  %293 = sub nsw i32 %251, %292
  br label %1195

294:                                              ; preds = %280
  %295 = add i64 %252, 1
  %296 = load i32, ptr %191, align 8, !tbaa !50
  %297 = icmp eq i32 %296, 0
  %298 = ptrtoint ptr %250 to i64
  %299 = sub i64 %247, %298
  br i1 %297, label %1152, label %300

300:                                              ; preds = %294
  %301 = icmp sgt i64 %299, 5
  br i1 %301, label %302, label %604

302:                                              ; preds = %300
  %303 = load i8, ptr %250, align 1, !tbaa !17
  switch i8 %303, label %1195 [
    i8 97, label %304
    i8 102, label %313
    i8 104, label %323
    i8 105, label %332
    i8 106, label %341
    i8 115, label %350
    i8 116, label %355
    i8 119, label %364
    i8 121, label %364
    i8 -59, label %373
    i8 -54, label %386
    i8 -50, label %395
    i8 -49, label %457
    i8 -43, label %539
    i8 -31, label %567
  ]

304:                                              ; preds = %302
  %305 = getelementptr inbounds i8, ptr %250, i64 1
  %306 = load i8, ptr %305, align 1, !tbaa !17
  %307 = icmp eq i8 %306, -54
  br i1 %307, label %308, label %1195

308:                                              ; preds = %304
  %309 = getelementptr inbounds i8, ptr %250, i64 2
  %310 = load i8, ptr %309, align 1, !tbaa !17
  %311 = freeze i8 %310
  %312 = icmp eq i8 %311, -66
  br i1 %312, label %1144, label %1195

313:                                              ; preds = %302
  %314 = getelementptr inbounds i8, ptr %250, i64 1
  %315 = load i8, ptr %314, align 1, !tbaa !17
  switch i8 %315, label %1195 [
    i8 102, label %316
    i8 105, label %1144
    i8 108, label %1144
  ]

316:                                              ; preds = %313
  %317 = getelementptr inbounds i8, ptr %250, i64 2
  %318 = load i8, ptr %317, align 1, !tbaa !17
  %319 = icmp eq i8 %318, 105
  %320 = icmp eq i8 %318, 108
  %321 = or i1 %319, %320
  %322 = select i1 %321, i32 3, i32 2
  br label %1144

323:                                              ; preds = %302
  %324 = getelementptr inbounds i8, ptr %250, i64 1
  %325 = load i8, ptr %324, align 1, !tbaa !17
  %326 = icmp eq i8 %325, -52
  br i1 %326, label %327, label %1195

327:                                              ; preds = %323
  %328 = getelementptr inbounds i8, ptr %250, i64 2
  %329 = load i8, ptr %328, align 1, !tbaa !17
  %330 = freeze i8 %329
  %331 = icmp eq i8 %330, -79
  br i1 %331, label %1144, label %1195

332:                                              ; preds = %302
  %333 = getelementptr inbounds i8, ptr %250, i64 1
  %334 = load i8, ptr %333, align 1, !tbaa !17
  %335 = icmp eq i8 %334, -52
  br i1 %335, label %336, label %1195

336:                                              ; preds = %332
  %337 = getelementptr inbounds i8, ptr %250, i64 2
  %338 = load i8, ptr %337, align 1, !tbaa !17
  %339 = freeze i8 %338
  %340 = icmp eq i8 %339, -121
  br i1 %340, label %1144, label %1195

341:                                              ; preds = %302
  %342 = getelementptr inbounds i8, ptr %250, i64 1
  %343 = load i8, ptr %342, align 1, !tbaa !17
  %344 = icmp eq i8 %343, -52
  br i1 %344, label %345, label %1195

345:                                              ; preds = %341
  %346 = getelementptr inbounds i8, ptr %250, i64 2
  %347 = load i8, ptr %346, align 1, !tbaa !17
  %348 = freeze i8 %347
  %349 = icmp eq i8 %348, -116
  br i1 %349, label %1144, label %1195

350:                                              ; preds = %302
  %351 = getelementptr inbounds i8, ptr %250, i64 1
  %352 = load i8, ptr %351, align 1, !tbaa !17
  %353 = add i8 %352, -115
  %354 = icmp ult i8 %353, 2
  br i1 %354, label %1144, label %1195

355:                                              ; preds = %302
  %356 = getelementptr inbounds i8, ptr %250, i64 1
  %357 = load i8, ptr %356, align 1, !tbaa !17
  %358 = icmp eq i8 %357, -52
  br i1 %358, label %359, label %1195

359:                                              ; preds = %355
  %360 = getelementptr inbounds i8, ptr %250, i64 2
  %361 = load i8, ptr %360, align 1, !tbaa !17
  %362 = freeze i8 %361
  %363 = icmp eq i8 %362, -120
  br i1 %363, label %1144, label %1195

364:                                              ; preds = %302, %302
  %365 = getelementptr inbounds i8, ptr %250, i64 1
  %366 = load i8, ptr %365, align 1, !tbaa !17
  %367 = icmp eq i8 %366, -52
  br i1 %367, label %368, label %1195

368:                                              ; preds = %364
  %369 = getelementptr inbounds i8, ptr %250, i64 2
  %370 = load i8, ptr %369, align 1, !tbaa !17
  %371 = freeze i8 %370
  %372 = icmp eq i8 %371, -118
  br i1 %372, label %1144, label %1195

373:                                              ; preds = %302
  %374 = getelementptr inbounds i8, ptr %250, i64 1
  %375 = load i8, ptr %374, align 1, !tbaa !17
  %376 = icmp eq i8 %375, -65
  br i1 %376, label %377, label %1195

377:                                              ; preds = %373
  %378 = getelementptr inbounds i8, ptr %250, i64 2
  %379 = load i8, ptr %378, align 1, !tbaa !17
  %380 = icmp eq i8 %379, -59
  br i1 %380, label %381, label %1195

381:                                              ; preds = %377
  %382 = getelementptr inbounds i8, ptr %250, i64 3
  %383 = load i8, ptr %382, align 1, !tbaa !17
  %384 = freeze i8 %383
  %385 = icmp eq i8 %384, -65
  br i1 %385, label %1144, label %1195

386:                                              ; preds = %302
  %387 = getelementptr inbounds i8, ptr %250, i64 1
  %388 = load i8, ptr %387, align 1, !tbaa !17
  %389 = icmp eq i8 %388, -68
  br i1 %389, label %390, label %1195

390:                                              ; preds = %386
  %391 = getelementptr inbounds i8, ptr %250, i64 2
  %392 = load i8, ptr %391, align 1, !tbaa !17
  %393 = freeze i8 %392
  %394 = icmp eq i8 %393, 110
  br i1 %394, label %1144, label %1195

395:                                              ; preds = %302
  %396 = getelementptr inbounds i8, ptr %250, i64 1
  %397 = load i8, ptr %396, align 1, !tbaa !17
  %398 = and i8 %397, -3
  %399 = icmp eq i8 %398, -84
  br i1 %399, label %400, label %409

400:                                              ; preds = %395
  %401 = getelementptr inbounds i8, ptr %250, i64 2
  %402 = load i8, ptr %401, align 1, !tbaa !17
  %403 = icmp eq i8 %402, -50
  br i1 %403, label %404, label %1195

404:                                              ; preds = %400
  %405 = getelementptr inbounds i8, ptr %250, i64 3
  %406 = load i8, ptr %405, align 1, !tbaa !17
  %407 = freeze i8 %406
  %408 = icmp eq i8 %407, -71
  br i1 %408, label %1144, label %1195

409:                                              ; preds = %395
  switch i8 %397, label %1195 [
    i8 -79, label %410
    i8 -73, label %410
    i8 -71, label %432
  ]

410:                                              ; preds = %409, %409
  %411 = getelementptr inbounds i8, ptr %250, i64 2
  %412 = load i8, ptr %411, align 1, !tbaa !17
  switch i8 %412, label %1195 [
    i8 -51, label %413
    i8 -50, label %427
  ]

413:                                              ; preds = %410
  %414 = getelementptr inbounds i8, ptr %250, i64 3
  %415 = load i8, ptr %414, align 1, !tbaa !17
  %416 = icmp eq i8 %415, -126
  br i1 %416, label %417, label %1195

417:                                              ; preds = %413
  %418 = getelementptr inbounds i8, ptr %250, i64 4
  %419 = load i8, ptr %418, align 1, !tbaa !17
  %420 = icmp eq i8 %419, -50
  br i1 %420, label %421, label %1144

421:                                              ; preds = %417
  %422 = getelementptr inbounds i8, ptr %250, i64 5
  %423 = load i8, ptr %422, align 1, !tbaa !17
  %424 = freeze i8 %423
  %425 = icmp eq i8 %424, -71
  %426 = select i1 %425, i32 6, i32 4
  br label %1144

427:                                              ; preds = %410
  %428 = getelementptr inbounds i8, ptr %250, i64 3
  %429 = load i8, ptr %428, align 1, !tbaa !17
  %430 = freeze i8 %429
  %431 = icmp eq i8 %430, -71
  br i1 %431, label %1144, label %1195

432:                                              ; preds = %409
  %433 = getelementptr inbounds i8, ptr %250, i64 2
  %434 = load i8, ptr %433, align 1, !tbaa !17
  switch i8 %434, label %1195 [
    i8 -52, label %435
    i8 -51, label %452
  ]

435:                                              ; preds = %432
  %436 = getelementptr inbounds i8, ptr %250, i64 3
  %437 = load i8, ptr %436, align 1, !tbaa !17
  %438 = icmp eq i8 %437, -120
  br i1 %438, label %439, label %1195

439:                                              ; preds = %435
  %440 = getelementptr inbounds i8, ptr %250, i64 4
  %441 = load i8, ptr %440, align 1, !tbaa !17
  switch i8 %441, label %1195 [
    i8 -52, label %442
    i8 -51, label %447
  ]

442:                                              ; preds = %439
  %443 = getelementptr inbounds i8, ptr %250, i64 5
  %444 = load i8, ptr %443, align 1, !tbaa !17
  %445 = and i8 %444, -2
  %446 = icmp eq i8 %445, -128
  br i1 %446, label %1144, label %1195

447:                                              ; preds = %439
  %448 = getelementptr inbounds i8, ptr %250, i64 5
  %449 = load i8, ptr %448, align 1, !tbaa !17
  %450 = freeze i8 %449
  %451 = icmp eq i8 %450, -126
  br i1 %451, label %1144, label %1195

452:                                              ; preds = %432
  %453 = getelementptr inbounds i8, ptr %250, i64 3
  %454 = load i8, ptr %453, align 1, !tbaa !17
  %455 = freeze i8 %454
  %456 = icmp eq i8 %455, -126
  br i1 %456, label %1144, label %1195

457:                                              ; preds = %302
  %458 = getelementptr inbounds i8, ptr %250, i64 1
  %459 = load i8, ptr %458, align 1, !tbaa !17
  switch i8 %459, label %1195 [
    i8 -127, label %460
    i8 -123, label %469
    i8 -119, label %508
    i8 -114, label %530
  ]

460:                                              ; preds = %457
  %461 = getelementptr inbounds i8, ptr %250, i64 2
  %462 = load i8, ptr %461, align 1, !tbaa !17
  %463 = icmp eq i8 %462, -52
  br i1 %463, label %464, label %1195

464:                                              ; preds = %460
  %465 = getelementptr inbounds i8, ptr %250, i64 3
  %466 = load i8, ptr %465, align 1, !tbaa !17
  %467 = freeze i8 %466
  %468 = icmp eq i8 %467, -109
  br i1 %468, label %1144, label %1195

469:                                              ; preds = %457
  %470 = getelementptr inbounds i8, ptr %250, i64 2
  %471 = load i8, ptr %470, align 1, !tbaa !17
  switch i8 %471, label %1195 [
    i8 -52, label %472
    i8 -51, label %503
  ]

472:                                              ; preds = %469
  %473 = getelementptr inbounds i8, ptr %250, i64 3
  %474 = load i8, ptr %473, align 1, !tbaa !17
  switch i8 %474, label %1195 [
    i8 -120, label %475
    i8 -109, label %488
  ]

475:                                              ; preds = %472
  %476 = getelementptr inbounds i8, ptr %250, i64 4
  %477 = load i8, ptr %476, align 1, !tbaa !17
  switch i8 %477, label %1195 [
    i8 -52, label %478
    i8 -51, label %483
  ]

478:                                              ; preds = %475
  %479 = getelementptr inbounds i8, ptr %250, i64 5
  %480 = load i8, ptr %479, align 1, !tbaa !17
  %481 = and i8 %480, -2
  %482 = icmp eq i8 %481, -128
  br i1 %482, label %1144, label %1195

483:                                              ; preds = %475
  %484 = getelementptr inbounds i8, ptr %250, i64 5
  %485 = load i8, ptr %484, align 1, !tbaa !17
  %486 = freeze i8 %485
  %487 = icmp eq i8 %486, -126
  br i1 %487, label %1144, label %1195

488:                                              ; preds = %472
  %489 = getelementptr inbounds i8, ptr %250, i64 4
  %490 = load i8, ptr %489, align 1, !tbaa !17
  switch i8 %490, label %1144 [
    i8 -52, label %491
    i8 -51, label %497
  ]

491:                                              ; preds = %488
  %492 = getelementptr inbounds i8, ptr %250, i64 5
  %493 = load i8, ptr %492, align 1, !tbaa !17
  %494 = and i8 %493, -2
  %495 = icmp eq i8 %494, -128
  %496 = select i1 %495, i32 6, i32 4
  br label %1144

497:                                              ; preds = %488
  %498 = getelementptr inbounds i8, ptr %250, i64 5
  %499 = load i8, ptr %498, align 1, !tbaa !17
  %500 = freeze i8 %499
  %501 = icmp eq i8 %500, -126
  %502 = select i1 %501, i32 6, i32 4
  br label %1144

503:                                              ; preds = %469
  %504 = getelementptr inbounds i8, ptr %250, i64 3
  %505 = load i8, ptr %504, align 1, !tbaa !17
  %506 = freeze i8 %505
  %507 = icmp eq i8 %506, -126
  br i1 %507, label %1144, label %1195

508:                                              ; preds = %457
  %509 = getelementptr inbounds i8, ptr %250, i64 2
  %510 = load i8, ptr %509, align 1, !tbaa !17
  switch i8 %510, label %1195 [
    i8 -51, label %511
    i8 -50, label %525
  ]

511:                                              ; preds = %508
  %512 = getelementptr inbounds i8, ptr %250, i64 3
  %513 = load i8, ptr %512, align 1, !tbaa !17
  %514 = icmp eq i8 %513, -126
  br i1 %514, label %515, label %1195

515:                                              ; preds = %511
  %516 = getelementptr inbounds i8, ptr %250, i64 4
  %517 = load i8, ptr %516, align 1, !tbaa !17
  %518 = icmp eq i8 %517, -50
  br i1 %518, label %519, label %1144

519:                                              ; preds = %515
  %520 = getelementptr inbounds i8, ptr %250, i64 5
  %521 = load i8, ptr %520, align 1, !tbaa !17
  %522 = freeze i8 %521
  %523 = icmp eq i8 %522, -71
  %524 = select i1 %523, i32 6, i32 4
  br label %1144

525:                                              ; preds = %508
  %526 = getelementptr inbounds i8, ptr %250, i64 3
  %527 = load i8, ptr %526, align 1, !tbaa !17
  %528 = freeze i8 %527
  %529 = icmp eq i8 %528, -71
  br i1 %529, label %1144, label %1195

530:                                              ; preds = %457
  %531 = getelementptr inbounds i8, ptr %250, i64 2
  %532 = load i8, ptr %531, align 1, !tbaa !17
  %533 = icmp eq i8 %532, -50
  br i1 %533, label %534, label %1195

534:                                              ; preds = %530
  %535 = getelementptr inbounds i8, ptr %250, i64 3
  %536 = load i8, ptr %535, align 1, !tbaa !17
  %537 = freeze i8 %536
  %538 = icmp eq i8 %537, -71
  br i1 %538, label %1144, label %1195

539:                                              ; preds = %302
  %540 = getelementptr inbounds i8, ptr %250, i64 1
  %541 = load i8, ptr %540, align 1, !tbaa !17
  switch i8 %541, label %1195 [
    i8 -91, label %542
    i8 -76, label %551
    i8 -66, label %558
  ]

542:                                              ; preds = %539
  %543 = getelementptr inbounds i8, ptr %250, i64 2
  %544 = load i8, ptr %543, align 1, !tbaa !17
  %545 = icmp eq i8 %544, -42
  br i1 %545, label %546, label %1195

546:                                              ; preds = %542
  %547 = getelementptr inbounds i8, ptr %250, i64 3
  %548 = load i8, ptr %547, align 1, !tbaa !17
  %549 = freeze i8 %548
  %550 = icmp eq i8 %549, -126
  br i1 %550, label %1144, label %1195

551:                                              ; preds = %539
  %552 = getelementptr inbounds i8, ptr %250, i64 2
  %553 = load i8, ptr %552, align 1, !tbaa !17
  %554 = icmp eq i8 %553, -43
  br i1 %554, label %555, label %1195

555:                                              ; preds = %551
  %556 = getelementptr inbounds i8, ptr %250, i64 3
  %557 = load i8, ptr %556, align 1, !tbaa !17
  switch i8 %557, label %1195 [
    i8 -83, label %1144
    i8 -85, label %1144
    i8 -91, label %1144
    i8 -74, label %1144
  ]

558:                                              ; preds = %539
  %559 = getelementptr inbounds i8, ptr %250, i64 2
  %560 = load i8, ptr %559, align 1, !tbaa !17
  %561 = icmp eq i8 %560, -43
  br i1 %561, label %562, label %1195

562:                                              ; preds = %558
  %563 = getelementptr inbounds i8, ptr %250, i64 3
  %564 = load i8, ptr %563, align 1, !tbaa !17
  %565 = freeze i8 %564
  %566 = icmp eq i8 %565, -74
  br i1 %566, label %1144, label %1195

567:                                              ; preds = %302
  %568 = getelementptr inbounds i8, ptr %250, i64 1
  %569 = load i8, ptr %568, align 1, !tbaa !17
  switch i8 %569, label %1195 [
    i8 -68, label %570
    i8 -67, label %584
  ]

570:                                              ; preds = %567
  %571 = getelementptr inbounds i8, ptr %250, i64 2
  %572 = load i8, ptr %571, align 1, !tbaa !17
  %573 = and i8 %572, -40
  %574 = icmp eq i8 %573, -128
  br i1 %574, label %575, label %1195

575:                                              ; preds = %570
  %576 = getelementptr inbounds i8, ptr %250, i64 3
  %577 = load i8, ptr %576, align 1, !tbaa !17
  %578 = icmp eq i8 %577, -50
  br i1 %578, label %579, label %1195

579:                                              ; preds = %575
  %580 = getelementptr inbounds i8, ptr %250, i64 4
  %581 = load i8, ptr %580, align 1, !tbaa !17
  %582 = freeze i8 %581
  %583 = icmp eq i8 %582, -71
  br i1 %583, label %1144, label %1195

584:                                              ; preds = %567
  %585 = getelementptr inbounds i8, ptr %250, i64 2
  %586 = load i8, ptr %585, align 1, !tbaa !17
  %587 = zext i8 %586 to i32
  %588 = and i32 %587, 248
  %589 = icmp eq i32 %588, 160
  %590 = and i32 %587, 251
  %591 = icmp eq i32 %590, 176
  %592 = or i1 %589, %591
  %593 = icmp eq i8 %586, -68
  %594 = or i1 %593, %592
  br i1 %594, label %595, label %1195

595:                                              ; preds = %584
  %596 = getelementptr inbounds i8, ptr %250, i64 3
  %597 = load i8, ptr %596, align 1, !tbaa !17
  %598 = icmp eq i8 %597, -50
  br i1 %598, label %599, label %1195

599:                                              ; preds = %595
  %600 = getelementptr inbounds i8, ptr %250, i64 4
  %601 = load i8, ptr %600, align 1, !tbaa !17
  %602 = freeze i8 %601
  %603 = icmp eq i8 %602, -71
  br i1 %603, label %1144, label %1195

604:                                              ; preds = %300
  %605 = icmp eq i64 %299, 5
  br i1 %605, label %606, label %845

606:                                              ; preds = %604
  %607 = load i8, ptr %250, align 1, !tbaa !17
  switch i8 %607, label %1195 [
    i8 97, label %608
    i8 102, label %617
    i8 104, label %627
    i8 105, label %636
    i8 106, label %645
    i8 115, label %654
    i8 116, label %659
    i8 119, label %668
    i8 121, label %668
    i8 -59, label %677
    i8 -54, label %690
    i8 -50, label %699
    i8 -49, label %735
    i8 -43, label %780
    i8 -31, label %808
  ]

608:                                              ; preds = %606
  %609 = getelementptr inbounds i8, ptr %250, i64 1
  %610 = load i8, ptr %609, align 1, !tbaa !17
  %611 = icmp eq i8 %610, -54
  br i1 %611, label %612, label %1195

612:                                              ; preds = %608
  %613 = getelementptr inbounds i8, ptr %250, i64 2
  %614 = load i8, ptr %613, align 1, !tbaa !17
  %615 = freeze i8 %614
  %616 = icmp eq i8 %615, -66
  br i1 %616, label %1144, label %1195

617:                                              ; preds = %606
  %618 = getelementptr inbounds i8, ptr %250, i64 1
  %619 = load i8, ptr %618, align 1, !tbaa !17
  switch i8 %619, label %1195 [
    i8 102, label %620
    i8 105, label %1144
    i8 108, label %1144
  ]

620:                                              ; preds = %617
  %621 = getelementptr inbounds i8, ptr %250, i64 2
  %622 = load i8, ptr %621, align 1, !tbaa !17
  %623 = icmp eq i8 %622, 105
  %624 = icmp eq i8 %622, 108
  %625 = or i1 %623, %624
  %626 = select i1 %625, i32 3, i32 2
  br label %1144

627:                                              ; preds = %606
  %628 = getelementptr inbounds i8, ptr %250, i64 1
  %629 = load i8, ptr %628, align 1, !tbaa !17
  %630 = icmp eq i8 %629, -52
  br i1 %630, label %631, label %1195

631:                                              ; preds = %627
  %632 = getelementptr inbounds i8, ptr %250, i64 2
  %633 = load i8, ptr %632, align 1, !tbaa !17
  %634 = freeze i8 %633
  %635 = icmp eq i8 %634, -79
  br i1 %635, label %1144, label %1195

636:                                              ; preds = %606
  %637 = getelementptr inbounds i8, ptr %250, i64 1
  %638 = load i8, ptr %637, align 1, !tbaa !17
  %639 = icmp eq i8 %638, -52
  br i1 %639, label %640, label %1195

640:                                              ; preds = %636
  %641 = getelementptr inbounds i8, ptr %250, i64 2
  %642 = load i8, ptr %641, align 1, !tbaa !17
  %643 = freeze i8 %642
  %644 = icmp eq i8 %643, -121
  br i1 %644, label %1144, label %1195

645:                                              ; preds = %606
  %646 = getelementptr inbounds i8, ptr %250, i64 1
  %647 = load i8, ptr %646, align 1, !tbaa !17
  %648 = icmp eq i8 %647, -52
  br i1 %648, label %649, label %1195

649:                                              ; preds = %645
  %650 = getelementptr inbounds i8, ptr %250, i64 2
  %651 = load i8, ptr %650, align 1, !tbaa !17
  %652 = freeze i8 %651
  %653 = icmp eq i8 %652, -116
  br i1 %653, label %1144, label %1195

654:                                              ; preds = %606
  %655 = getelementptr inbounds i8, ptr %250, i64 1
  %656 = load i8, ptr %655, align 1, !tbaa !17
  %657 = add i8 %656, -115
  %658 = icmp ult i8 %657, 2
  br i1 %658, label %1144, label %1195

659:                                              ; preds = %606
  %660 = getelementptr inbounds i8, ptr %250, i64 1
  %661 = load i8, ptr %660, align 1, !tbaa !17
  %662 = icmp eq i8 %661, -52
  br i1 %662, label %663, label %1195

663:                                              ; preds = %659
  %664 = getelementptr inbounds i8, ptr %250, i64 2
  %665 = load i8, ptr %664, align 1, !tbaa !17
  %666 = freeze i8 %665
  %667 = icmp eq i8 %666, -120
  br i1 %667, label %1144, label %1195

668:                                              ; preds = %606, %606
  %669 = getelementptr inbounds i8, ptr %250, i64 1
  %670 = load i8, ptr %669, align 1, !tbaa !17
  %671 = icmp eq i8 %670, -52
  br i1 %671, label %672, label %1195

672:                                              ; preds = %668
  %673 = getelementptr inbounds i8, ptr %250, i64 2
  %674 = load i8, ptr %673, align 1, !tbaa !17
  %675 = freeze i8 %674
  %676 = icmp eq i8 %675, -118
  br i1 %676, label %1144, label %1195

677:                                              ; preds = %606
  %678 = getelementptr inbounds i8, ptr %250, i64 1
  %679 = load i8, ptr %678, align 1, !tbaa !17
  %680 = icmp eq i8 %679, -65
  br i1 %680, label %681, label %1195

681:                                              ; preds = %677
  %682 = getelementptr inbounds i8, ptr %250, i64 2
  %683 = load i8, ptr %682, align 1, !tbaa !17
  %684 = icmp eq i8 %683, -59
  br i1 %684, label %685, label %1195

685:                                              ; preds = %681
  %686 = getelementptr inbounds i8, ptr %250, i64 3
  %687 = load i8, ptr %686, align 1, !tbaa !17
  %688 = freeze i8 %687
  %689 = icmp eq i8 %688, -65
  br i1 %689, label %1144, label %1195

690:                                              ; preds = %606
  %691 = getelementptr inbounds i8, ptr %250, i64 1
  %692 = load i8, ptr %691, align 1, !tbaa !17
  %693 = icmp eq i8 %692, -68
  br i1 %693, label %694, label %1195

694:                                              ; preds = %690
  %695 = getelementptr inbounds i8, ptr %250, i64 2
  %696 = load i8, ptr %695, align 1, !tbaa !17
  %697 = freeze i8 %696
  %698 = icmp eq i8 %697, 110
  br i1 %698, label %1144, label %1195

699:                                              ; preds = %606
  %700 = getelementptr inbounds i8, ptr %250, i64 1
  %701 = load i8, ptr %700, align 1, !tbaa !17
  %702 = and i8 %701, -3
  %703 = icmp eq i8 %702, -84
  br i1 %703, label %704, label %713

704:                                              ; preds = %699
  %705 = getelementptr inbounds i8, ptr %250, i64 2
  %706 = load i8, ptr %705, align 1, !tbaa !17
  %707 = icmp eq i8 %706, -50
  br i1 %707, label %708, label %1195

708:                                              ; preds = %704
  %709 = getelementptr inbounds i8, ptr %250, i64 3
  %710 = load i8, ptr %709, align 1, !tbaa !17
  %711 = freeze i8 %710
  %712 = icmp eq i8 %711, -71
  br i1 %712, label %1144, label %1195

713:                                              ; preds = %699
  switch i8 %701, label %1195 [
    i8 -79, label %714
    i8 -73, label %714
    i8 -71, label %726
  ]

714:                                              ; preds = %713, %713
  %715 = getelementptr inbounds i8, ptr %250, i64 2
  %716 = load i8, ptr %715, align 1, !tbaa !17
  switch i8 %716, label %1195 [
    i8 -51, label %717
    i8 -50, label %721
  ]

717:                                              ; preds = %714
  %718 = getelementptr inbounds i8, ptr %250, i64 3
  %719 = load i8, ptr %718, align 1, !tbaa !17
  %720 = icmp eq i8 %719, -126
  br i1 %720, label %1144, label %1195

721:                                              ; preds = %714
  %722 = getelementptr inbounds i8, ptr %250, i64 3
  %723 = load i8, ptr %722, align 1, !tbaa !17
  %724 = freeze i8 %723
  %725 = icmp eq i8 %724, -71
  br i1 %725, label %1144, label %1195

726:                                              ; preds = %713
  %727 = getelementptr inbounds i8, ptr %250, i64 2
  %728 = load i8, ptr %727, align 1, !tbaa !17
  %729 = icmp eq i8 %728, -51
  br i1 %729, label %730, label %1195

730:                                              ; preds = %726
  %731 = getelementptr inbounds i8, ptr %250, i64 3
  %732 = load i8, ptr %731, align 1, !tbaa !17
  %733 = freeze i8 %732
  %734 = icmp eq i8 %733, -126
  br i1 %734, label %1144, label %1195

735:                                              ; preds = %606
  %736 = getelementptr inbounds i8, ptr %250, i64 1
  %737 = load i8, ptr %736, align 1, !tbaa !17
  switch i8 %737, label %1195 [
    i8 -127, label %738
    i8 -123, label %747
    i8 -119, label %759
    i8 -114, label %771
  ]

738:                                              ; preds = %735
  %739 = getelementptr inbounds i8, ptr %250, i64 2
  %740 = load i8, ptr %739, align 1, !tbaa !17
  %741 = icmp eq i8 %740, -52
  br i1 %741, label %742, label %1195

742:                                              ; preds = %738
  %743 = getelementptr inbounds i8, ptr %250, i64 3
  %744 = load i8, ptr %743, align 1, !tbaa !17
  %745 = freeze i8 %744
  %746 = icmp eq i8 %745, -109
  br i1 %746, label %1144, label %1195

747:                                              ; preds = %735
  %748 = getelementptr inbounds i8, ptr %250, i64 2
  %749 = load i8, ptr %748, align 1, !tbaa !17
  switch i8 %749, label %1195 [
    i8 -52, label %750
    i8 -51, label %754
  ]

750:                                              ; preds = %747
  %751 = getelementptr inbounds i8, ptr %250, i64 3
  %752 = load i8, ptr %751, align 1, !tbaa !17
  %753 = icmp eq i8 %752, -109
  br i1 %753, label %1144, label %1195

754:                                              ; preds = %747
  %755 = getelementptr inbounds i8, ptr %250, i64 3
  %756 = load i8, ptr %755, align 1, !tbaa !17
  %757 = freeze i8 %756
  %758 = icmp eq i8 %757, -126
  br i1 %758, label %1144, label %1195

759:                                              ; preds = %735
  %760 = getelementptr inbounds i8, ptr %250, i64 2
  %761 = load i8, ptr %760, align 1, !tbaa !17
  switch i8 %761, label %1195 [
    i8 -51, label %762
    i8 -50, label %766
  ]

762:                                              ; preds = %759
  %763 = getelementptr inbounds i8, ptr %250, i64 3
  %764 = load i8, ptr %763, align 1, !tbaa !17
  %765 = icmp eq i8 %764, -126
  br i1 %765, label %1144, label %1195

766:                                              ; preds = %759
  %767 = getelementptr inbounds i8, ptr %250, i64 3
  %768 = load i8, ptr %767, align 1, !tbaa !17
  %769 = freeze i8 %768
  %770 = icmp eq i8 %769, -71
  br i1 %770, label %1144, label %1195

771:                                              ; preds = %735
  %772 = getelementptr inbounds i8, ptr %250, i64 2
  %773 = load i8, ptr %772, align 1, !tbaa !17
  %774 = icmp eq i8 %773, -50
  br i1 %774, label %775, label %1195

775:                                              ; preds = %771
  %776 = getelementptr inbounds i8, ptr %250, i64 3
  %777 = load i8, ptr %776, align 1, !tbaa !17
  %778 = freeze i8 %777
  %779 = icmp eq i8 %778, -71
  br i1 %779, label %1144, label %1195

780:                                              ; preds = %606
  %781 = getelementptr inbounds i8, ptr %250, i64 1
  %782 = load i8, ptr %781, align 1, !tbaa !17
  switch i8 %782, label %1195 [
    i8 -91, label %783
    i8 -76, label %792
    i8 -66, label %799
  ]

783:                                              ; preds = %780
  %784 = getelementptr inbounds i8, ptr %250, i64 2
  %785 = load i8, ptr %784, align 1, !tbaa !17
  %786 = icmp eq i8 %785, -42
  br i1 %786, label %787, label %1195

787:                                              ; preds = %783
  %788 = getelementptr inbounds i8, ptr %250, i64 3
  %789 = load i8, ptr %788, align 1, !tbaa !17
  %790 = freeze i8 %789
  %791 = icmp eq i8 %790, -126
  br i1 %791, label %1144, label %1195

792:                                              ; preds = %780
  %793 = getelementptr inbounds i8, ptr %250, i64 2
  %794 = load i8, ptr %793, align 1, !tbaa !17
  %795 = icmp eq i8 %794, -43
  br i1 %795, label %796, label %1195

796:                                              ; preds = %792
  %797 = getelementptr inbounds i8, ptr %250, i64 3
  %798 = load i8, ptr %797, align 1, !tbaa !17
  switch i8 %798, label %1195 [
    i8 -83, label %1144
    i8 -85, label %1144
    i8 -91, label %1144
    i8 -74, label %1144
  ]

799:                                              ; preds = %780
  %800 = getelementptr inbounds i8, ptr %250, i64 2
  %801 = load i8, ptr %800, align 1, !tbaa !17
  %802 = icmp eq i8 %801, -43
  br i1 %802, label %803, label %1195

803:                                              ; preds = %799
  %804 = getelementptr inbounds i8, ptr %250, i64 3
  %805 = load i8, ptr %804, align 1, !tbaa !17
  %806 = freeze i8 %805
  %807 = icmp eq i8 %806, -74
  br i1 %807, label %1144, label %1195

808:                                              ; preds = %606
  %809 = getelementptr inbounds i8, ptr %250, i64 1
  %810 = load i8, ptr %809, align 1, !tbaa !17
  switch i8 %810, label %1195 [
    i8 -68, label %811
    i8 -67, label %825
  ]

811:                                              ; preds = %808
  %812 = getelementptr inbounds i8, ptr %250, i64 2
  %813 = load i8, ptr %812, align 1, !tbaa !17
  %814 = and i8 %813, -40
  %815 = icmp eq i8 %814, -128
  br i1 %815, label %816, label %1195

816:                                              ; preds = %811
  %817 = getelementptr inbounds i8, ptr %250, i64 3
  %818 = load i8, ptr %817, align 1, !tbaa !17
  %819 = icmp eq i8 %818, -50
  br i1 %819, label %820, label %1195

820:                                              ; preds = %816
  %821 = getelementptr inbounds i8, ptr %250, i64 4
  %822 = load i8, ptr %821, align 1, !tbaa !17
  %823 = freeze i8 %822
  %824 = icmp eq i8 %823, -71
  br i1 %824, label %1144, label %1195

825:                                              ; preds = %808
  %826 = getelementptr inbounds i8, ptr %250, i64 2
  %827 = load i8, ptr %826, align 1, !tbaa !17
  %828 = zext i8 %827 to i32
  %829 = and i32 %828, 248
  %830 = icmp eq i32 %829, 160
  %831 = and i32 %828, 251
  %832 = icmp eq i32 %831, 176
  %833 = or i1 %830, %832
  %834 = icmp eq i8 %827, -68
  %835 = or i1 %834, %833
  br i1 %835, label %836, label %1195

836:                                              ; preds = %825
  %837 = getelementptr inbounds i8, ptr %250, i64 3
  %838 = load i8, ptr %837, align 1, !tbaa !17
  %839 = icmp eq i8 %838, -50
  br i1 %839, label %840, label %1195

840:                                              ; preds = %836
  %841 = getelementptr inbounds i8, ptr %250, i64 4
  %842 = load i8, ptr %841, align 1, !tbaa !17
  %843 = freeze i8 %842
  %844 = icmp eq i8 %843, -71
  br i1 %844, label %1144, label %1195

845:                                              ; preds = %604
  %846 = icmp sgt i64 %299, 3
  br i1 %846, label %847, label %1049

847:                                              ; preds = %845
  %848 = load i8, ptr %250, align 1, !tbaa !17
  switch i8 %848, label %1195 [
    i8 97, label %849
    i8 102, label %858
    i8 104, label %868
    i8 105, label %877
    i8 106, label %886
    i8 115, label %895
    i8 116, label %900
    i8 119, label %909
    i8 121, label %909
    i8 -59, label %918
    i8 -54, label %931
    i8 -50, label %940
    i8 -49, label %976
    i8 -43, label %1021
  ]

849:                                              ; preds = %847
  %850 = getelementptr inbounds i8, ptr %250, i64 1
  %851 = load i8, ptr %850, align 1, !tbaa !17
  %852 = icmp eq i8 %851, -54
  br i1 %852, label %853, label %1195

853:                                              ; preds = %849
  %854 = getelementptr inbounds i8, ptr %250, i64 2
  %855 = load i8, ptr %854, align 1, !tbaa !17
  %856 = freeze i8 %855
  %857 = icmp eq i8 %856, -66
  br i1 %857, label %1144, label %1195

858:                                              ; preds = %847
  %859 = getelementptr inbounds i8, ptr %250, i64 1
  %860 = load i8, ptr %859, align 1, !tbaa !17
  switch i8 %860, label %1195 [
    i8 102, label %861
    i8 105, label %1144
    i8 108, label %1144
  ]

861:                                              ; preds = %858
  %862 = getelementptr inbounds i8, ptr %250, i64 2
  %863 = load i8, ptr %862, align 1, !tbaa !17
  %864 = icmp eq i8 %863, 105
  %865 = icmp eq i8 %863, 108
  %866 = or i1 %864, %865
  %867 = select i1 %866, i32 3, i32 2
  br label %1144

868:                                              ; preds = %847
  %869 = getelementptr inbounds i8, ptr %250, i64 1
  %870 = load i8, ptr %869, align 1, !tbaa !17
  %871 = icmp eq i8 %870, -52
  br i1 %871, label %872, label %1195

872:                                              ; preds = %868
  %873 = getelementptr inbounds i8, ptr %250, i64 2
  %874 = load i8, ptr %873, align 1, !tbaa !17
  %875 = freeze i8 %874
  %876 = icmp eq i8 %875, -79
  br i1 %876, label %1144, label %1195

877:                                              ; preds = %847
  %878 = getelementptr inbounds i8, ptr %250, i64 1
  %879 = load i8, ptr %878, align 1, !tbaa !17
  %880 = icmp eq i8 %879, -52
  br i1 %880, label %881, label %1195

881:                                              ; preds = %877
  %882 = getelementptr inbounds i8, ptr %250, i64 2
  %883 = load i8, ptr %882, align 1, !tbaa !17
  %884 = freeze i8 %883
  %885 = icmp eq i8 %884, -121
  br i1 %885, label %1144, label %1195

886:                                              ; preds = %847
  %887 = getelementptr inbounds i8, ptr %250, i64 1
  %888 = load i8, ptr %887, align 1, !tbaa !17
  %889 = icmp eq i8 %888, -52
  br i1 %889, label %890, label %1195

890:                                              ; preds = %886
  %891 = getelementptr inbounds i8, ptr %250, i64 2
  %892 = load i8, ptr %891, align 1, !tbaa !17
  %893 = freeze i8 %892
  %894 = icmp eq i8 %893, -116
  br i1 %894, label %1144, label %1195

895:                                              ; preds = %847
  %896 = getelementptr inbounds i8, ptr %250, i64 1
  %897 = load i8, ptr %896, align 1, !tbaa !17
  %898 = add i8 %897, -115
  %899 = icmp ult i8 %898, 2
  br i1 %899, label %1144, label %1195

900:                                              ; preds = %847
  %901 = getelementptr inbounds i8, ptr %250, i64 1
  %902 = load i8, ptr %901, align 1, !tbaa !17
  %903 = icmp eq i8 %902, -52
  br i1 %903, label %904, label %1195

904:                                              ; preds = %900
  %905 = getelementptr inbounds i8, ptr %250, i64 2
  %906 = load i8, ptr %905, align 1, !tbaa !17
  %907 = freeze i8 %906
  %908 = icmp eq i8 %907, -120
  br i1 %908, label %1144, label %1195

909:                                              ; preds = %847, %847
  %910 = getelementptr inbounds i8, ptr %250, i64 1
  %911 = load i8, ptr %910, align 1, !tbaa !17
  %912 = icmp eq i8 %911, -52
  br i1 %912, label %913, label %1195

913:                                              ; preds = %909
  %914 = getelementptr inbounds i8, ptr %250, i64 2
  %915 = load i8, ptr %914, align 1, !tbaa !17
  %916 = freeze i8 %915
  %917 = icmp eq i8 %916, -118
  br i1 %917, label %1144, label %1195

918:                                              ; preds = %847
  %919 = getelementptr inbounds i8, ptr %250, i64 1
  %920 = load i8, ptr %919, align 1, !tbaa !17
  %921 = icmp eq i8 %920, -65
  br i1 %921, label %922, label %1195

922:                                              ; preds = %918
  %923 = getelementptr inbounds i8, ptr %250, i64 2
  %924 = load i8, ptr %923, align 1, !tbaa !17
  %925 = icmp eq i8 %924, -59
  br i1 %925, label %926, label %1195

926:                                              ; preds = %922
  %927 = getelementptr inbounds i8, ptr %250, i64 3
  %928 = load i8, ptr %927, align 1, !tbaa !17
  %929 = freeze i8 %928
  %930 = icmp eq i8 %929, -65
  br i1 %930, label %1144, label %1195

931:                                              ; preds = %847
  %932 = getelementptr inbounds i8, ptr %250, i64 1
  %933 = load i8, ptr %932, align 1, !tbaa !17
  %934 = icmp eq i8 %933, -68
  br i1 %934, label %935, label %1195

935:                                              ; preds = %931
  %936 = getelementptr inbounds i8, ptr %250, i64 2
  %937 = load i8, ptr %936, align 1, !tbaa !17
  %938 = freeze i8 %937
  %939 = icmp eq i8 %938, 110
  br i1 %939, label %1144, label %1195

940:                                              ; preds = %847
  %941 = getelementptr inbounds i8, ptr %250, i64 1
  %942 = load i8, ptr %941, align 1, !tbaa !17
  %943 = and i8 %942, -3
  %944 = icmp eq i8 %943, -84
  br i1 %944, label %945, label %954

945:                                              ; preds = %940
  %946 = getelementptr inbounds i8, ptr %250, i64 2
  %947 = load i8, ptr %946, align 1, !tbaa !17
  %948 = icmp eq i8 %947, -50
  br i1 %948, label %949, label %1195

949:                                              ; preds = %945
  %950 = getelementptr inbounds i8, ptr %250, i64 3
  %951 = load i8, ptr %950, align 1, !tbaa !17
  %952 = freeze i8 %951
  %953 = icmp eq i8 %952, -71
  br i1 %953, label %1144, label %1195

954:                                              ; preds = %940
  switch i8 %942, label %1195 [
    i8 -79, label %955
    i8 -73, label %955
    i8 -71, label %967
  ]

955:                                              ; preds = %954, %954
  %956 = getelementptr inbounds i8, ptr %250, i64 2
  %957 = load i8, ptr %956, align 1, !tbaa !17
  switch i8 %957, label %1195 [
    i8 -51, label %958
    i8 -50, label %962
  ]

958:                                              ; preds = %955
  %959 = getelementptr inbounds i8, ptr %250, i64 3
  %960 = load i8, ptr %959, align 1, !tbaa !17
  %961 = icmp eq i8 %960, -126
  br i1 %961, label %1144, label %1195

962:                                              ; preds = %955
  %963 = getelementptr inbounds i8, ptr %250, i64 3
  %964 = load i8, ptr %963, align 1, !tbaa !17
  %965 = freeze i8 %964
  %966 = icmp eq i8 %965, -71
  br i1 %966, label %1144, label %1195

967:                                              ; preds = %954
  %968 = getelementptr inbounds i8, ptr %250, i64 2
  %969 = load i8, ptr %968, align 1, !tbaa !17
  %970 = icmp eq i8 %969, -51
  br i1 %970, label %971, label %1195

971:                                              ; preds = %967
  %972 = getelementptr inbounds i8, ptr %250, i64 3
  %973 = load i8, ptr %972, align 1, !tbaa !17
  %974 = freeze i8 %973
  %975 = icmp eq i8 %974, -126
  br i1 %975, label %1144, label %1195

976:                                              ; preds = %847
  %977 = getelementptr inbounds i8, ptr %250, i64 1
  %978 = load i8, ptr %977, align 1, !tbaa !17
  switch i8 %978, label %1195 [
    i8 -127, label %979
    i8 -123, label %988
    i8 -119, label %1000
    i8 -114, label %1012
  ]

979:                                              ; preds = %976
  %980 = getelementptr inbounds i8, ptr %250, i64 2
  %981 = load i8, ptr %980, align 1, !tbaa !17
  %982 = icmp eq i8 %981, -52
  br i1 %982, label %983, label %1195

983:                                              ; preds = %979
  %984 = getelementptr inbounds i8, ptr %250, i64 3
  %985 = load i8, ptr %984, align 1, !tbaa !17
  %986 = freeze i8 %985
  %987 = icmp eq i8 %986, -109
  br i1 %987, label %1144, label %1195

988:                                              ; preds = %976
  %989 = getelementptr inbounds i8, ptr %250, i64 2
  %990 = load i8, ptr %989, align 1, !tbaa !17
  switch i8 %990, label %1195 [
    i8 -52, label %991
    i8 -51, label %995
  ]

991:                                              ; preds = %988
  %992 = getelementptr inbounds i8, ptr %250, i64 3
  %993 = load i8, ptr %992, align 1, !tbaa !17
  %994 = icmp eq i8 %993, -109
  br i1 %994, label %1144, label %1195

995:                                              ; preds = %988
  %996 = getelementptr inbounds i8, ptr %250, i64 3
  %997 = load i8, ptr %996, align 1, !tbaa !17
  %998 = freeze i8 %997
  %999 = icmp eq i8 %998, -126
  br i1 %999, label %1144, label %1195

1000:                                             ; preds = %976
  %1001 = getelementptr inbounds i8, ptr %250, i64 2
  %1002 = load i8, ptr %1001, align 1, !tbaa !17
  switch i8 %1002, label %1195 [
    i8 -51, label %1003
    i8 -50, label %1007
  ]

1003:                                             ; preds = %1000
  %1004 = getelementptr inbounds i8, ptr %250, i64 3
  %1005 = load i8, ptr %1004, align 1, !tbaa !17
  %1006 = icmp eq i8 %1005, -126
  br i1 %1006, label %1144, label %1195

1007:                                             ; preds = %1000
  %1008 = getelementptr inbounds i8, ptr %250, i64 3
  %1009 = load i8, ptr %1008, align 1, !tbaa !17
  %1010 = freeze i8 %1009
  %1011 = icmp eq i8 %1010, -71
  br i1 %1011, label %1144, label %1195

1012:                                             ; preds = %976
  %1013 = getelementptr inbounds i8, ptr %250, i64 2
  %1014 = load i8, ptr %1013, align 1, !tbaa !17
  %1015 = icmp eq i8 %1014, -50
  br i1 %1015, label %1016, label %1195

1016:                                             ; preds = %1012
  %1017 = getelementptr inbounds i8, ptr %250, i64 3
  %1018 = load i8, ptr %1017, align 1, !tbaa !17
  %1019 = freeze i8 %1018
  %1020 = icmp eq i8 %1019, -71
  br i1 %1020, label %1144, label %1195

1021:                                             ; preds = %847
  %1022 = getelementptr inbounds i8, ptr %250, i64 1
  %1023 = load i8, ptr %1022, align 1, !tbaa !17
  switch i8 %1023, label %1195 [
    i8 -91, label %1024
    i8 -76, label %1033
    i8 -66, label %1040
  ]

1024:                                             ; preds = %1021
  %1025 = getelementptr inbounds i8, ptr %250, i64 2
  %1026 = load i8, ptr %1025, align 1, !tbaa !17
  %1027 = icmp eq i8 %1026, -42
  br i1 %1027, label %1028, label %1195

1028:                                             ; preds = %1024
  %1029 = getelementptr inbounds i8, ptr %250, i64 3
  %1030 = load i8, ptr %1029, align 1, !tbaa !17
  %1031 = freeze i8 %1030
  %1032 = icmp eq i8 %1031, -126
  br i1 %1032, label %1144, label %1195

1033:                                             ; preds = %1021
  %1034 = getelementptr inbounds i8, ptr %250, i64 2
  %1035 = load i8, ptr %1034, align 1, !tbaa !17
  %1036 = icmp eq i8 %1035, -43
  br i1 %1036, label %1037, label %1195

1037:                                             ; preds = %1033
  %1038 = getelementptr inbounds i8, ptr %250, i64 3
  %1039 = load i8, ptr %1038, align 1, !tbaa !17
  switch i8 %1039, label %1195 [
    i8 -83, label %1144
    i8 -85, label %1144
    i8 -91, label %1144
    i8 -74, label %1144
  ]

1040:                                             ; preds = %1021
  %1041 = getelementptr inbounds i8, ptr %250, i64 2
  %1042 = load i8, ptr %1041, align 1, !tbaa !17
  %1043 = icmp eq i8 %1042, -43
  br i1 %1043, label %1044, label %1195

1044:                                             ; preds = %1040
  %1045 = getelementptr inbounds i8, ptr %250, i64 3
  %1046 = load i8, ptr %1045, align 1, !tbaa !17
  %1047 = freeze i8 %1046
  %1048 = icmp eq i8 %1047, -74
  br i1 %1048, label %1144, label %1195

1049:                                             ; preds = %845
  %1050 = icmp eq i64 %299, 3
  br i1 %1050, label %1051, label %1131

1051:                                             ; preds = %1049
  %1052 = load i8, ptr %250, align 1, !tbaa !17
  switch i8 %1052, label %1195 [
    i8 97, label %1053
    i8 102, label %1062
    i8 104, label %1072
    i8 105, label %1081
    i8 106, label %1090
    i8 115, label %1099
    i8 116, label %1104
    i8 119, label %1113
    i8 121, label %1113
    i8 -54, label %1122
  ]

1053:                                             ; preds = %1051
  %1054 = getelementptr inbounds i8, ptr %250, i64 1
  %1055 = load i8, ptr %1054, align 1, !tbaa !17
  %1056 = icmp eq i8 %1055, -54
  br i1 %1056, label %1057, label %1195

1057:                                             ; preds = %1053
  %1058 = getelementptr inbounds i8, ptr %250, i64 2
  %1059 = load i8, ptr %1058, align 1, !tbaa !17
  %1060 = freeze i8 %1059
  %1061 = icmp eq i8 %1060, -66
  br i1 %1061, label %1144, label %1195

1062:                                             ; preds = %1051
  %1063 = getelementptr inbounds i8, ptr %250, i64 1
  %1064 = load i8, ptr %1063, align 1, !tbaa !17
  switch i8 %1064, label %1195 [
    i8 102, label %1065
    i8 105, label %1144
    i8 108, label %1144
  ]

1065:                                             ; preds = %1062
  %1066 = getelementptr inbounds i8, ptr %250, i64 2
  %1067 = load i8, ptr %1066, align 1, !tbaa !17
  %1068 = icmp eq i8 %1067, 105
  %1069 = icmp eq i8 %1067, 108
  %1070 = or i1 %1068, %1069
  %1071 = select i1 %1070, i32 3, i32 2
  br label %1144

1072:                                             ; preds = %1051
  %1073 = getelementptr inbounds i8, ptr %250, i64 1
  %1074 = load i8, ptr %1073, align 1, !tbaa !17
  %1075 = icmp eq i8 %1074, -52
  br i1 %1075, label %1076, label %1195

1076:                                             ; preds = %1072
  %1077 = getelementptr inbounds i8, ptr %250, i64 2
  %1078 = load i8, ptr %1077, align 1, !tbaa !17
  %1079 = freeze i8 %1078
  %1080 = icmp eq i8 %1079, -79
  br i1 %1080, label %1144, label %1195

1081:                                             ; preds = %1051
  %1082 = getelementptr inbounds i8, ptr %250, i64 1
  %1083 = load i8, ptr %1082, align 1, !tbaa !17
  %1084 = icmp eq i8 %1083, -52
  br i1 %1084, label %1085, label %1195

1085:                                             ; preds = %1081
  %1086 = getelementptr inbounds i8, ptr %250, i64 2
  %1087 = load i8, ptr %1086, align 1, !tbaa !17
  %1088 = freeze i8 %1087
  %1089 = icmp eq i8 %1088, -121
  br i1 %1089, label %1144, label %1195

1090:                                             ; preds = %1051
  %1091 = getelementptr inbounds i8, ptr %250, i64 1
  %1092 = load i8, ptr %1091, align 1, !tbaa !17
  %1093 = icmp eq i8 %1092, -52
  br i1 %1093, label %1094, label %1195

1094:                                             ; preds = %1090
  %1095 = getelementptr inbounds i8, ptr %250, i64 2
  %1096 = load i8, ptr %1095, align 1, !tbaa !17
  %1097 = freeze i8 %1096
  %1098 = icmp eq i8 %1097, -116
  br i1 %1098, label %1144, label %1195

1099:                                             ; preds = %1051
  %1100 = getelementptr inbounds i8, ptr %250, i64 1
  %1101 = load i8, ptr %1100, align 1, !tbaa !17
  %1102 = add i8 %1101, -115
  %1103 = icmp ult i8 %1102, 2
  br i1 %1103, label %1144, label %1195

1104:                                             ; preds = %1051
  %1105 = getelementptr inbounds i8, ptr %250, i64 1
  %1106 = load i8, ptr %1105, align 1, !tbaa !17
  %1107 = icmp eq i8 %1106, -52
  br i1 %1107, label %1108, label %1195

1108:                                             ; preds = %1104
  %1109 = getelementptr inbounds i8, ptr %250, i64 2
  %1110 = load i8, ptr %1109, align 1, !tbaa !17
  %1111 = freeze i8 %1110
  %1112 = icmp eq i8 %1111, -120
  br i1 %1112, label %1144, label %1195

1113:                                             ; preds = %1051, %1051
  %1114 = getelementptr inbounds i8, ptr %250, i64 1
  %1115 = load i8, ptr %1114, align 1, !tbaa !17
  %1116 = icmp eq i8 %1115, -52
  br i1 %1116, label %1117, label %1195

1117:                                             ; preds = %1113
  %1118 = getelementptr inbounds i8, ptr %250, i64 2
  %1119 = load i8, ptr %1118, align 1, !tbaa !17
  %1120 = freeze i8 %1119
  %1121 = icmp eq i8 %1120, -118
  br i1 %1121, label %1144, label %1195

1122:                                             ; preds = %1051
  %1123 = getelementptr inbounds i8, ptr %250, i64 1
  %1124 = load i8, ptr %1123, align 1, !tbaa !17
  %1125 = icmp eq i8 %1124, -68
  br i1 %1125, label %1126, label %1195

1126:                                             ; preds = %1122
  %1127 = getelementptr inbounds i8, ptr %250, i64 2
  %1128 = load i8, ptr %1127, align 1, !tbaa !17
  %1129 = freeze i8 %1128
  %1130 = icmp eq i8 %1129, 110
  br i1 %1130, label %1144, label %1195

1131:                                             ; preds = %1049
  %1132 = icmp sgt i64 %299, 1
  br i1 %1132, label %1133, label %1195

1133:                                             ; preds = %1131
  %1134 = load i8, ptr %250, align 1, !tbaa !17
  switch i8 %1134, label %1195 [
    i8 102, label %1135
    i8 115, label %1138
  ]

1135:                                             ; preds = %1133
  %1136 = getelementptr inbounds i8, ptr %250, i64 1
  %1137 = load i8, ptr %1136, align 1, !tbaa !17
  switch i8 %1137, label %1195 [
    i8 102, label %1144
    i8 105, label %1144
    i8 108, label %1144
  ]

1138:                                             ; preds = %1133
  %1139 = getelementptr inbounds i8, ptr %250, i64 1
  %1140 = load i8, ptr %1139, align 1, !tbaa !17
  %1141 = freeze i8 %1140
  %1142 = add i8 %1141, -115
  %1143 = icmp ult i8 %1142, 2
  br i1 %1143, label %1144, label %1195

1144:                                             ; preds = %1099, %895, %654, %519, %497, %421, %350, %1003, %991, %958, %762, %750, %717, %478, %442, %1138, %1135, %1135, %1135, %1126, %1117, %1108, %1094, %1085, %1076, %1062, %1062, %1057, %1044, %1028, %1016, %1007, %995, %983, %971, %962, %949, %935, %926, %913, %904, %890, %881, %872, %858, %858, %853, %840, %820, %803, %787, %775, %766, %754, %742, %730, %721, %708, %694, %685, %672, %663, %649, %640, %631, %617, %617, %612, %599, %579, %562, %546, %534, %525, %515, %503, %488, %483, %464, %452, %447, %427, %417, %404, %390, %381, %368, %359, %345, %336, %327, %313, %313, %308, %316, %491, %861, %1065, %620, %555, %555, %555, %555, %796, %796, %796, %796, %1037, %1037, %1037, %1037
  %1145 = phi i8 [ 102, %316 ], [ -49, %491 ], [ 102, %620 ], [ 102, %861 ], [ 102, %1065 ], [ -43, %555 ], [ -43, %555 ], [ -43, %555 ], [ -43, %555 ], [ -43, %796 ], [ -43, %796 ], [ -43, %796 ], [ -43, %796 ], [ -43, %1037 ], [ -43, %1037 ], [ -43, %1037 ], [ -43, %1037 ], [ 97, %308 ], [ 102, %313 ], [ 102, %313 ], [ 104, %327 ], [ 105, %336 ], [ 106, %345 ], [ 116, %359 ], [ %303, %368 ], [ -59, %381 ], [ -54, %390 ], [ -50, %404 ], [ -50, %417 ], [ -50, %427 ], [ -50, %447 ], [ -50, %452 ], [ -49, %464 ], [ -49, %483 ], [ -49, %488 ], [ -49, %503 ], [ -49, %515 ], [ -49, %525 ], [ -49, %534 ], [ -43, %546 ], [ -43, %562 ], [ -31, %579 ], [ -31, %599 ], [ 97, %612 ], [ 102, %617 ], [ 102, %617 ], [ 104, %631 ], [ 105, %640 ], [ 106, %649 ], [ 116, %663 ], [ %607, %672 ], [ -59, %685 ], [ -54, %694 ], [ -50, %708 ], [ -50, %721 ], [ -50, %730 ], [ -49, %742 ], [ -49, %754 ], [ -49, %766 ], [ -49, %775 ], [ -43, %787 ], [ -43, %803 ], [ -31, %820 ], [ -31, %840 ], [ 97, %853 ], [ 102, %858 ], [ 102, %858 ], [ 104, %872 ], [ 105, %881 ], [ 106, %890 ], [ 116, %904 ], [ %848, %913 ], [ -59, %926 ], [ -54, %935 ], [ -50, %949 ], [ -50, %962 ], [ -50, %971 ], [ -49, %983 ], [ -49, %995 ], [ -49, %1007 ], [ -49, %1016 ], [ -43, %1028 ], [ -43, %1044 ], [ 97, %1057 ], [ 102, %1062 ], [ 102, %1062 ], [ 104, %1076 ], [ 105, %1085 ], [ 106, %1094 ], [ 116, %1108 ], [ %1052, %1117 ], [ -54, %1126 ], [ 102, %1135 ], [ 102, %1135 ], [ 102, %1135 ], [ 115, %1138 ], [ -50, %442 ], [ -49, %478 ], [ -50, %717 ], [ -49, %750 ], [ -49, %762 ], [ -50, %958 ], [ -49, %991 ], [ -49, %1003 ], [ 115, %350 ], [ -50, %421 ], [ -49, %497 ], [ -49, %519 ], [ 115, %654 ], [ 115, %895 ], [ 115, %1099 ]
  %1146 = phi i32 [ %322, %316 ], [ %496, %491 ], [ %626, %620 ], [ %867, %861 ], [ %1071, %1065 ], [ 4, %555 ], [ 4, %555 ], [ 4, %555 ], [ 4, %555 ], [ 4, %796 ], [ 4, %796 ], [ 4, %796 ], [ 4, %796 ], [ 4, %1037 ], [ 4, %1037 ], [ 4, %1037 ], [ 4, %1037 ], [ 3, %308 ], [ 2, %313 ], [ 2, %313 ], [ 3, %327 ], [ 3, %336 ], [ 3, %345 ], [ 3, %359 ], [ 3, %368 ], [ 4, %381 ], [ 3, %390 ], [ 4, %404 ], [ 4, %417 ], [ 4, %427 ], [ 6, %447 ], [ 4, %452 ], [ 4, %464 ], [ 6, %483 ], [ 4, %488 ], [ 4, %503 ], [ 4, %515 ], [ 4, %525 ], [ 4, %534 ], [ 4, %546 ], [ 4, %562 ], [ 5, %579 ], [ 5, %599 ], [ 3, %612 ], [ 2, %617 ], [ 2, %617 ], [ 3, %631 ], [ 3, %640 ], [ 3, %649 ], [ 3, %663 ], [ 3, %672 ], [ 4, %685 ], [ 3, %694 ], [ 4, %708 ], [ 4, %721 ], [ 4, %730 ], [ 4, %742 ], [ 4, %754 ], [ 4, %766 ], [ 4, %775 ], [ 4, %787 ], [ 4, %803 ], [ 5, %820 ], [ 5, %840 ], [ 3, %853 ], [ 2, %858 ], [ 2, %858 ], [ 3, %872 ], [ 3, %881 ], [ 3, %890 ], [ 3, %904 ], [ 3, %913 ], [ 4, %926 ], [ 3, %935 ], [ 4, %949 ], [ 4, %962 ], [ 4, %971 ], [ 4, %983 ], [ 4, %995 ], [ 4, %1007 ], [ 4, %1016 ], [ 4, %1028 ], [ 4, %1044 ], [ 3, %1057 ], [ 2, %1062 ], [ 2, %1062 ], [ 3, %1076 ], [ 3, %1085 ], [ 3, %1094 ], [ 3, %1108 ], [ 3, %1117 ], [ 3, %1126 ], [ 2, %1135 ], [ 2, %1135 ], [ 2, %1135 ], [ 2, %1138 ], [ 6, %442 ], [ 6, %478 ], [ 4, %717 ], [ 4, %750 ], [ 4, %762 ], [ 4, %958 ], [ 4, %991 ], [ 4, %1003 ], [ 2, %350 ], [ %426, %421 ], [ %502, %497 ], [ %524, %519 ], [ 2, %654 ], [ 2, %895 ], [ 2, %1099 ]
  %1147 = zext i8 %1145 to i64
  %1148 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1147
  %1149 = load i8, ptr %1148, align 1, !tbaa !17
  %1150 = zext i8 %1149 to i32
  %1151 = sub nsw i32 %1146, %1150
  br label %1195

1152:                                             ; preds = %294
  %1153 = icmp sgt i64 %299, 2
  br i1 %1153, label %1154, label %1176

1154:                                             ; preds = %1152
  %1155 = load i8, ptr %250, align 1, !tbaa !17
  %1156 = and i8 %1155, -33
  switch i8 %1156, label %1195 [
    i8 70, label %1157
    i8 83, label %1169
  ]

1157:                                             ; preds = %1154
  %1158 = getelementptr inbounds i8, ptr %250, i64 1
  %1159 = load i8, ptr %1158, align 1, !tbaa !17
  %1160 = and i8 %1159, -33
  switch i8 %1160, label %1195 [
    i8 70, label %1161
    i8 73, label %1192
    i8 76, label %1192
  ]

1161:                                             ; preds = %1157
  %1162 = getelementptr inbounds i8, ptr %250, i64 2
  %1163 = load i8, ptr %1162, align 1, !tbaa !17
  %1164 = and i8 %1163, -33
  %1165 = icmp eq i8 %1164, 73
  %1166 = icmp eq i8 %1164, 76
  %1167 = or i1 %1165, %1166
  %1168 = select i1 %1167, i32 3, i32 2
  br label %1192

1169:                                             ; preds = %1154
  %1170 = getelementptr inbounds i8, ptr %250, i64 1
  %1171 = load i8, ptr %1170, align 1, !tbaa !17
  %1172 = freeze i8 %1171
  %1173 = and i8 %1172, -33
  %1174 = add i8 %1173, -83
  %1175 = icmp ult i8 %1174, 2
  br i1 %1175, label %1192, label %1195

1176:                                             ; preds = %1152
  %1177 = icmp eq i64 %299, 2
  br i1 %1177, label %1178, label %1195

1178:                                             ; preds = %1176
  %1179 = load i8, ptr %250, align 1, !tbaa !17
  %1180 = and i8 %1179, -33
  switch i8 %1180, label %1195 [
    i8 70, label %1181
    i8 83, label %1185
  ]

1181:                                             ; preds = %1178
  %1182 = getelementptr inbounds i8, ptr %250, i64 1
  %1183 = load i8, ptr %1182, align 1, !tbaa !17
  %1184 = and i8 %1183, -33
  switch i8 %1184, label %1195 [
    i8 70, label %1192
    i8 73, label %1192
    i8 76, label %1192
  ]

1185:                                             ; preds = %1178
  %1186 = getelementptr inbounds i8, ptr %250, i64 1
  %1187 = load i8, ptr %1186, align 1, !tbaa !17
  %1188 = freeze i8 %1187
  %1189 = and i8 %1188, -33
  %1190 = add i8 %1189, -83
  %1191 = icmp ult i8 %1190, 2
  br i1 %1191, label %1192, label %1195

1192:                                             ; preds = %1185, %1181, %1181, %1181, %1169, %1157, %1157, %1161
  %1193 = phi i32 [ %1168, %1161 ], [ 2, %1157 ], [ 2, %1157 ], [ 2, %1169 ], [ 2, %1181 ], [ 2, %1181 ], [ 2, %1181 ], [ 2, %1185 ]
  %1194 = add nsw i32 %1193, -1
  br label %1195

1195:                                             ; preds = %1099, %895, %654, %350, %1178, %1154, %1133, %1051, %1122, %1113, %1104, %1090, %1081, %1072, %1053, %1021, %1040, %1037, %1033, %1024, %976, %1012, %1000, %988, %979, %954, %967, %955, %945, %931, %918, %922, %909, %900, %886, %877, %868, %849, %825, %808, %836, %811, %816, %780, %799, %796, %792, %783, %735, %771, %759, %747, %738, %713, %726, %714, %704, %690, %677, %681, %668, %659, %645, %636, %627, %608, %584, %567, %595, %570, %575, %539, %558, %555, %551, %542, %457, %530, %508, %475, %469, %460, %439, %432, %410, %400, %386, %373, %377, %364, %355, %341, %332, %323, %304, %1138, %1135, %1126, %1117, %1108, %1094, %1085, %1076, %1062, %1057, %1044, %1028, %1016, %1007, %995, %983, %971, %962, %949, %935, %926, %913, %904, %890, %881, %872, %858, %853, %840, %820, %803, %787, %775, %766, %754, %742, %730, %721, %708, %694, %685, %672, %663, %649, %640, %631, %617, %612, %599, %579, %562, %546, %534, %525, %503, %483, %464, %452, %447, %427, %404, %390, %381, %368, %359, %345, %336, %327, %313, %308, %847, %606, %302, %472, %409, %1131, %1003, %991, %958, %762, %750, %717, %511, %478, %435, %442, %413, %1192, %1176, %1157, %1169, %1181, %1185, %291, %1144
  %1196 = phi i64 [ %252, %291 ], [ %295, %1144 ], [ %295, %1185 ], [ %295, %1181 ], [ %295, %1169 ], [ %295, %1157 ], [ %295, %1176 ], [ %295, %1192 ], [ %295, %350 ], [ %295, %413 ], [ %295, %442 ], [ %295, %435 ], [ %295, %478 ], [ %295, %511 ], [ %295, %654 ], [ %295, %717 ], [ %295, %750 ], [ %295, %762 ], [ %295, %895 ], [ %295, %958 ], [ %295, %991 ], [ %295, %1003 ], [ %295, %1099 ], [ %295, %1131 ], [ %295, %409 ], [ %295, %472 ], [ %295, %302 ], [ %295, %606 ], [ %295, %847 ], [ %295, %308 ], [ %295, %313 ], [ %295, %327 ], [ %295, %336 ], [ %295, %345 ], [ %295, %359 ], [ %295, %368 ], [ %295, %381 ], [ %295, %390 ], [ %295, %404 ], [ %295, %427 ], [ %295, %447 ], [ %295, %452 ], [ %295, %464 ], [ %295, %483 ], [ %295, %503 ], [ %295, %525 ], [ %295, %534 ], [ %295, %546 ], [ %295, %562 ], [ %295, %579 ], [ %295, %599 ], [ %295, %612 ], [ %295, %617 ], [ %295, %631 ], [ %295, %640 ], [ %295, %649 ], [ %295, %663 ], [ %295, %672 ], [ %295, %685 ], [ %295, %694 ], [ %295, %708 ], [ %295, %721 ], [ %295, %730 ], [ %295, %742 ], [ %295, %754 ], [ %295, %766 ], [ %295, %775 ], [ %295, %787 ], [ %295, %803 ], [ %295, %820 ], [ %295, %840 ], [ %295, %853 ], [ %295, %858 ], [ %295, %872 ], [ %295, %881 ], [ %295, %890 ], [ %295, %904 ], [ %295, %913 ], [ %295, %926 ], [ %295, %935 ], [ %295, %949 ], [ %295, %962 ], [ %295, %971 ], [ %295, %983 ], [ %295, %995 ], [ %295, %1007 ], [ %295, %1016 ], [ %295, %1028 ], [ %295, %1044 ], [ %295, %1057 ], [ %295, %1062 ], [ %295, %1076 ], [ %295, %1085 ], [ %295, %1094 ], [ %295, %1108 ], [ %295, %1117 ], [ %295, %1126 ], [ %295, %1135 ], [ %295, %1138 ], [ %295, %304 ], [ %295, %323 ], [ %295, %332 ], [ %295, %341 ], [ %295, %355 ], [ %295, %364 ], [ %295, %377 ], [ %295, %373 ], [ %295, %386 ], [ %295, %400 ], [ %295, %410 ], [ %295, %432 ], [ %295, %439 ], [ %295, %460 ], [ %295, %469 ], [ %295, %475 ], [ %295, %508 ], [ %295, %530 ], [ %295, %457 ], [ %295, %542 ], [ %295, %551 ], [ %295, %555 ], [ %295, %558 ], [ %295, %539 ], [ %295, %575 ], [ %295, %570 ], [ %295, %595 ], [ %295, %567 ], [ %295, %584 ], [ %295, %608 ], [ %295, %627 ], [ %295, %636 ], [ %295, %645 ], [ %295, %659 ], [ %295, %668 ], [ %295, %681 ], [ %295, %677 ], [ %295, %690 ], [ %295, %704 ], [ %295, %714 ], [ %295, %726 ], [ %295, %713 ], [ %295, %738 ], [ %295, %747 ], [ %295, %759 ], [ %295, %771 ], [ %295, %735 ], [ %295, %783 ], [ %295, %792 ], [ %295, %796 ], [ %295, %799 ], [ %295, %780 ], [ %295, %816 ], [ %295, %811 ], [ %295, %836 ], [ %295, %808 ], [ %295, %825 ], [ %295, %849 ], [ %295, %868 ], [ %295, %877 ], [ %295, %886 ], [ %295, %900 ], [ %295, %909 ], [ %295, %922 ], [ %295, %918 ], [ %295, %931 ], [ %295, %945 ], [ %295, %955 ], [ %295, %967 ], [ %295, %954 ], [ %295, %979 ], [ %295, %988 ], [ %295, %1000 ], [ %295, %1012 ], [ %295, %976 ], [ %295, %1024 ], [ %295, %1033 ], [ %295, %1037 ], [ %295, %1040 ], [ %295, %1021 ], [ %295, %1053 ], [ %295, %1072 ], [ %295, %1081 ], [ %295, %1090 ], [ %295, %1104 ], [ %295, %1113 ], [ %295, %1122 ], [ %295, %1051 ], [ %295, %1133 ], [ %295, %1154 ], [ %295, %1178 ]
  %1197 = phi i32 [ %293, %291 ], [ %1151, %1144 ], [ 0, %1185 ], [ 0, %1181 ], [ 0, %1169 ], [ 0, %1157 ], [ 0, %1176 ], [ %1194, %1192 ], [ 0, %350 ], [ 0, %413 ], [ 0, %442 ], [ 0, %435 ], [ 0, %478 ], [ 0, %511 ], [ 0, %654 ], [ 0, %717 ], [ 0, %750 ], [ 0, %762 ], [ 0, %895 ], [ 0, %958 ], [ 0, %991 ], [ 0, %1003 ], [ 0, %1099 ], [ 0, %1131 ], [ 0, %409 ], [ 0, %472 ], [ 0, %302 ], [ 0, %606 ], [ 0, %847 ], [ 0, %308 ], [ 0, %313 ], [ 0, %327 ], [ 0, %336 ], [ 0, %345 ], [ 0, %359 ], [ 0, %368 ], [ 0, %381 ], [ 0, %390 ], [ 0, %404 ], [ 0, %427 ], [ 0, %447 ], [ 0, %452 ], [ 0, %464 ], [ 0, %483 ], [ 0, %503 ], [ 0, %525 ], [ 0, %534 ], [ 0, %546 ], [ 0, %562 ], [ 0, %579 ], [ 0, %599 ], [ 0, %612 ], [ 0, %617 ], [ 0, %631 ], [ 0, %640 ], [ 0, %649 ], [ 0, %663 ], [ 0, %672 ], [ 0, %685 ], [ 0, %694 ], [ 0, %708 ], [ 0, %721 ], [ 0, %730 ], [ 0, %742 ], [ 0, %754 ], [ 0, %766 ], [ 0, %775 ], [ 0, %787 ], [ 0, %803 ], [ 0, %820 ], [ 0, %840 ], [ 0, %853 ], [ 0, %858 ], [ 0, %872 ], [ 0, %881 ], [ 0, %890 ], [ 0, %904 ], [ 0, %913 ], [ 0, %926 ], [ 0, %935 ], [ 0, %949 ], [ 0, %962 ], [ 0, %971 ], [ 0, %983 ], [ 0, %995 ], [ 0, %1007 ], [ 0, %1016 ], [ 0, %1028 ], [ 0, %1044 ], [ 0, %1057 ], [ 0, %1062 ], [ 0, %1076 ], [ 0, %1085 ], [ 0, %1094 ], [ 0, %1108 ], [ 0, %1117 ], [ 0, %1126 ], [ 0, %1135 ], [ 0, %1138 ], [ 0, %304 ], [ 0, %323 ], [ 0, %332 ], [ 0, %341 ], [ 0, %355 ], [ 0, %364 ], [ 0, %377 ], [ 0, %373 ], [ 0, %386 ], [ 0, %400 ], [ 0, %410 ], [ 0, %432 ], [ 0, %439 ], [ 0, %460 ], [ 0, %469 ], [ 0, %475 ], [ 0, %508 ], [ 0, %530 ], [ 0, %457 ], [ 0, %542 ], [ 0, %551 ], [ 0, %555 ], [ 0, %558 ], [ 0, %539 ], [ 0, %575 ], [ 0, %570 ], [ 0, %595 ], [ 0, %567 ], [ 0, %584 ], [ 0, %608 ], [ 0, %627 ], [ 0, %636 ], [ 0, %645 ], [ 0, %659 ], [ 0, %668 ], [ 0, %681 ], [ 0, %677 ], [ 0, %690 ], [ 0, %704 ], [ 0, %714 ], [ 0, %726 ], [ 0, %713 ], [ 0, %738 ], [ 0, %747 ], [ 0, %759 ], [ 0, %771 ], [ 0, %735 ], [ 0, %783 ], [ 0, %792 ], [ 0, %796 ], [ 0, %799 ], [ 0, %780 ], [ 0, %816 ], [ 0, %811 ], [ 0, %836 ], [ 0, %808 ], [ 0, %825 ], [ 0, %849 ], [ 0, %868 ], [ 0, %877 ], [ 0, %886 ], [ 0, %900 ], [ 0, %909 ], [ 0, %922 ], [ 0, %918 ], [ 0, %931 ], [ 0, %945 ], [ 0, %955 ], [ 0, %967 ], [ 0, %954 ], [ 0, %979 ], [ 0, %988 ], [ 0, %1000 ], [ 0, %1012 ], [ 0, %976 ], [ 0, %1024 ], [ 0, %1033 ], [ 0, %1037 ], [ 0, %1040 ], [ 0, %1021 ], [ 0, %1053 ], [ 0, %1072 ], [ 0, %1081 ], [ 0, %1090 ], [ 0, %1104 ], [ 0, %1113 ], [ 0, %1122 ], [ 0, %1051 ], [ 0, %1133 ], [ 0, %1154 ], [ 0, %1178 ]
  %1198 = load i64, ptr %13, align 8, !tbaa !9
  %1199 = icmp ult i64 %1198, 256
  br i1 %1199, label %1203, label %1427

1200:                                             ; preds = %277
  %1201 = add i64 %252, 1
  %1202 = icmp ult i64 %278, 256
  br i1 %1202, label %1285, label %1427

1203:                                             ; preds = %1195
  %1204 = getelementptr inbounds i8, ptr %97, i64 %1198
  %1205 = load i8, ptr %1204, align 1, !tbaa !17
  %1206 = load ptr, ptr %106, align 8, !tbaa !330
  %1207 = zext i8 %1205 to i64
  %1208 = getelementptr inbounds i16, ptr %1206, i64 %1207
  %1209 = load i16, ptr %1208, align 2, !tbaa !139
  %1210 = icmp eq i16 %1209, 0
  br i1 %1210, label %1211, label %1285

1211:                                             ; preds = %1203
  %1212 = load i16, ptr %192, align 8, !tbaa !152
  %1213 = add i16 %1212, 1
  store i16 %1213, ptr %192, align 8, !tbaa !152
  store i16 %1213, ptr %1208, align 2, !tbaa !139
  %1214 = load i32, ptr %191, align 8, !tbaa !50
  %1215 = icmp eq i32 %1214, 0
  br i1 %1215, label %1283, label %1216

1216:                                             ; preds = %1211
  %1217 = call ptr @Perl_newSV(i64 noundef 7) #15
  %1218 = getelementptr inbounds %struct.sv, ptr %1217, i64 0, i32 3
  %1219 = load ptr, ptr %1218, align 8, !tbaa !17
  %1220 = call ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef %1219, i64 noundef %1207, i64 noundef 0) #15
  %1221 = getelementptr inbounds %struct.sv, ptr %1217, i64 0, i32 2
  %1222 = load i32, ptr %1221, align 4, !tbaa !13
  %1223 = and i32 %1222, 15
  %1224 = zext i32 %1223 to i64
  %1225 = getelementptr inbounds [0 x i8], ptr @PL_valid_types_PVX, i64 0, i64 %1224
  %1226 = load i8, ptr %1225, align 1, !tbaa !11, !range !18, !noundef !19
  %1227 = icmp ne i8 %1226, 0
  %1228 = and i32 %1222, 255
  %1229 = icmp eq i32 %1228, 8
  %1230 = or i1 %1227, %1229
  br i1 %1230, label %1233, label %1231

1231:                                             ; preds = %1216
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.315, i32 noundef 2333) #15
  %1232 = load i32, ptr %1221, align 4, !tbaa !13
  br label %1233

1233:                                             ; preds = %1216, %1231
  %1234 = phi i32 [ %1222, %1216 ], [ %1232, %1231 ]
  %1235 = and i32 %1234, 49152
  %1236 = icmp eq i32 %1235, 32768
  br i1 %1236, label %1237, label %1243

1237:                                             ; preds = %1233
  %1238 = and i32 %1234, 255
  %1239 = add nsw i32 %1238, -9
  %1240 = icmp ult i32 %1239, 2
  br i1 %1240, label %1241, label %1243

1241:                                             ; preds = %1237
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.316, i32 noundef 2333) #15
  %1242 = load i32, ptr %1221, align 4, !tbaa !13
  br label %1243

1243:                                             ; preds = %1237, %1233, %1241
  %1244 = phi i32 [ %1234, %1237 ], [ %1234, %1233 ], [ %1242, %1241 ]
  %1245 = and i32 %1244, 255
  %1246 = icmp eq i32 %1245, 15
  %1247 = load ptr, ptr %1217, align 8, !tbaa !16
  br i1 %1246, label %1248, label %1256

1248:                                             ; preds = %1243
  %1249 = getelementptr inbounds %struct.xpvio, ptr %1247, i64 0, i32 17
  %1250 = load i8, ptr %1249, align 1, !tbaa !120
  %1251 = and i8 %1250, 64
  %1252 = icmp eq i8 %1251, 0
  br i1 %1252, label %1253, label %1256

1253:                                             ; preds = %1248
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.317, i32 noundef 2333) #15
  %1254 = load ptr, ptr %1217, align 8, !tbaa !16
  %1255 = load i32, ptr %1221, align 4, !tbaa !13
  br label %1256

1256:                                             ; preds = %1243, %1248, %1253
  %1257 = phi i32 [ %1244, %1243 ], [ %1244, %1248 ], [ %1255, %1253 ]
  %1258 = phi ptr [ %1247, %1243 ], [ %1247, %1248 ], [ %1254, %1253 ]
  %1259 = ptrtoint ptr %1220 to i64
  %1260 = ptrtoint ptr %1219 to i64
  %1261 = sub i64 %1259, %1260
  %1262 = getelementptr inbounds %struct.xpv, ptr %1258, i64 0, i32 2
  store i64 %1261, ptr %1262, align 8, !tbaa !38
  %1263 = and i32 %1257, 2048
  %1264 = icmp eq i32 %1263, 0
  br i1 %1264, label %1270, label %1265

1265:                                             ; preds = %1256
  %1266 = load ptr, ptr %1218, align 8, !tbaa !17
  %1267 = icmp eq ptr %1266, null
  br i1 %1267, label %1270, label %1268

1268:                                             ; preds = %1265
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.318, i32 noundef 2333) #15
  %1269 = load i32, ptr %1221, align 4, !tbaa !13
  br label %1270

1270:                                             ; preds = %1256, %1265, %1268
  %1271 = phi i32 [ %1257, %1256 ], [ %1257, %1265 ], [ %1269, %1268 ]
  %1272 = and i32 %1271, 49152
  %1273 = icmp eq i32 %1272, 32768
  br i1 %1273, label %1274, label %1280

1274:                                             ; preds = %1270
  %1275 = and i32 %1271, 255
  %1276 = add nsw i32 %1275, -9
  %1277 = icmp ult i32 %1276, 2
  br i1 %1277, label %1278, label %1280

1278:                                             ; preds = %1274
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.316, i32 noundef 2333) #15
  %1279 = load i32, ptr %1221, align 4, !tbaa !13
  br label %1280

1280:                                             ; preds = %1274, %1270, %1278
  %1281 = phi i32 [ %1271, %1274 ], [ %1271, %1270 ], [ %1279, %1278 ]
  %1282 = or i32 %1281, 536888320
  store i32 %1282, ptr %1221, align 4, !tbaa !13
  call void @Perl_av_push(ptr noundef %19, ptr noundef nonnull %1217) #15
  br label %1285

1283:                                             ; preds = %1211
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %15) #15
  store i8 %1205, ptr %15, align 1, !tbaa !17
  %1284 = call ptr @Perl_newSVpvn(ptr noundef nonnull %15, i64 noundef 1) #15
  call void @Perl_av_push(ptr noundef %19, ptr noundef %1284) #15
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %15) #15
  br label %1285

1285:                                             ; preds = %1200, %1203, %1283, %1280
  %1286 = phi i64 [ %1196, %1203 ], [ %1196, %1283 ], [ %1196, %1280 ], [ %1201, %1200 ]
  %1287 = phi i32 [ %1197, %1203 ], [ %1197, %1283 ], [ %1197, %1280 ], [ %251, %1200 ]
  %1288 = load ptr, ptr %106, align 8, !tbaa !330
  %1289 = load i64, ptr %13, align 8, !tbaa !9
  %1290 = getelementptr inbounds i16, ptr %1288, i64 %1289
  %1291 = load i16, ptr %1290, align 2, !tbaa !139
  %1292 = icmp eq i16 %1291, 0
  br i1 %1292, label %1293, label %1369

1293:                                             ; preds = %1285
  %1294 = load i16, ptr %192, align 8, !tbaa !152
  %1295 = add i16 %1294, 1
  store i16 %1295, ptr %192, align 8, !tbaa !152
  store i16 %1295, ptr %1290, align 2, !tbaa !139
  %1296 = load i32, ptr %191, align 8, !tbaa !50
  %1297 = icmp eq i32 %1296, 0
  br i1 %1297, label %1366, label %1298

1298:                                             ; preds = %1293
  %1299 = call ptr @Perl_newSV(i64 noundef 7) #15
  %1300 = getelementptr inbounds %struct.sv, ptr %1299, i64 0, i32 3
  %1301 = load ptr, ptr %1300, align 8, !tbaa !17
  %1302 = load i64, ptr %13, align 8, !tbaa !9
  %1303 = call ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef %1301, i64 noundef %1302, i64 noundef 0) #15
  %1304 = getelementptr inbounds %struct.sv, ptr %1299, i64 0, i32 2
  %1305 = load i32, ptr %1304, align 4, !tbaa !13
  %1306 = and i32 %1305, 15
  %1307 = zext i32 %1306 to i64
  %1308 = getelementptr inbounds [0 x i8], ptr @PL_valid_types_PVX, i64 0, i64 %1307
  %1309 = load i8, ptr %1308, align 1, !tbaa !11, !range !18, !noundef !19
  %1310 = icmp ne i8 %1309, 0
  %1311 = and i32 %1305, 255
  %1312 = icmp eq i32 %1311, 8
  %1313 = or i1 %1310, %1312
  br i1 %1313, label %1316, label %1314

1314:                                             ; preds = %1298
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.315, i32 noundef 2338) #15
  %1315 = load i32, ptr %1304, align 4, !tbaa !13
  br label %1316

1316:                                             ; preds = %1298, %1314
  %1317 = phi i32 [ %1305, %1298 ], [ %1315, %1314 ]
  %1318 = and i32 %1317, 49152
  %1319 = icmp eq i32 %1318, 32768
  br i1 %1319, label %1320, label %1326

1320:                                             ; preds = %1316
  %1321 = and i32 %1317, 255
  %1322 = add nsw i32 %1321, -9
  %1323 = icmp ult i32 %1322, 2
  br i1 %1323, label %1324, label %1326

1324:                                             ; preds = %1320
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.316, i32 noundef 2338) #15
  %1325 = load i32, ptr %1304, align 4, !tbaa !13
  br label %1326

1326:                                             ; preds = %1320, %1316, %1324
  %1327 = phi i32 [ %1317, %1320 ], [ %1317, %1316 ], [ %1325, %1324 ]
  %1328 = and i32 %1327, 255
  %1329 = icmp eq i32 %1328, 15
  %1330 = load ptr, ptr %1299, align 8, !tbaa !16
  br i1 %1329, label %1331, label %1339

1331:                                             ; preds = %1326
  %1332 = getelementptr inbounds %struct.xpvio, ptr %1330, i64 0, i32 17
  %1333 = load i8, ptr %1332, align 1, !tbaa !120
  %1334 = and i8 %1333, 64
  %1335 = icmp eq i8 %1334, 0
  br i1 %1335, label %1336, label %1339

1336:                                             ; preds = %1331
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.317, i32 noundef 2338) #15
  %1337 = load ptr, ptr %1299, align 8, !tbaa !16
  %1338 = load i32, ptr %1304, align 4, !tbaa !13
  br label %1339

1339:                                             ; preds = %1326, %1331, %1336
  %1340 = phi i32 [ %1327, %1326 ], [ %1327, %1331 ], [ %1338, %1336 ]
  %1341 = phi ptr [ %1330, %1326 ], [ %1330, %1331 ], [ %1337, %1336 ]
  %1342 = ptrtoint ptr %1303 to i64
  %1343 = ptrtoint ptr %1301 to i64
  %1344 = sub i64 %1342, %1343
  %1345 = getelementptr inbounds %struct.xpv, ptr %1341, i64 0, i32 2
  store i64 %1344, ptr %1345, align 8, !tbaa !38
  %1346 = and i32 %1340, 2048
  %1347 = icmp eq i32 %1346, 0
  br i1 %1347, label %1353, label %1348

1348:                                             ; preds = %1339
  %1349 = load ptr, ptr %1300, align 8, !tbaa !17
  %1350 = icmp eq ptr %1349, null
  br i1 %1350, label %1353, label %1351

1351:                                             ; preds = %1348
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.318, i32 noundef 2338) #15
  %1352 = load i32, ptr %1304, align 4, !tbaa !13
  br label %1353

1353:                                             ; preds = %1339, %1348, %1351
  %1354 = phi i32 [ %1340, %1339 ], [ %1340, %1348 ], [ %1352, %1351 ]
  %1355 = and i32 %1354, 49152
  %1356 = icmp eq i32 %1355, 32768
  br i1 %1356, label %1357, label %1363

1357:                                             ; preds = %1353
  %1358 = and i32 %1354, 255
  %1359 = add nsw i32 %1358, -9
  %1360 = icmp ult i32 %1359, 2
  br i1 %1360, label %1361, label %1363

1361:                                             ; preds = %1357
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.316, i32 noundef 2338) #15
  %1362 = load i32, ptr %1304, align 4, !tbaa !13
  br label %1363

1363:                                             ; preds = %1357, %1353, %1361
  %1364 = phi i32 [ %1354, %1357 ], [ %1354, %1353 ], [ %1362, %1361 ]
  %1365 = or i32 %1364, 536888320
  store i32 %1365, ptr %1304, align 4, !tbaa !13
  call void @Perl_av_push(ptr noundef %19, ptr noundef nonnull %1299) #15
  br label %1369

1366:                                             ; preds = %1293
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %16) #15
  %1367 = trunc i64 %1289 to i8
  store i8 %1367, ptr %16, align 1, !tbaa !17
  %1368 = call ptr @Perl_newSVpvn(ptr noundef nonnull %16, i64 noundef 1) #15
  call void @Perl_av_push(ptr noundef %19, ptr noundef %1368) #15
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %16) #15
  br label %1369

1369:                                             ; preds = %1363, %1366, %1285
  %1370 = and i8 %254, 1
  %1371 = icmp eq i8 %1370, 0
  br i1 %1371, label %1575, label %1372

1372:                                             ; preds = %1369
  %1373 = load i64, ptr %13, align 8, !tbaa !9
  %1374 = trunc i64 %1373 to i8
  %1375 = and i8 %1374, 7
  %1376 = shl nuw i8 1, %1375
  %1377 = load ptr, ptr %188, align 8, !tbaa !232
  %1378 = lshr i64 %1373, 3
  %1379 = and i64 %1378, 31
  %1380 = getelementptr inbounds i8, ptr %1377, i64 %1379
  %1381 = load i8, ptr %1380, align 1, !tbaa !17
  %1382 = or i8 %1376, %1381
  store i8 %1382, ptr %1380, align 1, !tbaa !17
  br i1 %95, label %1396, label %1383

1383:                                             ; preds = %1372
  %1384 = load i64, ptr %13, align 8, !tbaa !9
  %1385 = and i64 %1384, 255
  %1386 = getelementptr inbounds i8, ptr %97, i64 %1385
  %1387 = load i8, ptr %1386, align 1, !tbaa !17
  %1388 = and i8 %1387, 7
  %1389 = shl nuw i8 1, %1388
  %1390 = load ptr, ptr %188, align 8, !tbaa !232
  %1391 = lshr i8 %1387, 3
  %1392 = zext i8 %1391 to i64
  %1393 = getelementptr inbounds i8, ptr %1390, i64 %1392
  %1394 = load i8, ptr %1393, align 1, !tbaa !17
  %1395 = or i8 %1389, %1394
  store i8 %1395, ptr %1393, align 1, !tbaa !17
  br label %1396

1396:                                             ; preds = %1383, %1372
  %1397 = load i32, ptr %191, align 8, !tbaa !50
  %1398 = icmp ne i32 %1397, 0
  %1399 = load i64, ptr %13, align 8
  %1400 = icmp ult i64 %1399, 128
  %1401 = select i1 %1398, i1 true, i1 %1400
  br i1 %1401, label %1575, label %1402

1402:                                             ; preds = %1396
  %1403 = icmp ult i64 %1399, 2048
  br i1 %1403, label %1404, label %1406

1404:                                             ; preds = %1402
  %1405 = load ptr, ptr %188, align 8, !tbaa !232
  br label %1412

1406:                                             ; preds = %1402
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.319, i32 noundef 2352) #15
  %1407 = load i64, ptr %13, align 8, !tbaa !9
  %1408 = load ptr, ptr %188, align 8, !tbaa !232
  %1409 = icmp ult i64 %1407, 2048
  br i1 %1409, label %1412, label %1410

1410:                                             ; preds = %1406
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.319, i32 noundef 2352) #15
  %1411 = load i64, ptr %13, align 8, !tbaa !9
  br label %1412

1412:                                             ; preds = %1404, %1406, %1410
  %1413 = phi i64 [ %1399, %1404 ], [ %1407, %1406 ], [ %1411, %1410 ]
  %1414 = phi ptr [ %1405, %1404 ], [ %1408, %1406 ], [ %1408, %1410 ]
  %1415 = phi i64 [ %1399, %1404 ], [ %1407, %1406 ], [ %1407, %1410 ]
  %1416 = trunc i64 %1415 to i32
  %1417 = lshr i32 %1416, 6
  %1418 = and i32 %1417, 7
  %1419 = shl nuw nsw i32 1, %1418
  %1420 = lshr i64 %1413, 9
  %1421 = and i64 %1420, 7
  %1422 = or i64 %1421, 24
  %1423 = getelementptr inbounds i8, ptr %1414, i64 %1422
  %1424 = load i8, ptr %1423, align 1, !tbaa !17
  %1425 = trunc i32 %1419 to i8
  %1426 = or i8 %1424, %1425
  store i8 %1426, ptr %1423, align 1, !tbaa !17
  br label %1575

1427:                                             ; preds = %1200, %1195
  %1428 = phi i32 [ %251, %1200 ], [ %1197, %1195 ]
  %1429 = phi i64 [ %1201, %1200 ], [ %1196, %1195 ]
  %1430 = icmp eq ptr %249, null
  br i1 %1430, label %1431, label %1433

1431:                                             ; preds = %1427
  %1432 = call ptr @Perl_newSV_type(i32 noundef 12) #15
  br label %1433

1433:                                             ; preds = %1431, %1427
  %1434 = phi ptr [ %249, %1427 ], [ %1432, %1431 ]
  %1435 = call ptr @Perl_hv_common_key_len(ptr noundef %1434, ptr noundef nonnull %13, i32 noundef 8, i32 noundef 48, ptr noundef null, i32 noundef 0) #15
  %1436 = icmp eq ptr %1435, null
  br i1 %1436, label %1437, label %1439

1437:                                             ; preds = %1433
  %1438 = load i64, ptr %13, align 8, !tbaa !9
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.320, i64 noundef %1438) #15
  br label %1439

1439:                                             ; preds = %1437, %1433
  %1440 = load ptr, ptr %1435, align 8, !tbaa !5
  %1441 = icmp eq ptr %1440, null
  br i1 %1441, label %1496, label %1442

1442:                                             ; preds = %1439
  %1443 = getelementptr inbounds %struct.sv, ptr %1440, i64 0, i32 2
  %1444 = load i32, ptr %1443, align 4, !tbaa !13
  %1445 = and i32 %1444, 2097152
  %1446 = icmp eq i32 %1445, 0
  br i1 %1446, label %1449, label %1447

1447:                                             ; preds = %1442
  %1448 = call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %1440, i32 noundef 2) #15
  br i1 %1448, label %1575, label %1496

1449:                                             ; preds = %1442
  %1450 = and i32 %1444, 65280
  %1451 = icmp ne i32 %1450, 0
  %1452 = and i32 %1444, 255
  %1453 = icmp eq i32 %1452, 8
  %1454 = or i1 %1451, %1453
  %1455 = and i32 %1444, 16826623
  %1456 = icmp eq i32 %1455, 16777226
  %1457 = or i1 %1456, %1454
  br i1 %1457, label %1458, label %1496

1458:                                             ; preds = %1449
  %1459 = and i32 %1444, 1024
  %1460 = icmp eq i32 %1459, 0
  br i1 %1460, label %1475, label %1461

1461:                                             ; preds = %1458
  %1462 = load ptr, ptr %1440, align 8, !tbaa !16
  %1463 = icmp eq ptr %1462, null
  br i1 %1463, label %1496, label %1464

1464:                                             ; preds = %1461
  %1465 = getelementptr inbounds %struct.xpv, ptr %1462, i64 0, i32 2
  %1466 = load i64, ptr %1465, align 8, !tbaa !38
  %1467 = icmp ugt i64 %1466, 1
  br i1 %1467, label %1575, label %1468

1468:                                             ; preds = %1464
  %1469 = icmp eq i64 %1466, 0
  br i1 %1469, label %1496, label %1470

1470:                                             ; preds = %1468
  %1471 = getelementptr inbounds %struct.sv, ptr %1440, i64 0, i32 3
  %1472 = load ptr, ptr %1471, align 8, !tbaa !17
  %1473 = load i8, ptr %1472, align 1, !tbaa !17
  %1474 = icmp eq i8 %1473, 48
  br i1 %1474, label %1496, label %1575

1475:                                             ; preds = %1458
  %1476 = and i32 %1444, 768
  %1477 = icmp eq i32 %1476, 0
  br i1 %1477, label %1494, label %1478

1478:                                             ; preds = %1475
  %1479 = and i32 %1444, 256
  %1480 = icmp eq i32 %1479, 0
  br i1 %1480, label %1486, label %1481

1481:                                             ; preds = %1478
  %1482 = load ptr, ptr %1440, align 8, !tbaa !16
  %1483 = getelementptr inbounds %struct.xpviv, ptr %1482, i64 0, i32 4
  %1484 = load i64, ptr %1483, align 8, !tbaa !17
  %1485 = icmp eq i64 %1484, 0
  br i1 %1485, label %1486, label %1575

1486:                                             ; preds = %1481, %1478
  %1487 = and i32 %1444, 512
  %1488 = icmp eq i32 %1487, 0
  br i1 %1488, label %1496, label %1489

1489:                                             ; preds = %1486
  %1490 = load ptr, ptr %1440, align 8, !tbaa !16
  %1491 = getelementptr inbounds %struct.xpvnv, ptr %1490, i64 0, i32 5
  %1492 = load double, ptr %1491, align 8, !tbaa !17
  %1493 = fcmp une double %1492, 0.000000e+00
  br i1 %1493, label %1575, label %1496

1494:                                             ; preds = %1475
  %1495 = call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %1440, i32 noundef 0) #15
  br i1 %1495, label %1575, label %1496

1496:                                             ; preds = %1489, %1449, %1439, %1494, %1486, %1470, %1468, %1461, %1447
  %1497 = load ptr, ptr %1435, align 8, !tbaa !5
  %1498 = load i16, ptr %192, align 8, !tbaa !152
  %1499 = add i16 %1498, 1
  store i16 %1499, ptr %192, align 8, !tbaa !152
  %1500 = zext i16 %1499 to i64
  call void @Perl_sv_setiv(ptr noundef %1497, i64 noundef %1500) #15
  %1501 = load i32, ptr %191, align 8, !tbaa !50
  %1502 = icmp eq i32 %1501, 0
  br i1 %1502, label %1571, label %1503

1503:                                             ; preds = %1496
  %1504 = call ptr @Perl_newSV(i64 noundef 7) #15
  %1505 = getelementptr inbounds %struct.sv, ptr %1504, i64 0, i32 3
  %1506 = load ptr, ptr %1505, align 8, !tbaa !17
  %1507 = load i64, ptr %13, align 8, !tbaa !9
  %1508 = call ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef %1506, i64 noundef %1507, i64 noundef 0) #15
  %1509 = getelementptr inbounds %struct.sv, ptr %1504, i64 0, i32 2
  %1510 = load i32, ptr %1509, align 4, !tbaa !13
  %1511 = and i32 %1510, 15
  %1512 = zext i32 %1511 to i64
  %1513 = getelementptr inbounds [0 x i8], ptr @PL_valid_types_PVX, i64 0, i64 %1512
  %1514 = load i8, ptr %1513, align 1, !tbaa !11, !range !18, !noundef !19
  %1515 = icmp ne i8 %1514, 0
  %1516 = and i32 %1510, 255
  %1517 = icmp eq i32 %1516, 8
  %1518 = or i1 %1515, %1517
  br i1 %1518, label %1521, label %1519

1519:                                             ; preds = %1503
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.315, i32 noundef 2377) #15
  %1520 = load i32, ptr %1509, align 4, !tbaa !13
  br label %1521

1521:                                             ; preds = %1503, %1519
  %1522 = phi i32 [ %1510, %1503 ], [ %1520, %1519 ]
  %1523 = and i32 %1522, 49152
  %1524 = icmp eq i32 %1523, 32768
  br i1 %1524, label %1525, label %1531

1525:                                             ; preds = %1521
  %1526 = and i32 %1522, 255
  %1527 = add nsw i32 %1526, -9
  %1528 = icmp ult i32 %1527, 2
  br i1 %1528, label %1529, label %1531

1529:                                             ; preds = %1525
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.316, i32 noundef 2377) #15
  %1530 = load i32, ptr %1509, align 4, !tbaa !13
  br label %1531

1531:                                             ; preds = %1525, %1521, %1529
  %1532 = phi i32 [ %1522, %1525 ], [ %1522, %1521 ], [ %1530, %1529 ]
  %1533 = and i32 %1532, 255
  %1534 = icmp eq i32 %1533, 15
  %1535 = load ptr, ptr %1504, align 8, !tbaa !16
  br i1 %1534, label %1536, label %1544

1536:                                             ; preds = %1531
  %1537 = getelementptr inbounds %struct.xpvio, ptr %1535, i64 0, i32 17
  %1538 = load i8, ptr %1537, align 1, !tbaa !120
  %1539 = and i8 %1538, 64
  %1540 = icmp eq i8 %1539, 0
  br i1 %1540, label %1541, label %1544

1541:                                             ; preds = %1536
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.317, i32 noundef 2377) #15
  %1542 = load ptr, ptr %1504, align 8, !tbaa !16
  %1543 = load i32, ptr %1509, align 4, !tbaa !13
  br label %1544

1544:                                             ; preds = %1531, %1536, %1541
  %1545 = phi i32 [ %1532, %1531 ], [ %1532, %1536 ], [ %1543, %1541 ]
  %1546 = phi ptr [ %1535, %1531 ], [ %1535, %1536 ], [ %1542, %1541 ]
  %1547 = ptrtoint ptr %1508 to i64
  %1548 = ptrtoint ptr %1506 to i64
  %1549 = sub i64 %1547, %1548
  %1550 = getelementptr inbounds %struct.xpv, ptr %1546, i64 0, i32 2
  store i64 %1549, ptr %1550, align 8, !tbaa !38
  %1551 = and i32 %1545, 2048
  %1552 = icmp eq i32 %1551, 0
  br i1 %1552, label %1558, label %1553

1553:                                             ; preds = %1544
  %1554 = load ptr, ptr %1505, align 8, !tbaa !17
  %1555 = icmp eq ptr %1554, null
  br i1 %1555, label %1558, label %1556

1556:                                             ; preds = %1553
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.318, i32 noundef 2377) #15
  %1557 = load i32, ptr %1509, align 4, !tbaa !13
  br label %1558

1558:                                             ; preds = %1544, %1553, %1556
  %1559 = phi i32 [ %1545, %1544 ], [ %1545, %1553 ], [ %1557, %1556 ]
  %1560 = and i32 %1559, 49152
  %1561 = icmp eq i32 %1560, 32768
  br i1 %1561, label %1562, label %1568

1562:                                             ; preds = %1558
  %1563 = and i32 %1559, 255
  %1564 = add nsw i32 %1563, -9
  %1565 = icmp ult i32 %1564, 2
  br i1 %1565, label %1566, label %1568

1566:                                             ; preds = %1562
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.316, i32 noundef 2377) #15
  %1567 = load i32, ptr %1509, align 4, !tbaa !13
  br label %1568

1568:                                             ; preds = %1562, %1558, %1566
  %1569 = phi i32 [ %1559, %1562 ], [ %1559, %1558 ], [ %1567, %1566 ]
  %1570 = or i32 %1569, 536888320
  store i32 %1570, ptr %1509, align 4, !tbaa !13
  call void @Perl_av_push(ptr noundef %19, ptr noundef nonnull %1504) #15
  br label %1575

1571:                                             ; preds = %1496
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %17) #15
  %1572 = load i64, ptr %13, align 8, !tbaa !9
  %1573 = trunc i64 %1572 to i8
  store i8 %1573, ptr %17, align 1, !tbaa !17
  %1574 = call ptr @Perl_newSVpvn(ptr noundef nonnull %17, i64 noundef 1) #15
  call void @Perl_av_push(ptr noundef %19, ptr noundef %1574) #15
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %17) #15
  br label %1575

1575:                                             ; preds = %1447, %1464, %1470, %1481, %1489, %1494, %1571, %1568, %1396, %1412, %1369
  %1576 = phi i32 [ %1287, %1369 ], [ %1287, %1412 ], [ %1287, %1396 ], [ %1428, %1568 ], [ %1428, %1571 ], [ %1428, %1494 ], [ %1428, %1489 ], [ %1428, %1481 ], [ %1428, %1470 ], [ %1428, %1464 ], [ %1428, %1447 ]
  %1577 = phi i64 [ %1286, %1369 ], [ %1286, %1412 ], [ %1286, %1396 ], [ %1429, %1568 ], [ %1429, %1571 ], [ %1429, %1494 ], [ %1429, %1489 ], [ %1429, %1481 ], [ %1429, %1470 ], [ %1429, %1464 ], [ %1429, %1447 ]
  %1578 = phi i8 [ %254, %1369 ], [ 0, %1412 ], [ 0, %1396 ], [ %254, %1568 ], [ %254, %1571 ], [ %254, %1494 ], [ %254, %1489 ], [ %254, %1481 ], [ %254, %1470 ], [ %254, %1464 ], [ %254, %1447 ]
  %1579 = phi ptr [ %249, %1369 ], [ %249, %1412 ], [ %249, %1396 ], [ %1434, %1568 ], [ %1434, %1571 ], [ %1434, %1494 ], [ %1434, %1489 ], [ %1434, %1481 ], [ %1434, %1470 ], [ %1434, %1464 ], [ %1434, %1447 ]
  %1580 = load i64, ptr %12, align 8, !tbaa !9
  %1581 = getelementptr inbounds i8, ptr %250, i64 %1580
  %1582 = icmp ult ptr %1581, %223
  br i1 %1582, label %248, label %1583, !llvm.loop !340

1583:                                             ; preds = %1575, %244
  %1584 = phi i64 [ 0, %244 ], [ %279, %1575 ]
  %1585 = phi i64 [ 0, %244 ], [ %1577, %1575 ]
  %1586 = phi ptr [ %195, %244 ], [ %1579, %1575 ]
  %1587 = icmp eq ptr %196, %2
  br i1 %1587, label %1588, label %1589

1588:                                             ; preds = %1583
  store i64 %1585, ptr %189, align 8, !tbaa !150
  store i64 %1584, ptr %193, align 8, !tbaa !230
  br label %1597

1589:                                             ; preds = %1583
  %1590 = load i64, ptr %189, align 8, !tbaa !150
  %1591 = icmp ult i64 %1585, %1590
  br i1 %1591, label %1592, label %1593

1592:                                             ; preds = %1589
  store i64 %1585, ptr %189, align 8, !tbaa !150
  br label %1597

1593:                                             ; preds = %1589
  %1594 = load i64, ptr %193, align 8, !tbaa !230
  %1595 = icmp ugt i64 %1584, %1594
  br i1 %1595, label %1596, label %1597

1596:                                             ; preds = %1593
  store i64 %1584, ptr %193, align 8, !tbaa !230
  br label %1597

1597:                                             ; preds = %221, %1588, %1593, %1596, %1592
  %1598 = phi ptr [ %195, %221 ], [ %1586, %1592 ], [ %1586, %1596 ], [ %1586, %1593 ], [ %1586, %1588 ]
  %1599 = call ptr @Perl_regnext(ptr noundef %196) #15
  %1600 = icmp ult ptr %1599, %3
  br i1 %1600, label %194, label %1601, !llvm.loop !341

1601:                                             ; preds = %1597, %184
  %1602 = phi ptr [ null, %184 ], [ %1598, %1597 ]
  %1603 = load volatile i64, ptr %14, align 8, !tbaa !9
  %1604 = and i64 %1603, 4
  %1605 = icmp eq i64 %1604, 0
  br i1 %1605, label %1625, label %1606

1606:                                             ; preds = %1601
  %1607 = call ptr @Perl_PerlIO_stderr() #15
  %1608 = shl nsw i32 %7, 1
  %1609 = add nsw i32 %1608, 2
  %1610 = icmp eq ptr %1602, null
  %1611 = select i1 %1610, ptr @.str.323, ptr @.str.322
  %1612 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 15
  %1613 = load i64, ptr %1612, align 8, !tbaa !231
  %1614 = trunc i64 %1613 to i32
  %1615 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 8
  %1616 = load i16, ptr %1615, align 8, !tbaa !152
  %1617 = zext i16 %1616 to i32
  %1618 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 10
  %1619 = load i64, ptr %1618, align 8, !tbaa !150
  %1620 = trunc i64 %1619 to i32
  %1621 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 11
  %1622 = load i64, ptr %1621, align 8, !tbaa !230
  %1623 = trunc i64 %1622 to i32
  %1624 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1607, ptr noundef nonnull @.str.321, i32 noundef %1609, ptr noundef nonnull @.str.8, ptr noundef nonnull %1611, i32 noundef %5, i32 noundef %1614, i32 noundef %1617, i32 noundef %1620, i32 noundef %1623) #15
  br label %1625

1625:                                             ; preds = %1606, %1601
  %1626 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 15
  %1627 = load i64, ptr %1626, align 8, !tbaa !231
  %1628 = shl i64 %1627, 2
  %1629 = add i64 %1628, 8
  %1630 = call ptr @Perl_safesysmalloc(i64 noundef %1629) #15
  %1631 = getelementptr inbounds i32, ptr %1630, i64 1
  store i32 0, ptr %1631, align 4, !tbaa !73
  %1632 = load i64, ptr %1626, align 8, !tbaa !231
  %1633 = add i64 %1632, 1
  %1634 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 8
  %1635 = load i16, ptr %1634, align 8, !tbaa !152
  %1636 = zext i16 %1635 to i64
  %1637 = mul i64 %1633, %1636
  %1638 = add i64 %1637, 1
  %1639 = load i32, ptr %122, align 4, !tbaa !13
  %1640 = and i32 %1639, 2097408
  %1641 = icmp eq i32 %1640, 256
  br i1 %1641, label %1642, label %1646

1642:                                             ; preds = %1625
  %1643 = load ptr, ptr %118, align 8, !tbaa !16
  %1644 = getelementptr inbounds %struct.xpviv, ptr %1643, i64 0, i32 4
  %1645 = load i64, ptr %1644, align 8, !tbaa !17
  br label %1648

1646:                                             ; preds = %1625
  %1647 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %118, i32 noundef 2) #15
  br label %1648

1648:                                             ; preds = %1646, %1642
  %1649 = phi i64 [ %1645, %1642 ], [ %1647, %1646 ]
  %1650 = icmp sgt i64 %1638, %1649
  %1651 = load volatile i64, ptr %14, align 8, !tbaa !9
  %1652 = and i64 %1651, 4
  %1653 = icmp eq i64 %1652, 0
  br i1 %1650, label %1654, label %2250

1654:                                             ; preds = %1648
  br i1 %1653, label %1664, label %1655

1655:                                             ; preds = %1654
  %1656 = load volatile i64, ptr %14, align 8, !tbaa !9
  %1657 = and i64 %1656, 65536
  %1658 = icmp eq i64 %1657, 0
  br i1 %1658, label %1664, label %1659

1659:                                             ; preds = %1655
  %1660 = call ptr @Perl_PerlIO_stderr() #15
  %1661 = shl nsw i32 %7, 1
  %1662 = add nsw i32 %1661, 2
  %1663 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1660, ptr noundef nonnull @.str.324, i32 noundef %1662, ptr noundef nonnull @.str.8) #15
  br label %1664

1664:                                             ; preds = %1655, %1659, %1654
  %1665 = load i64, ptr %1626, align 8, !tbaa !231
  %1666 = add i64 %1665, 2
  %1667 = call noalias ptr @calloc(i64 noundef %1666, i64 noundef 16) #16
  %1668 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 3
  store ptr %1667, ptr %1668, align 8, !tbaa !155
  %1669 = call ptr @Perl_safesyscalloc(i64 noundef 4, i64 noundef 8) #15
  %1670 = load ptr, ptr %1668, align 8, !tbaa !155
  %1671 = getelementptr inbounds %struct._reg_trie_state, ptr %1670, i64 1, i32 1
  store ptr %1669, ptr %1671, align 8, !tbaa !17
  %1672 = load ptr, ptr %1668, align 8, !tbaa !155
  %1673 = getelementptr inbounds %struct._reg_trie_state, ptr %1672, i64 1, i32 1
  %1674 = load ptr, ptr %1673, align 8, !tbaa !17
  store i16 1, ptr %1674, align 4, !tbaa !342
  %1675 = load ptr, ptr %1673, align 8, !tbaa !17
  %1676 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1675, i64 0, i32 1
  store i32 4, ptr %1676, align 4, !tbaa !344
  br i1 %186, label %1677, label %1931

1677:                                             ; preds = %1664
  %1678 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1679 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 6
  %1680 = ptrtoint ptr %185 to i64
  br label %1681

1681:                                             ; preds = %1677, %1926
  %1682 = phi ptr [ %2, %1677 ], [ %1927, %1926 ]
  %1683 = phi i16 [ 0, %1677 ], [ %1889, %1926 ]
  %1684 = phi i32 [ 2, %1677 ], [ %1866, %1926 ]
  %1685 = phi ptr [ null, %1677 ], [ %1915, %1926 ]
  %1686 = phi ptr [ null, %1677 ], [ %1914, %1926 ]
  %1687 = phi i64 [ 1, %1677 ], [ %1865, %1926 ]
  %1688 = getelementptr inbounds %struct.regnode, ptr %1682, i64 1
  %1689 = getelementptr inbounds %struct.regnode, ptr %1682, i64 2
  %1690 = load i8, ptr %1688, align 2, !tbaa !205
  %1691 = zext i8 %1690 to i64
  %1692 = getelementptr inbounds i8, ptr %1689, i64 %1691
  %1693 = getelementptr inbounds %struct.regnode, ptr %1682, i64 1, i32 1
  %1694 = load i8, ptr %1693, align 1, !tbaa !141
  %1695 = icmp eq i8 %1694, 40
  br i1 %1695, label %1696, label %1709

1696:                                             ; preds = %1681
  %1697 = call ptr @Perl_regnext(ptr noundef nonnull %1688) #15
  %1698 = icmp eq ptr %1697, %4
  br i1 %1698, label %1709, label %1699

1699:                                             ; preds = %1696
  %1700 = getelementptr inbounds %struct.regnode, ptr %1697, i64 0, i32 1
  %1701 = load i8, ptr %1700, align 1, !tbaa !141
  %1702 = zext i8 %1701 to i32
  %1703 = icmp eq i32 %1702, %6
  br i1 %1703, label %1704, label %1709

1704:                                             ; preds = %1699
  %1705 = getelementptr inbounds %struct.regnode_string, ptr %1697, i64 0, i32 3
  %1706 = load i8, ptr %1697, align 2, !tbaa !205
  %1707 = zext i8 %1706 to i64
  %1708 = getelementptr inbounds i8, ptr %1705, i64 %1707
  br label %1709

1709:                                             ; preds = %1696, %1699, %1704, %1681
  %1710 = phi ptr [ %1692, %1681 ], [ %1708, %1704 ], [ %1692, %1699 ], [ %1692, %1696 ]
  %1711 = phi ptr [ %1689, %1681 ], [ %1705, %1704 ], [ %1689, %1699 ], [ %1689, %1696 ]
  %1712 = phi ptr [ %1688, %1681 ], [ %1697, %1704 ], [ %1688, %1699 ], [ %1688, %1696 ]
  %1713 = getelementptr inbounds %struct.regnode, ptr %1712, i64 0, i32 1
  %1714 = load i8, ptr %1713, align 1, !tbaa !141
  %1715 = icmp ne i8 %1714, 40
  %1716 = icmp ult ptr %1711, %1710
  %1717 = select i1 %1715, i1 %1716, i1 false
  br i1 %1717, label %1718, label %1862

1718:                                             ; preds = %1709, %1855
  %1719 = phi i32 [ %1858, %1855 ], [ %1684, %1709 ]
  %1720 = phi i64 [ %1857, %1855 ], [ %1687, %1709 ]
  %1721 = phi ptr [ %1860, %1855 ], [ %1711, %1709 ]
  %1722 = phi i32 [ %1856, %1855 ], [ 1, %1709 ]
  %1723 = phi i32 [ %1724, %1855 ], [ 0, %1709 ]
  %1724 = add i32 %1723, 1
  %1725 = load i32, ptr %1678, align 8, !tbaa !50
  %1726 = icmp eq i32 %1725, 0
  br i1 %1726, label %1729, label %1727

1727:                                             ; preds = %1718
  %1728 = call i64 @Perl_valid_utf8_to_uvchr(ptr noundef %1721, ptr noundef nonnull %12) #15
  store i64 %1728, ptr %13, align 8, !tbaa !9
  br label %1745

1729:                                             ; preds = %1718
  %1730 = load i8, ptr %1721, align 1, !tbaa !17
  br i1 %96, label %1731, label %1743

1731:                                             ; preds = %1729
  %1732 = icmp eq i8 %1730, -33
  br i1 %1732, label %1733, label %1735

1733:                                             ; preds = %1731
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.314, i32 noundef 2475) #15
  %1734 = load i8, ptr %1721, align 1, !tbaa !17
  br label %1735

1735:                                             ; preds = %1731, %1733
  %1736 = phi i8 [ %1730, %1731 ], [ %1734, %1733 ]
  %1737 = zext i8 %1736 to i64
  %1738 = getelementptr inbounds [0 x i8], ptr @PL_latin1_lc, i64 0, i64 %1737
  %1739 = load i8, ptr %1738, align 1, !tbaa !17
  %1740 = zext i8 %1739 to i64
  %1741 = icmp eq i8 %1739, -75
  %1742 = select i1 %1741, i64 956, i64 %1740
  store i64 %1742, ptr %13, align 8
  store i64 1, ptr %12, align 8, !tbaa !9
  br label %1745

1743:                                             ; preds = %1729
  %1744 = zext i8 %1730 to i64
  store i64 %1744, ptr %13, align 8, !tbaa !9
  store i64 1, ptr %12, align 8, !tbaa !9
  br label %1748

1745:                                             ; preds = %1735, %1727
  %1746 = phi i64 [ %1742, %1735 ], [ %1728, %1727 ]
  %1747 = icmp ult i64 %1746, 256
  br i1 %1747, label %1748, label %1753

1748:                                             ; preds = %1743, %1745
  %1749 = phi i64 [ %1744, %1743 ], [ %1746, %1745 ]
  %1750 = load ptr, ptr %106, align 8, !tbaa !330
  %1751 = getelementptr inbounds i16, ptr %1750, i64 %1749
  %1752 = load i16, ptr %1751, align 2, !tbaa !139
  br label %1771

1753:                                             ; preds = %1745
  %1754 = call ptr @Perl_hv_common_key_len(ptr noundef %1602, ptr noundef nonnull %13, i32 noundef 8, i32 noundef 32, ptr noundef null, i32 noundef 0) #15
  %1755 = icmp eq ptr %1754, null
  br i1 %1755, label %1853, label %1756

1756:                                             ; preds = %1753
  %1757 = load ptr, ptr %1754, align 8, !tbaa !5
  %1758 = getelementptr inbounds %struct.sv, ptr %1757, i64 0, i32 2
  %1759 = load i32, ptr %1758, align 4, !tbaa !13
  %1760 = and i32 %1759, 2097408
  %1761 = icmp eq i32 %1760, 256
  br i1 %1761, label %1762, label %1766

1762:                                             ; preds = %1756
  %1763 = load ptr, ptr %1757, align 8, !tbaa !16
  %1764 = getelementptr inbounds %struct.xpviv, ptr %1763, i64 0, i32 4
  %1765 = load i64, ptr %1764, align 8, !tbaa !17
  br label %1768

1766:                                             ; preds = %1756
  %1767 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %1757, i32 noundef 2) #15
  br label %1768

1768:                                             ; preds = %1766, %1762
  %1769 = phi i64 [ %1765, %1762 ], [ %1767, %1766 ]
  %1770 = trunc i64 %1769 to i16
  br label %1771

1771:                                             ; preds = %1768, %1748
  %1772 = phi i16 [ %1752, %1748 ], [ %1770, %1768 ]
  %1773 = icmp eq i16 %1772, 0
  br i1 %1773, label %1853, label %1774

1774:                                             ; preds = %1771
  %1775 = add i16 %1772, -1
  %1776 = load ptr, ptr %1668, align 8, !tbaa !155
  %1777 = zext i32 %1722 to i64
  %1778 = getelementptr inbounds %struct._reg_trie_state, ptr %1776, i64 %1777, i32 1
  %1779 = load ptr, ptr %1778, align 8, !tbaa !17
  %1780 = icmp eq ptr %1779, null
  br i1 %1780, label %1783, label %1781

1781:                                             ; preds = %1774
  %1782 = getelementptr inbounds %struct._reg_trie_state, ptr %1776, i64 %1777, i32 1
  br label %1795

1783:                                             ; preds = %1774
  %1784 = call ptr @Perl_safesyscalloc(i64 noundef 4, i64 noundef 8) #15
  %1785 = load ptr, ptr %1668, align 8, !tbaa !155
  %1786 = getelementptr inbounds %struct._reg_trie_state, ptr %1785, i64 %1777, i32 1
  store ptr %1784, ptr %1786, align 8, !tbaa !17
  %1787 = load ptr, ptr %1668, align 8, !tbaa !155
  %1788 = getelementptr inbounds %struct._reg_trie_state, ptr %1787, i64 %1777, i32 1
  %1789 = load ptr, ptr %1788, align 8, !tbaa !17
  store i16 1, ptr %1789, align 4, !tbaa !342
  %1790 = load ptr, ptr %1788, align 8, !tbaa !17
  %1791 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1790, i64 0, i32 1
  store i32 4, ptr %1791, align 4, !tbaa !344
  %1792 = load ptr, ptr %1788, align 8, !tbaa !17
  %1793 = getelementptr inbounds %struct._reg_trie_state, ptr %1787, i64 %1777, i32 1
  %1794 = icmp eq ptr %1792, null
  br i1 %1794, label %1814, label %1795

1795:                                             ; preds = %1781, %1783
  %1796 = phi ptr [ %1782, %1781 ], [ %1793, %1783 ]
  %1797 = phi ptr [ %1776, %1781 ], [ %1787, %1783 ]
  %1798 = phi ptr [ %1779, %1781 ], [ %1792, %1783 ]
  %1799 = load i16, ptr %1798, align 4, !tbaa !342
  %1800 = call i16 @llvm.umax.i16(i16 %1799, i16 1)
  br label %1801

1801:                                             ; preds = %1804, %1795
  %1802 = phi i16 [ 1, %1795 ], [ %1809, %1804 ]
  %1803 = icmp eq i16 %1802, %1800
  br i1 %1803, label %1814, label %1804

1804:                                             ; preds = %1801
  %1805 = zext i16 %1802 to i64
  %1806 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1798, i64 %1805
  %1807 = load i16, ptr %1806, align 4, !tbaa !342
  %1808 = icmp eq i16 %1807, %1775
  %1809 = add i16 %1802, 1
  br i1 %1808, label %1810, label %1801, !llvm.loop !345

1810:                                             ; preds = %1804
  %1811 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1798, i64 %1805, i32 1
  %1812 = load i32, ptr %1811, align 4, !tbaa !344
  %1813 = icmp eq i32 %1812, 0
  br i1 %1813, label %1814, label %1855

1814:                                             ; preds = %1801, %1783, %1810
  %1815 = phi ptr [ %1796, %1810 ], [ %1793, %1783 ], [ %1796, %1801 ]
  %1816 = phi ptr [ %1797, %1810 ], [ %1787, %1783 ], [ %1797, %1801 ]
  %1817 = add i32 %1719, 1
  %1818 = zext i32 %1719 to i64
  %1819 = getelementptr inbounds i32, ptr %1630, i64 %1818
  store i32 %1722, ptr %1819, align 4, !tbaa !73
  %1820 = load ptr, ptr %1815, align 8, !tbaa !17
  %1821 = load i16, ptr %1820, align 4, !tbaa !342
  %1822 = zext i16 %1821 to i32
  %1823 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1820, i64 0, i32 1
  %1824 = load i32, ptr %1823, align 4, !tbaa !344
  %1825 = icmp ugt i32 %1824, %1822
  br i1 %1825, label %1838, label %1826

1826:                                             ; preds = %1814
  %1827 = shl nuw nsw i32 %1824, 1
  store i32 %1827, ptr %1823, align 4, !tbaa !344
  %1828 = load ptr, ptr %1815, align 8, !tbaa !17
  %1829 = zext i32 %1827 to i64
  %1830 = shl nuw nsw i64 %1829, 3
  %1831 = call ptr @Perl_safesysrealloc(ptr noundef %1828, i64 noundef %1830) #15
  %1832 = load ptr, ptr %1668, align 8, !tbaa !155
  %1833 = getelementptr inbounds %struct._reg_trie_state, ptr %1832, i64 %1777, i32 1
  store ptr %1831, ptr %1833, align 8, !tbaa !17
  %1834 = load ptr, ptr %1668, align 8, !tbaa !155
  %1835 = getelementptr inbounds %struct._reg_trie_state, ptr %1834, i64 %1777, i32 1
  %1836 = load ptr, ptr %1835, align 8, !tbaa !17
  %1837 = load i16, ptr %1836, align 4, !tbaa !342
  br label %1838

1838:                                             ; preds = %1826, %1814
  %1839 = phi i16 [ %1837, %1826 ], [ %1821, %1814 ]
  %1840 = phi ptr [ %1836, %1826 ], [ %1820, %1814 ]
  %1841 = phi ptr [ %1834, %1826 ], [ %1816, %1814 ]
  %1842 = getelementptr inbounds %struct._reg_trie_state, ptr %1841, i64 %1777, i32 1
  %1843 = zext i16 %1839 to i64
  %1844 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1840, i64 %1843
  store i16 %1775, ptr %1844, align 4, !tbaa !342
  %1845 = load ptr, ptr %1842, align 8, !tbaa !17
  %1846 = load i16, ptr %1845, align 4, !tbaa !342
  %1847 = zext i16 %1846 to i64
  %1848 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %1845, i64 %1847, i32 1
  store i32 %1719, ptr %1848, align 4, !tbaa !344
  %1849 = load ptr, ptr %1842, align 8, !tbaa !17
  %1850 = load i16, ptr %1849, align 4, !tbaa !342
  %1851 = add i16 %1850, 1
  store i16 %1851, ptr %1849, align 4, !tbaa !342
  %1852 = add i64 %1720, 1
  br label %1855

1853:                                             ; preds = %1753, %1771
  %1854 = load i64, ptr %13, align 8, !tbaa !9
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.325, i64 noundef %1854) #15
  br label %1855

1855:                                             ; preds = %1810, %1838, %1853
  %1856 = phi i32 [ %1722, %1853 ], [ %1812, %1810 ], [ %1719, %1838 ]
  %1857 = phi i64 [ %1720, %1853 ], [ %1720, %1810 ], [ %1852, %1838 ]
  %1858 = phi i32 [ %1719, %1853 ], [ %1719, %1810 ], [ %1817, %1838 ]
  %1859 = load i64, ptr %12, align 8, !tbaa !9
  %1860 = getelementptr inbounds i8, ptr %1721, i64 %1859
  %1861 = icmp ult ptr %1860, %1710
  br i1 %1861, label %1718, label %1862, !llvm.loop !346

1862:                                             ; preds = %1855, %1709
  %1863 = phi i32 [ 0, %1709 ], [ %1724, %1855 ]
  %1864 = phi i32 [ 1, %1709 ], [ %1856, %1855 ]
  %1865 = phi i64 [ %1687, %1709 ], [ %1857, %1855 ]
  %1866 = phi i32 [ %1684, %1709 ], [ %1858, %1855 ]
  %1867 = load ptr, ptr %1668, align 8, !tbaa !155
  %1868 = zext i32 %1864 to i64
  %1869 = getelementptr inbounds %struct._reg_trie_state, ptr %1867, i64 %1868
  %1870 = load i16, ptr %1869, align 8, !tbaa !170
  %1871 = call ptr @Perl_regnext(ptr noundef nonnull %1712) #15
  %1872 = load i8, ptr %1713, align 1, !tbaa !141
  %1873 = icmp eq i8 %1872, 40
  br i1 %1873, label %1882, label %1874

1874:                                             ; preds = %1862
  %1875 = getelementptr inbounds %struct.regnode_string, ptr %1712, i64 0, i32 3
  %1876 = load i8, ptr %1712, align 2, !tbaa !205
  %1877 = zext i8 %1876 to i64
  %1878 = load i32, ptr %1678, align 8, !tbaa !50
  %1879 = icmp eq i32 %1878, 0
  %1880 = select i1 %1879, i32 0, i32 536870912
  %1881 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull %1875, i64 noundef %1877, i32 noundef %1880) #15
  br label %1887

1882:                                             ; preds = %1862
  %1883 = load i32, ptr %1678, align 8, !tbaa !50
  %1884 = icmp eq i32 %1883, 0
  %1885 = select i1 %1884, i32 0, i32 536870912
  %1886 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @.str.8, i64 noundef 0, i32 noundef %1885) #15
  br label %1887

1887:                                             ; preds = %1882, %1874
  %1888 = phi ptr [ %1881, %1874 ], [ %1886, %1882 ]
  call void @Perl_av_push(ptr noundef %117, ptr noundef %1888) #15
  %1889 = add i16 %1683, 1
  %1890 = load ptr, ptr %116, align 8, !tbaa !331
  %1891 = zext i16 %1889 to i64
  %1892 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %1890, i64 %1891
  store i16 0, ptr %1892, align 4, !tbaa !347
  %1893 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %1890, i64 %1891, i32 1
  store i32 %1863, ptr %1893, align 4, !tbaa !349
  %1894 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %1890, i64 %1891, i32 2
  store i32 %1864, ptr %1894, align 4, !tbaa !350
  %1895 = icmp ult ptr %1871, %4
  br i1 %1895, label %1896, label %1913

1896:                                             ; preds = %1887
  %1897 = load ptr, ptr %1679, align 8, !tbaa !290
  %1898 = icmp eq ptr %1897, null
  br i1 %1898, label %1899, label %1901

1899:                                             ; preds = %1896
  %1900 = call noalias ptr @calloc(i64 noundef %114, i64 noundef 2) #16
  store ptr %1900, ptr %1679, align 8, !tbaa !290
  br label %1901

1901:                                             ; preds = %1899, %1896
  %1902 = phi ptr [ %1900, %1899 ], [ %1897, %1896 ]
  %1903 = ptrtoint ptr %1871 to i64
  %1904 = sub i64 %1903, %1680
  %1905 = lshr exact i64 %1904, 2
  %1906 = trunc i64 %1905 to i16
  %1907 = getelementptr inbounds i16, ptr %1902, i64 %1891
  store i16 %1906, ptr %1907, align 2, !tbaa !139
  %1908 = icmp eq ptr %1685, null
  %1909 = select i1 %1908, ptr %1871, ptr %1685
  %1910 = icmp eq ptr %1686, null
  br i1 %1910, label %1911, label %1913

1911:                                             ; preds = %1901
  %1912 = call ptr @Perl_regnext(ptr noundef %1682) #15
  br label %1913

1913:                                             ; preds = %1901, %1911, %1887
  %1914 = phi ptr [ %1686, %1901 ], [ %1912, %1911 ], [ %1686, %1887 ]
  %1915 = phi ptr [ %1909, %1901 ], [ %1909, %1911 ], [ %1685, %1887 ]
  %1916 = icmp eq i16 %1870, 0
  br i1 %1916, label %1923, label %1917

1917:                                             ; preds = %1913
  %1918 = load ptr, ptr %116, align 8, !tbaa !331
  %1919 = zext i16 %1870 to i64
  %1920 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %1918, i64 %1919
  %1921 = load i16, ptr %1920, align 4, !tbaa !347
  %1922 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %1918, i64 %1891
  store i16 %1921, ptr %1922, align 4, !tbaa !347
  store i16 %1889, ptr %1920, align 4, !tbaa !347
  br label %1926

1923:                                             ; preds = %1913
  %1924 = load ptr, ptr %1668, align 8, !tbaa !155
  %1925 = getelementptr inbounds %struct._reg_trie_state, ptr %1924, i64 %1868
  store i16 %1889, ptr %1925, align 8, !tbaa !170
  br label %1926

1926:                                             ; preds = %1923, %1917
  %1927 = call ptr @Perl_regnext(ptr noundef %1682) #15
  %1928 = icmp ult ptr %1927, %3
  br i1 %1928, label %1681, label %1929, !llvm.loop !351

1929:                                             ; preds = %1926
  %1930 = load ptr, ptr %1668, align 8, !tbaa !155
  br label %1931

1931:                                             ; preds = %1929, %1664
  %1932 = phi ptr [ %1672, %1664 ], [ %1930, %1929 ]
  %1933 = phi i64 [ 1, %1664 ], [ %1865, %1929 ]
  %1934 = phi ptr [ null, %1664 ], [ %1914, %1929 ]
  %1935 = phi ptr [ null, %1664 ], [ %1915, %1929 ]
  %1936 = phi i32 [ 2, %1664 ], [ %1866, %1929 ]
  %1937 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 13
  store i32 %1936, ptr %1937, align 4, !tbaa !153
  %1938 = zext i32 %1936 to i64
  %1939 = shl nuw nsw i64 %1938, 4
  %1940 = call ptr @realloc(ptr noundef %1932, i64 noundef %1939) #19
  store ptr %1940, ptr %1668, align 8, !tbaa !155
  %1941 = load volatile i64, ptr %14, align 8, !tbaa !9
  %1942 = and i64 %1941, 4
  %1943 = icmp eq i64 %1942, 0
  br i1 %1943, label %2076, label %1944

1944:                                             ; preds = %1931
  %1945 = load volatile i64, ptr %14, align 8, !tbaa !9
  %1946 = and i64 %1945, 65536
  %1947 = icmp eq i64 %1946, 0
  br i1 %1947, label %2076, label %1948

1948:                                             ; preds = %1944
  %1949 = call ptr @Perl_sv_newmortal() #15
  %1950 = icmp eq ptr %1602, null
  %1951 = select i1 %1950, i32 4, i32 6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11)
  store volatile i64 0, ptr %11, align 8, !tbaa !9
  %1952 = load volatile i64, ptr %11, align 8, !tbaa !9
  %1953 = call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %1954 = icmp eq ptr %1953, null
  br i1 %1954, label %1974, label %1955

1955:                                             ; preds = %1948
  %1956 = getelementptr inbounds %struct.sv, ptr %1953, i64 0, i32 2
  %1957 = load i32, ptr %1956, align 4, !tbaa !13
  %1958 = and i32 %1957, 256
  %1959 = icmp eq i32 %1958, 0
  br i1 %1959, label %1960, label %1962

1960:                                             ; preds = %1955
  call void @Perl_sv_setuv(ptr noundef nonnull %1953, i64 noundef 65288) #15
  %1961 = load i32, ptr %1956, align 4, !tbaa !13
  br label %1962

1962:                                             ; preds = %1960, %1955
  %1963 = phi i32 [ %1961, %1960 ], [ %1957, %1955 ]
  %1964 = and i32 %1963, 2097408
  %1965 = icmp eq i32 %1964, 256
  br i1 %1965, label %1966, label %1970

1966:                                             ; preds = %1962
  %1967 = load ptr, ptr %1953, align 8, !tbaa !16
  %1968 = getelementptr inbounds %struct.xpviv, ptr %1967, i64 0, i32 4
  %1969 = load i64, ptr %1968, align 8, !tbaa !17
  br label %1972

1970:                                             ; preds = %1962
  %1971 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %1953, i32 noundef 2) #15
  br label %1972

1972:                                             ; preds = %1970, %1966
  %1973 = phi i64 [ %1969, %1966 ], [ %1971, %1970 ]
  store volatile i64 %1973, ptr %11, align 8, !tbaa !9
  br label %1974

1974:                                             ; preds = %1948, %1972
  %1975 = icmp eq ptr %19, null
  br i1 %1975, label %1976, label %1977

1976:                                             ; preds = %1974
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.338, i32 noundef 1769) #15
  br label %1977

1977:                                             ; preds = %1976, %1974
  %1978 = call ptr @Perl_PerlIO_stderr() #15
  %1979 = shl i32 %7, 1
  %1980 = add i32 %1979, 4
  %1981 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1978, ptr noundef nonnull @.str.339, i32 noundef %1980, ptr noundef nonnull @.str.8, i32 noundef %1980, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.340) #15
  %1982 = icmp ugt i32 %1936, 1
  br i1 %1982, label %1983, label %2075

1983:                                             ; preds = %1977
  %1984 = zext i32 %1951 to i64
  %1985 = add i32 %1979, 16
  br label %1986

1986:                                             ; preds = %2070, %1983
  %1987 = phi i64 [ 1, %1983 ], [ %2073, %2070 ]
  %1988 = call ptr @Perl_PerlIO_stderr() #15
  %1989 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1988, ptr noundef nonnull @.str.341, i32 noundef %1980, ptr noundef nonnull @.str.8, i64 noundef %1987) #15
  %1990 = load ptr, ptr %1668, align 8, !tbaa !155
  %1991 = getelementptr inbounds %struct._reg_trie_state, ptr %1990, i64 %1987
  %1992 = load i16, ptr %1991, align 8, !tbaa !170
  %1993 = icmp eq i16 %1992, 0
  %1994 = call ptr @Perl_PerlIO_stderr() #15
  br i1 %1993, label %1995, label %1997

1995:                                             ; preds = %1986
  %1996 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1994, ptr noundef nonnull @.str.342, ptr noundef nonnull @.str.8) #15
  br label %2003

1997:                                             ; preds = %1986
  %1998 = load ptr, ptr %1668, align 8, !tbaa !155
  %1999 = getelementptr inbounds %struct._reg_trie_state, ptr %1998, i64 %1987
  %2000 = load i16, ptr %1999, align 8, !tbaa !170
  %2001 = zext i16 %2000 to i32
  %2002 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %1994, ptr noundef nonnull @.str.343, i32 noundef %2001) #15
  br label %2003

2003:                                             ; preds = %1997, %1995
  br label %2004

2004:                                             ; preds = %2003, %2068
  %2005 = phi i16 [ %2069, %2068 ], [ 1, %2003 ]
  %2006 = zext i16 %2005 to i32
  %2007 = load ptr, ptr %1668, align 8, !tbaa !155
  %2008 = getelementptr inbounds %struct._reg_trie_state, ptr %2007, i64 %1987, i32 1
  %2009 = load ptr, ptr %2008, align 8, !tbaa !17
  %2010 = icmp eq ptr %2009, null
  br i1 %2010, label %2015, label %2011

2011:                                             ; preds = %2004
  %2012 = load i16, ptr %2009, align 4, !tbaa !342
  %2013 = zext i16 %2012 to i32
  %2014 = add nsw i32 %2013, -1
  br label %2015

2015:                                             ; preds = %2011, %2004
  %2016 = phi i32 [ %2014, %2011 ], [ 0, %2004 ]
  %2017 = icmp slt i32 %2016, %2006
  br i1 %2017, label %2070, label %2018

2018:                                             ; preds = %2015
  %2019 = zext i16 %2005 to i64
  %2020 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %2009, i64 %2019
  %2021 = load i16, ptr %2020, align 4, !tbaa !342
  %2022 = zext i16 %2021 to i64
  %2023 = call ptr @Perl_av_fetch(ptr noundef %19, i64 noundef %2022, i32 noundef 0) #15
  %2024 = icmp eq ptr %2023, null
  br i1 %2024, label %2068, label %2025

2025:                                             ; preds = %2018
  %2026 = call ptr @Perl_PerlIO_stderr() #15
  %2027 = load ptr, ptr %2023, align 8, !tbaa !5
  %2028 = getelementptr inbounds %struct.sv, ptr %2027, i64 0, i32 2
  %2029 = load i32, ptr %2028, align 4, !tbaa !13
  %2030 = and i32 %2029, 2098176
  %2031 = icmp eq i32 %2030, 1024
  br i1 %2031, label %2032, label %2035

2032:                                             ; preds = %2025
  %2033 = getelementptr inbounds %struct.sv, ptr %2027, i64 0, i32 3
  %2034 = load ptr, ptr %2033, align 8, !tbaa !17
  br label %2040

2035:                                             ; preds = %2025
  %2036 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %2027, ptr noundef null, i32 noundef 34) #15
  %2037 = load ptr, ptr %2023, align 8, !tbaa !5
  %2038 = getelementptr inbounds %struct.sv, ptr %2037, i64 0, i32 2
  %2039 = load i32, ptr %2038, align 4, !tbaa !13
  br label %2040

2040:                                             ; preds = %2035, %2032
  %2041 = phi i32 [ %2029, %2032 ], [ %2039, %2035 ]
  %2042 = phi ptr [ %2027, %2032 ], [ %2037, %2035 ]
  %2043 = phi ptr [ %2034, %2032 ], [ %2036, %2035 ]
  %2044 = load ptr, ptr %2042, align 8, !tbaa !16
  %2045 = getelementptr inbounds %struct.xpv, ptr %2044, i64 0, i32 2
  %2046 = load i64, ptr %2045, align 8, !tbaa !38
  %2047 = load ptr, ptr @PL_colors, align 16, !tbaa !5
  %2048 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 1), align 8, !tbaa !5
  %2049 = lshr i32 %2041, 21
  %2050 = and i32 %2049, 256
  %2051 = or i32 %2050, 2048
  %2052 = call ptr @Perl_pv_pretty(ptr noundef %1949, ptr noundef %2043, i64 noundef %2046, i64 noundef %1984, ptr noundef %2047, ptr noundef %2048, i32 noundef %2051) #15
  %2053 = load ptr, ptr %1668, align 8, !tbaa !155
  %2054 = getelementptr inbounds %struct._reg_trie_state, ptr %2053, i64 %1987, i32 1
  %2055 = load ptr, ptr %2054, align 8, !tbaa !17
  %2056 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %2055, i64 %2019
  %2057 = load i16, ptr %2056, align 4, !tbaa !342
  %2058 = zext i16 %2057 to i32
  %2059 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %2055, i64 %2019, i32 1
  %2060 = load i32, ptr %2059, align 4, !tbaa !344
  %2061 = zext i32 %2060 to i64
  %2062 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2026, ptr noundef nonnull @.str.344, i32 noundef %1951, ptr noundef %2052, i32 noundef %2058, i64 noundef %2061) #15
  %2063 = urem i16 %2005, 10
  %2064 = icmp eq i16 %2063, 0
  br i1 %2064, label %2065, label %2068

2065:                                             ; preds = %2040
  %2066 = call ptr @Perl_PerlIO_stderr() #15
  %2067 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2066, ptr noundef nonnull @.str.345, i32 noundef %1985, ptr noundef nonnull @.str.8) #15
  br label %2068

2068:                                             ; preds = %2065, %2040, %2018
  %2069 = add i16 %2005, 1
  br label %2004, !llvm.loop !352

2070:                                             ; preds = %2015
  %2071 = call ptr @Perl_PerlIO_stderr() #15
  %2072 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2071, ptr noundef nonnull @.str.53) #15
  %2073 = add nuw nsw i64 %1987, 1
  %2074 = icmp eq i64 %2073, %1938
  br i1 %2074, label %2075, label %1986, !llvm.loop !353

2075:                                             ; preds = %2070, %1977
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11)
  br label %2076

2076:                                             ; preds = %1944, %2075, %1931
  %2077 = call noalias ptr @calloc(i64 noundef %1933, i64 noundef 8) #16
  %2078 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 4
  store ptr %2077, ptr %2078, align 8, !tbaa !165
  %2079 = icmp ugt i32 %1936, 1
  br i1 %2079, label %2080, label %2246

2080:                                             ; preds = %2076, %2237
  %2081 = phi i64 [ %2244, %2237 ], [ 1, %2076 ]
  %2082 = phi i64 [ %2242, %2237 ], [ %1933, %2076 ]
  %2083 = phi i32 [ %2240, %2237 ], [ 0, %2076 ]
  %2084 = phi i32 [ %2239, %2237 ], [ 0, %2076 ]
  %2085 = load ptr, ptr %1668, align 8, !tbaa !155
  %2086 = getelementptr inbounds %struct._reg_trie_state, ptr %2085, i64 %2081, i32 1
  %2087 = load ptr, ptr %2086, align 8, !tbaa !17
  %2088 = icmp eq ptr %2087, null
  br i1 %2088, label %2237, label %2089

2089:                                             ; preds = %2080
  %2090 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %2087, i64 1
  %2091 = load i16, ptr %2090, align 4, !tbaa !342
  %2092 = load i16, ptr %2087, align 4, !tbaa !342
  %2093 = icmp ugt i16 %2092, 2
  br i1 %2093, label %2094, label %2136

2094:                                             ; preds = %2089
  %2095 = zext i16 %2092 to i64
  %2096 = and i64 %2095, 1
  %2097 = icmp eq i16 %2092, 3
  br i1 %2097, label %2122, label %2098

2098:                                             ; preds = %2094
  %2099 = and i64 %2095, 65534
  %2100 = add nsw i64 %2099, -4
  br label %2101

2101:                                             ; preds = %2101, %2098
  %2102 = phi i64 [ 2, %2098 ], [ %2119, %2101 ]
  %2103 = phi i16 [ %2091, %2098 ], [ %2118, %2101 ]
  %2104 = phi i16 [ %2091, %2098 ], [ %2117, %2101 ]
  %2105 = phi i64 [ 0, %2098 ], [ %2120, %2101 ]
  %2106 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %2087, i64 %2102
  %2107 = load i16, ptr %2106, align 4, !tbaa !342
  %2108 = icmp ult i16 %2107, %2104
  %2109 = call i16 @llvm.umax.i16(i16 %2107, i16 %2103)
  %2110 = call i16 @llvm.umin.i16(i16 %2107, i16 %2104)
  %2111 = select i1 %2108, i16 %2103, i16 %2109
  %2112 = or i64 %2102, 1
  %2113 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %2087, i64 %2112
  %2114 = load i16, ptr %2113, align 4, !tbaa !342
  %2115 = icmp ult i16 %2114, %2110
  %2116 = call i16 @llvm.umax.i16(i16 %2114, i16 %2111)
  %2117 = call i16 @llvm.umin.i16(i16 %2114, i16 %2110)
  %2118 = select i1 %2115, i16 %2111, i16 %2116
  %2119 = add nuw nsw i64 %2102, 2
  %2120 = add i64 %2105, 2
  %2121 = icmp eq i64 %2105, %2100
  br i1 %2121, label %2122, label %2101, !llvm.loop !354

2122:                                             ; preds = %2101, %2094
  %2123 = phi i16 [ undef, %2094 ], [ %2117, %2101 ]
  %2124 = phi i16 [ undef, %2094 ], [ %2118, %2101 ]
  %2125 = phi i64 [ 2, %2094 ], [ %2119, %2101 ]
  %2126 = phi i16 [ %2091, %2094 ], [ %2118, %2101 ]
  %2127 = phi i16 [ %2091, %2094 ], [ %2117, %2101 ]
  %2128 = icmp eq i64 %2096, 0
  br i1 %2128, label %2136, label %2129

2129:                                             ; preds = %2122
  %2130 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %2087, i64 %2125
  %2131 = load i16, ptr %2130, align 4, !tbaa !342
  %2132 = icmp ult i16 %2131, %2127
  %2133 = call i16 @llvm.umax.i16(i16 %2131, i16 %2126)
  %2134 = call i16 @llvm.umin.i16(i16 %2131, i16 %2127)
  %2135 = select i1 %2132, i16 %2126, i16 %2133
  br label %2136

2136:                                             ; preds = %2129, %2122, %2089
  %2137 = phi i16 [ %2091, %2089 ], [ %2123, %2122 ], [ %2134, %2129 ]
  %2138 = phi i16 [ %2091, %2089 ], [ %2124, %2122 ], [ %2135, %2129 ]
  %2139 = zext i16 %2138 to i32
  %2140 = zext i16 %2137 to i32
  %2141 = add i32 %2084, 1
  %2142 = sub i32 %2141, %2140
  %2143 = add i32 %2142, %2139
  %2144 = zext i32 %2143 to i64
  %2145 = icmp ult i64 %2082, %2144
  br i1 %2145, label %2146, label %2153

2146:                                             ; preds = %2136
  %2147 = shl nuw nsw i64 %2082, 1
  %2148 = load ptr, ptr %2078, align 8, !tbaa !165
  %2149 = shl nuw nsw i64 %2082, 4
  %2150 = call ptr @realloc(ptr noundef %2148, i64 noundef %2149) #19
  store ptr %2150, ptr %2078, align 8, !tbaa !165
  %2151 = getelementptr inbounds %struct._reg_trie_trans, ptr %2150, i64 %2082
  %2152 = shl nuw nsw i64 %2082, 3
  call void @llvm.memset.p0.i64(ptr align 1 %2151, i8 0, i64 %2152, i1 false)
  br label %2153

2153:                                             ; preds = %2146, %2136
  %2154 = phi i64 [ %2147, %2146 ], [ %2082, %2136 ]
  %2155 = load i16, ptr %1634, align 8, !tbaa !152
  %2156 = zext i16 %2155 to i32
  %2157 = sub i32 %2084, %2140
  %2158 = add i32 %2157, %2156
  %2159 = icmp eq i16 %2138, %2137
  br i1 %2159, label %2164, label %2160

2160:                                             ; preds = %2153
  %2161 = load ptr, ptr %1668, align 8, !tbaa !155
  %2162 = getelementptr inbounds %struct._reg_trie_state, ptr %2161, i64 %2081, i32 1
  %2163 = trunc i64 %2081 to i32
  br label %2196

2164:                                             ; preds = %2153
  %2165 = icmp ult i32 %2083, %2084
  %2166 = load ptr, ptr %2078, align 8, !tbaa !165
  br i1 %2165, label %2167, label %2188

2167:                                             ; preds = %2164
  %2168 = zext i32 %2083 to i64
  br label %2169

2169:                                             ; preds = %2167, %2184
  %2170 = phi i64 [ %2168, %2167 ], [ %2185, %2184 ]
  %2171 = getelementptr inbounds %struct._reg_trie_trans, ptr %2166, i64 %2170
  %2172 = load i32, ptr %2171, align 4, !tbaa !168
  %2173 = icmp eq i32 %2172, 0
  br i1 %2173, label %2174, label %2184

2174:                                             ; preds = %2169
  %2175 = getelementptr inbounds %struct._reg_trie_trans, ptr %2166, i64 %2170
  %2176 = trunc i64 %2170 to i32
  %2177 = sub nsw i32 %2156, %2140
  %2178 = add i32 %2177, %2176
  %2179 = load ptr, ptr %1668, align 8, !tbaa !155
  %2180 = getelementptr inbounds %struct._reg_trie_state, ptr %2179, i64 %2081, i32 1
  %2181 = load ptr, ptr %2180, align 8, !tbaa !17
  %2182 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %2181, i64 1, i32 1
  %2183 = load i32, ptr %2182, align 4, !tbaa !344
  store i32 %2183, ptr %2175, align 4, !tbaa !168
  br label %2221

2184:                                             ; preds = %2169
  %2185 = add nuw nsw i64 %2170, 1
  %2186 = trunc i64 %2185 to i32
  %2187 = icmp eq i32 %2084, %2186
  br i1 %2187, label %2188, label %2169, !llvm.loop !355

2188:                                             ; preds = %2184, %2164
  %2189 = load ptr, ptr %1668, align 8, !tbaa !155
  %2190 = getelementptr inbounds %struct._reg_trie_state, ptr %2189, i64 %2081, i32 1
  %2191 = load ptr, ptr %2190, align 8, !tbaa !17
  %2192 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %2191, i64 1, i32 1
  %2193 = load i32, ptr %2192, align 4, !tbaa !344
  %2194 = zext i32 %2084 to i64
  %2195 = getelementptr inbounds %struct._reg_trie_trans, ptr %2166, i64 %2194
  store i32 %2193, ptr %2195, align 4, !tbaa !168
  br label %2221

2196:                                             ; preds = %2160, %2208
  %2197 = phi i16 [ %2220, %2208 ], [ 1, %2160 ]
  %2198 = zext i16 %2197 to i32
  %2199 = load ptr, ptr %2162, align 8, !tbaa !17
  %2200 = icmp eq ptr %2199, null
  br i1 %2200, label %2205, label %2201

2201:                                             ; preds = %2196
  %2202 = load i16, ptr %2199, align 4, !tbaa !342
  %2203 = zext i16 %2202 to i32
  %2204 = add nsw i32 %2203, -1
  br label %2205

2205:                                             ; preds = %2196, %2201
  %2206 = phi i32 [ %2204, %2201 ], [ 0, %2196 ]
  %2207 = icmp slt i32 %2206, %2198
  br i1 %2207, label %2229, label %2208

2208:                                             ; preds = %2205
  %2209 = zext i16 %2197 to i64
  %2210 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %2199, i64 %2209
  %2211 = load i16, ptr %2210, align 4, !tbaa !342
  %2212 = zext i16 %2211 to i32
  %2213 = add i32 %2157, %2212
  %2214 = getelementptr inbounds %struct._reg_trie_trans_list_elem, ptr %2199, i64 %2209, i32 1
  %2215 = load i32, ptr %2214, align 4, !tbaa !344
  %2216 = load ptr, ptr %2078, align 8, !tbaa !165
  %2217 = zext i32 %2213 to i64
  %2218 = getelementptr inbounds %struct._reg_trie_trans, ptr %2216, i64 %2217
  store i32 %2215, ptr %2218, align 4, !tbaa !168
  %2219 = getelementptr inbounds %struct._reg_trie_trans, ptr %2216, i64 %2217, i32 1
  store i32 %2163, ptr %2219, align 4, !tbaa !166
  %2220 = add i16 %2197, 1
  br label %2196, !llvm.loop !356

2221:                                             ; preds = %2188, %2174
  %2222 = phi i64 [ %2170, %2174 ], [ %2194, %2188 ]
  %2223 = phi ptr [ %2179, %2174 ], [ %2189, %2188 ]
  %2224 = phi i32 [ %2084, %2174 ], [ %2141, %2188 ]
  %2225 = phi i32 [ %2176, %2174 ], [ %2141, %2188 ]
  %2226 = phi i32 [ %2178, %2174 ], [ %2158, %2188 ]
  %2227 = getelementptr inbounds %struct._reg_trie_trans, ptr %2166, i64 %2222, i32 1
  %2228 = trunc i64 %2081 to i32
  store i32 %2228, ptr %2227, align 4, !tbaa !166
  br label %2229

2229:                                             ; preds = %2205, %2221
  %2230 = phi ptr [ %2223, %2221 ], [ %2161, %2205 ]
  %2231 = phi i32 [ %2224, %2221 ], [ %2143, %2205 ]
  %2232 = phi i32 [ %2225, %2221 ], [ %2083, %2205 ]
  %2233 = phi i32 [ %2226, %2221 ], [ %2158, %2205 ]
  %2234 = getelementptr inbounds %struct._reg_trie_state, ptr %2230, i64 %2081, i32 1
  %2235 = load ptr, ptr %2234, align 8, !tbaa !17
  call void @Perl_safesysfree(ptr noundef %2235) #15
  %2236 = load ptr, ptr %1668, align 8, !tbaa !155
  br label %2237

2237:                                             ; preds = %2229, %2080
  %2238 = phi ptr [ %2236, %2229 ], [ %2085, %2080 ]
  %2239 = phi i32 [ %2231, %2229 ], [ %2084, %2080 ]
  %2240 = phi i32 [ %2232, %2229 ], [ %2083, %2080 ]
  %2241 = phi i32 [ %2233, %2229 ], [ 0, %2080 ]
  %2242 = phi i64 [ %2154, %2229 ], [ %2082, %2080 ]
  %2243 = getelementptr inbounds %struct._reg_trie_state, ptr %2238, i64 %2081, i32 1
  store i32 %2241, ptr %2243, align 8, !tbaa !17
  %2244 = add nuw nsw i64 %2081, 1
  %2245 = icmp eq i64 %2244, %1938
  br i1 %2245, label %2246, label %2080, !llvm.loop !357

2246:                                             ; preds = %2237, %2076
  %2247 = phi i32 [ 0, %2076 ], [ %2239, %2237 ]
  %2248 = add i32 %2247, 1
  %2249 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 1
  store i32 %2248, ptr %2249, align 4, !tbaa !154
  br label %2819

2250:                                             ; preds = %1648
  br i1 %1653, label %2260, label %2251

2251:                                             ; preds = %2250
  %2252 = load volatile i64, ptr %14, align 8, !tbaa !9
  %2253 = and i64 %2252, 65536
  %2254 = icmp eq i64 %2253, 0
  br i1 %2254, label %2260, label %2255

2255:                                             ; preds = %2251
  %2256 = call ptr @Perl_PerlIO_stderr() #15
  %2257 = shl nsw i32 %7, 1
  %2258 = add nsw i32 %2257, 2
  %2259 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2256, ptr noundef nonnull @.str.326, i32 noundef %2258, ptr noundef nonnull @.str.8) #15
  br label %2260

2260:                                             ; preds = %2251, %2255, %2250
  %2261 = load i64, ptr %1626, align 8, !tbaa !231
  %2262 = add i64 %2261, 1
  %2263 = load i16, ptr %1634, align 8, !tbaa !152
  %2264 = zext i16 %2263 to i64
  %2265 = mul i64 %2262, %2264
  %2266 = add i64 %2265, 1
  %2267 = call noalias ptr @calloc(i64 noundef %2266, i64 noundef 8) #16
  %2268 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 4
  store ptr %2267, ptr %2268, align 8, !tbaa !165
  %2269 = add i64 %2261, 2
  %2270 = call noalias ptr @calloc(i64 noundef %2269, i64 noundef 16) #16
  %2271 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 3
  store ptr %2270, ptr %2271, align 8, !tbaa !155
  %2272 = zext i16 %2263 to i32
  %2273 = add nuw nsw i32 %2272, 1
  br i1 %186, label %2274, label %2474

2274:                                             ; preds = %2260
  %2275 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %2276 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 6
  %2277 = ptrtoint ptr %185 to i64
  br label %2278

2278:                                             ; preds = %2274, %2471
  %2279 = phi ptr [ %2, %2274 ], [ %2472, %2471 ]
  %2280 = phi i16 [ 0, %2274 ], [ %2434, %2471 ]
  %2281 = phi i32 [ %2273, %2274 ], [ %2406, %2471 ]
  %2282 = phi ptr [ null, %2274 ], [ %2460, %2471 ]
  %2283 = phi ptr [ null, %2274 ], [ %2459, %2471 ]
  %2284 = getelementptr inbounds %struct.regnode, ptr %2279, i64 1
  %2285 = getelementptr inbounds %struct.regnode, ptr %2279, i64 2
  %2286 = load i8, ptr %2284, align 2, !tbaa !205
  %2287 = zext i8 %2286 to i64
  %2288 = getelementptr inbounds i8, ptr %2285, i64 %2287
  %2289 = getelementptr inbounds %struct.regnode, ptr %2279, i64 1, i32 1
  %2290 = load i8, ptr %2289, align 1, !tbaa !141
  %2291 = icmp eq i8 %2290, 40
  br i1 %2291, label %2292, label %2305

2292:                                             ; preds = %2278
  %2293 = call ptr @Perl_regnext(ptr noundef nonnull %2284) #15
  %2294 = icmp eq ptr %2293, %4
  br i1 %2294, label %2305, label %2295

2295:                                             ; preds = %2292
  %2296 = getelementptr inbounds %struct.regnode, ptr %2293, i64 0, i32 1
  %2297 = load i8, ptr %2296, align 1, !tbaa !141
  %2298 = zext i8 %2297 to i32
  %2299 = icmp eq i32 %2298, %6
  br i1 %2299, label %2300, label %2305

2300:                                             ; preds = %2295
  %2301 = getelementptr inbounds %struct.regnode_string, ptr %2293, i64 0, i32 3
  %2302 = load i8, ptr %2293, align 2, !tbaa !205
  %2303 = zext i8 %2302 to i64
  %2304 = getelementptr inbounds i8, ptr %2301, i64 %2303
  br label %2305

2305:                                             ; preds = %2292, %2295, %2300, %2278
  %2306 = phi ptr [ %2284, %2278 ], [ %2293, %2300 ], [ %2284, %2295 ], [ %2284, %2292 ]
  %2307 = phi ptr [ %2285, %2278 ], [ %2301, %2300 ], [ %2285, %2295 ], [ %2285, %2292 ]
  %2308 = phi ptr [ %2288, %2278 ], [ %2304, %2300 ], [ %2288, %2295 ], [ %2288, %2292 ]
  %2309 = getelementptr inbounds %struct.regnode, ptr %2306, i64 0, i32 1
  %2310 = load i8, ptr %2309, align 1, !tbaa !141
  %2311 = icmp ne i8 %2310, 40
  %2312 = icmp ult ptr %2307, %2308
  %2313 = select i1 %2311, i1 %2312, i1 false
  br i1 %2313, label %2314, label %2403

2314:                                             ; preds = %2305, %2397
  %2315 = phi i32 [ %2399, %2397 ], [ %2281, %2305 ]
  %2316 = phi i32 [ %2319, %2397 ], [ 0, %2305 ]
  %2317 = phi i32 [ %2398, %2397 ], [ 1, %2305 ]
  %2318 = phi ptr [ %2401, %2397 ], [ %2307, %2305 ]
  %2319 = add i32 %2316, 1
  %2320 = load i32, ptr %2275, align 8, !tbaa !50
  %2321 = icmp eq i32 %2320, 0
  br i1 %2321, label %2324, label %2322

2322:                                             ; preds = %2314
  %2323 = call i64 @Perl_valid_utf8_to_uvchr(ptr noundef %2318, ptr noundef nonnull %12) #15
  store i64 %2323, ptr %13, align 8, !tbaa !9
  br label %2340

2324:                                             ; preds = %2314
  %2325 = load i8, ptr %2318, align 1, !tbaa !17
  br i1 %96, label %2326, label %2338

2326:                                             ; preds = %2324
  %2327 = icmp eq i8 %2325, -33
  br i1 %2327, label %2328, label %2330

2328:                                             ; preds = %2326
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.314, i32 noundef 2698) #15
  %2329 = load i8, ptr %2318, align 1, !tbaa !17
  br label %2330

2330:                                             ; preds = %2326, %2328
  %2331 = phi i8 [ %2325, %2326 ], [ %2329, %2328 ]
  %2332 = zext i8 %2331 to i64
  %2333 = getelementptr inbounds [0 x i8], ptr @PL_latin1_lc, i64 0, i64 %2332
  %2334 = load i8, ptr %2333, align 1, !tbaa !17
  %2335 = zext i8 %2334 to i64
  %2336 = icmp eq i8 %2334, -75
  %2337 = select i1 %2336, i64 956, i64 %2335
  store i64 %2337, ptr %13, align 8
  store i64 1, ptr %12, align 8, !tbaa !9
  br label %2340

2338:                                             ; preds = %2324
  %2339 = zext i8 %2325 to i64
  store i64 %2339, ptr %13, align 8, !tbaa !9
  store i64 1, ptr %12, align 8, !tbaa !9
  br label %2343

2340:                                             ; preds = %2330, %2322
  %2341 = phi i64 [ %2337, %2330 ], [ %2323, %2322 ]
  %2342 = icmp ult i64 %2341, 256
  br i1 %2342, label %2343, label %2348

2343:                                             ; preds = %2338, %2340
  %2344 = phi i64 [ %2339, %2338 ], [ %2341, %2340 ]
  %2345 = load ptr, ptr %106, align 8, !tbaa !330
  %2346 = getelementptr inbounds i16, ptr %2345, i64 %2344
  %2347 = load i16, ptr %2346, align 2, !tbaa !139
  br label %2366

2348:                                             ; preds = %2340
  %2349 = call ptr @Perl_hv_common_key_len(ptr noundef %1602, ptr noundef nonnull %13, i32 noundef 8, i32 noundef 32, ptr noundef null, i32 noundef 0) #15
  %2350 = icmp eq ptr %2349, null
  br i1 %2350, label %2395, label %2351

2351:                                             ; preds = %2348
  %2352 = load ptr, ptr %2349, align 8, !tbaa !5
  %2353 = getelementptr inbounds %struct.sv, ptr %2352, i64 0, i32 2
  %2354 = load i32, ptr %2353, align 4, !tbaa !13
  %2355 = and i32 %2354, 2097408
  %2356 = icmp eq i32 %2355, 256
  br i1 %2356, label %2357, label %2361

2357:                                             ; preds = %2351
  %2358 = load ptr, ptr %2352, align 8, !tbaa !16
  %2359 = getelementptr inbounds %struct.xpviv, ptr %2358, i64 0, i32 4
  %2360 = load i64, ptr %2359, align 8, !tbaa !17
  br label %2363

2361:                                             ; preds = %2351
  %2362 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %2352, i32 noundef 2) #15
  br label %2363

2363:                                             ; preds = %2361, %2357
  %2364 = phi i64 [ %2360, %2357 ], [ %2362, %2361 ]
  %2365 = trunc i64 %2364 to i16
  br label %2366

2366:                                             ; preds = %2363, %2343
  %2367 = phi i16 [ %2347, %2343 ], [ %2365, %2363 ]
  %2368 = icmp eq i16 %2367, 0
  br i1 %2368, label %2395, label %2369

2369:                                             ; preds = %2366
  %2370 = add i16 %2367, -1
  %2371 = load ptr, ptr %2268, align 8, !tbaa !165
  %2372 = zext i16 %2370 to i32
  %2373 = add i32 %2317, %2372
  %2374 = zext i32 %2373 to i64
  %2375 = getelementptr inbounds %struct._reg_trie_trans, ptr %2371, i64 %2374
  %2376 = load i32, ptr %2375, align 4, !tbaa !168
  %2377 = icmp eq i32 %2376, 0
  br i1 %2377, label %2378, label %2397

2378:                                             ; preds = %2369
  store i32 %2315, ptr %2375, align 4, !tbaa !168
  %2379 = zext i32 %2317 to i64
  %2380 = getelementptr inbounds %struct._reg_trie_trans, ptr %2371, i64 %2379, i32 1
  %2381 = load i32, ptr %2380, align 4, !tbaa !166
  %2382 = add i32 %2381, 1
  store i32 %2382, ptr %2380, align 4, !tbaa !166
  %2383 = add i32 %2317, -1
  %2384 = load i16, ptr %1634, align 8, !tbaa !152
  %2385 = zext i16 %2384 to i32
  %2386 = udiv i32 %2383, %2385
  %2387 = add i32 %2386, 1
  %2388 = add i32 %2315, -1
  %2389 = udiv i32 %2388, %2385
  %2390 = add i32 %2389, 1
  %2391 = zext i32 %2390 to i64
  %2392 = getelementptr inbounds i32, ptr %1630, i64 %2391
  store i32 %2387, ptr %2392, align 4, !tbaa !73
  %2393 = add i32 %2315, %2385
  %2394 = load i32, ptr %2375, align 4, !tbaa !168
  br label %2397

2395:                                             ; preds = %2348, %2366
  %2396 = load i64, ptr %13, align 8, !tbaa !9
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.325, i64 noundef %2396) #15
  br label %2397

2397:                                             ; preds = %2369, %2378, %2395
  %2398 = phi i32 [ %2317, %2395 ], [ %2376, %2369 ], [ %2394, %2378 ]
  %2399 = phi i32 [ %2315, %2395 ], [ %2315, %2369 ], [ %2393, %2378 ]
  %2400 = load i64, ptr %12, align 8, !tbaa !9
  %2401 = getelementptr inbounds i8, ptr %2318, i64 %2400
  %2402 = icmp ult ptr %2401, %2308
  br i1 %2402, label %2314, label %2403, !llvm.loop !358

2403:                                             ; preds = %2397, %2305
  %2404 = phi i32 [ 1, %2305 ], [ %2398, %2397 ]
  %2405 = phi i32 [ 0, %2305 ], [ %2319, %2397 ]
  %2406 = phi i32 [ %2281, %2305 ], [ %2399, %2397 ]
  %2407 = add i32 %2404, -1
  %2408 = load i16, ptr %1634, align 8, !tbaa !152
  %2409 = zext i16 %2408 to i32
  %2410 = udiv i32 %2407, %2409
  %2411 = add i32 %2410, 1
  %2412 = load ptr, ptr %2271, align 8, !tbaa !155
  %2413 = zext i32 %2411 to i64
  %2414 = getelementptr inbounds %struct._reg_trie_state, ptr %2412, i64 %2413
  %2415 = load i16, ptr %2414, align 8, !tbaa !170
  %2416 = call ptr @Perl_regnext(ptr noundef nonnull %2306) #15
  %2417 = load i8, ptr %2309, align 1, !tbaa !141
  %2418 = icmp eq i8 %2417, 40
  br i1 %2418, label %2427, label %2419

2419:                                             ; preds = %2403
  %2420 = getelementptr inbounds %struct.regnode_string, ptr %2306, i64 0, i32 3
  %2421 = load i8, ptr %2306, align 2, !tbaa !205
  %2422 = zext i8 %2421 to i64
  %2423 = load i32, ptr %2275, align 8, !tbaa !50
  %2424 = icmp eq i32 %2423, 0
  %2425 = select i1 %2424, i32 0, i32 536870912
  %2426 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull %2420, i64 noundef %2422, i32 noundef %2425) #15
  br label %2432

2427:                                             ; preds = %2403
  %2428 = load i32, ptr %2275, align 8, !tbaa !50
  %2429 = icmp eq i32 %2428, 0
  %2430 = select i1 %2429, i32 0, i32 536870912
  %2431 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @.str.8, i64 noundef 0, i32 noundef %2430) #15
  br label %2432

2432:                                             ; preds = %2427, %2419
  %2433 = phi ptr [ %2426, %2419 ], [ %2431, %2427 ]
  call void @Perl_av_push(ptr noundef %117, ptr noundef %2433) #15
  %2434 = add i16 %2280, 1
  %2435 = load ptr, ptr %116, align 8, !tbaa !331
  %2436 = zext i16 %2434 to i64
  %2437 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %2435, i64 %2436
  store i16 0, ptr %2437, align 4, !tbaa !347
  %2438 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %2435, i64 %2436, i32 1
  store i32 %2405, ptr %2438, align 4, !tbaa !349
  %2439 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %2435, i64 %2436, i32 2
  store i32 %2411, ptr %2439, align 4, !tbaa !350
  %2440 = icmp ult ptr %2416, %4
  br i1 %2440, label %2441, label %2458

2441:                                             ; preds = %2432
  %2442 = load ptr, ptr %2276, align 8, !tbaa !290
  %2443 = icmp eq ptr %2442, null
  br i1 %2443, label %2444, label %2446

2444:                                             ; preds = %2441
  %2445 = call noalias ptr @calloc(i64 noundef %114, i64 noundef 2) #16
  store ptr %2445, ptr %2276, align 8, !tbaa !290
  br label %2446

2446:                                             ; preds = %2444, %2441
  %2447 = phi ptr [ %2445, %2444 ], [ %2442, %2441 ]
  %2448 = ptrtoint ptr %2416 to i64
  %2449 = sub i64 %2448, %2277
  %2450 = lshr exact i64 %2449, 2
  %2451 = trunc i64 %2450 to i16
  %2452 = getelementptr inbounds i16, ptr %2447, i64 %2436
  store i16 %2451, ptr %2452, align 2, !tbaa !139
  %2453 = icmp eq ptr %2282, null
  %2454 = select i1 %2453, ptr %2416, ptr %2282
  %2455 = icmp eq ptr %2283, null
  br i1 %2455, label %2456, label %2458

2456:                                             ; preds = %2446
  %2457 = call ptr @Perl_regnext(ptr noundef %2279) #15
  br label %2458

2458:                                             ; preds = %2446, %2456, %2432
  %2459 = phi ptr [ %2283, %2446 ], [ %2457, %2456 ], [ %2283, %2432 ]
  %2460 = phi ptr [ %2454, %2446 ], [ %2454, %2456 ], [ %2282, %2432 ]
  %2461 = icmp eq i16 %2415, 0
  br i1 %2461, label %2468, label %2462

2462:                                             ; preds = %2458
  %2463 = load ptr, ptr %116, align 8, !tbaa !331
  %2464 = zext i16 %2415 to i64
  %2465 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %2463, i64 %2464
  %2466 = load i16, ptr %2465, align 4, !tbaa !347
  %2467 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %2463, i64 %2436
  store i16 %2466, ptr %2467, align 4, !tbaa !347
  store i16 %2434, ptr %2465, align 4, !tbaa !347
  br label %2471

2468:                                             ; preds = %2458
  %2469 = load ptr, ptr %2271, align 8, !tbaa !155
  %2470 = getelementptr inbounds %struct._reg_trie_state, ptr %2469, i64 %2413
  store i16 %2434, ptr %2470, align 8, !tbaa !170
  br label %2471

2471:                                             ; preds = %2468, %2462
  %2472 = call ptr @Perl_regnext(ptr noundef %2279) #15
  %2473 = icmp ult ptr %2472, %3
  br i1 %2473, label %2278, label %2474, !llvm.loop !359

2474:                                             ; preds = %2471, %2260
  %2475 = phi ptr [ null, %2260 ], [ %2459, %2471 ]
  %2476 = phi ptr [ null, %2260 ], [ %2460, %2471 ]
  %2477 = phi i32 [ %2273, %2260 ], [ %2406, %2471 ]
  %2478 = load volatile i64, ptr %14, align 8, !tbaa !9
  %2479 = and i64 %2478, 4
  %2480 = icmp eq i64 %2479, 0
  br i1 %2480, label %2651, label %2481

2481:                                             ; preds = %2474
  %2482 = load volatile i64, ptr %14, align 8, !tbaa !9
  %2483 = and i64 %2482, 65536
  %2484 = icmp eq i64 %2483, 0
  br i1 %2484, label %2651, label %2485

2485:                                             ; preds = %2481
  %2486 = call ptr @Perl_sv_newmortal() #15
  %2487 = icmp eq ptr %1602, null
  %2488 = select i1 %2487, i32 4, i32 6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10)
  store volatile i64 0, ptr %10, align 8, !tbaa !9
  %2489 = load volatile i64, ptr %10, align 8, !tbaa !9
  %2490 = call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %2491 = icmp eq ptr %2490, null
  br i1 %2491, label %2511, label %2492

2492:                                             ; preds = %2485
  %2493 = getelementptr inbounds %struct.sv, ptr %2490, i64 0, i32 2
  %2494 = load i32, ptr %2493, align 4, !tbaa !13
  %2495 = and i32 %2494, 256
  %2496 = icmp eq i32 %2495, 0
  br i1 %2496, label %2497, label %2499

2497:                                             ; preds = %2492
  call void @Perl_sv_setuv(ptr noundef nonnull %2490, i64 noundef 65288) #15
  %2498 = load i32, ptr %2493, align 4, !tbaa !13
  br label %2499

2499:                                             ; preds = %2497, %2492
  %2500 = phi i32 [ %2498, %2497 ], [ %2494, %2492 ]
  %2501 = and i32 %2500, 2097408
  %2502 = icmp eq i32 %2501, 256
  br i1 %2502, label %2503, label %2507

2503:                                             ; preds = %2499
  %2504 = load ptr, ptr %2490, align 8, !tbaa !16
  %2505 = getelementptr inbounds %struct.xpviv, ptr %2504, i64 0, i32 4
  %2506 = load i64, ptr %2505, align 8, !tbaa !17
  br label %2509

2507:                                             ; preds = %2499
  %2508 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %2490, i32 noundef 2) #15
  br label %2509

2509:                                             ; preds = %2507, %2503
  %2510 = phi i64 [ %2506, %2503 ], [ %2508, %2507 ]
  store volatile i64 %2510, ptr %10, align 8, !tbaa !9
  br label %2511

2511:                                             ; preds = %2485, %2509
  %2512 = icmp eq ptr %19, null
  br i1 %2512, label %2513, label %2514

2513:                                             ; preds = %2511
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.338, i32 noundef 1829) #15
  br label %2514

2514:                                             ; preds = %2513, %2511
  %2515 = call ptr @Perl_PerlIO_stderr() #15
  %2516 = shl i32 %7, 1
  %2517 = add i32 %2516, 4
  %2518 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2515, ptr noundef nonnull @.str.346, i32 noundef %2517, ptr noundef nonnull @.str.8) #15
  %2519 = load i16, ptr %1634, align 8, !tbaa !152
  %2520 = icmp eq i16 %2519, 0
  br i1 %2520, label %2561, label %2521

2521:                                             ; preds = %2514
  %2522 = zext i32 %2488 to i64
  br label %2523

2523:                                             ; preds = %2556, %2521
  %2524 = phi i64 [ 0, %2521 ], [ %2557, %2556 ]
  %2525 = call ptr @Perl_av_fetch(ptr noundef %19, i64 noundef %2524, i32 noundef 0) #15
  %2526 = icmp eq ptr %2525, null
  br i1 %2526, label %2556, label %2527

2527:                                             ; preds = %2523
  %2528 = call ptr @Perl_PerlIO_stderr() #15
  %2529 = load ptr, ptr %2525, align 8, !tbaa !5
  %2530 = getelementptr inbounds %struct.sv, ptr %2529, i64 0, i32 2
  %2531 = load i32, ptr %2530, align 4, !tbaa !13
  %2532 = and i32 %2531, 2098176
  %2533 = icmp eq i32 %2532, 1024
  br i1 %2533, label %2534, label %2537

2534:                                             ; preds = %2527
  %2535 = getelementptr inbounds %struct.sv, ptr %2529, i64 0, i32 3
  %2536 = load ptr, ptr %2535, align 8, !tbaa !17
  br label %2542

2537:                                             ; preds = %2527
  %2538 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %2529, ptr noundef null, i32 noundef 34) #15
  %2539 = load ptr, ptr %2525, align 8, !tbaa !5
  %2540 = getelementptr inbounds %struct.sv, ptr %2539, i64 0, i32 2
  %2541 = load i32, ptr %2540, align 4, !tbaa !13
  br label %2542

2542:                                             ; preds = %2537, %2534
  %2543 = phi i32 [ %2531, %2534 ], [ %2541, %2537 ]
  %2544 = phi ptr [ %2529, %2534 ], [ %2539, %2537 ]
  %2545 = phi ptr [ %2536, %2534 ], [ %2538, %2537 ]
  %2546 = load ptr, ptr %2544, align 8, !tbaa !16
  %2547 = getelementptr inbounds %struct.xpv, ptr %2546, i64 0, i32 2
  %2548 = load i64, ptr %2547, align 8, !tbaa !38
  %2549 = load ptr, ptr @PL_colors, align 16, !tbaa !5
  %2550 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 1), align 8, !tbaa !5
  %2551 = lshr i32 %2543, 21
  %2552 = and i32 %2551, 256
  %2553 = or i32 %2552, 2048
  %2554 = call ptr @Perl_pv_pretty(ptr noundef %2486, ptr noundef %2545, i64 noundef %2548, i64 noundef %2522, ptr noundef %2549, ptr noundef %2550, i32 noundef %2553) #15
  %2555 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2528, ptr noundef nonnull @.str.347, i32 noundef %2488, ptr noundef %2554) #15
  br label %2556

2556:                                             ; preds = %2542, %2523
  %2557 = add nuw nsw i64 %2524, 1
  %2558 = load i16, ptr %1634, align 8, !tbaa !152
  %2559 = zext i16 %2558 to i64
  %2560 = icmp ult i64 %2557, %2559
  br i1 %2560, label %2523, label %2561, !llvm.loop !360

2561:                                             ; preds = %2556, %2514
  %2562 = call ptr @Perl_PerlIO_stderr() #15
  %2563 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2562, ptr noundef nonnull @.str.348, i32 noundef %2517, ptr noundef nonnull @.str.8) #15
  %2564 = load i16, ptr %1634, align 8, !tbaa !152
  %2565 = icmp eq i16 %2564, 0
  br i1 %2565, label %2573, label %2566

2566:                                             ; preds = %2561, %2566
  %2567 = phi i16 [ %2570, %2566 ], [ 0, %2561 ]
  %2568 = call ptr @Perl_PerlIO_stderr() #15
  %2569 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2568, ptr noundef nonnull @.str.349, i32 noundef %2488, ptr noundef nonnull @.str.350) #15
  %2570 = add nuw i16 %2567, 1
  %2571 = load i16, ptr %1634, align 8, !tbaa !152
  %2572 = icmp ult i16 %2570, %2571
  br i1 %2572, label %2566, label %2573, !llvm.loop !361

2573:                                             ; preds = %2566, %2561
  %2574 = call ptr @Perl_PerlIO_stderr() #15
  %2575 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2574, ptr noundef nonnull @.str.53) #15
  %2576 = icmp ugt i32 %2477, 1
  br i1 %2576, label %2577, label %2650

2577:                                             ; preds = %2573, %2645
  %2578 = phi i32 [ %2648, %2645 ], [ 1, %2573 ]
  %2579 = call ptr @Perl_PerlIO_stderr() #15
  %2580 = add i32 %2578, -1
  %2581 = load i16, ptr %1634, align 8, !tbaa !152
  %2582 = zext i16 %2581 to i32
  %2583 = udiv i32 %2580, %2582
  %2584 = add i32 %2583, 1
  %2585 = zext i32 %2584 to i64
  %2586 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2579, ptr noundef nonnull @.str.351, i32 noundef %2517, ptr noundef nonnull @.str.8, i64 noundef %2585) #15
  %2587 = load i16, ptr %1634, align 8, !tbaa !152
  %2588 = icmp eq i16 %2587, 0
  br i1 %2588, label %2617, label %2589

2589:                                             ; preds = %2577
  %2590 = zext i16 %2587 to i32
  br label %2591

2591:                                             ; preds = %2589, %2611
  %2592 = phi i64 [ %2612, %2611 ], [ 0, %2589 ]
  %2593 = phi i32 [ %2614, %2611 ], [ %2590, %2589 ]
  %2594 = load ptr, ptr %2268, align 8, !tbaa !165
  %2595 = trunc i64 %2592 to i32
  %2596 = add i32 %2578, %2595
  %2597 = zext i32 %2596 to i64
  %2598 = getelementptr inbounds %struct._reg_trie_trans, ptr %2594, i64 %2597
  %2599 = load i32, ptr %2598, align 4, !tbaa !168
  %2600 = icmp eq i32 %2599, 0
  br i1 %2600, label %2608, label %2601

2601:                                             ; preds = %2591
  %2602 = add i32 %2599, -1
  %2603 = udiv i32 %2602, %2593
  %2604 = add nuw i32 %2603, 1
  %2605 = zext i32 %2604 to i64
  %2606 = call ptr @Perl_PerlIO_stderr() #15
  %2607 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2606, ptr noundef nonnull @.str.352, i32 noundef %2488, i64 noundef %2605) #15
  br label %2611

2608:                                             ; preds = %2591
  %2609 = call ptr @Perl_PerlIO_stderr() #15
  %2610 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2609, ptr noundef nonnull @.str.347, i32 noundef %2488, ptr noundef nonnull @.str.353) #15
  br label %2611

2611:                                             ; preds = %2608, %2601
  %2612 = add nuw nsw i64 %2592, 1
  %2613 = load i16, ptr %1634, align 8, !tbaa !152
  %2614 = zext i16 %2613 to i32
  %2615 = zext i16 %2613 to i64
  %2616 = icmp ult i64 %2612, %2615
  br i1 %2616, label %2591, label %2617, !llvm.loop !362

2617:                                             ; preds = %2611, %2577
  %2618 = phi i32 [ 0, %2577 ], [ %2614, %2611 ]
  %2619 = load ptr, ptr %2271, align 8, !tbaa !155
  %2620 = udiv i32 %2580, %2618
  %2621 = add i32 %2620, 1
  %2622 = zext i32 %2621 to i64
  %2623 = getelementptr inbounds %struct._reg_trie_state, ptr %2619, i64 %2622
  %2624 = load i16, ptr %2623, align 8, !tbaa !170
  %2625 = icmp eq i16 %2624, 0
  %2626 = call ptr @Perl_PerlIO_stderr() #15
  %2627 = load ptr, ptr %2268, align 8, !tbaa !165
  %2628 = zext i32 %2578 to i64
  %2629 = getelementptr inbounds %struct._reg_trie_trans, ptr %2627, i64 %2628, i32 1
  %2630 = load i32, ptr %2629, align 4, !tbaa !166
  %2631 = zext i32 %2630 to i64
  br i1 %2625, label %2632, label %2634

2632:                                             ; preds = %2617
  %2633 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2626, ptr noundef nonnull @.str.354, i64 noundef %2631) #15
  br label %2645

2634:                                             ; preds = %2617
  %2635 = load ptr, ptr %2271, align 8, !tbaa !155
  %2636 = load i16, ptr %1634, align 8, !tbaa !152
  %2637 = zext i16 %2636 to i32
  %2638 = udiv i32 %2580, %2637
  %2639 = add i32 %2638, 1
  %2640 = zext i32 %2639 to i64
  %2641 = getelementptr inbounds %struct._reg_trie_state, ptr %2635, i64 %2640
  %2642 = load i16, ptr %2641, align 8, !tbaa !170
  %2643 = zext i16 %2642 to i32
  %2644 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2626, ptr noundef nonnull @.str.355, i64 noundef %2631, i32 noundef %2643) #15
  br label %2645

2645:                                             ; preds = %2634, %2632
  %2646 = load i16, ptr %1634, align 8, !tbaa !152
  %2647 = zext i16 %2646 to i32
  %2648 = add i32 %2578, %2647
  %2649 = icmp ult i32 %2648, %2477
  br i1 %2649, label %2577, label %2650, !llvm.loop !363

2650:                                             ; preds = %2645, %2573
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10)
  br label %2651

2651:                                             ; preds = %2481, %2650, %2474
  %2652 = add i32 %2477, -1
  %2653 = load i16, ptr %1634, align 8, !tbaa !152
  %2654 = zext i16 %2653 to i32
  %2655 = udiv i32 %2652, %2654
  %2656 = add i32 %2655, 1
  %2657 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 13
  store i32 %2656, ptr %2657, align 4, !tbaa !153
  %2658 = icmp ugt i32 %2656, 1
  %2659 = zext i32 %2656 to i64
  br i1 %2658, label %2660, label %2786

2660:                                             ; preds = %2651, %2781
  %2661 = phi i64 [ %2784, %2781 ], [ 1, %2651 ]
  %2662 = phi i32 [ %2783, %2781 ], [ 0, %2651 ]
  %2663 = phi i32 [ %2782, %2781 ], [ 0, %2651 ]
  %2664 = load i16, ptr %1634, align 8, !tbaa !152
  %2665 = zext i16 %2664 to i32
  %2666 = trunc i64 %2661 to i32
  %2667 = add i32 %2666, -1
  %2668 = mul i32 %2667, %2665
  %2669 = add i32 %2668, 1
  %2670 = load ptr, ptr %2268, align 8, !tbaa !165
  %2671 = zext i32 %2669 to i64
  %2672 = getelementptr inbounds %struct._reg_trie_trans, ptr %2670, i64 %2671, i32 1
  %2673 = load i32, ptr %2672, align 4, !tbaa !166
  store i32 0, ptr %2672, align 4, !tbaa !166
  %2674 = icmp eq i32 %2673, 0
  br i1 %2674, label %2781, label %2675

2675:                                             ; preds = %2660
  %2676 = icmp eq i32 %2673, 1
  %2677 = trunc i64 %2661 to i32
  br label %2678

2678:                                             ; preds = %2675, %2771
  %2679 = phi ptr [ %2670, %2675 ], [ %2772, %2771 ]
  %2680 = phi ptr [ %2670, %2675 ], [ %2773, %2771 ]
  %2681 = phi i64 [ 0, %2675 ], [ %2777, %2771 ]
  %2682 = phi i32 [ 0, %2675 ], [ %2779, %2771 ]
  %2683 = phi i32 [ %2673, %2675 ], [ %2776, %2771 ]
  %2684 = phi i8 [ 0, %2675 ], [ %2775, %2771 ]
  %2685 = phi i32 [ %2663, %2675 ], [ %2774, %2771 ]
  %2686 = phi i32 [ 0, %2675 ], [ %2778, %2771 ]
  %2687 = load i16, ptr %1634, align 8, !tbaa !152
  %2688 = zext i16 %2687 to i32
  %2689 = zext i16 %2687 to i64
  %2690 = icmp ult i64 %2681, %2689
  br i1 %2690, label %2691, label %2781

2691:                                             ; preds = %2678
  %2692 = icmp eq i8 %2684, 0
  %2693 = trunc i64 %2681 to i32
  %2694 = add i32 %2669, %2693
  %2695 = zext i32 %2694 to i64
  br i1 %2692, label %2696, label %2700

2696:                                             ; preds = %2691
  %2697 = getelementptr inbounds %struct._reg_trie_trans, ptr %2680, i64 %2695
  %2698 = load i32, ptr %2697, align 4, !tbaa !168
  %2699 = icmp eq i32 %2698, 0
  br i1 %2699, label %2771, label %2700

2700:                                             ; preds = %2691, %2696
  %2701 = getelementptr inbounds %struct._reg_trie_trans, ptr %2680, i64 %2695
  %2702 = load i32, ptr %2701, align 4, !tbaa !168
  %2703 = icmp eq i32 %2702, 0
  br i1 %2703, label %2746, label %2704

2704:                                             ; preds = %2700
  br i1 %2676, label %2705, label %2744

2705:                                             ; preds = %2704
  %2706 = icmp ult i32 %2662, %2685
  br i1 %2706, label %2707, label %2720

2707:                                             ; preds = %2705
  %2708 = zext i32 %2662 to i64
  %2709 = zext i32 %2685 to i64
  br label %2710

2710:                                             ; preds = %2707, %2715
  %2711 = phi i64 [ %2708, %2707 ], [ %2716, %2715 ]
  %2712 = getelementptr inbounds %struct._reg_trie_trans, ptr %2680, i64 %2711
  %2713 = load i32, ptr %2712, align 4, !tbaa !168
  %2714 = icmp eq i32 %2713, 0
  br i1 %2714, label %2718, label %2715

2715:                                             ; preds = %2710
  %2716 = add nuw nsw i64 %2711, 1
  %2717 = icmp eq i64 %2716, %2709
  br i1 %2717, label %2720, label %2710, !llvm.loop !364

2718:                                             ; preds = %2710
  %2719 = trunc i64 %2711 to i32
  br label %2720

2720:                                             ; preds = %2715, %2718, %2705
  %2721 = phi i32 [ %2662, %2705 ], [ %2719, %2718 ], [ %2685, %2715 ]
  %2722 = add i32 %2682, %2688
  %2723 = add i32 %2722, %2721
  %2724 = load ptr, ptr %2271, align 8, !tbaa !155
  %2725 = getelementptr inbounds %struct._reg_trie_state, ptr %2724, i64 %2661, i32 1
  store i32 %2723, ptr %2725, align 8, !tbaa !17
  %2726 = load ptr, ptr %2268, align 8, !tbaa !165
  %2727 = getelementptr inbounds %struct._reg_trie_trans, ptr %2726, i64 %2695
  %2728 = load i32, ptr %2727, align 4, !tbaa !168
  %2729 = icmp eq i32 %2728, 0
  br i1 %2729, label %2736, label %2730

2730:                                             ; preds = %2720
  %2731 = add i32 %2728, -1
  %2732 = load i16, ptr %1634, align 8, !tbaa !152
  %2733 = zext i16 %2732 to i32
  %2734 = udiv i32 %2731, %2733
  %2735 = add nuw i32 %2734, 1
  br label %2736

2736:                                             ; preds = %2720, %2730
  %2737 = phi i32 [ %2735, %2730 ], [ 0, %2720 ]
  %2738 = zext i32 %2721 to i64
  %2739 = getelementptr inbounds %struct._reg_trie_trans, ptr %2726, i64 %2738
  store i32 %2737, ptr %2739, align 4, !tbaa !168
  %2740 = getelementptr inbounds %struct._reg_trie_trans, ptr %2726, i64 %2738, i32 1
  %2741 = trunc i64 %2661 to i32
  store i32 %2741, ptr %2740, align 4, !tbaa !166
  %2742 = add i32 %2721, 1
  %2743 = call i32 @llvm.umax.i32(i32 %2742, i32 %2685)
  br label %2781

2744:                                             ; preds = %2704
  %2745 = add i32 %2683, -1
  br label %2746

2746:                                             ; preds = %2744, %2700
  %2747 = phi i32 [ %2745, %2744 ], [ %2683, %2700 ]
  br i1 %2692, label %2748, label %2754

2748:                                             ; preds = %2746
  %2749 = add i32 %2685, %2682
  %2750 = add i32 %2749, %2688
  %2751 = load ptr, ptr %2271, align 8, !tbaa !155
  %2752 = getelementptr inbounds %struct._reg_trie_state, ptr %2751, i64 %2661, i32 1
  store i32 %2750, ptr %2752, align 8, !tbaa !17
  %2753 = load ptr, ptr %2268, align 8, !tbaa !165
  br label %2754

2754:                                             ; preds = %2748, %2746
  %2755 = phi ptr [ %2753, %2748 ], [ %2679, %2746 ]
  %2756 = getelementptr inbounds %struct._reg_trie_trans, ptr %2755, i64 %2695
  %2757 = load i32, ptr %2756, align 4, !tbaa !168
  %2758 = icmp eq i32 %2757, 0
  br i1 %2758, label %2765, label %2759

2759:                                             ; preds = %2754
  %2760 = add i32 %2757, -1
  %2761 = load i16, ptr %1634, align 8, !tbaa !152
  %2762 = zext i16 %2761 to i32
  %2763 = udiv i32 %2760, %2762
  %2764 = add nuw i32 %2763, 1
  br label %2765

2765:                                             ; preds = %2754, %2759
  %2766 = phi i32 [ %2764, %2759 ], [ 0, %2754 ]
  %2767 = zext i32 %2685 to i64
  %2768 = getelementptr inbounds %struct._reg_trie_trans, ptr %2755, i64 %2767
  store i32 %2766, ptr %2768, align 4, !tbaa !168
  %2769 = getelementptr inbounds %struct._reg_trie_trans, ptr %2755, i64 %2767, i32 1
  store i32 %2677, ptr %2769, align 4, !tbaa !166
  %2770 = add i32 %2685, 1
  br label %2771

2771:                                             ; preds = %2696, %2765
  %2772 = phi ptr [ %2755, %2765 ], [ %2679, %2696 ]
  %2773 = phi ptr [ %2755, %2765 ], [ %2680, %2696 ]
  %2774 = phi i32 [ %2770, %2765 ], [ %2685, %2696 ]
  %2775 = phi i8 [ 1, %2765 ], [ 0, %2696 ]
  %2776 = phi i32 [ %2747, %2765 ], [ %2683, %2696 ]
  %2777 = add nuw nsw i64 %2681, 1
  %2778 = add nuw nsw i32 %2686, 1
  %2779 = xor i32 %2686, -1
  %2780 = icmp eq i32 %2776, 0
  br i1 %2780, label %2781, label %2678, !llvm.loop !365

2781:                                             ; preds = %2678, %2771, %2660, %2736
  %2782 = phi i32 [ %2743, %2736 ], [ %2663, %2660 ], [ %2685, %2678 ], [ %2774, %2771 ]
  %2783 = phi i32 [ %2742, %2736 ], [ %2662, %2660 ], [ %2662, %2771 ], [ %2662, %2678 ]
  %2784 = add nuw nsw i64 %2661, 1
  %2785 = icmp eq i64 %2784, %2659
  br i1 %2785, label %2786, label %2660, !llvm.loop !366

2786:                                             ; preds = %2781, %2651
  %2787 = phi i32 [ 0, %2651 ], [ %2782, %2781 ]
  %2788 = add i32 %2787, 1
  %2789 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 1
  store i32 %2788, ptr %2789, align 4, !tbaa !154
  %2790 = load ptr, ptr %2271, align 8, !tbaa !155
  %2791 = shl nuw nsw i64 %2659, 4
  %2792 = call ptr @realloc(ptr noundef %2790, i64 noundef %2791) #19
  store ptr %2792, ptr %2271, align 8, !tbaa !155
  %2793 = load volatile i64, ptr %14, align 8, !tbaa !9
  %2794 = and i64 %2793, 4
  %2795 = icmp eq i64 %2794, 0
  br i1 %2795, label %2819, label %2796

2796:                                             ; preds = %2786
  %2797 = load volatile i64, ptr %14, align 8, !tbaa !9
  %2798 = and i64 %2797, 65536
  %2799 = icmp eq i64 %2798, 0
  br i1 %2799, label %2819, label %2800

2800:                                             ; preds = %2796
  %2801 = call ptr @Perl_PerlIO_stderr() #15
  %2802 = shl nsw i32 %7, 1
  %2803 = add nsw i32 %2802, 2
  %2804 = load i64, ptr %1626, align 8, !tbaa !231
  %2805 = add i64 %2804, 1
  %2806 = load i16, ptr %1634, align 8, !tbaa !152
  %2807 = zext i16 %2806 to i64
  %2808 = mul i64 %2805, %2807
  %2809 = trunc i64 %2808 to i32
  %2810 = add i32 %2809, 1
  %2811 = zext i32 %2477 to i64
  %2812 = zext i32 %2787 to i64
  %2813 = sub i32 %2477, %2787
  %2814 = mul i32 %2813, 100
  %2815 = uitofp i32 %2814 to double
  %2816 = uitofp i32 %2477 to double
  %2817 = fdiv fast double %2815, %2816
  %2818 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2801, ptr noundef nonnull @.str.327, i32 noundef %2803, ptr noundef nonnull @.str.8, i32 noundef %2810, i64 noundef %2811, i64 noundef %2812, double noundef nofpclass(nan inf) %2817) #15
  br label %2819

2819:                                             ; preds = %2786, %2800, %2796, %2246
  %2820 = phi ptr [ %1934, %2246 ], [ %2475, %2796 ], [ %2475, %2800 ], [ %2475, %2786 ]
  %2821 = phi ptr [ %1935, %2246 ], [ %2476, %2796 ], [ %2476, %2800 ], [ %2476, %2786 ]
  %2822 = load volatile i64, ptr %14, align 8, !tbaa !9
  %2823 = and i64 %2822, 4
  %2824 = icmp eq i64 %2823, 0
  br i1 %2824, label %2840, label %2825

2825:                                             ; preds = %2819
  %2826 = load volatile i64, ptr %14, align 8, !tbaa !9
  %2827 = and i64 %2826, 65536
  %2828 = icmp eq i64 %2827, 0
  br i1 %2828, label %2840, label %2829

2829:                                             ; preds = %2825
  %2830 = call ptr @Perl_PerlIO_stderr() #15
  %2831 = shl nsw i32 %7, 1
  %2832 = add nsw i32 %2831, 2
  %2833 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 13
  %2834 = load i32, ptr %2833, align 4, !tbaa !153
  %2835 = zext i32 %2834 to i64
  %2836 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 1
  %2837 = load i32, ptr %2836, align 4, !tbaa !154
  %2838 = zext i32 %2837 to i64
  %2839 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2830, ptr noundef nonnull @.str.328, i32 noundef %2832, ptr noundef nonnull @.str.8, i64 noundef %2835, i64 noundef %2838) #15
  br label %2840

2840:                                             ; preds = %2825, %2829, %2819
  %2841 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 4
  %2842 = load ptr, ptr %2841, align 8, !tbaa !165
  %2843 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 1
  %2844 = load i32, ptr %2843, align 4, !tbaa !154
  %2845 = zext i32 %2844 to i64
  %2846 = shl nuw nsw i64 %2845, 3
  %2847 = call ptr @realloc(ptr noundef %2842, i64 noundef %2846) #19
  store ptr %2847, ptr %2841, align 8, !tbaa !165
  %2848 = trunc i32 %6 to i8
  br i1 %177, label %2849, label %2853

2849:                                             ; preds = %2840
  %2850 = getelementptr inbounds %struct.regnode, ptr %3, i64 0, i32 1
  %2851 = load i8, ptr %2850, align 1, !tbaa !141
  %2852 = icmp eq i8 %2851, 30
  br i1 %2852, label %2853, label %2872

2853:                                             ; preds = %2849, %2840
  %2854 = ptrtoint ptr %3 to i64
  %2855 = ptrtoint ptr %2 to i64
  %2856 = sub i64 %2854, %2855
  %2857 = lshr exact i64 %2856, 2
  %2858 = trunc i64 %2857 to i16
  %2859 = getelementptr inbounds %struct.regnode, ptr %2, i64 0, i32 2
  store i16 %2858, ptr %2859, align 2, !tbaa !222
  %2860 = load ptr, ptr %20, align 8, !tbaa !130
  %2861 = getelementptr inbounds %struct.regexp_internal, ptr %2860, i64 0, i32 1
  %2862 = load ptr, ptr %2861, align 8, !tbaa !17
  %2863 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2864 = load ptr, ptr %2863, align 8, !tbaa !131
  %2865 = ptrtoint ptr %185 to i64
  %2866 = ptrtoint ptr %2864 to i64
  %2867 = sub i64 %2865, %2866
  %2868 = ashr exact i64 %2867, 1
  %2869 = add nsw i64 %2868, -1
  %2870 = getelementptr inbounds i32, ptr %2862, i64 %2869
  %2871 = getelementptr inbounds i32, ptr %2862, i64 %2868
  br label %2886

2872:                                             ; preds = %2849
  %2873 = getelementptr inbounds %struct.regnode, ptr %185, i64 1
  %2874 = load ptr, ptr %20, align 8, !tbaa !130
  %2875 = getelementptr inbounds %struct.regexp_internal, ptr %2874, i64 0, i32 1
  %2876 = load ptr, ptr %2875, align 8, !tbaa !17
  %2877 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2878 = load ptr, ptr %2877, align 8, !tbaa !131
  %2879 = ptrtoint ptr %2873 to i64
  %2880 = ptrtoint ptr %2878 to i64
  %2881 = sub i64 %2879, %2880
  %2882 = ashr exact i64 %2881, 1
  %2883 = add nsw i64 %2882, -1
  %2884 = getelementptr inbounds i32, ptr %2876, i64 %2883
  %2885 = getelementptr inbounds i32, ptr %2876, i64 %2882
  br label %2886

2886:                                             ; preds = %2853, %2872
  %2887 = phi ptr [ %2870, %2853 ], [ %2884, %2872 ]
  %2888 = phi ptr [ %2871, %2853 ], [ %2885, %2872 ]
  %2889 = load i32, ptr %2888, align 4, !tbaa !73
  %2890 = load i32, ptr %2887, align 4, !tbaa !73
  %2891 = load volatile i64, ptr %14, align 8, !tbaa !9
  %2892 = and i64 %2891, 2
  %2893 = icmp eq i64 %2892, 0
  br i1 %2893, label %2901, label %2894

2894:                                             ; preds = %2886
  %2895 = call ptr @Perl_PerlIO_stderr() #15
  %2896 = shl nsw i32 %7, 1
  %2897 = add nsw i32 %2896, 2
  %2898 = zext i32 %2890 to i64
  %2899 = zext i32 %2889 to i64
  %2900 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2895, ptr noundef nonnull @.str.329, i32 noundef %2897, ptr noundef nonnull @.str.8, i64 noundef %2898, i64 noundef %2899) #15
  br label %2901

2901:                                             ; preds = %2894, %2886
  store i32 1, ptr %99, align 4, !tbaa !228
  %2902 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 5
  %2903 = load ptr, ptr %2902, align 8, !tbaa !232
  %2904 = icmp eq ptr %2903, null
  %2905 = icmp ne ptr %1602, null
  %2906 = select i1 %2904, i1 true, i1 %2905
  br i1 %2906, label %3386, label %2907

2907:                                             ; preds = %2901
  %2908 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 6
  %2909 = load ptr, ptr %2908, align 8, !tbaa !290
  %2910 = icmp eq ptr %2909, null
  br i1 %2910, label %2911, label %3386

2911:                                             ; preds = %2907
  %2912 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 13
  %2913 = load i32, ptr %2912, align 4, !tbaa !153
  %2914 = add i32 %2913, -3
  %2915 = icmp ult i32 %2914, -2
  br i1 %2915, label %2918, label %2916

2916:                                             ; preds = %2911
  %2917 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 12
  store i32 0, ptr %2917, align 8, !tbaa !367
  br label %3386

2918:                                             ; preds = %2911
  %2919 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 3
  %2920 = shl nsw i32 %7, 1
  %2921 = add nsw i32 %2920, 2
  %2922 = getelementptr inbounds %struct.regnode, ptr %185, i64 0, i32 1
  %2923 = getelementptr inbounds %struct.regnode_string, ptr %185, i64 0, i32 3
  br label %2924

2924:                                             ; preds = %2918, %3155
  %2925 = phi i64 [ 1, %2918 ], [ %3157, %3155 ]
  %2926 = phi ptr [ null, %2918 ], [ %3156, %3155 ]
  %2927 = load ptr, ptr %2919, align 8, !tbaa !155
  %2928 = getelementptr inbounds %struct._reg_trie_state, ptr %2927, i64 %2925
  %2929 = getelementptr inbounds %struct._reg_trie_state, ptr %2927, i64 %2925, i32 1
  %2930 = load i32, ptr %2929, align 8, !tbaa !17
  %2931 = load i16, ptr %2928, align 8, !tbaa !170
  %2932 = icmp ne i16 %2931, 0
  %2933 = zext i1 %2932 to i32
  %2934 = load i16, ptr %1634, align 8, !tbaa !152
  %2935 = icmp eq i16 %2934, 0
  br i1 %2935, label %3068, label %2936

2936:                                             ; preds = %2924
  %2937 = icmp eq i64 %2925, 1
  br label %2938

2938:                                             ; preds = %2936, %3061
  %2939 = phi i64 [ 0, %2936 ], [ %3064, %3061 ]
  %2940 = phi i16 [ %2934, %2936 ], [ %3065, %3061 ]
  %2941 = phi i32 [ %2933, %2936 ], [ %3063, %3061 ]
  %2942 = phi i32 [ -1, %2936 ], [ %3062, %3061 ]
  %2943 = zext i16 %2940 to i32
  %2944 = trunc i64 %2939 to i32
  %2945 = add i32 %2930, %2944
  %2946 = icmp ult i32 %2945, %2943
  br i1 %2946, label %3061, label %2947

2947:                                             ; preds = %2938
  %2948 = sub i32 %2945, %2943
  %2949 = load i32, ptr %2843, align 4, !tbaa !154
  %2950 = icmp ult i32 %2948, %2949
  br i1 %2950, label %2951, label %3061

2951:                                             ; preds = %2947
  %2952 = load ptr, ptr %2841, align 8, !tbaa !165
  %2953 = zext i32 %2948 to i64
  %2954 = getelementptr inbounds %struct._reg_trie_trans, ptr %2952, i64 %2953, i32 1
  %2955 = load i32, ptr %2954, align 4, !tbaa !166
  %2956 = zext i32 %2955 to i64
  %2957 = icmp eq i64 %2925, %2956
  br i1 %2957, label %2958, label %3061

2958:                                             ; preds = %2951
  %2959 = add i32 %2941, 1
  %2960 = icmp ugt i32 %2959, 1
  br i1 %2960, label %2961, label %3061

2961:                                             ; preds = %2958
  %2962 = call ptr @Perl_av_fetch(ptr noundef %19, i64 noundef %2939, i32 noundef 0) #15
  %2963 = load ptr, ptr %2962, align 8, !tbaa !5
  %2964 = getelementptr inbounds %struct.sv, ptr %2963, i64 0, i32 2
  %2965 = load i32, ptr %2964, align 4, !tbaa !13
  %2966 = and i32 %2965, 2098176
  %2967 = icmp eq i32 %2966, 1024
  br i1 %2967, label %2968, label %2971

2968:                                             ; preds = %2961
  %2969 = getelementptr inbounds %struct.sv, ptr %2963, i64 0, i32 3
  %2970 = load ptr, ptr %2969, align 8, !tbaa !17
  br label %2973

2971:                                             ; preds = %2961
  %2972 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %2963, ptr noundef null, i32 noundef 34) #15
  br label %2973

2973:                                             ; preds = %2971, %2968
  %2974 = phi ptr [ %2970, %2968 ], [ %2972, %2971 ]
  br i1 %2937, label %3164, label %2975

2975:                                             ; preds = %2973
  %2976 = icmp eq i32 %2959, 2
  br i1 %2976, label %2977, label %3031

2977:                                             ; preds = %2975
  %2978 = load ptr, ptr %2902, align 8, !tbaa !232
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(32) %2978, i8 0, i64 32, i1 false)
  %2979 = load volatile i64, ptr %14, align 8, !tbaa !9
  %2980 = and i64 %2979, 2
  %2981 = icmp eq i64 %2980, 0
  br i1 %2981, label %2985, label %2982

2982:                                             ; preds = %2977
  %2983 = call ptr @Perl_PerlIO_stderr() #15
  %2984 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %2983, ptr noundef nonnull @.str.330, i32 noundef %2921, ptr noundef nonnull @.str.8, i64 noundef %2925) #15
  br label %2985

2985:                                             ; preds = %2982, %2977
  %2986 = icmp sgt i32 %2942, -1
  br i1 %2986, label %2987, label %3031

2987:                                             ; preds = %2985
  %2988 = zext i32 %2942 to i64
  %2989 = call ptr @Perl_av_fetch(ptr noundef %19, i64 noundef %2988, i32 noundef 0) #15
  %2990 = load ptr, ptr %2989, align 8, !tbaa !5
  %2991 = getelementptr inbounds %struct.sv, ptr %2990, i64 0, i32 2
  %2992 = load i32, ptr %2991, align 4, !tbaa !13
  %2993 = and i32 %2992, 2098176
  %2994 = icmp eq i32 %2993, 1024
  br i1 %2994, label %2995, label %2998

2995:                                             ; preds = %2987
  %2996 = getelementptr inbounds %struct.sv, ptr %2990, i64 0, i32 3
  %2997 = load ptr, ptr %2996, align 8, !tbaa !17
  br label %3000

2998:                                             ; preds = %2987
  %2999 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %2990, ptr noundef null, i32 noundef 34) #15
  br label %3000

3000:                                             ; preds = %2998, %2995
  %3001 = phi ptr [ %2997, %2995 ], [ %2999, %2998 ]
  %3002 = load i8, ptr %3001, align 1, !tbaa !17
  %3003 = and i8 %3002, 7
  %3004 = shl nuw i8 1, %3003
  %3005 = load ptr, ptr %2902, align 8, !tbaa !232
  %3006 = lshr i8 %3002, 3
  %3007 = zext i8 %3006 to i64
  %3008 = getelementptr inbounds i8, ptr %3005, i64 %3007
  %3009 = load i8, ptr %3008, align 1, !tbaa !17
  %3010 = or i8 %3004, %3009
  store i8 %3010, ptr %3008, align 1, !tbaa !17
  br i1 %95, label %3024, label %3011

3011:                                             ; preds = %3000
  %3012 = load i8, ptr %3001, align 1, !tbaa !17
  %3013 = zext i8 %3012 to i64
  %3014 = getelementptr inbounds i8, ptr %97, i64 %3013
  %3015 = load i8, ptr %3014, align 1, !tbaa !17
  %3016 = and i8 %3015, 7
  %3017 = shl nuw i8 1, %3016
  %3018 = load ptr, ptr %2902, align 8, !tbaa !232
  %3019 = lshr i8 %3015, 3
  %3020 = zext i8 %3019 to i64
  %3021 = getelementptr inbounds i8, ptr %3018, i64 %3020
  %3022 = load i8, ptr %3021, align 1, !tbaa !17
  %3023 = or i8 %3017, %3022
  store i8 %3023, ptr %3021, align 1, !tbaa !17
  br label %3024

3024:                                             ; preds = %3000, %3011
  %3025 = load volatile i64, ptr %14, align 8, !tbaa !9
  %3026 = and i64 %3025, 2
  %3027 = icmp eq i64 %3026, 0
  br i1 %3027, label %3031, label %3028

3028:                                             ; preds = %3024
  %3029 = call ptr @Perl_PerlIO_stderr() #15
  %3030 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3029, ptr noundef nonnull @.str.34, ptr noundef nonnull %3001) #15
  br label %3031

3031:                                             ; preds = %3024, %3028, %2985, %2975
  %3032 = load i8, ptr %2974, align 1, !tbaa !17
  %3033 = and i8 %3032, 7
  %3034 = shl nuw i8 1, %3033
  %3035 = load ptr, ptr %2902, align 8, !tbaa !232
  %3036 = lshr i8 %3032, 3
  %3037 = zext i8 %3036 to i64
  %3038 = getelementptr inbounds i8, ptr %3035, i64 %3037
  %3039 = load i8, ptr %3038, align 1, !tbaa !17
  %3040 = or i8 %3034, %3039
  store i8 %3040, ptr %3038, align 1, !tbaa !17
  br i1 %95, label %3054, label %3041

3041:                                             ; preds = %3031
  %3042 = load i8, ptr %2974, align 1, !tbaa !17
  %3043 = zext i8 %3042 to i64
  %3044 = getelementptr inbounds i8, ptr %97, i64 %3043
  %3045 = load i8, ptr %3044, align 1, !tbaa !17
  %3046 = and i8 %3045, 7
  %3047 = shl nuw i8 1, %3046
  %3048 = load ptr, ptr %2902, align 8, !tbaa !232
  %3049 = lshr i8 %3045, 3
  %3050 = zext i8 %3049 to i64
  %3051 = getelementptr inbounds i8, ptr %3048, i64 %3050
  %3052 = load i8, ptr %3051, align 1, !tbaa !17
  %3053 = or i8 %3047, %3052
  store i8 %3053, ptr %3051, align 1, !tbaa !17
  br label %3054

3054:                                             ; preds = %3031, %3041
  %3055 = load volatile i64, ptr %14, align 8, !tbaa !9
  %3056 = and i64 %3055, 2
  %3057 = icmp eq i64 %3056, 0
  br i1 %3057, label %3061, label %3058

3058:                                             ; preds = %3054
  %3059 = call ptr @Perl_PerlIO_stderr() #15
  %3060 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3059, ptr noundef nonnull @.str.34, ptr noundef nonnull %2974) #15
  br label %3061

3061:                                             ; preds = %3054, %3058, %2958, %2938, %2947, %2951
  %3062 = phi i32 [ %2942, %2951 ], [ %2942, %2947 ], [ %2942, %2938 ], [ %2944, %2958 ], [ %2944, %3058 ], [ %2944, %3054 ]
  %3063 = phi i32 [ %2941, %2951 ], [ %2941, %2947 ], [ %2941, %2938 ], [ %2959, %2958 ], [ %2959, %3058 ], [ %2959, %3054 ]
  %3064 = add nuw nsw i64 %2939, 1
  %3065 = load i16, ptr %1634, align 8, !tbaa !152
  %3066 = zext i16 %3065 to i64
  %3067 = icmp ult i64 %3064, %3066
  br i1 %3067, label %2938, label %3068, !llvm.loop !368

3068:                                             ; preds = %3061, %2924
  %3069 = phi i32 [ -1, %2924 ], [ %3062, %3061 ]
  %3070 = phi i32 [ %2933, %2924 ], [ %3063, %3061 ]
  %3071 = icmp eq i32 %3070, 1
  br i1 %3071, label %3072, label %3145

3072:                                             ; preds = %3068
  %3073 = sext i32 %3069 to i64
  %3074 = call ptr @Perl_av_fetch(ptr noundef %19, i64 noundef %3073, i32 noundef 0) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %18) #15
  %3075 = load ptr, ptr %3074, align 8, !tbaa !5
  %3076 = getelementptr inbounds %struct.sv, ptr %3075, i64 0, i32 2
  %3077 = load i32, ptr %3076, align 4, !tbaa !13
  %3078 = and i32 %3077, 2098176
  %3079 = icmp eq i32 %3078, 1024
  br i1 %3079, label %3080, label %3086

3080:                                             ; preds = %3072
  %3081 = load ptr, ptr %3075, align 8, !tbaa !16
  %3082 = getelementptr inbounds %struct.xpv, ptr %3081, i64 0, i32 2
  %3083 = load i64, ptr %3082, align 8, !tbaa !38
  store i64 %3083, ptr %18, align 8, !tbaa !9
  %3084 = getelementptr inbounds %struct.sv, ptr %3075, i64 0, i32 3
  %3085 = load ptr, ptr %3084, align 8, !tbaa !17
  br label %3088

3086:                                             ; preds = %3072
  %3087 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %3075, ptr noundef nonnull %18, i32 noundef 2) #15
  br label %3088

3088:                                             ; preds = %3086, %3080
  %3089 = phi ptr [ %3085, %3080 ], [ %3087, %3086 ]
  %3090 = load volatile i64, ptr %14, align 8, !tbaa !9
  %3091 = and i64 %3090, 2
  %3092 = icmp eq i64 %3091, 0
  br i1 %3092, label %3123, label %3093

3093:                                             ; preds = %3088
  %3094 = call ptr @Perl_sv_newmortal() #15
  %3095 = call ptr @Perl_PerlIO_stderr() #15
  %3096 = load ptr, ptr %3074, align 8, !tbaa !5
  %3097 = getelementptr inbounds %struct.sv, ptr %3096, i64 0, i32 2
  %3098 = load i32, ptr %3097, align 4, !tbaa !13
  %3099 = and i32 %3098, 2098176
  %3100 = icmp eq i32 %3099, 1024
  br i1 %3100, label %3101, label %3104

3101:                                             ; preds = %3093
  %3102 = getelementptr inbounds %struct.sv, ptr %3096, i64 0, i32 3
  %3103 = load ptr, ptr %3102, align 8, !tbaa !17
  br label %3109

3104:                                             ; preds = %3093
  %3105 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %3096, ptr noundef null, i32 noundef 34) #15
  %3106 = load ptr, ptr %3074, align 8, !tbaa !5
  %3107 = getelementptr inbounds %struct.sv, ptr %3106, i64 0, i32 2
  %3108 = load i32, ptr %3107, align 4, !tbaa !13
  br label %3109

3109:                                             ; preds = %3104, %3101
  %3110 = phi i32 [ %3098, %3101 ], [ %3108, %3104 ]
  %3111 = phi ptr [ %3096, %3101 ], [ %3106, %3104 ]
  %3112 = phi ptr [ %3103, %3101 ], [ %3105, %3104 ]
  %3113 = load ptr, ptr %3111, align 8, !tbaa !16
  %3114 = getelementptr inbounds %struct.xpv, ptr %3113, i64 0, i32 2
  %3115 = load i64, ptr %3114, align 8, !tbaa !38
  %3116 = load ptr, ptr @PL_colors, align 16, !tbaa !5
  %3117 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 1), align 8, !tbaa !5
  %3118 = lshr i32 %3110, 21
  %3119 = and i32 %3118, 256
  %3120 = or i32 %3119, 2048
  %3121 = call ptr @Perl_pv_pretty(ptr noundef %3094, ptr noundef %3112, i64 noundef %3115, i64 noundef 6, ptr noundef %3116, ptr noundef %3117, i32 noundef %3120) #15
  %3122 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3095, ptr noundef nonnull @.str.331, i32 noundef %2921, ptr noundef nonnull @.str.8, i64 noundef %2925, i64 noundef %3073, ptr noundef %3121) #15
  br label %3123

3123:                                             ; preds = %3109, %3088
  %3124 = icmp eq i64 %2925, 1
  br i1 %3124, label %3127, label %3125

3125:                                             ; preds = %3123
  %3126 = load i8, ptr %185, align 2, !tbaa !205
  br label %3128

3127:                                             ; preds = %3123
  store i8 %2848, ptr %2922, align 1, !tbaa !141
  br label %3128

3128:                                             ; preds = %3125, %3127
  %3129 = phi i8 [ 0, %3127 ], [ %3126, %3125 ]
  %3130 = phi ptr [ %2923, %3127 ], [ %2926, %3125 ]
  %3131 = load i64, ptr %18, align 8, !tbaa !9
  %3132 = trunc i64 %3131 to i8
  %3133 = add i8 %3129, %3132
  store i8 %3133, ptr %185, align 2, !tbaa !205
  %3134 = add i64 %3131, -1
  store i64 %3134, ptr %18, align 8, !tbaa !9
  %3135 = icmp eq i64 %3131, 0
  br i1 %3135, label %3155, label %3136

3136:                                             ; preds = %3128, %3136
  %3137 = phi ptr [ %3139, %3136 ], [ %3089, %3128 ]
  %3138 = phi ptr [ %3141, %3136 ], [ %3130, %3128 ]
  %3139 = getelementptr inbounds i8, ptr %3137, i64 1
  %3140 = load i8, ptr %3137, align 1, !tbaa !17
  %3141 = getelementptr inbounds i8, ptr %3138, i64 1
  store i8 %3140, ptr %3138, align 1, !tbaa !17
  %3142 = load i64, ptr %18, align 8, !tbaa !9
  %3143 = add i64 %3142, -1
  store i64 %3143, ptr %18, align 8, !tbaa !9
  %3144 = icmp eq i64 %3142, 0
  br i1 %3144, label %3155, label %3136, !llvm.loop !369

3145:                                             ; preds = %3068
  %3146 = trunc i64 %2925 to i32
  %3147 = icmp ugt i32 %3146, 1
  br i1 %3147, label %3148, label %3164

3148:                                             ; preds = %3145
  %3149 = load volatile i64, ptr %14, align 8, !tbaa !9
  %3150 = and i64 %3149, 2
  %3151 = icmp eq i64 %3150, 0
  br i1 %3151, label %3164, label %3152

3152:                                             ; preds = %3148
  %3153 = call ptr @Perl_PerlIO_stderr() #15
  %3154 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3153, ptr noundef nonnull @.str.332) #15
  br label %3164

3155:                                             ; preds = %3136, %3128
  %3156 = phi ptr [ %3130, %3128 ], [ %3141, %3136 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %18) #15
  %3157 = add nuw nsw i64 %2925, 1
  %3158 = load i32, ptr %2912, align 4, !tbaa !153
  %3159 = add i32 %3158, -1
  %3160 = zext i32 %3159 to i64
  %3161 = icmp ult i64 %3157, %3160
  br i1 %3161, label %2924, label %3162, !llvm.loop !370

3162:                                             ; preds = %3155
  %3163 = trunc i64 %3157 to i32
  br label %3164

3164:                                             ; preds = %2973, %3162, %3145, %3152, %3148
  %3165 = phi ptr [ %2926, %3145 ], [ %2926, %3152 ], [ %2926, %3148 ], [ %3156, %3162 ], [ %2926, %2973 ]
  %3166 = phi i32 [ %3146, %3145 ], [ %3146, %3152 ], [ %3146, %3148 ], [ %3163, %3162 ], [ 1, %2973 ]
  %3167 = add i32 %3166, -1
  %3168 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 12
  store i32 %3167, ptr %3168, align 8, !tbaa !367
  %3169 = icmp eq ptr %3165, null
  br i1 %3169, label %3386, label %3170

3170:                                             ; preds = %3164
  %3171 = load i8, ptr %185, align 2, !tbaa !205
  %3172 = zext i8 %3171 to i64
  %3173 = add nuw nsw i64 %3172, 3
  %3174 = lshr i64 %3173, 2
  %3175 = add nuw nsw i64 %3174, 1
  %3176 = getelementptr inbounds %struct.regnode, ptr %185, i64 %3175
  %3177 = trunc i64 %3175 to i16
  %3178 = getelementptr inbounds %struct.regnode, ptr %185, i64 0, i32 2
  store i16 %3177, ptr %3178, align 2, !tbaa !222
  store i32 %3166, ptr %99, align 4, !tbaa !228
  %3179 = zext i32 %3167 to i64
  %3180 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 10
  %3181 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 11
  %3182 = load <2 x i64>, ptr %3180, align 8, !tbaa !9
  %3183 = insertelement <2 x i64> poison, i64 %3179, i64 0
  %3184 = shufflevector <2 x i64> %3183, <2 x i64> poison, <2 x i32> zeroinitializer
  %3185 = sub <2 x i64> %3182, %3184
  store <2 x i64> %3185, ptr %3180, align 8, !tbaa !9
  %3186 = load i32, ptr %100, align 8, !tbaa !229
  %3187 = add i32 %2889, 1
  %3188 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %3189 = load ptr, ptr %3188, align 8, !tbaa !112
  %3190 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %3191 = icmp eq ptr %3189, %3190
  br i1 %3191, label %3223, label %3192

3192:                                             ; preds = %3170
  %3193 = load volatile i64, ptr %14, align 8, !tbaa !9
  %3194 = and i64 %3193, 262144
  %3195 = icmp eq i64 %3194, 0
  br i1 %3195, label %3196, label %3198

3196:                                             ; preds = %3192
  %3197 = ptrtoint ptr %185 to i64
  br label %3206

3198:                                             ; preds = %3192
  %3199 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %3200 = load ptr, ptr %3199, align 8, !tbaa !131
  %3201 = ptrtoint ptr %185 to i64
  %3202 = ptrtoint ptr %3200 to i64
  %3203 = sub i64 %3201, %3202
  %3204 = lshr exact i64 %3203, 2
  %3205 = trunc i64 %3204 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 3028, i32 noundef %3205, i32 noundef %2890) #15
  br label %3206

3206:                                             ; preds = %3196, %3198
  %3207 = phi i64 [ %3197, %3196 ], [ %3201, %3198 ]
  %3208 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %3209 = load ptr, ptr %3208, align 8, !tbaa !131
  %3210 = ptrtoint ptr %3209 to i64
  %3211 = sub i64 %3207, %3210
  %3212 = icmp slt i64 %3211, 0
  br i1 %3212, label %3213, label %3216

3213:                                             ; preds = %3206
  %3214 = lshr exact i64 %3211, 2
  %3215 = trunc i64 %3214 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %3215) #15
  br label %3223

3216:                                             ; preds = %3206
  %3217 = load ptr, ptr %20, align 8, !tbaa !130
  %3218 = getelementptr inbounds %struct.regexp_internal, ptr %3217, i64 0, i32 1
  %3219 = load ptr, ptr %3218, align 8, !tbaa !17
  %3220 = lshr exact i64 %3211, 1
  %3221 = add nsw i64 %3220, -1
  %3222 = getelementptr inbounds i32, ptr %3219, i64 %3221
  store i32 %2890, ptr %3222, align 4, !tbaa !73
  br label %3223

3223:                                             ; preds = %3170, %3216, %3213
  %3224 = load ptr, ptr %3188, align 8, !tbaa !112
  %3225 = icmp eq ptr %3224, %3190
  br i1 %3225, label %3256, label %3226

3226:                                             ; preds = %3223
  %3227 = load volatile i64, ptr %14, align 8, !tbaa !9
  %3228 = and i64 %3227, 262144
  %3229 = icmp eq i64 %3228, 0
  br i1 %3229, label %3230, label %3232

3230:                                             ; preds = %3226
  %3231 = ptrtoint ptr %185 to i64
  br label %3240

3232:                                             ; preds = %3226
  %3233 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %3234 = load ptr, ptr %3233, align 8, !tbaa !131
  %3235 = ptrtoint ptr %185 to i64
  %3236 = ptrtoint ptr %3234 to i64
  %3237 = sub i64 %3235, %3236
  %3238 = lshr exact i64 %3237, 2
  %3239 = trunc i64 %3238 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 3028, i32 noundef %3239, i32 noundef %3167) #15
  br label %3240

3240:                                             ; preds = %3230, %3232
  %3241 = phi i64 [ %3231, %3230 ], [ %3235, %3232 ]
  %3242 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %3243 = load ptr, ptr %3242, align 8, !tbaa !131
  %3244 = ptrtoint ptr %3243 to i64
  %3245 = sub i64 %3241, %3244
  %3246 = icmp slt i64 %3245, 0
  br i1 %3246, label %3247, label %3250

3247:                                             ; preds = %3240
  %3248 = lshr exact i64 %3245, 2
  %3249 = trunc i64 %3248 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %3249) #15
  br label %3256

3250:                                             ; preds = %3240
  %3251 = load ptr, ptr %20, align 8, !tbaa !130
  %3252 = getelementptr inbounds %struct.regexp_internal, ptr %3251, i64 0, i32 1
  %3253 = load ptr, ptr %3252, align 8, !tbaa !17
  %3254 = lshr exact i64 %3245, 1
  %3255 = getelementptr inbounds i32, ptr %3253, i64 %3254
  store i32 %3167, ptr %3255, align 4, !tbaa !73
  br label %3256

3256:                                             ; preds = %3247, %3250, %3223
  %3257 = icmp eq i8 %3171, 0
  br i1 %3257, label %3261, label %3258

3258:                                             ; preds = %3256
  %3259 = getelementptr inbounds %struct.regnode, ptr %185, i64 1
  %3260 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  br label %3265

3261:                                             ; preds = %3325, %3256
  %3262 = icmp eq i32 %3186, 0
  br i1 %3262, label %3377, label %3263

3263:                                             ; preds = %3261
  %3264 = zext i32 %3186 to i64
  br label %3328

3265:                                             ; preds = %3258, %3325
  %3266 = phi ptr [ %3259, %3258 ], [ %3326, %3325 ]
  %3267 = load ptr, ptr %3188, align 8, !tbaa !112
  %3268 = icmp eq ptr %3267, %3190
  br i1 %3268, label %3296, label %3269

3269:                                             ; preds = %3265
  %3270 = load volatile i64, ptr %14, align 8, !tbaa !9
  %3271 = and i64 %3270, 262144
  %3272 = icmp eq i64 %3271, 0
  %3273 = load ptr, ptr %3260, align 8, !tbaa !131
  %3274 = ptrtoint ptr %3266 to i64
  br i1 %3272, label %3281, label %3275

3275:                                             ; preds = %3269
  %3276 = ptrtoint ptr %3273 to i64
  %3277 = sub i64 %3274, %3276
  %3278 = lshr exact i64 %3277, 2
  %3279 = trunc i64 %3278 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 3030, i32 noundef %3279, i32 noundef 0) #15
  %3280 = load ptr, ptr %3260, align 8, !tbaa !131
  br label %3281

3281:                                             ; preds = %3269, %3275
  %3282 = phi ptr [ %3280, %3275 ], [ %3273, %3269 ]
  %3283 = ptrtoint ptr %3282 to i64
  %3284 = sub i64 %3274, %3283
  %3285 = icmp slt i64 %3284, 0
  br i1 %3285, label %3286, label %3289

3286:                                             ; preds = %3281
  %3287 = lshr exact i64 %3284, 2
  %3288 = trunc i64 %3287 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %3288) #15
  br label %3296

3289:                                             ; preds = %3281
  %3290 = load ptr, ptr %20, align 8, !tbaa !130
  %3291 = getelementptr inbounds %struct.regexp_internal, ptr %3290, i64 0, i32 1
  %3292 = load ptr, ptr %3291, align 8, !tbaa !17
  %3293 = lshr exact i64 %3284, 1
  %3294 = add nsw i64 %3293, -1
  %3295 = getelementptr inbounds i32, ptr %3292, i64 %3294
  store i32 0, ptr %3295, align 4, !tbaa !73
  br label %3296

3296:                                             ; preds = %3265, %3289, %3286
  %3297 = load ptr, ptr %3188, align 8, !tbaa !112
  %3298 = icmp eq ptr %3297, %3190
  br i1 %3298, label %3325, label %3299

3299:                                             ; preds = %3296
  %3300 = load volatile i64, ptr %14, align 8, !tbaa !9
  %3301 = and i64 %3300, 262144
  %3302 = icmp eq i64 %3301, 0
  %3303 = load ptr, ptr %3260, align 8, !tbaa !131
  %3304 = ptrtoint ptr %3266 to i64
  br i1 %3302, label %3311, label %3305

3305:                                             ; preds = %3299
  %3306 = ptrtoint ptr %3303 to i64
  %3307 = sub i64 %3304, %3306
  %3308 = lshr exact i64 %3307, 2
  %3309 = trunc i64 %3308 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 3030, i32 noundef %3309, i32 noundef 0) #15
  %3310 = load ptr, ptr %3260, align 8, !tbaa !131
  br label %3311

3311:                                             ; preds = %3299, %3305
  %3312 = phi ptr [ %3310, %3305 ], [ %3303, %3299 ]
  %3313 = ptrtoint ptr %3312 to i64
  %3314 = sub i64 %3304, %3313
  %3315 = icmp slt i64 %3314, 0
  br i1 %3315, label %3316, label %3319

3316:                                             ; preds = %3311
  %3317 = lshr exact i64 %3314, 2
  %3318 = trunc i64 %3317 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %3318) #15
  br label %3325

3319:                                             ; preds = %3311
  %3320 = load ptr, ptr %20, align 8, !tbaa !130
  %3321 = getelementptr inbounds %struct.regexp_internal, ptr %3320, i64 0, i32 1
  %3322 = load ptr, ptr %3321, align 8, !tbaa !17
  %3323 = lshr exact i64 %3314, 1
  %3324 = getelementptr inbounds i32, ptr %3322, i64 %3323
  store i32 0, ptr %3324, align 4, !tbaa !73
  br label %3325

3325:                                             ; preds = %3316, %3319, %3296
  %3326 = getelementptr inbounds %struct.regnode, ptr %3266, i64 1
  %3327 = icmp ult ptr %3326, %3176
  br i1 %3327, label %3265, label %3261, !llvm.loop !371

3328:                                             ; preds = %3263, %3374
  %3329 = phi i64 [ %3264, %3263 ], [ %3330, %3374 ]
  %3330 = add nsw i64 %3329, -1
  %3331 = and i64 %3330, 4294967295
  %3332 = call ptr @Perl_av_fetch(ptr noundef %117, i64 noundef %3331, i32 noundef 0) #15
  %3333 = icmp eq ptr %3332, null
  br i1 %3333, label %3374, label %3334

3334:                                             ; preds = %3328
  %3335 = load i8, ptr %185, align 2, !tbaa !205
  %3336 = zext i8 %3335 to i64
  %3337 = load ptr, ptr %3332, align 8, !tbaa !5
  %3338 = load ptr, ptr %3337, align 8, !tbaa !16
  %3339 = getelementptr inbounds %struct.xpv, ptr %3338, i64 0, i32 2
  %3340 = load i64, ptr %3339, align 8, !tbaa !38
  %3341 = icmp ult i64 %3340, %3336
  %3342 = getelementptr inbounds %struct.sv, ptr %3337, i64 0, i32 2
  %3343 = load i32, ptr %3342, align 4, !tbaa !13
  %3344 = and i32 %3343, 2098176
  %3345 = icmp eq i32 %3344, 1024
  br i1 %3341, label %3358, label %3346

3346:                                             ; preds = %3334
  br i1 %3345, label %3347, label %3350

3347:                                             ; preds = %3346
  %3348 = getelementptr inbounds %struct.sv, ptr %3337, i64 0, i32 3
  %3349 = load ptr, ptr %3348, align 8, !tbaa !17
  br label %3354

3350:                                             ; preds = %3346
  %3351 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %3337, ptr noundef null, i32 noundef 2) #15
  %3352 = load i8, ptr %185, align 2, !tbaa !205
  %3353 = zext i8 %3352 to i64
  br label %3354

3354:                                             ; preds = %3350, %3347
  %3355 = phi i64 [ %3353, %3350 ], [ %3336, %3347 ]
  %3356 = phi ptr [ %3351, %3350 ], [ %3349, %3347 ]
  %3357 = getelementptr inbounds i8, ptr %3356, i64 %3355
  br label %3372

3358:                                             ; preds = %3334
  br i1 %3345, label %3359, label %3362

3359:                                             ; preds = %3358
  %3360 = getelementptr inbounds %struct.sv, ptr %3337, i64 0, i32 3
  %3361 = load ptr, ptr %3360, align 8, !tbaa !17
  br label %3368

3362:                                             ; preds = %3358
  %3363 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %3337, ptr noundef null, i32 noundef 2) #15
  %3364 = load ptr, ptr %3332, align 8, !tbaa !5
  %3365 = load ptr, ptr %3364, align 8, !tbaa !16
  %3366 = getelementptr inbounds %struct.xpv, ptr %3365, i64 0, i32 2
  %3367 = load i64, ptr %3366, align 8, !tbaa !38
  br label %3368

3368:                                             ; preds = %3362, %3359
  %3369 = phi i64 [ %3340, %3359 ], [ %3367, %3362 ]
  %3370 = phi ptr [ %3361, %3359 ], [ %3363, %3362 ]
  %3371 = getelementptr inbounds i8, ptr %3370, i64 %3369
  br label %3372

3372:                                             ; preds = %3368, %3354
  %3373 = phi ptr [ %3357, %3354 ], [ %3371, %3368 ]
  call void @Perl_sv_chop(ptr noundef nonnull %3337, ptr noundef %3373) #15
  br label %3374

3374:                                             ; preds = %3372, %3328
  %3375 = and i64 %3330, 4294967295
  %3376 = icmp eq i64 %3375, 0
  br i1 %3376, label %3377, label %3328, !llvm.loop !372

3377:                                             ; preds = %3374, %3261
  %3378 = load i64, ptr %3181, align 8, !tbaa !230
  %3379 = icmp eq i64 %3378, 0
  br i1 %3379, label %3380, label %3386

3380:                                             ; preds = %3377
  %3381 = ptrtoint ptr %4 to i64
  %3382 = ptrtoint ptr %185 to i64
  %3383 = sub i64 %3381, %3382
  %3384 = lshr exact i64 %3383, 2
  %3385 = trunc i64 %3384 to i16
  store i16 %3385, ptr %3178, align 2, !tbaa !222
  br label %3386

3386:                                             ; preds = %2916, %3164, %3377, %3380, %2907, %2901
  %3387 = phi ptr [ null, %2901 ], [ null, %2907 ], [ null, %3164 ], [ %3176, %3380 ], [ null, %3377 ], [ null, %2916 ]
  %3388 = phi i32 [ %2889, %2901 ], [ %2889, %2907 ], [ %2889, %3164 ], [ %3187, %3380 ], [ %3187, %3377 ], [ %2889, %2916 ]
  %3389 = phi ptr [ %185, %2901 ], [ %185, %2907 ], [ %185, %3164 ], [ %185, %3380 ], [ %3176, %3377 ], [ %185, %2916 ]
  %3390 = icmp eq ptr %2821, null
  %3391 = select i1 %3390, ptr %3, ptr %2821
  %3392 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 11
  %3393 = load i64, ptr %3392, align 8, !tbaa !230
  %3394 = icmp eq i64 %3393, 0
  br i1 %3394, label %3440, label %3395

3395:                                             ; preds = %3386
  %3396 = ptrtoint ptr %4 to i64
  %3397 = ptrtoint ptr %3389 to i64
  %3398 = sub i64 %3396, %3397
  %3399 = lshr exact i64 %3398, 2
  %3400 = trunc i64 %3399 to i16
  %3401 = getelementptr inbounds %struct.regnode, ptr %3389, i64 0, i32 2
  store i16 %3400, ptr %3401, align 2, !tbaa !222
  %3402 = getelementptr inbounds %struct.regnode_1, ptr %3389, i64 0, i32 3
  store i32 %28, ptr %3402, align 4, !tbaa !148
  %3403 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 6
  %3404 = load ptr, ptr %3403, align 8, !tbaa !290
  %3405 = icmp eq ptr %3404, null
  br i1 %3405, label %3411, label %3406

3406:                                             ; preds = %3395
  %3407 = ptrtoint ptr %2820 to i64
  %3408 = sub i64 %3407, %3397
  %3409 = lshr exact i64 %3408, 2
  %3410 = trunc i64 %3409 to i16
  store i16 %3410, ptr %3404, align 2, !tbaa !139
  br label %3411

3411:                                             ; preds = %3406, %3395
  %3412 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 3
  %3413 = load ptr, ptr %3412, align 8, !tbaa !155
  %3414 = load i32, ptr %99, align 4, !tbaa !228
  %3415 = zext i32 %3414 to i64
  %3416 = getelementptr inbounds %struct._reg_trie_state, ptr %3413, i64 %3415
  %3417 = load i16, ptr %3416, align 8, !tbaa !170
  %3418 = icmp eq i16 %3417, 0
  br i1 %3418, label %3419, label %3431

3419:                                             ; preds = %3411
  %3420 = load ptr, ptr %2902, align 8, !tbaa !232
  %3421 = icmp ne ptr %3420, null
  %3422 = ptrtoint ptr %3391 to i64
  %3423 = sub i64 %3422, %3397
  %3424 = icmp sgt i64 %3423, 39
  %3425 = select i1 %3421, i1 %3424, i1 false
  br i1 %3425, label %3426, label %3431

3426:                                             ; preds = %3419
  %3427 = getelementptr inbounds %struct.regnode, ptr %3389, i64 0, i32 1
  store i8 73, ptr %3427, align 1, !tbaa !141
  %3428 = getelementptr inbounds %struct.regnode_charclass, ptr %3389, i64 0, i32 4
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %3428, ptr noundef nonnull align 1 dereferenceable(32) %3420, i64 32, i1 false)
  %3429 = load ptr, ptr %2902, align 8, !tbaa !232
  call void @free(ptr noundef %3429) #15
  store ptr null, ptr %2902, align 8, !tbaa !232
  %3430 = load i8, ptr %3427, align 1, !tbaa !141
  br label %3433

3431:                                             ; preds = %3419, %3411
  %3432 = getelementptr inbounds %struct.regnode, ptr %3389, i64 0, i32 1
  store i8 72, ptr %3432, align 1, !tbaa !141
  br label %3433

3433:                                             ; preds = %3426, %3431
  %3434 = phi i8 [ 72, %3431 ], [ %3430, %3426 ]
  store i8 %2848, ptr %3389, align 2, !tbaa !143
  %3435 = zext i8 %3434 to i64
  %3436 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %3435
  %3437 = load i8, ptr %3436, align 1, !tbaa !17
  %3438 = zext i8 %3437 to i64
  %3439 = getelementptr inbounds %struct.regnode, ptr %3402, i64 %3438
  br label %3442

3440:                                             ; preds = %3386
  %3441 = icmp eq ptr %3387, null
  br i1 %3441, label %3660, label %3442

3442:                                             ; preds = %3433, %3440
  %3443 = phi ptr [ %3439, %3433 ], [ %3387, %3440 ]
  %3444 = getelementptr inbounds %struct.regnode, ptr %3389, i64 1
  %3445 = icmp ult ptr %3444, %3443
  br i1 %3445, label %3446, label %3450

3446:                                             ; preds = %3442
  %3447 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %3448 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %3449 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  br label %3456

3450:                                             ; preds = %3516, %3442
  %3451 = icmp ult ptr %3443, %3391
  br i1 %3451, label %3452, label %3590

3452:                                             ; preds = %3450
  %3453 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %3454 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %3455 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  br label %3519

3456:                                             ; preds = %3446, %3516
  %3457 = phi ptr [ %3444, %3446 ], [ %3517, %3516 ]
  %3458 = load ptr, ptr %3447, align 8, !tbaa !112
  %3459 = icmp eq ptr %3458, %3448
  br i1 %3459, label %3487, label %3460

3460:                                             ; preds = %3456
  %3461 = load volatile i64, ptr %14, align 8, !tbaa !9
  %3462 = and i64 %3461, 262144
  %3463 = icmp eq i64 %3462, 0
  %3464 = load ptr, ptr %3449, align 8, !tbaa !131
  %3465 = ptrtoint ptr %3457 to i64
  br i1 %3463, label %3472, label %3466

3466:                                             ; preds = %3460
  %3467 = ptrtoint ptr %3464 to i64
  %3468 = sub i64 %3465, %3467
  %3469 = lshr exact i64 %3468, 2
  %3470 = trunc i64 %3469 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 3094, i32 noundef %3470, i32 noundef 0) #15
  %3471 = load ptr, ptr %3449, align 8, !tbaa !131
  br label %3472

3472:                                             ; preds = %3460, %3466
  %3473 = phi ptr [ %3471, %3466 ], [ %3464, %3460 ]
  %3474 = ptrtoint ptr %3473 to i64
  %3475 = sub i64 %3465, %3474
  %3476 = icmp slt i64 %3475, 0
  br i1 %3476, label %3477, label %3480

3477:                                             ; preds = %3472
  %3478 = lshr exact i64 %3475, 2
  %3479 = trunc i64 %3478 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %3479) #15
  br label %3487

3480:                                             ; preds = %3472
  %3481 = load ptr, ptr %20, align 8, !tbaa !130
  %3482 = getelementptr inbounds %struct.regexp_internal, ptr %3481, i64 0, i32 1
  %3483 = load ptr, ptr %3482, align 8, !tbaa !17
  %3484 = lshr exact i64 %3475, 1
  %3485 = add nsw i64 %3484, -1
  %3486 = getelementptr inbounds i32, ptr %3483, i64 %3485
  store i32 0, ptr %3486, align 4, !tbaa !73
  br label %3487

3487:                                             ; preds = %3456, %3480, %3477
  %3488 = load ptr, ptr %3447, align 8, !tbaa !112
  %3489 = icmp eq ptr %3488, %3448
  br i1 %3489, label %3516, label %3490

3490:                                             ; preds = %3487
  %3491 = load volatile i64, ptr %14, align 8, !tbaa !9
  %3492 = and i64 %3491, 262144
  %3493 = icmp eq i64 %3492, 0
  %3494 = load ptr, ptr %3449, align 8, !tbaa !131
  %3495 = ptrtoint ptr %3457 to i64
  br i1 %3493, label %3502, label %3496

3496:                                             ; preds = %3490
  %3497 = ptrtoint ptr %3494 to i64
  %3498 = sub i64 %3495, %3497
  %3499 = lshr exact i64 %3498, 2
  %3500 = trunc i64 %3499 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 3094, i32 noundef %3500, i32 noundef 0) #15
  %3501 = load ptr, ptr %3449, align 8, !tbaa !131
  br label %3502

3502:                                             ; preds = %3490, %3496
  %3503 = phi ptr [ %3501, %3496 ], [ %3494, %3490 ]
  %3504 = ptrtoint ptr %3503 to i64
  %3505 = sub i64 %3495, %3504
  %3506 = icmp slt i64 %3505, 0
  br i1 %3506, label %3507, label %3510

3507:                                             ; preds = %3502
  %3508 = lshr exact i64 %3505, 2
  %3509 = trunc i64 %3508 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %3509) #15
  br label %3516

3510:                                             ; preds = %3502
  %3511 = load ptr, ptr %20, align 8, !tbaa !130
  %3512 = getelementptr inbounds %struct.regexp_internal, ptr %3511, i64 0, i32 1
  %3513 = load ptr, ptr %3512, align 8, !tbaa !17
  %3514 = lshr exact i64 %3505, 1
  %3515 = getelementptr inbounds i32, ptr %3513, i64 %3514
  store i32 0, ptr %3515, align 4, !tbaa !73
  br label %3516

3516:                                             ; preds = %3507, %3510, %3487
  %3517 = getelementptr inbounds %struct.regnode, ptr %3457, i64 1
  %3518 = icmp ult ptr %3517, %3443
  br i1 %3518, label %3456, label %3450, !llvm.loop !373

3519:                                             ; preds = %3452, %3587
  %3520 = phi i32 [ %3388, %3452 ], [ %3532, %3587 ]
  %3521 = phi ptr [ %3443, %3452 ], [ %3588, %3587 ]
  %3522 = load ptr, ptr %20, align 8, !tbaa !130
  %3523 = getelementptr inbounds %struct.regexp_internal, ptr %3522, i64 0, i32 1
  %3524 = load ptr, ptr %3523, align 8, !tbaa !17
  %3525 = load ptr, ptr %3453, align 8, !tbaa !131
  %3526 = ptrtoint ptr %3521 to i64
  %3527 = ptrtoint ptr %3525 to i64
  %3528 = sub i64 %3526, %3527
  %3529 = ashr exact i64 %3528, 1
  %3530 = getelementptr inbounds i32, ptr %3524, i64 %3529
  %3531 = load i32, ptr %3530, align 4, !tbaa !73
  %3532 = add i32 %3531, %3520
  %3533 = getelementptr inbounds %struct.regnode, ptr %3521, i64 0, i32 1
  store i8 92, ptr %3533, align 1, !tbaa !141
  %3534 = load ptr, ptr %3454, align 8, !tbaa !112
  %3535 = icmp eq ptr %3534, %3455
  br i1 %3535, label %3559, label %3536

3536:                                             ; preds = %3519
  %3537 = load volatile i64, ptr %14, align 8, !tbaa !9
  %3538 = and i64 %3537, 262144
  %3539 = icmp eq i64 %3538, 0
  br i1 %3539, label %3546, label %3540

3540:                                             ; preds = %3536
  %3541 = lshr exact i64 %3528, 2
  %3542 = trunc i64 %3541 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 3103, i32 noundef %3542, i32 noundef 0) #15
  %3543 = load ptr, ptr %3453, align 8, !tbaa !131
  %3544 = ptrtoint ptr %3543 to i64
  %3545 = sub i64 %3526, %3544
  br label %3546

3546:                                             ; preds = %3540, %3536
  %3547 = phi i64 [ %3545, %3540 ], [ %3528, %3536 ]
  %3548 = icmp slt i64 %3547, 0
  br i1 %3548, label %3549, label %3552

3549:                                             ; preds = %3546
  %3550 = lshr exact i64 %3547, 2
  %3551 = trunc i64 %3550 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %3551) #15
  br label %3559

3552:                                             ; preds = %3546
  %3553 = load ptr, ptr %20, align 8, !tbaa !130
  %3554 = getelementptr inbounds %struct.regexp_internal, ptr %3553, i64 0, i32 1
  %3555 = load ptr, ptr %3554, align 8, !tbaa !17
  %3556 = lshr exact i64 %3547, 1
  %3557 = add nsw i64 %3556, -1
  %3558 = getelementptr inbounds i32, ptr %3555, i64 %3557
  store i32 0, ptr %3558, align 4, !tbaa !73
  br label %3559

3559:                                             ; preds = %3519, %3552, %3549
  %3560 = load ptr, ptr %3454, align 8, !tbaa !112
  %3561 = icmp eq ptr %3560, %3455
  br i1 %3561, label %3587, label %3562

3562:                                             ; preds = %3559
  %3563 = load volatile i64, ptr %14, align 8, !tbaa !9
  %3564 = and i64 %3563, 262144
  %3565 = icmp eq i64 %3564, 0
  %3566 = load ptr, ptr %3453, align 8, !tbaa !131
  br i1 %3565, label %3573, label %3567

3567:                                             ; preds = %3562
  %3568 = ptrtoint ptr %3566 to i64
  %3569 = sub i64 %3526, %3568
  %3570 = lshr exact i64 %3569, 2
  %3571 = trunc i64 %3570 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 3103, i32 noundef %3571, i32 noundef 0) #15
  %3572 = load ptr, ptr %3453, align 8, !tbaa !131
  br label %3573

3573:                                             ; preds = %3567, %3562
  %3574 = phi ptr [ %3572, %3567 ], [ %3566, %3562 ]
  %3575 = ptrtoint ptr %3574 to i64
  %3576 = sub i64 %3526, %3575
  %3577 = icmp slt i64 %3576, 0
  br i1 %3577, label %3578, label %3581

3578:                                             ; preds = %3573
  %3579 = lshr exact i64 %3576, 2
  %3580 = trunc i64 %3579 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %3580) #15
  br label %3587

3581:                                             ; preds = %3573
  %3582 = load ptr, ptr %20, align 8, !tbaa !130
  %3583 = getelementptr inbounds %struct.regexp_internal, ptr %3582, i64 0, i32 1
  %3584 = load ptr, ptr %3583, align 8, !tbaa !17
  %3585 = lshr exact i64 %3576, 1
  %3586 = getelementptr inbounds i32, ptr %3584, i64 %3585
  store i32 0, ptr %3586, align 4, !tbaa !73
  br label %3587

3587:                                             ; preds = %3578, %3581, %3559
  %3588 = getelementptr inbounds %struct.regnode, ptr %3521, i64 1
  %3589 = icmp ult ptr %3588, %3391
  br i1 %3589, label %3519, label %3590, !llvm.loop !374

3590:                                             ; preds = %3587, %3450
  %3591 = phi i32 [ %3388, %3450 ], [ %3532, %3587 ]
  %3592 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %3593 = load ptr, ptr %3592, align 8, !tbaa !112
  %3594 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %3595 = icmp eq ptr %3593, %3594
  br i1 %3595, label %3627, label %3596

3596:                                             ; preds = %3590
  %3597 = load volatile i64, ptr %14, align 8, !tbaa !9
  %3598 = and i64 %3597, 262144
  %3599 = icmp eq i64 %3598, 0
  br i1 %3599, label %3600, label %3602

3600:                                             ; preds = %3596
  %3601 = ptrtoint ptr %3389 to i64
  br label %3610

3602:                                             ; preds = %3596
  %3603 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %3604 = load ptr, ptr %3603, align 8, !tbaa !131
  %3605 = ptrtoint ptr %3389 to i64
  %3606 = ptrtoint ptr %3604 to i64
  %3607 = sub i64 %3605, %3606
  %3608 = lshr exact i64 %3607, 2
  %3609 = trunc i64 %3608 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 3106, i32 noundef %3609, i32 noundef %2890) #15
  br label %3610

3610:                                             ; preds = %3600, %3602
  %3611 = phi i64 [ %3601, %3600 ], [ %3605, %3602 ]
  %3612 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %3613 = load ptr, ptr %3612, align 8, !tbaa !131
  %3614 = ptrtoint ptr %3613 to i64
  %3615 = sub i64 %3611, %3614
  %3616 = icmp slt i64 %3615, 0
  br i1 %3616, label %3617, label %3620

3617:                                             ; preds = %3610
  %3618 = lshr exact i64 %3615, 2
  %3619 = trunc i64 %3618 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %3619) #15
  br label %3627

3620:                                             ; preds = %3610
  %3621 = load ptr, ptr %20, align 8, !tbaa !130
  %3622 = getelementptr inbounds %struct.regexp_internal, ptr %3621, i64 0, i32 1
  %3623 = load ptr, ptr %3622, align 8, !tbaa !17
  %3624 = lshr exact i64 %3615, 1
  %3625 = add nsw i64 %3624, -1
  %3626 = getelementptr inbounds i32, ptr %3623, i64 %3625
  store i32 %2890, ptr %3626, align 4, !tbaa !73
  br label %3627

3627:                                             ; preds = %3590, %3620, %3617
  %3628 = load ptr, ptr %3592, align 8, !tbaa !112
  %3629 = icmp eq ptr %3628, %3594
  br i1 %3629, label %3660, label %3630

3630:                                             ; preds = %3627
  %3631 = load volatile i64, ptr %14, align 8, !tbaa !9
  %3632 = and i64 %3631, 262144
  %3633 = icmp eq i64 %3632, 0
  br i1 %3633, label %3634, label %3636

3634:                                             ; preds = %3630
  %3635 = ptrtoint ptr %3389 to i64
  br label %3644

3636:                                             ; preds = %3630
  %3637 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %3638 = load ptr, ptr %3637, align 8, !tbaa !131
  %3639 = ptrtoint ptr %3389 to i64
  %3640 = ptrtoint ptr %3638 to i64
  %3641 = sub i64 %3639, %3640
  %3642 = lshr exact i64 %3641, 2
  %3643 = trunc i64 %3642 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 3106, i32 noundef %3643, i32 noundef %3591) #15
  br label %3644

3644:                                             ; preds = %3634, %3636
  %3645 = phi i64 [ %3635, %3634 ], [ %3639, %3636 ]
  %3646 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %3647 = load ptr, ptr %3646, align 8, !tbaa !131
  %3648 = ptrtoint ptr %3647 to i64
  %3649 = sub i64 %3645, %3648
  %3650 = icmp slt i64 %3649, 0
  br i1 %3650, label %3651, label %3654

3651:                                             ; preds = %3644
  %3652 = lshr exact i64 %3649, 2
  %3653 = trunc i64 %3652 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %3653) #15
  br label %3660

3654:                                             ; preds = %3644
  %3655 = load ptr, ptr %20, align 8, !tbaa !130
  %3656 = getelementptr inbounds %struct.regexp_internal, ptr %3655, i64 0, i32 1
  %3657 = load ptr, ptr %3656, align 8, !tbaa !17
  %3658 = lshr exact i64 %3649, 1
  %3659 = getelementptr inbounds i32, ptr %3657, i64 %3658
  store i32 %3591, ptr %3659, align 4, !tbaa !73
  br label %3660

3660:                                             ; preds = %3627, %3654, %3651, %3440
  %3661 = load i32, ptr %100, align 8, !tbaa !229
  %3662 = icmp eq i32 %3661, 0
  br i1 %3662, label %3694, label %3663

3663:                                             ; preds = %3660
  %3664 = load ptr, ptr %116, align 8, !tbaa !331
  %3665 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 3
  br label %3666

3666:                                             ; preds = %3663, %3690
  %3667 = phi i16 [ 1, %3663 ], [ %3691, %3690 ]
  %3668 = zext i16 %3667 to i64
  %3669 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %3664, i64 %3668
  %3670 = load i16, ptr %3669, align 4, !tbaa !347
  %3671 = icmp eq i16 %3670, 0
  br i1 %3671, label %3672, label %3690

3672:                                             ; preds = %3666
  %3673 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %3664, i64 %3668, i32 2
  %3674 = load i32, ptr %3673, align 4, !tbaa !350
  %3675 = icmp eq i32 %3674, 0
  br i1 %3675, label %3688, label %3676

3676:                                             ; preds = %3672, %3682
  %3677 = phi i32 [ %3680, %3682 ], [ %3674, %3672 ]
  %3678 = zext i32 %3677 to i64
  %3679 = getelementptr inbounds i32, ptr %1630, i64 %3678
  %3680 = load i32, ptr %3679, align 4, !tbaa !73
  %3681 = icmp eq i32 %3680, 0
  br i1 %3681, label %3688, label %3682

3682:                                             ; preds = %3676
  %3683 = load ptr, ptr %3665, align 8, !tbaa !155
  %3684 = zext i32 %3680 to i64
  %3685 = getelementptr inbounds %struct._reg_trie_state, ptr %3683, i64 %3684
  %3686 = load i16, ptr %3685, align 8, !tbaa !170
  %3687 = icmp eq i16 %3686, 0
  br i1 %3687, label %3676, label %3688, !llvm.loop !375

3688:                                             ; preds = %3682, %3676, %3672
  %3689 = phi i16 [ 0, %3672 ], [ 0, %3676 ], [ %3686, %3682 ]
  store i16 %3689, ptr %3669, align 4, !tbaa !347
  br label %3690

3690:                                             ; preds = %3666, %3688
  %3691 = add i16 %3667, 1
  %3692 = zext i16 %3691 to i32
  %3693 = icmp ult i32 %3661, %3692
  br i1 %3693, label %3694, label %3666, !llvm.loop !376

3694:                                             ; preds = %3690, %3660
  call void @Perl_safesysfree(ptr noundef %1630) #15
  %3695 = load volatile i64, ptr %14, align 8, !tbaa !9
  %3696 = and i64 %3695, 4
  %3697 = icmp eq i64 %3696, 0
  br i1 %3697, label %3918, label %3698

3698:                                             ; preds = %3694
  %3699 = call ptr @Perl_sv_newmortal() #15
  %3700 = icmp eq ptr %1602, null
  %3701 = select i1 %3700, i32 4, i32 6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9)
  store volatile i64 0, ptr %9, align 8, !tbaa !9
  %3702 = load volatile i64, ptr %9, align 8, !tbaa !9
  %3703 = call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %3704 = icmp eq ptr %3703, null
  br i1 %3704, label %3724, label %3705

3705:                                             ; preds = %3698
  %3706 = getelementptr inbounds %struct.sv, ptr %3703, i64 0, i32 2
  %3707 = load i32, ptr %3706, align 4, !tbaa !13
  %3708 = and i32 %3707, 256
  %3709 = icmp eq i32 %3708, 0
  br i1 %3709, label %3710, label %3712

3710:                                             ; preds = %3705
  call void @Perl_sv_setuv(ptr noundef nonnull %3703, i64 noundef 65288) #15
  %3711 = load i32, ptr %3706, align 4, !tbaa !13
  br label %3712

3712:                                             ; preds = %3710, %3705
  %3713 = phi i32 [ %3711, %3710 ], [ %3707, %3705 ]
  %3714 = and i32 %3713, 2097408
  %3715 = icmp eq i32 %3714, 256
  br i1 %3715, label %3716, label %3720

3716:                                             ; preds = %3712
  %3717 = load ptr, ptr %3703, align 8, !tbaa !16
  %3718 = getelementptr inbounds %struct.xpviv, ptr %3717, i64 0, i32 4
  %3719 = load i64, ptr %3718, align 8, !tbaa !17
  br label %3722

3720:                                             ; preds = %3712
  %3721 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %3703, i32 noundef 2) #15
  br label %3722

3722:                                             ; preds = %3720, %3716
  %3723 = phi i64 [ %3719, %3716 ], [ %3721, %3720 ]
  store volatile i64 %3723, ptr %9, align 8, !tbaa !9
  br label %3724

3724:                                             ; preds = %3698, %3722
  %3725 = icmp eq ptr %19, null
  br i1 %3725, label %3726, label %3727

3726:                                             ; preds = %3724
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.338, i32 noundef 1671) #15
  br label %3727

3727:                                             ; preds = %3726, %3724
  %3728 = call ptr @Perl_PerlIO_stderr() #15
  %3729 = shl i32 %7, 1
  %3730 = add i32 %3729, 2
  %3731 = add i32 %3729, 4
  %3732 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3728, ptr noundef nonnull @.str.356, i32 noundef %3731, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.357, ptr noundef nonnull @.str.358, ptr noundef nonnull @.str.359) #15
  %3733 = load i16, ptr %1634, align 8, !tbaa !152
  %3734 = icmp eq i16 %3733, 0
  br i1 %3734, label %3775, label %3735

3735:                                             ; preds = %3727
  %3736 = zext i32 %3701 to i64
  br label %3737

3737:                                             ; preds = %3770, %3735
  %3738 = phi i64 [ 0, %3735 ], [ %3771, %3770 ]
  %3739 = call ptr @Perl_av_fetch(ptr noundef %19, i64 noundef %3738, i32 noundef 0) #15
  %3740 = icmp eq ptr %3739, null
  br i1 %3740, label %3770, label %3741

3741:                                             ; preds = %3737
  %3742 = call ptr @Perl_PerlIO_stderr() #15
  %3743 = load ptr, ptr %3739, align 8, !tbaa !5
  %3744 = getelementptr inbounds %struct.sv, ptr %3743, i64 0, i32 2
  %3745 = load i32, ptr %3744, align 4, !tbaa !13
  %3746 = and i32 %3745, 2098176
  %3747 = icmp eq i32 %3746, 1024
  br i1 %3747, label %3748, label %3751

3748:                                             ; preds = %3741
  %3749 = getelementptr inbounds %struct.sv, ptr %3743, i64 0, i32 3
  %3750 = load ptr, ptr %3749, align 8, !tbaa !17
  br label %3756

3751:                                             ; preds = %3741
  %3752 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %3743, ptr noundef null, i32 noundef 34) #15
  %3753 = load ptr, ptr %3739, align 8, !tbaa !5
  %3754 = getelementptr inbounds %struct.sv, ptr %3753, i64 0, i32 2
  %3755 = load i32, ptr %3754, align 4, !tbaa !13
  br label %3756

3756:                                             ; preds = %3751, %3748
  %3757 = phi i32 [ %3745, %3748 ], [ %3755, %3751 ]
  %3758 = phi ptr [ %3743, %3748 ], [ %3753, %3751 ]
  %3759 = phi ptr [ %3750, %3748 ], [ %3752, %3751 ]
  %3760 = load ptr, ptr %3758, align 8, !tbaa !16
  %3761 = getelementptr inbounds %struct.xpv, ptr %3760, i64 0, i32 2
  %3762 = load i64, ptr %3761, align 8, !tbaa !38
  %3763 = load ptr, ptr @PL_colors, align 16, !tbaa !5
  %3764 = load ptr, ptr getelementptr inbounds ([6 x ptr], ptr @PL_colors, i64 0, i64 1), align 8, !tbaa !5
  %3765 = lshr i32 %3757, 21
  %3766 = and i32 %3765, 256
  %3767 = or i32 %3766, 2048
  %3768 = call ptr @Perl_pv_pretty(ptr noundef %3699, ptr noundef %3759, i64 noundef %3762, i64 noundef %3736, ptr noundef %3763, ptr noundef %3764, i32 noundef %3767) #15
  %3769 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3742, ptr noundef nonnull @.str.347, i32 noundef %3701, ptr noundef %3768) #15
  br label %3770

3770:                                             ; preds = %3756, %3737
  %3771 = add nuw nsw i64 %3738, 1
  %3772 = load i16, ptr %1634, align 8, !tbaa !152
  %3773 = zext i16 %3772 to i64
  %3774 = icmp ult i64 %3771, %3773
  br i1 %3774, label %3737, label %3775, !llvm.loop !377

3775:                                             ; preds = %3770, %3727
  %3776 = call ptr @Perl_PerlIO_stderr() #15
  %3777 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3776, ptr noundef nonnull @.str.360, i32 noundef %3731, ptr noundef nonnull @.str.8) #15
  %3778 = load i16, ptr %1634, align 8, !tbaa !152
  %3779 = icmp eq i16 %3778, 0
  br i1 %3779, label %3788, label %3780

3780:                                             ; preds = %3775, %3780
  %3781 = phi i32 [ %3784, %3780 ], [ 0, %3775 ]
  %3782 = call ptr @Perl_PerlIO_stderr() #15
  %3783 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3782, ptr noundef nonnull @.str.349, i32 noundef %3701, ptr noundef nonnull @.str.350) #15
  %3784 = add nuw nsw i32 %3781, 1
  %3785 = load i16, ptr %1634, align 8, !tbaa !152
  %3786 = zext i16 %3785 to i32
  %3787 = icmp ult i32 %3784, %3786
  br i1 %3787, label %3780, label %3788, !llvm.loop !378

3788:                                             ; preds = %3780, %3775
  %3789 = call ptr @Perl_PerlIO_stderr() #15
  %3790 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3789, ptr noundef nonnull @.str.53) #15
  %3791 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 13
  %3792 = load i32, ptr %3791, align 4, !tbaa !153
  %3793 = icmp ugt i32 %3792, 1
  br i1 %3793, label %3794, label %3894

3794:                                             ; preds = %3788
  %3795 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 3
  br label %3796

3796:                                             ; preds = %3887, %3794
  %3797 = phi i64 [ 1, %3794 ], [ %3890, %3887 ]
  %3798 = load ptr, ptr %3795, align 8, !tbaa !155
  %3799 = getelementptr inbounds %struct._reg_trie_state, ptr %3798, i64 %3797, i32 1
  %3800 = load i32, ptr %3799, align 8, !tbaa !17
  %3801 = call ptr @Perl_PerlIO_stderr() #15
  %3802 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3801, ptr noundef nonnull @.str.361, i32 noundef %3731, ptr noundef nonnull @.str.8, i64 noundef %3797) #15
  %3803 = load ptr, ptr %3795, align 8, !tbaa !155
  %3804 = getelementptr inbounds %struct._reg_trie_state, ptr %3803, i64 %3797
  %3805 = load i16, ptr %3804, align 8, !tbaa !170
  %3806 = icmp eq i16 %3805, 0
  %3807 = call ptr @Perl_PerlIO_stderr() #15
  br i1 %3806, label %3814, label %3808

3808:                                             ; preds = %3796
  %3809 = load ptr, ptr %3795, align 8, !tbaa !155
  %3810 = getelementptr inbounds %struct._reg_trie_state, ptr %3809, i64 %3797
  %3811 = load i16, ptr %3810, align 8, !tbaa !170
  %3812 = zext i16 %3811 to i32
  %3813 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3807, ptr noundef nonnull @.str.362, i32 noundef %3812) #15
  br label %3816

3814:                                             ; preds = %3796
  %3815 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3807, ptr noundef nonnull @.str.363, ptr noundef nonnull @.str.8) #15
  br label %3816

3816:                                             ; preds = %3814, %3808
  %3817 = call ptr @Perl_PerlIO_stderr() #15
  %3818 = zext i32 %3800 to i64
  %3819 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3817, ptr noundef nonnull @.str.364, i64 noundef %3818) #15
  %3820 = icmp eq i32 %3800, 0
  br i1 %3820, label %3887, label %3821

3821:                                             ; preds = %3816
  %3822 = load i16, ptr %1634, align 8, !tbaa !152
  %3823 = zext i16 %3822 to i32
  br label %3824

3824:                                             ; preds = %3839, %3821
  %3825 = phi i32 [ %3840, %3839 ], [ 0, %3821 ]
  %3826 = add i32 %3825, %3800
  %3827 = icmp ult i32 %3826, %3823
  br i1 %3827, label %3839, label %3828

3828:                                             ; preds = %3824
  %3829 = sub i32 %3826, %3823
  %3830 = load i32, ptr %2843, align 4, !tbaa !154
  %3831 = icmp ult i32 %3829, %3830
  br i1 %3831, label %3832, label %3841

3832:                                             ; preds = %3828
  %3833 = load ptr, ptr %2841, align 8, !tbaa !165
  %3834 = zext i32 %3829 to i64
  %3835 = getelementptr inbounds %struct._reg_trie_trans, ptr %3833, i64 %3834, i32 1
  %3836 = load i32, ptr %3835, align 4, !tbaa !166
  %3837 = zext i32 %3836 to i64
  %3838 = icmp eq i64 %3797, %3837
  br i1 %3838, label %3841, label %3839

3839:                                             ; preds = %3832, %3824
  %3840 = add i32 %3825, 1
  br label %3824, !llvm.loop !379

3841:                                             ; preds = %3832, %3828
  %3842 = call ptr @Perl_PerlIO_stderr() #15
  %3843 = zext i32 %3825 to i64
  %3844 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3842, ptr noundef nonnull @.str.365, i64 noundef %3843) #15
  %3845 = load i16, ptr %1634, align 8, !tbaa !152
  %3846 = icmp eq i16 %3845, 0
  br i1 %3846, label %3884, label %3847

3847:                                             ; preds = %3841
  %3848 = zext i16 %3845 to i32
  br label %3849

3849:                                             ; preds = %3879, %3847
  %3850 = phi i32 [ %3882, %3879 ], [ %3848, %3847 ]
  %3851 = phi i32 [ %3880, %3879 ], [ 0, %3847 ]
  %3852 = add i32 %3851, %3800
  %3853 = icmp ult i32 %3852, %3850
  br i1 %3853, label %3876, label %3854

3854:                                             ; preds = %3849
  %3855 = sub i32 %3852, %3850
  %3856 = load i32, ptr %2843, align 4, !tbaa !154
  %3857 = icmp ult i32 %3855, %3856
  br i1 %3857, label %3858, label %3876

3858:                                             ; preds = %3854
  %3859 = load ptr, ptr %2841, align 8, !tbaa !165
  %3860 = zext i32 %3855 to i64
  %3861 = getelementptr inbounds %struct._reg_trie_trans, ptr %3859, i64 %3860, i32 1
  %3862 = load i32, ptr %3861, align 4, !tbaa !166
  %3863 = zext i32 %3862 to i64
  %3864 = icmp eq i64 %3797, %3863
  br i1 %3864, label %3865, label %3876

3865:                                             ; preds = %3858
  %3866 = call ptr @Perl_PerlIO_stderr() #15
  %3867 = load ptr, ptr %2841, align 8, !tbaa !165
  %3868 = load i16, ptr %1634, align 8, !tbaa !152
  %3869 = zext i16 %3868 to i32
  %3870 = sub i32 %3852, %3869
  %3871 = zext i32 %3870 to i64
  %3872 = getelementptr inbounds %struct._reg_trie_trans, ptr %3867, i64 %3871
  %3873 = load i32, ptr %3872, align 4, !tbaa !168
  %3874 = zext i32 %3873 to i64
  %3875 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3866, ptr noundef nonnull @.str.352, i32 noundef %3701, i64 noundef %3874) #15
  br label %3879

3876:                                             ; preds = %3858, %3854, %3849
  %3877 = call ptr @Perl_PerlIO_stderr() #15
  %3878 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3877, ptr noundef nonnull @.str.347, i32 noundef %3701, ptr noundef nonnull @.str.366) #15
  br label %3879

3879:                                             ; preds = %3876, %3865
  %3880 = add nuw nsw i32 %3851, 1
  %3881 = load i16, ptr %1634, align 8, !tbaa !152
  %3882 = zext i16 %3881 to i32
  %3883 = icmp ult i32 %3880, %3882
  br i1 %3883, label %3849, label %3884, !llvm.loop !380

3884:                                             ; preds = %3879, %3841
  %3885 = call ptr @Perl_PerlIO_stderr() #15
  %3886 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3885, ptr noundef nonnull @.str.52) #15
  br label %3887

3887:                                             ; preds = %3884, %3816
  %3888 = call ptr @Perl_PerlIO_stderr() #15
  %3889 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3888, ptr noundef nonnull @.str.53) #15
  %3890 = add nuw nsw i64 %3797, 1
  %3891 = load i32, ptr %3791, align 4, !tbaa !153
  %3892 = zext i32 %3891 to i64
  %3893 = icmp ult i64 %3890, %3892
  br i1 %3893, label %3796, label %3894, !llvm.loop !381

3894:                                             ; preds = %3887, %3788
  %3895 = call ptr @Perl_PerlIO_stderr() #15
  %3896 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3895, ptr noundef nonnull @.str.367, i32 noundef %3730, ptr noundef nonnull @.str.8) #15
  %3897 = load i32, ptr %100, align 8, !tbaa !229
  %3898 = icmp eq i32 %3897, 0
  br i1 %3898, label %3915, label %3899

3899:                                             ; preds = %3894, %3899
  %3900 = phi i32 [ %3912, %3899 ], [ 1, %3894 ]
  %3901 = phi i16 [ %3911, %3899 ], [ 1, %3894 ]
  %3902 = call ptr @Perl_PerlIO_stderr() #15
  %3903 = load ptr, ptr %116, align 8, !tbaa !331
  %3904 = zext i16 %3901 to i64
  %3905 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %3903, i64 %3904
  %3906 = load i16, ptr %3905, align 4, !tbaa !347
  %3907 = zext i16 %3906 to i32
  %3908 = getelementptr inbounds %struct.reg_trie_wordinfo, ptr %3903, i64 %3904, i32 1
  %3909 = load i32, ptr %3908, align 4, !tbaa !349
  %3910 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3902, ptr noundef nonnull @.str.368, i32 noundef %3900, i32 noundef %3907, i32 noundef %3909) #15
  %3911 = add i16 %3901, 1
  %3912 = zext i16 %3911 to i32
  %3913 = load i32, ptr %100, align 8, !tbaa !229
  %3914 = icmp ult i32 %3913, %3912
  br i1 %3914, label %3915, label %3899, !llvm.loop !382

3915:                                             ; preds = %3899, %3894
  %3916 = call ptr @Perl_PerlIO_stderr() #15
  %3917 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %3916, ptr noundef nonnull @.str.53) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9)
  br label %3918

3918:                                             ; preds = %3915, %3694
  %3919 = load ptr, ptr %20, align 8, !tbaa !130
  %3920 = getelementptr inbounds %struct.regexp_internal, ptr %3919, i64 0, i32 3
  %3921 = load ptr, ptr %3920, align 8, !tbaa !147
  %3922 = add i32 %28, 1
  %3923 = zext i32 %3922 to i64
  %3924 = getelementptr inbounds %struct.reg_data, ptr %3921, i64 0, i32 2, i64 %3923
  store ptr %1602, ptr %3924, align 8, !tbaa !5
  %3925 = load ptr, ptr %20, align 8, !tbaa !130
  %3926 = getelementptr inbounds %struct.regexp_internal, ptr %3925, i64 0, i32 3
  %3927 = load ptr, ptr %3926, align 8, !tbaa !147
  %3928 = add i32 %28, 2
  %3929 = zext i32 %3928 to i64
  %3930 = getelementptr inbounds %struct.reg_data, ptr %3927, i64 0, i32 2, i64 %3929
  store ptr %117, ptr %3930, align 8, !tbaa !5
  %3931 = load ptr, ptr %20, align 8, !tbaa !130
  %3932 = getelementptr inbounds %struct.regexp_internal, ptr %3931, i64 0, i32 3
  %3933 = load ptr, ptr %3932, align 8, !tbaa !147
  %3934 = getelementptr inbounds %struct.reg_data, ptr %3933, i64 0, i32 2, i64 %31
  store ptr %19, ptr %3934, align 8, !tbaa !5
  %3935 = getelementptr inbounds %struct._reg_trie_data, ptr %98, i64 0, i32 6
  %3936 = load ptr, ptr %3935, align 8, !tbaa !290
  %3937 = icmp eq ptr %3936, null
  br i1 %3937, label %3938, label %3942

3938:                                             ; preds = %3918
  %3939 = load i32, ptr %99, align 4, !tbaa !228
  %3940 = icmp ugt i32 %3939, 1
  %3941 = select i1 %3940, i32 4, i32 1
  br label %3942

3942:                                             ; preds = %3918, %3938
  %3943 = phi i32 [ %3941, %3938 ], [ 2, %3918 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %14)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #15
  ret i32 %3943
}

declare void @Perl_save_destructor_x(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal void @S_unwind_scan_frames(ptr noundef %0) #0 {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi ptr [ %0, %1 ], [ %5, %2 ]
  %4 = getelementptr inbounds %struct.scan_frame, ptr %3, i64 0, i32 7
  %5 = load ptr, ptr %4, align 8, !tbaa !273
  tail call void @Perl_safesysfree(ptr noundef %3) #15
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %2, !llvm.loop !383

7:                                                ; preds = %2
  ret void
}

declare i64 @Perl_utf8n_to_uvchr(ptr noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare zeroext i1 @Perl_ckwarn_d(i32 noundef) local_unnamed_addr #2

declare i64 @Perl_utf8_length(ptr noundef, ptr noundef) local_unnamed_addr #2

declare ptr @Perl_mg_find(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_ssc_clear_locale(ptr noundef %0) unnamed_addr #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %1
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1525) #15
  br label %4

4:                                                ; preds = %1, %3
  %5 = getelementptr inbounds %struct.regnode_ssc, ptr %0, i64 0, i32 1
  %6 = load i8, ptr %5, align 1, !tbaa !181
  %7 = icmp eq i8 %6, 19
  br i1 %7, label %8, label %12

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.regnode_ssc, ptr %0, i64 0, i32 2
  %10 = load i16, ptr %9, align 2, !tbaa !182
  %11 = icmp eq i16 %10, 1
  br i1 %11, label %13, label %12

12:                                               ; preds = %8, %4
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1527) #15
  br label %13

13:                                               ; preds = %12, %8
  %14 = getelementptr inbounds %struct.regnode_charclass_class, ptr %0, i64 0, i32 5
  store i32 0, ptr %14, align 4, !tbaa !243
  %15 = load i8, ptr %0, align 8, !tbaa !198
  %16 = and i8 %15, -13
  store i8 %16, ptr %0, align 8, !tbaa !198
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_ssc_add_range(ptr noundef %0, i64 noundef %1, i64 noundef %2) unnamed_addr #0 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1496) #15
  br label %6

6:                                                ; preds = %3, %5
  %7 = getelementptr inbounds %struct.regnode_ssc, ptr %0, i64 0, i32 1
  %8 = load i8, ptr %7, align 1, !tbaa !181
  %9 = icmp eq i8 %8, 19
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.regnode_ssc, ptr %0, i64 0, i32 2
  %12 = load i16, ptr %11, align 2, !tbaa !182
  %13 = icmp eq i16 %12, 1
  br i1 %13, label %15, label %14

14:                                               ; preds = %10, %6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1498) #15
  br label %15

15:                                               ; preds = %10, %14
  %16 = getelementptr inbounds %struct.regnode_ssc, ptr %0, i64 0, i32 6
  %17 = load ptr, ptr %16, align 8, !tbaa !284
  %18 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %17, i64 noundef %1, i64 noundef %2) #15
  store ptr %18, ptr %16, align 8, !tbaa !284
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_ssc_intersection(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) unnamed_addr #0 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1483) #15
  br label %6

6:                                                ; preds = %3, %5
  %7 = icmp eq ptr %1, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 1483) #15
  br label %9

9:                                                ; preds = %6, %8
  %10 = getelementptr inbounds %struct.regnode_ssc, ptr %0, i64 0, i32 1
  %11 = load i8, ptr %10, align 1, !tbaa !181
  %12 = icmp eq i8 %11, 19
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.regnode_ssc, ptr %0, i64 0, i32 2
  %15 = load i16, ptr %14, align 2, !tbaa !182
  %16 = icmp eq i16 %15, 1
  br i1 %16, label %18, label %17

17:                                               ; preds = %13, %9
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1485) #15
  br label %18

18:                                               ; preds = %13, %17
  %19 = getelementptr inbounds %struct.regnode_ssc, ptr %0, i64 0, i32 6
  %20 = load ptr, ptr %19, align 8, !tbaa !284
  tail call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %20, ptr noundef %1, i1 noundef zeroext %2, ptr noundef nonnull %19) #15
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_ssc_union(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) unnamed_addr #0 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1468) #15
  br label %6

6:                                                ; preds = %3, %5
  %7 = icmp eq ptr %1, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 1468) #15
  br label %9

9:                                                ; preds = %6, %8
  %10 = getelementptr inbounds %struct.regnode_ssc, ptr %0, i64 0, i32 1
  %11 = load i8, ptr %10, align 1, !tbaa !181
  %12 = icmp eq i8 %11, 19
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.regnode_ssc, ptr %0, i64 0, i32 2
  %15 = load i16, ptr %14, align 2, !tbaa !182
  %16 = icmp eq i16 %15, 1
  br i1 %16, label %18, label %17

17:                                               ; preds = %13, %9
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1470) #15
  br label %18

18:                                               ; preds = %13, %17
  %19 = getelementptr inbounds %struct.regnode_ssc, ptr %0, i64 0, i32 6
  %20 = load ptr, ptr %19, align 8, !tbaa !284
  tail call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %20, ptr noundef %1, i1 noundef zeroext %2, ptr noundef nonnull %19) #15
  ret void
}

declare void @Perl_ck_warner(i32 noundef, ptr noundef, ...) local_unnamed_addr #2

declare ptr @Perl_utf8_hop(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_repeatcpy(ptr noundef, ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_invlist_clone(ptr noundef readonly %0) unnamed_addr #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %1
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.229, i32 noundef 38) #15
  br label %4

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !13
  %7 = and i32 %6, 255
  %8 = icmp eq i32 %7, 4
  br i1 %8, label %10, label %9

9:                                                ; preds = %4
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 40) #15
  br label %10

10:                                               ; preds = %9, %4
  %11 = load ptr, ptr %0, align 8, !tbaa !16
  %12 = getelementptr inbounds %struct.xpv, ptr %11, i64 0, i32 2
  %13 = load i64, ptr %12, align 8, !tbaa !38
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %29, label %15

15:                                               ; preds = %10
  %16 = lshr i64 %13, 3
  %17 = load i32, ptr %5, align 4, !tbaa !13
  %18 = and i32 %17, 255
  %19 = icmp eq i32 %18, 4
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 27) #15
  %21 = load ptr, ptr %0, align 8, !tbaa !16
  br label %22

22:                                               ; preds = %20, %15
  %23 = phi ptr [ %11, %15 ], [ %21, %20 ]
  %24 = getelementptr inbounds %struct.xpvinvlist, ptr %23, i64 0, i32 6
  %25 = load i8, ptr %24, align 1, !tbaa !11, !range !18, !noundef !19
  %26 = zext i8 %25 to i64
  %27 = add nuw nsw i64 %16, 1
  %28 = sub nuw nsw i64 %27, %26
  br label %29

29:                                               ; preds = %22, %10
  %30 = phi i64 [ %28, %22 ], [ 1, %10 ]
  %31 = tail call ptr @Perl__new_invlist(i64 noundef %30) #15
  %32 = load ptr, ptr %0, align 8, !tbaa !16
  %33 = getelementptr inbounds %struct.xpv, ptr %32, i64 0, i32 2
  %34 = load i64, ptr %33, align 8, !tbaa !38
  %35 = load i32, ptr %5, align 4, !tbaa !13
  %36 = and i32 %35, 255
  %37 = icmp eq i32 %36, 4
  br i1 %37, label %40, label %38

38:                                               ; preds = %29
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 27) #15
  %39 = load ptr, ptr %0, align 8, !tbaa !16
  br label %40

40:                                               ; preds = %29, %38
  %41 = phi ptr [ %32, %29 ], [ %39, %38 ]
  %42 = getelementptr inbounds %struct.xpvinvlist, ptr %41, i64 0, i32 6
  %43 = load i8, ptr %42, align 1, !tbaa !11, !range !18, !noundef !19
  %44 = icmp eq ptr %31, null
  br i1 %44, label %45, label %46

45:                                               ; preds = %40
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.229, i32 noundef 25) #15
  br label %46

46:                                               ; preds = %45, %40
  %47 = getelementptr inbounds %struct.sv, ptr %31, i64 0, i32 2
  %48 = load i32, ptr %47, align 4, !tbaa !13
  %49 = and i32 %48, 255
  %50 = icmp eq i32 %49, 4
  br i1 %50, label %52, label %51

51:                                               ; preds = %46
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 27) #15
  br label %52

52:                                               ; preds = %51, %46
  %53 = load ptr, ptr %31, align 8, !tbaa !16
  %54 = getelementptr inbounds %struct.xpvinvlist, ptr %53, i64 0, i32 6
  store i8 %43, ptr %54, align 1, !tbaa !11
  %55 = load i32, ptr %5, align 4, !tbaa !13
  %56 = and i32 %55, 255
  %57 = icmp eq i32 %56, 4
  br i1 %57, label %59, label %58

58:                                               ; preds = %52
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 40) #15
  br label %59

59:                                               ; preds = %58, %52
  %60 = load ptr, ptr %0, align 8, !tbaa !16
  %61 = getelementptr inbounds %struct.xpv, ptr %60, i64 0, i32 2
  %62 = load i64, ptr %61, align 8, !tbaa !38
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = lshr i64 %62, 3
  %66 = load i32, ptr %5, align 4, !tbaa !13
  %67 = and i32 %66, 255
  %68 = icmp eq i32 %67, 4
  br i1 %68, label %71, label %69

69:                                               ; preds = %64
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 27) #15
  %70 = load ptr, ptr %0, align 8, !tbaa !16
  br label %71

71:                                               ; preds = %69, %64
  %72 = phi ptr [ %60, %64 ], [ %70, %69 ]
  %73 = getelementptr inbounds %struct.xpvinvlist, ptr %72, i64 0, i32 6
  %74 = load i8, ptr %73, align 1, !tbaa !11, !range !18, !noundef !19
  %75 = zext i8 %74 to i64
  %76 = sub nsw i64 %65, %75
  br label %77

77:                                               ; preds = %59, %71
  %78 = phi i64 [ %76, %71 ], [ 0, %59 ]
  %79 = icmp ne i8 %43, 0
  tail call fastcc void @S_invlist_set_len(ptr noundef nonnull %31, i64 noundef %78, i1 noundef zeroext %79)
  %80 = getelementptr inbounds %struct.sv, ptr %31, i64 0, i32 3
  %81 = load ptr, ptr %80, align 8, !tbaa !17
  %82 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %83 = load ptr, ptr %82, align 8, !tbaa !17
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %81, ptr align 1 %83, i64 %34, i1 false)
  ret ptr %31
}

declare void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef, ptr noundef, i1 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #4

declare i64 @Perl__to_utf8_fold_flags(ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_get_ANYOF_cp_list_for_ssc(ptr noundef readonly %0, ptr nocapture noundef readonly %1) unnamed_addr #0 {
  %3 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #15
  %4 = tail call ptr @Perl__new_invlist(i64 noundef 0) #15
  %5 = tail call ptr @Perl_sv_2mortal(ptr noundef %4) #15
  store ptr %5, ptr %3, align 8, !tbaa !5
  %6 = getelementptr inbounds %struct.regnode_1, ptr %1, i64 0, i32 3
  %7 = load i32, ptr %6, align 4, !tbaa !148
  %8 = icmp eq ptr %0, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 1124) #15
  br label %10

10:                                               ; preds = %9, %2
  %11 = icmp eq i32 %7, -1
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = load i8, ptr %1, align 4, !tbaa !336
  br label %70

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %16 = load ptr, ptr %15, align 8, !tbaa !130
  %17 = getelementptr inbounds %struct.regexp_internal, ptr %16, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !147
  %19 = zext i32 %7 to i64
  %20 = getelementptr inbounds %struct.reg_data, ptr %18, i64 0, i32 2, i64 %19
  %21 = load ptr, ptr %20, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.av, ptr %23, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = getelementptr inbounds %struct.reg_data, ptr %18, i64 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !158
  %28 = getelementptr inbounds i8, ptr %27, i64 %19
  %29 = load i8, ptr %28, align 1, !tbaa !17
  %30 = icmp eq i8 %29, 115
  br i1 %30, label %32, label %31

31:                                               ; preds = %14
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.304, i32 noundef 1131) #15
  br label %32

32:                                               ; preds = %14, %31
  %33 = getelementptr inbounds ptr, ptr %25, i64 1
  %34 = load ptr, ptr %33, align 8, !tbaa !5
  %35 = icmp eq ptr %34, null
  %36 = icmp eq ptr %34, @PL_sv_undef
  %37 = or i1 %35, %36
  br i1 %37, label %42, label %38

38:                                               ; preds = %32
  %39 = tail call ptr @Perl__get_swash_invlist(ptr noundef nonnull %34) #15
  %40 = tail call fastcc ptr @S_invlist_clone(ptr noundef %39)
  %41 = tail call ptr @Perl_sv_2mortal(ptr noundef %40) #15
  store ptr %41, ptr %3, align 8, !tbaa !5
  br label %56

42:                                               ; preds = %32
  %43 = load ptr, ptr %25, align 8, !tbaa !5
  %44 = icmp eq ptr %43, null
  %45 = icmp eq ptr %43, @PL_sv_undef
  %46 = or i1 %44, %45
  br i1 %46, label %47, label %68

47:                                               ; preds = %42
  %48 = getelementptr inbounds ptr, ptr %25, i64 3
  %49 = load ptr, ptr %48, align 8, !tbaa !5
  %50 = icmp eq ptr %49, null
  %51 = icmp eq ptr %49, @PL_sv_undef
  %52 = or i1 %50, %51
  br i1 %52, label %56, label %53

53:                                               ; preds = %47
  %54 = tail call fastcc ptr @S_invlist_clone(ptr noundef nonnull %49)
  %55 = tail call ptr @Perl_sv_2mortal(ptr noundef %54) #15
  store ptr %55, ptr %3, align 8, !tbaa !5
  br label %56

56:                                               ; preds = %53, %47, %38
  %57 = phi ptr [ %55, %53 ], [ %5, %47 ], [ %41, %38 ]
  %58 = load i8, ptr %1, align 4, !tbaa !336
  %59 = and i8 %58, 4
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %70, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds ptr, ptr %25, i64 2
  %63 = load ptr, ptr %62, align 8, !tbaa !5
  %64 = icmp eq ptr %63, null
  %65 = icmp eq ptr %63, @PL_sv_undef
  %66 = or i1 %64, %65
  %67 = select i1 %66, ptr null, ptr %63
  br label %70

68:                                               ; preds = %42
  %69 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %5, i64 noundef 0, i64 noundef -1) #15
  br label %138

70:                                               ; preds = %12, %61, %56
  %71 = phi ptr [ %5, %12 ], [ %57, %61 ], [ %57, %56 ]
  %72 = phi i8 [ %13, %12 ], [ %58, %61 ], [ %58, %56 ]
  %73 = phi ptr [ null, %12 ], [ %67, %61 ], [ null, %56 ]
  %74 = and i8 %72, 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %70
  %77 = load ptr, ptr @PL_UpperLatin1, align 8, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %71, ptr noundef %77, i1 noundef zeroext true, ptr noundef nonnull %3) #15
  br label %78

78:                                               ; preds = %76, %70
  br label %79

79:                                               ; preds = %78, %95
  %80 = phi i64 [ %97, %95 ], [ 0, %78 ]
  %81 = phi i8 [ %96, %95 ], [ 0, %78 ]
  %82 = trunc i64 %80 to i32
  %83 = lshr i64 %80, 3
  %84 = and i64 %83, 536870911
  %85 = getelementptr inbounds %struct.regnode_charclass, ptr %1, i64 0, i32 4, i64 %84
  %86 = load i8, ptr %85, align 1, !tbaa !17
  %87 = zext i8 %86 to i32
  %88 = and i32 %82, 7
  %89 = shl nuw nsw i32 1, %88
  %90 = and i32 %89, %87
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %79
  %93 = load ptr, ptr %3, align 8, !tbaa !5
  %94 = call ptr @Perl__add_range_to_invlist(ptr noundef %93, i64 noundef %80, i64 noundef %80) #15
  store ptr %94, ptr %3, align 8, !tbaa !5
  br label %95

95:                                               ; preds = %92, %79
  %96 = phi i8 [ 1, %92 ], [ %81, %79 ]
  %97 = add nuw nsw i64 %80, 1
  %98 = icmp eq i64 %97, 256
  br i1 %98, label %99, label %79, !llvm.loop !384

99:                                               ; preds = %95
  %100 = load i8, ptr %1, align 4, !tbaa !336
  %101 = icmp sgt i8 %100, -1
  br i1 %101, label %106, label %102

102:                                              ; preds = %99
  %103 = load ptr, ptr %3, align 8, !tbaa !5
  %104 = load ptr, ptr @PL_UpperLatin1, align 8, !tbaa !5
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %103, ptr noundef %104, i1 noundef zeroext false, ptr noundef nonnull %3) #15
  %105 = load i8, ptr %1, align 4, !tbaa !336
  br label %106

106:                                              ; preds = %102, %99
  %107 = phi i8 [ %105, %102 ], [ %100, %99 ]
  %108 = and i8 %107, 64
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = load ptr, ptr %3, align 8, !tbaa !5
  %112 = load ptr, ptr @PL_InBitmap, align 8, !tbaa !5
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %111, ptr noundef %112, i1 noundef zeroext true, ptr noundef nonnull %3) #15
  %113 = load i8, ptr %1, align 4, !tbaa !336
  br label %114

114:                                              ; preds = %110, %106
  %115 = phi i8 [ %113, %110 ], [ %107, %106 ]
  %116 = zext i8 %115 to i32
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %121, label %119

119:                                              ; preds = %114
  %120 = load ptr, ptr %3, align 8, !tbaa !5
  call void @Perl__invlist_invert(ptr noundef %120) #15
  br label %130

121:                                              ; preds = %114
  %122 = and i8 %96, 1
  %123 = icmp eq i8 %122, 0
  %124 = and i32 %116, 4
  %125 = icmp eq i32 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %130, label %127

127:                                              ; preds = %121
  %128 = load ptr, ptr %3, align 8, !tbaa !5
  %129 = load ptr, ptr @PL_Latin1, align 8, !tbaa !5
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %128, ptr noundef %129, i1 noundef zeroext false, ptr noundef nonnull %3) #15
  br label %130

130:                                              ; preds = %121, %127, %119
  %131 = icmp eq ptr %73, null
  %132 = load ptr, ptr %3, align 8, !tbaa !5
  br i1 %131, label %138, label %133

133:                                              ; preds = %130
  %134 = load i8, ptr %1, align 4, !tbaa !336
  %135 = and i8 %134, 1
  %136 = icmp ne i8 %135, 0
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %132, ptr noundef nonnull %73, i1 noundef zeroext %136, ptr noundef nonnull %3) #15
  %137 = load ptr, ptr %3, align 8, !tbaa !5
  br label %138

138:                                              ; preds = %130, %133, %68
  %139 = phi ptr [ %69, %68 ], [ %137, %133 ], [ %132, %130 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #15
  ret ptr %139
}

declare ptr @Perl__get_swash_invlist(ptr noundef) local_unnamed_addr #2

declare void @Perl__invlist_union_maybe_complement_2nd(ptr noundef, ptr noundef, i1 noundef zeroext, ptr noundef) local_unnamed_addr #2

declare void @Perl__invlist_invert(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @S_ssc_is_cp_posixl_init(ptr noundef readonly %0, ptr noundef readonly %1) unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #15
  %5 = icmp eq ptr %0, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 1086) #15
  br label %7

7:                                                ; preds = %2, %6
  %8 = icmp eq ptr %1, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.227, i32 noundef 1086) #15
  br label %10

10:                                               ; preds = %7, %9
  %11 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 1
  %12 = load i8, ptr %11, align 1, !tbaa !181
  %13 = icmp eq i8 %12, 19
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 2
  %16 = load i16, ptr %15, align 2, !tbaa !182
  %17 = icmp eq i16 %16, 1
  br i1 %17, label %19, label %18

18:                                               ; preds = %14, %10
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.228, i32 noundef 1088) #15
  br label %19

19:                                               ; preds = %14, %18
  %20 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 6
  %21 = load ptr, ptr %20, align 8, !tbaa !284
  %22 = icmp eq ptr %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %25 = load i32, ptr %24, align 4, !tbaa !13
  %26 = and i32 %25, 255
  %27 = icmp eq i32 %26, 4
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  %29 = load ptr, ptr %20, align 8, !tbaa !284
  br label %34

30:                                               ; preds = %19
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9125) #15
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9115) #15
  %31 = load i32, ptr inttoptr (i64 12 to ptr), align 4, !tbaa !13
  %32 = and i32 %31, 255
  %33 = icmp ne i32 %32, 4
  tail call void @llvm.assume(i1 %33)
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  unreachable

34:                                               ; preds = %23, %28
  %35 = phi ptr [ %21, %23 ], [ %29, %28 ]
  %36 = load ptr, ptr %21, align 8, !tbaa !16
  %37 = getelementptr inbounds %struct.xpvinvlist, ptr %36, i64 0, i32 5
  store i64 0, ptr %37, align 8, !tbaa !9
  %38 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef %35, ptr noundef nonnull %3, ptr noundef nonnull %4)
  %39 = load i64, ptr %3, align 8
  %40 = icmp eq i64 %39, 0
  %41 = select i1 %38, i1 %40, i1 false
  br i1 %41, label %42, label %60

42:                                               ; preds = %34
  %43 = load i64, ptr %4, align 8, !tbaa !9
  %44 = icmp eq i64 %43, -1
  %45 = load ptr, ptr %20, align 8, !tbaa !284
  %46 = icmp eq ptr %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.sv, ptr %45, i64 0, i32 2
  %49 = load i32, ptr %48, align 4, !tbaa !13
  %50 = and i32 %49, 255
  %51 = icmp eq i32 %50, 4
  br i1 %51, label %57, label %52

52:                                               ; preds = %47
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  br label %57

53:                                               ; preds = %42
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9141) #15
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9115) #15
  %54 = load i32, ptr inttoptr (i64 12 to ptr), align 4, !tbaa !13
  %55 = and i32 %54, 255
  %56 = icmp ne i32 %55, 4
  call void @llvm.assume(i1 %56)
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  unreachable

57:                                               ; preds = %47, %52
  %58 = load ptr, ptr %45, align 8, !tbaa !16
  %59 = getelementptr inbounds %struct.xpvinvlist, ptr %58, i64 0, i32 5
  store i64 -1, ptr %59, align 8, !tbaa !9
  br i1 %44, label %76, label %85

60:                                               ; preds = %34
  %61 = load ptr, ptr %20, align 8, !tbaa !284
  %62 = icmp eq ptr %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.sv, ptr %61, i64 0, i32 2
  %65 = load i32, ptr %64, align 4, !tbaa !13
  %66 = and i32 %65, 255
  %67 = icmp eq i32 %66, 4
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  br label %73

69:                                               ; preds = %60
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9141) #15
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9115) #15
  %70 = load i32, ptr inttoptr (i64 12 to ptr), align 4, !tbaa !13
  %71 = and i32 %70, 255
  %72 = icmp ne i32 %71, 4
  call void @llvm.assume(i1 %72)
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  unreachable

73:                                               ; preds = %63, %68
  %74 = load ptr, ptr %61, align 8, !tbaa !16
  %75 = getelementptr inbounds %struct.xpvinvlist, ptr %74, i64 0, i32 5
  store i64 -1, ptr %75, align 8, !tbaa !9
  br label %85

76:                                               ; preds = %57
  %77 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 34
  %78 = load i32, ptr %77, align 8, !tbaa !52
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %84, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %struct.regnode_ssc, ptr %1, i64 0, i32 5
  %82 = load i32, ptr %81, align 8, !tbaa !293
  %83 = icmp eq i32 %82, 536870911
  br i1 %83, label %84, label %85

84:                                               ; preds = %80, %76
  br label %85

85:                                               ; preds = %80, %57, %73, %84
  %86 = phi i32 [ 1, %84 ], [ 0, %73 ], [ 0, %57 ], [ 0, %80 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #15
  ret i32 %86
}

declare i64 @Perl_valid_utf8_to_uvchr(ptr noundef, ptr noundef) local_unnamed_addr #2

declare ptr @Perl_newSV(i64 noundef) local_unnamed_addr #2

declare ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

declare ptr @Perl_hv_common_key_len(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nounwind willreturn allockind("realloc") allocsize(1) memory(argmem: readwrite, inaccessiblemem: readwrite)
declare noalias noundef ptr @realloc(ptr allocptr nocapture noundef, i64 noundef) local_unnamed_addr #9

declare void @Perl_warn(ptr noundef, ...) local_unnamed_addr #2

declare void @Perl_sv_chop(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_add_above_Latin1_folds(ptr noundef readonly %0, i8 noundef zeroext %1, ptr noundef %2) unnamed_addr #0 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 14035) #15
  br label %6

6:                                                ; preds = %3, %5
  %7 = icmp eq ptr %2, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 14035) #15
  br label %9

9:                                                ; preds = %6, %8
  %10 = zext i8 %1 to i64
  %11 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %10
  %12 = load i32, ptr %11, align 4, !tbaa !73
  %13 = and i32 %12, 524288
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %9
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.370, i32 noundef 14037) #15
  br label %16

16:                                               ; preds = %9, %15
  %17 = zext i8 %1 to i32
  switch i8 %1, label %37 [
    i8 107, label %18
    i8 75, label %18
    i8 115, label %21
    i8 83, label %21
    i8 -75, label %24
    i8 -59, label %28
    i8 -27, label %28
    i8 -1, label %31
    i8 -33, label %34
  ]

18:                                               ; preds = %16, %16
  %19 = load ptr, ptr %2, align 8, !tbaa !5
  %20 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %19, i64 noundef 8490, i64 noundef 8490) #15
  store ptr %20, ptr %2, align 8, !tbaa !5
  br label %59

21:                                               ; preds = %16, %16
  %22 = load ptr, ptr %2, align 8, !tbaa !5
  %23 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %22, i64 noundef 383, i64 noundef 383) #15
  store ptr %23, ptr %2, align 8, !tbaa !5
  br label %59

24:                                               ; preds = %16
  %25 = load ptr, ptr %2, align 8, !tbaa !5
  %26 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %25, i64 noundef 924, i64 noundef 924) #15
  store ptr %26, ptr %2, align 8, !tbaa !5
  %27 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %26, i64 noundef 956, i64 noundef 956) #15
  store ptr %27, ptr %2, align 8, !tbaa !5
  br label %59

28:                                               ; preds = %16, %16
  %29 = load ptr, ptr %2, align 8, !tbaa !5
  %30 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %29, i64 noundef 8491, i64 noundef 8491) #15
  store ptr %30, ptr %2, align 8, !tbaa !5
  br label %59

31:                                               ; preds = %16
  %32 = load ptr, ptr %2, align 8, !tbaa !5
  %33 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %32, i64 noundef 376, i64 noundef 376) #15
  store ptr %33, ptr %2, align 8, !tbaa !5
  br label %59

34:                                               ; preds = %16
  %35 = load ptr, ptr %2, align 8, !tbaa !5
  %36 = tail call ptr @Perl__add_range_to_invlist(ptr noundef %35, i64 noundef 7838, i64 noundef 7838) #15
  store ptr %36, ptr %2, align 8, !tbaa !5
  br label %59

37:                                               ; preds = %16
  %38 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %39 = load ptr, ptr %38, align 8, !tbaa !112
  %40 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %41 = icmp eq ptr %39, %40
  br i1 %41, label %59, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %44 = load ptr, ptr %43, align 8, !tbaa !105
  %45 = ptrtoint ptr %44 to i64
  %46 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %47 = load ptr, ptr %46, align 8, !tbaa !65
  %48 = ptrtoint ptr %47 to i64
  %49 = sub i64 %45, %48
  %50 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %51 = load i32, ptr %50, align 8, !tbaa !50
  %52 = icmp ne i32 %51, 0
  %53 = zext i1 %52 to i32
  %54 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %55 = load ptr, ptr %54, align 8, !tbaa !107
  %56 = ptrtoint ptr %55 to i64
  %57 = sub i64 %56, %45
  %58 = getelementptr inbounds i8, ptr %47, i64 %49
  tail call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 20, ptr noundef nonnull @.str.372, i32 noundef %17, i32 noundef %53, i64 noundef %49, ptr noundef %47, i32 noundef %53, i64 noundef %57, ptr noundef %58) #15
  br label %59

59:                                               ; preds = %37, %42, %34, %31, %28, %24, %21, %18
  ret void
}

declare void @Perl__load_PL_utf8_foldclosures() local_unnamed_addr #2

declare i64 @Perl_sv_2uv_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_ck_warner_d(i32 noundef, ptr noundef, ...) local_unnamed_addr #2

declare void @Perl_fbm_compile(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_populate_ANYOF_from_invlist(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = icmp eq ptr %0, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.303, i32 noundef 13000) #15
  br label %7

7:                                                ; preds = %2, %6
  %8 = icmp eq ptr %1, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.377, i32 noundef 13000) #15
  br label %10

10:                                               ; preds = %7, %9
  %11 = getelementptr inbounds %struct.regnode, ptr %0, i64 0, i32 1
  %12 = load i8, ptr %11, align 1, !tbaa !141
  %13 = zext i8 %12 to i64
  %14 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %13
  %15 = load i8, ptr %14, align 1, !tbaa !17
  %16 = icmp eq i8 %15, 19
  br i1 %16, label %18, label %17

17:                                               ; preds = %10
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.378, i32 noundef 13001) #15
  br label %18

18:                                               ; preds = %10, %17
  %19 = getelementptr inbounds %struct.regnode_charclass, ptr %0, i64 0, i32 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %19, i8 0, i64 32, i1 false)
  %20 = load ptr, ptr %1, align 8, !tbaa !5
  %21 = icmp eq ptr %20, null
  br i1 %21, label %181, label %22

22:                                               ; preds = %18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #15
  %23 = getelementptr inbounds %struct.sv, ptr %20, i64 0, i32 2
  %24 = load i32, ptr %23, align 4, !tbaa !13
  %25 = and i32 %24, 255
  %26 = icmp eq i32 %25, 4
  br i1 %26, label %29, label %27

27:                                               ; preds = %22
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  %28 = load ptr, ptr %1, align 8, !tbaa !5
  br label %29

29:                                               ; preds = %22, %27
  %30 = phi ptr [ %20, %22 ], [ %28, %27 ]
  %31 = load ptr, ptr %20, align 8, !tbaa !16
  %32 = getelementptr inbounds %struct.xpvinvlist, ptr %31, i64 0, i32 5
  store i64 0, ptr %32, align 8, !tbaa !9
  %33 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef %30, ptr noundef nonnull %3, ptr noundef nonnull %4)
  br i1 %33, label %37, label %113

34:                                               ; preds = %77, %110, %52
  %35 = load ptr, ptr %1, align 8, !tbaa !5
  %36 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef %35, ptr noundef nonnull %3, ptr noundef nonnull %4)
  br i1 %36, label %37, label %113

37:                                               ; preds = %29, %34
  %38 = phi i1 [ false, %34 ], [ true, %29 ]
  %39 = load i64, ptr %4, align 8
  %40 = icmp eq i64 %39, -1
  %41 = load i64, ptr %3, align 8
  %42 = icmp ult i64 %41, 257
  %43 = select i1 %40, i1 %42, i1 false
  br i1 %43, label %46, label %44

44:                                               ; preds = %37
  %45 = icmp ugt i64 %39, 255
  br i1 %45, label %46, label %50

46:                                               ; preds = %44, %37
  %47 = phi i8 [ 64, %37 ], [ 2, %44 ]
  %48 = load i8, ptr %0, align 2, !tbaa !143
  %49 = or i8 %48, %47
  store i8 %49, ptr %0, align 2, !tbaa !143
  br label %50

50:                                               ; preds = %46, %44
  %51 = icmp ugt i64 %41, 255
  br i1 %51, label %113, label %52

52:                                               ; preds = %50
  %53 = call i64 @llvm.umin.i64(i64 %39, i64 255)
  %54 = trunc i64 %41 to i32
  %55 = trunc i64 %53 to i32
  %56 = icmp ugt i32 %54, %55
  br i1 %56, label %34, label %57

57:                                               ; preds = %52
  %58 = add nuw nsw i32 %55, 1
  %59 = sub i32 %58, %54
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %77, label %62

62:                                               ; preds = %57
  %63 = lshr i64 %41, 3
  %64 = and i64 %63, 31
  %65 = getelementptr inbounds %struct.regnode_charclass, ptr %0, i64 0, i32 4, i64 %64
  %66 = load i8, ptr %65, align 1, !tbaa !17
  %67 = zext i8 %66 to i32
  %68 = and i32 %54, 7
  %69 = shl nuw nsw i32 1, %68
  %70 = and i32 %69, %67
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %62
  %73 = trunc i32 %69 to i8
  %74 = or i8 %66, %73
  store i8 %74, ptr %65, align 1, !tbaa !17
  br label %75

75:                                               ; preds = %72, %62
  %76 = add i32 %54, 1
  br label %77

77:                                               ; preds = %75, %57
  %78 = phi i32 [ %54, %57 ], [ %76, %75 ]
  %79 = icmp eq i32 %55, %54
  br i1 %79, label %34, label %80

80:                                               ; preds = %77, %110
  %81 = phi i32 [ %111, %110 ], [ %78, %77 ]
  %82 = lshr i32 %81, 3
  %83 = and i32 %82, 31
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %struct.regnode_charclass, ptr %0, i64 0, i32 4, i64 %84
  %86 = load i8, ptr %85, align 1, !tbaa !17
  %87 = zext i8 %86 to i32
  %88 = and i32 %81, 7
  %89 = shl nuw nsw i32 1, %88
  %90 = and i32 %89, %87
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %80
  %93 = trunc i32 %89 to i8
  %94 = or i8 %86, %93
  store i8 %94, ptr %85, align 1, !tbaa !17
  br label %95

95:                                               ; preds = %92, %80
  %96 = add i32 %81, 1
  %97 = lshr i32 %96, 3
  %98 = and i32 %97, 31
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds %struct.regnode_charclass, ptr %0, i64 0, i32 4, i64 %99
  %101 = load i8, ptr %100, align 1, !tbaa !17
  %102 = zext i8 %101 to i32
  %103 = and i32 %96, 7
  %104 = shl nuw nsw i32 1, %103
  %105 = and i32 %104, %102
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %95
  %108 = trunc i32 %104 to i8
  %109 = or i8 %101, %108
  store i8 %109, ptr %100, align 1, !tbaa !17
  br label %110

110:                                              ; preds = %107, %95
  %111 = add i32 %81, 2
  %112 = icmp eq i32 %96, %55
  br i1 %112, label %34, label %80, !llvm.loop !385

113:                                              ; preds = %34, %50, %29
  %114 = phi i1 [ true, %29 ], [ %38, %50 ], [ false, %34 ]
  %115 = load ptr, ptr %1, align 8, !tbaa !5
  %116 = icmp eq ptr %115, null
  br i1 %116, label %124, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %struct.sv, ptr %115, i64 0, i32 2
  %119 = load i32, ptr %118, align 4, !tbaa !13
  %120 = and i32 %119, 255
  %121 = icmp eq i32 %120, 4
  br i1 %121, label %128, label %122

122:                                              ; preds = %117
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  %123 = load ptr, ptr %1, align 8, !tbaa !5
  br label %128

124:                                              ; preds = %113
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9141) #15
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9115) #15
  %125 = load i32, ptr inttoptr (i64 12 to ptr), align 4, !tbaa !13
  %126 = and i32 %125, 255
  %127 = icmp ne i32 %126, 4
  call void @llvm.assume(i1 %127)
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  unreachable

128:                                              ; preds = %117, %122
  %129 = phi ptr [ %115, %117 ], [ %123, %122 ]
  %130 = load ptr, ptr %115, align 8, !tbaa !16
  %131 = getelementptr inbounds %struct.xpvinvlist, ptr %130, i64 0, i32 5
  store i64 -1, ptr %131, align 8, !tbaa !9
  br i1 %114, label %135, label %132

132:                                              ; preds = %128
  %133 = load ptr, ptr @PL_InBitmap, align 8, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %129, ptr noundef %133, i1 noundef zeroext true, ptr noundef nonnull %1) #15
  %134 = load ptr, ptr %1, align 8, !tbaa !5
  br label %135

135:                                              ; preds = %132, %128
  %136 = phi ptr [ %134, %132 ], [ %129, %128 ]
  %137 = load i8, ptr %0, align 2, !tbaa !143
  %138 = and i8 %137, 64
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %143, label %140

140:                                              ; preds = %135
  %141 = load ptr, ptr @PL_InBitmap, align 8, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %136, ptr noundef %141, i1 noundef zeroext false, ptr noundef nonnull %1) #15
  %142 = load ptr, ptr %1, align 8, !tbaa !5
  br label %143

143:                                              ; preds = %140, %135
  %144 = phi ptr [ %142, %140 ], [ %136, %135 ]
  %145 = icmp eq ptr %144, null
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.229, i32 noundef 38) #15
  br label %147

147:                                              ; preds = %146, %143
  %148 = getelementptr inbounds %struct.sv, ptr %144, i64 0, i32 2
  %149 = load i32, ptr %148, align 4, !tbaa !13
  %150 = and i32 %149, 255
  %151 = icmp eq i32 %150, 4
  br i1 %151, label %153, label %152

152:                                              ; preds = %147
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 40) #15
  br label %153

153:                                              ; preds = %152, %147
  %154 = load ptr, ptr %144, align 8, !tbaa !16
  %155 = getelementptr inbounds %struct.xpv, ptr %154, i64 0, i32 2
  %156 = load i64, ptr %155, align 8, !tbaa !38
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %171, label %158

158:                                              ; preds = %153
  %159 = lshr i64 %156, 3
  %160 = load i32, ptr %148, align 4, !tbaa !13
  %161 = and i32 %160, 255
  %162 = icmp eq i32 %161, 4
  br i1 %162, label %165, label %163

163:                                              ; preds = %158
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 27) #15
  %164 = load ptr, ptr %144, align 8, !tbaa !16
  br label %165

165:                                              ; preds = %158, %163
  %166 = phi ptr [ %154, %158 ], [ %164, %163 ]
  %167 = getelementptr inbounds %struct.xpvinvlist, ptr %166, i64 0, i32 6
  %168 = load i8, ptr %167, align 1, !tbaa !11, !range !18, !noundef !19
  %169 = zext i8 %168 to i64
  %170 = icmp eq i64 %159, %169
  br i1 %170, label %171, label %180

171:                                              ; preds = %153, %165
  %172 = load ptr, ptr %1, align 8, !tbaa !5
  %173 = getelementptr inbounds %struct.sv, ptr %172, i64 0, i32 1
  %174 = load i32, ptr %173, align 8, !tbaa !37
  %175 = icmp ugt i32 %174, 1
  br i1 %175, label %176, label %178

176:                                              ; preds = %171
  %177 = add i32 %174, -1
  store i32 %177, ptr %173, align 8, !tbaa !37
  br label %179

178:                                              ; preds = %171
  call void @Perl_sv_free2(ptr noundef nonnull %172, i32 noundef %174) #15
  br label %179

179:                                              ; preds = %176, %178
  store ptr null, ptr %1, align 8, !tbaa !5
  br label %180

180:                                              ; preds = %179, %165
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #15
  br label %181

181:                                              ; preds = %180, %18
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_set_ANYOF_arg(ptr noundef readonly %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5, i1 noundef zeroext %6) unnamed_addr #0 {
  %8 = icmp eq ptr %0, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 16053) #15
  br label %10

10:                                               ; preds = %7, %9
  %11 = icmp eq ptr %1, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.303, i32 noundef 16053) #15
  br label %13

13:                                               ; preds = %10, %12
  %14 = icmp ne ptr %2, null
  %15 = icmp ne ptr %3, null
  %16 = or i1 %14, %15
  %17 = icmp ne ptr %4, null
  %18 = or i1 %16, %17
  br i1 %18, label %24, label %19

19:                                               ; preds = %13
  %20 = load i8, ptr %1, align 2, !tbaa !143
  %21 = and i8 %20, 34
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %101, label %23

23:                                               ; preds = %19
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.379, i32 noundef 16058) #15
  br label %101

24:                                               ; preds = %13
  %25 = tail call ptr @Perl_newSV_type(i32 noundef 11) #15
  %26 = load i8, ptr %1, align 2, !tbaa !143
  %27 = and i8 %26, 38
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.380, i32 noundef 16067) #15
  br label %30

30:                                               ; preds = %24, %29
  br i1 %15, label %31, label %35

31:                                               ; preds = %30
  %32 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !37
  %34 = add i32 %33, 1
  store i32 %34, ptr %32, align 8, !tbaa !37
  br label %35

35:                                               ; preds = %30, %31
  %36 = phi ptr [ %3, %31 ], [ @PL_sv_undef, %30 ]
  %37 = tail call ptr @Perl_av_store(ptr noundef %25, i64 noundef 0, ptr noundef nonnull %36) #15
  %38 = icmp eq ptr %5, null
  br i1 %38, label %55, label %39

39:                                               ; preds = %35
  br i1 %14, label %40, label %48

40:                                               ; preds = %39
  %41 = tail call ptr @Perl_av_store(ptr noundef %25, i64 noundef 1, ptr noundef nonnull %5) #15
  %42 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 1
  %43 = load i32, ptr %42, align 8, !tbaa !37
  %44 = icmp ugt i32 %43, 1
  br i1 %44, label %45, label %47

45:                                               ; preds = %40
  %46 = add i32 %43, -1
  store i32 %46, ptr %42, align 8, !tbaa !37
  br label %62

47:                                               ; preds = %40
  tail call void @Perl_sv_free2(ptr noundef nonnull %2, i32 noundef %43) #15
  br label %62

48:                                               ; preds = %39
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.381, i32 noundef 16072) #15
  %49 = tail call ptr @Perl_av_store(ptr noundef %25, i64 noundef 1, ptr noundef nonnull %5) #15
  %50 = load i32, ptr inttoptr (i64 8 to ptr), align 8, !tbaa !37
  %51 = icmp ugt i32 %50, 1
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = add i32 %50, -1
  store i32 %53, ptr inttoptr (i64 8 to ptr), align 8, !tbaa !37
  br label %62

54:                                               ; preds = %48
  tail call void @Perl_sv_free2(ptr noundef nonnull null, i32 noundef %50) #15
  br label %62

55:                                               ; preds = %35
  %56 = tail call ptr @Perl_av_store(ptr noundef %25, i64 noundef 1, ptr noundef nonnull @PL_sv_undef) #15
  br i1 %14, label %57, label %62

57:                                               ; preds = %55
  %58 = tail call ptr @Perl_av_store(ptr noundef %25, i64 noundef 3, ptr noundef nonnull %2) #15
  %59 = zext i1 %6 to i64
  %60 = tail call ptr @Perl_newSVuv(i64 noundef %59) #15
  %61 = tail call ptr @Perl_av_store(ptr noundef %25, i64 noundef 4, ptr noundef %60) #15
  br label %62

62:                                               ; preds = %54, %52, %47, %45, %55, %57
  %63 = select i1 %17, ptr %4, ptr @PL_sv_undef
  %64 = tail call ptr @Perl_av_store(ptr noundef %25, i64 noundef 2, ptr noundef nonnull %63) #15
  %65 = tail call ptr @Perl_newRV_noinc(ptr noundef %25) #15
  %66 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %67 = load ptr, ptr %66, align 8, !tbaa !130
  %68 = getelementptr inbounds %struct.regexp_internal, ptr %67, i64 0, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !147
  %70 = icmp eq ptr %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %62
  %72 = load i32, ptr %69, align 8, !tbaa !156
  br label %73

73:                                               ; preds = %71, %62
  %74 = phi i32 [ %72, %71 ], [ 0, %62 ]
  %75 = add i32 %74, 1
  %76 = zext i32 %74 to i64
  %77 = shl nuw nsw i64 %76, 3
  %78 = add nuw nsw i64 %77, 24
  %79 = tail call ptr @Perl_safesysrealloc(ptr noundef %69, i64 noundef %78) #15
  %80 = load ptr, ptr %66, align 8, !tbaa !130
  %81 = getelementptr inbounds %struct.regexp_internal, ptr %80, i64 0, i32 3
  store ptr %79, ptr %81, align 8, !tbaa !147
  %82 = icmp eq i32 %74, 0
  br i1 %82, label %88, label %83

83:                                               ; preds = %73
  %84 = getelementptr inbounds %struct.reg_data, ptr %79, i64 0, i32 1
  %85 = load ptr, ptr %84, align 8, !tbaa !158
  %86 = zext i32 %75 to i64
  %87 = tail call ptr @Perl_safesysrealloc(ptr noundef %85, i64 noundef %86) #15
  br label %90

88:                                               ; preds = %73
  %89 = tail call ptr @Perl_safesysmalloc(i64 noundef 1) #15
  br label %90

90:                                               ; preds = %83, %88
  %91 = phi ptr [ %87, %83 ], [ %89, %88 ]
  %92 = load ptr, ptr %66, align 8, !tbaa !130
  %93 = getelementptr inbounds %struct.regexp_internal, ptr %92, i64 0, i32 3
  %94 = load ptr, ptr %93, align 8, !tbaa !147
  %95 = getelementptr inbounds %struct.reg_data, ptr %94, i64 0, i32 1
  store ptr %91, ptr %95, align 8, !tbaa !158
  store i32 %75, ptr %94, align 8, !tbaa !156
  %96 = getelementptr inbounds i8, ptr %91, i64 %76
  store i8 115, ptr %96, align 1
  %97 = load ptr, ptr %66, align 8, !tbaa !130
  %98 = getelementptr inbounds %struct.regexp_internal, ptr %97, i64 0, i32 3
  %99 = load ptr, ptr %98, align 8, !tbaa !147
  %100 = getelementptr inbounds %struct.reg_data, ptr %99, i64 0, i32 2, i64 %76
  store ptr %65, ptr %100, align 8, !tbaa !5
  br label %101

101:                                              ; preds = %23, %19, %90
  %102 = phi i32 [ %74, %90 ], [ -1, %19 ], [ -1, %23 ]
  %103 = getelementptr inbounds %struct.regnode_1, ptr %1, i64 0, i32 3
  store i32 %102, ptr %103, align 4, !tbaa !148
  ret void
}

declare ptr @Perl_av_store(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #2

declare ptr @Perl_newSVuv(i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal void @S_re_croak2(i1 noundef zeroext %0, ptr noundef readonly %1, ptr nocapture readnone %2, ...) unnamed_addr #0 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = alloca i64, align 8
  %6 = alloca [512 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #15
  %7 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #18
  store i64 %7, ptr %5, align 8, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 512, ptr nonnull %6) #15
  %8 = icmp eq ptr %1, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.449, i32 noundef 17725) #15
  br label %10

10:                                               ; preds = %9, %3
  %11 = icmp ugt i64 %7, 510
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  store i64 510, ptr %5, align 8, !tbaa !9
  br label %13

13:                                               ; preds = %12, %10
  %14 = phi i64 [ 510, %12 ], [ %7, %10 ]
  %15 = add nsw i64 %14, -449
  %16 = icmp ult i64 %15, -511
  %17 = sub nuw nsw i64 510, %14
  %18 = select i1 %16, i64 %17, i64 62
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 16 %6, ptr align 1 %1, i64 %14, i1 false)
  %19 = getelementptr inbounds i8, ptr %6, i64 %14
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %19, ptr nonnull align 1 @.str.403, i64 %18, i1 false)
  %20 = add nuw nsw i64 %18, %14
  %21 = getelementptr inbounds [512 x i8], ptr %6, i64 0, i64 %20
  store i8 10, ptr %21, align 1, !tbaa !17
  %22 = add nuw nsw i64 %20, 1
  %23 = getelementptr inbounds [512 x i8], ptr %6, i64 0, i64 %22
  store i8 0, ptr %23, align 1, !tbaa !17
  call void @llvm.va_start(ptr nonnull %4)
  %24 = call ptr @Perl_vmess(ptr noundef nonnull %6, ptr noundef nonnull %4) #15
  call void @llvm.va_end(ptr nonnull %4)
  %25 = getelementptr inbounds %struct.sv, ptr %24, i64 0, i32 2
  %26 = load i32, ptr %25, align 4, !tbaa !13
  %27 = and i32 %26, 2098176
  %28 = icmp eq i32 %27, 1024
  br i1 %28, label %29, label %35

29:                                               ; preds = %13
  %30 = load ptr, ptr %24, align 8, !tbaa !16
  %31 = getelementptr inbounds %struct.xpv, ptr %30, i64 0, i32 2
  %32 = load i64, ptr %31, align 8, !tbaa !38
  store i64 %32, ptr %5, align 8, !tbaa !9
  %33 = getelementptr inbounds %struct.sv, ptr %24, i64 0, i32 3
  %34 = load ptr, ptr %33, align 8, !tbaa !17
  br label %38

35:                                               ; preds = %13
  %36 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %24, ptr noundef nonnull %5, i32 noundef 34) #15
  %37 = load i64, ptr %5, align 8, !tbaa !9
  br label %38

38:                                               ; preds = %35, %29
  %39 = phi i64 [ %37, %35 ], [ %32, %29 ]
  %40 = phi ptr [ %36, %35 ], [ %34, %29 ]
  %41 = icmp ugt i64 %39, 512
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  store i64 512, ptr %5, align 8, !tbaa !9
  br label %43

43:                                               ; preds = %42, %38
  %44 = phi i64 [ 512, %42 ], [ %39, %38 ]
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 16 %6, ptr align 1 %40, i64 %44, i1 false)
  %45 = zext i1 %0 to i32
  %46 = add nsw i64 %44, -1
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.451, i32 noundef %45, i64 noundef %46, ptr noundef nonnull %6) #15
  call void @llvm.lifetime.end.p0(i64 512, ptr nonnull %6) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #15
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_reganode(ptr noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #0 {
  %4 = zext i8 %1 to i64
  %5 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %4
  %6 = load i8, ptr %5, align 1, !tbaa !17
  %7 = zext i8 %6 to i64
  %8 = tail call fastcc ptr @S_regnode_guts(ptr noundef %0, i8 noundef zeroext %1, i64 noundef %7, ptr noundef nonnull @.str.452)
  %9 = icmp eq ptr %0, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 16377) #15
  br label %11

11:                                               ; preds = %3, %10
  %12 = icmp eq i8 %6, 1
  br i1 %12, label %14, label %13

13:                                               ; preds = %11
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.453, i32 noundef 16379) #15
  br label %14

14:                                               ; preds = %11, %13
  %15 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %16 = load ptr, ptr %15, align 8, !tbaa !112
  %17 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %18 = icmp eq ptr %16, %17
  br i1 %18, label %24, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.regnode_1, ptr %8, i64 0, i32 3
  store i32 %2, ptr %20, align 4, !tbaa !148
  %21 = getelementptr inbounds %struct.regnode, ptr %8, i64 0, i32 1
  store i8 %1, ptr %21, align 1, !tbaa !141
  %22 = getelementptr inbounds %struct.regnode, ptr %8, i64 0, i32 2
  store i16 0, ptr %22, align 2, !tbaa !222
  %23 = getelementptr inbounds %struct.regnode, ptr %8, i64 2
  store ptr %23, ptr %15, align 8, !tbaa !112
  br label %24

24:                                               ; preds = %19, %14
  ret ptr %8
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_reg_node(ptr noundef %0, i8 noundef zeroext %1) unnamed_addr #0 {
  %3 = zext i8 %1 to i64
  %4 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %3
  %5 = load i8, ptr %4, align 1, !tbaa !17
  %6 = zext i8 %5 to i64
  %7 = tail call fastcc ptr @S_regnode_guts(ptr noundef %0, i8 noundef zeroext %1, i64 noundef %6, ptr noundef nonnull @.str.460)
  %8 = icmp eq ptr %0, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 16357) #15
  br label %10

10:                                               ; preds = %2, %9
  %11 = icmp eq i8 %5, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %10
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.461, i32 noundef 16359) #15
  br label %13

13:                                               ; preds = %10, %12
  %14 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %15 = load ptr, ptr %14, align 8, !tbaa !112
  %16 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %17 = icmp eq ptr %15, %16
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.regnode, ptr %7, i64 0, i32 1
  store i8 %1, ptr %19, align 1, !tbaa !141
  %20 = getelementptr inbounds %struct.regnode, ptr %7, i64 0, i32 2
  store i16 0, ptr %20, align 2, !tbaa !222
  %21 = getelementptr inbounds %struct.regnode, ptr %7, i64 1
  store ptr %21, ptr %14, align 8, !tbaa !112
  br label %22

22:                                               ; preds = %18, %13
  ret ptr %7
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_nextchar(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %3 = load ptr, ptr %2, align 8, !tbaa !105
  %4 = getelementptr inbounds i8, ptr %3, i64 1
  store ptr %4, ptr %2, align 8, !tbaa !105
  %5 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %6 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %8 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %9 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %10 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  br label %11

11:                                               ; preds = %59, %1
  %12 = phi ptr [ %60, %59 ], [ %4, %1 ]
  %13 = load ptr, ptr %5, align 8, !tbaa !107
  %14 = ptrtoint ptr %13 to i64
  %15 = ptrtoint ptr %12 to i64
  %16 = sub i64 %14, %15
  %17 = icmp sgt i64 %16, 2
  br i1 %17, label %18, label %61

18:                                               ; preds = %11
  %19 = load i8, ptr %12, align 1, !tbaa !17
  %20 = icmp eq i8 %19, 40
  br i1 %20, label %21, label %61

21:                                               ; preds = %18
  %22 = getelementptr inbounds i8, ptr %12, i64 1
  %23 = load i8, ptr %22, align 1, !tbaa !17
  %24 = icmp eq i8 %23, 63
  br i1 %24, label %25, label %61

25:                                               ; preds = %21
  %26 = getelementptr inbounds i8, ptr %12, i64 2
  %27 = load i8, ptr %26, align 1, !tbaa !17
  %28 = icmp eq i8 %27, 35
  br i1 %28, label %29, label %61

29:                                               ; preds = %25, %52
  %30 = phi ptr [ %54, %52 ], [ %12, %25 ]
  %31 = load ptr, ptr %5, align 8, !tbaa !107
  %32 = icmp eq ptr %30, %31
  br i1 %32, label %33, label %52

33:                                               ; preds = %29
  %34 = load ptr, ptr %6, align 8, !tbaa !65
  %35 = ptrtoint ptr %30 to i64
  %36 = ptrtoint ptr %34 to i64
  %37 = sub i64 %35, %36
  %38 = load ptr, ptr %7, align 8, !tbaa !112
  %39 = icmp eq ptr %38, %8
  br i1 %39, label %43, label %40

40:                                               ; preds = %33
  %41 = load ptr, ptr %9, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %41, i32 noundef 11) #15
  %42 = load ptr, ptr %6, align 8, !tbaa !65
  br label %43

43:                                               ; preds = %40, %33
  %44 = phi ptr [ %42, %40 ], [ %34, %33 ]
  %45 = icmp sgt i64 %37, 127
  %46 = select i1 %45, i64 117, i64 %37
  %47 = select i1 %45, ptr @.str.20, ptr @.str.8
  %48 = load i32, ptr %10, align 8, !tbaa !50
  %49 = icmp ne i32 %48, 0
  %50 = zext i1 %49 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.462, i32 noundef %50, i64 noundef %46, ptr noundef %44, ptr noundef nonnull %47) #15
  %51 = load ptr, ptr %2, align 8, !tbaa !105
  br label %52

52:                                               ; preds = %43, %29
  %53 = phi ptr [ %51, %43 ], [ %30, %29 ]
  %54 = getelementptr inbounds i8, ptr %53, i64 1
  store ptr %54, ptr %2, align 8, !tbaa !105
  %55 = load i8, ptr %54, align 1, !tbaa !17
  %56 = icmp eq i8 %55, 41
  br i1 %56, label %57, label %29, !llvm.loop !386

57:                                               ; preds = %52
  %58 = getelementptr inbounds i8, ptr %53, i64 2
  br label %59

59:                                               ; preds = %65, %57
  %60 = phi ptr [ %58, %57 ], [ %66, %65 ]
  store ptr %60, ptr %2, align 8, !tbaa !105
  br label %11

61:                                               ; preds = %25, %21, %18, %11
  %62 = load i32, ptr %0, align 8, !tbaa !66
  %63 = and i32 %62, 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %61
  %66 = tail call fastcc ptr @S_regpatws(ptr noundef nonnull %0, ptr noundef %12, i1 noundef zeroext true)
  %67 = load ptr, ptr %2, align 8, !tbaa !105
  %68 = icmp eq ptr %66, %67
  br i1 %68, label %69, label %59

69:                                               ; preds = %65, %61
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_reg_scan_name(ptr noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %4 = load ptr, ptr %3, align 8, !tbaa !105
  %5 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %6 = load ptr, ptr %5, align 8, !tbaa !107
  %7 = icmp ugt ptr %4, %6
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.465, i32 noundef 7868) #15
  %9 = load ptr, ptr %3, align 8, !tbaa !105
  %10 = load ptr, ptr %5, align 8, !tbaa !107
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi ptr [ %6, %2 ], [ %10, %8 ]
  %13 = phi ptr [ %4, %2 ], [ %9, %8 ]
  %14 = icmp eq ptr %13, %12
  br i1 %14, label %148, label %15

15:                                               ; preds = %11
  %16 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %17 = getelementptr inbounds %struct.cop, ptr %16, i64 0, i32 10
  %18 = load i32, ptr %17, align 8, !tbaa !42
  %19 = and i32 %18, 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %23 = load i32, ptr %22, align 8, !tbaa !50
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %21, %15
  %26 = load i8, ptr %13, align 1, !tbaa !17
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %27
  %29 = load i32, ptr %28, align 4, !tbaa !73
  %30 = and i32 %29, 81920
  %31 = icmp eq i32 %30, 81920
  br i1 %31, label %63, label %120

32:                                               ; preds = %21
  %33 = load i8, ptr %13, align 1, !tbaa !17
  %34 = icmp sgt i8 %33, -1
  br i1 %34, label %35, label %41

35:                                               ; preds = %32
  %36 = zext i8 %33 to i64
  %37 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %36
  %38 = load i32, ptr %37, align 4, !tbaa !73
  %39 = and i32 %38, 65536
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %120, label %63

41:                                               ; preds = %32
  %42 = zext i8 %33 to i32
  %43 = and i32 %42, 254
  %44 = icmp eq i32 %43, 194
  br i1 %44, label %45, label %59

45:                                               ; preds = %41
  %46 = and i32 %42, 28
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %120

48:                                               ; preds = %45
  %49 = shl i8 %33, 6
  %50 = getelementptr inbounds i8, ptr %13, i64 1
  %51 = load i8, ptr %50, align 1, !tbaa !17
  %52 = and i8 %51, 63
  %53 = or i8 %52, %49
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !73
  %57 = and i32 %56, 65536
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %120, label %63

59:                                               ; preds = %41
  %60 = tail call zeroext i1 @Perl__is_utf8_perl_idstart(ptr noundef nonnull %13) #15
  br i1 %60, label %63, label %61

61:                                               ; preds = %59
  %62 = load ptr, ptr %3, align 8, !tbaa !105
  br label %120

63:                                               ; preds = %48, %35, %59, %25
  %64 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %65 = load i32, ptr %64, align 8, !tbaa !50
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  %68 = load ptr, ptr %3, align 8, !tbaa !105
  br label %111

69:                                               ; preds = %63, %108
  %70 = load ptr, ptr %3, align 8, !tbaa !105
  %71 = load i8, ptr %70, align 1, !tbaa !17
  %72 = zext i8 %71 to i64
  %73 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %72
  %74 = load i8, ptr %73, align 1, !tbaa !17
  %75 = zext i8 %74 to i64
  %76 = getelementptr inbounds i8, ptr %70, i64 %75
  store ptr %76, ptr %3, align 8, !tbaa !105
  %77 = load i8, ptr %76, align 1, !tbaa !17
  %78 = icmp sgt i8 %77, -1
  br i1 %78, label %79, label %84

79:                                               ; preds = %69
  %80 = zext i8 %77 to i64
  %81 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %80
  %82 = load i32, ptr %81, align 4, !tbaa !73
  %83 = and i32 %82, 1
  br label %108

84:                                               ; preds = %69
  %85 = zext i8 %77 to i32
  %86 = and i32 %85, 254
  %87 = icmp eq i32 %86, 194
  br i1 %87, label %88, label %105

88:                                               ; preds = %84
  %89 = and i32 %85, 28
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %102

91:                                               ; preds = %88
  %92 = shl i8 %77, 6
  %93 = getelementptr inbounds i8, ptr %76, i64 1
  %94 = load i8, ptr %93, align 1, !tbaa !17
  %95 = and i8 %94, 63
  %96 = or i8 %95, %92
  %97 = zext i8 %96 to i64
  %98 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %97
  %99 = load i32, ptr %98, align 4, !tbaa !73
  %100 = and i32 %99, 1
  %101 = icmp ne i32 %100, 0
  br label %102

102:                                              ; preds = %91, %88
  %103 = phi i1 [ false, %88 ], [ %101, %91 ]
  %104 = zext i1 %103 to i32
  br label %108

105:                                              ; preds = %84
  %106 = tail call zeroext i1 @Perl__is_utf8_FOO(i8 noundef zeroext 0, ptr noundef nonnull %76) #15
  %107 = zext i1 %106 to i32
  br label %108

108:                                              ; preds = %102, %105, %79
  %109 = phi i32 [ %83, %79 ], [ %104, %102 ], [ %107, %105 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %148, label %69, !llvm.loop !387

111:                                              ; preds = %67, %111
  %112 = phi ptr [ %68, %67 ], [ %113, %111 ]
  %113 = getelementptr inbounds i8, ptr %112, i64 1
  store ptr %113, ptr %3, align 8, !tbaa !105
  %114 = load i8, ptr %113, align 1, !tbaa !17
  %115 = zext i8 %114 to i64
  %116 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %115
  %117 = load i32, ptr %116, align 4, !tbaa !73
  %118 = and i32 %117, 16385
  %119 = icmp eq i32 %118, 16385
  br i1 %119, label %111, label %148, !llvm.loop !388

120:                                              ; preds = %61, %45, %48, %35, %25
  %121 = phi ptr [ %62, %61 ], [ %13, %45 ], [ %13, %48 ], [ %13, %35 ], [ %13, %25 ]
  %122 = getelementptr inbounds i8, ptr %121, i64 1
  store ptr %122, ptr %3, align 8, !tbaa !105
  %123 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %124 = load ptr, ptr %123, align 8, !tbaa !112
  %125 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %126 = icmp eq ptr %124, %125
  br i1 %126, label %131, label %127

127:                                              ; preds = %120
  %128 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %129 = load ptr, ptr %128, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %129, i32 noundef 11) #15
  %130 = load ptr, ptr %3, align 8, !tbaa !105
  br label %131

131:                                              ; preds = %120, %127
  %132 = phi ptr [ %122, %120 ], [ %130, %127 ]
  %133 = load ptr, ptr %5, align 8, !tbaa !107
  %134 = icmp ugt ptr %132, %133
  %135 = select i1 %134, ptr %133, ptr %132
  %136 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %137 = load ptr, ptr %136, align 8, !tbaa !65
  %138 = ptrtoint ptr %135 to i64
  %139 = ptrtoint ptr %137 to i64
  %140 = sub i64 %138, %139
  %141 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %142 = load i32, ptr %141, align 8, !tbaa !50
  %143 = icmp ne i32 %142, 0
  %144 = zext i1 %143 to i32
  %145 = ptrtoint ptr %133 to i64
  %146 = sub i64 %145, %138
  %147 = getelementptr inbounds i8, ptr %137, i64 %140
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.466, i32 noundef %144, i64 noundef %140, ptr noundef %137, i32 noundef %144, i64 noundef %146, ptr noundef %147) #15
  br label %148

148:                                              ; preds = %108, %111, %131, %11
  %149 = icmp eq i32 %1, 0
  br i1 %149, label %201, label %150

150:                                              ; preds = %148
  %151 = load ptr, ptr %3, align 8, !tbaa !105
  %152 = ptrtoint ptr %151 to i64
  %153 = ptrtoint ptr %4 to i64
  %154 = sub i64 %152, %153
  %155 = shl i64 %154, 32
  %156 = ashr exact i64 %155, 32
  %157 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %158 = load i32, ptr %157, align 8, !tbaa !50
  %159 = icmp eq i32 %158, 0
  %160 = select i1 %159, i32 524288, i32 537395200
  %161 = tail call ptr @Perl_newSVpvn_flags(ptr noundef %4, i64 noundef %156, i32 noundef %160) #15
  %162 = icmp eq i32 %1, 1
  br i1 %162, label %201, label %163

163:                                              ; preds = %150
  %164 = icmp eq ptr %161, null
  br i1 %164, label %165, label %166

165:                                              ; preds = %163
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.467) #15
  br label %166

166:                                              ; preds = %165, %163
  %167 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 28
  %168 = load ptr, ptr %167, align 8, !tbaa !204
  %169 = icmp eq ptr %168, null
  br i1 %169, label %177, label %170

170:                                              ; preds = %166
  %171 = tail call ptr @Perl_hv_common(ptr noundef nonnull %168, ptr noundef %161, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 0, ptr noundef null, i32 noundef 0) #15
  %172 = icmp eq ptr %171, null
  br i1 %172, label %177, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %struct.he, ptr %171, i64 0, i32 2
  %175 = load ptr, ptr %174, align 8, !tbaa !17
  %176 = icmp eq ptr %175, null
  br i1 %176, label %177, label %201

177:                                              ; preds = %166, %170, %173
  %178 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %179 = load ptr, ptr %178, align 8, !tbaa !112
  %180 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %181 = icmp eq ptr %179, %180
  br i1 %181, label %185, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %184 = load ptr, ptr %183, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %184, i32 noundef 11) #15
  br label %185

185:                                              ; preds = %177, %182
  %186 = load ptr, ptr %3, align 8, !tbaa !105
  %187 = load ptr, ptr %5, align 8, !tbaa !107
  %188 = icmp ugt ptr %186, %187
  %189 = select i1 %188, ptr %187, ptr %186
  %190 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %191 = load ptr, ptr %190, align 8, !tbaa !65
  %192 = ptrtoint ptr %189 to i64
  %193 = ptrtoint ptr %191 to i64
  %194 = sub i64 %192, %193
  %195 = load i32, ptr %157, align 8, !tbaa !50
  %196 = icmp ne i32 %195, 0
  %197 = zext i1 %196 to i32
  %198 = ptrtoint ptr %187 to i64
  %199 = sub i64 %198, %192
  %200 = getelementptr inbounds i8, ptr %191, i64 %194
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.468, i32 noundef %197, i64 noundef %194, ptr noundef %191, i32 noundef %197, i64 noundef %199, ptr noundef %200) #15
  br label %201

201:                                              ; preds = %148, %150, %185, %173
  %202 = phi ptr [ %161, %150 ], [ null, %185 ], [ %175, %173 ], [ null, %148 ]
  ret ptr %202
}

declare void @Perl_sv_upgrade(ptr noundef, i32 noundef) local_unnamed_addr #2

declare zeroext i1 @Perl_grok_atoUV(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_reg2Lanode(ptr noundef %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = zext i8 %1 to i64
  %6 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %5
  %7 = load i8, ptr %6, align 1, !tbaa !17
  %8 = zext i8 %7 to i64
  %9 = tail call fastcc ptr @S_regnode_guts(ptr noundef %0, i8 noundef zeroext %1, i64 noundef %8, ptr noundef nonnull @.str.470)
  %10 = icmp eq ptr %0, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 16396) #15
  br label %12

12:                                               ; preds = %4, %11
  %13 = and i8 %1, -9
  %14 = icmp eq i8 %13, 68
  br i1 %14, label %16, label %15

15:                                               ; preds = %12
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.471, i32 noundef 16398) #15
  br label %16

16:                                               ; preds = %12, %15
  %17 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %18 = load ptr, ptr %17, align 8, !tbaa !112
  %19 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %20 = icmp eq ptr %18, %19
  br i1 %20, label %27, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.regnode_1, ptr %9, i64 0, i32 3
  store i32 %2, ptr %22, align 4, !tbaa !148
  %23 = getelementptr inbounds %struct.regnode_2L, ptr %9, i64 0, i32 4
  store i32 %3, ptr %23, align 4, !tbaa !208
  %24 = getelementptr inbounds %struct.regnode, ptr %9, i64 0, i32 1
  store i8 %1, ptr %24, align 1, !tbaa !141
  %25 = getelementptr inbounds %struct.regnode, ptr %9, i64 0, i32 2
  store i16 0, ptr %25, align 2, !tbaa !222
  %26 = getelementptr inbounds %struct.regnode, ptr %9, i64 3
  store ptr %26, ptr %17, align 8, !tbaa !112
  br label %27

27:                                               ; preds = %21, %16
  ret ptr %9
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_regtail(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  store volatile i64 0, ptr %5, align 8, !tbaa !9
  %6 = load volatile i64, ptr %5, align 8, !tbaa !9
  %7 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %8 = icmp eq ptr %7, null
  br i1 %8, label %28, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !13
  %12 = and i32 %11, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  tail call void @Perl_sv_setuv(ptr noundef nonnull %7, i64 noundef 65288) #15
  %15 = load i32, ptr %10, align 4, !tbaa !13
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i32 [ %15, %14 ], [ %11, %9 ]
  %18 = and i32 %17, 2097408
  %19 = icmp eq i32 %18, 256
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = load ptr, ptr %7, align 8, !tbaa !16
  %22 = getelementptr inbounds %struct.xpviv, ptr %21, i64 0, i32 4
  %23 = load i64, ptr %22, align 8, !tbaa !17
  br label %26

24:                                               ; preds = %16
  %25 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %7, i32 noundef 2) #15
  br label %26

26:                                               ; preds = %24, %20
  %27 = phi i64 [ %23, %20 ], [ %25, %24 ]
  store volatile i64 %27, ptr %5, align 8, !tbaa !9
  br label %28

28:                                               ; preds = %26, %4
  %29 = icmp eq ptr %0, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %28
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 16510) #15
  br label %31

31:                                               ; preds = %28, %30
  %32 = icmp eq ptr %1, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %31
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.463, i32 noundef 16510) #15
  br label %34

34:                                               ; preds = %31, %33
  %35 = icmp eq ptr %2, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %34
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.472, i32 noundef 16510) #15
  br label %37

37:                                               ; preds = %34, %36
  %38 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %39 = load ptr, ptr %38, align 8, !tbaa !112
  %40 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %41 = icmp eq ptr %39, %40
  br i1 %41, label %165, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 47
  %44 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %45 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 51
  %46 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %47 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %48 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %49 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 48
  %50 = shl i32 %3, 1
  %51 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 4
  %52 = getelementptr inbounds %struct.regnode, ptr %2, i64 0, i32 1
  br label %53

53:                                               ; preds = %42, %146
  %54 = phi ptr [ %55, %146 ], [ %1, %42 ]
  %55 = tail call ptr @Perl_regnext(ptr noundef %54) #15
  %56 = load volatile i64, ptr %5, align 8, !tbaa !9
  %57 = and i64 %56, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %146, label %59

59:                                               ; preds = %53
  %60 = load volatile i64, ptr %5, align 8, !tbaa !9
  %61 = and i64 %60, 1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %110, label %63

63:                                               ; preds = %59
  %64 = load ptr, ptr %43, align 8, !tbaa !119
  %65 = load ptr, ptr %44, align 8, !tbaa !105
  %66 = icmp eq ptr %64, %65
  %67 = tail call ptr @Perl_PerlIO_stderr() #15
  br i1 %66, label %77, label %68

68:                                               ; preds = %63
  %69 = load ptr, ptr %45, align 8, !tbaa !56
  %70 = load ptr, ptr %44, align 8, !tbaa !105
  %71 = load ptr, ptr %46, align 8, !tbaa !107
  %72 = ptrtoint ptr %71 to i64
  %73 = ptrtoint ptr %70 to i64
  %74 = sub i64 %72, %73
  %75 = tail call ptr @Perl_pv_pretty(ptr noundef %69, ptr noundef %70, i64 noundef %74, i64 noundef 16, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.8, i32 noundef 33294) #15
  %76 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %67, ptr noundef nonnull @.str.34, ptr noundef %75) #15
  br label %79

77:                                               ; preds = %63
  %78 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %67, ptr noundef nonnull @.str.385, ptr noundef nonnull @.str.8) #15
  br label %79

79:                                               ; preds = %77, %68
  %80 = load ptr, ptr %38, align 8, !tbaa !112
  %81 = icmp eq ptr %80, %40
  br i1 %81, label %82, label %86

82:                                               ; preds = %79
  %83 = load i64, ptr %48, align 8, !tbaa !111
  %84 = trunc i64 %83 to i32
  %85 = add i32 %84, 1
  br label %95

86:                                               ; preds = %79
  %87 = icmp eq ptr %80, null
  br i1 %87, label %95, label %88

88:                                               ; preds = %86
  %89 = load ptr, ptr %47, align 8, !tbaa !131
  %90 = ptrtoint ptr %80 to i64
  %91 = ptrtoint ptr %89 to i64
  %92 = sub i64 %90, %91
  %93 = lshr exact i64 %92, 2
  %94 = trunc i64 %93 to i32
  br label %95

95:                                               ; preds = %88, %86, %82
  %96 = phi i32 [ %85, %82 ], [ %94, %88 ], [ -1, %86 ]
  %97 = load i32, ptr %49, align 8, !tbaa !118
  %98 = icmp eq i32 %97, %96
  %99 = tail call ptr @Perl_PerlIO_stderr() #15
  br i1 %98, label %102, label %100

100:                                              ; preds = %95
  %101 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %99, ptr noundef nonnull @.str.386, i32 noundef %96) #15
  br label %104

102:                                              ; preds = %95
  %103 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %99, ptr noundef nonnull @.str.387, ptr noundef nonnull @.str.8) #15
  br label %104

104:                                              ; preds = %102, %100
  %105 = tail call ptr @Perl_PerlIO_stderr() #15
  %106 = icmp eq ptr %54, %1
  %107 = select i1 %106, ptr @.str.310, ptr @.str.8
  %108 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %105, ptr noundef nonnull @.str.388, i32 noundef %50, ptr noundef nonnull @.str.8, ptr noundef nonnull %107) #15
  store i32 %96, ptr %49, align 8, !tbaa !118
  %109 = load ptr, ptr %44, align 8, !tbaa !105
  store ptr %109, ptr %43, align 8, !tbaa !119
  br label %110

110:                                              ; preds = %104, %59
  %111 = load ptr, ptr %51, align 8, !tbaa !129
  %112 = load ptr, ptr %45, align 8, !tbaa !56
  tail call void @my_regprop(ptr noundef %111, ptr noundef %112, ptr noundef %54, ptr noundef null, ptr noundef %0)
  %113 = tail call ptr @Perl_PerlIO_stderr() #15
  %114 = load ptr, ptr %45, align 8, !tbaa !56
  %115 = getelementptr inbounds %struct.sv, ptr %114, i64 0, i32 2
  %116 = load i32, ptr %115, align 4, !tbaa !13
  %117 = and i32 %116, 2098176
  %118 = icmp eq i32 %117, 1024
  br i1 %118, label %119, label %122

119:                                              ; preds = %110
  %120 = getelementptr inbounds %struct.sv, ptr %114, i64 0, i32 3
  %121 = load ptr, ptr %120, align 8, !tbaa !17
  br label %124

122:                                              ; preds = %110
  %123 = tail call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %114, ptr noundef null, i32 noundef 34) #15
  br label %124

124:                                              ; preds = %122, %119
  %125 = phi ptr [ %121, %119 ], [ %123, %122 ]
  %126 = icmp eq ptr %54, null
  br i1 %126, label %134, label %127

127:                                              ; preds = %124
  %128 = load ptr, ptr %47, align 8, !tbaa !131
  %129 = ptrtoint ptr %54 to i64
  %130 = ptrtoint ptr %128 to i64
  %131 = sub i64 %129, %130
  %132 = lshr exact i64 %131, 2
  %133 = trunc i64 %132 to i32
  br label %134

134:                                              ; preds = %124, %127
  %135 = phi i32 [ %133, %127 ], [ -1, %124 ]
  %136 = icmp eq ptr %55, null
  %137 = select i1 %136, ptr @.str.474, ptr @.str.8
  br i1 %136, label %138, label %143

138:                                              ; preds = %134
  %139 = load i8, ptr %52, align 1, !tbaa !141
  %140 = zext i8 %139 to i64
  %141 = getelementptr inbounds [0 x ptr], ptr @PL_reg_name, i64 0, i64 %140
  %142 = load ptr, ptr %141, align 8, !tbaa !5
  br label %143

143:                                              ; preds = %134, %138
  %144 = phi ptr [ %142, %138 ], [ @.str.8, %134 ]
  %145 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %113, ptr noundef nonnull @.str.473, ptr noundef %125, i32 noundef %135, ptr noundef nonnull %137, ptr noundef %144) #15
  br label %146

146:                                              ; preds = %143, %53
  %147 = icmp eq ptr %55, null
  br i1 %147, label %148, label %53

148:                                              ; preds = %146
  %149 = getelementptr inbounds %struct.regnode, ptr %54, i64 0, i32 1
  %150 = load i8, ptr %149, align 1, !tbaa !141
  %151 = zext i8 %150 to i64
  %152 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %151
  %153 = load i8, ptr %152, align 1, !tbaa !17
  %154 = icmp eq i8 %153, 0
  %155 = ptrtoint ptr %2 to i64
  %156 = ptrtoint ptr %54 to i64
  %157 = sub i64 %155, %156
  %158 = lshr exact i64 %157, 2
  br i1 %154, label %162, label %159

159:                                              ; preds = %148
  %160 = trunc i64 %158 to i32
  %161 = getelementptr inbounds %struct.regnode_1, ptr %54, i64 0, i32 3
  store i32 %160, ptr %161, align 4, !tbaa !148
  br label %165

162:                                              ; preds = %148
  %163 = trunc i64 %158 to i16
  %164 = getelementptr inbounds %struct.regnode, ptr %54, i64 0, i32 2
  store i16 %163, ptr %164, align 2, !tbaa !222
  br label %165

165:                                              ; preds = %159, %162, %37
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_regbranch(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9)
  store volatile i64 0, ptr %9, align 8, !tbaa !9
  %10 = load volatile i64, ptr %9, align 8, !tbaa !9
  %11 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %12 = icmp eq ptr %11, null
  br i1 %12, label %32, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.sv, ptr %11, i64 0, i32 2
  %15 = load i32, ptr %14, align 4, !tbaa !13
  %16 = and i32 %15, 256
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  tail call void @Perl_sv_setuv(ptr noundef nonnull %11, i64 noundef 65288) #15
  %19 = load i32, ptr %14, align 4, !tbaa !13
  br label %20

20:                                               ; preds = %18, %13
  %21 = phi i32 [ %19, %18 ], [ %15, %13 ]
  %22 = and i32 %21, 2097408
  %23 = icmp eq i32 %22, 256
  br i1 %23, label %24, label %28

24:                                               ; preds = %20
  %25 = load ptr, ptr %11, align 8, !tbaa !16
  %26 = getelementptr inbounds %struct.xpviv, ptr %25, i64 0, i32 4
  %27 = load i64, ptr %26, align 8, !tbaa !17
  br label %30

28:                                               ; preds = %20
  %29 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %11, i32 noundef 2) #15
  br label %30

30:                                               ; preds = %28, %24
  %31 = phi i64 [ %27, %24 ], [ %29, %28 ]
  store volatile i64 %31, ptr %9, align 8, !tbaa !9
  br label %32

32:                                               ; preds = %30, %4
  %33 = icmp eq ptr %0, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 10712) #15
  br label %35

35:                                               ; preds = %32, %34
  %36 = icmp eq ptr %1, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.384, i32 noundef 10712) #15
  br label %38

38:                                               ; preds = %37, %35
  %39 = load volatile i64, ptr %9, align 8, !tbaa !9
  %40 = and i64 %39, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %104, label %42

42:                                               ; preds = %38
  %43 = load volatile i64, ptr %9, align 8, !tbaa !9
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %101, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 47
  %48 = load ptr, ptr %47, align 8, !tbaa !119
  %49 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %50 = load ptr, ptr %49, align 8, !tbaa !105
  %51 = icmp eq ptr %48, %50
  %52 = tail call ptr @Perl_PerlIO_stderr() #15
  br i1 %51, label %64, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 51
  %55 = load ptr, ptr %54, align 8, !tbaa !56
  %56 = load ptr, ptr %49, align 8, !tbaa !105
  %57 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %58 = load ptr, ptr %57, align 8, !tbaa !107
  %59 = ptrtoint ptr %58 to i64
  %60 = ptrtoint ptr %56 to i64
  %61 = sub i64 %59, %60
  %62 = tail call ptr @Perl_pv_pretty(ptr noundef %55, ptr noundef %56, i64 noundef %61, i64 noundef 16, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.8, i32 noundef 33294) #15
  %63 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %52, ptr noundef nonnull @.str.34, ptr noundef %62) #15
  br label %66

64:                                               ; preds = %46
  %65 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %52, ptr noundef nonnull @.str.385, ptr noundef nonnull @.str.8) #15
  br label %66

66:                                               ; preds = %64, %53
  %67 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %68 = load ptr, ptr %67, align 8, !tbaa !112
  %69 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %70 = icmp eq ptr %68, %69
  br i1 %70, label %71, label %76

71:                                               ; preds = %66
  %72 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %73 = load i64, ptr %72, align 8, !tbaa !111
  %74 = trunc i64 %73 to i32
  %75 = add i32 %74, 1
  br label %86

76:                                               ; preds = %66
  %77 = icmp eq ptr %68, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %80 = load ptr, ptr %79, align 8, !tbaa !131
  %81 = ptrtoint ptr %68 to i64
  %82 = ptrtoint ptr %80 to i64
  %83 = sub i64 %81, %82
  %84 = lshr exact i64 %83, 2
  %85 = trunc i64 %84 to i32
  br label %86

86:                                               ; preds = %78, %76, %71
  %87 = phi i32 [ %75, %71 ], [ %85, %78 ], [ -1, %76 ]
  %88 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 48
  %89 = load i32, ptr %88, align 8, !tbaa !118
  %90 = icmp eq i32 %89, %87
  %91 = tail call ptr @Perl_PerlIO_stderr() #15
  br i1 %90, label %94, label %92

92:                                               ; preds = %86
  %93 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %91, ptr noundef nonnull @.str.386, i32 noundef %87) #15
  br label %96

94:                                               ; preds = %86
  %95 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %91, ptr noundef nonnull @.str.387, ptr noundef nonnull @.str.8) #15
  br label %96

96:                                               ; preds = %94, %92
  %97 = tail call ptr @Perl_PerlIO_stderr() #15
  %98 = shl i32 %3, 1
  %99 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %97, ptr noundef nonnull @.str.388, i32 noundef %98, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.475) #15
  store i32 %87, ptr %88, align 8, !tbaa !118
  %100 = load ptr, ptr %49, align 8, !tbaa !105
  store ptr %100, ptr %47, align 8, !tbaa !119
  br label %101

101:                                              ; preds = %96, %42
  %102 = tail call ptr @Perl_PerlIO_stderr() #15
  %103 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %102, ptr noundef nonnull @.str.390, ptr noundef nonnull @.str.53) #15
  br label %104

104:                                              ; preds = %101, %38
  %105 = icmp eq i32 %2, 0
  br i1 %105, label %106, label %172

106:                                              ; preds = %104
  %107 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %108 = load ptr, ptr %107, align 8, !tbaa !112
  %109 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %110 = icmp eq ptr %108, %109
  br i1 %110, label %124, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 20
  %113 = load i32, ptr %112, align 8, !tbaa !102
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %124, label %115

115:                                              ; preds = %111
  %116 = tail call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 62, i64 noundef 1, ptr noundef nonnull @.str.452)
  %117 = load ptr, ptr %107, align 8, !tbaa !112
  %118 = icmp eq ptr %117, %109
  br i1 %118, label %164, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %struct.regnode_1, ptr %116, i64 0, i32 3
  store i32 0, ptr %120, align 4, !tbaa !148
  %121 = getelementptr inbounds %struct.regnode, ptr %116, i64 0, i32 1
  store i8 62, ptr %121, align 1, !tbaa !141
  %122 = getelementptr inbounds %struct.regnode, ptr %116, i64 0, i32 2
  store i16 0, ptr %122, align 2, !tbaa !222
  %123 = getelementptr inbounds %struct.regnode, ptr %116, i64 2
  store ptr %123, ptr %107, align 8, !tbaa !112
  br label %164

124:                                              ; preds = %106, %111
  %125 = tail call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 30, i64 noundef 0, ptr noundef nonnull @.str.460)
  %126 = load ptr, ptr %107, align 8, !tbaa !112
  %127 = icmp eq ptr %126, %109
  br i1 %127, label %164, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.regnode, ptr %125, i64 0, i32 1
  store i8 30, ptr %129, align 1, !tbaa !141
  %130 = getelementptr inbounds %struct.regnode, ptr %125, i64 0, i32 2
  store i16 0, ptr %130, align 2, !tbaa !222
  %131 = getelementptr inbounds %struct.regnode, ptr %125, i64 1
  store ptr %131, ptr %107, align 8, !tbaa !112
  %132 = icmp eq ptr %131, %109
  br i1 %132, label %164, label %133

133:                                              ; preds = %128
  %134 = load volatile i64, ptr %9, align 8, !tbaa !9
  %135 = and i64 %134, 262144
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %133
  %138 = ptrtoint ptr %125 to i64
  br label %147

139:                                              ; preds = %133
  %140 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %141 = load ptr, ptr %140, align 8, !tbaa !131
  %142 = ptrtoint ptr %125 to i64
  %143 = ptrtoint ptr %141 to i64
  %144 = sub i64 %142, %143
  %145 = lshr exact i64 %144, 2
  %146 = trunc i64 %145 to i32
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 10723, i32 noundef %146, i32 noundef 1) #15
  br label %147

147:                                              ; preds = %137, %139
  %148 = phi i64 [ %138, %137 ], [ %142, %139 ]
  %149 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %150 = load ptr, ptr %149, align 8, !tbaa !131
  %151 = ptrtoint ptr %150 to i64
  %152 = sub i64 %148, %151
  %153 = icmp slt i64 %152, 0
  br i1 %153, label %154, label %157

154:                                              ; preds = %147
  %155 = lshr exact i64 %152, 2
  %156 = trunc i64 %155 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %156) #15
  br label %164

157:                                              ; preds = %147
  %158 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %159 = load ptr, ptr %158, align 8, !tbaa !130
  %160 = getelementptr inbounds %struct.regexp_internal, ptr %159, i64 0, i32 1
  %161 = load ptr, ptr %160, align 8, !tbaa !17
  %162 = lshr exact i64 %152, 1
  %163 = getelementptr inbounds i32, ptr %161, i64 %162
  store i32 1, ptr %163, align 4, !tbaa !73
  br label %164

164:                                              ; preds = %124, %119, %115, %154, %157, %128
  %165 = phi ptr [ %116, %119 ], [ %116, %115 ], [ %125, %157 ], [ %125, %154 ], [ %125, %128 ], [ %125, %124 ]
  %166 = load ptr, ptr %107, align 8, !tbaa !112
  %167 = icmp eq ptr %166, %109
  br i1 %167, label %168, label %172

168:                                              ; preds = %164
  %169 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 20
  %170 = load i32, ptr %169, align 8, !tbaa !102
  %171 = add nsw i32 %170, 1
  store i32 %171, ptr %169, align 8, !tbaa !102
  br label %172

172:                                              ; preds = %104, %168, %164
  %173 = phi ptr [ %165, %168 ], [ %165, %164 ], [ null, %104 ]
  store i32 0, ptr %1, align 4, !tbaa !73
  %174 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %175 = load ptr, ptr %174, align 8, !tbaa !105
  %176 = getelementptr inbounds i8, ptr %175, i64 -1
  store ptr %176, ptr %174, align 8, !tbaa !105
  %177 = tail call fastcc ptr @S_nextchar(ptr noundef %0)
  %178 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %179 = add i32 %3, 1
  %180 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %181 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 47
  %182 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 51
  %183 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %184 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %185 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %186 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 48
  %187 = shl i32 %179, 1
  %188 = add i32 %3, 2
  %189 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 14
  %190 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %191 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %192 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %193 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %194 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %195 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %196 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 20
  %197 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 9
  br label %198

198:                                              ; preds = %1025, %172
  %199 = phi i32 [ %1010, %1025 ], [ 0, %172 ]
  %200 = phi ptr [ %1011, %1025 ], [ %173, %172 ]
  %201 = phi ptr [ %1009, %1025 ], [ null, %172 ]
  %202 = phi i32 [ %1026, %1025 ], [ 0, %172 ]
  br label %203

203:                                              ; preds = %198, %976
  %204 = phi i32 [ %977, %976 ], [ %199, %198 ]
  %205 = load ptr, ptr %174, align 8, !tbaa !105
  %206 = load ptr, ptr %178, align 8, !tbaa !107
  %207 = icmp ult ptr %205, %206
  br i1 %207, label %208, label %1027

208:                                              ; preds = %203
  %209 = load i8, ptr %205, align 1, !tbaa !17
  switch i8 %209, label %210 [
    i8 124, label %1027
    i8 41, label %1027
  ]

210:                                              ; preds = %208
  %211 = and i32 %204, -17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #15
  %212 = load ptr, ptr %180, align 8, !tbaa !112
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7)
  store volatile i64 0, ptr %7, align 8, !tbaa !9
  %213 = load volatile i64, ptr %7, align 8, !tbaa !9
  %214 = call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %215 = icmp eq ptr %214, null
  br i1 %215, label %235, label %216

216:                                              ; preds = %210
  %217 = getelementptr inbounds %struct.sv, ptr %214, i64 0, i32 2
  %218 = load i32, ptr %217, align 4, !tbaa !13
  %219 = and i32 %218, 256
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %223

221:                                              ; preds = %216
  call void @Perl_sv_setuv(ptr noundef nonnull %214, i64 noundef 65288) #15
  %222 = load i32, ptr %217, align 4, !tbaa !13
  br label %223

223:                                              ; preds = %221, %216
  %224 = phi i32 [ %222, %221 ], [ %218, %216 ]
  %225 = and i32 %224, 2097408
  %226 = icmp eq i32 %225, 256
  br i1 %226, label %227, label %231

227:                                              ; preds = %223
  %228 = load ptr, ptr %214, align 8, !tbaa !16
  %229 = getelementptr inbounds %struct.xpviv, ptr %228, i64 0, i32 4
  %230 = load i64, ptr %229, align 8, !tbaa !17
  br label %233

231:                                              ; preds = %223
  %232 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %214, i32 noundef 2) #15
  br label %233

233:                                              ; preds = %231, %227
  %234 = phi i64 [ %230, %227 ], [ %232, %231 ]
  store volatile i64 %234, ptr %7, align 8, !tbaa !9
  br label %235

235:                                              ; preds = %210, %233
  %236 = load volatile i64, ptr %7, align 8, !tbaa !9
  %237 = and i64 %236, 1
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %291, label %239

239:                                              ; preds = %235
  %240 = load volatile i64, ptr %7, align 8, !tbaa !9
  %241 = and i64 %240, 1
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %288, label %243

243:                                              ; preds = %239
  %244 = load ptr, ptr %181, align 8, !tbaa !119
  %245 = load ptr, ptr %174, align 8, !tbaa !105
  %246 = icmp eq ptr %244, %245
  %247 = call ptr @Perl_PerlIO_stderr() #15
  br i1 %246, label %257, label %248

248:                                              ; preds = %243
  %249 = load ptr, ptr %182, align 8, !tbaa !56
  %250 = load ptr, ptr %174, align 8, !tbaa !105
  %251 = load ptr, ptr %178, align 8, !tbaa !107
  %252 = ptrtoint ptr %251 to i64
  %253 = ptrtoint ptr %250 to i64
  %254 = sub i64 %252, %253
  %255 = call ptr @Perl_pv_pretty(ptr noundef %249, ptr noundef %250, i64 noundef %254, i64 noundef 16, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.8, i32 noundef 33294) #15
  %256 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %247, ptr noundef nonnull @.str.34, ptr noundef %255) #15
  br label %259

257:                                              ; preds = %243
  %258 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %247, ptr noundef nonnull @.str.385, ptr noundef nonnull @.str.8) #15
  br label %259

259:                                              ; preds = %257, %248
  %260 = load ptr, ptr %180, align 8, !tbaa !112
  %261 = icmp eq ptr %260, %183
  br i1 %261, label %262, label %266

262:                                              ; preds = %259
  %263 = load i64, ptr %185, align 8, !tbaa !111
  %264 = trunc i64 %263 to i32
  %265 = add i32 %264, 1
  br label %275

266:                                              ; preds = %259
  %267 = icmp eq ptr %260, null
  br i1 %267, label %275, label %268

268:                                              ; preds = %266
  %269 = load ptr, ptr %184, align 8, !tbaa !131
  %270 = ptrtoint ptr %260 to i64
  %271 = ptrtoint ptr %269 to i64
  %272 = sub i64 %270, %271
  %273 = lshr exact i64 %272, 2
  %274 = trunc i64 %273 to i32
  br label %275

275:                                              ; preds = %268, %266, %262
  %276 = phi i32 [ %265, %262 ], [ %274, %268 ], [ -1, %266 ]
  %277 = load i32, ptr %186, align 8, !tbaa !118
  %278 = icmp eq i32 %277, %276
  %279 = call ptr @Perl_PerlIO_stderr() #15
  br i1 %278, label %282, label %280

280:                                              ; preds = %275
  %281 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %279, ptr noundef nonnull @.str.386, i32 noundef %276) #15
  br label %284

282:                                              ; preds = %275
  %283 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %279, ptr noundef nonnull @.str.387, ptr noundef nonnull @.str.8) #15
  br label %284

284:                                              ; preds = %282, %280
  %285 = call ptr @Perl_PerlIO_stderr() #15
  %286 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %285, ptr noundef nonnull @.str.388, i32 noundef %187, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.477) #15
  store i32 %276, ptr %186, align 8, !tbaa !118
  %287 = load ptr, ptr %174, align 8, !tbaa !105
  store ptr %287, ptr %181, align 8, !tbaa !119
  br label %288

288:                                              ; preds = %284, %239
  %289 = call ptr @Perl_PerlIO_stderr() #15
  %290 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %289, ptr noundef nonnull @.str.390, ptr noundef nonnull @.str.53) #15
  br label %291

291:                                              ; preds = %288, %235
  %292 = call fastcc ptr @S_regatom(ptr noundef nonnull %0, ptr noundef nonnull %5, i32 noundef %188)
  %293 = icmp eq ptr %292, null
  br i1 %293, label %294, label %322

294:                                              ; preds = %291
  %295 = load i32, ptr %5, align 4, !tbaa !73
  %296 = and i32 %295, 48
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %294
  %299 = or i32 %296, %211
  br label %970

300:                                              ; preds = %294
  %301 = load ptr, ptr %178, align 8, !tbaa !107
  %302 = load ptr, ptr %192, align 8, !tbaa !65
  %303 = ptrtoint ptr %301 to i64
  %304 = ptrtoint ptr %302 to i64
  %305 = sub i64 %303, %304
  %306 = load ptr, ptr %180, align 8, !tbaa !112
  %307 = icmp eq ptr %306, %183
  br i1 %307, label %312, label %308

308:                                              ; preds = %300
  %309 = load ptr, ptr %191, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %309, i32 noundef 11) #15
  %310 = load i32, ptr %5, align 4, !tbaa !73
  %311 = load ptr, ptr %192, align 8, !tbaa !65
  br label %312

312:                                              ; preds = %308, %300
  %313 = phi ptr [ %311, %308 ], [ %302, %300 ]
  %314 = phi i32 [ %310, %308 ], [ %295, %300 ]
  %315 = icmp sgt i64 %305, 127
  %316 = select i1 %315, i64 117, i64 %305
  %317 = select i1 %315, ptr @.str.20, ptr @.str.8
  %318 = sext i32 %314 to i64
  %319 = load i32, ptr %193, align 8, !tbaa !50
  %320 = icmp ne i32 %319, 0
  %321 = zext i1 %320 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.478, i64 noundef %318, i32 noundef %321, i64 noundef %316, ptr noundef %313, ptr noundef nonnull %317) #15
  br label %970

322:                                              ; preds = %291
  %323 = load ptr, ptr %174, align 8, !tbaa !105
  %324 = load i8, ptr %323, align 1, !tbaa !17
  %325 = icmp eq i8 %324, 123
  br i1 %325, label %326, label %799

326:                                              ; preds = %322
  %327 = getelementptr inbounds i8, ptr %323, i64 1
  %328 = load i8, ptr %327, align 1, !tbaa !17
  %329 = zext i8 %328 to i64
  %330 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %329
  %331 = load i32, ptr %330, align 4, !tbaa !73
  %332 = and i32 %331, 2
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %802, label %334

334:                                              ; preds = %326, %334
  %335 = phi ptr [ %342, %334 ], [ %327, %326 ]
  %336 = load i8, ptr %335, align 1, !tbaa !17
  %337 = zext i8 %336 to i64
  %338 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %337
  %339 = load i32, ptr %338, align 4, !tbaa !73
  %340 = and i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = getelementptr inbounds i8, ptr %335, i64 1
  br i1 %341, label %343, label %334, !llvm.loop !389

343:                                              ; preds = %334
  %344 = icmp eq i8 %336, 44
  br i1 %344, label %345, label %354

345:                                              ; preds = %343, %345
  %346 = phi ptr [ %347, %345 ], [ %335, %343 ]
  %347 = getelementptr inbounds i8, ptr %346, i64 1
  %348 = load i8, ptr %347, align 1, !tbaa !17
  %349 = zext i8 %348 to i64
  %350 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %349
  %351 = load i32, ptr %350, align 4, !tbaa !73
  %352 = and i32 %351, 2
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %345, !llvm.loop !390

354:                                              ; preds = %345, %343
  %355 = phi i8 [ %336, %343 ], [ %348, %345 ]
  %356 = icmp eq i8 %355, 125
  br i1 %356, label %357, label %799

357:                                              ; preds = %354
  %358 = icmp eq i8 %328, 44
  br label %359

359:                                              ; preds = %357, %365
  %360 = phi i1 [ %374, %365 ], [ %358, %357 ]
  %361 = phi ptr [ %367, %365 ], [ %327, %357 ]
  %362 = phi ptr [ %366, %365 ], [ null, %357 ]
  br i1 %360, label %363, label %365

363:                                              ; preds = %359
  %364 = icmp eq ptr %362, null
  br i1 %364, label %365, label %799

365:                                              ; preds = %363, %359
  %366 = phi ptr [ %362, %359 ], [ %361, %363 ]
  %367 = getelementptr inbounds i8, ptr %361, i64 1
  %368 = load i8, ptr %367, align 1, !tbaa !17
  %369 = zext i8 %368 to i64
  %370 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %369
  %371 = load i32, ptr %370, align 4, !tbaa !73
  %372 = and i32 %371, 2
  %373 = icmp ne i32 %372, 0
  %374 = icmp eq i8 %368, 44
  %375 = or i1 %374, %373
  br i1 %375, label %359, label %376, !llvm.loop !391

376:                                              ; preds = %365
  %377 = icmp eq i8 %368, 125
  br i1 %377, label %378, label %799

378:                                              ; preds = %376
  %379 = icmp eq ptr %366, null
  %380 = select i1 %379, ptr %367, ptr %366
  store ptr %327, ptr %174, align 8, !tbaa !105
  %381 = load i8, ptr %327, align 1, !tbaa !17
  %382 = zext i8 %381 to i64
  %383 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %382
  %384 = load i32, ptr %383, align 4, !tbaa !73
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %434, label %387

387:                                              ; preds = %378
  %388 = call zeroext i1 @Perl_grok_atoUV(ptr noundef nonnull %327, ptr noundef nonnull %6, ptr noundef nonnull %8) #15
  br i1 %388, label %409, label %389

389:                                              ; preds = %387
  %390 = load ptr, ptr %180, align 8, !tbaa !112
  %391 = icmp eq ptr %390, %183
  br i1 %391, label %394, label %392

392:                                              ; preds = %389
  %393 = load ptr, ptr %191, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %393, i32 noundef 11) #15
  br label %394

394:                                              ; preds = %392, %389
  %395 = load ptr, ptr %174, align 8, !tbaa !105
  %396 = load ptr, ptr %178, align 8, !tbaa !107
  %397 = icmp ugt ptr %395, %396
  %398 = select i1 %397, ptr %396, ptr %395
  %399 = load ptr, ptr %192, align 8, !tbaa !65
  %400 = ptrtoint ptr %398 to i64
  %401 = ptrtoint ptr %399 to i64
  %402 = sub i64 %400, %401
  %403 = load i32, ptr %193, align 8, !tbaa !50
  %404 = icmp ne i32 %403, 0
  %405 = zext i1 %404 to i32
  %406 = ptrtoint ptr %396 to i64
  %407 = sub i64 %406, %400
  %408 = getelementptr inbounds i8, ptr %399, i64 %402
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.479, i32 noundef %405, i64 noundef %402, ptr noundef %399, i32 noundef %405, i64 noundef %407, ptr noundef %408) #15
  br label %409

409:                                              ; preds = %394, %387
  %410 = load i64, ptr %6, align 8, !tbaa !9
  %411 = icmp ugt i64 %410, 32766
  br i1 %411, label %412, label %431

412:                                              ; preds = %409
  %413 = load ptr, ptr %180, align 8, !tbaa !112
  %414 = icmp eq ptr %413, %183
  br i1 %414, label %417, label %415

415:                                              ; preds = %412
  %416 = load ptr, ptr %191, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %416, i32 noundef 11) #15
  br label %417

417:                                              ; preds = %415, %412
  %418 = load ptr, ptr %174, align 8, !tbaa !105
  %419 = load ptr, ptr %192, align 8, !tbaa !65
  %420 = ptrtoint ptr %418 to i64
  %421 = ptrtoint ptr %419 to i64
  %422 = sub i64 %420, %421
  %423 = load i32, ptr %193, align 8, !tbaa !50
  %424 = icmp ne i32 %423, 0
  %425 = zext i1 %424 to i32
  %426 = load ptr, ptr %178, align 8, !tbaa !107
  %427 = ptrtoint ptr %426 to i64
  %428 = sub i64 %427, %420
  %429 = getelementptr inbounds i8, ptr %419, i64 %422
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %424, ptr noundef nonnull @.str.480, ptr nonnull poison, i32 noundef 32766, i32 noundef %425, i64 noundef %422, ptr noundef %419, i32 noundef %425, i64 noundef %428, ptr noundef %429)
  %430 = load i64, ptr %6, align 8, !tbaa !9
  br label %431

431:                                              ; preds = %417, %409
  %432 = phi i64 [ %430, %417 ], [ %410, %409 ]
  %433 = trunc i64 %432 to i32
  br label %434

434:                                              ; preds = %431, %378
  %435 = phi i32 [ %433, %431 ], [ 0, %378 ]
  %436 = load i8, ptr %380, align 1, !tbaa !17
  %437 = icmp eq i8 %436, 44
  br i1 %437, label %438, label %440

438:                                              ; preds = %434
  %439 = getelementptr inbounds i8, ptr %380, i64 1
  br label %442

440:                                              ; preds = %434
  %441 = load ptr, ptr %174, align 8, !tbaa !105
  br label %442

442:                                              ; preds = %440, %438
  %443 = phi ptr [ %439, %438 ], [ %441, %440 ]
  %444 = load i8, ptr %443, align 1, !tbaa !17
  %445 = zext i8 %444 to i64
  %446 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %445
  %447 = load i32, ptr %446, align 4, !tbaa !73
  %448 = and i32 %447, 2
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %497, label %450

450:                                              ; preds = %442
  %451 = call zeroext i1 @Perl_grok_atoUV(ptr noundef nonnull %443, ptr noundef nonnull %6, ptr noundef nonnull %8) #15
  br i1 %451, label %472, label %452

452:                                              ; preds = %450
  %453 = load ptr, ptr %180, align 8, !tbaa !112
  %454 = icmp eq ptr %453, %183
  br i1 %454, label %457, label %455

455:                                              ; preds = %452
  %456 = load ptr, ptr %191, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %456, i32 noundef 11) #15
  br label %457

457:                                              ; preds = %455, %452
  %458 = load ptr, ptr %174, align 8, !tbaa !105
  %459 = load ptr, ptr %178, align 8, !tbaa !107
  %460 = icmp ugt ptr %458, %459
  %461 = select i1 %460, ptr %459, ptr %458
  %462 = load ptr, ptr %192, align 8, !tbaa !65
  %463 = ptrtoint ptr %461 to i64
  %464 = ptrtoint ptr %462 to i64
  %465 = sub i64 %463, %464
  %466 = load i32, ptr %193, align 8, !tbaa !50
  %467 = icmp ne i32 %466, 0
  %468 = zext i1 %467 to i32
  %469 = ptrtoint ptr %459 to i64
  %470 = sub i64 %469, %463
  %471 = getelementptr inbounds i8, ptr %462, i64 %465
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.479, i32 noundef %468, i64 noundef %465, ptr noundef %462, i32 noundef %468, i64 noundef %470, ptr noundef %471) #15
  br label %472

472:                                              ; preds = %457, %450
  %473 = load i64, ptr %6, align 8, !tbaa !9
  %474 = icmp ugt i64 %473, 32766
  br i1 %474, label %475, label %494

475:                                              ; preds = %472
  %476 = load ptr, ptr %180, align 8, !tbaa !112
  %477 = icmp eq ptr %476, %183
  br i1 %477, label %480, label %478

478:                                              ; preds = %475
  %479 = load ptr, ptr %191, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %479, i32 noundef 11) #15
  br label %480

480:                                              ; preds = %478, %475
  %481 = load ptr, ptr %174, align 8, !tbaa !105
  %482 = load ptr, ptr %192, align 8, !tbaa !65
  %483 = ptrtoint ptr %481 to i64
  %484 = ptrtoint ptr %482 to i64
  %485 = sub i64 %483, %484
  %486 = load i32, ptr %193, align 8, !tbaa !50
  %487 = icmp ne i32 %486, 0
  %488 = zext i1 %487 to i32
  %489 = load ptr, ptr %178, align 8, !tbaa !107
  %490 = ptrtoint ptr %489 to i64
  %491 = sub i64 %490, %483
  %492 = getelementptr inbounds i8, ptr %482, i64 %485
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %487, ptr noundef nonnull @.str.480, ptr nonnull poison, i32 noundef 32766, i32 noundef %488, i64 noundef %485, ptr noundef %482, i32 noundef %488, i64 noundef %491, ptr noundef %492)
  %493 = load i64, ptr %6, align 8, !tbaa !9
  br label %494

494:                                              ; preds = %480, %472
  %495 = phi i64 [ %493, %480 ], [ %473, %472 ]
  %496 = trunc i64 %495 to i32
  br label %497

497:                                              ; preds = %494, %442
  %498 = phi i32 [ %496, %494 ], [ 32767, %442 ]
  store ptr %367, ptr %174, align 8, !tbaa !105
  %499 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %500 = icmp slt i32 %498, %435
  br i1 %500, label %501, label %528

501:                                              ; preds = %497
  %502 = load ptr, ptr %180, align 8, !tbaa !112
  %503 = icmp eq ptr %502, %183
  br i1 %503, label %504, label %507

504:                                              ; preds = %501
  %505 = load i64, ptr %185, align 8, !tbaa !111
  %506 = add nsw i64 %505, -1
  store i64 %506, ptr %185, align 8, !tbaa !111
  br label %520

507:                                              ; preds = %501
  %508 = load ptr, ptr %174, align 8, !tbaa !105
  %509 = ptrtoint ptr %508 to i64
  %510 = load ptr, ptr %192, align 8, !tbaa !65
  %511 = ptrtoint ptr %510 to i64
  %512 = sub i64 %509, %511
  %513 = load i32, ptr %193, align 8, !tbaa !50
  %514 = icmp ne i32 %513, 0
  %515 = zext i1 %514 to i32
  %516 = load ptr, ptr %178, align 8, !tbaa !107
  %517 = ptrtoint ptr %516 to i64
  %518 = sub i64 %517, %509
  %519 = getelementptr inbounds i8, ptr %510, i64 %512
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.481, i32 noundef %515, i64 noundef %512, ptr noundef %510, i32 noundef %515, i64 noundef %518, ptr noundef %519) #15
  store ptr %212, ptr %180, align 8, !tbaa !112
  br label %520

520:                                              ; preds = %504, %507
  %521 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 82, i64 noundef 0, ptr noundef nonnull @.str.460)
  %522 = load ptr, ptr %180, align 8, !tbaa !112
  %523 = icmp eq ptr %522, %183
  br i1 %523, label %972, label %524

524:                                              ; preds = %520
  %525 = getelementptr inbounds %struct.regnode, ptr %521, i64 0, i32 1
  store i8 82, ptr %525, align 1, !tbaa !141
  %526 = getelementptr inbounds %struct.regnode, ptr %521, i64 0, i32 2
  store i16 0, ptr %526, align 2, !tbaa !222
  %527 = getelementptr inbounds %struct.regnode, ptr %521, i64 1
  store ptr %527, ptr %180, align 8, !tbaa !112
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8)
  br label %1003

528:                                              ; preds = %497
  %529 = icmp eq i32 %435, %498
  br i1 %529, label %530, label %552

530:                                              ; preds = %528
  %531 = load ptr, ptr %174, align 8, !tbaa !105
  %532 = load ptr, ptr %178, align 8, !tbaa !107
  %533 = icmp ult ptr %531, %532
  br i1 %533, label %534, label %552

534:                                              ; preds = %530
  %535 = load i8, ptr %531, align 1, !tbaa !17
  %536 = icmp eq i8 %535, 63
  br i1 %536, label %537, label %552

537:                                              ; preds = %534
  %538 = load ptr, ptr %180, align 8, !tbaa !112
  %539 = icmp eq ptr %538, %183
  br i1 %539, label %552, label %540

540:                                              ; preds = %537
  %541 = getelementptr inbounds i8, ptr %531, i64 1
  %542 = ptrtoint ptr %541 to i64
  %543 = load ptr, ptr %192, align 8, !tbaa !65
  %544 = ptrtoint ptr %543 to i64
  %545 = sub i64 %542, %544
  %546 = load i32, ptr %193, align 8, !tbaa !50
  %547 = icmp ne i32 %546, 0
  %548 = zext i1 %547 to i32
  %549 = ptrtoint ptr %532 to i64
  %550 = sub i64 %549, %542
  %551 = getelementptr inbounds i8, ptr %543, i64 %545
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.482, i32 noundef 63, i32 noundef %548, i64 noundef %545, ptr noundef %543, i32 noundef %548, i64 noundef %550, ptr noundef %551) #15
  br label %552

552:                                              ; preds = %818, %808, %827, %540, %537, %534, %530, %528
  %553 = phi i32 [ 5, %827 ], [ %211, %537 ], [ %211, %540 ], [ %211, %534 ], [ %211, %530 ], [ %211, %528 ], [ %807, %808 ], [ 1, %818 ]
  %554 = phi i32 [ 1, %827 ], [ %435, %537 ], [ %435, %540 ], [ %435, %534 ], [ %435, %530 ], [ %498, %528 ], [ 32767, %808 ], [ 32767, %818 ]
  %555 = phi i32 [ 0, %827 ], [ %435, %537 ], [ %435, %540 ], [ %435, %534 ], [ %435, %530 ], [ %435, %528 ], [ 0, %808 ], [ 1, %818 ]
  %556 = load i32, ptr %5, align 4, !tbaa !73
  %557 = and i32 %556, 2
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %649, label %559

559:                                              ; preds = %552
  %560 = load i32, ptr %189, align 8, !tbaa !108
  %561 = icmp slt i32 %560, 10
  br i1 %561, label %562, label %566

562:                                              ; preds = %559
  %563 = sdiv i32 %560, 2
  %564 = add nsw i32 %560, 2
  %565 = add i32 %564, %563
  store i32 %565, ptr %189, align 8, !tbaa !108
  br label %566

566:                                              ; preds = %562, %559
  call fastcc void @S_reginsert(ptr noundef nonnull %0, i8 noundef zeroext 44, ptr noundef %292, i32 noundef %188)
  %567 = load ptr, ptr %180, align 8, !tbaa !112
  %568 = icmp eq ptr %567, %183
  br i1 %568, label %610, label %569

569:                                              ; preds = %566
  %570 = load volatile i64, ptr %7, align 8, !tbaa !9
  %571 = and i64 %570, 262144
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %573, label %575

573:                                              ; preds = %569
  %574 = ptrtoint ptr %292 to i64
  br label %588

575:                                              ; preds = %569
  %576 = load ptr, ptr %184, align 8, !tbaa !131
  %577 = ptrtoint ptr %292 to i64
  %578 = ptrtoint ptr %576 to i64
  %579 = sub i64 %577, %578
  %580 = lshr exact i64 %579, 2
  %581 = trunc i64 %580 to i32
  %582 = getelementptr inbounds i8, ptr %323, i64 1
  %583 = load ptr, ptr %194, align 8, !tbaa !106
  %584 = ptrtoint ptr %582 to i64
  %585 = ptrtoint ptr %583 to i64
  %586 = sub i64 %584, %585
  %587 = trunc i64 %586 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 10896, i32 noundef %581, i32 noundef %587) #15
  br label %588

588:                                              ; preds = %573, %575
  %589 = phi i64 [ %574, %573 ], [ %577, %575 ]
  %590 = load ptr, ptr %184, align 8, !tbaa !131
  %591 = ptrtoint ptr %590 to i64
  %592 = sub i64 %589, %591
  %593 = icmp slt i64 %592, 0
  br i1 %593, label %594, label %597

594:                                              ; preds = %588
  %595 = lshr exact i64 %592, 2
  %596 = trunc i64 %595 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %596) #15
  br label %610

597:                                              ; preds = %588
  %598 = getelementptr inbounds i8, ptr %323, i64 1
  %599 = load ptr, ptr %194, align 8, !tbaa !106
  %600 = ptrtoint ptr %598 to i64
  %601 = ptrtoint ptr %599 to i64
  %602 = sub i64 %600, %601
  %603 = trunc i64 %602 to i32
  %604 = load ptr, ptr %195, align 8, !tbaa !130
  %605 = getelementptr inbounds %struct.regexp_internal, ptr %604, i64 0, i32 1
  %606 = load ptr, ptr %605, align 8, !tbaa !17
  %607 = lshr exact i64 %592, 1
  %608 = add nsw i64 %607, -1
  %609 = getelementptr inbounds i32, ptr %606, i64 %608
  store i32 %603, ptr %609, align 4, !tbaa !73
  br label %610

610:                                              ; preds = %597, %594, %566
  %611 = load ptr, ptr %180, align 8, !tbaa !112
  %612 = icmp eq ptr %611, %183
  br i1 %612, label %784, label %613

613:                                              ; preds = %610
  %614 = load volatile i64, ptr %7, align 8, !tbaa !9
  %615 = and i64 %614, 262144
  %616 = icmp eq i64 %615, 0
  %617 = load ptr, ptr %184, align 8, !tbaa !131
  %618 = ptrtoint ptr %292 to i64
  br i1 %616, label %630, label %619

619:                                              ; preds = %613
  %620 = ptrtoint ptr %617 to i64
  %621 = sub i64 %618, %620
  %622 = lshr exact i64 %621, 2
  %623 = trunc i64 %622 to i32
  %624 = load ptr, ptr %174, align 8, !tbaa !105
  %625 = ptrtoint ptr %624 to i64
  %626 = ptrtoint ptr %323 to i64
  %627 = sub i64 %625, %626
  %628 = trunc i64 %627 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 10897, i32 noundef %623, i32 noundef %628) #15
  %629 = load ptr, ptr %184, align 8, !tbaa !131
  br label %630

630:                                              ; preds = %613, %619
  %631 = phi ptr [ %629, %619 ], [ %617, %613 ]
  %632 = ptrtoint ptr %631 to i64
  %633 = sub i64 %618, %632
  %634 = icmp slt i64 %633, 0
  br i1 %634, label %635, label %638

635:                                              ; preds = %630
  %636 = lshr exact i64 %633, 2
  %637 = trunc i64 %636 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %637) #15
  br label %784

638:                                              ; preds = %630
  %639 = load ptr, ptr %174, align 8, !tbaa !105
  %640 = ptrtoint ptr %639 to i64
  %641 = ptrtoint ptr %323 to i64
  %642 = sub i64 %640, %641
  %643 = trunc i64 %642 to i32
  %644 = load ptr, ptr %195, align 8, !tbaa !130
  %645 = getelementptr inbounds %struct.regexp_internal, ptr %644, i64 0, i32 1
  %646 = load ptr, ptr %645, align 8, !tbaa !17
  %647 = lshr exact i64 %633, 1
  %648 = getelementptr inbounds i32, ptr %646, i64 %647
  store i32 %643, ptr %648, align 4, !tbaa !73
  br label %784

649:                                              ; preds = %552
  %650 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 48, i64 noundef 0, ptr noundef nonnull @.str.460)
  %651 = load ptr, ptr %180, align 8, !tbaa !112
  %652 = icmp eq ptr %651, %183
  br i1 %652, label %657, label %653

653:                                              ; preds = %649
  %654 = getelementptr inbounds %struct.regnode, ptr %650, i64 0, i32 1
  store i8 48, ptr %654, align 1, !tbaa !141
  %655 = getelementptr inbounds %struct.regnode, ptr %650, i64 0, i32 2
  store i16 0, ptr %655, align 2, !tbaa !222
  %656 = getelementptr inbounds %struct.regnode, ptr %650, i64 1
  store ptr %656, ptr %180, align 8, !tbaa !112
  br label %657

657:                                              ; preds = %649, %653
  store i8 0, ptr %650, align 2, !tbaa !143
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %292, ptr noundef nonnull %650, i32 noundef %188)
  %658 = load ptr, ptr %180, align 8, !tbaa !112
  %659 = icmp eq ptr %658, %183
  br i1 %659, label %665, label %660

660:                                              ; preds = %657
  %661 = load i32, ptr %196, align 8, !tbaa !102
  %662 = icmp eq i32 %661, 0
  br i1 %662, label %665, label %663

663:                                              ; preds = %660
  call fastcc void @S_reginsert(ptr noundef nonnull %0, i8 noundef zeroext 61, ptr noundef %292, i32 noundef %188)
  call fastcc void @S_reginsert(ptr noundef nonnull %0, i8 noundef zeroext 40, ptr noundef %292, i32 noundef %188)
  %664 = getelementptr inbounds %struct.regnode, ptr %292, i64 0, i32 2
  store i16 3, ptr %664, align 2, !tbaa !222
  br label %665

665:                                              ; preds = %663, %660, %657
  call fastcc void @S_reginsert(ptr noundef nonnull %0, i8 noundef zeroext 47, ptr noundef %292, i32 noundef %188)
  %666 = load ptr, ptr %180, align 8, !tbaa !112
  %667 = icmp eq ptr %666, %183
  br i1 %667, label %709, label %668

668:                                              ; preds = %665
  %669 = load volatile i64, ptr %7, align 8, !tbaa !9
  %670 = and i64 %669, 262144
  %671 = icmp eq i64 %670, 0
  br i1 %671, label %672, label %674

672:                                              ; preds = %668
  %673 = ptrtoint ptr %292 to i64
  br label %687

674:                                              ; preds = %668
  %675 = load ptr, ptr %184, align 8, !tbaa !131
  %676 = ptrtoint ptr %292 to i64
  %677 = ptrtoint ptr %675 to i64
  %678 = sub i64 %676, %677
  %679 = lshr exact i64 %678, 2
  %680 = trunc i64 %679 to i32
  %681 = getelementptr inbounds i8, ptr %323, i64 1
  %682 = load ptr, ptr %194, align 8, !tbaa !106
  %683 = ptrtoint ptr %681 to i64
  %684 = ptrtoint ptr %682 to i64
  %685 = sub i64 %683, %684
  %686 = trunc i64 %685 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 10911, i32 noundef %680, i32 noundef %686) #15
  br label %687

687:                                              ; preds = %672, %674
  %688 = phi i64 [ %673, %672 ], [ %676, %674 ]
  %689 = load ptr, ptr %184, align 8, !tbaa !131
  %690 = ptrtoint ptr %689 to i64
  %691 = sub i64 %688, %690
  %692 = icmp slt i64 %691, 0
  br i1 %692, label %693, label %696

693:                                              ; preds = %687
  %694 = lshr exact i64 %691, 2
  %695 = trunc i64 %694 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %695) #15
  br label %709

696:                                              ; preds = %687
  %697 = getelementptr inbounds i8, ptr %323, i64 1
  %698 = load ptr, ptr %194, align 8, !tbaa !106
  %699 = ptrtoint ptr %697 to i64
  %700 = ptrtoint ptr %698 to i64
  %701 = sub i64 %699, %700
  %702 = trunc i64 %701 to i32
  %703 = load ptr, ptr %195, align 8, !tbaa !130
  %704 = getelementptr inbounds %struct.regexp_internal, ptr %703, i64 0, i32 1
  %705 = load ptr, ptr %704, align 8, !tbaa !17
  %706 = lshr exact i64 %691, 1
  %707 = add nsw i64 %706, -1
  %708 = getelementptr inbounds i32, ptr %705, i64 %707
  store i32 %702, ptr %708, align 4, !tbaa !73
  br label %709

709:                                              ; preds = %696, %693, %665
  %710 = load ptr, ptr %180, align 8, !tbaa !112
  %711 = icmp eq ptr %710, %183
  br i1 %711, label %754, label %712

712:                                              ; preds = %709
  %713 = load volatile i64, ptr %7, align 8, !tbaa !9
  %714 = and i64 %713, 262144
  %715 = icmp eq i64 %714, 0
  %716 = load ptr, ptr %184, align 8, !tbaa !131
  %717 = ptrtoint ptr %292 to i64
  br i1 %715, label %732, label %718

718:                                              ; preds = %712
  %719 = ptrtoint ptr %716 to i64
  %720 = sub i64 %717, %719
  %721 = lshr exact i64 %720, 2
  %722 = trunc i64 %721 to i32
  br i1 %325, label %723, label %728

723:                                              ; preds = %718
  %724 = load ptr, ptr %174, align 8, !tbaa !105
  %725 = ptrtoint ptr %724 to i64
  %726 = ptrtoint ptr %323 to i64
  %727 = sub i64 %725, %726
  br label %728

728:                                              ; preds = %723, %718
  %729 = phi i64 [ %727, %723 ], [ 1, %718 ]
  %730 = trunc i64 %729 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 10913, i32 noundef %722, i32 noundef %730) #15
  %731 = load ptr, ptr %184, align 8, !tbaa !131
  br label %732

732:                                              ; preds = %712, %728
  %733 = phi ptr [ %731, %728 ], [ %716, %712 ]
  %734 = ptrtoint ptr %733 to i64
  %735 = sub i64 %717, %734
  %736 = icmp slt i64 %735, 0
  br i1 %736, label %737, label %740

737:                                              ; preds = %732
  %738 = lshr exact i64 %735, 2
  %739 = trunc i64 %738 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %739) #15
  br label %754

740:                                              ; preds = %732
  br i1 %325, label %741, label %746

741:                                              ; preds = %740
  %742 = load ptr, ptr %174, align 8, !tbaa !105
  %743 = ptrtoint ptr %742 to i64
  %744 = ptrtoint ptr %323 to i64
  %745 = sub i64 %743, %744
  br label %746

746:                                              ; preds = %741, %740
  %747 = phi i64 [ %745, %741 ], [ 1, %740 ]
  %748 = trunc i64 %747 to i32
  %749 = load ptr, ptr %195, align 8, !tbaa !130
  %750 = getelementptr inbounds %struct.regexp_internal, ptr %749, i64 0, i32 1
  %751 = load ptr, ptr %750, align 8, !tbaa !17
  %752 = lshr exact i64 %735, 1
  %753 = getelementptr inbounds i32, ptr %751, i64 %752
  store i32 %748, ptr %753, align 4, !tbaa !73
  br label %754

754:                                              ; preds = %746, %737, %709
  %755 = load ptr, ptr %180, align 8, !tbaa !112
  %756 = icmp eq ptr %755, %183
  br i1 %756, label %762, label %757

757:                                              ; preds = %754
  %758 = load i32, ptr %196, align 8, !tbaa !102
  %759 = icmp eq i32 %758, 0
  br i1 %759, label %762, label %760

760:                                              ; preds = %757
  %761 = getelementptr inbounds %struct.regnode, ptr %292, i64 0, i32 2
  store i16 3, ptr %761, align 2, !tbaa !222
  br label %762

762:                                              ; preds = %754, %757, %760
  %763 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 40, i64 noundef 0, ptr noundef nonnull @.str.460)
  %764 = load ptr, ptr %180, align 8, !tbaa !112
  %765 = icmp eq ptr %764, %183
  br i1 %765, label %770, label %766

766:                                              ; preds = %762
  %767 = getelementptr inbounds %struct.regnode, ptr %763, i64 0, i32 1
  store i8 40, ptr %767, align 1, !tbaa !141
  %768 = getelementptr inbounds %struct.regnode, ptr %763, i64 0, i32 2
  store i16 0, ptr %768, align 2, !tbaa !222
  %769 = getelementptr inbounds %struct.regnode, ptr %763, i64 1
  store ptr %769, ptr %180, align 8, !tbaa !112
  br label %770

770:                                              ; preds = %762, %766
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %292, ptr noundef %763, i32 noundef %188)
  %771 = load ptr, ptr %180, align 8, !tbaa !112
  %772 = icmp eq ptr %771, %183
  br i1 %772, label %773, label %778

773:                                              ; preds = %770
  %774 = load i64, ptr %197, align 8, !tbaa !113
  %775 = add nsw i64 %774, 1
  store i64 %775, ptr %197, align 8, !tbaa !113
  %776 = load i32, ptr %196, align 8, !tbaa !102
  %777 = add nsw i32 %776, 3
  store i32 %777, ptr %196, align 8, !tbaa !102
  br label %778

778:                                              ; preds = %773, %770
  %779 = load i32, ptr %189, align 8, !tbaa !108
  %780 = icmp slt i32 %779, 10
  br i1 %780, label %781, label %784

781:                                              ; preds = %778
  %782 = shl i32 %779, 1
  %783 = add i32 %782, 4
  store i32 %783, ptr %189, align 8, !tbaa !108
  br label %784

784:                                              ; preds = %781, %778, %638, %635, %610
  store i8 0, ptr %292, align 2, !tbaa !143
  %785 = icmp sgt i32 %555, 0
  %786 = select i1 %785, i32 0, i32 %553
  %787 = icmp sgt i32 %554, 0
  %788 = zext i1 %787 to i32
  %789 = or i32 %786, %788
  %790 = load ptr, ptr %180, align 8, !tbaa !112
  %791 = icmp eq ptr %790, %183
  br i1 %791, label %797, label %792

792:                                              ; preds = %784
  %793 = trunc i32 %555 to i16
  %794 = getelementptr inbounds %struct.regnode_2, ptr %292, i64 0, i32 3
  store i16 %793, ptr %794, align 2, !tbaa !144
  %795 = trunc i32 %554 to i16
  %796 = getelementptr inbounds %struct.regnode_2, ptr %292, i64 0, i32 4
  store i16 %795, ptr %796, align 2, !tbaa !233
  br label %797

797:                                              ; preds = %792, %784
  %798 = icmp eq i32 %554, 32767
  br i1 %798, label %831, label %835

799:                                              ; preds = %363, %376, %354, %322
  %800 = icmp eq i8 %324, 43
  %801 = icmp eq i8 %324, 63
  switch i8 %324, label %802 [
    i8 63, label %804
    i8 43, label %804
    i8 42, label %804
  ]

802:                                              ; preds = %326, %799
  %803 = load i32, ptr %5, align 4, !tbaa !73
  br label %972

804:                                              ; preds = %799, %799, %799
  %805 = icmp eq i8 %324, 42
  %806 = call fastcc ptr @S_nextchar(ptr noundef %0)
  %807 = select i1 %800, i32 1, i32 5
  br i1 %805, label %808, label %817

808:                                              ; preds = %804
  %809 = load i32, ptr %5, align 4, !tbaa !73
  %810 = and i32 %809, 2
  %811 = icmp eq i32 %810, 0
  br i1 %811, label %552, label %812

812:                                              ; preds = %808
  call fastcc void @S_reginsert(ptr noundef nonnull %0, i8 noundef zeroext 42, ptr noundef %292, i32 noundef %188)
  store i8 0, ptr %292, align 2, !tbaa !143
  %813 = load i32, ptr %189, align 8, !tbaa !108
  %814 = icmp slt i32 %813, 10
  br i1 %814, label %815, label %831

815:                                              ; preds = %812
  %816 = add nsw i32 %813, 4
  br label %828

817:                                              ; preds = %804
  br i1 %800, label %818, label %827

818:                                              ; preds = %817
  %819 = load i32, ptr %5, align 4, !tbaa !73
  %820 = and i32 %819, 2
  %821 = icmp eq i32 %820, 0
  br i1 %821, label %552, label %822

822:                                              ; preds = %818
  call fastcc void @S_reginsert(ptr noundef nonnull %0, i8 noundef zeroext 43, ptr noundef %292, i32 noundef %188)
  store i8 0, ptr %292, align 2, !tbaa !143
  %823 = load i32, ptr %189, align 8, !tbaa !108
  %824 = icmp slt i32 %823, 10
  br i1 %824, label %825, label %831

825:                                              ; preds = %822
  %826 = add nsw i32 %823, 3
  br label %828

827:                                              ; preds = %817
  br i1 %801, label %552, label %835

828:                                              ; preds = %815, %825
  %829 = phi i32 [ %826, %825 ], [ %816, %815 ]
  %830 = phi i32 [ 1, %825 ], [ %807, %815 ]
  store i32 %829, ptr %189, align 8, !tbaa !108
  br label %831

831:                                              ; preds = %828, %822, %812, %797
  %832 = phi i32 [ %789, %797 ], [ %807, %812 ], [ 1, %822 ], [ %830, %828 ]
  %833 = load i32, ptr %190, align 8, !tbaa !98
  %834 = or i32 %833, 4096
  store i32 %834, ptr %190, align 8, !tbaa !98
  br label %835

835:                                              ; preds = %831, %827, %797
  %836 = phi i32 [ %789, %797 ], [ 5, %827 ], [ %832, %831 ]
  %837 = phi i32 [ %554, %797 ], [ 32767, %827 ], [ 32767, %831 ]
  %838 = load ptr, ptr %180, align 8, !tbaa !112
  %839 = icmp eq ptr %838, %183
  br i1 %839, label %883, label %840

840:                                              ; preds = %835
  %841 = load i32, ptr %5, align 4, !tbaa !73
  %842 = and i32 %841, 9
  %843 = icmp eq i32 %842, 0
  %844 = icmp sgt i32 %837, 10922
  %845 = select i1 %843, i1 %844, i1 false
  br i1 %845, label %846, label %883

846:                                              ; preds = %840
  %847 = load ptr, ptr %191, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %847, i32 noundef 11) #15
  %848 = load ptr, ptr %174, align 8, !tbaa !105
  %849 = load ptr, ptr %192, align 8, !tbaa !65
  %850 = ptrtoint ptr %848 to i64
  %851 = ptrtoint ptr %849 to i64
  %852 = sub i64 %850, %851
  %853 = load ptr, ptr %180, align 8, !tbaa !112
  %854 = icmp eq ptr %853, %183
  br i1 %854, label %855, label %860

855:                                              ; preds = %846
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.371, i32 noundef 10999) #15
  %856 = load ptr, ptr %174, align 8, !tbaa !105
  %857 = load ptr, ptr %192, align 8, !tbaa !65
  %858 = ptrtoint ptr %856 to i64
  %859 = ptrtoint ptr %857 to i64
  br label %860

860:                                              ; preds = %855, %846
  %861 = phi i64 [ %859, %855 ], [ %851, %846 ]
  %862 = phi i64 [ %858, %855 ], [ %850, %846 ]
  %863 = phi ptr [ %857, %855 ], [ %849, %846 ]
  %864 = phi ptr [ %856, %855 ], [ %848, %846 ]
  %865 = load i32, ptr %193, align 8, !tbaa !50
  %866 = icmp ne i32 %865, 0
  %867 = zext i1 %866 to i32
  %868 = icmp ult ptr %864, %205
  %869 = ptrtoint ptr %205 to i64
  %870 = sub i64 %862, %869
  %871 = select i1 %868, i64 0, i64 %870
  %872 = load ptr, ptr %178, align 8, !tbaa !107
  %873 = ptrtoint ptr %872 to i64
  %874 = add i64 %852, %861
  %875 = sub i64 %873, %874
  %876 = getelementptr inbounds i8, ptr %863, i64 %852
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.483, i32 noundef %867, i64 noundef %871, ptr noundef nonnull %205, i32 noundef %867, i64 noundef %852, ptr noundef %863, i32 noundef %867, i64 noundef %875, ptr noundef %876) #15
  %877 = load ptr, ptr %191, align 8, !tbaa !122
  %878 = icmp eq ptr %877, null
  br i1 %878, label %883, label %879

879:                                              ; preds = %860
  %880 = getelementptr inbounds %struct.sv, ptr %877, i64 0, i32 1
  %881 = load i32, ptr %880, align 8, !tbaa !37
  %882 = add i32 %881, 1
  store i32 %882, ptr %880, align 8, !tbaa !37
  br label %883

883:                                              ; preds = %879, %860, %840, %835
  %884 = load ptr, ptr %174, align 8, !tbaa !105
  %885 = load ptr, ptr %178, align 8, !tbaa !107
  %886 = icmp ult ptr %884, %885
  br i1 %886, label %887, label %910

887:                                              ; preds = %883
  %888 = load i8, ptr %884, align 1, !tbaa !17
  switch i8 %888, label %910 [
    i8 63, label %889
    i8 43, label %892
  ]

889:                                              ; preds = %887
  %890 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  call fastcc void @S_reginsert(ptr noundef nonnull %0, i8 noundef zeroext 69, ptr noundef %292, i32 noundef %188)
  %891 = getelementptr inbounds %struct.regnode, ptr %292, i64 1
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %292, ptr noundef nonnull %891, i32 noundef %188)
  br label %910

892:                                              ; preds = %887
  %893 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %894 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 1, i64 noundef 0, ptr noundef nonnull @.str.460)
  %895 = load ptr, ptr %180, align 8, !tbaa !112
  %896 = icmp eq ptr %895, %183
  br i1 %896, label %901, label %897

897:                                              ; preds = %892
  %898 = getelementptr inbounds %struct.regnode, ptr %894, i64 0, i32 1
  store i8 1, ptr %898, align 1, !tbaa !141
  %899 = getelementptr inbounds %struct.regnode, ptr %894, i64 0, i32 2
  store i16 0, ptr %899, align 2, !tbaa !222
  %900 = getelementptr inbounds %struct.regnode, ptr %894, i64 1
  store ptr %900, ptr %180, align 8, !tbaa !112
  br label %901

901:                                              ; preds = %897, %892
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef %292, ptr noundef %894, i32 noundef %188)
  call fastcc void @S_reginsert(ptr noundef nonnull %0, i8 noundef zeroext 65, ptr noundef %292, i32 noundef %188)
  store i8 0, ptr %292, align 2, !tbaa !143
  %902 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 41, i64 noundef 0, ptr noundef nonnull @.str.460)
  %903 = load ptr, ptr %180, align 8, !tbaa !112
  %904 = icmp eq ptr %903, %183
  br i1 %904, label %909, label %905

905:                                              ; preds = %901
  %906 = getelementptr inbounds %struct.regnode, ptr %902, i64 0, i32 1
  store i8 41, ptr %906, align 1, !tbaa !141
  %907 = getelementptr inbounds %struct.regnode, ptr %902, i64 0, i32 2
  store i16 0, ptr %907, align 2, !tbaa !222
  %908 = getelementptr inbounds %struct.regnode, ptr %902, i64 1
  store ptr %908, ptr %180, align 8, !tbaa !112
  br label %909

909:                                              ; preds = %901, %905
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef nonnull %292, ptr noundef %902, i32 noundef %188)
  br label %910

910:                                              ; preds = %887, %883, %909, %889
  %911 = load ptr, ptr %174, align 8, !tbaa !105
  %912 = load ptr, ptr %178, align 8, !tbaa !107
  %913 = icmp ult ptr %911, %912
  br i1 %913, label %914, label %972

914:                                              ; preds = %910
  %915 = load i8, ptr %911, align 1, !tbaa !17
  switch i8 %915, label %972 [
    i8 42, label %947
    i8 43, label %947
    i8 63, label %947
    i8 123, label %916
  ]

916:                                              ; preds = %914
  %917 = getelementptr inbounds i8, ptr %911, i64 1
  %918 = load i8, ptr %917, align 1, !tbaa !17
  %919 = zext i8 %918 to i64
  %920 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %919
  %921 = load i32, ptr %920, align 4, !tbaa !73
  %922 = and i32 %921, 2
  %923 = icmp eq i32 %922, 0
  br i1 %923, label %972, label %924

924:                                              ; preds = %916, %924
  %925 = phi ptr [ %932, %924 ], [ %917, %916 ]
  %926 = load i8, ptr %925, align 1, !tbaa !17
  %927 = zext i8 %926 to i64
  %928 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %927
  %929 = load i32, ptr %928, align 4, !tbaa !73
  %930 = and i32 %929, 2
  %931 = icmp eq i32 %930, 0
  %932 = getelementptr inbounds i8, ptr %925, i64 1
  br i1 %931, label %933, label %924, !llvm.loop !389

933:                                              ; preds = %924
  %934 = icmp eq i8 %926, 44
  br i1 %934, label %935, label %944

935:                                              ; preds = %933, %935
  %936 = phi ptr [ %937, %935 ], [ %925, %933 ]
  %937 = getelementptr inbounds i8, ptr %936, i64 1
  %938 = load i8, ptr %937, align 1, !tbaa !17
  %939 = zext i8 %938 to i64
  %940 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %939
  %941 = load i32, ptr %940, align 4, !tbaa !73
  %942 = and i32 %941, 2
  %943 = icmp eq i32 %942, 0
  br i1 %943, label %944, label %935, !llvm.loop !390

944:                                              ; preds = %935, %933
  %945 = phi i8 [ %926, %933 ], [ %938, %935 ]
  %946 = icmp eq i8 %945, 125
  br i1 %946, label %947, label %972

947:                                              ; preds = %944, %914, %914, %914
  %948 = getelementptr inbounds i8, ptr %911, i64 1
  store ptr %948, ptr %174, align 8, !tbaa !105
  %949 = load ptr, ptr %180, align 8, !tbaa !112
  %950 = icmp eq ptr %949, %183
  br i1 %950, label %955, label %951

951:                                              ; preds = %947
  %952 = load ptr, ptr %191, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %952, i32 noundef 11) #15
  %953 = load ptr, ptr %174, align 8, !tbaa !105
  %954 = load ptr, ptr %178, align 8, !tbaa !107
  br label %955

955:                                              ; preds = %951, %947
  %956 = phi ptr [ %954, %951 ], [ %912, %947 ]
  %957 = phi ptr [ %953, %951 ], [ %948, %947 ]
  %958 = icmp ugt ptr %957, %956
  %959 = select i1 %958, ptr %956, ptr %957
  %960 = load ptr, ptr %192, align 8, !tbaa !65
  %961 = ptrtoint ptr %959 to i64
  %962 = ptrtoint ptr %960 to i64
  %963 = sub i64 %961, %962
  %964 = load i32, ptr %193, align 8, !tbaa !50
  %965 = icmp ne i32 %964, 0
  %966 = zext i1 %965 to i32
  %967 = ptrtoint ptr %956 to i64
  %968 = sub i64 %967, %961
  %969 = getelementptr inbounds i8, ptr %960, i64 %963
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.484, i32 noundef %966, i64 noundef %963, ptr noundef %960, i32 noundef %966, i64 noundef %968, ptr noundef %969) #15
  br label %972

970:                                              ; preds = %312, %298
  %971 = phi i32 [ %299, %298 ], [ %211, %312 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8)
  br label %976

972:                                              ; preds = %916, %520, %802, %910, %914, %944, %955
  %973 = phi i32 [ %803, %802 ], [ %836, %914 ], [ %836, %944 ], [ %836, %955 ], [ %836, %910 ], [ %211, %520 ], [ %836, %916 ]
  %974 = phi ptr [ %292, %802 ], [ %292, %914 ], [ %292, %944 ], [ %292, %955 ], [ %292, %910 ], [ %521, %520 ], [ %292, %916 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8)
  %975 = icmp eq ptr %974, null
  br i1 %975, label %976, label %1003

976:                                              ; preds = %970, %972
  %977 = phi i32 [ %971, %970 ], [ %973, %972 ]
  %978 = and i32 %977, 16
  %979 = icmp eq i32 %978, 0
  br i1 %979, label %980, label %203, !llvm.loop !392

980:                                              ; preds = %976
  %981 = and i32 %977, 32
  %982 = icmp eq i32 %981, 0
  br i1 %982, label %983, label %1047

983:                                              ; preds = %980
  %984 = load ptr, ptr %178, align 8, !tbaa !107
  %985 = load ptr, ptr %192, align 8, !tbaa !65
  %986 = ptrtoint ptr %984 to i64
  %987 = ptrtoint ptr %985 to i64
  %988 = sub i64 %986, %987
  %989 = load ptr, ptr %180, align 8, !tbaa !112
  %990 = icmp eq ptr %989, %183
  br i1 %990, label %994, label %991

991:                                              ; preds = %983
  %992 = load ptr, ptr %191, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %992, i32 noundef 11) #15
  %993 = load ptr, ptr %192, align 8, !tbaa !65
  br label %994

994:                                              ; preds = %991, %983
  %995 = phi ptr [ %993, %991 ], [ %985, %983 ]
  %996 = icmp sgt i64 %988, 127
  %997 = select i1 %996, ptr @.str.20, ptr @.str.8
  %998 = select i1 %996, i64 117, i64 %988
  %999 = sext i32 %977 to i64
  %1000 = load i32, ptr %193, align 8, !tbaa !50
  %1001 = icmp ne i32 %1000, 0
  %1002 = zext i1 %1001 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.476, i64 noundef %999, i32 noundef %1002, i64 noundef %998, ptr noundef %995, ptr noundef nonnull %997) #15
  br label %1008

1003:                                             ; preds = %972, %524
  %1004 = phi ptr [ %521, %524 ], [ %974, %972 ]
  %1005 = phi i32 [ %211, %524 ], [ %973, %972 ]
  %1006 = icmp eq ptr %200, null
  %1007 = select i1 %1006, ptr %1004, ptr %200
  br label %1008

1008:                                             ; preds = %1003, %994
  %1009 = phi ptr [ null, %994 ], [ %1004, %1003 ]
  %1010 = phi i32 [ %977, %994 ], [ %1005, %1003 ]
  %1011 = phi ptr [ %200, %994 ], [ %1007, %1003 ]
  %1012 = and i32 %1010, 9
  %1013 = load i32, ptr %1, align 4, !tbaa !73
  %1014 = or i32 %1013, %1012
  store i32 %1014, ptr %1, align 4, !tbaa !73
  %1015 = icmp eq ptr %201, null
  br i1 %1015, label %1016, label %1019

1016:                                             ; preds = %1008
  %1017 = and i32 %1010, 4
  %1018 = or i32 %1014, %1017
  store i32 %1018, ptr %1, align 4, !tbaa !73
  br label %1025

1019:                                             ; preds = %1008
  %1020 = load i32, ptr %189, align 8, !tbaa !108
  %1021 = icmp slt i32 %1020, 10
  br i1 %1021, label %1022, label %1024

1022:                                             ; preds = %1019
  %1023 = add nsw i32 %1020, 1
  store i32 %1023, ptr %189, align 8, !tbaa !108
  br label %1024

1024:                                             ; preds = %1022, %1019
  call fastcc void @S_regtail(ptr noundef nonnull %0, ptr noundef nonnull %201, ptr noundef %1009, i32 noundef %179)
  br label %1025

1025:                                             ; preds = %1024, %1016
  %1026 = add nuw nsw i32 %202, 1
  br label %198, !llvm.loop !392

1027:                                             ; preds = %208, %208, %203
  %1028 = icmp eq ptr %201, null
  br i1 %1028, label %1029, label %1040

1029:                                             ; preds = %1027
  %1030 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 40, i64 noundef 0, ptr noundef nonnull @.str.460)
  %1031 = load ptr, ptr %180, align 8, !tbaa !112
  %1032 = icmp eq ptr %1031, %183
  br i1 %1032, label %1037, label %1033

1033:                                             ; preds = %1029
  %1034 = getelementptr inbounds %struct.regnode, ptr %1030, i64 0, i32 1
  store i8 40, ptr %1034, align 1, !tbaa !141
  %1035 = getelementptr inbounds %struct.regnode, ptr %1030, i64 0, i32 2
  store i16 0, ptr %1035, align 2, !tbaa !222
  %1036 = getelementptr inbounds %struct.regnode, ptr %1030, i64 1
  store ptr %1036, ptr %180, align 8, !tbaa !112
  br label %1037

1037:                                             ; preds = %1029, %1033
  %1038 = icmp eq ptr %200, null
  %1039 = select i1 %1038, ptr %1030, ptr %200
  br label %1040

1040:                                             ; preds = %1037, %1027
  %1041 = phi ptr [ %200, %1027 ], [ %1039, %1037 ]
  %1042 = icmp eq i32 %202, 1
  br i1 %1042, label %1043, label %1050

1043:                                             ; preds = %1040
  %1044 = and i32 %204, 2
  %1045 = load i32, ptr %1, align 4, !tbaa !73
  %1046 = or i32 %1045, %1044
  br label %1047

1047:                                             ; preds = %980, %1043
  %1048 = phi i32 [ %1046, %1043 ], [ 32, %980 ]
  %1049 = phi ptr [ %1041, %1043 ], [ null, %980 ]
  store i32 %1048, ptr %1, align 4, !tbaa !73
  br label %1050

1050:                                             ; preds = %1047, %1040
  %1051 = phi ptr [ %1041, %1040 ], [ %1049, %1047 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9)
  ret ptr %1051
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_handle_regex_sets(ptr noundef %0, ptr noundef writeonly %1, ptr noundef %2, i32 noundef %3, ptr noundef %4) unnamed_addr #0 {
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #15
  %15 = load i32, ptr %0, align 8, !tbaa !66
  %16 = and i32 %15, 4
  %17 = icmp eq i32 %16, 0
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9)
  store volatile i64 0, ptr %9, align 8, !tbaa !9
  %18 = load volatile i64, ptr %9, align 8, !tbaa !9
  %19 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %20 = icmp eq ptr %19, null
  br i1 %20, label %40, label %21

21:                                               ; preds = %5
  %22 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !13
  %24 = and i32 %23, 256
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  tail call void @Perl_sv_setuv(ptr noundef nonnull %19, i64 noundef 65288) #15
  %27 = load i32, ptr %22, align 4, !tbaa !13
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi i32 [ %27, %26 ], [ %23, %21 ]
  %30 = and i32 %29, 2097408
  %31 = icmp eq i32 %30, 256
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = load ptr, ptr %19, align 8, !tbaa !16
  %34 = getelementptr inbounds %struct.xpviv, ptr %33, i64 0, i32 4
  %35 = load i64, ptr %34, align 8, !tbaa !17
  br label %38

36:                                               ; preds = %28
  %37 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %19, i32 noundef 2) #15
  br label %38

38:                                               ; preds = %36, %32
  %39 = phi i64 [ %35, %32 ], [ %37, %36 ]
  store volatile i64 %39, ptr %9, align 8, !tbaa !9
  br label %40

40:                                               ; preds = %5, %38
  %41 = icmp eq ptr %2, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.384, i32 noundef 13323) #15
  br label %43

43:                                               ; preds = %40, %42
  %44 = icmp eq ptr %4, null
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.612, i32 noundef 13323) #15
  br label %46

46:                                               ; preds = %43, %45
  %47 = load i32, ptr %0, align 8, !tbaa !66
  %48 = and i32 %47, 896
  %49 = icmp eq i32 %48, 128
  br i1 %49, label %50, label %77

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %52 = load ptr, ptr %51, align 8, !tbaa !112
  %53 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %54 = icmp eq ptr %52, %53
  br i1 %54, label %58, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %57, i32 noundef 11) #15
  br label %58

58:                                               ; preds = %50, %55
  %59 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !105
  %61 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %62 = load ptr, ptr %61, align 8, !tbaa !107
  %63 = icmp ugt ptr %60, %62
  %64 = select i1 %63, ptr %62, ptr %60
  %65 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %66 = load ptr, ptr %65, align 8, !tbaa !65
  %67 = ptrtoint ptr %64 to i64
  %68 = ptrtoint ptr %66 to i64
  %69 = sub i64 %67, %68
  %70 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %71 = load i32, ptr %70, align 8, !tbaa !50
  %72 = icmp ne i32 %71, 0
  %73 = zext i1 %72 to i32
  %74 = ptrtoint ptr %62 to i64
  %75 = sub i64 %74, %67
  %76 = getelementptr inbounds i8, ptr %66, i64 %69
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.613, i32 noundef %73, i64 noundef %69, ptr noundef %66, i32 noundef %73, i64 noundef %75, ptr noundef %76) #15
  br label %77

77:                                               ; preds = %58, %46
  %78 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 27
  store i32 1, ptr %78, align 8, !tbaa !51
  %79 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %80 = load ptr, ptr %79, align 8, !tbaa !112
  %81 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %82 = icmp eq ptr %80, %81
  br i1 %82, label %83, label %255

83:                                               ; preds = %77
  %84 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %85 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %86 = load ptr, ptr %84, align 8, !tbaa !105
  %87 = load ptr, ptr %85, align 8, !tbaa !107
  %88 = icmp ult ptr %86, %87
  br i1 %88, label %89, label %232

89:                                               ; preds = %83
  %90 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %91 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %92 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  br label %93

93:                                               ; preds = %89, %226
  %94 = phi ptr [ %86, %89 ], [ %229, %226 ]
  %95 = phi i64 [ 0, %89 ], [ %227, %226 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #15
  store ptr null, ptr %10, align 8, !tbaa !5
  %96 = call fastcc ptr @S_regpatws(ptr noundef nonnull %0, ptr noundef %94, i1 noundef zeroext true)
  store ptr %96, ptr %84, align 8, !tbaa !105
  %97 = load i8, ptr %96, align 1, !tbaa !17
  %98 = sext i8 %97 to i32
  switch i32 %98, label %226 [
    i32 63, label %99
    i32 92, label %105
    i32 91, label %111
    i32 93, label %156
  ]

99:                                               ; preds = %93
  %100 = getelementptr inbounds i8, ptr %96, i64 1
  %101 = load i8, ptr %100, align 1, !tbaa !17
  %102 = icmp eq i8 %101, 91
  br i1 %102, label %103, label %226

103:                                              ; preds = %99
  %104 = add i64 %95, 1
  store ptr %100, ptr %84, align 8, !tbaa !105
  br label %226

105:                                              ; preds = %93
  %106 = getelementptr inbounds i8, ptr %96, i64 1
  store ptr %106, ptr %84, align 8, !tbaa !105
  %107 = load i8, ptr %106, align 1, !tbaa !17
  %108 = icmp eq i8 %107, 99
  br i1 %108, label %109, label %226

109:                                              ; preds = %105
  %110 = getelementptr inbounds i8, ptr %96, i64 2
  store ptr %110, ptr %84, align 8, !tbaa !105
  br label %226

111:                                              ; preds = %93
  %112 = call fastcc zeroext i1 @S_could_it_be_a_POSIX_class(ptr noundef nonnull %0)
  br i1 %112, label %116, label %113

113:                                              ; preds = %111
  %114 = load ptr, ptr %84, align 8, !tbaa !105
  %115 = getelementptr inbounds i8, ptr %114, i64 1
  store ptr %115, ptr %84, align 8, !tbaa !105
  br label %116

116:                                              ; preds = %113, %111
  %117 = trunc i64 %95 to i32
  %118 = add i32 %117, 1
  %119 = call fastcc ptr @S_regclass(ptr noundef nonnull %0, ptr noundef %2, i32 noundef %118, i1 noundef zeroext %112, i1 noundef zeroext false, i1 noundef zeroext true, i1 noundef zeroext true, ptr noundef nonnull %10)
  %120 = icmp eq ptr %119, null
  br i1 %120, label %121, label %142

121:                                              ; preds = %116
  %122 = load ptr, ptr %85, align 8, !tbaa !107
  %123 = load ptr, ptr %90, align 8, !tbaa !65
  %124 = ptrtoint ptr %122 to i64
  %125 = ptrtoint ptr %123 to i64
  %126 = sub i64 %124, %125
  %127 = load ptr, ptr %79, align 8, !tbaa !112
  %128 = icmp eq ptr %127, %81
  br i1 %128, label %132, label %129

129:                                              ; preds = %121
  %130 = load ptr, ptr %91, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %130, i32 noundef 11) #15
  %131 = load ptr, ptr %90, align 8, !tbaa !65
  br label %132

132:                                              ; preds = %129, %121
  %133 = phi ptr [ %131, %129 ], [ %123, %121 ]
  %134 = icmp sgt i64 %126, 127
  %135 = select i1 %134, i64 117, i64 %126
  %136 = select i1 %134, ptr @.str.20, ptr @.str.8
  %137 = load i32, ptr %2, align 4, !tbaa !73
  %138 = sext i32 %137 to i64
  %139 = load i32, ptr %92, align 8, !tbaa !50
  %140 = icmp ne i32 %139, 0
  %141 = zext i1 %140 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.614, i64 noundef %138, i32 noundef %141, i64 noundef %135, ptr noundef %133, ptr noundef nonnull %136) #15
  br label %142

142:                                              ; preds = %132, %116
  br i1 %112, label %143, label %146

143:                                              ; preds = %142
  %144 = load ptr, ptr %84, align 8, !tbaa !105
  %145 = getelementptr inbounds i8, ptr %144, i64 -1
  store ptr %145, ptr %84, align 8, !tbaa !105
  br label %146

146:                                              ; preds = %143, %142
  %147 = load ptr, ptr %10, align 8, !tbaa !5
  %148 = icmp eq ptr %147, null
  br i1 %148, label %226, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %struct.sv, ptr %147, i64 0, i32 1
  %151 = load i32, ptr %150, align 8, !tbaa !37
  %152 = icmp ugt i32 %151, 1
  br i1 %152, label %153, label %155

153:                                              ; preds = %149
  %154 = add i32 %151, -1
  store i32 %154, ptr %150, align 8, !tbaa !37
  br label %226

155:                                              ; preds = %149
  call void @Perl_sv_free2(ptr noundef nonnull %147, i32 noundef %151) #15
  br label %226

156:                                              ; preds = %93
  %157 = add i64 %95, -1
  %158 = icmp eq i64 %95, 0
  br i1 %158, label %159, label %226

159:                                              ; preds = %156
  %160 = getelementptr inbounds i8, ptr %96, i64 1
  store ptr %160, ptr %84, align 8, !tbaa !105
  %161 = load ptr, ptr %85, align 8, !tbaa !107
  %162 = icmp ult ptr %160, %161
  br i1 %162, label %163, label %225

163:                                              ; preds = %159
  %164 = load i8, ptr %160, align 1, !tbaa !17
  %165 = icmp eq i8 %164, 41
  br i1 %165, label %166, label %225

166:                                              ; preds = %163
  %167 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 19, i64 noundef 1, ptr noundef nonnull @.str.452)
  %168 = load ptr, ptr %79, align 8, !tbaa !112
  %169 = icmp eq ptr %168, %81
  br i1 %169, label %175, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %struct.regnode_1, ptr %167, i64 0, i32 3
  store i32 0, ptr %171, align 4, !tbaa !148
  %172 = getelementptr inbounds %struct.regnode, ptr %167, i64 0, i32 1
  store i8 19, ptr %172, align 1, !tbaa !141
  %173 = getelementptr inbounds %struct.regnode, ptr %167, i64 0, i32 2
  store i16 0, ptr %173, align 2, !tbaa !222
  %174 = getelementptr inbounds %struct.regnode, ptr %167, i64 2
  store ptr %174, ptr %79, align 8, !tbaa !112
  br label %175

175:                                              ; preds = %166, %170
  %176 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %177 = load i64, ptr %176, align 8, !tbaa !111
  %178 = add i64 %177, 9
  store i64 %178, ptr %176, align 8, !tbaa !111
  %179 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %180 = load ptr, ptr %79, align 8, !tbaa !112
  %181 = icmp eq ptr %180, %81
  br i1 %181, label %254, label %182

182:                                              ; preds = %175
  %183 = load volatile i64, ptr %9, align 8, !tbaa !9
  %184 = and i64 %183, 262144
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %188

186:                                              ; preds = %182
  %187 = ptrtoint ptr %167 to i64
  br label %202

188:                                              ; preds = %182
  %189 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %190 = load ptr, ptr %189, align 8, !tbaa !131
  %191 = ptrtoint ptr %167 to i64
  %192 = ptrtoint ptr %190 to i64
  %193 = sub i64 %191, %192
  %194 = lshr exact i64 %193, 2
  %195 = trunc i64 %194 to i32
  %196 = load ptr, ptr %84, align 8, !tbaa !105
  %197 = ptrtoint ptr %196 to i64
  %198 = ptrtoint ptr %4 to i64
  %199 = sub i64 %197, %198
  %200 = trunc i64 %199 to i32
  %201 = add i32 %200, 1
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 13412, i32 noundef %195, i32 noundef %201) #15
  br label %202

202:                                              ; preds = %186, %188
  %203 = phi i64 [ %187, %186 ], [ %191, %188 ]
  %204 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %205 = load ptr, ptr %204, align 8, !tbaa !131
  %206 = ptrtoint ptr %205 to i64
  %207 = sub i64 %203, %206
  %208 = icmp slt i64 %207, 0
  br i1 %208, label %209, label %212

209:                                              ; preds = %202
  %210 = lshr exact i64 %207, 2
  %211 = trunc i64 %210 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %211) #15
  br label %254

212:                                              ; preds = %202
  %213 = load ptr, ptr %84, align 8, !tbaa !105
  %214 = ptrtoint ptr %213 to i64
  %215 = ptrtoint ptr %4 to i64
  %216 = sub i64 %214, %215
  %217 = trunc i64 %216 to i32
  %218 = add i32 %217, 1
  %219 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %220 = load ptr, ptr %219, align 8, !tbaa !130
  %221 = getelementptr inbounds %struct.regexp_internal, ptr %220, i64 0, i32 1
  %222 = load ptr, ptr %221, align 8, !tbaa !17
  %223 = lshr exact i64 %207, 1
  %224 = getelementptr inbounds i32, ptr %222, i64 %223
  store i32 %218, ptr %224, align 4, !tbaa !73
  br label %254

225:                                              ; preds = %163, %159
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #15
  br label %232

226:                                              ; preds = %99, %103, %93, %109, %105, %156, %146, %153, %155
  %227 = phi i64 [ %95, %93 ], [ %157, %156 ], [ %95, %109 ], [ %95, %105 ], [ %104, %103 ], [ %95, %99 ], [ %95, %146 ], [ %95, %153 ], [ %95, %155 ]
  %228 = load ptr, ptr %84, align 8, !tbaa !105
  %229 = getelementptr inbounds i8, ptr %228, i64 1
  store ptr %229, ptr %84, align 8, !tbaa !105
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #15
  %230 = load ptr, ptr %85, align 8, !tbaa !107
  %231 = icmp ult ptr %229, %230
  br i1 %231, label %93, label %232

232:                                              ; preds = %226, %83, %225
  %233 = phi ptr [ %87, %83 ], [ %161, %225 ], [ %230, %226 ]
  %234 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %235 = load ptr, ptr %234, align 8, !tbaa !65
  %236 = ptrtoint ptr %233 to i64
  %237 = ptrtoint ptr %235 to i64
  %238 = sub i64 %236, %237
  %239 = load ptr, ptr %79, align 8, !tbaa !112
  %240 = icmp eq ptr %239, %81
  br i1 %240, label %245, label %241

241:                                              ; preds = %232
  %242 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %243 = load ptr, ptr %242, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %243, i32 noundef 11) #15
  %244 = load ptr, ptr %234, align 8, !tbaa !65
  br label %245

245:                                              ; preds = %232, %241
  %246 = phi ptr [ %235, %232 ], [ %244, %241 ]
  %247 = icmp sgt i64 %238, 127
  %248 = select i1 %247, i64 117, i64 %238
  %249 = select i1 %247, ptr @.str.20, ptr @.str.8
  %250 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %251 = load i32, ptr %250, align 8, !tbaa !50
  %252 = icmp ne i32 %251, 0
  %253 = zext i1 %252 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.615, i32 noundef %253, i64 noundef %248, ptr noundef %246, ptr noundef nonnull %249) #15
  br label %255

254:                                              ; preds = %209, %212, %175
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #15
  br label %1326

255:                                              ; preds = %245, %77
  %256 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %257 = load i32, ptr %256, align 8, !tbaa !50
  %258 = icmp ne i32 %257, 0
  %259 = zext i1 %258 to i32
  %260 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %261 = load ptr, ptr %260, align 8, !tbaa !105
  %262 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %263 = load ptr, ptr %262, align 8, !tbaa !65
  %264 = ptrtoint ptr %261 to i64
  %265 = ptrtoint ptr %263 to i64
  %266 = sub i64 %264, %265
  %267 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %268 = load ptr, ptr %267, align 8, !tbaa !107
  %269 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %270 = load ptr, ptr %269, align 8, !tbaa !106
  %271 = ptrtoint ptr %268 to i64
  %272 = ptrtoint ptr %270 to i64
  %273 = add i64 %266, %272
  %274 = sub i64 %271, %273
  %275 = getelementptr inbounds i8, ptr %263, i64 %266
  call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 54, ptr noundef nonnull @.str.616, i32 noundef %259, i64 noundef %266, ptr noundef %263, i32 noundef %259, i64 noundef %274, ptr noundef %275) #15
  %276 = call ptr @Perl_newSV_type(i32 noundef 11) #15
  %277 = call ptr @Perl_sv_2mortal(ptr noundef %276) #15
  %278 = call ptr @Perl_newSV_type(i32 noundef 11) #15
  %279 = call ptr @Perl_sv_2mortal(ptr noundef %278) #15
  %280 = load ptr, ptr %260, align 8, !tbaa !105
  %281 = load ptr, ptr %267, align 8, !tbaa !107
  %282 = icmp ult ptr %280, %281
  br i1 %282, label %283, label %1059

283:                                              ; preds = %255
  %284 = icmp eq ptr %276, null
  %285 = getelementptr inbounds %struct.av, ptr %276, i64 0, i32 2
  %286 = icmp eq ptr %278, null
  %287 = getelementptr inbounds %struct.av, ptr %278, i64 0, i32 2
  %288 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %289 = add i32 %3, 1
  br label %290

290:                                              ; preds = %283, %1054
  %291 = phi ptr [ %280, %283 ], [ %1056, %1054 ]
  %292 = phi i64 [ 0, %283 ], [ %1042, %1054 ]
  %293 = phi ptr [ undef, %283 ], [ %1041, %1054 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #15
  store ptr null, ptr %11, align 8, !tbaa !5
  %294 = call fastcc ptr @S_regpatws(ptr noundef nonnull %0, ptr noundef %291, i1 noundef zeroext true)
  store ptr %294, ptr %260, align 8, !tbaa !105
  %295 = load ptr, ptr %267, align 8, !tbaa !107
  %296 = icmp ult ptr %294, %295
  br i1 %296, label %299, label %297

297:                                              ; preds = %290
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.617) #15
  %298 = load ptr, ptr %260, align 8, !tbaa !105
  br label %299

299:                                              ; preds = %297, %290
  %300 = phi ptr [ %298, %297 ], [ %294, %290 ]
  %301 = load i8, ptr %300, align 1, !tbaa !17
  %302 = zext i8 %301 to i32
  %303 = icmp eq i8 %301, 93
  br label %304

304:                                              ; preds = %816, %299
  %305 = phi ptr [ %293, %299 ], [ %715, %816 ]
  br i1 %284, label %306, label %307

306:                                              ; preds = %304
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.382, i32 noundef 20) #15
  br label %307

307:                                              ; preds = %306, %304
  %308 = load i32, ptr %285, align 4, !tbaa !73
  %309 = and i32 %308, 255
  %310 = icmp eq i32 %309, 11
  br i1 %310, label %313, label %311

311:                                              ; preds = %307
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.383, i32 noundef 21) #15
  %312 = load i32, ptr %285, align 4, !tbaa !13
  br label %313

313:                                              ; preds = %311, %307
  %314 = phi i32 [ %308, %307 ], [ %312, %311 ]
  %315 = and i32 %314, 8388608
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %320, label %317

317:                                              ; preds = %313
  %318 = call i32 @Perl_mg_size(ptr noundef nonnull %276) #15
  %319 = zext i32 %318 to i64
  br label %324

320:                                              ; preds = %313
  %321 = load ptr, ptr %276, align 8, !tbaa !81
  %322 = getelementptr inbounds %struct.xpvav, ptr %321, i64 0, i32 2
  %323 = load i64, ptr %322, align 8, !tbaa !83
  br label %324

324:                                              ; preds = %317, %320
  %325 = phi i64 [ %319, %317 ], [ %323, %320 ]
  switch i8 %301, label %853 [
    i8 40, label %326
    i8 92, label %504
    i8 91, label %531
    i8 93, label %564
    i8 41, label %569
    i8 38, label %652
    i8 124, label %652
    i8 43, label %652
    i8 45, label %652
    i8 94, label %652
    i8 33, label %818
  ]

326:                                              ; preds = %324
  %327 = load ptr, ptr %260, align 8, !tbaa !105
  %328 = load ptr, ptr %267, align 8, !tbaa !107
  %329 = icmp ult ptr %327, %328
  br i1 %329, label %330, label %429

330:                                              ; preds = %326
  %331 = getelementptr inbounds i8, ptr %327, i64 1
  %332 = load i8, ptr %331, align 1, !tbaa !17
  %333 = icmp eq i8 %332, 63
  br i1 %333, label %334, label %429

334:                                              ; preds = %330
  %335 = load i32, ptr %0, align 8, !tbaa !66
  %336 = getelementptr inbounds i8, ptr %327, i64 2
  store ptr %336, ptr %260, align 8, !tbaa !105
  call fastcc void @S_parse_lparen_question_flags(ptr noundef nonnull %0)
  %337 = load ptr, ptr %260, align 8, !tbaa !105
  %338 = icmp eq ptr %337, %336
  %339 = load ptr, ptr %267, align 8, !tbaa !107
  br i1 %338, label %358, label %340

340:                                              ; preds = %334
  %341 = getelementptr inbounds i8, ptr %339, i64 -4
  %342 = icmp ult ptr %337, %341
  br i1 %342, label %343, label %358

343:                                              ; preds = %340
  %344 = load i8, ptr %337, align 1, !tbaa !17
  %345 = icmp eq i8 %344, 58
  br i1 %345, label %346, label %358

346:                                              ; preds = %343
  %347 = getelementptr inbounds i8, ptr %337, i64 1
  store ptr %347, ptr %260, align 8, !tbaa !105
  %348 = load i8, ptr %347, align 1, !tbaa !17
  %349 = icmp eq i8 %348, 40
  br i1 %349, label %350, label %358

350:                                              ; preds = %346
  %351 = getelementptr inbounds i8, ptr %337, i64 2
  store ptr %351, ptr %260, align 8, !tbaa !105
  %352 = load i8, ptr %351, align 1, !tbaa !17
  %353 = icmp eq i8 %352, 63
  br i1 %353, label %354, label %358

354:                                              ; preds = %350
  %355 = getelementptr inbounds i8, ptr %337, i64 3
  store ptr %355, ptr %260, align 8, !tbaa !105
  %356 = load i8, ptr %355, align 1, !tbaa !17
  %357 = icmp eq i8 %356, 91
  br i1 %357, label %402, label %358

358:                                              ; preds = %354, %350, %346, %343, %340, %334
  %359 = phi ptr [ %355, %354 ], [ %351, %350 ], [ %347, %346 ], [ %337, %343 ], [ %337, %340 ], [ %336, %334 ]
  %360 = getelementptr inbounds i8, ptr %339, i64 -4
  %361 = icmp ult ptr %359, %360
  br i1 %361, label %362, label %376

362:                                              ; preds = %358
  %363 = icmp eq ptr %359, %336
  br i1 %363, label %378, label %364

364:                                              ; preds = %362
  %365 = load i32, ptr %256, align 8, !tbaa !50
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %373, label %367

367:                                              ; preds = %364
  %368 = load i8, ptr %359, align 1, !tbaa !17
  %369 = zext i8 %368 to i64
  %370 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %369
  %371 = load i8, ptr %370, align 1, !tbaa !17
  %372 = zext i8 %371 to i64
  br label %373

373:                                              ; preds = %364, %367
  %374 = phi i64 [ %372, %367 ], [ 1, %364 ]
  %375 = getelementptr inbounds i8, ptr %359, i64 %374
  br label %376

376:                                              ; preds = %358, %373
  %377 = phi ptr [ %375, %373 ], [ %339, %358 ]
  store ptr %377, ptr %260, align 8, !tbaa !105
  br label %378

378:                                              ; preds = %376, %362
  %379 = phi ptr [ %336, %362 ], [ %377, %376 ]
  %380 = load ptr, ptr %79, align 8, !tbaa !112
  %381 = icmp eq ptr %380, %81
  br i1 %381, label %386, label %382

382:                                              ; preds = %378
  %383 = load ptr, ptr %288, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %383, i32 noundef 11) #15
  %384 = load ptr, ptr %260, align 8, !tbaa !105
  %385 = load ptr, ptr %267, align 8, !tbaa !107
  br label %386

386:                                              ; preds = %378, %382
  %387 = phi ptr [ %339, %378 ], [ %385, %382 ]
  %388 = phi ptr [ %379, %378 ], [ %384, %382 ]
  %389 = icmp ugt ptr %388, %387
  %390 = select i1 %389, ptr %387, ptr %388
  %391 = load ptr, ptr %262, align 8, !tbaa !65
  %392 = ptrtoint ptr %390 to i64
  %393 = ptrtoint ptr %391 to i64
  %394 = sub i64 %392, %393
  %395 = load i32, ptr %256, align 8, !tbaa !50
  %396 = icmp ne i32 %395, 0
  %397 = zext i1 %396 to i32
  %398 = ptrtoint ptr %387 to i64
  %399 = sub i64 %398, %392
  %400 = getelementptr inbounds i8, ptr %391, i64 %394
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.618, i32 noundef %397, i64 noundef %394, ptr noundef %391, i32 noundef %397, i64 noundef %399, ptr noundef %400) #15
  %401 = load ptr, ptr %260, align 8, !tbaa !105
  br label %402

402:                                              ; preds = %386, %354
  %403 = phi ptr [ %401, %386 ], [ %355, %354 ]
  %404 = getelementptr inbounds i8, ptr %403, i64 1
  store ptr %404, ptr %260, align 8, !tbaa !105
  %405 = call fastcc ptr @S_handle_regex_sets(ptr noundef nonnull %0, ptr noundef nonnull %11, ptr noundef %2, i32 noundef %289, ptr noundef %4)
  %406 = load ptr, ptr %260, align 8, !tbaa !105
  %407 = getelementptr inbounds i8, ptr %406, i64 1
  store ptr %407, ptr %260, align 8, !tbaa !105
  %408 = load ptr, ptr %267, align 8, !tbaa !107
  %409 = icmp ult ptr %407, %408
  br i1 %409, label %410, label %413

410:                                              ; preds = %402
  %411 = load i8, ptr %407, align 1, !tbaa !17
  %412 = icmp eq i8 %411, 41
  br i1 %412, label %416, label %413

413:                                              ; preds = %410, %402
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.619, i32 noundef 13598) #15
  %414 = load ptr, ptr %260, align 8, !tbaa !105
  %415 = load ptr, ptr %267, align 8, !tbaa !107
  br label %416

416:                                              ; preds = %410, %413
  %417 = phi ptr [ %408, %410 ], [ %415, %413 ]
  %418 = phi ptr [ %407, %410 ], [ %414, %413 ]
  %419 = getelementptr inbounds i8, ptr %418, i64 1
  store ptr %419, ptr %260, align 8, !tbaa !105
  %420 = icmp ult ptr %419, %417
  br i1 %420, label %421, label %424

421:                                              ; preds = %416
  %422 = load i8, ptr %419, align 1, !tbaa !17
  %423 = icmp eq i8 %422, 41
  br i1 %423, label %426, label %424

424:                                              ; preds = %421, %416
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.619, i32 noundef 13603) #15
  %425 = load ptr, ptr %260, align 8, !tbaa !105
  br label %426

426:                                              ; preds = %421, %424
  %427 = phi ptr [ %419, %421 ], [ %425, %424 ]
  %428 = getelementptr inbounds i8, ptr %427, i64 1
  store ptr %428, ptr %260, align 8, !tbaa !105
  store i32 %335, ptr %0, align 8, !tbaa !66
  br label %887

429:                                              ; preds = %330, %326
  %430 = shl i64 %325, 32
  %431 = ashr exact i64 %430, 32
  %432 = icmp slt i64 %431, %292
  br i1 %432, label %499, label %433

433:                                              ; preds = %429
  %434 = call ptr @Perl_av_fetch(ptr noundef nonnull %276, i64 noundef %431, i32 noundef 0) #15
  %435 = icmp eq ptr %434, null
  br i1 %435, label %475, label %436

436:                                              ; preds = %433
  %437 = load ptr, ptr %434, align 8, !tbaa !5
  %438 = getelementptr inbounds %struct.sv, ptr %437, i64 0, i32 2
  %439 = load i32, ptr %438, align 4, !tbaa !13
  %440 = and i32 %439, 256
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %458, label %442

442:                                              ; preds = %436
  %443 = and i32 %439, -2145386240
  %444 = icmp eq i32 %443, -2147483392
  br i1 %444, label %445, label %449

445:                                              ; preds = %442
  %446 = load ptr, ptr %437, align 8, !tbaa !16
  %447 = getelementptr inbounds %struct.xpvuv, ptr %446, i64 0, i32 4
  %448 = load i64, ptr %447, align 8, !tbaa !17
  br label %451

449:                                              ; preds = %442
  %450 = call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %437, i32 noundef 2) #15
  br label %451

451:                                              ; preds = %449, %445
  %452 = phi i64 [ %448, %445 ], [ %450, %449 ]
  %453 = icmp eq i64 %452, 33
  br i1 %453, label %454, label %475

454:                                              ; preds = %451
  %455 = load ptr, ptr %434, align 8, !tbaa !5
  %456 = getelementptr inbounds %struct.sv, ptr %455, i64 0, i32 2
  %457 = load i32, ptr %456, align 4, !tbaa !13
  br label %458

458:                                              ; preds = %454, %436
  %459 = phi i32 [ %457, %454 ], [ %439, %436 ]
  %460 = and i32 %459, 256
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %462, label %499

462:                                              ; preds = %458
  %463 = icmp eq i64 %431, %292
  br i1 %463, label %475, label %464

464:                                              ; preds = %462
  %465 = add i64 %430, -4294967296
  %466 = ashr exact i64 %465, 32
  %467 = call ptr @Perl_av_fetch(ptr noundef nonnull %276, i64 noundef %466, i32 noundef 0) #15
  %468 = icmp eq ptr %467, null
  br i1 %468, label %475, label %469

469:                                              ; preds = %464
  %470 = load ptr, ptr %467, align 8, !tbaa !5
  %471 = getelementptr inbounds %struct.sv, ptr %470, i64 0, i32 2
  %472 = load i32, ptr %471, align 4, !tbaa !13
  %473 = and i32 %472, 256
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %475, label %499

475:                                              ; preds = %469, %464, %462, %451, %433
  %476 = phi ptr [ %293, %451 ], [ %293, %462 ], [ %467, %469 ], [ null, %464 ], [ %293, %433 ]
  %477 = load ptr, ptr %260, align 8, !tbaa !105
  %478 = getelementptr inbounds i8, ptr %477, i64 1
  store ptr %478, ptr %260, align 8, !tbaa !105
  %479 = load ptr, ptr %79, align 8, !tbaa !112
  %480 = icmp eq ptr %479, %81
  br i1 %480, label %484, label %481

481:                                              ; preds = %475
  %482 = load ptr, ptr %288, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %482, i32 noundef 11) #15
  %483 = load ptr, ptr %260, align 8, !tbaa !105
  br label %484

484:                                              ; preds = %475, %481
  %485 = phi ptr [ %478, %475 ], [ %483, %481 ]
  %486 = load ptr, ptr %267, align 8, !tbaa !107
  %487 = icmp ugt ptr %485, %486
  %488 = select i1 %487, ptr %486, ptr %485
  %489 = load ptr, ptr %262, align 8, !tbaa !65
  %490 = ptrtoint ptr %488 to i64
  %491 = ptrtoint ptr %489 to i64
  %492 = sub i64 %490, %491
  %493 = load i32, ptr %256, align 8, !tbaa !50
  %494 = icmp ne i32 %493, 0
  %495 = zext i1 %494 to i32
  %496 = ptrtoint ptr %486 to i64
  %497 = sub i64 %496, %490
  %498 = getelementptr inbounds i8, ptr %489, i64 %492
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.620, i32 noundef %495, i64 noundef %492, ptr noundef %489, i32 noundef %495, i64 noundef %497, ptr noundef %498) #15
  br label %499

499:                                              ; preds = %458, %469, %484, %429
  %500 = phi ptr [ %476, %484 ], [ %293, %458 ], [ %467, %469 ], [ %293, %429 ]
  %501 = add i64 %430, 4294967296
  %502 = ashr exact i64 %501, 32
  %503 = call ptr @Perl_newSViv(i64 noundef %502) #15
  call void @Perl_av_push(ptr noundef %278, ptr noundef %503) #15
  br label %1040

504:                                              ; preds = %324
  %505 = call fastcc ptr @S_regclass(ptr noundef nonnull %0, ptr noundef %2, i32 noundef %289, i1 noundef zeroext true, i1 noundef zeroext false, i1 noundef zeroext false, i1 noundef zeroext true, ptr noundef nonnull %11)
  %506 = icmp eq ptr %505, null
  br i1 %506, label %507, label %528

507:                                              ; preds = %504
  %508 = load ptr, ptr %267, align 8, !tbaa !107
  %509 = load ptr, ptr %262, align 8, !tbaa !65
  %510 = ptrtoint ptr %508 to i64
  %511 = ptrtoint ptr %509 to i64
  %512 = sub i64 %510, %511
  %513 = load ptr, ptr %79, align 8, !tbaa !112
  %514 = icmp eq ptr %513, %81
  br i1 %514, label %518, label %515

515:                                              ; preds = %507
  %516 = load ptr, ptr %288, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %516, i32 noundef 11) #15
  %517 = load ptr, ptr %262, align 8, !tbaa !65
  br label %518

518:                                              ; preds = %515, %507
  %519 = phi ptr [ %517, %515 ], [ %509, %507 ]
  %520 = icmp sgt i64 %512, 127
  %521 = select i1 %520, ptr @.str.20, ptr @.str.8
  %522 = select i1 %520, i64 117, i64 %512
  %523 = load i32, ptr %2, align 4, !tbaa !73
  %524 = sext i32 %523 to i64
  %525 = load i32, ptr %256, align 8, !tbaa !50
  %526 = icmp ne i32 %525, 0
  %527 = zext i1 %526 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.614, i64 noundef %524, i32 noundef %527, i64 noundef %522, ptr noundef %519, ptr noundef nonnull %521) #15
  br label %528

528:                                              ; preds = %518, %504
  %529 = load ptr, ptr %260, align 8, !tbaa !105
  %530 = getelementptr inbounds i8, ptr %529, i64 -1
  store ptr %530, ptr %260, align 8, !tbaa !105
  br label %887

531:                                              ; preds = %324
  %532 = call fastcc zeroext i1 @S_could_it_be_a_POSIX_class(ptr noundef nonnull %0)
  br i1 %532, label %536, label %533

533:                                              ; preds = %531
  %534 = load ptr, ptr %260, align 8, !tbaa !105
  %535 = getelementptr inbounds i8, ptr %534, i64 1
  store ptr %535, ptr %260, align 8, !tbaa !105
  br label %536

536:                                              ; preds = %533, %531
  %537 = call fastcc ptr @S_regclass(ptr noundef nonnull %0, ptr noundef %2, i32 noundef %289, i1 noundef zeroext %532, i1 noundef zeroext false, i1 noundef zeroext false, i1 noundef zeroext true, ptr noundef nonnull %11)
  %538 = icmp eq ptr %537, null
  br i1 %538, label %539, label %560

539:                                              ; preds = %536
  %540 = load ptr, ptr %267, align 8, !tbaa !107
  %541 = load ptr, ptr %262, align 8, !tbaa !65
  %542 = ptrtoint ptr %540 to i64
  %543 = ptrtoint ptr %541 to i64
  %544 = sub i64 %542, %543
  %545 = load ptr, ptr %79, align 8, !tbaa !112
  %546 = icmp eq ptr %545, %81
  br i1 %546, label %550, label %547

547:                                              ; preds = %539
  %548 = load ptr, ptr %288, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %548, i32 noundef 11) #15
  %549 = load ptr, ptr %262, align 8, !tbaa !65
  br label %550

550:                                              ; preds = %547, %539
  %551 = phi ptr [ %549, %547 ], [ %541, %539 ]
  %552 = icmp sgt i64 %544, 127
  %553 = select i1 %552, ptr @.str.20, ptr @.str.8
  %554 = select i1 %552, i64 117, i64 %544
  %555 = load i32, ptr %2, align 4, !tbaa !73
  %556 = sext i32 %555 to i64
  %557 = load i32, ptr %256, align 8, !tbaa !50
  %558 = icmp ne i32 %557, 0
  %559 = zext i1 %558 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.614, i64 noundef %556, i32 noundef %559, i64 noundef %554, ptr noundef %551, ptr noundef nonnull %553) #15
  br label %560

560:                                              ; preds = %550, %536
  br i1 %532, label %561, label %887

561:                                              ; preds = %560
  %562 = load ptr, ptr %260, align 8, !tbaa !105
  %563 = getelementptr inbounds i8, ptr %562, i64 -1
  store ptr %563, ptr %260, align 8, !tbaa !105
  br label %887

564:                                              ; preds = %324
  %565 = trunc i64 %325 to i32
  %566 = icmp sgt i32 %565, 0
  br i1 %566, label %567, label %1053

567:                                              ; preds = %564
  %568 = shl i64 %325, 32
  br label %674

569:                                              ; preds = %324
  br i1 %286, label %570, label %571

570:                                              ; preds = %569
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.382, i32 noundef 20) #15
  br label %571

571:                                              ; preds = %570, %569
  %572 = load i32, ptr %287, align 4, !tbaa !73
  %573 = and i32 %572, 255
  %574 = icmp eq i32 %573, 11
  br i1 %574, label %577, label %575

575:                                              ; preds = %571
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.383, i32 noundef 21) #15
  %576 = load i32, ptr %287, align 4, !tbaa !13
  br label %577

577:                                              ; preds = %575, %571
  %578 = phi i32 [ %572, %571 ], [ %576, %575 ]
  %579 = and i32 %578, 8388608
  %580 = icmp eq i32 %579, 0
  br i1 %580, label %584, label %581

581:                                              ; preds = %577
  %582 = call i32 @Perl_mg_size(ptr noundef nonnull %278) #15
  %583 = sext i32 %582 to i64
  br label %588

584:                                              ; preds = %577
  %585 = load ptr, ptr %278, align 8, !tbaa !81
  %586 = getelementptr inbounds %struct.xpvav, ptr %585, i64 0, i32 2
  %587 = load i64, ptr %586, align 8, !tbaa !83
  br label %588

588:                                              ; preds = %581, %584
  %589 = phi i64 [ %583, %581 ], [ %587, %584 ]
  %590 = icmp slt i64 %589, 0
  br i1 %590, label %591, label %614

591:                                              ; preds = %588
  %592 = load ptr, ptr %260, align 8, !tbaa !105
  %593 = getelementptr inbounds i8, ptr %592, i64 1
  store ptr %593, ptr %260, align 8, !tbaa !105
  %594 = load ptr, ptr %79, align 8, !tbaa !112
  %595 = icmp eq ptr %594, %81
  br i1 %595, label %599, label %596

596:                                              ; preds = %591
  %597 = load ptr, ptr %288, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %597, i32 noundef 11) #15
  %598 = load ptr, ptr %260, align 8, !tbaa !105
  br label %599

599:                                              ; preds = %591, %596
  %600 = phi ptr [ %593, %591 ], [ %598, %596 ]
  %601 = load ptr, ptr %267, align 8, !tbaa !107
  %602 = icmp ugt ptr %600, %601
  %603 = select i1 %602, ptr %601, ptr %600
  %604 = load ptr, ptr %262, align 8, !tbaa !65
  %605 = ptrtoint ptr %603 to i64
  %606 = ptrtoint ptr %604 to i64
  %607 = sub i64 %605, %606
  %608 = load i32, ptr %256, align 8, !tbaa !50
  %609 = icmp ne i32 %608, 0
  %610 = zext i1 %609 to i32
  %611 = ptrtoint ptr %601 to i64
  %612 = sub i64 %611, %605
  %613 = getelementptr inbounds i8, ptr %604, i64 %607
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.621, i32 noundef %610, i64 noundef %607, ptr noundef %604, i32 noundef %610, i64 noundef %612, ptr noundef %613) #15
  br label %614

614:                                              ; preds = %599, %588
  %615 = shl i64 %325, 32
  %616 = ashr exact i64 %615, 32
  %617 = icmp sgt i64 %616, %292
  br i1 %617, label %674, label %618

618:                                              ; preds = %614
  %619 = call ptr @Perl_av_pop(ptr noundef nonnull %278) #15
  %620 = icmp eq ptr %619, null
  br i1 %620, label %621, label %622

621:                                              ; preds = %618
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.622, i32 noundef 13708) #15
  br label %622

622:                                              ; preds = %618, %621
  %623 = getelementptr inbounds %struct.sv, ptr %619, i64 0, i32 2
  %624 = load i32, ptr %623, align 4, !tbaa !13
  %625 = and i32 %624, 2097408
  %626 = icmp eq i32 %625, 256
  br i1 %626, label %627, label %631

627:                                              ; preds = %622
  %628 = load ptr, ptr %619, align 8, !tbaa !16
  %629 = getelementptr inbounds %struct.xpviv, ptr %628, i64 0, i32 4
  %630 = load i64, ptr %629, align 8, !tbaa !17
  br label %633

631:                                              ; preds = %622
  %632 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %619, i32 noundef 2) #15
  br label %633

633:                                              ; preds = %631, %627
  %634 = phi i64 [ %630, %627 ], [ %632, %631 ]
  %635 = getelementptr inbounds %struct.sv, ptr %619, i64 0, i32 1
  %636 = load i32, ptr %635, align 8, !tbaa !37
  %637 = icmp ugt i32 %636, 1
  br i1 %637, label %638, label %640

638:                                              ; preds = %633
  %639 = add i32 %636, -1
  store i32 %639, ptr %635, align 8, !tbaa !37
  br label %641

640:                                              ; preds = %633
  call void @Perl_sv_free2(ptr noundef nonnull %619, i32 noundef %636) #15
  br label %641

641:                                              ; preds = %638, %640
  %642 = call i64 @llvm.smax.i64(i64 %634, i64 1)
  %643 = add nsw i64 %642, -1
  %644 = call ptr @Perl_av_pop(ptr noundef nonnull %276) #15
  store ptr %644, ptr %11, align 8, !tbaa !5
  %645 = getelementptr inbounds %struct.sv, ptr %644, i64 0, i32 2
  %646 = load i32, ptr %645, align 4, !tbaa !13
  %647 = and i32 %646, 256
  %648 = icmp eq i32 %647, 0
  br i1 %648, label %887, label %649

649:                                              ; preds = %641
  %650 = load ptr, ptr %260, align 8, !tbaa !105
  %651 = getelementptr inbounds i8, ptr %650, i64 1
  store ptr %651, ptr %260, align 8, !tbaa !105
  br label %1052

652:                                              ; preds = %324, %324, %324, %324, %324
  %653 = shl i64 %325, 32
  %654 = ashr exact i64 %653, 32
  %655 = sub nsw i64 %654, %292
  %656 = icmp slt i64 %655, 0
  %657 = icmp eq i64 %655, 1
  %658 = or i1 %656, %657
  br i1 %658, label %687, label %659

659:                                              ; preds = %652
  %660 = call ptr @Perl_av_fetch(ptr noundef nonnull %276, i64 noundef %654, i32 noundef 0) #15
  %661 = icmp eq ptr %660, null
  br i1 %661, label %687, label %662

662:                                              ; preds = %659
  %663 = load ptr, ptr %660, align 8, !tbaa !5
  %664 = getelementptr inbounds %struct.sv, ptr %663, i64 0, i32 2
  %665 = load i32, ptr %664, align 4, !tbaa !13
  %666 = and i32 %665, 256
  %667 = icmp eq i32 %666, 0
  br i1 %667, label %668, label %687

668:                                              ; preds = %662
  %669 = icmp ult i64 %655, 2
  br i1 %669, label %670, label %674

670:                                              ; preds = %668
  %671 = call ptr @Perl_av_pop(ptr noundef nonnull %276) #15
  %672 = zext i8 %301 to i64
  %673 = call ptr @Perl_newSVuv(i64 noundef %672) #15
  call void @Perl_av_push(ptr noundef nonnull %276, ptr noundef %673) #15
  call void @Perl_av_push(ptr noundef nonnull %276, ptr noundef %671) #15
  br label %1040

674:                                              ; preds = %567, %668, %614
  %675 = phi i64 [ %568, %567 ], [ %653, %668 ], [ %615, %614 ]
  %676 = add i64 %675, -8589934592
  %677 = ashr exact i64 %676, 32
  %678 = call ptr @Perl_av_fetch(ptr noundef nonnull %276, i64 noundef %677, i32 noundef 0) #15
  %679 = icmp eq ptr %678, null
  br i1 %679, label %686, label %680

680:                                              ; preds = %674
  %681 = load ptr, ptr %678, align 8, !tbaa !5
  %682 = getelementptr inbounds %struct.sv, ptr %681, i64 0, i32 2
  %683 = load i32, ptr %682, align 4, !tbaa !13
  %684 = and i32 %683, 256
  %685 = icmp eq i32 %684, 0
  br i1 %685, label %686, label %712

686:                                              ; preds = %680, %674
  br i1 %303, label %1053, label %687

687:                                              ; preds = %686, %652, %659, %662
  %688 = phi ptr [ %305, %652 ], [ %305, %662 ], [ %678, %686 ], [ %305, %659 ]
  %689 = load ptr, ptr %260, align 8, !tbaa !105
  %690 = getelementptr inbounds i8, ptr %689, i64 1
  store ptr %690, ptr %260, align 8, !tbaa !105
  %691 = load ptr, ptr %79, align 8, !tbaa !112
  %692 = icmp eq ptr %691, %81
  br i1 %692, label %696, label %693

693:                                              ; preds = %687
  %694 = load ptr, ptr %288, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %694, i32 noundef 11) #15
  %695 = load ptr, ptr %260, align 8, !tbaa !105
  br label %696

696:                                              ; preds = %687, %693
  %697 = phi ptr [ %690, %687 ], [ %695, %693 ]
  %698 = load ptr, ptr %262, align 8, !tbaa !65
  %699 = ptrtoint ptr %697 to i64
  %700 = ptrtoint ptr %698 to i64
  %701 = sub i64 %699, %700
  %702 = load i32, ptr %256, align 8, !tbaa !50
  %703 = icmp ne i32 %702, 0
  %704 = zext i1 %703 to i32
  %705 = load ptr, ptr %267, align 8, !tbaa !107
  %706 = ptrtoint ptr %705 to i64
  %707 = sub i64 %706, %699
  %708 = getelementptr inbounds i8, ptr %698, i64 %701
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %703, ptr noundef nonnull @.str.623, ptr nonnull poison, i32 noundef %302, i32 noundef %704, i64 noundef %701, ptr noundef %698, i32 noundef %704, i64 noundef %707, ptr noundef %708)
  %709 = load ptr, ptr %688, align 8, !tbaa !5
  %710 = getelementptr inbounds %struct.sv, ptr %709, i64 0, i32 2
  %711 = load i32, ptr %710, align 4, !tbaa !13
  br label %712

712:                                              ; preds = %696, %680
  %713 = phi i32 [ %711, %696 ], [ %683, %680 ]
  %714 = phi ptr [ %709, %696 ], [ %681, %680 ]
  %715 = phi ptr [ %688, %696 ], [ %678, %680 ]
  %716 = and i32 %713, -2145386240
  %717 = icmp eq i32 %716, -2147483392
  br i1 %717, label %718, label %722

718:                                              ; preds = %712
  %719 = load ptr, ptr %714, align 8, !tbaa !16
  %720 = getelementptr inbounds %struct.xpvuv, ptr %719, i64 0, i32 4
  %721 = load i64, ptr %720, align 8, !tbaa !17
  br label %724

722:                                              ; preds = %712
  %723 = call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %714, i32 noundef 2) #15
  br label %724

724:                                              ; preds = %722, %718
  %725 = phi i64 [ %721, %718 ], [ %723, %722 ]
  %726 = trunc i64 %725 to i8
  switch i8 %301, label %730 [
    i8 93, label %729
    i8 38, label %731
    i8 94, label %727
    i8 124, label %727
    i8 43, label %727
    i8 45, label %727
    i8 41, label %728
  ]

727:                                              ; preds = %724, %724, %724, %724
  br label %731

728:                                              ; preds = %724
  br label %731

729:                                              ; preds = %724
  br label %731

730:                                              ; preds = %724
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.220, i32 noundef 13291) #15
  br label %731

731:                                              ; preds = %724, %727, %728, %729, %730
  %732 = phi i32 [ 0, %730 ], [ 1, %729 ], [ 2, %728 ], [ 3, %727 ], [ 4, %724 ]
  switch i8 %726, label %737 [
    i8 33, label %738
    i8 38, label %733
    i8 94, label %734
    i8 124, label %734
    i8 43, label %734
    i8 45, label %734
    i8 41, label %735
    i8 93, label %736
  ]

733:                                              ; preds = %731
  br label %738

734:                                              ; preds = %731, %731, %731, %731
  br label %738

735:                                              ; preds = %731
  br label %738

736:                                              ; preds = %731
  br label %738

737:                                              ; preds = %731
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.220, i32 noundef 13291) #15
  br label %738

738:                                              ; preds = %731, %733, %734, %735, %736, %737
  %739 = phi i32 [ 0, %737 ], [ 1, %736 ], [ 2, %735 ], [ 3, %734 ], [ 4, %733 ], [ 5, %731 ]
  %740 = icmp ugt i32 %732, %739
  %741 = call ptr @Perl_av_pop(ptr noundef nonnull %276) #15
  br i1 %740, label %742, label %751

742:                                              ; preds = %738
  %743 = getelementptr inbounds %struct.sv, ptr %741, i64 0, i32 2
  %744 = load i32, ptr %743, align 4, !tbaa !13
  %745 = and i32 %744, 256
  %746 = icmp eq i32 %745, 0
  br i1 %746, label %748, label %747

747:                                              ; preds = %742
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.624, i32 noundef 13791) #15
  br label %748

748:                                              ; preds = %742, %747
  %749 = zext i8 %301 to i64
  %750 = call ptr @Perl_newSVuv(i64 noundef %749) #15
  call void @Perl_av_push(ptr noundef nonnull %276, ptr noundef %750) #15
  call void @Perl_av_push(ptr noundef nonnull %276, ptr noundef nonnull %741) #15
  br label %1040

751:                                              ; preds = %738
  store ptr %741, ptr %12, align 8, !tbaa !5
  %752 = getelementptr inbounds %struct.sv, ptr %741, i64 0, i32 2
  %753 = load i32, ptr %752, align 4, !tbaa !13
  %754 = and i32 %753, 256
  %755 = icmp eq i32 %754, 0
  br i1 %755, label %756, label %1052

756:                                              ; preds = %751
  %757 = call ptr @Perl_av_pop(ptr noundef nonnull %276) #15
  %758 = getelementptr inbounds %struct.sv, ptr %757, i64 0, i32 2
  %759 = load i32, ptr %758, align 4, !tbaa !13
  %760 = and i32 %759, 256
  %761 = icmp eq i32 %760, 0
  br i1 %761, label %762, label %1052

762:                                              ; preds = %756
  %763 = sext i8 %726 to i32
  switch i32 %763, label %799 [
    i32 38, label %764
    i32 124, label %766
    i32 43, label %766
    i32 45, label %768
    i32 94, label %770
  ]

764:                                              ; preds = %762
  %765 = load ptr, ptr %12, align 8, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef nonnull %757, ptr noundef %765, i1 noundef zeroext false, ptr noundef nonnull %12) #15
  br label %799

766:                                              ; preds = %762, %762
  %767 = load ptr, ptr %12, align 8, !tbaa !5
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %757, ptr noundef %767, i1 noundef zeroext false, ptr noundef nonnull %12) #15
  br label %799

768:                                              ; preds = %762
  %769 = load ptr, ptr %12, align 8, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef nonnull %757, ptr noundef %769, i1 noundef zeroext true, ptr noundef nonnull %12) #15
  br label %799

770:                                              ; preds = %762
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #15
  store ptr null, ptr %13, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %14) #15
  store ptr null, ptr %14, align 8, !tbaa !5
  %771 = load ptr, ptr %12, align 8, !tbaa !5
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %757, ptr noundef %771, i1 noundef zeroext false, ptr noundef nonnull %14) #15
  %772 = load ptr, ptr %12, align 8, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef nonnull %757, ptr noundef %772, i1 noundef zeroext false, ptr noundef nonnull %13) #15
  %773 = load ptr, ptr %12, align 8, !tbaa !5
  %774 = load ptr, ptr %14, align 8, !tbaa !5
  %775 = load ptr, ptr %13, align 8, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %774, ptr noundef %775, i1 noundef zeroext true, ptr noundef nonnull %12) #15
  %776 = load ptr, ptr %13, align 8, !tbaa !5
  %777 = getelementptr inbounds %struct.sv, ptr %776, i64 0, i32 1
  %778 = load i32, ptr %777, align 8, !tbaa !37
  %779 = icmp ugt i32 %778, 1
  br i1 %779, label %780, label %782

780:                                              ; preds = %770
  %781 = add i32 %778, -1
  store i32 %781, ptr %777, align 8, !tbaa !37
  br label %783

782:                                              ; preds = %770
  call void @Perl_sv_free2(ptr noundef nonnull %776, i32 noundef %778) #15
  br label %783

783:                                              ; preds = %780, %782
  %784 = load ptr, ptr %14, align 8, !tbaa !5
  %785 = getelementptr inbounds %struct.sv, ptr %784, i64 0, i32 1
  %786 = load i32, ptr %785, align 8, !tbaa !37
  %787 = icmp ugt i32 %786, 1
  br i1 %787, label %788, label %790

788:                                              ; preds = %783
  %789 = add i32 %786, -1
  store i32 %789, ptr %785, align 8, !tbaa !37
  br label %791

790:                                              ; preds = %783
  call void @Perl_sv_free2(ptr noundef nonnull %784, i32 noundef %786) #15
  br label %791

791:                                              ; preds = %788, %790
  %792 = getelementptr inbounds %struct.sv, ptr %773, i64 0, i32 1
  %793 = load i32, ptr %792, align 8, !tbaa !37
  %794 = icmp ugt i32 %793, 1
  br i1 %794, label %795, label %797

795:                                              ; preds = %791
  %796 = add i32 %793, -1
  store i32 %796, ptr %792, align 8, !tbaa !37
  br label %798

797:                                              ; preds = %791
  call void @Perl_sv_free2(ptr noundef nonnull %773, i32 noundef %793) #15
  br label %798

798:                                              ; preds = %795, %797
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %14) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #15
  br label %799

799:                                              ; preds = %764, %766, %768, %798, %762
  %800 = getelementptr inbounds %struct.sv, ptr %757, i64 0, i32 1
  %801 = load i32, ptr %800, align 8, !tbaa !37
  %802 = icmp ugt i32 %801, 1
  br i1 %802, label %803, label %805

803:                                              ; preds = %799
  %804 = add i32 %801, -1
  store i32 %804, ptr %800, align 8, !tbaa !37
  br label %806

805:                                              ; preds = %799
  call void @Perl_sv_free2(ptr noundef nonnull %757, i32 noundef %801) #15
  br label %806

806:                                              ; preds = %803, %805
  %807 = call ptr @Perl_av_pop(ptr noundef nonnull %276) #15
  %808 = icmp eq ptr %807, null
  br i1 %808, label %816, label %809

809:                                              ; preds = %806
  %810 = getelementptr inbounds %struct.sv, ptr %807, i64 0, i32 1
  %811 = load i32, ptr %810, align 8, !tbaa !37
  %812 = icmp ugt i32 %811, 1
  br i1 %812, label %813, label %815

813:                                              ; preds = %809
  %814 = add i32 %811, -1
  store i32 %814, ptr %810, align 8, !tbaa !37
  br label %816

815:                                              ; preds = %809
  call void @Perl_sv_free2(ptr noundef nonnull %807, i32 noundef %811) #15
  br label %816

816:                                              ; preds = %806, %813, %815
  %817 = load ptr, ptr %12, align 8, !tbaa !5
  call void @Perl_av_push(ptr noundef nonnull %276, ptr noundef %817) #15
  br label %304

818:                                              ; preds = %324
  %819 = shl i64 %325, 32
  %820 = ashr exact i64 %819, 32
  %821 = call ptr @Perl_av_fetch(ptr noundef nonnull %276, i64 noundef %820, i32 noundef 0) #15
  %822 = icmp eq ptr %821, null
  br i1 %822, label %851, label %823

823:                                              ; preds = %818
  %824 = load ptr, ptr %821, align 8, !tbaa !5
  %825 = getelementptr inbounds %struct.sv, ptr %824, i64 0, i32 2
  %826 = load i32, ptr %825, align 4, !tbaa !13
  %827 = and i32 %826, 256
  %828 = icmp eq i32 %827, 0
  br i1 %828, label %851, label %829

829:                                              ; preds = %823
  %830 = and i32 %826, -2145386240
  %831 = icmp eq i32 %830, -2147483392
  br i1 %831, label %832, label %836

832:                                              ; preds = %829
  %833 = load ptr, ptr %824, align 8, !tbaa !16
  %834 = getelementptr inbounds %struct.xpvuv, ptr %833, i64 0, i32 4
  %835 = load i64, ptr %834, align 8, !tbaa !17
  br label %838

836:                                              ; preds = %829
  %837 = call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %824, i32 noundef 2) #15
  br label %838

838:                                              ; preds = %836, %832
  %839 = phi i64 [ %835, %832 ], [ %837, %836 ]
  %840 = icmp eq i64 %839, 33
  br i1 %840, label %841, label %851

841:                                              ; preds = %838
  %842 = call ptr @Perl_av_pop(ptr noundef nonnull %276) #15
  %843 = icmp eq ptr %842, null
  br i1 %843, label %1040, label %844

844:                                              ; preds = %841
  %845 = getelementptr inbounds %struct.sv, ptr %842, i64 0, i32 1
  %846 = load i32, ptr %845, align 8, !tbaa !37
  %847 = icmp ugt i32 %846, 1
  br i1 %847, label %848, label %850

848:                                              ; preds = %844
  %849 = add i32 %846, -1
  store i32 %849, ptr %845, align 8, !tbaa !37
  br label %1040

850:                                              ; preds = %844
  call void @Perl_sv_free2(ptr noundef nonnull %842, i32 noundef %846) #15
  br label %1040

851:                                              ; preds = %838, %823, %818
  %852 = call ptr @Perl_newSVuv(i64 noundef 33) #15
  call void @Perl_av_push(ptr noundef nonnull %276, ptr noundef %852) #15
  br label %1040

853:                                              ; preds = %324
  %854 = load i32, ptr %256, align 8, !tbaa !50
  %855 = icmp eq i32 %854, 0
  %856 = load ptr, ptr %260, align 8, !tbaa !105
  br i1 %855, label %863, label %857

857:                                              ; preds = %853
  %858 = load i8, ptr %856, align 1, !tbaa !17
  %859 = zext i8 %858 to i64
  %860 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %859
  %861 = load i8, ptr %860, align 1, !tbaa !17
  %862 = zext i8 %861 to i64
  br label %863

863:                                              ; preds = %853, %857
  %864 = phi i64 [ %862, %857 ], [ 1, %853 ]
  %865 = getelementptr inbounds i8, ptr %856, i64 %864
  store ptr %865, ptr %260, align 8, !tbaa !105
  %866 = load ptr, ptr %79, align 8, !tbaa !112
  %867 = icmp eq ptr %866, %81
  br i1 %867, label %872, label %868

868:                                              ; preds = %863
  %869 = load ptr, ptr %288, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %869, i32 noundef 11) #15
  %870 = load ptr, ptr %260, align 8, !tbaa !105
  %871 = load i32, ptr %256, align 8, !tbaa !50
  br label %872

872:                                              ; preds = %863, %868
  %873 = phi i32 [ %854, %863 ], [ %871, %868 ]
  %874 = phi ptr [ %865, %863 ], [ %870, %868 ]
  %875 = load ptr, ptr %267, align 8, !tbaa !107
  %876 = icmp ugt ptr %874, %875
  %877 = select i1 %876, ptr %875, ptr %874
  %878 = load ptr, ptr %262, align 8, !tbaa !65
  %879 = ptrtoint ptr %877 to i64
  %880 = ptrtoint ptr %878 to i64
  %881 = sub i64 %879, %880
  %882 = icmp ne i32 %873, 0
  %883 = zext i1 %882 to i32
  %884 = ptrtoint ptr %875 to i64
  %885 = sub i64 %884, %879
  %886 = getelementptr inbounds i8, ptr %878, i64 %881
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.625, i32 noundef %883, i64 noundef %881, ptr noundef %878, i32 noundef %883, i64 noundef %885, ptr noundef %886) #15
  br label %887

887:                                              ; preds = %560, %561, %426, %641, %872, %528
  %888 = phi ptr [ %293, %426 ], [ %293, %528 ], [ %305, %641 ], [ %293, %872 ], [ %293, %561 ], [ %293, %560 ]
  %889 = phi i64 [ %292, %426 ], [ %292, %528 ], [ %643, %641 ], [ %292, %872 ], [ %292, %561 ], [ %292, %560 ]
  br label %890

890:                                              ; preds = %987, %887
  %891 = phi i8 [ %301, %887 ], [ %934, %987 ]
  %892 = load i32, ptr %285, align 4, !tbaa !73
  %893 = and i32 %892, 255
  %894 = icmp eq i32 %893, 11
  br i1 %894, label %897, label %895

895:                                              ; preds = %890
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.383, i32 noundef 21) #15
  %896 = load i32, ptr %285, align 4, !tbaa !13
  br label %897

897:                                              ; preds = %895, %890
  %898 = phi i32 [ %892, %890 ], [ %896, %895 ]
  %899 = and i32 %898, 8388608
  %900 = icmp eq i32 %899, 0
  br i1 %900, label %904, label %901

901:                                              ; preds = %897
  %902 = call i32 @Perl_mg_size(ptr noundef nonnull %276) #15
  %903 = zext i32 %902 to i64
  br label %908

904:                                              ; preds = %897
  %905 = load ptr, ptr %276, align 8, !tbaa !81
  %906 = getelementptr inbounds %struct.xpvav, ptr %905, i64 0, i32 2
  %907 = load i64, ptr %906, align 8, !tbaa !83
  br label %908

908:                                              ; preds = %901, %904
  %909 = phi i64 [ %903, %901 ], [ %907, %904 ]
  %910 = shl i64 %909, 32
  %911 = ashr exact i64 %910, 32
  %912 = icmp slt i64 %911, %889
  br i1 %912, label %1037, label %913

913:                                              ; preds = %908
  %914 = call ptr @Perl_av_fetch(ptr noundef nonnull %276, i64 noundef %911, i32 noundef 0) #15
  %915 = icmp eq ptr %914, null
  br i1 %915, label %916, label %917

916:                                              ; preds = %913
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.626, i32 noundef 13895) #15
  br label %917

917:                                              ; preds = %913, %916
  %918 = load ptr, ptr %914, align 8, !tbaa !5
  %919 = getelementptr inbounds %struct.sv, ptr %918, i64 0, i32 2
  %920 = load i32, ptr %919, align 4, !tbaa !13
  %921 = and i32 %920, 256
  %922 = icmp eq i32 %921, 0
  br i1 %922, label %990, label %923

923:                                              ; preds = %917
  %924 = and i32 %920, -2145386240
  %925 = icmp eq i32 %924, -2147483392
  br i1 %925, label %926, label %930

926:                                              ; preds = %923
  %927 = load ptr, ptr %918, align 8, !tbaa !16
  %928 = getelementptr inbounds %struct.xpvuv, ptr %927, i64 0, i32 4
  %929 = load i64, ptr %928, align 8, !tbaa !17
  br label %932

930:                                              ; preds = %923
  %931 = call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %918, i32 noundef 2) #15
  br label %932

932:                                              ; preds = %930, %926
  %933 = phi i64 [ %929, %926 ], [ %931, %930 ]
  %934 = trunc i64 %933 to i8
  %935 = trunc i64 %933 to i32
  %936 = and i32 %935, 255
  %937 = icmp eq i32 %936, 33
  br i1 %937, label %966, label %938

938:                                              ; preds = %932
  %939 = load ptr, ptr %11, align 8, !tbaa !5
  %940 = icmp eq ptr %939, null
  br i1 %940, label %948, label %941

941:                                              ; preds = %938
  %942 = getelementptr inbounds %struct.sv, ptr %939, i64 0, i32 1
  %943 = load i32, ptr %942, align 8, !tbaa !37
  %944 = icmp ugt i32 %943, 1
  br i1 %944, label %945, label %947

945:                                              ; preds = %941
  %946 = add i32 %943, -1
  store i32 %946, ptr %942, align 8, !tbaa !37
  br label %948

947:                                              ; preds = %941
  call void @Perl_sv_free2(ptr noundef nonnull %939, i32 noundef %943) #15
  br label %948

948:                                              ; preds = %938, %945, %947
  %949 = load ptr, ptr %79, align 8, !tbaa !112
  %950 = icmp eq ptr %949, %81
  br i1 %950, label %953, label %951

951:                                              ; preds = %948
  %952 = load ptr, ptr %288, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %952, i32 noundef 11) #15
  br label %953

953:                                              ; preds = %948, %951
  %954 = load ptr, ptr %260, align 8, !tbaa !105
  %955 = load ptr, ptr %262, align 8, !tbaa !65
  %956 = ptrtoint ptr %954 to i64
  %957 = ptrtoint ptr %955 to i64
  %958 = sub i64 %956, %957
  %959 = load i32, ptr %256, align 8, !tbaa !50
  %960 = icmp ne i32 %959, 0
  %961 = zext i1 %960 to i32
  %962 = load ptr, ptr %267, align 8, !tbaa !107
  %963 = ptrtoint ptr %962 to i64
  %964 = sub i64 %963, %956
  %965 = getelementptr inbounds i8, ptr %955, i64 %958
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %960, ptr noundef nonnull @.str.623, ptr nonnull poison, i32 noundef %936, i32 noundef %961, i64 noundef %958, ptr noundef %955, i32 noundef %961, i64 noundef %964, ptr noundef %965)
  br label %966

966:                                              ; preds = %953, %932
  %967 = load ptr, ptr %11, align 8, !tbaa !5
  call void @Perl__invlist_invert(ptr noundef %967) #15
  %968 = call ptr @Perl_av_pop(ptr noundef nonnull %276) #15
  %969 = icmp eq ptr %968, null
  br i1 %969, label %977, label %970

970:                                              ; preds = %966
  %971 = getelementptr inbounds %struct.sv, ptr %968, i64 0, i32 1
  %972 = load i32, ptr %971, align 8, !tbaa !37
  %973 = icmp ugt i32 %972, 1
  br i1 %973, label %974, label %976

974:                                              ; preds = %970
  %975 = add i32 %972, -1
  store i32 %975, ptr %971, align 8, !tbaa !37
  br label %977

976:                                              ; preds = %970
  call void @Perl_sv_free2(ptr noundef nonnull %968, i32 noundef %972) #15
  br label %977

977:                                              ; preds = %976, %974, %966
  %978 = load i32, ptr %285, align 4, !tbaa !73
  %979 = and i32 %978, 255
  %980 = icmp eq i32 %979, 11
  br i1 %980, label %983, label %981

981:                                              ; preds = %977
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.383, i32 noundef 21) #15
  %982 = load i32, ptr %285, align 4, !tbaa !13
  br label %983

983:                                              ; preds = %981, %977
  %984 = phi i32 [ %978, %977 ], [ %982, %981 ]
  %985 = and i32 %984, 8388608
  %986 = icmp eq i32 %985, 0
  br i1 %986, label %987, label %988

987:                                              ; preds = %983, %988
  br label %890

988:                                              ; preds = %983
  %989 = call i32 @Perl_mg_size(ptr noundef nonnull %276) #15
  br label %987

990:                                              ; preds = %917
  %991 = icmp eq i64 %911, %889
  %992 = icmp ne i8 %891, 41
  %993 = select i1 %991, i1 %992, i1 false
  br i1 %993, label %1006, label %994

994:                                              ; preds = %990
  br i1 %991, label %1037, label %995

995:                                              ; preds = %994
  %996 = add i64 %910, -4294967296
  %997 = ashr exact i64 %996, 32
  %998 = call ptr @Perl_av_fetch(ptr noundef nonnull %276, i64 noundef %997, i32 noundef 0) #15
  %999 = icmp eq ptr %998, null
  br i1 %999, label %1006, label %1000

1000:                                             ; preds = %995
  %1001 = load ptr, ptr %998, align 8, !tbaa !5
  %1002 = getelementptr inbounds %struct.sv, ptr %1001, i64 0, i32 2
  %1003 = load i32, ptr %1002, align 4, !tbaa !13
  %1004 = and i32 %1003, 256
  %1005 = icmp eq i32 %1004, 0
  br i1 %1005, label %1006, label %1037

1006:                                             ; preds = %990, %1000, %995
  %1007 = phi ptr [ %888, %990 ], [ %998, %1000 ], [ null, %995 ]
  %1008 = load ptr, ptr %11, align 8, !tbaa !5
  %1009 = icmp eq ptr %1008, null
  br i1 %1009, label %1017, label %1010

1010:                                             ; preds = %1006
  %1011 = getelementptr inbounds %struct.sv, ptr %1008, i64 0, i32 1
  %1012 = load i32, ptr %1011, align 8, !tbaa !37
  %1013 = icmp ugt i32 %1012, 1
  br i1 %1013, label %1014, label %1016

1014:                                             ; preds = %1010
  %1015 = add i32 %1012, -1
  store i32 %1015, ptr %1011, align 8, !tbaa !37
  br label %1017

1016:                                             ; preds = %1010
  call void @Perl_sv_free2(ptr noundef nonnull %1008, i32 noundef %1012) #15
  br label %1017

1017:                                             ; preds = %1006, %1014, %1016
  %1018 = load ptr, ptr %79, align 8, !tbaa !112
  %1019 = icmp eq ptr %1018, %81
  br i1 %1019, label %1022, label %1020

1020:                                             ; preds = %1017
  %1021 = load ptr, ptr %288, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1021, i32 noundef 11) #15
  br label %1022

1022:                                             ; preds = %1017, %1020
  %1023 = load ptr, ptr %260, align 8, !tbaa !105
  %1024 = load ptr, ptr %267, align 8, !tbaa !107
  %1025 = icmp ugt ptr %1023, %1024
  %1026 = select i1 %1025, ptr %1024, ptr %1023
  %1027 = load ptr, ptr %262, align 8, !tbaa !65
  %1028 = ptrtoint ptr %1026 to i64
  %1029 = ptrtoint ptr %1027 to i64
  %1030 = sub i64 %1028, %1029
  %1031 = load i32, ptr %256, align 8, !tbaa !50
  %1032 = icmp ne i32 %1031, 0
  %1033 = zext i1 %1032 to i32
  %1034 = ptrtoint ptr %1024 to i64
  %1035 = sub i64 %1034, %1028
  %1036 = getelementptr inbounds i8, ptr %1027, i64 %1030
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.627, i32 noundef %1033, i64 noundef %1030, ptr noundef %1027, i32 noundef %1033, i64 noundef %1035, ptr noundef %1036) #15
  br label %1037

1037:                                             ; preds = %908, %1022, %1000, %994
  %1038 = phi ptr [ %1007, %1022 ], [ %998, %1000 ], [ %888, %994 ], [ %888, %908 ]
  %1039 = load ptr, ptr %11, align 8, !tbaa !5
  call void @Perl_av_push(ptr noundef nonnull %276, ptr noundef %1039) #15
  br label %1040

1040:                                             ; preds = %850, %848, %841, %851, %1037, %748, %670, %499
  %1041 = phi ptr [ %1038, %1037 ], [ %293, %851 ], [ %715, %748 ], [ %305, %670 ], [ %500, %499 ], [ %293, %841 ], [ %293, %848 ], [ %293, %850 ]
  %1042 = phi i64 [ %889, %1037 ], [ %292, %851 ], [ %292, %748 ], [ %292, %670 ], [ %502, %499 ], [ %292, %841 ], [ %292, %848 ], [ %292, %850 ]
  %1043 = load i32, ptr %256, align 8, !tbaa !50
  %1044 = icmp eq i32 %1043, 0
  %1045 = load ptr, ptr %260, align 8, !tbaa !105
  br i1 %1044, label %1054, label %1046

1046:                                             ; preds = %1040
  %1047 = load i8, ptr %1045, align 1, !tbaa !17
  %1048 = zext i8 %1047 to i64
  %1049 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1048
  %1050 = load i8, ptr %1049, align 1, !tbaa !17
  %1051 = zext i8 %1050 to i64
  br label %1054

1052:                                             ; preds = %751, %756, %649
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #15
  br label %1163

1053:                                             ; preds = %564, %686
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #15
  br label %1059

1054:                                             ; preds = %1046, %1040
  %1055 = phi i64 [ %1051, %1046 ], [ 1, %1040 ]
  %1056 = getelementptr inbounds i8, ptr %1045, i64 %1055
  store ptr %1056, ptr %260, align 8, !tbaa !105
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #15
  %1057 = load ptr, ptr %267, align 8, !tbaa !107
  %1058 = icmp ult ptr %1056, %1057
  br i1 %1058, label %290, label %1059

1059:                                             ; preds = %1054, %255, %1053
  %1060 = icmp eq ptr %278, null
  br i1 %1060, label %1061, label %1062

1061:                                             ; preds = %1059
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.382, i32 noundef 20) #15
  br label %1062

1062:                                             ; preds = %1061, %1059
  %1063 = getelementptr inbounds %struct.av, ptr %278, i64 0, i32 2
  %1064 = load i32, ptr %1063, align 4, !tbaa !73
  %1065 = and i32 %1064, 255
  %1066 = icmp eq i32 %1065, 11
  br i1 %1066, label %1069, label %1067

1067:                                             ; preds = %1062
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.383, i32 noundef 21) #15
  %1068 = load i32, ptr %1063, align 4, !tbaa !13
  br label %1069

1069:                                             ; preds = %1067, %1062
  %1070 = phi i32 [ %1064, %1062 ], [ %1068, %1067 ]
  %1071 = and i32 %1070, 8388608
  %1072 = icmp eq i32 %1071, 0
  br i1 %1072, label %1076, label %1073

1073:                                             ; preds = %1069
  %1074 = call i32 @Perl_mg_size(ptr noundef nonnull %278) #15
  %1075 = sext i32 %1074 to i64
  br label %1080

1076:                                             ; preds = %1069
  %1077 = load ptr, ptr %278, align 8, !tbaa !81
  %1078 = getelementptr inbounds %struct.xpvav, ptr %1077, i64 0, i32 2
  %1079 = load i64, ptr %1078, align 8, !tbaa !83
  br label %1080

1080:                                             ; preds = %1073, %1076
  %1081 = phi i64 [ %1075, %1073 ], [ %1079, %1076 ]
  %1082 = icmp sgt i64 %1081, -1
  br i1 %1082, label %1083, label %1104

1083:                                             ; preds = %1080
  %1084 = load ptr, ptr %79, align 8, !tbaa !112
  %1085 = icmp eq ptr %1084, %81
  br i1 %1085, label %1089, label %1086

1086:                                             ; preds = %1083
  %1087 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1088 = load ptr, ptr %1087, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1088, i32 noundef 11) #15
  br label %1089

1089:                                             ; preds = %1083, %1086
  %1090 = load ptr, ptr %260, align 8, !tbaa !105
  %1091 = load ptr, ptr %267, align 8, !tbaa !107
  %1092 = icmp ugt ptr %1090, %1091
  %1093 = select i1 %1092, ptr %1091, ptr %1090
  %1094 = load ptr, ptr %262, align 8, !tbaa !65
  %1095 = ptrtoint ptr %1093 to i64
  %1096 = ptrtoint ptr %1094 to i64
  %1097 = sub i64 %1095, %1096
  %1098 = load i32, ptr %256, align 8, !tbaa !50
  %1099 = icmp ne i32 %1098, 0
  %1100 = zext i1 %1099 to i32
  %1101 = ptrtoint ptr %1091 to i64
  %1102 = sub i64 %1101, %1095
  %1103 = getelementptr inbounds i8, ptr %1094, i64 %1097
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.446, i32 noundef %1100, i64 noundef %1097, ptr noundef %1094, i32 noundef %1100, i64 noundef %1102, ptr noundef %1103) #15
  br label %1104

1104:                                             ; preds = %1089, %1080
  %1105 = icmp eq ptr %276, null
  br i1 %1105, label %1106, label %1107

1106:                                             ; preds = %1104
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.382, i32 noundef 20) #15
  br label %1107

1107:                                             ; preds = %1106, %1104
  %1108 = getelementptr inbounds %struct.av, ptr %276, i64 0, i32 2
  %1109 = load i32, ptr %1108, align 4, !tbaa !73
  %1110 = and i32 %1109, 255
  %1111 = icmp eq i32 %1110, 11
  br i1 %1111, label %1114, label %1112

1112:                                             ; preds = %1107
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.383, i32 noundef 21) #15
  %1113 = load i32, ptr %1108, align 4, !tbaa !13
  br label %1114

1114:                                             ; preds = %1112, %1107
  %1115 = phi i32 [ %1109, %1107 ], [ %1113, %1112 ]
  %1116 = and i32 %1115, 8388608
  %1117 = icmp eq i32 %1116, 0
  br i1 %1117, label %1121, label %1118

1118:                                             ; preds = %1114
  %1119 = call i32 @Perl_mg_size(ptr noundef nonnull %276) #15
  %1120 = sext i32 %1119 to i64
  br label %1125

1121:                                             ; preds = %1114
  %1122 = load ptr, ptr %276, align 8, !tbaa !81
  %1123 = getelementptr inbounds %struct.xpvav, ptr %1122, i64 0, i32 2
  %1124 = load i64, ptr %1123, align 8, !tbaa !83
  br label %1125

1125:                                             ; preds = %1118, %1121
  %1126 = phi i64 [ %1120, %1118 ], [ %1124, %1121 ]
  %1127 = icmp slt i64 %1126, 0
  br i1 %1127, label %1163, label %1128

1128:                                             ; preds = %1125
  %1129 = call ptr @Perl_av_pop(ptr noundef nonnull %276) #15
  %1130 = icmp eq ptr %1129, null
  br i1 %1130, label %1163, label %1131

1131:                                             ; preds = %1128
  %1132 = getelementptr inbounds %struct.sv, ptr %1129, i64 0, i32 2
  %1133 = load i32, ptr %1132, align 4, !tbaa !13
  %1134 = and i32 %1133, 511
  %1135 = icmp eq i32 %1134, 4
  br i1 %1135, label %1136, label %1156

1136:                                             ; preds = %1131
  %1137 = load i32, ptr %1108, align 4, !tbaa !73
  %1138 = and i32 %1137, 255
  %1139 = icmp eq i32 %1138, 11
  br i1 %1139, label %1142, label %1140

1140:                                             ; preds = %1136
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.383, i32 noundef 21) #15
  %1141 = load i32, ptr %1108, align 4, !tbaa !13
  br label %1142

1142:                                             ; preds = %1140, %1136
  %1143 = phi i32 [ %1137, %1136 ], [ %1141, %1140 ]
  %1144 = and i32 %1143, 8388608
  %1145 = icmp eq i32 %1144, 0
  br i1 %1145, label %1149, label %1146

1146:                                             ; preds = %1142
  %1147 = call i32 @Perl_mg_size(ptr noundef nonnull %276) #15
  %1148 = sext i32 %1147 to i64
  br label %1153

1149:                                             ; preds = %1142
  %1150 = load ptr, ptr %276, align 8, !tbaa !81
  %1151 = getelementptr inbounds %struct.xpvav, ptr %1150, i64 0, i32 2
  %1152 = load i64, ptr %1151, align 8, !tbaa !83
  br label %1153

1153:                                             ; preds = %1146, %1149
  %1154 = phi i64 [ %1148, %1146 ], [ %1152, %1149 ]
  %1155 = icmp sgt i64 %1154, -1
  br i1 %1155, label %1156, label %1185

1156:                                             ; preds = %1153, %1131
  %1157 = getelementptr inbounds %struct.sv, ptr %1129, i64 0, i32 1
  %1158 = load i32, ptr %1157, align 8, !tbaa !37
  %1159 = icmp ugt i32 %1158, 1
  br i1 %1159, label %1160, label %1162

1160:                                             ; preds = %1156
  %1161 = add i32 %1158, -1
  store i32 %1161, ptr %1157, align 8, !tbaa !37
  br label %1163

1162:                                             ; preds = %1156
  call void @Perl_sv_free2(ptr noundef nonnull %1129, i32 noundef %1158) #15
  br label %1163

1163:                                             ; preds = %1052, %1128, %1125, %1160, %1162
  %1164 = phi ptr [ %1129, %1160 ], [ %1129, %1162 ], [ null, %1125 ], [ null, %1128 ], [ null, %1052 ]
  %1165 = load ptr, ptr %79, align 8, !tbaa !112
  %1166 = icmp eq ptr %1165, %81
  br i1 %1166, label %1170, label %1167

1167:                                             ; preds = %1163
  %1168 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1169 = load ptr, ptr %1168, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1169, i32 noundef 11) #15
  br label %1170

1170:                                             ; preds = %1163, %1167
  %1171 = load ptr, ptr %260, align 8, !tbaa !105
  %1172 = load ptr, ptr %267, align 8, !tbaa !107
  %1173 = icmp ugt ptr %1171, %1172
  %1174 = select i1 %1173, ptr %1172, ptr %1171
  %1175 = load ptr, ptr %262, align 8, !tbaa !65
  %1176 = ptrtoint ptr %1174 to i64
  %1177 = ptrtoint ptr %1175 to i64
  %1178 = sub i64 %1176, %1177
  %1179 = load i32, ptr %256, align 8, !tbaa !50
  %1180 = icmp ne i32 %1179, 0
  %1181 = zext i1 %1180 to i32
  %1182 = ptrtoint ptr %1172 to i64
  %1183 = sub i64 %1182, %1176
  %1184 = getelementptr inbounds i8, ptr %1175, i64 %1178
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.628, i32 noundef %1181, i64 noundef %1178, ptr noundef %1175, i32 noundef %1181, i64 noundef %1183, ptr noundef %1184) #15
  br label %1185

1185:                                             ; preds = %1170, %1153
  %1186 = phi ptr [ %1164, %1170 ], [ %1129, %1153 ]
  %1187 = icmp eq ptr %1, null
  br i1 %1187, label %1189, label %1188

1188:                                             ; preds = %1185
  store ptr %1186, ptr %1, align 8, !tbaa !5
  br label %1326

1189:                                             ; preds = %1185
  %1190 = icmp eq ptr %1186, null
  br i1 %1190, label %1197, label %1191

1191:                                             ; preds = %1189
  %1192 = getelementptr inbounds %struct.sv, ptr %1186, i64 0, i32 2
  %1193 = load i32, ptr %1192, align 4, !tbaa !13
  %1194 = and i32 %1193, 255
  %1195 = icmp eq i32 %1194, 4
  br i1 %1195, label %1201, label %1196

1196:                                             ; preds = %1191
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  br label %1201

1197:                                             ; preds = %1189
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9125) #15
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9115) #15
  %1198 = load i32, ptr inttoptr (i64 12 to ptr), align 4, !tbaa !13
  %1199 = and i32 %1198, 255
  %1200 = icmp ne i32 %1199, 4
  call void @llvm.assume(i1 %1200)
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  unreachable

1201:                                             ; preds = %1191, %1196
  %1202 = load ptr, ptr %1186, align 8, !tbaa !16
  %1203 = getelementptr inbounds %struct.xpvinvlist, ptr %1202, i64 0, i32 5
  store i64 0, ptr %1203, align 8, !tbaa !9
  %1204 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.8, i64 noundef 0) #15
  %1205 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef nonnull %1186, ptr noundef nonnull %6, ptr noundef nonnull %7)
  br i1 %1205, label %1206, label %1214

1206:                                             ; preds = %1201, %1212
  %1207 = load i64, ptr %6, align 8, !tbaa !9
  %1208 = load i64, ptr %7, align 8, !tbaa !9
  %1209 = icmp eq i64 %1207, %1208
  br i1 %1209, label %1210, label %1211

1210:                                             ; preds = %1206
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1204, ptr noundef nonnull @.str.539, i64 noundef %1207) #15
  br label %1212

1211:                                             ; preds = %1206
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %1204, ptr noundef nonnull @.str.629, i64 noundef %1207, i64 noundef %1208) #15
  br label %1212

1212:                                             ; preds = %1211, %1210
  %1213 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef nonnull %1186, ptr noundef nonnull %6, ptr noundef nonnull %7)
  br i1 %1213, label %1206, label %1214, !llvm.loop !393

1214:                                             ; preds = %1212, %1201
  %1215 = load ptr, ptr %260, align 8, !tbaa !105
  %1216 = getelementptr inbounds %struct.sv, ptr %1204, i64 0, i32 2
  %1217 = load i32, ptr %1216, align 4, !tbaa !13
  %1218 = and i32 %1217, 2098176
  %1219 = icmp eq i32 %1218, 1024
  br i1 %1219, label %1220, label %1226

1220:                                             ; preds = %1214
  %1221 = load ptr, ptr %1204, align 8, !tbaa !16
  %1222 = getelementptr inbounds %struct.xpv, ptr %1221, i64 0, i32 2
  %1223 = load i64, ptr %1222, align 8, !tbaa !38
  store i64 %1223, ptr %8, align 8, !tbaa !9
  %1224 = getelementptr inbounds %struct.sv, ptr %1204, i64 0, i32 3
  %1225 = load ptr, ptr %1224, align 8, !tbaa !17
  br label %1229

1226:                                             ; preds = %1214
  %1227 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %1204, ptr noundef nonnull %8, i32 noundef 2) #15
  %1228 = load i64, ptr %8, align 8, !tbaa !9
  br label %1229

1229:                                             ; preds = %1226, %1220
  %1230 = phi i64 [ %1223, %1220 ], [ %1228, %1226 ]
  %1231 = phi ptr [ %1225, %1220 ], [ %1227, %1226 ]
  store ptr %1231, ptr %260, align 8, !tbaa !105
  %1232 = load ptr, ptr %267, align 8, !tbaa !107
  %1233 = getelementptr inbounds i8, ptr %1231, i64 %1230
  store ptr %1233, ptr %267, align 8, !tbaa !107
  %1234 = load i32, ptr %0, align 8, !tbaa !66
  %1235 = and i32 %1234, -5
  store i32 %1235, ptr %0, align 8, !tbaa !66
  %1236 = add i32 %3, 1
  %1237 = call fastcc ptr @S_regclass(ptr noundef nonnull %0, ptr noundef %2, i32 noundef %1236, i1 noundef zeroext false, i1 noundef zeroext false, i1 noundef zeroext true, i1 noundef zeroext false, ptr noundef null)
  %1238 = icmp eq ptr %1237, null
  br i1 %1238, label %1239, label %1260

1239:                                             ; preds = %1229
  %1240 = load ptr, ptr %267, align 8, !tbaa !107
  %1241 = load ptr, ptr %262, align 8, !tbaa !65
  %1242 = ptrtoint ptr %1240 to i64
  %1243 = ptrtoint ptr %1241 to i64
  %1244 = sub i64 %1242, %1243
  %1245 = load ptr, ptr %79, align 8, !tbaa !112
  %1246 = icmp eq ptr %1245, %81
  br i1 %1246, label %1251, label %1247

1247:                                             ; preds = %1239
  %1248 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1249 = load ptr, ptr %1248, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1249, i32 noundef 11) #15
  %1250 = load ptr, ptr %262, align 8, !tbaa !65
  br label %1251

1251:                                             ; preds = %1247, %1239
  %1252 = phi ptr [ %1250, %1247 ], [ %1241, %1239 ]
  %1253 = icmp sgt i64 %1244, 127
  %1254 = select i1 %1253, ptr @.str.20, ptr @.str.8
  %1255 = select i1 %1253, i64 117, i64 %1244
  %1256 = ptrtoint ptr %2 to i64
  %1257 = load i32, ptr %256, align 8, !tbaa !50
  %1258 = icmp ne i32 %1257, 0
  %1259 = zext i1 %1258 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.614, i64 noundef %1256, i32 noundef %1259, i64 noundef %1255, ptr noundef %1252, ptr noundef nonnull %1254) #15
  br label %1260

1260:                                             ; preds = %1251, %1229
  br i1 %17, label %1264, label %1261

1261:                                             ; preds = %1260
  %1262 = load i32, ptr %0, align 8, !tbaa !66
  %1263 = or i32 %1262, 4
  store i32 %1263, ptr %0, align 8, !tbaa !66
  br label %1264

1264:                                             ; preds = %1261, %1260
  %1265 = getelementptr inbounds i8, ptr %1215, i64 1
  store ptr %1265, ptr %260, align 8, !tbaa !105
  store ptr %1232, ptr %267, align 8, !tbaa !107
  %1266 = getelementptr inbounds %struct.sv, ptr %1186, i64 0, i32 1
  %1267 = load i32, ptr %1266, align 8, !tbaa !37
  %1268 = icmp ugt i32 %1267, 1
  br i1 %1268, label %1269, label %1271

1269:                                             ; preds = %1264
  %1270 = add i32 %1267, -1
  store i32 %1270, ptr %1266, align 8, !tbaa !37
  br label %1272

1271:                                             ; preds = %1264
  call void @Perl_sv_free2(ptr noundef nonnull %1186, i32 noundef %1267) #15
  br label %1272

1272:                                             ; preds = %1269, %1271
  %1273 = getelementptr inbounds %struct.sv, ptr %1204, i64 0, i32 1
  %1274 = load i32, ptr %1273, align 8, !tbaa !37
  %1275 = icmp ugt i32 %1274, 1
  br i1 %1275, label %1276, label %1278

1276:                                             ; preds = %1272
  %1277 = add i32 %1274, -1
  store i32 %1277, ptr %1273, align 8, !tbaa !37
  br label %1279

1278:                                             ; preds = %1272
  call void @Perl_sv_free2(ptr noundef nonnull %1204, i32 noundef %1274) #15
  br label %1279

1279:                                             ; preds = %1276, %1278
  %1280 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %1281 = load ptr, ptr %79, align 8, !tbaa !112
  %1282 = icmp eq ptr %1281, %81
  br i1 %1282, label %1326, label %1283

1283:                                             ; preds = %1279
  %1284 = load volatile i64, ptr %9, align 8, !tbaa !9
  %1285 = and i64 %1284, 262144
  %1286 = icmp eq i64 %1285, 0
  br i1 %1286, label %1287, label %1289

1287:                                             ; preds = %1283
  %1288 = ptrtoint ptr %1237 to i64
  br label %1303

1289:                                             ; preds = %1283
  %1290 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %1291 = load ptr, ptr %1290, align 8, !tbaa !131
  %1292 = ptrtoint ptr %1237 to i64
  %1293 = ptrtoint ptr %1291 to i64
  %1294 = sub i64 %1292, %1293
  %1295 = lshr exact i64 %1294, 2
  %1296 = trunc i64 %1295 to i32
  %1297 = load ptr, ptr %260, align 8, !tbaa !105
  %1298 = ptrtoint ptr %1297 to i64
  %1299 = ptrtoint ptr %4 to i64
  %1300 = sub i64 %1298, %1299
  %1301 = trunc i64 %1300 to i32
  %1302 = add i32 %1301, 1
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 14011, i32 noundef %1296, i32 noundef %1302) #15
  br label %1303

1303:                                             ; preds = %1287, %1289
  %1304 = phi i64 [ %1288, %1287 ], [ %1292, %1289 ]
  %1305 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %1306 = load ptr, ptr %1305, align 8, !tbaa !131
  %1307 = ptrtoint ptr %1306 to i64
  %1308 = sub i64 %1304, %1307
  %1309 = icmp slt i64 %1308, 0
  br i1 %1309, label %1310, label %1313

1310:                                             ; preds = %1303
  %1311 = lshr exact i64 %1308, 2
  %1312 = trunc i64 %1311 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %1312) #15
  br label %1326

1313:                                             ; preds = %1303
  %1314 = load ptr, ptr %260, align 8, !tbaa !105
  %1315 = ptrtoint ptr %1314 to i64
  %1316 = ptrtoint ptr %4 to i64
  %1317 = sub i64 %1315, %1316
  %1318 = trunc i64 %1317 to i32
  %1319 = add i32 %1318, 1
  %1320 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %1321 = load ptr, ptr %1320, align 8, !tbaa !130
  %1322 = getelementptr inbounds %struct.regexp_internal, ptr %1321, i64 0, i32 1
  %1323 = load ptr, ptr %1322, align 8, !tbaa !17
  %1324 = lshr exact i64 %1308, 1
  %1325 = getelementptr inbounds i32, ptr %1323, i64 %1324
  store i32 %1319, ptr %1325, align 4, !tbaa !73
  br label %1326

1326:                                             ; preds = %254, %1279, %1313, %1310, %1188
  %1327 = phi ptr [ null, %1188 ], [ %167, %254 ], [ %1237, %1310 ], [ %1237, %1313 ], [ %1237, %1279 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #15
  ret ptr %1327
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_parse_lparen_question_flags(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #15
  store i32 0, ptr %2, align 4, !tbaa !73
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #15
  store i32 0, ptr %3, align 4, !tbaa !73
  %4 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %5 = load ptr, ptr %4, align 8, !tbaa !105
  %6 = getelementptr inbounds i8, ptr %5, i64 -1
  %7 = load i8, ptr %5, align 1, !tbaa !17
  %8 = icmp eq i8 %7, 94
  %9 = load i32, ptr %0, align 8, !tbaa !66
  br i1 %8, label %10, label %25

10:                                               ; preds = %1
  %11 = getelementptr inbounds i8, ptr %5, i64 1
  store ptr %11, ptr %4, align 8, !tbaa !105
  %12 = and i32 %9, -944
  %13 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %14 = load i32, ptr %13, align 8, !tbaa !50
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 27
  %18 = load i32, ptr %17, align 8, !tbaa !51
  %19 = freeze i32 %18
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %10, %16
  br label %22

22:                                               ; preds = %16, %21
  %23 = phi i32 [ 256, %21 ], [ 0, %16 ]
  %24 = or i32 %23, %12
  store i32 %24, ptr %0, align 4, !tbaa !73
  br label %25

25:                                               ; preds = %22, %1
  %26 = phi ptr [ %11, %22 ], [ %5, %1 ]
  %27 = phi i32 [ %24, %22 ], [ %9, %1 ]
  %28 = lshr i32 %27, 7
  %29 = and i32 %28, 7
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %40

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %33 = load i32, ptr %32, align 8, !tbaa !50
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 27
  %37 = load i32, ptr %36, align 8, !tbaa !51
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %35, %31
  br label %40

40:                                               ; preds = %39, %35, %25
  %41 = phi i32 [ 2, %39 ], [ 0, %35 ], [ %29, %25 ]
  %42 = load i8, ptr %26, align 1, !tbaa !17
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %368, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %46 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %47 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %48 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %49 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %50 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 27
  %51 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %52 = ptrtoint ptr %6 to i64
  br label %53

53:                                               ; preds = %44, %358
  %54 = phi i8 [ %42, %44 ], [ %366, %358 ]
  %55 = phi ptr [ %26, %44 ], [ %365, %358 ]
  %56 = phi i32 [ 0, %44 ], [ %363, %358 ]
  %57 = phi ptr [ %2, %44 ], [ %362, %358 ]
  %58 = phi i8 [ 0, %44 ], [ %361, %358 ]
  %59 = phi i32 [ %41, %44 ], [ %360, %358 ]
  %60 = phi i32 [ 0, %44 ], [ %359, %358 ]
  %61 = sext i8 %54 to i32
  switch i32 %61, label %321 [
    i32 105, label %62
    i32 109, label %65
    i32 115, label %68
    i32 120, label %71
    i32 110, label %75
    i32 108, label %78
    i32 117, label %82
    i32 97, label %86
    i32 100, label %92
    i32 111, label %200
    i32 103, label %200
    i32 99, label %242
    i32 112, label %277
    i32 45, label %298
    i32 58, label %301
    i32 41, label %301
  ]

62:                                               ; preds = %53
  %63 = load i32, ptr %57, align 4, !tbaa !73
  %64 = or i32 %63, 4
  store i32 %64, ptr %57, align 4, !tbaa !73
  br label %358

65:                                               ; preds = %53
  %66 = load i32, ptr %57, align 4, !tbaa !73
  %67 = or i32 %66, 1
  store i32 %67, ptr %57, align 4, !tbaa !73
  br label %358

68:                                               ; preds = %53
  %69 = load i32, ptr %57, align 4, !tbaa !73
  %70 = or i32 %69, 2
  store i32 %70, ptr %57, align 4, !tbaa !73
  br label %358

71:                                               ; preds = %53
  %72 = load i32, ptr %57, align 4, !tbaa !73
  %73 = or i32 %72, 8
  store i32 %73, ptr %57, align 4, !tbaa !73
  %74 = add nsw i32 %60, 1
  br label %358

75:                                               ; preds = %53
  %76 = load i32, ptr %57, align 4, !tbaa !73
  %77 = or i32 %76, 32
  store i32 %77, ptr %57, align 4, !tbaa !73
  br label %358

78:                                               ; preds = %53
  %79 = icmp eq i8 %58, 0
  br i1 %79, label %80, label %105

80:                                               ; preds = %78
  %81 = icmp eq ptr %57, %3
  br i1 %81, label %176, label %358

82:                                               ; preds = %53
  %83 = icmp eq i8 %58, 0
  br i1 %83, label %84, label %105

84:                                               ; preds = %82
  %85 = icmp eq ptr %57, %3
  br i1 %85, label %176, label %358

86:                                               ; preds = %53
  %87 = icmp eq ptr %57, %3
  br i1 %87, label %176, label %88

88:                                               ; preds = %86
  %89 = icmp eq i8 %58, 0
  br i1 %89, label %358, label %90

90:                                               ; preds = %88
  %91 = icmp eq i32 %59, 3
  br i1 %91, label %358, label %105

92:                                               ; preds = %53
  br i1 %8, label %321, label %93

93:                                               ; preds = %92
  %94 = icmp eq ptr %57, %3
  br i1 %94, label %176, label %95

95:                                               ; preds = %93
  %96 = icmp eq i8 %58, 0
  br i1 %96, label %97, label %105

97:                                               ; preds = %95
  %98 = load i32, ptr %48, align 8, !tbaa !50
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %104

100:                                              ; preds = %97
  %101 = load i32, ptr %50, align 8, !tbaa !51
  %102 = freeze i32 %101
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %358, label %104

104:                                              ; preds = %97, %100
  br label %358

105:                                              ; preds = %95, %90, %82, %78
  %106 = getelementptr inbounds i8, ptr %55, i64 1
  store ptr %106, ptr %4, align 8, !tbaa !105
  %107 = zext i8 %58 to i32
  %108 = icmp eq i8 %58, 97
  br i1 %108, label %109, label %128

109:                                              ; preds = %105
  %110 = load ptr, ptr %45, align 8, !tbaa !112
  %111 = icmp eq ptr %110, %46
  br i1 %111, label %115, label %112

112:                                              ; preds = %109
  %113 = load ptr, ptr %51, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %113, i32 noundef 11) #15
  %114 = load ptr, ptr %4, align 8, !tbaa !105
  br label %115

115:                                              ; preds = %109, %112
  %116 = phi ptr [ %106, %109 ], [ %114, %112 ]
  %117 = load ptr, ptr %47, align 8, !tbaa !65
  %118 = ptrtoint ptr %116 to i64
  %119 = ptrtoint ptr %117 to i64
  %120 = sub i64 %118, %119
  %121 = load i32, ptr %48, align 8, !tbaa !50
  %122 = icmp ne i32 %121, 0
  %123 = zext i1 %122 to i32
  %124 = load ptr, ptr %49, align 8, !tbaa !107
  %125 = ptrtoint ptr %124 to i64
  %126 = sub i64 %125, %118
  %127 = getelementptr inbounds i8, ptr %117, i64 %120
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %122, ptr noundef nonnull @.str.631, ptr nonnull poison, i32 noundef 97, i32 noundef %123, i64 noundef %120, ptr noundef %117, i32 noundef %123, i64 noundef %126, ptr noundef %127)
  br label %174

128:                                              ; preds = %105
  %129 = load i8, ptr %55, align 1, !tbaa !17
  %130 = sext i8 %129 to i32
  %131 = icmp eq i32 %107, %130
  %132 = load ptr, ptr %45, align 8, !tbaa !112
  %133 = icmp eq ptr %132, %46
  br i1 %131, label %134, label %154

134:                                              ; preds = %128
  br i1 %133, label %138, label %135

135:                                              ; preds = %134
  %136 = load ptr, ptr %51, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %136, i32 noundef 11) #15
  %137 = load ptr, ptr %4, align 8, !tbaa !105
  br label %138

138:                                              ; preds = %134, %135
  %139 = phi ptr [ %106, %134 ], [ %137, %135 ]
  %140 = load ptr, ptr %47, align 8, !tbaa !65
  %141 = ptrtoint ptr %139 to i64
  %142 = ptrtoint ptr %140 to i64
  %143 = sub i64 %141, %142
  %144 = load i32, ptr %48, align 8, !tbaa !50
  %145 = icmp ne i32 %144, 0
  %146 = zext i1 %145 to i32
  %147 = getelementptr inbounds i8, ptr %139, i64 -1
  %148 = load i8, ptr %147, align 1, !tbaa !17
  %149 = sext i8 %148 to i32
  %150 = load ptr, ptr %49, align 8, !tbaa !107
  %151 = ptrtoint ptr %150 to i64
  %152 = sub i64 %151, %141
  %153 = getelementptr inbounds i8, ptr %140, i64 %143
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %145, ptr noundef nonnull @.str.632, ptr nonnull poison, i32 noundef %149, i32 noundef %146, i64 noundef %143, ptr noundef %140, i32 noundef %146, i64 noundef %152, ptr noundef %153)
  br label %174

154:                                              ; preds = %128
  br i1 %133, label %158, label %155

155:                                              ; preds = %154
  %156 = load ptr, ptr %51, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %156, i32 noundef 11) #15
  %157 = load ptr, ptr %4, align 8, !tbaa !105
  br label %158

158:                                              ; preds = %154, %155
  %159 = phi ptr [ %106, %154 ], [ %157, %155 ]
  %160 = load ptr, ptr %47, align 8, !tbaa !65
  %161 = ptrtoint ptr %159 to i64
  %162 = ptrtoint ptr %160 to i64
  %163 = sub i64 %161, %162
  %164 = load i32, ptr %48, align 8, !tbaa !50
  %165 = icmp ne i32 %164, 0
  %166 = zext i1 %165 to i32
  %167 = getelementptr inbounds i8, ptr %159, i64 -1
  %168 = load i8, ptr %167, align 1, !tbaa !17
  %169 = sext i8 %168 to i32
  %170 = load ptr, ptr %49, align 8, !tbaa !107
  %171 = ptrtoint ptr %170 to i64
  %172 = sub i64 %171, %161
  %173 = getelementptr inbounds i8, ptr %160, i64 %163
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %165, ptr noundef nonnull @.str.633, ptr nonnull poison, i32 noundef %107, i32 noundef %169, i32 noundef %166, i64 noundef %163, ptr noundef %160, i32 noundef %166, i64 noundef %172, ptr noundef %173)
  br label %174

174:                                              ; preds = %138, %158, %115
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.220, i32 noundef 9649) #15
  %175 = load ptr, ptr %4, align 8, !tbaa !105
  br label %176

176:                                              ; preds = %93, %86, %84, %80, %174
  %177 = phi ptr [ %55, %93 ], [ %55, %86 ], [ %55, %84 ], [ %55, %80 ], [ %175, %174 ]
  %178 = getelementptr inbounds i8, ptr %177, i64 1
  store ptr %178, ptr %4, align 8, !tbaa !105
  %179 = load ptr, ptr %45, align 8, !tbaa !112
  %180 = icmp eq ptr %179, %46
  br i1 %180, label %184, label %181

181:                                              ; preds = %176
  %182 = load ptr, ptr %51, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %182, i32 noundef 11) #15
  %183 = load ptr, ptr %4, align 8, !tbaa !105
  br label %184

184:                                              ; preds = %176, %181
  %185 = phi ptr [ %178, %176 ], [ %183, %181 ]
  %186 = load ptr, ptr %47, align 8, !tbaa !65
  %187 = ptrtoint ptr %185 to i64
  %188 = ptrtoint ptr %186 to i64
  %189 = sub i64 %187, %188
  %190 = load i32, ptr %48, align 8, !tbaa !50
  %191 = icmp ne i32 %190, 0
  %192 = zext i1 %191 to i32
  %193 = getelementptr inbounds i8, ptr %185, i64 -1
  %194 = load i8, ptr %193, align 1, !tbaa !17
  %195 = sext i8 %194 to i32
  %196 = load ptr, ptr %49, align 8, !tbaa !107
  %197 = ptrtoint ptr %196 to i64
  %198 = sub i64 %197, %187
  %199 = getelementptr inbounds i8, ptr %186, i64 %189
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %191, ptr noundef nonnull @.str.634, ptr nonnull poison, i32 noundef %195, i32 noundef %192, i64 noundef %189, ptr noundef %186, i32 noundef %192, i64 noundef %198, ptr noundef %199)
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.220, i32 noundef 9654) #15
  br label %200

200:                                              ; preds = %53, %53, %184
  %201 = load ptr, ptr %45, align 8, !tbaa !112
  %202 = icmp eq ptr %201, %46
  br i1 %202, label %358, label %203

203:                                              ; preds = %200
  %204 = call zeroext i1 @Perl_ckwarn(i32 noundef 20) #15
  br i1 %204, label %205, label %358

205:                                              ; preds = %203
  %206 = load ptr, ptr %4, align 8, !tbaa !105
  %207 = load i8, ptr %206, align 1, !tbaa !17
  %208 = icmp eq i8 %207, 111
  %209 = select i1 %208, i32 1, i32 2
  %210 = and i32 %209, %56
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %358

212:                                              ; preds = %205
  %213 = or i32 %209, %56
  %214 = getelementptr inbounds i8, ptr %206, i64 1
  %215 = load ptr, ptr %47, align 8, !tbaa !65
  %216 = ptrtoint ptr %214 to i64
  %217 = ptrtoint ptr %215 to i64
  %218 = sub i64 %216, %217
  %219 = load ptr, ptr %45, align 8, !tbaa !112
  %220 = icmp eq ptr %219, %46
  br i1 %220, label %221, label %226

221:                                              ; preds = %212
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.371, i32 noundef 9671) #15
  %222 = load ptr, ptr %4, align 8, !tbaa !105
  %223 = load i8, ptr %222, align 1, !tbaa !17
  %224 = load ptr, ptr %47, align 8, !tbaa !65
  %225 = ptrtoint ptr %224 to i64
  br label %226

226:                                              ; preds = %212, %221
  %227 = phi i64 [ %217, %212 ], [ %225, %221 ]
  %228 = phi ptr [ %215, %212 ], [ %224, %221 ]
  %229 = phi i8 [ %207, %212 ], [ %223, %221 ]
  %230 = icmp eq ptr %57, %3
  %231 = select i1 %230, ptr @.str.636, ptr @.str.221
  %232 = sext i8 %229 to i32
  %233 = select i1 %230, ptr @.str.637, ptr @.str.8
  %234 = load i32, ptr %48, align 8, !tbaa !50
  %235 = icmp ne i32 %234, 0
  %236 = zext i1 %235 to i32
  %237 = load ptr, ptr %49, align 8, !tbaa !107
  %238 = ptrtoint ptr %237 to i64
  %239 = add i64 %218, %227
  %240 = sub i64 %238, %239
  %241 = getelementptr inbounds i8, ptr %228, i64 %218
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.635, ptr noundef nonnull %231, i32 noundef %232, ptr noundef nonnull %233, i32 noundef %232, i32 noundef %236, i64 noundef %218, ptr noundef %228, i32 noundef %236, i64 noundef %240, ptr noundef %241) #15
  br label %358

242:                                              ; preds = %53
  %243 = load ptr, ptr %45, align 8, !tbaa !112
  %244 = icmp eq ptr %243, %46
  br i1 %244, label %358, label %245

245:                                              ; preds = %242
  %246 = call zeroext i1 @Perl_ckwarn(i32 noundef 20) #15
  %247 = and i32 %56, 4
  %248 = icmp eq i32 %247, 0
  %249 = select i1 %246, i1 %248, i1 false
  br i1 %249, label %250, label %358

250:                                              ; preds = %245
  %251 = or i32 %56, 6
  %252 = load ptr, ptr %4, align 8, !tbaa !105
  %253 = getelementptr inbounds i8, ptr %252, i64 1
  %254 = load ptr, ptr %47, align 8, !tbaa !65
  %255 = ptrtoint ptr %253 to i64
  %256 = ptrtoint ptr %254 to i64
  %257 = sub i64 %255, %256
  %258 = load ptr, ptr %45, align 8, !tbaa !112
  %259 = icmp eq ptr %258, %46
  br i1 %259, label %260, label %263

260:                                              ; preds = %250
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.371, i32 noundef 9686) #15
  %261 = load ptr, ptr %47, align 8, !tbaa !65
  %262 = ptrtoint ptr %261 to i64
  br label %263

263:                                              ; preds = %250, %260
  %264 = phi i64 [ %256, %250 ], [ %262, %260 ]
  %265 = phi ptr [ %254, %250 ], [ %261, %260 ]
  %266 = icmp eq ptr %57, %3
  %267 = select i1 %266, ptr @.str.636, ptr @.str.221
  %268 = select i1 %266, ptr @.str.637, ptr @.str.8
  %269 = load i32, ptr %48, align 8, !tbaa !50
  %270 = icmp ne i32 %269, 0
  %271 = zext i1 %270 to i32
  %272 = load ptr, ptr %49, align 8, !tbaa !107
  %273 = ptrtoint ptr %272 to i64
  %274 = add i64 %257, %264
  %275 = sub i64 %273, %274
  %276 = getelementptr inbounds i8, ptr %265, i64 %257
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.638, ptr noundef nonnull %267, ptr noundef nonnull %268, i32 noundef %271, i64 noundef %257, ptr noundef %265, i32 noundef %271, i64 noundef %275, ptr noundef %276) #15
  br label %358

277:                                              ; preds = %53
  %278 = icmp eq ptr %57, %3
  br i1 %278, label %279, label %295

279:                                              ; preds = %277
  %280 = load ptr, ptr %45, align 8, !tbaa !112
  %281 = icmp eq ptr %280, %46
  br i1 %281, label %358, label %282

282:                                              ; preds = %279
  %283 = getelementptr inbounds i8, ptr %55, i64 1
  %284 = ptrtoint ptr %283 to i64
  %285 = load ptr, ptr %47, align 8, !tbaa !65
  %286 = ptrtoint ptr %285 to i64
  %287 = sub i64 %284, %286
  %288 = load i32, ptr %48, align 8, !tbaa !50
  %289 = icmp ne i32 %288, 0
  %290 = zext i1 %289 to i32
  %291 = load ptr, ptr %49, align 8, !tbaa !107
  %292 = ptrtoint ptr %291 to i64
  %293 = sub i64 %292, %284
  %294 = getelementptr inbounds i8, ptr %285, i64 %287
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.639, i32 noundef %290, i64 noundef %287, ptr noundef %285, i32 noundef %290, i64 noundef %293, ptr noundef %294) #15
  br label %358

295:                                              ; preds = %277
  %296 = load i32, ptr %57, align 4, !tbaa !73
  %297 = or i32 %296, 64
  store i32 %297, ptr %57, align 4, !tbaa !73
  br label %358

298:                                              ; preds = %53
  %299 = icmp eq ptr %57, %3
  %300 = select i1 %8, i1 true, i1 %299
  br i1 %300, label %321, label %358

301:                                              ; preds = %53, %53
  %302 = load i32, ptr %2, align 4, !tbaa !73
  %303 = load i32, ptr %0, align 8, !tbaa !66
  %304 = or i32 %303, %302
  %305 = load i32, ptr %3, align 4, !tbaa !73
  %306 = xor i32 %305, -1
  %307 = and i32 %304, %306
  %308 = and i32 %307, -897
  %309 = shl nuw nsw i32 %59, 7
  %310 = or i32 %308, %309
  store i32 %310, ptr %0, align 4, !tbaa !73
  %311 = and i32 %307, 4
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %315, label %313

313:                                              ; preds = %301
  %314 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 35
  store i32 1, ptr %314, align 4, !tbaa !53
  br label %315

315:                                              ; preds = %313, %301
  %316 = load ptr, ptr %45, align 8, !tbaa !112
  %317 = icmp ne ptr %316, %46
  %318 = icmp sgt i32 %60, 1
  %319 = select i1 %317, i1 %318, i1 false
  br i1 %319, label %320, label %396

320:                                              ; preds = %315
  call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 5122, ptr noundef nonnull @.str.640, i32 noundef 120) #15
  br label %396

321:                                              ; preds = %92, %298, %53
  %322 = load i32, ptr %48, align 8, !tbaa !50
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %329, label %324

324:                                              ; preds = %321
  %325 = zext i8 %54 to i64
  %326 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %325
  %327 = load i8, ptr %326, align 1, !tbaa !17
  %328 = zext i8 %327 to i64
  br label %329

329:                                              ; preds = %324, %321
  %330 = phi i64 [ %328, %324 ], [ 1, %321 ]
  %331 = getelementptr inbounds i8, ptr %55, i64 %330
  store ptr %331, ptr %4, align 8, !tbaa !105
  %332 = load ptr, ptr %47, align 8, !tbaa !65
  %333 = ptrtoint ptr %331 to i64
  %334 = ptrtoint ptr %332 to i64
  %335 = sub i64 %333, %334
  %336 = load ptr, ptr %45, align 8, !tbaa !112
  %337 = icmp eq ptr %336, %46
  br i1 %337, label %345, label %338

338:                                              ; preds = %329
  %339 = load ptr, ptr %51, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %339, i32 noundef 11) #15
  %340 = load i32, ptr %48, align 8, !tbaa !50
  %341 = load ptr, ptr %4, align 8, !tbaa !105
  %342 = load ptr, ptr %47, align 8, !tbaa !65
  %343 = ptrtoint ptr %341 to i64
  %344 = ptrtoint ptr %342 to i64
  br label %345

345:                                              ; preds = %338, %329
  %346 = phi i64 [ %344, %338 ], [ %334, %329 ]
  %347 = phi i64 [ %343, %338 ], [ %333, %329 ]
  %348 = phi ptr [ %342, %338 ], [ %332, %329 ]
  %349 = phi i32 [ %340, %338 ], [ %322, %329 ]
  %350 = icmp ne i32 %349, 0
  %351 = zext i1 %350 to i32
  %352 = sub i64 %347, %52
  %353 = load ptr, ptr %49, align 8, !tbaa !107
  %354 = ptrtoint ptr %353 to i64
  %355 = add i64 %335, %346
  %356 = sub i64 %354, %355
  %357 = getelementptr inbounds i8, ptr %348, i64 %335
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %350, ptr noundef nonnull @.str.425, ptr nonnull poison, i32 noundef %351, i64 noundef %352, ptr noundef nonnull %6, i32 noundef %351, i64 noundef %335, ptr noundef %348, i32 noundef %351, i64 noundef %356, ptr noundef %357)
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.220, i32 noundef 9727) #15
  br label %358

358:                                              ; preds = %104, %100, %298, %205, %226, %90, %88, %84, %80, %295, %282, %279, %242, %245, %263, %200, %203, %345, %75, %71, %68, %65, %62
  %359 = phi i32 [ %60, %345 ], [ %60, %279 ], [ %60, %282 ], [ %60, %295 ], [ %60, %242 ], [ %60, %263 ], [ %60, %245 ], [ %60, %200 ], [ %60, %203 ], [ %60, %75 ], [ %74, %71 ], [ %60, %68 ], [ %60, %65 ], [ %60, %62 ], [ %60, %80 ], [ %60, %84 ], [ %60, %88 ], [ %60, %90 ], [ %60, %226 ], [ %60, %205 ], [ %60, %298 ], [ %60, %100 ], [ %60, %104 ]
  %360 = phi i32 [ %59, %345 ], [ %59, %279 ], [ %59, %282 ], [ %59, %295 ], [ %59, %242 ], [ %59, %263 ], [ %59, %245 ], [ %59, %200 ], [ %59, %203 ], [ %59, %75 ], [ %59, %71 ], [ %59, %68 ], [ %59, %65 ], [ %59, %62 ], [ 1, %80 ], [ 2, %84 ], [ 3, %88 ], [ 4, %90 ], [ %59, %226 ], [ %59, %205 ], [ %59, %298 ], [ 0, %100 ], [ 2, %104 ]
  %361 = phi i8 [ %58, %345 ], [ %58, %279 ], [ %58, %282 ], [ %58, %295 ], [ %58, %242 ], [ %58, %263 ], [ %58, %245 ], [ %58, %200 ], [ %58, %203 ], [ %58, %75 ], [ %58, %71 ], [ %58, %68 ], [ %58, %65 ], [ %58, %62 ], [ 108, %80 ], [ 117, %84 ], [ 97, %88 ], [ 97, %90 ], [ %58, %226 ], [ %58, %205 ], [ %58, %298 ], [ 100, %100 ], [ 100, %104 ]
  %362 = phi ptr [ %57, %345 ], [ %3, %279 ], [ %3, %282 ], [ %57, %295 ], [ %57, %242 ], [ %57, %263 ], [ %57, %245 ], [ %57, %200 ], [ %57, %203 ], [ %57, %75 ], [ %57, %71 ], [ %57, %68 ], [ %57, %65 ], [ %57, %62 ], [ %57, %80 ], [ %57, %84 ], [ %57, %88 ], [ %57, %90 ], [ %57, %226 ], [ %57, %205 ], [ %3, %298 ], [ %57, %100 ], [ %57, %104 ]
  %363 = phi i32 [ %56, %345 ], [ %56, %279 ], [ %56, %282 ], [ %56, %295 ], [ %56, %242 ], [ %251, %263 ], [ %56, %245 ], [ %56, %200 ], [ %56, %203 ], [ %56, %75 ], [ %56, %71 ], [ %56, %68 ], [ %56, %65 ], [ %56, %62 ], [ %56, %80 ], [ %56, %84 ], [ %56, %88 ], [ %56, %90 ], [ %213, %226 ], [ %56, %205 ], [ 0, %298 ], [ %56, %100 ], [ %56, %104 ]
  %364 = load ptr, ptr %4, align 8, !tbaa !105
  %365 = getelementptr inbounds i8, ptr %364, i64 1
  store ptr %365, ptr %4, align 8, !tbaa !105
  %366 = load i8, ptr %365, align 1, !tbaa !17
  %367 = icmp eq i8 %366, 0
  br i1 %367, label %368, label %53, !llvm.loop !394

368:                                              ; preds = %358, %40
  %369 = phi ptr [ %26, %40 ], [ %365, %358 ]
  %370 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %371 = load ptr, ptr %370, align 8, !tbaa !112
  %372 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %373 = icmp eq ptr %371, %372
  br i1 %373, label %378, label %374

374:                                              ; preds = %368
  %375 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %376 = load ptr, ptr %375, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %376, i32 noundef 11) #15
  %377 = load ptr, ptr %4, align 8, !tbaa !105
  br label %378

378:                                              ; preds = %368, %374
  %379 = phi ptr [ %369, %368 ], [ %377, %374 ]
  %380 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %381 = load ptr, ptr %380, align 8, !tbaa !107
  %382 = icmp ugt ptr %379, %381
  %383 = select i1 %382, ptr %381, ptr %379
  %384 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %385 = load ptr, ptr %384, align 8, !tbaa !65
  %386 = ptrtoint ptr %383 to i64
  %387 = ptrtoint ptr %385 to i64
  %388 = sub i64 %386, %387
  %389 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %390 = load i32, ptr %389, align 8, !tbaa !50
  %391 = icmp ne i32 %390, 0
  %392 = zext i1 %391 to i32
  %393 = ptrtoint ptr %381 to i64
  %394 = sub i64 %393, %386
  %395 = getelementptr inbounds i8, ptr %385, i64 %388
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.641, i32 noundef %392, i64 noundef %388, ptr noundef %385, i32 noundef %392, i64 noundef %394, ptr noundef %395) #15
  br label %396

396:                                              ; preds = %315, %320, %378
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #15
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_reginsert(ptr noundef %0, i8 noundef zeroext %1, ptr noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = alloca i64, align 8
  %6 = zext i8 %1 to i64
  %7 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %6
  %8 = load i8, ptr %7, align 1, !tbaa !17
  %9 = zext i8 %8 to i64
  %10 = add nuw nsw i64 %9, 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  store volatile i64 0, ptr %5, align 8, !tbaa !9
  %11 = load volatile i64, ptr %5, align 8, !tbaa !9
  %12 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %13 = icmp eq ptr %12, null
  br i1 %13, label %33, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.sv, ptr %12, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !13
  %17 = and i32 %16, 256
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  tail call void @Perl_sv_setuv(ptr noundef nonnull %12, i64 noundef 65288) #15
  %20 = load i32, ptr %15, align 4, !tbaa !13
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i32 [ %20, %19 ], [ %16, %14 ]
  %23 = and i32 %22, 2097408
  %24 = icmp eq i32 %23, 256
  br i1 %24, label %25, label %29

25:                                               ; preds = %21
  %26 = load ptr, ptr %12, align 8, !tbaa !16
  %27 = getelementptr inbounds %struct.xpviv, ptr %26, i64 0, i32 4
  %28 = load i64, ptr %27, align 8, !tbaa !17
  br label %31

29:                                               ; preds = %21
  %30 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %12, i32 noundef 2) #15
  br label %31

31:                                               ; preds = %29, %25
  %32 = phi i64 [ %28, %25 ], [ %30, %29 ]
  store volatile i64 %32, ptr %5, align 8, !tbaa !9
  br label %33

33:                                               ; preds = %31, %4
  %34 = icmp eq ptr %0, null
  br i1 %34, label %35, label %36

35:                                               ; preds = %33
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 16423) #15
  br label %36

36:                                               ; preds = %33, %35
  %37 = icmp eq ptr %2, null
  br i1 %37, label %38, label %39

38:                                               ; preds = %36
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.642, i32 noundef 16423) #15
  br label %39

39:                                               ; preds = %36, %38
  %40 = load volatile i64, ptr %5, align 8, !tbaa !9
  %41 = and i64 %40, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %107, label %43

43:                                               ; preds = %39
  %44 = load volatile i64, ptr %5, align 8, !tbaa !9
  %45 = and i64 %44, 1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %102, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 47
  %49 = load ptr, ptr %48, align 8, !tbaa !119
  %50 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %51 = load ptr, ptr %50, align 8, !tbaa !105
  %52 = icmp eq ptr %49, %51
  %53 = tail call ptr @Perl_PerlIO_stderr() #15
  br i1 %52, label %65, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 51
  %56 = load ptr, ptr %55, align 8, !tbaa !56
  %57 = load ptr, ptr %50, align 8, !tbaa !105
  %58 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %59 = load ptr, ptr %58, align 8, !tbaa !107
  %60 = ptrtoint ptr %59 to i64
  %61 = ptrtoint ptr %57 to i64
  %62 = sub i64 %60, %61
  %63 = tail call ptr @Perl_pv_pretty(ptr noundef %56, ptr noundef %57, i64 noundef %62, i64 noundef 16, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.8, i32 noundef 33294) #15
  %64 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %53, ptr noundef nonnull @.str.34, ptr noundef %63) #15
  br label %67

65:                                               ; preds = %47
  %66 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %53, ptr noundef nonnull @.str.385, ptr noundef nonnull @.str.8) #15
  br label %67

67:                                               ; preds = %65, %54
  %68 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %69 = load ptr, ptr %68, align 8, !tbaa !112
  %70 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %71 = icmp eq ptr %69, %70
  br i1 %71, label %72, label %77

72:                                               ; preds = %67
  %73 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %74 = load i64, ptr %73, align 8, !tbaa !111
  %75 = trunc i64 %74 to i32
  %76 = add i32 %75, 1
  br label %87

77:                                               ; preds = %67
  %78 = icmp eq ptr %69, null
  br i1 %78, label %87, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %81 = load ptr, ptr %80, align 8, !tbaa !131
  %82 = ptrtoint ptr %69 to i64
  %83 = ptrtoint ptr %81 to i64
  %84 = sub i64 %82, %83
  %85 = lshr exact i64 %84, 2
  %86 = trunc i64 %85 to i32
  br label %87

87:                                               ; preds = %79, %77, %72
  %88 = phi i32 [ %76, %72 ], [ %86, %79 ], [ -1, %77 ]
  %89 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 48
  %90 = load i32, ptr %89, align 8, !tbaa !118
  %91 = icmp eq i32 %90, %88
  %92 = tail call ptr @Perl_PerlIO_stderr() #15
  br i1 %91, label %95, label %93

93:                                               ; preds = %87
  %94 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %92, ptr noundef nonnull @.str.386, i32 noundef %88) #15
  br label %97

95:                                               ; preds = %87
  %96 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %92, ptr noundef nonnull @.str.387, ptr noundef nonnull @.str.8) #15
  br label %97

97:                                               ; preds = %95, %93
  %98 = tail call ptr @Perl_PerlIO_stderr() #15
  %99 = shl i32 %3, 1
  %100 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %98, ptr noundef nonnull @.str.388, i32 noundef %99, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.643) #15
  store i32 %88, ptr %89, align 8, !tbaa !118
  %101 = load ptr, ptr %50, align 8, !tbaa !105
  store ptr %101, ptr %48, align 8, !tbaa !119
  br label %102

102:                                              ; preds = %97, %43
  %103 = tail call ptr @Perl_PerlIO_stderr() #15
  %104 = getelementptr inbounds [0 x ptr], ptr @PL_reg_name, i64 0, i64 %6
  %105 = load ptr, ptr %104, align 8, !tbaa !5
  %106 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %103, ptr noundef nonnull @.str.644, ptr noundef %105) #15
  br label %107

107:                                              ; preds = %102, %39
  %108 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %109 = load ptr, ptr %108, align 8, !tbaa !112
  %110 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %111 = icmp eq ptr %109, %110
  br i1 %111, label %112, label %116

112:                                              ; preds = %107
  %113 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %114 = load i64, ptr %113, align 8, !tbaa !111
  %115 = add nsw i64 %114, %10
  store i64 %115, ptr %113, align 8, !tbaa !111
  br label %390

116:                                              ; preds = %107
  %117 = getelementptr inbounds %struct.regnode, ptr %109, i64 %10
  store ptr %117, ptr %108, align 8, !tbaa !112
  %118 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 22
  %119 = load ptr, ptr %118, align 8, !tbaa !127
  %120 = icmp eq ptr %119, null
  br i1 %120, label %146, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %123 = load i32, ptr %122, align 8, !tbaa !109
  %124 = icmp sgt i32 %123, 0
  br i1 %124, label %125, label %146

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 23
  %127 = zext i32 %123 to i64
  br label %128

128:                                              ; preds = %125, %143
  %129 = phi i64 [ 0, %125 ], [ %144, %143 ]
  %130 = load ptr, ptr %118, align 8, !tbaa !127
  %131 = getelementptr inbounds ptr, ptr %130, i64 %129
  %132 = load ptr, ptr %131, align 8, !tbaa !5
  %133 = icmp ult ptr %132, %2
  br i1 %133, label %136, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %struct.regnode, ptr %132, i64 %10
  store ptr %135, ptr %131, align 8, !tbaa !5
  br label %136

136:                                              ; preds = %128, %134
  %137 = load ptr, ptr %126, align 8, !tbaa !128
  %138 = getelementptr inbounds ptr, ptr %137, i64 %129
  %139 = load ptr, ptr %138, align 8, !tbaa !5
  %140 = icmp ult ptr %139, %2
  br i1 %140, label %143, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %struct.regnode, ptr %139, i64 %10
  store ptr %142, ptr %138, align 8, !tbaa !5
  br label %143

143:                                              ; preds = %141, %136
  %144 = add nuw nsw i64 %129, 1
  %145 = icmp eq i64 %144, %127
  br i1 %145, label %146, label %128, !llvm.loop !395

146:                                              ; preds = %143, %121, %116
  %147 = icmp ugt ptr %109, %2
  br i1 %147, label %148, label %271

148:                                              ; preds = %146
  %149 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %150 = getelementptr inbounds [0 x ptr], ptr @PL_reg_name, i64 0, i64 %6
  %151 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  br label %152

152:                                              ; preds = %148, %269
  %153 = phi ptr [ %109, %148 ], [ %156, %269 ]
  %154 = phi ptr [ %117, %148 ], [ %155, %269 ]
  %155 = getelementptr inbounds %struct.regnode, ptr %154, i64 -1
  %156 = getelementptr inbounds %struct.regnode, ptr %153, i64 -1
  %157 = load i32, ptr %156, align 2
  store i32 %157, ptr %155, align 2
  %158 = load ptr, ptr %149, align 8, !tbaa !130
  %159 = getelementptr inbounds %struct.regexp_internal, ptr %158, i64 0, i32 1
  %160 = load ptr, ptr %159, align 8, !tbaa !17
  %161 = icmp eq ptr %160, null
  br i1 %161, label %269, label %162

162:                                              ; preds = %152
  %163 = load volatile i64, ptr %5, align 8, !tbaa !9
  %164 = and i64 %163, 262144
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %180, label %166

166:                                              ; preds = %162
  %167 = load ptr, ptr %150, align 8, !tbaa !5
  %168 = load ptr, ptr %151, align 8, !tbaa !131
  %169 = ptrtoint ptr %155 to i64
  %170 = ptrtoint ptr %168 to i64
  %171 = sub i64 %169, %170
  %172 = ashr exact i64 %171, 2
  %173 = load i32, ptr %160, align 4, !tbaa !73
  %174 = zext i32 %173 to i64
  %175 = icmp ugt i64 %172, %174
  %176 = select i1 %175, ptr @.str.458, ptr @.str.459
  %177 = ptrtoint ptr %156 to i64
  %178 = sub i64 %177, %170
  %179 = ashr exact i64 %178, 2
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.645, ptr noundef nonnull @.str.646, i32 noundef 16462, ptr noundef %167, ptr noundef nonnull %176, i64 noundef %179, i64 noundef %172, i64 noundef %174) #15
  br label %180

180:                                              ; preds = %162, %166
  %181 = load ptr, ptr %108, align 8, !tbaa !112
  %182 = icmp eq ptr %181, %110
  br i1 %182, label %227, label %183

183:                                              ; preds = %180
  %184 = load volatile i64, ptr %5, align 8, !tbaa !9
  %185 = and i64 %184, 262144
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %189

187:                                              ; preds = %183
  %188 = ptrtoint ptr %155 to i64
  br label %205

189:                                              ; preds = %183
  %190 = load ptr, ptr %151, align 8, !tbaa !131
  %191 = ptrtoint ptr %155 to i64
  %192 = ptrtoint ptr %190 to i64
  %193 = sub i64 %191, %192
  %194 = lshr exact i64 %193, 2
  %195 = trunc i64 %194 to i32
  %196 = load ptr, ptr %149, align 8, !tbaa !130
  %197 = getelementptr inbounds %struct.regexp_internal, ptr %196, i64 0, i32 1
  %198 = load ptr, ptr %197, align 8, !tbaa !17
  %199 = ptrtoint ptr %156 to i64
  %200 = sub i64 %199, %192
  %201 = ashr exact i64 %200, 1
  %202 = add nsw i64 %201, -1
  %203 = getelementptr inbounds i32, ptr %198, i64 %202
  %204 = load i32, ptr %203, align 4, !tbaa !73
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 16469, i32 noundef %195, i32 noundef %204) #15
  br label %205

205:                                              ; preds = %187, %189
  %206 = phi i64 [ %188, %187 ], [ %191, %189 ]
  %207 = load ptr, ptr %151, align 8, !tbaa !131
  %208 = ptrtoint ptr %207 to i64
  %209 = sub i64 %206, %208
  %210 = icmp slt i64 %209, 0
  br i1 %210, label %211, label %214

211:                                              ; preds = %205
  %212 = lshr exact i64 %209, 2
  %213 = trunc i64 %212 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %213) #15
  br label %227

214:                                              ; preds = %205
  %215 = load ptr, ptr %149, align 8, !tbaa !130
  %216 = getelementptr inbounds %struct.regexp_internal, ptr %215, i64 0, i32 1
  %217 = load ptr, ptr %216, align 8, !tbaa !17
  %218 = ptrtoint ptr %156 to i64
  %219 = sub i64 %218, %208
  %220 = ashr exact i64 %219, 1
  %221 = add nsw i64 %220, -1
  %222 = getelementptr inbounds i32, ptr %217, i64 %221
  %223 = load i32, ptr %222, align 4, !tbaa !73
  %224 = lshr exact i64 %209, 1
  %225 = add nsw i64 %224, -1
  %226 = getelementptr inbounds i32, ptr %217, i64 %225
  store i32 %223, ptr %226, align 4, !tbaa !73
  br label %227

227:                                              ; preds = %180, %214, %211
  %228 = load ptr, ptr %108, align 8, !tbaa !112
  %229 = icmp eq ptr %228, %110
  br i1 %229, label %269, label %230

230:                                              ; preds = %227
  %231 = load volatile i64, ptr %5, align 8, !tbaa !9
  %232 = and i64 %231, 262144
  %233 = icmp eq i64 %232, 0
  %234 = load ptr, ptr %151, align 8, !tbaa !131
  %235 = ptrtoint ptr %155 to i64
  br i1 %233, label %250, label %236

236:                                              ; preds = %230
  %237 = ptrtoint ptr %234 to i64
  %238 = sub i64 %235, %237
  %239 = lshr exact i64 %238, 2
  %240 = trunc i64 %239 to i32
  %241 = load ptr, ptr %149, align 8, !tbaa !130
  %242 = getelementptr inbounds %struct.regexp_internal, ptr %241, i64 0, i32 1
  %243 = load ptr, ptr %242, align 8, !tbaa !17
  %244 = ptrtoint ptr %156 to i64
  %245 = sub i64 %244, %237
  %246 = ashr exact i64 %245, 1
  %247 = getelementptr inbounds i32, ptr %243, i64 %246
  %248 = load i32, ptr %247, align 4, !tbaa !73
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 16470, i32 noundef %240, i32 noundef %248) #15
  %249 = load ptr, ptr %151, align 8, !tbaa !131
  br label %250

250:                                              ; preds = %230, %236
  %251 = phi ptr [ %249, %236 ], [ %234, %230 ]
  %252 = ptrtoint ptr %251 to i64
  %253 = sub i64 %235, %252
  %254 = icmp slt i64 %253, 0
  br i1 %254, label %255, label %258

255:                                              ; preds = %250
  %256 = lshr exact i64 %253, 2
  %257 = trunc i64 %256 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %257) #15
  br label %269

258:                                              ; preds = %250
  %259 = load ptr, ptr %149, align 8, !tbaa !130
  %260 = getelementptr inbounds %struct.regexp_internal, ptr %259, i64 0, i32 1
  %261 = load ptr, ptr %260, align 8, !tbaa !17
  %262 = ptrtoint ptr %156 to i64
  %263 = sub i64 %262, %252
  %264 = ashr exact i64 %263, 1
  %265 = getelementptr inbounds i32, ptr %261, i64 %264
  %266 = load i32, ptr %265, align 4, !tbaa !73
  %267 = lshr exact i64 %253, 1
  %268 = getelementptr inbounds i32, ptr %261, i64 %267
  store i32 %266, ptr %268, align 4, !tbaa !73
  br label %269

269:                                              ; preds = %227, %258, %255, %152
  %270 = icmp ugt ptr %156, %2
  br i1 %270, label %152, label %271, !llvm.loop !396

271:                                              ; preds = %269, %146
  %272 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %273 = load ptr, ptr %272, align 8, !tbaa !130
  %274 = getelementptr inbounds %struct.regexp_internal, ptr %273, i64 0, i32 1
  %275 = load ptr, ptr %274, align 8, !tbaa !17
  %276 = icmp eq ptr %275, null
  br i1 %276, label %384, label %277

277:                                              ; preds = %271
  %278 = load volatile i64, ptr %5, align 8, !tbaa !9
  %279 = and i64 %278, 262144
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %301, label %281

281:                                              ; preds = %277
  %282 = getelementptr inbounds [0 x ptr], ptr @PL_reg_name, i64 0, i64 %6
  %283 = load ptr, ptr %282, align 8, !tbaa !5
  %284 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %285 = load ptr, ptr %284, align 8, !tbaa !131
  %286 = ptrtoint ptr %2 to i64
  %287 = ptrtoint ptr %285 to i64
  %288 = sub i64 %286, %287
  %289 = ashr exact i64 %288, 2
  %290 = load i32, ptr %275, align 4, !tbaa !73
  %291 = zext i32 %290 to i64
  %292 = icmp ugt i64 %289, %291
  %293 = select i1 %292, ptr @.str.458, ptr @.str.459
  %294 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %295 = load ptr, ptr %294, align 8, !tbaa !105
  %296 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %297 = load ptr, ptr %296, align 8, !tbaa !106
  %298 = ptrtoint ptr %295 to i64
  %299 = ptrtoint ptr %297 to i64
  %300 = sub i64 %298, %299
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.647, ptr noundef nonnull @.str.648, i32 noundef 16482, ptr noundef %283, ptr noundef nonnull %293, i64 noundef %289, i64 noundef %300, i64 noundef %291) #15
  br label %301

301:                                              ; preds = %277, %281
  %302 = load ptr, ptr %108, align 8, !tbaa !112
  %303 = icmp eq ptr %302, %110
  br i1 %303, label %351, label %304

304:                                              ; preds = %301
  %305 = load volatile i64, ptr %5, align 8, !tbaa !9
  %306 = and i64 %305, 262144
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %310

308:                                              ; preds = %304
  %309 = ptrtoint ptr %2 to i64
  br label %326

310:                                              ; preds = %304
  %311 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %312 = load ptr, ptr %311, align 8, !tbaa !131
  %313 = ptrtoint ptr %2 to i64
  %314 = ptrtoint ptr %312 to i64
  %315 = sub i64 %313, %314
  %316 = lshr exact i64 %315, 2
  %317 = trunc i64 %316 to i32
  %318 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %319 = load ptr, ptr %318, align 8, !tbaa !105
  %320 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %321 = load ptr, ptr %320, align 8, !tbaa !106
  %322 = ptrtoint ptr %319 to i64
  %323 = ptrtoint ptr %321 to i64
  %324 = sub i64 %322, %323
  %325 = trunc i64 %324 to i32
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 16489, i32 noundef %317, i32 noundef %325) #15
  br label %326

326:                                              ; preds = %308, %310
  %327 = phi i64 [ %309, %308 ], [ %313, %310 ]
  %328 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %329 = load ptr, ptr %328, align 8, !tbaa !131
  %330 = ptrtoint ptr %329 to i64
  %331 = sub i64 %327, %330
  %332 = icmp slt i64 %331, 0
  br i1 %332, label %333, label %336

333:                                              ; preds = %326
  %334 = lshr exact i64 %331, 2
  %335 = trunc i64 %334 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %335) #15
  br label %351

336:                                              ; preds = %326
  %337 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %338 = load ptr, ptr %337, align 8, !tbaa !105
  %339 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %340 = load ptr, ptr %339, align 8, !tbaa !106
  %341 = ptrtoint ptr %338 to i64
  %342 = ptrtoint ptr %340 to i64
  %343 = sub i64 %341, %342
  %344 = trunc i64 %343 to i32
  %345 = load ptr, ptr %272, align 8, !tbaa !130
  %346 = getelementptr inbounds %struct.regexp_internal, ptr %345, i64 0, i32 1
  %347 = load ptr, ptr %346, align 8, !tbaa !17
  %348 = lshr exact i64 %331, 1
  %349 = add nsw i64 %348, -1
  %350 = getelementptr inbounds i32, ptr %347, i64 %349
  store i32 %344, ptr %350, align 4, !tbaa !73
  br label %351

351:                                              ; preds = %301, %336, %333
  %352 = load ptr, ptr %108, align 8, !tbaa !112
  %353 = icmp eq ptr %352, %110
  br i1 %353, label %384, label %354

354:                                              ; preds = %351
  %355 = load volatile i64, ptr %5, align 8, !tbaa !9
  %356 = and i64 %355, 262144
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %358, label %360

358:                                              ; preds = %354
  %359 = ptrtoint ptr %2 to i64
  br label %368

360:                                              ; preds = %354
  %361 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %362 = load ptr, ptr %361, align 8, !tbaa !131
  %363 = ptrtoint ptr %2 to i64
  %364 = ptrtoint ptr %362 to i64
  %365 = sub i64 %363, %364
  %366 = lshr exact i64 %365, 2
  %367 = trunc i64 %366 to i32
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 16490, i32 noundef %367, i32 noundef 1) #15
  br label %368

368:                                              ; preds = %358, %360
  %369 = phi i64 [ %359, %358 ], [ %363, %360 ]
  %370 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %371 = load ptr, ptr %370, align 8, !tbaa !131
  %372 = ptrtoint ptr %371 to i64
  %373 = sub i64 %369, %372
  %374 = icmp slt i64 %373, 0
  br i1 %374, label %375, label %378

375:                                              ; preds = %368
  %376 = lshr exact i64 %373, 2
  %377 = trunc i64 %376 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %377) #15
  br label %384

378:                                              ; preds = %368
  %379 = load ptr, ptr %272, align 8, !tbaa !130
  %380 = getelementptr inbounds %struct.regexp_internal, ptr %379, i64 0, i32 1
  %381 = load ptr, ptr %380, align 8, !tbaa !17
  %382 = lshr exact i64 %373, 1
  %383 = getelementptr inbounds i32, ptr %381, i64 %382
  store i32 1, ptr %383, align 4, !tbaa !73
  br label %384

384:                                              ; preds = %351, %378, %375, %271
  %385 = getelementptr inbounds %struct.regnode, ptr %2, i64 1
  %386 = getelementptr inbounds %struct.regnode, ptr %2, i64 0, i32 1
  store i8 %1, ptr %386, align 1, !tbaa !141
  %387 = getelementptr inbounds %struct.regnode, ptr %2, i64 0, i32 2
  store i16 0, ptr %387, align 2, !tbaa !222
  %388 = zext i8 %8 to i64
  %389 = shl nuw nsw i64 %388, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 1 %385, i8 0, i64 %389, i1 false)
  br label %390

390:                                              ; preds = %384, %112
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_regtail_study(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  store volatile i64 0, ptr %5, align 8, !tbaa !9
  %6 = load volatile i64, ptr %5, align 8, !tbaa !9
  %7 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %8 = icmp eq ptr %7, null
  br i1 %8, label %28, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !13
  %12 = and i32 %11, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  tail call void @Perl_sv_setuv(ptr noundef nonnull %7, i64 noundef 65288) #15
  %15 = load i32, ptr %10, align 4, !tbaa !13
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i32 [ %15, %14 ], [ %11, %9 ]
  %18 = and i32 %17, 2097408
  %19 = icmp eq i32 %18, 256
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = load ptr, ptr %7, align 8, !tbaa !16
  %22 = getelementptr inbounds %struct.xpviv, ptr %21, i64 0, i32 4
  %23 = load i64, ptr %22, align 8, !tbaa !17
  br label %26

24:                                               ; preds = %16
  %25 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %7, i32 noundef 2) #15
  br label %26

26:                                               ; preds = %24, %20
  %27 = phi i64 [ %23, %20 ], [ %25, %24 ]
  store volatile i64 %27, ptr %5, align 8, !tbaa !9
  br label %28

28:                                               ; preds = %26, %4
  %29 = icmp eq ptr %0, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %28
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 16572) #15
  br label %31

31:                                               ; preds = %28, %30
  %32 = icmp eq ptr %1, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %31
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.463, i32 noundef 16572) #15
  br label %34

34:                                               ; preds = %31, %33
  %35 = icmp eq ptr %2, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %34
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.472, i32 noundef 16572) #15
  br label %37

37:                                               ; preds = %34, %36
  %38 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %39 = load ptr, ptr %38, align 8, !tbaa !112
  %40 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %41 = icmp eq ptr %39, %40
  br i1 %41, label %256, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 47
  %44 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %45 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 51
  %46 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %47 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %48 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %49 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 48
  %50 = shl i32 %3, 1
  %51 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 4
  br label %52

52:                                               ; preds = %42, %152
  %53 = phi ptr [ %55, %152 ], [ %1, %42 ]
  %54 = phi i8 [ %67, %152 ], [ 93, %42 ]
  %55 = tail call ptr @Perl_regnext(ptr noundef %53) #15
  %56 = icmp eq i8 %54, 0
  br i1 %56, label %66, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.regnode, ptr %53, i64 0, i32 1
  %59 = load i8, ptr %58, align 1, !tbaa !141
  switch i8 %59, label %65 [
    i8 31, label %60
    i8 32, label %60
    i8 33, label %60
    i8 39, label %60
    i8 36, label %60
    i8 35, label %60
    i8 38, label %60
    i8 37, label %60
    i8 34, label %60
    i8 40, label %66
  ]

60:                                               ; preds = %57, %57, %57, %57, %57, %57, %57, %57, %57
  %61 = icmp eq i8 %54, 93
  br i1 %61, label %66, label %62

62:                                               ; preds = %60
  %63 = icmp eq i8 %54, %59
  %64 = select i1 %63, i8 %54, i8 0
  br label %66

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %60, %52, %62, %65, %57
  %67 = phi i8 [ 0, %65 ], [ %54, %57 ], [ %64, %62 ], [ 0, %52 ], [ %59, %60 ]
  %68 = load volatile i64, ptr %5, align 8, !tbaa !9
  %69 = and i64 %68, 1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %152, label %71

71:                                               ; preds = %66
  %72 = load volatile i64, ptr %5, align 8, !tbaa !9
  %73 = and i64 %72, 1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %122, label %75

75:                                               ; preds = %71
  %76 = load ptr, ptr %43, align 8, !tbaa !119
  %77 = load ptr, ptr %44, align 8, !tbaa !105
  %78 = icmp eq ptr %76, %77
  %79 = tail call ptr @Perl_PerlIO_stderr() #15
  br i1 %78, label %89, label %80

80:                                               ; preds = %75
  %81 = load ptr, ptr %45, align 8, !tbaa !56
  %82 = load ptr, ptr %44, align 8, !tbaa !105
  %83 = load ptr, ptr %46, align 8, !tbaa !107
  %84 = ptrtoint ptr %83 to i64
  %85 = ptrtoint ptr %82 to i64
  %86 = sub i64 %84, %85
  %87 = tail call ptr @Perl_pv_pretty(ptr noundef %81, ptr noundef %82, i64 noundef %86, i64 noundef 16, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.8, i32 noundef 33294) #15
  %88 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %79, ptr noundef nonnull @.str.34, ptr noundef %87) #15
  br label %91

89:                                               ; preds = %75
  %90 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %79, ptr noundef nonnull @.str.385, ptr noundef nonnull @.str.8) #15
  br label %91

91:                                               ; preds = %89, %80
  %92 = load ptr, ptr %38, align 8, !tbaa !112
  %93 = icmp eq ptr %92, %40
  br i1 %93, label %94, label %98

94:                                               ; preds = %91
  %95 = load i64, ptr %48, align 8, !tbaa !111
  %96 = trunc i64 %95 to i32
  %97 = add i32 %96, 1
  br label %107

98:                                               ; preds = %91
  %99 = icmp eq ptr %92, null
  br i1 %99, label %107, label %100

100:                                              ; preds = %98
  %101 = load ptr, ptr %47, align 8, !tbaa !131
  %102 = ptrtoint ptr %92 to i64
  %103 = ptrtoint ptr %101 to i64
  %104 = sub i64 %102, %103
  %105 = lshr exact i64 %104, 2
  %106 = trunc i64 %105 to i32
  br label %107

107:                                              ; preds = %100, %98, %94
  %108 = phi i32 [ %97, %94 ], [ %106, %100 ], [ -1, %98 ]
  %109 = load i32, ptr %49, align 8, !tbaa !118
  %110 = icmp eq i32 %109, %108
  %111 = tail call ptr @Perl_PerlIO_stderr() #15
  br i1 %110, label %114, label %112

112:                                              ; preds = %107
  %113 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %111, ptr noundef nonnull @.str.386, i32 noundef %108) #15
  br label %116

114:                                              ; preds = %107
  %115 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %111, ptr noundef nonnull @.str.387, ptr noundef nonnull @.str.8) #15
  br label %116

116:                                              ; preds = %114, %112
  %117 = tail call ptr @Perl_PerlIO_stderr() #15
  %118 = icmp eq ptr %53, %1
  %119 = select i1 %118, ptr @.str.649, ptr @.str.8
  %120 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %117, ptr noundef nonnull @.str.388, i32 noundef %50, ptr noundef nonnull @.str.8, ptr noundef nonnull %119) #15
  store i32 %108, ptr %49, align 8, !tbaa !118
  %121 = load ptr, ptr %44, align 8, !tbaa !105
  store ptr %121, ptr %43, align 8, !tbaa !119
  br label %122

122:                                              ; preds = %116, %71
  %123 = load ptr, ptr %51, align 8, !tbaa !129
  %124 = load ptr, ptr %45, align 8, !tbaa !56
  tail call void @my_regprop(ptr noundef %123, ptr noundef %124, ptr noundef %53, ptr noundef null, ptr noundef %0)
  %125 = tail call ptr @Perl_PerlIO_stderr() #15
  %126 = load ptr, ptr %45, align 8, !tbaa !56
  %127 = getelementptr inbounds %struct.sv, ptr %126, i64 0, i32 2
  %128 = load i32, ptr %127, align 4, !tbaa !13
  %129 = and i32 %128, 2098176
  %130 = icmp eq i32 %129, 1024
  br i1 %130, label %131, label %134

131:                                              ; preds = %122
  %132 = getelementptr inbounds %struct.sv, ptr %126, i64 0, i32 3
  %133 = load ptr, ptr %132, align 8, !tbaa !17
  br label %136

134:                                              ; preds = %122
  %135 = tail call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %126, ptr noundef null, i32 noundef 34) #15
  br label %136

136:                                              ; preds = %134, %131
  %137 = phi ptr [ %133, %131 ], [ %135, %134 ]
  %138 = icmp eq ptr %53, null
  br i1 %138, label %146, label %139

139:                                              ; preds = %136
  %140 = load ptr, ptr %47, align 8, !tbaa !131
  %141 = ptrtoint ptr %53 to i64
  %142 = ptrtoint ptr %140 to i64
  %143 = sub i64 %141, %142
  %144 = lshr exact i64 %143, 2
  %145 = trunc i64 %144 to i32
  br label %146

146:                                              ; preds = %136, %139
  %147 = phi i32 [ %145, %139 ], [ -1, %136 ]
  %148 = zext i8 %67 to i64
  %149 = getelementptr inbounds [0 x ptr], ptr @PL_reg_name, i64 0, i64 %148
  %150 = load ptr, ptr %149, align 8, !tbaa !5
  %151 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %125, ptr noundef nonnull @.str.650, ptr noundef %137, i32 noundef %147, ptr noundef %150) #15
  br label %152

152:                                              ; preds = %146, %66
  %153 = icmp eq ptr %55, null
  br i1 %153, label %154, label %52

154:                                              ; preds = %152
  %155 = load volatile i64, ptr %5, align 8, !tbaa !9
  %156 = and i64 %155, 1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %239, label %158

158:                                              ; preds = %154
  %159 = load volatile i64, ptr %5, align 8, !tbaa !9
  %160 = and i64 %159, 1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %207, label %162

162:                                              ; preds = %158
  %163 = load ptr, ptr %43, align 8, !tbaa !119
  %164 = load ptr, ptr %44, align 8, !tbaa !105
  %165 = icmp eq ptr %163, %164
  %166 = tail call ptr @Perl_PerlIO_stderr() #15
  br i1 %165, label %176, label %167

167:                                              ; preds = %162
  %168 = load ptr, ptr %45, align 8, !tbaa !56
  %169 = load ptr, ptr %44, align 8, !tbaa !105
  %170 = load ptr, ptr %46, align 8, !tbaa !107
  %171 = ptrtoint ptr %170 to i64
  %172 = ptrtoint ptr %169 to i64
  %173 = sub i64 %171, %172
  %174 = tail call ptr @Perl_pv_pretty(ptr noundef %168, ptr noundef %169, i64 noundef %173, i64 noundef 16, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.8, i32 noundef 33294) #15
  %175 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %166, ptr noundef nonnull @.str.34, ptr noundef %174) #15
  br label %178

176:                                              ; preds = %162
  %177 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %166, ptr noundef nonnull @.str.385, ptr noundef nonnull @.str.8) #15
  br label %178

178:                                              ; preds = %176, %167
  %179 = load ptr, ptr %38, align 8, !tbaa !112
  %180 = icmp eq ptr %179, %40
  br i1 %180, label %181, label %185

181:                                              ; preds = %178
  %182 = load i64, ptr %48, align 8, !tbaa !111
  %183 = trunc i64 %182 to i32
  %184 = add i32 %183, 1
  br label %194

185:                                              ; preds = %178
  %186 = icmp eq ptr %179, null
  br i1 %186, label %194, label %187

187:                                              ; preds = %185
  %188 = load ptr, ptr %47, align 8, !tbaa !131
  %189 = ptrtoint ptr %179 to i64
  %190 = ptrtoint ptr %188 to i64
  %191 = sub i64 %189, %190
  %192 = lshr exact i64 %191, 2
  %193 = trunc i64 %192 to i32
  br label %194

194:                                              ; preds = %187, %185, %181
  %195 = phi i32 [ %184, %181 ], [ %193, %187 ], [ -1, %185 ]
  %196 = load i32, ptr %49, align 8, !tbaa !118
  %197 = icmp eq i32 %196, %195
  %198 = tail call ptr @Perl_PerlIO_stderr() #15
  br i1 %197, label %201, label %199

199:                                              ; preds = %194
  %200 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %198, ptr noundef nonnull @.str.386, i32 noundef %195) #15
  br label %203

201:                                              ; preds = %194
  %202 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %198, ptr noundef nonnull @.str.387, ptr noundef nonnull @.str.8) #15
  br label %203

203:                                              ; preds = %201, %199
  %204 = tail call ptr @Perl_PerlIO_stderr() #15
  %205 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %204, ptr noundef nonnull @.str.388, i32 noundef %50, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.8) #15
  store i32 %195, ptr %49, align 8, !tbaa !118
  %206 = load ptr, ptr %44, align 8, !tbaa !105
  store ptr %206, ptr %43, align 8, !tbaa !119
  br label %207

207:                                              ; preds = %203, %158
  %208 = load ptr, ptr %51, align 8, !tbaa !129
  %209 = load ptr, ptr %45, align 8, !tbaa !56
  tail call void @my_regprop(ptr noundef %208, ptr noundef %209, ptr noundef %2, ptr noundef null, ptr noundef %0)
  %210 = tail call ptr @Perl_PerlIO_stderr() #15
  %211 = load ptr, ptr %45, align 8, !tbaa !56
  %212 = getelementptr inbounds %struct.sv, ptr %211, i64 0, i32 2
  %213 = load i32, ptr %212, align 4, !tbaa !13
  %214 = and i32 %213, 2098176
  %215 = icmp eq i32 %214, 1024
  br i1 %215, label %216, label %219

216:                                              ; preds = %207
  %217 = getelementptr inbounds %struct.sv, ptr %211, i64 0, i32 3
  %218 = load ptr, ptr %217, align 8, !tbaa !17
  br label %221

219:                                              ; preds = %207
  %220 = tail call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %211, ptr noundef null, i32 noundef 34) #15
  br label %221

221:                                              ; preds = %219, %216
  %222 = phi ptr [ %218, %216 ], [ %220, %219 ]
  br i1 %35, label %223, label %225

223:                                              ; preds = %221
  %224 = ptrtoint ptr %2 to i64
  br label %232

225:                                              ; preds = %221
  %226 = load ptr, ptr %47, align 8, !tbaa !131
  %227 = ptrtoint ptr %2 to i64
  %228 = ptrtoint ptr %226 to i64
  %229 = sub i64 %227, %228
  %230 = shl i64 %229, 30
  %231 = ashr exact i64 %230, 32
  br label %232

232:                                              ; preds = %223, %225
  %233 = phi i64 [ %224, %223 ], [ %227, %225 ]
  %234 = phi i64 [ -1, %223 ], [ %231, %225 ]
  %235 = ptrtoint ptr %53 to i64
  %236 = sub i64 %233, %235
  %237 = ashr exact i64 %236, 2
  %238 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %210, ptr noundef nonnull @.str.651, ptr noundef %222, i64 noundef %234, i64 noundef %237) #15
  br label %239

239:                                              ; preds = %232, %154
  %240 = getelementptr inbounds %struct.regnode, ptr %53, i64 0, i32 1
  %241 = load i8, ptr %240, align 1, !tbaa !141
  %242 = zext i8 %241 to i64
  %243 = getelementptr inbounds [94 x i8], ptr @reg_off_by_arg, i64 0, i64 %242
  %244 = load i8, ptr %243, align 1, !tbaa !17
  %245 = icmp eq i8 %244, 0
  %246 = ptrtoint ptr %2 to i64
  %247 = ptrtoint ptr %53 to i64
  %248 = sub i64 %246, %247
  %249 = lshr exact i64 %248, 2
  br i1 %245, label %253, label %250

250:                                              ; preds = %239
  %251 = trunc i64 %249 to i32
  %252 = getelementptr inbounds %struct.regnode_1, ptr %53, i64 0, i32 3
  store i32 %251, ptr %252, align 4, !tbaa !148
  br label %256

253:                                              ; preds = %239
  %254 = trunc i64 %249 to i16
  %255 = getelementptr inbounds %struct.regnode, ptr %53, i64 0, i32 2
  store i16 %254, ptr %255, align 2, !tbaa !222
  br label %256

256:                                              ; preds = %250, %253, %37
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @strchr(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start(ptr) #10

declare ptr @Perl_vmess(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end(ptr) #10

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_regnode_guts(ptr noundef %0, i8 noundef zeroext %1, i64 noundef %2, ptr noundef %3) unnamed_addr #0 {
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %7 = load ptr, ptr %6, align 8, !tbaa !112
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  store volatile i64 0, ptr %5, align 8, !tbaa !9
  %8 = load volatile i64, ptr %5, align 8, !tbaa !9
  %9 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %10 = icmp eq ptr %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.sv, ptr %9, i64 0, i32 2
  %13 = load i32, ptr %12, align 4, !tbaa !13
  %14 = and i32 %13, 256
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  tail call void @Perl_sv_setuv(ptr noundef nonnull %9, i64 noundef 65288) #15
  %17 = load i32, ptr %12, align 4, !tbaa !13
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i32 [ %17, %16 ], [ %13, %11 ]
  %20 = and i32 %19, 2097408
  %21 = icmp eq i32 %20, 256
  br i1 %21, label %22, label %26

22:                                               ; preds = %18
  %23 = load ptr, ptr %9, align 8, !tbaa !16
  %24 = getelementptr inbounds %struct.xpviv, ptr %23, i64 0, i32 4
  %25 = load i64, ptr %24, align 8, !tbaa !17
  br label %28

26:                                               ; preds = %18
  %27 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %9, i32 noundef 2) #15
  br label %28

28:                                               ; preds = %26, %22
  %29 = phi i64 [ %25, %22 ], [ %27, %26 ]
  store volatile i64 %29, ptr %5, align 8, !tbaa !9
  br label %30

30:                                               ; preds = %4, %28
  %31 = icmp eq ptr %3, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %30
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.454, i32 noundef 16316) #15
  br label %33

33:                                               ; preds = %30, %32
  %34 = zext i8 %1 to i64
  %35 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %34
  %36 = load i8, ptr %35, align 1, !tbaa !17
  %37 = zext i8 %36 to i64
  %38 = icmp ugt i64 %37, %2
  br i1 %38, label %39, label %40

39:                                               ; preds = %33
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.455, i32 noundef 16318) #15
  br label %40

40:                                               ; preds = %33, %39
  %41 = load ptr, ptr %6, align 8, !tbaa !112
  %42 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %43 = icmp eq ptr %41, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %40
  %45 = add nuw nsw i64 %2, 1
  %46 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %47 = load i64, ptr %46, align 8, !tbaa !111
  %48 = add i64 %45, %47
  store i64 %48, ptr %46, align 8, !tbaa !111
  br label %143

49:                                               ; preds = %40
  %50 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 11
  %51 = load ptr, ptr %50, align 8, !tbaa !132
  %52 = icmp ult ptr %41, %51
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  %54 = zext i8 %1 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.456, i32 noundef %54, ptr noundef %41, ptr noundef %51) #15
  br label %55

55:                                               ; preds = %53, %49
  store i8 0, ptr %7, align 2, !tbaa !143
  %56 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %57 = load ptr, ptr %56, align 8, !tbaa !130
  %58 = getelementptr inbounds %struct.regexp_internal, ptr %57, i64 0, i32 1
  %59 = load ptr, ptr %58, align 8, !tbaa !17
  %60 = icmp eq ptr %59, null
  br i1 %60, label %143, label %61

61:                                               ; preds = %55
  %62 = load volatile i64, ptr %5, align 8, !tbaa !9
  %63 = and i64 %62, 262144
  %64 = icmp eq i64 %63, 0
  %65 = load ptr, ptr %6, align 8, !tbaa !112
  br i1 %64, label %87, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds [0 x ptr], ptr @PL_reg_name, i64 0, i64 %34
  %68 = load ptr, ptr %67, align 8, !tbaa !5
  %69 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %70 = load ptr, ptr %69, align 8, !tbaa !131
  %71 = ptrtoint ptr %65 to i64
  %72 = ptrtoint ptr %70 to i64
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 2
  %75 = load i32, ptr %59, align 4, !tbaa !73
  %76 = zext i32 %75 to i64
  %77 = icmp ugt i64 %74, %76
  %78 = select i1 %77, ptr @.str.458, ptr @.str.459
  %79 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %80 = load ptr, ptr %79, align 8, !tbaa !105
  %81 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %82 = load ptr, ptr %81, align 8, !tbaa !106
  %83 = ptrtoint ptr %80 to i64
  %84 = ptrtoint ptr %82 to i64
  %85 = sub i64 %83, %84
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.457, ptr noundef %3, i32 noundef 16336, ptr noundef %68, ptr noundef nonnull %78, i64 noundef %74, i64 noundef %85, i64 noundef %76) #15
  %86 = load ptr, ptr %6, align 8, !tbaa !112
  br label %87

87:                                               ; preds = %61, %66
  %88 = phi ptr [ %65, %61 ], [ %86, %66 ]
  %89 = icmp eq ptr %88, %42
  br i1 %89, label %143, label %90

90:                                               ; preds = %87
  %91 = load volatile i64, ptr %5, align 8, !tbaa !9
  %92 = and i64 %91, 262144
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %114, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %96 = load ptr, ptr %95, align 8, !tbaa !131
  %97 = ptrtoint ptr %88 to i64
  %98 = ptrtoint ptr %96 to i64
  %99 = sub i64 %97, %98
  %100 = lshr exact i64 %99, 2
  %101 = trunc i64 %100 to i32
  %102 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %103 = load ptr, ptr %102, align 8, !tbaa !105
  %104 = icmp eq i8 %1, 0
  %105 = zext i1 %104 to i64
  %106 = getelementptr inbounds i8, ptr %103, i64 %105
  %107 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %108 = load ptr, ptr %107, align 8, !tbaa !106
  %109 = ptrtoint ptr %106 to i64
  %110 = ptrtoint ptr %108 to i64
  %111 = sub i64 %109, %110
  %112 = trunc i64 %111 to i32
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 16343, i32 noundef %101, i32 noundef %112) #15
  %113 = load ptr, ptr %6, align 8, !tbaa !112
  br label %114

114:                                              ; preds = %94, %90
  %115 = phi ptr [ %113, %94 ], [ %88, %90 ]
  %116 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %117 = load ptr, ptr %116, align 8, !tbaa !131
  %118 = ptrtoint ptr %115 to i64
  %119 = ptrtoint ptr %117 to i64
  %120 = sub i64 %118, %119
  %121 = icmp slt i64 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %114
  %123 = lshr exact i64 %120, 2
  %124 = trunc i64 %123 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %124) #15
  br label %143

125:                                              ; preds = %114
  %126 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %127 = load ptr, ptr %126, align 8, !tbaa !105
  %128 = icmp eq i8 %1, 0
  %129 = zext i1 %128 to i64
  %130 = getelementptr inbounds i8, ptr %127, i64 %129
  %131 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %132 = load ptr, ptr %131, align 8, !tbaa !106
  %133 = ptrtoint ptr %130 to i64
  %134 = ptrtoint ptr %132 to i64
  %135 = sub i64 %133, %134
  %136 = trunc i64 %135 to i32
  %137 = load ptr, ptr %56, align 8, !tbaa !130
  %138 = getelementptr inbounds %struct.regexp_internal, ptr %137, i64 0, i32 1
  %139 = load ptr, ptr %138, align 8, !tbaa !17
  %140 = lshr exact i64 %120, 1
  %141 = add nsw i64 %140, -1
  %142 = getelementptr inbounds i32, ptr %139, i64 %141
  store i32 %136, ptr %142, align 4, !tbaa !73
  br label %143

143:                                              ; preds = %55, %122, %125, %87, %44
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  ret ptr %7
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_regpatws(ptr nocapture noundef %0, ptr noundef %1, i1 noundef zeroext %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %5 = load ptr, ptr %4, align 8, !tbaa !107
  %6 = icmp eq ptr %1, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.463, i32 noundef 12977) #15
  br label %8

8:                                                ; preds = %3, %7
  %9 = icmp ugt ptr %5, %1
  br i1 %9, label %10, label %105

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %12 = ptrtoint ptr %5 to i64
  %13 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  br i1 %2, label %51, label %14

14:                                               ; preds = %10, %47
  %15 = phi ptr [ %49, %47 ], [ %1, %10 ]
  %16 = load i8, ptr %15, align 1, !tbaa !17
  switch i8 %16, label %17 [
    i8 32, label %47
    i8 13, label %47
    i8 12, label %47
    i8 11, label %47
    i8 10, label %47
    i8 9, label %47
  ]

17:                                               ; preds = %14
  %18 = load i32, ptr %11, align 8, !tbaa !50
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %45, label %20

20:                                               ; preds = %17
  %21 = ptrtoint ptr %15 to i64
  %22 = sub i64 %12, %21
  %23 = zext i8 %16 to i64
  %24 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %23
  %25 = load i8, ptr %24, align 1, !tbaa !17
  %26 = zext i8 %25 to i64
  %27 = icmp slt i64 %22, %26
  br i1 %27, label %105, label %28

28:                                               ; preds = %20
  switch i8 %16, label %105 [
    i8 -62, label %41
    i8 -30, label %29
  ]

29:                                               ; preds = %28
  %30 = getelementptr inbounds i8, ptr %15, i64 1
  %31 = load i8, ptr %30, align 1, !tbaa !17
  %32 = icmp eq i8 %31, -128
  br i1 %32, label %33, label %105

33:                                               ; preds = %29
  %34 = getelementptr inbounds i8, ptr %15, i64 2
  %35 = load i8, ptr %34, align 1, !tbaa !17
  %36 = and i8 %35, -2
  %37 = icmp eq i8 %36, -114
  %38 = icmp eq i8 %36, -88
  %39 = or i1 %37, %38
  %40 = freeze i1 %39
  br i1 %40, label %47, label %105

41:                                               ; preds = %28
  %42 = getelementptr inbounds i8, ptr %15, i64 1
  %43 = load i8, ptr %42, align 1, !tbaa !17
  %44 = icmp eq i8 %43, -123
  br i1 %44, label %47, label %105

45:                                               ; preds = %17
  %46 = icmp eq i8 %16, -123
  br i1 %46, label %47, label %105

47:                                               ; preds = %45, %41, %33, %14, %14, %14, %14, %14, %14
  %48 = phi i64 [ 1, %45 ], [ 1, %14 ], [ 3, %33 ], [ 2, %41 ], [ 1, %14 ], [ 1, %14 ], [ 1, %14 ], [ 1, %14 ], [ 1, %14 ]
  %49 = getelementptr inbounds i8, ptr %15, i64 %48
  %50 = icmp ult ptr %49, %5
  br i1 %50, label %14, label %105

51:                                               ; preds = %10, %102
  %52 = phi ptr [ %103, %102 ], [ %1, %10 ]
  %53 = load i8, ptr %52, align 1, !tbaa !17
  switch i8 %53, label %54 [
    i8 32, label %83
    i8 13, label %83
    i8 12, label %83
    i8 11, label %83
    i8 10, label %83
    i8 9, label %83
  ]

54:                                               ; preds = %51
  %55 = load i32, ptr %11, align 8, !tbaa !50
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %82, label %57

57:                                               ; preds = %54
  %58 = ptrtoint ptr %52 to i64
  %59 = sub i64 %12, %58
  %60 = zext i8 %53 to i64
  %61 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %60
  %62 = load i8, ptr %61, align 1, !tbaa !17
  %63 = zext i8 %62 to i64
  %64 = icmp slt i64 %59, %63
  br i1 %64, label %86, label %65

65:                                               ; preds = %57
  switch i8 %53, label %105 [
    i8 -62, label %66
    i8 -30, label %70
    i8 35, label %88
  ]

66:                                               ; preds = %65
  %67 = getelementptr inbounds i8, ptr %52, i64 1
  %68 = load i8, ptr %67, align 1, !tbaa !17
  %69 = icmp eq i8 %68, -123
  br i1 %69, label %83, label %105

70:                                               ; preds = %65
  %71 = getelementptr inbounds i8, ptr %52, i64 1
  %72 = load i8, ptr %71, align 1, !tbaa !17
  %73 = icmp eq i8 %72, -128
  br i1 %73, label %74, label %105

74:                                               ; preds = %70
  %75 = getelementptr inbounds i8, ptr %52, i64 2
  %76 = load i8, ptr %75, align 1, !tbaa !17
  %77 = and i8 %76, -2
  %78 = icmp eq i8 %77, -114
  %79 = icmp eq i8 %77, -88
  %80 = or i1 %78, %79
  %81 = freeze i1 %80
  br i1 %81, label %83, label %105

82:                                               ; preds = %54
  switch i8 %53, label %105 [
    i8 -123, label %83
    i8 35, label %88
  ]

83:                                               ; preds = %82, %51, %51, %51, %51, %51, %51, %66, %74
  %84 = phi i64 [ 1, %82 ], [ 1, %51 ], [ 3, %74 ], [ 2, %66 ], [ 1, %51 ], [ 1, %51 ], [ 1, %51 ], [ 1, %51 ], [ 1, %51 ]
  %85 = getelementptr inbounds i8, ptr %52, i64 %84
  br label %102

86:                                               ; preds = %57
  %87 = icmp eq i8 %53, 35
  br i1 %87, label %88, label %105

88:                                               ; preds = %86, %82, %65
  %89 = load ptr, ptr %4, align 8, !tbaa !107
  br label %90

90:                                               ; preds = %93, %88
  %91 = phi ptr [ %52, %88 ], [ %94, %93 ]
  %92 = icmp ult ptr %91, %89
  br i1 %92, label %93, label %99

93:                                               ; preds = %90
  %94 = getelementptr inbounds i8, ptr %91, i64 1
  %95 = load i8, ptr %94, align 1, !tbaa !17
  %96 = icmp eq i8 %95, 10
  br i1 %96, label %97, label %90, !llvm.loop !397

97:                                               ; preds = %93
  %98 = getelementptr inbounds i8, ptr %91, i64 2
  br label %102

99:                                               ; preds = %90
  %100 = load i32, ptr %13, align 8, !tbaa !98
  %101 = or i32 %100, 512
  store i32 %101, ptr %13, align 8, !tbaa !98
  br label %102

102:                                              ; preds = %99, %97, %83
  %103 = phi ptr [ %85, %83 ], [ %98, %97 ], [ %91, %99 ]
  %104 = icmp ult ptr %103, %5
  br i1 %104, label %51, label %105

105:                                              ; preds = %47, %20, %28, %29, %33, %41, %45, %66, %74, %70, %102, %65, %82, %86, %8
  %106 = phi ptr [ %1, %8 ], [ %52, %66 ], [ %52, %74 ], [ %52, %70 ], [ %52, %86 ], [ %52, %82 ], [ %52, %65 ], [ %103, %102 ], [ %15, %45 ], [ %15, %41 ], [ %15, %33 ], [ %15, %29 ], [ %15, %28 ], [ %15, %20 ], [ %49, %47 ]
  ret ptr %106
}

declare zeroext i1 @Perl__is_utf8_perl_idstart(ptr noundef) local_unnamed_addr #2

declare zeroext i1 @Perl__is_utf8_FOO(i8 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_regatom(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = alloca i8, align 1
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i64, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca ptr, align 8
  %17 = alloca [140 x i8], align 16
  %18 = alloca i64, align 8
  %19 = alloca ptr, align 8
  %20 = alloca i64, align 8
  %21 = alloca ptr, align 8
  %22 = alloca i32, align 4
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #15
  store ptr null, ptr %12, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #15
  store i32 0, ptr %13, align 4, !tbaa !73
  %26 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %27 = load ptr, ptr %26, align 8, !tbaa !105
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %14)
  store volatile i64 0, ptr %14, align 8, !tbaa !9
  %28 = load volatile i64, ptr %14, align 8, !tbaa !9
  %29 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %30 = icmp eq ptr %29, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %3
  %32 = getelementptr inbounds %struct.sv, ptr %29, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !13
  %34 = and i32 %33, 256
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %31
  tail call void @Perl_sv_setuv(ptr noundef nonnull %29, i64 noundef 65288) #15
  %37 = load i32, ptr %32, align 4, !tbaa !13
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i32 [ %37, %36 ], [ %33, %31 ]
  %40 = and i32 %39, 2097408
  %41 = icmp eq i32 %40, 256
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = load ptr, ptr %29, align 8, !tbaa !16
  %44 = getelementptr inbounds %struct.xpviv, ptr %43, i64 0, i32 4
  %45 = load i64, ptr %44, align 8, !tbaa !17
  br label %48

46:                                               ; preds = %38
  %47 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %29, i32 noundef 2) #15
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi i64 [ %45, %42 ], [ %47, %46 ]
  store volatile i64 %49, ptr %14, align 8, !tbaa !9
  br label %50

50:                                               ; preds = %48, %3
  store i32 0, ptr %1, align 4, !tbaa !73
  %51 = load volatile i64, ptr %14, align 8, !tbaa !9
  %52 = and i64 %51, 1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %115, label %54

54:                                               ; preds = %50
  %55 = load volatile i64, ptr %14, align 8, !tbaa !9
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %112, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 47
  %60 = load ptr, ptr %59, align 8, !tbaa !119
  %61 = load ptr, ptr %26, align 8, !tbaa !105
  %62 = icmp eq ptr %60, %61
  %63 = tail call ptr @Perl_PerlIO_stderr() #15
  br i1 %62, label %75, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 51
  %66 = load ptr, ptr %65, align 8, !tbaa !56
  %67 = load ptr, ptr %26, align 8, !tbaa !105
  %68 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %69 = load ptr, ptr %68, align 8, !tbaa !107
  %70 = ptrtoint ptr %69 to i64
  %71 = ptrtoint ptr %67 to i64
  %72 = sub i64 %70, %71
  %73 = tail call ptr @Perl_pv_pretty(ptr noundef %66, ptr noundef %67, i64 noundef %72, i64 noundef 16, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.8, i32 noundef 33294) #15
  %74 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %63, ptr noundef nonnull @.str.34, ptr noundef %73) #15
  br label %77

75:                                               ; preds = %58
  %76 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %63, ptr noundef nonnull @.str.385, ptr noundef nonnull @.str.8) #15
  br label %77

77:                                               ; preds = %75, %64
  %78 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %79 = load ptr, ptr %78, align 8, !tbaa !112
  %80 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %81 = icmp eq ptr %79, %80
  br i1 %81, label %82, label %87

82:                                               ; preds = %77
  %83 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %84 = load i64, ptr %83, align 8, !tbaa !111
  %85 = trunc i64 %84 to i32
  %86 = add i32 %85, 1
  br label %97

87:                                               ; preds = %77
  %88 = icmp eq ptr %79, null
  br i1 %88, label %97, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %91 = load ptr, ptr %90, align 8, !tbaa !131
  %92 = ptrtoint ptr %79 to i64
  %93 = ptrtoint ptr %91 to i64
  %94 = sub i64 %92, %93
  %95 = lshr exact i64 %94, 2
  %96 = trunc i64 %95 to i32
  br label %97

97:                                               ; preds = %89, %87, %82
  %98 = phi i32 [ %86, %82 ], [ %96, %89 ], [ -1, %87 ]
  %99 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 48
  %100 = load i32, ptr %99, align 8, !tbaa !118
  %101 = icmp eq i32 %100, %98
  %102 = tail call ptr @Perl_PerlIO_stderr() #15
  br i1 %101, label %105, label %103

103:                                              ; preds = %97
  %104 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %102, ptr noundef nonnull @.str.386, i32 noundef %98) #15
  br label %107

105:                                              ; preds = %97
  %106 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %102, ptr noundef nonnull @.str.387, ptr noundef nonnull @.str.8) #15
  br label %107

107:                                              ; preds = %105, %103
  %108 = tail call ptr @Perl_PerlIO_stderr() #15
  %109 = shl i32 %2, 1
  %110 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %108, ptr noundef nonnull @.str.388, i32 noundef %109, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.485) #15
  store i32 %98, ptr %99, align 8, !tbaa !118
  %111 = load ptr, ptr %26, align 8, !tbaa !105
  store ptr %111, ptr %59, align 8, !tbaa !119
  br label %112

112:                                              ; preds = %107, %54
  %113 = tail call ptr @Perl_PerlIO_stderr() #15
  %114 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %113, ptr noundef nonnull @.str.390, ptr noundef nonnull @.str.53) #15
  br label %115

115:                                              ; preds = %50, %112
  %116 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %117 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 16
  %118 = add i32 %2, 1
  %119 = load ptr, ptr %26, align 8, !tbaa !105
  br label %120

120:                                              ; preds = %441, %115
  %121 = phi i32 [ %438, %441 ], [ 0, %115 ]
  %122 = phi ptr [ %442, %441 ], [ %119, %115 ]
  br label %123

123:                                              ; preds = %120, %1652
  %124 = phi ptr [ %1653, %1652 ], [ %122, %120 ]
  %125 = load i8, ptr %124, align 1, !tbaa !17
  switch i8 %125, label %1655 [
    i8 94, label %126
    i8 36, label %185
    i8 46, label %249
    i8 91, label %314
    i8 40, label %433
    i8 124, label %484
    i8 41, label %484
    i8 63, label %516
    i8 43, label %516
    i8 42, label %516
    i8 92, label %543
    i8 35, label %1634
  ]

126:                                              ; preds = %123
  %127 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %128 = load i32, ptr %127, align 4, !tbaa !101
  %129 = add nsw i32 %128, 1
  store i32 %129, ptr %127, align 4, !tbaa !101
  %130 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %131 = load i32, ptr %0, align 8, !tbaa !66
  %132 = and i32 %131, 1
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %135 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  br i1 %133, label %140, label %136

136:                                              ; preds = %126
  %137 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 3, i64 noundef 0, ptr noundef nonnull @.str.460)
  %138 = load ptr, ptr %134, align 8, !tbaa !112
  %139 = icmp eq ptr %138, %135
  br i1 %139, label %144, label %146

140:                                              ; preds = %126
  %141 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 2, i64 noundef 0, ptr noundef nonnull @.str.460)
  %142 = load ptr, ptr %134, align 8, !tbaa !112
  %143 = icmp eq ptr %142, %135
  br i1 %143, label %144, label %146

144:                                              ; preds = %136, %140
  %145 = phi ptr [ %141, %140 ], [ %137, %136 ]
  store ptr %145, ptr %12, align 8, !tbaa !5
  br label %2698

146:                                              ; preds = %140, %136
  %147 = phi ptr [ %137, %136 ], [ %141, %140 ]
  %148 = phi i8 [ 3, %136 ], [ 2, %140 ]
  %149 = getelementptr inbounds %struct.regnode, ptr %147, i64 0, i32 1
  store i8 %148, ptr %149, align 1, !tbaa !141
  %150 = getelementptr inbounds %struct.regnode, ptr %147, i64 0, i32 2
  store i16 0, ptr %150, align 2, !tbaa !222
  %151 = getelementptr inbounds %struct.regnode, ptr %147, i64 1
  store ptr %151, ptr %134, align 8, !tbaa !112
  store ptr %147, ptr %12, align 8, !tbaa !5
  %152 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %153 = icmp eq ptr %151, %152
  br i1 %153, label %2698, label %154

154:                                              ; preds = %146
  %155 = load volatile i64, ptr %14, align 8, !tbaa !9
  %156 = and i64 %155, 262144
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %167, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %160 = load ptr, ptr %159, align 8, !tbaa !131
  %161 = ptrtoint ptr %147 to i64
  %162 = ptrtoint ptr %160 to i64
  %163 = sub i64 %161, %162
  %164 = lshr exact i64 %163, 2
  %165 = trunc i64 %164 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 11675, i32 noundef %165, i32 noundef 1) #15
  %166 = load ptr, ptr %12, align 8, !tbaa !5
  br label %167

167:                                              ; preds = %158, %154
  %168 = phi ptr [ %166, %158 ], [ %147, %154 ]
  %169 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %170 = load ptr, ptr %169, align 8, !tbaa !131
  %171 = ptrtoint ptr %168 to i64
  %172 = ptrtoint ptr %170 to i64
  %173 = sub i64 %171, %172
  %174 = icmp slt i64 %173, 0
  br i1 %174, label %175, label %178

175:                                              ; preds = %167
  %176 = lshr exact i64 %173, 2
  %177 = trunc i64 %176 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %177) #15
  br label %2698

178:                                              ; preds = %167
  %179 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %180 = load ptr, ptr %179, align 8, !tbaa !130
  %181 = getelementptr inbounds %struct.regexp_internal, ptr %180, i64 0, i32 1
  %182 = load ptr, ptr %181, align 8, !tbaa !17
  %183 = lshr exact i64 %173, 1
  %184 = getelementptr inbounds i32, ptr %182, i64 %183
  store i32 1, ptr %184, align 4, !tbaa !73
  br label %2698

185:                                              ; preds = %123
  %186 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %187 = load ptr, ptr %26, align 8, !tbaa !105
  %188 = load i8, ptr %187, align 1, !tbaa !17
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %194, label %190

190:                                              ; preds = %185
  %191 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %192 = load i32, ptr %191, align 4, !tbaa !101
  %193 = add nsw i32 %192, 1
  store i32 %193, ptr %191, align 4, !tbaa !101
  br label %194

194:                                              ; preds = %190, %185
  %195 = load i32, ptr %0, align 8, !tbaa !66
  %196 = and i32 %195, 1
  %197 = icmp eq i32 %196, 0
  %198 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %199 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  br i1 %197, label %204, label %200

200:                                              ; preds = %194
  %201 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 5, i64 noundef 0, ptr noundef nonnull @.str.460)
  %202 = load ptr, ptr %198, align 8, !tbaa !112
  %203 = icmp eq ptr %202, %199
  br i1 %203, label %208, label %210

204:                                              ; preds = %194
  %205 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 4, i64 noundef 0, ptr noundef nonnull @.str.460)
  %206 = load ptr, ptr %198, align 8, !tbaa !112
  %207 = icmp eq ptr %206, %199
  br i1 %207, label %208, label %210

208:                                              ; preds = %200, %204
  %209 = phi ptr [ %205, %204 ], [ %201, %200 ]
  store ptr %209, ptr %12, align 8, !tbaa !5
  br label %2698

210:                                              ; preds = %204, %200
  %211 = phi ptr [ %201, %200 ], [ %205, %204 ]
  %212 = phi i8 [ 5, %200 ], [ 4, %204 ]
  %213 = getelementptr inbounds %struct.regnode, ptr %211, i64 0, i32 1
  store i8 %212, ptr %213, align 1, !tbaa !141
  %214 = getelementptr inbounds %struct.regnode, ptr %211, i64 0, i32 2
  store i16 0, ptr %214, align 2, !tbaa !222
  %215 = getelementptr inbounds %struct.regnode, ptr %211, i64 1
  store ptr %215, ptr %198, align 8, !tbaa !112
  store ptr %211, ptr %12, align 8, !tbaa !5
  %216 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %217 = icmp eq ptr %215, %216
  br i1 %217, label %2698, label %218

218:                                              ; preds = %210
  %219 = load volatile i64, ptr %14, align 8, !tbaa !9
  %220 = and i64 %219, 262144
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %231, label %222

222:                                              ; preds = %218
  %223 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %224 = load ptr, ptr %223, align 8, !tbaa !131
  %225 = ptrtoint ptr %211 to i64
  %226 = ptrtoint ptr %224 to i64
  %227 = sub i64 %225, %226
  %228 = lshr exact i64 %227, 2
  %229 = trunc i64 %228 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 11685, i32 noundef %229, i32 noundef 1) #15
  %230 = load ptr, ptr %12, align 8, !tbaa !5
  br label %231

231:                                              ; preds = %222, %218
  %232 = phi ptr [ %230, %222 ], [ %211, %218 ]
  %233 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %234 = load ptr, ptr %233, align 8, !tbaa !131
  %235 = ptrtoint ptr %232 to i64
  %236 = ptrtoint ptr %234 to i64
  %237 = sub i64 %235, %236
  %238 = icmp slt i64 %237, 0
  br i1 %238, label %239, label %242

239:                                              ; preds = %231
  %240 = lshr exact i64 %237, 2
  %241 = trunc i64 %240 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %241) #15
  br label %2698

242:                                              ; preds = %231
  %243 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %244 = load ptr, ptr %243, align 8, !tbaa !130
  %245 = getelementptr inbounds %struct.regexp_internal, ptr %244, i64 0, i32 1
  %246 = load ptr, ptr %245, align 8, !tbaa !17
  %247 = lshr exact i64 %237, 1
  %248 = getelementptr inbounds i32, ptr %246, i64 %247
  store i32 1, ptr %248, align 4, !tbaa !73
  br label %2698

249:                                              ; preds = %123
  %250 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %251 = load i32, ptr %0, align 8, !tbaa !66
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %255 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  br i1 %253, label %260, label %256

256:                                              ; preds = %249
  %257 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 17, i64 noundef 0, ptr noundef nonnull @.str.460)
  %258 = load ptr, ptr %254, align 8, !tbaa !112
  %259 = icmp eq ptr %258, %255
  br i1 %259, label %270, label %264

260:                                              ; preds = %249
  %261 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 16, i64 noundef 0, ptr noundef nonnull @.str.460)
  %262 = load ptr, ptr %254, align 8, !tbaa !112
  %263 = icmp eq ptr %262, %255
  br i1 %263, label %270, label %264

264:                                              ; preds = %260, %256
  %265 = phi ptr [ %257, %256 ], [ %261, %260 ]
  %266 = phi i8 [ 17, %256 ], [ 16, %260 ]
  %267 = getelementptr inbounds %struct.regnode, ptr %265, i64 0, i32 1
  store i8 %266, ptr %267, align 1, !tbaa !141
  %268 = getelementptr inbounds %struct.regnode, ptr %265, i64 0, i32 2
  store i16 0, ptr %268, align 2, !tbaa !222
  %269 = getelementptr inbounds %struct.regnode, ptr %265, i64 1
  store ptr %269, ptr %254, align 8, !tbaa !112
  br label %270

270:                                              ; preds = %264, %260, %256
  %271 = phi ptr [ %255, %256 ], [ %255, %260 ], [ %269, %264 ]
  %272 = phi ptr [ %257, %256 ], [ %261, %260 ], [ %265, %264 ]
  store ptr %272, ptr %12, align 8, !tbaa !5
  %273 = load i32, ptr %1, align 4, !tbaa !73
  %274 = or i32 %273, 3
  store i32 %274, ptr %1, align 4, !tbaa !73
  %275 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 14
  %276 = load i32, ptr %275, align 8, !tbaa !108
  %277 = icmp slt i32 %276, 10
  br i1 %277, label %278, label %280

278:                                              ; preds = %270
  %279 = add nsw i32 %276, 1
  store i32 %279, ptr %275, align 8, !tbaa !108
  br label %280

280:                                              ; preds = %270, %278
  %281 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %282 = icmp eq ptr %271, %281
  br i1 %282, label %2698, label %283

283:                                              ; preds = %280
  %284 = load volatile i64, ptr %14, align 8, !tbaa !9
  %285 = and i64 %284, 262144
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %296, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %289 = load ptr, ptr %288, align 8, !tbaa !131
  %290 = ptrtoint ptr %272 to i64
  %291 = ptrtoint ptr %289 to i64
  %292 = sub i64 %290, %291
  %293 = lshr exact i64 %292, 2
  %294 = trunc i64 %293 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 11695, i32 noundef %294, i32 noundef 1) #15
  %295 = load ptr, ptr %12, align 8, !tbaa !5
  br label %296

296:                                              ; preds = %287, %283
  %297 = phi ptr [ %295, %287 ], [ %272, %283 ]
  %298 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %299 = load ptr, ptr %298, align 8, !tbaa !131
  %300 = ptrtoint ptr %297 to i64
  %301 = ptrtoint ptr %299 to i64
  %302 = sub i64 %300, %301
  %303 = icmp slt i64 %302, 0
  br i1 %303, label %304, label %307

304:                                              ; preds = %296
  %305 = lshr exact i64 %302, 2
  %306 = trunc i64 %305 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %306) #15
  br label %2698

307:                                              ; preds = %296
  %308 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %309 = load ptr, ptr %308, align 8, !tbaa !130
  %310 = getelementptr inbounds %struct.regexp_internal, ptr %309, i64 0, i32 1
  %311 = load ptr, ptr %310, align 8, !tbaa !17
  %312 = lshr exact i64 %302, 1
  %313 = getelementptr inbounds i32, ptr %311, i64 %312
  store i32 1, ptr %313, align 4, !tbaa !73
  br label %2698

314:                                              ; preds = %123
  %315 = getelementptr inbounds i8, ptr %124, i64 1
  store ptr %315, ptr %26, align 8, !tbaa !105
  %316 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 45
  %317 = load i32, ptr %316, align 4, !tbaa !54
  %318 = icmp ne i32 %317, 0
  %319 = call fastcc ptr @S_regclass(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef %118, i1 noundef zeroext false, i1 noundef zeroext true, i1 noundef zeroext false, i1 noundef zeroext %318, ptr noundef null)
  store ptr %319, ptr %12, align 8, !tbaa !5
  %320 = load ptr, ptr %26, align 8, !tbaa !105
  %321 = load i8, ptr %320, align 1, !tbaa !17
  %322 = icmp eq i8 %321, 93
  br i1 %322, label %350, label %323

323:                                              ; preds = %314
  store ptr %315, ptr %26, align 8, !tbaa !105
  %324 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %325 = load ptr, ptr %324, align 8, !tbaa !112
  %326 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %327 = icmp eq ptr %325, %326
  br i1 %327, label %332, label %328

328:                                              ; preds = %323
  %329 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %330 = load ptr, ptr %329, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %330, i32 noundef 11) #15
  %331 = load ptr, ptr %26, align 8, !tbaa !105
  br label %332

332:                                              ; preds = %323, %328
  %333 = phi ptr [ %315, %323 ], [ %331, %328 ]
  %334 = load ptr, ptr %116, align 8, !tbaa !107
  %335 = icmp ugt ptr %333, %334
  %336 = select i1 %335, ptr %334, ptr %333
  %337 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %338 = load ptr, ptr %337, align 8, !tbaa !65
  %339 = ptrtoint ptr %336 to i64
  %340 = ptrtoint ptr %338 to i64
  %341 = sub i64 %339, %340
  %342 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %343 = load i32, ptr %342, align 8, !tbaa !50
  %344 = icmp ne i32 %343, 0
  %345 = zext i1 %344 to i32
  %346 = ptrtoint ptr %334 to i64
  %347 = sub i64 %346, %339
  %348 = getelementptr inbounds i8, ptr %338, i64 %341
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.486, i32 noundef %345, i64 noundef %341, ptr noundef %338, i32 noundef %345, i64 noundef %347, ptr noundef %348) #15
  %349 = load ptr, ptr %12, align 8, !tbaa !5
  br label %350

350:                                              ; preds = %332, %314
  %351 = phi ptr [ %349, %332 ], [ %319, %314 ]
  %352 = icmp eq ptr %351, null
  br i1 %352, label %353, label %384

353:                                              ; preds = %350
  %354 = load i32, ptr %1, align 4, !tbaa !73
  %355 = and i32 %354, 32
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %2700

357:                                              ; preds = %353
  %358 = load ptr, ptr %116, align 8, !tbaa !107
  %359 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %360 = load ptr, ptr %359, align 8, !tbaa !65
  %361 = ptrtoint ptr %358 to i64
  %362 = ptrtoint ptr %360 to i64
  %363 = sub i64 %361, %362
  %364 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %365 = load ptr, ptr %364, align 8, !tbaa !112
  %366 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %367 = icmp eq ptr %365, %366
  br i1 %367, label %373, label %368

368:                                              ; preds = %357
  %369 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %370 = load ptr, ptr %369, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %370, i32 noundef 11) #15
  %371 = load i32, ptr %1, align 4, !tbaa !73
  %372 = load ptr, ptr %359, align 8, !tbaa !65
  br label %373

373:                                              ; preds = %368, %357
  %374 = phi ptr [ %372, %368 ], [ %360, %357 ]
  %375 = phi i32 [ %371, %368 ], [ %354, %357 ]
  %376 = icmp sgt i64 %363, 127
  %377 = select i1 %376, i64 117, i64 %363
  %378 = select i1 %376, ptr @.str.20, ptr @.str.8
  %379 = sext i32 %375 to i64
  %380 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %381 = load i32, ptr %380, align 8, !tbaa !50
  %382 = icmp ne i32 %381, 0
  %383 = zext i1 %382 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.487, i64 noundef %379, i32 noundef %383, i64 noundef %377, ptr noundef %374, ptr noundef nonnull %378) #15
  br label %384

384:                                              ; preds = %373, %350
  %385 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %386 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %387 = load ptr, ptr %386, align 8, !tbaa !112
  %388 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %389 = icmp eq ptr %387, %388
  br i1 %389, label %2698, label %390

390:                                              ; preds = %384
  %391 = load volatile i64, ptr %14, align 8, !tbaa !9
  %392 = and i64 %391, 262144
  %393 = icmp eq i64 %392, 0
  br i1 %393, label %409, label %394

394:                                              ; preds = %390
  %395 = load ptr, ptr %12, align 8, !tbaa !5
  %396 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %397 = load ptr, ptr %396, align 8, !tbaa !131
  %398 = ptrtoint ptr %395 to i64
  %399 = ptrtoint ptr %397 to i64
  %400 = sub i64 %398, %399
  %401 = lshr exact i64 %400, 2
  %402 = trunc i64 %401 to i32
  %403 = load ptr, ptr %26, align 8, !tbaa !105
  %404 = ptrtoint ptr %403 to i64
  %405 = ptrtoint ptr %315 to i64
  %406 = sub i64 %404, %405
  %407 = trunc i64 %406 to i32
  %408 = add i32 %407, 1
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 11717, i32 noundef %402, i32 noundef %408) #15
  br label %409

409:                                              ; preds = %394, %390
  %410 = load ptr, ptr %12, align 8, !tbaa !5
  %411 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %412 = load ptr, ptr %411, align 8, !tbaa !131
  %413 = ptrtoint ptr %410 to i64
  %414 = ptrtoint ptr %412 to i64
  %415 = sub i64 %413, %414
  %416 = icmp slt i64 %415, 0
  br i1 %416, label %417, label %420

417:                                              ; preds = %409
  %418 = lshr exact i64 %415, 2
  %419 = trunc i64 %418 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %419) #15
  br label %2698

420:                                              ; preds = %409
  %421 = load ptr, ptr %26, align 8, !tbaa !105
  %422 = ptrtoint ptr %421 to i64
  %423 = ptrtoint ptr %315 to i64
  %424 = sub i64 %422, %423
  %425 = trunc i64 %424 to i32
  %426 = add i32 %425, 1
  %427 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %428 = load ptr, ptr %427, align 8, !tbaa !130
  %429 = getelementptr inbounds %struct.regexp_internal, ptr %428, i64 0, i32 1
  %430 = load ptr, ptr %429, align 8, !tbaa !17
  %431 = lshr exact i64 %415, 1
  %432 = getelementptr inbounds i32, ptr %430, i64 %431
  store i32 %426, ptr %432, align 4, !tbaa !73
  br label %2698

433:                                              ; preds = %123
  %434 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %435 = call fastcc ptr @S_reg(ptr noundef nonnull %0, i32 noundef 2, ptr noundef nonnull %13, i32 noundef %118)
  store ptr %435, ptr %12, align 8, !tbaa !5
  %436 = icmp eq ptr %435, null
  br i1 %436, label %437, label %479

437:                                              ; preds = %433
  %438 = load i32, ptr %13, align 4, !tbaa !73
  %439 = and i32 %438, 16
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %448, label %441

441:                                              ; preds = %437
  %442 = load ptr, ptr %26, align 8, !tbaa !105
  %443 = load ptr, ptr %116, align 8, !tbaa !107
  %444 = icmp eq ptr %442, %443
  br i1 %444, label %445, label %120

445:                                              ; preds = %441
  %446 = load i32, ptr %1, align 4, !tbaa !73
  %447 = or i32 %446, 16
  store i32 %447, ptr %1, align 4, !tbaa !73
  br label %2700

448:                                              ; preds = %437
  %449 = and i32 %438, 32
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %452, label %451

451:                                              ; preds = %448
  store i32 32, ptr %1, align 4, !tbaa !73
  br label %2700

452:                                              ; preds = %448
  %453 = load ptr, ptr %116, align 8, !tbaa !107
  %454 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %455 = load ptr, ptr %454, align 8, !tbaa !65
  %456 = ptrtoint ptr %453 to i64
  %457 = ptrtoint ptr %455 to i64
  %458 = sub i64 %456, %457
  %459 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %460 = load ptr, ptr %459, align 8, !tbaa !112
  %461 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %462 = icmp eq ptr %460, %461
  br i1 %462, label %468, label %463

463:                                              ; preds = %452
  %464 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %465 = load ptr, ptr %464, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %465, i32 noundef 11) #15
  %466 = load i32, ptr %13, align 4, !tbaa !73
  %467 = load ptr, ptr %454, align 8, !tbaa !65
  br label %468

468:                                              ; preds = %463, %452
  %469 = phi ptr [ %467, %463 ], [ %455, %452 ]
  %470 = phi i32 [ %466, %463 ], [ %438, %452 ]
  %471 = icmp sgt i64 %458, 127
  %472 = select i1 %471, i64 117, i64 %458
  %473 = select i1 %471, ptr @.str.20, ptr @.str.8
  %474 = sext i32 %470 to i64
  %475 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %476 = load i32, ptr %475, align 8, !tbaa !50
  %477 = icmp ne i32 %476, 0
  %478 = zext i1 %477 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.488, i64 noundef %474, i32 noundef %478, i64 noundef %472, ptr noundef %469, ptr noundef nonnull %473) #15
  br label %479

479:                                              ; preds = %433, %468
  %480 = load i32, ptr %13, align 4, !tbaa !73
  %481 = and i32 %480, 15
  %482 = load i32, ptr %1, align 4, !tbaa !73
  %483 = or i32 %482, %481
  store i32 %483, ptr %1, align 4, !tbaa !73
  br label %2698

484:                                              ; preds = %123, %123
  %485 = and i32 %121, 16
  %486 = icmp eq i32 %485, 0
  br i1 %486, label %490, label %487

487:                                              ; preds = %484
  %488 = load i32, ptr %1, align 4, !tbaa !73
  %489 = or i32 %488, 16
  store i32 %489, ptr %1, align 4, !tbaa !73
  br label %2700

490:                                              ; preds = %484
  %491 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %492 = load ptr, ptr %491, align 8, !tbaa !112
  %493 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %494 = icmp eq ptr %492, %493
  br i1 %494, label %499, label %495

495:                                              ; preds = %490
  %496 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %497 = load ptr, ptr %496, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %497, i32 noundef 11) #15
  %498 = load ptr, ptr %26, align 8, !tbaa !105
  br label %499

499:                                              ; preds = %490, %495
  %500 = phi ptr [ %124, %490 ], [ %498, %495 ]
  %501 = load ptr, ptr %116, align 8, !tbaa !107
  %502 = icmp ugt ptr %500, %501
  %503 = select i1 %502, ptr %501, ptr %500
  %504 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %505 = load ptr, ptr %504, align 8, !tbaa !65
  %506 = ptrtoint ptr %503 to i64
  %507 = ptrtoint ptr %505 to i64
  %508 = sub i64 %506, %507
  %509 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %510 = load i32, ptr %509, align 8, !tbaa !50
  %511 = icmp ne i32 %510, 0
  %512 = zext i1 %511 to i32
  %513 = ptrtoint ptr %501 to i64
  %514 = sub i64 %513, %506
  %515 = getelementptr inbounds i8, ptr %505, i64 %508
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.489, i32 noundef %512, i64 noundef %508, ptr noundef %505, i32 noundef %512, i64 noundef %514, ptr noundef %515) #15
  br label %2698

516:                                              ; preds = %123, %123, %123
  %517 = getelementptr inbounds i8, ptr %124, i64 1
  store ptr %517, ptr %26, align 8, !tbaa !105
  %518 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %519 = load ptr, ptr %518, align 8, !tbaa !112
  %520 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %521 = icmp eq ptr %519, %520
  br i1 %521, label %526, label %522

522:                                              ; preds = %516
  %523 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %524 = load ptr, ptr %523, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %524, i32 noundef 11) #15
  %525 = load ptr, ptr %26, align 8, !tbaa !105
  br label %526

526:                                              ; preds = %516, %522
  %527 = phi ptr [ %517, %516 ], [ %525, %522 ]
  %528 = load ptr, ptr %116, align 8, !tbaa !107
  %529 = icmp ugt ptr %527, %528
  %530 = select i1 %529, ptr %528, ptr %527
  %531 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %532 = load ptr, ptr %531, align 8, !tbaa !65
  %533 = ptrtoint ptr %530 to i64
  %534 = ptrtoint ptr %532 to i64
  %535 = sub i64 %533, %534
  %536 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %537 = load i32, ptr %536, align 8, !tbaa !50
  %538 = icmp ne i32 %537, 0
  %539 = zext i1 %538 to i32
  %540 = ptrtoint ptr %528 to i64
  %541 = sub i64 %540, %533
  %542 = getelementptr inbounds i8, ptr %532, i64 %535
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.490, i32 noundef %539, i64 noundef %535, ptr noundef %532, i32 noundef %539, i64 noundef %541, ptr noundef %542) #15
  br label %2698

543:                                              ; preds = %123
  %544 = getelementptr inbounds i8, ptr %124, i64 1
  store ptr %544, ptr %26, align 8, !tbaa !105
  %545 = load i8, ptr %544, align 1, !tbaa !17
  switch i8 %545, label %1632 [
    i8 65, label %547
    i8 71, label %560
    i8 75, label %566
    i8 90, label %575
    i8 122, label %582
    i8 67, label %589
    i8 88, label %615
    i8 87, label %619
    i8 119, label %829
    i8 66, label %620
    i8 98, label %621
    i8 68, label %815
    i8 100, label %816
    i8 82, label %821
    i8 72, label %851
    i8 104, label %848
    i8 86, label %825
    i8 118, label %546
    i8 83, label %826
    i8 115, label %827
    i8 112, label %901
    i8 80, label %901
    i8 78, label %1033
    i8 107, label %1043
    i8 0, label %1606
    i8 103, label %1242
    i8 49, label %1388
    i8 50, label %1388
    i8 51, label %1388
    i8 52, label %1388
    i8 53, label %1388
    i8 54, label %1388
    i8 55, label %1388
    i8 56, label %1388
    i8 57, label %1388
  ]

546:                                              ; preds = %543
  br label %848

547:                                              ; preds = %543
  %548 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %549 = load i32, ptr %548, align 4, !tbaa !101
  %550 = add nsw i32 %549, 1
  store i32 %550, ptr %548, align 4, !tbaa !101
  %551 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 2)
  store ptr %551, ptr %12, align 8, !tbaa !5
  %552 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %553 = load ptr, ptr %552, align 8, !tbaa !112
  %554 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %555 = icmp eq ptr %553, %554
  br i1 %555, label %557, label %556

556:                                              ; preds = %547
  store i8 1, ptr %551, align 2, !tbaa !143
  br label %557

557:                                              ; preds = %556, %547
  %558 = load i32, ptr %1, align 4, !tbaa !73
  %559 = or i32 %558, 2
  store i32 %559, ptr %1, align 4, !tbaa !73
  br label %864

560:                                              ; preds = %543
  %561 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 7)
  store ptr %561, ptr %12, align 8, !tbaa !5
  %562 = load i32, ptr %117, align 8, !tbaa !98
  %563 = or i32 %562, 4
  store i32 %563, ptr %117, align 8, !tbaa !98
  %564 = load i32, ptr %1, align 4, !tbaa !73
  %565 = or i32 %564, 2
  store i32 %565, ptr %1, align 4, !tbaa !73
  br label %864

566:                                              ; preds = %543
  %567 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %568 = load i32, ptr %567, align 4, !tbaa !101
  %569 = add nsw i32 %568, 1
  store i32 %569, ptr %567, align 4, !tbaa !101
  %570 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 90)
  store ptr %570, ptr %12, align 8, !tbaa !5
  %571 = load i32, ptr %1, align 4, !tbaa !73
  %572 = or i32 %571, 2
  store i32 %572, ptr %1, align 4, !tbaa !73
  %573 = load i32, ptr %117, align 8, !tbaa !98
  %574 = or i32 %573, 2
  store i32 %574, ptr %117, align 8, !tbaa !98
  br label %864

575:                                              ; preds = %543
  %576 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 4)
  store ptr %576, ptr %12, align 8, !tbaa !5
  %577 = load i32, ptr %1, align 4, !tbaa !73
  %578 = or i32 %577, 2
  store i32 %578, ptr %1, align 4, !tbaa !73
  %579 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %580 = load i32, ptr %579, align 4, !tbaa !101
  %581 = add nsw i32 %580, 1
  store i32 %581, ptr %579, align 4, !tbaa !101
  br label %864

582:                                              ; preds = %543
  %583 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 6)
  store ptr %583, ptr %12, align 8, !tbaa !5
  %584 = load i32, ptr %1, align 4, !tbaa !73
  %585 = or i32 %584, 2
  store i32 %585, ptr %1, align 4, !tbaa !73
  %586 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %587 = load i32, ptr %586, align 4, !tbaa !101
  %588 = add nsw i32 %587, 1
  store i32 %588, ptr %586, align 4, !tbaa !101
  br label %864

589:                                              ; preds = %543
  %590 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 18)
  store ptr %590, ptr %12, align 8, !tbaa !5
  %591 = load i32, ptr %117, align 8, !tbaa !98
  %592 = or i32 %591, 16
  store i32 %592, ptr %117, align 8, !tbaa !98
  %593 = load i32, ptr %1, align 4, !tbaa !73
  %594 = or i32 %593, 3
  store i32 %594, ptr %1, align 4, !tbaa !73
  %595 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %596 = load ptr, ptr %595, align 8, !tbaa !112
  %597 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %598 = icmp eq ptr %596, %597
  br i1 %598, label %864, label %599

599:                                              ; preds = %589
  %600 = load ptr, ptr %26, align 8, !tbaa !105
  %601 = getelementptr inbounds i8, ptr %600, i64 1
  %602 = ptrtoint ptr %601 to i64
  %603 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %604 = load ptr, ptr %603, align 8, !tbaa !65
  %605 = ptrtoint ptr %604 to i64
  %606 = sub i64 %602, %605
  %607 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %608 = load i32, ptr %607, align 8, !tbaa !50
  %609 = icmp ne i32 %608, 0
  %610 = zext i1 %609 to i32
  %611 = load ptr, ptr %116, align 8, !tbaa !107
  %612 = ptrtoint ptr %611 to i64
  %613 = sub i64 %612, %602
  %614 = getelementptr inbounds i8, ptr %604, i64 %606
  call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 2, ptr noundef nonnull @.str.491, i32 noundef %610, i64 noundef %606, ptr noundef %604, i32 noundef %610, i64 noundef %613, ptr noundef %614) #15
  br label %864

615:                                              ; preds = %543
  %616 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 29)
  store ptr %616, ptr %12, align 8, !tbaa !5
  %617 = load i32, ptr %1, align 4, !tbaa !73
  %618 = or i32 %617, 1
  store i32 %618, ptr %1, align 4, !tbaa !73
  br label %864

619:                                              ; preds = %543
  br label %829

620:                                              ; preds = %543
  br label %621

621:                                              ; preds = %543, %620
  %622 = phi i1 [ false, %543 ], [ true, %620 ]
  %623 = load i32, ptr %0, align 8, !tbaa !66
  %624 = lshr i32 %623, 7
  %625 = and i32 %624, 7
  %626 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 21
  %627 = load i32, ptr %626, align 4, !tbaa !101
  %628 = add nsw i32 %627, 1
  store i32 %628, ptr %626, align 4, !tbaa !101
  %629 = load i32, ptr %117, align 8, !tbaa !98
  %630 = or i32 %629, 2
  store i32 %630, ptr %117, align 8, !tbaa !98
  %631 = trunc i32 %625 to i8
  %632 = or i8 %631, 8
  %633 = icmp eq i8 %632, 9
  br i1 %633, label %634, label %636

634:                                              ; preds = %621
  %635 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 34
  store i32 1, ptr %635, align 8, !tbaa !52
  br label %636

636:                                              ; preds = %634, %621
  %637 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext %632)
  store ptr %637, ptr %12, align 8, !tbaa !5
  %638 = load i32, ptr %1, align 4, !tbaa !73
  %639 = or i32 %638, 2
  store i32 %639, ptr %1, align 4, !tbaa !73
  %640 = load ptr, ptr %26, align 8, !tbaa !105
  %641 = getelementptr inbounds i8, ptr %640, i64 1
  %642 = load i8, ptr %641, align 1, !tbaa !17
  %643 = icmp eq i8 %642, 123
  br i1 %643, label %653, label %644

644:                                              ; preds = %636
  store i8 0, ptr %637, align 2, !tbaa !143
  %645 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %646 = load ptr, ptr %645, align 8, !tbaa !112
  %647 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %648 = icmp ne ptr %646, %647
  %649 = icmp ugt i8 %632, 11
  %650 = and i1 %649, %648
  br i1 %650, label %651, label %805

651:                                              ; preds = %644
  %652 = getelementptr inbounds %struct.regnode, ptr %637, i64 0, i32 1
  store i8 11, ptr %652, align 1, !tbaa !141
  br label %805

653:                                              ; preds = %636
  %654 = load i8, ptr %640, align 1, !tbaa !17
  %655 = getelementptr inbounds i8, ptr %640, i64 2
  store ptr %655, ptr %26, align 8, !tbaa !105
  %656 = call ptr @strchr(ptr noundef nonnull dereferenceable(1) %655, i32 noundef 125) #18
  %657 = icmp eq ptr %656, null
  br i1 %657, label %658, label %684

658:                                              ; preds = %653
  %659 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %660 = load ptr, ptr %659, align 8, !tbaa !112
  %661 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %662 = icmp eq ptr %660, %661
  br i1 %662, label %667, label %663

663:                                              ; preds = %658
  %664 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %665 = load ptr, ptr %664, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %665, i32 noundef 11) #15
  %666 = load ptr, ptr %26, align 8, !tbaa !105
  br label %667

667:                                              ; preds = %658, %663
  %668 = phi ptr [ %655, %658 ], [ %666, %663 ]
  %669 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %670 = load ptr, ptr %669, align 8, !tbaa !65
  %671 = ptrtoint ptr %668 to i64
  %672 = ptrtoint ptr %670 to i64
  %673 = sub i64 %671, %672
  %674 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %675 = load i32, ptr %674, align 8, !tbaa !50
  %676 = icmp ne i32 %675, 0
  %677 = zext i1 %676 to i32
  %678 = sext i8 %654 to i32
  %679 = load ptr, ptr %116, align 8, !tbaa !107
  %680 = ptrtoint ptr %679 to i64
  %681 = sub i64 %680, %671
  %682 = getelementptr inbounds i8, ptr %670, i64 %673
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %676, ptr noundef nonnull @.str.492, ptr nonnull poison, i32 noundef %678, i32 noundef %677, i64 noundef %673, ptr noundef %670, i32 noundef %677, i64 noundef %681, ptr noundef %682)
  %683 = load ptr, ptr %26, align 8, !tbaa !105
  br label %684

684:                                              ; preds = %667, %653
  %685 = phi ptr [ %683, %667 ], [ %655, %653 ]
  %686 = icmp eq ptr %656, %685
  br i1 %686, label %687, label %714

687:                                              ; preds = %684
  %688 = getelementptr inbounds i8, ptr %656, i64 1
  store ptr %688, ptr %26, align 8, !tbaa !105
  %689 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %690 = load ptr, ptr %689, align 8, !tbaa !112
  %691 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %692 = icmp eq ptr %690, %691
  br i1 %692, label %697, label %693

693:                                              ; preds = %687
  %694 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %695 = load ptr, ptr %694, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %695, i32 noundef 11) #15
  %696 = load ptr, ptr %26, align 8, !tbaa !105
  br label %697

697:                                              ; preds = %687, %693
  %698 = phi ptr [ %688, %687 ], [ %696, %693 ]
  %699 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %700 = load ptr, ptr %699, align 8, !tbaa !65
  %701 = ptrtoint ptr %698 to i64
  %702 = ptrtoint ptr %700 to i64
  %703 = sub i64 %701, %702
  %704 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %705 = load i32, ptr %704, align 8, !tbaa !50
  %706 = icmp ne i32 %705, 0
  %707 = zext i1 %706 to i32
  %708 = sext i8 %654 to i32
  %709 = load ptr, ptr %116, align 8, !tbaa !107
  %710 = ptrtoint ptr %709 to i64
  %711 = sub i64 %710, %701
  %712 = getelementptr inbounds i8, ptr %700, i64 %703
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %706, ptr noundef nonnull @.str.493, ptr nonnull poison, i32 noundef %708, i32 noundef %707, i64 noundef %703, ptr noundef %700, i32 noundef %707, i64 noundef %711, ptr noundef %712)
  %713 = load ptr, ptr %26, align 8, !tbaa !105
  br label %714

714:                                              ; preds = %697, %684
  %715 = phi ptr [ %713, %697 ], [ %685, %684 ]
  %716 = ptrtoint ptr %656 to i64
  %717 = ptrtoint ptr %715 to i64
  %718 = sub i64 %716, %717
  %719 = load i8, ptr %715, align 1, !tbaa !17
  %720 = sext i8 %719 to i32
  switch i32 %720, label %744 [
    i32 103, label %721
    i32 115, label %728
    i32 119, label %736
  ]

721:                                              ; preds = %714
  switch i64 %718, label %744 [
    i64 1, label %726
    i64 3, label %722
  ]

722:                                              ; preds = %721
  %723 = getelementptr inbounds i8, ptr %715, i64 1
  %724 = call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %723, ptr noundef nonnull dereferenceable(3) @.str.494, i64 noundef 2) #18
  %725 = icmp eq i32 %724, 0
  br i1 %725, label %726, label %744

726:                                              ; preds = %721, %722
  %727 = load ptr, ptr %12, align 8, !tbaa !5
  store i8 1, ptr %727, align 2, !tbaa !143
  br label %772

728:                                              ; preds = %714
  %729 = icmp eq i64 %718, 2
  br i1 %729, label %730, label %744

730:                                              ; preds = %728
  %731 = getelementptr inbounds i8, ptr %715, i64 1
  %732 = load i8, ptr %731, align 1, !tbaa !17
  %733 = icmp eq i8 %732, 98
  br i1 %733, label %734, label %744

734:                                              ; preds = %730
  %735 = load ptr, ptr %12, align 8, !tbaa !5
  store i8 2, ptr %735, align 2, !tbaa !143
  br label %772

736:                                              ; preds = %714
  %737 = icmp eq i64 %718, 2
  br i1 %737, label %738, label %744

738:                                              ; preds = %736
  %739 = getelementptr inbounds i8, ptr %715, i64 1
  %740 = load i8, ptr %739, align 1, !tbaa !17
  %741 = icmp eq i8 %740, 98
  br i1 %741, label %742, label %744

742:                                              ; preds = %738
  %743 = load ptr, ptr %12, align 8, !tbaa !5
  store i8 3, ptr %743, align 2, !tbaa !143
  br label %772

744:                                              ; preds = %721, %714, %736, %738, %728, %730, %722
  store ptr %656, ptr %26, align 8, !tbaa !105
  %745 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %746 = load ptr, ptr %745, align 8, !tbaa !65
  %747 = ptrtoint ptr %746 to i64
  %748 = sub i64 %716, %747
  %749 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %750 = load ptr, ptr %749, align 8, !tbaa !112
  %751 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %752 = icmp eq ptr %750, %751
  br i1 %752, label %758, label %753

753:                                              ; preds = %744
  %754 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %755 = load ptr, ptr %754, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %755, i32 noundef 11) #15
  %756 = load ptr, ptr %745, align 8, !tbaa !65
  %757 = ptrtoint ptr %756 to i64
  br label %758

758:                                              ; preds = %753, %744
  %759 = phi i64 [ %757, %753 ], [ %747, %744 ]
  %760 = phi ptr [ %756, %753 ], [ %746, %744 ]
  %761 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %762 = load i32, ptr %761, align 8, !tbaa !50
  %763 = icmp ne i32 %762, 0
  %764 = zext i1 %763 to i32
  %765 = sub i64 0, %718
  %766 = getelementptr inbounds i8, ptr %656, i64 %765
  %767 = load ptr, ptr %116, align 8, !tbaa !107
  %768 = ptrtoint ptr %767 to i64
  %769 = add i64 %748, %759
  %770 = sub i64 %768, %769
  %771 = getelementptr inbounds i8, ptr %760, i64 %748
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %763, ptr noundef nonnull @.str.495, ptr nonnull poison, i32 noundef %764, i64 noundef %718, ptr noundef %766, i32 noundef %764, i64 noundef %748, ptr noundef %760, i32 noundef %764, i64 noundef %770, ptr noundef %771)
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.220, i32 noundef 11900) #15
  br label %772

772:                                              ; preds = %758, %742, %734, %726
  store ptr %656, ptr %26, align 8, !tbaa !105
  %773 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 27
  store i32 1, ptr %773, align 8, !tbaa !51
  %774 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %775 = load ptr, ptr %774, align 8, !tbaa !112
  %776 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %777 = icmp ne ptr %775, %776
  %778 = icmp ugt i8 %632, 10
  %779 = and i1 %778, %777
  br i1 %779, label %780, label %805

780:                                              ; preds = %772
  %781 = load ptr, ptr %12, align 8, !tbaa !5
  %782 = getelementptr inbounds %struct.regnode, ptr %781, i64 0, i32 1
  store i8 10, ptr %782, align 1, !tbaa !141
  %783 = getelementptr inbounds i8, ptr %656, i64 1
  %784 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %785 = load ptr, ptr %784, align 8, !tbaa !65
  %786 = ptrtoint ptr %783 to i64
  %787 = ptrtoint ptr %785 to i64
  %788 = sub i64 %786, %787
  %789 = trunc i64 %718 to i32
  %790 = add i32 %789, 4
  %791 = sub i64 -4, %718
  %792 = getelementptr inbounds i8, ptr %656, i64 %791
  %793 = getelementptr inbounds i8, ptr %792, i64 1
  %794 = icmp eq i32 %625, 3
  %795 = select i1 %794, ptr @.str.78, ptr @.str.219
  %796 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %797 = load i32, ptr %796, align 8, !tbaa !50
  %798 = icmp ne i32 %797, 0
  %799 = zext i1 %798 to i32
  %800 = load ptr, ptr %116, align 8, !tbaa !107
  %801 = ptrtoint ptr %800 to i64
  %802 = sub i64 %801, %786
  %803 = getelementptr inbounds i8, ptr %785, i64 %788
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.496, i32 noundef %790, ptr noundef nonnull %793, ptr noundef nonnull %795, i32 noundef %799, i64 noundef %788, ptr noundef %785, i32 noundef %799, i64 noundef %802, ptr noundef %803) #15
  %804 = load ptr, ptr %774, align 8, !tbaa !112
  br label %805

805:                                              ; preds = %772, %780, %644, %651
  %806 = phi ptr [ %775, %772 ], [ %804, %780 ], [ %646, %644 ], [ %646, %651 ]
  %807 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %808 = icmp ne ptr %806, %807
  %809 = and i1 %622, %808
  br i1 %809, label %810, label %864

810:                                              ; preds = %805
  %811 = load ptr, ptr %12, align 8, !tbaa !5
  %812 = getelementptr inbounds %struct.regnode, ptr %811, i64 0, i32 1
  %813 = load i8, ptr %812, align 1, !tbaa !141
  %814 = add i8 %813, 4
  store i8 %814, ptr %812, align 1, !tbaa !141
  br label %864

815:                                              ; preds = %543
  br label %816

816:                                              ; preds = %543, %815
  %817 = phi i32 [ 0, %543 ], [ 1, %815 ]
  %818 = load i32, ptr %0, align 8, !tbaa !66
  %819 = and i32 %818, 896
  %820 = icmp eq i32 %819, 0
  br i1 %820, label %842, label %829

821:                                              ; preds = %543
  %822 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext 91)
  store ptr %822, ptr %12, align 8, !tbaa !5
  %823 = load i32, ptr %1, align 4, !tbaa !73
  %824 = or i32 %823, 3
  store i32 %824, ptr %1, align 4, !tbaa !73
  br label %864

825:                                              ; preds = %543
  br label %851

826:                                              ; preds = %543
  br label %827

827:                                              ; preds = %543, %826
  %828 = phi i32 [ 0, %543 ], [ 1, %826 ]
  br label %829

829:                                              ; preds = %543, %619, %816, %827
  %830 = phi i8 [ 20, %827 ], [ 2, %816 ], [ 0, %543 ], [ 0, %619 ]
  %831 = phi i32 [ %828, %827 ], [ %817, %816 ], [ 0, %543 ], [ 1, %619 ]
  %832 = load i32, ptr %0, align 8, !tbaa !66
  %833 = lshr i32 %832, 7
  %834 = trunc i32 %833 to i8
  %835 = and i8 %834, 7
  %836 = icmp ugt i8 %835, 3
  br i1 %836, label %842, label %837

837:                                              ; preds = %829
  %838 = add nuw nsw i8 %835, 21
  %839 = icmp eq i8 %838, 22
  br i1 %839, label %840, label %842

840:                                              ; preds = %837
  %841 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 34
  store i32 1, ptr %841, align 8, !tbaa !52
  br label %842

842:                                              ; preds = %829, %816, %840, %837
  %843 = phi i8 [ %830, %840 ], [ %830, %837 ], [ 2, %816 ], [ %830, %829 ]
  %844 = phi i32 [ %831, %840 ], [ %831, %837 ], [ %817, %816 ], [ %831, %829 ]
  %845 = phi i8 [ 22, %840 ], [ %838, %837 ], [ 23, %816 ], [ 24, %829 ]
  %846 = icmp eq i32 %844, 0
  %847 = add nuw nsw i8 %845, 4
  br i1 %846, label %848, label %851

848:                                              ; preds = %543, %546, %842
  %849 = phi i8 [ %845, %842 ], [ 23, %543 ], [ 23, %546 ]
  %850 = phi i8 [ %843, %842 ], [ 22, %543 ], [ 30, %546 ]
  br label %851

851:                                              ; preds = %543, %825, %842, %848
  %852 = phi i8 [ %850, %848 ], [ %843, %842 ], [ 22, %543 ], [ 30, %825 ]
  %853 = phi i8 [ %849, %848 ], [ %847, %842 ], [ 27, %543 ], [ 27, %825 ]
  %854 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext %853)
  store ptr %854, ptr %12, align 8, !tbaa !5
  %855 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %856 = load ptr, ptr %855, align 8, !tbaa !112
  %857 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %858 = icmp eq ptr %856, %857
  br i1 %858, label %861, label %859

859:                                              ; preds = %851
  %860 = lshr i8 %852, 1
  store i8 %860, ptr %854, align 2, !tbaa !143
  br label %861

861:                                              ; preds = %859, %851
  %862 = load i32, ptr %1, align 4, !tbaa !73
  %863 = or i32 %862, 3
  store i32 %863, ptr %1, align 4, !tbaa !73
  br label %864

864:                                              ; preds = %805, %810, %589, %599, %861, %821, %615, %582, %575, %566, %560, %557
  %865 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %866 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %867 = load ptr, ptr %866, align 8, !tbaa !112
  %868 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %869 = icmp eq ptr %867, %868
  br i1 %869, label %2698, label %870

870:                                              ; preds = %864
  %871 = load volatile i64, ptr %14, align 8, !tbaa !9
  %872 = and i64 %871, 262144
  %873 = icmp eq i64 %872, 0
  br i1 %873, label %883, label %874

874:                                              ; preds = %870
  %875 = load ptr, ptr %12, align 8, !tbaa !5
  %876 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %877 = load ptr, ptr %876, align 8, !tbaa !131
  %878 = ptrtoint ptr %875 to i64
  %879 = ptrtoint ptr %877 to i64
  %880 = sub i64 %878, %879
  %881 = lshr exact i64 %880, 2
  %882 = trunc i64 %881 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 11995, i32 noundef %882, i32 noundef 2) #15
  br label %883

883:                                              ; preds = %874, %870
  %884 = load ptr, ptr %12, align 8, !tbaa !5
  %885 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %886 = load ptr, ptr %885, align 8, !tbaa !131
  %887 = ptrtoint ptr %884 to i64
  %888 = ptrtoint ptr %886 to i64
  %889 = sub i64 %887, %888
  %890 = icmp slt i64 %889, 0
  br i1 %890, label %891, label %894

891:                                              ; preds = %883
  %892 = lshr exact i64 %889, 2
  %893 = trunc i64 %892 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %893) #15
  br label %2698

894:                                              ; preds = %883
  %895 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %896 = load ptr, ptr %895, align 8, !tbaa !130
  %897 = getelementptr inbounds %struct.regexp_internal, ptr %896, i64 0, i32 1
  %898 = load ptr, ptr %897, align 8, !tbaa !17
  %899 = lshr exact i64 %889, 1
  %900 = getelementptr inbounds i32, ptr %898, i64 %899
  store i32 2, ptr %900, align 4, !tbaa !73
  br label %2698

901:                                              ; preds = %543, %543
  %902 = getelementptr inbounds i8, ptr %124, i64 -1
  store ptr %124, ptr %26, align 8, !tbaa !105
  %903 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 45
  %904 = load i32, ptr %903, align 4, !tbaa !54
  %905 = icmp ne i32 %904, 0
  %906 = call fastcc ptr @S_regclass(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef %118, i1 noundef zeroext true, i1 noundef zeroext false, i1 noundef zeroext false, i1 noundef zeroext %905, ptr noundef null)
  store ptr %906, ptr %12, align 8, !tbaa !5
  %907 = icmp eq ptr %906, null
  br i1 %907, label %908, label %934

908:                                              ; preds = %901
  %909 = load ptr, ptr %116, align 8, !tbaa !107
  %910 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %911 = load ptr, ptr %910, align 8, !tbaa !65
  %912 = ptrtoint ptr %909 to i64
  %913 = ptrtoint ptr %911 to i64
  %914 = sub i64 %912, %913
  %915 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %916 = load ptr, ptr %915, align 8, !tbaa !112
  %917 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %918 = icmp eq ptr %916, %917
  br i1 %918, label %923, label %919

919:                                              ; preds = %908
  %920 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %921 = load ptr, ptr %920, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %921, i32 noundef 11) #15
  %922 = load ptr, ptr %910, align 8, !tbaa !65
  br label %923

923:                                              ; preds = %919, %908
  %924 = phi ptr [ %922, %919 ], [ %911, %908 ]
  %925 = icmp sgt i64 %914, 127
  %926 = select i1 %925, i64 117, i64 %914
  %927 = select i1 %925, ptr @.str.20, ptr @.str.8
  %928 = load i32, ptr %1, align 4, !tbaa !73
  %929 = sext i32 %928 to i64
  %930 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %931 = load i32, ptr %930, align 8, !tbaa !50
  %932 = icmp ne i32 %931, 0
  %933 = zext i1 %932 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.487, i64 noundef %929, i32 noundef %933, i64 noundef %926, ptr noundef %924, ptr noundef nonnull %927) #15
  br label %934

934:                                              ; preds = %923, %901
  %935 = load ptr, ptr %26, align 8, !tbaa !105
  %936 = getelementptr inbounds i8, ptr %935, i64 -1
  store ptr %936, ptr %26, align 8, !tbaa !105
  %937 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %938 = load ptr, ptr %937, align 8, !tbaa !112
  %939 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %940 = icmp eq ptr %938, %939
  br i1 %940, label %986, label %941

941:                                              ; preds = %934
  %942 = load volatile i64, ptr %14, align 8, !tbaa !9
  %943 = and i64 %942, 262144
  %944 = icmp eq i64 %943, 0
  %945 = load ptr, ptr %12, align 8, !tbaa !5
  br i1 %944, label %961, label %946

946:                                              ; preds = %941
  %947 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %948 = load ptr, ptr %947, align 8, !tbaa !131
  %949 = ptrtoint ptr %945 to i64
  %950 = ptrtoint ptr %948 to i64
  %951 = sub i64 %949, %950
  %952 = lshr exact i64 %951, 2
  %953 = trunc i64 %952 to i32
  %954 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %955 = load ptr, ptr %954, align 8, !tbaa !106
  %956 = ptrtoint ptr %544 to i64
  %957 = ptrtoint ptr %955 to i64
  %958 = sub i64 %956, %957
  %959 = trunc i64 %958 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 12022, i32 noundef %953, i32 noundef %959) #15
  %960 = load ptr, ptr %12, align 8, !tbaa !5
  br label %961

961:                                              ; preds = %946, %941
  %962 = phi ptr [ %960, %946 ], [ %945, %941 ]
  %963 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %964 = load ptr, ptr %963, align 8, !tbaa !131
  %965 = ptrtoint ptr %962 to i64
  %966 = ptrtoint ptr %964 to i64
  %967 = sub i64 %965, %966
  %968 = icmp slt i64 %967, 0
  br i1 %968, label %969, label %972

969:                                              ; preds = %961
  %970 = lshr exact i64 %967, 2
  %971 = trunc i64 %970 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %971) #15
  br label %986

972:                                              ; preds = %961
  %973 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %974 = load ptr, ptr %973, align 8, !tbaa !106
  %975 = ptrtoint ptr %544 to i64
  %976 = ptrtoint ptr %974 to i64
  %977 = sub i64 %975, %976
  %978 = trunc i64 %977 to i32
  %979 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %980 = load ptr, ptr %979, align 8, !tbaa !130
  %981 = getelementptr inbounds %struct.regexp_internal, ptr %980, i64 0, i32 1
  %982 = load ptr, ptr %981, align 8, !tbaa !17
  %983 = lshr exact i64 %967, 1
  %984 = add nsw i64 %983, -1
  %985 = getelementptr inbounds i32, ptr %982, i64 %984
  store i32 %978, ptr %985, align 4, !tbaa !73
  br label %986

986:                                              ; preds = %934, %972, %969
  %987 = load ptr, ptr %937, align 8, !tbaa !112
  %988 = icmp eq ptr %987, %939
  br i1 %988, label %1031, label %989

989:                                              ; preds = %986
  %990 = load volatile i64, ptr %14, align 8, !tbaa !9
  %991 = and i64 %990, 262144
  %992 = icmp eq i64 %991, 0
  %993 = load ptr, ptr %12, align 8, !tbaa !5
  br i1 %992, label %1008, label %994

994:                                              ; preds = %989
  %995 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %996 = load ptr, ptr %995, align 8, !tbaa !131
  %997 = ptrtoint ptr %993 to i64
  %998 = ptrtoint ptr %996 to i64
  %999 = sub i64 %997, %998
  %1000 = lshr exact i64 %999, 2
  %1001 = trunc i64 %1000 to i32
  %1002 = load ptr, ptr %26, align 8, !tbaa !105
  %1003 = ptrtoint ptr %1002 to i64
  %1004 = ptrtoint ptr %902 to i64
  %1005 = sub i64 %1003, %1004
  %1006 = trunc i64 %1005 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 12023, i32 noundef %1001, i32 noundef %1006) #15
  %1007 = load ptr, ptr %12, align 8, !tbaa !5
  br label %1008

1008:                                             ; preds = %994, %989
  %1009 = phi ptr [ %1007, %994 ], [ %993, %989 ]
  %1010 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %1011 = load ptr, ptr %1010, align 8, !tbaa !131
  %1012 = ptrtoint ptr %1009 to i64
  %1013 = ptrtoint ptr %1011 to i64
  %1014 = sub i64 %1012, %1013
  %1015 = icmp slt i64 %1014, 0
  br i1 %1015, label %1016, label %1019

1016:                                             ; preds = %1008
  %1017 = lshr exact i64 %1014, 2
  %1018 = trunc i64 %1017 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %1018) #15
  br label %1031

1019:                                             ; preds = %1008
  %1020 = load ptr, ptr %26, align 8, !tbaa !105
  %1021 = ptrtoint ptr %1020 to i64
  %1022 = ptrtoint ptr %902 to i64
  %1023 = sub i64 %1021, %1022
  %1024 = trunc i64 %1023 to i32
  %1025 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %1026 = load ptr, ptr %1025, align 8, !tbaa !130
  %1027 = getelementptr inbounds %struct.regexp_internal, ptr %1026, i64 0, i32 1
  %1028 = load ptr, ptr %1027, align 8, !tbaa !17
  %1029 = lshr exact i64 %1014, 1
  %1030 = getelementptr inbounds i32, ptr %1028, i64 %1029
  store i32 %1024, ptr %1030, align 4, !tbaa !73
  br label %1031

1031:                                             ; preds = %1016, %1019, %986
  %1032 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %2698

1033:                                             ; preds = %543
  %1034 = getelementptr inbounds i8, ptr %124, i64 2
  store ptr %1034, ptr %26, align 8, !tbaa !105
  %1035 = call fastcc zeroext i1 @S_grok_bslash_N(ptr noundef nonnull %0, ptr noundef nonnull %12, ptr noundef null, ptr noundef null, ptr noundef nonnull %1, i32 noundef %2)
  br i1 %1035, label %2698, label %1036

1036:                                             ; preds = %1033
  %1037 = load i32, ptr %1, align 4, !tbaa !73
  %1038 = and i32 %1037, 32
  %1039 = icmp eq i32 %1038, 0
  br i1 %1039, label %1040, label %2700

1040:                                             ; preds = %1036
  %1041 = load ptr, ptr %26, align 8, !tbaa !105
  %1042 = getelementptr inbounds i8, ptr %1041, i64 -1
  store ptr %1042, ptr %26, align 8, !tbaa !105
  br label %1659

1043:                                             ; preds = %543, %1265
  %1044 = phi ptr [ %544, %543 ], [ %1268, %1265 ]
  %1045 = getelementptr inbounds i8, ptr %1044, i64 1
  %1046 = load i8, ptr %1045, align 1, !tbaa !17
  switch i8 %1046, label %1047 [
    i8 123, label %1071
    i8 60, label %1071
    i8 39, label %1071
  ]

1047:                                             ; preds = %1043
  store ptr %1045, ptr %26, align 8, !tbaa !105
  %1048 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1049 = load ptr, ptr %1048, align 8, !tbaa !112
  %1050 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1051 = icmp eq ptr %1049, %1050
  br i1 %1051, label %1056, label %1052

1052:                                             ; preds = %1047
  %1053 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1054 = load ptr, ptr %1053, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1054, i32 noundef 11) #15
  %1055 = load ptr, ptr %26, align 8, !tbaa !105
  br label %1056

1056:                                             ; preds = %1047, %1052
  %1057 = phi ptr [ %1045, %1047 ], [ %1055, %1052 ]
  %1058 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1059 = load ptr, ptr %1058, align 8, !tbaa !65
  %1060 = ptrtoint ptr %1057 to i64
  %1061 = ptrtoint ptr %1059 to i64
  %1062 = sub i64 %1060, %1061
  %1063 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1064 = load i32, ptr %1063, align 8, !tbaa !50
  %1065 = icmp ne i32 %1064, 0
  %1066 = zext i1 %1065 to i32
  %1067 = load ptr, ptr %116, align 8, !tbaa !107
  %1068 = ptrtoint ptr %1067 to i64
  %1069 = sub i64 %1068, %1060
  %1070 = getelementptr inbounds i8, ptr %1059, i64 %1062
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %1065, ptr noundef nonnull @.str.497, ptr nonnull poison, ptr noundef %27, i32 noundef %1066, i64 noundef %1062, ptr noundef %1059, i32 noundef %1066, i64 noundef %1069, ptr noundef %1070)
  br label %2698

1071:                                             ; preds = %1043, %1043, %1043
  %1072 = getelementptr inbounds i8, ptr %1044, i64 2
  store ptr %1072, ptr %26, align 8, !tbaa !105
  %1073 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1074 = load ptr, ptr %1073, align 8, !tbaa !112
  %1075 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1076 = icmp eq ptr %1074, %1075
  %1077 = select i1 %1076, i32 0, i32 2
  %1078 = call fastcc ptr @S_reg_scan_name(ptr noundef nonnull %0, i32 noundef %1077)
  %1079 = load ptr, ptr %26, align 8, !tbaa !105
  %1080 = icmp eq ptr %1079, %1072
  br i1 %1080, label %1089, label %1081

1081:                                             ; preds = %1071
  %1082 = icmp eq i8 %1046, 60
  %1083 = icmp eq i8 %1046, 123
  %1084 = select i1 %1083, i32 125, i32 39
  %1085 = select i1 %1082, i32 62, i32 %1084
  %1086 = load i8, ptr %1079, align 1, !tbaa !17
  %1087 = sext i8 %1086 to i32
  %1088 = icmp eq i32 %1085, %1087
  br i1 %1088, label %1111, label %1089

1089:                                             ; preds = %1071, %1081
  %1090 = load ptr, ptr %1073, align 8, !tbaa !112
  %1091 = icmp eq ptr %1090, %1075
  br i1 %1091, label %1096, label %1092

1092:                                             ; preds = %1089
  %1093 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1094 = load ptr, ptr %1093, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1094, i32 noundef 11) #15
  %1095 = load ptr, ptr %26, align 8, !tbaa !105
  br label %1096

1096:                                             ; preds = %1089, %1092
  %1097 = phi ptr [ %1079, %1089 ], [ %1095, %1092 ]
  %1098 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1099 = load ptr, ptr %1098, align 8, !tbaa !65
  %1100 = ptrtoint ptr %1097 to i64
  %1101 = ptrtoint ptr %1099 to i64
  %1102 = sub i64 %1100, %1101
  %1103 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1104 = load i32, ptr %1103, align 8, !tbaa !50
  %1105 = icmp ne i32 %1104, 0
  %1106 = zext i1 %1105 to i32
  %1107 = load ptr, ptr %116, align 8, !tbaa !107
  %1108 = ptrtoint ptr %1107 to i64
  %1109 = sub i64 %1108, %1100
  %1110 = getelementptr inbounds i8, ptr %1099, i64 %1102
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %1105, ptr noundef nonnull @.str.408, ptr nonnull poison, ptr noundef %27, i32 noundef %1106, i64 noundef %1102, ptr noundef %1099, i32 noundef %1106, i64 noundef %1109, ptr noundef %1110)
  br label %1111

1111:                                             ; preds = %1096, %1081
  %1112 = load ptr, ptr %1073, align 8, !tbaa !112
  %1113 = icmp eq ptr %1112, %1075
  br i1 %1113, label %1127, label %1114

1114:                                             ; preds = %1111
  %1115 = call fastcc i32 @S_add_data(ptr noundef nonnull %0, ptr noundef nonnull @.str.406, i32 noundef 1)
  %1116 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %1117 = load ptr, ptr %1116, align 8, !tbaa !130
  %1118 = getelementptr inbounds %struct.regexp_internal, ptr %1117, i64 0, i32 3
  %1119 = load ptr, ptr %1118, align 8, !tbaa !147
  %1120 = zext i32 %1115 to i64
  %1121 = getelementptr inbounds %struct.reg_data, ptr %1119, i64 0, i32 2, i64 %1120
  store ptr %1078, ptr %1121, align 8, !tbaa !5
  %1122 = icmp eq ptr %1078, null
  br i1 %1122, label %1127, label %1123

1123:                                             ; preds = %1114
  %1124 = getelementptr inbounds %struct.sv, ptr %1078, i64 0, i32 1
  %1125 = load i32, ptr %1124, align 8, !tbaa !37
  %1126 = add i32 %1125, 1
  store i32 %1126, ptr %1124, align 8, !tbaa !37
  br label %1127

1127:                                             ; preds = %1114, %1123, %1111
  %1128 = phi i32 [ 0, %1111 ], [ %1115, %1123 ], [ %1115, %1114 ]
  %1129 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 15
  store i32 1, ptr %1129, align 4, !tbaa !97
  %1130 = load i32, ptr %0, align 8, !tbaa !66
  %1131 = and i32 %1130, 4
  %1132 = icmp eq i32 %1131, 0
  br i1 %1132, label %1142, label %1133

1133:                                             ; preds = %1127
  %1134 = lshr i32 %1130, 7
  %1135 = and i32 %1134, 7
  %1136 = icmp eq i32 %1135, 4
  br i1 %1136, label %1142, label %1137

1137:                                             ; preds = %1133
  %1138 = icmp ugt i32 %1135, 1
  br i1 %1138, label %1142, label %1139

1139:                                             ; preds = %1137
  %1140 = icmp eq i32 %1135, 1
  %1141 = select i1 %1140, i8 58, i8 57
  br label %1142

1142:                                             ; preds = %1133, %1137, %1139, %1127
  %1143 = phi i8 [ 56, %1127 ], [ 60, %1133 ], [ %1141, %1139 ], [ 59, %1137 ]
  %1144 = call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext %1143, i32 noundef %1128)
  store ptr %1144, ptr %12, align 8, !tbaa !5
  %1145 = load i32, ptr %1, align 4, !tbaa !73
  %1146 = or i32 %1145, 1
  store i32 %1146, ptr %1, align 4, !tbaa !73
  %1147 = load ptr, ptr %1073, align 8, !tbaa !112
  %1148 = icmp eq ptr %1147, %1075
  br i1 %1148, label %1195, label %1149

1149:                                             ; preds = %1142
  %1150 = load volatile i64, ptr %14, align 8, !tbaa !9
  %1151 = and i64 %1150, 262144
  %1152 = icmp eq i64 %1151, 0
  br i1 %1152, label %1169, label %1153

1153:                                             ; preds = %1149
  %1154 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %1155 = load ptr, ptr %1154, align 8, !tbaa !131
  %1156 = ptrtoint ptr %1144 to i64
  %1157 = ptrtoint ptr %1155 to i64
  %1158 = sub i64 %1156, %1157
  %1159 = lshr exact i64 %1158, 2
  %1160 = trunc i64 %1159 to i32
  %1161 = getelementptr inbounds i8, ptr %27, i64 1
  %1162 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %1163 = load ptr, ptr %1162, align 8, !tbaa !106
  %1164 = ptrtoint ptr %1161 to i64
  %1165 = ptrtoint ptr %1163 to i64
  %1166 = sub i64 %1164, %1165
  %1167 = trunc i64 %1166 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 12098, i32 noundef %1160, i32 noundef %1167) #15
  %1168 = load ptr, ptr %12, align 8, !tbaa !5
  br label %1169

1169:                                             ; preds = %1153, %1149
  %1170 = phi ptr [ %1168, %1153 ], [ %1144, %1149 ]
  %1171 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %1172 = load ptr, ptr %1171, align 8, !tbaa !131
  %1173 = ptrtoint ptr %1170 to i64
  %1174 = ptrtoint ptr %1172 to i64
  %1175 = sub i64 %1173, %1174
  %1176 = icmp slt i64 %1175, 0
  br i1 %1176, label %1177, label %1180

1177:                                             ; preds = %1169
  %1178 = lshr exact i64 %1175, 2
  %1179 = trunc i64 %1178 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %1179) #15
  br label %1195

1180:                                             ; preds = %1169
  %1181 = getelementptr inbounds i8, ptr %27, i64 1
  %1182 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %1183 = load ptr, ptr %1182, align 8, !tbaa !106
  %1184 = ptrtoint ptr %1181 to i64
  %1185 = ptrtoint ptr %1183 to i64
  %1186 = sub i64 %1184, %1185
  %1187 = trunc i64 %1186 to i32
  %1188 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %1189 = load ptr, ptr %1188, align 8, !tbaa !130
  %1190 = getelementptr inbounds %struct.regexp_internal, ptr %1189, i64 0, i32 1
  %1191 = load ptr, ptr %1190, align 8, !tbaa !17
  %1192 = lshr exact i64 %1175, 1
  %1193 = add nsw i64 %1192, -1
  %1194 = getelementptr inbounds i32, ptr %1191, i64 %1193
  store i32 %1187, ptr %1194, align 4, !tbaa !73
  br label %1195

1195:                                             ; preds = %1142, %1180, %1177
  %1196 = load ptr, ptr %1073, align 8, !tbaa !112
  %1197 = icmp eq ptr %1196, %1075
  br i1 %1197, label %1240, label %1198

1198:                                             ; preds = %1195
  %1199 = load volatile i64, ptr %14, align 8, !tbaa !9
  %1200 = and i64 %1199, 262144
  %1201 = icmp eq i64 %1200, 0
  %1202 = load ptr, ptr %12, align 8, !tbaa !5
  br i1 %1201, label %1217, label %1203

1203:                                             ; preds = %1198
  %1204 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %1205 = load ptr, ptr %1204, align 8, !tbaa !131
  %1206 = ptrtoint ptr %1202 to i64
  %1207 = ptrtoint ptr %1205 to i64
  %1208 = sub i64 %1206, %1207
  %1209 = lshr exact i64 %1208, 2
  %1210 = trunc i64 %1209 to i32
  %1211 = load ptr, ptr %26, align 8, !tbaa !105
  %1212 = ptrtoint ptr %1211 to i64
  %1213 = ptrtoint ptr %27 to i64
  %1214 = sub i64 %1212, %1213
  %1215 = trunc i64 %1214 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 12099, i32 noundef %1210, i32 noundef %1215) #15
  %1216 = load ptr, ptr %12, align 8, !tbaa !5
  br label %1217

1217:                                             ; preds = %1203, %1198
  %1218 = phi ptr [ %1216, %1203 ], [ %1202, %1198 ]
  %1219 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %1220 = load ptr, ptr %1219, align 8, !tbaa !131
  %1221 = ptrtoint ptr %1218 to i64
  %1222 = ptrtoint ptr %1220 to i64
  %1223 = sub i64 %1221, %1222
  %1224 = icmp slt i64 %1223, 0
  br i1 %1224, label %1225, label %1228

1225:                                             ; preds = %1217
  %1226 = lshr exact i64 %1223, 2
  %1227 = trunc i64 %1226 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %1227) #15
  br label %1240

1228:                                             ; preds = %1217
  %1229 = load ptr, ptr %26, align 8, !tbaa !105
  %1230 = ptrtoint ptr %1229 to i64
  %1231 = ptrtoint ptr %27 to i64
  %1232 = sub i64 %1230, %1231
  %1233 = trunc i64 %1232 to i32
  %1234 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %1235 = load ptr, ptr %1234, align 8, !tbaa !130
  %1236 = getelementptr inbounds %struct.regexp_internal, ptr %1235, i64 0, i32 1
  %1237 = load ptr, ptr %1236, align 8, !tbaa !17
  %1238 = lshr exact i64 %1223, 1
  %1239 = getelementptr inbounds i32, ptr %1237, i64 %1238
  store i32 %1233, ptr %1239, align 4, !tbaa !73
  br label %1240

1240:                                             ; preds = %1225, %1228, %1195
  %1241 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %2698

1242:                                             ; preds = %543
  %1243 = getelementptr inbounds i8, ptr %124, i64 2
  store ptr %1243, ptr %26, align 8, !tbaa !105
  %1244 = load i8, ptr %1243, align 1, !tbaa !17
  %1245 = icmp eq i8 %1244, 123
  br i1 %1245, label %1246, label %1249

1246:                                             ; preds = %1242
  %1247 = getelementptr inbounds i8, ptr %124, i64 3
  store ptr %1247, ptr %26, align 8, !tbaa !105
  %1248 = load i8, ptr %1247, align 1, !tbaa !17
  br label %1249

1249:                                             ; preds = %1246, %1242
  %1250 = phi i8 [ %1248, %1246 ], [ %1244, %1242 ]
  %1251 = phi ptr [ %1247, %1246 ], [ %1243, %1242 ]
  %1252 = phi i8 [ 1, %1246 ], [ 0, %1242 ]
  %1253 = icmp eq i8 %1250, 45
  br i1 %1253, label %1254, label %1256

1254:                                             ; preds = %1249
  %1255 = getelementptr inbounds i8, ptr %1251, i64 1
  store ptr %1255, ptr %26, align 8, !tbaa !105
  br label %1256

1256:                                             ; preds = %1254, %1249
  %1257 = phi ptr [ %1255, %1254 ], [ %1251, %1249 ]
  br i1 %1245, label %1258, label %1269

1258:                                             ; preds = %1256
  %1259 = load i8, ptr %1257, align 1, !tbaa !17
  %1260 = zext i8 %1259 to i64
  %1261 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1260
  %1262 = load i32, ptr %1261, align 4, !tbaa !73
  %1263 = and i32 %1262, 2
  %1264 = icmp eq i32 %1263, 0
  br i1 %1264, label %1265, label %1269

1265:                                             ; preds = %1258
  %1266 = sext i1 %1253 to i64
  %1267 = getelementptr inbounds i8, ptr %1257, i64 %1266
  %1268 = getelementptr inbounds i8, ptr %1267, i64 -2
  store ptr %1268, ptr %26, align 8, !tbaa !105
  br label %1043

1269:                                             ; preds = %1258, %1256
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #15
  %1270 = call zeroext i1 @Perl_grok_atoUV(ptr noundef nonnull %1257, ptr noundef nonnull %11, ptr noundef nonnull %10) #15
  %1271 = load i64, ptr %11, align 8
  %1272 = icmp ult i64 %1271, 2147483648
  %1273 = select i1 %1270, i1 %1272, i1 false
  %1274 = trunc i64 %1271 to i32
  %1275 = select i1 %1273, i32 %1274, i32 2147483647
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #15
  switch i32 %1275, label %1357 [
    i32 0, label %1276
    i32 2147483647, label %1301
  ]

1276:                                             ; preds = %1269
  %1277 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1278 = load ptr, ptr %1277, align 8, !tbaa !112
  %1279 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1280 = icmp eq ptr %1278, %1279
  br i1 %1280, label %1284, label %1281

1281:                                             ; preds = %1276
  %1282 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1283 = load ptr, ptr %1282, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1283, i32 noundef 11) #15
  br label %1284

1284:                                             ; preds = %1276, %1281
  %1285 = load ptr, ptr %26, align 8, !tbaa !105
  %1286 = load ptr, ptr %116, align 8, !tbaa !107
  %1287 = icmp ugt ptr %1285, %1286
  %1288 = select i1 %1287, ptr %1286, ptr %1285
  %1289 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1290 = load ptr, ptr %1289, align 8, !tbaa !65
  %1291 = ptrtoint ptr %1288 to i64
  %1292 = ptrtoint ptr %1290 to i64
  %1293 = sub i64 %1291, %1292
  %1294 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1295 = load i32, ptr %1294, align 8, !tbaa !50
  %1296 = icmp ne i32 %1295, 0
  %1297 = zext i1 %1296 to i32
  %1298 = ptrtoint ptr %1286 to i64
  %1299 = sub i64 %1298, %1291
  %1300 = getelementptr inbounds i8, ptr %1290, i64 %1293
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.498, i32 noundef %1297, i64 noundef %1293, ptr noundef %1290, i32 noundef %1297, i64 noundef %1299, ptr noundef %1300) #15
  br label %1357

1301:                                             ; preds = %1269
  %1302 = load ptr, ptr %26, align 8, !tbaa !105
  %1303 = load i8, ptr %1302, align 1, !tbaa !17
  %1304 = zext i8 %1303 to i64
  %1305 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1304
  %1306 = load i32, ptr %1305, align 4, !tbaa !73
  %1307 = and i32 %1306, 2
  %1308 = icmp eq i32 %1307, 0
  %1309 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1310 = load ptr, ptr %1309, align 8, !tbaa !112
  %1311 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1312 = icmp eq ptr %1310, %1311
  br i1 %1308, label %1335, label %1313

1313:                                             ; preds = %1301
  br i1 %1312, label %1318, label %1314

1314:                                             ; preds = %1313
  %1315 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1316 = load ptr, ptr %1315, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1316, i32 noundef 11) #15
  %1317 = load ptr, ptr %26, align 8, !tbaa !105
  br label %1318

1318:                                             ; preds = %1313, %1314
  %1319 = phi ptr [ %1302, %1313 ], [ %1317, %1314 ]
  %1320 = load ptr, ptr %116, align 8, !tbaa !107
  %1321 = icmp ugt ptr %1319, %1320
  %1322 = select i1 %1321, ptr %1320, ptr %1319
  %1323 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1324 = load ptr, ptr %1323, align 8, !tbaa !65
  %1325 = ptrtoint ptr %1322 to i64
  %1326 = ptrtoint ptr %1324 to i64
  %1327 = sub i64 %1325, %1326
  %1328 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1329 = load i32, ptr %1328, align 8, !tbaa !50
  %1330 = icmp ne i32 %1329, 0
  %1331 = zext i1 %1330 to i32
  %1332 = ptrtoint ptr %1320 to i64
  %1333 = sub i64 %1332, %1325
  %1334 = getelementptr inbounds i8, ptr %1324, i64 %1327
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.422, i32 noundef %1331, i64 noundef %1327, ptr noundef %1324, i32 noundef %1331, i64 noundef %1333, ptr noundef %1334) #15
  br label %1357

1335:                                             ; preds = %1301
  br i1 %1312, label %1340, label %1336

1336:                                             ; preds = %1335
  %1337 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1338 = load ptr, ptr %1337, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1338, i32 noundef 11) #15
  %1339 = load ptr, ptr %26, align 8, !tbaa !105
  br label %1340

1340:                                             ; preds = %1335, %1336
  %1341 = phi ptr [ %1302, %1335 ], [ %1339, %1336 ]
  %1342 = load ptr, ptr %116, align 8, !tbaa !107
  %1343 = icmp ugt ptr %1341, %1342
  %1344 = select i1 %1343, ptr %1342, ptr %1341
  %1345 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1346 = load ptr, ptr %1345, align 8, !tbaa !65
  %1347 = ptrtoint ptr %1344 to i64
  %1348 = ptrtoint ptr %1346 to i64
  %1349 = sub i64 %1347, %1348
  %1350 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1351 = load i32, ptr %1350, align 8, !tbaa !50
  %1352 = icmp ne i32 %1351, 0
  %1353 = zext i1 %1352 to i32
  %1354 = ptrtoint ptr %1342 to i64
  %1355 = sub i64 %1354, %1347
  %1356 = getelementptr inbounds i8, ptr %1346, i64 %1349
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.499, i32 noundef %1353, i64 noundef %1349, ptr noundef %1346, i32 noundef %1353, i64 noundef %1355, ptr noundef %1356) #15
  br label %1357

1357:                                             ; preds = %1269, %1340, %1318, %1284
  br i1 %1253, label %1358, label %1405

1358:                                             ; preds = %1357
  %1359 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %1360 = load i32, ptr %1359, align 8, !tbaa !109
  %1361 = sub nsw i32 %1360, %1275
  %1362 = icmp slt i32 %1361, 1
  br i1 %1362, label %1363, label %1405

1363:                                             ; preds = %1358
  %1364 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1365 = load ptr, ptr %1364, align 8, !tbaa !112
  %1366 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1367 = icmp eq ptr %1365, %1366
  br i1 %1367, label %1371, label %1368

1368:                                             ; preds = %1363
  %1369 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1370 = load ptr, ptr %1369, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1370, i32 noundef 11) #15
  br label %1371

1371:                                             ; preds = %1363, %1368
  %1372 = load ptr, ptr %26, align 8, !tbaa !105
  %1373 = load ptr, ptr %116, align 8, !tbaa !107
  %1374 = icmp ugt ptr %1372, %1373
  %1375 = select i1 %1374, ptr %1373, ptr %1372
  %1376 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1377 = load ptr, ptr %1376, align 8, !tbaa !65
  %1378 = ptrtoint ptr %1375 to i64
  %1379 = ptrtoint ptr %1377 to i64
  %1380 = sub i64 %1378, %1379
  %1381 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1382 = load i32, ptr %1381, align 8, !tbaa !50
  %1383 = icmp ne i32 %1382, 0
  %1384 = zext i1 %1383 to i32
  %1385 = ptrtoint ptr %1373 to i64
  %1386 = sub i64 %1385, %1378
  %1387 = getelementptr inbounds i8, ptr %1377, i64 %1380
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.500, i32 noundef %1384, i64 noundef %1380, ptr noundef %1377, i32 noundef %1384, i64 noundef %1386, ptr noundef %1387) #15
  br label %1405

1388:                                             ; preds = %543, %543, %543, %543, %543, %543, %543, %543, %543
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #15
  %1389 = call zeroext i1 @Perl_grok_atoUV(ptr noundef nonnull %544, ptr noundef nonnull %9, ptr noundef nonnull %8) #15
  %1390 = load i64, ptr %9, align 8
  %1391 = icmp ult i64 %1390, 2147483648
  %1392 = select i1 %1389, i1 %1391, i1 false
  %1393 = trunc i64 %1390 to i32
  %1394 = select i1 %1392, i32 %1393, i32 2147483647
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #15
  %1395 = icmp ugt i32 %1394, 9
  br i1 %1395, label %1396, label %1405

1396:                                             ; preds = %1388
  %1397 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %1398 = load i32, ptr %1397, align 8, !tbaa !109
  %1399 = icmp slt i32 %1394, %1398
  br i1 %1399, label %1405, label %1400

1400:                                             ; preds = %1396
  %1401 = load ptr, ptr %26, align 8, !tbaa !105
  %1402 = load i8, ptr %1401, align 1, !tbaa !17
  %1403 = and i8 %1402, -2
  %1404 = icmp eq i8 %1403, 56
  br i1 %1404, label %1405, label %1659

1405:                                             ; preds = %1357, %1371, %1358, %1400, %1388, %1396
  %1406 = phi i8 [ 0, %1396 ], [ 0, %1388 ], [ 0, %1400 ], [ %1252, %1358 ], [ %1252, %1371 ], [ %1252, %1357 ]
  %1407 = phi i32 [ %1394, %1396 ], [ %1393, %1388 ], [ %1394, %1400 ], [ %1361, %1358 ], [ %1361, %1371 ], [ %1275, %1357 ]
  %1408 = load ptr, ptr %26, align 8, !tbaa !105
  %1409 = getelementptr inbounds i8, ptr %1408, i64 -1
  %1410 = load i8, ptr %1408, align 1, !tbaa !17
  %1411 = zext i8 %1410 to i64
  %1412 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1411
  %1413 = load i32, ptr %1412, align 4, !tbaa !73
  %1414 = and i32 %1413, 2
  %1415 = icmp eq i32 %1414, 0
  br i1 %1415, label %1425, label %1416

1416:                                             ; preds = %1405, %1416
  %1417 = phi ptr [ %1418, %1416 ], [ %1408, %1405 ]
  %1418 = getelementptr inbounds i8, ptr %1417, i64 1
  store ptr %1418, ptr %26, align 8, !tbaa !105
  %1419 = load i8, ptr %1418, align 1, !tbaa !17
  %1420 = zext i8 %1419 to i64
  %1421 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1420
  %1422 = load i32, ptr %1421, align 4, !tbaa !73
  %1423 = and i32 %1422, 2
  %1424 = icmp eq i32 %1423, 0
  br i1 %1424, label %1425, label %1416, !llvm.loop !398

1425:                                             ; preds = %1416, %1405
  %1426 = phi ptr [ %1408, %1405 ], [ %1418, %1416 ]
  %1427 = phi i8 [ %1410, %1405 ], [ %1419, %1416 ]
  %1428 = and i8 %1406, 1
  %1429 = icmp eq i8 %1428, 0
  br i1 %1429, label %1462, label %1430

1430:                                             ; preds = %1425
  %1431 = icmp eq i8 %1427, 125
  br i1 %1431, label %1459, label %1432

1432:                                             ; preds = %1430
  %1433 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1434 = load ptr, ptr %1433, align 8, !tbaa !112
  %1435 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1436 = icmp eq ptr %1434, %1435
  br i1 %1436, label %1441, label %1437

1437:                                             ; preds = %1432
  %1438 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1439 = load ptr, ptr %1438, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1439, i32 noundef 11) #15
  %1440 = load ptr, ptr %26, align 8, !tbaa !105
  br label %1441

1441:                                             ; preds = %1432, %1437
  %1442 = phi ptr [ %1426, %1432 ], [ %1440, %1437 ]
  %1443 = load ptr, ptr %116, align 8, !tbaa !107
  %1444 = icmp ugt ptr %1442, %1443
  %1445 = select i1 %1444, ptr %1443, ptr %1442
  %1446 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1447 = load ptr, ptr %1446, align 8, !tbaa !65
  %1448 = ptrtoint ptr %1445 to i64
  %1449 = ptrtoint ptr %1447 to i64
  %1450 = sub i64 %1448, %1449
  %1451 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1452 = load i32, ptr %1451, align 8, !tbaa !50
  %1453 = icmp ne i32 %1452, 0
  %1454 = zext i1 %1453 to i32
  %1455 = ptrtoint ptr %1443 to i64
  %1456 = sub i64 %1455, %1448
  %1457 = getelementptr inbounds i8, ptr %1447, i64 %1450
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.501, i32 noundef %1454, i64 noundef %1450, ptr noundef %1447, i32 noundef %1454, i64 noundef %1456, ptr noundef %1457) #15
  %1458 = load ptr, ptr %26, align 8, !tbaa !105
  br label %1459

1459:                                             ; preds = %1441, %1430
  %1460 = phi ptr [ %1458, %1441 ], [ %1426, %1430 ]
  %1461 = getelementptr inbounds i8, ptr %1460, i64 1
  store ptr %1461, ptr %26, align 8, !tbaa !105
  br label %1462

1462:                                             ; preds = %1459, %1425
  %1463 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1464 = load ptr, ptr %1463, align 8, !tbaa !112
  %1465 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1466 = icmp eq ptr %1464, %1465
  br i1 %1466, label %1492, label %1467

1467:                                             ; preds = %1462
  %1468 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 4
  %1469 = load ptr, ptr %1468, align 8, !tbaa !129
  %1470 = getelementptr inbounds %struct.regexp, ptr %1469, i64 0, i32 12
  %1471 = load i32, ptr %1470, align 8, !tbaa !126
  %1472 = icmp sgt i32 %1407, %1471
  br i1 %1472, label %1473, label %1492

1473:                                             ; preds = %1467
  %1474 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1475 = load ptr, ptr %1474, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1475, i32 noundef 11) #15
  %1476 = load ptr, ptr %26, align 8, !tbaa !105
  %1477 = load ptr, ptr %116, align 8, !tbaa !107
  %1478 = icmp ugt ptr %1476, %1477
  %1479 = select i1 %1478, ptr %1477, ptr %1476
  %1480 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1481 = load ptr, ptr %1480, align 8, !tbaa !65
  %1482 = ptrtoint ptr %1479 to i64
  %1483 = ptrtoint ptr %1481 to i64
  %1484 = sub i64 %1482, %1483
  %1485 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1486 = load i32, ptr %1485, align 8, !tbaa !50
  %1487 = icmp ne i32 %1486, 0
  %1488 = zext i1 %1487 to i32
  %1489 = ptrtoint ptr %1477 to i64
  %1490 = sub i64 %1489, %1482
  %1491 = getelementptr inbounds i8, ptr %1481, i64 %1484
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.422, i32 noundef %1488, i64 noundef %1484, ptr noundef %1481, i32 noundef %1488, i64 noundef %1490, ptr noundef %1491) #15
  br label %1492

1492:                                             ; preds = %1467, %1473, %1462
  %1493 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 15
  store i32 1, ptr %1493, align 4, !tbaa !97
  %1494 = load i32, ptr %0, align 8, !tbaa !66
  %1495 = and i32 %1494, 4
  %1496 = icmp eq i32 %1495, 0
  br i1 %1496, label %1506, label %1497

1497:                                             ; preds = %1492
  %1498 = lshr i32 %1494, 7
  %1499 = and i32 %1498, 7
  %1500 = icmp eq i32 %1499, 4
  br i1 %1500, label %1506, label %1501

1501:                                             ; preds = %1497
  %1502 = icmp ugt i32 %1499, 1
  br i1 %1502, label %1506, label %1503

1503:                                             ; preds = %1501
  %1504 = icmp eq i32 %1499, 1
  %1505 = select i1 %1504, i8 53, i8 52
  br label %1506

1506:                                             ; preds = %1497, %1501, %1503, %1492
  %1507 = phi i8 [ 51, %1492 ], [ 55, %1497 ], [ %1505, %1503 ], [ 54, %1501 ]
  %1508 = call fastcc ptr @S_reganode(ptr noundef nonnull %0, i8 noundef zeroext %1507, i32 noundef %1407)
  store ptr %1508, ptr %12, align 8, !tbaa !5
  %1509 = load i32, ptr %1, align 4, !tbaa !73
  %1510 = or i32 %1509, 1
  store i32 %1510, ptr %1, align 4, !tbaa !73
  %1511 = load ptr, ptr %1463, align 8, !tbaa !112
  %1512 = icmp eq ptr %1511, %1465
  br i1 %1512, label %1557, label %1513

1513:                                             ; preds = %1506
  %1514 = load volatile i64, ptr %14, align 8, !tbaa !9
  %1515 = and i64 %1514, 262144
  %1516 = icmp eq i64 %1515, 0
  br i1 %1516, label %1532, label %1517

1517:                                             ; preds = %1513
  %1518 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %1519 = load ptr, ptr %1518, align 8, !tbaa !131
  %1520 = ptrtoint ptr %1508 to i64
  %1521 = ptrtoint ptr %1519 to i64
  %1522 = sub i64 %1520, %1521
  %1523 = lshr exact i64 %1522, 2
  %1524 = trunc i64 %1523 to i32
  %1525 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %1526 = load ptr, ptr %1525, align 8, !tbaa !106
  %1527 = ptrtoint ptr %1408 to i64
  %1528 = ptrtoint ptr %1526 to i64
  %1529 = sub i64 %1527, %1528
  %1530 = trunc i64 %1529 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.333, i32 noundef 12209, i32 noundef %1524, i32 noundef %1530) #15
  %1531 = load ptr, ptr %12, align 8, !tbaa !5
  br label %1532

1532:                                             ; preds = %1517, %1513
  %1533 = phi ptr [ %1531, %1517 ], [ %1508, %1513 ]
  %1534 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %1535 = load ptr, ptr %1534, align 8, !tbaa !131
  %1536 = ptrtoint ptr %1533 to i64
  %1537 = ptrtoint ptr %1535 to i64
  %1538 = sub i64 %1536, %1537
  %1539 = icmp slt i64 %1538, 0
  br i1 %1539, label %1540, label %1543

1540:                                             ; preds = %1532
  %1541 = lshr exact i64 %1538, 2
  %1542 = trunc i64 %1541 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.334, i32 noundef %1542) #15
  br label %1557

1543:                                             ; preds = %1532
  %1544 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %1545 = load ptr, ptr %1544, align 8, !tbaa !106
  %1546 = ptrtoint ptr %1408 to i64
  %1547 = ptrtoint ptr %1545 to i64
  %1548 = sub i64 %1546, %1547
  %1549 = trunc i64 %1548 to i32
  %1550 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %1551 = load ptr, ptr %1550, align 8, !tbaa !130
  %1552 = getelementptr inbounds %struct.regexp_internal, ptr %1551, i64 0, i32 1
  %1553 = load ptr, ptr %1552, align 8, !tbaa !17
  %1554 = lshr exact i64 %1538, 1
  %1555 = add nsw i64 %1554, -1
  %1556 = getelementptr inbounds i32, ptr %1553, i64 %1555
  store i32 %1549, ptr %1556, align 4, !tbaa !73
  br label %1557

1557:                                             ; preds = %1506, %1543, %1540
  %1558 = load ptr, ptr %1463, align 8, !tbaa !112
  %1559 = icmp eq ptr %1558, %1465
  br i1 %1559, label %1602, label %1560

1560:                                             ; preds = %1557
  %1561 = load volatile i64, ptr %14, align 8, !tbaa !9
  %1562 = and i64 %1561, 262144
  %1563 = icmp eq i64 %1562, 0
  %1564 = load ptr, ptr %12, align 8, !tbaa !5
  br i1 %1563, label %1579, label %1565

1565:                                             ; preds = %1560
  %1566 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %1567 = load ptr, ptr %1566, align 8, !tbaa !131
  %1568 = ptrtoint ptr %1564 to i64
  %1569 = ptrtoint ptr %1567 to i64
  %1570 = sub i64 %1568, %1569
  %1571 = lshr exact i64 %1570, 2
  %1572 = trunc i64 %1571 to i32
  %1573 = load ptr, ptr %26, align 8, !tbaa !105
  %1574 = ptrtoint ptr %1573 to i64
  %1575 = ptrtoint ptr %1409 to i64
  %1576 = sub i64 %1574, %1575
  %1577 = trunc i64 %1576 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 12210, i32 noundef %1572, i32 noundef %1577) #15
  %1578 = load ptr, ptr %12, align 8, !tbaa !5
  br label %1579

1579:                                             ; preds = %1565, %1560
  %1580 = phi ptr [ %1578, %1565 ], [ %1564, %1560 ]
  %1581 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %1582 = load ptr, ptr %1581, align 8, !tbaa !131
  %1583 = ptrtoint ptr %1580 to i64
  %1584 = ptrtoint ptr %1582 to i64
  %1585 = sub i64 %1583, %1584
  %1586 = icmp slt i64 %1585, 0
  br i1 %1586, label %1587, label %1590

1587:                                             ; preds = %1579
  %1588 = lshr exact i64 %1585, 2
  %1589 = trunc i64 %1588 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %1589) #15
  br label %1602

1590:                                             ; preds = %1579
  %1591 = load ptr, ptr %26, align 8, !tbaa !105
  %1592 = ptrtoint ptr %1591 to i64
  %1593 = ptrtoint ptr %1409 to i64
  %1594 = sub i64 %1592, %1593
  %1595 = trunc i64 %1594 to i32
  %1596 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %1597 = load ptr, ptr %1596, align 8, !tbaa !130
  %1598 = getelementptr inbounds %struct.regexp_internal, ptr %1597, i64 0, i32 1
  %1599 = load ptr, ptr %1598, align 8, !tbaa !17
  %1600 = lshr exact i64 %1585, 1
  %1601 = getelementptr inbounds i32, ptr %1599, i64 %1600
  store i32 %1595, ptr %1601, align 4, !tbaa !73
  br label %1602

1602:                                             ; preds = %1557, %1590, %1587
  %1603 = load ptr, ptr %26, align 8, !tbaa !105
  %1604 = getelementptr inbounds i8, ptr %1603, i64 -1
  store ptr %1604, ptr %26, align 8, !tbaa !105
  %1605 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %2698

1606:                                             ; preds = %543
  %1607 = load ptr, ptr %116, align 8, !tbaa !107
  %1608 = icmp ult ptr %544, %1607
  br i1 %1608, label %1632, label %1609

1609:                                             ; preds = %1606
  %1610 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1611 = load ptr, ptr %1610, align 8, !tbaa !65
  %1612 = ptrtoint ptr %1607 to i64
  %1613 = ptrtoint ptr %1611 to i64
  %1614 = sub i64 %1612, %1613
  %1615 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1616 = load ptr, ptr %1615, align 8, !tbaa !112
  %1617 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1618 = icmp eq ptr %1616, %1617
  br i1 %1618, label %1623, label %1619

1619:                                             ; preds = %1609
  %1620 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1621 = load ptr, ptr %1620, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1621, i32 noundef 11) #15
  %1622 = load ptr, ptr %1610, align 8, !tbaa !65
  br label %1623

1623:                                             ; preds = %1619, %1609
  %1624 = phi ptr [ %1622, %1619 ], [ %1611, %1609 ]
  %1625 = icmp sgt i64 %1614, 127
  %1626 = select i1 %1625, ptr @.str.20, ptr @.str.8
  %1627 = select i1 %1625, i64 117, i64 %1614
  %1628 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1629 = load i32, ptr %1628, align 8, !tbaa !50
  %1630 = icmp ne i32 %1629, 0
  %1631 = zext i1 %1630 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.502, i32 noundef %1631, i64 noundef %1627, ptr noundef %1624, ptr noundef nonnull %1626) #15
  br label %1632

1632:                                             ; preds = %543, %1606, %1623
  %1633 = getelementptr inbounds i8, ptr %27, i64 -1
  br label %1659

1634:                                             ; preds = %123
  %1635 = load i32, ptr %0, align 8, !tbaa !66
  %1636 = and i32 %1635, 8
  %1637 = icmp eq i32 %1636, 0
  br i1 %1637, label %1655, label %1638

1638:                                             ; preds = %1634
  %1639 = load ptr, ptr %116, align 8, !tbaa !107
  br label %1640

1640:                                             ; preds = %1643, %1638
  %1641 = phi ptr [ %124, %1638 ], [ %1644, %1643 ]
  %1642 = icmp ult ptr %1641, %1639
  br i1 %1642, label %1643, label %1649

1643:                                             ; preds = %1640
  %1644 = getelementptr inbounds i8, ptr %1641, i64 1
  %1645 = load i8, ptr %1644, align 1, !tbaa !17
  %1646 = icmp eq i8 %1645, 10
  br i1 %1646, label %1647, label %1640, !llvm.loop !397

1647:                                             ; preds = %1643
  %1648 = getelementptr inbounds i8, ptr %1641, i64 2
  br label %1652

1649:                                             ; preds = %1640
  %1650 = load i32, ptr %117, align 8, !tbaa !98
  %1651 = or i32 %1650, 512
  store i32 %1651, ptr %117, align 8, !tbaa !98
  br label %1652

1652:                                             ; preds = %1647, %1649
  %1653 = phi ptr [ %1648, %1647 ], [ %1641, %1649 ]
  store ptr %1653, ptr %26, align 8, !tbaa !105
  %1654 = icmp ult ptr %1653, %1639
  br i1 %1654, label %123, label %1655

1655:                                             ; preds = %1634, %1652, %123
  %1656 = phi ptr [ %124, %1634 ], [ %1653, %1652 ], [ %124, %123 ]
  %1657 = getelementptr inbounds i8, ptr %1656, i64 -1
  %1658 = getelementptr inbounds i8, ptr %1656, i64 1
  store ptr %1658, ptr %26, align 8, !tbaa !105
  br label %1659

1659:                                             ; preds = %1040, %1632, %1655, %1400
  %1660 = phi ptr [ %1657, %1655 ], [ %1633, %1632 ], [ %27, %1040 ], [ %27, %1400 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %15) #15
  store i64 0, ptr %15, align 8, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %16) #15
  call void @llvm.lifetime.start.p0(i64 140, ptr nonnull %17) #15
  %1661 = load i32, ptr %0, align 8, !tbaa !66
  %1662 = and i32 %1661, 4
  %1663 = icmp eq i32 %1662, 0
  br i1 %1663, label %1664, label %1668

1664:                                             ; preds = %1659
  %1665 = and i32 %1661, 896
  %1666 = icmp eq i32 %1665, 128
  %1667 = select i1 %1666, i8 32, i8 31
  br label %1676

1668:                                             ; preds = %1659
  %1669 = lshr i32 %1661, 7
  %1670 = and i32 %1669, 7
  %1671 = icmp ugt i32 %1670, 2
  %1672 = add nuw nsw i32 %1670, 255
  %1673 = select i1 %1671, i32 %1672, i32 %1670
  %1674 = trunc i32 %1673 to i8
  %1675 = add i8 %1674, 33
  br label %1676

1676:                                             ; preds = %1668, %1664
  %1677 = phi i8 [ %1675, %1668 ], [ %1667, %1664 ]
  %1678 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %1679 = load ptr, ptr %1678, align 8, !tbaa !112
  %1680 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %1681 = icmp ne ptr %1679, %1680
  %1682 = add i8 %1677, -33
  %1683 = icmp ult i8 %1682, 2
  %1684 = and i1 %1681, %1683
  %1685 = zext i1 %1684 to i8
  %1686 = zext i8 %1677 to i64
  %1687 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %1686
  %1688 = load i8, ptr %1687, align 1, !tbaa !17
  %1689 = zext i8 %1688 to i64
  %1690 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext %1677, i64 noundef %1689, ptr noundef nonnull @.str.460)
  %1691 = icmp eq i8 %1688, 0
  br i1 %1691, label %1693, label %1692

1692:                                             ; preds = %1676
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.461, i32 noundef 16359) #15
  br label %1693

1693:                                             ; preds = %1692, %1676
  %1694 = load ptr, ptr %1678, align 8, !tbaa !112
  %1695 = icmp eq ptr %1694, %1680
  br i1 %1695, label %1696, label %1697

1696:                                             ; preds = %1693
  store ptr %1690, ptr %12, align 8, !tbaa !5
  br label %1702

1697:                                             ; preds = %1693
  %1698 = getelementptr inbounds %struct.regnode, ptr %1690, i64 0, i32 1
  store i8 %1677, ptr %1698, align 1, !tbaa !141
  %1699 = getelementptr inbounds %struct.regnode, ptr %1690, i64 0, i32 2
  store i16 0, ptr %1699, align 2, !tbaa !222
  %1700 = getelementptr inbounds %struct.regnode, ptr %1690, i64 1
  store ptr %1700, ptr %1678, align 8, !tbaa !112
  store ptr %1690, ptr %12, align 8, !tbaa !5
  %1701 = icmp eq ptr %1700, %1680
  br i1 %1701, label %1702, label %1706

1702:                                             ; preds = %1696, %1697
  %1703 = load i32, ptr %0, align 8, !tbaa !66
  %1704 = and i32 %1703, 4
  %1705 = icmp eq i32 %1704, 0
  br i1 %1705, label %1706, label %1708

1706:                                             ; preds = %1702, %1697
  %1707 = getelementptr inbounds %struct.regnode_string, ptr %1690, i64 0, i32 3
  br label %1708

1708:                                             ; preds = %1702, %1706
  %1709 = phi ptr [ %1707, %1706 ], [ %17, %1702 ]
  %1710 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 6
  %1711 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1712 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %1713 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1714 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 18
  %1715 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 45
  %1716 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 36
  %1717 = icmp eq i8 %1677, 35
  %1718 = ptrtoint ptr %1709 to i64
  br label %1719

1719:                                             ; preds = %2582, %1708
  %1720 = phi i8 [ 127, %1708 ], [ %2586, %2582 ]
  %1721 = phi ptr [ null, %1708 ], [ %2449, %2582 ]
  %1722 = phi i8 [ %1685, %1708 ], [ %2450, %2582 ]
  %1723 = load i32, ptr %0, align 8, !tbaa !66
  %1724 = and i32 %1723, 4
  %1725 = icmp eq i32 %1724, 0
  br i1 %1725, label %1729, label %1726

1726:                                             ; preds = %1719
  %1727 = load ptr, ptr %1678, align 8, !tbaa !112
  %1728 = icmp ne ptr %1727, %1680
  br label %1729

1729:                                             ; preds = %1719, %1726
  %1730 = phi i1 [ %1728, %1726 ], [ false, %1719 ]
  %1731 = zext i1 %1730 to i8
  %1732 = load ptr, ptr %26, align 8, !tbaa !105
  %1733 = getelementptr inbounds i8, ptr %1732, i64 -1
  store ptr %1733, ptr %16, align 8, !tbaa !5
  %1734 = zext i8 %1720 to i64
  %1735 = icmp eq i8 %1720, 0
  br i1 %1735, label %2445, label %1736

1736:                                             ; preds = %1729
  %1737 = load ptr, ptr %16, align 8, !tbaa !5
  %1738 = load ptr, ptr %116, align 8, !tbaa !107
  %1739 = icmp ult ptr %1737, %1738
  %1740 = load i32, ptr %0, align 8, !tbaa !66
  br i1 %1739, label %1746, label %2437

1741:                                             ; preds = %2433
  %1742 = load ptr, ptr %16, align 8, !tbaa !5
  %1743 = load ptr, ptr %116, align 8, !tbaa !107
  %1744 = icmp ult ptr %1742, %1743
  %1745 = load i32, ptr %0, align 8, !tbaa !66
  br i1 %1744, label %1746, label %2437, !llvm.loop !399

1746:                                             ; preds = %1736, %1741
  %1747 = phi i32 [ %1745, %1741 ], [ %1740, %1736 ]
  %1748 = phi ptr [ %1742, %1741 ], [ %1737, %1736 ]
  %1749 = phi i64 [ %2432, %1741 ], [ 0, %1736 ]
  %1750 = phi ptr [ %2429, %1741 ], [ %1709, %1736 ]
  %1751 = phi i8 [ %2430, %1741 ], [ %1722, %1736 ]
  %1752 = phi i8 [ %2431, %1741 ], [ %1731, %1736 ]
  %1753 = and i32 %1747, 8
  %1754 = icmp eq i32 %1753, 0
  br i1 %1754, label %1757, label %1755

1755:                                             ; preds = %1746
  %1756 = call fastcc ptr @S_regpatws(ptr noundef nonnull %0, ptr noundef %1748, i1 noundef zeroext true)
  store ptr %1756, ptr %16, align 8, !tbaa !5
  br label %1757

1757:                                             ; preds = %1755, %1746
  %1758 = phi ptr [ %1756, %1755 ], [ %1748, %1746 ]
  %1759 = load i8, ptr %1758, align 1, !tbaa !17
  switch i8 %1759, label %2152 [
    i8 94, label %2588
    i8 36, label %2588
    i8 46, label %2588
    i8 91, label %2588
    i8 40, label %2588
    i8 41, label %2588
    i8 124, label %2588
    i8 92, label %1760
    i8 123, label %2120
  ]

1760:                                             ; preds = %1757
  %1761 = getelementptr inbounds i8, ptr %1758, i64 1
  store ptr %1761, ptr %16, align 8, !tbaa !5
  %1762 = load i8, ptr %1761, align 1, !tbaa !17
  switch i8 %1762, label %2086 [
    i8 65, label %1763
    i8 98, label %1763
    i8 66, label %1763
    i8 67, label %1763
    i8 100, label %1763
    i8 68, label %1763
    i8 103, label %1763
    i8 71, label %1763
    i8 104, label %1763
    i8 72, label %1763
    i8 107, label %1763
    i8 75, label %1763
    i8 112, label %1763
    i8 80, label %1763
    i8 82, label %1763
    i8 115, label %1763
    i8 83, label %1763
    i8 118, label %1763
    i8 86, label %1763
    i8 119, label %1763
    i8 87, label %1763
    i8 88, label %1763
    i8 122, label %1763
    i8 90, label %1763
    i8 110, label %1764
    i8 78, label %1766
    i8 114, label %1801
    i8 116, label %1803
    i8 102, label %1805
    i8 101, label %1807
    i8 97, label %1809
    i8 111, label %1811
    i8 120, label %1866
    i8 99, label %1915
    i8 56, label %1923
    i8 57, label %1923
    i8 49, label %1924
    i8 50, label %1924
    i8 51, label %1924
    i8 52, label %1924
    i8 53, label %1924
    i8 54, label %1924
    i8 55, label %1924
    i8 48, label %1942
    i8 0, label %2065
  ]

1763:                                             ; preds = %1760, %1760, %1760, %1760, %1760, %1760, %1760, %1760, %1760, %1760, %1760, %1760, %1760, %1760, %1760, %1760, %1760, %1760, %1760, %1760, %1760, %1760, %1760, %1760
  store ptr %1758, ptr %16, align 8, !tbaa !5
  br label %2588

1764:                                             ; preds = %1760
  store i64 10, ptr %15, align 8, !tbaa !9
  %1765 = getelementptr inbounds i8, ptr %1758, i64 2
  store ptr %1765, ptr %16, align 8, !tbaa !5
  br label %2175

1766:                                             ; preds = %1760
  %1767 = getelementptr inbounds i8, ptr %1758, i64 2
  store ptr %1767, ptr %26, align 8, !tbaa !105
  %1768 = call fastcc zeroext i1 @S_grok_bslash_N(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull %15, ptr noundef null, ptr noundef nonnull %1, i32 noundef %2)
  br i1 %1768, label %1793, label %1769

1769:                                             ; preds = %1766
  %1770 = load i32, ptr %1, align 4, !tbaa !73
  %1771 = and i32 %1770, 32
  %1772 = icmp eq i32 %1771, 0
  br i1 %1772, label %1792, label %1773

1773:                                             ; preds = %1769
  %1774 = load ptr, ptr %116, align 8, !tbaa !107
  %1775 = load ptr, ptr %1711, align 8, !tbaa !65
  %1776 = ptrtoint ptr %1774 to i64
  %1777 = ptrtoint ptr %1775 to i64
  %1778 = sub i64 %1776, %1777
  %1779 = load ptr, ptr %1678, align 8, !tbaa !112
  %1780 = icmp eq ptr %1779, %1680
  br i1 %1780, label %1784, label %1781

1781:                                             ; preds = %1773
  %1782 = load ptr, ptr %1713, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1782, i32 noundef 11) #15
  %1783 = load ptr, ptr %1711, align 8, !tbaa !65
  br label %1784

1784:                                             ; preds = %1781, %1773
  %1785 = phi ptr [ %1783, %1781 ], [ %1775, %1773 ]
  %1786 = icmp sgt i64 %1778, 127
  %1787 = select i1 %1786, ptr @.str.20, ptr @.str.8
  %1788 = select i1 %1786, i64 117, i64 %1778
  %1789 = load i32, ptr %1712, align 8, !tbaa !50
  %1790 = icmp ne i32 %1789, 0
  %1791 = zext i1 %1790 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.503, i32 noundef %1791, i64 noundef %1788, ptr noundef %1785, ptr noundef nonnull %1787) #15
  br label %1792

1792:                                             ; preds = %1784, %1769
  store ptr %1748, ptr %16, align 8, !tbaa !5
  store ptr %1748, ptr %26, align 8, !tbaa !105
  br label %2588

1793:                                             ; preds = %1766
  %1794 = load ptr, ptr %26, align 8, !tbaa !105
  store ptr %1794, ptr %16, align 8, !tbaa !5
  %1795 = load i64, ptr %15, align 8, !tbaa !9
  %1796 = icmp ugt i64 %1795, 255
  br i1 %1796, label %1797, label %2175

1797:                                             ; preds = %1793
  %1798 = load i32, ptr %1712, align 8, !tbaa !50
  %1799 = icmp eq i32 %1798, 0
  br i1 %1799, label %1800, label %2175

1800:                                             ; preds = %1797
  store i32 32, ptr %1, align 4, !tbaa !73
  br label %2696

1801:                                             ; preds = %1760
  store i64 13, ptr %15, align 8, !tbaa !9
  %1802 = getelementptr inbounds i8, ptr %1758, i64 2
  store ptr %1802, ptr %16, align 8, !tbaa !5
  br label %2175

1803:                                             ; preds = %1760
  store i64 9, ptr %15, align 8, !tbaa !9
  %1804 = getelementptr inbounds i8, ptr %1758, i64 2
  store ptr %1804, ptr %16, align 8, !tbaa !5
  br label %2175

1805:                                             ; preds = %1760
  store i64 12, ptr %15, align 8, !tbaa !9
  %1806 = getelementptr inbounds i8, ptr %1758, i64 2
  store ptr %1806, ptr %16, align 8, !tbaa !5
  br label %2175

1807:                                             ; preds = %1760
  store i64 27, ptr %15, align 8, !tbaa !9
  %1808 = getelementptr inbounds i8, ptr %1758, i64 2
  store ptr %1808, ptr %16, align 8, !tbaa !5
  br label %2175

1809:                                             ; preds = %1760
  store i64 7, ptr %15, align 8, !tbaa !9
  %1810 = getelementptr inbounds i8, ptr %1758, i64 2
  store ptr %1810, ptr %16, align 8, !tbaa !5
  br label %2175

1811:                                             ; preds = %1760
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %18) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %19) #15
  %1812 = load ptr, ptr %1678, align 8, !tbaa !112
  %1813 = icmp ne ptr %1812, %1680
  %1814 = load i32, ptr %1715, align 4, !tbaa !54
  %1815 = icmp ne i32 %1814, 0
  %1816 = load i32, ptr %1712, align 8, !tbaa !50
  %1817 = icmp ne i32 %1816, 0
  %1818 = call fastcc zeroext i1 @S_grok_bslash_o(ptr noundef nonnull %16, ptr noundef nonnull %18, ptr noundef nonnull %19, i1 noundef zeroext %1813, i1 noundef zeroext %1815, i1 noundef zeroext true, i1 noundef zeroext %1817)
  br i1 %1818, label %1842, label %1819

1819:                                             ; preds = %1811
  %1820 = load ptr, ptr %16, align 8, !tbaa !5
  store ptr %1820, ptr %26, align 8, !tbaa !105
  %1821 = load ptr, ptr %1678, align 8, !tbaa !112
  %1822 = icmp eq ptr %1821, %1680
  br i1 %1822, label %1826, label %1823

1823:                                             ; preds = %1819
  %1824 = load ptr, ptr %1713, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1824, i32 noundef 11) #15
  %1825 = load ptr, ptr %26, align 8, !tbaa !105
  br label %1826

1826:                                             ; preds = %1819, %1823
  %1827 = phi ptr [ %1820, %1819 ], [ %1825, %1823 ]
  %1828 = load ptr, ptr %116, align 8, !tbaa !107
  %1829 = icmp ugt ptr %1827, %1828
  %1830 = select i1 %1829, ptr %1828, ptr %1827
  %1831 = load ptr, ptr %1711, align 8, !tbaa !65
  %1832 = ptrtoint ptr %1830 to i64
  %1833 = ptrtoint ptr %1831 to i64
  %1834 = sub i64 %1832, %1833
  %1835 = load ptr, ptr %19, align 8, !tbaa !5
  %1836 = load i32, ptr %1712, align 8, !tbaa !50
  %1837 = icmp ne i32 %1836, 0
  %1838 = zext i1 %1837 to i32
  %1839 = ptrtoint ptr %1828 to i64
  %1840 = sub i64 %1839, %1832
  %1841 = getelementptr inbounds i8, ptr %1831, i64 %1834
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef %1835, i32 noundef %1838, i64 noundef %1834, ptr noundef %1831, i32 noundef %1838, i64 noundef %1840, ptr noundef %1841) #15
  br label %1842

1842:                                             ; preds = %1826, %1811
  %1843 = load i64, ptr %18, align 8, !tbaa !9
  store i64 %1843, ptr %15, align 8, !tbaa !9
  %1844 = load ptr, ptr @PL_encoding, align 8, !tbaa !5
  %1845 = icmp eq ptr %1844, null
  br i1 %1845, label %1846, label %1855

1846:                                             ; preds = %1842
  %1847 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !5
  %1848 = icmp eq ptr %1847, null
  br i1 %1848, label %1857, label %1849

1849:                                             ; preds = %1846
  %1850 = call ptr @Perl__get_encoding() #15
  %1851 = icmp ne ptr %1850, null
  %1852 = load i64, ptr %15, align 8
  %1853 = icmp ult i64 %1852, 256
  %1854 = select i1 %1851, i1 %1853, i1 false
  br i1 %1854, label %1864, label %1857

1855:                                             ; preds = %1842
  %1856 = icmp ult i64 %1843, 256
  br i1 %1856, label %1864, label %1860

1857:                                             ; preds = %1846, %1849
  %1858 = phi i64 [ %1852, %1849 ], [ %1843, %1846 ]
  %1859 = icmp ugt i64 %1858, 255
  br i1 %1859, label %1860, label %1863

1860:                                             ; preds = %1855, %1857
  %1861 = load i32, ptr %1712, align 8, !tbaa !50
  %1862 = icmp eq i32 %1861, 0
  br i1 %1862, label %1865, label %1863

1863:                                             ; preds = %1860, %1857
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %19) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %18) #15
  br label %2175

1864:                                             ; preds = %1849, %1855
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %19) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %18) #15
  br label %2005

1865:                                             ; preds = %1860
  store i32 32, ptr %1, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %19) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %18) #15
  br label %2696

1866:                                             ; preds = %1760
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %20) #15
  store i64 -1, ptr %20, align 8, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %21) #15
  %1867 = load ptr, ptr %1678, align 8, !tbaa !112
  %1868 = icmp ne ptr %1867, %1680
  %1869 = load i32, ptr %1715, align 4, !tbaa !54
  %1870 = icmp ne i32 %1869, 0
  %1871 = load i32, ptr %1712, align 8, !tbaa !50
  %1872 = icmp ne i32 %1871, 0
  %1873 = call fastcc zeroext i1 @S_grok_bslash_x(ptr noundef nonnull %16, ptr noundef nonnull %20, ptr noundef nonnull %21, i1 noundef zeroext %1868, i1 noundef zeroext %1870, i1 noundef zeroext true, i1 noundef zeroext %1872)
  br i1 %1873, label %1897, label %1874

1874:                                             ; preds = %1866
  %1875 = load ptr, ptr %16, align 8, !tbaa !5
  store ptr %1875, ptr %26, align 8, !tbaa !105
  %1876 = load ptr, ptr %1678, align 8, !tbaa !112
  %1877 = icmp eq ptr %1876, %1680
  br i1 %1877, label %1881, label %1878

1878:                                             ; preds = %1874
  %1879 = load ptr, ptr %1713, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1879, i32 noundef 11) #15
  %1880 = load ptr, ptr %26, align 8, !tbaa !105
  br label %1881

1881:                                             ; preds = %1874, %1878
  %1882 = phi ptr [ %1875, %1874 ], [ %1880, %1878 ]
  %1883 = load ptr, ptr %116, align 8, !tbaa !107
  %1884 = icmp ugt ptr %1882, %1883
  %1885 = select i1 %1884, ptr %1883, ptr %1882
  %1886 = load ptr, ptr %1711, align 8, !tbaa !65
  %1887 = ptrtoint ptr %1885 to i64
  %1888 = ptrtoint ptr %1886 to i64
  %1889 = sub i64 %1887, %1888
  %1890 = load ptr, ptr %21, align 8, !tbaa !5
  %1891 = load i32, ptr %1712, align 8, !tbaa !50
  %1892 = icmp ne i32 %1891, 0
  %1893 = zext i1 %1892 to i32
  %1894 = ptrtoint ptr %1883 to i64
  %1895 = sub i64 %1894, %1887
  %1896 = getelementptr inbounds i8, ptr %1886, i64 %1889
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef %1890, i32 noundef %1893, i64 noundef %1889, ptr noundef %1886, i32 noundef %1893, i64 noundef %1895, ptr noundef %1896) #15
  br label %1897

1897:                                             ; preds = %1881, %1866
  %1898 = load i64, ptr %20, align 8, !tbaa !9
  store i64 %1898, ptr %15, align 8, !tbaa !9
  %1899 = icmp ult i64 %1898, 256
  br i1 %1899, label %1900, label %1909

1900:                                             ; preds = %1897
  %1901 = load ptr, ptr @PL_encoding, align 8, !tbaa !5
  %1902 = icmp eq ptr %1901, null
  br i1 %1902, label %1903, label %1913

1903:                                             ; preds = %1900
  %1904 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !5
  %1905 = icmp eq ptr %1904, null
  br i1 %1905, label %1914, label %1906

1906:                                             ; preds = %1903
  %1907 = call ptr @Perl__get_encoding() #15
  %1908 = icmp eq ptr %1907, null
  br i1 %1908, label %1914, label %1913

1909:                                             ; preds = %1897
  %1910 = load i32, ptr %1712, align 8, !tbaa !50
  %1911 = icmp eq i32 %1910, 0
  br i1 %1911, label %1912, label %1914

1912:                                             ; preds = %1909
  store i32 32, ptr %1, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %21) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %20) #15
  br label %2696

1913:                                             ; preds = %1900, %1906
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %21) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %20) #15
  br label %2005

1914:                                             ; preds = %1903, %1906, %1909
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %21) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %20) #15
  br label %2175

1915:                                             ; preds = %1760
  %1916 = getelementptr inbounds i8, ptr %1758, i64 2
  %1917 = getelementptr inbounds i8, ptr %1758, i64 3
  store ptr %1917, ptr %16, align 8, !tbaa !5
  %1918 = load i8, ptr %1916, align 1, !tbaa !17
  %1919 = load ptr, ptr %1678, align 8, !tbaa !112
  %1920 = icmp ne ptr %1919, %1680
  %1921 = call fastcc signext i8 @S_grok_bslash_c(i8 noundef signext %1918, i1 noundef zeroext %1920)
  %1922 = sext i8 %1921 to i64
  store i64 %1922, ptr %15, align 8, !tbaa !9
  br label %2175

1923:                                             ; preds = %1760, %1760
  store ptr %1758, ptr %16, align 8, !tbaa !5
  br label %2588

1924:                                             ; preds = %1760, %1760, %1760, %1760, %1760, %1760, %1760
  %1925 = getelementptr inbounds i8, ptr %1758, i64 2
  %1926 = load i8, ptr %1925, align 1, !tbaa !17
  %1927 = zext i8 %1926 to i64
  %1928 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1927
  %1929 = load i32, ptr %1928, align 4, !tbaa !73
  %1930 = and i32 %1929, 2
  %1931 = icmp eq i32 %1930, 0
  br i1 %1931, label %1941, label %1932

1932:                                             ; preds = %1924
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #15
  %1933 = call zeroext i1 @Perl_grok_atoUV(ptr noundef nonnull %1761, ptr noundef nonnull %7, ptr noundef nonnull %6) #15
  %1934 = load i64, ptr %7, align 8
  %1935 = icmp ult i64 %1934, 2147483648
  %1936 = select i1 %1933, i1 %1935, i1 false
  %1937 = trunc i64 %1934 to i32
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #15
  %1938 = load i32, ptr %1714, align 8, !tbaa !109
  %1939 = icmp sgt i32 %1938, %1937
  %1940 = select i1 %1936, i1 %1939, i1 false
  br i1 %1940, label %1941, label %1942

1941:                                             ; preds = %1924, %1932
  store ptr %1758, ptr %16, align 8, !tbaa !5
  br label %2588

1942:                                             ; preds = %1932, %1760
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %22) #15
  store i32 4, ptr %22, align 4, !tbaa !73
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %23) #15
  store i64 3, ptr %23, align 8, !tbaa !9
  %1943 = call i64 @Perl_grok_oct(ptr noundef nonnull %1761, ptr noundef nonnull %23, ptr noundef nonnull %22, ptr noundef null) #15
  store i64 %1943, ptr %15, align 8, !tbaa !9
  %1944 = icmp ugt i64 %1943, 255
  br i1 %1944, label %1945, label %1949

1945:                                             ; preds = %1942
  %1946 = load i32, ptr %1712, align 8, !tbaa !50
  %1947 = icmp eq i32 %1946, 0
  br i1 %1947, label %1948, label %1949

1948:                                             ; preds = %1945
  store i32 32, ptr %1, align 4, !tbaa !73
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %23) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %22) #15
  br label %2696

1949:                                             ; preds = %1945, %1942
  %1950 = load i64, ptr %23, align 8
  %1951 = getelementptr inbounds i8, ptr %1761, i64 %1950
  store ptr %1951, ptr %16, align 8, !tbaa !5
  %1952 = load ptr, ptr %1678, align 8, !tbaa !112
  %1953 = icmp ne ptr %1952, %1680
  %1954 = icmp ult i64 %1950, 3
  %1955 = select i1 %1953, i1 %1954, i1 false
  br i1 %1955, label %1956, label %1990

1956:                                             ; preds = %1949
  %1957 = load ptr, ptr %116, align 8, !tbaa !107
  %1958 = icmp ult ptr %1951, %1957
  br i1 %1958, label %1959, label %1990

1959:                                             ; preds = %1956
  %1960 = load i8, ptr %1951, align 1, !tbaa !17
  %1961 = zext i8 %1960 to i64
  %1962 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1961
  %1963 = load i32, ptr %1962, align 4, !tbaa !73
  %1964 = and i32 %1963, 2
  %1965 = icmp eq i32 %1964, 0
  br i1 %1965, label %1990, label %1966

1966:                                             ; preds = %1959
  %1967 = call zeroext i1 @Perl_ckwarn(i32 noundef 20) #15
  br i1 %1967, label %1968, label %1990

1968:                                             ; preds = %1966
  %1969 = getelementptr inbounds i8, ptr %1951, i64 1
  %1970 = load ptr, ptr %1711, align 8, !tbaa !65
  %1971 = ptrtoint ptr %1969 to i64
  %1972 = ptrtoint ptr %1970 to i64
  %1973 = sub i64 %1971, %1972
  %1974 = load ptr, ptr %1678, align 8, !tbaa !112
  %1975 = icmp eq ptr %1974, %1680
  br i1 %1975, label %1976, label %1977

1976:                                             ; preds = %1968
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.371, i32 noundef 12528) #15
  br label %1977

1977:                                             ; preds = %1968, %1976
  %1978 = load i64, ptr %23, align 8, !tbaa !9
  %1979 = call fastcc ptr @S_form_short_octal_warning(ptr noundef nonnull %1951, i64 noundef %1978)
  %1980 = load i32, ptr %1712, align 8, !tbaa !50
  %1981 = icmp ne i32 %1980, 0
  %1982 = zext i1 %1981 to i32
  %1983 = load ptr, ptr %1711, align 8, !tbaa !65
  %1984 = load ptr, ptr %116, align 8, !tbaa !107
  %1985 = ptrtoint ptr %1984 to i64
  %1986 = ptrtoint ptr %1983 to i64
  %1987 = add i64 %1973, %1986
  %1988 = sub i64 %1985, %1987
  %1989 = getelementptr inbounds i8, ptr %1983, i64 %1973
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.391, ptr noundef %1979, i32 noundef %1982, i64 noundef %1973, ptr noundef %1983, i32 noundef %1982, i64 noundef %1988, ptr noundef %1989) #15
  br label %1990

1990:                                             ; preds = %1949, %1956, %1966, %1977, %1959
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %23) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %22) #15
  %1991 = load ptr, ptr @PL_encoding, align 8, !tbaa !5
  %1992 = icmp eq ptr %1991, null
  br i1 %1992, label %1993, label %2002

1993:                                             ; preds = %1990
  %1994 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !5
  %1995 = icmp eq ptr %1994, null
  br i1 %1995, label %2175, label %1996

1996:                                             ; preds = %1993
  %1997 = call ptr @Perl__get_encoding() #15
  %1998 = icmp ne ptr %1997, null
  %1999 = load i64, ptr %15, align 8
  %2000 = icmp ult i64 %1999, 256
  %2001 = select i1 %1998, i1 %2000, i1 false
  br i1 %2001, label %2005, label %2175

2002:                                             ; preds = %1990
  %2003 = load i64, ptr %15, align 8, !tbaa !9
  %2004 = icmp ult i64 %2003, 256
  br i1 %2004, label %2005, label %2175

2005:                                             ; preds = %1913, %1864, %2002, %1996
  %2006 = load i32, ptr %1716, align 8, !tbaa !103
  %2007 = icmp eq i32 %2006, 0
  br i1 %2007, label %2008, label %2175

2008:                                             ; preds = %2005
  %2009 = call ptr @Perl__get_encoding() #15
  %2010 = load i64, ptr %15, align 8, !tbaa !9
  %2011 = trunc i64 %2010 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4)
  store i8 %2011, ptr %4, align 1, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #15
  store i64 1, ptr %5, align 8, !tbaa !9
  %2012 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull %4, i64 noundef 1, i32 noundef 524288) #15
  %2013 = icmp eq ptr %2009, null
  br i1 %2013, label %2016, label %2014

2014:                                             ; preds = %2008
  %2015 = call ptr @Perl_sv_recode_to_utf8(ptr noundef %2012, ptr noundef nonnull %2009) #15
  br label %2019

2016:                                             ; preds = %2008
  %2017 = getelementptr inbounds %struct.sv, ptr %2012, i64 0, i32 3
  %2018 = load ptr, ptr %2017, align 8, !tbaa !17
  br label %2019

2019:                                             ; preds = %2016, %2014
  %2020 = phi ptr [ %2015, %2014 ], [ %2018, %2016 ]
  %2021 = load ptr, ptr %2012, align 8, !tbaa !16
  %2022 = getelementptr inbounds %struct.xpv, ptr %2021, i64 0, i32 2
  %2023 = load i64, ptr %2022, align 8, !tbaa !38
  %2024 = icmp eq i64 %2023, 0
  br i1 %2024, label %2043, label %2025

2025:                                             ; preds = %2019
  %2026 = getelementptr inbounds %struct.sv, ptr %2012, i64 0, i32 2
  %2027 = load i32, ptr %2026, align 4, !tbaa !13
  %2028 = and i32 %2027, 536870912
  %2029 = icmp eq i32 %2028, 0
  br i1 %2029, label %2036, label %2030

2030:                                             ; preds = %2025
  %2031 = call zeroext i1 @Perl_ckwarn(i32 noundef 44) #15
  %2032 = xor i1 %2031, true
  %2033 = zext i1 %2032 to i32
  %2034 = call i64 @Perl_utf8n_to_uvchr(ptr noundef %2020, i64 noundef %2023, ptr noundef nonnull %5, i32 noundef %2033) #15
  %2035 = load i64, ptr %5, align 8
  br label %2039

2036:                                             ; preds = %2025
  %2037 = load i8, ptr %2020, align 1, !tbaa !17
  %2038 = zext i8 %2037 to i64
  br label %2039

2039:                                             ; preds = %2036, %2030
  %2040 = phi i64 [ %2035, %2030 ], [ 1, %2036 ]
  %2041 = phi i64 [ %2034, %2030 ], [ %2038, %2036 ]
  %2042 = icmp eq i64 %2040, %2023
  br i1 %2042, label %2044, label %2043

2043:                                             ; preds = %2019, %2039
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4)
  store i64 65533, ptr %15, align 8, !tbaa !9
  br label %2045

2044:                                             ; preds = %2039
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #15
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4)
  store i64 %2041, ptr %15, align 8, !tbaa !9
  br i1 %2013, label %2045, label %2061

2045:                                             ; preds = %2043, %2044
  %2046 = load ptr, ptr %1678, align 8, !tbaa !112
  %2047 = icmp eq ptr %2046, %1680
  br i1 %2047, label %2061, label %2048

2048:                                             ; preds = %2045
  %2049 = load ptr, ptr %16, align 8, !tbaa !5
  %2050 = ptrtoint ptr %2049 to i64
  %2051 = load ptr, ptr %1711, align 8, !tbaa !65
  %2052 = ptrtoint ptr %2051 to i64
  %2053 = sub i64 %2050, %2052
  %2054 = load i32, ptr %1712, align 8, !tbaa !50
  %2055 = icmp ne i32 %2054, 0
  %2056 = zext i1 %2055 to i32
  %2057 = load ptr, ptr %116, align 8, !tbaa !107
  %2058 = ptrtoint ptr %2057 to i64
  %2059 = sub i64 %2058, %2050
  %2060 = getelementptr inbounds i8, ptr %2051, i64 %2053
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.504, i32 noundef %2056, i64 noundef %2053, ptr noundef %2051, i32 noundef %2056, i64 noundef %2059, ptr noundef %2060) #15
  br label %2061

2061:                                             ; preds = %2044, %2045, %2048
  %2062 = load i32, ptr %1712, align 8, !tbaa !50
  %2063 = icmp eq i32 %2062, 0
  br i1 %2063, label %2064, label %2175

2064:                                             ; preds = %2061
  store i32 32, ptr %1, align 4, !tbaa !73
  br label %2696

2065:                                             ; preds = %1760
  %2066 = load ptr, ptr %116, align 8, !tbaa !107
  %2067 = icmp ult ptr %1761, %2066
  br i1 %2067, label %2086, label %2068

2068:                                             ; preds = %2065
  %2069 = load ptr, ptr %1711, align 8, !tbaa !65
  %2070 = ptrtoint ptr %2066 to i64
  %2071 = ptrtoint ptr %2069 to i64
  %2072 = sub i64 %2070, %2071
  %2073 = load ptr, ptr %1678, align 8, !tbaa !112
  %2074 = icmp eq ptr %2073, %1680
  br i1 %2074, label %2078, label %2075

2075:                                             ; preds = %2068
  %2076 = load ptr, ptr %1713, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %2076, i32 noundef 11) #15
  %2077 = load ptr, ptr %1711, align 8, !tbaa !65
  br label %2078

2078:                                             ; preds = %2075, %2068
  %2079 = phi ptr [ %2077, %2075 ], [ %2069, %2068 ]
  %2080 = icmp sgt i64 %2072, 127
  %2081 = select i1 %2080, ptr @.str.20, ptr @.str.8
  %2082 = select i1 %2080, i64 117, i64 %2072
  %2083 = load i32, ptr %1712, align 8, !tbaa !50
  %2084 = icmp ne i32 %2083, 0
  %2085 = zext i1 %2084 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.502, i32 noundef %2085, i64 noundef %2082, ptr noundef %2079, ptr noundef nonnull %2081) #15
  br label %2086

2086:                                             ; preds = %2065, %2078, %1760
  %2087 = load ptr, ptr %1678, align 8, !tbaa !112
  %2088 = icmp eq ptr %2087, %1680
  br i1 %2088, label %2149, label %2089

2089:                                             ; preds = %2086
  %2090 = load i8, ptr %1761, align 1, !tbaa !17
  %2091 = zext i8 %2090 to i64
  %2092 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2091
  %2093 = load i32, ptr %2092, align 4, !tbaa !73
  %2094 = and i32 %2093, 16512
  %2095 = icmp eq i32 %2094, 16512
  br i1 %2095, label %2096, label %2149

2096:                                             ; preds = %2089
  %2097 = and i32 %2093, 16388
  %2098 = icmp eq i32 %2097, 16388
  br i1 %2098, label %2099, label %2105

2099:                                             ; preds = %2096
  %2100 = getelementptr inbounds i8, ptr %1758, i64 2
  %2101 = load i8, ptr %2100, align 1, !tbaa !17
  %2102 = freeze i8 %2101
  %2103 = icmp eq i8 %2102, 123
  %2104 = select i1 %2103, i32 2, i32 1
  br label %2105

2105:                                             ; preds = %2099, %2096
  %2106 = phi i32 [ 1, %2096 ], [ %2104, %2099 ]
  %2107 = zext i32 %2106 to i64
  %2108 = getelementptr inbounds i8, ptr %1761, i64 %2107
  %2109 = load ptr, ptr %1711, align 8, !tbaa !65
  %2110 = ptrtoint ptr %2108 to i64
  %2111 = ptrtoint ptr %2109 to i64
  %2112 = sub i64 %2110, %2111
  %2113 = load i32, ptr %1712, align 8, !tbaa !50
  %2114 = icmp ne i32 %2113, 0
  %2115 = zext i1 %2114 to i32
  %2116 = load ptr, ptr %116, align 8, !tbaa !107
  %2117 = ptrtoint ptr %2116 to i64
  %2118 = sub i64 %2117, %2110
  %2119 = getelementptr inbounds i8, ptr %2109, i64 %2112
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.505, i32 noundef %2106, ptr noundef nonnull %1761, i32 noundef %2115, i64 noundef %2112, ptr noundef %2109, i32 noundef %2115, i64 noundef %2118, ptr noundef %2119) #15
  br label %2149

2120:                                             ; preds = %1757
  %2121 = load ptr, ptr %1678, align 8, !tbaa !112
  %2122 = icmp eq ptr %2121, %1680
  br i1 %2122, label %2170, label %2123

2123:                                             ; preds = %2120
  %2124 = icmp eq i64 %1749, 0
  br i1 %2124, label %2125, label %2136

2125:                                             ; preds = %2123
  %2126 = load ptr, ptr %1710, align 8, !tbaa !106
  %2127 = icmp ugt ptr %1758, %2126
  br i1 %2127, label %2128, label %2149

2128:                                             ; preds = %2125
  %2129 = getelementptr inbounds i8, ptr %1758, i64 -1
  %2130 = load i8, ptr %2129, align 1, !tbaa !17
  %2131 = zext i8 %2130 to i64
  %2132 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2131
  %2133 = load i32, ptr %2132, align 4, !tbaa !73
  %2134 = and i32 %2133, 16388
  %2135 = icmp eq i32 %2134, 16388
  br i1 %2135, label %2136, label %2149

2136:                                             ; preds = %2128, %2123
  %2137 = getelementptr inbounds i8, ptr %1758, i64 1
  %2138 = load ptr, ptr %1711, align 8, !tbaa !65
  %2139 = ptrtoint ptr %2137 to i64
  %2140 = ptrtoint ptr %2138 to i64
  %2141 = sub i64 %2139, %2140
  %2142 = load i32, ptr %1712, align 8, !tbaa !50
  %2143 = icmp ne i32 %2142, 0
  %2144 = zext i1 %2143 to i32
  %2145 = load ptr, ptr %116, align 8, !tbaa !107
  %2146 = ptrtoint ptr %2145 to i64
  %2147 = sub i64 %2146, %2139
  %2148 = getelementptr inbounds i8, ptr %2138, i64 %2141
  call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 5122, ptr noundef nonnull @.str.506, i32 noundef %2144, i64 noundef %2141, ptr noundef %2138, i32 noundef %2144, i64 noundef %2147, ptr noundef %2148) #15
  br label %2149

2149:                                             ; preds = %2105, %2089, %2086, %2125, %2128, %2136
  %2150 = phi ptr [ %1761, %2105 ], [ %1761, %2089 ], [ %1761, %2086 ], [ %1758, %2125 ], [ %1758, %2128 ], [ %1758, %2136 ]
  %2151 = load i8, ptr %2150, align 1, !tbaa !17
  br label %2152

2152:                                             ; preds = %2149, %1757
  %2153 = phi i8 [ %2151, %2149 ], [ %1759, %1757 ]
  %2154 = phi ptr [ %2150, %2149 ], [ %1758, %1757 ]
  %2155 = icmp ugt i8 %2153, -63
  br i1 %2155, label %2156, label %2170

2156:                                             ; preds = %2152
  %2157 = load i32, ptr %1712, align 8, !tbaa !50
  %2158 = icmp eq i32 %2157, 0
  br i1 %2158, label %2170, label %2159

2159:                                             ; preds = %2156
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %24) #15
  %2160 = load ptr, ptr %116, align 8, !tbaa !107
  %2161 = ptrtoint ptr %2160 to i64
  %2162 = ptrtoint ptr %2154 to i64
  %2163 = sub i64 %2161, %2162
  %2164 = call zeroext i1 @Perl_ckwarn(i32 noundef 44) #15
  %2165 = xor i1 %2164, true
  %2166 = zext i1 %2165 to i32
  %2167 = call i64 @Perl_utf8n_to_uvchr(ptr noundef nonnull %2154, i64 noundef %2163, ptr noundef nonnull %24, i32 noundef %2166) #15
  store i64 %2167, ptr %15, align 8, !tbaa !9
  %2168 = load i64, ptr %24, align 8, !tbaa !9
  %2169 = getelementptr inbounds i8, ptr %2154, i64 %2168
  store ptr %2169, ptr %16, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %24) #15
  br label %2175

2170:                                             ; preds = %2120, %2156, %2152
  %2171 = phi ptr [ %2154, %2156 ], [ %2154, %2152 ], [ %1758, %2120 ]
  %2172 = phi i8 [ %2153, %2156 ], [ %2153, %2152 ], [ 123, %2120 ]
  %2173 = getelementptr inbounds i8, ptr %2171, i64 1
  store ptr %2173, ptr %16, align 8, !tbaa !5
  %2174 = zext i8 %2172 to i64
  store i64 %2174, ptr %15, align 8, !tbaa !9
  br label %2175

2175:                                             ; preds = %2061, %1914, %1863, %2159, %2170, %1764, %1801, %1803, %1805, %1807, %1809, %1915, %1797, %1793, %1993, %1996, %2002, %2005
  %2176 = load i32, ptr %0, align 8, !tbaa !66
  %2177 = and i32 %2176, 8
  %2178 = icmp eq i32 %2177, 0
  %2179 = load ptr, ptr %16, align 8, !tbaa !5
  br i1 %2178, label %2182, label %2180

2180:                                             ; preds = %2175
  %2181 = call fastcc ptr @S_regpatws(ptr noundef nonnull %0, ptr noundef %2179, i1 noundef zeroext true)
  store ptr %2181, ptr %16, align 8, !tbaa !5
  br label %2182

2182:                                             ; preds = %2180, %2175
  %2183 = phi ptr [ %2181, %2180 ], [ %2179, %2175 ]
  %2184 = load ptr, ptr %116, align 8, !tbaa !107
  %2185 = icmp ult ptr %2183, %2184
  br i1 %2185, label %2186, label %2224

2186:                                             ; preds = %2182
  %2187 = load i8, ptr %2183, align 1, !tbaa !17
  switch i8 %2187, label %2224 [
    i8 42, label %2221
    i8 43, label %2221
    i8 63, label %2221
    i8 123, label %2188
  ]

2188:                                             ; preds = %2186
  %2189 = getelementptr inbounds i8, ptr %2183, i64 1
  %2190 = load i8, ptr %2189, align 1, !tbaa !17
  %2191 = zext i8 %2190 to i64
  %2192 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2191
  %2193 = load i32, ptr %2192, align 4, !tbaa !73
  %2194 = and i32 %2193, 2
  %2195 = icmp eq i32 %2194, 0
  br i1 %2195, label %2224, label %2196

2196:                                             ; preds = %2188, %2196
  %2197 = phi ptr [ %2204, %2196 ], [ %2189, %2188 ]
  %2198 = load i8, ptr %2197, align 1, !tbaa !17
  %2199 = zext i8 %2198 to i64
  %2200 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2199
  %2201 = load i32, ptr %2200, align 4, !tbaa !73
  %2202 = and i32 %2201, 2
  %2203 = icmp eq i32 %2202, 0
  %2204 = getelementptr inbounds i8, ptr %2197, i64 1
  br i1 %2203, label %2205, label %2196, !llvm.loop !389

2205:                                             ; preds = %2196
  %2206 = icmp eq i8 %2198, 44
  br i1 %2206, label %2207, label %2216

2207:                                             ; preds = %2205, %2207
  %2208 = phi ptr [ %2209, %2207 ], [ %2197, %2205 ]
  %2209 = getelementptr inbounds i8, ptr %2208, i64 1
  %2210 = load i8, ptr %2209, align 1, !tbaa !17
  %2211 = zext i8 %2210 to i64
  %2212 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2211
  %2213 = load i32, ptr %2212, align 4, !tbaa !73
  %2214 = and i32 %2213, 2
  %2215 = icmp eq i32 %2214, 0
  br i1 %2215, label %2216, label %2207, !llvm.loop !390

2216:                                             ; preds = %2207, %2205
  %2217 = phi i8 [ %2198, %2205 ], [ %2210, %2207 ]
  %2218 = icmp eq i8 %2217, 125
  %2219 = icmp ne i64 %1749, 0
  %2220 = and i1 %2219, %2218
  br i1 %2220, label %2223, label %2224

2221:                                             ; preds = %2186, %2186, %2186
  %2222 = icmp eq i64 %1749, 0
  br i1 %2222, label %2224, label %2223

2223:                                             ; preds = %2221, %2216
  store ptr %1748, ptr %16, align 8, !tbaa !5
  br label %2596

2224:                                             ; preds = %2188, %2182, %2186, %2221, %2216
  %2225 = phi i1 [ true, %2221 ], [ %2218, %2216 ], [ false, %2186 ], [ false, %2182 ], [ false, %2188 ]
  %2226 = load i32, ptr %0, align 8, !tbaa !66
  %2227 = and i32 %2226, 4
  %2228 = icmp eq i32 %2227, 0
  br i1 %2228, label %2229, label %2274

2229:                                             ; preds = %2224
  %2230 = load ptr, ptr %1678, align 8, !tbaa !112
  %2231 = icmp eq ptr %2230, %1680
  br i1 %2231, label %2232, label %2258

2232:                                             ; preds = %2229
  %2233 = load i32, ptr %1712, align 8, !tbaa !50
  %2234 = icmp eq i32 %2233, 0
  br i1 %2234, label %2256, label %2235

2235:                                             ; preds = %2232
  %2236 = load i64, ptr %15, align 8, !tbaa !9
  %2237 = icmp ult i64 %2236, 128
  br i1 %2237, label %2251, label %2238

2238:                                             ; preds = %2235
  %2239 = icmp ult i64 %2236, 2048
  br i1 %2239, label %2251, label %2240

2240:                                             ; preds = %2238
  %2241 = icmp ult i64 %2236, 65536
  br i1 %2241, label %2251, label %2242

2242:                                             ; preds = %2240
  %2243 = icmp ult i64 %2236, 2097152
  br i1 %2243, label %2251, label %2244

2244:                                             ; preds = %2242
  %2245 = icmp ult i64 %2236, 67108864
  br i1 %2245, label %2251, label %2246

2246:                                             ; preds = %2244
  %2247 = icmp ult i64 %2236, 2147483648
  br i1 %2247, label %2251, label %2248

2248:                                             ; preds = %2246
  %2249 = icmp ult i64 %2236, 68719476736
  %2250 = select i1 %2249, i64 7, i64 13
  br label %2251

2251:                                             ; preds = %2238, %2242, %2248, %2246, %2244, %2240, %2235
  %2252 = phi i64 [ 1, %2235 ], [ 2, %2238 ], [ 3, %2240 ], [ 4, %2242 ], [ 5, %2244 ], [ %2250, %2248 ], [ 6, %2246 ]
  %2253 = getelementptr inbounds i8, ptr %1750, i64 %2252
  %2254 = add i64 %1749, -1
  %2255 = add i64 %2254, %2252
  br label %2427

2256:                                             ; preds = %2232
  %2257 = getelementptr inbounds i8, ptr %1750, i64 1
  br label %2427

2258:                                             ; preds = %2322, %2322, %2322, %2322, %2322, %2322, %2322, %2322, %2278, %2285, %2289, %2293, %2297, %2301, %2305, %2314, %2318, %2309, %2229
  %2259 = phi i8 [ %1751, %2229 ], [ 0, %2309 ], [ 0, %2322 ], [ 0, %2318 ], [ 0, %2314 ], [ 0, %2305 ], [ 0, %2301 ], [ 0, %2297 ], [ 0, %2293 ], [ 0, %2289 ], [ 0, %2285 ], [ 0, %2278 ], [ 0, %2322 ], [ 0, %2322 ], [ 0, %2322 ], [ 0, %2322 ], [ 0, %2322 ], [ 0, %2322 ], [ 0, %2322 ]
  %2260 = phi i8 [ %1752, %2229 ], [ 0, %2309 ], [ 0, %2322 ], [ 0, %2318 ], [ 0, %2314 ], [ 0, %2305 ], [ 0, %2301 ], [ 0, %2297 ], [ 0, %2293 ], [ 0, %2289 ], [ 0, %2285 ], [ 0, %2278 ], [ 0, %2322 ], [ 0, %2322 ], [ 0, %2322 ], [ 0, %2322 ], [ 0, %2322 ], [ 0, %2322 ], [ 0, %2322 ]
  %2261 = load i32, ptr %1712, align 8, !tbaa !50
  %2262 = icmp eq i32 %2261, 0
  %2263 = load i64, ptr %15, align 8, !tbaa !9
  br i1 %2262, label %2271, label %2264

2264:                                             ; preds = %2258
  %2265 = call ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef %1750, i64 noundef %2263, i64 noundef 0) #15
  %2266 = ptrtoint ptr %2265 to i64
  %2267 = ptrtoint ptr %1750 to i64
  %2268 = xor i64 %2267, -1
  %2269 = add i64 %1749, %2268
  %2270 = add i64 %2269, %2266
  br label %2427

2271:                                             ; preds = %2258
  %2272 = trunc i64 %2263 to i8
  %2273 = getelementptr inbounds i8, ptr %1750, i64 1
  store i8 %2272, ptr %1750, align 1, !tbaa !17
  br label %2427

2274:                                             ; preds = %2224
  %2275 = lshr i32 %2226, 7
  %2276 = and i32 %2275, 7
  %2277 = icmp eq i32 %2276, 1
  br i1 %2277, label %2278, label %2323

2278:                                             ; preds = %2274
  %2279 = load i64, ptr %15, align 8
  %2280 = icmp ult i64 %2279, 256
  %2281 = icmp eq i64 %2279, 304
  %2282 = or i1 %2280, %2281
  br i1 %2282, label %2258, label %2283

2283:                                             ; preds = %2278
  %2284 = icmp ugt i64 %2279, 304
  br i1 %2284, label %2285, label %2323

2285:                                             ; preds = %2283
  %2286 = icmp eq i64 %2279, 329
  br i1 %2286, label %2258, label %2287

2287:                                             ; preds = %2285
  %2288 = icmp ugt i64 %2279, 329
  br i1 %2288, label %2289, label %2323

2289:                                             ; preds = %2287
  %2290 = icmp eq i64 %2279, 376
  br i1 %2290, label %2258, label %2291

2291:                                             ; preds = %2289
  %2292 = icmp ugt i64 %2279, 376
  br i1 %2292, label %2293, label %2323

2293:                                             ; preds = %2291
  %2294 = icmp eq i64 %2279, 383
  br i1 %2294, label %2258, label %2295

2295:                                             ; preds = %2293
  %2296 = icmp ugt i64 %2279, 383
  br i1 %2296, label %2297, label %2323

2297:                                             ; preds = %2295
  %2298 = icmp eq i64 %2279, 496
  br i1 %2298, label %2258, label %2299

2299:                                             ; preds = %2297
  %2300 = icmp ugt i64 %2279, 496
  br i1 %2300, label %2301, label %2323

2301:                                             ; preds = %2299
  %2302 = icmp eq i64 %2279, 924
  br i1 %2302, label %2258, label %2303

2303:                                             ; preds = %2301
  %2304 = icmp ugt i64 %2279, 924
  br i1 %2304, label %2305, label %2323

2305:                                             ; preds = %2303
  %2306 = icmp eq i64 %2279, 956
  br i1 %2306, label %2258, label %2307

2307:                                             ; preds = %2305
  %2308 = icmp ugt i64 %2279, 956
  br i1 %2308, label %2309, label %2323

2309:                                             ; preds = %2307
  %2310 = add i64 %2279, -7830
  %2311 = icmp ult i64 %2310, 5
  br i1 %2311, label %2258, label %2312

2312:                                             ; preds = %2309
  %2313 = icmp ugt i64 %2279, 7834
  br i1 %2313, label %2314, label %2323

2314:                                             ; preds = %2312
  %2315 = icmp eq i64 %2279, 7838
  br i1 %2315, label %2258, label %2316

2316:                                             ; preds = %2314
  %2317 = icmp ugt i64 %2279, 7838
  br i1 %2317, label %2318, label %2323

2318:                                             ; preds = %2316
  %2319 = icmp eq i64 %2279, 8490
  br i1 %2319, label %2258, label %2320

2320:                                             ; preds = %2318
  %2321 = icmp ugt i64 %2279, 8490
  br i1 %2321, label %2322, label %2323

2322:                                             ; preds = %2320
  switch i64 %2279, label %2323 [
    i64 64262, label %2258
    i64 64261, label %2258
    i64 64260, label %2258
    i64 64259, label %2258
    i64 64258, label %2258
    i64 64257, label %2258
    i64 64256, label %2258
    i64 8491, label %2258
  ]

2323:                                             ; preds = %2322, %2320, %2316, %2312, %2307, %2303, %2299, %2295, %2291, %2287, %2283, %2274
  %2324 = load i32, ptr %1712, align 8, !tbaa !50
  %2325 = icmp eq i32 %2324, 0
  %2326 = load i64, ptr %15, align 8
  br i1 %2325, label %2327, label %2387

2327:                                             ; preds = %2323
  %2328 = icmp eq i64 %2326, 223
  %2329 = select i1 %1717, i1 %2328, i1 false
  br i1 %2329, label %2398, label %2330

2330:                                             ; preds = %2327
  %2331 = icmp ult i64 %2326, 256
  br i1 %2331, label %2332, label %2381

2332:                                             ; preds = %2330
  %2333 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2326
  %2334 = load i32, ptr %2333, align 4, !tbaa !73
  %2335 = and i32 %2334, 4194304
  %2336 = icmp eq i32 %2335, 0
  br i1 %2336, label %2381, label %2337

2337:                                             ; preds = %2332
  %2338 = and i8 %1751, 1
  %2339 = icmp eq i8 %2338, 0
  br i1 %2339, label %2381, label %2340

2340:                                             ; preds = %2337
  %2341 = getelementptr inbounds [0 x i8], ptr @PL_fold, i64 0, i64 %2326
  %2342 = load i8, ptr %2341, align 1, !tbaa !17
  %2343 = getelementptr inbounds [0 x i8], ptr @PL_fold_latin1, i64 0, i64 %2326
  %2344 = load i8, ptr %2343, align 1, !tbaa !17
  %2345 = icmp ne i8 %2342, %2344
  %2346 = select i1 %2345, i1 true, i1 %2328
  br i1 %2346, label %2380, label %2347

2347:                                             ; preds = %2340
  %2348 = icmp eq i64 %1749, 0
  br i1 %2348, label %2381, label %2349

2349:                                             ; preds = %2347
  %2350 = and i32 %2334, 16388
  %2351 = icmp eq i32 %2350, 16388
  br i1 %2351, label %2358, label %2352

2352:                                             ; preds = %2349
  %2353 = load i32, ptr getelementptr inbounds ([0 x i32], ptr @PL_charclass, i64 0, i64 115), align 4, !tbaa !73
  %2354 = and i32 %2353, 16388
  %2355 = icmp eq i32 %2354, 16388
  br i1 %2355, label %2358, label %2356

2356:                                             ; preds = %2352
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.507, i32 noundef 12680) #15
  %2357 = load i64, ptr %15, align 8, !tbaa !9
  br label %2358

2358:                                             ; preds = %2349, %2352, %2356
  %2359 = phi i64 [ %2326, %2349 ], [ %2326, %2352 ], [ %2357, %2356 ]
  %2360 = and i64 %2359, -33
  %2361 = icmp eq i64 %2360, 83
  br i1 %2361, label %2362, label %2381

2362:                                             ; preds = %2358
  %2363 = getelementptr inbounds i8, ptr %1750, i64 -1
  %2364 = load i8, ptr %2363, align 1, !tbaa !17
  %2365 = zext i8 %2364 to i64
  %2366 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2365
  %2367 = load i32, ptr %2366, align 4, !tbaa !73
  %2368 = and i32 %2367, 16388
  %2369 = icmp eq i32 %2368, 16388
  br i1 %2369, label %2376, label %2370

2370:                                             ; preds = %2362
  %2371 = load i32, ptr getelementptr inbounds ([0 x i32], ptr @PL_charclass, i64 0, i64 115), align 4, !tbaa !73
  %2372 = and i32 %2371, 16388
  %2373 = icmp eq i32 %2372, 16388
  br i1 %2373, label %2376, label %2374

2374:                                             ; preds = %2370
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.508, i32 noundef 12681) #15
  %2375 = load i8, ptr %2363, align 1, !tbaa !17
  br label %2376

2376:                                             ; preds = %2362, %2370, %2374
  %2377 = phi i8 [ %2364, %2362 ], [ %2364, %2370 ], [ %2375, %2374 ]
  %2378 = and i8 %2377, -33
  %2379 = icmp eq i8 %2378, 83
  br i1 %2379, label %2380, label %2381

2380:                                             ; preds = %2376, %2340
  br label %2381

2381:                                             ; preds = %2337, %2347, %2358, %2376, %2380, %2330, %2332
  %2382 = phi i8 [ %1751, %2330 ], [ 0, %2380 ], [ %1751, %2376 ], [ %1751, %2358 ], [ %1751, %2347 ], [ %1751, %2337 ], [ %1751, %2332 ]
  %2383 = phi i8 [ %1752, %2330 ], [ 0, %2380 ], [ 0, %2376 ], [ 0, %2358 ], [ 0, %2347 ], [ 0, %2337 ], [ %1752, %2332 ]
  %2384 = load i64, ptr %15, align 8, !tbaa !9
  %2385 = trunc i64 %2384 to i8
  %2386 = getelementptr inbounds i8, ptr %1750, i64 1
  store i8 %2385, ptr %1750, align 1, !tbaa !17
  br label %2427

2387:                                             ; preds = %2323
  %2388 = icmp ult i64 %2326, 128
  br i1 %2388, label %2389, label %2398

2389:                                             ; preds = %2387
  %2390 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2326
  %2391 = load i32, ptr %2390, align 4, !tbaa !73
  %2392 = and i32 %2391, 16400
  %2393 = icmp eq i32 %2392, 16400
  %2394 = add nuw nsw i64 %2326, 32
  %2395 = select i1 %2393, i64 %2394, i64 %2326
  %2396 = trunc i64 %2395 to i8
  %2397 = getelementptr inbounds i8, ptr %1750, i64 1
  store i8 %2396, ptr %1750, align 1, !tbaa !17
  br label %2407

2398:                                             ; preds = %2327, %2387
  %2399 = phi i64 [ %2326, %2387 ], [ 223, %2327 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %25) #15
  %2400 = icmp eq i32 %2276, 4
  %2401 = select i1 %2400, i8 6, i8 2
  %2402 = call i64 @Perl__to_uni_fold_flags(i64 noundef %2399, ptr noundef %1750, ptr noundef nonnull %25, i8 noundef zeroext %2401) #15
  %2403 = load i64, ptr %25, align 8, !tbaa !9
  %2404 = getelementptr inbounds i8, ptr %1750, i64 %2403
  %2405 = add i64 %1749, -1
  %2406 = add i64 %2405, %2403
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %25) #15
  br label %2407

2407:                                             ; preds = %2398, %2389
  %2408 = phi i64 [ %1749, %2389 ], [ %2406, %2398 ]
  %2409 = phi ptr [ %2397, %2389 ], [ %2404, %2398 ]
  %2410 = phi i64 [ %2395, %2389 ], [ %2402, %2398 ]
  %2411 = and i8 %1752, 1
  %2412 = icmp eq i8 %2411, 0
  br i1 %2412, label %2425, label %2413

2413:                                             ; preds = %2407
  %2414 = load i64, ptr %15, align 8, !tbaa !9
  %2415 = icmp eq i64 %2410, %2414
  br i1 %2415, label %2416, label %2425

2416:                                             ; preds = %2413
  %2417 = load ptr, ptr @PL_utf8_foldable, align 8, !tbaa !5
  %2418 = call i64 @Perl__invlist_search(ptr noundef %2417, i64 noundef %2410) #15
  %2419 = icmp eq ptr %2417, null
  br i1 %2419, label %2420, label %2421

2420:                                             ; preds = %2416
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.229, i32 noundef 54) #15
  br label %2421

2421:                                             ; preds = %2416, %2420
  %2422 = and i64 %2418, -9223372036854775807
  %2423 = icmp eq i64 %2422, 0
  %2424 = select i1 %2423, i8 0, i8 %1752
  br label %2425

2425:                                             ; preds = %2421, %2413, %2407
  %2426 = phi i8 [ %1752, %2407 ], [ 0, %2413 ], [ %2424, %2421 ]
  store i64 %2410, ptr %15, align 8, !tbaa !9
  br label %2427

2427:                                             ; preds = %2425, %2381, %2256, %2251, %2271, %2264
  %2428 = phi i64 [ %2270, %2264 ], [ %1749, %2271 ], [ %2408, %2425 ], [ %1749, %2381 ], [ %2255, %2251 ], [ %1749, %2256 ]
  %2429 = phi ptr [ %2265, %2264 ], [ %2273, %2271 ], [ %2409, %2425 ], [ %2386, %2381 ], [ %2253, %2251 ], [ %2257, %2256 ]
  %2430 = phi i8 [ %2259, %2264 ], [ %2259, %2271 ], [ %1751, %2425 ], [ %2382, %2381 ], [ %1751, %2251 ], [ %1751, %2256 ]
  %2431 = phi i8 [ %2260, %2264 ], [ %2260, %2271 ], [ %2426, %2425 ], [ %2383, %2381 ], [ %1752, %2251 ], [ %1752, %2256 ]
  %2432 = add i64 %2428, 1
  br i1 %2225, label %2588, label %2433

2433:                                             ; preds = %2427
  %2434 = icmp ult i64 %2432, %1734
  br i1 %2434, label %1741, label %2435, !llvm.loop !399

2435:                                             ; preds = %2433
  %2436 = load i32, ptr %0, align 8, !tbaa !66
  br label %2437

2437:                                             ; preds = %1741, %1736, %2435
  %2438 = phi i32 [ %2436, %2435 ], [ %1740, %1736 ], [ %1745, %1741 ]
  %2439 = phi i64 [ %2432, %2435 ], [ 0, %1736 ], [ %2432, %1741 ]
  %2440 = phi ptr [ %2429, %2435 ], [ %1709, %1736 ], [ %2429, %1741 ]
  %2441 = phi ptr [ %1748, %2435 ], [ %1721, %1736 ], [ %1748, %1741 ]
  %2442 = phi i8 [ %2430, %2435 ], [ %1722, %1736 ], [ %2430, %1741 ]
  %2443 = phi i8 [ %2431, %2435 ], [ %1731, %1736 ], [ %2431, %1741 ]
  %2444 = and i32 %2438, 4
  br label %2445

2445:                                             ; preds = %2437, %1729
  %2446 = phi i32 [ %2444, %2437 ], [ %1724, %1729 ]
  %2447 = phi i64 [ %2439, %2437 ], [ 0, %1729 ]
  %2448 = phi ptr [ %2440, %2437 ], [ %1709, %1729 ]
  %2449 = phi ptr [ %2441, %2437 ], [ %1721, %1729 ]
  %2450 = phi i8 [ %2442, %2437 ], [ %1722, %1729 ]
  %2451 = phi i8 [ %2443, %2437 ], [ %1731, %1729 ]
  %2452 = icmp eq i32 %2446, 0
  br i1 %2452, label %2588, label %2453

2453:                                             ; preds = %2445
  %2454 = load ptr, ptr %16, align 8, !tbaa !5
  %2455 = load ptr, ptr %116, align 8, !tbaa !107
  %2456 = icmp ult ptr %2454, %2455
  %2457 = icmp eq i8 %1720, 127
  %2458 = and i1 %2457, %2456
  br i1 %2458, label %2459, label %2588

2459:                                             ; preds = %2453
  %2460 = icmp ugt i64 %2447, 126
  br i1 %2460, label %2462, label %2461

2461:                                             ; preds = %2459
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.509, i32 noundef 12781) #15
  br label %2462

2462:                                             ; preds = %2459, %2461
  %2463 = load i32, ptr %1712, align 8, !tbaa !50
  %2464 = icmp eq i32 %2463, 0
  br i1 %2464, label %2465, label %2484

2465:                                             ; preds = %2462
  %2466 = load i32, ptr %0, align 8, !tbaa !66
  %2467 = and i32 %2466, 896
  %2468 = icmp eq i32 %2467, 512
  br i1 %2468, label %2588, label %2469

2469:                                             ; preds = %2465, %2473
  %2470 = phi ptr [ %2471, %2473 ], [ %2448, %2465 ]
  %2471 = getelementptr inbounds i8, ptr %2470, i64 -1
  %2472 = icmp ult ptr %2471, %1709
  br i1 %2472, label %2480, label %2473

2473:                                             ; preds = %2469
  %2474 = load i8, ptr %2471, align 1, !tbaa !17
  %2475 = zext i8 %2474 to i64
  %2476 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2475
  %2477 = load i32, ptr %2476, align 4, !tbaa !73
  %2478 = and i32 %2477, 2097152
  %2479 = icmp eq i32 %2478, 0
  br i1 %2479, label %2480, label %2469, !llvm.loop !400

2480:                                             ; preds = %2469, %2473
  %2481 = ptrtoint ptr %2471 to i64
  %2482 = sub i64 %2481, %1718
  %2483 = add i64 %2482, 1
  br label %2545

2484:                                             ; preds = %2462
  %2485 = load ptr, ptr @PL_NonL1NonFinalFold, align 8, !tbaa !5
  %2486 = icmp eq ptr %2485, null
  br i1 %2486, label %2487, label %2489

2487:                                             ; preds = %2484
  %2488 = call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @NonL1_Perl_Non_Final_Folds_invlist) #15
  store ptr %2488, ptr @PL_NonL1NonFinalFold, align 8, !tbaa !5
  br label %2489

2489:                                             ; preds = %2487, %2484
  %2490 = call ptr @Perl_utf8_hop(ptr noundef %2448, i32 noundef -1) #15
  %2491 = icmp ult ptr %2490, %1709
  br i1 %2491, label %2549, label %2492

2492:                                             ; preds = %2489, %2533
  %2493 = phi ptr [ %2534, %2533 ], [ %2490, %2489 ]
  %2494 = load i8, ptr %2493, align 1, !tbaa !17
  %2495 = icmp sgt i8 %2494, -1
  br i1 %2495, label %2496, label %2506

2496:                                             ; preds = %2492
  %2497 = load i32, ptr %0, align 8, !tbaa !66
  %2498 = and i32 %2497, 896
  %2499 = icmp eq i32 %2498, 512
  br i1 %2499, label %2536, label %2500

2500:                                             ; preds = %2496
  %2501 = zext i8 %2494 to i64
  %2502 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2501
  %2503 = load i32, ptr %2502, align 4, !tbaa !73
  %2504 = and i32 %2503, 2097152
  %2505 = icmp eq i32 %2504, 0
  br i1 %2505, label %2536, label %2531

2506:                                             ; preds = %2492
  %2507 = and i8 %2494, -2
  %2508 = icmp eq i8 %2507, -62
  br i1 %2508, label %2509, label %2520

2509:                                             ; preds = %2506
  %2510 = shl i8 %2494, 6
  %2511 = getelementptr inbounds i8, ptr %2493, i64 1
  %2512 = load i8, ptr %2511, align 1, !tbaa !17
  %2513 = and i8 %2512, 63
  %2514 = or i8 %2513, %2510
  %2515 = zext i8 %2514 to i64
  %2516 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2515
  %2517 = load i32, ptr %2516, align 4, !tbaa !73
  %2518 = and i32 %2517, 2097152
  %2519 = icmp eq i32 %2518, 0
  br i1 %2519, label %2536, label %2531

2520:                                             ; preds = %2506
  %2521 = load ptr, ptr @PL_NonL1NonFinalFold, align 8, !tbaa !5
  %2522 = call i64 @Perl_valid_utf8_to_uvchr(ptr noundef nonnull %2493, ptr noundef null) #15
  %2523 = call i64 @Perl__invlist_search(ptr noundef %2521, i64 noundef %2522) #15
  %2524 = icmp eq ptr %2521, null
  br i1 %2524, label %2525, label %2526

2525:                                             ; preds = %2520
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.229, i32 noundef 54) #15
  br label %2526

2526:                                             ; preds = %2520, %2525
  %2527 = and i64 %2523, -9223372036854775807
  %2528 = icmp eq i64 %2527, 0
  br i1 %2528, label %2531, label %2529

2529:                                             ; preds = %2526
  %2530 = load i8, ptr %2493, align 1, !tbaa !17
  br label %2536

2531:                                             ; preds = %2509, %2526, %2500
  %2532 = icmp eq ptr %2493, %1709
  br i1 %2532, label %2549, label %2533

2533:                                             ; preds = %2531
  %2534 = call ptr @Perl_utf8_hop(ptr noundef nonnull %2493, i32 noundef -1) #15
  %2535 = icmp ult ptr %2534, %1709
  br i1 %2535, label %2549, label %2492, !llvm.loop !401

2536:                                             ; preds = %2509, %2496, %2500, %2529
  %2537 = phi i8 [ %2530, %2529 ], [ %2494, %2500 ], [ %2494, %2496 ], [ %2494, %2509 ]
  %2538 = ptrtoint ptr %2493 to i64
  %2539 = sub i64 %2538, %1718
  %2540 = zext i8 %2537 to i64
  %2541 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %2540
  %2542 = load i8, ptr %2541, align 1, !tbaa !17
  %2543 = zext i8 %2542 to i64
  %2544 = add nsw i64 %2539, %2543
  br label %2545

2545:                                             ; preds = %2536, %2480
  %2546 = phi i64 [ %2483, %2480 ], [ %2544, %2536 ]
  %2547 = phi ptr [ %2471, %2480 ], [ %2493, %2536 ]
  %2548 = icmp eq i64 %2546, 0
  br i1 %2548, label %2549, label %2571

2549:                                             ; preds = %2545, %2489, %2531, %2533
  %2550 = and i8 %2450, 1
  %2551 = icmp eq i8 %2550, 0
  br i1 %2551, label %2588, label %2552

2552:                                             ; preds = %2549
  %2553 = load i64, ptr %15, align 8, !tbaa !9
  %2554 = icmp ult i64 %2553, 256
  br i1 %2554, label %2555, label %2560

2555:                                             ; preds = %2552
  %2556 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2553
  %2557 = load i32, ptr %2556, align 4, !tbaa !73
  %2558 = and i32 %2557, 16388
  %2559 = icmp eq i32 %2558, 16388
  br i1 %2559, label %2566, label %2560

2560:                                             ; preds = %2555, %2552
  %2561 = load i32, ptr getelementptr inbounds ([0 x i32], ptr @PL_charclass, i64 0, i64 115), align 4, !tbaa !73
  %2562 = and i32 %2561, 16388
  %2563 = icmp eq i32 %2562, 16388
  br i1 %2563, label %2566, label %2564

2564:                                             ; preds = %2560
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.507, i32 noundef 12864) #15
  %2565 = load i64, ptr %15, align 8, !tbaa !9
  br label %2566

2566:                                             ; preds = %2555, %2560, %2564
  %2567 = phi i64 [ %2553, %2555 ], [ %2553, %2560 ], [ %2565, %2564 ]
  %2568 = and i64 %2567, -33
  %2569 = icmp eq i64 %2568, 83
  %2570 = select i1 %2569, i8 0, i8 %2450
  br label %2588

2571:                                             ; preds = %2545
  %2572 = icmp eq i64 %2546, %2447
  br i1 %2572, label %2596, label %2573

2573:                                             ; preds = %2571
  %2574 = load i32, ptr %1712, align 8, !tbaa !50
  %2575 = icmp eq i32 %2574, 0
  br i1 %2575, label %2582, label %2576

2576:                                             ; preds = %2573
  %2577 = load i8, ptr %2547, align 1, !tbaa !17
  %2578 = zext i8 %2577 to i64
  %2579 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %2578
  %2580 = load i8, ptr %2579, align 1, !tbaa !17
  %2581 = zext i8 %2580 to i64
  br label %2582

2582:                                             ; preds = %2573, %2576
  %2583 = phi i64 [ %2581, %2576 ], [ 1, %2573 ]
  %2584 = add i64 %2583, %2546
  %2585 = icmp eq i64 %2584, %2447
  %2586 = trunc i64 %2546 to i8
  br i1 %2585, label %2587, label %1719

2587:                                             ; preds = %2582
  store ptr %2449, ptr %16, align 8, !tbaa !5
  br label %2596

2588:                                             ; preds = %2465, %2453, %2445, %1757, %1757, %1757, %1757, %1757, %1757, %1757, %2427, %2566, %2549, %1941, %1923, %1792, %1763
  %2589 = phi i64 [ %1749, %1941 ], [ %1749, %1923 ], [ %1749, %1792 ], [ %1749, %1763 ], [ %2447, %2566 ], [ %2447, %2549 ], [ %1749, %1757 ], [ %1749, %1757 ], [ %1749, %1757 ], [ %1749, %1757 ], [ %1749, %1757 ], [ %1749, %1757 ], [ %1749, %1757 ], [ %2432, %2427 ], [ %2447, %2445 ], [ %2447, %2453 ], [ %2447, %2465 ]
  %2590 = phi i8 [ %1751, %1941 ], [ %1751, %1923 ], [ %1751, %1792 ], [ %1751, %1763 ], [ %2570, %2566 ], [ %2450, %2549 ], [ %1751, %1757 ], [ %1751, %1757 ], [ %1751, %1757 ], [ %1751, %1757 ], [ %1751, %1757 ], [ %1751, %1757 ], [ %1751, %1757 ], [ %2430, %2427 ], [ %2450, %2445 ], [ %2450, %2453 ], [ %2450, %2465 ]
  %2591 = phi i8 [ %1752, %1941 ], [ %1752, %1923 ], [ %1752, %1792 ], [ %1752, %1763 ], [ %2451, %2566 ], [ %2451, %2549 ], [ %1752, %1757 ], [ %1752, %1757 ], [ %1752, %1757 ], [ %1752, %1757 ], [ %1752, %1757 ], [ %1752, %1757 ], [ %1752, %1757 ], [ %2431, %2427 ], [ %2451, %2445 ], [ %2451, %2453 ], [ %2451, %2465 ]
  %2592 = icmp eq i64 %2589, 0
  br i1 %2592, label %2593, label %2596

2593:                                             ; preds = %2588
  %2594 = load ptr, ptr %12, align 8, !tbaa !5
  %2595 = getelementptr inbounds %struct.regnode, ptr %2594, i64 0, i32 1
  store i8 40, ptr %2595, align 1, !tbaa !141
  br label %2626

2596:                                             ; preds = %2571, %2587, %2223, %2588
  %2597 = phi i8 [ %1752, %2223 ], [ %2591, %2588 ], [ %2451, %2587 ], [ %2451, %2571 ]
  %2598 = phi i8 [ %1751, %2223 ], [ %2590, %2588 ], [ %2450, %2587 ], [ %2450, %2571 ]
  %2599 = phi i64 [ %1749, %2223 ], [ %2589, %2588 ], [ %2546, %2587 ], [ %2447, %2571 ]
  %2600 = load i32, ptr %0, align 8, !tbaa !66
  %2601 = and i32 %2600, 4
  %2602 = icmp eq i32 %2601, 0
  br i1 %2602, label %2603, label %2605

2603:                                             ; preds = %2596
  %2604 = load ptr, ptr %12, align 8, !tbaa !5
  br label %2623

2605:                                             ; preds = %2596
  %2606 = and i8 %2597, 1
  %2607 = icmp eq i8 %2606, 0
  br i1 %2607, label %2614, label %2608

2608:                                             ; preds = %2605
  %2609 = and i32 %2600, 896
  %2610 = icmp eq i32 %2609, 128
  %2611 = select i1 %2610, i8 32, i8 31
  %2612 = load ptr, ptr %12, align 8, !tbaa !5
  %2613 = getelementptr inbounds %struct.regnode, ptr %2612, i64 0, i32 1
  store i8 %2611, ptr %2613, align 1, !tbaa !141
  br label %2623

2614:                                             ; preds = %2605
  %2615 = and i8 %2598, 1
  %2616 = icmp eq i8 %2615, 0
  %2617 = load ptr, ptr %12, align 8, !tbaa !5
  br i1 %2616, label %2623, label %2618

2618:                                             ; preds = %2614
  %2619 = and i32 %2600, 896
  %2620 = icmp eq i32 %2619, 128
  %2621 = select i1 %2620, i8 38, i8 35
  %2622 = getelementptr inbounds %struct.regnode, ptr %2617, i64 0, i32 1
  store i8 %2621, ptr %2622, align 1, !tbaa !141
  br label %2623

2623:                                             ; preds = %2603, %2608, %2618, %2614
  %2624 = phi ptr [ %2604, %2603 ], [ %2612, %2608 ], [ %2617, %2618 ], [ %2617, %2614 ]
  %2625 = load i64, ptr %15, align 8, !tbaa !9
  call fastcc void @S_alloc_maybe_populate_EXACT(ptr noundef nonnull %0, ptr noundef %2624, ptr noundef nonnull %1, i64 noundef %2599, i64 noundef %2625, i1 noundef zeroext false)
  br label %2626

2626:                                             ; preds = %2623, %2593
  %2627 = phi i64 [ %2599, %2623 ], [ 0, %2593 ]
  %2628 = load ptr, ptr %16, align 8, !tbaa !5
  %2629 = getelementptr inbounds i8, ptr %2628, i64 -1
  store ptr %2629, ptr %26, align 8, !tbaa !105
  %2630 = load ptr, ptr %1678, align 8, !tbaa !112
  %2631 = icmp eq ptr %2630, %1680
  br i1 %2631, label %2673, label %2632

2632:                                             ; preds = %2626
  %2633 = load volatile i64, ptr %14, align 8, !tbaa !9
  %2634 = and i64 %2633, 262144
  %2635 = icmp eq i64 %2634, 0
  %2636 = load ptr, ptr %12, align 8, !tbaa !5
  br i1 %2635, label %2650, label %2637

2637:                                             ; preds = %2632
  %2638 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2639 = load ptr, ptr %2638, align 8, !tbaa !131
  %2640 = ptrtoint ptr %2636 to i64
  %2641 = ptrtoint ptr %2639 to i64
  %2642 = sub i64 %2640, %2641
  %2643 = lshr exact i64 %2642, 2
  %2644 = trunc i64 %2643 to i32
  %2645 = ptrtoint ptr %2629 to i64
  %2646 = ptrtoint ptr %1660 to i64
  %2647 = sub i64 %2645, %2646
  %2648 = trunc i64 %2647 to i32
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 12953, i32 noundef %2644, i32 noundef %2648) #15
  %2649 = load ptr, ptr %12, align 8, !tbaa !5
  br label %2650

2650:                                             ; preds = %2637, %2632
  %2651 = phi ptr [ %2649, %2637 ], [ %2636, %2632 ]
  %2652 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %2653 = load ptr, ptr %2652, align 8, !tbaa !131
  %2654 = ptrtoint ptr %2651 to i64
  %2655 = ptrtoint ptr %2653 to i64
  %2656 = sub i64 %2654, %2655
  %2657 = icmp slt i64 %2656, 0
  br i1 %2657, label %2658, label %2661

2658:                                             ; preds = %2650
  %2659 = lshr exact i64 %2656, 2
  %2660 = trunc i64 %2659 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %2660) #15
  br label %2673

2661:                                             ; preds = %2650
  %2662 = load ptr, ptr %26, align 8, !tbaa !105
  %2663 = ptrtoint ptr %2662 to i64
  %2664 = ptrtoint ptr %1660 to i64
  %2665 = sub i64 %2663, %2664
  %2666 = trunc i64 %2665 to i32
  %2667 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %2668 = load ptr, ptr %2667, align 8, !tbaa !130
  %2669 = getelementptr inbounds %struct.regexp_internal, ptr %2668, i64 0, i32 1
  %2670 = load ptr, ptr %2669, align 8, !tbaa !17
  %2671 = lshr exact i64 %2656, 1
  %2672 = getelementptr inbounds i32, ptr %2670, i64 %2671
  store i32 %2666, ptr %2672, align 4, !tbaa !73
  br label %2673

2673:                                             ; preds = %2658, %2661, %2626
  %2674 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %2675 = icmp slt i64 %2627, 0
  br i1 %2675, label %2676, label %2697

2676:                                             ; preds = %2673
  %2677 = load ptr, ptr %1678, align 8, !tbaa !112
  %2678 = icmp eq ptr %2677, %1680
  br i1 %2678, label %2681, label %2679

2679:                                             ; preds = %2676
  %2680 = load ptr, ptr %1713, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %2680, i32 noundef 11) #15
  br label %2681

2681:                                             ; preds = %2676, %2679
  %2682 = load ptr, ptr %26, align 8, !tbaa !105
  %2683 = load ptr, ptr %116, align 8, !tbaa !107
  %2684 = icmp ugt ptr %2682, %2683
  %2685 = select i1 %2684, ptr %2683, ptr %2682
  %2686 = load ptr, ptr %1711, align 8, !tbaa !65
  %2687 = ptrtoint ptr %2685 to i64
  %2688 = ptrtoint ptr %2686 to i64
  %2689 = sub i64 %2687, %2688
  %2690 = load i32, ptr %1712, align 8, !tbaa !50
  %2691 = icmp ne i32 %2690, 0
  %2692 = zext i1 %2691 to i32
  %2693 = ptrtoint ptr %2683 to i64
  %2694 = sub i64 %2693, %2687
  %2695 = getelementptr inbounds i8, ptr %2686, i64 %2689
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.510, i32 noundef %2692, i64 noundef %2689, ptr noundef %2686, i32 noundef %2692, i64 noundef %2694, ptr noundef %2695) #15
  br label %2697

2696:                                             ; preds = %2064, %1865, %1800, %1948, %1912
  call void @llvm.lifetime.end.p0(i64 140, ptr nonnull %17) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %16) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %15) #15
  br label %2700

2697:                                             ; preds = %2673, %2681
  call void @llvm.lifetime.end.p0(i64 140, ptr nonnull %17) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %16) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %15) #15
  br label %2698

2698:                                             ; preds = %208, %144, %2697, %1602, %1056, %1240, %417, %420, %384, %1031, %891, %894, %864, %1033, %280, %307, %304, %210, %242, %239, %146, %178, %175, %526, %499, %479
  %2699 = load ptr, ptr %12, align 8, !tbaa !5
  br label %2700

2700:                                             ; preds = %2696, %353, %1036, %2698, %487, %451, %445
  %2701 = phi ptr [ %2699, %2698 ], [ null, %487 ], [ null, %445 ], [ null, %451 ], [ null, %1036 ], [ null, %353 ], [ null, %2696 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %14)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #15
  ret ptr %2701
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_regclass(ptr noundef %0, ptr noundef %1, i32 noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4, i1 noundef zeroext %5, i1 noundef zeroext %6, ptr noundef writeonly %7) unnamed_addr #0 {
  %9 = alloca i8, align 1
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %20 = alloca i64, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8, align 1
  %23 = alloca ptr, align 8
  %24 = alloca ptr, align 8
  %25 = alloca i32, align 4
  %26 = alloca ptr, align 8
  %27 = alloca [13 x i8], align 1
  %28 = alloca i64, align 8
  %29 = alloca [3 x i8], align 1
  %30 = alloca i64, align 8
  %31 = alloca i32, align 4
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca ptr, align 8
  %35 = alloca [14 x i8], align 1
  %36 = alloca i64, align 8
  %37 = alloca ptr, align 8
  %38 = alloca i64, align 8
  %39 = alloca i64, align 8
  %40 = alloca i64, align 8
  %41 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #15
  store i64 3735928559, ptr %11, align 8, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #15
  store ptr null, ptr %13, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %14) #15
  store ptr null, ptr %14, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %15) #15
  store ptr null, ptr %15, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %16) #15
  store ptr null, ptr %16, align 8, !tbaa !5
  %42 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %43 = load ptr, ptr %42, align 8, !tbaa !107
  %44 = icmp eq ptr %7, null
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %17) #15
  store ptr null, ptr %17, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %18) #15
  store ptr null, ptr %18, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %19) #15
  store ptr null, ptr %19, align 8, !tbaa !5
  %45 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %46 = getelementptr inbounds %struct.cop, ptr %45, i64 0, i32 12
  %47 = load ptr, ptr %46, align 8, !tbaa !402
  %48 = ptrtoint ptr %47 to i64
  switch i64 %48, label %49 [
    i64 0, label %59
    i64 8, label %59
    i64 16, label %59
  ]

49:                                               ; preds = %8
  %50 = getelementptr inbounds i64, ptr %47, i64 1
  %51 = load i8, ptr %50, align 1, !tbaa !17
  %52 = and i8 %51, 2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %59

54:                                               ; preds = %49
  %55 = getelementptr inbounds i8, ptr %47, i64 20
  %56 = load i8, ptr %55, align 1, !tbaa !17
  %57 = lshr i8 %56, 1
  %58 = and i8 %57, 1
  br label %59

59:                                               ; preds = %54, %8, %8, %8, %49
  %60 = phi i8 [ 0, %8 ], [ 1, %49 ], [ 0, %8 ], [ 0, %8 ], [ %58, %54 ]
  %61 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %62 = load ptr, ptr %61, align 8, !tbaa !112
  %63 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %64 = load ptr, ptr %63, align 8, !tbaa !105
  %65 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %66 = load i64, ptr %65, align 8, !tbaa !111
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %20)
  store volatile i64 0, ptr %20, align 8, !tbaa !9
  %67 = load volatile i64, ptr %20, align 8, !tbaa !9
  %68 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %69 = icmp eq ptr %68, null
  br i1 %69, label %89, label %70

70:                                               ; preds = %59
  %71 = getelementptr inbounds %struct.sv, ptr %68, i64 0, i32 2
  %72 = load i32, ptr %71, align 4, !tbaa !13
  %73 = and i32 %72, 256
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %70
  tail call void @Perl_sv_setuv(ptr noundef nonnull %68, i64 noundef 65288) #15
  %76 = load i32, ptr %71, align 4, !tbaa !13
  br label %77

77:                                               ; preds = %75, %70
  %78 = phi i32 [ %76, %75 ], [ %72, %70 ]
  %79 = and i32 %78, 2097408
  %80 = icmp eq i32 %79, 256
  br i1 %80, label %81, label %85

81:                                               ; preds = %77
  %82 = load ptr, ptr %68, align 8, !tbaa !16
  %83 = getelementptr inbounds %struct.xpviv, ptr %82, i64 0, i32 4
  %84 = load i64, ptr %83, align 8, !tbaa !17
  br label %87

85:                                               ; preds = %77
  %86 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %68, i32 noundef 2) #15
  br label %87

87:                                               ; preds = %85, %81
  %88 = phi i64 [ %84, %81 ], [ %86, %85 ]
  store volatile i64 %88, ptr %20, align 8, !tbaa !9
  br label %89

89:                                               ; preds = %59, %87
  %90 = icmp eq ptr %1, null
  br i1 %90, label %91, label %92

91:                                               ; preds = %89
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.384, i32 noundef 14249) #15
  br label %92

92:                                               ; preds = %91, %89
  %93 = load volatile i64, ptr %20, align 8, !tbaa !9
  %94 = and i64 %93, 1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %154, label %96

96:                                               ; preds = %92
  %97 = load volatile i64, ptr %20, align 8, !tbaa !9
  %98 = and i64 %97, 1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %151, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 47
  %102 = load ptr, ptr %101, align 8, !tbaa !119
  %103 = load ptr, ptr %63, align 8, !tbaa !105
  %104 = icmp eq ptr %102, %103
  %105 = tail call ptr @Perl_PerlIO_stderr() #15
  br i1 %104, label %116, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 51
  %108 = load ptr, ptr %107, align 8, !tbaa !56
  %109 = load ptr, ptr %63, align 8, !tbaa !105
  %110 = load ptr, ptr %42, align 8, !tbaa !107
  %111 = ptrtoint ptr %110 to i64
  %112 = ptrtoint ptr %109 to i64
  %113 = sub i64 %111, %112
  %114 = tail call ptr @Perl_pv_pretty(ptr noundef %108, ptr noundef %109, i64 noundef %113, i64 noundef 16, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.8, i32 noundef 33294) #15
  %115 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %105, ptr noundef nonnull @.str.34, ptr noundef %114) #15
  br label %118

116:                                              ; preds = %100
  %117 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %105, ptr noundef nonnull @.str.385, ptr noundef nonnull @.str.8) #15
  br label %118

118:                                              ; preds = %116, %106
  %119 = load ptr, ptr %61, align 8, !tbaa !112
  %120 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %121 = icmp eq ptr %119, %120
  br i1 %121, label %122, label %126

122:                                              ; preds = %118
  %123 = load i64, ptr %65, align 8, !tbaa !111
  %124 = trunc i64 %123 to i32
  %125 = add i32 %124, 1
  br label %136

126:                                              ; preds = %118
  %127 = icmp eq ptr %119, null
  br i1 %127, label %136, label %128

128:                                              ; preds = %126
  %129 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %130 = load ptr, ptr %129, align 8, !tbaa !131
  %131 = ptrtoint ptr %119 to i64
  %132 = ptrtoint ptr %130 to i64
  %133 = sub i64 %131, %132
  %134 = lshr exact i64 %133, 2
  %135 = trunc i64 %134 to i32
  br label %136

136:                                              ; preds = %128, %126, %122
  %137 = phi i32 [ %125, %122 ], [ %135, %128 ], [ -1, %126 ]
  %138 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 48
  %139 = load i32, ptr %138, align 8, !tbaa !118
  %140 = icmp eq i32 %139, %137
  %141 = tail call ptr @Perl_PerlIO_stderr() #15
  br i1 %140, label %144, label %142

142:                                              ; preds = %136
  %143 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %141, ptr noundef nonnull @.str.386, i32 noundef %137) #15
  br label %146

144:                                              ; preds = %136
  %145 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %141, ptr noundef nonnull @.str.387, ptr noundef nonnull @.str.8) #15
  br label %146

146:                                              ; preds = %144, %142
  %147 = tail call ptr @Perl_PerlIO_stderr() #15
  %148 = shl i32 %2, 1
  %149 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %147, ptr noundef nonnull @.str.388, i32 noundef %148, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.511) #15
  store i32 %137, ptr %138, align 8, !tbaa !118
  %150 = load ptr, ptr %63, align 8, !tbaa !105
  store ptr %150, ptr %101, align 8, !tbaa !119
  br label %151

151:                                              ; preds = %146, %96
  %152 = tail call ptr @Perl_PerlIO_stderr() #15
  %153 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %152, ptr noundef nonnull @.str.390, ptr noundef nonnull @.str.53) #15
  br label %154

154:                                              ; preds = %92, %151
  %155 = load i32, ptr %0, align 8, !tbaa !66
  %156 = and i32 %155, 896
  %157 = icmp eq i32 %156, 128
  %158 = select i1 %157, i8 20, i8 19
  %159 = zext i8 %158 to i64
  %160 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %159
  %161 = load i8, ptr %160, align 1, !tbaa !17
  %162 = zext i8 %161 to i64
  %163 = tail call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext %158, i64 noundef %162, ptr noundef nonnull @.str.452)
  %164 = icmp eq i8 %161, 1
  br i1 %164, label %166, label %165

165:                                              ; preds = %154
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.453, i32 noundef 16379) #15
  br label %166

166:                                              ; preds = %165, %154
  %167 = load ptr, ptr %61, align 8, !tbaa !112
  %168 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %169 = icmp eq ptr %167, %168
  br i1 %169, label %176, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %struct.regnode_1, ptr %163, i64 0, i32 3
  store i32 0, ptr %171, align 4, !tbaa !148
  %172 = getelementptr inbounds %struct.regnode, ptr %163, i64 0, i32 1
  store i8 %158, ptr %172, align 1, !tbaa !141
  %173 = getelementptr inbounds %struct.regnode, ptr %163, i64 0, i32 2
  store i16 0, ptr %173, align 2, !tbaa !222
  %174 = getelementptr inbounds %struct.regnode, ptr %163, i64 2
  store ptr %174, ptr %61, align 8, !tbaa !112
  %175 = icmp eq ptr %174, %168
  br i1 %175, label %176, label %179

176:                                              ; preds = %166, %170
  %177 = load i64, ptr %65, align 8, !tbaa !111
  %178 = add i64 %177, 9
  store i64 %178, ptr %65, align 8, !tbaa !111
  br label %188

179:                                              ; preds = %170
  store i8 0, ptr %163, align 2, !tbaa !143
  %180 = getelementptr inbounds %struct.regnode, ptr %163, i64 11
  store ptr %180, ptr %61, align 8, !tbaa !112
  %181 = tail call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @.str.512, i64 noundef 10, i32 noundef 524288) #15
  %182 = load ptr, ptr %181, align 8, !tbaa !16
  %183 = getelementptr inbounds %struct.xpv, ptr %182, i64 0, i32 2
  %184 = load i64, ptr %183, align 8, !tbaa !38
  %185 = getelementptr inbounds %struct.sv, ptr %181, i64 0, i32 2
  %186 = load i32, ptr %185, align 4, !tbaa !13
  %187 = and i32 %186, -524289
  store i32 %187, ptr %185, align 4, !tbaa !13
  br label %188

188:                                              ; preds = %179, %176
  %189 = phi i64 [ 0, %176 ], [ %184, %179 ]
  %190 = phi ptr [ @PL_sv_undef, %176 ], [ %181, %179 ]
  %191 = load ptr, ptr %63, align 8, !tbaa !105
  br i1 %44, label %240, label %192

192:                                              ; preds = %188
  %193 = load ptr, ptr %42, align 8, !tbaa !107
  %194 = icmp eq ptr %191, null
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.463, i32 noundef 12977) #15
  br label %196

196:                                              ; preds = %195, %192
  %197 = icmp ugt ptr %193, %191
  br i1 %197, label %198, label %238

198:                                              ; preds = %196
  %199 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %200 = ptrtoint ptr %193 to i64
  br label %201

201:                                              ; preds = %234, %198
  %202 = phi ptr [ %236, %234 ], [ %191, %198 ]
  %203 = load i8, ptr %202, align 1, !tbaa !17
  switch i8 %203, label %204 [
    i8 32, label %234
    i8 13, label %234
    i8 12, label %234
    i8 11, label %234
    i8 10, label %234
    i8 9, label %234
  ]

204:                                              ; preds = %201
  %205 = load i32, ptr %199, align 8, !tbaa !50
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %232, label %207

207:                                              ; preds = %204
  %208 = ptrtoint ptr %202 to i64
  %209 = sub i64 %200, %208
  %210 = zext i8 %203 to i64
  %211 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %210
  %212 = load i8, ptr %211, align 1, !tbaa !17
  %213 = zext i8 %212 to i64
  %214 = icmp slt i64 %209, %213
  br i1 %214, label %238, label %215

215:                                              ; preds = %207
  switch i8 %203, label %238 [
    i8 -62, label %228
    i8 -30, label %216
  ]

216:                                              ; preds = %215
  %217 = getelementptr inbounds i8, ptr %202, i64 1
  %218 = load i8, ptr %217, align 1, !tbaa !17
  %219 = icmp eq i8 %218, -128
  br i1 %219, label %220, label %238

220:                                              ; preds = %216
  %221 = getelementptr inbounds i8, ptr %202, i64 2
  %222 = load i8, ptr %221, align 1, !tbaa !17
  %223 = and i8 %222, -2
  %224 = icmp eq i8 %223, -114
  %225 = icmp eq i8 %223, -88
  %226 = or i1 %224, %225
  %227 = freeze i1 %226
  br i1 %227, label %234, label %238

228:                                              ; preds = %215
  %229 = getelementptr inbounds i8, ptr %202, i64 1
  %230 = load i8, ptr %229, align 1, !tbaa !17
  %231 = icmp eq i8 %230, -123
  br i1 %231, label %234, label %238

232:                                              ; preds = %204
  %233 = icmp eq i8 %203, -123
  br i1 %233, label %234, label %238

234:                                              ; preds = %232, %228, %220, %201, %201, %201, %201, %201, %201
  %235 = phi i64 [ 1, %232 ], [ 1, %201 ], [ 3, %220 ], [ 2, %228 ], [ 1, %201 ], [ 1, %201 ], [ 1, %201 ], [ 1, %201 ], [ 1, %201 ]
  %236 = getelementptr inbounds i8, ptr %202, i64 %235
  %237 = icmp ult ptr %236, %193
  br i1 %237, label %201, label %238

238:                                              ; preds = %207, %215, %216, %220, %228, %232, %234, %196
  %239 = phi ptr [ %191, %196 ], [ %202, %232 ], [ %202, %228 ], [ %202, %220 ], [ %202, %216 ], [ %202, %215 ], [ %202, %207 ], [ %236, %234 ]
  store ptr %239, ptr %63, align 8, !tbaa !105
  br label %240

240:                                              ; preds = %238, %188
  %241 = phi ptr [ %239, %238 ], [ %191, %188 ]
  %242 = load i8, ptr %241, align 1, !tbaa !17
  %243 = icmp ne i8 %242, 94
  br i1 %243, label %297, label %244

244:                                              ; preds = %240
  %245 = getelementptr inbounds i8, ptr %241, i64 1
  store ptr %245, ptr %63, align 8, !tbaa !105
  %246 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 14
  %247 = load i32, ptr %246, align 8, !tbaa !108
  %248 = icmp slt i32 %247, 10
  br i1 %248, label %249, label %251

249:                                              ; preds = %244
  %250 = add nsw i32 %247, 1
  store i32 %250, ptr %246, align 8, !tbaa !108
  br label %251

251:                                              ; preds = %249, %244
  br i1 %44, label %297, label %252

252:                                              ; preds = %251
  %253 = load ptr, ptr %42, align 8, !tbaa !107
  %254 = icmp ugt ptr %253, %245
  br i1 %254, label %255, label %295

255:                                              ; preds = %252
  %256 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %257 = ptrtoint ptr %253 to i64
  br label %258

258:                                              ; preds = %291, %255
  %259 = phi ptr [ %293, %291 ], [ %245, %255 ]
  %260 = load i8, ptr %259, align 1, !tbaa !17
  switch i8 %260, label %261 [
    i8 32, label %291
    i8 13, label %291
    i8 12, label %291
    i8 11, label %291
    i8 10, label %291
    i8 9, label %291
  ]

261:                                              ; preds = %258
  %262 = load i32, ptr %256, align 8, !tbaa !50
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %289, label %264

264:                                              ; preds = %261
  %265 = ptrtoint ptr %259 to i64
  %266 = sub i64 %257, %265
  %267 = zext i8 %260 to i64
  %268 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %267
  %269 = load i8, ptr %268, align 1, !tbaa !17
  %270 = zext i8 %269 to i64
  %271 = icmp slt i64 %266, %270
  br i1 %271, label %295, label %272

272:                                              ; preds = %264
  switch i8 %260, label %295 [
    i8 -62, label %285
    i8 -30, label %273
  ]

273:                                              ; preds = %272
  %274 = getelementptr inbounds i8, ptr %259, i64 1
  %275 = load i8, ptr %274, align 1, !tbaa !17
  %276 = icmp eq i8 %275, -128
  br i1 %276, label %277, label %295

277:                                              ; preds = %273
  %278 = getelementptr inbounds i8, ptr %259, i64 2
  %279 = load i8, ptr %278, align 1, !tbaa !17
  %280 = and i8 %279, -2
  %281 = icmp eq i8 %280, -114
  %282 = icmp eq i8 %280, -88
  %283 = or i1 %281, %282
  %284 = freeze i1 %283
  br i1 %284, label %291, label %295

285:                                              ; preds = %272
  %286 = getelementptr inbounds i8, ptr %259, i64 1
  %287 = load i8, ptr %286, align 1, !tbaa !17
  %288 = icmp eq i8 %287, -123
  br i1 %288, label %291, label %295

289:                                              ; preds = %261
  %290 = icmp eq i8 %260, -123
  br i1 %290, label %291, label %295

291:                                              ; preds = %289, %285, %277, %258, %258, %258, %258, %258, %258
  %292 = phi i64 [ 1, %289 ], [ 1, %258 ], [ 3, %277 ], [ 2, %285 ], [ 1, %258 ], [ 1, %258 ], [ 1, %258 ], [ 1, %258 ], [ 1, %258 ]
  %293 = getelementptr inbounds i8, ptr %259, i64 %292
  %294 = icmp ult ptr %293, %253
  br i1 %294, label %258, label %295

295:                                              ; preds = %264, %272, %273, %277, %285, %289, %291, %252
  %296 = phi ptr [ %245, %252 ], [ %259, %289 ], [ %259, %285 ], [ %259, %277 ], [ %259, %273 ], [ %259, %272 ], [ %259, %264 ], [ %293, %291 ]
  store ptr %296, ptr %63, align 8, !tbaa !105
  br label %297

297:                                              ; preds = %251, %295, %240
  %298 = phi ptr [ %296, %295 ], [ %245, %251 ], [ %241, %240 ]
  %299 = phi i8 [ 1, %295 ], [ 1, %251 ], [ 0, %240 ]
  %300 = phi i1 [ false, %295 ], [ false, %251 ], [ %4, %240 ]
  %301 = load ptr, ptr %61, align 8, !tbaa !112
  %302 = icmp eq ptr %301, %168
  br i1 %302, label %363, label %303

303:                                              ; preds = %297
  %304 = load ptr, ptr %42, align 8, !tbaa !107
  %305 = icmp ult ptr %298, %304
  br i1 %305, label %306, label %363

306:                                              ; preds = %303
  %307 = load i8, ptr %298, align 1, !tbaa !17
  switch i8 %307, label %363 [
    i8 58, label %308
    i8 61, label %308
    i8 46, label %308
  ]

308:                                              ; preds = %306, %306, %306
  %309 = getelementptr inbounds i8, ptr %298, i64 1
  %310 = load i8, ptr %309, align 1, !tbaa !17
  %311 = icmp eq i8 %310, 94
  %312 = getelementptr inbounds i8, ptr %298, i64 2
  %313 = select i1 %311, ptr %312, ptr %309
  br label %314

314:                                              ; preds = %314, %308
  %315 = phi ptr [ %313, %308 ], [ %322, %314 ]
  %316 = load i8, ptr %315, align 1, !tbaa !17
  %317 = zext i8 %316 to i64
  %318 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %317
  %319 = load i32, ptr %318, align 4, !tbaa !73
  %320 = and i32 %319, 16385
  %321 = icmp eq i32 %320, 16385
  %322 = getelementptr inbounds i8, ptr %315, i64 1
  br i1 %321, label %314, label %323, !llvm.loop !403

323:                                              ; preds = %314
  %324 = icmp eq i8 %316, 0
  br i1 %324, label %363, label %325

325:                                              ; preds = %323
  %326 = sext i8 %307 to i32
  %327 = icmp eq i8 %307, %316
  br i1 %327, label %328, label %363

328:                                              ; preds = %325
  %329 = load i8, ptr %322, align 1, !tbaa !17
  %330 = icmp eq i8 %329, 93
  br i1 %330, label %331, label %363

331:                                              ; preds = %328
  %332 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %333 = load ptr, ptr %332, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %333, i32 noundef 11) #15
  %334 = getelementptr inbounds i8, ptr %315, i64 2
  %335 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %336 = load ptr, ptr %335, align 8, !tbaa !65
  %337 = ptrtoint ptr %334 to i64
  %338 = ptrtoint ptr %336 to i64
  %339 = sub i64 %337, %338
  %340 = load ptr, ptr %61, align 8, !tbaa !112
  %341 = icmp eq ptr %340, %168
  br i1 %341, label %342, label %345

342:                                              ; preds = %331
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.371, i32 noundef 14306) #15
  %343 = load ptr, ptr %335, align 8, !tbaa !65
  %344 = ptrtoint ptr %343 to i64
  br label %345

345:                                              ; preds = %331, %342
  %346 = phi i64 [ %338, %331 ], [ %344, %342 ]
  %347 = phi ptr [ %336, %331 ], [ %343, %342 ]
  %348 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %349 = load i32, ptr %348, align 8, !tbaa !50
  %350 = icmp ne i32 %349, 0
  %351 = zext i1 %350 to i32
  %352 = load ptr, ptr %42, align 8, !tbaa !107
  %353 = ptrtoint ptr %352 to i64
  %354 = add i64 %346, %339
  %355 = sub i64 %353, %354
  %356 = getelementptr inbounds i8, ptr %347, i64 %339
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.513, i32 noundef %326, i32 noundef %326, i32 noundef %351, i64 noundef %339, ptr noundef %347, i32 noundef %351, i64 noundef %355, ptr noundef %356) #15
  %357 = load ptr, ptr %332, align 8, !tbaa !122
  %358 = icmp eq ptr %357, null
  br i1 %358, label %363, label %359

359:                                              ; preds = %345
  %360 = getelementptr inbounds %struct.sv, ptr %357, i64 0, i32 1
  %361 = load i32, ptr %360, align 8, !tbaa !37
  %362 = add i32 %361, 1
  store i32 %362, ptr %360, align 8, !tbaa !37
  br label %363

363:                                              ; preds = %359, %345, %323, %325, %328, %306, %303, %297
  %364 = load ptr, ptr %63, align 8, !tbaa !105
  br i1 %3, label %365, label %370

365:                                              ; preds = %363
  %366 = load ptr, ptr %42, align 8, !tbaa !107
  %367 = icmp ugt ptr %366, %364
  %368 = getelementptr inbounds i8, ptr %364, i64 1
  %369 = select i1 %367, ptr %368, ptr %43
  br label %370

370:                                              ; preds = %365, %363
  %371 = phi ptr [ %43, %363 ], [ %369, %365 ]
  %372 = load i8, ptr %364, align 1, !tbaa !17
  %373 = icmp eq i8 %372, 93
  br i1 %373, label %445, label %374

374:                                              ; preds = %2096, %1980, %2043, %1806, %930, %2376, %2379, %2045, %370
  %375 = phi i8 [ %1605, %1806 ], [ %1885, %2045 ], [ %1885, %2096 ], [ %448, %930 ], [ %60, %370 ], [ %1885, %2379 ], [ %1885, %2376 ], [ %1885, %2043 ], [ %1885, %1980 ]
  %376 = phi i8 [ %449, %1806 ], [ %1886, %2045 ], [ %1886, %2096 ], [ %449, %930 ], [ 0, %370 ], [ %1886, %2379 ], [ %1886, %2376 ], [ %1886, %2043 ], [ %1886, %1980 ]
  %377 = phi i32 [ %461, %1806 ], [ %1887, %2045 ], [ %1887, %2096 ], [ %461, %930 ], [ 0, %370 ], [ %1887, %2379 ], [ %1887, %2376 ], [ %1887, %2043 ], [ %1887, %1980 ]
  %378 = phi ptr [ %1676, %1806 ], [ %1884, %2045 ], [ %1884, %2096 ], [ %451, %930 ], [ null, %370 ], [ %2381, %2379 ], [ %1884, %2376 ], [ %1884, %2043 ], [ %1884, %1980 ]
  %379 = phi i8 [ %1604, %1806 ], [ %1888, %2045 ], [ %1888, %2096 ], [ %452, %930 ], [ 0, %370 ], [ %1888, %2379 ], [ %1888, %2376 ], [ %1888, %2043 ], [ %1888, %1980 ]
  %380 = phi ptr [ %1603, %1806 ], [ %1889, %2045 ], [ %1889, %2096 ], [ %453, %930 ], [ null, %370 ], [ %1889, %2379 ], [ %1889, %2376 ], [ %1889, %2043 ], [ %1889, %1980 ]
  %381 = phi ptr [ %454, %1806 ], [ %454, %2045 ], [ %2097, %2096 ], [ %931, %930 ], [ null, %370 ], [ %454, %2379 ], [ %454, %2376 ], [ %454, %2043 ], [ %454, %1980 ]
  %382 = phi i64 [ %1677, %1806 ], [ %1883, %2045 ], [ %2098, %2096 ], [ %932, %930 ], [ 0, %370 ], [ %1883, %2379 ], [ %1883, %2376 ], [ %2044, %2043 ], [ %1883, %1980 ]
  %383 = phi i8 [ %1707, %1806 ], [ %1882, %2045 ], [ %1882, %2096 ], [ %456, %930 ], [ 0, %370 ], [ %1882, %2379 ], [ %1882, %2376 ], [ %1882, %2043 ], [ %1882, %1980 ]
  %384 = phi ptr [ %464, %1806 ], [ %464, %2045 ], [ %464, %2096 ], [ %464, %930 ], [ null, %370 ], [ %464, %2379 ], [ %464, %2376 ], [ %464, %2043 ], [ %464, %1980 ]
  %385 = phi i64 [ %1602, %1806 ], [ %1890, %2045 ], [ %1890, %2096 ], [ -1, %930 ], [ -1, %370 ], [ %1890, %2379 ], [ %1890, %2376 ], [ %1890, %2043 ], [ %1890, %1980 ]
  %386 = phi i64 [ 0, %1806 ], [ %2046, %2045 ], [ %2046, %2096 ], [ %458, %930 ], [ 0, %370 ], [ 0, %2379 ], [ 0, %2376 ], [ 0, %2043 ], [ 1, %1980 ]
  %387 = phi i64 [ %459, %1806 ], [ %2047, %2045 ], [ %459, %2096 ], [ %459, %930 ], [ 3735928559, %370 ], [ %2047, %2379 ], [ %2047, %2376 ], [ %1893, %2043 ], [ %1893, %1980 ]
  %388 = load ptr, ptr %63, align 8, !tbaa !105
  %389 = icmp ult ptr %388, %371
  br i1 %389, label %390, label %2382

390:                                              ; preds = %374
  br i1 %44, label %439, label %391

391:                                              ; preds = %390
  %392 = load ptr, ptr %42, align 8, !tbaa !107
  %393 = icmp eq ptr %388, null
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.463, i32 noundef 12977) #15
  br label %395

395:                                              ; preds = %394, %391
  %396 = icmp ugt ptr %392, %388
  br i1 %396, label %397, label %437

397:                                              ; preds = %395
  %398 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %399 = ptrtoint ptr %392 to i64
  br label %400

400:                                              ; preds = %433, %397
  %401 = phi ptr [ %435, %433 ], [ %388, %397 ]
  %402 = load i8, ptr %401, align 1, !tbaa !17
  switch i8 %402, label %403 [
    i8 32, label %433
    i8 13, label %433
    i8 12, label %433
    i8 11, label %433
    i8 10, label %433
    i8 9, label %433
  ]

403:                                              ; preds = %400
  %404 = load i32, ptr %398, align 8, !tbaa !50
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %431, label %406

406:                                              ; preds = %403
  %407 = ptrtoint ptr %401 to i64
  %408 = sub i64 %399, %407
  %409 = zext i8 %402 to i64
  %410 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %409
  %411 = load i8, ptr %410, align 1, !tbaa !17
  %412 = zext i8 %411 to i64
  %413 = icmp slt i64 %408, %412
  br i1 %413, label %437, label %414

414:                                              ; preds = %406
  switch i8 %402, label %437 [
    i8 -62, label %427
    i8 -30, label %415
  ]

415:                                              ; preds = %414
  %416 = getelementptr inbounds i8, ptr %401, i64 1
  %417 = load i8, ptr %416, align 1, !tbaa !17
  %418 = icmp eq i8 %417, -128
  br i1 %418, label %419, label %437

419:                                              ; preds = %415
  %420 = getelementptr inbounds i8, ptr %401, i64 2
  %421 = load i8, ptr %420, align 1, !tbaa !17
  %422 = and i8 %421, -2
  %423 = icmp eq i8 %422, -114
  %424 = icmp eq i8 %422, -88
  %425 = or i1 %423, %424
  %426 = freeze i1 %425
  br i1 %426, label %433, label %437

427:                                              ; preds = %414
  %428 = getelementptr inbounds i8, ptr %401, i64 1
  %429 = load i8, ptr %428, align 1, !tbaa !17
  %430 = icmp eq i8 %429, -123
  br i1 %430, label %433, label %437

431:                                              ; preds = %403
  %432 = icmp eq i8 %402, -123
  br i1 %432, label %433, label %437

433:                                              ; preds = %431, %427, %419, %400, %400, %400, %400, %400, %400
  %434 = phi i64 [ 1, %431 ], [ 1, %400 ], [ 3, %419 ], [ 2, %427 ], [ 1, %400 ], [ 1, %400 ], [ 1, %400 ], [ 1, %400 ], [ 1, %400 ]
  %435 = getelementptr inbounds i8, ptr %401, i64 %434
  %436 = icmp ult ptr %435, %392
  br i1 %436, label %400, label %437

437:                                              ; preds = %406, %414, %415, %419, %427, %431, %433, %395
  %438 = phi ptr [ %388, %395 ], [ %401, %431 ], [ %401, %427 ], [ %401, %419 ], [ %401, %415 ], [ %401, %414 ], [ %401, %406 ], [ %435, %433 ]
  store ptr %438, ptr %63, align 8, !tbaa !105
  br label %439

439:                                              ; preds = %437, %390
  %440 = phi ptr [ %438, %437 ], [ %388, %390 ]
  %441 = load i8, ptr %440, align 1, !tbaa !17
  %442 = icmp eq i8 %441, 93
  br i1 %442, label %2382, label %443

443:                                              ; preds = %439
  %444 = load i64, ptr %11, align 8, !tbaa !9
  br label %445

445:                                              ; preds = %443, %370
  %446 = phi ptr [ %364, %370 ], [ %440, %443 ]
  %447 = phi i64 [ 3735928559, %370 ], [ %444, %443 ]
  %448 = phi i8 [ %60, %370 ], [ %375, %443 ]
  %449 = phi i8 [ 0, %370 ], [ %376, %443 ]
  %450 = phi i32 [ 0, %370 ], [ %377, %443 ]
  %451 = phi ptr [ null, %370 ], [ %378, %443 ]
  %452 = phi i8 [ 0, %370 ], [ %379, %443 ]
  %453 = phi ptr [ null, %370 ], [ %380, %443 ]
  %454 = phi ptr [ null, %370 ], [ %381, %443 ]
  %455 = phi i64 [ 0, %370 ], [ %382, %443 ]
  %456 = phi i8 [ 0, %370 ], [ %383, %443 ]
  %457 = phi ptr [ null, %370 ], [ %384, %443 ]
  %458 = phi i64 [ 0, %370 ], [ %386, %443 ]
  %459 = phi i64 [ 3735928559, %370 ], [ %387, %443 ]
  %460 = icmp eq i64 %458, 0
  %461 = select i1 %460, i32 0, i32 %450
  %462 = zext i1 %460 to i64
  %463 = add i64 %455, %462
  %464 = select i1 %460, ptr %446, ptr %457
  %465 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %466 = load i32, ptr %465, align 8, !tbaa !50
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %480, label %468

468:                                              ; preds = %445
  %469 = load ptr, ptr %42, align 8, !tbaa !107
  %470 = ptrtoint ptr %469 to i64
  %471 = ptrtoint ptr %446 to i64
  %472 = sub i64 %470, %471
  %473 = call zeroext i1 @Perl_ckwarn(i32 noundef 44) #15
  %474 = xor i1 %473, true
  %475 = zext i1 %474 to i32
  %476 = call i64 @Perl_utf8n_to_uvchr(ptr noundef nonnull %446, i64 noundef %472, ptr noundef nonnull %12, i32 noundef %475) #15
  %477 = load i64, ptr %12, align 8, !tbaa !9
  %478 = load ptr, ptr %63, align 8, !tbaa !105
  %479 = getelementptr inbounds i8, ptr %478, i64 %477
  store ptr %479, ptr %63, align 8, !tbaa !105
  br label %484

480:                                              ; preds = %445
  %481 = getelementptr inbounds i8, ptr %446, i64 1
  store ptr %481, ptr %63, align 8, !tbaa !105
  %482 = load i8, ptr %446, align 1, !tbaa !17
  %483 = zext i8 %482 to i64
  br label %484

484:                                              ; preds = %480, %468
  %485 = phi ptr [ %481, %480 ], [ %479, %468 ]
  %486 = phi i64 [ %483, %480 ], [ %476, %468 ]
  store i64 %486, ptr %11, align 8
  switch i64 %486, label %1807 [
    i64 91, label %487
    i64 92, label %715
  ]

487:                                              ; preds = %484
  %488 = load ptr, ptr %42, align 8, !tbaa !107
  %489 = icmp ult ptr %485, %488
  br i1 %489, label %490, label %1807

490:                                              ; preds = %487
  %491 = load i8, ptr %485, align 1, !tbaa !17
  switch i8 %491, label %1807 [
    i8 58, label %492
    i8 61, label %492
    i8 46, label %492
  ]

492:                                              ; preds = %490, %490, %490
  %493 = ptrtoint ptr %485 to i64
  %494 = getelementptr inbounds i8, ptr %485, i64 1
  %495 = ptrtoint ptr %488 to i64
  %496 = icmp ult ptr %494, %488
  br i1 %496, label %497, label %1807

497:                                              ; preds = %492
  switch i8 %491, label %1807 [
    i8 58, label %498
    i8 61, label %498
    i8 46, label %498
  ]

498:                                              ; preds = %497, %497, %497
  %499 = zext i8 %491 to i32
  br label %500

500:                                              ; preds = %504, %498
  %501 = phi ptr [ %485, %498 ], [ %502, %504 ]
  %502 = getelementptr inbounds i8, ptr %501, i64 1
  store ptr %502, ptr %63, align 8, !tbaa !105
  %503 = icmp ult ptr %502, %488
  br i1 %503, label %504, label %507

504:                                              ; preds = %500
  %505 = load i8, ptr %502, align 1, !tbaa !17
  %506 = icmp eq i8 %505, %491
  br i1 %506, label %507, label %500, !llvm.loop !404

507:                                              ; preds = %504, %500
  %508 = icmp eq ptr %502, %488
  br i1 %508, label %509, label %544

509:                                              ; preds = %507
  br i1 %6, label %510, label %543

510:                                              ; preds = %509
  store ptr %485, ptr %63, align 8, !tbaa !105
  %511 = sub i64 %495, %493
  %512 = getelementptr i8, ptr %485, i64 %511
  br label %516

513:                                              ; preds = %516
  %514 = getelementptr inbounds i8, ptr %517, i64 1
  store ptr %514, ptr %63, align 8, !tbaa !105
  %515 = icmp eq ptr %514, %512
  br i1 %515, label %520, label %516, !llvm.loop !405

516:                                              ; preds = %513, %510
  %517 = phi ptr [ %514, %513 ], [ %485, %510 ]
  %518 = load i8, ptr %517, align 1, !tbaa !17
  %519 = icmp eq i8 %518, 93
  br i1 %519, label %520, label %513

520:                                              ; preds = %516, %513
  %521 = phi ptr [ %512, %513 ], [ %517, %516 ]
  %522 = load ptr, ptr %61, align 8, !tbaa !112
  %523 = icmp eq ptr %522, %168
  br i1 %523, label %530, label %524

524:                                              ; preds = %520
  %525 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %526 = load ptr, ptr %525, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %526, i32 noundef 11) #15
  %527 = load ptr, ptr %63, align 8, !tbaa !105
  %528 = load ptr, ptr %42, align 8, !tbaa !107
  %529 = ptrtoint ptr %528 to i64
  br label %530

530:                                              ; preds = %524, %520
  %531 = phi i64 [ %495, %520 ], [ %529, %524 ]
  %532 = phi ptr [ %521, %520 ], [ %527, %524 ]
  %533 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %534 = load ptr, ptr %533, align 8, !tbaa !65
  %535 = ptrtoint ptr %532 to i64
  %536 = ptrtoint ptr %534 to i64
  %537 = sub i64 %535, %536
  %538 = load i32, ptr %465, align 8, !tbaa !50
  %539 = icmp ne i32 %538, 0
  %540 = zext i1 %539 to i32
  %541 = sub i64 %531, %535
  %542 = getelementptr inbounds i8, ptr %534, i64 %537
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %539, ptr noundef nonnull @.str.550, ptr nonnull poison, i32 noundef %499, i32 noundef %540, i64 noundef %537, ptr noundef %534, i32 noundef %540, i64 noundef %541, ptr noundef %542)
  br label %543

543:                                              ; preds = %530, %509
  store ptr %485, ptr %63, align 8, !tbaa !105
  br label %1807

544:                                              ; preds = %507
  %545 = getelementptr inbounds i8, ptr %501, i64 2
  store ptr %545, ptr %63, align 8, !tbaa !105
  %546 = load i8, ptr %502, align 1, !tbaa !17
  %547 = icmp eq i8 %546, %491
  br i1 %547, label %550, label %548

548:                                              ; preds = %544
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.551, i32 noundef 13103) #15
  %549 = load ptr, ptr %63, align 8, !tbaa !105
  br label %550

550:                                              ; preds = %548, %544
  %551 = phi ptr [ %545, %544 ], [ %549, %548 ]
  %552 = load i8, ptr %551, align 1, !tbaa !17
  %553 = icmp eq i8 %552, 93
  br i1 %553, label %554, label %690

554:                                              ; preds = %550
  %555 = getelementptr inbounds i8, ptr %551, i64 1
  store ptr %555, ptr %63, align 8, !tbaa !105
  %556 = load i8, ptr %485, align 1, !tbaa !17
  %557 = icmp eq i8 %556, 58
  br i1 %557, label %558, label %666

558:                                              ; preds = %554
  %559 = load i8, ptr %494, align 1, !tbaa !17
  %560 = icmp eq i8 %559, 94
  %561 = getelementptr inbounds i8, ptr %485, i64 2
  %562 = select i1 %560, ptr %561, ptr %494
  %563 = ptrtoint ptr %502 to i64
  %564 = ptrtoint ptr %562 to i64
  %565 = sub i64 %563, %564
  %566 = trunc i64 %565 to i32
  switch i32 %566, label %623 [
    i32 4, label %567
    i32 5, label %570
    i32 6, label %620
  ]

567:                                              ; preds = %558
  %568 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %562, ptr noundef nonnull dereferenceable(4) @.str.552, i64 4)
  %569 = icmp eq i32 %568, 0
  br i1 %569, label %649, label %623

570:                                              ; preds = %558
  %571 = getelementptr inbounds i8, ptr %562, i64 4
  %572 = load i8, ptr %571, align 1, !tbaa !17
  %573 = sext i8 %572 to i32
  switch i32 %573, label %623 [
    i32 97, label %574
    i32 101, label %577
    i32 104, label %580
    i32 105, label %583
    i32 107, label %586
    i32 108, label %589
    i32 109, label %592
    i32 114, label %595
    i32 116, label %611
  ]

574:                                              ; preds = %570
  %575 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %562, ptr noundef nonnull dereferenceable(4) @.str.553, i64 4)
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %649, label %623

577:                                              ; preds = %570
  %578 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %562, ptr noundef nonnull dereferenceable(4) @.str.554, i64 4)
  %579 = icmp eq i32 %578, 0
  br i1 %579, label %649, label %623

580:                                              ; preds = %570
  %581 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %562, ptr noundef nonnull dereferenceable(4) @.str.555, i64 4)
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %649, label %623

583:                                              ; preds = %570
  %584 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %562, ptr noundef nonnull dereferenceable(4) @.str.556, i64 4)
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %649, label %623

586:                                              ; preds = %570
  %587 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %562, ptr noundef nonnull dereferenceable(4) @.str.557, i64 4)
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %649, label %623

589:                                              ; preds = %570
  %590 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %562, ptr noundef nonnull dereferenceable(4) @.str.558, i64 4)
  %591 = icmp eq i32 %590, 0
  br i1 %591, label %649, label %623

592:                                              ; preds = %570
  %593 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %562, ptr noundef nonnull dereferenceable(4) @.str.559, i64 4)
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %649, label %623

595:                                              ; preds = %570
  %596 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %562, ptr noundef nonnull dereferenceable(4) @.str.560, i64 4)
  %597 = icmp eq i32 %596, 0
  br i1 %597, label %598, label %603

598:                                              ; preds = %595
  %599 = load i32, ptr %0, align 8, !tbaa !66
  %600 = and i32 %599, 4
  %601 = icmp eq i32 %600, 0
  %602 = select i1 %601, i64 6, i64 18
  br label %649

603:                                              ; preds = %595
  %604 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %562, ptr noundef nonnull dereferenceable(4) @.str.561, i64 4)
  %605 = icmp eq i32 %604, 0
  br i1 %605, label %606, label %623

606:                                              ; preds = %603
  %607 = load i32, ptr %0, align 8, !tbaa !66
  %608 = and i32 %607, 4
  %609 = icmp eq i32 %608, 0
  %610 = select i1 %609, i64 8, i64 18
  br label %649

611:                                              ; preds = %570
  %612 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %562, ptr noundef nonnull dereferenceable(4) @.str.562, i64 4)
  %613 = icmp eq i32 %612, 0
  br i1 %613, label %649, label %614

614:                                              ; preds = %611
  %615 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %562, ptr noundef nonnull dereferenceable(4) @.str.563, i64 4)
  %616 = icmp eq i32 %615, 0
  br i1 %616, label %649, label %617

617:                                              ; preds = %614
  %618 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %562, ptr noundef nonnull dereferenceable(4) @.str.564, i64 4)
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %649, label %623

620:                                              ; preds = %558
  %621 = call i32 @bcmp(ptr noundef nonnull dereferenceable(6) %562, ptr noundef nonnull dereferenceable(6) @.str.565, i64 6)
  %622 = icmp eq i32 %621, 0
  br i1 %622, label %649, label %623

623:                                              ; preds = %620, %617, %603, %592, %589, %586, %583, %580, %577, %574, %570, %567, %558
  %624 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %625 = load ptr, ptr %624, align 8, !tbaa !65
  %626 = ptrtoint ptr %555 to i64
  %627 = ptrtoint ptr %625 to i64
  %628 = sub i64 %626, %627
  %629 = load ptr, ptr %61, align 8, !tbaa !112
  %630 = icmp eq ptr %629, %168
  br i1 %630, label %636, label %631

631:                                              ; preds = %623
  %632 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %633 = load ptr, ptr %632, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %633, i32 noundef 11) #15
  %634 = load ptr, ptr %624, align 8, !tbaa !65
  %635 = ptrtoint ptr %634 to i64
  br label %636

636:                                              ; preds = %631, %623
  %637 = phi i64 [ %635, %631 ], [ %627, %623 ]
  %638 = phi ptr [ %634, %631 ], [ %625, %623 ]
  %639 = load i32, ptr %465, align 8, !tbaa !50
  %640 = icmp ne i32 %639, 0
  %641 = zext i1 %640 to i32
  %642 = xor i64 %493, -1
  %643 = add i64 %563, %642
  %644 = load ptr, ptr %42, align 8, !tbaa !107
  %645 = ptrtoint ptr %644 to i64
  %646 = add i64 %637, %628
  %647 = sub i64 %645, %646
  %648 = getelementptr inbounds i8, ptr %638, i64 %628
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %640, ptr noundef nonnull @.str.566, ptr nonnull poison, i32 noundef %641, i64 noundef %643, ptr noundef nonnull %494, i32 noundef %641, i64 noundef %628, ptr noundef %638, i32 noundef %641, i64 noundef %647, ptr noundef %648)
  br label %649

649:                                              ; preds = %636, %620, %617, %614, %611, %606, %598, %592, %589, %586, %583, %580, %577, %574, %567
  %650 = phi i64 [ -1, %636 ], [ 12, %614 ], [ 2, %611 ], [ %602, %598 ], [ %610, %606 ], [ 0, %567 ], [ 4, %574 ], [ 20, %577 ], [ 16, %580 ], [ 28, %583 ], [ 22, %586 ], [ 26, %589 ], [ 14, %592 ], [ 10, %617 ], [ 24, %620 ]
  %651 = zext i1 %560 to i64
  %652 = add nsw i64 %650, %651
  %653 = shl i64 %565, 32
  %654 = ashr exact i64 %653, 32
  %655 = getelementptr inbounds i8, ptr %562, i64 %654
  %656 = load i8, ptr %655, align 1, !tbaa !17
  %657 = icmp eq i8 %656, 58
  br i1 %657, label %659, label %658

658:                                              ; preds = %649
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.567, i32 noundef 13187) #15
  br label %659

659:                                              ; preds = %658, %649
  %660 = add i64 %653, 4294967296
  %661 = ashr exact i64 %660, 32
  %662 = getelementptr inbounds i8, ptr %562, i64 %661
  %663 = load i8, ptr %662, align 1, !tbaa !17
  %664 = icmp eq i8 %663, 93
  br i1 %664, label %1599, label %665

665:                                              ; preds = %659
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.568, i32 noundef 13188) #15
  br label %1599

666:                                              ; preds = %554
  %667 = load ptr, ptr %61, align 8, !tbaa !112
  %668 = icmp eq ptr %667, %168
  br i1 %668, label %1807, label %669

669:                                              ; preds = %666, %672
  %670 = phi ptr [ %673, %672 ], [ %555, %666 ]
  %671 = load i8, ptr %670, align 1, !tbaa !17
  switch i8 %671, label %672 [
    i8 0, label %674
    i8 93, label %674
  ]

672:                                              ; preds = %669
  %673 = getelementptr inbounds i8, ptr %670, i64 1
  store ptr %673, ptr %63, align 8, !tbaa !105
  br label %669, !llvm.loop !406

674:                                              ; preds = %669, %669
  %675 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %676 = load ptr, ptr %675, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %676, i32 noundef 11) #15
  %677 = load ptr, ptr %63, align 8, !tbaa !105
  %678 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %679 = load ptr, ptr %678, align 8, !tbaa !65
  %680 = ptrtoint ptr %677 to i64
  %681 = ptrtoint ptr %679 to i64
  %682 = sub i64 %680, %681
  %683 = load i32, ptr %465, align 8, !tbaa !50
  %684 = icmp ne i32 %683, 0
  %685 = zext i1 %684 to i32
  %686 = load ptr, ptr %42, align 8, !tbaa !107
  %687 = ptrtoint ptr %686 to i64
  %688 = sub i64 %687, %680
  %689 = getelementptr inbounds i8, ptr %679, i64 %682
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %684, ptr noundef nonnull @.str.569, ptr nonnull poison, i32 noundef %499, i32 noundef %499, i32 noundef %685, i64 noundef %682, ptr noundef %679, i32 noundef %685, i64 noundef %688, ptr noundef %689)
  br label %1807

690:                                              ; preds = %550
  br i1 %6, label %691, label %714

691:                                              ; preds = %690
  %692 = load ptr, ptr %61, align 8, !tbaa !112
  %693 = icmp eq ptr %692, %168
  br i1 %693, label %698, label %694

694:                                              ; preds = %691
  %695 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %696 = load ptr, ptr %695, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %696, i32 noundef 11) #15
  %697 = load ptr, ptr %63, align 8, !tbaa !105
  br label %698

698:                                              ; preds = %694, %691
  %699 = phi ptr [ %551, %691 ], [ %697, %694 ]
  %700 = load ptr, ptr %42, align 8, !tbaa !107
  %701 = icmp ugt ptr %699, %700
  %702 = select i1 %701, ptr %700, ptr %699
  %703 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %704 = load ptr, ptr %703, align 8, !tbaa !65
  %705 = ptrtoint ptr %702 to i64
  %706 = ptrtoint ptr %704 to i64
  %707 = sub i64 %705, %706
  %708 = load i32, ptr %465, align 8, !tbaa !50
  %709 = icmp ne i32 %708, 0
  %710 = zext i1 %709 to i32
  %711 = ptrtoint ptr %700 to i64
  %712 = sub i64 %711, %705
  %713 = getelementptr inbounds i8, ptr %704, i64 %707
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.570, i32 noundef %710, i64 noundef %707, ptr noundef %704, i32 noundef %710, i64 noundef %712, ptr noundef %713) #15
  br label %714

714:                                              ; preds = %698, %690
  store ptr %485, ptr %63, align 8, !tbaa !105
  br label %1807

715:                                              ; preds = %484
  %716 = load i32, ptr %465, align 8, !tbaa !50
  %717 = icmp eq i32 %716, 0
  br i1 %717, label %733, label %718

718:                                              ; preds = %715
  %719 = load i8, ptr %485, align 1, !tbaa !17
  %720 = icmp sgt i8 %719, -1
  br i1 %720, label %733, label %721

721:                                              ; preds = %718
  %722 = load ptr, ptr %42, align 8, !tbaa !107
  %723 = ptrtoint ptr %722 to i64
  %724 = ptrtoint ptr %485 to i64
  %725 = sub i64 %723, %724
  %726 = call zeroext i1 @Perl_ckwarn(i32 noundef 44) #15
  %727 = xor i1 %726, true
  %728 = zext i1 %727 to i32
  %729 = call i64 @Perl_utf8n_to_uvchr(ptr noundef nonnull %485, i64 noundef %725, ptr noundef nonnull %12, i32 noundef %728) #15
  store i64 %729, ptr %11, align 8, !tbaa !9
  %730 = load i64, ptr %12, align 8, !tbaa !9
  %731 = load ptr, ptr %63, align 8, !tbaa !105
  %732 = getelementptr inbounds i8, ptr %731, i64 %730
  store ptr %732, ptr %63, align 8, !tbaa !105
  br label %737

733:                                              ; preds = %715, %718
  %734 = getelementptr inbounds i8, ptr %485, i64 1
  store ptr %734, ptr %63, align 8, !tbaa !105
  %735 = load i8, ptr %485, align 1, !tbaa !17
  %736 = zext i8 %735 to i64
  store i64 %736, ptr %11, align 8, !tbaa !9
  br label %737

737:                                              ; preds = %733, %721
  %738 = phi ptr [ %734, %733 ], [ %732, %721 ]
  %739 = phi i64 [ %736, %733 ], [ %729, %721 ]
  br i1 %44, label %758, label %740

740:                                              ; preds = %737
  %741 = add i64 %739, -9
  %742 = icmp ult i64 %741, 5
  br i1 %742, label %1821, label %743

743:                                              ; preds = %740
  %744 = icmp ugt i64 %739, 13
  br i1 %744, label %745, label %758

745:                                              ; preds = %743
  %746 = icmp eq i64 %739, 32
  br i1 %746, label %1821, label %747

747:                                              ; preds = %745
  %748 = icmp ugt i64 %739, 32
  br i1 %748, label %749, label %758

749:                                              ; preds = %747
  %750 = icmp eq i64 %739, 133
  br i1 %750, label %1821, label %751

751:                                              ; preds = %749
  %752 = icmp ugt i64 %739, 133
  br i1 %752, label %753, label %758

753:                                              ; preds = %751
  %754 = icmp eq i64 %739, 8206
  br i1 %754, label %1821, label %755

755:                                              ; preds = %753
  %756 = icmp ugt i64 %739, 8206
  br i1 %756, label %757, label %758

757:                                              ; preds = %755
  switch i64 %739, label %758 [
    i64 8233, label %1821
    i64 8232, label %1821
    i64 8207, label %1821
  ]

758:                                              ; preds = %757, %755, %751, %747, %743, %737
  %759 = trunc i64 %739 to i32
  switch i32 %759, label %1541 [
    i32 119, label %1601
    i32 87, label %760
    i32 115, label %761
    i32 83, label %762
    i32 100, label %763
    i32 68, label %764
    i32 118, label %765
    i32 86, label %766
    i32 104, label %767
    i32 72, label %768
    i32 78, label %769
    i32 112, label %933
    i32 80, label %933
    i32 110, label %1239
    i32 114, label %1240
    i32 116, label %1241
    i32 102, label %1242
    i32 98, label %1243
    i32 101, label %1244
    i32 97, label %1245
    i32 111, label %1246
    i32 120, label %1292
    i32 99, label %1338
    i32 48, label %1346
    i32 49, label %1346
    i32 50, label %1346
    i32 51, label %1346
    i32 52, label %1346
    i32 53, label %1346
    i32 54, label %1346
    i32 55, label %1346
  ]

760:                                              ; preds = %758
  br label %1601

761:                                              ; preds = %758
  br label %1601

762:                                              ; preds = %758
  br label %1601

763:                                              ; preds = %758
  br label %1601

764:                                              ; preds = %758
  br label %1601

765:                                              ; preds = %758
  br label %1601

766:                                              ; preds = %758
  br label %1601

767:                                              ; preds = %758
  br label %1601

768:                                              ; preds = %758
  br label %1601

769:                                              ; preds = %758
  %770 = getelementptr inbounds i8, ptr %738, i64 -2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %21) #15
  %771 = call fastcc zeroext i1 @S_grok_bslash_N(ptr noundef nonnull %0, ptr noundef null, ptr noundef nonnull %11, ptr noundef nonnull %21, ptr noundef %1, i32 noundef %2)
  br i1 %771, label %928, label %772

772:                                              ; preds = %769
  %773 = load i32, ptr %1, align 4, !tbaa !73
  %774 = and i32 %773, 32
  %775 = icmp eq i32 %774, 0
  br i1 %775, label %797, label %776

776:                                              ; preds = %772
  %777 = load ptr, ptr %42, align 8, !tbaa !107
  %778 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %779 = load ptr, ptr %778, align 8, !tbaa !65
  %780 = ptrtoint ptr %777 to i64
  %781 = ptrtoint ptr %779 to i64
  %782 = sub i64 %780, %781
  %783 = load ptr, ptr %61, align 8, !tbaa !112
  %784 = icmp eq ptr %783, %168
  br i1 %784, label %789, label %785

785:                                              ; preds = %776
  %786 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %787 = load ptr, ptr %786, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %787, i32 noundef 11) #15
  %788 = load ptr, ptr %778, align 8, !tbaa !65
  br label %789

789:                                              ; preds = %785, %776
  %790 = phi ptr [ %788, %785 ], [ %779, %776 ]
  %791 = icmp sgt i64 %782, 127
  %792 = select i1 %791, i64 117, i64 %782
  %793 = select i1 %791, ptr @.str.20, ptr @.str.8
  %794 = load i32, ptr %465, align 8, !tbaa !50
  %795 = icmp ne i32 %794, 0
  %796 = zext i1 %795 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.503, i32 noundef %796, i64 noundef %792, ptr noundef %790, ptr noundef nonnull %793) #15
  br label %797

797:                                              ; preds = %789, %772
  %798 = load i32, ptr %21, align 4, !tbaa !73
  %799 = icmp slt i32 %798, 0
  br i1 %799, label %800, label %822

800:                                              ; preds = %797
  %801 = load ptr, ptr %61, align 8, !tbaa !112
  %802 = icmp eq ptr %801, %168
  br i1 %802, label %806, label %803

803:                                              ; preds = %800
  %804 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %805 = load ptr, ptr %804, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %805, i32 noundef 11) #15
  br label %806

806:                                              ; preds = %800, %803
  %807 = load ptr, ptr %63, align 8, !tbaa !105
  %808 = load ptr, ptr %42, align 8, !tbaa !107
  %809 = icmp ugt ptr %807, %808
  %810 = select i1 %809, ptr %808, ptr %807
  %811 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %812 = load ptr, ptr %811, align 8, !tbaa !65
  %813 = ptrtoint ptr %810 to i64
  %814 = ptrtoint ptr %812 to i64
  %815 = sub i64 %813, %814
  %816 = load i32, ptr %465, align 8, !tbaa !50
  %817 = icmp ne i32 %816, 0
  %818 = zext i1 %817 to i32
  %819 = ptrtoint ptr %808 to i64
  %820 = sub i64 %819, %813
  %821 = getelementptr inbounds i8, ptr %812, i64 %815
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.514, i32 noundef %818, i64 noundef %815, ptr noundef %812, i32 noundef %818, i64 noundef %820, ptr noundef %821) #15
  br label %930

822:                                              ; preds = %797
  %823 = icmp eq i32 %798, 0
  br i1 %823, label %824, label %867

824:                                              ; preds = %822
  br i1 %6, label %825, label %850

825:                                              ; preds = %824
  %826 = load ptr, ptr %63, align 8, !tbaa !105
  %827 = getelementptr inbounds i8, ptr %826, i64 1
  store ptr %827, ptr %63, align 8, !tbaa !105
  %828 = load ptr, ptr %61, align 8, !tbaa !112
  %829 = icmp eq ptr %828, %168
  br i1 %829, label %834, label %830

830:                                              ; preds = %825
  %831 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %832 = load ptr, ptr %831, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %832, i32 noundef 11) #15
  %833 = load ptr, ptr %63, align 8, !tbaa !105
  br label %834

834:                                              ; preds = %825, %830
  %835 = phi ptr [ %827, %825 ], [ %833, %830 ]
  %836 = load ptr, ptr %42, align 8, !tbaa !107
  %837 = icmp ugt ptr %835, %836
  %838 = select i1 %837, ptr %836, ptr %835
  %839 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %840 = load ptr, ptr %839, align 8, !tbaa !65
  %841 = ptrtoint ptr %838 to i64
  %842 = ptrtoint ptr %840 to i64
  %843 = sub i64 %841, %842
  %844 = load i32, ptr %465, align 8, !tbaa !50
  %845 = icmp ne i32 %844, 0
  %846 = zext i1 %845 to i32
  %847 = ptrtoint ptr %836 to i64
  %848 = sub i64 %847, %841
  %849 = getelementptr inbounds i8, ptr %840, i64 %843
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.515, i32 noundef %846, i64 noundef %843, ptr noundef %840, i32 noundef %846, i64 noundef %848, ptr noundef %849) #15
  br label %930

850:                                              ; preds = %824
  %851 = load ptr, ptr %61, align 8, !tbaa !112
  %852 = icmp eq ptr %851, %168
  br i1 %852, label %930, label %853

853:                                              ; preds = %850
  %854 = load ptr, ptr %63, align 8, !tbaa !105
  %855 = ptrtoint ptr %854 to i64
  %856 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %857 = load ptr, ptr %856, align 8, !tbaa !65
  %858 = ptrtoint ptr %857 to i64
  %859 = sub i64 %855, %858
  %860 = load i32, ptr %465, align 8, !tbaa !50
  %861 = icmp ne i32 %860, 0
  %862 = zext i1 %861 to i32
  %863 = load ptr, ptr %42, align 8, !tbaa !107
  %864 = ptrtoint ptr %863 to i64
  %865 = sub i64 %864, %855
  %866 = getelementptr inbounds i8, ptr %857, i64 %859
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.516, i32 noundef %862, i64 noundef %859, ptr noundef %857, i32 noundef %862, i64 noundef %865, ptr noundef %866) #15
  br label %930

867:                                              ; preds = %822
  %868 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 37
  %869 = load i32, ptr %868, align 4, !tbaa !104
  %870 = icmp eq i32 %869, 0
  br i1 %870, label %871, label %930

871:                                              ; preds = %867
  %872 = and i1 %243, %460
  br i1 %872, label %873, label %877

873:                                              ; preds = %871
  %874 = load ptr, ptr %63, align 8, !tbaa !105
  %875 = load i8, ptr %874, align 1, !tbaa !17
  %876 = icmp eq i8 %875, 45
  br i1 %876, label %877, label %920

877:                                              ; preds = %873, %871
  br i1 %6, label %878, label %903

878:                                              ; preds = %877
  %879 = load ptr, ptr %63, align 8, !tbaa !105
  %880 = getelementptr inbounds i8, ptr %879, i64 -1
  store ptr %880, ptr %63, align 8, !tbaa !105
  %881 = load ptr, ptr %61, align 8, !tbaa !112
  %882 = icmp eq ptr %881, %168
  br i1 %882, label %887, label %883

883:                                              ; preds = %878
  %884 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %885 = load ptr, ptr %884, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %885, i32 noundef 11) #15
  %886 = load ptr, ptr %63, align 8, !tbaa !105
  br label %887

887:                                              ; preds = %878, %883
  %888 = phi ptr [ %880, %878 ], [ %886, %883 ]
  %889 = load ptr, ptr %42, align 8, !tbaa !107
  %890 = icmp ugt ptr %888, %889
  %891 = select i1 %890, ptr %889, ptr %888
  %892 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %893 = load ptr, ptr %892, align 8, !tbaa !65
  %894 = ptrtoint ptr %891 to i64
  %895 = ptrtoint ptr %893 to i64
  %896 = sub i64 %894, %895
  %897 = load i32, ptr %465, align 8, !tbaa !50
  %898 = icmp ne i32 %897, 0
  %899 = zext i1 %898 to i32
  %900 = ptrtoint ptr %889 to i64
  %901 = sub i64 %900, %894
  %902 = getelementptr inbounds i8, ptr %893, i64 %896
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.517, i32 noundef %899, i64 noundef %896, ptr noundef %893, i32 noundef %899, i64 noundef %901, ptr noundef %902) #15
  br label %928

903:                                              ; preds = %877
  %904 = load ptr, ptr %61, align 8, !tbaa !112
  %905 = icmp eq ptr %904, %168
  br i1 %905, label %928, label %906

906:                                              ; preds = %903
  %907 = load ptr, ptr %63, align 8, !tbaa !105
  %908 = ptrtoint ptr %907 to i64
  %909 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %910 = load ptr, ptr %909, align 8, !tbaa !65
  %911 = ptrtoint ptr %910 to i64
  %912 = sub i64 %908, %911
  %913 = load i32, ptr %465, align 8, !tbaa !50
  %914 = icmp ne i32 %913, 0
  %915 = zext i1 %914 to i32
  %916 = load ptr, ptr %42, align 8, !tbaa !107
  %917 = ptrtoint ptr %916 to i64
  %918 = sub i64 %917, %908
  %919 = getelementptr inbounds i8, ptr %910, i64 %912
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.518, i32 noundef %915, i64 noundef %912, ptr noundef %910, i32 noundef %915, i64 noundef %918, ptr noundef %919) #15
  br label %928

920:                                              ; preds = %873
  %921 = ptrtoint ptr %874 to i64
  %922 = ptrtoint ptr %770 to i64
  %923 = sub i64 %921, %922
  %924 = call ptr @Perl_newSVpvn(ptr noundef nonnull %770, i64 noundef %923) #15
  %925 = load i32, ptr %21, align 4, !tbaa !73
  %926 = sext i32 %925 to i64
  %927 = call fastcc ptr @S_add_multi_match(ptr noundef %454, ptr noundef %924, i64 noundef %926)
  br label %930

928:                                              ; preds = %903, %906, %887, %769
  %929 = phi i8 [ 1, %769 ], [ %449, %887 ], [ %449, %906 ], [ %449, %903 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %21) #15
  br label %1807

930:                                              ; preds = %806, %867, %920, %834, %853, %850
  %931 = phi ptr [ %454, %806 ], [ %454, %834 ], [ %454, %850 ], [ %454, %853 ], [ %454, %867 ], [ %927, %920 ]
  %932 = add i64 %463, -1
  store i64 %447, ptr %11, align 8, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %21) #15
  br label %374

933:                                              ; preds = %758, %758
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %22) #15
  store i8 6, ptr %22, align 1, !tbaa !17
  %934 = load ptr, ptr %42, align 8, !tbaa !107
  %935 = icmp ult ptr %738, %934
  br i1 %935, label %963, label %936

936:                                              ; preds = %933
  %937 = load ptr, ptr %61, align 8, !tbaa !112
  %938 = icmp eq ptr %937, %168
  br i1 %938, label %946, label %939

939:                                              ; preds = %936
  %940 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %941 = load ptr, ptr %940, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %941, i32 noundef 11) #15
  %942 = load ptr, ptr %63, align 8, !tbaa !105
  %943 = load i64, ptr %11, align 8, !tbaa !9
  %944 = load ptr, ptr %42, align 8, !tbaa !107
  %945 = trunc i64 %943 to i32
  br label %946

946:                                              ; preds = %936, %939
  %947 = phi i32 [ %759, %936 ], [ %945, %939 ]
  %948 = phi ptr [ %934, %936 ], [ %944, %939 ]
  %949 = phi ptr [ %738, %936 ], [ %942, %939 ]
  %950 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %951 = load ptr, ptr %950, align 8, !tbaa !65
  %952 = ptrtoint ptr %949 to i64
  %953 = ptrtoint ptr %951 to i64
  %954 = sub i64 %952, %953
  %955 = load i32, ptr %465, align 8, !tbaa !50
  %956 = icmp ne i32 %955, 0
  %957 = zext i1 %956 to i32
  %958 = and i32 %947, 255
  %959 = ptrtoint ptr %948 to i64
  %960 = sub i64 %959, %952
  %961 = getelementptr inbounds i8, ptr %951, i64 %954
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %956, ptr noundef nonnull @.str.493, ptr nonnull poison, i32 noundef %958, i32 noundef %957, i64 noundef %954, ptr noundef %951, i32 noundef %957, i64 noundef %960, ptr noundef %961)
  %962 = load ptr, ptr %63, align 8, !tbaa !105
  br label %963

963:                                              ; preds = %946, %933
  %964 = phi ptr [ %962, %946 ], [ %738, %933 ]
  %965 = load i8, ptr %964, align 1, !tbaa !17
  %966 = icmp eq i8 %965, 123
  br i1 %966, label %967, label %1055

967:                                              ; preds = %963
  %968 = load i64, ptr %11, align 8, !tbaa !9
  %969 = trunc i64 %968 to i32
  %970 = getelementptr inbounds i8, ptr %964, i64 1
  store ptr %970, ptr %63, align 8, !tbaa !105
  %971 = call ptr @strchr(ptr noundef nonnull dereferenceable(1) %964, i32 noundef 125) #18
  %972 = icmp eq ptr %971, null
  br i1 %972, label %973, label %996

973:                                              ; preds = %967
  %974 = load ptr, ptr %61, align 8, !tbaa !112
  %975 = icmp eq ptr %974, %168
  br i1 %975, label %980, label %976

976:                                              ; preds = %973
  %977 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %978 = load ptr, ptr %977, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %978, i32 noundef 11) #15
  %979 = load ptr, ptr %63, align 8, !tbaa !105
  br label %980

980:                                              ; preds = %973, %976
  %981 = phi ptr [ %970, %973 ], [ %979, %976 ]
  %982 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %983 = load ptr, ptr %982, align 8, !tbaa !65
  %984 = ptrtoint ptr %981 to i64
  %985 = ptrtoint ptr %983 to i64
  %986 = sub i64 %984, %985
  %987 = load i32, ptr %465, align 8, !tbaa !50
  %988 = icmp ne i32 %987, 0
  %989 = zext i1 %988 to i32
  %990 = and i32 %969, 255
  %991 = load ptr, ptr %42, align 8, !tbaa !107
  %992 = ptrtoint ptr %991 to i64
  %993 = sub i64 %992, %984
  %994 = getelementptr inbounds i8, ptr %983, i64 %986
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %988, ptr noundef nonnull @.str.492, ptr nonnull poison, i32 noundef %990, i32 noundef %989, i64 noundef %986, ptr noundef %983, i32 noundef %989, i64 noundef %993, ptr noundef %994)
  %995 = load ptr, ptr %63, align 8, !tbaa !105
  br label %996

996:                                              ; preds = %980, %967
  %997 = phi ptr [ %995, %980 ], [ %970, %967 ]
  %998 = load i8, ptr %997, align 1, !tbaa !17
  %999 = zext i8 %998 to i64
  %1000 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %999
  %1001 = load i32, ptr %1000, align 4, !tbaa !73
  %1002 = and i32 %1001, 17408
  %1003 = icmp eq i32 %1002, 17408
  br i1 %1003, label %1004, label %1013

1004:                                             ; preds = %996, %1004
  %1005 = phi ptr [ %1006, %1004 ], [ %997, %996 ]
  %1006 = getelementptr inbounds i8, ptr %1005, i64 1
  store ptr %1006, ptr %63, align 8, !tbaa !105
  %1007 = load i8, ptr %1006, align 1, !tbaa !17
  %1008 = zext i8 %1007 to i64
  %1009 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1008
  %1010 = load i32, ptr %1009, align 4, !tbaa !73
  %1011 = and i32 %1010, 17408
  %1012 = icmp eq i32 %1011, 17408
  br i1 %1012, label %1004, label %1013, !llvm.loop !407

1013:                                             ; preds = %1004, %996
  %1014 = phi ptr [ %997, %996 ], [ %1006, %1004 ]
  %1015 = icmp eq ptr %971, %1014
  br i1 %1015, label %1016, label %1039

1016:                                             ; preds = %1013
  %1017 = load ptr, ptr %61, align 8, !tbaa !112
  %1018 = icmp eq ptr %1017, %168
  br i1 %1018, label %1023, label %1019

1019:                                             ; preds = %1016
  %1020 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1021 = load ptr, ptr %1020, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1021, i32 noundef 11) #15
  %1022 = load ptr, ptr %63, align 8, !tbaa !105
  br label %1023

1023:                                             ; preds = %1016, %1019
  %1024 = phi ptr [ %971, %1016 ], [ %1022, %1019 ]
  %1025 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1026 = load ptr, ptr %1025, align 8, !tbaa !65
  %1027 = ptrtoint ptr %1024 to i64
  %1028 = ptrtoint ptr %1026 to i64
  %1029 = sub i64 %1027, %1028
  %1030 = load i32, ptr %465, align 8, !tbaa !50
  %1031 = icmp ne i32 %1030, 0
  %1032 = zext i1 %1031 to i32
  %1033 = and i32 %969, 255
  %1034 = load ptr, ptr %42, align 8, !tbaa !107
  %1035 = ptrtoint ptr %1034 to i64
  %1036 = sub i64 %1035, %1027
  %1037 = getelementptr inbounds i8, ptr %1026, i64 %1029
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %1031, ptr noundef nonnull @.str.493, ptr nonnull poison, i32 noundef %1033, i32 noundef %1032, i64 noundef %1029, ptr noundef %1026, i32 noundef %1032, i64 noundef %1036, ptr noundef %1037)
  %1038 = load ptr, ptr %63, align 8, !tbaa !105
  br label %1039

1039:                                             ; preds = %1023, %1013
  %1040 = phi ptr [ %1038, %1023 ], [ %1014, %1013 ]
  %1041 = ptrtoint ptr %971 to i64
  %1042 = ptrtoint ptr %1040 to i64
  %1043 = sub i64 %1041, %1042
  %1044 = getelementptr i8, ptr %1040, i64 -1
  br label %1045

1045:                                             ; preds = %1045, %1039
  %1046 = phi i64 [ %1043, %1039 ], [ %1054, %1045 ]
  %1047 = getelementptr i8, ptr %1044, i64 %1046
  %1048 = load i8, ptr %1047, align 1, !tbaa !17
  %1049 = zext i8 %1048 to i64
  %1050 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1049
  %1051 = load i32, ptr %1050, align 4, !tbaa !73
  %1052 = and i32 %1051, 17408
  %1053 = icmp eq i32 %1052, 17408
  %1054 = add i64 %1046, -1
  br i1 %1053, label %1045, label %1055, !llvm.loop !408

1055:                                             ; preds = %1045, %963
  %1056 = phi ptr [ %964, %963 ], [ %1040, %1045 ]
  %1057 = phi ptr [ %964, %963 ], [ %971, %1045 ]
  %1058 = phi i64 [ 1, %963 ], [ %1046, %1045 ]
  %1059 = load ptr, ptr %61, align 8, !tbaa !112
  %1060 = icmp eq ptr %1059, %168
  br i1 %1060, label %1233, label %1061

1061:                                             ; preds = %1055
  %1062 = load i8, ptr %1056, align 1, !tbaa !17
  %1063 = icmp eq i8 %1062, 94
  br i1 %1063, label %1064, label %1086

1064:                                             ; preds = %1061
  %1065 = getelementptr inbounds i8, ptr %1056, i64 1
  store ptr %1065, ptr %63, align 8, !tbaa !105
  %1066 = load i64, ptr %11, align 8, !tbaa !9
  %1067 = xor i64 %1066, 32
  store i64 %1067, ptr %11, align 8, !tbaa !9
  %1068 = add i64 %1058, -1
  %1069 = load i8, ptr %1065, align 1, !tbaa !17
  %1070 = zext i8 %1069 to i64
  %1071 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1070
  %1072 = load i32, ptr %1071, align 4, !tbaa !73
  %1073 = and i32 %1072, 17408
  %1074 = icmp eq i32 %1073, 17408
  br i1 %1074, label %1075, label %1086

1075:                                             ; preds = %1064, %1075
  %1076 = phi i64 [ %1079, %1075 ], [ %1068, %1064 ]
  %1077 = phi ptr [ %1078, %1075 ], [ %1065, %1064 ]
  %1078 = getelementptr inbounds i8, ptr %1077, i64 1
  store ptr %1078, ptr %63, align 8, !tbaa !105
  %1079 = add i64 %1076, -1
  %1080 = load i8, ptr %1078, align 1, !tbaa !17
  %1081 = zext i8 %1080 to i64
  %1082 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1081
  %1083 = load i32, ptr %1082, align 4, !tbaa !73
  %1084 = and i32 %1083, 17408
  %1085 = icmp eq i32 %1084, 17408
  br i1 %1085, label %1075, label %1086, !llvm.loop !409

1086:                                             ; preds = %1075, %1064, %1061
  %1087 = phi ptr [ %1056, %1061 ], [ %1065, %1064 ], [ %1078, %1075 ]
  %1088 = phi i64 [ %1058, %1061 ], [ %1068, %1064 ], [ %1079, %1075 ]
  %1089 = load i32, ptr %0, align 8, !tbaa !66
  %1090 = and i32 %1089, 4
  %1091 = icmp eq i32 %1090, 0
  %1092 = select i1 %1091, ptr @.str.8, ptr @.str.520
  %1093 = trunc i64 %1088 to i32
  %1094 = select i1 %1091, ptr @.str.8, ptr @.str.521
  %1095 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.519, ptr noundef nonnull %1092, i32 noundef %1093, ptr noundef nonnull %1087, ptr noundef nonnull %1094) #15
  %1096 = call ptr @Perl_savepv(ptr noundef %1095) #15
  %1097 = icmp eq ptr %453, null
  br i1 %1097, label %1105, label %1098

1098:                                             ; preds = %1086
  %1099 = getelementptr inbounds %struct.sv, ptr %453, i64 0, i32 1
  %1100 = load i32, ptr %1099, align 8, !tbaa !37
  %1101 = icmp ugt i32 %1100, 1
  br i1 %1101, label %1102, label %1104

1102:                                             ; preds = %1098
  %1103 = add i32 %1100, -1
  store i32 %1103, ptr %1099, align 8, !tbaa !37
  br label %1105

1104:                                             ; preds = %1098
  call void @Perl_sv_free2(ptr noundef nonnull %453, i32 noundef %1100) #15
  br label %1105

1105:                                             ; preds = %1104, %1102, %1086
  %1106 = call ptr @Perl__core_swash_init(ptr noundef nonnull @.str.522, ptr noundef %1096, ptr noundef nonnull @PL_sv_undef, i32 noundef 1, i32 noundef 0, ptr noundef null, ptr noundef nonnull %22) #15
  %1107 = icmp eq ptr %1106, null
  br i1 %1107, label %1108, label %1114

1108:                                             ; preds = %1105
  %1109 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %1110 = icmp eq ptr %1109, @PL_compiling
  %1111 = getelementptr inbounds %struct.cop, ptr %1109, i64 0, i32 8
  %1112 = select i1 %1110, ptr @PL_curstash, ptr %1111
  %1113 = load ptr, ptr %1112, align 8, !tbaa !5
  br label %1129

1114:                                             ; preds = %1105
  %1115 = call ptr @Perl__get_swash_invlist(ptr noundef nonnull %1106) #15
  %1116 = icmp eq ptr %1115, null
  br i1 %1116, label %1117, label %1198

1117:                                             ; preds = %1114
  %1118 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %1119 = icmp eq ptr %1118, @PL_compiling
  %1120 = getelementptr inbounds %struct.cop, ptr %1118, i64 0, i32 8
  %1121 = select i1 %1119, ptr @PL_curstash, ptr %1120
  %1122 = load ptr, ptr %1121, align 8, !tbaa !5
  %1123 = getelementptr inbounds %struct.sv, ptr %1106, i64 0, i32 1
  %1124 = load i32, ptr %1123, align 8, !tbaa !37
  %1125 = icmp ugt i32 %1124, 1
  br i1 %1125, label %1126, label %1128

1126:                                             ; preds = %1117
  %1127 = add i32 %1124, -1
  store i32 %1127, ptr %1123, align 8, !tbaa !37
  br label %1129

1128:                                             ; preds = %1117
  call void @Perl_sv_free2(ptr noundef nonnull %1106, i32 noundef %1124) #15
  br label %1129

1129:                                             ; preds = %1128, %1126, %1108
  %1130 = phi ptr [ %1113, %1108 ], [ %1122, %1126 ], [ %1122, %1128 ]
  br i1 %44, label %1156, label %1131

1131:                                             ; preds = %1129
  %1132 = getelementptr inbounds i8, ptr %1057, i64 1
  store ptr %1132, ptr %63, align 8, !tbaa !105
  %1133 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1134 = load ptr, ptr %1133, align 8, !tbaa !65
  %1135 = ptrtoint ptr %1132 to i64
  %1136 = ptrtoint ptr %1134 to i64
  %1137 = sub i64 %1135, %1136
  %1138 = load ptr, ptr %61, align 8, !tbaa !112
  %1139 = icmp eq ptr %1138, %168
  br i1 %1139, label %1145, label %1140

1140:                                             ; preds = %1131
  %1141 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1142 = load ptr, ptr %1141, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1142, i32 noundef 11) #15
  %1143 = load ptr, ptr %1133, align 8, !tbaa !65
  %1144 = ptrtoint ptr %1143 to i64
  br label %1145

1145:                                             ; preds = %1140, %1131
  %1146 = phi i64 [ %1144, %1140 ], [ %1136, %1131 ]
  %1147 = phi ptr [ %1143, %1140 ], [ %1134, %1131 ]
  %1148 = load i32, ptr %465, align 8, !tbaa !50
  %1149 = icmp ne i32 %1148, 0
  %1150 = zext i1 %1149 to i32
  %1151 = load ptr, ptr %42, align 8, !tbaa !107
  %1152 = ptrtoint ptr %1151 to i64
  %1153 = add i64 %1146, %1137
  %1154 = sub i64 %1152, %1153
  %1155 = getelementptr inbounds i8, ptr %1147, i64 %1137
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %1149, ptr noundef nonnull @.str.523, ptr nonnull poison, i32 noundef %1150, i64 noundef %1088, ptr noundef %1096, i32 noundef %1150, i64 noundef %1137, ptr noundef %1147, i32 noundef %1150, i64 noundef %1154, ptr noundef %1155)
  br label %1156

1156:                                             ; preds = %1145, %1129
  %1157 = icmp eq ptr %1130, null
  br i1 %1157, label %1187, label %1158

1158:                                             ; preds = %1156
  %1159 = call ptr @Perl_instr(ptr noundef %1096, ptr noundef nonnull @.str.524) #15
  %1160 = icmp eq ptr %1159, null
  br i1 %1160, label %1161, label %1187

1161:                                             ; preds = %1158
  %1162 = getelementptr inbounds %struct.hv, ptr %1130, i64 0, i32 2
  %1163 = load i32, ptr %1162, align 4, !tbaa !46
  %1164 = and i32 %1163, 33554432
  %1165 = icmp ne i32 %1164, 0
  call void @llvm.assume(i1 %1165)
  %1166 = getelementptr inbounds %struct.hv, ptr %1130, i64 0, i32 3
  %1167 = load ptr, ptr %1166, align 8, !tbaa !17
  %1168 = load ptr, ptr %1130, align 8, !tbaa !302
  %1169 = getelementptr inbounds %struct.xpvhv, ptr %1168, i64 0, i32 3
  %1170 = load i64, ptr %1169, align 8, !tbaa !410
  %1171 = add i64 %1170, 1
  %1172 = getelementptr inbounds ptr, ptr %1167, i64 %1171
  %1173 = load ptr, ptr %1172, align 8, !tbaa !17, !nonnull !19, !noundef !19
  %1174 = getelementptr inbounds %struct.xpvhv_aux, ptr %1172, i64 0, i32 4
  %1175 = load i32, ptr %1174, align 4, !tbaa !411
  %1176 = icmp eq i32 %1175, 0
  %1177 = select i1 %1176, ptr %1172, ptr %1173
  %1178 = load ptr, ptr %1177, align 8, !tbaa !17
  %1179 = getelementptr inbounds %struct.hek, ptr %1178, i64 0, i32 2
  %1180 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %1179, ptr noundef nonnull dereferenceable(5) @.str.525) #18
  %1181 = icmp eq i32 %1180, 0
  br i1 %1181, label %1187, label %1182

1182:                                             ; preds = %1161
  %1183 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.526, ptr noundef nonnull %1179, ptr noundef %1096) #15
  %1184 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1183) #18
  call void @Perl_safesysfree(ptr noundef %1096) #15
  %1185 = trunc i64 %1184 to i32
  %1186 = call ptr @Perl_savepvn(ptr noundef %1183, i32 noundef %1185) #15
  br label %1187

1187:                                             ; preds = %1161, %1182, %1158, %1156
  %1188 = phi ptr [ %1096, %1158 ], [ %1096, %1156 ], [ %1186, %1182 ], [ %1096, %1161 ]
  %1189 = phi i64 [ %1088, %1158 ], [ %1088, %1156 ], [ %1184, %1182 ], [ %1088, %1161 ]
  %1190 = load i64, ptr %11, align 8, !tbaa !9
  %1191 = icmp eq i64 %1190, 112
  %1192 = select i1 %1191, i32 43, i32 33
  %1193 = load i32, ptr %465, align 8, !tbaa !50
  %1194 = icmp ne i32 %1193, 0
  %1195 = zext i1 %1194 to i32
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef nonnull %190, ptr noundef nonnull @.str.527, i32 noundef %1192, i32 noundef %1195, i64 noundef %1189, ptr noundef %1188) #15
  %1196 = load i8, ptr %163, align 2, !tbaa !143
  %1197 = or i8 %1196, 32
  store i8 %1197, ptr %163, align 2, !tbaa !143
  br label %1228

1198:                                             ; preds = %1114
  %1199 = load i8, ptr %22, align 1, !tbaa !17
  %1200 = and i8 %1199, 1
  %1201 = icmp eq i8 %1200, 0
  br i1 %1201, label %1202, label %1214

1202:                                             ; preds = %1198
  %1203 = call i64 @Perl__invlist_search(ptr noundef nonnull %1115, i64 noundef 1114112) #15
  %1204 = and i64 %1203, -9223372036854775807
  %1205 = icmp eq i64 %1204, 0
  br i1 %1205, label %1206, label %1214

1206:                                             ; preds = %1202
  %1207 = call fastcc i64 @S__invlist_len(ptr noundef nonnull %1115), !range !413
  %1208 = icmp eq i64 %1207, 1
  br i1 %1208, label %1209, label %1213

1209:                                             ; preds = %1206
  %1210 = call fastcc ptr @S_invlist_array(ptr noundef nonnull %1115)
  %1211 = load i64, ptr %1210, align 8, !tbaa !9
  %1212 = icmp eq i64 %1211, 0
  br i1 %1212, label %1214, label %1213

1213:                                             ; preds = %1209, %1206
  br label %1214

1214:                                             ; preds = %1198, %1202, %1209, %1213
  %1215 = phi i8 [ %448, %1209 ], [ 1, %1213 ], [ %448, %1202 ], [ %448, %1198 ]
  %1216 = phi i8 [ %452, %1209 ], [ %452, %1213 ], [ %452, %1202 ], [ 1, %1198 ]
  %1217 = load i64, ptr %11, align 8, !tbaa !9
  %1218 = icmp eq i64 %1217, 80
  %1219 = load ptr, ptr %13, align 8, !tbaa !5
  br i1 %1218, label %1220, label %1227

1220:                                             ; preds = %1214
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %1219, ptr noundef nonnull %1115, i1 noundef zeroext true, ptr noundef nonnull %13) #15
  %1221 = getelementptr inbounds %struct.sv, ptr %1106, i64 0, i32 1
  %1222 = load i32, ptr %1221, align 8, !tbaa !37
  %1223 = icmp ugt i32 %1222, 1
  br i1 %1223, label %1224, label %1226

1224:                                             ; preds = %1220
  %1225 = add i32 %1222, -1
  store i32 %1225, ptr %1221, align 8, !tbaa !37
  br label %1228

1226:                                             ; preds = %1220
  call void @Perl_sv_free2(ptr noundef nonnull %1106, i32 noundef %1222) #15
  br label %1228

1227:                                             ; preds = %1214
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %1219, ptr noundef nonnull %1115, i1 noundef zeroext false, ptr noundef nonnull %13) #15
  br label %1228

1228:                                             ; preds = %1226, %1224, %1227, %1187
  %1229 = phi ptr [ %1096, %1227 ], [ %1188, %1187 ], [ %1096, %1224 ], [ %1096, %1226 ]
  %1230 = phi i8 [ %1215, %1227 ], [ %448, %1187 ], [ %1215, %1224 ], [ %1215, %1226 ]
  %1231 = phi i8 [ %1216, %1227 ], [ 1, %1187 ], [ %1216, %1224 ], [ %1216, %1226 ]
  %1232 = phi ptr [ %1106, %1227 ], [ null, %1187 ], [ null, %1224 ], [ null, %1226 ]
  call void @Perl_safesysfree(ptr noundef %1229) #15
  br label %1233

1233:                                             ; preds = %1228, %1055
  %1234 = phi i8 [ %448, %1055 ], [ %1230, %1228 ]
  %1235 = phi i8 [ %452, %1055 ], [ %1231, %1228 ]
  %1236 = phi ptr [ %453, %1055 ], [ %1232, %1228 ]
  %1237 = getelementptr inbounds i8, ptr %1057, i64 1
  store ptr %1237, ptr %63, align 8, !tbaa !105
  %1238 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 27
  store i32 1, ptr %1238, align 8, !tbaa !51
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %22) #15
  br label %1601

1239:                                             ; preds = %758
  store i64 10, ptr %11, align 8, !tbaa !9
  br label %1807

1240:                                             ; preds = %758
  store i64 13, ptr %11, align 8, !tbaa !9
  br label %1807

1241:                                             ; preds = %758
  store i64 9, ptr %11, align 8, !tbaa !9
  br label %1807

1242:                                             ; preds = %758
  store i64 12, ptr %11, align 8, !tbaa !9
  br label %1807

1243:                                             ; preds = %758
  store i64 8, ptr %11, align 8, !tbaa !9
  br label %1807

1244:                                             ; preds = %758
  store i64 27, ptr %11, align 8, !tbaa !9
  br label %1807

1245:                                             ; preds = %758
  store i64 7, ptr %11, align 8, !tbaa !9
  br label %1807

1246:                                             ; preds = %758
  %1247 = getelementptr inbounds i8, ptr %738, i64 -1
  store ptr %1247, ptr %63, align 8, !tbaa !105
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %23) #15
  %1248 = load ptr, ptr %61, align 8, !tbaa !112
  %1249 = icmp ne ptr %1248, %168
  %1250 = load i32, ptr %465, align 8, !tbaa !50
  %1251 = icmp ne i32 %1250, 0
  %1252 = call fastcc zeroext i1 @S_grok_bslash_o(ptr noundef nonnull %63, ptr noundef nonnull %11, ptr noundef nonnull %23, i1 noundef zeroext %1249, i1 noundef zeroext %6, i1 noundef zeroext %5, i1 noundef zeroext %1251)
  br i1 %1252, label %1276, label %1253

1253:                                             ; preds = %1246
  %1254 = load ptr, ptr %61, align 8, !tbaa !112
  %1255 = icmp eq ptr %1254, %168
  br i1 %1255, label %1259, label %1256

1256:                                             ; preds = %1253
  %1257 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1258 = load ptr, ptr %1257, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1258, i32 noundef 11) #15
  br label %1259

1259:                                             ; preds = %1253, %1256
  %1260 = load ptr, ptr %63, align 8, !tbaa !105
  %1261 = load ptr, ptr %42, align 8, !tbaa !107
  %1262 = icmp ugt ptr %1260, %1261
  %1263 = select i1 %1262, ptr %1261, ptr %1260
  %1264 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1265 = load ptr, ptr %1264, align 8, !tbaa !65
  %1266 = ptrtoint ptr %1263 to i64
  %1267 = ptrtoint ptr %1265 to i64
  %1268 = sub i64 %1266, %1267
  %1269 = load ptr, ptr %23, align 8, !tbaa !5
  %1270 = load i32, ptr %465, align 8, !tbaa !50
  %1271 = icmp ne i32 %1270, 0
  %1272 = zext i1 %1271 to i32
  %1273 = ptrtoint ptr %1261 to i64
  %1274 = sub i64 %1273, %1266
  %1275 = getelementptr inbounds i8, ptr %1265, i64 %1268
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef %1269, i32 noundef %1272, i64 noundef %1268, ptr noundef %1265, i32 noundef %1272, i64 noundef %1274, ptr noundef %1275) #15
  br label %1276

1276:                                             ; preds = %1259, %1246
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %23) #15
  %1277 = add i32 %461, 1
  %1278 = load ptr, ptr @PL_encoding, align 8, !tbaa !5
  %1279 = icmp eq ptr %1278, null
  br i1 %1279, label %1280, label %1289

1280:                                             ; preds = %1276
  %1281 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !5
  %1282 = icmp eq ptr %1281, null
  br i1 %1282, label %1807, label %1283

1283:                                             ; preds = %1280
  %1284 = call ptr @Perl__get_encoding() #15
  %1285 = icmp ne ptr %1284, null
  %1286 = load i64, ptr %11, align 8
  %1287 = icmp ult i64 %1286, 256
  %1288 = select i1 %1285, i1 %1287, i1 false
  br i1 %1288, label %1460, label %1807

1289:                                             ; preds = %1276
  %1290 = load i64, ptr %11, align 8
  %1291 = icmp ult i64 %1290, 256
  br i1 %1291, label %1460, label %1807

1292:                                             ; preds = %758
  %1293 = getelementptr inbounds i8, ptr %738, i64 -1
  store ptr %1293, ptr %63, align 8, !tbaa !105
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %24) #15
  %1294 = load ptr, ptr %61, align 8, !tbaa !112
  %1295 = icmp ne ptr %1294, %168
  %1296 = load i32, ptr %465, align 8, !tbaa !50
  %1297 = icmp ne i32 %1296, 0
  %1298 = call fastcc zeroext i1 @S_grok_bslash_x(ptr noundef nonnull %63, ptr noundef nonnull %11, ptr noundef nonnull %24, i1 noundef zeroext %1295, i1 noundef zeroext %6, i1 noundef zeroext %5, i1 noundef zeroext %1297)
  br i1 %1298, label %1322, label %1299

1299:                                             ; preds = %1292
  %1300 = load ptr, ptr %61, align 8, !tbaa !112
  %1301 = icmp eq ptr %1300, %168
  br i1 %1301, label %1305, label %1302

1302:                                             ; preds = %1299
  %1303 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1304 = load ptr, ptr %1303, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1304, i32 noundef 11) #15
  br label %1305

1305:                                             ; preds = %1299, %1302
  %1306 = load ptr, ptr %63, align 8, !tbaa !105
  %1307 = load ptr, ptr %42, align 8, !tbaa !107
  %1308 = icmp ugt ptr %1306, %1307
  %1309 = select i1 %1308, ptr %1307, ptr %1306
  %1310 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1311 = load ptr, ptr %1310, align 8, !tbaa !65
  %1312 = ptrtoint ptr %1309 to i64
  %1313 = ptrtoint ptr %1311 to i64
  %1314 = sub i64 %1312, %1313
  %1315 = load ptr, ptr %24, align 8, !tbaa !5
  %1316 = load i32, ptr %465, align 8, !tbaa !50
  %1317 = icmp ne i32 %1316, 0
  %1318 = zext i1 %1317 to i32
  %1319 = ptrtoint ptr %1307 to i64
  %1320 = sub i64 %1319, %1312
  %1321 = getelementptr inbounds i8, ptr %1311, i64 %1314
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef %1315, i32 noundef %1318, i64 noundef %1314, ptr noundef %1311, i32 noundef %1318, i64 noundef %1320, ptr noundef %1321) #15
  br label %1322

1322:                                             ; preds = %1305, %1292
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %24) #15
  %1323 = add i32 %461, 1
  %1324 = load ptr, ptr @PL_encoding, align 8, !tbaa !5
  %1325 = icmp eq ptr %1324, null
  br i1 %1325, label %1326, label %1335

1326:                                             ; preds = %1322
  %1327 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !5
  %1328 = icmp eq ptr %1327, null
  br i1 %1328, label %1807, label %1329

1329:                                             ; preds = %1326
  %1330 = call ptr @Perl__get_encoding() #15
  %1331 = icmp ne ptr %1330, null
  %1332 = load i64, ptr %11, align 8
  %1333 = icmp ult i64 %1332, 256
  %1334 = select i1 %1331, i1 %1333, i1 false
  br i1 %1334, label %1460, label %1807

1335:                                             ; preds = %1322
  %1336 = load i64, ptr %11, align 8
  %1337 = icmp ult i64 %1336, 256
  br i1 %1337, label %1460, label %1807

1338:                                             ; preds = %758
  %1339 = getelementptr inbounds i8, ptr %738, i64 1
  store ptr %1339, ptr %63, align 8, !tbaa !105
  %1340 = load i8, ptr %738, align 1, !tbaa !17
  %1341 = load ptr, ptr %61, align 8, !tbaa !112
  %1342 = icmp ne ptr %1341, %168
  %1343 = call fastcc signext i8 @S_grok_bslash_c(i8 noundef signext %1340, i1 noundef zeroext %1342)
  %1344 = sext i8 %1343 to i64
  store i64 %1344, ptr %11, align 8, !tbaa !9
  %1345 = add i32 %461, 1
  br label %1807

1346:                                             ; preds = %758, %758, %758, %758, %758, %758, %758, %758
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %25) #15
  store i32 4, ptr %25, align 4, !tbaa !73
  %1347 = select i1 %6, i64 4, i64 3
  store i64 %1347, ptr %12, align 8, !tbaa !9
  %1348 = getelementptr inbounds i8, ptr %738, i64 -1
  store ptr %1348, ptr %63, align 8, !tbaa !105
  %1349 = call i64 @Perl_grok_oct(ptr noundef nonnull %1348, ptr noundef nonnull %12, ptr noundef nonnull %25, ptr noundef null) #15
  store i64 %1349, ptr %11, align 8, !tbaa !9
  %1350 = load i64, ptr %12, align 8
  %1351 = load ptr, ptr %63, align 8, !tbaa !105
  %1352 = getelementptr inbounds i8, ptr %1351, i64 %1350
  store ptr %1352, ptr %63, align 8, !tbaa !105
  %1353 = icmp eq i64 %1350, 3
  br i1 %1353, label %1441, label %1354

1354:                                             ; preds = %1346
  br i1 %6, label %1355, label %1390

1355:                                             ; preds = %1354
  %1356 = load i32, ptr %465, align 8, !tbaa !50
  %1357 = icmp eq i32 %1356, 0
  br i1 %1357, label %1364, label %1358

1358:                                             ; preds = %1355
  %1359 = load i8, ptr %1352, align 1, !tbaa !17
  %1360 = zext i8 %1359 to i64
  %1361 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1360
  %1362 = load i8, ptr %1361, align 1, !tbaa !17
  %1363 = zext i8 %1362 to i64
  br label %1364

1364:                                             ; preds = %1355, %1358
  %1365 = phi i64 [ %1363, %1358 ], [ 1, %1355 ]
  %1366 = getelementptr inbounds i8, ptr %1352, i64 %1365
  store ptr %1366, ptr %63, align 8, !tbaa !105
  %1367 = load ptr, ptr %61, align 8, !tbaa !112
  %1368 = icmp eq ptr %1367, %168
  br i1 %1368, label %1374, label %1369

1369:                                             ; preds = %1364
  %1370 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1371 = load ptr, ptr %1370, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1371, i32 noundef 11) #15
  %1372 = load ptr, ptr %63, align 8, !tbaa !105
  %1373 = load i32, ptr %465, align 8, !tbaa !50
  br label %1374

1374:                                             ; preds = %1364, %1369
  %1375 = phi i32 [ %1356, %1364 ], [ %1373, %1369 ]
  %1376 = phi ptr [ %1366, %1364 ], [ %1372, %1369 ]
  %1377 = load ptr, ptr %42, align 8, !tbaa !107
  %1378 = icmp ugt ptr %1376, %1377
  %1379 = select i1 %1378, ptr %1377, ptr %1376
  %1380 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1381 = load ptr, ptr %1380, align 8, !tbaa !65
  %1382 = ptrtoint ptr %1379 to i64
  %1383 = ptrtoint ptr %1381 to i64
  %1384 = sub i64 %1382, %1383
  %1385 = icmp ne i32 %1375, 0
  %1386 = zext i1 %1385 to i32
  %1387 = ptrtoint ptr %1377 to i64
  %1388 = sub i64 %1387, %1382
  %1389 = getelementptr inbounds i8, ptr %1381, i64 %1384
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.528, i32 noundef %1386, i64 noundef %1384, ptr noundef %1381, i32 noundef %1386, i64 noundef %1388, ptr noundef %1389) #15
  br label %1441

1390:                                             ; preds = %1354
  %1391 = load ptr, ptr %61, align 8, !tbaa !112
  %1392 = icmp ne ptr %1391, %168
  %1393 = icmp ult i64 %1350, 3
  %1394 = and i1 %1393, %1392
  br i1 %1394, label %1395, label %1441

1395:                                             ; preds = %1390
  %1396 = load ptr, ptr %42, align 8, !tbaa !107
  %1397 = icmp ult ptr %1352, %1396
  br i1 %1397, label %1398, label %1441

1398:                                             ; preds = %1395
  %1399 = load i8, ptr %1352, align 1, !tbaa !17
  %1400 = zext i8 %1399 to i64
  %1401 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1400
  %1402 = load i32, ptr %1401, align 4, !tbaa !73
  %1403 = and i32 %1402, 2
  %1404 = icmp eq i32 %1403, 0
  br i1 %1404, label %1441, label %1405

1405:                                             ; preds = %1398
  %1406 = call zeroext i1 @Perl_ckwarn(i32 noundef 20) #15
  br i1 %1406, label %1407, label %1441

1407:                                             ; preds = %1405
  %1408 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1409 = load ptr, ptr %1408, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1409, i32 noundef 11) #15
  %1410 = load ptr, ptr %63, align 8, !tbaa !105
  %1411 = getelementptr inbounds i8, ptr %1410, i64 1
  %1412 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1413 = load ptr, ptr %1412, align 8, !tbaa !65
  %1414 = ptrtoint ptr %1411 to i64
  %1415 = ptrtoint ptr %1413 to i64
  %1416 = sub i64 %1414, %1415
  %1417 = load ptr, ptr %61, align 8, !tbaa !112
  %1418 = icmp eq ptr %1417, %168
  br i1 %1418, label %1419, label %1421

1419:                                             ; preds = %1407
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.371, i32 noundef 14705) #15
  %1420 = load ptr, ptr %63, align 8, !tbaa !105
  br label %1421

1421:                                             ; preds = %1407, %1419
  %1422 = phi ptr [ %1410, %1407 ], [ %1420, %1419 ]
  %1423 = load i64, ptr %12, align 8, !tbaa !9
  %1424 = call fastcc ptr @S_form_short_octal_warning(ptr noundef %1422, i64 noundef %1423)
  %1425 = load i32, ptr %465, align 8, !tbaa !50
  %1426 = icmp ne i32 %1425, 0
  %1427 = zext i1 %1426 to i32
  %1428 = load ptr, ptr %1412, align 8, !tbaa !65
  %1429 = load ptr, ptr %42, align 8, !tbaa !107
  %1430 = ptrtoint ptr %1429 to i64
  %1431 = ptrtoint ptr %1428 to i64
  %1432 = add i64 %1416, %1431
  %1433 = sub i64 %1430, %1432
  %1434 = getelementptr inbounds i8, ptr %1428, i64 %1416
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.391, ptr noundef %1424, i32 noundef %1427, i64 noundef %1416, ptr noundef %1428, i32 noundef %1427, i64 noundef %1433, ptr noundef %1434) #15
  %1435 = load ptr, ptr %1408, align 8, !tbaa !122
  %1436 = icmp eq ptr %1435, null
  br i1 %1436, label %1441, label %1437

1437:                                             ; preds = %1421
  %1438 = getelementptr inbounds %struct.sv, ptr %1435, i64 0, i32 1
  %1439 = load i32, ptr %1438, align 8, !tbaa !37
  %1440 = add i32 %1439, 1
  store i32 %1440, ptr %1438, align 8, !tbaa !37
  br label %1441

1441:                                             ; preds = %1437, %1421, %1374, %1398, %1405, %1395, %1390, %1346
  %1442 = add i32 %461, 1
  %1443 = load ptr, ptr @PL_encoding, align 8, !tbaa !5
  %1444 = icmp eq ptr %1443, null
  br i1 %1444, label %1445, label %1454

1445:                                             ; preds = %1441
  %1446 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !5
  %1447 = icmp eq ptr %1446, null
  br i1 %1447, label %1459, label %1448

1448:                                             ; preds = %1445
  %1449 = call ptr @Perl__get_encoding() #15
  %1450 = icmp ne ptr %1449, null
  %1451 = load i64, ptr %11, align 8
  %1452 = icmp ult i64 %1451, 256
  %1453 = select i1 %1450, i1 %1452, i1 false
  br i1 %1453, label %1457, label %1459

1454:                                             ; preds = %1441
  %1455 = load i64, ptr %11, align 8
  %1456 = icmp ult i64 %1455, 256
  br i1 %1456, label %1457, label %1459

1457:                                             ; preds = %1448, %1454
  %1458 = phi i64 [ %1451, %1448 ], [ %1455, %1454 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %25) #15
  br label %1460

1459:                                             ; preds = %1454, %1448, %1445
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %25) #15
  br label %1807

1460:                                             ; preds = %1457, %1335, %1329, %1289, %1283
  %1461 = phi i64 [ %1336, %1335 ], [ %1332, %1329 ], [ %1290, %1289 ], [ %1286, %1283 ], [ %1458, %1457 ]
  %1462 = phi i32 [ %1323, %1335 ], [ %1323, %1329 ], [ %1277, %1289 ], [ %1277, %1283 ], [ %1442, %1457 ]
  %1463 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 36
  %1464 = load i32, ptr %1463, align 8, !tbaa !103
  %1465 = icmp eq i32 %1464, 0
  br i1 %1465, label %1466, label %1541

1466:                                             ; preds = %1460
  %1467 = call ptr @Perl__get_encoding() #15
  %1468 = load i64, ptr %11, align 8, !tbaa !9
  %1469 = trunc i64 %1468 to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %9)
  store i8 %1469, ptr %9, align 1, !tbaa !17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #15
  store i64 1, ptr %10, align 8, !tbaa !9
  %1470 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull %9, i64 noundef 1, i32 noundef 524288) #15
  %1471 = icmp eq ptr %1467, null
  br i1 %1471, label %1474, label %1472

1472:                                             ; preds = %1466
  %1473 = call ptr @Perl_sv_recode_to_utf8(ptr noundef %1470, ptr noundef nonnull %1467) #15
  br label %1477

1474:                                             ; preds = %1466
  %1475 = getelementptr inbounds %struct.sv, ptr %1470, i64 0, i32 3
  %1476 = load ptr, ptr %1475, align 8, !tbaa !17
  br label %1477

1477:                                             ; preds = %1474, %1472
  %1478 = phi ptr [ %1473, %1472 ], [ %1476, %1474 ]
  %1479 = load ptr, ptr %1470, align 8, !tbaa !16
  %1480 = getelementptr inbounds %struct.xpv, ptr %1479, i64 0, i32 2
  %1481 = load i64, ptr %1480, align 8, !tbaa !38
  %1482 = icmp eq i64 %1481, 0
  br i1 %1482, label %1501, label %1483

1483:                                             ; preds = %1477
  %1484 = getelementptr inbounds %struct.sv, ptr %1470, i64 0, i32 2
  %1485 = load i32, ptr %1484, align 4, !tbaa !13
  %1486 = and i32 %1485, 536870912
  %1487 = icmp eq i32 %1486, 0
  br i1 %1487, label %1494, label %1488

1488:                                             ; preds = %1483
  %1489 = call zeroext i1 @Perl_ckwarn(i32 noundef 44) #15
  %1490 = xor i1 %1489, true
  %1491 = zext i1 %1490 to i32
  %1492 = call i64 @Perl_utf8n_to_uvchr(ptr noundef %1478, i64 noundef %1481, ptr noundef nonnull %10, i32 noundef %1491) #15
  %1493 = load i64, ptr %10, align 8
  br label %1497

1494:                                             ; preds = %1483
  %1495 = load i8, ptr %1478, align 1, !tbaa !17
  %1496 = zext i8 %1495 to i64
  br label %1497

1497:                                             ; preds = %1494, %1488
  %1498 = phi i64 [ %1493, %1488 ], [ 1, %1494 ]
  %1499 = phi i64 [ %1492, %1488 ], [ %1496, %1494 ]
  %1500 = icmp eq i64 %1498, %1481
  br i1 %1500, label %1502, label %1501

1501:                                             ; preds = %1477, %1497
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #15
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %9)
  store i64 65533, ptr %11, align 8, !tbaa !9
  br label %1503

1502:                                             ; preds = %1497
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #15
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %9)
  store i64 %1499, ptr %11, align 8, !tbaa !9
  br i1 %1471, label %1503, label %1807

1503:                                             ; preds = %1501, %1502
  %1504 = load ptr, ptr %61, align 8, !tbaa !112
  %1505 = icmp eq ptr %1504, %168
  br i1 %6, label %1506, label %1526

1506:                                             ; preds = %1503
  br i1 %1505, label %1510, label %1507

1507:                                             ; preds = %1506
  %1508 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1509 = load ptr, ptr %1508, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1509, i32 noundef 11) #15
  br label %1510

1510:                                             ; preds = %1506, %1507
  %1511 = load ptr, ptr %63, align 8, !tbaa !105
  %1512 = load ptr, ptr %42, align 8, !tbaa !107
  %1513 = icmp ugt ptr %1511, %1512
  %1514 = select i1 %1513, ptr %1512, ptr %1511
  %1515 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1516 = load ptr, ptr %1515, align 8, !tbaa !65
  %1517 = ptrtoint ptr %1514 to i64
  %1518 = ptrtoint ptr %1516 to i64
  %1519 = sub i64 %1517, %1518
  %1520 = load i32, ptr %465, align 8, !tbaa !50
  %1521 = icmp ne i32 %1520, 0
  %1522 = zext i1 %1521 to i32
  %1523 = ptrtoint ptr %1512 to i64
  %1524 = sub i64 %1523, %1517
  %1525 = getelementptr inbounds i8, ptr %1516, i64 %1519
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.529, i32 noundef %1522, i64 noundef %1519, ptr noundef %1516, i32 noundef %1522, i64 noundef %1524, ptr noundef %1525) #15
  br label %1807

1526:                                             ; preds = %1503
  br i1 %1505, label %1807, label %1527

1527:                                             ; preds = %1526
  %1528 = load ptr, ptr %63, align 8, !tbaa !105
  %1529 = ptrtoint ptr %1528 to i64
  %1530 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1531 = load ptr, ptr %1530, align 8, !tbaa !65
  %1532 = ptrtoint ptr %1531 to i64
  %1533 = sub i64 %1529, %1532
  %1534 = load i32, ptr %465, align 8, !tbaa !50
  %1535 = icmp ne i32 %1534, 0
  %1536 = zext i1 %1535 to i32
  %1537 = load ptr, ptr %42, align 8, !tbaa !107
  %1538 = ptrtoint ptr %1537 to i64
  %1539 = sub i64 %1538, %1529
  %1540 = getelementptr inbounds i8, ptr %1531, i64 %1533
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.504, i32 noundef %1536, i64 noundef %1533, ptr noundef %1531, i32 noundef %1536, i64 noundef %1539, ptr noundef %1540) #15
  br label %1807

1541:                                             ; preds = %1460, %758
  %1542 = phi i64 [ %739, %758 ], [ %1461, %1460 ]
  %1543 = phi i32 [ %461, %758 ], [ %1462, %1460 ]
  %1544 = load ptr, ptr %61, align 8, !tbaa !112
  %1545 = icmp ne ptr %1544, %168
  %1546 = icmp ult i64 %1542, 256
  %1547 = select i1 %1545, i1 %1546, i1 false
  br i1 %1547, label %1548, label %1807

1548:                                             ; preds = %1541
  %1549 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1542
  %1550 = load i32, ptr %1549, align 4, !tbaa !73
  %1551 = and i32 %1550, 16385
  %1552 = icmp eq i32 %1551, 16385
  %1553 = icmp ne i64 %1542, 95
  %1554 = and i1 %1553, %1552
  br i1 %1554, label %1555, label %1807

1555:                                             ; preds = %1548
  %1556 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1557 = load ptr, ptr %1556, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1557, i32 noundef 11) #15
  %1558 = load ptr, ptr %63, align 8, !tbaa !105
  %1559 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1560 = load ptr, ptr %1559, align 8, !tbaa !65
  %1561 = ptrtoint ptr %1558 to i64
  %1562 = ptrtoint ptr %1560 to i64
  %1563 = sub i64 %1561, %1562
  br i1 %6, label %1564, label %1574

1564:                                             ; preds = %1555
  %1565 = load i32, ptr %465, align 8, !tbaa !50
  %1566 = icmp ne i32 %1565, 0
  %1567 = zext i1 %1566 to i32
  %1568 = load i64, ptr %11, align 8, !tbaa !9
  %1569 = trunc i64 %1568 to i32
  %1570 = load ptr, ptr %42, align 8, !tbaa !107
  %1571 = ptrtoint ptr %1570 to i64
  %1572 = sub i64 %1571, %1561
  %1573 = getelementptr inbounds i8, ptr %1560, i64 %1563
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %1566, ptr noundef nonnull @.str.530, ptr nonnull poison, i32 noundef %1569, i32 noundef %1567, i64 noundef %1563, ptr noundef %1560, i32 noundef %1567, i64 noundef %1572, ptr noundef %1573)
  br label %1807

1574:                                             ; preds = %1555
  %1575 = load ptr, ptr %61, align 8, !tbaa !112
  %1576 = icmp eq ptr %1575, %168
  br i1 %1576, label %1577, label %1580

1577:                                             ; preds = %1574
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.371, i32 noundef 14740) #15
  %1578 = load ptr, ptr %1559, align 8, !tbaa !65
  %1579 = ptrtoint ptr %1578 to i64
  br label %1580

1580:                                             ; preds = %1574, %1577
  %1581 = phi i64 [ %1562, %1574 ], [ %1579, %1577 ]
  %1582 = phi ptr [ %1560, %1574 ], [ %1578, %1577 ]
  %1583 = load i64, ptr %11, align 8, !tbaa !9
  %1584 = trunc i64 %1583 to i32
  %1585 = load i32, ptr %465, align 8, !tbaa !50
  %1586 = icmp ne i32 %1585, 0
  %1587 = zext i1 %1586 to i32
  %1588 = load ptr, ptr %42, align 8, !tbaa !107
  %1589 = ptrtoint ptr %1588 to i64
  %1590 = add i64 %1581, %1563
  %1591 = sub i64 %1589, %1590
  %1592 = getelementptr inbounds i8, ptr %1582, i64 %1563
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.531, i32 noundef %1584, i32 noundef %1587, i64 noundef %1563, ptr noundef %1582, i32 noundef %1587, i64 noundef %1591, ptr noundef %1592) #15
  %1593 = load ptr, ptr %1556, align 8, !tbaa !122
  %1594 = icmp eq ptr %1593, null
  br i1 %1594, label %1807, label %1595

1595:                                             ; preds = %1580
  %1596 = getelementptr inbounds %struct.sv, ptr %1593, i64 0, i32 1
  %1597 = load i32, ptr %1596, align 8, !tbaa !37
  %1598 = add i32 %1597, 1
  store i32 %1598, ptr %1596, align 8, !tbaa !37
  br label %1807

1599:                                             ; preds = %665, %659
  %1600 = icmp sgt i64 %652, -1
  br i1 %1600, label %1601, label %1807

1601:                                             ; preds = %758, %760, %761, %762, %763, %764, %765, %766, %767, %768, %1233, %1599
  %1602 = phi i64 [ %652, %1599 ], [ 0, %758 ], [ 1, %760 ], [ 20, %761 ], [ 21, %762 ], [ 2, %763 ], [ 3, %764 ], [ 30, %765 ], [ 31, %766 ], [ 32, %767 ], [ 33, %768 ], [ 34, %1233 ]
  %1603 = phi ptr [ %453, %1599 ], [ %453, %758 ], [ %453, %760 ], [ %453, %761 ], [ %453, %762 ], [ %453, %763 ], [ %453, %764 ], [ %453, %765 ], [ %453, %766 ], [ %453, %767 ], [ %453, %768 ], [ %1236, %1233 ]
  %1604 = phi i8 [ %452, %1599 ], [ %452, %758 ], [ %452, %760 ], [ %452, %761 ], [ %452, %762 ], [ %452, %763 ], [ %452, %764 ], [ %452, %765 ], [ %452, %766 ], [ %452, %767 ], [ %452, %768 ], [ %1235, %1233 ]
  %1605 = phi i8 [ %448, %1599 ], [ %448, %758 ], [ %448, %760 ], [ %448, %761 ], [ %448, %762 ], [ %448, %763 ], [ %448, %764 ], [ %448, %765 ], [ %448, %766 ], [ %448, %767 ], [ %448, %768 ], [ %1234, %1233 ]
  br i1 %460, label %1675, label %1606

1606:                                             ; preds = %1601
  %1607 = load ptr, ptr %61, align 8, !tbaa !112
  %1608 = icmp eq ptr %1607, %168
  br i1 %1608, label %1672, label %1609

1609:                                             ; preds = %1606
  %1610 = load ptr, ptr %63, align 8, !tbaa !105
  %1611 = icmp ult ptr %1610, %457
  %1612 = ptrtoint ptr %1610 to i64
  %1613 = ptrtoint ptr %457 to i64
  %1614 = sub i64 %1612, %1613
  %1615 = select i1 %1611, i64 0, i64 %1614
  br i1 %6, label %1616, label %1635

1616:                                             ; preds = %1609
  %1617 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1618 = load ptr, ptr %1617, align 8, !tbaa !65
  %1619 = ptrtoint ptr %1618 to i64
  %1620 = sub i64 %1612, %1619
  %1621 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1622 = load ptr, ptr %1621, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1622, i32 noundef 11) #15
  %1623 = load i32, ptr %465, align 8, !tbaa !50
  %1624 = icmp ne i32 %1623, 0
  %1625 = zext i1 %1624 to i32
  %1626 = shl i64 %1615, 32
  %1627 = ashr exact i64 %1626, 32
  %1628 = load ptr, ptr %1617, align 8, !tbaa !65
  %1629 = load ptr, ptr %42, align 8, !tbaa !107
  %1630 = ptrtoint ptr %1629 to i64
  %1631 = ptrtoint ptr %1628 to i64
  %1632 = add i64 %1620, %1631
  %1633 = sub i64 %1630, %1632
  %1634 = getelementptr inbounds i8, ptr %1628, i64 %1620
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %1624, ptr noundef nonnull @.str.532, ptr nonnull poison, i32 noundef %1625, i64 noundef %1627, ptr noundef %457, i32 noundef %1625, i64 noundef %1620, ptr noundef %1628, i32 noundef %1625, i64 noundef %1633, ptr noundef %1634)
  br label %1672

1635:                                             ; preds = %1609
  %1636 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1637 = load ptr, ptr %1636, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1637, i32 noundef 11) #15
  %1638 = load ptr, ptr %63, align 8, !tbaa !105
  %1639 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1640 = load ptr, ptr %1639, align 8, !tbaa !65
  %1641 = ptrtoint ptr %1638 to i64
  %1642 = ptrtoint ptr %1640 to i64
  %1643 = sub i64 %1641, %1642
  %1644 = load ptr, ptr %61, align 8, !tbaa !112
  %1645 = icmp eq ptr %1644, %168
  br i1 %1645, label %1646, label %1649

1646:                                             ; preds = %1635
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.371, i32 noundef 14770) #15
  %1647 = load ptr, ptr %1639, align 8, !tbaa !65
  %1648 = ptrtoint ptr %1647 to i64
  br label %1649

1649:                                             ; preds = %1635, %1646
  %1650 = phi i64 [ %1642, %1635 ], [ %1648, %1646 ]
  %1651 = phi ptr [ %1640, %1635 ], [ %1647, %1646 ]
  %1652 = load i32, ptr %465, align 8, !tbaa !50
  %1653 = icmp ne i32 %1652, 0
  %1654 = zext i1 %1653 to i32
  %1655 = shl i64 %1615, 32
  %1656 = ashr exact i64 %1655, 32
  %1657 = load ptr, ptr %42, align 8, !tbaa !107
  %1658 = ptrtoint ptr %1657 to i64
  %1659 = add i64 %1650, %1643
  %1660 = sub i64 %1658, %1659
  %1661 = getelementptr inbounds i8, ptr %1651, i64 %1643
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.533, i32 noundef %1654, i64 noundef %1656, ptr noundef %457, i32 noundef %1654, i64 noundef %1643, ptr noundef %1651, i32 noundef %1654, i64 noundef %1660, ptr noundef %1661) #15
  %1662 = load ptr, ptr %1636, align 8, !tbaa !122
  %1663 = icmp eq ptr %1662, null
  br i1 %1663, label %1668, label %1664

1664:                                             ; preds = %1649
  %1665 = getelementptr inbounds %struct.sv, ptr %1662, i64 0, i32 1
  %1666 = load i32, ptr %1665, align 8, !tbaa !37
  %1667 = add i32 %1666, 1
  store i32 %1667, ptr %1665, align 8, !tbaa !37
  br label %1668

1668:                                             ; preds = %1649, %1664
  %1669 = load ptr, ptr %18, align 8, !tbaa !5
  %1670 = call ptr @Perl__add_range_to_invlist(ptr noundef %1669, i64 noundef 45, i64 noundef 45) #15
  store ptr %1670, ptr %18, align 8, !tbaa !5
  %1671 = call ptr @Perl__add_range_to_invlist(ptr noundef %451, i64 noundef %459, i64 noundef %459) #15
  br label %1672

1672:                                             ; preds = %1616, %1668, %1606
  %1673 = phi ptr [ %451, %1606 ], [ %451, %1616 ], [ %1671, %1668 ]
  %1674 = add i64 %463, 2
  br label %1675

1675:                                             ; preds = %1672, %1601
  %1676 = phi ptr [ %1673, %1672 ], [ %451, %1601 ]
  %1677 = phi i64 [ %1674, %1672 ], [ %463, %1601 ]
  %1678 = lshr i64 %1602, 1
  %1679 = load i32, ptr %0, align 8, !tbaa !66
  %1680 = lshr i32 %1679, 7
  %1681 = and i32 %1680, 7
  %1682 = icmp eq i32 %1681, 1
  %1683 = icmp ult i64 %1602, 30
  %1684 = and i1 %1683, %1682
  %1685 = trunc i64 %1678 to i32
  %1686 = icmp ne i32 %1685, 14
  %1687 = and i1 %1686, %1684
  br i1 %1687, label %1688, label %1765

1688:                                             ; preds = %1675
  %1689 = and i8 %456, 1
  %1690 = icmp eq i8 %1689, 0
  br i1 %1690, label %1693, label %1691

1691:                                             ; preds = %1688
  %1692 = load i8, ptr %163, align 2, !tbaa !143
  br label %1705

1693:                                             ; preds = %1688
  %1694 = load ptr, ptr %61, align 8, !tbaa !112
  %1695 = icmp eq ptr %1694, %168
  br i1 %1695, label %1696, label %1699

1696:                                             ; preds = %1693
  %1697 = load i64, ptr %65, align 8, !tbaa !111
  %1698 = add i64 %1697, 1
  store i64 %1698, ptr %65, align 8, !tbaa !111
  br label %1701

1699:                                             ; preds = %1693
  %1700 = getelementptr inbounds %struct.regnode, ptr %1694, i64 1
  store ptr %1700, ptr %61, align 8, !tbaa !112
  br label %1701

1701:                                             ; preds = %1699, %1696
  %1702 = load i8, ptr %163, align 2, !tbaa !143
  %1703 = or i8 %1702, 8
  store i8 %1703, ptr %163, align 2, !tbaa !143
  %1704 = getelementptr inbounds %struct.regnode_charclass_class, ptr %163, i64 0, i32 5
  store i32 0, ptr %1704, align 4, !tbaa !243
  br label %1705

1705:                                             ; preds = %1691, %1701
  %1706 = phi i8 [ %1692, %1691 ], [ %1703, %1701 ]
  %1707 = phi i8 [ %456, %1691 ], [ 1, %1701 ]
  %1708 = and i8 %1706, 8
  %1709 = icmp eq i8 %1708, 0
  br i1 %1709, label %1710, label %1713

1710:                                             ; preds = %1705
  %1711 = getelementptr inbounds %struct.regnode_charclass_class, ptr %163, i64 0, i32 5
  %1712 = load i32, ptr %1711, align 4, !tbaa !243
  br label %1739

1713:                                             ; preds = %1705
  %1714 = and i64 %1602, 1
  %1715 = icmp eq i64 %1714, 0
  %1716 = select i1 %1715, i64 1, i64 -1
  %1717 = add nsw i64 %1716, %1602
  %1718 = icmp sgt i64 %1717, -1
  br i1 %1718, label %1719, label %1722

1719:                                             ; preds = %1713
  %1720 = getelementptr inbounds %struct.regnode_charclass_class, ptr %163, i64 0, i32 5
  %1721 = load i32, ptr %1720, align 4, !tbaa !243
  br label %1728

1722:                                             ; preds = %1713
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.534, i32 noundef 14811) #15
  %1723 = load i8, ptr %163, align 2, !tbaa !143
  %1724 = and i8 %1723, 8
  %1725 = icmp eq i8 %1724, 0
  %1726 = getelementptr inbounds %struct.regnode_charclass_class, ptr %163, i64 0, i32 5
  %1727 = load i32, ptr %1726, align 4, !tbaa !243
  br i1 %1725, label %1739, label %1728

1728:                                             ; preds = %1719, %1722
  %1729 = phi i32 [ %1721, %1719 ], [ %1727, %1722 ]
  %1730 = phi ptr [ %1720, %1719 ], [ %1726, %1722 ]
  %1731 = and i64 %1602, 1
  %1732 = icmp eq i64 %1731, 0
  %1733 = select i1 %1732, i64 1, i64 4294967295
  %1734 = add nuw nsw i64 %1733, %1602
  %1735 = trunc i64 %1734 to i32
  %1736 = shl nuw nsw i32 1, %1735
  %1737 = and i32 %1729, %1736
  %1738 = icmp eq i32 %1737, 0
  br i1 %1738, label %1739, label %2382

1739:                                             ; preds = %1710, %1722, %1728
  %1740 = phi i32 [ %1712, %1710 ], [ %1727, %1722 ], [ %1729, %1728 ]
  %1741 = phi ptr [ %1711, %1710 ], [ %1726, %1722 ], [ %1730, %1728 ]
  %1742 = trunc i64 %1602 to i32
  %1743 = shl nuw nsw i32 1, %1742
  %1744 = or i32 %1740, %1743
  store i32 %1744, ptr %1741, align 4, !tbaa !243
  %1745 = load ptr, ptr %61, align 8, !tbaa !112
  %1746 = icmp eq ptr %1745, %168
  br i1 %1746, label %1807, label %1747

1747:                                             ; preds = %1739
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %26) #15
  store ptr null, ptr %26, align 8, !tbaa !5
  %1748 = load ptr, ptr @PL_AboveLatin1, align 8, !tbaa !5
  %1749 = getelementptr inbounds [16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 %1678
  %1750 = load ptr, ptr %1749, align 8, !tbaa !5
  %1751 = and i64 %1602, 1
  %1752 = icmp ne i64 %1751, 0
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %1748, ptr noundef %1750, i1 noundef zeroext %1752, ptr noundef nonnull %26) #15
  %1753 = load ptr, ptr %18, align 8, !tbaa !5
  %1754 = icmp eq ptr %1753, null
  %1755 = load ptr, ptr %26, align 8, !tbaa !5
  br i1 %1754, label %1756, label %1757

1756:                                             ; preds = %1747
  store ptr %1755, ptr %18, align 8, !tbaa !5
  br label %1806

1757:                                             ; preds = %1747
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %1753, ptr noundef %1755, i1 noundef zeroext false, ptr noundef nonnull %18) #15
  %1758 = load ptr, ptr %26, align 8, !tbaa !5
  %1759 = getelementptr inbounds %struct.sv, ptr %1758, i64 0, i32 1
  %1760 = load i32, ptr %1759, align 8, !tbaa !37
  %1761 = icmp ugt i32 %1760, 1
  br i1 %1761, label %1762, label %1764

1762:                                             ; preds = %1757
  %1763 = add i32 %1760, -1
  store i32 %1763, ptr %1759, align 8, !tbaa !37
  br label %1806

1764:                                             ; preds = %1757
  call void @Perl_sv_free2(ptr noundef nonnull %1758, i32 noundef %1760) #15
  br label %1806

1765:                                             ; preds = %1675
  %1766 = load ptr, ptr %61, align 8, !tbaa !112
  %1767 = icmp eq ptr %1766, %168
  br i1 %1767, label %1807, label %1768

1768:                                             ; preds = %1765
  %1769 = icmp ugt i64 %1602, 29
  br i1 %1769, label %1770, label %1785

1770:                                             ; preds = %1768
  %1771 = icmp eq i64 %1602, 34
  br i1 %1771, label %1807, label %1772

1772:                                             ; preds = %1770
  %1773 = icmp eq i32 %1685, 15
  br i1 %1773, label %1778, label %1774

1774:                                             ; preds = %1772
  %1775 = and i64 %1602, -2
  %1776 = icmp eq i64 %1775, 32
  br i1 %1776, label %1778, label %1777

1777:                                             ; preds = %1774
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.535, i32 noundef 14872) #15
  br label %1778

1778:                                             ; preds = %1777, %1774, %1772
  %1779 = phi i64 [ %1678, %1772 ], [ 11, %1774 ], [ 11, %1777 ]
  %1780 = load ptr, ptr %18, align 8, !tbaa !5
  %1781 = getelementptr inbounds [16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 %1779
  %1782 = load ptr, ptr %1781, align 8, !tbaa !5
  %1783 = and i64 %1602, 1
  %1784 = icmp ne i64 %1783, 0
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %1780, ptr noundef %1782, i1 noundef zeroext %1784, ptr noundef nonnull %18) #15
  br label %1807

1785:                                             ; preds = %1768
  %1786 = icmp eq i32 %1681, 2
  %1787 = icmp eq i32 %1685, 14
  %1788 = or i1 %1787, %1786
  br i1 %1788, label %1792, label %1789

1789:                                             ; preds = %1785
  %1790 = icmp eq i32 %1681, 0
  br i1 %1790, label %1791, label %1798

1791:                                             ; preds = %1789
  switch i32 %1685, label %1798 [
    i32 12, label %1792
    i32 1, label %1792
  ]

1792:                                             ; preds = %1791, %1791, %1785
  %1793 = load ptr, ptr %16, align 8, !tbaa !5
  %1794 = getelementptr inbounds [16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 %1678
  %1795 = load ptr, ptr %1794, align 8, !tbaa !5
  %1796 = and i64 %1602, 1
  %1797 = icmp ne i64 %1796, 0
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %1793, ptr noundef %1795, i1 noundef zeroext %1797, ptr noundef nonnull %16) #15
  br label %1807

1798:                                             ; preds = %1791, %1789
  %1799 = and i64 %1602, 1
  %1800 = icmp eq i64 %1799, 0
  %1801 = select i1 %1800, ptr %14, ptr %15
  %1802 = load ptr, ptr %1801, align 8, !tbaa !5
  %1803 = getelementptr inbounds [16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 %1678
  %1804 = load ptr, ptr %1803, align 8, !tbaa !5
  %1805 = icmp ne i64 %1799, 0
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %1802, ptr noundef %1804, i1 noundef zeroext %1805, ptr noundef nonnull %1801) #15
  br label %1807

1806:                                             ; preds = %1756, %1762, %1764
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %26) #15
  br label %374

1807:                                             ; preds = %484, %1739, %1778, %1770, %1798, %1792, %1765, %674, %666, %714, %543, %497, %492, %487, %490, %1595, %1580, %1502, %1526, %1527, %1510, %928, %1239, %1240, %1241, %1242, %1243, %1244, %1245, %1280, %1283, %1289, %1326, %1329, %1335, %1338, %1459, %1548, %1564, %1541, %1599
  %1808 = phi i1 [ false, %1599 ], [ false, %1541 ], [ false, %1564 ], [ false, %1548 ], [ false, %1459 ], [ false, %1338 ], [ false, %1335 ], [ false, %1329 ], [ false, %1326 ], [ false, %1289 ], [ false, %1283 ], [ false, %1280 ], [ false, %1245 ], [ false, %1244 ], [ false, %1243 ], [ false, %1242 ], [ false, %1241 ], [ false, %1240 ], [ false, %1239 ], [ false, %928 ], [ false, %1510 ], [ false, %1527 ], [ false, %1526 ], [ false, %1502 ], [ false, %1580 ], [ false, %1595 ], [ false, %490 ], [ false, %487 ], [ false, %492 ], [ false, %497 ], [ false, %543 ], [ false, %714 ], [ false, %666 ], [ false, %674 ], [ true, %1765 ], [ true, %1792 ], [ true, %1798 ], [ true, %1770 ], [ true, %1778 ], [ true, %1739 ], [ false, %484 ]
  %1809 = phi i64 [ -1, %1599 ], [ -1, %1541 ], [ -1, %1564 ], [ -1, %1548 ], [ -1, %1459 ], [ -1, %1338 ], [ -1, %1335 ], [ -1, %1329 ], [ -1, %1326 ], [ -1, %1289 ], [ -1, %1283 ], [ -1, %1280 ], [ -1, %1245 ], [ -1, %1244 ], [ -1, %1243 ], [ -1, %1242 ], [ -1, %1241 ], [ -1, %1240 ], [ -1, %1239 ], [ -1, %928 ], [ -1, %1510 ], [ -1, %1527 ], [ -1, %1526 ], [ -1, %1502 ], [ -1, %1580 ], [ -1, %1595 ], [ -1, %490 ], [ -1, %487 ], [ -1, %492 ], [ -1, %497 ], [ -1, %543 ], [ -1, %714 ], [ -1, %666 ], [ -1, %674 ], [ %1602, %1765 ], [ %1602, %1792 ], [ %1602, %1798 ], [ 34, %1770 ], [ %1602, %1778 ], [ %1602, %1739 ], [ -1, %484 ]
  %1810 = phi ptr [ %453, %1599 ], [ %453, %1541 ], [ %453, %1564 ], [ %453, %1548 ], [ %453, %1459 ], [ %453, %1338 ], [ %453, %1335 ], [ %453, %1329 ], [ %453, %1326 ], [ %453, %1289 ], [ %453, %1283 ], [ %453, %1280 ], [ %453, %1245 ], [ %453, %1244 ], [ %453, %1243 ], [ %453, %1242 ], [ %453, %1241 ], [ %453, %1240 ], [ %453, %1239 ], [ %453, %928 ], [ %453, %1510 ], [ %453, %1527 ], [ %453, %1526 ], [ %453, %1502 ], [ %453, %1580 ], [ %453, %1595 ], [ %453, %490 ], [ %453, %487 ], [ %453, %492 ], [ %453, %497 ], [ %453, %543 ], [ %453, %714 ], [ %453, %666 ], [ %453, %674 ], [ %1603, %1765 ], [ %1603, %1792 ], [ %1603, %1798 ], [ %1603, %1770 ], [ %1603, %1778 ], [ %1603, %1739 ], [ %453, %484 ]
  %1811 = phi i8 [ %452, %1599 ], [ %452, %1541 ], [ %452, %1564 ], [ %452, %1548 ], [ %452, %1459 ], [ %452, %1338 ], [ %452, %1335 ], [ %452, %1329 ], [ %452, %1326 ], [ %452, %1289 ], [ %452, %1283 ], [ %452, %1280 ], [ %452, %1245 ], [ %452, %1244 ], [ %452, %1243 ], [ %452, %1242 ], [ %452, %1241 ], [ %452, %1240 ], [ %452, %1239 ], [ %452, %928 ], [ %452, %1510 ], [ %452, %1527 ], [ %452, %1526 ], [ %452, %1502 ], [ %452, %1580 ], [ %452, %1595 ], [ %452, %490 ], [ %452, %487 ], [ %452, %492 ], [ %452, %497 ], [ %452, %543 ], [ %452, %714 ], [ %452, %666 ], [ %452, %674 ], [ %1604, %1765 ], [ %1604, %1792 ], [ %1604, %1798 ], [ %1604, %1770 ], [ %1604, %1778 ], [ %1604, %1739 ], [ %452, %484 ]
  %1812 = phi i32 [ %461, %1599 ], [ %1543, %1541 ], [ %1543, %1564 ], [ %1543, %1548 ], [ %1442, %1459 ], [ %1345, %1338 ], [ %1323, %1335 ], [ %1323, %1329 ], [ %1323, %1326 ], [ %1277, %1289 ], [ %1277, %1283 ], [ %1277, %1280 ], [ %461, %1245 ], [ %461, %1244 ], [ %461, %1243 ], [ %461, %1242 ], [ %461, %1241 ], [ %461, %1240 ], [ %461, %1239 ], [ %461, %928 ], [ %1462, %1510 ], [ %1462, %1527 ], [ %1462, %1526 ], [ %1462, %1502 ], [ %1543, %1580 ], [ %1543, %1595 ], [ %461, %490 ], [ %461, %487 ], [ %461, %492 ], [ %461, %497 ], [ %461, %543 ], [ %461, %714 ], [ %461, %666 ], [ %461, %674 ], [ %461, %1765 ], [ %461, %1792 ], [ %461, %1798 ], [ %461, %1770 ], [ %461, %1778 ], [ %461, %1739 ], [ %461, %484 ]
  %1813 = phi i8 [ %449, %1599 ], [ %449, %1541 ], [ %449, %1564 ], [ %449, %1548 ], [ %449, %1459 ], [ %449, %1338 ], [ %449, %1335 ], [ %449, %1329 ], [ %449, %1326 ], [ %449, %1289 ], [ %449, %1283 ], [ %449, %1280 ], [ %449, %1245 ], [ %449, %1244 ], [ %449, %1243 ], [ %449, %1242 ], [ %449, %1241 ], [ %449, %1240 ], [ %449, %1239 ], [ %929, %928 ], [ %449, %1510 ], [ %449, %1527 ], [ %449, %1526 ], [ %449, %1502 ], [ %449, %1580 ], [ %449, %1595 ], [ %449, %490 ], [ %449, %487 ], [ %449, %492 ], [ %449, %497 ], [ %449, %543 ], [ %449, %714 ], [ %449, %666 ], [ %449, %674 ], [ %449, %1765 ], [ %449, %1792 ], [ %449, %1798 ], [ %449, %1770 ], [ %449, %1778 ], [ %449, %1739 ], [ %449, %484 ]
  %1814 = phi i8 [ %448, %1599 ], [ %448, %1541 ], [ %448, %1564 ], [ %448, %1548 ], [ %448, %1459 ], [ %448, %1338 ], [ %448, %1335 ], [ %448, %1329 ], [ %448, %1326 ], [ %448, %1289 ], [ %448, %1283 ], [ %448, %1280 ], [ %448, %1245 ], [ %448, %1244 ], [ %448, %1243 ], [ %448, %1242 ], [ %448, %1241 ], [ %448, %1240 ], [ %448, %1239 ], [ %448, %928 ], [ %448, %1510 ], [ %448, %1527 ], [ %448, %1526 ], [ %448, %1502 ], [ %448, %1580 ], [ %448, %1595 ], [ %448, %490 ], [ %448, %487 ], [ %448, %492 ], [ %448, %497 ], [ %448, %543 ], [ %448, %714 ], [ %448, %666 ], [ %448, %674 ], [ %1605, %1765 ], [ %1605, %1792 ], [ %1605, %1798 ], [ %1605, %1770 ], [ %1605, %1778 ], [ %1605, %1739 ], [ %448, %484 ]
  %1815 = phi ptr [ %451, %1599 ], [ %451, %1541 ], [ %451, %1564 ], [ %451, %1548 ], [ %451, %1459 ], [ %451, %1338 ], [ %451, %1335 ], [ %451, %1329 ], [ %451, %1326 ], [ %451, %1289 ], [ %451, %1283 ], [ %451, %1280 ], [ %451, %1245 ], [ %451, %1244 ], [ %451, %1243 ], [ %451, %1242 ], [ %451, %1241 ], [ %451, %1240 ], [ %451, %1239 ], [ %451, %928 ], [ %451, %1510 ], [ %451, %1527 ], [ %451, %1526 ], [ %451, %1502 ], [ %451, %1580 ], [ %451, %1595 ], [ %451, %490 ], [ %451, %487 ], [ %451, %492 ], [ %451, %497 ], [ %451, %543 ], [ %451, %714 ], [ %451, %666 ], [ %451, %674 ], [ %1676, %1765 ], [ %1676, %1792 ], [ %1676, %1798 ], [ %1676, %1770 ], [ %1676, %1778 ], [ %1676, %1739 ], [ %451, %484 ]
  %1816 = phi i64 [ %463, %1599 ], [ %463, %1541 ], [ %463, %1564 ], [ %463, %1548 ], [ %463, %1459 ], [ %463, %1338 ], [ %463, %1335 ], [ %463, %1329 ], [ %463, %1326 ], [ %463, %1289 ], [ %463, %1283 ], [ %463, %1280 ], [ %463, %1245 ], [ %463, %1244 ], [ %463, %1243 ], [ %463, %1242 ], [ %463, %1241 ], [ %463, %1240 ], [ %463, %1239 ], [ %463, %928 ], [ %463, %1510 ], [ %463, %1527 ], [ %463, %1526 ], [ %463, %1502 ], [ %463, %1580 ], [ %463, %1595 ], [ %463, %490 ], [ %463, %487 ], [ %463, %492 ], [ %463, %497 ], [ %463, %543 ], [ %463, %714 ], [ %463, %666 ], [ %463, %674 ], [ %1677, %1765 ], [ %1677, %1792 ], [ %1677, %1798 ], [ %1677, %1770 ], [ %1677, %1778 ], [ %1677, %1739 ], [ %463, %484 ]
  %1817 = phi i8 [ %456, %1599 ], [ %456, %1541 ], [ %456, %1564 ], [ %456, %1548 ], [ %456, %1459 ], [ %456, %1338 ], [ %456, %1335 ], [ %456, %1329 ], [ %456, %1326 ], [ %456, %1289 ], [ %456, %1283 ], [ %456, %1280 ], [ %456, %1245 ], [ %456, %1244 ], [ %456, %1243 ], [ %456, %1242 ], [ %456, %1241 ], [ %456, %1240 ], [ %456, %1239 ], [ %456, %928 ], [ %456, %1510 ], [ %456, %1527 ], [ %456, %1526 ], [ %456, %1502 ], [ %456, %1580 ], [ %456, %1595 ], [ %456, %490 ], [ %456, %487 ], [ %456, %492 ], [ %456, %497 ], [ %456, %543 ], [ %456, %714 ], [ %456, %666 ], [ %456, %674 ], [ %456, %1765 ], [ %456, %1792 ], [ %456, %1798 ], [ %456, %1770 ], [ %456, %1778 ], [ %1707, %1739 ], [ %456, %484 ]
  %1818 = phi i64 [ %458, %1599 ], [ %458, %1541 ], [ %458, %1564 ], [ %458, %1548 ], [ %458, %1459 ], [ %458, %1338 ], [ %458, %1335 ], [ %458, %1329 ], [ %458, %1326 ], [ %458, %1289 ], [ %458, %1283 ], [ %458, %1280 ], [ %458, %1245 ], [ %458, %1244 ], [ %458, %1243 ], [ %458, %1242 ], [ %458, %1241 ], [ %458, %1240 ], [ %458, %1239 ], [ %458, %928 ], [ %458, %1510 ], [ %458, %1527 ], [ %458, %1526 ], [ %458, %1502 ], [ %458, %1580 ], [ %458, %1595 ], [ %458, %490 ], [ %458, %487 ], [ %458, %492 ], [ %458, %497 ], [ %458, %543 ], [ %458, %714 ], [ %458, %666 ], [ %458, %674 ], [ 0, %1765 ], [ 0, %1792 ], [ 0, %1798 ], [ 0, %1770 ], [ 0, %1778 ], [ 0, %1739 ], [ %458, %484 ]
  br i1 %44, label %1880, label %1819

1819:                                             ; preds = %1807
  %1820 = load ptr, ptr %63, align 8, !tbaa !105
  br label %1821

1821:                                             ; preds = %1819, %740, %745, %749, %753, %757, %757, %757
  %1822 = phi ptr [ %1820, %1819 ], [ %738, %757 ], [ %738, %757 ], [ %738, %757 ], [ %738, %753 ], [ %738, %749 ], [ %738, %745 ], [ %738, %740 ]
  %1823 = phi i64 [ %1818, %1819 ], [ %458, %757 ], [ %458, %757 ], [ %458, %757 ], [ %458, %753 ], [ %458, %749 ], [ %458, %745 ], [ %458, %740 ]
  %1824 = phi i8 [ %1817, %1819 ], [ %456, %757 ], [ %456, %757 ], [ %456, %757 ], [ %456, %753 ], [ %456, %749 ], [ %456, %745 ], [ %456, %740 ]
  %1825 = phi i64 [ %1816, %1819 ], [ %463, %757 ], [ %463, %757 ], [ %463, %757 ], [ %463, %753 ], [ %463, %749 ], [ %463, %745 ], [ %463, %740 ]
  %1826 = phi ptr [ %1815, %1819 ], [ %451, %757 ], [ %451, %757 ], [ %451, %757 ], [ %451, %753 ], [ %451, %749 ], [ %451, %745 ], [ %451, %740 ]
  %1827 = phi i8 [ %1814, %1819 ], [ %448, %757 ], [ %448, %757 ], [ %448, %757 ], [ %448, %753 ], [ %448, %749 ], [ %448, %745 ], [ %448, %740 ]
  %1828 = phi i8 [ %1813, %1819 ], [ %449, %757 ], [ %449, %757 ], [ %449, %757 ], [ %449, %753 ], [ %449, %749 ], [ %449, %745 ], [ %449, %740 ]
  %1829 = phi i32 [ %1812, %1819 ], [ %461, %757 ], [ %461, %757 ], [ %461, %757 ], [ %461, %753 ], [ %461, %749 ], [ %461, %745 ], [ %461, %740 ]
  %1830 = phi i8 [ %1811, %1819 ], [ %452, %757 ], [ %452, %757 ], [ %452, %757 ], [ %452, %753 ], [ %452, %749 ], [ %452, %745 ], [ %452, %740 ]
  %1831 = phi ptr [ %1810, %1819 ], [ %453, %757 ], [ %453, %757 ], [ %453, %757 ], [ %453, %753 ], [ %453, %749 ], [ %453, %745 ], [ %453, %740 ]
  %1832 = phi i64 [ %1809, %1819 ], [ -1, %757 ], [ -1, %757 ], [ -1, %757 ], [ -1, %753 ], [ -1, %749 ], [ -1, %745 ], [ -1, %740 ]
  %1833 = phi i1 [ %1808, %1819 ], [ false, %757 ], [ false, %757 ], [ false, %757 ], [ false, %753 ], [ false, %749 ], [ false, %745 ], [ false, %740 ]
  %1834 = load ptr, ptr %42, align 8, !tbaa !107
  %1835 = icmp eq ptr %1822, null
  br i1 %1835, label %1836, label %1837

1836:                                             ; preds = %1821
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.463, i32 noundef 12977) #15
  br label %1837

1837:                                             ; preds = %1836, %1821
  %1838 = icmp ugt ptr %1834, %1822
  br i1 %1838, label %1839, label %1878

1839:                                             ; preds = %1837
  %1840 = ptrtoint ptr %1834 to i64
  br label %1841

1841:                                             ; preds = %1874, %1839
  %1842 = phi ptr [ %1876, %1874 ], [ %1822, %1839 ]
  %1843 = load i8, ptr %1842, align 1, !tbaa !17
  switch i8 %1843, label %1844 [
    i8 32, label %1874
    i8 13, label %1874
    i8 12, label %1874
    i8 11, label %1874
    i8 10, label %1874
    i8 9, label %1874
  ]

1844:                                             ; preds = %1841
  %1845 = load i32, ptr %465, align 8, !tbaa !50
  %1846 = icmp eq i32 %1845, 0
  br i1 %1846, label %1872, label %1847

1847:                                             ; preds = %1844
  %1848 = ptrtoint ptr %1842 to i64
  %1849 = sub i64 %1840, %1848
  %1850 = zext i8 %1843 to i64
  %1851 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1850
  %1852 = load i8, ptr %1851, align 1, !tbaa !17
  %1853 = zext i8 %1852 to i64
  %1854 = icmp slt i64 %1849, %1853
  br i1 %1854, label %1878, label %1855

1855:                                             ; preds = %1847
  switch i8 %1843, label %1878 [
    i8 -62, label %1868
    i8 -30, label %1856
  ]

1856:                                             ; preds = %1855
  %1857 = getelementptr inbounds i8, ptr %1842, i64 1
  %1858 = load i8, ptr %1857, align 1, !tbaa !17
  %1859 = icmp eq i8 %1858, -128
  br i1 %1859, label %1860, label %1878

1860:                                             ; preds = %1856
  %1861 = getelementptr inbounds i8, ptr %1842, i64 2
  %1862 = load i8, ptr %1861, align 1, !tbaa !17
  %1863 = and i8 %1862, -2
  %1864 = icmp eq i8 %1863, -114
  %1865 = icmp eq i8 %1863, -88
  %1866 = or i1 %1864, %1865
  %1867 = freeze i1 %1866
  br i1 %1867, label %1874, label %1878

1868:                                             ; preds = %1855
  %1869 = getelementptr inbounds i8, ptr %1842, i64 1
  %1870 = load i8, ptr %1869, align 1, !tbaa !17
  %1871 = icmp eq i8 %1870, -123
  br i1 %1871, label %1874, label %1878

1872:                                             ; preds = %1844
  %1873 = icmp eq i8 %1843, -123
  br i1 %1873, label %1874, label %1878

1874:                                             ; preds = %1872, %1868, %1860, %1841, %1841, %1841, %1841, %1841, %1841
  %1875 = phi i64 [ 1, %1872 ], [ 1, %1841 ], [ 3, %1860 ], [ 2, %1868 ], [ 1, %1841 ], [ 1, %1841 ], [ 1, %1841 ], [ 1, %1841 ], [ 1, %1841 ]
  %1876 = getelementptr inbounds i8, ptr %1842, i64 %1875
  %1877 = icmp ult ptr %1876, %1834
  br i1 %1877, label %1841, label %1878

1878:                                             ; preds = %1847, %1855, %1856, %1860, %1868, %1872, %1874, %1837
  %1879 = phi ptr [ %1822, %1837 ], [ %1842, %1872 ], [ %1842, %1868 ], [ %1842, %1860 ], [ %1842, %1856 ], [ %1842, %1855 ], [ %1842, %1847 ], [ %1876, %1874 ]
  store ptr %1879, ptr %63, align 8, !tbaa !105
  br label %1880

1880:                                             ; preds = %1878, %1807
  %1881 = phi i64 [ %1823, %1878 ], [ %1818, %1807 ]
  %1882 = phi i8 [ %1824, %1878 ], [ %1817, %1807 ]
  %1883 = phi i64 [ %1825, %1878 ], [ %1816, %1807 ]
  %1884 = phi ptr [ %1826, %1878 ], [ %1815, %1807 ]
  %1885 = phi i8 [ %1827, %1878 ], [ %1814, %1807 ]
  %1886 = phi i8 [ %1828, %1878 ], [ %1813, %1807 ]
  %1887 = phi i32 [ %1829, %1878 ], [ %1812, %1807 ]
  %1888 = phi i8 [ %1830, %1878 ], [ %1811, %1807 ]
  %1889 = phi ptr [ %1831, %1878 ], [ %1810, %1807 ]
  %1890 = phi i64 [ %1832, %1878 ], [ %1809, %1807 ]
  %1891 = phi i1 [ %1833, %1878 ], [ %1808, %1807 ]
  %1892 = icmp eq i64 %1881, 0
  %1893 = load i64, ptr %11, align 8, !tbaa !9
  br i1 %1892, label %1925, label %1894

1894:                                             ; preds = %1880
  %1895 = icmp ugt i64 %459, %1893
  br i1 %1895, label %1896, label %2045

1896:                                             ; preds = %1894
  %1897 = load ptr, ptr %63, align 8, !tbaa !105
  %1898 = ptrtoint ptr %1897 to i64
  %1899 = ptrtoint ptr %464 to i64
  %1900 = sub i64 %1898, %1899
  %1901 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %1902 = load ptr, ptr %1901, align 8, !tbaa !65
  %1903 = ptrtoint ptr %1902 to i64
  %1904 = sub i64 %1898, %1903
  %1905 = load ptr, ptr %61, align 8, !tbaa !112
  %1906 = icmp eq ptr %1905, %168
  br i1 %1906, label %1912, label %1907

1907:                                             ; preds = %1896
  %1908 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1909 = load ptr, ptr %1908, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1909, i32 noundef 11) #15
  %1910 = load ptr, ptr %1901, align 8, !tbaa !65
  %1911 = ptrtoint ptr %1910 to i64
  br label %1912

1912:                                             ; preds = %1907, %1896
  %1913 = phi i64 [ %1911, %1907 ], [ %1903, %1896 ]
  %1914 = phi ptr [ %1910, %1907 ], [ %1902, %1896 ]
  %1915 = load i32, ptr %465, align 8, !tbaa !50
  %1916 = icmp ne i32 %1915, 0
  %1917 = zext i1 %1916 to i32
  %1918 = shl i64 %1900, 32
  %1919 = ashr exact i64 %1918, 32
  %1920 = load ptr, ptr %42, align 8, !tbaa !107
  %1921 = ptrtoint ptr %1920 to i64
  %1922 = add i64 %1913, %1904
  %1923 = sub i64 %1921, %1922
  %1924 = getelementptr inbounds i8, ptr %1914, i64 %1904
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %1916, ptr noundef nonnull @.str.536, ptr nonnull poison, i32 noundef %1917, i64 noundef %1919, ptr noundef %464, i32 noundef %1917, i64 noundef %1904, ptr noundef %1914, i32 noundef %1917, i64 noundef %1923, ptr noundef %1924)
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.220, i32 noundef 14956) #15
  br label %2045

1925:                                             ; preds = %1880
  br i1 %3, label %2045, label %1926

1926:                                             ; preds = %1925
  %1927 = load ptr, ptr %63, align 8, !tbaa !105
  %1928 = load i8, ptr %1927, align 1, !tbaa !17
  %1929 = icmp eq i8 %1928, 45
  br i1 %1929, label %1930, label %2045

1930:                                             ; preds = %1926
  %1931 = getelementptr inbounds i8, ptr %1927, i64 1
  %1932 = load ptr, ptr %42, align 8, !tbaa !107
  %1933 = icmp ule ptr %1932, %1931
  %1934 = select i1 %44, i1 true, i1 %1933
  br i1 %1934, label %1974, label %1935

1935:                                             ; preds = %1930
  %1936 = ptrtoint ptr %1932 to i64
  br label %1937

1937:                                             ; preds = %1970, %1935
  %1938 = phi ptr [ %1972, %1970 ], [ %1931, %1935 ]
  %1939 = load i8, ptr %1938, align 1, !tbaa !17
  switch i8 %1939, label %1940 [
    i8 32, label %1970
    i8 13, label %1970
    i8 12, label %1970
    i8 11, label %1970
    i8 10, label %1970
    i8 9, label %1970
  ]

1940:                                             ; preds = %1937
  %1941 = load i32, ptr %465, align 8, !tbaa !50
  %1942 = icmp eq i32 %1941, 0
  br i1 %1942, label %1968, label %1943

1943:                                             ; preds = %1940
  %1944 = ptrtoint ptr %1938 to i64
  %1945 = sub i64 %1936, %1944
  %1946 = zext i8 %1939 to i64
  %1947 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1946
  %1948 = load i8, ptr %1947, align 1, !tbaa !17
  %1949 = zext i8 %1948 to i64
  %1950 = icmp slt i64 %1945, %1949
  br i1 %1950, label %1974, label %1951

1951:                                             ; preds = %1943
  switch i8 %1939, label %1974 [
    i8 -62, label %1964
    i8 -30, label %1952
  ]

1952:                                             ; preds = %1951
  %1953 = getelementptr inbounds i8, ptr %1938, i64 1
  %1954 = load i8, ptr %1953, align 1, !tbaa !17
  %1955 = icmp eq i8 %1954, -128
  br i1 %1955, label %1956, label %1974

1956:                                             ; preds = %1952
  %1957 = getelementptr inbounds i8, ptr %1938, i64 2
  %1958 = load i8, ptr %1957, align 1, !tbaa !17
  %1959 = and i8 %1958, -2
  %1960 = icmp eq i8 %1959, -114
  %1961 = icmp eq i8 %1959, -88
  %1962 = or i1 %1960, %1961
  %1963 = freeze i1 %1962
  br i1 %1963, label %1970, label %1974

1964:                                             ; preds = %1951
  %1965 = getelementptr inbounds i8, ptr %1938, i64 1
  %1966 = load i8, ptr %1965, align 1, !tbaa !17
  %1967 = icmp eq i8 %1966, -123
  br i1 %1967, label %1970, label %1974

1968:                                             ; preds = %1940
  %1969 = icmp eq i8 %1939, -123
  br i1 %1969, label %1970, label %1974

1970:                                             ; preds = %1968, %1964, %1956, %1937, %1937, %1937, %1937, %1937, %1937
  %1971 = phi i64 [ 1, %1968 ], [ 1, %1937 ], [ 3, %1956 ], [ 2, %1964 ], [ 1, %1937 ], [ 1, %1937 ], [ 1, %1937 ], [ 1, %1937 ], [ 1, %1937 ]
  %1972 = getelementptr inbounds i8, ptr %1938, i64 %1971
  %1973 = icmp ult ptr %1972, %1932
  br i1 %1973, label %1937, label %1974

1974:                                             ; preds = %1970, %1968, %1964, %1956, %1952, %1951, %1943, %1930
  %1975 = phi ptr [ %1931, %1930 ], [ %1938, %1968 ], [ %1938, %1964 ], [ %1938, %1956 ], [ %1938, %1952 ], [ %1938, %1951 ], [ %1938, %1943 ], [ %1972, %1970 ]
  %1976 = icmp ult ptr %1975, %1932
  br i1 %1976, label %1977, label %2045

1977:                                             ; preds = %1974
  %1978 = load i8, ptr %1975, align 1, !tbaa !17
  %1979 = icmp eq i8 %1978, 93
  br i1 %1979, label %2045, label %1980

1980:                                             ; preds = %1977
  store ptr %1975, ptr %63, align 8, !tbaa !105
  br i1 %1891, label %1981, label %374

1981:                                             ; preds = %1980
  br i1 %6, label %1987, label %1982

1982:                                             ; preds = %1981
  %1983 = load ptr, ptr %61, align 8, !tbaa !112
  %1984 = icmp eq ptr %1983, %168
  br i1 %1984, label %2037, label %1985

1985:                                             ; preds = %1982
  %1986 = call zeroext i1 @Perl_ckwarn(i32 noundef 20) #15
  br i1 %1986, label %2015, label %2037

1987:                                             ; preds = %1981
  %1988 = icmp ult ptr %1975, %464
  %1989 = ptrtoint ptr %1975 to i64
  %1990 = ptrtoint ptr %464 to i64
  %1991 = sub i64 %1989, %1990
  %1992 = trunc i64 %1991 to i32
  %1993 = select i1 %1988, i32 0, i32 %1992
  %1994 = load ptr, ptr %61, align 8, !tbaa !112
  %1995 = icmp eq ptr %1994, %168
  br i1 %1995, label %2002, label %1996

1996:                                             ; preds = %1987
  %1997 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %1998 = load ptr, ptr %1997, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %1998, i32 noundef 11) #15
  %1999 = load ptr, ptr %63, align 8, !tbaa !105
  %2000 = load ptr, ptr %42, align 8, !tbaa !107
  %2001 = ptrtoint ptr %1999 to i64
  br label %2002

2002:                                             ; preds = %1987, %1996
  %2003 = phi i64 [ %1989, %1987 ], [ %2001, %1996 ]
  %2004 = phi ptr [ %1932, %1987 ], [ %2000, %1996 ]
  %2005 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2006 = load ptr, ptr %2005, align 8, !tbaa !65
  %2007 = ptrtoint ptr %2006 to i64
  %2008 = sub i64 %2003, %2007
  %2009 = load i32, ptr %465, align 8, !tbaa !50
  %2010 = icmp ne i32 %2009, 0
  %2011 = zext i1 %2010 to i32
  %2012 = ptrtoint ptr %2004 to i64
  %2013 = sub i64 %2012, %2003
  %2014 = getelementptr inbounds i8, ptr %2006, i64 %2008
  call void (i1, ptr, ptr, ...) @S_re_croak2(i1 noundef zeroext %2010, ptr noundef nonnull @.str.537, ptr nonnull poison, i32 noundef %1993, i32 noundef %1993, ptr noundef %464, i32 noundef %2011, i64 noundef %2008, ptr noundef %2006, i32 noundef %2011, i64 noundef %2013, ptr noundef %2014)
  br label %2037

2015:                                             ; preds = %1985
  %2016 = load ptr, ptr %61, align 8, !tbaa !112
  %2017 = icmp eq ptr %2016, %168
  br i1 %2017, label %2037, label %2018

2018:                                             ; preds = %2015
  %2019 = load ptr, ptr %63, align 8, !tbaa !105
  %2020 = ptrtoint ptr %2019 to i64
  %2021 = ptrtoint ptr %464 to i64
  %2022 = sub i64 %2020, %2021
  %2023 = icmp ult ptr %2019, %464
  %2024 = trunc i64 %2022 to i32
  %2025 = select i1 %2023, i32 0, i32 %2024
  %2026 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2027 = load ptr, ptr %2026, align 8, !tbaa !65
  %2028 = ptrtoint ptr %2027 to i64
  %2029 = sub i64 %2020, %2028
  %2030 = load i32, ptr %465, align 8, !tbaa !50
  %2031 = icmp ne i32 %2030, 0
  %2032 = zext i1 %2031 to i32
  %2033 = load ptr, ptr %42, align 8, !tbaa !107
  %2034 = ptrtoint ptr %2033 to i64
  %2035 = sub i64 %2034, %2020
  %2036 = getelementptr inbounds i8, ptr %2027, i64 %2029
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.538, i32 noundef %2025, i32 noundef %2025, ptr noundef %464, i32 noundef %2032, i64 noundef %2029, ptr noundef %2027, i32 noundef %2032, i64 noundef %2035, ptr noundef %2036) #15
  br label %2037

2037:                                             ; preds = %2002, %2018, %2015, %1985, %1982
  %2038 = load ptr, ptr %61, align 8, !tbaa !112
  %2039 = icmp eq ptr %2038, %168
  br i1 %2039, label %2043, label %2040

2040:                                             ; preds = %2037
  %2041 = load ptr, ptr %18, align 8, !tbaa !5
  %2042 = call ptr @Perl__add_range_to_invlist(ptr noundef %2041, i64 noundef 45, i64 noundef 45) #15
  store ptr %2042, ptr %18, align 8, !tbaa !5
  br label %2043

2043:                                             ; preds = %2040, %2037
  %2044 = add i64 %1883, 1
  br label %374

2045:                                             ; preds = %1974, %1977, %1925, %1926, %1894, %1912
  %2046 = phi i64 [ %1881, %1912 ], [ %1881, %1894 ], [ 0, %1925 ], [ 0, %1926 ], [ 0, %1977 ], [ 0, %1974 ]
  %2047 = phi i64 [ %459, %1912 ], [ %459, %1894 ], [ %1893, %1925 ], [ %1893, %1926 ], [ %1893, %1977 ], [ %1893, %1974 ]
  br i1 %1891, label %374, label %2048

2048:                                             ; preds = %2045
  %2049 = load i64, ptr %11, align 8, !tbaa !9
  %2050 = icmp ugt i64 %2049, 255
  br i1 %2050, label %2051, label %2053

2051:                                             ; preds = %2048
  %2052 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 27
  store i32 1, ptr %2052, align 8, !tbaa !51
  br label %2053

2053:                                             ; preds = %2051, %2048
  %2054 = load i32, ptr %0, align 8, !tbaa !66
  %2055 = and i32 %2054, 4
  %2056 = icmp ne i32 %2055, 0
  %2057 = and i1 %300, %2056
  %2058 = icmp eq i64 %2049, %2047
  %2059 = select i1 %2057, i1 %2058, i1 false
  br i1 %2059, label %2060, label %2099

2060:                                             ; preds = %2053
  %2061 = icmp eq i64 %2047, 223
  br i1 %2061, label %2074, label %2062

2062:                                             ; preds = %2060
  br i1 %2050, label %2063, label %2099

2063:                                             ; preds = %2062
  %2064 = load ptr, ptr @PL_HasMultiCharFold, align 8, !tbaa !5
  %2065 = call i64 @Perl__invlist_search(ptr noundef %2064, i64 noundef %2047) #15
  %2066 = icmp eq ptr %2064, null
  br i1 %2066, label %2067, label %2068

2067:                                             ; preds = %2063
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.229, i32 noundef 54) #15
  br label %2068

2068:                                             ; preds = %2063, %2067
  %2069 = and i64 %2065, -9223372036854775807
  %2070 = icmp eq i64 %2069, 0
  br i1 %2070, label %2071, label %2099

2071:                                             ; preds = %2068
  %2072 = load i64, ptr %11, align 8, !tbaa !9
  %2073 = load i32, ptr %0, align 8, !tbaa !66
  br label %2074

2074:                                             ; preds = %2071, %2060
  %2075 = phi i32 [ %2073, %2071 ], [ %2054, %2060 ]
  %2076 = phi i64 [ %2072, %2071 ], [ 223, %2060 ]
  call void @llvm.lifetime.start.p0(i64 13, ptr nonnull %27) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %28) #15
  %2077 = and i32 %2075, 896
  %2078 = icmp eq i32 %2077, 512
  %2079 = select i1 %2078, i8 6, i8 2
  %2080 = call i64 @Perl__to_uni_fold_flags(i64 noundef %2076, ptr noundef nonnull %27, ptr noundef nonnull %28, i8 noundef zeroext %2079) #15
  %2081 = load i64, ptr %11, align 8, !tbaa !9
  %2082 = icmp eq i64 %2080, %2081
  br i1 %2082, label %2083, label %2084

2083:                                             ; preds = %2074
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %28) #15
  call void @llvm.lifetime.end.p0(i64 13, ptr nonnull %27) #15
  br label %2099

2084:                                             ; preds = %2074
  %2085 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 37
  %2086 = load i32, ptr %2085, align 4, !tbaa !104
  %2087 = icmp eq i32 %2086, 0
  br i1 %2087, label %2088, label %2096

2088:                                             ; preds = %2084
  %2089 = load i64, ptr %28, align 8, !tbaa !9
  %2090 = getelementptr inbounds i8, ptr %27, i64 %2089
  %2091 = call i64 @Perl_utf8_length(ptr noundef nonnull %27, ptr noundef nonnull %2090) #15
  %2092 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.8, i64 noundef 0) #15
  %2093 = call ptr @Perl_sv_2mortal(ptr noundef %2092) #15
  %2094 = load i64, ptr %11, align 8, !tbaa !9
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %2093, ptr noundef nonnull @.str.539, i64 noundef %2094) #15
  %2095 = call fastcc ptr @S_add_multi_match(ptr noundef %454, ptr noundef %2093, i64 noundef %2091)
  br label %2096

2096:                                             ; preds = %2084, %2088
  %2097 = phi ptr [ %454, %2084 ], [ %2095, %2088 ]
  %2098 = add i64 %1883, -1
  store i64 %447, ptr %11, align 8, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %28) #15
  call void @llvm.lifetime.end.p0(i64 13, ptr nonnull %27) #15
  br label %374

2099:                                             ; preds = %2083, %2053, %2062, %2068
  br i1 %6, label %2100, label %2376

2100:                                             ; preds = %2099
  %2101 = load ptr, ptr %61, align 8, !tbaa !112
  %2102 = icmp eq ptr %2101, %168
  br i1 %2102, label %2376, label %2103

2103:                                             ; preds = %2100
  %2104 = call zeroext i1 @Perl_ckwarn(i32 noundef 20) #15
  br i1 %2104, label %2105, label %2376

2105:                                             ; preds = %2103
  %2106 = icmp eq i64 %2046, 0
  br i1 %2106, label %2284, label %2107

2107:                                             ; preds = %2105
  %2108 = and i8 %1886, 1
  %2109 = icmp ne i8 %2108, 0
  %2110 = icmp ne i32 %1887, 0
  %2111 = select i1 %2109, i1 %2110, i1 false
  %2112 = icmp ult i64 %2047, 256
  %2113 = select i1 %2111, i1 %2112, i1 false
  br i1 %2113, label %2114, label %2137

2114:                                             ; preds = %2107
  %2115 = load ptr, ptr %63, align 8, !tbaa !105
  %2116 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2117 = load ptr, ptr %2116, align 8, !tbaa !65
  %2118 = ptrtoint ptr %2115 to i64
  %2119 = ptrtoint ptr %2117 to i64
  %2120 = sub i64 %2118, %2119
  %2121 = load ptr, ptr %61, align 8, !tbaa !112
  %2122 = icmp eq ptr %2121, %168
  br i1 %2122, label %2123, label %2126

2123:                                             ; preds = %2114
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.371, i32 noundef 15088) #15
  %2124 = load ptr, ptr %2116, align 8, !tbaa !65
  %2125 = ptrtoint ptr %2124 to i64
  br label %2126

2126:                                             ; preds = %2114, %2123
  %2127 = phi i64 [ %2119, %2114 ], [ %2125, %2123 ]
  %2128 = phi ptr [ %2117, %2114 ], [ %2124, %2123 ]
  %2129 = load i32, ptr %465, align 8, !tbaa !50
  %2130 = icmp ne i32 %2129, 0
  %2131 = zext i1 %2130 to i32
  %2132 = load ptr, ptr %42, align 8, !tbaa !107
  %2133 = ptrtoint ptr %2132 to i64
  %2134 = add i64 %2127, %2120
  %2135 = sub i64 %2133, %2134
  %2136 = getelementptr inbounds i8, ptr %2128, i64 %2120
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.540, i32 noundef %2131, i64 noundef %2120, ptr noundef %2128, i32 noundef %2131, i64 noundef %2135, ptr noundef %2136) #15
  br label %2280

2137:                                             ; preds = %2107
  %2138 = load i64, ptr %11, align 8, !tbaa !9
  %2139 = icmp eq i64 %2047, %2138
  br i1 %2139, label %2280, label %2140

2140:                                             ; preds = %2137
  br i1 %2112, label %2141, label %2146

2141:                                             ; preds = %2140
  %2142 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2047
  %2143 = load i32, ptr %2142, align 4, !tbaa !73
  %2144 = and i32 %2143, 16448
  %2145 = icmp eq i32 %2144, 16448
  br i1 %2145, label %2153, label %2146

2146:                                             ; preds = %2141, %2140
  %2147 = icmp ult i64 %2138, 256
  br i1 %2147, label %2148, label %2209

2148:                                             ; preds = %2146
  %2149 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2138
  %2150 = load i32, ptr %2149, align 4, !tbaa !73
  %2151 = and i32 %2150, 16448
  %2152 = icmp eq i32 %2151, 16448
  br i1 %2152, label %2153, label %2209

2153:                                             ; preds = %2148, %2141
  %2154 = xor i1 %2112, true
  %2155 = or i1 %2110, %2154
  br i1 %2155, label %2186, label %2156

2156:                                             ; preds = %2153
  %2157 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2047
  %2158 = load i32, ptr %2157, align 4, !tbaa !73
  %2159 = and i32 %2158, 2
  %2160 = icmp ne i32 %2159, 0
  %2161 = icmp ult i64 %2138, 256
  %2162 = and i1 %2161, %2160
  br i1 %2162, label %2163, label %2168

2163:                                             ; preds = %2156
  %2164 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2138
  %2165 = load i32, ptr %2164, align 4, !tbaa !73
  %2166 = and i32 %2165, 2
  %2167 = icmp eq i32 %2166, 0
  br i1 %2167, label %2168, label %2376

2168:                                             ; preds = %2156, %2163
  %2169 = and i32 %2158, 16392
  %2170 = icmp eq i32 %2169, 16392
  %2171 = and i1 %2161, %2170
  br i1 %2171, label %2172, label %2177

2172:                                             ; preds = %2168
  %2173 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2138
  %2174 = load i32, ptr %2173, align 4, !tbaa !73
  %2175 = and i32 %2174, 16392
  %2176 = icmp eq i32 %2175, 16392
  br i1 %2176, label %2376, label %2177

2177:                                             ; preds = %2168, %2172
  %2178 = and i32 %2158, 16400
  %2179 = icmp eq i32 %2178, 16400
  %2180 = and i1 %2161, %2179
  br i1 %2180, label %2181, label %2186

2181:                                             ; preds = %2177
  %2182 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2138
  %2183 = load i32, ptr %2182, align 4, !tbaa !73
  %2184 = and i32 %2183, 16400
  %2185 = icmp eq i32 %2184, 16400
  br i1 %2185, label %2376, label %2186

2186:                                             ; preds = %2153, %2177, %2181
  %2187 = load ptr, ptr %63, align 8, !tbaa !105
  %2188 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2189 = load ptr, ptr %2188, align 8, !tbaa !65
  %2190 = ptrtoint ptr %2187 to i64
  %2191 = ptrtoint ptr %2189 to i64
  %2192 = sub i64 %2190, %2191
  %2193 = load ptr, ptr %61, align 8, !tbaa !112
  %2194 = icmp eq ptr %2193, %168
  br i1 %2194, label %2195, label %2198

2195:                                             ; preds = %2186
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.371, i32 noundef 15105) #15
  %2196 = load ptr, ptr %2188, align 8, !tbaa !65
  %2197 = ptrtoint ptr %2196 to i64
  br label %2198

2198:                                             ; preds = %2186, %2195
  %2199 = phi i64 [ %2191, %2186 ], [ %2197, %2195 ]
  %2200 = phi ptr [ %2189, %2186 ], [ %2196, %2195 ]
  %2201 = load i32, ptr %465, align 8, !tbaa !50
  %2202 = icmp ne i32 %2201, 0
  %2203 = zext i1 %2202 to i32
  %2204 = load ptr, ptr %42, align 8, !tbaa !107
  %2205 = ptrtoint ptr %2204 to i64
  %2206 = add i64 %2199, %2192
  %2207 = sub i64 %2205, %2206
  %2208 = getelementptr inbounds i8, ptr %2200, i64 %2192
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.541, i32 noundef %2203, i64 noundef %2192, ptr noundef %2200, i32 noundef %2203, i64 noundef %2207, ptr noundef %2208) #15
  br label %2280

2209:                                             ; preds = %2148, %2146
  %2210 = icmp ugt i64 %2047, 1631
  br i1 %2210, label %2211, label %2280

2211:                                             ; preds = %2209
  %2212 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 1), align 8, !tbaa !5
  %2213 = call i64 @Perl__invlist_search(ptr noundef %2212, i64 noundef %2047) #15
  %2214 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 1), align 8, !tbaa !5
  %2215 = load i64, ptr %11, align 8, !tbaa !9
  %2216 = call i64 @Perl__invlist_search(ptr noundef %2214, i64 noundef %2215) #15
  %2217 = icmp eq i64 %2213, %2216
  br i1 %2217, label %2218, label %2251

2218:                                             ; preds = %2211
  %2219 = and i64 %2213, 1
  %2220 = icmp eq i64 %2219, 0
  br i1 %2220, label %2221, label %2280

2221:                                             ; preds = %2218
  %2222 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 1), align 8, !tbaa !5
  %2223 = call fastcc ptr @S_invlist_array(ptr noundef %2222)
  %2224 = add nuw nsw i64 %2213, 1
  %2225 = getelementptr inbounds i64, ptr %2223, i64 %2224
  %2226 = load i64, ptr %2225, align 8, !tbaa !9
  %2227 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 1), align 8, !tbaa !5
  %2228 = call fastcc ptr @S_invlist_array(ptr noundef %2227)
  %2229 = getelementptr inbounds i64, ptr %2228, i64 %2213
  %2230 = load i64, ptr %2229, align 8, !tbaa !9
  %2231 = sub i64 %2226, %2230
  %2232 = icmp eq i64 %2231, 10
  br i1 %2232, label %2280, label %2233

2233:                                             ; preds = %2221
  %2234 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 1), align 8, !tbaa !5
  %2235 = call fastcc ptr @S_invlist_array(ptr noundef %2234)
  %2236 = getelementptr inbounds i64, ptr %2235, i64 %2224
  %2237 = load i64, ptr %2236, align 8, !tbaa !9
  %2238 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 1), align 8, !tbaa !5
  %2239 = call fastcc ptr @S_invlist_array(ptr noundef %2238)
  %2240 = getelementptr inbounds i64, ptr %2239, i64 %2213
  %2241 = load i64, ptr %2240, align 8, !tbaa !9
  %2242 = sub i64 %2237, %2241
  %2243 = icmp eq i64 %2242, 11
  br i1 %2243, label %2244, label %2250

2244:                                             ; preds = %2233
  %2245 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 1), align 8, !tbaa !5
  %2246 = call fastcc ptr @S_invlist_array(ptr noundef %2245)
  %2247 = getelementptr inbounds i64, ptr %2246, i64 %2213
  %2248 = load i64, ptr %2247, align 8, !tbaa !9
  %2249 = icmp eq i64 %2248, 6608
  br i1 %2249, label %2280, label %2250

2250:                                             ; preds = %2244, %2233
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.542, i32 noundef 15141) #15
  br label %2280

2251:                                             ; preds = %2211
  %2252 = and i64 %2213, -9223372036854775807
  %2253 = icmp eq i64 %2252, 0
  %2254 = and i64 %2216, -9223372036854775807
  %2255 = icmp eq i64 %2254, 0
  %2256 = or i1 %2253, %2255
  br i1 %2256, label %2257, label %2280

2257:                                             ; preds = %2251
  %2258 = load ptr, ptr %63, align 8, !tbaa !105
  %2259 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2260 = load ptr, ptr %2259, align 8, !tbaa !65
  %2261 = ptrtoint ptr %2258 to i64
  %2262 = ptrtoint ptr %2260 to i64
  %2263 = sub i64 %2261, %2262
  %2264 = load ptr, ptr %61, align 8, !tbaa !112
  %2265 = icmp eq ptr %2264, %168
  br i1 %2265, label %2266, label %2269

2266:                                             ; preds = %2257
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.371, i32 noundef 15148) #15
  %2267 = load ptr, ptr %2259, align 8, !tbaa !65
  %2268 = ptrtoint ptr %2267 to i64
  br label %2269

2269:                                             ; preds = %2257, %2266
  %2270 = phi i64 [ %2262, %2257 ], [ %2268, %2266 ]
  %2271 = phi ptr [ %2260, %2257 ], [ %2267, %2266 ]
  %2272 = load i32, ptr %465, align 8, !tbaa !50
  %2273 = icmp ne i32 %2272, 0
  %2274 = zext i1 %2273 to i32
  %2275 = load ptr, ptr %42, align 8, !tbaa !107
  %2276 = ptrtoint ptr %2275 to i64
  %2277 = add i64 %2270, %2263
  %2278 = sub i64 %2276, %2277
  %2279 = getelementptr inbounds i8, ptr %2271, i64 %2263
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.543, i32 noundef %2274, i64 noundef %2263, ptr noundef %2271, i32 noundef %2274, i64 noundef %2278, ptr noundef %2279) #15
  br label %2280

2280:                                             ; preds = %2251, %2137, %2209, %2198, %2126, %2269, %2250, %2244, %2221, %2218
  %2281 = load i64, ptr %11, align 8
  %2282 = icmp eq i64 %2047, %2281
  %2283 = select i1 %2282, i1 %2110, i1 false
  br i1 %2283, label %2288, label %2376

2284:                                             ; preds = %2105
  %2285 = icmp eq i32 %1887, 0
  br i1 %2285, label %2376, label %2286

2286:                                             ; preds = %2284
  %2287 = load i64, ptr %11, align 8
  br label %2288

2288:                                             ; preds = %2286, %2280
  %2289 = phi i64 [ %2287, %2286 ], [ %2047, %2280 ]
  %2290 = icmp ult i64 %2289, 256
  br i1 %2290, label %2291, label %2376

2291:                                             ; preds = %2288
  %2292 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2289
  %2293 = load i32, ptr %2292, align 4, !tbaa !73
  %2294 = and i32 %2293, 16448
  %2295 = icmp eq i32 %2294, 16448
  br i1 %2295, label %2296, label %2334

2296:                                             ; preds = %2291
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %29) #15
  switch i64 %2289, label %2298 [
    i64 94, label %2297
    i64 93, label %2297
    i64 92, label %2297
    i64 45, label %2297
  ]

2297:                                             ; preds = %2296, %2296, %2296, %2296
  store i8 92, ptr %29, align 1, !tbaa !17
  br label %2298

2298:                                             ; preds = %2296, %2297
  %2299 = phi i32 [ 1, %2297 ], [ 0, %2296 ]
  %2300 = trunc i64 %2289 to i8
  %2301 = add nuw nsw i32 %2299, 1
  %2302 = zext i32 %2299 to i64
  %2303 = getelementptr inbounds [3 x i8], ptr %29, i64 0, i64 %2302
  store i8 %2300, ptr %2303, align 1, !tbaa !17
  %2304 = zext i32 %2301 to i64
  %2305 = getelementptr inbounds [3 x i8], ptr %29, i64 0, i64 %2304
  store i8 0, ptr %2305, align 1, !tbaa !17
  %2306 = load ptr, ptr %63, align 8, !tbaa !105
  %2307 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2308 = load ptr, ptr %2307, align 8, !tbaa !65
  %2309 = ptrtoint ptr %2306 to i64
  %2310 = ptrtoint ptr %2308 to i64
  %2311 = sub i64 %2309, %2310
  %2312 = load ptr, ptr %61, align 8, !tbaa !112
  %2313 = icmp eq ptr %2312, %168
  br i1 %2313, label %2314, label %2319

2314:                                             ; preds = %2298
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.371, i32 noundef 15168) #15
  %2315 = load ptr, ptr %63, align 8, !tbaa !105
  %2316 = load ptr, ptr %2307, align 8, !tbaa !65
  %2317 = ptrtoint ptr %2315 to i64
  %2318 = ptrtoint ptr %2316 to i64
  br label %2319

2319:                                             ; preds = %2298, %2314
  %2320 = phi i64 [ %2310, %2298 ], [ %2318, %2314 ]
  %2321 = phi i64 [ %2309, %2298 ], [ %2317, %2314 ]
  %2322 = phi ptr [ %2308, %2298 ], [ %2316, %2314 ]
  %2323 = ptrtoint ptr %464 to i64
  %2324 = sub i64 %2321, %2323
  %2325 = trunc i64 %2324 to i32
  %2326 = load i32, ptr %465, align 8, !tbaa !50
  %2327 = icmp ne i32 %2326, 0
  %2328 = zext i1 %2327 to i32
  %2329 = load ptr, ptr %42, align 8, !tbaa !107
  %2330 = ptrtoint ptr %2329 to i64
  %2331 = add i64 %2320, %2311
  %2332 = sub i64 %2330, %2331
  %2333 = getelementptr inbounds i8, ptr %2322, i64 %2311
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.544, i32 noundef %2325, ptr noundef %464, ptr noundef nonnull %29, i32 noundef %2328, i64 noundef %2311, ptr noundef %2322, i32 noundef %2328, i64 noundef %2332, ptr noundef %2333) #15
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %29) #15
  br label %2376

2334:                                             ; preds = %2291
  %2335 = and i32 %2293, 8388608
  %2336 = icmp eq i32 %2335, 0
  br i1 %2336, label %2376, label %2337

2337:                                             ; preds = %2334
  %2338 = load ptr, ptr %63, align 8, !tbaa !105
  %2339 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %2340 = load ptr, ptr %2339, align 8, !tbaa !65
  %2341 = ptrtoint ptr %2338 to i64
  %2342 = ptrtoint ptr %2340 to i64
  %2343 = sub i64 %2341, %2342
  %2344 = load ptr, ptr %61, align 8, !tbaa !112
  %2345 = icmp eq ptr %2344, %168
  br i1 %2345, label %2346, label %2350

2346:                                             ; preds = %2337
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.371, i32 noundef 15176) #15
  %2347 = load ptr, ptr %63, align 8, !tbaa !105
  %2348 = load i64, ptr %11, align 8, !tbaa !9
  %2349 = ptrtoint ptr %2347 to i64
  br label %2350

2350:                                             ; preds = %2337, %2346
  %2351 = phi i64 [ %2341, %2337 ], [ %2349, %2346 ]
  %2352 = phi i64 [ %2289, %2337 ], [ %2348, %2346 ]
  %2353 = ptrtoint ptr %464 to i64
  %2354 = sub i64 %2351, %2353
  %2355 = trunc i64 %2354 to i32
  %2356 = trunc i64 %2352 to i8
  switch i8 %2356, label %2363 [
    i8 7, label %2364
    i8 8, label %2357
    i8 27, label %2358
    i8 12, label %2359
    i8 10, label %2360
    i8 13, label %2361
    i8 9, label %2362
  ]

2357:                                             ; preds = %2350
  br label %2364

2358:                                             ; preds = %2350
  br label %2364

2359:                                             ; preds = %2350
  br label %2364

2360:                                             ; preds = %2350
  br label %2364

2361:                                             ; preds = %2350
  br label %2364

2362:                                             ; preds = %2350
  br label %2364

2363:                                             ; preds = %2350
  br label %2364

2364:                                             ; preds = %2350, %2357, %2358, %2359, %2360, %2361, %2362, %2363
  %2365 = phi ptr [ null, %2363 ], [ @.str.578, %2362 ], [ @.str.577, %2361 ], [ @.str.576, %2360 ], [ @.str.575, %2359 ], [ @.str.574, %2358 ], [ @.str.573, %2357 ], [ @.str.572, %2350 ]
  %2366 = load i32, ptr %465, align 8, !tbaa !50
  %2367 = icmp ne i32 %2366, 0
  %2368 = zext i1 %2367 to i32
  %2369 = load ptr, ptr %2339, align 8, !tbaa !65
  %2370 = load ptr, ptr %42, align 8, !tbaa !107
  %2371 = ptrtoint ptr %2370 to i64
  %2372 = ptrtoint ptr %2369 to i64
  %2373 = add i64 %2343, %2372
  %2374 = sub i64 %2371, %2373
  %2375 = getelementptr inbounds i8, ptr %2369, i64 %2343
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 20, ptr noundef nonnull @.str.544, i32 noundef %2355, ptr noundef %464, ptr noundef %2365, i32 noundef %2368, i64 noundef %2343, ptr noundef %2369, i32 noundef %2368, i64 noundef %2374, ptr noundef %2375) #15
  br label %2376

2376:                                             ; preds = %2163, %2181, %2172, %2288, %2280, %2284, %2364, %2334, %2319, %2103, %2100, %2099
  %2377 = load ptr, ptr %61, align 8, !tbaa !112
  %2378 = icmp eq ptr %2377, %168
  br i1 %2378, label %374, label %2379

2379:                                             ; preds = %2376
  %2380 = load i64, ptr %11, align 8, !tbaa !9
  %2381 = call ptr @Perl__add_range_to_invlist(ptr noundef %1884, i64 noundef %2047, i64 noundef %2380) #15
  br label %374

2382:                                             ; preds = %1728, %439, %374
  %2383 = phi i1 [ false, %374 ], [ false, %439 ], [ true, %1728 ]
  %2384 = phi i8 [ %375, %374 ], [ %375, %439 ], [ %1605, %1728 ]
  %2385 = phi ptr [ %378, %374 ], [ %378, %439 ], [ %1676, %1728 ]
  %2386 = phi i8 [ %379, %374 ], [ %379, %439 ], [ %1604, %1728 ]
  %2387 = phi ptr [ %380, %374 ], [ %380, %439 ], [ %1603, %1728 ]
  %2388 = phi ptr [ %381, %374 ], [ %381, %439 ], [ %454, %1728 ]
  %2389 = phi i64 [ %382, %374 ], [ %382, %439 ], [ %1677, %1728 ]
  %2390 = phi i64 [ %385, %374 ], [ %385, %439 ], [ %1602, %1728 ]
  %2391 = phi i64 [ %387, %374 ], [ %387, %439 ], [ %459, %1728 ]
  %2392 = icmp eq ptr %2388, null
  br i1 %2392, label %2490, label %2393

2393:                                             ; preds = %2382
  %2394 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @.str.545, i64 noundef 2, i32 noundef 524288) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %30) #15
  %2395 = load <2 x ptr>, ptr %42, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %31) #15
  br i1 %243, label %2397, label %2396

2396:                                             ; preds = %2393
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.546, i32 noundef 15241) #15
  br label %2397

2397:                                             ; preds = %2396, %2393
  %2398 = getelementptr inbounds %struct.av, ptr %2388, i64 0, i32 2
  %2399 = load i32, ptr %2398, align 4, !tbaa !73
  %2400 = and i32 %2399, 255
  %2401 = icmp eq i32 %2400, 11
  br i1 %2401, label %2404, label %2402

2402:                                             ; preds = %2397
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.383, i32 noundef 21) #15
  %2403 = load i32, ptr %2398, align 4, !tbaa !13
  br label %2404

2404:                                             ; preds = %2402, %2397
  %2405 = phi i32 [ %2399, %2397 ], [ %2403, %2402 ]
  %2406 = and i32 %2405, 8388608
  %2407 = icmp eq i32 %2406, 0
  br i1 %2407, label %2410, label %2408

2408:                                             ; preds = %2404
  %2409 = call i32 @Perl_mg_size(ptr noundef nonnull %2388) #15
  br label %2415

2410:                                             ; preds = %2404
  %2411 = load ptr, ptr %2388, align 8, !tbaa !81
  %2412 = getelementptr inbounds %struct.xpvav, ptr %2411, i64 0, i32 2
  %2413 = load i64, ptr %2412, align 8, !tbaa !83
  %2414 = trunc i64 %2413 to i32
  br label %2415

2415:                                             ; preds = %2408, %2410
  %2416 = phi i32 [ %2409, %2408 ], [ %2414, %2410 ]
  %2417 = icmp sgt i32 %2416, 0
  br i1 %2417, label %2418, label %2450

2418:                                             ; preds = %2415
  %2419 = zext i32 %2416 to i64
  br label %2420

2420:                                             ; preds = %2418, %2446
  %2421 = phi i64 [ %2419, %2418 ], [ %2449, %2446 ]
  %2422 = phi i8 [ 1, %2418 ], [ %2447, %2446 ]
  %2423 = call zeroext i1 @Perl_av_exists(ptr noundef nonnull %2388, i64 noundef %2421) #15
  br i1 %2423, label %2424, label %2446

2424:                                             ; preds = %2420
  %2425 = call ptr @Perl_av_fetch(ptr noundef nonnull %2388, i64 noundef %2421, i32 noundef 0) #15
  %2426 = load ptr, ptr %2425, align 8, !tbaa !5
  %2427 = call ptr @Perl_av_pop(ptr noundef %2426) #15
  %2428 = icmp eq ptr %2427, @PL_sv_undef
  br i1 %2428, label %2446, label %2429

2429:                                             ; preds = %2424
  %2430 = and i8 %2422, 1
  %2431 = icmp eq i8 %2430, 0
  br i1 %2431, label %2432, label %2433

2432:                                             ; preds = %2429
  call void @Perl_sv_catpv(ptr noundef %2394, ptr noundef nonnull @.str.547) #15
  br label %2433

2433:                                             ; preds = %2432, %2429
  %2434 = getelementptr inbounds %struct.sv, ptr %2427, i64 0, i32 3
  %2435 = load ptr, ptr %2434, align 8, !tbaa !17
  call void @Perl_sv_catpv(ptr noundef %2394, ptr noundef %2435) #15
  %2436 = load ptr, ptr %2425, align 8, !tbaa !5
  %2437 = call ptr @Perl_av_pop(ptr noundef %2436) #15
  %2438 = icmp eq ptr %2437, @PL_sv_undef
  br i1 %2438, label %2446, label %2439

2439:                                             ; preds = %2433, %2439
  %2440 = phi ptr [ %2444, %2439 ], [ %2437, %2433 ]
  call void @Perl_sv_catpv(ptr noundef %2394, ptr noundef nonnull @.str.547) #15
  %2441 = getelementptr inbounds %struct.sv, ptr %2440, i64 0, i32 3
  %2442 = load ptr, ptr %2441, align 8, !tbaa !17
  call void @Perl_sv_catpv(ptr noundef %2394, ptr noundef %2442) #15
  %2443 = load ptr, ptr %2425, align 8, !tbaa !5
  %2444 = call ptr @Perl_av_pop(ptr noundef %2443) #15
  %2445 = icmp eq ptr %2444, @PL_sv_undef
  br i1 %2445, label %2446, label %2439, !llvm.loop !414

2446:                                             ; preds = %2439, %2433, %2424, %2420
  %2447 = phi i8 [ %2422, %2420 ], [ %2422, %2424 ], [ 0, %2433 ], [ 0, %2439 ]
  %2448 = icmp sgt i64 %2421, 1
  %2449 = add nsw i64 %2421, -1
  br i1 %2448, label %2420, label %2450, !llvm.loop !415

2450:                                             ; preds = %2446, %2415
  %2451 = icmp eq i64 %2389, 0
  br i1 %2451, label %2457, label %2452

2452:                                             ; preds = %2450
  call void @Perl_sv_catpv(ptr noundef %2394, ptr noundef nonnull @.str.548) #15
  %2453 = load ptr, ptr %63, align 8, !tbaa !105
  %2454 = ptrtoint ptr %2453 to i64
  %2455 = ptrtoint ptr %64 to i64
  %2456 = sub i64 %2454, %2455
  call void @Perl_sv_catpvn_flags(ptr noundef %2394, ptr noundef %64, i64 noundef %2456, i32 noundef 2) #15
  call void @Perl_sv_catpv(ptr noundef %2394, ptr noundef nonnull @.str.52) #15
  br label %2457

2457:                                             ; preds = %2452, %2450
  call void @Perl_sv_catpv(ptr noundef %2394, ptr noundef nonnull @.str.549) #15
  %2458 = getelementptr inbounds %struct.sv, ptr %2394, i64 0, i32 2
  %2459 = load i32, ptr %2458, align 4, !tbaa !13
  %2460 = and i32 %2459, 2098176
  %2461 = icmp eq i32 %2460, 1024
  br i1 %2461, label %2462, label %2468

2462:                                             ; preds = %2457
  %2463 = load ptr, ptr %2394, align 8, !tbaa !16
  %2464 = getelementptr inbounds %struct.xpv, ptr %2463, i64 0, i32 2
  %2465 = load i64, ptr %2464, align 8, !tbaa !38
  store i64 %2465, ptr %30, align 8, !tbaa !9
  %2466 = getelementptr inbounds %struct.sv, ptr %2394, i64 0, i32 3
  %2467 = load ptr, ptr %2466, align 8, !tbaa !17
  br label %2471

2468:                                             ; preds = %2457
  %2469 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %2394, ptr noundef nonnull %30, i32 noundef 2) #15
  %2470 = load i64, ptr %30, align 8, !tbaa !9
  br label %2471

2471:                                             ; preds = %2468, %2462
  %2472 = phi i64 [ %2465, %2462 ], [ %2470, %2468 ]
  %2473 = phi ptr [ %2467, %2462 ], [ %2469, %2468 ]
  store ptr %2473, ptr %63, align 8, !tbaa !105
  %2474 = getelementptr inbounds i8, ptr %2473, i64 %2472
  store ptr %2474, ptr %42, align 8, !tbaa !107
  %2475 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 37
  store i32 1, ptr %2475, align 4, !tbaa !104
  %2476 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 36
  store i32 1, ptr %2476, align 8, !tbaa !103
  store ptr %62, ptr %61, align 8, !tbaa !112
  %2477 = add i32 %2, 1
  %2478 = call fastcc ptr @S_reg(ptr noundef %0, i32 noundef 1, ptr noundef nonnull %31, i32 noundef %2477)
  %2479 = load i32, ptr %31, align 4, !tbaa !73
  %2480 = and i32 %2479, 47
  %2481 = load i32, ptr %1, align 4, !tbaa !73
  %2482 = or i32 %2481, %2480
  store i32 %2482, ptr %1, align 4, !tbaa !73
  store <2 x ptr> %2395, ptr %42, align 8, !tbaa !5
  store i32 0, ptr %2475, align 4, !tbaa !104
  store i32 0, ptr %2476, align 8, !tbaa !103
  %2483 = getelementptr inbounds %struct.sv, ptr %2388, i64 0, i32 1
  %2484 = load i32, ptr %2483, align 8, !tbaa !37
  %2485 = icmp ugt i32 %2484, 1
  br i1 %2485, label %2486, label %2488

2486:                                             ; preds = %2471
  %2487 = add i32 %2484, -1
  store i32 %2487, ptr %2483, align 8, !tbaa !37
  br label %2489

2488:                                             ; preds = %2471
  call void @Perl_sv_free2(ptr noundef nonnull %2388, i32 noundef %2484) #15
  br label %2489

2489:                                             ; preds = %2486, %2488
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %31) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %30) #15
  br label %3391

2490:                                             ; preds = %2382
  %2491 = icmp eq i64 %2389, 1
  %2492 = select i1 %2383, i1 true, i1 %2491
  %2493 = select i1 %44, i1 %2492, i1 false
  br i1 %2493, label %2494, label %2707

2494:                                             ; preds = %2490
  br i1 %2383, label %2604, label %2495

2495:                                             ; preds = %2494
  %2496 = icmp sgt i64 %2390, -1
  br i1 %2496, label %2497, label %2534

2497:                                             ; preds = %2495
  %2498 = trunc i64 %2390 to i32
  switch i32 %2498, label %2499 [
    i32 34, label %2707
    i32 33, label %2501
    i32 32, label %2501
    i32 31, label %2523
    i32 30, label %2523
    i32 28, label %2503
    i32 29, label %2503
    i32 2, label %2504
    i32 3, label %2504
    i32 24, label %2504
    i32 25, label %2504
    i32 6, label %2508
    i32 7, label %2508
    i32 8, label %2508
    i32 9, label %2508
  ]

2499:                                             ; preds = %2497
  %2500 = load i32, ptr %0, align 8, !tbaa !66
  br label %2515

2501:                                             ; preds = %2497, %2497
  %2502 = add nsw i64 %2390, -10
  br label %2523

2503:                                             ; preds = %2497, %2497
  br label %2523

2504:                                             ; preds = %2497, %2497, %2497, %2497
  %2505 = load i32, ptr %0, align 8, !tbaa !66
  %2506 = and i32 %2505, 896
  %2507 = icmp eq i32 %2506, 0
  br i1 %2507, label %2523, label %2515

2508:                                             ; preds = %2497, %2497, %2497, %2497
  %2509 = load i32, ptr %0, align 8, !tbaa !66
  %2510 = and i32 %2509, 4
  %2511 = icmp eq i32 %2510, 0
  br i1 %2511, label %2515, label %2512

2512:                                             ; preds = %2508
  %2513 = and i64 %2390, 1
  %2514 = or i64 %2513, 18
  br label %2515

2515:                                             ; preds = %2499, %2508, %2512, %2504
  %2516 = phi i32 [ %2500, %2499 ], [ %2509, %2512 ], [ %2509, %2508 ], [ %2505, %2504 ]
  %2517 = phi i64 [ %2390, %2499 ], [ %2514, %2512 ], [ %2390, %2508 ], [ %2390, %2504 ]
  %2518 = lshr i32 %2516, 7
  %2519 = trunc i32 %2518 to i8
  %2520 = and i8 %2519, 7
  %2521 = call i8 @llvm.umin.i8(i8 %2520, i8 3)
  %2522 = add nuw nsw i8 %2521, 21
  br label %2523

2523:                                             ; preds = %2504, %2501, %2497, %2497, %2515, %2503
  %2524 = phi i64 [ %2517, %2515 ], [ %2390, %2503 ], [ %2390, %2497 ], [ %2390, %2497 ], [ %2502, %2501 ], [ %2390, %2504 ]
  %2525 = phi i8 [ %2522, %2515 ], [ 24, %2503 ], [ 23, %2497 ], [ 23, %2497 ], [ 23, %2501 ], [ 23, %2504 ]
  %2526 = and i64 %2524, -9223372036854775807
  %2527 = icmp eq i64 %2526, 1
  %2528 = zext i1 %243 to i8
  %2529 = select i1 %2527, i8 %2528, i8 %299
  %2530 = sext i1 %2527 to i64
  %2531 = add nsw i64 %2524, %2530
  %2532 = sdiv i64 %2531, 2
  %2533 = trunc i64 %2532 to i8
  br label %2604

2534:                                             ; preds = %2495
  %2535 = load i64, ptr %11, align 8
  %2536 = icmp eq i64 %2535, %2391
  br i1 %2536, label %2537, label %2558

2537:                                             ; preds = %2534
  br i1 %243, label %2552, label %2538

2538:                                             ; preds = %2537
  %2539 = load i32, ptr %0, align 8, !tbaa !66
  %2540 = and i32 %2539, 896
  %2541 = icmp ne i32 %2540, 128
  %2542 = icmp eq i64 %2391, 10
  %2543 = and i1 %2542, %2541
  br i1 %2543, label %2544, label %2707

2544:                                             ; preds = %2538
  %2545 = load i32, ptr %1, align 4, !tbaa !73
  %2546 = or i32 %2545, 3
  store i32 %2546, ptr %1, align 4, !tbaa !73
  %2547 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 14
  %2548 = load i32, ptr %2547, align 8, !tbaa !108
  %2549 = icmp slt i32 %2548, 10
  br i1 %2549, label %2550, label %2604

2550:                                             ; preds = %2544
  %2551 = add nsw i32 %2548, 1
  store i32 %2551, ptr %2547, align 8, !tbaa !108
  br label %2604

2552:                                             ; preds = %2537
  %2553 = icmp ult i64 %2391, 256
  br i1 %2553, label %2584, label %2554

2554:                                             ; preds = %2552
  %2555 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %2556 = load i32, ptr %2555, align 8, !tbaa !50
  %2557 = icmp eq i32 %2556, 0
  br i1 %2557, label %2707, label %2587

2558:                                             ; preds = %2534
  %2559 = load i32, ptr %0, align 8, !tbaa !66
  %2560 = lshr i32 %2559, 7
  %2561 = and i32 %2560, 7
  %2562 = icmp eq i32 %2561, 1
  br i1 %2562, label %2707, label %2563

2563:                                             ; preds = %2558
  %2564 = icmp eq i64 %2391, 48
  br i1 %2564, label %2565, label %2567

2565:                                             ; preds = %2563
  %2566 = icmp eq i64 %2535, 57
  br i1 %2566, label %2604, label %2707

2567:                                             ; preds = %2563
  %2568 = and i32 %2559, 4
  %2569 = icmp eq i32 %2568, 0
  %2570 = icmp eq i32 %2561, 4
  %2571 = or i1 %2569, %2570
  br i1 %2571, label %2572, label %2707

2572:                                             ; preds = %2567
  %2573 = icmp eq i64 %2391, 65
  br i1 %2573, label %2574, label %2578

2574:                                             ; preds = %2572
  %2575 = icmp eq i64 %2535, 90
  br i1 %2575, label %2576, label %2707

2576:                                             ; preds = %2574
  %2577 = select i1 %2569, i8 4, i8 2
  br label %2604

2578:                                             ; preds = %2572
  %2579 = icmp eq i64 %2391, 97
  %2580 = icmp eq i64 %2535, 122
  %2581 = and i1 %2579, %2580
  br i1 %2581, label %2582, label %2707

2582:                                             ; preds = %2578
  %2583 = select i1 %2569, i8 3, i8 2
  br label %2604

2584:                                             ; preds = %2552
  %2585 = icmp eq ptr %0, null
  br i1 %2585, label %2586, label %2587

2586:                                             ; preds = %2584
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 11386) #15
  br label %2587

2587:                                             ; preds = %2554, %2586, %2584
  %2588 = load i32, ptr %0, align 8, !tbaa !66
  %2589 = and i32 %2588, 4
  %2590 = icmp eq i32 %2589, 0
  br i1 %2590, label %2591, label %2595

2591:                                             ; preds = %2587
  %2592 = and i32 %2588, 896
  %2593 = icmp eq i32 %2592, 128
  %2594 = select i1 %2593, i8 32, i8 31
  br label %2604

2595:                                             ; preds = %2587
  %2596 = lshr i32 %2588, 7
  %2597 = and i32 %2596, 7
  %2598 = icmp ugt i32 %2597, 2
  %2599 = add nuw nsw i32 %2597, 255
  %2600 = select i1 %2598, i32 %2599, i32 %2597
  %2601 = trunc i32 %2600 to i8
  %2602 = add i8 %2601, 33
  %2603 = icmp eq i8 %2602, 0
  br i1 %2603, label %2707, label %2604

2604:                                             ; preds = %2591, %2565, %2494, %2582, %2576, %2544, %2550, %2523, %2595
  %2605 = phi i8 [ 0, %2595 ], [ 0, %2494 ], [ %2583, %2582 ], [ %2577, %2576 ], [ 0, %2544 ], [ 0, %2550 ], [ %2533, %2523 ], [ 1, %2565 ], [ 0, %2591 ]
  %2606 = phi i8 [ %2602, %2595 ], [ 17, %2494 ], [ 24, %2582 ], [ 24, %2576 ], [ 16, %2544 ], [ 16, %2550 ], [ %2525, %2523 ], [ 24, %2565 ], [ %2594, %2591 ]
  %2607 = phi i8 [ %299, %2595 ], [ %299, %2494 ], [ %299, %2582 ], [ %299, %2576 ], [ %299, %2544 ], [ %299, %2550 ], [ %2529, %2523 ], [ %299, %2565 ], [ %299, %2591 ]
  %2608 = load ptr, ptr %63, align 8, !tbaa !105
  store ptr %64, ptr %63, align 8, !tbaa !105
  %2609 = load ptr, ptr %61, align 8, !tbaa !112
  %2610 = icmp eq ptr %2609, %168
  br i1 %2610, label %2611, label %2616

2611:                                             ; preds = %2604
  %2612 = load i32, ptr %0, align 8, !tbaa !66
  %2613 = and i32 %2612, 896
  %2614 = icmp eq i32 %2613, 128
  br i1 %2614, label %2630, label %2615

2615:                                             ; preds = %2611
  store i64 %66, ptr %65, align 8, !tbaa !111
  br label %2630

2616:                                             ; preds = %2604
  store ptr %62, ptr %61, align 8, !tbaa !112
  %2617 = zext i8 %2606 to i64
  %2618 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %2617
  %2619 = load i8, ptr %2618, align 1, !tbaa !17
  %2620 = icmp eq i8 %2619, 21
  br i1 %2620, label %2621, label %2630

2621:                                             ; preds = %2616
  %2622 = icmp eq i8 %2606, 22
  br i1 %2622, label %2623, label %2625

2623:                                             ; preds = %2621
  %2624 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 34
  store i32 1, ptr %2624, align 8, !tbaa !52
  br label %2625

2625:                                             ; preds = %2623, %2621
  %2626 = and i8 %2607, 1
  %2627 = icmp eq i8 %2626, 0
  %2628 = add i8 %2606, 4
  %2629 = select i1 %2627, i8 %2606, i8 %2628
  br label %2630

2630:                                             ; preds = %2615, %2611, %2616, %2625
  %2631 = phi i8 [ %2606, %2611 ], [ %2606, %2615 ], [ %2606, %2616 ], [ %2629, %2625 ]
  %2632 = zext i8 %2631 to i64
  %2633 = getelementptr inbounds [94 x i8], ptr @regarglen, i64 0, i64 %2632
  %2634 = load i8, ptr %2633, align 1, !tbaa !17
  %2635 = zext i8 %2634 to i64
  %2636 = call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext %2631, i64 noundef %2635, ptr noundef nonnull @.str.460)
  %2637 = icmp eq i8 %2634, 0
  br i1 %2637, label %2639, label %2638

2638:                                             ; preds = %2630
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.461, i32 noundef 16359) #15
  br label %2639

2639:                                             ; preds = %2638, %2630
  %2640 = load ptr, ptr %61, align 8, !tbaa !112
  %2641 = icmp eq ptr %2640, %168
  br i1 %2641, label %2646, label %2642

2642:                                             ; preds = %2639
  %2643 = getelementptr inbounds %struct.regnode, ptr %2636, i64 0, i32 1
  store i8 %2631, ptr %2643, align 1, !tbaa !141
  %2644 = getelementptr inbounds %struct.regnode, ptr %2636, i64 0, i32 2
  store i16 0, ptr %2644, align 2, !tbaa !222
  %2645 = getelementptr inbounds %struct.regnode, ptr %2636, i64 1
  store ptr %2645, ptr %61, align 8, !tbaa !112
  br label %2646

2646:                                             ; preds = %2639, %2642
  %2647 = phi ptr [ %168, %2639 ], [ %2645, %2642 ]
  %2648 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %2632
  %2649 = load i8, ptr %2648, align 1, !tbaa !17
  switch i8 %2649, label %2658 [
    i8 21, label %2650
    i8 25, label %2650
    i8 31, label %2656
  ]

2650:                                             ; preds = %2646, %2646
  %2651 = icmp eq ptr %2647, %168
  br i1 %2651, label %2653, label %2652

2652:                                             ; preds = %2650
  store i8 %2605, ptr %2636, align 2, !tbaa !143
  br label %2653

2653:                                             ; preds = %2652, %2650
  %2654 = load i32, ptr %1, align 4, !tbaa !73
  %2655 = or i32 %2654, 3
  store i32 %2655, ptr %1, align 4, !tbaa !73
  br label %2658

2656:                                             ; preds = %2646
  %2657 = load i64, ptr %11, align 8, !tbaa !9
  call fastcc void @S_alloc_maybe_populate_EXACT(ptr noundef nonnull %0, ptr noundef %2636, ptr noundef %1, i64 noundef 0, i64 noundef %2657, i1 noundef zeroext true)
  br label %2658

2658:                                             ; preds = %2646, %2656, %2653
  store ptr %2608, ptr %63, align 8, !tbaa !105
  %2659 = load ptr, ptr %14, align 8, !tbaa !5
  %2660 = icmp eq ptr %2659, null
  br i1 %2660, label %2668, label %2661

2661:                                             ; preds = %2658
  %2662 = getelementptr inbounds %struct.sv, ptr %2659, i64 0, i32 1
  %2663 = load i32, ptr %2662, align 8, !tbaa !37
  %2664 = icmp ugt i32 %2663, 1
  br i1 %2664, label %2665, label %2667

2665:                                             ; preds = %2661
  %2666 = add i32 %2663, -1
  store i32 %2666, ptr %2662, align 8, !tbaa !37
  br label %2668

2667:                                             ; preds = %2661
  call void @Perl_sv_free2(ptr noundef nonnull %2659, i32 noundef %2663) #15
  br label %2668

2668:                                             ; preds = %2658, %2665, %2667
  %2669 = load ptr, ptr %15, align 8, !tbaa !5
  %2670 = icmp eq ptr %2669, null
  br i1 %2670, label %2678, label %2671

2671:                                             ; preds = %2668
  %2672 = getelementptr inbounds %struct.sv, ptr %2669, i64 0, i32 1
  %2673 = load i32, ptr %2672, align 8, !tbaa !37
  %2674 = icmp ugt i32 %2673, 1
  br i1 %2674, label %2675, label %2677

2675:                                             ; preds = %2671
  %2676 = add i32 %2673, -1
  store i32 %2676, ptr %2672, align 8, !tbaa !37
  br label %2678

2677:                                             ; preds = %2671
  call void @Perl_sv_free2(ptr noundef nonnull %2669, i32 noundef %2673) #15
  br label %2678

2678:                                             ; preds = %2668, %2675, %2677
  %2679 = load ptr, ptr %16, align 8, !tbaa !5
  %2680 = icmp eq ptr %2679, null
  br i1 %2680, label %2688, label %2681

2681:                                             ; preds = %2678
  %2682 = getelementptr inbounds %struct.sv, ptr %2679, i64 0, i32 1
  %2683 = load i32, ptr %2682, align 8, !tbaa !37
  %2684 = icmp ugt i32 %2683, 1
  br i1 %2684, label %2685, label %2687

2685:                                             ; preds = %2681
  %2686 = add i32 %2683, -1
  store i32 %2686, ptr %2682, align 8, !tbaa !37
  br label %2688

2687:                                             ; preds = %2681
  call void @Perl_sv_free2(ptr noundef nonnull %2679, i32 noundef %2683) #15
  br label %2688

2688:                                             ; preds = %2678, %2685, %2687
  %2689 = load ptr, ptr %18, align 8, !tbaa !5
  %2690 = icmp eq ptr %2689, null
  br i1 %2690, label %2698, label %2691

2691:                                             ; preds = %2688
  %2692 = getelementptr inbounds %struct.sv, ptr %2689, i64 0, i32 1
  %2693 = load i32, ptr %2692, align 8, !tbaa !37
  %2694 = icmp ugt i32 %2693, 1
  br i1 %2694, label %2695, label %2697

2695:                                             ; preds = %2691
  %2696 = add i32 %2693, -1
  store i32 %2696, ptr %2692, align 8, !tbaa !37
  br label %2698

2697:                                             ; preds = %2691
  call void @Perl_sv_free2(ptr noundef nonnull %2689, i32 noundef %2693) #15
  br label %2698

2698:                                             ; preds = %2688, %2695, %2697
  %2699 = icmp eq ptr %2385, null
  br i1 %2699, label %3391, label %2700

2700:                                             ; preds = %2698
  %2701 = getelementptr inbounds %struct.sv, ptr %2385, i64 0, i32 1
  %2702 = load i32, ptr %2701, align 8, !tbaa !37
  %2703 = icmp ugt i32 %2702, 1
  br i1 %2703, label %2704, label %2706

2704:                                             ; preds = %2700
  %2705 = add i32 %2702, -1
  store i32 %2705, ptr %2701, align 8, !tbaa !37
  br label %3391

2706:                                             ; preds = %2700
  call void @Perl_sv_free2(ptr noundef nonnull %2385, i32 noundef %2702) #15
  br label %3391

2707:                                             ; preds = %2567, %2565, %2578, %2574, %2558, %2554, %2538, %2497, %2595, %2490
  %2708 = load ptr, ptr %61, align 8, !tbaa !112
  %2709 = icmp eq ptr %2708, %168
  br i1 %2709, label %3391, label %2710

2710:                                             ; preds = %2707
  %2711 = icmp eq ptr %2385, null
  br i1 %2711, label %2927, label %2712

2712:                                             ; preds = %2710
  %2713 = load i32, ptr %0, align 8, !tbaa !66
  %2714 = and i32 %2713, 4
  %2715 = icmp eq i32 %2714, 0
  br i1 %2715, label %2919, label %2716

2716:                                             ; preds = %2712
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %32) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %33) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %34) #15
  store ptr null, ptr %34, align 8, !tbaa !5
  %2717 = and i32 %2713, 896
  %2718 = icmp eq i32 %2717, 128
  %2719 = select i1 %2718, ptr %19, ptr %18
  %2720 = load ptr, ptr @PL_utf8_foldable, align 8, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %2720, ptr noundef nonnull %2385, i1 noundef zeroext false, ptr noundef nonnull %34) #15
  %2721 = getelementptr inbounds %struct.sv, ptr %2385, i64 0, i32 2
  %2722 = load i32, ptr %2721, align 4, !tbaa !13
  %2723 = and i32 %2722, 255
  %2724 = icmp eq i32 %2723, 4
  br i1 %2724, label %2726, label %2725

2725:                                             ; preds = %2716
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 40) #15
  br label %2726

2726:                                             ; preds = %2725, %2716
  %2727 = load ptr, ptr %2385, align 8, !tbaa !16
  %2728 = getelementptr inbounds %struct.xpv, ptr %2727, i64 0, i32 2
  %2729 = load i64, ptr %2728, align 8, !tbaa !38
  %2730 = icmp eq i64 %2729, 0
  br i1 %2730, label %2761, label %2731

2731:                                             ; preds = %2726
  %2732 = lshr i64 %2729, 3
  %2733 = load i32, ptr %2721, align 4, !tbaa !13
  %2734 = and i32 %2733, 255
  %2735 = icmp eq i32 %2734, 4
  br i1 %2735, label %2738, label %2736

2736:                                             ; preds = %2731
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 27) #15
  %2737 = load ptr, ptr %2385, align 8, !tbaa !16
  br label %2738

2738:                                             ; preds = %2736, %2731
  %2739 = phi ptr [ %2727, %2731 ], [ %2737, %2736 ]
  %2740 = getelementptr inbounds %struct.xpvinvlist, ptr %2739, i64 0, i32 6
  %2741 = load i8, ptr %2740, align 1, !tbaa !11, !range !18, !noundef !19
  %2742 = zext i8 %2741 to i64
  %2743 = icmp eq i64 %2732, %2742
  br i1 %2743, label %2761, label %2744

2744:                                             ; preds = %2738
  %2745 = call fastcc ptr @S_invlist_array(ptr noundef nonnull %2385)
  %2746 = xor i64 %2742, -1
  %2747 = add nsw i64 %2732, %2746
  %2748 = and i64 %2747, 1
  %2749 = icmp eq i64 %2748, 0
  br i1 %2749, label %2754, label %2750

2750:                                             ; preds = %2744
  %2751 = getelementptr inbounds i64, ptr %2745, i64 %2747
  %2752 = load i64, ptr %2751, align 8, !tbaa !9
  %2753 = add i64 %2752, -1
  br label %2754

2754:                                             ; preds = %2744, %2750
  %2755 = phi i64 [ %2753, %2750 ], [ -1, %2744 ]
  %2756 = icmp ult i64 %2755, 256
  %2757 = load ptr, ptr @PL_utf8_foldclosures, align 8
  %2758 = icmp ne ptr %2757, null
  %2759 = select i1 %2756, i1 true, i1 %2758
  br i1 %2759, label %2761, label %2760

2760:                                             ; preds = %2754
  call void @Perl__load_PL_utf8_foldclosures() #15
  br label %2761

2761:                                             ; preds = %2726, %2738, %2760, %2754
  %2762 = load ptr, ptr %34, align 8, !tbaa !5
  %2763 = icmp eq ptr %2762, null
  br i1 %2763, label %2771, label %2764

2764:                                             ; preds = %2761
  %2765 = getelementptr inbounds %struct.sv, ptr %2762, i64 0, i32 2
  %2766 = load i32, ptr %2765, align 4, !tbaa !13
  %2767 = and i32 %2766, 255
  %2768 = icmp eq i32 %2767, 4
  br i1 %2768, label %2775, label %2769

2769:                                             ; preds = %2764
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  %2770 = load ptr, ptr %34, align 8, !tbaa !5
  br label %2775

2771:                                             ; preds = %2761
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9125) #15
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.229, i32 noundef 9115) #15
  %2772 = load i32, ptr inttoptr (i64 12 to ptr), align 4, !tbaa !13
  %2773 = and i32 %2772, 255
  %2774 = icmp ne i32 %2773, 4
  call void @llvm.assume(i1 %2774)
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  unreachable

2775:                                             ; preds = %2764, %2769
  %2776 = phi ptr [ %2762, %2764 ], [ %2770, %2769 ]
  %2777 = load ptr, ptr %2762, align 8, !tbaa !16
  %2778 = getelementptr inbounds %struct.xpvinvlist, ptr %2777, i64 0, i32 5
  store i64 0, ptr %2778, align 8, !tbaa !9
  %2779 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef %2776, ptr noundef nonnull %32, ptr noundef nonnull %33)
  br i1 %2779, label %2783, label %2910

2780:                                             ; preds = %2906, %2783
  %2781 = load ptr, ptr %34, align 8, !tbaa !5
  %2782 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef %2781, ptr noundef nonnull %32, ptr noundef nonnull %33)
  br i1 %2782, label %2783, label %2910, !llvm.loop !416

2783:                                             ; preds = %2775, %2780
  %2784 = load i64, ptr %32, align 8, !tbaa !9
  %2785 = load i64, ptr %33, align 8, !tbaa !9
  %2786 = icmp ugt i64 %2784, %2785
  br i1 %2786, label %2780, label %2787

2787:                                             ; preds = %2783, %2906
  %2788 = phi i64 [ %2907, %2906 ], [ %2784, %2783 ]
  call void @llvm.lifetime.start.p0(i64 14, ptr nonnull %35) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %36) #15
  %2789 = icmp ult i64 %2788, 256
  br i1 %2789, label %2790, label %2824

2790:                                             ; preds = %2787
  %2791 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %2788
  %2792 = load i32, ptr %2791, align 4, !tbaa !73
  %2793 = and i32 %2792, 4194304
  %2794 = icmp eq i32 %2793, 0
  br i1 %2794, label %2813, label %2795

2795:                                             ; preds = %2790
  %2796 = icmp ult i64 %2788, 128
  br i1 %2796, label %2801, label %2797

2797:                                             ; preds = %2795
  %2798 = load i32, ptr %0, align 8, !tbaa !66
  %2799 = and i32 %2798, 896
  %2800 = icmp eq i32 %2799, 0
  br i1 %2800, label %2807, label %2801

2801:                                             ; preds = %2797, %2795
  %2802 = load ptr, ptr %2719, align 8, !tbaa !5
  %2803 = getelementptr inbounds [0 x i8], ptr @PL_fold_latin1, i64 0, i64 %2788
  %2804 = load i8, ptr %2803, align 1, !tbaa !17
  %2805 = zext i8 %2804 to i64
  %2806 = call ptr @Perl__add_range_to_invlist(ptr noundef %2802, i64 noundef %2805, i64 noundef %2805) #15
  store ptr %2806, ptr %2719, align 8, !tbaa !5
  br label %2813

2807:                                             ; preds = %2797
  %2808 = load ptr, ptr %17, align 8, !tbaa !5
  %2809 = getelementptr inbounds [0 x i8], ptr @PL_fold_latin1, i64 0, i64 %2788
  %2810 = load i8, ptr %2809, align 1, !tbaa !17
  %2811 = zext i8 %2810 to i64
  %2812 = call ptr @Perl__add_range_to_invlist(ptr noundef %2808, i64 noundef %2811, i64 noundef %2811) #15
  store ptr %2812, ptr %17, align 8, !tbaa !5
  br label %2813

2813:                                             ; preds = %2790, %2807, %2801
  %2814 = and i32 %2792, 524288
  %2815 = icmp eq i32 %2814, 0
  br i1 %2815, label %2906, label %2816

2816:                                             ; preds = %2813
  %2817 = icmp ult i64 %2788, 128
  br i1 %2817, label %2818, label %2822

2818:                                             ; preds = %2816
  %2819 = load i32, ptr %0, align 8, !tbaa !66
  %2820 = and i32 %2819, 896
  %2821 = icmp eq i32 %2820, 512
  br i1 %2821, label %2906, label %2822

2822:                                             ; preds = %2818, %2816
  %2823 = trunc i64 %2788 to i8
  call fastcc void @S_add_above_Latin1_folds(ptr noundef %0, i8 noundef zeroext %2823, ptr noundef nonnull %2719)
  br label %2906

2824:                                             ; preds = %2787
  %2825 = load i32, ptr %0, align 8, !tbaa !66
  %2826 = and i32 %2825, 896
  %2827 = icmp eq i32 %2826, 512
  %2828 = select i1 %2827, i8 4, i8 0
  %2829 = call i64 @Perl__to_uni_fold_flags(i64 noundef %2788, ptr noundef nonnull %35, ptr noundef nonnull %36, i8 noundef zeroext %2828) #15
  %2830 = load ptr, ptr @PL_utf8_foldclosures, align 8, !tbaa !5
  %2831 = load i64, ptr %36, align 8, !tbaa !9
  %2832 = trunc i64 %2831 to i32
  %2833 = call ptr @Perl_hv_common_key_len(ptr noundef %2830, ptr noundef nonnull %35, i32 noundef %2832, i32 noundef 32, ptr noundef null, i32 noundef 0) #15
  %2834 = icmp eq ptr %2833, null
  br i1 %2834, label %2906, label %2835

2835:                                             ; preds = %2824
  %2836 = load ptr, ptr %2833, align 8, !tbaa !5
  %2837 = icmp eq ptr %2836, null
  %2838 = getelementptr inbounds %struct.av, ptr %2836, i64 0, i32 2
  br label %2839

2839:                                             ; preds = %2904, %2835
  %2840 = phi i64 [ 0, %2835 ], [ %2905, %2904 ]
  br i1 %2837, label %2841, label %2842

2841:                                             ; preds = %2839
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.382, i32 noundef 20) #15
  br label %2842

2842:                                             ; preds = %2841, %2839
  %2843 = load i32, ptr %2838, align 4, !tbaa !73
  %2844 = and i32 %2843, 255
  %2845 = icmp eq i32 %2844, 11
  br i1 %2845, label %2848, label %2846

2846:                                             ; preds = %2842
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.195, ptr noundef nonnull @.str.383, i32 noundef 21) #15
  %2847 = load i32, ptr %2838, align 4, !tbaa !13
  br label %2848

2848:                                             ; preds = %2846, %2842
  %2849 = phi i32 [ %2843, %2842 ], [ %2847, %2846 ]
  %2850 = and i32 %2849, 8388608
  %2851 = icmp eq i32 %2850, 0
  br i1 %2851, label %2855, label %2852

2852:                                             ; preds = %2848
  %2853 = call i32 @Perl_mg_size(ptr noundef nonnull %2836) #15
  %2854 = sext i32 %2853 to i64
  br label %2859

2855:                                             ; preds = %2848
  %2856 = load ptr, ptr %2836, align 8, !tbaa !81
  %2857 = getelementptr inbounds %struct.xpvav, ptr %2856, i64 0, i32 2
  %2858 = load i64, ptr %2857, align 8, !tbaa !83
  br label %2859

2859:                                             ; preds = %2852, %2855
  %2860 = phi i64 [ %2854, %2852 ], [ %2858, %2855 ]
  %2861 = icmp sgt i64 %2840, %2860
  br i1 %2861, label %2906, label %2862

2862:                                             ; preds = %2859
  %2863 = call ptr @Perl_av_fetch(ptr noundef nonnull %2836, i64 noundef %2840, i32 noundef 0) #15
  %2864 = icmp eq ptr %2863, null
  br i1 %2864, label %2865, label %2866

2865:                                             ; preds = %2862
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.369, i32 noundef 15618) #15
  br label %2866

2866:                                             ; preds = %2862, %2865
  %2867 = load ptr, ptr %2863, align 8, !tbaa !5
  %2868 = getelementptr inbounds %struct.sv, ptr %2867, i64 0, i32 2
  %2869 = load i32, ptr %2868, align 4, !tbaa !13
  %2870 = and i32 %2869, -2145386240
  %2871 = icmp eq i32 %2870, -2147483392
  br i1 %2871, label %2872, label %2876

2872:                                             ; preds = %2866
  %2873 = load ptr, ptr %2867, align 8, !tbaa !16
  %2874 = getelementptr inbounds %struct.xpvuv, ptr %2873, i64 0, i32 4
  %2875 = load i64, ptr %2874, align 8, !tbaa !17
  br label %2878

2876:                                             ; preds = %2866
  %2877 = call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %2867, i32 noundef 2) #15
  br label %2878

2878:                                             ; preds = %2876, %2872
  %2879 = phi i64 [ %2875, %2872 ], [ %2877, %2876 ]
  %2880 = load i32, ptr %0, align 8, !tbaa !66
  %2881 = lshr i32 %2880, 7
  %2882 = and i32 %2881, 7
  %2883 = icmp eq i32 %2882, 4
  %2884 = icmp ult i64 %2879, 128
  %2885 = select i1 %2883, i1 %2884, i1 false
  br i1 %2885, label %2904, label %2886

2886:                                             ; preds = %2878
  %2887 = icmp ult i64 %2879, 256
  %2888 = icmp eq i32 %2882, 1
  %2889 = and i1 %2887, %2888
  br i1 %2889, label %2890, label %2893

2890:                                             ; preds = %2886
  %2891 = load ptr, ptr %2719, align 8, !tbaa !5
  %2892 = call ptr @Perl__add_range_to_invlist(ptr noundef %2891, i64 noundef %2879, i64 noundef %2879) #15
  store ptr %2892, ptr %2719, align 8, !tbaa !5
  br label %2904

2893:                                             ; preds = %2886
  %2894 = and i64 %2879, -128
  %2895 = icmp ne i64 %2894, 128
  %2896 = icmp ugt i32 %2882, 1
  %2897 = or i1 %2895, %2896
  br i1 %2897, label %2898, label %2901

2898:                                             ; preds = %2893
  %2899 = load ptr, ptr %18, align 8, !tbaa !5
  %2900 = call ptr @Perl__add_range_to_invlist(ptr noundef %2899, i64 noundef %2879, i64 noundef %2879) #15
  store ptr %2900, ptr %18, align 8, !tbaa !5
  br label %2904

2901:                                             ; preds = %2893
  %2902 = load ptr, ptr %17, align 8, !tbaa !5
  %2903 = call ptr @Perl__add_range_to_invlist(ptr noundef %2902, i64 noundef %2879, i64 noundef %2879) #15
  store ptr %2903, ptr %17, align 8, !tbaa !5
  br label %2904

2904:                                             ; preds = %2898, %2901, %2878, %2890
  %2905 = add nuw nsw i64 %2840, 1
  br label %2839, !llvm.loop !417

2906:                                             ; preds = %2859, %2824, %2813, %2818, %2822
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %36) #15
  call void @llvm.lifetime.end.p0(i64 14, ptr nonnull %35) #15
  %2907 = add i64 %2788, 1
  %2908 = load i64, ptr %33, align 8, !tbaa !9
  %2909 = icmp ugt i64 %2907, %2908
  br i1 %2909, label %2780, label %2787, !llvm.loop !418

2910:                                             ; preds = %2780, %2775
  %2911 = load ptr, ptr %34, align 8, !tbaa !5
  %2912 = getelementptr inbounds %struct.sv, ptr %2911, i64 0, i32 1
  %2913 = load i32, ptr %2912, align 8, !tbaa !37
  %2914 = icmp ugt i32 %2913, 1
  br i1 %2914, label %2915, label %2917

2915:                                             ; preds = %2910
  %2916 = add i32 %2913, -1
  store i32 %2916, ptr %2912, align 8, !tbaa !37
  br label %2918

2917:                                             ; preds = %2910
  call void @Perl_sv_free2(ptr noundef nonnull %2911, i32 noundef %2913) #15
  br label %2918

2918:                                             ; preds = %2915, %2917
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %34) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %33) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %32) #15
  br label %2919

2919:                                             ; preds = %2712, %2918
  %2920 = load ptr, ptr %18, align 8, !tbaa !5
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %2920, ptr noundef nonnull %2385, i1 noundef zeroext false, ptr noundef nonnull %18) #15
  %2921 = getelementptr inbounds %struct.sv, ptr %2385, i64 0, i32 1
  %2922 = load i32, ptr %2921, align 8, !tbaa !37
  %2923 = icmp ugt i32 %2922, 1
  br i1 %2923, label %2924, label %2926

2924:                                             ; preds = %2919
  %2925 = add i32 %2922, -1
  store i32 %2925, ptr %2921, align 8, !tbaa !37
  br label %2927

2926:                                             ; preds = %2919
  call void @Perl_sv_free2(ptr noundef nonnull %2385, i32 noundef %2922) #15
  br label %2927

2927:                                             ; preds = %2926, %2924, %2710
  %2928 = load ptr, ptr %16, align 8, !tbaa !5
  %2929 = icmp eq ptr %2928, null
  br i1 %2929, label %2939, label %2930

2930:                                             ; preds = %2927
  %2931 = load ptr, ptr %18, align 8, !tbaa !5
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %2931, ptr noundef nonnull %2928, i1 noundef zeroext false, ptr noundef nonnull %18) #15
  %2932 = load ptr, ptr %16, align 8, !tbaa !5
  %2933 = getelementptr inbounds %struct.sv, ptr %2932, i64 0, i32 1
  %2934 = load i32, ptr %2933, align 8, !tbaa !37
  %2935 = icmp ugt i32 %2934, 1
  br i1 %2935, label %2936, label %2938

2936:                                             ; preds = %2930
  %2937 = add i32 %2934, -1
  store i32 %2937, ptr %2933, align 8, !tbaa !37
  br label %2939

2938:                                             ; preds = %2930
  call void @Perl_sv_free2(ptr noundef nonnull %2932, i32 noundef %2934) #15
  br label %2939

2939:                                             ; preds = %2938, %2936, %2927
  %2940 = load ptr, ptr %14, align 8, !tbaa !5
  %2941 = icmp ne ptr %2940, null
  %2942 = load ptr, ptr %15, align 8
  %2943 = icmp ne ptr %2942, null
  %2944 = select i1 %2941, i1 true, i1 %2943
  br i1 %2944, label %2945, label %3029

2945:                                             ; preds = %2939
  br i1 %2941, label %2946, label %2953

2946:                                             ; preds = %2945
  %2947 = load i32, ptr %0, align 8, !tbaa !66
  %2948 = and i32 %2947, 896
  %2949 = icmp ugt i32 %2948, 256
  br i1 %2949, label %2950, label %2953

2950:                                             ; preds = %2946
  %2951 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 14), align 16, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef nonnull %2940, ptr noundef %2951, i1 noundef zeroext false, ptr noundef nonnull %14) #15
  %2952 = load ptr, ptr %15, align 8, !tbaa !5
  br label %2953

2953:                                             ; preds = %2950, %2946, %2945
  %2954 = phi ptr [ %2942, %2945 ], [ %2942, %2946 ], [ %2952, %2950 ]
  %2955 = icmp eq ptr %2954, null
  br i1 %2955, label %2981, label %2956

2956:                                             ; preds = %2953
  %2957 = load i32, ptr %0, align 8, !tbaa !66
  %2958 = lshr i32 %2957, 7
  %2959 = and i32 %2958, 7
  %2960 = icmp eq i32 %2959, 0
  br i1 %2960, label %2961, label %2964

2961:                                             ; preds = %2956
  %2962 = load i8, ptr %163, align 2, !tbaa !143
  %2963 = or i8 %2962, -128
  store i8 %2963, ptr %163, align 2, !tbaa !143
  br label %2968

2964:                                             ; preds = %2956
  %2965 = icmp ugt i32 %2959, 2
  br i1 %2965, label %2966, label %2968

2966:                                             ; preds = %2964
  %2967 = load ptr, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 14), align 16, !tbaa !5
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %2954, ptr noundef %2967, i1 noundef zeroext true, ptr noundef nonnull %15) #15
  br label %2968

2968:                                             ; preds = %2964, %2966, %2961
  %2969 = load ptr, ptr %14, align 8, !tbaa !5
  %2970 = icmp eq ptr %2969, null
  %2971 = load ptr, ptr %15, align 8, !tbaa !5
  br i1 %2970, label %2980, label %2972

2972:                                             ; preds = %2968
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %2969, ptr noundef %2971, i1 noundef zeroext false, ptr noundef nonnull %14) #15
  %2973 = load ptr, ptr %15, align 8, !tbaa !5
  %2974 = getelementptr inbounds %struct.sv, ptr %2973, i64 0, i32 1
  %2975 = load i32, ptr %2974, align 8, !tbaa !37
  %2976 = icmp ugt i32 %2975, 1
  br i1 %2976, label %2977, label %2979

2977:                                             ; preds = %2972
  %2978 = add i32 %2975, -1
  store i32 %2978, ptr %2974, align 8, !tbaa !37
  br label %2981

2979:                                             ; preds = %2972
  call void @Perl_sv_free2(ptr noundef nonnull %2973, i32 noundef %2975) #15
  br label %2981

2980:                                             ; preds = %2968
  store ptr %2971, ptr %14, align 8, !tbaa !5
  br label %2981

2981:                                             ; preds = %2979, %2977, %2980, %2953
  %2982 = load i32, ptr %0, align 8, !tbaa !66
  %2983 = and i32 %2982, 896
  %2984 = icmp eq i32 %2983, 0
  br i1 %2984, label %2998, label %2985

2985:                                             ; preds = %2981
  %2986 = load ptr, ptr %18, align 8, !tbaa !5
  %2987 = icmp eq ptr %2986, null
  %2988 = load ptr, ptr %14, align 8, !tbaa !5
  br i1 %2987, label %2997, label %2989

2989:                                             ; preds = %2985
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %2986, ptr noundef %2988, i1 noundef zeroext false, ptr noundef nonnull %18) #15
  %2990 = load ptr, ptr %14, align 8, !tbaa !5
  %2991 = getelementptr inbounds %struct.sv, ptr %2990, i64 0, i32 1
  %2992 = load i32, ptr %2991, align 8, !tbaa !37
  %2993 = icmp ugt i32 %2992, 1
  br i1 %2993, label %2994, label %2996

2994:                                             ; preds = %2989
  %2995 = add i32 %2992, -1
  store i32 %2995, ptr %2991, align 8, !tbaa !37
  br label %3029

2996:                                             ; preds = %2989
  call void @Perl_sv_free2(ptr noundef nonnull %2990, i32 noundef %2992) #15
  br label %3029

2997:                                             ; preds = %2985
  store ptr %2988, ptr %18, align 8, !tbaa !5
  br label %3029

2998:                                             ; preds = %2981
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %37) #15
  store ptr null, ptr %37, align 8, !tbaa !5
  %2999 = load ptr, ptr %14, align 8, !tbaa !5
  %3000 = load ptr, ptr @PL_UpperLatin1, align 8, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %2999, ptr noundef %3000, i1 noundef zeroext false, ptr noundef nonnull %37) #15
  %3001 = load ptr, ptr %14, align 8, !tbaa !5
  %3002 = load ptr, ptr %37, align 8, !tbaa !5
  call void @Perl__invlist_intersection_maybe_complement_2nd(ptr noundef %3001, ptr noundef %3002, i1 noundef zeroext true, ptr noundef nonnull %14) #15
  %3003 = load ptr, ptr %18, align 8, !tbaa !5
  %3004 = icmp eq ptr %3003, null
  %3005 = load ptr, ptr %14, align 8, !tbaa !5
  br i1 %3004, label %3014, label %3006

3006:                                             ; preds = %2998
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %3003, ptr noundef %3005, i1 noundef zeroext false, ptr noundef nonnull %18) #15
  %3007 = load ptr, ptr %14, align 8, !tbaa !5
  %3008 = getelementptr inbounds %struct.sv, ptr %3007, i64 0, i32 1
  %3009 = load i32, ptr %3008, align 8, !tbaa !37
  %3010 = icmp ugt i32 %3009, 1
  br i1 %3010, label %3011, label %3013

3011:                                             ; preds = %3006
  %3012 = add i32 %3009, -1
  store i32 %3012, ptr %3008, align 8, !tbaa !37
  br label %3015

3013:                                             ; preds = %3006
  call void @Perl_sv_free2(ptr noundef nonnull %3007, i32 noundef %3009) #15
  br label %3015

3014:                                             ; preds = %2998
  store ptr %3005, ptr %18, align 8, !tbaa !5
  br label %3015

3015:                                             ; preds = %3013, %3011, %3014
  %3016 = load ptr, ptr %17, align 8, !tbaa !5
  %3017 = icmp eq ptr %3016, null
  %3018 = load ptr, ptr %37, align 8, !tbaa !5
  br i1 %3017, label %3027, label %3019

3019:                                             ; preds = %3015
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %3016, ptr noundef %3018, i1 noundef zeroext false, ptr noundef nonnull %17) #15
  %3020 = load ptr, ptr %37, align 8, !tbaa !5
  %3021 = getelementptr inbounds %struct.sv, ptr %3020, i64 0, i32 1
  %3022 = load i32, ptr %3021, align 8, !tbaa !37
  %3023 = icmp ugt i32 %3022, 1
  br i1 %3023, label %3024, label %3026

3024:                                             ; preds = %3019
  %3025 = add i32 %3022, -1
  store i32 %3025, ptr %3021, align 8, !tbaa !37
  br label %3028

3026:                                             ; preds = %3019
  call void @Perl_sv_free2(ptr noundef nonnull %3020, i32 noundef %3022) #15
  br label %3028

3027:                                             ; preds = %3015
  store ptr %3018, ptr %17, align 8, !tbaa !5
  br label %3028

3028:                                             ; preds = %3026, %3024, %3027
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %37) #15
  br label %3029

3029:                                             ; preds = %2996, %2994, %3028, %2997, %2939
  %3030 = load ptr, ptr %13, align 8, !tbaa !5
  %3031 = icmp eq ptr %3030, null
  br i1 %3031, label %3098, label %3032

3032:                                             ; preds = %3029
  %3033 = load ptr, ptr %18, align 8, !tbaa !5
  %3034 = icmp eq ptr %3033, null
  br i1 %3034, label %3090, label %3035

3035:                                             ; preds = %3032
  %3036 = and i8 %2384, 1
  %3037 = icmp eq i8 %3036, 0
  br i1 %3037, label %3079, label %3038

3038:                                             ; preds = %3035
  %3039 = getelementptr inbounds %struct.sv, ptr %3033, i64 0, i32 2
  %3040 = load i32, ptr %3039, align 4, !tbaa !13
  %3041 = and i32 %3040, 255
  %3042 = icmp eq i32 %3041, 4
  br i1 %3042, label %3044, label %3043

3043:                                             ; preds = %3038
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 40) #15
  br label %3044

3044:                                             ; preds = %3043, %3038
  %3045 = load ptr, ptr %3033, align 8, !tbaa !16
  %3046 = getelementptr inbounds %struct.xpv, ptr %3045, i64 0, i32 2
  %3047 = load i64, ptr %3046, align 8, !tbaa !38
  %3048 = icmp eq i64 %3047, 0
  br i1 %3048, label %3072, label %3049

3049:                                             ; preds = %3044
  %3050 = lshr i64 %3047, 3
  %3051 = load i32, ptr %3039, align 4, !tbaa !13
  %3052 = and i32 %3051, 255
  %3053 = icmp eq i32 %3052, 4
  br i1 %3053, label %3056, label %3054

3054:                                             ; preds = %3049
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.231, i32 noundef 27) #15
  %3055 = load ptr, ptr %3033, align 8, !tbaa !16
  br label %3056

3056:                                             ; preds = %3054, %3049
  %3057 = phi ptr [ %3045, %3049 ], [ %3055, %3054 ]
  %3058 = getelementptr inbounds %struct.xpvinvlist, ptr %3057, i64 0, i32 6
  %3059 = load i8, ptr %3058, align 1, !tbaa !11, !range !18, !noundef !19
  %3060 = zext i8 %3059 to i64
  %3061 = icmp eq i64 %3050, %3060
  br i1 %3061, label %3072, label %3062

3062:                                             ; preds = %3056
  %3063 = call fastcc ptr @S_invlist_array(ptr noundef nonnull %3033)
  %3064 = xor i64 %3060, -1
  %3065 = add nsw i64 %3050, %3064
  %3066 = and i64 %3065, 1
  %3067 = icmp eq i64 %3066, 0
  br i1 %3067, label %3072, label %3068

3068:                                             ; preds = %3062
  %3069 = getelementptr inbounds i64, ptr %3063, i64 %3065
  %3070 = load i64, ptr %3069, align 8, !tbaa !9
  %3071 = add i64 %3070, -1
  br label %3072

3072:                                             ; preds = %3044, %3056, %3062, %3068
  %3073 = phi i64 [ 0, %3056 ], [ %3071, %3068 ], [ -1, %3062 ], [ 0, %3044 ]
  %3074 = icmp ugt i64 %3073, 1114111
  %3075 = xor i1 %243, %3074
  %3076 = zext i1 %3075 to i8
  %3077 = load ptr, ptr %13, align 8, !tbaa !5
  %3078 = load ptr, ptr %18, align 8, !tbaa !5
  br label %3079

3079:                                             ; preds = %3072, %3035
  %3080 = phi ptr [ %3078, %3072 ], [ %3033, %3035 ]
  %3081 = phi ptr [ %3077, %3072 ], [ %3030, %3035 ]
  %3082 = phi i8 [ %3076, %3072 ], [ %2384, %3035 ]
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef %3081, ptr noundef %3080, i1 noundef zeroext false, ptr noundef nonnull %18) #15
  %3083 = load ptr, ptr %13, align 8, !tbaa !5
  %3084 = getelementptr inbounds %struct.sv, ptr %3083, i64 0, i32 1
  %3085 = load i32, ptr %3084, align 8, !tbaa !37
  %3086 = icmp ugt i32 %3085, 1
  br i1 %3086, label %3087, label %3089

3087:                                             ; preds = %3079
  %3088 = add i32 %3085, -1
  store i32 %3088, ptr %3084, align 8, !tbaa !37
  br label %3091

3089:                                             ; preds = %3079
  call void @Perl_sv_free2(ptr noundef nonnull %3083, i32 noundef %3085) #15
  br label %3091

3090:                                             ; preds = %3032
  store ptr %3030, ptr %18, align 8, !tbaa !5
  br label %3091

3091:                                             ; preds = %3089, %3087, %3090
  %3092 = phi i8 [ %2384, %3090 ], [ %3082, %3087 ], [ %3082, %3089 ]
  %3093 = and i8 %3092, 1
  %3094 = icmp eq i8 %3093, 0
  br i1 %3094, label %3098, label %3095

3095:                                             ; preds = %3091
  %3096 = load i8, ptr %163, align 2, !tbaa !143
  %3097 = or i8 %3096, 16
  store i8 %3097, ptr %163, align 2, !tbaa !143
  br label %3098

3098:                                             ; preds = %3091, %3095, %3029
  %3099 = load i32, ptr %0, align 8, !tbaa !66
  %3100 = and i32 %3099, 900
  %3101 = icmp eq i32 %3100, 132
  br i1 %3101, label %3102, label %3131

3102:                                             ; preds = %3098
  %3103 = load ptr, ptr %19, align 8, !tbaa !5
  %3104 = icmp eq ptr %3103, null
  br i1 %3104, label %3108, label %3105

3105:                                             ; preds = %3102
  %3106 = load i8, ptr %163, align 2, !tbaa !143
  %3107 = or i8 %3106, 4
  store i8 %3107, ptr %163, align 2, !tbaa !143
  br label %3131

3108:                                             ; preds = %3102
  %3109 = load ptr, ptr %18, align 8, !tbaa !5
  %3110 = icmp eq ptr %3109, null
  br i1 %3110, label %3131, label %3111

3111:                                             ; preds = %3108
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %38) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %39) #15
  %3112 = getelementptr inbounds %struct.sv, ptr %3109, i64 0, i32 2
  %3113 = load i32, ptr %3112, align 4, !tbaa !13
  %3114 = and i32 %3113, 255
  %3115 = icmp eq i32 %3114, 4
  br i1 %3115, label %3118, label %3116

3116:                                             ; preds = %3111
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  %3117 = load ptr, ptr %18, align 8, !tbaa !5
  br label %3118

3118:                                             ; preds = %3111, %3116
  %3119 = phi ptr [ %3109, %3111 ], [ %3117, %3116 ]
  %3120 = load ptr, ptr %3109, align 8, !tbaa !16
  %3121 = getelementptr inbounds %struct.xpvinvlist, ptr %3120, i64 0, i32 5
  store i64 0, ptr %3121, align 8, !tbaa !9
  %3122 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef %3119, ptr noundef nonnull %38, ptr noundef nonnull %39)
  %3123 = load i64, ptr %38, align 8
  %3124 = icmp ult i64 %3123, 256
  %3125 = select i1 %3122, i1 %3124, i1 false
  br i1 %3125, label %3126, label %3129

3126:                                             ; preds = %3118
  %3127 = load i8, ptr %163, align 2, !tbaa !143
  %3128 = or i8 %3127, 4
  store i8 %3128, ptr %163, align 2, !tbaa !143
  br label %3129

3129:                                             ; preds = %3126, %3118
  %3130 = load ptr, ptr %18, align 8, !tbaa !5
  call fastcc void @S_invlist_iterfinish(ptr noundef %3130)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %39) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %38) #15
  br label %3131

3131:                                             ; preds = %3105, %3129, %3108, %3098
  %3132 = load ptr, ptr %18, align 8, !tbaa !5
  %3133 = icmp eq ptr %3132, null
  %3134 = or i1 %243, %3133
  br i1 %3134, label %3160, label %3135

3135:                                             ; preds = %3131
  %3136 = load i8, ptr %163, align 2, !tbaa !143
  %3137 = and i8 %3136, 12
  %3138 = icmp ne i8 %3137, 0
  %3139 = load ptr, ptr %17, align 8
  %3140 = icmp ne ptr %3139, null
  %3141 = select i1 %3138, i1 true, i1 %3140
  br i1 %3141, label %3156, label %3142

3142:                                             ; preds = %3135
  %3143 = load ptr, ptr %190, align 8, !tbaa !16
  %3144 = getelementptr inbounds %struct.xpv, ptr %3143, i64 0, i32 2
  %3145 = load i64, ptr %3144, align 8, !tbaa !38
  %3146 = icmp eq i64 %3145, %189
  br i1 %3146, label %3147, label %3156

3147:                                             ; preds = %3142
  call void @Perl__invlist_invert(ptr noundef nonnull %3132) #15
  %3148 = icmp eq ptr %2387, null
  br i1 %3148, label %3156, label %3149

3149:                                             ; preds = %3147
  %3150 = getelementptr inbounds %struct.sv, ptr %2387, i64 0, i32 1
  %3151 = load i32, ptr %3150, align 8, !tbaa !37
  %3152 = icmp ugt i32 %3151, 1
  br i1 %3152, label %3153, label %3155

3153:                                             ; preds = %3149
  %3154 = add i32 %3151, -1
  store i32 %3154, ptr %3150, align 8, !tbaa !37
  br label %3156

3155:                                             ; preds = %3149
  call void @Perl_sv_free2(ptr noundef nonnull %2387, i32 noundef %3151) #15
  br label %3156

3156:                                             ; preds = %3135, %3142, %3147, %3153, %3155
  %3157 = phi i8 [ 0, %3155 ], [ 0, %3153 ], [ 0, %3147 ], [ %299, %3142 ], [ %299, %3135 ]
  %3158 = phi ptr [ null, %3155 ], [ null, %3153 ], [ null, %3147 ], [ %2387, %3142 ], [ %2387, %3135 ]
  %3159 = load ptr, ptr %18, align 8, !tbaa !5
  br label %3160

3160:                                             ; preds = %3156, %3131
  %3161 = phi ptr [ %3159, %3156 ], [ %3132, %3131 ]
  %3162 = phi i8 [ %3157, %3156 ], [ %299, %3131 ]
  %3163 = phi ptr [ %3158, %3156 ], [ %2387, %3131 ]
  %3164 = icmp eq ptr %3161, null
  br i1 %44, label %3183, label %3165

3165:                                             ; preds = %3160
  br i1 %3164, label %3166, label %3168

3166:                                             ; preds = %3165
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.381, i32 noundef 15822) #15
  %3167 = load ptr, ptr %18, align 8, !tbaa !5
  br label %3168

3168:                                             ; preds = %3165, %3166
  %3169 = phi ptr [ %3161, %3165 ], [ %3167, %3166 ]
  store ptr %3169, ptr %7, align 8, !tbaa !5
  %3170 = icmp eq ptr %3163, null
  br i1 %3170, label %3178, label %3171

3171:                                             ; preds = %3168
  %3172 = getelementptr inbounds %struct.sv, ptr %3163, i64 0, i32 1
  %3173 = load i32, ptr %3172, align 8, !tbaa !37
  %3174 = icmp ugt i32 %3173, 1
  br i1 %3174, label %3175, label %3177

3175:                                             ; preds = %3171
  %3176 = add i32 %3173, -1
  store i32 %3176, ptr %3172, align 8, !tbaa !37
  br label %3178

3177:                                             ; preds = %3171
  call void @Perl_sv_free2(ptr noundef nonnull %3163, i32 noundef %3173) #15
  br label %3178

3178:                                             ; preds = %3168, %3175, %3177
  %3179 = load ptr, ptr %61, align 8, !tbaa !112
  %3180 = icmp eq ptr %3179, %168
  br i1 %3180, label %3181, label %3182

3181:                                             ; preds = %3178
  store i64 %66, ptr %65, align 8, !tbaa !111
  br label %3391

3182:                                             ; preds = %3178
  store ptr %62, ptr %61, align 8, !tbaa !112
  br label %3391

3183:                                             ; preds = %3160
  %3184 = and i8 %3162, 1
  br i1 %3164, label %3339, label %3185

3185:                                             ; preds = %3183
  %3186 = icmp ne i8 %3184, 0
  %3187 = load ptr, ptr %17, align 8
  %3188 = icmp ne ptr %3187, null
  %3189 = select i1 %3186, i1 true, i1 %3188
  br i1 %3189, label %3339, label %3190

3190:                                             ; preds = %3185
  %3191 = load i8, ptr %163, align 2, !tbaa !143
  %3192 = zext i8 %3191 to i32
  %3193 = and i32 %3192, 12
  %3194 = icmp eq i32 %3193, 0
  br i1 %3194, label %3195, label %3338

3195:                                             ; preds = %3190
  %3196 = load ptr, ptr %190, align 8, !tbaa !16
  %3197 = getelementptr inbounds %struct.xpv, ptr %3196, i64 0, i32 2
  %3198 = load i64, ptr %3197, align 8, !tbaa !38
  %3199 = icmp eq i64 %3198, %189
  br i1 %3199, label %3200, label %3338

3200:                                             ; preds = %3195
  %3201 = and i32 %3192, 16
  %3202 = icmp eq i32 %3201, 0
  br i1 %3202, label %3218, label %3203

3203:                                             ; preds = %3200
  %3204 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %3205 = getelementptr inbounds %struct.cop, ptr %3204, i64 0, i32 12
  %3206 = load ptr, ptr %3205, align 8, !tbaa !402
  %3207 = ptrtoint ptr %3206 to i64
  switch i64 %3207, label %3208 [
    i64 0, label %3218
    i64 8, label %3218
    i64 16, label %3218
  ]

3208:                                             ; preds = %3203
  %3209 = getelementptr inbounds i64, ptr %3206, i64 1
  %3210 = load i8, ptr %3209, align 1, !tbaa !17
  %3211 = and i8 %3210, 2
  %3212 = icmp eq i8 %3211, 0
  br i1 %3212, label %3213, label %3338

3213:                                             ; preds = %3208
  %3214 = getelementptr inbounds i8, ptr %3206, i64 20
  %3215 = load i8, ptr %3214, align 1, !tbaa !17
  %3216 = and i8 %3215, 2
  %3217 = icmp eq i8 %3216, 0
  br i1 %3217, label %3218, label %3338

3218:                                             ; preds = %3200, %3203, %3203, %3203, %3213
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %40) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %41) #15
  %3219 = load ptr, ptr %63, align 8, !tbaa !105
  %3220 = getelementptr inbounds %struct.sv, ptr %3161, i64 0, i32 2
  %3221 = load i32, ptr %3220, align 4, !tbaa !13
  %3222 = and i32 %3221, 255
  %3223 = icmp eq i32 %3222, 4
  br i1 %3223, label %3226, label %3224

3224:                                             ; preds = %3218
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.231, i32 noundef 9117) #15
  %3225 = load ptr, ptr %18, align 8, !tbaa !5
  br label %3226

3226:                                             ; preds = %3218, %3224
  %3227 = phi ptr [ %3161, %3218 ], [ %3225, %3224 ]
  %3228 = load ptr, ptr %3161, align 8, !tbaa !16
  %3229 = getelementptr inbounds %struct.xpvinvlist, ptr %3228, i64 0, i32 5
  store i64 0, ptr %3229, align 8, !tbaa !9
  %3230 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef %3227, ptr noundef nonnull %40, ptr noundef nonnull %41)
  br i1 %3230, label %3234, label %3231

3231:                                             ; preds = %3226
  %3232 = load i32, ptr %1, align 4, !tbaa !73
  %3233 = or i32 %3232, 3
  store i32 %3233, ptr %1, align 4, !tbaa !73
  br label %3316

3234:                                             ; preds = %3226
  %3235 = load i64, ptr %40, align 8, !tbaa !9
  %3236 = load i64, ptr %41, align 8, !tbaa !9
  %3237 = icmp eq i64 %3235, %3236
  br i1 %3237, label %3238, label %3276

3238:                                             ; preds = %3234
  %3239 = load ptr, ptr %18, align 8, !tbaa !5
  %3240 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef %3239, ptr noundef nonnull %40, ptr noundef nonnull %41)
  br i1 %3240, label %3304, label %3241

3241:                                             ; preds = %3238
  %3242 = load i64, ptr %40, align 8, !tbaa !9
  %3243 = icmp ult i64 %3242, 256
  br i1 %3243, label %3248, label %3244

3244:                                             ; preds = %3241
  %3245 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %3246 = load i32, ptr %3245, align 8, !tbaa !50
  %3247 = icmp eq i32 %3246, 0
  br i1 %3247, label %3304, label %3248

3248:                                             ; preds = %3244, %3241
  store i64 %3242, ptr %11, align 8, !tbaa !9
  %3249 = load i32, ptr %0, align 8, !tbaa !66
  %3250 = and i32 %3249, 4
  %3251 = icmp eq i32 %3250, 0
  %3252 = and i32 %3249, 896
  %3253 = icmp eq i32 %3252, 128
  br i1 %3251, label %3254, label %3256

3254:                                             ; preds = %3248
  %3255 = select i1 %3253, i8 32, i8 31
  br label %3316

3256:                                             ; preds = %3248
  br i1 %3253, label %3316, label %3257

3257:                                             ; preds = %3256
  br i1 %3243, label %3258, label %3263

3258:                                             ; preds = %3257
  %3259 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %3242
  %3260 = load i32, ptr %3259, align 4, !tbaa !73
  %3261 = and i32 %3260, 4194304
  %3262 = icmp eq i32 %3261, 0
  br i1 %3262, label %3268, label %3316

3263:                                             ; preds = %3257
  %3264 = load ptr, ptr @PL_utf8_foldable, align 8, !tbaa !5
  %3265 = call fastcc zeroext i1 @S__invlist_contains_cp(ptr noundef %3264, i64 noundef %3242)
  br i1 %3265, label %3316, label %3266

3266:                                             ; preds = %3263
  %3267 = load i32, ptr %0, align 8, !tbaa !66
  br label %3268

3268:                                             ; preds = %3266, %3258
  %3269 = phi i32 [ %3267, %3266 ], [ %3249, %3258 ]
  %3270 = and i32 %3269, 4
  %3271 = icmp eq i32 %3270, 0
  br i1 %3271, label %3272, label %3306

3272:                                             ; preds = %3268
  %3273 = and i32 %3269, 896
  %3274 = icmp eq i32 %3273, 128
  %3275 = select i1 %3274, i8 32, i8 31
  br label %3316

3276:                                             ; preds = %3234
  %3277 = icmp eq i64 %3235, 0
  br i1 %3277, label %3278, label %3304

3278:                                             ; preds = %3276
  switch i64 %3236, label %3304 [
    i64 -1, label %3279
    i64 9, label %3287
  ]

3279:                                             ; preds = %3278
  %3280 = load i32, ptr %1, align 4, !tbaa !73
  %3281 = or i32 %3280, 3
  store i32 %3281, ptr %1, align 4, !tbaa !73
  %3282 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 14
  %3283 = load i32, ptr %3282, align 8, !tbaa !108
  %3284 = icmp slt i32 %3283, 10
  br i1 %3284, label %3285, label %3316

3285:                                             ; preds = %3279
  %3286 = add nsw i32 %3283, 1
  store i32 %3286, ptr %3282, align 8, !tbaa !108
  br label %3316

3287:                                             ; preds = %3278
  %3288 = load ptr, ptr %18, align 8, !tbaa !5
  %3289 = call fastcc zeroext i1 @S_invlist_iternext(ptr noundef %3288, ptr noundef nonnull %40, ptr noundef nonnull %41)
  %3290 = load i64, ptr %40, align 8
  %3291 = icmp eq i64 %3290, 11
  %3292 = select i1 %3289, i1 %3291, i1 false
  %3293 = load i64, ptr %41, align 8
  %3294 = icmp eq i64 %3293, -1
  %3295 = select i1 %3292, i1 %3294, i1 false
  br i1 %3295, label %3296, label %3304

3296:                                             ; preds = %3287
  %3297 = load i32, ptr %1, align 4, !tbaa !73
  %3298 = or i32 %3297, 3
  store i32 %3298, ptr %1, align 4, !tbaa !73
  %3299 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 14
  %3300 = load i32, ptr %3299, align 8, !tbaa !108
  %3301 = icmp slt i32 %3300, 10
  br i1 %3301, label %3302, label %3316

3302:                                             ; preds = %3296
  %3303 = add nsw i32 %3300, 1
  store i32 %3303, ptr %3299, align 8, !tbaa !108
  br label %3316

3304:                                             ; preds = %3238, %3244, %3287, %3276, %3278
  %3305 = load ptr, ptr %18, align 8, !tbaa !5
  call fastcc void @S_invlist_iterfinish(ptr noundef %3305)
  br label %3336

3306:                                             ; preds = %3268
  %3307 = lshr i32 %3269, 7
  %3308 = and i32 %3307, 7
  %3309 = icmp ugt i32 %3308, 2
  %3310 = add nuw nsw i32 %3308, 255
  %3311 = select i1 %3309, i32 %3310, i32 %3308
  %3312 = trunc i32 %3311 to i8
  %3313 = add i8 %3312, 33
  %3314 = load ptr, ptr %18, align 8, !tbaa !5
  call fastcc void @S_invlist_iterfinish(ptr noundef %3314)
  %3315 = icmp eq i8 %3313, 0
  br i1 %3315, label %3336, label %3319

3316:                                             ; preds = %3258, %3254, %3285, %3279, %3302, %3296, %3231, %3256, %3272, %3263
  %3317 = phi i8 [ 31, %3263 ], [ 31, %3258 ], [ %3275, %3272 ], [ 34, %3256 ], [ 82, %3231 ], [ 16, %3296 ], [ 16, %3302 ], [ 17, %3279 ], [ 17, %3285 ], [ %3255, %3254 ]
  %3318 = load ptr, ptr %18, align 8, !tbaa !5
  call fastcc void @S_invlist_iterfinish(ptr noundef %3318)
  br label %3319

3319:                                             ; preds = %3316, %3306
  %3320 = phi i8 [ %3313, %3306 ], [ %3317, %3316 ]
  store ptr %64, ptr %63, align 8, !tbaa !105
  store ptr %62, ptr %61, align 8, !tbaa !112
  %3321 = call fastcc ptr @S_reg_node(ptr noundef nonnull %0, i8 noundef zeroext %3320)
  store ptr %3219, ptr %63, align 8, !tbaa !105
  %3322 = zext i8 %3320 to i64
  %3323 = getelementptr inbounds [0 x i8], ptr @PL_regkind, i64 0, i64 %3322
  %3324 = load i8, ptr %3323, align 1, !tbaa !17
  %3325 = icmp eq i8 %3324, 31
  br i1 %3325, label %3326, label %3328

3326:                                             ; preds = %3319
  %3327 = load i64, ptr %11, align 8, !tbaa !9
  call fastcc void @S_alloc_maybe_populate_EXACT(ptr noundef nonnull %0, ptr noundef %3321, ptr noundef %1, i64 noundef 0, i64 noundef %3327, i1 noundef zeroext true)
  br label %3328

3328:                                             ; preds = %3326, %3319
  %3329 = load ptr, ptr %18, align 8, !tbaa !5
  %3330 = getelementptr inbounds %struct.sv, ptr %3329, i64 0, i32 1
  %3331 = load i32, ptr %3330, align 8, !tbaa !37
  %3332 = icmp ugt i32 %3331, 1
  br i1 %3332, label %3333, label %3335

3333:                                             ; preds = %3328
  %3334 = add i32 %3331, -1
  store i32 %3334, ptr %3330, align 8, !tbaa !37
  br label %3337

3335:                                             ; preds = %3328
  call void @Perl_sv_free2(ptr noundef nonnull %3329, i32 noundef %3331) #15
  br label %3337

3336:                                             ; preds = %3306, %3304
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %41) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %40) #15
  br label %3338

3337:                                             ; preds = %3335, %3333
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %41) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %40) #15
  br label %3391

3338:                                             ; preds = %3336, %3213, %3208, %3195, %3190
  call fastcc void @S_populate_ANYOF_from_invlist(ptr noundef nonnull %163, ptr noundef nonnull %18)
  br label %3344

3339:                                             ; preds = %3183, %3185
  call fastcc void @S_populate_ANYOF_from_invlist(ptr noundef %163, ptr noundef nonnull %18)
  %3340 = icmp eq i8 %3184, 0
  br i1 %3340, label %3344, label %3341

3341:                                             ; preds = %3339
  %3342 = load i8, ptr %163, align 2, !tbaa !143
  %3343 = or i8 %3342, 1
  store i8 %3343, ptr %163, align 2, !tbaa !143
  br label %3344

3344:                                             ; preds = %3338, %3341, %3339
  %3345 = load ptr, ptr %17, align 8, !tbaa !5
  %3346 = icmp eq ptr %3345, null
  br i1 %3346, label %3362, label %3347

3347:                                             ; preds = %3344
  %3348 = load ptr, ptr %18, align 8, !tbaa !5
  %3349 = icmp eq ptr %3348, null
  br i1 %3349, label %3358, label %3350

3350:                                             ; preds = %3347
  call void @Perl__invlist_union_maybe_complement_2nd(ptr noundef nonnull %3348, ptr noundef nonnull %3345, i1 noundef zeroext false, ptr noundef nonnull %18) #15
  %3351 = load ptr, ptr %17, align 8, !tbaa !5
  %3352 = getelementptr inbounds %struct.sv, ptr %3351, i64 0, i32 1
  %3353 = load i32, ptr %3352, align 8, !tbaa !37
  %3354 = icmp ugt i32 %3353, 1
  br i1 %3354, label %3355, label %3357

3355:                                             ; preds = %3350
  %3356 = add i32 %3353, -1
  store i32 %3356, ptr %3352, align 8, !tbaa !37
  br label %3359

3357:                                             ; preds = %3350
  call void @Perl_sv_free2(ptr noundef nonnull %3351, i32 noundef %3353) #15
  br label %3359

3358:                                             ; preds = %3347
  store ptr %3345, ptr %18, align 8, !tbaa !5
  br label %3359

3359:                                             ; preds = %3357, %3355, %3358
  %3360 = load i8, ptr %163, align 2, !tbaa !143
  %3361 = or i8 %3360, 2
  store i8 %3361, ptr %163, align 2, !tbaa !143
  br label %3362

3362:                                             ; preds = %3359, %3344
  %3363 = icmp ne ptr %3163, null
  %3364 = icmp ugt i64 %2389, 1
  %3365 = select i1 %3363, i1 %3364, i1 false
  br i1 %3365, label %3366, label %3373

3366:                                             ; preds = %3362
  %3367 = getelementptr inbounds %struct.sv, ptr %3163, i64 0, i32 1
  %3368 = load i32, ptr %3367, align 8, !tbaa !37
  %3369 = icmp ugt i32 %3368, 1
  br i1 %3369, label %3370, label %3372

3370:                                             ; preds = %3366
  %3371 = add i32 %3368, -1
  store i32 %3371, ptr %3367, align 8, !tbaa !37
  br label %3373

3372:                                             ; preds = %3366
  call void @Perl_sv_free2(ptr noundef nonnull %3163, i32 noundef %3368) #15
  br label %3373

3373:                                             ; preds = %3372, %3370, %3362
  %3374 = phi ptr [ %3163, %3362 ], [ null, %3370 ], [ null, %3372 ]
  %3375 = load ptr, ptr %18, align 8, !tbaa !5
  %3376 = load ptr, ptr %190, align 8, !tbaa !16
  %3377 = getelementptr inbounds %struct.xpv, ptr %3376, i64 0, i32 2
  %3378 = load i64, ptr %3377, align 8, !tbaa !38
  %3379 = icmp eq i64 %3378, %189
  %3380 = select i1 %3379, ptr null, ptr %190
  %3381 = load ptr, ptr %19, align 8, !tbaa !5
  %3382 = and i8 %2386, 1
  %3383 = icmp ne i8 %3382, 0
  call fastcc void @S_set_ANYOF_arg(ptr noundef nonnull %0, ptr noundef %163, ptr noundef %3375, ptr noundef %3380, ptr noundef %3381, ptr noundef %3374, i1 noundef zeroext %3383)
  %3384 = load i32, ptr %1, align 4, !tbaa !73
  %3385 = or i32 %3384, 3
  store i32 %3385, ptr %1, align 4, !tbaa !73
  %3386 = load i8, ptr %163, align 2, !tbaa !143
  %3387 = and i8 %3386, 12
  %3388 = icmp eq i8 %3387, 0
  br i1 %3388, label %3391, label %3389

3389:                                             ; preds = %3373
  %3390 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 34
  store i32 1, ptr %3390, align 8, !tbaa !52
  br label %3391

3391:                                             ; preds = %2706, %2704, %2698, %3337, %3373, %3389, %3181, %3182, %2707, %2489
  %3392 = phi ptr [ %2478, %2489 ], [ %3321, %3337 ], [ %163, %2707 ], [ %62, %3182 ], [ %62, %3181 ], [ %163, %3389 ], [ %163, %3373 ], [ %2636, %2698 ], [ %2636, %2704 ], [ %2636, %2706 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %20)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %19) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %18) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %17) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %16) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %15) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %14) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #15
  ret ptr %3392
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i1 @S_grok_bslash_N(ptr noundef %0, ptr noundef %1, ptr noundef writeonly %2, ptr noundef writeonly %3, ptr noundef %4, i32 noundef %5) unnamed_addr #0 {
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7)
  store volatile i64 0, ptr %7, align 8, !tbaa !9
  %12 = load volatile i64, ptr %7, align 8, !tbaa !9
  %13 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %14 = icmp eq ptr %13, null
  br i1 %14, label %34, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.sv, ptr %13, i64 0, i32 2
  %17 = load i32, ptr %16, align 4, !tbaa !13
  %18 = and i32 %17, 256
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  tail call void @Perl_sv_setuv(ptr noundef nonnull %13, i64 noundef 65288) #15
  %21 = load i32, ptr %16, align 4, !tbaa !13
  br label %22

22:                                               ; preds = %20, %15
  %23 = phi i32 [ %21, %20 ], [ %17, %15 ]
  %24 = and i32 %23, 2097408
  %25 = icmp eq i32 %24, 256
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = load ptr, ptr %13, align 8, !tbaa !16
  %28 = getelementptr inbounds %struct.xpviv, ptr %27, i64 0, i32 4
  %29 = load i64, ptr %28, align 8, !tbaa !17
  br label %32

30:                                               ; preds = %22
  %31 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %13, i32 noundef 2) #15
  br label %32

32:                                               ; preds = %30, %26
  %33 = phi i64 [ %29, %26 ], [ %31, %30 ]
  store volatile i64 %33, ptr %7, align 8, !tbaa !9
  br label %34

34:                                               ; preds = %32, %6
  %35 = icmp eq ptr %0, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %34
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 11119) #15
  br label %37

37:                                               ; preds = %34, %36
  %38 = icmp eq ptr %4, null
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.384, i32 noundef 11119) #15
  br label %40

40:                                               ; preds = %39, %37
  %41 = tail call ptr @Perl_get_sv(ptr noundef nonnull @.str.2, i32 noundef 1) #15
  %42 = icmp eq ptr %41, null
  br i1 %42, label %62, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.sv, ptr %41, i64 0, i32 2
  %45 = load i32, ptr %44, align 4, !tbaa !13
  %46 = and i32 %45, 256
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %43
  tail call void @Perl_sv_setuv(ptr noundef nonnull %41, i64 noundef 65288) #15
  %49 = load i32, ptr %44, align 4, !tbaa !13
  br label %50

50:                                               ; preds = %48, %43
  %51 = phi i32 [ %49, %48 ], [ %45, %43 ]
  %52 = and i32 %51, 2097408
  %53 = icmp eq i32 %52, 256
  br i1 %53, label %54, label %58

54:                                               ; preds = %50
  %55 = load ptr, ptr %41, align 8, !tbaa !16
  %56 = getelementptr inbounds %struct.xpviv, ptr %55, i64 0, i32 4
  %57 = load i64, ptr %56, align 8, !tbaa !17
  br label %60

58:                                               ; preds = %50
  %59 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %41, i32 noundef 2) #15
  br label %60

60:                                               ; preds = %58, %54
  %61 = phi i64 [ %57, %54 ], [ %59, %58 ]
  store volatile i64 %61, ptr %7, align 8, !tbaa !9
  br label %62

62:                                               ; preds = %60, %40
  %63 = icmp ne ptr %1, null
  %64 = icmp ne ptr %2, null
  %65 = xor i1 %63, %64
  br i1 %65, label %67, label %66

66:                                               ; preds = %62
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.579, i32 noundef 11123) #15
  br label %67

67:                                               ; preds = %62, %66
  %68 = icmp ne ptr %3, null
  %69 = and i1 %63, %68
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.580, i32 noundef 11124) #15
  br label %72

71:                                               ; preds = %67
  br i1 %68, label %72, label %73

72:                                               ; preds = %70, %71
  store i32 1, ptr %3, align 4, !tbaa !73
  br label %73

73:                                               ; preds = %72, %71
  %74 = load i32, ptr %0, align 8, !tbaa !66
  %75 = and i32 %74, 8
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %78 = load ptr, ptr %77, align 8, !tbaa !105
  br i1 %76, label %81, label %79

79:                                               ; preds = %73
  %80 = tail call fastcc ptr @S_regpatws(ptr noundef nonnull %0, ptr noundef %78, i1 noundef zeroext true)
  br label %81

81:                                               ; preds = %73, %79
  %82 = phi ptr [ %80, %79 ], [ %78, %73 ]
  %83 = load i8, ptr %82, align 1, !tbaa !17
  %84 = icmp eq i8 %83, 123
  br i1 %84, label %85, label %116

85:                                               ; preds = %81
  %86 = getelementptr inbounds i8, ptr %82, i64 1
  %87 = load i8, ptr %86, align 1, !tbaa !17
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %88
  %90 = load i32, ptr %89, align 4, !tbaa !73
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %174, label %93

93:                                               ; preds = %85, %93
  %94 = phi ptr [ %101, %93 ], [ %86, %85 ]
  %95 = load i8, ptr %94, align 1, !tbaa !17
  %96 = zext i8 %95 to i64
  %97 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %96
  %98 = load i32, ptr %97, align 4, !tbaa !73
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds i8, ptr %94, i64 1
  br i1 %100, label %102, label %93, !llvm.loop !389

102:                                              ; preds = %93
  %103 = icmp eq i8 %95, 44
  br i1 %103, label %104, label %113

104:                                              ; preds = %102, %104
  %105 = phi ptr [ %106, %104 ], [ %94, %102 ]
  %106 = getelementptr inbounds i8, ptr %105, i64 1
  %107 = load i8, ptr %106, align 1, !tbaa !17
  %108 = zext i8 %107 to i64
  %109 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %108
  %110 = load i32, ptr %109, align 4, !tbaa !73
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %104, !llvm.loop !390

113:                                              ; preds = %104, %102
  %114 = phi i8 [ %95, %102 ], [ %107, %104 ]
  %115 = icmp eq i8 %114, 125
  br i1 %115, label %116, label %174

116:                                              ; preds = %113, %81
  %117 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  store ptr %82, ptr %117, align 8, !tbaa !105
  br i1 %68, label %118, label %119

118:                                              ; preds = %116
  store i32 -1, ptr %3, align 4, !tbaa !73
  br label %119

119:                                              ; preds = %118, %116
  br i1 %63, label %120, label %469

120:                                              ; preds = %119
  %121 = getelementptr inbounds i8, ptr %82, i64 -1
  store ptr %121, ptr %117, align 8, !tbaa !105
  %122 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  %123 = tail call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 16, i64 noundef 0, ptr noundef nonnull @.str.460)
  %124 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %125 = load ptr, ptr %124, align 8, !tbaa !112
  %126 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %127 = icmp eq ptr %125, %126
  br i1 %127, label %132, label %128

128:                                              ; preds = %120
  %129 = getelementptr inbounds %struct.regnode, ptr %123, i64 0, i32 1
  store i8 16, ptr %129, align 1, !tbaa !141
  %130 = getelementptr inbounds %struct.regnode, ptr %123, i64 0, i32 2
  store i16 0, ptr %130, align 2, !tbaa !222
  %131 = getelementptr inbounds %struct.regnode, ptr %123, i64 1
  store ptr %131, ptr %124, align 8, !tbaa !112
  br label %132

132:                                              ; preds = %120, %128
  store ptr %123, ptr %1, align 8, !tbaa !5
  %133 = load i32, ptr %4, align 4, !tbaa !73
  %134 = or i32 %133, 3
  store i32 %134, ptr %4, align 4, !tbaa !73
  %135 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 14
  %136 = load i32, ptr %135, align 8, !tbaa !108
  %137 = icmp slt i32 %136, 10
  br i1 %137, label %138, label %140

138:                                              ; preds = %132
  %139 = add nsw i32 %136, 1
  store i32 %139, ptr %135, align 8, !tbaa !108
  br label %140

140:                                              ; preds = %132, %138
  %141 = load ptr, ptr %124, align 8, !tbaa !112
  %142 = icmp eq ptr %141, %126
  br i1 %142, label %469, label %143

143:                                              ; preds = %140
  %144 = load volatile i64, ptr %7, align 8, !tbaa !9
  %145 = and i64 %144, 262144
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %156, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %149 = load ptr, ptr %148, align 8, !tbaa !131
  %150 = ptrtoint ptr %123 to i64
  %151 = ptrtoint ptr %149 to i64
  %152 = sub i64 %150, %151
  %153 = lshr exact i64 %152, 2
  %154 = trunc i64 %153 to i32
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.335, i32 noundef 11156, i32 noundef %154, i32 noundef 1) #15
  %155 = load ptr, ptr %1, align 8, !tbaa !5
  br label %156

156:                                              ; preds = %147, %143
  %157 = phi ptr [ %155, %147 ], [ %123, %143 ]
  %158 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 10
  %159 = load ptr, ptr %158, align 8, !tbaa !131
  %160 = ptrtoint ptr %157 to i64
  %161 = ptrtoint ptr %159 to i64
  %162 = sub i64 %160, %161
  %163 = icmp slt i64 %162, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %156
  %165 = lshr exact i64 %162, 2
  %166 = trunc i64 %165 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.336, i32 noundef %166) #15
  br label %469

167:                                              ; preds = %156
  %168 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 5
  %169 = load ptr, ptr %168, align 8, !tbaa !130
  %170 = getelementptr inbounds %struct.regexp_internal, ptr %169, i64 0, i32 1
  %171 = load ptr, ptr %170, align 8, !tbaa !17
  %172 = lshr exact i64 %162, 1
  %173 = getelementptr inbounds i32, ptr %171, i64 %172
  store i32 1, ptr %173, align 4, !tbaa !73
  br label %469

174:                                              ; preds = %85, %113
  %175 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %176 = load ptr, ptr %175, align 8, !tbaa !105
  %177 = load i8, ptr %176, align 1, !tbaa !17
  %178 = icmp eq i8 %177, 123
  br i1 %178, label %207, label %179

179:                                              ; preds = %174
  %180 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %181 = load ptr, ptr %180, align 8, !tbaa !112
  %182 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %183 = icmp eq ptr %181, %182
  br i1 %183, label %188, label %184

184:                                              ; preds = %179
  %185 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %186 = load ptr, ptr %185, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %186, i32 noundef 11) #15
  %187 = load ptr, ptr %175, align 8, !tbaa !105
  br label %188

188:                                              ; preds = %179, %184
  %189 = phi ptr [ %176, %179 ], [ %187, %184 ]
  %190 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %191 = load ptr, ptr %190, align 8, !tbaa !107
  %192 = icmp ugt ptr %189, %191
  %193 = select i1 %192, ptr %191, ptr %189
  %194 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %195 = load ptr, ptr %194, align 8, !tbaa !65
  %196 = ptrtoint ptr %193 to i64
  %197 = ptrtoint ptr %195 to i64
  %198 = sub i64 %196, %197
  %199 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %200 = load i32, ptr %199, align 8, !tbaa !50
  %201 = icmp ne i32 %200, 0
  %202 = zext i1 %201 to i32
  %203 = ptrtoint ptr %191 to i64
  %204 = sub i64 %203, %196
  %205 = getelementptr inbounds i8, ptr %195, i64 %198
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.581, i32 noundef %202, i64 noundef %198, ptr noundef %195, i32 noundef %202, i64 noundef %204, ptr noundef %205) #15
  %206 = load ptr, ptr %175, align 8, !tbaa !105
  br label %207

207:                                              ; preds = %188, %174
  %208 = phi ptr [ %206, %188 ], [ %176, %174 ]
  %209 = getelementptr inbounds i8, ptr %208, i64 1
  store ptr %209, ptr %175, align 8, !tbaa !105
  %210 = tail call ptr @strchr(ptr noundef nonnull dereferenceable(1) %209, i32 noundef 125) #18
  %211 = icmp eq ptr %210, null
  br i1 %211, label %223, label %212

212:                                              ; preds = %207
  %213 = icmp eq ptr %210, %209
  br i1 %213, label %252, label %214

214:                                              ; preds = %212
  %215 = ptrtoint ptr %210 to i64
  %216 = ptrtoint ptr %209 to i64
  %217 = sub i64 %215, %216
  %218 = icmp sgt i64 %217, 1
  br i1 %218, label %219, label %222

219:                                              ; preds = %214
  %220 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %209, ptr noundef nonnull dereferenceable(3) @.str.582, i64 noundef 2) #18
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %252, label %222

222:                                              ; preds = %214, %219
  store ptr %210, ptr %175, align 8, !tbaa !105
  br label %223

223:                                              ; preds = %207, %222
  %224 = phi ptr [ %209, %207 ], [ %210, %222 ]
  %225 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %226 = load ptr, ptr %225, align 8, !tbaa !112
  %227 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %228 = icmp eq ptr %226, %227
  br i1 %228, label %233, label %229

229:                                              ; preds = %223
  %230 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %231 = load ptr, ptr %230, align 8, !tbaa !122
  tail call void @Perl_save_pushptr(ptr noundef %231, i32 noundef 11) #15
  %232 = load ptr, ptr %175, align 8, !tbaa !105
  br label %233

233:                                              ; preds = %223, %229
  %234 = phi ptr [ %224, %223 ], [ %232, %229 ]
  %235 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %236 = load ptr, ptr %235, align 8, !tbaa !107
  %237 = icmp ugt ptr %234, %236
  %238 = select i1 %237, ptr %236, ptr %234
  %239 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %240 = load ptr, ptr %239, align 8, !tbaa !65
  %241 = ptrtoint ptr %238 to i64
  %242 = ptrtoint ptr %240 to i64
  %243 = sub i64 %241, %242
  %244 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %245 = load i32, ptr %244, align 8, !tbaa !50
  %246 = icmp ne i32 %245, 0
  %247 = zext i1 %246 to i32
  %248 = ptrtoint ptr %236 to i64
  %249 = sub i64 %248, %241
  %250 = getelementptr inbounds i8, ptr %240, i64 %243
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.583, i32 noundef %247, i64 noundef %243, ptr noundef %240, i32 noundef %247, i64 noundef %249, ptr noundef %250) #15
  %251 = load ptr, ptr %175, align 8, !tbaa !105
  br label %252

252:                                              ; preds = %233, %219, %212
  %253 = phi ptr [ %251, %233 ], [ %209, %219 ], [ %209, %212 ]
  %254 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 27
  store i32 1, ptr %254, align 8, !tbaa !51
  %255 = icmp eq ptr %210, %253
  br i1 %255, label %256, label %271

256:                                              ; preds = %252
  br i1 %68, label %257, label %258

257:                                              ; preds = %256
  store i32 0, ptr %3, align 4, !tbaa !73
  br label %258

258:                                              ; preds = %257, %256
  %259 = tail call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br i1 %63, label %260, label %469

260:                                              ; preds = %258
  %261 = tail call fastcc ptr @S_regnode_guts(ptr noundef nonnull %0, i8 noundef zeroext 40, i64 noundef 0, ptr noundef nonnull @.str.460)
  %262 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %263 = load ptr, ptr %262, align 8, !tbaa !112
  %264 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %265 = icmp eq ptr %263, %264
  br i1 %265, label %270, label %266

266:                                              ; preds = %260
  %267 = getelementptr inbounds %struct.regnode, ptr %261, i64 0, i32 1
  store i8 40, ptr %267, align 1, !tbaa !141
  %268 = getelementptr inbounds %struct.regnode, ptr %261, i64 0, i32 2
  store i16 0, ptr %268, align 2, !tbaa !222
  %269 = getelementptr inbounds %struct.regnode, ptr %261, i64 1
  store ptr %269, ptr %262, align 8, !tbaa !112
  br label %270

270:                                              ; preds = %260, %266
  store ptr %261, ptr %1, align 8, !tbaa !5
  br label %469

271:                                              ; preds = %252
  %272 = getelementptr inbounds i8, ptr %253, i64 2
  store ptr %272, ptr %175, align 8, !tbaa !105
  %273 = tail call i64 @strcspn(ptr noundef nonnull %272, ptr noundef nonnull @.str.584) #18
  %274 = getelementptr inbounds i8, ptr %272, i64 %273
  %275 = icmp ult ptr %274, %210
  br i1 %275, label %336, label %276

276:                                              ; preds = %271
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #15
  br i1 %64, label %277, label %334

277:                                              ; preds = %276
  store i64 %273, ptr %8, align 8, !tbaa !9
  %278 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %279 = load ptr, ptr %278, align 8, !tbaa !112
  %280 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %281 = icmp eq ptr %279, %280
  %282 = select i1 %281, i32 7, i32 3
  store i32 %282, ptr %9, align 4, !tbaa !73
  %283 = call i64 @Perl_grok_hex(ptr noundef nonnull %272, ptr noundef nonnull %8, ptr noundef nonnull %9, ptr noundef null) #15
  store i64 %283, ptr %2, align 8, !tbaa !9
  %284 = load i64, ptr %8, align 8, !tbaa !9
  %285 = icmp ne i64 %284, 0
  %286 = load ptr, ptr %175, align 8, !tbaa !105
  %287 = ptrtoint ptr %274 to i64
  %288 = ptrtoint ptr %286 to i64
  %289 = sub i64 %287, %288
  %290 = icmp eq i64 %284, %289
  %291 = select i1 %285, i1 %290, i1 false
  br i1 %291, label %332, label %292

292:                                              ; preds = %277
  %293 = getelementptr inbounds i8, ptr %286, i64 %284
  store ptr %293, ptr %175, align 8, !tbaa !105
  %294 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 26
  %295 = load i32, ptr %294, align 4, !tbaa !49
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %303, label %297

297:                                              ; preds = %292
  %298 = load i8, ptr %293, align 1, !tbaa !17
  %299 = zext i8 %298 to i64
  %300 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %299
  %301 = load i8, ptr %300, align 1, !tbaa !17
  %302 = zext i8 %301 to i64
  br label %303

303:                                              ; preds = %292, %297
  %304 = phi i64 [ %302, %297 ], [ 1, %292 ]
  %305 = getelementptr inbounds i8, ptr %293, i64 %304
  %306 = icmp ult ptr %305, %274
  %307 = select i1 %306, ptr %305, ptr %274
  store ptr %307, ptr %175, align 8, !tbaa !105
  %308 = load ptr, ptr %278, align 8, !tbaa !112
  %309 = icmp eq ptr %308, %280
  br i1 %309, label %314, label %310

310:                                              ; preds = %303
  %311 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %312 = load ptr, ptr %311, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %312, i32 noundef 11) #15
  %313 = load ptr, ptr %175, align 8, !tbaa !105
  br label %314

314:                                              ; preds = %303, %310
  %315 = phi ptr [ %307, %303 ], [ %313, %310 ]
  %316 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %317 = load ptr, ptr %316, align 8, !tbaa !107
  %318 = icmp ugt ptr %315, %317
  %319 = select i1 %318, ptr %317, ptr %315
  %320 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %321 = load ptr, ptr %320, align 8, !tbaa !65
  %322 = ptrtoint ptr %319 to i64
  %323 = ptrtoint ptr %321 to i64
  %324 = sub i64 %322, %323
  %325 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %326 = load i32, ptr %325, align 8, !tbaa !50
  %327 = icmp ne i32 %326, 0
  %328 = zext i1 %327 to i32
  %329 = ptrtoint ptr %317 to i64
  %330 = sub i64 %329, %322
  %331 = getelementptr inbounds i8, ptr %321, i64 %324
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.585, i32 noundef %328, i64 noundef %324, ptr noundef %321, i32 noundef %328, i64 noundef %330, ptr noundef %331) #15
  br label %332

332:                                              ; preds = %277, %314
  %333 = getelementptr inbounds i8, ptr %210, i64 1
  br label %334

334:                                              ; preds = %276, %332
  %335 = phi ptr [ %333, %332 ], [ %82, %276 ]
  store ptr %335, ptr %175, align 8, !tbaa !105
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #15
  br label %469

336:                                              ; preds = %271
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #15
  %337 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %338 = load ptr, ptr %337, align 8, !tbaa !107
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #15
  br i1 %68, label %339, label %351

339:                                              ; preds = %336
  store i32 0, ptr %3, align 4, !tbaa !73
  %340 = icmp ult ptr %272, %210
  br i1 %340, label %341, label %349

341:                                              ; preds = %339, %341
  %342 = phi ptr [ %346, %341 ], [ %274, %339 ]
  %343 = phi i32 [ %347, %341 ], [ 0, %339 ]
  %344 = getelementptr inbounds i8, ptr %342, i64 1
  store ptr %344, ptr %175, align 8, !tbaa !105
  %345 = tail call i64 @strcspn(ptr noundef nonnull %344, ptr noundef nonnull @.str.584) #18
  %346 = getelementptr inbounds i8, ptr %344, i64 %345
  %347 = add nuw nsw i32 %343, 1
  store i32 %347, ptr %3, align 4, !tbaa !73
  %348 = icmp ult ptr %344, %210
  br i1 %348, label %341, label %349, !llvm.loop !419

349:                                              ; preds = %341, %339
  %350 = phi ptr [ %274, %339 ], [ %346, %341 ]
  br i1 %63, label %353, label %467

351:                                              ; preds = %336
  br i1 %63, label %353, label %352

352:                                              ; preds = %351
  store ptr %82, ptr %175, align 8, !tbaa !105
  br label %467

353:                                              ; preds = %351, %349
  %354 = phi ptr [ %274, %351 ], [ %350, %349 ]
  %355 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.545, i64 noundef 2) #15
  %356 = load ptr, ptr %175, align 8, !tbaa !105
  %357 = icmp ult ptr %356, %210
  br i1 %357, label %358, label %368

358:                                              ; preds = %353, %358
  %359 = phi ptr [ %366, %358 ], [ %354, %353 ]
  tail call void @Perl_sv_catpv(ptr noundef %355, ptr noundef nonnull @.str.586) #15
  %360 = load ptr, ptr %175, align 8, !tbaa !105
  %361 = ptrtoint ptr %359 to i64
  %362 = ptrtoint ptr %360 to i64
  %363 = sub i64 %361, %362
  tail call void @Perl_sv_catpvn_flags(ptr noundef %355, ptr noundef %360, i64 noundef %363, i32 noundef 2) #15
  tail call void @Perl_sv_catpv(ptr noundef %355, ptr noundef nonnull @.str.587) #15
  %364 = getelementptr inbounds i8, ptr %359, i64 1
  store ptr %364, ptr %175, align 8, !tbaa !105
  %365 = tail call i64 @strcspn(ptr noundef nonnull %364, ptr noundef nonnull @.str.584) #18
  %366 = getelementptr inbounds i8, ptr %364, i64 %365
  %367 = icmp ult ptr %364, %210
  br i1 %367, label %358, label %368, !llvm.loop !420

368:                                              ; preds = %358, %353
  tail call void @Perl_sv_catpv(ptr noundef %355, ptr noundef nonnull @.str.549) #15
  %369 = getelementptr inbounds %struct.sv, ptr %355, i64 0, i32 2
  %370 = load i32, ptr %369, align 4, !tbaa !13
  %371 = and i32 %370, 2098176
  %372 = icmp eq i32 %371, 1024
  br i1 %372, label %373, label %379

373:                                              ; preds = %368
  %374 = load ptr, ptr %355, align 8, !tbaa !16
  %375 = getelementptr inbounds %struct.xpv, ptr %374, i64 0, i32 2
  %376 = load i64, ptr %375, align 8, !tbaa !38
  store i64 %376, ptr %10, align 8, !tbaa !9
  %377 = getelementptr inbounds %struct.sv, ptr %355, i64 0, i32 3
  %378 = load ptr, ptr %377, align 8, !tbaa !17
  br label %382

379:                                              ; preds = %368
  %380 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %355, ptr noundef nonnull %10, i32 noundef 2) #15
  %381 = load i64, ptr %10, align 8, !tbaa !9
  br label %382

382:                                              ; preds = %379, %373
  %383 = phi i64 [ %381, %379 ], [ %376, %373 ]
  %384 = phi ptr [ %380, %379 ], [ %378, %373 ]
  store ptr %384, ptr %175, align 8, !tbaa !105
  %385 = icmp ult i64 %383, 8
  br i1 %385, label %386, label %414

386:                                              ; preds = %382
  store ptr %210, ptr %175, align 8, !tbaa !105
  %387 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %388 = load ptr, ptr %387, align 8, !tbaa !112
  %389 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %390 = icmp eq ptr %388, %389
  br i1 %390, label %395, label %391

391:                                              ; preds = %386
  %392 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %393 = load ptr, ptr %392, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %393, i32 noundef 11) #15
  %394 = load ptr, ptr %175, align 8, !tbaa !105
  br label %395

395:                                              ; preds = %386, %391
  %396 = phi ptr [ %210, %386 ], [ %394, %391 ]
  %397 = load ptr, ptr %337, align 8, !tbaa !107
  %398 = icmp ugt ptr %396, %397
  %399 = select i1 %398, ptr %397, ptr %396
  %400 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %401 = load ptr, ptr %400, align 8, !tbaa !65
  %402 = ptrtoint ptr %399 to i64
  %403 = ptrtoint ptr %401 to i64
  %404 = sub i64 %402, %403
  %405 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %406 = load i32, ptr %405, align 8, !tbaa !50
  %407 = icmp ne i32 %406, 0
  %408 = zext i1 %407 to i32
  %409 = ptrtoint ptr %397 to i64
  %410 = sub i64 %409, %402
  %411 = getelementptr inbounds i8, ptr %401, i64 %404
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.585, i32 noundef %408, i64 noundef %404, ptr noundef %401, i32 noundef %408, i64 noundef %410, ptr noundef %411) #15
  %412 = load ptr, ptr %175, align 8, !tbaa !105
  %413 = load i64, ptr %10, align 8, !tbaa !9
  br label %414

414:                                              ; preds = %395, %382
  %415 = phi i64 [ %413, %395 ], [ %383, %382 ]
  %416 = phi ptr [ %412, %395 ], [ %384, %382 ]
  %417 = getelementptr inbounds i8, ptr %416, i64 %415
  store ptr %417, ptr %337, align 8, !tbaa !107
  %418 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 36
  store i32 1, ptr %418, align 8, !tbaa !103
  %419 = add i32 %5, 1
  %420 = call fastcc ptr @S_reg(ptr noundef nonnull %0, i32 noundef 1, ptr noundef nonnull %11, i32 noundef %419)
  store ptr %420, ptr %1, align 8, !tbaa !5
  %421 = icmp eq ptr %420, null
  br i1 %421, label %422, label %454

422:                                              ; preds = %414
  %423 = load i32, ptr %11, align 4, !tbaa !73
  %424 = and i32 %423, 32
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %427, label %426

426:                                              ; preds = %422
  store i32 32, ptr %4, align 4, !tbaa !73
  br label %467

427:                                              ; preds = %422
  %428 = load ptr, ptr %337, align 8, !tbaa !107
  %429 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 2
  %430 = load ptr, ptr %429, align 8, !tbaa !65
  %431 = ptrtoint ptr %428 to i64
  %432 = ptrtoint ptr %430 to i64
  %433 = sub i64 %431, %432
  %434 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %435 = load ptr, ptr %434, align 8, !tbaa !112
  %436 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %437 = icmp eq ptr %435, %436
  br i1 %437, label %443, label %438

438:                                              ; preds = %427
  %439 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 3
  %440 = load ptr, ptr %439, align 8, !tbaa !122
  call void @Perl_save_pushptr(ptr noundef %440, i32 noundef 11) #15
  %441 = load i32, ptr %11, align 4, !tbaa !73
  %442 = load ptr, ptr %429, align 8, !tbaa !65
  br label %443

443:                                              ; preds = %438, %427
  %444 = phi ptr [ %442, %438 ], [ %430, %427 ]
  %445 = phi i32 [ %441, %438 ], [ %423, %427 ]
  %446 = icmp sgt i64 %433, 127
  %447 = select i1 %446, ptr @.str.20, ptr @.str.8
  %448 = select i1 %446, i64 117, i64 %433
  %449 = sext i32 %445 to i64
  %450 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %451 = load i32, ptr %450, align 8, !tbaa !50
  %452 = icmp ne i32 %451, 0
  %453 = zext i1 %452 to i32
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.588, i64 noundef %449, i32 noundef %453, i64 noundef %448, ptr noundef %444, ptr noundef nonnull %447) #15
  br label %454

454:                                              ; preds = %443, %414
  %455 = load i32, ptr %11, align 4, !tbaa !73
  %456 = and i32 %455, 15
  %457 = load i32, ptr %4, align 4, !tbaa !73
  %458 = or i32 %457, %456
  store i32 %458, ptr %4, align 4, !tbaa !73
  store ptr %210, ptr %175, align 8, !tbaa !105
  store ptr %338, ptr %337, align 8, !tbaa !107
  store i32 0, ptr %418, align 8, !tbaa !103
  %459 = getelementptr inbounds %struct.sv, ptr %355, i64 0, i32 1
  %460 = load i32, ptr %459, align 8, !tbaa !37
  %461 = icmp ugt i32 %460, 1
  br i1 %461, label %462, label %464

462:                                              ; preds = %454
  %463 = add i32 %460, -1
  store i32 %463, ptr %459, align 8, !tbaa !37
  br label %465

464:                                              ; preds = %454
  call void @Perl_sv_free2(ptr noundef nonnull %355, i32 noundef %460) #15
  br label %465

465:                                              ; preds = %462, %464
  %466 = call fastcc ptr @S_nextchar(ptr noundef nonnull %0)
  br label %467

467:                                              ; preds = %349, %352, %465, %426
  %468 = phi i1 [ true, %465 ], [ false, %426 ], [ false, %352 ], [ false, %349 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #15
  br label %469

469:                                              ; preds = %258, %140, %167, %164, %119, %467, %334, %270
  %470 = phi i1 [ true, %270 ], [ %64, %334 ], [ %468, %467 ], [ false, %119 ], [ true, %164 ], [ true, %167 ], [ true, %140 ], [ false, %258 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  ret i1 %470
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i1 @S_grok_bslash_o(ptr nocapture noundef %0, ptr noundef %1, ptr noundef writeonly %2, i1 noundef zeroext %3, i1 noundef zeroext %4, i1 noundef zeroext %5, i1 noundef zeroext %6) unnamed_addr #0 {
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #15
  store i32 7, ptr %9, align 4, !tbaa !73
  %10 = load ptr, ptr %0, align 8, !tbaa !5
  %11 = getelementptr inbounds i8, ptr %10, i64 -1
  %12 = load i8, ptr %11, align 1, !tbaa !17
  %13 = icmp eq i8 %12, 92
  br i1 %13, label %15, label %14

14:                                               ; preds = %7
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.589, ptr noundef nonnull @.str.590, i32 noundef 125) #15
  br label %15

15:                                               ; preds = %14, %7
  %16 = icmp eq ptr %1, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.589, ptr noundef nonnull @.str.591, i32 noundef 128) #15
  br label %18

18:                                               ; preds = %15, %17
  %19 = icmp eq ptr %2, null
  br i1 %19, label %20, label %21

20:                                               ; preds = %18
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.589, ptr noundef nonnull @.str.592, i32 noundef 128) #15
  br label %21

21:                                               ; preds = %18, %20
  %22 = load ptr, ptr %0, align 8, !tbaa !5
  %23 = load i8, ptr %22, align 1, !tbaa !17
  %24 = icmp eq i8 %23, 111
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.589, ptr noundef nonnull @.str.593, i32 noundef 131) #15
  %26 = load ptr, ptr %0, align 8, !tbaa !5
  br label %27

27:                                               ; preds = %21, %25
  %28 = phi ptr [ %22, %21 ], [ %26, %25 ]
  %29 = getelementptr inbounds i8, ptr %28, i64 1
  store ptr %29, ptr %0, align 8, !tbaa !5
  %30 = load i8, ptr %29, align 1, !tbaa !17
  %31 = icmp eq i8 %30, 123
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  store ptr @.str.594, ptr %2, align 8, !tbaa !5
  br label %103

33:                                               ; preds = %27
  %34 = tail call ptr @strchr(ptr noundef nonnull dereferenceable(1) %29, i32 noundef 125) #18
  %35 = icmp eq ptr %34, null
  %36 = getelementptr inbounds i8, ptr %28, i64 2
  br i1 %35, label %37, label %44

37:                                               ; preds = %33, %37
  %38 = phi ptr [ %42, %37 ], [ %36, %33 ]
  store ptr %38, ptr %0, align 8, !tbaa !5
  %39 = load i8, ptr %38, align 1, !tbaa !17
  %40 = and i8 %39, -8
  %41 = icmp eq i8 %40, 48
  %42 = getelementptr inbounds i8, ptr %38, i64 1
  br i1 %41, label %37, label %43, !llvm.loop !421

43:                                               ; preds = %37
  store ptr @.str.595, ptr %2, align 8, !tbaa !5
  br label %103

44:                                               ; preds = %33
  store ptr %36, ptr %0, align 8, !tbaa !5
  %45 = ptrtoint ptr %34 to i64
  %46 = ptrtoint ptr %36 to i64
  %47 = sub i64 %45, %46
  store i64 %47, ptr %8, align 8, !tbaa !9
  %48 = icmp eq ptr %34, %36
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  %50 = getelementptr inbounds i8, ptr %28, i64 3
  store ptr %50, ptr %0, align 8, !tbaa !5
  store ptr @.str.596, ptr %2, align 8, !tbaa !5
  br label %103

51:                                               ; preds = %44
  br i1 %5, label %52, label %53

52:                                               ; preds = %51
  store i32 15, ptr %9, align 4, !tbaa !73
  br label %53

53:                                               ; preds = %52, %51
  %54 = call i64 @Perl_grok_oct(ptr noundef nonnull %36, ptr noundef nonnull %8, ptr noundef nonnull %9, ptr noundef null) #15
  store i64 %54, ptr %1, align 8, !tbaa !9
  %55 = load i64, ptr %8, align 8, !tbaa !9
  %56 = load ptr, ptr %0, align 8, !tbaa !5
  %57 = ptrtoint ptr %56 to i64
  %58 = sub i64 %45, %57
  %59 = icmp eq i64 %55, %58
  br i1 %59, label %79, label %60

60:                                               ; preds = %53
  br i1 %4, label %61, label %72

61:                                               ; preds = %60
  %62 = getelementptr inbounds i8, ptr %56, i64 %55
  store ptr %62, ptr %0, align 8, !tbaa !5
  br i1 %6, label %63, label %69

63:                                               ; preds = %61
  %64 = load i8, ptr %62, align 1, !tbaa !17
  %65 = zext i8 %64 to i64
  %66 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %65
  %67 = load i8, ptr %66, align 1, !tbaa !17
  %68 = zext i8 %67 to i64
  br label %69

69:                                               ; preds = %61, %63
  %70 = phi i64 [ %68, %63 ], [ 1, %61 ]
  %71 = getelementptr inbounds i8, ptr %62, i64 %70
  store ptr %71, ptr %0, align 8, !tbaa !5
  store ptr @.str.597, ptr %2, align 8, !tbaa !5
  br label %103

72:                                               ; preds = %60
  br i1 %3, label %73, label %79

73:                                               ; preds = %72
  %74 = getelementptr inbounds i8, ptr %56, i64 %55
  %75 = load i8, ptr %74, align 1, !tbaa !17
  %76 = sext i8 %75 to i32
  %77 = trunc i64 %55 to i32
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 31, ptr noundef nonnull @.str.598, i32 noundef %76, i32 noundef %77, ptr noundef %56) #15
  %78 = load i64, ptr %1, align 8, !tbaa !9
  br label %79

79:                                               ; preds = %73, %72, %53
  %80 = phi i64 [ %78, %73 ], [ %54, %72 ], [ %54, %53 ]
  %81 = getelementptr inbounds i8, ptr %34, i64 1
  store ptr %81, ptr %0, align 8, !tbaa !5
  %82 = icmp ult i64 %80, 128
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = icmp ult i64 %80, 2048
  br i1 %84, label %96, label %85

85:                                               ; preds = %83
  %86 = icmp ult i64 %80, 65536
  br i1 %86, label %96, label %87

87:                                               ; preds = %85
  %88 = icmp ult i64 %80, 2097152
  br i1 %88, label %96, label %89

89:                                               ; preds = %87
  %90 = icmp ult i64 %80, 67108864
  br i1 %90, label %96, label %91

91:                                               ; preds = %89
  %92 = icmp ult i64 %80, 2147483648
  br i1 %92, label %96, label %93

93:                                               ; preds = %91
  %94 = icmp ult i64 %80, 68719476736
  %95 = select i1 %94, i64 7, i64 13
  br label %96

96:                                               ; preds = %83, %87, %93, %91, %89, %85, %79
  %97 = phi i64 [ 1, %79 ], [ 2, %83 ], [ 3, %85 ], [ 4, %87 ], [ 5, %89 ], [ %95, %93 ], [ 6, %91 ]
  %98 = ptrtoint ptr %81 to i64
  %99 = ptrtoint ptr %11 to i64
  %100 = sub i64 %98, %99
  %101 = icmp slt i64 %97, %100
  br i1 %101, label %103, label %102

102:                                              ; preds = %96
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.589, ptr noundef nonnull @.str.599, i32 noundef 188) #15
  br label %103

103:                                              ; preds = %102, %96, %69, %49, %43, %32
  %104 = phi i1 [ false, %32 ], [ false, %49 ], [ false, %69 ], [ false, %43 ], [ true, %96 ], [ true, %102 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #15
  ret i1 %104
}

declare ptr @Perl__get_encoding() local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i1 @S_grok_bslash_x(ptr nocapture noundef %0, ptr noundef writeonly %1, ptr noundef writeonly %2, i1 noundef zeroext %3, i1 noundef zeroext %4, i1 noundef zeroext %5, i1 noundef zeroext %6) unnamed_addr #0 {
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #15
  store i32 2, ptr %9, align 4, !tbaa !73
  %11 = load ptr, ptr %0, align 8, !tbaa !5
  %12 = getelementptr inbounds i8, ptr %11, i64 -1
  %13 = load i8, ptr %12, align 1, !tbaa !17
  %14 = icmp eq i8 %13, 92
  br i1 %14, label %16, label %15

15:                                               ; preds = %7
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.589, ptr noundef nonnull @.str.590, i32 noundef 234) #15
  br label %16

16:                                               ; preds = %15, %7
  %17 = icmp eq ptr %1, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %16
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.589, ptr noundef nonnull @.str.591, i32 noundef 237) #15
  br label %19

19:                                               ; preds = %16, %18
  %20 = icmp eq ptr %2, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.589, ptr noundef nonnull @.str.592, i32 noundef 237) #15
  br label %22

22:                                               ; preds = %19, %21
  %23 = load ptr, ptr %0, align 8, !tbaa !5
  %24 = load i8, ptr %23, align 1, !tbaa !17
  %25 = icmp eq i8 %24, 120
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.589, ptr noundef nonnull @.str.600, i32 noundef 239) #15
  %27 = load ptr, ptr %0, align 8, !tbaa !5
  br label %28

28:                                               ; preds = %22, %26
  %29 = phi ptr [ %23, %22 ], [ %27, %26 ]
  %30 = getelementptr inbounds i8, ptr %29, i64 1
  store ptr %30, ptr %0, align 8, !tbaa !5
  %31 = xor i1 %3, true
  %32 = or i1 %31, %4
  br i1 %32, label %33, label %34

33:                                               ; preds = %28
  store i32 6, ptr %9, align 4, !tbaa !73
  br label %34

34:                                               ; preds = %28, %33
  %35 = phi i32 [ 2, %28 ], [ 6, %33 ]
  %36 = load i8, ptr %30, align 1, !tbaa !17
  %37 = icmp eq i8 %36, 123
  br i1 %37, label %60, label %38

38:                                               ; preds = %34
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #15
  %39 = select i1 %4, i64 3, i64 2
  store i64 %39, ptr %10, align 8, !tbaa !9
  %40 = call i64 @Perl_grok_hex(ptr noundef nonnull %30, ptr noundef nonnull %10, ptr noundef nonnull %9, ptr noundef null) #15
  store i64 %40, ptr %1, align 8, !tbaa !9
  %41 = load i64, ptr %10, align 8
  %42 = load ptr, ptr %0, align 8, !tbaa !5
  %43 = getelementptr inbounds i8, ptr %42, i64 %41
  store ptr %43, ptr %0, align 8, !tbaa !5
  %44 = icmp ne i64 %41, 2
  %45 = select i1 %4, i1 %44, i1 false
  br i1 %45, label %46, label %107

46:                                               ; preds = %38
  %47 = icmp ult i64 %41, 2
  br i1 %47, label %48, label %58

48:                                               ; preds = %46
  br i1 %6, label %49, label %55

49:                                               ; preds = %48
  %50 = load i8, ptr %43, align 1, !tbaa !17
  %51 = zext i8 %50 to i64
  %52 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %51
  %53 = load i8, ptr %52, align 1, !tbaa !17
  %54 = zext i8 %53 to i64
  br label %55

55:                                               ; preds = %48, %49
  %56 = phi i64 [ %54, %49 ], [ 1, %48 ]
  %57 = getelementptr inbounds i8, ptr %43, i64 %56
  store ptr %57, ptr %0, align 8, !tbaa !5
  br label %58

58:                                               ; preds = %46, %55
  %59 = phi ptr [ @.str.601, %55 ], [ @.str.602, %46 ]
  store ptr %59, ptr %2, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #15
  br label %133

60:                                               ; preds = %34
  %61 = tail call ptr @strchr(ptr noundef nonnull dereferenceable(1) %30, i32 noundef 125) #18
  %62 = icmp eq ptr %61, null
  br i1 %62, label %63, label %73

63:                                               ; preds = %60, %63
  %64 = phi ptr [ %65, %63 ], [ %30, %60 ]
  %65 = getelementptr inbounds i8, ptr %64, i64 1
  store ptr %65, ptr %0, align 8, !tbaa !5
  %66 = load i8, ptr %65, align 1, !tbaa !17
  %67 = zext i8 %66 to i64
  %68 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %67
  %69 = load i32, ptr %68, align 4, !tbaa !73
  %70 = and i32 %69, 4096
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %63, !llvm.loop !422

72:                                               ; preds = %63
  store ptr @.str.603, ptr %2, align 8, !tbaa !5
  br label %133

73:                                               ; preds = %60
  %74 = getelementptr inbounds i8, ptr %29, i64 2
  store ptr %74, ptr %0, align 8, !tbaa !5
  %75 = ptrtoint ptr %61 to i64
  %76 = ptrtoint ptr %74 to i64
  %77 = sub i64 %75, %76
  store i64 %77, ptr %8, align 8, !tbaa !9
  %78 = icmp eq ptr %61, %74
  br i1 %78, label %79, label %84

79:                                               ; preds = %73
  br i1 %4, label %80, label %82

80:                                               ; preds = %79
  %81 = getelementptr inbounds i8, ptr %29, i64 3
  store ptr %81, ptr %0, align 8, !tbaa !5
  store ptr @.str.596, ptr %2, align 8, !tbaa !5
  br label %133

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, ptr %61, i64 1
  store ptr %83, ptr %0, align 8, !tbaa !5
  store i64 0, ptr %1, align 8, !tbaa !9
  br label %125

84:                                               ; preds = %73
  %85 = select i1 %5, i32 9, i32 1
  %86 = or i32 %35, %85
  store i32 %86, ptr %9, align 4, !tbaa !73
  %87 = call i64 @Perl_grok_hex(ptr noundef nonnull %74, ptr noundef nonnull %8, ptr noundef nonnull %9, ptr noundef null) #15
  store i64 %87, ptr %1, align 8, !tbaa !9
  br i1 %4, label %88, label %105

88:                                               ; preds = %84
  %89 = load i64, ptr %8, align 8, !tbaa !9
  %90 = load ptr, ptr %0, align 8, !tbaa !5
  %91 = ptrtoint ptr %90 to i64
  %92 = sub i64 %75, %91
  %93 = icmp eq i64 %89, %92
  br i1 %93, label %105, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds i8, ptr %90, i64 %89
  store ptr %95, ptr %0, align 8, !tbaa !5
  br i1 %6, label %96, label %102

96:                                               ; preds = %94
  %97 = load i8, ptr %95, align 1, !tbaa !17
  %98 = zext i8 %97 to i64
  %99 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %98
  %100 = load i8, ptr %99, align 1, !tbaa !17
  %101 = zext i8 %100 to i64
  br label %102

102:                                              ; preds = %94, %96
  %103 = phi i64 [ %101, %96 ], [ 1, %94 ]
  %104 = getelementptr inbounds i8, ptr %95, i64 %103
  store ptr %104, ptr %0, align 8, !tbaa !5
  store ptr @.str.601, ptr %2, align 8, !tbaa !5
  br label %133

105:                                              ; preds = %88, %84
  %106 = getelementptr inbounds i8, ptr %61, i64 1
  store ptr %106, ptr %0, align 8, !tbaa !5
  br label %108

107:                                              ; preds = %38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #15
  br label %108

108:                                              ; preds = %107, %105
  %109 = phi ptr [ %43, %107 ], [ %106, %105 ]
  %110 = phi i64 [ %40, %107 ], [ %87, %105 ]
  %111 = icmp ult i64 %110, 128
  br i1 %111, label %125, label %112

112:                                              ; preds = %108
  %113 = icmp ult i64 %110, 2048
  br i1 %113, label %125, label %114

114:                                              ; preds = %112
  %115 = icmp ult i64 %110, 65536
  br i1 %115, label %125, label %116

116:                                              ; preds = %114
  %117 = icmp ult i64 %110, 2097152
  br i1 %117, label %125, label %118

118:                                              ; preds = %116
  %119 = icmp ult i64 %110, 67108864
  br i1 %119, label %125, label %120

120:                                              ; preds = %118
  %121 = icmp ult i64 %110, 2147483648
  br i1 %121, label %125, label %122

122:                                              ; preds = %120
  %123 = icmp ult i64 %110, 68719476736
  %124 = select i1 %123, i64 7, i64 13
  br label %125

125:                                              ; preds = %82, %112, %116, %122, %120, %118, %114, %108
  %126 = phi ptr [ %109, %108 ], [ %109, %112 ], [ %109, %114 ], [ %109, %116 ], [ %109, %118 ], [ %109, %122 ], [ %109, %120 ], [ %83, %82 ]
  %127 = phi i64 [ 1, %108 ], [ 2, %112 ], [ 3, %114 ], [ 4, %116 ], [ 5, %118 ], [ %124, %122 ], [ 6, %120 ], [ 1, %82 ]
  %128 = ptrtoint ptr %126 to i64
  %129 = ptrtoint ptr %12 to i64
  %130 = sub i64 %128, %129
  %131 = icmp slt i64 %127, %130
  br i1 %131, label %133, label %132

132:                                              ; preds = %125
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.589, ptr noundef nonnull @.str.599, i32 noundef 313) #15
  br label %133

133:                                              ; preds = %58, %132, %125, %102, %80, %72
  %134 = phi i1 [ false, %58 ], [ false, %80 ], [ false, %102 ], [ false, %72 ], [ true, %125 ], [ true, %132 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #15
  ret i1 %134
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc signext i8 @S_grok_bslash_c(i8 noundef signext %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca [3 x i8], align 1
  %4 = zext i8 %0 to i64
  %5 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %4
  %6 = load i32, ptr %5, align 4, !tbaa !73
  %7 = and i32 %6, 16448
  %8 = icmp eq i32 %7, 16448
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.34, ptr noundef nonnull @.str.604) #15
  br label %25

10:                                               ; preds = %2
  %11 = icmp eq i8 %0, 123
  br i1 %11, label %12, label %25

12:                                               ; preds = %10
  %13 = load i32, ptr getelementptr inbounds ([0 x i32], ptr @PL_charclass, i64 0, i64 123), align 4, !tbaa !73
  %14 = and i32 %13, 16392
  %15 = icmp eq i32 %14, 16392
  %16 = select i1 %15, i8 27, i8 59
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %17
  %19 = load i32, ptr %18, align 4, !tbaa !73
  %20 = and i32 %19, 16448
  %21 = icmp eq i32 %20, 16448
  br i1 %21, label %22, label %24

22:                                               ; preds = %12
  %23 = zext i8 %16 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.605, i32 noundef %23) #15
  br label %25

24:                                               ; preds = %12
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.606) #15
  br label %25

25:                                               ; preds = %22, %24, %10, %9
  %26 = and i32 %6, 16392
  %27 = icmp eq i32 %26, 16392
  %28 = add i8 %0, -32
  %29 = select i1 %27, i8 %28, i8 %0
  %30 = xor i8 %29, 64
  br i1 %1, label %31, label %49

31:                                               ; preds = %25
  %32 = zext i8 %30 to i64
  %33 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %32
  %34 = load i32, ptr %33, align 4, !tbaa !73
  %35 = and i32 %34, 16448
  %36 = icmp eq i32 %35, 16448
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %3) #15
  %38 = and i32 %34, 16385
  %39 = icmp eq i32 %38, 16385
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  store i8 92, ptr %3, align 1, !tbaa !17
  br label %41

41:                                               ; preds = %40, %37
  %42 = phi i8 [ 0, %37 ], [ 1, %40 ]
  %43 = add nuw nsw i8 %42, 1
  %44 = zext i8 %42 to i64
  %45 = getelementptr inbounds [3 x i8], ptr %3, i64 0, i64 %44
  store i8 %30, ptr %45, align 1, !tbaa !17
  %46 = zext i8 %43 to i64
  %47 = getelementptr inbounds [3 x i8], ptr %3, i64 0, i64 %46
  store i8 0, ptr %47, align 1, !tbaa !17
  %48 = sext i8 %0 to i32
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 28, ptr noundef nonnull @.str.607, i32 noundef %48, ptr noundef nonnull %3) #15
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %3) #15
  br label %49

49:                                               ; preds = %41, %31, %25
  ret i8 %30
}

declare i64 @Perl_grok_oct(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

declare void @Perl_warner(i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_form_short_octal_warning(ptr noundef %0, i64 noundef %1) unnamed_addr #0 {
  %3 = sub i64 0, %1
  %4 = getelementptr inbounds i8, ptr %0, i64 %3
  %5 = icmp eq ptr %0, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.589, ptr noundef nonnull @.str.374, i32 noundef 329) #15
  br label %7

7:                                                ; preds = %2, %6
  %8 = load i8, ptr %0, align 1, !tbaa !17
  %9 = and i8 %8, -2
  %10 = icmp eq i8 %9, 56
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.589, ptr noundef nonnull @.str.608, i32 noundef 331) #15
  br label %12

12:                                               ; preds = %7, %11
  br label %13

13:                                               ; preds = %12, %13
  %14 = phi ptr [ %17, %13 ], [ %4, %12 ]
  %15 = load i8, ptr %14, align 1, !tbaa !17
  %16 = icmp eq i8 %15, 48
  %17 = getelementptr inbounds i8, ptr %14, i64 1
  br i1 %16, label %13, label %18, !llvm.loop !423

18:                                               ; preds = %13
  %19 = icmp eq ptr %14, %0
  %20 = sext i1 %19 to i64
  %21 = getelementptr inbounds i8, ptr %14, i64 %20
  %22 = trunc i64 %1 to i32
  %23 = add i32 %22, 2
  %24 = getelementptr inbounds i8, ptr %4, i64 -1
  %25 = ptrtoint ptr %0 to i64
  %26 = ptrtoint ptr %21 to i64
  %27 = sub i64 %25, %26
  %28 = trunc i64 %27 to i32
  %29 = load i8, ptr %0, align 1, !tbaa !17
  %30 = sext i8 %29 to i32
  %31 = tail call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.609, i32 noundef %23, ptr noundef nonnull %24, i32 noundef %28, ptr noundef nonnull %21, i32 noundef %30) #15
  ret ptr %31
}

declare i64 @Perl__to_uni_fold_flags(i64 noundef, ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i1 @S__invlist_contains_cp(ptr noundef %0, i64 noundef %1) unnamed_addr #0 {
  %3 = tail call i64 @Perl__invlist_search(ptr noundef %0, i64 noundef %1) #15
  %4 = icmp eq ptr %0, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.232, ptr noundef nonnull @.str.229, i32 noundef 54) #15
  br label %6

6:                                                ; preds = %2, %5
  %7 = and i64 %3, -9223372036854775807
  %8 = icmp eq i64 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_alloc_maybe_populate_EXACT(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, i64 noundef %4, i1 noundef zeroext %5) unnamed_addr #0 {
  %7 = alloca i64, align 8
  %8 = alloca [14 x i8], align 1
  store i64 %3, ptr %7, align 8, !tbaa !9
  %9 = icmp eq i64 %3, 0
  call void @llvm.lifetime.start.p0(i64 14, ptr nonnull %8) #15
  %10 = icmp eq ptr %0, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.223, i32 noundef 11438) #15
  br label %12

12:                                               ; preds = %6, %11
  %13 = icmp eq ptr %1, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %12
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.303, i32 noundef 11438) #15
  br label %15

15:                                               ; preds = %12, %14
  %16 = icmp eq ptr %2, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.384, i32 noundef 11438) #15
  br label %18

18:                                               ; preds = %15, %17
  br i1 %5, label %19, label %24

19:                                               ; preds = %18
  %20 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %21 = load ptr, ptr %20, align 8, !tbaa !112
  %22 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %23 = icmp ne ptr %21, %22
  br label %24

24:                                               ; preds = %19, %18
  %25 = phi i1 [ false, %18 ], [ %23, %19 ]
  br i1 %9, label %26, label %178

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %28 = load i32, ptr %27, align 8, !tbaa !50
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %140, label %30

30:                                               ; preds = %26
  %31 = icmp ult i64 %4, 128
  %32 = load i32, ptr %0, align 8, !tbaa !66
  br i1 %31, label %33, label %57

33:                                               ; preds = %30
  %34 = and i32 %32, 896
  %35 = icmp eq i32 %34, 128
  %36 = and i32 %32, 4
  %37 = icmp eq i32 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = trunc i64 %4 to i8
  store i8 %40, ptr %8, align 1, !tbaa !17
  br label %56

41:                                               ; preds = %33
  %42 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %4
  %43 = load i32, ptr %42, align 4, !tbaa !73
  %44 = and i32 %43, 16400
  %45 = icmp eq i32 %44, 16400
  %46 = trunc i64 %4 to i8
  %47 = add nuw i8 %46, 32
  %48 = select i1 %45, i8 %47, i8 %46
  store i8 %48, ptr %8, align 1, !tbaa !17
  br i1 %25, label %49, label %56

49:                                               ; preds = %41
  %50 = getelementptr inbounds [0 x i8], ptr @PL_fold, i64 0, i64 %4
  %51 = load i8, ptr %50, align 1, !tbaa !17
  %52 = zext i8 %51 to i64
  %53 = icmp eq i64 %52, %4
  br i1 %53, label %54, label %56

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct.regnode, ptr %1, i64 0, i32 1
  store i8 31, ptr %55, align 1, !tbaa !141
  br label %56

56:                                               ; preds = %41, %49, %54, %39
  store i64 1, ptr %7, align 8, !tbaa !9
  br label %178

57:                                               ; preds = %30
  %58 = and i32 %32, 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %123, label %60

60:                                               ; preds = %57
  %61 = lshr i32 %32, 7
  %62 = and i32 %61, 7
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %108

64:                                               ; preds = %60
  %65 = icmp ult i64 %4, 256
  %66 = icmp eq i64 %4, 304
  %67 = or i1 %65, %66
  br i1 %67, label %125, label %68

68:                                               ; preds = %64
  %69 = icmp ugt i64 %4, 304
  br i1 %69, label %70, label %108

70:                                               ; preds = %68
  %71 = icmp eq i64 %4, 329
  br i1 %71, label %125, label %72

72:                                               ; preds = %70
  %73 = icmp ugt i64 %4, 329
  br i1 %73, label %74, label %108

74:                                               ; preds = %72
  %75 = icmp eq i64 %4, 376
  br i1 %75, label %125, label %76

76:                                               ; preds = %74
  %77 = icmp ugt i64 %4, 376
  br i1 %77, label %78, label %108

78:                                               ; preds = %76
  %79 = icmp eq i64 %4, 383
  br i1 %79, label %125, label %80

80:                                               ; preds = %78
  %81 = icmp ugt i64 %4, 383
  br i1 %81, label %82, label %108

82:                                               ; preds = %80
  %83 = icmp eq i64 %4, 496
  br i1 %83, label %125, label %84

84:                                               ; preds = %82
  %85 = icmp ugt i64 %4, 496
  br i1 %85, label %86, label %108

86:                                               ; preds = %84
  %87 = icmp eq i64 %4, 924
  br i1 %87, label %125, label %88

88:                                               ; preds = %86
  %89 = icmp ugt i64 %4, 924
  br i1 %89, label %90, label %108

90:                                               ; preds = %88
  %91 = icmp eq i64 %4, 956
  br i1 %91, label %125, label %92

92:                                               ; preds = %90
  %93 = icmp ugt i64 %4, 956
  br i1 %93, label %94, label %108

94:                                               ; preds = %92
  %95 = add i64 %4, -7830
  %96 = icmp ult i64 %95, 5
  br i1 %96, label %133, label %97

97:                                               ; preds = %94
  %98 = icmp ugt i64 %4, 7834
  br i1 %98, label %99, label %108

99:                                               ; preds = %97
  %100 = icmp eq i64 %4, 7838
  br i1 %100, label %133, label %101

101:                                              ; preds = %99
  %102 = icmp ugt i64 %4, 7838
  br i1 %102, label %103, label %108

103:                                              ; preds = %101
  %104 = icmp eq i64 %4, 8490
  br i1 %104, label %133, label %105

105:                                              ; preds = %103
  %106 = icmp ugt i64 %4, 8490
  br i1 %106, label %107, label %108

107:                                              ; preds = %105
  switch i64 %4, label %108 [
    i64 64262, label %133
    i64 64261, label %133
    i64 64260, label %133
    i64 64259, label %133
    i64 64258, label %133
    i64 64257, label %133
    i64 64256, label %133
    i64 8491, label %133
  ]

108:                                              ; preds = %107, %105, %101, %97, %92, %88, %84, %80, %76, %72, %68, %60
  %109 = icmp eq i32 %62, 4
  %110 = select i1 %109, i8 6, i8 2
  %111 = call i64 @Perl__to_uni_fold_flags(i64 noundef %4, ptr noundef nonnull %8, ptr noundef nonnull %7, i8 noundef zeroext %110) #15
  %112 = icmp eq i64 %111, %4
  %113 = select i1 %25, i1 %112, i1 false
  br i1 %113, label %114, label %178

114:                                              ; preds = %108
  %115 = load ptr, ptr @PL_utf8_foldable, align 8, !tbaa !5
  %116 = call fastcc zeroext i1 @S__invlist_contains_cp(ptr noundef %115, i64 noundef %4)
  br i1 %116, label %178, label %117

117:                                              ; preds = %114
  %118 = load i32, ptr %0, align 8, !tbaa !66
  %119 = and i32 %118, 896
  %120 = icmp eq i32 %119, 128
  %121 = select i1 %120, i8 32, i8 31
  %122 = getelementptr inbounds %struct.regnode, ptr %1, i64 0, i32 1
  store i8 %121, ptr %122, align 1, !tbaa !141
  br label %178

123:                                              ; preds = %57
  %124 = icmp ult i64 %4, 2048
  br i1 %124, label %125, label %133

125:                                              ; preds = %64, %70, %74, %78, %82, %86, %90, %123
  %126 = lshr i64 %4, 6
  %127 = trunc i64 %126 to i8
  %128 = or i8 %127, -64
  store i8 %128, ptr %8, align 1, !tbaa !17
  %129 = trunc i64 %4 to i8
  %130 = and i8 %129, 63
  %131 = or i8 %130, -128
  %132 = getelementptr inbounds i8, ptr %8, i64 1
  store i8 %131, ptr %132, align 1, !tbaa !17
  store i64 2, ptr %7, align 8, !tbaa !9
  br label %178

133:                                              ; preds = %99, %103, %94, %107, %107, %107, %107, %107, %107, %107, %107, %123
  %134 = call ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef nonnull %8, i64 noundef %4, i64 noundef 0) #15
  %135 = load i8, ptr %8, align 1, !tbaa !17
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %136
  %138 = load i8, ptr %137, align 1, !tbaa !17
  %139 = zext i8 %138 to i64
  store i64 %139, ptr %7, align 8, !tbaa !9
  br label %178

140:                                              ; preds = %26
  %141 = load i32, ptr %0, align 8, !tbaa !66
  %142 = and i32 %141, 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %146

144:                                              ; preds = %140
  %145 = trunc i64 %4 to i8
  store i8 %145, ptr %8, align 1, !tbaa !17
  store i64 1, ptr %7, align 8, !tbaa !9
  br label %178

146:                                              ; preds = %140
  %147 = icmp eq i64 %4, 223
  br i1 %147, label %172, label %148

148:                                              ; preds = %146
  %149 = trunc i64 %4 to i8
  store i8 %149, ptr %8, align 1, !tbaa !17
  store i64 1, ptr %7, align 8, !tbaa !9
  br i1 %25, label %150, label %178

150:                                              ; preds = %148
  %151 = lshr i32 %141, 7
  %152 = and i32 %151, 7
  %153 = icmp eq i32 %152, 1
  br i1 %153, label %178, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds [0 x i8], ptr @PL_fold_latin1, i64 0, i64 %4
  %156 = load i8, ptr %155, align 1, !tbaa !17
  %157 = zext i8 %156 to i64
  %158 = icmp eq i64 %157, %4
  %159 = icmp ult i64 %4, 256
  %160 = and i1 %159, %158
  br i1 %160, label %161, label %178

161:                                              ; preds = %154
  %162 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %4
  %163 = load i32, ptr %162, align 4, !tbaa !73
  %164 = and i32 %163, 262144
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %170, label %166

166:                                              ; preds = %161
  %167 = icmp ult i64 %4, 128
  %168 = icmp eq i32 %152, 4
  %169 = and i1 %167, %168
  br i1 %169, label %170, label %178

170:                                              ; preds = %166, %161
  %171 = getelementptr inbounds %struct.regnode, ptr %1, i64 0, i32 1
  store i8 31, ptr %171, align 1, !tbaa !141
  br label %178

172:                                              ; preds = %146
  %173 = lshr i32 %141, 7
  %174 = and i32 %173, 7
  switch i32 %174, label %175 [
    i32 4, label %177
    i32 1, label %177
    i32 0, label %177
  ]

175:                                              ; preds = %172
  store i8 115, ptr %8, align 1, !tbaa !17
  %176 = getelementptr inbounds i8, ptr %8, i64 1
  store i8 115, ptr %176, align 1, !tbaa !17
  store i64 2, ptr %7, align 8, !tbaa !9
  br label %178

177:                                              ; preds = %172, %172, %172
  store i8 -33, ptr %8, align 1, !tbaa !17
  store i64 1, ptr %7, align 8, !tbaa !9
  br label %178

178:                                              ; preds = %108, %114, %117, %133, %125, %56, %170, %166, %154, %150, %148, %177, %175, %144, %24
  %179 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 12
  %180 = load ptr, ptr %179, align 8, !tbaa !112
  %181 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 13
  %182 = icmp eq ptr %180, %181
  %183 = load i64, ptr %7, align 8, !tbaa !9
  %184 = add i64 %183, 3
  %185 = lshr i64 %184, 2
  br i1 %182, label %186, label %190

186:                                              ; preds = %178
  %187 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 17
  %188 = load i64, ptr %187, align 8, !tbaa !111
  %189 = add i64 %185, %188
  store i64 %189, ptr %187, align 8, !tbaa !111
  br label %195

190:                                              ; preds = %178
  %191 = getelementptr inbounds %struct.regnode, ptr %180, i64 %185
  store ptr %191, ptr %179, align 8, !tbaa !112
  %192 = trunc i64 %183 to i8
  store i8 %192, ptr %1, align 2, !tbaa !205
  br i1 %9, label %193, label %195

193:                                              ; preds = %190
  %194 = getelementptr inbounds %struct.regnode_string, ptr %1, i64 0, i32 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 2 %194, ptr nonnull align 1 %8, i64 %183, i1 false)
  br label %195

195:                                              ; preds = %190, %193, %186
  %196 = load i32, ptr %2, align 4, !tbaa !73
  %197 = or i32 %196, 1
  store i32 %197, ptr %2, align 4, !tbaa !73
  %198 = icmp eq i64 %183, 1
  br i1 %198, label %221, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 25
  %201 = load i32, ptr %200, align 8, !tbaa !50
  %202 = icmp eq i32 %201, 0
  %203 = icmp ult i64 %4, 128
  %204 = or i1 %203, %202
  br i1 %204, label %229, label %205

205:                                              ; preds = %199
  %206 = icmp ult i64 %4, 2048
  br i1 %206, label %218, label %207

207:                                              ; preds = %205
  %208 = icmp ult i64 %4, 65536
  br i1 %208, label %218, label %209

209:                                              ; preds = %207
  %210 = icmp ult i64 %4, 2097152
  br i1 %210, label %218, label %211

211:                                              ; preds = %209
  %212 = icmp ult i64 %4, 67108864
  br i1 %212, label %218, label %213

213:                                              ; preds = %211
  %214 = icmp ult i64 %4, 2147483648
  br i1 %214, label %218, label %215

215:                                              ; preds = %213
  %216 = icmp ult i64 %4, 68719476736
  %217 = select i1 %216, i64 7, i64 13
  br label %218

218:                                              ; preds = %205, %209, %215, %213, %211, %207
  %219 = phi i64 [ 2, %205 ], [ 3, %207 ], [ 4, %209 ], [ 5, %211 ], [ %217, %215 ], [ 6, %213 ]
  %220 = icmp eq i64 %183, %219
  br i1 %220, label %221, label %229

221:                                              ; preds = %218, %195
  %222 = icmp eq i64 %4, 223
  br i1 %222, label %223, label %227

223:                                              ; preds = %221
  %224 = load i32, ptr %0, align 8, !tbaa !66
  %225 = and i32 %224, 900
  %226 = icmp eq i32 %225, 4
  br i1 %226, label %229, label %227

227:                                              ; preds = %223, %221
  %228 = or i32 %196, 3
  store i32 %228, ptr %2, align 4, !tbaa !73
  br label %229

229:                                              ; preds = %223, %199, %227, %218
  %230 = load ptr, ptr %179, align 8, !tbaa !112
  %231 = icmp eq ptr %230, %181
  br i1 %231, label %238, label %232

232:                                              ; preds = %229
  %233 = getelementptr inbounds %struct.regnode, ptr %1, i64 0, i32 1
  %234 = load i8, ptr %233, align 1, !tbaa !141
  %235 = icmp eq i8 %234, 34
  br i1 %235, label %236, label %238

236:                                              ; preds = %232
  %237 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 34
  store i32 1, ptr %237, align 8, !tbaa !52
  br label %238

238:                                              ; preds = %236, %232, %229
  call void @llvm.lifetime.end.p0(i64 14, ptr nonnull %8) #15
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_add_multi_match(ptr noundef %0, ptr noundef %1, i64 noundef %2) unnamed_addr #0 {
  %4 = icmp eq ptr %1, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.571, i32 noundef 14101) #15
  br label %6

6:                                                ; preds = %3, %5
  %7 = icmp eq ptr %0, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  %9 = tail call ptr @Perl_newSV_type(i32 noundef 11) #15
  br label %10

10:                                               ; preds = %8, %6
  %11 = phi ptr [ %0, %6 ], [ %9, %8 ]
  %12 = tail call zeroext i1 @Perl_av_exists(ptr noundef %11, i64 noundef %2) #15
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  %14 = tail call ptr @Perl_av_fetch(ptr noundef %11, i64 noundef %2, i32 noundef 0) #15
  %15 = load ptr, ptr %14, align 8, !tbaa !5
  br label %19

16:                                               ; preds = %10
  %17 = tail call ptr @Perl_newSV_type(i32 noundef 11) #15
  %18 = tail call ptr @Perl_av_store(ptr noundef %11, i64 noundef %2, ptr noundef %17) #15
  br label %19

19:                                               ; preds = %16, %13
  %20 = phi ptr [ %15, %13 ], [ %17, %16 ]
  tail call void @Perl_av_push(ptr noundef %20, ptr noundef %1) #15
  ret ptr %11
}

declare ptr @Perl_savepv(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_form(ptr noundef, ...) local_unnamed_addr #2

declare ptr @Perl__core_swash_init(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

declare ptr @Perl_instr(ptr noundef, ptr noundef) local_unnamed_addr #2

declare ptr @Perl_savepvn(ptr noundef, i32 noundef) local_unnamed_addr #2

declare i64 @Perl__invlist_search(ptr noundef, i64 noundef) local_unnamed_addr #2

declare zeroext i1 @Perl_av_exists(ptr noundef, i64 noundef) local_unnamed_addr #2

declare ptr @Perl_av_pop(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strcspn(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #5

declare i64 @Perl_grok_hex(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

declare ptr @Perl_sv_recode_to_utf8(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i1 @S_could_it_be_a_POSIX_class(ptr nocapture noundef readonly %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 8
  %3 = load ptr, ptr %2, align 8, !tbaa !105
  %4 = ptrtoint ptr %3 to i64
  %5 = getelementptr inbounds i8, ptr %3, i64 1
  %6 = load i8, ptr %5, align 1, !tbaa !17
  %7 = load i8, ptr %3, align 1, !tbaa !17
  %8 = icmp eq i8 %7, 91
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.630, i32 noundef 13239) #15
  br label %10

10:                                               ; preds = %1, %9
  switch i8 %6, label %59 [
    i8 61, label %11
    i8 58, label %11
    i8 46, label %11
  ]

11:                                               ; preds = %10, %10, %10
  %12 = getelementptr inbounds i8, ptr %3, i64 2
  %13 = getelementptr inbounds %struct.RExC_state_t, ptr %0, i64 0, i32 7
  %14 = load ptr, ptr %13, align 8, !tbaa !107
  %15 = ptrtoint ptr %14 to i64
  %16 = icmp ult ptr %12, %14
  br i1 %16, label %17, label %59

17:                                               ; preds = %11
  %18 = sub i64 %15, %4
  %19 = getelementptr i8, ptr %3, i64 %18
  br label %20

20:                                               ; preds = %17, %28
  %21 = phi ptr [ %29, %28 ], [ %12, %17 ]
  %22 = load i8, ptr %21, align 1, !tbaa !17
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %23
  %25 = load i32, ptr %24, align 4, !tbaa !73
  %26 = and i32 %25, 16385
  %27 = icmp eq i32 %26, 16385
  br i1 %27, label %28, label %31

28:                                               ; preds = %20
  %29 = getelementptr inbounds i8, ptr %21, i64 1
  %30 = icmp eq ptr %29, %19
  br i1 %30, label %59, label %20, !llvm.loop !424

31:                                               ; preds = %20
  %32 = load ptr, ptr %2, align 8, !tbaa !105
  %33 = ptrtoint ptr %21 to i64
  %34 = ptrtoint ptr %32 to i64
  %35 = sub i64 %33, %34
  %36 = icmp sgt i64 %35, 2
  br i1 %36, label %37, label %47

37:                                               ; preds = %31
  %38 = icmp eq i8 %22, %6
  br i1 %38, label %59, label %39

39:                                               ; preds = %37
  %40 = icmp eq i8 %22, 93
  br i1 %40, label %41, label %47

41:                                               ; preds = %39
  %42 = getelementptr inbounds i8, ptr %21, i64 1
  %43 = icmp ult ptr %42, %14
  br i1 %43, label %44, label %47

44:                                               ; preds = %41
  %45 = load i8, ptr %42, align 1, !tbaa !17
  %46 = icmp eq i8 %45, 41
  br i1 %46, label %47, label %59

47:                                               ; preds = %44, %41, %39, %31
  %48 = sub i64 %15, %34
  %49 = tail call ptr @memchr(ptr noundef %32, i32 noundef 93, i64 noundef %48) #18
  %50 = icmp ne ptr %49, null
  %51 = ptrtoint ptr %49 to i64
  %52 = sub i64 %51, %34
  %53 = icmp sgt i64 %52, 2
  %54 = and i1 %50, %53
  br i1 %54, label %55, label %59

55:                                               ; preds = %47
  %56 = getelementptr inbounds i8, ptr %49, i64 -1
  %57 = load i8, ptr %56, align 1, !tbaa !17
  %58 = icmp eq i8 %6, %57
  br label %59

59:                                               ; preds = %28, %11, %47, %55, %37, %44, %10
  %60 = phi i1 [ false, %10 ], [ true, %44 ], [ true, %37 ], [ false, %47 ], [ %58, %55 ], [ false, %11 ], [ false, %28 ]
  ret i1 %60
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @memchr(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_put_code_point(ptr noundef %0, i64 noundef %1) unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = icmp eq ptr %0, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, ptr noundef nonnull @.str.92, i32 noundef 17792) #15
  br label %6

6:                                                ; preds = %2, %5
  %7 = icmp ugt i64 %1, 255
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %0, ptr noundef nonnull @.str.663, i64 noundef %1) #15
  br label %29

9:                                                ; preds = %6
  %10 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1
  %11 = load i32, ptr %10, align 4, !tbaa !73
  %12 = and i32 %11, 16448
  %13 = icmp eq i32 %12, 16448
  %14 = trunc i64 %1 to i8
  br i1 %13, label %15, label %18

15:                                               ; preds = %9
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #15
  store i8 %14, ptr %3, align 1, !tbaa !17
  switch i64 %1, label %17 [
    i64 94, label %16
    i64 93, label %16
    i64 92, label %16
    i64 45, label %16
  ]

16:                                               ; preds = %15, %15, %15, %15
  tail call void @Perl_sv_catpvn_flags(ptr noundef %0, ptr noundef nonnull @.str.664, i64 noundef 1, i32 noundef 2) #15
  br label %17

17:                                               ; preds = %15, %16
  call void @Perl_sv_catpvn_flags(ptr noundef %0, ptr noundef nonnull %3, i64 noundef 1, i32 noundef 2) #15
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #15
  br label %29

18:                                               ; preds = %9
  switch i8 %14, label %27 [
    i8 7, label %25
    i8 8, label %19
    i8 27, label %20
    i8 12, label %21
    i8 10, label %22
    i8 13, label %23
    i8 9, label %24
  ]

19:                                               ; preds = %18
  br label %25

20:                                               ; preds = %18
  br label %25

21:                                               ; preds = %18
  br label %25

22:                                               ; preds = %18
  br label %25

23:                                               ; preds = %18
  br label %25

24:                                               ; preds = %18
  br label %25

25:                                               ; preds = %24, %23, %22, %21, %20, %19, %18
  %26 = phi ptr [ @.str.572, %18 ], [ @.str.573, %19 ], [ @.str.574, %20 ], [ @.str.575, %21 ], [ @.str.576, %22 ], [ @.str.577, %23 ], [ @.str.578, %24 ]
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %0, ptr noundef nonnull @.str.34, ptr noundef nonnull %26) #15
  br label %29

27:                                               ; preds = %18
  %28 = trunc i64 %1 to i32
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %0, ptr noundef nonnull @.str.665, i32 noundef %28) #15
  br label %29

29:                                               ; preds = %25, %27, %17, %8
  ret void
}

; Function Attrs: nofree nounwind willreturn memory(argmem: read)
declare i32 @bcmp(ptr nocapture, ptr nocapture, i64) local_unnamed_addr #11

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umin.i64(i64, i64) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i8 @llvm.umin.i8(i8, i8) #12

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #13

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.umax.i16(i16, i16) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.umin.i16(i16, i16) #12

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare ptr @llvm.load.relative.i64(ptr, i64) #14

attributes #0 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #3 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #4 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { mustprogress nofree nounwind willreturn memory(argmem: read) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #6 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #7 = { mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #8 = { mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #9 = { mustprogress nounwind willreturn allockind("realloc") allocsize(1) memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #10 = { mustprogress nocallback nofree nosync nounwind willreturn }
attributes #11 = { nofree nounwind willreturn memory(argmem: read) }
attributes #12 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #13 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #14 = { nocallback nofree nosync nounwind willreturn memory(argmem: read) }
attributes #15 = { nounwind }
attributes #16 = { nounwind allocsize(0,1) }
attributes #17 = { nounwind allocsize(0) }
attributes #18 = { nounwind willreturn memory(read) }
attributes #19 = { nounwind allocsize(1) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!10, !10, i64 0}
!10 = !{!"long", !7, i64 0}
!11 = !{!12, !12, i64 0}
!12 = !{!"_Bool", !7, i64 0}
!13 = !{!14, !15, i64 12}
!14 = !{!"sv", !6, i64 0, !15, i64 8, !15, i64 12, !7, i64 16}
!15 = !{!"int", !7, i64 0}
!16 = !{!14, !6, i64 0}
!17 = !{!7, !7, i64 0}
!18 = !{i8 0, i8 2}
!19 = !{}
!20 = !{!21, !6, i64 288}
!21 = !{!"RExC_state_t", !15, i64 0, !15, i64 4, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !10, i64 64, !6, i64 72, !6, i64 80, !6, i64 88, !22, i64 96, !15, i64 152, !15, i64 156, !15, i64 160, !10, i64 168, !15, i64 176, !15, i64 180, !15, i64 184, !15, i64 188, !6, i64 192, !6, i64 200, !6, i64 208, !15, i64 216, !15, i64 220, !15, i64 224, !6, i64 232, !6, i64 240, !15, i64 248, !6, i64 256, !15, i64 264, !15, i64 268, !15, i64 272, !15, i64 276, !15, i64 280, !15, i64 284, !6, i64 288, !15, i64 296, !15, i64 300, !10, i64 304, !6, i64 312, !6, i64 320, !15, i64 328, !15, i64 332, !6, i64 336, !6, i64 344, !15, i64 352, !6, i64 360, !15, i64 368, !6, i64 376, !6, i64 384}
!22 = !{!"regnode_ssc", !7, i64 0, !7, i64 1, !23, i64 2, !15, i64 4, !7, i64 8, !15, i64 40, !6, i64 48}
!23 = !{!"short", !7, i64 0}
!24 = !{!21, !15, i64 296}
!25 = !{!26, !10, i64 24}
!26 = !{!"op", !6, i64 0, !6, i64 8, !6, i64 16, !10, i64 24, !15, i64 32, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !7, i64 34, !7, i64 35}
!27 = !{!26, !7, i64 34}
!28 = distinct !{!28, !29}
!29 = !{!"llvm.loop.mustprogress"}
!30 = distinct !{!30, !29}
!31 = !{!32, !6, i64 40}
!32 = !{!"svop", !6, i64 0, !6, i64 8, !6, i64 16, !10, i64 24, !15, i64 32, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !7, i64 34, !7, i64 35, !6, i64 40}
!33 = distinct !{!33, !29}
!34 = !{!35, !6, i64 40}
!35 = !{!"listop", !6, i64 0, !6, i64 8, !6, i64 16, !10, i64 24, !15, i64 32, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !7, i64 34, !7, i64 35, !6, i64 40, !6, i64 48}
!36 = !{!26, !6, i64 8}
!37 = !{!14, !15, i64 8}
!38 = !{!39, !10, i64 16}
!39 = !{!"xpv", !6, i64 0, !7, i64 8, !10, i64 16, !7, i64 24}
!40 = !{!41, !6, i64 88}
!41 = !{!"regexp_engine", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72, !6, i64 80, !6, i64 88}
!42 = !{!43, !15, i64 56}
!43 = !{!"cop", !6, i64 0, !6, i64 8, !6, i64 16, !10, i64 24, !15, i64 32, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !7, i64 34, !7, i64 35, !15, i64 36, !6, i64 40, !6, i64 48, !15, i64 56, !15, i64 60, !6, i64 64, !6, i64 72}
!44 = !{!45, !6, i64 0}
!45 = !{!"xpvmg", !6, i64 0, !7, i64 8, !10, i64 16, !7, i64 24, !7, i64 32, !7, i64 40}
!46 = !{!47, !15, i64 12}
!47 = !{!"hv", !6, i64 0, !15, i64 8, !15, i64 12, !7, i64 16}
!48 = !{!41, !6, i64 0}
!49 = !{!21, !15, i64 220}
!50 = !{!21, !15, i64 216}
!51 = !{!21, !15, i64 224}
!52 = !{!21, !15, i64 272}
!53 = !{!21, !15, i64 276}
!54 = !{!21, !15, i64 332}
!55 = !{!21, !6, i64 336}
!56 = !{!21, !6, i64 376}
!57 = !{!21, !6, i64 384}
!58 = !{!59, !10, i64 0}
!59 = !{!"reg_code_block", !10, i64 0, !10, i64 8, !6, i64 16, !6, i64 24}
!60 = !{!59, !10, i64 8}
!61 = distinct !{!61, !29}
!62 = !{!63, !15, i64 12}
!63 = !{!"p5rx", !6, i64 0, !15, i64 8, !15, i64 12, !7, i64 16}
!64 = !{!63, !6, i64 0}
!65 = !{!21, !6, i64 8}
!66 = !{!21, !15, i64 0}
!67 = !{!21, !15, i64 4}
!68 = distinct !{!68, !29}
!69 = distinct !{!69, !70}
!70 = !{!"llvm.loop.unroll.disable"}
!71 = distinct !{!71, !29}
!72 = distinct !{!72, !29}
!73 = !{!15, !15, i64 0}
!74 = !{!75, !6, i64 24}
!75 = !{!"stackinfo", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !15, i64 32, !15, i64 36, !15, i64 40, !15, i64 44}
!76 = distinct !{!76, !29}
!77 = !{!75, !6, i64 16}
!78 = !{!75, !15, i64 40}
!79 = !{!75, !15, i64 32}
!80 = !{!75, !6, i64 0}
!81 = !{!82, !6, i64 0}
!82 = !{!"av", !6, i64 0, !15, i64 8, !15, i64 12, !7, i64 16}
!83 = !{!84, !10, i64 16}
!84 = !{!"xpvav", !6, i64 0, !7, i64 8, !10, i64 16, !10, i64 24, !6, i64 32}
!85 = !{!84, !10, i64 24}
!86 = !{!75, !15, i64 44}
!87 = !{!88, !6, i64 32}
!88 = !{!"regexp", !6, i64 0, !7, i64 8, !10, i64 16, !7, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !15, i64 56, !10, i64 64, !10, i64 72, !10, i64 80, !6, i64 88, !15, i64 96, !15, i64 100, !6, i64 104, !15, i64 112, !15, i64 116, !6, i64 120, !6, i64 128, !6, i64 136, !10, i64 144, !10, i64 152, !10, i64 160, !10, i64 168, !15, i64 176, !15, i64 176, !6, i64 184}
!89 = distinct !{!89, !29}
!90 = !{!88, !6, i64 104}
!91 = !{!92, !15, i64 40}
!92 = !{!"regexp_internal", !15, i64 0, !7, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !15, i64 40, !7, i64 44}
!93 = !{!92, !6, i64 32}
!94 = !{!59, !6, i64 16}
!95 = !{!59, !6, i64 24}
!96 = distinct !{!96, !29}
!97 = !{!21, !15, i64 156}
!98 = !{!21, !15, i64 160}
!99 = !{!21, !10, i64 304}
!100 = !{!21, !15, i64 268}
!101 = !{!21, !15, i64 188}
!102 = !{!21, !15, i64 184}
!103 = !{!21, !15, i64 280}
!104 = !{!21, !15, i64 284}
!105 = !{!21, !6, i64 56}
!106 = !{!21, !6, i64 40}
!107 = !{!21, !6, i64 48}
!108 = !{!21, !15, i64 152}
!109 = !{!21, !15, i64 176}
!110 = !{!21, !15, i64 180}
!111 = !{!21, !10, i64 168}
!112 = !{!21, !6, i64 88}
!113 = !{!21, !10, i64 64}
!114 = !{!21, !6, i64 360}
!115 = !{!21, !6, i64 256}
!116 = !{!21, !15, i64 264}
!117 = !{!21, !15, i64 300}
!118 = !{!21, !15, i64 352}
!119 = !{!21, !6, i64 344}
!120 = !{!121, !7, i64 129}
!121 = !{!"xpvio", !6, i64 0, !7, i64 8, !10, i64 16, !7, i64 24, !7, i64 32, !6, i64 40, !7, i64 48, !10, i64 56, !10, i64 64, !10, i64 72, !6, i64 80, !6, i64 88, !6, i64 96, !6, i64 104, !6, i64 112, !6, i64 120, !7, i64 128, !7, i64 129}
!122 = !{!21, !6, i64 16}
!123 = !{!88, !15, i64 56}
!124 = distinct !{!124, !29}
!125 = !{!88, !15, i64 100}
!126 = !{!88, !15, i64 96}
!127 = !{!21, !6, i64 192}
!128 = !{!21, !6, i64 200}
!129 = !{!21, !6, i64 24}
!130 = !{!21, !6, i64 32}
!131 = !{!21, !6, i64 72}
!132 = !{!21, !6, i64 80}
!133 = !{!88, !6, i64 88}
!134 = !{!21, !15, i64 248}
!135 = !{!21, !6, i64 240}
!136 = !{!88, !10, i64 64}
!137 = !{!21, !15, i64 368}
!138 = !{i64 0, i64 4, !73, i64 4, i64 4, !73, i64 8, i64 8, !5, i64 16, i64 8, !5, i64 24, i64 8, !5, i64 32, i64 8, !5, i64 40, i64 8, !5, i64 48, i64 8, !5, i64 56, i64 8, !5, i64 64, i64 8, !9, i64 72, i64 8, !5, i64 80, i64 8, !5, i64 88, i64 8, !5, i64 96, i64 1, !17, i64 97, i64 1, !17, i64 98, i64 2, !139, i64 100, i64 4, !73, i64 104, i64 32, !17, i64 136, i64 4, !73, i64 144, i64 8, !5, i64 152, i64 4, !73, i64 156, i64 4, !73, i64 160, i64 4, !73, i64 168, i64 8, !9, i64 176, i64 4, !73, i64 180, i64 4, !73, i64 184, i64 4, !73, i64 188, i64 4, !73, i64 192, i64 8, !5, i64 200, i64 8, !5, i64 208, i64 8, !5, i64 216, i64 4, !73, i64 220, i64 4, !73, i64 224, i64 4, !73, i64 232, i64 8, !5, i64 240, i64 8, !5, i64 248, i64 4, !73, i64 256, i64 8, !5, i64 264, i64 4, !73, i64 268, i64 4, !73, i64 272, i64 4, !73, i64 276, i64 4, !73, i64 280, i64 4, !73, i64 284, i64 4, !73, i64 288, i64 8, !5, i64 296, i64 4, !73, i64 300, i64 4, !73, i64 304, i64 8, !9, i64 312, i64 8, !5, i64 320, i64 8, !5, i64 328, i64 4, !73, i64 332, i64 4, !73, i64 336, i64 8, !5, i64 344, i64 8, !5, i64 352, i64 4, !73, i64 360, i64 8, !5, i64 368, i64 4, !73, i64 376, i64 8, !5, i64 384, i64 8, !5}
!139 = !{!23, !23, i64 0}
!140 = !{!92, !6, i64 16}
!141 = !{!142, !7, i64 1}
!142 = !{!"regnode", !7, i64 0, !7, i64 1, !23, i64 2}
!143 = !{!142, !7, i64 0}
!144 = !{!145, !23, i64 4}
!145 = !{!"regnode_2", !7, i64 0, !7, i64 1, !23, i64 2, !23, i64 4, !23, i64 6}
!146 = distinct !{!146, !29}
!147 = !{!92, !6, i64 24}
!148 = !{!149, !15, i64 4}
!149 = !{!"regnode_1", !7, i64 0, !7, i64 1, !23, i64 2, !15, i64 4}
!150 = !{!151, !10, i64 64}
!151 = !{!"_reg_trie_data", !15, i64 0, !15, i64 4, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !23, i64 56, !15, i64 60, !10, i64 64, !10, i64 72, !15, i64 80, !15, i64 84, !15, i64 88, !10, i64 96}
!152 = !{!151, !23, i64 56}
!153 = !{!151, !15, i64 84}
!154 = !{!151, !15, i64 4}
!155 = !{!151, !6, i64 16}
!156 = !{!157, !15, i64 0}
!157 = !{!"reg_data", !15, i64 0, !6, i64 8, !7, i64 16}
!158 = !{!157, !6, i64 8}
!159 = !{i64 0, i64 1, !17, i64 1, i64 1, !17, i64 2, i64 2, !139, i64 4, i64 4, !73, i64 8, i64 32, !17}
!160 = !{!161, !15, i64 4}
!161 = !{!"_reg_ac_data", !15, i64 0, !15, i64 4, !6, i64 8, !6, i64 16}
!162 = !{!161, !6, i64 16}
!163 = !{!161, !6, i64 8}
!164 = !{!161, !15, i64 0}
!165 = !{!151, !6, i64 24}
!166 = !{!167, !15, i64 4}
!167 = !{!"_reg_trie_trans", !15, i64 0, !15, i64 4}
!168 = !{!167, !15, i64 0}
!169 = distinct !{!169, !29}
!170 = !{!171, !23, i64 0}
!171 = !{!"_reg_trie_state", !23, i64 0, !7, i64 8}
!172 = distinct !{!172, !29}
!173 = distinct !{!173, !29}
!174 = distinct !{!174, !29}
!175 = distinct !{!175, !29}
!176 = !{!177, !6, i64 56}
!177 = !{!"scan_data_t", !10, i64 0, !10, i64 8, !6, i64 16, !10, i64 24, !10, i64 32, !10, i64 40, !6, i64 48, !6, i64 56, !10, i64 64, !6, i64 72, !15, i64 80, !6, i64 88, !10, i64 96, !10, i64 104, !6, i64 112, !10, i64 120, !15, i64 128, !15, i64 132, !6, i64 136, !6, i64 144}
!178 = !{!177, !6, i64 88}
!179 = !{!177, !6, i64 16}
!180 = !{!177, !6, i64 48}
!181 = !{!22, !7, i64 1}
!182 = !{!22, !23, i64 2}
!183 = !{!177, !6, i64 144}
!184 = !{!177, !6, i64 136}
!185 = !{!177, !15, i64 128}
!186 = !{!177, !10, i64 96}
!187 = !{!177, !10, i64 64}
!188 = !{!177, !10, i64 120}
!189 = !{!177, !6, i64 112}
!190 = !{!191, !10, i64 0}
!191 = !{!"reg_substr_datum", !10, i64 0, !10, i64 8, !6, i64 16, !6, i64 24, !10, i64 32}
!192 = !{!177, !10, i64 104}
!193 = !{!191, !10, i64 8}
!194 = !{!177, !15, i64 80}
!195 = !{!177, !6, i64 72}
!196 = !{!191, !6, i64 16}
!197 = !{!191, !6, i64 24}
!198 = !{!22, !7, i64 0}
!199 = !{i64 0, i64 1, !17, i64 1, i64 1, !17, i64 2, i64 2, !139, i64 4, i64 4, !73, i64 8, i64 32, !17, i64 40, i64 4, !73, i64 48, i64 8, !5}
!200 = !{!201, !7, i64 0}
!201 = !{!"reg_substr_data", !7, i64 0, !7, i64 8}
!202 = !{!191, !10, i64 32}
!203 = !{!88, !10, i64 72}
!204 = !{!21, !6, i64 232}
!205 = !{!206, !7, i64 0}
!206 = !{!"regnode_string", !7, i64 0, !7, i64 1, !23, i64 2, !7, i64 4}
!207 = !{!92, !15, i64 0}
!208 = !{!209, !15, i64 8}
!209 = !{!"regnode_2L", !7, i64 0, !7, i64 1, !23, i64 2, !15, i64 4, !15, i64 8}
!210 = distinct !{!210, !29}
!211 = !{!88, !6, i64 120}
!212 = distinct !{!212, !29}
!213 = !{!82, !15, i64 12}
!214 = distinct !{!214, !29}
!215 = !{!216, !6, i64 0}
!216 = !{!"gp", !6, i64 0, !6, i64 8, !6, i64 16, !15, i64 24, !15, i64 28, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !15, i64 64, !15, i64 67, !6, i64 72}
!217 = distinct !{!217, !29}
!218 = distinct !{!218, !29}
!219 = distinct !{!219, !29}
!220 = distinct !{!220, !29}
!221 = distinct !{!221, !29}
!222 = !{!142, !23, i64 2}
!223 = distinct !{!223, !29}
!224 = distinct !{!224, !29}
!225 = !{!21, !6, i64 208}
!226 = distinct !{!226, !29}
!227 = distinct !{!227, !29}
!228 = !{!151, !15, i64 60}
!229 = !{!151, !15, i64 88}
!230 = !{!151, !10, i64 72}
!231 = !{!151, !10, i64 96}
!232 = !{!151, !6, i64 32}
!233 = !{!145, !23, i64 6}
!234 = !{!88, !6, i64 48}
!235 = distinct !{!235, !29, !236}
!236 = !{!"llvm.loop.peeled.count", i32 1}
!237 = !{!238, !10, i64 0}
!238 = !{!"regexp_paren_pair", !10, i64 0, !10, i64 8, !10, i64 16}
!239 = !{!88, !15, i64 112}
!240 = !{!238, !10, i64 8}
!241 = !{!242, !6, i64 8}
!242 = !{!"", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !15, i64 72, !15, i64 76, !10, i64 80, !12, i64 88, !12, i64 89, !12, i64 90, !12, i64 91}
!243 = !{!244, !15, i64 40}
!244 = !{!"regnode_charclass_class", !7, i64 0, !7, i64 1, !23, i64 2, !15, i64 4, !7, i64 8, !15, i64 40}
!245 = distinct !{!245, !29}
!246 = distinct !{!246, !29}
!247 = distinct !{!247, !29}
!248 = distinct !{!248, !29}
!249 = distinct !{!249, !29}
!250 = distinct !{!250, !29}
!251 = !{!177, !10, i64 0}
!252 = !{!177, !10, i64 8}
!253 = !{!177, !15, i64 132}
!254 = !{!177, !10, i64 24}
!255 = !{!177, !10, i64 32}
!256 = !{!177, !10, i64 40}
!257 = distinct !{!257, !29}
!258 = distinct !{!258, !29}
!259 = distinct !{!259, !29}
!260 = distinct !{!260, !29}
!261 = distinct !{!261, !29}
!262 = distinct !{!262, !29}
!263 = distinct !{!263, !29}
!264 = distinct !{!264, !29}
!265 = distinct !{!265, !29}
!266 = distinct !{!266, !29}
!267 = !{i32 1, i32 5}
!268 = distinct !{!268, !29}
!269 = distinct !{!269, !29}
!270 = distinct !{!270, !29}
!271 = !{!21, !6, i64 320}
!272 = !{!21, !6, i64 312}
!273 = !{!274, !6, i64 48}
!274 = !{!"scan_frame", !6, i64 0, !6, i64 8, !15, i64 16, !15, i64 20, !15, i64 24, !6, i64 32, !6, i64 40, !6, i64 48}
!275 = !{!274, !6, i64 40}
!276 = !{!21, !15, i64 328}
!277 = !{!274, !6, i64 8}
!278 = !{!274, !6, i64 0}
!279 = !{!274, !15, i64 20}
!280 = !{!274, !15, i64 16}
!281 = !{!274, !6, i64 32}
!282 = !{!283, !10, i64 24}
!283 = !{!"magic", !6, i64 0, !6, i64 8, !23, i64 16, !7, i64 18, !7, i64 19, !10, i64 24, !6, i64 32, !6, i64 40}
!284 = !{!22, !6, i64 48}
!285 = distinct !{!285, !29}
!286 = distinct !{!286, !29}
!287 = distinct !{!287, !29}
!288 = distinct !{!288, !29}
!289 = !{!88, !10, i64 80}
!290 = !{!151, !6, i64 40}
!291 = distinct !{!291, !29}
!292 = distinct !{!292, !29}
!293 = !{!22, !15, i64 40}
!294 = distinct !{!294, !29}
!295 = !{!41, !6, i64 40}
!296 = distinct !{!296, !29}
!297 = !{!41, !6, i64 64}
!298 = !{!299, !6, i64 8}
!299 = !{!"he", !6, i64 0, !6, i64 8, !7, i64 16}
!300 = distinct !{!300, !29}
!301 = distinct !{!301, !29}
!302 = !{!47, !6, i64 0}
!303 = !{!304, !10, i64 16}
!304 = !{!"xpvhv", !6, i64 0, !7, i64 8, !10, i64 16, !10, i64 24}
!305 = !{!41, !6, i64 72}
!306 = distinct !{!306, !29}
!307 = distinct !{!307, !29}
!308 = !{!309, !6, i64 56}
!309 = !{!"pmop", !6, i64 0, !6, i64 8, !6, i64 16, !10, i64 24, !15, i64 32, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !15, i64 33, !7, i64 34, !7, i64 35, !6, i64 40, !6, i64 48, !6, i64 56, !15, i64 64, !7, i64 72, !7, i64 80, !6, i64 88}
!310 = !{!309, !15, i64 64}
!311 = !{!88, !6, i64 128}
!312 = !{!88, !10, i64 152}
!313 = !{!88, !10, i64 144}
!314 = !{!283, !6, i64 0}
!315 = distinct !{!315, !29}
!316 = distinct !{!316, !29}
!317 = distinct !{!317, !29}
!318 = distinct !{!318, !29}
!319 = distinct !{!319, !29}
!320 = distinct !{!320, !29}
!321 = distinct !{!321, !29}
!322 = distinct !{!322, !29}
!323 = distinct !{!323, !29}
!324 = distinct !{!324, !29}
!325 = distinct !{!325, !29}
!326 = distinct !{!326, !29}
!327 = distinct !{!327, !29}
!328 = distinct !{!328, !29}
!329 = !{!151, !15, i64 0}
!330 = !{!151, !6, i64 8}
!331 = !{!151, !6, i64 48}
!332 = distinct !{!332, !29}
!333 = !{!334, !7, i64 1}
!334 = !{!"regnode_charclass", !7, i64 0, !7, i64 1, !23, i64 2, !15, i64 4, !7, i64 8}
!335 = !{!334, !23, i64 2}
!336 = !{!334, !7, i64 0}
!337 = distinct !{!337, !29}
!338 = distinct !{!338, !29}
!339 = !{i32 0, i32 2}
!340 = distinct !{!340, !29}
!341 = distinct !{!341, !29}
!342 = !{!343, !23, i64 0}
!343 = !{!"_reg_trie_trans_list_elem", !23, i64 0, !15, i64 4}
!344 = !{!343, !15, i64 4}
!345 = distinct !{!345, !29}
!346 = distinct !{!346, !29}
!347 = !{!348, !23, i64 0}
!348 = !{!"", !23, i64 0, !15, i64 4, !15, i64 8}
!349 = !{!348, !15, i64 4}
!350 = !{!348, !15, i64 8}
!351 = distinct !{!351, !29}
!352 = distinct !{!352, !29}
!353 = distinct !{!353, !29}
!354 = distinct !{!354, !29}
!355 = distinct !{!355, !29}
!356 = distinct !{!356, !29}
!357 = distinct !{!357, !29}
!358 = distinct !{!358, !29}
!359 = distinct !{!359, !29}
!360 = distinct !{!360, !29}
!361 = distinct !{!361, !29}
!362 = distinct !{!362, !29}
!363 = distinct !{!363, !29}
!364 = distinct !{!364, !29}
!365 = distinct !{!365, !29}
!366 = distinct !{!366, !29}
!367 = !{!151, !15, i64 80}
!368 = distinct !{!368, !29}
!369 = distinct !{!369, !29}
!370 = distinct !{!370, !29}
!371 = distinct !{!371, !29}
!372 = distinct !{!372, !29}
!373 = distinct !{!373, !29}
!374 = distinct !{!374, !29}
!375 = distinct !{!375, !29}
!376 = distinct !{!376, !29}
!377 = distinct !{!377, !29}
!378 = distinct !{!378, !29}
!379 = distinct !{!379, !29}
!380 = distinct !{!380, !29}
!381 = distinct !{!381, !29}
!382 = distinct !{!382, !29}
!383 = distinct !{!383, !29}
!384 = distinct !{!384, !29}
!385 = distinct !{!385, !29}
!386 = distinct !{!386, !29}
!387 = distinct !{!387, !29}
!388 = distinct !{!388, !29}
!389 = distinct !{!389, !29}
!390 = distinct !{!390, !29}
!391 = distinct !{!391, !29}
!392 = distinct !{!392, !29}
!393 = distinct !{!393, !29}
!394 = distinct !{!394, !29}
!395 = distinct !{!395, !29}
!396 = distinct !{!396, !29}
!397 = distinct !{!397, !29}
!398 = distinct !{!398, !29}
!399 = distinct !{!399, !29}
!400 = distinct !{!400, !29}
!401 = distinct !{!401, !29}
!402 = !{!43, !6, i64 64}
!403 = distinct !{!403, !29}
!404 = distinct !{!404, !29}
!405 = distinct !{!405, !29}
!406 = distinct !{!406, !29}
!407 = distinct !{!407, !29}
!408 = distinct !{!408, !29}
!409 = distinct !{!409, !29}
!410 = !{!304, !10, i64 24}
!411 = !{!412, !15, i64 28}
!412 = !{!"xpvhv_aux", !7, i64 0, !6, i64 8, !6, i64 16, !15, i64 24, !15, i64 28, !6, i64 32, !15, i64 40, !15, i64 44, !15, i64 48, !15, i64 52}
!413 = !{i64 -1, i64 2305843009213693952}
!414 = distinct !{!414, !29, !236}
!415 = distinct !{!415, !29}
!416 = distinct !{!416, !29}
!417 = distinct !{!417, !29}
!418 = distinct !{!418, !29}
!419 = distinct !{!419, !29}
!420 = distinct !{!420, !29}
!421 = distinct !{!421, !29}
!422 = distinct !{!422, !29}
!423 = distinct !{!423, !29}
!424 = distinct !{!424, !29}
