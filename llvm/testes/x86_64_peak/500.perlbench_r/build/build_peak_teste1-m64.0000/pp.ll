; ModuleID = 'pp.c'
source_filename = "pp.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.sv = type { ptr, i32, i32, %union.anon }
%union.anon = type { ptr }
%struct.mgvtbl = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.op = type { ptr, ptr, ptr, i64, i16, i8, i8 }
%struct.xpvav = type { ptr, %union._xmgu, i64, i64, ptr }
%union._xmgu = type { ptr }
%struct.av = type { ptr, i32, i32, %union.anon.0 }
%union.anon.0 = type { ptr }
%struct.xpvhv = type { ptr, %union._xmgu, i64, i64 }
%struct.xpvmg = type { ptr, %union._xmgu, i64, %union.anon.1, %union._xivu, %union._xnvu }
%union.anon.1 = type { i64 }
%union._xivu = type { i64 }
%union._xnvu = type { double }
%struct.xpvcv = type { ptr, %union._xmgu, i64, %union.anon.3, ptr, %union.anon.4, %union.anon.5, %union.anon.6, ptr, %union.anon.7, ptr, i32, i32, i32 }
%union.anon.3 = type { i64 }
%union.anon.4 = type { ptr }
%union.anon.5 = type { ptr }
%union.anon.6 = type { ptr }
%union.anon.7 = type { ptr }
%struct.padlist = type { i64, ptr, i32, i32 }
%struct.padnamelist = type { i64, ptr, i64, i64, i32 }
%struct.padname = type { ptr, ptr, %union.anon.2, i32, i32, i32, i32, i8, i8 }
%union.anon.2 = type { ptr }
%struct.cv = type { ptr, i32, i32, %union.anon.8 }
%union.anon.8 = type { ptr }
%struct.hv = type { ptr, i32, i32, %union.anon.10 }
%union.anon.10 = type { ptr }
%struct.gv = type { ptr, i32, i32, %union.anon.11 }
%union.anon.11 = type { ptr }
%struct.gp = type { ptr, ptr, ptr, i32, i32, ptr, ptr, ptr, ptr, i32, ptr }
%struct.unop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr }
%struct.cop = type { ptr, ptr, ptr, i64, i16, i8, i8, i32, ptr, ptr, i32, i32, ptr, ptr }
%struct.xpvhv_aux = type { %union._xhvnameu, ptr, ptr, i32, i32, ptr, i32, i32, i32, i32 }
%union._xhvnameu = type { ptr }
%struct.hek = type { i32, i32, [1 x i8] }
%struct.xpv = type { ptr, %union._xmgu, i64, %union.anon.9 }
%union.anon.9 = type { i64 }
%struct.xpvlv = type { ptr, %union._xmgu, i64, %union.anon.12, %union._xivu, %union._xnvu, %union.anon.13, i64, ptr, i8, i8 }
%union.anon.12 = type { i64 }
%union.anon.13 = type { i64 }
%struct.magic = type { ptr, ptr, i16, i8, i8, i64, ptr, ptr }
%struct.xpvgv = type { ptr, %union._xmgu, i64, %union.anon.14, %union._xivu, %union._xnvu }
%union.anon.14 = type { i64 }
%struct.xpviv = type { ptr, %union._xmgu, i64, %union.anon.15, %union._xivu }
%union.anon.15 = type { i64 }
%struct.xpvuv = type { ptr, %union._xmgu, i64, %union.anon.16, %union._xivu }
%union.anon.16 = type { i64 }
%struct.xpvnv = type { ptr, %union._xmgu, i64, %union.anon.17, %union._xivu, %union._xnvu }
%union.anon.17 = type { i64 }
%struct.he = type { ptr, ptr, %union.anon.18 }
%union.anon.18 = type { ptr }
%struct.pmop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr, ptr, i32, %union.anon.19, %union.anon.20, ptr }
%union.anon.19 = type { ptr }
%union.anon.20 = type { ptr }
%struct.regexp = type { ptr, %union._xmgu, i64, %union.anon.21, ptr, ptr, ptr, i32, i64, i64, i64, ptr, i32, i32, ptr, i32, i32, ptr, ptr, ptr, i64, i64, i64, i64, i16, ptr }
%union.anon.21 = type { i64 }
%struct.p5rx = type { ptr, i32, i32, %union.anon.22 }
%union.anon.22 = type { ptr }
%struct.regexp_engine = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.regexp_paren_pair = type { i64, i64, i64 }
%struct.logop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr }
%struct.svop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr }
%struct.stackinfo = type { ptr, ptr, ptr, ptr, i32, i32, i32, i32 }
%struct.context = type { %union.anon.23 }
%union.anon.23 = type { %struct.subst }
%struct.subst = type { i8, i8, i16, i32, i64, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.block = type { i8, i8, i16, i32, ptr, i32, i32, ptr, %union.anon.24 }
%union.anon.24 = type { %struct.block_sub }
%struct.block_sub = type { ptr, ptr, ptr, ptr, i32, ptr }

@PL_stack_sp = external local_unnamed_addr global ptr, align 8
@PL_op = external local_unnamed_addr global ptr, align 8
@PL_stack_max = external local_unnamed_addr global ptr, align 8
@PL_sv_undef = external global %struct.sv, align 8
@PL_curpad = external local_unnamed_addr global ptr, align 8
@.str = private unnamed_addr constant [44 x i8] c"Can't return array to lvalue scalar context\00", align 1
@.str.1 = private unnamed_addr constant [43 x i8] c"Can't return hash to lvalue scalar context\00", align 1
@PL_sv_yes = external global %struct.sv, align 8
@PL_no_symref_sv = external constant [0 x i8], align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@PL_no_usym = external constant [0 x i8], align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"Not a SCALAR reference\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"a SCALAR\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@PL_no_localize_ref = external constant [0 x i8], align 1
@PL_curcop = external local_unnamed_addr global ptr, align 8
@.str.7 = private unnamed_addr constant [7 x i8] c"CORE::\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c"Can't find an opnumber for \22%d%lu%4p\22\00", align 1
@PL_stack_base = external local_unnamed_addr global ptr, align 8
@PL_markstack_ptr = external local_unnamed_addr global ptr, align 8
@PL_tmps_ix = external local_unnamed_addr global i64, align 8
@PL_tmps_max = external local_unnamed_addr global i64, align 8
@PL_sv_no = external global %struct.sv, align 8
@.str.9 = private unnamed_addr constant [38 x i8] c"Attempt to bless into a freed package\00", align 1
@.str.10 = private unnamed_addr constant [34 x i8] c"Attempt to bless into a reference\00", align 1
@.str.11 = private unnamed_addr constant [48 x i8] c"Explicit blessing to '' (assuming package main)\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"RRAY\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"ODE\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"ILEHANDLE\00", align 1
@.str.15 = private unnamed_addr constant [39 x i8] c"Use of *glob{FILEHANDLE} is deprecated\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"ORMAT\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"LOB\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"ASH\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"AME\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"ACKAGE\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"__ANON__\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"CALAR\00", align 1
@PL_defgv = external local_unnamed_addr global ptr, align 8
@.str.23 = private unnamed_addr constant [34 x i8] c"Constant subroutine %-p undefined\00", align 1
@.str.24 = private unnamed_addr constant [12 x i8] c"(anonymous)\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"ISA\00", align 1
@.str.26 = private unnamed_addr constant [25 x i8] c"Illegal division by zero\00", align 1
@.str.27 = private unnamed_addr constant [21 x i8] c"Illegal modulus zero\00", align 1
@.str.28 = private unnamed_addr constant [37 x i8] c"Non-finite repeat count does nothing\00", align 1
@.str.29 = private unnamed_addr constant [35 x i8] c"Negative repeat count does nothing\00", align 1
@.str.30 = private unnamed_addr constant [33 x i8] c"Out of memory during list extend\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"Out of memory during string extend\00", align 1
@.str.32 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"sqrt\00", align 1
@.str.34 = private unnamed_addr constant [20 x i8] c"Can't take %s of %g\00", align 1
@PL_srand_called = external local_unnamed_addr global i8, align 1
@.str.35 = private unnamed_addr constant [26 x i8] c"Integer overflow in srand\00", align 1
@.str.36 = private unnamed_addr constant [11 x i8] c"0 but true\00", align 1
@PL_charclass = external local_unnamed_addr constant [0 x i32], align 4
@.str.37 = private unnamed_addr constant [45 x i8] c"Attempt to use reference as lvalue in substr\00", align 1
@PL_tainting = external local_unnamed_addr global i8, align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"substr outside of string\00", align 1
@PL_Sv = external local_unnamed_addr global ptr, align 8
@PL_encoding = external local_unnamed_addr global ptr, align 8
@PL_lex_encoding = external local_unnamed_addr global ptr, align 8
@PL_tainted = external local_unnamed_addr global i8, align 1
@PL_utf8skip = external local_unnamed_addr constant [0 x i8], align 1
@.str.39 = private unnamed_addr constant [14 x i8] c"Cannot chr %g\00", align 1
@.str.40 = private unnamed_addr constant [37 x i8] c"Invalid negative number (%-p) in chr\00", align 1
@.str.41 = private unnamed_addr constant [65 x i8] c"The crypt() function is unimplemented due to excessive paranoia.\00", align 1
@PL_latin1_lc = external local_unnamed_addr constant [0 x i8], align 1
@PL_mod_latin1_uc = external local_unnamed_addr constant [0 x i8], align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"EXISTS\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"DELETE\00", align 1
@PL_no_aelem = external constant [0 x i8], align 1
@.str.46 = private unnamed_addr constant [56 x i8] c"Can't modify index/value array slice in list assignment\00", align 1
@.str.47 = private unnamed_addr constant [61 x i8] c"Type of argument to %s must be unblessed hashref or arrayref\00", align 1
@PL_op_desc = external local_unnamed_addr constant [0 x ptr], align 8
@.str.48 = private unnamed_addr constant [22 x i8] c"Can't modify %s in %s\00", align 1
@.str.49 = private unnamed_addr constant [21 x i8] c"Not a HASH reference\00", align 1
@.str.50 = private unnamed_addr constant [39 x i8] c"panic: avhv_delete no longer supported\00", align 1
@PL_no_helem_sv = external constant [0 x i8], align 1
@.str.51 = private unnamed_addr constant [53 x i8] c"Can't modify key/value hash slice in list assignment\00", align 1
@.str.52 = private unnamed_addr constant [41 x i8] c"Odd number of elements in anonymous hash\00", align 1
@PL_sv_consts = external local_unnamed_addr global [35 x ptr], align 16
@.str.53 = private unnamed_addr constant [7 x i8] c"SPLICE\00", align 1
@.str.54 = private unnamed_addr constant [34 x i8] c"splice() offset past end of array\00", align 1
@PL_markstack_max = external local_unnamed_addr global ptr, align 8
@.str.55 = private unnamed_addr constant [5 x i8] c"PUSH\00", align 1
@PL_delaymagic = external local_unnamed_addr global i16, align 2
@.str.56 = private unnamed_addr constant [8 x i8] c"UNSHIFT\00", align 1
@PL_savestack_ix = external local_unnamed_addr global i32, align 4
@.str.57 = private unnamed_addr constant [29 x i8] c"panic: pp_split, pm=%p, s=%p\00", align 1
@PL_curstack = external local_unnamed_addr global ptr, align 8
@PL_curstackinfo = external local_unnamed_addr global ptr, align 8
@.str.58 = private unnamed_addr constant [11 x i8] c"Split loop\00", align 1
@PL_lockhook = external local_unnamed_addr global ptr, align 8
@.str.59 = private unnamed_addr constant [15 x i8] c"[out of range]\00", align 1
@PL_op_name = external local_unnamed_addr constant [0 x ptr], align 8
@PL_no_sock_func = external constant [0 x i8], align 1
@.str.60 = private unnamed_addr constant [40 x i8] c"panic: unimplemented op %s (#%d) called\00", align 1
@PL_opargs = external local_unnamed_addr constant [0 x i32], align 4
@.str.61 = private unnamed_addr constant [11 x i8] c"Not enough\00", align 1
@.str.62 = private unnamed_addr constant [9 x i8] c"Too many\00", align 1
@.str.63 = private unnamed_addr constant [20 x i8] c"%s arguments for %s\00", align 1
@.str.64 = private unnamed_addr constant [51 x i8] c"Type of arg %d to &CORE::%s must be hash reference\00", align 1
@.str.65 = private unnamed_addr constant [39 x i8] c"Type of arg %d to &CORE::%s must be %s\00", align 1
@.str.66 = private unnamed_addr constant [17 x i8] c"scalar reference\00", align 1
@.str.67 = private unnamed_addr constant [28 x i8] c"reference to one of [$@%&*]\00", align 1
@.str.68 = private unnamed_addr constant [27 x i8] c"reference to one of [$@%*]\00", align 1
@.str.69 = private unnamed_addr constant [24 x i8] c"panic: unknown OA_*: %x\00", align 1
@.str.70 = private unnamed_addr constant [34 x i8] c"Assigned value is not a reference\00", align 1
@.str.71 = private unnamed_addr constant [8 x i8] c" SCALAR\00", align 1
@.str.72 = private unnamed_addr constant [8 x i8] c"n ARRAY\00", align 1
@.str.73 = private unnamed_addr constant [6 x i8] c" HASH\00", align 1
@.str.74 = private unnamed_addr constant [6 x i8] c" CODE\00", align 1
@.str.75 = private unnamed_addr constant [36 x i8] c"Assigned value is not a%s reference\00", align 1
@PL_magic_vtables = external constant [31 x %struct.mgvtbl], align 16
@.str.76 = private unnamed_addr constant [11 x i8] c"__ANONIO__\00", align 1
@.str.77 = private unnamed_addr constant [21 x i8] c"Not a GLOB reference\00", align 1
@.str.78 = private unnamed_addr constant [9 x i8] c"a symbol\00", align 1
@PL_rs = external local_unnamed_addr global ptr, align 8
@.str.79 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.80 = private unnamed_addr constant [23 x i8] c"Not an ARRAY reference\00", align 1
@.str.81 = private unnamed_addr constant [33 x i8] c"Not an unblessed ARRAY reference\00", align 1
@switch.table.Perl_pp_sle = private unnamed_addr constant [4 x i32] [i32 1, i32 -1, i32 1, i32 -1], align 4
@switch.table.Perl_pp_sle.84 = private unnamed_addr constant [4 x i32] [i32 0, i32 0, i32 1, i32 1], align 4
@switch.table.Perl_pp_sle.85 = private unnamed_addr constant [4 x i32] [i32 23, i32 25, i32 24, i32 26], align 4

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_stub() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !9
  %5 = and i8 %4, 3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %0
  %8 = zext i8 %5 to i32
  br label %11

9:                                                ; preds = %0
  %10 = tail call i32 @Perl_block_gimme() #13
  br label %11

11:                                               ; preds = %9, %7
  %12 = phi i32 [ %8, %7 ], [ %10, %9 ]
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %14, label %25

14:                                               ; preds = %11
  %15 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %16 = ptrtoint ptr %15 to i64
  %17 = ptrtoint ptr %1 to i64
  %18 = sub i64 %16, %17
  %19 = icmp slt i64 %18, 8
  br i1 %19, label %20, label %22

20:                                               ; preds = %14
  %21 = tail call ptr @Perl_stack_grow(ptr noundef %1, ptr noundef %1, i64 noundef 1) #13
  br label %22

22:                                               ; preds = %14, %20
  %23 = phi ptr [ %21, %20 ], [ %1, %14 ]
  %24 = getelementptr inbounds ptr, ptr %23, i64 1
  store ptr @PL_sv_undef, ptr %24, align 8, !tbaa !5
  br label %25

25:                                               ; preds = %22, %11
  %26 = phi ptr [ %24, %22 ], [ %1, %11 ]
  store ptr %26, ptr @PL_stack_sp, align 8, !tbaa !5
  %27 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %28 = load ptr, ptr %27, align 8, !tbaa !13
  ret ptr %28
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

declare i32 @Perl_block_gimme() local_unnamed_addr #2

declare ptr @Perl_stack_grow(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_padav() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %5 = load i64, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 6
  %9 = load i8, ptr %8, align 1, !tbaa !15
  %10 = and i8 %9, -64
  %11 = icmp eq i8 %10, -128
  br i1 %11, label %12, label %13

12:                                               ; preds = %0
  tail call void @Perl_save_clearsv(ptr noundef nonnull %6) #13
  br label %13

13:                                               ; preds = %0, %12
  %14 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %15 = ptrtoint ptr %14 to i64
  %16 = ptrtoint ptr %1 to i64
  %17 = sub i64 %15, %16
  %18 = icmp slt i64 %17, 8
  br i1 %18, label %19, label %21

19:                                               ; preds = %13
  %20 = tail call ptr @Perl_stack_grow(ptr noundef %1, ptr noundef %1, i64 noundef 1) #13
  br label %21

21:                                               ; preds = %13, %19
  %22 = phi ptr [ %20, %19 ], [ %1, %13 ]
  %23 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %24 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 5
  %25 = load i8, ptr %24, align 2, !tbaa !9
  %26 = and i8 %25, 16
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds ptr, ptr %22, i64 1
  store ptr %7, ptr %29, align 8, !tbaa !5
  store ptr %29, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %168

30:                                               ; preds = %21
  %31 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 6
  %32 = load i8, ptr %31, align 1, !tbaa !15
  %33 = and i8 %32, 8
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %58, label %35

35:                                               ; preds = %30
  %36 = tail call i32 @Perl_is_lvalue_sub() #13
  %37 = icmp ne i32 %36, 0
  %38 = and i32 %36, 1
  %39 = icmp eq i32 %38, 0
  %40 = and i1 %37, %39
  %41 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %42 = getelementptr inbounds %struct.op, ptr %41, i64 0, i32 5
  %43 = load i8, ptr %42, align 2, !tbaa !9
  br i1 %40, label %44, label %58

44:                                               ; preds = %35
  %45 = and i8 %43, 3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %44
  %48 = zext i8 %45 to i32
  br label %51

49:                                               ; preds = %44
  %50 = tail call i32 @Perl_block_gimme() #13
  br label %51

51:                                               ; preds = %49, %47
  %52 = phi i32 [ %48, %47 ], [ %50, %49 ]
  %53 = icmp eq i32 %52, 2
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str) #13
  br label %55

55:                                               ; preds = %51, %54
  %56 = getelementptr inbounds ptr, ptr %22, i64 1
  store ptr %7, ptr %56, align 8, !tbaa !5
  store ptr %56, ptr @PL_stack_sp, align 8, !tbaa !5
  %57 = load ptr, ptr @PL_op, align 8, !tbaa !5
  br label %168

58:                                               ; preds = %35, %30
  %59 = phi i8 [ %25, %30 ], [ %43, %35 ]
  %60 = and i8 %59, 3
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = zext i8 %60 to i32
  br label %66

64:                                               ; preds = %58
  %65 = tail call i32 @Perl_block_gimme() #13
  br label %66

66:                                               ; preds = %64, %62
  %67 = phi i32 [ %63, %62 ], [ %65, %64 ]
  switch i32 %67, label %165 [
    i32 3, label %68
    i32 2, label %148
  ]

68:                                               ; preds = %66
  %69 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %70 = load i32, ptr %69, align 4, !tbaa !16
  %71 = and i32 %70, 8388608
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = tail call i32 @Perl_mg_size(ptr noundef nonnull %7) #13
  %75 = sext i32 %74 to i64
  br label %80

76:                                               ; preds = %68
  %77 = load ptr, ptr %7, align 8, !tbaa !18
  %78 = getelementptr inbounds %struct.xpvav, ptr %77, i64 0, i32 2
  %79 = load i64, ptr %78, align 8, !tbaa !20
  br label %80

80:                                               ; preds = %76, %73
  %81 = phi i64 [ %75, %73 ], [ %79, %76 ]
  %82 = add i64 %81, 1
  %83 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %84 = ptrtoint ptr %83 to i64
  %85 = ptrtoint ptr %22 to i64
  %86 = sub i64 %84, %85
  %87 = ashr exact i64 %86, 3
  %88 = icmp sgt i64 %87, %81
  br i1 %88, label %91, label %89

89:                                               ; preds = %80
  %90 = tail call ptr @Perl_stack_grow(ptr noundef %22, ptr noundef %22, i64 noundef %82) #13
  br label %91

91:                                               ; preds = %80, %89
  %92 = phi ptr [ %90, %89 ], [ %22, %80 ]
  %93 = load i32, ptr %69, align 4, !tbaa !16
  %94 = and i32 %93, 14680064
  %95 = icmp eq i32 %94, 0
  %96 = icmp eq i64 %82, 0
  br i1 %95, label %98, label %97

97:                                               ; preds = %91
  br i1 %96, label %146, label %105

98:                                               ; preds = %91
  br i1 %96, label %146, label %99

99:                                               ; preds = %98
  %100 = getelementptr inbounds %struct.av, ptr %7, i64 0, i32 3
  %101 = and i64 %82, 1
  %102 = icmp eq i64 %81, 0
  br i1 %102, label %135, label %103

103:                                              ; preds = %99
  %104 = and i64 %82, -2
  br label %116

105:                                              ; preds = %97, %111
  %106 = phi i64 [ %113, %111 ], [ 0, %97 ]
  %107 = tail call ptr @Perl_av_fetch(ptr noundef %7, i64 noundef %106, i32 noundef 0) #13
  %108 = icmp eq ptr %107, null
  br i1 %108, label %111, label %109

109:                                              ; preds = %105
  %110 = load ptr, ptr %107, align 8, !tbaa !5
  br label %111

111:                                              ; preds = %105, %109
  %112 = phi ptr [ %110, %109 ], [ @PL_sv_undef, %105 ]
  %113 = add nuw i64 %106, 1
  %114 = getelementptr inbounds ptr, ptr %92, i64 %113
  store ptr %112, ptr %114, align 8, !tbaa !5
  %115 = icmp eq i64 %106, %81
  br i1 %115, label %146, label %105, !llvm.loop !22

116:                                              ; preds = %116, %103
  %117 = phi i64 [ 0, %103 ], [ %131, %116 ]
  %118 = phi i64 [ 0, %103 ], [ %133, %116 ]
  %119 = load ptr, ptr %100, align 8, !tbaa !24
  %120 = getelementptr inbounds ptr, ptr %119, i64 %117
  %121 = load ptr, ptr %120, align 8, !tbaa !5
  %122 = icmp eq ptr %121, null
  %123 = select i1 %122, ptr @PL_sv_undef, ptr %121
  %124 = or i64 %117, 1
  %125 = getelementptr inbounds ptr, ptr %92, i64 %124
  store ptr %123, ptr %125, align 8, !tbaa !5
  %126 = load ptr, ptr %100, align 8, !tbaa !24
  %127 = getelementptr inbounds ptr, ptr %126, i64 %124
  %128 = load ptr, ptr %127, align 8, !tbaa !5
  %129 = icmp eq ptr %128, null
  %130 = select i1 %129, ptr @PL_sv_undef, ptr %128
  %131 = add nuw i64 %117, 2
  %132 = getelementptr inbounds ptr, ptr %92, i64 %131
  store ptr %130, ptr %132, align 8, !tbaa !5
  %133 = add i64 %118, 2
  %134 = icmp eq i64 %133, %104
  br i1 %134, label %135, label %116, !llvm.loop !25

135:                                              ; preds = %116, %99
  %136 = phi i64 [ 0, %99 ], [ %131, %116 ]
  %137 = icmp eq i64 %101, 0
  br i1 %137, label %146, label %138

138:                                              ; preds = %135
  %139 = load ptr, ptr %100, align 8, !tbaa !24
  %140 = getelementptr inbounds ptr, ptr %139, i64 %136
  %141 = load ptr, ptr %140, align 8, !tbaa !5
  %142 = icmp eq ptr %141, null
  %143 = select i1 %142, ptr @PL_sv_undef, ptr %141
  %144 = add nuw i64 %136, 1
  %145 = getelementptr inbounds ptr, ptr %92, i64 %144
  store ptr %143, ptr %145, align 8, !tbaa !5
  br label %146

146:                                              ; preds = %111, %138, %135, %97, %98
  %147 = getelementptr inbounds ptr, ptr %92, i64 %82
  br label %165

148:                                              ; preds = %66
  %149 = tail call ptr @Perl_sv_newmortal() #13
  %150 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %151 = load i32, ptr %150, align 4, !tbaa !16
  %152 = and i32 %151, 8388608
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %157, label %154

154:                                              ; preds = %148
  %155 = tail call i32 @Perl_mg_size(ptr noundef nonnull %7) #13
  %156 = sext i32 %155 to i64
  br label %161

157:                                              ; preds = %148
  %158 = load ptr, ptr %7, align 8, !tbaa !18
  %159 = getelementptr inbounds %struct.xpvav, ptr %158, i64 0, i32 2
  %160 = load i64, ptr %159, align 8, !tbaa !20
  br label %161

161:                                              ; preds = %157, %154
  %162 = phi i64 [ %156, %154 ], [ %160, %157 ]
  %163 = add nsw i64 %162, 1
  tail call void @Perl_sv_setiv(ptr noundef %149, i64 noundef %163) #13
  %164 = getelementptr inbounds ptr, ptr %22, i64 1
  store ptr %149, ptr %164, align 8, !tbaa !5
  br label %165

165:                                              ; preds = %66, %161, %146
  %166 = phi ptr [ %147, %146 ], [ %164, %161 ], [ %22, %66 ]
  store ptr %166, ptr @PL_stack_sp, align 8, !tbaa !5
  %167 = load ptr, ptr @PL_op, align 8, !tbaa !5
  br label %168

168:                                              ; preds = %55, %165, %28
  %169 = phi ptr [ %23, %28 ], [ %167, %165 ], [ %57, %55 ]
  %170 = load ptr, ptr %169, align 8, !tbaa !13
  ret ptr %170
}

declare void @Perl_save_clearsv(ptr noundef) local_unnamed_addr #2

declare i32 @Perl_is_lvalue_sub() local_unnamed_addr #2

declare void @Perl_croak(ptr noundef, ...) local_unnamed_addr #2

declare i32 @Perl_mg_size(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_av_fetch(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_sv_newmortal() local_unnamed_addr #2

declare void @Perl_sv_setiv(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_padhv() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %5 = load i64, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %9 = ptrtoint ptr %8 to i64
  %10 = ptrtoint ptr %1 to i64
  %11 = sub i64 %9, %10
  %12 = icmp slt i64 %11, 8
  br i1 %12, label %13, label %16

13:                                               ; preds = %0
  %14 = tail call ptr @Perl_stack_grow(ptr noundef %1, ptr noundef %1, i64 noundef 1) #13
  %15 = load ptr, ptr @PL_op, align 8, !tbaa !5
  br label %16

16:                                               ; preds = %0, %13
  %17 = phi ptr [ %15, %13 ], [ %3, %0 ]
  %18 = phi ptr [ %14, %13 ], [ %1, %0 ]
  %19 = getelementptr inbounds ptr, ptr %18, i64 1
  store ptr %7, ptr %19, align 8, !tbaa !5
  %20 = getelementptr inbounds %struct.op, ptr %17, i64 0, i32 6
  %21 = load i8, ptr %20, align 1, !tbaa !15
  %22 = and i8 %21, -64
  %23 = icmp eq i8 %22, -128
  br i1 %23, label %24, label %30

24:                                               ; preds = %16
  %25 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %26 = getelementptr inbounds %struct.op, ptr %17, i64 0, i32 3
  %27 = load i64, ptr %26, align 8, !tbaa !14
  %28 = getelementptr inbounds ptr, ptr %25, i64 %27
  tail call void @Perl_save_clearsv(ptr noundef %28) #13
  %29 = load ptr, ptr @PL_op, align 8, !tbaa !5
  br label %30

30:                                               ; preds = %24, %16
  %31 = phi ptr [ %29, %24 ], [ %17, %16 ]
  %32 = getelementptr inbounds %struct.op, ptr %31, i64 0, i32 5
  %33 = load i8, ptr %32, align 2, !tbaa !9
  %34 = and i8 %33, 16
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  store ptr %19, ptr @PL_stack_sp, align 8, !tbaa !5
  %37 = load ptr, ptr %31, align 8, !tbaa !13
  br label %125

38:                                               ; preds = %30
  %39 = getelementptr inbounds %struct.op, ptr %31, i64 0, i32 6
  %40 = load i8, ptr %39, align 1, !tbaa !15
  %41 = and i8 %40, 8
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %66, label %43

43:                                               ; preds = %38
  %44 = tail call i32 @Perl_is_lvalue_sub() #13
  %45 = icmp ne i32 %44, 0
  %46 = and i32 %44, 1
  %47 = icmp eq i32 %46, 0
  %48 = and i1 %45, %47
  %49 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %50 = getelementptr inbounds %struct.op, ptr %49, i64 0, i32 5
  %51 = load i8, ptr %50, align 2, !tbaa !9
  br i1 %48, label %52, label %66

52:                                               ; preds = %43
  %53 = and i8 %51, 3
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %52
  %56 = zext i8 %53 to i32
  br label %59

57:                                               ; preds = %52
  %58 = tail call i32 @Perl_block_gimme() #13
  br label %59

59:                                               ; preds = %57, %55
  %60 = phi i32 [ %56, %55 ], [ %58, %57 ]
  %61 = icmp eq i32 %60, 2
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.1) #13
  br label %63

63:                                               ; preds = %59, %62
  store ptr %19, ptr @PL_stack_sp, align 8, !tbaa !5
  %64 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %65 = load ptr, ptr %64, align 8, !tbaa !13
  br label %125

66:                                               ; preds = %43, %38
  %67 = phi i8 [ %33, %38 ], [ %51, %43 ]
  %68 = and i8 %67, 3
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %66
  %71 = zext i8 %68 to i32
  br label %74

72:                                               ; preds = %66
  %73 = tail call i32 @Perl_block_gimme() #13
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i32 [ %71, %70 ], [ %73, %72 ]
  %76 = icmp eq i32 %75, 3
  br i1 %76, label %77, label %79

77:                                               ; preds = %74
  store ptr %19, ptr @PL_stack_sp, align 8, !tbaa !5
  %78 = tail call ptr @Perl_do_kv() #13
  br label %125

79:                                               ; preds = %74
  %80 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %81 = getelementptr inbounds %struct.op, ptr %80, i64 0, i32 6
  %82 = load i8, ptr %81, align 1, !tbaa !15
  %83 = zext i8 %82 to i32
  %84 = and i32 %83, 32
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %92

86:                                               ; preds = %79
  %87 = and i32 %83, 16
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %116, label %89

89:                                               ; preds = %86
  %90 = tail call i32 @Perl_block_gimme() #13
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %116

92:                                               ; preds = %89, %79
  %93 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %94 = load i32, ptr %93, align 4, !tbaa !16
  %95 = and i32 %94, 8388608
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %92
  %98 = tail call ptr @Perl_mg_find(ptr noundef nonnull %7, i32 noundef 80) #13
  %99 = icmp eq ptr %98, null
  br i1 %99, label %100, label %116

100:                                              ; preds = %97, %92
  %101 = load ptr, ptr %7, align 8, !tbaa !26
  %102 = getelementptr inbounds %struct.xpvhv, ptr %101, i64 0, i32 2
  %103 = load i64, ptr %102, align 8, !tbaa !27
  %104 = getelementptr inbounds %struct.xpvmg, ptr %101, i64 0, i32 1
  %105 = load ptr, ptr %104, align 8, !tbaa !24
  %106 = icmp eq ptr %105, null
  br i1 %106, label %110, label %107

107:                                              ; preds = %100
  %108 = tail call i32 @Perl_hv_placeholders_get(ptr noundef nonnull %7) #13
  %109 = sext i32 %108 to i64
  br label %110

110:                                              ; preds = %100, %107
  %111 = phi i64 [ %109, %107 ], [ 0, %100 ]
  %112 = icmp eq i64 %103, %111
  br i1 %112, label %113, label %120

113:                                              ; preds = %110
  %114 = tail call ptr @Perl_newSViv(i64 noundef 0) #13
  %115 = tail call ptr @Perl_sv_2mortal(ptr noundef %114) #13
  br label %120

116:                                              ; preds = %97, %89, %86
  %117 = icmp eq i32 %75, 2
  br i1 %117, label %118, label %122

118:                                              ; preds = %116
  %119 = tail call ptr @Perl_hv_scalar(ptr noundef %7) #13
  br label %120

120:                                              ; preds = %113, %110, %118
  %121 = phi ptr [ %119, %118 ], [ %115, %113 ], [ @PL_sv_yes, %110 ]
  store ptr %121, ptr %19, align 8, !tbaa !5
  br label %122

122:                                              ; preds = %120, %116
  store ptr %19, ptr @PL_stack_sp, align 8, !tbaa !5
  %123 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %124 = load ptr, ptr %123, align 8, !tbaa !13
  br label %125

125:                                              ; preds = %63, %122, %77, %36
  %126 = phi ptr [ %37, %36 ], [ %78, %77 ], [ %124, %122 ], [ %65, %63 ]
  ret ptr %126
}

declare ptr @Perl_do_kv() local_unnamed_addr #2

declare ptr @Perl_mg_find(ptr noundef, i32 noundef) local_unnamed_addr #2

declare i32 @Perl_hv_placeholders_get(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_sv_2mortal(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_newSViv(i64 noundef) local_unnamed_addr #2

declare ptr @Perl_hv_scalar(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_padcv() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %5 = load i64, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %9 = ptrtoint ptr %8 to i64
  %10 = ptrtoint ptr %1 to i64
  %11 = sub i64 %9, %10
  %12 = icmp slt i64 %11, 8
  br i1 %12, label %13, label %16

13:                                               ; preds = %0
  %14 = tail call ptr @Perl_stack_grow(ptr noundef %1, ptr noundef %1, i64 noundef 1) #13
  %15 = load ptr, ptr @PL_op, align 8, !tbaa !5
  br label %16

16:                                               ; preds = %0, %13
  %17 = phi ptr [ %15, %13 ], [ %3, %0 ]
  %18 = phi ptr [ %14, %13 ], [ %1, %0 ]
  %19 = getelementptr inbounds ptr, ptr %18, i64 1
  store ptr %7, ptr %19, align 8, !tbaa !5
  store ptr %19, ptr @PL_stack_sp, align 8, !tbaa !5
  %20 = load ptr, ptr %17, align 8, !tbaa !13
  ret ptr %20
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local ptr @Perl_pp_introcv() local_unnamed_addr #3 {
  %1 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %4 = load i64, ptr %3, align 8, !tbaa !14
  %5 = getelementptr inbounds ptr, ptr %1, i64 %4
  %6 = load ptr, ptr %5, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = and i32 %8, -262145
  store i32 %9, ptr %7, align 4, !tbaa !16
  %10 = load ptr, ptr %2, align 8, !tbaa !13
  ret ptr %10
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_clonecv() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %4 = load i64, ptr %3, align 8, !tbaa !14
  %5 = getelementptr inbounds ptr, ptr %1, i64 %4
  %6 = load ptr, ptr %5, align 8, !tbaa !5
  %7 = tail call ptr @Perl_find_runcv(ptr noundef null) #13
  %8 = load ptr, ptr %7, align 8, !tbaa !29
  %9 = getelementptr inbounds %struct.xpvcv, ptr %8, i64 0, i32 9
  %10 = load ptr, ptr %9, align 8, !tbaa !24
  %11 = getelementptr inbounds %struct.padlist, ptr %10, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !31
  %13 = load ptr, ptr %12, align 8, !tbaa !5
  %14 = getelementptr inbounds %struct.padnamelist, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !33
  %16 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %17 = getelementptr inbounds %struct.op, ptr %16, i64 0, i32 3
  %18 = load i64, ptr %17, align 8, !tbaa !14
  %19 = getelementptr inbounds ptr, ptr %15, i64 %18
  %20 = load ptr, ptr %19, align 8, !tbaa !5
  %21 = getelementptr inbounds %struct.padname, ptr %20, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !24
  %23 = load ptr, ptr %22, align 8, !tbaa !29
  %24 = getelementptr inbounds %struct.xpvcv, ptr %23, i64 0, i32 12
  %25 = load i32, ptr %24, align 4, !tbaa !35
  %26 = and i32 %25, 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %37, label %28

28:                                               ; preds = %0
  tail call void @Perl_save_padsv_and_mortalize(i64 noundef %18) #13
  %29 = getelementptr inbounds %struct.cv, ptr %22, i64 0, i32 1
  %30 = load i32, ptr %29, align 8, !tbaa !37
  %31 = add i32 %30, 1
  store i32 %31, ptr %29, align 8, !tbaa !37
  %32 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %33 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %34 = getelementptr inbounds %struct.op, ptr %33, i64 0, i32 3
  %35 = load i64, ptr %34, align 8, !tbaa !14
  %36 = getelementptr inbounds ptr, ptr %32, i64 %35
  store ptr %22, ptr %36, align 8, !tbaa !5
  br label %44

37:                                               ; preds = %0
  %38 = tail call ptr @Perl_cv_clone_into(ptr noundef nonnull %22, ptr noundef %6) #13
  %39 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %40 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %41 = getelementptr inbounds %struct.op, ptr %40, i64 0, i32 3
  %42 = load i64, ptr %41, align 8, !tbaa !14
  %43 = getelementptr inbounds ptr, ptr %39, i64 %42
  tail call void @Perl_save_clearsv(ptr noundef %43) #13
  br label %44

44:                                               ; preds = %37, %28
  %45 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %46 = load ptr, ptr %45, align 8, !tbaa !13
  ret ptr %46
}

declare ptr @Perl_find_runcv(ptr noundef) local_unnamed_addr #2

declare void @Perl_save_padsv_and_mortalize(i64 noundef) local_unnamed_addr #2

declare ptr @Perl_cv_clone_into(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_rv2gv() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr %1, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 6
  %5 = load i8, ptr %4, align 1, !tbaa !15
  %6 = zext i8 %5 to i32
  %7 = and i32 %6, 48
  %8 = icmp ne i32 %7, 0
  %9 = and i32 %6, 2
  %10 = icmp ne i32 %9, 0
  %11 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 5
  %12 = load i8, ptr %11, align 2, !tbaa !9
  %13 = and i8 %12, -96
  %14 = icmp eq i8 %13, -128
  br i1 %14, label %20, label %15

15:                                               ; preds = %0
  %16 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 4
  %17 = load i16, ptr %16, align 8
  %18 = and i16 %17, 511
  %19 = icmp eq i16 %18, 26
  br label %20

20:                                               ; preds = %0, %15
  %21 = phi i1 [ %19, %15 ], [ true, %0 ]
  %22 = tail call fastcc ptr @S_rv2gv(ptr noundef %2, i1 noundef zeroext %8, i1 noundef zeroext %10, i1 noundef zeroext %21)
  %23 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %24 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 6
  %25 = load i8, ptr %24, align 1, !tbaa !15
  %26 = icmp sgt i8 %25, -1
  br i1 %26, label %32, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 5
  %29 = load i8, ptr %28, align 2, !tbaa !9
  %30 = icmp sgt i8 %29, -1
  %31 = zext i1 %30 to i32
  tail call void @Perl_save_gp(ptr noundef %22, i32 noundef %31) #13
  br label %32

32:                                               ; preds = %27, %20
  store ptr %22, ptr %1, align 8, !tbaa !5
  store ptr %1, ptr @PL_stack_sp, align 8, !tbaa !5
  %33 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %34 = load ptr, ptr %33, align 8, !tbaa !13
  ret ptr %34
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_rv2gv(ptr noundef %0, i1 noundef zeroext %1, i1 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !16
  %7 = and i32 %6, 16777471
  %8 = icmp eq i32 %7, 9
  %9 = and i32 %6, 2097152
  %10 = icmp eq i32 %9, 0
  %11 = or i1 %8, %10
  br i1 %11, label %15, label %12

12:                                               ; preds = %4
  %13 = tail call i32 @Perl_mg_get(ptr noundef nonnull %0) #13
  %14 = load i32, ptr %5, align 4, !tbaa !16
  br label %15

15:                                               ; preds = %12, %4
  %16 = phi i32 [ %14, %12 ], [ %6, %4 ]
  %17 = and i32 %16, 2048
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %59, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !24
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  %24 = and i32 %23, 1048576
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %35, label %26

26:                                               ; preds = %19
  %27 = load ptr, ptr %21, align 8, !tbaa !26
  %28 = load ptr, ptr %27, align 8, !tbaa !38
  %29 = getelementptr inbounds %struct.hv, ptr %28, i64 0, i32 2
  %30 = load i32, ptr %29, align 4, !tbaa !40
  %31 = and i32 %30, 268435456
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %26
  %34 = tail call ptr @Perl_amagic_deref_call(ptr noundef nonnull %0, i32 noundef 4) #13
  br label %35

35:                                               ; preds = %216, %210, %19, %26, %33
  %36 = phi ptr [ %34, %33 ], [ %0, %26 ], [ %0, %19 ], [ %0, %210 ], [ %0, %216 ]
  %37 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 3
  %38 = load ptr, ptr %37, align 8, !tbaa !24
  %39 = getelementptr inbounds %struct.sv, ptr %38, i64 0, i32 2
  %40 = load i32, ptr %39, align 4, !tbaa !16
  %41 = and i32 %40, 255
  %42 = icmp eq i32 %41, 15
  br i1 %42, label %43, label %51

43:                                               ; preds = %35
  %44 = tail call ptr @Perl_sv_newmortal() #13
  tail call void @Perl_gv_init_pvn(ptr noundef %44, ptr noundef null, ptr noundef nonnull @.str.76, i64 noundef 10, i32 noundef 0) #13
  %45 = getelementptr inbounds %struct.gv, ptr %44, i64 0, i32 3
  %46 = load ptr, ptr %45, align 8, !tbaa !24
  %47 = getelementptr inbounds %struct.gp, ptr %46, i64 0, i32 1
  store ptr %38, ptr %47, align 8, !tbaa !42
  %48 = getelementptr inbounds %struct.sv, ptr %38, i64 0, i32 1
  %49 = load i32, ptr %48, align 8, !tbaa !44
  %50 = add i32 %49, 1
  store i32 %50, ptr %48, align 8, !tbaa !44
  br label %260

51:                                               ; preds = %35
  %52 = and i32 %40, 49152
  %53 = icmp eq i32 %52, 32768
  %54 = add nsw i32 %41, -9
  %55 = icmp ult i32 %54, 2
  %56 = and i1 %53, %55
  br i1 %56, label %260, label %57

57:                                               ; preds = %51
  %58 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.77) #13
  br label %260

59:                                               ; preds = %15
  %60 = and i32 %16, 49152
  %61 = icmp eq i32 %60, 32768
  %62 = and i32 %16, 255
  %63 = add nsw i32 %62, -9
  %64 = icmp ult i32 %63, 2
  %65 = select i1 %61, i1 %64, i1 false
  br i1 %65, label %260, label %66

66:                                               ; preds = %59
  %67 = and i32 %16, 65280
  %68 = icmp ne i32 %67, 0
  %69 = icmp eq i32 %62, 8
  %70 = or i1 %68, %69
  %71 = and i32 %16, 16826623
  %72 = icmp eq i32 %71, 16777226
  %73 = or i1 %72, %70
  br i1 %73, label %230, label %74

74:                                               ; preds = %66
  %75 = icmp ne ptr %0, @PL_sv_undef
  %76 = and i1 %75, %1
  br i1 %76, label %77, label %218

77:                                               ; preds = %74
  %78 = and i32 %16, 134283264
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %81, label %80

80:                                               ; preds = %77
  tail call void @Perl_croak_no_modify() #13
  br label %81

81:                                               ; preds = %80, %77
  %82 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %83 = getelementptr inbounds %struct.unop, ptr %82, i64 0, i32 3
  %84 = load i64, ptr %83, align 8, !tbaa !45
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %99, label %86

86:                                               ; preds = %81
  %87 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %88 = getelementptr inbounds ptr, ptr %87, i64 %84
  %89 = load ptr, ptr %88, align 8, !tbaa !5
  %90 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %91 = getelementptr inbounds %struct.cop, ptr %90, i64 0, i32 8
  %92 = load ptr, ptr %91, align 8, !tbaa !47
  %93 = getelementptr inbounds %struct.hv, ptr %92, i64 0, i32 2
  %94 = load i32, ptr %93, align 4, !tbaa !40
  %95 = and i32 %94, 255
  %96 = icmp eq i32 %95, 12
  %97 = select i1 %96, ptr %92, ptr null
  %98 = tail call ptr @Perl_newSV(i64 noundef 0) #13
  tail call void @Perl_gv_init_sv(ptr noundef %98, ptr noundef %97, ptr noundef %89, i32 noundef 0) #13
  br label %170

99:                                               ; preds = %81
  %100 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %101 = getelementptr inbounds %struct.cop, ptr %100, i64 0, i32 8
  %102 = load ptr, ptr %101, align 8, !tbaa !47
  %103 = icmp eq ptr %102, null
  br i1 %103, label %129, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %struct.hv, ptr %102, i64 0, i32 2
  %106 = load i32, ptr %105, align 4, !tbaa !40
  %107 = and i32 %106, 33554432
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %163, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %struct.hv, ptr %102, i64 0, i32 3
  %111 = load ptr, ptr %110, align 8, !tbaa !24
  %112 = load ptr, ptr %102, align 8, !tbaa !49
  %113 = getelementptr inbounds %struct.xpvhv, ptr %112, i64 0, i32 3
  %114 = load i64, ptr %113, align 8, !tbaa !50
  %115 = add i64 %114, 1
  %116 = getelementptr inbounds ptr, ptr %111, i64 %115
  %117 = load ptr, ptr %116, align 8, !tbaa !24
  %118 = icmp eq ptr %117, null
  br i1 %118, label %133, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %struct.xpvhv_aux, ptr %116, i64 0, i32 4
  %121 = load i32, ptr %120, align 4, !tbaa !51
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %126, label %123

123:                                              ; preds = %119
  %124 = load ptr, ptr %117, align 8, !tbaa !24
  %125 = icmp eq ptr %124, null
  br i1 %125, label %133, label %126

126:                                              ; preds = %119, %123
  %127 = phi ptr [ %124, %123 ], [ %117, %119 ]
  %128 = getelementptr inbounds %struct.hek, ptr %127, i64 0, i32 2
  br label %133

129:                                              ; preds = %99
  %130 = load i32, ptr inttoptr (i64 12 to ptr), align 4, !tbaa !40
  %131 = and i32 %130, 33554432
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %163, label %133

133:                                              ; preds = %109, %123, %126, %129
  %134 = phi ptr [ null, %129 ], [ null, %109 ], [ null, %123 ], [ %128, %126 ]
  %135 = getelementptr inbounds %struct.hv, ptr %102, i64 0, i32 3
  %136 = load ptr, ptr %135, align 8, !tbaa !24
  %137 = load ptr, ptr %102, align 8, !tbaa !49
  %138 = getelementptr inbounds %struct.xpvhv, ptr %137, i64 0, i32 3
  %139 = load i64, ptr %138, align 8, !tbaa !50
  %140 = add i64 %139, 1
  %141 = getelementptr inbounds ptr, ptr %136, i64 %140
  %142 = load ptr, ptr %141, align 8, !tbaa !24
  %143 = icmp eq ptr %142, null
  br i1 %143, label %163, label %144

144:                                              ; preds = %133
  %145 = getelementptr inbounds %struct.xpvhv_aux, ptr %141, i64 0, i32 4
  %146 = load i32, ptr %145, align 4, !tbaa !51
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %144
  %149 = load ptr, ptr %142, align 8, !tbaa !24
  %150 = icmp eq ptr %149, null
  br i1 %150, label %163, label %151

151:                                              ; preds = %148, %144
  %152 = phi ptr [ %142, %144 ], [ %149, %148 ]
  %153 = getelementptr inbounds %struct.hek, ptr %152, i64 0, i32 2
  %154 = getelementptr inbounds %struct.hek, ptr %152, i64 0, i32 1
  %155 = load i32, ptr %154, align 4, !tbaa !53
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds i8, ptr %153, i64 %156
  %158 = getelementptr inbounds i8, ptr %157, i64 1
  %159 = load i8, ptr %158, align 1, !tbaa !24
  %160 = zext i8 %159 to i32
  %161 = shl i32 %160, 29
  %162 = and i32 %161, 536870912
  br label %163

163:                                              ; preds = %104, %129, %133, %148, %151
  %164 = phi ptr [ %134, %151 ], [ %134, %148 ], [ %134, %133 ], [ null, %129 ], [ null, %104 ]
  %165 = phi i32 [ %162, %151 ], [ 0, %148 ], [ 0, %133 ], [ 0, %129 ], [ 0, %104 ]
  %166 = tail call ptr @Perl_newGVgen_flags(ptr noundef %164, i32 noundef %165) #13
  %167 = getelementptr inbounds %struct.sv, ptr %166, i64 0, i32 1
  %168 = load i32, ptr %167, align 8, !tbaa !44
  %169 = add i32 %168, 1
  store i32 %169, ptr %167, align 8, !tbaa !44
  br label %170

170:                                              ; preds = %86, %163
  %171 = phi ptr [ %98, %86 ], [ %166, %163 ]
  %172 = load i32, ptr %5, align 4, !tbaa !16
  %173 = and i32 %172, 255
  %174 = icmp ugt i32 %173, 2
  %175 = icmp eq i32 %173, 1
  %176 = or i1 %174, %175
  br i1 %176, label %178, label %177

177:                                              ; preds = %170
  tail call void @Perl_sv_upgrade(ptr noundef %0, i32 noundef 1) #13
  br label %210

178:                                              ; preds = %170
  br i1 %174, label %179, label %210

179:                                              ; preds = %178
  %180 = load ptr, ptr %0, align 8, !tbaa !26
  %181 = getelementptr inbounds %struct.xpv, ptr %180, i64 0, i32 3
  %182 = load i64, ptr %181, align 8, !tbaa !24
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %205, label %184

184:                                              ; preds = %179
  %185 = and i32 %172, 33554432
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %188 = load ptr, ptr %187, align 8, !tbaa !24
  br i1 %186, label %202, label %189

189:                                              ; preds = %184
  %190 = getelementptr inbounds i8, ptr %188, i64 -1
  %191 = load i8, ptr %190, align 1, !tbaa !24
  %192 = zext i8 %191 to i64
  %193 = icmp eq i8 %191, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %189
  %195 = getelementptr inbounds i8, ptr %188, i64 -9
  %196 = load i64, ptr %195, align 1
  br label %197

197:                                              ; preds = %194, %189
  %198 = phi i64 [ %192, %189 ], [ %196, %194 ]
  %199 = sub i64 0, %198
  %200 = getelementptr inbounds i8, ptr %188, i64 %199
  store ptr %200, ptr %187, align 8, !tbaa !24
  %201 = and i32 %172, -33554433
  store i32 %201, ptr %5, align 4, !tbaa !16
  br label %202

202:                                              ; preds = %184, %197
  %203 = phi ptr [ %200, %197 ], [ %188, %184 ]
  tail call void @Perl_safesysfree(ptr noundef %203) #13
  %204 = load ptr, ptr %0, align 8, !tbaa !26
  br label %205

205:                                              ; preds = %179, %202
  %206 = phi ptr [ %180, %179 ], [ %204, %202 ]
  %207 = getelementptr inbounds %struct.xpv, ptr %206, i64 0, i32 3
  store i64 0, ptr %207, align 8, !tbaa !24
  %208 = load ptr, ptr %0, align 8, !tbaa !26
  %209 = getelementptr inbounds %struct.xpv, ptr %208, i64 0, i32 2
  store i64 0, ptr %209, align 8, !tbaa !55
  br label %210

210:                                              ; preds = %177, %205, %178
  %211 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  store ptr %171, ptr %211, align 8, !tbaa !24
  %212 = load i32, ptr %5, align 4, !tbaa !16
  %213 = or i32 %212, 2048
  store i32 %213, ptr %5, align 4, !tbaa !16
  %214 = and i32 %212, 4194304
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %35, label %216

216:                                              ; preds = %210
  %217 = tail call i32 @Perl_mg_set(ptr noundef %0) #13
  br label %35

218:                                              ; preds = %74
  %219 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %220 = getelementptr inbounds %struct.op, ptr %219, i64 0, i32 5
  %221 = load i8, ptr %220, align 2, !tbaa !9
  %222 = and i8 %221, 16
  %223 = icmp ne i8 %222, 0
  %224 = or i1 %223, %2
  br i1 %224, label %225, label %227

225:                                              ; preds = %218
  %226 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @PL_no_usym, ptr noundef nonnull @.str.78) #13
  br label %227

227:                                              ; preds = %218, %225
  %228 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 41) #13
  br i1 %228, label %229, label %277

229:                                              ; preds = %227
  tail call void @Perl_report_uninit(ptr noundef nonnull %0) #13
  br label %277

230:                                              ; preds = %66
  br i1 %3, label %231, label %234

231:                                              ; preds = %230
  %232 = tail call ptr @Perl_gv_fetchsv(ptr noundef nonnull %0, i32 noundef 3072, i32 noundef 9) #13
  %233 = icmp eq ptr %232, null
  br i1 %233, label %277, label %255

234:                                              ; preds = %230
  br i1 %2, label %235, label %247

235:                                              ; preds = %234
  %236 = and i32 %16, 16384
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %244, label %238

238:                                              ; preds = %235
  %239 = load ptr, ptr %0, align 8, !tbaa !26
  %240 = getelementptr inbounds %struct.xpv, ptr %239, i64 0, i32 2
  %241 = load i64, ptr %240, align 8, !tbaa !55
  %242 = icmp ugt i64 %241, 32
  %243 = select i1 %242, ptr @.str.2, ptr @.str.3
  br label %244

244:                                              ; preds = %238, %235
  %245 = phi ptr [ @.str.3, %235 ], [ %243, %238 ]
  %246 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @PL_no_symref_sv, ptr noundef nonnull %0, ptr noundef nonnull %245, ptr noundef nonnull @.str.78) #13
  br label %247

247:                                              ; preds = %244, %234
  %248 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %249 = getelementptr inbounds %struct.op, ptr %248, i64 0, i32 6
  %250 = load i8, ptr %249, align 1, !tbaa !15
  %251 = and i8 %250, -124
  %252 = icmp eq i8 %251, 4
  br i1 %252, label %277, label %253

253:                                              ; preds = %247
  %254 = tail call ptr @Perl_gv_fetchsv(ptr noundef nonnull %0, i32 noundef 2049, i32 noundef 9) #13
  br label %255

255:                                              ; preds = %231, %253
  %256 = phi ptr [ %232, %231 ], [ %254, %253 ]
  %257 = getelementptr inbounds %struct.sv, ptr %256, i64 0, i32 2
  %258 = load i32, ptr %257, align 4, !tbaa !16
  %259 = and i32 %258, -16777217
  store i32 %259, ptr %257, align 4, !tbaa !16
  br label %260

260:                                              ; preds = %59, %51, %255, %43, %57
  %261 = phi ptr [ %44, %43 ], [ %38, %57 ], [ %256, %255 ], [ %38, %51 ], [ %0, %59 ]
  %262 = getelementptr inbounds %struct.sv, ptr %261, i64 0, i32 2
  %263 = load i32, ptr %262, align 4, !tbaa !16
  %264 = and i32 %263, 16777216
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %277, label %266

266:                                              ; preds = %260
  %267 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %268 = getelementptr inbounds %struct.op, ptr %267, i64 0, i32 6
  %269 = load i8, ptr %268, align 1, !tbaa !15
  %270 = and i8 %269, 64
  %271 = icmp eq i8 %270, 0
  br i1 %271, label %272, label %277

272:                                              ; preds = %266
  %273 = tail call ptr @Perl_sv_newmortal() #13
  tail call void @Perl_sv_setsv_flags(ptr noundef %273, ptr noundef nonnull %261, i32 noundef 0) #13
  %274 = getelementptr inbounds %struct.sv, ptr %273, i64 0, i32 2
  %275 = load i32, ptr %274, align 4, !tbaa !16
  %276 = and i32 %275, -16777217
  store i32 %276, ptr %274, align 4, !tbaa !16
  br label %277

277:                                              ; preds = %260, %266, %272, %247, %231, %227, %229
  %278 = phi ptr [ @PL_sv_undef, %229 ], [ @PL_sv_undef, %227 ], [ @PL_sv_undef, %231 ], [ %0, %247 ], [ %261, %266 ], [ %273, %272 ], [ %261, %260 ]
  ret ptr %278
}

declare void @Perl_save_gp(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_softref2xv(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr nocapture noundef %3) local_unnamed_addr #0 {
  %5 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %6 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 6
  %7 = load i8, ptr %6, align 1, !tbaa !15
  %8 = and i8 %7, 2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %35, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !16
  %13 = and i32 %12, 65280
  %14 = icmp ne i32 %13, 0
  %15 = and i32 %12, 255
  %16 = icmp eq i32 %15, 8
  %17 = or i1 %14, %16
  %18 = and i32 %12, 16826623
  %19 = icmp eq i32 %18, 16777226
  %20 = or i1 %19, %17
  br i1 %20, label %21, label %33

21:                                               ; preds = %10
  %22 = and i32 %12, 16384
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %0, align 8, !tbaa !26
  %26 = getelementptr inbounds %struct.xpv, ptr %25, i64 0, i32 2
  %27 = load i64, ptr %26, align 8, !tbaa !55
  %28 = icmp ugt i64 %27, 32
  %29 = select i1 %28, ptr @.str.2, ptr @.str.3
  br label %30

30:                                               ; preds = %24, %21
  %31 = phi ptr [ @.str.3, %21 ], [ %29, %24 ]
  %32 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @PL_no_symref_sv, ptr noundef nonnull %0, ptr noundef nonnull %31, ptr noundef %1) #13
  br label %35

33:                                               ; preds = %10
  %34 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @PL_no_usym, ptr noundef %1) #13
  br label %35

35:                                               ; preds = %30, %33, %4
  %36 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %37 = load i32, ptr %36, align 4, !tbaa !16
  %38 = and i32 %37, 65280
  %39 = icmp ne i32 %38, 0
  %40 = and i32 %37, 255
  %41 = icmp eq i32 %40, 8
  %42 = or i1 %39, %41
  %43 = and i32 %37, 16826623
  %44 = icmp eq i32 %43, 16777226
  %45 = or i1 %44, %42
  %46 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %47 = getelementptr inbounds %struct.op, ptr %46, i64 0, i32 5
  %48 = load i8, ptr %47, align 2, !tbaa !9
  br i1 %45, label %77, label %49

49:                                               ; preds = %35
  %50 = and i8 %48, 16
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @PL_no_usym, ptr noundef %1) #13
  br label %54

54:                                               ; preds = %52, %49
  %55 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 41) #13
  br i1 %55, label %56, label %57

56:                                               ; preds = %54
  tail call void @Perl_report_uninit(ptr noundef nonnull %0) #13
  br label %57

57:                                               ; preds = %56, %54
  %58 = icmp eq i32 %2, 3
  br i1 %58, label %75, label %59

59:                                               ; preds = %57
  %60 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %61 = getelementptr inbounds %struct.op, ptr %60, i64 0, i32 5
  %62 = load i8, ptr %61, align 2, !tbaa !9
  %63 = and i8 %62, 3
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %59
  %66 = zext i8 %63 to i32
  br label %69

67:                                               ; preds = %59
  %68 = tail call i32 @Perl_block_gimme() #13
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i32 [ %66, %65 ], [ %68, %67 ]
  %71 = icmp eq i32 %70, 3
  br i1 %71, label %72, label %75

72:                                               ; preds = %69
  %73 = load ptr, ptr %3, align 8, !tbaa !5
  %74 = getelementptr inbounds ptr, ptr %73, i64 -1
  store ptr %74, ptr %3, align 8, !tbaa !5
  br label %87

75:                                               ; preds = %69, %57
  %76 = load ptr, ptr %3, align 8, !tbaa !5
  store ptr @PL_sv_undef, ptr %76, align 8, !tbaa !5
  br label %87

77:                                               ; preds = %35
  %78 = and i8 %48, -96
  %79 = icmp eq i8 %78, -128
  br i1 %79, label %80, label %85

80:                                               ; preds = %77
  %81 = tail call ptr @Perl_gv_fetchsv(ptr noundef nonnull %0, i32 noundef 3072, i32 noundef %2) #13
  %82 = icmp eq ptr %81, null
  br i1 %82, label %83, label %87

83:                                               ; preds = %80
  %84 = load ptr, ptr %3, align 8, !tbaa !5
  store ptr @PL_sv_undef, ptr %84, align 8, !tbaa !5
  br label %87

85:                                               ; preds = %77
  %86 = tail call ptr @Perl_gv_fetchsv(ptr noundef nonnull %0, i32 noundef 2049, i32 noundef %2) #13
  br label %87

87:                                               ; preds = %85, %80, %83, %75, %72
  %88 = phi ptr [ null, %83 ], [ null, %72 ], [ null, %75 ], [ %86, %85 ], [ %81, %80 ]
  ret ptr %88
}

declare ptr @Perl_die(ptr noundef, ...) local_unnamed_addr #2

declare zeroext i1 @Perl_ckwarn(i32 noundef) local_unnamed_addr #2

declare void @Perl_report_uninit(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_gv_fetchsv(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_rv2sv() local_unnamed_addr #0 {
  %1 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  %2 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  store ptr %2, ptr %1, align 8, !tbaa !5
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !57
  %6 = and i32 %5, 2097152
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %0
  %9 = tail call i32 @Perl_mg_get(ptr noundef nonnull %3) #13
  %10 = load i32, ptr %4, align 4, !tbaa !57
  br label %11

11:                                               ; preds = %0, %8
  %12 = phi i32 [ %5, %0 ], [ %10, %8 ]
  %13 = and i32 %12, 2048
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %42, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !24
  %18 = getelementptr inbounds %struct.sv, ptr %17, i64 0, i32 2
  %19 = load i32, ptr %18, align 4, !tbaa !16
  %20 = and i32 %19, 1048576
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15
  %23 = load ptr, ptr %17, align 8, !tbaa !26
  %24 = load ptr, ptr %23, align 8, !tbaa !38
  %25 = getelementptr inbounds %struct.hv, ptr %24, i64 0, i32 2
  %26 = load i32, ptr %25, align 4, !tbaa !40
  %27 = and i32 %26, 268435456
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %22
  %30 = tail call ptr @Perl_amagic_deref_call(ptr noundef nonnull %3, i32 noundef 1) #13
  %31 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 3
  %32 = load ptr, ptr %31, align 8, !tbaa !24
  %33 = getelementptr inbounds %struct.sv, ptr %32, i64 0, i32 2
  %34 = load i32, ptr %33, align 4, !tbaa !16
  br label %35

35:                                               ; preds = %29, %22, %15
  %36 = phi i32 [ %34, %29 ], [ %19, %22 ], [ %19, %15 ]
  %37 = phi ptr [ %32, %29 ], [ %17, %22 ], [ %17, %15 ]
  %38 = and i32 %36, 255
  %39 = icmp ugt i32 %38, 10
  br i1 %39, label %40, label %67

40:                                               ; preds = %35
  %41 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.4) #13
  br label %106

42:                                               ; preds = %11
  %43 = and i32 %12, 49152
  %44 = icmp eq i32 %43, 32768
  br i1 %44, label %45, label %49

45:                                               ; preds = %42
  %46 = and i32 %12, 255
  %47 = add nsw i32 %46, -9
  %48 = icmp ult i32 %47, 2
  br i1 %48, label %56, label %49

49:                                               ; preds = %45, %42
  %50 = call ptr @Perl_softref2xv(ptr noundef nonnull %3, ptr noundef nonnull @.str.5, i32 noundef 3, ptr noundef nonnull %1)
  %51 = icmp eq ptr %50, null
  br i1 %51, label %52, label %56

52:                                               ; preds = %49
  %53 = load ptr, ptr %1, align 8, !tbaa !5
  store ptr %53, ptr @PL_stack_sp, align 8, !tbaa !5
  %54 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %55 = load ptr, ptr %54, align 8, !tbaa !13
  br label %106

56:                                               ; preds = %45, %49
  %57 = phi ptr [ %50, %49 ], [ %3, %45 ]
  %58 = getelementptr inbounds %struct.gv, ptr %57, i64 0, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !24
  %60 = load ptr, ptr %59, align 8, !tbaa !5
  %61 = icmp eq ptr %60, null
  br i1 %61, label %62, label %67

62:                                               ; preds = %56
  %63 = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %57, i32 noundef 0) #13
  %64 = getelementptr inbounds %struct.gv, ptr %63, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8, !tbaa !24
  %66 = load ptr, ptr %65, align 8, !tbaa !5
  br label %67

67:                                               ; preds = %62, %56, %35
  %68 = phi ptr [ %37, %35 ], [ %66, %62 ], [ %60, %56 ]
  %69 = phi ptr [ null, %35 ], [ %57, %62 ], [ %57, %56 ]
  %70 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %71 = getelementptr inbounds %struct.op, ptr %70, i64 0, i32 5
  %72 = load i8, ptr %71, align 2, !tbaa !9
  %73 = and i8 %72, 32
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %101, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %struct.op, ptr %70, i64 0, i32 6
  %77 = load i8, ptr %76, align 1, !tbaa !15
  %78 = icmp sgt i8 %77, -1
  br i1 %78, label %95, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.unop, ptr %70, i64 0, i32 7
  %81 = load ptr, ptr %80, align 8, !tbaa !58
  %82 = getelementptr inbounds %struct.op, ptr %81, i64 0, i32 4
  %83 = load i16, ptr %82, align 8
  %84 = and i16 %83, 511
  %85 = icmp eq i16 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %79
  %87 = load ptr, ptr %1, align 8, !tbaa !5
  %88 = load ptr, ptr %87, align 8, !tbaa !5
  %89 = tail call ptr @Perl_save_scalar(ptr noundef %88) #13
  br label %101

90:                                               ; preds = %79
  %91 = icmp eq ptr %69, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = tail call ptr @Perl_save_scalar(ptr noundef nonnull %69) #13
  br label %101

94:                                               ; preds = %90
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.6, ptr noundef nonnull @PL_no_localize_ref) #13
  br label %101

95:                                               ; preds = %75
  %96 = and i8 %77, 48
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %95
  %99 = zext i8 %96 to i32
  %100 = tail call ptr @Perl_vivify_ref(ptr noundef %68, i32 noundef %99) #13
  br label %101

101:                                              ; preds = %92, %94, %86, %98, %95, %67
  %102 = phi ptr [ %89, %86 ], [ %93, %92 ], [ %68, %94 ], [ %100, %98 ], [ %68, %95 ], [ %68, %67 ]
  %103 = load ptr, ptr %1, align 8, !tbaa !5
  store ptr %102, ptr %103, align 8, !tbaa !5
  store ptr %103, ptr @PL_stack_sp, align 8, !tbaa !5
  %104 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %105 = load ptr, ptr %104, align 8, !tbaa !13
  br label %106

106:                                              ; preds = %101, %52, %40
  %107 = phi ptr [ %41, %40 ], [ %105, %101 ], [ %55, %52 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  ret ptr %107
}

declare i32 @Perl_mg_get(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_amagic_deref_call(ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_gv_add_by_type(ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_save_scalar(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_vivify_ref(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_av2arylen() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr %1, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 5
  %5 = load i8, ptr %4, align 2, !tbaa !9
  %6 = and i8 %5, 32
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 6
  %10 = load i8, ptr %9, align 1, !tbaa !15
  %11 = and i8 %10, 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %8
  %14 = tail call i32 @Perl_is_lvalue_sub() #13
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %0, %13
  %17 = tail call ptr @Perl_av_arylen_p(ptr noundef %2) #13
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %39

20:                                               ; preds = %16
  %21 = tail call ptr @Perl_newSV_type(i32 noundef 7) #13
  store ptr %21, ptr %17, align 8, !tbaa !5
  tail call void @Perl_sv_magic(ptr noundef %21, ptr noundef %2, i32 noundef 35, ptr noundef null, i32 noundef 0) #13
  %22 = load ptr, ptr %17, align 8, !tbaa !5
  br label %39

23:                                               ; preds = %8, %13
  %24 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 2
  %25 = load i32, ptr %24, align 4, !tbaa !16
  %26 = and i32 %25, 8388608
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = tail call i32 @Perl_mg_size(ptr noundef nonnull %2) #13
  %30 = sext i32 %29 to i64
  br label %35

31:                                               ; preds = %23
  %32 = load ptr, ptr %2, align 8, !tbaa !18
  %33 = getelementptr inbounds %struct.xpvav, ptr %32, i64 0, i32 2
  %34 = load i64, ptr %33, align 8, !tbaa !20
  br label %35

35:                                               ; preds = %31, %28
  %36 = phi i64 [ %30, %28 ], [ %34, %31 ]
  %37 = tail call ptr @Perl_newSViv(i64 noundef %36) #13
  %38 = tail call ptr @Perl_sv_2mortal(ptr noundef %37) #13
  br label %39

39:                                               ; preds = %16, %20, %35
  %40 = phi ptr [ %38, %35 ], [ %22, %20 ], [ %18, %16 ]
  store ptr %40, ptr %1, align 8, !tbaa !5
  store ptr %1, ptr @PL_stack_sp, align 8, !tbaa !5
  %41 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %42 = load ptr, ptr %41, align 8, !tbaa !13
  ret ptr %42
}

declare ptr @Perl_av_arylen_p(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_newSV_type(i32 noundef) local_unnamed_addr #2

declare void @Perl_sv_magic(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_pos() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr %1, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 5
  %5 = load i8, ptr %4, align 2, !tbaa !9
  %6 = and i8 %5, 32
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 6
  %10 = load i8, ptr %9, align 1, !tbaa !15
  %11 = and i8 %10, 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %8
  %14 = tail call i32 @Perl_is_lvalue_sub() #13
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %13, %0
  %17 = tail call ptr @Perl_newSV_type(i32 noundef 10) #13
  %18 = tail call ptr @Perl_sv_2mortal(ptr noundef %17) #13
  tail call void @Perl_sv_magic(ptr noundef %18, ptr noundef null, i32 noundef 46, ptr noundef null, i32 noundef 0) #13
  %19 = load ptr, ptr %18, align 8, !tbaa !26
  %20 = getelementptr inbounds %struct.xpvlv, ptr %19, i64 0, i32 9
  store i8 46, ptr %20, align 8, !tbaa !59
  %21 = icmp eq ptr %2, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 1
  %24 = load i32, ptr %23, align 8, !tbaa !44
  %25 = add i32 %24, 1
  store i32 %25, ptr %23, align 8, !tbaa !44
  br label %26

26:                                               ; preds = %16, %22
  %27 = getelementptr inbounds %struct.xpvlv, ptr %19, i64 0, i32 8
  store ptr %2, ptr %27, align 8, !tbaa !61
  br label %67

28:                                               ; preds = %13, %8
  %29 = tail call ptr @Perl_mg_find_mglob(ptr noundef %2) #13
  %30 = icmp eq ptr %29, null
  br i1 %30, label %67, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.magic, ptr %29, i64 0, i32 5
  %33 = load i64, ptr %32, align 8, !tbaa !62
  %34 = icmp eq i64 %33, -1
  br i1 %34, label %67, label %35

35:                                               ; preds = %31
  %36 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %37 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %38 = getelementptr inbounds %struct.op, ptr %37, i64 0, i32 3
  %39 = load i64, ptr %38, align 8, !tbaa !14
  %40 = getelementptr inbounds ptr, ptr %36, i64 %39
  %41 = load ptr, ptr %40, align 8, !tbaa !5
  %42 = getelementptr inbounds %struct.magic, ptr %29, i64 0, i32 4
  %43 = load i8, ptr %42, align 1, !tbaa !65
  %44 = and i8 %43, 64
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %59, label %46

46:                                               ; preds = %35
  %47 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 2
  %48 = load i32, ptr %47, align 4, !tbaa !16
  %49 = and i32 %48, 536870912
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %46
  %52 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %53 = getelementptr inbounds %struct.cop, ptr %52, i64 0, i32 10
  %54 = load i32, ptr %53, align 8, !tbaa !66
  %55 = and i32 %54, 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %51
  %58 = tail call i64 @Perl_sv_pos_b2u_flags(ptr noundef nonnull %2, i64 noundef %33, i32 noundef 34) #13
  br label %59

59:                                               ; preds = %35, %46, %51, %57
  %60 = phi i64 [ %33, %51 ], [ %58, %57 ], [ %33, %46 ], [ %33, %35 ]
  tail call void @Perl_sv_setuv(ptr noundef %41, i64 noundef %60) #13
  %61 = getelementptr inbounds %struct.sv, ptr %41, i64 0, i32 2
  %62 = load i32, ptr %61, align 4, !tbaa !16
  %63 = and i32 %62, 4194304
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %59
  %66 = tail call i32 @Perl_mg_set(ptr noundef nonnull %41) #13
  br label %67

67:                                               ; preds = %26, %28, %31, %59, %65
  %68 = phi ptr [ %41, %65 ], [ %41, %59 ], [ %18, %26 ], [ @PL_sv_undef, %28 ], [ @PL_sv_undef, %31 ]
  store ptr %68, ptr %1, align 8, !tbaa !5
  %69 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %70 = load ptr, ptr %69, align 8, !tbaa !13
  ret ptr %70
}

declare ptr @Perl_mg_find_mglob(ptr noundef) local_unnamed_addr #2

declare i64 @Perl_sv_pos_b2u_flags(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_sv_setuv(ptr noundef, i64 noundef) local_unnamed_addr #2

declare i32 @Perl_mg_set(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_rv2cv() local_unnamed_addr #0 {
  %1 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %3 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #13
  %4 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %6 = load i8, ptr %5, align 2, !tbaa !9
  %7 = icmp sgt i8 %6, -1
  br i1 %7, label %8, label %14

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 6
  %10 = load i8, ptr %9, align 1, !tbaa !15
  %11 = and i8 %10, -96
  %12 = icmp eq i8 %11, 32
  %13 = select i1 %12, i32 65, i32 1
  br label %14

14:                                               ; preds = %0, %8
  %15 = phi i32 [ %13, %8 ], [ 1024, %0 ]
  %16 = load ptr, ptr %3, align 8, !tbaa !5
  %17 = call ptr @Perl_sv_2cv(ptr noundef %16, ptr noundef nonnull %2, ptr noundef nonnull %1, i32 noundef %15) #13
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %37

19:                                               ; preds = %14
  %20 = icmp eq i32 %15, 65
  %21 = load ptr, ptr %1, align 8
  %22 = icmp ne ptr %21, null
  %23 = select i1 %20, i1 %22, i1 false
  br i1 %23, label %24, label %37

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.gv, ptr %21, i64 0, i32 2
  %26 = load i32, ptr %25, align 4, !tbaa !67
  %27 = and i32 %26, 2048
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.gv, ptr %21, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8, !tbaa !24
  %32 = getelementptr inbounds %struct.sv, ptr %31, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  %34 = and i32 %33, 255
  %35 = icmp eq i32 %34, 13
  %36 = select i1 %35, ptr %31, ptr %21
  br label %37

37:                                               ; preds = %19, %24, %29, %14
  %38 = phi ptr [ %17, %14 ], [ %36, %29 ], [ @PL_sv_undef, %24 ], [ @PL_sv_undef, %19 ]
  store ptr %38, ptr %3, align 8, !tbaa !5
  %39 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %40 = load ptr, ptr %39, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  ret ptr %40
}

declare ptr @Perl_sv_2cv(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_prototype() local_unnamed_addr #0 {
  %1 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %3 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #13
  %4 = load ptr, ptr %3, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.sv, ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !16
  %7 = and i32 %6, 2097152
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %0
  %10 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %4, i32 noundef 1538) #13
  store ptr %10, ptr %3, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !16
  br label %13

13:                                               ; preds = %9, %0
  %14 = phi i32 [ %12, %9 ], [ %6, %0 ]
  %15 = phi ptr [ %10, %9 ], [ %4, %0 ]
  %16 = and i32 %14, 1024
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = load ptr, ptr %15, align 8, !tbaa !26
  %20 = getelementptr inbounds %struct.xpv, ptr %19, i64 0, i32 2
  %21 = load i64, ptr %20, align 8, !tbaa !55
  %22 = icmp ugt i64 %21, 6
  br i1 %22, label %23, label %49

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 3
  %25 = load ptr, ptr %24, align 8, !tbaa !24
  %26 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %25, ptr noundef nonnull dereferenceable(7) @.str.7, i64 noundef 6) #14
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %49

28:                                               ; preds = %23
  %29 = getelementptr inbounds i8, ptr %25, i64 6
  %30 = trunc i64 %21 to i32
  %31 = add i32 %30, -6
  %32 = tail call i32 @Perl_keyword(ptr noundef nonnull %29, i32 noundef %31, i1 noundef zeroext true) #13
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %45

34:                                               ; preds = %28
  %35 = load ptr, ptr %3, align 8, !tbaa !5
  %36 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 2
  %37 = load i32, ptr %36, align 4, !tbaa !16
  %38 = lshr i32 %37, 29
  %39 = and i32 %38, 1
  %40 = load ptr, ptr %35, align 8, !tbaa !26
  %41 = getelementptr inbounds %struct.xpv, ptr %40, i64 0, i32 2
  %42 = load i64, ptr %41, align 8, !tbaa !55
  %43 = add i64 %42, -6
  %44 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.8, i32 noundef %39, i64 noundef %43, ptr noundef nonnull %29) #13
  br label %96

45:                                               ; preds = %28
  %46 = tail call ptr @Perl_core_prototype(ptr noundef null, ptr noundef nonnull %29, i32 noundef %32, ptr noundef null) #13
  %47 = icmp eq ptr %46, null
  %48 = select i1 %47, ptr @PL_sv_undef, ptr %46
  br label %92

49:                                               ; preds = %23, %18, %13
  %50 = call ptr @Perl_sv_2cv(ptr noundef nonnull %15, ptr noundef nonnull %1, ptr noundef nonnull %2, i32 noundef 0) #13
  %51 = icmp eq ptr %50, null
  br i1 %51, label %92, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.cv, ptr %50, i64 0, i32 2
  %54 = load i32, ptr %53, align 4, !tbaa !69
  %55 = and i32 %54, 1024
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %92, label %57

57:                                               ; preds = %52
  %58 = and i32 %54, 255
  %59 = icmp eq i32 %58, 13
  br i1 %59, label %60, label %68

60:                                               ; preds = %57
  %61 = load ptr, ptr %50, align 8, !tbaa !29
  %62 = getelementptr inbounds %struct.xpvcv, ptr %61, i64 0, i32 12
  %63 = load i32, ptr %62, align 4, !tbaa !35
  %64 = and i32 %63, 8192
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %struct.cv, ptr %50, i64 0, i32 3
  %67 = load ptr, ptr %66, align 8, !tbaa !24
  br i1 %65, label %81, label %72

68:                                               ; preds = %57
  %69 = getelementptr inbounds %struct.cv, ptr %50, i64 0, i32 3
  %70 = load ptr, ptr %69, align 8, !tbaa !24
  %71 = load ptr, ptr %50, align 8, !tbaa !29
  br label %81

72:                                               ; preds = %60
  %73 = getelementptr inbounds %struct.xpv, ptr %61, i64 0, i32 2
  %74 = load i64, ptr %73, align 8, !tbaa !55
  %75 = getelementptr inbounds i8, ptr %67, i64 %74
  %76 = getelementptr inbounds i8, ptr %75, i64 1
  %77 = getelementptr inbounds %struct.xpv, ptr %61, i64 0, i32 3
  %78 = load i64, ptr %77, align 8, !tbaa !24
  %79 = add i64 %78, -2
  %80 = sub i64 %79, %74
  br label %86

81:                                               ; preds = %60, %68
  %82 = phi ptr [ %71, %68 ], [ %61, %60 ]
  %83 = phi ptr [ %70, %68 ], [ %67, %60 ]
  %84 = getelementptr inbounds %struct.xpv, ptr %82, i64 0, i32 2
  %85 = load i64, ptr %84, align 8, !tbaa !55
  br label %86

86:                                               ; preds = %72, %81
  %87 = phi ptr [ %76, %72 ], [ %83, %81 ]
  %88 = phi i64 [ %80, %72 ], [ %85, %81 ]
  %89 = and i32 %54, 536870912
  %90 = or i32 %89, 524288
  %91 = call ptr @Perl_newSVpvn_flags(ptr noundef %87, i64 noundef %88, i32 noundef %90) #13
  br label %92

92:                                               ; preds = %45, %49, %52, %86
  %93 = phi ptr [ %48, %45 ], [ %91, %86 ], [ @PL_sv_undef, %52 ], [ @PL_sv_undef, %49 ]
  store ptr %93, ptr %3, align 8, !tbaa !5
  store ptr %3, ptr @PL_stack_sp, align 8, !tbaa !5
  %94 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %95 = load ptr, ptr %94, align 8, !tbaa !13
  br label %96

96:                                               ; preds = %34, %92
  %97 = phi ptr [ %95, %92 ], [ %44, %34 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  ret ptr %97
}

declare ptr @Perl_sv_mortalcopy_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #4

declare i32 @Perl_keyword(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

declare ptr @Perl_core_prototype(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

declare ptr @Perl_newSVpvn_flags(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_anoncode() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %5 = load i64, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = load ptr, ptr %7, align 8, !tbaa !29
  %9 = getelementptr inbounds %struct.xpvcv, ptr %8, i64 0, i32 12
  %10 = load i32, ptr %9, align 4, !tbaa !35
  %11 = and i32 %10, 32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %0
  %14 = tail call ptr @Perl_cv_clone(ptr noundef nonnull %7) #13
  %15 = tail call ptr @Perl_sv_2mortal(ptr noundef %14) #13
  br label %16

16:                                               ; preds = %0, %13
  %17 = phi ptr [ %15, %13 ], [ %7, %0 ]
  %18 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %19 = ptrtoint ptr %18 to i64
  %20 = ptrtoint ptr %1 to i64
  %21 = sub i64 %19, %20
  %22 = icmp slt i64 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = tail call ptr @Perl_stack_grow(ptr noundef %1, ptr noundef %1, i64 noundef 1) #13
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi ptr [ %24, %23 ], [ %1, %16 ]
  %27 = getelementptr inbounds ptr, ptr %26, i64 1
  store ptr %17, ptr %27, align 8, !tbaa !5
  store ptr %27, ptr @PL_stack_sp, align 8, !tbaa !5
  %28 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %29 = load ptr, ptr %28, align 8, !tbaa !13
  ret ptr %29
}

declare ptr @Perl_cv_clone(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_srefgen() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr %1, align 8, !tbaa !5
  %3 = tail call fastcc ptr @S_refto(ptr noundef %2)
  store ptr %3, ptr %1, align 8, !tbaa !5
  %4 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %5 = load ptr, ptr %4, align 8, !tbaa !13
  ret ptr %5
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_refto(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 4, !tbaa !57
  %4 = trunc i32 %3 to i8
  switch i8 %4, label %36 [
    i8 10, label %5
    i8 11, label %25
  ]

5:                                                ; preds = %1
  %6 = load ptr, ptr %0, align 8, !tbaa !26
  %7 = getelementptr inbounds %struct.xpvlv, ptr %6, i64 0, i32 9
  %8 = load i8, ptr %7, align 8, !tbaa !59
  %9 = icmp eq i8 %8, 121
  br i1 %9, label %10, label %36

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.xpvlv, ptr %6, i64 0, i32 7
  %12 = load i64, ptr %11, align 8, !tbaa !70
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  tail call void @Perl_vivify_defelem(ptr noundef nonnull %0) #13
  %15 = load ptr, ptr %0, align 8, !tbaa !26
  br label %16

16:                                               ; preds = %14, %10
  %17 = phi ptr [ %15, %14 ], [ %6, %10 ]
  %18 = getelementptr inbounds %struct.xpvlv, ptr %17, i64 0, i32 8
  %19 = load ptr, ptr %18, align 8, !tbaa !61
  %20 = icmp eq ptr %19, null
  br i1 %20, label %46, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 1
  %23 = load i32, ptr %22, align 8, !tbaa !44
  %24 = add i32 %23, 1
  store i32 %24, ptr %22, align 8, !tbaa !44
  br label %46

25:                                               ; preds = %1
  %26 = and i32 %3, -1073741824
  %27 = icmp eq i32 %26, -2147483648
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  tail call void @Perl_av_reify(ptr noundef nonnull %0) #13
  %29 = load i32, ptr %2, align 4, !tbaa !16
  br label %30

30:                                               ; preds = %28, %25
  %31 = phi i32 [ %29, %28 ], [ %3, %25 ]
  %32 = and i32 %31, -524289
  store i32 %32, ptr %2, align 4, !tbaa !16
  %33 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  %34 = load i32, ptr %33, align 8, !tbaa !44
  %35 = add i32 %34, 1
  store i32 %35, ptr %33, align 8, !tbaa !44
  br label %46

36:                                               ; preds = %1, %5
  %37 = and i32 %3, 131072
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %36
  %40 = tail call ptr @Perl_newSVsv(ptr noundef nonnull %0) #13
  br label %46

41:                                               ; preds = %36
  %42 = and i32 %3, -524289
  store i32 %42, ptr %2, align 4, !tbaa !16
  %43 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  %44 = load i32, ptr %43, align 8, !tbaa !44
  %45 = add i32 %44, 1
  store i32 %45, ptr %43, align 8, !tbaa !44
  br label %46

46:                                               ; preds = %16, %30, %41, %39, %21
  %47 = phi ptr [ %19, %21 ], [ %0, %30 ], [ %40, %39 ], [ %0, %41 ], [ @PL_sv_undef, %16 ]
  %48 = tail call ptr @Perl_sv_newmortal() #13
  tail call void @Perl_sv_upgrade(ptr noundef %48, i32 noundef 1) #13
  %49 = getelementptr inbounds %struct.sv, ptr %48, i64 0, i32 3
  store ptr %47, ptr %49, align 8, !tbaa !24
  %50 = getelementptr inbounds %struct.sv, ptr %48, i64 0, i32 2
  %51 = load i32, ptr %50, align 4, !tbaa !16
  %52 = or i32 %51, 2048
  store i32 %52, ptr %50, align 4, !tbaa !16
  ret ptr %48
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_refgen() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %4 = getelementptr inbounds i32, ptr %3, i64 -1
  store ptr %4, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %5 = load i32, ptr %3, align 4, !tbaa !57
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds ptr, ptr %2, i64 %6
  %8 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.op, ptr %8, i64 0, i32 5
  %10 = load i8, ptr %9, align 2, !tbaa !9
  %11 = and i8 %10, 3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %0
  %14 = zext i8 %11 to i32
  br label %17

15:                                               ; preds = %0
  %16 = tail call i32 @Perl_block_gimme() #13
  br label %17

17:                                               ; preds = %15, %13
  %18 = phi i32 [ %14, %13 ], [ %16, %15 ]
  %19 = icmp eq i32 %18, 3
  br i1 %19, label %46, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds ptr, ptr %7, i64 1
  %22 = icmp ugt ptr %21, %1
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %1, align 8, !tbaa !5
  store ptr %24, ptr %21, align 8, !tbaa !5
  br label %42

25:                                               ; preds = %20
  %26 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %27 = ptrtoint ptr %26 to i64
  %28 = ptrtoint ptr %1 to i64
  %29 = sub i64 %27, %28
  %30 = icmp slt i64 %29, 8
  br i1 %30, label %31, label %40

31:                                               ; preds = %25
  %32 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %33 = ptrtoint ptr %21 to i64
  %34 = ptrtoint ptr %32 to i64
  %35 = sub i64 %33, %34
  %36 = ashr exact i64 %35, 3
  %37 = tail call ptr @Perl_stack_grow(ptr noundef %1, ptr noundef %1, i64 noundef 1) #13
  %38 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %39 = getelementptr inbounds ptr, ptr %38, i64 %36
  br label %40

40:                                               ; preds = %25, %31
  %41 = phi ptr [ %39, %31 ], [ %21, %25 ]
  store ptr @PL_sv_undef, ptr %41, align 8, !tbaa !5
  br label %42

42:                                               ; preds = %40, %23
  %43 = phi ptr [ %24, %23 ], [ @PL_sv_undef, %40 ]
  %44 = phi ptr [ %21, %23 ], [ %41, %40 ]
  %45 = tail call fastcc ptr @S_refto(ptr noundef %43)
  store ptr %45, ptr %44, align 8, !tbaa !5
  br label %66

46:                                               ; preds = %17
  %47 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !71
  %48 = ptrtoint ptr %1 to i64
  %49 = ptrtoint ptr %7 to i64
  %50 = sub i64 %48, %49
  %51 = ashr exact i64 %50, 3
  %52 = add nsw i64 %47, %51
  %53 = load i64, ptr @PL_tmps_max, align 8, !tbaa !71
  %54 = icmp slt i64 %52, %53
  br i1 %54, label %57, label %55

55:                                               ; preds = %46
  %56 = tail call i64 @Perl_tmps_grow_p(i64 noundef %52) #13
  br label %57

57:                                               ; preds = %46, %55
  %58 = getelementptr inbounds ptr, ptr %7, i64 1
  %59 = icmp ugt ptr %58, %1
  br i1 %59, label %66, label %60

60:                                               ; preds = %57, %60
  %61 = phi ptr [ %64, %60 ], [ %58, %57 ]
  %62 = load ptr, ptr %61, align 8, !tbaa !5
  %63 = tail call fastcc ptr @S_refto(ptr noundef %62)
  store ptr %63, ptr %61, align 8, !tbaa !5
  %64 = getelementptr inbounds ptr, ptr %61, i64 1
  %65 = icmp ugt ptr %64, %1
  br i1 %65, label %66, label %60, !llvm.loop !72

66:                                               ; preds = %60, %57, %42
  %67 = phi ptr [ %44, %42 ], [ %1, %57 ], [ %1, %60 ]
  store ptr %67, ptr @PL_stack_sp, align 8, !tbaa !5
  %68 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %69 = load ptr, ptr %68, align 8, !tbaa !13
  ret ptr %69
}

declare i64 @Perl_tmps_grow_p(i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_ref() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr %1, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 2097152
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %0
  %8 = tail call i32 @Perl_mg_get(ptr noundef nonnull %2) #13
  %9 = load i32, ptr %3, align 4, !tbaa !16
  br label %10

10:                                               ; preds = %0, %7
  %11 = phi i32 [ %4, %0 ], [ %9, %7 ]
  %12 = and i32 %11, 2048
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store ptr @PL_sv_no, ptr %1, align 8, !tbaa !5
  br label %31

15:                                               ; preds = %10
  %16 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %17 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %18 = getelementptr inbounds %struct.op, ptr %17, i64 0, i32 3
  %19 = load i64, ptr %18, align 8, !tbaa !14
  %20 = getelementptr inbounds ptr, ptr %16, i64 %19
  %21 = load ptr, ptr %20, align 8, !tbaa !5
  store ptr %21, ptr %1, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !24
  %24 = tail call ptr @Perl_sv_ref(ptr noundef %21, ptr noundef %23, i32 noundef 1) #13
  %25 = getelementptr inbounds %struct.sv, ptr %24, i64 0, i32 2
  %26 = load i32, ptr %25, align 4, !tbaa !16
  %27 = and i32 %26, 4194304
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %15
  %30 = tail call i32 @Perl_mg_set(ptr noundef nonnull %24) #13
  br label %31

31:                                               ; preds = %29, %15, %14
  %32 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %33 = load ptr, ptr %32, align 8, !tbaa !13
  ret ptr %33
}

declare ptr @Perl_sv_ref(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_bless() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 6
  %5 = load i8, ptr %4, align 1, !tbaa !15
  %6 = and i8 %5, 15
  %7 = icmp eq i8 %6, 1
  br i1 %7, label %8, label %18

8:                                                ; preds = %107, %0
  %9 = phi ptr [ %2, %0 ], [ %19, %107 ]
  %10 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.cop, ptr %10, i64 0, i32 8
  %12 = load ptr, ptr %11, align 8, !tbaa !47
  %13 = getelementptr inbounds %struct.hv, ptr %12, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !40
  %15 = and i32 %14, 255
  %16 = icmp eq i32 %15, 12
  br i1 %16, label %108, label %17

17:                                               ; preds = %8
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.9) #13
  br label %108

18:                                               ; preds = %0
  %19 = getelementptr inbounds ptr, ptr %2, i64 -1
  %20 = load ptr, ptr %2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  %21 = icmp eq ptr %20, null
  br i1 %21, label %107, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.sv, ptr %20, i64 0, i32 2
  %24 = load i32, ptr %23, align 4, !tbaa !16
  %25 = and i32 %24, 2097152
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = tail call i32 @Perl_mg_get(ptr noundef nonnull %20) #13
  %29 = load i32, ptr %23, align 4, !tbaa !16
  br label %30

30:                                               ; preds = %22, %27
  %31 = phi i32 [ %24, %22 ], [ %29, %27 ]
  %32 = and i32 %31, 2048
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %80, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.sv, ptr %20, i64 0, i32 3
  %36 = load ptr, ptr %35, align 8, !tbaa !24
  %37 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %38 = load i32, ptr %37, align 4, !tbaa !16
  %39 = and i32 %38, 1048576
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %34
  %42 = load ptr, ptr %36, align 8, !tbaa !26
  %43 = load ptr, ptr %42, align 8, !tbaa !38
  %44 = getelementptr inbounds %struct.hv, ptr %43, i64 0, i32 2
  %45 = load i32, ptr %44, align 4, !tbaa !40
  %46 = and i32 %45, 268435456
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %62, %67, %73, %34, %41
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.10) #13
  %49 = load i32, ptr %23, align 4, !tbaa !16
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %31, %41 ]
  %52 = and i32 %51, 2098176
  %53 = icmp eq i32 %52, 1024
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load ptr, ptr %20, align 8, !tbaa !26
  %56 = getelementptr inbounds %struct.xpv, ptr %55, i64 0, i32 2
  %57 = load i64, ptr %56, align 8, !tbaa !55
  store i64 %57, ptr %1, align 8, !tbaa !71
  %58 = load ptr, ptr %35, align 8, !tbaa !24
  br label %62

59:                                               ; preds = %50
  %60 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %20, ptr noundef nonnull %1, i32 noundef 32) #13
  %61 = load i32, ptr %23, align 4, !tbaa !16
  br label %62

62:                                               ; preds = %59, %54
  %63 = phi i32 [ %51, %54 ], [ %61, %59 ]
  %64 = phi ptr [ %58, %54 ], [ %60, %59 ]
  %65 = and i32 %63, 2048
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %48, label %67

67:                                               ; preds = %62
  %68 = load ptr, ptr %35, align 8, !tbaa !24
  %69 = getelementptr inbounds %struct.sv, ptr %68, i64 0, i32 2
  %70 = load i32, ptr %69, align 4, !tbaa !16
  %71 = and i32 %70, 1048576
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %48, label %73

73:                                               ; preds = %67
  %74 = load ptr, ptr %68, align 8, !tbaa !26
  %75 = load ptr, ptr %74, align 8, !tbaa !38
  %76 = getelementptr inbounds %struct.hv, ptr %75, i64 0, i32 2
  %77 = load i32, ptr %76, align 4, !tbaa !40
  %78 = and i32 %77, 268435456
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %48, label %91

80:                                               ; preds = %30
  %81 = and i32 %31, 2098176
  %82 = icmp eq i32 %81, 1024
  br i1 %82, label %83, label %89

83:                                               ; preds = %80
  %84 = load ptr, ptr %20, align 8, !tbaa !26
  %85 = getelementptr inbounds %struct.xpv, ptr %84, i64 0, i32 2
  %86 = load i64, ptr %85, align 8, !tbaa !55
  store i64 %86, ptr %1, align 8, !tbaa !71
  %87 = getelementptr inbounds %struct.sv, ptr %20, i64 0, i32 3
  %88 = load ptr, ptr %87, align 8, !tbaa !24
  br label %94

89:                                               ; preds = %80
  %90 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %20, ptr noundef nonnull %1, i32 noundef 32) #13
  br label %91

91:                                               ; preds = %73, %89
  %92 = phi ptr [ %90, %89 ], [ %64, %73 ]
  %93 = load i64, ptr %1, align 8, !tbaa !71
  br label %94

94:                                               ; preds = %91, %83
  %95 = phi i64 [ %93, %91 ], [ %86, %83 ]
  %96 = phi ptr [ %92, %91 ], [ %88, %83 ]
  %97 = icmp eq i64 %95, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %94
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 12, ptr noundef nonnull @.str.11) #13
  %99 = load i64, ptr %1, align 8, !tbaa !71
  br label %100

100:                                              ; preds = %94, %98
  %101 = phi i64 [ %95, %94 ], [ %99, %98 ]
  %102 = trunc i64 %101 to i32
  %103 = load i32, ptr %23, align 4, !tbaa !16
  %104 = and i32 %103, 536870912
  %105 = or i32 %104, 1
  %106 = call ptr @Perl_gv_stashpvn(ptr noundef %96, i32 noundef %102, i32 noundef %105) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  br label %108

107:                                              ; preds = %18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  br label %8

108:                                              ; preds = %100, %8, %17
  %109 = phi ptr [ %12, %17 ], [ %12, %8 ], [ %106, %100 ]
  %110 = phi ptr [ %9, %17 ], [ %9, %8 ], [ %19, %100 ]
  %111 = load ptr, ptr %110, align 8, !tbaa !5
  %112 = call ptr @Perl_sv_bless(ptr noundef %111, ptr noundef %109) #13
  store ptr %110, ptr @PL_stack_sp, align 8, !tbaa !5
  %113 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %114 = load ptr, ptr %113, align 8, !tbaa !13
  ret ptr %114
}

declare ptr @Perl_sv_2pv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_ck_warner(i32 noundef, ptr noundef, ...) local_unnamed_addr #2

declare ptr @Perl_gv_stashpvn(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_sv_bless(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_gelem() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %3 = getelementptr inbounds ptr, ptr %2, i64 -1
  %4 = load ptr, ptr %2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  %5 = getelementptr inbounds %struct.sv, ptr %4, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !16
  %7 = and i32 %6, 2098176
  %8 = icmp eq i32 %7, 1024
  br i1 %8, label %9, label %15

9:                                                ; preds = %0
  %10 = load ptr, ptr %4, align 8, !tbaa !26
  %11 = getelementptr inbounds %struct.xpv, ptr %10, i64 0, i32 2
  %12 = load i64, ptr %11, align 8, !tbaa !55
  store i64 %12, ptr %1, align 8, !tbaa !71
  %13 = getelementptr inbounds %struct.sv, ptr %4, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !24
  br label %17

15:                                               ; preds = %0
  %16 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %4, ptr noundef nonnull %1, i32 noundef 34) #13
  br label %17

17:                                               ; preds = %15, %9
  %18 = phi ptr [ %14, %9 ], [ %16, %15 ]
  %19 = load ptr, ptr %3, align 8, !tbaa !5
  %20 = icmp eq ptr %18, null
  br i1 %20, label %181, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds i8, ptr %18, i64 1
  %23 = load i8, ptr %18, align 1, !tbaa !24
  %24 = sext i8 %23 to i32
  switch i32 %24, label %181 [
    i32 65, label %25
    i32 67, label %43
    i32 70, label %57
    i32 71, label %73
    i32 72, label %79
    i32 73, label %89
    i32 78, label %103
    i32 80, label %114
    i32 83, label %152
  ]

25:                                               ; preds = %21
  %26 = load i64, ptr %1, align 8, !tbaa !71
  %27 = icmp eq i64 %26, 5
  br i1 %27, label %28, label %181

28:                                               ; preds = %25
  %29 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %22, ptr noundef nonnull dereferenceable(5) @.str.12) #14
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %181

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.gv, ptr %19, i64 0, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !24
  %34 = getelementptr inbounds %struct.gp, ptr %33, i64 0, i32 6
  %35 = load ptr, ptr %34, align 8, !tbaa !73
  %36 = icmp eq ptr %35, null
  br i1 %36, label %181, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %struct.av, ptr %35, i64 0, i32 2
  %39 = load i32, ptr %38, align 4, !tbaa !74
  %40 = and i32 %39, -1073741824
  %41 = icmp eq i32 %40, -2147483648
  br i1 %41, label %42, label %173

42:                                               ; preds = %37
  call void @Perl_av_reify(ptr noundef nonnull %35) #13
  br label %173

43:                                               ; preds = %21
  %44 = load i64, ptr %1, align 8, !tbaa !71
  %45 = icmp eq i64 %44, 4
  br i1 %45, label %46, label %181

46:                                               ; preds = %43
  %47 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %22, ptr noundef nonnull dereferenceable(4) @.str.13) #14
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %181

49:                                               ; preds = %46
  %50 = getelementptr inbounds %struct.gv, ptr %19, i64 0, i32 3
  %51 = load ptr, ptr %50, align 8, !tbaa !24
  %52 = getelementptr inbounds %struct.gp, ptr %51, i64 0, i32 3
  %53 = load i32, ptr %52, align 8, !tbaa !75
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %181

55:                                               ; preds = %49
  %56 = getelementptr inbounds %struct.gp, ptr %51, i64 0, i32 2
  br label %167

57:                                               ; preds = %21
  %58 = load i64, ptr %1, align 8, !tbaa !71
  switch i64 %58, label %181 [
    i64 10, label %59
    i64 6, label %66
  ]

59:                                               ; preds = %57
  %60 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %22, ptr noundef nonnull dereferenceable(10) @.str.14) #14
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %181

62:                                               ; preds = %59
  call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 2, ptr noundef nonnull @.str.15) #13
  %63 = getelementptr inbounds %struct.gv, ptr %19, i64 0, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !24
  %65 = getelementptr inbounds %struct.gp, ptr %64, i64 0, i32 1
  br label %167

66:                                               ; preds = %57
  %67 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %22, ptr noundef nonnull dereferenceable(6) @.str.16) #14
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %181

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.gv, ptr %19, i64 0, i32 3
  %71 = load ptr, ptr %70, align 8, !tbaa !24
  %72 = getelementptr inbounds %struct.gp, ptr %71, i64 0, i32 7
  br label %167

73:                                               ; preds = %21
  %74 = load i64, ptr %1, align 8, !tbaa !71
  %75 = icmp eq i64 %74, 4
  br i1 %75, label %76, label %181

76:                                               ; preds = %73
  %77 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %22, ptr noundef nonnull dereferenceable(4) @.str.17) #14
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %170, label %181

79:                                               ; preds = %21
  %80 = load i64, ptr %1, align 8, !tbaa !71
  %81 = icmp eq i64 %80, 4
  br i1 %81, label %82, label %181

82:                                               ; preds = %79
  %83 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %22, ptr noundef nonnull dereferenceable(4) @.str.18) #14
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %181

85:                                               ; preds = %82
  %86 = getelementptr inbounds %struct.gv, ptr %19, i64 0, i32 3
  %87 = load ptr, ptr %86, align 8, !tbaa !24
  %88 = getelementptr inbounds %struct.gp, ptr %87, i64 0, i32 5
  br label %167

89:                                               ; preds = %21
  %90 = load i8, ptr %22, align 1, !tbaa !24
  %91 = icmp eq i8 %90, 79
  br i1 %91, label %92, label %181

92:                                               ; preds = %89
  %93 = getelementptr inbounds i8, ptr %18, i64 2
  %94 = load i8, ptr %93, align 1, !tbaa !24
  %95 = icmp eq i8 %94, 0
  %96 = load i64, ptr %1, align 8
  %97 = icmp eq i64 %96, 2
  %98 = select i1 %95, i1 %97, i1 false
  br i1 %98, label %99, label %181

99:                                               ; preds = %92
  %100 = getelementptr inbounds %struct.gv, ptr %19, i64 0, i32 3
  %101 = load ptr, ptr %100, align 8, !tbaa !24
  %102 = getelementptr inbounds %struct.gp, ptr %101, i64 0, i32 1
  br label %167

103:                                              ; preds = %21
  %104 = load i64, ptr %1, align 8, !tbaa !71
  %105 = icmp eq i64 %104, 4
  br i1 %105, label %106, label %181

106:                                              ; preds = %103
  %107 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %22, ptr noundef nonnull dereferenceable(4) @.str.19) #14
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %181

109:                                              ; preds = %106
  %110 = load ptr, ptr %19, align 8, !tbaa !76
  %111 = getelementptr inbounds %struct.xpvgv, ptr %110, i64 0, i32 4
  %112 = load ptr, ptr %111, align 8, !tbaa !24
  %113 = call ptr @Perl_newSVhek(ptr noundef %112) #13
  br label %176

114:                                              ; preds = %21
  %115 = load i64, ptr %1, align 8, !tbaa !71
  %116 = icmp eq i64 %115, 7
  br i1 %116, label %117, label %181

117:                                              ; preds = %114
  %118 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %22, ptr noundef nonnull dereferenceable(7) @.str.20) #14
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %181

120:                                              ; preds = %117
  %121 = load ptr, ptr %19, align 8, !tbaa !76
  %122 = getelementptr inbounds %struct.xpvgv, ptr %121, i64 0, i32 5
  %123 = load ptr, ptr %122, align 8, !tbaa !24
  %124 = icmp eq ptr %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %struct.hv, ptr %123, i64 0, i32 2
  %127 = load i32, ptr %126, align 4, !tbaa !40
  %128 = and i32 %127, 33554432
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %150, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %struct.hv, ptr %123, i64 0, i32 3
  %132 = load ptr, ptr %131, align 8, !tbaa !24
  %133 = load ptr, ptr %123, align 8, !tbaa !49
  %134 = getelementptr inbounds %struct.xpvhv, ptr %133, i64 0, i32 3
  %135 = load i64, ptr %134, align 8, !tbaa !50
  %136 = add i64 %135, 1
  %137 = getelementptr inbounds ptr, ptr %132, i64 %136
  %138 = load ptr, ptr %137, align 8, !tbaa !24
  %139 = icmp eq ptr %138, null
  br i1 %139, label %150, label %140

140:                                              ; preds = %130
  %141 = getelementptr inbounds %struct.xpvhv_aux, ptr %137, i64 0, i32 4
  %142 = load i32, ptr %141, align 4, !tbaa !51
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %147, label %144

144:                                              ; preds = %140
  %145 = load ptr, ptr %138, align 8, !tbaa !5
  %146 = icmp eq ptr %145, null
  br i1 %146, label %150, label %147

147:                                              ; preds = %140, %144
  %148 = phi ptr [ %145, %144 ], [ %138, %140 ]
  %149 = call ptr @Perl_newSVhek(ptr noundef nonnull %148) #13
  br label %176

150:                                              ; preds = %120, %125, %130, %144
  %151 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.21, i64 noundef 8) #13
  br label %176

152:                                              ; preds = %21
  %153 = load i64, ptr %1, align 8, !tbaa !71
  %154 = icmp eq i64 %153, 6
  br i1 %154, label %155, label %181

155:                                              ; preds = %152
  %156 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %22, ptr noundef nonnull dereferenceable(6) @.str.22) #14
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %181

158:                                              ; preds = %155
  %159 = getelementptr inbounds %struct.gv, ptr %19, i64 0, i32 3
  %160 = load ptr, ptr %159, align 8, !tbaa !24
  %161 = load ptr, ptr %160, align 8, !tbaa !5
  %162 = icmp eq ptr %161, null
  br i1 %162, label %163, label %173

163:                                              ; preds = %158
  %164 = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %19, i32 noundef 0) #13
  %165 = getelementptr inbounds %struct.gv, ptr %164, i64 0, i32 3
  %166 = load ptr, ptr %165, align 8, !tbaa !24
  br label %167

167:                                              ; preds = %55, %99, %85, %62, %69, %163
  %168 = phi ptr [ %166, %163 ], [ %72, %69 ], [ %65, %62 ], [ %88, %85 ], [ %102, %99 ], [ %56, %55 ]
  %169 = load ptr, ptr %168, align 8, !tbaa !5
  br label %170

170:                                              ; preds = %167, %76
  %171 = phi ptr [ %19, %76 ], [ %169, %167 ]
  %172 = icmp eq ptr %171, null
  br i1 %172, label %181, label %173

173:                                              ; preds = %158, %42, %37, %170
  %174 = phi ptr [ %171, %170 ], [ %35, %37 ], [ %35, %42 ], [ %161, %158 ]
  %175 = call ptr @Perl_newRV(ptr noundef nonnull %174) #13
  br label %176

176:                                              ; preds = %147, %150, %109, %173
  %177 = phi ptr [ %175, %173 ], [ %151, %150 ], [ %149, %147 ], [ %113, %109 ]
  %178 = icmp eq ptr %177, null
  br i1 %178, label %181, label %179

179:                                              ; preds = %176
  %180 = call ptr @Perl_sv_2mortal(ptr noundef nonnull %177) #13
  br label %181

181:                                              ; preds = %57, %59, %17, %21, %155, %152, %117, %114, %106, %103, %92, %89, %82, %79, %73, %66, %46, %43, %28, %31, %25, %49, %76, %170, %176, %179
  %182 = phi ptr [ %177, %179 ], [ @PL_sv_undef, %176 ], [ @PL_sv_undef, %170 ], [ @PL_sv_undef, %76 ], [ @PL_sv_undef, %49 ], [ @PL_sv_undef, %25 ], [ @PL_sv_undef, %31 ], [ @PL_sv_undef, %28 ], [ @PL_sv_undef, %43 ], [ @PL_sv_undef, %46 ], [ @PL_sv_undef, %66 ], [ @PL_sv_undef, %73 ], [ @PL_sv_undef, %79 ], [ @PL_sv_undef, %82 ], [ @PL_sv_undef, %89 ], [ @PL_sv_undef, %92 ], [ @PL_sv_undef, %103 ], [ @PL_sv_undef, %106 ], [ @PL_sv_undef, %114 ], [ @PL_sv_undef, %117 ], [ @PL_sv_undef, %152 ], [ @PL_sv_undef, %155 ], [ @PL_sv_undef, %21 ], [ @PL_sv_undef, %17 ], [ @PL_sv_undef, %59 ], [ @PL_sv_undef, %57 ]
  store ptr %182, ptr %3, align 8, !tbaa !5
  store ptr %3, ptr @PL_stack_sp, align 8, !tbaa !5
  %183 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %184 = load ptr, ptr %183, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  ret ptr %184
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #4

declare void @Perl_av_reify(ptr noundef) local_unnamed_addr #2

declare void @Perl_ck_warner_d(i32 noundef, ptr noundef, ...) local_unnamed_addr #2

declare ptr @Perl_newSVhek(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_newSVpvn(ptr noundef, i64 noundef) local_unnamed_addr #2

declare ptr @Perl_newRV(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_study() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 2098176
  %7 = icmp eq i32 %6, 1024
  br i1 %7, label %8, label %11

8:                                                ; preds = %0
  %9 = load ptr, ptr %3, align 8, !tbaa !26
  %10 = getelementptr inbounds %struct.xpv, ptr %9, i64 0, i32 2
  br label %13

11:                                               ; preds = %0
  %12 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %3, ptr noundef nonnull %1, i32 noundef 2) #13
  br label %13

13:                                               ; preds = %11, %8
  %14 = phi ptr [ %1, %11 ], [ %10, %8 ]
  %15 = load i64, ptr %14, align 8
  %16 = add i64 %15, -2147483648
  %17 = icmp ult i64 %16, -2147483647
  br i1 %17, label %29, label %18

18:                                               ; preds = %13
  %19 = load i32, ptr %4, align 4, !tbaa !16
  %20 = and i32 %19, 536871936
  %21 = icmp eq i32 %20, 1024
  br i1 %21, label %22, label %29

22:                                               ; preds = %18
  %23 = and i32 %19, 1073741824
  %24 = icmp eq i32 %23, 0
  %25 = and i32 %19, 49152
  %26 = icmp eq i32 %25, 49152
  %27 = or i1 %24, %26
  %28 = select i1 %27, ptr @PL_sv_yes, ptr @PL_sv_no
  br label %29

29:                                               ; preds = %22, %13, %18
  %30 = phi ptr [ @PL_sv_no, %18 ], [ @PL_sv_no, %13 ], [ %28, %22 ]
  store ptr %30, ptr %2, align 8, !tbaa !5
  %31 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %32 = load ptr, ptr %31, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  ret ptr %32
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_trans() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 5
  %5 = load i8, ptr %4, align 2, !tbaa !9
  %6 = and i8 %5, 64
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %0
  %9 = getelementptr inbounds ptr, ptr %2, i64 -1
  br label %39

10:                                               ; preds = %0
  %11 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %12 = ptrtoint ptr %11 to i64
  %13 = ptrtoint ptr %2 to i64
  %14 = sub i64 %12, %13
  %15 = icmp slt i64 %14, 8
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = tail call ptr @Perl_stack_grow(ptr noundef %2, ptr noundef %2, i64 noundef 1) #13
  %18 = load ptr, ptr @PL_op, align 8, !tbaa !5
  br label %19

19:                                               ; preds = %10, %16
  %20 = phi ptr [ %18, %16 ], [ %3, %10 ]
  %21 = phi ptr [ %17, %16 ], [ %2, %10 ]
  %22 = getelementptr inbounds %struct.op, ptr %20, i64 0, i32 3
  %23 = load i64, ptr %22, align 8, !tbaa !14
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %19
  %26 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %27 = getelementptr inbounds ptr, ptr %26, i64 %23
  br label %39

28:                                               ; preds = %19
  %29 = load ptr, ptr @PL_defgv, align 8, !tbaa !5
  %30 = getelementptr inbounds %struct.gv, ptr %29, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8, !tbaa !24
  %32 = load ptr, ptr %31, align 8, !tbaa !77
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %39

34:                                               ; preds = %28
  %35 = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %29, i32 noundef 0) #13
  %36 = getelementptr inbounds %struct.gv, ptr %35, i64 0, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !24
  %38 = load ptr, ptr @PL_op, align 8, !tbaa !5
  br label %39

39:                                               ; preds = %34, %28, %25, %8
  %40 = phi ptr [ %3, %8 ], [ %20, %25 ], [ %38, %34 ], [ %20, %28 ]
  %41 = phi ptr [ %2, %8 ], [ %27, %25 ], [ %37, %34 ], [ %31, %28 ]
  %42 = phi ptr [ %9, %8 ], [ %21, %25 ], [ %21, %34 ], [ %21, %28 ]
  %43 = load ptr, ptr %41, align 8, !tbaa !5
  %44 = getelementptr inbounds %struct.op, ptr %40, i64 0, i32 4
  %45 = load i16, ptr %44, align 8
  %46 = and i16 %45, 511
  %47 = icmp eq i16 %46, 36
  br i1 %47, label %48, label %72

48:                                               ; preds = %39
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  %49 = getelementptr inbounds %struct.sv, ptr %43, i64 0, i32 2
  %50 = load i32, ptr %49, align 4, !tbaa !16
  %51 = and i32 %50, 2098176
  %52 = icmp eq i32 %51, 1024
  br i1 %52, label %53, label %59

53:                                               ; preds = %48
  %54 = load ptr, ptr %43, align 8, !tbaa !26
  %55 = getelementptr inbounds %struct.xpv, ptr %54, i64 0, i32 2
  %56 = load i64, ptr %55, align 8, !tbaa !55
  store i64 %56, ptr %1, align 8, !tbaa !71
  %57 = getelementptr inbounds %struct.sv, ptr %43, i64 0, i32 3
  %58 = load ptr, ptr %57, align 8, !tbaa !24
  br label %63

59:                                               ; preds = %48
  %60 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %43, ptr noundef nonnull %1, i32 noundef 2) #13
  %61 = load i64, ptr %1, align 8, !tbaa !71
  %62 = load i32, ptr %49, align 4, !tbaa !16
  br label %63

63:                                               ; preds = %59, %53
  %64 = phi i32 [ %50, %53 ], [ %62, %59 ]
  %65 = phi i64 [ %56, %53 ], [ %61, %59 ]
  %66 = phi ptr [ %58, %53 ], [ %60, %59 ]
  %67 = and i32 %64, 536870912
  %68 = or i32 %67, 524288
  %69 = call ptr @Perl_newSVpvn_flags(ptr noundef %66, i64 noundef %65, i32 noundef %68) #13
  %70 = call i32 @Perl_do_trans(ptr noundef %69) #13
  %71 = getelementptr inbounds ptr, ptr %42, i64 1
  store ptr %69, ptr %71, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  br label %77

72:                                               ; preds = %39
  %73 = tail call ptr @Perl_sv_newmortal() #13
  %74 = getelementptr inbounds ptr, ptr %42, i64 1
  store ptr %73, ptr %74, align 8, !tbaa !5
  %75 = tail call i32 @Perl_do_trans(ptr noundef %43) #13
  %76 = sext i32 %75 to i64
  tail call void @Perl_sv_setiv(ptr noundef %73, i64 noundef %76) #13
  br label %77

77:                                               ; preds = %72, %63
  %78 = phi ptr [ %71, %63 ], [ %74, %72 ]
  store ptr %78, ptr @PL_stack_sp, align 8, !tbaa !5
  %79 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %80 = load ptr, ptr %79, align 8, !tbaa !13
  ret ptr %80
}

declare i32 @Perl_do_trans(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_schop() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %5 = load i64, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 4
  %9 = load i16, ptr %8, align 8
  %10 = and i16 %9, 511
  %11 = icmp eq i16 %10, 42
  %12 = load ptr, ptr %1, align 8, !tbaa !5
  %13 = tail call fastcc i64 @S_do_chomp(ptr noundef %7, ptr noundef %12, i1 noundef zeroext %11)
  br i1 %11, label %14, label %15

14:                                               ; preds = %0
  tail call void @Perl_sv_setiv(ptr noundef %7, i64 noundef %13) #13
  br label %15

15:                                               ; preds = %14, %0
  %16 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %17 = load i32, ptr %16, align 4, !tbaa !16
  %18 = and i32 %17, 4194304
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  %21 = tail call i32 @Perl_mg_set(ptr noundef nonnull %7) #13
  br label %22

22:                                               ; preds = %15, %20
  store ptr %7, ptr %1, align 8, !tbaa !5
  %23 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %24 = load ptr, ptr %23, align 8, !tbaa !13
  ret ptr %24
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i64 @S_do_chomp(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #13
  br i1 %2, label %7, label %38

7:                                                ; preds = %3
  %8 = load ptr, ptr @PL_rs, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !16
  %11 = and i32 %10, 65280
  %12 = icmp ne i32 %11, 0
  %13 = and i32 %10, 255
  %14 = icmp eq i32 %13, 8
  %15 = or i1 %12, %14
  %16 = and i32 %10, 16826623
  %17 = icmp eq i32 %16, 16777226
  %18 = or i1 %17, %15
  br i1 %18, label %19, label %369

19:                                               ; preds = %7
  %20 = and i32 %10, 2048
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %38, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !24
  %25 = getelementptr inbounds %struct.sv, ptr %24, i64 0, i32 2
  %26 = load i32, ptr %25, align 4, !tbaa !16
  %27 = and i32 %26, 2097408
  %28 = icmp eq i32 %27, 256
  br i1 %28, label %29, label %33

29:                                               ; preds = %22
  %30 = load ptr, ptr %24, align 8, !tbaa !26
  %31 = getelementptr inbounds %struct.xpviv, ptr %30, i64 0, i32 4
  %32 = load i64, ptr %31, align 8, !tbaa !24
  br label %35

33:                                               ; preds = %22
  %34 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %24, i32 noundef 2) #13
  br label %35

35:                                               ; preds = %33, %29
  %36 = phi i64 [ %32, %29 ], [ %34, %33 ]
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %369, label %38

38:                                               ; preds = %35, %19, %3
  %39 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %40 = load i32, ptr %39, align 4, !tbaa !16
  %41 = trunc i32 %40 to i8
  switch i8 %41, label %85 [
    i8 11, label %42
    i8 12, label %73
  ]

42:                                               ; preds = %38
  %43 = and i32 %40, 8388608
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = tail call i32 @Perl_mg_size(ptr noundef nonnull %1) #13
  br label %52

47:                                               ; preds = %42
  %48 = load ptr, ptr %1, align 8, !tbaa !18
  %49 = getelementptr inbounds %struct.xpvav, ptr %48, i64 0, i32 2
  %50 = load i64, ptr %49, align 8, !tbaa !20
  %51 = trunc i64 %50 to i32
  br label %52

52:                                               ; preds = %47, %45
  %53 = phi i32 [ %46, %45 ], [ %51, %47 ]
  %54 = icmp slt i32 %53, 0
  br i1 %54, label %369, label %55

55:                                               ; preds = %52
  %56 = add nuw i32 %53, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %55, %69
  %59 = phi i64 [ 0, %55 ], [ %71, %69 ]
  %60 = phi i64 [ 0, %55 ], [ %70, %69 ]
  %61 = tail call ptr @Perl_av_fetch(ptr noundef %1, i64 noundef %59, i32 noundef 0) #13
  %62 = icmp eq ptr %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %58
  %64 = load ptr, ptr %61, align 8, !tbaa !5
  %65 = icmp eq ptr %64, @PL_sv_undef
  br i1 %65, label %69, label %66

66:                                               ; preds = %63
  %67 = tail call fastcc i64 @S_do_chomp(ptr noundef %0, ptr noundef %64, i1 noundef zeroext %2)
  %68 = add i64 %67, %60
  br label %69

69:                                               ; preds = %58, %63, %66
  %70 = phi i64 [ %68, %66 ], [ %60, %63 ], [ %60, %58 ]
  %71 = add nuw nsw i64 %59, 1
  %72 = icmp eq i64 %71, %57
  br i1 %72, label %369, label %58, !llvm.loop !78

73:                                               ; preds = %38
  %74 = tail call i32 @Perl_hv_iterinit(ptr noundef nonnull %1) #13
  %75 = tail call ptr @Perl_hv_iternext_flags(ptr noundef nonnull %1, i32 noundef 0) #13
  %76 = icmp eq ptr %75, null
  br i1 %76, label %369, label %77

77:                                               ; preds = %73, %77
  %78 = phi ptr [ %83, %77 ], [ %75, %73 ]
  %79 = phi i64 [ %82, %77 ], [ 0, %73 ]
  %80 = tail call ptr @Perl_hv_iterval(ptr noundef %1, ptr noundef nonnull %78) #13
  %81 = tail call fastcc i64 @S_do_chomp(ptr noundef %0, ptr noundef %80, i1 noundef zeroext %2)
  %82 = add i64 %81, %79
  %83 = tail call ptr @Perl_hv_iternext_flags(ptr noundef %1, i32 noundef 0) #13
  %84 = icmp eq ptr %83, null
  br i1 %84, label %369, label %77, !llvm.loop !79

85:                                               ; preds = %38
  %86 = and i32 %40, 134283264
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %89, label %88

88:                                               ; preds = %85
  tail call void @Perl_croak_no_modify() #13
  br label %89

89:                                               ; preds = %88, %85
  %90 = load ptr, ptr @PL_encoding, align 8, !tbaa !5
  %91 = icmp eq ptr %90, null
  br i1 %91, label %92, label %98

92:                                               ; preds = %89
  %93 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !5
  %94 = icmp eq ptr %93, null
  br i1 %94, label %105, label %95

95:                                               ; preds = %92
  %96 = tail call ptr @Perl__get_encoding() #13
  %97 = icmp eq ptr %96, null
  br i1 %97, label %105, label %98

98:                                               ; preds = %89, %95
  %99 = load i32, ptr %39, align 4, !tbaa !16
  %100 = and i32 %99, 536870912
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %98
  %103 = tail call ptr @Perl__get_encoding() #13
  %104 = tail call ptr @Perl_sv_recode_to_utf8(ptr noundef nonnull %1, ptr noundef %103) #13
  br label %105

105:                                              ; preds = %98, %102, %92, %95
  %106 = load i32, ptr %39, align 4, !tbaa !16
  %107 = and i32 %106, 2098176
  %108 = icmp eq i32 %107, 1024
  br i1 %108, label %109, label %115

109:                                              ; preds = %105
  %110 = load ptr, ptr %1, align 8, !tbaa !26
  %111 = getelementptr inbounds %struct.xpv, ptr %110, i64 0, i32 2
  %112 = load i64, ptr %111, align 8, !tbaa !55
  store i64 %112, ptr %4, align 8, !tbaa !71
  %113 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 3
  %114 = load ptr, ptr %113, align 8, !tbaa !24
  br label %117

115:                                              ; preds = %105
  %116 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %1, ptr noundef nonnull %4, i32 noundef 2) #13
  br label %117

117:                                              ; preds = %115, %109
  %118 = phi ptr [ %114, %109 ], [ %116, %115 ]
  br i1 %2, label %119, label %286

119:                                              ; preds = %117
  %120 = icmp ne ptr %118, null
  %121 = load i64, ptr %4, align 8
  %122 = icmp ne i64 %121, 0
  %123 = select i1 %120, i1 %122, i1 false
  br i1 %123, label %124, label %283

124:                                              ; preds = %119
  %125 = add i64 %121, -1
  store i64 %125, ptr %4, align 8, !tbaa !71
  %126 = getelementptr inbounds i8, ptr %118, i64 %125
  %127 = load ptr, ptr @PL_rs, align 8, !tbaa !5
  %128 = getelementptr inbounds %struct.sv, ptr %127, i64 0, i32 2
  %129 = load i32, ptr %128, align 4, !tbaa !16
  %130 = and i32 %129, 1024
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %153, label %132

132:                                              ; preds = %124
  %133 = load ptr, ptr %127, align 8, !tbaa !26
  %134 = getelementptr inbounds %struct.xpv, ptr %133, i64 0, i32 2
  %135 = load i64, ptr %134, align 8, !tbaa !55
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %153

137:                                              ; preds = %132
  %138 = load i8, ptr %126, align 1, !tbaa !24
  %139 = icmp eq i8 %138, 10
  br i1 %139, label %140, label %283

140:                                              ; preds = %137
  %141 = icmp eq i64 %125, 0
  br i1 %141, label %249, label %142

142:                                              ; preds = %140, %149
  %143 = phi ptr [ %146, %149 ], [ %126, %140 ]
  %144 = phi i64 [ %151, %149 ], [ 1, %140 ]
  %145 = phi i64 [ %150, %149 ], [ %125, %140 ]
  %146 = getelementptr inbounds i8, ptr %143, i64 -1
  %147 = load i8, ptr %146, align 1, !tbaa !24
  %148 = icmp eq i8 %147, 10
  br i1 %148, label %149, label %249

149:                                              ; preds = %142
  %150 = add i64 %145, -1
  store i64 %150, ptr %4, align 8, !tbaa !71
  %151 = add i64 %144, 1
  %152 = icmp eq i64 %150, 0
  br i1 %152, label %249, label %142, !llvm.loop !80

153:                                              ; preds = %132, %124
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #13
  %154 = and i32 %129, 2098176
  %155 = icmp eq i32 %154, 1024
  br i1 %155, label %156, label %162

156:                                              ; preds = %153
  %157 = load ptr, ptr %127, align 8, !tbaa !26
  %158 = getelementptr inbounds %struct.xpv, ptr %157, i64 0, i32 2
  %159 = load i64, ptr %158, align 8, !tbaa !55
  store i64 %159, ptr %5, align 8, !tbaa !71
  %160 = getelementptr inbounds %struct.sv, ptr %127, i64 0, i32 3
  %161 = load ptr, ptr %160, align 8, !tbaa !24
  br label %167

162:                                              ; preds = %153
  %163 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %127, ptr noundef nonnull %5, i32 noundef 34) #13
  %164 = load ptr, ptr @PL_rs, align 8, !tbaa !5
  %165 = getelementptr inbounds %struct.sv, ptr %164, i64 0, i32 2
  %166 = load i32, ptr %165, align 4, !tbaa !16
  br label %167

167:                                              ; preds = %162, %156
  %168 = phi i32 [ %129, %156 ], [ %166, %162 ]
  %169 = phi ptr [ %127, %156 ], [ %164, %162 ]
  %170 = phi ptr [ %161, %156 ], [ %163, %162 ]
  %171 = and i32 %168, 536870912
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %178, label %173

173:                                              ; preds = %167
  %174 = call i64 @Perl_sv_len_utf8(ptr noundef nonnull %169) #13
  %175 = load ptr, ptr @PL_rs, align 8, !tbaa !5
  %176 = getelementptr inbounds %struct.sv, ptr %175, i64 0, i32 2
  %177 = load i32, ptr %176, align 4, !tbaa !16
  br label %180

178:                                              ; preds = %167
  %179 = load i64, ptr %5, align 8, !tbaa !71
  br label %180

180:                                              ; preds = %178, %173
  %181 = phi i32 [ %177, %173 ], [ %168, %178 ]
  %182 = phi i64 [ %174, %173 ], [ %179, %178 ]
  %183 = and i32 %181, 536870912
  %184 = load i32, ptr %39, align 4, !tbaa !16
  %185 = and i32 %184, 536870912
  %186 = icmp eq i32 %183, %185
  br i1 %186, label %224, label %187

187:                                              ; preds = %180
  %188 = icmp eq i32 %183, 0
  br i1 %188, label %193, label %189

189:                                              ; preds = %187
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6) #13
  store i8 1, ptr %6, align 1, !tbaa !81
  %190 = call ptr @Perl_bytes_from_utf8(ptr noundef %170, ptr noundef nonnull %5, ptr noundef nonnull %6) #13
  %191 = load i8, ptr %6, align 1, !tbaa !81, !range !83, !noundef !84
  %192 = icmp eq i8 %191, 0
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6) #13
  br i1 %192, label %224, label %248

193:                                              ; preds = %187
  %194 = load ptr, ptr @PL_encoding, align 8, !tbaa !5
  %195 = icmp eq ptr %194, null
  br i1 %195, label %196, label %202

196:                                              ; preds = %193
  %197 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !5
  %198 = icmp eq ptr %197, null
  br i1 %198, label %222, label %199

199:                                              ; preds = %196
  %200 = call ptr @Perl__get_encoding() #13
  %201 = icmp eq ptr %200, null
  br i1 %201, label %222, label %202

202:                                              ; preds = %193, %199
  %203 = load i64, ptr %5, align 8, !tbaa !71
  %204 = call ptr @Perl_newSVpvn(ptr noundef %170, i64 noundef %203) #13
  %205 = call ptr @Perl__get_encoding() #13
  %206 = call ptr @Perl_sv_recode_to_utf8(ptr noundef %204, ptr noundef %205) #13
  %207 = getelementptr inbounds %struct.sv, ptr %204, i64 0, i32 2
  %208 = load i32, ptr %207, align 4, !tbaa !16
  %209 = and i32 %208, 2098176
  %210 = icmp eq i32 %209, 1024
  br i1 %210, label %211, label %217

211:                                              ; preds = %202
  %212 = load ptr, ptr %204, align 8, !tbaa !26
  %213 = getelementptr inbounds %struct.xpv, ptr %212, i64 0, i32 2
  %214 = load i64, ptr %213, align 8, !tbaa !55
  store i64 %214, ptr %5, align 8, !tbaa !71
  %215 = getelementptr inbounds %struct.sv, ptr %204, i64 0, i32 3
  %216 = load ptr, ptr %215, align 8, !tbaa !24
  br label %219

217:                                              ; preds = %202
  %218 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %204, ptr noundef nonnull %5, i32 noundef 34) #13
  br label %219

219:                                              ; preds = %217, %211
  %220 = phi ptr [ %216, %211 ], [ %218, %217 ]
  %221 = call i64 @Perl_sv_len_utf8(ptr noundef nonnull %204) #13
  br label %224

222:                                              ; preds = %196, %199
  %223 = call ptr @Perl_bytes_to_utf8(ptr noundef %170, ptr noundef nonnull %5) #13
  br label %224

224:                                              ; preds = %189, %222, %219, %180
  %225 = phi ptr [ %190, %189 ], [ null, %219 ], [ %223, %222 ], [ null, %180 ]
  %226 = phi ptr [ null, %189 ], [ %204, %219 ], [ null, %222 ], [ null, %180 ]
  %227 = phi i64 [ %182, %189 ], [ %221, %219 ], [ %182, %222 ], [ %182, %180 ]
  %228 = phi ptr [ %190, %189 ], [ %220, %219 ], [ %223, %222 ], [ %170, %180 ]
  %229 = load i64, ptr %5, align 8, !tbaa !71
  %230 = icmp eq i64 %229, 1
  br i1 %230, label %231, label %235

231:                                              ; preds = %224
  %232 = load i8, ptr %126, align 1, !tbaa !24
  %233 = load i8, ptr %228, align 1, !tbaa !24
  %234 = icmp eq i8 %232, %233
  br i1 %234, label %245, label %247

235:                                              ; preds = %224
  %236 = load i64, ptr %4, align 8, !tbaa !71
  %237 = add i64 %229, -1
  %238 = icmp ult i64 %236, %237
  br i1 %238, label %247, label %239

239:                                              ; preds = %235
  %240 = sub i64 %236, %237
  store i64 %240, ptr %4, align 8, !tbaa !71
  %241 = sub i64 1, %229
  %242 = getelementptr inbounds i8, ptr %126, i64 %241
  %243 = call i32 @bcmp(ptr nonnull %242, ptr %228, i64 %229)
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %247

245:                                              ; preds = %231, %239
  %246 = phi i64 [ 1, %231 ], [ %227, %239 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #13
  br label %249

247:                                              ; preds = %231, %235, %239
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #13
  br label %271

248:                                              ; preds = %189
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #13
  br label %283

249:                                              ; preds = %149, %142, %140, %245
  %250 = phi i64 [ %246, %245 ], [ 1, %140 ], [ %121, %149 ], [ %144, %142 ]
  %251 = phi ptr [ %225, %245 ], [ null, %140 ], [ null, %142 ], [ null, %149 ]
  %252 = phi ptr [ %226, %245 ], [ null, %140 ], [ null, %142 ], [ null, %149 ]
  %253 = load i32, ptr %39, align 4, !tbaa !16
  %254 = and i32 %253, 430018304
  %255 = icmp eq i32 %254, 1024
  br i1 %255, label %258, label %256

256:                                              ; preds = %249
  %257 = call ptr @Perl_sv_pvn_force_flags(ptr noundef nonnull %1, ptr noundef null, i32 noundef 0) #13
  br label %258

258:                                              ; preds = %249, %256
  %259 = load i64, ptr %4, align 8, !tbaa !71
  %260 = load ptr, ptr %1, align 8, !tbaa !26
  %261 = getelementptr inbounds %struct.xpv, ptr %260, i64 0, i32 2
  store i64 %259, ptr %261, align 8, !tbaa !55
  %262 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 3
  %263 = load ptr, ptr %262, align 8, !tbaa !24
  %264 = getelementptr inbounds i8, ptr %263, i64 %259
  store i8 0, ptr %264, align 1, !tbaa !24
  %265 = load i32, ptr %39, align 4, !tbaa !16
  %266 = and i32 %265, 2147470591
  store i32 %266, ptr %39, align 4, !tbaa !16
  %267 = and i32 %265, 4194304
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %271, label %269

269:                                              ; preds = %258
  %270 = call i32 @Perl_mg_set(ptr noundef nonnull %1) #13
  br label %271

271:                                              ; preds = %247, %258, %269
  %272 = phi i64 [ %250, %269 ], [ %250, %258 ], [ 0, %247 ]
  %273 = phi ptr [ %251, %269 ], [ %251, %258 ], [ %225, %247 ]
  %274 = phi ptr [ %252, %269 ], [ %252, %258 ], [ %226, %247 ]
  %275 = icmp eq ptr %274, null
  br i1 %275, label %283, label %276

276:                                              ; preds = %271
  %277 = getelementptr inbounds %struct.sv, ptr %274, i64 0, i32 1
  %278 = load i32, ptr %277, align 8, !tbaa !44
  %279 = icmp ugt i32 %278, 1
  br i1 %279, label %280, label %282

280:                                              ; preds = %276
  %281 = add i32 %278, -1
  store i32 %281, ptr %277, align 8, !tbaa !44
  br label %283

282:                                              ; preds = %276
  call void @Perl_sv_free2(ptr noundef nonnull %274, i32 noundef %278) #13
  br label %283

283:                                              ; preds = %248, %119, %137, %271, %280, %282
  %284 = phi ptr [ %273, %271 ], [ %273, %280 ], [ %273, %282 ], [ null, %119 ], [ null, %137 ], [ null, %248 ]
  %285 = phi i64 [ %272, %271 ], [ %272, %280 ], [ %272, %282 ], [ 0, %119 ], [ 0, %137 ], [ 0, %248 ]
  call void @Perl_safesysfree(ptr noundef %284) #13
  br label %369

286:                                              ; preds = %117
  %287 = load i64, ptr %4, align 8
  %288 = icmp eq i64 %287, 0
  %289 = load i32, ptr %39, align 4, !tbaa !16
  %290 = and i32 %289, 268436480
  %291 = icmp eq i32 %290, 1024
  %292 = select i1 %288, i1 true, i1 %291
  br i1 %292, label %305, label %293

293:                                              ; preds = %286
  %294 = and i32 %289, 430018304
  %295 = icmp eq i32 %294, 1024
  br i1 %295, label %296, label %302

296:                                              ; preds = %293
  %297 = load ptr, ptr %1, align 8, !tbaa !26
  %298 = getelementptr inbounds %struct.xpv, ptr %297, i64 0, i32 2
  %299 = load i64, ptr %298, align 8, !tbaa !55
  store i64 %299, ptr %4, align 8, !tbaa !71
  %300 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 3
  %301 = load ptr, ptr %300, align 8, !tbaa !24
  br label %305

302:                                              ; preds = %293
  %303 = call ptr @Perl_sv_pvn_force_flags(ptr noundef nonnull %1, ptr noundef nonnull %4, i32 noundef 0) #13
  %304 = load i32, ptr %39, align 4, !tbaa !16
  br label %305

305:                                              ; preds = %296, %302, %286
  %306 = phi i32 [ %289, %286 ], [ %289, %296 ], [ %304, %302 ]
  %307 = phi ptr [ %118, %286 ], [ %301, %296 ], [ %303, %302 ]
  %308 = and i32 %306, 536870912
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %312

310:                                              ; preds = %305
  %311 = load i64, ptr %4, align 8
  br label %349

312:                                              ; preds = %305
  %313 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %314 = getelementptr inbounds %struct.cop, ptr %313, i64 0, i32 10
  %315 = load i32, ptr %314, align 8, !tbaa !66
  %316 = and i32 %315, 8
  %317 = icmp eq i32 %316, 0
  %318 = load i64, ptr %4, align 8
  br i1 %317, label %319, label %349

319:                                              ; preds = %312
  %320 = icmp ne ptr %307, null
  %321 = icmp ne i64 %318, 0
  %322 = select i1 %320, i1 %321, i1 false
  br i1 %322, label %323, label %348

323:                                              ; preds = %319
  %324 = getelementptr inbounds i8, ptr %307, i64 %318
  br label %325

325:                                              ; preds = %329, %323
  %326 = phi ptr [ %324, %323 ], [ %327, %329 ]
  %327 = getelementptr inbounds i8, ptr %326, i64 -1
  %328 = icmp ugt ptr %327, %307
  br i1 %328, label %329, label %333

329:                                              ; preds = %325
  %330 = load i8, ptr %327, align 1, !tbaa !24
  %331 = and i8 %330, -64
  %332 = icmp eq i8 %331, -128
  br i1 %332, label %325, label %333, !llvm.loop !85

333:                                              ; preds = %325, %329
  %334 = ptrtoint ptr %324 to i64
  %335 = ptrtoint ptr %327 to i64
  %336 = sub i64 %334, %335
  %337 = call zeroext i1 @Perl_is_utf8_string(ptr noundef nonnull %327, i64 noundef %336) #13
  br i1 %337, label %338, label %363

338:                                              ; preds = %333
  call void @Perl_sv_setpvn(ptr noundef %0, ptr noundef nonnull %327, i64 noundef %336) #13
  store i8 0, ptr %327, align 1, !tbaa !24
  %339 = ptrtoint ptr %307 to i64
  %340 = sub i64 %335, %339
  %341 = load ptr, ptr %1, align 8, !tbaa !26
  %342 = getelementptr inbounds %struct.xpv, ptr %341, i64 0, i32 2
  store i64 %340, ptr %342, align 8, !tbaa !55
  %343 = load i32, ptr %39, align 4, !tbaa !16
  %344 = and i32 %343, 2147470591
  store i32 %344, ptr %39, align 4, !tbaa !16
  %345 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %346 = load i32, ptr %345, align 4, !tbaa !16
  %347 = or i32 %346, 536870912
  store i32 %347, ptr %345, align 4, !tbaa !16
  br label %363

348:                                              ; preds = %319
  call void @Perl_sv_setpvn(ptr noundef %0, ptr noundef nonnull @.str.3, i64 noundef 0) #13
  br label %363

349:                                              ; preds = %310, %312
  %350 = phi i64 [ %311, %310 ], [ %318, %312 ]
  %351 = icmp ne ptr %307, null
  %352 = icmp ne i64 %350, 0
  %353 = select i1 %351, i1 %352, i1 false
  br i1 %353, label %354, label %362

354:                                              ; preds = %349
  %355 = add i64 %350, -1
  store i64 %355, ptr %4, align 8, !tbaa !71
  %356 = getelementptr inbounds i8, ptr %307, i64 %355
  call void @Perl_sv_setpvn(ptr noundef %0, ptr noundef nonnull %356, i64 noundef 1) #13
  store i8 0, ptr %356, align 1, !tbaa !24
  %357 = load i64, ptr %4, align 8, !tbaa !71
  %358 = load ptr, ptr %1, align 8, !tbaa !26
  %359 = getelementptr inbounds %struct.xpv, ptr %358, i64 0, i32 2
  store i64 %357, ptr %359, align 8, !tbaa !55
  %360 = load i32, ptr %39, align 4, !tbaa !16
  %361 = and i32 %360, 1610599679
  store i32 %361, ptr %39, align 4, !tbaa !16
  br label %363

362:                                              ; preds = %349
  call void @Perl_sv_setpvn(ptr noundef %0, ptr noundef nonnull @.str.3, i64 noundef 0) #13
  br label %363

363:                                              ; preds = %333, %338, %348, %362, %354
  %364 = load i32, ptr %39, align 4, !tbaa !16
  %365 = and i32 %364, 4194304
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %369, label %367

367:                                              ; preds = %363
  %368 = call i32 @Perl_mg_set(ptr noundef nonnull %1) #13
  br label %369

369:                                              ; preds = %77, %69, %73, %52, %283, %363, %367, %35, %7
  %370 = phi i64 [ 0, %7 ], [ 0, %35 ], [ %285, %283 ], [ 0, %367 ], [ 0, %363 ], [ 0, %52 ], [ 0, %73 ], [ %70, %69 ], [ %82, %77 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #13
  ret i64 %370
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_chop() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %4 = getelementptr inbounds i32, ptr %3, i64 -1
  store ptr %4, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %5 = load i32, ptr %3, align 4, !tbaa !57
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds ptr, ptr %2, i64 %6
  %8 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %9 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 3
  %11 = load i64, ptr %10, align 8, !tbaa !14
  %12 = getelementptr inbounds ptr, ptr %8, i64 %11
  %13 = load ptr, ptr %12, align 8, !tbaa !5
  %14 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 4
  %15 = load i16, ptr %14, align 8
  %16 = and i16 %15, 511
  %17 = icmp eq i16 %16, 41
  %18 = icmp ult ptr %7, %1
  br i1 %18, label %19, label %27

19:                                               ; preds = %0, %19
  %20 = phi i64 [ %25, %19 ], [ 0, %0 ]
  %21 = phi ptr [ %22, %19 ], [ %7, %0 ]
  %22 = getelementptr inbounds ptr, ptr %21, i64 1
  %23 = load ptr, ptr %22, align 8, !tbaa !5
  %24 = tail call fastcc i64 @S_do_chomp(ptr noundef %13, ptr noundef %23, i1 noundef zeroext %17)
  %25 = add i64 %24, %20
  %26 = icmp ult ptr %22, %1
  br i1 %26, label %19, label %27, !llvm.loop !86

27:                                               ; preds = %19, %0
  %28 = phi i64 [ 0, %0 ], [ %25, %19 ]
  br i1 %17, label %29, label %30

29:                                               ; preds = %27
  tail call void @Perl_sv_setiv(ptr noundef %13, i64 noundef %28) #13
  br label %30

30:                                               ; preds = %29, %27
  %31 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %32 = getelementptr inbounds ptr, ptr %31, i64 %6
  %33 = getelementptr inbounds %struct.sv, ptr %13, i64 0, i32 2
  %34 = load i32, ptr %33, align 4, !tbaa !16
  %35 = and i32 %34, 4194304
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %30
  %38 = tail call i32 @Perl_mg_set(ptr noundef nonnull %13) #13
  br label %39

39:                                               ; preds = %30, %37
  %40 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %41 = ptrtoint ptr %40 to i64
  %42 = ptrtoint ptr %32 to i64
  %43 = sub i64 %41, %42
  %44 = icmp slt i64 %43, 8
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = tail call ptr @Perl_stack_grow(ptr noundef %32, ptr noundef %32, i64 noundef 1) #13
  br label %47

47:                                               ; preds = %39, %45
  %48 = phi ptr [ %46, %45 ], [ %32, %39 ]
  %49 = getelementptr inbounds ptr, ptr %48, i64 1
  store ptr %13, ptr %49, align 8, !tbaa !5
  store ptr %49, ptr @PL_stack_sp, align 8, !tbaa !5
  %50 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %51 = load ptr, ptr %50, align 8, !tbaa !13
  ret ptr %51
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_undef() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 6
  %4 = load i8, ptr %3, align 1, !tbaa !15
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %17

6:                                                ; preds = %0
  %7 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %8 = ptrtoint ptr %7 to i64
  %9 = ptrtoint ptr %1 to i64
  %10 = sub i64 %8, %9
  %11 = icmp slt i64 %10, 8
  br i1 %11, label %12, label %14

12:                                               ; preds = %6
  %13 = tail call ptr @Perl_stack_grow(ptr noundef %1, ptr noundef %1, i64 noundef 1) #13
  br label %14

14:                                               ; preds = %6, %12
  %15 = phi ptr [ %13, %12 ], [ %1, %6 ]
  %16 = getelementptr inbounds ptr, ptr %15, i64 1
  store ptr @PL_sv_undef, ptr %16, align 8, !tbaa !5
  store ptr %16, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %238

17:                                               ; preds = %0
  %18 = load ptr, ptr %1, align 8, !tbaa !5
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  store ptr @PL_sv_undef, ptr %1, align 8, !tbaa !5
  br label %238

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  %24 = and i32 %23, 427886592
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %18, i32 noundef 5) #13
  %27 = load i32, ptr %22, align 4, !tbaa !16
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi i32 [ %27, %26 ], [ %23, %21 ]
  %30 = trunc i32 %29 to i8
  switch i8 %30, label %190 [
    i8 0, label %237
    i8 11, label %31
    i8 12, label %32
    i8 13, label %33
    i8 14, label %65
    i8 9, label %66
  ]

31:                                               ; preds = %28
  tail call void @Perl_av_undef(ptr noundef nonnull %18) #13
  br label %237

32:                                               ; preds = %28
  tail call void @Perl_hv_undef_flags(ptr noundef nonnull %18, i32 noundef 0) #13
  br label %237

33:                                               ; preds = %28
  %34 = tail call ptr @Perl_cv_const_sv(ptr noundef nonnull %18) #13
  %35 = icmp eq ptr %34, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %33
  %37 = load ptr, ptr %18, align 8, !tbaa !5
  %38 = getelementptr inbounds %struct.xpvcv, ptr %37, i64 0, i32 12
  %39 = load i32, ptr %38, align 4, !tbaa !35
  %40 = and i32 %39, 128
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %36
  %43 = tail call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @.str.24, i64 noundef 11, i32 noundef 524288) #13
  br label %63

44:                                               ; preds = %36
  %45 = and i32 %39, 32768
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %struct.xpvcv, ptr %37, i64 0, i32 7
  br i1 %46, label %48, label %58

48:                                               ; preds = %44
  %49 = load ptr, ptr %47, align 8, !tbaa !24
  %50 = getelementptr inbounds %struct.gv, ptr %49, i64 0, i32 3
  %51 = load ptr, ptr %50, align 8, !tbaa !24
  %52 = getelementptr inbounds %struct.gp, ptr %51, i64 0, i32 8
  %53 = load ptr, ptr %52, align 8, !tbaa !87
  %54 = icmp eq ptr %53, null
  %55 = select i1 %54, ptr %49, ptr %53
  %56 = load ptr, ptr %55, align 8, !tbaa !76
  %57 = getelementptr inbounds %struct.xpvgv, ptr %56, i64 0, i32 4
  br label %58

58:                                               ; preds = %44, %48
  %59 = phi ptr [ %57, %48 ], [ %47, %44 ]
  %60 = load ptr, ptr %59, align 8, !tbaa !24
  %61 = tail call ptr @Perl_newSVhek(ptr noundef %60) #13
  %62 = tail call ptr @Perl_sv_2mortal(ptr noundef %61) #13
  br label %63

63:                                               ; preds = %58, %42
  %64 = phi ptr [ %43, %42 ], [ %62, %58 ]
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 12, ptr noundef nonnull @.str.23, ptr noundef %64) #13
  br label %65

65:                                               ; preds = %33, %63, %28
  tail call void @Perl_cv_undef_flags(ptr noundef nonnull %18, i32 noundef 1) #13
  br label %237

66:                                               ; preds = %28
  %67 = getelementptr inbounds %struct.gv, ptr %18, i64 0, i32 3
  %68 = load ptr, ptr %67, align 8, !tbaa !24
  %69 = getelementptr inbounds %struct.gp, ptr %68, i64 0, i32 3
  %70 = load i32, ptr %69, align 8, !tbaa !75
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %100

72:                                               ; preds = %66
  %73 = getelementptr inbounds %struct.gp, ptr %68, i64 0, i32 2
  %74 = load ptr, ptr %73, align 8, !tbaa !88
  %75 = icmp eq ptr %74, null
  br i1 %75, label %100, label %76

76:                                               ; preds = %72
  %77 = load ptr, ptr %18, align 8, !tbaa !76
  %78 = getelementptr inbounds %struct.xpvgv, ptr %77, i64 0, i32 5
  %79 = load ptr, ptr %78, align 8, !tbaa !24
  %80 = icmp eq ptr %79, null
  br i1 %80, label %100, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %struct.hv, ptr %79, i64 0, i32 2
  %83 = load i32, ptr %82, align 4, !tbaa !40
  %84 = and i32 %83, 33554432
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %100, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %struct.hv, ptr %79, i64 0, i32 3
  %88 = load ptr, ptr %87, align 8, !tbaa !24
  %89 = load ptr, ptr %79, align 8, !tbaa !49
  %90 = getelementptr inbounds %struct.xpvhv, ptr %89, i64 0, i32 3
  %91 = load i64, ptr %90, align 8, !tbaa !50
  %92 = add i64 %91, 1
  %93 = getelementptr inbounds ptr, ptr %88, i64 %92
  %94 = load ptr, ptr %93, align 8, !tbaa !24
  %95 = icmp eq ptr %94, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %86
  %97 = getelementptr inbounds %struct.xpvhv_aux, ptr %93, i64 0, i32 4
  %98 = load i32, ptr %97, align 4, !tbaa !51
  %99 = icmp ne i32 %98, -1
  br label %100

100:                                              ; preds = %96, %86, %81, %66, %76, %72
  %101 = phi i1 [ false, %76 ], [ false, %72 ], [ false, %66 ], [ false, %86 ], [ false, %81 ], [ %99, %96 ]
  %102 = getelementptr inbounds %struct.gp, ptr %68, i64 0, i32 5
  %103 = load ptr, ptr %102, align 8, !tbaa !89
  %104 = icmp eq ptr %103, null
  br i1 %104, label %129, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %struct.hv, ptr %103, i64 0, i32 2
  %107 = load i32, ptr %106, align 4, !tbaa !40
  %108 = and i32 %107, 33554432
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %129, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %struct.hv, ptr %103, i64 0, i32 3
  %112 = load ptr, ptr %111, align 8, !tbaa !24
  %113 = load ptr, ptr %103, align 8, !tbaa !49
  %114 = getelementptr inbounds %struct.xpvhv, ptr %113, i64 0, i32 3
  %115 = load i64, ptr %114, align 8, !tbaa !50
  %116 = add i64 %115, 1
  %117 = getelementptr inbounds ptr, ptr %112, i64 %116
  %118 = load ptr, ptr %117, align 8, !tbaa !24
  %119 = icmp eq ptr %118, null
  br i1 %119, label %129, label %120

120:                                              ; preds = %110
  %121 = getelementptr inbounds %struct.xpvhv_aux, ptr %117, i64 0, i32 4
  %122 = load i32, ptr %121, align 4, !tbaa !51
  %123 = icmp eq i32 %122, -1
  br i1 %123, label %129, label %124

124:                                              ; preds = %120
  %125 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %103) #13
  %126 = getelementptr inbounds %struct.sv, ptr %125, i64 0, i32 1
  %127 = load i32, ptr %126, align 8, !tbaa !44
  %128 = add i32 %127, 1
  store i32 %128, ptr %126, align 8, !tbaa !44
  br label %129

129:                                              ; preds = %120, %110, %105, %124, %100
  %130 = phi ptr [ %103, %124 ], [ null, %100 ], [ null, %105 ], [ null, %110 ], [ null, %120 ]
  %131 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %18) #13
  %132 = getelementptr inbounds %struct.sv, ptr %131, i64 0, i32 1
  %133 = load i32, ptr %132, align 8, !tbaa !44
  %134 = add i32 %133, 1
  store i32 %134, ptr %132, align 8, !tbaa !44
  tail call void @Perl_gp_free(ptr noundef nonnull %18) #13
  %135 = tail call ptr @Perl_safesyscalloc(i64 noundef 1, i64 noundef 80) #13
  %136 = tail call ptr @Perl_gp_ref(ptr noundef %135) #13
  store ptr %136, ptr %67, align 8, !tbaa !24
  %137 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %138 = getelementptr inbounds %struct.cop, ptr %137, i64 0, i32 7
  %139 = load i32, ptr %138, align 4, !tbaa !90
  %140 = getelementptr inbounds %struct.gp, ptr %136, i64 0, i32 9
  %141 = load i32, ptr %140, align 8
  %142 = and i32 %139, 2147483647
  %143 = and i32 %141, -2147483648
  %144 = or i32 %143, %142
  store i32 %144, ptr %140, align 8
  %145 = load ptr, ptr %67, align 8, !tbaa !24
  %146 = getelementptr inbounds %struct.gp, ptr %145, i64 0, i32 8
  store ptr %18, ptr %146, align 8, !tbaa !87
  %147 = load ptr, ptr %18, align 8, !tbaa !5
  %148 = getelementptr inbounds %struct.xpvgv, ptr %147, i64 0, i32 2
  %149 = load i64, ptr %148, align 8, !tbaa !91
  %150 = or i64 %149, 2
  store i64 %150, ptr %148, align 8, !tbaa !91
  %151 = icmp eq ptr %130, null
  br i1 %151, label %154, label %152

152:                                              ; preds = %129
  tail call void @Perl_mro_package_moved(ptr noundef null, ptr noundef nonnull %130, ptr noundef nonnull %18, i32 noundef 0) #13
  %153 = load ptr, ptr %18, align 8, !tbaa !76
  br label %154

154:                                              ; preds = %152, %129
  %155 = phi ptr [ %153, %152 ], [ %147, %129 ]
  %156 = getelementptr inbounds %struct.xpvgv, ptr %155, i64 0, i32 4
  %157 = load ptr, ptr %156, align 8, !tbaa !24
  %158 = getelementptr inbounds %struct.hek, ptr %157, i64 0, i32 2
  %159 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %158, ptr noundef nonnull dereferenceable(4) @.str.25) #14
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %186

161:                                              ; preds = %154
  %162 = getelementptr inbounds %struct.xpvgv, ptr %155, i64 0, i32 5
  %163 = load ptr, ptr %162, align 8, !tbaa !24
  %164 = icmp eq ptr %163, null
  br i1 %164, label %186, label %165

165:                                              ; preds = %161
  br i1 %101, label %185, label %166

166:                                              ; preds = %165
  %167 = getelementptr inbounds %struct.hv, ptr %163, i64 0, i32 2
  %168 = load i32, ptr %167, align 4, !tbaa !40
  %169 = and i32 %168, 33554432
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %237, label %171

171:                                              ; preds = %166
  %172 = getelementptr inbounds %struct.hv, ptr %163, i64 0, i32 3
  %173 = load ptr, ptr %172, align 8, !tbaa !24
  %174 = load ptr, ptr %163, align 8, !tbaa !49
  %175 = getelementptr inbounds %struct.xpvhv, ptr %174, i64 0, i32 3
  %176 = load i64, ptr %175, align 8, !tbaa !50
  %177 = add i64 %176, 1
  %178 = getelementptr inbounds ptr, ptr %173, i64 %177
  %179 = load ptr, ptr %178, align 8, !tbaa !24
  %180 = icmp eq ptr %179, null
  br i1 %180, label %237, label %181

181:                                              ; preds = %171
  %182 = getelementptr inbounds %struct.xpvhv_aux, ptr %178, i64 0, i32 4
  %183 = load i32, ptr %182, align 4, !tbaa !51
  %184 = icmp eq i32 %183, -1
  br i1 %184, label %237, label %185

185:                                              ; preds = %181, %165
  tail call void @Perl_mro_isa_changed_in(ptr noundef nonnull %163) #13
  br label %237

186:                                              ; preds = %161, %154
  br i1 %101, label %187, label %237

187:                                              ; preds = %186
  %188 = getelementptr inbounds %struct.xpvgv, ptr %155, i64 0, i32 5
  %189 = load ptr, ptr %188, align 8, !tbaa !24
  tail call void @Perl_mro_method_changed_in(ptr noundef %189) #13
  br label %237

190:                                              ; preds = %28
  %191 = and i32 %29, 255
  %192 = icmp ugt i32 %191, 2
  br i1 %192, label %193, label %223

193:                                              ; preds = %190
  %194 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 3
  %195 = load ptr, ptr %194, align 8, !tbaa !24
  %196 = icmp eq ptr %195, null
  br i1 %196, label %223, label %197

197:                                              ; preds = %193
  %198 = load ptr, ptr %18, align 8, !tbaa !26
  %199 = getelementptr inbounds %struct.xpv, ptr %198, i64 0, i32 3
  %200 = load i64, ptr %199, align 8, !tbaa !24
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %223, label %202

202:                                              ; preds = %197
  %203 = and i32 %29, 33554432
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %218, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds i8, ptr %195, i64 -1
  %207 = load i8, ptr %206, align 1, !tbaa !24
  %208 = zext i8 %207 to i64
  %209 = icmp eq i8 %207, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %205
  %211 = getelementptr inbounds i8, ptr %195, i64 -9
  %212 = load i64, ptr %211, align 1
  br label %213

213:                                              ; preds = %210, %205
  %214 = phi i64 [ %208, %205 ], [ %212, %210 ]
  %215 = sub i64 0, %214
  %216 = getelementptr inbounds i8, ptr %195, i64 %215
  store ptr %216, ptr %194, align 8, !tbaa !24
  %217 = and i32 %29, -33554433
  store i32 %217, ptr %22, align 4, !tbaa !16
  br label %218

218:                                              ; preds = %202, %213
  %219 = phi ptr [ %195, %202 ], [ %216, %213 ]
  tail call void @Perl_safesysfree(ptr noundef %219) #13
  store ptr null, ptr %194, align 8, !tbaa !24
  %220 = load ptr, ptr %18, align 8, !tbaa !26
  %221 = getelementptr inbounds %struct.xpv, ptr %220, i64 0, i32 3
  store i64 0, ptr %221, align 8, !tbaa !24
  %222 = load i32, ptr %22, align 4, !tbaa !16
  br label %223

223:                                              ; preds = %218, %197, %193, %190
  %224 = phi i32 [ %222, %218 ], [ %29, %197 ], [ %29, %193 ], [ %29, %190 ]
  %225 = and i32 %224, 1610547455
  store i32 %225, ptr %22, align 4, !tbaa !16
  %226 = and i32 %224, 33554432
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %231, label %228

228:                                              ; preds = %223
  %229 = tail call i32 @Perl_sv_backoff(ptr noundef nonnull %18) #13
  %230 = load i32, ptr %22, align 4, !tbaa !16
  br label %231

231:                                              ; preds = %228, %223
  %232 = phi i32 [ %230, %228 ], [ %225, %223 ]
  %233 = and i32 %232, 4194304
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %237, label %235

235:                                              ; preds = %231
  %236 = tail call i32 @Perl_mg_set(ptr noundef nonnull %18) #13
  br label %237

237:                                              ; preds = %181, %171, %166, %185, %187, %186, %235, %231, %65, %32, %31, %28
  store ptr @PL_sv_undef, ptr %1, align 8, !tbaa !5
  br label %238

238:                                              ; preds = %237, %20, %14
  %239 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %240 = load ptr, ptr %239, align 8, !tbaa !13
  ret ptr %240
}

declare void @Perl_sv_force_normal_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_av_undef(ptr noundef) local_unnamed_addr #2

declare void @Perl_hv_undef_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_cv_const_sv(ptr noundef) local_unnamed_addr #2

declare void @Perl_cv_undef_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_gp_free(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_safesyscalloc(i64 noundef, i64 noundef) local_unnamed_addr #2

declare ptr @Perl_gp_ref(ptr noundef) local_unnamed_addr #2

declare void @Perl_mro_package_moved(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_mro_isa_changed_in(ptr noundef) local_unnamed_addr #2

declare void @Perl_mro_method_changed_in(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #5

declare void @Perl_safesysfree(ptr noundef) local_unnamed_addr #2

declare i32 @Perl_sv_backoff(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_postinc() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %5 = load i64, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 4
  %9 = load i16, ptr %8, align 8
  %10 = and i16 %9, 511
  %11 = add nsw i16 %10, -51
  %12 = icmp ult i16 %11, 2
  %13 = load ptr, ptr %1, align 8, !tbaa !5
  %14 = getelementptr inbounds %struct.sv, ptr %13, i64 0, i32 2
  %15 = load i32, ptr %14, align 4, !tbaa !16
  %16 = and i32 %15, 255
  %17 = icmp ugt i32 %16, 10
  br i1 %17, label %24, label %18

18:                                               ; preds = %0
  %19 = add nsw i32 %16, -9
  %20 = icmp ult i32 %19, 2
  %21 = and i32 %15, 16826368
  %22 = icmp eq i32 %21, 32768
  %23 = and i1 %22, %20
  br i1 %23, label %24, label %28

24:                                               ; preds = %18, %0
  tail call void @Perl_croak_no_modify() #13
  %25 = load ptr, ptr %1, align 8, !tbaa !5
  %26 = getelementptr inbounds %struct.sv, ptr %25, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !16
  br label %28

28:                                               ; preds = %24, %18
  %29 = phi i32 [ %27, %24 ], [ %15, %18 ]
  %30 = phi ptr [ %25, %24 ], [ %13, %18 ]
  %31 = and i32 %29, 2048
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  %34 = tail call ptr @Perl_sv_newmortal() #13
  %35 = load ptr, ptr %1, align 8, !tbaa !5
  br label %36

36:                                               ; preds = %33, %28
  %37 = phi ptr [ %35, %33 ], [ %30, %28 ]
  %38 = phi ptr [ %34, %33 ], [ %7, %28 ]
  tail call void @Perl_sv_setsv_flags(ptr noundef %38, ptr noundef %37, i32 noundef 1538) #13
  %39 = load ptr, ptr %1, align 8, !tbaa !5
  %40 = getelementptr inbounds %struct.sv, ptr %39, i64 0, i32 2
  %41 = load i32, ptr %40, align 4, !tbaa !16
  %42 = and i32 %41, -2011101440
  %43 = icmp eq i32 %42, 256
  br i1 %43, label %44, label %57

44:                                               ; preds = %36
  %45 = load ptr, ptr %39, align 8, !tbaa !26
  %46 = getelementptr inbounds %struct.xpviv, ptr %45, i64 0, i32 4
  %47 = load i64, ptr %46, align 8, !tbaa !24
  %48 = select i1 %12, i64 9223372036854775807, i64 -9223372036854775808
  %49 = icmp eq i64 %47, %48
  br i1 %49, label %57, label %50

50:                                               ; preds = %44
  %51 = select i1 %12, i64 1, i64 -1
  %52 = add nsw i64 %47, %51
  store i64 %52, ptr %46, align 8, !tbaa !24
  %53 = load ptr, ptr %1, align 8, !tbaa !5
  %54 = getelementptr inbounds %struct.sv, ptr %53, i64 0, i32 2
  %55 = load i32, ptr %54, align 4, !tbaa !16
  %56 = and i32 %55, -24577
  store i32 %56, ptr %54, align 4, !tbaa !16
  br label %60

57:                                               ; preds = %44, %36
  br i1 %12, label %58, label %59

58:                                               ; preds = %57
  tail call void @Perl_sv_inc_nomg(ptr noundef nonnull %39) #13
  br label %60

59:                                               ; preds = %57
  tail call void @Perl_sv_dec_nomg(ptr noundef nonnull %39) #13
  br label %60

60:                                               ; preds = %50, %59, %58
  %61 = load ptr, ptr %1, align 8, !tbaa !5
  %62 = getelementptr inbounds %struct.sv, ptr %61, i64 0, i32 2
  %63 = load i32, ptr %62, align 4, !tbaa !16
  %64 = and i32 %63, 4194304
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %60
  %67 = tail call i32 @Perl_mg_set(ptr noundef nonnull %61) #13
  br label %68

68:                                               ; preds = %60, %66
  br i1 %12, label %69, label %81

69:                                               ; preds = %68
  %70 = getelementptr inbounds %struct.sv, ptr %38, i64 0, i32 2
  %71 = load i32, ptr %70, align 4, !tbaa !16
  %72 = and i32 %71, 65280
  %73 = icmp ne i32 %72, 0
  %74 = and i32 %71, 255
  %75 = icmp eq i32 %74, 8
  %76 = or i1 %73, %75
  %77 = and i32 %71, 16826623
  %78 = icmp eq i32 %77, 16777226
  %79 = or i1 %78, %76
  br i1 %79, label %81, label %80

80:                                               ; preds = %69
  tail call void @Perl_sv_setiv(ptr noundef nonnull %38, i64 noundef 0) #13
  br label %81

81:                                               ; preds = %68, %80, %69
  %82 = getelementptr inbounds %struct.sv, ptr %38, i64 0, i32 2
  %83 = load i32, ptr %82, align 4, !tbaa !16
  %84 = and i32 %83, 4194304
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %88, label %86

86:                                               ; preds = %81
  %87 = tail call i32 @Perl_mg_set(ptr noundef nonnull %38) #13
  br label %88

88:                                               ; preds = %81, %86
  store ptr %38, ptr %1, align 8, !tbaa !5
  %89 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %90 = load ptr, ptr %89, align 8, !tbaa !13
  ret ptr %90
}

declare void @Perl_croak_no_modify() local_unnamed_addr #2

declare void @Perl_sv_setsv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_sv_inc_nomg(ptr noundef) local_unnamed_addr #2

declare void @Perl_sv_dec_nomg(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_pow() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !9
  %5 = and i8 %4, 64
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %0
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  br label %14

9:                                                ; preds = %0
  %10 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %12 = load i64, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds ptr, ptr %10, i64 %12
  br label %14

14:                                               ; preds = %9, %7
  %15 = phi ptr [ %8, %7 ], [ %13, %9 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %17 = getelementptr inbounds ptr, ptr %1, i64 -1
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = load ptr, ptr %1, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  %24 = or i32 %23, %20
  %25 = and i32 %24, 2099200
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %14
  %28 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 40, i32 noundef 20) #13
  br i1 %28, label %263, label %29

29:                                               ; preds = %27
  %30 = load ptr, ptr %1, align 8, !tbaa !5
  %31 = load ptr, ptr %17, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  br label %34

34:                                               ; preds = %29, %14
  %35 = phi i32 [ %33, %29 ], [ %23, %14 ]
  %36 = phi ptr [ %31, %29 ], [ %18, %14 ]
  %37 = phi ptr [ %30, %29 ], [ %21, %14 ]
  %38 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 2
  %39 = and i32 %35, 4352
  %40 = icmp ne i32 %39, 0
  %41 = and i32 %35, 1536
  %42 = icmp eq i32 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %49, label %44

44:                                               ; preds = %34
  %45 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  %46 = load i32, ptr %38, align 4, !tbaa !16
  %47 = and i32 %46, 256
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %220, label %52

49:                                               ; preds = %34
  %50 = and i32 %35, 256
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %220, label %52

52:                                               ; preds = %49, %44
  %53 = phi i32 [ %35, %49 ], [ %46, %44 ]
  %54 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %55 = load i32, ptr %54, align 4, !tbaa !16
  %56 = and i32 %55, 4352
  %57 = icmp ne i32 %56, 0
  %58 = and i32 %55, 1536
  %59 = icmp eq i32 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %67, label %61

61:                                               ; preds = %52
  %62 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %36, i32 noundef 0) #13
  %63 = load i32, ptr %54, align 4, !tbaa !16
  %64 = and i32 %63, 256
  %65 = icmp eq i32 %64, 0
  %66 = load i32, ptr %38, align 4, !tbaa !16
  br i1 %65, label %220, label %70

67:                                               ; preds = %52
  %68 = and i32 %55, 256
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %220, label %70

70:                                               ; preds = %61, %67
  %71 = phi i32 [ %55, %67 ], [ %63, %61 ]
  %72 = phi i32 [ %53, %67 ], [ %66, %61 ]
  %73 = and i32 %72, -2147483392
  %74 = icmp eq i32 %73, -2147483392
  %75 = load ptr, ptr %37, align 8, !tbaa !26
  br i1 %74, label %76, label %79

76:                                               ; preds = %70
  %77 = getelementptr inbounds %struct.xpvuv, ptr %75, i64 0, i32 4
  %78 = load i64, ptr %77, align 8, !tbaa !24
  br label %83

79:                                               ; preds = %70
  %80 = getelementptr inbounds %struct.xpviv, ptr %75, i64 0, i32 4
  %81 = load i64, ptr %80, align 8, !tbaa !24
  %82 = icmp sgt i64 %81, -1
  br i1 %82, label %83, label %220

83:                                               ; preds = %79, %76
  %84 = phi i64 [ %78, %76 ], [ %81, %79 ]
  %85 = and i32 %71, -2147483392
  %86 = icmp eq i32 %85, -2147483392
  %87 = load ptr, ptr %36, align 8, !tbaa !26
  br i1 %86, label %88, label %91

88:                                               ; preds = %83
  %89 = getelementptr inbounds %struct.xpvuv, ptr %87, i64 0, i32 4
  %90 = load i64, ptr %89, align 8, !tbaa !24
  br label %97

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.xpviv, ptr %87, i64 0, i32 4
  %93 = load i64, ptr %92, align 8, !tbaa !24
  %94 = icmp sgt i64 %93, -1
  %95 = zext i1 %94 to i8
  %96 = tail call i64 @llvm.abs.i64(i64 %93, i1 true)
  br label %97

97:                                               ; preds = %91, %88
  %98 = phi i8 [ 1, %88 ], [ %95, %91 ]
  %99 = phi i64 [ %90, %88 ], [ %96, %91 ]
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99), !range !93
  %101 = icmp ult i64 %100, 2
  br i1 %101, label %133, label %102

102:                                              ; preds = %97
  %103 = icmp ult i64 %99, 4294967296
  %104 = select i1 %103, i32 32, i32 64
  %105 = add nsw i32 %104, -16
  %106 = zext i32 %105 to i64
  %107 = lshr i64 %99, %106
  %108 = icmp eq i64 %107, 0
  %109 = select i1 %108, i32 %105, i32 %104
  %110 = add nsw i32 %109, -8
  %111 = zext i32 %110 to i64
  %112 = lshr i64 %99, %111
  %113 = icmp eq i64 %112, 0
  %114 = select i1 %113, i32 %110, i32 %109
  %115 = add nsw i32 %114, -4
  %116 = zext i32 %115 to i64
  %117 = lshr i64 %99, %116
  %118 = icmp eq i64 %117, 0
  %119 = select i1 %118, i32 %115, i32 %114
  %120 = add nsw i32 %119, -2
  %121 = zext i32 %120 to i64
  %122 = lshr i64 %99, %121
  %123 = icmp eq i64 %122, 0
  %124 = select i1 %123, i32 %120, i32 %119
  %125 = add nsw i32 %124, -1
  %126 = zext i32 %125 to i64
  %127 = lshr i64 %99, %126
  %128 = icmp eq i64 %127, 0
  %129 = select i1 %128, i32 %125, i32 %124
  %130 = zext i32 %129 to i64
  %131 = mul i64 %84, %130
  %132 = icmp ult i64 %131, 65
  br i1 %132, label %170, label %220

133:                                              ; preds = %97
  %134 = icmp eq i8 %98, 0
  %135 = uitofp i64 %99 to double
  %136 = fneg fast double %135
  %137 = select fast i1 %134, double %136, double %135
  %138 = and i64 %84, 1
  %139 = icmp eq i64 %138, 0
  %140 = select i1 %139, double 1.000000e+00, double %137
  %141 = icmp ult i64 %84, 2
  br i1 %141, label %153, label %142

142:                                              ; preds = %133, %142
  %143 = phi double [ %147, %142 ], [ %137, %133 ]
  %144 = phi double [ %151, %142 ], [ %140, %133 ]
  %145 = phi i64 [ %146, %142 ], [ %84, %133 ]
  %146 = lshr i64 %145, 1
  %147 = fmul fast double %143, %143
  %148 = and i64 %145, 2
  %149 = icmp eq i64 %148, 0
  %150 = select i1 %149, double 1.000000e+00, double %147
  %151 = fmul fast double %150, %144
  %152 = icmp ult i64 %145, 4
  br i1 %152, label %153, label %142, !llvm.loop !94

153:                                              ; preds = %142, %133
  %154 = phi double [ %140, %133 ], [ %151, %142 ]
  tail call void @Perl_sv_setnv(ptr noundef %16, double noundef nofpclass(nan inf) %154) #13
  %155 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %156 = load i32, ptr %155, align 4, !tbaa !16
  %157 = and i32 %156, 4194304
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %153
  %160 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %161

161:                                              ; preds = %153, %159
  store ptr %16, ptr %17, align 8, !tbaa !5
  %162 = load i32, ptr %38, align 4, !tbaa !16
  %163 = and i32 %162, 4352
  %164 = icmp ne i32 %163, 0
  %165 = and i32 %162, 1536
  %166 = icmp eq i32 %165, 0
  %167 = or i1 %164, %166
  br i1 %167, label %262, label %168

168:                                              ; preds = %161
  %169 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  br label %262

170:                                              ; preds = %102
  %171 = and i64 %84, 1
  %172 = icmp eq i64 %171, 0
  %173 = select i1 %172, i64 1, i64 %99
  %174 = icmp ult i64 %84, 2
  br i1 %174, label %186, label %175

175:                                              ; preds = %170, %175
  %176 = phi i64 [ %180, %175 ], [ %99, %170 ]
  %177 = phi i64 [ %184, %175 ], [ %173, %170 ]
  %178 = phi i64 [ %179, %175 ], [ %84, %170 ]
  %179 = lshr i64 %178, 1
  %180 = mul i64 %176, %176
  %181 = and i64 %178, 2
  %182 = icmp eq i64 %181, 0
  %183 = select i1 %182, i64 1, i64 %180
  %184 = mul i64 %183, %177
  %185 = icmp ult i64 %178, 4
  br i1 %185, label %186, label %175, !llvm.loop !95

186:                                              ; preds = %175, %170
  %187 = phi i64 [ %173, %170 ], [ %184, %175 ]
  %188 = icmp ne i8 %98, 0
  %189 = select i1 %188, i1 true, i1 %172
  br i1 %189, label %190, label %195

190:                                              ; preds = %186
  tail call void @Perl_sv_setuv(ptr noundef %16, i64 noundef %187) #13
  %191 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %192 = load i32, ptr %191, align 4, !tbaa !16
  %193 = and i32 %192, 4194304
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %219, label %217

195:                                              ; preds = %186
  %196 = icmp sgt i64 %187, -1
  br i1 %196, label %197, label %203

197:                                              ; preds = %195
  %198 = sub nsw i64 0, %187
  tail call void @Perl_sv_setiv(ptr noundef %16, i64 noundef %198) #13
  %199 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %200 = load i32, ptr %199, align 4, !tbaa !16
  %201 = and i32 %200, 4194304
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %219, label %217

203:                                              ; preds = %195
  %204 = icmp eq i64 %187, -9223372036854775808
  br i1 %204, label %205, label %210

205:                                              ; preds = %203
  tail call void @Perl_sv_setiv(ptr noundef %16, i64 noundef -9223372036854775808) #13
  %206 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %207 = load i32, ptr %206, align 4, !tbaa !16
  %208 = and i32 %207, 4194304
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %219, label %217

210:                                              ; preds = %203
  %211 = uitofp i64 %187 to double
  %212 = fneg fast double %211
  tail call void @Perl_sv_setnv(ptr noundef %16, double noundef nofpclass(nan inf) %212) #13
  %213 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %214 = load i32, ptr %213, align 4, !tbaa !16
  %215 = and i32 %214, 4194304
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %210, %205, %197, %190
  %218 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %219

219:                                              ; preds = %217, %210, %205, %197, %190
  store ptr %16, ptr %17, align 8, !tbaa !5
  br label %262

220:                                              ; preds = %79, %102, %44, %49, %61, %67
  %221 = phi i32 [ %53, %67 ], [ %66, %61 ], [ %35, %49 ], [ %46, %44 ], [ %72, %102 ], [ %72, %79 ]
  %222 = phi i1 [ true, %67 ], [ true, %61 ], [ true, %49 ], [ true, %44 ], [ false, %102 ], [ true, %79 ]
  %223 = and i32 %221, 512
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %229, label %225

225:                                              ; preds = %220
  %226 = load ptr, ptr %37, align 8, !tbaa !26
  %227 = getelementptr inbounds %struct.xpvnv, ptr %226, i64 0, i32 5
  %228 = load double, ptr %227, align 8, !tbaa !24
  br label %231

229:                                              ; preds = %220
  %230 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  br label %231

231:                                              ; preds = %229, %225
  %232 = phi fast double [ %228, %225 ], [ %230, %229 ]
  %233 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %234 = load i32, ptr %233, align 4, !tbaa !16
  %235 = and i32 %234, 512
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %241, label %237

237:                                              ; preds = %231
  %238 = load ptr, ptr %36, align 8, !tbaa !26
  %239 = getelementptr inbounds %struct.xpvnv, ptr %238, i64 0, i32 5
  %240 = load double, ptr %239, align 8, !tbaa !24
  br label %243

241:                                              ; preds = %231
  %242 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %36, i32 noundef 0) #13
  br label %243

243:                                              ; preds = %241, %237
  %244 = phi fast double [ %240, %237 ], [ %242, %241 ]
  %245 = tail call fast double @llvm.pow.f64(double %244, double %232)
  tail call void @Perl_sv_setnv(ptr noundef %16, double noundef nofpclass(nan inf) %245) #13
  %246 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %247 = load i32, ptr %246, align 4, !tbaa !16
  %248 = and i32 %247, 4194304
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %252, label %250

250:                                              ; preds = %243
  %251 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %252

252:                                              ; preds = %243, %250
  store ptr %16, ptr %17, align 8, !tbaa !5
  br i1 %222, label %262, label %253

253:                                              ; preds = %252
  %254 = load i32, ptr %38, align 4, !tbaa !16
  %255 = and i32 %254, 4352
  %256 = icmp ne i32 %255, 0
  %257 = and i32 %254, 1536
  %258 = icmp eq i32 %257, 0
  %259 = or i1 %256, %258
  br i1 %259, label %262, label %260

260:                                              ; preds = %253
  %261 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  br label %262

262:                                              ; preds = %252, %260, %253, %168, %161, %219
  store ptr %17, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %263

263:                                              ; preds = %262, %27
  %264 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %265 = load ptr, ptr %264, align 8, !tbaa !13
  ret ptr %265
}

declare zeroext i1 @Perl_try_amagic_bin(i32 noundef, i32 noundef) local_unnamed_addr #2

declare i64 @Perl_sv_2iv_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_sv_setnv(ptr noundef, double noundef nofpclass(nan inf)) local_unnamed_addr #2

declare nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.pow.f64(double, double) #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_multiply() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !9
  %5 = and i8 %4, 64
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %0
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  br label %14

9:                                                ; preds = %0
  %10 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %12 = load i64, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds ptr, ptr %10, i64 %12
  br label %14

14:                                               ; preds = %9, %7
  %15 = phi ptr [ %8, %7 ], [ %13, %9 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %17 = getelementptr inbounds ptr, ptr %1, i64 -1
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = load ptr, ptr %1, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  %24 = or i32 %23, %20
  %25 = and i32 %24, 2099200
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %14
  %28 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 34, i32 noundef 20) #13
  br i1 %28, label %185, label %29

29:                                               ; preds = %27
  %30 = load ptr, ptr %1, align 8, !tbaa !5
  %31 = load ptr, ptr %17, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  br label %34

34:                                               ; preds = %29, %14
  %35 = phi i32 [ %33, %29 ], [ %23, %14 ]
  %36 = phi ptr [ %31, %29 ], [ %18, %14 ]
  %37 = phi ptr [ %30, %29 ], [ %21, %14 ]
  %38 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 2
  %39 = and i32 %35, 4352
  %40 = icmp ne i32 %39, 0
  %41 = and i32 %35, 1536
  %42 = icmp eq i32 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %49, label %44

44:                                               ; preds = %34
  %45 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  %46 = load i32, ptr %38, align 4, !tbaa !16
  %47 = and i32 %46, 256
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %153, label %52

49:                                               ; preds = %34
  %50 = and i32 %35, 256
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %153, label %52

52:                                               ; preds = %49, %44
  %53 = phi i32 [ %35, %49 ], [ %46, %44 ]
  %54 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %55 = load i32, ptr %54, align 4, !tbaa !16
  %56 = and i32 %55, 4352
  %57 = icmp ne i32 %56, 0
  %58 = and i32 %55, 1536
  %59 = icmp eq i32 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %67, label %61

61:                                               ; preds = %52
  %62 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %36, i32 noundef 0) #13
  %63 = load i32, ptr %54, align 4, !tbaa !16
  %64 = and i32 %63, 256
  %65 = icmp eq i32 %64, 0
  %66 = load i32, ptr %38, align 4, !tbaa !16
  br i1 %65, label %153, label %70

67:                                               ; preds = %52
  %68 = and i32 %55, 256
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %153, label %70

70:                                               ; preds = %61, %67
  %71 = phi i32 [ %53, %67 ], [ %66, %61 ]
  %72 = phi i32 [ %55, %67 ], [ %63, %61 ]
  %73 = and i32 %72, -2147483392
  %74 = icmp eq i32 %73, -2147483392
  %75 = and i32 %71, -2147483392
  %76 = icmp eq i32 %75, -2147483392
  %77 = load ptr, ptr %36, align 8, !tbaa !26
  br i1 %74, label %78, label %81

78:                                               ; preds = %70
  %79 = getelementptr inbounds %struct.xpvuv, ptr %77, i64 0, i32 4
  %80 = load i64, ptr %79, align 8, !tbaa !24
  br label %87

81:                                               ; preds = %70
  %82 = getelementptr inbounds %struct.xpviv, ptr %77, i64 0, i32 4
  %83 = load i64, ptr %82, align 8, !tbaa !24
  %84 = icmp sgt i64 %83, -1
  %85 = tail call i64 @llvm.abs.i64(i64 %83, i1 false)
  %86 = zext i1 %84 to i8
  br label %87

87:                                               ; preds = %81, %78
  %88 = phi i64 [ %80, %78 ], [ %85, %81 ]
  %89 = phi i8 [ 1, %78 ], [ %86, %81 ]
  %90 = load ptr, ptr %37, align 8, !tbaa !26
  br i1 %76, label %91, label %94

91:                                               ; preds = %87
  %92 = getelementptr inbounds %struct.xpvuv, ptr %90, i64 0, i32 4
  %93 = load i64, ptr %92, align 8, !tbaa !24
  br label %100

94:                                               ; preds = %87
  %95 = getelementptr inbounds %struct.xpviv, ptr %90, i64 0, i32 4
  %96 = load i64, ptr %95, align 8, !tbaa !24
  %97 = icmp sgt i64 %96, -1
  %98 = tail call i64 @llvm.abs.i64(i64 %96, i1 false)
  %99 = zext i1 %97 to i8
  br label %100

100:                                              ; preds = %94, %91
  %101 = phi i64 [ %93, %91 ], [ %98, %94 ]
  %102 = phi i8 [ 1, %91 ], [ %99, %94 ]
  %103 = and i64 %88, 4294967295
  %104 = and i64 %101, 4294967295
  %105 = icmp ugt i64 %88, 4294967295
  %106 = icmp ugt i64 %101, 4294967295
  %107 = select i1 %105, i1 %106, i1 false
  br i1 %107, label %153, label %108

108:                                              ; preds = %100
  %109 = select i1 %105, i1 true, i1 %106
  br i1 %109, label %126, label %110

110:                                              ; preds = %108
  %111 = mul nuw i64 %104, %103
  %112 = icmp eq i8 %89, %102
  br i1 %112, label %113, label %118

113:                                              ; preds = %110
  tail call void @Perl_sv_setuv(ptr noundef %16, i64 noundef %111) #13
  %114 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %115 = load i32, ptr %114, align 4, !tbaa !16
  %116 = and i32 %115, 4194304
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %184, label %182

118:                                              ; preds = %110
  %119 = icmp ult i64 %111, -9223372036854775807
  br i1 %119, label %120, label %153

120:                                              ; preds = %118
  %121 = sub nsw i64 0, %111
  tail call void @Perl_sv_setiv(ptr noundef %16, i64 noundef %121) #13
  %122 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %123 = load i32, ptr %122, align 4, !tbaa !16
  %124 = and i32 %123, 4194304
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %184, label %182

126:                                              ; preds = %108
  %127 = select i1 %106, i64 %101, i64 %88
  %128 = select i1 %106, i64 %103, i64 %104
  %129 = lshr i64 %127, 32
  %130 = mul nuw i64 %129, %128
  %131 = icmp ult i64 %130, 4294967296
  br i1 %131, label %132, label %153

132:                                              ; preds = %126
  %133 = select i1 %106, i64 %104, i64 %103
  %134 = shl nuw i64 %130, 32
  %135 = mul nuw i64 %133, %128
  %136 = add i64 %134, %135
  %137 = icmp ult i64 %136, %134
  br i1 %137, label %153, label %138

138:                                              ; preds = %132
  %139 = icmp eq i8 %89, %102
  br i1 %139, label %140, label %145

140:                                              ; preds = %138
  tail call void @Perl_sv_setuv(ptr noundef %16, i64 noundef %136) #13
  %141 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %142 = load i32, ptr %141, align 4, !tbaa !16
  %143 = and i32 %142, 4194304
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %184, label %182

145:                                              ; preds = %138
  %146 = icmp ult i64 %136, -9223372036854775807
  br i1 %146, label %147, label %153

147:                                              ; preds = %145
  %148 = sub i64 0, %136
  tail call void @Perl_sv_setiv(ptr noundef %16, i64 noundef %148) #13
  %149 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %150 = load i32, ptr %149, align 4, !tbaa !16
  %151 = and i32 %150, 4194304
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %184, label %182

153:                                              ; preds = %132, %145, %126, %100, %118, %61, %67, %49, %44
  %154 = phi i32 [ %71, %132 ], [ %71, %145 ], [ %71, %126 ], [ %71, %100 ], [ %71, %118 ], [ %66, %61 ], [ %53, %67 ], [ %35, %49 ], [ %46, %44 ]
  %155 = and i32 %154, 512
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %161, label %157

157:                                              ; preds = %153
  %158 = load ptr, ptr %37, align 8, !tbaa !26
  %159 = getelementptr inbounds %struct.xpvnv, ptr %158, i64 0, i32 5
  %160 = load double, ptr %159, align 8, !tbaa !24
  br label %163

161:                                              ; preds = %153
  %162 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  br label %163

163:                                              ; preds = %161, %157
  %164 = phi fast double [ %160, %157 ], [ %162, %161 ]
  %165 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %166 = load i32, ptr %165, align 4, !tbaa !16
  %167 = and i32 %166, 512
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %173, label %169

169:                                              ; preds = %163
  %170 = load ptr, ptr %36, align 8, !tbaa !26
  %171 = getelementptr inbounds %struct.xpvnv, ptr %170, i64 0, i32 5
  %172 = load double, ptr %171, align 8, !tbaa !24
  br label %175

173:                                              ; preds = %163
  %174 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %36, i32 noundef 0) #13
  br label %175

175:                                              ; preds = %173, %169
  %176 = phi fast double [ %172, %169 ], [ %174, %173 ]
  %177 = fmul fast double %176, %164
  tail call void @Perl_sv_setnv(ptr noundef %16, double noundef nofpclass(nan inf) %177) #13
  %178 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %179 = load i32, ptr %178, align 4, !tbaa !16
  %180 = and i32 %179, 4194304
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %184, label %182

182:                                              ; preds = %175, %147, %140, %120, %113
  %183 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %184

184:                                              ; preds = %182, %175, %147, %140, %120, %113
  store ptr %16, ptr %17, align 8, !tbaa !5
  store ptr %17, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %185

185:                                              ; preds = %184, %27
  %186 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %187 = load ptr, ptr %186, align 8, !tbaa !13
  ret ptr %187
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_divide() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !9
  %5 = and i8 %4, 64
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %0
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  br label %14

9:                                                ; preds = %0
  %10 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %12 = load i64, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds ptr, ptr %10, i64 %12
  br label %14

14:                                               ; preds = %9, %7
  %15 = phi ptr [ %8, %7 ], [ %13, %9 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %17 = getelementptr inbounds ptr, ptr %1, i64 -1
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = load ptr, ptr %1, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  %24 = or i32 %23, %20
  %25 = and i32 %24, 2099200
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %14
  %28 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 36, i32 noundef 20) #13
  br i1 %28, label %34, label %29

29:                                               ; preds = %27
  %30 = load ptr, ptr %1, align 8, !tbaa !5
  %31 = load ptr, ptr %17, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  br label %37

34:                                               ; preds = %27
  %35 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %36 = load ptr, ptr %35, align 8, !tbaa !13
  br label %185

37:                                               ; preds = %29, %14
  %38 = phi i32 [ %33, %29 ], [ %23, %14 ]
  %39 = phi ptr [ %31, %29 ], [ %18, %14 ]
  %40 = phi ptr [ %30, %29 ], [ %21, %14 ]
  %41 = getelementptr inbounds %struct.sv, ptr %40, i64 0, i32 2
  %42 = and i32 %38, 4352
  %43 = icmp ne i32 %42, 0
  %44 = and i32 %38, 1536
  %45 = icmp eq i32 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %52, label %47

47:                                               ; preds = %37
  %48 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %40, i32 noundef 0) #13
  %49 = load i32, ptr %41, align 4, !tbaa !16
  %50 = and i32 %49, 256
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %147, label %55

52:                                               ; preds = %37
  %53 = and i32 %38, 256
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %147, label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %38, %52 ], [ %49, %47 ]
  %57 = getelementptr inbounds %struct.sv, ptr %39, i64 0, i32 2
  %58 = load i32, ptr %57, align 4, !tbaa !16
  %59 = and i32 %58, 4352
  %60 = icmp ne i32 %59, 0
  %61 = and i32 %58, 1536
  %62 = icmp eq i32 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %70, label %64

64:                                               ; preds = %55
  %65 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %39, i32 noundef 0) #13
  %66 = load i32, ptr %57, align 4, !tbaa !16
  %67 = and i32 %66, 256
  %68 = icmp eq i32 %67, 0
  %69 = load i32, ptr %41, align 4, !tbaa !16
  br i1 %68, label %147, label %73

70:                                               ; preds = %55
  %71 = and i32 %58, 256
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %147, label %73

73:                                               ; preds = %64, %70
  %74 = phi i32 [ %56, %70 ], [ %69, %64 ]
  %75 = phi i32 [ %58, %70 ], [ %66, %64 ]
  %76 = and i32 %75, -2147483392
  %77 = icmp eq i32 %76, -2147483392
  %78 = and i32 %74, -2147483392
  %79 = icmp eq i32 %78, -2147483392
  %80 = load ptr, ptr %40, align 8, !tbaa !26
  br i1 %79, label %81, label %84

81:                                               ; preds = %73
  %82 = getelementptr inbounds %struct.xpvuv, ptr %80, i64 0, i32 4
  %83 = load i64, ptr %82, align 8, !tbaa !24
  br label %89

84:                                               ; preds = %73
  %85 = getelementptr inbounds %struct.xpviv, ptr %80, i64 0, i32 4
  %86 = load i64, ptr %85, align 8, !tbaa !24
  %87 = icmp sgt i64 %86, -1
  %88 = tail call i64 @llvm.abs.i64(i64 %86, i1 false)
  br label %89

89:                                               ; preds = %84, %81
  %90 = phi i64 [ %83, %81 ], [ %88, %84 ]
  %91 = phi i1 [ true, %81 ], [ %87, %84 ]
  %92 = icmp eq i64 %90, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.26) #13
  br label %185

95:                                               ; preds = %89
  %96 = load ptr, ptr %39, align 8, !tbaa !26
  br i1 %77, label %97, label %100

97:                                               ; preds = %95
  %98 = getelementptr inbounds %struct.xpvuv, ptr %96, i64 0, i32 4
  %99 = load i64, ptr %98, align 8, !tbaa !24
  br label %105

100:                                              ; preds = %95
  %101 = getelementptr inbounds %struct.xpviv, ptr %96, i64 0, i32 4
  %102 = load i64, ptr %101, align 8, !tbaa !24
  %103 = icmp sgt i64 %102, -1
  %104 = tail call i64 @llvm.abs.i64(i64 %102, i1 false)
  br label %105

105:                                              ; preds = %100, %97
  %106 = phi i64 [ %99, %97 ], [ %104, %100 ]
  %107 = phi i1 [ true, %97 ], [ %103, %100 ]
  %108 = icmp uge i64 %106, %90
  %109 = icmp ugt i64 %106, 9007199254740992
  %110 = and i1 %108, %109
  br i1 %110, label %111, label %147

111:                                              ; preds = %105
  %112 = udiv i64 %106, %90
  %113 = mul i64 %112, %90
  %114 = icmp eq i64 %113, %106
  br i1 %114, label %115, label %147

115:                                              ; preds = %111
  %116 = xor i1 %91, %107
  br i1 %116, label %127, label %117

117:                                              ; preds = %115
  tail call void @Perl_sv_setuv(ptr noundef %16, i64 noundef %112) #13
  %118 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %119 = load i32, ptr %118, align 4, !tbaa !16
  %120 = and i32 %119, 4194304
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %117
  %123 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %124

124:                                              ; preds = %117, %122
  store ptr %16, ptr %17, align 8, !tbaa !5
  store ptr %17, ptr @PL_stack_sp, align 8, !tbaa !5
  %125 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %126 = load ptr, ptr %125, align 8, !tbaa !13
  br label %185

127:                                              ; preds = %115
  %128 = icmp ult i64 %112, -9223372036854775807
  br i1 %128, label %129, label %135

129:                                              ; preds = %127
  %130 = sub i64 0, %112
  tail call void @Perl_sv_setiv(ptr noundef %16, i64 noundef %130) #13
  %131 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %132 = load i32, ptr %131, align 4, !tbaa !16
  %133 = and i32 %132, 4194304
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %144, label %142

135:                                              ; preds = %127
  %136 = uitofp i64 %112 to double
  %137 = fneg fast double %136
  tail call void @Perl_sv_setnv(ptr noundef %16, double noundef nofpclass(nan inf) %137) #13
  %138 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %139 = load i32, ptr %138, align 4, !tbaa !16
  %140 = and i32 %139, 4194304
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %144, label %142

142:                                              ; preds = %135, %129
  %143 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %144

144:                                              ; preds = %142, %135, %129
  store ptr %16, ptr %17, align 8, !tbaa !5
  store ptr %17, ptr @PL_stack_sp, align 8, !tbaa !5
  %145 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %146 = load ptr, ptr %145, align 8, !tbaa !13
  br label %185

147:                                              ; preds = %105, %111, %70, %64, %52, %47
  %148 = phi i32 [ %74, %105 ], [ %74, %111 ], [ %56, %70 ], [ %69, %64 ], [ %38, %52 ], [ %49, %47 ]
  %149 = and i32 %148, 512
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %155, label %151

151:                                              ; preds = %147
  %152 = load ptr, ptr %40, align 8, !tbaa !26
  %153 = getelementptr inbounds %struct.xpvnv, ptr %152, i64 0, i32 5
  %154 = load double, ptr %153, align 8, !tbaa !24
  br label %157

155:                                              ; preds = %147
  %156 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %40, i32 noundef 0) #13
  br label %157

157:                                              ; preds = %155, %151
  %158 = phi fast double [ %154, %151 ], [ %156, %155 ]
  %159 = getelementptr inbounds %struct.sv, ptr %39, i64 0, i32 2
  %160 = load i32, ptr %159, align 4, !tbaa !16
  %161 = and i32 %160, 512
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %167, label %163

163:                                              ; preds = %157
  %164 = load ptr, ptr %39, align 8, !tbaa !26
  %165 = getelementptr inbounds %struct.xpvnv, ptr %164, i64 0, i32 5
  %166 = load double, ptr %165, align 8, !tbaa !24
  br label %169

167:                                              ; preds = %157
  %168 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %39, i32 noundef 0) #13
  br label %169

169:                                              ; preds = %167, %163
  %170 = phi fast double [ %166, %163 ], [ %168, %167 ]
  %171 = fcmp fast oeq double %158, 0.000000e+00
  br i1 %171, label %172, label %174

172:                                              ; preds = %169
  %173 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.26) #13
  br label %185

174:                                              ; preds = %169
  %175 = fdiv fast double %170, %158
  tail call void @Perl_sv_setnv(ptr noundef %16, double noundef nofpclass(nan inf) %175) #13
  %176 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %177 = load i32, ptr %176, align 4, !tbaa !16
  %178 = and i32 %177, 4194304
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %174
  %181 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %182

182:                                              ; preds = %174, %180
  store ptr %16, ptr %17, align 8, !tbaa !5
  store ptr %17, ptr @PL_stack_sp, align 8, !tbaa !5
  %183 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %184 = load ptr, ptr %183, align 8, !tbaa !13
  br label %185

185:                                              ; preds = %124, %144, %93, %172, %182, %34
  %186 = phi ptr [ %36, %34 ], [ %173, %172 ], [ %184, %182 ], [ %94, %93 ], [ %146, %144 ], [ %126, %124 ]
  ret ptr %186
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_modulo() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !9
  %5 = and i8 %4, 64
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %0
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  br label %14

9:                                                ; preds = %0
  %10 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %12 = load i64, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds ptr, ptr %10, i64 %12
  br label %14

14:                                               ; preds = %9, %7
  %15 = phi ptr [ %8, %7 ], [ %13, %9 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %17 = getelementptr inbounds ptr, ptr %1, i64 -1
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = load ptr, ptr %1, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  %24 = or i32 %23, %20
  %25 = and i32 %24, 2099200
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %14
  %28 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 38, i32 noundef 20) #13
  br i1 %28, label %34, label %29

29:                                               ; preds = %27
  %30 = load ptr, ptr %1, align 8, !tbaa !5
  %31 = load ptr, ptr %17, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  br label %37

34:                                               ; preds = %27
  %35 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %36 = load ptr, ptr %35, align 8, !tbaa !13
  br label %208

37:                                               ; preds = %29, %14
  %38 = phi i32 [ %33, %29 ], [ %23, %14 ]
  %39 = phi ptr [ %31, %29 ], [ %18, %14 ]
  %40 = phi ptr [ %30, %29 ], [ %21, %14 ]
  %41 = and i32 %38, 4352
  %42 = icmp ne i32 %41, 0
  %43 = and i32 %38, 1536
  %44 = icmp eq i32 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %52, label %46

46:                                               ; preds = %37
  %47 = getelementptr inbounds %struct.sv, ptr %40, i64 0, i32 2
  %48 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %40, i32 noundef 0) #13
  %49 = load i32, ptr %47, align 4, !tbaa !16
  %50 = and i32 %49, 256
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %69, label %55

52:                                               ; preds = %37
  %53 = and i32 %38, 256
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %69, label %55

55:                                               ; preds = %52, %46
  %56 = phi i32 [ %38, %52 ], [ %49, %46 ]
  %57 = and i32 %56, -2147483392
  %58 = icmp eq i32 %57, -2147483392
  %59 = load ptr, ptr %40, align 8, !tbaa !26
  br i1 %58, label %60, label %63

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.xpvuv, ptr %59, i64 0, i32 4
  %62 = load i64, ptr %61, align 8, !tbaa !24
  br label %91

63:                                               ; preds = %55
  %64 = getelementptr inbounds %struct.xpviv, ptr %59, i64 0, i32 4
  %65 = load i64, ptr %64, align 8, !tbaa !24
  %66 = tail call i64 @llvm.abs.i64(i64 %65, i1 false)
  %67 = lshr i64 %65, 63
  %68 = trunc i64 %67 to i8
  br label %91

69:                                               ; preds = %52, %46
  %70 = phi i32 [ %38, %52 ], [ %49, %46 ]
  %71 = and i32 %70, 512
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %69
  %74 = load ptr, ptr %40, align 8, !tbaa !26
  %75 = getelementptr inbounds %struct.xpvnv, ptr %74, i64 0, i32 5
  %76 = load double, ptr %75, align 8, !tbaa !24
  br label %79

77:                                               ; preds = %69
  %78 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %40, i32 noundef 0) #13
  br label %79

79:                                               ; preds = %77, %73
  %80 = phi fast double [ %76, %73 ], [ %78, %77 ]
  %81 = fcmp fast olt double %80, 0.000000e+00
  %82 = zext i1 %81 to i8
  %83 = fneg fast double %80
  %84 = select nnan ninf i1 %81, double %83, double %80
  %85 = fcmp fast olt double %84, 0x43F0000000000000
  br i1 %85, label %89, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %struct.sv, ptr %39, i64 0, i32 2
  %88 = load i32, ptr %87, align 4, !tbaa !16
  br label %125

89:                                               ; preds = %79
  %90 = tail call i64 @Perl_cast_uv(double noundef nofpclass(nan inf) %84) #13
  br label %91

91:                                               ; preds = %63, %60, %89
  %92 = phi i64 [ %90, %89 ], [ %62, %60 ], [ %66, %63 ]
  %93 = phi i8 [ %82, %89 ], [ 0, %60 ], [ %68, %63 ]
  %94 = phi i1 [ true, %89 ], [ false, %60 ], [ false, %63 ]
  %95 = phi double [ %84, %89 ], [ 0.000000e+00, %60 ], [ 0.000000e+00, %63 ]
  %96 = getelementptr inbounds %struct.sv, ptr %39, i64 0, i32 2
  %97 = load i32, ptr %96, align 4, !tbaa !16
  %98 = and i32 %97, 4352
  %99 = icmp ne i32 %98, 0
  %100 = and i32 %97, 1536
  %101 = icmp eq i32 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %108, label %103

103:                                              ; preds = %91
  %104 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %39, i32 noundef 0) #13
  %105 = load i32, ptr %96, align 4, !tbaa !16
  %106 = and i32 %105, 256
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %125, label %111

108:                                              ; preds = %91
  %109 = and i32 %97, 256
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %125, label %111

111:                                              ; preds = %108, %103
  %112 = phi i32 [ %97, %108 ], [ %105, %103 ]
  %113 = and i32 %112, -2147483392
  %114 = icmp eq i32 %113, -2147483392
  %115 = load ptr, ptr %39, align 8, !tbaa !26
  br i1 %114, label %116, label %119

116:                                              ; preds = %111
  %117 = getelementptr inbounds %struct.xpvuv, ptr %115, i64 0, i32 4
  %118 = load i64, ptr %117, align 8, !tbaa !24
  br label %174

119:                                              ; preds = %111
  %120 = getelementptr inbounds %struct.xpviv, ptr %115, i64 0, i32 4
  %121 = load i64, ptr %120, align 8, !tbaa !24
  %122 = lshr i64 %121, 63
  %123 = trunc i64 %122 to i8
  %124 = tail call i64 @llvm.abs.i64(i64 %121, i1 false)
  br label %174

125:                                              ; preds = %86, %108, %103
  %126 = phi i32 [ %97, %108 ], [ %105, %103 ], [ %88, %86 ]
  %127 = phi double [ %95, %108 ], [ %95, %103 ], [ %84, %86 ]
  %128 = phi i1 [ %94, %108 ], [ %94, %103 ], [ false, %86 ]
  %129 = phi i1 [ true, %108 ], [ true, %103 ], [ false, %86 ]
  %130 = phi i8 [ %93, %108 ], [ %93, %103 ], [ %82, %86 ]
  %131 = phi i64 [ %92, %108 ], [ %92, %103 ], [ 0, %86 ]
  %132 = and i32 %126, 512
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %138, label %134

134:                                              ; preds = %125
  %135 = load ptr, ptr %39, align 8, !tbaa !26
  %136 = getelementptr inbounds %struct.xpvnv, ptr %135, i64 0, i32 5
  %137 = load double, ptr %136, align 8, !tbaa !24
  br label %140

138:                                              ; preds = %125
  %139 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %39, i32 noundef 0) #13
  br label %140

140:                                              ; preds = %138, %134
  %141 = phi fast double [ %137, %134 ], [ %139, %138 ]
  %142 = fcmp fast olt double %141, 0.000000e+00
  %143 = zext i1 %142 to i8
  %144 = fneg fast double %141
  %145 = select nnan ninf i1 %142, double %144, double %141
  br i1 %129, label %146, label %158

146:                                              ; preds = %140
  %147 = fcmp fast olt double %145, 0x43F0000000000000
  br i1 %147, label %148, label %150

148:                                              ; preds = %146
  %149 = tail call i64 @Perl_cast_uv(double noundef nofpclass(nan inf) %145) #13
  br label %174

150:                                              ; preds = %146
  %151 = fadd fast double %145, 5.000000e-01
  %152 = tail call fast double @llvm.floor.f64(double %151)
  br i1 %128, label %153, label %156

153:                                              ; preds = %150
  %154 = fadd fast double %127, 5.000000e-01
  %155 = tail call fast double @llvm.floor.f64(double %154)
  br label %158

156:                                              ; preds = %150
  %157 = uitofp i64 %131 to double
  br label %158

158:                                              ; preds = %140, %156, %153
  %159 = phi double [ %152, %153 ], [ %152, %156 ], [ %145, %140 ]
  %160 = phi double [ %155, %153 ], [ %157, %156 ], [ %127, %140 ]
  %161 = fcmp fast une double %160, 0.000000e+00
  br i1 %161, label %162, label %172

162:                                              ; preds = %158
  %163 = frem fast double %159, %160
  %164 = icmp eq i8 %130, 0
  %165 = icmp ne i8 %130, %143
  %166 = fcmp fast une double %163, 0.000000e+00
  %167 = select i1 %165, i1 %166, i1 false
  %168 = fsub fast double %160, %163
  %169 = select i1 %167, double %168, double %163
  %170 = fneg fast double %169
  %171 = select i1 %164, double %169, double %170
  tail call void @Perl_sv_setnv(ptr noundef %16, double noundef nofpclass(nan inf) %171) #13
  br label %198

172:                                              ; preds = %158
  %173 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.27) #13
  br label %208

174:                                              ; preds = %148, %116, %119
  %175 = phi i64 [ %118, %116 ], [ %124, %119 ], [ %149, %148 ]
  %176 = phi i8 [ 0, %116 ], [ %123, %119 ], [ %143, %148 ]
  %177 = phi i64 [ %92, %116 ], [ %92, %119 ], [ %131, %148 ]
  %178 = phi i8 [ %93, %116 ], [ %93, %119 ], [ %130, %148 ]
  %179 = icmp eq i64 %177, 0
  br i1 %179, label %196, label %180

180:                                              ; preds = %174
  %181 = urem i64 %175, %177
  %182 = icmp eq i8 %178, 0
  %183 = icmp ne i8 %176, %178
  %184 = icmp ne i64 %181, 0
  %185 = select i1 %183, i1 %184, i1 false
  %186 = sub i64 %177, %181
  %187 = select i1 %185, i64 %186, i64 %181
  br i1 %182, label %195, label %188

188:                                              ; preds = %180
  %189 = icmp ult i64 %187, -9223372036854775806
  br i1 %189, label %190, label %192

190:                                              ; preds = %188
  %191 = sub i64 0, %187
  tail call void @Perl_sv_setiv(ptr noundef %16, i64 noundef %191) #13
  br label %198

192:                                              ; preds = %188
  %193 = uitofp i64 %187 to double
  %194 = fneg fast double %193
  tail call void @Perl_sv_setnv(ptr noundef %16, double noundef nofpclass(nan inf) %194) #13
  br label %198

195:                                              ; preds = %180
  tail call void @Perl_sv_setuv(ptr noundef %16, i64 noundef %187) #13
  br label %198

196:                                              ; preds = %174
  %197 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.27) #13
  br label %208

198:                                              ; preds = %190, %192, %195, %162
  %199 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %200 = load i32, ptr %199, align 4, !tbaa !16
  %201 = and i32 %200, 4194304
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %205, label %203

203:                                              ; preds = %198
  %204 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %205

205:                                              ; preds = %198, %203
  store ptr %16, ptr %17, align 8, !tbaa !5
  store ptr %17, ptr @PL_stack_sp, align 8, !tbaa !5
  %206 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %207 = load ptr, ptr %206, align 8, !tbaa !13
  br label %208

208:                                              ; preds = %196, %172, %205, %34
  %209 = phi ptr [ %36, %34 ], [ %207, %205 ], [ %173, %172 ], [ %197, %196 ]
  ret ptr %209
}

declare i64 @Perl_cast_uv(double noundef nofpclass(nan inf)) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.floor.f64(double) #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_repeat() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 5
  %5 = load i8, ptr %4, align 2, !tbaa !9
  %6 = and i8 %5, 64
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %0
  %9 = getelementptr inbounds ptr, ptr %2, i64 -1
  br label %15

10:                                               ; preds = %0
  %11 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %12 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %13 = load i64, ptr %12, align 8, !tbaa !14
  %14 = getelementptr inbounds ptr, ptr %11, i64 %13
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi ptr [ %9, %8 ], [ %14, %10 ]
  %17 = load ptr, ptr %16, align 8, !tbaa !5
  %18 = and i8 %5, 3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  %21 = zext i8 %18 to i32
  br label %25

22:                                               ; preds = %15
  %23 = tail call i32 @Perl_block_gimme() #13
  %24 = load ptr, ptr @PL_op, align 8, !tbaa !5
  br label %25

25:                                               ; preds = %22, %20
  %26 = phi ptr [ %3, %20 ], [ %24, %22 ]
  %27 = phi i32 [ %21, %20 ], [ %23, %22 ]
  %28 = icmp eq i32 %27, 3
  %29 = getelementptr inbounds %struct.op, ptr %26, i64 0, i32 6
  %30 = load i8, ptr %29, align 1, !tbaa !15
  %31 = and i8 %30, 64
  %32 = icmp eq i8 %31, 0
  br i1 %28, label %33, label %42

33:                                               ; preds = %25
  br i1 %32, label %71, label %34

34:                                               ; preds = %33
  %35 = load ptr, ptr %2, align 8, !tbaa !5
  %36 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 2
  %37 = load i32, ptr %36, align 4, !tbaa !16
  %38 = and i32 %37, 2097152
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %87, label %40

40:                                               ; preds = %34
  %41 = tail call i32 @Perl_mg_get(ptr noundef nonnull %35) #13
  br label %87

42:                                               ; preds = %25
  br i1 %32, label %71, label %43

43:                                               ; preds = %42
  %44 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %45 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %46 = getelementptr inbounds i32, ptr %45, i64 -1
  store ptr %46, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %47 = load i32, ptr %45, align 4, !tbaa !57
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds ptr, ptr %44, i64 %48
  %50 = getelementptr inbounds ptr, ptr %49, i64 1
  %51 = icmp ult ptr %50, %2
  br i1 %51, label %52, label %57

52:                                               ; preds = %43
  %53 = getelementptr inbounds ptr, ptr %2, i64 -1
  %54 = load ptr, ptr %53, align 8, !tbaa !5
  store ptr %54, ptr %50, align 8, !tbaa !5
  %55 = load ptr, ptr %2, align 8, !tbaa !5
  %56 = getelementptr inbounds ptr, ptr %49, i64 2
  store ptr %55, ptr %56, align 8, !tbaa !5
  br label %69

57:                                               ; preds = %43
  %58 = load ptr, ptr %2, align 8, !tbaa !5
  %59 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %60 = ptrtoint ptr %59 to i64
  %61 = ptrtoint ptr %2 to i64
  %62 = sub i64 %60, %61
  %63 = icmp slt i64 %62, 8
  br i1 %63, label %64, label %66

64:                                               ; preds = %57
  %65 = tail call ptr @Perl_stack_grow(ptr noundef nonnull %2, ptr noundef nonnull %2, i64 noundef 1) #13
  br label %66

66:                                               ; preds = %57, %64
  %67 = phi ptr [ %65, %64 ], [ %2, %57 ]
  %68 = getelementptr inbounds ptr, ptr %67, i64 1
  store ptr %58, ptr %68, align 8, !tbaa !5
  store ptr @PL_sv_undef, ptr %50, align 8, !tbaa !5
  br label %69

69:                                               ; preds = %66, %52
  %70 = getelementptr inbounds ptr, ptr %49, i64 2
  br label %71

71:                                               ; preds = %33, %69, %42
  %72 = phi ptr [ %70, %69 ], [ %2, %42 ], [ %2, %33 ]
  %73 = getelementptr inbounds ptr, ptr %72, i64 -1
  %74 = load ptr, ptr %73, align 8, !tbaa !5
  %75 = getelementptr inbounds %struct.sv, ptr %74, i64 0, i32 2
  %76 = load i32, ptr %75, align 4, !tbaa !16
  %77 = load ptr, ptr %72, align 8, !tbaa !5
  %78 = getelementptr inbounds %struct.sv, ptr %77, i64 0, i32 2
  %79 = load i32, ptr %78, align 4, !tbaa !16
  %80 = or i32 %79, %76
  %81 = and i32 %80, 2099200
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %71
  %84 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 68, i32 noundef 4) #13
  br i1 %84, label %340, label %85

85:                                               ; preds = %83
  %86 = load ptr, ptr %72, align 8, !tbaa !5
  br label %87

87:                                               ; preds = %71, %85, %40, %34
  %88 = phi ptr [ %35, %34 ], [ %35, %40 ], [ %86, %85 ], [ %77, %71 ]
  %89 = phi ptr [ %2, %34 ], [ %2, %40 ], [ %72, %85 ], [ %72, %71 ]
  %90 = getelementptr inbounds ptr, ptr %89, i64 -1
  %91 = getelementptr inbounds %struct.sv, ptr %88, i64 0, i32 2
  %92 = load i32, ptr %91, align 4, !tbaa !16
  %93 = and i32 %92, 4096
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %117, label %95

95:                                               ; preds = %87
  %96 = and i32 %92, -2147483392
  %97 = icmp eq i32 %96, -2147483392
  %98 = and i32 %92, 256
  %99 = icmp eq i32 %98, 0
  br i1 %97, label %100, label %110

100:                                              ; preds = %95
  br i1 %99, label %105, label %101

101:                                              ; preds = %100
  %102 = load ptr, ptr %88, align 8, !tbaa !26
  %103 = getelementptr inbounds %struct.xpvuv, ptr %102, i64 0, i32 4
  %104 = load i64, ptr %103, align 8, !tbaa !24
  br label %107

105:                                              ; preds = %100
  %106 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %88, i32 noundef 0) #13
  br label %107

107:                                              ; preds = %105, %101
  %108 = phi i64 [ %104, %101 ], [ %106, %105 ]
  %109 = tail call i64 @llvm.umin.i64(i64 %108, i64 9223372036854775807)
  br label %150

110:                                              ; preds = %95
  br i1 %99, label %115, label %111

111:                                              ; preds = %110
  %112 = load ptr, ptr %88, align 8, !tbaa !26
  %113 = getelementptr inbounds %struct.xpviv, ptr %112, i64 0, i32 4
  %114 = load i64, ptr %113, align 8, !tbaa !24
  br label %146

115:                                              ; preds = %110
  %116 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %88, i32 noundef 0) #13
  br label %146

117:                                              ; preds = %87
  %118 = and i32 %92, 8192
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %136, label %120

120:                                              ; preds = %117
  %121 = and i32 %92, 512
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %127, label %123

123:                                              ; preds = %120
  %124 = load ptr, ptr %88, align 8, !tbaa !26
  %125 = getelementptr inbounds %struct.xpvnv, ptr %124, i64 0, i32 5
  %126 = load double, ptr %125, align 8, !tbaa !24
  br label %129

127:                                              ; preds = %120
  %128 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %88, i32 noundef 0) #13
  br label %129

129:                                              ; preds = %127, %123
  %130 = phi fast double [ %126, %123 ], [ %128, %127 ]
  %131 = tail call zeroext i1 @Perl_isinfnan(double noundef nofpclass(nan inf) %130) #13
  br i1 %131, label %145, label %132

132:                                              ; preds = %129
  %133 = fcmp fast olt double %130, 0.000000e+00
  br i1 %133, label %149, label %134

134:                                              ; preds = %132
  %135 = fptosi double %130 to i64
  br label %146

136:                                              ; preds = %117
  %137 = and i32 %92, 256
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %143, label %139

139:                                              ; preds = %136
  %140 = load ptr, ptr %88, align 8, !tbaa !26
  %141 = getelementptr inbounds %struct.xpviv, ptr %140, i64 0, i32 4
  %142 = load i64, ptr %141, align 8, !tbaa !24
  br label %146

143:                                              ; preds = %136
  %144 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %88, i32 noundef 0) #13
  br label %146

145:                                              ; preds = %129
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 13, ptr noundef nonnull @.str.28) #13
  br label %150

146:                                              ; preds = %115, %111, %134, %143, %139
  %147 = phi i64 [ %144, %143 ], [ %142, %139 ], [ %135, %134 ], [ %116, %115 ], [ %114, %111 ]
  %148 = icmp slt i64 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %132, %146
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 13, ptr noundef nonnull @.str.29) #13
  br label %150

150:                                              ; preds = %107, %146, %149, %145
  %151 = phi i64 [ 0, %145 ], [ 0, %149 ], [ %147, %146 ], [ %109, %107 ]
  %152 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %153 = getelementptr inbounds %struct.op, ptr %152, i64 0, i32 5
  %154 = load i8, ptr %153, align 2, !tbaa !9
  %155 = and i8 %154, 3
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %159, label %157

157:                                              ; preds = %150
  %158 = zext i8 %155 to i32
  br label %161

159:                                              ; preds = %150
  %160 = tail call i32 @Perl_block_gimme() #13
  br label %161

161:                                              ; preds = %159, %157
  %162 = phi i32 [ %158, %157 ], [ %160, %159 ]
  %163 = icmp eq i32 %162, 3
  br i1 %163, label %164, label %257

164:                                              ; preds = %161
  %165 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %166 = getelementptr inbounds %struct.op, ptr %165, i64 0, i32 6
  %167 = load i8, ptr %166, align 1, !tbaa !15
  %168 = and i8 %167, 64
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %257, label %170

170:                                              ; preds = %164
  %171 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %172 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %172, i64 -1
  store ptr %173, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %174 = load i32, ptr %172, align 4, !tbaa !57
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds ptr, ptr %171, i64 %175
  %177 = ptrtoint ptr %90 to i64
  %178 = ptrtoint ptr %176 to i64
  %179 = sub i64 %177, %178
  %180 = ashr exact i64 %179, 3
  %181 = getelementptr inbounds %struct.op, ptr %165, i64 0, i32 5
  %182 = load i8, ptr %181, align 2, !tbaa !9
  %183 = freeze i8 %182
  %184 = and i8 %183, 32
  %185 = icmp ugt i64 %151, 1
  br i1 %185, label %186, label %252

186:                                              ; preds = %170
  %187 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %151, i64 %180)
  %188 = extractvalue { i64, i1 } %187, 1
  %189 = icmp ugt i64 %179, 2147483640
  %190 = select i1 %188, i1 true, i1 %189
  br i1 %190, label %191, label %192

191:                                              ; preds = %186
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.6, ptr noundef nonnull @.str.30) #13
  br label %192

192:                                              ; preds = %186, %191
  %193 = mul i64 %180, %151
  %194 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %195 = ptrtoint ptr %194 to i64
  %196 = sub i64 %195, %178
  %197 = ashr exact i64 %196, 3
  %198 = icmp slt i64 %197, %193
  br i1 %198, label %199, label %207

199:                                              ; preds = %192
  %200 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %201 = ptrtoint ptr %200 to i64
  %202 = sub i64 %178, %201
  %203 = ashr exact i64 %202, 3
  %204 = tail call ptr @Perl_stack_grow(ptr noundef nonnull %90, ptr noundef %176, i64 noundef %193) #13
  %205 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %206 = getelementptr inbounds ptr, ptr %205, i64 %203
  br label %207

207:                                              ; preds = %192, %199
  %208 = phi ptr [ %206, %199 ], [ %176, %192 ]
  %209 = phi ptr [ %204, %199 ], [ %90, %192 ]
  %210 = icmp ugt ptr %209, %208
  br i1 %210, label %211, label %245

211:                                              ; preds = %207
  %212 = icmp eq i8 %184, 0
  br i1 %212, label %213, label %224

213:                                              ; preds = %211, %221
  %214 = phi ptr [ %222, %221 ], [ %209, %211 ]
  %215 = load ptr, ptr %214, align 8, !tbaa !5
  %216 = icmp eq ptr %215, null
  br i1 %216, label %221, label %217

217:                                              ; preds = %213
  %218 = getelementptr inbounds %struct.sv, ptr %215, i64 0, i32 2
  %219 = load i32, ptr %218, align 4, !tbaa !16
  %220 = and i32 %219, -524289
  store i32 %220, ptr %218, align 4, !tbaa !16
  br label %221

221:                                              ; preds = %217, %213
  %222 = getelementptr inbounds ptr, ptr %214, i64 -1
  %223 = icmp ugt ptr %222, %208
  br i1 %223, label %213, label %245, !llvm.loop !96

224:                                              ; preds = %211, %242
  %225 = phi ptr [ %243, %242 ], [ %209, %211 ]
  %226 = load ptr, ptr %225, align 8, !tbaa !5
  %227 = icmp eq ptr %226, null
  br i1 %227, label %242, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %struct.sv, ptr %226, i64 0, i32 2
  %230 = load i32, ptr %229, align 4, !tbaa !16
  %231 = and i32 %230, 131072
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %237, label %233

233:                                              ; preds = %228
  %234 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %226, i32 noundef 1538) #13
  store ptr %234, ptr %225, align 8, !tbaa !5
  %235 = getelementptr inbounds %struct.sv, ptr %234, i64 0, i32 2
  %236 = load i32, ptr %235, align 4, !tbaa !16
  br label %237

237:                                              ; preds = %233, %228
  %238 = phi i32 [ %236, %233 ], [ %230, %228 ]
  %239 = phi ptr [ %234, %233 ], [ %226, %228 ]
  %240 = getelementptr inbounds %struct.sv, ptr %239, i64 0, i32 2
  %241 = and i32 %238, -524289
  store i32 %241, ptr %240, align 4, !tbaa !16
  br label %242

242:                                              ; preds = %237, %224
  %243 = getelementptr inbounds ptr, ptr %225, i64 -1
  %244 = icmp ugt ptr %243, %208
  br i1 %244, label %224, label %245, !llvm.loop !96

245:                                              ; preds = %242, %221, %207
  %246 = phi ptr [ %209, %207 ], [ %222, %221 ], [ %243, %242 ]
  %247 = getelementptr inbounds ptr, ptr %208, i64 1
  %248 = getelementptr inbounds ptr, ptr %247, i64 %180
  %249 = trunc i64 %179 to i32
  %250 = add nsw i64 %151, -1
  tail call void @Perl_repeatcpy(ptr noundef nonnull %248, ptr noundef nonnull %247, i32 noundef %249, i64 noundef %250) #13
  %251 = getelementptr inbounds ptr, ptr %246, i64 %193
  br label %338

252:                                              ; preds = %170
  %253 = icmp eq i64 %151, 1
  br i1 %253, label %338, label %254

254:                                              ; preds = %252
  %255 = sub nsw i64 0, %180
  %256 = getelementptr inbounds ptr, ptr %90, i64 %255
  br label %338

257:                                              ; preds = %164, %161
  %258 = load ptr, ptr %90, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  %259 = icmp eq ptr %17, %258
  br i1 %259, label %261, label %260

260:                                              ; preds = %257
  tail call void @Perl_sv_setsv_flags(ptr noundef %17, ptr noundef %258, i32 noundef 1536) #13
  br label %261

261:                                              ; preds = %260, %257
  %262 = getelementptr inbounds %struct.sv, ptr %17, i64 0, i32 2
  %263 = load i32, ptr %262, align 4, !tbaa !16
  %264 = and i32 %263, 430018304
  %265 = icmp eq i32 %264, 1024
  br i1 %265, label %266, label %270

266:                                              ; preds = %261
  %267 = load ptr, ptr %17, align 8, !tbaa !26
  %268 = getelementptr inbounds %struct.xpv, ptr %267, i64 0, i32 2
  %269 = load i64, ptr %268, align 8, !tbaa !55
  store i64 %269, ptr %1, align 8, !tbaa !71
  br label %273

270:                                              ; preds = %261
  %271 = call ptr @Perl_sv_pvn_force_flags(ptr noundef nonnull %17, ptr noundef nonnull %1, i32 noundef 0) #13
  %272 = load i32, ptr %262, align 4, !tbaa !16
  br label %273

273:                                              ; preds = %270, %266
  %274 = phi i32 [ %272, %270 ], [ %263, %266 ]
  %275 = and i32 %274, 536870912
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %284, label %277

277:                                              ; preds = %273
  %278 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %279 = getelementptr inbounds %struct.cop, ptr %278, i64 0, i32 10
  %280 = load i32, ptr %279, align 8, !tbaa !66
  %281 = and i32 %280, 8
  %282 = icmp eq i32 %281, 0
  %283 = select i1 %282, i32 2147418367, i32 1610547455
  br label %284

284:                                              ; preds = %277, %273
  %285 = phi i32 [ 1610547455, %273 ], [ %283, %277 ]
  switch i64 %151, label %289 [
    i64 1, label %329
    i64 0, label %286
  ]

286:                                              ; preds = %284
  %287 = load ptr, ptr %17, align 8, !tbaa !26
  %288 = getelementptr inbounds %struct.xpv, ptr %287, i64 0, i32 2
  store i64 0, ptr %288, align 8, !tbaa !55
  br label %324

289:                                              ; preds = %284
  %290 = load i64, ptr %1, align 8
  %291 = udiv i64 -2, %151
  %292 = icmp ugt i64 %290, %291
  %293 = icmp ugt i64 %290, 2147483647
  %294 = or i1 %293, %292
  br i1 %294, label %295, label %298

295:                                              ; preds = %289
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.6, ptr noundef nonnull @.str.31) #13
  %296 = load i64, ptr %1, align 8, !tbaa !71
  %297 = load i32, ptr %262, align 4, !tbaa !16
  br label %298

298:                                              ; preds = %289, %295
  %299 = phi i32 [ %274, %289 ], [ %297, %295 ]
  %300 = phi i64 [ %290, %289 ], [ %296, %295 ]
  %301 = mul i64 %300, %151
  %302 = add i64 %301, 1
  %303 = and i32 %299, 268435456
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %310

305:                                              ; preds = %298
  %306 = load ptr, ptr %17, align 8, !tbaa !26
  %307 = getelementptr inbounds %struct.xpv, ptr %306, i64 0, i32 3
  %308 = load i64, ptr %307, align 8, !tbaa !24
  %309 = icmp ult i64 %308, %302
  br i1 %309, label %310, label %313

310:                                              ; preds = %305, %298
  %311 = call ptr @Perl_sv_grow(ptr noundef nonnull %17, i64 noundef %302) #13
  %312 = load i64, ptr %1, align 8, !tbaa !71
  br label %313

313:                                              ; preds = %305, %310
  %314 = phi i64 [ %300, %305 ], [ %312, %310 ]
  %315 = getelementptr inbounds %struct.sv, ptr %17, i64 0, i32 3
  %316 = load ptr, ptr %315, align 8, !tbaa !24
  %317 = getelementptr inbounds i8, ptr %316, i64 %314
  %318 = trunc i64 %314 to i32
  %319 = add nsw i64 %151, -1
  call void @Perl_repeatcpy(ptr noundef %317, ptr noundef %316, i32 noundef %318, i64 noundef %319) #13
  %320 = load ptr, ptr %17, align 8, !tbaa !26
  %321 = getelementptr inbounds %struct.xpv, ptr %320, i64 0, i32 2
  %322 = load i64, ptr %321, align 8, !tbaa !55
  %323 = mul i64 %322, %151
  store i64 %323, ptr %321, align 8, !tbaa !55
  br label %324

324:                                              ; preds = %313, %286
  %325 = phi i64 [ %323, %313 ], [ 0, %286 ]
  %326 = getelementptr inbounds %struct.sv, ptr %17, i64 0, i32 3
  %327 = load ptr, ptr %326, align 8, !tbaa !24
  %328 = getelementptr inbounds i8, ptr %327, i64 %325
  store i8 0, ptr %328, align 1, !tbaa !24
  br label %329

329:                                              ; preds = %284, %324
  %330 = load i32, ptr %262, align 4, !tbaa !16
  %331 = and i32 %330, %285
  %332 = or i32 %331, 17408
  store i32 %332, ptr %262, align 4, !tbaa !16
  %333 = and i32 %330, 4194304
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %337, label %335

335:                                              ; preds = %329
  %336 = call i32 @Perl_mg_set(ptr noundef nonnull %17) #13
  br label %337

337:                                              ; preds = %329, %335
  store ptr %17, ptr %90, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  br label %338

338:                                              ; preds = %245, %254, %252, %337
  %339 = phi ptr [ %90, %337 ], [ %251, %245 ], [ %256, %254 ], [ %90, %252 ]
  store ptr %339, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %340

340:                                              ; preds = %83, %338
  %341 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %342 = load ptr, ptr %341, align 8, !tbaa !13
  ret ptr %342
}

declare i64 @Perl_sv_2uv_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

declare zeroext i1 @Perl_isinfnan(double noundef nofpclass(nan inf)) local_unnamed_addr #2

declare void @Perl_repeatcpy(ptr noundef, ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #2

declare ptr @Perl_sv_pvn_force_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_sv_grow(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_subtract() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !9
  %5 = and i8 %4, 64
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %0
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  br label %14

9:                                                ; preds = %0
  %10 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %12 = load i64, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds ptr, ptr %10, i64 %12
  br label %14

14:                                               ; preds = %9, %7
  %15 = phi ptr [ %8, %7 ], [ %13, %9 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %17 = getelementptr inbounds ptr, ptr %1, i64 -1
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = load ptr, ptr %1, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  %24 = or i32 %23, %20
  %25 = and i32 %24, 2099200
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %14
  %28 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 32, i32 noundef 20) #13
  br i1 %28, label %196, label %29

29:                                               ; preds = %27
  %30 = load ptr, ptr %1, align 8, !tbaa !5
  %31 = load ptr, ptr %17, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.sv, ptr %31, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  br label %34

34:                                               ; preds = %29, %14
  %35 = phi i32 [ %33, %29 ], [ %20, %14 ]
  %36 = phi ptr [ %31, %29 ], [ %18, %14 ]
  %37 = phi ptr [ %30, %29 ], [ %21, %14 ]
  %38 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %39 = and i32 %35, 65280
  %40 = icmp ne i32 %39, 0
  %41 = and i32 %35, 255
  %42 = icmp eq i32 %41, 8
  %43 = or i1 %40, %42
  %44 = and i32 %35, 16826623
  %45 = icmp eq i32 %44, 16777226
  %46 = or i1 %45, %43
  br i1 %46, label %53, label %47

47:                                               ; preds = %34
  %48 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %49 = getelementptr inbounds %struct.op, ptr %48, i64 0, i32 5
  %50 = load i8, ptr %49, align 2, !tbaa !9
  %51 = and i8 %50, 64
  %52 = icmp eq i8 %51, 0
  br label %53

53:                                               ; preds = %47, %34
  %54 = phi i1 [ true, %34 ], [ %52, %47 ]
  %55 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !16
  %57 = and i32 %56, 4352
  %58 = icmp ne i32 %57, 0
  %59 = and i32 %56, 1536
  %60 = icmp eq i32 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %67, label %62

62:                                               ; preds = %53
  %63 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  %64 = load i32, ptr %55, align 4, !tbaa !16
  %65 = and i32 %64, 256
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %158, label %70

67:                                               ; preds = %53
  %68 = and i32 %56, 256
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %158, label %70

70:                                               ; preds = %67, %62
  %71 = phi i32 [ %56, %67 ], [ %64, %62 ]
  br i1 %54, label %72, label %103

72:                                               ; preds = %70
  %73 = load i32, ptr %38, align 4, !tbaa !16
  %74 = and i32 %73, 4352
  %75 = icmp ne i32 %74, 0
  %76 = and i32 %73, 1536
  %77 = icmp eq i32 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %86, label %79

79:                                               ; preds = %72
  %80 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %36, i32 noundef 0) #13
  %81 = load i32, ptr %38, align 4, !tbaa !16
  %82 = and i32 %81, 256
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %89

84:                                               ; preds = %79
  %85 = load i32, ptr %55, align 4, !tbaa !16
  br label %158

86:                                               ; preds = %72
  %87 = and i32 %73, 256
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %158, label %89

89:                                               ; preds = %86, %79
  %90 = phi i32 [ %73, %86 ], [ %81, %79 ]
  %91 = and i32 %90, -2147483392
  %92 = icmp eq i32 %91, -2147483392
  %93 = load ptr, ptr %36, align 8, !tbaa !26
  br i1 %92, label %94, label %97

94:                                               ; preds = %89
  %95 = getelementptr inbounds %struct.xpvuv, ptr %93, i64 0, i32 4
  %96 = load i64, ptr %95, align 8, !tbaa !24
  br label %103

97:                                               ; preds = %89
  %98 = getelementptr inbounds %struct.xpviv, ptr %93, i64 0, i32 4
  %99 = load i64, ptr %98, align 8, !tbaa !24
  %100 = icmp sgt i64 %99, -1
  %101 = tail call i64 @llvm.abs.i64(i64 %99, i1 false)
  %102 = zext i1 %100 to i8
  br label %103

103:                                              ; preds = %70, %97, %94
  %104 = phi i64 [ %101, %97 ], [ %96, %94 ], [ 0, %70 ]
  %105 = phi i8 [ %102, %97 ], [ 1, %94 ], [ 1, %70 ]
  %106 = load i32, ptr %55, align 4, !tbaa !16
  %107 = and i32 %106, -2147483392
  %108 = icmp eq i32 %107, -2147483392
  %109 = load ptr, ptr %37, align 8, !tbaa !26
  br i1 %108, label %110, label %114

110:                                              ; preds = %103
  %111 = getelementptr inbounds %struct.xpvuv, ptr %109, i64 0, i32 4
  %112 = load i64, ptr %111, align 8, !tbaa !24
  %113 = icmp eq i8 %105, 0
  br i1 %113, label %130, label %121

114:                                              ; preds = %103
  %115 = getelementptr inbounds %struct.xpviv, ptr %109, i64 0, i32 4
  %116 = load i64, ptr %115, align 8, !tbaa !24
  %117 = icmp sgt i64 %116, -1
  %118 = tail call i64 @llvm.abs.i64(i64 %116, i1 false)
  %119 = icmp eq i8 %105, 0
  %120 = xor i1 %119, %117
  br i1 %120, label %121, label %130

121:                                              ; preds = %110, %114
  %122 = phi i8 [ 1, %110 ], [ %105, %114 ]
  %123 = phi i64 [ %112, %110 ], [ %118, %114 ]
  %124 = icmp ult i64 %104, %123
  br i1 %124, label %127, label %125

125:                                              ; preds = %121
  %126 = sub i64 %104, %123
  br label %134

127:                                              ; preds = %121
  %128 = sub i64 %123, %104
  %129 = xor i8 %122, 1
  br label %134

130:                                              ; preds = %114, %110
  %131 = phi i64 [ %112, %110 ], [ %118, %114 ]
  %132 = add i64 %131, %104
  %133 = icmp ult i64 %132, %104
  br i1 %133, label %158, label %134

134:                                              ; preds = %127, %125, %130
  %135 = phi i64 [ %132, %130 ], [ %128, %127 ], [ %126, %125 ]
  %136 = phi i8 [ %105, %130 ], [ %129, %127 ], [ %105, %125 ]
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %143, label %138

138:                                              ; preds = %134
  tail call void @Perl_sv_setuv(ptr noundef %16, i64 noundef %135) #13
  %139 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %140 = load i32, ptr %139, align 4, !tbaa !16
  %141 = and i32 %140, 4194304
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %195, label %193

143:                                              ; preds = %134
  %144 = icmp ult i64 %135, -9223372036854775807
  br i1 %144, label %145, label %151

145:                                              ; preds = %143
  %146 = sub i64 0, %135
  tail call void @Perl_sv_setiv(ptr noundef %16, i64 noundef %146) #13
  %147 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %148 = load i32, ptr %147, align 4, !tbaa !16
  %149 = and i32 %148, 4194304
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %195, label %193

151:                                              ; preds = %143
  %152 = uitofp i64 %135 to double
  %153 = fneg fast double %152
  tail call void @Perl_sv_setnv(ptr noundef %16, double noundef nofpclass(nan inf) %153) #13
  %154 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %155 = load i32, ptr %154, align 4, !tbaa !16
  %156 = and i32 %155, 4194304
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %195, label %193

158:                                              ; preds = %84, %86, %130, %67, %62
  %159 = phi i32 [ %85, %84 ], [ %71, %86 ], [ %106, %130 ], [ %56, %67 ], [ %64, %62 ]
  %160 = and i32 %159, 512
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %166, label %162

162:                                              ; preds = %158
  %163 = load ptr, ptr %37, align 8, !tbaa !26
  %164 = getelementptr inbounds %struct.xpvnv, ptr %163, i64 0, i32 5
  %165 = load double, ptr %164, align 8, !tbaa !24
  br label %168

166:                                              ; preds = %158
  %167 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  br label %168

168:                                              ; preds = %166, %162
  %169 = phi fast double [ %165, %162 ], [ %167, %166 ]
  br i1 %54, label %176, label %170

170:                                              ; preds = %168
  %171 = fneg fast double %169
  tail call void @Perl_sv_setnv(ptr noundef %16, double noundef nofpclass(nan inf) %171) #13
  %172 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %173 = load i32, ptr %172, align 4, !tbaa !16
  %174 = and i32 %173, 4194304
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %195, label %193

176:                                              ; preds = %168
  %177 = load i32, ptr %38, align 4, !tbaa !16
  %178 = and i32 %177, 512
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %184, label %180

180:                                              ; preds = %176
  %181 = load ptr, ptr %36, align 8, !tbaa !26
  %182 = getelementptr inbounds %struct.xpvnv, ptr %181, i64 0, i32 5
  %183 = load double, ptr %182, align 8, !tbaa !24
  br label %186

184:                                              ; preds = %176
  %185 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %36, i32 noundef 0) #13
  br label %186

186:                                              ; preds = %184, %180
  %187 = phi fast double [ %183, %180 ], [ %185, %184 ]
  %188 = fsub fast double %187, %169
  tail call void @Perl_sv_setnv(ptr noundef %16, double noundef nofpclass(nan inf) %188) #13
  %189 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %190 = load i32, ptr %189, align 4, !tbaa !16
  %191 = and i32 %190, 4194304
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %170, %186, %138, %145, %151
  %194 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %195

195:                                              ; preds = %193, %138, %145, %151, %170, %186
  store ptr %16, ptr %17, align 8, !tbaa !5
  store ptr %17, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %196

196:                                              ; preds = %195, %27
  %197 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %198 = load ptr, ptr %197, align 8, !tbaa !13
  ret ptr %198
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_left_shift() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !9
  %5 = and i8 %4, 64
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %0
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  br label %14

9:                                                ; preds = %0
  %10 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %12 = load i64, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds ptr, ptr %10, i64 %12
  br label %14

14:                                               ; preds = %9, %7
  %15 = phi ptr [ %8, %7 ], [ %13, %9 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %17 = getelementptr inbounds ptr, ptr %1, i64 -1
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = load ptr, ptr %1, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  %24 = or i32 %23, %20
  %25 = and i32 %24, 2099200
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %14
  %28 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 42, i32 noundef 20) #13
  br i1 %28, label %88, label %29

29:                                               ; preds = %27
  %30 = load ptr, ptr %1, align 8, !tbaa !5
  %31 = load ptr, ptr %17, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  br label %34

34:                                               ; preds = %29, %14
  %35 = phi i32 [ %33, %29 ], [ %23, %14 ]
  %36 = phi ptr [ %31, %29 ], [ %18, %14 ]
  %37 = phi ptr [ %30, %29 ], [ %21, %14 ]
  %38 = and i32 %35, 256
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %34
  %41 = load ptr, ptr %37, align 8, !tbaa !26
  %42 = getelementptr inbounds %struct.xpviv, ptr %41, i64 0, i32 4
  %43 = load i64, ptr %42, align 8, !tbaa !24
  br label %46

44:                                               ; preds = %34
  %45 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  br label %46

46:                                               ; preds = %44, %40
  %47 = phi i64 [ %43, %40 ], [ %45, %44 ]
  %48 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %49 = getelementptr inbounds %struct.op, ptr %48, i64 0, i32 6
  %50 = load i8, ptr %49, align 1, !tbaa !15
  %51 = and i8 %50, 1
  %52 = icmp eq i8 %51, 0
  %53 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %54 = load i32, ptr %53, align 4, !tbaa !16
  %55 = and i32 %54, 256
  %56 = icmp eq i32 %55, 0
  br i1 %52, label %71, label %57

57:                                               ; preds = %46
  br i1 %56, label %62, label %58

58:                                               ; preds = %57
  %59 = load ptr, ptr %36, align 8, !tbaa !26
  %60 = getelementptr inbounds %struct.xpviv, ptr %59, i64 0, i32 4
  %61 = load i64, ptr %60, align 8, !tbaa !24
  br label %64

62:                                               ; preds = %57
  %63 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %36, i32 noundef 0) #13
  br label %64

64:                                               ; preds = %62, %58
  %65 = phi i64 [ %61, %58 ], [ %63, %62 ]
  %66 = shl i64 %65, %47
  tail call void @Perl_sv_setiv(ptr noundef %16, i64 noundef %66) #13
  %67 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !16
  %69 = and i32 %68, 4194304
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %87, label %85

71:                                               ; preds = %46
  br i1 %56, label %76, label %72

72:                                               ; preds = %71
  %73 = load ptr, ptr %36, align 8, !tbaa !26
  %74 = getelementptr inbounds %struct.xpvuv, ptr %73, i64 0, i32 4
  %75 = load i64, ptr %74, align 8, !tbaa !24
  br label %78

76:                                               ; preds = %71
  %77 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %36, i32 noundef 0) #13
  br label %78

78:                                               ; preds = %76, %72
  %79 = phi i64 [ %75, %72 ], [ %77, %76 ]
  %80 = shl i64 %79, %47
  tail call void @Perl_sv_setuv(ptr noundef %16, i64 noundef %80) #13
  %81 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %82 = load i32, ptr %81, align 4, !tbaa !16
  %83 = and i32 %82, 4194304
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %78, %64
  %86 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %87

87:                                               ; preds = %85, %78, %64
  store ptr %16, ptr %17, align 8, !tbaa !5
  store ptr %17, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %88

88:                                               ; preds = %27, %87
  %89 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %90 = load ptr, ptr %89, align 8, !tbaa !13
  ret ptr %90
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_right_shift() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !9
  %5 = and i8 %4, 64
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %0
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  br label %14

9:                                                ; preds = %0
  %10 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %12 = load i64, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds ptr, ptr %10, i64 %12
  br label %14

14:                                               ; preds = %9, %7
  %15 = phi ptr [ %8, %7 ], [ %13, %9 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %17 = getelementptr inbounds ptr, ptr %1, i64 -1
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = load ptr, ptr %1, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  %24 = or i32 %23, %20
  %25 = and i32 %24, 2099200
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %14
  %28 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 44, i32 noundef 20) #13
  br i1 %28, label %88, label %29

29:                                               ; preds = %27
  %30 = load ptr, ptr %1, align 8, !tbaa !5
  %31 = load ptr, ptr %17, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  br label %34

34:                                               ; preds = %29, %14
  %35 = phi i32 [ %33, %29 ], [ %23, %14 ]
  %36 = phi ptr [ %31, %29 ], [ %18, %14 ]
  %37 = phi ptr [ %30, %29 ], [ %21, %14 ]
  %38 = and i32 %35, 256
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %34
  %41 = load ptr, ptr %37, align 8, !tbaa !26
  %42 = getelementptr inbounds %struct.xpviv, ptr %41, i64 0, i32 4
  %43 = load i64, ptr %42, align 8, !tbaa !24
  br label %46

44:                                               ; preds = %34
  %45 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  br label %46

46:                                               ; preds = %44, %40
  %47 = phi i64 [ %43, %40 ], [ %45, %44 ]
  %48 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %49 = getelementptr inbounds %struct.op, ptr %48, i64 0, i32 6
  %50 = load i8, ptr %49, align 1, !tbaa !15
  %51 = and i8 %50, 1
  %52 = icmp eq i8 %51, 0
  %53 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %54 = load i32, ptr %53, align 4, !tbaa !16
  %55 = and i32 %54, 256
  %56 = icmp eq i32 %55, 0
  br i1 %52, label %71, label %57

57:                                               ; preds = %46
  br i1 %56, label %62, label %58

58:                                               ; preds = %57
  %59 = load ptr, ptr %36, align 8, !tbaa !26
  %60 = getelementptr inbounds %struct.xpviv, ptr %59, i64 0, i32 4
  %61 = load i64, ptr %60, align 8, !tbaa !24
  br label %64

62:                                               ; preds = %57
  %63 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %36, i32 noundef 0) #13
  br label %64

64:                                               ; preds = %62, %58
  %65 = phi i64 [ %61, %58 ], [ %63, %62 ]
  %66 = ashr i64 %65, %47
  tail call void @Perl_sv_setiv(ptr noundef %16, i64 noundef %66) #13
  %67 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !16
  %69 = and i32 %68, 4194304
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %87, label %85

71:                                               ; preds = %46
  br i1 %56, label %76, label %72

72:                                               ; preds = %71
  %73 = load ptr, ptr %36, align 8, !tbaa !26
  %74 = getelementptr inbounds %struct.xpvuv, ptr %73, i64 0, i32 4
  %75 = load i64, ptr %74, align 8, !tbaa !24
  br label %78

76:                                               ; preds = %71
  %77 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %36, i32 noundef 0) #13
  br label %78

78:                                               ; preds = %76, %72
  %79 = phi i64 [ %75, %72 ], [ %77, %76 ]
  %80 = lshr i64 %79, %47
  tail call void @Perl_sv_setuv(ptr noundef %16, i64 noundef %80) #13
  %81 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %82 = load i32, ptr %81, align 4, !tbaa !16
  %83 = and i32 %82, 4194304
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %78, %64
  %86 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %87

87:                                               ; preds = %85, %78, %64
  store ptr %16, ptr %17, align 8, !tbaa !5
  store ptr %17, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %88

88:                                               ; preds = %27, %87
  %89 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %90 = load ptr, ptr %89, align 8, !tbaa !13
  ret ptr %90
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_lt() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = load ptr, ptr %1, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = or i32 %8, %5
  %10 = and i32 %9, 2099200
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %0
  %13 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 17, i32 noundef 48) #13
  br i1 %13, label %44, label %14

14:                                               ; preds = %12
  %15 = load ptr, ptr %1, align 8, !tbaa !5
  %16 = load ptr, ptr %2, align 8, !tbaa !5
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !16
  br label %19

19:                                               ; preds = %14, %0
  %20 = phi i32 [ %18, %14 ], [ %5, %0 ]
  %21 = phi ptr [ %16, %14 ], [ %3, %0 ]
  %22 = phi ptr [ %15, %14 ], [ %6, %0 ]
  %23 = and i32 %20, -2147483392
  %24 = icmp eq i32 %23, 256
  br i1 %24, label %25, label %38

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.sv, ptr %22, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !16
  %28 = and i32 %27, -2147483392
  %29 = icmp eq i32 %28, 256
  br i1 %29, label %30, label %38

30:                                               ; preds = %25
  %31 = load ptr, ptr %21, align 8, !tbaa !26
  %32 = getelementptr inbounds %struct.xpviv, ptr %31, i64 0, i32 4
  %33 = load i64, ptr %32, align 8, !tbaa !24
  %34 = load ptr, ptr %22, align 8, !tbaa !26
  %35 = getelementptr inbounds %struct.xpviv, ptr %34, i64 0, i32 4
  %36 = load i64, ptr %35, align 8, !tbaa !24
  %37 = icmp slt i64 %33, %36
  br label %41

38:                                               ; preds = %25, %19
  %39 = tail call i32 @Perl_do_ncmp(ptr noundef nonnull %21, ptr noundef %22), !range !97
  %40 = icmp eq i32 %39, -1
  br label %41

41:                                               ; preds = %38, %30
  %42 = phi i1 [ %37, %30 ], [ %40, %38 ]
  %43 = select i1 %42, ptr @PL_sv_yes, ptr @PL_sv_no
  store ptr %43, ptr %2, align 8, !tbaa !5
  store ptr %2, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %44

44:                                               ; preds = %12, %41
  %45 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %46 = load ptr, ptr %45, align 8, !tbaa !13
  ret ptr %46
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @Perl_do_ncmp(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 4352
  %6 = icmp ne i32 %5, 0
  %7 = and i32 %4, 1536
  %8 = icmp eq i32 %7, 0
  %9 = or i1 %6, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %1, i32 noundef 0) #13
  %12 = load i32, ptr %3, align 4, !tbaa !16
  %13 = and i32 %12, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %98, label %18

15:                                               ; preds = %2
  %16 = and i32 %4, 256
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %98, label %18

18:                                               ; preds = %15, %10
  %19 = phi i32 [ %4, %15 ], [ %12, %10 ]
  %20 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %21 = load i32, ptr %20, align 4, !tbaa !16
  %22 = and i32 %21, 4352
  %23 = icmp ne i32 %22, 0
  %24 = and i32 %21, 1536
  %25 = icmp eq i32 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %0, i32 noundef 0) #13
  %29 = load i32, ptr %20, align 4, !tbaa !16
  %30 = and i32 %29, 256
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = load i32, ptr %3, align 4, !tbaa !16
  br label %98

34:                                               ; preds = %18
  %35 = and i32 %21, 256
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %98, label %37

37:                                               ; preds = %34, %27
  %38 = phi i32 [ %21, %34 ], [ %29, %27 ]
  %39 = and i32 %38, -2147483392
  %40 = icmp eq i32 %39, -2147483392
  br i1 %40, label %68, label %41

41:                                               ; preds = %37
  %42 = load ptr, ptr %0, align 8, !tbaa !26
  %43 = getelementptr inbounds %struct.xpviv, ptr %42, i64 0, i32 4
  %44 = load i64, ptr %43, align 8, !tbaa !24
  %45 = load i32, ptr %3, align 4, !tbaa !16
  %46 = and i32 %45, -2147483392
  %47 = icmp eq i32 %46, -2147483392
  br i1 %47, label %57, label %48

48:                                               ; preds = %41
  %49 = load ptr, ptr %1, align 8, !tbaa !26
  %50 = getelementptr inbounds %struct.xpviv, ptr %49, i64 0, i32 4
  %51 = load i64, ptr %50, align 8, !tbaa !24
  %52 = icmp sgt i64 %44, %51
  %53 = zext i1 %52 to i32
  %54 = icmp slt i64 %44, %51
  %55 = sext i1 %54 to i32
  %56 = add nsw i32 %55, %53
  br label %128

57:                                               ; preds = %41
  %58 = icmp slt i64 %44, 0
  br i1 %58, label %128, label %59

59:                                               ; preds = %57
  %60 = load ptr, ptr %1, align 8, !tbaa !26
  %61 = getelementptr inbounds %struct.xpvuv, ptr %60, i64 0, i32 4
  %62 = load i64, ptr %61, align 8, !tbaa !24
  %63 = icmp ugt i64 %44, %62
  %64 = zext i1 %63 to i32
  %65 = icmp ult i64 %44, %62
  %66 = sext i1 %65 to i32
  %67 = add nsw i32 %66, %64
  br label %128

68:                                               ; preds = %37
  %69 = load i32, ptr %3, align 4, !tbaa !16
  %70 = and i32 %69, -2147483392
  %71 = icmp eq i32 %70, -2147483392
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = load ptr, ptr %0, align 8, !tbaa !26
  %74 = getelementptr inbounds %struct.xpvuv, ptr %73, i64 0, i32 4
  %75 = load i64, ptr %74, align 8, !tbaa !24
  %76 = load ptr, ptr %1, align 8, !tbaa !26
  %77 = getelementptr inbounds %struct.xpvuv, ptr %76, i64 0, i32 4
  %78 = load i64, ptr %77, align 8, !tbaa !24
  %79 = icmp ugt i64 %75, %78
  %80 = zext i1 %79 to i32
  %81 = icmp ult i64 %75, %78
  %82 = sext i1 %81 to i32
  %83 = add nsw i32 %82, %80
  br label %128

84:                                               ; preds = %68
  %85 = load ptr, ptr %1, align 8, !tbaa !26
  %86 = getelementptr inbounds %struct.xpviv, ptr %85, i64 0, i32 4
  %87 = load i64, ptr %86, align 8, !tbaa !24
  %88 = icmp slt i64 %87, 0
  br i1 %88, label %128, label %89

89:                                               ; preds = %84
  %90 = load ptr, ptr %0, align 8, !tbaa !26
  %91 = getelementptr inbounds %struct.xpvuv, ptr %90, i64 0, i32 4
  %92 = load i64, ptr %91, align 8, !tbaa !24
  %93 = icmp ugt i64 %92, %87
  %94 = zext i1 %93 to i32
  %95 = icmp ult i64 %92, %87
  %96 = sext i1 %95 to i32
  %97 = add nsw i32 %96, %94
  br label %128

98:                                               ; preds = %32, %34, %15, %10
  %99 = phi i32 [ %33, %32 ], [ %19, %34 ], [ %4, %15 ], [ %12, %10 ]
  %100 = and i32 %99, 512
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %98
  %103 = load ptr, ptr %1, align 8, !tbaa !26
  %104 = getelementptr inbounds %struct.xpvnv, ptr %103, i64 0, i32 5
  %105 = load double, ptr %104, align 8, !tbaa !24
  br label %108

106:                                              ; preds = %98
  %107 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %1, i32 noundef 0) #13
  br label %108

108:                                              ; preds = %106, %102
  %109 = phi fast double [ %105, %102 ], [ %107, %106 ]
  %110 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %111 = load i32, ptr %110, align 4, !tbaa !16
  %112 = and i32 %111, 512
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %118, label %114

114:                                              ; preds = %108
  %115 = load ptr, ptr %0, align 8, !tbaa !26
  %116 = getelementptr inbounds %struct.xpvnv, ptr %115, i64 0, i32 5
  %117 = load double, ptr %116, align 8, !tbaa !24
  br label %120

118:                                              ; preds = %108
  %119 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %0, i32 noundef 0) #13
  br label %120

120:                                              ; preds = %118, %114
  %121 = phi fast double [ %117, %114 ], [ %119, %118 ]
  %122 = fcmp fast olt double %121, %109
  br i1 %122, label %128, label %123

123:                                              ; preds = %120
  %124 = fcmp fast ogt double %121, %109
  br i1 %124, label %128, label %125

125:                                              ; preds = %123
  %126 = fcmp fast oeq double %121, %109
  %127 = select i1 %126, i32 0, i32 2
  br label %128

128:                                              ; preds = %120, %123, %125, %89, %84, %48, %59, %57, %72
  %129 = phi i32 [ %83, %72 ], [ %67, %59 ], [ %56, %48 ], [ -1, %57 ], [ %97, %89 ], [ 1, %84 ], [ -1, %120 ], [ 1, %123 ], [ %127, %125 ]
  ret i32 %129
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_gt() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = load ptr, ptr %1, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = or i32 %8, %5
  %10 = and i32 %9, 2099200
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %0
  %13 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 19, i32 noundef 48) #13
  br i1 %13, label %44, label %14

14:                                               ; preds = %12
  %15 = load ptr, ptr %1, align 8, !tbaa !5
  %16 = load ptr, ptr %2, align 8, !tbaa !5
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !16
  br label %19

19:                                               ; preds = %14, %0
  %20 = phi i32 [ %18, %14 ], [ %5, %0 ]
  %21 = phi ptr [ %16, %14 ], [ %3, %0 ]
  %22 = phi ptr [ %15, %14 ], [ %6, %0 ]
  %23 = and i32 %20, -2147483392
  %24 = icmp eq i32 %23, 256
  br i1 %24, label %25, label %38

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.sv, ptr %22, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !16
  %28 = and i32 %27, -2147483392
  %29 = icmp eq i32 %28, 256
  br i1 %29, label %30, label %38

30:                                               ; preds = %25
  %31 = load ptr, ptr %21, align 8, !tbaa !26
  %32 = getelementptr inbounds %struct.xpviv, ptr %31, i64 0, i32 4
  %33 = load i64, ptr %32, align 8, !tbaa !24
  %34 = load ptr, ptr %22, align 8, !tbaa !26
  %35 = getelementptr inbounds %struct.xpviv, ptr %34, i64 0, i32 4
  %36 = load i64, ptr %35, align 8, !tbaa !24
  %37 = icmp sgt i64 %33, %36
  br label %41

38:                                               ; preds = %25, %19
  %39 = tail call i32 @Perl_do_ncmp(ptr noundef nonnull %21, ptr noundef %22), !range !97
  %40 = icmp eq i32 %39, 1
  br label %41

41:                                               ; preds = %38, %30
  %42 = phi i1 [ %37, %30 ], [ %40, %38 ]
  %43 = select i1 %42, ptr @PL_sv_yes, ptr @PL_sv_no
  store ptr %43, ptr %2, align 8, !tbaa !5
  store ptr %2, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %44

44:                                               ; preds = %12, %41
  %45 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %46 = load ptr, ptr %45, align 8, !tbaa !13
  ret ptr %46
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_le() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = load ptr, ptr %1, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = or i32 %8, %5
  %10 = and i32 %9, 2099200
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %0
  %13 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 18, i32 noundef 48) #13
  br i1 %13, label %44, label %14

14:                                               ; preds = %12
  %15 = load ptr, ptr %1, align 8, !tbaa !5
  %16 = load ptr, ptr %2, align 8, !tbaa !5
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !16
  br label %19

19:                                               ; preds = %14, %0
  %20 = phi i32 [ %18, %14 ], [ %5, %0 ]
  %21 = phi ptr [ %16, %14 ], [ %3, %0 ]
  %22 = phi ptr [ %15, %14 ], [ %6, %0 ]
  %23 = and i32 %20, -2147483392
  %24 = icmp eq i32 %23, 256
  br i1 %24, label %25, label %38

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.sv, ptr %22, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !16
  %28 = and i32 %27, -2147483392
  %29 = icmp eq i32 %28, 256
  br i1 %29, label %30, label %38

30:                                               ; preds = %25
  %31 = load ptr, ptr %21, align 8, !tbaa !26
  %32 = getelementptr inbounds %struct.xpviv, ptr %31, i64 0, i32 4
  %33 = load i64, ptr %32, align 8, !tbaa !24
  %34 = load ptr, ptr %22, align 8, !tbaa !26
  %35 = getelementptr inbounds %struct.xpviv, ptr %34, i64 0, i32 4
  %36 = load i64, ptr %35, align 8, !tbaa !24
  %37 = icmp sle i64 %33, %36
  br label %41

38:                                               ; preds = %25, %19
  %39 = tail call i32 @Perl_do_ncmp(ptr noundef nonnull %21, ptr noundef %22), !range !97
  %40 = icmp slt i32 %39, 1
  br label %41

41:                                               ; preds = %38, %30
  %42 = phi i1 [ %37, %30 ], [ %40, %38 ]
  %43 = select i1 %42, ptr @PL_sv_yes, ptr @PL_sv_no
  store ptr %43, ptr %2, align 8, !tbaa !5
  store ptr %2, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %44

44:                                               ; preds = %12, %41
  %45 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %46 = load ptr, ptr %45, align 8, !tbaa !13
  ret ptr %46
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_ge() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = load ptr, ptr %1, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = or i32 %8, %5
  %10 = and i32 %9, 2099200
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %0
  %13 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 20, i32 noundef 48) #13
  br i1 %13, label %48, label %14

14:                                               ; preds = %12
  %15 = load ptr, ptr %1, align 8, !tbaa !5
  %16 = load ptr, ptr %2, align 8, !tbaa !5
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !16
  br label %19

19:                                               ; preds = %14, %0
  %20 = phi i32 [ %18, %14 ], [ %5, %0 ]
  %21 = phi ptr [ %16, %14 ], [ %3, %0 ]
  %22 = phi ptr [ %15, %14 ], [ %6, %0 ]
  %23 = and i32 %20, -2147483392
  %24 = icmp eq i32 %23, 256
  br i1 %24, label %25, label %39

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.sv, ptr %22, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !16
  %28 = and i32 %27, -2147483392
  %29 = icmp eq i32 %28, 256
  br i1 %29, label %30, label %39

30:                                               ; preds = %25
  %31 = load ptr, ptr %21, align 8, !tbaa !26
  %32 = getelementptr inbounds %struct.xpviv, ptr %31, i64 0, i32 4
  %33 = load i64, ptr %32, align 8, !tbaa !24
  %34 = load ptr, ptr %22, align 8, !tbaa !26
  %35 = getelementptr inbounds %struct.xpviv, ptr %34, i64 0, i32 4
  %36 = load i64, ptr %35, align 8, !tbaa !24
  %37 = icmp sge i64 %33, %36
  %38 = zext i1 %37 to i32
  br label %44

39:                                               ; preds = %25, %19
  %40 = tail call i32 @Perl_do_ncmp(ptr noundef nonnull %21, ptr noundef %22), !range !97
  %41 = lshr i32 %40, 1
  %42 = and i32 %41, 1
  %43 = xor i32 %42, 1
  br label %44

44:                                               ; preds = %39, %30
  %45 = phi i32 [ %38, %30 ], [ %43, %39 ]
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %46, ptr @PL_sv_no, ptr @PL_sv_yes
  store ptr %47, ptr %2, align 8, !tbaa !5
  store ptr %2, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %48

48:                                               ; preds = %12, %44
  %49 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %50 = load ptr, ptr %49, align 8, !tbaa !13
  ret ptr %50
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_ne() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = load ptr, ptr %1, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = or i32 %8, %5
  %10 = and i32 %9, 2099200
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %0
  %13 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 22, i32 noundef 48) #13
  br i1 %13, label %44, label %14

14:                                               ; preds = %12
  %15 = load ptr, ptr %1, align 8, !tbaa !5
  %16 = load ptr, ptr %2, align 8, !tbaa !5
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !16
  br label %19

19:                                               ; preds = %14, %0
  %20 = phi i32 [ %18, %14 ], [ %5, %0 ]
  %21 = phi ptr [ %16, %14 ], [ %3, %0 ]
  %22 = phi ptr [ %15, %14 ], [ %6, %0 ]
  %23 = and i32 %20, -2147483392
  %24 = icmp eq i32 %23, 256
  br i1 %24, label %25, label %38

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.sv, ptr %22, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !16
  %28 = and i32 %27, -2147483392
  %29 = icmp eq i32 %28, 256
  br i1 %29, label %30, label %38

30:                                               ; preds = %25
  %31 = load ptr, ptr %21, align 8, !tbaa !26
  %32 = getelementptr inbounds %struct.xpviv, ptr %31, i64 0, i32 4
  %33 = load i64, ptr %32, align 8, !tbaa !24
  %34 = load ptr, ptr %22, align 8, !tbaa !26
  %35 = getelementptr inbounds %struct.xpviv, ptr %34, i64 0, i32 4
  %36 = load i64, ptr %35, align 8, !tbaa !24
  %37 = icmp ne i64 %33, %36
  br label %41

38:                                               ; preds = %25, %19
  %39 = tail call i32 @Perl_do_ncmp(ptr noundef nonnull %21, ptr noundef %22), !range !97
  %40 = icmp ne i32 %39, 0
  br label %41

41:                                               ; preds = %38, %30
  %42 = phi i1 [ %37, %30 ], [ %40, %38 ]
  %43 = select i1 %42, ptr @PL_sv_yes, ptr @PL_sv_no
  store ptr %43, ptr %2, align 8, !tbaa !5
  store ptr %2, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %44

44:                                               ; preds = %12, %41
  %45 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %46 = load ptr, ptr %45, align 8, !tbaa !13
  ret ptr %46
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_ncmp() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = load ptr, ptr %1, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = or i32 %8, %5
  %10 = and i32 %9, 2099200
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %0
  %13 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 58, i32 noundef 16) #13
  br i1 %13, label %38, label %14

14:                                               ; preds = %12
  %15 = load ptr, ptr %1, align 8, !tbaa !5
  %16 = load ptr, ptr %2, align 8, !tbaa !5
  br label %17

17:                                               ; preds = %14, %0
  %18 = phi ptr [ %16, %14 ], [ %3, %0 ]
  %19 = phi ptr [ %15, %14 ], [ %6, %0 ]
  %20 = tail call i32 @Perl_do_ncmp(ptr noundef %18, ptr noundef %19), !range !97
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %36, label %22

22:                                               ; preds = %17
  %23 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %24 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %25 = getelementptr inbounds %struct.op, ptr %24, i64 0, i32 3
  %26 = load i64, ptr %25, align 8, !tbaa !14
  %27 = getelementptr inbounds ptr, ptr %23, i64 %26
  %28 = load ptr, ptr %27, align 8, !tbaa !5
  %29 = sext i32 %20 to i64
  tail call void @Perl_sv_setiv(ptr noundef %28, i64 noundef %29) #13
  %30 = getelementptr inbounds %struct.sv, ptr %28, i64 0, i32 2
  %31 = load i32, ptr %30, align 4, !tbaa !16
  %32 = and i32 %31, 4194304
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %22
  %35 = tail call i32 @Perl_mg_set(ptr noundef nonnull %28) #13
  br label %36

36:                                               ; preds = %34, %22, %17
  %37 = phi ptr [ @PL_sv_undef, %17 ], [ %28, %22 ], [ %28, %34 ]
  store ptr %37, ptr %2, align 8, !tbaa !5
  store ptr %2, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %38

38:                                               ; preds = %12, %36
  %39 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %40 = load ptr, ptr %39, align 8, !tbaa !13
  ret ptr %40
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_sle() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %4 = load i16, ptr %3, align 8
  %5 = and i16 %4, 511
  %6 = zext i16 %5 to i32
  %7 = add nsw i32 %6, -85
  %8 = icmp ult i32 %7, 4
  br i1 %8, label %9, label %19

9:                                                ; preds = %0
  %10 = sext i32 %7 to i64
  %11 = getelementptr inbounds [4 x i32], ptr @switch.table.Perl_pp_sle, i64 0, i64 %10
  %12 = load i32, ptr %11, align 4
  %13 = sext i32 %7 to i64
  %14 = getelementptr inbounds [4 x i32], ptr @switch.table.Perl_pp_sle.84, i64 0, i64 %13
  %15 = load i32, ptr %14, align 4
  %16 = sext i32 %7 to i64
  %17 = getelementptr inbounds [4 x i32], ptr @switch.table.Perl_pp_sle.85, i64 0, i64 %16
  %18 = load i32, ptr %17, align 4
  br label %19

19:                                               ; preds = %9, %0
  %20 = phi i32 [ 1, %0 ], [ %12, %9 ]
  %21 = phi i32 [ 1, %0 ], [ %15, %9 ]
  %22 = phi i32 [ 24, %0 ], [ %18, %9 ]
  %23 = getelementptr inbounds ptr, ptr %1, i64 -1
  %24 = load ptr, ptr %23, align 8, !tbaa !5
  %25 = getelementptr inbounds %struct.sv, ptr %24, i64 0, i32 2
  %26 = load i32, ptr %25, align 4, !tbaa !16
  %27 = load ptr, ptr %1, align 8, !tbaa !5
  %28 = getelementptr inbounds %struct.sv, ptr %27, i64 0, i32 2
  %29 = load i32, ptr %28, align 4, !tbaa !16
  %30 = or i32 %29, %26
  %31 = and i32 %30, 2099200
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %19
  %34 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef %22, i32 noundef 32) #13
  br i1 %34, label %45, label %35

35:                                               ; preds = %33
  %36 = load ptr, ptr %1, align 8, !tbaa !5
  %37 = load ptr, ptr %23, align 8, !tbaa !5
  br label %38

38:                                               ; preds = %35, %19
  %39 = phi ptr [ %37, %35 ], [ %24, %19 ]
  %40 = phi ptr [ %36, %35 ], [ %27, %19 ]
  %41 = tail call i32 @Perl_sv_cmp_flags(ptr noundef %39, ptr noundef %40, i32 noundef 0) #13
  %42 = mul nsw i32 %41, %20
  %43 = icmp slt i32 %42, %21
  %44 = select i1 %43, ptr @PL_sv_yes, ptr @PL_sv_no
  store ptr %44, ptr %23, align 8, !tbaa !5
  store ptr %23, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %45

45:                                               ; preds = %33, %38
  %46 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %47 = load ptr, ptr %46, align 8, !tbaa !13
  ret ptr %47
}

declare i32 @Perl_sv_cmp_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_seq() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = load ptr, ptr %1, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = or i32 %8, %5
  %10 = and i32 %9, 2099200
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %0
  %13 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 27, i32 noundef 32) #13
  br i1 %13, label %23, label %14

14:                                               ; preds = %12
  %15 = load ptr, ptr %1, align 8, !tbaa !5
  %16 = load ptr, ptr %2, align 8, !tbaa !5
  br label %17

17:                                               ; preds = %14, %0
  %18 = phi ptr [ %16, %14 ], [ %3, %0 ]
  %19 = phi ptr [ %15, %14 ], [ %6, %0 ]
  %20 = tail call i32 @Perl_sv_eq_flags(ptr noundef %18, ptr noundef %19, i32 noundef 0) #13
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %21, ptr @PL_sv_no, ptr @PL_sv_yes
  store ptr %22, ptr %2, align 8, !tbaa !5
  store ptr %2, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %23

23:                                               ; preds = %12, %17
  %24 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %25 = load ptr, ptr %24, align 8, !tbaa !13
  ret ptr %25
}

declare i32 @Perl_sv_eq_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_sne() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = load ptr, ptr %1, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = or i32 %8, %5
  %10 = and i32 %9, 2099200
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %0
  %13 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 28, i32 noundef 32) #13
  br i1 %13, label %23, label %14

14:                                               ; preds = %12
  %15 = load ptr, ptr %1, align 8, !tbaa !5
  %16 = load ptr, ptr %2, align 8, !tbaa !5
  br label %17

17:                                               ; preds = %14, %0
  %18 = phi ptr [ %16, %14 ], [ %3, %0 ]
  %19 = phi ptr [ %15, %14 ], [ %6, %0 ]
  %20 = tail call i32 @Perl_sv_eq_flags(ptr noundef %18, ptr noundef %19, i32 noundef 0) #13
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %21, ptr @PL_sv_yes, ptr @PL_sv_no
  store ptr %22, ptr %2, align 8, !tbaa !5
  store ptr %2, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %23

23:                                               ; preds = %12, %17
  %24 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %25 = load ptr, ptr %24, align 8, !tbaa !13
  ret ptr %25
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_scmp() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %5 = load i64, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  %9 = load ptr, ptr %8, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.sv, ptr %9, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !16
  %12 = load ptr, ptr %1, align 8, !tbaa !5
  %13 = getelementptr inbounds %struct.sv, ptr %12, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !16
  %15 = or i32 %14, %11
  %16 = and i32 %15, 2099200
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %0
  %19 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 59, i32 noundef 0) #13
  br i1 %19, label %35, label %20

20:                                               ; preds = %18
  %21 = load ptr, ptr %1, align 8, !tbaa !5
  %22 = load ptr, ptr %8, align 8, !tbaa !5
  br label %23

23:                                               ; preds = %20, %0
  %24 = phi ptr [ %22, %20 ], [ %9, %0 ]
  %25 = phi ptr [ %21, %20 ], [ %12, %0 ]
  %26 = tail call i32 @Perl_sv_cmp_flags(ptr noundef %24, ptr noundef %25, i32 noundef 0) #13
  %27 = sext i32 %26 to i64
  tail call void @Perl_sv_setiv(ptr noundef %7, i64 noundef %27) #13
  %28 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %29 = load i32, ptr %28, align 4, !tbaa !16
  %30 = and i32 %29, 4194304
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %23
  %33 = tail call i32 @Perl_mg_set(ptr noundef nonnull %7) #13
  br label %34

34:                                               ; preds = %23, %32
  store ptr %7, ptr %8, align 8, !tbaa !5
  store ptr %8, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %35

35:                                               ; preds = %18, %34
  %36 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  ret ptr %37
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_bit_and() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !9
  %5 = and i8 %4, 64
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %0
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  br label %14

9:                                                ; preds = %0
  %10 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %12 = load i64, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds ptr, ptr %10, i64 %12
  br label %14

14:                                               ; preds = %9, %7
  %15 = phi ptr [ %8, %7 ], [ %13, %9 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %17 = getelementptr inbounds ptr, ptr %1, i64 -1
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = load ptr, ptr %1, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  %24 = or i32 %23, %20
  %25 = and i32 %24, 2099200
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %14
  %28 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 46, i32 noundef 4) #13
  br i1 %28, label %143, label %29

29:                                               ; preds = %27
  %30 = load ptr, ptr %1, align 8, !tbaa !5
  %31 = load ptr, ptr %17, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.sv, ptr %31, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  br label %34

34:                                               ; preds = %29, %14
  %35 = phi i32 [ %33, %29 ], [ %20, %14 ]
  %36 = phi ptr [ %31, %29 ], [ %18, %14 ]
  %37 = phi ptr [ %30, %29 ], [ %21, %14 ]
  %38 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %39 = and i32 %35, 12288
  %40 = icmp ne i32 %39, 0
  %41 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 2
  %42 = load i32, ptr %41, align 4, !tbaa !16
  br i1 %40, label %43, label %45

43:                                               ; preds = %34
  %44 = load ptr, ptr @PL_op, align 8, !tbaa !5
  br label %49

45:                                               ; preds = %34
  %46 = and i32 %42, 12288
  %47 = icmp eq i32 %46, 0
  %48 = load ptr, ptr @PL_op, align 8, !tbaa !5
  br i1 %47, label %130, label %49

49:                                               ; preds = %43, %45
  %50 = phi ptr [ %44, %43 ], [ %48, %45 ]
  %51 = and i32 %35, 134283264
  %52 = icmp eq i32 %51, 0
  %53 = or i1 %40, %52
  %54 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 2
  %55 = and i32 %42, 12288
  %56 = icmp eq i32 %55, 0
  %57 = and i32 %42, 134283264
  %58 = icmp ne i32 %57, 0
  %59 = and i1 %56, %58
  %60 = getelementptr inbounds %struct.op, ptr %50, i64 0, i32 6
  %61 = load i8, ptr %60, align 1, !tbaa !15
  %62 = and i8 %61, 1
  %63 = icmp eq i8 %62, 0
  %64 = and i32 %35, 256
  %65 = icmp eq i32 %64, 0
  br i1 %63, label %92, label %66

66:                                               ; preds = %49
  br i1 %65, label %71, label %67

67:                                               ; preds = %66
  %68 = load ptr, ptr %36, align 8, !tbaa !26
  %69 = getelementptr inbounds %struct.xpviv, ptr %68, i64 0, i32 4
  %70 = load i64, ptr %69, align 8, !tbaa !24
  br label %74

71:                                               ; preds = %66
  %72 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %36, i32 noundef 0) #13
  %73 = load i32, ptr %54, align 4, !tbaa !16
  br label %74

74:                                               ; preds = %71, %67
  %75 = phi i32 [ %42, %67 ], [ %73, %71 ]
  %76 = phi i64 [ %70, %67 ], [ %72, %71 ]
  %77 = and i32 %75, 256
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %74
  %80 = load ptr, ptr %37, align 8, !tbaa !26
  %81 = getelementptr inbounds %struct.xpviv, ptr %80, i64 0, i32 4
  %82 = load i64, ptr %81, align 8, !tbaa !24
  br label %85

83:                                               ; preds = %74
  %84 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  br label %85

85:                                               ; preds = %83, %79
  %86 = phi i64 [ %82, %79 ], [ %84, %83 ]
  %87 = and i64 %86, %76
  tail call void @Perl_sv_setiv(ptr noundef %16, i64 noundef %87) #13
  %88 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %89 = load i32, ptr %88, align 4, !tbaa !16
  %90 = and i32 %89, 4194304
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %120, label %118

92:                                               ; preds = %49
  br i1 %65, label %97, label %93

93:                                               ; preds = %92
  %94 = load ptr, ptr %36, align 8, !tbaa !26
  %95 = getelementptr inbounds %struct.xpvuv, ptr %94, i64 0, i32 4
  %96 = load i64, ptr %95, align 8, !tbaa !24
  br label %100

97:                                               ; preds = %92
  %98 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %36, i32 noundef 0) #13
  %99 = load i32, ptr %54, align 4, !tbaa !16
  br label %100

100:                                              ; preds = %97, %93
  %101 = phi i32 [ %42, %93 ], [ %99, %97 ]
  %102 = phi i64 [ %96, %93 ], [ %98, %97 ]
  %103 = and i32 %101, 256
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %109, label %105

105:                                              ; preds = %100
  %106 = load ptr, ptr %37, align 8, !tbaa !26
  %107 = getelementptr inbounds %struct.xpvuv, ptr %106, i64 0, i32 4
  %108 = load i64, ptr %107, align 8, !tbaa !24
  br label %111

109:                                              ; preds = %100
  %110 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  br label %111

111:                                              ; preds = %109, %105
  %112 = phi i64 [ %108, %105 ], [ %110, %109 ]
  %113 = and i64 %112, %102
  tail call void @Perl_sv_setuv(ptr noundef %16, i64 noundef %113) #13
  %114 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %115 = load i32, ptr %114, align 4, !tbaa !16
  %116 = and i32 %115, 4194304
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %111, %85
  %119 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %120

120:                                              ; preds = %118, %111, %85
  store ptr %16, ptr %17, align 8, !tbaa !5
  %121 = icmp eq ptr %36, %16
  %122 = select i1 %53, i1 true, i1 %121
  br i1 %122, label %126, label %123

123:                                              ; preds = %120
  %124 = load i32, ptr %38, align 4, !tbaa !16
  %125 = and i32 %124, 2147470591
  store i32 %125, ptr %38, align 4, !tbaa !16
  br label %126

126:                                              ; preds = %123, %120
  br i1 %59, label %127, label %142

127:                                              ; preds = %126
  %128 = load i32, ptr %54, align 4, !tbaa !16
  %129 = and i32 %128, 2147470591
  store i32 %129, ptr %54, align 4, !tbaa !16
  br label %142

130:                                              ; preds = %45
  %131 = getelementptr inbounds %struct.op, ptr %48, i64 0, i32 4
  %132 = load i16, ptr %131, align 8
  %133 = and i16 %132, 511
  %134 = zext i16 %133 to i32
  tail call void @Perl_do_vop(i32 noundef %134, ptr noundef %16, ptr noundef nonnull %36, ptr noundef nonnull %37) #13
  %135 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %136 = load i32, ptr %135, align 4, !tbaa !16
  %137 = and i32 %136, 4194304
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %141, label %139

139:                                              ; preds = %130
  %140 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %141

141:                                              ; preds = %130, %139
  store ptr %16, ptr %17, align 8, !tbaa !5
  br label %142

142:                                              ; preds = %126, %127, %141
  store ptr %17, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %143

143:                                              ; preds = %27, %142
  %144 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %145 = load ptr, ptr %144, align 8, !tbaa !13
  ret ptr %145
}

declare void @Perl_do_vop(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_nbit_and() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = load ptr, ptr %1, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = or i32 %8, %5
  %10 = and i32 %9, 2099200
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %0
  %13 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 46, i32 noundef 132) #13
  br i1 %13, label %93, label %14

14:                                               ; preds = %0, %12
  %15 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %16 = getelementptr inbounds %struct.op, ptr %15, i64 0, i32 5
  %17 = load i8, ptr %16, align 2, !tbaa !9
  %18 = and i8 %17, 64
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.op, ptr %15, i64 0, i32 3
  %23 = load i64, ptr %22, align 8, !tbaa !14
  %24 = getelementptr inbounds ptr, ptr %21, i64 %23
  br label %25

25:                                               ; preds = %14, %20
  %26 = phi ptr [ %24, %20 ], [ %2, %14 ]
  %27 = load ptr, ptr %26, align 8, !tbaa !5
  %28 = load ptr, ptr %1, align 8, !tbaa !5
  %29 = load ptr, ptr %2, align 8, !tbaa !5
  %30 = getelementptr inbounds %struct.op, ptr %15, i64 0, i32 6
  %31 = load i8, ptr %30, align 1, !tbaa !15
  %32 = and i8 %31, 1
  %33 = icmp eq i8 %32, 0
  %34 = getelementptr inbounds %struct.sv, ptr %29, i64 0, i32 2
  %35 = load i32, ptr %34, align 4, !tbaa !16
  %36 = and i32 %35, 256
  %37 = icmp eq i32 %36, 0
  br i1 %33, label %64, label %38

38:                                               ; preds = %25
  br i1 %37, label %43, label %39

39:                                               ; preds = %38
  %40 = load ptr, ptr %29, align 8, !tbaa !26
  %41 = getelementptr inbounds %struct.xpviv, ptr %40, i64 0, i32 4
  %42 = load i64, ptr %41, align 8, !tbaa !24
  br label %45

43:                                               ; preds = %38
  %44 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %29, i32 noundef 0) #13
  br label %45

45:                                               ; preds = %43, %39
  %46 = phi i64 [ %42, %39 ], [ %44, %43 ]
  %47 = getelementptr inbounds %struct.sv, ptr %28, i64 0, i32 2
  %48 = load i32, ptr %47, align 4, !tbaa !16
  %49 = and i32 %48, 256
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %45
  %52 = load ptr, ptr %28, align 8, !tbaa !26
  %53 = getelementptr inbounds %struct.xpviv, ptr %52, i64 0, i32 4
  %54 = load i64, ptr %53, align 8, !tbaa !24
  br label %57

55:                                               ; preds = %45
  %56 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %28, i32 noundef 0) #13
  br label %57

57:                                               ; preds = %55, %51
  %58 = phi i64 [ %54, %51 ], [ %56, %55 ]
  %59 = and i64 %58, %46
  tail call void @Perl_sv_setiv(ptr noundef %27, i64 noundef %59) #13
  %60 = getelementptr inbounds %struct.sv, ptr %27, i64 0, i32 2
  %61 = load i32, ptr %60, align 4, !tbaa !16
  %62 = and i32 %61, 4194304
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %92, label %90

64:                                               ; preds = %25
  br i1 %37, label %69, label %65

65:                                               ; preds = %64
  %66 = load ptr, ptr %29, align 8, !tbaa !26
  %67 = getelementptr inbounds %struct.xpvuv, ptr %66, i64 0, i32 4
  %68 = load i64, ptr %67, align 8, !tbaa !24
  br label %71

69:                                               ; preds = %64
  %70 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %29, i32 noundef 0) #13
  br label %71

71:                                               ; preds = %69, %65
  %72 = phi i64 [ %68, %65 ], [ %70, %69 ]
  %73 = getelementptr inbounds %struct.sv, ptr %28, i64 0, i32 2
  %74 = load i32, ptr %73, align 4, !tbaa !16
  %75 = and i32 %74, 256
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %71
  %78 = load ptr, ptr %28, align 8, !tbaa !26
  %79 = getelementptr inbounds %struct.xpvuv, ptr %78, i64 0, i32 4
  %80 = load i64, ptr %79, align 8, !tbaa !24
  br label %83

81:                                               ; preds = %71
  %82 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %28, i32 noundef 0) #13
  br label %83

83:                                               ; preds = %81, %77
  %84 = phi i64 [ %80, %77 ], [ %82, %81 ]
  %85 = and i64 %84, %72
  tail call void @Perl_sv_setuv(ptr noundef %27, i64 noundef %85) #13
  %86 = getelementptr inbounds %struct.sv, ptr %27, i64 0, i32 2
  %87 = load i32, ptr %86, align 4, !tbaa !16
  %88 = and i32 %87, 4194304
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %83, %57
  %91 = tail call i32 @Perl_mg_set(ptr noundef nonnull %27) #13
  br label %92

92:                                               ; preds = %90, %83, %57
  store ptr %27, ptr %2, align 8, !tbaa !5
  store ptr %2, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %93

93:                                               ; preds = %12, %92
  %94 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %95 = load ptr, ptr %94, align 8, !tbaa !13
  ret ptr %95
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_sbit_and() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = load ptr, ptr %1, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = or i32 %8, %5
  %10 = and i32 %9, 2099200
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %0
  %13 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 48, i32 noundef 4) #13
  br i1 %13, label %37, label %14

14:                                               ; preds = %0, %12
  %15 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %16 = getelementptr inbounds %struct.op, ptr %15, i64 0, i32 5
  %17 = load i8, ptr %16, align 2, !tbaa !9
  %18 = and i8 %17, 64
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.op, ptr %15, i64 0, i32 3
  %23 = load i64, ptr %22, align 8, !tbaa !14
  %24 = getelementptr inbounds ptr, ptr %21, i64 %23
  br label %25

25:                                               ; preds = %14, %20
  %26 = phi ptr [ %24, %20 ], [ %2, %14 ]
  %27 = load ptr, ptr %26, align 8, !tbaa !5
  %28 = load ptr, ptr %1, align 8, !tbaa !5
  %29 = load ptr, ptr %2, align 8, !tbaa !5
  tail call void @Perl_do_vop(i32 noundef 92, ptr noundef %27, ptr noundef %29, ptr noundef %28) #13
  %30 = getelementptr inbounds %struct.sv, ptr %27, i64 0, i32 2
  %31 = load i32, ptr %30, align 4, !tbaa !16
  %32 = and i32 %31, 4194304
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %25
  %35 = tail call i32 @Perl_mg_set(ptr noundef nonnull %27) #13
  br label %36

36:                                               ; preds = %25, %34
  store ptr %27, ptr %2, align 8, !tbaa !5
  store ptr %2, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %37

37:                                               ; preds = %12, %36
  %38 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %39 = load ptr, ptr %38, align 8, !tbaa !13
  ret ptr %39
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_bit_or() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !9
  %5 = and i8 %4, 64
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %0
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  br label %14

9:                                                ; preds = %0
  %10 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %12 = load i64, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds ptr, ptr %10, i64 %12
  br label %14

14:                                               ; preds = %9, %7
  %15 = phi ptr [ %8, %7 ], [ %13, %9 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %17 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %18 = load i16, ptr %17, align 8
  %19 = and i16 %18, 511
  %20 = zext i16 %19 to i32
  %21 = getelementptr inbounds ptr, ptr %1, i64 -1
  %22 = load ptr, ptr %21, align 8, !tbaa !5
  %23 = getelementptr inbounds %struct.sv, ptr %22, i64 0, i32 2
  %24 = load i32, ptr %23, align 4, !tbaa !16
  %25 = load ptr, ptr %1, align 8, !tbaa !5
  %26 = getelementptr inbounds %struct.sv, ptr %25, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !16
  %28 = or i32 %27, %24
  %29 = and i32 %28, 2099200
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %40, label %31

31:                                               ; preds = %14
  %32 = icmp eq i16 %19, 94
  %33 = select i1 %32, i32 50, i32 54
  %34 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef %33, i32 noundef 4) #13
  br i1 %34, label %170, label %35

35:                                               ; preds = %31
  %36 = load ptr, ptr %1, align 8, !tbaa !5
  %37 = load ptr, ptr %21, align 8, !tbaa !5
  %38 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 2
  %39 = load i32, ptr %38, align 4, !tbaa !16
  br label %40

40:                                               ; preds = %35, %14
  %41 = phi i32 [ %39, %35 ], [ %24, %14 ]
  %42 = phi ptr [ %37, %35 ], [ %22, %14 ]
  %43 = phi ptr [ %36, %35 ], [ %25, %14 ]
  %44 = getelementptr inbounds %struct.sv, ptr %42, i64 0, i32 2
  %45 = and i32 %41, 12288
  %46 = icmp ne i32 %45, 0
  %47 = getelementptr inbounds %struct.sv, ptr %43, i64 0, i32 2
  %48 = load i32, ptr %47, align 4, !tbaa !16
  %49 = and i32 %48, 12288
  %50 = icmp ne i32 %49, 0
  %51 = select i1 %46, i1 true, i1 %50
  br i1 %51, label %52, label %161

52:                                               ; preds = %40
  %53 = and i32 %41, 134283264
  %54 = icmp eq i32 %53, 0
  %55 = or i1 %46, %54
  %56 = getelementptr inbounds %struct.sv, ptr %43, i64 0, i32 2
  %57 = and i32 %48, 12288
  %58 = icmp eq i32 %57, 0
  %59 = and i32 %48, 134283264
  %60 = icmp ne i32 %59, 0
  %61 = and i1 %58, %60
  %62 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %63 = getelementptr inbounds %struct.op, ptr %62, i64 0, i32 6
  %64 = load i8, ptr %63, align 1, !tbaa !15
  %65 = and i8 %64, 1
  %66 = icmp eq i8 %65, 0
  %67 = and i32 %41, 65280
  %68 = icmp ne i32 %67, 0
  %69 = and i32 %41, 255
  %70 = icmp eq i32 %69, 8
  %71 = or i1 %68, %70
  %72 = and i32 %41, 16826623
  %73 = icmp eq i32 %72, 16777226
  %74 = or i1 %73, %71
  br i1 %66, label %112, label %75

75:                                               ; preds = %52
  br i1 %74, label %81, label %76

76:                                               ; preds = %75
  %77 = getelementptr inbounds %struct.op, ptr %62, i64 0, i32 5
  %78 = load i8, ptr %77, align 2, !tbaa !9
  %79 = and i8 %78, 64
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %91

81:                                               ; preds = %76, %75
  %82 = and i32 %41, 256
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %88, label %84

84:                                               ; preds = %81
  %85 = load ptr, ptr %42, align 8, !tbaa !26
  %86 = getelementptr inbounds %struct.xpviv, ptr %85, i64 0, i32 4
  %87 = load i64, ptr %86, align 8, !tbaa !24
  br label %91

88:                                               ; preds = %81
  %89 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %42, i32 noundef 0) #13
  %90 = load i32, ptr %56, align 4, !tbaa !16
  br label %91

91:                                               ; preds = %76, %84, %88
  %92 = phi i32 [ %48, %84 ], [ %90, %88 ], [ %48, %76 ]
  %93 = phi i64 [ %87, %84 ], [ %89, %88 ], [ 0, %76 ]
  %94 = and i32 %92, 256
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %91
  %97 = load ptr, ptr %43, align 8, !tbaa !26
  %98 = getelementptr inbounds %struct.xpviv, ptr %97, i64 0, i32 4
  %99 = load i64, ptr %98, align 8, !tbaa !24
  br label %102

100:                                              ; preds = %91
  %101 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %43, i32 noundef 0) #13
  br label %102

102:                                              ; preds = %100, %96
  %103 = phi i64 [ %99, %96 ], [ %101, %100 ]
  %104 = icmp eq i16 %19, 94
  %105 = or i64 %103, %93
  %106 = xor i64 %103, %93
  %107 = select i1 %104, i64 %105, i64 %106
  tail call void @Perl_sv_setiv(ptr noundef %16, i64 noundef %107) #13
  %108 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %109 = load i32, ptr %108, align 4, !tbaa !16
  %110 = and i32 %109, 4194304
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %151, label %149

112:                                              ; preds = %52
  br i1 %74, label %118, label %113

113:                                              ; preds = %112
  %114 = getelementptr inbounds %struct.op, ptr %62, i64 0, i32 5
  %115 = load i8, ptr %114, align 2, !tbaa !9
  %116 = and i8 %115, 64
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %118, label %128

118:                                              ; preds = %113, %112
  %119 = and i32 %41, 256
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %125, label %121

121:                                              ; preds = %118
  %122 = load ptr, ptr %42, align 8, !tbaa !26
  %123 = getelementptr inbounds %struct.xpvuv, ptr %122, i64 0, i32 4
  %124 = load i64, ptr %123, align 8, !tbaa !24
  br label %128

125:                                              ; preds = %118
  %126 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %42, i32 noundef 0) #13
  %127 = load i32, ptr %56, align 4, !tbaa !16
  br label %128

128:                                              ; preds = %113, %121, %125
  %129 = phi i32 [ %48, %121 ], [ %127, %125 ], [ %48, %113 ]
  %130 = phi i64 [ %124, %121 ], [ %126, %125 ], [ 0, %113 ]
  %131 = and i32 %129, 256
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %137, label %133

133:                                              ; preds = %128
  %134 = load ptr, ptr %43, align 8, !tbaa !26
  %135 = getelementptr inbounds %struct.xpvuv, ptr %134, i64 0, i32 4
  %136 = load i64, ptr %135, align 8, !tbaa !24
  br label %139

137:                                              ; preds = %128
  %138 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %43, i32 noundef 0) #13
  br label %139

139:                                              ; preds = %137, %133
  %140 = phi i64 [ %136, %133 ], [ %138, %137 ]
  %141 = icmp eq i16 %19, 94
  %142 = or i64 %140, %130
  %143 = xor i64 %140, %130
  %144 = select i1 %141, i64 %142, i64 %143
  tail call void @Perl_sv_setuv(ptr noundef %16, i64 noundef %144) #13
  %145 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %146 = load i32, ptr %145, align 4, !tbaa !16
  %147 = and i32 %146, 4194304
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %151, label %149

149:                                              ; preds = %139, %102
  %150 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %151

151:                                              ; preds = %149, %139, %102
  store ptr %16, ptr %21, align 8, !tbaa !5
  %152 = icmp eq ptr %42, %16
  %153 = select i1 %55, i1 true, i1 %152
  br i1 %153, label %157, label %154

154:                                              ; preds = %151
  %155 = load i32, ptr %44, align 4, !tbaa !16
  %156 = and i32 %155, 2147470591
  store i32 %156, ptr %44, align 4, !tbaa !16
  br label %157

157:                                              ; preds = %154, %151
  br i1 %61, label %158, label %169

158:                                              ; preds = %157
  %159 = load i32, ptr %56, align 4, !tbaa !16
  %160 = and i32 %159, 2147470591
  store i32 %160, ptr %56, align 4, !tbaa !16
  br label %169

161:                                              ; preds = %40
  tail call void @Perl_do_vop(i32 noundef %20, ptr noundef %16, ptr noundef nonnull %42, ptr noundef nonnull %43) #13
  %162 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %163 = load i32, ptr %162, align 4, !tbaa !16
  %164 = and i32 %163, 4194304
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %168, label %166

166:                                              ; preds = %161
  %167 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %168

168:                                              ; preds = %161, %166
  store ptr %16, ptr %21, align 8, !tbaa !5
  br label %169

169:                                              ; preds = %157, %158, %168
  store ptr %21, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %170

170:                                              ; preds = %31, %169
  %171 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %172 = load ptr, ptr %171, align 8, !tbaa !13
  ret ptr %172
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_nbit_or() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %4 = load i16, ptr %3, align 8
  %5 = and i16 %4, 511
  %6 = getelementptr inbounds ptr, ptr %1, i64 -1
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !16
  %10 = load ptr, ptr %1, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !16
  %13 = or i32 %12, %9
  %14 = and i32 %13, 2099200
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %0
  %17 = icmp eq i16 %5, 97
  %18 = select i1 %17, i32 50, i32 54
  %19 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef %18, i32 noundef 132) #13
  br i1 %19, label %120, label %20

20:                                               ; preds = %16
  %21 = load ptr, ptr @PL_op, align 8, !tbaa !5
  br label %22

22:                                               ; preds = %20, %0
  %23 = phi ptr [ %21, %20 ], [ %2, %0 ]
  %24 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 5
  %25 = load i8, ptr %24, align 2, !tbaa !9
  %26 = and i8 %25, 64
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %30 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 3
  %31 = load i64, ptr %30, align 8, !tbaa !14
  %32 = getelementptr inbounds ptr, ptr %29, i64 %31
  br label %33

33:                                               ; preds = %22, %28
  %34 = phi ptr [ %32, %28 ], [ %6, %22 ]
  %35 = load ptr, ptr %34, align 8, !tbaa !5
  %36 = load ptr, ptr %1, align 8, !tbaa !5
  %37 = load ptr, ptr %6, align 8, !tbaa !5
  %38 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 6
  %39 = load i8, ptr %38, align 1, !tbaa !15
  %40 = and i8 %39, 1
  %41 = icmp eq i8 %40, 0
  %42 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 2
  %43 = load i32, ptr %42, align 4, !tbaa !16
  %44 = and i32 %43, 65280
  %45 = icmp ne i32 %44, 0
  %46 = and i32 %43, 255
  %47 = icmp eq i32 %46, 8
  %48 = or i1 %45, %47
  %49 = and i32 %43, 16826623
  %50 = icmp eq i32 %49, 16777226
  %51 = or i1 %50, %48
  %52 = or i1 %27, %51
  br i1 %41, label %85, label %53

53:                                               ; preds = %33
  br i1 %52, label %54, label %63

54:                                               ; preds = %53
  %55 = and i32 %43, 256
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %54
  %58 = load ptr, ptr %37, align 8, !tbaa !26
  %59 = getelementptr inbounds %struct.xpviv, ptr %58, i64 0, i32 4
  %60 = load i64, ptr %59, align 8, !tbaa !24
  br label %63

61:                                               ; preds = %54
  %62 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  br label %63

63:                                               ; preds = %53, %57, %61
  %64 = phi i64 [ %60, %57 ], [ %62, %61 ], [ 0, %53 ]
  %65 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %66 = load i32, ptr %65, align 4, !tbaa !16
  %67 = and i32 %66, 256
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %63
  %70 = load ptr, ptr %36, align 8, !tbaa !26
  %71 = getelementptr inbounds %struct.xpviv, ptr %70, i64 0, i32 4
  %72 = load i64, ptr %71, align 8, !tbaa !24
  br label %75

73:                                               ; preds = %63
  %74 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %36, i32 noundef 0) #13
  br label %75

75:                                               ; preds = %73, %69
  %76 = phi i64 [ %72, %69 ], [ %74, %73 ]
  %77 = icmp eq i16 %5, 97
  %78 = or i64 %76, %64
  %79 = xor i64 %76, %64
  %80 = select i1 %77, i64 %78, i64 %79
  tail call void @Perl_sv_setiv(ptr noundef %35, i64 noundef %80) #13
  %81 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 2
  %82 = load i32, ptr %81, align 4, !tbaa !16
  %83 = and i32 %82, 4194304
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %119, label %117

85:                                               ; preds = %33
  br i1 %52, label %86, label %95

86:                                               ; preds = %85
  %87 = and i32 %43, 256
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %86
  %90 = load ptr, ptr %37, align 8, !tbaa !26
  %91 = getelementptr inbounds %struct.xpvuv, ptr %90, i64 0, i32 4
  %92 = load i64, ptr %91, align 8, !tbaa !24
  br label %95

93:                                               ; preds = %86
  %94 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  br label %95

95:                                               ; preds = %85, %89, %93
  %96 = phi i64 [ %92, %89 ], [ %94, %93 ], [ 0, %85 ]
  %97 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %98 = load i32, ptr %97, align 4, !tbaa !16
  %99 = and i32 %98, 256
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %105, label %101

101:                                              ; preds = %95
  %102 = load ptr, ptr %36, align 8, !tbaa !26
  %103 = getelementptr inbounds %struct.xpvuv, ptr %102, i64 0, i32 4
  %104 = load i64, ptr %103, align 8, !tbaa !24
  br label %107

105:                                              ; preds = %95
  %106 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %36, i32 noundef 0) #13
  br label %107

107:                                              ; preds = %105, %101
  %108 = phi i64 [ %104, %101 ], [ %106, %105 ]
  %109 = icmp eq i16 %5, 97
  %110 = or i64 %108, %96
  %111 = xor i64 %108, %96
  %112 = select i1 %109, i64 %110, i64 %111
  tail call void @Perl_sv_setuv(ptr noundef %35, i64 noundef %112) #13
  %113 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 2
  %114 = load i32, ptr %113, align 4, !tbaa !16
  %115 = and i32 %114, 4194304
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %107, %75
  %118 = tail call i32 @Perl_mg_set(ptr noundef nonnull %35) #13
  br label %119

119:                                              ; preds = %117, %107, %75
  store ptr %35, ptr %6, align 8, !tbaa !5
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %120

120:                                              ; preds = %16, %119
  %121 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %122 = load ptr, ptr %121, align 8, !tbaa !13
  ret ptr %122
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_sbit_or() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %4 = load i16, ptr %3, align 8
  %5 = and i16 %4, 511
  %6 = getelementptr inbounds ptr, ptr %1, i64 -1
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !16
  %10 = load ptr, ptr %1, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !16
  %13 = or i32 %12, %9
  %14 = and i32 %13, 2099200
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %0
  %17 = icmp eq i16 %5, 100
  %18 = select i1 %17, i32 52, i32 56
  %19 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef %18, i32 noundef 4) #13
  br i1 %19, label %47, label %20

20:                                               ; preds = %16
  %21 = load ptr, ptr @PL_op, align 8, !tbaa !5
  br label %22

22:                                               ; preds = %20, %0
  %23 = phi ptr [ %21, %20 ], [ %2, %0 ]
  %24 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 5
  %25 = load i8, ptr %24, align 2, !tbaa !9
  %26 = and i8 %25, 64
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %30 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 3
  %31 = load i64, ptr %30, align 8, !tbaa !14
  %32 = getelementptr inbounds ptr, ptr %29, i64 %31
  br label %33

33:                                               ; preds = %22, %28
  %34 = phi ptr [ %32, %28 ], [ %6, %22 ]
  %35 = load ptr, ptr %34, align 8, !tbaa !5
  %36 = load ptr, ptr %1, align 8, !tbaa !5
  %37 = load ptr, ptr %6, align 8, !tbaa !5
  %38 = icmp eq i16 %5, 100
  %39 = select i1 %38, i32 94, i32 93
  tail call void @Perl_do_vop(i32 noundef %39, ptr noundef %35, ptr noundef %37, ptr noundef %36) #13
  %40 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 2
  %41 = load i32, ptr %40, align 4, !tbaa !16
  %42 = and i32 %41, 4194304
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %33
  %45 = tail call i32 @Perl_mg_set(ptr noundef nonnull %35) #13
  br label %46

46:                                               ; preds = %33, %44
  store ptr %35, ptr %6, align 8, !tbaa !5
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %47

47:                                               ; preds = %16, %46
  %48 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %49 = load ptr, ptr %48, align 8, !tbaa !13
  ret ptr %49
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_negate() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %5 = load i64, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = load ptr, ptr %1, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !16
  %11 = and i32 %10, 2099200
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %0
  %14 = tail call zeroext i1 @Perl_try_amagic_un(i32 noundef 14, i32 noundef 16) #13
  br i1 %14, label %116, label %15

15:                                               ; preds = %0, %13
  %16 = tail call fastcc zeroext i1 @S_negate_string()
  br i1 %16, label %116, label %17

17:                                               ; preds = %15
  %18 = load ptr, ptr %1, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = and i32 %20, 256
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %56, label %23

23:                                               ; preds = %93, %88, %17
  %24 = phi i32 [ %90, %88 ], [ %20, %17 ], [ %57, %93 ]
  %25 = icmp sgt i32 %24, -1
  %26 = load ptr, ptr %18, align 8, !tbaa !26
  %27 = getelementptr inbounds %struct.xpviv, ptr %26, i64 0, i32 4
  %28 = load i64, ptr %27, align 8, !tbaa !24
  %29 = icmp eq i64 %28, -9223372036854775808
  br i1 %25, label %44, label %30

30:                                               ; preds = %23
  br i1 %29, label %31, label %36

31:                                               ; preds = %30
  tail call void @Perl_sv_setiv(ptr noundef %7, i64 noundef -9223372036854775808) #13
  %32 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  %34 = and i32 %33, 4194304
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %115, label %113

36:                                               ; preds = %30
  %37 = icmp sgt i64 %28, -1
  br i1 %37, label %38, label %56

38:                                               ; preds = %36
  %39 = sub nsw i64 0, %28
  tail call void @Perl_sv_setiv(ptr noundef %7, i64 noundef %39) #13
  %40 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %41 = load i32, ptr %40, align 4, !tbaa !16
  %42 = and i32 %41, 4194304
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %115, label %113

44:                                               ; preds = %23
  br i1 %29, label %51, label %45

45:                                               ; preds = %44
  %46 = sub nsw i64 0, %28
  tail call void @Perl_sv_setiv(ptr noundef %7, i64 noundef %46) #13
  %47 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %48 = load i32, ptr %47, align 4, !tbaa !16
  %49 = and i32 %48, 4194304
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %115, label %113

51:                                               ; preds = %44
  tail call void @Perl_sv_setuv(ptr noundef %7, i64 noundef -9223372036854775808) #13
  %52 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %53 = load i32, ptr %52, align 4, !tbaa !16
  %54 = and i32 %53, 4194304
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %115, label %113

56:                                               ; preds = %36, %17
  %57 = phi i32 [ %24, %36 ], [ %20, %17 ]
  %58 = and i32 %57, 12288
  %59 = icmp eq i32 %58, 0
  %60 = and i32 %57, 1792
  %61 = icmp eq i32 %60, 1024
  %62 = or i1 %59, %61
  br i1 %62, label %79, label %63

63:                                               ; preds = %56
  %64 = and i32 %57, 512
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %70, label %66

66:                                               ; preds = %63
  %67 = load ptr, ptr %18, align 8, !tbaa !26
  %68 = getelementptr inbounds %struct.xpvnv, ptr %67, i64 0, i32 5
  %69 = load double, ptr %68, align 8, !tbaa !24
  br label %72

70:                                               ; preds = %63
  %71 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %18, i32 noundef 0) #13
  br label %72

72:                                               ; preds = %70, %66
  %73 = phi fast double [ %69, %66 ], [ %71, %70 ]
  %74 = fneg fast double %73
  tail call void @Perl_sv_setnv(ptr noundef %7, double noundef nofpclass(nan inf) %74) #13
  %75 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %76 = load i32, ptr %75, align 4, !tbaa !16
  %77 = and i32 %76, 4194304
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %115, label %113

79:                                               ; preds = %56
  %80 = and i32 %57, 16384
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %96, label %82

82:                                               ; preds = %79
  %83 = and i32 %57, 4352
  %84 = icmp ne i32 %83, 0
  %85 = and i32 %57, 1536
  %86 = icmp eq i32 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %93, label %88

88:                                               ; preds = %82
  %89 = tail call i64 @Perl_sv_2iv_flags(ptr noundef %18, i32 noundef 0) #13
  %90 = load i32, ptr %19, align 4, !tbaa !16
  %91 = and i32 %90, 256
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %23

93:                                               ; preds = %82
  %94 = and i32 %57, 256
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %23

96:                                               ; preds = %79, %88, %93
  %97 = phi i32 [ %57, %79 ], [ %90, %88 ], [ %57, %93 ]
  %98 = and i32 %97, 512
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %104, label %100

100:                                              ; preds = %96
  %101 = load ptr, ptr %18, align 8, !tbaa !26
  %102 = getelementptr inbounds %struct.xpvnv, ptr %101, i64 0, i32 5
  %103 = load double, ptr %102, align 8, !tbaa !24
  br label %106

104:                                              ; preds = %96
  %105 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %18, i32 noundef 0) #13
  br label %106

106:                                              ; preds = %104, %100
  %107 = phi fast double [ %103, %100 ], [ %105, %104 ]
  %108 = fneg fast double %107
  tail call void @Perl_sv_setnv(ptr noundef %7, double noundef nofpclass(nan inf) %108) #13
  %109 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %110 = load i32, ptr %109, align 4, !tbaa !16
  %111 = and i32 %110, 4194304
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %72, %106, %51, %45, %38, %31
  %114 = tail call i32 @Perl_mg_set(ptr noundef nonnull %7) #13
  br label %115

115:                                              ; preds = %113, %72, %106, %51, %45, %38, %31
  store ptr %7, ptr %1, align 8, !tbaa !5
  br label %116

116:                                              ; preds = %115, %15, %13
  %117 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %118 = load ptr, ptr %117, align 8, !tbaa !13
  ret ptr %118
}

declare zeroext i1 @Perl_try_amagic_un(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i1 @S_negate_string() unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %5 = load i64, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  %9 = load ptr, ptr %8, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.sv, ptr %9, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !16
  %12 = and i32 %11, 17152
  %13 = icmp eq i32 %12, 16384
  br i1 %13, label %14, label %70

14:                                               ; preds = %0
  %15 = and i32 %11, 1024
  %16 = icmp ne i32 %15, 0
  %17 = and i32 %11, 12288
  %18 = icmp eq i32 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %70

20:                                               ; preds = %14
  %21 = and i32 %11, 2098176
  %22 = icmp eq i32 %21, 1024
  br i1 %22, label %23, label %29

23:                                               ; preds = %20
  %24 = load ptr, ptr %9, align 8, !tbaa !26
  %25 = getelementptr inbounds %struct.xpv, ptr %24, i64 0, i32 2
  %26 = load i64, ptr %25, align 8, !tbaa !55
  store i64 %26, ptr %1, align 8, !tbaa !71
  %27 = getelementptr inbounds %struct.sv, ptr %9, i64 0, i32 3
  %28 = load ptr, ptr %27, align 8, !tbaa !24
  br label %31

29:                                               ; preds = %20
  %30 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %9, ptr noundef nonnull %1, i32 noundef 32) #13
  br label %31

31:                                               ; preds = %29, %23
  %32 = phi ptr [ %28, %23 ], [ %30, %29 ]
  %33 = load i8, ptr %32, align 1, !tbaa !24
  %34 = zext i8 %33 to i64
  %35 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !57
  %37 = and i32 %36, 81920
  %38 = icmp eq i32 %37, 81920
  br i1 %38, label %39, label %40

39:                                               ; preds = %31
  call void @Perl_sv_setpvn(ptr noundef %7, ptr noundef nonnull @.str.79, i64 noundef 1) #13
  call void @Perl_sv_catsv_flags(ptr noundef %7, ptr noundef nonnull %9, i32 noundef 2) #13
  br label %62

40:                                               ; preds = %31
  switch i8 %33, label %70 [
    i8 43, label %44
    i8 45, label %41
  ]

41:                                               ; preds = %40
  %42 = call i32 @Perl_looks_like_number(ptr noundef nonnull %9) #13
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %70

44:                                               ; preds = %40, %41
  call void @Perl_sv_setsv_flags(ptr noundef %7, ptr noundef nonnull %9, i32 noundef 1536) #13
  %45 = load i8, ptr %32, align 1, !tbaa !24
  %46 = icmp eq i8 %45, 45
  %47 = select i1 %46, i8 43, i8 45
  %48 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %49 = load i32, ptr %48, align 4, !tbaa !16
  %50 = and i32 %49, 430018304
  %51 = icmp eq i32 %50, 1024
  br i1 %51, label %52, label %58

52:                                               ; preds = %44
  %53 = load ptr, ptr %7, align 8, !tbaa !26
  %54 = getelementptr inbounds %struct.xpv, ptr %53, i64 0, i32 2
  %55 = load i64, ptr %54, align 8, !tbaa !55
  store i64 %55, ptr %1, align 8, !tbaa !71
  %56 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !24
  br label %60

58:                                               ; preds = %44
  %59 = call ptr @Perl_sv_pvn_force_flags(ptr noundef nonnull %7, ptr noundef nonnull %1, i32 noundef 0) #13
  br label %60

60:                                               ; preds = %58, %52
  %61 = phi ptr [ %57, %52 ], [ %59, %58 ]
  store i8 %47, ptr %61, align 1, !tbaa !24
  br label %62

62:                                               ; preds = %60, %39
  %63 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %64 = load i32, ptr %63, align 4, !tbaa !16
  %65 = and i32 %64, 4194304
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %62
  %68 = call i32 @Perl_mg_set(ptr noundef nonnull %7) #13
  br label %69

69:                                               ; preds = %62, %67
  store ptr %7, ptr %8, align 8, !tbaa !5
  br label %70

70:                                               ; preds = %41, %40, %0, %14, %69
  %71 = phi i1 [ true, %69 ], [ false, %14 ], [ false, %0 ], [ false, %40 ], [ false, %41 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  ret i1 %71
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_not() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr %1, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 2099200
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %0
  %8 = tail call zeroext i1 @Perl_try_amagic_un(i32 noundef 11, i32 noundef 32) #13
  br i1 %8, label %70, label %9

9:                                                ; preds = %7
  %10 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %11 = load ptr, ptr %10, align 8, !tbaa !5
  %12 = icmp eq ptr %11, null
  br i1 %12, label %67, label %13

13:                                               ; preds = %0, %9
  %14 = phi ptr [ %11, %9 ], [ %2, %0 ]
  %15 = getelementptr inbounds %struct.sv, ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !16
  %17 = and i32 %16, 65280
  %18 = icmp ne i32 %17, 0
  %19 = and i32 %16, 255
  %20 = icmp eq i32 %19, 8
  %21 = or i1 %18, %20
  %22 = and i32 %16, 16826623
  %23 = icmp eq i32 %22, 16777226
  %24 = or i1 %23, %21
  br i1 %24, label %25, label %67

25:                                               ; preds = %13
  %26 = and i32 %16, 1024
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %43, label %28

28:                                               ; preds = %25
  %29 = load ptr, ptr %14, align 8, !tbaa !26
  %30 = icmp eq ptr %29, null
  br i1 %30, label %67, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.xpv, ptr %29, i64 0, i32 2
  %33 = load i64, ptr %32, align 8, !tbaa !55
  %34 = icmp ugt i64 %33, 1
  br i1 %34, label %66, label %35

35:                                               ; preds = %31
  %36 = icmp eq i64 %33, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %struct.sv, ptr %14, i64 0, i32 3
  %39 = load ptr, ptr %38, align 8, !tbaa !24
  %40 = load i8, ptr %39, align 1, !tbaa !24
  %41 = freeze i8 %40
  %42 = icmp eq i8 %41, 48
  br i1 %42, label %67, label %66

43:                                               ; preds = %25
  %44 = and i32 %16, 768
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %63, label %46

46:                                               ; preds = %43
  %47 = and i32 %16, 256
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %46
  %50 = load ptr, ptr %14, align 8, !tbaa !26
  %51 = getelementptr inbounds %struct.xpviv, ptr %50, i64 0, i32 4
  %52 = load i64, ptr %51, align 8, !tbaa !24
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %49, %46
  %55 = and i32 %16, 512
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %67, label %57

57:                                               ; preds = %54
  %58 = load ptr, ptr %14, align 8, !tbaa !26
  %59 = getelementptr inbounds %struct.xpvnv, ptr %58, i64 0, i32 5
  %60 = load double, ptr %59, align 8, !tbaa !24
  %61 = freeze double %60
  %62 = fcmp une double %61, 0.000000e+00
  br i1 %62, label %66, label %67

63:                                               ; preds = %43
  %64 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %14, i32 noundef 0) #13
  %65 = freeze i1 %64
  br i1 %65, label %66, label %67

66:                                               ; preds = %57, %49, %31, %37, %63
  br label %67

67:                                               ; preds = %57, %54, %35, %28, %13, %66, %63, %37, %9
  %68 = phi ptr [ @PL_sv_yes, %9 ], [ @PL_sv_no, %66 ], [ @PL_sv_yes, %63 ], [ @PL_sv_yes, %37 ], [ @PL_sv_yes, %13 ], [ @PL_sv_yes, %28 ], [ @PL_sv_yes, %35 ], [ @PL_sv_yes, %54 ], [ @PL_sv_yes, %57 ]
  %69 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  store ptr %68, ptr %69, align 8, !tbaa !5
  br label %70

70:                                               ; preds = %7, %67
  %71 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %72 = load ptr, ptr %71, align 8, !tbaa !13
  ret ptr %72
}

declare zeroext i1 @Perl_sv_2bool_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_complement() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %5 = load i64, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = load ptr, ptr %1, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !16
  %11 = and i32 %10, 2099200
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %0
  %14 = tail call zeroext i1 @Perl_try_amagic_un(i32 noundef 60, i32 noundef 16) #13
  br i1 %14, label %68, label %15

15:                                               ; preds = %13
  %16 = load ptr, ptr %1, align 8, !tbaa !5
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !16
  br label %19

19:                                               ; preds = %15, %0
  %20 = phi i32 [ %18, %15 ], [ %10, %0 ]
  %21 = phi ptr [ %16, %15 ], [ %8, %0 ]
  %22 = and i32 %20, 12288
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %60, label %24

24:                                               ; preds = %19
  %25 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %26 = getelementptr inbounds %struct.op, ptr %25, i64 0, i32 6
  %27 = load i8, ptr %26, align 1, !tbaa !15
  %28 = and i8 %27, 1
  %29 = icmp eq i8 %28, 0
  %30 = and i32 %20, 256
  %31 = icmp eq i32 %30, 0
  br i1 %29, label %46, label %32

32:                                               ; preds = %24
  br i1 %31, label %37, label %33

33:                                               ; preds = %32
  %34 = load ptr, ptr %21, align 8, !tbaa !26
  %35 = getelementptr inbounds %struct.xpviv, ptr %34, i64 0, i32 4
  %36 = load i64, ptr %35, align 8, !tbaa !24
  br label %39

37:                                               ; preds = %32
  %38 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %21, i32 noundef 0) #13
  br label %39

39:                                               ; preds = %37, %33
  %40 = phi i64 [ %36, %33 ], [ %38, %37 ]
  %41 = xor i64 %40, -1
  tail call void @Perl_sv_setiv(ptr noundef %7, i64 noundef %41) #13
  %42 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %43 = load i32, ptr %42, align 4, !tbaa !16
  %44 = and i32 %43, 4194304
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %67, label %65

46:                                               ; preds = %24
  br i1 %31, label %51, label %47

47:                                               ; preds = %46
  %48 = load ptr, ptr %21, align 8, !tbaa !26
  %49 = getelementptr inbounds %struct.xpvuv, ptr %48, i64 0, i32 4
  %50 = load i64, ptr %49, align 8, !tbaa !24
  br label %53

51:                                               ; preds = %46
  %52 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %21, i32 noundef 0) #13
  br label %53

53:                                               ; preds = %51, %47
  %54 = phi i64 [ %50, %47 ], [ %52, %51 ]
  %55 = xor i64 %54, -1
  tail call void @Perl_sv_setuv(ptr noundef %7, i64 noundef %55) #13
  %56 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %57 = load i32, ptr %56, align 4, !tbaa !16
  %58 = and i32 %57, 4194304
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %67, label %65

60:                                               ; preds = %19
  tail call fastcc void @S_scomplement(ptr noundef %7, ptr noundef nonnull %21)
  %61 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %62 = load i32, ptr %61, align 4, !tbaa !16
  %63 = and i32 %62, 4194304
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %60, %53, %39
  %66 = tail call i32 @Perl_mg_set(ptr noundef nonnull %7) #13
  br label %67

67:                                               ; preds = %65, %60, %53, %39
  store ptr %7, ptr %1, align 8, !tbaa !5
  br label %68

68:                                               ; preds = %67, %13
  %69 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %70 = load ptr, ptr %69, align 8, !tbaa !13
  ret ptr %70
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_scomplement(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #13
  tail call void @Perl_sv_copypv_flags(ptr noundef %0, ptr noundef %1, i32 noundef 0) #13
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !16
  %7 = and i32 %6, 2098176
  %8 = icmp eq i32 %7, 1024
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = load ptr, ptr %0, align 8, !tbaa !26
  %11 = getelementptr inbounds %struct.xpv, ptr %10, i64 0, i32 2
  %12 = load i64, ptr %11, align 8, !tbaa !55
  store i64 %12, ptr %3, align 8, !tbaa !71
  %13 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !24
  br label %18

15:                                               ; preds = %2
  %16 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %0, ptr noundef nonnull %3, i32 noundef 0) #13
  %17 = load i32, ptr %5, align 4, !tbaa !16
  br label %18

18:                                               ; preds = %15, %9
  %19 = phi i32 [ %6, %9 ], [ %17, %15 ]
  %20 = phi ptr [ %14, %9 ], [ %16, %15 ]
  %21 = and i32 %19, 536870912
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %110, label %23

23:                                               ; preds = %18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #13
  %24 = load i64, ptr %3, align 8, !tbaa !71
  %25 = getelementptr inbounds i8, ptr %20, i64 %24
  %26 = icmp sgt i64 %24, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = call ptr @Perl_safesysmalloc(i64 noundef 1) #13
  br label %102

29:                                               ; preds = %23
  %30 = ptrtoint ptr %25 to i64
  br label %31

31:                                               ; preds = %29, %55
  %32 = phi ptr [ %20, %29 ], [ %40, %55 ]
  %33 = phi i64 [ 0, %29 ], [ %57, %55 ]
  %34 = phi i64 [ 0, %29 ], [ %58, %55 ]
  %35 = phi i64 [ 0, %29 ], [ %61, %55 ]
  %36 = ptrtoint ptr %32 to i64
  %37 = sub i64 %30, %36
  %38 = call i64 @Perl_utf8n_to_uvchr(ptr noundef %32, i64 noundef %37, ptr noundef nonnull %4, i32 noundef 1) #13
  %39 = load i64, ptr %4, align 8, !tbaa !71
  %40 = getelementptr inbounds i8, ptr %32, i64 %39
  %41 = icmp ugt i64 %38, -129
  br i1 %41, label %55, label %42

42:                                               ; preds = %31
  %43 = icmp ugt i64 %38, -2049
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = icmp ugt i64 %38, -65537
  br i1 %45, label %55, label %46

46:                                               ; preds = %44
  %47 = icmp ugt i64 %38, -2097153
  br i1 %47, label %55, label %48

48:                                               ; preds = %46
  %49 = icmp ugt i64 %38, -67108865
  br i1 %49, label %55, label %50

50:                                               ; preds = %48
  %51 = icmp ugt i64 %38, -2147483649
  br i1 %51, label %55, label %52

52:                                               ; preds = %50
  %53 = icmp ugt i64 %38, -68719476737
  %54 = select i1 %53, i64 7, i64 13
  br label %55

55:                                               ; preds = %42, %46, %52, %50, %48, %44, %31
  %56 = phi i64 [ 1, %31 ], [ 2, %42 ], [ 3, %44 ], [ 4, %46 ], [ 5, %48 ], [ %54, %52 ], [ 6, %50 ]
  %57 = add i64 %56, %33
  %58 = add i64 %34, 1
  %59 = icmp ugt i64 %38, 255
  %60 = zext i1 %59 to i64
  %61 = add i64 %35, %60
  %62 = icmp ult ptr %40, %25
  br i1 %62, label %31, label %63, !llvm.loop !98

63:                                               ; preds = %55
  %64 = icmp eq i64 %61, 0
  br i1 %64, label %85, label %65

65:                                               ; preds = %63
  %66 = add i64 %57, 1
  %67 = call ptr @Perl_safesysmalloc(i64 noundef %66) #13
  br i1 %26, label %68, label %81

68:                                               ; preds = %65
  %69 = ptrtoint ptr %25 to i64
  br label %70

70:                                               ; preds = %68, %70
  %71 = phi ptr [ %20, %68 ], [ %77, %70 ]
  %72 = phi ptr [ %67, %68 ], [ %79, %70 ]
  %73 = ptrtoint ptr %71 to i64
  %74 = sub i64 %69, %73
  %75 = call i64 @Perl_utf8n_to_uvchr(ptr noundef %71, i64 noundef %74, ptr noundef nonnull %4, i32 noundef 1) #13
  %76 = load i64, ptr %4, align 8, !tbaa !71
  %77 = getelementptr inbounds i8, ptr %71, i64 %76
  %78 = xor i64 %75, -1
  %79 = call ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef %72, i64 noundef %78, i64 noundef 0) #13
  %80 = icmp ult ptr %77, %25
  br i1 %80, label %70, label %81, !llvm.loop !99

81:                                               ; preds = %70, %65
  %82 = phi ptr [ %67, %65 ], [ %79, %70 ]
  store i8 0, ptr %82, align 1, !tbaa !24
  call void @Perl_sv_usepvn_flags(ptr noundef %0, ptr noundef %67, i64 noundef %57, i32 noundef 256) #13
  %83 = load i32, ptr %5, align 4, !tbaa !16
  %84 = or i32 %83, 536870912
  br label %108

85:                                               ; preds = %63
  %86 = add i64 %34, 2
  %87 = call ptr @Perl_safesysmalloc(i64 noundef %86) #13
  br i1 %26, label %88, label %102

88:                                               ; preds = %85
  %89 = ptrtoint ptr %25 to i64
  br label %90

90:                                               ; preds = %88, %90
  %91 = phi ptr [ %20, %88 ], [ %98, %90 ]
  %92 = phi ptr [ %87, %88 ], [ %100, %90 ]
  %93 = ptrtoint ptr %91 to i64
  %94 = sub i64 %89, %93
  %95 = call i64 @Perl_utf8n_to_uvchr(ptr noundef %91, i64 noundef %94, ptr noundef nonnull %4, i32 noundef 1) #13
  %96 = trunc i64 %95 to i8
  %97 = load i64, ptr %4, align 8, !tbaa !71
  %98 = getelementptr inbounds i8, ptr %91, i64 %97
  %99 = xor i8 %96, -1
  %100 = getelementptr inbounds i8, ptr %92, i64 1
  store i8 %99, ptr %92, align 1, !tbaa !24
  %101 = icmp ult ptr %98, %25
  br i1 %101, label %90, label %102, !llvm.loop !100

102:                                              ; preds = %90, %27, %85
  %103 = phi ptr [ %87, %85 ], [ %28, %27 ], [ %87, %90 ]
  %104 = phi i64 [ %58, %85 ], [ 0, %27 ], [ %58, %90 ]
  %105 = phi ptr [ %87, %85 ], [ %28, %27 ], [ %100, %90 ]
  store i8 0, ptr %105, align 1, !tbaa !24
  call void @Perl_sv_usepvn_flags(ptr noundef %0, ptr noundef %103, i64 noundef %104, i32 noundef 256) #13
  %106 = load i32, ptr %5, align 4, !tbaa !16
  %107 = and i32 %106, -536870913
  br label %108

108:                                              ; preds = %102, %81
  %109 = phi i32 [ %107, %102 ], [ %84, %81 ]
  store i32 %109, ptr %5, align 4, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #13
  br label %302

110:                                              ; preds = %18
  %111 = load i64, ptr %3, align 8, !tbaa !71
  %112 = trunc i64 %111 to i32
  %113 = icmp ne i32 %112, 0
  %114 = ptrtoint ptr %20 to i64
  %115 = and i64 %114, 7
  %116 = icmp ne i64 %115, 0
  %117 = select i1 %113, i1 %116, i1 false
  br i1 %117, label %158, label %118

118:                                              ; preds = %158, %168, %178, %188, %198, %208, %218, %228, %110
  %119 = phi i32 [ %112, %110 ], [ %161, %158 ], [ %171, %168 ], [ %181, %178 ], [ %191, %188 ], [ %201, %198 ], [ %211, %208 ], [ %221, %218 ], [ %231, %228 ]
  %120 = phi ptr [ %20, %110 ], [ %162, %158 ], [ %172, %168 ], [ %182, %178 ], [ %192, %188 ], [ %202, %198 ], [ %212, %208 ], [ %222, %218 ], [ %232, %228 ]
  %121 = icmp sgt i32 %119, 7
  br i1 %121, label %122, label %233

122:                                              ; preds = %118
  %123 = call i32 @llvm.usub.sat.i32(i32 %119, i32 15)
  %124 = add nuw i32 %123, 7
  %125 = lshr i32 %124, 3
  %126 = add nuw nsw i32 %125, 1
  %127 = zext i32 %126 to i64
  %128 = icmp ult i32 %123, 113
  br i1 %128, label %155, label %129

129:                                              ; preds = %122
  %130 = and i64 %127, 1073741808
  %131 = shl nuw nsw i64 %130, 3
  %132 = getelementptr i8, ptr %120, i64 %131
  %133 = trunc i64 %130 to i32
  %134 = shl i32 %133, 3
  %135 = sub i32 %119, %134
  br label %136

136:                                              ; preds = %136, %129
  %137 = phi i64 [ 0, %129 ], [ %151, %136 ]
  %138 = shl i64 %137, 3
  %139 = getelementptr i8, ptr %120, i64 %138
  %140 = load <4 x i64>, ptr %139, align 8, !tbaa !71
  %141 = getelementptr i64, ptr %139, i64 4
  %142 = load <4 x i64>, ptr %141, align 8, !tbaa !71
  %143 = getelementptr i64, ptr %139, i64 8
  %144 = load <4 x i64>, ptr %143, align 8, !tbaa !71
  %145 = getelementptr i64, ptr %139, i64 12
  %146 = load <4 x i64>, ptr %145, align 8, !tbaa !71
  %147 = xor <4 x i64> %140, <i64 -1, i64 -1, i64 -1, i64 -1>
  %148 = xor <4 x i64> %142, <i64 -1, i64 -1, i64 -1, i64 -1>
  %149 = xor <4 x i64> %144, <i64 -1, i64 -1, i64 -1, i64 -1>
  %150 = xor <4 x i64> %146, <i64 -1, i64 -1, i64 -1, i64 -1>
  store <4 x i64> %147, ptr %139, align 8, !tbaa !71
  store <4 x i64> %148, ptr %141, align 8, !tbaa !71
  store <4 x i64> %149, ptr %143, align 8, !tbaa !71
  store <4 x i64> %150, ptr %145, align 8, !tbaa !71
  %151 = add nuw i64 %137, 16
  %152 = icmp eq i64 %151, %130
  br i1 %152, label %153, label %136, !llvm.loop !101

153:                                              ; preds = %136
  %154 = icmp eq i64 %130, %127
  br i1 %154, label %233, label %155

155:                                              ; preds = %122, %153
  %156 = phi ptr [ %120, %122 ], [ %132, %153 ]
  %157 = phi i32 [ %119, %122 ], [ %135, %153 ]
  br label %286

158:                                              ; preds = %110
  %159 = load i8, ptr %20, align 1, !tbaa !24
  %160 = xor i8 %159, -1
  store i8 %160, ptr %20, align 1, !tbaa !24
  %161 = add nsw i32 %112, -1
  %162 = getelementptr inbounds i8, ptr %20, i64 1
  %163 = icmp ne i32 %161, 0
  %164 = ptrtoint ptr %162 to i64
  %165 = and i64 %164, 7
  %166 = icmp ne i64 %165, 0
  %167 = select i1 %163, i1 %166, i1 false
  br i1 %167, label %168, label %118, !llvm.loop !104

168:                                              ; preds = %158
  %169 = load i8, ptr %162, align 1, !tbaa !24
  %170 = xor i8 %169, -1
  store i8 %170, ptr %162, align 1, !tbaa !24
  %171 = add nsw i32 %112, -2
  %172 = getelementptr inbounds i8, ptr %20, i64 2
  %173 = icmp ne i32 %171, 0
  %174 = ptrtoint ptr %172 to i64
  %175 = and i64 %174, 7
  %176 = icmp ne i64 %175, 0
  %177 = select i1 %173, i1 %176, i1 false
  br i1 %177, label %178, label %118, !llvm.loop !104

178:                                              ; preds = %168
  %179 = load i8, ptr %172, align 1, !tbaa !24
  %180 = xor i8 %179, -1
  store i8 %180, ptr %172, align 1, !tbaa !24
  %181 = add nsw i32 %112, -3
  %182 = getelementptr inbounds i8, ptr %20, i64 3
  %183 = icmp ne i32 %181, 0
  %184 = ptrtoint ptr %182 to i64
  %185 = and i64 %184, 7
  %186 = icmp ne i64 %185, 0
  %187 = select i1 %183, i1 %186, i1 false
  br i1 %187, label %188, label %118, !llvm.loop !104

188:                                              ; preds = %178
  %189 = load i8, ptr %182, align 1, !tbaa !24
  %190 = xor i8 %189, -1
  store i8 %190, ptr %182, align 1, !tbaa !24
  %191 = add nsw i32 %112, -4
  %192 = getelementptr inbounds i8, ptr %20, i64 4
  %193 = icmp ne i32 %191, 0
  %194 = ptrtoint ptr %192 to i64
  %195 = and i64 %194, 7
  %196 = icmp ne i64 %195, 0
  %197 = select i1 %193, i1 %196, i1 false
  br i1 %197, label %198, label %118, !llvm.loop !104

198:                                              ; preds = %188
  %199 = load i8, ptr %192, align 1, !tbaa !24
  %200 = xor i8 %199, -1
  store i8 %200, ptr %192, align 1, !tbaa !24
  %201 = add nsw i32 %112, -5
  %202 = getelementptr inbounds i8, ptr %20, i64 5
  %203 = icmp ne i32 %201, 0
  %204 = ptrtoint ptr %202 to i64
  %205 = and i64 %204, 7
  %206 = icmp ne i64 %205, 0
  %207 = select i1 %203, i1 %206, i1 false
  br i1 %207, label %208, label %118, !llvm.loop !104

208:                                              ; preds = %198
  %209 = load i8, ptr %202, align 1, !tbaa !24
  %210 = xor i8 %209, -1
  store i8 %210, ptr %202, align 1, !tbaa !24
  %211 = add nsw i32 %112, -6
  %212 = getelementptr inbounds i8, ptr %20, i64 6
  %213 = icmp ne i32 %211, 0
  %214 = ptrtoint ptr %212 to i64
  %215 = and i64 %214, 7
  %216 = icmp ne i64 %215, 0
  %217 = select i1 %213, i1 %216, i1 false
  br i1 %217, label %218, label %118, !llvm.loop !104

218:                                              ; preds = %208
  %219 = load i8, ptr %212, align 1, !tbaa !24
  %220 = xor i8 %219, -1
  store i8 %220, ptr %212, align 1, !tbaa !24
  %221 = add nsw i32 %112, -7
  %222 = getelementptr inbounds i8, ptr %20, i64 7
  %223 = icmp ne i32 %221, 0
  %224 = ptrtoint ptr %222 to i64
  %225 = and i64 %224, 7
  %226 = icmp ne i64 %225, 0
  %227 = select i1 %223, i1 %226, i1 false
  br i1 %227, label %228, label %118, !llvm.loop !104

228:                                              ; preds = %218
  %229 = load i8, ptr %222, align 1, !tbaa !24
  %230 = xor i8 %229, -1
  store i8 %230, ptr %222, align 1, !tbaa !24
  %231 = add nsw i32 %112, -8
  %232 = getelementptr inbounds i8, ptr %20, i64 8
  br label %118

233:                                              ; preds = %286, %153, %118
  %234 = phi i32 [ %119, %118 ], [ %135, %153 ], [ %291, %286 ]
  %235 = phi ptr [ %120, %118 ], [ %132, %153 ], [ %292, %286 ]
  %236 = icmp sgt i32 %234, 0
  br i1 %236, label %237, label %302

237:                                              ; preds = %233
  %238 = zext i32 %234 to i64
  %239 = icmp ult i32 %234, 16
  br i1 %239, label %283, label %240

240:                                              ; preds = %237
  %241 = icmp ult i32 %234, 128
  br i1 %241, label %268, label %242

242:                                              ; preds = %240
  %243 = and i64 %238, 4294967168
  br label %244

244:                                              ; preds = %244, %242
  %245 = phi i64 [ 0, %242 ], [ %258, %244 ]
  %246 = getelementptr i8, ptr %235, i64 %245
  %247 = load <32 x i8>, ptr %246, align 1, !tbaa !24
  %248 = getelementptr i8, ptr %246, i64 32
  %249 = load <32 x i8>, ptr %248, align 1, !tbaa !24
  %250 = getelementptr i8, ptr %246, i64 64
  %251 = load <32 x i8>, ptr %250, align 1, !tbaa !24
  %252 = getelementptr i8, ptr %246, i64 96
  %253 = load <32 x i8>, ptr %252, align 1, !tbaa !24
  %254 = xor <32 x i8> %247, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %255 = xor <32 x i8> %249, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %256 = xor <32 x i8> %251, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %257 = xor <32 x i8> %253, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  store <32 x i8> %254, ptr %246, align 1, !tbaa !24
  store <32 x i8> %255, ptr %248, align 1, !tbaa !24
  store <32 x i8> %256, ptr %250, align 1, !tbaa !24
  store <32 x i8> %257, ptr %252, align 1, !tbaa !24
  %258 = add nuw i64 %245, 128
  %259 = icmp eq i64 %258, %243
  br i1 %259, label %260, label %244, !llvm.loop !105

260:                                              ; preds = %244
  %261 = icmp eq i64 %243, %238
  br i1 %261, label %302, label %262

262:                                              ; preds = %260
  %263 = trunc i64 %243 to i32
  %264 = sub i32 %234, %263
  %265 = getelementptr i8, ptr %235, i64 %243
  %266 = and i64 %238, 112
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %283, label %268

268:                                              ; preds = %240, %262
  %269 = phi i64 [ %243, %262 ], [ 0, %240 ]
  %270 = and i64 %238, 4294967280
  %271 = getelementptr i8, ptr %235, i64 %270
  %272 = trunc i64 %270 to i32
  %273 = sub i32 %234, %272
  br label %274

274:                                              ; preds = %274, %268
  %275 = phi i64 [ %269, %268 ], [ %279, %274 ]
  %276 = getelementptr i8, ptr %235, i64 %275
  %277 = load <16 x i8>, ptr %276, align 1, !tbaa !24
  %278 = xor <16 x i8> %277, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  store <16 x i8> %278, ptr %276, align 1, !tbaa !24
  %279 = add nuw i64 %275, 16
  %280 = icmp eq i64 %279, %270
  br i1 %280, label %281, label %274, !llvm.loop !106

281:                                              ; preds = %274
  %282 = icmp eq i64 %270, %238
  br i1 %282, label %302, label %283

283:                                              ; preds = %237, %262, %281
  %284 = phi ptr [ %235, %237 ], [ %265, %262 ], [ %271, %281 ]
  %285 = phi i32 [ %234, %237 ], [ %264, %262 ], [ %273, %281 ]
  br label %294

286:                                              ; preds = %155, %286
  %287 = phi ptr [ %292, %286 ], [ %156, %155 ]
  %288 = phi i32 [ %291, %286 ], [ %157, %155 ]
  %289 = load i64, ptr %287, align 8, !tbaa !71
  %290 = xor i64 %289, -1
  store i64 %290, ptr %287, align 8, !tbaa !71
  %291 = add nsw i32 %288, -8
  %292 = getelementptr inbounds i64, ptr %287, i64 1
  %293 = icmp ugt i32 %288, 15
  br i1 %293, label %286, label %233, !llvm.loop !107

294:                                              ; preds = %283, %294
  %295 = phi ptr [ %300, %294 ], [ %284, %283 ]
  %296 = phi i32 [ %299, %294 ], [ %285, %283 ]
  %297 = load i8, ptr %295, align 1, !tbaa !24
  %298 = xor i8 %297, -1
  store i8 %298, ptr %295, align 1, !tbaa !24
  %299 = add nsw i32 %296, -1
  %300 = getelementptr inbounds i8, ptr %295, i64 1
  %301 = icmp ugt i32 %296, 1
  br i1 %301, label %294, label %302, !llvm.loop !108

302:                                              ; preds = %294, %260, %281, %233, %108
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #13
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_ncomplement() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr %1, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 2099200
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %0
  %8 = tail call zeroext i1 @Perl_try_amagic_un(i32 noundef 60, i32 noundef 144) #13
  br i1 %8, label %58, label %9

9:                                                ; preds = %7
  %10 = load ptr, ptr %1, align 8, !tbaa !5
  br label %11

11:                                               ; preds = %9, %0
  %12 = phi ptr [ %10, %9 ], [ %2, %0 ]
  %13 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %14 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %15 = getelementptr inbounds %struct.op, ptr %14, i64 0, i32 3
  %16 = load i64, ptr %15, align 8, !tbaa !14
  %17 = getelementptr inbounds ptr, ptr %13, i64 %16
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.op, ptr %14, i64 0, i32 6
  %20 = load i8, ptr %19, align 1, !tbaa !15
  %21 = and i8 %20, 1
  %22 = icmp eq i8 %21, 0
  %23 = getelementptr inbounds %struct.sv, ptr %12, i64 0, i32 2
  %24 = load i32, ptr %23, align 4, !tbaa !16
  %25 = and i32 %24, 256
  %26 = icmp eq i32 %25, 0
  br i1 %22, label %41, label %27

27:                                               ; preds = %11
  br i1 %26, label %32, label %28

28:                                               ; preds = %27
  %29 = load ptr, ptr %12, align 8, !tbaa !26
  %30 = getelementptr inbounds %struct.xpviv, ptr %29, i64 0, i32 4
  %31 = load i64, ptr %30, align 8, !tbaa !24
  br label %34

32:                                               ; preds = %27
  %33 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %12, i32 noundef 0) #13
  br label %34

34:                                               ; preds = %32, %28
  %35 = phi i64 [ %31, %28 ], [ %33, %32 ]
  %36 = xor i64 %35, -1
  tail call void @Perl_sv_setiv(ptr noundef %18, i64 noundef %36) #13
  %37 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %38 = load i32, ptr %37, align 4, !tbaa !16
  %39 = and i32 %38, 4194304
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %57, label %55

41:                                               ; preds = %11
  br i1 %26, label %46, label %42

42:                                               ; preds = %41
  %43 = load ptr, ptr %12, align 8, !tbaa !26
  %44 = getelementptr inbounds %struct.xpvuv, ptr %43, i64 0, i32 4
  %45 = load i64, ptr %44, align 8, !tbaa !24
  br label %48

46:                                               ; preds = %41
  %47 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %12, i32 noundef 0) #13
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi i64 [ %45, %42 ], [ %47, %46 ]
  %50 = xor i64 %49, -1
  tail call void @Perl_sv_setuv(ptr noundef %18, i64 noundef %50) #13
  %51 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %52 = load i32, ptr %51, align 4, !tbaa !16
  %53 = and i32 %52, 4194304
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %48, %34
  %56 = tail call i32 @Perl_mg_set(ptr noundef nonnull %18) #13
  br label %57

57:                                               ; preds = %55, %48, %34
  store ptr %18, ptr %1, align 8, !tbaa !5
  br label %58

58:                                               ; preds = %7, %57
  %59 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %60 = load ptr, ptr %59, align 8, !tbaa !13
  ret ptr %60
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_scomplement() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr %1, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 2099200
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %0
  %8 = tail call zeroext i1 @Perl_try_amagic_un(i32 noundef 61, i32 noundef 16) #13
  br i1 %8, label %26, label %9

9:                                                ; preds = %7
  %10 = load ptr, ptr %1, align 8, !tbaa !5
  br label %11

11:                                               ; preds = %9, %0
  %12 = phi ptr [ %10, %9 ], [ %2, %0 ]
  %13 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %14 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %15 = getelementptr inbounds %struct.op, ptr %14, i64 0, i32 3
  %16 = load i64, ptr %15, align 8, !tbaa !14
  %17 = getelementptr inbounds ptr, ptr %13, i64 %16
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  tail call fastcc void @S_scomplement(ptr noundef %18, ptr noundef %12)
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = and i32 %20, 4194304
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %11
  %24 = tail call i32 @Perl_mg_set(ptr noundef nonnull %18) #13
  br label %25

25:                                               ; preds = %11, %23
  store ptr %18, ptr %1, align 8, !tbaa !5
  br label %26

26:                                               ; preds = %7, %25
  %27 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %28 = load ptr, ptr %27, align 8, !tbaa !13
  ret ptr %28
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_i_multiply() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !9
  %5 = and i8 %4, 64
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %0
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  br label %14

9:                                                ; preds = %0
  %10 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %12 = load i64, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds ptr, ptr %10, i64 %12
  br label %14

14:                                               ; preds = %9, %7
  %15 = phi ptr [ %8, %7 ], [ %13, %9 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %17 = getelementptr inbounds ptr, ptr %1, i64 -1
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = load ptr, ptr %1, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  %24 = or i32 %23, %20
  %25 = and i32 %24, 2099200
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %14
  %28 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 34, i32 noundef 4) #13
  br i1 %28, label %67, label %29

29:                                               ; preds = %27
  %30 = load ptr, ptr %1, align 8, !tbaa !5
  %31 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 2
  %32 = load i32, ptr %31, align 4, !tbaa !16
  br label %33

33:                                               ; preds = %29, %14
  %34 = phi i32 [ %32, %29 ], [ %23, %14 ]
  %35 = phi ptr [ %30, %29 ], [ %21, %14 ]
  %36 = and i32 %34, 256
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %33
  %39 = load ptr, ptr %35, align 8, !tbaa !26
  %40 = getelementptr inbounds %struct.xpviv, ptr %39, i64 0, i32 4
  %41 = load i64, ptr %40, align 8, !tbaa !24
  br label %44

42:                                               ; preds = %33
  %43 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %35, i32 noundef 0) #13
  br label %44

44:                                               ; preds = %42, %38
  %45 = phi i64 [ %41, %38 ], [ %43, %42 ]
  %46 = load ptr, ptr %17, align 8, !tbaa !5
  %47 = getelementptr inbounds %struct.sv, ptr %46, i64 0, i32 2
  %48 = load i32, ptr %47, align 4, !tbaa !16
  %49 = and i32 %48, 256
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %44
  %52 = load ptr, ptr %46, align 8, !tbaa !26
  %53 = getelementptr inbounds %struct.xpviv, ptr %52, i64 0, i32 4
  %54 = load i64, ptr %53, align 8, !tbaa !24
  br label %57

55:                                               ; preds = %44
  %56 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %46, i32 noundef 0) #13
  br label %57

57:                                               ; preds = %55, %51
  %58 = phi i64 [ %54, %51 ], [ %56, %55 ]
  %59 = mul nsw i64 %58, %45
  tail call void @Perl_sv_setiv(ptr noundef %16, i64 noundef %59) #13
  %60 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %61 = load i32, ptr %60, align 4, !tbaa !16
  %62 = and i32 %61, 4194304
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %57
  %65 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %66

66:                                               ; preds = %57, %64
  store ptr %16, ptr %17, align 8, !tbaa !5
  store ptr %17, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %67

67:                                               ; preds = %27, %66
  %68 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %69 = load ptr, ptr %68, align 8, !tbaa !13
  ret ptr %69
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_i_divide() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !9
  %5 = and i8 %4, 64
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %0
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  br label %14

9:                                                ; preds = %0
  %10 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %12 = load i64, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds ptr, ptr %10, i64 %12
  br label %14

14:                                               ; preds = %9, %7
  %15 = phi ptr [ %8, %7 ], [ %13, %9 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %17 = getelementptr inbounds ptr, ptr %1, i64 -1
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = load ptr, ptr %1, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  %24 = or i32 %23, %20
  %25 = and i32 %24, 2099200
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %14
  %28 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 36, i32 noundef 4) #13
  br i1 %28, label %34, label %29

29:                                               ; preds = %27
  %30 = load ptr, ptr %1, align 8, !tbaa !5
  %31 = load ptr, ptr %17, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  br label %37

34:                                               ; preds = %27
  %35 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %36 = load ptr, ptr %35, align 8, !tbaa !13
  br label %83

37:                                               ; preds = %29, %14
  %38 = phi i32 [ %33, %29 ], [ %23, %14 ]
  %39 = phi ptr [ %31, %29 ], [ %18, %14 ]
  %40 = phi ptr [ %30, %29 ], [ %21, %14 ]
  %41 = and i32 %38, 256
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %37
  %44 = load ptr, ptr %40, align 8, !tbaa !26
  %45 = getelementptr inbounds %struct.xpviv, ptr %44, i64 0, i32 4
  %46 = load i64, ptr %45, align 8, !tbaa !24
  br label %49

47:                                               ; preds = %37
  %48 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %40, i32 noundef 0) #13
  br label %49

49:                                               ; preds = %47, %43
  %50 = phi i64 [ %46, %43 ], [ %48, %47 ]
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.26) #13
  br label %83

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct.sv, ptr %39, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !16
  %57 = and i32 %56, 256
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %54
  %60 = load ptr, ptr %39, align 8, !tbaa !26
  %61 = getelementptr inbounds %struct.xpviv, ptr %60, i64 0, i32 4
  %62 = load i64, ptr %61, align 8, !tbaa !24
  br label %65

63:                                               ; preds = %54
  %64 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %39, i32 noundef 0) #13
  br label %65

65:                                               ; preds = %63, %59
  %66 = phi i64 [ %62, %59 ], [ %64, %63 ]
  %67 = icmp eq i64 %50, -1
  br i1 %67, label %68, label %70

68:                                               ; preds = %65
  %69 = sub nsw i64 0, %66
  br label %72

70:                                               ; preds = %65
  %71 = sdiv i64 %66, %50
  br label %72

72:                                               ; preds = %68, %70
  %73 = phi i64 [ %69, %68 ], [ %71, %70 ]
  tail call void @Perl_sv_setiv(ptr noundef %16, i64 noundef %73) #13
  %74 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %75 = load i32, ptr %74, align 4, !tbaa !16
  %76 = and i32 %75, 4194304
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %72
  %79 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %80

80:                                               ; preds = %72, %78
  store ptr %16, ptr %17, align 8, !tbaa !5
  store ptr %17, ptr @PL_stack_sp, align 8, !tbaa !5
  %81 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %82 = load ptr, ptr %81, align 8, !tbaa !13
  br label %83

83:                                               ; preds = %52, %80, %34
  %84 = phi ptr [ %36, %34 ], [ %53, %52 ], [ %82, %80 ]
  ret ptr %84
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_i_modulo() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !9
  %5 = and i8 %4, 64
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %0
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  br label %14

9:                                                ; preds = %0
  %10 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %12 = load i64, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds ptr, ptr %10, i64 %12
  br label %14

14:                                               ; preds = %9, %7
  %15 = phi ptr [ %8, %7 ], [ %13, %9 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %17 = getelementptr inbounds ptr, ptr %1, i64 -1
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = load ptr, ptr %1, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  %24 = or i32 %23, %20
  %25 = and i32 %24, 2099200
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %14
  %28 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 38, i32 noundef 4) #13
  br i1 %28, label %33, label %29

29:                                               ; preds = %27
  %30 = load ptr, ptr %1, align 8, !tbaa !5
  %31 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 2
  %32 = load i32, ptr %31, align 4, !tbaa !16
  br label %36

33:                                               ; preds = %27
  %34 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %35 = load ptr, ptr %34, align 8, !tbaa !13
  br label %80

36:                                               ; preds = %29, %14
  %37 = phi i32 [ %32, %29 ], [ %23, %14 ]
  %38 = phi ptr [ %30, %29 ], [ %21, %14 ]
  %39 = and i32 %37, 256
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %36
  %42 = load ptr, ptr %38, align 8, !tbaa !26
  %43 = getelementptr inbounds %struct.xpviv, ptr %42, i64 0, i32 4
  %44 = load i64, ptr %43, align 8, !tbaa !24
  br label %47

45:                                               ; preds = %36
  %46 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %38, i32 noundef 0) #13
  br label %47

47:                                               ; preds = %45, %41
  %48 = phi i64 [ %44, %41 ], [ %46, %45 ]
  %49 = load ptr, ptr %17, align 8, !tbaa !5
  %50 = getelementptr inbounds %struct.sv, ptr %49, i64 0, i32 2
  %51 = load i32, ptr %50, align 4, !tbaa !16
  %52 = and i32 %51, 256
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %47
  %55 = load ptr, ptr %49, align 8, !tbaa !26
  %56 = getelementptr inbounds %struct.xpviv, ptr %55, i64 0, i32 4
  %57 = load i64, ptr %56, align 8, !tbaa !24
  br label %60

58:                                               ; preds = %47
  %59 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %49, i32 noundef 0) #13
  br label %60

60:                                               ; preds = %58, %54
  %61 = phi i64 [ %57, %54 ], [ %59, %58 ]
  switch i64 %48, label %69 [
    i64 0, label %62
    i64 -1, label %64
  ]

62:                                               ; preds = %60
  %63 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.27) #13
  br label %80

64:                                               ; preds = %60
  tail call void @Perl_sv_setiv(ptr noundef %16, i64 noundef 0) #13
  %65 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %66 = load i32, ptr %65, align 4, !tbaa !16
  %67 = and i32 %66, 4194304
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %77, label %75

69:                                               ; preds = %60
  %70 = srem i64 %61, %48
  tail call void @Perl_sv_setiv(ptr noundef %16, i64 noundef %70) #13
  %71 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %72 = load i32, ptr %71, align 4, !tbaa !16
  %73 = and i32 %72, 4194304
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %69, %64
  %76 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %77

77:                                               ; preds = %75, %69, %64
  store ptr %16, ptr %17, align 8, !tbaa !5
  store ptr %17, ptr @PL_stack_sp, align 8, !tbaa !5
  %78 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %79 = load ptr, ptr %78, align 8, !tbaa !13
  br label %80

80:                                               ; preds = %62, %77, %33
  %81 = phi ptr [ %35, %33 ], [ %79, %77 ], [ %63, %62 ]
  ret ptr %81
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_i_add() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !9
  %5 = and i8 %4, 64
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %0
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  br label %14

9:                                                ; preds = %0
  %10 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %12 = load i64, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds ptr, ptr %10, i64 %12
  br label %14

14:                                               ; preds = %9, %7
  %15 = phi ptr [ %8, %7 ], [ %13, %9 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %17 = getelementptr inbounds ptr, ptr %1, i64 -1
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = load ptr, ptr %1, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  %24 = or i32 %23, %20
  %25 = and i32 %24, 2099200
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %14
  %28 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 30, i32 noundef 4) #13
  br i1 %28, label %82, label %29

29:                                               ; preds = %27
  %30 = load ptr, ptr %1, align 8, !tbaa !5
  %31 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 2
  %32 = load i32, ptr %31, align 4, !tbaa !16
  br label %33

33:                                               ; preds = %29, %14
  %34 = phi i32 [ %32, %29 ], [ %23, %14 ]
  %35 = phi ptr [ %30, %29 ], [ %21, %14 ]
  %36 = and i32 %34, 256
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %33
  %39 = load ptr, ptr %35, align 8, !tbaa !26
  %40 = getelementptr inbounds %struct.xpviv, ptr %39, i64 0, i32 4
  %41 = load i64, ptr %40, align 8, !tbaa !24
  br label %44

42:                                               ; preds = %33
  %43 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %35, i32 noundef 0) #13
  br label %44

44:                                               ; preds = %42, %38
  %45 = phi i64 [ %41, %38 ], [ %43, %42 ]
  %46 = load ptr, ptr %17, align 8, !tbaa !5
  %47 = getelementptr inbounds %struct.sv, ptr %46, i64 0, i32 2
  %48 = load i32, ptr %47, align 4, !tbaa !16
  %49 = and i32 %48, 65280
  %50 = icmp ne i32 %49, 0
  %51 = and i32 %48, 255
  %52 = icmp eq i32 %51, 8
  %53 = or i1 %50, %52
  %54 = and i32 %48, 16826623
  %55 = icmp eq i32 %54, 16777226
  %56 = or i1 %55, %53
  br i1 %56, label %63, label %57

57:                                               ; preds = %44
  %58 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %59 = getelementptr inbounds %struct.op, ptr %58, i64 0, i32 5
  %60 = load i8, ptr %59, align 2, !tbaa !9
  %61 = and i8 %60, 64
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %72

63:                                               ; preds = %57, %44
  %64 = and i32 %48, 256
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %70, label %66

66:                                               ; preds = %63
  %67 = load ptr, ptr %46, align 8, !tbaa !26
  %68 = getelementptr inbounds %struct.xpviv, ptr %67, i64 0, i32 4
  %69 = load i64, ptr %68, align 8, !tbaa !24
  br label %72

70:                                               ; preds = %63
  %71 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %46, i32 noundef 0) #13
  br label %72

72:                                               ; preds = %57, %66, %70
  %73 = phi i64 [ %69, %66 ], [ %71, %70 ], [ 0, %57 ]
  %74 = add nsw i64 %73, %45
  tail call void @Perl_sv_setiv(ptr noundef %16, i64 noundef %74) #13
  %75 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %76 = load i32, ptr %75, align 4, !tbaa !16
  %77 = and i32 %76, 4194304
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %72
  %80 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %81

81:                                               ; preds = %72, %79
  store ptr %16, ptr %17, align 8, !tbaa !5
  store ptr %17, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %82

82:                                               ; preds = %27, %81
  %83 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %84 = load ptr, ptr %83, align 8, !tbaa !13
  ret ptr %84
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_i_subtract() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !9
  %5 = and i8 %4, 64
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %0
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  br label %14

9:                                                ; preds = %0
  %10 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %12 = load i64, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds ptr, ptr %10, i64 %12
  br label %14

14:                                               ; preds = %9, %7
  %15 = phi ptr [ %8, %7 ], [ %13, %9 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %17 = getelementptr inbounds ptr, ptr %1, i64 -1
  %18 = load ptr, ptr %17, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = load ptr, ptr %1, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  %24 = or i32 %23, %20
  %25 = and i32 %24, 2099200
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %14
  %28 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 32, i32 noundef 4) #13
  br i1 %28, label %82, label %29

29:                                               ; preds = %27
  %30 = load ptr, ptr %1, align 8, !tbaa !5
  %31 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 2
  %32 = load i32, ptr %31, align 4, !tbaa !16
  br label %33

33:                                               ; preds = %29, %14
  %34 = phi i32 [ %32, %29 ], [ %23, %14 ]
  %35 = phi ptr [ %30, %29 ], [ %21, %14 ]
  %36 = and i32 %34, 256
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %33
  %39 = load ptr, ptr %35, align 8, !tbaa !26
  %40 = getelementptr inbounds %struct.xpviv, ptr %39, i64 0, i32 4
  %41 = load i64, ptr %40, align 8, !tbaa !24
  br label %44

42:                                               ; preds = %33
  %43 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %35, i32 noundef 0) #13
  br label %44

44:                                               ; preds = %42, %38
  %45 = phi i64 [ %41, %38 ], [ %43, %42 ]
  %46 = load ptr, ptr %17, align 8, !tbaa !5
  %47 = getelementptr inbounds %struct.sv, ptr %46, i64 0, i32 2
  %48 = load i32, ptr %47, align 4, !tbaa !16
  %49 = and i32 %48, 65280
  %50 = icmp ne i32 %49, 0
  %51 = and i32 %48, 255
  %52 = icmp eq i32 %51, 8
  %53 = or i1 %50, %52
  %54 = and i32 %48, 16826623
  %55 = icmp eq i32 %54, 16777226
  %56 = or i1 %55, %53
  br i1 %56, label %63, label %57

57:                                               ; preds = %44
  %58 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %59 = getelementptr inbounds %struct.op, ptr %58, i64 0, i32 5
  %60 = load i8, ptr %59, align 2, !tbaa !9
  %61 = and i8 %60, 64
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %72

63:                                               ; preds = %57, %44
  %64 = and i32 %48, 256
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %70, label %66

66:                                               ; preds = %63
  %67 = load ptr, ptr %46, align 8, !tbaa !26
  %68 = getelementptr inbounds %struct.xpviv, ptr %67, i64 0, i32 4
  %69 = load i64, ptr %68, align 8, !tbaa !24
  br label %72

70:                                               ; preds = %63
  %71 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %46, i32 noundef 0) #13
  br label %72

72:                                               ; preds = %57, %66, %70
  %73 = phi i64 [ %69, %66 ], [ %71, %70 ], [ 0, %57 ]
  %74 = sub nsw i64 %73, %45
  tail call void @Perl_sv_setiv(ptr noundef %16, i64 noundef %74) #13
  %75 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %76 = load i32, ptr %75, align 4, !tbaa !16
  %77 = and i32 %76, 4194304
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %72
  %80 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #13
  br label %81

81:                                               ; preds = %72, %79
  store ptr %16, ptr %17, align 8, !tbaa !5
  store ptr %17, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %82

82:                                               ; preds = %27, %81
  %83 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %84 = load ptr, ptr %83, align 8, !tbaa !13
  ret ptr %84
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_i_lt() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = load ptr, ptr %1, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = or i32 %8, %5
  %10 = and i32 %9, 2099200
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %0
  %13 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 17, i32 noundef 32) #13
  br i1 %13, label %46, label %14

14:                                               ; preds = %12
  %15 = load ptr, ptr %1, align 8, !tbaa !5
  %16 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 2
  %17 = load i32, ptr %16, align 4, !tbaa !16
  br label %18

18:                                               ; preds = %14, %0
  %19 = phi i32 [ %17, %14 ], [ %8, %0 ]
  %20 = phi ptr [ %15, %14 ], [ %6, %0 ]
  %21 = and i32 %19, 256
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = load ptr, ptr %20, align 8, !tbaa !26
  %25 = getelementptr inbounds %struct.xpviv, ptr %24, i64 0, i32 4
  %26 = load i64, ptr %25, align 8, !tbaa !24
  br label %29

27:                                               ; preds = %18
  %28 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %20, i32 noundef 0) #13
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi i64 [ %26, %23 ], [ %28, %27 ]
  %31 = load ptr, ptr %2, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.sv, ptr %31, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  %34 = and i32 %33, 256
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %29
  %37 = load ptr, ptr %31, align 8, !tbaa !26
  %38 = getelementptr inbounds %struct.xpviv, ptr %37, i64 0, i32 4
  %39 = load i64, ptr %38, align 8, !tbaa !24
  br label %42

40:                                               ; preds = %29
  %41 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %31, i32 noundef 0) #13
  br label %42

42:                                               ; preds = %40, %36
  %43 = phi i64 [ %39, %36 ], [ %41, %40 ]
  %44 = icmp slt i64 %43, %30
  %45 = select i1 %44, ptr @PL_sv_yes, ptr @PL_sv_no
  store ptr %45, ptr %2, align 8, !tbaa !5
  store ptr %2, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %46

46:                                               ; preds = %12, %42
  %47 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %48 = load ptr, ptr %47, align 8, !tbaa !13
  ret ptr %48
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_i_gt() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = load ptr, ptr %1, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = or i32 %8, %5
  %10 = and i32 %9, 2099200
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %0
  %13 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 19, i32 noundef 32) #13
  br i1 %13, label %46, label %14

14:                                               ; preds = %12
  %15 = load ptr, ptr %1, align 8, !tbaa !5
  %16 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 2
  %17 = load i32, ptr %16, align 4, !tbaa !16
  br label %18

18:                                               ; preds = %14, %0
  %19 = phi i32 [ %17, %14 ], [ %8, %0 ]
  %20 = phi ptr [ %15, %14 ], [ %6, %0 ]
  %21 = and i32 %19, 256
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = load ptr, ptr %20, align 8, !tbaa !26
  %25 = getelementptr inbounds %struct.xpviv, ptr %24, i64 0, i32 4
  %26 = load i64, ptr %25, align 8, !tbaa !24
  br label %29

27:                                               ; preds = %18
  %28 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %20, i32 noundef 0) #13
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi i64 [ %26, %23 ], [ %28, %27 ]
  %31 = load ptr, ptr %2, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.sv, ptr %31, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  %34 = and i32 %33, 256
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %29
  %37 = load ptr, ptr %31, align 8, !tbaa !26
  %38 = getelementptr inbounds %struct.xpviv, ptr %37, i64 0, i32 4
  %39 = load i64, ptr %38, align 8, !tbaa !24
  br label %42

40:                                               ; preds = %29
  %41 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %31, i32 noundef 0) #13
  br label %42

42:                                               ; preds = %40, %36
  %43 = phi i64 [ %39, %36 ], [ %41, %40 ]
  %44 = icmp sgt i64 %43, %30
  %45 = select i1 %44, ptr @PL_sv_yes, ptr @PL_sv_no
  store ptr %45, ptr %2, align 8, !tbaa !5
  store ptr %2, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %46

46:                                               ; preds = %12, %42
  %47 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %48 = load ptr, ptr %47, align 8, !tbaa !13
  ret ptr %48
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_i_le() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = load ptr, ptr %1, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = or i32 %8, %5
  %10 = and i32 %9, 2099200
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %0
  %13 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 18, i32 noundef 32) #13
  br i1 %13, label %46, label %14

14:                                               ; preds = %12
  %15 = load ptr, ptr %1, align 8, !tbaa !5
  %16 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 2
  %17 = load i32, ptr %16, align 4, !tbaa !16
  br label %18

18:                                               ; preds = %14, %0
  %19 = phi i32 [ %17, %14 ], [ %8, %0 ]
  %20 = phi ptr [ %15, %14 ], [ %6, %0 ]
  %21 = and i32 %19, 256
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = load ptr, ptr %20, align 8, !tbaa !26
  %25 = getelementptr inbounds %struct.xpviv, ptr %24, i64 0, i32 4
  %26 = load i64, ptr %25, align 8, !tbaa !24
  br label %29

27:                                               ; preds = %18
  %28 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %20, i32 noundef 0) #13
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi i64 [ %26, %23 ], [ %28, %27 ]
  %31 = load ptr, ptr %2, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.sv, ptr %31, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  %34 = and i32 %33, 256
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %29
  %37 = load ptr, ptr %31, align 8, !tbaa !26
  %38 = getelementptr inbounds %struct.xpviv, ptr %37, i64 0, i32 4
  %39 = load i64, ptr %38, align 8, !tbaa !24
  br label %42

40:                                               ; preds = %29
  %41 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %31, i32 noundef 0) #13
  br label %42

42:                                               ; preds = %40, %36
  %43 = phi i64 [ %39, %36 ], [ %41, %40 ]
  %44 = icmp sgt i64 %43, %30
  %45 = select i1 %44, ptr @PL_sv_no, ptr @PL_sv_yes
  store ptr %45, ptr %2, align 8, !tbaa !5
  store ptr %2, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %46

46:                                               ; preds = %12, %42
  %47 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %48 = load ptr, ptr %47, align 8, !tbaa !13
  ret ptr %48
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_i_ge() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = load ptr, ptr %1, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = or i32 %8, %5
  %10 = and i32 %9, 2099200
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %0
  %13 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 20, i32 noundef 32) #13
  br i1 %13, label %46, label %14

14:                                               ; preds = %12
  %15 = load ptr, ptr %1, align 8, !tbaa !5
  %16 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 2
  %17 = load i32, ptr %16, align 4, !tbaa !16
  br label %18

18:                                               ; preds = %14, %0
  %19 = phi i32 [ %17, %14 ], [ %8, %0 ]
  %20 = phi ptr [ %15, %14 ], [ %6, %0 ]
  %21 = and i32 %19, 256
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = load ptr, ptr %20, align 8, !tbaa !26
  %25 = getelementptr inbounds %struct.xpviv, ptr %24, i64 0, i32 4
  %26 = load i64, ptr %25, align 8, !tbaa !24
  br label %29

27:                                               ; preds = %18
  %28 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %20, i32 noundef 0) #13
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi i64 [ %26, %23 ], [ %28, %27 ]
  %31 = load ptr, ptr %2, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.sv, ptr %31, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  %34 = and i32 %33, 256
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %29
  %37 = load ptr, ptr %31, align 8, !tbaa !26
  %38 = getelementptr inbounds %struct.xpviv, ptr %37, i64 0, i32 4
  %39 = load i64, ptr %38, align 8, !tbaa !24
  br label %42

40:                                               ; preds = %29
  %41 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %31, i32 noundef 0) #13
  br label %42

42:                                               ; preds = %40, %36
  %43 = phi i64 [ %39, %36 ], [ %41, %40 ]
  %44 = icmp slt i64 %43, %30
  %45 = select i1 %44, ptr @PL_sv_no, ptr @PL_sv_yes
  store ptr %45, ptr %2, align 8, !tbaa !5
  store ptr %2, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %46

46:                                               ; preds = %12, %42
  %47 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %48 = load ptr, ptr %47, align 8, !tbaa !13
  ret ptr %48
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_i_eq() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = load ptr, ptr %1, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = or i32 %8, %5
  %10 = and i32 %9, 2099200
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %0
  %13 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 21, i32 noundef 32) #13
  br i1 %13, label %46, label %14

14:                                               ; preds = %12
  %15 = load ptr, ptr %1, align 8, !tbaa !5
  %16 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 2
  %17 = load i32, ptr %16, align 4, !tbaa !16
  br label %18

18:                                               ; preds = %14, %0
  %19 = phi i32 [ %17, %14 ], [ %8, %0 ]
  %20 = phi ptr [ %15, %14 ], [ %6, %0 ]
  %21 = and i32 %19, 256
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = load ptr, ptr %20, align 8, !tbaa !26
  %25 = getelementptr inbounds %struct.xpviv, ptr %24, i64 0, i32 4
  %26 = load i64, ptr %25, align 8, !tbaa !24
  br label %29

27:                                               ; preds = %18
  %28 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %20, i32 noundef 0) #13
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi i64 [ %26, %23 ], [ %28, %27 ]
  %31 = load ptr, ptr %2, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.sv, ptr %31, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  %34 = and i32 %33, 256
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %29
  %37 = load ptr, ptr %31, align 8, !tbaa !26
  %38 = getelementptr inbounds %struct.xpviv, ptr %37, i64 0, i32 4
  %39 = load i64, ptr %38, align 8, !tbaa !24
  br label %42

40:                                               ; preds = %29
  %41 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %31, i32 noundef 0) #13
  br label %42

42:                                               ; preds = %40, %36
  %43 = phi i64 [ %39, %36 ], [ %41, %40 ]
  %44 = icmp eq i64 %43, %30
  %45 = select i1 %44, ptr @PL_sv_yes, ptr @PL_sv_no
  store ptr %45, ptr %2, align 8, !tbaa !5
  store ptr %2, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %46

46:                                               ; preds = %12, %42
  %47 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %48 = load ptr, ptr %47, align 8, !tbaa !13
  ret ptr %48
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_i_ne() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = load ptr, ptr %1, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = or i32 %8, %5
  %10 = and i32 %9, 2099200
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %0
  %13 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 22, i32 noundef 32) #13
  br i1 %13, label %46, label %14

14:                                               ; preds = %12
  %15 = load ptr, ptr %1, align 8, !tbaa !5
  %16 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 2
  %17 = load i32, ptr %16, align 4, !tbaa !16
  br label %18

18:                                               ; preds = %14, %0
  %19 = phi i32 [ %17, %14 ], [ %8, %0 ]
  %20 = phi ptr [ %15, %14 ], [ %6, %0 ]
  %21 = and i32 %19, 256
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = load ptr, ptr %20, align 8, !tbaa !26
  %25 = getelementptr inbounds %struct.xpviv, ptr %24, i64 0, i32 4
  %26 = load i64, ptr %25, align 8, !tbaa !24
  br label %29

27:                                               ; preds = %18
  %28 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %20, i32 noundef 0) #13
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi i64 [ %26, %23 ], [ %28, %27 ]
  %31 = load ptr, ptr %2, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.sv, ptr %31, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  %34 = and i32 %33, 256
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %29
  %37 = load ptr, ptr %31, align 8, !tbaa !26
  %38 = getelementptr inbounds %struct.xpviv, ptr %37, i64 0, i32 4
  %39 = load i64, ptr %38, align 8, !tbaa !24
  br label %42

40:                                               ; preds = %29
  %41 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %31, i32 noundef 0) #13
  br label %42

42:                                               ; preds = %40, %36
  %43 = phi i64 [ %39, %36 ], [ %41, %40 ]
  %44 = icmp eq i64 %43, %30
  %45 = select i1 %44, ptr @PL_sv_no, ptr @PL_sv_yes
  store ptr %45, ptr %2, align 8, !tbaa !5
  store ptr %2, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %46

46:                                               ; preds = %12, %42
  %47 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %48 = load ptr, ptr %47, align 8, !tbaa !13
  ret ptr %48
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_i_ncmp() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %5 = load i64, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  %9 = load ptr, ptr %8, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.sv, ptr %9, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !16
  %12 = load ptr, ptr %1, align 8, !tbaa !5
  %13 = getelementptr inbounds %struct.sv, ptr %12, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !16
  %15 = or i32 %14, %11
  %16 = and i32 %15, 2099200
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %0
  %19 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 58, i32 noundef 0) #13
  br i1 %19, label %61, label %20

20:                                               ; preds = %18
  %21 = load ptr, ptr %1, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  br label %24

24:                                               ; preds = %20, %0
  %25 = phi i32 [ %23, %20 ], [ %14, %0 ]
  %26 = phi ptr [ %21, %20 ], [ %12, %0 ]
  %27 = and i32 %25, 256
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %24
  %30 = load ptr, ptr %26, align 8, !tbaa !26
  %31 = getelementptr inbounds %struct.xpviv, ptr %30, i64 0, i32 4
  %32 = load i64, ptr %31, align 8, !tbaa !24
  br label %35

33:                                               ; preds = %24
  %34 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %26, i32 noundef 0) #13
  br label %35

35:                                               ; preds = %33, %29
  %36 = phi i64 [ %32, %29 ], [ %34, %33 ]
  %37 = load ptr, ptr %8, align 8, !tbaa !5
  %38 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 2
  %39 = load i32, ptr %38, align 4, !tbaa !16
  %40 = and i32 %39, 256
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %35
  %43 = load ptr, ptr %37, align 8, !tbaa !26
  %44 = getelementptr inbounds %struct.xpviv, ptr %43, i64 0, i32 4
  %45 = load i64, ptr %44, align 8, !tbaa !24
  br label %48

46:                                               ; preds = %35
  %47 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi i64 [ %45, %42 ], [ %47, %46 ]
  %50 = icmp sgt i64 %49, %36
  %51 = icmp slt i64 %49, %36
  %52 = sext i1 %51 to i64
  %53 = select i1 %50, i64 1, i64 %52
  tail call void @Perl_sv_setiv(ptr noundef %7, i64 noundef %53) #13
  %54 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %55 = load i32, ptr %54, align 4, !tbaa !16
  %56 = and i32 %55, 4194304
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %48
  %59 = tail call i32 @Perl_mg_set(ptr noundef nonnull %7) #13
  br label %60

60:                                               ; preds = %48, %58
  store ptr %7, ptr %8, align 8, !tbaa !5
  store ptr %8, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %61

61:                                               ; preds = %18, %60
  %62 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %63 = load ptr, ptr %62, align 8, !tbaa !13
  ret ptr %63
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_i_negate() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %5 = load i64, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = load ptr, ptr %1, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !16
  %11 = and i32 %10, 2099200
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %0
  %14 = tail call zeroext i1 @Perl_try_amagic_un(i32 noundef 14, i32 noundef 0) #13
  br i1 %14, label %39, label %15

15:                                               ; preds = %0, %13
  %16 = tail call fastcc zeroext i1 @S_negate_string()
  br i1 %16, label %39, label %17

17:                                               ; preds = %15
  %18 = load ptr, ptr %1, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = and i32 %20, 256
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %17
  %24 = load ptr, ptr %18, align 8, !tbaa !26
  %25 = getelementptr inbounds %struct.xpviv, ptr %24, i64 0, i32 4
  %26 = load i64, ptr %25, align 8, !tbaa !24
  br label %29

27:                                               ; preds = %17
  %28 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %18, i32 noundef 0) #13
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi i64 [ %26, %23 ], [ %28, %27 ]
  %31 = sub nsw i64 0, %30
  tail call void @Perl_sv_setiv(ptr noundef %7, i64 noundef %31) #13
  %32 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  %34 = and i32 %33, 4194304
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %29
  %37 = tail call i32 @Perl_mg_set(ptr noundef nonnull %7) #13
  br label %38

38:                                               ; preds = %29, %36
  store ptr %7, ptr %1, align 8, !tbaa !5
  br label %39

39:                                               ; preds = %15, %13, %38
  %40 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %41 = load ptr, ptr %40, align 8, !tbaa !13
  ret ptr %41
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_atan2() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %5 = load i64, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  %9 = load ptr, ptr %8, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.sv, ptr %9, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !16
  %12 = load ptr, ptr %1, align 8, !tbaa !5
  %13 = getelementptr inbounds %struct.sv, ptr %12, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !16
  %15 = or i32 %14, %11
  %16 = and i32 %15, 2099200
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %0
  %19 = tail call zeroext i1 @Perl_try_amagic_bin(i32 noundef 62, i32 noundef 0) #13
  br i1 %19, label %58, label %20

20:                                               ; preds = %18
  %21 = load ptr, ptr %1, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  br label %24

24:                                               ; preds = %20, %0
  %25 = phi i32 [ %23, %20 ], [ %14, %0 ]
  %26 = phi ptr [ %21, %20 ], [ %12, %0 ]
  %27 = and i32 %25, 512
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %24
  %30 = load ptr, ptr %26, align 8, !tbaa !26
  %31 = getelementptr inbounds %struct.xpvnv, ptr %30, i64 0, i32 5
  %32 = load double, ptr %31, align 8, !tbaa !24
  br label %35

33:                                               ; preds = %24
  %34 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %26, i32 noundef 0) #13
  br label %35

35:                                               ; preds = %33, %29
  %36 = phi fast double [ %32, %29 ], [ %34, %33 ]
  %37 = load ptr, ptr %8, align 8, !tbaa !5
  %38 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 2
  %39 = load i32, ptr %38, align 4, !tbaa !16
  %40 = and i32 %39, 512
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %35
  %43 = load ptr, ptr %37, align 8, !tbaa !26
  %44 = getelementptr inbounds %struct.xpvnv, ptr %43, i64 0, i32 5
  %45 = load double, ptr %44, align 8, !tbaa !24
  br label %48

46:                                               ; preds = %35
  %47 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi fast double [ %45, %42 ], [ %47, %46 ]
  %50 = tail call fast nofpclass(nan inf) double @atan2(double noundef nofpclass(nan inf) %49, double noundef nofpclass(nan inf) %36) #15
  tail call void @Perl_sv_setnv(ptr noundef %7, double noundef nofpclass(nan inf) %50) #13
  %51 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %52 = load i32, ptr %51, align 4, !tbaa !16
  %53 = and i32 %52, 4194304
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %48
  %56 = tail call i32 @Perl_mg_set(ptr noundef nonnull %7) #13
  br label %57

57:                                               ; preds = %48, %55
  store ptr %7, ptr %8, align 8, !tbaa !5
  store ptr %8, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %58

58:                                               ; preds = %18, %57
  %59 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %60 = load ptr, ptr %59, align 8, !tbaa !13
  ret ptr %60
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare nofpclass(nan inf) double @atan2(double noundef nofpclass(nan inf), double noundef nofpclass(nan inf)) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_sin() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %5 = load i64, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 4
  %9 = load i16, ptr %8, align 8
  %10 = and i16 %9, 511
  %11 = zext i16 %10 to i32
  switch i32 %11, label %17 [
    i32 109, label %12
    i32 110, label %13
    i32 113, label %14
    i32 114, label %15
    i32 115, label %16
  ]

12:                                               ; preds = %0
  br label %17

13:                                               ; preds = %0
  br label %17

14:                                               ; preds = %0
  br label %17

15:                                               ; preds = %0
  br label %17

16:                                               ; preds = %0
  br label %17

17:                                               ; preds = %12, %13, %14, %15, %16, %0
  %18 = phi i1 [ true, %0 ], [ false, %16 ], [ false, %15 ], [ true, %14 ], [ true, %13 ], [ true, %12 ]
  %19 = phi ptr [ null, %0 ], [ @.str.33, %16 ], [ @.str.32, %15 ], [ null, %14 ], [ null, %13 ], [ null, %12 ]
  %20 = phi i32 [ 0, %0 ], [ 67, %16 ], [ 66, %15 ], [ 65, %14 ], [ 63, %13 ], [ 64, %12 ]
  %21 = load ptr, ptr %1, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !16
  %24 = and i32 %23, 2099200
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %35, label %26

26:                                               ; preds = %17
  %27 = tail call zeroext i1 @Perl_try_amagic_un(i32 noundef %20, i32 noundef 0) #13
  br i1 %27, label %32, label %28

28:                                               ; preds = %26
  %29 = load ptr, ptr %1, align 8, !tbaa !5
  %30 = getelementptr inbounds %struct.sv, ptr %29, i64 0, i32 2
  %31 = load i32, ptr %30, align 4, !tbaa !16
  br label %35

32:                                               ; preds = %26
  %33 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %34 = load ptr, ptr %33, align 8, !tbaa !13
  br label %78

35:                                               ; preds = %28, %17
  %36 = phi i32 [ %31, %28 ], [ %23, %17 ]
  %37 = phi ptr [ %29, %28 ], [ %21, %17 ]
  %38 = and i32 %36, 512
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %35
  %41 = load ptr, ptr %37, align 8, !tbaa !26
  %42 = getelementptr inbounds %struct.xpvnv, ptr %41, i64 0, i32 5
  %43 = load double, ptr %42, align 8, !tbaa !24
  br label %46

44:                                               ; preds = %35
  %45 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  br label %46

46:                                               ; preds = %44, %40
  %47 = phi fast double [ %43, %40 ], [ %45, %44 ]
  br i1 %18, label %56, label %48

48:                                               ; preds = %46
  %49 = icmp eq i16 %10, 114
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  %51 = fcmp fast ugt double %47, 0.000000e+00
  br i1 %51, label %63, label %54

52:                                               ; preds = %48
  %53 = fcmp fast olt double %47, 0.000000e+00
  br i1 %53, label %54, label %56

54:                                               ; preds = %52, %50
  %55 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.34, ptr noundef %19, double noundef nofpclass(nan inf) %47) #13
  br label %78

56:                                               ; preds = %52, %46
  switch i32 %11, label %57 [
    i32 115, label %65
    i32 110, label %59
    i32 113, label %61
    i32 114, label %63
  ]

57:                                               ; preds = %56
  %58 = tail call fast double @llvm.sin.f64(double %47)
  br label %67

59:                                               ; preds = %56
  %60 = tail call fast double @llvm.cos.f64(double %47)
  br label %67

61:                                               ; preds = %56
  %62 = tail call fast double @llvm.exp.f64(double %47)
  br label %67

63:                                               ; preds = %50, %56
  %64 = tail call fast double @llvm.log.f64(double %47)
  br label %67

65:                                               ; preds = %56
  %66 = tail call fast double @llvm.sqrt.f64(double %47)
  br label %67

67:                                               ; preds = %57, %59, %61, %63, %65
  %68 = phi double [ %58, %57 ], [ %64, %63 ], [ %62, %61 ], [ %60, %59 ], [ %66, %65 ]
  tail call void @Perl_sv_setnv(ptr noundef %7, double noundef nofpclass(nan inf) %68) #13
  %69 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %70 = load i32, ptr %69, align 4, !tbaa !16
  %71 = and i32 %70, 4194304
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %67
  %74 = tail call i32 @Perl_mg_set(ptr noundef nonnull %7) #13
  br label %75

75:                                               ; preds = %67, %73
  store ptr %7, ptr %1, align 8, !tbaa !5
  %76 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %77 = load ptr, ptr %76, align 8, !tbaa !13
  br label %78

78:                                               ; preds = %54, %75, %32
  %79 = phi ptr [ %34, %32 ], [ %55, %54 ], [ %77, %75 ]
  ret ptr %79
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.sin.f64(double) #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.cos.f64(double) #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.exp.f64(double) #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.log.f64(double) #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.sqrt.f64(double) #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_rand() local_unnamed_addr #0 {
  %1 = load i8, ptr @PL_srand_called, align 1, !tbaa !81, !range !83, !noundef !84
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %6

3:                                                ; preds = %0
  %4 = tail call i32 @Perl_seed() #13
  %5 = zext i32 %4 to i64
  tail call void @spec_init_genrand(i64 noundef %5) #13
  store i8 1, ptr @PL_srand_called, align 1, !tbaa !81
  br label %6

6:                                                ; preds = %3, %0
  %7 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %8 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.op, ptr %8, i64 0, i32 6
  %10 = load i8, ptr %9, align 1, !tbaa !15
  %11 = and i8 %10, 15
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %21

13:                                               ; preds = %6
  %14 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %15 = ptrtoint ptr %14 to i64
  %16 = ptrtoint ptr %7 to i64
  %17 = sub i64 %15, %16
  %18 = icmp slt i64 %17, 8
  br i1 %18, label %19, label %36

19:                                               ; preds = %13
  %20 = tail call ptr @Perl_stack_grow(ptr noundef %7, ptr noundef %7, i64 noundef 1) #13
  br label %36

21:                                               ; preds = %6
  %22 = getelementptr inbounds ptr, ptr %7, i64 -1
  %23 = load ptr, ptr %7, align 8, !tbaa !5
  %24 = icmp eq ptr %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.sv, ptr %23, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !16
  %28 = and i32 %27, 2097664
  %29 = icmp eq i32 %28, 512
  br i1 %29, label %30, label %34

30:                                               ; preds = %25
  %31 = load ptr, ptr %23, align 8, !tbaa !26
  %32 = getelementptr inbounds %struct.xpvnv, ptr %31, i64 0, i32 5
  %33 = load double, ptr %32, align 8, !tbaa !24
  br label %36

34:                                               ; preds = %25
  %35 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %23, i32 noundef 2) #13
  br label %36

36:                                               ; preds = %21, %34, %30, %19, %13
  %37 = phi double [ 1.000000e+00, %13 ], [ 1.000000e+00, %19 ], [ 1.000000e+00, %21 ], [ %33, %30 ], [ %35, %34 ]
  %38 = phi ptr [ %7, %13 ], [ %20, %19 ], [ %22, %21 ], [ %22, %30 ], [ %22, %34 ]
  %39 = fcmp fast oeq double %37, 0.000000e+00
  %40 = select i1 %39, double 1.000000e+00, double %37
  %41 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %42 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %43 = getelementptr inbounds %struct.op, ptr %42, i64 0, i32 3
  %44 = load i64, ptr %43, align 8, !tbaa !14
  %45 = getelementptr inbounds ptr, ptr %41, i64 %44
  %46 = load ptr, ptr %45, align 8, !tbaa !5
  %47 = getelementptr inbounds ptr, ptr %38, i64 1
  store ptr %46, ptr %47, align 8, !tbaa !5
  store ptr %47, ptr @PL_stack_sp, align 8, !tbaa !5
  %48 = tail call fast nofpclass(nan inf) double @spec_rand() #13
  %49 = fmul fast double %48, %40
  tail call void @Perl_sv_setnv_mg(ptr noundef %46, double noundef nofpclass(nan inf) %49) #13
  %50 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %51 = load ptr, ptr %50, align 8, !tbaa !13
  ret ptr %51
}

declare void @spec_init_genrand(i64 noundef) local_unnamed_addr #2

declare i32 @Perl_seed() local_unnamed_addr #2

declare nofpclass(nan inf) double @spec_rand() local_unnamed_addr #2

declare void @Perl_sv_setnv_mg(ptr noundef, double noundef nofpclass(nan inf)) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_srand() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %4 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %5 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %6 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 3
  %7 = load i64, ptr %6, align 8, !tbaa !14
  %8 = getelementptr inbounds ptr, ptr %4, i64 %7
  %9 = load ptr, ptr %8, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  %10 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 6
  %11 = load i8, ptr %10, align 1, !tbaa !15
  %12 = and i8 %11, 15
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %45, label %14

14:                                               ; preds = %0
  %15 = load ptr, ptr %3, align 8, !tbaa !5
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = getelementptr inbounds ptr, ptr %3, i64 -1
  br label %45

19:                                               ; preds = %14
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #13
  %20 = getelementptr inbounds ptr, ptr %3, i64 -1
  %21 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 2
  %22 = load i32, ptr %21, align 4, !tbaa !16
  %23 = and i32 %22, 2098176
  %24 = icmp eq i32 %23, 1024
  br i1 %24, label %25, label %31

25:                                               ; preds = %19
  %26 = load ptr, ptr %15, align 8, !tbaa !26
  %27 = getelementptr inbounds %struct.xpv, ptr %26, i64 0, i32 2
  %28 = load i64, ptr %27, align 8, !tbaa !55
  store i64 %28, ptr %2, align 8, !tbaa !71
  %29 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 3
  %30 = load ptr, ptr %29, align 8, !tbaa !24
  br label %34

31:                                               ; preds = %19
  %32 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %15, ptr noundef nonnull %2, i32 noundef 2) #13
  %33 = load i64, ptr %2, align 8, !tbaa !71
  br label %34

34:                                               ; preds = %31, %25
  %35 = phi i64 [ %28, %25 ], [ %33, %31 ]
  %36 = phi ptr [ %30, %25 ], [ %32, %31 ]
  %37 = call i32 @Perl_grok_number(ptr noundef %36, i64 noundef %35, ptr noundef nonnull %1) #13
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = load i64, ptr %1, align 8, !tbaa !71
  br label %43

42:                                               ; preds = %34
  call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 15, ptr noundef nonnull @.str.35) #13
  store i64 -1, ptr %1, align 8, !tbaa !71
  br label %43

43:                                               ; preds = %40, %42
  %44 = phi i64 [ %41, %40 ], [ -1, %42 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #13
  br label %49

45:                                               ; preds = %17, %0
  %46 = phi ptr [ %18, %17 ], [ %3, %0 ]
  %47 = tail call i32 @Perl_seed() #13
  %48 = zext i32 %47 to i64
  store i64 %48, ptr %1, align 8, !tbaa !71
  br label %49

49:                                               ; preds = %45, %43
  %50 = phi i64 [ %44, %43 ], [ %48, %45 ]
  %51 = phi ptr [ %20, %43 ], [ %46, %45 ]
  call void @spec_init_genrand(i64 noundef %50) #13
  store i8 1, ptr @PL_srand_called, align 1, !tbaa !81
  %52 = load i64, ptr %1, align 8, !tbaa !71
  %53 = icmp eq i64 %52, 0
  %54 = getelementptr inbounds %struct.sv, ptr %9, i64 0, i32 2
  br i1 %53, label %67, label %55

55:                                               ; preds = %49
  call void @Perl_sv_setuv(ptr noundef %9, i64 noundef %52) #13
  %56 = load i32, ptr %54, align 4, !tbaa !16
  %57 = and i32 %56, 4194304
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = call i32 @Perl_mg_set(ptr noundef nonnull %9) #13
  br label %61

61:                                               ; preds = %55, %59
  %62 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %63 = ptrtoint ptr %62 to i64
  %64 = ptrtoint ptr %51 to i64
  %65 = sub i64 %63, %64
  %66 = icmp slt i64 %65, 8
  br i1 %66, label %79, label %81

67:                                               ; preds = %49
  call void @Perl_sv_setpvn(ptr noundef %9, ptr noundef nonnull @.str.36, i64 noundef 10) #13
  %68 = load i32, ptr %54, align 4, !tbaa !16
  %69 = and i32 %68, 4194304
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = call i32 @Perl_mg_set(ptr noundef nonnull %9) #13
  br label %73

73:                                               ; preds = %67, %71
  %74 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %75 = ptrtoint ptr %74 to i64
  %76 = ptrtoint ptr %51 to i64
  %77 = sub i64 %75, %76
  %78 = icmp slt i64 %77, 8
  br i1 %78, label %79, label %81

79:                                               ; preds = %73, %61
  %80 = call ptr @Perl_stack_grow(ptr noundef %51, ptr noundef %51, i64 noundef 1) #13
  br label %81

81:                                               ; preds = %79, %73, %61
  %82 = phi ptr [ %51, %61 ], [ %51, %73 ], [ %80, %79 ]
  %83 = getelementptr inbounds ptr, ptr %82, i64 1
  store ptr %9, ptr %83, align 8, !tbaa !5
  store ptr %83, ptr @PL_stack_sp, align 8, !tbaa !5
  %84 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %85 = load ptr, ptr %84, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  ret ptr %85
}

declare i32 @Perl_grok_number(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #2

declare void @Perl_sv_setpvn(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_int() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %5 = load i64, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = load ptr, ptr %1, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !16
  %11 = and i32 %10, 2099200
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %0
  %14 = tail call zeroext i1 @Perl_try_amagic_un(i32 noundef 16, i32 noundef 16) #13
  br i1 %14, label %112, label %15

15:                                               ; preds = %13
  %16 = load ptr, ptr %1, align 8, !tbaa !5
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !16
  br label %19

19:                                               ; preds = %15, %0
  %20 = phi i32 [ %18, %15 ], [ %10, %0 ]
  %21 = phi ptr [ %16, %15 ], [ %8, %0 ]
  %22 = and i32 %20, 256
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = load ptr, ptr %21, align 8, !tbaa !26
  %26 = getelementptr inbounds %struct.xpviv, ptr %25, i64 0, i32 4
  %27 = load i64, ptr %26, align 8, !tbaa !24
  br label %32

28:                                               ; preds = %19
  %29 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %30 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %21, i32 noundef 0) #13
  %31 = load i32, ptr %29, align 4, !tbaa !16
  br label %32

32:                                               ; preds = %28, %24
  %33 = phi i32 [ %20, %24 ], [ %31, %28 ]
  %34 = phi i64 [ %27, %24 ], [ %30, %28 ]
  %35 = and i32 %33, 65280
  %36 = icmp ne i32 %35, 0
  %37 = and i32 %33, 255
  %38 = icmp eq i32 %37, 8
  %39 = or i1 %36, %38
  %40 = and i32 %33, 16826623
  %41 = icmp eq i32 %40, 16777226
  %42 = or i1 %41, %39
  br i1 %42, label %48, label %43

43:                                               ; preds = %32
  tail call void @Perl_sv_setuv(ptr noundef %7, i64 noundef 0) #13
  %44 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %45 = load i32, ptr %44, align 4, !tbaa !16
  %46 = and i32 %45, 4194304
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %111, label %109

48:                                               ; preds = %32
  %49 = and i32 %33, 256
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %66, label %51

51:                                               ; preds = %48
  %52 = icmp sgt i32 %33, -1
  br i1 %52, label %61, label %53

53:                                               ; preds = %51
  %54 = load ptr, ptr %21, align 8, !tbaa !26
  %55 = getelementptr inbounds %struct.xpvuv, ptr %54, i64 0, i32 4
  %56 = load i64, ptr %55, align 8, !tbaa !24
  tail call void @Perl_sv_setuv(ptr noundef %7, i64 noundef %56) #13
  %57 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %58 = load i32, ptr %57, align 4, !tbaa !16
  %59 = and i32 %58, 4194304
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %111, label %109

61:                                               ; preds = %51
  tail call void @Perl_sv_setiv(ptr noundef %7, i64 noundef %34) #13
  %62 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %63 = load i32, ptr %62, align 4, !tbaa !16
  %64 = and i32 %63, 4194304
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %111, label %109

66:                                               ; preds = %48
  %67 = and i32 %33, 512
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %66
  %70 = load ptr, ptr %21, align 8, !tbaa !26
  %71 = getelementptr inbounds %struct.xpvnv, ptr %70, i64 0, i32 5
  %72 = load double, ptr %71, align 8, !tbaa !24
  br label %75

73:                                               ; preds = %66
  %74 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %21, i32 noundef 0) #13
  br label %75

75:                                               ; preds = %73, %69
  %76 = phi fast double [ %72, %69 ], [ %74, %73 ]
  %77 = tail call zeroext i1 @Perl_isinfnan(double noundef nofpclass(nan inf) %76) #13
  %78 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  br i1 %77, label %79, label %83

79:                                               ; preds = %75
  tail call void @Perl_sv_setnv(ptr noundef %7, double noundef nofpclass(nan inf) %76) #13
  %80 = load i32, ptr %78, align 4, !tbaa !16
  %81 = and i32 %80, 4194304
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %111, label %109

83:                                               ; preds = %75
  %84 = fcmp fast ult double %76, 0.000000e+00
  br i1 %84, label %97, label %85

85:                                               ; preds = %83
  %86 = fcmp fast olt double %76, 0x43F0000000000000
  br i1 %86, label %87, label %92

87:                                               ; preds = %85
  %88 = tail call i64 @Perl_cast_uv(double noundef nofpclass(nan inf) %76) #13
  tail call void @Perl_sv_setuv(ptr noundef %7, i64 noundef %88) #13
  %89 = load i32, ptr %78, align 4, !tbaa !16
  %90 = and i32 %89, 4194304
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %111, label %109

92:                                               ; preds = %85
  %93 = tail call fast double @llvm.floor.f64(double %76)
  tail call void @Perl_sv_setnv(ptr noundef %7, double noundef nofpclass(nan inf) %93) #13
  %94 = load i32, ptr %78, align 4, !tbaa !16
  %95 = and i32 %94, 4194304
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %111, label %109

97:                                               ; preds = %83
  %98 = fcmp fast ogt double %76, 0xC3E0000000000000
  br i1 %98, label %99, label %104

99:                                               ; preds = %97
  %100 = tail call i64 @Perl_cast_iv(double noundef nofpclass(nan inf) %76) #13
  tail call void @Perl_sv_setiv(ptr noundef %7, i64 noundef %100) #13
  %101 = load i32, ptr %78, align 4, !tbaa !16
  %102 = and i32 %101, 4194304
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %111, label %109

104:                                              ; preds = %97
  %105 = tail call fast double @llvm.ceil.f64(double %76)
  tail call void @Perl_sv_setnv(ptr noundef %7, double noundef nofpclass(nan inf) %105) #13
  %106 = load i32, ptr %78, align 4, !tbaa !16
  %107 = and i32 %106, 4194304
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %104, %99, %92, %87, %79, %61, %53, %43
  %110 = tail call i32 @Perl_mg_set(ptr noundef nonnull %7) #13
  br label %111

111:                                              ; preds = %109, %104, %99, %92, %87, %79, %61, %53, %43
  store ptr %7, ptr %1, align 8, !tbaa !5
  br label %112

112:                                              ; preds = %111, %13
  %113 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %114 = load ptr, ptr %113, align 8, !tbaa !13
  ret ptr %114
}

declare i64 @Perl_cast_iv(double noundef nofpclass(nan inf)) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.ceil.f64(double) #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_abs() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %5 = load i64, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = load ptr, ptr %1, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !16
  %11 = and i32 %10, 2099200
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %0
  %14 = tail call zeroext i1 @Perl_try_amagic_un(i32 noundef 13, i32 noundef 16) #13
  br i1 %14, label %107, label %15

15:                                               ; preds = %13
  %16 = load ptr, ptr %1, align 8, !tbaa !5
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !16
  br label %19

19:                                               ; preds = %15, %0
  %20 = phi i32 [ %18, %15 ], [ %10, %0 ]
  %21 = phi ptr [ %16, %15 ], [ %8, %0 ]
  %22 = and i32 %20, 256
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = load ptr, ptr %21, align 8, !tbaa !26
  %26 = getelementptr inbounds %struct.xpviv, ptr %25, i64 0, i32 4
  %27 = load i64, ptr %26, align 8, !tbaa !24
  br label %32

28:                                               ; preds = %19
  %29 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %30 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %21, i32 noundef 0) #13
  %31 = load i32, ptr %29, align 4, !tbaa !16
  br label %32

32:                                               ; preds = %28, %24
  %33 = phi i32 [ %20, %24 ], [ %31, %28 ]
  %34 = phi i64 [ %27, %24 ], [ %30, %28 ]
  %35 = and i32 %33, 65280
  %36 = icmp ne i32 %35, 0
  %37 = and i32 %33, 255
  %38 = icmp eq i32 %37, 8
  %39 = or i1 %36, %38
  %40 = and i32 %33, 16826623
  %41 = icmp eq i32 %40, 16777226
  %42 = or i1 %41, %39
  br i1 %42, label %48, label %43

43:                                               ; preds = %32
  tail call void @Perl_sv_setuv(ptr noundef %7, i64 noundef 0) #13
  %44 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %45 = load i32, ptr %44, align 4, !tbaa !16
  %46 = and i32 %45, 4194304
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %106, label %104

48:                                               ; preds = %32
  %49 = and i32 %33, 256
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %81, label %51

51:                                               ; preds = %48
  %52 = icmp sgt i32 %33, -1
  br i1 %52, label %61, label %53

53:                                               ; preds = %51
  %54 = load ptr, ptr %21, align 8, !tbaa !26
  %55 = getelementptr inbounds %struct.xpvuv, ptr %54, i64 0, i32 4
  %56 = load i64, ptr %55, align 8, !tbaa !24
  tail call void @Perl_sv_setuv(ptr noundef %7, i64 noundef %56) #13
  %57 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %58 = load i32, ptr %57, align 4, !tbaa !16
  %59 = and i32 %58, 4194304
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %106, label %104

61:                                               ; preds = %51
  %62 = icmp sgt i64 %34, -1
  br i1 %62, label %63, label %68

63:                                               ; preds = %61
  tail call void @Perl_sv_setiv(ptr noundef %7, i64 noundef %34) #13
  %64 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %65 = load i32, ptr %64, align 4, !tbaa !16
  %66 = and i32 %65, 4194304
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %106, label %104

68:                                               ; preds = %61
  %69 = icmp eq i64 %34, -9223372036854775808
  br i1 %69, label %76, label %70

70:                                               ; preds = %68
  %71 = sub nsw i64 0, %34
  tail call void @Perl_sv_setiv(ptr noundef %7, i64 noundef %71) #13
  %72 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %73 = load i32, ptr %72, align 4, !tbaa !16
  %74 = and i32 %73, 4194304
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %106, label %104

76:                                               ; preds = %68
  tail call void @Perl_sv_setuv(ptr noundef %7, i64 noundef -9223372036854775808) #13
  %77 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %78 = load i32, ptr %77, align 4, !tbaa !16
  %79 = and i32 %78, 4194304
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %106, label %104

81:                                               ; preds = %48
  %82 = and i32 %33, 512
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %88, label %84

84:                                               ; preds = %81
  %85 = load ptr, ptr %21, align 8, !tbaa !26
  %86 = getelementptr inbounds %struct.xpvnv, ptr %85, i64 0, i32 5
  %87 = load double, ptr %86, align 8, !tbaa !24
  br label %90

88:                                               ; preds = %81
  %89 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %21, i32 noundef 0) #13
  br label %90

90:                                               ; preds = %88, %84
  %91 = phi fast double [ %87, %84 ], [ %89, %88 ]
  %92 = fcmp fast olt double %91, 0.000000e+00
  br i1 %92, label %93, label %99

93:                                               ; preds = %90
  %94 = fneg fast double %91
  tail call void @Perl_sv_setnv(ptr noundef %7, double noundef nofpclass(nan inf) %94) #13
  %95 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %96 = load i32, ptr %95, align 4, !tbaa !16
  %97 = and i32 %96, 4194304
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %106, label %104

99:                                               ; preds = %90
  tail call void @Perl_sv_setnv(ptr noundef %7, double noundef nofpclass(nan inf) %91) #13
  %100 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %101 = load i32, ptr %100, align 4, !tbaa !16
  %102 = and i32 %101, 4194304
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %93, %99, %76, %70, %63, %53, %43
  %105 = tail call i32 @Perl_mg_set(ptr noundef nonnull %7) #13
  br label %106

106:                                              ; preds = %104, %93, %99, %76, %70, %63, %53, %43
  store ptr %7, ptr %1, align 8, !tbaa !5
  br label %107

107:                                              ; preds = %106, %13
  %108 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %109 = load ptr, ptr %108, align 8, !tbaa !13
  ret ptr %109
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_oct() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca double, align 8
  %4 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %5 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %6 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 3
  %8 = load i64, ptr %7, align 8, !tbaa !14
  %9 = getelementptr inbounds ptr, ptr %5, i64 %8
  %10 = load ptr, ptr %9, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %1) #13
  store i32 1, ptr %1, align 4, !tbaa !57
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #13
  %11 = load ptr, ptr %4, align 8, !tbaa !5
  %12 = getelementptr inbounds %struct.sv, ptr %11, i64 0, i32 2
  %13 = load i32, ptr %12, align 4, !tbaa !16
  %14 = and i32 %13, 2098176
  %15 = icmp eq i32 %14, 1024
  br i1 %15, label %16, label %22

16:                                               ; preds = %0
  %17 = load ptr, ptr %11, align 8, !tbaa !26
  %18 = getelementptr inbounds %struct.xpv, ptr %17, i64 0, i32 2
  %19 = load i64, ptr %18, align 8, !tbaa !55
  store i64 %19, ptr %2, align 8, !tbaa !71
  %20 = getelementptr inbounds %struct.sv, ptr %11, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !24
  br label %25

22:                                               ; preds = %0
  %23 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %11, ptr noundef nonnull %2, i32 noundef 34) #13
  %24 = load i32, ptr %12, align 4, !tbaa !16
  br label %25

25:                                               ; preds = %22, %16
  %26 = phi i32 [ %13, %16 ], [ %24, %22 ]
  %27 = phi ptr [ %21, %16 ], [ %23, %22 ]
  %28 = and i32 %26, 536870912
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %54, label %30

30:                                               ; preds = %25
  %31 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.cop, ptr %31, i64 0, i32 10
  %33 = load i32, ptr %32, align 8, !tbaa !66
  %34 = and i32 %33, 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %54

36:                                               ; preds = %30
  %37 = call ptr @Perl_newSVsv(ptr noundef nonnull %11) #13
  %38 = call ptr @Perl_sv_2mortal(ptr noundef %37) #13
  %39 = getelementptr inbounds %struct.sv, ptr %38, i64 0, i32 2
  %40 = load i32, ptr %39, align 4, !tbaa !16
  %41 = or i32 %40, 536870912
  store i32 %41, ptr %39, align 4, !tbaa !16
  %42 = call zeroext i1 @Perl_sv_utf8_downgrade(ptr noundef %38, i1 noundef zeroext false) #13
  %43 = load i32, ptr %39, align 4, !tbaa !16
  %44 = and i32 %43, 2098176
  %45 = icmp eq i32 %44, 1024
  br i1 %45, label %46, label %52

46:                                               ; preds = %36
  %47 = load ptr, ptr %38, align 8, !tbaa !26
  %48 = getelementptr inbounds %struct.xpv, ptr %47, i64 0, i32 2
  %49 = load i64, ptr %48, align 8, !tbaa !55
  store i64 %49, ptr %2, align 8, !tbaa !71
  %50 = getelementptr inbounds %struct.sv, ptr %38, i64 0, i32 3
  %51 = load ptr, ptr %50, align 8, !tbaa !24
  br label %54

52:                                               ; preds = %36
  %53 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %38, ptr noundef nonnull %2, i32 noundef 34) #13
  br label %54

54:                                               ; preds = %46, %52, %30, %25
  %55 = phi ptr [ %27, %30 ], [ %27, %25 ], [ %51, %46 ], [ %53, %52 ]
  %56 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %57 = getelementptr inbounds %struct.op, ptr %56, i64 0, i32 4
  %58 = load i16, ptr %57, align 8
  %59 = and i16 %58, 511
  %60 = icmp eq i16 %59, 117
  br i1 %60, label %96, label %61

61:                                               ; preds = %54
  %62 = load i64, ptr %2, align 8
  %63 = load i8, ptr %55, align 1, !tbaa !24
  %64 = icmp ne i8 %63, 0
  %65 = icmp ne i64 %62, 0
  %66 = select i1 %64, i1 %65, i1 false
  br i1 %66, label %67, label %83

67:                                               ; preds = %61, %76
  %68 = phi i8 [ %79, %76 ], [ %63, %61 ]
  %69 = phi ptr [ %77, %76 ], [ %55, %61 ]
  %70 = phi i64 [ %78, %76 ], [ %62, %61 ]
  %71 = zext i8 %68 to i64
  %72 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %71
  %73 = load i32, ptr %72, align 4, !tbaa !57
  %74 = and i32 %73, 17408
  %75 = icmp eq i32 %74, 17408
  br i1 %75, label %76, label %83

76:                                               ; preds = %67
  %77 = getelementptr inbounds i8, ptr %69, i64 1
  %78 = add i64 %70, -1
  store i64 %78, ptr %2, align 8, !tbaa !71
  %79 = load i8, ptr %77, align 1, !tbaa !24
  %80 = icmp ne i8 %79, 0
  %81 = icmp ne i64 %78, 0
  %82 = select i1 %80, i1 %81, i1 false
  br i1 %82, label %67, label %83, !llvm.loop !109

83:                                               ; preds = %67, %76, %61
  %84 = phi ptr [ %55, %61 ], [ %77, %76 ], [ %69, %67 ]
  %85 = phi i8 [ %63, %61 ], [ %79, %76 ], [ %68, %67 ]
  %86 = phi i64 [ %62, %61 ], [ %78, %76 ], [ %70, %67 ]
  %87 = icmp eq i8 %85, 48
  br i1 %87, label %88, label %92

88:                                               ; preds = %83
  %89 = getelementptr inbounds i8, ptr %84, i64 1
  %90 = add i64 %86, -1
  store i64 %90, ptr %2, align 8, !tbaa !71
  %91 = load i8, ptr %89, align 1, !tbaa !24
  br label %92

92:                                               ; preds = %88, %83
  %93 = phi i8 [ %91, %88 ], [ %85, %83 ]
  %94 = phi ptr [ %89, %88 ], [ %84, %83 ]
  %95 = and i8 %93, -33
  switch i8 %95, label %101 [
    i8 88, label %96
    i8 66, label %99
  ]

96:                                               ; preds = %92, %54
  %97 = phi ptr [ %55, %54 ], [ %94, %92 ]
  %98 = call i64 @Perl_grok_hex(ptr noundef %97, ptr noundef nonnull %2, ptr noundef nonnull %1, ptr noundef nonnull %3) #13
  br label %103

99:                                               ; preds = %92
  %100 = call i64 @Perl_grok_bin(ptr noundef nonnull %94, ptr noundef nonnull %2, ptr noundef nonnull %1, ptr noundef nonnull %3) #13
  br label %103

101:                                              ; preds = %92
  %102 = call i64 @Perl_grok_oct(ptr noundef nonnull %94, ptr noundef nonnull %2, ptr noundef nonnull %1, ptr noundef nonnull %3) #13
  br label %103

103:                                              ; preds = %99, %101, %96
  %104 = phi i64 [ %98, %96 ], [ %100, %99 ], [ %102, %101 ]
  %105 = load i32, ptr %1, align 4, !tbaa !57
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %114, label %108

108:                                              ; preds = %103
  %109 = load double, ptr %3, align 8, !tbaa !110
  call void @Perl_sv_setnv(ptr noundef %10, double noundef nofpclass(nan inf) %109) #13
  %110 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 2
  %111 = load i32, ptr %110, align 4, !tbaa !16
  %112 = and i32 %111, 4194304
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %121, label %119

114:                                              ; preds = %103
  call void @Perl_sv_setuv(ptr noundef %10, i64 noundef %104) #13
  %115 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 2
  %116 = load i32, ptr %115, align 4, !tbaa !16
  %117 = and i32 %116, 4194304
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %121, label %119

119:                                              ; preds = %114, %108
  %120 = call i32 @Perl_mg_set(ptr noundef nonnull %10) #13
  br label %121

121:                                              ; preds = %119, %114, %108
  store ptr %10, ptr %4, align 8, !tbaa !5
  %122 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %123 = load ptr, ptr %122, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %1) #13
  ret ptr %123
}

declare ptr @Perl_newSVsv(ptr noundef) local_unnamed_addr #2

declare zeroext i1 @Perl_sv_utf8_downgrade(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

declare i64 @Perl_grok_hex(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

declare i64 @Perl_grok_bin(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

declare i64 @Perl_grok_oct(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_length() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %4 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 3
  %6 = load i64, ptr %5, align 8, !tbaa !14
  %7 = getelementptr inbounds ptr, ptr %3, i64 %6
  %8 = load ptr, ptr %7, align 8, !tbaa !5
  %9 = load ptr, ptr %2, align 8, !tbaa !5
  %10 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.cop, ptr %10, i64 0, i32 10
  %12 = load i32, ptr %11, align 8, !tbaa !66
  %13 = getelementptr inbounds %struct.sv, ptr %9, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !16
  %15 = shl i32 %12, 26
  %16 = xor i32 %14, %15
  %17 = and i32 %16, 538969088
  store ptr %8, ptr %2, align 8, !tbaa !5
  %18 = icmp eq i32 %17, 1024
  br i1 %18, label %46, label %19

19:                                               ; preds = %0
  %20 = and i32 %14, 2097152
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = tail call i32 @Perl_mg_get(ptr noundef nonnull %9) #13
  %24 = load i32, ptr %13, align 4, !tbaa !16
  br label %25

25:                                               ; preds = %22, %19
  %26 = phi i32 [ %24, %22 ], [ %14, %19 ]
  %27 = and i32 %26, 65280
  %28 = icmp ne i32 %27, 0
  %29 = and i32 %26, 255
  %30 = icmp eq i32 %29, 8
  %31 = or i1 %28, %30
  %32 = and i32 %26, 16826623
  %33 = icmp eq i32 %32, 16777226
  %34 = or i1 %33, %31
  br i1 %34, label %35, label %55

35:                                               ; preds = %25
  %36 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %37 = getelementptr inbounds %struct.cop, ptr %36, i64 0, i32 10
  %38 = load i32, ptr %37, align 8, !tbaa !66
  %39 = and i32 %38, 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %35
  %42 = tail call i64 @Perl_sv_len_utf8_nomg(ptr noundef nonnull %9) #13
  tail call void @Perl_sv_setiv(ptr noundef %8, i64 noundef %42) #13
  br label %62

43:                                               ; preds = %35
  %44 = and i32 %26, 2098176
  %45 = icmp eq i32 %44, 1024
  br i1 %45, label %46, label %50

46:                                               ; preds = %43, %0
  %47 = load ptr, ptr %9, align 8, !tbaa !26
  %48 = getelementptr inbounds %struct.xpv, ptr %47, i64 0, i32 2
  %49 = load i64, ptr %48, align 8, !tbaa !55
  store i64 %49, ptr %1, align 8, !tbaa !71
  br label %53

50:                                               ; preds = %43
  %51 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %9, ptr noundef nonnull %1, i32 noundef 32) #13
  %52 = load i64, ptr %1, align 8, !tbaa !71
  br label %53

53:                                               ; preds = %50, %46
  %54 = phi i64 [ %52, %50 ], [ %49, %46 ]
  call void @Perl_sv_setiv(ptr noundef %8, i64 noundef %54) #13
  br label %62

55:                                               ; preds = %25
  %56 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 2
  %57 = load i32, ptr %56, align 4, !tbaa !16
  %58 = and i32 %57, 131072
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %55
  tail call void @Perl_sv_setsv_flags(ptr noundef nonnull %8, ptr noundef nonnull @PL_sv_undef, i32 noundef 1536) #13
  br label %62

61:                                               ; preds = %55
  store ptr @PL_sv_undef, ptr %2, align 8, !tbaa !5
  br label %69

62:                                               ; preds = %60, %53, %41
  %63 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 2
  %64 = load i32, ptr %63, align 4, !tbaa !16
  %65 = and i32 %64, 4194304
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %62
  %68 = call i32 @Perl_mg_set(ptr noundef nonnull %8) #13
  br label %69

69:                                               ; preds = %67, %62, %61
  %70 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %71 = load ptr, ptr %70, align 8, !tbaa !13
  ret ptr %71
}

declare i64 @Perl_sv_len_utf8_nomg(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nosync nounwind sspstrong willreturn memory(argmem: write) uwtable
define dso_local zeroext i1 @Perl_translate_substr_offsets(i64 noundef %0, i64 noundef %1, i1 noundef zeroext %2, i64 noundef %3, i1 noundef zeroext %4, ptr nocapture noundef writeonly %5, ptr nocapture noundef writeonly %6) local_unnamed_addr #8 {
  %8 = xor i1 %2, true
  %9 = icmp slt i64 %1, 0
  %10 = and i1 %9, %8
  %11 = icmp ne i64 %0, 0
  %12 = and i1 %11, %10
  br i1 %12, label %13, label %18

13:                                               ; preds = %7
  %14 = add i64 %0, -1
  %15 = xor i64 %1, -1
  %16 = icmp ugt i64 %14, %15
  %17 = add i64 %1, %0
  br label %18

18:                                               ; preds = %13, %7
  %19 = phi i1 [ %16, %13 ], [ %2, %7 ]
  %20 = phi i64 [ %17, %13 ], [ %1, %7 ]
  %21 = icmp sgt i64 %20, 0
  %22 = or i1 %19, %21
  %23 = icmp ugt i64 %20, %0
  %24 = and i1 %23, %22
  br i1 %24, label %66, label %25

25:                                               ; preds = %18
  %26 = icmp ne i64 %3, 0
  %27 = or i1 %26, %4
  br i1 %27, label %28, label %55

28:                                               ; preds = %25
  %29 = icmp sgt i64 %3, -1
  %30 = or i1 %29, %4
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  br i1 %11, label %32, label %46

32:                                               ; preds = %31
  %33 = add i64 %0, -1
  %34 = xor i64 %3, -1
  %35 = icmp ugt i64 %33, %34
  br label %46

36:                                               ; preds = %28
  %37 = icmp sgt i64 %20, -1
  %38 = or i1 %19, %37
  br i1 %38, label %41, label %39

39:                                               ; preds = %36
  %40 = icmp slt i64 %3, 0
  br label %46

41:                                               ; preds = %36
  %42 = sub i64 %0, %20
  %43 = icmp ult i64 %42, %3
  %44 = add nsw i64 %20, %3
  %45 = select i1 %43, i64 %0, i64 %44
  br label %55

46:                                               ; preds = %31, %32, %39
  %47 = phi i64 [ %0, %32 ], [ %20, %39 ], [ 0, %31 ]
  %48 = phi i1 [ %35, %32 ], [ %40, %39 ], [ false, %31 ]
  %49 = add i64 %47, %3
  %50 = icmp sgt i64 %49, -1
  %51 = or i1 %48, %50
  br i1 %51, label %55, label %52

52:                                               ; preds = %46
  %53 = icmp sgt i64 %20, -1
  %54 = or i1 %19, %53
  br i1 %54, label %60, label %66

55:                                               ; preds = %25, %41, %46
  %56 = phi i64 [ %49, %46 ], [ %0, %25 ], [ %45, %41 ]
  %57 = icmp sgt i64 %20, -1
  %58 = or i1 %19, %57
  %59 = select i1 %58, i64 %20, i64 0
  br label %60

60:                                               ; preds = %52, %55
  %61 = phi i64 [ %59, %55 ], [ %20, %52 ]
  %62 = phi i64 [ %56, %55 ], [ 0, %52 ]
  %63 = tail call i64 @llvm.umax.i64(i64 %62, i64 %61)
  %64 = tail call i64 @llvm.umin.i64(i64 %63, i64 %0)
  store i64 %61, ptr %5, align 8, !tbaa !71
  %65 = sub i64 %64, %61
  store i64 %65, ptr %6, align 8, !tbaa !71
  br label %66

66:                                               ; preds = %52, %18, %60
  %67 = phi i1 [ true, %60 ], [ false, %18 ], [ false, %52 ]
  ret i1 %67
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_substr() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %5 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %6 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 3
  %8 = load i64, ptr %7, align 8, !tbaa !14
  %9 = getelementptr inbounds ptr, ptr %5, i64 %8
  %10 = load ptr, ptr %9, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  %11 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 5
  %12 = load i8, ptr %11, align 2, !tbaa !9
  %13 = and i8 %12, 32
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %26

15:                                               ; preds = %0
  %16 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 6
  %17 = load i8, ptr %16, align 1, !tbaa !15
  %18 = and i8 %17, 8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %15
  %21 = tail call i32 @Perl_is_lvalue_sub() #13
  %22 = icmp ne i32 %21, 0
  %23 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %24 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 5
  %25 = load i8, ptr %24, align 2, !tbaa !9
  br label %26

26:                                               ; preds = %15, %20, %0
  %27 = phi i8 [ %12, %0 ], [ %12, %15 ], [ %25, %20 ]
  %28 = phi ptr [ %6, %0 ], [ %6, %15 ], [ %23, %20 ]
  %29 = phi i1 [ true, %0 ], [ false, %15 ], [ %22, %20 ]
  %30 = and i8 %27, 3
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %26
  %33 = zext i8 %30 to i32
  br label %37

34:                                               ; preds = %26
  %35 = tail call i32 @Perl_block_gimme() #13
  %36 = load ptr, ptr @PL_op, align 8, !tbaa !5
  br label %37

37:                                               ; preds = %34, %32
  %38 = phi ptr [ %28, %32 ], [ %36, %34 ]
  %39 = phi i32 [ %33, %32 ], [ %35, %34 ]
  %40 = icmp eq i32 %39, 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #13
  %41 = getelementptr inbounds %struct.op, ptr %38, i64 0, i32 6
  %42 = load i8, ptr %41, align 1, !tbaa !15
  %43 = and i8 %42, 7
  %44 = icmp ugt i8 %43, 2
  br i1 %44, label %45, label %75

45:                                               ; preds = %37
  %46 = icmp eq i8 %43, 3
  br i1 %46, label %50, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds ptr, ptr %4, i64 -1
  %49 = load ptr, ptr %4, align 8, !tbaa !5
  br label %50

50:                                               ; preds = %47, %45
  %51 = phi ptr [ null, %45 ], [ %49, %47 ]
  %52 = phi ptr [ %4, %45 ], [ %48, %47 ]
  %53 = getelementptr inbounds ptr, ptr %52, i64 -1
  %54 = load ptr, ptr %52, align 8, !tbaa !5
  %55 = icmp eq ptr %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %struct.sv, ptr %54, i64 0, i32 2
  %58 = load i32, ptr %57, align 4, !tbaa !16
  %59 = and i32 %58, 2097408
  %60 = icmp eq i32 %59, 256
  br i1 %60, label %61, label %65

61:                                               ; preds = %56
  %62 = load ptr, ptr %54, align 8, !tbaa !26
  %63 = getelementptr inbounds %struct.xpviv, ptr %62, i64 0, i32 4
  %64 = load i64, ptr %63, align 8, !tbaa !24
  br label %67

65:                                               ; preds = %56
  %66 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %54, i32 noundef 2) #13
  br label %67

67:                                               ; preds = %65, %61
  %68 = phi i64 [ %64, %61 ], [ %66, %65 ]
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %67
  %71 = load i32, ptr %57, align 4, !tbaa !16
  %72 = and i32 %71, -2147483392
  %73 = icmp eq i32 %72, -2147483392
  %74 = zext i1 %73 to i32
  br label %75

75:                                               ; preds = %50, %70, %67, %37
  %76 = phi i32 [ 0, %37 ], [ %74, %70 ], [ 1, %67 ], [ 0, %50 ]
  %77 = phi i64 [ 0, %37 ], [ %68, %70 ], [ 0, %67 ], [ 0, %50 ]
  %78 = phi ptr [ null, %37 ], [ %51, %70 ], [ %51, %67 ], [ %51, %50 ]
  %79 = phi ptr [ %4, %37 ], [ %53, %70 ], [ %53, %67 ], [ %53, %50 ]
  %80 = getelementptr inbounds ptr, ptr %79, i64 -1
  %81 = load ptr, ptr %79, align 8, !tbaa !5
  %82 = getelementptr inbounds %struct.sv, ptr %81, i64 0, i32 2
  %83 = load i32, ptr %82, align 4, !tbaa !16
  %84 = and i32 %83, 2097408
  %85 = icmp eq i32 %84, 256
  br i1 %85, label %86, label %90

86:                                               ; preds = %75
  %87 = load ptr, ptr %81, align 8, !tbaa !26
  %88 = getelementptr inbounds %struct.xpviv, ptr %87, i64 0, i32 4
  %89 = load i64, ptr %88, align 8, !tbaa !24
  br label %93

90:                                               ; preds = %75
  %91 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %81, i32 noundef 2) #13
  %92 = load i32, ptr %82, align 4, !tbaa !16
  br label %93

93:                                               ; preds = %90, %86
  %94 = phi i32 [ %83, %86 ], [ %92, %90 ]
  %95 = phi i64 [ %89, %86 ], [ %91, %90 ]
  %96 = and i32 %94, -2147483392
  %97 = icmp eq i32 %96, -2147483392
  %98 = getelementptr inbounds ptr, ptr %79, i64 -2
  %99 = load ptr, ptr %80, align 8, !tbaa !5
  %100 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %101 = getelementptr inbounds %struct.op, ptr %100, i64 0, i32 6
  %102 = load i8, ptr %101, align 1, !tbaa !15
  %103 = and i8 %102, 16
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %108, label %105

105:                                              ; preds = %93
  %106 = getelementptr inbounds ptr, ptr %79, i64 -3
  %107 = load ptr, ptr %98, align 8, !tbaa !5
  br label %108

108:                                              ; preds = %105, %93
  %109 = phi ptr [ %107, %105 ], [ %78, %93 ]
  %110 = phi ptr [ %106, %105 ], [ %98, %93 ]
  %111 = icmp eq ptr %109, null
  %112 = select i1 %29, i1 %111, i1 false
  br i1 %112, label %113, label %148

113:                                              ; preds = %108
  %114 = tail call ptr @Perl_newSV_type(i32 noundef 10) #13
  %115 = tail call ptr @Perl_sv_2mortal(ptr noundef %114) #13
  tail call void @Perl_sv_magic(ptr noundef %115, ptr noundef null, i32 noundef 120, ptr noundef null, i32 noundef 0) #13
  %116 = load ptr, ptr %115, align 8, !tbaa !26
  %117 = getelementptr inbounds %struct.xpvlv, ptr %116, i64 0, i32 9
  store i8 120, ptr %117, align 8, !tbaa !59
  %118 = icmp eq ptr %99, null
  br i1 %118, label %123, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %struct.sv, ptr %99, i64 0, i32 1
  %121 = load i32, ptr %120, align 8, !tbaa !44
  %122 = add i32 %121, 1
  store i32 %122, ptr %120, align 8, !tbaa !44
  br label %123

123:                                              ; preds = %113, %119
  %124 = getelementptr inbounds %struct.xpvlv, ptr %116, i64 0, i32 8
  store ptr %99, ptr %124, align 8, !tbaa !61
  %125 = icmp sgt i64 %95, -1
  %126 = select i1 %97, i1 true, i1 %125
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %struct.xpvlv, ptr %116, i64 0, i32 10
  %129 = load i8, ptr %128, align 1, !tbaa !112
  %130 = or i8 %129, 1
  store i8 %130, ptr %128, align 1, !tbaa !112
  %131 = sub nsw i64 0, %95
  br label %132

132:                                              ; preds = %123, %127
  %133 = phi i64 [ %131, %127 ], [ %95, %123 ]
  %134 = getelementptr inbounds %struct.xpvlv, ptr %116, i64 0, i32 6
  store i64 %133, ptr %134, align 8, !tbaa !24
  %135 = icmp ne i32 %76, 0
  %136 = icmp sgt i64 %77, 0
  %137 = or i1 %135, %136
  %138 = load ptr, ptr %115, align 8, !tbaa !26
  br i1 %137, label %144, label %139

139:                                              ; preds = %132
  %140 = getelementptr inbounds %struct.xpvlv, ptr %138, i64 0, i32 10
  %141 = load i8, ptr %140, align 1, !tbaa !112
  %142 = or i8 %141, 2
  store i8 %142, ptr %140, align 1, !tbaa !112
  %143 = sub nsw i64 0, %77
  br label %144

144:                                              ; preds = %132, %139
  %145 = phi i64 [ %143, %139 ], [ %77, %132 ]
  %146 = getelementptr inbounds %struct.xpvlv, ptr %138, i64 0, i32 7
  store i64 %145, ptr %146, align 8, !tbaa !70
  %147 = getelementptr inbounds ptr, ptr %110, i64 1
  store ptr %115, ptr %147, align 8, !tbaa !5
  br label %460

148:                                              ; preds = %108
  br i1 %111, label %224, label %149

149:                                              ; preds = %148
  %150 = getelementptr inbounds %struct.sv, ptr %109, i64 0, i32 2
  %151 = load i32, ptr %150, align 4, !tbaa !16
  %152 = and i32 %151, 2098176
  %153 = icmp eq i32 %152, 1024
  br i1 %153, label %154, label %160

154:                                              ; preds = %149
  %155 = load ptr, ptr %109, align 8, !tbaa !26
  %156 = getelementptr inbounds %struct.xpv, ptr %155, i64 0, i32 2
  %157 = load i64, ptr %156, align 8, !tbaa !55
  store i64 %157, ptr %2, align 8, !tbaa !71
  %158 = getelementptr inbounds %struct.sv, ptr %109, i64 0, i32 3
  %159 = load ptr, ptr %158, align 8, !tbaa !24
  br label %162

160:                                              ; preds = %149
  %161 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %109, ptr noundef nonnull %2, i32 noundef 34) #13
  br label %162

162:                                              ; preds = %160, %154
  %163 = phi ptr [ %159, %154 ], [ %161, %160 ]
  %164 = getelementptr inbounds %struct.sv, ptr %99, i64 0, i32 2
  %165 = load i32, ptr %164, align 4, !tbaa !16
  %166 = and i32 %165, 2097152
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %171, label %168

168:                                              ; preds = %162
  %169 = call i32 @Perl_mg_get(ptr noundef nonnull %99) #13
  %170 = load i32, ptr %164, align 4, !tbaa !16
  br label %171

171:                                              ; preds = %162, %168
  %172 = phi i32 [ %165, %162 ], [ %170, %168 ]
  %173 = and i32 %172, 2048
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %177, label %175

175:                                              ; preds = %171
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 27, ptr noundef nonnull @.str.37) #13
  %176 = load i32, ptr %164, align 4, !tbaa !16
  br label %177

177:                                              ; preds = %175, %171
  %178 = phi i32 [ %176, %175 ], [ %172, %171 ]
  %179 = and i32 %178, 430018304
  %180 = icmp eq i32 %179, 1024
  br i1 %180, label %181, label %187

181:                                              ; preds = %177
  %182 = load ptr, ptr %99, align 8, !tbaa !26
  %183 = getelementptr inbounds %struct.xpv, ptr %182, i64 0, i32 2
  %184 = load i64, ptr %183, align 8, !tbaa !55
  store i64 %184, ptr %1, align 8, !tbaa !71
  %185 = getelementptr inbounds %struct.sv, ptr %99, i64 0, i32 3
  %186 = load ptr, ptr %185, align 8, !tbaa !24
  br label %189

187:                                              ; preds = %177
  %188 = call ptr @Perl_sv_pvn_force_flags(ptr noundef nonnull %99, ptr noundef nonnull %1, i32 noundef 0) #13
  br label %189

189:                                              ; preds = %187, %181
  %190 = phi ptr [ %186, %181 ], [ %188, %187 ]
  %191 = load i32, ptr %150, align 4, !tbaa !16
  %192 = and i32 %191, 536870912
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %189
  %195 = load i32, ptr %164, align 4, !tbaa !16
  br label %214

196:                                              ; preds = %189
  %197 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %198 = getelementptr inbounds %struct.cop, ptr %197, i64 0, i32 10
  %199 = load i32, ptr %198, align 8, !tbaa !66
  %200 = and i32 %199, 8
  %201 = icmp eq i32 %200, 0
  %202 = load i64, ptr %2, align 8
  %203 = icmp ne i64 %202, 0
  %204 = select i1 %201, i1 %203, i1 false
  %205 = load i32, ptr %164, align 4, !tbaa !16
  br i1 %204, label %206, label %214

206:                                              ; preds = %196
  %207 = and i32 %205, 536870912
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %237

209:                                              ; preds = %206
  %210 = call i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef nonnull %99, i32 noundef 0, i64 noundef 0) #13
  %211 = load ptr, ptr %99, align 8, !tbaa !26
  %212 = getelementptr inbounds %struct.xpv, ptr %211, i64 0, i32 2
  %213 = load i64, ptr %212, align 8, !tbaa !55
  store i64 %213, ptr %1, align 8, !tbaa !71
  br label %237

214:                                              ; preds = %194, %196
  %215 = phi i32 [ %195, %194 ], [ %205, %196 ]
  %216 = and i32 %215, 536870912
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %237, label %218

218:                                              ; preds = %214
  %219 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %220 = getelementptr inbounds %struct.cop, ptr %219, i64 0, i32 10
  %221 = load i32, ptr %220, align 8, !tbaa !66
  %222 = and i32 %221, 8
  %223 = icmp eq i32 %222, 0
  br label %237

224:                                              ; preds = %148
  %225 = getelementptr inbounds %struct.sv, ptr %99, i64 0, i32 2
  %226 = load i32, ptr %225, align 4, !tbaa !16
  %227 = and i32 %226, 2098176
  %228 = icmp eq i32 %227, 1024
  br i1 %228, label %229, label %235

229:                                              ; preds = %224
  %230 = load ptr, ptr %99, align 8, !tbaa !26
  %231 = getelementptr inbounds %struct.xpv, ptr %230, i64 0, i32 2
  %232 = load i64, ptr %231, align 8, !tbaa !55
  store i64 %232, ptr %1, align 8, !tbaa !71
  %233 = getelementptr inbounds %struct.sv, ptr %99, i64 0, i32 3
  %234 = load ptr, ptr %233, align 8, !tbaa !24
  br label %237

235:                                              ; preds = %224
  %236 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %99, ptr noundef nonnull %1, i32 noundef 34) #13
  br label %237

237:                                              ; preds = %218, %229, %235, %206, %209, %214
  %238 = phi ptr [ %190, %209 ], [ %190, %214 ], [ %190, %206 ], [ %190, %218 ], [ %234, %229 ], [ %236, %235 ]
  %239 = phi ptr [ %163, %209 ], [ %163, %214 ], [ %163, %206 ], [ %163, %218 ], [ null, %229 ], [ null, %235 ]
  %240 = phi i1 [ false, %209 ], [ false, %214 ], [ false, %206 ], [ %223, %218 ], [ false, %229 ], [ false, %235 ]
  %241 = getelementptr inbounds %struct.sv, ptr %99, i64 0, i32 2
  %242 = load i32, ptr %241, align 4, !tbaa !16
  %243 = and i32 %242, 536870912
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %282, label %245

245:                                              ; preds = %237
  %246 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %247 = getelementptr inbounds %struct.cop, ptr %246, i64 0, i32 10
  %248 = load i32, ptr %247, align 8, !tbaa !66
  %249 = and i32 %248, 8
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %282

251:                                              ; preds = %245
  %252 = and i32 %242, 2097152
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %271

254:                                              ; preds = %251
  %255 = and i32 %242, 2048
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %275, label %257

257:                                              ; preds = %254
  %258 = getelementptr inbounds %struct.sv, ptr %99, i64 0, i32 3
  %259 = load ptr, ptr %258, align 8, !tbaa !24
  %260 = getelementptr inbounds %struct.sv, ptr %259, i64 0, i32 2
  %261 = load i32, ptr %260, align 4, !tbaa !16
  %262 = and i32 %261, 1048576
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %275, label %264

264:                                              ; preds = %257
  %265 = load ptr, ptr %259, align 8, !tbaa !26
  %266 = load ptr, ptr %265, align 8, !tbaa !38
  %267 = getelementptr inbounds %struct.hv, ptr %266, i64 0, i32 2
  %268 = load i32, ptr %267, align 4, !tbaa !40
  %269 = and i32 %268, 268435456
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %275, label %271

271:                                              ; preds = %264, %251
  %272 = load i64, ptr %1, align 8, !tbaa !71
  %273 = getelementptr inbounds i8, ptr %238, i64 %272
  %274 = call i64 @Perl_utf8_length(ptr noundef %238, ptr noundef %273) #13
  br label %277

275:                                              ; preds = %264, %257, %254
  %276 = call i64 @Perl_sv_len_utf8(ptr noundef nonnull %99) #13
  br label %277

277:                                              ; preds = %275, %271
  %278 = phi i64 [ %274, %271 ], [ %276, %275 ]
  %279 = load i64, ptr %1, align 8, !tbaa !71
  %280 = icmp eq i64 %278, %279
  br i1 %280, label %284, label %281

281:                                              ; preds = %277
  store i64 %278, ptr %1, align 8, !tbaa !71
  br label %284

282:                                              ; preds = %245, %237
  %283 = load i64, ptr %1, align 8, !tbaa !71
  br label %284

284:                                              ; preds = %282, %277, %281
  %285 = phi i64 [ %283, %282 ], [ %278, %277 ], [ %278, %281 ]
  %286 = phi i64 [ 0, %282 ], [ 0, %277 ], [ %278, %281 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #13
  %287 = icmp ne i32 %76, 0
  %288 = xor i1 %97, true
  %289 = icmp slt i64 %95, 0
  %290 = and i1 %289, %288
  %291 = icmp ne i64 %285, 0
  %292 = and i1 %290, %291
  br i1 %292, label %293, label %298

293:                                              ; preds = %284
  %294 = add i64 %285, -1
  %295 = xor i64 %95, -1
  %296 = icmp ugt i64 %294, %295
  %297 = add i64 %285, %95
  br label %298

298:                                              ; preds = %293, %284
  %299 = phi i1 [ %296, %293 ], [ %97, %284 ]
  %300 = phi i64 [ %297, %293 ], [ %95, %284 ]
  %301 = icmp sgt i64 %300, 0
  %302 = or i1 %299, %301
  %303 = icmp ugt i64 %300, %285
  %304 = and i1 %303, %302
  br i1 %304, label %455, label %305

305:                                              ; preds = %298
  %306 = icmp ne i64 %77, 0
  %307 = or i1 %287, %306
  br i1 %307, label %308, label %335

308:                                              ; preds = %305
  %309 = icmp sgt i64 %77, -1
  %310 = or i1 %287, %309
  br i1 %310, label %316, label %311

311:                                              ; preds = %308
  br i1 %291, label %312, label %326

312:                                              ; preds = %311
  %313 = add i64 %285, -1
  %314 = xor i64 %77, -1
  %315 = icmp ugt i64 %313, %314
  br label %326

316:                                              ; preds = %308
  %317 = icmp sgt i64 %300, -1
  %318 = or i1 %299, %317
  br i1 %318, label %321, label %319

319:                                              ; preds = %316
  %320 = icmp slt i64 %77, 0
  br label %326

321:                                              ; preds = %316
  %322 = sub i64 %285, %300
  %323 = icmp ult i64 %322, %77
  %324 = add nsw i64 %300, %77
  %325 = select i1 %323, i64 %285, i64 %324
  br label %335

326:                                              ; preds = %319, %312, %311
  %327 = phi i64 [ %285, %312 ], [ %300, %319 ], [ 0, %311 ]
  %328 = phi i1 [ %315, %312 ], [ %320, %319 ], [ false, %311 ]
  %329 = add i64 %327, %77
  %330 = icmp sgt i64 %329, -1
  %331 = or i1 %328, %330
  br i1 %331, label %335, label %332

332:                                              ; preds = %326
  %333 = icmp sgt i64 %300, -1
  %334 = or i1 %299, %333
  br i1 %334, label %340, label %455

335:                                              ; preds = %326, %321, %305
  %336 = phi i64 [ %329, %326 ], [ %285, %305 ], [ %325, %321 ]
  %337 = icmp sgt i64 %300, -1
  %338 = or i1 %299, %337
  %339 = select i1 %338, i64 %300, i64 0
  br label %340

340:                                              ; preds = %335, %332
  %341 = phi i64 [ %339, %335 ], [ %300, %332 ]
  %342 = phi i64 [ %336, %335 ], [ 0, %332 ]
  %343 = call i64 @llvm.umax.i64(i64 %342, i64 %341)
  %344 = call i64 @llvm.umin.i64(i64 %343, i64 %285)
  %345 = sub i64 %344, %341
  store i64 %345, ptr %3, align 8, !tbaa !71
  %346 = icmp eq i64 %286, 0
  br i1 %346, label %380, label %347

347:                                              ; preds = %340
  %348 = load i32, ptr %241, align 4, !tbaa !16
  %349 = and i32 %348, 2097152
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %368

351:                                              ; preds = %347
  %352 = and i32 %348, 2048
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %378, label %354

354:                                              ; preds = %351
  %355 = getelementptr inbounds %struct.sv, ptr %99, i64 0, i32 3
  %356 = load ptr, ptr %355, align 8, !tbaa !24
  %357 = getelementptr inbounds %struct.sv, ptr %356, i64 0, i32 2
  %358 = load i32, ptr %357, align 4, !tbaa !16
  %359 = and i32 %358, 1048576
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %378, label %361

361:                                              ; preds = %354
  %362 = load ptr, ptr %356, align 8, !tbaa !26
  %363 = load ptr, ptr %362, align 8, !tbaa !38
  %364 = getelementptr inbounds %struct.hv, ptr %363, i64 0, i32 2
  %365 = load i32, ptr %364, align 4, !tbaa !40
  %366 = and i32 %365, 268435456
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %378, label %368

368:                                              ; preds = %361, %347
  %369 = trunc i64 %341 to i32
  %370 = call ptr @Perl_utf8_hop(ptr noundef %238, i32 noundef %369) #13
  %371 = trunc i64 %345 to i32
  %372 = call ptr @Perl_utf8_hop(ptr noundef %370, i32 noundef %371) #13
  %373 = ptrtoint ptr %372 to i64
  %374 = ptrtoint ptr %370 to i64
  %375 = sub i64 %373, %374
  store i64 %375, ptr %3, align 8, !tbaa !71
  %376 = ptrtoint ptr %238 to i64
  %377 = sub i64 %374, %376
  br label %380

378:                                              ; preds = %361, %354, %351
  %379 = call i64 @Perl_sv_pos_u2b_flags(ptr noundef nonnull %99, i64 noundef %341, ptr noundef nonnull %3, i32 noundef 32) #13
  br label %380

380:                                              ; preds = %340, %378, %368
  %381 = phi i64 [ %377, %368 ], [ %379, %378 ], [ %341, %340 ]
  %382 = getelementptr inbounds i8, ptr %238, i64 %381
  br i1 %40, label %395, label %383

383:                                              ; preds = %380
  %384 = load i8, ptr @PL_tainting, align 1, !tbaa !81, !range !83, !noundef !84
  %385 = icmp eq i8 %384, 0
  br i1 %385, label %387, label %386

386:                                              ; preds = %383
  call void @Perl_sv_untaint(ptr noundef %10) #13
  br label %387

387:                                              ; preds = %383, %386
  %388 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 2
  %389 = load i32, ptr %388, align 4, !tbaa !16
  %390 = and i32 %389, -536870913
  store i32 %390, ptr %388, align 4, !tbaa !16
  %391 = load i64, ptr %3, align 8, !tbaa !71
  call void @Perl_sv_setpvn(ptr noundef %10, ptr noundef %382, i64 noundef %391) #13
  br i1 %346, label %395, label %392

392:                                              ; preds = %387
  %393 = load i32, ptr %388, align 4, !tbaa !16
  %394 = or i32 %393, 536870912
  store i32 %394, ptr %388, align 4, !tbaa !16
  br label %395

395:                                              ; preds = %387, %392, %380
  %396 = icmp eq ptr %239, null
  br i1 %396, label %437, label %397

397:                                              ; preds = %395
  br i1 %240, label %398, label %413

398:                                              ; preds = %397
  %399 = call ptr @Perl_newSVsv(ptr noundef %109) #13
  %400 = call i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef %399, i32 noundef 2, i64 noundef 0) #13
  %401 = getelementptr inbounds %struct.sv, ptr %399, i64 0, i32 2
  %402 = load i32, ptr %401, align 4, !tbaa !16
  %403 = and i32 %402, 2098176
  %404 = icmp eq i32 %403, 1024
  br i1 %404, label %405, label %411

405:                                              ; preds = %398
  %406 = load ptr, ptr %399, align 8, !tbaa !26
  %407 = getelementptr inbounds %struct.xpv, ptr %406, i64 0, i32 2
  %408 = load i64, ptr %407, align 8, !tbaa !55
  store i64 %408, ptr %2, align 8, !tbaa !71
  %409 = getelementptr inbounds %struct.sv, ptr %399, i64 0, i32 3
  %410 = load ptr, ptr %409, align 8, !tbaa !24
  br label %413

411:                                              ; preds = %398
  %412 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %399, ptr noundef nonnull %2, i32 noundef 34) #13
  br label %413

413:                                              ; preds = %405, %411, %397
  %414 = phi ptr [ %239, %397 ], [ %410, %405 ], [ %412, %411 ]
  %415 = phi ptr [ null, %397 ], [ %399, %405 ], [ %399, %411 ]
  %416 = load i32, ptr %241, align 4, !tbaa !16
  %417 = and i32 %416, 65280
  %418 = icmp ne i32 %417, 0
  %419 = and i32 %416, 255
  %420 = icmp eq i32 %419, 8
  %421 = or i1 %418, %420
  %422 = and i32 %416, 16826623
  %423 = icmp eq i32 %422, 16777226
  %424 = or i1 %423, %421
  br i1 %424, label %426, label %425

425:                                              ; preds = %413
  call void @Perl_sv_setpvn(ptr noundef nonnull %99, ptr noundef nonnull @.str.3, i64 noundef 0) #13
  br label %426

426:                                              ; preds = %425, %413
  %427 = load i64, ptr %3, align 8, !tbaa !71
  %428 = load i64, ptr %2, align 8, !tbaa !71
  call void @Perl_sv_insert_flags(ptr noundef nonnull %99, i64 noundef %381, i64 noundef %427, ptr noundef %414, i64 noundef %428, i32 noundef 0) #13
  %429 = icmp eq ptr %415, null
  br i1 %429, label %437, label %430

430:                                              ; preds = %426
  %431 = getelementptr inbounds %struct.sv, ptr %415, i64 0, i32 1
  %432 = load i32, ptr %431, align 8, !tbaa !44
  %433 = icmp ugt i32 %432, 1
  br i1 %433, label %434, label %436

434:                                              ; preds = %430
  %435 = add i32 %432, -1
  store i32 %435, ptr %431, align 8, !tbaa !44
  br label %437

436:                                              ; preds = %430
  call void @Perl_sv_free2(ptr noundef nonnull %415, i32 noundef %432) #13
  br label %437

437:                                              ; preds = %395, %426, %434, %436
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #13
  %438 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %439 = getelementptr inbounds %struct.op, ptr %438, i64 0, i32 6
  %440 = load i8, ptr %439, align 1, !tbaa !15
  %441 = and i8 %440, 16
  %442 = icmp eq i8 %441, 0
  br i1 %442, label %445, label %443

443:                                              ; preds = %437
  %444 = getelementptr inbounds ptr, ptr %110, i64 1
  br label %460

445:                                              ; preds = %437
  br i1 %40, label %460, label %446

446:                                              ; preds = %445
  %447 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 2
  %448 = load i32, ptr %447, align 4, !tbaa !16
  %449 = and i32 %448, 4194304
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %453, label %451

451:                                              ; preds = %446
  %452 = call i32 @Perl_mg_set(ptr noundef nonnull %10) #13
  br label %453

453:                                              ; preds = %446, %451
  %454 = getelementptr inbounds ptr, ptr %110, i64 1
  store ptr %10, ptr %454, align 8, !tbaa !5
  br label %460

455:                                              ; preds = %332, %298
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #13
  %456 = icmp eq ptr %239, null
  br i1 %456, label %458, label %457

457:                                              ; preds = %455
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.38) #13
  br label %458

458:                                              ; preds = %457, %455
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 27, ptr noundef nonnull @.str.38) #13
  %459 = getelementptr inbounds ptr, ptr %110, i64 1
  store ptr @PL_sv_undef, ptr %459, align 8, !tbaa !5
  br label %460

460:                                              ; preds = %443, %453, %445, %458, %144
  %461 = phi ptr [ %459, %458 ], [ %147, %144 ], [ %444, %443 ], [ %454, %453 ], [ %110, %445 ]
  store ptr %461, ptr @PL_stack_sp, align 8, !tbaa !5
  %462 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %463 = load ptr, ptr %462, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  ret ptr %463
}

declare i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #2

declare i64 @Perl_utf8_length(ptr noundef, ptr noundef) local_unnamed_addr #2

declare i64 @Perl_sv_len_utf8(ptr noundef) local_unnamed_addr #2

declare void @Perl_sv_untaint(ptr noundef) local_unnamed_addr #2

declare void @Perl_sv_insert_flags(ptr noundef, i64 noundef, i64 noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_vec() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %1, align 8, !tbaa !5
  store ptr %3, ptr @PL_Sv, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 2097408
  %7 = icmp eq i32 %6, 256
  br i1 %7, label %8, label %12

8:                                                ; preds = %0
  %9 = load ptr, ptr %3, align 8, !tbaa !26
  %10 = getelementptr inbounds %struct.xpviv, ptr %9, i64 0, i32 4
  %11 = load i64, ptr %10, align 8, !tbaa !24
  br label %14

12:                                               ; preds = %0
  %13 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %3, i32 noundef 2) #13
  br label %14

14:                                               ; preds = %12, %8
  %15 = phi i64 [ %11, %8 ], [ %13, %12 ]
  %16 = getelementptr inbounds ptr, ptr %1, i64 -2
  %17 = load ptr, ptr %2, align 8, !tbaa !5
  store ptr %17, ptr @PL_Sv, align 8, !tbaa !5
  %18 = getelementptr inbounds %struct.sv, ptr %17, i64 0, i32 2
  %19 = load i32, ptr %18, align 4, !tbaa !16
  %20 = and i32 %19, 2097408
  %21 = icmp eq i32 %20, 256
  br i1 %21, label %22, label %26

22:                                               ; preds = %14
  %23 = load ptr, ptr %17, align 8, !tbaa !26
  %24 = getelementptr inbounds %struct.xpviv, ptr %23, i64 0, i32 4
  %25 = load i64, ptr %24, align 8, !tbaa !24
  br label %28

26:                                               ; preds = %14
  %27 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %17, i32 noundef 2) #13
  br label %28

28:                                               ; preds = %26, %22
  %29 = phi i64 [ %25, %22 ], [ %27, %26 ]
  %30 = load ptr, ptr %16, align 8, !tbaa !5
  %31 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.op, ptr %31, i64 0, i32 5
  %33 = load i8, ptr %32, align 2, !tbaa !9
  %34 = and i8 %33, 32
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %46

36:                                               ; preds = %28
  %37 = getelementptr inbounds %struct.op, ptr %31, i64 0, i32 6
  %38 = load i8, ptr %37, align 1, !tbaa !15
  %39 = and i8 %38, 8
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %61, label %41

41:                                               ; preds = %36
  %42 = tail call i32 @Perl_is_lvalue_sub() #13
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %41
  %45 = load ptr, ptr @PL_op, align 8, !tbaa !5
  br label %61

46:                                               ; preds = %28, %41
  %47 = tail call ptr @Perl_newSV_type(i32 noundef 10) #13
  %48 = tail call ptr @Perl_sv_2mortal(ptr noundef %47) #13
  tail call void @Perl_sv_magic(ptr noundef %48, ptr noundef null, i32 noundef 118, ptr noundef null, i32 noundef 0) #13
  %49 = load ptr, ptr %48, align 8, !tbaa !26
  %50 = getelementptr inbounds %struct.xpvlv, ptr %49, i64 0, i32 9
  store i8 118, ptr %50, align 8, !tbaa !59
  %51 = icmp eq ptr %30, null
  br i1 %51, label %56, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 1
  %54 = load i32, ptr %53, align 8, !tbaa !44
  %55 = add i32 %54, 1
  store i32 %55, ptr %53, align 8, !tbaa !44
  br label %56

56:                                               ; preds = %46, %52
  %57 = getelementptr inbounds %struct.xpvlv, ptr %49, i64 0, i32 8
  store ptr %30, ptr %57, align 8, !tbaa !61
  %58 = getelementptr inbounds %struct.xpvlv, ptr %49, i64 0, i32 6
  store i64 %29, ptr %58, align 8, !tbaa !24
  %59 = load ptr, ptr %48, align 8, !tbaa !26
  %60 = getelementptr inbounds %struct.xpvlv, ptr %59, i64 0, i32 7
  store i64 %15, ptr %60, align 8, !tbaa !70
  br label %71

61:                                               ; preds = %44, %36
  %62 = phi ptr [ %45, %44 ], [ %31, %36 ]
  %63 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %64 = getelementptr inbounds %struct.op, ptr %62, i64 0, i32 3
  %65 = load i64, ptr %64, align 8, !tbaa !14
  %66 = getelementptr inbounds ptr, ptr %63, i64 %65
  %67 = load ptr, ptr %66, align 8, !tbaa !5
  %68 = load i8, ptr @PL_tainting, align 1, !tbaa !81, !range !83, !noundef !84
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %71, label %70

70:                                               ; preds = %61
  tail call void @Perl_sv_untaint(ptr noundef %67) #13
  br label %71

71:                                               ; preds = %70, %61, %56
  %72 = phi i1 [ true, %56 ], [ false, %61 ], [ false, %70 ]
  %73 = phi ptr [ %48, %56 ], [ %67, %61 ], [ %67, %70 ]
  %74 = trunc i64 %15 to i32
  %75 = tail call i64 @Perl_do_vecget(ptr noundef %30, i64 noundef %29, i32 noundef %74) #13
  tail call void @Perl_sv_setuv(ptr noundef %73, i64 noundef %75) #13
  br i1 %72, label %83, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %struct.sv, ptr %73, i64 0, i32 2
  %78 = load i32, ptr %77, align 4, !tbaa !16
  %79 = and i32 %78, 4194304
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = tail call i32 @Perl_mg_set(ptr noundef nonnull %73) #13
  br label %83

83:                                               ; preds = %81, %76, %71
  store ptr %73, ptr %16, align 8, !tbaa !5
  store ptr %16, ptr @PL_stack_sp, align 8, !tbaa !5
  %84 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %85 = load ptr, ptr %84, align 8, !tbaa !13
  ret ptr %85
}

declare i64 @Perl_do_vecget(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_index() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i8, align 1
  %4 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %5 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %6 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 3
  %8 = load i64, ptr %7, align 8, !tbaa !14
  %9 = getelementptr inbounds ptr, ptr %5, i64 %8
  %10 = load ptr, ptr %9, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #13
  store i64 0, ptr %2, align 8, !tbaa !71
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #13
  %11 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 4
  %12 = load i16, ptr %11, align 8
  %13 = and i16 %12, 511
  %14 = icmp eq i16 %13, 123
  %15 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 6
  %16 = load i8, ptr %15, align 1, !tbaa !15
  %17 = and i8 %16, 15
  %18 = icmp ugt i8 %17, 2
  br i1 %18, label %19, label %37

19:                                               ; preds = %0
  %20 = load ptr, ptr %4, align 8, !tbaa !5
  %21 = icmp eq ptr %20, null
  %22 = sext i1 %21 to i64
  %23 = getelementptr inbounds ptr, ptr %4, i64 %22
  br i1 %21, label %37, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds ptr, ptr %23, i64 -1
  %26 = load ptr, ptr %23, align 8, !tbaa !5
  store ptr %26, ptr @PL_Sv, align 8, !tbaa !5
  %27 = getelementptr inbounds %struct.sv, ptr %26, i64 0, i32 2
  %28 = load i32, ptr %27, align 4, !tbaa !16
  %29 = and i32 %28, 2097408
  %30 = icmp eq i32 %29, 256
  br i1 %30, label %31, label %35

31:                                               ; preds = %24
  %32 = load ptr, ptr %26, align 8, !tbaa !26
  %33 = getelementptr inbounds %struct.xpviv, ptr %32, i64 0, i32 4
  %34 = load i64, ptr %33, align 8, !tbaa !24
  br label %37

35:                                               ; preds = %24
  %36 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %26, i32 noundef 2) #13
  br label %37

37:                                               ; preds = %0, %31, %35, %19
  %38 = phi i1 [ false, %19 ], [ true, %31 ], [ true, %35 ], [ false, %0 ]
  %39 = phi i64 [ 0, %19 ], [ %34, %31 ], [ %36, %35 ], [ 0, %0 ]
  %40 = phi ptr [ %23, %19 ], [ %25, %31 ], [ %25, %35 ], [ %4, %0 ]
  %41 = getelementptr inbounds ptr, ptr %40, i64 -1
  %42 = load ptr, ptr %40, align 8, !tbaa !5
  %43 = load ptr, ptr %41, align 8, !tbaa !5
  %44 = getelementptr inbounds %struct.sv, ptr %43, i64 0, i32 2
  %45 = load i32, ptr %44, align 4, !tbaa !16
  %46 = and i32 %45, 2098176
  %47 = icmp eq i32 %46, 1024
  br i1 %47, label %48, label %54

48:                                               ; preds = %37
  %49 = load ptr, ptr %43, align 8, !tbaa !26
  %50 = getelementptr inbounds %struct.xpv, ptr %49, i64 0, i32 2
  %51 = load i64, ptr %50, align 8, !tbaa !55
  store i64 %51, ptr %1, align 8, !tbaa !71
  %52 = getelementptr inbounds %struct.sv, ptr %43, i64 0, i32 3
  %53 = load ptr, ptr %52, align 8, !tbaa !24
  br label %56

54:                                               ; preds = %37
  %55 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %43, ptr noundef nonnull %1, i32 noundef 34) #13
  br label %56

56:                                               ; preds = %54, %48
  %57 = phi ptr [ %53, %48 ], [ %55, %54 ]
  %58 = getelementptr inbounds %struct.sv, ptr %42, i64 0, i32 2
  %59 = load i32, ptr %58, align 4, !tbaa !16
  %60 = and i32 %59, 2098176
  %61 = icmp eq i32 %60, 1024
  br i1 %61, label %62, label %68

62:                                               ; preds = %56
  %63 = load ptr, ptr %42, align 8, !tbaa !26
  %64 = getelementptr inbounds %struct.xpv, ptr %63, i64 0, i32 2
  %65 = load i64, ptr %64, align 8, !tbaa !55
  store i64 %65, ptr %2, align 8, !tbaa !71
  %66 = getelementptr inbounds %struct.sv, ptr %42, i64 0, i32 3
  %67 = load ptr, ptr %66, align 8, !tbaa !24
  br label %70

68:                                               ; preds = %56
  %69 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %42, ptr noundef nonnull %2, i32 noundef 34) #13
  br label %70

70:                                               ; preds = %68, %62
  %71 = phi ptr [ %67, %62 ], [ %69, %68 ]
  %72 = load i32, ptr %44, align 4, !tbaa !16
  %73 = and i32 %72, 536870912
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %84, label %75

75:                                               ; preds = %70
  %76 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %77 = getelementptr inbounds %struct.cop, ptr %76, i64 0, i32 10
  %78 = load i32, ptr %77, align 8, !tbaa !66
  %79 = and i32 %78, 8
  %80 = icmp eq i32 %79, 0
  %81 = load i32, ptr %58, align 4, !tbaa !16
  %82 = and i32 %81, 536870912
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %96, label %97

84:                                               ; preds = %70
  %85 = load i32, ptr %58, align 4, !tbaa !16
  %86 = and i32 %85, 536870912
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %95, label %88

88:                                               ; preds = %84
  %89 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %90 = getelementptr inbounds %struct.cop, ptr %89, i64 0, i32 10
  %91 = load i32, ptr %90, align 8, !tbaa !66
  %92 = and i32 %91, 8
  %93 = icmp eq i32 %92, 0
  %94 = zext i1 %93 to i8
  store i8 %94, ptr %3, align 1, !tbaa !81
  br i1 %93, label %102, label %177

95:                                               ; preds = %84
  store i8 0, ptr %3, align 1, !tbaa !81
  br label %177

96:                                               ; preds = %75
  store i8 0, ptr %3, align 1, !tbaa !81
  br i1 %80, label %132, label %177

97:                                               ; preds = %75
  %98 = and i32 %78, 8
  %99 = icmp eq i32 %98, 0
  %100 = zext i1 %99 to i8
  store i8 %100, ptr %3, align 1, !tbaa !81
  %101 = xor i1 %80, %99
  br i1 %101, label %102, label %177

102:                                              ; preds = %88, %97
  %103 = phi i8 [ 1, %88 ], [ %100, %97 ]
  %104 = phi i1 [ true, %88 ], [ %99, %97 ]
  %105 = phi i1 [ false, %88 ], [ %80, %97 ]
  %106 = load ptr, ptr @PL_encoding, align 8
  %107 = icmp eq ptr %106, null
  %108 = select i1 %104, i1 %107, i1 false
  br i1 %108, label %109, label %126

109:                                              ; preds = %102
  %110 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !5
  %111 = icmp eq ptr %110, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %109
  %113 = call ptr @Perl__get_encoding() #13
  %114 = icmp eq ptr %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %112
  %116 = load i8, ptr %3, align 1, !tbaa !81
  br label %126

117:                                              ; preds = %109, %112
  %118 = call ptr @Perl_bytes_from_utf8(ptr noundef %71, ptr noundef nonnull %2, ptr noundef nonnull %3) #13
  %119 = load i8, ptr %3, align 1, !tbaa !81, !range !83, !noundef !84
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %121, label %327

121:                                              ; preds = %117
  %122 = call ptr @Perl_newSV(i64 noundef 0) #13
  %123 = load i64, ptr %2, align 8, !tbaa !71
  call void @Perl_sv_usepvn_flags(ptr noundef %122, ptr noundef %118, i64 noundef %123, i32 noundef 0) #13
  %124 = getelementptr inbounds %struct.sv, ptr %122, i64 0, i32 3
  %125 = load ptr, ptr %124, align 8, !tbaa !24
  br label %177

126:                                              ; preds = %115, %102
  %127 = phi i8 [ %116, %115 ], [ %103, %102 ]
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %132, label %129

129:                                              ; preds = %126
  %130 = load i64, ptr %1, align 8, !tbaa !71
  %131 = call ptr @Perl_newSVpvn(ptr noundef %57, i64 noundef %130) #13
  br label %136

132:                                              ; preds = %96, %126
  %133 = phi i1 [ %105, %126 ], [ true, %96 ]
  %134 = load i64, ptr %2, align 8, !tbaa !71
  %135 = call ptr @Perl_newSVpvn(ptr noundef %71, i64 noundef %134) #13
  br label %136

136:                                              ; preds = %132, %129
  %137 = phi i1 [ %105, %129 ], [ %133, %132 ]
  %138 = phi ptr [ %131, %129 ], [ %135, %132 ]
  %139 = load ptr, ptr @PL_encoding, align 8, !tbaa !5
  %140 = icmp eq ptr %139, null
  br i1 %140, label %141, label %147

141:                                              ; preds = %136
  %142 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !5
  %143 = icmp eq ptr %142, null
  br i1 %143, label %150, label %144

144:                                              ; preds = %141
  %145 = call ptr @Perl__get_encoding() #13
  %146 = icmp eq ptr %145, null
  br i1 %146, label %150, label %147

147:                                              ; preds = %136, %144
  %148 = call ptr @Perl__get_encoding() #13
  %149 = call ptr @Perl_sv_recode_to_utf8(ptr noundef %138, ptr noundef %148) #13
  br label %152

150:                                              ; preds = %141, %144
  %151 = call i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef %138, i32 noundef 2, i64 noundef 0) #13
  br label %152

152:                                              ; preds = %150, %147
  %153 = load i8, ptr %3, align 1, !tbaa !81, !range !83, !noundef !84
  %154 = icmp eq i8 %153, 0
  %155 = getelementptr inbounds %struct.sv, ptr %138, i64 0, i32 2
  %156 = load i32, ptr %155, align 4, !tbaa !16
  %157 = and i32 %156, 2098176
  %158 = icmp eq i32 %157, 1024
  br i1 %154, label %168, label %159

159:                                              ; preds = %152
  br i1 %158, label %160, label %166

160:                                              ; preds = %159
  %161 = load ptr, ptr %138, align 8, !tbaa !26
  %162 = getelementptr inbounds %struct.xpv, ptr %161, i64 0, i32 2
  %163 = load i64, ptr %162, align 8, !tbaa !55
  store i64 %163, ptr %1, align 8, !tbaa !71
  %164 = getelementptr inbounds %struct.sv, ptr %138, i64 0, i32 3
  %165 = load ptr, ptr %164, align 8, !tbaa !24
  br label %177

166:                                              ; preds = %159
  %167 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %138, ptr noundef nonnull %1, i32 noundef 34) #13
  br label %177

168:                                              ; preds = %152
  br i1 %158, label %169, label %175

169:                                              ; preds = %168
  %170 = load ptr, ptr %138, align 8, !tbaa !26
  %171 = getelementptr inbounds %struct.xpv, ptr %170, i64 0, i32 2
  %172 = load i64, ptr %171, align 8, !tbaa !55
  store i64 %172, ptr %2, align 8, !tbaa !71
  %173 = getelementptr inbounds %struct.sv, ptr %138, i64 0, i32 3
  %174 = load ptr, ptr %173, align 8, !tbaa !24
  br label %177

175:                                              ; preds = %168
  %176 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %138, ptr noundef nonnull %2, i32 noundef 34) #13
  br label %177

177:                                              ; preds = %88, %95, %121, %96, %169, %175, %160, %166, %97
  %178 = phi ptr [ %42, %97 ], [ %42, %166 ], [ %42, %160 ], [ %138, %175 ], [ %138, %169 ], [ %42, %96 ], [ %122, %121 ], [ %42, %95 ], [ %42, %88 ]
  %179 = phi ptr [ null, %97 ], [ %138, %166 ], [ %138, %160 ], [ %138, %175 ], [ %138, %169 ], [ null, %96 ], [ %122, %121 ], [ null, %95 ], [ null, %88 ]
  %180 = phi ptr [ %57, %97 ], [ %167, %166 ], [ %165, %160 ], [ %57, %175 ], [ %57, %169 ], [ %57, %96 ], [ %57, %121 ], [ %57, %95 ], [ %57, %88 ]
  %181 = phi ptr [ %71, %97 ], [ %71, %166 ], [ %71, %160 ], [ %176, %175 ], [ %174, %169 ], [ %71, %96 ], [ %125, %121 ], [ %71, %95 ], [ %71, %88 ]
  %182 = phi i1 [ %80, %97 ], [ true, %166 ], [ true, %160 ], [ %137, %175 ], [ %137, %169 ], [ false, %96 ], [ %105, %121 ], [ false, %95 ], [ false, %88 ]
  %183 = phi ptr [ %43, %97 ], [ %138, %166 ], [ %138, %160 ], [ %43, %175 ], [ %43, %169 ], [ %43, %96 ], [ %43, %121 ], [ %43, %95 ], [ %43, %88 ]
  %184 = getelementptr inbounds %struct.sv, ptr %183, i64 0, i32 2
  %185 = load i32, ptr %184, align 4, !tbaa !16
  %186 = and i32 %185, 2097152
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %205

188:                                              ; preds = %177
  %189 = and i32 %185, 2048
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %211, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds %struct.sv, ptr %183, i64 0, i32 3
  %193 = load ptr, ptr %192, align 8, !tbaa !24
  %194 = getelementptr inbounds %struct.sv, ptr %193, i64 0, i32 2
  %195 = load i32, ptr %194, align 4, !tbaa !16
  %196 = and i32 %195, 1048576
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %211, label %198

198:                                              ; preds = %191
  %199 = load ptr, ptr %193, align 8, !tbaa !26
  %200 = load ptr, ptr %199, align 8, !tbaa !38
  %201 = getelementptr inbounds %struct.hv, ptr %200, i64 0, i32 2
  %202 = load i32, ptr %201, align 4, !tbaa !40
  %203 = and i32 %202, 268435456
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %211, label %205

205:                                              ; preds = %198, %177
  %206 = load i64, ptr %1, align 8, !tbaa !71
  %207 = select i1 %182, i32 537395200, i32 524288
  %208 = call ptr @Perl_newSVpvn_flags(ptr noundef %180, i64 noundef %206, i32 noundef %207) #13
  %209 = getelementptr inbounds %struct.sv, ptr %208, i64 0, i32 3
  %210 = load ptr, ptr %209, align 8, !tbaa !24
  br label %211

211:                                              ; preds = %205, %198, %191, %188
  %212 = phi ptr [ %210, %205 ], [ %180, %198 ], [ %180, %191 ], [ %180, %188 ]
  %213 = phi ptr [ %208, %205 ], [ %183, %198 ], [ %183, %191 ], [ %183, %188 ]
  %214 = getelementptr inbounds %struct.sv, ptr %178, i64 0, i32 2
  %215 = load i32, ptr %214, align 4, !tbaa !16
  %216 = and i32 %215, 2097152
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %245

218:                                              ; preds = %211
  %219 = and i32 %215, 2048
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %235, label %221

221:                                              ; preds = %218
  %222 = getelementptr inbounds %struct.sv, ptr %178, i64 0, i32 3
  %223 = load ptr, ptr %222, align 8, !tbaa !24
  %224 = getelementptr inbounds %struct.sv, ptr %223, i64 0, i32 2
  %225 = load i32, ptr %224, align 4, !tbaa !16
  %226 = and i32 %225, 1048576
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %235, label %228

228:                                              ; preds = %221
  %229 = load ptr, ptr %223, align 8, !tbaa !26
  %230 = load ptr, ptr %229, align 8, !tbaa !38
  %231 = getelementptr inbounds %struct.hv, ptr %230, i64 0, i32 2
  %232 = load i32, ptr %231, align 4, !tbaa !40
  %233 = and i32 %232, 268435456
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %245

235:                                              ; preds = %228, %221, %218
  br i1 %14, label %236, label %257

236:                                              ; preds = %235
  %237 = and i32 %215, 65280
  %238 = icmp ne i32 %237, 0
  %239 = and i32 %215, 255
  %240 = icmp eq i32 %239, 8
  %241 = or i1 %238, %240
  %242 = and i32 %215, 16826623
  %243 = icmp eq i32 %242, 16777226
  %244 = or i1 %243, %241
  br i1 %244, label %253, label %245

245:                                              ; preds = %211, %228, %236
  %246 = load i64, ptr %2, align 8, !tbaa !71
  %247 = load i8, ptr %3, align 1, !tbaa !81, !range !83, !noundef !84
  %248 = icmp eq i8 %247, 0
  %249 = select i1 %248, i32 524288, i32 537395200
  %250 = call ptr @Perl_newSVpvn_flags(ptr noundef %181, i64 noundef %246, i32 noundef %249) #13
  %251 = getelementptr inbounds %struct.sv, ptr %250, i64 0, i32 3
  %252 = load ptr, ptr %251, align 8, !tbaa !24
  br i1 %38, label %261, label %282

253:                                              ; preds = %236
  br i1 %38, label %261, label %254

254:                                              ; preds = %253
  %255 = load i64, ptr %1, align 8
  %256 = call i64 @llvm.smin.i64(i64 %255, i64 0)
  br label %292

257:                                              ; preds = %235
  br i1 %38, label %261, label %258

258:                                              ; preds = %257
  %259 = load i64, ptr %1, align 8
  %260 = call i64 @llvm.smax.i64(i64 %259, i64 0)
  br label %288

261:                                              ; preds = %253, %257, %245
  %262 = phi ptr [ %181, %257 ], [ %252, %245 ], [ %181, %253 ]
  %263 = phi ptr [ %178, %257 ], [ %250, %245 ], [ %178, %253 ]
  %264 = icmp sgt i64 %39, 0
  %265 = select i1 %182, i1 %264, i1 false
  br i1 %265, label %266, label %268

266:                                              ; preds = %261
  %267 = call i64 @Perl_sv_pos_u2b_flags(ptr noundef nonnull %213, i64 noundef %39, ptr noundef null, i32 noundef 32) #13
  br label %268

268:                                              ; preds = %266, %261
  %269 = phi i64 [ %267, %266 ], [ %39, %261 ]
  br i1 %14, label %270, label %275

270:                                              ; preds = %268
  %271 = icmp slt i64 %269, 0
  %272 = load i64, ptr %1, align 8
  %273 = call i64 @llvm.smin.i64(i64 %269, i64 %272)
  %274 = select i1 %271, i64 0, i64 %273
  br label %292

275:                                              ; preds = %268
  %276 = load i64, ptr %2, align 8, !tbaa !71
  %277 = add i64 %276, %269
  %278 = icmp slt i64 %277, 0
  %279 = load i64, ptr %1, align 8
  %280 = call i64 @llvm.smin.i64(i64 %277, i64 %279)
  %281 = select i1 %278, i64 0, i64 %280
  br label %299

282:                                              ; preds = %245
  %283 = load i64, ptr %1, align 8
  %284 = select i1 %14, i64 0, i64 %283
  %285 = icmp slt i64 %284, 0
  %286 = call i64 @llvm.smin.i64(i64 %284, i64 %283)
  %287 = select i1 %285, i64 0, i64 %286
  br i1 %14, label %292, label %288

288:                                              ; preds = %258, %282
  %289 = phi i64 [ %260, %258 ], [ %287, %282 ]
  %290 = phi ptr [ %181, %258 ], [ %252, %282 ]
  %291 = load i64, ptr %2, align 8, !tbaa !71
  br label %299

292:                                              ; preds = %254, %270, %282
  %293 = phi ptr [ %263, %270 ], [ %250, %282 ], [ %178, %254 ]
  %294 = phi i64 [ %274, %270 ], [ %287, %282 ], [ %256, %254 ]
  %295 = phi i64 [ %272, %270 ], [ %283, %282 ], [ %255, %254 ]
  %296 = getelementptr inbounds i8, ptr %212, i64 %294
  %297 = getelementptr inbounds i8, ptr %212, i64 %295
  %298 = call ptr @Perl_fbm_instr(ptr noundef %296, ptr noundef %297, ptr noundef nonnull %293, i32 noundef 0) #13
  br label %306

299:                                              ; preds = %288, %275
  %300 = phi ptr [ %262, %275 ], [ %290, %288 ]
  %301 = phi i64 [ %276, %275 ], [ %291, %288 ]
  %302 = phi i64 [ %281, %275 ], [ %289, %288 ]
  %303 = getelementptr inbounds i8, ptr %212, i64 %302
  %304 = getelementptr inbounds i8, ptr %300, i64 %301
  %305 = call ptr @Perl_rninstr(ptr noundef %212, ptr noundef %303, ptr noundef %300, ptr noundef %304) #13
  br label %306

306:                                              ; preds = %299, %292
  %307 = phi ptr [ %298, %292 ], [ %305, %299 ]
  %308 = icmp eq ptr %307, null
  br i1 %308, label %317, label %309

309:                                              ; preds = %306
  %310 = ptrtoint ptr %307 to i64
  %311 = ptrtoint ptr %212 to i64
  %312 = sub i64 %310, %311
  %313 = icmp sgt i64 %312, 1
  %314 = and i1 %182, %313
  br i1 %314, label %315, label %317

315:                                              ; preds = %309
  %316 = call i64 @Perl_sv_pos_b2u_flags(ptr noundef nonnull %213, i64 noundef %312, i32 noundef 32) #13
  br label %317

317:                                              ; preds = %309, %306, %315
  %318 = phi i64 [ %316, %315 ], [ %312, %309 ], [ -1, %306 ]
  %319 = icmp eq ptr %179, null
  br i1 %319, label %327, label %320

320:                                              ; preds = %317
  %321 = getelementptr inbounds %struct.sv, ptr %179, i64 0, i32 1
  %322 = load i32, ptr %321, align 8, !tbaa !44
  %323 = icmp ugt i32 %322, 1
  br i1 %323, label %324, label %326

324:                                              ; preds = %320
  %325 = add i32 %322, -1
  store i32 %325, ptr %321, align 8, !tbaa !44
  br label %327

326:                                              ; preds = %320
  call void @Perl_sv_free2(ptr noundef nonnull %179, i32 noundef %322) #13
  br label %327

327:                                              ; preds = %326, %324, %317, %117
  %328 = phi i64 [ -1, %117 ], [ %318, %317 ], [ %318, %324 ], [ %318, %326 ]
  call void @Perl_sv_setiv(ptr noundef %10, i64 noundef %328) #13
  %329 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 2
  %330 = load i32, ptr %329, align 4, !tbaa !16
  %331 = and i32 %330, 4194304
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %335, label %333

333:                                              ; preds = %327
  %334 = call i32 @Perl_mg_set(ptr noundef nonnull %10) #13
  br label %335

335:                                              ; preds = %327, %333
  store ptr %10, ptr %41, align 8, !tbaa !5
  store ptr %41, ptr @PL_stack_sp, align 8, !tbaa !5
  %336 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %337 = load ptr, ptr %336, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  ret ptr %337
}

declare ptr @Perl__get_encoding() local_unnamed_addr #2

declare ptr @Perl_bytes_from_utf8(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

declare ptr @Perl_newSV(i64 noundef) local_unnamed_addr #2

declare void @Perl_sv_usepvn_flags(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_sv_recode_to_utf8(ptr noundef, ptr noundef) local_unnamed_addr #2

declare i64 @Perl_sv_pos_u2b_flags(ptr noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_fbm_instr(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_rninstr(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_sprintf() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %4 = getelementptr inbounds i32, ptr %3, i64 -1
  store ptr %4, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %5 = load i32, ptr %3, align 4, !tbaa !57
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds ptr, ptr %2, i64 %6
  %8 = ptrtoint ptr %7 to i64
  %9 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %10 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 3
  %12 = load i64, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds ptr, ptr %9, i64 %12
  %14 = load ptr, ptr %13, align 8, !tbaa !5
  %15 = load i8, ptr @PL_tainting, align 1, !tbaa !81, !range !83, !noundef !84
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %0
  tail call void @Perl_sv_untaint(ptr noundef %14) #13
  br label %18

18:                                               ; preds = %0, %17
  %19 = ptrtoint ptr %1 to i64
  %20 = sub i64 %19, %8
  %21 = lshr exact i64 %20, 3
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds ptr, ptr %7, i64 1
  tail call void @Perl_do_sprintf(ptr noundef %14, i32 noundef %22, ptr noundef nonnull %23) #13
  %24 = getelementptr inbounds %struct.sv, ptr %14, i64 0, i32 2
  %25 = load i32, ptr %24, align 4, !tbaa !16
  %26 = and i32 %25, 14680064
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %18
  %29 = tail call zeroext i1 @Perl_sv_tainted(ptr noundef nonnull %14) #13
  br i1 %29, label %30, label %31

30:                                               ; preds = %28
  store i8 1, ptr @PL_tainted, align 1, !tbaa !81
  br label %31

31:                                               ; preds = %18, %28, %30
  %32 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %33 = load i32, ptr %24, align 4, !tbaa !16
  %34 = and i32 %33, 4194304
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  %37 = tail call i32 @Perl_mg_set(ptr noundef nonnull %14) #13
  br label %38

38:                                               ; preds = %31, %36
  %39 = getelementptr inbounds ptr, ptr %32, i64 %6
  %40 = getelementptr inbounds ptr, ptr %39, i64 1
  store ptr %14, ptr %40, align 8, !tbaa !5
  store ptr %40, ptr @PL_stack_sp, align 8, !tbaa !5
  %41 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %42 = load ptr, ptr %41, align 8, !tbaa !13
  ret ptr %42
}

declare void @Perl_do_sprintf(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

declare zeroext i1 @Perl_sv_tainted(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_ord() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %4 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 3
  %6 = load i64, ptr %5, align 8, !tbaa !14
  %7 = getelementptr inbounds ptr, ptr %3, i64 %6
  %8 = load ptr, ptr %7, align 8, !tbaa !5
  %9 = load ptr, ptr %2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  %10 = getelementptr inbounds %struct.sv, ptr %9, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !16
  %12 = and i32 %11, 2098176
  %13 = icmp eq i32 %12, 1024
  br i1 %13, label %14, label %20

14:                                               ; preds = %0
  %15 = load ptr, ptr %9, align 8, !tbaa !26
  %16 = getelementptr inbounds %struct.xpv, ptr %15, i64 0, i32 2
  %17 = load i64, ptr %16, align 8, !tbaa !55
  store i64 %17, ptr %1, align 8, !tbaa !71
  %18 = getelementptr inbounds %struct.sv, ptr %9, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8, !tbaa !24
  br label %22

20:                                               ; preds = %0
  %21 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %9, ptr noundef nonnull %1, i32 noundef 34) #13
  br label %22

22:                                               ; preds = %20, %14
  %23 = phi ptr [ %19, %14 ], [ %21, %20 ]
  %24 = load ptr, ptr @PL_encoding, align 8, !tbaa !5
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %32

26:                                               ; preds = %22
  %27 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !5
  %28 = icmp eq ptr %27, null
  br i1 %28, label %55, label %29

29:                                               ; preds = %26
  %30 = call ptr @Perl__get_encoding() #13
  %31 = icmp eq ptr %30, null
  br i1 %31, label %55, label %32

32:                                               ; preds = %22, %29
  %33 = load i32, ptr %10, align 4, !tbaa !16
  %34 = and i32 %33, 1024
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %55, label %36

36:                                               ; preds = %32
  %37 = and i32 %33, 536870912
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  %40 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %41 = getelementptr inbounds %struct.cop, ptr %40, i64 0, i32 10
  %42 = load i32, ptr %41, align 8, !tbaa !66
  %43 = and i32 %42, 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %39, %36
  %46 = call ptr @Perl_newSVsv(ptr noundef nonnull %9) #13
  %47 = call ptr @Perl_sv_2mortal(ptr noundef %46) #13
  %48 = call ptr @Perl__get_encoding() #13
  %49 = call ptr @Perl_sv_recode_to_utf8(ptr noundef %47, ptr noundef %48) #13
  %50 = load i8, ptr %49, align 1, !tbaa !24
  %51 = zext i8 %50 to i64
  %52 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %51
  %53 = load i8, ptr %52, align 1, !tbaa !24
  %54 = zext i8 %53 to i64
  store i64 %54, ptr %1, align 8, !tbaa !71
  br label %55

55:                                               ; preds = %32, %39, %45, %29, %26
  %56 = phi ptr [ %49, %45 ], [ %23, %39 ], [ %23, %32 ], [ %23, %29 ], [ %23, %26 ]
  %57 = phi ptr [ %47, %45 ], [ %9, %39 ], [ %9, %32 ], [ %9, %29 ], [ %9, %26 ]
  %58 = getelementptr inbounds %struct.sv, ptr %57, i64 0, i32 2
  %59 = load i32, ptr %58, align 4, !tbaa !16
  %60 = and i32 %59, 536870912
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %71, label %62

62:                                               ; preds = %55
  %63 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %64 = getelementptr inbounds %struct.cop, ptr %63, i64 0, i32 10
  %65 = load i32, ptr %64, align 8, !tbaa !66
  %66 = and i32 %65, 8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  %69 = load i64, ptr %1, align 8, !tbaa !71
  %70 = call i64 @Perl_utf8n_to_uvchr(ptr noundef %56, i64 noundef %69, ptr noundef null, i32 noundef 1) #13
  br label %74

71:                                               ; preds = %62, %55
  %72 = load i8, ptr %56, align 1, !tbaa !24
  %73 = zext i8 %72 to i64
  br label %74

74:                                               ; preds = %71, %68
  %75 = phi i64 [ %70, %68 ], [ %73, %71 ]
  call void @Perl_sv_setuv(ptr noundef %8, i64 noundef %75) #13
  %76 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 2
  %77 = load i32, ptr %76, align 4, !tbaa !16
  %78 = and i32 %77, 4194304
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %74
  %81 = call i32 @Perl_mg_set(ptr noundef nonnull %8) #13
  br label %82

82:                                               ; preds = %74, %80
  store ptr %8, ptr %2, align 8, !tbaa !5
  %83 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %84 = load ptr, ptr %83, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  ret ptr %84
}

declare i64 @Perl_utf8n_to_uvchr(ptr noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_chr() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %5 = load i64, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = load ptr, ptr %1, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !16
  %11 = and i32 %10, 2097152
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %0
  %14 = tail call i32 @Perl_mg_get(ptr noundef nonnull %8) #13
  %15 = load i32, ptr %9, align 4, !tbaa !16
  br label %16

16:                                               ; preds = %0, %13
  %17 = phi i32 [ %10, %0 ], [ %15, %13 ]
  %18 = and i32 %17, 2048
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %36, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !24
  %23 = getelementptr inbounds %struct.sv, ptr %22, i64 0, i32 2
  %24 = load i32, ptr %23, align 4, !tbaa !16
  %25 = and i32 %24, 1048576
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %20
  %28 = load ptr, ptr %22, align 8, !tbaa !26
  %29 = load ptr, ptr %28, align 8, !tbaa !38
  %30 = getelementptr inbounds %struct.hv, ptr %29, i64 0, i32 2
  %31 = load i32, ptr %30, align 4, !tbaa !40
  %32 = and i32 %31, 268435456
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %27
  %35 = tail call ptr @Perl_sv_2num(ptr noundef nonnull %8) #13
  br label %36

36:                                               ; preds = %16, %20, %27, %34
  %37 = phi ptr [ %35, %34 ], [ %8, %27 ], [ %8, %20 ], [ %8, %16 ]
  %38 = tail call zeroext i1 @Perl_isinfnansv(ptr noundef %37) #13
  br i1 %38, label %39, label %52

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 2
  %41 = load i32, ptr %40, align 4, !tbaa !16
  %42 = and i32 %41, 2097664
  %43 = icmp eq i32 %42, 512
  br i1 %43, label %44, label %48

44:                                               ; preds = %39
  %45 = load ptr, ptr %37, align 8, !tbaa !26
  %46 = getelementptr inbounds %struct.xpvnv, ptr %45, i64 0, i32 5
  %47 = load double, ptr %46, align 8, !tbaa !24
  br label %50

48:                                               ; preds = %39
  %49 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %37, i32 noundef 2) #13
  br label %50

50:                                               ; preds = %48, %44
  %51 = phi fast double [ %47, %44 ], [ %49, %48 ]
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.39, double noundef nofpclass(nan inf) %51) #13
  br label %125

52:                                               ; preds = %36
  %53 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %54 = getelementptr inbounds %struct.cop, ptr %53, i64 0, i32 10
  %55 = load i32, ptr %54, align 8, !tbaa !66
  %56 = and i32 %55, 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %114

58:                                               ; preds = %52
  %59 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 2
  %60 = load i32, ptr %59, align 4, !tbaa !16
  %61 = and i32 %60, -2147479552
  %62 = icmp eq i32 %61, 4096
  br i1 %62, label %63, label %77

63:                                               ; preds = %58
  %64 = and i32 %60, 256
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %70, label %66

66:                                               ; preds = %63
  %67 = load ptr, ptr %37, align 8, !tbaa !26
  %68 = getelementptr inbounds %struct.xpviv, ptr %67, i64 0, i32 4
  %69 = load i64, ptr %68, align 8, !tbaa !24
  br label %72

70:                                               ; preds = %63
  %71 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  br label %72

72:                                               ; preds = %70, %66
  %73 = phi i64 [ %69, %66 ], [ %71, %70 ]
  %74 = icmp slt i64 %73, 0
  br i1 %74, label %104, label %75

75:                                               ; preds = %72
  %76 = load i32, ptr %59, align 4, !tbaa !16
  br label %77

77:                                               ; preds = %75, %58
  %78 = phi i32 [ %76, %75 ], [ %60, %58 ]
  %79 = and i32 %78, 8192
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %92

81:                                               ; preds = %77
  %82 = and i32 %78, 65280
  %83 = icmp ne i32 %82, 0
  %84 = and i32 %78, 255
  %85 = icmp eq i32 %84, 8
  %86 = or i1 %83, %85
  %87 = and i32 %78, 16826623
  %88 = icmp eq i32 %87, 16777226
  %89 = or i1 %88, %86
  %90 = icmp sgt i32 %78, -1
  %91 = and i1 %90, %89
  br i1 %91, label %92, label %114

92:                                               ; preds = %81, %77
  %93 = and i32 %78, 512
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %99, label %95

95:                                               ; preds = %92
  %96 = load ptr, ptr %37, align 8, !tbaa !26
  %97 = getelementptr inbounds %struct.xpvnv, ptr %96, i64 0, i32 5
  %98 = load double, ptr %97, align 8, !tbaa !24
  br label %101

99:                                               ; preds = %92
  %100 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  br label %101

101:                                              ; preds = %99, %95
  %102 = phi fast double [ %98, %95 ], [ %100, %99 ]
  %103 = fcmp fast olt double %102, 0.000000e+00
  br i1 %103, label %104, label %114

104:                                              ; preds = %101, %72
  %105 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 44) #13
  br i1 %105, label %106, label %125

106:                                              ; preds = %104
  %107 = load i32, ptr %59, align 4, !tbaa !16
  %108 = and i32 %107, 2097152
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %106
  %111 = tail call ptr @Perl_sv_newmortal() #13
  tail call void @Perl_sv_setsv_flags(ptr noundef %111, ptr noundef nonnull %37, i32 noundef 1536) #13
  br label %112

112:                                              ; preds = %110, %106
  %113 = phi ptr [ %111, %110 ], [ %37, %106 ]
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 44, ptr noundef nonnull @.str.40, ptr noundef %113) #13
  br label %125

114:                                              ; preds = %81, %101, %52
  %115 = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 2
  %116 = load i32, ptr %115, align 4, !tbaa !16
  %117 = and i32 %116, 256
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %123, label %119

119:                                              ; preds = %114
  %120 = load ptr, ptr %37, align 8, !tbaa !26
  %121 = getelementptr inbounds %struct.xpvuv, ptr %120, i64 0, i32 4
  %122 = load i64, ptr %121, align 8, !tbaa !24
  br label %125

123:                                              ; preds = %114
  %124 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %37, i32 noundef 0) #13
  br label %125

125:                                              ; preds = %119, %123, %104, %112, %50
  %126 = phi i64 [ undef, %50 ], [ 65533, %112 ], [ 65533, %104 ], [ %122, %119 ], [ %124, %123 ]
  %127 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %128 = load i32, ptr %127, align 4, !tbaa !16
  %129 = and i32 %128, 255
  %130 = icmp ugt i32 %129, 2
  br i1 %130, label %132, label %131

131:                                              ; preds = %125
  tail call void @Perl_sv_upgrade(ptr noundef nonnull %7, i32 noundef 3) #13
  br label %132

132:                                              ; preds = %131, %125
  %133 = icmp ugt i64 %126, 255
  br i1 %133, label %136, label %134

134:                                              ; preds = %132
  %135 = load i32, ptr %127, align 4, !tbaa !16
  br label %196

136:                                              ; preds = %132
  %137 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %138 = getelementptr inbounds %struct.cop, ptr %137, i64 0, i32 10
  %139 = load i32, ptr %138, align 8, !tbaa !66
  %140 = and i32 %139, 8
  %141 = icmp eq i32 %140, 0
  %142 = load i32, ptr %127, align 4, !tbaa !16
  br i1 %141, label %143, label %196

143:                                              ; preds = %136
  %144 = and i32 %142, 268435456
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %165

146:                                              ; preds = %143
  %147 = load ptr, ptr %7, align 8, !tbaa !26
  %148 = getelementptr inbounds %struct.xpv, ptr %147, i64 0, i32 3
  %149 = load i64, ptr %148, align 8, !tbaa !24
  %150 = icmp ult i64 %126, 2048
  br i1 %150, label %162, label %151

151:                                              ; preds = %146
  %152 = icmp ult i64 %126, 65536
  br i1 %152, label %162, label %153

153:                                              ; preds = %151
  %154 = icmp ult i64 %126, 2097152
  br i1 %154, label %162, label %155

155:                                              ; preds = %153
  %156 = icmp ult i64 %126, 67108864
  br i1 %156, label %162, label %157

157:                                              ; preds = %155
  %158 = icmp ult i64 %126, 2147483648
  br i1 %158, label %162, label %159

159:                                              ; preds = %157
  %160 = icmp ult i64 %126, 68719476736
  %161 = select i1 %160, i64 8, i64 14
  br label %162

162:                                              ; preds = %146, %153, %159, %157, %155, %151
  %163 = phi i64 [ 3, %146 ], [ 4, %151 ], [ 5, %153 ], [ 6, %155 ], [ %161, %159 ], [ 7, %157 ]
  %164 = icmp ult i64 %149, %163
  br i1 %164, label %165, label %181

165:                                              ; preds = %143, %162
  %166 = icmp ult i64 %126, 2048
  br i1 %166, label %178, label %167

167:                                              ; preds = %165
  %168 = icmp ult i64 %126, 65536
  br i1 %168, label %178, label %169

169:                                              ; preds = %167
  %170 = icmp ult i64 %126, 2097152
  br i1 %170, label %178, label %171

171:                                              ; preds = %169
  %172 = icmp ult i64 %126, 67108864
  br i1 %172, label %178, label %173

173:                                              ; preds = %171
  %174 = icmp ult i64 %126, 2147483648
  br i1 %174, label %178, label %175

175:                                              ; preds = %173
  %176 = icmp ult i64 %126, 68719476736
  %177 = select i1 %176, i64 8, i64 14
  br label %178

178:                                              ; preds = %165, %169, %175, %173, %171, %167
  %179 = phi i64 [ 3, %165 ], [ 4, %167 ], [ 5, %169 ], [ 6, %171 ], [ %177, %175 ], [ 7, %173 ]
  %180 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %7, i64 noundef %179) #13
  br label %181

181:                                              ; preds = %162, %178
  %182 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 3
  %183 = load ptr, ptr %182, align 8, !tbaa !24
  %184 = tail call ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef %183, i64 noundef %126, i64 noundef 0) #13
  %185 = load ptr, ptr %182, align 8, !tbaa !24
  %186 = ptrtoint ptr %184 to i64
  %187 = ptrtoint ptr %185 to i64
  %188 = sub i64 %186, %187
  %189 = load ptr, ptr %7, align 8, !tbaa !26
  %190 = getelementptr inbounds %struct.xpv, ptr %189, i64 0, i32 2
  store i64 %188, ptr %190, align 8, !tbaa !55
  store i8 0, ptr %184, align 1, !tbaa !24
  %191 = load i32, ptr %127, align 4, !tbaa !16
  %192 = and i32 %191, 1610547455
  %193 = or i32 %192, 536888320
  store i32 %193, ptr %127, align 4, !tbaa !16
  %194 = and i32 %191, 4194304
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %283, label %281

196:                                              ; preds = %134, %136
  %197 = phi i32 [ %135, %134 ], [ %142, %136 ]
  %198 = and i32 %197, 268435456
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %205

200:                                              ; preds = %196
  %201 = load ptr, ptr %7, align 8, !tbaa !26
  %202 = getelementptr inbounds %struct.xpv, ptr %201, i64 0, i32 3
  %203 = load i64, ptr %202, align 8, !tbaa !24
  %204 = icmp ult i64 %203, 2
  br i1 %204, label %205, label %208

205:                                              ; preds = %200, %196
  %206 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %7, i64 noundef 2) #13
  %207 = load ptr, ptr %7, align 8, !tbaa !26
  br label %208

208:                                              ; preds = %200, %205
  %209 = phi ptr [ %201, %200 ], [ %207, %205 ]
  %210 = getelementptr inbounds %struct.xpv, ptr %209, i64 0, i32 2
  store i64 1, ptr %210, align 8, !tbaa !55
  %211 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 3
  %212 = load ptr, ptr %211, align 8, !tbaa !24
  %213 = trunc i64 %126 to i8
  %214 = getelementptr inbounds i8, ptr %212, i64 1
  store i8 %213, ptr %212, align 1, !tbaa !24
  store i8 0, ptr %214, align 1, !tbaa !24
  %215 = load i32, ptr %127, align 4, !tbaa !16
  %216 = and i32 %215, 1610547455
  %217 = or i32 %216, 17408
  store i32 %217, ptr %127, align 4, !tbaa !16
  %218 = load ptr, ptr @PL_encoding, align 8, !tbaa !5
  %219 = icmp eq ptr %218, null
  br i1 %219, label %220, label %226

220:                                              ; preds = %208
  %221 = load ptr, ptr @PL_lex_encoding, align 8, !tbaa !5
  %222 = icmp eq ptr %221, null
  br i1 %222, label %277, label %223

223:                                              ; preds = %220
  %224 = tail call ptr @Perl__get_encoding() #13
  %225 = icmp eq ptr %224, null
  br i1 %225, label %277, label %226

226:                                              ; preds = %208, %223
  %227 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %228 = getelementptr inbounds %struct.cop, ptr %227, i64 0, i32 10
  %229 = load i32, ptr %228, align 8, !tbaa !66
  %230 = and i32 %229, 8
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %277

232:                                              ; preds = %226
  %233 = tail call ptr @Perl__get_encoding() #13
  %234 = tail call ptr @Perl_sv_recode_to_utf8(ptr noundef nonnull %7, ptr noundef %233) #13
  %235 = load ptr, ptr %211, align 8, !tbaa !24
  %236 = load ptr, ptr %7, align 8, !tbaa !26
  %237 = getelementptr inbounds %struct.xpv, ptr %236, i64 0, i32 2
  %238 = load i64, ptr %237, align 8, !tbaa !55
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %258, label %240

240:                                              ; preds = %232
  %241 = tail call zeroext i1 @Perl_is_utf8_string(ptr noundef %235, i64 noundef %238) #13
  br i1 %241, label %242, label %258

242:                                              ; preds = %240
  %243 = load ptr, ptr %7, align 8, !tbaa !26
  %244 = getelementptr inbounds %struct.xpv, ptr %243, i64 0, i32 2
  %245 = load i64, ptr %244, align 8, !tbaa !55
  %246 = icmp sgt i64 %245, 2
  br i1 %246, label %247, label %277

247:                                              ; preds = %242
  %248 = load i8, ptr %235, align 1, !tbaa !24
  %249 = icmp eq i8 %248, -17
  br i1 %249, label %250, label %277

250:                                              ; preds = %247
  %251 = getelementptr inbounds i8, ptr %235, i64 1
  %252 = load i8, ptr %251, align 1, !tbaa !24
  %253 = icmp eq i8 %252, -65
  br i1 %253, label %254, label %277

254:                                              ; preds = %250
  %255 = getelementptr inbounds i8, ptr %235, i64 2
  %256 = load i8, ptr %255, align 1, !tbaa !24
  %257 = icmp eq i8 %256, -67
  br i1 %257, label %258, label %277

258:                                              ; preds = %254, %240, %232
  %259 = load i32, ptr %127, align 4, !tbaa !16
  %260 = and i32 %259, 268435456
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %267

262:                                              ; preds = %258
  %263 = load ptr, ptr %7, align 8, !tbaa !26
  %264 = getelementptr inbounds %struct.xpv, ptr %263, i64 0, i32 3
  %265 = load i64, ptr %264, align 8, !tbaa !24
  %266 = icmp ult i64 %265, 2
  br i1 %266, label %267, label %270

267:                                              ; preds = %262, %258
  %268 = tail call ptr @Perl_sv_grow(ptr noundef nonnull %7, i64 noundef 2) #13
  %269 = load ptr, ptr %7, align 8, !tbaa !26
  br label %270

270:                                              ; preds = %262, %267
  %271 = phi ptr [ %263, %262 ], [ %269, %267 ]
  %272 = load ptr, ptr %211, align 8, !tbaa !24
  %273 = getelementptr inbounds %struct.xpv, ptr %271, i64 0, i32 2
  store i64 1, ptr %273, align 8, !tbaa !55
  %274 = getelementptr inbounds i8, ptr %272, i64 1
  store i8 %213, ptr %272, align 1, !tbaa !24
  store i8 0, ptr %274, align 1, !tbaa !24
  %275 = load i32, ptr %127, align 4, !tbaa !16
  %276 = and i32 %275, -536870913
  store i32 %276, ptr %127, align 4, !tbaa !16
  br label %277

277:                                              ; preds = %270, %242, %247, %250, %254, %220, %223, %226
  %278 = load i32, ptr %127, align 4, !tbaa !16
  %279 = and i32 %278, 4194304
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %283, label %281

281:                                              ; preds = %277, %181
  %282 = tail call i32 @Perl_mg_set(ptr noundef nonnull %7) #13
  br label %283

283:                                              ; preds = %281, %277, %181
  store ptr %7, ptr %1, align 8, !tbaa !5
  %284 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %285 = load ptr, ptr %284, align 8, !tbaa !13
  ret ptr %285
}

declare ptr @Perl_sv_2num(ptr noundef) local_unnamed_addr #2

declare zeroext i1 @Perl_isinfnansv(ptr noundef) local_unnamed_addr #2

declare void @Perl_warner(i32 noundef, ptr noundef, ...) local_unnamed_addr #2

declare void @Perl_sv_upgrade(ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

declare zeroext i1 @Perl_is_utf8_string(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_crypt() local_unnamed_addr #0 {
  %1 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.41) #13
  ret ptr %1
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_ucfirst() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = alloca [14 x i8], align 1
  %3 = alloca i64, align 8
  %4 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %5 = load ptr, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  %6 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 4
  %8 = load i16, ptr %7, align 8
  %9 = and i16 %8, 511
  call void @llvm.lifetime.start.p0(i64 14, ptr nonnull %2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #13
  %10 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !16
  %12 = and i32 %11, 2098176
  %13 = icmp eq i32 %12, 1024
  br i1 %13, label %14, label %20

14:                                               ; preds = %0
  %15 = load ptr, ptr %5, align 8, !tbaa !26
  %16 = getelementptr inbounds %struct.xpv, ptr %15, i64 0, i32 2
  %17 = load i64, ptr %16, align 8, !tbaa !55
  store i64 %17, ptr %1, align 8, !tbaa !71
  %18 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8, !tbaa !24
  br label %23

20:                                               ; preds = %0
  %21 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %5, ptr noundef nonnull %1, i32 noundef 34) #13
  %22 = load i32, ptr %10, align 4, !tbaa !16
  br label %23

23:                                               ; preds = %20, %14
  %24 = phi i32 [ %11, %14 ], [ %22, %20 ]
  %25 = phi ptr [ %19, %14 ], [ %21, %20 ]
  %26 = and i32 %24, 134283264
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %38

28:                                               ; preds = %23
  %29 = and i32 %24, 131072
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %28
  %32 = and i32 %24, 4718592
  %33 = icmp eq i32 %32, 524288
  br i1 %33, label %34, label %38

34:                                               ; preds = %31
  %35 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 1
  %36 = load i32, ptr %35, align 8, !tbaa !44
  %37 = icmp eq i32 %36, 1
  br label %38

38:                                               ; preds = %28, %34, %31, %23
  %39 = phi i1 [ false, %23 ], [ true, %28 ], [ false, %31 ], [ %37, %34 ]
  %40 = load i64, ptr %1, align 8, !tbaa !71
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %150, label %42

42:                                               ; preds = %38
  %43 = and i32 %24, 536870912
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %70, label %45

45:                                               ; preds = %42
  %46 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %47 = getelementptr inbounds %struct.cop, ptr %46, i64 0, i32 10
  %48 = load i32, ptr %47, align 8, !tbaa !66
  %49 = and i32 %48, 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %70

51:                                               ; preds = %45
  %52 = load i8, ptr %25, align 1, !tbaa !24
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %53
  %55 = load i8, ptr %54, align 1, !tbaa !24
  %56 = zext i8 %55 to i64
  %57 = icmp eq i16 %9, 130
  br i1 %57, label %58, label %60

58:                                               ; preds = %51
  %59 = call i64 @Perl__to_utf8_title_flags(ptr noundef nonnull %25, ptr noundef nonnull %2, ptr noundef nonnull %3, i1 noundef zeroext false) #13
  br label %62

60:                                               ; preds = %51
  %61 = call i64 @Perl__to_utf8_lower_flags(ptr noundef nonnull %25, ptr noundef nonnull %2, ptr noundef nonnull %3, i1 noundef zeroext false) #13
  br label %62

62:                                               ; preds = %60, %58
  %63 = load i64, ptr %3, align 8, !tbaa !71
  %64 = icmp eq i64 %63, %56
  %65 = select i1 %64, i1 %39, i1 false
  %66 = load i64, ptr %1, align 8, !tbaa !71
  %67 = sub i64 %63, %56
  %68 = add i64 %67, 1
  %69 = add i64 %68, %66
  br i1 %65, label %153, label %165

70:                                               ; preds = %45, %42
  store i64 1, ptr %3, align 8, !tbaa !71
  %71 = add i64 %40, 1
  %72 = icmp eq i16 %9, 131
  %73 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %74 = getelementptr inbounds %struct.cop, ptr %73, i64 0, i32 10
  %75 = load i32, ptr %74, align 8, !tbaa !66
  %76 = and i32 %75, 2048
  %77 = icmp eq i32 %76, 0
  br i1 %72, label %78, label %108

78:                                               ; preds = %70
  br i1 %77, label %79, label %88

79:                                               ; preds = %78
  %80 = and i32 %75, 16
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %97, label %82

82:                                               ; preds = %79
  %83 = call zeroext i1 @Perl__is_in_locale_category(i1 noundef zeroext false, i32 noundef -1) #13
  br i1 %83, label %84, label %97

84:                                               ; preds = %82
  %85 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %86 = getelementptr inbounds %struct.cop, ptr %85, i64 0, i32 10
  %87 = load i32, ptr %86, align 8, !tbaa !66
  br label %88

88:                                               ; preds = %84, %78
  %89 = phi i32 [ %87, %84 ], [ %75, %78 ]
  %90 = and i32 %89, 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %97

92:                                               ; preds = %88
  %93 = load i8, ptr %25, align 1, !tbaa !24
  %94 = zext i8 %93 to i64
  %95 = getelementptr inbounds [0 x i8], ptr @PL_latin1_lc, i64 0, i64 %94
  %96 = load i8, ptr %95, align 1, !tbaa !24
  br label %106

97:                                               ; preds = %88, %82, %79
  %98 = load i8, ptr %25, align 1, !tbaa !24
  %99 = zext i8 %98 to i64
  %100 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %99
  %101 = load i32, ptr %100, align 4, !tbaa !57
  %102 = and i32 %101, 16400
  %103 = icmp eq i32 %102, 16400
  %104 = add i8 %98, 32
  %105 = select i1 %103, i8 %104, i8 %98
  br label %106

106:                                              ; preds = %97, %92
  %107 = phi i8 [ %96, %92 ], [ %105, %97 ]
  store i8 %107, ptr %2, align 1, !tbaa !24
  br i1 %39, label %153, label %165

108:                                              ; preds = %70
  br i1 %77, label %109, label %118

109:                                              ; preds = %108
  %110 = and i32 %75, 16
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %122, label %112

112:                                              ; preds = %109
  %113 = call zeroext i1 @Perl__is_in_locale_category(i1 noundef zeroext false, i32 noundef -1) #13
  br i1 %113, label %114, label %122

114:                                              ; preds = %112
  %115 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %116 = getelementptr inbounds %struct.cop, ptr %115, i64 0, i32 10
  %117 = load i32, ptr %116, align 8, !tbaa !66
  br label %118

118:                                              ; preds = %114, %108
  %119 = phi i32 [ %117, %114 ], [ %75, %108 ]
  %120 = and i32 %119, 8
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %131, label %122

122:                                              ; preds = %118, %112, %109
  %123 = load i8, ptr %25, align 1, !tbaa !24
  %124 = zext i8 %123 to i64
  %125 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %124
  %126 = load i32, ptr %125, align 4, !tbaa !57
  %127 = and i32 %126, 16392
  %128 = icmp eq i32 %127, 16392
  %129 = add i8 %123, -32
  %130 = select i1 %128, i8 %129, i8 %123
  store i8 %130, ptr %2, align 1, !tbaa !24
  br i1 %39, label %153, label %165

131:                                              ; preds = %118
  %132 = load i8, ptr %25, align 1, !tbaa !24
  %133 = call i64 @Perl__to_upper_title_latin1(i8 noundef zeroext %132, ptr noundef nonnull %2, ptr noundef nonnull %3, i8 noundef signext 115) #13
  %134 = load i64, ptr %3, align 8, !tbaa !71
  %135 = icmp ugt i64 %134, 1
  br i1 %135, label %136, label %150

136:                                              ; preds = %131
  %137 = load i8, ptr %2, align 1, !tbaa !24
  %138 = and i8 %137, -2
  %139 = icmp eq i8 %138, -62
  br i1 %139, label %140, label %142

140:                                              ; preds = %136
  %141 = trunc i64 %133 to i8
  store i8 %141, ptr %2, align 1, !tbaa !24
  store i64 1, ptr %3, align 8, !tbaa !71
  br i1 %39, label %153, label %165

142:                                              ; preds = %136
  %143 = icmp ugt i64 %133, 255
  %144 = load i64, ptr %1, align 8, !tbaa !71
  br i1 %143, label %145, label %148

145:                                              ; preds = %142
  %146 = shl i64 %144, 1
  %147 = or i64 %146, 1
  br label %165

148:                                              ; preds = %142
  %149 = add i64 %144, 2
  br label %165

150:                                              ; preds = %131, %38
  %151 = phi i64 [ 0, %38 ], [ 1, %131 ]
  %152 = phi i64 [ 1, %38 ], [ %71, %131 ]
  br i1 %39, label %153, label %165

153:                                              ; preds = %140, %62, %122, %106, %150
  %154 = phi i64 [ %71, %106 ], [ %152, %150 ], [ %71, %122 ], [ %69, %62 ], [ %71, %140 ]
  %155 = phi i1 [ false, %106 ], [ false, %150 ], [ false, %122 ], [ true, %62 ], [ false, %140 ]
  %156 = load i32, ptr %10, align 4, !tbaa !16
  %157 = and i32 %156, 430018304
  %158 = icmp eq i32 %157, 1024
  br i1 %158, label %159, label %202

159:                                              ; preds = %153
  %160 = load ptr, ptr %5, align 8, !tbaa !26
  %161 = getelementptr inbounds %struct.xpv, ptr %160, i64 0, i32 2
  %162 = load i64, ptr %161, align 8, !tbaa !55
  store i64 %162, ptr %1, align 8, !tbaa !71
  %163 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 3
  %164 = load ptr, ptr %163, align 8, !tbaa !24
  br i1 %155, label %243, label %257

165:                                              ; preds = %148, %145, %140, %62, %122, %106, %150
  %166 = phi i64 [ %152, %150 ], [ %71, %106 ], [ %71, %122 ], [ %69, %62 ], [ %71, %140 ], [ %149, %148 ], [ %147, %145 ]
  %167 = phi i64 [ %151, %150 ], [ 1, %106 ], [ 1, %122 ], [ %56, %62 ], [ 1, %140 ], [ 1, %148 ], [ 2, %145 ]
  %168 = phi i1 [ false, %150 ], [ false, %106 ], [ false, %122 ], [ true, %62 ], [ false, %140 ], [ false, %148 ], [ true, %145 ]
  %169 = phi i1 [ false, %150 ], [ false, %106 ], [ false, %122 ], [ false, %62 ], [ false, %140 ], [ false, %148 ], [ true, %145 ]
  %170 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %171 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %172 = getelementptr inbounds %struct.op, ptr %171, i64 0, i32 3
  %173 = load i64, ptr %172, align 8, !tbaa !14
  %174 = getelementptr inbounds ptr, ptr %170, i64 %173
  %175 = load ptr, ptr %174, align 8, !tbaa !5
  %176 = getelementptr inbounds %struct.sv, ptr %175, i64 0, i32 2
  %177 = load i32, ptr %176, align 4, !tbaa !16
  %178 = and i32 %177, 255
  %179 = icmp ugt i32 %178, 2
  br i1 %179, label %182, label %180

180:                                              ; preds = %165
  call void @Perl_sv_upgrade(ptr noundef nonnull %175, i32 noundef 3) #13
  %181 = load i32, ptr %176, align 4, !tbaa !16
  br label %182

182:                                              ; preds = %180, %165
  %183 = phi i32 [ %181, %180 ], [ %177, %165 ]
  %184 = and i32 %183, 268435456
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %191

186:                                              ; preds = %182
  %187 = load ptr, ptr %175, align 8, !tbaa !26
  %188 = getelementptr inbounds %struct.xpv, ptr %187, i64 0, i32 3
  %189 = load i64, ptr %188, align 8, !tbaa !24
  %190 = icmp ult i64 %189, %166
  br i1 %190, label %191, label %194

191:                                              ; preds = %186, %182
  %192 = call ptr @Perl_sv_grow(ptr noundef nonnull %175, i64 noundef %166) #13
  %193 = load i32, ptr %176, align 4, !tbaa !16
  br label %197

194:                                              ; preds = %186
  %195 = getelementptr inbounds %struct.sv, ptr %175, i64 0, i32 3
  %196 = load ptr, ptr %195, align 8, !tbaa !24
  br label %197

197:                                              ; preds = %194, %191
  %198 = phi i32 [ %193, %191 ], [ %183, %194 ]
  %199 = phi ptr [ %192, %191 ], [ %196, %194 ]
  %200 = and i32 %198, 1610547455
  %201 = or i32 %200, 17408
  store i32 %201, ptr %176, align 4, !tbaa !16
  store ptr %175, ptr %4, align 8, !tbaa !5
  br i1 %168, label %204, label %249

202:                                              ; preds = %153
  %203 = call ptr @Perl_sv_pvn_force_flags(ptr noundef nonnull %5, ptr noundef nonnull %1, i32 noundef 0) #13
  br i1 %155, label %243, label %249

204:                                              ; preds = %197
  br i1 %169, label %212, label %205

205:                                              ; preds = %204
  %206 = load i64, ptr %3, align 8, !tbaa !71
  call void @Perl_sv_setpvn(ptr noundef nonnull %175, ptr noundef nonnull %2, i64 noundef %206) #13
  %207 = load i64, ptr %1, align 8, !tbaa !71
  %208 = icmp ugt i64 %207, %167
  br i1 %208, label %209, label %240

209:                                              ; preds = %205
  %210 = getelementptr inbounds i8, ptr %25, i64 %167
  %211 = sub i64 %207, %167
  call void @Perl_sv_catpvn_flags(ptr noundef nonnull %175, ptr noundef %210, i64 noundef %211, i32 noundef 2) #13
  br label %240

212:                                              ; preds = %204
  %213 = load i64, ptr %1, align 8, !tbaa !71
  %214 = getelementptr inbounds i8, ptr %25, i64 %213
  %215 = load i8, ptr %2, align 1, !tbaa !24
  %216 = getelementptr inbounds i8, ptr %199, i64 1
  store i8 %215, ptr %199, align 1, !tbaa !24
  %217 = getelementptr inbounds i8, ptr %2, i64 1
  %218 = load i8, ptr %217, align 1, !tbaa !24
  %219 = getelementptr inbounds i8, ptr %199, i64 2
  store i8 %218, ptr %216, align 1, !tbaa !24
  %220 = icmp sgt i64 %213, 1
  br i1 %220, label %221, label %231

221:                                              ; preds = %212
  %222 = getelementptr inbounds i8, ptr %25, i64 1
  br label %223

223:                                              ; preds = %221, %223
  %224 = phi ptr [ %229, %223 ], [ %222, %221 ]
  %225 = phi ptr [ %228, %223 ], [ %219, %221 ]
  %226 = load i8, ptr %224, align 1, !tbaa !24
  %227 = zext i8 %226 to i64
  %228 = call ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef %225, i64 noundef %227, i64 noundef 0) #13
  %229 = getelementptr inbounds i8, ptr %224, i64 1
  %230 = icmp ult ptr %229, %214
  br i1 %230, label %223, label %231, !llvm.loop !113

231:                                              ; preds = %223, %212
  %232 = phi ptr [ %219, %212 ], [ %228, %223 ]
  store i8 0, ptr %232, align 1, !tbaa !24
  %233 = getelementptr inbounds %struct.sv, ptr %175, i64 0, i32 3
  %234 = load ptr, ptr %233, align 8, !tbaa !24
  %235 = ptrtoint ptr %232 to i64
  %236 = ptrtoint ptr %234 to i64
  %237 = sub i64 %235, %236
  %238 = load ptr, ptr %175, align 8, !tbaa !26
  %239 = getelementptr inbounds %struct.xpv, ptr %238, i64 0, i32 2
  store i64 %237, ptr %239, align 8, !tbaa !55
  br label %240

240:                                              ; preds = %205, %209, %231
  %241 = load i32, ptr %176, align 4, !tbaa !16
  %242 = or i32 %241, 536870912
  store i32 %242, ptr %176, align 4, !tbaa !16
  br label %305

243:                                              ; preds = %159, %202
  %244 = phi ptr [ %164, %159 ], [ %203, %202 ]
  %245 = load i64, ptr %3, align 8, !tbaa !71
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %244, ptr nonnull align 1 %2, i64 %245, i1 false)
  %246 = add i64 %154, -1
  %247 = load ptr, ptr %5, align 8, !tbaa !26
  %248 = getelementptr inbounds %struct.xpv, ptr %247, i64 0, i32 2
  store i64 %246, ptr %248, align 8, !tbaa !55
  br label %322

249:                                              ; preds = %197, %202
  %250 = phi ptr [ %5, %202 ], [ %175, %197 ]
  %251 = phi ptr [ %203, %202 ], [ %199, %197 ]
  %252 = phi ptr [ %203, %202 ], [ %25, %197 ]
  %253 = phi i1 [ true, %202 ], [ false, %197 ]
  %254 = phi i64 [ %154, %202 ], [ %166, %197 ]
  %255 = load i64, ptr %1, align 8, !tbaa !71
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %271, label %259

257:                                              ; preds = %159
  %258 = icmp eq i64 %162, 0
  br i1 %258, label %271, label %260

259:                                              ; preds = %249
  br i1 %253, label %260, label %266

260:                                              ; preds = %257, %259
  %261 = phi ptr [ %250, %259 ], [ %5, %257 ]
  %262 = phi ptr [ %251, %259 ], [ %164, %257 ]
  %263 = phi ptr [ %252, %259 ], [ %164, %257 ]
  %264 = phi i64 [ %254, %259 ], [ %154, %257 ]
  %265 = load i8, ptr %2, align 1, !tbaa !24
  store i8 %265, ptr %262, align 1, !tbaa !24
  br label %278

266:                                              ; preds = %259
  %267 = load i64, ptr %3, align 8, !tbaa !71
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %251, ptr nonnull align 1 %2, i64 %267, i1 false)
  %268 = load i64, ptr %3, align 8, !tbaa !71
  %269 = add i64 %268, -1
  %270 = getelementptr inbounds i8, ptr %251, i64 %269
  br label %278

271:                                              ; preds = %257, %249
  %272 = phi i64 [ %154, %257 ], [ %254, %249 ]
  %273 = phi i1 [ true, %257 ], [ %253, %249 ]
  %274 = phi ptr [ %164, %257 ], [ %252, %249 ]
  %275 = phi ptr [ %164, %257 ], [ %251, %249 ]
  %276 = phi ptr [ %5, %257 ], [ %250, %249 ]
  %277 = load i8, ptr %274, align 1, !tbaa !24
  store i8 %277, ptr %275, align 1, !tbaa !24
  br label %278

278:                                              ; preds = %260, %266, %271
  %279 = phi i64 [ %264, %260 ], [ %254, %266 ], [ %272, %271 ]
  %280 = phi i1 [ true, %260 ], [ false, %266 ], [ %273, %271 ]
  %281 = phi ptr [ %263, %260 ], [ %252, %266 ], [ %274, %271 ]
  %282 = phi ptr [ %261, %260 ], [ %250, %266 ], [ %276, %271 ]
  %283 = phi ptr [ %262, %260 ], [ %270, %266 ], [ %275, %271 ]
  %284 = load i32, ptr %10, align 4, !tbaa !16
  %285 = and i32 %284, 536870912
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %297, label %287

287:                                              ; preds = %278
  %288 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %289 = getelementptr inbounds %struct.cop, ptr %288, i64 0, i32 10
  %290 = load i32, ptr %289, align 8, !tbaa !66
  %291 = and i32 %290, 8
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %297

293:                                              ; preds = %287
  %294 = getelementptr inbounds %struct.sv, ptr %282, i64 0, i32 2
  %295 = load i32, ptr %294, align 4, !tbaa !16
  %296 = or i32 %295, 536870912
  store i32 %296, ptr %294, align 4, !tbaa !16
  br label %297

297:                                              ; preds = %293, %287, %278
  br i1 %280, label %305, label %298

298:                                              ; preds = %297
  %299 = getelementptr inbounds i8, ptr %283, i64 1
  %300 = getelementptr inbounds i8, ptr %281, i64 1
  %301 = load i64, ptr %1, align 8, !tbaa !71
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %299, ptr nonnull align 1 %300, i64 %301, i1 false)
  %302 = add i64 %279, -1
  %303 = load ptr, ptr %282, align 8, !tbaa !26
  %304 = getelementptr inbounds %struct.xpv, ptr %303, i64 0, i32 2
  store i64 %302, ptr %304, align 8, !tbaa !55
  br label %305

305:                                              ; preds = %297, %298, %240
  %306 = phi ptr [ %282, %297 ], [ %282, %298 ], [ %175, %240 ]
  %307 = icmp eq ptr %306, %5
  br i1 %307, label %322, label %308

308:                                              ; preds = %305
  %309 = load i32, ptr %10, align 4, !tbaa !16
  %310 = and i32 %309, 14680064
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %322, label %312

312:                                              ; preds = %308
  %313 = call zeroext i1 @Perl_sv_tainted(ptr noundef nonnull %5) #13
  %314 = xor i1 %313, true
  %315 = load i8, ptr @PL_tainting, align 1, !range !83
  %316 = icmp eq i8 %315, 0
  %317 = select i1 %314, i1 true, i1 %316
  %318 = load i8, ptr @PL_tainted, align 1, !range !83
  %319 = icmp eq i8 %318, 0
  %320 = select i1 %317, i1 true, i1 %319
  br i1 %320, label %322, label %321

321:                                              ; preds = %312
  call void @Perl_sv_magic(ptr noundef nonnull %306, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0) #13
  br label %322

322:                                              ; preds = %243, %305, %308, %312, %321
  %323 = phi ptr [ %5, %243 ], [ %5, %305 ], [ %306, %308 ], [ %306, %312 ], [ %306, %321 ]
  %324 = getelementptr inbounds %struct.sv, ptr %323, i64 0, i32 2
  %325 = load i32, ptr %324, align 4, !tbaa !16
  %326 = and i32 %325, 4194304
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %330, label %328

328:                                              ; preds = %322
  %329 = call i32 @Perl_mg_set(ptr noundef nonnull %323) #13
  br label %330

330:                                              ; preds = %322, %328
  %331 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %332 = load ptr, ptr %331, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #13
  call void @llvm.lifetime.end.p0(i64 14, ptr nonnull %2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  ret ptr %332
}

declare i64 @Perl__to_utf8_title_flags(ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

declare i64 @Perl__to_utf8_lower_flags(ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

declare zeroext i1 @Perl__is_in_locale_category(i1 noundef zeroext, i32 noundef) local_unnamed_addr #2

declare i64 @Perl__to_upper_title_latin1(i8 noundef zeroext, ptr noundef, ptr noundef, i8 noundef signext) local_unnamed_addr #2

declare void @Perl_sv_catpvn_flags(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_uc() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = alloca [14 x i8], align 1
  %3 = alloca i64, align 8
  %4 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %5 = load ptr, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  %6 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !16
  %8 = and i32 %7, 2097152
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %0
  %11 = tail call i32 @Perl_mg_get(ptr noundef nonnull %5) #13
  %12 = load i32, ptr %6, align 4, !tbaa !16
  br label %13

13:                                               ; preds = %0, %10
  %14 = phi i32 [ %7, %0 ], [ %12, %10 ]
  %15 = and i32 %14, 131072
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %27

17:                                               ; preds = %13
  %18 = and i32 %14, 4718592
  %19 = icmp eq i32 %18, 524288
  br i1 %19, label %20, label %76

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 1
  %22 = load i32, ptr %21, align 8, !tbaa !44
  %23 = icmp eq i32 %22, 1
  %24 = and i32 %14, 134284288
  %25 = icmp eq i32 %24, 1024
  %26 = and i1 %25, %23
  br i1 %26, label %30, label %76

27:                                               ; preds = %13
  %28 = and i32 %14, 134284288
  %29 = icmp eq i32 %28, 1024
  br i1 %29, label %30, label %76

30:                                               ; preds = %20, %27
  %31 = and i32 %14, 536870912
  %32 = icmp ne i32 %31, 0
  %33 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %34 = getelementptr inbounds %struct.cop, ptr %33, i64 0, i32 10
  %35 = load i32, ptr %34, align 8, !tbaa !66
  %36 = and i32 %35, 8
  %37 = icmp eq i32 %36, 0
  %38 = select i1 %32, i1 %37, i1 false
  br i1 %38, label %76, label %39

39:                                               ; preds = %30
  %40 = and i32 %35, 2048
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %39
  %43 = and i32 %35, 16
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %59, label %45

45:                                               ; preds = %42
  %46 = tail call zeroext i1 @Perl__is_in_locale_category(i1 noundef zeroext false, i32 noundef -1) #13
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = load i32, ptr %6, align 4, !tbaa !16
  br label %59

49:                                               ; preds = %45
  %50 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %51 = getelementptr inbounds %struct.cop, ptr %50, i64 0, i32 10
  %52 = load i32, ptr %51, align 8, !tbaa !66
  %53 = load i32, ptr %6, align 4, !tbaa !16
  br label %54

54:                                               ; preds = %49, %39
  %55 = phi i32 [ %53, %49 ], [ %14, %39 ]
  %56 = phi i32 [ %52, %49 ], [ %35, %39 ]
  %57 = and i32 %56, 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %76, label %59

59:                                               ; preds = %47, %54, %42
  %60 = phi i32 [ %48, %47 ], [ %55, %54 ], [ %14, %42 ]
  %61 = and i32 %60, 430018304
  %62 = icmp eq i32 %61, 1024
  br i1 %62, label %63, label %69

63:                                               ; preds = %59
  %64 = load ptr, ptr %5, align 8, !tbaa !26
  %65 = getelementptr inbounds %struct.xpv, ptr %64, i64 0, i32 2
  %66 = load i64, ptr %65, align 8, !tbaa !55
  store i64 %66, ptr %1, align 8, !tbaa !71
  %67 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 3
  %68 = load ptr, ptr %67, align 8, !tbaa !24
  br label %72

69:                                               ; preds = %59
  %70 = call ptr @Perl_sv_pvn_force_flags(ptr noundef nonnull %5, ptr noundef nonnull %1, i32 noundef 0) #13
  %71 = load i64, ptr %1, align 8, !tbaa !71
  br label %72

72:                                               ; preds = %69, %63
  %73 = phi i64 [ %66, %63 ], [ %71, %69 ]
  %74 = phi ptr [ %68, %63 ], [ %70, %69 ]
  %75 = add i64 %73, 1
  br label %125

76:                                               ; preds = %30, %54, %27, %20, %17
  %77 = phi i32 [ %14, %27 ], [ %14, %20 ], [ %14, %17 ], [ %55, %54 ], [ %14, %30 ]
  %78 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %79 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %80 = getelementptr inbounds %struct.op, ptr %79, i64 0, i32 3
  %81 = load i64, ptr %80, align 8, !tbaa !14
  %82 = getelementptr inbounds ptr, ptr %78, i64 %81
  %83 = load ptr, ptr %82, align 8, !tbaa !5
  %84 = and i32 %77, 2098176
  %85 = icmp eq i32 %84, 1024
  br i1 %85, label %86, label %92

86:                                               ; preds = %76
  %87 = load ptr, ptr %5, align 8, !tbaa !26
  %88 = getelementptr inbounds %struct.xpv, ptr %87, i64 0, i32 2
  %89 = load i64, ptr %88, align 8, !tbaa !55
  store i64 %89, ptr %1, align 8, !tbaa !71
  %90 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 3
  %91 = load ptr, ptr %90, align 8, !tbaa !24
  br label %95

92:                                               ; preds = %76
  %93 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %5, ptr noundef nonnull %1, i32 noundef 32) #13
  %94 = load i64, ptr %1, align 8, !tbaa !71
  br label %95

95:                                               ; preds = %92, %86
  %96 = phi i64 [ %89, %86 ], [ %94, %92 ]
  %97 = phi ptr [ %91, %86 ], [ %93, %92 ]
  %98 = add i64 %96, 1
  %99 = getelementptr inbounds %struct.sv, ptr %83, i64 0, i32 2
  %100 = load i32, ptr %99, align 4, !tbaa !16
  %101 = and i32 %100, 255
  %102 = icmp ugt i32 %101, 2
  br i1 %102, label %105, label %103

103:                                              ; preds = %95
  call void @Perl_sv_upgrade(ptr noundef nonnull %83, i32 noundef 3) #13
  %104 = load i32, ptr %99, align 4, !tbaa !16
  br label %105

105:                                              ; preds = %103, %95
  %106 = phi i32 [ %104, %103 ], [ %100, %95 ]
  %107 = and i32 %106, 268435456
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %114

109:                                              ; preds = %105
  %110 = load ptr, ptr %83, align 8, !tbaa !26
  %111 = getelementptr inbounds %struct.xpv, ptr %110, i64 0, i32 3
  %112 = load i64, ptr %111, align 8, !tbaa !24
  %113 = icmp ult i64 %112, %98
  br i1 %113, label %114, label %117

114:                                              ; preds = %109, %105
  %115 = call ptr @Perl_sv_grow(ptr noundef nonnull %83, i64 noundef %98) #13
  %116 = load i32, ptr %99, align 4, !tbaa !16
  br label %120

117:                                              ; preds = %109
  %118 = getelementptr inbounds %struct.sv, ptr %83, i64 0, i32 3
  %119 = load ptr, ptr %118, align 8, !tbaa !24
  br label %120

120:                                              ; preds = %117, %114
  %121 = phi i32 [ %116, %114 ], [ %106, %117 ]
  %122 = phi ptr [ %115, %114 ], [ %119, %117 ]
  %123 = and i32 %121, 1610547455
  %124 = or i32 %123, 17408
  store i32 %124, ptr %99, align 4, !tbaa !16
  store ptr %83, ptr %4, align 8, !tbaa !5
  br label %125

125:                                              ; preds = %120, %72
  %126 = phi ptr [ %122, %120 ], [ %74, %72 ]
  %127 = phi ptr [ %97, %120 ], [ %74, %72 ]
  %128 = phi ptr [ %83, %120 ], [ %5, %72 ]
  %129 = phi i64 [ %98, %120 ], [ %75, %72 ]
  %130 = load i32, ptr %6, align 4, !tbaa !16
  %131 = and i32 %130, 536870912
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %135

133:                                              ; preds = %125
  %134 = load i64, ptr %1, align 8, !tbaa !71
  br label %224

135:                                              ; preds = %125
  %136 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %137 = getelementptr inbounds %struct.cop, ptr %136, i64 0, i32 10
  %138 = load i32, ptr %137, align 8, !tbaa !66
  %139 = and i32 %138, 8
  %140 = icmp eq i32 %139, 0
  %141 = load i64, ptr %1, align 8, !tbaa !71
  br i1 %140, label %142, label %224

142:                                              ; preds = %135
  %143 = getelementptr inbounds i8, ptr %127, i64 %141
  call void @llvm.lifetime.start.p0(i64 14, ptr nonnull %2) #13
  %144 = icmp sgt i64 %141, 0
  br i1 %144, label %145, label %212

145:                                              ; preds = %142
  %146 = ptrtoint ptr %143 to i64
  %147 = getelementptr inbounds %struct.sv, ptr %128, i64 0, i32 3
  br label %148

148:                                              ; preds = %145, %201
  %149 = phi i64 [ %129, %145 ], [ %204, %201 ]
  %150 = phi ptr [ %127, %145 ], [ %205, %201 ]
  %151 = phi ptr [ %126, %145 ], [ %203, %201 ]
  %152 = phi i8 [ 0, %145 ], [ %202, %201 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #13
  %153 = and i8 %152, 1
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %159, label %155

155:                                              ; preds = %148
  %156 = call zeroext i1 @Perl__is_utf8_mark(ptr noundef %150) #13
  br i1 %156, label %159, label %157

157:                                              ; preds = %155
  store i16 -26162, ptr %151, align 1
  %158 = getelementptr inbounds i8, ptr %151, i64 2
  br label %159

159:                                              ; preds = %157, %155, %148
  %160 = phi i8 [ %152, %155 ], [ 0, %157 ], [ %152, %148 ]
  %161 = phi ptr [ %151, %155 ], [ %158, %157 ], [ %151, %148 ]
  %162 = load i8, ptr %150, align 1, !tbaa !24
  %163 = zext i8 %162 to i64
  %164 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %163
  %165 = load i8, ptr %164, align 1, !tbaa !24
  %166 = zext i8 %165 to i64
  %167 = call i64 @Perl__to_utf8_upper_flags(ptr noundef nonnull %150, ptr noundef nonnull %2, ptr noundef nonnull %3, i1 noundef zeroext false) #13
  %168 = icmp eq i64 %167, 921
  br i1 %168, label %169, label %176

169:                                              ; preds = %159
  %170 = ptrtoint ptr %150 to i64
  %171 = sub i64 %146, %170
  %172 = call zeroext i1 @Perl_ckwarn_d(i32 noundef 44) #13
  %173 = select i1 %172, i32 0, i32 -8161
  %174 = call i64 @Perl_utf8n_to_uvchr(ptr noundef nonnull %150, i64 noundef %171, ptr noundef null, i32 noundef %173) #13
  %175 = icmp eq i64 %174, 837
  br i1 %175, label %201, label %176

176:                                              ; preds = %169, %159
  %177 = load i64, ptr %3, align 8, !tbaa !71
  %178 = icmp ugt i64 %177, %166
  br i1 %178, label %179, label %195

179:                                              ; preds = %176
  %180 = load ptr, ptr %128, align 8, !tbaa !26
  %181 = getelementptr inbounds %struct.xpv, ptr %180, i64 0, i32 3
  %182 = load i64, ptr %181, align 8, !tbaa !24
  %183 = sub i64 %177, %166
  %184 = add i64 %183, %149
  %185 = icmp ult i64 %182, %184
  br i1 %185, label %186, label %195

186:                                              ; preds = %179
  %187 = load ptr, ptr %147, align 8, !tbaa !24
  %188 = ptrtoint ptr %161 to i64
  %189 = ptrtoint ptr %187 to i64
  %190 = sub i64 %188, %189
  %191 = call ptr @Perl_sv_grow(ptr noundef nonnull %128, i64 noundef %184) #13
  %192 = load ptr, ptr %147, align 8, !tbaa !24
  %193 = getelementptr inbounds i8, ptr %192, i64 %190
  %194 = load i64, ptr %3, align 8, !tbaa !71
  br label %195

195:                                              ; preds = %186, %179, %176
  %196 = phi i64 [ %194, %186 ], [ %177, %179 ], [ %177, %176 ]
  %197 = phi ptr [ %193, %186 ], [ %161, %179 ], [ %161, %176 ]
  %198 = phi i64 [ %184, %186 ], [ %184, %179 ], [ %149, %176 ]
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %197, ptr nonnull align 1 %2, i64 %196, i1 false)
  %199 = load i64, ptr %3, align 8, !tbaa !71
  %200 = getelementptr inbounds i8, ptr %197, i64 %199
  br label %201

201:                                              ; preds = %169, %195
  %202 = phi i8 [ %160, %195 ], [ 1, %169 ]
  %203 = phi ptr [ %200, %195 ], [ %161, %169 ]
  %204 = phi i64 [ %198, %195 ], [ %149, %169 ]
  %205 = getelementptr inbounds i8, ptr %150, i64 %166
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #13
  %206 = icmp ult ptr %205, %143
  br i1 %206, label %148, label %207, !llvm.loop !114

207:                                              ; preds = %201
  %208 = and i8 %202, 1
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %212, label %210

210:                                              ; preds = %207
  store i16 -26162, ptr %203, align 1
  %211 = getelementptr inbounds i8, ptr %203, i64 2
  br label %212

212:                                              ; preds = %142, %210, %207
  %213 = phi ptr [ %211, %210 ], [ %203, %207 ], [ %126, %142 ]
  %214 = getelementptr inbounds %struct.sv, ptr %128, i64 0, i32 2
  %215 = load i32, ptr %214, align 4, !tbaa !16
  %216 = or i32 %215, 536870912
  store i32 %216, ptr %214, align 4, !tbaa !16
  store i8 0, ptr %213, align 1, !tbaa !24
  %217 = getelementptr inbounds %struct.sv, ptr %128, i64 0, i32 3
  %218 = load ptr, ptr %217, align 8, !tbaa !24
  %219 = ptrtoint ptr %213 to i64
  %220 = ptrtoint ptr %218 to i64
  %221 = sub i64 %219, %220
  %222 = load ptr, ptr %128, align 8, !tbaa !26
  %223 = getelementptr inbounds %struct.xpv, ptr %222, i64 0, i32 2
  store i64 %221, ptr %223, align 8, !tbaa !55
  call void @llvm.lifetime.end.p0(i64 14, ptr nonnull %2) #13
  br label %338

224:                                              ; preds = %133, %135
  %225 = phi i64 [ %134, %133 ], [ %141, %135 ]
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %327, label %227

227:                                              ; preds = %224
  %228 = getelementptr inbounds i8, ptr %127, i64 %225
  %229 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %230 = getelementptr inbounds %struct.cop, ptr %229, i64 0, i32 10
  %231 = load i32, ptr %230, align 8, !tbaa !66
  %232 = and i32 %231, 2048
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %243

234:                                              ; preds = %227
  %235 = and i32 %231, 16
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %251, label %237

237:                                              ; preds = %234
  %238 = call zeroext i1 @Perl__is_in_locale_category(i1 noundef zeroext false, i32 noundef -1) #13
  br i1 %238, label %239, label %251

239:                                              ; preds = %237
  %240 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %241 = getelementptr inbounds %struct.cop, ptr %240, i64 0, i32 10
  %242 = load i32, ptr %241, align 8, !tbaa !66
  br label %243

243:                                              ; preds = %239, %227
  %244 = phi i32 [ %242, %239 ], [ %231, %227 ]
  %245 = and i32 %244, 8
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %251

247:                                              ; preds = %243
  %248 = icmp sgt i64 %225, 0
  br i1 %248, label %249, label %327

249:                                              ; preds = %247
  %250 = getelementptr inbounds %struct.sv, ptr %128, i64 0, i32 3
  br label %267

251:                                              ; preds = %243, %237, %234
  %252 = icmp sgt i64 %225, 0
  br i1 %252, label %253, label %327

253:                                              ; preds = %251, %253
  %254 = phi ptr [ %265, %253 ], [ %127, %251 ]
  %255 = phi ptr [ %264, %253 ], [ %126, %251 ]
  %256 = load i8, ptr %254, align 1, !tbaa !24
  %257 = zext i8 %256 to i64
  %258 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %257
  %259 = load i32, ptr %258, align 4, !tbaa !57
  %260 = and i32 %259, 16392
  %261 = icmp eq i32 %260, 16392
  %262 = add i8 %256, -32
  %263 = select i1 %261, i8 %262, i8 %256
  store i8 %263, ptr %255, align 1, !tbaa !24
  %264 = getelementptr inbounds i8, ptr %255, i64 1
  %265 = getelementptr inbounds i8, ptr %254, i64 1
  %266 = icmp ult ptr %265, %228
  br i1 %266, label %253, label %327, !llvm.loop !115

267:                                              ; preds = %249, %321
  %268 = phi i64 [ %129, %249 ], [ %323, %321 ]
  %269 = phi ptr [ %127, %249 ], [ %325, %321 ]
  %270 = phi ptr [ %126, %249 ], [ %324, %321 ]
  %271 = load i8, ptr %269, align 1, !tbaa !24
  %272 = zext i8 %271 to i64
  %273 = getelementptr inbounds [0 x i8], ptr @PL_mod_latin1_uc, i64 0, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !24
  store i8 %274, ptr %270, align 1, !tbaa !24
  %275 = icmp eq i8 %274, -1
  br i1 %275, label %276, label %321

276:                                              ; preds = %267
  %277 = load i8, ptr %269, align 1, !tbaa !24
  %278 = icmp eq i8 %277, -33
  br i1 %278, label %279, label %296

279:                                              ; preds = %276
  %280 = load ptr, ptr %128, align 8, !tbaa !26
  %281 = getelementptr inbounds %struct.xpv, ptr %280, i64 0, i32 3
  %282 = load i64, ptr %281, align 8, !tbaa !24
  %283 = add i64 %268, 1
  %284 = icmp ult i64 %282, %283
  br i1 %284, label %285, label %293

285:                                              ; preds = %279
  %286 = load ptr, ptr %250, align 8, !tbaa !24
  %287 = ptrtoint ptr %270 to i64
  %288 = ptrtoint ptr %286 to i64
  %289 = sub i64 %287, %288
  %290 = call ptr @Perl_sv_grow(ptr noundef nonnull %128, i64 noundef %283) #13
  %291 = load ptr, ptr %250, align 8, !tbaa !24
  %292 = getelementptr inbounds i8, ptr %291, i64 %289
  br label %293

293:                                              ; preds = %285, %279
  %294 = phi ptr [ %292, %285 ], [ %270, %279 ]
  %295 = getelementptr inbounds i8, ptr %294, i64 1
  store i8 83, ptr %294, align 1, !tbaa !24
  store i8 83, ptr %295, align 1, !tbaa !24
  br label %321

296:                                              ; preds = %276
  %297 = load ptr, ptr %250, align 8, !tbaa !24
  %298 = ptrtoint ptr %270 to i64
  %299 = ptrtoint ptr %297 to i64
  %300 = sub i64 %298, %299
  store i64 %300, ptr %1, align 8, !tbaa !71
  %301 = load ptr, ptr %128, align 8, !tbaa !26
  %302 = getelementptr inbounds %struct.xpv, ptr %301, i64 0, i32 2
  store i64 %300, ptr %302, align 8, !tbaa !55
  %303 = ptrtoint ptr %228 to i64
  %304 = ptrtoint ptr %269 to i64
  %305 = sub i64 %303, %304
  %306 = shl nsw i64 %305, 1
  %307 = or i64 %306, 1
  %308 = call i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef nonnull %128, i32 noundef 4098, i64 noundef %307) #13
  store i64 %308, ptr %1, align 8, !tbaa !71
  %309 = load ptr, ptr %250, align 8, !tbaa !24
  %310 = getelementptr inbounds i8, ptr %309, i64 %308
  %311 = icmp ult ptr %269, %228
  br i1 %311, label %312, label %327

312:                                              ; preds = %296, %312
  %313 = phi ptr [ %319, %312 ], [ %269, %296 ]
  %314 = phi ptr [ %318, %312 ], [ %310, %296 ]
  %315 = load i8, ptr %313, align 1, !tbaa !24
  %316 = call i64 @Perl__to_upper_title_latin1(i8 noundef zeroext %315, ptr noundef %314, ptr noundef nonnull %1, i8 noundef signext 83) #13
  %317 = load i64, ptr %1, align 8, !tbaa !71
  %318 = getelementptr inbounds i8, ptr %314, i64 %317
  %319 = getelementptr inbounds i8, ptr %313, i64 1
  %320 = icmp ult ptr %319, %228
  br i1 %320, label %312, label %327, !llvm.loop !116

321:                                              ; preds = %267, %293
  %322 = phi ptr [ %270, %267 ], [ %295, %293 ]
  %323 = phi i64 [ %268, %267 ], [ %283, %293 ]
  %324 = getelementptr inbounds i8, ptr %322, i64 1
  %325 = getelementptr inbounds i8, ptr %269, i64 1
  %326 = icmp ult ptr %325, %228
  br i1 %326, label %267, label %327, !llvm.loop !117

327:                                              ; preds = %321, %312, %253, %247, %296, %251, %224
  %328 = phi ptr [ %126, %224 ], [ %126, %251 ], [ %310, %296 ], [ %126, %247 ], [ %264, %253 ], [ %318, %312 ], [ %324, %321 ]
  %329 = icmp eq ptr %5, %128
  br i1 %329, label %338, label %330

330:                                              ; preds = %327
  store i8 0, ptr %328, align 1, !tbaa !24
  %331 = getelementptr inbounds %struct.sv, ptr %128, i64 0, i32 3
  %332 = load ptr, ptr %331, align 8, !tbaa !24
  %333 = ptrtoint ptr %328 to i64
  %334 = ptrtoint ptr %332 to i64
  %335 = sub i64 %333, %334
  %336 = load ptr, ptr %128, align 8, !tbaa !26
  %337 = getelementptr inbounds %struct.xpv, ptr %336, i64 0, i32 2
  store i64 %335, ptr %337, align 8, !tbaa !55
  br label %338

338:                                              ; preds = %327, %330, %212
  %339 = icmp eq ptr %128, %5
  br i1 %339, label %354, label %340

340:                                              ; preds = %338
  %341 = load i32, ptr %6, align 4, !tbaa !16
  %342 = and i32 %341, 14680064
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %354, label %344

344:                                              ; preds = %340
  %345 = call zeroext i1 @Perl_sv_tainted(ptr noundef nonnull %5) #13
  %346 = xor i1 %345, true
  %347 = load i8, ptr @PL_tainting, align 1, !range !83
  %348 = icmp eq i8 %347, 0
  %349 = select i1 %346, i1 true, i1 %348
  %350 = load i8, ptr @PL_tainted, align 1, !range !83
  %351 = icmp eq i8 %350, 0
  %352 = select i1 %349, i1 true, i1 %351
  br i1 %352, label %354, label %353

353:                                              ; preds = %344
  call void @Perl_sv_magic(ptr noundef %128, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0) #13
  br label %354

354:                                              ; preds = %338, %340, %344, %353
  %355 = getelementptr inbounds %struct.sv, ptr %128, i64 0, i32 2
  %356 = load i32, ptr %355, align 4, !tbaa !16
  %357 = and i32 %356, 4194304
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %361, label %359

359:                                              ; preds = %354
  %360 = call i32 @Perl_mg_set(ptr noundef nonnull %128) #13
  br label %361

361:                                              ; preds = %354, %359
  %362 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %363 = load ptr, ptr %362, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  ret ptr %363
}

declare zeroext i1 @Perl__is_utf8_mark(ptr noundef) local_unnamed_addr #2

declare i64 @Perl__to_utf8_upper_flags(ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

declare zeroext i1 @Perl_ckwarn_d(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_lc() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = alloca [14 x i8], align 1
  %3 = alloca i64, align 8
  %4 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %5 = load ptr, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  %6 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !16
  %8 = and i32 %7, 2097152
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %0
  %11 = tail call i32 @Perl_mg_get(ptr noundef nonnull %5) #13
  %12 = load i32, ptr %6, align 4, !tbaa !16
  br label %13

13:                                               ; preds = %0, %10
  %14 = phi i32 [ %7, %0 ], [ %12, %10 ]
  %15 = and i32 %14, 131072
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %27

17:                                               ; preds = %13
  %18 = and i32 %14, 4718592
  %19 = icmp eq i32 %18, 524288
  br i1 %19, label %20, label %55

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 1
  %22 = load i32, ptr %21, align 8, !tbaa !44
  %23 = icmp eq i32 %22, 1
  %24 = and i32 %14, 134284288
  %25 = icmp eq i32 %24, 1024
  %26 = and i1 %25, %23
  br i1 %26, label %30, label %55

27:                                               ; preds = %13
  %28 = and i32 %14, 134284288
  %29 = icmp eq i32 %28, 1024
  br i1 %29, label %30, label %55

30:                                               ; preds = %20, %27
  %31 = and i32 %14, 536870912
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %30
  %34 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %35 = getelementptr inbounds %struct.cop, ptr %34, i64 0, i32 10
  %36 = load i32, ptr %35, align 8, !tbaa !66
  %37 = and i32 %36, 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %55, label %39

39:                                               ; preds = %33, %30
  %40 = and i32 %14, 430018304
  %41 = icmp eq i32 %40, 1024
  br i1 %41, label %42, label %48

42:                                               ; preds = %39
  %43 = load ptr, ptr %5, align 8, !tbaa !26
  %44 = getelementptr inbounds %struct.xpv, ptr %43, i64 0, i32 2
  %45 = load i64, ptr %44, align 8, !tbaa !55
  store i64 %45, ptr %1, align 8, !tbaa !71
  %46 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 3
  %47 = load ptr, ptr %46, align 8, !tbaa !24
  br label %51

48:                                               ; preds = %39
  %49 = call ptr @Perl_sv_pvn_force_flags(ptr noundef nonnull %5, ptr noundef nonnull %1, i32 noundef 0) #13
  %50 = load i64, ptr %1, align 8, !tbaa !71
  br label %51

51:                                               ; preds = %48, %42
  %52 = phi i64 [ %45, %42 ], [ %50, %48 ]
  %53 = phi ptr [ %47, %42 ], [ %49, %48 ]
  %54 = add i64 %52, 1
  br label %103

55:                                               ; preds = %33, %27, %20, %17
  %56 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %57 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %58 = getelementptr inbounds %struct.op, ptr %57, i64 0, i32 3
  %59 = load i64, ptr %58, align 8, !tbaa !14
  %60 = getelementptr inbounds ptr, ptr %56, i64 %59
  %61 = load ptr, ptr %60, align 8, !tbaa !5
  %62 = and i32 %14, 2098176
  %63 = icmp eq i32 %62, 1024
  br i1 %63, label %64, label %70

64:                                               ; preds = %55
  %65 = load ptr, ptr %5, align 8, !tbaa !26
  %66 = getelementptr inbounds %struct.xpv, ptr %65, i64 0, i32 2
  %67 = load i64, ptr %66, align 8, !tbaa !55
  store i64 %67, ptr %1, align 8, !tbaa !71
  %68 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !24
  br label %73

70:                                               ; preds = %55
  %71 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %5, ptr noundef nonnull %1, i32 noundef 32) #13
  %72 = load i64, ptr %1, align 8, !tbaa !71
  br label %73

73:                                               ; preds = %70, %64
  %74 = phi i64 [ %67, %64 ], [ %72, %70 ]
  %75 = phi ptr [ %69, %64 ], [ %71, %70 ]
  %76 = add i64 %74, 1
  %77 = getelementptr inbounds %struct.sv, ptr %61, i64 0, i32 2
  %78 = load i32, ptr %77, align 4, !tbaa !16
  %79 = and i32 %78, 255
  %80 = icmp ugt i32 %79, 2
  br i1 %80, label %83, label %81

81:                                               ; preds = %73
  call void @Perl_sv_upgrade(ptr noundef nonnull %61, i32 noundef 3) #13
  %82 = load i32, ptr %77, align 4, !tbaa !16
  br label %83

83:                                               ; preds = %81, %73
  %84 = phi i32 [ %82, %81 ], [ %78, %73 ]
  %85 = and i32 %84, 268435456
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %92

87:                                               ; preds = %83
  %88 = load ptr, ptr %61, align 8, !tbaa !26
  %89 = getelementptr inbounds %struct.xpv, ptr %88, i64 0, i32 3
  %90 = load i64, ptr %89, align 8, !tbaa !24
  %91 = icmp ult i64 %90, %76
  br i1 %91, label %92, label %95

92:                                               ; preds = %87, %83
  %93 = call ptr @Perl_sv_grow(ptr noundef nonnull %61, i64 noundef %76) #13
  %94 = load i32, ptr %77, align 4, !tbaa !16
  br label %98

95:                                               ; preds = %87
  %96 = getelementptr inbounds %struct.sv, ptr %61, i64 0, i32 3
  %97 = load ptr, ptr %96, align 8, !tbaa !24
  br label %98

98:                                               ; preds = %95, %92
  %99 = phi i32 [ %94, %92 ], [ %84, %95 ]
  %100 = phi ptr [ %93, %92 ], [ %97, %95 ]
  %101 = and i32 %99, 1610547455
  %102 = or i32 %101, 17408
  store i32 %102, ptr %77, align 4, !tbaa !16
  store ptr %61, ptr %4, align 8, !tbaa !5
  br label %103

103:                                              ; preds = %98, %51
  %104 = phi ptr [ %100, %98 ], [ %53, %51 ]
  %105 = phi ptr [ %75, %98 ], [ %53, %51 ]
  %106 = phi ptr [ %61, %98 ], [ %5, %51 ]
  %107 = phi i64 [ %76, %98 ], [ %54, %51 ]
  %108 = load i32, ptr %6, align 4, !tbaa !16
  %109 = and i32 %108, 536870912
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %103
  %112 = load i64, ptr %1, align 8, !tbaa !71
  br label %173

113:                                              ; preds = %103
  %114 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %115 = getelementptr inbounds %struct.cop, ptr %114, i64 0, i32 10
  %116 = load i32, ptr %115, align 8, !tbaa !66
  %117 = and i32 %116, 8
  %118 = icmp eq i32 %117, 0
  %119 = load i64, ptr %1, align 8, !tbaa !71
  br i1 %118, label %120, label %173

120:                                              ; preds = %113
  %121 = getelementptr inbounds i8, ptr %105, i64 %119
  call void @llvm.lifetime.start.p0(i64 14, ptr nonnull %2) #13
  %122 = icmp sgt i64 %119, 0
  br i1 %122, label %123, label %161

123:                                              ; preds = %120
  %124 = getelementptr inbounds %struct.sv, ptr %106, i64 0, i32 3
  br label %125

125:                                              ; preds = %123, %153
  %126 = phi i64 [ %107, %123 ], [ %156, %153 ]
  %127 = phi ptr [ %105, %123 ], [ %159, %153 ]
  %128 = phi ptr [ %104, %123 ], [ %158, %153 ]
  %129 = load i8, ptr %127, align 1, !tbaa !24
  %130 = zext i8 %129 to i64
  %131 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %130
  %132 = load i8, ptr %131, align 1, !tbaa !24
  %133 = zext i8 %132 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #13
  %134 = call i64 @Perl__to_utf8_lower_flags(ptr noundef nonnull %127, ptr noundef nonnull %2, ptr noundef nonnull %3, i1 noundef zeroext false) #13
  %135 = load i64, ptr %3, align 8, !tbaa !71
  %136 = icmp ugt i64 %135, %133
  br i1 %136, label %137, label %153

137:                                              ; preds = %125
  %138 = load ptr, ptr %106, align 8, !tbaa !26
  %139 = getelementptr inbounds %struct.xpv, ptr %138, i64 0, i32 3
  %140 = load i64, ptr %139, align 8, !tbaa !24
  %141 = sub i64 %135, %133
  %142 = add i64 %141, %126
  %143 = icmp ult i64 %140, %142
  br i1 %143, label %144, label %153

144:                                              ; preds = %137
  %145 = load ptr, ptr %124, align 8, !tbaa !24
  %146 = ptrtoint ptr %128 to i64
  %147 = ptrtoint ptr %145 to i64
  %148 = sub i64 %146, %147
  %149 = call ptr @Perl_sv_grow(ptr noundef nonnull %106, i64 noundef %142) #13
  %150 = load ptr, ptr %124, align 8, !tbaa !24
  %151 = getelementptr inbounds i8, ptr %150, i64 %148
  %152 = load i64, ptr %3, align 8, !tbaa !71
  br label %153

153:                                              ; preds = %144, %137, %125
  %154 = phi i64 [ %152, %144 ], [ %135, %137 ], [ %135, %125 ]
  %155 = phi ptr [ %151, %144 ], [ %128, %137 ], [ %128, %125 ]
  %156 = phi i64 [ %142, %144 ], [ %142, %137 ], [ %126, %125 ]
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %155, ptr nonnull align 1 %2, i64 %154, i1 false)
  %157 = load i64, ptr %3, align 8, !tbaa !71
  %158 = getelementptr inbounds i8, ptr %155, i64 %157
  %159 = getelementptr inbounds i8, ptr %127, i64 %133
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #13
  %160 = icmp ult ptr %159, %121
  br i1 %160, label %125, label %161, !llvm.loop !118

161:                                              ; preds = %153, %120
  %162 = phi ptr [ %104, %120 ], [ %158, %153 ]
  %163 = getelementptr inbounds %struct.sv, ptr %106, i64 0, i32 2
  %164 = load i32, ptr %163, align 4, !tbaa !16
  %165 = or i32 %164, 536870912
  store i32 %165, ptr %163, align 4, !tbaa !16
  store i8 0, ptr %162, align 1, !tbaa !24
  %166 = getelementptr inbounds %struct.sv, ptr %106, i64 0, i32 3
  %167 = load ptr, ptr %166, align 8, !tbaa !24
  %168 = ptrtoint ptr %162 to i64
  %169 = ptrtoint ptr %167 to i64
  %170 = sub i64 %168, %169
  %171 = load ptr, ptr %106, align 8, !tbaa !26
  %172 = getelementptr inbounds %struct.xpv, ptr %171, i64 0, i32 2
  store i64 %170, ptr %172, align 8, !tbaa !55
  call void @llvm.lifetime.end.p0(i64 14, ptr nonnull %2) #13
  br label %235

173:                                              ; preds = %111, %113
  %174 = phi i64 [ %112, %111 ], [ %119, %113 ]
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %224, label %176

176:                                              ; preds = %173
  %177 = getelementptr inbounds i8, ptr %105, i64 %174
  %178 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %179 = getelementptr inbounds %struct.cop, ptr %178, i64 0, i32 10
  %180 = load i32, ptr %179, align 8, !tbaa !66
  %181 = and i32 %180, 2048
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %192

183:                                              ; preds = %176
  %184 = and i32 %180, 16
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %198, label %186

186:                                              ; preds = %183
  %187 = call zeroext i1 @Perl__is_in_locale_category(i1 noundef zeroext false, i32 noundef -1) #13
  br i1 %187, label %188, label %198

188:                                              ; preds = %186
  %189 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %190 = getelementptr inbounds %struct.cop, ptr %189, i64 0, i32 10
  %191 = load i32, ptr %190, align 8, !tbaa !66
  br label %192

192:                                              ; preds = %188, %176
  %193 = phi i32 [ %191, %188 ], [ %180, %176 ]
  %194 = and i32 %193, 8
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %198

196:                                              ; preds = %192
  %197 = icmp sgt i64 %174, 0
  br i1 %197, label %214, label %224

198:                                              ; preds = %192, %186, %183
  %199 = icmp sgt i64 %174, 0
  br i1 %199, label %200, label %224

200:                                              ; preds = %198, %200
  %201 = phi ptr [ %212, %200 ], [ %105, %198 ]
  %202 = phi ptr [ %211, %200 ], [ %104, %198 ]
  %203 = load i8, ptr %201, align 1, !tbaa !24
  %204 = zext i8 %203 to i64
  %205 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %204
  %206 = load i32, ptr %205, align 4, !tbaa !57
  %207 = and i32 %206, 16400
  %208 = icmp eq i32 %207, 16400
  %209 = add i8 %203, 32
  %210 = select i1 %208, i8 %209, i8 %203
  store i8 %210, ptr %202, align 1, !tbaa !24
  %211 = getelementptr inbounds i8, ptr %202, i64 1
  %212 = getelementptr inbounds i8, ptr %201, i64 1
  %213 = icmp ult ptr %212, %177
  br i1 %213, label %200, label %224, !llvm.loop !119

214:                                              ; preds = %196, %214
  %215 = phi ptr [ %222, %214 ], [ %105, %196 ]
  %216 = phi ptr [ %221, %214 ], [ %104, %196 ]
  %217 = load i8, ptr %215, align 1, !tbaa !24
  %218 = zext i8 %217 to i64
  %219 = getelementptr inbounds [0 x i8], ptr @PL_latin1_lc, i64 0, i64 %218
  %220 = load i8, ptr %219, align 1, !tbaa !24
  store i8 %220, ptr %216, align 1, !tbaa !24
  %221 = getelementptr inbounds i8, ptr %216, i64 1
  %222 = getelementptr inbounds i8, ptr %215, i64 1
  %223 = icmp ult ptr %222, %177
  br i1 %223, label %214, label %224, !llvm.loop !120

224:                                              ; preds = %214, %200, %196, %198, %173
  %225 = phi ptr [ %104, %173 ], [ %104, %198 ], [ %104, %196 ], [ %211, %200 ], [ %221, %214 ]
  %226 = icmp eq ptr %5, %106
  br i1 %226, label %235, label %227

227:                                              ; preds = %224
  store i8 0, ptr %225, align 1, !tbaa !24
  %228 = getelementptr inbounds %struct.sv, ptr %106, i64 0, i32 3
  %229 = load ptr, ptr %228, align 8, !tbaa !24
  %230 = ptrtoint ptr %225 to i64
  %231 = ptrtoint ptr %229 to i64
  %232 = sub i64 %230, %231
  %233 = load ptr, ptr %106, align 8, !tbaa !26
  %234 = getelementptr inbounds %struct.xpv, ptr %233, i64 0, i32 2
  store i64 %232, ptr %234, align 8, !tbaa !55
  br label %235

235:                                              ; preds = %224, %227, %161
  %236 = icmp eq ptr %106, %5
  br i1 %236, label %251, label %237

237:                                              ; preds = %235
  %238 = load i32, ptr %6, align 4, !tbaa !16
  %239 = and i32 %238, 14680064
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %251, label %241

241:                                              ; preds = %237
  %242 = call zeroext i1 @Perl_sv_tainted(ptr noundef nonnull %5) #13
  %243 = xor i1 %242, true
  %244 = load i8, ptr @PL_tainting, align 1, !range !83
  %245 = icmp eq i8 %244, 0
  %246 = select i1 %243, i1 true, i1 %245
  %247 = load i8, ptr @PL_tainted, align 1, !range !83
  %248 = icmp eq i8 %247, 0
  %249 = select i1 %246, i1 true, i1 %248
  br i1 %249, label %251, label %250

250:                                              ; preds = %241
  call void @Perl_sv_magic(ptr noundef %106, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0) #13
  br label %251

251:                                              ; preds = %235, %237, %241, %250
  %252 = getelementptr inbounds %struct.sv, ptr %106, i64 0, i32 2
  %253 = load i32, ptr %252, align 4, !tbaa !16
  %254 = and i32 %253, 4194304
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %258, label %256

256:                                              ; preds = %251
  %257 = call i32 @Perl_mg_set(ptr noundef nonnull %106) #13
  br label %258

258:                                              ; preds = %251, %256
  %259 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %260 = load ptr, ptr %259, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  ret ptr %260
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_quotemeta() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %4 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 3
  %6 = load i64, ptr %5, align 8, !tbaa !14
  %7 = getelementptr inbounds ptr, ptr %3, i64 %6
  %8 = load ptr, ptr %7, align 8, !tbaa !5
  %9 = load ptr, ptr %2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  %10 = getelementptr inbounds %struct.sv, ptr %9, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !16
  %12 = and i32 %11, 2098176
  %13 = icmp eq i32 %12, 1024
  br i1 %13, label %14, label %20

14:                                               ; preds = %0
  %15 = load ptr, ptr %9, align 8, !tbaa !26
  %16 = getelementptr inbounds %struct.xpv, ptr %15, i64 0, i32 2
  %17 = load i64, ptr %16, align 8, !tbaa !55
  store i64 %17, ptr %1, align 8, !tbaa !71
  %18 = getelementptr inbounds %struct.sv, ptr %9, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8, !tbaa !24
  br label %23

20:                                               ; preds = %0
  %21 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %9, ptr noundef nonnull %1, i32 noundef 34) #13
  %22 = load i64, ptr %1, align 8, !tbaa !71
  br label %23

23:                                               ; preds = %20, %14
  %24 = phi i64 [ %22, %20 ], [ %17, %14 ]
  %25 = phi ptr [ %21, %20 ], [ %19, %14 ]
  %26 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !16
  %28 = and i32 %27, -536870913
  store i32 %28, ptr %26, align 4, !tbaa !16
  %29 = icmp eq i64 %24, 0
  br i1 %29, label %447, label %30

30:                                               ; preds = %23
  %31 = and i32 %27, 255
  %32 = icmp ugt i32 %31, 2
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  call void @Perl_sv_upgrade(ptr noundef nonnull %8, i32 noundef 3) #13
  %34 = load i32, ptr %26, align 4, !tbaa !16
  %35 = load i64, ptr %1, align 8, !tbaa !71
  br label %36

36:                                               ; preds = %33, %30
  %37 = phi i64 [ %35, %33 ], [ %24, %30 ]
  %38 = phi i32 [ %34, %33 ], [ %28, %30 ]
  %39 = and i32 %38, 268435456
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %36
  %42 = shl i64 %37, 1
  %43 = or i64 %42, 1
  br label %51

44:                                               ; preds = %36
  %45 = load ptr, ptr %8, align 8, !tbaa !26
  %46 = getelementptr inbounds %struct.xpv, ptr %45, i64 0, i32 3
  %47 = load i64, ptr %46, align 8, !tbaa !24
  %48 = shl i64 %37, 1
  %49 = or i64 %48, 1
  %50 = icmp ult i64 %47, %49
  br i1 %50, label %51, label %54

51:                                               ; preds = %41, %44
  %52 = phi i64 [ %43, %41 ], [ %49, %44 ]
  %53 = call ptr @Perl_sv_grow(ptr noundef nonnull %8, i64 noundef %52) #13
  br label %54

54:                                               ; preds = %44, %51
  %55 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 3
  %56 = load ptr, ptr %55, align 8, !tbaa !24
  %57 = load i32, ptr %10, align 4, !tbaa !16
  %58 = and i32 %57, 536870912
  %59 = icmp ne i32 %58, 0
  %60 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %61 = getelementptr inbounds %struct.cop, ptr %60, i64 0, i32 10
  %62 = load i32, ptr %61, align 8, !tbaa !66
  %63 = and i32 %62, 8
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %59, i1 %64, i1 false
  br i1 %65, label %66, label %372

66:                                               ; preds = %54
  %67 = load i64, ptr %1, align 8, !tbaa !71
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %368, label %78

69:                                               ; preds = %331, %338, %311
  %70 = phi ptr [ %272, %311 ], [ %332, %331 ], [ %364, %338 ]
  %71 = phi ptr [ %271, %311 ], [ %333, %331 ], [ %366, %338 ]
  %72 = load i64, ptr %1, align 8, !tbaa !71
  br label %73

73:                                               ; preds = %69, %256
  %74 = phi i64 [ %260, %256 ], [ %72, %69 ]
  %75 = phi ptr [ %81, %256 ], [ %70, %69 ]
  %76 = phi ptr [ %258, %256 ], [ %71, %69 ]
  %77 = icmp eq i64 %74, 0
  br i1 %77, label %368, label %78, !llvm.loop !121

78:                                               ; preds = %66, %73
  %79 = phi i64 [ %74, %73 ], [ %67, %66 ]
  %80 = phi ptr [ %76, %73 ], [ %56, %66 ]
  %81 = phi ptr [ %75, %73 ], [ %25, %66 ]
  %82 = ptrtoint ptr %81 to i64
  %83 = load i8, ptr %81, align 1, !tbaa !24
  %84 = zext i8 %83 to i64
  %85 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %84
  %86 = load i8, ptr %85, align 1, !tbaa !24
  %87 = zext i8 %86 to i64
  %88 = icmp sgt i8 %83, -1
  br i1 %88, label %89, label %94

89:                                               ; preds = %78
  %90 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %84
  %91 = load i32, ptr %90, align 4, !tbaa !57
  %92 = and i32 %91, 1048576
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %256, label %253

94:                                               ; preds = %78
  %95 = and i8 %83, -2
  %96 = icmp eq i8 %95, -62
  br i1 %96, label %97, label %108

97:                                               ; preds = %94
  %98 = shl i8 %83, 6
  %99 = getelementptr inbounds i8, ptr %81, i64 1
  %100 = load i8, ptr %99, align 1, !tbaa !24
  %101 = and i8 %100, 63
  %102 = or i8 %101, %98
  %103 = zext i8 %102 to i64
  %104 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !57
  %106 = and i32 %105, 1048576
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %256, label %253

108:                                              ; preds = %94
  switch i8 %83, label %256 [
    i8 -51, label %109
    i8 -40, label %113
    i8 -31, label %117
    i8 -30, label %139
    i8 -29, label %183
    i8 -17, label %199
    i8 -16, label %228
    i8 -13, label %249
  ]

109:                                              ; preds = %108
  %110 = getelementptr inbounds i8, ptr %81, i64 1
  %111 = load i8, ptr %110, align 1, !tbaa !24
  %112 = icmp eq i8 %111, -113
  br i1 %112, label %253, label %256

113:                                              ; preds = %108
  %114 = getelementptr inbounds i8, ptr %81, i64 1
  %115 = load i8, ptr %114, align 1, !tbaa !24
  %116 = icmp eq i8 %115, -100
  br i1 %116, label %253, label %256

117:                                              ; preds = %108
  %118 = getelementptr inbounds i8, ptr %81, i64 1
  %119 = load i8, ptr %118, align 1, !tbaa !24
  switch i8 %119, label %256 [
    i8 -123, label %120
    i8 -102, label %125
    i8 -98, label %129
    i8 -96, label %134
  ]

120:                                              ; preds = %117
  %121 = getelementptr inbounds i8, ptr %81, i64 2
  %122 = load i8, ptr %121, align 1, !tbaa !24
  %123 = add i8 %122, 97
  %124 = icmp ult i8 %123, 2
  br i1 %124, label %253, label %256

125:                                              ; preds = %117
  %126 = getelementptr inbounds i8, ptr %81, i64 2
  %127 = load i8, ptr %126, align 1, !tbaa !24
  %128 = icmp eq i8 %127, -128
  br i1 %128, label %253, label %256

129:                                              ; preds = %117
  %130 = getelementptr inbounds i8, ptr %81, i64 2
  %131 = load i8, ptr %130, align 1, !tbaa !24
  %132 = and i8 %131, -2
  %133 = icmp eq i8 %132, -76
  br i1 %133, label %253, label %256

134:                                              ; preds = %117
  %135 = getelementptr inbounds i8, ptr %81, i64 2
  %136 = load i8, ptr %135, align 1, !tbaa !24
  %137 = add i8 %136, 117
  %138 = icmp ult i8 %137, 4
  br i1 %138, label %253, label %256

139:                                              ; preds = %108
  %140 = getelementptr inbounds i8, ptr %81, i64 1
  %141 = load i8, ptr %140, align 1, !tbaa !24
  switch i8 %141, label %158 [
    i8 -128, label %142
    i8 -127, label %146
    i8 -122, label %154
  ]

142:                                              ; preds = %139
  %143 = getelementptr inbounds i8, ptr %81, i64 2
  %144 = load i8, ptr %143, align 1, !tbaa !24
  %145 = icmp ult i8 %144, -65
  br i1 %145, label %253, label %256

146:                                              ; preds = %139
  %147 = getelementptr inbounds i8, ptr %81, i64 2
  %148 = load i8, ptr %147, align 1, !tbaa !24
  %149 = add i8 %148, 127
  %150 = icmp ult i8 %149, 19
  %151 = add i8 %148, 107
  %152 = icmp ult i8 %151, 27
  %153 = or i1 %150, %152
  br i1 %153, label %253, label %256

154:                                              ; preds = %139
  %155 = getelementptr inbounds i8, ptr %81, i64 2
  %156 = load i8, ptr %155, align 1, !tbaa !24
  %157 = icmp ugt i8 %156, -113
  br i1 %157, label %253, label %256

158:                                              ; preds = %139
  %159 = add i8 %141, 121
  %160 = icmp ult i8 %159, 10
  %161 = add i8 %141, 108
  %162 = icmp ult i8 %161, 9
  %163 = or i1 %160, %162
  br i1 %163, label %253, label %164

164:                                              ; preds = %158
  %165 = add i8 %141, 97
  %166 = icmp ult i8 %165, 17
  %167 = and i8 %141, -2
  %168 = icmp eq i8 %167, -72
  %169 = or i1 %166, %168
  br i1 %169, label %253, label %170

170:                                              ; preds = %164
  switch i8 %141, label %256 [
    i8 -111, label %171
    i8 -99, label %175
    i8 -98, label %179
  ]

171:                                              ; preds = %170
  %172 = getelementptr inbounds i8, ptr %81, i64 2
  %173 = load i8, ptr %172, align 1, !tbaa !24
  %174 = icmp ult i8 %173, -96
  br i1 %174, label %253, label %256

175:                                              ; preds = %170
  %176 = getelementptr inbounds i8, ptr %81, i64 2
  %177 = load i8, ptr %176, align 1, !tbaa !24
  %178 = icmp ult i8 %177, -74
  br i1 %178, label %253, label %256

179:                                              ; preds = %170
  %180 = getelementptr inbounds i8, ptr %81, i64 2
  %181 = load i8, ptr %180, align 1, !tbaa !24
  %182 = icmp ugt i8 %181, -109
  br i1 %182, label %253, label %256

183:                                              ; preds = %108
  %184 = getelementptr inbounds i8, ptr %81, i64 1
  %185 = load i8, ptr %184, align 1, !tbaa !24
  switch i8 %185, label %256 [
    i8 -128, label %186
    i8 -123, label %195
  ]

186:                                              ; preds = %183
  %187 = getelementptr inbounds i8, ptr %81, i64 2
  %188 = load i8, ptr %187, align 1, !tbaa !24
  %189 = icmp ult i8 %188, -124
  br i1 %189, label %253, label %190

190:                                              ; preds = %186
  %191 = add nsw i8 %188, 120
  %192 = icmp ult i8 %191, 25
  %193 = icmp eq i8 %188, -80
  %194 = or i1 %193, %192
  br i1 %194, label %253, label %256

195:                                              ; preds = %183
  %196 = getelementptr inbounds i8, ptr %81, i64 2
  %197 = load i8, ptr %196, align 1, !tbaa !24
  %198 = icmp eq i8 %197, -92
  br i1 %198, label %253, label %256

199:                                              ; preds = %108
  %200 = getelementptr inbounds i8, ptr %81, i64 1
  %201 = load i8, ptr %200, align 1, !tbaa !24
  switch i8 %201, label %256 [
    i8 -76, label %202
    i8 -72, label %206
    i8 -71, label %210
    i8 -69, label %215
    i8 -66, label %219
    i8 -65, label %223
  ]

202:                                              ; preds = %199
  %203 = getelementptr inbounds i8, ptr %81, i64 2
  %204 = load i8, ptr %203, align 1, !tbaa !24
  %205 = icmp ugt i8 %204, -67
  br i1 %205, label %253, label %256

206:                                              ; preds = %199
  %207 = getelementptr inbounds i8, ptr %81, i64 2
  %208 = load i8, ptr %207, align 1, !tbaa !24
  %209 = icmp ult i8 %208, -112
  br i1 %209, label %253, label %256

210:                                              ; preds = %199
  %211 = getelementptr inbounds i8, ptr %81, i64 2
  %212 = load i8, ptr %211, align 1, !tbaa !24
  %213 = add i8 %212, 123
  %214 = icmp ult i8 %213, 2
  br i1 %214, label %253, label %256

215:                                              ; preds = %199
  %216 = getelementptr inbounds i8, ptr %81, i64 2
  %217 = load i8, ptr %216, align 1, !tbaa !24
  %218 = icmp eq i8 %217, -65
  br i1 %218, label %253, label %256

219:                                              ; preds = %199
  %220 = getelementptr inbounds i8, ptr %81, i64 2
  %221 = load i8, ptr %220, align 1, !tbaa !24
  %222 = icmp eq i8 %221, -96
  br i1 %222, label %253, label %256

223:                                              ; preds = %199
  %224 = getelementptr inbounds i8, ptr %81, i64 2
  %225 = load i8, ptr %224, align 1, !tbaa !24
  %226 = add i8 %225, 80
  %227 = icmp ult i8 %226, 9
  br i1 %227, label %253, label %256

228:                                              ; preds = %108
  %229 = getelementptr inbounds i8, ptr %81, i64 1
  %230 = load i8, ptr %229, align 1, !tbaa !24
  switch i8 %230, label %256 [
    i8 -101, label %231
    i8 -99, label %240
  ]

231:                                              ; preds = %228
  %232 = getelementptr inbounds i8, ptr %81, i64 2
  %233 = load i8, ptr %232, align 1, !tbaa !24
  %234 = icmp eq i8 %233, -78
  br i1 %234, label %235, label %256

235:                                              ; preds = %231
  %236 = getelementptr inbounds i8, ptr %81, i64 3
  %237 = load i8, ptr %236, align 1, !tbaa !24
  %238 = and i8 %237, -4
  %239 = icmp eq i8 %238, -96
  br i1 %239, label %253, label %256

240:                                              ; preds = %228
  %241 = getelementptr inbounds i8, ptr %81, i64 2
  %242 = load i8, ptr %241, align 1, !tbaa !24
  %243 = icmp eq i8 %242, -123
  br i1 %243, label %244, label %256

244:                                              ; preds = %240
  %245 = getelementptr inbounds i8, ptr %81, i64 3
  %246 = load i8, ptr %245, align 1, !tbaa !24
  %247 = add i8 %246, 77
  %248 = icmp ult i8 %247, 8
  br i1 %248, label %253, label %256

249:                                              ; preds = %108
  %250 = getelementptr inbounds i8, ptr %81, i64 1
  %251 = load i8, ptr %250, align 1, !tbaa !24
  %252 = icmp eq i8 %251, -96
  br i1 %252, label %253, label %256

253:                                              ; preds = %89, %109, %113, %125, %129, %142, %154, %171, %175, %179, %186, %195, %202, %206, %215, %219, %235, %249, %134, %146, %158, %164, %190, %223, %244, %120, %210, %97
  %254 = getelementptr inbounds i8, ptr %80, i64 1
  store i8 92, ptr %80, align 1, !tbaa !24
  %255 = load i64, ptr %1, align 8, !tbaa !71
  br label %256

256:                                              ; preds = %146, %190, %89, %210, %120, %109, %113, %125, %129, %134, %142, %154, %171, %175, %179, %195, %202, %206, %215, %219, %223, %235, %231, %244, %240, %249, %117, %170, %183, %199, %228, %108, %253, %97
  %257 = phi i64 [ %255, %253 ], [ %79, %97 ], [ %79, %108 ], [ %79, %228 ], [ %79, %199 ], [ %79, %210 ], [ %79, %183 ], [ %79, %170 ], [ %79, %117 ], [ %79, %120 ], [ %79, %249 ], [ %79, %240 ], [ %79, %244 ], [ %79, %231 ], [ %79, %235 ], [ %79, %223 ], [ %79, %219 ], [ %79, %215 ], [ %79, %206 ], [ %79, %202 ], [ %79, %195 ], [ %79, %179 ], [ %79, %175 ], [ %79, %171 ], [ %79, %154 ], [ %79, %142 ], [ %79, %134 ], [ %79, %129 ], [ %79, %125 ], [ %79, %113 ], [ %79, %109 ], [ %79, %89 ], [ %79, %190 ], [ %79, %146 ]
  %258 = phi ptr [ %254, %253 ], [ %80, %97 ], [ %80, %108 ], [ %80, %228 ], [ %80, %199 ], [ %80, %210 ], [ %80, %183 ], [ %80, %170 ], [ %80, %117 ], [ %80, %120 ], [ %80, %249 ], [ %80, %240 ], [ %80, %244 ], [ %80, %231 ], [ %80, %235 ], [ %80, %223 ], [ %80, %219 ], [ %80, %215 ], [ %80, %206 ], [ %80, %202 ], [ %80, %195 ], [ %80, %179 ], [ %80, %175 ], [ %80, %171 ], [ %80, %154 ], [ %80, %142 ], [ %80, %134 ], [ %80, %129 ], [ %80, %125 ], [ %80, %113 ], [ %80, %109 ], [ %80, %89 ], [ %80, %190 ], [ %80, %146 ]
  %259 = call i64 @llvm.umin.i64(i64 %257, i64 %87)
  %260 = sub i64 %257, %259
  store i64 %260, ptr %1, align 8, !tbaa !71
  %261 = icmp eq i64 %259, 0
  br i1 %261, label %73, label %262

262:                                              ; preds = %256
  %263 = ptrtoint ptr %258 to i64
  %264 = icmp ult i64 %259, 64
  %265 = sub i64 %263, %82
  %266 = icmp ult i64 %265, 64
  %267 = select i1 %264, i1 true, i1 %266
  br i1 %267, label %313, label %268

268:                                              ; preds = %262
  %269 = and i64 %259, 192
  %270 = and i64 %259, 63
  %271 = getelementptr i8, ptr %258, i64 %269
  %272 = getelementptr i8, ptr %81, i64 %269
  %273 = load <16 x i8>, ptr %81, align 1, !tbaa !24
  %274 = getelementptr i8, ptr %81, i64 16
  %275 = load <16 x i8>, ptr %274, align 1, !tbaa !24
  %276 = getelementptr i8, ptr %81, i64 32
  %277 = load <16 x i8>, ptr %276, align 1, !tbaa !24
  %278 = getelementptr i8, ptr %81, i64 48
  %279 = load <16 x i8>, ptr %278, align 1, !tbaa !24
  store <16 x i8> %273, ptr %258, align 1, !tbaa !24
  %280 = getelementptr i8, ptr %258, i64 16
  store <16 x i8> %275, ptr %280, align 1, !tbaa !24
  %281 = getelementptr i8, ptr %258, i64 32
  store <16 x i8> %277, ptr %281, align 1, !tbaa !24
  %282 = getelementptr i8, ptr %258, i64 48
  store <16 x i8> %279, ptr %282, align 1, !tbaa !24
  %283 = icmp eq i64 %269, 64
  br i1 %283, label %311, label %284, !llvm.loop !122

284:                                              ; preds = %268
  %285 = getelementptr i8, ptr %258, i64 64
  %286 = getelementptr i8, ptr %81, i64 64
  %287 = load <16 x i8>, ptr %286, align 1, !tbaa !24
  %288 = getelementptr i8, ptr %81, i64 80
  %289 = load <16 x i8>, ptr %288, align 1, !tbaa !24
  %290 = getelementptr i8, ptr %81, i64 96
  %291 = load <16 x i8>, ptr %290, align 1, !tbaa !24
  %292 = getelementptr i8, ptr %81, i64 112
  %293 = load <16 x i8>, ptr %292, align 1, !tbaa !24
  store <16 x i8> %287, ptr %285, align 1, !tbaa !24
  %294 = getelementptr i8, ptr %258, i64 80
  store <16 x i8> %289, ptr %294, align 1, !tbaa !24
  %295 = getelementptr i8, ptr %258, i64 96
  store <16 x i8> %291, ptr %295, align 1, !tbaa !24
  %296 = getelementptr i8, ptr %258, i64 112
  store <16 x i8> %293, ptr %296, align 1, !tbaa !24
  %297 = icmp eq i64 %269, 128
  br i1 %297, label %311, label %298, !llvm.loop !122

298:                                              ; preds = %284
  %299 = getelementptr i8, ptr %258, i64 128
  %300 = getelementptr i8, ptr %81, i64 128
  %301 = load <16 x i8>, ptr %300, align 1, !tbaa !24
  %302 = getelementptr i8, ptr %81, i64 144
  %303 = load <16 x i8>, ptr %302, align 1, !tbaa !24
  %304 = getelementptr i8, ptr %81, i64 160
  %305 = load <16 x i8>, ptr %304, align 1, !tbaa !24
  %306 = getelementptr i8, ptr %81, i64 176
  %307 = load <16 x i8>, ptr %306, align 1, !tbaa !24
  store <16 x i8> %301, ptr %299, align 1, !tbaa !24
  %308 = getelementptr i8, ptr %258, i64 144
  store <16 x i8> %303, ptr %308, align 1, !tbaa !24
  %309 = getelementptr i8, ptr %258, i64 160
  store <16 x i8> %305, ptr %309, align 1, !tbaa !24
  %310 = getelementptr i8, ptr %258, i64 176
  store <16 x i8> %307, ptr %310, align 1, !tbaa !24
  br label %311

311:                                              ; preds = %298, %284, %268
  %312 = icmp eq i64 %259, %269
  br i1 %312, label %69, label %313

313:                                              ; preds = %262, %311
  %314 = phi i64 [ %259, %262 ], [ %270, %311 ]
  %315 = phi ptr [ %258, %262 ], [ %271, %311 ]
  %316 = phi ptr [ %81, %262 ], [ %272, %311 ]
  %317 = add nsw i64 %314, -1
  %318 = and i64 %314, 7
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %331, label %320

320:                                              ; preds = %313, %320
  %321 = phi i64 [ %325, %320 ], [ %314, %313 ]
  %322 = phi ptr [ %328, %320 ], [ %315, %313 ]
  %323 = phi ptr [ %326, %320 ], [ %316, %313 ]
  %324 = phi i64 [ %329, %320 ], [ 0, %313 ]
  %325 = add nsw i64 %321, -1
  %326 = getelementptr inbounds i8, ptr %323, i64 1
  %327 = load i8, ptr %323, align 1, !tbaa !24
  %328 = getelementptr inbounds i8, ptr %322, i64 1
  store i8 %327, ptr %322, align 1, !tbaa !24
  %329 = add i64 %324, 1
  %330 = icmp eq i64 %329, %318
  br i1 %330, label %331, label %320, !llvm.loop !123

331:                                              ; preds = %320, %313
  %332 = phi ptr [ undef, %313 ], [ %326, %320 ]
  %333 = phi ptr [ undef, %313 ], [ %328, %320 ]
  %334 = phi i64 [ %314, %313 ], [ %325, %320 ]
  %335 = phi ptr [ %315, %313 ], [ %328, %320 ]
  %336 = phi ptr [ %316, %313 ], [ %326, %320 ]
  %337 = icmp ult i64 %317, 7
  br i1 %337, label %69, label %338

338:                                              ; preds = %331, %338
  %339 = phi i64 [ %363, %338 ], [ %334, %331 ]
  %340 = phi ptr [ %366, %338 ], [ %335, %331 ]
  %341 = phi ptr [ %364, %338 ], [ %336, %331 ]
  %342 = getelementptr inbounds i8, ptr %341, i64 1
  %343 = load i8, ptr %341, align 1, !tbaa !24
  %344 = getelementptr inbounds i8, ptr %340, i64 1
  store i8 %343, ptr %340, align 1, !tbaa !24
  %345 = getelementptr inbounds i8, ptr %341, i64 2
  %346 = load i8, ptr %342, align 1, !tbaa !24
  %347 = getelementptr inbounds i8, ptr %340, i64 2
  store i8 %346, ptr %344, align 1, !tbaa !24
  %348 = getelementptr inbounds i8, ptr %341, i64 3
  %349 = load i8, ptr %345, align 1, !tbaa !24
  %350 = getelementptr inbounds i8, ptr %340, i64 3
  store i8 %349, ptr %347, align 1, !tbaa !24
  %351 = getelementptr inbounds i8, ptr %341, i64 4
  %352 = load i8, ptr %348, align 1, !tbaa !24
  %353 = getelementptr inbounds i8, ptr %340, i64 4
  store i8 %352, ptr %350, align 1, !tbaa !24
  %354 = getelementptr inbounds i8, ptr %341, i64 5
  %355 = load i8, ptr %351, align 1, !tbaa !24
  %356 = getelementptr inbounds i8, ptr %340, i64 5
  store i8 %355, ptr %353, align 1, !tbaa !24
  %357 = getelementptr inbounds i8, ptr %341, i64 6
  %358 = load i8, ptr %354, align 1, !tbaa !24
  %359 = getelementptr inbounds i8, ptr %340, i64 6
  store i8 %358, ptr %356, align 1, !tbaa !24
  %360 = getelementptr inbounds i8, ptr %341, i64 7
  %361 = load i8, ptr %357, align 1, !tbaa !24
  %362 = getelementptr inbounds i8, ptr %340, i64 7
  store i8 %361, ptr %359, align 1, !tbaa !24
  %363 = add nsw i64 %339, -8
  %364 = getelementptr inbounds i8, ptr %341, i64 8
  %365 = load i8, ptr %360, align 1, !tbaa !24
  %366 = getelementptr inbounds i8, ptr %340, i64 8
  store i8 %365, ptr %362, align 1, !tbaa !24
  %367 = icmp eq i64 %363, 0
  br i1 %367, label %69, label %338, !llvm.loop !125

368:                                              ; preds = %73, %66
  %369 = phi ptr [ %56, %66 ], [ %76, %73 ]
  %370 = load i32, ptr %26, align 4, !tbaa !16
  %371 = or i32 %370, 536870912
  store i32 %371, ptr %26, align 4, !tbaa !16
  br label %436

372:                                              ; preds = %54
  %373 = and i32 %62, 2048
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %375, label %384

375:                                              ; preds = %372
  %376 = and i32 %62, 16
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %412, label %378

378:                                              ; preds = %375
  %379 = call zeroext i1 @Perl__is_in_locale_category(i1 noundef zeroext false, i32 noundef -1) #13
  br i1 %379, label %380, label %412

380:                                              ; preds = %378
  %381 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %382 = getelementptr inbounds %struct.cop, ptr %381, i64 0, i32 10
  %383 = load i32, ptr %382, align 8, !tbaa !66
  br label %384

384:                                              ; preds = %380, %372
  %385 = phi i32 [ %383, %380 ], [ %62, %372 ]
  %386 = and i32 %385, 8
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %412

388:                                              ; preds = %384
  %389 = load i64, ptr %1, align 8, !tbaa !71
  %390 = add i64 %389, -1
  store i64 %390, ptr %1, align 8, !tbaa !71
  %391 = icmp eq i64 %389, 0
  br i1 %391, label %436, label %392

392:                                              ; preds = %388, %404
  %393 = phi ptr [ %408, %404 ], [ %56, %388 ]
  %394 = phi ptr [ %407, %404 ], [ %25, %388 ]
  %395 = load i8, ptr %394, align 1, !tbaa !24
  %396 = zext i8 %395 to i64
  %397 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %396
  %398 = load i32, ptr %397, align 4, !tbaa !57
  %399 = and i32 %398, 1048576
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %404, label %401

401:                                              ; preds = %392
  %402 = getelementptr inbounds i8, ptr %393, i64 1
  store i8 92, ptr %393, align 1, !tbaa !24
  %403 = load i8, ptr %394, align 1, !tbaa !24
  br label %404

404:                                              ; preds = %392, %401
  %405 = phi i8 [ %403, %401 ], [ %395, %392 ]
  %406 = phi ptr [ %402, %401 ], [ %393, %392 ]
  %407 = getelementptr inbounds i8, ptr %394, i64 1
  %408 = getelementptr inbounds i8, ptr %406, i64 1
  store i8 %405, ptr %406, align 1, !tbaa !24
  %409 = load i64, ptr %1, align 8, !tbaa !71
  %410 = add i64 %409, -1
  store i64 %410, ptr %1, align 8, !tbaa !71
  %411 = icmp eq i64 %409, 0
  br i1 %411, label %436, label %392, !llvm.loop !126

412:                                              ; preds = %384, %378, %375
  %413 = load i64, ptr %1, align 8, !tbaa !71
  %414 = add i64 %413, -1
  store i64 %414, ptr %1, align 8, !tbaa !71
  %415 = icmp eq i64 %413, 0
  br i1 %415, label %436, label %416

416:                                              ; preds = %412, %428
  %417 = phi ptr [ %432, %428 ], [ %56, %412 ]
  %418 = phi ptr [ %431, %428 ], [ %25, %412 ]
  %419 = load i8, ptr %418, align 1, !tbaa !24
  %420 = zext i8 %419 to i64
  %421 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %420
  %422 = load i32, ptr %421, align 4, !tbaa !57
  %423 = and i32 %422, 16385
  %424 = icmp eq i32 %423, 16385
  br i1 %424, label %428, label %425

425:                                              ; preds = %416
  %426 = getelementptr inbounds i8, ptr %417, i64 1
  store i8 92, ptr %417, align 1, !tbaa !24
  %427 = load i8, ptr %418, align 1, !tbaa !24
  br label %428

428:                                              ; preds = %425, %416
  %429 = phi i8 [ %419, %416 ], [ %427, %425 ]
  %430 = phi ptr [ %417, %416 ], [ %426, %425 ]
  %431 = getelementptr inbounds i8, ptr %418, i64 1
  %432 = getelementptr inbounds i8, ptr %430, i64 1
  store i8 %429, ptr %430, align 1, !tbaa !24
  %433 = load i64, ptr %1, align 8, !tbaa !71
  %434 = add i64 %433, -1
  store i64 %434, ptr %1, align 8, !tbaa !71
  %435 = icmp eq i64 %433, 0
  br i1 %435, label %436, label %416, !llvm.loop !127

436:                                              ; preds = %404, %428, %388, %412, %368
  %437 = phi ptr [ %369, %368 ], [ %56, %412 ], [ %56, %388 ], [ %432, %428 ], [ %408, %404 ]
  store i8 0, ptr %437, align 1, !tbaa !24
  %438 = load ptr, ptr %55, align 8, !tbaa !24
  %439 = ptrtoint ptr %437 to i64
  %440 = ptrtoint ptr %438 to i64
  %441 = sub i64 %439, %440
  %442 = load ptr, ptr %8, align 8, !tbaa !26
  %443 = getelementptr inbounds %struct.xpv, ptr %442, i64 0, i32 2
  store i64 %441, ptr %443, align 8, !tbaa !55
  %444 = load i32, ptr %26, align 4, !tbaa !16
  %445 = and i32 %444, 2147418367
  %446 = or i32 %445, 17408
  store i32 %446, ptr %26, align 4, !tbaa !16
  br label %449

447:                                              ; preds = %23
  call void @Perl_sv_setpvn(ptr noundef nonnull %8, ptr noundef %25, i64 noundef 0) #13
  %448 = load i32, ptr %26, align 4, !tbaa !16
  br label %449

449:                                              ; preds = %447, %436
  %450 = phi i32 [ %448, %447 ], [ %446, %436 ]
  %451 = and i32 %450, 4194304
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %455, label %453

453:                                              ; preds = %449
  %454 = call i32 @Perl_mg_set(ptr noundef nonnull %8) #13
  br label %455

455:                                              ; preds = %449, %453
  store ptr %8, ptr %2, align 8, !tbaa !5
  %456 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %457 = load ptr, ptr %456, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  ret ptr %457
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_fc() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = alloca [14 x i8], align 1
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %6 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 3
  %8 = load i64, ptr %7, align 8, !tbaa !14
  %9 = getelementptr inbounds ptr, ptr %5, i64 %8
  %10 = load ptr, ptr %9, align 8, !tbaa !5
  %11 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %12 = load ptr, ptr %11, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  call void @llvm.lifetime.start.p0(i64 14, ptr nonnull %2) #13
  %13 = getelementptr inbounds %struct.sv, ptr %12, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !16
  %15 = and i32 %14, 2097152
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %0
  %18 = tail call i32 @Perl_mg_get(ptr noundef nonnull %12) #13
  %19 = load i32, ptr %13, align 4, !tbaa !16
  br label %20

20:                                               ; preds = %0, %17
  %21 = phi i32 [ %14, %0 ], [ %19, %17 ]
  %22 = and i32 %21, 65280
  %23 = icmp ne i32 %22, 0
  %24 = and i32 %21, 255
  %25 = icmp eq i32 %24, 8
  %26 = or i1 %23, %25
  %27 = and i32 %21, 16826623
  %28 = icmp eq i32 %27, 16777226
  %29 = or i1 %28, %26
  br i1 %29, label %30, label %42

30:                                               ; preds = %20
  %31 = and i32 %21, 2098176
  %32 = icmp eq i32 %31, 1024
  br i1 %32, label %33, label %39

33:                                               ; preds = %30
  %34 = load ptr, ptr %12, align 8, !tbaa !26
  %35 = getelementptr inbounds %struct.xpv, ptr %34, i64 0, i32 2
  %36 = load i64, ptr %35, align 8, !tbaa !55
  store i64 %36, ptr %1, align 8, !tbaa !71
  %37 = getelementptr inbounds %struct.sv, ptr %12, i64 0, i32 3
  %38 = load ptr, ptr %37, align 8, !tbaa !24
  br label %46

39:                                               ; preds = %30
  %40 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %12, ptr noundef nonnull %1, i32 noundef 32) #13
  %41 = load i64, ptr %1, align 8, !tbaa !71
  br label %46

42:                                               ; preds = %20
  %43 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 41) #13
  br i1 %43, label %44, label %45

44:                                               ; preds = %42
  tail call void @Perl_report_uninit(ptr noundef nonnull %12) #13
  br label %45

45:                                               ; preds = %44, %42
  store i64 0, ptr %1, align 8, !tbaa !71
  br label %46

46:                                               ; preds = %33, %39, %45
  %47 = phi i64 [ 0, %45 ], [ %36, %33 ], [ %41, %39 ]
  %48 = phi ptr [ @.str.3, %45 ], [ %38, %33 ], [ %40, %39 ]
  %49 = add i64 %47, 1
  %50 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 2
  %51 = load i32, ptr %50, align 4, !tbaa !16
  %52 = and i32 %51, 255
  %53 = icmp ugt i32 %52, 2
  br i1 %53, label %56, label %54

54:                                               ; preds = %46
  call void @Perl_sv_upgrade(ptr noundef nonnull %10, i32 noundef 3) #13
  %55 = load i32, ptr %50, align 4, !tbaa !16
  br label %56

56:                                               ; preds = %54, %46
  %57 = phi i32 [ %55, %54 ], [ %51, %46 ]
  %58 = and i32 %57, 268435456
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %65

60:                                               ; preds = %56
  %61 = load ptr, ptr %10, align 8, !tbaa !26
  %62 = getelementptr inbounds %struct.xpv, ptr %61, i64 0, i32 3
  %63 = load i64, ptr %62, align 8, !tbaa !24
  %64 = icmp ult i64 %63, %49
  br i1 %64, label %65, label %68

65:                                               ; preds = %60, %56
  %66 = call ptr @Perl_sv_grow(ptr noundef nonnull %10, i64 noundef %49) #13
  %67 = load i32, ptr %50, align 4, !tbaa !16
  br label %71

68:                                               ; preds = %60
  %69 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 3
  %70 = load ptr, ptr %69, align 8, !tbaa !24
  br label %71

71:                                               ; preds = %68, %65
  %72 = phi i32 [ %67, %65 ], [ %57, %68 ]
  %73 = phi ptr [ %66, %65 ], [ %70, %68 ]
  %74 = and i32 %72, 1610547455
  %75 = or i32 %74, 17408
  store i32 %75, ptr %50, align 4, !tbaa !16
  store ptr %10, ptr %11, align 8, !tbaa !5
  %76 = load i64, ptr %1, align 8, !tbaa !71
  %77 = getelementptr inbounds i8, ptr %48, i64 %76
  %78 = load i32, ptr %13, align 4, !tbaa !16
  %79 = and i32 %78, 536870912
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %133, label %81

81:                                               ; preds = %71
  %82 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %83 = getelementptr inbounds %struct.cop, ptr %82, i64 0, i32 10
  %84 = load i32, ptr %83, align 8, !tbaa !66
  %85 = and i32 %84, 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %133

87:                                               ; preds = %81
  %88 = icmp sgt i64 %76, 0
  br i1 %88, label %89, label %129

89:                                               ; preds = %87
  %90 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 3
  br label %91

91:                                               ; preds = %89, %119
  %92 = phi i64 [ %49, %89 ], [ %122, %119 ]
  %93 = phi ptr [ %48, %89 ], [ %125, %119 ]
  %94 = phi ptr [ %73, %89 ], [ %124, %119 ]
  %95 = load i8, ptr %93, align 1, !tbaa !24
  %96 = zext i8 %95 to i64
  %97 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %96
  %98 = load i8, ptr %97, align 1, !tbaa !24
  %99 = zext i8 %98 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #13
  %100 = call i64 @Perl__to_utf8_fold_flags(ptr noundef nonnull %93, ptr noundef nonnull %2, ptr noundef nonnull %3, i8 noundef zeroext 2) #13
  %101 = load i64, ptr %3, align 8, !tbaa !71
  %102 = icmp ugt i64 %101, %99
  br i1 %102, label %103, label %119

103:                                              ; preds = %91
  %104 = load ptr, ptr %10, align 8, !tbaa !26
  %105 = getelementptr inbounds %struct.xpv, ptr %104, i64 0, i32 3
  %106 = load i64, ptr %105, align 8, !tbaa !24
  %107 = sub i64 %101, %99
  %108 = add i64 %107, %92
  %109 = icmp ult i64 %106, %108
  br i1 %109, label %110, label %119

110:                                              ; preds = %103
  %111 = load ptr, ptr %90, align 8, !tbaa !24
  %112 = ptrtoint ptr %94 to i64
  %113 = ptrtoint ptr %111 to i64
  %114 = sub i64 %112, %113
  %115 = call ptr @Perl_sv_grow(ptr noundef nonnull %10, i64 noundef %108) #13
  %116 = load ptr, ptr %90, align 8, !tbaa !24
  %117 = getelementptr inbounds i8, ptr %116, i64 %114
  %118 = load i64, ptr %3, align 8, !tbaa !71
  br label %119

119:                                              ; preds = %110, %103, %91
  %120 = phi i64 [ %118, %110 ], [ %101, %103 ], [ %101, %91 ]
  %121 = phi ptr [ %117, %110 ], [ %94, %103 ], [ %94, %91 ]
  %122 = phi i64 [ %108, %110 ], [ %108, %103 ], [ %92, %91 ]
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %121, ptr nonnull align 1 %2, i64 %120, i1 false)
  %123 = load i64, ptr %3, align 8, !tbaa !71
  %124 = getelementptr inbounds i8, ptr %121, i64 %123
  %125 = getelementptr inbounds i8, ptr %93, i64 %99
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #13
  %126 = icmp ult ptr %125, %77
  br i1 %126, label %91, label %127, !llvm.loop !128

127:                                              ; preds = %119
  %128 = load i32, ptr %50, align 4, !tbaa !16
  br label %129

129:                                              ; preds = %127, %87
  %130 = phi i32 [ %75, %87 ], [ %128, %127 ]
  %131 = phi ptr [ %73, %87 ], [ %124, %127 ]
  %132 = or i32 %130, 536870912
  store i32 %132, ptr %50, align 4, !tbaa !16
  br label %248

133:                                              ; preds = %81, %71
  %134 = icmp eq i64 %76, 0
  br i1 %134, label %248, label %135

135:                                              ; preds = %133
  %136 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %137 = getelementptr inbounds %struct.cop, ptr %136, i64 0, i32 10
  %138 = load i32, ptr %137, align 8, !tbaa !66
  %139 = and i32 %138, 2048
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %150

141:                                              ; preds = %135
  %142 = and i32 %138, 16
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %158, label %144

144:                                              ; preds = %141
  %145 = call zeroext i1 @Perl__is_in_locale_category(i1 noundef zeroext false, i32 noundef -1) #13
  br i1 %145, label %146, label %158

146:                                              ; preds = %144
  %147 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %148 = getelementptr inbounds %struct.cop, ptr %147, i64 0, i32 10
  %149 = load i32, ptr %148, align 8, !tbaa !66
  br label %150

150:                                              ; preds = %146, %135
  %151 = phi i32 [ %149, %146 ], [ %138, %135 ]
  %152 = and i32 %151, 8
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %158

154:                                              ; preds = %150
  %155 = icmp sgt i64 %76, 0
  br i1 %155, label %156, label %248

156:                                              ; preds = %154
  %157 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 3
  br label %174

158:                                              ; preds = %150, %144, %141
  %159 = icmp sgt i64 %76, 0
  br i1 %159, label %160, label %248

160:                                              ; preds = %158, %160
  %161 = phi ptr [ %172, %160 ], [ %48, %158 ]
  %162 = phi ptr [ %171, %160 ], [ %73, %158 ]
  %163 = load i8, ptr %161, align 1, !tbaa !24
  %164 = zext i8 %163 to i64
  %165 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %164
  %166 = load i32, ptr %165, align 4, !tbaa !57
  %167 = and i32 %166, 16400
  %168 = icmp eq i32 %167, 16400
  %169 = add i8 %163, 32
  %170 = select i1 %168, i8 %169, i8 %163
  store i8 %170, ptr %162, align 1, !tbaa !24
  %171 = getelementptr inbounds i8, ptr %162, i64 1
  %172 = getelementptr inbounds i8, ptr %161, i64 1
  %173 = icmp ult ptr %172, %77
  br i1 %173, label %160, label %248, !llvm.loop !129

174:                                              ; preds = %156, %242
  %175 = phi i64 [ %49, %156 ], [ %244, %242 ]
  %176 = phi ptr [ %48, %156 ], [ %246, %242 ]
  %177 = phi ptr [ %73, %156 ], [ %245, %242 ]
  %178 = load i8, ptr %176, align 1, !tbaa !24
  switch i8 %178, label %238 [
    i8 -75, label %179
    i8 -33, label %221
  ]

179:                                              ; preds = %174
  %180 = load ptr, ptr %157, align 8, !tbaa !24
  %181 = ptrtoint ptr %177 to i64
  %182 = ptrtoint ptr %180 to i64
  %183 = sub i64 %181, %182
  store i64 %183, ptr %1, align 8, !tbaa !71
  %184 = load ptr, ptr %10, align 8, !tbaa !26
  %185 = getelementptr inbounds %struct.xpv, ptr %184, i64 0, i32 2
  store i64 %183, ptr %185, align 8, !tbaa !55
  %186 = ptrtoint ptr %77 to i64
  %187 = ptrtoint ptr %176 to i64
  %188 = sub i64 %186, %187
  %189 = shl nsw i64 %188, 1
  %190 = or i64 %189, 1
  %191 = call i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef nonnull %10, i32 noundef 4098, i64 noundef %190) #13
  store i64 %191, ptr %1, align 8, !tbaa !71
  %192 = load ptr, ptr %157, align 8, !tbaa !24
  %193 = getelementptr inbounds i8, ptr %192, i64 %191
  store i16 -17202, ptr %193, align 1
  %194 = getelementptr inbounds i8, ptr %193, i64 2
  %195 = getelementptr inbounds i8, ptr %176, i64 1
  %196 = icmp ult ptr %195, %77
  br i1 %196, label %197, label %248

197:                                              ; preds = %179, %217
  %198 = phi ptr [ %219, %217 ], [ %195, %179 ]
  %199 = phi ptr [ %218, %217 ], [ %194, %179 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #13
  %200 = load i8, ptr %198, align 1, !tbaa !24
  %201 = zext i8 %200 to i64
  %202 = call i64 @Perl__to_uni_fold_flags(i64 noundef %201, ptr noundef nonnull %2, ptr noundef nonnull %4, i8 noundef zeroext 2) #13
  %203 = icmp ult i64 %202, 128
  br i1 %203, label %204, label %213

204:                                              ; preds = %197
  %205 = load i8, ptr %198, align 1, !tbaa !24
  %206 = icmp eq i8 %205, -33
  br i1 %206, label %207, label %210

207:                                              ; preds = %204
  %208 = getelementptr inbounds i8, ptr %199, i64 1
  store i8 115, ptr %199, align 1, !tbaa !24
  %209 = getelementptr inbounds i8, ptr %199, i64 2
  store i8 115, ptr %208, align 1, !tbaa !24
  br label %217

210:                                              ; preds = %204
  %211 = trunc i64 %202 to i8
  %212 = getelementptr inbounds i8, ptr %199, i64 1
  store i8 %211, ptr %199, align 1, !tbaa !24
  br label %217

213:                                              ; preds = %197
  %214 = load i64, ptr %4, align 8, !tbaa !71
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %199, ptr nonnull align 1 %2, i64 %214, i1 false)
  %215 = load i64, ptr %4, align 8, !tbaa !71
  %216 = getelementptr inbounds i8, ptr %199, i64 %215
  br label %217

217:                                              ; preds = %207, %210, %213
  %218 = phi ptr [ %209, %207 ], [ %212, %210 ], [ %216, %213 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #13
  %219 = getelementptr inbounds i8, ptr %198, i64 1
  %220 = icmp ult ptr %219, %77
  br i1 %220, label %197, label %248, !llvm.loop !130

221:                                              ; preds = %174
  %222 = load ptr, ptr %10, align 8, !tbaa !26
  %223 = getelementptr inbounds %struct.xpv, ptr %222, i64 0, i32 3
  %224 = load i64, ptr %223, align 8, !tbaa !24
  %225 = add i64 %175, 1
  %226 = icmp ult i64 %224, %225
  br i1 %226, label %227, label %235

227:                                              ; preds = %221
  %228 = load ptr, ptr %157, align 8, !tbaa !24
  %229 = ptrtoint ptr %177 to i64
  %230 = ptrtoint ptr %228 to i64
  %231 = sub i64 %229, %230
  %232 = call ptr @Perl_sv_grow(ptr noundef nonnull %10, i64 noundef %225) #13
  %233 = load ptr, ptr %157, align 8, !tbaa !24
  %234 = getelementptr inbounds i8, ptr %233, i64 %231
  br label %235

235:                                              ; preds = %227, %221
  %236 = phi ptr [ %234, %227 ], [ %177, %221 ]
  %237 = getelementptr inbounds i8, ptr %236, i64 1
  store i8 115, ptr %236, align 1, !tbaa !24
  store i8 115, ptr %237, align 1, !tbaa !24
  br label %242

238:                                              ; preds = %174
  %239 = zext i8 %178 to i64
  %240 = getelementptr inbounds [0 x i8], ptr @PL_latin1_lc, i64 0, i64 %239
  %241 = load i8, ptr %240, align 1, !tbaa !24
  store i8 %241, ptr %177, align 1, !tbaa !24
  br label %242

242:                                              ; preds = %238, %235
  %243 = phi ptr [ %237, %235 ], [ %177, %238 ]
  %244 = phi i64 [ %225, %235 ], [ %175, %238 ]
  %245 = getelementptr inbounds i8, ptr %243, i64 1
  %246 = getelementptr inbounds i8, ptr %176, i64 1
  %247 = icmp ult ptr %246, %77
  br i1 %247, label %174, label %248, !llvm.loop !131

248:                                              ; preds = %242, %217, %160, %154, %179, %158, %133, %129
  %249 = phi ptr [ %73, %133 ], [ %131, %129 ], [ %73, %158 ], [ %194, %179 ], [ %73, %154 ], [ %171, %160 ], [ %218, %217 ], [ %245, %242 ]
  store i8 0, ptr %249, align 1, !tbaa !24
  %250 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 3
  %251 = load ptr, ptr %250, align 8, !tbaa !24
  %252 = ptrtoint ptr %249 to i64
  %253 = ptrtoint ptr %251 to i64
  %254 = sub i64 %252, %253
  %255 = load ptr, ptr %10, align 8, !tbaa !26
  %256 = getelementptr inbounds %struct.xpv, ptr %255, i64 0, i32 2
  store i64 %254, ptr %256, align 8, !tbaa !55
  %257 = load i32, ptr %13, align 4, !tbaa !16
  %258 = and i32 %257, 14680064
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %270, label %260

260:                                              ; preds = %248
  %261 = call zeroext i1 @Perl_sv_tainted(ptr noundef nonnull %12) #13
  %262 = xor i1 %261, true
  %263 = load i8, ptr @PL_tainting, align 1, !range !83
  %264 = icmp eq i8 %263, 0
  %265 = select i1 %262, i1 true, i1 %264
  %266 = load i8, ptr @PL_tainted, align 1, !range !83
  %267 = icmp eq i8 %266, 0
  %268 = select i1 %265, i1 true, i1 %267
  br i1 %268, label %270, label %269

269:                                              ; preds = %260
  call void @Perl_sv_magic(ptr noundef nonnull %10, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0) #13
  br label %270

270:                                              ; preds = %248, %260, %269
  %271 = load i32, ptr %50, align 4, !tbaa !16
  %272 = and i32 %271, 4194304
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %276, label %274

274:                                              ; preds = %270
  %275 = call i32 @Perl_mg_set(ptr noundef nonnull %10) #13
  br label %276

276:                                              ; preds = %270, %274
  store ptr %11, ptr @PL_stack_sp, align 8, !tbaa !5
  %277 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %278 = load ptr, ptr %277, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 14, ptr nonnull %2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  ret ptr %278
}

declare i64 @Perl__to_utf8_fold_flags(ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

declare i64 @Perl__to_uni_fold_flags(i64 noundef, ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_aslice() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %4 = getelementptr inbounds i32, ptr %3, i64 -1
  store ptr %4, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %5 = load i32, ptr %3, align 4, !tbaa !57
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds ptr, ptr %2, i64 %6
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  %9 = load ptr, ptr %1, align 8, !tbaa !5
  %10 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 5
  %12 = load i8, ptr %11, align 2, !tbaa !9
  %13 = and i8 %12, 32
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %23

15:                                               ; preds = %0
  %16 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 6
  %17 = load i8, ptr %16, align 1, !tbaa !15
  %18 = and i8 %17, 8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = tail call i32 @Perl_is_lvalue_sub() #13
  %22 = icmp ne i32 %21, 0
  br label %23

23:                                               ; preds = %15, %20, %0
  %24 = phi i1 [ true, %0 ], [ false, %15 ], [ %22, %20 ]
  %25 = freeze i1 %24
  %26 = zext i1 %25 to i32
  %27 = getelementptr inbounds %struct.av, ptr %9, i64 0, i32 2
  %28 = load i32, ptr %27, align 4, !tbaa !74
  %29 = and i32 %28, 255
  %30 = icmp eq i32 %29, 11
  br i1 %30, label %31, label %189

31:                                               ; preds = %23
  %32 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %33 = getelementptr inbounds %struct.op, ptr %32, i64 0, i32 6
  %34 = load i8, ptr %33, align 1, !tbaa !15
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %94

36:                                               ; preds = %31
  %37 = and i32 %28, 8388608
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %63, label %39

39:                                               ; preds = %36
  %40 = tail call ptr @Perl_mg_find(ptr noundef nonnull %9, i32 noundef 80) #13
  %41 = icmp eq ptr %40, null
  br i1 %41, label %63, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.magic, ptr %40, i64 0, i32 6
  %44 = load ptr, ptr %43, align 8, !tbaa !132
  %45 = icmp eq ptr %44, null
  br i1 %45, label %46, label %49

46:                                               ; preds = %42
  %47 = tail call ptr @Perl_newRV(ptr noundef nonnull %9) #13
  %48 = tail call ptr @Perl_sv_2mortal(ptr noundef %47) #13
  br label %49

49:                                               ; preds = %42, %46
  %50 = phi ptr [ %48, %46 ], [ %44, %42 ]
  %51 = getelementptr inbounds %struct.sv, ptr %50, i64 0, i32 3
  %52 = load ptr, ptr %51, align 8, !tbaa !24
  %53 = load ptr, ptr %52, align 8, !tbaa !26
  %54 = load ptr, ptr %53, align 8, !tbaa !38
  %55 = icmp eq ptr %54, null
  br i1 %55, label %63, label %56

56:                                               ; preds = %49
  %57 = tail call ptr @Perl_gv_fetchmethod_autoload(ptr noundef nonnull %54, ptr noundef nonnull @.str.44, i32 noundef 1) #13
  %58 = icmp eq ptr %57, null
  br i1 %58, label %63, label %59

59:                                               ; preds = %56
  %60 = tail call ptr @Perl_gv_fetchmethod_autoload(ptr noundef nonnull %54, ptr noundef nonnull @.str.45, i32 noundef 1) #13
  %61 = freeze ptr %60
  %62 = icmp ne ptr %61, null
  br label %63

63:                                               ; preds = %36, %39, %59, %56, %49
  %64 = phi i1 [ true, %39 ], [ true, %36 ], [ false, %56 ], [ false, %49 ], [ %62, %59 ]
  %65 = getelementptr inbounds ptr, ptr %7, i64 1
  %66 = icmp ugt ptr %65, %8
  br i1 %25, label %67, label %98

67:                                               ; preds = %63
  br i1 %66, label %87, label %68

68:                                               ; preds = %67, %82
  %69 = phi ptr [ %85, %82 ], [ %65, %67 ]
  %70 = phi i64 [ %84, %82 ], [ -1, %67 ]
  %71 = load ptr, ptr %69, align 8, !tbaa !5
  %72 = getelementptr inbounds %struct.sv, ptr %71, i64 0, i32 2
  %73 = load i32, ptr %72, align 4, !tbaa !16
  %74 = and i32 %73, 2097408
  %75 = icmp eq i32 %74, 256
  br i1 %75, label %76, label %80

76:                                               ; preds = %68
  %77 = load ptr, ptr %71, align 8, !tbaa !26
  %78 = getelementptr inbounds %struct.xpviv, ptr %77, i64 0, i32 4
  %79 = load i64, ptr %78, align 8, !tbaa !24
  br label %82

80:                                               ; preds = %68
  %81 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %71, i32 noundef 2) #13
  br label %82

82:                                               ; preds = %80, %76
  %83 = phi i64 [ %79, %76 ], [ %81, %80 ]
  %84 = tail call i64 @llvm.smax.i64(i64 %83, i64 %70)
  %85 = getelementptr inbounds ptr, ptr %69, i64 1
  %86 = icmp ugt ptr %85, %8
  br i1 %86, label %87, label %68, !llvm.loop !133

87:                                               ; preds = %82, %67
  %88 = phi i64 [ -1, %67 ], [ %84, %82 ]
  %89 = load ptr, ptr %9, align 8, !tbaa !18
  %90 = getelementptr inbounds %struct.xpvav, ptr %89, i64 0, i32 3
  %91 = load i64, ptr %90, align 8, !tbaa !134
  %92 = icmp sgt i64 %88, %91
  br i1 %92, label %93, label %94

93:                                               ; preds = %87
  tail call void @Perl_av_extend(ptr noundef nonnull %9, i64 noundef %88) #13
  br label %94

94:                                               ; preds = %31, %87, %93
  %95 = phi i1 [ %64, %87 ], [ %64, %93 ], [ false, %31 ]
  %96 = getelementptr inbounds ptr, ptr %7, i64 1
  %97 = icmp ugt ptr %96, %8
  br i1 %97, label %189, label %101

98:                                               ; preds = %63
  br i1 %66, label %189, label %99

99:                                               ; preds = %98
  %100 = and i1 %35, %64
  br i1 %100, label %138, label %136

101:                                              ; preds = %94
  %102 = and i1 %35, %95
  br i1 %25, label %103, label %135

103:                                              ; preds = %101, %131
  %104 = phi ptr [ %133, %131 ], [ %96, %101 ]
  %105 = load ptr, ptr %104, align 8, !tbaa !5
  %106 = getelementptr inbounds %struct.sv, ptr %105, i64 0, i32 2
  %107 = load i32, ptr %106, align 4, !tbaa !16
  %108 = and i32 %107, 2097408
  %109 = icmp eq i32 %108, 256
  br i1 %109, label %112, label %110

110:                                              ; preds = %103
  %111 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %105, i32 noundef 2) #13
  br label %116

112:                                              ; preds = %103
  %113 = load ptr, ptr %105, align 8, !tbaa !26
  %114 = getelementptr inbounds %struct.xpviv, ptr %113, i64 0, i32 4
  %115 = load i64, ptr %114, align 8, !tbaa !24
  br label %116

116:                                              ; preds = %112, %110
  %117 = phi i64 [ %115, %112 ], [ %111, %110 ]
  br i1 %102, label %118, label %120

118:                                              ; preds = %116
  %119 = tail call zeroext i1 @Perl_av_exists(ptr noundef %9, i64 noundef %117) #13
  br label %120

120:                                              ; preds = %118, %116
  %121 = phi i1 [ %119, %118 ], [ true, %116 ]
  %122 = tail call ptr @Perl_av_fetch(ptr noundef %9, i64 noundef %117, i32 noundef %26) #13
  %123 = icmp eq ptr %122, null
  br i1 %123, label %187, label %124

124:                                              ; preds = %120
  %125 = load ptr, ptr %122, align 8, !tbaa !5
  %126 = icmp eq ptr %125, null
  br i1 %126, label %187, label %127

127:                                              ; preds = %124
  br i1 %35, label %128, label %131

128:                                              ; preds = %127
  br i1 %121, label %130, label %129

129:                                              ; preds = %128
  tail call void @Perl_save_adelete(ptr noundef %9, i64 noundef %117) #13
  br label %131

130:                                              ; preds = %128
  tail call void @Perl_save_aelem_flags(ptr noundef %9, i64 noundef %117, ptr noundef nonnull %122, i32 noundef 1) #13
  br label %131

131:                                              ; preds = %130, %129, %127
  %132 = load ptr, ptr %122, align 8, !tbaa !5
  store ptr %132, ptr %104, align 8, !tbaa !5
  %133 = getelementptr inbounds ptr, ptr %104, i64 1
  %134 = icmp ugt ptr %133, %8
  br i1 %134, label %189, label %103, !llvm.loop !135

135:                                              ; preds = %101
  br i1 %102, label %138, label %136

136:                                              ; preds = %99, %135
  %137 = phi ptr [ %96, %135 ], [ %65, %99 ]
  br label %140

138:                                              ; preds = %99, %135
  %139 = phi ptr [ %96, %135 ], [ %65, %99 ]
  br label %163

140:                                              ; preds = %136, %159
  %141 = phi ptr [ %161, %159 ], [ %137, %136 ]
  %142 = load ptr, ptr %141, align 8, !tbaa !5
  %143 = getelementptr inbounds %struct.sv, ptr %142, i64 0, i32 2
  %144 = load i32, ptr %143, align 4, !tbaa !16
  %145 = and i32 %144, 2097408
  %146 = icmp eq i32 %145, 256
  br i1 %146, label %149, label %147

147:                                              ; preds = %140
  %148 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %142, i32 noundef 2) #13
  br label %153

149:                                              ; preds = %140
  %150 = load ptr, ptr %142, align 8, !tbaa !26
  %151 = getelementptr inbounds %struct.xpviv, ptr %150, i64 0, i32 4
  %152 = load i64, ptr %151, align 8, !tbaa !24
  br label %153

153:                                              ; preds = %149, %147
  %154 = phi i64 [ %152, %149 ], [ %148, %147 ]
  %155 = tail call ptr @Perl_av_fetch(ptr noundef %9, i64 noundef %154, i32 noundef %26) #13
  %156 = icmp eq ptr %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  %158 = load ptr, ptr %155, align 8, !tbaa !5
  br label %159

159:                                              ; preds = %157, %153
  %160 = phi ptr [ %158, %157 ], [ @PL_sv_undef, %153 ]
  store ptr %160, ptr %141, align 8, !tbaa !5
  %161 = getelementptr inbounds ptr, ptr %141, i64 1
  %162 = icmp ugt ptr %161, %8
  br i1 %162, label %189, label %140, !llvm.loop !135

163:                                              ; preds = %138, %183
  %164 = phi ptr [ %185, %183 ], [ %139, %138 ]
  %165 = load ptr, ptr %164, align 8, !tbaa !5
  %166 = getelementptr inbounds %struct.sv, ptr %165, i64 0, i32 2
  %167 = load i32, ptr %166, align 4, !tbaa !16
  %168 = and i32 %167, 2097408
  %169 = icmp eq i32 %168, 256
  br i1 %169, label %170, label %174

170:                                              ; preds = %163
  %171 = load ptr, ptr %165, align 8, !tbaa !26
  %172 = getelementptr inbounds %struct.xpviv, ptr %171, i64 0, i32 4
  %173 = load i64, ptr %172, align 8, !tbaa !24
  br label %176

174:                                              ; preds = %163
  %175 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %165, i32 noundef 2) #13
  br label %176

176:                                              ; preds = %174, %170
  %177 = phi i64 [ %173, %170 ], [ %175, %174 ]
  %178 = tail call zeroext i1 @Perl_av_exists(ptr noundef %9, i64 noundef %177) #13
  %179 = tail call ptr @Perl_av_fetch(ptr noundef %9, i64 noundef %177, i32 noundef %26) #13
  %180 = icmp eq ptr %179, null
  br i1 %180, label %183, label %181

181:                                              ; preds = %176
  %182 = load ptr, ptr %179, align 8, !tbaa !5
  br label %183

183:                                              ; preds = %181, %176
  %184 = phi ptr [ %182, %181 ], [ @PL_sv_undef, %176 ]
  store ptr %184, ptr %164, align 8, !tbaa !5
  %185 = getelementptr inbounds ptr, ptr %164, i64 1
  %186 = icmp ugt ptr %185, %8
  br i1 %186, label %189, label %163, !llvm.loop !135

187:                                              ; preds = %120, %124
  %188 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @PL_no_aelem, i64 noundef %117) #13
  br label %215

189:                                              ; preds = %159, %183, %131, %98, %94, %23
  %190 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %191 = getelementptr inbounds %struct.op, ptr %190, i64 0, i32 5
  %192 = load i8, ptr %191, align 2, !tbaa !9
  %193 = and i8 %192, 3
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %197, label %195

195:                                              ; preds = %189
  %196 = zext i8 %193 to i32
  br label %199

197:                                              ; preds = %189
  %198 = tail call i32 @Perl_block_gimme() #13
  br label %199

199:                                              ; preds = %197, %195
  %200 = phi i32 [ %196, %195 ], [ %198, %197 ]
  %201 = icmp eq i32 %200, 3
  br i1 %201, label %211, label %202

202:                                              ; preds = %199
  %203 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %204 = getelementptr inbounds ptr, ptr %203, i64 %6
  %205 = icmp ugt ptr %8, %204
  br i1 %205, label %206, label %208

206:                                              ; preds = %202
  %207 = load ptr, ptr %8, align 8, !tbaa !5
  br label %208

208:                                              ; preds = %202, %206
  %209 = phi ptr [ %207, %206 ], [ @PL_sv_undef, %202 ]
  %210 = getelementptr inbounds ptr, ptr %204, i64 1
  store ptr %209, ptr %210, align 8, !tbaa !5
  br label %211

211:                                              ; preds = %208, %199
  %212 = phi ptr [ %210, %208 ], [ %8, %199 ]
  store ptr %212, ptr @PL_stack_sp, align 8, !tbaa !5
  %213 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %214 = load ptr, ptr %213, align 8, !tbaa !13
  br label %215

215:                                              ; preds = %187, %211
  %216 = phi ptr [ %214, %211 ], [ %188, %187 ]
  ret ptr %216
}

declare ptr @Perl_gv_fetchmethod_autoload(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_av_extend(ptr noundef, i64 noundef) local_unnamed_addr #2

declare zeroext i1 @Perl_av_exists(ptr noundef, i64 noundef) local_unnamed_addr #2

declare void @Perl_save_aelem_flags(ptr noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_save_adelete(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_kvaslice() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %4 = getelementptr inbounds i32, ptr %3, i64 -1
  store ptr %4, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %5 = load i32, ptr %3, align 4, !tbaa !57
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds ptr, ptr %2, i64 %6
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  %9 = load ptr, ptr %1, align 8, !tbaa !5
  %10 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 5
  %12 = load i8, ptr %11, align 2, !tbaa !9
  %13 = and i8 %12, 32
  %14 = zext i8 %13 to i32
  %15 = ptrtoint ptr %8 to i64
  %16 = ptrtoint ptr %7 to i64
  %17 = sub i64 %15, %16
  %18 = ashr exact i64 %17, 3
  %19 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 6
  %20 = load i8, ptr %19, align 1, !tbaa !15
  %21 = and i8 %20, 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %0
  %24 = tail call i32 @Perl_is_lvalue_sub() #13
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %23
  %27 = and i32 %24, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.46) #13
  br label %30

30:                                               ; preds = %23, %29, %26, %0
  %31 = phi i32 [ %14, %0 ], [ %14, %23 ], [ %24, %29 ], [ %24, %26 ]
  %32 = freeze i32 %31
  %33 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %34 = ptrtoint ptr %33 to i64
  %35 = sub i64 %34, %15
  %36 = ashr exact i64 %35, 3
  %37 = icmp slt i64 %36, %18
  br i1 %37, label %38, label %46

38:                                               ; preds = %30
  %39 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %40 = ptrtoint ptr %39 to i64
  %41 = sub i64 %16, %40
  %42 = ashr exact i64 %41, 3
  %43 = tail call ptr @Perl_stack_grow(ptr noundef nonnull %8, ptr noundef nonnull %8, i64 noundef %18) #13
  %44 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %45 = getelementptr inbounds ptr, ptr %44, i64 %42
  br label %46

46:                                               ; preds = %30, %38
  %47 = phi ptr [ %45, %38 ], [ %7, %30 ]
  %48 = phi ptr [ %43, %38 ], [ %8, %30 ]
  %49 = getelementptr ptr, ptr %47, i64 -1
  %50 = icmp sgt i64 %17, 8
  br i1 %50, label %51, label %59

51:                                               ; preds = %46, %51
  %52 = phi i64 [ %57, %51 ], [ %18, %46 ]
  %53 = getelementptr inbounds ptr, ptr %47, i64 %52
  %54 = load ptr, ptr %53, align 8, !tbaa !5
  %55 = shl nuw nsw i64 %52, 1
  %56 = getelementptr ptr, ptr %49, i64 %55
  store ptr %54, ptr %56, align 8, !tbaa !5
  %57 = add nsw i64 %52, -1
  %58 = icmp sgt i64 %52, 2
  br i1 %58, label %51, label %59, !llvm.loop !136

59:                                               ; preds = %51, %46
  %60 = ptrtoint ptr %48 to i64
  %61 = ptrtoint ptr %47 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 3
  %64 = getelementptr inbounds ptr, ptr %48, i64 %63
  %65 = getelementptr inbounds ptr, ptr %47, i64 1
  %66 = icmp ugt ptr %65, %64
  br i1 %66, label %139, label %67

67:                                               ; preds = %59
  %68 = icmp eq i32 %32, 0
  br i1 %68, label %69, label %94

69:                                               ; preds = %67, %89
  %70 = phi ptr [ %92, %89 ], [ %65, %67 ]
  %71 = phi ptr [ %91, %89 ], [ %47, %67 ]
  %72 = load ptr, ptr %70, align 8, !tbaa !5
  %73 = getelementptr inbounds %struct.sv, ptr %72, i64 0, i32 2
  %74 = load i32, ptr %73, align 4, !tbaa !16
  %75 = and i32 %74, 2097408
  %76 = icmp eq i32 %75, 256
  br i1 %76, label %79, label %77

77:                                               ; preds = %69
  %78 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %72, i32 noundef 2) #13
  br label %83

79:                                               ; preds = %69
  %80 = load ptr, ptr %72, align 8, !tbaa !26
  %81 = getelementptr inbounds %struct.xpviv, ptr %80, i64 0, i32 4
  %82 = load i64, ptr %81, align 8, !tbaa !24
  br label %83

83:                                               ; preds = %79, %77
  %84 = phi i64 [ %82, %79 ], [ %78, %77 ]
  %85 = tail call ptr @Perl_av_fetch(ptr noundef %9, i64 noundef %84, i32 noundef 0) #13
  %86 = icmp eq ptr %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = load ptr, ptr %85, align 8, !tbaa !5
  br label %89

89:                                               ; preds = %87, %83
  %90 = phi ptr [ %88, %87 ], [ @PL_sv_undef, %83 ]
  %91 = getelementptr inbounds ptr, ptr %71, i64 2
  store ptr %90, ptr %91, align 8, !tbaa !5
  %92 = getelementptr inbounds ptr, ptr %71, i64 3
  %93 = icmp ugt ptr %92, %64
  br i1 %93, label %139, label %69, !llvm.loop !137

94:                                               ; preds = %67, %132
  %95 = phi ptr [ %137, %132 ], [ %65, %67 ]
  %96 = phi ptr [ %136, %132 ], [ %47, %67 ]
  %97 = load ptr, ptr %95, align 8, !tbaa !5
  %98 = getelementptr inbounds %struct.sv, ptr %97, i64 0, i32 2
  %99 = load i32, ptr %98, align 4, !tbaa !16
  %100 = and i32 %99, 2097408
  %101 = icmp eq i32 %100, 256
  br i1 %101, label %102, label %106

102:                                              ; preds = %94
  %103 = load ptr, ptr %97, align 8, !tbaa !26
  %104 = getelementptr inbounds %struct.xpviv, ptr %103, i64 0, i32 4
  %105 = load i64, ptr %104, align 8, !tbaa !24
  br label %108

106:                                              ; preds = %94
  %107 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %97, i32 noundef 2) #13
  br label %108

108:                                              ; preds = %106, %102
  %109 = phi i64 [ %105, %102 ], [ %107, %106 ]
  %110 = tail call ptr @Perl_av_fetch(ptr noundef %9, i64 noundef %109, i32 noundef %32) #13
  %111 = icmp eq ptr %110, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %108
  %113 = load ptr, ptr %110, align 8, !tbaa !5
  %114 = icmp eq ptr %113, null
  %115 = icmp eq ptr %113, @PL_sv_undef
  %116 = or i1 %114, %115
  br i1 %116, label %117, label %132

117:                                              ; preds = %112, %108
  %118 = load ptr, ptr %95, align 8, !tbaa !5
  %119 = getelementptr inbounds %struct.sv, ptr %118, i64 0, i32 2
  %120 = load i32, ptr %119, align 4, !tbaa !16
  %121 = and i32 %120, 2097408
  %122 = icmp eq i32 %121, 256
  br i1 %122, label %123, label %127

123:                                              ; preds = %117
  %124 = load ptr, ptr %118, align 8, !tbaa !26
  %125 = getelementptr inbounds %struct.xpviv, ptr %124, i64 0, i32 4
  %126 = load i64, ptr %125, align 8, !tbaa !24
  br label %129

127:                                              ; preds = %117
  %128 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %118, i32 noundef 2) #13
  br label %129

129:                                              ; preds = %123, %127
  %130 = phi i64 [ %126, %123 ], [ %128, %127 ]
  %131 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @PL_no_aelem, i64 noundef %130) #13
  br label %166

132:                                              ; preds = %112
  %133 = load ptr, ptr %95, align 8, !tbaa !5
  %134 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef %133, i32 noundef 1538) #13
  store ptr %134, ptr %95, align 8, !tbaa !5
  %135 = load ptr, ptr %110, align 8, !tbaa !5
  %136 = getelementptr inbounds ptr, ptr %96, i64 2
  store ptr %135, ptr %136, align 8, !tbaa !5
  %137 = getelementptr inbounds ptr, ptr %96, i64 3
  %138 = icmp ugt ptr %137, %64
  br i1 %138, label %139, label %94, !llvm.loop !137

139:                                              ; preds = %132, %89, %59
  %140 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %141 = getelementptr inbounds %struct.op, ptr %140, i64 0, i32 5
  %142 = load i8, ptr %141, align 2, !tbaa !9
  %143 = and i8 %142, 3
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  %146 = zext i8 %143 to i32
  br label %149

147:                                              ; preds = %139
  %148 = tail call i32 @Perl_block_gimme() #13
  br label %149

149:                                              ; preds = %147, %145
  %150 = phi i32 [ %146, %145 ], [ %148, %147 ]
  %151 = icmp eq i32 %150, 3
  br i1 %151, label %162, label %152

152:                                              ; preds = %149
  %153 = ashr exact i64 %62, 2
  %154 = sub nsw i64 0, %153
  %155 = getelementptr inbounds ptr, ptr %64, i64 %154
  %156 = icmp sgt i64 %62, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %152
  %158 = load ptr, ptr %64, align 8, !tbaa !5
  br label %159

159:                                              ; preds = %152, %157
  %160 = phi ptr [ %158, %157 ], [ @PL_sv_undef, %152 ]
  %161 = getelementptr inbounds ptr, ptr %155, i64 1
  store ptr %160, ptr %161, align 8, !tbaa !5
  br label %162

162:                                              ; preds = %159, %149
  %163 = phi ptr [ %161, %159 ], [ %64, %149 ]
  store ptr %163, ptr @PL_stack_sp, align 8, !tbaa !5
  %164 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %165 = load ptr, ptr %164, align 8, !tbaa !13
  br label %166

166:                                              ; preds = %129, %162
  %167 = phi ptr [ %165, %162 ], [ %131, %129 ]
  ret ptr %167
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_rkeys() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr %1, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !16
  %5 = and i32 %4, 2097152
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %0
  %8 = tail call i32 @Perl_mg_get(ptr noundef nonnull %2) #13
  %9 = load i32, ptr %3, align 4, !tbaa !16
  br label %10

10:                                               ; preds = %0, %7
  %11 = phi i32 [ %4, %0 ], [ %9, %7 ]
  %12 = and i32 %11, 2048
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %15, align 8, !tbaa !24
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !16
  %19 = and i32 %18, 255
  %20 = add nsw i32 %19, -11
  %21 = icmp ult i32 %20, 2
  %22 = and i32 %18, 1048576
  %23 = icmp eq i32 %22, 0
  %24 = and i1 %23, %21
  br i1 %24, label %34, label %25

25:                                               ; preds = %14, %10
  %26 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %27 = getelementptr inbounds %struct.op, ptr %26, i64 0, i32 4
  %28 = load i16, ptr %27, align 8
  %29 = and i16 %28, 511
  %30 = zext i16 %29 to i64
  %31 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %30
  %32 = load ptr, ptr %31, align 8, !tbaa !5
  %33 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.47, ptr noundef %32) #13
  br label %73

34:                                               ; preds = %14
  %35 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %36 = getelementptr inbounds %struct.op, ptr %35, i64 0, i32 5
  %37 = load i8, ptr %36, align 2, !tbaa !9
  %38 = icmp slt i8 %37, 0
  %39 = icmp eq i32 %19, 11
  %40 = and i1 %39, %38
  br i1 %40, label %41, label %56

41:                                               ; preds = %34
  %42 = getelementptr inbounds %struct.op, ptr %35, i64 0, i32 4
  %43 = load i16, ptr %42, align 8
  %44 = and i16 %43, 511
  %45 = zext i16 %44 to i64
  %46 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %45
  %47 = load ptr, ptr %46, align 8, !tbaa !5
  %48 = load ptr, ptr %35, align 8, !tbaa !13
  %49 = getelementptr inbounds %struct.op, ptr %48, i64 0, i32 4
  %50 = load i16, ptr %49, align 8
  %51 = and i16 %50, 511
  %52 = zext i16 %51 to i64
  %53 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %52
  %54 = load ptr, ptr %53, align 8, !tbaa !5
  %55 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.48, ptr noundef %47, ptr noundef %54) #13
  br label %73

56:                                               ; preds = %34
  store ptr %16, ptr %1, align 8, !tbaa !5
  %57 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %58 = getelementptr inbounds %struct.op, ptr %57, i64 0, i32 4
  %59 = load i16, ptr %58, align 8
  %60 = and i16 %59, 510
  %61 = icmp eq i16 %60, 382
  %62 = icmp eq i32 %19, 12
  br i1 %61, label %63, label %68

63:                                               ; preds = %56
  br i1 %62, label %64, label %66

64:                                               ; preds = %63
  %65 = tail call ptr @Perl_do_kv() #13
  br label %73

66:                                               ; preds = %63
  %67 = tail call ptr @Perl_pp_akeys()
  br label %73

68:                                               ; preds = %56
  br i1 %62, label %69, label %71

69:                                               ; preds = %68
  %70 = tail call ptr @Perl_pp_each()
  br label %73

71:                                               ; preds = %68
  %72 = tail call ptr @Perl_pp_aeach()
  br label %73

73:                                               ; preds = %69, %71, %64, %66, %41, %25
  %74 = phi ptr [ %33, %25 ], [ %55, %41 ], [ %65, %64 ], [ %67, %66 ], [ %70, %69 ], [ %72, %71 ]
  ret ptr %74
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_akeys() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %1, align 8, !tbaa !5
  %4 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %6 = load i8, ptr %5, align 2, !tbaa !9
  %7 = and i8 %6, 3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %0
  %10 = zext i8 %7 to i32
  br label %13

11:                                               ; preds = %0
  %12 = tail call i32 @Perl_block_gimme() #13
  br label %13

13:                                               ; preds = %11, %9
  %14 = phi i32 [ %10, %9 ], [ %12, %11 ]
  %15 = tail call ptr @Perl_av_iter_p(ptr noundef %3) #13
  store i64 0, ptr %15, align 8, !tbaa !71
  switch i32 %14, label %84 [
    i32 2, label %16
    i32 3, label %44
  ]

16:                                               ; preds = %13
  %17 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %18 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.op, ptr %18, i64 0, i32 3
  %20 = load i64, ptr %19, align 8, !tbaa !14
  %21 = getelementptr inbounds ptr, ptr %17, i64 %20
  %22 = load ptr, ptr %21, align 8, !tbaa !5
  %23 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %24 = load i32, ptr %23, align 4, !tbaa !16
  %25 = and i32 %24, 8388608
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %16
  %28 = tail call i32 @Perl_mg_size(ptr noundef nonnull %3) #13
  %29 = sext i32 %28 to i64
  br label %34

30:                                               ; preds = %16
  %31 = load ptr, ptr %3, align 8, !tbaa !18
  %32 = getelementptr inbounds %struct.xpvav, ptr %31, i64 0, i32 2
  %33 = load i64, ptr %32, align 8, !tbaa !20
  br label %34

34:                                               ; preds = %27, %30
  %35 = phi i64 [ %29, %27 ], [ %33, %30 ]
  %36 = add nsw i64 %35, 1
  tail call void @Perl_sv_setiv(ptr noundef %22, i64 noundef %36) #13
  %37 = getelementptr inbounds %struct.sv, ptr %22, i64 0, i32 2
  %38 = load i32, ptr %37, align 4, !tbaa !16
  %39 = and i32 %38, 4194304
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %34
  %42 = tail call i32 @Perl_mg_set(ptr noundef nonnull %22) #13
  br label %43

43:                                               ; preds = %34, %41
  store ptr %22, ptr %1, align 8, !tbaa !5
  br label %84

44:                                               ; preds = %13
  %45 = tail call i64 @Perl_av_len(ptr noundef %3) #13
  %46 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %47 = ptrtoint ptr %46 to i64
  %48 = ptrtoint ptr %2 to i64
  %49 = sub i64 %47, %48
  %50 = ashr exact i64 %49, 3
  %51 = icmp sgt i64 %50, %45
  br i1 %51, label %55, label %52

52:                                               ; preds = %44
  %53 = add nsw i64 %45, 1
  %54 = tail call ptr @Perl_stack_grow(ptr noundef nonnull %2, ptr noundef nonnull %2, i64 noundef %53) #13
  br label %55

55:                                               ; preds = %44, %52
  %56 = phi ptr [ %54, %52 ], [ %2, %44 ]
  %57 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %58 = getelementptr inbounds %struct.op, ptr %57, i64 0, i32 4
  %59 = load i16, ptr %58, align 8
  %60 = and i16 %59, 511
  switch i16 %60, label %61 [
    i16 142, label %63
    i16 382, label %63
  ]

61:                                               ; preds = %55
  %62 = icmp slt i64 %45, 0
  br i1 %62, label %84, label %72

63:                                               ; preds = %55, %55
  %64 = icmp slt i64 %45, 0
  br i1 %64, label %84, label %65

65:                                               ; preds = %63, %65
  %66 = phi ptr [ %69, %65 ], [ %56, %63 ]
  %67 = phi i64 [ %70, %65 ], [ 0, %63 ]
  %68 = tail call ptr @Perl_sv_newmortal() #13
  %69 = getelementptr inbounds ptr, ptr %66, i64 1
  store ptr %68, ptr %69, align 8, !tbaa !5
  tail call void @Perl_sv_setiv(ptr noundef %68, i64 noundef %67) #13
  %70 = add nuw i64 %67, 1
  %71 = icmp eq i64 %67, %45
  br i1 %71, label %84, label %65, !llvm.loop !138

72:                                               ; preds = %61, %79
  %73 = phi ptr [ %81, %79 ], [ %56, %61 ]
  %74 = phi i64 [ %82, %79 ], [ 0, %61 ]
  %75 = tail call ptr @Perl_av_fetch(ptr noundef %3, i64 noundef %74, i32 noundef 0) #13
  %76 = icmp eq ptr %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %72
  %78 = load ptr, ptr %75, align 8, !tbaa !5
  br label %79

79:                                               ; preds = %72, %77
  %80 = phi ptr [ %78, %77 ], [ @PL_sv_undef, %72 ]
  %81 = getelementptr inbounds ptr, ptr %73, i64 1
  store ptr %80, ptr %81, align 8, !tbaa !5
  %82 = add nuw i64 %74, 1
  %83 = icmp eq i64 %74, %45
  br i1 %83, label %84, label %72, !llvm.loop !139

84:                                               ; preds = %65, %79, %63, %61, %13, %43
  %85 = phi ptr [ %1, %43 ], [ %2, %13 ], [ %56, %61 ], [ %56, %63 ], [ %81, %79 ], [ %69, %65 ]
  store ptr %85, ptr @PL_stack_sp, align 8, !tbaa !5
  %86 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %87 = load ptr, ptr %86, align 8, !tbaa !13
  ret ptr %87
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_each() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %1, align 8, !tbaa !5
  %4 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %6 = load i8, ptr %5, align 2, !tbaa !9
  %7 = and i8 %6, 3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %0
  %10 = zext i8 %7 to i32
  br label %13

11:                                               ; preds = %0
  %12 = tail call i32 @Perl_block_gimme() #13
  br label %13

13:                                               ; preds = %11, %9
  %14 = phi i32 [ %10, %9 ], [ %12, %11 ]
  %15 = tail call ptr @Perl_hv_iternext_flags(ptr noundef %3, i32 noundef 0) #13
  %16 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %17 = ptrtoint ptr %16 to i64
  %18 = ptrtoint ptr %2 to i64
  %19 = sub i64 %17, %18
  %20 = icmp slt i64 %19, 16
  br i1 %20, label %21, label %23

21:                                               ; preds = %13
  %22 = tail call ptr @Perl_stack_grow(ptr noundef nonnull %2, ptr noundef nonnull %2, i64 noundef 2) #13
  br label %23

23:                                               ; preds = %13, %21
  %24 = phi ptr [ %22, %21 ], [ %2, %13 ]
  %25 = icmp eq ptr %15, null
  br i1 %25, label %33, label %26

26:                                               ; preds = %23
  %27 = tail call ptr @Perl_hv_iterkeysv(ptr noundef nonnull %15) #13
  %28 = getelementptr inbounds ptr, ptr %24, i64 1
  store ptr %27, ptr %28, align 8, !tbaa !5
  %29 = icmp eq i32 %14, 3
  br i1 %29, label %30, label %37

30:                                               ; preds = %26
  %31 = tail call ptr @Perl_hv_iterval(ptr noundef %3, ptr noundef nonnull %15) #13
  %32 = getelementptr inbounds ptr, ptr %24, i64 2
  store ptr %31, ptr %32, align 8, !tbaa !5
  br label %37

33:                                               ; preds = %23
  %34 = icmp eq i32 %14, 2
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = getelementptr inbounds ptr, ptr %24, i64 1
  store ptr @PL_sv_undef, ptr %36, align 8, !tbaa !5
  br label %37

37:                                               ; preds = %33, %30, %26, %35
  %38 = phi ptr [ %36, %35 ], [ %24, %33 ], [ %32, %30 ], [ %28, %26 ]
  store ptr %38, ptr @PL_stack_sp, align 8, !tbaa !5
  %39 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %40 = load ptr, ptr %39, align 8, !tbaa !13
  ret ptr %40
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_aeach() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %1, align 8, !tbaa !5
  %4 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %6 = load i8, ptr %5, align 2, !tbaa !9
  %7 = and i8 %6, 3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %0
  %10 = zext i8 %7 to i32
  br label %13

11:                                               ; preds = %0
  %12 = tail call i32 @Perl_block_gimme() #13
  br label %13

13:                                               ; preds = %11, %9
  %14 = phi i32 [ %10, %9 ], [ %12, %11 ]
  %15 = tail call ptr @Perl_av_iter_p(ptr noundef %3) #13
  %16 = load i64, ptr %15, align 8, !tbaa !71
  %17 = add nsw i64 %16, 1
  store i64 %17, ptr %15, align 8, !tbaa !71
  %18 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %19 = load i32, ptr %18, align 4, !tbaa !16
  %20 = and i32 %19, 8388608
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %13
  %23 = tail call i32 @Perl_mg_size(ptr noundef nonnull %3) #13
  %24 = sext i32 %23 to i64
  br label %29

25:                                               ; preds = %13
  %26 = load ptr, ptr %3, align 8, !tbaa !18
  %27 = getelementptr inbounds %struct.xpvav, ptr %26, i64 0, i32 2
  %28 = load i64, ptr %27, align 8, !tbaa !20
  br label %29

29:                                               ; preds = %22, %25
  %30 = phi i64 [ %24, %22 ], [ %28, %25 ]
  %31 = icmp sgt i64 %16, %30
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  store i64 0, ptr %15, align 8, !tbaa !71
  %33 = icmp eq i32 %14, 2
  br i1 %33, label %34, label %56

34:                                               ; preds = %32
  store ptr @PL_sv_undef, ptr %1, align 8, !tbaa !5
  br label %56

35:                                               ; preds = %29
  %36 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %37 = ptrtoint ptr %36 to i64
  %38 = ptrtoint ptr %2 to i64
  %39 = sub i64 %37, %38
  %40 = icmp slt i64 %39, 16
  br i1 %40, label %41, label %43

41:                                               ; preds = %35
  %42 = tail call ptr @Perl_stack_grow(ptr noundef nonnull %2, ptr noundef nonnull %2, i64 noundef 2) #13
  br label %43

43:                                               ; preds = %35, %41
  %44 = phi ptr [ %42, %41 ], [ %2, %35 ]
  %45 = tail call ptr @Perl_sv_newmortal() #13
  %46 = getelementptr inbounds ptr, ptr %44, i64 1
  store ptr %45, ptr %46, align 8, !tbaa !5
  tail call void @Perl_sv_setiv(ptr noundef %45, i64 noundef %16) #13
  %47 = icmp eq i32 %14, 3
  br i1 %47, label %48, label %56

48:                                               ; preds = %43
  %49 = tail call ptr @Perl_av_fetch(ptr noundef nonnull %3, i64 noundef %16, i32 noundef 0) #13
  %50 = icmp eq ptr %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %48
  %52 = load ptr, ptr %49, align 8, !tbaa !5
  br label %53

53:                                               ; preds = %48, %51
  %54 = phi ptr [ %52, %51 ], [ @PL_sv_undef, %48 ]
  %55 = getelementptr inbounds ptr, ptr %44, i64 2
  store ptr %54, ptr %55, align 8, !tbaa !5
  br label %56

56:                                               ; preds = %43, %53, %32, %34
  %57 = phi ptr [ %1, %34 ], [ %2, %32 ], [ %55, %53 ], [ %46, %43 ]
  store ptr %57, ptr @PL_stack_sp, align 8, !tbaa !5
  %58 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %59 = load ptr, ptr %58, align 8, !tbaa !13
  ret ptr %59
}

declare ptr @Perl_av_iter_p(ptr noundef) local_unnamed_addr #2

declare i64 @Perl_av_len(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_hv_iternext_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_hv_iterkeysv(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_hv_iterval(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_delete() local_unnamed_addr #0 {
  %1 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %3 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %4 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 6
  %6 = load i8, ptr %5, align 1, !tbaa !15
  %7 = icmp sgt i8 %6, -1
  %8 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %9 = load i8, ptr %8, align 2, !tbaa !9
  %10 = and i8 %9, 3
  %11 = icmp eq i8 %10, 0
  br i1 %7, label %261, label %12

12:                                               ; preds = %0
  br i1 %11, label %15, label %13

13:                                               ; preds = %12
  %14 = zext i8 %10 to i32
  br label %20

15:                                               ; preds = %12
  %16 = tail call i32 @Perl_block_gimme() #13
  %17 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %18 = getelementptr inbounds %struct.op, ptr %17, i64 0, i32 6
  %19 = load i8, ptr %18, align 1, !tbaa !15
  br label %20

20:                                               ; preds = %15, %13
  %21 = phi i8 [ %6, %13 ], [ %19, %15 ]
  %22 = phi i32 [ %14, %13 ], [ %16, %15 ]
  %23 = and i8 %21, 64
  %24 = icmp eq i8 %23, 0
  %25 = getelementptr inbounds ptr, ptr %3, i64 -1
  %26 = select i1 %24, ptr %25, ptr %3
  %27 = getelementptr inbounds ptr, ptr %26, i64 -1
  %28 = load ptr, ptr %26, align 8, !tbaa !5
  %29 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  br i1 %24, label %36, label %30

30:                                               ; preds = %20
  %31 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %32 = getelementptr inbounds i32, ptr %31, i64 -1
  store ptr %32, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %33 = load i32, ptr %31, align 4, !tbaa !57
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds ptr, ptr %29, i64 %34
  br label %36

36:                                               ; preds = %30, %20
  %37 = phi ptr [ %35, %30 ], [ %25, %20 ]
  %38 = ptrtoint ptr %37 to i64
  %39 = ptrtoint ptr %29 to i64
  %40 = sub i64 %38, %39
  %41 = getelementptr inbounds %struct.sv, ptr %28, i64 0, i32 2
  %42 = load i32, ptr %41, align 4, !tbaa !16
  %43 = and i32 %42, 8388608
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %76, label %45

45:                                               ; preds = %36
  %46 = tail call ptr @Perl_mg_find(ptr noundef nonnull %28, i32 noundef 80) #13
  %47 = freeze ptr %46
  %48 = icmp ne ptr %47, null
  %49 = load i32, ptr %41, align 4, !tbaa !16
  %50 = and i32 %49, 8388608
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %76, label %52

52:                                               ; preds = %45
  %53 = tail call ptr @Perl_mg_find(ptr noundef nonnull %28, i32 noundef 80) #13
  %54 = icmp eq ptr %53, null
  br i1 %54, label %76, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %struct.magic, ptr %53, i64 0, i32 6
  %57 = load ptr, ptr %56, align 8, !tbaa !132
  %58 = icmp eq ptr %57, null
  br i1 %58, label %59, label %62

59:                                               ; preds = %55
  %60 = tail call ptr @Perl_newRV(ptr noundef nonnull %28) #13
  %61 = tail call ptr @Perl_sv_2mortal(ptr noundef %60) #13
  br label %62

62:                                               ; preds = %59, %55
  %63 = phi ptr [ %61, %59 ], [ %57, %55 ]
  %64 = getelementptr inbounds %struct.sv, ptr %63, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8, !tbaa !24
  %66 = load ptr, ptr %65, align 8, !tbaa !26
  %67 = load ptr, ptr %66, align 8, !tbaa !38
  %68 = icmp eq ptr %67, null
  br i1 %68, label %76, label %69

69:                                               ; preds = %62
  %70 = tail call ptr @Perl_gv_fetchmethod_autoload(ptr noundef nonnull %67, ptr noundef nonnull @.str.44, i32 noundef 1) #13
  %71 = icmp eq ptr %70, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %69
  %73 = tail call ptr @Perl_gv_fetchmethod_autoload(ptr noundef nonnull %67, ptr noundef nonnull @.str.45, i32 noundef 1) #13
  %74 = freeze ptr %73
  %75 = icmp ne ptr %74, null
  br label %76

76:                                               ; preds = %72, %69, %62, %52, %45, %36
  %77 = phi i1 [ %48, %52 ], [ %48, %45 ], [ %48, %69 ], [ %48, %62 ], [ %48, %72 ], [ false, %36 ]
  %78 = phi i1 [ true, %52 ], [ true, %45 ], [ false, %69 ], [ false, %62 ], [ %75, %72 ], [ true, %36 ]
  %79 = load i32, ptr %41, align 4, !tbaa !16
  %80 = select i1 %24, ptr %3, ptr %27
  %81 = trunc i32 %79 to i8
  switch i8 %81, label %233 [
    i8 12, label %82
    i8 11, label %128
  ]

82:                                               ; preds = %76
  %83 = getelementptr inbounds ptr, ptr %37, i64 1
  %84 = icmp ugt ptr %83, %80
  br i1 %84, label %235, label %85

85:                                               ; preds = %82, %123
  %86 = phi ptr [ %124, %123 ], [ %83, %82 ]
  %87 = load ptr, ptr %86, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  store ptr null, ptr %1, align 8, !tbaa !5
  br i1 %78, label %88, label %92

88:                                               ; preds = %85
  %89 = call ptr @Perl_hv_common(ptr noundef %28, ptr noundef %87, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 8, ptr noundef null, i32 noundef 0) #13
  %90 = icmp ne ptr %89, null
  %91 = zext i1 %90 to i8
  br label %92

92:                                               ; preds = %88, %85
  %93 = phi i8 [ %91, %88 ], [ 1, %85 ]
  br i1 %77, label %94, label %100

94:                                               ; preds = %92
  %95 = call ptr @Perl_hv_common(ptr noundef %28, ptr noundef %87, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 16, ptr noundef null, i32 noundef 0) #13
  %96 = icmp eq ptr %95, null
  br i1 %96, label %122, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %struct.he, ptr %95, i64 0, i32 2
  %99 = load ptr, ptr %98, align 8, !tbaa !24
  store ptr %99, ptr %1, align 8, !tbaa !5
  br label %105

100:                                              ; preds = %92
  %101 = call ptr @Perl_hv_common(ptr noundef %28, ptr noundef %87, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 64, ptr noundef null, i32 noundef 0) #13
  store ptr %101, ptr %1, align 8, !tbaa !5
  %102 = icmp ne i8 %93, 0
  %103 = icmp ne ptr %101, null
  %104 = select i1 %102, i1 %103, i1 false
  br i1 %104, label %110, label %105

105:                                              ; preds = %100, %97
  %106 = phi ptr [ %99, %97 ], [ %101, %100 ]
  %107 = icmp eq i8 %93, 0
  br i1 %107, label %122, label %108

108:                                              ; preds = %105
  %109 = icmp eq ptr %106, null
  br i1 %109, label %126, label %114

110:                                              ; preds = %100
  %111 = getelementptr inbounds %struct.sv, ptr %101, i64 0, i32 1
  %112 = load i32, ptr %111, align 8, !tbaa !44
  %113 = add i32 %112, 1
  store i32 %113, ptr %111, align 8, !tbaa !44
  call void @Perl_save_helem_flags(ptr noundef %28, ptr noundef %87, ptr noundef nonnull %1, i32 noundef 2) #13
  br label %120

114:                                              ; preds = %108
  call void @Perl_save_helem_flags(ptr noundef %28, ptr noundef %87, ptr noundef nonnull %1, i32 noundef 2) #13
  br i1 %77, label %115, label %120

115:                                              ; preds = %114
  %116 = load ptr, ptr %1, align 8, !tbaa !5
  %117 = call ptr @Perl_sv_mortalcopy_flags(ptr noundef %116, i32 noundef 1538) #13
  store ptr %117, ptr %86, align 8, !tbaa !5
  %118 = load ptr, ptr %1, align 8, !tbaa !5
  %119 = call i32 @Perl_mg_clear(ptr noundef %118) #13
  br label %123

120:                                              ; preds = %114, %110
  %121 = load ptr, ptr %1, align 8, !tbaa !5
  store ptr %121, ptr %86, align 8, !tbaa !5
  br label %123

122:                                              ; preds = %105, %94
  call void @Perl_save_hdelete(ptr noundef %28, ptr noundef %87) #13
  store ptr @PL_sv_undef, ptr %86, align 8, !tbaa !5
  br label %123

123:                                              ; preds = %122, %120, %115
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  %124 = getelementptr inbounds ptr, ptr %86, i64 1
  %125 = icmp ugt ptr %124, %80
  br i1 %125, label %235, label %85, !llvm.loop !140

126:                                              ; preds = %108
  %127 = call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @PL_no_helem_sv, ptr noundef %87) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  br label %388

128:                                              ; preds = %76
  %129 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %130 = getelementptr inbounds %struct.op, ptr %129, i64 0, i32 5
  %131 = load i8, ptr %130, align 2, !tbaa !9
  %132 = icmp sgt i8 %131, -1
  br i1 %132, label %231, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds ptr, ptr %37, i64 1
  %135 = icmp ugt ptr %134, %80
  br i1 %135, label %235, label %136

136:                                              ; preds = %133
  br i1 %77, label %137, label %194

137:                                              ; preds = %136
  br i1 %78, label %138, label %167

138:                                              ; preds = %137, %164
  %139 = phi ptr [ %165, %164 ], [ %134, %137 ]
  %140 = load ptr, ptr %139, align 8, !tbaa !5
  %141 = getelementptr inbounds %struct.sv, ptr %140, i64 0, i32 2
  %142 = load i32, ptr %141, align 4, !tbaa !16
  %143 = and i32 %142, 2097408
  %144 = icmp eq i32 %143, 256
  br i1 %144, label %147, label %145

145:                                              ; preds = %138
  %146 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %140, i32 noundef 2) #13
  br label %151

147:                                              ; preds = %138
  %148 = load ptr, ptr %140, align 8, !tbaa !26
  %149 = getelementptr inbounds %struct.xpviv, ptr %148, i64 0, i32 4
  %150 = load i64, ptr %149, align 8, !tbaa !24
  br label %151

151:                                              ; preds = %147, %145
  %152 = phi i64 [ %150, %147 ], [ %146, %145 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #13
  store ptr null, ptr %2, align 8, !tbaa !5
  %153 = call zeroext i1 @Perl_av_exists(ptr noundef %28, i64 noundef %152) #13
  %154 = call ptr @Perl_av_fetch(ptr noundef %28, i64 noundef %152, i32 noundef 1) #13
  %155 = icmp eq ptr %154, null
  br i1 %155, label %163, label %156

156:                                              ; preds = %151
  %157 = load ptr, ptr %154, align 8, !tbaa !5
  store ptr %157, ptr %2, align 8, !tbaa !5
  br i1 %153, label %158, label %163

158:                                              ; preds = %156
  call void @Perl_save_aelem_flags(ptr noundef %28, i64 noundef %152, ptr noundef nonnull %2, i32 noundef 2) #13
  %159 = load ptr, ptr %2, align 8, !tbaa !5
  %160 = call ptr @Perl_sv_mortalcopy_flags(ptr noundef %159, i32 noundef 1538) #13
  store ptr %160, ptr %139, align 8, !tbaa !5
  %161 = load ptr, ptr %2, align 8, !tbaa !5
  %162 = call i32 @Perl_mg_clear(ptr noundef %161) #13
  br label %164

163:                                              ; preds = %156, %151
  call void @Perl_save_adelete(ptr noundef %28, i64 noundef %152) #13
  store ptr @PL_sv_undef, ptr %139, align 8, !tbaa !5
  br label %164

164:                                              ; preds = %163, %158
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #13
  %165 = getelementptr inbounds ptr, ptr %139, i64 1
  %166 = icmp ugt ptr %165, %80
  br i1 %166, label %235, label %138, !llvm.loop !141

167:                                              ; preds = %137, %191
  %168 = phi ptr [ %192, %191 ], [ %134, %137 ]
  %169 = load ptr, ptr %168, align 8, !tbaa !5
  %170 = getelementptr inbounds %struct.sv, ptr %169, i64 0, i32 2
  %171 = load i32, ptr %170, align 4, !tbaa !16
  %172 = and i32 %171, 2097408
  %173 = icmp eq i32 %172, 256
  br i1 %173, label %176, label %174

174:                                              ; preds = %167
  %175 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %169, i32 noundef 2) #13
  br label %180

176:                                              ; preds = %167
  %177 = load ptr, ptr %169, align 8, !tbaa !26
  %178 = getelementptr inbounds %struct.xpviv, ptr %177, i64 0, i32 4
  %179 = load i64, ptr %178, align 8, !tbaa !24
  br label %180

180:                                              ; preds = %176, %174
  %181 = phi i64 [ %179, %176 ], [ %175, %174 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #13
  store ptr null, ptr %2, align 8, !tbaa !5
  %182 = call ptr @Perl_av_fetch(ptr noundef %28, i64 noundef %181, i32 noundef 1) #13
  %183 = icmp eq ptr %182, null
  br i1 %183, label %190, label %184

184:                                              ; preds = %180
  %185 = load ptr, ptr %182, align 8, !tbaa !5
  store ptr %185, ptr %2, align 8, !tbaa !5
  call void @Perl_save_aelem_flags(ptr noundef %28, i64 noundef %181, ptr noundef nonnull %2, i32 noundef 2) #13
  %186 = load ptr, ptr %2, align 8, !tbaa !5
  %187 = call ptr @Perl_sv_mortalcopy_flags(ptr noundef %186, i32 noundef 1538) #13
  store ptr %187, ptr %168, align 8, !tbaa !5
  %188 = load ptr, ptr %2, align 8, !tbaa !5
  %189 = call i32 @Perl_mg_clear(ptr noundef %188) #13
  br label %191

190:                                              ; preds = %180
  call void @Perl_save_adelete(ptr noundef %28, i64 noundef %181) #13
  store ptr @PL_sv_undef, ptr %168, align 8, !tbaa !5
  br label %191

191:                                              ; preds = %190, %184
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #13
  %192 = getelementptr inbounds ptr, ptr %168, i64 1
  %193 = icmp ugt ptr %192, %80
  br i1 %193, label %235, label %167, !llvm.loop !141

194:                                              ; preds = %136, %227
  %195 = phi ptr [ %229, %227 ], [ %134, %136 ]
  %196 = load ptr, ptr %195, align 8, !tbaa !5
  %197 = getelementptr inbounds %struct.sv, ptr %196, i64 0, i32 2
  %198 = load i32, ptr %197, align 4, !tbaa !16
  %199 = and i32 %198, 2097408
  %200 = icmp eq i32 %199, 256
  br i1 %200, label %201, label %205

201:                                              ; preds = %194
  %202 = load ptr, ptr %196, align 8, !tbaa !26
  %203 = getelementptr inbounds %struct.xpviv, ptr %202, i64 0, i32 4
  %204 = load i64, ptr %203, align 8, !tbaa !24
  br label %207

205:                                              ; preds = %194
  %206 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %196, i32 noundef 2) #13
  br label %207

207:                                              ; preds = %205, %201
  %208 = phi i64 [ %204, %201 ], [ %206, %205 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #13
  store ptr null, ptr %2, align 8, !tbaa !5
  br i1 %78, label %209, label %212

209:                                              ; preds = %207
  %210 = call zeroext i1 @Perl_av_exists(ptr noundef %28, i64 noundef %208) #13
  %211 = zext i1 %210 to i8
  br label %212

212:                                              ; preds = %209, %207
  %213 = phi i8 [ %211, %209 ], [ 1, %207 ]
  %214 = call ptr @Perl_av_delete(ptr noundef %28, i64 noundef %208, i32 noundef 0) #13
  store ptr %214, ptr %2, align 8, !tbaa !5
  %215 = icmp ne i8 %213, 0
  %216 = icmp ne ptr %214, null
  %217 = select i1 %215, i1 %216, i1 false
  br i1 %217, label %218, label %222

218:                                              ; preds = %212
  %219 = getelementptr inbounds %struct.sv, ptr %214, i64 0, i32 1
  %220 = load i32, ptr %219, align 8, !tbaa !44
  %221 = add i32 %220, 1
  store i32 %221, ptr %219, align 8, !tbaa !44
  br label %224

222:                                              ; preds = %212
  %223 = icmp eq i8 %213, 0
  br i1 %223, label %226, label %224

224:                                              ; preds = %222, %218
  call void @Perl_save_aelem_flags(ptr noundef %28, i64 noundef %208, ptr noundef nonnull %2, i32 noundef 2) #13
  %225 = load ptr, ptr %2, align 8, !tbaa !5
  br label %227

226:                                              ; preds = %222
  call void @Perl_save_adelete(ptr noundef %28, i64 noundef %208) #13
  br label %227

227:                                              ; preds = %226, %224
  %228 = phi ptr [ %225, %224 ], [ @PL_sv_undef, %226 ]
  store ptr %228, ptr %195, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #13
  %229 = getelementptr inbounds ptr, ptr %195, i64 1
  %230 = icmp ugt ptr %229, %80
  br i1 %230, label %235, label %194, !llvm.loop !141

231:                                              ; preds = %128
  %232 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.50) #13
  br label %388

233:                                              ; preds = %76
  %234 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.49) #13
  br label %388

235:                                              ; preds = %227, %191, %164, %123, %133, %82
  br i1 %24, label %253, label %236

236:                                              ; preds = %235
  switch i32 %22, label %257 [
    i32 1, label %237
    i32 2, label %242
  ]

237:                                              ; preds = %236
  %238 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %239 = shl i64 %40, 29
  %240 = ashr i64 %239, 32
  %241 = getelementptr inbounds ptr, ptr %238, i64 %240
  br label %257

242:                                              ; preds = %236
  %243 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %244 = shl i64 %40, 29
  %245 = ashr i64 %244, 32
  %246 = getelementptr inbounds ptr, ptr %243, i64 %245
  %247 = icmp ugt ptr %27, %246
  br i1 %247, label %248, label %251

248:                                              ; preds = %242
  %249 = load ptr, ptr %27, align 8, !tbaa !5
  %250 = getelementptr inbounds ptr, ptr %246, i64 1
  store ptr %249, ptr %250, align 8, !tbaa !5
  br label %257

251:                                              ; preds = %242
  %252 = getelementptr inbounds ptr, ptr %246, i64 1
  store ptr @PL_sv_undef, ptr %252, align 8, !tbaa !5
  br label %257

253:                                              ; preds = %235
  %254 = icmp eq i32 %22, 1
  br i1 %254, label %257, label %255

255:                                              ; preds = %253
  %256 = load ptr, ptr %3, align 8, !tbaa !5
  store ptr %256, ptr %25, align 8, !tbaa !5
  br label %257

257:                                              ; preds = %255, %253, %251, %248, %237, %236
  %258 = phi ptr [ %241, %237 ], [ %25, %255 ], [ %27, %253 ], [ %27, %236 ], [ %250, %248 ], [ %252, %251 ]
  store ptr %258, ptr @PL_stack_sp, align 8, !tbaa !5
  %259 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %260 = load ptr, ptr %259, align 8, !tbaa !13
  br label %388

261:                                              ; preds = %0
  br i1 %11, label %264, label %262

262:                                              ; preds = %261
  %263 = zext i8 %10 to i32
  br label %269

264:                                              ; preds = %261
  %265 = tail call i32 @Perl_block_gimme() #13
  %266 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %267 = getelementptr inbounds %struct.op, ptr %266, i64 0, i32 6
  %268 = load i8, ptr %267, align 1, !tbaa !15
  br label %269

269:                                              ; preds = %264, %262
  %270 = phi i8 [ %6, %262 ], [ %268, %264 ]
  %271 = phi ptr [ %4, %262 ], [ %266, %264 ]
  %272 = phi i32 [ %263, %262 ], [ %265, %264 ]
  %273 = icmp eq i32 %272, 1
  %274 = select i1 %273, i32 4, i32 0
  %275 = and i8 %270, 64
  %276 = icmp eq i8 %275, 0
  br i1 %276, label %346, label %277

277:                                              ; preds = %269
  %278 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %279 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %280 = getelementptr inbounds i32, ptr %279, i64 -1
  store ptr %280, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %281 = load i32, ptr %279, align 4, !tbaa !57
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds ptr, ptr %278, i64 %282
  %284 = getelementptr inbounds ptr, ptr %3, i64 -1
  %285 = load ptr, ptr %3, align 8, !tbaa !5
  %286 = getelementptr inbounds %struct.hv, ptr %285, i64 0, i32 2
  %287 = load i32, ptr %286, align 4, !tbaa !40
  %288 = trunc i32 %287 to i8
  switch i8 %288, label %344 [
    i8 12, label %289
    i8 11, label %302
  ]

289:                                              ; preds = %277
  %290 = getelementptr inbounds ptr, ptr %283, i64 1
  %291 = icmp ugt ptr %290, %284
  br i1 %291, label %329, label %292

292:                                              ; preds = %289
  %293 = or i32 %274, 64
  br label %294

294:                                              ; preds = %292, %294
  %295 = phi ptr [ %290, %292 ], [ %300, %294 ]
  %296 = load ptr, ptr %295, align 8, !tbaa !5
  %297 = tail call ptr @Perl_hv_common(ptr noundef %285, ptr noundef %296, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef %293, ptr noundef null, i32 noundef 0) #13
  %298 = icmp eq ptr %297, null
  %299 = select i1 %298, ptr @PL_sv_undef, ptr %297
  store ptr %299, ptr %295, align 8, !tbaa !5
  %300 = getelementptr inbounds ptr, ptr %295, i64 1
  %301 = icmp ugt ptr %300, %284
  br i1 %301, label %329, label %294, !llvm.loop !142

302:                                              ; preds = %277
  %303 = getelementptr inbounds %struct.op, ptr %271, i64 0, i32 5
  %304 = load i8, ptr %303, align 2, !tbaa !9
  %305 = icmp sgt i8 %304, -1
  %306 = getelementptr inbounds ptr, ptr %283, i64 1
  %307 = icmp ugt ptr %306, %284
  %308 = select i1 %305, i1 true, i1 %307
  br i1 %308, label %329, label %309

309:                                              ; preds = %302, %322
  %310 = phi ptr [ %327, %322 ], [ %306, %302 ]
  %311 = load ptr, ptr %310, align 8, !tbaa !5
  %312 = getelementptr inbounds %struct.sv, ptr %311, i64 0, i32 2
  %313 = load i32, ptr %312, align 4, !tbaa !16
  %314 = and i32 %313, 2097408
  %315 = icmp eq i32 %314, 256
  br i1 %315, label %316, label %320

316:                                              ; preds = %309
  %317 = load ptr, ptr %311, align 8, !tbaa !26
  %318 = getelementptr inbounds %struct.xpviv, ptr %317, i64 0, i32 4
  %319 = load i64, ptr %318, align 8, !tbaa !24
  br label %322

320:                                              ; preds = %309
  %321 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %311, i32 noundef 2) #13
  br label %322

322:                                              ; preds = %320, %316
  %323 = phi i64 [ %319, %316 ], [ %321, %320 ]
  %324 = tail call ptr @Perl_av_delete(ptr noundef %285, i64 noundef %323, i32 noundef %274) #13
  %325 = icmp eq ptr %324, null
  %326 = select i1 %325, ptr @PL_sv_undef, ptr %324
  store ptr %326, ptr %310, align 8, !tbaa !5
  %327 = getelementptr inbounds ptr, ptr %310, i64 1
  %328 = icmp ugt ptr %327, %284
  br i1 %328, label %329, label %309, !llvm.loop !143

329:                                              ; preds = %322, %294, %289, %302
  br i1 %273, label %330, label %333

330:                                              ; preds = %329
  %331 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %332 = getelementptr inbounds ptr, ptr %331, i64 %282
  br label %384

333:                                              ; preds = %329
  %334 = icmp eq i32 %272, 2
  br i1 %334, label %335, label %384

335:                                              ; preds = %333
  %336 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %337 = getelementptr inbounds ptr, ptr %336, i64 %282
  %338 = icmp ugt ptr %284, %337
  br i1 %338, label %339, label %342

339:                                              ; preds = %335
  %340 = load ptr, ptr %284, align 8, !tbaa !5
  %341 = getelementptr inbounds ptr, ptr %337, i64 1
  store ptr %340, ptr %341, align 8, !tbaa !5
  br label %384

342:                                              ; preds = %335
  %343 = getelementptr inbounds ptr, ptr %337, i64 1
  store ptr @PL_sv_undef, ptr %343, align 8, !tbaa !5
  br label %384

344:                                              ; preds = %277
  %345 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.49) #13
  br label %388

346:                                              ; preds = %269
  %347 = getelementptr inbounds ptr, ptr %3, i64 -1
  %348 = load ptr, ptr %3, align 8, !tbaa !5
  %349 = getelementptr inbounds ptr, ptr %3, i64 -2
  %350 = load ptr, ptr %347, align 8, !tbaa !5
  %351 = getelementptr inbounds %struct.hv, ptr %350, i64 0, i32 2
  %352 = load i32, ptr %351, align 4, !tbaa !40
  %353 = trunc i32 %352 to i8
  switch i8 %353, label %377 [
    i8 12, label %354
    i8 11, label %357
  ]

354:                                              ; preds = %346
  %355 = or i32 %274, 64
  %356 = tail call ptr @Perl_hv_common(ptr noundef nonnull %350, ptr noundef %348, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef %355, ptr noundef null, i32 noundef 0) #13
  br label %379

357:                                              ; preds = %346
  %358 = getelementptr inbounds %struct.op, ptr %271, i64 0, i32 5
  %359 = load i8, ptr %358, align 2, !tbaa !9
  %360 = icmp sgt i8 %359, -1
  br i1 %360, label %375, label %361

361:                                              ; preds = %357
  %362 = getelementptr inbounds %struct.sv, ptr %348, i64 0, i32 2
  %363 = load i32, ptr %362, align 4, !tbaa !16
  %364 = and i32 %363, 2097408
  %365 = icmp eq i32 %364, 256
  br i1 %365, label %366, label %370

366:                                              ; preds = %361
  %367 = load ptr, ptr %348, align 8, !tbaa !26
  %368 = getelementptr inbounds %struct.xpviv, ptr %367, i64 0, i32 4
  %369 = load i64, ptr %368, align 8, !tbaa !24
  br label %372

370:                                              ; preds = %361
  %371 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %348, i32 noundef 2) #13
  br label %372

372:                                              ; preds = %370, %366
  %373 = phi i64 [ %369, %366 ], [ %371, %370 ]
  %374 = tail call ptr @Perl_av_delete(ptr noundef nonnull %350, i64 noundef %373, i32 noundef %274) #13
  br label %379

375:                                              ; preds = %357
  %376 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.50) #13
  br label %388

377:                                              ; preds = %346
  %378 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.49) #13
  br label %388

379:                                              ; preds = %372, %354
  %380 = phi ptr [ %356, %354 ], [ %374, %372 ]
  br i1 %273, label %384, label %381

381:                                              ; preds = %379
  %382 = icmp eq ptr %380, null
  %383 = select i1 %382, ptr @PL_sv_undef, ptr %380
  store ptr %383, ptr %347, align 8, !tbaa !5
  br label %384

384:                                              ; preds = %379, %381, %330, %333, %342, %339
  %385 = phi ptr [ %343, %342 ], [ %341, %339 ], [ %284, %333 ], [ %332, %330 ], [ %347, %381 ], [ %349, %379 ]
  store ptr %385, ptr @PL_stack_sp, align 8, !tbaa !5
  %386 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %387 = load ptr, ptr %386, align 8, !tbaa !13
  br label %388

388:                                              ; preds = %375, %377, %344, %257, %233, %231, %126, %384
  %389 = phi ptr [ %387, %384 ], [ %345, %344 ], [ %260, %257 ], [ %127, %126 ], [ %232, %231 ], [ %234, %233 ], [ %376, %375 ], [ %378, %377 ]
  ret ptr %389
}

declare ptr @Perl_hv_common(ptr noundef, ptr noundef, ptr noundef, i64 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_av_delete(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_exists() local_unnamed_addr #0 {
  %1 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %3 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  %4 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 6
  %6 = load i8, ptr %5, align 1, !tbaa !15
  %7 = and i8 %6, 64
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %36, label %9

9:                                                ; preds = %0
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #13
  %10 = load ptr, ptr %3, align 8, !tbaa !5
  %11 = call ptr @Perl_sv_2cv(ptr noundef %10, ptr noundef nonnull %1, ptr noundef nonnull %2, i32 noundef 0) #13
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %32

13:                                               ; preds = %9
  %14 = load ptr, ptr %2, align 8, !tbaa !5
  %15 = icmp eq ptr %14, null
  br i1 %15, label %31, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.gv, ptr %14, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !67
  %19 = and i32 %18, 255
  %20 = icmp eq i32 %19, 9
  br i1 %20, label %21, label %31

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.gv, ptr %14, i64 0, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !24
  %24 = getelementptr inbounds %struct.gp, ptr %23, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !88
  %26 = icmp eq ptr %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.gp, ptr %23, i64 0, i32 3
  %29 = load i32, ptr %28, align 8, !tbaa !75
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %27, %21, %16, %13
  br label %32

32:                                               ; preds = %27, %9, %31
  %33 = phi ptr [ @PL_sv_no, %31 ], [ @PL_sv_yes, %9 ], [ @PL_sv_yes, %27 ]
  store ptr %33, ptr %3, align 8, !tbaa !5
  store ptr %3, ptr @PL_stack_sp, align 8, !tbaa !5
  %34 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %35 = load ptr, ptr %34, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #13
  br label %75

36:                                               ; preds = %0
  %37 = getelementptr inbounds ptr, ptr %3, i64 -1
  %38 = load ptr, ptr %3, align 8, !tbaa !5
  %39 = load ptr, ptr %37, align 8, !tbaa !5
  %40 = getelementptr inbounds %struct.hv, ptr %39, i64 0, i32 2
  %41 = load i32, ptr %40, align 4, !tbaa !40
  %42 = trunc i32 %41 to i8
  switch i8 %42, label %70 [
    i8 12, label %43
    i8 11, label %49
  ]

43:                                               ; preds = %36
  %44 = tail call ptr @Perl_hv_common(ptr noundef nonnull %39, ptr noundef %38, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 8, ptr noundef null, i32 noundef 0) #13
  %45 = icmp eq ptr %44, null
  br i1 %45, label %72, label %46

46:                                               ; preds = %43
  store ptr @PL_sv_yes, ptr %37, align 8, !tbaa !5
  store ptr %37, ptr @PL_stack_sp, align 8, !tbaa !5
  %47 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %48 = load ptr, ptr %47, align 8, !tbaa !13
  br label %75

49:                                               ; preds = %36
  %50 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %51 = load i8, ptr %50, align 2, !tbaa !9
  %52 = icmp sgt i8 %51, -1
  br i1 %52, label %72, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.sv, ptr %38, i64 0, i32 2
  %55 = load i32, ptr %54, align 4, !tbaa !16
  %56 = and i32 %55, 2097408
  %57 = icmp eq i32 %56, 256
  br i1 %57, label %58, label %62

58:                                               ; preds = %53
  %59 = load ptr, ptr %38, align 8, !tbaa !26
  %60 = getelementptr inbounds %struct.xpviv, ptr %59, i64 0, i32 4
  %61 = load i64, ptr %60, align 8, !tbaa !24
  br label %64

62:                                               ; preds = %53
  %63 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %38, i32 noundef 2) #13
  br label %64

64:                                               ; preds = %62, %58
  %65 = phi i64 [ %61, %58 ], [ %63, %62 ]
  %66 = tail call zeroext i1 @Perl_av_exists(ptr noundef nonnull %39, i64 noundef %65) #13
  br i1 %66, label %67, label %72

67:                                               ; preds = %64
  store ptr @PL_sv_yes, ptr %37, align 8, !tbaa !5
  store ptr %37, ptr @PL_stack_sp, align 8, !tbaa !5
  %68 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %69 = load ptr, ptr %68, align 8, !tbaa !13
  br label %75

70:                                               ; preds = %36
  %71 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.49) #13
  br label %75

72:                                               ; preds = %64, %49, %43
  store ptr @PL_sv_no, ptr %37, align 8, !tbaa !5
  store ptr %37, ptr @PL_stack_sp, align 8, !tbaa !5
  %73 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %74 = load ptr, ptr %73, align 8, !tbaa !13
  br label %75

75:                                               ; preds = %72, %70, %67, %46, %32
  %76 = phi ptr [ %35, %32 ], [ %48, %46 ], [ %74, %72 ], [ %69, %67 ], [ %71, %70 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  ret ptr %76
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_hslice() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %4 = getelementptr inbounds i32, ptr %3, i64 -1
  store ptr %4, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %5 = load i32, ptr %3, align 4, !tbaa !57
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds ptr, ptr %2, i64 %6
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  %9 = load ptr, ptr %1, align 8, !tbaa !5
  %10 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 5
  %12 = load i8, ptr %11, align 2, !tbaa !9
  %13 = and i8 %12, 32
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %25

15:                                               ; preds = %0
  %16 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 6
  %17 = load i8, ptr %16, align 1, !tbaa !15
  %18 = and i8 %17, 8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = tail call i32 @Perl_is_lvalue_sub() #13
  %22 = freeze i32 %21
  %23 = icmp ne i32 %22, 0
  %24 = load ptr, ptr @PL_op, align 8, !tbaa !5
  br label %25

25:                                               ; preds = %15, %20, %0
  %26 = phi ptr [ %10, %0 ], [ %10, %15 ], [ %24, %20 ]
  %27 = phi i1 [ true, %0 ], [ false, %15 ], [ %23, %20 ]
  %28 = getelementptr inbounds %struct.op, ptr %26, i64 0, i32 6
  %29 = load i8, ptr %28, align 1, !tbaa !15
  %30 = icmp sgt i8 %29, -1
  br i1 %30, label %60, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.hv, ptr %9, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !40
  %34 = and i32 %33, 8388608
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %59, label %36

36:                                               ; preds = %31
  %37 = tail call ptr @Perl_mg_find(ptr noundef nonnull %9, i32 noundef 80) #13
  %38 = icmp eq ptr %37, null
  br i1 %38, label %59, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.magic, ptr %37, i64 0, i32 6
  %41 = load ptr, ptr %40, align 8, !tbaa !132
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %46

43:                                               ; preds = %39
  %44 = tail call ptr @Perl_newRV(ptr noundef nonnull %9) #13
  %45 = tail call ptr @Perl_sv_2mortal(ptr noundef %44) #13
  br label %46

46:                                               ; preds = %39, %43
  %47 = phi ptr [ %45, %43 ], [ %41, %39 ]
  %48 = getelementptr inbounds %struct.sv, ptr %47, i64 0, i32 3
  %49 = load ptr, ptr %48, align 8, !tbaa !24
  %50 = load ptr, ptr %49, align 8, !tbaa !26
  %51 = load ptr, ptr %50, align 8, !tbaa !38
  %52 = icmp eq ptr %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %46
  %54 = tail call ptr @Perl_gv_fetchmethod_autoload(ptr noundef nonnull %51, ptr noundef nonnull @.str.44, i32 noundef 1) #13
  %55 = icmp eq ptr %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %53
  %57 = tail call ptr @Perl_gv_fetchmethod_autoload(ptr noundef nonnull %51, ptr noundef nonnull @.str.45, i32 noundef 1) #13
  %58 = icmp eq ptr %57, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %56, %36, %31
  br label %60

60:                                               ; preds = %46, %53, %56, %59, %25
  %61 = phi i1 [ true, %25 ], [ false, %59 ], [ true, %56 ], [ true, %53 ], [ true, %46 ]
  %62 = getelementptr inbounds ptr, ptr %7, i64 1
  %63 = icmp ugt ptr %62, %8
  br i1 %63, label %178, label %64

64:                                               ; preds = %60
  %65 = or i1 %30, %61
  %66 = select i1 %27, i32 16, i32 0
  %67 = getelementptr inbounds %struct.hv, ptr %9, i64 0, i32 2
  %68 = getelementptr inbounds %struct.hv, ptr %9, i64 0, i32 3
  br i1 %27, label %69, label %145

69:                                               ; preds = %64
  br i1 %30, label %70, label %84

70:                                               ; preds = %69, %81
  %71 = phi ptr [ %82, %81 ], [ %62, %69 ]
  %72 = load ptr, ptr %71, align 8, !tbaa !5
  %73 = tail call ptr @Perl_hv_common(ptr noundef %9, ptr noundef %72, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef %66, ptr noundef null, i32 noundef 0) #13
  %74 = icmp eq ptr %73, null
  br i1 %74, label %166, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %struct.he, ptr %73, i64 0, i32 2
  %77 = load ptr, ptr %76, align 8, !tbaa !5
  %78 = icmp eq ptr %77, null
  %79 = icmp eq ptr %77, @PL_sv_undef
  %80 = or i1 %78, %79
  br i1 %80, label %166, label %81

81:                                               ; preds = %75
  store ptr %77, ptr %71, align 8, !tbaa !5
  %82 = getelementptr inbounds ptr, ptr %71, i64 1
  %83 = icmp ugt ptr %82, %8
  br i1 %83, label %178, label %70, !llvm.loop !144

84:                                               ; preds = %69, %139
  %85 = phi ptr [ %143, %139 ], [ %62, %69 ]
  %86 = load ptr, ptr %85, align 8, !tbaa !5
  br i1 %65, label %90, label %87

87:                                               ; preds = %84
  %88 = tail call ptr @Perl_hv_common(ptr noundef %9, ptr noundef %86, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 8, ptr noundef null, i32 noundef 0) #13
  %89 = icmp ne ptr %88, null
  br label %90

90:                                               ; preds = %87, %84
  %91 = phi i1 [ %89, %87 ], [ true, %84 ]
  %92 = tail call ptr @Perl_hv_common(ptr noundef %9, ptr noundef %86, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef %66, ptr noundef null, i32 noundef 0) #13
  %93 = icmp eq ptr %92, null
  %94 = getelementptr inbounds %struct.he, ptr %92, i64 0, i32 2
  br i1 %93, label %166, label %95

95:                                               ; preds = %90
  %96 = load ptr, ptr %94, align 8, !tbaa !5
  %97 = icmp eq ptr %96, null
  %98 = icmp eq ptr %96, @PL_sv_undef
  %99 = or i1 %97, %98
  br i1 %99, label %166, label %100

100:                                              ; preds = %95
  %101 = load i32, ptr %67, align 4, !tbaa !40
  %102 = and i32 %101, 33554432
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %131, label %104

104:                                              ; preds = %100
  %105 = load ptr, ptr %68, align 8, !tbaa !24
  %106 = load ptr, ptr %9, align 8, !tbaa !49
  %107 = getelementptr inbounds %struct.xpvhv, ptr %106, i64 0, i32 3
  %108 = load i64, ptr %107, align 8, !tbaa !50
  %109 = add i64 %108, 1
  %110 = getelementptr inbounds ptr, ptr %105, i64 %109
  %111 = load ptr, ptr %110, align 8, !tbaa !24
  %112 = icmp eq ptr %111, null
  br i1 %112, label %131, label %113

113:                                              ; preds = %104
  %114 = getelementptr inbounds %struct.xpvhv_aux, ptr %110, i64 0, i32 4
  %115 = load i32, ptr %114, align 4, !tbaa !51
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %113
  %118 = load ptr, ptr %111, align 8, !tbaa !5
  %119 = icmp eq ptr %118, null
  br i1 %119, label %131, label %120

120:                                              ; preds = %117, %113
  %121 = getelementptr inbounds %struct.sv, ptr %96, i64 0, i32 2
  %122 = load i32, ptr %121, align 4, !tbaa !16
  %123 = and i32 %122, 255
  %124 = icmp eq i32 %123, 9
  br i1 %124, label %125, label %131

125:                                              ; preds = %120
  %126 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %127 = getelementptr inbounds %struct.op, ptr %126, i64 0, i32 5
  %128 = load i8, ptr %127, align 2, !tbaa !9
  %129 = icmp sgt i8 %128, -1
  %130 = zext i1 %129 to i32
  tail call void @Perl_save_gp(ptr noundef nonnull %96, i32 noundef %130) #13
  br label %139

131:                                              ; preds = %120, %117, %104, %100
  br i1 %91, label %133, label %132

132:                                              ; preds = %131
  tail call void @Perl_save_hdelete(ptr noundef nonnull %9, ptr noundef %86) #13
  br label %139

133:                                              ; preds = %131
  %134 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %135 = getelementptr inbounds %struct.op, ptr %134, i64 0, i32 5
  %136 = load i8, ptr %135, align 2, !tbaa !9
  %137 = icmp sgt i8 %136, -1
  %138 = zext i1 %137 to i32
  tail call void @Perl_save_helem_flags(ptr noundef nonnull %9, ptr noundef %86, ptr noundef nonnull %94, i32 noundef %138) #13
  br label %139

139:                                              ; preds = %133, %132, %125
  %140 = load ptr, ptr %94, align 8, !tbaa !5
  %141 = icmp eq ptr %140, null
  %142 = select i1 %141, ptr @PL_sv_undef, ptr %140
  store ptr %142, ptr %85, align 8, !tbaa !5
  %143 = getelementptr inbounds ptr, ptr %85, i64 1
  %144 = icmp ugt ptr %143, %8
  br i1 %144, label %178, label %84, !llvm.loop !144

145:                                              ; preds = %64
  br i1 %65, label %146, label %160

146:                                              ; preds = %145, %156
  %147 = phi ptr [ %158, %156 ], [ %62, %145 ]
  %148 = load ptr, ptr %147, align 8, !tbaa !5
  %149 = tail call ptr @Perl_hv_common(ptr noundef %9, ptr noundef %148, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef %66, ptr noundef null, i32 noundef 0) #13
  %150 = icmp eq ptr %149, null
  br i1 %150, label %156, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %struct.he, ptr %149, i64 0, i32 2
  %153 = load ptr, ptr %152, align 8, !tbaa !5
  %154 = icmp eq ptr %153, null
  %155 = select i1 %154, ptr @PL_sv_undef, ptr %153
  br label %156

156:                                              ; preds = %151, %146
  %157 = phi ptr [ @PL_sv_undef, %146 ], [ %155, %151 ]
  store ptr %157, ptr %147, align 8, !tbaa !5
  %158 = getelementptr inbounds ptr, ptr %147, i64 1
  %159 = icmp ugt ptr %158, %8
  br i1 %159, label %178, label %146, !llvm.loop !144

160:                                              ; preds = %145, %174
  %161 = phi ptr [ %176, %174 ], [ %62, %145 ]
  %162 = load ptr, ptr %161, align 8, !tbaa !5
  %163 = tail call ptr @Perl_hv_common(ptr noundef %9, ptr noundef %162, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 8, ptr noundef null, i32 noundef 0) #13
  %164 = tail call ptr @Perl_hv_common(ptr noundef %9, ptr noundef %162, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef %66, ptr noundef null, i32 noundef 0) #13
  %165 = icmp eq ptr %164, null
  br i1 %165, label %174, label %169

166:                                              ; preds = %95, %90, %70, %75
  %167 = phi ptr [ %72, %75 ], [ %72, %70 ], [ %86, %90 ], [ %86, %95 ]
  %168 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @PL_no_helem_sv, ptr noundef %167) #13
  br label %204

169:                                              ; preds = %160
  %170 = getelementptr inbounds %struct.he, ptr %164, i64 0, i32 2
  %171 = load ptr, ptr %170, align 8, !tbaa !5
  %172 = icmp eq ptr %171, null
  %173 = select i1 %172, ptr @PL_sv_undef, ptr %171
  br label %174

174:                                              ; preds = %160, %169
  %175 = phi ptr [ @PL_sv_undef, %160 ], [ %173, %169 ]
  store ptr %175, ptr %161, align 8, !tbaa !5
  %176 = getelementptr inbounds ptr, ptr %161, i64 1
  %177 = icmp ugt ptr %176, %8
  br i1 %177, label %178, label %160, !llvm.loop !144

178:                                              ; preds = %174, %156, %139, %81, %60
  %179 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %180 = getelementptr inbounds %struct.op, ptr %179, i64 0, i32 5
  %181 = load i8, ptr %180, align 2, !tbaa !9
  %182 = and i8 %181, 3
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %186, label %184

184:                                              ; preds = %178
  %185 = zext i8 %182 to i32
  br label %188

186:                                              ; preds = %178
  %187 = tail call i32 @Perl_block_gimme() #13
  br label %188

188:                                              ; preds = %186, %184
  %189 = phi i32 [ %185, %184 ], [ %187, %186 ]
  %190 = icmp eq i32 %189, 3
  br i1 %190, label %200, label %191

191:                                              ; preds = %188
  %192 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %193 = getelementptr inbounds ptr, ptr %192, i64 %6
  %194 = icmp ugt ptr %8, %193
  br i1 %194, label %195, label %197

195:                                              ; preds = %191
  %196 = load ptr, ptr %8, align 8, !tbaa !5
  br label %197

197:                                              ; preds = %191, %195
  %198 = phi ptr [ %196, %195 ], [ @PL_sv_undef, %191 ]
  %199 = getelementptr inbounds ptr, ptr %193, i64 1
  store ptr %198, ptr %199, align 8, !tbaa !5
  br label %200

200:                                              ; preds = %197, %188
  %201 = phi ptr [ %199, %197 ], [ %8, %188 ]
  store ptr %201, ptr @PL_stack_sp, align 8, !tbaa !5
  %202 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %203 = load ptr, ptr %202, align 8, !tbaa !13
  br label %204

204:                                              ; preds = %166, %200
  %205 = phi ptr [ %203, %200 ], [ %168, %166 ]
  ret ptr %205
}

declare void @Perl_save_helem_flags(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_save_hdelete(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_kvhslice() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %4 = getelementptr inbounds i32, ptr %3, i64 -1
  store ptr %4, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %5 = load i32, ptr %3, align 4, !tbaa !57
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds ptr, ptr %2, i64 %6
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  %9 = load ptr, ptr %1, align 8, !tbaa !5
  %10 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 5
  %12 = load i8, ptr %11, align 2, !tbaa !9
  %13 = and i8 %12, 32
  %14 = ptrtoint ptr %8 to i64
  %15 = ptrtoint ptr %7 to i64
  %16 = sub i64 %14, %15
  %17 = ashr exact i64 %16, 3
  %18 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 6
  %19 = load i8, ptr %18, align 1, !tbaa !15
  %20 = and i8 %19, 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %0
  %23 = tail call i32 @Perl_is_lvalue_sub() #13
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %22
  %26 = and i32 %23, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.51) #13
  br label %29

29:                                               ; preds = %22, %28, %25, %0
  %30 = phi i8 [ %13, %0 ], [ %13, %22 ], [ 1, %28 ], [ 1, %25 ]
  %31 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %32 = ptrtoint ptr %31 to i64
  %33 = sub i64 %32, %14
  %34 = ashr exact i64 %33, 3
  %35 = icmp slt i64 %34, %17
  br i1 %35, label %36, label %44

36:                                               ; preds = %29
  %37 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %38 = ptrtoint ptr %37 to i64
  %39 = sub i64 %15, %38
  %40 = ashr exact i64 %39, 3
  %41 = tail call ptr @Perl_stack_grow(ptr noundef nonnull %8, ptr noundef nonnull %8, i64 noundef %17) #13
  %42 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %43 = getelementptr inbounds ptr, ptr %42, i64 %40
  br label %44

44:                                               ; preds = %29, %36
  %45 = phi ptr [ %43, %36 ], [ %7, %29 ]
  %46 = phi ptr [ %41, %36 ], [ %8, %29 ]
  %47 = getelementptr ptr, ptr %45, i64 -1
  %48 = icmp sgt i64 %16, 8
  br i1 %48, label %49, label %57

49:                                               ; preds = %44, %49
  %50 = phi i64 [ %55, %49 ], [ %17, %44 ]
  %51 = getelementptr inbounds ptr, ptr %45, i64 %50
  %52 = load ptr, ptr %51, align 8, !tbaa !5
  %53 = shl nuw nsw i64 %50, 1
  %54 = getelementptr ptr, ptr %47, i64 %53
  store ptr %52, ptr %54, align 8, !tbaa !5
  %55 = add nsw i64 %50, -1
  %56 = icmp sgt i64 %50, 2
  br i1 %56, label %49, label %57, !llvm.loop !145

57:                                               ; preds = %49, %44
  %58 = ptrtoint ptr %46 to i64
  %59 = ptrtoint ptr %45 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = getelementptr inbounds ptr, ptr %46, i64 %61
  %63 = getelementptr inbounds ptr, ptr %45, i64 1
  %64 = icmp ugt ptr %63, %62
  br i1 %64, label %108, label %65

65:                                               ; preds = %57
  %66 = freeze i8 %30
  %67 = icmp eq i8 %66, 0
  %68 = select i1 %67, i32 0, i32 16
  br i1 %67, label %69, label %85

69:                                               ; preds = %65, %80
  %70 = phi ptr [ %83, %80 ], [ %63, %65 ]
  %71 = phi ptr [ %82, %80 ], [ %45, %65 ]
  %72 = load ptr, ptr %70, align 8, !tbaa !5
  %73 = tail call ptr @Perl_hv_common(ptr noundef %9, ptr noundef %72, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef %68, ptr noundef null, i32 noundef 0) #13
  %74 = icmp eq ptr %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.he, ptr %73, i64 0, i32 2
  %77 = load ptr, ptr %76, align 8, !tbaa !5
  %78 = icmp eq ptr %77, null
  %79 = select i1 %78, ptr @PL_sv_undef, ptr %77
  br label %80

80:                                               ; preds = %75, %69
  %81 = phi ptr [ @PL_sv_undef, %69 ], [ %79, %75 ]
  %82 = getelementptr inbounds ptr, ptr %71, i64 2
  store ptr %81, ptr %82, align 8, !tbaa !5
  %83 = getelementptr inbounds ptr, ptr %71, i64 3
  %84 = icmp ugt ptr %83, %62
  br i1 %84, label %108, label %69, !llvm.loop !146

85:                                               ; preds = %65, %99
  %86 = phi ptr [ %106, %99 ], [ %63, %65 ]
  %87 = phi ptr [ %105, %99 ], [ %45, %65 ]
  %88 = load ptr, ptr %86, align 8, !tbaa !5
  %89 = tail call ptr @Perl_hv_common(ptr noundef %9, ptr noundef %88, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef %68, ptr noundef null, i32 noundef 0) #13
  %90 = icmp eq ptr %89, null
  %91 = getelementptr inbounds %struct.he, ptr %89, i64 0, i32 2
  br i1 %90, label %97, label %92

92:                                               ; preds = %85
  %93 = load ptr, ptr %91, align 8, !tbaa !5
  %94 = icmp eq ptr %93, null
  %95 = icmp eq ptr %93, @PL_sv_undef
  %96 = or i1 %94, %95
  br i1 %96, label %97, label %99

97:                                               ; preds = %85, %92
  %98 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @PL_no_helem_sv, ptr noundef %88) #13
  br label %135

99:                                               ; preds = %92
  %100 = load ptr, ptr %86, align 8, !tbaa !5
  %101 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef %100, i32 noundef 1538) #13
  store ptr %101, ptr %86, align 8, !tbaa !5
  %102 = load ptr, ptr %91, align 8, !tbaa !5
  %103 = icmp eq ptr %102, null
  %104 = select i1 %103, ptr @PL_sv_undef, ptr %102
  %105 = getelementptr inbounds ptr, ptr %87, i64 2
  store ptr %104, ptr %105, align 8, !tbaa !5
  %106 = getelementptr inbounds ptr, ptr %87, i64 3
  %107 = icmp ugt ptr %106, %62
  br i1 %107, label %108, label %85, !llvm.loop !146

108:                                              ; preds = %99, %80, %57
  %109 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %110 = getelementptr inbounds %struct.op, ptr %109, i64 0, i32 5
  %111 = load i8, ptr %110, align 2, !tbaa !9
  %112 = and i8 %111, 3
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %108
  %115 = zext i8 %112 to i32
  br label %118

116:                                              ; preds = %108
  %117 = tail call i32 @Perl_block_gimme() #13
  br label %118

118:                                              ; preds = %116, %114
  %119 = phi i32 [ %115, %114 ], [ %117, %116 ]
  %120 = icmp eq i32 %119, 3
  br i1 %120, label %131, label %121

121:                                              ; preds = %118
  %122 = ashr exact i64 %60, 2
  %123 = sub nsw i64 0, %122
  %124 = getelementptr inbounds ptr, ptr %62, i64 %123
  %125 = icmp sgt i64 %60, 0
  br i1 %125, label %126, label %128

126:                                              ; preds = %121
  %127 = load ptr, ptr %62, align 8, !tbaa !5
  br label %128

128:                                              ; preds = %121, %126
  %129 = phi ptr [ %127, %126 ], [ @PL_sv_undef, %121 ]
  %130 = getelementptr inbounds ptr, ptr %124, i64 1
  store ptr %129, ptr %130, align 8, !tbaa !5
  br label %131

131:                                              ; preds = %128, %118
  %132 = phi ptr [ %130, %128 ], [ %62, %118 ]
  store ptr %132, ptr @PL_stack_sp, align 8, !tbaa !5
  %133 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %134 = load ptr, ptr %133, align 8, !tbaa !13
  br label %135

135:                                              ; preds = %97, %131
  %136 = phi ptr [ %134, %131 ], [ %98, %97 ]
  ret ptr %136
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_list() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %2 = getelementptr inbounds i32, ptr %1, i64 -1
  store ptr %2, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %3 = load i32, ptr %1, align 4, !tbaa !57
  %4 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %6 = load i8, ptr %5, align 2, !tbaa !9
  %7 = and i8 %6, 3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %0
  %10 = zext i8 %7 to i32
  br label %13

11:                                               ; preds = %0
  %12 = tail call i32 @Perl_block_gimme() #13
  br label %13

13:                                               ; preds = %11, %9
  %14 = phi i32 [ %10, %9 ], [ %12, %11 ]
  %15 = icmp eq i32 %14, 3
  br i1 %15, label %27, label %16

16:                                               ; preds = %13
  %17 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %18 = sext i32 %3 to i64
  %19 = getelementptr inbounds ptr, ptr %17, i64 %18
  %20 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %21 = getelementptr inbounds ptr, ptr %19, i64 1
  %22 = icmp ugt ptr %21, %20
  br i1 %22, label %25, label %23

23:                                               ; preds = %16
  %24 = load ptr, ptr %20, align 8, !tbaa !5
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi ptr [ %24, %23 ], [ @PL_sv_undef, %16 ]
  store ptr %26, ptr %21, align 8, !tbaa !5
  store ptr %21, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %27

27:                                               ; preds = %25, %13
  %28 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %29 = load ptr, ptr %28, align 8, !tbaa !13
  ret ptr %29
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_lslice() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %4 = getelementptr inbounds i32, ptr %3, i64 -1
  %5 = load i32, ptr %3, align 4, !tbaa !57
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds ptr, ptr %2, i64 %6
  %8 = getelementptr inbounds i32, ptr %3, i64 -2
  store ptr %8, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %9 = load i32, ptr %4, align 4, !tbaa !57
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds ptr, ptr %2, i64 %10
  %12 = getelementptr inbounds ptr, ptr %11, i64 1
  %13 = getelementptr inbounds ptr, ptr %7, i64 1
  %14 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %15 = getelementptr inbounds %struct.op, ptr %14, i64 0, i32 5
  %16 = load i8, ptr %15, align 2, !tbaa !9
  %17 = freeze i8 %16
  %18 = and i8 %17, 32
  %19 = ptrtoint ptr %1 to i64
  %20 = ptrtoint ptr %7 to i64
  %21 = sub i64 %19, %20
  %22 = lshr exact i64 %21, 3
  %23 = trunc i64 %22 to i32
  %24 = and i8 %17, 3
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %0
  %27 = zext i8 %24 to i32
  br label %30

28:                                               ; preds = %0
  %29 = tail call i32 @Perl_block_gimme() #13
  br label %30

30:                                               ; preds = %28, %26
  %31 = phi i32 [ %27, %26 ], [ %29, %28 ]
  %32 = icmp eq i32 %31, 3
  br i1 %32, label %60, label %33

33:                                               ; preds = %30
  %34 = load ptr, ptr %7, align 8, !tbaa !5
  %35 = getelementptr inbounds %struct.sv, ptr %34, i64 0, i32 2
  %36 = load i32, ptr %35, align 4, !tbaa !16
  %37 = and i32 %36, 2097408
  %38 = icmp eq i32 %37, 256
  br i1 %38, label %39, label %43

39:                                               ; preds = %33
  %40 = load ptr, ptr %34, align 8, !tbaa !26
  %41 = getelementptr inbounds %struct.xpviv, ptr %40, i64 0, i32 4
  %42 = load i64, ptr %41, align 8, !tbaa !24
  br label %45

43:                                               ; preds = %33
  %44 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %34, i32 noundef 2) #13
  br label %45

45:                                               ; preds = %43, %39
  %46 = phi i64 [ %42, %39 ], [ %44, %43 ]
  %47 = trunc i64 %46 to i32
  %48 = icmp slt i32 %47, 0
  %49 = select i1 %48, i32 %23, i32 0
  %50 = add nsw i32 %49, %47
  %51 = icmp sgt i32 %50, -1
  %52 = icmp slt i32 %50, %23
  %53 = select i1 %51, i1 %52, i1 false
  br i1 %53, label %54, label %58

54:                                               ; preds = %45
  %55 = zext i32 %50 to i64
  %56 = getelementptr inbounds ptr, ptr %13, i64 %55
  %57 = load ptr, ptr %56, align 8, !tbaa !5
  br label %58

58:                                               ; preds = %45, %54
  %59 = phi ptr [ %57, %54 ], [ @PL_sv_undef, %45 ]
  store ptr %59, ptr %12, align 8, !tbaa !5
  br label %137

60:                                               ; preds = %30
  %61 = icmp eq i32 %23, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %60
  %63 = icmp ugt ptr %12, %7
  br i1 %63, label %137, label %64

64:                                               ; preds = %62
  %65 = icmp eq i8 %18, 0
  br i1 %65, label %66, label %98

66:                                               ; preds = %64, %94
  %67 = phi ptr [ %96, %94 ], [ %12, %64 ]
  %68 = load ptr, ptr %67, align 8, !tbaa !5
  %69 = getelementptr inbounds %struct.sv, ptr %68, i64 0, i32 2
  %70 = load i32, ptr %69, align 4, !tbaa !16
  %71 = and i32 %70, 2097408
  %72 = icmp eq i32 %71, 256
  br i1 %72, label %75, label %73

73:                                               ; preds = %66
  %74 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %68, i32 noundef 2) #13
  br label %79

75:                                               ; preds = %66
  %76 = load ptr, ptr %68, align 8, !tbaa !26
  %77 = getelementptr inbounds %struct.xpviv, ptr %76, i64 0, i32 4
  %78 = load i64, ptr %77, align 8, !tbaa !24
  br label %79

79:                                               ; preds = %75, %73
  %80 = phi i64 [ %78, %75 ], [ %74, %73 ]
  %81 = trunc i64 %80 to i32
  %82 = icmp slt i32 %81, 0
  %83 = select i1 %82, i32 %23, i32 0
  %84 = add nsw i32 %83, %81
  %85 = icmp sgt i32 %84, -1
  %86 = icmp slt i32 %84, %23
  %87 = select i1 %85, i1 %86, i1 false
  br i1 %87, label %88, label %94

88:                                               ; preds = %79
  %89 = zext i32 %84 to i64
  %90 = getelementptr inbounds ptr, ptr %13, i64 %89
  %91 = load ptr, ptr %90, align 8, !tbaa !5
  %92 = icmp eq ptr %91, null
  %93 = select i1 %92, ptr @PL_sv_undef, ptr %91
  br label %94

94:                                               ; preds = %79, %88
  %95 = phi ptr [ %93, %88 ], [ @PL_sv_undef, %79 ]
  store ptr %95, ptr %67, align 8
  %96 = getelementptr inbounds ptr, ptr %67, i64 1
  %97 = icmp ugt ptr %96, %7
  br i1 %97, label %137, label %66, !llvm.loop !147

98:                                               ; preds = %64, %134
  %99 = phi ptr [ %135, %134 ], [ %12, %64 ]
  %100 = load ptr, ptr %99, align 8, !tbaa !5
  %101 = getelementptr inbounds %struct.sv, ptr %100, i64 0, i32 2
  %102 = load i32, ptr %101, align 4, !tbaa !16
  %103 = and i32 %102, 2097408
  %104 = icmp eq i32 %103, 256
  br i1 %104, label %105, label %109

105:                                              ; preds = %98
  %106 = load ptr, ptr %100, align 8, !tbaa !26
  %107 = getelementptr inbounds %struct.xpviv, ptr %106, i64 0, i32 4
  %108 = load i64, ptr %107, align 8, !tbaa !24
  br label %111

109:                                              ; preds = %98
  %110 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %100, i32 noundef 2) #13
  br label %111

111:                                              ; preds = %109, %105
  %112 = phi i64 [ %108, %105 ], [ %110, %109 ]
  %113 = trunc i64 %112 to i32
  %114 = icmp slt i32 %113, 0
  %115 = select i1 %114, i32 %23, i32 0
  %116 = add nsw i32 %115, %113
  %117 = icmp sgt i32 %116, -1
  %118 = icmp slt i32 %116, %23
  %119 = select i1 %117, i1 %118, i1 false
  br i1 %119, label %120, label %132

120:                                              ; preds = %111
  %121 = zext i32 %116 to i64
  %122 = getelementptr inbounds ptr, ptr %13, i64 %121
  %123 = load ptr, ptr %122, align 8, !tbaa !5
  store ptr %123, ptr %99, align 8, !tbaa !5
  %124 = icmp eq ptr %123, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %struct.sv, ptr %123, i64 0, i32 2
  %127 = load i32, ptr %126, align 4, !tbaa !16
  %128 = and i32 %127, 131072
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %134, label %130

130:                                              ; preds = %125
  %131 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %123, i32 noundef 1538) #13
  store ptr %131, ptr %122, align 8, !tbaa !5
  br label %132

132:                                              ; preds = %120, %111, %130
  %133 = phi ptr [ %131, %130 ], [ @PL_sv_undef, %111 ], [ @PL_sv_undef, %120 ]
  store ptr %133, ptr %99, align 8, !tbaa !5
  br label %134

134:                                              ; preds = %132, %125
  %135 = getelementptr inbounds ptr, ptr %99, i64 1
  %136 = icmp ugt ptr %135, %7
  br i1 %136, label %137, label %98, !llvm.loop !147

137:                                              ; preds = %134, %94, %62, %60, %58
  %138 = phi ptr [ %12, %58 ], [ %11, %60 ], [ %7, %62 ], [ %7, %94 ], [ %7, %134 ]
  store ptr %138, ptr @PL_stack_sp, align 8, !tbaa !5
  %139 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %140 = load ptr, ptr %139, align 8, !tbaa !13
  ret ptr %140
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_anonlist() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %4 = getelementptr inbounds i32, ptr %3, i64 -1
  store ptr %4, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %5 = load i32, ptr %3, align 4, !tbaa !57
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds ptr, ptr %2, i64 %6
  %8 = ptrtoint ptr %1 to i64
  %9 = ptrtoint ptr %7 to i64
  %10 = sub i64 %8, %9
  %11 = shl i64 %10, 29
  %12 = ashr i64 %11, 32
  %13 = getelementptr inbounds ptr, ptr %7, i64 1
  %14 = tail call ptr @Perl_av_make(i64 noundef %12, ptr noundef nonnull %13) #13
  %15 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %16 = ptrtoint ptr %15 to i64
  %17 = sub i64 %16, %9
  %18 = icmp slt i64 %17, 8
  br i1 %18, label %19, label %21

19:                                               ; preds = %0
  %20 = tail call ptr @Perl_stack_grow(ptr noundef %7, ptr noundef %7, i64 noundef 1) #13
  br label %21

21:                                               ; preds = %0, %19
  %22 = phi ptr [ %20, %19 ], [ %7, %0 ]
  %23 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %24 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 5
  %25 = load i8, ptr %24, align 2, !tbaa !9
  %26 = icmp sgt i8 %25, -1
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = tail call ptr @Perl_newRV_noinc(ptr noundef %14) #13
  br label %29

29:                                               ; preds = %21, %27
  %30 = phi ptr [ %28, %27 ], [ %14, %21 ]
  %31 = tail call ptr @Perl_sv_2mortal(ptr noundef %30) #13
  %32 = getelementptr inbounds ptr, ptr %22, i64 1
  store ptr %31, ptr %32, align 8, !tbaa !5
  store ptr %32, ptr @PL_stack_sp, align 8, !tbaa !5
  %33 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %34 = load ptr, ptr %33, align 8, !tbaa !13
  ret ptr %34
}

declare ptr @Perl_av_make(i64 noundef, ptr noundef) local_unnamed_addr #2

declare ptr @Perl_newRV_noinc(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_anonhash() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %4 = getelementptr inbounds i32, ptr %3, i64 -1
  store ptr %4, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %5 = load i32, ptr %3, align 4, !tbaa !57
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds ptr, ptr %2, i64 %6
  %8 = tail call ptr @Perl_newSV_type(i32 noundef 12) #13
  %9 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 5
  %11 = load i8, ptr %10, align 2, !tbaa !9
  %12 = icmp sgt i8 %11, -1
  br i1 %12, label %15, label %13

13:                                               ; preds = %0
  %14 = tail call ptr @Perl_newRV_noinc(ptr noundef %8) #13
  br label %15

15:                                               ; preds = %0, %13
  %16 = phi ptr [ %14, %13 ], [ %8, %0 ]
  %17 = tail call ptr @Perl_sv_2mortal(ptr noundef %16) #13
  %18 = icmp ult ptr %7, %1
  br i1 %18, label %19, label %51

19:                                               ; preds = %15, %46
  %20 = phi ptr [ %47, %46 ], [ %7, %15 ]
  %21 = getelementptr inbounds ptr, ptr %20, i64 1
  %22 = load ptr, ptr %21, align 8, !tbaa !5
  %23 = getelementptr inbounds %struct.sv, ptr %22, i64 0, i32 2
  %24 = load i32, ptr %23, align 4, !tbaa !16
  %25 = and i32 %24, 2097152
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %19
  %28 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %22, i32 noundef 1538) #13
  br label %29

29:                                               ; preds = %19, %27
  %30 = phi ptr [ %28, %27 ], [ %22, %19 ]
  %31 = icmp ult ptr %21, %1
  br i1 %31, label %32, label %44

32:                                               ; preds = %29
  %33 = getelementptr inbounds ptr, ptr %20, i64 2
  %34 = load ptr, ptr %33, align 8, !tbaa !5
  %35 = getelementptr inbounds %struct.sv, ptr %34, i64 0, i32 2
  %36 = load i32, ptr %35, align 4, !tbaa !16
  %37 = and i32 %36, 2097152
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %32
  %40 = tail call i32 @Perl_mg_get(ptr noundef nonnull %34) #13
  br label %41

41:                                               ; preds = %32, %39
  %42 = tail call ptr @Perl_newSV(i64 noundef 0) #13
  %43 = load ptr, ptr %33, align 8, !tbaa !5
  tail call void @Perl_sv_setsv_flags(ptr noundef %42, ptr noundef %43, i32 noundef 1536) #13
  br label %46

44:                                               ; preds = %29
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 12, ptr noundef nonnull @.str.52) #13
  %45 = tail call ptr @Perl_newSV(i64 noundef 0) #13
  br label %46

46:                                               ; preds = %44, %41
  %47 = phi ptr [ %33, %41 ], [ %21, %44 ]
  %48 = phi ptr [ %42, %41 ], [ %45, %44 ]
  %49 = tail call ptr @Perl_hv_common(ptr noundef %8, ptr noundef %30, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 4, ptr noundef %48, i32 noundef 0) #13
  %50 = icmp ult ptr %47, %1
  br i1 %50, label %19, label %51, !llvm.loop !148

51:                                               ; preds = %46, %15
  %52 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %53 = getelementptr inbounds ptr, ptr %52, i64 %6
  %54 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %55 = ptrtoint ptr %54 to i64
  %56 = ptrtoint ptr %53 to i64
  %57 = sub i64 %55, %56
  %58 = icmp slt i64 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %51
  %60 = tail call ptr @Perl_stack_grow(ptr noundef %53, ptr noundef %53, i64 noundef 1) #13
  br label %61

61:                                               ; preds = %51, %59
  %62 = phi ptr [ %60, %59 ], [ %53, %51 ]
  %63 = getelementptr inbounds ptr, ptr %62, i64 1
  store ptr %17, ptr %63, align 8, !tbaa !5
  store ptr %63, ptr @PL_stack_sp, align 8, !tbaa !5
  %64 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %65 = load ptr, ptr %64, align 8, !tbaa !13
  ret ptr %65
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_splice() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %4 = getelementptr inbounds i32, ptr %3, i64 -1
  store ptr %4, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %5 = load i32, ptr %3, align 4, !tbaa !57
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds ptr, ptr %2, i64 %6
  %8 = ptrtoint ptr %7 to i64
  %9 = ptrtoint ptr %1 to i64
  %10 = sub i64 %9, %8
  %11 = lshr exact i64 %10, 3
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds ptr, ptr %7, i64 1
  %14 = load ptr, ptr %13, align 8, !tbaa !5
  store ptr %14, ptr @PL_Sv, align 8, !tbaa !5
  %15 = getelementptr inbounds %struct.sv, ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !57
  %17 = and i32 %16, 255
  %18 = icmp eq i32 %17, 11
  br i1 %18, label %44, label %19

19:                                               ; preds = %0
  %20 = and i32 %16, 2097152
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = tail call i32 @Perl_mg_get(ptr noundef nonnull %14) #13
  %24 = load i32, ptr %15, align 4, !tbaa !74
  br label %25

25:                                               ; preds = %22, %19
  %26 = phi i32 [ %16, %19 ], [ %24, %22 ]
  %27 = and i32 %26, 2048
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %39, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.av, ptr %14, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8, !tbaa !24
  %32 = getelementptr inbounds %struct.sv, ptr %31, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  %34 = and i32 %33, 255
  %35 = icmp eq i32 %34, 11
  br i1 %35, label %36, label %39

36:                                               ; preds = %29
  %37 = and i32 %33, 1048576
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %36, %29, %25
  %40 = phi ptr [ @.str.80, %29 ], [ @.str.80, %25 ], [ @.str.81, %36 ]
  %41 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull %40) #13
  %42 = getelementptr inbounds %struct.av, ptr %14, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8, !tbaa !24
  br label %44

44:                                               ; preds = %36, %39, %0
  %45 = phi ptr [ %14, %0 ], [ %43, %39 ], [ %31, %36 ]
  %46 = getelementptr inbounds %struct.sv, ptr %45, i64 0, i32 2
  %47 = load i32, ptr %46, align 4, !tbaa !16
  %48 = and i32 %47, 8388608
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %77, label %50

50:                                               ; preds = %44
  %51 = tail call ptr @Perl_mg_find(ptr noundef nonnull %45, i32 noundef 80) #13
  %52 = icmp eq ptr %51, null
  br i1 %52, label %77, label %53

53:                                               ; preds = %50
  %54 = load ptr, ptr getelementptr inbounds ([35 x ptr], ptr @PL_sv_consts, i64 0, i64 13), align 8, !tbaa !5
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = tail call ptr @Perl_newSVpv_share(ptr noundef nonnull @.str.53, i32 noundef 0) #13
  store ptr %57, ptr getelementptr inbounds ([35 x ptr], ptr @PL_sv_consts, i64 0, i64 13), align 8, !tbaa !5
  br label %58

58:                                               ; preds = %53, %56
  %59 = phi ptr [ %57, %56 ], [ %54, %53 ]
  %60 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %61 = getelementptr inbounds %struct.op, ptr %60, i64 0, i32 5
  %62 = load i8, ptr %61, align 2, !tbaa !9
  %63 = and i8 %62, 3
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %58
  %66 = zext i8 %63 to i32
  br label %69

67:                                               ; preds = %58
  %68 = tail call i32 @Perl_block_gimme() #13
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i32 [ %66, %65 ], [ %68, %67 ]
  %71 = or i32 %70, 8
  %72 = ptrtoint ptr %13 to i64
  %73 = sub i64 %9, %72
  %74 = lshr exact i64 %73, 3
  %75 = trunc i64 %74 to i32
  %76 = tail call ptr (ptr, ptr, ptr, ptr, i32, i32, ...) @Perl_tied_method(ptr noundef %59, ptr noundef nonnull %7, ptr noundef nonnull %45, ptr noundef nonnull %51, i32 noundef %71, i32 noundef %75) #13
  br label %814

77:                                               ; preds = %44, %50
  %78 = getelementptr inbounds ptr, ptr %1, i64 1
  %79 = getelementptr inbounds ptr, ptr %7, i64 2
  %80 = icmp ult ptr %79, %78
  br i1 %80, label %81, label %138

81:                                               ; preds = %77
  %82 = load ptr, ptr %79, align 8, !tbaa !5
  %83 = getelementptr inbounds %struct.sv, ptr %82, i64 0, i32 2
  %84 = load i32, ptr %83, align 4, !tbaa !16
  %85 = and i32 %84, 2097408
  %86 = icmp eq i32 %85, 256
  br i1 %86, label %87, label %91

87:                                               ; preds = %81
  %88 = load ptr, ptr %82, align 8, !tbaa !26
  %89 = getelementptr inbounds %struct.xpviv, ptr %88, i64 0, i32 4
  %90 = load i64, ptr %89, align 8, !tbaa !24
  br label %93

91:                                               ; preds = %81
  %92 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %82, i32 noundef 2) #13
  br label %93

93:                                               ; preds = %91, %87
  %94 = phi i64 [ %90, %87 ], [ %92, %91 ]
  %95 = icmp slt i64 %94, 0
  br i1 %95, label %96, label %105

96:                                               ; preds = %93
  %97 = load ptr, ptr %45, align 8, !tbaa !18
  %98 = getelementptr inbounds %struct.xpvav, ptr %97, i64 0, i32 2
  %99 = load i64, ptr %98, align 8, !tbaa !20
  %100 = add nsw i64 %94, 1
  %101 = add i64 %100, %99
  %102 = icmp slt i64 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %96
  %104 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @PL_no_aelem, i64 noundef %94) #13
  br label %814

105:                                              ; preds = %93, %96
  %106 = phi i64 [ %101, %96 ], [ %94, %93 ]
  %107 = getelementptr inbounds ptr, ptr %7, i64 3
  %108 = icmp ult ptr %107, %78
  br i1 %108, label %109, label %133

109:                                              ; preds = %105
  %110 = getelementptr inbounds ptr, ptr %7, i64 4
  %111 = load ptr, ptr %107, align 8, !tbaa !5
  store ptr %111, ptr @PL_Sv, align 8, !tbaa !5
  %112 = getelementptr inbounds %struct.sv, ptr %111, i64 0, i32 2
  %113 = load i32, ptr %112, align 4, !tbaa !16
  %114 = and i32 %113, 2097408
  %115 = icmp eq i32 %114, 256
  br i1 %115, label %116, label %120

116:                                              ; preds = %109
  %117 = load ptr, ptr %111, align 8, !tbaa !26
  %118 = getelementptr inbounds %struct.xpviv, ptr %117, i64 0, i32 4
  %119 = load i64, ptr %118, align 8, !tbaa !24
  br label %122

120:                                              ; preds = %109
  %121 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %111, i32 noundef 2) #13
  br label %122

122:                                              ; preds = %120, %116
  %123 = phi i64 [ %119, %116 ], [ %121, %120 ]
  %124 = icmp slt i64 %123, 0
  %125 = load ptr, ptr %45, align 8, !tbaa !18
  br i1 %124, label %126, label %143

126:                                              ; preds = %122
  %127 = getelementptr inbounds %struct.xpvav, ptr %125, i64 0, i32 2
  %128 = load i64, ptr %127, align 8, !tbaa !20
  %129 = sub nuw i64 %123, %106
  %130 = add i64 %129, 1
  %131 = add i64 %130, %128
  %132 = tail call i64 @llvm.smax.i64(i64 %131, i64 0)
  br label %143

133:                                              ; preds = %105
  %134 = load ptr, ptr %45, align 8, !tbaa !18
  %135 = getelementptr inbounds %struct.xpvav, ptr %134, i64 0, i32 3
  %136 = load i64, ptr %135, align 8, !tbaa !134
  %137 = add nsw i64 %136, 1
  br label %143

138:                                              ; preds = %77
  %139 = load ptr, ptr %45, align 8, !tbaa !18
  %140 = getelementptr inbounds %struct.xpvav, ptr %139, i64 0, i32 3
  %141 = load i64, ptr %140, align 8, !tbaa !134
  %142 = add nsw i64 %141, 1
  br label %143

143:                                              ; preds = %133, %126, %122, %138
  %144 = phi ptr [ %125, %126 ], [ %125, %122 ], [ %134, %133 ], [ %139, %138 ]
  %145 = phi i64 [ %132, %126 ], [ %123, %122 ], [ %137, %133 ], [ %142, %138 ]
  %146 = phi i64 [ %106, %126 ], [ %106, %122 ], [ %106, %133 ], [ 0, %138 ]
  %147 = phi ptr [ %110, %126 ], [ %110, %122 ], [ %107, %133 ], [ %79, %138 ]
  %148 = getelementptr inbounds %struct.xpvav, ptr %144, i64 0, i32 2
  %149 = load i64, ptr %148, align 8, !tbaa !20
  %150 = add nsw i64 %149, 1
  %151 = icmp sgt i64 %146, %150
  br i1 %151, label %152, label %159

152:                                              ; preds = %143
  %153 = icmp sgt i32 %12, 2
  br i1 %153, label %154, label %159

154:                                              ; preds = %152
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 12, ptr noundef nonnull @.str.54) #13
  %155 = load ptr, ptr %45, align 8, !tbaa !18
  %156 = getelementptr inbounds %struct.xpvav, ptr %155, i64 0, i32 2
  %157 = load i64, ptr %156, align 8, !tbaa !20
  %158 = add nsw i64 %157, 1
  br label %159

159:                                              ; preds = %152, %154, %143
  %160 = phi i64 [ %149, %143 ], [ %157, %154 ], [ %149, %152 ]
  %161 = phi ptr [ %144, %143 ], [ %155, %154 ], [ %144, %152 ]
  %162 = phi i64 [ %146, %143 ], [ %158, %154 ], [ %150, %152 ]
  %163 = add i64 %145, %162
  %164 = sub i64 %160, %163
  %165 = add i64 %164, 1
  %166 = icmp slt i64 %165, 0
  br i1 %166, label %167, label %173

167:                                              ; preds = %159
  %168 = add nsw i64 %165, %145
  %169 = getelementptr inbounds %struct.xpvav, ptr %161, i64 0, i32 4
  %170 = load ptr, ptr %169, align 8, !tbaa !149
  %171 = icmp eq ptr %170, null
  br i1 %171, label %172, label %173

172:                                              ; preds = %167
  tail call void @Perl_av_extend(ptr noundef nonnull %45, i64 noundef 0) #13
  br label %173

173:                                              ; preds = %167, %172, %159
  %174 = phi i64 [ 0, %167 ], [ 0, %172 ], [ %165, %159 ]
  %175 = phi i64 [ %168, %167 ], [ %168, %172 ], [ %145, %159 ]
  %176 = ptrtoint ptr %78 to i64
  %177 = ptrtoint ptr %147 to i64
  %178 = sub i64 %176, %177
  %179 = ashr i64 %178, 3
  %180 = sub nsw i64 %179, %175
  %181 = icmp eq ptr %78, %147
  br i1 %181, label %198, label %182

182:                                              ; preds = %173
  %183 = load i32, ptr %46, align 4, !tbaa !74
  %184 = and i32 %183, -1073741824
  %185 = icmp eq i32 %184, -2147483648
  br i1 %185, label %186, label %187

186:                                              ; preds = %182
  tail call void @Perl_av_reify(ptr noundef nonnull %45) #13
  br label %187

187:                                              ; preds = %186, %182
  br label %188

188:                                              ; preds = %187, %188
  %189 = phi ptr [ %193, %188 ], [ %147, %187 ]
  %190 = phi i64 [ %194, %188 ], [ %179, %187 ]
  %191 = load ptr, ptr %189, align 8, !tbaa !5
  %192 = tail call ptr @Perl_newSVsv(ptr noundef %191) #13
  %193 = getelementptr inbounds ptr, ptr %189, i64 1
  store ptr %192, ptr %189, align 8, !tbaa !5
  %194 = add nsw i64 %190, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %188, !llvm.loop !150

196:                                              ; preds = %188
  %197 = icmp slt i64 %180, 0
  br i1 %197, label %200, label %463

198:                                              ; preds = %173
  %199 = icmp slt i64 %180, 0
  br i1 %199, label %203, label %463

200:                                              ; preds = %196
  br i1 %181, label %203, label %201

201:                                              ; preds = %200
  %202 = tail call ptr @Perl_safesysmalloc(i64 noundef %178) #13
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %202, ptr nonnull align 1 %147, i64 %178, i1 false)
  br label %203

203:                                              ; preds = %198, %201, %200
  %204 = phi ptr [ %202, %201 ], [ null, %200 ], [ null, %198 ]
  %205 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %206 = getelementptr inbounds ptr, ptr %205, i64 %6
  %207 = getelementptr inbounds ptr, ptr %206, i64 1
  %208 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %209 = getelementptr inbounds %struct.op, ptr %208, i64 0, i32 5
  %210 = load i8, ptr %209, align 2, !tbaa !9
  %211 = and i8 %210, 3
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %215, label %213

213:                                              ; preds = %203
  %214 = zext i8 %211 to i32
  br label %217

215:                                              ; preds = %203
  %216 = tail call i32 @Perl_block_gimme() #13
  br label %217

217:                                              ; preds = %215, %213
  %218 = phi i32 [ %214, %213 ], [ %216, %215 ]
  %219 = icmp eq i32 %218, 3
  br i1 %219, label %220, label %312

220:                                              ; preds = %217
  %221 = load i32, ptr %46, align 4, !tbaa !74
  %222 = and i32 %221, 1073741824
  %223 = icmp eq i32 %222, 0
  %224 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %225 = ptrtoint ptr %224 to i64
  %226 = ptrtoint ptr %207 to i64
  %227 = sub i64 %225, %226
  %228 = ashr exact i64 %227, 3
  %229 = icmp slt i64 %228, %175
  br i1 %229, label %230, label %238

230:                                              ; preds = %220
  %231 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %232 = ptrtoint ptr %231 to i64
  %233 = sub i64 %226, %232
  %234 = ashr exact i64 %233, 3
  %235 = tail call ptr @Perl_stack_grow(ptr noundef nonnull %78, ptr noundef nonnull %207, i64 noundef %175) #13
  %236 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %237 = getelementptr inbounds ptr, ptr %236, i64 %234
  br label %238

238:                                              ; preds = %220, %230
  %239 = phi ptr [ %237, %230 ], [ %207, %220 ]
  br i1 %223, label %249, label %240

240:                                              ; preds = %238
  %241 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !71
  %242 = add nsw i64 %241, %175
  %243 = load i64, ptr @PL_tmps_max, align 8, !tbaa !71
  %244 = icmp slt i64 %242, %243
  br i1 %244, label %247, label %245

245:                                              ; preds = %240
  %246 = tail call i64 @Perl_tmps_grow_p(i64 noundef %242) #13
  br label %247

247:                                              ; preds = %245, %240
  %248 = icmp sgt i64 %175, 0
  br i1 %248, label %253, label %309

249:                                              ; preds = %238
  %250 = icmp sgt i64 %175, 0
  br i1 %250, label %251, label %309

251:                                              ; preds = %249
  %252 = getelementptr inbounds %struct.av, ptr %45, i64 0, i32 3
  br label %255

253:                                              ; preds = %247
  %254 = getelementptr inbounds %struct.av, ptr %45, i64 0, i32 3
  br i1 %223, label %255, label %283

255:                                              ; preds = %251, %253
  %256 = phi ptr [ %252, %251 ], [ %254, %253 ]
  %257 = and i64 %175, 1
  %258 = icmp eq i64 %175, 1
  br i1 %258, label %298, label %259

259:                                              ; preds = %255
  %260 = and i64 %175, -2
  br label %261

261:                                              ; preds = %261, %259
  %262 = phi ptr [ %239, %259 ], [ %279, %261 ]
  %263 = phi i64 [ 0, %259 ], [ %280, %261 ]
  %264 = phi i64 [ 0, %259 ], [ %281, %261 ]
  %265 = load ptr, ptr %256, align 8, !tbaa !24
  %266 = add nsw i64 %263, %162
  %267 = getelementptr inbounds ptr, ptr %265, i64 %266
  %268 = load ptr, ptr %267, align 8, !tbaa !5
  %269 = icmp eq ptr %268, null
  %270 = select i1 %269, ptr @PL_sv_undef, ptr %268
  store ptr %270, ptr %262, align 8
  %271 = getelementptr inbounds ptr, ptr %262, i64 1
  %272 = or i64 %263, 1
  %273 = load ptr, ptr %256, align 8, !tbaa !24
  %274 = add nsw i64 %272, %162
  %275 = getelementptr inbounds ptr, ptr %273, i64 %274
  %276 = load ptr, ptr %275, align 8, !tbaa !5
  %277 = icmp eq ptr %276, null
  %278 = select i1 %277, ptr @PL_sv_undef, ptr %276
  store ptr %278, ptr %271, align 8
  %279 = getelementptr inbounds ptr, ptr %262, i64 2
  %280 = add nuw nsw i64 %263, 2
  %281 = add i64 %264, 2
  %282 = icmp eq i64 %281, %260
  br i1 %282, label %298, label %261, !llvm.loop !151

283:                                              ; preds = %253, %294
  %284 = phi ptr [ %295, %294 ], [ %239, %253 ]
  %285 = phi i64 [ %296, %294 ], [ 0, %253 ]
  %286 = load ptr, ptr %254, align 8, !tbaa !24
  %287 = add nsw i64 %285, %162
  %288 = getelementptr inbounds ptr, ptr %286, i64 %287
  %289 = load ptr, ptr %288, align 8, !tbaa !5
  store ptr %289, ptr %284, align 8, !tbaa !5
  %290 = icmp eq ptr %289, null
  br i1 %290, label %293, label %291

291:                                              ; preds = %283
  %292 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %289) #13
  br label %294

293:                                              ; preds = %283
  store ptr @PL_sv_undef, ptr %284, align 8, !tbaa !5
  br label %294

294:                                              ; preds = %291, %293
  %295 = getelementptr inbounds ptr, ptr %284, i64 1
  %296 = add nuw nsw i64 %285, 1
  %297 = icmp eq i64 %296, %175
  br i1 %297, label %309, label %283, !llvm.loop !151

298:                                              ; preds = %261, %255
  %299 = phi ptr [ %239, %255 ], [ %279, %261 ]
  %300 = phi i64 [ 0, %255 ], [ %280, %261 ]
  %301 = icmp eq i64 %257, 0
  br i1 %301, label %309, label %302

302:                                              ; preds = %298
  %303 = load ptr, ptr %256, align 8, !tbaa !24
  %304 = add nsw i64 %300, %162
  %305 = getelementptr inbounds ptr, ptr %303, i64 %304
  %306 = load ptr, ptr %305, align 8, !tbaa !5
  %307 = icmp eq ptr %306, null
  %308 = select i1 %307, ptr @PL_sv_undef, ptr %306
  store ptr %308, ptr %299, align 8
  br label %309

309:                                              ; preds = %294, %302, %298, %249, %247
  %310 = add nsw i64 %175, -1
  %311 = getelementptr inbounds ptr, ptr %239, i64 %310
  br label %344

312:                                              ; preds = %217
  %313 = getelementptr inbounds %struct.av, ptr %45, i64 0, i32 3
  %314 = load ptr, ptr %313, align 8, !tbaa !24
  %315 = add i64 %162, -1
  %316 = add i64 %315, %175
  %317 = getelementptr inbounds ptr, ptr %314, i64 %316
  %318 = load ptr, ptr %317, align 8, !tbaa !5
  store ptr %318, ptr %207, align 8, !tbaa !5
  %319 = load i32, ptr %46, align 4, !tbaa !74
  %320 = and i32 %319, 1073741824
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %344, label %322

322:                                              ; preds = %312
  %323 = tail call ptr @Perl_sv_2mortal(ptr noundef %318) #13
  %324 = icmp sgt i64 %175, 1
  br i1 %324, label %325, label %344

325:                                              ; preds = %322
  %326 = load ptr, ptr %313, align 8, !tbaa !24
  %327 = getelementptr inbounds ptr, ptr %326, i64 %162
  br label %328

328:                                              ; preds = %325, %342
  %329 = phi ptr [ %332, %342 ], [ %327, %325 ]
  %330 = phi i64 [ %331, %342 ], [ %175, %325 ]
  %331 = add nsw i64 %330, -1
  %332 = getelementptr inbounds ptr, ptr %329, i64 1
  %333 = load ptr, ptr %329, align 8, !tbaa !5
  %334 = icmp eq ptr %333, null
  br i1 %334, label %342, label %335

335:                                              ; preds = %328
  %336 = getelementptr inbounds %struct.sv, ptr %333, i64 0, i32 1
  %337 = load i32, ptr %336, align 8, !tbaa !44
  %338 = icmp ugt i32 %337, 1
  br i1 %338, label %339, label %341

339:                                              ; preds = %335
  %340 = add i32 %337, -1
  store i32 %340, ptr %336, align 8, !tbaa !44
  br label %342

341:                                              ; preds = %335
  tail call void @Perl_sv_free2(ptr noundef nonnull %333, i32 noundef %337) #13
  br label %342

342:                                              ; preds = %328, %339, %341
  %343 = icmp ugt i64 %330, 2
  br i1 %343, label %328, label %344, !llvm.loop !152

344:                                              ; preds = %342, %322, %312, %309
  %345 = phi ptr [ %311, %309 ], [ %207, %312 ], [ %207, %322 ], [ %207, %342 ]
  %346 = load ptr, ptr %45, align 8, !tbaa !18
  %347 = getelementptr inbounds %struct.xpvav, ptr %346, i64 0, i32 2
  %348 = load i64, ptr %347, align 8, !tbaa !20
  %349 = add nsw i64 %348, %180
  store i64 %349, ptr %347, align 8, !tbaa !20
  %350 = icmp slt i64 %162, %174
  br i1 %350, label %351, label %436

351:                                              ; preds = %344
  %352 = sub i64 0, %180
  %353 = icmp sgt i64 %162, 0
  br i1 %353, label %354, label %428

354:                                              ; preds = %351
  %355 = getelementptr inbounds %struct.av, ptr %45, i64 0, i32 3
  %356 = load ptr, ptr %355, align 8, !tbaa !24
  %357 = ptrtoint ptr %356 to i64
  %358 = add i64 %162, -1
  %359 = getelementptr ptr, ptr %356, i64 %358
  %360 = getelementptr ptr, ptr %359, i64 %352
  %361 = icmp ult i64 %162, 56
  br i1 %361, label %413, label %362

362:                                              ; preds = %354
  %363 = mul i64 %358, -8
  %364 = getelementptr i8, ptr %360, i64 %363
  %365 = icmp ugt ptr %364, %360
  %366 = mul i64 %358, -8
  %367 = icmp ugt i64 %358, 2305843009213693951
  %368 = getelementptr i8, ptr %359, i64 %366
  %369 = icmp ugt ptr %368, %359
  %370 = or i1 %369, %367
  %371 = or i1 %365, %370
  br i1 %371, label %413, label %372

372:                                              ; preds = %362
  %373 = shl i64 %162, 3
  %374 = add i64 %373, %357
  %375 = add i64 %374, -8
  %376 = add i64 %162, %175
  %377 = shl i64 %376, 3
  %378 = add i64 %377, %357
  %379 = add i64 %378, -8
  %380 = and i64 %178, -8
  %381 = sub i64 %380, %379
  %382 = add i64 %381, %375
  %383 = icmp ult i64 %382, 128
  br i1 %383, label %413, label %384

384:                                              ; preds = %372
  %385 = and i64 %162, -16
  %386 = mul i64 %385, -8
  %387 = getelementptr i8, ptr %359, i64 %386
  %388 = mul i64 %385, -8
  %389 = getelementptr i8, ptr %360, i64 %388
  %390 = and i64 %162, 15
  br label %391

391:                                              ; preds = %391, %384
  %392 = phi i64 [ 0, %384 ], [ %409, %391 ]
  %393 = mul i64 %392, -8
  %394 = getelementptr i8, ptr %359, i64 %393
  %395 = mul i64 %392, -8
  %396 = getelementptr i8, ptr %360, i64 %395
  %397 = getelementptr ptr, ptr %394, i64 -3
  %398 = load <4 x ptr>, ptr %397, align 8, !tbaa !5
  %399 = getelementptr ptr, ptr %394, i64 -7
  %400 = load <4 x ptr>, ptr %399, align 8, !tbaa !5
  %401 = getelementptr ptr, ptr %394, i64 -11
  %402 = load <4 x ptr>, ptr %401, align 8, !tbaa !5
  %403 = getelementptr ptr, ptr %394, i64 -15
  %404 = load <4 x ptr>, ptr %403, align 8, !tbaa !5
  %405 = getelementptr ptr, ptr %396, i64 -3
  store <4 x ptr> %398, ptr %405, align 8, !tbaa !5
  %406 = getelementptr ptr, ptr %396, i64 -7
  store <4 x ptr> %400, ptr %406, align 8, !tbaa !5
  %407 = getelementptr ptr, ptr %396, i64 -11
  store <4 x ptr> %402, ptr %407, align 8, !tbaa !5
  %408 = getelementptr ptr, ptr %396, i64 -15
  store <4 x ptr> %404, ptr %408, align 8, !tbaa !5
  %409 = add nuw i64 %392, 16
  %410 = icmp eq i64 %409, %385
  br i1 %410, label %411, label %391, !llvm.loop !153

411:                                              ; preds = %391
  %412 = icmp eq i64 %162, %385
  br i1 %412, label %426, label %413

413:                                              ; preds = %372, %362, %354, %411
  %414 = phi ptr [ %359, %372 ], [ %359, %362 ], [ %359, %354 ], [ %387, %411 ]
  %415 = phi ptr [ %360, %372 ], [ %360, %362 ], [ %360, %354 ], [ %389, %411 ]
  %416 = phi i64 [ %162, %372 ], [ %162, %362 ], [ %162, %354 ], [ %390, %411 ]
  br label %417

417:                                              ; preds = %413, %417
  %418 = phi ptr [ %421, %417 ], [ %414, %413 ]
  %419 = phi ptr [ %423, %417 ], [ %415, %413 ]
  %420 = phi i64 [ %424, %417 ], [ %416, %413 ]
  %421 = getelementptr inbounds ptr, ptr %418, i64 -1
  %422 = load ptr, ptr %418, align 8, !tbaa !5
  %423 = getelementptr inbounds ptr, ptr %419, i64 -1
  store ptr %422, ptr %419, align 8, !tbaa !5
  %424 = add nsw i64 %420, -1
  %425 = icmp ugt i64 %420, 1
  br i1 %425, label %417, label %426, !llvm.loop !154

426:                                              ; preds = %417, %411
  %427 = load ptr, ptr %45, align 8, !tbaa !18
  br label %428

428:                                              ; preds = %351, %426
  %429 = phi ptr [ %427, %426 ], [ %346, %351 ]
  %430 = getelementptr inbounds %struct.av, ptr %45, i64 0, i32 3
  %431 = load ptr, ptr %430, align 8, !tbaa !24
  %432 = getelementptr inbounds ptr, ptr %431, i64 %352
  store ptr %432, ptr %430, align 8, !tbaa !24
  %433 = getelementptr inbounds %struct.xpvav, ptr %429, i64 0, i32 3
  %434 = load i64, ptr %433, align 8, !tbaa !134
  %435 = add nsw i64 %434, %180
  store i64 %435, ptr %433, align 8, !tbaa !134
  br label %454

436:                                              ; preds = %344
  %437 = icmp eq i64 %174, 0
  br i1 %437, label %448, label %438

438:                                              ; preds = %436
  %439 = getelementptr inbounds %struct.av, ptr %45, i64 0, i32 3
  %440 = load ptr, ptr %439, align 8, !tbaa !24
  %441 = getelementptr inbounds ptr, ptr %440, i64 %162
  %442 = getelementptr inbounds ptr, ptr %441, i64 %175
  %443 = getelementptr inbounds ptr, ptr %441, i64 %179
  %444 = shl i64 %174, 3
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %443, ptr align 1 %442, i64 %444, i1 false)
  %445 = load ptr, ptr %45, align 8, !tbaa !18
  %446 = getelementptr inbounds %struct.xpvav, ptr %445, i64 0, i32 2
  %447 = load i64, ptr %446, align 8, !tbaa !20
  br label %448

448:                                              ; preds = %438, %436
  %449 = phi i64 [ %447, %438 ], [ %349, %436 ]
  %450 = getelementptr inbounds %struct.av, ptr %45, i64 0, i32 3
  %451 = load ptr, ptr %450, align 8, !tbaa !24
  %452 = add nsw i64 %449, 1
  %453 = getelementptr inbounds ptr, ptr %451, i64 %452
  br label %454

454:                                              ; preds = %448, %428
  %455 = phi ptr [ %431, %428 ], [ %453, %448 ]
  %456 = shl i64 %175, 3
  %457 = and i64 %178, -8
  %458 = sub i64 %456, %457
  tail call void @llvm.memset.p0.i64(ptr align 8 %455, i8 0, i64 %458, i1 false), !tbaa !5
  br i1 %181, label %804, label %459

459:                                              ; preds = %454
  %460 = getelementptr inbounds %struct.av, ptr %45, i64 0, i32 3
  %461 = load ptr, ptr %460, align 8, !tbaa !24
  %462 = getelementptr inbounds ptr, ptr %461, i64 %162
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %462, ptr align 1 %204, i64 %178, i1 false)
  br label %801

463:                                              ; preds = %198, %196
  %464 = icmp eq i64 %175, 0
  br i1 %464, label %471, label %465

465:                                              ; preds = %463
  %466 = shl i64 %175, 3
  %467 = tail call ptr @Perl_safesysmalloc(i64 noundef %466) #13
  %468 = getelementptr inbounds %struct.av, ptr %45, i64 0, i32 3
  %469 = load ptr, ptr %468, align 8, !tbaa !24
  %470 = getelementptr inbounds ptr, ptr %469, i64 %162
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %467, ptr align 1 %470, i64 %466, i1 false)
  br label %471

471:                                              ; preds = %465, %463
  %472 = phi ptr [ %467, %465 ], [ null, %463 ]
  %473 = ptrtoint ptr %472 to i64
  %474 = icmp eq i64 %179, %175
  br i1 %474, label %630, label %475

475:                                              ; preds = %471
  %476 = icmp slt i64 %162, %174
  %477 = load ptr, ptr %45, align 8, !tbaa !18
  br i1 %476, label %478, label %505

478:                                              ; preds = %475
  %479 = getelementptr inbounds %struct.av, ptr %45, i64 0, i32 3
  %480 = load ptr, ptr %479, align 8, !tbaa !24
  %481 = getelementptr inbounds %struct.xpvav, ptr %477, i64 0, i32 4
  %482 = load ptr, ptr %481, align 8, !tbaa !149
  %483 = ptrtoint ptr %480 to i64
  %484 = ptrtoint ptr %482 to i64
  %485 = sub i64 %483, %484
  %486 = ashr exact i64 %485, 3
  %487 = icmp sgt i64 %180, %486
  br i1 %487, label %505, label %488

488:                                              ; preds = %478
  %489 = icmp eq i64 %162, 0
  %490 = sub nsw i64 0, %180
  br i1 %489, label %496, label %491

491:                                              ; preds = %488
  %492 = getelementptr inbounds ptr, ptr %480, i64 %490
  %493 = shl i64 %162, 3
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %492, ptr align 1 %480, i64 %493, i1 false)
  %494 = load ptr, ptr %479, align 8, !tbaa !24
  %495 = load ptr, ptr %45, align 8, !tbaa !18
  br label %496

496:                                              ; preds = %488, %491
  %497 = phi ptr [ %495, %491 ], [ %477, %488 ]
  %498 = phi ptr [ %494, %491 ], [ %480, %488 ]
  %499 = getelementptr inbounds ptr, ptr %498, i64 %490
  store ptr %499, ptr %479, align 8, !tbaa !24
  %500 = getelementptr inbounds %struct.xpvav, ptr %497, i64 0, i32 2
  %501 = load <2 x i64>, ptr %500, align 8, !tbaa !71
  %502 = insertelement <2 x i64> poison, i64 %180, i64 0
  %503 = shufflevector <2 x i64> %502, <2 x i64> poison, <2 x i32> zeroinitializer
  %504 = add nsw <2 x i64> %501, %503
  store <2 x i64> %504, ptr %500, align 8, !tbaa !71
  br label %630

505:                                              ; preds = %478, %475
  %506 = getelementptr inbounds %struct.xpvav, ptr %477, i64 0, i32 2
  %507 = load i64, ptr %506, align 8, !tbaa !20
  %508 = add i64 %507, %180
  %509 = getelementptr inbounds %struct.xpvav, ptr %477, i64 0, i32 3
  %510 = load i64, ptr %509, align 8, !tbaa !134
  %511 = icmp slt i64 %508, %510
  br i1 %511, label %517, label %512

512:                                              ; preds = %505
  tail call void @Perl_av_extend(ptr noundef nonnull %45, i64 noundef %508) #13
  %513 = load ptr, ptr %45, align 8, !tbaa !18
  %514 = getelementptr inbounds %struct.xpvav, ptr %513, i64 0, i32 2
  %515 = load i64, ptr %514, align 8, !tbaa !20
  %516 = add i64 %515, %180
  br label %517

517:                                              ; preds = %512, %505
  %518 = phi i64 [ %516, %512 ], [ %508, %505 ]
  %519 = phi i64 [ %515, %512 ], [ %507, %505 ]
  %520 = phi ptr [ %513, %512 ], [ %477, %505 ]
  %521 = getelementptr inbounds %struct.xpvav, ptr %520, i64 0, i32 2
  store i64 %518, ptr %521, align 8, !tbaa !20
  %522 = icmp eq i64 %174, 0
  br i1 %522, label %630, label %523

523:                                              ; preds = %517
  %524 = getelementptr inbounds %struct.av, ptr %45, i64 0, i32 3
  %525 = load ptr, ptr %524, align 8, !tbaa !24
  %526 = ptrtoint ptr %525 to i64
  %527 = getelementptr ptr, ptr %525, i64 %518
  %528 = getelementptr ptr, ptr %525, i64 %519
  %529 = icmp ult i64 %174, 48
  br i1 %529, label %577, label %530

530:                                              ; preds = %523
  %531 = add i64 %174, -1
  %532 = mul i64 %531, -8
  %533 = getelementptr i8, ptr %527, i64 %532
  %534 = icmp ugt ptr %533, %527
  %535 = mul i64 %531, -8
  %536 = icmp ugt i64 %531, 2305843009213693951
  %537 = getelementptr i8, ptr %528, i64 %535
  %538 = icmp ugt ptr %537, %528
  %539 = or i1 %538, %536
  %540 = or i1 %534, %539
  br i1 %540, label %577, label %541

541:                                              ; preds = %530
  %542 = shl i64 %519, 3
  %543 = add i64 %542, %526
  %544 = shl i64 %518, 3
  %545 = add i64 %544, %526
  %546 = sub i64 %543, %545
  %547 = icmp ult i64 %546, 128
  br i1 %547, label %577, label %548

548:                                              ; preds = %541
  %549 = and i64 %174, -16
  %550 = mul i64 %549, -8
  %551 = getelementptr i8, ptr %528, i64 %550
  %552 = mul i64 %549, -8
  %553 = getelementptr i8, ptr %527, i64 %552
  %554 = and i64 %174, 15
  br label %555

555:                                              ; preds = %555, %548
  %556 = phi i64 [ 0, %548 ], [ %573, %555 ]
  %557 = mul i64 %556, -8
  %558 = getelementptr i8, ptr %528, i64 %557
  %559 = mul i64 %556, -8
  %560 = getelementptr i8, ptr %527, i64 %559
  %561 = getelementptr ptr, ptr %558, i64 -3
  %562 = load <4 x ptr>, ptr %561, align 8, !tbaa !5
  %563 = getelementptr ptr, ptr %558, i64 -7
  %564 = load <4 x ptr>, ptr %563, align 8, !tbaa !5
  %565 = getelementptr ptr, ptr %558, i64 -11
  %566 = load <4 x ptr>, ptr %565, align 8, !tbaa !5
  %567 = getelementptr ptr, ptr %558, i64 -15
  %568 = load <4 x ptr>, ptr %567, align 8, !tbaa !5
  %569 = getelementptr ptr, ptr %560, i64 -3
  store <4 x ptr> %562, ptr %569, align 8, !tbaa !5
  %570 = getelementptr ptr, ptr %560, i64 -7
  store <4 x ptr> %564, ptr %570, align 8, !tbaa !5
  %571 = getelementptr ptr, ptr %560, i64 -11
  store <4 x ptr> %566, ptr %571, align 8, !tbaa !5
  %572 = getelementptr ptr, ptr %560, i64 -15
  store <4 x ptr> %568, ptr %572, align 8, !tbaa !5
  %573 = add nuw i64 %556, 16
  %574 = icmp eq i64 %573, %549
  br i1 %574, label %575, label %555, !llvm.loop !155

575:                                              ; preds = %555
  %576 = icmp eq i64 %174, %549
  br i1 %576, label %630, label %577

577:                                              ; preds = %541, %530, %523, %575
  %578 = phi ptr [ %528, %541 ], [ %528, %530 ], [ %528, %523 ], [ %551, %575 ]
  %579 = phi ptr [ %527, %541 ], [ %527, %530 ], [ %527, %523 ], [ %553, %575 ]
  %580 = phi i64 [ %174, %541 ], [ %174, %530 ], [ %174, %523 ], [ %554, %575 ]
  %581 = add nsw i64 %580, -1
  %582 = and i64 %580, 7
  %583 = icmp eq i64 %582, 0
  br i1 %583, label %595, label %584

584:                                              ; preds = %577, %584
  %585 = phi ptr [ %589, %584 ], [ %578, %577 ]
  %586 = phi ptr [ %591, %584 ], [ %579, %577 ]
  %587 = phi i64 [ %592, %584 ], [ %580, %577 ]
  %588 = phi i64 [ %593, %584 ], [ 0, %577 ]
  %589 = getelementptr inbounds ptr, ptr %585, i64 -1
  %590 = load ptr, ptr %585, align 8, !tbaa !5
  %591 = getelementptr inbounds ptr, ptr %586, i64 -1
  store ptr %590, ptr %586, align 8, !tbaa !5
  %592 = add nsw i64 %587, -1
  %593 = add i64 %588, 1
  %594 = icmp eq i64 %593, %582
  br i1 %594, label %595, label %584, !llvm.loop !156

595:                                              ; preds = %584, %577
  %596 = phi ptr [ %578, %577 ], [ %589, %584 ]
  %597 = phi ptr [ %579, %577 ], [ %591, %584 ]
  %598 = phi i64 [ %580, %577 ], [ %592, %584 ]
  %599 = icmp ult i64 %581, 7
  br i1 %599, label %630, label %600

600:                                              ; preds = %595, %600
  %601 = phi ptr [ %625, %600 ], [ %596, %595 ]
  %602 = phi ptr [ %627, %600 ], [ %597, %595 ]
  %603 = phi i64 [ %628, %600 ], [ %598, %595 ]
  %604 = getelementptr inbounds ptr, ptr %601, i64 -1
  %605 = load ptr, ptr %601, align 8, !tbaa !5
  %606 = getelementptr inbounds ptr, ptr %602, i64 -1
  store ptr %605, ptr %602, align 8, !tbaa !5
  %607 = getelementptr inbounds ptr, ptr %601, i64 -2
  %608 = load ptr, ptr %604, align 8, !tbaa !5
  %609 = getelementptr inbounds ptr, ptr %602, i64 -2
  store ptr %608, ptr %606, align 8, !tbaa !5
  %610 = getelementptr inbounds ptr, ptr %601, i64 -3
  %611 = load ptr, ptr %607, align 8, !tbaa !5
  %612 = getelementptr inbounds ptr, ptr %602, i64 -3
  store ptr %611, ptr %609, align 8, !tbaa !5
  %613 = getelementptr inbounds ptr, ptr %601, i64 -4
  %614 = load ptr, ptr %610, align 8, !tbaa !5
  %615 = getelementptr inbounds ptr, ptr %602, i64 -4
  store ptr %614, ptr %612, align 8, !tbaa !5
  %616 = getelementptr inbounds ptr, ptr %601, i64 -5
  %617 = load ptr, ptr %613, align 8, !tbaa !5
  %618 = getelementptr inbounds ptr, ptr %602, i64 -5
  store ptr %617, ptr %615, align 8, !tbaa !5
  %619 = getelementptr inbounds ptr, ptr %601, i64 -6
  %620 = load ptr, ptr %616, align 8, !tbaa !5
  %621 = getelementptr inbounds ptr, ptr %602, i64 -6
  store ptr %620, ptr %618, align 8, !tbaa !5
  %622 = getelementptr inbounds ptr, ptr %601, i64 -7
  %623 = load ptr, ptr %619, align 8, !tbaa !5
  %624 = getelementptr inbounds ptr, ptr %602, i64 -7
  store ptr %623, ptr %621, align 8, !tbaa !5
  %625 = getelementptr inbounds ptr, ptr %601, i64 -8
  %626 = load ptr, ptr %622, align 8, !tbaa !5
  %627 = getelementptr inbounds ptr, ptr %602, i64 -8
  store ptr %626, ptr %624, align 8, !tbaa !5
  %628 = add nsw i64 %603, -8
  %629 = icmp eq i64 %628, 0
  br i1 %629, label %630, label %600, !llvm.loop !157

630:                                              ; preds = %595, %600, %575, %496, %517, %471
  br i1 %181, label %635, label %631

631:                                              ; preds = %630
  %632 = getelementptr inbounds %struct.av, ptr %45, i64 0, i32 3
  %633 = load ptr, ptr %632, align 8, !tbaa !24
  %634 = getelementptr inbounds ptr, ptr %633, i64 %162
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %634, ptr nonnull align 1 %147, i64 %178, i1 false)
  br label %635

635:                                              ; preds = %631, %630
  %636 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %637 = ptrtoint ptr %636 to i64
  %638 = getelementptr inbounds ptr, ptr %636, i64 %6
  %639 = getelementptr inbounds ptr, ptr %638, i64 1
  %640 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %641 = getelementptr inbounds %struct.op, ptr %640, i64 0, i32 5
  %642 = load i8, ptr %641, align 2, !tbaa !9
  %643 = and i8 %642, 3
  %644 = icmp eq i8 %643, 0
  br i1 %644, label %647, label %645

645:                                              ; preds = %635
  %646 = zext i8 %643 to i32
  br label %649

647:                                              ; preds = %635
  %648 = tail call i32 @Perl_block_gimme() #13
  br label %649

649:                                              ; preds = %647, %645
  %650 = phi i32 [ %646, %645 ], [ %648, %647 ]
  %651 = icmp eq i32 %650, 3
  br i1 %651, label %652, label %774

652:                                              ; preds = %649
  br i1 %464, label %772, label %653

653:                                              ; preds = %652
  %654 = load i32, ptr %46, align 4, !tbaa !74
  %655 = and i32 %654, 1073741824
  %656 = icmp eq i32 %655, 0
  br i1 %656, label %666, label %657

657:                                              ; preds = %653
  %658 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !71
  %659 = add nsw i64 %658, %175
  %660 = load i64, ptr @PL_tmps_max, align 8, !tbaa !71
  %661 = icmp slt i64 %659, %660
  br i1 %661, label %664, label %662

662:                                              ; preds = %657
  %663 = tail call i64 @Perl_tmps_grow_p(i64 noundef %659) #13
  br label %664

664:                                              ; preds = %662, %657
  %665 = icmp sgt i64 %175, 0
  br i1 %665, label %668, label %772

666:                                              ; preds = %653
  %667 = icmp sgt i64 %175, 0
  br i1 %667, label %669, label %772

668:                                              ; preds = %664
  br i1 %656, label %669, label %759

669:                                              ; preds = %666, %668
  %670 = icmp ult i64 %175, 16
  br i1 %670, label %708, label %671

671:                                              ; preds = %669
  %672 = shl nsw i64 %6, 3
  %673 = add i64 %672, %637
  %674 = add i64 %673, 8
  %675 = sub i64 %674, %473
  %676 = icmp ult i64 %675, 128
  br i1 %676, label %708, label %677

677:                                              ; preds = %671
  %678 = and i64 %175, -16
  %679 = shl i64 %678, 3
  %680 = getelementptr i8, ptr %639, i64 %679
  br label %681

681:                                              ; preds = %681, %677
  %682 = phi i64 [ 0, %677 ], [ %704, %681 ]
  %683 = shl i64 %682, 3
  %684 = getelementptr i8, ptr %639, i64 %683
  %685 = getelementptr inbounds ptr, ptr %472, i64 %682
  %686 = load <4 x ptr>, ptr %685, align 8, !tbaa !5
  %687 = getelementptr inbounds ptr, ptr %685, i64 4
  %688 = load <4 x ptr>, ptr %687, align 8, !tbaa !5
  %689 = getelementptr inbounds ptr, ptr %685, i64 8
  %690 = load <4 x ptr>, ptr %689, align 8, !tbaa !5
  %691 = getelementptr inbounds ptr, ptr %685, i64 12
  %692 = load <4 x ptr>, ptr %691, align 8, !tbaa !5
  %693 = icmp eq <4 x ptr> %686, zeroinitializer
  %694 = icmp eq <4 x ptr> %688, zeroinitializer
  %695 = icmp eq <4 x ptr> %690, zeroinitializer
  %696 = icmp eq <4 x ptr> %692, zeroinitializer
  %697 = select <4 x i1> %693, <4 x ptr> <ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef>, <4 x ptr> %686
  %698 = select <4 x i1> %694, <4 x ptr> <ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef>, <4 x ptr> %688
  %699 = select <4 x i1> %695, <4 x ptr> <ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef>, <4 x ptr> %690
  %700 = select <4 x i1> %696, <4 x ptr> <ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef>, <4 x ptr> %692
  store <4 x ptr> %697, ptr %684, align 8
  %701 = getelementptr ptr, ptr %684, i64 4
  store <4 x ptr> %698, ptr %701, align 8
  %702 = getelementptr ptr, ptr %684, i64 8
  store <4 x ptr> %699, ptr %702, align 8
  %703 = getelementptr ptr, ptr %684, i64 12
  store <4 x ptr> %700, ptr %703, align 8
  %704 = add nuw i64 %682, 16
  %705 = icmp eq i64 %704, %678
  br i1 %705, label %706, label %681, !llvm.loop !158

706:                                              ; preds = %681
  %707 = icmp eq i64 %175, %678
  br i1 %707, label %772, label %708

708:                                              ; preds = %671, %669, %706
  %709 = phi ptr [ %639, %671 ], [ %639, %669 ], [ %680, %706 ]
  %710 = phi i64 [ 0, %671 ], [ 0, %669 ], [ %678, %706 ]
  %711 = xor i64 %710, -1
  %712 = add i64 %175, %711
  %713 = and i64 %175, 3
  %714 = icmp eq i64 %713, 0
  br i1 %714, label %727, label %715

715:                                              ; preds = %708, %715
  %716 = phi ptr [ %723, %715 ], [ %709, %708 ]
  %717 = phi i64 [ %724, %715 ], [ %710, %708 ]
  %718 = phi i64 [ %725, %715 ], [ 0, %708 ]
  %719 = getelementptr inbounds ptr, ptr %472, i64 %717
  %720 = load ptr, ptr %719, align 8, !tbaa !5
  %721 = icmp eq ptr %720, null
  %722 = select i1 %721, ptr @PL_sv_undef, ptr %720
  store ptr %722, ptr %716, align 8
  %723 = getelementptr inbounds ptr, ptr %716, i64 1
  %724 = add nuw nsw i64 %717, 1
  %725 = add i64 %718, 1
  %726 = icmp eq i64 %725, %713
  br i1 %726, label %727, label %715, !llvm.loop !159

727:                                              ; preds = %715, %708
  %728 = phi ptr [ %709, %708 ], [ %723, %715 ]
  %729 = phi i64 [ %710, %708 ], [ %724, %715 ]
  %730 = icmp ult i64 %712, 3
  br i1 %730, label %772, label %731

731:                                              ; preds = %727, %731
  %732 = phi ptr [ %756, %731 ], [ %728, %727 ]
  %733 = phi i64 [ %757, %731 ], [ %729, %727 ]
  %734 = getelementptr inbounds ptr, ptr %472, i64 %733
  %735 = load ptr, ptr %734, align 8, !tbaa !5
  %736 = icmp eq ptr %735, null
  %737 = select i1 %736, ptr @PL_sv_undef, ptr %735
  store ptr %737, ptr %732, align 8
  %738 = getelementptr inbounds ptr, ptr %732, i64 1
  %739 = add nuw nsw i64 %733, 1
  %740 = getelementptr inbounds ptr, ptr %472, i64 %739
  %741 = load ptr, ptr %740, align 8, !tbaa !5
  %742 = icmp eq ptr %741, null
  %743 = select i1 %742, ptr @PL_sv_undef, ptr %741
  store ptr %743, ptr %738, align 8
  %744 = getelementptr inbounds ptr, ptr %732, i64 2
  %745 = add nuw nsw i64 %733, 2
  %746 = getelementptr inbounds ptr, ptr %472, i64 %745
  %747 = load ptr, ptr %746, align 8, !tbaa !5
  %748 = icmp eq ptr %747, null
  %749 = select i1 %748, ptr @PL_sv_undef, ptr %747
  store ptr %749, ptr %744, align 8
  %750 = getelementptr inbounds ptr, ptr %732, i64 3
  %751 = add nuw nsw i64 %733, 3
  %752 = getelementptr inbounds ptr, ptr %472, i64 %751
  %753 = load ptr, ptr %752, align 8, !tbaa !5
  %754 = icmp eq ptr %753, null
  %755 = select i1 %754, ptr @PL_sv_undef, ptr %753
  store ptr %755, ptr %750, align 8
  %756 = getelementptr inbounds ptr, ptr %732, i64 4
  %757 = add nuw nsw i64 %733, 4
  %758 = icmp eq i64 %757, %175
  br i1 %758, label %772, label %731, !llvm.loop !160

759:                                              ; preds = %668, %768
  %760 = phi ptr [ %769, %768 ], [ %639, %668 ]
  %761 = phi i64 [ %770, %768 ], [ 0, %668 ]
  %762 = getelementptr inbounds ptr, ptr %472, i64 %761
  %763 = load ptr, ptr %762, align 8, !tbaa !5
  store ptr %763, ptr %760, align 8, !tbaa !5
  %764 = icmp eq ptr %763, null
  br i1 %764, label %767, label %765

765:                                              ; preds = %759
  %766 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %763) #13
  br label %768

767:                                              ; preds = %759
  store ptr @PL_sv_undef, ptr %760, align 8, !tbaa !5
  br label %768

768:                                              ; preds = %765, %767
  %769 = getelementptr inbounds ptr, ptr %760, i64 1
  %770 = add nuw nsw i64 %761, 1
  %771 = icmp eq i64 %770, %175
  br i1 %771, label %772, label %759, !llvm.loop !161

772:                                              ; preds = %768, %727, %731, %706, %666, %664, %652
  %773 = getelementptr inbounds ptr, ptr %638, i64 %175
  br label %801

774:                                              ; preds = %649
  %775 = add nsw i64 %175, -1
  br i1 %464, label %800, label %776

776:                                              ; preds = %774
  %777 = getelementptr inbounds ptr, ptr %472, i64 %775
  %778 = load ptr, ptr %777, align 8, !tbaa !5
  store ptr %778, ptr %639, align 8, !tbaa !5
  %779 = load i32, ptr %46, align 4, !tbaa !74
  %780 = and i32 %779, 1073741824
  %781 = icmp eq i32 %780, 0
  br i1 %781, label %801, label %782

782:                                              ; preds = %776
  %783 = tail call ptr @Perl_sv_2mortal(ptr noundef %778) #13
  %784 = icmp sgt i64 %175, 1
  br i1 %784, label %785, label %801

785:                                              ; preds = %782, %798
  %786 = phi i64 [ %787, %798 ], [ %775, %782 ]
  %787 = add nsw i64 %786, -1
  %788 = getelementptr inbounds ptr, ptr %472, i64 %787
  %789 = load ptr, ptr %788, align 8, !tbaa !5
  %790 = icmp eq ptr %789, null
  br i1 %790, label %798, label %791

791:                                              ; preds = %785
  %792 = getelementptr inbounds %struct.sv, ptr %789, i64 0, i32 1
  %793 = load i32, ptr %792, align 8, !tbaa !44
  %794 = icmp ugt i32 %793, 1
  br i1 %794, label %795, label %797

795:                                              ; preds = %791
  %796 = add i32 %793, -1
  store i32 %796, ptr %792, align 8, !tbaa !44
  br label %798

797:                                              ; preds = %791
  tail call void @Perl_sv_free2(ptr noundef nonnull %789, i32 noundef %793) #13
  br label %798

798:                                              ; preds = %785, %795, %797
  %799 = icmp ugt i64 %786, 1
  br i1 %799, label %785, label %801, !llvm.loop !162

800:                                              ; preds = %774
  store ptr @PL_sv_undef, ptr %639, align 8, !tbaa !5
  br label %801

801:                                              ; preds = %798, %772, %776, %800, %782, %459
  %802 = phi ptr [ %204, %459 ], [ %472, %782 ], [ %472, %800 ], [ %472, %776 ], [ %472, %772 ], [ %472, %798 ]
  %803 = phi ptr [ %345, %459 ], [ %639, %782 ], [ %639, %800 ], [ %639, %776 ], [ %773, %772 ], [ %639, %798 ]
  tail call void @Perl_safesysfree(ptr noundef %802) #13
  br label %804

804:                                              ; preds = %801, %454
  %805 = phi ptr [ %345, %454 ], [ %803, %801 ]
  %806 = load i32, ptr %46, align 4, !tbaa !74
  %807 = and i32 %806, 14680064
  %808 = icmp eq i32 %807, 0
  br i1 %808, label %811, label %809

809:                                              ; preds = %804
  %810 = tail call i32 @Perl_mg_set(ptr noundef nonnull %45) #13
  br label %811

811:                                              ; preds = %809, %804
  store ptr %805, ptr @PL_stack_sp, align 8, !tbaa !5
  %812 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %813 = load ptr, ptr %812, align 8, !tbaa !13
  br label %814

814:                                              ; preds = %811, %103, %69
  %815 = phi ptr [ %76, %69 ], [ %104, %103 ], [ %813, %811 ]
  ret ptr %815
}

declare ptr @Perl_tied_method(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, ...) local_unnamed_addr #2

declare ptr @Perl_newSVpv_share(ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_safesysmalloc(i64 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_push() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %4 = getelementptr inbounds i32, ptr %3, i64 -1
  store ptr %4, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %5 = load i32, ptr %3, align 4, !tbaa !57
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds ptr, ptr %2, i64 %6
  %8 = ptrtoint ptr %7 to i64
  %9 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %10 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 3
  %12 = load i64, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds ptr, ptr %9, i64 %12
  %14 = load ptr, ptr %13, align 8, !tbaa !5
  %15 = getelementptr inbounds ptr, ptr %7, i64 1
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  store ptr %16, ptr @PL_Sv, align 8, !tbaa !5
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !57
  %19 = and i32 %18, 255
  %20 = icmp eq i32 %19, 11
  br i1 %20, label %46, label %21

21:                                               ; preds = %0
  %22 = and i32 %18, 2097152
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = tail call i32 @Perl_mg_get(ptr noundef nonnull %16) #13
  %26 = load i32, ptr %17, align 4, !tbaa !74
  br label %27

27:                                               ; preds = %24, %21
  %28 = phi i32 [ %18, %21 ], [ %26, %24 ]
  %29 = and i32 %28, 2048
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %41, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.av, ptr %16, i64 0, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !24
  %34 = getelementptr inbounds %struct.sv, ptr %33, i64 0, i32 2
  %35 = load i32, ptr %34, align 4, !tbaa !16
  %36 = and i32 %35, 255
  %37 = icmp eq i32 %36, 11
  br i1 %37, label %38, label %41

38:                                               ; preds = %31
  %39 = and i32 %35, 1048576
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %38, %31, %27
  %42 = phi ptr [ @.str.80, %31 ], [ @.str.80, %27 ], [ @.str.81, %38 ]
  %43 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull %42) #13
  %44 = getelementptr inbounds %struct.av, ptr %16, i64 0, i32 3
  %45 = load ptr, ptr %44, align 8, !tbaa !24
  br label %46

46:                                               ; preds = %38, %41, %0
  %47 = phi ptr [ %16, %0 ], [ %45, %41 ], [ %33, %38 ]
  %48 = getelementptr inbounds %struct.sv, ptr %47, i64 0, i32 2
  %49 = load i32, ptr %48, align 4, !tbaa !57
  %50 = and i32 %49, 8388608
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %86, label %52

52:                                               ; preds = %46
  %53 = tail call ptr @Perl_mg_find(ptr noundef nonnull %47, i32 noundef 80) #13
  %54 = icmp eq ptr %53, null
  br i1 %54, label %55, label %57

55:                                               ; preds = %52
  %56 = load i32, ptr %48, align 4, !tbaa !74
  br label %86

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.magic, ptr %53, i64 0, i32 6
  %59 = load ptr, ptr %58, align 8, !tbaa !132
  %60 = icmp eq ptr %59, null
  br i1 %60, label %61, label %64

61:                                               ; preds = %57
  %62 = tail call ptr @Perl_newRV(ptr noundef nonnull %47) #13
  %63 = tail call ptr @Perl_sv_2mortal(ptr noundef %62) #13
  br label %64

64:                                               ; preds = %57, %61
  %65 = phi ptr [ %63, %61 ], [ %59, %57 ]
  store ptr %65, ptr %15, align 8, !tbaa !5
  %66 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %67 = getelementptr inbounds i32, ptr %66, i64 1
  store ptr %67, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %68 = load ptr, ptr @PL_markstack_max, align 8, !tbaa !5
  %69 = icmp eq ptr %67, %68
  br i1 %69, label %70, label %72

70:                                               ; preds = %64
  %71 = tail call ptr @Perl_markstack_grow() #13
  br label %72

72:                                               ; preds = %64, %70
  %73 = phi ptr [ %71, %70 ], [ %67, %64 ]
  %74 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %75 = ptrtoint ptr %74 to i64
  %76 = sub i64 %8, %75
  %77 = lshr exact i64 %76, 3
  %78 = trunc i64 %77 to i32
  store i32 %78, ptr %73, align 4, !tbaa !57
  store ptr %1, ptr @PL_stack_sp, align 8, !tbaa !5
  tail call void @Perl_push_scope() #13
  %79 = load ptr, ptr getelementptr inbounds ([35 x ptr], ptr @PL_sv_consts, i64 0, i64 9), align 8, !tbaa !5
  %80 = icmp eq ptr %79, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %72
  %82 = tail call ptr @Perl_newSVpv_share(ptr noundef nonnull @.str.55, i32 noundef 0) #13
  store ptr %82, ptr getelementptr inbounds ([35 x ptr], ptr @PL_sv_consts, i64 0, i64 9), align 8, !tbaa !5
  br label %83

83:                                               ; preds = %72, %81
  %84 = phi ptr [ %82, %81 ], [ %79, %72 ]
  %85 = tail call i32 @Perl_call_sv(ptr noundef %84, i32 noundef 4102) #13
  tail call void @Perl_pop_scope() #13
  br label %127

86:                                               ; preds = %55, %46
  %87 = phi i32 [ %56, %55 ], [ %49, %46 ]
  %88 = and i32 %87, 134283264
  %89 = icmp ne i32 %88, 0
  %90 = icmp ult ptr %15, %1
  %91 = select i1 %89, i1 %90, i1 false
  br i1 %91, label %92, label %93

92:                                               ; preds = %86
  tail call void @Perl_croak_no_modify() #13
  br label %93

93:                                               ; preds = %92, %86
  store i16 256, ptr @PL_delaymagic, align 2, !tbaa !163
  %94 = getelementptr inbounds ptr, ptr %7, i64 2
  %95 = icmp ugt ptr %94, %1
  br i1 %95, label %126, label %96

96:                                               ; preds = %93, %112
  %97 = phi ptr [ %118, %112 ], [ %94, %93 ]
  %98 = load ptr, ptr %97, align 8, !tbaa !5
  %99 = icmp eq ptr %98, null
  br i1 %99, label %107, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.sv, ptr %98, i64 0, i32 2
  %102 = load i32, ptr %101, align 4, !tbaa !16
  %103 = and i32 %102, 2097152
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %100
  %106 = tail call i32 @Perl_mg_get(ptr noundef nonnull %98) #13
  br label %107

107:                                              ; preds = %105, %100, %96
  %108 = tail call ptr @Perl_newSV(i64 noundef 0) #13
  %109 = load ptr, ptr %97, align 8, !tbaa !5
  %110 = icmp eq ptr %109, null
  br i1 %110, label %112, label %111

111:                                              ; preds = %107
  tail call void @Perl_sv_setsv_flags(ptr noundef %108, ptr noundef nonnull %109, i32 noundef 1536) #13
  br label %112

112:                                              ; preds = %111, %107
  %113 = load ptr, ptr %47, align 8, !tbaa !18
  %114 = getelementptr inbounds %struct.xpvav, ptr %113, i64 0, i32 2
  %115 = load i64, ptr %114, align 8, !tbaa !20
  %116 = add nsw i64 %115, 1
  %117 = tail call ptr @Perl_av_store(ptr noundef nonnull %47, i64 noundef %116, ptr noundef %108) #13
  %118 = getelementptr inbounds ptr, ptr %97, i64 1
  %119 = icmp ugt ptr %118, %1
  br i1 %119, label %120, label %96, !llvm.loop !164

120:                                              ; preds = %112
  %121 = load i16, ptr @PL_delaymagic, align 2, !tbaa !163
  %122 = and i16 %121, 4
  %123 = icmp eq i16 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %120
  %125 = tail call i32 @Perl_mg_set(ptr noundef nonnull %47) #13
  br label %126

126:                                              ; preds = %93, %124, %120
  store i16 0, ptr @PL_delaymagic, align 2, !tbaa !163
  br label %127

127:                                              ; preds = %126, %83
  %128 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %129 = getelementptr inbounds ptr, ptr %128, i64 %6
  %130 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %131 = getelementptr inbounds %struct.op, ptr %130, i64 0, i32 5
  %132 = load i8, ptr %131, align 2, !tbaa !9
  %133 = and i8 %132, 3
  %134 = icmp eq i8 %133, 1
  br i1 %134, label %158, label %135

135:                                              ; preds = %127
  %136 = load i32, ptr %48, align 4, !tbaa !16
  %137 = and i32 %136, 8388608
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %142, label %139

139:                                              ; preds = %135
  %140 = tail call i32 @Perl_mg_size(ptr noundef nonnull %47) #13
  %141 = sext i32 %140 to i64
  br label %146

142:                                              ; preds = %135
  %143 = load ptr, ptr %47, align 8, !tbaa !18
  %144 = getelementptr inbounds %struct.xpvav, ptr %143, i64 0, i32 2
  %145 = load i64, ptr %144, align 8, !tbaa !20
  br label %146

146:                                              ; preds = %142, %139
  %147 = phi i64 [ %141, %139 ], [ %145, %142 ]
  %148 = add nsw i64 %147, 1
  tail call void @Perl_sv_setiv(ptr noundef %14, i64 noundef %148) #13
  %149 = getelementptr inbounds %struct.sv, ptr %14, i64 0, i32 2
  %150 = load i32, ptr %149, align 4, !tbaa !16
  %151 = and i32 %150, 4194304
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %155, label %153

153:                                              ; preds = %146
  %154 = tail call i32 @Perl_mg_set(ptr noundef nonnull %14) #13
  br label %155

155:                                              ; preds = %146, %153
  %156 = getelementptr inbounds ptr, ptr %129, i64 1
  store ptr %14, ptr %156, align 8, !tbaa !5
  %157 = load ptr, ptr @PL_op, align 8, !tbaa !5
  br label %158

158:                                              ; preds = %155, %127
  %159 = phi ptr [ %157, %155 ], [ %130, %127 ]
  %160 = phi ptr [ %156, %155 ], [ %129, %127 ]
  store ptr %160, ptr @PL_stack_sp, align 8, !tbaa !5
  %161 = load ptr, ptr %159, align 8, !tbaa !13
  ret ptr %161
}

declare ptr @Perl_markstack_grow() local_unnamed_addr #2

declare void @Perl_push_scope() local_unnamed_addr #2

declare i32 @Perl_call_sv(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_pop_scope() local_unnamed_addr #2

declare ptr @Perl_av_store(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_shift() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !9
  %5 = icmp sgt i8 %4, -1
  br i1 %5, label %12, label %6

6:                                                ; preds = %0
  %7 = load ptr, ptr @PL_defgv, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.gv, ptr %7, i64 0, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !24
  %10 = getelementptr inbounds %struct.gp, ptr %9, i64 0, i32 6
  %11 = load ptr, ptr %10, align 8, !tbaa !73
  br label %47

12:                                               ; preds = %0
  %13 = getelementptr inbounds ptr, ptr %1, i64 -1
  %14 = load ptr, ptr %1, align 8, !tbaa !5
  store ptr %14, ptr @PL_Sv, align 8, !tbaa !5
  %15 = getelementptr inbounds %struct.sv, ptr %14, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !57
  %17 = and i32 %16, 255
  %18 = icmp eq i32 %17, 11
  br i1 %18, label %47, label %19

19:                                               ; preds = %12
  %20 = and i32 %16, 2097152
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = tail call i32 @Perl_mg_get(ptr noundef nonnull %14) #13
  %24 = load i32, ptr %15, align 4, !tbaa !74
  br label %25

25:                                               ; preds = %22, %19
  %26 = phi i32 [ %16, %19 ], [ %24, %22 ]
  %27 = and i32 %26, 2048
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %39, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.av, ptr %14, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8, !tbaa !24
  %32 = getelementptr inbounds %struct.sv, ptr %31, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !16
  %34 = and i32 %33, 255
  %35 = icmp eq i32 %34, 11
  br i1 %35, label %36, label %39

36:                                               ; preds = %29
  %37 = and i32 %33, 1048576
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %36, %29, %25
  %40 = phi ptr [ @.str.80, %29 ], [ @.str.80, %25 ], [ @.str.81, %36 ]
  %41 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull %40) #13
  %42 = getelementptr inbounds %struct.av, ptr %14, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8, !tbaa !24
  br label %44

44:                                               ; preds = %39, %36
  %45 = phi ptr [ %43, %39 ], [ %31, %36 ]
  %46 = load ptr, ptr @PL_op, align 8, !tbaa !5
  br label %47

47:                                               ; preds = %44, %12, %6
  %48 = phi ptr [ %2, %6 ], [ %2, %12 ], [ %46, %44 ]
  %49 = phi ptr [ %1, %6 ], [ %13, %12 ], [ %13, %44 ]
  %50 = phi ptr [ %11, %6 ], [ %14, %12 ], [ %45, %44 ]
  %51 = getelementptr inbounds %struct.op, ptr %48, i64 0, i32 4
  %52 = load i16, ptr %51, align 8
  %53 = and i16 %52, 511
  %54 = icmp eq i16 %53, 165
  br i1 %54, label %55, label %57

55:                                               ; preds = %47
  %56 = tail call ptr @Perl_av_shift(ptr noundef %50) #13
  br label %59

57:                                               ; preds = %47
  %58 = tail call ptr @Perl_av_pop(ptr noundef %50) #13
  br label %59

59:                                               ; preds = %57, %55
  %60 = phi ptr [ %56, %55 ], [ %58, %57 ]
  %61 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %62 = ptrtoint ptr %61 to i64
  %63 = ptrtoint ptr %49 to i64
  %64 = sub i64 %62, %63
  %65 = icmp slt i64 %64, 8
  br i1 %65, label %66, label %68

66:                                               ; preds = %59
  %67 = tail call ptr @Perl_stack_grow(ptr noundef %49, ptr noundef %49, i64 noundef 1) #13
  br label %68

68:                                               ; preds = %59, %66
  %69 = phi ptr [ %67, %66 ], [ %49, %59 ]
  %70 = getelementptr inbounds %struct.av, ptr %50, i64 0, i32 2
  %71 = load i32, ptr %70, align 4, !tbaa !74
  %72 = and i32 %71, 1073741824
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %68
  %75 = tail call ptr @Perl_sv_2mortal(ptr noundef %60) #13
  br label %76

76:                                               ; preds = %74, %68
  %77 = getelementptr inbounds ptr, ptr %69, i64 1
  store ptr %60, ptr %77, align 8, !tbaa !5
  store ptr %77, ptr @PL_stack_sp, align 8, !tbaa !5
  %78 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %79 = load ptr, ptr %78, align 8, !tbaa !13
  ret ptr %79
}

declare ptr @Perl_av_shift(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_av_pop(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_unshift() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %4 = getelementptr inbounds i32, ptr %3, i64 -1
  store ptr %4, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %5 = load i32, ptr %3, align 4, !tbaa !57
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds ptr, ptr %2, i64 %6
  %8 = ptrtoint ptr %7 to i64
  %9 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %10 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 3
  %12 = load i64, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds ptr, ptr %9, i64 %12
  %14 = load ptr, ptr %13, align 8, !tbaa !5
  %15 = getelementptr inbounds ptr, ptr %7, i64 1
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  store ptr %16, ptr @PL_Sv, align 8, !tbaa !5
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !57
  %19 = and i32 %18, 255
  %20 = icmp eq i32 %19, 11
  br i1 %20, label %46, label %21

21:                                               ; preds = %0
  %22 = and i32 %18, 2097152
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = tail call i32 @Perl_mg_get(ptr noundef nonnull %16) #13
  %26 = load i32, ptr %17, align 4, !tbaa !74
  br label %27

27:                                               ; preds = %24, %21
  %28 = phi i32 [ %18, %21 ], [ %26, %24 ]
  %29 = and i32 %28, 2048
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %41, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.av, ptr %16, i64 0, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !24
  %34 = getelementptr inbounds %struct.sv, ptr %33, i64 0, i32 2
  %35 = load i32, ptr %34, align 4, !tbaa !16
  %36 = and i32 %35, 255
  %37 = icmp eq i32 %36, 11
  br i1 %37, label %38, label %41

38:                                               ; preds = %31
  %39 = and i32 %35, 1048576
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %38, %31, %27
  %42 = phi ptr [ @.str.80, %31 ], [ @.str.80, %27 ], [ @.str.81, %38 ]
  %43 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull %42) #13
  %44 = getelementptr inbounds %struct.av, ptr %16, i64 0, i32 3
  %45 = load ptr, ptr %44, align 8, !tbaa !24
  br label %46

46:                                               ; preds = %38, %41, %0
  %47 = phi ptr [ %16, %0 ], [ %45, %41 ], [ %33, %38 ]
  %48 = getelementptr inbounds %struct.sv, ptr %47, i64 0, i32 2
  %49 = load i32, ptr %48, align 4, !tbaa !16
  %50 = and i32 %49, 8388608
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %46
  %53 = tail call ptr @Perl_mg_find(ptr noundef nonnull %47, i32 noundef 80) #13
  %54 = icmp eq ptr %53, null
  br i1 %54, label %84, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %struct.magic, ptr %53, i64 0, i32 6
  %57 = load ptr, ptr %56, align 8, !tbaa !132
  %58 = icmp eq ptr %57, null
  br i1 %58, label %59, label %62

59:                                               ; preds = %55
  %60 = tail call ptr @Perl_newRV(ptr noundef nonnull %47) #13
  %61 = tail call ptr @Perl_sv_2mortal(ptr noundef %60) #13
  br label %62

62:                                               ; preds = %55, %59
  %63 = phi ptr [ %61, %59 ], [ %57, %55 ]
  store ptr %63, ptr %15, align 8, !tbaa !5
  %64 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %65 = getelementptr inbounds i32, ptr %64, i64 1
  store ptr %65, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %66 = load ptr, ptr @PL_markstack_max, align 8, !tbaa !5
  %67 = icmp eq ptr %65, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %62
  %69 = tail call ptr @Perl_markstack_grow() #13
  br label %70

70:                                               ; preds = %62, %68
  %71 = phi ptr [ %69, %68 ], [ %65, %62 ]
  %72 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %73 = ptrtoint ptr %72 to i64
  %74 = sub i64 %8, %73
  %75 = lshr exact i64 %74, 3
  %76 = trunc i64 %75 to i32
  store i32 %76, ptr %71, align 4, !tbaa !57
  store ptr %1, ptr @PL_stack_sp, align 8, !tbaa !5
  tail call void @Perl_push_scope() #13
  %77 = load ptr, ptr getelementptr inbounds ([35 x ptr], ptr @PL_sv_consts, i64 0, i64 12), align 16, !tbaa !5
  %78 = icmp eq ptr %77, null
  br i1 %78, label %79, label %81

79:                                               ; preds = %70
  %80 = tail call ptr @Perl_newSVpv_share(ptr noundef nonnull @.str.56, i32 noundef 0) #13
  store ptr %80, ptr getelementptr inbounds ([35 x ptr], ptr @PL_sv_consts, i64 0, i64 12), align 16, !tbaa !5
  br label %81

81:                                               ; preds = %70, %79
  %82 = phi ptr [ %80, %79 ], [ %77, %70 ]
  %83 = tail call i32 @Perl_call_sv(ptr noundef %82, i32 noundef 4102) #13
  tail call void @Perl_pop_scope() #13
  br label %99

84:                                               ; preds = %46, %52
  %85 = ptrtoint ptr %1 to i64
  %86 = ptrtoint ptr %15 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  tail call void @Perl_av_unshift(ptr noundef nonnull %47, i64 noundef %88) #13
  %89 = icmp ult ptr %15, %1
  br i1 %89, label %90, label %99

90:                                               ; preds = %84, %90
  %91 = phi i64 [ %96, %90 ], [ 0, %84 ]
  %92 = phi ptr [ %93, %90 ], [ %15, %84 ]
  %93 = getelementptr inbounds ptr, ptr %92, i64 1
  %94 = load ptr, ptr %93, align 8, !tbaa !5
  %95 = tail call ptr @Perl_newSVsv(ptr noundef %94) #13
  %96 = add nuw nsw i64 %91, 1
  %97 = tail call ptr @Perl_av_store(ptr noundef %47, i64 noundef %91, ptr noundef %95) #13
  %98 = icmp ult ptr %93, %1
  br i1 %98, label %90, label %99, !llvm.loop !165

99:                                               ; preds = %90, %84, %81
  %100 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %101 = getelementptr inbounds ptr, ptr %100, i64 %6
  %102 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %103 = getelementptr inbounds %struct.op, ptr %102, i64 0, i32 5
  %104 = load i8, ptr %103, align 2, !tbaa !9
  %105 = and i8 %104, 3
  %106 = icmp eq i8 %105, 1
  br i1 %106, label %130, label %107

107:                                              ; preds = %99
  %108 = load i32, ptr %48, align 4, !tbaa !16
  %109 = and i32 %108, 8388608
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %107
  %112 = tail call i32 @Perl_mg_size(ptr noundef nonnull %47) #13
  %113 = sext i32 %112 to i64
  br label %118

114:                                              ; preds = %107
  %115 = load ptr, ptr %47, align 8, !tbaa !18
  %116 = getelementptr inbounds %struct.xpvav, ptr %115, i64 0, i32 2
  %117 = load i64, ptr %116, align 8, !tbaa !20
  br label %118

118:                                              ; preds = %114, %111
  %119 = phi i64 [ %113, %111 ], [ %117, %114 ]
  %120 = add nsw i64 %119, 1
  tail call void @Perl_sv_setiv(ptr noundef %14, i64 noundef %120) #13
  %121 = getelementptr inbounds %struct.sv, ptr %14, i64 0, i32 2
  %122 = load i32, ptr %121, align 4, !tbaa !16
  %123 = and i32 %122, 4194304
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %127, label %125

125:                                              ; preds = %118
  %126 = tail call i32 @Perl_mg_set(ptr noundef nonnull %14) #13
  br label %127

127:                                              ; preds = %118, %125
  %128 = getelementptr inbounds ptr, ptr %101, i64 1
  store ptr %14, ptr %128, align 8, !tbaa !5
  %129 = load ptr, ptr @PL_op, align 8, !tbaa !5
  br label %130

130:                                              ; preds = %127, %99
  %131 = phi ptr [ %129, %127 ], [ %102, %99 ]
  %132 = phi ptr [ %128, %127 ], [ %101, %99 ]
  store ptr %132, ptr @PL_stack_sp, align 8, !tbaa !5
  %133 = load ptr, ptr %131, align 8, !tbaa !13
  ret ptr %133
}

declare void @Perl_av_unshift(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_reverse() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %4 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %5 = getelementptr inbounds i32, ptr %4, i64 -1
  store ptr %5, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %6 = load i32, ptr %4, align 4, !tbaa !57
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds ptr, ptr %3, i64 %7
  %9 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 5
  %11 = load i8, ptr %10, align 2, !tbaa !9
  %12 = and i8 %11, 3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %0
  %15 = zext i8 %12 to i32
  br label %18

16:                                               ; preds = %0
  %17 = tail call i32 @Perl_block_gimme() #13
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i32 [ %15, %14 ], [ %17, %16 ]
  %20 = icmp eq i32 %19, 3
  br i1 %20, label %21, label %133

21:                                               ; preds = %18
  %22 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %23 = getelementptr inbounds %struct.op, ptr %22, i64 0, i32 6
  %24 = load i8, ptr %23, align 1, !tbaa !15
  %25 = and i8 %24, 8
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %21
  %28 = getelementptr inbounds ptr, ptr %8, i64 1
  %29 = icmp ult ptr %28, %2
  br i1 %29, label %125, label %254

30:                                               ; preds = %21
  %31 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %32 = getelementptr inbounds i32, ptr %31, i64 -1
  store ptr %32, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %33 = load ptr, ptr %2, align 8, !tbaa !5
  %34 = getelementptr inbounds %struct.av, ptr %33, i64 0, i32 2
  %35 = load i32, ptr %34, align 4, !tbaa !74
  %36 = and i32 %35, 14680064
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %106, label %38

38:                                               ; preds = %30
  %39 = tail call ptr @Perl_sv_newmortal() #13
  %40 = load i32, ptr %34, align 4, !tbaa !74
  %41 = and i32 %40, 8388608
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %66, label %43

43:                                               ; preds = %38
  %44 = tail call ptr @Perl_mg_find(ptr noundef nonnull %33, i32 noundef 80) #13
  %45 = icmp eq ptr %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.magic, ptr %44, i64 0, i32 6
  %48 = load ptr, ptr %47, align 8, !tbaa !132
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %53

50:                                               ; preds = %46
  %51 = tail call ptr @Perl_newRV(ptr noundef nonnull %33) #13
  %52 = tail call ptr @Perl_sv_2mortal(ptr noundef %51) #13
  br label %53

53:                                               ; preds = %46, %50
  %54 = phi ptr [ %52, %50 ], [ %48, %46 ]
  %55 = getelementptr inbounds %struct.sv, ptr %54, i64 0, i32 3
  %56 = load ptr, ptr %55, align 8, !tbaa !24
  %57 = load ptr, ptr %56, align 8, !tbaa !26
  %58 = load ptr, ptr %57, align 8, !tbaa !38
  %59 = icmp eq ptr %58, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %53
  %61 = tail call ptr @Perl_gv_fetchmethod_autoload(ptr noundef nonnull %58, ptr noundef nonnull @.str.44, i32 noundef 1) #13
  %62 = icmp eq ptr %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %60
  %64 = tail call ptr @Perl_gv_fetchmethod_autoload(ptr noundef nonnull %58, ptr noundef nonnull @.str.45, i32 noundef 1) #13
  %65 = icmp ne ptr %64, null
  br label %66

66:                                               ; preds = %53, %60, %63, %43, %38
  %67 = phi i1 [ true, %43 ], [ true, %38 ], [ false, %60 ], [ false, %53 ], [ %65, %63 ]
  %68 = load i32, ptr %34, align 4, !tbaa !16
  %69 = and i32 %68, 8388608
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %66
  %72 = tail call i32 @Perl_mg_size(ptr noundef nonnull %33) #13
  %73 = sext i32 %72 to i64
  br label %78

74:                                               ; preds = %66
  %75 = load ptr, ptr %33, align 8, !tbaa !18
  %76 = getelementptr inbounds %struct.xpvav, ptr %75, i64 0, i32 2
  %77 = load i64, ptr %76, align 8, !tbaa !20
  br label %78

78:                                               ; preds = %71, %74
  %79 = phi i64 [ %73, %71 ], [ %77, %74 ]
  %80 = icmp sgt i64 %79, 0
  br i1 %80, label %81, label %254

81:                                               ; preds = %78, %102
  %82 = phi i64 [ %103, %102 ], [ 0, %78 ]
  %83 = phi i64 [ %104, %102 ], [ %79, %78 ]
  br i1 %67, label %84, label %97

84:                                               ; preds = %81
  %85 = tail call zeroext i1 @Perl_av_exists(ptr noundef %33, i64 noundef %82) #13
  %86 = tail call zeroext i1 @Perl_av_exists(ptr noundef %33, i64 noundef %83) #13
  br i1 %85, label %92, label %87

87:                                               ; preds = %84
  br i1 %86, label %88, label %102

88:                                               ; preds = %87
  %89 = tail call ptr @Perl_av_delete(ptr noundef %33, i64 noundef %83, i32 noundef 0) #13
  %90 = tail call ptr @Perl_av_fetch(ptr noundef %33, i64 noundef %82, i32 noundef 1) #13
  %91 = load ptr, ptr %90, align 8, !tbaa !5
  tail call void @Perl_sv_setsv_mg(ptr noundef %91, ptr noundef %89) #13
  br label %102

92:                                               ; preds = %84
  br i1 %86, label %97, label %93

93:                                               ; preds = %92
  %94 = tail call ptr @Perl_av_delete(ptr noundef %33, i64 noundef %82, i32 noundef 0) #13
  %95 = tail call ptr @Perl_av_fetch(ptr noundef %33, i64 noundef %83, i32 noundef 1) #13
  %96 = load ptr, ptr %95, align 8, !tbaa !5
  tail call void @Perl_sv_setsv_mg(ptr noundef %96, ptr noundef %94) #13
  br label %102

97:                                               ; preds = %92, %81
  %98 = tail call ptr @Perl_av_fetch(ptr noundef %33, i64 noundef %82, i32 noundef 1) #13
  %99 = load ptr, ptr %98, align 8, !tbaa !5
  %100 = tail call ptr @Perl_av_fetch(ptr noundef %33, i64 noundef %83, i32 noundef 1) #13
  %101 = load ptr, ptr %100, align 8, !tbaa !5
  tail call void @Perl_sv_setsv_flags(ptr noundef %39, ptr noundef %99, i32 noundef 1538) #13
  tail call void @Perl_sv_setsv_mg(ptr noundef %99, ptr noundef %101) #13
  tail call void @Perl_sv_setsv_mg(ptr noundef %101, ptr noundef %39) #13
  br label %102

102:                                              ; preds = %87, %88, %97, %93
  %103 = add nuw nsw i64 %82, 1
  %104 = add nsw i64 %83, -1
  %105 = icmp slt i64 %103, %104
  br i1 %105, label %81, label %254, !llvm.loop !166

106:                                              ; preds = %30
  %107 = getelementptr inbounds %struct.av, ptr %33, i64 0, i32 3
  %108 = load ptr, ptr %107, align 8, !tbaa !24
  %109 = icmp eq ptr %108, null
  br i1 %109, label %254, label %110

110:                                              ; preds = %106
  %111 = load ptr, ptr %33, align 8, !tbaa !18
  %112 = getelementptr inbounds %struct.xpvav, ptr %111, i64 0, i32 2
  %113 = load i64, ptr %112, align 8, !tbaa !20
  %114 = icmp sgt i64 %113, 0
  br i1 %114, label %115, label %254

115:                                              ; preds = %110
  %116 = getelementptr inbounds ptr, ptr %108, i64 %113
  br label %117

117:                                              ; preds = %115, %117
  %118 = phi ptr [ %123, %117 ], [ %116, %115 ]
  %119 = phi ptr [ %122, %117 ], [ %108, %115 ]
  %120 = load ptr, ptr %119, align 8, !tbaa !5
  %121 = load ptr, ptr %118, align 8, !tbaa !5
  %122 = getelementptr inbounds ptr, ptr %119, i64 1
  store ptr %121, ptr %119, align 8, !tbaa !5
  %123 = getelementptr inbounds ptr, ptr %118, i64 -1
  store ptr %120, ptr %118, align 8, !tbaa !5
  %124 = icmp ult ptr %122, %123
  br i1 %124, label %117, label %254, !llvm.loop !167

125:                                              ; preds = %27, %125
  %126 = phi ptr [ %131, %125 ], [ %28, %27 ]
  %127 = phi ptr [ %130, %125 ], [ %2, %27 ]
  %128 = load ptr, ptr %126, align 8, !tbaa !5
  %129 = load ptr, ptr %127, align 8, !tbaa !5
  store ptr %129, ptr %126, align 8, !tbaa !5
  %130 = getelementptr inbounds ptr, ptr %127, i64 -1
  store ptr %128, ptr %127, align 8, !tbaa !5
  %131 = getelementptr inbounds ptr, ptr %126, i64 1
  %132 = icmp ult ptr %131, %130
  br i1 %132, label %125, label %254, !llvm.loop !168

133:                                              ; preds = %18
  %134 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %135 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %136 = getelementptr inbounds %struct.op, ptr %135, i64 0, i32 3
  %137 = load i64, ptr %136, align 8, !tbaa !14
  %138 = getelementptr inbounds ptr, ptr %134, i64 %137
  %139 = load ptr, ptr %138, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  %140 = getelementptr inbounds %struct.sv, ptr %139, i64 0, i32 2
  %141 = load i32, ptr %140, align 4, !tbaa !16
  %142 = and i32 %141, -536870913
  store i32 %142, ptr %140, align 4, !tbaa !16
  %143 = ptrtoint ptr %2 to i64
  %144 = ptrtoint ptr %8 to i64
  %145 = sub i64 %143, %144
  %146 = icmp sgt i64 %145, 8
  br i1 %146, label %147, label %148

147:                                              ; preds = %133
  tail call void @Perl_do_join(ptr noundef nonnull %139, ptr noundef nonnull @PL_sv_no, ptr noundef %8, ptr noundef %2) #13
  br label %156

148:                                              ; preds = %133
  %149 = icmp ugt ptr %2, %8
  br i1 %149, label %150, label %152

150:                                              ; preds = %148
  %151 = load ptr, ptr %2, align 8, !tbaa !5
  br label %154

152:                                              ; preds = %148
  %153 = tail call ptr @Perl_find_rundefsv() #13
  br label %154

154:                                              ; preds = %152, %150
  %155 = phi ptr [ %151, %150 ], [ %153, %152 ]
  tail call void @Perl_sv_setsv_flags(ptr noundef nonnull %139, ptr noundef %155, i32 noundef 1538) #13
  br label %156

156:                                              ; preds = %154, %147
  %157 = load i32, ptr %140, align 4, !tbaa !16
  %158 = and i32 %157, 430018304
  %159 = icmp eq i32 %158, 1024
  br i1 %159, label %160, label %166

160:                                              ; preds = %156
  %161 = load ptr, ptr %139, align 8, !tbaa !26
  %162 = getelementptr inbounds %struct.xpv, ptr %161, i64 0, i32 2
  %163 = load i64, ptr %162, align 8, !tbaa !55
  store i64 %163, ptr %1, align 8, !tbaa !71
  %164 = getelementptr inbounds %struct.sv, ptr %139, i64 0, i32 3
  %165 = load ptr, ptr %164, align 8, !tbaa !24
  br label %170

166:                                              ; preds = %156
  %167 = call ptr @Perl_sv_pvn_force_flags(ptr noundef nonnull %139, ptr noundef nonnull %1, i32 noundef 2) #13
  %168 = load i64, ptr %1, align 8, !tbaa !71
  %169 = load i32, ptr %140, align 4, !tbaa !16
  br label %170

170:                                              ; preds = %166, %160
  %171 = phi i32 [ %169, %166 ], [ %157, %160 ]
  %172 = phi i64 [ %168, %166 ], [ %163, %160 ]
  %173 = phi ptr [ %167, %166 ], [ %165, %160 ]
  %174 = icmp ugt i64 %172, 1
  br i1 %174, label %175, label %246

175:                                              ; preds = %170
  %176 = and i32 %171, 536870912
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %226, label %178

178:                                              ; preds = %175
  %179 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %180 = getelementptr inbounds %struct.cop, ptr %179, i64 0, i32 10
  %181 = load i32, ptr %180, align 8, !tbaa !66
  %182 = and i32 %181, 8
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %226

184:                                              ; preds = %178
  %185 = getelementptr inbounds %struct.sv, ptr %139, i64 0, i32 3
  %186 = load ptr, ptr %185, align 8, !tbaa !24
  %187 = getelementptr inbounds i8, ptr %186, i64 %172
  %188 = ptrtoint ptr %187 to i64
  %189 = icmp sgt i64 %172, 0
  br i1 %189, label %190, label %226

190:                                              ; preds = %184, %196
  %191 = phi ptr [ %197, %196 ], [ %186, %184 ]
  %192 = load i8, ptr %191, align 1, !tbaa !24
  %193 = icmp sgt i8 %192, -1
  br i1 %193, label %194, label %199

194:                                              ; preds = %190
  %195 = getelementptr inbounds i8, ptr %191, i64 1
  br label %196

196:                                              ; preds = %215, %206, %194
  %197 = phi ptr [ %195, %194 ], [ %212, %206 ], [ %212, %215 ]
  %198 = icmp ult ptr %197, %187
  br i1 %198, label %190, label %223, !llvm.loop !169

199:                                              ; preds = %190
  %200 = ptrtoint ptr %191 to i64
  %201 = sub i64 %188, %200
  %202 = call zeroext i1 @Perl_ckwarn_d(i32 noundef 44) #13
  %203 = select i1 %202, i32 0, i32 -8161
  %204 = call i64 @Perl_utf8n_to_uvchr(ptr noundef nonnull %191, i64 noundef %201, ptr noundef null, i32 noundef %203) #13
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %223, label %206

206:                                              ; preds = %199
  %207 = load i8, ptr %191, align 1, !tbaa !24
  %208 = zext i8 %207 to i64
  %209 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %208
  %210 = load i8, ptr %209, align 1, !tbaa !24
  %211 = zext i8 %210 to i64
  %212 = getelementptr inbounds i8, ptr %191, i64 %211
  %213 = getelementptr inbounds i8, ptr %212, i64 -1
  %214 = icmp ugt ptr %213, %191
  br i1 %214, label %215, label %196, !llvm.loop !169

215:                                              ; preds = %206, %215
  %216 = phi ptr [ %221, %215 ], [ %213, %206 ]
  %217 = phi ptr [ %220, %215 ], [ %191, %206 ]
  %218 = load i8, ptr %217, align 1, !tbaa !24
  %219 = load i8, ptr %216, align 1, !tbaa !24
  %220 = getelementptr inbounds i8, ptr %217, i64 1
  store i8 %219, ptr %217, align 1, !tbaa !24
  store i8 %218, ptr %216, align 1, !tbaa !24
  %221 = getelementptr inbounds i8, ptr %216, i64 -1
  %222 = icmp ugt ptr %221, %220
  br i1 %222, label %215, label %196, !llvm.loop !170

223:                                              ; preds = %199, %196
  %224 = load ptr, ptr %185, align 8, !tbaa !24
  %225 = load i64, ptr %1, align 8, !tbaa !71
  br label %226

226:                                              ; preds = %184, %223, %178, %175
  %227 = phi i64 [ %172, %178 ], [ %172, %175 ], [ %225, %223 ], [ %172, %184 ]
  %228 = phi ptr [ %173, %178 ], [ %173, %175 ], [ %224, %223 ], [ %186, %184 ]
  %229 = getelementptr inbounds %struct.sv, ptr %139, i64 0, i32 3
  %230 = load ptr, ptr %229, align 8, !tbaa !24
  %231 = getelementptr inbounds i8, ptr %230, i64 %227
  %232 = getelementptr inbounds i8, ptr %231, i64 -1
  %233 = icmp ugt ptr %232, %228
  br i1 %233, label %234, label %242

234:                                              ; preds = %226, %234
  %235 = phi ptr [ %240, %234 ], [ %232, %226 ]
  %236 = phi ptr [ %239, %234 ], [ %228, %226 ]
  %237 = load i8, ptr %236, align 1, !tbaa !24
  %238 = load i8, ptr %235, align 1, !tbaa !24
  %239 = getelementptr inbounds i8, ptr %236, i64 1
  store i8 %238, ptr %236, align 1, !tbaa !24
  store i8 %237, ptr %235, align 1, !tbaa !24
  %240 = getelementptr inbounds i8, ptr %235, i64 -1
  %241 = icmp ugt ptr %240, %239
  br i1 %241, label %234, label %242, !llvm.loop !171

242:                                              ; preds = %234, %226
  %243 = load i32, ptr %140, align 4, !tbaa !16
  %244 = and i32 %243, 2147418367
  %245 = or i32 %244, 17408
  store i32 %245, ptr %140, align 4, !tbaa !16
  br label %246

246:                                              ; preds = %242, %170
  %247 = phi i32 [ %245, %242 ], [ %171, %170 ]
  %248 = getelementptr inbounds ptr, ptr %8, i64 1
  %249 = and i32 %247, 4194304
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %253, label %251

251:                                              ; preds = %246
  %252 = call i32 @Perl_mg_set(ptr noundef nonnull %139) #13
  br label %253

253:                                              ; preds = %246, %251
  store ptr %139, ptr %248, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  br label %254

254:                                              ; preds = %102, %117, %125, %78, %110, %27, %106, %253
  %255 = phi ptr [ %248, %253 ], [ %8, %106 ], [ %2, %27 ], [ %8, %110 ], [ %8, %78 ], [ %2, %125 ], [ %8, %117 ], [ %8, %102 ]
  store ptr %255, ptr @PL_stack_sp, align 8, !tbaa !5
  %256 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %257 = load ptr, ptr %256, align 8, !tbaa !13
  ret ptr %257
}

declare void @Perl_sv_setsv_mg(ptr noundef, ptr noundef) local_unnamed_addr #2

declare void @Perl_do_join(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

declare ptr @Perl_find_rundefsv() local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_split() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 5
  %5 = load i8, ptr %4, align 2, !tbaa !9
  %6 = and i8 %5, 64
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %0
  %9 = getelementptr inbounds ptr, ptr %2, i64 -1
  %10 = load ptr, ptr %2, align 8, !tbaa !5
  br label %11

11:                                               ; preds = %0, %8
  %12 = phi ptr [ %9, %8 ], [ %2, %0 ]
  %13 = phi ptr [ %10, %8 ], [ null, %0 ]
  %14 = getelementptr inbounds ptr, ptr %12, i64 -1
  %15 = load ptr, ptr %12, align 8, !tbaa !5
  store ptr %15, ptr @PL_Sv, align 8, !tbaa !5
  %16 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 2
  %17 = load i32, ptr %16, align 4, !tbaa !16
  %18 = and i32 %17, 2097408
  %19 = icmp eq i32 %18, 256
  br i1 %19, label %20, label %24

20:                                               ; preds = %11
  %21 = load ptr, ptr %15, align 8, !tbaa !26
  %22 = getelementptr inbounds %struct.xpviv, ptr %21, i64 0, i32 4
  %23 = load i64, ptr %22, align 8, !tbaa !24
  br label %26

24:                                               ; preds = %11
  %25 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %15, i32 noundef 2) #13
  br label %26

26:                                               ; preds = %24, %20
  %27 = phi i64 [ %23, %20 ], [ %25, %24 ]
  %28 = getelementptr inbounds ptr, ptr %12, i64 -2
  %29 = load ptr, ptr %14, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #13
  %30 = getelementptr inbounds %struct.sv, ptr %29, i64 0, i32 2
  %31 = load i32, ptr %30, align 4, !tbaa !16
  %32 = and i32 %31, 2098176
  %33 = icmp eq i32 %32, 1024
  br i1 %33, label %34, label %40

34:                                               ; preds = %26
  %35 = load ptr, ptr %29, align 8, !tbaa !26
  %36 = getelementptr inbounds %struct.xpv, ptr %35, i64 0, i32 2
  %37 = load i64, ptr %36, align 8, !tbaa !55
  store i64 %37, ptr %1, align 8, !tbaa !71
  %38 = getelementptr inbounds %struct.sv, ptr %29, i64 0, i32 3
  %39 = load ptr, ptr %38, align 8, !tbaa !24
  br label %43

40:                                               ; preds = %26
  %41 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %29, ptr noundef nonnull %1, i32 noundef 34) #13
  %42 = load i32, ptr %30, align 4, !tbaa !16
  br label %43

43:                                               ; preds = %40, %34
  %44 = phi i32 [ %31, %34 ], [ %42, %40 ]
  %45 = phi ptr [ %39, %34 ], [ %41, %40 ]
  %46 = and i32 %44, 536870912
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = load i64, ptr %1, align 8, !tbaa !71
  %50 = getelementptr inbounds i8, ptr %45, i64 %49
  br label %61

51:                                               ; preds = %43
  %52 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %53 = getelementptr inbounds %struct.cop, ptr %52, i64 0, i32 10
  %54 = load i32, ptr %53, align 8, !tbaa !66
  %55 = and i32 %54, 8
  %56 = icmp eq i32 %55, 0
  %57 = load i64, ptr %1, align 8, !tbaa !71
  %58 = getelementptr inbounds i8, ptr %45, i64 %57
  br i1 %56, label %59, label %61

59:                                               ; preds = %51
  %60 = call i64 @Perl_utf8_length(ptr noundef %45, ptr noundef %58) #13
  br label %61

61:                                               ; preds = %48, %51, %59
  %62 = phi ptr [ %58, %59 ], [ %58, %51 ], [ %50, %48 ]
  %63 = phi i1 [ true, %59 ], [ false, %51 ], [ false, %48 ]
  %64 = phi i64 [ %60, %59 ], [ %57, %51 ], [ %49, %48 ]
  %65 = ptrtoint ptr %62 to i64
  %66 = add i64 %64, 10
  %67 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %68 = getelementptr inbounds %struct.op, ptr %67, i64 0, i32 5
  %69 = load i8, ptr %68, align 2, !tbaa !9
  %70 = and i8 %69, 3
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %61
  %73 = zext i8 %70 to i32
  br label %76

74:                                               ; preds = %61
  %75 = call i32 @Perl_block_gimme() #13
  br label %76

76:                                               ; preds = %74, %72
  %77 = phi i32 [ %73, %72 ], [ %75, %74 ]
  %78 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !57
  %79 = getelementptr inbounds ptr, ptr %12, i64 -3
  %80 = load ptr, ptr %28, align 8, !tbaa !5
  %81 = icmp eq ptr %80, null
  br i1 %81, label %82, label %84

82:                                               ; preds = %76
  %83 = call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.57, ptr noundef null, ptr noundef %45) #13
  br label %1288

84:                                               ; preds = %76
  %85 = getelementptr inbounds %struct.pmop, ptr %80, i64 0, i32 9
  %86 = load ptr, ptr %85, align 8, !tbaa !172
  %87 = getelementptr i8, ptr %86, i64 16
  %88 = load ptr, ptr %87, align 8, !tbaa !24
  %89 = getelementptr inbounds %struct.regexp, ptr %88, i64 0, i32 7
  %90 = load i32, ptr %89, align 8, !tbaa !174
  %91 = and i32 %90, 896
  %92 = icmp ne i32 %91, 128
  %93 = and i32 %90, 1610612736
  %94 = icmp eq i32 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %97, label %96

96:                                               ; preds = %84
  store i8 1, ptr @PL_tainted, align 1, !tbaa !81
  br label %97

97:                                               ; preds = %84, %96
  %98 = getelementptr inbounds %struct.pmop, ptr %80, i64 0, i32 11
  %99 = load ptr, ptr %98, align 8, !tbaa !24
  %100 = icmp eq ptr %99, null
  br i1 %100, label %113, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %struct.gv, ptr %99, i64 0, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !24
  %104 = getelementptr inbounds %struct.gp, ptr %103, i64 0, i32 6
  %105 = load ptr, ptr %104, align 8, !tbaa !73
  %106 = icmp eq ptr %105, null
  br i1 %106, label %107, label %124

107:                                              ; preds = %101
  %108 = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %99, i32 noundef 11) #13
  %109 = getelementptr inbounds %struct.gv, ptr %108, i64 0, i32 3
  %110 = load ptr, ptr %109, align 8, !tbaa !24
  %111 = getelementptr inbounds %struct.gp, ptr %110, i64 0, i32 6
  %112 = load ptr, ptr %111, align 8, !tbaa !73
  br label %124

113:                                              ; preds = %97
  %114 = getelementptr inbounds %struct.pmop, ptr %80, i64 0, i32 3
  %115 = load i64, ptr %114, align 8, !tbaa !176
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %113
  %118 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %119 = getelementptr inbounds ptr, ptr %118, i64 %115
  %120 = load ptr, ptr %119, align 8, !tbaa !5
  br label %121

121:                                              ; preds = %113, %117
  %122 = phi ptr [ %120, %117 ], [ %13, %113 ]
  %123 = icmp eq ptr %122, null
  br i1 %123, label %237, label %124

124:                                              ; preds = %107, %101, %121
  %125 = phi ptr [ %122, %121 ], [ %112, %107 ], [ %105, %101 ]
  store ptr %79, ptr @PL_stack_sp, align 8, !tbaa !5
  call void @Perl_av_extend(ptr noundef %125, i64 noundef 0) #13
  %126 = getelementptr inbounds %struct.sv, ptr %29, i64 0, i32 1
  %127 = load i32, ptr %126, align 8, !tbaa !44
  %128 = add i32 %127, 1
  store i32 %128, ptr %126, align 8, !tbaa !44
  %129 = call ptr @Perl_sv_2mortal(ptr noundef nonnull %29) #13
  call void @Perl_av_clear(ptr noundef %125) #13
  %130 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %131 = getelementptr inbounds %struct.sv, ptr %125, i64 0, i32 2
  %132 = load i32, ptr %131, align 4, !tbaa !57
  %133 = and i32 %132, 8388608
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %172, label %135

135:                                              ; preds = %124
  %136 = call ptr @Perl_mg_find(ptr noundef nonnull %125, i32 noundef 80) #13
  %137 = icmp eq ptr %136, null
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = load i32, ptr %131, align 4, !tbaa !74
  br label %172

140:                                              ; preds = %135
  %141 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %142 = getelementptr inbounds i32, ptr %141, i64 1
  store ptr %142, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %143 = load ptr, ptr @PL_markstack_max, align 8, !tbaa !5
  %144 = icmp eq ptr %142, %143
  br i1 %144, label %145, label %147

145:                                              ; preds = %140
  %146 = call ptr @Perl_markstack_grow() #13
  br label %147

147:                                              ; preds = %140, %145
  %148 = phi ptr [ %146, %145 ], [ %142, %140 ]
  %149 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %150 = ptrtoint ptr %130 to i64
  %151 = ptrtoint ptr %149 to i64
  %152 = sub i64 %150, %151
  %153 = lshr exact i64 %152, 3
  %154 = trunc i64 %153 to i32
  store i32 %154, ptr %148, align 4, !tbaa !57
  %155 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %156 = ptrtoint ptr %155 to i64
  %157 = sub i64 %156, %150
  %158 = icmp slt i64 %157, 8
  br i1 %158, label %159, label %161

159:                                              ; preds = %147
  %160 = call ptr @Perl_stack_grow(ptr noundef %130, ptr noundef %130, i64 noundef 1) #13
  br label %161

161:                                              ; preds = %147, %159
  %162 = phi ptr [ %160, %159 ], [ %130, %147 ]
  %163 = getelementptr inbounds %struct.magic, ptr %136, i64 0, i32 6
  %164 = load ptr, ptr %163, align 8, !tbaa !132
  %165 = icmp eq ptr %164, null
  br i1 %165, label %166, label %169

166:                                              ; preds = %161
  %167 = call ptr @Perl_newRV(ptr noundef nonnull %125) #13
  %168 = call ptr @Perl_sv_2mortal(ptr noundef %167) #13
  br label %169

169:                                              ; preds = %161, %166
  %170 = phi ptr [ %168, %166 ], [ %164, %161 ]
  %171 = getelementptr inbounds ptr, ptr %162, i64 1
  store ptr %170, ptr %171, align 8, !tbaa !5
  br label %237

172:                                              ; preds = %138, %124
  %173 = phi i32 [ %139, %138 ], [ %132, %124 ]
  %174 = and i32 %173, 1073741824
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %216

176:                                              ; preds = %172
  %177 = and i32 %173, 1073741823
  %178 = or i32 %177, 1073741824
  store i32 %178, ptr %131, align 4, !tbaa !74
  %179 = load ptr, ptr %125, align 8, !tbaa !18
  %180 = getelementptr inbounds %struct.xpvav, ptr %179, i64 0, i32 2
  %181 = load i64, ptr %180, align 8, !tbaa !20
  %182 = and i64 %181, 2147483648
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %216

184:                                              ; preds = %176
  %185 = getelementptr inbounds %struct.av, ptr %125, i64 0, i32 3
  %186 = and i64 %181, 4294967295
  %187 = add i64 %181, 1
  %188 = and i64 %187, 3
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %198, label %190

190:                                              ; preds = %184, %190
  %191 = phi i64 [ %195, %190 ], [ %186, %184 ]
  %192 = phi i64 [ %196, %190 ], [ 0, %184 ]
  %193 = load ptr, ptr %185, align 8, !tbaa !24
  %194 = getelementptr inbounds ptr, ptr %193, i64 %191
  store ptr @PL_sv_undef, ptr %194, align 8, !tbaa !5
  %195 = add nsw i64 %191, -1
  %196 = add i64 %192, 1
  %197 = icmp eq i64 %196, %188
  br i1 %197, label %198, label %190, !llvm.loop !177

198:                                              ; preds = %190, %184
  %199 = phi i64 [ %186, %184 ], [ %195, %190 ]
  %200 = icmp ult i64 %186, 3
  br i1 %200, label %216, label %201

201:                                              ; preds = %198, %201
  %202 = phi i64 [ %214, %201 ], [ %199, %198 ]
  %203 = load ptr, ptr %185, align 8, !tbaa !24
  %204 = getelementptr inbounds ptr, ptr %203, i64 %202
  store ptr @PL_sv_undef, ptr %204, align 8, !tbaa !5
  %205 = add nsw i64 %202, -1
  %206 = load ptr, ptr %185, align 8, !tbaa !24
  %207 = getelementptr inbounds ptr, ptr %206, i64 %205
  store ptr @PL_sv_undef, ptr %207, align 8, !tbaa !5
  %208 = add nsw i64 %202, -2
  %209 = load ptr, ptr %185, align 8, !tbaa !24
  %210 = getelementptr inbounds ptr, ptr %209, i64 %208
  store ptr @PL_sv_undef, ptr %210, align 8, !tbaa !5
  %211 = add nsw i64 %202, -3
  %212 = load ptr, ptr %185, align 8, !tbaa !24
  %213 = getelementptr inbounds ptr, ptr %212, i64 %211
  store ptr @PL_sv_undef, ptr %213, align 8, !tbaa !5
  %214 = add nsw i64 %202, -4
  %215 = icmp eq i64 %211, 0
  br i1 %215, label %216, label %201, !llvm.loop !178

216:                                              ; preds = %198, %201, %176, %172
  %217 = load ptr, ptr @PL_curstack, align 8, !tbaa !5
  call void @Perl_save_pushptrptr(ptr noundef %217, ptr noundef nonnull %125, i32 noundef 39) #13
  %218 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %219 = ptrtoint ptr %130 to i64
  %220 = ptrtoint ptr %218 to i64
  %221 = sub i64 %219, %220
  %222 = ashr exact i64 %221, 3
  %223 = load ptr, ptr @PL_curstack, align 8, !tbaa !5
  %224 = load ptr, ptr %223, align 8, !tbaa !18
  %225 = getelementptr inbounds %struct.xpvav, ptr %224, i64 0, i32 2
  store i64 %222, ptr %225, align 8, !tbaa !20
  %226 = getelementptr inbounds %struct.av, ptr %125, i64 0, i32 3
  %227 = load ptr, ptr %226, align 8, !tbaa !24
  store ptr %227, ptr @PL_stack_base, align 8, !tbaa !5
  %228 = load ptr, ptr %125, align 8, !tbaa !18
  %229 = getelementptr inbounds %struct.xpvav, ptr %228, i64 0, i32 3
  %230 = load i64, ptr %229, align 8, !tbaa !134
  %231 = getelementptr inbounds ptr, ptr %227, i64 %230
  store ptr %231, ptr @PL_stack_max, align 8, !tbaa !5
  %232 = load ptr, ptr %125, align 8, !tbaa !18
  %233 = getelementptr inbounds %struct.xpvav, ptr %232, i64 0, i32 2
  %234 = load i64, ptr %233, align 8, !tbaa !20
  %235 = getelementptr inbounds ptr, ptr %227, i64 %234
  store ptr %235, ptr @PL_stack_sp, align 8, !tbaa !5
  store ptr %125, ptr @PL_curstack, align 8, !tbaa !5
  %236 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !5
  store ptr %125, ptr %236, align 8, !tbaa !179
  br label %237

237:                                              ; preds = %169, %216, %121
  %238 = phi i1 [ false, %169 ], [ false, %216 ], [ true, %121 ]
  %239 = phi i1 [ true, %169 ], [ false, %216 ], [ true, %121 ]
  %240 = phi i1 [ false, %169 ], [ true, %216 ], [ false, %121 ]
  %241 = phi i32 [ 524288, %169 ], [ 0, %216 ], [ 524288, %121 ]
  %242 = phi ptr [ %136, %169 ], [ null, %216 ], [ null, %121 ]
  %243 = phi ptr [ %125, %169 ], [ %125, %216 ], [ null, %121 ]
  %244 = phi ptr [ %171, %169 ], [ %235, %216 ], [ %79, %121 ]
  %245 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %246 = ptrtoint ptr %244 to i64
  %247 = ptrtoint ptr %245 to i64
  %248 = sub i64 %246, %247
  %249 = load ptr, ptr %87, align 8, !tbaa !24
  %250 = getelementptr inbounds %struct.regexp, ptr %249, i64 0, i32 7
  %251 = load i32, ptr %250, align 8, !tbaa !174
  %252 = and i32 %251, 536870912
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %344, label %254

254:                                              ; preds = %237
  br i1 %63, label %255, label %314

255:                                              ; preds = %254, %308
  %256 = phi ptr [ %313, %308 ], [ %45, %254 ]
  %257 = load i8, ptr %256, align 1, !tbaa !24
  %258 = icmp sgt i8 %257, -1
  br i1 %258, label %301, label %259

259:                                              ; preds = %255
  %260 = and i8 %257, -2
  %261 = icmp eq i8 %260, -62
  br i1 %261, label %262, label %268

262:                                              ; preds = %259
  %263 = shl i8 %257, 6
  %264 = getelementptr inbounds i8, ptr %256, i64 1
  %265 = load i8, ptr %264, align 1, !tbaa !24
  %266 = and i8 %265, 63
  %267 = or i8 %266, %263
  br label %301

268:                                              ; preds = %259
  switch i8 %257, label %344 [
    i8 -31, label %269
    i8 -30, label %278
    i8 -29, label %292
  ]

269:                                              ; preds = %268
  %270 = getelementptr inbounds i8, ptr %256, i64 1
  %271 = load i8, ptr %270, align 1, !tbaa !24
  %272 = icmp eq i8 %271, -102
  br i1 %272, label %273, label %344

273:                                              ; preds = %269
  %274 = getelementptr inbounds i8, ptr %256, i64 2
  %275 = load i8, ptr %274, align 1, !tbaa !24
  %276 = freeze i8 %275
  %277 = icmp eq i8 %276, -128
  br i1 %277, label %308, label %344

278:                                              ; preds = %268
  %279 = getelementptr inbounds i8, ptr %256, i64 1
  %280 = load i8, ptr %279, align 1, !tbaa !24
  switch i8 %280, label %344 [
    i8 -128, label %281
    i8 -127, label %287
  ]

281:                                              ; preds = %278
  %282 = getelementptr inbounds i8, ptr %256, i64 2
  %283 = load i8, ptr %282, align 1, !tbaa !24
  %284 = freeze i8 %283
  %285 = icmp ult i8 %284, -117
  br i1 %285, label %308, label %286

286:                                              ; preds = %281
  switch i8 %284, label %344 [
    i8 -81, label %308
    i8 -87, label %308
    i8 -88, label %308
  ]

287:                                              ; preds = %278
  %288 = getelementptr inbounds i8, ptr %256, i64 2
  %289 = load i8, ptr %288, align 1, !tbaa !24
  %290 = freeze i8 %289
  %291 = icmp eq i8 %290, -97
  br i1 %291, label %308, label %344

292:                                              ; preds = %268
  %293 = getelementptr inbounds i8, ptr %256, i64 1
  %294 = load i8, ptr %293, align 1, !tbaa !24
  %295 = icmp eq i8 %294, -128
  br i1 %295, label %296, label %344

296:                                              ; preds = %292
  %297 = getelementptr inbounds i8, ptr %256, i64 2
  %298 = load i8, ptr %297, align 1, !tbaa !24
  %299 = freeze i8 %298
  %300 = icmp eq i8 %299, -128
  br i1 %300, label %308, label %344

301:                                              ; preds = %255, %262
  %302 = phi i8 [ %267, %262 ], [ %257, %255 ]
  %303 = zext i8 %302 to i64
  %304 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %303
  %305 = load i32, ptr %304, align 4, !tbaa !57
  %306 = and i32 %305, 1024
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %344, label %308

308:                                              ; preds = %286, %286, %286, %281, %296, %287, %273, %301
  %309 = zext i8 %257 to i64
  %310 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %309
  %311 = load i8, ptr %310, align 1, !tbaa !24
  %312 = zext i8 %311 to i64
  %313 = getelementptr inbounds i8, ptr %256, i64 %312
  br label %255, !llvm.loop !181

314:                                              ; preds = %254
  %315 = and i32 %251, 896
  %316 = icmp eq i32 %315, 128
  br i1 %316, label %317, label %335

317:                                              ; preds = %314
  %318 = load i8, ptr %45, align 1, !tbaa !24
  %319 = icmp sgt i8 %318, -1
  br i1 %319, label %320, label %344

320:                                              ; preds = %317
  %321 = tail call ptr @__ctype_b_loc() #15
  %322 = load ptr, ptr %321, align 8, !tbaa !5
  br label %323

323:                                              ; preds = %320, %331
  %324 = phi i8 [ %318, %320 ], [ %333, %331 ]
  %325 = phi ptr [ %45, %320 ], [ %332, %331 ]
  %326 = zext i8 %324 to i64
  %327 = getelementptr inbounds i16, ptr %322, i64 %326
  %328 = load i16, ptr %327, align 2, !tbaa !163
  %329 = and i16 %328, 8192
  %330 = icmp eq i16 %329, 0
  br i1 %330, label %344, label %331

331:                                              ; preds = %323
  %332 = getelementptr inbounds i8, ptr %325, i64 1
  %333 = load i8, ptr %332, align 1, !tbaa !24
  %334 = icmp sgt i8 %333, -1
  br i1 %334, label %323, label %344, !llvm.loop !182

335:                                              ; preds = %314, %335
  %336 = phi ptr [ %343, %335 ], [ %45, %314 ]
  %337 = load i8, ptr %336, align 1, !tbaa !24
  %338 = zext i8 %337 to i64
  %339 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %338
  %340 = load i32, ptr %339, align 4, !tbaa !57
  %341 = and i32 %340, 17408
  %342 = icmp eq i32 %341, 17408
  %343 = getelementptr inbounds i8, ptr %336, i64 1
  br i1 %342, label %335, label %344, !llvm.loop !183

344:                                              ; preds = %335, %331, %323, %286, %268, %292, %278, %269, %296, %287, %273, %301, %317, %237
  %345 = phi ptr [ %45, %237 ], [ %45, %317 ], [ %256, %301 ], [ %256, %273 ], [ %256, %287 ], [ %256, %296 ], [ %256, %269 ], [ %256, %278 ], [ %256, %292 ], [ %256, %268 ], [ %256, %286 ], [ %332, %331 ], [ %325, %323 ], [ %336, %335 ]
  %346 = ptrtoint ptr %345 to i64
  %347 = and i32 %251, 1
  %348 = icmp eq i32 %77, 2
  %349 = icmp eq ptr %243, null
  %350 = and i1 %348, %349
  %351 = icmp eq i64 %27, 0
  %352 = add i64 %64, 12
  %353 = select i1 %351, i64 %352, i64 %27
  %354 = and i32 %251, 1073741824
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %621, label %356

356:                                              ; preds = %344
  %357 = add nsw i64 %353, -1
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %1114, label %359

359:                                              ; preds = %356
  %360 = select i1 %63, i32 536870912, i32 0
  %361 = or i32 %241, %360
  br label %362

362:                                              ; preds = %359, %617
  %363 = phi i64 [ %357, %359 ], [ %619, %617 ]
  %364 = phi ptr [ %244, %359 ], [ %504, %617 ]
  %365 = phi ptr [ %345, %359 ], [ %618, %617 ]
  %366 = phi i64 [ 0, %359 ], [ %503, %617 ]
  %367 = phi i32 [ 0, %359 ], [ %502, %617 ]
  %368 = ptrtoint ptr %365 to i64
  br i1 %63, label %369, label %435

369:                                              ; preds = %362
  %370 = icmp ult ptr %365, %62
  br i1 %370, label %371, label %478

371:                                              ; preds = %369, %424
  %372 = phi ptr [ %433, %424 ], [ %365, %369 ]
  %373 = load i8, ptr %372, align 1, !tbaa !24
  %374 = icmp sgt i8 %373, -1
  br i1 %374, label %417, label %375

375:                                              ; preds = %371
  %376 = and i8 %373, -2
  %377 = icmp eq i8 %376, -62
  br i1 %377, label %378, label %384

378:                                              ; preds = %375
  %379 = shl i8 %373, 6
  %380 = getelementptr inbounds i8, ptr %372, i64 1
  %381 = load i8, ptr %380, align 1, !tbaa !24
  %382 = and i8 %381, 63
  %383 = or i8 %382, %379
  br label %417

384:                                              ; preds = %375
  switch i8 %373, label %424 [
    i8 -31, label %385
    i8 -30, label %394
    i8 -29, label %408
  ]

385:                                              ; preds = %384
  %386 = getelementptr inbounds i8, ptr %372, i64 1
  %387 = load i8, ptr %386, align 1, !tbaa !24
  %388 = icmp eq i8 %387, -102
  br i1 %388, label %389, label %424

389:                                              ; preds = %385
  %390 = getelementptr inbounds i8, ptr %372, i64 2
  %391 = load i8, ptr %390, align 1, !tbaa !24
  %392 = freeze i8 %391
  %393 = icmp eq i8 %392, -128
  br i1 %393, label %478, label %424

394:                                              ; preds = %384
  %395 = getelementptr inbounds i8, ptr %372, i64 1
  %396 = load i8, ptr %395, align 1, !tbaa !24
  switch i8 %396, label %424 [
    i8 -128, label %397
    i8 -127, label %403
  ]

397:                                              ; preds = %394
  %398 = getelementptr inbounds i8, ptr %372, i64 2
  %399 = load i8, ptr %398, align 1, !tbaa !24
  %400 = freeze i8 %399
  %401 = icmp ult i8 %400, -117
  br i1 %401, label %478, label %402

402:                                              ; preds = %397
  switch i8 %400, label %424 [
    i8 -81, label %478
    i8 -87, label %478
    i8 -88, label %478
  ]

403:                                              ; preds = %394
  %404 = getelementptr inbounds i8, ptr %372, i64 2
  %405 = load i8, ptr %404, align 1, !tbaa !24
  %406 = freeze i8 %405
  %407 = icmp eq i8 %406, -97
  br i1 %407, label %478, label %424

408:                                              ; preds = %384
  %409 = getelementptr inbounds i8, ptr %372, i64 1
  %410 = load i8, ptr %409, align 1, !tbaa !24
  %411 = icmp eq i8 %410, -128
  br i1 %411, label %412, label %424

412:                                              ; preds = %408
  %413 = getelementptr inbounds i8, ptr %372, i64 2
  %414 = load i8, ptr %413, align 1, !tbaa !24
  %415 = freeze i8 %414
  %416 = icmp eq i8 %415, -128
  br i1 %416, label %478, label %424

417:                                              ; preds = %371, %378
  %418 = phi i8 [ %383, %378 ], [ %373, %371 ]
  %419 = zext i8 %418 to i64
  %420 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %419
  %421 = load i32, ptr %420, align 4, !tbaa !57
  %422 = and i32 %421, 1024
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %424, label %478

424:                                              ; preds = %402, %384, %408, %394, %385, %412, %403, %389, %417
  %425 = zext i8 %373 to i64
  %426 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %425
  %427 = load i8, ptr %426, align 1, !tbaa !24
  %428 = ptrtoint ptr %372 to i64
  %429 = sub i64 %65, %428
  %430 = zext i8 %427 to i64
  %431 = icmp slt i64 %429, %430
  %432 = getelementptr inbounds i8, ptr %372, i64 %430
  %433 = select i1 %431, ptr %62, ptr %432
  %434 = icmp ult ptr %433, %62
  br i1 %434, label %371, label %478, !llvm.loop !184

435:                                              ; preds = %362
  %436 = load ptr, ptr %87, align 8, !tbaa !24
  %437 = getelementptr inbounds %struct.regexp, ptr %436, i64 0, i32 7
  %438 = load i32, ptr %437, align 8, !tbaa !174
  %439 = and i32 %438, 896
  %440 = icmp eq i32 %439, 128
  %441 = icmp ult ptr %365, %62
  br i1 %440, label %447, label %442

442:                                              ; preds = %435
  br i1 %441, label %443, label %478

443:                                              ; preds = %442
  %444 = getelementptr i8, ptr %365, i64 %65
  %445 = sub i64 0, %368
  %446 = getelementptr i8, ptr %444, i64 %445
  br label %467

447:                                              ; preds = %435
  br i1 %441, label %448, label %478

448:                                              ; preds = %447
  %449 = getelementptr i8, ptr %365, i64 %65
  %450 = sub i64 0, %368
  %451 = getelementptr i8, ptr %449, i64 %450
  br label %452

452:                                              ; preds = %448, %464
  %453 = phi ptr [ %465, %464 ], [ %365, %448 ]
  %454 = load i8, ptr %453, align 1, !tbaa !24
  %455 = icmp sgt i8 %454, -1
  br i1 %455, label %456, label %464

456:                                              ; preds = %452
  %457 = tail call ptr @__ctype_b_loc() #15
  %458 = load ptr, ptr %457, align 8, !tbaa !5
  %459 = zext i8 %454 to i64
  %460 = getelementptr inbounds i16, ptr %458, i64 %459
  %461 = load i16, ptr %460, align 2, !tbaa !163
  %462 = and i16 %461, 8192
  %463 = icmp eq i16 %462, 0
  br i1 %463, label %464, label %478

464:                                              ; preds = %452, %456
  %465 = getelementptr inbounds i8, ptr %453, i64 1
  %466 = icmp eq ptr %465, %451
  br i1 %466, label %478, label %452, !llvm.loop !185

467:                                              ; preds = %443, %475
  %468 = phi ptr [ %476, %475 ], [ %365, %443 ]
  %469 = load i8, ptr %468, align 1, !tbaa !24
  %470 = zext i8 %469 to i64
  %471 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %470
  %472 = load i32, ptr %471, align 4, !tbaa !57
  %473 = and i32 %472, 17408
  %474 = icmp eq i32 %473, 17408
  br i1 %474, label %478, label %475

475:                                              ; preds = %467
  %476 = getelementptr inbounds i8, ptr %468, i64 1
  %477 = icmp eq ptr %476, %446
  br i1 %477, label %478, label %467, !llvm.loop !186

478:                                              ; preds = %467, %475, %456, %464, %424, %417, %389, %403, %412, %397, %402, %402, %402, %442, %447, %369
  %479 = phi ptr [ %365, %369 ], [ %365, %447 ], [ %365, %442 ], [ %433, %424 ], [ %372, %417 ], [ %372, %389 ], [ %372, %403 ], [ %372, %412 ], [ %372, %397 ], [ %372, %402 ], [ %372, %402 ], [ %372, %402 ], [ %453, %456 ], [ %451, %464 ], [ %468, %467 ], [ %446, %475 ]
  %480 = ptrtoint ptr %479 to i64
  %481 = icmp ult ptr %479, %62
  br i1 %481, label %482, label %1114

482:                                              ; preds = %478
  br i1 %350, label %483, label %488

483:                                              ; preds = %482
  %484 = add nsw i64 %366, 1
  %485 = icmp eq ptr %479, %365
  %486 = add nsw i32 %367, 1
  %487 = select i1 %485, i32 %486, i32 0
  br label %501

488:                                              ; preds = %482
  %489 = sub i64 %480, %368
  %490 = call ptr @Perl_newSVpvn_flags(ptr noundef %365, i64 noundef %489, i32 noundef %361) #13
  %491 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %492 = ptrtoint ptr %491 to i64
  %493 = ptrtoint ptr %364 to i64
  %494 = sub i64 %492, %493
  %495 = icmp slt i64 %494, 8
  br i1 %495, label %496, label %498

496:                                              ; preds = %488
  %497 = call ptr @Perl_stack_grow(ptr noundef %364, ptr noundef %364, i64 noundef 1) #13
  br label %498

498:                                              ; preds = %488, %496
  %499 = phi ptr [ %497, %496 ], [ %364, %488 ]
  %500 = getelementptr inbounds ptr, ptr %499, i64 1
  store ptr %490, ptr %500, align 8, !tbaa !5
  br label %501

501:                                              ; preds = %483, %498
  %502 = phi i32 [ %367, %498 ], [ %487, %483 ]
  %503 = phi i64 [ %366, %498 ], [ %484, %483 ]
  %504 = phi ptr [ %500, %498 ], [ %364, %483 ]
  br i1 %63, label %505, label %573

505:                                              ; preds = %501
  %506 = load i8, ptr %479, align 1, !tbaa !24
  %507 = zext i8 %506 to i64
  %508 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %507
  %509 = load i8, ptr %508, align 1, !tbaa !24
  %510 = zext i8 %509 to i64
  %511 = getelementptr inbounds i8, ptr %479, i64 %510
  %512 = icmp ult ptr %511, %62
  br i1 %512, label %513, label %617

513:                                              ; preds = %505, %566
  %514 = phi ptr [ %571, %566 ], [ %511, %505 ]
  %515 = load i8, ptr %514, align 1, !tbaa !24
  %516 = icmp sgt i8 %515, -1
  br i1 %516, label %559, label %517

517:                                              ; preds = %513
  %518 = and i8 %515, -2
  %519 = icmp eq i8 %518, -62
  br i1 %519, label %520, label %526

520:                                              ; preds = %517
  %521 = shl i8 %515, 6
  %522 = getelementptr inbounds i8, ptr %514, i64 1
  %523 = load i8, ptr %522, align 1, !tbaa !24
  %524 = and i8 %523, 63
  %525 = or i8 %524, %521
  br label %559

526:                                              ; preds = %517
  switch i8 %515, label %617 [
    i8 -31, label %527
    i8 -30, label %536
    i8 -29, label %550
  ]

527:                                              ; preds = %526
  %528 = getelementptr inbounds i8, ptr %514, i64 1
  %529 = load i8, ptr %528, align 1, !tbaa !24
  %530 = icmp eq i8 %529, -102
  br i1 %530, label %531, label %617

531:                                              ; preds = %527
  %532 = getelementptr inbounds i8, ptr %514, i64 2
  %533 = load i8, ptr %532, align 1, !tbaa !24
  %534 = freeze i8 %533
  %535 = icmp eq i8 %534, -128
  br i1 %535, label %566, label %617

536:                                              ; preds = %526
  %537 = getelementptr inbounds i8, ptr %514, i64 1
  %538 = load i8, ptr %537, align 1, !tbaa !24
  switch i8 %538, label %617 [
    i8 -128, label %539
    i8 -127, label %545
  ]

539:                                              ; preds = %536
  %540 = getelementptr inbounds i8, ptr %514, i64 2
  %541 = load i8, ptr %540, align 1, !tbaa !24
  %542 = freeze i8 %541
  %543 = icmp ult i8 %542, -117
  br i1 %543, label %566, label %544

544:                                              ; preds = %539
  switch i8 %542, label %617 [
    i8 -81, label %566
    i8 -87, label %566
    i8 -88, label %566
  ]

545:                                              ; preds = %536
  %546 = getelementptr inbounds i8, ptr %514, i64 2
  %547 = load i8, ptr %546, align 1, !tbaa !24
  %548 = freeze i8 %547
  %549 = icmp eq i8 %548, -97
  br i1 %549, label %566, label %617

550:                                              ; preds = %526
  %551 = getelementptr inbounds i8, ptr %514, i64 1
  %552 = load i8, ptr %551, align 1, !tbaa !24
  %553 = icmp eq i8 %552, -128
  br i1 %553, label %554, label %617

554:                                              ; preds = %550
  %555 = getelementptr inbounds i8, ptr %514, i64 2
  %556 = load i8, ptr %555, align 1, !tbaa !24
  %557 = freeze i8 %556
  %558 = icmp eq i8 %557, -128
  br i1 %558, label %566, label %617

559:                                              ; preds = %513, %520
  %560 = phi i8 [ %525, %520 ], [ %515, %513 ]
  %561 = zext i8 %560 to i64
  %562 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %561
  %563 = load i32, ptr %562, align 4, !tbaa !57
  %564 = and i32 %563, 1024
  %565 = icmp eq i32 %564, 0
  br i1 %565, label %617, label %566

566:                                              ; preds = %544, %544, %544, %539, %554, %545, %531, %559
  %567 = zext i8 %515 to i64
  %568 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %567
  %569 = load i8, ptr %568, align 1, !tbaa !24
  %570 = zext i8 %569 to i64
  %571 = getelementptr inbounds i8, ptr %514, i64 %570
  %572 = icmp ult ptr %571, %62
  br i1 %572, label %513, label %617, !llvm.loop !187

573:                                              ; preds = %501
  %574 = getelementptr inbounds i8, ptr %479, i64 1
  %575 = load ptr, ptr %87, align 8, !tbaa !24
  %576 = getelementptr inbounds %struct.regexp, ptr %575, i64 0, i32 7
  %577 = load i32, ptr %576, align 8, !tbaa !174
  %578 = and i32 %577, 896
  %579 = icmp eq i32 %578, 128
  %580 = icmp ult ptr %574, %62
  br i1 %579, label %586, label %581

581:                                              ; preds = %573
  br i1 %580, label %582, label %617

582:                                              ; preds = %581
  %583 = getelementptr i8, ptr %479, i64 %65
  %584 = sub i64 0, %480
  %585 = getelementptr i8, ptr %583, i64 %584
  br label %606

586:                                              ; preds = %573
  br i1 %580, label %587, label %617

587:                                              ; preds = %586
  %588 = getelementptr i8, ptr %479, i64 %65
  %589 = sub i64 0, %480
  %590 = getelementptr i8, ptr %588, i64 %589
  br label %591

591:                                              ; preds = %587, %603
  %592 = phi ptr [ %604, %603 ], [ %574, %587 ]
  %593 = load i8, ptr %592, align 1, !tbaa !24
  %594 = icmp sgt i8 %593, -1
  br i1 %594, label %595, label %617

595:                                              ; preds = %591
  %596 = tail call ptr @__ctype_b_loc() #15
  %597 = load ptr, ptr %596, align 8, !tbaa !5
  %598 = zext i8 %593 to i64
  %599 = getelementptr inbounds i16, ptr %597, i64 %598
  %600 = load i16, ptr %599, align 2, !tbaa !163
  %601 = and i16 %600, 8192
  %602 = icmp eq i16 %601, 0
  br i1 %602, label %617, label %603

603:                                              ; preds = %595
  %604 = getelementptr inbounds i8, ptr %592, i64 1
  %605 = icmp eq ptr %604, %590
  br i1 %605, label %617, label %591, !llvm.loop !188

606:                                              ; preds = %582, %614
  %607 = phi ptr [ %615, %614 ], [ %574, %582 ]
  %608 = load i8, ptr %607, align 1, !tbaa !24
  %609 = zext i8 %608 to i64
  %610 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %609
  %611 = load i32, ptr %610, align 4, !tbaa !57
  %612 = and i32 %611, 17408
  %613 = icmp eq i32 %612, 17408
  br i1 %613, label %614, label %617

614:                                              ; preds = %606
  %615 = getelementptr inbounds i8, ptr %607, i64 1
  %616 = icmp eq ptr %615, %585
  br i1 %616, label %617, label %606, !llvm.loop !189

617:                                              ; preds = %606, %614, %595, %591, %603, %566, %559, %531, %545, %554, %527, %536, %550, %526, %544, %581, %586, %505
  %618 = phi ptr [ %511, %505 ], [ %574, %586 ], [ %574, %581 ], [ %571, %566 ], [ %514, %559 ], [ %514, %531 ], [ %514, %545 ], [ %514, %554 ], [ %514, %527 ], [ %514, %536 ], [ %514, %550 ], [ %514, %526 ], [ %514, %544 ], [ %592, %595 ], [ %592, %591 ], [ %590, %603 ], [ %607, %606 ], [ %585, %614 ]
  %619 = add nsw i64 %363, -1
  %620 = icmp eq i64 %619, 0
  br i1 %620, label %1114, label %362, !llvm.loop !190

621:                                              ; preds = %344
  %622 = and i32 %251, 268435456
  %623 = icmp eq i32 %622, 0
  br i1 %623, label %679, label %624

624:                                              ; preds = %621
  %625 = add nsw i64 %353, -1
  %626 = icmp eq i64 %625, 0
  br i1 %626, label %1114, label %627

627:                                              ; preds = %624
  %628 = select i1 %63, i32 536870912, i32 0
  %629 = or i32 %241, %628
  br label %630

630:                                              ; preds = %627, %673
  %631 = phi i64 [ %625, %627 ], [ %677, %673 ]
  %632 = phi ptr [ %244, %627 ], [ %676, %673 ]
  %633 = phi ptr [ %345, %627 ], [ %651, %673 ]
  %634 = phi i64 [ 0, %627 ], [ %675, %673 ]
  %635 = phi i32 [ 0, %627 ], [ %674, %673 ]
  %636 = ptrtoint ptr %633 to i64
  %637 = icmp ult ptr %633, %62
  br i1 %637, label %638, label %649

638:                                              ; preds = %630
  %639 = getelementptr i8, ptr %633, i64 %65
  %640 = sub i64 0, %636
  %641 = getelementptr i8, ptr %639, i64 %640
  br label %642

642:                                              ; preds = %638, %646
  %643 = phi ptr [ %647, %646 ], [ %633, %638 ]
  %644 = load i8, ptr %643, align 1, !tbaa !24
  %645 = icmp eq i8 %644, 10
  br i1 %645, label %649, label %646

646:                                              ; preds = %642
  %647 = getelementptr inbounds i8, ptr %643, i64 1
  %648 = icmp eq ptr %647, %641
  br i1 %648, label %649, label %642, !llvm.loop !191

649:                                              ; preds = %642, %646, %630
  %650 = phi ptr [ %633, %630 ], [ %641, %646 ], [ %643, %642 ]
  %651 = getelementptr inbounds i8, ptr %650, i64 1
  %652 = icmp ult ptr %651, %62
  br i1 %652, label %653, label %1114

653:                                              ; preds = %649
  br i1 %350, label %654, label %659

654:                                              ; preds = %653
  %655 = add nsw i64 %634, 1
  %656 = icmp eq ptr %651, %633
  %657 = add nsw i32 %635, 1
  %658 = select i1 %656, i32 %657, i32 0
  br label %673

659:                                              ; preds = %653
  %660 = ptrtoint ptr %651 to i64
  %661 = sub i64 %660, %636
  %662 = call ptr @Perl_newSVpvn_flags(ptr noundef %633, i64 noundef %661, i32 noundef %629) #13
  %663 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %664 = ptrtoint ptr %663 to i64
  %665 = ptrtoint ptr %632 to i64
  %666 = sub i64 %664, %665
  %667 = icmp slt i64 %666, 8
  br i1 %667, label %668, label %670

668:                                              ; preds = %659
  %669 = call ptr @Perl_stack_grow(ptr noundef %632, ptr noundef %632, i64 noundef 1) #13
  br label %670

670:                                              ; preds = %659, %668
  %671 = phi ptr [ %669, %668 ], [ %632, %659 ]
  %672 = getelementptr inbounds ptr, ptr %671, i64 1
  store ptr %662, ptr %672, align 8, !tbaa !5
  br label %673

673:                                              ; preds = %654, %670
  %674 = phi i32 [ %635, %670 ], [ %658, %654 ]
  %675 = phi i64 [ %634, %670 ], [ %655, %654 ]
  %676 = phi ptr [ %672, %670 ], [ %632, %654 ]
  %677 = add nsw i64 %631, -1
  %678 = icmp eq i64 %677, 0
  br i1 %678, label %1114, label %630, !llvm.loop !192

679:                                              ; preds = %621
  %680 = icmp slt i32 %251, 0
  %681 = icmp ult ptr %345, %62
  %682 = select i1 %680, i1 %681, i1 false
  br i1 %682, label %683, label %784

683:                                              ; preds = %679
  br i1 %350, label %701, label %684

684:                                              ; preds = %683
  %685 = add i64 %353, 4294967295
  %686 = and i64 %685, 4294967295
  %687 = icmp ult i64 %686, %64
  %688 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %689 = ptrtoint ptr %688 to i64
  %690 = sub i64 %689, %246
  %691 = ashr exact i64 %690, 3
  br i1 %687, label %692, label %694

692:                                              ; preds = %684
  %693 = icmp slt i64 %691, %686
  br i1 %693, label %696, label %699

694:                                              ; preds = %684
  %695 = icmp slt i64 %691, %64
  br i1 %695, label %696, label %699

696:                                              ; preds = %694, %692
  %697 = phi i64 [ %686, %692 ], [ %64, %694 ]
  %698 = call ptr @Perl_stack_grow(ptr noundef %244, ptr noundef %244, i64 noundef %697) #13
  br label %699

699:                                              ; preds = %696, %692, %694
  %700 = phi ptr [ %244, %692 ], [ %244, %694 ], [ %698, %696 ]
  br i1 %63, label %739, label %702

701:                                              ; preds = %683
  br i1 %63, label %739, label %703

702:                                              ; preds = %699
  br i1 %350, label %703, label %770

703:                                              ; preds = %701, %702
  %704 = phi ptr [ %700, %702 ], [ %244, %701 ]
  %705 = add i64 %346, 1
  %706 = call i64 @llvm.umax.i64(i64 %65, i64 %705)
  %707 = xor i64 %346, -1
  %708 = add i64 %706, %707
  %709 = freeze i64 %708
  %710 = add i64 %353, -1
  %711 = call i64 @llvm.umin.i64(i64 %709, i64 %710)
  %712 = add i64 %711, 1
  %713 = icmp ult i64 %712, 9
  br i1 %713, label %725, label %714

714:                                              ; preds = %703
  %715 = and i64 %712, 7
  %716 = icmp eq i64 %715, 0
  %717 = select i1 %716, i64 8, i64 %715
  %718 = sub i64 %712, %717
  %719 = getelementptr i8, ptr %345, i64 %718
  %720 = sub i64 %353, %718
  br label %721

721:                                              ; preds = %721, %714
  %722 = phi i64 [ 0, %714 ], [ %723, %721 ]
  %723 = add nuw i64 %722, 8
  %724 = icmp eq i64 %723, %718
  br i1 %724, label %725, label %721, !llvm.loop !193

725:                                              ; preds = %721, %703
  %726 = phi i64 [ 0, %703 ], [ %718, %721 ]
  %727 = phi ptr [ %345, %703 ], [ %719, %721 ]
  %728 = phi i64 [ %353, %703 ], [ %720, %721 ]
  br label %729

729:                                              ; preds = %725, %735
  %730 = phi i64 [ %736, %735 ], [ %726, %725 ]
  %731 = phi ptr [ %737, %735 ], [ %727, %725 ]
  %732 = phi i64 [ %733, %735 ], [ %728, %725 ]
  %733 = add nsw i64 %732, -1
  %734 = icmp eq i64 %733, 0
  br i1 %734, label %1114, label %735

735:                                              ; preds = %729
  %736 = add nuw nsw i64 %730, 1
  %737 = getelementptr inbounds i8, ptr %731, i64 1
  %738 = icmp ult ptr %737, %62
  br i1 %738, label %729, label %1114, !llvm.loop !194

739:                                              ; preds = %701, %699
  %740 = phi ptr [ %244, %701 ], [ %700, %699 ]
  %741 = or i32 %241, 536870912
  br label %742

742:                                              ; preds = %739, %765
  %743 = phi i32 [ %766, %765 ], [ 0, %739 ]
  %744 = phi i64 [ %767, %765 ], [ 0, %739 ]
  %745 = phi ptr [ %756, %765 ], [ %345, %739 ]
  %746 = phi i64 [ %748, %765 ], [ %353, %739 ]
  %747 = phi ptr [ %768, %765 ], [ %740, %739 ]
  %748 = add nsw i64 %746, -1
  %749 = icmp eq i64 %748, 0
  br i1 %749, label %1114, label %750

750:                                              ; preds = %742
  %751 = load i8, ptr %745, align 1, !tbaa !24
  %752 = zext i8 %751 to i64
  %753 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %752
  %754 = load i8, ptr %753, align 1, !tbaa !24
  %755 = zext i8 %754 to i64
  %756 = getelementptr inbounds i8, ptr %745, i64 %755
  br i1 %350, label %757, label %762

757:                                              ; preds = %750
  %758 = add nsw i64 %744, 1
  %759 = icmp eq i8 %754, 0
  %760 = add nsw i32 %743, 1
  %761 = select i1 %759, i32 %760, i32 0
  br label %765

762:                                              ; preds = %750
  %763 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull %745, i64 noundef %755, i32 noundef %741) #13
  %764 = getelementptr inbounds ptr, ptr %747, i64 1
  store ptr %763, ptr %764, align 8, !tbaa !5
  br label %765

765:                                              ; preds = %757, %762
  %766 = phi i32 [ %743, %762 ], [ %761, %757 ]
  %767 = phi i64 [ %744, %762 ], [ %758, %757 ]
  %768 = phi ptr [ %764, %762 ], [ %747, %757 ]
  %769 = icmp ult ptr %756, %62
  br i1 %769, label %742, label %1114, !llvm.loop !195

770:                                              ; preds = %702, %780
  %771 = phi ptr [ %782, %780 ], [ %345, %702 ]
  %772 = phi i64 [ %774, %780 ], [ %353, %702 ]
  %773 = phi ptr [ %781, %780 ], [ %700, %702 ]
  %774 = add nsw i64 %772, -1
  %775 = icmp eq i64 %774, 0
  br i1 %775, label %1114, label %776

776:                                              ; preds = %770
  %777 = call ptr @Perl_newSVpvn(ptr noundef %771, i64 noundef 1) #13
  br i1 %240, label %780, label %778

778:                                              ; preds = %776
  %779 = call ptr @Perl_sv_2mortal(ptr noundef %777) #13
  br label %780

780:                                              ; preds = %778, %776
  %781 = getelementptr inbounds ptr, ptr %773, i64 1
  store ptr %777, ptr %781, align 8, !tbaa !5
  %782 = getelementptr inbounds i8, ptr %771, i64 1
  %783 = icmp ult ptr %782, %62
  br i1 %783, label %770, label %1114, !llvm.loop !196

784:                                              ; preds = %679
  %785 = getelementptr inbounds %struct.p5rx, ptr %86, i64 0, i32 2
  %786 = load i32, ptr %785, align 4, !tbaa !197
  %787 = and i32 %786, 536870912
  %788 = icmp ne i32 %787, 0
  %789 = xor i1 %63, %788
  %790 = and i32 %251, 6291456
  %791 = icmp eq i32 %790, 0
  %792 = or i1 %791, %789
  %793 = getelementptr inbounds %struct.regexp, ptr %249, i64 0, i32 12
  %794 = load i32, ptr %793, align 8, !tbaa !199
  br i1 %792, label %938, label %795

795:                                              ; preds = %784
  %796 = and i32 %251, 524288
  %797 = icmp ne i32 %796, 0
  %798 = and i32 %251, 16777216
  %799 = or i32 %794, %798
  %800 = icmp eq i32 %799, 0
  %801 = and i1 %797, %800
  br i1 %801, label %802, label %938

802:                                              ; preds = %795
  %803 = getelementptr inbounds %struct.regexp, ptr %249, i64 0, i32 4
  %804 = load ptr, ptr %803, align 8, !tbaa !200
  %805 = getelementptr inbounds %struct.regexp_engine, ptr %804, i64 0, i32 3
  %806 = load ptr, ptr %805, align 8, !tbaa !201
  %807 = call ptr %806(ptr noundef nonnull %86) #13
  %808 = load ptr, ptr %87, align 8, !tbaa !24
  %809 = getelementptr inbounds %struct.regexp, ptr %808, i64 0, i32 9
  %810 = load i64, ptr %809, align 8, !tbaa !203
  store i64 %810, ptr %1, align 8, !tbaa !71
  %811 = icmp eq i64 %810, 1
  br i1 %811, label %812, label %889

812:                                              ; preds = %802
  %813 = and i32 %251, 8388608
  %814 = load i32, ptr %785, align 4, !tbaa !197
  %815 = and i32 %814, 536870912
  %816 = or i32 %815, %813
  %817 = icmp eq i32 %816, 0
  br i1 %817, label %818, label %889

818:                                              ; preds = %812
  %819 = getelementptr inbounds %struct.sv, ptr %807, i64 0, i32 2
  %820 = load i32, ptr %819, align 4, !tbaa !16
  %821 = and i32 %820, 2098176
  %822 = icmp eq i32 %821, 1024
  br i1 %822, label %823, label %826

823:                                              ; preds = %818
  %824 = getelementptr inbounds %struct.sv, ptr %807, i64 0, i32 3
  %825 = load ptr, ptr %824, align 8, !tbaa !24
  br label %828

826:                                              ; preds = %818
  %827 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %807, ptr noundef null, i32 noundef 34) #13
  br label %828

828:                                              ; preds = %826, %823
  %829 = phi ptr [ %825, %823 ], [ %827, %826 ]
  %830 = load i8, ptr %829, align 1, !tbaa !24
  %831 = add nsw i64 %353, -1
  %832 = icmp eq i64 %831, 0
  br i1 %832, label %1114, label %833

833:                                              ; preds = %828
  %834 = select i1 %63, i32 536870912, i32 0
  %835 = or i32 %241, %834
  br label %836

836:                                              ; preds = %833, %885
  %837 = phi i64 [ %831, %833 ], [ %887, %885 ]
  %838 = phi ptr [ %244, %833 ], [ %878, %885 ]
  %839 = phi ptr [ %345, %833 ], [ %886, %885 ]
  %840 = phi i64 [ 0, %833 ], [ %877, %885 ]
  %841 = phi i32 [ 0, %833 ], [ %876, %885 ]
  %842 = ptrtoint ptr %839 to i64
  %843 = icmp ult ptr %839, %62
  br i1 %843, label %844, label %1114

844:                                              ; preds = %836
  %845 = getelementptr i8, ptr %839, i64 %65
  %846 = sub i64 0, %842
  %847 = getelementptr i8, ptr %845, i64 %846
  br label %848

848:                                              ; preds = %844, %852
  %849 = phi ptr [ %853, %852 ], [ %839, %844 ]
  %850 = load i8, ptr %849, align 1, !tbaa !24
  %851 = icmp eq i8 %850, %830
  br i1 %851, label %855, label %852

852:                                              ; preds = %848
  %853 = getelementptr inbounds i8, ptr %849, i64 1
  %854 = icmp eq ptr %853, %847
  br i1 %854, label %1114, label %848, !llvm.loop !204

855:                                              ; preds = %848
  br i1 %350, label %856, label %861

856:                                              ; preds = %855
  %857 = add nsw i64 %840, 1
  %858 = icmp eq ptr %849, %839
  %859 = add nsw i32 %841, 1
  %860 = select i1 %858, i32 %859, i32 0
  br label %875

861:                                              ; preds = %855
  %862 = ptrtoint ptr %849 to i64
  %863 = sub i64 %862, %842
  %864 = call ptr @Perl_newSVpvn_flags(ptr noundef %839, i64 noundef %863, i32 noundef %835) #13
  %865 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %866 = ptrtoint ptr %865 to i64
  %867 = ptrtoint ptr %838 to i64
  %868 = sub i64 %866, %867
  %869 = icmp slt i64 %868, 8
  br i1 %869, label %870, label %872

870:                                              ; preds = %861
  %871 = call ptr @Perl_stack_grow(ptr noundef %838, ptr noundef %838, i64 noundef 1) #13
  br label %872

872:                                              ; preds = %861, %870
  %873 = phi ptr [ %871, %870 ], [ %838, %861 ]
  %874 = getelementptr inbounds ptr, ptr %873, i64 1
  store ptr %864, ptr %874, align 8, !tbaa !5
  br label %875

875:                                              ; preds = %856, %872
  %876 = phi i32 [ %841, %872 ], [ %860, %856 ]
  %877 = phi i64 [ %840, %872 ], [ %857, %856 ]
  %878 = phi ptr [ %874, %872 ], [ %838, %856 ]
  %879 = load i64, ptr %1, align 8, !tbaa !71
  br i1 %63, label %880, label %883

880:                                              ; preds = %875
  %881 = trunc i64 %879 to i32
  %882 = call ptr @Perl_utf8_hop(ptr noundef nonnull %849, i32 noundef %881) #13
  br label %885

883:                                              ; preds = %875
  %884 = getelementptr inbounds i8, ptr %849, i64 %879
  br label %885

885:                                              ; preds = %883, %880
  %886 = phi ptr [ %882, %880 ], [ %884, %883 ]
  %887 = add nsw i64 %837, -1
  %888 = icmp eq i64 %887, 0
  br i1 %888, label %1114, label %836, !llvm.loop !205

889:                                              ; preds = %812, %802
  br i1 %681, label %890, label %1114

890:                                              ; preds = %889
  %891 = select i1 %63, i32 536870912, i32 0
  %892 = or i32 %241, %891
  br label %893

893:                                              ; preds = %890, %935
  %894 = phi ptr [ %244, %890 ], [ %928, %935 ]
  %895 = phi i64 [ %353, %890 ], [ %899, %935 ]
  %896 = phi ptr [ %345, %890 ], [ %936, %935 ]
  %897 = phi i64 [ 0, %890 ], [ %927, %935 ]
  %898 = phi i32 [ 0, %890 ], [ %926, %935 ]
  %899 = add nsw i64 %895, -1
  %900 = icmp eq i64 %899, 0
  br i1 %900, label %1114, label %901

901:                                              ; preds = %893
  %902 = call ptr @Perl_fbm_instr(ptr noundef %896, ptr noundef nonnull %62, ptr noundef %807, i32 noundef %347) #13
  %903 = icmp eq ptr %902, null
  br i1 %903, label %1114, label %904

904:                                              ; preds = %901
  br i1 %350, label %905, label %910

905:                                              ; preds = %904
  %906 = add nsw i64 %897, 1
  %907 = icmp eq ptr %902, %896
  %908 = add nsw i32 %898, 1
  %909 = select i1 %907, i32 %908, i32 0
  br label %925

910:                                              ; preds = %904
  %911 = ptrtoint ptr %902 to i64
  %912 = ptrtoint ptr %896 to i64
  %913 = sub i64 %911, %912
  %914 = call ptr @Perl_newSVpvn_flags(ptr noundef %896, i64 noundef %913, i32 noundef %892) #13
  %915 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %916 = ptrtoint ptr %915 to i64
  %917 = ptrtoint ptr %894 to i64
  %918 = sub i64 %916, %917
  %919 = icmp slt i64 %918, 8
  br i1 %919, label %920, label %922

920:                                              ; preds = %910
  %921 = call ptr @Perl_stack_grow(ptr noundef %894, ptr noundef %894, i64 noundef 1) #13
  br label %922

922:                                              ; preds = %910, %920
  %923 = phi ptr [ %921, %920 ], [ %894, %910 ]
  %924 = getelementptr inbounds ptr, ptr %923, i64 1
  store ptr %914, ptr %924, align 8, !tbaa !5
  br label %925

925:                                              ; preds = %905, %922
  %926 = phi i32 [ %898, %922 ], [ %909, %905 ]
  %927 = phi i64 [ %897, %922 ], [ %906, %905 ]
  %928 = phi ptr [ %924, %922 ], [ %894, %905 ]
  %929 = load i64, ptr %1, align 8, !tbaa !71
  br i1 %63, label %930, label %933

930:                                              ; preds = %925
  %931 = trunc i64 %929 to i32
  %932 = call ptr @Perl_utf8_hop(ptr noundef nonnull %902, i32 noundef %931) #13
  br label %935

933:                                              ; preds = %925
  %934 = getelementptr inbounds i8, ptr %902, i64 %929
  br label %935

935:                                              ; preds = %933, %930
  %936 = phi ptr [ %932, %930 ], [ %934, %933 ]
  %937 = icmp ult ptr %936, %62
  br i1 %937, label %893, label %1114, !llvm.loop !206

938:                                              ; preds = %784, %795
  %939 = zext i32 %794 to i64
  %940 = mul i64 %64, %939
  %941 = add i64 %940, %66
  br i1 %681, label %942, label %1114

942:                                              ; preds = %938
  %943 = select i1 %63, i32 536870912, i32 0
  %944 = or i32 %241, %943
  br label %945

945:                                              ; preds = %942, %1103
  %946 = phi ptr [ %244, %942 ], [ %1107, %1103 ]
  %947 = phi i64 [ %353, %942 ], [ %951, %1103 ]
  %948 = phi ptr [ %345, %942 ], [ %1112, %1103 ]
  %949 = phi i64 [ 0, %942 ], [ %1106, %1103 ]
  %950 = phi i32 [ 0, %942 ], [ %1105, %1103 ]
  %951 = add nsw i64 %947, -1
  %952 = icmp eq i64 %951, 0
  br i1 %952, label %1114, label %953

953:                                              ; preds = %945
  store ptr %946, ptr @PL_stack_sp, align 8, !tbaa !5
  %954 = load ptr, ptr %87, align 8, !tbaa !24
  %955 = getelementptr inbounds %struct.regexp, ptr %954, i64 0, i32 4
  %956 = load ptr, ptr %955, align 8, !tbaa !200
  %957 = getelementptr inbounds %struct.regexp_engine, ptr %956, i64 0, i32 1
  %958 = load ptr, ptr %957, align 8, !tbaa !207
  %959 = call i32 %958(ptr noundef nonnull %86, ptr noundef %948, ptr noundef nonnull %62, ptr noundef %45, i64 noundef 1, ptr noundef %29, ptr noundef null, i32 noundef 0) #13
  %960 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %961 = icmp eq i32 %959, 0
  br i1 %961, label %1114, label %962

962:                                              ; preds = %953
  %963 = load ptr, ptr %87, align 8, !tbaa !24
  %964 = getelementptr inbounds %struct.regexp, ptr %963, i64 0, i32 7
  %965 = load i32, ptr %964, align 8, !tbaa !174
  %966 = and i32 %965, 67108864
  %967 = icmp eq i32 %966, 0
  br i1 %967, label %970, label %968

968:                                              ; preds = %962
  store i8 1, ptr @PL_tainted, align 1, !tbaa !81
  %969 = load ptr, ptr %87, align 8, !tbaa !24
  br label %970

970:                                              ; preds = %962, %968
  %971 = phi ptr [ %963, %962 ], [ %969, %968 ]
  %972 = getelementptr inbounds %struct.regexp, ptr %971, i64 0, i32 17
  %973 = load ptr, ptr %972, align 8, !tbaa !208
  %974 = load i64, ptr %973, align 8, !tbaa !209
  %975 = getelementptr inbounds i8, ptr %45, i64 %974
  br i1 %350, label %976, label %981

976:                                              ; preds = %970
  %977 = add nsw i64 %949, 1
  %978 = icmp eq ptr %975, %948
  %979 = add nsw i32 %950, 1
  %980 = select i1 %978, i32 %979, i32 0
  br label %997

981:                                              ; preds = %970
  %982 = ptrtoint ptr %975 to i64
  %983 = ptrtoint ptr %948 to i64
  %984 = sub i64 %982, %983
  %985 = call ptr @Perl_newSVpvn_flags(ptr noundef %948, i64 noundef %984, i32 noundef %944) #13
  %986 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %987 = ptrtoint ptr %986 to i64
  %988 = ptrtoint ptr %960 to i64
  %989 = sub i64 %987, %988
  %990 = icmp slt i64 %989, 8
  br i1 %990, label %991, label %993

991:                                              ; preds = %981
  %992 = call ptr @Perl_stack_grow(ptr noundef %960, ptr noundef %960, i64 noundef 1) #13
  br label %993

993:                                              ; preds = %981, %991
  %994 = phi ptr [ %992, %991 ], [ %960, %981 ]
  %995 = getelementptr inbounds ptr, ptr %994, i64 1
  store ptr %985, ptr %995, align 8, !tbaa !5
  %996 = load ptr, ptr %87, align 8, !tbaa !24
  br label %997

997:                                              ; preds = %976, %993
  %998 = phi ptr [ %996, %993 ], [ %971, %976 ]
  %999 = phi i32 [ %950, %993 ], [ %980, %976 ]
  %1000 = phi i64 [ %949, %993 ], [ %977, %976 ]
  %1001 = phi ptr [ %995, %993 ], [ %960, %976 ]
  %1002 = getelementptr inbounds %struct.regexp, ptr %998, i64 0, i32 12
  %1003 = load i32, ptr %1002, align 8, !tbaa !199
  %1004 = icmp slt i32 %1003, 1
  br i1 %1004, label %1103, label %1005

1005:                                             ; preds = %997
  br i1 %350, label %1006, label %1049

1006:                                             ; preds = %1005
  %1007 = add nuw i32 %1003, 1
  %1008 = getelementptr inbounds %struct.regexp, ptr %998, i64 0, i32 17
  %1009 = load ptr, ptr %1008, align 8, !tbaa !208
  %1010 = getelementptr inbounds %struct.regexp_paren_pair, ptr %1009, i64 1
  %1011 = load i64, ptr %1010, align 8, !tbaa !209
  %1012 = getelementptr inbounds %struct.regexp_paren_pair, ptr %1009, i64 1, i32 1
  %1013 = load i64, ptr %1012, align 8, !tbaa !211
  %1014 = add nsw i64 %1000, 1
  %1015 = icmp eq i64 %1013, %1011
  %1016 = add nsw i32 %999, 1
  %1017 = select i1 %1015, i32 %1016, i32 0
  %1018 = icmp eq i32 %1007, 2
  br i1 %1018, label %1103, label %1019

1019:                                             ; preds = %1006
  %1020 = zext i32 %1007 to i64
  %1021 = and i64 %1020, 1
  %1022 = icmp eq i32 %1007, 3
  br i1 %1022, label %1087, label %1023

1023:                                             ; preds = %1019
  %1024 = and i64 %1020, 4294967294
  %1025 = add nsw i64 %1024, -4
  br label %1026

1026:                                             ; preds = %1026, %1023
  %1027 = phi i64 [ 2, %1023 ], [ %1046, %1026 ]
  %1028 = phi i64 [ %1014, %1023 ], [ %1042, %1026 ]
  %1029 = phi i32 [ %1017, %1023 ], [ %1045, %1026 ]
  %1030 = phi i64 [ 0, %1023 ], [ %1047, %1026 ]
  %1031 = getelementptr inbounds %struct.regexp_paren_pair, ptr %1009, i64 %1027
  %1032 = load i64, ptr %1031, align 8, !tbaa !209
  %1033 = getelementptr inbounds %struct.regexp_paren_pair, ptr %1009, i64 %1027, i32 1
  %1034 = load i64, ptr %1033, align 8, !tbaa !211
  %1035 = icmp eq i64 %1034, %1032
  %1036 = add nsw i32 %1029, 2
  %1037 = or i64 %1027, 1
  %1038 = getelementptr inbounds %struct.regexp_paren_pair, ptr %1009, i64 %1037
  %1039 = load i64, ptr %1038, align 8, !tbaa !209
  %1040 = getelementptr inbounds %struct.regexp_paren_pair, ptr %1009, i64 %1037, i32 1
  %1041 = load i64, ptr %1040, align 8, !tbaa !211
  %1042 = add nsw i64 %1028, 2
  %1043 = icmp eq i64 %1041, %1039
  %1044 = select i1 %1035, i32 %1036, i32 1
  %1045 = select i1 %1043, i32 %1044, i32 0
  %1046 = add nuw nsw i64 %1027, 2
  %1047 = add i64 %1030, 2
  %1048 = icmp eq i64 %1030, %1025
  br i1 %1048, label %1087, label %1026, !llvm.loop !212

1049:                                             ; preds = %1005, %1078
  %1050 = phi i64 [ %1081, %1078 ], [ 1, %1005 ]
  %1051 = phi ptr [ %1082, %1078 ], [ %998, %1005 ]
  %1052 = phi ptr [ %1080, %1078 ], [ %1001, %1005 ]
  %1053 = getelementptr inbounds %struct.regexp, ptr %1051, i64 0, i32 17
  %1054 = load ptr, ptr %1053, align 8, !tbaa !208
  %1055 = getelementptr inbounds %struct.regexp_paren_pair, ptr %1054, i64 %1050
  %1056 = load i64, ptr %1055, align 8, !tbaa !209
  %1057 = getelementptr inbounds %struct.regexp_paren_pair, ptr %1054, i64 %1050, i32 1
  %1058 = load i64, ptr %1057, align 8, !tbaa !211
  %1059 = icmp slt i64 %1058, 0
  %1060 = icmp slt i64 %1056, 0
  %1061 = select i1 %1059, i1 true, i1 %1060
  br i1 %1061, label %1069, label %1062

1062:                                             ; preds = %1049
  %1063 = getelementptr inbounds i8, ptr %45, i64 %1058
  %1064 = getelementptr inbounds i8, ptr %45, i64 %1056
  %1065 = ptrtoint ptr %1063 to i64
  %1066 = ptrtoint ptr %1064 to i64
  %1067 = sub i64 %1065, %1066
  %1068 = call ptr @Perl_newSVpvn_flags(ptr noundef %1064, i64 noundef %1067, i32 noundef %944) #13
  br label %1069

1069:                                             ; preds = %1049, %1062
  %1070 = phi ptr [ %1068, %1062 ], [ @PL_sv_undef, %1049 ]
  %1071 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %1072 = ptrtoint ptr %1071 to i64
  %1073 = ptrtoint ptr %1052 to i64
  %1074 = sub i64 %1072, %1073
  %1075 = icmp slt i64 %1074, 8
  br i1 %1075, label %1076, label %1078

1076:                                             ; preds = %1069
  %1077 = call ptr @Perl_stack_grow(ptr noundef %1052, ptr noundef %1052, i64 noundef 1) #13
  br label %1078

1078:                                             ; preds = %1069, %1076
  %1079 = phi ptr [ %1077, %1076 ], [ %1052, %1069 ]
  %1080 = getelementptr inbounds ptr, ptr %1079, i64 1
  store ptr %1070, ptr %1080, align 8, !tbaa !5
  %1081 = add nuw nsw i64 %1050, 1
  %1082 = load ptr, ptr %87, align 8, !tbaa !24
  %1083 = getelementptr inbounds %struct.regexp, ptr %1082, i64 0, i32 12
  %1084 = load i32, ptr %1083, align 8, !tbaa !199
  %1085 = sext i32 %1084 to i64
  %1086 = icmp slt i64 %1050, %1085
  br i1 %1086, label %1049, label %1103, !llvm.loop !214

1087:                                             ; preds = %1026, %1019
  %1088 = phi i64 [ undef, %1019 ], [ %1042, %1026 ]
  %1089 = phi i32 [ undef, %1019 ], [ %1045, %1026 ]
  %1090 = phi i64 [ 2, %1019 ], [ %1046, %1026 ]
  %1091 = phi i64 [ %1014, %1019 ], [ %1042, %1026 ]
  %1092 = phi i32 [ %1017, %1019 ], [ %1045, %1026 ]
  %1093 = icmp eq i64 %1021, 0
  br i1 %1093, label %1103, label %1094

1094:                                             ; preds = %1087
  %1095 = getelementptr inbounds %struct.regexp_paren_pair, ptr %1009, i64 %1090
  %1096 = load i64, ptr %1095, align 8, !tbaa !209
  %1097 = getelementptr inbounds %struct.regexp_paren_pair, ptr %1009, i64 %1090, i32 1
  %1098 = load i64, ptr %1097, align 8, !tbaa !211
  %1099 = add nsw i64 %1091, 1
  %1100 = icmp eq i64 %1098, %1096
  %1101 = add nsw i32 %1092, 1
  %1102 = select i1 %1100, i32 %1101, i32 0
  br label %1103

1103:                                             ; preds = %1078, %1094, %1087, %1006, %997
  %1104 = phi ptr [ %998, %997 ], [ %998, %1006 ], [ %998, %1087 ], [ %998, %1094 ], [ %1082, %1078 ]
  %1105 = phi i32 [ %999, %997 ], [ %1017, %1006 ], [ %1089, %1087 ], [ %1102, %1094 ], [ %999, %1078 ]
  %1106 = phi i64 [ %1000, %997 ], [ %1014, %1006 ], [ %1088, %1087 ], [ %1099, %1094 ], [ %1000, %1078 ]
  %1107 = phi ptr [ %1001, %997 ], [ %1001, %1006 ], [ %1001, %1087 ], [ %1001, %1094 ], [ %1080, %1078 ]
  %1108 = getelementptr inbounds %struct.regexp, ptr %1104, i64 0, i32 17
  %1109 = load ptr, ptr %1108, align 8, !tbaa !208
  %1110 = getelementptr inbounds %struct.regexp_paren_pair, ptr %1109, i64 0, i32 1
  %1111 = load i64, ptr %1110, align 8, !tbaa !211
  %1112 = getelementptr inbounds i8, ptr %45, i64 %1111
  %1113 = icmp ult ptr %1112, %62
  br i1 %1113, label %945, label %1114

1114:                                             ; preds = %478, %617, %673, %649, %901, %935, %893, %885, %836, %852, %945, %1103, %953, %770, %780, %735, %729, %765, %742, %356, %624, %889, %828, %938
  %1115 = phi i32 [ 0, %938 ], [ 0, %828 ], [ 0, %889 ], [ 0, %624 ], [ 0, %356 ], [ %743, %742 ], [ %766, %765 ], [ 0, %729 ], [ 0, %735 ], [ 0, %780 ], [ 0, %770 ], [ %950, %945 ], [ %1105, %1103 ], [ %950, %953 ], [ %841, %852 ], [ %841, %836 ], [ %876, %885 ], [ %898, %901 ], [ %926, %935 ], [ %898, %893 ], [ %674, %673 ], [ %635, %649 ], [ %367, %478 ], [ %502, %617 ]
  %1116 = phi i64 [ %941, %938 ], [ %66, %828 ], [ %66, %889 ], [ %66, %624 ], [ %66, %356 ], [ %66, %742 ], [ %66, %765 ], [ %66, %729 ], [ %66, %735 ], [ %66, %780 ], [ %66, %770 ], [ %941, %953 ], [ %941, %1103 ], [ %941, %945 ], [ %66, %852 ], [ %66, %836 ], [ %66, %885 ], [ %66, %893 ], [ %66, %935 ], [ %66, %901 ], [ %66, %649 ], [ %66, %673 ], [ %66, %617 ], [ %66, %478 ]
  %1117 = phi i64 [ 0, %938 ], [ 0, %828 ], [ 0, %889 ], [ 0, %624 ], [ 0, %356 ], [ %744, %742 ], [ %767, %765 ], [ %736, %735 ], [ %730, %729 ], [ 0, %780 ], [ 0, %770 ], [ %949, %945 ], [ %1106, %1103 ], [ %949, %953 ], [ %840, %852 ], [ %840, %836 ], [ %877, %885 ], [ %897, %901 ], [ %927, %935 ], [ %897, %893 ], [ %675, %673 ], [ %634, %649 ], [ %366, %478 ], [ %503, %617 ]
  %1118 = phi ptr [ %345, %938 ], [ %345, %828 ], [ %345, %889 ], [ %345, %624 ], [ %345, %356 ], [ %745, %742 ], [ %756, %765 ], [ %737, %735 ], [ %731, %729 ], [ %771, %770 ], [ %782, %780 ], [ %948, %945 ], [ %1112, %1103 ], [ %948, %953 ], [ %839, %852 ], [ %839, %836 ], [ %886, %885 ], [ %896, %901 ], [ %936, %935 ], [ %896, %893 ], [ %651, %673 ], [ %633, %649 ], [ %365, %478 ], [ %618, %617 ]
  %1119 = phi ptr [ %244, %938 ], [ %244, %828 ], [ %244, %889 ], [ %244, %624 ], [ %244, %356 ], [ %747, %742 ], [ %768, %765 ], [ %704, %729 ], [ %704, %735 ], [ %773, %770 ], [ %781, %780 ], [ %946, %945 ], [ %1107, %1103 ], [ %960, %953 ], [ %838, %852 ], [ %838, %836 ], [ %878, %885 ], [ %894, %901 ], [ %928, %935 ], [ %894, %893 ], [ %676, %673 ], [ %632, %649 ], [ %364, %478 ], [ %504, %617 ]
  br i1 %350, label %1129, label %1120

1120:                                             ; preds = %1114
  %1121 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %1122 = ptrtoint ptr %1119 to i64
  %1123 = ptrtoint ptr %1121 to i64
  %1124 = sub i64 %1122, %1123
  %1125 = ashr exact i64 %1124, 3
  %1126 = shl i64 %248, 29
  %1127 = ashr i64 %1126, 32
  %1128 = sub nsw i64 %1125, %1127
  br label %1129

1129:                                             ; preds = %1120, %1114
  %1130 = phi i64 [ %1117, %1114 ], [ %1128, %1120 ]
  %1131 = icmp sgt i64 %1130, %1116
  br i1 %1131, label %1132, label %1134

1132:                                             ; preds = %1129
  %1133 = call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.58) #13
  br label %1288

1134:                                             ; preds = %1129
  %1135 = icmp ult ptr %1118, %62
  br i1 %1135, label %1141, label %1136

1136:                                             ; preds = %1134
  %1137 = icmp ne i64 %1130, 0
  %1138 = and i64 %27, 4294967295
  %1139 = icmp ne i64 %1138, 0
  %1140 = select i1 %1137, i1 %1139, i1 false
  br i1 %1140, label %1141, label %1161

1141:                                             ; preds = %1136, %1134
  br i1 %350, label %1158, label %1142

1142:                                             ; preds = %1141
  %1143 = ptrtoint ptr %1118 to i64
  %1144 = sub i64 %65, %1143
  %1145 = select i1 %63, i32 536870912, i32 0
  %1146 = or i32 %241, %1145
  %1147 = call ptr @Perl_newSVpvn_flags(ptr noundef %1118, i64 noundef %1144, i32 noundef %1146) #13
  %1148 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %1149 = ptrtoint ptr %1148 to i64
  %1150 = ptrtoint ptr %1119 to i64
  %1151 = sub i64 %1149, %1150
  %1152 = icmp slt i64 %1151, 8
  br i1 %1152, label %1153, label %1155

1153:                                             ; preds = %1142
  %1154 = call ptr @Perl_stack_grow(ptr noundef %1119, ptr noundef %1119, i64 noundef 1) #13
  br label %1155

1155:                                             ; preds = %1142, %1153
  %1156 = phi ptr [ %1154, %1153 ], [ %1119, %1142 ]
  %1157 = getelementptr inbounds ptr, ptr %1156, i64 1
  store ptr %1147, ptr %1157, align 8, !tbaa !5
  br label %1158

1158:                                             ; preds = %1155, %1141
  %1159 = phi ptr [ %1119, %1141 ], [ %1157, %1155 ]
  %1160 = add nsw i64 %1130, 1
  br label %1187

1161:                                             ; preds = %1136
  br i1 %1139, label %1187, label %1162

1162:                                             ; preds = %1161
  br i1 %350, label %1165, label %1163

1163:                                             ; preds = %1162
  %1164 = icmp sgt i64 %1130, 0
  br i1 %1164, label %1168, label %1187

1165:                                             ; preds = %1162
  %1166 = sext i32 %1115 to i64
  %1167 = sub nsw i64 %1130, %1166
  br label %1187

1168:                                             ; preds = %1163, %1183
  %1169 = phi ptr [ %1184, %1183 ], [ %1119, %1163 ]
  %1170 = phi i64 [ %1185, %1183 ], [ %1130, %1163 ]
  %1171 = load ptr, ptr %1169, align 8, !tbaa !5
  %1172 = icmp eq ptr %1171, null
  br i1 %1172, label %1183, label %1173

1173:                                             ; preds = %1168
  %1174 = load ptr, ptr %1171, align 8, !tbaa !26
  %1175 = icmp eq ptr %1174, null
  br i1 %1175, label %1180, label %1176

1176:                                             ; preds = %1173
  %1177 = getelementptr inbounds %struct.xpv, ptr %1174, i64 0, i32 2
  %1178 = load i64, ptr %1177, align 8, !tbaa !55
  %1179 = icmp eq i64 %1178, 0
  br i1 %1179, label %1180, label %1187

1180:                                             ; preds = %1173, %1176
  br i1 %239, label %1183, label %1181

1181:                                             ; preds = %1180
  %1182 = call ptr @Perl_sv_2mortal(ptr noundef nonnull %1171) #13
  br label %1183

1183:                                             ; preds = %1168, %1181, %1180
  %1184 = getelementptr inbounds ptr, ptr %1169, i64 -1
  store ptr @PL_sv_undef, ptr %1169, align 8, !tbaa !5
  %1185 = add nsw i64 %1170, -1
  %1186 = icmp sgt i64 %1170, 1
  br i1 %1186, label %1168, label %1187, !llvm.loop !215

1187:                                             ; preds = %1183, %1176, %1163, %1161, %1165, %1158
  %1188 = phi i64 [ %1160, %1158 ], [ %1130, %1161 ], [ %1167, %1165 ], [ %1130, %1163 ], [ 0, %1183 ], [ %1170, %1176 ]
  %1189 = phi ptr [ %1159, %1158 ], [ %1119, %1161 ], [ %1119, %1165 ], [ %1119, %1163 ], [ %1184, %1183 ], [ %1169, %1176 ]
  store ptr %1189, ptr @PL_stack_sp, align 8, !tbaa !5
  %1190 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !57
  %1191 = icmp sgt i32 %1190, %78
  br i1 %1191, label %1192, label %1194

1192:                                             ; preds = %1187
  call void @Perl_leave_scope(i32 noundef %78) #13
  %1193 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %1194

1194:                                             ; preds = %1192, %1187
  %1195 = phi ptr [ %1193, %1192 ], [ %1189, %1187 ]
  br i1 %238, label %1265, label %1196

1196:                                             ; preds = %1194
  %1197 = icmp eq ptr %242, null
  br i1 %1197, label %1198, label %1227

1198:                                             ; preds = %1196
  %1199 = getelementptr inbounds %struct.av, ptr %243, i64 0, i32 2
  %1200 = load i32, ptr %1199, align 4, !tbaa !74
  %1201 = and i32 %1200, 4194304
  %1202 = icmp eq i32 %1201, 0
  br i1 %1202, label %1206, label %1203

1203:                                             ; preds = %1198
  %1204 = call i32 @Perl_mg_set(ptr noundef nonnull %243) #13
  %1205 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  br label %1206

1206:                                             ; preds = %1203, %1198
  %1207 = phi ptr [ %1205, %1203 ], [ %1195, %1198 ]
  %1208 = icmp eq i32 %77, 3
  br i1 %1208, label %1209, label %1270

1209:                                             ; preds = %1206
  %1210 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %1211 = ptrtoint ptr %1210 to i64
  %1212 = ptrtoint ptr %1207 to i64
  %1213 = sub i64 %1211, %1212
  %1214 = ashr exact i64 %1213, 3
  %1215 = icmp slt i64 %1214, %1188
  br i1 %1215, label %1216, label %1218

1216:                                             ; preds = %1209
  %1217 = call ptr @Perl_stack_grow(ptr noundef %1207, ptr noundef %1207, i64 noundef %1188) #13
  br label %1218

1218:                                             ; preds = %1209, %1216
  %1219 = phi ptr [ %1217, %1216 ], [ %1207, %1209 ]
  %1220 = getelementptr inbounds ptr, ptr %1219, i64 1
  %1221 = getelementptr inbounds %struct.av, ptr %243, i64 0, i32 3
  %1222 = load ptr, ptr %1221, align 8, !tbaa !24
  %1223 = shl i64 %1188, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1220, ptr align 1 %1222, i64 %1223, i1 false)
  %1224 = getelementptr inbounds ptr, ptr %1219, i64 %1188
  store ptr %1224, ptr @PL_stack_sp, align 8, !tbaa !5
  %1225 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %1226 = load ptr, ptr %1225, align 8, !tbaa !13
  br label %1288

1227:                                             ; preds = %1196
  call void @Perl_push_scope() #13
  %1228 = load ptr, ptr getelementptr inbounds ([35 x ptr], ptr @PL_sv_consts, i64 0, i64 9), align 8, !tbaa !5
  %1229 = icmp eq ptr %1228, null
  br i1 %1229, label %1230, label %1232

1230:                                             ; preds = %1227
  %1231 = call ptr @Perl_newSVpv_share(ptr noundef nonnull @.str.55, i32 noundef 0) #13
  store ptr %1231, ptr getelementptr inbounds ([35 x ptr], ptr @PL_sv_consts, i64 0, i64 9), align 8, !tbaa !5
  br label %1232

1232:                                             ; preds = %1227, %1230
  %1233 = phi ptr [ %1231, %1230 ], [ %1228, %1227 ]
  %1234 = call i32 @Perl_call_sv(ptr noundef %1233, i32 noundef 4102) #13
  call void @Perl_pop_scope() #13
  %1235 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %1236 = icmp eq i32 %77, 3
  br i1 %1236, label %1237, label %1270

1237:                                             ; preds = %1232
  %1238 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %1239 = ptrtoint ptr %1238 to i64
  %1240 = ptrtoint ptr %1235 to i64
  %1241 = sub i64 %1239, %1240
  %1242 = ashr exact i64 %1241, 3
  %1243 = icmp slt i64 %1242, %1188
  br i1 %1243, label %1244, label %1246

1244:                                             ; preds = %1237
  %1245 = call ptr @Perl_stack_grow(ptr noundef %1235, ptr noundef %1235, i64 noundef %1188) #13
  br label %1246

1246:                                             ; preds = %1237, %1244
  %1247 = phi ptr [ %1245, %1244 ], [ %1235, %1237 ]
  %1248 = icmp sgt i64 %1188, 0
  br i1 %1248, label %1249, label %1261

1249:                                             ; preds = %1246, %1256
  %1250 = phi i64 [ %1259, %1256 ], [ 0, %1246 ]
  %1251 = phi ptr [ %1258, %1256 ], [ %1247, %1246 ]
  %1252 = call ptr @Perl_av_fetch(ptr noundef %243, i64 noundef %1250, i32 noundef 0) #13
  %1253 = icmp eq ptr %1252, null
  br i1 %1253, label %1256, label %1254

1254:                                             ; preds = %1249
  %1255 = load ptr, ptr %1252, align 8, !tbaa !5
  br label %1256

1256:                                             ; preds = %1249, %1254
  %1257 = phi ptr [ %1255, %1254 ], [ @PL_sv_undef, %1249 ]
  %1258 = getelementptr inbounds ptr, ptr %1251, i64 1
  store ptr %1257, ptr %1258, align 8, !tbaa !5
  %1259 = add nuw nsw i64 %1250, 1
  %1260 = icmp eq i64 %1259, %1188
  br i1 %1260, label %1261, label %1249, !llvm.loop !216

1261:                                             ; preds = %1256, %1246
  %1262 = phi ptr [ %1247, %1246 ], [ %1258, %1256 ]
  store ptr %1262, ptr @PL_stack_sp, align 8, !tbaa !5
  %1263 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %1264 = load ptr, ptr %1263, align 8, !tbaa !13
  br label %1288

1265:                                             ; preds = %1194
  %1266 = icmp eq i32 %77, 3
  br i1 %1266, label %1267, label %1270

1267:                                             ; preds = %1265
  %1268 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %1269 = load ptr, ptr %1268, align 8, !tbaa !13
  br label %1288

1270:                                             ; preds = %1265, %1206, %1232
  %1271 = phi ptr [ %1235, %1232 ], [ %1207, %1206 ], [ %1195, %1265 ]
  %1272 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %1273 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %1274 = getelementptr inbounds %struct.op, ptr %1273, i64 0, i32 3
  %1275 = load i64, ptr %1274, align 8, !tbaa !14
  %1276 = getelementptr inbounds ptr, ptr %1272, i64 %1275
  %1277 = load ptr, ptr %1276, align 8, !tbaa !5
  call void @Perl_sv_setiv(ptr noundef %1277, i64 noundef %1188) #13
  %1278 = getelementptr inbounds %struct.sv, ptr %1277, i64 0, i32 2
  %1279 = load i32, ptr %1278, align 4, !tbaa !16
  %1280 = and i32 %1279, 4194304
  %1281 = icmp eq i32 %1280, 0
  br i1 %1281, label %1284, label %1282

1282:                                             ; preds = %1270
  %1283 = call i32 @Perl_mg_set(ptr noundef nonnull %1277) #13
  br label %1284

1284:                                             ; preds = %1270, %1282
  %1285 = getelementptr inbounds ptr, ptr %1271, i64 1
  store ptr %1277, ptr %1285, align 8, !tbaa !5
  store ptr %1285, ptr @PL_stack_sp, align 8, !tbaa !5
  %1286 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %1287 = load ptr, ptr %1286, align 8, !tbaa !13
  br label %1288

1288:                                             ; preds = %1284, %1267, %1261, %1218, %1132, %82
  %1289 = phi ptr [ %1133, %1132 ], [ %1264, %1261 ], [ %1287, %1284 ], [ %1226, %1218 ], [ %1269, %1267 ], [ %83, %82 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #13
  ret ptr %1289
}

declare void @Perl_av_clear(ptr noundef) local_unnamed_addr #2

declare void @Perl_save_pushptrptr(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare ptr @__ctype_b_loc() local_unnamed_addr #7

declare ptr @Perl_utf8_hop(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_leave_scope(i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local ptr @Perl_pp_once() local_unnamed_addr #3 {
  %1 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %4 = load i64, ptr %3, align 8, !tbaa !14
  %5 = getelementptr inbounds ptr, ptr %1, i64 %4
  %6 = load ptr, ptr %5, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !16
  %9 = and i32 %8, 262144
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %0
  %12 = and i32 %8, -262145
  store i32 %12, ptr %7, align 4, !tbaa !16
  %13 = getelementptr inbounds %struct.logop, ptr %2, i64 0, i32 8
  br label %14

14:                                               ; preds = %0, %11
  %15 = phi ptr [ %13, %11 ], [ %2, %0 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  ret ptr %16
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_lock() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr %1, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_lockhook, align 8, !tbaa !5
  tail call void %3(ptr noundef %2) #13
  %4 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 255
  %7 = add nsw i32 %6, -11
  %8 = icmp ult i32 %7, 3
  br i1 %8, label %9, label %11

9:                                                ; preds = %0
  %10 = tail call fastcc ptr @S_refto(ptr noundef nonnull %2)
  br label %11

11:                                               ; preds = %0, %9
  %12 = phi ptr [ %10, %9 ], [ %2, %0 ]
  store ptr %12, ptr %1, align 8, !tbaa !5
  store ptr %1, ptr @PL_stack_sp, align 8, !tbaa !5
  %13 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %14 = load ptr, ptr %13, align 8, !tbaa !13
  ret ptr %14
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_unimplemented_op() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 511
  %5 = zext i16 %4 to i32
  %6 = icmp ugt i16 %4, 395
  br i1 %6, label %15, label %7

7:                                                ; preds = %0
  %8 = zext i16 %4 to i64
  %9 = getelementptr inbounds [0 x ptr], ptr @PL_op_name, i64 0, i64 %8
  %10 = load ptr, ptr %9, align 8, !tbaa !5
  %11 = add nsw i16 %4, -251
  %12 = icmp ult i16 %11, 13
  br i1 %12, label %13, label %15

13:                                               ; preds = %7
  %14 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @PL_no_sock_func, ptr noundef %10) #13
  br label %18

15:                                               ; preds = %0, %7
  %16 = phi ptr [ %10, %7 ], [ @.str.59, %0 ]
  %17 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.60, ptr noundef %16, i32 noundef %5) #13
  br label %18

18:                                               ; preds = %15, %13
  %19 = phi ptr [ %14, %13 ], [ %17, %15 ]
  ret ptr %19
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_coreargs() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.svop, ptr %1, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !217
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 256
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %0
  %9 = and i32 %5, -2145386240
  %10 = icmp eq i32 %9, -2147483392
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = load ptr, ptr %3, align 8, !tbaa !26
  %13 = getelementptr inbounds %struct.xpvuv, ptr %12, i64 0, i32 4
  %14 = load i64, ptr %13, align 8, !tbaa !24
  br label %17

15:                                               ; preds = %8
  %16 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %3, i32 noundef 2) #13
  br label %17

17:                                               ; preds = %15, %11
  %18 = phi i64 [ %14, %11 ], [ %16, %15 ]
  %19 = trunc i64 %18 to i32
  br label %20

20:                                               ; preds = %0, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %0 ]
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %22
  %24 = load i32, ptr %23, align 4, !tbaa !57
  %25 = and i32 %24, 128
  %26 = icmp ne i32 %25, 0
  %27 = icmp eq i32 %21, 25
  %28 = or i1 %27, %26
  %29 = load ptr, ptr @PL_defgv, align 8, !tbaa !5
  %30 = getelementptr inbounds %struct.gv, ptr %29, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8, !tbaa !24
  %32 = getelementptr inbounds %struct.gp, ptr %31, i64 0, i32 6
  %33 = load ptr, ptr %32, align 8, !tbaa !73
  %34 = icmp eq ptr %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %struct.av, ptr %33, i64 0, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !24
  %38 = load ptr, ptr %33, align 8, !tbaa !18
  %39 = getelementptr inbounds %struct.xpvav, ptr %38, i64 0, i32 2
  %40 = load i64, ptr %39, align 8, !tbaa !20
  %41 = add nsw i64 %40, 1
  br label %42

42:                                               ; preds = %20, %35
  %43 = phi ptr [ %37, %35 ], [ null, %20 ]
  %44 = phi i64 [ %41, %35 ], [ 0, %20 ]
  %45 = trunc i64 %44 to i32
  %46 = icmp eq i32 %21, 0
  %47 = lshr i32 %24, 12
  %48 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %49 = getelementptr inbounds %struct.op, ptr %48, i64 0, i32 6
  %50 = load i8, ptr %49, align 1, !tbaa !15
  %51 = icmp sgt i8 %50, -1
  %52 = icmp ult i32 %24, 4096
  %53 = select i1 %46, i1 true, i1 %52
  br i1 %53, label %72, label %54

54:                                               ; preds = %42, %61
  %55 = phi i32 [ %69, %61 ], [ 0, %42 ]
  %56 = phi i8 [ %65, %61 ], [ 0, %42 ]
  %57 = phi i32 [ %70, %61 ], [ %47, %42 ]
  %58 = phi i32 [ %62, %61 ], [ 0, %42 ]
  %59 = and i32 %57, 7
  %60 = icmp eq i32 %59, 2
  br i1 %60, label %72, label %61

61:                                               ; preds = %54
  %62 = add nuw nsw i32 %58, 1
  %63 = and i32 %57, 8
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %64, i8 %56, i8 1
  %66 = and i8 %65, 1
  %67 = icmp eq i8 %66, 0
  %68 = zext i1 %67 to i32
  %69 = add nuw nsw i32 %55, %68
  %70 = lshr i32 %57, 4
  %71 = icmp ult i32 %57, 16
  br i1 %71, label %72, label %54, !llvm.loop !219

72:                                               ; preds = %61, %54, %42
  %73 = phi i32 [ 0, %42 ], [ %55, %54 ], [ %69, %61 ]
  %74 = phi i32 [ 0, %42 ], [ 2147483647, %54 ], [ %62, %61 ]
  %75 = icmp sgt i32 %73, %45
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  %77 = icmp slt i32 %74, %45
  br i1 %77, label %78, label %97

78:                                               ; preds = %72, %76
  %79 = phi ptr [ @.str.62, %76 ], [ @.str.61, %72 ]
  br i1 %46, label %83, label %80

80:                                               ; preds = %78
  %81 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %22
  %82 = load ptr, ptr %81, align 8, !tbaa !5
  br label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %struct.svop, ptr %48, i64 0, i32 7
  %85 = load ptr, ptr %84, align 8, !tbaa !217
  %86 = getelementptr inbounds %struct.sv, ptr %85, i64 0, i32 2
  %87 = load i32, ptr %86, align 4, !tbaa !16
  %88 = and i32 %87, 2098176
  %89 = icmp eq i32 %88, 1024
  br i1 %89, label %90, label %93

90:                                               ; preds = %83
  %91 = getelementptr inbounds %struct.sv, ptr %85, i64 0, i32 3
  %92 = load ptr, ptr %91, align 8, !tbaa !24
  br label %95

93:                                               ; preds = %83
  %94 = tail call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %85, ptr noundef null, i32 noundef 34) #13
  br label %95

95:                                               ; preds = %90, %93, %80
  %96 = phi ptr [ %82, %80 ], [ %92, %90 ], [ %94, %93 ]
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef nonnull %79, ptr noundef %96) #13
  br label %97

97:                                               ; preds = %95, %76
  %98 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %99 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !5
  %100 = getelementptr inbounds %struct.stackinfo, ptr %99, i64 0, i32 1
  %101 = load ptr, ptr %100, align 8, !tbaa !220
  %102 = getelementptr inbounds %struct.stackinfo, ptr %99, i64 0, i32 4
  %103 = load i32, ptr %102, align 8, !tbaa !221
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds %struct.context, ptr %101, i64 %104, i32 0, i32 0, i32 3
  %106 = load i32, ptr %105, align 4, !tbaa !24
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds ptr, ptr %98, i64 %107
  %109 = icmp eq i32 %74, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %97
  store ptr %108, ptr @PL_stack_sp, align 8, !tbaa !5
  %111 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %112 = load ptr, ptr %111, align 8, !tbaa !13
  br label %505

113:                                              ; preds = %97
  br i1 %51, label %116, label %114

114:                                              ; preds = %113
  store ptr %108, ptr @PL_stack_sp, align 8, !tbaa !5
  %115 = tail call ptr @Perl_pp_pushmark() #13
  br label %116

116:                                              ; preds = %113, %114
  %117 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %118 = ptrtoint ptr %117 to i64
  %119 = ptrtoint ptr %108 to i64
  %120 = sub i64 %118, %119
  %121 = ashr exact i64 %120, 3
  %122 = icmp eq i32 %74, 2147483647
  %123 = select i1 %122, i32 %45, i32 %74
  %124 = sext i32 %123 to i64
  %125 = icmp slt i64 %121, %124
  br i1 %125, label %126, label %128

126:                                              ; preds = %116
  %127 = tail call ptr @Perl_stack_grow(ptr noundef %108, ptr noundef %108, i64 noundef %124) #13
  br label %128

128:                                              ; preds = %116, %126
  %129 = phi ptr [ %127, %126 ], [ %108, %116 ]
  store ptr %129, ptr @PL_stack_sp, align 8, !tbaa !5
  %130 = icmp ult i32 %24, 4096
  br i1 %130, label %501, label %131

131:                                              ; preds = %128
  %132 = icmp eq i32 %21, 378
  %133 = icmp eq i32 %21, 44
  %134 = or i1 %132, %133
  %135 = select i1 %134, i32 13, i32 12
  br label %136

136:                                              ; preds = %131, %494
  %137 = phi ptr [ %129, %131 ], [ %495, %494 ]
  %138 = phi i32 [ 0, %131 ], [ %145, %494 ]
  %139 = phi ptr [ %43, %131 ], [ %499, %494 ]
  %140 = phi i32 [ %47, %131 ], [ %496, %494 ]
  %141 = phi i32 [ %45, %131 ], [ %497, %494 ]
  %142 = icmp ne i32 %141, 0
  %143 = select i1 %142, i1 true, i1 %51
  br i1 %143, label %144, label %501

144:                                              ; preds = %136
  %145 = add nuw nsw i32 %138, 1
  %146 = and i32 %140, 7
  switch i32 %146, label %492 [
    i32 1, label %287
    i32 2, label %147
    i32 4, label %343
    i32 6, label %378
    i32 7, label %420
  ]

147:                                              ; preds = %144
  %148 = ptrtoint ptr %137 to i64
  %149 = ptrtoint ptr %139 to i64
  %150 = icmp eq i32 %141, 0
  br i1 %150, label %339, label %151

151:                                              ; preds = %147
  %152 = zext i32 %141 to i64
  %153 = icmp ult i32 %141, 16
  br i1 %153, label %264, label %154

154:                                              ; preds = %151
  %155 = add i64 %148, 8
  %156 = sub i64 %155, %149
  %157 = icmp ult i64 %156, 128
  br i1 %157, label %264, label %158

158:                                              ; preds = %154
  %159 = and i64 %152, 4294967280
  %160 = trunc i64 %159 to i32
  %161 = sub i32 %141, %160
  %162 = shl nuw nsw i64 %159, 3
  %163 = getelementptr i8, ptr %137, i64 %162
  %164 = shl nuw nsw i64 %159, 3
  %165 = getelementptr i8, ptr %139, i64 %164
  br label %166

166:                                              ; preds = %166, %158
  %167 = phi i64 [ 0, %158 ], [ %260, %166 ]
  %168 = shl i64 %167, 3
  %169 = getelementptr i8, ptr %137, i64 %168
  %170 = shl i64 %167, 3
  %171 = getelementptr i8, ptr %139, i64 %170
  %172 = shl i64 %167, 3
  %173 = or i64 %172, 8
  %174 = getelementptr i8, ptr %139, i64 %173
  %175 = shl i64 %167, 3
  %176 = or i64 %175, 16
  %177 = getelementptr i8, ptr %139, i64 %176
  %178 = shl i64 %167, 3
  %179 = or i64 %178, 24
  %180 = getelementptr i8, ptr %139, i64 %179
  %181 = insertelement <4 x ptr> poison, ptr %171, i64 0
  %182 = insertelement <4 x ptr> %181, ptr %174, i64 1
  %183 = insertelement <4 x ptr> %182, ptr %177, i64 2
  %184 = insertelement <4 x ptr> %183, ptr %180, i64 3
  %185 = shl i64 %167, 3
  %186 = or i64 %185, 32
  %187 = getelementptr i8, ptr %139, i64 %186
  %188 = shl i64 %167, 3
  %189 = or i64 %188, 40
  %190 = getelementptr i8, ptr %139, i64 %189
  %191 = shl i64 %167, 3
  %192 = or i64 %191, 48
  %193 = getelementptr i8, ptr %139, i64 %192
  %194 = shl i64 %167, 3
  %195 = or i64 %194, 56
  %196 = getelementptr i8, ptr %139, i64 %195
  %197 = insertelement <4 x ptr> poison, ptr %187, i64 0
  %198 = insertelement <4 x ptr> %197, ptr %190, i64 1
  %199 = insertelement <4 x ptr> %198, ptr %193, i64 2
  %200 = insertelement <4 x ptr> %199, ptr %196, i64 3
  %201 = shl i64 %167, 3
  %202 = or i64 %201, 64
  %203 = getelementptr i8, ptr %139, i64 %202
  %204 = shl i64 %167, 3
  %205 = or i64 %204, 72
  %206 = getelementptr i8, ptr %139, i64 %205
  %207 = shl i64 %167, 3
  %208 = or i64 %207, 80
  %209 = getelementptr i8, ptr %139, i64 %208
  %210 = shl i64 %167, 3
  %211 = or i64 %210, 88
  %212 = getelementptr i8, ptr %139, i64 %211
  %213 = insertelement <4 x ptr> poison, ptr %203, i64 0
  %214 = insertelement <4 x ptr> %213, ptr %206, i64 1
  %215 = insertelement <4 x ptr> %214, ptr %209, i64 2
  %216 = insertelement <4 x ptr> %215, ptr %212, i64 3
  %217 = shl i64 %167, 3
  %218 = or i64 %217, 96
  %219 = getelementptr i8, ptr %139, i64 %218
  %220 = shl i64 %167, 3
  %221 = or i64 %220, 104
  %222 = getelementptr i8, ptr %139, i64 %221
  %223 = shl i64 %167, 3
  %224 = or i64 %223, 112
  %225 = getelementptr i8, ptr %139, i64 %224
  %226 = shl i64 %167, 3
  %227 = or i64 %226, 120
  %228 = getelementptr i8, ptr %139, i64 %227
  %229 = insertelement <4 x ptr> poison, ptr %219, i64 0
  %230 = insertelement <4 x ptr> %229, ptr %222, i64 1
  %231 = insertelement <4 x ptr> %230, ptr %225, i64 2
  %232 = insertelement <4 x ptr> %231, ptr %228, i64 3
  %233 = icmp ne <4 x ptr> %184, zeroinitializer
  %234 = icmp ne <4 x ptr> %200, zeroinitializer
  %235 = icmp ne <4 x ptr> %216, zeroinitializer
  %236 = icmp ne <4 x ptr> %232, zeroinitializer
  %237 = tail call <4 x ptr> @llvm.masked.load.v4p0.p0(ptr %171, i32 8, <4 x i1> %233, <4 x ptr> poison), !tbaa !5
  %238 = getelementptr ptr, ptr %171, i64 4
  %239 = tail call <4 x ptr> @llvm.masked.load.v4p0.p0(ptr %238, i32 8, <4 x i1> %234, <4 x ptr> poison), !tbaa !5
  %240 = getelementptr ptr, ptr %171, i64 8
  %241 = tail call <4 x ptr> @llvm.masked.load.v4p0.p0(ptr %240, i32 8, <4 x i1> %235, <4 x ptr> poison), !tbaa !5
  %242 = getelementptr ptr, ptr %171, i64 12
  %243 = tail call <4 x ptr> @llvm.masked.load.v4p0.p0(ptr %242, i32 8, <4 x i1> %236, <4 x ptr> poison), !tbaa !5
  %244 = icmp eq <4 x ptr> %237, zeroinitializer
  %245 = icmp eq <4 x ptr> %239, zeroinitializer
  %246 = icmp eq <4 x ptr> %241, zeroinitializer
  %247 = icmp eq <4 x ptr> %243, zeroinitializer
  %248 = select <4 x i1> %244, <4 x ptr> <ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef>, <4 x ptr> %237
  %249 = select <4 x i1> %245, <4 x ptr> <ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef>, <4 x ptr> %239
  %250 = select <4 x i1> %246, <4 x ptr> <ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef>, <4 x ptr> %241
  %251 = select <4 x i1> %247, <4 x ptr> <ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef>, <4 x ptr> %243
  %252 = select <4 x i1> %233, <4 x ptr> %248, <4 x ptr> <ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef>
  %253 = select <4 x i1> %234, <4 x ptr> %249, <4 x ptr> <ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef>
  %254 = select <4 x i1> %235, <4 x ptr> %250, <4 x ptr> <ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef>
  %255 = select <4 x i1> %236, <4 x ptr> %251, <4 x ptr> <ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef>
  %256 = getelementptr inbounds ptr, ptr %169, i64 1
  store <4 x ptr> %252, ptr %256, align 8, !tbaa !5
  %257 = getelementptr inbounds ptr, ptr %169, i64 5
  store <4 x ptr> %253, ptr %257, align 8, !tbaa !5
  %258 = getelementptr inbounds ptr, ptr %169, i64 9
  store <4 x ptr> %254, ptr %258, align 8, !tbaa !5
  %259 = getelementptr inbounds ptr, ptr %169, i64 13
  store <4 x ptr> %255, ptr %259, align 8, !tbaa !5
  %260 = add nuw i64 %167, 16
  %261 = icmp eq i64 %260, %159
  br i1 %261, label %262, label %166, !llvm.loop !222

262:                                              ; preds = %166
  %263 = icmp eq i64 %159, %152
  br i1 %263, label %339, label %264

264:                                              ; preds = %154, %151, %262
  %265 = phi i32 [ %141, %154 ], [ %141, %151 ], [ %161, %262 ]
  %266 = phi ptr [ %137, %154 ], [ %137, %151 ], [ %163, %262 ]
  %267 = phi ptr [ %139, %154 ], [ %139, %151 ], [ %165, %262 ]
  %268 = and i32 %265, 1
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %281, label %270

270:                                              ; preds = %264
  %271 = add nsw i32 %265, -1
  %272 = icmp eq ptr %267, null
  br i1 %272, label %277, label %273

273:                                              ; preds = %270
  %274 = load ptr, ptr %267, align 8, !tbaa !5
  %275 = icmp eq ptr %274, null
  %276 = select i1 %275, ptr @PL_sv_undef, ptr %274
  br label %277

277:                                              ; preds = %273, %270
  %278 = phi ptr [ @PL_sv_undef, %270 ], [ %276, %273 ]
  %279 = getelementptr inbounds ptr, ptr %266, i64 1
  store ptr %278, ptr %279, align 8, !tbaa !5
  %280 = getelementptr inbounds ptr, ptr %267, i64 1
  br label %281

281:                                              ; preds = %277, %264
  %282 = phi ptr [ undef, %264 ], [ %279, %277 ]
  %283 = phi i32 [ %265, %264 ], [ %271, %277 ]
  %284 = phi ptr [ %266, %264 ], [ %279, %277 ]
  %285 = phi ptr [ %267, %264 ], [ %280, %277 ]
  %286 = icmp eq i32 %265, 1
  br i1 %286, label %339, label %319

287:                                              ; preds = %144
  %288 = icmp eq i32 %141, 0
  %289 = select i1 %288, i1 %28, i1 false
  %290 = icmp eq i32 %138, %73
  %291 = select i1 %289, i1 %290, i1 false
  br i1 %291, label %295, label %309

292:                                              ; preds = %420
  %293 = icmp eq i32 %138, %73
  %294 = select i1 %28, i1 %293, i1 false
  br i1 %294, label %295, label %316

295:                                              ; preds = %292, %287
  %296 = tail call ptr @Perl_find_runcv_where(i8 noundef zeroext 2, i64 noundef 1, ptr noundef null) #13
  %297 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !5
  %298 = getelementptr inbounds %struct.stackinfo, ptr %297, i64 0, i32 1
  %299 = load ptr, ptr %298, align 8, !tbaa !220
  %300 = getelementptr inbounds %struct.stackinfo, ptr %297, i64 0, i32 4
  %301 = load i32, ptr %300, align 8, !tbaa !221
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds %struct.context, ptr %299, i64 %302, i32 0, i32 0, i32 4
  %304 = load ptr, ptr %303, align 8, !tbaa !24
  %305 = getelementptr inbounds %struct.cop, ptr %304, i64 0, i32 11
  %306 = load i32, ptr %305, align 4, !tbaa !223
  %307 = tail call ptr @Perl_find_rundefsv2(ptr noundef %296, i32 noundef %306) #13
  %308 = getelementptr inbounds ptr, ptr %137, i64 1
  store ptr %307, ptr %308, align 8, !tbaa !5
  br label %494

309:                                              ; preds = %287
  br i1 %142, label %310, label %316

310:                                              ; preds = %309
  %311 = icmp eq ptr %139, null
  br i1 %311, label %316, label %312

312:                                              ; preds = %310
  %313 = load ptr, ptr %139, align 8, !tbaa !5
  %314 = icmp eq ptr %313, null
  %315 = select i1 %314, ptr @PL_sv_undef, ptr %313
  br label %316

316:                                              ; preds = %292, %312, %309, %310
  %317 = phi ptr [ @PL_sv_undef, %310 ], [ null, %309 ], [ %315, %312 ], [ null, %292 ]
  %318 = getelementptr inbounds ptr, ptr %137, i64 1
  store ptr %317, ptr %318, align 8, !tbaa !5
  br label %494

319:                                              ; preds = %281, %328
  %320 = phi i32 [ %331, %328 ], [ %283, %281 ]
  %321 = phi ptr [ %336, %328 ], [ %284, %281 ]
  %322 = phi ptr [ %337, %328 ], [ %285, %281 ]
  %323 = icmp eq ptr %322, null
  br i1 %323, label %328, label %324

324:                                              ; preds = %319
  %325 = load ptr, ptr %322, align 8, !tbaa !5
  %326 = icmp eq ptr %325, null
  %327 = select i1 %326, ptr @PL_sv_undef, ptr %325
  br label %328

328:                                              ; preds = %324, %319
  %329 = phi ptr [ @PL_sv_undef, %319 ], [ %327, %324 ]
  %330 = getelementptr inbounds ptr, ptr %321, i64 1
  store ptr %329, ptr %330, align 8, !tbaa !5
  %331 = add nsw i32 %320, -2
  %332 = getelementptr inbounds ptr, ptr %322, i64 1
  %333 = load ptr, ptr %332, align 8, !tbaa !5
  %334 = icmp eq ptr %333, null
  %335 = select i1 %334, ptr @PL_sv_undef, ptr %333
  %336 = getelementptr inbounds ptr, ptr %321, i64 2
  store ptr %335, ptr %336, align 8, !tbaa !5
  %337 = getelementptr inbounds ptr, ptr %322, i64 2
  %338 = icmp eq i32 %331, 0
  br i1 %338, label %339, label %319, !llvm.loop !224

339:                                              ; preds = %281, %328, %262, %147
  %340 = phi ptr [ %137, %147 ], [ %163, %262 ], [ %282, %281 ], [ %336, %328 ]
  store ptr %340, ptr @PL_stack_sp, align 8, !tbaa !5
  %341 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %342 = load ptr, ptr %341, align 8, !tbaa !13
  br label %505

343:                                              ; preds = %144
  %344 = icmp eq ptr %139, null
  br i1 %344, label %360, label %345

345:                                              ; preds = %343
  %346 = load ptr, ptr %139, align 8, !tbaa !5
  %347 = icmp eq ptr %346, null
  br i1 %347, label %360, label %348

348:                                              ; preds = %345
  %349 = getelementptr inbounds %struct.sv, ptr %346, i64 0, i32 2
  %350 = load i32, ptr %349, align 4, !tbaa !16
  %351 = and i32 %350, 2048
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %360, label %353

353:                                              ; preds = %348
  %354 = getelementptr inbounds %struct.sv, ptr %346, i64 0, i32 3
  %355 = load ptr, ptr %354, align 8, !tbaa !24
  %356 = getelementptr inbounds %struct.sv, ptr %355, i64 0, i32 2
  %357 = load i32, ptr %356, align 4, !tbaa !16
  %358 = and i32 %357, 255
  %359 = icmp eq i32 %358, 12
  br i1 %359, label %376, label %360

360:                                              ; preds = %353, %348, %345, %343
  %361 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %362 = load ptr, ptr %361, align 8, !tbaa !13
  %363 = getelementptr inbounds %struct.op, ptr %362, i64 0, i32 4
  %364 = load i16, ptr %363, align 8
  %365 = and i16 %364, 511
  %366 = icmp eq i16 %365, 380
  br i1 %366, label %367, label %369

367:                                              ; preds = %360
  %368 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %362, i32 noundef 2) #13
  br label %373

369:                                              ; preds = %360
  %370 = zext i16 %365 to i64
  %371 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %370
  %372 = load ptr, ptr %371, align 8, !tbaa !5
  br label %373

373:                                              ; preds = %369, %367
  %374 = phi ptr [ %368, %367 ], [ %372, %369 ]
  %375 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.64, i32 noundef %145, ptr noundef %374) #13
  br label %505

376:                                              ; preds = %353
  %377 = getelementptr inbounds ptr, ptr %137, i64 1
  store ptr %355, ptr %377, align 8, !tbaa !5
  br label %494

378:                                              ; preds = %144
  br i1 %142, label %381, label %379

379:                                              ; preds = %378
  %380 = getelementptr inbounds ptr, ptr %137, i64 1
  store ptr null, ptr %380, align 8, !tbaa !5
  br label %494

381:                                              ; preds = %378
  %382 = icmp eq ptr %139, null
  br i1 %382, label %404, label %383

383:                                              ; preds = %381
  %384 = load ptr, ptr %139, align 8, !tbaa !5
  %385 = icmp eq ptr %384, null
  br i1 %385, label %404, label %386

386:                                              ; preds = %383
  %387 = getelementptr inbounds %struct.sv, ptr %384, i64 0, i32 2
  %388 = load i32, ptr %387, align 4, !tbaa !16
  %389 = and i32 %388, 2048
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %404, label %391

391:                                              ; preds = %386
  %392 = getelementptr inbounds %struct.sv, ptr %384, i64 0, i32 3
  %393 = load ptr, ptr %392, align 8, !tbaa !24
  %394 = getelementptr inbounds %struct.sv, ptr %393, i64 0, i32 2
  %395 = load i32, ptr %394, align 4, !tbaa !16
  %396 = and i32 %395, 49152
  %397 = icmp eq i32 %396, 32768
  br i1 %397, label %398, label %404

398:                                              ; preds = %391
  %399 = and i32 %395, 255
  %400 = add nsw i32 %399, -9
  %401 = icmp ult i32 %400, 2
  br i1 %401, label %402, label %404

402:                                              ; preds = %398
  %403 = getelementptr inbounds ptr, ptr %137, i64 1
  store ptr %393, ptr %403, align 8, !tbaa !5
  br label %494

404:                                              ; preds = %383, %386, %391, %398, %381
  %405 = phi ptr [ @PL_sv_undef, %381 ], [ %384, %398 ], [ %384, %391 ], [ %384, %386 ], [ @PL_sv_undef, %383 ]
  %406 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %407 = getelementptr inbounds %struct.op, ptr %406, i64 0, i32 6
  %408 = load i8, ptr %407, align 1, !tbaa !15
  %409 = zext i8 %408 to i32
  %410 = and i32 %145, %409
  %411 = icmp ne i32 %410, 0
  %412 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %413 = getelementptr inbounds %struct.cop, ptr %412, i64 0, i32 10
  %414 = load i32, ptr %413, align 8, !tbaa !66
  %415 = and i32 %414, 2
  %416 = icmp ne i32 %415, 0
  %417 = xor i1 %411, true
  %418 = tail call fastcc ptr @S_rv2gv(ptr noundef nonnull %405, i1 noundef zeroext %411, i1 noundef zeroext %416, i1 noundef zeroext %417)
  %419 = getelementptr inbounds ptr, ptr %137, i64 1
  store ptr %418, ptr %419, align 8, !tbaa !5
  br label %494

420:                                              ; preds = %144
  br i1 %142, label %421, label %292

421:                                              ; preds = %420
  %422 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %423 = getelementptr inbounds %struct.op, ptr %422, i64 0, i32 6
  %424 = load i8, ptr %423, align 1, !tbaa !15
  %425 = and i8 %424, 64
  %426 = icmp eq i8 %425, 0
  %427 = icmp eq ptr %139, null
  br i1 %427, label %486, label %428

428:                                              ; preds = %421
  %429 = load ptr, ptr %139, align 8, !tbaa !5
  %430 = icmp eq ptr %429, null
  br i1 %430, label %486, label %431

431:                                              ; preds = %428
  %432 = getelementptr inbounds %struct.sv, ptr %429, i64 0, i32 2
  %433 = load i32, ptr %432, align 4, !tbaa !16
  %434 = and i32 %433, 2048
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %486, label %436

436:                                              ; preds = %431
  %437 = getelementptr inbounds %struct.sv, ptr %429, i64 0, i32 3
  %438 = load ptr, ptr %437, align 8, !tbaa !24
  %439 = getelementptr inbounds %struct.sv, ptr %438, i64 0, i32 2
  %440 = load i32, ptr %439, align 4, !tbaa !16
  %441 = and i32 %440, 255
  %442 = select i1 %426, i32 %135, i32 10
  %443 = icmp ugt i32 %441, %442
  br i1 %443, label %486, label %444

444:                                              ; preds = %436
  %445 = getelementptr inbounds ptr, ptr %137, i64 1
  store ptr %438, ptr %445, align 8, !tbaa !5
  br i1 %133, label %446, label %494

446:                                              ; preds = %444
  %447 = load ptr, ptr %139, align 8, !tbaa !5
  %448 = getelementptr inbounds %struct.sv, ptr %447, i64 0, i32 3
  %449 = load ptr, ptr %448, align 8, !tbaa !24
  %450 = load ptr, ptr @PL_defgv, align 8, !tbaa !5
  %451 = icmp eq ptr %449, %450
  br i1 %451, label %452, label %494

452:                                              ; preds = %446
  %453 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !5
  %454 = getelementptr inbounds %struct.stackinfo, ptr %453, i64 0, i32 1
  %455 = load ptr, ptr %454, align 8, !tbaa !220
  %456 = getelementptr inbounds %struct.stackinfo, ptr %453, i64 0, i32 4
  %457 = load i32, ptr %456, align 8, !tbaa !221
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds %struct.context, ptr %455, i64 %458
  %460 = load i8, ptr %459, align 8, !tbaa !24
  %461 = and i8 %460, 32
  %462 = icmp eq i8 %461, 0
  br i1 %462, label %494, label %463

463:                                              ; preds = %452
  %464 = getelementptr inbounds %struct.gv, ptr %449, i64 0, i32 3
  %465 = load ptr, ptr %464, align 8, !tbaa !24
  %466 = getelementptr inbounds %struct.gp, ptr %465, i64 0, i32 6
  %467 = load ptr, ptr %466, align 8, !tbaa !73
  %468 = icmp eq ptr %467, null
  br i1 %468, label %477, label %469

469:                                              ; preds = %463
  %470 = getelementptr inbounds %struct.sv, ptr %467, i64 0, i32 1
  %471 = load i32, ptr %470, align 8, !tbaa !44
  %472 = icmp ugt i32 %471, 1
  br i1 %472, label %473, label %475

473:                                              ; preds = %469
  %474 = add i32 %471, -1
  store i32 %474, ptr %470, align 8, !tbaa !44
  br label %477

475:                                              ; preds = %469
  tail call void @Perl_sv_free2(ptr noundef nonnull %467, i32 noundef %471) #13
  %476 = load ptr, ptr @PL_defgv, align 8, !tbaa !5
  br label %477

477:                                              ; preds = %463, %473, %475
  %478 = phi ptr [ %449, %463 ], [ %449, %473 ], [ %476, %475 ]
  %479 = getelementptr inbounds %struct.block, ptr %459, i64 0, i32 8, i32 0, i32 2
  %480 = load ptr, ptr %479, align 8, !tbaa !24
  %481 = getelementptr inbounds %struct.gv, ptr %478, i64 0, i32 3
  %482 = load ptr, ptr %481, align 8, !tbaa !24
  %483 = getelementptr inbounds %struct.gp, ptr %482, i64 0, i32 6
  store ptr %480, ptr %483, align 8, !tbaa !73
  %484 = load i8, ptr %459, align 8, !tbaa !24
  %485 = and i8 %484, -33
  store i8 %485, ptr %459, align 8, !tbaa !24
  br label %494

486:                                              ; preds = %421, %428, %431, %436
  %487 = getelementptr inbounds [0 x ptr], ptr @PL_op_name, i64 0, i64 %22
  %488 = load ptr, ptr %487, align 8, !tbaa !5
  %489 = select i1 %134, ptr @.str.67, ptr @.str.68
  %490 = select i1 %426, ptr %489, ptr @.str.66
  %491 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.65, i32 noundef %145, ptr noundef %488, ptr noundef nonnull %490) #13
  br label %505

492:                                              ; preds = %144
  %493 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.69, i32 noundef %146) #13
  br label %505

494:                                              ; preds = %444, %446, %452, %477, %379, %404, %402, %295, %316, %376
  %495 = phi ptr [ %308, %295 ], [ %318, %316 ], [ %403, %402 ], [ %419, %404 ], [ %380, %379 ], [ %377, %376 ], [ %445, %477 ], [ %445, %452 ], [ %445, %446 ], [ %445, %444 ]
  %496 = lshr i32 %140, 4
  %497 = tail call i32 @llvm.usub.sat.i32(i32 %141, i32 1)
  %498 = zext i1 %142 to i64
  %499 = getelementptr inbounds ptr, ptr %139, i64 %498
  %500 = icmp ult i32 %140, 16
  br i1 %500, label %501, label %136, !llvm.loop !225

501:                                              ; preds = %136, %494, %128
  %502 = phi ptr [ %129, %128 ], [ %495, %494 ], [ %137, %136 ]
  store ptr %502, ptr @PL_stack_sp, align 8, !tbaa !5
  %503 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %504 = load ptr, ptr %503, align 8, !tbaa !13
  br label %505

505:                                              ; preds = %486, %501, %492, %373, %339, %110
  %506 = phi ptr [ %493, %492 ], [ %491, %486 ], [ %375, %373 ], [ %342, %339 ], [ %504, %501 ], [ %112, %110 ]
  ret ptr %506
}

declare ptr @Perl_pp_pushmark() local_unnamed_addr #2

declare ptr @Perl_find_rundefsv2(ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_find_runcv_where(i8 noundef zeroext, i64 noundef, ptr noundef) local_unnamed_addr #2

declare ptr @Perl_custom_op_get_field(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_runcv() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 6
  %4 = load i8, ptr %3, align 1, !tbaa !15
  %5 = icmp sgt i8 %4, -1
  br i1 %5, label %8, label %6

6:                                                ; preds = %0
  %7 = tail call ptr @Perl_find_runcv_where(i8 noundef zeroext 2, i64 noundef 1, ptr noundef null) #13
  br label %10

8:                                                ; preds = %0
  %9 = tail call ptr @Perl_find_runcv(ptr noundef null) #13
  br label %10

10:                                               ; preds = %8, %6
  %11 = phi ptr [ %7, %6 ], [ %9, %8 ]
  %12 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %13 = ptrtoint ptr %12 to i64
  %14 = ptrtoint ptr %1 to i64
  %15 = sub i64 %13, %14
  %16 = icmp slt i64 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %10
  %18 = tail call ptr @Perl_stack_grow(ptr noundef %1, ptr noundef %1, i64 noundef 1) #13
  br label %19

19:                                               ; preds = %10, %17
  %20 = phi ptr [ %18, %17 ], [ %1, %10 ]
  %21 = load ptr, ptr %11, align 8, !tbaa !29
  %22 = getelementptr inbounds %struct.xpvcv, ptr %21, i64 0, i32 12
  %23 = load i32, ptr %22, align 4, !tbaa !35
  %24 = and i32 %23, 256
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.cv, ptr %11, i64 0, i32 2
  %28 = load i32, ptr %27, align 4, !tbaa !69
  %29 = and i32 %28, 16777216
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %26, %19
  %32 = tail call ptr @Perl_newRV(ptr noundef nonnull %11) #13
  %33 = tail call ptr @Perl_sv_2mortal(ptr noundef %32) #13
  br label %34

34:                                               ; preds = %26, %31
  %35 = phi ptr [ %33, %31 ], [ @PL_sv_undef, %26 ]
  %36 = getelementptr inbounds ptr, ptr %20, i64 1
  store ptr %35, ptr %36, align 8, !tbaa !5
  store ptr %36, ptr @PL_stack_sp, align 8, !tbaa !5
  %37 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %38 = load ptr, ptr %37, align 8, !tbaa !13
  ret ptr %38
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_refassign() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 6
  %4 = load i8, ptr %3, align 1, !tbaa !15
  %5 = and i8 %4, 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %0
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  %9 = load ptr, ptr %1, align 8, !tbaa !5
  br label %10

10:                                               ; preds = %0, %7
  %11 = phi ptr [ %8, %7 ], [ %1, %0 ]
  %12 = phi ptr [ %9, %7 ], [ null, %0 ]
  %13 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %14 = load i8, ptr %13, align 2, !tbaa !9
  %15 = and i8 %14, 64
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds ptr, ptr %11, i64 -1
  %19 = load ptr, ptr %11, align 8, !tbaa !5
  br label %20

20:                                               ; preds = %10, %17
  %21 = phi ptr [ %18, %17 ], [ %11, %10 ]
  %22 = phi ptr [ %19, %17 ], [ null, %10 ]
  %23 = load ptr, ptr %21, align 8, !tbaa !5
  %24 = and i8 %4, 48
  %25 = getelementptr inbounds %struct.sv, ptr %23, i64 0, i32 2
  %26 = load i32, ptr %25, align 4, !tbaa !16
  %27 = and i32 %26, 2048
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.70) #13
  br label %213

31:                                               ; preds = %20
  %32 = lshr exact i8 %24, 4
  %33 = zext i8 %32 to i32
  switch i32 %33, label %55 [
    i32 0, label %34
    i32 1, label %41
    i32 2, label %48
    i32 3, label %56
  ]

34:                                               ; preds = %31
  %35 = getelementptr inbounds %struct.sv, ptr %23, i64 0, i32 3
  %36 = load ptr, ptr %35, align 8, !tbaa !24
  %37 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %38 = load i32, ptr %37, align 4, !tbaa !16
  %39 = and i32 %38, 255
  %40 = icmp ult i32 %39, 11
  br i1 %40, label %66, label %63

41:                                               ; preds = %31
  %42 = getelementptr inbounds %struct.sv, ptr %23, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8, !tbaa !24
  %44 = getelementptr inbounds %struct.sv, ptr %43, i64 0, i32 2
  %45 = load i32, ptr %44, align 4, !tbaa !16
  %46 = and i32 %45, 255
  %47 = icmp eq i32 %46, 11
  br i1 %47, label %66, label %63

48:                                               ; preds = %31
  %49 = getelementptr inbounds %struct.sv, ptr %23, i64 0, i32 3
  %50 = load ptr, ptr %49, align 8, !tbaa !24
  %51 = getelementptr inbounds %struct.sv, ptr %50, i64 0, i32 2
  %52 = load i32, ptr %51, align 4, !tbaa !16
  %53 = and i32 %52, 255
  %54 = icmp eq i32 %53, 12
  br i1 %54, label %66, label %63

55:                                               ; preds = %31
  unreachable

56:                                               ; preds = %31
  %57 = getelementptr inbounds %struct.sv, ptr %23, i64 0, i32 3
  %58 = load ptr, ptr %57, align 8, !tbaa !24
  %59 = getelementptr inbounds %struct.sv, ptr %58, i64 0, i32 2
  %60 = load i32, ptr %59, align 4, !tbaa !16
  %61 = and i32 %60, 255
  %62 = icmp eq i32 %61, 13
  br i1 %62, label %66, label %63

63:                                               ; preds = %48, %41, %34, %56
  %64 = phi ptr [ @.str.71, %34 ], [ @.str.74, %56 ], [ @.str.72, %41 ], [ @.str.73, %48 ]
  %65 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.75, ptr noundef nonnull %64) #13
  br label %213

66:                                               ; preds = %48, %41, %34, %56
  %67 = phi ptr [ %50, %48 ], [ %43, %41 ], [ %36, %34 ], [ %58, %56 ]
  %68 = icmp eq ptr %22, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.sv, ptr %22, i64 0, i32 2
  %71 = load i32, ptr %70, align 4, !tbaa !16
  %72 = trunc i32 %71 to i8
  switch i8 %72, label %200 [
    i8 0, label %73
    i8 9, label %101
    i8 11, label %110
    i8 12, label %160
  ]

73:                                               ; preds = %66, %69
  %74 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %75 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %76 = load i64, ptr %75, align 8, !tbaa !14
  %77 = getelementptr inbounds ptr, ptr %74, i64 %76
  %78 = load ptr, ptr %77, align 8, !tbaa !5
  %79 = getelementptr inbounds %struct.sv, ptr %67, i64 0, i32 1
  %80 = load i32, ptr %79, align 8, !tbaa !44
  %81 = add i32 %80, 1
  store i32 %81, ptr %79, align 8, !tbaa !44
  store ptr %67, ptr %77, align 8, !tbaa !5
  %82 = icmp eq ptr %78, null
  br i1 %82, label %90, label %83

83:                                               ; preds = %73
  %84 = getelementptr inbounds %struct.sv, ptr %78, i64 0, i32 1
  %85 = load i32, ptr %84, align 8, !tbaa !44
  %86 = icmp ugt i32 %85, 1
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = add i32 %85, -1
  store i32 %88, ptr %84, align 8, !tbaa !44
  br label %90

89:                                               ; preds = %83
  tail call void @Perl_sv_free2(ptr noundef nonnull %78, i32 noundef %85) #13
  br label %90

90:                                               ; preds = %73, %87, %89
  %91 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %92 = getelementptr inbounds %struct.op, ptr %91, i64 0, i32 6
  %93 = load i8, ptr %92, align 1, !tbaa !15
  %94 = and i8 %93, -64
  %95 = icmp eq i8 %94, -128
  br i1 %95, label %96, label %200

96:                                               ; preds = %90
  %97 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %98 = getelementptr inbounds %struct.op, ptr %91, i64 0, i32 3
  %99 = load i64, ptr %98, align 8, !tbaa !14
  %100 = getelementptr inbounds ptr, ptr %97, i64 %99
  tail call void @Perl_save_clearsv(ptr noundef %100) #13
  br label %200

101:                                              ; preds = %69
  %102 = icmp sgt i8 %4, -1
  br i1 %102, label %104, label %103

103:                                              ; preds = %101
  tail call fastcc void @S_localise_gv_slot(ptr noundef nonnull %22, i8 noundef zeroext %24)
  br label %104

104:                                              ; preds = %103, %101
  tail call void @Perl_gv_setref(ptr noundef nonnull %22, ptr noundef nonnull %23) #13
  %105 = load i32, ptr %70, align 4, !tbaa !16
  %106 = and i32 %105, 4194304
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %200, label %108

108:                                              ; preds = %104
  %109 = tail call i32 @Perl_mg_set(ptr noundef nonnull %22) #13
  br label %200

110:                                              ; preds = %69
  %111 = icmp sgt i8 %4, -1
  br i1 %111, label %140, label %112

112:                                              ; preds = %110
  %113 = and i32 %71, 8388608
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %138, label %115

115:                                              ; preds = %112
  %116 = tail call ptr @Perl_mg_find(ptr noundef nonnull %22, i32 noundef 80) #13
  %117 = icmp eq ptr %116, null
  br i1 %117, label %138, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %struct.magic, ptr %116, i64 0, i32 6
  %120 = load ptr, ptr %119, align 8, !tbaa !132
  %121 = icmp eq ptr %120, null
  br i1 %121, label %122, label %125

122:                                              ; preds = %118
  %123 = tail call ptr @Perl_newRV(ptr noundef nonnull %22) #13
  %124 = tail call ptr @Perl_sv_2mortal(ptr noundef %123) #13
  br label %125

125:                                              ; preds = %118, %122
  %126 = phi ptr [ %124, %122 ], [ %120, %118 ]
  %127 = getelementptr inbounds %struct.sv, ptr %126, i64 0, i32 3
  %128 = load ptr, ptr %127, align 8, !tbaa !24
  %129 = load ptr, ptr %128, align 8, !tbaa !26
  %130 = load ptr, ptr %129, align 8, !tbaa !38
  %131 = icmp eq ptr %130, null
  br i1 %131, label %138, label %132

132:                                              ; preds = %125
  %133 = tail call ptr @Perl_gv_fetchmethod_autoload(ptr noundef nonnull %130, ptr noundef nonnull @.str.44, i32 noundef 1) #13
  %134 = icmp eq ptr %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %132
  %136 = tail call ptr @Perl_gv_fetchmethod_autoload(ptr noundef nonnull %130, ptr noundef nonnull @.str.45, i32 noundef 1) #13
  %137 = icmp ne ptr %136, null
  br label %138

138:                                              ; preds = %125, %132, %135, %115, %112
  %139 = phi i1 [ true, %115 ], [ true, %112 ], [ false, %132 ], [ false, %125 ], [ %137, %135 ]
  tail call fastcc void @S_localise_aelem_lval(ptr noundef nonnull %22, ptr noundef %12, i1 noundef zeroext %139)
  br label %140

140:                                              ; preds = %110, %138
  %141 = getelementptr inbounds %struct.sv, ptr %12, i64 0, i32 2
  %142 = load i32, ptr %141, align 4, !tbaa !16
  %143 = and i32 %142, 2097408
  %144 = icmp eq i32 %143, 256
  br i1 %144, label %145, label %149

145:                                              ; preds = %140
  %146 = load ptr, ptr %12, align 8, !tbaa !26
  %147 = getelementptr inbounds %struct.xpviv, ptr %146, i64 0, i32 4
  %148 = load i64, ptr %147, align 8, !tbaa !24
  br label %151

149:                                              ; preds = %140
  %150 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %12, i32 noundef 2) #13
  br label %151

151:                                              ; preds = %149, %145
  %152 = phi i64 [ %148, %145 ], [ %150, %149 ]
  %153 = getelementptr inbounds %struct.sv, ptr %23, i64 0, i32 3
  %154 = load ptr, ptr %153, align 8, !tbaa !24
  %155 = getelementptr inbounds %struct.sv, ptr %154, i64 0, i32 1
  %156 = load i32, ptr %155, align 8, !tbaa !44
  %157 = add i32 %156, 1
  store i32 %157, ptr %155, align 8, !tbaa !44
  %158 = load ptr, ptr %153, align 8, !tbaa !24
  %159 = tail call ptr @Perl_av_store(ptr noundef nonnull %22, i64 noundef %152, ptr noundef %158) #13
  br label %200

160:                                              ; preds = %69
  %161 = icmp sgt i8 %4, -1
  br i1 %161, label %192, label %162

162:                                              ; preds = %160
  %163 = and i32 %71, 8388608
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %188, label %165

165:                                              ; preds = %162
  %166 = tail call ptr @Perl_mg_find(ptr noundef nonnull %22, i32 noundef 80) #13
  %167 = icmp eq ptr %166, null
  br i1 %167, label %188, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %struct.magic, ptr %166, i64 0, i32 6
  %170 = load ptr, ptr %169, align 8, !tbaa !132
  %171 = icmp eq ptr %170, null
  br i1 %171, label %172, label %175

172:                                              ; preds = %168
  %173 = tail call ptr @Perl_newRV(ptr noundef nonnull %22) #13
  %174 = tail call ptr @Perl_sv_2mortal(ptr noundef %173) #13
  br label %175

175:                                              ; preds = %168, %172
  %176 = phi ptr [ %174, %172 ], [ %170, %168 ]
  %177 = getelementptr inbounds %struct.sv, ptr %176, i64 0, i32 3
  %178 = load ptr, ptr %177, align 8, !tbaa !24
  %179 = load ptr, ptr %178, align 8, !tbaa !26
  %180 = load ptr, ptr %179, align 8, !tbaa !38
  %181 = icmp eq ptr %180, null
  br i1 %181, label %188, label %182

182:                                              ; preds = %175
  %183 = tail call ptr @Perl_gv_fetchmethod_autoload(ptr noundef nonnull %180, ptr noundef nonnull @.str.44, i32 noundef 1) #13
  %184 = icmp eq ptr %183, null
  br i1 %184, label %188, label %185

185:                                              ; preds = %182
  %186 = tail call ptr @Perl_gv_fetchmethod_autoload(ptr noundef nonnull %180, ptr noundef nonnull @.str.45, i32 noundef 1) #13
  %187 = icmp ne ptr %186, null
  br label %188

188:                                              ; preds = %175, %182, %185, %165, %162
  %189 = phi i1 [ true, %165 ], [ true, %162 ], [ false, %182 ], [ false, %175 ], [ %187, %185 ]
  tail call fastcc void @S_localise_helem_lval(ptr noundef nonnull %22, ptr noundef %12, i1 noundef zeroext %189)
  %190 = getelementptr inbounds %struct.sv, ptr %23, i64 0, i32 3
  %191 = load ptr, ptr %190, align 8, !tbaa !24
  br label %192

192:                                              ; preds = %160, %188
  %193 = phi ptr [ %67, %160 ], [ %191, %188 ]
  %194 = getelementptr inbounds %struct.sv, ptr %23, i64 0, i32 3
  %195 = getelementptr inbounds %struct.sv, ptr %193, i64 0, i32 1
  %196 = load i32, ptr %195, align 8, !tbaa !44
  %197 = add i32 %196, 1
  store i32 %197, ptr %195, align 8, !tbaa !44
  %198 = load ptr, ptr %194, align 8, !tbaa !24
  %199 = tail call ptr @Perl_hv_common(ptr noundef nonnull %22, ptr noundef %12, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 4, ptr noundef %198, i32 noundef 0) #13
  br label %200

200:                                              ; preds = %90, %96, %108, %104, %192, %69, %151
  %201 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %202 = getelementptr inbounds %struct.op, ptr %201, i64 0, i32 5
  %203 = load i8, ptr %202, align 2, !tbaa !9
  %204 = and i8 %203, 32
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %210, label %206

206:                                              ; preds = %200
  %207 = tail call ptr @Perl_newSVsv(ptr noundef nonnull %23) #13
  %208 = tail call ptr @Perl_sv_2mortal(ptr noundef %207) #13
  store ptr %208, ptr %21, align 8, !tbaa !5
  %209 = load ptr, ptr @PL_op, align 8, !tbaa !5
  br label %210

210:                                              ; preds = %206, %200
  %211 = phi ptr [ %209, %206 ], [ %201, %200 ]
  store ptr %21, ptr @PL_stack_sp, align 8, !tbaa !5
  %212 = load ptr, ptr %211, align 8, !tbaa !13
  br label %213

213:                                              ; preds = %210, %63, %29
  %214 = phi ptr [ %65, %63 ], [ %212, %210 ], [ %30, %29 ]
  ret ptr %214
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_localise_gv_slot(ptr noundef %0, i8 noundef zeroext %1) unnamed_addr #0 {
  switch i8 %1, label %16 [
    i8 0, label %3
    i8 16, label %14
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.gv, ptr %0, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !24
  %6 = load ptr, ptr %5, align 8, !tbaa !77
  %7 = icmp eq ptr %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.sv, ptr %6, i64 0, i32 1
  %10 = load i32, ptr %9, align 8, !tbaa !44
  %11 = add i32 %10, 1
  store i32 %11, ptr %9, align 8, !tbaa !44
  br label %12

12:                                               ; preds = %3, %8
  tail call void @Perl_save_pushptrptr(ptr noundef nonnull %0, ptr noundef %6, i32 noundef 29) #13
  %13 = load ptr, ptr %4, align 8, !tbaa !24
  store ptr null, ptr %13, align 8, !tbaa !77
  br label %18

14:                                               ; preds = %2
  %15 = tail call ptr @Perl_save_ary(ptr noundef %0) #13
  br label %18

16:                                               ; preds = %2
  %17 = tail call ptr @Perl_save_hash(ptr noundef %0) #13
  br label %18

18:                                               ; preds = %14, %16, %12
  ret void
}

declare void @Perl_gv_setref(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_localise_aelem_lval(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !16
  %6 = and i32 %5, 2097408
  %7 = icmp eq i32 %6, 256
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = load ptr, ptr %1, align 8, !tbaa !26
  %10 = getelementptr inbounds %struct.xpviv, ptr %9, i64 0, i32 4
  %11 = load i64, ptr %10, align 8, !tbaa !24
  br label %14

12:                                               ; preds = %3
  %13 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %1, i32 noundef 2) #13
  br label %14

14:                                               ; preds = %12, %8
  %15 = phi i64 [ %11, %8 ], [ %13, %12 ]
  br i1 %2, label %16, label %18

16:                                               ; preds = %14
  %17 = tail call zeroext i1 @Perl_av_exists(ptr noundef %0, i64 noundef %15) #13
  br i1 %17, label %18, label %26

18:                                               ; preds = %14, %16
  %19 = tail call ptr @Perl_av_fetch(ptr noundef %0, i64 noundef %15, i32 noundef 1) #13
  %20 = icmp eq ptr %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = load ptr, ptr %19, align 8, !tbaa !5
  %23 = icmp eq ptr %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %21, %18
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @PL_no_aelem, i64 noundef %15) #13
  br label %25

25:                                               ; preds = %24, %21
  tail call void @Perl_save_aelem_flags(ptr noundef %0, i64 noundef %15, ptr noundef %19, i32 noundef 1) #13
  br label %27

26:                                               ; preds = %16
  tail call void @Perl_save_adelete(ptr noundef %0, i64 noundef %15) #13
  br label %27

27:                                               ; preds = %26, %25
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_localise_helem_lval(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) unnamed_addr #0 {
  br i1 %2, label %4, label %7

4:                                                ; preds = %3
  %5 = tail call ptr @Perl_hv_common(ptr noundef %0, ptr noundef %1, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 8, ptr noundef null, i32 noundef 0) #13
  %6 = icmp eq ptr %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %3, %4
  %8 = tail call ptr @Perl_hv_common(ptr noundef %0, ptr noundef %1, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 16, ptr noundef null, i32 noundef 0) #13
  %9 = icmp eq ptr %8, null
  %10 = getelementptr inbounds %struct.he, ptr %8, i64 0, i32 2
  %11 = select i1 %9, ptr null, ptr %10
  br i1 %9, label %15, label %12

12:                                               ; preds = %7
  %13 = load ptr, ptr %10, align 8, !tbaa !5
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %12, %7
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @PL_no_helem_sv, ptr noundef %1) #13
  br label %16

16:                                               ; preds = %15, %12
  tail call void @Perl_save_helem_flags(ptr noundef %0, ptr noundef %1, ptr noundef %11, i32 noundef 0) #13
  br label %18

17:                                               ; preds = %4
  tail call void @Perl_save_hdelete(ptr noundef %0, ptr noundef %1) #13
  br label %18

18:                                               ; preds = %17, %16
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_lvref() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = tail call ptr @Perl_newSV_type(i32 noundef 7) #13
  %3 = tail call ptr @Perl_sv_2mortal(ptr noundef %2) #13
  %4 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 6
  %6 = load i8, ptr %5, align 1, !tbaa !15
  %7 = and i8 %6, 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %0
  %10 = getelementptr inbounds ptr, ptr %1, i64 -1
  %11 = load ptr, ptr %1, align 8, !tbaa !5
  br label %12

12:                                               ; preds = %0, %9
  %13 = phi ptr [ %10, %9 ], [ %1, %0 ]
  %14 = phi ptr [ %11, %9 ], [ null, %0 ]
  %15 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %16 = load i8, ptr %15, align 2, !tbaa !9
  %17 = and i8 %16, 64
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds ptr, ptr %13, i64 -1
  %21 = load ptr, ptr %13, align 8, !tbaa !5
  br label %22

22:                                               ; preds = %12, %19
  %23 = phi ptr [ %20, %19 ], [ %13, %12 ]
  %24 = phi ptr [ %21, %19 ], [ null, %12 ]
  %25 = icmp eq ptr %14, null
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 3
  %28 = load i64, ptr %27, align 8, !tbaa !14
  %29 = trunc i64 %28 to i32
  br label %30

30:                                               ; preds = %22, %26
  %31 = phi i32 [ %29, %26 ], [ -2, %22 ]
  %32 = tail call ptr @Perl_sv_magicext(ptr noundef %3, ptr noundef %24, i32 noundef 92, ptr noundef nonnull getelementptr inbounds ([31 x %struct.mgvtbl], ptr @PL_magic_vtables, i64 0, i64 14), ptr noundef %14, i32 noundef %31) #13
  %33 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %34 = getelementptr inbounds %struct.op, ptr %33, i64 0, i32 6
  %35 = load i8, ptr %34, align 1, !tbaa !15
  %36 = zext i8 %35 to i16
  %37 = getelementptr inbounds %struct.magic, ptr %32, i64 0, i32 2
  store i16 %36, ptr %37, align 8, !tbaa !226
  %38 = and i8 %35, 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %30
  %41 = getelementptr inbounds %struct.magic, ptr %32, i64 0, i32 4
  %42 = load i8, ptr %41, align 1, !tbaa !65
  %43 = or i8 %42, -128
  store i8 %43, ptr %41, align 1, !tbaa !65
  br label %44

44:                                               ; preds = %40, %30
  %45 = icmp sgt i8 %35, -1
  br i1 %45, label %109, label %46

46:                                               ; preds = %44
  br i1 %25, label %82, label %47

47:                                               ; preds = %46
  %48 = getelementptr inbounds %struct.sv, ptr %24, i64 0, i32 2
  %49 = load i32, ptr %48, align 4, !tbaa !16
  %50 = and i32 %49, 8388608
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %75, label %52

52:                                               ; preds = %47
  %53 = tail call ptr @Perl_mg_find(ptr noundef nonnull %24, i32 noundef 80) #13
  %54 = icmp eq ptr %53, null
  br i1 %54, label %75, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %struct.magic, ptr %53, i64 0, i32 6
  %57 = load ptr, ptr %56, align 8, !tbaa !132
  %58 = icmp eq ptr %57, null
  br i1 %58, label %59, label %62

59:                                               ; preds = %55
  %60 = tail call ptr @Perl_newRV(ptr noundef nonnull %24) #13
  %61 = tail call ptr @Perl_sv_2mortal(ptr noundef %60) #13
  br label %62

62:                                               ; preds = %55, %59
  %63 = phi ptr [ %61, %59 ], [ %57, %55 ]
  %64 = getelementptr inbounds %struct.sv, ptr %63, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8, !tbaa !24
  %66 = load ptr, ptr %65, align 8, !tbaa !26
  %67 = load ptr, ptr %66, align 8, !tbaa !38
  %68 = icmp eq ptr %67, null
  br i1 %68, label %75, label %69

69:                                               ; preds = %62
  %70 = tail call ptr @Perl_gv_fetchmethod_autoload(ptr noundef nonnull %67, ptr noundef nonnull @.str.44, i32 noundef 1) #13
  %71 = icmp eq ptr %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %69
  %73 = tail call ptr @Perl_gv_fetchmethod_autoload(ptr noundef nonnull %67, ptr noundef nonnull @.str.45, i32 noundef 1) #13
  %74 = icmp ne ptr %73, null
  br label %75

75:                                               ; preds = %62, %69, %72, %52, %47
  %76 = phi i1 [ true, %52 ], [ true, %47 ], [ false, %69 ], [ false, %62 ], [ %74, %72 ]
  %77 = load i32, ptr %48, align 4, !tbaa !16
  %78 = and i32 %77, 255
  %79 = icmp eq i32 %78, 11
  br i1 %79, label %80, label %81

80:                                               ; preds = %75
  tail call fastcc void @S_localise_aelem_lval(ptr noundef nonnull %24, ptr noundef nonnull %14, i1 noundef zeroext %76)
  br label %109

81:                                               ; preds = %75
  tail call fastcc void @S_localise_helem_lval(ptr noundef nonnull %24, ptr noundef nonnull %14, i1 noundef zeroext %76)
  br label %109

82:                                               ; preds = %46
  %83 = icmp eq ptr %24, null
  br i1 %83, label %101, label %84

84:                                               ; preds = %82
  %85 = and i8 %35, 48
  switch i8 %85, label %99 [
    i8 0, label %86
    i8 16, label %97
  ]

86:                                               ; preds = %84
  %87 = getelementptr inbounds %struct.gv, ptr %24, i64 0, i32 3
  %88 = load ptr, ptr %87, align 8, !tbaa !24
  %89 = load ptr, ptr %88, align 8, !tbaa !77
  %90 = icmp eq ptr %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %struct.sv, ptr %89, i64 0, i32 1
  %93 = load i32, ptr %92, align 8, !tbaa !44
  %94 = add i32 %93, 1
  store i32 %94, ptr %92, align 8, !tbaa !44
  br label %95

95:                                               ; preds = %91, %86
  tail call void @Perl_save_pushptrptr(ptr noundef nonnull %24, ptr noundef %89, i32 noundef 29) #13
  %96 = load ptr, ptr %87, align 8, !tbaa !24
  store ptr null, ptr %96, align 8, !tbaa !77
  br label %109

97:                                               ; preds = %84
  %98 = tail call ptr @Perl_save_ary(ptr noundef nonnull %24) #13
  br label %109

99:                                               ; preds = %84
  %100 = tail call ptr @Perl_save_hash(ptr noundef nonnull %24) #13
  br label %109

101:                                              ; preds = %82
  %102 = and i8 %35, 64
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %109

104:                                              ; preds = %101
  %105 = load ptr, ptr @PL_curpad, align 8, !tbaa !5
  %106 = getelementptr inbounds %struct.op, ptr %33, i64 0, i32 3
  %107 = load i64, ptr %106, align 8, !tbaa !14
  %108 = getelementptr inbounds ptr, ptr %105, i64 %107
  tail call void @Perl_save_clearsv(ptr noundef %108) #13
  br label %109

109:                                              ; preds = %99, %97, %95, %80, %81, %101, %104, %44
  %110 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %111 = ptrtoint ptr %110 to i64
  %112 = ptrtoint ptr %23 to i64
  %113 = sub i64 %111, %112
  %114 = icmp slt i64 %113, 8
  br i1 %114, label %115, label %117

115:                                              ; preds = %109
  %116 = tail call ptr @Perl_stack_grow(ptr noundef %23, ptr noundef %23, i64 noundef 1) #13
  br label %117

117:                                              ; preds = %109, %115
  %118 = phi ptr [ %116, %115 ], [ %23, %109 ]
  %119 = getelementptr inbounds ptr, ptr %118, i64 1
  store ptr %3, ptr %119, align 8, !tbaa !5
  store ptr %119, ptr @PL_stack_sp, align 8, !tbaa !5
  %120 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %121 = load ptr, ptr %120, align 8, !tbaa !13
  ret ptr %121
}

declare ptr @Perl_sv_magicext(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_lvrefslice() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr @PL_stack_base, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %4 = getelementptr inbounds i32, ptr %3, i64 -1
  store ptr %4, ptr @PL_markstack_ptr, align 8, !tbaa !5
  %5 = load i32, ptr %3, align 4, !tbaa !57
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds ptr, ptr %2, i64 %6
  %8 = getelementptr inbounds ptr, ptr %1, i64 -1
  %9 = load ptr, ptr %1, align 8, !tbaa !5
  %10 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 6
  %12 = load i8, ptr %11, align 1, !tbaa !15
  %13 = icmp sgt i8 %12, -1
  br i1 %13, label %76, label %14

14:                                               ; preds = %0
  %15 = getelementptr inbounds %struct.av, ptr %9, i64 0, i32 2
  %16 = load i32, ptr %15, align 4, !tbaa !74
  %17 = and i32 %16, 8388608
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %42, label %19

19:                                               ; preds = %14
  %20 = tail call ptr @Perl_mg_find(ptr noundef nonnull %9, i32 noundef 80) #13
  %21 = icmp eq ptr %20, null
  br i1 %21, label %42, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.magic, ptr %20, i64 0, i32 6
  %24 = load ptr, ptr %23, align 8, !tbaa !132
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %29

26:                                               ; preds = %22
  %27 = tail call ptr @Perl_newRV(ptr noundef nonnull %9) #13
  %28 = tail call ptr @Perl_sv_2mortal(ptr noundef %27) #13
  br label %29

29:                                               ; preds = %22, %26
  %30 = phi ptr [ %28, %26 ], [ %24, %22 ]
  %31 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 3
  %32 = load ptr, ptr %31, align 8, !tbaa !24
  %33 = load ptr, ptr %32, align 8, !tbaa !26
  %34 = load ptr, ptr %33, align 8, !tbaa !38
  %35 = icmp eq ptr %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %29
  %37 = tail call ptr @Perl_gv_fetchmethod_autoload(ptr noundef nonnull %34, ptr noundef nonnull @.str.44, i32 noundef 1) #13
  %38 = icmp eq ptr %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = tail call ptr @Perl_gv_fetchmethod_autoload(ptr noundef nonnull %34, ptr noundef nonnull @.str.45, i32 noundef 1) #13
  %41 = icmp ne ptr %40, null
  br label %42

42:                                               ; preds = %29, %36, %39, %19, %14
  %43 = phi i1 [ true, %19 ], [ true, %14 ], [ false, %36 ], [ false, %29 ], [ %41, %39 ]
  %44 = load i32, ptr %15, align 4, !tbaa !74
  %45 = and i32 %44, 255
  %46 = icmp eq i32 %45, 11
  br i1 %46, label %47, label %76

47:                                               ; preds = %42
  %48 = getelementptr inbounds ptr, ptr %7, i64 1
  %49 = icmp ugt ptr %48, %8
  br i1 %49, label %69, label %50

50:                                               ; preds = %47, %64
  %51 = phi ptr [ %67, %64 ], [ %48, %47 ]
  %52 = phi i64 [ %66, %64 ], [ -1, %47 ]
  %53 = load ptr, ptr %51, align 8, !tbaa !5
  %54 = getelementptr inbounds %struct.sv, ptr %53, i64 0, i32 2
  %55 = load i32, ptr %54, align 4, !tbaa !16
  %56 = and i32 %55, 2097408
  %57 = icmp eq i32 %56, 256
  br i1 %57, label %58, label %62

58:                                               ; preds = %50
  %59 = load ptr, ptr %53, align 8, !tbaa !26
  %60 = getelementptr inbounds %struct.xpviv, ptr %59, i64 0, i32 4
  %61 = load i64, ptr %60, align 8, !tbaa !24
  br label %64

62:                                               ; preds = %50
  %63 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %53, i32 noundef 2) #13
  br label %64

64:                                               ; preds = %62, %58
  %65 = phi i64 [ %61, %58 ], [ %63, %62 ]
  %66 = tail call i64 @llvm.smax.i64(i64 %65, i64 %52)
  %67 = getelementptr inbounds ptr, ptr %51, i64 1
  %68 = icmp ugt ptr %67, %8
  br i1 %68, label %69, label %50, !llvm.loop !227

69:                                               ; preds = %64, %47
  %70 = phi i64 [ -1, %47 ], [ %66, %64 ]
  %71 = load ptr, ptr %9, align 8, !tbaa !18
  %72 = getelementptr inbounds %struct.xpvav, ptr %71, i64 0, i32 3
  %73 = load i64, ptr %72, align 8, !tbaa !134
  %74 = icmp sgt i64 %70, %73
  br i1 %74, label %75, label %76

75:                                               ; preds = %69
  tail call void @Perl_av_extend(ptr noundef nonnull %9, i64 noundef %70) #13
  br label %76

76:                                               ; preds = %42, %75, %69, %0
  %77 = phi i1 [ false, %0 ], [ %43, %69 ], [ %43, %75 ], [ %43, %42 ]
  %78 = getelementptr inbounds ptr, ptr %7, i64 1
  %79 = icmp ugt ptr %78, %8
  br i1 %79, label %95, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %struct.av, ptr %9, i64 0, i32 2
  br label %82

82:                                               ; preds = %80, %90
  %83 = phi ptr [ %78, %80 ], [ %93, %90 ]
  %84 = load ptr, ptr %83, align 8, !tbaa !5
  %85 = load i32, ptr %81, align 4, !tbaa !74
  %86 = and i32 %85, 255
  %87 = icmp eq i32 %86, 11
  br i1 %87, label %88, label %89

88:                                               ; preds = %82
  tail call fastcc void @S_localise_aelem_lval(ptr noundef nonnull %9, ptr noundef %84, i1 noundef zeroext %77)
  br label %90

89:                                               ; preds = %82
  tail call fastcc void @S_localise_helem_lval(ptr noundef nonnull %9, ptr noundef %84, i1 noundef zeroext %77)
  br label %90

90:                                               ; preds = %89, %88
  %91 = tail call ptr @Perl_newSV_type(i32 noundef 7) #13
  %92 = tail call ptr @Perl_sv_2mortal(ptr noundef %91) #13
  store ptr %92, ptr %83, align 8, !tbaa !5
  tail call void @Perl_sv_magic(ptr noundef %92, ptr noundef nonnull %9, i32 noundef 92, ptr noundef %84, i32 noundef -2) #13
  %93 = getelementptr inbounds ptr, ptr %83, i64 1
  %94 = icmp ugt ptr %93, %8
  br i1 %94, label %95, label %82, !llvm.loop !228

95:                                               ; preds = %90, %76
  store ptr %8, ptr @PL_stack_sp, align 8, !tbaa !5
  %96 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %97 = load ptr, ptr %96, align 8, !tbaa !13
  ret ptr %97
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_lvavref() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 5
  %3 = load i8, ptr %2, align 2, !tbaa !9
  %4 = and i8 %3, 64
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %0
  %7 = tail call ptr @Perl_pp_rv2av() #13
  br label %10

8:                                                ; preds = %0
  %9 = tail call ptr @Perl_pp_padav()
  br label %10

10:                                               ; preds = %8, %6
  %11 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %12 = load ptr, ptr %11, align 8, !tbaa !5
  store ptr null, ptr %11, align 8, !tbaa !5
  %13 = load ptr, ptr @PL_stack_max, align 8, !tbaa !5
  %14 = ptrtoint ptr %13 to i64
  %15 = ptrtoint ptr %11 to i64
  %16 = sub i64 %14, %15
  %17 = icmp slt i64 %16, 8
  br i1 %17, label %18, label %20

18:                                               ; preds = %10
  %19 = tail call ptr @Perl_stack_grow(ptr noundef nonnull %11, ptr noundef nonnull %11, i64 noundef 1) #13
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi ptr [ %19, %18 ], [ %11, %10 ]
  %22 = getelementptr inbounds ptr, ptr %21, i64 1
  store ptr %12, ptr %22, align 8, !tbaa !5
  store ptr %22, ptr @PL_stack_sp, align 8, !tbaa !5
  %23 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %24 = load ptr, ptr %23, align 8, !tbaa !13
  ret ptr %24
}

declare ptr @Perl_pp_rv2av() local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_anonconst() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !5
  %2 = load ptr, ptr %1, align 8, !tbaa !5
  %3 = load ptr, ptr @PL_curcop, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.cop, ptr %3, i64 0, i32 8
  %5 = load ptr, ptr %4, align 8, !tbaa !47
  %6 = getelementptr inbounds %struct.hv, ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !40
  %8 = and i32 %7, 255
  %9 = icmp eq i32 %8, 12
  %10 = select i1 %9, ptr %5, ptr null
  %11 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 1
  %12 = load i32, ptr %11, align 8, !tbaa !44
  %13 = add i32 %12, 1
  store i32 %13, ptr %11, align 8, !tbaa !44
  %14 = tail call ptr @Perl_newCONSTSUB(ptr noundef %10, ptr noundef null, ptr noundef %2) #13
  %15 = tail call ptr @Perl_sv_2mortal(ptr noundef %14) #13
  store ptr %15, ptr %1, align 8, !tbaa !5
  store ptr %1, ptr @PL_stack_sp, align 8, !tbaa !5
  %16 = load ptr, ptr @PL_op, align 8, !tbaa !5
  %17 = load ptr, ptr %16, align 8, !tbaa !13
  ret ptr %17
}

declare ptr @Perl_newCONSTSUB(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

declare void @Perl_gv_init_pvn(ptr noundef, ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_gv_init_sv(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_newGVgen_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_vivify_defelem(ptr noundef) local_unnamed_addr #2

declare i32 @Perl_hv_iterinit(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_bytes_to_utf8(ptr noundef, ptr noundef) local_unnamed_addr #2

declare void @Perl_sv_catsv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare i32 @Perl_looks_like_number(ptr noundef) local_unnamed_addr #2

declare void @Perl_sv_copypv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_sv_free2(ptr noundef, i32 noundef) local_unnamed_addr #2

declare i32 @Perl_mg_clear(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_save_ary(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_save_hash(ptr noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind willreturn memory(argmem: read)
declare i32 @bcmp(ptr nocapture, ptr nocapture, i64) local_unnamed_addr #9

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctpop.i64(i64) #10

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #10

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #10

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.abs.i64(i64, i1 immarg) #10

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umin.i64(i64, i64) #10

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #10

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #10

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #11

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.usub.sat.i32(i32, i32) #10

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare <4 x ptr> @llvm.masked.load.v4p0.p0(ptr nocapture, i32 immarg, <4 x i1>, <4 x ptr>) #12

attributes #0 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #3 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #4 = { mustprogress nofree nounwind willreturn memory(argmem: read) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #5 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #6 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #7 = { mustprogress nofree nosync nounwind willreturn memory(none) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #8 = { mustprogress nofree nosync nounwind sspstrong willreturn memory(argmem: write) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #9 = { nofree nounwind willreturn memory(argmem: read) }
attributes #10 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #11 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #12 = { nocallback nofree nosync nounwind willreturn memory(argmem: read) }
attributes #13 = { nounwind }
attributes #14 = { nounwind willreturn memory(read) }
attributes #15 = { nounwind willreturn memory(none) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!10, !7, i64 34}
!10 = !{!"op", !6, i64 0, !6, i64 8, !6, i64 16, !11, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !7, i64 34, !7, i64 35}
!11 = !{!"long", !7, i64 0}
!12 = !{!"int", !7, i64 0}
!13 = !{!10, !6, i64 0}
!14 = !{!10, !11, i64 24}
!15 = !{!10, !7, i64 35}
!16 = !{!17, !12, i64 12}
!17 = !{!"sv", !6, i64 0, !12, i64 8, !12, i64 12, !7, i64 16}
!18 = !{!19, !6, i64 0}
!19 = !{!"av", !6, i64 0, !12, i64 8, !12, i64 12, !7, i64 16}
!20 = !{!21, !11, i64 16}
!21 = !{!"xpvav", !6, i64 0, !7, i64 8, !11, i64 16, !11, i64 24, !6, i64 32}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.mustprogress"}
!24 = !{!7, !7, i64 0}
!25 = distinct !{!25, !23}
!26 = !{!17, !6, i64 0}
!27 = !{!28, !11, i64 16}
!28 = !{!"xpvhv", !6, i64 0, !7, i64 8, !11, i64 16, !11, i64 24}
!29 = !{!30, !6, i64 0}
!30 = !{!"cv", !6, i64 0, !12, i64 8, !12, i64 12, !7, i64 16}
!31 = !{!32, !6, i64 8}
!32 = !{!"padlist", !11, i64 0, !6, i64 8, !12, i64 16, !12, i64 20}
!33 = !{!34, !6, i64 8}
!34 = !{!"padnamelist", !11, i64 0, !6, i64 8, !11, i64 16, !11, i64 24, !12, i64 32}
!35 = !{!36, !12, i64 92}
!36 = !{!"xpvcv", !6, i64 0, !7, i64 8, !11, i64 16, !7, i64 24, !6, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !6, i64 64, !7, i64 72, !6, i64 80, !12, i64 88, !12, i64 92, !12, i64 96}
!37 = !{!30, !12, i64 8}
!38 = !{!39, !6, i64 0}
!39 = !{!"xpvmg", !6, i64 0, !7, i64 8, !11, i64 16, !7, i64 24, !7, i64 32, !7, i64 40}
!40 = !{!41, !12, i64 12}
!41 = !{!"hv", !6, i64 0, !12, i64 8, !12, i64 12, !7, i64 16}
!42 = !{!43, !6, i64 8}
!43 = !{!"gp", !6, i64 0, !6, i64 8, !6, i64 16, !12, i64 24, !12, i64 28, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !12, i64 64, !12, i64 67, !6, i64 72}
!44 = !{!17, !12, i64 8}
!45 = !{!46, !11, i64 24}
!46 = !{!"unop", !6, i64 0, !6, i64 8, !6, i64 16, !11, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !7, i64 34, !7, i64 35, !6, i64 40}
!47 = !{!48, !6, i64 40}
!48 = !{!"cop", !6, i64 0, !6, i64 8, !6, i64 16, !11, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !7, i64 34, !7, i64 35, !12, i64 36, !6, i64 40, !6, i64 48, !12, i64 56, !12, i64 60, !6, i64 64, !6, i64 72}
!49 = !{!41, !6, i64 0}
!50 = !{!28, !11, i64 24}
!51 = !{!52, !12, i64 28}
!52 = !{!"xpvhv_aux", !7, i64 0, !6, i64 8, !6, i64 16, !12, i64 24, !12, i64 28, !6, i64 32, !12, i64 40, !12, i64 44, !12, i64 48, !12, i64 52}
!53 = !{!54, !12, i64 4}
!54 = !{!"hek", !12, i64 0, !12, i64 4, !7, i64 8}
!55 = !{!56, !11, i64 16}
!56 = !{!"xpv", !6, i64 0, !7, i64 8, !11, i64 16, !7, i64 24}
!57 = !{!12, !12, i64 0}
!58 = !{!46, !6, i64 40}
!59 = !{!60, !7, i64 72}
!60 = !{!"xpvlv", !6, i64 0, !7, i64 8, !11, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !11, i64 56, !6, i64 64, !7, i64 72, !7, i64 73}
!61 = !{!60, !6, i64 64}
!62 = !{!63, !11, i64 24}
!63 = !{!"magic", !6, i64 0, !6, i64 8, !64, i64 16, !7, i64 18, !7, i64 19, !11, i64 24, !6, i64 32, !6, i64 40}
!64 = !{!"short", !7, i64 0}
!65 = !{!63, !7, i64 19}
!66 = !{!48, !12, i64 56}
!67 = !{!68, !12, i64 12}
!68 = !{!"gv", !6, i64 0, !12, i64 8, !12, i64 12, !7, i64 16}
!69 = !{!30, !12, i64 12}
!70 = !{!60, !11, i64 56}
!71 = !{!11, !11, i64 0}
!72 = distinct !{!72, !23}
!73 = !{!43, !6, i64 40}
!74 = !{!19, !12, i64 12}
!75 = !{!43, !12, i64 24}
!76 = !{!68, !6, i64 0}
!77 = !{!43, !6, i64 0}
!78 = distinct !{!78, !23}
!79 = distinct !{!79, !23}
!80 = distinct !{!80, !23}
!81 = !{!82, !82, i64 0}
!82 = !{!"_Bool", !7, i64 0}
!83 = !{i8 0, i8 2}
!84 = !{}
!85 = distinct !{!85, !23}
!86 = distinct !{!86, !23}
!87 = !{!43, !6, i64 56}
!88 = !{!43, !6, i64 16}
!89 = !{!43, !6, i64 32}
!90 = !{!48, !12, i64 36}
!91 = !{!92, !11, i64 16}
!92 = !{!"xpvgv", !6, i64 0, !7, i64 8, !11, i64 16, !7, i64 24, !7, i64 32, !7, i64 40}
!93 = !{i64 0, i64 65}
!94 = distinct !{!94, !23}
!95 = distinct !{!95, !23}
!96 = distinct !{!96, !23}
!97 = !{i32 -1, i32 3}
!98 = distinct !{!98, !23}
!99 = distinct !{!99, !23}
!100 = distinct !{!100, !23}
!101 = distinct !{!101, !23, !102, !103}
!102 = !{!"llvm.loop.isvectorized", i32 1}
!103 = !{!"llvm.loop.unroll.runtime.disable"}
!104 = distinct !{!104, !23}
!105 = distinct !{!105, !23, !102, !103}
!106 = distinct !{!106, !23, !102, !103}
!107 = distinct !{!107, !23, !103, !102}
!108 = distinct !{!108, !23, !103, !102}
!109 = distinct !{!109, !23}
!110 = !{!111, !111, i64 0}
!111 = !{!"double", !7, i64 0}
!112 = !{!60, !7, i64 73}
!113 = distinct !{!113, !23}
!114 = distinct !{!114, !23}
!115 = distinct !{!115, !23}
!116 = distinct !{!116, !23}
!117 = distinct !{!117, !23}
!118 = distinct !{!118, !23}
!119 = distinct !{!119, !23}
!120 = distinct !{!120, !23}
!121 = distinct !{!121, !23}
!122 = distinct !{!122, !23, !102, !103}
!123 = distinct !{!123, !124}
!124 = !{!"llvm.loop.unroll.disable"}
!125 = distinct !{!125, !23, !102}
!126 = distinct !{!126, !23}
!127 = distinct !{!127, !23}
!128 = distinct !{!128, !23}
!129 = distinct !{!129, !23}
!130 = distinct !{!130, !23}
!131 = distinct !{!131, !23}
!132 = !{!63, !6, i64 32}
!133 = distinct !{!133, !23}
!134 = !{!21, !11, i64 24}
!135 = distinct !{!135, !23}
!136 = distinct !{!136, !23}
!137 = distinct !{!137, !23}
!138 = distinct !{!138, !23}
!139 = distinct !{!139, !23}
!140 = distinct !{!140, !23}
!141 = distinct !{!141, !23}
!142 = distinct !{!142, !23}
!143 = distinct !{!143, !23}
!144 = distinct !{!144, !23}
!145 = distinct !{!145, !23}
!146 = distinct !{!146, !23}
!147 = distinct !{!147, !23}
!148 = distinct !{!148, !23}
!149 = !{!21, !6, i64 32}
!150 = distinct !{!150, !23}
!151 = distinct !{!151, !23}
!152 = distinct !{!152, !23}
!153 = distinct !{!153, !23, !102, !103}
!154 = distinct !{!154, !23, !102}
!155 = distinct !{!155, !23, !102, !103}
!156 = distinct !{!156, !124}
!157 = distinct !{!157, !23, !102}
!158 = distinct !{!158, !23, !102, !103}
!159 = distinct !{!159, !124}
!160 = distinct !{!160, !23, !102}
!161 = distinct !{!161, !23}
!162 = distinct !{!162, !23}
!163 = !{!64, !64, i64 0}
!164 = distinct !{!164, !23}
!165 = distinct !{!165, !23}
!166 = distinct !{!166, !23}
!167 = distinct !{!167, !23}
!168 = distinct !{!168, !23}
!169 = distinct !{!169, !23}
!170 = distinct !{!170, !23}
!171 = distinct !{!171, !23}
!172 = !{!173, !6, i64 56}
!173 = !{!"pmop", !6, i64 0, !6, i64 8, !6, i64 16, !11, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !7, i64 34, !7, i64 35, !6, i64 40, !6, i64 48, !6, i64 56, !12, i64 64, !7, i64 72, !7, i64 80, !6, i64 88}
!174 = !{!175, !12, i64 56}
!175 = !{!"regexp", !6, i64 0, !7, i64 8, !11, i64 16, !7, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !12, i64 56, !11, i64 64, !11, i64 72, !11, i64 80, !6, i64 88, !12, i64 96, !12, i64 100, !6, i64 104, !12, i64 112, !12, i64 116, !6, i64 120, !6, i64 128, !6, i64 136, !11, i64 144, !11, i64 152, !11, i64 160, !11, i64 168, !12, i64 176, !12, i64 176, !6, i64 184}
!176 = !{!173, !11, i64 24}
!177 = distinct !{!177, !124}
!178 = distinct !{!178, !23}
!179 = !{!180, !6, i64 0}
!180 = !{!"stackinfo", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !12, i64 32, !12, i64 36, !12, i64 40, !12, i64 44}
!181 = distinct !{!181, !23}
!182 = distinct !{!182, !23}
!183 = distinct !{!183, !23}
!184 = distinct !{!184, !23}
!185 = distinct !{!185, !23}
!186 = distinct !{!186, !23}
!187 = distinct !{!187, !23}
!188 = distinct !{!188, !23}
!189 = distinct !{!189, !23}
!190 = distinct !{!190, !23}
!191 = distinct !{!191, !23}
!192 = distinct !{!192, !23}
!193 = distinct !{!193, !23, !102, !103}
!194 = distinct !{!194, !23, !103, !102}
!195 = distinct !{!195, !23}
!196 = distinct !{!196, !23}
!197 = !{!198, !12, i64 12}
!198 = !{!"p5rx", !6, i64 0, !12, i64 8, !12, i64 12, !7, i64 16}
!199 = !{!175, !12, i64 96}
!200 = !{!175, !6, i64 32}
!201 = !{!202, !6, i64 24}
!202 = !{!"regexp_engine", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72, !6, i64 80, !6, i64 88}
!203 = !{!175, !11, i64 72}
!204 = distinct !{!204, !23}
!205 = distinct !{!205, !23}
!206 = distinct !{!206, !23}
!207 = !{!202, !6, i64 8}
!208 = !{!175, !6, i64 120}
!209 = !{!210, !11, i64 0}
!210 = !{!"regexp_paren_pair", !11, i64 0, !11, i64 8, !11, i64 16}
!211 = !{!210, !11, i64 8}
!212 = distinct !{!212, !23, !213}
!213 = !{!"llvm.loop.peeled.count", i32 1}
!214 = distinct !{!214, !23}
!215 = distinct !{!215, !23}
!216 = distinct !{!216, !23}
!217 = !{!218, !6, i64 40}
!218 = !{!"svop", !6, i64 0, !6, i64 8, !6, i64 16, !11, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !7, i64 34, !7, i64 35, !6, i64 40}
!219 = distinct !{!219, !23}
!220 = !{!180, !6, i64 8}
!221 = !{!180, !12, i64 32}
!222 = distinct !{!222, !23, !102, !103}
!223 = !{!48, !12, i64 60}
!224 = distinct !{!224, !23, !102}
!225 = distinct !{!225, !23}
!226 = !{!63, !64, i64 16}
!227 = distinct !{!227, !23}
!228 = distinct !{!228, !23}
