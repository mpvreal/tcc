; ModuleID = 'blender/source/blender/editors/sculpt_paint/sculpt.c'
source_filename = "blender/source/blender/editors/sculpt_paint/sculpt.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.Object = type { %struct.ID, ptr, ptr, i16, i16, i32, i32, i32, [64 x i8], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.bAnimVizSettings, ptr, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, ptr, ptr, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, ptr, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, i8, i8, i16, float, ptr, ptr, ptr, ptr, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, [2 x float], ptr, %struct.ListBase, ptr }
%struct.ID = type { ptr, ptr, ptr, ptr, [66 x i8], i16, i32, i32, i32, ptr }
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.ListBase = type { ptr, ptr }
%struct.SculptSession = type { ptr, ptr, ptr, ptr, i32, i32, ptr, ptr, ptr, ptr, ptr, i32, i32, i8, ptr, ptr, i8, i8, ptr, ptr, ptr, i8, i32, ptr, i32, ptr, ptr, ptr, ptr, i8, [3 x float], [3 x float], i32 }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.StrokeCache = type { float, [3 x float], i32, [3 x float], [2 x float], i32, i32, ptr, ptr, ptr, ptr, float, float, [3 x float], [3 x float], i8, i8, float, [2 x float], float, i8, [4 x [4 x float]], ptr, ptr, ptr, float, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [4 x [4 x float]], [3 x float], i32, [4 x [4 x float]], [4 x [4 x float]], i8, [3 x float], float, ptr, [66 x i8], i8, i32, i8, float, i8, [3 x float], [3 x float], %struct.rcti, %struct.rcti }
%struct.Mesh = type { %struct.ID, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, ptr }
%struct.CustomData = type { ptr, [41 x i32], i32, i32, i32, ptr, ptr }
%struct.Key = type { %struct.ID, ptr, ptr, [32 x i8], i32, i32, %struct.ListBase, ptr, ptr, i16, i16, i16, i16, float, i32 }
%struct.KeyBlock = type { ptr, ptr, float, float, i16, i16, i16, i16, i32, i32, ptr, [64 x i8], [64 x i8], float, float }
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.SculptRaycastData = type { ptr, ptr, ptr, i8, float, i8 }
%struct.ViewContext = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, [2 x i32] }
%struct.ToolSettings = type { ptr, ptr, ptr, ptr, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, ptr, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, ptr, ptr, ptr, ptr, [3 x float], float }
%struct.Paint = type { ptr, ptr, ptr, [4 x i8], i32, i32, i32 }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], ptr, float, float, i32, i32, i32, i32, ptr, ptr }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, ptr, float, i32 }
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.Brush = type { %struct.ID, %struct.BrushClone, ptr, %struct.MTex, %struct.MTex, ptr, ptr, ptr, ptr, ptr, [1024 x i8], float, i16, i16, float, i32, i32, i32, float, i32, i32, i32, i32, float, float, [3 x float], float, [3 x float], i32, float, float, i32, i32, i32, i8, i8, i8, i8, float, float, float, float, float, i32, i32, i32, float, float, i32, i32, float, [3 x float], [3 x float], [2 x float], [2 x float], [2 x float], [2 x float] }
%struct.BrushClone = type { ptr, [2 x float], float, float }
%struct.MTex = type { i16, i16, i16, i16, ptr, ptr, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.ARegion = type { ptr, ptr, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, ptr, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, ptr, i32, i32, ptr, ptr }
%struct.rctf = type { float, float, float, float }
%struct.RegionView3D = type { [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [6 x [4 x float]], [6 x [4 x float]], ptr, ptr, ptr, ptr, ptr, ptr, ptr, [4 x [4 x float]], [4 x float], float, float, float, float, [3 x float], float, i8, i8, i8, i8, i8, [3 x i8], [2 x float], i16, i16, [4 x float], i16, i16, float, [3 x float], float, [3 x float] }
%struct.SculptUndoNode = type { ptr, ptr, i32, [66 x i8], ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, ptr, i32, i32, i32, ptr, ptr, ptr, i8, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, [64 x i8] }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, i32, float, i32, i32, ptr, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, ptr, ptr, i32, ptr, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, ptr, %struct.ListBase, ptr }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], ptr }
%struct.Scene = type { %struct.ID, ptr, ptr, ptr, ptr, %struct.ListBase, ptr, ptr, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], ptr, ptr, ptr, ptr, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, ptr, ptr, ptr, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, ptr, %struct.PhysicsSettings, ptr, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, ptr }
%struct.RenderData = type { %struct.ImageFormatData, ptr, ptr, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, ptr, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, ptr }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, ptr }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, ptr, ptr }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.BMAllocTemplate = type { i32, i32, i32, i32 }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, ptr, ptr }
%struct.wmOperatorType = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.ListBase, ptr, ptr, ptr, %struct.ExtensionRNA, i16 }
%struct.ExtensionRNA = type { ptr, ptr, ptr, ptr }
%struct.wmEvent = type { ptr, ptr, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, ptr, ptr, i16, i16, i32, ptr }
%struct.wmOperator = type { ptr, ptr, [64 x i8], ptr, ptr, ptr, ptr, ptr, ptr, %struct.ListBase, ptr, ptr, i16, [3 x i16] }
%struct.Tex = type { %struct.ID, ptr, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, [7 x i8] }
%struct.ImageUser = type { ptr, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.bNodeTree = type { %struct.ID, ptr, ptr, [64 x i8], ptr, ptr, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, ptr, %struct.bNodeInstanceKey, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.bNodeInstanceKey = type { i32 }
%struct.ModifierData = type { ptr, ptr, i32, i32, i32, i32, [64 x i8], ptr, ptr }
%struct.MirrorModifierData = type { %struct.ModifierData, i16, i16, float, ptr }
%struct.PBVHVertexIter = type { i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, ptr, ptr, %struct.GSetIterator, %struct.GSetIterator, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.GSetIterator = type { %struct.GHashIterator }
%struct.GHashIterator = type { ptr, ptr, i32 }
%struct.CCGKey = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.BMVert = type { %struct.BMHeader, ptr, [3 x float], [3 x float], ptr }
%struct.BMHeader = type { ptr, i32, i8, i8, i8 }
%struct.PBVHProxyNode = type { ptr }
%struct.SculptSearchSphereData = type { ptr, ptr, float, i8 }
%struct.BMIter = type { %union.anon, ptr, ptr, i32, i8 }
%union.anon = type { %struct.BMIter__face_of_vert }
%struct.BMIter__face_of_vert = type { ptr, ptr, ptr, ptr, ptr }
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.MeshElemMap = type { ptr, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.BMLoop = type { %struct.BMHeader, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.VirtualModifierData = type { %struct.ArmatureModifierData, %struct.CurveModifierData, %struct.LatticeModifierData, %struct.ShapeKeyModifierData }
%struct.ArmatureModifierData = type { %struct.ModifierData, i16, i16, i32, ptr, ptr, [64 x i8] }
%struct.CurveModifierData = type { %struct.ModifierData, ptr, [64 x i8], i16, [6 x i8] }
%struct.LatticeModifierData = type { %struct.ModifierData, ptr, [64 x i8], float, [4 x i8] }
%struct.ShapeKeyModifierData = type { %struct.ModifierData }
%struct.MultiresModifierData = type { %struct.ModifierData, i8, i8, i8, i8, i8, i8, [2 x i8] }
%struct.PointerRNA = type { %struct.anon, ptr, ptr }
%struct.anon = type { ptr }
%struct.ModifierTypeInfo = type { [32 x i8], [32 x i8], i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.SculptDetailRaycastData = type { ptr, ptr, i8, float, float }

@MEM_freeN = external local_unnamed_addr global ptr, align 8
@__const.sculpt_dyntopo_node_layers_add.layer_id = private unnamed_addr constant [17 x i8] c"_dyntopo_node_id\00", align 16
@CD_MASK_MESH = external local_unnamed_addr constant i64, align 8
@.str = private unnamed_addr constant [7 x i8] c"Sculpt\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"SCULPT_OT_brush_stroke\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"Sculpt a stroke into the geometry\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"ignore_background_click\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"Ignore Background Click\00", align 1
@.str.5 = private unnamed_addr constant [49 x i8] c"Clicks on the background do not start the stroke\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@MEM_callocN = external local_unnamed_addr global ptr, align 8
@.str.7 = private unnamed_addr constant [13 x i8] c"stroke cache\00", align 1
@__const.sculpt_update_cache_invariants.viewDir = private unnamed_addr constant [3 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@.str.8 = private unnamed_addr constant [7 x i8] c"Smooth\00", align 1
@MEM_mallocN = external local_unnamed_addr global ptr, align 8
@.str.9 = private unnamed_addr constant [26 x i8] c"sculpt mesh vertices copy\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"Sculpt face norms\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"tmpgrid_co array\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"tmprow_co array\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"tmpgrid_mask array\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"tmprow_mask array\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"tmprow_co\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"tmpgrid_co\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"tmprow_mask\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"tmpgrid_mask\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"Draw Brush\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"Smooth Brush\00", align 1
@.str.21 = private unnamed_addr constant [13 x i8] c"Crease Brush\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"Blob Brush\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"Pinch Brush\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"Inflate Brush\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"Grab Brush\00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"Nudge Brush\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"Thumb Brush\00", align 1
@.str.28 = private unnamed_addr constant [12 x i8] c"Layer Brush\00", align 1
@.str.29 = private unnamed_addr constant [14 x i8] c"Flatten Brush\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"Clay Brush\00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"Clay Strips Brush\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"Fill Brush\00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"Scrape Brush\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"Snake Hook Brush\00", align 1
@.str.35 = private unnamed_addr constant [13 x i8] c"Rotate Brush\00", align 1
@.str.36 = private unnamed_addr constant [11 x i8] c"Mask Brush\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"Simplify Brush\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"Sculpting\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"location\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"pen_flip\00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"mouse\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"pressure\00", align 1
@do_rotate_brush.flip = internal unnamed_addr constant [8 x i32] [i32 1, i32 -1, i32 -1, i32 1, i32 -1, i32 1, i32 1, i32 -1], align 16
@.str.43 = private unnamed_addr constant [27 x i8] c"flushStrokeDeofrm keyVerts\00", align 1
@.str.44 = private unnamed_addr constant [12 x i8] c"Sculpt Mode\00", align 1
@.str.45 = private unnamed_addr constant [28 x i8] c"SCULPT_OT_sculptmode_toggle\00", align 1
@.str.46 = private unnamed_addr constant [30 x i8] c"Toggle sculpt mode in 3D view\00", align 1
@.str.47 = private unnamed_addr constant [17 x i8] c"sculpt mode data\00", align 1
@.str.48 = private unnamed_addr constant [61 x i8] c"Object has non-uniform scale, sculpting may be unpredictable\00", align 1
@.str.49 = private unnamed_addr constant [58 x i8] c"Object has negative scale, sculpting may be unpredictable\00", align 1
@PAINT_CURSOR_SCULPT = external constant [3 x i8], align 1
@.str.50 = private unnamed_addr constant [25 x i8] c"Dynamic topology disable\00", align 1
@.str.51 = private unnamed_addr constant [24 x i8] c"Dynamic topology enable\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"sculpt session\00", align 1
@.str.53 = private unnamed_addr constant [20 x i8] c"Set Persistent Base\00", align 1
@.str.54 = private unnamed_addr constant [30 x i8] c"SCULPT_OT_set_persistent_base\00", align 1
@.str.55 = private unnamed_addr constant [53 x i8] c"Reset the copy of the mesh that is being sculpted on\00", align 1
@.str.56 = private unnamed_addr constant [24 x i8] c"Dynamic Topology Toggle\00", align 1
@.str.57 = private unnamed_addr constant [34 x i8] c"SCULPT_OT_dynamic_topology_toggle\00", align 1
@.str.58 = private unnamed_addr constant [58 x i8] c"Dynamic topology alters the mesh topology while sculpting\00", align 1
@.str.59 = private unnamed_addr constant [9 x i8] c"Warning!\00", align 1
@.str.60 = private unnamed_addr constant [22 x i8] c"Vertex Data Detected!\00", align 1
@.str.61 = private unnamed_addr constant [66 x i8] c"Dyntopo will not preserve vertex colors, UVs, or other customdata\00", align 1
@.str.62 = private unnamed_addr constant [31 x i8] c"Generative Modifiers Detected!\00", align 1
@.str.63 = private unnamed_addr constant [76 x i8] c"Keeping the modifiers will increase polycount when returning to object mode\00", align 1
@.str.64 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.65 = private unnamed_addr constant [9 x i8] c"Optimize\00", align 1
@.str.66 = private unnamed_addr constant [19 x i8] c"SCULPT_OT_optimize\00", align 1
@.str.67 = private unnamed_addr constant [50 x i8] c"Recalculate the sculpt BVH to improve performance\00", align 1
@.str.68 = private unnamed_addr constant [11 x i8] c"Symmetrize\00", align 1
@.str.69 = private unnamed_addr constant [21 x i8] c"SCULPT_OT_symmetrize\00", align 1
@.str.70 = private unnamed_addr constant [38 x i8] c"Symmetrize the topology modifications\00", align 1
@.str.71 = private unnamed_addr constant [28 x i8] c"Dynamic topology symmetrize\00", align 1
@.str.72 = private unnamed_addr constant [45 x i8] c"symmetrize input=%avef direction=%i  dist=%f\00", align 1
@.str.73 = private unnamed_addr constant [18 x i8] c"Detail Flood Fill\00", align 1
@.str.74 = private unnamed_addr constant [28 x i8] c"SCULPT_OT_detail_flood_fill\00", align 1
@.str.75 = private unnamed_addr constant [53 x i8] c"Flood fill the mesh with the selected detail setting\00", align 1
@.str.76 = private unnamed_addr constant [28 x i8] c"Dynamic topology flood fill\00", align 1
@.str.77 = private unnamed_addr constant [19 x i8] c"Sample Detail Size\00", align 1
@.str.78 = private unnamed_addr constant [29 x i8] c"SCULPT_OT_sample_detail_size\00", align 1
@.str.79 = private unnamed_addr constant [40 x i8] c"Sample the mesh detail on clicked point\00", align 1
@.str.80 = private unnamed_addr constant [9 x i8] c"Location\00", align 1
@.str.81 = private unnamed_addr constant [31 x i8] c"Screen Coordinates of sampling\00", align 1
@.str.82 = private unnamed_addr constant [36 x i8] c"Click on the mesh to set the detail\00", align 1
@reltable.sculpt_stroke_test_start = private unnamed_addr constant [19 x i32] [i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.19 to i64), i64 ptrtoint (ptr @reltable.sculpt_stroke_test_start to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.20 to i64), i64 ptrtoint (ptr @reltable.sculpt_stroke_test_start to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.23 to i64), i64 ptrtoint (ptr @reltable.sculpt_stroke_test_start to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.24 to i64), i64 ptrtoint (ptr @reltable.sculpt_stroke_test_start to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.25 to i64), i64 ptrtoint (ptr @reltable.sculpt_stroke_test_start to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.28 to i64), i64 ptrtoint (ptr @reltable.sculpt_stroke_test_start to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.29 to i64), i64 ptrtoint (ptr @reltable.sculpt_stroke_test_start to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.30 to i64), i64 ptrtoint (ptr @reltable.sculpt_stroke_test_start to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.32 to i64), i64 ptrtoint (ptr @reltable.sculpt_stroke_test_start to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.33 to i64), i64 ptrtoint (ptr @reltable.sculpt_stroke_test_start to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.26 to i64), i64 ptrtoint (ptr @reltable.sculpt_stroke_test_start to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.27 to i64), i64 ptrtoint (ptr @reltable.sculpt_stroke_test_start to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.34 to i64), i64 ptrtoint (ptr @reltable.sculpt_stroke_test_start to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.35 to i64), i64 ptrtoint (ptr @reltable.sculpt_stroke_test_start to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.37 to i64), i64 ptrtoint (ptr @reltable.sculpt_stroke_test_start to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.21 to i64), i64 ptrtoint (ptr @reltable.sculpt_stroke_test_start to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.22 to i64), i64 ptrtoint (ptr @reltable.sculpt_stroke_test_start to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.31 to i64), i64 ptrtoint (ptr @reltable.sculpt_stroke_test_start to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.36 to i64), i64 ptrtoint (ptr @reltable.sculpt_stroke_test_start to i64)) to i32)], align 4

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @ED_sculpt_stroke_get_average(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.SculptSession, ptr %4, i64 0, i32 29
  %6 = load i8, ptr %5, align 8, !tbaa !17
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.SculptSession, ptr %4, i64 0, i32 32
  %10 = load i32, ptr %9, align 4, !tbaa !19
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %25

12:                                               ; preds = %8
  %13 = sitofp i32 %10 to float
  %14 = fdiv fast float 1.000000e+00, %13
  %15 = getelementptr inbounds %struct.SculptSession, ptr %4, i64 0, i32 31
  %16 = load float, ptr %15, align 4, !tbaa !20
  %17 = fmul fast float %16, %14
  store float %17, ptr %1, align 4, !tbaa !20
  %18 = getelementptr inbounds %struct.SculptSession, ptr %4, i64 0, i32 31, i64 1
  %19 = load float, ptr %18, align 4, !tbaa !20
  %20 = fmul fast float %19, %14
  %21 = getelementptr inbounds float, ptr %1, i64 1
  store float %20, ptr %21, align 4, !tbaa !20
  %22 = getelementptr inbounds %struct.SculptSession, ptr %4, i64 0, i32 31, i64 2
  %23 = load float, ptr %22, align 4, !tbaa !20
  %24 = fmul fast float %23, %14
  br label %33

25:                                               ; preds = %8, %2
  %26 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 47, i64 3
  %27 = load float, ptr %26, align 4, !tbaa !20
  store float %27, ptr %1, align 4, !tbaa !20
  %28 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 47, i64 3, i64 1
  %29 = load float, ptr %28, align 4, !tbaa !20
  %30 = getelementptr inbounds float, ptr %1, i64 1
  store float %29, ptr %30, align 4, !tbaa !20
  %31 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 47, i64 3, i64 2
  %32 = load float, ptr %31, align 4, !tbaa !20
  br label %33

33:                                               ; preds = %25, %12
  %34 = phi float [ %32, %25 ], [ %24, %12 ]
  %35 = getelementptr inbounds float, ptr %1, i64 2
  store float %34, ptr %35, align 4, !tbaa !20
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @ED_sculpt_minmax(ptr noundef %0, ptr nocapture noundef writeonly %1, ptr nocapture noundef writeonly %2) local_unnamed_addr #2 {
  %4 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %5 = icmp eq ptr %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.Object, ptr %4, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !5
  %9 = icmp eq ptr %8, null
  br i1 %9, label %28, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.SculptSession, ptr %8, i64 0, i32 29
  %12 = load i8, ptr %11, align 8, !tbaa !17
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %28, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.SculptSession, ptr %8, i64 0, i32 30
  %16 = load float, ptr %15, align 4, !tbaa !20
  store float %16, ptr %1, align 4, !tbaa !20
  %17 = getelementptr inbounds %struct.SculptSession, ptr %8, i64 0, i32 30, i64 1
  %18 = load float, ptr %17, align 4, !tbaa !20
  %19 = getelementptr inbounds float, ptr %1, i64 1
  store float %18, ptr %19, align 4, !tbaa !20
  %20 = getelementptr inbounds %struct.SculptSession, ptr %8, i64 0, i32 30, i64 2
  %21 = load float, ptr %20, align 4, !tbaa !20
  %22 = getelementptr inbounds float, ptr %1, i64 2
  store float %21, ptr %22, align 4, !tbaa !20
  %23 = load float, ptr %15, align 4, !tbaa !20
  store float %23, ptr %2, align 4, !tbaa !20
  %24 = load float, ptr %17, align 4, !tbaa !20
  %25 = getelementptr inbounds float, ptr %2, i64 1
  store float %24, ptr %25, align 4, !tbaa !20
  %26 = load float, ptr %20, align 4, !tbaa !20
  %27 = getelementptr inbounds float, ptr %2, i64 2
  store float %26, ptr %27, align 4, !tbaa !20
  br label %28

28:                                               ; preds = %3, %6, %10, %14
  %29 = phi i8 [ 1, %14 ], [ 0, %10 ], [ 0, %6 ], [ 0, %3 ]
  ret i8 %29
}

declare ptr @CTX_data_active_object(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @ED_sculpt_redraw_planes_get(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #2 {
  %5 = alloca %struct.rcti, align 4
  %6 = getelementptr %struct.Object, ptr %3, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.SculptSession, ptr %7, i64 0, i32 15
  %9 = load ptr, ptr %8, align 8, !tbaa !21
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #10
  %10 = getelementptr inbounds %struct.SculptSession, ptr %7, i64 0, i32 28
  %11 = load ptr, ptr %10, align 8, !tbaa !22
  %12 = getelementptr inbounds %struct.StrokeCache, ptr %11, i64 0, i32 54
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %5, ptr noundef nonnull align 4 dereferenceable(16) %12, i64 16, i1 false), !tbaa.struct !23
  %13 = getelementptr inbounds %struct.StrokeCache, ptr %11, i64 0, i32 53
  %14 = tail call zeroext i8 @BLI_rcti_is_empty(ptr noundef nonnull %13) #10
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = load ptr, ptr %10, align 8, !tbaa !22
  %18 = getelementptr inbounds %struct.StrokeCache, ptr %17, i64 0, i32 53
  call void @BLI_rcti_union(ptr noundef nonnull %5, ptr noundef nonnull %18) #10
  br label %19

19:                                               ; preds = %4, %16
  call void @paint_calc_redraw_planes(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull %3, ptr noundef nonnull %5) #10
  %20 = load ptr, ptr %6, align 8, !tbaa !5
  %21 = getelementptr inbounds %struct.SculptSession, ptr %20, i64 0, i32 28
  %22 = load ptr, ptr %21, align 8, !tbaa !22
  %23 = getelementptr inbounds %struct.StrokeCache, ptr %22, i64 0, i32 53
  %24 = getelementptr inbounds %struct.StrokeCache, ptr %22, i64 0, i32 54
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %23, ptr noundef nonnull align 4 dereferenceable(16) %24, i64 16, i1 false), !tbaa.struct !23
  %25 = icmp eq ptr %9, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %19
  call void @BKE_pbvh_update(ptr noundef nonnull %9, i32 noundef 32, ptr noundef null) #10
  br label %27

27:                                               ; preds = %26, %19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #10
  ret void
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #4

declare void @paint_calc_redraw_planes(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BKE_pbvh_update(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @sculpt_vertcos_to_key(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 19
  %5 = load ptr, ptr %4, align 8, !tbaa !25
  %6 = getelementptr inbounds %struct.Mesh, ptr %5, i64 0, i32 4
  %7 = load ptr, ptr %6, align 8, !tbaa !26
  %8 = getelementptr inbounds %struct.Key, ptr %7, i64 0, i32 9
  %9 = load i16, ptr %8, align 8, !tbaa !29
  %10 = icmp eq i16 %9, 1
  br i1 %10, label %11, label %75

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.Key, ptr %7, i64 0, i32 6
  %13 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 115
  br label %14

14:                                               ; preds = %18, %11
  %15 = phi ptr [ %12, %11 ], [ %16, %18 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !31
  %17 = icmp eq ptr %16, null
  br i1 %17, label %75, label %18

18:                                               ; preds = %14
  %19 = load i16, ptr %13, align 2, !tbaa !32
  %20 = sext i16 %19 to i32
  %21 = add nsw i32 %20, -1
  %22 = getelementptr inbounds %struct.KeyBlock, ptr %16, i64 0, i32 6
  %23 = load i16, ptr %22, align 4, !tbaa !33
  %24 = sext i16 %23 to i32
  %25 = icmp eq i32 %21, %24
  br i1 %25, label %26, label %14, !llvm.loop !35

26:                                               ; preds = %18
  %27 = tail call ptr @BKE_key_convert_to_vertcos(ptr noundef nonnull %0, ptr noundef %1) #10
  %28 = getelementptr inbounds %struct.Mesh, ptr %5, i64 0, i32 26
  %29 = load i32, ptr %28, align 8, !tbaa !37
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %52

31:                                               ; preds = %26
  %32 = zext i32 %29 to i64
  br label %33

33:                                               ; preds = %31, %33
  %34 = phi i64 [ 0, %31 ], [ %50, %33 ]
  %35 = getelementptr inbounds [3 x float], ptr %27, i64 %34
  %36 = getelementptr inbounds [3 x float], ptr %2, i64 %34
  %37 = load float, ptr %36, align 4, !tbaa !20
  %38 = load float, ptr %35, align 4, !tbaa !20
  %39 = fsub fast float %37, %38
  store float %39, ptr %35, align 4, !tbaa !20
  %40 = getelementptr inbounds float, ptr %36, i64 1
  %41 = load float, ptr %40, align 4, !tbaa !20
  %42 = getelementptr inbounds float, ptr %35, i64 1
  %43 = load float, ptr %42, align 4, !tbaa !20
  %44 = fsub fast float %41, %43
  store float %44, ptr %42, align 4, !tbaa !20
  %45 = getelementptr inbounds float, ptr %36, i64 2
  %46 = load float, ptr %45, align 4, !tbaa !20
  %47 = getelementptr inbounds float, ptr %35, i64 2
  %48 = load float, ptr %47, align 4, !tbaa !20
  %49 = fsub fast float %46, %48
  store float %49, ptr %47, align 4, !tbaa !20
  %50 = add nuw nsw i64 %34, 1
  %51 = icmp eq i64 %50, %32
  br i1 %51, label %52, label %33, !llvm.loop !38

52:                                               ; preds = %33, %26
  %53 = load ptr, ptr %6, align 8, !tbaa !26
  %54 = getelementptr inbounds %struct.Key, ptr %53, i64 0, i32 6
  %55 = load ptr, ptr %54, align 8, !tbaa !31
  %56 = icmp eq ptr %55, null
  br i1 %56, label %72, label %57

57:                                               ; preds = %52, %69
  %58 = phi ptr [ %70, %69 ], [ %55, %52 ]
  %59 = icmp eq ptr %58, %1
  br i1 %59, label %69, label %60

60:                                               ; preds = %57
  %61 = load i16, ptr %13, align 2, !tbaa !32
  %62 = sext i16 %61 to i32
  %63 = add nsw i32 %62, -1
  %64 = getelementptr inbounds %struct.KeyBlock, ptr %58, i64 0, i32 6
  %65 = load i16, ptr %64, align 4, !tbaa !33
  %66 = sext i16 %65 to i32
  %67 = icmp eq i32 %63, %66
  br i1 %67, label %68, label %69

68:                                               ; preds = %60
  tail call void @BKE_key_convert_from_offset(ptr noundef nonnull %0, ptr noundef nonnull %58, ptr noundef %27) #10
  br label %69

69:                                               ; preds = %57, %68, %60
  %70 = load ptr, ptr %58, align 8, !tbaa !31
  %71 = icmp eq ptr %70, null
  br i1 %71, label %72, label %57, !llvm.loop !39

72:                                               ; preds = %69, %52
  %73 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  tail call void %73(ptr noundef %27) #10
  %74 = load ptr, ptr %6, align 8, !tbaa !26
  br label %75

75:                                               ; preds = %14, %3, %72
  %76 = phi ptr [ %7, %3 ], [ %74, %72 ], [ %7, %14 ]
  %77 = getelementptr inbounds %struct.Key, ptr %76, i64 0, i32 2
  %78 = load ptr, ptr %77, align 8, !tbaa !40
  %79 = icmp eq ptr %78, %1
  br i1 %79, label %80, label %132

80:                                               ; preds = %75
  %81 = getelementptr inbounds %struct.Mesh, ptr %5, i64 0, i32 26
  %82 = load i32, ptr %81, align 8, !tbaa !37
  %83 = icmp sgt i32 %82, 0
  br i1 %83, label %84, label %131

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.Mesh, ptr %5, i64 0, i32 15
  %86 = load ptr, ptr %85, align 8, !tbaa !41
  %87 = zext i32 %82 to i64
  %88 = and i64 %87, 1
  %89 = icmp eq i32 %82, 1
  br i1 %89, label %118, label %90

90:                                               ; preds = %84
  %91 = and i64 %87, 4294967294
  br label %92

92:                                               ; preds = %92, %90
  %93 = phi i64 [ 0, %90 ], [ %114, %92 ]
  %94 = phi ptr [ %86, %90 ], [ %115, %92 ]
  %95 = phi i64 [ 0, %90 ], [ %116, %92 ]
  %96 = getelementptr inbounds [3 x float], ptr %2, i64 %93
  %97 = load float, ptr %96, align 4, !tbaa !20
  store float %97, ptr %94, align 4, !tbaa !20
  %98 = getelementptr inbounds float, ptr %96, i64 1
  %99 = load float, ptr %98, align 4, !tbaa !20
  %100 = getelementptr inbounds float, ptr %94, i64 1
  store float %99, ptr %100, align 4, !tbaa !20
  %101 = getelementptr inbounds float, ptr %96, i64 2
  %102 = load float, ptr %101, align 4, !tbaa !20
  %103 = getelementptr inbounds float, ptr %94, i64 2
  store float %102, ptr %103, align 4, !tbaa !20
  %104 = or i64 %93, 1
  %105 = getelementptr inbounds %struct.MVert, ptr %94, i64 1
  %106 = getelementptr inbounds [3 x float], ptr %2, i64 %104
  %107 = load float, ptr %106, align 4, !tbaa !20
  store float %107, ptr %105, align 4, !tbaa !20
  %108 = getelementptr inbounds float, ptr %106, i64 1
  %109 = load float, ptr %108, align 4, !tbaa !20
  %110 = getelementptr inbounds %struct.MVert, ptr %94, i64 1, i32 0, i64 1
  store float %109, ptr %110, align 4, !tbaa !20
  %111 = getelementptr inbounds float, ptr %106, i64 2
  %112 = load float, ptr %111, align 4, !tbaa !20
  %113 = getelementptr inbounds %struct.MVert, ptr %94, i64 1, i32 0, i64 2
  store float %112, ptr %113, align 4, !tbaa !20
  %114 = add nuw nsw i64 %93, 2
  %115 = getelementptr inbounds %struct.MVert, ptr %94, i64 2
  %116 = add i64 %95, 2
  %117 = icmp eq i64 %116, %91
  br i1 %117, label %118, label %92, !llvm.loop !42

118:                                              ; preds = %92, %84
  %119 = phi i64 [ 0, %84 ], [ %114, %92 ]
  %120 = phi ptr [ %86, %84 ], [ %115, %92 ]
  %121 = icmp eq i64 %88, 0
  br i1 %121, label %131, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds [3 x float], ptr %2, i64 %119
  %124 = load float, ptr %123, align 4, !tbaa !20
  store float %124, ptr %120, align 4, !tbaa !20
  %125 = getelementptr inbounds float, ptr %123, i64 1
  %126 = load float, ptr %125, align 4, !tbaa !20
  %127 = getelementptr inbounds float, ptr %120, i64 1
  store float %126, ptr %127, align 4, !tbaa !20
  %128 = getelementptr inbounds float, ptr %123, i64 2
  %129 = load float, ptr %128, align 4, !tbaa !20
  %130 = getelementptr inbounds float, ptr %120, i64 2
  store float %129, ptr %130, align 4, !tbaa !20
  br label %131

131:                                              ; preds = %122, %118, %80
  tail call void @BKE_mesh_calc_normals(ptr noundef nonnull %5) #10
  br label %132

132:                                              ; preds = %131, %75
  tail call void @BKE_key_convert_from_vertcos(ptr noundef %0, ptr noundef %1, ptr noundef %2) #10
  ret void
}

declare ptr @BKE_key_convert_to_vertcos(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BKE_key_convert_from_offset(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BKE_mesh_calc_normals(ptr noundef) local_unnamed_addr #3

declare void @BKE_key_convert_from_vertcos(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @sculpt_mode_poll(ptr noundef %0) #2 {
  %2 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %3 = icmp eq ptr %2, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 27
  %6 = load i32, ptr %5, align 8, !tbaa !43
  %7 = lshr i32 %6, 1
  %8 = and i32 %7, 1
  br label %9

9:                                                ; preds = %4, %1
  %10 = phi i32 [ 0, %1 ], [ %8, %4 ]
  ret i32 %10
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @sculpt_mode_poll_view3d(ptr noundef %0) local_unnamed_addr #2 {
  %2 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %3 = icmp eq ptr %2, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 27
  %6 = load i32, ptr %5, align 8, !tbaa !43
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = tail call ptr @CTX_wm_region_view3d(ptr noundef %0) #10
  %11 = icmp ne ptr %10, null
  %12 = zext i1 %11 to i32
  br label %13

13:                                               ; preds = %1, %9, %4
  %14 = phi i32 [ 0, %4 ], [ %12, %9 ], [ 0, %1 ]
  ret i32 %14
}

declare ptr @CTX_wm_region_view3d(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @sculpt_poll_view3d(ptr noundef %0) #2 {
  %2 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %3 = icmp eq ptr %2, null
  br i1 %3, label %16, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 27
  %6 = load i32, ptr %5, align 8, !tbaa !43
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %4
  %10 = tail call i32 @paint_poll(ptr noundef %0) #10
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %9
  %13 = tail call ptr @CTX_wm_region_view3d(ptr noundef %0) #10
  %14 = icmp ne ptr %13, null
  %15 = zext i1 %14 to i32
  br label %16

16:                                               ; preds = %1, %4, %12, %9
  %17 = phi i32 [ 0, %9 ], [ %15, %12 ], [ 0, %4 ], [ 0, %1 ]
  ret i32 %17
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @sculpt_poll(ptr noundef %0) #2 {
  %2 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %3 = icmp eq ptr %2, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 27
  %6 = load i32, ptr %5, align 8, !tbaa !43
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = tail call i32 @paint_poll(ptr noundef %0) #10
  %11 = icmp ne i32 %10, 0
  %12 = zext i1 %11 to i32
  br label %13

13:                                               ; preds = %1, %9, %4
  %14 = phi i32 [ 0, %4 ], [ %12, %9 ], [ 0, %1 ]
  ret i32 %14
}

declare i32 @paint_poll(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @sculpt_stroke_get_location(ptr noundef %0, ptr nocapture noundef writeonly %1, ptr noundef %2) #2 {
  %4 = alloca [3 x float], align 8
  %5 = alloca [3 x float], align 4
  %6 = alloca [3 x float], align 8
  %7 = alloca %struct.SculptRaycastData, align 8
  %8 = alloca %struct.ViewContext, align 8
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #10
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %7) #10
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %8) #10
  call void @view3d_set_viewcontext(ptr noundef %0, ptr noundef nonnull %8) #10
  %9 = getelementptr inbounds %struct.ViewContext, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !44
  %11 = getelementptr inbounds %struct.Object, ptr %10, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !5
  %13 = getelementptr inbounds %struct.SculptSession, ptr %12, i64 0, i32 28
  %14 = load ptr, ptr %13, align 8, !tbaa !22
  %15 = icmp eq ptr %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.StrokeCache, ptr %14, i64 0, i32 41
  %18 = load i8, ptr %17, align 4, !tbaa !46
  br label %19

19:                                               ; preds = %3, %16
  %20 = phi i8 [ %18, %16 ], [ 0, %3 ]
  %21 = getelementptr inbounds %struct.SculptSession, ptr %12, i64 0, i32 7
  %22 = load ptr, ptr %21, align 8, !tbaa !49
  %23 = icmp eq ptr %22, null
  br i1 %23, label %24, label %28

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.SculptSession, ptr %12, i64 0, i32 17
  %26 = load i8, ptr %25, align 1, !tbaa !50
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %57, label %28

28:                                               ; preds = %24, %19
  %29 = call ptr @CTX_data_tool_settings(ptr noundef %0) #10
  %30 = getelementptr inbounds %struct.ToolSettings, ptr %29, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !51
  %32 = call ptr @BKE_paint_brush(ptr noundef %31) #10
  %33 = call ptr @CTX_data_scene(ptr noundef %0) #10
  %34 = load ptr, ptr %13, align 8, !tbaa !22
  %35 = icmp eq ptr %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %struct.StrokeCache, ptr %34, i64 0, i32 48
  %38 = load i8, ptr %37, align 8, !tbaa !58
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %55

40:                                               ; preds = %36, %28
  %41 = getelementptr inbounds %struct.Brush, ptr %32, i64 0, i32 34
  %42 = load i8, ptr %41, align 8, !tbaa !59
  %43 = icmp eq i8 %42, 2
  br i1 %43, label %55, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.Brush, ptr %32, i64 0, i32 38
  %46 = load float, ptr %45, align 4, !tbaa !63
  %47 = fcmp fast ogt float %46, 0.000000e+00
  br i1 %47, label %55, label %48

48:                                               ; preds = %44
  %49 = icmp eq i8 %42, 19
  br i1 %49, label %50, label %55

50:                                               ; preds = %48
  %51 = getelementptr inbounds %struct.Brush, ptr %32, i64 0, i32 37
  %52 = load i8, ptr %51, align 1, !tbaa !64
  %53 = icmp eq i8 %52, 1
  %54 = zext i1 %53 to i8
  br label %55

55:                                               ; preds = %50, %48, %44, %40, %36
  %56 = phi i8 [ 1, %44 ], [ 1, %40 ], [ 1, %36 ], [ 0, %48 ], [ %54, %50 ]
  call void @BKE_sculpt_update_mesh_elements(ptr noundef %33, ptr noundef %31, ptr noundef nonnull %10, i8 noundef zeroext %56, i8 noundef zeroext 0) #10
  br label %57

57:                                               ; preds = %24, %55
  %58 = call fast fastcc nofpclass(nan inf) float @sculpt_raycast_init(ptr noundef nonnull %8, ptr noundef %2, ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef nonnull %6, i8 noundef zeroext %20)
  %59 = getelementptr inbounds %struct.SculptRaycastData, ptr %7, i64 0, i32 5
  store i8 %20, ptr %59, align 8, !tbaa !65
  %60 = load ptr, ptr %11, align 8, !tbaa !5
  store ptr %60, ptr %7, align 8, !tbaa !67
  %61 = getelementptr inbounds %struct.SculptRaycastData, ptr %7, i64 0, i32 3
  store i8 0, ptr %61, align 8, !tbaa !68
  %62 = getelementptr inbounds %struct.SculptRaycastData, ptr %7, i64 0, i32 1
  store ptr %4, ptr %62, align 8, !tbaa !69
  %63 = getelementptr inbounds %struct.SculptRaycastData, ptr %7, i64 0, i32 2
  store ptr %6, ptr %63, align 8, !tbaa !70
  %64 = getelementptr inbounds %struct.SculptRaycastData, ptr %7, i64 0, i32 4
  store float %58, ptr %64, align 4, !tbaa !71
  %65 = getelementptr inbounds %struct.SculptSession, ptr %12, i64 0, i32 15
  %66 = load ptr, ptr %65, align 8, !tbaa !21
  call void @BKE_pbvh_raycast(ptr noundef %66, ptr noundef nonnull @sculpt_raycast_cb, ptr noundef nonnull %7, ptr noundef nonnull %4, ptr noundef nonnull %6, i8 noundef zeroext %20) #10
  %67 = getelementptr inbounds float, ptr %6, i64 2
  %68 = load float, ptr %67, align 8, !tbaa !20
  %69 = getelementptr inbounds float, ptr %1, i64 2
  %70 = load float, ptr %64, align 4, !tbaa !71
  %71 = fmul fast float %70, %68
  %72 = load <2 x float>, ptr %6, align 8, !tbaa !20
  %73 = insertelement <2 x float> poison, float %70, i64 0
  %74 = shufflevector <2 x float> %73, <2 x float> poison, <2 x i32> zeroinitializer
  %75 = fmul fast <2 x float> %74, %72
  %76 = load <2 x float>, ptr %4, align 8, !tbaa !20
  %77 = fadd fast <2 x float> %76, %75
  store <2 x float> %77, ptr %1, align 4, !tbaa !20
  %78 = getelementptr inbounds float, ptr %4, i64 2
  %79 = load float, ptr %78, align 8, !tbaa !20
  %80 = fadd fast float %79, %71
  store float %80, ptr %69, align 4, !tbaa !20
  %81 = load i8, ptr %61, align 8, !tbaa !68
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %8) #10
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %7) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #10
  ret i8 %81
}

declare void @view3d_set_viewcontext(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc nofpclass(nan inf) float @sculpt_raycast_init(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, i8 noundef zeroext %5) unnamed_addr #2 {
  %7 = alloca [4 x [4 x float]], align 16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %7) #10
  %8 = getelementptr inbounds %struct.ViewContext, ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !44
  %10 = getelementptr inbounds %struct.ViewContext, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !72
  %12 = getelementptr inbounds %struct.ARegion, ptr %11, i64 0, i32 30
  %13 = load ptr, ptr %12, align 8, !tbaa !73
  %14 = getelementptr inbounds %struct.ViewContext, ptr %0, i64 0, i32 4
  %15 = load ptr, ptr %14, align 8, !tbaa !77
  %16 = tail call zeroext i8 @ED_view3d_win_to_segment(ptr noundef %11, ptr noundef %15, ptr noundef %1, ptr noundef %2, ptr noundef %3, i8 noundef zeroext 1) #10
  %17 = getelementptr inbounds %struct.Object, ptr %9, i64 0, i32 47
  %18 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %7, ptr noundef nonnull %17) #10
  call void @mul_m4_v3(ptr noundef nonnull %7, ptr noundef %2) #10
  call void @mul_m4_v3(ptr noundef nonnull %7, ptr noundef %3) #10
  %19 = load float, ptr %3, align 4, !tbaa !20
  %20 = load float, ptr %2, align 4, !tbaa !20
  %21 = fsub fast float %19, %20
  store float %21, ptr %4, align 4, !tbaa !20
  %22 = getelementptr inbounds float, ptr %3, i64 1
  %23 = load float, ptr %22, align 4, !tbaa !20
  %24 = getelementptr inbounds float, ptr %2, i64 1
  %25 = load float, ptr %24, align 4, !tbaa !20
  %26 = fsub fast float %23, %25
  %27 = getelementptr inbounds float, ptr %4, i64 1
  store float %26, ptr %27, align 4, !tbaa !20
  %28 = getelementptr inbounds float, ptr %3, i64 2
  %29 = load float, ptr %28, align 4, !tbaa !20
  %30 = getelementptr inbounds float, ptr %2, i64 2
  %31 = load float, ptr %30, align 4, !tbaa !20
  %32 = fsub fast float %29, %31
  %33 = getelementptr inbounds float, ptr %4, i64 2
  %34 = fmul fast float %21, %21
  %35 = fmul fast float %26, %26
  %36 = fadd fast float %35, %34
  %37 = fmul fast float %32, %32
  %38 = fadd fast float %36, %37
  %39 = fcmp fast ogt float %38, 0x38AA95A5C0000000
  br i1 %39, label %40, label %46

40:                                               ; preds = %6
  %41 = call fast float @llvm.sqrt.f32(float %38)
  %42 = fdiv fast float 1.000000e+00, %41
  %43 = fmul fast float %42, %21
  %44 = fmul fast float %42, %26
  %45 = fmul fast float %42, %32
  br label %46

46:                                               ; preds = %6, %40
  %47 = phi float [ %43, %40 ], [ 0.000000e+00, %6 ]
  %48 = phi float [ %44, %40 ], [ 0.000000e+00, %6 ]
  %49 = phi float [ %45, %40 ], [ 0.000000e+00, %6 ]
  %50 = phi float [ %41, %40 ], [ 0.000000e+00, %6 ]
  store float %47, ptr %4, align 4
  store float %48, ptr %27, align 4
  store float %49, ptr %33, align 4
  %51 = getelementptr inbounds %struct.RegionView3D, ptr %13, i64 0, i32 24
  %52 = load i8, ptr %51, align 8, !tbaa !78
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %85

54:                                               ; preds = %46
  %55 = getelementptr inbounds %struct.Object, ptr %9, i64 0, i32 2
  %56 = load ptr, ptr %55, align 8, !tbaa !5
  %57 = getelementptr inbounds %struct.SculptSession, ptr %56, i64 0, i32 15
  %58 = load ptr, ptr %57, align 8, !tbaa !21
  call void @BKE_pbvh_raycast_project_ray_root(ptr noundef %58, i8 noundef zeroext %5, ptr noundef nonnull %2, ptr noundef nonnull %3, ptr noundef nonnull %4) #10
  %59 = load float, ptr %3, align 4, !tbaa !20
  %60 = load float, ptr %2, align 4, !tbaa !20
  %61 = fsub fast float %59, %60
  store float %61, ptr %4, align 4, !tbaa !20
  %62 = load float, ptr %22, align 4, !tbaa !20
  %63 = load float, ptr %24, align 4, !tbaa !20
  %64 = fsub fast float %62, %63
  store float %64, ptr %27, align 4, !tbaa !20
  %65 = load float, ptr %28, align 4, !tbaa !20
  %66 = load float, ptr %30, align 4, !tbaa !20
  %67 = fsub fast float %65, %66
  %68 = fmul fast float %61, %61
  %69 = fmul fast float %64, %64
  %70 = fadd fast float %69, %68
  %71 = fmul fast float %67, %67
  %72 = fadd fast float %70, %71
  %73 = fcmp fast ogt float %72, 0x38AA95A5C0000000
  br i1 %73, label %74, label %80

74:                                               ; preds = %54
  %75 = call fast float @llvm.sqrt.f32(float %72)
  %76 = fdiv fast float 1.000000e+00, %75
  %77 = fmul fast float %76, %61
  %78 = fmul fast float %76, %64
  %79 = fmul fast float %76, %67
  br label %80

80:                                               ; preds = %54, %74
  %81 = phi float [ %77, %74 ], [ 0.000000e+00, %54 ]
  %82 = phi float [ %78, %74 ], [ 0.000000e+00, %54 ]
  %83 = phi float [ %79, %74 ], [ 0.000000e+00, %54 ]
  %84 = phi float [ %75, %74 ], [ 0.000000e+00, %54 ]
  store float %81, ptr %4, align 4
  store float %82, ptr %27, align 4
  store float %83, ptr %33, align 4
  br label %85

85:                                               ; preds = %80, %46
  %86 = phi float [ %50, %46 ], [ %84, %80 ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %7) #10
  ret float %86
}

declare void @BKE_pbvh_raycast(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal void @sculpt_raycast_cb(ptr noundef %0, ptr noundef %1, ptr nocapture noundef %2) #2 {
  %4 = tail call fast nofpclass(nan inf) float @BKE_pbvh_node_get_tmin(ptr noundef %0) #10
  %5 = load float, ptr %2, align 4, !tbaa !20
  %6 = fcmp fast olt float %4, %5
  br i1 %6, label %7, label %47

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.SculptRaycastData, ptr %1, i64 0, i32 5
  %9 = load i8, ptr %8, align 8, !tbaa !65
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %31, label %11

11:                                               ; preds = %7
  %12 = load ptr, ptr %1, align 8, !tbaa !67
  %13 = getelementptr inbounds %struct.SculptSession, ptr %12, i64 0, i32 28
  %14 = load ptr, ptr %13, align 8, !tbaa !22
  %15 = icmp eq ptr %14, null
  br i1 %15, label %31, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.SculptSession, ptr %12, i64 0, i32 15
  %18 = load ptr, ptr %17, align 8, !tbaa !21
  %19 = tail call i32 @BKE_pbvh_type(ptr noundef %18) #10
  %20 = icmp eq i32 %19, 2
  br i1 %20, label %31, label %21

21:                                               ; preds = %16
  %22 = tail call ptr @sculpt_undo_get_node(ptr noundef %0) #10
  %23 = icmp eq ptr %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.SculptUndoNode, ptr %22, i64 0, i32 5
  %26 = load ptr, ptr %25, align 8, !tbaa !80
  br label %27

27:                                               ; preds = %21, %24
  %28 = phi ptr [ %26, %24 ], [ null, %21 ]
  %29 = icmp ne ptr %28, null
  %30 = zext i1 %29 to i32
  br label %31

31:                                               ; preds = %16, %27, %11, %7
  %32 = phi i32 [ %30, %27 ], [ 0, %11 ], [ 0, %7 ], [ 1, %16 ]
  %33 = phi ptr [ %28, %27 ], [ null, %11 ], [ null, %7 ], [ null, %16 ]
  %34 = load ptr, ptr %1, align 8, !tbaa !67
  %35 = getelementptr inbounds %struct.SculptSession, ptr %34, i64 0, i32 15
  %36 = load ptr, ptr %35, align 8, !tbaa !21
  %37 = getelementptr inbounds %struct.SculptRaycastData, ptr %1, i64 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !69
  %39 = getelementptr inbounds %struct.SculptRaycastData, ptr %1, i64 0, i32 2
  %40 = load ptr, ptr %39, align 8, !tbaa !70
  %41 = getelementptr inbounds %struct.SculptRaycastData, ptr %1, i64 0, i32 4
  %42 = tail call zeroext i8 @BKE_pbvh_node_raycast(ptr noundef %36, ptr noundef %0, ptr noundef %33, i32 noundef %32, ptr noundef %38, ptr noundef %40, ptr noundef nonnull %41) #10
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %31
  %45 = getelementptr inbounds %struct.SculptRaycastData, ptr %1, i64 0, i32 3
  store i8 1, ptr %45, align 8, !tbaa !68
  %46 = load float, ptr %41, align 4, !tbaa !71
  store float %46, ptr %2, align 4, !tbaa !20
  br label %47

47:                                               ; preds = %31, %44, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @sculpt_update_object_bounding_box(ptr nocapture noundef readonly %0) local_unnamed_addr #2 {
  %2 = alloca [3 x float], align 4
  %3 = alloca [3 x float], align 4
  %4 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 15
  %5 = load ptr, ptr %4, align 8, !tbaa !82
  %6 = icmp eq ptr %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %2) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %3) #10
  %8 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.SculptSession, ptr %9, i64 0, i32 15
  %11 = load ptr, ptr %10, align 8, !tbaa !21
  call void @BKE_pbvh_bounding_box(ptr noundef %11, ptr noundef nonnull %2, ptr noundef nonnull %3) #10
  %12 = load ptr, ptr %4, align 8, !tbaa !82
  call void @BKE_boundbox_init_from_minmax(ptr noundef %12, ptr noundef nonnull %2, ptr noundef nonnull %3) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %3) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %2) #10
  br label %13

13:                                               ; preds = %7, %1
  ret void
}

declare void @BKE_pbvh_bounding_box(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BKE_boundbox_init_from_minmax(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @sculpt_pbvh_clear(ptr noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 120
  %5 = load ptr, ptr %4, align 8, !tbaa !83
  %6 = getelementptr inbounds %struct.SculptSession, ptr %3, i64 0, i32 15
  %7 = load ptr, ptr %6, align 8, !tbaa !21
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @BKE_pbvh_free(ptr noundef nonnull %7) #10
  br label %10

10:                                               ; preds = %9, %1
  store ptr null, ptr %6, align 8, !tbaa !21
  %11 = icmp eq ptr %5, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.DerivedMesh, ptr %5, i64 0, i32 81
  %14 = load ptr, ptr %13, align 8, !tbaa !84
  %15 = tail call ptr %14(ptr noundef null, ptr noundef nonnull %5) #10
  br label %16

16:                                               ; preds = %12, %10
  tail call void @BKE_object_free_derived_caches(ptr noundef nonnull %0) #10
  ret void
}

declare void @BKE_pbvh_free(ptr noundef) local_unnamed_addr #3

declare void @BKE_object_free_derived_caches(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @sculpt_dyntopo_node_layers_add(ptr nocapture noundef %0) local_unnamed_addr #2 {
  %2 = alloca [17 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %2) #10
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(17) %2, ptr noundef nonnull align 16 dereferenceable(17) @__const.sculpt_dyntopo_node_layers_add.layer_id, i64 17, i1 false)
  %3 = getelementptr inbounds %struct.SculptSession, ptr %0, i64 0, i32 10
  %4 = load ptr, ptr %3, align 8, !tbaa !86
  %5 = getelementptr inbounds %struct.BMesh, ptr %4, i64 0, i32 24
  %6 = call i32 @CustomData_get_named_layer_index(ptr noundef nonnull %5, i32 noundef 11, ptr noundef nonnull %2) #10
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  %9 = load ptr, ptr %3, align 8, !tbaa !86
  %10 = getelementptr inbounds %struct.BMesh, ptr %9, i64 0, i32 24
  call void @BM_data_layer_add_named(ptr noundef %9, ptr noundef nonnull %10, i32 noundef 11, ptr noundef nonnull %2) #10
  %11 = load ptr, ptr %3, align 8, !tbaa !86
  %12 = getelementptr inbounds %struct.BMesh, ptr %11, i64 0, i32 24
  %13 = call i32 @CustomData_get_named_layer_index(ptr noundef nonnull %12, i32 noundef 11, ptr noundef nonnull %2) #10
  br label %14

14:                                               ; preds = %8, %1
  %15 = phi i32 [ %13, %8 ], [ %6, %1 ]
  %16 = load ptr, ptr %3, align 8, !tbaa !86
  %17 = getelementptr inbounds %struct.BMesh, ptr %16, i64 0, i32 24
  %18 = call i32 @CustomData_get_layer_index(ptr noundef nonnull %17, i32 noundef 11) #10
  %19 = sub nsw i32 %15, %18
  %20 = call i32 @CustomData_get_n_offset(ptr noundef nonnull %17, i32 noundef 11, i32 noundef %19) #10
  %21 = getelementptr inbounds %struct.SculptSession, ptr %0, i64 0, i32 11
  store i32 %20, ptr %21, align 8, !tbaa !87
  %22 = load ptr, ptr %3, align 8, !tbaa !86
  %23 = getelementptr inbounds %struct.BMesh, ptr %22, i64 0, i32 24
  %24 = load ptr, ptr %23, align 8, !tbaa !88
  %25 = sext i32 %15 to i64
  %26 = getelementptr inbounds %struct.CustomDataLayer, ptr %24, i64 %25, i32 2
  %27 = load i32, ptr %26, align 8, !tbaa !90
  %28 = or i32 %27, 5
  store i32 %28, ptr %26, align 8, !tbaa !90
  %29 = getelementptr inbounds %struct.BMesh, ptr %22, i64 0, i32 27
  %30 = call i32 @CustomData_get_named_layer_index(ptr noundef nonnull %29, i32 noundef 11, ptr noundef nonnull %2) #10
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %38

32:                                               ; preds = %14
  %33 = load ptr, ptr %3, align 8, !tbaa !86
  %34 = getelementptr inbounds %struct.BMesh, ptr %33, i64 0, i32 27
  call void @BM_data_layer_add_named(ptr noundef %33, ptr noundef nonnull %34, i32 noundef 11, ptr noundef nonnull %2) #10
  %35 = load ptr, ptr %3, align 8, !tbaa !86
  %36 = getelementptr inbounds %struct.BMesh, ptr %35, i64 0, i32 27
  %37 = call i32 @CustomData_get_named_layer_index(ptr noundef nonnull %36, i32 noundef 11, ptr noundef nonnull %2) #10
  br label %38

38:                                               ; preds = %32, %14
  %39 = phi i32 [ %37, %32 ], [ %30, %14 ]
  %40 = load ptr, ptr %3, align 8, !tbaa !86
  %41 = getelementptr inbounds %struct.BMesh, ptr %40, i64 0, i32 27
  %42 = call i32 @CustomData_get_layer_index(ptr noundef nonnull %41, i32 noundef 11) #10
  %43 = sub nsw i32 %39, %42
  %44 = call i32 @CustomData_get_n_offset(ptr noundef nonnull %41, i32 noundef 11, i32 noundef %43) #10
  %45 = getelementptr inbounds %struct.SculptSession, ptr %0, i64 0, i32 12
  store i32 %44, ptr %45, align 4, !tbaa !92
  %46 = load ptr, ptr %3, align 8, !tbaa !86
  %47 = getelementptr inbounds %struct.BMesh, ptr %46, i64 0, i32 27
  %48 = load ptr, ptr %47, align 8, !tbaa !93
  %49 = sext i32 %39 to i64
  %50 = getelementptr inbounds %struct.CustomDataLayer, ptr %48, i64 %49, i32 2
  %51 = load i32, ptr %50, align 8, !tbaa !90
  %52 = or i32 %51, 5
  store i32 %52, ptr %50, align 8, !tbaa !90
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %2) #10
  ret void
}

declare i32 @CustomData_get_named_layer_index(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare void @BM_data_layer_add_named(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare i32 @CustomData_get_n_offset(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare i32 @CustomData_get_layer_index(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @sculpt_update_after_dynamic_topology_toggle(ptr noundef %0) local_unnamed_addr #2 {
  %2 = tail call ptr @CTX_data_scene(ptr noundef %0) #10
  %3 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %4 = getelementptr inbounds %struct.Scene, ptr %2, i64 0, i32 20
  %5 = load ptr, ptr %4, align 8, !tbaa !94
  %6 = getelementptr inbounds %struct.ToolSettings, ptr %5, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !51
  tail call void @BKE_sculpt_update_mesh_elements(ptr noundef %2, ptr noundef %7, ptr noundef %3, i8 noundef zeroext 0, i8 noundef zeroext 0) #10
  tail call void @WM_event_add_notifier(ptr noundef %0, i32 noundef 85393408, ptr noundef %3) #10
  ret void
}

declare ptr @CTX_data_scene(ptr noundef) local_unnamed_addr #3

declare void @BKE_sculpt_update_mesh_elements(ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #3

declare void @WM_event_add_notifier(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @sculpt_dynamic_topology_enable(ptr noundef %0) local_unnamed_addr #2 {
  %2 = alloca %struct.BMAllocTemplate, align 16
  %3 = tail call ptr @CTX_data_scene(ptr noundef %0) #10
  %4 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %5 = getelementptr inbounds %struct.Object, ptr %4, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.Object, ptr %4, i64 0, i32 19
  %8 = load ptr, ptr %7, align 8, !tbaa !25
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #10
  %9 = getelementptr inbounds %struct.Mesh, ptr %8, i64 0, i32 26
  %10 = load <2 x i32>, ptr %9, align 8, !tbaa !24
  %11 = getelementptr inbounds %struct.Mesh, ptr %8, i64 0, i32 31
  %12 = load i32, ptr %11, align 4, !tbaa !111
  %13 = getelementptr inbounds %struct.Mesh, ptr %8, i64 0, i32 30
  %14 = load i32, ptr %13, align 8, !tbaa !112
  %15 = shufflevector <2 x i32> %10, <2 x i32> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %16 = insertelement <4 x i32> %15, i32 %12, i64 2
  %17 = insertelement <4 x i32> %16, i32 %14, i64 3
  store <4 x i32> %17, ptr %2, align 16, !tbaa !24
  %18 = getelementptr inbounds %struct.Object, ptr %4, i64 0, i32 120
  %19 = load ptr, ptr %18, align 8, !tbaa !83
  %20 = getelementptr inbounds %struct.SculptSession, ptr %6, i64 0, i32 15
  %21 = load ptr, ptr %20, align 8, !tbaa !21
  %22 = icmp eq ptr %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  tail call void @BKE_pbvh_free(ptr noundef nonnull %21) #10
  br label %24

24:                                               ; preds = %23, %1
  store ptr null, ptr %20, align 8, !tbaa !21
  %25 = icmp eq ptr %19, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.DerivedMesh, ptr %19, i64 0, i32 81
  %28 = load ptr, ptr %27, align 8, !tbaa !84
  %29 = tail call ptr %28(ptr noundef null, ptr noundef nonnull %19) #10
  br label %30

30:                                               ; preds = %24, %26
  tail call void @BKE_object_free_derived_caches(ptr noundef nonnull %4) #10
  %31 = getelementptr inbounds %struct.Scene, ptr %3, i64 0, i32 20
  %32 = load ptr, ptr %31, align 8, !tbaa !94
  %33 = getelementptr inbounds %struct.ToolSettings, ptr %32, i64 0, i32 2
  %34 = load ptr, ptr %33, align 8, !tbaa !51
  %35 = getelementptr inbounds %struct.Sculpt, ptr %34, i64 0, i32 1
  %36 = load i32, ptr %35, align 8, !tbaa !113
  %37 = lshr i32 %36, 10
  %38 = trunc i32 %37 to i8
  %39 = and i8 %38, 1
  %40 = getelementptr inbounds %struct.SculptSession, ptr %6, i64 0, i32 13
  store i8 %39, ptr %40, align 8, !tbaa !115
  tail call void @BKE_mesh_mselect_clear(ptr noundef nonnull %8) #10
  %41 = call ptr @BM_mesh_create(ptr noundef nonnull %2) #10
  %42 = getelementptr inbounds %struct.SculptSession, ptr %6, i64 0, i32 10
  store ptr %41, ptr %42, align 8, !tbaa !86
  %43 = getelementptr inbounds %struct.Object, ptr %4, i64 0, i32 115
  %44 = load i16, ptr %43, align 2, !tbaa !32
  %45 = sext i16 %44 to i32
  call void @BM_mesh_bm_from_me(ptr noundef %41, ptr noundef nonnull %8, i8 noundef zeroext 1, i8 noundef zeroext 1, i32 noundef %45) #10
  %46 = load ptr, ptr %42, align 8, !tbaa !86
  %47 = getelementptr inbounds %struct.BMesh, ptr %46, i64 0, i32 2
  %48 = load i32, ptr %47, align 8, !tbaa !116
  %49 = getelementptr inbounds %struct.BMesh, ptr %46, i64 0, i32 3
  %50 = load i32, ptr %49, align 4, !tbaa !117
  %51 = mul nsw i32 %50, 3
  %52 = icmp eq i32 %48, %51
  br i1 %52, label %55, label %53

53:                                               ; preds = %30
  call void @BM_mesh_triangulate(ptr noundef nonnull %46, i32 noundef 1, i32 noundef 1, i8 noundef zeroext 0, ptr noundef null, ptr noundef null) #10
  %54 = load ptr, ptr %42, align 8, !tbaa !86
  br label %55

55:                                               ; preds = %30, %53
  %56 = phi ptr [ %46, %30 ], [ %54, %53 ]
  %57 = getelementptr inbounds %struct.BMesh, ptr %56, i64 0, i32 24
  call void @BM_data_layer_add(ptr noundef %56, ptr noundef nonnull %57, i32 noundef 34) #10
  call void @sculpt_dyntopo_node_layers_add(ptr noundef nonnull %6)
  %58 = load ptr, ptr %42, align 8, !tbaa !86
  call void @BM_mesh_normals_update(ptr noundef %58) #10
  %59 = getelementptr inbounds %struct.Mesh, ptr %8, i64 0, i32 38
  %60 = load i16, ptr %59, align 2, !tbaa !118
  %61 = or i16 %60, 1024
  store i16 %61, ptr %59, align 2, !tbaa !118
  %62 = load ptr, ptr %42, align 8, !tbaa !86
  %63 = call ptr @BM_log_create(ptr noundef %62) #10
  %64 = getelementptr inbounds %struct.SculptSession, ptr %6, i64 0, i32 14
  store ptr %63, ptr %64, align 8, !tbaa !119
  %65 = call ptr @CTX_data_scene(ptr noundef %0) #10
  %66 = call ptr @CTX_data_active_object(ptr noundef %0) #10
  %67 = getelementptr inbounds %struct.Scene, ptr %65, i64 0, i32 20
  %68 = load ptr, ptr %67, align 8, !tbaa !94
  %69 = getelementptr inbounds %struct.ToolSettings, ptr %68, i64 0, i32 2
  %70 = load ptr, ptr %69, align 8, !tbaa !51
  call void @BKE_sculpt_update_mesh_elements(ptr noundef %65, ptr noundef %70, ptr noundef %66, i8 noundef zeroext 0, i8 noundef zeroext 0) #10
  call void @WM_event_add_notifier(ptr noundef %0, i32 noundef 85393408, ptr noundef %66) #10
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #10
  ret void
}

declare void @BKE_mesh_mselect_clear(ptr noundef) local_unnamed_addr #3

declare ptr @BM_mesh_create(ptr noundef) local_unnamed_addr #3

declare void @BM_mesh_bm_from_me(ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext, i32 noundef) local_unnamed_addr #3

declare void @BM_data_layer_add(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @BM_mesh_normals_update(ptr noundef) local_unnamed_addr #3

declare ptr @BM_log_create(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @sculpt_dynamic_topology_disable(ptr noundef %0, ptr noundef %1) local_unnamed_addr #2 {
  %3 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %4 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !5
  %6 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 19
  %7 = load ptr, ptr %6, align 8, !tbaa !25
  %8 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 120
  %9 = load ptr, ptr %8, align 8, !tbaa !83
  %10 = getelementptr inbounds %struct.SculptSession, ptr %5, i64 0, i32 15
  %11 = load ptr, ptr %10, align 8, !tbaa !21
  %12 = icmp eq ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  tail call void @BKE_pbvh_free(ptr noundef nonnull %11) #10
  br label %14

14:                                               ; preds = %13, %2
  store ptr null, ptr %10, align 8, !tbaa !21
  %15 = icmp eq ptr %9, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.DerivedMesh, ptr %9, i64 0, i32 81
  %18 = load ptr, ptr %17, align 8, !tbaa !84
  %19 = tail call ptr %18(ptr noundef null, ptr noundef nonnull %9) #10
  br label %20

20:                                               ; preds = %14, %16
  tail call void @BKE_object_free_derived_caches(ptr noundef nonnull %3) #10
  %21 = icmp eq ptr %1, null
  br i1 %21, label %54, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.Mesh, ptr %7, i64 0, i32 21
  %24 = getelementptr inbounds %struct.Mesh, ptr %7, i64 0, i32 26
  %25 = load i32, ptr %24, align 8, !tbaa !37
  tail call void @CustomData_free(ptr noundef nonnull %23, i32 noundef %25) #10
  %26 = getelementptr inbounds %struct.Mesh, ptr %7, i64 0, i32 22
  %27 = getelementptr inbounds %struct.Mesh, ptr %7, i64 0, i32 27
  %28 = load i32, ptr %27, align 4, !tbaa !120
  tail call void @CustomData_free(ptr noundef nonnull %26, i32 noundef %28) #10
  %29 = getelementptr inbounds %struct.Mesh, ptr %7, i64 0, i32 23
  %30 = getelementptr inbounds %struct.Mesh, ptr %7, i64 0, i32 28
  %31 = load i32, ptr %30, align 8, !tbaa !121
  tail call void @CustomData_free(ptr noundef nonnull %29, i32 noundef %31) #10
  %32 = getelementptr inbounds %struct.Mesh, ptr %7, i64 0, i32 25
  %33 = getelementptr inbounds %struct.Mesh, ptr %7, i64 0, i32 31
  %34 = load i32, ptr %33, align 4, !tbaa !111
  tail call void @CustomData_free(ptr noundef nonnull %32, i32 noundef %34) #10
  %35 = getelementptr inbounds %struct.Mesh, ptr %7, i64 0, i32 24
  %36 = getelementptr inbounds %struct.Mesh, ptr %7, i64 0, i32 30
  %37 = load i32, ptr %36, align 8, !tbaa !112
  tail call void @CustomData_free(ptr noundef nonnull %35, i32 noundef %37) #10
  %38 = getelementptr inbounds %struct.SculptUndoNode, ptr %1, i64 0, i32 24
  %39 = getelementptr inbounds %struct.SculptUndoNode, ptr %1, i64 0, i32 26
  %40 = getelementptr inbounds %struct.SculptUndoNode, ptr %1, i64 0, i32 27
  %41 = load <2 x i32>, ptr %39, align 8, !tbaa !24
  %42 = shufflevector <2 x i32> %41, <2 x i32> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i32> %42, ptr %36, align 8, !tbaa !24
  %43 = getelementptr inbounds %struct.SculptUndoNode, ptr %1, i64 0, i32 25
  %44 = load <2 x i32>, ptr %38, align 8, !tbaa !24
  store <2 x i32> %44, ptr %24, align 8, !tbaa !24
  store i32 0, ptr %30, align 8, !tbaa !121
  %45 = getelementptr inbounds %struct.SculptUndoNode, ptr %1, i64 0, i32 20
  %46 = load i64, ptr @CD_MASK_MESH, align 8, !tbaa !122
  %47 = extractelement <2 x i32> %44, i64 0
  tail call void @CustomData_copy(ptr noundef nonnull %45, ptr noundef nonnull %23, i64 noundef %46, i32 noundef 4, i32 noundef %47) #10
  %48 = getelementptr inbounds %struct.SculptUndoNode, ptr %1, i64 0, i32 21
  %49 = load i32, ptr %43, align 4, !tbaa !123
  tail call void @CustomData_copy(ptr noundef nonnull %48, ptr noundef nonnull %26, i64 noundef %46, i32 noundef 4, i32 noundef %49) #10
  %50 = getelementptr inbounds %struct.SculptUndoNode, ptr %1, i64 0, i32 22
  %51 = load i32, ptr %39, align 8, !tbaa !124
  tail call void @CustomData_copy(ptr noundef nonnull %50, ptr noundef nonnull %32, i64 noundef %46, i32 noundef 4, i32 noundef %51) #10
  %52 = getelementptr inbounds %struct.SculptUndoNode, ptr %1, i64 0, i32 23
  %53 = load i32, ptr %40, align 4, !tbaa !125
  tail call void @CustomData_copy(ptr noundef nonnull %52, ptr noundef nonnull %35, i64 noundef %46, i32 noundef 4, i32 noundef %53) #10
  tail call void @BKE_mesh_update_customdata_pointers(ptr noundef %7, i8 noundef zeroext 0) #10
  br label %55

54:                                               ; preds = %20
  tail call void @BKE_sculptsession_bm_to_me(ptr noundef nonnull %3, i8 noundef zeroext 1) #10
  br label %55

55:                                               ; preds = %54, %22
  %56 = getelementptr inbounds %struct.Mesh, ptr %7, i64 0, i32 38
  %57 = load i16, ptr %56, align 2, !tbaa !118
  %58 = and i16 %57, -1025
  store i16 %58, ptr %56, align 2, !tbaa !118
  %59 = getelementptr inbounds %struct.SculptSession, ptr %5, i64 0, i32 10
  %60 = load ptr, ptr %59, align 8, !tbaa !86
  %61 = icmp eq ptr %60, null
  br i1 %61, label %63, label %62

62:                                               ; preds = %55
  tail call void @BM_mesh_free(ptr noundef nonnull %60) #10
  store ptr null, ptr %59, align 8, !tbaa !86
  br label %63

63:                                               ; preds = %62, %55
  %64 = getelementptr inbounds %struct.SculptSession, ptr %5, i64 0, i32 14
  %65 = load ptr, ptr %64, align 8, !tbaa !119
  %66 = icmp eq ptr %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %63
  tail call void @BM_log_free(ptr noundef nonnull %65) #10
  store ptr null, ptr %64, align 8, !tbaa !119
  br label %68

68:                                               ; preds = %67, %63
  %69 = tail call ptr @CTX_data_scene(ptr noundef %0) #10
  %70 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %71 = getelementptr inbounds %struct.Scene, ptr %69, i64 0, i32 20
  %72 = load ptr, ptr %71, align 8, !tbaa !94
  %73 = getelementptr inbounds %struct.ToolSettings, ptr %72, i64 0, i32 2
  %74 = load ptr, ptr %73, align 8, !tbaa !51
  tail call void @BKE_sculpt_update_mesh_elements(ptr noundef %69, ptr noundef %74, ptr noundef %70, i8 noundef zeroext 0, i8 noundef zeroext 0) #10
  tail call void @WM_event_add_notifier(ptr noundef %0, i32 noundef 85393408, ptr noundef %70) #10
  ret void
}

declare void @CustomData_free(ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @CustomData_copy(ptr noundef, ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare void @BKE_mesh_update_customdata_pointers(ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

declare void @BKE_sculptsession_bm_to_me(ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

declare void @BM_mesh_free(ptr noundef) local_unnamed_addr #3

declare void @BM_log_free(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @ED_operatortypes_sculpt() local_unnamed_addr #2 {
  tail call void @WM_operatortype_append(ptr noundef nonnull @SCULPT_OT_brush_stroke) #10
  tail call void @WM_operatortype_append(ptr noundef nonnull @SCULPT_OT_sculptmode_toggle) #10
  tail call void @WM_operatortype_append(ptr noundef nonnull @SCULPT_OT_set_persistent_base) #10
  tail call void @WM_operatortype_append(ptr noundef nonnull @SCULPT_OT_dynamic_topology_toggle) #10
  tail call void @WM_operatortype_append(ptr noundef nonnull @SCULPT_OT_optimize) #10
  tail call void @WM_operatortype_append(ptr noundef nonnull @SCULPT_OT_symmetrize) #10
  tail call void @WM_operatortype_append(ptr noundef nonnull @SCULPT_OT_detail_flood_fill) #10
  tail call void @WM_operatortype_append(ptr noundef nonnull @SCULPT_OT_sample_detail_size) #10
  ret void
}

declare void @WM_operatortype_append(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal void @SCULPT_OT_brush_stroke(ptr noundef %0) #2 {
  store ptr @.str, ptr %0, align 8, !tbaa !126
  %2 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 1
  store ptr @.str.1, ptr %2, align 8, !tbaa !129
  %3 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 3
  store ptr @.str.2, ptr %3, align 8, !tbaa !130
  %4 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 6
  store ptr @sculpt_brush_stroke_invoke, ptr %4, align 8, !tbaa !131
  %5 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 8
  store ptr @paint_stroke_modal, ptr %5, align 8, !tbaa !132
  %6 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 4
  store ptr @sculpt_brush_stroke_exec, ptr %6, align 8, !tbaa !133
  %7 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 9
  store ptr @sculpt_poll, ptr %7, align 8, !tbaa !134
  %8 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 7
  store ptr @sculpt_brush_stroke_cancel, ptr %8, align 8, !tbaa !135
  %9 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 19
  store i16 4, ptr %9, align 8, !tbaa !136
  tail call void @paint_stroke_operator_properties(ptr noundef nonnull %0) #10
  %10 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 11
  %11 = load ptr, ptr %10, align 8, !tbaa !137
  %12 = tail call ptr @RNA_def_boolean(ptr noundef %11, ptr noundef nonnull @.str.3, i32 noundef 0, ptr noundef nonnull @.str.4, ptr noundef nonnull @.str.5) #10
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: write) uwtable
define internal void @SCULPT_OT_sculptmode_toggle(ptr nocapture noundef writeonly %0) #5 {
  store ptr @.str.44, ptr %0, align 8, !tbaa !126
  %2 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 1
  store ptr @.str.45, ptr %2, align 8, !tbaa !129
  %3 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 3
  store ptr @.str.46, ptr %3, align 8, !tbaa !130
  %4 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 4
  store ptr @sculpt_mode_toggle_exec, ptr %4, align 8, !tbaa !133
  %5 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 9
  store ptr @ED_operator_object_active_editable_mesh, ptr %5, align 8, !tbaa !134
  %6 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 19
  store i16 3, ptr %6, align 8, !tbaa !136
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: write) uwtable
define internal void @SCULPT_OT_set_persistent_base(ptr nocapture noundef writeonly %0) #5 {
  store ptr @.str.53, ptr %0, align 8, !tbaa !126
  %2 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 1
  store ptr @.str.54, ptr %2, align 8, !tbaa !129
  %3 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 3
  store ptr @.str.55, ptr %3, align 8, !tbaa !130
  %4 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 4
  store ptr @sculpt_set_persistent_base_exec, ptr %4, align 8, !tbaa !133
  %5 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 9
  store ptr @sculpt_mode_poll, ptr %5, align 8, !tbaa !134
  %6 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 19
  store i16 3, ptr %6, align 8, !tbaa !136
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: write) uwtable
define internal void @SCULPT_OT_dynamic_topology_toggle(ptr nocapture noundef writeonly %0) #5 {
  store ptr @.str.56, ptr %0, align 8, !tbaa !126
  %2 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 1
  store ptr @.str.57, ptr %2, align 8, !tbaa !129
  %3 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 3
  store ptr @.str.58, ptr %3, align 8, !tbaa !130
  %4 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 6
  store ptr @sculpt_dynamic_topology_toggle_invoke, ptr %4, align 8, !tbaa !131
  %5 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 4
  store ptr @sculpt_dynamic_topology_toggle_exec, ptr %5, align 8, !tbaa !133
  %6 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 9
  store ptr @sculpt_mode_poll, ptr %6, align 8, !tbaa !134
  %7 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 19
  store i16 3, ptr %7, align 8, !tbaa !136
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: write) uwtable
define internal void @SCULPT_OT_optimize(ptr nocapture noundef writeonly %0) #5 {
  store ptr @.str.65, ptr %0, align 8, !tbaa !126
  %2 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 1
  store ptr @.str.66, ptr %2, align 8, !tbaa !129
  %3 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 3
  store ptr @.str.67, ptr %3, align 8, !tbaa !130
  %4 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 4
  store ptr @sculpt_optimize_exec, ptr %4, align 8, !tbaa !133
  %5 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 9
  store ptr @sculpt_and_dynamic_topology_poll, ptr %5, align 8, !tbaa !134
  %6 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 19
  store i16 3, ptr %6, align 8, !tbaa !136
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: write) uwtable
define internal void @SCULPT_OT_symmetrize(ptr nocapture noundef writeonly %0) #5 {
  store ptr @.str.68, ptr %0, align 8, !tbaa !126
  %2 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 1
  store ptr @.str.69, ptr %2, align 8, !tbaa !129
  %3 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 3
  store ptr @.str.70, ptr %3, align 8, !tbaa !130
  %4 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 4
  store ptr @sculpt_symmetrize_exec, ptr %4, align 8, !tbaa !133
  %5 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 9
  store ptr @sculpt_and_dynamic_topology_poll, ptr %5, align 8, !tbaa !134
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: write) uwtable
define internal void @SCULPT_OT_detail_flood_fill(ptr nocapture noundef writeonly %0) #5 {
  store ptr @.str.73, ptr %0, align 8, !tbaa !126
  %2 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 1
  store ptr @.str.74, ptr %2, align 8, !tbaa !129
  %3 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 3
  store ptr @.str.75, ptr %3, align 8, !tbaa !130
  %4 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 4
  store ptr @sculpt_detail_flood_fill_exec, ptr %4, align 8, !tbaa !133
  %5 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 9
  store ptr @sculpt_and_dynamic_topology_constant_detail_poll, ptr %5, align 8, !tbaa !134
  %6 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 19
  store i16 3, ptr %6, align 8, !tbaa !136
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @SCULPT_OT_sample_detail_size(ptr nocapture noundef %0) #2 {
  store ptr @.str.77, ptr %0, align 8, !tbaa !126
  %2 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 1
  store ptr @.str.78, ptr %2, align 8, !tbaa !129
  %3 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 3
  store ptr @.str.79, ptr %3, align 8, !tbaa !130
  %4 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 6
  store ptr @sculpt_sample_detail_size_invoke, ptr %4, align 8, !tbaa !131
  %5 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 4
  store ptr @sculpt_sample_detail_size_exec, ptr %5, align 8, !tbaa !133
  %6 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 8
  store ptr @sculpt_sample_detail_size_modal, ptr %6, align 8, !tbaa !132
  %7 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 9
  store ptr @sculpt_and_dynamic_topology_constant_detail_poll, ptr %7, align 8, !tbaa !134
  %8 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 19
  store i16 3, ptr %8, align 8, !tbaa !136
  %9 = getelementptr inbounds %struct.wmOperatorType, ptr %0, i64 0, i32 11
  %10 = load ptr, ptr %9, align 8, !tbaa !137
  %11 = tail call ptr @RNA_def_int_array(ptr noundef %10, ptr noundef nonnull @.str.39, i32 noundef 2, ptr noundef null, i32 noundef 0, i32 noundef 32767, ptr noundef nonnull @.str.80, ptr noundef nonnull @.str.81, i32 noundef 0, i32 noundef 32767) #10
  ret void
}

declare zeroext i8 @BLI_rcti_is_empty(ptr noundef) local_unnamed_addr #3

declare void @BLI_rcti_union(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @CTX_data_tool_settings(ptr noundef) local_unnamed_addr #3

declare ptr @BKE_paint_brush(ptr noundef) local_unnamed_addr #3

declare zeroext i8 @ED_view3d_win_to_segment(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

declare zeroext i8 @invert_m4_m4(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @mul_m4_v3(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BKE_pbvh_raycast_project_ray_root(ptr noundef, i8 noundef zeroext, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.sqrt.f32(float) #6

declare nofpclass(nan inf) float @BKE_pbvh_node_get_tmin(ptr noundef) local_unnamed_addr #3

declare i32 @BKE_pbvh_type(ptr noundef) local_unnamed_addr #3

declare ptr @sculpt_undo_get_node(ptr noundef) local_unnamed_addr #3

declare zeroext i8 @BKE_pbvh_node_raycast(ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BM_mesh_triangulate(ptr noundef, i32 noundef, i32 noundef, i8 noundef zeroext, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @sculpt_brush_stroke_invoke(ptr noundef %0, ptr noundef %1, ptr noundef %2) #2 {
  %4 = alloca [2 x float], align 8
  %5 = alloca [3 x float], align 4
  tail call fastcc void @sculpt_brush_stroke_init(ptr noundef %0, ptr noundef %1)
  %6 = getelementptr inbounds %struct.wmEvent, ptr %2, i64 0, i32 2
  %7 = load i16, ptr %6, align 8, !tbaa !138
  %8 = sext i16 %7 to i32
  %9 = tail call ptr @paint_stroke_new(ptr noundef %0, ptr noundef %1, ptr noundef nonnull @sculpt_stroke_get_location, ptr noundef nonnull @sculpt_stroke_test_start, ptr noundef nonnull @sculpt_stroke_update_step, ptr noundef null, ptr noundef nonnull @sculpt_stroke_done, i32 noundef %8) #10
  %10 = getelementptr inbounds %struct.wmOperator, ptr %1, i64 0, i32 5
  store ptr %9, ptr %10, align 8, !tbaa !141
  %11 = getelementptr inbounds %struct.wmOperator, ptr %1, i64 0, i32 7
  %12 = load ptr, ptr %11, align 8, !tbaa !143
  %13 = tail call i32 @RNA_boolean_get(ptr noundef %12, ptr noundef nonnull @.str.3) #10
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %struct.wmEvent, ptr %2, i64 0, i32 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #10
  %17 = load <2 x i32>, ptr %16, align 4, !tbaa !24
  %18 = sitofp <2 x i32> %17 to <2 x float>
  store <2 x float> %18, ptr %4, align 8, !tbaa !20
  %19 = call zeroext i8 @sculpt_stroke_get_location(ptr noundef %0, ptr noundef nonnull %5, ptr noundef nonnull %4)
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #10
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  call void @paint_stroke_data_free(ptr noundef nonnull %1) #10
  br label %32

22:                                               ; preds = %15, %3
  %23 = getelementptr inbounds %struct.wmOperator, ptr %1, i64 0, i32 4
  %24 = load ptr, ptr %23, align 8, !tbaa !144
  %25 = getelementptr inbounds %struct.wmOperatorType, ptr %24, i64 0, i32 8
  %26 = load ptr, ptr %25, align 8, !tbaa !132
  %27 = call i32 %26(ptr noundef %0, ptr noundef nonnull %1, ptr noundef nonnull %2) #10
  %28 = icmp eq i32 %27, 4
  br i1 %28, label %29, label %30

29:                                               ; preds = %22
  call void @paint_stroke_data_free(ptr noundef nonnull %1) #10
  br label %32

30:                                               ; preds = %22
  %31 = call ptr @WM_event_add_modal_handler(ptr noundef %0, ptr noundef nonnull %1) #10
  br label %32

32:                                               ; preds = %30, %29, %21
  %33 = phi i32 [ 4, %29 ], [ 1, %30 ], [ 8, %21 ]
  ret i32 %33
}

declare i32 @paint_stroke_modal(ptr noundef, ptr noundef, ptr noundef) #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @sculpt_brush_stroke_exec(ptr noundef %0, ptr noundef %1) #2 {
  tail call fastcc void @sculpt_brush_stroke_init(ptr noundef %0, ptr noundef %1)
  %3 = tail call ptr @paint_stroke_new(ptr noundef %0, ptr noundef %1, ptr noundef nonnull @sculpt_stroke_get_location, ptr noundef nonnull @sculpt_stroke_test_start, ptr noundef nonnull @sculpt_stroke_update_step, ptr noundef null, ptr noundef nonnull @sculpt_stroke_done, i32 noundef 0) #10
  %4 = getelementptr inbounds %struct.wmOperator, ptr %1, i64 0, i32 5
  store ptr %3, ptr %4, align 8, !tbaa !141
  %5 = tail call i32 @paint_stroke_exec(ptr noundef %0, ptr noundef %1) #10
  ret i32 4
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @sculpt_brush_stroke_cancel(ptr noundef %0, ptr noundef %1) #2 {
  %3 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %4 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !5
  %6 = tail call ptr @CTX_data_tool_settings(ptr noundef %0) #10
  %7 = getelementptr inbounds %struct.ToolSettings, ptr %6, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !51
  %9 = getelementptr inbounds %struct.SculptSession, ptr %5, i64 0, i32 28
  %10 = load ptr, ptr %9, align 8, !tbaa !22
  %11 = icmp eq ptr %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  tail call fastcc void @paint_mesh_restore_co(ptr noundef %8, ptr noundef nonnull %3)
  br label %13

13:                                               ; preds = %12, %2
  tail call void @paint_stroke_cancel(ptr noundef %0, ptr noundef %1) #10
  %14 = load ptr, ptr %9, align 8, !tbaa !22
  %15 = icmp eq ptr %14, null
  br i1 %15, label %30, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.StrokeCache, ptr %14, i64 0, i32 24
  %18 = load ptr, ptr %17, align 8, !tbaa !145
  %19 = icmp eq ptr %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  tail call void %21(ptr noundef nonnull %18) #10
  br label %22

22:                                               ; preds = %20, %16
  %23 = getelementptr inbounds %struct.StrokeCache, ptr %14, i64 0, i32 44
  %24 = load ptr, ptr %23, align 8, !tbaa !146
  %25 = icmp eq ptr %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  tail call void %27(ptr noundef nonnull %24) #10
  br label %28

28:                                               ; preds = %22, %26
  %29 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  tail call void %29(ptr noundef nonnull %14) #10
  store ptr null, ptr %9, align 8, !tbaa !22
  br label %30

30:                                               ; preds = %28, %13
  %31 = tail call ptr @BKE_paint_brush(ptr noundef %8) #10
  %32 = getelementptr inbounds %struct.Brush, ptr %31, i64 0, i32 3, i32 5
  %33 = load ptr, ptr %32, align 8, !tbaa !147
  %34 = icmp eq ptr %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.Tex, ptr %33, i64 0, i32 52
  %37 = load ptr, ptr %36, align 8, !tbaa !148
  %38 = icmp eq ptr %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.bNodeTree, ptr %37, i64 0, i32 27
  %41 = load ptr, ptr %40, align 8, !tbaa !151
  tail call void @ntreeTexEndExecTree(ptr noundef %41) #10
  br label %42

42:                                               ; preds = %30, %35, %39
  ret void
}

declare void @paint_stroke_operator_properties(ptr noundef) local_unnamed_addr #3

declare ptr @RNA_def_boolean(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @sculpt_brush_stroke_init(ptr noundef %0, ptr nocapture noundef readonly %1) unnamed_addr #2 {
  %3 = tail call ptr @CTX_data_scene(ptr noundef %0) #10
  %4 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %5 = tail call ptr @CTX_data_tool_settings(ptr noundef %0) #10
  %6 = getelementptr inbounds %struct.ToolSettings, ptr %5, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !51
  %8 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %9 = getelementptr inbounds %struct.Object, ptr %8, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !5
  %11 = tail call ptr @BKE_paint_brush(ptr noundef %7) #10
  %12 = getelementptr inbounds %struct.wmOperator, ptr %1, i64 0, i32 7
  %13 = load ptr, ptr %12, align 8, !tbaa !143
  %14 = tail call i32 @RNA_enum_get(ptr noundef %13, ptr noundef nonnull @.str.6) #10
  %15 = getelementptr inbounds %struct.Brush, ptr %11, i64 0, i32 34
  %16 = load i8, ptr %15, align 8, !tbaa !59
  tail call void @view3d_operator_needs_opengl(ptr noundef %0) #10
  %17 = tail call ptr @BKE_paint_brush(ptr noundef %7) #10
  %18 = getelementptr inbounds %struct.Brush, ptr %17, i64 0, i32 3, i32 5
  %19 = load ptr, ptr %18, align 8, !tbaa !147
  %20 = icmp eq ptr %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.Tex, ptr %19, i64 0, i32 52
  %23 = load ptr, ptr %22, align 8, !tbaa !148
  %24 = icmp eq ptr %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call ptr @ntreeTexBeginExecTree(ptr noundef nonnull %23) #10
  br label %27

27:                                               ; preds = %25, %21, %2
  %28 = tail call ptr @BKE_paint_brush(ptr noundef %7) #10
  %29 = tail call i32 @BKE_brush_size_get(ptr noundef %3, ptr noundef %28) #10
  %30 = getelementptr inbounds %struct.SculptSession, ptr %10, i64 0, i32 23
  %31 = load ptr, ptr %30, align 8, !tbaa !154
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %27
  %34 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  tail call void %34(ptr noundef nonnull %31) #10
  store ptr null, ptr %30, align 8, !tbaa !154
  br label %35

35:                                               ; preds = %33, %27
  %36 = getelementptr inbounds %struct.SculptSession, ptr %10, i64 0, i32 25
  %37 = load ptr, ptr %36, align 8, !tbaa !155
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %42

39:                                               ; preds = %35
  %40 = shl nsw i32 %29, 1
  %41 = getelementptr inbounds %struct.SculptSession, ptr %10, i64 0, i32 22
  store i32 %40, ptr %41, align 4, !tbaa !156
  br label %51

42:                                               ; preds = %35
  tail call void @BKE_image_pool_free(ptr noundef nonnull %37) #10
  store ptr null, ptr %36, align 8, !tbaa !155
  %43 = load ptr, ptr %30, align 8, !tbaa !154
  %44 = icmp eq ptr %43, null
  %45 = shl nsw i32 %29, 1
  %46 = getelementptr inbounds %struct.SculptSession, ptr %10, i64 0, i32 22
  store i32 %45, ptr %46, align 4, !tbaa !156
  br i1 %44, label %51, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.SculptSession, ptr %10, i64 0, i32 24
  %49 = load i32, ptr %48, align 8, !tbaa !157
  %50 = icmp ugt i32 %45, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %47, %42, %39
  %52 = phi ptr [ %41, %39 ], [ %46, %47 ], [ %46, %42 ]
  %53 = tail call ptr @BKE_brush_gen_texture_cache(ptr noundef %28, i32 noundef %29, i8 noundef zeroext 0) #10
  store ptr %53, ptr %30, align 8, !tbaa !154
  %54 = load i32, ptr %52, align 4, !tbaa !156
  %55 = getelementptr inbounds %struct.SculptSession, ptr %10, i64 0, i32 24
  store i32 %54, ptr %55, align 8, !tbaa !157
  %56 = tail call ptr @BKE_image_pool_new() #10
  store ptr %56, ptr %36, align 8, !tbaa !155
  br label %57

57:                                               ; preds = %47, %51
  %58 = icmp eq i32 %14, 2
  br i1 %58, label %73, label %59

59:                                               ; preds = %57
  %60 = load i8, ptr %15, align 8, !tbaa !59
  %61 = icmp eq i8 %60, 2
  br i1 %61, label %73, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct.Brush, ptr %11, i64 0, i32 38
  %64 = load float, ptr %63, align 4, !tbaa !63
  %65 = fcmp fast ogt float %64, 0.000000e+00
  br i1 %65, label %73, label %66

66:                                               ; preds = %62
  %67 = icmp eq i8 %60, 19
  br i1 %67, label %68, label %73

68:                                               ; preds = %66
  %69 = getelementptr inbounds %struct.Brush, ptr %11, i64 0, i32 37
  %70 = load i8, ptr %69, align 1, !tbaa !64
  %71 = icmp eq i8 %70, 1
  %72 = zext i1 %71 to i8
  br label %73

73:                                               ; preds = %57, %59, %62, %66, %68
  %74 = phi i8 [ 1, %62 ], [ 1, %59 ], [ 1, %57 ], [ 0, %66 ], [ %72, %68 ]
  %75 = icmp eq i8 %16, 19
  %76 = zext i1 %75 to i8
  tail call void @BKE_sculpt_update_mesh_elements(ptr noundef %3, ptr noundef %7, ptr noundef %4, i8 noundef zeroext %74, i8 noundef zeroext %76) #10
  %77 = getelementptr inbounds %struct.Object, ptr %4, i64 0, i32 2
  %78 = load ptr, ptr %77, align 8, !tbaa !5
  %79 = getelementptr inbounds %struct.SculptSession, ptr %78, i64 0, i32 31
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %79, i8 0, i64 16, i1 false)
  ret void
}

declare ptr @paint_stroke_new(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal zeroext i8 @sculpt_stroke_test_start(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef readonly %2) #2 {
  %4 = alloca i32, align 4
  %5 = alloca [3 x [3 x float]], align 16
  %6 = alloca [3 x float], align 8
  %7 = alloca [2 x float], align 8
  %8 = alloca [3 x float], align 4
  %9 = icmp eq ptr %2, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %8) #10
  %11 = load <2 x float>, ptr %2, align 4, !tbaa !20
  store <2 x float> %11, ptr %7, align 8, !tbaa !20
  %12 = call zeroext i8 @sculpt_stroke_get_location(ptr noundef %0, ptr noundef nonnull %8, ptr noundef nonnull %7)
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %8) #10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #10
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %494, label %14

14:                                               ; preds = %10, %3
  %15 = call ptr @CTX_data_active_object(ptr noundef %0) #10
  %16 = getelementptr inbounds %struct.Object, ptr %15, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !5
  %18 = call ptr @CTX_data_tool_settings(ptr noundef %0) #10
  %19 = getelementptr inbounds %struct.ToolSettings, ptr %18, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !51
  %21 = call ptr @CTX_wm_region_view3d(ptr noundef %0) #10
  call void @ED_view3d_init_mats_rv3d(ptr noundef %15, ptr noundef %21) #10
  %22 = load ptr, ptr @MEM_callocN, align 8, !tbaa !31
  %23 = call ptr %22(i64 noundef 712, ptr noundef nonnull @.str.7) #10
  %24 = call ptr @CTX_data_scene(ptr noundef %0) #10
  %25 = call ptr @CTX_data_tool_settings(ptr noundef %0) #10
  %26 = call ptr @BKE_paint_brush(ptr noundef %20) #10
  %27 = getelementptr inbounds %struct.wmOperator, ptr %1, i64 0, i32 5
  %28 = load ptr, ptr %27, align 8, !tbaa !141
  %29 = call ptr @paint_stroke_view_context(ptr noundef %28) #10
  %30 = call ptr @CTX_data_active_object(ptr noundef %0) #10
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %5) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #10
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %6, ptr noundef nonnull align 4 dereferenceable(12) @__const.sculpt_update_cache_invariants.viewDir, i64 12, i1 false)
  %31 = getelementptr inbounds %struct.SculptSession, ptr %17, i64 0, i32 28
  store ptr %23, ptr %31, align 8, !tbaa !22
  %32 = getelementptr inbounds %struct.Brush, ptr %26, i64 0, i32 34
  %33 = load i8, ptr %32, align 8, !tbaa !59
  %34 = icmp eq i8 %33, 6
  br i1 %34, label %35, label %38

35:                                               ; preds = %14
  %36 = getelementptr inbounds %struct.Object, ptr %30, i64 0, i32 36
  %37 = load float, ptr %36, align 4, !tbaa !20
  br label %51

38:                                               ; preds = %14
  %39 = getelementptr inbounds %struct.Object, ptr %30, i64 0, i32 36, i64 0
  %40 = load float, ptr %39, align 4, !tbaa !20
  %41 = call fast float @llvm.fabs.f32(float %40)
  %42 = call fast float @llvm.maxnum.f32(float %41, float 0.000000e+00)
  %43 = getelementptr inbounds %struct.Object, ptr %30, i64 0, i32 36, i64 1
  %44 = load float, ptr %43, align 4, !tbaa !20
  %45 = call fast float @llvm.fabs.f32(float %44)
  %46 = call fast float @llvm.maxnum.f32(float %42, float %45)
  %47 = getelementptr inbounds %struct.Object, ptr %30, i64 0, i32 36, i64 2
  %48 = load float, ptr %47, align 4, !tbaa !20
  %49 = call fast float @llvm.fabs.f32(float %48)
  %50 = call fast float @llvm.maxnum.f32(float %46, float %49)
  br label %51

51:                                               ; preds = %38, %35
  %52 = phi float [ %37, %35 ], [ %40, %38 ]
  %53 = phi float [ 1.000000e+00, %35 ], [ %50, %38 ]
  %54 = fdiv fast float %53, %52
  %55 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 1
  store float %54, ptr %55, align 4, !tbaa !20
  %56 = getelementptr inbounds %struct.Object, ptr %30, i64 0, i32 36, i64 1
  %57 = load float, ptr %56, align 4, !tbaa !20
  %58 = fdiv fast float %53, %57
  %59 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 1, i64 1
  store float %58, ptr %59, align 4, !tbaa !20
  %60 = getelementptr inbounds %struct.Object, ptr %30, i64 0, i32 36, i64 2
  %61 = load float, ptr %60, align 4, !tbaa !20
  %62 = fdiv fast float %53, %61
  %63 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 1, i64 2
  store float %62, ptr %63, align 4, !tbaa !20
  %64 = getelementptr inbounds %struct.Brush, ptr %26, i64 0, i32 40
  %65 = load float, ptr %64, align 4, !tbaa !158
  %66 = fmul fast float %65, %65
  %67 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 49
  store float %66, ptr %67, align 4, !tbaa !159
  %68 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 2
  store i32 0, ptr %68, align 8, !tbaa !160
  %69 = getelementptr inbounds %struct.Object, ptr %30, i64 0, i32 26
  %70 = load ptr, ptr %69, align 8, !tbaa !31
  %71 = icmp eq ptr %70, null
  br i1 %71, label %127, label %72

72:                                               ; preds = %51
  %73 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 3, i64 0
  %74 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 3, i64 1
  %75 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 3, i64 2
  br label %76

76:                                               ; preds = %123, %72
  %77 = phi i32 [ %124, %123 ], [ 0, %72 ]
  %78 = phi ptr [ %125, %123 ], [ %70, %72 ]
  %79 = getelementptr inbounds %struct.ModifierData, ptr %78, i64 0, i32 2
  %80 = load i32, ptr %79, align 8, !tbaa !161
  %81 = icmp eq i32 %80, 5
  br i1 %81, label %82, label %123

82:                                               ; preds = %76
  %83 = getelementptr inbounds %struct.ModifierData, ptr %78, i64 0, i32 3
  %84 = load i32, ptr %83, align 4, !tbaa !163
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %123, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.MirrorModifierData, ptr %78, i64 0, i32 2
  %89 = load i16, ptr %88, align 2, !tbaa !164
  %90 = and i16 %89, 1
  %91 = icmp eq i16 %90, 0
  br i1 %91, label %123, label %92

92:                                               ; preds = %87
  %93 = zext i16 %89 to i32
  %94 = getelementptr inbounds %struct.MirrorModifierData, ptr %78, i64 0, i32 3
  %95 = and i32 %93, 8
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %103, label %97

97:                                               ; preds = %92
  %98 = or i32 %77, 1
  store i32 %98, ptr %68, align 8, !tbaa !160
  %99 = load float, ptr %94, align 4, !tbaa !166
  %100 = load float, ptr %73, align 4, !tbaa !20
  %101 = fcmp fast ogt float %99, %100
  br i1 %101, label %102, label %103

102:                                              ; preds = %97
  store float %99, ptr %73, align 4, !tbaa !20
  br label %103

103:                                              ; preds = %102, %97, %92
  %104 = phi i32 [ %98, %102 ], [ %98, %97 ], [ %77, %92 ]
  %105 = and i32 %93, 16
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %113, label %107

107:                                              ; preds = %103
  %108 = or i32 %104, 2
  store i32 %108, ptr %68, align 8, !tbaa !160
  %109 = load float, ptr %94, align 4, !tbaa !166
  %110 = load float, ptr %74, align 4, !tbaa !20
  %111 = fcmp fast ogt float %109, %110
  br i1 %111, label %112, label %113

112:                                              ; preds = %107
  store float %109, ptr %74, align 4, !tbaa !20
  br label %113

113:                                              ; preds = %112, %107, %103
  %114 = phi i32 [ %108, %112 ], [ %108, %107 ], [ %104, %103 ]
  %115 = and i32 %93, 32
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %123, label %117

117:                                              ; preds = %113
  %118 = or i32 %114, 4
  store i32 %118, ptr %68, align 8, !tbaa !160
  %119 = load float, ptr %94, align 4, !tbaa !166
  %120 = load float, ptr %75, align 4, !tbaa !20
  %121 = fcmp fast ogt float %119, %120
  br i1 %121, label %122, label %123

122:                                              ; preds = %117
  store float %119, ptr %75, align 4, !tbaa !20
  br label %123

123:                                              ; preds = %122, %117, %113, %87, %82, %76
  %124 = phi i32 [ %118, %122 ], [ %118, %117 ], [ %114, %113 ], [ %77, %87 ], [ %77, %82 ], [ %77, %76 ]
  %125 = load ptr, ptr %78, align 8, !tbaa !31
  %126 = icmp eq ptr %125, null
  br i1 %126, label %127, label %76, !llvm.loop !167

127:                                              ; preds = %123, %51
  %128 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 4
  br i1 %9, label %133, label %129

129:                                              ; preds = %127
  %130 = load float, ptr %2, align 4, !tbaa !20
  store float %130, ptr %128, align 4, !tbaa !20
  %131 = getelementptr inbounds float, ptr %2, i64 1
  %132 = load float, ptr %131, align 4, !tbaa !20
  br label %134

133:                                              ; preds = %127
  store float 0.000000e+00, ptr %128, align 4, !tbaa !20
  br label %134

134:                                              ; preds = %133, %129
  %135 = phi float [ 0.000000e+00, %133 ], [ %132, %129 ]
  %136 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 4, i64 1
  store float %135, ptr %136, align 4
  %137 = getelementptr inbounds %struct.wmOperator, ptr %1, i64 0, i32 7
  %138 = load ptr, ptr %137, align 8, !tbaa !143
  %139 = call i32 @RNA_enum_get(ptr noundef %138, ptr noundef nonnull @.str.6) #10
  %140 = icmp eq i32 %139, 1
  %141 = zext i1 %140 to i8
  %142 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 16
  store i8 %141, ptr %142, align 1, !tbaa !168
  %143 = icmp eq i32 %139, 2
  %144 = zext i1 %143 to i8
  %145 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 48
  store i8 %144, ptr %145, align 8, !tbaa !58
  %146 = getelementptr inbounds %struct.ToolSettings, ptr %25, i64 0, i32 73, i32 11
  br i1 %140, label %147, label %148

147:                                              ; preds = %134
  store i8 1, ptr %146, align 8
  br label %168

148:                                              ; preds = %134
  store i8 0, ptr %146, align 8
  br i1 %143, label %149, label %168

149:                                              ; preds = %148
  %150 = load i8, ptr %32, align 8, !tbaa !59
  %151 = icmp eq i8 %150, 19
  br i1 %151, label %152, label %156

152:                                              ; preds = %149
  %153 = getelementptr inbounds %struct.Brush, ptr %26, i64 0, i32 37
  %154 = load i8, ptr %153, align 1, !tbaa !64
  %155 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 46
  store i8 %154, ptr %155, align 2, !tbaa !169
  store i8 1, ptr %153, align 1, !tbaa !64
  br label %168

156:                                              ; preds = %149
  %157 = call i32 @BKE_brush_size_get(ptr noundef %24, ptr noundef nonnull %26) #10
  %158 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 45
  %159 = getelementptr inbounds %struct.ID, ptr %26, i64 0, i32 4, i64 2
  %160 = call ptr @BLI_strncpy(ptr noundef nonnull %158, ptr noundef nonnull %159, i64 noundef 66) #10
  %161 = call ptr @BKE_libblock_find_name(i16 noundef signext 21058, ptr noundef nonnull @.str.8) #10
  %162 = icmp eq ptr %161, null
  br i1 %162, label %168, label %163

163:                                              ; preds = %156
  call void @BKE_paint_brush_set(ptr noundef %20, ptr noundef nonnull %161) #10
  %164 = call i32 @BKE_brush_size_get(ptr noundef %24, ptr noundef nonnull %161) #10
  %165 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 47
  store i32 %164, ptr %165, align 4, !tbaa !170
  call void @BKE_brush_size_set(ptr noundef %24, ptr noundef nonnull %161, i32 noundef %157) #10
  %166 = getelementptr inbounds %struct.Brush, ptr %161, i64 0, i32 2
  %167 = load ptr, ptr %166, align 8, !tbaa !171
  call void @curvemapping_initialize(ptr noundef %167) #10
  br label %168

168:                                              ; preds = %163, %156, %152, %148, %147
  %169 = phi ptr [ %26, %152 ], [ %26, %148 ], [ %161, %163 ], [ %26, %156 ], [ %26, %147 ]
  %170 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 18
  %171 = load <2 x float>, ptr %128, align 4, !tbaa !20
  store <2 x float> %171, ptr %170, align 4, !tbaa !20
  %172 = getelementptr inbounds %struct.ToolSettings, ptr %25, i64 0, i32 73, i32 17
  %173 = extractelement <2 x float> %171, i64 0
  store float %173, ptr %172, align 4, !tbaa !20
  %174 = load float, ptr %136, align 4, !tbaa !20
  %175 = getelementptr inbounds %struct.ToolSettings, ptr %25, i64 0, i32 73, i32 17, i64 1
  store float %174, ptr %175, align 4, !tbaa !20
  %176 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 22
  store ptr %29, ptr %176, align 8, !tbaa !172
  %177 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 23
  store ptr %169, ptr %177, align 8, !tbaa !173
  %178 = getelementptr inbounds %struct.ViewContext, ptr %29, i64 0, i32 5
  %179 = load ptr, ptr %178, align 8, !tbaa !174
  %180 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 21
  call void @ED_view3d_ob_project_mat_get(ptr noundef %179, ptr noundef %30, ptr noundef nonnull %180) #10
  %181 = getelementptr inbounds %struct.Object, ptr %30, i64 0, i32 50
  %182 = getelementptr inbounds %struct.Object, ptr %30, i64 0, i32 47
  %183 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %181, ptr noundef nonnull %182) #10
  %184 = load ptr, ptr %176, align 8, !tbaa !172
  %185 = getelementptr inbounds %struct.ViewContext, ptr %184, i64 0, i32 5
  %186 = load ptr, ptr %185, align 8, !tbaa !174
  %187 = getelementptr inbounds %struct.RegionView3D, ptr %186, i64 0, i32 2
  call void @copy_m3_m4(ptr noundef nonnull %5, ptr noundef nonnull %187) #10
  call void @mul_m3_v3(ptr noundef nonnull %5, ptr noundef nonnull %6) #10
  call void @copy_m3_m4(ptr noundef nonnull %5, ptr noundef nonnull %181) #10
  call void @mul_m3_v3(ptr noundef nonnull %5, ptr noundef nonnull %6) #10
  %188 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 32
  %189 = load <2 x float>, ptr %6, align 8, !tbaa !20
  %190 = fmul fast <2 x float> %189, %189
  %191 = shufflevector <2 x float> %190, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %192 = fadd fast <2 x float> %191, %190
  %193 = extractelement <2 x float> %192, i64 0
  %194 = getelementptr inbounds float, ptr %6, i64 2
  %195 = load float, ptr %194, align 8, !tbaa !20
  %196 = fmul fast float %195, %195
  %197 = fadd fast float %193, %196
  %198 = fcmp fast ogt float %197, 0x38AA95A5C0000000
  br i1 %198, label %199, label %206

199:                                              ; preds = %168
  %200 = call fast float @llvm.sqrt.f32(float %197)
  %201 = fdiv fast float 1.000000e+00, %200
  %202 = insertelement <2 x float> poison, float %201, i64 0
  %203 = shufflevector <2 x float> %202, <2 x float> poison, <2 x i32> zeroinitializer
  %204 = fmul fast <2 x float> %203, %189
  %205 = fmul fast float %201, %195
  br label %206

206:                                              ; preds = %199, %168
  %207 = phi float [ %205, %199 ], [ 0.000000e+00, %168 ]
  %208 = phi <2 x float> [ %204, %199 ], [ zeroinitializer, %168 ]
  store <2 x float> %208, ptr %188, align 4
  %209 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 32, i64 2
  store float %207, ptr %209, align 4
  %210 = getelementptr inbounds %struct.Brush, ptr %169, i64 0, i32 34
  %211 = load i8, ptr %210, align 8, !tbaa !59
  switch i8 %211, label %212 [
    i8 19, label %255
    i8 2, label %255
    i8 15, label %255
  ]

212:                                              ; preds = %206
  %213 = getelementptr inbounds %struct.Sculpt, ptr %20, i64 0, i32 5
  %214 = load float, ptr %213, align 8, !tbaa !175
  %215 = fcmp fast ogt float %214, 0.000000e+00
  %216 = zext i1 %215 to i8
  %217 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 50
  store i8 %216, ptr %217, align 8, !tbaa !176
  br i1 %215, label %218, label %257

218:                                              ; preds = %212
  %219 = getelementptr inbounds %struct.Sculpt, ptr %20, i64 0, i32 7
  %220 = load ptr, ptr %219, align 8, !tbaa !177
  %221 = icmp eq ptr %220, null
  %222 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 51
  br i1 %221, label %231, label %223

223:                                              ; preds = %218
  %224 = getelementptr inbounds %struct.Object, ptr %220, i64 0, i32 47, i64 2
  %225 = load float, ptr %224, align 4, !tbaa !20
  store float %225, ptr %222, align 4, !tbaa !20
  %226 = getelementptr inbounds %struct.Object, ptr %220, i64 0, i32 47, i64 2, i64 1
  %227 = load float, ptr %226, align 4, !tbaa !20
  %228 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 51, i64 1
  store float %227, ptr %228, align 4, !tbaa !20
  %229 = getelementptr inbounds %struct.Object, ptr %220, i64 0, i32 47, i64 2, i64 2
  %230 = load float, ptr %229, align 4, !tbaa !20
  br label %232

231:                                              ; preds = %218
  store <2 x float> zeroinitializer, ptr %222, align 4, !tbaa !20
  br label %232

232:                                              ; preds = %231, %223
  %233 = phi float [ 1.000000e+00, %231 ], [ %230, %223 ]
  %234 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 51, i64 2
  store float %233, ptr %234, align 4
  call void @mul_m3_v3(ptr noundef nonnull %5, ptr noundef nonnull %222) #10
  %235 = load <2 x float>, ptr %222, align 4, !tbaa !20
  %236 = fmul fast <2 x float> %235, %235
  %237 = shufflevector <2 x float> %236, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %238 = fadd fast <2 x float> %237, %236
  %239 = extractelement <2 x float> %238, i64 0
  %240 = load float, ptr %234, align 4, !tbaa !20
  %241 = fmul fast float %240, %240
  %242 = fadd fast float %239, %241
  %243 = fcmp fast ogt float %242, 0x38AA95A5C0000000
  br i1 %243, label %244, label %251

244:                                              ; preds = %232
  %245 = call fast float @llvm.sqrt.f32(float %242)
  %246 = fdiv fast float 1.000000e+00, %245
  %247 = insertelement <2 x float> poison, float %246, i64 0
  %248 = shufflevector <2 x float> %247, <2 x float> poison, <2 x i32> zeroinitializer
  %249 = fmul fast <2 x float> %248, %235
  %250 = fmul fast float %246, %240
  br label %251

251:                                              ; preds = %244, %232
  %252 = phi float [ %250, %244 ], [ 0.000000e+00, %232 ]
  %253 = phi <2 x float> [ %249, %244 ], [ zeroinitializer, %232 ]
  store <2 x float> %253, ptr %222, align 4
  store float %252, ptr %234, align 4
  %254 = load i8, ptr %210, align 8, !tbaa !59
  br label %257

255:                                              ; preds = %206, %206, %206
  %256 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 50
  store i8 0, ptr %256, align 8, !tbaa !176
  br label %257

257:                                              ; preds = %255, %251, %212
  %258 = phi i8 [ %211, %255 ], [ %254, %251 ], [ %211, %212 ]
  %259 = icmp eq i8 %258, 6
  br i1 %259, label %260, label %344

260:                                              ; preds = %257
  %261 = load ptr, ptr %17, align 8, !tbaa !178
  %262 = icmp eq ptr %261, null
  br i1 %262, label %263, label %337

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.SculptSession, ptr %17, i64 0, i32 10
  %265 = load ptr, ptr %264, align 8, !tbaa !86
  %266 = icmp eq ptr %265, null
  br i1 %266, label %267, label %337

267:                                              ; preds = %263
  %268 = getelementptr inbounds %struct.SculptSession, ptr %17, i64 0, i32 26
  %269 = load ptr, ptr %268, align 8, !tbaa !179
  %270 = icmp eq ptr %269, null
  br i1 %270, label %271, label %337

271:                                              ; preds = %267
  %272 = getelementptr inbounds %struct.Brush, ptr %169, i64 0, i32 16
  %273 = load i32, ptr %272, align 8, !tbaa !180
  %274 = and i32 %273, 4096
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %337, label %276

276:                                              ; preds = %271
  %277 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !31
  %278 = getelementptr inbounds %struct.SculptSession, ptr %17, i64 0, i32 4
  %279 = load i32, ptr %278, align 8, !tbaa !181
  %280 = sext i32 %279 to i64
  %281 = mul nsw i64 %280, 12
  %282 = call ptr %277(i64 noundef %281, ptr noundef nonnull @.str.9) #10
  store ptr %282, ptr %268, align 8, !tbaa !179
  %283 = getelementptr inbounds %struct.SculptSession, ptr %17, i64 0, i32 19
  %284 = load ptr, ptr %283, align 8, !tbaa !182
  %285 = icmp eq ptr %284, null
  %286 = load i32, ptr %278, align 8, !tbaa !181
  br i1 %285, label %287, label %297

287:                                              ; preds = %276
  %288 = icmp sgt i32 %286, 0
  br i1 %288, label %289, label %337

289:                                              ; preds = %287
  %290 = getelementptr inbounds %struct.SculptSession, ptr %17, i64 0, i32 1
  %291 = load ptr, ptr %290, align 8, !tbaa !183
  %292 = zext i32 %286 to i64
  %293 = and i64 %292, 1
  %294 = icmp eq i32 %286, 1
  br i1 %294, label %324, label %295

295:                                              ; preds = %289
  %296 = and i64 %292, 4294967294
  br label %299

297:                                              ; preds = %276
  %298 = sext i32 %286 to i64
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %282, ptr nonnull align 4 %284, i64 %298, i1 false)
  br label %337

299:                                              ; preds = %299, %295
  %300 = phi i64 [ 0, %295 ], [ %321, %299 ]
  %301 = phi i64 [ 0, %295 ], [ %322, %299 ]
  %302 = getelementptr inbounds [3 x float], ptr %282, i64 %300
  %303 = getelementptr inbounds %struct.MVert, ptr %291, i64 %300
  %304 = load float, ptr %303, align 4, !tbaa !20
  store float %304, ptr %302, align 4, !tbaa !20
  %305 = getelementptr inbounds float, ptr %303, i64 1
  %306 = load float, ptr %305, align 4, !tbaa !20
  %307 = getelementptr inbounds float, ptr %302, i64 1
  store float %306, ptr %307, align 4, !tbaa !20
  %308 = getelementptr inbounds float, ptr %303, i64 2
  %309 = load float, ptr %308, align 4, !tbaa !20
  %310 = getelementptr inbounds float, ptr %302, i64 2
  store float %309, ptr %310, align 4, !tbaa !20
  %311 = or i64 %300, 1
  %312 = getelementptr inbounds [3 x float], ptr %282, i64 %311
  %313 = getelementptr inbounds %struct.MVert, ptr %291, i64 %311
  %314 = load float, ptr %313, align 4, !tbaa !20
  store float %314, ptr %312, align 4, !tbaa !20
  %315 = getelementptr inbounds float, ptr %313, i64 1
  %316 = load float, ptr %315, align 4, !tbaa !20
  %317 = getelementptr inbounds float, ptr %312, i64 1
  store float %316, ptr %317, align 4, !tbaa !20
  %318 = getelementptr inbounds float, ptr %313, i64 2
  %319 = load float, ptr %318, align 4, !tbaa !20
  %320 = getelementptr inbounds float, ptr %312, i64 2
  store float %319, ptr %320, align 4, !tbaa !20
  %321 = add nuw nsw i64 %300, 2
  %322 = add i64 %301, 2
  %323 = icmp eq i64 %322, %296
  br i1 %323, label %324, label %299, !llvm.loop !184

324:                                              ; preds = %299, %289
  %325 = phi i64 [ 0, %289 ], [ %321, %299 ]
  %326 = icmp eq i64 %293, 0
  br i1 %326, label %337, label %327

327:                                              ; preds = %324
  %328 = getelementptr inbounds [3 x float], ptr %282, i64 %325
  %329 = getelementptr inbounds %struct.MVert, ptr %291, i64 %325
  %330 = load float, ptr %329, align 4, !tbaa !20
  store float %330, ptr %328, align 4, !tbaa !20
  %331 = getelementptr inbounds float, ptr %329, i64 1
  %332 = load float, ptr %331, align 4, !tbaa !20
  %333 = getelementptr inbounds float, ptr %328, i64 1
  store float %332, ptr %333, align 4, !tbaa !20
  %334 = getelementptr inbounds float, ptr %329, i64 2
  %335 = load float, ptr %334, align 4, !tbaa !20
  %336 = getelementptr inbounds float, ptr %328, i64 2
  store float %335, ptr %336, align 4, !tbaa !20
  br label %337

337:                                              ; preds = %327, %324, %297, %287, %271, %267, %263, %260
  %338 = getelementptr inbounds %struct.SculptSession, ptr %17, i64 0, i32 10
  %339 = load ptr, ptr %338, align 8, !tbaa !86
  %340 = icmp eq ptr %339, null
  br i1 %340, label %344, label %341

341:                                              ; preds = %337
  %342 = getelementptr inbounds %struct.SculptSession, ptr %17, i64 0, i32 15
  %343 = load ptr, ptr %342, align 8, !tbaa !21
  call void @BKE_pbvh_free_layer_disp(ptr noundef %343) #10
  br label %344

344:                                              ; preds = %341, %337, %257
  %345 = getelementptr inbounds %struct.Brush, ptr %169, i64 0, i32 16
  %346 = load i32, ptr %345, align 8, !tbaa !180
  %347 = and i32 %346, 256
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %410, label %349

349:                                              ; preds = %344
  %350 = getelementptr inbounds %struct.SculptSession, ptr %17, i64 0, i32 6
  %351 = load ptr, ptr %350, align 8, !tbaa !185
  %352 = icmp eq ptr %351, null
  br i1 %352, label %408, label %353

353:                                              ; preds = %349
  %354 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !31
  %355 = getelementptr inbounds %struct.SculptSession, ptr %17, i64 0, i32 5
  %356 = load i32, ptr %355, align 4, !tbaa !186
  %357 = sext i32 %356 to i64
  %358 = mul nsw i64 %357, 12
  %359 = call ptr %354(i64 noundef %358, ptr noundef nonnull @.str.10) #10
  %360 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 24
  store ptr %359, ptr %360, align 8, !tbaa !145
  %361 = load i32, ptr %355, align 4, !tbaa !186
  %362 = icmp sgt i32 %361, 0
  br i1 %362, label %363, label %408

363:                                              ; preds = %353
  %364 = load ptr, ptr %350, align 8, !tbaa !185
  %365 = zext i32 %361 to i64
  %366 = and i64 %365, 1
  %367 = icmp eq i32 %361, 1
  br i1 %367, label %395, label %368

368:                                              ; preds = %363
  %369 = and i64 %365, 4294967294
  br label %370

370:                                              ; preds = %370, %368
  %371 = phi i64 [ 0, %368 ], [ %392, %370 ]
  %372 = phi i64 [ 0, %368 ], [ %393, %370 ]
  %373 = getelementptr inbounds [3 x float], ptr %359, i64 %371
  %374 = getelementptr inbounds [3 x float], ptr %364, i64 %371
  %375 = load float, ptr %374, align 4, !tbaa !20
  store float %375, ptr %373, align 4, !tbaa !20
  %376 = getelementptr inbounds float, ptr %374, i64 1
  %377 = load float, ptr %376, align 4, !tbaa !20
  %378 = getelementptr inbounds float, ptr %373, i64 1
  store float %377, ptr %378, align 4, !tbaa !20
  %379 = getelementptr inbounds float, ptr %374, i64 2
  %380 = load float, ptr %379, align 4, !tbaa !20
  %381 = getelementptr inbounds float, ptr %373, i64 2
  store float %380, ptr %381, align 4, !tbaa !20
  %382 = or i64 %371, 1
  %383 = getelementptr inbounds [3 x float], ptr %359, i64 %382
  %384 = getelementptr inbounds [3 x float], ptr %364, i64 %382
  %385 = load float, ptr %384, align 4, !tbaa !20
  store float %385, ptr %383, align 4, !tbaa !20
  %386 = getelementptr inbounds float, ptr %384, i64 1
  %387 = load float, ptr %386, align 4, !tbaa !20
  %388 = getelementptr inbounds float, ptr %383, i64 1
  store float %387, ptr %388, align 4, !tbaa !20
  %389 = getelementptr inbounds float, ptr %384, i64 2
  %390 = load float, ptr %389, align 4, !tbaa !20
  %391 = getelementptr inbounds float, ptr %383, i64 2
  store float %390, ptr %391, align 4, !tbaa !20
  %392 = add nuw nsw i64 %371, 2
  %393 = add i64 %372, 2
  %394 = icmp eq i64 %393, %369
  br i1 %394, label %395, label %370, !llvm.loop !187

395:                                              ; preds = %370, %363
  %396 = phi i64 [ 0, %363 ], [ %392, %370 ]
  %397 = icmp eq i64 %366, 0
  br i1 %397, label %408, label %398

398:                                              ; preds = %395
  %399 = getelementptr inbounds [3 x float], ptr %359, i64 %396
  %400 = getelementptr inbounds [3 x float], ptr %364, i64 %396
  %401 = load float, ptr %400, align 4, !tbaa !20
  store float %401, ptr %399, align 4, !tbaa !20
  %402 = getelementptr inbounds float, ptr %400, i64 1
  %403 = load float, ptr %402, align 4, !tbaa !20
  %404 = getelementptr inbounds float, ptr %399, i64 1
  store float %403, ptr %404, align 4, !tbaa !20
  %405 = getelementptr inbounds float, ptr %400, i64 2
  %406 = load float, ptr %405, align 4, !tbaa !20
  %407 = getelementptr inbounds float, ptr %399, i64 2
  store float %406, ptr %407, align 4, !tbaa !20
  br label %408

408:                                              ; preds = %398, %395, %353, %349
  %409 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 41
  store i8 1, ptr %409, align 4, !tbaa !46
  br label %410

410:                                              ; preds = %408, %344
  %411 = load i8, ptr %210, align 8, !tbaa !59
  switch i8 %411, label %418 [
    i8 1, label %412
    i8 16, label %412
    i8 17, label %412
    i8 6, label %412
    i8 4, label %412
    i8 8, label %412
    i8 18, label %412
    i8 14, label %412
    i8 7, label %412
  ]

412:                                              ; preds = %410, %410, %410, %410, %410, %410, %410, %410, %410
  %413 = load i32, ptr %345, align 8, !tbaa !180
  %414 = and i32 %413, 8192
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %416, label %418

416:                                              ; preds = %412
  %417 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 41
  store i8 1, ptr %417, align 4, !tbaa !46
  br label %418

418:                                              ; preds = %416, %412, %410
  %419 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 20
  store i8 1, ptr %419, align 4, !tbaa !188
  %420 = icmp eq i8 %411, 14
  br i1 %420, label %421, label %424

421:                                              ; preds = %418
  %422 = call ptr @BLI_dial_initialize(ptr noundef nonnull %128, float noundef nofpclass(nan inf) 5.000000e+00) #10
  %423 = getelementptr inbounds %struct.StrokeCache, ptr %23, i64 0, i32 44
  store ptr %422, ptr %423, align 8, !tbaa !146
  br label %424

424:                                              ; preds = %421, %418
  %425 = load ptr, ptr %31, align 8, !tbaa !22
  %426 = getelementptr inbounds %struct.StrokeCache, ptr %425, i64 0, i32 5
  store i32 1, ptr %426, align 8, !tbaa !189
  %427 = load ptr, ptr %17, align 8, !tbaa !178
  %428 = icmp eq ptr %427, null
  br i1 %428, label %482, label %429

429:                                              ; preds = %424
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #10
  %430 = getelementptr inbounds %struct.SculptSession, ptr %17, i64 0, i32 15
  %431 = load ptr, ptr %430, align 8, !tbaa !21
  call void @BKE_pbvh_node_get_grids(ptr noundef %431, ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef nonnull %4, ptr noundef null, ptr noundef null) #10
  %432 = load i32, ptr %426, align 8, !tbaa !189
  %433 = shl i32 %432, 3
  %434 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !31
  %435 = sext i32 %433 to i64
  %436 = call ptr %434(i64 noundef %435, ptr noundef nonnull @.str.11) #10
  %437 = getelementptr inbounds %struct.StrokeCache, ptr %425, i64 0, i32 7
  store ptr %436, ptr %437, align 8, !tbaa !190
  %438 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !31
  %439 = call ptr %438(i64 noundef %435, ptr noundef nonnull @.str.12) #10
  %440 = getelementptr inbounds %struct.StrokeCache, ptr %425, i64 0, i32 8
  store ptr %439, ptr %440, align 8, !tbaa !191
  %441 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !31
  %442 = call ptr %441(i64 noundef %435, ptr noundef nonnull @.str.13) #10
  %443 = getelementptr inbounds %struct.StrokeCache, ptr %425, i64 0, i32 9
  store ptr %442, ptr %443, align 8, !tbaa !192
  %444 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !31
  %445 = call ptr %444(i64 noundef %435, ptr noundef nonnull @.str.14) #10
  %446 = getelementptr inbounds %struct.StrokeCache, ptr %425, i64 0, i32 10
  store ptr %445, ptr %446, align 8, !tbaa !193
  %447 = load i32, ptr %426, align 8, !tbaa !189
  %448 = icmp sgt i32 %447, 0
  br i1 %448, label %449, label %481

449:                                              ; preds = %429, %449
  %450 = phi i64 [ %477, %449 ], [ 0, %429 ]
  %451 = load i32, ptr %4, align 4, !tbaa !24
  %452 = sext i32 %451 to i64
  %453 = shl nsw i64 %452, 2
  %454 = mul nsw i64 %452, 12
  %455 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !31
  %456 = call ptr %455(i64 noundef %454, ptr noundef nonnull @.str.15) #10
  %457 = load ptr, ptr %440, align 8, !tbaa !191
  %458 = getelementptr inbounds ptr, ptr %457, i64 %450
  store ptr %456, ptr %458, align 8, !tbaa !31
  %459 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !31
  %460 = load i32, ptr %4, align 4, !tbaa !24
  %461 = sext i32 %460 to i64
  %462 = mul i64 %454, %461
  %463 = call ptr %459(i64 noundef %462, ptr noundef nonnull @.str.16) #10
  %464 = load ptr, ptr %437, align 8, !tbaa !190
  %465 = getelementptr inbounds ptr, ptr %464, i64 %450
  store ptr %463, ptr %465, align 8, !tbaa !31
  %466 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !31
  %467 = call ptr %466(i64 noundef %453, ptr noundef nonnull @.str.17) #10
  %468 = load ptr, ptr %446, align 8, !tbaa !193
  %469 = getelementptr inbounds ptr, ptr %468, i64 %450
  store ptr %467, ptr %469, align 8, !tbaa !31
  %470 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !31
  %471 = load i32, ptr %4, align 4, !tbaa !24
  %472 = sext i32 %471 to i64
  %473 = mul i64 %453, %472
  %474 = call ptr %470(i64 noundef %473, ptr noundef nonnull @.str.18) #10
  %475 = load ptr, ptr %443, align 8, !tbaa !192
  %476 = getelementptr inbounds ptr, ptr %475, i64 %450
  store ptr %474, ptr %476, align 8, !tbaa !31
  %477 = add nuw nsw i64 %450, 1
  %478 = load i32, ptr %426, align 8, !tbaa !189
  %479 = sext i32 %478 to i64
  %480 = icmp slt i64 %477, %479
  br i1 %480, label %449, label %481, !llvm.loop !194

481:                                              ; preds = %449, %429
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #10
  br label %482

482:                                              ; preds = %424, %481
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #10
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %5) #10
  %483 = call ptr @BKE_paint_brush(ptr noundef %20) #10
  %484 = getelementptr inbounds %struct.Brush, ptr %483, i64 0, i32 34
  %485 = load i8, ptr %484, align 8, !tbaa !59
  %486 = add i8 %485, -1
  %487 = icmp ult i8 %486, 19
  br i1 %487, label %488, label %492

488:                                              ; preds = %482
  %489 = sext i8 %486 to i64
  %490 = shl i64 %489, 2
  %491 = call ptr @llvm.load.relative.i64(ptr @reltable.sculpt_stroke_test_start, i64 %490)
  br label %492

492:                                              ; preds = %482, %488
  %493 = phi ptr [ %491, %488 ], [ @.str.38, %482 ]
  call void @sculpt_undo_push_begin(ptr noundef nonnull %493) #10
  br label %494

494:                                              ; preds = %10, %492
  %495 = phi i8 [ 1, %492 ], [ 0, %10 ]
  ret i8 %495
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @sculpt_stroke_update_step(ptr noundef %0, ptr nocapture readnone %1, ptr noundef %2) #2 {
  %4 = alloca [3 x float], align 4
  %5 = alloca [3 x float], align 4
  %6 = alloca [3 x float], align 4
  %7 = alloca [3 x float], align 4
  %8 = alloca %struct.rcti, align 16
  %9 = alloca [3 x float], align 8
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  %12 = alloca %struct.PBVHVertexIter, align 8
  %13 = alloca [3 x float], align 8
  %14 = alloca ptr, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.PBVHVertexIter, align 8
  %17 = alloca ptr, align 8
  %18 = alloca i32, align 4
  %19 = alloca [2 x float], align 8
  %20 = alloca [3 x float], align 8
  %21 = alloca [4 x [4 x float]], align 16
  %22 = alloca [3 x float], align 8
  %23 = alloca [3 x float], align 4
  %24 = alloca [3 x float], align 8
  %25 = tail call ptr @CTX_data_tool_settings(ptr noundef %0) #10
  %26 = getelementptr inbounds %struct.ToolSettings, ptr %25, i64 0, i32 73
  %27 = tail call ptr @CTX_data_tool_settings(ptr noundef %0) #10
  %28 = getelementptr inbounds %struct.ToolSettings, ptr %27, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !51
  %30 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %31 = getelementptr inbounds %struct.Object, ptr %30, i64 0, i32 2
  %32 = load ptr, ptr %31, align 8, !tbaa !5
  %33 = tail call ptr @BKE_paint_brush(ptr noundef %29) #10
  %34 = load ptr, ptr %31, align 8, !tbaa !5
  %35 = getelementptr inbounds %struct.SculptSession, ptr %34, i64 0, i32 7
  %36 = load ptr, ptr %35, align 8, !tbaa !49
  %37 = icmp eq ptr %36, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %3
  %39 = getelementptr inbounds %struct.SculptSession, ptr %34, i64 0, i32 17
  %40 = load i8, ptr %39, align 1, !tbaa !50
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %72, label %42

42:                                               ; preds = %38, %3
  %43 = tail call ptr @CTX_data_tool_settings(ptr noundef %0) #10
  %44 = getelementptr inbounds %struct.ToolSettings, ptr %43, i64 0, i32 2
  %45 = load ptr, ptr %44, align 8, !tbaa !51
  %46 = tail call ptr @BKE_paint_brush(ptr noundef %45) #10
  %47 = tail call ptr @CTX_data_scene(ptr noundef %0) #10
  %48 = getelementptr inbounds %struct.SculptSession, ptr %34, i64 0, i32 28
  %49 = load ptr, ptr %48, align 8, !tbaa !22
  %50 = icmp eq ptr %49, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %42
  %52 = getelementptr inbounds %struct.StrokeCache, ptr %49, i64 0, i32 48
  %53 = load i8, ptr %52, align 8, !tbaa !58
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %70

55:                                               ; preds = %51, %42
  %56 = getelementptr inbounds %struct.Brush, ptr %46, i64 0, i32 34
  %57 = load i8, ptr %56, align 8, !tbaa !59
  %58 = icmp eq i8 %57, 2
  br i1 %58, label %70, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.Brush, ptr %46, i64 0, i32 38
  %61 = load float, ptr %60, align 4, !tbaa !63
  %62 = fcmp fast ogt float %61, 0.000000e+00
  br i1 %62, label %70, label %63

63:                                               ; preds = %59
  %64 = icmp eq i8 %57, 19
  br i1 %64, label %65, label %70

65:                                               ; preds = %63
  %66 = getelementptr inbounds %struct.Brush, ptr %46, i64 0, i32 37
  %67 = load i8, ptr %66, align 1, !tbaa !64
  %68 = icmp eq i8 %67, 1
  %69 = zext i1 %68 to i8
  br label %70

70:                                               ; preds = %65, %63, %59, %55, %51
  %71 = phi i8 [ 1, %59 ], [ 1, %55 ], [ 1, %51 ], [ 0, %63 ], [ %69, %65 ]
  tail call void @BKE_sculpt_update_mesh_elements(ptr noundef %47, ptr noundef %45, ptr noundef nonnull %30, i8 noundef zeroext %71, i8 noundef zeroext 0) #10
  br label %72

72:                                               ; preds = %38, %70
  %73 = tail call ptr @CTX_data_scene(ptr noundef %0) #10
  %74 = getelementptr inbounds %struct.Scene, ptr %73, i64 0, i32 20
  %75 = load ptr, ptr %74, align 8, !tbaa !94
  %76 = load ptr, ptr %31, align 8, !tbaa !5
  %77 = getelementptr inbounds %struct.SculptSession, ptr %76, i64 0, i32 28
  %78 = load ptr, ptr %77, align 8, !tbaa !22
  %79 = tail call ptr @BKE_paint_brush(ptr noundef %29) #10
  %80 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 20
  %81 = load i8, ptr %80, align 4, !tbaa !188
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %93

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.Brush, ptr %79, i64 0, i32 16
  %85 = load i32, ptr %84, align 8, !tbaa !180
  %86 = and i32 %85, 256
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %95

88:                                               ; preds = %83
  %89 = getelementptr inbounds %struct.Brush, ptr %79, i64 0, i32 34
  %90 = load i8, ptr %89, align 8, !tbaa !59
  %91 = add i8 %90, -13
  %92 = icmp ult i8 %91, 2
  br i1 %92, label %95, label %93

93:                                               ; preds = %88, %72
  %94 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 13
  tail call void @RNA_float_get_array(ptr noundef %2, ptr noundef nonnull @.str.39, ptr noundef nonnull %94) #10
  br label %95

95:                                               ; preds = %93, %88, %83
  %96 = tail call i32 @RNA_boolean_get(ptr noundef %2, ptr noundef nonnull @.str.40) #10
  %97 = trunc i32 %96 to i8
  %98 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 15
  store i8 %97, ptr %98, align 8, !tbaa !195
  %99 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 18
  tail call void @RNA_float_get_array(ptr noundef %2, ptr noundef nonnull @.str.41, ptr noundef nonnull %99) #10
  %100 = tail call zeroext i8 @paint_supports_dynamic_size(ptr noundef %79, i32 noundef 0) #10
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %95
  %103 = load i8, ptr %80, align 4, !tbaa !188
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %122, label %105

105:                                              ; preds = %102, %95
  %106 = tail call fast nofpclass(nan inf) float @RNA_float_get(ptr noundef %2, ptr noundef nonnull @.str.42) #10
  %107 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 17
  store float %106, ptr %107, align 4, !tbaa !196
  %108 = load i8, ptr %80, align 4, !tbaa !188
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %122, label %110

110:                                              ; preds = %105
  %111 = tail call i32 @BKE_brush_use_locked_size(ptr noundef nonnull %73, ptr noundef %79) #10
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %120

113:                                              ; preds = %110
  %114 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 22
  %115 = load ptr, ptr %114, align 8, !tbaa !172
  %116 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 13
  %117 = tail call i32 @BKE_brush_size_get(ptr noundef nonnull %73, ptr noundef %79) #10
  %118 = sitofp i32 %117 to float
  %119 = tail call fast nofpclass(nan inf) float @paint_calc_object_space_radius(ptr noundef %115, ptr noundef nonnull %116, float noundef nofpclass(nan inf) %118) #10
  store float %119, ptr %78, align 8, !tbaa !197
  tail call void @BKE_brush_unprojected_radius_set(ptr noundef nonnull %73, ptr noundef %79, float noundef nofpclass(nan inf) %119) #10
  br label %122

120:                                              ; preds = %110
  %121 = tail call fast nofpclass(nan inf) float @BKE_brush_unprojected_radius_get(ptr noundef nonnull %73, ptr noundef %79) #10
  store float %121, ptr %78, align 8, !tbaa !197
  br label %122

122:                                              ; preds = %120, %113, %105, %102
  %123 = tail call i32 @BKE_brush_use_size_pressure(ptr noundef nonnull %73, ptr noundef %79) #10
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %133, label %125

125:                                              ; preds = %122
  %126 = tail call zeroext i8 @paint_supports_dynamic_size(ptr noundef %79, i32 noundef 0) #10
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %133, label %128

128:                                              ; preds = %125
  %129 = load float, ptr %78, align 8, !tbaa !197
  %130 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 17
  %131 = load float, ptr %130, align 4, !tbaa !196
  %132 = fmul fast float %131, %129
  br label %135

133:                                              ; preds = %125, %122
  %134 = load float, ptr %78, align 8, !tbaa !197
  br label %135

135:                                              ; preds = %133, %128
  %136 = phi float [ %134, %133 ], [ %132, %128 ]
  %137 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 11
  store float %136, ptr %137, align 8, !tbaa !198
  %138 = fmul fast float %136, %136
  %139 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 12
  store float %138, ptr %139, align 4, !tbaa !199
  %140 = getelementptr inbounds %struct.Brush, ptr %79, i64 0, i32 16
  %141 = load i32, ptr %140, align 8, !tbaa !180
  %142 = and i32 %141, 256
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %162, label %144

144:                                              ; preds = %135
  %145 = and i32 %141, 4194304
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %149, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 13
  tail call void @RNA_float_get_array(ptr noundef %2, ptr noundef nonnull @.str.39, ptr noundef nonnull %148) #10
  br label %149

149:                                              ; preds = %147, %144
  %150 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 22
  %151 = load ptr, ptr %150, align 8, !tbaa !172
  %152 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 13
  %153 = getelementptr inbounds %struct.ToolSettings, ptr %75, i64 0, i32 73, i32 21
  %154 = load float, ptr %153, align 8, !tbaa !200
  %155 = tail call fast nofpclass(nan inf) float @paint_calc_object_space_radius(ptr noundef %151, ptr noundef nonnull %152, float noundef nofpclass(nan inf) %154) #10
  store float %155, ptr %137, align 8, !tbaa !198
  %156 = fmul fast float %155, %155
  store float %156, ptr %139, align 4, !tbaa !199
  %157 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 42
  %158 = load <2 x float>, ptr %152, align 4, !tbaa !20
  store <2 x float> %158, ptr %157, align 4, !tbaa !20
  %159 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 13, i64 2
  %160 = load float, ptr %159, align 4, !tbaa !20
  %161 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 42, i64 2
  store float %160, ptr %161, align 4, !tbaa !20
  br label %162

162:                                              ; preds = %149, %135
  %163 = load ptr, ptr %31, align 8, !tbaa !5
  %164 = getelementptr inbounds %struct.SculptSession, ptr %163, i64 0, i32 28
  %165 = load ptr, ptr %164, align 8, !tbaa !22
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %19) #10
  %166 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 18
  %167 = load <2 x float>, ptr %166, align 8, !tbaa !20
  store <2 x float> %167, ptr %19, align 8, !tbaa !20
  %168 = getelementptr inbounds %struct.Brush, ptr %79, i64 0, i32 34
  %169 = load i8, ptr %168, align 8, !tbaa !59
  %170 = icmp eq i8 %169, 13
  switch i8 %169, label %296 [
    i8 18, label %171
    i8 13, label %171
    i8 12, label %171
    i8 11, label %171
    i8 5, label %171
  ]

171:                                              ; preds = %162, %162, %162, %162, %162
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %20) #10
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %21) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %22) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %23) #10
  %172 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 20
  %173 = load i8, ptr %172, align 4, !tbaa !188
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %182, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 29
  %177 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 13
  %178 = load <2 x float>, ptr %177, align 4, !tbaa !20
  store <2 x float> %178, ptr %176, align 4, !tbaa !20
  %179 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 13, i64 2
  %180 = load float, ptr %179, align 4, !tbaa !20
  %181 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 29, i64 2
  store float %180, ptr %181, align 4, !tbaa !20
  br label %194

182:                                              ; preds = %171
  br i1 %170, label %183, label %194

183:                                              ; preds = %182
  %184 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 13
  %185 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 26
  %186 = load <2 x float>, ptr %185, align 4, !tbaa !20
  %187 = load <2 x float>, ptr %184, align 4, !tbaa !20
  %188 = fadd fast <2 x float> %187, %186
  store <2 x float> %188, ptr %184, align 4, !tbaa !20
  %189 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 26, i64 2
  %190 = load float, ptr %189, align 4, !tbaa !20
  %191 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 13, i64 2
  %192 = load float, ptr %191, align 4, !tbaa !20
  %193 = fadd fast float %192, %190
  store float %193, ptr %191, align 4, !tbaa !20
  br label %194

194:                                              ; preds = %183, %182, %175
  %195 = getelementptr inbounds %struct.Object, ptr %30, i64 0, i32 47
  %196 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 29
  call void @mul_v3_m4v3(ptr noundef nonnull %23, ptr noundef nonnull %195, ptr noundef nonnull %196) #10
  %197 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 22
  %198 = load ptr, ptr %197, align 8, !tbaa !172
  %199 = getelementptr inbounds %struct.ViewContext, ptr %198, i64 0, i32 3
  %200 = load ptr, ptr %199, align 8, !tbaa !72
  call void @ED_view3d_win_to_3d(ptr noundef %200, ptr noundef nonnull %23, ptr noundef nonnull %19, ptr noundef nonnull %20) #10
  %201 = load i8, ptr %172, align 4, !tbaa !188
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %203, label %253

203:                                              ; preds = %194
  switch i8 %169, label %256 [
    i8 5, label %204
    i8 12, label %204
    i8 18, label %224
    i8 11, label %224
    i8 13, label %224
  ]

204:                                              ; preds = %203, %203
  %205 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 28
  %206 = load <2 x float>, ptr %20, align 8, !tbaa !20
  %207 = load <2 x float>, ptr %205, align 4, !tbaa !20
  %208 = fsub fast <2 x float> %206, %207
  store <2 x float> %208, ptr %22, align 8, !tbaa !20
  %209 = getelementptr inbounds float, ptr %20, i64 2
  %210 = load float, ptr %209, align 8, !tbaa !20
  %211 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 28, i64 2
  %212 = load float, ptr %211, align 4, !tbaa !20
  %213 = fsub fast float %210, %212
  %214 = getelementptr inbounds float, ptr %22, i64 2
  store float %213, ptr %214, align 8, !tbaa !20
  %215 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %21, ptr noundef nonnull %195) #10
  call void @mul_mat3_m4_v3(ptr noundef nonnull %21, ptr noundef nonnull %22) #10
  %216 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 26
  %217 = load <2 x float>, ptr %22, align 8, !tbaa !20
  %218 = load <2 x float>, ptr %216, align 4, !tbaa !20
  %219 = fadd fast <2 x float> %218, %217
  store <2 x float> %219, ptr %216, align 4, !tbaa !20
  %220 = load float, ptr %214, align 8, !tbaa !20
  %221 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 26, i64 2
  %222 = load float, ptr %221, align 4, !tbaa !20
  %223 = fadd fast float %222, %220
  store float %223, ptr %221, align 4, !tbaa !20
  br label %256

224:                                              ; preds = %203, %203, %203
  %225 = load i32, ptr %140, align 8, !tbaa !180
  %226 = and i32 %225, 256
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %237, label %228

228:                                              ; preds = %224
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %24) #10
  call void @mul_v3_m4v3(ptr noundef nonnull %24, ptr noundef nonnull %195, ptr noundef nonnull %196) #10
  %229 = load <2 x float>, ptr %20, align 8, !tbaa !20
  %230 = load <2 x float>, ptr %24, align 8, !tbaa !20
  %231 = fsub fast <2 x float> %229, %230
  %232 = getelementptr inbounds float, ptr %20, i64 2
  %233 = load float, ptr %232, align 8, !tbaa !20
  %234 = getelementptr inbounds float, ptr %24, i64 2
  %235 = load float, ptr %234, align 8, !tbaa !20
  %236 = fsub fast float %233, %235
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %24) #10
  br label %247

237:                                              ; preds = %224
  %238 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 28
  %239 = load <2 x float>, ptr %20, align 8, !tbaa !20
  %240 = load <2 x float>, ptr %238, align 4, !tbaa !20
  %241 = fsub fast <2 x float> %239, %240
  %242 = getelementptr inbounds float, ptr %20, i64 2
  %243 = load float, ptr %242, align 8, !tbaa !20
  %244 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 28, i64 2
  %245 = load float, ptr %244, align 4, !tbaa !20
  %246 = fsub fast float %243, %245
  br label %247

247:                                              ; preds = %237, %228
  %248 = phi float [ %246, %237 ], [ %236, %228 ]
  %249 = phi <2 x float> [ %241, %237 ], [ %231, %228 ]
  %250 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 26
  store <2 x float> %249, ptr %250, align 4
  %251 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 26, i64 2
  store float %248, ptr %251, align 4
  %252 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %21, ptr noundef nonnull %195) #10
  call void @mul_mat3_m4_v3(ptr noundef nonnull %21, ptr noundef nonnull %250) #10
  br label %256

253:                                              ; preds = %194
  %254 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 26
  store <2 x float> zeroinitializer, ptr %254, align 4, !tbaa !20
  %255 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 26, i64 2
  store float 0.000000e+00, ptr %255, align 4, !tbaa !20
  br label %256

256:                                              ; preds = %253, %247, %204, %203
  %257 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 28
  %258 = load <2 x float>, ptr %20, align 8, !tbaa !20
  store <2 x float> %258, ptr %257, align 4, !tbaa !20
  %259 = getelementptr inbounds float, ptr %20, i64 2
  %260 = load float, ptr %259, align 8, !tbaa !20
  %261 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 28, i64 2
  store float %260, ptr %261, align 4, !tbaa !20
  switch i8 %169, label %294 [
    i8 5, label %262
    i8 12, label %272
  ]

262:                                              ; preds = %256
  %263 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 42
  %264 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 13
  %265 = load <2 x float>, ptr %264, align 4, !tbaa !20
  store <2 x float> %265, ptr %263, align 4, !tbaa !20
  %266 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 13, i64 2
  %267 = load float, ptr %266, align 4, !tbaa !20
  %268 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 42, i64 2
  store float %267, ptr %268, align 4, !tbaa !20
  %269 = load <2 x float>, ptr %196, align 4, !tbaa !20
  %270 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 29, i64 2
  %271 = load float, ptr %270, align 4, !tbaa !20
  br label %278

272:                                              ; preds = %256
  %273 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 42
  %274 = load <2 x float>, ptr %196, align 4, !tbaa !20
  store <2 x float> %274, ptr %273, align 4, !tbaa !20
  %275 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 29, i64 2
  %276 = load float, ptr %275, align 4, !tbaa !20
  %277 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 42, i64 2
  store float %276, ptr %277, align 4, !tbaa !20
  br label %278

278:                                              ; preds = %272, %262
  %279 = phi float [ %271, %262 ], [ %276, %272 ]
  %280 = phi <2 x float> [ %269, %262 ], [ %274, %272 ]
  %281 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 13
  store <2 x float> %280, ptr %281, align 4, !tbaa !20
  %282 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 13, i64 2
  store float %279, ptr %282, align 4, !tbaa !20
  %283 = getelementptr inbounds %struct.ToolSettings, ptr %75, i64 0, i32 73, i32 9
  store i32 1, ptr %283, align 8, !tbaa !201
  %284 = getelementptr inbounds %struct.ToolSettings, ptr %75, i64 0, i32 73, i32 14
  %285 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 4
  %286 = load float, ptr %285, align 4, !tbaa !20
  store float %286, ptr %284, align 4, !tbaa !20
  %287 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 4, i64 1
  %288 = load float, ptr %287, align 4, !tbaa !20
  %289 = getelementptr inbounds %struct.ToolSettings, ptr %75, i64 0, i32 73, i32 14, i64 1
  store float %288, ptr %289, align 4, !tbaa !20
  %290 = getelementptr inbounds %struct.ToolSettings, ptr %75, i64 0, i32 73, i32 21
  %291 = load float, ptr %290, align 8, !tbaa !200
  %292 = fptosi float %291 to i32
  %293 = getelementptr inbounds %struct.ToolSettings, ptr %75, i64 0, i32 73, i32 10
  store i32 %292, ptr %293, align 4, !tbaa !202
  br label %294

294:                                              ; preds = %278, %256
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %23) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %22) #10
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %21) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %20) #10
  %295 = load i8, ptr %168, align 8, !tbaa !59
  br label %296

296:                                              ; preds = %294, %162
  %297 = phi i8 [ %169, %162 ], [ %295, %294 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %19) #10
  %298 = icmp eq i8 %297, 14
  br i1 %298, label %299, label %325

299:                                              ; preds = %296
  %300 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 44
  %301 = load ptr, ptr %300, align 8, !tbaa !146
  %302 = call fast nofpclass(nan inf) float @BLI_dial_angle(ptr noundef %301, ptr noundef nonnull %99) #10
  %303 = fneg fast float %302
  %304 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 19
  %305 = load float, ptr %304, align 8, !tbaa !203
  %306 = fmul fast float %305, %303
  %307 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 43
  store float %306, ptr %307, align 4, !tbaa !204
  %308 = getelementptr inbounds %struct.ToolSettings, ptr %75, i64 0, i32 73, i32 9
  store i32 1, ptr %308, align 8, !tbaa !201
  %309 = getelementptr inbounds %struct.ToolSettings, ptr %75, i64 0, i32 73, i32 14
  %310 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 4
  %311 = load float, ptr %310, align 4, !tbaa !20
  store float %311, ptr %309, align 4, !tbaa !20
  %312 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 4, i64 1
  %313 = load float, ptr %312, align 4, !tbaa !20
  %314 = getelementptr inbounds %struct.ToolSettings, ptr %75, i64 0, i32 73, i32 14, i64 1
  store float %313, ptr %314, align 4, !tbaa !20
  %315 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 42
  %316 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 13
  %317 = load <2 x float>, ptr %316, align 4, !tbaa !20
  store <2 x float> %317, ptr %315, align 4, !tbaa !20
  %318 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 13, i64 2
  %319 = load float, ptr %318, align 4, !tbaa !20
  %320 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 42, i64 2
  store float %319, ptr %320, align 4, !tbaa !20
  %321 = getelementptr inbounds %struct.ToolSettings, ptr %75, i64 0, i32 73, i32 21
  %322 = load float, ptr %321, align 8, !tbaa !200
  %323 = fptosi float %322 to i32
  %324 = getelementptr inbounds %struct.ToolSettings, ptr %75, i64 0, i32 73, i32 10
  store i32 %323, ptr %324, align 4, !tbaa !202
  br label %325

325:                                              ; preds = %296, %299
  %326 = getelementptr inbounds %struct.ToolSettings, ptr %75, i64 0, i32 73, i32 8
  %327 = load float, ptr %326, align 4, !tbaa !205
  %328 = getelementptr inbounds %struct.StrokeCache, ptr %78, i64 0, i32 25
  store float %327, ptr %328, align 8, !tbaa !206
  %329 = load ptr, ptr %31, align 8, !tbaa !5
  %330 = call ptr @BKE_paint_brush(ptr noundef %29) #10
  %331 = getelementptr inbounds %struct.Brush, ptr %330, i64 0, i32 16
  %332 = load i32, ptr %331, align 8, !tbaa !180
  %333 = and i32 %332, 256
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %353

335:                                              ; preds = %325
  %336 = getelementptr inbounds %struct.Brush, ptr %330, i64 0, i32 34
  %337 = load i8, ptr %336, align 8, !tbaa !59
  %338 = icmp eq i8 %337, 5
  br i1 %338, label %339, label %349

339:                                              ; preds = %335
  %340 = getelementptr inbounds %struct.SculptSession, ptr %329, i64 0, i32 28
  %341 = load ptr, ptr %340, align 8, !tbaa !22
  %342 = getelementptr inbounds %struct.StrokeCache, ptr %341, i64 0, i32 22
  %343 = load ptr, ptr %342, align 8, !tbaa !172
  %344 = load ptr, ptr %343, align 8, !tbaa !207
  %345 = call i32 @BKE_brush_use_size_pressure(ptr noundef %344, ptr noundef nonnull %330) #10
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %347, label %353

347:                                              ; preds = %339
  %348 = load i32, ptr %331, align 8, !tbaa !180
  br label %349

349:                                              ; preds = %347, %335
  %350 = phi i32 [ %348, %347 ], [ %332, %335 ]
  %351 = and i32 %350, 8388608
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %354, label %353

353:                                              ; preds = %349, %339, %325
  call fastcc void @paint_mesh_restore_co(ptr noundef %29, ptr noundef nonnull %30)
  br label %354

354:                                              ; preds = %349, %353
  %355 = getelementptr inbounds %struct.Sculpt, ptr %29, i64 0, i32 1
  %356 = load i32, ptr %355, align 8, !tbaa !113
  %357 = and i32 %356, 8192
  %358 = icmp eq i32 %357, 0
  %359 = getelementptr inbounds %struct.SculptSession, ptr %32, i64 0, i32 15
  %360 = load ptr, ptr %359, align 8, !tbaa !21
  br i1 %358, label %365, label %361

361:                                              ; preds = %354
  %362 = getelementptr inbounds %struct.Sculpt, ptr %29, i64 0, i32 6
  %363 = load float, ptr %362, align 4, !tbaa !208
  %364 = fmul fast float %363, 0x3F847AE140000000
  br label %377

365:                                              ; preds = %354
  %366 = getelementptr inbounds %struct.SculptSession, ptr %32, i64 0, i32 28
  %367 = load ptr, ptr %366, align 8, !tbaa !22
  %368 = getelementptr inbounds %struct.StrokeCache, ptr %367, i64 0, i32 11
  %369 = load float, ptr %368, align 8, !tbaa !198
  %370 = getelementptr inbounds %struct.ToolSettings, ptr %25, i64 0, i32 73, i32 21
  %371 = load float, ptr %370, align 8, !tbaa !200
  %372 = getelementptr inbounds %struct.Sculpt, ptr %29, i64 0, i32 3
  %373 = load float, ptr %372, align 8, !tbaa !209
  %374 = fmul fast float %369, 2.500000e+00
  %375 = fmul fast float %374, %373
  %376 = fdiv fast float %375, %371
  br label %377

377:                                              ; preds = %365, %361
  %378 = phi float [ %376, %365 ], [ %364, %361 ]
  call void @BKE_pbvh_bmesh_detail_size_set(ptr noundef %360, float noundef nofpclass(nan inf) %378) #10
  %379 = getelementptr inbounds %struct.SculptSession, ptr %32, i64 0, i32 15
  %380 = load ptr, ptr %379, align 8, !tbaa !21
  %381 = call i32 @BKE_pbvh_type(ptr noundef %380) #10
  %382 = icmp eq i32 %381, 2
  br i1 %382, label %383, label %400

383:                                              ; preds = %377
  %384 = getelementptr inbounds %struct.SculptSession, ptr %32, i64 0, i32 28
  %385 = load ptr, ptr %384, align 8, !tbaa !22
  %386 = icmp eq ptr %385, null
  br i1 %386, label %391, label %387

387:                                              ; preds = %383
  %388 = getelementptr inbounds %struct.StrokeCache, ptr %385, i64 0, i32 48
  %389 = load i8, ptr %388, align 8, !tbaa !58
  %390 = icmp eq i8 %389, 0
  br i1 %390, label %391, label %400

391:                                              ; preds = %387, %383
  %392 = getelementptr inbounds %struct.Brush, ptr %33, i64 0, i32 16
  %393 = load i32, ptr %392, align 8, !tbaa !180
  %394 = and i32 %393, 8388864
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %396, label %400

396:                                              ; preds = %391
  %397 = getelementptr inbounds %struct.Brush, ptr %33, i64 0, i32 34
  %398 = load i8, ptr %397, align 8, !tbaa !59
  switch i8 %398, label %399 [
    i8 5, label %400
    i8 14, label %400
    i8 12, label %400
    i8 6, label %400
    i8 2, label %400
    i8 19, label %400
  ]

399:                                              ; preds = %396
  call fastcc void @do_symmetrical_brush_actions(ptr noundef nonnull %29, ptr noundef nonnull %30, ptr noundef nonnull @sculpt_topology_update, ptr noundef nonnull %26)
  br label %400

400:                                              ; preds = %396, %396, %396, %396, %396, %396, %377, %387, %391, %399
  call fastcc void @do_symmetrical_brush_actions(ptr noundef nonnull %29, ptr noundef nonnull %30, ptr noundef nonnull @do_brush_action, ptr noundef nonnull %26)
  %401 = load ptr, ptr %31, align 8, !tbaa !5
  %402 = call ptr @BKE_paint_brush(ptr noundef nonnull %29) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %14) #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #10
  %403 = getelementptr inbounds %struct.SculptSession, ptr %401, i64 0, i32 15
  %404 = load ptr, ptr %403, align 8, !tbaa !21
  call void @BKE_pbvh_gather_proxies(ptr noundef %404, ptr noundef nonnull %14, ptr noundef nonnull %15) #10
  %405 = getelementptr inbounds %struct.Brush, ptr %402, i64 0, i32 34
  %406 = load i8, ptr %405, align 8, !tbaa !59
  switch i8 %406, label %415 [
    i8 2, label %407
    i8 6, label %407
    i8 5, label %416
    i8 14, label %416
    i8 12, label %416
  ]

407:                                              ; preds = %400, %400
  %408 = getelementptr inbounds %struct.SculptSession, ptr %401, i64 0, i32 28
  %409 = load ptr, ptr %408, align 8, !tbaa !22
  %410 = getelementptr inbounds %struct.StrokeCache, ptr %409, i64 0, i32 50
  %411 = load i8, ptr %410, align 8, !tbaa !176
  %412 = icmp eq i8 %411, 0
  br i1 %412, label %813, label %413

413:                                              ; preds = %407
  %414 = icmp eq i8 %406, 5
  br i1 %414, label %416, label %415

415:                                              ; preds = %413, %400
  br label %416

416:                                              ; preds = %415, %413, %400, %400, %400
  %417 = phi i1 [ false, %415 ], [ true, %413 ], [ true, %400 ], [ true, %400 ], [ true, %400 ]
  %418 = load i32, ptr %15, align 4, !tbaa !24
  %419 = icmp sgt i32 %418, 0
  br i1 %419, label %420, label %813

420:                                              ; preds = %416
  %421 = getelementptr inbounds %struct.SculptSession, ptr %401, i64 0, i32 10
  %422 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 5
  %423 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 12
  %424 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 6
  %425 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 13
  %426 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 1
  %427 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 2
  %428 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 11
  %429 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 7
  %430 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 9
  %431 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 10
  %432 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 15
  %433 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 4
  %434 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 3
  %435 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 8
  %436 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 24
  %437 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 26
  %438 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 27
  %439 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 14
  %440 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 16
  %441 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 22
  %442 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 25
  %443 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 17
  %444 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 18, i32 0, i32 1
  %445 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 18
  %446 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 23
  %447 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 19
  %448 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 19, i32 0, i32 1
  %449 = getelementptr inbounds %struct.PBVHVertexIter, ptr %16, i64 0, i32 21
  %450 = getelementptr inbounds %struct.SculptSession, ptr %401, i64 0, i32 14
  %451 = getelementptr inbounds %struct.SculptSession, ptr %401, i64 0, i32 28
  %452 = getelementptr inbounds %struct.SculptSession, ptr %401, i64 0, i32 17
  %453 = getelementptr i8, ptr %30, i64 296
  %454 = getelementptr inbounds float, ptr %13, i64 1
  %455 = getelementptr inbounds float, ptr %13, i64 2
  br label %456

456:                                              ; preds = %805, %420
  %457 = phi i64 [ 0, %420 ], [ %809, %805 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %16) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %17) #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #10
  br i1 %417, label %458, label %468

458:                                              ; preds = %456
  %459 = load ptr, ptr %421, align 8, !tbaa !86
  %460 = icmp eq ptr %459, null
  br i1 %460, label %461, label %468

461:                                              ; preds = %458
  %462 = load ptr, ptr %14, align 8, !tbaa !31
  %463 = getelementptr inbounds ptr, ptr %462, i64 %457
  %464 = load ptr, ptr %463, align 8, !tbaa !31
  %465 = call ptr @sculpt_undo_push_node(ptr noundef %30, ptr noundef %464, i32 noundef 0) #10
  %466 = getelementptr inbounds %struct.SculptUndoNode, ptr %465, i64 0, i32 5
  %467 = load ptr, ptr %466, align 8, !tbaa !80
  br label %468

468:                                              ; preds = %461, %458, %456
  %469 = phi ptr [ null, %458 ], [ %467, %461 ], [ null, %456 ]
  %470 = load ptr, ptr %14, align 8, !tbaa !31
  %471 = getelementptr inbounds ptr, ptr %470, i64 %457
  %472 = load ptr, ptr %471, align 8, !tbaa !31
  call void @BKE_pbvh_node_get_proxies(ptr noundef %472, ptr noundef nonnull %17, ptr noundef nonnull %18) #10
  %473 = load ptr, ptr %403, align 8, !tbaa !21
  %474 = load ptr, ptr %14, align 8, !tbaa !31
  %475 = getelementptr inbounds ptr, ptr %474, i64 %457
  %476 = load ptr, ptr %475, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %473, ptr noundef %476, ptr noundef nonnull %16, i32 noundef 1) #10
  store i32 0, ptr %422, align 4, !tbaa !210
  store i32 0, ptr %16, align 8, !tbaa !214
  %477 = load i32, ptr %423, align 8, !tbaa !215
  %478 = icmp sgt i32 %477, 0
  br i1 %478, label %479, label %805

479:                                              ; preds = %468, %800
  %480 = phi i32 [ %801, %800 ], [ %477, %468 ]
  %481 = phi i32 [ %803, %800 ], [ 0, %468 ]
  %482 = load ptr, ptr %424, align 8, !tbaa !216
  %483 = icmp eq ptr %482, null
  br i1 %483, label %484, label %486

484:                                              ; preds = %479
  %485 = load i32, ptr %432, align 8, !tbaa !217
  store i32 %485, ptr %426, align 4, !tbaa !218
  store i32 1, ptr %427, align 8, !tbaa !219
  store i32 0, ptr %433, align 8, !tbaa !220
  br label %499

486:                                              ; preds = %479
  %487 = load i32, ptr %425, align 4, !tbaa !221
  store i32 %487, ptr %426, align 4, !tbaa !218
  store i32 %487, ptr %427, align 8, !tbaa !219
  %488 = load ptr, ptr %428, align 8, !tbaa !222
  %489 = sext i32 %481 to i64
  %490 = getelementptr inbounds i32, ptr %488, i64 %489
  %491 = load i32, ptr %490, align 4, !tbaa !24
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds ptr, ptr %482, i64 %492
  %494 = load ptr, ptr %493, align 8, !tbaa !31
  store ptr %494, ptr %429, align 8, !tbaa !223
  %495 = load ptr, ptr %430, align 8, !tbaa !224
  %496 = getelementptr inbounds ptr, ptr %495, i64 %492
  %497 = load ptr, ptr %496, align 8, !tbaa !31
  store ptr %497, ptr %431, align 8, !tbaa !225
  store i32 0, ptr %433, align 8, !tbaa !220
  %498 = icmp sgt i32 %487, 0
  br i1 %498, label %499, label %800

499:                                              ; preds = %486, %484
  %500 = phi i32 [ %487, %486 ], [ 1, %484 ]
  %501 = phi i32 [ %487, %486 ], [ %485, %484 ]
  br label %502

502:                                              ; preds = %499, %791
  %503 = phi i32 [ %792, %791 ], [ %500, %499 ]
  %504 = phi i32 [ %795, %791 ], [ 0, %499 ]
  %505 = phi i32 [ %794, %791 ], [ %501, %499 ]
  store i32 0, ptr %434, align 4, !tbaa !226
  %506 = icmp sgt i32 %505, 0
  br i1 %506, label %507, label %791

507:                                              ; preds = %502, %781
  %508 = phi i32 [ %783, %781 ], [ 0, %502 ]
  %509 = load ptr, ptr %429, align 8, !tbaa !223
  %510 = icmp eq ptr %509, null
  br i1 %510, label %546, label %511

511:                                              ; preds = %507
  store ptr %509, ptr %436, align 8, !tbaa !227
  %512 = load ptr, ptr %435, align 8, !tbaa !228
  %513 = getelementptr i8, ptr %512, i64 20
  %514 = load i32, ptr %513, align 4, !tbaa !229
  %515 = sext i32 %514 to i64
  %516 = getelementptr inbounds i8, ptr %509, i64 %515
  store ptr %516, ptr %437, align 8, !tbaa !231
  %517 = getelementptr inbounds %struct.CCGKey, ptr %512, i64 0, i32 9
  %518 = load i32, ptr %517, align 4, !tbaa !232
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %525, label %520

520:                                              ; preds = %511
  %521 = getelementptr i8, ptr %512, i64 24
  %522 = load i32, ptr %521, align 4, !tbaa !233
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds i8, ptr %509, i64 %523
  br label %525

525:                                              ; preds = %520, %511
  %526 = phi ptr [ %524, %520 ], [ null, %511 ]
  store ptr %526, ptr %438, align 8, !tbaa !234
  %527 = getelementptr i8, ptr %512, i64 4
  %528 = load i32, ptr %527, align 4, !tbaa !235
  %529 = sext i32 %528 to i64
  %530 = getelementptr inbounds i8, ptr %509, i64 %529
  store ptr %530, ptr %429, align 8, !tbaa !223
  %531 = load ptr, ptr %431, align 8, !tbaa !225
  %532 = icmp eq ptr %531, null
  br i1 %532, label %589, label %533

533:                                              ; preds = %525
  %534 = load i32, ptr %433, align 8, !tbaa !220
  %535 = load i32, ptr %425, align 4, !tbaa !221
  %536 = mul nsw i32 %535, %534
  %537 = add nsw i32 %536, %508
  %538 = ashr i32 %537, 5
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds i32, ptr %531, i64 %539
  %541 = load i32, ptr %540, align 4, !tbaa !24
  %542 = and i32 %537, 31
  %543 = shl nuw i32 1, %542
  %544 = and i32 %543, %541
  %545 = icmp eq i32 %544, 0
  br i1 %545, label %589, label %781

546:                                              ; preds = %507
  %547 = load ptr, ptr %439, align 8, !tbaa !236
  %548 = icmp eq ptr %547, null
  br i1 %548, label %566, label %549

549:                                              ; preds = %546
  %550 = load ptr, ptr %440, align 8, !tbaa !237
  %551 = sext i32 %508 to i64
  %552 = getelementptr inbounds i32, ptr %550, i64 %551
  %553 = load i32, ptr %552, align 4, !tbaa !24
  %554 = sext i32 %553 to i64
  %555 = getelementptr inbounds %struct.MVert, ptr %547, i64 %554
  store ptr %555, ptr %441, align 8, !tbaa !238
  %556 = getelementptr inbounds %struct.MVert, ptr %547, i64 %554, i32 2
  %557 = load i8, ptr %556, align 2, !tbaa !239
  %558 = and i8 %557, 16
  %559 = icmp eq i8 %558, 0
  br i1 %559, label %560, label %781

560:                                              ; preds = %549
  store ptr %555, ptr %436, align 8, !tbaa !227
  %561 = getelementptr inbounds %struct.MVert, ptr %547, i64 %554, i32 1
  store ptr %561, ptr %442, align 8, !tbaa !241
  %562 = load ptr, ptr %443, align 8, !tbaa !242
  %563 = icmp eq ptr %562, null
  br i1 %563, label %589, label %564

564:                                              ; preds = %560
  %565 = getelementptr inbounds float, ptr %562, i64 %554
  br label %586

566:                                              ; preds = %546
  %567 = load ptr, ptr %444, align 8, !tbaa !243
  %568 = icmp eq ptr %567, null
  %569 = load ptr, ptr %448, align 8
  %570 = select i1 %568, ptr %569, ptr %567
  %571 = select i1 %568, ptr %447, ptr %445
  %572 = getelementptr i8, ptr %570, i64 8
  %573 = load ptr, ptr %572, align 8, !tbaa !244
  store ptr %573, ptr %446, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %571) #10
  %574 = load ptr, ptr %446, align 8, !tbaa !246
  %575 = getelementptr i8, ptr %574, i64 13
  %576 = load i8, ptr %575, align 1, !tbaa !247
  %577 = and i8 %576, 2
  %578 = icmp eq i8 %577, 0
  br i1 %578, label %579, label %781

579:                                              ; preds = %566
  %580 = getelementptr inbounds %struct.BMVert, ptr %574, i64 0, i32 2
  store ptr %580, ptr %436, align 8, !tbaa !227
  %581 = getelementptr inbounds %struct.BMVert, ptr %574, i64 0, i32 3
  store ptr %581, ptr %437, align 8, !tbaa !231
  %582 = load ptr, ptr %574, align 8, !tbaa !249
  %583 = load i32, ptr %449, align 8, !tbaa !251
  %584 = sext i32 %583 to i64
  %585 = getelementptr inbounds i8, ptr %582, i64 %584
  br label %586

586:                                              ; preds = %579, %564
  %587 = phi ptr [ %585, %579 ], [ %565, %564 ]
  %588 = phi ptr [ %580, %579 ], [ %555, %564 ]
  store ptr %587, ptr %438, align 8, !tbaa !234
  br label %589

589:                                              ; preds = %586, %560, %533, %525
  %590 = phi ptr [ %555, %560 ], [ %509, %525 ], [ %509, %533 ], [ %588, %586 ]
  br i1 %417, label %591, label %602

591:                                              ; preds = %589
  %592 = load ptr, ptr %421, align 8, !tbaa !86
  %593 = icmp eq ptr %592, null
  br i1 %593, label %598, label %594

594:                                              ; preds = %591
  %595 = load ptr, ptr %450, align 8, !tbaa !119
  %596 = load ptr, ptr %446, align 8, !tbaa !246
  %597 = call ptr @BM_log_original_vert_co(ptr noundef %595, ptr noundef %596) #10
  br label %602

598:                                              ; preds = %591
  %599 = load i32, ptr %422, align 4, !tbaa !210
  %600 = sext i32 %599 to i64
  %601 = getelementptr inbounds [3 x float], ptr %469, i64 %600
  br label %602

602:                                              ; preds = %598, %594, %589
  %603 = phi ptr [ %597, %594 ], [ %601, %598 ], [ %590, %589 ]
  %604 = getelementptr inbounds float, ptr %603, i64 2
  %605 = load <2 x float>, ptr %603, align 4, !tbaa !20
  %606 = load float, ptr %604, align 4, !tbaa !20
  %607 = load i32, ptr %18, align 4, !tbaa !24
  %608 = icmp sgt i32 %607, 0
  br i1 %608, label %609, label %659

609:                                              ; preds = %602
  %610 = load ptr, ptr %17, align 8, !tbaa !31
  %611 = load i32, ptr %422, align 4, !tbaa !210
  %612 = sext i32 %611 to i64
  %613 = zext i32 %607 to i64
  %614 = and i64 %613, 1
  %615 = icmp eq i32 %607, 1
  br i1 %615, label %643, label %616

616:                                              ; preds = %609
  %617 = and i64 %613, 4294967294
  br label %618

618:                                              ; preds = %618, %616
  %619 = phi i64 [ 0, %616 ], [ %640, %618 ]
  %620 = phi float [ %606, %616 ], [ %639, %618 ]
  %621 = phi <2 x float> [ %605, %616 ], [ %636, %618 ]
  %622 = phi i64 [ 0, %616 ], [ %641, %618 ]
  %623 = getelementptr inbounds %struct.PBVHProxyNode, ptr %610, i64 %619
  %624 = load ptr, ptr %623, align 8, !tbaa !252
  %625 = getelementptr inbounds [3 x float], ptr %624, i64 %612
  %626 = load <2 x float>, ptr %625, align 4, !tbaa !20
  %627 = fadd fast <2 x float> %626, %621
  %628 = getelementptr inbounds float, ptr %625, i64 2
  %629 = load float, ptr %628, align 4, !tbaa !20
  %630 = fadd fast float %629, %620
  %631 = or i64 %619, 1
  %632 = getelementptr inbounds %struct.PBVHProxyNode, ptr %610, i64 %631
  %633 = load ptr, ptr %632, align 8, !tbaa !252
  %634 = getelementptr inbounds [3 x float], ptr %633, i64 %612
  %635 = load <2 x float>, ptr %634, align 4, !tbaa !20
  %636 = fadd fast <2 x float> %635, %627
  %637 = getelementptr inbounds float, ptr %634, i64 2
  %638 = load float, ptr %637, align 4, !tbaa !20
  %639 = fadd fast float %638, %630
  %640 = add nuw nsw i64 %619, 2
  %641 = add i64 %622, 2
  %642 = icmp eq i64 %641, %617
  br i1 %642, label %643, label %618, !llvm.loop !254

643:                                              ; preds = %618, %609
  %644 = phi <2 x float> [ undef, %609 ], [ %636, %618 ]
  %645 = phi float [ undef, %609 ], [ %639, %618 ]
  %646 = phi i64 [ 0, %609 ], [ %640, %618 ]
  %647 = phi float [ %606, %609 ], [ %639, %618 ]
  %648 = phi <2 x float> [ %605, %609 ], [ %636, %618 ]
  %649 = icmp eq i64 %614, 0
  br i1 %649, label %659, label %650

650:                                              ; preds = %643
  %651 = getelementptr inbounds %struct.PBVHProxyNode, ptr %610, i64 %646
  %652 = load ptr, ptr %651, align 8, !tbaa !252
  %653 = getelementptr inbounds [3 x float], ptr %652, i64 %612
  %654 = load <2 x float>, ptr %653, align 4, !tbaa !20
  %655 = fadd fast <2 x float> %654, %648
  %656 = getelementptr inbounds float, ptr %653, i64 2
  %657 = load float, ptr %656, align 4, !tbaa !20
  %658 = fadd fast float %657, %647
  br label %659

659:                                              ; preds = %650, %643, %602
  %660 = phi float [ %606, %602 ], [ %645, %643 ], [ %658, %650 ]
  %661 = phi <2 x float> [ %605, %602 ], [ %644, %643 ], [ %655, %650 ]
  %662 = load ptr, ptr %436, align 8, !tbaa !227
  %663 = load i32, ptr %355, align 8, !tbaa !113
  %664 = and i32 %663, 8
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %666, label %682

666:                                              ; preds = %659
  %667 = load ptr, ptr %451, align 8, !tbaa !22
  %668 = getelementptr inbounds %struct.StrokeCache, ptr %667, i64 0, i32 2
  %669 = load i32, ptr %668, align 8, !tbaa !160
  %670 = and i32 %669, 1
  %671 = icmp eq i32 %670, 0
  br i1 %671, label %678, label %672

672:                                              ; preds = %666
  %673 = load float, ptr %662, align 4, !tbaa !20
  %674 = call fast float @llvm.fabs.f32(float %673)
  %675 = getelementptr inbounds %struct.StrokeCache, ptr %667, i64 0, i32 3, i64 0
  %676 = load float, ptr %675, align 4, !tbaa !20
  %677 = fcmp fast ugt float %674, %676
  br i1 %677, label %678, label %680

678:                                              ; preds = %672, %666
  %679 = extractelement <2 x float> %661, i64 0
  br label %680

680:                                              ; preds = %678, %672
  %681 = phi float [ %679, %678 ], [ 0.000000e+00, %672 ]
  store float %681, ptr %662, align 4, !tbaa !20
  br label %682

682:                                              ; preds = %680, %659
  %683 = and i32 %663, 16
  %684 = icmp eq i32 %683, 0
  br i1 %684, label %685, label %702

685:                                              ; preds = %682
  %686 = load ptr, ptr %451, align 8, !tbaa !22
  %687 = getelementptr inbounds %struct.StrokeCache, ptr %686, i64 0, i32 2
  %688 = load i32, ptr %687, align 8, !tbaa !160
  %689 = and i32 %688, 2
  %690 = icmp eq i32 %689, 0
  br i1 %690, label %699, label %691

691:                                              ; preds = %685
  %692 = getelementptr inbounds float, ptr %662, i64 1
  %693 = load float, ptr %692, align 4, !tbaa !20
  %694 = call fast float @llvm.fabs.f32(float %693)
  %695 = getelementptr inbounds %struct.StrokeCache, ptr %686, i64 0, i32 3, i64 1
  %696 = load float, ptr %695, align 4, !tbaa !20
  %697 = fcmp fast ugt float %694, %696
  br i1 %697, label %699, label %698

698:                                              ; preds = %691
  store float 0.000000e+00, ptr %692, align 4, !tbaa !20
  br label %702

699:                                              ; preds = %691, %685
  %700 = getelementptr inbounds float, ptr %662, i64 1
  %701 = extractelement <2 x float> %661, i64 1
  store float %701, ptr %700, align 4, !tbaa !20
  br label %702

702:                                              ; preds = %699, %698, %682
  %703 = and i32 %663, 32
  %704 = icmp eq i32 %703, 0
  br i1 %704, label %705, label %721

705:                                              ; preds = %702
  %706 = load ptr, ptr %451, align 8, !tbaa !22
  %707 = getelementptr inbounds %struct.StrokeCache, ptr %706, i64 0, i32 2
  %708 = load i32, ptr %707, align 8, !tbaa !160
  %709 = and i32 %708, 4
  %710 = icmp eq i32 %709, 0
  br i1 %710, label %719, label %711

711:                                              ; preds = %705
  %712 = getelementptr inbounds float, ptr %662, i64 2
  %713 = load float, ptr %712, align 4, !tbaa !20
  %714 = call fast float @llvm.fabs.f32(float %713)
  %715 = getelementptr inbounds %struct.StrokeCache, ptr %706, i64 0, i32 3, i64 2
  %716 = load float, ptr %715, align 4, !tbaa !20
  %717 = fcmp fast ugt float %714, %716
  br i1 %717, label %719, label %718

718:                                              ; preds = %711
  store float 0.000000e+00, ptr %712, align 4, !tbaa !20
  br label %721

719:                                              ; preds = %711, %705
  %720 = getelementptr inbounds float, ptr %662, i64 2
  store float %660, ptr %720, align 4, !tbaa !20
  br label %721

721:                                              ; preds = %719, %718, %702
  %722 = load i8, ptr %452, align 1, !tbaa !50
  %723 = icmp eq i8 %722, 0
  br i1 %723, label %781, label %724

724:                                              ; preds = %721
  %725 = load ptr, ptr %31, align 8, !tbaa !5
  %726 = load ptr, ptr %453, align 8, !tbaa !25
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %13) #10
  %727 = load ptr, ptr %440, align 8, !tbaa !237
  %728 = load i32, ptr %422, align 4, !tbaa !210
  %729 = sext i32 %728 to i64
  %730 = getelementptr inbounds i32, ptr %727, i64 %729
  %731 = load i32, ptr %730, align 4, !tbaa !24
  %732 = getelementptr inbounds %struct.SculptSession, ptr %725, i64 0, i32 19
  %733 = load ptr, ptr %732, align 8, !tbaa !182
  %734 = sext i32 %731 to i64
  %735 = getelementptr inbounds [3 x float], ptr %733, i64 %734
  %736 = load float, ptr %662, align 4, !tbaa !20
  %737 = load float, ptr %735, align 4, !tbaa !20
  %738 = fsub fast float %736, %737
  store float %738, ptr %13, align 8, !tbaa !20
  %739 = getelementptr inbounds float, ptr %662, i64 1
  %740 = load float, ptr %739, align 4, !tbaa !20
  %741 = getelementptr inbounds float, ptr %735, i64 1
  %742 = load float, ptr %741, align 4, !tbaa !20
  %743 = fsub fast float %740, %742
  store float %743, ptr %454, align 4, !tbaa !20
  %744 = getelementptr inbounds float, ptr %662, i64 2
  %745 = load float, ptr %744, align 4, !tbaa !20
  %746 = getelementptr inbounds float, ptr %735, i64 2
  %747 = load float, ptr %746, align 4, !tbaa !20
  %748 = fsub fast float %745, %747
  store float %748, ptr %455, align 8, !tbaa !20
  %749 = getelementptr inbounds %struct.SculptSession, ptr %725, i64 0, i32 20
  %750 = load ptr, ptr %749, align 8, !tbaa !255
  %751 = getelementptr inbounds [3 x [3 x float]], ptr %750, i64 %734
  call void @mul_m3_v3(ptr noundef %751, ptr noundef nonnull %13) #10
  %752 = getelementptr inbounds %struct.SculptSession, ptr %725, i64 0, i32 18
  %753 = load ptr, ptr %752, align 8, !tbaa !256
  %754 = getelementptr inbounds [3 x float], ptr %753, i64 %734
  %755 = load <2 x float>, ptr %13, align 8, !tbaa !20
  %756 = load <2 x float>, ptr %754, align 4, !tbaa !20
  %757 = fadd fast <2 x float> %756, %755
  %758 = load float, ptr %455, align 8, !tbaa !20
  %759 = getelementptr inbounds float, ptr %754, i64 2
  %760 = load float, ptr %759, align 4, !tbaa !20
  %761 = fadd fast float %760, %758
  %762 = load ptr, ptr %732, align 8, !tbaa !182
  %763 = getelementptr inbounds [3 x float], ptr %762, i64 %734
  %764 = load ptr, ptr %436, align 8, !tbaa !227
  %765 = load float, ptr %764, align 4, !tbaa !20
  store float %765, ptr %763, align 4, !tbaa !20
  %766 = getelementptr inbounds float, ptr %764, i64 1
  %767 = load float, ptr %766, align 4, !tbaa !20
  %768 = getelementptr inbounds float, ptr %763, i64 1
  store float %767, ptr %768, align 4, !tbaa !20
  %769 = getelementptr inbounds float, ptr %764, i64 2
  %770 = load float, ptr %769, align 4, !tbaa !20
  %771 = getelementptr inbounds float, ptr %763, i64 2
  store float %770, ptr %771, align 4, !tbaa !20
  store <2 x float> %757, ptr %754, align 4, !tbaa !20
  store float %761, ptr %759, align 4, !tbaa !20
  %772 = getelementptr inbounds %struct.SculptSession, ptr %725, i64 0, i32 7
  %773 = load ptr, ptr %772, align 8, !tbaa !49
  %774 = icmp eq ptr %773, null
  br i1 %774, label %775, label %780

775:                                              ; preds = %724
  %776 = getelementptr inbounds %struct.Mesh, ptr %726, i64 0, i32 15
  %777 = load ptr, ptr %776, align 8, !tbaa !41
  %778 = getelementptr inbounds %struct.MVert, ptr %777, i64 %734
  store <2 x float> %757, ptr %778, align 4, !tbaa !20
  %779 = getelementptr inbounds float, ptr %778, i64 2
  store float %761, ptr %779, align 4, !tbaa !20
  br label %780

780:                                              ; preds = %775, %724
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %13) #10
  br label %781

781:                                              ; preds = %780, %721, %566, %549, %533
  %782 = load i32, ptr %434, align 4, !tbaa !226
  %783 = add nsw i32 %782, 1
  store i32 %783, ptr %434, align 4, !tbaa !226
  %784 = load i32, ptr %422, align 4, !tbaa !210
  %785 = add nsw i32 %784, 1
  store i32 %785, ptr %422, align 4, !tbaa !210
  %786 = load i32, ptr %426, align 4, !tbaa !218
  %787 = icmp slt i32 %783, %786
  br i1 %787, label %507, label %788, !llvm.loop !257

788:                                              ; preds = %781
  %789 = load i32, ptr %433, align 8, !tbaa !220
  %790 = load i32, ptr %427, align 8, !tbaa !219
  br label %791

791:                                              ; preds = %788, %502
  %792 = phi i32 [ %790, %788 ], [ %503, %502 ]
  %793 = phi i32 [ %789, %788 ], [ %504, %502 ]
  %794 = phi i32 [ %786, %788 ], [ %505, %502 ]
  %795 = add nsw i32 %793, 1
  store i32 %795, ptr %433, align 8, !tbaa !220
  %796 = icmp slt i32 %795, %792
  br i1 %796, label %502, label %797, !llvm.loop !258

797:                                              ; preds = %791
  %798 = load i32, ptr %16, align 8, !tbaa !214
  %799 = load i32, ptr %423, align 8, !tbaa !215
  br label %800

800:                                              ; preds = %797, %486
  %801 = phi i32 [ %799, %797 ], [ %480, %486 ]
  %802 = phi i32 [ %798, %797 ], [ %481, %486 ]
  %803 = add nsw i32 %802, 1
  store i32 %803, ptr %16, align 8, !tbaa !214
  %804 = icmp slt i32 %803, %801
  br i1 %804, label %479, label %805, !llvm.loop !259

805:                                              ; preds = %800, %468
  %806 = load ptr, ptr %14, align 8, !tbaa !31
  %807 = getelementptr inbounds ptr, ptr %806, i64 %457
  %808 = load ptr, ptr %807, align 8, !tbaa !31
  call void @BKE_pbvh_node_free_proxies(ptr noundef %808) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %17) #10
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %16) #10
  %809 = add nuw nsw i64 %457, 1
  %810 = load i32, ptr %15, align 4, !tbaa !24
  %811 = sext i32 %810 to i64
  %812 = icmp slt i64 %809, %811
  br i1 %812, label %456, label %813, !llvm.loop !260

813:                                              ; preds = %805, %416, %407
  %814 = load ptr, ptr %14, align 8, !tbaa !31
  %815 = icmp eq ptr %814, null
  br i1 %815, label %818, label %816

816:                                              ; preds = %813
  %817 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  call void %817(ptr noundef nonnull %814) #10
  br label %818

818:                                              ; preds = %813, %816
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %14) #10
  %819 = load ptr, ptr %31, align 8, !tbaa !5
  %820 = call ptr @BKE_paint_brush(ptr noundef %29) #10
  %821 = load ptr, ptr %819, align 8, !tbaa !178
  %822 = icmp eq ptr %821, null
  br i1 %822, label %832, label %823

823:                                              ; preds = %818
  %824 = getelementptr inbounds %struct.Brush, ptr %820, i64 0, i32 3, i32 5
  %825 = load ptr, ptr %824, align 8, !tbaa !147
  %826 = icmp eq ptr %825, null
  br i1 %826, label %832, label %827

827:                                              ; preds = %823
  %828 = getelementptr inbounds %struct.Tex, ptr %825, i64 0, i32 32
  %829 = load i16, ptr %828, align 8, !tbaa !261
  %830 = icmp eq i16 %829, 7
  br i1 %830, label %831, label %832

831:                                              ; preds = %827
  call void @multires_stitch_grids(ptr noundef nonnull %30) #10
  br label %832

832:                                              ; preds = %818, %823, %827, %831
  %833 = getelementptr inbounds %struct.SculptSession, ptr %32, i64 0, i32 17
  %834 = load i8, ptr %833, align 1, !tbaa !50
  %835 = icmp eq i8 %834, 0
  br i1 %835, label %1157, label %836

836:                                              ; preds = %832
  %837 = load ptr, ptr %31, align 8, !tbaa !5
  %838 = call ptr @BKE_paint_brush(ptr noundef %29) #10
  %839 = getelementptr inbounds %struct.Brush, ptr %838, i64 0, i32 34
  %840 = load i8, ptr %839, align 8, !tbaa !59
  switch i8 %840, label %1135 [
    i8 2, label %841
    i8 6, label %841
  ]

841:                                              ; preds = %836, %836
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #10
  %842 = getelementptr %struct.Object, ptr %30, i64 0, i32 19
  %843 = load ptr, ptr %842, align 8, !tbaa !25
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #10
  %844 = getelementptr inbounds %struct.SculptSession, ptr %837, i64 0, i32 7
  %845 = load ptr, ptr %844, align 8, !tbaa !49
  %846 = icmp eq ptr %845, null
  br i1 %846, label %859, label %847

847:                                              ; preds = %841
  %848 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !31
  %849 = getelementptr inbounds %struct.Mesh, ptr %843, i64 0, i32 26
  %850 = load i32, ptr %849, align 8, !tbaa !37
  %851 = sext i32 %850 to i64
  %852 = mul nsw i64 %851, 12
  %853 = call ptr %848(i64 noundef %852, ptr noundef nonnull @.str.43) #10
  %854 = getelementptr inbounds %struct.SculptSession, ptr %837, i64 0, i32 18
  %855 = load ptr, ptr %854, align 8, !tbaa !256
  %856 = load i32, ptr %849, align 8, !tbaa !37
  %857 = sext i32 %856 to i64
  %858 = mul nsw i64 %857, 12
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %853, ptr align 4 %855, i64 %858, i1 false)
  br label %859

859:                                              ; preds = %847, %841
  %860 = phi ptr [ %853, %847 ], [ null, %841 ]
  %861 = getelementptr inbounds %struct.SculptSession, ptr %837, i64 0, i32 15
  %862 = load ptr, ptr %861, align 8, !tbaa !21
  call void @BKE_pbvh_search_gather(ptr noundef %862, ptr noundef null, ptr noundef null, ptr noundef nonnull %11, ptr noundef nonnull %10) #10
  %863 = load i32, ptr %10, align 4, !tbaa !24
  %864 = icmp sgt i32 %863, 0
  br i1 %864, label %865, label %1127

865:                                              ; preds = %859
  %866 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 5
  %867 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 12
  %868 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 6
  %869 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 13
  %870 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 1
  %871 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 2
  %872 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 11
  %873 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 7
  %874 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 9
  %875 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 10
  %876 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 15
  %877 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 4
  %878 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 3
  %879 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 8
  %880 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 24
  %881 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 26
  %882 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 27
  %883 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 14
  %884 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 16
  %885 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 22
  %886 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 25
  %887 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 17
  %888 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 18, i32 0, i32 1
  %889 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 18
  %890 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 23
  %891 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 19
  %892 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 19, i32 0, i32 1
  %893 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 21
  %894 = getelementptr inbounds float, ptr %9, i64 1
  %895 = getelementptr inbounds float, ptr %9, i64 2
  %896 = icmp eq ptr %860, null
  %897 = getelementptr inbounds %struct.SculptSession, ptr %837, i64 0, i32 18
  br label %898

898:                                              ; preds = %1122, %865
  %899 = phi i64 [ 0, %865 ], [ %1123, %1122 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %12) #10
  %900 = load ptr, ptr %861, align 8, !tbaa !21
  %901 = load ptr, ptr %11, align 8, !tbaa !31
  %902 = getelementptr inbounds ptr, ptr %901, i64 %899
  %903 = load ptr, ptr %902, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %900, ptr noundef %903, ptr noundef nonnull %12, i32 noundef 1) #10
  store i32 0, ptr %866, align 4, !tbaa !210
  store i32 0, ptr %12, align 8, !tbaa !214
  %904 = load i32, ptr %867, align 8, !tbaa !215
  %905 = icmp sgt i32 %904, 0
  br i1 %905, label %906, label %1122

906:                                              ; preds = %898, %1116
  %907 = phi i32 [ %1117, %1116 ], [ %904, %898 ]
  %908 = phi i32 [ %1119, %1116 ], [ 0, %898 ]
  %909 = phi i32 [ %1120, %1116 ], [ 0, %898 ]
  %910 = load ptr, ptr %868, align 8, !tbaa !216
  %911 = icmp eq ptr %910, null
  br i1 %911, label %912, label %914

912:                                              ; preds = %906
  %913 = load i32, ptr %876, align 8, !tbaa !217
  store i32 %913, ptr %870, align 4, !tbaa !218
  store i32 1, ptr %871, align 8, !tbaa !219
  store i32 0, ptr %877, align 8, !tbaa !220
  br label %927

914:                                              ; preds = %906
  %915 = load i32, ptr %869, align 4, !tbaa !221
  store i32 %915, ptr %870, align 4, !tbaa !218
  store i32 %915, ptr %871, align 8, !tbaa !219
  %916 = load ptr, ptr %872, align 8, !tbaa !222
  %917 = sext i32 %909 to i64
  %918 = getelementptr inbounds i32, ptr %916, i64 %917
  %919 = load i32, ptr %918, align 4, !tbaa !24
  %920 = sext i32 %919 to i64
  %921 = getelementptr inbounds ptr, ptr %910, i64 %920
  %922 = load ptr, ptr %921, align 8, !tbaa !31
  store ptr %922, ptr %873, align 8, !tbaa !223
  %923 = load ptr, ptr %874, align 8, !tbaa !224
  %924 = getelementptr inbounds ptr, ptr %923, i64 %920
  %925 = load ptr, ptr %924, align 8, !tbaa !31
  store ptr %925, ptr %875, align 8, !tbaa !225
  store i32 0, ptr %877, align 8, !tbaa !220
  %926 = icmp sgt i32 %915, 0
  br i1 %926, label %927, label %1116

927:                                              ; preds = %914, %912
  %928 = phi i32 [ %915, %914 ], [ 1, %912 ]
  %929 = phi i32 [ %915, %914 ], [ %913, %912 ]
  br label %930

930:                                              ; preds = %927, %1106
  %931 = phi i32 [ %1107, %1106 ], [ %928, %927 ]
  %932 = phi i32 [ %1111, %1106 ], [ 0, %927 ]
  %933 = phi i32 [ %1109, %1106 ], [ %908, %927 ]
  %934 = phi i32 [ %1110, %1106 ], [ %929, %927 ]
  store i32 0, ptr %878, align 4, !tbaa !226
  %935 = icmp sgt i32 %934, 0
  br i1 %935, label %936, label %1106

936:                                              ; preds = %930, %1096
  %937 = phi i32 [ %1100, %1096 ], [ %933, %930 ]
  %938 = phi i32 [ %1099, %1096 ], [ 0, %930 ]
  %939 = load ptr, ptr %873, align 8, !tbaa !223
  %940 = icmp eq ptr %939, null
  br i1 %940, label %976, label %941

941:                                              ; preds = %936
  store ptr %939, ptr %880, align 8, !tbaa !227
  %942 = load ptr, ptr %879, align 8, !tbaa !228
  %943 = getelementptr i8, ptr %942, i64 20
  %944 = load i32, ptr %943, align 4, !tbaa !229
  %945 = sext i32 %944 to i64
  %946 = getelementptr inbounds i8, ptr %939, i64 %945
  store ptr %946, ptr %881, align 8, !tbaa !231
  %947 = getelementptr inbounds %struct.CCGKey, ptr %942, i64 0, i32 9
  %948 = load i32, ptr %947, align 4, !tbaa !232
  %949 = icmp eq i32 %948, 0
  br i1 %949, label %955, label %950

950:                                              ; preds = %941
  %951 = getelementptr i8, ptr %942, i64 24
  %952 = load i32, ptr %951, align 4, !tbaa !233
  %953 = sext i32 %952 to i64
  %954 = getelementptr inbounds i8, ptr %939, i64 %953
  br label %955

955:                                              ; preds = %950, %941
  %956 = phi ptr [ %954, %950 ], [ null, %941 ]
  store ptr %956, ptr %882, align 8, !tbaa !234
  %957 = getelementptr i8, ptr %942, i64 4
  %958 = load i32, ptr %957, align 4, !tbaa !235
  %959 = sext i32 %958 to i64
  %960 = getelementptr inbounds i8, ptr %939, i64 %959
  store ptr %960, ptr %873, align 8, !tbaa !223
  %961 = load ptr, ptr %875, align 8, !tbaa !225
  %962 = icmp eq ptr %961, null
  br i1 %962, label %1021, label %963

963:                                              ; preds = %955
  %964 = load i32, ptr %877, align 8, !tbaa !220
  %965 = load i32, ptr %869, align 4, !tbaa !221
  %966 = mul nsw i32 %965, %964
  %967 = add nsw i32 %966, %938
  %968 = ashr i32 %967, 5
  %969 = sext i32 %968 to i64
  %970 = getelementptr inbounds i32, ptr %961, i64 %969
  %971 = load i32, ptr %970, align 4, !tbaa !24
  %972 = and i32 %967, 31
  %973 = shl nuw i32 1, %972
  %974 = and i32 %973, %971
  %975 = icmp eq i32 %974, 0
  br i1 %975, label %1021, label %1096

976:                                              ; preds = %936
  %977 = load ptr, ptr %883, align 8, !tbaa !236
  %978 = icmp eq ptr %977, null
  br i1 %978, label %996, label %979

979:                                              ; preds = %976
  %980 = load ptr, ptr %884, align 8, !tbaa !237
  %981 = sext i32 %938 to i64
  %982 = getelementptr inbounds i32, ptr %980, i64 %981
  %983 = load i32, ptr %982, align 4, !tbaa !24
  %984 = sext i32 %983 to i64
  %985 = getelementptr inbounds %struct.MVert, ptr %977, i64 %984
  store ptr %985, ptr %885, align 8, !tbaa !238
  %986 = getelementptr inbounds %struct.MVert, ptr %977, i64 %984, i32 2
  %987 = load i8, ptr %986, align 2, !tbaa !239
  %988 = and i8 %987, 16
  %989 = icmp eq i8 %988, 0
  br i1 %989, label %990, label %1096

990:                                              ; preds = %979
  store ptr %985, ptr %880, align 8, !tbaa !227
  %991 = getelementptr inbounds %struct.MVert, ptr %977, i64 %984, i32 1
  store ptr %991, ptr %886, align 8, !tbaa !241
  %992 = load ptr, ptr %887, align 8, !tbaa !242
  %993 = icmp eq ptr %992, null
  br i1 %993, label %1021, label %994

994:                                              ; preds = %990
  %995 = getelementptr inbounds float, ptr %992, i64 %984
  br label %1017

996:                                              ; preds = %976
  %997 = load ptr, ptr %888, align 8, !tbaa !243
  %998 = icmp eq ptr %997, null
  %999 = load ptr, ptr %892, align 8
  %1000 = select i1 %998, ptr %999, ptr %997
  %1001 = select i1 %998, ptr %891, ptr %889
  %1002 = getelementptr i8, ptr %1000, i64 8
  %1003 = load ptr, ptr %1002, align 8, !tbaa !244
  store ptr %1003, ptr %890, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %1001) #10
  %1004 = load ptr, ptr %890, align 8, !tbaa !246
  %1005 = getelementptr i8, ptr %1004, i64 13
  %1006 = load i8, ptr %1005, align 1, !tbaa !247
  %1007 = and i8 %1006, 2
  %1008 = icmp eq i8 %1007, 0
  %1009 = load i32, ptr %866, align 4, !tbaa !210
  br i1 %1008, label %1010, label %1096

1010:                                             ; preds = %996
  %1011 = getelementptr inbounds %struct.BMVert, ptr %1004, i64 0, i32 2
  store ptr %1011, ptr %880, align 8, !tbaa !227
  %1012 = getelementptr inbounds %struct.BMVert, ptr %1004, i64 0, i32 3
  store ptr %1012, ptr %881, align 8, !tbaa !231
  %1013 = load ptr, ptr %1004, align 8, !tbaa !249
  %1014 = load i32, ptr %893, align 8, !tbaa !251
  %1015 = sext i32 %1014 to i64
  %1016 = getelementptr inbounds i8, ptr %1013, i64 %1015
  br label %1017

1017:                                             ; preds = %1010, %994
  %1018 = phi ptr [ %1016, %1010 ], [ %995, %994 ]
  %1019 = phi ptr [ %1011, %1010 ], [ %985, %994 ]
  %1020 = phi i32 [ %1009, %1010 ], [ %937, %994 ]
  store ptr %1018, ptr %882, align 8, !tbaa !234
  br label %1021

1021:                                             ; preds = %1017, %990, %963, %955
  %1022 = phi ptr [ %985, %990 ], [ %939, %955 ], [ %939, %963 ], [ %1019, %1017 ]
  %1023 = phi i32 [ %937, %990 ], [ %937, %955 ], [ %937, %963 ], [ %1020, %1017 ]
  %1024 = load ptr, ptr %31, align 8, !tbaa !5
  %1025 = load ptr, ptr %842, align 8, !tbaa !25
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %9) #10
  %1026 = load ptr, ptr %884, align 8, !tbaa !237
  %1027 = sext i32 %1023 to i64
  %1028 = getelementptr inbounds i32, ptr %1026, i64 %1027
  %1029 = load i32, ptr %1028, align 4, !tbaa !24
  %1030 = getelementptr inbounds %struct.SculptSession, ptr %1024, i64 0, i32 19
  %1031 = load ptr, ptr %1030, align 8, !tbaa !182
  %1032 = sext i32 %1029 to i64
  %1033 = getelementptr inbounds [3 x float], ptr %1031, i64 %1032
  %1034 = load float, ptr %1022, align 4, !tbaa !20
  %1035 = load float, ptr %1033, align 4, !tbaa !20
  %1036 = fsub fast float %1034, %1035
  store float %1036, ptr %9, align 8, !tbaa !20
  %1037 = getelementptr inbounds float, ptr %1022, i64 1
  %1038 = load float, ptr %1037, align 4, !tbaa !20
  %1039 = getelementptr inbounds float, ptr %1033, i64 1
  %1040 = load float, ptr %1039, align 4, !tbaa !20
  %1041 = fsub fast float %1038, %1040
  store float %1041, ptr %894, align 4, !tbaa !20
  %1042 = getelementptr inbounds float, ptr %1022, i64 2
  %1043 = load float, ptr %1042, align 4, !tbaa !20
  %1044 = getelementptr inbounds float, ptr %1033, i64 2
  %1045 = load float, ptr %1044, align 4, !tbaa !20
  %1046 = fsub fast float %1043, %1045
  store float %1046, ptr %895, align 8, !tbaa !20
  %1047 = getelementptr inbounds %struct.SculptSession, ptr %1024, i64 0, i32 20
  %1048 = load ptr, ptr %1047, align 8, !tbaa !255
  %1049 = getelementptr inbounds [3 x [3 x float]], ptr %1048, i64 %1032
  call void @mul_m3_v3(ptr noundef %1049, ptr noundef nonnull %9) #10
  %1050 = getelementptr inbounds %struct.SculptSession, ptr %1024, i64 0, i32 18
  %1051 = load ptr, ptr %1050, align 8, !tbaa !256
  %1052 = getelementptr inbounds [3 x float], ptr %1051, i64 %1032
  %1053 = load <2 x float>, ptr %9, align 8, !tbaa !20
  %1054 = load <2 x float>, ptr %1052, align 4, !tbaa !20
  %1055 = fadd fast <2 x float> %1054, %1053
  %1056 = load float, ptr %895, align 8, !tbaa !20
  %1057 = getelementptr inbounds float, ptr %1052, i64 2
  %1058 = load float, ptr %1057, align 4, !tbaa !20
  %1059 = fadd fast float %1058, %1056
  %1060 = load ptr, ptr %1030, align 8, !tbaa !182
  %1061 = getelementptr inbounds [3 x float], ptr %1060, i64 %1032
  %1062 = load ptr, ptr %880, align 8, !tbaa !227
  %1063 = load float, ptr %1062, align 4, !tbaa !20
  store float %1063, ptr %1061, align 4, !tbaa !20
  %1064 = getelementptr inbounds float, ptr %1062, i64 1
  %1065 = load float, ptr %1064, align 4, !tbaa !20
  %1066 = getelementptr inbounds float, ptr %1061, i64 1
  store float %1065, ptr %1066, align 4, !tbaa !20
  %1067 = getelementptr inbounds float, ptr %1062, i64 2
  %1068 = load float, ptr %1067, align 4, !tbaa !20
  %1069 = getelementptr inbounds float, ptr %1061, i64 2
  store float %1068, ptr %1069, align 4, !tbaa !20
  store <2 x float> %1055, ptr %1052, align 4, !tbaa !20
  store float %1059, ptr %1057, align 4, !tbaa !20
  %1070 = getelementptr inbounds %struct.SculptSession, ptr %1024, i64 0, i32 7
  %1071 = load ptr, ptr %1070, align 8, !tbaa !49
  %1072 = icmp eq ptr %1071, null
  br i1 %1072, label %1073, label %1078

1073:                                             ; preds = %1021
  %1074 = getelementptr inbounds %struct.Mesh, ptr %1025, i64 0, i32 15
  %1075 = load ptr, ptr %1074, align 8, !tbaa !41
  %1076 = getelementptr inbounds %struct.MVert, ptr %1075, i64 %1032
  store <2 x float> %1055, ptr %1076, align 4, !tbaa !20
  %1077 = getelementptr inbounds float, ptr %1076, i64 2
  store float %1059, ptr %1077, align 4, !tbaa !20
  br label %1078

1078:                                             ; preds = %1073, %1021
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %9) #10
  %1079 = load i32, ptr %866, align 4, !tbaa !210
  br i1 %896, label %1096, label %1080

1080:                                             ; preds = %1078
  %1081 = load ptr, ptr %884, align 8, !tbaa !237
  %1082 = sext i32 %1079 to i64
  %1083 = getelementptr inbounds i32, ptr %1081, i64 %1082
  %1084 = load i32, ptr %1083, align 4, !tbaa !24
  %1085 = sext i32 %1084 to i64
  %1086 = getelementptr inbounds [3 x float], ptr %860, i64 %1085
  %1087 = load ptr, ptr %897, align 8, !tbaa !256
  %1088 = getelementptr inbounds [3 x float], ptr %1087, i64 %1085
  %1089 = load float, ptr %1088, align 4, !tbaa !20
  store float %1089, ptr %1086, align 4, !tbaa !20
  %1090 = getelementptr inbounds float, ptr %1088, i64 1
  %1091 = load float, ptr %1090, align 4, !tbaa !20
  %1092 = getelementptr inbounds float, ptr %1086, i64 1
  store float %1091, ptr %1092, align 4, !tbaa !20
  %1093 = getelementptr inbounds float, ptr %1088, i64 2
  %1094 = load float, ptr %1093, align 4, !tbaa !20
  %1095 = getelementptr inbounds float, ptr %1086, i64 2
  store float %1094, ptr %1095, align 4, !tbaa !20
  br label %1096

1096:                                             ; preds = %1080, %1078, %996, %979, %963
  %1097 = phi i32 [ %1079, %1078 ], [ %1079, %1080 ], [ %1009, %996 ], [ %937, %979 ], [ %937, %963 ]
  %1098 = load i32, ptr %878, align 4, !tbaa !226
  %1099 = add nsw i32 %1098, 1
  store i32 %1099, ptr %878, align 4, !tbaa !226
  %1100 = add nsw i32 %1097, 1
  store i32 %1100, ptr %866, align 4, !tbaa !210
  %1101 = load i32, ptr %870, align 4, !tbaa !218
  %1102 = icmp slt i32 %1099, %1101
  br i1 %1102, label %936, label %1103, !llvm.loop !262

1103:                                             ; preds = %1096
  %1104 = load i32, ptr %877, align 8, !tbaa !220
  %1105 = load i32, ptr %871, align 8, !tbaa !219
  br label %1106

1106:                                             ; preds = %1103, %930
  %1107 = phi i32 [ %1105, %1103 ], [ %931, %930 ]
  %1108 = phi i32 [ %1104, %1103 ], [ %932, %930 ]
  %1109 = phi i32 [ %1100, %1103 ], [ %933, %930 ]
  %1110 = phi i32 [ %1101, %1103 ], [ %934, %930 ]
  %1111 = add nsw i32 %1108, 1
  store i32 %1111, ptr %877, align 8, !tbaa !220
  %1112 = icmp slt i32 %1111, %1107
  br i1 %1112, label %930, label %1113, !llvm.loop !263

1113:                                             ; preds = %1106
  %1114 = load i32, ptr %12, align 8, !tbaa !214
  %1115 = load i32, ptr %867, align 8, !tbaa !215
  br label %1116

1116:                                             ; preds = %1113, %914
  %1117 = phi i32 [ %1115, %1113 ], [ %907, %914 ]
  %1118 = phi i32 [ %1114, %1113 ], [ %909, %914 ]
  %1119 = phi i32 [ %1109, %1113 ], [ %908, %914 ]
  %1120 = add nsw i32 %1118, 1
  store i32 %1120, ptr %12, align 8, !tbaa !214
  %1121 = icmp slt i32 %1120, %1117
  br i1 %1121, label %906, label %1122, !llvm.loop !264

1122:                                             ; preds = %1116, %898
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %12) #10
  %1123 = add nuw nsw i64 %899, 1
  %1124 = load i32, ptr %10, align 4, !tbaa !24
  %1125 = sext i32 %1124 to i64
  %1126 = icmp slt i64 %1123, %1125
  br i1 %1126, label %898, label %1127, !llvm.loop !265

1127:                                             ; preds = %1122, %859
  %1128 = icmp eq ptr %860, null
  br i1 %1128, label %1132, label %1129

1129:                                             ; preds = %1127
  %1130 = load ptr, ptr %844, align 8, !tbaa !49
  call void @sculpt_vertcos_to_key(ptr noundef %30, ptr noundef %1130, ptr noundef nonnull %860)
  %1131 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  call void %1131(ptr noundef nonnull %860) #10
  br label %1132

1132:                                             ; preds = %1129, %1127
  %1133 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  %1134 = load ptr, ptr %11, align 8, !tbaa !31
  call void %1133(ptr noundef %1134) #10
  call void @BKE_mesh_calc_normals(ptr noundef %843) #10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #10
  br label %1179

1135:                                             ; preds = %836
  %1136 = getelementptr inbounds %struct.SculptSession, ptr %837, i64 0, i32 7
  %1137 = load ptr, ptr %1136, align 8, !tbaa !49
  %1138 = icmp eq ptr %1137, null
  br i1 %1138, label %1179, label %1139

1139:                                             ; preds = %1135
  %1140 = load ptr, ptr %31, align 8, !tbaa !5
  %1141 = getelementptr inbounds %struct.SculptSession, ptr %1140, i64 0, i32 18
  %1142 = load ptr, ptr %1141, align 8, !tbaa !256
  %1143 = icmp eq ptr %1142, null
  br i1 %1143, label %1144, label %1149

1144:                                             ; preds = %1139
  %1145 = getelementptr inbounds %struct.SculptSession, ptr %1140, i64 0, i32 15
  %1146 = load ptr, ptr %1145, align 8, !tbaa !21
  %1147 = call ptr @BKE_pbvh_get_vertCos(ptr noundef %1146) #10
  %1148 = icmp eq ptr %1147, null
  br i1 %1148, label %1179, label %1149

1149:                                             ; preds = %1144, %1139
  %1150 = phi ptr [ %1147, %1144 ], [ %1142, %1139 ]
  %1151 = getelementptr inbounds %struct.SculptSession, ptr %1140, i64 0, i32 7
  %1152 = load ptr, ptr %1151, align 8, !tbaa !49
  call void @sculpt_vertcos_to_key(ptr noundef nonnull %30, ptr noundef %1152, ptr noundef nonnull %1150)
  %1153 = load ptr, ptr %1141, align 8, !tbaa !256
  %1154 = icmp eq ptr %1150, %1153
  br i1 %1154, label %1179, label %1155

1155:                                             ; preds = %1149
  %1156 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  call void %1156(ptr noundef nonnull %1150) #10
  br label %1179

1157:                                             ; preds = %832
  %1158 = getelementptr inbounds %struct.SculptSession, ptr %32, i64 0, i32 7
  %1159 = load ptr, ptr %1158, align 8, !tbaa !49
  %1160 = icmp eq ptr %1159, null
  br i1 %1160, label %1179, label %1161

1161:                                             ; preds = %1157
  %1162 = load ptr, ptr %31, align 8, !tbaa !5
  %1163 = getelementptr inbounds %struct.SculptSession, ptr %1162, i64 0, i32 18
  %1164 = load ptr, ptr %1163, align 8, !tbaa !256
  %1165 = icmp eq ptr %1164, null
  br i1 %1165, label %1166, label %1171

1166:                                             ; preds = %1161
  %1167 = getelementptr inbounds %struct.SculptSession, ptr %1162, i64 0, i32 15
  %1168 = load ptr, ptr %1167, align 8, !tbaa !21
  %1169 = call ptr @BKE_pbvh_get_vertCos(ptr noundef %1168) #10
  %1170 = icmp eq ptr %1169, null
  br i1 %1170, label %1179, label %1171

1171:                                             ; preds = %1166, %1161
  %1172 = phi ptr [ %1169, %1166 ], [ %1164, %1161 ]
  %1173 = getelementptr inbounds %struct.SculptSession, ptr %1162, i64 0, i32 7
  %1174 = load ptr, ptr %1173, align 8, !tbaa !49
  call void @sculpt_vertcos_to_key(ptr noundef nonnull %30, ptr noundef %1174, ptr noundef nonnull %1172)
  %1175 = load ptr, ptr %1163, align 8, !tbaa !256
  %1176 = icmp eq ptr %1172, %1175
  br i1 %1176, label %1179, label %1177

1177:                                             ; preds = %1171
  %1178 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  call void %1178(ptr noundef nonnull %1172) #10
  br label %1179

1179:                                             ; preds = %1177, %1171, %1166, %1155, %1149, %1144, %1135, %1132, %1157
  %1180 = getelementptr inbounds %struct.SculptSession, ptr %32, i64 0, i32 28
  %1181 = load ptr, ptr %1180, align 8, !tbaa !22
  %1182 = getelementptr inbounds %struct.StrokeCache, ptr %1181, i64 0, i32 20
  store i8 0, ptr %1182, align 4, !tbaa !188
  %1183 = call ptr @CTX_data_active_object(ptr noundef %0) #10
  %1184 = getelementptr %struct.Object, ptr %1183, i64 0, i32 2
  %1185 = load ptr, ptr %1184, align 8, !tbaa !5
  %1186 = call ptr @CTX_wm_region(ptr noundef %0) #10
  %1187 = load ptr, ptr %1185, align 8, !tbaa !178
  %1188 = icmp eq ptr %1187, null
  br i1 %1188, label %1190, label %1189

1189:                                             ; preds = %1179
  call void @multires_mark_as_modified(ptr noundef nonnull %1183, i32 noundef 1) #10
  br label %1190

1190:                                             ; preds = %1189, %1179
  %1191 = getelementptr inbounds %struct.Object, ptr %1183, i64 0, i32 120
  %1192 = load ptr, ptr %1191, align 8, !tbaa !83
  %1193 = icmp eq ptr %1192, null
  br i1 %1193, label %1195, label %1194

1194:                                             ; preds = %1190
  call void @GPU_drawobject_free(ptr noundef nonnull %1192) #10
  br label %1195

1195:                                             ; preds = %1194, %1190
  %1196 = getelementptr inbounds %struct.SculptSession, ptr %1185, i64 0, i32 7
  %1197 = load ptr, ptr %1196, align 8, !tbaa !49
  %1198 = icmp eq ptr %1197, null
  br i1 %1198, label %1199, label %1203

1199:                                             ; preds = %1195
  %1200 = getelementptr inbounds %struct.SculptSession, ptr %1185, i64 0, i32 17
  %1201 = load i8, ptr %1200, align 1, !tbaa !50
  %1202 = icmp eq i8 %1201, 0
  br i1 %1202, label %1204, label %1203

1203:                                             ; preds = %1199, %1195
  call void @DAG_id_tag_update(ptr noundef nonnull %1183, i16 noundef signext 2) #10
  call void @ED_region_tag_redraw(ptr noundef %1186) #10
  br label %1256

1204:                                             ; preds = %1199
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #10
  %1205 = getelementptr inbounds %struct.SculptSession, ptr %1185, i64 0, i32 15
  %1206 = load ptr, ptr %1205, align 8, !tbaa !21
  call void @BKE_pbvh_update(ptr noundef %1206, i32 noundef 4, ptr noundef null) #10
  %1207 = getelementptr inbounds %struct.Object, ptr %1183, i64 0, i32 15
  %1208 = load ptr, ptr %1207, align 8, !tbaa !82
  %1209 = icmp eq ptr %1208, null
  br i1 %1209, label %1215, label %1210

1210:                                             ; preds = %1204
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #10
  %1211 = load ptr, ptr %1184, align 8, !tbaa !5
  %1212 = getelementptr inbounds %struct.SculptSession, ptr %1211, i64 0, i32 15
  %1213 = load ptr, ptr %1212, align 8, !tbaa !21
  call void @BKE_pbvh_bounding_box(ptr noundef %1213, ptr noundef nonnull %6, ptr noundef nonnull %7) #10
  %1214 = load ptr, ptr %1207, align 8, !tbaa !82
  call void @BKE_boundbox_init_from_minmax(ptr noundef %1214, ptr noundef nonnull %6, ptr noundef nonnull %7) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #10
  br label %1215

1215:                                             ; preds = %1210, %1204
  %1216 = call ptr @CTX_wm_region_view3d(ptr noundef %0) #10
  %1217 = load ptr, ptr %1184, align 8, !tbaa !5
  %1218 = getelementptr inbounds %struct.SculptSession, ptr %1217, i64 0, i32 15
  %1219 = load ptr, ptr %1218, align 8, !tbaa !21
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #10
  %1220 = icmp eq ptr %1219, null
  br i1 %1220, label %1221, label %1222

1221:                                             ; preds = %1215
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #10
  br label %1255

1222:                                             ; preds = %1215
  call void @BKE_pbvh_redraw_BB(ptr noundef nonnull %1219, ptr noundef nonnull %4, ptr noundef nonnull %5) #10
  %1223 = call zeroext i8 @paint_convert_bb_to_rect(ptr noundef nonnull %8, ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef %1186, ptr noundef %1216, ptr noundef nonnull %1183) #10
  %1224 = icmp eq i8 %1223, 0
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #10
  br i1 %1224, label %1255, label %1225

1225:                                             ; preds = %1222
  %1226 = getelementptr inbounds %struct.SculptSession, ptr %1185, i64 0, i32 28
  %1227 = load ptr, ptr %1226, align 8, !tbaa !22
  %1228 = icmp eq ptr %1227, null
  br i1 %1228, label %1231, label %1229

1229:                                             ; preds = %1225
  %1230 = getelementptr inbounds %struct.StrokeCache, ptr %1227, i64 0, i32 54
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %1230, ptr noundef nonnull align 16 dereferenceable(16) %8, i64 16, i1 false), !tbaa.struct !23
  br label %1231

1231:                                             ; preds = %1229, %1225
  %1232 = load ptr, ptr %1184, align 8, !tbaa !5
  %1233 = getelementptr inbounds %struct.SculptSession, ptr %1232, i64 0, i32 28
  %1234 = load ptr, ptr %1233, align 8, !tbaa !22
  %1235 = icmp eq ptr %1234, null
  br i1 %1235, label %1243, label %1236

1236:                                             ; preds = %1231
  %1237 = getelementptr inbounds %struct.StrokeCache, ptr %1234, i64 0, i32 53
  %1238 = call zeroext i8 @BLI_rcti_is_empty(ptr noundef nonnull %1237) #10
  %1239 = icmp eq i8 %1238, 0
  br i1 %1239, label %1240, label %1243

1240:                                             ; preds = %1236
  %1241 = load ptr, ptr %1233, align 8, !tbaa !22
  %1242 = getelementptr inbounds %struct.StrokeCache, ptr %1241, i64 0, i32 53
  call void @BLI_rcti_union(ptr noundef nonnull %8, ptr noundef nonnull %1242) #10
  br label %1243

1243:                                             ; preds = %1240, %1236, %1231
  %1244 = getelementptr inbounds %struct.ARegion, ptr %1186, i64 0, i32 3
  %1245 = load i32, ptr %1244, align 8, !tbaa !266
  %1246 = getelementptr inbounds %struct.ARegion, ptr %1186, i64 0, i32 3, i32 2
  %1247 = load i32, ptr %1246, align 8, !tbaa !267
  %1248 = insertelement <4 x i32> poison, i32 %1245, i64 0
  %1249 = insertelement <4 x i32> %1248, i32 %1247, i64 1
  %1250 = shufflevector <4 x i32> %1249, <4 x i32> poison, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %1251 = add nsw <4 x i32> %1250, <i32 -2, i32 2, i32 -2, i32 2>
  %1252 = load <4 x i32>, ptr %8, align 16, !tbaa !24
  %1253 = add nsw <4 x i32> %1251, %1252
  store <4 x i32> %1253, ptr %8, align 16, !tbaa !24
  %1254 = getelementptr inbounds %struct.SculptSession, ptr %1185, i64 0, i32 21
  store i8 1, ptr %1254, align 8, !tbaa !268
  call void @ED_region_tag_redraw_partial(ptr noundef %1186, ptr noundef nonnull %8) #10
  br label %1255

1255:                                             ; preds = %1243, %1222, %1221
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #10
  br label %1256

1256:                                             ; preds = %1203, %1255
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @sculpt_stroke_done(ptr noundef %0, ptr nocapture readnone %1) #2 {
  %3 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %4 = tail call ptr @CTX_data_scene(ptr noundef %0) #10
  %5 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !5
  %7 = tail call ptr @CTX_data_tool_settings(ptr noundef %0) #10
  %8 = getelementptr inbounds %struct.ToolSettings, ptr %7, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !51
  %10 = load ptr, ptr %6, align 8, !tbaa !178
  %11 = icmp eq ptr %10, null
  br i1 %11, label %67, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.SculptSession, ptr %6, i64 0, i32 28
  %14 = load ptr, ptr %13, align 8, !tbaa !22
  %15 = getelementptr inbounds %struct.StrokeCache, ptr %14, i64 0, i32 5
  %16 = load i32, ptr %15, align 8, !tbaa !189
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %50

18:                                               ; preds = %12, %18
  %19 = phi i64 [ %44, %18 ], [ 0, %12 ]
  %20 = phi ptr [ %45, %18 ], [ %14, %12 ]
  %21 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  %22 = getelementptr inbounds %struct.StrokeCache, ptr %20, i64 0, i32 7
  %23 = load ptr, ptr %22, align 8, !tbaa !190
  %24 = getelementptr inbounds ptr, ptr %23, i64 %19
  %25 = load ptr, ptr %24, align 8, !tbaa !31
  tail call void %21(ptr noundef %25) #10
  %26 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  %27 = load ptr, ptr %13, align 8, !tbaa !22
  %28 = getelementptr inbounds %struct.StrokeCache, ptr %27, i64 0, i32 8
  %29 = load ptr, ptr %28, align 8, !tbaa !191
  %30 = getelementptr inbounds ptr, ptr %29, i64 %19
  %31 = load ptr, ptr %30, align 8, !tbaa !31
  tail call void %26(ptr noundef %31) #10
  %32 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  %33 = load ptr, ptr %13, align 8, !tbaa !22
  %34 = getelementptr inbounds %struct.StrokeCache, ptr %33, i64 0, i32 9
  %35 = load ptr, ptr %34, align 8, !tbaa !192
  %36 = getelementptr inbounds ptr, ptr %35, i64 %19
  %37 = load ptr, ptr %36, align 8, !tbaa !31
  tail call void %32(ptr noundef %37) #10
  %38 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  %39 = load ptr, ptr %13, align 8, !tbaa !22
  %40 = getelementptr inbounds %struct.StrokeCache, ptr %39, i64 0, i32 10
  %41 = load ptr, ptr %40, align 8, !tbaa !193
  %42 = getelementptr inbounds ptr, ptr %41, i64 %19
  %43 = load ptr, ptr %42, align 8, !tbaa !31
  tail call void %38(ptr noundef %43) #10
  %44 = add nuw nsw i64 %19, 1
  %45 = load ptr, ptr %13, align 8, !tbaa !22
  %46 = getelementptr inbounds %struct.StrokeCache, ptr %45, i64 0, i32 5
  %47 = load i32, ptr %46, align 8, !tbaa !189
  %48 = sext i32 %47 to i64
  %49 = icmp slt i64 %44, %48
  br i1 %49, label %18, label %50, !llvm.loop !269

50:                                               ; preds = %18, %12
  %51 = phi ptr [ %14, %12 ], [ %45, %18 ]
  %52 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  %53 = getelementptr inbounds %struct.StrokeCache, ptr %51, i64 0, i32 7
  %54 = load ptr, ptr %53, align 8, !tbaa !190
  tail call void %52(ptr noundef %54) #10
  %55 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  %56 = load ptr, ptr %13, align 8, !tbaa !22
  %57 = getelementptr inbounds %struct.StrokeCache, ptr %56, i64 0, i32 8
  %58 = load ptr, ptr %57, align 8, !tbaa !191
  tail call void %55(ptr noundef %58) #10
  %59 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  %60 = load ptr, ptr %13, align 8, !tbaa !22
  %61 = getelementptr inbounds %struct.StrokeCache, ptr %60, i64 0, i32 9
  %62 = load ptr, ptr %61, align 8, !tbaa !192
  tail call void %59(ptr noundef %62) #10
  %63 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  %64 = load ptr, ptr %13, align 8, !tbaa !22
  %65 = getelementptr inbounds %struct.StrokeCache, ptr %64, i64 0, i32 10
  %66 = load ptr, ptr %65, align 8, !tbaa !193
  tail call void %63(ptr noundef %66) #10
  br label %67

67:                                               ; preds = %2, %50
  %68 = getelementptr inbounds %struct.SculptSession, ptr %6, i64 0, i32 28
  %69 = load ptr, ptr %68, align 8, !tbaa !22
  %70 = icmp eq ptr %69, null
  br i1 %70, label %221, label %71

71:                                               ; preds = %67
  %72 = tail call ptr @CTX_data_tool_settings(ptr noundef %0) #10
  %73 = tail call ptr @BKE_paint_brush(ptr noundef %9) #10
  %74 = getelementptr inbounds %struct.ToolSettings, ptr %72, i64 0, i32 73, i32 11
  store i8 0, ptr %74, align 8, !tbaa !270
  %75 = load ptr, ptr %5, align 8, !tbaa !5
  %76 = getelementptr inbounds %struct.SculptSession, ptr %75, i64 0, i32 7
  %77 = load ptr, ptr %76, align 8, !tbaa !49
  %78 = icmp eq ptr %77, null
  br i1 %78, label %79, label %83

79:                                               ; preds = %71
  %80 = getelementptr inbounds %struct.SculptSession, ptr %75, i64 0, i32 17
  %81 = load i8, ptr %80, align 1, !tbaa !50
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %113, label %83

83:                                               ; preds = %79, %71
  %84 = tail call ptr @CTX_data_tool_settings(ptr noundef %0) #10
  %85 = getelementptr inbounds %struct.ToolSettings, ptr %84, i64 0, i32 2
  %86 = load ptr, ptr %85, align 8, !tbaa !51
  %87 = tail call ptr @BKE_paint_brush(ptr noundef %86) #10
  %88 = tail call ptr @CTX_data_scene(ptr noundef %0) #10
  %89 = getelementptr inbounds %struct.SculptSession, ptr %75, i64 0, i32 28
  %90 = load ptr, ptr %89, align 8, !tbaa !22
  %91 = icmp eq ptr %90, null
  br i1 %91, label %96, label %92

92:                                               ; preds = %83
  %93 = getelementptr inbounds %struct.StrokeCache, ptr %90, i64 0, i32 48
  %94 = load i8, ptr %93, align 8, !tbaa !58
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %111

96:                                               ; preds = %92, %83
  %97 = getelementptr inbounds %struct.Brush, ptr %87, i64 0, i32 34
  %98 = load i8, ptr %97, align 8, !tbaa !59
  %99 = icmp eq i8 %98, 2
  br i1 %99, label %111, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.Brush, ptr %87, i64 0, i32 38
  %102 = load float, ptr %101, align 4, !tbaa !63
  %103 = fcmp fast ogt float %102, 0.000000e+00
  br i1 %103, label %111, label %104

104:                                              ; preds = %100
  %105 = icmp eq i8 %98, 19
  br i1 %105, label %106, label %111

106:                                              ; preds = %104
  %107 = getelementptr inbounds %struct.Brush, ptr %87, i64 0, i32 37
  %108 = load i8, ptr %107, align 1, !tbaa !64
  %109 = icmp eq i8 %108, 1
  %110 = zext i1 %109 to i8
  br label %111

111:                                              ; preds = %106, %104, %100, %96, %92
  %112 = phi i8 [ 1, %100 ], [ 1, %96 ], [ 1, %92 ], [ 0, %104 ], [ %110, %106 ]
  tail call void @BKE_sculpt_update_mesh_elements(ptr noundef %88, ptr noundef %86, ptr noundef nonnull %3, i8 noundef zeroext %112, i8 noundef zeroext 0) #10
  br label %113

113:                                              ; preds = %79, %111
  %114 = load ptr, ptr %68, align 8, !tbaa !22
  %115 = getelementptr inbounds %struct.StrokeCache, ptr %114, i64 0, i32 48
  %116 = load i8, ptr %115, align 8, !tbaa !58
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %136, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %struct.Brush, ptr %73, i64 0, i32 34
  %120 = load i8, ptr %119, align 8, !tbaa !59
  %121 = icmp eq i8 %120, 19
  br i1 %121, label %122, label %126

122:                                              ; preds = %118
  %123 = getelementptr inbounds %struct.StrokeCache, ptr %114, i64 0, i32 46
  %124 = load i8, ptr %123, align 2, !tbaa !169
  %125 = getelementptr inbounds %struct.Brush, ptr %73, i64 0, i32 37
  store i8 %124, ptr %125, align 1, !tbaa !64
  br label %136

126:                                              ; preds = %118
  %127 = getelementptr inbounds %struct.StrokeCache, ptr %114, i64 0, i32 23
  %128 = load ptr, ptr %127, align 8, !tbaa !173
  %129 = getelementptr inbounds %struct.StrokeCache, ptr %114, i64 0, i32 47
  %130 = load i32, ptr %129, align 4, !tbaa !170
  tail call void @BKE_brush_size_set(ptr noundef %4, ptr noundef %128, i32 noundef %130) #10
  %131 = load ptr, ptr %68, align 8, !tbaa !22
  %132 = getelementptr inbounds %struct.StrokeCache, ptr %131, i64 0, i32 45
  %133 = tail call ptr @BKE_libblock_find_name(i16 noundef signext 21058, ptr noundef nonnull %132) #10
  %134 = icmp eq ptr %133, null
  br i1 %134, label %136, label %135

135:                                              ; preds = %126
  tail call void @BKE_paint_brush_set(ptr noundef %9, ptr noundef nonnull %133) #10
  br label %136

136:                                              ; preds = %113, %122, %135, %126
  %137 = load ptr, ptr %5, align 8, !tbaa !5
  %138 = getelementptr inbounds %struct.SculptSession, ptr %137, i64 0, i32 29
  store i8 1, ptr %138, align 8, !tbaa !17
  %139 = getelementptr inbounds %struct.SculptSession, ptr %137, i64 0, i32 30
  %140 = getelementptr inbounds %struct.SculptSession, ptr %137, i64 0, i32 32
  %141 = load i32, ptr %140, align 4, !tbaa !19
  %142 = icmp sgt i32 %141, 0
  br i1 %142, label %143, label %154

143:                                              ; preds = %136
  %144 = sitofp i32 %141 to float
  %145 = fdiv fast float 1.000000e+00, %144
  %146 = getelementptr inbounds %struct.SculptSession, ptr %137, i64 0, i32 31
  %147 = load <2 x float>, ptr %146, align 4, !tbaa !20
  %148 = insertelement <2 x float> poison, float %145, i64 0
  %149 = shufflevector <2 x float> %148, <2 x float> poison, <2 x i32> zeroinitializer
  %150 = fmul fast <2 x float> %147, %149
  store <2 x float> %150, ptr %139, align 4, !tbaa !20
  %151 = getelementptr inbounds %struct.SculptSession, ptr %137, i64 0, i32 31, i64 2
  %152 = load float, ptr %151, align 4, !tbaa !20
  %153 = fmul fast float %152, %145
  br label %162

154:                                              ; preds = %136
  %155 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 47, i64 3
  %156 = load float, ptr %155, align 4, !tbaa !20
  store float %156, ptr %139, align 4, !tbaa !20
  %157 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 47, i64 3, i64 1
  %158 = load float, ptr %157, align 4, !tbaa !20
  %159 = getelementptr inbounds %struct.SculptSession, ptr %137, i64 0, i32 30, i64 1
  store float %158, ptr %159, align 4, !tbaa !20
  %160 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 47, i64 3, i64 2
  %161 = load float, ptr %160, align 4, !tbaa !20
  br label %162

162:                                              ; preds = %143, %154
  %163 = phi float [ %161, %154 ], [ %153, %143 ]
  %164 = getelementptr inbounds %struct.SculptSession, ptr %137, i64 0, i32 30, i64 2
  store float %163, ptr %164, align 4, !tbaa !20
  %165 = load ptr, ptr %68, align 8, !tbaa !22
  %166 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 24
  %167 = load ptr, ptr %166, align 8, !tbaa !145
  %168 = icmp eq ptr %167, null
  br i1 %168, label %171, label %169

169:                                              ; preds = %162
  %170 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  tail call void %170(ptr noundef nonnull %167) #10
  br label %171

171:                                              ; preds = %169, %162
  %172 = getelementptr inbounds %struct.StrokeCache, ptr %165, i64 0, i32 44
  %173 = load ptr, ptr %172, align 8, !tbaa !146
  %174 = icmp eq ptr %173, null
  br i1 %174, label %177, label %175

175:                                              ; preds = %171
  %176 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  tail call void %176(ptr noundef nonnull %173) #10
  br label %177

177:                                              ; preds = %171, %175
  %178 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  tail call void %178(ptr noundef nonnull %165) #10
  store ptr null, ptr %68, align 8, !tbaa !22
  tail call void @sculpt_undo_push_end() #10
  %179 = getelementptr inbounds %struct.SculptSession, ptr %6, i64 0, i32 15
  %180 = load ptr, ptr %179, align 8, !tbaa !21
  tail call void @BKE_pbvh_update(ptr noundef %180, i32 noundef 8, ptr noundef null) #10
  %181 = load ptr, ptr %179, align 8, !tbaa !21
  %182 = tail call i32 @BKE_pbvh_type(ptr noundef %181) #10
  %183 = icmp eq i32 %182, 2
  br i1 %183, label %184, label %186

184:                                              ; preds = %177
  %185 = load ptr, ptr %179, align 8, !tbaa !21
  tail call void @BKE_pbvh_bmesh_after_stroke(ptr noundef %185) #10
  br label %186

186:                                              ; preds = %184, %177
  %187 = getelementptr inbounds %struct.SculptSession, ptr %6, i64 0, i32 7
  %188 = load ptr, ptr %187, align 8, !tbaa !49
  %189 = icmp eq ptr %188, null
  br i1 %189, label %212, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %struct.SculptSession, ptr %6, i64 0, i32 17
  %192 = load i8, ptr %191, align 1, !tbaa !50
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %194, label %212

194:                                              ; preds = %190
  %195 = load ptr, ptr %5, align 8, !tbaa !5
  %196 = getelementptr inbounds %struct.SculptSession, ptr %195, i64 0, i32 18
  %197 = load ptr, ptr %196, align 8, !tbaa !256
  %198 = icmp eq ptr %197, null
  br i1 %198, label %199, label %204

199:                                              ; preds = %194
  %200 = getelementptr inbounds %struct.SculptSession, ptr %195, i64 0, i32 15
  %201 = load ptr, ptr %200, align 8, !tbaa !21
  %202 = tail call ptr @BKE_pbvh_get_vertCos(ptr noundef %201) #10
  %203 = icmp eq ptr %202, null
  br i1 %203, label %212, label %204

204:                                              ; preds = %199, %194
  %205 = phi ptr [ %202, %199 ], [ %197, %194 ]
  %206 = getelementptr inbounds %struct.SculptSession, ptr %195, i64 0, i32 7
  %207 = load ptr, ptr %206, align 8, !tbaa !49
  tail call void @sculpt_vertcos_to_key(ptr noundef nonnull %3, ptr noundef %207, ptr noundef nonnull %205)
  %208 = load ptr, ptr %196, align 8, !tbaa !256
  %209 = icmp eq ptr %205, %208
  br i1 %209, label %212, label %210

210:                                              ; preds = %204
  %211 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  tail call void %211(ptr noundef nonnull %205) #10
  br label %212

212:                                              ; preds = %210, %204, %199, %190, %186
  %213 = getelementptr inbounds %struct.SculptSession, ptr %6, i64 0, i32 21
  store i8 0, ptr %213, align 8, !tbaa !268
  %214 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 19
  %215 = load ptr, ptr %214, align 8, !tbaa !25
  %216 = getelementptr inbounds %struct.ID, ptr %215, i64 0, i32 6
  %217 = load i32, ptr %216, align 4, !tbaa !271
  %218 = icmp sgt i32 %217, 1
  br i1 %218, label %219, label %220

219:                                              ; preds = %212
  tail call void @DAG_id_tag_update(ptr noundef nonnull %3, i16 noundef signext 2) #10
  br label %220

220:                                              ; preds = %219, %212
  tail call void @WM_event_add_notifier(ptr noundef %0, i32 noundef 85393408, ptr noundef nonnull %3) #10
  br label %221

221:                                              ; preds = %220, %67
  %222 = tail call ptr @BKE_paint_brush(ptr noundef %9) #10
  %223 = getelementptr inbounds %struct.Brush, ptr %222, i64 0, i32 3, i32 5
  %224 = load ptr, ptr %223, align 8, !tbaa !147
  %225 = icmp eq ptr %224, null
  br i1 %225, label %233, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %struct.Tex, ptr %224, i64 0, i32 52
  %228 = load ptr, ptr %227, align 8, !tbaa !148
  %229 = icmp eq ptr %228, null
  br i1 %229, label %233, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %struct.bNodeTree, ptr %228, i64 0, i32 27
  %232 = load ptr, ptr %231, align 8, !tbaa !151
  tail call void @ntreeTexEndExecTree(ptr noundef %232) #10
  br label %233

233:                                              ; preds = %221, %226, %230
  ret void
}

declare i32 @RNA_boolean_get(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @paint_stroke_data_free(ptr noundef) local_unnamed_addr #3

declare ptr @WM_event_add_modal_handler(ptr noundef, ptr noundef) local_unnamed_addr #3

declare i32 @RNA_enum_get(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @view3d_operator_needs_opengl(ptr noundef) local_unnamed_addr #3

declare ptr @ntreeTexBeginExecTree(ptr noundef) local_unnamed_addr #3

declare i32 @BKE_brush_size_get(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BKE_image_pool_free(ptr noundef) local_unnamed_addr #3

declare ptr @BKE_brush_gen_texture_cache(ptr noundef, i32 noundef, i8 noundef zeroext) local_unnamed_addr #3

declare ptr @BKE_image_pool_new() local_unnamed_addr #3

declare void @ED_view3d_init_mats_rv3d(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @sculpt_undo_push_begin(ptr noundef) local_unnamed_addr #3

declare ptr @paint_stroke_view_context(ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #6

declare ptr @BLI_strncpy(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #3

declare ptr @BKE_libblock_find_name(i16 noundef signext, ptr noundef) local_unnamed_addr #3

declare void @BKE_paint_brush_set(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BKE_brush_size_set(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @curvemapping_initialize(ptr noundef) local_unnamed_addr #3

declare void @ED_view3d_ob_project_mat_get(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @copy_m3_m4(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @mul_m3_v3(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BKE_pbvh_free_layer_disp(ptr noundef) local_unnamed_addr #3

declare ptr @BLI_dial_initialize(ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

declare void @BKE_pbvh_node_get_grids(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BKE_pbvh_bmesh_detail_size_set(ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @do_symmetrical_brush_actions(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3) unnamed_addr #2 {
  %5 = alloca [3 x float], align 4
  %6 = alloca [4 x [4 x float]], align 16
  %7 = alloca [3 x float], align 4
  %8 = alloca [4 x [4 x float]], align 16
  %9 = alloca [3 x float], align 4
  %10 = alloca [4 x [4 x float]], align 16
  %11 = alloca [3 x float], align 4
  %12 = tail call ptr @BKE_paint_brush(ptr noundef %0) #10
  %13 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !5
  %15 = getelementptr inbounds %struct.SculptSession, ptr %14, i64 0, i32 28
  %16 = load ptr, ptr %15, align 8, !tbaa !22
  %17 = getelementptr inbounds %struct.Paint, ptr %0, i64 0, i32 6
  %18 = load i32, ptr %17, align 4, !tbaa !272
  %19 = and i32 %18, 7
  %20 = and i32 %18, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %208, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %struct.StrokeCache, ptr %16, i64 0, i32 30
  %24 = load i32, ptr %23, align 4, !tbaa !273
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %205, label %26

26:                                               ; preds = %22
  %27 = icmp ne i32 %24, 5
  %28 = icmp eq i32 %24, 6
  %29 = getelementptr inbounds %struct.StrokeCache, ptr %16, i64 0, i32 13
  %30 = getelementptr inbounds %struct.StrokeCache, ptr %16, i64 0, i32 13, i64 1
  %31 = getelementptr inbounds float, ptr %11, i64 1
  %32 = getelementptr inbounds %struct.StrokeCache, ptr %16, i64 0, i32 12
  %33 = getelementptr inbounds %struct.StrokeCache, ptr %16, i64 0, i32 11
  %34 = getelementptr inbounds %struct.Sculpt, ptr %0, i64 0, i32 2, i64 0
  %35 = getelementptr inbounds float, ptr %9, i64 1
  %36 = getelementptr inbounds %struct.Sculpt, ptr %0, i64 0, i32 2, i64 1
  %37 = getelementptr inbounds float, ptr %7, i64 1
  %38 = getelementptr inbounds %struct.Sculpt, ptr %0, i64 0, i32 2, i64 2
  %39 = getelementptr inbounds float, ptr %5, i64 1
  br label %40

40:                                               ; preds = %201, %26
  %41 = phi i32 [ 0, %26 ], [ %203, %201 ]
  %42 = phi float [ 0.000000e+00, %26 ], [ %202, %201 ]
  %43 = icmp eq i32 %41, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %40
  %45 = and i32 %41, %24
  %46 = icmp ne i32 %45, 0
  %47 = icmp ne i32 %41, 3
  %48 = or i1 %27, %47
  %49 = and i1 %46, %48
  br i1 %49, label %50, label %201

50:                                               ; preds = %44
  br i1 %28, label %51, label %52

51:                                               ; preds = %50
  switch i32 %41, label %52 [
    i32 5, label %201
    i32 3, label %201
  ]

52:                                               ; preds = %51, %50, %40
  %53 = trunc i32 %41 to i8
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %11) #10
  call void @flip_v3_v3(ptr noundef nonnull %11, ptr noundef nonnull %29, i8 noundef zeroext %53) #10
  %54 = load float, ptr %29, align 4, !tbaa !20
  %55 = load float, ptr %11, align 4, !tbaa !20
  %56 = fsub fast float %54, %55
  %57 = fmul fast float %56, %56
  %58 = load <2 x float>, ptr %30, align 4, !tbaa !20
  %59 = load <2 x float>, ptr %31, align 4, !tbaa !20
  %60 = fsub fast <2 x float> %58, %59
  %61 = fmul fast <2 x float> %60, %60
  %62 = extractelement <2 x float> %61, i64 0
  %63 = fadd fast float %62, %57
  %64 = extractelement <2 x float> %61, i64 1
  %65 = fadd fast float %63, %64
  %66 = load float, ptr %32, align 4, !tbaa !199
  %67 = fmul fast float %66, 4.000000e+00
  %68 = fcmp fast ugt float %65, %67
  br i1 %68, label %75, label %69

69:                                               ; preds = %52
  %70 = load float, ptr %33, align 8, !tbaa !198
  %71 = fmul fast float %70, 2.000000e+00
  %72 = call fast float @llvm.sqrt.f32(float %65)
  %73 = fsub fast float %71, %72
  %74 = fdiv fast float %73, %71
  br label %75

75:                                               ; preds = %69, %52
  %76 = phi float [ %74, %69 ], [ 0.000000e+00, %52 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %11) #10
  %77 = fadd fast float %76, %42
  %78 = load i32, ptr %34, align 4, !tbaa !24
  %79 = icmp sgt i32 %78, 1
  br i1 %79, label %80, label %116

80:                                               ; preds = %75, %110
  %81 = phi i32 [ %114, %110 ], [ %78, %75 ]
  %82 = phi i32 [ %113, %110 ], [ 1, %75 ]
  %83 = phi float [ %112, %110 ], [ 0.000000e+00, %75 ]
  %84 = sitofp i32 %82 to double
  %85 = fmul fast double %84, 0x401921FB54442D18
  %86 = sitofp i32 %81 to double
  %87 = fdiv fast double %85, %86
  %88 = fptrunc double %87 to float
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %9) #10
  call void @flip_v3_v3(ptr noundef nonnull %9, ptr noundef nonnull %29, i8 noundef zeroext %53) #10
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %10) #10
  call void @unit_m4(ptr noundef nonnull %10) #10
  call void @rotate_m4(ptr noundef nonnull %10, i8 noundef zeroext 88, float noundef nofpclass(nan inf) %88) #10
  call void @mul_m4_v3(ptr noundef nonnull %10, ptr noundef nonnull %9) #10
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %10) #10
  %89 = load float, ptr %29, align 4, !tbaa !20
  %90 = load float, ptr %9, align 4, !tbaa !20
  %91 = fsub fast float %89, %90
  %92 = fmul fast float %91, %91
  %93 = load <2 x float>, ptr %30, align 4, !tbaa !20
  %94 = load <2 x float>, ptr %35, align 4, !tbaa !20
  %95 = fsub fast <2 x float> %93, %94
  %96 = fmul fast <2 x float> %95, %95
  %97 = extractelement <2 x float> %96, i64 0
  %98 = fadd fast float %97, %92
  %99 = extractelement <2 x float> %96, i64 1
  %100 = fadd fast float %98, %99
  %101 = load float, ptr %32, align 4, !tbaa !199
  %102 = fmul fast float %101, 4.000000e+00
  %103 = fcmp fast ugt float %100, %102
  br i1 %103, label %110, label %104

104:                                              ; preds = %80
  %105 = load float, ptr %33, align 8, !tbaa !198
  %106 = fmul fast float %105, 2.000000e+00
  %107 = call fast float @llvm.sqrt.f32(float %100)
  %108 = fsub fast float %106, %107
  %109 = fdiv fast float %108, %106
  br label %110

110:                                              ; preds = %104, %80
  %111 = phi float [ %109, %104 ], [ 0.000000e+00, %80 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %9) #10
  %112 = fadd fast float %111, %83
  %113 = add nuw nsw i32 %82, 1
  %114 = load i32, ptr %34, align 4, !tbaa !24
  %115 = icmp slt i32 %113, %114
  br i1 %115, label %80, label %116, !llvm.loop !274

116:                                              ; preds = %110, %75
  %117 = phi float [ 0.000000e+00, %75 ], [ %112, %110 ]
  %118 = fadd fast float %77, %117
  %119 = load i32, ptr %36, align 4, !tbaa !24
  %120 = icmp sgt i32 %119, 1
  br i1 %120, label %121, label %157

121:                                              ; preds = %116, %151
  %122 = phi i32 [ %155, %151 ], [ %119, %116 ]
  %123 = phi i32 [ %154, %151 ], [ 1, %116 ]
  %124 = phi float [ %153, %151 ], [ 0.000000e+00, %116 ]
  %125 = sitofp i32 %123 to double
  %126 = fmul fast double %125, 0x401921FB54442D18
  %127 = sitofp i32 %122 to double
  %128 = fdiv fast double %126, %127
  %129 = fptrunc double %128 to float
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #10
  call void @flip_v3_v3(ptr noundef nonnull %7, ptr noundef nonnull %29, i8 noundef zeroext %53) #10
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %8) #10
  call void @unit_m4(ptr noundef nonnull %8) #10
  call void @rotate_m4(ptr noundef nonnull %8, i8 noundef zeroext 89, float noundef nofpclass(nan inf) %129) #10
  call void @mul_m4_v3(ptr noundef nonnull %8, ptr noundef nonnull %7) #10
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %8) #10
  %130 = load float, ptr %29, align 4, !tbaa !20
  %131 = load float, ptr %7, align 4, !tbaa !20
  %132 = fsub fast float %130, %131
  %133 = fmul fast float %132, %132
  %134 = load <2 x float>, ptr %30, align 4, !tbaa !20
  %135 = load <2 x float>, ptr %37, align 4, !tbaa !20
  %136 = fsub fast <2 x float> %134, %135
  %137 = fmul fast <2 x float> %136, %136
  %138 = extractelement <2 x float> %137, i64 0
  %139 = fadd fast float %138, %133
  %140 = extractelement <2 x float> %137, i64 1
  %141 = fadd fast float %139, %140
  %142 = load float, ptr %32, align 4, !tbaa !199
  %143 = fmul fast float %142, 4.000000e+00
  %144 = fcmp fast ugt float %141, %143
  br i1 %144, label %151, label %145

145:                                              ; preds = %121
  %146 = load float, ptr %33, align 8, !tbaa !198
  %147 = fmul fast float %146, 2.000000e+00
  %148 = call fast float @llvm.sqrt.f32(float %141)
  %149 = fsub fast float %147, %148
  %150 = fdiv fast float %149, %147
  br label %151

151:                                              ; preds = %145, %121
  %152 = phi float [ %150, %145 ], [ 0.000000e+00, %121 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #10
  %153 = fadd fast float %152, %124
  %154 = add nuw nsw i32 %123, 1
  %155 = load i32, ptr %36, align 4, !tbaa !24
  %156 = icmp slt i32 %154, %155
  br i1 %156, label %121, label %157, !llvm.loop !274

157:                                              ; preds = %151, %116
  %158 = phi float [ 0.000000e+00, %116 ], [ %153, %151 ]
  %159 = fadd fast float %118, %158
  %160 = load i32, ptr %38, align 4, !tbaa !24
  %161 = icmp sgt i32 %160, 1
  br i1 %161, label %162, label %198

162:                                              ; preds = %157, %192
  %163 = phi i32 [ %196, %192 ], [ %160, %157 ]
  %164 = phi i32 [ %195, %192 ], [ 1, %157 ]
  %165 = phi float [ %194, %192 ], [ 0.000000e+00, %157 ]
  %166 = sitofp i32 %164 to double
  %167 = fmul fast double %166, 0x401921FB54442D18
  %168 = sitofp i32 %163 to double
  %169 = fdiv fast double %167, %168
  %170 = fptrunc double %169 to float
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #10
  call void @flip_v3_v3(ptr noundef nonnull %5, ptr noundef nonnull %29, i8 noundef zeroext %53) #10
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %6) #10
  call void @unit_m4(ptr noundef nonnull %6) #10
  call void @rotate_m4(ptr noundef nonnull %6, i8 noundef zeroext 90, float noundef nofpclass(nan inf) %170) #10
  call void @mul_m4_v3(ptr noundef nonnull %6, ptr noundef nonnull %5) #10
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %6) #10
  %171 = load float, ptr %29, align 4, !tbaa !20
  %172 = load float, ptr %5, align 4, !tbaa !20
  %173 = fsub fast float %171, %172
  %174 = fmul fast float %173, %173
  %175 = load <2 x float>, ptr %30, align 4, !tbaa !20
  %176 = load <2 x float>, ptr %39, align 4, !tbaa !20
  %177 = fsub fast <2 x float> %175, %176
  %178 = fmul fast <2 x float> %177, %177
  %179 = extractelement <2 x float> %178, i64 0
  %180 = fadd fast float %179, %174
  %181 = extractelement <2 x float> %178, i64 1
  %182 = fadd fast float %180, %181
  %183 = load float, ptr %32, align 4, !tbaa !199
  %184 = fmul fast float %183, 4.000000e+00
  %185 = fcmp fast ugt float %182, %184
  br i1 %185, label %192, label %186

186:                                              ; preds = %162
  %187 = load float, ptr %33, align 8, !tbaa !198
  %188 = fmul fast float %187, 2.000000e+00
  %189 = call fast float @llvm.sqrt.f32(float %182)
  %190 = fsub fast float %188, %189
  %191 = fdiv fast float %190, %188
  br label %192

192:                                              ; preds = %186, %162
  %193 = phi float [ %191, %186 ], [ 0.000000e+00, %162 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #10
  %194 = fadd fast float %193, %165
  %195 = add nuw nsw i32 %164, 1
  %196 = load i32, ptr %38, align 4, !tbaa !24
  %197 = icmp slt i32 %195, %196
  br i1 %197, label %162, label %198, !llvm.loop !274

198:                                              ; preds = %192, %157
  %199 = phi float [ 0.000000e+00, %157 ], [ %194, %192 ]
  %200 = fadd fast float %159, %199
  br label %201

201:                                              ; preds = %198, %51, %51, %44
  %202 = phi float [ %200, %198 ], [ %42, %51 ], [ %42, %44 ], [ %42, %51 ]
  %203 = add nuw i32 %41, 1
  %204 = icmp eq i32 %41, %24
  br i1 %204, label %205, label %40, !llvm.loop !275

205:                                              ; preds = %201, %22
  %206 = phi float [ 0.000000e+00, %22 ], [ %202, %201 ]
  %207 = fdiv fast float 1.000000e+00, %206
  br label %208

208:                                              ; preds = %4, %205
  %209 = phi float [ %207, %205 ], [ 1.000000e+00, %4 ]
  %210 = getelementptr inbounds %struct.StrokeCache, ptr %16, i64 0, i32 22
  %211 = load ptr, ptr %210, align 8, !tbaa !172
  %212 = load ptr, ptr %211, align 8, !tbaa !207
  %213 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %214 = call fast nofpclass(nan inf) float @BKE_brush_alpha_get(ptr noundef %212, ptr noundef %213) #10
  %215 = fmul fast float %214, %214
  %216 = getelementptr inbounds %struct.Brush, ptr %213, i64 0, i32 16
  %217 = load i32, ptr %216, align 8, !tbaa !180
  %218 = and i32 %217, 512
  %219 = icmp eq i32 %218, 0
  %220 = select i1 %219, i32 1, i32 -1
  %221 = sitofp i32 %220 to float
  %222 = call i32 @BKE_brush_use_alpha_pressure(ptr noundef %212, ptr noundef %213) #10
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %227, label %224

224:                                              ; preds = %208
  %225 = getelementptr inbounds %struct.StrokeCache, ptr %16, i64 0, i32 17
  %226 = load float, ptr %225, align 4, !tbaa !196
  br label %227

227:                                              ; preds = %224, %208
  %228 = phi fast float [ %226, %224 ], [ 1.000000e+00, %208 ]
  %229 = getelementptr inbounds %struct.StrokeCache, ptr %16, i64 0, i32 15
  %230 = load i8, ptr %229, align 8, !tbaa !195
  %231 = icmp eq i8 %230, 0
  %232 = getelementptr inbounds %struct.StrokeCache, ptr %16, i64 0, i32 16
  %233 = load i8, ptr %232, align 1, !tbaa !168
  %234 = icmp eq i8 %233, 0
  %235 = getelementptr inbounds %struct.UnifiedPaintSettings, ptr %3, i64 0, i32 13
  %236 = load float, ptr %235, align 8, !tbaa !276
  %237 = fneg fast float %221
  %238 = select fast i1 %234, float %221, float %237
  %239 = fneg fast float %238
  %240 = select fast i1 %231, float %238, float %239
  %241 = getelementptr inbounds %struct.Brush, ptr %213, i64 0, i32 34
  %242 = load i8, ptr %241, align 8, !tbaa !59
  switch i8 %242, label %326 [
    i8 8, label %243
    i8 18, label %243
    i8 1, label %243
    i8 6, label %243
    i8 19, label %248
    i8 16, label %261
    i8 17, label %261
    i8 4, label %267
    i8 9, label %280
    i8 10, label %280
    i8 7, label %280
    i8 2, label %295
    i8 3, label %298
    i8 11, label %310
    i8 12, label %316
    i8 13, label %319
    i8 5, label %321
    i8 14, label %323
  ]

243:                                              ; preds = %227, %227, %227, %227
  %244 = fmul fast float %215, %209
  %245 = fmul fast float %244, %228
  %246 = fmul fast float %245, %236
  %247 = fmul fast float %246, %240
  br label %326

248:                                              ; preds = %227
  %249 = fmul fast float %236, 5.000000e-01
  %250 = fadd fast float %249, 5.000000e-01
  %251 = getelementptr inbounds %struct.Brush, ptr %213, i64 0, i32 37
  %252 = load i8, ptr %251, align 1, !tbaa !64
  switch i8 %252, label %261 [
    i8 0, label %253
    i8 1, label %258
  ]

253:                                              ; preds = %248
  %254 = fmul fast float %215, %209
  %255 = fmul fast float %254, %228
  %256 = fmul fast float %255, %240
  %257 = fmul fast float %256, %250
  br label %326

258:                                              ; preds = %248
  %259 = fmul fast float %215, %209
  %260 = fmul fast float %259, %228
  br label %326

261:                                              ; preds = %248, %227, %227
  %262 = phi float [ %236, %227 ], [ %236, %227 ], [ %250, %248 ]
  %263 = fmul fast float %215, %209
  %264 = fmul fast float %263, %228
  %265 = fmul fast float %264, %240
  %266 = fmul fast float %265, %262
  br label %326

267:                                              ; preds = %227
  %268 = fcmp fast ogt float %240, 0.000000e+00
  %269 = fmul fast float %215, %209
  br i1 %268, label %270, label %275

270:                                              ; preds = %267
  %271 = fmul fast float %269, 2.500000e-01
  %272 = fmul fast float %271, %228
  %273 = fmul fast float %272, %236
  %274 = fmul fast float %273, %240
  br label %326

275:                                              ; preds = %267
  %276 = fmul fast float %269, 1.250000e-01
  %277 = fmul fast float %276, %228
  %278 = fmul fast float %277, %236
  %279 = fmul fast float %278, %240
  br label %326

280:                                              ; preds = %227, %227, %227
  %281 = fcmp fast ogt float %240, 0.000000e+00
  br i1 %281, label %282, label %289

282:                                              ; preds = %280
  %283 = fmul fast float %236, 5.000000e-01
  %284 = fadd fast float %283, 5.000000e-01
  %285 = fmul fast float %215, %209
  %286 = fmul fast float %285, %228
  %287 = fmul fast float %286, %240
  %288 = fmul fast float %287, %284
  br label %326

289:                                              ; preds = %280
  %290 = fmul fast float %215, %209
  %291 = fmul fast float %290, 5.000000e-01
  %292 = fmul fast float %291, %228
  %293 = fmul fast float %292, %236
  %294 = fmul fast float %293, %240
  br label %326

295:                                              ; preds = %227
  %296 = fmul fast float %215, %209
  %297 = fmul fast float %296, %228
  br label %326

298:                                              ; preds = %227
  %299 = fcmp fast ogt float %240, 0.000000e+00
  %300 = fmul fast float %215, %209
  br i1 %299, label %301, label %305

301:                                              ; preds = %298
  %302 = fmul fast float %240, %228
  %303 = fmul fast float %302, %300
  %304 = fmul fast float %303, %236
  br label %326

305:                                              ; preds = %298
  %306 = fmul fast float %300, 2.500000e-01
  %307 = fmul fast float %306, %228
  %308 = fmul fast float %307, %236
  %309 = fmul fast float %308, %240
  br label %326

310:                                              ; preds = %227
  %311 = fmul fast float %236, 5.000000e-01
  %312 = fadd fast float %311, 5.000000e-01
  %313 = fmul fast float %215, %209
  %314 = fmul fast float %313, %228
  %315 = fmul fast float %314, %312
  br label %326

316:                                              ; preds = %227
  %317 = fmul fast float %215, %209
  %318 = fmul fast float %317, %228
  br label %326

319:                                              ; preds = %227
  %320 = fmul fast float %214, %209
  br label %326

321:                                              ; preds = %227
  %322 = fmul fast float %214, %209
  br label %326

323:                                              ; preds = %227
  %324 = fmul fast float %215, %209
  %325 = fmul fast float %324, %228
  br label %326

326:                                              ; preds = %227, %243, %253, %258, %261, %270, %275, %282, %289, %295, %301, %305, %310, %316, %319, %321, %323
  %327 = phi float [ %325, %323 ], [ %322, %321 ], [ %320, %319 ], [ %318, %316 ], [ %315, %310 ], [ %304, %301 ], [ %309, %305 ], [ %297, %295 ], [ %288, %282 ], [ %294, %289 ], [ %274, %270 ], [ %279, %275 ], [ %266, %261 ], [ %260, %258 ], [ %257, %253 ], [ %247, %243 ], [ 0.000000e+00, %227 ]
  %328 = getelementptr inbounds %struct.StrokeCache, ptr %16, i64 0, i32 19
  store float %327, ptr %328, align 8, !tbaa !203
  %329 = getelementptr inbounds %struct.StrokeCache, ptr %16, i64 0, i32 30
  store i32 %19, ptr %329, align 4, !tbaa !273
  %330 = icmp ne i32 %19, 5
  %331 = icmp eq i32 %19, 6
  %332 = getelementptr inbounds %struct.StrokeCache, ptr %16, i64 0, i32 31
  %333 = getelementptr inbounds %struct.StrokeCache, ptr %16, i64 0, i32 38
  %334 = getelementptr inbounds %struct.Sculpt, ptr %0, i64 0, i32 2, i64 0
  %335 = getelementptr inbounds %struct.Sculpt, ptr %0, i64 0, i32 2, i64 1
  %336 = getelementptr inbounds %struct.Sculpt, ptr %0, i64 0, i32 2, i64 2
  br label %337

337:                                              ; preds = %326, %454
  %338 = phi i32 [ 0, %326 ], [ %455, %454 ]
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %348, label %340

340:                                              ; preds = %337
  %341 = and i32 %338, %19
  %342 = icmp ne i32 %341, 0
  %343 = icmp ne i32 %338, 3
  %344 = or i1 %330, %343
  %345 = and i1 %342, %344
  br i1 %345, label %346, label %454

346:                                              ; preds = %340
  br i1 %331, label %347, label %348

347:                                              ; preds = %346
  switch i32 %338, label %348 [
    i32 5, label %454
    i32 3, label %454
  ]

348:                                              ; preds = %347, %346, %337
  store i32 %338, ptr %332, align 8, !tbaa !277
  store i32 0, ptr %333, align 8, !tbaa !278
  %349 = trunc i32 %338 to i8
  call fastcc void @calc_brushdata_symm(ptr noundef %16, i8 noundef zeroext %349, i8 noundef zeroext 0, float noundef nofpclass(nan inf) 0.000000e+00)
  call void %2(ptr noundef %0, ptr noundef %1, ptr noundef %12) #10, !callees !279
  %350 = load i32, ptr %334, align 4, !tbaa !24
  %351 = icmp sgt i32 %350, 1
  br i1 %351, label %352, label %384

352:                                              ; preds = %348
  %353 = load ptr, ptr %13, align 8, !tbaa !5
  %354 = getelementptr inbounds %struct.SculptSession, ptr %353, i64 0, i32 28
  br label %355

355:                                              ; preds = %380, %352
  %356 = phi i32 [ %350, %352 ], [ %382, %380 ]
  %357 = phi i32 [ 1, %352 ], [ %381, %380 ]
  %358 = sitofp i32 %357 to double
  %359 = fmul fast double %358, 0x401921FB54442D18
  %360 = sitofp i32 %356 to double
  %361 = fdiv fast double %359, %360
  %362 = fptrunc double %361 to float
  %363 = load ptr, ptr %354, align 8, !tbaa !22
  %364 = getelementptr inbounds %struct.StrokeCache, ptr %363, i64 0, i32 38
  store i32 %357, ptr %364, align 8, !tbaa !278
  %365 = getelementptr inbounds %struct.StrokeCache, ptr %363, i64 0, i32 14
  %366 = getelementptr inbounds %struct.StrokeCache, ptr %363, i64 0, i32 13
  call void @flip_v3_v3(ptr noundef nonnull %365, ptr noundef nonnull %366, i8 noundef zeroext %349) #10
  %367 = getelementptr inbounds %struct.StrokeCache, ptr %363, i64 0, i32 27
  %368 = getelementptr inbounds %struct.StrokeCache, ptr %363, i64 0, i32 26
  call void @flip_v3_v3(ptr noundef nonnull %367, ptr noundef nonnull %368, i8 noundef zeroext %349) #10
  %369 = getelementptr inbounds %struct.StrokeCache, ptr %363, i64 0, i32 33
  %370 = getelementptr inbounds %struct.StrokeCache, ptr %363, i64 0, i32 32
  call void @flip_v3_v3(ptr noundef nonnull %369, ptr noundef nonnull %370, i8 noundef zeroext %349) #10
  %371 = getelementptr inbounds %struct.StrokeCache, ptr %363, i64 0, i32 39
  call void @unit_m4(ptr noundef nonnull %371) #10
  %372 = getelementptr inbounds %struct.StrokeCache, ptr %363, i64 0, i32 40
  call void @unit_m4(ptr noundef nonnull %372) #10
  call void @rotate_m4(ptr noundef nonnull %371, i8 noundef zeroext 88, float noundef nofpclass(nan inf) %362) #10
  %373 = fneg fast float %362
  call void @rotate_m4(ptr noundef nonnull %372, i8 noundef zeroext 88, float noundef nofpclass(nan inf) %373) #10
  call void @mul_m4_v3(ptr noundef nonnull %371, ptr noundef nonnull %365) #10
  call void @mul_m4_v3(ptr noundef nonnull %371, ptr noundef nonnull %367) #10
  %374 = getelementptr inbounds %struct.StrokeCache, ptr %363, i64 0, i32 50
  %375 = load i8, ptr %374, align 8, !tbaa !176
  %376 = icmp eq i8 %375, 0
  br i1 %376, label %380, label %377

377:                                              ; preds = %355
  %378 = getelementptr inbounds %struct.StrokeCache, ptr %363, i64 0, i32 52
  %379 = getelementptr inbounds %struct.StrokeCache, ptr %363, i64 0, i32 51
  call void @flip_v3_v3(ptr noundef nonnull %378, ptr noundef nonnull %379, i8 noundef zeroext %349) #10
  call void @mul_m4_v3(ptr noundef nonnull %371, ptr noundef nonnull %378) #10
  br label %380

380:                                              ; preds = %355, %377
  call void %2(ptr noundef nonnull %0, ptr noundef %1, ptr noundef %12) #10, !callees !279
  %381 = add nuw nsw i32 %357, 1
  %382 = load i32, ptr %334, align 4, !tbaa !24
  %383 = icmp slt i32 %381, %382
  br i1 %383, label %355, label %384, !llvm.loop !280

384:                                              ; preds = %380, %348
  %385 = load i32, ptr %335, align 4, !tbaa !24
  %386 = icmp sgt i32 %385, 1
  br i1 %386, label %387, label %419

387:                                              ; preds = %384
  %388 = load ptr, ptr %13, align 8, !tbaa !5
  %389 = getelementptr inbounds %struct.SculptSession, ptr %388, i64 0, i32 28
  br label %390

390:                                              ; preds = %415, %387
  %391 = phi i32 [ %385, %387 ], [ %417, %415 ]
  %392 = phi i32 [ 1, %387 ], [ %416, %415 ]
  %393 = sitofp i32 %392 to double
  %394 = fmul fast double %393, 0x401921FB54442D18
  %395 = sitofp i32 %391 to double
  %396 = fdiv fast double %394, %395
  %397 = fptrunc double %396 to float
  %398 = load ptr, ptr %389, align 8, !tbaa !22
  %399 = getelementptr inbounds %struct.StrokeCache, ptr %398, i64 0, i32 38
  store i32 %392, ptr %399, align 8, !tbaa !278
  %400 = getelementptr inbounds %struct.StrokeCache, ptr %398, i64 0, i32 14
  %401 = getelementptr inbounds %struct.StrokeCache, ptr %398, i64 0, i32 13
  call void @flip_v3_v3(ptr noundef nonnull %400, ptr noundef nonnull %401, i8 noundef zeroext %349) #10
  %402 = getelementptr inbounds %struct.StrokeCache, ptr %398, i64 0, i32 27
  %403 = getelementptr inbounds %struct.StrokeCache, ptr %398, i64 0, i32 26
  call void @flip_v3_v3(ptr noundef nonnull %402, ptr noundef nonnull %403, i8 noundef zeroext %349) #10
  %404 = getelementptr inbounds %struct.StrokeCache, ptr %398, i64 0, i32 33
  %405 = getelementptr inbounds %struct.StrokeCache, ptr %398, i64 0, i32 32
  call void @flip_v3_v3(ptr noundef nonnull %404, ptr noundef nonnull %405, i8 noundef zeroext %349) #10
  %406 = getelementptr inbounds %struct.StrokeCache, ptr %398, i64 0, i32 39
  call void @unit_m4(ptr noundef nonnull %406) #10
  %407 = getelementptr inbounds %struct.StrokeCache, ptr %398, i64 0, i32 40
  call void @unit_m4(ptr noundef nonnull %407) #10
  call void @rotate_m4(ptr noundef nonnull %406, i8 noundef zeroext 89, float noundef nofpclass(nan inf) %397) #10
  %408 = fneg fast float %397
  call void @rotate_m4(ptr noundef nonnull %407, i8 noundef zeroext 89, float noundef nofpclass(nan inf) %408) #10
  call void @mul_m4_v3(ptr noundef nonnull %406, ptr noundef nonnull %400) #10
  call void @mul_m4_v3(ptr noundef nonnull %406, ptr noundef nonnull %402) #10
  %409 = getelementptr inbounds %struct.StrokeCache, ptr %398, i64 0, i32 50
  %410 = load i8, ptr %409, align 8, !tbaa !176
  %411 = icmp eq i8 %410, 0
  br i1 %411, label %415, label %412

412:                                              ; preds = %390
  %413 = getelementptr inbounds %struct.StrokeCache, ptr %398, i64 0, i32 52
  %414 = getelementptr inbounds %struct.StrokeCache, ptr %398, i64 0, i32 51
  call void @flip_v3_v3(ptr noundef nonnull %413, ptr noundef nonnull %414, i8 noundef zeroext %349) #10
  call void @mul_m4_v3(ptr noundef nonnull %406, ptr noundef nonnull %413) #10
  br label %415

415:                                              ; preds = %390, %412
  call void %2(ptr noundef nonnull %0, ptr noundef %1, ptr noundef %12) #10, !callees !279
  %416 = add nuw nsw i32 %392, 1
  %417 = load i32, ptr %335, align 4, !tbaa !24
  %418 = icmp slt i32 %416, %417
  br i1 %418, label %390, label %419, !llvm.loop !280

419:                                              ; preds = %415, %384
  %420 = load i32, ptr %336, align 4, !tbaa !24
  %421 = icmp sgt i32 %420, 1
  br i1 %421, label %422, label %454

422:                                              ; preds = %419
  %423 = load ptr, ptr %13, align 8, !tbaa !5
  %424 = getelementptr inbounds %struct.SculptSession, ptr %423, i64 0, i32 28
  br label %425

425:                                              ; preds = %450, %422
  %426 = phi i32 [ %420, %422 ], [ %452, %450 ]
  %427 = phi i32 [ 1, %422 ], [ %451, %450 ]
  %428 = sitofp i32 %427 to double
  %429 = fmul fast double %428, 0x401921FB54442D18
  %430 = sitofp i32 %426 to double
  %431 = fdiv fast double %429, %430
  %432 = fptrunc double %431 to float
  %433 = load ptr, ptr %424, align 8, !tbaa !22
  %434 = getelementptr inbounds %struct.StrokeCache, ptr %433, i64 0, i32 38
  store i32 %427, ptr %434, align 8, !tbaa !278
  %435 = getelementptr inbounds %struct.StrokeCache, ptr %433, i64 0, i32 14
  %436 = getelementptr inbounds %struct.StrokeCache, ptr %433, i64 0, i32 13
  call void @flip_v3_v3(ptr noundef nonnull %435, ptr noundef nonnull %436, i8 noundef zeroext %349) #10
  %437 = getelementptr inbounds %struct.StrokeCache, ptr %433, i64 0, i32 27
  %438 = getelementptr inbounds %struct.StrokeCache, ptr %433, i64 0, i32 26
  call void @flip_v3_v3(ptr noundef nonnull %437, ptr noundef nonnull %438, i8 noundef zeroext %349) #10
  %439 = getelementptr inbounds %struct.StrokeCache, ptr %433, i64 0, i32 33
  %440 = getelementptr inbounds %struct.StrokeCache, ptr %433, i64 0, i32 32
  call void @flip_v3_v3(ptr noundef nonnull %439, ptr noundef nonnull %440, i8 noundef zeroext %349) #10
  %441 = getelementptr inbounds %struct.StrokeCache, ptr %433, i64 0, i32 39
  call void @unit_m4(ptr noundef nonnull %441) #10
  %442 = getelementptr inbounds %struct.StrokeCache, ptr %433, i64 0, i32 40
  call void @unit_m4(ptr noundef nonnull %442) #10
  call void @rotate_m4(ptr noundef nonnull %441, i8 noundef zeroext 90, float noundef nofpclass(nan inf) %432) #10
  %443 = fneg fast float %432
  call void @rotate_m4(ptr noundef nonnull %442, i8 noundef zeroext 90, float noundef nofpclass(nan inf) %443) #10
  call void @mul_m4_v3(ptr noundef nonnull %441, ptr noundef nonnull %435) #10
  call void @mul_m4_v3(ptr noundef nonnull %441, ptr noundef nonnull %437) #10
  %444 = getelementptr inbounds %struct.StrokeCache, ptr %433, i64 0, i32 50
  %445 = load i8, ptr %444, align 8, !tbaa !176
  %446 = icmp eq i8 %445, 0
  br i1 %446, label %450, label %447

447:                                              ; preds = %425
  %448 = getelementptr inbounds %struct.StrokeCache, ptr %433, i64 0, i32 52
  %449 = getelementptr inbounds %struct.StrokeCache, ptr %433, i64 0, i32 51
  call void @flip_v3_v3(ptr noundef nonnull %448, ptr noundef nonnull %449, i8 noundef zeroext %349) #10
  call void @mul_m4_v3(ptr noundef nonnull %441, ptr noundef nonnull %448) #10
  br label %450

450:                                              ; preds = %425, %447
  call void %2(ptr noundef nonnull %0, ptr noundef %1, ptr noundef %12) #10, !callees !279
  %451 = add nuw nsw i32 %427, 1
  %452 = load i32, ptr %336, align 4, !tbaa !24
  %453 = icmp slt i32 %451, %452
  br i1 %453, label %425, label %454, !llvm.loop !280

454:                                              ; preds = %450, %419, %347, %347, %340
  %455 = add nuw nsw i32 %338, 1
  %456 = icmp eq i32 %338, %19
  br i1 %456, label %457, label %337, !llvm.loop !281

457:                                              ; preds = %454
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @sculpt_topology_update(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2) #2 {
  %4 = alloca %struct.SculptSearchSphereData, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca [3 x float], align 8
  %8 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #10
  store ptr null, ptr %5, align 8, !tbaa !31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #10
  %10 = getelementptr inbounds %struct.SculptSearchSphereData, ptr %4, i64 0, i32 1
  store ptr %9, ptr %10, align 8, !tbaa !282
  store ptr %0, ptr %4, align 8, !tbaa !284
  %11 = getelementptr inbounds %struct.SculptSession, ptr %9, i64 0, i32 28
  %12 = load ptr, ptr %11, align 8, !tbaa !22
  %13 = getelementptr inbounds %struct.StrokeCache, ptr %12, i64 0, i32 11
  %14 = load float, ptr %13, align 8, !tbaa !198
  %15 = fmul fast float %14, 1.250000e+00
  %16 = fmul fast float %15, %15
  %17 = getelementptr inbounds %struct.SculptSearchSphereData, ptr %4, i64 0, i32 2
  store float %16, ptr %17, align 8, !tbaa !285
  %18 = getelementptr inbounds %struct.Brush, ptr %2, i64 0, i32 34
  %19 = load i8, ptr %18, align 8, !tbaa !59
  %20 = add i8 %19, -5
  %21 = icmp ult i8 %20, 10
  br i1 %21, label %25, label %22

22:                                               ; preds = %25, %3
  %23 = getelementptr inbounds %struct.StrokeCache, ptr %12, i64 0, i32 41
  %24 = load i8, ptr %23, align 4, !tbaa !46
  br label %30

25:                                               ; preds = %3
  %26 = zext i8 %20 to i16
  %27 = lshr i16 643, %26
  %28 = and i16 %27, 1
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %22, label %30

30:                                               ; preds = %25, %22
  %31 = phi i8 [ %24, %22 ], [ 1, %25 ]
  %32 = getelementptr inbounds %struct.SculptSearchSphereData, ptr %4, i64 0, i32 3
  store i8 %31, ptr %32, align 4, !tbaa !286
  %33 = getelementptr inbounds %struct.SculptSession, ptr %9, i64 0, i32 15
  %34 = load ptr, ptr %33, align 8, !tbaa !21
  call void @BKE_pbvh_search_gather(ptr noundef %34, ptr noundef nonnull @sculpt_search_sphere_cb, ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef nonnull %6) #10
  %35 = load i32, ptr %6, align 4, !tbaa !24
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %112, label %37

37:                                               ; preds = %30
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #10
  %38 = getelementptr inbounds %struct.Sculpt, ptr %0, i64 0, i32 1
  %39 = load i32, ptr %38, align 8, !tbaa !113
  %40 = lshr i32 %39, 12
  %41 = and i32 %40, 1
  %42 = and i32 %39, 2048
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = load i8, ptr %18, align 8, !tbaa !59
  %46 = icmp eq i8 %45, 15
  br i1 %46, label %47, label %49

47:                                               ; preds = %44, %37
  %48 = or i32 %41, 2
  br label %49

49:                                               ; preds = %47, %44
  %50 = phi i32 [ %48, %47 ], [ %41, %44 ]
  %51 = icmp sgt i32 %35, 0
  br i1 %51, label %52, label %79

52:                                               ; preds = %49, %74
  %53 = phi i64 [ %75, %74 ], [ 0, %49 ]
  %54 = load ptr, ptr %5, align 8, !tbaa !31
  %55 = getelementptr inbounds ptr, ptr %54, i64 %53
  %56 = load ptr, ptr %55, align 8, !tbaa !31
  %57 = load i8, ptr %18, align 8, !tbaa !59
  %58 = icmp eq i8 %57, 19
  %59 = select i1 %58, i32 2, i32 0
  %60 = call ptr @sculpt_undo_push_node(ptr noundef %1, ptr noundef %56, i32 noundef %59) #10
  %61 = load ptr, ptr %5, align 8, !tbaa !31
  %62 = getelementptr inbounds ptr, ptr %61, i64 %53
  %63 = load ptr, ptr %62, align 8, !tbaa !31
  call void @BKE_pbvh_node_mark_update(ptr noundef %63) #10
  %64 = load ptr, ptr %33, align 8, !tbaa !21
  %65 = call i32 @BKE_pbvh_type(ptr noundef %64) #10
  %66 = icmp eq i32 %65, 2
  br i1 %66, label %67, label %74

67:                                               ; preds = %52
  %68 = load ptr, ptr %5, align 8, !tbaa !31
  %69 = getelementptr inbounds ptr, ptr %68, i64 %53
  %70 = load ptr, ptr %69, align 8, !tbaa !31
  call void @BKE_pbvh_node_mark_topology_update(ptr noundef %70) #10
  %71 = load ptr, ptr %5, align 8, !tbaa !31
  %72 = getelementptr inbounds ptr, ptr %71, i64 %53
  %73 = load ptr, ptr %72, align 8, !tbaa !31
  call void @BKE_pbvh_bmesh_node_save_orig(ptr noundef %73) #10
  br label %74

74:                                               ; preds = %52, %67
  %75 = add nuw nsw i64 %53, 1
  %76 = load i32, ptr %6, align 4, !tbaa !24
  %77 = sext i32 %76 to i64
  %78 = icmp slt i64 %75, %77
  br i1 %78, label %52, label %79, !llvm.loop !287

79:                                               ; preds = %74, %49
  %80 = load ptr, ptr %33, align 8, !tbaa !21
  %81 = call i32 @BKE_pbvh_type(ptr noundef %80) #10
  %82 = icmp eq i32 %81, 2
  br i1 %82, label %83, label %90

83:                                               ; preds = %79
  %84 = load ptr, ptr %33, align 8, !tbaa !21
  %85 = load ptr, ptr %11, align 8, !tbaa !22
  %86 = getelementptr inbounds %struct.StrokeCache, ptr %85, i64 0, i32 14
  %87 = getelementptr inbounds %struct.StrokeCache, ptr %85, i64 0, i32 11
  %88 = load float, ptr %87, align 8, !tbaa !198
  %89 = call zeroext i8 @BKE_pbvh_bmesh_update_topology(ptr noundef %84, i32 noundef %50, ptr noundef nonnull %86, float noundef nofpclass(nan inf) %88) #10
  br label %90

90:                                               ; preds = %83, %79
  %91 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  %92 = load ptr, ptr %5, align 8, !tbaa !31
  call void %91(ptr noundef %92) #10
  %93 = load ptr, ptr %11, align 8, !tbaa !22
  %94 = getelementptr inbounds %struct.StrokeCache, ptr %93, i64 0, i32 13
  %95 = load <2 x float>, ptr %94, align 4, !tbaa !20
  store <2 x float> %95, ptr %7, align 8, !tbaa !20
  %96 = getelementptr inbounds %struct.StrokeCache, ptr %93, i64 0, i32 13, i64 2
  %97 = load float, ptr %96, align 4, !tbaa !20
  %98 = getelementptr inbounds float, ptr %7, i64 2
  store float %97, ptr %98, align 8, !tbaa !20
  %99 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 47
  call void @mul_m4_v3(ptr noundef nonnull %99, ptr noundef nonnull %7) #10
  %100 = load ptr, ptr %8, align 8, !tbaa !5
  %101 = getelementptr inbounds %struct.SculptSession, ptr %100, i64 0, i32 31
  %102 = load <2 x float>, ptr %7, align 8, !tbaa !20
  %103 = load <2 x float>, ptr %101, align 4, !tbaa !20
  %104 = fadd fast <2 x float> %103, %102
  store <2 x float> %104, ptr %101, align 4, !tbaa !20
  %105 = load float, ptr %98, align 8, !tbaa !20
  %106 = getelementptr inbounds %struct.SculptSession, ptr %100, i64 0, i32 31, i64 2
  %107 = load float, ptr %106, align 4, !tbaa !20
  %108 = fadd fast float %107, %105
  store float %108, ptr %106, align 4, !tbaa !20
  %109 = getelementptr inbounds %struct.SculptSession, ptr %100, i64 0, i32 32
  %110 = load i32, ptr %109, align 4, !tbaa !19
  %111 = add nsw i32 %110, 1
  store i32 %111, ptr %109, align 4, !tbaa !19
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #10
  br label %112

112:                                              ; preds = %90, %30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #10
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #10
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @do_brush_action(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2) #2 {
  %4 = alloca %struct.PBVHVertexIter, align 8
  %5 = alloca %struct.PBVHVertexIter, align 8
  %6 = alloca [3 x float], align 8
  %7 = alloca [3 x float], align 8
  %8 = alloca %struct.PBVHVertexIter, align 8
  %9 = alloca [3 x float], align 8
  %10 = alloca [3 x float], align 8
  %11 = alloca %struct.PBVHVertexIter, align 8
  %12 = alloca [3 x float], align 4
  %13 = alloca [3 x float], align 8
  %14 = alloca [3 x float], align 8
  %15 = alloca [3 x float], align 8
  %16 = alloca [4 x [4 x float]], align 16
  %17 = alloca [4 x [4 x float]], align 16
  %18 = alloca [4 x [4 x float]], align 16
  %19 = alloca %struct.PBVHVertexIter, align 8
  %20 = alloca [3 x float], align 8
  %21 = alloca [3 x float], align 8
  %22 = alloca %struct.PBVHVertexIter, align 8
  %23 = alloca [3 x float], align 8
  %24 = alloca [3 x float], align 8
  %25 = alloca %struct.PBVHVertexIter, align 8
  %26 = alloca %struct.PBVHVertexIter, align 8
  %27 = alloca %struct.PBVHVertexIter, align 8
  %28 = alloca %struct.PBVHVertexIter, align 8
  %29 = alloca %struct.PBVHVertexIter, align 8
  %30 = alloca %struct.PBVHVertexIter, align 8
  %31 = alloca [3 x float], align 8
  %32 = alloca [3 x [3 x float]], align 16
  %33 = alloca %struct.PBVHVertexIter, align 8
  %34 = alloca %struct.PBVHVertexIter, align 8
  %35 = alloca %struct.PBVHVertexIter, align 8
  %36 = alloca %struct.PBVHVertexIter, align 8
  %37 = alloca [3 x float], align 4
  %38 = alloca [2 x float], align 8
  %39 = alloca [4 x [4 x float]], align 16
  %40 = alloca [4 x [4 x float]], align 16
  %41 = alloca [4 x [4 x float]], align 16
  %42 = alloca [3 x float], align 8
  %43 = alloca [3 x float], align 8
  %44 = alloca %struct.SculptSearchSphereData, align 8
  %45 = alloca ptr, align 8
  %46 = alloca i32, align 4
  %47 = alloca [3 x float], align 8
  %48 = getelementptr %struct.Object, ptr %1, i64 0, i32 2
  %49 = load ptr, ptr %48, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %44) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %45) #10
  store ptr null, ptr %45, align 8, !tbaa !31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %46) #10
  %50 = getelementptr inbounds %struct.SculptSearchSphereData, ptr %44, i64 0, i32 1
  store ptr %49, ptr %50, align 8, !tbaa !282
  store ptr %0, ptr %44, align 8, !tbaa !284
  %51 = getelementptr inbounds %struct.SculptSession, ptr %49, i64 0, i32 28
  %52 = load ptr, ptr %51, align 8, !tbaa !22
  %53 = getelementptr inbounds %struct.StrokeCache, ptr %52, i64 0, i32 12
  %54 = load float, ptr %53, align 4, !tbaa !199
  %55 = getelementptr inbounds %struct.SculptSearchSphereData, ptr %44, i64 0, i32 2
  store float %54, ptr %55, align 8, !tbaa !285
  %56 = getelementptr inbounds %struct.Brush, ptr %2, i64 0, i32 34
  %57 = load i8, ptr %56, align 8, !tbaa !59
  %58 = add i8 %57, -5
  %59 = icmp ult i8 %58, 10
  br i1 %59, label %63, label %60

60:                                               ; preds = %63, %3
  %61 = getelementptr inbounds %struct.StrokeCache, ptr %52, i64 0, i32 41
  %62 = load i8, ptr %61, align 4, !tbaa !46
  br label %68

63:                                               ; preds = %3
  %64 = zext i8 %58 to i16
  %65 = lshr i16 643, %64
  %66 = and i16 %65, 1
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %60, label %68

68:                                               ; preds = %63, %60
  %69 = phi i8 [ %62, %60 ], [ 1, %63 ]
  %70 = getelementptr inbounds %struct.SculptSearchSphereData, ptr %44, i64 0, i32 3
  store i8 %69, ptr %70, align 4, !tbaa !286
  %71 = getelementptr inbounds %struct.SculptSession, ptr %49, i64 0, i32 15
  %72 = load ptr, ptr %71, align 8, !tbaa !21
  call void @BKE_pbvh_search_gather(ptr noundef %72, ptr noundef nonnull @sculpt_search_sphere_cb, ptr noundef nonnull %44, ptr noundef nonnull %45, ptr noundef nonnull %46) #10
  %73 = load i32, ptr %46, align 4, !tbaa !24
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %5513, label %75

75:                                               ; preds = %68
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %47) #10
  %76 = icmp sgt i32 %73, 0
  br i1 %76, label %77, label %93

77:                                               ; preds = %75, %77
  %78 = phi i64 [ %89, %77 ], [ 0, %75 ]
  %79 = load ptr, ptr %45, align 8, !tbaa !31
  %80 = getelementptr inbounds ptr, ptr %79, i64 %78
  %81 = load ptr, ptr %80, align 8, !tbaa !31
  %82 = load i8, ptr %56, align 8, !tbaa !59
  %83 = icmp eq i8 %82, 19
  %84 = select i1 %83, i32 2, i32 0
  %85 = call ptr @sculpt_undo_push_node(ptr noundef %1, ptr noundef %81, i32 noundef %84) #10
  %86 = load ptr, ptr %45, align 8, !tbaa !31
  %87 = getelementptr inbounds ptr, ptr %86, i64 %78
  %88 = load ptr, ptr %87, align 8, !tbaa !31
  call void @BKE_pbvh_node_mark_update(ptr noundef %88) #10
  %89 = add nuw nsw i64 %78, 1
  %90 = load i32, ptr %46, align 4, !tbaa !24
  %91 = sext i32 %90 to i64
  %92 = icmp slt i64 %89, %91
  br i1 %92, label %77, label %93, !llvm.loop !288

93:                                               ; preds = %77, %75
  %94 = phi i32 [ %73, %75 ], [ %90, %77 ]
  %95 = load i8, ptr %56, align 8, !tbaa !59
  switch i8 %95, label %101 [
    i8 5, label %96
    i8 13, label %96
    i8 17, label %105
    i8 16, label %105
    i8 1, label %105
    i8 6, label %105
    i8 11, label %105
    i8 14, label %105
    i8 12, label %105
  ]

96:                                               ; preds = %93, %93
  %97 = getelementptr inbounds %struct.Brush, ptr %2, i64 0, i32 11
  %98 = load float, ptr %97, align 8, !tbaa !289
  %99 = fcmp fast ogt float %98, 0.000000e+00
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  switch i8 %95, label %101 [
    i8 12, label %105
    i8 11, label %105
    i8 6, label %105
  ]

101:                                              ; preds = %93, %100
  %102 = getelementptr inbounds %struct.Brush, ptr %2, i64 0, i32 3, i32 20
  %103 = load i8, ptr %102, align 4, !tbaa !290
  %104 = icmp eq i8 %103, 3
  br i1 %104, label %105, label %166

105:                                              ; preds = %93, %93, %93, %93, %93, %93, %93, %100, %100, %100, %96, %101
  %106 = load ptr, ptr %45, align 8, !tbaa !31
  %107 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %108 = load ptr, ptr %48, align 8, !tbaa !5
  %109 = getelementptr inbounds %struct.SculptSession, ptr %108, i64 0, i32 28
  %110 = load ptr, ptr %109, align 8, !tbaa !22
  %111 = getelementptr inbounds %struct.StrokeCache, ptr %110, i64 0, i32 31
  %112 = load i32, ptr %111, align 8, !tbaa !277
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %157

114:                                              ; preds = %105
  %115 = getelementptr inbounds %struct.StrokeCache, ptr %110, i64 0, i32 38
  %116 = load i32, ptr %115, align 8, !tbaa !278
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %157

118:                                              ; preds = %114
  %119 = getelementptr inbounds %struct.StrokeCache, ptr %110, i64 0, i32 20
  %120 = load i8, ptr %119, align 4, !tbaa !188
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %127

122:                                              ; preds = %118
  %123 = getelementptr inbounds %struct.Brush, ptr %107, i64 0, i32 16
  %124 = load i32, ptr %123, align 8, !tbaa !180
  %125 = and i32 %124, 32768
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %157

127:                                              ; preds = %122, %118
  %128 = getelementptr inbounds %struct.StrokeCache, ptr %110, i64 0, i32 34
  %129 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %130 = getelementptr inbounds %struct.Brush, ptr %129, i64 0, i32 28
  %131 = load i32, ptr %130, align 8, !tbaa !291
  switch i32 %131, label %151 [
    i32 1, label %132
    i32 2, label %144
    i32 3, label %146
    i32 4, label %148
    i32 0, label %150
  ]

132:                                              ; preds = %127
  %133 = load ptr, ptr %48, align 8, !tbaa !5
  %134 = getelementptr inbounds %struct.SculptSession, ptr %133, i64 0, i32 28
  %135 = load ptr, ptr %134, align 8, !tbaa !22
  %136 = getelementptr inbounds %struct.StrokeCache, ptr %135, i64 0, i32 32
  %137 = load float, ptr %136, align 4, !tbaa !20
  store float %137, ptr %128, align 4, !tbaa !20
  %138 = getelementptr inbounds %struct.StrokeCache, ptr %135, i64 0, i32 32, i64 1
  %139 = load float, ptr %138, align 4, !tbaa !20
  %140 = getelementptr inbounds %struct.StrokeCache, ptr %110, i64 0, i32 34, i64 1
  store float %139, ptr %140, align 4, !tbaa !20
  %141 = getelementptr inbounds %struct.StrokeCache, ptr %135, i64 0, i32 32, i64 2
  %142 = load float, ptr %141, align 4, !tbaa !20
  %143 = getelementptr inbounds %struct.StrokeCache, ptr %110, i64 0, i32 34, i64 2
  store float %142, ptr %143, align 4, !tbaa !20
  br label %151

144:                                              ; preds = %127
  %145 = getelementptr inbounds %struct.StrokeCache, ptr %110, i64 0, i32 34, i64 2
  store float 0.000000e+00, ptr %145, align 4, !tbaa !20
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr %128, align 4, !tbaa !20
  br label %151

146:                                              ; preds = %127
  %147 = getelementptr inbounds %struct.StrokeCache, ptr %110, i64 0, i32 34, i64 2
  store float 0.000000e+00, ptr %147, align 4, !tbaa !20
  store <2 x float> <float 0.000000e+00, float 1.000000e+00>, ptr %128, align 4, !tbaa !20
  br label %151

148:                                              ; preds = %127
  store <2 x float> zeroinitializer, ptr %128, align 4, !tbaa !20
  %149 = getelementptr inbounds %struct.StrokeCache, ptr %110, i64 0, i32 34, i64 2
  store float 1.000000e+00, ptr %149, align 4, !tbaa !20
  br label %151

150:                                              ; preds = %127
  call fastcc void @calc_area_normal(ptr noundef %0, ptr noundef nonnull %1, ptr noundef nonnull %128, ptr noundef %106, i32 noundef %94)
  br label %151

151:                                              ; preds = %150, %148, %146, %144, %132, %127
  %152 = getelementptr inbounds %struct.StrokeCache, ptr %110, i64 0, i32 35
  %153 = load <2 x float>, ptr %128, align 4, !tbaa !20
  store <2 x float> %153, ptr %152, align 4, !tbaa !20
  %154 = getelementptr inbounds %struct.StrokeCache, ptr %110, i64 0, i32 34, i64 2
  %155 = load float, ptr %154, align 4, !tbaa !20
  %156 = getelementptr inbounds %struct.StrokeCache, ptr %110, i64 0, i32 35, i64 2
  store float %155, ptr %156, align 4, !tbaa !20
  br label %166

157:                                              ; preds = %122, %114, %105
  %158 = getelementptr inbounds %struct.StrokeCache, ptr %110, i64 0, i32 35
  %159 = getelementptr inbounds %struct.StrokeCache, ptr %110, i64 0, i32 34
  %160 = load <2 x float>, ptr %159, align 4, !tbaa !20
  store <2 x float> %160, ptr %158, align 4, !tbaa !20
  %161 = getelementptr inbounds %struct.StrokeCache, ptr %110, i64 0, i32 34, i64 2
  %162 = load float, ptr %161, align 4, !tbaa !20
  %163 = getelementptr inbounds %struct.StrokeCache, ptr %110, i64 0, i32 35, i64 2
  store float %162, ptr %163, align 4, !tbaa !20
  %164 = trunc i32 %112 to i8
  call void @flip_v3_v3(ptr noundef nonnull %158, ptr noundef nonnull %158, i8 noundef zeroext %164) #10
  %165 = getelementptr inbounds %struct.StrokeCache, ptr %110, i64 0, i32 39
  call void @mul_m4_v3(ptr noundef nonnull %165, ptr noundef nonnull %158) #10
  br label %166

166:                                              ; preds = %157, %151, %101
  %167 = getelementptr inbounds %struct.Brush, ptr %2, i64 0, i32 3, i32 20
  %168 = load i8, ptr %167, align 4, !tbaa !290
  %169 = icmp eq i8 %168, 3
  br i1 %169, label %170, label %285

170:                                              ; preds = %166
  %171 = load ptr, ptr %48, align 8, !tbaa !5
  %172 = getelementptr inbounds %struct.SculptSession, ptr %171, i64 0, i32 28
  %173 = load ptr, ptr %172, align 8, !tbaa !22
  %174 = getelementptr inbounds %struct.StrokeCache, ptr %173, i64 0, i32 31
  %175 = load i32, ptr %174, align 8, !tbaa !277
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %285

177:                                              ; preds = %170
  %178 = getelementptr inbounds %struct.StrokeCache, ptr %173, i64 0, i32 38
  %179 = load i32, ptr %178, align 8, !tbaa !278
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %285

181:                                              ; preds = %177
  %182 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %183 = getelementptr inbounds %struct.StrokeCache, ptr %173, i64 0, i32 36
  %184 = load ptr, ptr %48, align 8, !tbaa !5
  %185 = getelementptr inbounds %struct.SculptSession, ptr %184, i64 0, i32 28
  %186 = load ptr, ptr %185, align 8, !tbaa !22
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %39) #10
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %40) #10
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %41) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %42) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %43) #10
  %187 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 50
  %188 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 47
  %189 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %187, ptr noundef nonnull %188) #10
  %190 = getelementptr inbounds [4 x float], ptr %40, i64 0, i64 3
  store float 0.000000e+00, ptr %190, align 4, !tbaa !20
  %191 = getelementptr inbounds [4 x [4 x float]], ptr %40, i64 0, i64 1, i64 3
  store float 0.000000e+00, ptr %191, align 4, !tbaa !20
  %192 = getelementptr inbounds [4 x [4 x float]], ptr %40, i64 0, i64 2, i64 3
  store float 0.000000e+00, ptr %192, align 4, !tbaa !20
  %193 = getelementptr inbounds [4 x [4 x float]], ptr %40, i64 0, i64 3, i64 3
  store float 1.000000e+00, ptr %193, align 4, !tbaa !20
  %194 = getelementptr inbounds %struct.StrokeCache, ptr %186, i64 0, i32 22
  %195 = load ptr, ptr %194, align 8, !tbaa !172
  %196 = getelementptr inbounds %struct.StrokeCache, ptr %186, i64 0, i32 14
  %197 = getelementptr inbounds %struct.ViewContext, ptr %195, i64 0, i32 1
  %198 = load ptr, ptr %197, align 8, !tbaa !44
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %37) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %38) #10
  store i64 4575657221408423936, ptr %38, align 8
  %199 = getelementptr inbounds %struct.Object, ptr %198, i64 0, i32 50
  call void @mul_v3_m4v3(ptr noundef nonnull %37, ptr noundef nonnull %199, ptr noundef nonnull %196) #10
  %200 = getelementptr inbounds %struct.ViewContext, ptr %195, i64 0, i32 5
  %201 = load ptr, ptr %200, align 8, !tbaa !174
  %202 = call fast nofpclass(nan inf) float @ED_view3d_calc_zfac(ptr noundef %201, ptr noundef nonnull %37, ptr noundef null) #10
  %203 = getelementptr inbounds %struct.ViewContext, ptr %195, i64 0, i32 3
  %204 = load ptr, ptr %203, align 8, !tbaa !72
  call void @ED_view3d_win_to_delta(ptr noundef %204, ptr noundef nonnull %38, ptr noundef nonnull %43, float noundef nofpclass(nan inf) %202) #10
  %205 = getelementptr inbounds float, ptr %43, i64 1
  %206 = load <2 x float>, ptr %43, align 8, !tbaa !20
  %207 = fmul fast <2 x float> %206, %206
  %208 = shufflevector <2 x float> %207, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %209 = fadd fast <2 x float> %208, %207
  %210 = extractelement <2 x float> %209, i64 0
  %211 = getelementptr inbounds float, ptr %43, i64 2
  %212 = load float, ptr %211, align 8, !tbaa !20
  %213 = fmul fast float %212, %212
  %214 = fadd fast float %210, %213
  %215 = fcmp fast ogt float %214, 0x38AA95A5C0000000
  br i1 %215, label %216, label %223

216:                                              ; preds = %181
  %217 = call fast float @llvm.sqrt.f32(float %214)
  %218 = fdiv fast float 1.000000e+00, %217
  %219 = insertelement <2 x float> poison, float %218, i64 0
  %220 = shufflevector <2 x float> %219, <2 x float> poison, <2 x i32> zeroinitializer
  %221 = fmul fast <2 x float> %220, %206
  %222 = fmul fast float %218, %212
  br label %223

223:                                              ; preds = %216, %181
  %224 = phi float [ %222, %216 ], [ 0.000000e+00, %181 ]
  %225 = phi <2 x float> [ %221, %216 ], [ zeroinitializer, %181 ]
  %226 = getelementptr inbounds [4 x [4 x float]], ptr %40, i64 0, i64 3
  %227 = getelementptr inbounds [4 x [4 x float]], ptr %40, i64 0, i64 2
  %228 = getelementptr inbounds [4 x [4 x float]], ptr %40, i64 0, i64 1
  %229 = getelementptr inbounds %struct.Object, ptr %198, i64 0, i32 33
  %230 = load <2 x float>, ptr %229, align 4, !tbaa !20
  %231 = fadd fast <2 x float> %230, %225
  store <2 x float> %231, ptr %43, align 8, !tbaa !20
  %232 = getelementptr inbounds %struct.Object, ptr %198, i64 0, i32 33, i64 2
  %233 = load float, ptr %232, align 4, !tbaa !20
  %234 = fadd fast float %233, %224
  store float %234, ptr %211, align 8, !tbaa !20
  call void @mul_m4_v3(ptr noundef nonnull %199, ptr noundef nonnull %43) #10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %38) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %37) #10
  %235 = getelementptr inbounds %struct.StrokeCache, ptr %186, i64 0, i32 34
  %236 = getelementptr inbounds %struct.StrokeCache, ptr %186, i64 0, i32 34, i64 1
  %237 = load float, ptr %235, align 4, !tbaa !20
  %238 = load float, ptr %43, align 8, !tbaa !20
  %239 = load <2 x float>, ptr %205, align 4, !tbaa !20
  %240 = load <2 x float>, ptr %236, align 4, !tbaa !20
  %241 = shufflevector <2 x float> %240, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %242 = insertelement <2 x float> %241, float %237, i64 1
  %243 = fmul fast <2 x float> %242, %239
  %244 = shufflevector <2 x float> %239, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %245 = insertelement <2 x float> %244, float %238, i64 1
  %246 = fmul fast <2 x float> %245, %240
  %247 = fsub fast <2 x float> %243, %246
  store <2 x float> %247, ptr %42, align 8, !tbaa !20
  %248 = extractelement <2 x float> %240, i64 0
  %249 = fmul fast float %238, %248
  %250 = extractelement <2 x float> %239, i64 0
  %251 = fmul fast float %237, %250
  %252 = fsub fast float %249, %251
  %253 = getelementptr inbounds float, ptr %42, i64 2
  store float %252, ptr %253, align 8, !tbaa !20
  %254 = getelementptr inbounds %struct.Brush, ptr %182, i64 0, i32 3, i32 13
  %255 = load float, ptr %254, align 4, !tbaa !292
  %256 = getelementptr inbounds %struct.StrokeCache, ptr %186, i64 0, i32 25
  %257 = load float, ptr %256, align 8, !tbaa !206
  %258 = fsub fast float %255, %257
  call void @rotate_v3_v3v3fl(ptr noundef nonnull %40, ptr noundef nonnull %42, ptr noundef nonnull %235, float noundef nofpclass(nan inf) %258) #10
  %259 = getelementptr inbounds float, ptr %40, i64 1
  %260 = load float, ptr %40, align 16, !tbaa !20
  %261 = load float, ptr %235, align 4, !tbaa !20
  %262 = load <2 x float>, ptr %236, align 4, !tbaa !20
  %263 = load <2 x float>, ptr %259, align 4, !tbaa !20
  %264 = shufflevector <2 x float> %263, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %265 = insertelement <2 x float> %264, float %260, i64 1
  %266 = fmul fast <2 x float> %265, %262
  %267 = shufflevector <2 x float> %262, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %268 = insertelement <2 x float> %267, float %261, i64 1
  %269 = fmul fast <2 x float> %268, %263
  %270 = fsub fast <2 x float> %266, %269
  store <2 x float> %270, ptr %228, align 16, !tbaa !20
  %271 = extractelement <2 x float> %263, i64 0
  %272 = fmul fast float %261, %271
  %273 = extractelement <2 x float> %262, i64 0
  %274 = fmul fast float %260, %273
  %275 = fsub fast float %272, %274
  %276 = getelementptr inbounds [4 x [4 x float]], ptr %40, i64 0, i64 1, i64 2
  store float %275, ptr %276, align 8, !tbaa !20
  store float %261, ptr %227, align 16, !tbaa !20
  %277 = getelementptr inbounds [4 x [4 x float]], ptr %40, i64 0, i64 2, i64 1
  store <2 x float> %262, ptr %277, align 4, !tbaa !20
  %278 = load <2 x float>, ptr %196, align 4, !tbaa !20
  store <2 x float> %278, ptr %226, align 16, !tbaa !20
  %279 = getelementptr inbounds %struct.StrokeCache, ptr %186, i64 0, i32 14, i64 2
  %280 = load float, ptr %279, align 4, !tbaa !20
  %281 = getelementptr inbounds [4 x [4 x float]], ptr %40, i64 0, i64 3, i64 2
  store float %280, ptr %281, align 8, !tbaa !20
  call void @normalize_m4(ptr noundef nonnull %40) #10
  %282 = getelementptr inbounds %struct.StrokeCache, ptr %186, i64 0, i32 11
  %283 = load float, ptr %282, align 8, !tbaa !198
  call void @scale_m4_fl(ptr noundef nonnull %41, float noundef nofpclass(nan inf) %283) #10
  call void @mul_m4_m4m4(ptr noundef nonnull %39, ptr noundef nonnull %40, ptr noundef nonnull %41) #10
  %284 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %183, ptr noundef nonnull %39) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %43) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %42) #10
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %41) #10
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %40) #10
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %39) #10
  br label %285

285:                                              ; preds = %223, %177, %170, %166
  %286 = load i8, ptr %56, align 8, !tbaa !59
  switch i8 %286, label %5195 [
    i8 1, label %287
    i8 2, label %556
    i8 16, label %564
    i8 17, label %568
    i8 3, label %572
    i8 4, label %835
    i8 5, label %1122
    i8 14, label %1466
    i8 13, label %1817
    i8 11, label %2113
    i8 12, label %2397
    i8 6, label %2736
    i8 7, label %3157
    i8 8, label %3494
    i8 18, label %3841
    i8 9, label %4259
    i8 10, label %4598
    i8 19, label %4938
  ]

287:                                              ; preds = %285
  %288 = load ptr, ptr %45, align 8, !tbaa !31
  %289 = load i32, ptr %46, align 4, !tbaa !24
  %290 = load ptr, ptr %48, align 8, !tbaa !5
  %291 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %292 = icmp sgt i32 %289, 0
  br i1 %292, label %293, label %5193

293:                                              ; preds = %287
  %294 = getelementptr %struct.SculptSession, ptr %290, i64 0, i32 28
  %295 = load ptr, ptr %294, align 8, !tbaa !22
  %296 = getelementptr inbounds %struct.StrokeCache, ptr %295, i64 0, i32 1, i64 2
  %297 = load float, ptr %296, align 4, !tbaa !20
  %298 = getelementptr inbounds %struct.StrokeCache, ptr %295, i64 0, i32 1
  %299 = getelementptr inbounds %struct.StrokeCache, ptr %295, i64 0, i32 35, i64 2
  %300 = load float, ptr %299, align 4, !tbaa !20
  %301 = getelementptr inbounds %struct.StrokeCache, ptr %295, i64 0, i32 35
  %302 = getelementptr inbounds %struct.StrokeCache, ptr %295, i64 0, i32 11
  %303 = load float, ptr %302, align 8, !tbaa !198
  %304 = getelementptr inbounds %struct.StrokeCache, ptr %295, i64 0, i32 19
  %305 = load float, ptr %304, align 8, !tbaa !203
  %306 = getelementptr inbounds %struct.SculptSession, ptr %290, i64 0, i32 15
  %307 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 5
  %308 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 12
  %309 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 6
  %310 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 13
  %311 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 1
  %312 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 2
  %313 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 11
  %314 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 7
  %315 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 9
  %316 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 10
  %317 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 15
  %318 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 4
  %319 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 3
  %320 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 8
  %321 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 24
  %322 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 26
  %323 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 27
  %324 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 14
  %325 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 16
  %326 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 22
  %327 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 25
  %328 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 17
  %329 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 18, i32 0, i32 1
  %330 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 18
  %331 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 23
  %332 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 19
  %333 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 19, i32 0, i32 1
  %334 = getelementptr inbounds %struct.PBVHVertexIter, ptr %36, i64 0, i32 21
  %335 = fmul fast float %305, %303
  %336 = zext i32 %289 to i64
  %337 = load <2 x float>, ptr %298, align 4, !tbaa !20
  %338 = load <2 x float>, ptr %301, align 4, !tbaa !20
  %339 = fmul fast <2 x float> %338, %337
  %340 = insertelement <2 x float> poison, float %335, i64 0
  %341 = fmul fast float %300, %297
  %342 = fmul fast float %341, %335
  br label %343

343:                                              ; preds = %553, %293
  %344 = phi i64 [ 0, %293 ], [ %554, %553 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %36) #10
  %345 = load ptr, ptr %306, align 8, !tbaa !21
  %346 = getelementptr inbounds ptr, ptr %288, i64 %344
  %347 = load ptr, ptr %346, align 8, !tbaa !31
  %348 = call ptr @BKE_pbvh_node_add_proxy(ptr noundef %345, ptr noundef %347) #10
  %349 = load ptr, ptr %348, align 8, !tbaa !252
  %350 = load ptr, ptr %294, align 8, !tbaa !22
  %351 = getelementptr inbounds %struct.StrokeCache, ptr %350, i64 0, i32 22
  %352 = load ptr, ptr %351, align 8, !tbaa !172
  %353 = getelementptr inbounds %struct.ViewContext, ptr %352, i64 0, i32 5
  %354 = load ptr, ptr %353, align 8, !tbaa !174
  %355 = getelementptr inbounds %struct.StrokeCache, ptr %350, i64 0, i32 12
  %356 = load float, ptr %355, align 4, !tbaa !199
  %357 = getelementptr inbounds %struct.StrokeCache, ptr %350, i64 0, i32 14
  %358 = load float, ptr %357, align 4, !tbaa !20
  %359 = getelementptr inbounds %struct.StrokeCache, ptr %350, i64 0, i32 14, i64 1
  %360 = load <2 x float>, ptr %359, align 4, !tbaa !20
  %361 = getelementptr inbounds %struct.RegionView3D, ptr %354, i64 0, i32 32
  %362 = load i16, ptr %361, align 2, !tbaa !293
  %363 = and i16 %362, 4
  %364 = icmp eq i16 %363, 0
  %365 = select i1 %364, ptr null, ptr %354
  %366 = load ptr, ptr %306, align 8, !tbaa !21
  %367 = load ptr, ptr %346, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %366, ptr noundef %367, ptr noundef nonnull %36, i32 noundef 1) #10
  store i32 0, ptr %307, align 4, !tbaa !210
  store i32 0, ptr %36, align 8, !tbaa !214
  %368 = load i32, ptr %308, align 8, !tbaa !215
  %369 = icmp sgt i32 %368, 0
  br i1 %369, label %370, label %553

370:                                              ; preds = %343
  %371 = icmp eq ptr %365, null
  br label %372

372:                                              ; preds = %548, %370
  %373 = phi i32 [ %368, %370 ], [ %549, %548 ]
  %374 = phi i32 [ 0, %370 ], [ %551, %548 ]
  %375 = load ptr, ptr %309, align 8, !tbaa !216
  %376 = icmp eq ptr %375, null
  br i1 %376, label %377, label %379

377:                                              ; preds = %372
  %378 = load i32, ptr %317, align 8, !tbaa !217
  store i32 %378, ptr %311, align 4, !tbaa !218
  store i32 1, ptr %312, align 8, !tbaa !219
  store i32 0, ptr %318, align 8, !tbaa !220
  br label %392

379:                                              ; preds = %372
  %380 = load i32, ptr %310, align 4, !tbaa !221
  store i32 %380, ptr %311, align 4, !tbaa !218
  store i32 %380, ptr %312, align 8, !tbaa !219
  %381 = load ptr, ptr %313, align 8, !tbaa !222
  %382 = sext i32 %374 to i64
  %383 = getelementptr inbounds i32, ptr %381, i64 %382
  %384 = load i32, ptr %383, align 4, !tbaa !24
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds ptr, ptr %375, i64 %385
  %387 = load ptr, ptr %386, align 8, !tbaa !31
  store ptr %387, ptr %314, align 8, !tbaa !223
  %388 = load ptr, ptr %315, align 8, !tbaa !224
  %389 = getelementptr inbounds ptr, ptr %388, i64 %385
  %390 = load ptr, ptr %389, align 8, !tbaa !31
  store ptr %390, ptr %316, align 8, !tbaa !225
  store i32 0, ptr %318, align 8, !tbaa !220
  %391 = icmp sgt i32 %380, 0
  br i1 %391, label %392, label %548

392:                                              ; preds = %379, %377
  %393 = phi i32 [ %380, %379 ], [ 1, %377 ]
  %394 = phi i32 [ %380, %379 ], [ %378, %377 ]
  br label %395

395:                                              ; preds = %392, %539
  %396 = phi i32 [ %540, %539 ], [ %393, %392 ]
  %397 = phi i32 [ %543, %539 ], [ 0, %392 ]
  %398 = phi i32 [ %542, %539 ], [ %394, %392 ]
  store i32 0, ptr %319, align 4, !tbaa !226
  %399 = icmp sgt i32 %398, 0
  br i1 %399, label %400, label %539

400:                                              ; preds = %395, %529
  %401 = phi i32 [ %531, %529 ], [ 0, %395 ]
  %402 = load ptr, ptr %314, align 8, !tbaa !223
  %403 = icmp eq ptr %402, null
  br i1 %403, label %439, label %404

404:                                              ; preds = %400
  store ptr %402, ptr %321, align 8, !tbaa !227
  %405 = load ptr, ptr %320, align 8, !tbaa !228
  %406 = getelementptr i8, ptr %405, i64 20
  %407 = load i32, ptr %406, align 4, !tbaa !229
  %408 = sext i32 %407 to i64
  %409 = getelementptr inbounds i8, ptr %402, i64 %408
  store ptr %409, ptr %322, align 8, !tbaa !231
  %410 = getelementptr inbounds %struct.CCGKey, ptr %405, i64 0, i32 9
  %411 = load i32, ptr %410, align 4, !tbaa !232
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %418, label %413

413:                                              ; preds = %404
  %414 = getelementptr i8, ptr %405, i64 24
  %415 = load i32, ptr %414, align 4, !tbaa !233
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds i8, ptr %402, i64 %416
  br label %418

418:                                              ; preds = %413, %404
  %419 = phi ptr [ %417, %413 ], [ null, %404 ]
  store ptr %419, ptr %323, align 8, !tbaa !234
  %420 = getelementptr i8, ptr %405, i64 4
  %421 = load i32, ptr %420, align 4, !tbaa !235
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds i8, ptr %402, i64 %422
  store ptr %423, ptr %314, align 8, !tbaa !223
  %424 = load ptr, ptr %316, align 8, !tbaa !225
  %425 = icmp eq ptr %424, null
  br i1 %425, label %482, label %426

426:                                              ; preds = %418
  %427 = load i32, ptr %318, align 8, !tbaa !220
  %428 = load i32, ptr %310, align 4, !tbaa !221
  %429 = mul nsw i32 %428, %427
  %430 = add nsw i32 %429, %401
  %431 = ashr i32 %430, 5
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds i32, ptr %424, i64 %432
  %434 = load i32, ptr %433, align 4, !tbaa !24
  %435 = and i32 %430, 31
  %436 = shl nuw i32 1, %435
  %437 = and i32 %436, %434
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %482, label %529

439:                                              ; preds = %400
  %440 = load ptr, ptr %324, align 8, !tbaa !236
  %441 = icmp eq ptr %440, null
  br i1 %441, label %459, label %442

442:                                              ; preds = %439
  %443 = load ptr, ptr %325, align 8, !tbaa !237
  %444 = sext i32 %401 to i64
  %445 = getelementptr inbounds i32, ptr %443, i64 %444
  %446 = load i32, ptr %445, align 4, !tbaa !24
  %447 = sext i32 %446 to i64
  %448 = getelementptr inbounds %struct.MVert, ptr %440, i64 %447
  store ptr %448, ptr %326, align 8, !tbaa !238
  %449 = getelementptr inbounds %struct.MVert, ptr %440, i64 %447, i32 2
  %450 = load i8, ptr %449, align 2, !tbaa !239
  %451 = and i8 %450, 16
  %452 = icmp eq i8 %451, 0
  br i1 %452, label %453, label %529

453:                                              ; preds = %442
  store ptr %448, ptr %321, align 8, !tbaa !227
  %454 = getelementptr inbounds %struct.MVert, ptr %440, i64 %447, i32 1
  store ptr %454, ptr %327, align 8, !tbaa !241
  %455 = load ptr, ptr %328, align 8, !tbaa !242
  %456 = icmp eq ptr %455, null
  br i1 %456, label %482, label %457

457:                                              ; preds = %453
  %458 = getelementptr inbounds float, ptr %455, i64 %447
  br label %479

459:                                              ; preds = %439
  %460 = load ptr, ptr %329, align 8, !tbaa !243
  %461 = icmp eq ptr %460, null
  %462 = load ptr, ptr %333, align 8
  %463 = select i1 %461, ptr %462, ptr %460
  %464 = select i1 %461, ptr %332, ptr %330
  %465 = getelementptr i8, ptr %463, i64 8
  %466 = load ptr, ptr %465, align 8, !tbaa !244
  store ptr %466, ptr %331, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %464) #10
  %467 = load ptr, ptr %331, align 8, !tbaa !246
  %468 = getelementptr i8, ptr %467, i64 13
  %469 = load i8, ptr %468, align 1, !tbaa !247
  %470 = and i8 %469, 2
  %471 = icmp eq i8 %470, 0
  br i1 %471, label %472, label %529

472:                                              ; preds = %459
  %473 = getelementptr inbounds %struct.BMVert, ptr %467, i64 0, i32 2
  store ptr %473, ptr %321, align 8, !tbaa !227
  %474 = getelementptr inbounds %struct.BMVert, ptr %467, i64 0, i32 3
  store ptr %474, ptr %322, align 8, !tbaa !231
  %475 = load ptr, ptr %467, align 8, !tbaa !249
  %476 = load i32, ptr %334, align 8, !tbaa !251
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds i8, ptr %475, i64 %477
  br label %479

479:                                              ; preds = %472, %457
  %480 = phi ptr [ %478, %472 ], [ %458, %457 ]
  %481 = phi ptr [ %473, %472 ], [ %448, %457 ]
  store ptr %480, ptr %323, align 8, !tbaa !234
  br label %482

482:                                              ; preds = %479, %453, %426, %418
  %483 = phi ptr [ %448, %453 ], [ %402, %418 ], [ %402, %426 ], [ %481, %479 ]
  %484 = load float, ptr %483, align 4, !tbaa !20
  %485 = fsub fast float %358, %484
  %486 = getelementptr inbounds float, ptr %483, i64 1
  %487 = fmul fast float %485, %485
  %488 = load <2 x float>, ptr %486, align 4, !tbaa !20
  %489 = fsub fast <2 x float> %360, %488
  %490 = fmul fast <2 x float> %489, %489
  %491 = extractelement <2 x float> %490, i64 0
  %492 = fadd fast float %491, %487
  %493 = extractelement <2 x float> %490, i64 1
  %494 = fadd fast float %492, %493
  %495 = fcmp fast ugt float %494, %356
  br i1 %495, label %529, label %496

496:                                              ; preds = %482
  br i1 %371, label %502, label %497

497:                                              ; preds = %496
  %498 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %365, ptr noundef nonnull %483, i8 noundef zeroext 1) #10
  %499 = icmp eq i8 %498, 0
  br i1 %499, label %500, label %529

500:                                              ; preds = %497
  %501 = load ptr, ptr %321, align 8, !tbaa !227
  br label %502

502:                                              ; preds = %500, %496
  %503 = phi ptr [ %501, %500 ], [ %483, %496 ]
  %504 = call fast float @llvm.sqrt.f32(float %494)
  %505 = load ptr, ptr %327, align 8, !tbaa !241
  %506 = load ptr, ptr %322, align 8, !tbaa !231
  %507 = load ptr, ptr %323, align 8, !tbaa !234
  %508 = icmp eq ptr %507, null
  br i1 %508, label %511, label %509

509:                                              ; preds = %502
  %510 = load float, ptr %507, align 4, !tbaa !20
  br label %511

511:                                              ; preds = %509, %502
  %512 = phi fast float [ %510, %509 ], [ 0.000000e+00, %502 ]
  %513 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef %290, ptr noundef %291, ptr noundef %503, float noundef nofpclass(nan inf) %504, ptr noundef %505, ptr noundef %506, float noundef nofpclass(nan inf) %512)
  %514 = load i32, ptr %307, align 4, !tbaa !210
  %515 = sext i32 %514 to i64
  %516 = getelementptr inbounds [3 x float], ptr %349, i64 %515
  %517 = insertelement <2 x float> poison, float %513, i64 0
  %518 = fmul fast <2 x float> %517, %340
  %519 = shufflevector <2 x float> %518, <2 x float> poison, <2 x i32> zeroinitializer
  %520 = fmul fast <2 x float> %519, %339
  store <2 x float> %520, ptr %516, align 4, !tbaa !20
  %521 = fmul fast float %342, %513
  %522 = getelementptr inbounds float, ptr %516, i64 2
  store float %521, ptr %522, align 4, !tbaa !20
  %523 = load ptr, ptr %326, align 8, !tbaa !238
  %524 = icmp eq ptr %523, null
  br i1 %524, label %529, label %525

525:                                              ; preds = %511
  %526 = getelementptr inbounds %struct.MVert, ptr %523, i64 0, i32 2
  %527 = load i8, ptr %526, align 2, !tbaa !239
  %528 = or i8 %527, -128
  store i8 %528, ptr %526, align 2, !tbaa !239
  br label %529

529:                                              ; preds = %525, %511, %497, %482, %459, %442, %426
  %530 = load i32, ptr %319, align 4, !tbaa !226
  %531 = add nsw i32 %530, 1
  store i32 %531, ptr %319, align 4, !tbaa !226
  %532 = load i32, ptr %307, align 4, !tbaa !210
  %533 = add nsw i32 %532, 1
  store i32 %533, ptr %307, align 4, !tbaa !210
  %534 = load i32, ptr %311, align 4, !tbaa !218
  %535 = icmp slt i32 %531, %534
  br i1 %535, label %400, label %536, !llvm.loop !294

536:                                              ; preds = %529
  %537 = load i32, ptr %318, align 8, !tbaa !220
  %538 = load i32, ptr %312, align 8, !tbaa !219
  br label %539

539:                                              ; preds = %536, %395
  %540 = phi i32 [ %396, %395 ], [ %538, %536 ]
  %541 = phi i32 [ %397, %395 ], [ %537, %536 ]
  %542 = phi i32 [ %398, %395 ], [ %534, %536 ]
  %543 = add nsw i32 %541, 1
  store i32 %543, ptr %318, align 8, !tbaa !220
  %544 = icmp slt i32 %543, %540
  br i1 %544, label %395, label %545, !llvm.loop !295

545:                                              ; preds = %539
  %546 = load i32, ptr %36, align 8, !tbaa !214
  %547 = load i32, ptr %308, align 8, !tbaa !215
  br label %548

548:                                              ; preds = %545, %379
  %549 = phi i32 [ %373, %379 ], [ %547, %545 ]
  %550 = phi i32 [ %374, %379 ], [ %546, %545 ]
  %551 = add nsw i32 %550, 1
  store i32 %551, ptr %36, align 8, !tbaa !214
  %552 = icmp slt i32 %551, %549
  br i1 %552, label %372, label %553, !llvm.loop !296

553:                                              ; preds = %548, %343
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %36) #10
  %554 = add nuw nsw i64 %344, 1
  %555 = icmp eq i64 %554, %336
  br i1 %555, label %5193, label %343, !llvm.loop !297

556:                                              ; preds = %285
  %557 = load ptr, ptr %45, align 8, !tbaa !31
  %558 = load i32, ptr %46, align 4, !tbaa !24
  %559 = load ptr, ptr %48, align 8, !tbaa !5
  %560 = getelementptr inbounds %struct.SculptSession, ptr %559, i64 0, i32 28
  %561 = load ptr, ptr %560, align 8, !tbaa !22
  %562 = getelementptr inbounds %struct.StrokeCache, ptr %561, i64 0, i32 19
  %563 = load float, ptr %562, align 8, !tbaa !203
  call fastcc void @smooth(ptr noundef %0, ptr noundef %1, ptr noundef %557, i32 noundef %558, float noundef nofpclass(nan inf) %563, i32 noundef 0)
  br label %5193

564:                                              ; preds = %285
  %565 = load ptr, ptr %45, align 8, !tbaa !31
  %566 = load i32, ptr %46, align 4, !tbaa !24
  %567 = load ptr, ptr %48, align 8, !tbaa !5
  call fastcc void @do_crease_brush(ptr noundef %0, ptr %567, ptr noundef %565, i32 noundef %566)
  br label %5193

568:                                              ; preds = %285
  %569 = load ptr, ptr %45, align 8, !tbaa !31
  %570 = load i32, ptr %46, align 4, !tbaa !24
  %571 = load ptr, ptr %48, align 8, !tbaa !5
  call fastcc void @do_crease_brush(ptr noundef %0, ptr %571, ptr noundef %569, i32 noundef %570)
  br label %5193

572:                                              ; preds = %285
  %573 = load ptr, ptr %45, align 8, !tbaa !31
  %574 = load i32, ptr %46, align 4, !tbaa !24
  %575 = load ptr, ptr %48, align 8, !tbaa !5
  %576 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %577 = getelementptr %struct.SculptSession, ptr %575, i64 0, i32 28
  %578 = load ptr, ptr %577, align 8, !tbaa !22
  %579 = getelementptr inbounds %struct.StrokeCache, ptr %578, i64 0, i32 19
  %580 = load float, ptr %579, align 8, !tbaa !203
  %581 = icmp sgt i32 %574, 0
  br i1 %581, label %582, label %5193

582:                                              ; preds = %572
  %583 = getelementptr inbounds %struct.SculptSession, ptr %575, i64 0, i32 15
  %584 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 5
  %585 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 12
  %586 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 6
  %587 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 13
  %588 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 1
  %589 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 2
  %590 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 11
  %591 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 7
  %592 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 9
  %593 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 10
  %594 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 15
  %595 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 4
  %596 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 3
  %597 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 8
  %598 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 24
  %599 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 26
  %600 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 27
  %601 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 14
  %602 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 16
  %603 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 22
  %604 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 25
  %605 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 17
  %606 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 18, i32 0, i32 1
  %607 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 18
  %608 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 23
  %609 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 19
  %610 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 19, i32 0, i32 1
  %611 = getelementptr inbounds %struct.PBVHVertexIter, ptr %35, i64 0, i32 21
  %612 = zext i32 %574 to i64
  br label %613

613:                                              ; preds = %832, %582
  %614 = phi i64 [ 0, %582 ], [ %833, %832 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %35) #10
  %615 = load ptr, ptr %583, align 8, !tbaa !21
  %616 = getelementptr inbounds ptr, ptr %573, i64 %614
  %617 = load ptr, ptr %616, align 8, !tbaa !31
  %618 = call ptr @BKE_pbvh_node_add_proxy(ptr noundef %615, ptr noundef %617) #10
  %619 = load ptr, ptr %618, align 8, !tbaa !252
  %620 = load ptr, ptr %577, align 8, !tbaa !22
  %621 = getelementptr inbounds %struct.StrokeCache, ptr %620, i64 0, i32 22
  %622 = load ptr, ptr %621, align 8, !tbaa !172
  %623 = getelementptr inbounds %struct.ViewContext, ptr %622, i64 0, i32 5
  %624 = load ptr, ptr %623, align 8, !tbaa !174
  %625 = getelementptr inbounds %struct.StrokeCache, ptr %620, i64 0, i32 12
  %626 = load float, ptr %625, align 4, !tbaa !199
  %627 = getelementptr inbounds %struct.StrokeCache, ptr %620, i64 0, i32 14
  %628 = load <2 x float>, ptr %627, align 4, !tbaa !20
  %629 = getelementptr inbounds %struct.StrokeCache, ptr %620, i64 0, i32 14, i64 2
  %630 = load float, ptr %629, align 4, !tbaa !20
  %631 = getelementptr inbounds %struct.RegionView3D, ptr %624, i64 0, i32 32
  %632 = load i16, ptr %631, align 2, !tbaa !293
  %633 = and i16 %632, 4
  %634 = icmp eq i16 %633, 0
  %635 = select i1 %634, ptr null, ptr %624
  %636 = load ptr, ptr %583, align 8, !tbaa !21
  %637 = load ptr, ptr %616, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %636, ptr noundef %637, ptr noundef nonnull %35, i32 noundef 1) #10
  store i32 0, ptr %584, align 4, !tbaa !210
  store i32 0, ptr %35, align 8, !tbaa !214
  %638 = load i32, ptr %585, align 8, !tbaa !215
  %639 = icmp sgt i32 %638, 0
  br i1 %639, label %640, label %832

640:                                              ; preds = %613
  %641 = icmp eq ptr %635, null
  %642 = extractelement <2 x float> %628, i64 0
  %643 = shufflevector <2 x float> %628, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %644 = insertelement <2 x float> %643, float %630, i64 1
  br label %645

645:                                              ; preds = %827, %640
  %646 = phi i32 [ %638, %640 ], [ %828, %827 ]
  %647 = phi i32 [ 0, %640 ], [ %830, %827 ]
  %648 = load ptr, ptr %586, align 8, !tbaa !216
  %649 = icmp eq ptr %648, null
  br i1 %649, label %650, label %652

650:                                              ; preds = %645
  %651 = load i32, ptr %594, align 8, !tbaa !217
  store i32 %651, ptr %588, align 4, !tbaa !218
  store i32 1, ptr %589, align 8, !tbaa !219
  store i32 0, ptr %595, align 8, !tbaa !220
  br label %665

652:                                              ; preds = %645
  %653 = load i32, ptr %587, align 4, !tbaa !221
  store i32 %653, ptr %588, align 4, !tbaa !218
  store i32 %653, ptr %589, align 8, !tbaa !219
  %654 = load ptr, ptr %590, align 8, !tbaa !222
  %655 = sext i32 %647 to i64
  %656 = getelementptr inbounds i32, ptr %654, i64 %655
  %657 = load i32, ptr %656, align 4, !tbaa !24
  %658 = sext i32 %657 to i64
  %659 = getelementptr inbounds ptr, ptr %648, i64 %658
  %660 = load ptr, ptr %659, align 8, !tbaa !31
  store ptr %660, ptr %591, align 8, !tbaa !223
  %661 = load ptr, ptr %592, align 8, !tbaa !224
  %662 = getelementptr inbounds ptr, ptr %661, i64 %658
  %663 = load ptr, ptr %662, align 8, !tbaa !31
  store ptr %663, ptr %593, align 8, !tbaa !225
  store i32 0, ptr %595, align 8, !tbaa !220
  %664 = icmp sgt i32 %653, 0
  br i1 %664, label %665, label %827

665:                                              ; preds = %652, %650
  %666 = phi i32 [ %653, %652 ], [ 1, %650 ]
  %667 = phi i32 [ %653, %652 ], [ %651, %650 ]
  br label %668

668:                                              ; preds = %665, %818
  %669 = phi i32 [ %819, %818 ], [ %666, %665 ]
  %670 = phi i32 [ %822, %818 ], [ 0, %665 ]
  %671 = phi i32 [ %821, %818 ], [ %667, %665 ]
  store i32 0, ptr %596, align 4, !tbaa !226
  %672 = icmp sgt i32 %671, 0
  br i1 %672, label %673, label %818

673:                                              ; preds = %668, %808
  %674 = phi i32 [ %810, %808 ], [ 0, %668 ]
  %675 = load ptr, ptr %591, align 8, !tbaa !223
  %676 = icmp eq ptr %675, null
  br i1 %676, label %712, label %677

677:                                              ; preds = %673
  store ptr %675, ptr %598, align 8, !tbaa !227
  %678 = load ptr, ptr %597, align 8, !tbaa !228
  %679 = getelementptr i8, ptr %678, i64 20
  %680 = load i32, ptr %679, align 4, !tbaa !229
  %681 = sext i32 %680 to i64
  %682 = getelementptr inbounds i8, ptr %675, i64 %681
  store ptr %682, ptr %599, align 8, !tbaa !231
  %683 = getelementptr inbounds %struct.CCGKey, ptr %678, i64 0, i32 9
  %684 = load i32, ptr %683, align 4, !tbaa !232
  %685 = icmp eq i32 %684, 0
  br i1 %685, label %691, label %686

686:                                              ; preds = %677
  %687 = getelementptr i8, ptr %678, i64 24
  %688 = load i32, ptr %687, align 4, !tbaa !233
  %689 = sext i32 %688 to i64
  %690 = getelementptr inbounds i8, ptr %675, i64 %689
  br label %691

691:                                              ; preds = %686, %677
  %692 = phi ptr [ %690, %686 ], [ null, %677 ]
  store ptr %692, ptr %600, align 8, !tbaa !234
  %693 = getelementptr i8, ptr %678, i64 4
  %694 = load i32, ptr %693, align 4, !tbaa !235
  %695 = sext i32 %694 to i64
  %696 = getelementptr inbounds i8, ptr %675, i64 %695
  store ptr %696, ptr %591, align 8, !tbaa !223
  %697 = load ptr, ptr %593, align 8, !tbaa !225
  %698 = icmp eq ptr %697, null
  br i1 %698, label %755, label %699

699:                                              ; preds = %691
  %700 = load i32, ptr %595, align 8, !tbaa !220
  %701 = load i32, ptr %587, align 4, !tbaa !221
  %702 = mul nsw i32 %701, %700
  %703 = add nsw i32 %702, %674
  %704 = ashr i32 %703, 5
  %705 = sext i32 %704 to i64
  %706 = getelementptr inbounds i32, ptr %697, i64 %705
  %707 = load i32, ptr %706, align 4, !tbaa !24
  %708 = and i32 %703, 31
  %709 = shl nuw i32 1, %708
  %710 = and i32 %709, %707
  %711 = icmp eq i32 %710, 0
  br i1 %711, label %755, label %808

712:                                              ; preds = %673
  %713 = load ptr, ptr %601, align 8, !tbaa !236
  %714 = icmp eq ptr %713, null
  br i1 %714, label %732, label %715

715:                                              ; preds = %712
  %716 = load ptr, ptr %602, align 8, !tbaa !237
  %717 = sext i32 %674 to i64
  %718 = getelementptr inbounds i32, ptr %716, i64 %717
  %719 = load i32, ptr %718, align 4, !tbaa !24
  %720 = sext i32 %719 to i64
  %721 = getelementptr inbounds %struct.MVert, ptr %713, i64 %720
  store ptr %721, ptr %603, align 8, !tbaa !238
  %722 = getelementptr inbounds %struct.MVert, ptr %713, i64 %720, i32 2
  %723 = load i8, ptr %722, align 2, !tbaa !239
  %724 = and i8 %723, 16
  %725 = icmp eq i8 %724, 0
  br i1 %725, label %726, label %808

726:                                              ; preds = %715
  store ptr %721, ptr %598, align 8, !tbaa !227
  %727 = getelementptr inbounds %struct.MVert, ptr %713, i64 %720, i32 1
  store ptr %727, ptr %604, align 8, !tbaa !241
  %728 = load ptr, ptr %605, align 8, !tbaa !242
  %729 = icmp eq ptr %728, null
  br i1 %729, label %755, label %730

730:                                              ; preds = %726
  %731 = getelementptr inbounds float, ptr %728, i64 %720
  br label %752

732:                                              ; preds = %712
  %733 = load ptr, ptr %606, align 8, !tbaa !243
  %734 = icmp eq ptr %733, null
  %735 = load ptr, ptr %610, align 8
  %736 = select i1 %734, ptr %735, ptr %733
  %737 = select i1 %734, ptr %609, ptr %607
  %738 = getelementptr i8, ptr %736, i64 8
  %739 = load ptr, ptr %738, align 8, !tbaa !244
  store ptr %739, ptr %608, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %737) #10
  %740 = load ptr, ptr %608, align 8, !tbaa !246
  %741 = getelementptr i8, ptr %740, i64 13
  %742 = load i8, ptr %741, align 1, !tbaa !247
  %743 = and i8 %742, 2
  %744 = icmp eq i8 %743, 0
  br i1 %744, label %745, label %808

745:                                              ; preds = %732
  %746 = getelementptr inbounds %struct.BMVert, ptr %740, i64 0, i32 2
  store ptr %746, ptr %598, align 8, !tbaa !227
  %747 = getelementptr inbounds %struct.BMVert, ptr %740, i64 0, i32 3
  store ptr %747, ptr %599, align 8, !tbaa !231
  %748 = load ptr, ptr %740, align 8, !tbaa !249
  %749 = load i32, ptr %611, align 8, !tbaa !251
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds i8, ptr %748, i64 %750
  br label %752

752:                                              ; preds = %745, %730
  %753 = phi ptr [ %751, %745 ], [ %731, %730 ]
  %754 = phi ptr [ %746, %745 ], [ %721, %730 ]
  store ptr %753, ptr %600, align 8, !tbaa !234
  br label %755

755:                                              ; preds = %752, %726, %699, %691
  %756 = phi ptr [ %721, %726 ], [ %675, %691 ], [ %675, %699 ], [ %754, %752 ]
  %757 = load float, ptr %756, align 4, !tbaa !20
  %758 = fsub fast float %642, %757
  %759 = getelementptr inbounds float, ptr %756, i64 1
  %760 = fmul fast float %758, %758
  %761 = load <2 x float>, ptr %759, align 4, !tbaa !20
  %762 = fsub fast <2 x float> %644, %761
  %763 = fmul fast <2 x float> %762, %762
  %764 = extractelement <2 x float> %763, i64 0
  %765 = fadd fast float %764, %760
  %766 = extractelement <2 x float> %763, i64 1
  %767 = fadd fast float %765, %766
  %768 = fcmp fast ugt float %767, %626
  br i1 %768, label %808, label %769

769:                                              ; preds = %755
  br i1 %641, label %775, label %770

770:                                              ; preds = %769
  %771 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %635, ptr noundef nonnull %756, i8 noundef zeroext 1) #10
  %772 = icmp eq i8 %771, 0
  br i1 %772, label %773, label %808

773:                                              ; preds = %770
  %774 = load ptr, ptr %598, align 8, !tbaa !227
  br label %775

775:                                              ; preds = %773, %769
  %776 = phi ptr [ %774, %773 ], [ %756, %769 ]
  %777 = call fast float @llvm.sqrt.f32(float %767)
  %778 = load ptr, ptr %604, align 8, !tbaa !241
  %779 = load ptr, ptr %599, align 8, !tbaa !231
  %780 = load ptr, ptr %600, align 8, !tbaa !234
  %781 = icmp eq ptr %780, null
  br i1 %781, label %784, label %782

782:                                              ; preds = %775
  %783 = load float, ptr %780, align 4, !tbaa !20
  br label %784

784:                                              ; preds = %782, %775
  %785 = phi fast float [ %783, %782 ], [ 0.000000e+00, %775 ]
  %786 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef %575, ptr noundef %576, ptr noundef %776, float noundef nofpclass(nan inf) %777, ptr noundef %778, ptr noundef %779, float noundef nofpclass(nan inf) %785)
  %787 = fmul fast float %786, %580
  %788 = load ptr, ptr %598, align 8, !tbaa !227
  %789 = getelementptr inbounds float, ptr %788, i64 2
  %790 = load float, ptr %789, align 4, !tbaa !20
  %791 = fsub fast float %630, %790
  %792 = load i32, ptr %584, align 4, !tbaa !210
  %793 = sext i32 %792 to i64
  %794 = getelementptr inbounds [3 x float], ptr %619, i64 %793
  %795 = load <2 x float>, ptr %788, align 4, !tbaa !20
  %796 = fsub fast <2 x float> %628, %795
  %797 = insertelement <2 x float> poison, float %787, i64 0
  %798 = shufflevector <2 x float> %797, <2 x float> poison, <2 x i32> zeroinitializer
  %799 = fmul fast <2 x float> %796, %798
  store <2 x float> %799, ptr %794, align 4, !tbaa !20
  %800 = fmul fast float %791, %787
  %801 = getelementptr inbounds float, ptr %794, i64 2
  store float %800, ptr %801, align 4, !tbaa !20
  %802 = load ptr, ptr %603, align 8, !tbaa !238
  %803 = icmp eq ptr %802, null
  br i1 %803, label %808, label %804

804:                                              ; preds = %784
  %805 = getelementptr inbounds %struct.MVert, ptr %802, i64 0, i32 2
  %806 = load i8, ptr %805, align 2, !tbaa !239
  %807 = or i8 %806, -128
  store i8 %807, ptr %805, align 2, !tbaa !239
  br label %808

808:                                              ; preds = %804, %784, %770, %755, %732, %715, %699
  %809 = load i32, ptr %596, align 4, !tbaa !226
  %810 = add nsw i32 %809, 1
  store i32 %810, ptr %596, align 4, !tbaa !226
  %811 = load i32, ptr %584, align 4, !tbaa !210
  %812 = add nsw i32 %811, 1
  store i32 %812, ptr %584, align 4, !tbaa !210
  %813 = load i32, ptr %588, align 4, !tbaa !218
  %814 = icmp slt i32 %810, %813
  br i1 %814, label %673, label %815, !llvm.loop !298

815:                                              ; preds = %808
  %816 = load i32, ptr %595, align 8, !tbaa !220
  %817 = load i32, ptr %589, align 8, !tbaa !219
  br label %818

818:                                              ; preds = %815, %668
  %819 = phi i32 [ %669, %668 ], [ %817, %815 ]
  %820 = phi i32 [ %670, %668 ], [ %816, %815 ]
  %821 = phi i32 [ %671, %668 ], [ %813, %815 ]
  %822 = add nsw i32 %820, 1
  store i32 %822, ptr %595, align 8, !tbaa !220
  %823 = icmp slt i32 %822, %819
  br i1 %823, label %668, label %824, !llvm.loop !299

824:                                              ; preds = %818
  %825 = load i32, ptr %35, align 8, !tbaa !214
  %826 = load i32, ptr %585, align 8, !tbaa !215
  br label %827

827:                                              ; preds = %824, %652
  %828 = phi i32 [ %646, %652 ], [ %826, %824 ]
  %829 = phi i32 [ %647, %652 ], [ %825, %824 ]
  %830 = add nsw i32 %829, 1
  store i32 %830, ptr %35, align 8, !tbaa !214
  %831 = icmp slt i32 %830, %828
  br i1 %831, label %645, label %832, !llvm.loop !300

832:                                              ; preds = %827, %613
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %35) #10
  %833 = add nuw nsw i64 %614, 1
  %834 = icmp eq i64 %833, %612
  br i1 %834, label %5193, label %613, !llvm.loop !301

835:                                              ; preds = %285
  %836 = load ptr, ptr %45, align 8, !tbaa !31
  %837 = load i32, ptr %46, align 4, !tbaa !24
  %838 = load ptr, ptr %48, align 8, !tbaa !5
  %839 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %840 = getelementptr %struct.SculptSession, ptr %838, i64 0, i32 28
  %841 = load ptr, ptr %840, align 8, !tbaa !22
  %842 = getelementptr inbounds %struct.StrokeCache, ptr %841, i64 0, i32 19
  %843 = load float, ptr %842, align 8, !tbaa !203
  %844 = icmp sgt i32 %837, 0
  br i1 %844, label %845, label %5193

845:                                              ; preds = %835
  %846 = getelementptr inbounds %struct.SculptSession, ptr %838, i64 0, i32 15
  %847 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 5
  %848 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 12
  %849 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 6
  %850 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 13
  %851 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 1
  %852 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 2
  %853 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 11
  %854 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 7
  %855 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 9
  %856 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 10
  %857 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 15
  %858 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 4
  %859 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 3
  %860 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 8
  %861 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 24
  %862 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 26
  %863 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 27
  %864 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 14
  %865 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 16
  %866 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 22
  %867 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 25
  %868 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 17
  %869 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 18, i32 0, i32 1
  %870 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 18
  %871 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 23
  %872 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 19
  %873 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 19, i32 0, i32 1
  %874 = getelementptr inbounds %struct.PBVHVertexIter, ptr %34, i64 0, i32 21
  %875 = zext i32 %837 to i64
  br label %876

876:                                              ; preds = %1119, %845
  %877 = phi i64 [ 0, %845 ], [ %1120, %1119 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %34) #10
  %878 = load ptr, ptr %846, align 8, !tbaa !21
  %879 = getelementptr inbounds ptr, ptr %836, i64 %877
  %880 = load ptr, ptr %879, align 8, !tbaa !31
  %881 = call ptr @BKE_pbvh_node_add_proxy(ptr noundef %878, ptr noundef %880) #10
  %882 = load ptr, ptr %881, align 8, !tbaa !252
  %883 = load ptr, ptr %840, align 8, !tbaa !22
  %884 = getelementptr inbounds %struct.StrokeCache, ptr %883, i64 0, i32 22
  %885 = load ptr, ptr %884, align 8, !tbaa !172
  %886 = getelementptr inbounds %struct.ViewContext, ptr %885, i64 0, i32 5
  %887 = load ptr, ptr %886, align 8, !tbaa !174
  %888 = getelementptr inbounds %struct.StrokeCache, ptr %883, i64 0, i32 12
  %889 = load float, ptr %888, align 4, !tbaa !199
  %890 = getelementptr inbounds %struct.StrokeCache, ptr %883, i64 0, i32 14
  %891 = load float, ptr %890, align 4, !tbaa !20
  %892 = getelementptr inbounds %struct.StrokeCache, ptr %883, i64 0, i32 14, i64 1
  %893 = load <2 x float>, ptr %892, align 4, !tbaa !20
  %894 = getelementptr inbounds %struct.RegionView3D, ptr %887, i64 0, i32 32
  %895 = load i16, ptr %894, align 2, !tbaa !293
  %896 = and i16 %895, 4
  %897 = icmp eq i16 %896, 0
  %898 = select i1 %897, ptr null, ptr %887
  %899 = load ptr, ptr %846, align 8, !tbaa !21
  %900 = load ptr, ptr %879, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %899, ptr noundef %900, ptr noundef nonnull %34, i32 noundef 1) #10
  store i32 0, ptr %847, align 4, !tbaa !210
  store i32 0, ptr %34, align 8, !tbaa !214
  %901 = load i32, ptr %848, align 8, !tbaa !215
  %902 = icmp sgt i32 %901, 0
  br i1 %902, label %903, label %1119

903:                                              ; preds = %876
  %904 = icmp eq ptr %898, null
  br label %905

905:                                              ; preds = %1114, %903
  %906 = phi i32 [ %901, %903 ], [ %1115, %1114 ]
  %907 = phi i32 [ 0, %903 ], [ %1117, %1114 ]
  %908 = load ptr, ptr %849, align 8, !tbaa !216
  %909 = icmp eq ptr %908, null
  br i1 %909, label %910, label %912

910:                                              ; preds = %905
  %911 = load i32, ptr %857, align 8, !tbaa !217
  store i32 %911, ptr %851, align 4, !tbaa !218
  store i32 1, ptr %852, align 8, !tbaa !219
  store i32 0, ptr %858, align 8, !tbaa !220
  br label %925

912:                                              ; preds = %905
  %913 = load i32, ptr %850, align 4, !tbaa !221
  store i32 %913, ptr %851, align 4, !tbaa !218
  store i32 %913, ptr %852, align 8, !tbaa !219
  %914 = load ptr, ptr %853, align 8, !tbaa !222
  %915 = sext i32 %907 to i64
  %916 = getelementptr inbounds i32, ptr %914, i64 %915
  %917 = load i32, ptr %916, align 4, !tbaa !24
  %918 = sext i32 %917 to i64
  %919 = getelementptr inbounds ptr, ptr %908, i64 %918
  %920 = load ptr, ptr %919, align 8, !tbaa !31
  store ptr %920, ptr %854, align 8, !tbaa !223
  %921 = load ptr, ptr %855, align 8, !tbaa !224
  %922 = getelementptr inbounds ptr, ptr %921, i64 %918
  %923 = load ptr, ptr %922, align 8, !tbaa !31
  store ptr %923, ptr %856, align 8, !tbaa !225
  store i32 0, ptr %858, align 8, !tbaa !220
  %924 = icmp sgt i32 %913, 0
  br i1 %924, label %925, label %1114

925:                                              ; preds = %912, %910
  %926 = phi i32 [ %913, %912 ], [ 1, %910 ]
  %927 = phi i32 [ %913, %912 ], [ %911, %910 ]
  br label %928

928:                                              ; preds = %925, %1105
  %929 = phi i32 [ %1106, %1105 ], [ %926, %925 ]
  %930 = phi i32 [ %1109, %1105 ], [ 0, %925 ]
  %931 = phi i32 [ %1108, %1105 ], [ %927, %925 ]
  store i32 0, ptr %859, align 4, !tbaa !226
  %932 = icmp sgt i32 %931, 0
  br i1 %932, label %933, label %1105

933:                                              ; preds = %928, %1095
  %934 = phi i32 [ %1097, %1095 ], [ 0, %928 ]
  %935 = load ptr, ptr %854, align 8, !tbaa !223
  %936 = icmp eq ptr %935, null
  br i1 %936, label %972, label %937

937:                                              ; preds = %933
  store ptr %935, ptr %861, align 8, !tbaa !227
  %938 = load ptr, ptr %860, align 8, !tbaa !228
  %939 = getelementptr i8, ptr %938, i64 20
  %940 = load i32, ptr %939, align 4, !tbaa !229
  %941 = sext i32 %940 to i64
  %942 = getelementptr inbounds i8, ptr %935, i64 %941
  store ptr %942, ptr %862, align 8, !tbaa !231
  %943 = getelementptr inbounds %struct.CCGKey, ptr %938, i64 0, i32 9
  %944 = load i32, ptr %943, align 4, !tbaa !232
  %945 = icmp eq i32 %944, 0
  br i1 %945, label %951, label %946

946:                                              ; preds = %937
  %947 = getelementptr i8, ptr %938, i64 24
  %948 = load i32, ptr %947, align 4, !tbaa !233
  %949 = sext i32 %948 to i64
  %950 = getelementptr inbounds i8, ptr %935, i64 %949
  br label %951

951:                                              ; preds = %946, %937
  %952 = phi ptr [ %950, %946 ], [ null, %937 ]
  store ptr %952, ptr %863, align 8, !tbaa !234
  %953 = getelementptr i8, ptr %938, i64 4
  %954 = load i32, ptr %953, align 4, !tbaa !235
  %955 = sext i32 %954 to i64
  %956 = getelementptr inbounds i8, ptr %935, i64 %955
  store ptr %956, ptr %854, align 8, !tbaa !223
  %957 = load ptr, ptr %856, align 8, !tbaa !225
  %958 = icmp eq ptr %957, null
  br i1 %958, label %1015, label %959

959:                                              ; preds = %951
  %960 = load i32, ptr %858, align 8, !tbaa !220
  %961 = load i32, ptr %850, align 4, !tbaa !221
  %962 = mul nsw i32 %961, %960
  %963 = add nsw i32 %962, %934
  %964 = ashr i32 %963, 5
  %965 = sext i32 %964 to i64
  %966 = getelementptr inbounds i32, ptr %957, i64 %965
  %967 = load i32, ptr %966, align 4, !tbaa !24
  %968 = and i32 %963, 31
  %969 = shl nuw i32 1, %968
  %970 = and i32 %969, %967
  %971 = icmp eq i32 %970, 0
  br i1 %971, label %1015, label %1095

972:                                              ; preds = %933
  %973 = load ptr, ptr %864, align 8, !tbaa !236
  %974 = icmp eq ptr %973, null
  br i1 %974, label %992, label %975

975:                                              ; preds = %972
  %976 = load ptr, ptr %865, align 8, !tbaa !237
  %977 = sext i32 %934 to i64
  %978 = getelementptr inbounds i32, ptr %976, i64 %977
  %979 = load i32, ptr %978, align 4, !tbaa !24
  %980 = sext i32 %979 to i64
  %981 = getelementptr inbounds %struct.MVert, ptr %973, i64 %980
  store ptr %981, ptr %866, align 8, !tbaa !238
  %982 = getelementptr inbounds %struct.MVert, ptr %973, i64 %980, i32 2
  %983 = load i8, ptr %982, align 2, !tbaa !239
  %984 = and i8 %983, 16
  %985 = icmp eq i8 %984, 0
  br i1 %985, label %986, label %1095

986:                                              ; preds = %975
  store ptr %981, ptr %861, align 8, !tbaa !227
  %987 = getelementptr inbounds %struct.MVert, ptr %973, i64 %980, i32 1
  store ptr %987, ptr %867, align 8, !tbaa !241
  %988 = load ptr, ptr %868, align 8, !tbaa !242
  %989 = icmp eq ptr %988, null
  br i1 %989, label %1015, label %990

990:                                              ; preds = %986
  %991 = getelementptr inbounds float, ptr %988, i64 %980
  br label %1012

992:                                              ; preds = %972
  %993 = load ptr, ptr %869, align 8, !tbaa !243
  %994 = icmp eq ptr %993, null
  %995 = load ptr, ptr %873, align 8
  %996 = select i1 %994, ptr %995, ptr %993
  %997 = select i1 %994, ptr %872, ptr %870
  %998 = getelementptr i8, ptr %996, i64 8
  %999 = load ptr, ptr %998, align 8, !tbaa !244
  store ptr %999, ptr %871, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %997) #10
  %1000 = load ptr, ptr %871, align 8, !tbaa !246
  %1001 = getelementptr i8, ptr %1000, i64 13
  %1002 = load i8, ptr %1001, align 1, !tbaa !247
  %1003 = and i8 %1002, 2
  %1004 = icmp eq i8 %1003, 0
  br i1 %1004, label %1005, label %1095

1005:                                             ; preds = %992
  %1006 = getelementptr inbounds %struct.BMVert, ptr %1000, i64 0, i32 2
  store ptr %1006, ptr %861, align 8, !tbaa !227
  %1007 = getelementptr inbounds %struct.BMVert, ptr %1000, i64 0, i32 3
  store ptr %1007, ptr %862, align 8, !tbaa !231
  %1008 = load ptr, ptr %1000, align 8, !tbaa !249
  %1009 = load i32, ptr %874, align 8, !tbaa !251
  %1010 = sext i32 %1009 to i64
  %1011 = getelementptr inbounds i8, ptr %1008, i64 %1010
  br label %1012

1012:                                             ; preds = %1005, %990
  %1013 = phi ptr [ %1011, %1005 ], [ %991, %990 ]
  %1014 = phi ptr [ %1006, %1005 ], [ %981, %990 ]
  store ptr %1013, ptr %863, align 8, !tbaa !234
  br label %1015

1015:                                             ; preds = %1012, %986, %959, %951
  %1016 = phi ptr [ %981, %986 ], [ %935, %951 ], [ %935, %959 ], [ %1014, %1012 ]
  %1017 = load float, ptr %1016, align 4, !tbaa !20
  %1018 = fsub fast float %891, %1017
  %1019 = getelementptr inbounds float, ptr %1016, i64 1
  %1020 = fmul fast float %1018, %1018
  %1021 = load <2 x float>, ptr %1019, align 4, !tbaa !20
  %1022 = fsub fast <2 x float> %893, %1021
  %1023 = fmul fast <2 x float> %1022, %1022
  %1024 = extractelement <2 x float> %1023, i64 0
  %1025 = fadd fast float %1024, %1020
  %1026 = extractelement <2 x float> %1023, i64 1
  %1027 = fadd fast float %1025, %1026
  %1028 = fcmp fast ugt float %1027, %889
  br i1 %1028, label %1095, label %1029

1029:                                             ; preds = %1015
  br i1 %904, label %1035, label %1030

1030:                                             ; preds = %1029
  %1031 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %898, ptr noundef nonnull %1016, i8 noundef zeroext 1) #10
  %1032 = icmp eq i8 %1031, 0
  br i1 %1032, label %1033, label %1095

1033:                                             ; preds = %1030
  %1034 = load ptr, ptr %861, align 8, !tbaa !227
  br label %1035

1035:                                             ; preds = %1033, %1029
  %1036 = phi ptr [ %1034, %1033 ], [ %1016, %1029 ]
  %1037 = call fast float @llvm.sqrt.f32(float %1027)
  %1038 = load ptr, ptr %867, align 8, !tbaa !241
  %1039 = load ptr, ptr %862, align 8, !tbaa !231
  %1040 = load ptr, ptr %863, align 8, !tbaa !234
  %1041 = icmp eq ptr %1040, null
  br i1 %1041, label %1044, label %1042

1042:                                             ; preds = %1035
  %1043 = load float, ptr %1040, align 4, !tbaa !20
  br label %1044

1044:                                             ; preds = %1042, %1035
  %1045 = phi fast float [ %1043, %1042 ], [ 0.000000e+00, %1035 ]
  %1046 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef %838, ptr noundef %839, ptr noundef %1036, float noundef nofpclass(nan inf) %1037, ptr noundef %1038, ptr noundef %1039, float noundef nofpclass(nan inf) %1045)
  %1047 = fmul fast float %1046, %843
  %1048 = load ptr, ptr %862, align 8, !tbaa !231
  %1049 = icmp eq ptr %1048, null
  br i1 %1049, label %1054, label %1050

1050:                                             ; preds = %1044
  %1051 = load <2 x float>, ptr %1048, align 4, !tbaa !20
  %1052 = getelementptr inbounds float, ptr %1048, i64 2
  %1053 = load float, ptr %1052, align 4, !tbaa !20
  br label %1063

1054:                                             ; preds = %1044
  %1055 = load ptr, ptr %867, align 8, !tbaa !241
  %1056 = load <2 x i16>, ptr %1055, align 2, !tbaa !302
  %1057 = sitofp <2 x i16> %1056 to <2 x float>
  %1058 = fmul fast <2 x float> %1057, <float 0x3F00002000000000, float 0x3F00002000000000>
  %1059 = getelementptr inbounds i16, ptr %1055, i64 2
  %1060 = load i16, ptr %1059, align 2, !tbaa !302
  %1061 = sitofp i16 %1060 to float
  %1062 = fmul fast float %1061, 0x3F00002000000000
  br label %1063

1063:                                             ; preds = %1054, %1050
  %1064 = phi float [ %1062, %1054 ], [ %1053, %1050 ]
  %1065 = phi <2 x float> [ %1058, %1054 ], [ %1051, %1050 ]
  %1066 = load ptr, ptr %840, align 8, !tbaa !22
  %1067 = getelementptr inbounds %struct.StrokeCache, ptr %1066, i64 0, i32 11
  %1068 = load float, ptr %1067, align 8, !tbaa !198
  %1069 = fmul fast float %1047, %1068
  %1070 = extractelement <2 x float> %1065, i64 0
  %1071 = fmul fast float %1069, %1070
  %1072 = extractelement <2 x float> %1065, i64 1
  %1073 = fmul fast float %1069, %1072
  %1074 = fmul fast float %1069, %1064
  %1075 = load i32, ptr %847, align 4, !tbaa !210
  %1076 = sext i32 %1075 to i64
  %1077 = getelementptr inbounds [3 x float], ptr %882, i64 %1076
  %1078 = getelementptr inbounds %struct.StrokeCache, ptr %1066, i64 0, i32 1
  %1079 = load float, ptr %1078, align 4, !tbaa !20
  %1080 = fmul fast float %1071, %1079
  store float %1080, ptr %1077, align 4, !tbaa !20
  %1081 = getelementptr inbounds %struct.StrokeCache, ptr %1066, i64 0, i32 1, i64 1
  %1082 = load float, ptr %1081, align 4, !tbaa !20
  %1083 = fmul fast float %1073, %1082
  %1084 = getelementptr inbounds float, ptr %1077, i64 1
  store float %1083, ptr %1084, align 4, !tbaa !20
  %1085 = getelementptr inbounds %struct.StrokeCache, ptr %1066, i64 0, i32 1, i64 2
  %1086 = load float, ptr %1085, align 4, !tbaa !20
  %1087 = fmul fast float %1074, %1086
  %1088 = getelementptr inbounds float, ptr %1077, i64 2
  store float %1087, ptr %1088, align 4, !tbaa !20
  %1089 = load ptr, ptr %866, align 8, !tbaa !238
  %1090 = icmp eq ptr %1089, null
  br i1 %1090, label %1095, label %1091

1091:                                             ; preds = %1063
  %1092 = getelementptr inbounds %struct.MVert, ptr %1089, i64 0, i32 2
  %1093 = load i8, ptr %1092, align 2, !tbaa !239
  %1094 = or i8 %1093, -128
  store i8 %1094, ptr %1092, align 2, !tbaa !239
  br label %1095

1095:                                             ; preds = %1091, %1063, %1030, %1015, %992, %975, %959
  %1096 = load i32, ptr %859, align 4, !tbaa !226
  %1097 = add nsw i32 %1096, 1
  store i32 %1097, ptr %859, align 4, !tbaa !226
  %1098 = load i32, ptr %847, align 4, !tbaa !210
  %1099 = add nsw i32 %1098, 1
  store i32 %1099, ptr %847, align 4, !tbaa !210
  %1100 = load i32, ptr %851, align 4, !tbaa !218
  %1101 = icmp slt i32 %1097, %1100
  br i1 %1101, label %933, label %1102, !llvm.loop !303

1102:                                             ; preds = %1095
  %1103 = load i32, ptr %858, align 8, !tbaa !220
  %1104 = load i32, ptr %852, align 8, !tbaa !219
  br label %1105

1105:                                             ; preds = %1102, %928
  %1106 = phi i32 [ %929, %928 ], [ %1104, %1102 ]
  %1107 = phi i32 [ %930, %928 ], [ %1103, %1102 ]
  %1108 = phi i32 [ %931, %928 ], [ %1100, %1102 ]
  %1109 = add nsw i32 %1107, 1
  store i32 %1109, ptr %858, align 8, !tbaa !220
  %1110 = icmp slt i32 %1109, %1106
  br i1 %1110, label %928, label %1111, !llvm.loop !304

1111:                                             ; preds = %1105
  %1112 = load i32, ptr %34, align 8, !tbaa !214
  %1113 = load i32, ptr %848, align 8, !tbaa !215
  br label %1114

1114:                                             ; preds = %1111, %912
  %1115 = phi i32 [ %906, %912 ], [ %1113, %1111 ]
  %1116 = phi i32 [ %907, %912 ], [ %1112, %1111 ]
  %1117 = add nsw i32 %1116, 1
  store i32 %1117, ptr %34, align 8, !tbaa !214
  %1118 = icmp slt i32 %1117, %1115
  br i1 %1118, label %905, label %1119, !llvm.loop !305

1119:                                             ; preds = %1114, %876
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %34) #10
  %1120 = add nuw nsw i64 %877, 1
  %1121 = icmp eq i64 %1120, %875
  br i1 %1121, label %5193, label %876, !llvm.loop !306

1122:                                             ; preds = %285
  %1123 = load ptr, ptr %45, align 8, !tbaa !31
  %1124 = load i32, ptr %46, align 4, !tbaa !24
  %1125 = load ptr, ptr %48, align 8, !tbaa !5
  %1126 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %1127 = getelementptr %struct.SculptSession, ptr %1125, i64 0, i32 28
  %1128 = load ptr, ptr %1127, align 8, !tbaa !22
  %1129 = getelementptr inbounds %struct.StrokeCache, ptr %1128, i64 0, i32 19
  %1130 = load float, ptr %1129, align 8, !tbaa !203
  %1131 = getelementptr inbounds %struct.StrokeCache, ptr %1128, i64 0, i32 27
  %1132 = load <2 x float>, ptr %1131, align 4, !tbaa !20
  %1133 = getelementptr inbounds %struct.StrokeCache, ptr %1128, i64 0, i32 27, i64 2
  %1134 = load float, ptr %1133, align 4, !tbaa !20
  %1135 = getelementptr inbounds %struct.Brush, ptr %1126, i64 0, i32 11
  %1136 = load float, ptr %1135, align 8, !tbaa !289
  %1137 = fcmp fast ogt float %1136, 0.000000e+00
  br i1 %1137, label %1138, label %1163

1138:                                             ; preds = %1122
  %1139 = fmul fast <2 x float> %1132, %1132
  %1140 = shufflevector <2 x float> %1139, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %1141 = fadd fast <2 x float> %1140, %1139
  %1142 = extractelement <2 x float> %1141, i64 0
  %1143 = fmul fast float %1134, %1134
  %1144 = fadd fast float %1142, %1143
  %1145 = call fast float @llvm.sqrt.f32(float %1144)
  %1146 = getelementptr inbounds %struct.StrokeCache, ptr %1128, i64 0, i32 35
  %1147 = fmul fast float %1145, %1136
  %1148 = getelementptr inbounds %struct.StrokeCache, ptr %1128, i64 0, i32 35, i64 2
  %1149 = load float, ptr %1148, align 4, !tbaa !20
  %1150 = fmul fast float %1149, %1147
  store float %1150, ptr %1148, align 4, !tbaa !20
  %1151 = load <2 x float>, ptr %1146, align 4, !tbaa !20
  %1152 = insertelement <2 x float> poison, float %1147, i64 0
  %1153 = shufflevector <2 x float> %1152, <2 x float> poison, <2 x i32> zeroinitializer
  %1154 = fmul fast <2 x float> %1151, %1153
  store <2 x float> %1154, ptr %1146, align 4, !tbaa !20
  %1155 = load float, ptr %1135, align 8, !tbaa !289
  %1156 = fsub fast float 1.000000e+00, %1155
  %1157 = insertelement <2 x float> poison, float %1156, i64 0
  %1158 = shufflevector <2 x float> %1157, <2 x float> poison, <2 x i32> zeroinitializer
  %1159 = fmul fast <2 x float> %1158, %1132
  %1160 = fmul fast float %1156, %1134
  %1161 = fadd fast <2 x float> %1159, %1154
  %1162 = fadd fast float %1160, %1150
  br label %1163

1163:                                             ; preds = %1138, %1122
  %1164 = phi float [ %1162, %1138 ], [ %1134, %1122 ]
  %1165 = phi <2 x float> [ %1161, %1138 ], [ %1132, %1122 ]
  %1166 = icmp sgt i32 %1124, 0
  br i1 %1166, label %1167, label %5193

1167:                                             ; preds = %1163
  %1168 = getelementptr inbounds %struct.SculptSession, ptr %1125, i64 0, i32 15
  %1169 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 5
  %1170 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 12
  %1171 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 6
  %1172 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 13
  %1173 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 1
  %1174 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 2
  %1175 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 11
  %1176 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 7
  %1177 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 9
  %1178 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 10
  %1179 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 15
  %1180 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 4
  %1181 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 3
  %1182 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 8
  %1183 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 24
  %1184 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 26
  %1185 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 27
  %1186 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 14
  %1187 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 16
  %1188 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 22
  %1189 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 25
  %1190 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 17
  %1191 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 18, i32 0, i32 1
  %1192 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 18
  %1193 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 23
  %1194 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 19
  %1195 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 19, i32 0, i32 1
  %1196 = getelementptr inbounds %struct.PBVHVertexIter, ptr %33, i64 0, i32 21
  %1197 = zext i32 %1124 to i64
  br label %1198

1198:                                             ; preds = %1463, %1167
  %1199 = phi i64 [ 0, %1167 ], [ %1464, %1463 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %33) #10
  %1200 = getelementptr inbounds ptr, ptr %1123, i64 %1199
  %1201 = load ptr, ptr %1200, align 8, !tbaa !31
  %1202 = call ptr @sculpt_undo_push_node(ptr noundef %1, ptr noundef %1201, i32 noundef 0) #10
  %1203 = load ptr, ptr %48, align 8, !tbaa !5
  %1204 = getelementptr inbounds %struct.SculptSession, ptr %1203, i64 0, i32 10
  %1205 = load ptr, ptr %1204, align 8, !tbaa !86
  %1206 = icmp eq ptr %1205, null
  br i1 %1206, label %1210, label %1207

1207:                                             ; preds = %1198
  %1208 = getelementptr inbounds %struct.SculptSession, ptr %1203, i64 0, i32 14
  %1209 = load ptr, ptr %1208, align 8, !tbaa !119
  br label %1217

1210:                                             ; preds = %1198
  %1211 = getelementptr inbounds %struct.SculptUndoNode, ptr %1202, i64 0, i32 5
  %1212 = load ptr, ptr %1211, align 8, !tbaa !80
  %1213 = getelementptr inbounds %struct.SculptUndoNode, ptr %1202, i64 0, i32 7
  %1214 = load ptr, ptr %1213, align 8, !tbaa !307
  %1215 = getelementptr inbounds %struct.SculptUndoNode, ptr %1202, i64 0, i32 8
  %1216 = load ptr, ptr %1215, align 8, !tbaa !308
  br label %1217

1217:                                             ; preds = %1210, %1207
  %1218 = phi ptr [ null, %1210 ], [ %1209, %1207 ]
  %1219 = phi ptr [ %1212, %1210 ], [ null, %1207 ]
  %1220 = phi ptr [ %1214, %1210 ], [ null, %1207 ]
  %1221 = phi ptr [ %1216, %1210 ], [ null, %1207 ]
  %1222 = load ptr, ptr %1168, align 8, !tbaa !21
  %1223 = load ptr, ptr %1200, align 8, !tbaa !31
  %1224 = call ptr @BKE_pbvh_node_add_proxy(ptr noundef %1222, ptr noundef %1223) #10
  %1225 = load ptr, ptr %1224, align 8, !tbaa !252
  %1226 = load ptr, ptr %1127, align 8, !tbaa !22
  %1227 = getelementptr inbounds %struct.StrokeCache, ptr %1226, i64 0, i32 22
  %1228 = load ptr, ptr %1227, align 8, !tbaa !172
  %1229 = getelementptr inbounds %struct.ViewContext, ptr %1228, i64 0, i32 5
  %1230 = load ptr, ptr %1229, align 8, !tbaa !174
  %1231 = getelementptr inbounds %struct.StrokeCache, ptr %1226, i64 0, i32 12
  %1232 = load float, ptr %1231, align 4, !tbaa !199
  %1233 = getelementptr inbounds %struct.StrokeCache, ptr %1226, i64 0, i32 14
  %1234 = load float, ptr %1233, align 4, !tbaa !20
  %1235 = getelementptr inbounds %struct.StrokeCache, ptr %1226, i64 0, i32 14, i64 1
  %1236 = load <2 x float>, ptr %1235, align 4, !tbaa !20
  %1237 = getelementptr inbounds %struct.RegionView3D, ptr %1230, i64 0, i32 32
  %1238 = load i16, ptr %1237, align 2, !tbaa !293
  %1239 = and i16 %1238, 4
  %1240 = icmp eq i16 %1239, 0
  %1241 = select i1 %1240, ptr null, ptr %1230
  %1242 = load ptr, ptr %1168, align 8, !tbaa !21
  %1243 = load ptr, ptr %1200, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %1242, ptr noundef %1243, ptr noundef nonnull %33, i32 noundef 1) #10
  store i32 0, ptr %1169, align 4, !tbaa !210
  store i32 0, ptr %33, align 8, !tbaa !214
  %1244 = load i32, ptr %1170, align 8, !tbaa !215
  %1245 = icmp sgt i32 %1244, 0
  br i1 %1245, label %1246, label %1463

1246:                                             ; preds = %1217
  %1247 = getelementptr inbounds %struct.SculptUndoNode, ptr %1202, i64 0, i32 2
  %1248 = icmp eq ptr %1221, null
  %1249 = icmp eq ptr %1219, null
  %1250 = icmp eq ptr %1220, null
  %1251 = icmp eq ptr %1241, null
  br label %1252

1252:                                             ; preds = %1456, %1246
  %1253 = phi i32 [ %1244, %1246 ], [ %1457, %1456 ]
  %1254 = phi i32 [ 0, %1246 ], [ %1461, %1456 ]
  %1255 = phi ptr [ null, %1246 ], [ %1460, %1456 ]
  %1256 = phi ptr [ null, %1246 ], [ %1459, %1456 ]
  %1257 = load ptr, ptr %1171, align 8, !tbaa !216
  %1258 = icmp eq ptr %1257, null
  br i1 %1258, label %1259, label %1261

1259:                                             ; preds = %1252
  %1260 = load i32, ptr %1179, align 8, !tbaa !217
  store i32 %1260, ptr %1173, align 4, !tbaa !218
  store i32 1, ptr %1174, align 8, !tbaa !219
  store i32 0, ptr %1180, align 8, !tbaa !220
  br label %1274

1261:                                             ; preds = %1252
  %1262 = load i32, ptr %1172, align 4, !tbaa !221
  store i32 %1262, ptr %1173, align 4, !tbaa !218
  store i32 %1262, ptr %1174, align 8, !tbaa !219
  %1263 = load ptr, ptr %1175, align 8, !tbaa !222
  %1264 = sext i32 %1254 to i64
  %1265 = getelementptr inbounds i32, ptr %1263, i64 %1264
  %1266 = load i32, ptr %1265, align 4, !tbaa !24
  %1267 = sext i32 %1266 to i64
  %1268 = getelementptr inbounds ptr, ptr %1257, i64 %1267
  %1269 = load ptr, ptr %1268, align 8, !tbaa !31
  store ptr %1269, ptr %1176, align 8, !tbaa !223
  %1270 = load ptr, ptr %1177, align 8, !tbaa !224
  %1271 = getelementptr inbounds ptr, ptr %1270, i64 %1267
  %1272 = load ptr, ptr %1271, align 8, !tbaa !31
  store ptr %1272, ptr %1178, align 8, !tbaa !225
  store i32 0, ptr %1180, align 8, !tbaa !220
  %1273 = icmp sgt i32 %1262, 0
  br i1 %1273, label %1274, label %1456

1274:                                             ; preds = %1261, %1259
  %1275 = phi i32 [ %1262, %1261 ], [ 1, %1259 ]
  %1276 = phi i32 [ %1262, %1261 ], [ %1260, %1259 ]
  br label %1277

1277:                                             ; preds = %1274, %1445
  %1278 = phi i32 [ %1446, %1445 ], [ %1275, %1274 ]
  %1279 = phi i32 [ %1451, %1445 ], [ 0, %1274 ]
  %1280 = phi i32 [ %1448, %1445 ], [ %1276, %1274 ]
  %1281 = phi ptr [ %1450, %1445 ], [ %1255, %1274 ]
  %1282 = phi ptr [ %1449, %1445 ], [ %1256, %1274 ]
  store i32 0, ptr %1181, align 4, !tbaa !226
  %1283 = icmp sgt i32 %1280, 0
  br i1 %1283, label %1284, label %1445

1284:                                             ; preds = %1277, %1433
  %1285 = phi i32 [ %1437, %1433 ], [ 0, %1277 ]
  %1286 = phi ptr [ %1435, %1433 ], [ %1281, %1277 ]
  %1287 = phi ptr [ %1434, %1433 ], [ %1282, %1277 ]
  %1288 = load ptr, ptr %1176, align 8, !tbaa !223
  %1289 = icmp eq ptr %1288, null
  br i1 %1289, label %1325, label %1290

1290:                                             ; preds = %1284
  store ptr %1288, ptr %1183, align 8, !tbaa !227
  %1291 = load ptr, ptr %1182, align 8, !tbaa !228
  %1292 = getelementptr i8, ptr %1291, i64 20
  %1293 = load i32, ptr %1292, align 4, !tbaa !229
  %1294 = sext i32 %1293 to i64
  %1295 = getelementptr inbounds i8, ptr %1288, i64 %1294
  store ptr %1295, ptr %1184, align 8, !tbaa !231
  %1296 = getelementptr inbounds %struct.CCGKey, ptr %1291, i64 0, i32 9
  %1297 = load i32, ptr %1296, align 4, !tbaa !232
  %1298 = icmp eq i32 %1297, 0
  br i1 %1298, label %1304, label %1299

1299:                                             ; preds = %1290
  %1300 = getelementptr i8, ptr %1291, i64 24
  %1301 = load i32, ptr %1300, align 4, !tbaa !233
  %1302 = sext i32 %1301 to i64
  %1303 = getelementptr inbounds i8, ptr %1288, i64 %1302
  br label %1304

1304:                                             ; preds = %1299, %1290
  %1305 = phi ptr [ %1303, %1299 ], [ null, %1290 ]
  store ptr %1305, ptr %1185, align 8, !tbaa !234
  %1306 = getelementptr i8, ptr %1291, i64 4
  %1307 = load i32, ptr %1306, align 4, !tbaa !235
  %1308 = sext i32 %1307 to i64
  %1309 = getelementptr inbounds i8, ptr %1288, i64 %1308
  store ptr %1309, ptr %1176, align 8, !tbaa !223
  %1310 = load ptr, ptr %1178, align 8, !tbaa !225
  %1311 = icmp eq ptr %1310, null
  br i1 %1311, label %1367, label %1312

1312:                                             ; preds = %1304
  %1313 = load i32, ptr %1180, align 8, !tbaa !220
  %1314 = load i32, ptr %1172, align 4, !tbaa !221
  %1315 = mul nsw i32 %1314, %1313
  %1316 = add nsw i32 %1315, %1285
  %1317 = ashr i32 %1316, 5
  %1318 = sext i32 %1317 to i64
  %1319 = getelementptr inbounds i32, ptr %1310, i64 %1318
  %1320 = load i32, ptr %1319, align 4, !tbaa !24
  %1321 = and i32 %1316, 31
  %1322 = shl nuw i32 1, %1321
  %1323 = and i32 %1322, %1320
  %1324 = icmp eq i32 %1323, 0
  br i1 %1324, label %1367, label %1433

1325:                                             ; preds = %1284
  %1326 = load ptr, ptr %1186, align 8, !tbaa !236
  %1327 = icmp eq ptr %1326, null
  br i1 %1327, label %1345, label %1328

1328:                                             ; preds = %1325
  %1329 = load ptr, ptr %1187, align 8, !tbaa !237
  %1330 = sext i32 %1285 to i64
  %1331 = getelementptr inbounds i32, ptr %1329, i64 %1330
  %1332 = load i32, ptr %1331, align 4, !tbaa !24
  %1333 = sext i32 %1332 to i64
  %1334 = getelementptr inbounds %struct.MVert, ptr %1326, i64 %1333
  store ptr %1334, ptr %1188, align 8, !tbaa !238
  %1335 = getelementptr inbounds %struct.MVert, ptr %1326, i64 %1333, i32 2
  %1336 = load i8, ptr %1335, align 2, !tbaa !239
  %1337 = and i8 %1336, 16
  %1338 = icmp eq i8 %1337, 0
  br i1 %1338, label %1339, label %1433

1339:                                             ; preds = %1328
  store ptr %1334, ptr %1183, align 8, !tbaa !227
  %1340 = getelementptr inbounds %struct.MVert, ptr %1326, i64 %1333, i32 1
  store ptr %1340, ptr %1189, align 8, !tbaa !241
  %1341 = load ptr, ptr %1190, align 8, !tbaa !242
  %1342 = icmp eq ptr %1341, null
  br i1 %1342, label %1367, label %1343

1343:                                             ; preds = %1339
  %1344 = getelementptr inbounds float, ptr %1341, i64 %1333
  br label %1365

1345:                                             ; preds = %1325
  %1346 = load ptr, ptr %1191, align 8, !tbaa !243
  %1347 = icmp eq ptr %1346, null
  %1348 = load ptr, ptr %1195, align 8
  %1349 = select i1 %1347, ptr %1348, ptr %1346
  %1350 = select i1 %1347, ptr %1194, ptr %1192
  %1351 = getelementptr i8, ptr %1349, i64 8
  %1352 = load ptr, ptr %1351, align 8, !tbaa !244
  store ptr %1352, ptr %1193, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %1350) #10
  %1353 = load ptr, ptr %1193, align 8, !tbaa !246
  %1354 = getelementptr i8, ptr %1353, i64 13
  %1355 = load i8, ptr %1354, align 1, !tbaa !247
  %1356 = and i8 %1355, 2
  %1357 = icmp eq i8 %1356, 0
  br i1 %1357, label %1358, label %1433

1358:                                             ; preds = %1345
  %1359 = getelementptr inbounds %struct.BMVert, ptr %1353, i64 0, i32 2
  store ptr %1359, ptr %1183, align 8, !tbaa !227
  %1360 = getelementptr inbounds %struct.BMVert, ptr %1353, i64 0, i32 3
  store ptr %1360, ptr %1184, align 8, !tbaa !231
  %1361 = load ptr, ptr %1353, align 8, !tbaa !249
  %1362 = load i32, ptr %1196, align 8, !tbaa !251
  %1363 = sext i32 %1362 to i64
  %1364 = getelementptr inbounds i8, ptr %1361, i64 %1363
  br label %1365

1365:                                             ; preds = %1358, %1343
  %1366 = phi ptr [ %1364, %1358 ], [ %1344, %1343 ]
  store ptr %1366, ptr %1185, align 8, !tbaa !234
  br label %1367

1367:                                             ; preds = %1365, %1339, %1312, %1304
  %1368 = load i32, ptr %1247, align 8, !tbaa !309
  switch i32 %1368, label %1390 [
    i32 0, label %1369
    i32 2, label %1386
  ]

1369:                                             ; preds = %1367
  br i1 %1249, label %1374, label %1370

1370:                                             ; preds = %1369
  %1371 = load i32, ptr %1169, align 4, !tbaa !210
  %1372 = sext i32 %1371 to i64
  %1373 = getelementptr inbounds [3 x float], ptr %1219, i64 %1372
  br label %1377

1374:                                             ; preds = %1369
  %1375 = load ptr, ptr %1193, align 8, !tbaa !246
  %1376 = call ptr @BM_log_original_vert_co(ptr noundef %1218, ptr noundef %1375) #10
  br label %1377

1377:                                             ; preds = %1374, %1370
  %1378 = phi ptr [ %1376, %1374 ], [ %1373, %1370 ]
  br i1 %1250, label %1383, label %1379

1379:                                             ; preds = %1377
  %1380 = load i32, ptr %1169, align 4, !tbaa !210
  %1381 = sext i32 %1380 to i64
  %1382 = getelementptr inbounds [3 x i16], ptr %1220, i64 %1381
  br label %1390

1383:                                             ; preds = %1377
  %1384 = load ptr, ptr %1193, align 8, !tbaa !246
  %1385 = call ptr @BM_log_original_vert_no(ptr noundef %1218, ptr noundef %1384) #10
  br label %1390

1386:                                             ; preds = %1367
  br i1 %1248, label %1387, label %1390

1387:                                             ; preds = %1386
  %1388 = load ptr, ptr %1193, align 8, !tbaa !246
  %1389 = call fast nofpclass(nan inf) float @BM_log_original_mask(ptr noundef %1218, ptr noundef %1388) #10
  br label %1390

1390:                                             ; preds = %1387, %1386, %1383, %1379, %1367
  %1391 = phi ptr [ %1287, %1367 ], [ %1287, %1387 ], [ %1378, %1383 ], [ %1378, %1379 ], [ %1287, %1386 ]
  %1392 = phi ptr [ %1286, %1367 ], [ %1286, %1387 ], [ %1385, %1383 ], [ %1382, %1379 ], [ %1286, %1386 ]
  %1393 = load float, ptr %1391, align 4, !tbaa !20
  %1394 = fsub fast float %1234, %1393
  %1395 = getelementptr inbounds float, ptr %1391, i64 1
  %1396 = fmul fast float %1394, %1394
  %1397 = load <2 x float>, ptr %1395, align 4, !tbaa !20
  %1398 = fsub fast <2 x float> %1236, %1397
  %1399 = fmul fast <2 x float> %1398, %1398
  %1400 = extractelement <2 x float> %1399, i64 0
  %1401 = fadd fast float %1400, %1396
  %1402 = extractelement <2 x float> %1399, i64 1
  %1403 = fadd fast float %1401, %1402
  %1404 = fcmp fast ugt float %1403, %1232
  br i1 %1404, label %1433, label %1405

1405:                                             ; preds = %1390
  br i1 %1251, label %1409, label %1406

1406:                                             ; preds = %1405
  %1407 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %1241, ptr noundef nonnull %1391, i8 noundef zeroext 1) #10
  %1408 = icmp eq i8 %1407, 0
  br i1 %1408, label %1409, label %1433

1409:                                             ; preds = %1406, %1405
  %1410 = call fast float @llvm.sqrt.f32(float %1403)
  %1411 = load ptr, ptr %1185, align 8, !tbaa !234
  %1412 = icmp eq ptr %1411, null
  br i1 %1412, label %1415, label %1413

1413:                                             ; preds = %1409
  %1414 = load float, ptr %1411, align 4, !tbaa !20
  br label %1415

1415:                                             ; preds = %1413, %1409
  %1416 = phi fast float [ %1414, %1413 ], [ 0.000000e+00, %1409 ]
  %1417 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef %1125, ptr noundef %1126, ptr noundef nonnull %1391, float noundef nofpclass(nan inf) %1410, ptr noundef %1392, ptr noundef null, float noundef nofpclass(nan inf) %1416)
  %1418 = fmul fast float %1417, %1130
  %1419 = load i32, ptr %1169, align 4, !tbaa !210
  %1420 = sext i32 %1419 to i64
  %1421 = getelementptr inbounds [3 x float], ptr %1225, i64 %1420
  %1422 = insertelement <2 x float> poison, float %1418, i64 0
  %1423 = shufflevector <2 x float> %1422, <2 x float> poison, <2 x i32> zeroinitializer
  %1424 = fmul fast <2 x float> %1423, %1165
  store <2 x float> %1424, ptr %1421, align 4, !tbaa !20
  %1425 = fmul fast float %1418, %1164
  %1426 = getelementptr inbounds float, ptr %1421, i64 2
  store float %1425, ptr %1426, align 4, !tbaa !20
  %1427 = load ptr, ptr %1188, align 8, !tbaa !238
  %1428 = icmp eq ptr %1427, null
  br i1 %1428, label %1433, label %1429

1429:                                             ; preds = %1415
  %1430 = getelementptr inbounds %struct.MVert, ptr %1427, i64 0, i32 2
  %1431 = load i8, ptr %1430, align 2, !tbaa !239
  %1432 = or i8 %1431, -128
  store i8 %1432, ptr %1430, align 2, !tbaa !239
  br label %1433

1433:                                             ; preds = %1429, %1415, %1406, %1390, %1345, %1328, %1312
  %1434 = phi ptr [ %1391, %1415 ], [ %1391, %1429 ], [ %1287, %1345 ], [ %1287, %1328 ], [ %1287, %1312 ], [ %1391, %1406 ], [ %1391, %1390 ]
  %1435 = phi ptr [ %1392, %1415 ], [ %1392, %1429 ], [ %1286, %1345 ], [ %1286, %1328 ], [ %1286, %1312 ], [ %1392, %1406 ], [ %1392, %1390 ]
  %1436 = load i32, ptr %1181, align 4, !tbaa !226
  %1437 = add nsw i32 %1436, 1
  store i32 %1437, ptr %1181, align 4, !tbaa !226
  %1438 = load i32, ptr %1169, align 4, !tbaa !210
  %1439 = add nsw i32 %1438, 1
  store i32 %1439, ptr %1169, align 4, !tbaa !210
  %1440 = load i32, ptr %1173, align 4, !tbaa !218
  %1441 = icmp slt i32 %1437, %1440
  br i1 %1441, label %1284, label %1442, !llvm.loop !310

1442:                                             ; preds = %1433
  %1443 = load i32, ptr %1180, align 8, !tbaa !220
  %1444 = load i32, ptr %1174, align 8, !tbaa !219
  br label %1445

1445:                                             ; preds = %1442, %1277
  %1446 = phi i32 [ %1278, %1277 ], [ %1444, %1442 ]
  %1447 = phi i32 [ %1279, %1277 ], [ %1443, %1442 ]
  %1448 = phi i32 [ %1280, %1277 ], [ %1440, %1442 ]
  %1449 = phi ptr [ %1282, %1277 ], [ %1434, %1442 ]
  %1450 = phi ptr [ %1281, %1277 ], [ %1435, %1442 ]
  %1451 = add nsw i32 %1447, 1
  store i32 %1451, ptr %1180, align 8, !tbaa !220
  %1452 = icmp slt i32 %1451, %1446
  br i1 %1452, label %1277, label %1453, !llvm.loop !311

1453:                                             ; preds = %1445
  %1454 = load i32, ptr %33, align 8, !tbaa !214
  %1455 = load i32, ptr %1170, align 8, !tbaa !215
  br label %1456

1456:                                             ; preds = %1453, %1261
  %1457 = phi i32 [ %1253, %1261 ], [ %1455, %1453 ]
  %1458 = phi i32 [ %1254, %1261 ], [ %1454, %1453 ]
  %1459 = phi ptr [ %1256, %1261 ], [ %1449, %1453 ]
  %1460 = phi ptr [ %1255, %1261 ], [ %1450, %1453 ]
  %1461 = add nsw i32 %1458, 1
  store i32 %1461, ptr %33, align 8, !tbaa !214
  %1462 = icmp slt i32 %1461, %1457
  br i1 %1462, label %1252, label %1463, !llvm.loop !312

1463:                                             ; preds = %1456, %1217
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %33) #10
  %1464 = add nuw nsw i64 %1199, 1
  %1465 = icmp eq i64 %1464, %1197
  br i1 %1465, label %5193, label %1198, !llvm.loop !313

1466:                                             ; preds = %285
  %1467 = load ptr, ptr %45, align 8, !tbaa !31
  %1468 = load i32, ptr %46, align 4, !tbaa !24
  %1469 = load ptr, ptr %48, align 8, !tbaa !5
  %1470 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %1471 = getelementptr %struct.SculptSession, ptr %1469, i64 0, i32 28
  %1472 = icmp sgt i32 %1468, 0
  br i1 %1472, label %1473, label %5193

1473:                                             ; preds = %1466
  %1474 = load ptr, ptr %1471, align 8, !tbaa !22
  %1475 = getelementptr inbounds %struct.StrokeCache, ptr %1474, i64 0, i32 31
  %1476 = load i32, ptr %1475, align 8, !tbaa !277
  %1477 = sext i32 %1476 to i64
  %1478 = getelementptr inbounds [8 x i32], ptr @do_rotate_brush.flip, i64 0, i64 %1477
  %1479 = load i32, ptr %1478, align 4, !tbaa !24
  %1480 = sitofp i32 %1479 to float
  %1481 = getelementptr inbounds %struct.StrokeCache, ptr %1474, i64 0, i32 43
  %1482 = load float, ptr %1481, align 4, !tbaa !204
  %1483 = getelementptr inbounds %struct.StrokeCache, ptr %1474, i64 0, i32 19
  %1484 = load float, ptr %1483, align 8, !tbaa !203
  %1485 = getelementptr inbounds %struct.SculptSession, ptr %1469, i64 0, i32 15
  %1486 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 5
  %1487 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 12
  %1488 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 6
  %1489 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 13
  %1490 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 1
  %1491 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 2
  %1492 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 11
  %1493 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 7
  %1494 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 9
  %1495 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 10
  %1496 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 15
  %1497 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 4
  %1498 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 3
  %1499 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 8
  %1500 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 24
  %1501 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 26
  %1502 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 27
  %1503 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 14
  %1504 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 16
  %1505 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 22
  %1506 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 25
  %1507 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 17
  %1508 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 18, i32 0, i32 1
  %1509 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 18
  %1510 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 23
  %1511 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 19
  %1512 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 19, i32 0, i32 1
  %1513 = getelementptr inbounds %struct.PBVHVertexIter, ptr %30, i64 0, i32 21
  %1514 = getelementptr inbounds float, ptr %31, i64 2
  %1515 = zext i32 %1468 to i64
  %1516 = fmul fast float %1482, %1480
  %1517 = fmul fast float %1516, %1484
  br label %1518

1518:                                             ; preds = %1814, %1473
  %1519 = phi i64 [ 0, %1473 ], [ %1815, %1814 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %30) #10
  %1520 = getelementptr inbounds ptr, ptr %1467, i64 %1519
  %1521 = load ptr, ptr %1520, align 8, !tbaa !31
  %1522 = call ptr @sculpt_undo_push_node(ptr noundef %1, ptr noundef %1521, i32 noundef 0) #10
  %1523 = load ptr, ptr %48, align 8, !tbaa !5
  %1524 = getelementptr inbounds %struct.SculptSession, ptr %1523, i64 0, i32 10
  %1525 = load ptr, ptr %1524, align 8, !tbaa !86
  %1526 = icmp eq ptr %1525, null
  br i1 %1526, label %1530, label %1527

1527:                                             ; preds = %1518
  %1528 = getelementptr inbounds %struct.SculptSession, ptr %1523, i64 0, i32 14
  %1529 = load ptr, ptr %1528, align 8, !tbaa !119
  br label %1537

1530:                                             ; preds = %1518
  %1531 = getelementptr inbounds %struct.SculptUndoNode, ptr %1522, i64 0, i32 5
  %1532 = load ptr, ptr %1531, align 8, !tbaa !80
  %1533 = getelementptr inbounds %struct.SculptUndoNode, ptr %1522, i64 0, i32 7
  %1534 = load ptr, ptr %1533, align 8, !tbaa !307
  %1535 = getelementptr inbounds %struct.SculptUndoNode, ptr %1522, i64 0, i32 8
  %1536 = load ptr, ptr %1535, align 8, !tbaa !308
  br label %1537

1537:                                             ; preds = %1530, %1527
  %1538 = phi ptr [ null, %1530 ], [ %1529, %1527 ]
  %1539 = phi ptr [ %1532, %1530 ], [ null, %1527 ]
  %1540 = phi ptr [ %1534, %1530 ], [ null, %1527 ]
  %1541 = phi ptr [ %1536, %1530 ], [ null, %1527 ]
  %1542 = load ptr, ptr %1485, align 8, !tbaa !21
  %1543 = load ptr, ptr %1520, align 8, !tbaa !31
  %1544 = call ptr @BKE_pbvh_node_add_proxy(ptr noundef %1542, ptr noundef %1543) #10
  %1545 = load ptr, ptr %1544, align 8, !tbaa !252
  %1546 = load ptr, ptr %1471, align 8, !tbaa !22
  %1547 = getelementptr inbounds %struct.StrokeCache, ptr %1546, i64 0, i32 22
  %1548 = load ptr, ptr %1547, align 8, !tbaa !172
  %1549 = getelementptr inbounds %struct.ViewContext, ptr %1548, i64 0, i32 5
  %1550 = load ptr, ptr %1549, align 8, !tbaa !174
  %1551 = getelementptr inbounds %struct.StrokeCache, ptr %1546, i64 0, i32 12
  %1552 = load float, ptr %1551, align 4, !tbaa !199
  %1553 = getelementptr inbounds %struct.StrokeCache, ptr %1546, i64 0, i32 14
  %1554 = load float, ptr %1553, align 4, !tbaa !20
  %1555 = getelementptr inbounds %struct.StrokeCache, ptr %1546, i64 0, i32 14, i64 1
  %1556 = load <2 x float>, ptr %1555, align 4, !tbaa !20
  %1557 = getelementptr inbounds %struct.RegionView3D, ptr %1550, i64 0, i32 32
  %1558 = load i16, ptr %1557, align 2, !tbaa !293
  %1559 = and i16 %1558, 4
  %1560 = icmp eq i16 %1559, 0
  %1561 = select i1 %1560, ptr null, ptr %1550
  %1562 = load ptr, ptr %1485, align 8, !tbaa !21
  %1563 = load ptr, ptr %1520, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %1562, ptr noundef %1563, ptr noundef nonnull %30, i32 noundef 1) #10
  store i32 0, ptr %1486, align 4, !tbaa !210
  store i32 0, ptr %30, align 8, !tbaa !214
  %1564 = load i32, ptr %1487, align 8, !tbaa !215
  %1565 = icmp sgt i32 %1564, 0
  br i1 %1565, label %1566, label %1814

1566:                                             ; preds = %1537
  %1567 = getelementptr inbounds %struct.SculptUndoNode, ptr %1522, i64 0, i32 2
  %1568 = icmp eq ptr %1541, null
  %1569 = icmp eq ptr %1539, null
  %1570 = icmp eq ptr %1540, null
  %1571 = icmp eq ptr %1561, null
  br label %1572

1572:                                             ; preds = %1807, %1566
  %1573 = phi i32 [ %1564, %1566 ], [ %1808, %1807 ]
  %1574 = phi i32 [ 0, %1566 ], [ %1812, %1807 ]
  %1575 = phi ptr [ null, %1566 ], [ %1811, %1807 ]
  %1576 = phi ptr [ null, %1566 ], [ %1810, %1807 ]
  %1577 = load ptr, ptr %1488, align 8, !tbaa !216
  %1578 = icmp eq ptr %1577, null
  br i1 %1578, label %1579, label %1581

1579:                                             ; preds = %1572
  %1580 = load i32, ptr %1496, align 8, !tbaa !217
  store i32 %1580, ptr %1490, align 4, !tbaa !218
  store i32 1, ptr %1491, align 8, !tbaa !219
  store i32 0, ptr %1497, align 8, !tbaa !220
  br label %1594

1581:                                             ; preds = %1572
  %1582 = load i32, ptr %1489, align 4, !tbaa !221
  store i32 %1582, ptr %1490, align 4, !tbaa !218
  store i32 %1582, ptr %1491, align 8, !tbaa !219
  %1583 = load ptr, ptr %1492, align 8, !tbaa !222
  %1584 = sext i32 %1574 to i64
  %1585 = getelementptr inbounds i32, ptr %1583, i64 %1584
  %1586 = load i32, ptr %1585, align 4, !tbaa !24
  %1587 = sext i32 %1586 to i64
  %1588 = getelementptr inbounds ptr, ptr %1577, i64 %1587
  %1589 = load ptr, ptr %1588, align 8, !tbaa !31
  store ptr %1589, ptr %1493, align 8, !tbaa !223
  %1590 = load ptr, ptr %1494, align 8, !tbaa !224
  %1591 = getelementptr inbounds ptr, ptr %1590, i64 %1587
  %1592 = load ptr, ptr %1591, align 8, !tbaa !31
  store ptr %1592, ptr %1495, align 8, !tbaa !225
  store i32 0, ptr %1497, align 8, !tbaa !220
  %1593 = icmp sgt i32 %1582, 0
  br i1 %1593, label %1594, label %1807

1594:                                             ; preds = %1581, %1579
  %1595 = phi i32 [ %1582, %1581 ], [ 1, %1579 ]
  %1596 = phi i32 [ %1582, %1581 ], [ %1580, %1579 ]
  br label %1597

1597:                                             ; preds = %1594, %1796
  %1598 = phi i32 [ %1797, %1796 ], [ %1595, %1594 ]
  %1599 = phi i32 [ %1802, %1796 ], [ 0, %1594 ]
  %1600 = phi i32 [ %1799, %1796 ], [ %1596, %1594 ]
  %1601 = phi ptr [ %1801, %1796 ], [ %1575, %1594 ]
  %1602 = phi ptr [ %1800, %1796 ], [ %1576, %1594 ]
  store i32 0, ptr %1498, align 4, !tbaa !226
  %1603 = icmp sgt i32 %1600, 0
  br i1 %1603, label %1604, label %1796

1604:                                             ; preds = %1597, %1784
  %1605 = phi i32 [ %1788, %1784 ], [ 0, %1597 ]
  %1606 = phi ptr [ %1786, %1784 ], [ %1601, %1597 ]
  %1607 = phi ptr [ %1785, %1784 ], [ %1602, %1597 ]
  %1608 = load ptr, ptr %1493, align 8, !tbaa !223
  %1609 = icmp eq ptr %1608, null
  br i1 %1609, label %1645, label %1610

1610:                                             ; preds = %1604
  store ptr %1608, ptr %1500, align 8, !tbaa !227
  %1611 = load ptr, ptr %1499, align 8, !tbaa !228
  %1612 = getelementptr i8, ptr %1611, i64 20
  %1613 = load i32, ptr %1612, align 4, !tbaa !229
  %1614 = sext i32 %1613 to i64
  %1615 = getelementptr inbounds i8, ptr %1608, i64 %1614
  store ptr %1615, ptr %1501, align 8, !tbaa !231
  %1616 = getelementptr inbounds %struct.CCGKey, ptr %1611, i64 0, i32 9
  %1617 = load i32, ptr %1616, align 4, !tbaa !232
  %1618 = icmp eq i32 %1617, 0
  br i1 %1618, label %1624, label %1619

1619:                                             ; preds = %1610
  %1620 = getelementptr i8, ptr %1611, i64 24
  %1621 = load i32, ptr %1620, align 4, !tbaa !233
  %1622 = sext i32 %1621 to i64
  %1623 = getelementptr inbounds i8, ptr %1608, i64 %1622
  br label %1624

1624:                                             ; preds = %1619, %1610
  %1625 = phi ptr [ %1623, %1619 ], [ null, %1610 ]
  store ptr %1625, ptr %1502, align 8, !tbaa !234
  %1626 = getelementptr i8, ptr %1611, i64 4
  %1627 = load i32, ptr %1626, align 4, !tbaa !235
  %1628 = sext i32 %1627 to i64
  %1629 = getelementptr inbounds i8, ptr %1608, i64 %1628
  store ptr %1629, ptr %1493, align 8, !tbaa !223
  %1630 = load ptr, ptr %1495, align 8, !tbaa !225
  %1631 = icmp eq ptr %1630, null
  br i1 %1631, label %1687, label %1632

1632:                                             ; preds = %1624
  %1633 = load i32, ptr %1497, align 8, !tbaa !220
  %1634 = load i32, ptr %1489, align 4, !tbaa !221
  %1635 = mul nsw i32 %1634, %1633
  %1636 = add nsw i32 %1635, %1605
  %1637 = ashr i32 %1636, 5
  %1638 = sext i32 %1637 to i64
  %1639 = getelementptr inbounds i32, ptr %1630, i64 %1638
  %1640 = load i32, ptr %1639, align 4, !tbaa !24
  %1641 = and i32 %1636, 31
  %1642 = shl nuw i32 1, %1641
  %1643 = and i32 %1642, %1640
  %1644 = icmp eq i32 %1643, 0
  br i1 %1644, label %1687, label %1784

1645:                                             ; preds = %1604
  %1646 = load ptr, ptr %1503, align 8, !tbaa !236
  %1647 = icmp eq ptr %1646, null
  br i1 %1647, label %1665, label %1648

1648:                                             ; preds = %1645
  %1649 = load ptr, ptr %1504, align 8, !tbaa !237
  %1650 = sext i32 %1605 to i64
  %1651 = getelementptr inbounds i32, ptr %1649, i64 %1650
  %1652 = load i32, ptr %1651, align 4, !tbaa !24
  %1653 = sext i32 %1652 to i64
  %1654 = getelementptr inbounds %struct.MVert, ptr %1646, i64 %1653
  store ptr %1654, ptr %1505, align 8, !tbaa !238
  %1655 = getelementptr inbounds %struct.MVert, ptr %1646, i64 %1653, i32 2
  %1656 = load i8, ptr %1655, align 2, !tbaa !239
  %1657 = and i8 %1656, 16
  %1658 = icmp eq i8 %1657, 0
  br i1 %1658, label %1659, label %1784

1659:                                             ; preds = %1648
  store ptr %1654, ptr %1500, align 8, !tbaa !227
  %1660 = getelementptr inbounds %struct.MVert, ptr %1646, i64 %1653, i32 1
  store ptr %1660, ptr %1506, align 8, !tbaa !241
  %1661 = load ptr, ptr %1507, align 8, !tbaa !242
  %1662 = icmp eq ptr %1661, null
  br i1 %1662, label %1687, label %1663

1663:                                             ; preds = %1659
  %1664 = getelementptr inbounds float, ptr %1661, i64 %1653
  br label %1685

1665:                                             ; preds = %1645
  %1666 = load ptr, ptr %1508, align 8, !tbaa !243
  %1667 = icmp eq ptr %1666, null
  %1668 = load ptr, ptr %1512, align 8
  %1669 = select i1 %1667, ptr %1668, ptr %1666
  %1670 = select i1 %1667, ptr %1511, ptr %1509
  %1671 = getelementptr i8, ptr %1669, i64 8
  %1672 = load ptr, ptr %1671, align 8, !tbaa !244
  store ptr %1672, ptr %1510, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %1670) #10
  %1673 = load ptr, ptr %1510, align 8, !tbaa !246
  %1674 = getelementptr i8, ptr %1673, i64 13
  %1675 = load i8, ptr %1674, align 1, !tbaa !247
  %1676 = and i8 %1675, 2
  %1677 = icmp eq i8 %1676, 0
  br i1 %1677, label %1678, label %1784

1678:                                             ; preds = %1665
  %1679 = getelementptr inbounds %struct.BMVert, ptr %1673, i64 0, i32 2
  store ptr %1679, ptr %1500, align 8, !tbaa !227
  %1680 = getelementptr inbounds %struct.BMVert, ptr %1673, i64 0, i32 3
  store ptr %1680, ptr %1501, align 8, !tbaa !231
  %1681 = load ptr, ptr %1673, align 8, !tbaa !249
  %1682 = load i32, ptr %1513, align 8, !tbaa !251
  %1683 = sext i32 %1682 to i64
  %1684 = getelementptr inbounds i8, ptr %1681, i64 %1683
  br label %1685

1685:                                             ; preds = %1678, %1663
  %1686 = phi ptr [ %1684, %1678 ], [ %1664, %1663 ]
  store ptr %1686, ptr %1502, align 8, !tbaa !234
  br label %1687

1687:                                             ; preds = %1685, %1659, %1632, %1624
  %1688 = load i32, ptr %1567, align 8, !tbaa !309
  switch i32 %1688, label %1710 [
    i32 0, label %1689
    i32 2, label %1706
  ]

1689:                                             ; preds = %1687
  br i1 %1569, label %1694, label %1690

1690:                                             ; preds = %1689
  %1691 = load i32, ptr %1486, align 4, !tbaa !210
  %1692 = sext i32 %1691 to i64
  %1693 = getelementptr inbounds [3 x float], ptr %1539, i64 %1692
  br label %1697

1694:                                             ; preds = %1689
  %1695 = load ptr, ptr %1510, align 8, !tbaa !246
  %1696 = call ptr @BM_log_original_vert_co(ptr noundef %1538, ptr noundef %1695) #10
  br label %1697

1697:                                             ; preds = %1694, %1690
  %1698 = phi ptr [ %1696, %1694 ], [ %1693, %1690 ]
  br i1 %1570, label %1703, label %1699

1699:                                             ; preds = %1697
  %1700 = load i32, ptr %1486, align 4, !tbaa !210
  %1701 = sext i32 %1700 to i64
  %1702 = getelementptr inbounds [3 x i16], ptr %1540, i64 %1701
  br label %1710

1703:                                             ; preds = %1697
  %1704 = load ptr, ptr %1510, align 8, !tbaa !246
  %1705 = call ptr @BM_log_original_vert_no(ptr noundef %1538, ptr noundef %1704) #10
  br label %1710

1706:                                             ; preds = %1687
  br i1 %1568, label %1707, label %1710

1707:                                             ; preds = %1706
  %1708 = load ptr, ptr %1510, align 8, !tbaa !246
  %1709 = call fast nofpclass(nan inf) float @BM_log_original_mask(ptr noundef %1538, ptr noundef %1708) #10
  br label %1710

1710:                                             ; preds = %1707, %1706, %1703, %1699, %1687
  %1711 = phi ptr [ %1607, %1687 ], [ %1607, %1707 ], [ %1698, %1703 ], [ %1698, %1699 ], [ %1607, %1706 ]
  %1712 = phi ptr [ %1606, %1687 ], [ %1606, %1707 ], [ %1705, %1703 ], [ %1702, %1699 ], [ %1606, %1706 ]
  %1713 = load float, ptr %1711, align 4, !tbaa !20
  %1714 = fsub fast float %1554, %1713
  %1715 = getelementptr inbounds float, ptr %1711, i64 1
  %1716 = getelementptr inbounds float, ptr %1711, i64 2
  %1717 = fmul fast float %1714, %1714
  %1718 = load <2 x float>, ptr %1715, align 4, !tbaa !20
  %1719 = fsub fast <2 x float> %1556, %1718
  %1720 = fmul fast <2 x float> %1719, %1719
  %1721 = extractelement <2 x float> %1720, i64 0
  %1722 = fadd fast float %1721, %1717
  %1723 = extractelement <2 x float> %1720, i64 1
  %1724 = fadd fast float %1722, %1723
  %1725 = fcmp fast ugt float %1724, %1552
  br i1 %1725, label %1784, label %1726

1726:                                             ; preds = %1710
  br i1 %1571, label %1730, label %1727

1727:                                             ; preds = %1726
  %1728 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %1561, ptr noundef nonnull %1711, i8 noundef zeroext 1) #10
  %1729 = icmp eq i8 %1728, 0
  br i1 %1729, label %1730, label %1784

1730:                                             ; preds = %1727, %1726
  %1731 = call fast float @llvm.sqrt.f32(float %1724)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %31) #10
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %32) #10
  %1732 = load ptr, ptr %1502, align 8, !tbaa !234
  %1733 = icmp eq ptr %1732, null
  br i1 %1733, label %1736, label %1734

1734:                                             ; preds = %1730
  %1735 = load float, ptr %1732, align 4, !tbaa !20
  br label %1736

1736:                                             ; preds = %1734, %1730
  %1737 = phi fast float [ %1735, %1734 ], [ 0.000000e+00, %1730 ]
  %1738 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef %1469, ptr noundef %1470, ptr noundef nonnull %1711, float noundef nofpclass(nan inf) %1731, ptr noundef %1712, ptr noundef null, float noundef nofpclass(nan inf) %1737)
  %1739 = load ptr, ptr %1471, align 8, !tbaa !22
  %1740 = getelementptr inbounds %struct.StrokeCache, ptr %1739, i64 0, i32 14
  %1741 = load <2 x float>, ptr %1711, align 4, !tbaa !20
  %1742 = load <2 x float>, ptr %1740, align 4, !tbaa !20
  %1743 = fsub fast <2 x float> %1741, %1742
  store <2 x float> %1743, ptr %31, align 8, !tbaa !20
  %1744 = load float, ptr %1716, align 4, !tbaa !20
  %1745 = getelementptr inbounds %struct.StrokeCache, ptr %1739, i64 0, i32 14, i64 2
  %1746 = load float, ptr %1745, align 4, !tbaa !20
  %1747 = fsub fast float %1744, %1746
  store float %1747, ptr %1514, align 8, !tbaa !20
  %1748 = getelementptr inbounds %struct.StrokeCache, ptr %1739, i64 0, i32 35
  %1749 = fmul fast float %1517, %1738
  call void @axis_angle_normalized_to_mat3(ptr noundef nonnull %32, ptr noundef nonnull %1748, float noundef nofpclass(nan inf) %1749) #10
  %1750 = load i32, ptr %1486, align 4, !tbaa !210
  %1751 = sext i32 %1750 to i64
  %1752 = getelementptr inbounds [3 x float], ptr %1545, i64 %1751
  call void @mul_v3_m3v3(ptr noundef %1752, ptr noundef nonnull %32, ptr noundef nonnull %31) #10
  %1753 = load i32, ptr %1486, align 4, !tbaa !210
  %1754 = sext i32 %1753 to i64
  %1755 = getelementptr inbounds [3 x float], ptr %1545, i64 %1754
  %1756 = load ptr, ptr %1471, align 8, !tbaa !22
  %1757 = getelementptr inbounds %struct.StrokeCache, ptr %1756, i64 0, i32 14
  %1758 = load float, ptr %1757, align 4, !tbaa !20
  %1759 = load float, ptr %1755, align 4, !tbaa !20
  %1760 = fadd fast float %1759, %1758
  store float %1760, ptr %1755, align 4, !tbaa !20
  %1761 = getelementptr inbounds %struct.StrokeCache, ptr %1756, i64 0, i32 14, i64 1
  %1762 = load float, ptr %1761, align 4, !tbaa !20
  %1763 = getelementptr inbounds float, ptr %1755, i64 1
  %1764 = load float, ptr %1763, align 4, !tbaa !20
  %1765 = fadd fast float %1764, %1762
  store float %1765, ptr %1763, align 4, !tbaa !20
  %1766 = getelementptr inbounds %struct.StrokeCache, ptr %1756, i64 0, i32 14, i64 2
  %1767 = load float, ptr %1766, align 4, !tbaa !20
  %1768 = getelementptr inbounds float, ptr %1755, i64 2
  %1769 = load float, ptr %1768, align 4, !tbaa !20
  %1770 = fadd fast float %1769, %1767
  store float %1770, ptr %1768, align 4, !tbaa !20
  %1771 = load float, ptr %1711, align 4, !tbaa !20
  %1772 = fsub fast float %1760, %1771
  store float %1772, ptr %1755, align 4, !tbaa !20
  %1773 = load float, ptr %1715, align 4, !tbaa !20
  %1774 = fsub fast float %1765, %1773
  store float %1774, ptr %1763, align 4, !tbaa !20
  %1775 = load float, ptr %1716, align 4, !tbaa !20
  %1776 = fsub fast float %1770, %1775
  store float %1776, ptr %1768, align 4, !tbaa !20
  %1777 = load ptr, ptr %1505, align 8, !tbaa !238
  %1778 = icmp eq ptr %1777, null
  br i1 %1778, label %1783, label %1779

1779:                                             ; preds = %1736
  %1780 = getelementptr inbounds %struct.MVert, ptr %1777, i64 0, i32 2
  %1781 = load i8, ptr %1780, align 2, !tbaa !239
  %1782 = or i8 %1781, -128
  store i8 %1782, ptr %1780, align 2, !tbaa !239
  br label %1783

1783:                                             ; preds = %1779, %1736
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %32) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %31) #10
  br label %1784

1784:                                             ; preds = %1783, %1727, %1710, %1665, %1648, %1632
  %1785 = phi ptr [ %1711, %1783 ], [ %1607, %1665 ], [ %1607, %1648 ], [ %1607, %1632 ], [ %1711, %1727 ], [ %1711, %1710 ]
  %1786 = phi ptr [ %1712, %1783 ], [ %1606, %1665 ], [ %1606, %1648 ], [ %1606, %1632 ], [ %1712, %1727 ], [ %1712, %1710 ]
  %1787 = load i32, ptr %1498, align 4, !tbaa !226
  %1788 = add nsw i32 %1787, 1
  store i32 %1788, ptr %1498, align 4, !tbaa !226
  %1789 = load i32, ptr %1486, align 4, !tbaa !210
  %1790 = add nsw i32 %1789, 1
  store i32 %1790, ptr %1486, align 4, !tbaa !210
  %1791 = load i32, ptr %1490, align 4, !tbaa !218
  %1792 = icmp slt i32 %1788, %1791
  br i1 %1792, label %1604, label %1793, !llvm.loop !314

1793:                                             ; preds = %1784
  %1794 = load i32, ptr %1497, align 8, !tbaa !220
  %1795 = load i32, ptr %1491, align 8, !tbaa !219
  br label %1796

1796:                                             ; preds = %1793, %1597
  %1797 = phi i32 [ %1598, %1597 ], [ %1795, %1793 ]
  %1798 = phi i32 [ %1599, %1597 ], [ %1794, %1793 ]
  %1799 = phi i32 [ %1600, %1597 ], [ %1791, %1793 ]
  %1800 = phi ptr [ %1602, %1597 ], [ %1785, %1793 ]
  %1801 = phi ptr [ %1601, %1597 ], [ %1786, %1793 ]
  %1802 = add nsw i32 %1798, 1
  store i32 %1802, ptr %1497, align 8, !tbaa !220
  %1803 = icmp slt i32 %1802, %1797
  br i1 %1803, label %1597, label %1804, !llvm.loop !315

1804:                                             ; preds = %1796
  %1805 = load i32, ptr %30, align 8, !tbaa !214
  %1806 = load i32, ptr %1487, align 8, !tbaa !215
  br label %1807

1807:                                             ; preds = %1804, %1581
  %1808 = phi i32 [ %1573, %1581 ], [ %1806, %1804 ]
  %1809 = phi i32 [ %1574, %1581 ], [ %1805, %1804 ]
  %1810 = phi ptr [ %1576, %1581 ], [ %1800, %1804 ]
  %1811 = phi ptr [ %1575, %1581 ], [ %1801, %1804 ]
  %1812 = add nsw i32 %1809, 1
  store i32 %1812, ptr %30, align 8, !tbaa !214
  %1813 = icmp slt i32 %1812, %1808
  br i1 %1813, label %1572, label %1814, !llvm.loop !316

1814:                                             ; preds = %1807, %1537
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %30) #10
  %1815 = add nuw nsw i64 %1519, 1
  %1816 = icmp eq i64 %1815, %1515
  br i1 %1816, label %5193, label %1518, !llvm.loop !317

1817:                                             ; preds = %285
  %1818 = load ptr, ptr %45, align 8, !tbaa !31
  %1819 = load i32, ptr %46, align 4, !tbaa !24
  %1820 = load ptr, ptr %48, align 8, !tbaa !5
  %1821 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %1822 = getelementptr %struct.SculptSession, ptr %1820, i64 0, i32 28
  %1823 = load ptr, ptr %1822, align 8, !tbaa !22
  %1824 = getelementptr inbounds %struct.StrokeCache, ptr %1823, i64 0, i32 19
  %1825 = load float, ptr %1824, align 8, !tbaa !203
  %1826 = getelementptr inbounds %struct.StrokeCache, ptr %1823, i64 0, i32 27
  %1827 = getelementptr inbounds %struct.StrokeCache, ptr %1823, i64 0, i32 27, i64 2
  %1828 = load float, ptr %1827, align 4, !tbaa !20
  %1829 = fcmp fast olt float %1825, 0.000000e+00
  %1830 = load <2 x float>, ptr %1826, align 4, !tbaa !20
  %1831 = fneg fast <2 x float> %1830
  %1832 = fneg fast float %1828
  %1833 = insertelement <2 x i1> poison, i1 %1829, i64 0
  %1834 = shufflevector <2 x i1> %1833, <2 x i1> poison, <2 x i32> zeroinitializer
  %1835 = select <2 x i1> %1834, <2 x float> %1831, <2 x float> %1830
  %1836 = select i1 %1829, float %1832, float %1828
  %1837 = getelementptr inbounds %struct.Brush, ptr %1821, i64 0, i32 11
  %1838 = load float, ptr %1837, align 8, !tbaa !289
  %1839 = fcmp fast ogt float %1838, 0.000000e+00
  br i1 %1839, label %1840, label %1865

1840:                                             ; preds = %1817
  %1841 = fmul fast <2 x float> %1830, %1830
  %1842 = shufflevector <2 x float> %1841, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %1843 = fadd fast <2 x float> %1842, %1841
  %1844 = extractelement <2 x float> %1843, i64 0
  %1845 = fmul fast float %1828, %1828
  %1846 = fadd fast float %1844, %1845
  %1847 = call fast float @llvm.sqrt.f32(float %1846)
  %1848 = getelementptr inbounds %struct.StrokeCache, ptr %1823, i64 0, i32 35
  %1849 = fmul fast float %1847, %1838
  %1850 = getelementptr inbounds %struct.StrokeCache, ptr %1823, i64 0, i32 35, i64 2
  %1851 = load float, ptr %1850, align 4, !tbaa !20
  %1852 = fmul fast float %1851, %1849
  store float %1852, ptr %1850, align 4, !tbaa !20
  %1853 = load <2 x float>, ptr %1848, align 4, !tbaa !20
  %1854 = insertelement <2 x float> poison, float %1849, i64 0
  %1855 = shufflevector <2 x float> %1854, <2 x float> poison, <2 x i32> zeroinitializer
  %1856 = fmul fast <2 x float> %1853, %1855
  store <2 x float> %1856, ptr %1848, align 4, !tbaa !20
  %1857 = load float, ptr %1837, align 8, !tbaa !289
  %1858 = fsub fast float 1.000000e+00, %1857
  %1859 = insertelement <2 x float> poison, float %1858, i64 0
  %1860 = shufflevector <2 x float> %1859, <2 x float> poison, <2 x i32> zeroinitializer
  %1861 = fmul fast <2 x float> %1860, %1835
  %1862 = fmul fast float %1858, %1836
  %1863 = fadd fast <2 x float> %1861, %1856
  %1864 = fadd fast float %1862, %1852
  br label %1865

1865:                                             ; preds = %1840, %1817
  %1866 = phi float [ %1864, %1840 ], [ %1836, %1817 ]
  %1867 = phi <2 x float> [ %1863, %1840 ], [ %1835, %1817 ]
  %1868 = icmp sgt i32 %1819, 0
  br i1 %1868, label %1869, label %5193

1869:                                             ; preds = %1865
  %1870 = getelementptr inbounds %struct.SculptSession, ptr %1820, i64 0, i32 15
  %1871 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 5
  %1872 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 12
  %1873 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 6
  %1874 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 13
  %1875 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 1
  %1876 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 2
  %1877 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 11
  %1878 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 7
  %1879 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 9
  %1880 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 10
  %1881 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 15
  %1882 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 4
  %1883 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 3
  %1884 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 8
  %1885 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 24
  %1886 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 26
  %1887 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 27
  %1888 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 14
  %1889 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 16
  %1890 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 22
  %1891 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 25
  %1892 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 17
  %1893 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 18, i32 0, i32 1
  %1894 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 18
  %1895 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 23
  %1896 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 19
  %1897 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 19, i32 0, i32 1
  %1898 = getelementptr inbounds %struct.PBVHVertexIter, ptr %29, i64 0, i32 21
  %1899 = zext i32 %1819 to i64
  br label %1900

1900:                                             ; preds = %2110, %1869
  %1901 = phi i64 [ 0, %1869 ], [ %2111, %2110 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %29) #10
  %1902 = load ptr, ptr %1870, align 8, !tbaa !21
  %1903 = getelementptr inbounds ptr, ptr %1818, i64 %1901
  %1904 = load ptr, ptr %1903, align 8, !tbaa !31
  %1905 = call ptr @BKE_pbvh_node_add_proxy(ptr noundef %1902, ptr noundef %1904) #10
  %1906 = load ptr, ptr %1905, align 8, !tbaa !252
  %1907 = load ptr, ptr %1822, align 8, !tbaa !22
  %1908 = getelementptr inbounds %struct.StrokeCache, ptr %1907, i64 0, i32 22
  %1909 = load ptr, ptr %1908, align 8, !tbaa !172
  %1910 = getelementptr inbounds %struct.ViewContext, ptr %1909, i64 0, i32 5
  %1911 = load ptr, ptr %1910, align 8, !tbaa !174
  %1912 = getelementptr inbounds %struct.StrokeCache, ptr %1907, i64 0, i32 12
  %1913 = load float, ptr %1912, align 4, !tbaa !199
  %1914 = getelementptr inbounds %struct.StrokeCache, ptr %1907, i64 0, i32 14
  %1915 = load float, ptr %1914, align 4, !tbaa !20
  %1916 = getelementptr inbounds %struct.StrokeCache, ptr %1907, i64 0, i32 14, i64 1
  %1917 = load <2 x float>, ptr %1916, align 4, !tbaa !20
  %1918 = getelementptr inbounds %struct.RegionView3D, ptr %1911, i64 0, i32 32
  %1919 = load i16, ptr %1918, align 2, !tbaa !293
  %1920 = and i16 %1919, 4
  %1921 = icmp eq i16 %1920, 0
  %1922 = select i1 %1921, ptr null, ptr %1911
  %1923 = load ptr, ptr %1870, align 8, !tbaa !21
  %1924 = load ptr, ptr %1903, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %1923, ptr noundef %1924, ptr noundef nonnull %29, i32 noundef 1) #10
  store i32 0, ptr %1871, align 4, !tbaa !210
  store i32 0, ptr %29, align 8, !tbaa !214
  %1925 = load i32, ptr %1872, align 8, !tbaa !215
  %1926 = icmp sgt i32 %1925, 0
  br i1 %1926, label %1927, label %2110

1927:                                             ; preds = %1900
  %1928 = icmp eq ptr %1922, null
  br label %1929

1929:                                             ; preds = %2105, %1927
  %1930 = phi i32 [ %1925, %1927 ], [ %2106, %2105 ]
  %1931 = phi i32 [ 0, %1927 ], [ %2108, %2105 ]
  %1932 = load ptr, ptr %1873, align 8, !tbaa !216
  %1933 = icmp eq ptr %1932, null
  br i1 %1933, label %1934, label %1936

1934:                                             ; preds = %1929
  %1935 = load i32, ptr %1881, align 8, !tbaa !217
  store i32 %1935, ptr %1875, align 4, !tbaa !218
  store i32 1, ptr %1876, align 8, !tbaa !219
  store i32 0, ptr %1882, align 8, !tbaa !220
  br label %1949

1936:                                             ; preds = %1929
  %1937 = load i32, ptr %1874, align 4, !tbaa !221
  store i32 %1937, ptr %1875, align 4, !tbaa !218
  store i32 %1937, ptr %1876, align 8, !tbaa !219
  %1938 = load ptr, ptr %1877, align 8, !tbaa !222
  %1939 = sext i32 %1931 to i64
  %1940 = getelementptr inbounds i32, ptr %1938, i64 %1939
  %1941 = load i32, ptr %1940, align 4, !tbaa !24
  %1942 = sext i32 %1941 to i64
  %1943 = getelementptr inbounds ptr, ptr %1932, i64 %1942
  %1944 = load ptr, ptr %1943, align 8, !tbaa !31
  store ptr %1944, ptr %1878, align 8, !tbaa !223
  %1945 = load ptr, ptr %1879, align 8, !tbaa !224
  %1946 = getelementptr inbounds ptr, ptr %1945, i64 %1942
  %1947 = load ptr, ptr %1946, align 8, !tbaa !31
  store ptr %1947, ptr %1880, align 8, !tbaa !225
  store i32 0, ptr %1882, align 8, !tbaa !220
  %1948 = icmp sgt i32 %1937, 0
  br i1 %1948, label %1949, label %2105

1949:                                             ; preds = %1936, %1934
  %1950 = phi i32 [ %1937, %1936 ], [ 1, %1934 ]
  %1951 = phi i32 [ %1937, %1936 ], [ %1935, %1934 ]
  br label %1952

1952:                                             ; preds = %1949, %2096
  %1953 = phi i32 [ %2097, %2096 ], [ %1950, %1949 ]
  %1954 = phi i32 [ %2100, %2096 ], [ 0, %1949 ]
  %1955 = phi i32 [ %2099, %2096 ], [ %1951, %1949 ]
  store i32 0, ptr %1883, align 4, !tbaa !226
  %1956 = icmp sgt i32 %1955, 0
  br i1 %1956, label %1957, label %2096

1957:                                             ; preds = %1952, %2086
  %1958 = phi i32 [ %2088, %2086 ], [ 0, %1952 ]
  %1959 = load ptr, ptr %1878, align 8, !tbaa !223
  %1960 = icmp eq ptr %1959, null
  br i1 %1960, label %1996, label %1961

1961:                                             ; preds = %1957
  store ptr %1959, ptr %1885, align 8, !tbaa !227
  %1962 = load ptr, ptr %1884, align 8, !tbaa !228
  %1963 = getelementptr i8, ptr %1962, i64 20
  %1964 = load i32, ptr %1963, align 4, !tbaa !229
  %1965 = sext i32 %1964 to i64
  %1966 = getelementptr inbounds i8, ptr %1959, i64 %1965
  store ptr %1966, ptr %1886, align 8, !tbaa !231
  %1967 = getelementptr inbounds %struct.CCGKey, ptr %1962, i64 0, i32 9
  %1968 = load i32, ptr %1967, align 4, !tbaa !232
  %1969 = icmp eq i32 %1968, 0
  br i1 %1969, label %1975, label %1970

1970:                                             ; preds = %1961
  %1971 = getelementptr i8, ptr %1962, i64 24
  %1972 = load i32, ptr %1971, align 4, !tbaa !233
  %1973 = sext i32 %1972 to i64
  %1974 = getelementptr inbounds i8, ptr %1959, i64 %1973
  br label %1975

1975:                                             ; preds = %1970, %1961
  %1976 = phi ptr [ %1974, %1970 ], [ null, %1961 ]
  store ptr %1976, ptr %1887, align 8, !tbaa !234
  %1977 = getelementptr i8, ptr %1962, i64 4
  %1978 = load i32, ptr %1977, align 4, !tbaa !235
  %1979 = sext i32 %1978 to i64
  %1980 = getelementptr inbounds i8, ptr %1959, i64 %1979
  store ptr %1980, ptr %1878, align 8, !tbaa !223
  %1981 = load ptr, ptr %1880, align 8, !tbaa !225
  %1982 = icmp eq ptr %1981, null
  br i1 %1982, label %2039, label %1983

1983:                                             ; preds = %1975
  %1984 = load i32, ptr %1882, align 8, !tbaa !220
  %1985 = load i32, ptr %1874, align 4, !tbaa !221
  %1986 = mul nsw i32 %1985, %1984
  %1987 = add nsw i32 %1986, %1958
  %1988 = ashr i32 %1987, 5
  %1989 = sext i32 %1988 to i64
  %1990 = getelementptr inbounds i32, ptr %1981, i64 %1989
  %1991 = load i32, ptr %1990, align 4, !tbaa !24
  %1992 = and i32 %1987, 31
  %1993 = shl nuw i32 1, %1992
  %1994 = and i32 %1993, %1991
  %1995 = icmp eq i32 %1994, 0
  br i1 %1995, label %2039, label %2086

1996:                                             ; preds = %1957
  %1997 = load ptr, ptr %1888, align 8, !tbaa !236
  %1998 = icmp eq ptr %1997, null
  br i1 %1998, label %2016, label %1999

1999:                                             ; preds = %1996
  %2000 = load ptr, ptr %1889, align 8, !tbaa !237
  %2001 = sext i32 %1958 to i64
  %2002 = getelementptr inbounds i32, ptr %2000, i64 %2001
  %2003 = load i32, ptr %2002, align 4, !tbaa !24
  %2004 = sext i32 %2003 to i64
  %2005 = getelementptr inbounds %struct.MVert, ptr %1997, i64 %2004
  store ptr %2005, ptr %1890, align 8, !tbaa !238
  %2006 = getelementptr inbounds %struct.MVert, ptr %1997, i64 %2004, i32 2
  %2007 = load i8, ptr %2006, align 2, !tbaa !239
  %2008 = and i8 %2007, 16
  %2009 = icmp eq i8 %2008, 0
  br i1 %2009, label %2010, label %2086

2010:                                             ; preds = %1999
  store ptr %2005, ptr %1885, align 8, !tbaa !227
  %2011 = getelementptr inbounds %struct.MVert, ptr %1997, i64 %2004, i32 1
  store ptr %2011, ptr %1891, align 8, !tbaa !241
  %2012 = load ptr, ptr %1892, align 8, !tbaa !242
  %2013 = icmp eq ptr %2012, null
  br i1 %2013, label %2039, label %2014

2014:                                             ; preds = %2010
  %2015 = getelementptr inbounds float, ptr %2012, i64 %2004
  br label %2036

2016:                                             ; preds = %1996
  %2017 = load ptr, ptr %1893, align 8, !tbaa !243
  %2018 = icmp eq ptr %2017, null
  %2019 = load ptr, ptr %1897, align 8
  %2020 = select i1 %2018, ptr %2019, ptr %2017
  %2021 = select i1 %2018, ptr %1896, ptr %1894
  %2022 = getelementptr i8, ptr %2020, i64 8
  %2023 = load ptr, ptr %2022, align 8, !tbaa !244
  store ptr %2023, ptr %1895, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %2021) #10
  %2024 = load ptr, ptr %1895, align 8, !tbaa !246
  %2025 = getelementptr i8, ptr %2024, i64 13
  %2026 = load i8, ptr %2025, align 1, !tbaa !247
  %2027 = and i8 %2026, 2
  %2028 = icmp eq i8 %2027, 0
  br i1 %2028, label %2029, label %2086

2029:                                             ; preds = %2016
  %2030 = getelementptr inbounds %struct.BMVert, ptr %2024, i64 0, i32 2
  store ptr %2030, ptr %1885, align 8, !tbaa !227
  %2031 = getelementptr inbounds %struct.BMVert, ptr %2024, i64 0, i32 3
  store ptr %2031, ptr %1886, align 8, !tbaa !231
  %2032 = load ptr, ptr %2024, align 8, !tbaa !249
  %2033 = load i32, ptr %1898, align 8, !tbaa !251
  %2034 = sext i32 %2033 to i64
  %2035 = getelementptr inbounds i8, ptr %2032, i64 %2034
  br label %2036

2036:                                             ; preds = %2029, %2014
  %2037 = phi ptr [ %2035, %2029 ], [ %2015, %2014 ]
  %2038 = phi ptr [ %2030, %2029 ], [ %2005, %2014 ]
  store ptr %2037, ptr %1887, align 8, !tbaa !234
  br label %2039

2039:                                             ; preds = %2036, %2010, %1983, %1975
  %2040 = phi ptr [ %2005, %2010 ], [ %1959, %1975 ], [ %1959, %1983 ], [ %2038, %2036 ]
  %2041 = load float, ptr %2040, align 4, !tbaa !20
  %2042 = fsub fast float %1915, %2041
  %2043 = getelementptr inbounds float, ptr %2040, i64 1
  %2044 = fmul fast float %2042, %2042
  %2045 = load <2 x float>, ptr %2043, align 4, !tbaa !20
  %2046 = fsub fast <2 x float> %1917, %2045
  %2047 = fmul fast <2 x float> %2046, %2046
  %2048 = extractelement <2 x float> %2047, i64 0
  %2049 = fadd fast float %2048, %2044
  %2050 = extractelement <2 x float> %2047, i64 1
  %2051 = fadd fast float %2049, %2050
  %2052 = fcmp fast ugt float %2051, %1913
  br i1 %2052, label %2086, label %2053

2053:                                             ; preds = %2039
  br i1 %1928, label %2059, label %2054

2054:                                             ; preds = %2053
  %2055 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %1922, ptr noundef nonnull %2040, i8 noundef zeroext 1) #10
  %2056 = icmp eq i8 %2055, 0
  br i1 %2056, label %2057, label %2086

2057:                                             ; preds = %2054
  %2058 = load ptr, ptr %1885, align 8, !tbaa !227
  br label %2059

2059:                                             ; preds = %2057, %2053
  %2060 = phi ptr [ %2058, %2057 ], [ %2040, %2053 ]
  %2061 = call fast float @llvm.sqrt.f32(float %2051)
  %2062 = load ptr, ptr %1891, align 8, !tbaa !241
  %2063 = load ptr, ptr %1886, align 8, !tbaa !231
  %2064 = load ptr, ptr %1887, align 8, !tbaa !234
  %2065 = icmp eq ptr %2064, null
  br i1 %2065, label %2068, label %2066

2066:                                             ; preds = %2059
  %2067 = load float, ptr %2064, align 4, !tbaa !20
  br label %2068

2068:                                             ; preds = %2066, %2059
  %2069 = phi fast float [ %2067, %2066 ], [ 0.000000e+00, %2059 ]
  %2070 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef %1820, ptr noundef %1821, ptr noundef %2060, float noundef nofpclass(nan inf) %2061, ptr noundef %2062, ptr noundef %2063, float noundef nofpclass(nan inf) %2069)
  %2071 = fmul fast float %2070, %1825
  %2072 = load i32, ptr %1871, align 4, !tbaa !210
  %2073 = sext i32 %2072 to i64
  %2074 = getelementptr inbounds [3 x float], ptr %1906, i64 %2073
  %2075 = insertelement <2 x float> poison, float %2071, i64 0
  %2076 = shufflevector <2 x float> %2075, <2 x float> poison, <2 x i32> zeroinitializer
  %2077 = fmul fast <2 x float> %2076, %1867
  store <2 x float> %2077, ptr %2074, align 4, !tbaa !20
  %2078 = fmul fast float %2071, %1866
  %2079 = getelementptr inbounds float, ptr %2074, i64 2
  store float %2078, ptr %2079, align 4, !tbaa !20
  %2080 = load ptr, ptr %1890, align 8, !tbaa !238
  %2081 = icmp eq ptr %2080, null
  br i1 %2081, label %2086, label %2082

2082:                                             ; preds = %2068
  %2083 = getelementptr inbounds %struct.MVert, ptr %2080, i64 0, i32 2
  %2084 = load i8, ptr %2083, align 2, !tbaa !239
  %2085 = or i8 %2084, -128
  store i8 %2085, ptr %2083, align 2, !tbaa !239
  br label %2086

2086:                                             ; preds = %2082, %2068, %2054, %2039, %2016, %1999, %1983
  %2087 = load i32, ptr %1883, align 4, !tbaa !226
  %2088 = add nsw i32 %2087, 1
  store i32 %2088, ptr %1883, align 4, !tbaa !226
  %2089 = load i32, ptr %1871, align 4, !tbaa !210
  %2090 = add nsw i32 %2089, 1
  store i32 %2090, ptr %1871, align 4, !tbaa !210
  %2091 = load i32, ptr %1875, align 4, !tbaa !218
  %2092 = icmp slt i32 %2088, %2091
  br i1 %2092, label %1957, label %2093, !llvm.loop !318

2093:                                             ; preds = %2086
  %2094 = load i32, ptr %1882, align 8, !tbaa !220
  %2095 = load i32, ptr %1876, align 8, !tbaa !219
  br label %2096

2096:                                             ; preds = %2093, %1952
  %2097 = phi i32 [ %1953, %1952 ], [ %2095, %2093 ]
  %2098 = phi i32 [ %1954, %1952 ], [ %2094, %2093 ]
  %2099 = phi i32 [ %1955, %1952 ], [ %2091, %2093 ]
  %2100 = add nsw i32 %2098, 1
  store i32 %2100, ptr %1882, align 8, !tbaa !220
  %2101 = icmp slt i32 %2100, %2097
  br i1 %2101, label %1952, label %2102, !llvm.loop !319

2102:                                             ; preds = %2096
  %2103 = load i32, ptr %29, align 8, !tbaa !214
  %2104 = load i32, ptr %1872, align 8, !tbaa !215
  br label %2105

2105:                                             ; preds = %2102, %1936
  %2106 = phi i32 [ %1930, %1936 ], [ %2104, %2102 ]
  %2107 = phi i32 [ %1931, %1936 ], [ %2103, %2102 ]
  %2108 = add nsw i32 %2107, 1
  store i32 %2108, ptr %29, align 8, !tbaa !214
  %2109 = icmp slt i32 %2108, %2106
  br i1 %2109, label %1929, label %2110, !llvm.loop !320

2110:                                             ; preds = %2105, %1900
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %29) #10
  %2111 = add nuw nsw i64 %1901, 1
  %2112 = icmp eq i64 %2111, %1899
  br i1 %2112, label %5193, label %1900, !llvm.loop !321

2113:                                             ; preds = %285
  %2114 = load ptr, ptr %45, align 8, !tbaa !31
  %2115 = load i32, ptr %46, align 4, !tbaa !24
  %2116 = load ptr, ptr %48, align 8, !tbaa !5
  %2117 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %2118 = getelementptr %struct.SculptSession, ptr %2116, i64 0, i32 28
  %2119 = load ptr, ptr %2118, align 8, !tbaa !22
  %2120 = getelementptr inbounds %struct.StrokeCache, ptr %2119, i64 0, i32 19
  %2121 = load float, ptr %2120, align 8, !tbaa !203
  %2122 = getelementptr inbounds %struct.StrokeCache, ptr %2119, i64 0, i32 27
  %2123 = load float, ptr %2122, align 4, !tbaa !20
  %2124 = getelementptr inbounds %struct.StrokeCache, ptr %2119, i64 0, i32 27, i64 1
  %2125 = getelementptr inbounds %struct.StrokeCache, ptr %2119, i64 0, i32 35
  %2126 = getelementptr inbounds %struct.StrokeCache, ptr %2119, i64 0, i32 35, i64 2
  %2127 = load float, ptr %2126, align 4, !tbaa !20
  %2128 = fmul fast float %2127, %2123
  %2129 = load <2 x float>, ptr %2124, align 4, !tbaa !20
  %2130 = load <2 x float>, ptr %2125, align 4, !tbaa !20
  %2131 = shufflevector <2 x float> %2129, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2132 = fmul fast <2 x float> %2130, %2131
  %2133 = extractelement <2 x float> %2132, i64 0
  %2134 = fsub fast float %2128, %2133
  %2135 = fmul fast <2 x float> %2130, %2129
  %2136 = insertelement <2 x float> %2130, float %2127, i64 0
  %2137 = insertelement <2 x float> %2129, float %2123, i64 1
  %2138 = fmul fast <2 x float> %2136, %2137
  %2139 = shufflevector <2 x float> %2138, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %2140 = fsub fast <2 x float> %2135, %2139
  %2141 = fmul fast float %2134, %2127
  %2142 = shufflevector <2 x float> %2130, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2143 = fmul fast <2 x float> %2140, %2142
  %2144 = extractelement <2 x float> %2143, i64 0
  %2145 = fsub fast float %2141, %2144
  %2146 = fmul fast <2 x float> %2140, %2130
  %2147 = insertelement <2 x float> %2140, float %2134, i64 0
  %2148 = insertelement <2 x float> %2130, float %2127, i64 1
  %2149 = fmul fast <2 x float> %2147, %2148
  %2150 = shufflevector <2 x float> %2149, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %2151 = fsub fast <2 x float> %2146, %2150
  %2152 = icmp sgt i32 %2115, 0
  br i1 %2152, label %2153, label %5193

2153:                                             ; preds = %2113
  %2154 = getelementptr inbounds %struct.SculptSession, ptr %2116, i64 0, i32 15
  %2155 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 5
  %2156 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 12
  %2157 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 6
  %2158 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 13
  %2159 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 1
  %2160 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 2
  %2161 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 11
  %2162 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 7
  %2163 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 9
  %2164 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 10
  %2165 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 15
  %2166 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 4
  %2167 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 3
  %2168 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 8
  %2169 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 24
  %2170 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 26
  %2171 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 27
  %2172 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 14
  %2173 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 16
  %2174 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 22
  %2175 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 25
  %2176 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 17
  %2177 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 18, i32 0, i32 1
  %2178 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 18
  %2179 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 23
  %2180 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 19
  %2181 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 19, i32 0, i32 1
  %2182 = getelementptr inbounds %struct.PBVHVertexIter, ptr %28, i64 0, i32 21
  %2183 = zext i32 %2115 to i64
  br label %2184

2184:                                             ; preds = %2394, %2153
  %2185 = phi i64 [ 0, %2153 ], [ %2395, %2394 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %28) #10
  %2186 = load ptr, ptr %2154, align 8, !tbaa !21
  %2187 = getelementptr inbounds ptr, ptr %2114, i64 %2185
  %2188 = load ptr, ptr %2187, align 8, !tbaa !31
  %2189 = call ptr @BKE_pbvh_node_add_proxy(ptr noundef %2186, ptr noundef %2188) #10
  %2190 = load ptr, ptr %2189, align 8, !tbaa !252
  %2191 = load ptr, ptr %2118, align 8, !tbaa !22
  %2192 = getelementptr inbounds %struct.StrokeCache, ptr %2191, i64 0, i32 22
  %2193 = load ptr, ptr %2192, align 8, !tbaa !172
  %2194 = getelementptr inbounds %struct.ViewContext, ptr %2193, i64 0, i32 5
  %2195 = load ptr, ptr %2194, align 8, !tbaa !174
  %2196 = getelementptr inbounds %struct.StrokeCache, ptr %2191, i64 0, i32 12
  %2197 = load float, ptr %2196, align 4, !tbaa !199
  %2198 = getelementptr inbounds %struct.StrokeCache, ptr %2191, i64 0, i32 14
  %2199 = load float, ptr %2198, align 4, !tbaa !20
  %2200 = getelementptr inbounds %struct.StrokeCache, ptr %2191, i64 0, i32 14, i64 1
  %2201 = load <2 x float>, ptr %2200, align 4, !tbaa !20
  %2202 = getelementptr inbounds %struct.RegionView3D, ptr %2195, i64 0, i32 32
  %2203 = load i16, ptr %2202, align 2, !tbaa !293
  %2204 = and i16 %2203, 4
  %2205 = icmp eq i16 %2204, 0
  %2206 = select i1 %2205, ptr null, ptr %2195
  %2207 = load ptr, ptr %2154, align 8, !tbaa !21
  %2208 = load ptr, ptr %2187, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %2207, ptr noundef %2208, ptr noundef nonnull %28, i32 noundef 1) #10
  store i32 0, ptr %2155, align 4, !tbaa !210
  store i32 0, ptr %28, align 8, !tbaa !214
  %2209 = load i32, ptr %2156, align 8, !tbaa !215
  %2210 = icmp sgt i32 %2209, 0
  br i1 %2210, label %2211, label %2394

2211:                                             ; preds = %2184
  %2212 = icmp eq ptr %2206, null
  br label %2213

2213:                                             ; preds = %2389, %2211
  %2214 = phi i32 [ %2209, %2211 ], [ %2390, %2389 ]
  %2215 = phi i32 [ 0, %2211 ], [ %2392, %2389 ]
  %2216 = load ptr, ptr %2157, align 8, !tbaa !216
  %2217 = icmp eq ptr %2216, null
  br i1 %2217, label %2218, label %2220

2218:                                             ; preds = %2213
  %2219 = load i32, ptr %2165, align 8, !tbaa !217
  store i32 %2219, ptr %2159, align 4, !tbaa !218
  store i32 1, ptr %2160, align 8, !tbaa !219
  store i32 0, ptr %2166, align 8, !tbaa !220
  br label %2233

2220:                                             ; preds = %2213
  %2221 = load i32, ptr %2158, align 4, !tbaa !221
  store i32 %2221, ptr %2159, align 4, !tbaa !218
  store i32 %2221, ptr %2160, align 8, !tbaa !219
  %2222 = load ptr, ptr %2161, align 8, !tbaa !222
  %2223 = sext i32 %2215 to i64
  %2224 = getelementptr inbounds i32, ptr %2222, i64 %2223
  %2225 = load i32, ptr %2224, align 4, !tbaa !24
  %2226 = sext i32 %2225 to i64
  %2227 = getelementptr inbounds ptr, ptr %2216, i64 %2226
  %2228 = load ptr, ptr %2227, align 8, !tbaa !31
  store ptr %2228, ptr %2162, align 8, !tbaa !223
  %2229 = load ptr, ptr %2163, align 8, !tbaa !224
  %2230 = getelementptr inbounds ptr, ptr %2229, i64 %2226
  %2231 = load ptr, ptr %2230, align 8, !tbaa !31
  store ptr %2231, ptr %2164, align 8, !tbaa !225
  store i32 0, ptr %2166, align 8, !tbaa !220
  %2232 = icmp sgt i32 %2221, 0
  br i1 %2232, label %2233, label %2389

2233:                                             ; preds = %2220, %2218
  %2234 = phi i32 [ %2221, %2220 ], [ 1, %2218 ]
  %2235 = phi i32 [ %2221, %2220 ], [ %2219, %2218 ]
  br label %2236

2236:                                             ; preds = %2233, %2380
  %2237 = phi i32 [ %2381, %2380 ], [ %2234, %2233 ]
  %2238 = phi i32 [ %2384, %2380 ], [ 0, %2233 ]
  %2239 = phi i32 [ %2383, %2380 ], [ %2235, %2233 ]
  store i32 0, ptr %2167, align 4, !tbaa !226
  %2240 = icmp sgt i32 %2239, 0
  br i1 %2240, label %2241, label %2380

2241:                                             ; preds = %2236, %2370
  %2242 = phi i32 [ %2372, %2370 ], [ 0, %2236 ]
  %2243 = load ptr, ptr %2162, align 8, !tbaa !223
  %2244 = icmp eq ptr %2243, null
  br i1 %2244, label %2280, label %2245

2245:                                             ; preds = %2241
  store ptr %2243, ptr %2169, align 8, !tbaa !227
  %2246 = load ptr, ptr %2168, align 8, !tbaa !228
  %2247 = getelementptr i8, ptr %2246, i64 20
  %2248 = load i32, ptr %2247, align 4, !tbaa !229
  %2249 = sext i32 %2248 to i64
  %2250 = getelementptr inbounds i8, ptr %2243, i64 %2249
  store ptr %2250, ptr %2170, align 8, !tbaa !231
  %2251 = getelementptr inbounds %struct.CCGKey, ptr %2246, i64 0, i32 9
  %2252 = load i32, ptr %2251, align 4, !tbaa !232
  %2253 = icmp eq i32 %2252, 0
  br i1 %2253, label %2259, label %2254

2254:                                             ; preds = %2245
  %2255 = getelementptr i8, ptr %2246, i64 24
  %2256 = load i32, ptr %2255, align 4, !tbaa !233
  %2257 = sext i32 %2256 to i64
  %2258 = getelementptr inbounds i8, ptr %2243, i64 %2257
  br label %2259

2259:                                             ; preds = %2254, %2245
  %2260 = phi ptr [ %2258, %2254 ], [ null, %2245 ]
  store ptr %2260, ptr %2171, align 8, !tbaa !234
  %2261 = getelementptr i8, ptr %2246, i64 4
  %2262 = load i32, ptr %2261, align 4, !tbaa !235
  %2263 = sext i32 %2262 to i64
  %2264 = getelementptr inbounds i8, ptr %2243, i64 %2263
  store ptr %2264, ptr %2162, align 8, !tbaa !223
  %2265 = load ptr, ptr %2164, align 8, !tbaa !225
  %2266 = icmp eq ptr %2265, null
  br i1 %2266, label %2323, label %2267

2267:                                             ; preds = %2259
  %2268 = load i32, ptr %2166, align 8, !tbaa !220
  %2269 = load i32, ptr %2158, align 4, !tbaa !221
  %2270 = mul nsw i32 %2269, %2268
  %2271 = add nsw i32 %2270, %2242
  %2272 = ashr i32 %2271, 5
  %2273 = sext i32 %2272 to i64
  %2274 = getelementptr inbounds i32, ptr %2265, i64 %2273
  %2275 = load i32, ptr %2274, align 4, !tbaa !24
  %2276 = and i32 %2271, 31
  %2277 = shl nuw i32 1, %2276
  %2278 = and i32 %2277, %2275
  %2279 = icmp eq i32 %2278, 0
  br i1 %2279, label %2323, label %2370

2280:                                             ; preds = %2241
  %2281 = load ptr, ptr %2172, align 8, !tbaa !236
  %2282 = icmp eq ptr %2281, null
  br i1 %2282, label %2300, label %2283

2283:                                             ; preds = %2280
  %2284 = load ptr, ptr %2173, align 8, !tbaa !237
  %2285 = sext i32 %2242 to i64
  %2286 = getelementptr inbounds i32, ptr %2284, i64 %2285
  %2287 = load i32, ptr %2286, align 4, !tbaa !24
  %2288 = sext i32 %2287 to i64
  %2289 = getelementptr inbounds %struct.MVert, ptr %2281, i64 %2288
  store ptr %2289, ptr %2174, align 8, !tbaa !238
  %2290 = getelementptr inbounds %struct.MVert, ptr %2281, i64 %2288, i32 2
  %2291 = load i8, ptr %2290, align 2, !tbaa !239
  %2292 = and i8 %2291, 16
  %2293 = icmp eq i8 %2292, 0
  br i1 %2293, label %2294, label %2370

2294:                                             ; preds = %2283
  store ptr %2289, ptr %2169, align 8, !tbaa !227
  %2295 = getelementptr inbounds %struct.MVert, ptr %2281, i64 %2288, i32 1
  store ptr %2295, ptr %2175, align 8, !tbaa !241
  %2296 = load ptr, ptr %2176, align 8, !tbaa !242
  %2297 = icmp eq ptr %2296, null
  br i1 %2297, label %2323, label %2298

2298:                                             ; preds = %2294
  %2299 = getelementptr inbounds float, ptr %2296, i64 %2288
  br label %2320

2300:                                             ; preds = %2280
  %2301 = load ptr, ptr %2177, align 8, !tbaa !243
  %2302 = icmp eq ptr %2301, null
  %2303 = load ptr, ptr %2181, align 8
  %2304 = select i1 %2302, ptr %2303, ptr %2301
  %2305 = select i1 %2302, ptr %2180, ptr %2178
  %2306 = getelementptr i8, ptr %2304, i64 8
  %2307 = load ptr, ptr %2306, align 8, !tbaa !244
  store ptr %2307, ptr %2179, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %2305) #10
  %2308 = load ptr, ptr %2179, align 8, !tbaa !246
  %2309 = getelementptr i8, ptr %2308, i64 13
  %2310 = load i8, ptr %2309, align 1, !tbaa !247
  %2311 = and i8 %2310, 2
  %2312 = icmp eq i8 %2311, 0
  br i1 %2312, label %2313, label %2370

2313:                                             ; preds = %2300
  %2314 = getelementptr inbounds %struct.BMVert, ptr %2308, i64 0, i32 2
  store ptr %2314, ptr %2169, align 8, !tbaa !227
  %2315 = getelementptr inbounds %struct.BMVert, ptr %2308, i64 0, i32 3
  store ptr %2315, ptr %2170, align 8, !tbaa !231
  %2316 = load ptr, ptr %2308, align 8, !tbaa !249
  %2317 = load i32, ptr %2182, align 8, !tbaa !251
  %2318 = sext i32 %2317 to i64
  %2319 = getelementptr inbounds i8, ptr %2316, i64 %2318
  br label %2320

2320:                                             ; preds = %2313, %2298
  %2321 = phi ptr [ %2319, %2313 ], [ %2299, %2298 ]
  %2322 = phi ptr [ %2314, %2313 ], [ %2289, %2298 ]
  store ptr %2321, ptr %2171, align 8, !tbaa !234
  br label %2323

2323:                                             ; preds = %2320, %2294, %2267, %2259
  %2324 = phi ptr [ %2289, %2294 ], [ %2243, %2259 ], [ %2243, %2267 ], [ %2322, %2320 ]
  %2325 = load float, ptr %2324, align 4, !tbaa !20
  %2326 = fsub fast float %2199, %2325
  %2327 = getelementptr inbounds float, ptr %2324, i64 1
  %2328 = fmul fast float %2326, %2326
  %2329 = load <2 x float>, ptr %2327, align 4, !tbaa !20
  %2330 = fsub fast <2 x float> %2201, %2329
  %2331 = fmul fast <2 x float> %2330, %2330
  %2332 = extractelement <2 x float> %2331, i64 0
  %2333 = fadd fast float %2332, %2328
  %2334 = extractelement <2 x float> %2331, i64 1
  %2335 = fadd fast float %2333, %2334
  %2336 = fcmp fast ugt float %2335, %2197
  br i1 %2336, label %2370, label %2337

2337:                                             ; preds = %2323
  br i1 %2212, label %2343, label %2338

2338:                                             ; preds = %2337
  %2339 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %2206, ptr noundef nonnull %2324, i8 noundef zeroext 1) #10
  %2340 = icmp eq i8 %2339, 0
  br i1 %2340, label %2341, label %2370

2341:                                             ; preds = %2338
  %2342 = load ptr, ptr %2169, align 8, !tbaa !227
  br label %2343

2343:                                             ; preds = %2341, %2337
  %2344 = phi ptr [ %2342, %2341 ], [ %2324, %2337 ]
  %2345 = call fast float @llvm.sqrt.f32(float %2335)
  %2346 = load ptr, ptr %2175, align 8, !tbaa !241
  %2347 = load ptr, ptr %2170, align 8, !tbaa !231
  %2348 = load ptr, ptr %2171, align 8, !tbaa !234
  %2349 = icmp eq ptr %2348, null
  br i1 %2349, label %2352, label %2350

2350:                                             ; preds = %2343
  %2351 = load float, ptr %2348, align 4, !tbaa !20
  br label %2352

2352:                                             ; preds = %2350, %2343
  %2353 = phi fast float [ %2351, %2350 ], [ 0.000000e+00, %2343 ]
  %2354 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef %2116, ptr noundef %2117, ptr noundef %2344, float noundef nofpclass(nan inf) %2345, ptr noundef %2346, ptr noundef %2347, float noundef nofpclass(nan inf) %2353)
  %2355 = fmul fast float %2354, %2121
  %2356 = load i32, ptr %2155, align 4, !tbaa !210
  %2357 = sext i32 %2356 to i64
  %2358 = getelementptr inbounds [3 x float], ptr %2190, i64 %2357
  %2359 = fmul fast float %2355, %2145
  store float %2359, ptr %2358, align 4, !tbaa !20
  %2360 = getelementptr inbounds float, ptr %2358, i64 1
  %2361 = insertelement <2 x float> poison, float %2355, i64 0
  %2362 = shufflevector <2 x float> %2361, <2 x float> poison, <2 x i32> zeroinitializer
  %2363 = fmul fast <2 x float> %2362, %2151
  store <2 x float> %2363, ptr %2360, align 4, !tbaa !20
  %2364 = load ptr, ptr %2174, align 8, !tbaa !238
  %2365 = icmp eq ptr %2364, null
  br i1 %2365, label %2370, label %2366

2366:                                             ; preds = %2352
  %2367 = getelementptr inbounds %struct.MVert, ptr %2364, i64 0, i32 2
  %2368 = load i8, ptr %2367, align 2, !tbaa !239
  %2369 = or i8 %2368, -128
  store i8 %2369, ptr %2367, align 2, !tbaa !239
  br label %2370

2370:                                             ; preds = %2366, %2352, %2338, %2323, %2300, %2283, %2267
  %2371 = load i32, ptr %2167, align 4, !tbaa !226
  %2372 = add nsw i32 %2371, 1
  store i32 %2372, ptr %2167, align 4, !tbaa !226
  %2373 = load i32, ptr %2155, align 4, !tbaa !210
  %2374 = add nsw i32 %2373, 1
  store i32 %2374, ptr %2155, align 4, !tbaa !210
  %2375 = load i32, ptr %2159, align 4, !tbaa !218
  %2376 = icmp slt i32 %2372, %2375
  br i1 %2376, label %2241, label %2377, !llvm.loop !322

2377:                                             ; preds = %2370
  %2378 = load i32, ptr %2166, align 8, !tbaa !220
  %2379 = load i32, ptr %2160, align 8, !tbaa !219
  br label %2380

2380:                                             ; preds = %2377, %2236
  %2381 = phi i32 [ %2237, %2236 ], [ %2379, %2377 ]
  %2382 = phi i32 [ %2238, %2236 ], [ %2378, %2377 ]
  %2383 = phi i32 [ %2239, %2236 ], [ %2375, %2377 ]
  %2384 = add nsw i32 %2382, 1
  store i32 %2384, ptr %2166, align 8, !tbaa !220
  %2385 = icmp slt i32 %2384, %2381
  br i1 %2385, label %2236, label %2386, !llvm.loop !323

2386:                                             ; preds = %2380
  %2387 = load i32, ptr %28, align 8, !tbaa !214
  %2388 = load i32, ptr %2156, align 8, !tbaa !215
  br label %2389

2389:                                             ; preds = %2386, %2220
  %2390 = phi i32 [ %2214, %2220 ], [ %2388, %2386 ]
  %2391 = phi i32 [ %2215, %2220 ], [ %2387, %2386 ]
  %2392 = add nsw i32 %2391, 1
  store i32 %2392, ptr %28, align 8, !tbaa !214
  %2393 = icmp slt i32 %2392, %2390
  br i1 %2393, label %2213, label %2394, !llvm.loop !324

2394:                                             ; preds = %2389, %2184
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %28) #10
  %2395 = add nuw nsw i64 %2185, 1
  %2396 = icmp eq i64 %2395, %2183
  br i1 %2396, label %5193, label %2184, !llvm.loop !325

2397:                                             ; preds = %285
  %2398 = load ptr, ptr %45, align 8, !tbaa !31
  %2399 = load i32, ptr %46, align 4, !tbaa !24
  %2400 = load ptr, ptr %48, align 8, !tbaa !5
  %2401 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %2402 = getelementptr %struct.SculptSession, ptr %2400, i64 0, i32 28
  %2403 = load ptr, ptr %2402, align 8, !tbaa !22
  %2404 = getelementptr inbounds %struct.StrokeCache, ptr %2403, i64 0, i32 19
  %2405 = load float, ptr %2404, align 8, !tbaa !203
  %2406 = getelementptr inbounds %struct.StrokeCache, ptr %2403, i64 0, i32 27
  %2407 = load float, ptr %2406, align 4, !tbaa !20
  %2408 = getelementptr inbounds %struct.StrokeCache, ptr %2403, i64 0, i32 27, i64 1
  %2409 = getelementptr inbounds %struct.StrokeCache, ptr %2403, i64 0, i32 35
  %2410 = getelementptr inbounds %struct.StrokeCache, ptr %2403, i64 0, i32 35, i64 2
  %2411 = load float, ptr %2410, align 4, !tbaa !20
  %2412 = fmul fast float %2411, %2407
  %2413 = load <2 x float>, ptr %2408, align 4, !tbaa !20
  %2414 = load <2 x float>, ptr %2409, align 4, !tbaa !20
  %2415 = shufflevector <2 x float> %2413, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2416 = fmul fast <2 x float> %2414, %2415
  %2417 = extractelement <2 x float> %2416, i64 0
  %2418 = fsub fast float %2412, %2417
  %2419 = fmul fast <2 x float> %2414, %2413
  %2420 = insertelement <2 x float> %2414, float %2411, i64 0
  %2421 = insertelement <2 x float> %2413, float %2407, i64 1
  %2422 = fmul fast <2 x float> %2420, %2421
  %2423 = shufflevector <2 x float> %2422, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %2424 = fsub fast <2 x float> %2419, %2423
  %2425 = fmul fast float %2418, %2411
  %2426 = shufflevector <2 x float> %2414, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2427 = fmul fast <2 x float> %2424, %2426
  %2428 = extractelement <2 x float> %2427, i64 0
  %2429 = fsub fast float %2425, %2428
  %2430 = fmul fast <2 x float> %2424, %2414
  %2431 = insertelement <2 x float> %2424, float %2418, i64 0
  %2432 = insertelement <2 x float> %2414, float %2411, i64 1
  %2433 = fmul fast <2 x float> %2431, %2432
  %2434 = shufflevector <2 x float> %2433, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %2435 = fsub fast <2 x float> %2430, %2434
  %2436 = icmp sgt i32 %2399, 0
  br i1 %2436, label %2437, label %5193

2437:                                             ; preds = %2397
  %2438 = getelementptr inbounds %struct.SculptSession, ptr %2400, i64 0, i32 15
  %2439 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 5
  %2440 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 12
  %2441 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 6
  %2442 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 13
  %2443 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 1
  %2444 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 2
  %2445 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 11
  %2446 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 7
  %2447 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 9
  %2448 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 10
  %2449 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 15
  %2450 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 4
  %2451 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 3
  %2452 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 8
  %2453 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 24
  %2454 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 26
  %2455 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 27
  %2456 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 14
  %2457 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 16
  %2458 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 22
  %2459 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 25
  %2460 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 17
  %2461 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 18, i32 0, i32 1
  %2462 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 18
  %2463 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 23
  %2464 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 19
  %2465 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 19, i32 0, i32 1
  %2466 = getelementptr inbounds %struct.PBVHVertexIter, ptr %27, i64 0, i32 21
  %2467 = zext i32 %2399 to i64
  br label %2468

2468:                                             ; preds = %2733, %2437
  %2469 = phi i64 [ 0, %2437 ], [ %2734, %2733 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %27) #10
  %2470 = getelementptr inbounds ptr, ptr %2398, i64 %2469
  %2471 = load ptr, ptr %2470, align 8, !tbaa !31
  %2472 = call ptr @sculpt_undo_push_node(ptr noundef %1, ptr noundef %2471, i32 noundef 0) #10
  %2473 = load ptr, ptr %48, align 8, !tbaa !5
  %2474 = getelementptr inbounds %struct.SculptSession, ptr %2473, i64 0, i32 10
  %2475 = load ptr, ptr %2474, align 8, !tbaa !86
  %2476 = icmp eq ptr %2475, null
  br i1 %2476, label %2480, label %2477

2477:                                             ; preds = %2468
  %2478 = getelementptr inbounds %struct.SculptSession, ptr %2473, i64 0, i32 14
  %2479 = load ptr, ptr %2478, align 8, !tbaa !119
  br label %2487

2480:                                             ; preds = %2468
  %2481 = getelementptr inbounds %struct.SculptUndoNode, ptr %2472, i64 0, i32 5
  %2482 = load ptr, ptr %2481, align 8, !tbaa !80
  %2483 = getelementptr inbounds %struct.SculptUndoNode, ptr %2472, i64 0, i32 7
  %2484 = load ptr, ptr %2483, align 8, !tbaa !307
  %2485 = getelementptr inbounds %struct.SculptUndoNode, ptr %2472, i64 0, i32 8
  %2486 = load ptr, ptr %2485, align 8, !tbaa !308
  br label %2487

2487:                                             ; preds = %2480, %2477
  %2488 = phi ptr [ null, %2480 ], [ %2479, %2477 ]
  %2489 = phi ptr [ %2482, %2480 ], [ null, %2477 ]
  %2490 = phi ptr [ %2484, %2480 ], [ null, %2477 ]
  %2491 = phi ptr [ %2486, %2480 ], [ null, %2477 ]
  %2492 = load ptr, ptr %2438, align 8, !tbaa !21
  %2493 = load ptr, ptr %2470, align 8, !tbaa !31
  %2494 = call ptr @BKE_pbvh_node_add_proxy(ptr noundef %2492, ptr noundef %2493) #10
  %2495 = load ptr, ptr %2494, align 8, !tbaa !252
  %2496 = load ptr, ptr %2402, align 8, !tbaa !22
  %2497 = getelementptr inbounds %struct.StrokeCache, ptr %2496, i64 0, i32 22
  %2498 = load ptr, ptr %2497, align 8, !tbaa !172
  %2499 = getelementptr inbounds %struct.ViewContext, ptr %2498, i64 0, i32 5
  %2500 = load ptr, ptr %2499, align 8, !tbaa !174
  %2501 = getelementptr inbounds %struct.StrokeCache, ptr %2496, i64 0, i32 12
  %2502 = load float, ptr %2501, align 4, !tbaa !199
  %2503 = getelementptr inbounds %struct.StrokeCache, ptr %2496, i64 0, i32 14
  %2504 = load float, ptr %2503, align 4, !tbaa !20
  %2505 = getelementptr inbounds %struct.StrokeCache, ptr %2496, i64 0, i32 14, i64 1
  %2506 = load <2 x float>, ptr %2505, align 4, !tbaa !20
  %2507 = getelementptr inbounds %struct.RegionView3D, ptr %2500, i64 0, i32 32
  %2508 = load i16, ptr %2507, align 2, !tbaa !293
  %2509 = and i16 %2508, 4
  %2510 = icmp eq i16 %2509, 0
  %2511 = select i1 %2510, ptr null, ptr %2500
  %2512 = load ptr, ptr %2438, align 8, !tbaa !21
  %2513 = load ptr, ptr %2470, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %2512, ptr noundef %2513, ptr noundef nonnull %27, i32 noundef 1) #10
  store i32 0, ptr %2439, align 4, !tbaa !210
  store i32 0, ptr %27, align 8, !tbaa !214
  %2514 = load i32, ptr %2440, align 8, !tbaa !215
  %2515 = icmp sgt i32 %2514, 0
  br i1 %2515, label %2516, label %2733

2516:                                             ; preds = %2487
  %2517 = getelementptr inbounds %struct.SculptUndoNode, ptr %2472, i64 0, i32 2
  %2518 = icmp eq ptr %2491, null
  %2519 = icmp eq ptr %2489, null
  %2520 = icmp eq ptr %2490, null
  %2521 = icmp eq ptr %2511, null
  br label %2522

2522:                                             ; preds = %2726, %2516
  %2523 = phi i32 [ %2514, %2516 ], [ %2727, %2726 ]
  %2524 = phi i32 [ 0, %2516 ], [ %2731, %2726 ]
  %2525 = phi ptr [ null, %2516 ], [ %2730, %2726 ]
  %2526 = phi ptr [ null, %2516 ], [ %2729, %2726 ]
  %2527 = load ptr, ptr %2441, align 8, !tbaa !216
  %2528 = icmp eq ptr %2527, null
  br i1 %2528, label %2529, label %2531

2529:                                             ; preds = %2522
  %2530 = load i32, ptr %2449, align 8, !tbaa !217
  store i32 %2530, ptr %2443, align 4, !tbaa !218
  store i32 1, ptr %2444, align 8, !tbaa !219
  store i32 0, ptr %2450, align 8, !tbaa !220
  br label %2544

2531:                                             ; preds = %2522
  %2532 = load i32, ptr %2442, align 4, !tbaa !221
  store i32 %2532, ptr %2443, align 4, !tbaa !218
  store i32 %2532, ptr %2444, align 8, !tbaa !219
  %2533 = load ptr, ptr %2445, align 8, !tbaa !222
  %2534 = sext i32 %2524 to i64
  %2535 = getelementptr inbounds i32, ptr %2533, i64 %2534
  %2536 = load i32, ptr %2535, align 4, !tbaa !24
  %2537 = sext i32 %2536 to i64
  %2538 = getelementptr inbounds ptr, ptr %2527, i64 %2537
  %2539 = load ptr, ptr %2538, align 8, !tbaa !31
  store ptr %2539, ptr %2446, align 8, !tbaa !223
  %2540 = load ptr, ptr %2447, align 8, !tbaa !224
  %2541 = getelementptr inbounds ptr, ptr %2540, i64 %2537
  %2542 = load ptr, ptr %2541, align 8, !tbaa !31
  store ptr %2542, ptr %2448, align 8, !tbaa !225
  store i32 0, ptr %2450, align 8, !tbaa !220
  %2543 = icmp sgt i32 %2532, 0
  br i1 %2543, label %2544, label %2726

2544:                                             ; preds = %2531, %2529
  %2545 = phi i32 [ %2532, %2531 ], [ 1, %2529 ]
  %2546 = phi i32 [ %2532, %2531 ], [ %2530, %2529 ]
  br label %2547

2547:                                             ; preds = %2544, %2715
  %2548 = phi i32 [ %2716, %2715 ], [ %2545, %2544 ]
  %2549 = phi i32 [ %2721, %2715 ], [ 0, %2544 ]
  %2550 = phi i32 [ %2718, %2715 ], [ %2546, %2544 ]
  %2551 = phi ptr [ %2720, %2715 ], [ %2525, %2544 ]
  %2552 = phi ptr [ %2719, %2715 ], [ %2526, %2544 ]
  store i32 0, ptr %2451, align 4, !tbaa !226
  %2553 = icmp sgt i32 %2550, 0
  br i1 %2553, label %2554, label %2715

2554:                                             ; preds = %2547, %2703
  %2555 = phi i32 [ %2707, %2703 ], [ 0, %2547 ]
  %2556 = phi ptr [ %2705, %2703 ], [ %2551, %2547 ]
  %2557 = phi ptr [ %2704, %2703 ], [ %2552, %2547 ]
  %2558 = load ptr, ptr %2446, align 8, !tbaa !223
  %2559 = icmp eq ptr %2558, null
  br i1 %2559, label %2595, label %2560

2560:                                             ; preds = %2554
  store ptr %2558, ptr %2453, align 8, !tbaa !227
  %2561 = load ptr, ptr %2452, align 8, !tbaa !228
  %2562 = getelementptr i8, ptr %2561, i64 20
  %2563 = load i32, ptr %2562, align 4, !tbaa !229
  %2564 = sext i32 %2563 to i64
  %2565 = getelementptr inbounds i8, ptr %2558, i64 %2564
  store ptr %2565, ptr %2454, align 8, !tbaa !231
  %2566 = getelementptr inbounds %struct.CCGKey, ptr %2561, i64 0, i32 9
  %2567 = load i32, ptr %2566, align 4, !tbaa !232
  %2568 = icmp eq i32 %2567, 0
  br i1 %2568, label %2574, label %2569

2569:                                             ; preds = %2560
  %2570 = getelementptr i8, ptr %2561, i64 24
  %2571 = load i32, ptr %2570, align 4, !tbaa !233
  %2572 = sext i32 %2571 to i64
  %2573 = getelementptr inbounds i8, ptr %2558, i64 %2572
  br label %2574

2574:                                             ; preds = %2569, %2560
  %2575 = phi ptr [ %2573, %2569 ], [ null, %2560 ]
  store ptr %2575, ptr %2455, align 8, !tbaa !234
  %2576 = getelementptr i8, ptr %2561, i64 4
  %2577 = load i32, ptr %2576, align 4, !tbaa !235
  %2578 = sext i32 %2577 to i64
  %2579 = getelementptr inbounds i8, ptr %2558, i64 %2578
  store ptr %2579, ptr %2446, align 8, !tbaa !223
  %2580 = load ptr, ptr %2448, align 8, !tbaa !225
  %2581 = icmp eq ptr %2580, null
  br i1 %2581, label %2637, label %2582

2582:                                             ; preds = %2574
  %2583 = load i32, ptr %2450, align 8, !tbaa !220
  %2584 = load i32, ptr %2442, align 4, !tbaa !221
  %2585 = mul nsw i32 %2584, %2583
  %2586 = add nsw i32 %2585, %2555
  %2587 = ashr i32 %2586, 5
  %2588 = sext i32 %2587 to i64
  %2589 = getelementptr inbounds i32, ptr %2580, i64 %2588
  %2590 = load i32, ptr %2589, align 4, !tbaa !24
  %2591 = and i32 %2586, 31
  %2592 = shl nuw i32 1, %2591
  %2593 = and i32 %2592, %2590
  %2594 = icmp eq i32 %2593, 0
  br i1 %2594, label %2637, label %2703

2595:                                             ; preds = %2554
  %2596 = load ptr, ptr %2456, align 8, !tbaa !236
  %2597 = icmp eq ptr %2596, null
  br i1 %2597, label %2615, label %2598

2598:                                             ; preds = %2595
  %2599 = load ptr, ptr %2457, align 8, !tbaa !237
  %2600 = sext i32 %2555 to i64
  %2601 = getelementptr inbounds i32, ptr %2599, i64 %2600
  %2602 = load i32, ptr %2601, align 4, !tbaa !24
  %2603 = sext i32 %2602 to i64
  %2604 = getelementptr inbounds %struct.MVert, ptr %2596, i64 %2603
  store ptr %2604, ptr %2458, align 8, !tbaa !238
  %2605 = getelementptr inbounds %struct.MVert, ptr %2596, i64 %2603, i32 2
  %2606 = load i8, ptr %2605, align 2, !tbaa !239
  %2607 = and i8 %2606, 16
  %2608 = icmp eq i8 %2607, 0
  br i1 %2608, label %2609, label %2703

2609:                                             ; preds = %2598
  store ptr %2604, ptr %2453, align 8, !tbaa !227
  %2610 = getelementptr inbounds %struct.MVert, ptr %2596, i64 %2603, i32 1
  store ptr %2610, ptr %2459, align 8, !tbaa !241
  %2611 = load ptr, ptr %2460, align 8, !tbaa !242
  %2612 = icmp eq ptr %2611, null
  br i1 %2612, label %2637, label %2613

2613:                                             ; preds = %2609
  %2614 = getelementptr inbounds float, ptr %2611, i64 %2603
  br label %2635

2615:                                             ; preds = %2595
  %2616 = load ptr, ptr %2461, align 8, !tbaa !243
  %2617 = icmp eq ptr %2616, null
  %2618 = load ptr, ptr %2465, align 8
  %2619 = select i1 %2617, ptr %2618, ptr %2616
  %2620 = select i1 %2617, ptr %2464, ptr %2462
  %2621 = getelementptr i8, ptr %2619, i64 8
  %2622 = load ptr, ptr %2621, align 8, !tbaa !244
  store ptr %2622, ptr %2463, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %2620) #10
  %2623 = load ptr, ptr %2463, align 8, !tbaa !246
  %2624 = getelementptr i8, ptr %2623, i64 13
  %2625 = load i8, ptr %2624, align 1, !tbaa !247
  %2626 = and i8 %2625, 2
  %2627 = icmp eq i8 %2626, 0
  br i1 %2627, label %2628, label %2703

2628:                                             ; preds = %2615
  %2629 = getelementptr inbounds %struct.BMVert, ptr %2623, i64 0, i32 2
  store ptr %2629, ptr %2453, align 8, !tbaa !227
  %2630 = getelementptr inbounds %struct.BMVert, ptr %2623, i64 0, i32 3
  store ptr %2630, ptr %2454, align 8, !tbaa !231
  %2631 = load ptr, ptr %2623, align 8, !tbaa !249
  %2632 = load i32, ptr %2466, align 8, !tbaa !251
  %2633 = sext i32 %2632 to i64
  %2634 = getelementptr inbounds i8, ptr %2631, i64 %2633
  br label %2635

2635:                                             ; preds = %2628, %2613
  %2636 = phi ptr [ %2634, %2628 ], [ %2614, %2613 ]
  store ptr %2636, ptr %2455, align 8, !tbaa !234
  br label %2637

2637:                                             ; preds = %2635, %2609, %2582, %2574
  %2638 = load i32, ptr %2517, align 8, !tbaa !309
  switch i32 %2638, label %2660 [
    i32 0, label %2639
    i32 2, label %2656
  ]

2639:                                             ; preds = %2637
  br i1 %2519, label %2644, label %2640

2640:                                             ; preds = %2639
  %2641 = load i32, ptr %2439, align 4, !tbaa !210
  %2642 = sext i32 %2641 to i64
  %2643 = getelementptr inbounds [3 x float], ptr %2489, i64 %2642
  br label %2647

2644:                                             ; preds = %2639
  %2645 = load ptr, ptr %2463, align 8, !tbaa !246
  %2646 = call ptr @BM_log_original_vert_co(ptr noundef %2488, ptr noundef %2645) #10
  br label %2647

2647:                                             ; preds = %2644, %2640
  %2648 = phi ptr [ %2646, %2644 ], [ %2643, %2640 ]
  br i1 %2520, label %2653, label %2649

2649:                                             ; preds = %2647
  %2650 = load i32, ptr %2439, align 4, !tbaa !210
  %2651 = sext i32 %2650 to i64
  %2652 = getelementptr inbounds [3 x i16], ptr %2490, i64 %2651
  br label %2660

2653:                                             ; preds = %2647
  %2654 = load ptr, ptr %2463, align 8, !tbaa !246
  %2655 = call ptr @BM_log_original_vert_no(ptr noundef %2488, ptr noundef %2654) #10
  br label %2660

2656:                                             ; preds = %2637
  br i1 %2518, label %2657, label %2660

2657:                                             ; preds = %2656
  %2658 = load ptr, ptr %2463, align 8, !tbaa !246
  %2659 = call fast nofpclass(nan inf) float @BM_log_original_mask(ptr noundef %2488, ptr noundef %2658) #10
  br label %2660

2660:                                             ; preds = %2657, %2656, %2653, %2649, %2637
  %2661 = phi ptr [ %2557, %2637 ], [ %2557, %2657 ], [ %2648, %2653 ], [ %2648, %2649 ], [ %2557, %2656 ]
  %2662 = phi ptr [ %2556, %2637 ], [ %2556, %2657 ], [ %2655, %2653 ], [ %2652, %2649 ], [ %2556, %2656 ]
  %2663 = load float, ptr %2661, align 4, !tbaa !20
  %2664 = fsub fast float %2504, %2663
  %2665 = getelementptr inbounds float, ptr %2661, i64 1
  %2666 = fmul fast float %2664, %2664
  %2667 = load <2 x float>, ptr %2665, align 4, !tbaa !20
  %2668 = fsub fast <2 x float> %2506, %2667
  %2669 = fmul fast <2 x float> %2668, %2668
  %2670 = extractelement <2 x float> %2669, i64 0
  %2671 = fadd fast float %2670, %2666
  %2672 = extractelement <2 x float> %2669, i64 1
  %2673 = fadd fast float %2671, %2672
  %2674 = fcmp fast ugt float %2673, %2502
  br i1 %2674, label %2703, label %2675

2675:                                             ; preds = %2660
  br i1 %2521, label %2679, label %2676

2676:                                             ; preds = %2675
  %2677 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %2511, ptr noundef nonnull %2661, i8 noundef zeroext 1) #10
  %2678 = icmp eq i8 %2677, 0
  br i1 %2678, label %2679, label %2703

2679:                                             ; preds = %2676, %2675
  %2680 = call fast float @llvm.sqrt.f32(float %2673)
  %2681 = load ptr, ptr %2455, align 8, !tbaa !234
  %2682 = icmp eq ptr %2681, null
  br i1 %2682, label %2685, label %2683

2683:                                             ; preds = %2679
  %2684 = load float, ptr %2681, align 4, !tbaa !20
  br label %2685

2685:                                             ; preds = %2683, %2679
  %2686 = phi fast float [ %2684, %2683 ], [ 0.000000e+00, %2679 ]
  %2687 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef %2400, ptr noundef %2401, ptr noundef nonnull %2661, float noundef nofpclass(nan inf) %2680, ptr noundef %2662, ptr noundef null, float noundef nofpclass(nan inf) %2686)
  %2688 = fmul fast float %2687, %2405
  %2689 = load i32, ptr %2439, align 4, !tbaa !210
  %2690 = sext i32 %2689 to i64
  %2691 = getelementptr inbounds [3 x float], ptr %2495, i64 %2690
  %2692 = fmul fast float %2688, %2429
  store float %2692, ptr %2691, align 4, !tbaa !20
  %2693 = getelementptr inbounds float, ptr %2691, i64 1
  %2694 = insertelement <2 x float> poison, float %2688, i64 0
  %2695 = shufflevector <2 x float> %2694, <2 x float> poison, <2 x i32> zeroinitializer
  %2696 = fmul fast <2 x float> %2695, %2435
  store <2 x float> %2696, ptr %2693, align 4, !tbaa !20
  %2697 = load ptr, ptr %2458, align 8, !tbaa !238
  %2698 = icmp eq ptr %2697, null
  br i1 %2698, label %2703, label %2699

2699:                                             ; preds = %2685
  %2700 = getelementptr inbounds %struct.MVert, ptr %2697, i64 0, i32 2
  %2701 = load i8, ptr %2700, align 2, !tbaa !239
  %2702 = or i8 %2701, -128
  store i8 %2702, ptr %2700, align 2, !tbaa !239
  br label %2703

2703:                                             ; preds = %2699, %2685, %2676, %2660, %2615, %2598, %2582
  %2704 = phi ptr [ %2661, %2685 ], [ %2661, %2699 ], [ %2557, %2615 ], [ %2557, %2598 ], [ %2557, %2582 ], [ %2661, %2676 ], [ %2661, %2660 ]
  %2705 = phi ptr [ %2662, %2685 ], [ %2662, %2699 ], [ %2556, %2615 ], [ %2556, %2598 ], [ %2556, %2582 ], [ %2662, %2676 ], [ %2662, %2660 ]
  %2706 = load i32, ptr %2451, align 4, !tbaa !226
  %2707 = add nsw i32 %2706, 1
  store i32 %2707, ptr %2451, align 4, !tbaa !226
  %2708 = load i32, ptr %2439, align 4, !tbaa !210
  %2709 = add nsw i32 %2708, 1
  store i32 %2709, ptr %2439, align 4, !tbaa !210
  %2710 = load i32, ptr %2443, align 4, !tbaa !218
  %2711 = icmp slt i32 %2707, %2710
  br i1 %2711, label %2554, label %2712, !llvm.loop !326

2712:                                             ; preds = %2703
  %2713 = load i32, ptr %2450, align 8, !tbaa !220
  %2714 = load i32, ptr %2444, align 8, !tbaa !219
  br label %2715

2715:                                             ; preds = %2712, %2547
  %2716 = phi i32 [ %2548, %2547 ], [ %2714, %2712 ]
  %2717 = phi i32 [ %2549, %2547 ], [ %2713, %2712 ]
  %2718 = phi i32 [ %2550, %2547 ], [ %2710, %2712 ]
  %2719 = phi ptr [ %2552, %2547 ], [ %2704, %2712 ]
  %2720 = phi ptr [ %2551, %2547 ], [ %2705, %2712 ]
  %2721 = add nsw i32 %2717, 1
  store i32 %2721, ptr %2450, align 8, !tbaa !220
  %2722 = icmp slt i32 %2721, %2716
  br i1 %2722, label %2547, label %2723, !llvm.loop !327

2723:                                             ; preds = %2715
  %2724 = load i32, ptr %27, align 8, !tbaa !214
  %2725 = load i32, ptr %2440, align 8, !tbaa !215
  br label %2726

2726:                                             ; preds = %2723, %2531
  %2727 = phi i32 [ %2523, %2531 ], [ %2725, %2723 ]
  %2728 = phi i32 [ %2524, %2531 ], [ %2724, %2723 ]
  %2729 = phi ptr [ %2526, %2531 ], [ %2719, %2723 ]
  %2730 = phi ptr [ %2525, %2531 ], [ %2720, %2723 ]
  %2731 = add nsw i32 %2728, 1
  store i32 %2731, ptr %27, align 8, !tbaa !214
  %2732 = icmp slt i32 %2731, %2727
  br i1 %2732, label %2522, label %2733, !llvm.loop !328

2733:                                             ; preds = %2726, %2487
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %27) #10
  %2734 = add nuw nsw i64 %2469, 1
  %2735 = icmp eq i64 %2734, %2467
  br i1 %2735, label %5193, label %2468, !llvm.loop !329

2736:                                             ; preds = %285
  %2737 = load ptr, ptr %45, align 8, !tbaa !31
  %2738 = load i32, ptr %46, align 4, !tbaa !24
  %2739 = load ptr, ptr %48, align 8, !tbaa !5
  %2740 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %2741 = getelementptr %struct.SculptSession, ptr %2739, i64 0, i32 28
  %2742 = load ptr, ptr %2741, align 8, !tbaa !22
  %2743 = getelementptr inbounds %struct.StrokeCache, ptr %2742, i64 0, i32 19
  %2744 = load float, ptr %2743, align 8, !tbaa !203
  %2745 = getelementptr inbounds %struct.Brush, ptr %2740, i64 0, i32 41
  %2746 = load float, ptr %2745, align 8, !tbaa !330
  %2747 = fcmp fast olt float %2744, 0.000000e+00
  %2748 = fneg fast float %2746
  %2749 = select i1 %2747, float %2748, float %2746
  %2750 = getelementptr inbounds %struct.StrokeCache, ptr %2742, i64 0, i32 1
  %2751 = getelementptr inbounds %struct.StrokeCache, ptr %2742, i64 0, i32 35
  %2752 = load float, ptr %2750, align 4, !tbaa !20
  %2753 = load float, ptr %2751, align 4, !tbaa !20
  %2754 = fmul fast float %2753, %2752
  %2755 = getelementptr inbounds %struct.StrokeCache, ptr %2742, i64 0, i32 1, i64 1
  %2756 = load float, ptr %2755, align 4, !tbaa !20
  %2757 = getelementptr inbounds %struct.StrokeCache, ptr %2742, i64 0, i32 35, i64 1
  %2758 = load float, ptr %2757, align 4, !tbaa !20
  %2759 = fmul fast float %2758, %2756
  %2760 = getelementptr inbounds %struct.StrokeCache, ptr %2742, i64 0, i32 1, i64 2
  %2761 = load float, ptr %2760, align 4, !tbaa !20
  %2762 = getelementptr inbounds %struct.StrokeCache, ptr %2742, i64 0, i32 35, i64 2
  %2763 = load float, ptr %2762, align 4, !tbaa !20
  %2764 = fmul fast float %2763, %2761
  %2765 = icmp sgt i32 %2738, 0
  br i1 %2765, label %2766, label %5193

2766:                                             ; preds = %2736
  %2767 = getelementptr inbounds %struct.SculptSession, ptr %2739, i64 0, i32 15
  %2768 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 5
  %2769 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 12
  %2770 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 6
  %2771 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 13
  %2772 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 1
  %2773 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 2
  %2774 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 11
  %2775 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 7
  %2776 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 9
  %2777 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 10
  %2778 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 15
  %2779 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 4
  %2780 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 3
  %2781 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 8
  %2782 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 24
  %2783 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 26
  %2784 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 27
  %2785 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 14
  %2786 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 16
  %2787 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 22
  %2788 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 25
  %2789 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 17
  %2790 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 18, i32 0, i32 1
  %2791 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 18
  %2792 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 23
  %2793 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 19
  %2794 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 19, i32 0, i32 1
  %2795 = getelementptr inbounds %struct.PBVHVertexIter, ptr %26, i64 0, i32 21
  %2796 = fcmp fast olt float %2749, 0.000000e+00
  %2797 = fcmp fast oge float %2749, 0.000000e+00
  %2798 = getelementptr inbounds %struct.SculptSession, ptr %2739, i64 0, i32 10
  %2799 = getelementptr inbounds %struct.SculptSession, ptr %2739, i64 0, i32 26
  %2800 = getelementptr inbounds %struct.Brush, ptr %2740, i64 0, i32 16
  %2801 = getelementptr inbounds %struct.Sculpt, ptr %0, i64 0, i32 1
  %2802 = zext i32 %2738 to i64
  br label %2803

2803:                                             ; preds = %3154, %2766
  %2804 = phi i64 [ 0, %2766 ], [ %3155, %3154 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %26) #10
  %2805 = getelementptr inbounds ptr, ptr %2737, i64 %2804
  %2806 = load ptr, ptr %2805, align 8, !tbaa !31
  %2807 = call ptr @sculpt_undo_push_node(ptr noundef %1, ptr noundef %2806, i32 noundef 0) #10
  %2808 = load ptr, ptr %48, align 8, !tbaa !5
  %2809 = getelementptr inbounds %struct.SculptSession, ptr %2808, i64 0, i32 10
  %2810 = load ptr, ptr %2809, align 8, !tbaa !86
  %2811 = icmp eq ptr %2810, null
  br i1 %2811, label %2815, label %2812

2812:                                             ; preds = %2803
  %2813 = getelementptr inbounds %struct.SculptSession, ptr %2808, i64 0, i32 14
  %2814 = load ptr, ptr %2813, align 8, !tbaa !119
  br label %2822

2815:                                             ; preds = %2803
  %2816 = getelementptr inbounds %struct.SculptUndoNode, ptr %2807, i64 0, i32 5
  %2817 = load ptr, ptr %2816, align 8, !tbaa !80
  %2818 = getelementptr inbounds %struct.SculptUndoNode, ptr %2807, i64 0, i32 7
  %2819 = load ptr, ptr %2818, align 8, !tbaa !307
  %2820 = getelementptr inbounds %struct.SculptUndoNode, ptr %2807, i64 0, i32 8
  %2821 = load ptr, ptr %2820, align 8, !tbaa !308
  br label %2822

2822:                                             ; preds = %2815, %2812
  %2823 = phi ptr [ null, %2815 ], [ %2814, %2812 ]
  %2824 = phi ptr [ %2817, %2815 ], [ null, %2812 ]
  %2825 = phi ptr [ %2819, %2815 ], [ null, %2812 ]
  %2826 = phi ptr [ %2821, %2815 ], [ null, %2812 ]
  %2827 = load ptr, ptr %2767, align 8, !tbaa !21
  %2828 = load ptr, ptr %2805, align 8, !tbaa !31
  %2829 = call ptr @BKE_pbvh_node_layer_disp_get(ptr noundef %2827, ptr noundef %2828) #10
  %2830 = load ptr, ptr %2741, align 8, !tbaa !22
  %2831 = getelementptr inbounds %struct.StrokeCache, ptr %2830, i64 0, i32 22
  %2832 = load ptr, ptr %2831, align 8, !tbaa !172
  %2833 = getelementptr inbounds %struct.ViewContext, ptr %2832, i64 0, i32 5
  %2834 = load ptr, ptr %2833, align 8, !tbaa !174
  %2835 = getelementptr inbounds %struct.StrokeCache, ptr %2830, i64 0, i32 12
  %2836 = load float, ptr %2835, align 4, !tbaa !199
  %2837 = getelementptr inbounds %struct.StrokeCache, ptr %2830, i64 0, i32 14
  %2838 = load float, ptr %2837, align 4, !tbaa !20
  %2839 = getelementptr inbounds %struct.StrokeCache, ptr %2830, i64 0, i32 14, i64 1
  %2840 = load <2 x float>, ptr %2839, align 4, !tbaa !20
  %2841 = getelementptr inbounds %struct.RegionView3D, ptr %2834, i64 0, i32 32
  %2842 = load i16, ptr %2841, align 2, !tbaa !293
  %2843 = and i16 %2842, 4
  %2844 = icmp eq i16 %2843, 0
  %2845 = select i1 %2844, ptr null, ptr %2834
  %2846 = load ptr, ptr %2767, align 8, !tbaa !21
  %2847 = load ptr, ptr %2805, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %2846, ptr noundef %2847, ptr noundef nonnull %26, i32 noundef 1) #10
  store i32 0, ptr %2768, align 4, !tbaa !210
  store i32 0, ptr %26, align 8, !tbaa !214
  %2848 = load i32, ptr %2769, align 8, !tbaa !215
  %2849 = icmp sgt i32 %2848, 0
  br i1 %2849, label %2850, label %3154

2850:                                             ; preds = %2822
  %2851 = getelementptr inbounds %struct.SculptUndoNode, ptr %2807, i64 0, i32 2
  %2852 = icmp eq ptr %2826, null
  %2853 = icmp eq ptr %2824, null
  %2854 = icmp eq ptr %2825, null
  %2855 = icmp eq ptr %2845, null
  br label %2856

2856:                                             ; preds = %3148, %2850
  %2857 = phi i32 [ %2848, %2850 ], [ %3149, %3148 ]
  %2858 = phi i32 [ 0, %2850 ], [ %3152, %3148 ]
  %2859 = phi ptr [ null, %2850 ], [ %3151, %3148 ]
  %2860 = load ptr, ptr %2770, align 8, !tbaa !216
  %2861 = icmp eq ptr %2860, null
  br i1 %2861, label %2862, label %2864

2862:                                             ; preds = %2856
  %2863 = load i32, ptr %2778, align 8, !tbaa !217
  store i32 %2863, ptr %2772, align 4, !tbaa !218
  store i32 1, ptr %2773, align 8, !tbaa !219
  store i32 0, ptr %2779, align 8, !tbaa !220
  br label %2877

2864:                                             ; preds = %2856
  %2865 = load i32, ptr %2771, align 4, !tbaa !221
  store i32 %2865, ptr %2772, align 4, !tbaa !218
  store i32 %2865, ptr %2773, align 8, !tbaa !219
  %2866 = load ptr, ptr %2774, align 8, !tbaa !222
  %2867 = sext i32 %2858 to i64
  %2868 = getelementptr inbounds i32, ptr %2866, i64 %2867
  %2869 = load i32, ptr %2868, align 4, !tbaa !24
  %2870 = sext i32 %2869 to i64
  %2871 = getelementptr inbounds ptr, ptr %2860, i64 %2870
  %2872 = load ptr, ptr %2871, align 8, !tbaa !31
  store ptr %2872, ptr %2775, align 8, !tbaa !223
  %2873 = load ptr, ptr %2776, align 8, !tbaa !224
  %2874 = getelementptr inbounds ptr, ptr %2873, i64 %2870
  %2875 = load ptr, ptr %2874, align 8, !tbaa !31
  store ptr %2875, ptr %2777, align 8, !tbaa !225
  store i32 0, ptr %2779, align 8, !tbaa !220
  %2876 = icmp sgt i32 %2865, 0
  br i1 %2876, label %2877, label %3148

2877:                                             ; preds = %2864, %2862
  %2878 = phi i32 [ %2865, %2864 ], [ 1, %2862 ]
  %2879 = phi i32 [ %2865, %2864 ], [ %2863, %2862 ]
  br label %2880

2880:                                             ; preds = %2877, %3138
  %2881 = phi i32 [ %3139, %3138 ], [ %2878, %2877 ]
  %2882 = phi i32 [ %3143, %3138 ], [ 0, %2877 ]
  %2883 = phi i32 [ %3141, %3138 ], [ %2879, %2877 ]
  %2884 = phi ptr [ %3142, %3138 ], [ %2859, %2877 ]
  store i32 0, ptr %2780, align 4, !tbaa !226
  %2885 = icmp sgt i32 %2883, 0
  br i1 %2885, label %2886, label %3138

2886:                                             ; preds = %2880, %3127
  %2887 = phi i32 [ %3130, %3127 ], [ 0, %2880 ]
  %2888 = phi ptr [ %3128, %3127 ], [ %2884, %2880 ]
  %2889 = load ptr, ptr %2775, align 8, !tbaa !223
  %2890 = icmp eq ptr %2889, null
  br i1 %2890, label %2926, label %2891

2891:                                             ; preds = %2886
  store ptr %2889, ptr %2782, align 8, !tbaa !227
  %2892 = load ptr, ptr %2781, align 8, !tbaa !228
  %2893 = getelementptr i8, ptr %2892, i64 20
  %2894 = load i32, ptr %2893, align 4, !tbaa !229
  %2895 = sext i32 %2894 to i64
  %2896 = getelementptr inbounds i8, ptr %2889, i64 %2895
  store ptr %2896, ptr %2783, align 8, !tbaa !231
  %2897 = getelementptr inbounds %struct.CCGKey, ptr %2892, i64 0, i32 9
  %2898 = load i32, ptr %2897, align 4, !tbaa !232
  %2899 = icmp eq i32 %2898, 0
  br i1 %2899, label %2905, label %2900

2900:                                             ; preds = %2891
  %2901 = getelementptr i8, ptr %2892, i64 24
  %2902 = load i32, ptr %2901, align 4, !tbaa !233
  %2903 = sext i32 %2902 to i64
  %2904 = getelementptr inbounds i8, ptr %2889, i64 %2903
  br label %2905

2905:                                             ; preds = %2900, %2891
  %2906 = phi ptr [ %2904, %2900 ], [ null, %2891 ]
  store ptr %2906, ptr %2784, align 8, !tbaa !234
  %2907 = getelementptr i8, ptr %2892, i64 4
  %2908 = load i32, ptr %2907, align 4, !tbaa !235
  %2909 = sext i32 %2908 to i64
  %2910 = getelementptr inbounds i8, ptr %2889, i64 %2909
  store ptr %2910, ptr %2775, align 8, !tbaa !223
  %2911 = load ptr, ptr %2777, align 8, !tbaa !225
  %2912 = icmp eq ptr %2911, null
  br i1 %2912, label %2968, label %2913

2913:                                             ; preds = %2905
  %2914 = load i32, ptr %2779, align 8, !tbaa !220
  %2915 = load i32, ptr %2771, align 4, !tbaa !221
  %2916 = mul nsw i32 %2915, %2914
  %2917 = add nsw i32 %2916, %2887
  %2918 = ashr i32 %2917, 5
  %2919 = sext i32 %2918 to i64
  %2920 = getelementptr inbounds i32, ptr %2911, i64 %2919
  %2921 = load i32, ptr %2920, align 4, !tbaa !24
  %2922 = and i32 %2917, 31
  %2923 = shl nuw i32 1, %2922
  %2924 = and i32 %2923, %2921
  %2925 = icmp eq i32 %2924, 0
  br i1 %2925, label %2968, label %3127

2926:                                             ; preds = %2886
  %2927 = load ptr, ptr %2785, align 8, !tbaa !236
  %2928 = icmp eq ptr %2927, null
  br i1 %2928, label %2946, label %2929

2929:                                             ; preds = %2926
  %2930 = load ptr, ptr %2786, align 8, !tbaa !237
  %2931 = sext i32 %2887 to i64
  %2932 = getelementptr inbounds i32, ptr %2930, i64 %2931
  %2933 = load i32, ptr %2932, align 4, !tbaa !24
  %2934 = sext i32 %2933 to i64
  %2935 = getelementptr inbounds %struct.MVert, ptr %2927, i64 %2934
  store ptr %2935, ptr %2787, align 8, !tbaa !238
  %2936 = getelementptr inbounds %struct.MVert, ptr %2927, i64 %2934, i32 2
  %2937 = load i8, ptr %2936, align 2, !tbaa !239
  %2938 = and i8 %2937, 16
  %2939 = icmp eq i8 %2938, 0
  br i1 %2939, label %2940, label %3127

2940:                                             ; preds = %2929
  store ptr %2935, ptr %2782, align 8, !tbaa !227
  %2941 = getelementptr inbounds %struct.MVert, ptr %2927, i64 %2934, i32 1
  store ptr %2941, ptr %2788, align 8, !tbaa !241
  %2942 = load ptr, ptr %2789, align 8, !tbaa !242
  %2943 = icmp eq ptr %2942, null
  br i1 %2943, label %2968, label %2944

2944:                                             ; preds = %2940
  %2945 = getelementptr inbounds float, ptr %2942, i64 %2934
  br label %2966

2946:                                             ; preds = %2926
  %2947 = load ptr, ptr %2790, align 8, !tbaa !243
  %2948 = icmp eq ptr %2947, null
  %2949 = load ptr, ptr %2794, align 8
  %2950 = select i1 %2948, ptr %2949, ptr %2947
  %2951 = select i1 %2948, ptr %2793, ptr %2791
  %2952 = getelementptr i8, ptr %2950, i64 8
  %2953 = load ptr, ptr %2952, align 8, !tbaa !244
  store ptr %2953, ptr %2792, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %2951) #10
  %2954 = load ptr, ptr %2792, align 8, !tbaa !246
  %2955 = getelementptr i8, ptr %2954, i64 13
  %2956 = load i8, ptr %2955, align 1, !tbaa !247
  %2957 = and i8 %2956, 2
  %2958 = icmp eq i8 %2957, 0
  br i1 %2958, label %2959, label %3127

2959:                                             ; preds = %2946
  %2960 = getelementptr inbounds %struct.BMVert, ptr %2954, i64 0, i32 2
  store ptr %2960, ptr %2782, align 8, !tbaa !227
  %2961 = getelementptr inbounds %struct.BMVert, ptr %2954, i64 0, i32 3
  store ptr %2961, ptr %2783, align 8, !tbaa !231
  %2962 = load ptr, ptr %2954, align 8, !tbaa !249
  %2963 = load i32, ptr %2795, align 8, !tbaa !251
  %2964 = sext i32 %2963 to i64
  %2965 = getelementptr inbounds i8, ptr %2962, i64 %2964
  br label %2966

2966:                                             ; preds = %2959, %2944
  %2967 = phi ptr [ %2965, %2959 ], [ %2945, %2944 ]
  store ptr %2967, ptr %2784, align 8, !tbaa !234
  br label %2968

2968:                                             ; preds = %2966, %2940, %2913, %2905
  %2969 = load i32, ptr %2851, align 8, !tbaa !309
  switch i32 %2969, label %2987 [
    i32 0, label %2970
    i32 2, label %2983
  ]

2970:                                             ; preds = %2968
  br i1 %2853, label %2975, label %2971

2971:                                             ; preds = %2970
  %2972 = load i32, ptr %2768, align 4, !tbaa !210
  %2973 = sext i32 %2972 to i64
  %2974 = getelementptr inbounds [3 x float], ptr %2824, i64 %2973
  br label %2978

2975:                                             ; preds = %2970
  %2976 = load ptr, ptr %2792, align 8, !tbaa !246
  %2977 = call ptr @BM_log_original_vert_co(ptr noundef %2823, ptr noundef %2976) #10
  br label %2978

2978:                                             ; preds = %2975, %2971
  %2979 = phi ptr [ %2977, %2975 ], [ %2974, %2971 ]
  br i1 %2854, label %2980, label %2987

2980:                                             ; preds = %2978
  %2981 = load ptr, ptr %2792, align 8, !tbaa !246
  %2982 = call ptr @BM_log_original_vert_no(ptr noundef %2823, ptr noundef %2981) #10
  br label %2987

2983:                                             ; preds = %2968
  br i1 %2852, label %2984, label %2987

2984:                                             ; preds = %2983
  %2985 = load ptr, ptr %2792, align 8, !tbaa !246
  %2986 = call fast nofpclass(nan inf) float @BM_log_original_mask(ptr noundef %2823, ptr noundef %2985) #10
  br label %2987

2987:                                             ; preds = %2984, %2983, %2980, %2978, %2968
  %2988 = phi ptr [ %2888, %2968 ], [ %2888, %2984 ], [ %2979, %2980 ], [ %2979, %2978 ], [ %2888, %2983 ]
  %2989 = load float, ptr %2988, align 4, !tbaa !20
  %2990 = fsub fast float %2838, %2989
  %2991 = getelementptr inbounds float, ptr %2988, i64 1
  %2992 = getelementptr inbounds float, ptr %2988, i64 2
  %2993 = fmul fast float %2990, %2990
  %2994 = load <2 x float>, ptr %2991, align 4, !tbaa !20
  %2995 = fsub fast <2 x float> %2840, %2994
  %2996 = fmul fast <2 x float> %2995, %2995
  %2997 = extractelement <2 x float> %2996, i64 0
  %2998 = fadd fast float %2997, %2993
  %2999 = extractelement <2 x float> %2996, i64 1
  %3000 = fadd fast float %2998, %2999
  %3001 = fcmp fast ugt float %3000, %2836
  br i1 %3001, label %3127, label %3002

3002:                                             ; preds = %2987
  br i1 %2855, label %3006, label %3003

3003:                                             ; preds = %3002
  %3004 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %2845, ptr noundef nonnull %2988, i8 noundef zeroext 1) #10
  %3005 = icmp eq i8 %3004, 0
  br i1 %3005, label %3006, label %3127

3006:                                             ; preds = %3003, %3002
  %3007 = call fast float @llvm.sqrt.f32(float %3000)
  %3008 = load ptr, ptr %2782, align 8, !tbaa !227
  %3009 = load ptr, ptr %2788, align 8, !tbaa !241
  %3010 = load ptr, ptr %2783, align 8, !tbaa !231
  %3011 = load ptr, ptr %2784, align 8, !tbaa !234
  %3012 = icmp eq ptr %3011, null
  br i1 %3012, label %3015, label %3013

3013:                                             ; preds = %3006
  %3014 = load float, ptr %3011, align 4, !tbaa !20
  br label %3015

3015:                                             ; preds = %3013, %3006
  %3016 = phi fast float [ %3014, %3013 ], [ 0.000000e+00, %3006 ]
  %3017 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef %2739, ptr noundef %2740, ptr noundef %3008, float noundef nofpclass(nan inf) %3007, ptr noundef %3009, ptr noundef %3010, float noundef nofpclass(nan inf) %3016)
  %3018 = fmul fast float %3017, %2744
  %3019 = load i32, ptr %2768, align 4, !tbaa !210
  %3020 = sext i32 %3019 to i64
  %3021 = getelementptr inbounds float, ptr %2829, i64 %3020
  %3022 = load float, ptr %3021, align 4, !tbaa !20
  %3023 = fadd fast float %3022, %3018
  %3024 = fcmp fast olt float %3023, %2749
  %3025 = select i1 %2796, i1 %3024, i1 false
  %3026 = fcmp fast ogt float %3023, %2749
  %3027 = select i1 %2797, i1 %3026, i1 false
  %3028 = select i1 %3025, i1 true, i1 %3027
  %3029 = select i1 %3028, float %2749, float %3023
  store float %3029, ptr %3021, align 4
  %3030 = fmul fast float %2754, %3029
  %3031 = fmul fast float %2759, %3029
  %3032 = fmul fast float %2764, %3029
  %3033 = load ptr, ptr %2739, align 8, !tbaa !178
  %3034 = icmp eq ptr %3033, null
  br i1 %3034, label %3035, label %3053

3035:                                             ; preds = %3015
  %3036 = load ptr, ptr %2798, align 8, !tbaa !86
  %3037 = icmp eq ptr %3036, null
  br i1 %3037, label %3038, label %3053

3038:                                             ; preds = %3035
  %3039 = load ptr, ptr %2799, align 8, !tbaa !179
  %3040 = icmp eq ptr %3039, null
  br i1 %3040, label %3053, label %3041

3041:                                             ; preds = %3038
  %3042 = load i32, ptr %2800, align 8, !tbaa !180
  %3043 = and i32 %3042, 4096
  %3044 = icmp eq i32 %3043, 0
  br i1 %3044, label %3053, label %3045

3045:                                             ; preds = %3041
  %3046 = load ptr, ptr %2786, align 8, !tbaa !237
  %3047 = getelementptr inbounds i32, ptr %3046, i64 %3020
  %3048 = load i32, ptr %3047, align 4, !tbaa !24
  %3049 = sext i32 %3048 to i64
  %3050 = getelementptr inbounds [3 x float], ptr %3039, i64 %3049
  %3051 = getelementptr inbounds float, ptr %3050, i64 1
  %3052 = getelementptr inbounds float, ptr %3050, i64 2
  br label %3053

3053:                                             ; preds = %3045, %3041, %3038, %3035, %3015
  %3054 = phi ptr [ %3052, %3045 ], [ %2992, %3041 ], [ %2992, %3038 ], [ %2992, %3035 ], [ %2992, %3015 ]
  %3055 = phi ptr [ %3051, %3045 ], [ %2991, %3041 ], [ %2991, %3038 ], [ %2991, %3035 ], [ %2991, %3015 ]
  %3056 = phi ptr [ %3050, %3045 ], [ %2988, %3041 ], [ %2988, %3038 ], [ %2988, %3035 ], [ %2988, %3015 ]
  %3057 = load float, ptr %3056, align 4, !tbaa !20
  %3058 = fadd fast float %3057, %3030
  %3059 = load float, ptr %3055, align 4, !tbaa !20
  %3060 = fadd fast float %3059, %3031
  %3061 = load float, ptr %3054, align 4, !tbaa !20
  %3062 = fadd fast float %3061, %3032
  %3063 = load ptr, ptr %2782, align 8, !tbaa !227
  %3064 = load i32, ptr %2801, align 8, !tbaa !113
  %3065 = and i32 %3064, 8
  %3066 = icmp eq i32 %3065, 0
  br i1 %3066, label %3067, label %3082

3067:                                             ; preds = %3053
  %3068 = load ptr, ptr %2741, align 8, !tbaa !22
  %3069 = getelementptr inbounds %struct.StrokeCache, ptr %3068, i64 0, i32 2
  %3070 = load i32, ptr %3069, align 8, !tbaa !160
  %3071 = and i32 %3070, 1
  %3072 = icmp eq i32 %3071, 0
  br i1 %3072, label %3079, label %3073

3073:                                             ; preds = %3067
  %3074 = load float, ptr %3063, align 4, !tbaa !20
  %3075 = call fast float @llvm.fabs.f32(float %3074)
  %3076 = getelementptr inbounds %struct.StrokeCache, ptr %3068, i64 0, i32 3, i64 0
  %3077 = load float, ptr %3076, align 4, !tbaa !20
  %3078 = fcmp fast ugt float %3075, %3077
  br i1 %3078, label %3079, label %3080

3079:                                             ; preds = %3073, %3067
  br label %3080

3080:                                             ; preds = %3079, %3073
  %3081 = phi float [ %3058, %3079 ], [ 0.000000e+00, %3073 ]
  store float %3081, ptr %3063, align 4, !tbaa !20
  br label %3082

3082:                                             ; preds = %3080, %3053
  %3083 = and i32 %3064, 16
  %3084 = icmp eq i32 %3083, 0
  br i1 %3084, label %3085, label %3101

3085:                                             ; preds = %3082
  %3086 = load ptr, ptr %2741, align 8, !tbaa !22
  %3087 = getelementptr inbounds %struct.StrokeCache, ptr %3086, i64 0, i32 2
  %3088 = load i32, ptr %3087, align 8, !tbaa !160
  %3089 = and i32 %3088, 2
  %3090 = icmp eq i32 %3089, 0
  br i1 %3090, label %3099, label %3091

3091:                                             ; preds = %3085
  %3092 = getelementptr inbounds float, ptr %3063, i64 1
  %3093 = load float, ptr %3092, align 4, !tbaa !20
  %3094 = call fast float @llvm.fabs.f32(float %3093)
  %3095 = getelementptr inbounds %struct.StrokeCache, ptr %3086, i64 0, i32 3, i64 1
  %3096 = load float, ptr %3095, align 4, !tbaa !20
  %3097 = fcmp fast ugt float %3094, %3096
  br i1 %3097, label %3099, label %3098

3098:                                             ; preds = %3091
  store float 0.000000e+00, ptr %3092, align 4, !tbaa !20
  br label %3101

3099:                                             ; preds = %3091, %3085
  %3100 = getelementptr inbounds float, ptr %3063, i64 1
  store float %3060, ptr %3100, align 4, !tbaa !20
  br label %3101

3101:                                             ; preds = %3099, %3098, %3082
  %3102 = and i32 %3064, 32
  %3103 = icmp eq i32 %3102, 0
  br i1 %3103, label %3104, label %3120

3104:                                             ; preds = %3101
  %3105 = load ptr, ptr %2741, align 8, !tbaa !22
  %3106 = getelementptr inbounds %struct.StrokeCache, ptr %3105, i64 0, i32 2
  %3107 = load i32, ptr %3106, align 8, !tbaa !160
  %3108 = and i32 %3107, 4
  %3109 = icmp eq i32 %3108, 0
  br i1 %3109, label %3118, label %3110

3110:                                             ; preds = %3104
  %3111 = getelementptr inbounds float, ptr %3063, i64 2
  %3112 = load float, ptr %3111, align 4, !tbaa !20
  %3113 = call fast float @llvm.fabs.f32(float %3112)
  %3114 = getelementptr inbounds %struct.StrokeCache, ptr %3105, i64 0, i32 3, i64 2
  %3115 = load float, ptr %3114, align 4, !tbaa !20
  %3116 = fcmp fast ugt float %3113, %3115
  br i1 %3116, label %3118, label %3117

3117:                                             ; preds = %3110
  store float 0.000000e+00, ptr %3111, align 4, !tbaa !20
  br label %3120

3118:                                             ; preds = %3110, %3104
  %3119 = getelementptr inbounds float, ptr %3063, i64 2
  store float %3062, ptr %3119, align 4, !tbaa !20
  br label %3120

3120:                                             ; preds = %3118, %3117, %3101
  %3121 = load ptr, ptr %2787, align 8, !tbaa !238
  %3122 = icmp eq ptr %3121, null
  br i1 %3122, label %3127, label %3123

3123:                                             ; preds = %3120
  %3124 = getelementptr inbounds %struct.MVert, ptr %3121, i64 0, i32 2
  %3125 = load i8, ptr %3124, align 2, !tbaa !239
  %3126 = or i8 %3125, -128
  store i8 %3126, ptr %3124, align 2, !tbaa !239
  br label %3127

3127:                                             ; preds = %3123, %3120, %3003, %2987, %2946, %2929, %2913
  %3128 = phi ptr [ %2888, %2946 ], [ %2888, %2929 ], [ %2888, %2913 ], [ %2988, %3123 ], [ %2988, %3120 ], [ %2988, %3003 ], [ %2988, %2987 ]
  %3129 = load i32, ptr %2780, align 4, !tbaa !226
  %3130 = add nsw i32 %3129, 1
  store i32 %3130, ptr %2780, align 4, !tbaa !226
  %3131 = load i32, ptr %2768, align 4, !tbaa !210
  %3132 = add nsw i32 %3131, 1
  store i32 %3132, ptr %2768, align 4, !tbaa !210
  %3133 = load i32, ptr %2772, align 4, !tbaa !218
  %3134 = icmp slt i32 %3130, %3133
  br i1 %3134, label %2886, label %3135, !llvm.loop !331

3135:                                             ; preds = %3127
  %3136 = load i32, ptr %2779, align 8, !tbaa !220
  %3137 = load i32, ptr %2773, align 8, !tbaa !219
  br label %3138

3138:                                             ; preds = %3135, %2880
  %3139 = phi i32 [ %2881, %2880 ], [ %3137, %3135 ]
  %3140 = phi i32 [ %2882, %2880 ], [ %3136, %3135 ]
  %3141 = phi i32 [ %2883, %2880 ], [ %3133, %3135 ]
  %3142 = phi ptr [ %2884, %2880 ], [ %3128, %3135 ]
  %3143 = add nsw i32 %3140, 1
  store i32 %3143, ptr %2779, align 8, !tbaa !220
  %3144 = icmp slt i32 %3143, %3139
  br i1 %3144, label %2880, label %3145, !llvm.loop !332

3145:                                             ; preds = %3138
  %3146 = load i32, ptr %26, align 8, !tbaa !214
  %3147 = load i32, ptr %2769, align 8, !tbaa !215
  br label %3148

3148:                                             ; preds = %3145, %2864
  %3149 = phi i32 [ %2857, %2864 ], [ %3147, %3145 ]
  %3150 = phi i32 [ %2858, %2864 ], [ %3146, %3145 ]
  %3151 = phi ptr [ %2859, %2864 ], [ %3142, %3145 ]
  %3152 = add nsw i32 %3150, 1
  store i32 %3152, ptr %26, align 8, !tbaa !214
  %3153 = icmp slt i32 %3152, %3149
  br i1 %3153, label %2856, label %3154, !llvm.loop !333

3154:                                             ; preds = %3148, %2822
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %26) #10
  %3155 = add nuw nsw i64 %2804, 1
  %3156 = icmp eq i64 %3155, %2802
  br i1 %3156, label %5193, label %2803, !llvm.loop !334

3157:                                             ; preds = %285
  %3158 = load ptr, ptr %45, align 8, !tbaa !31
  %3159 = load i32, ptr %46, align 4, !tbaa !24
  %3160 = load ptr, ptr %48, align 8, !tbaa !5
  %3161 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %3162 = getelementptr %struct.SculptSession, ptr %3160, i64 0, i32 28
  %3163 = load ptr, ptr %3162, align 8, !tbaa !22
  %3164 = getelementptr inbounds %struct.StrokeCache, ptr %3163, i64 0, i32 19
  %3165 = load float, ptr %3164, align 8, !tbaa !203
  %3166 = getelementptr inbounds %struct.StrokeCache, ptr %3163, i64 0, i32 11
  %3167 = load float, ptr %3166, align 8, !tbaa !198
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %23) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %24) #10
  %3168 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %3169 = getelementptr inbounds %struct.Brush, ptr %3168, i64 0, i32 29
  %3170 = load float, ptr %3169, align 4, !tbaa !335
  %3171 = getelementptr inbounds %struct.Brush, ptr %3168, i64 0, i32 16
  %3172 = load i32, ptr %3171, align 8, !tbaa !180
  %3173 = and i32 %3172, 65536
  %3174 = icmp eq i32 %3173, 0
  br i1 %3174, label %3180, label %3175

3175:                                             ; preds = %3157
  %3176 = load ptr, ptr %3162, align 8, !tbaa !22
  %3177 = getelementptr inbounds %struct.StrokeCache, ptr %3176, i64 0, i32 17
  %3178 = load float, ptr %3177, align 4, !tbaa !196
  %3179 = fmul fast float %3178, %3170
  br label %3180

3180:                                             ; preds = %3175, %3157
  %3181 = phi float [ %3179, %3175 ], [ %3170, %3157 ]
  call fastcc void @calc_sculpt_plane(ptr noundef %0, ptr noundef nonnull %1, ptr noundef %3158, i32 noundef %3159, ptr noundef nonnull %23, ptr noundef nonnull %24)
  %3182 = fmul fast float %3181, %3167
  %3183 = load ptr, ptr %3162, align 8, !tbaa !22
  %3184 = getelementptr inbounds %struct.StrokeCache, ptr %3183, i64 0, i32 1
  %3185 = getelementptr inbounds float, ptr %23, i64 2
  %3186 = load float, ptr %3185, align 8, !tbaa !20
  %3187 = getelementptr inbounds %struct.StrokeCache, ptr %3183, i64 0, i32 1, i64 2
  %3188 = load float, ptr %3187, align 4, !tbaa !20
  %3189 = fmul fast float %3186, %3182
  %3190 = fmul fast float %3189, %3188
  %3191 = getelementptr inbounds float, ptr %24, i64 1
  %3192 = load <2 x float>, ptr %23, align 8, !tbaa !20
  %3193 = load <2 x float>, ptr %3184, align 4, !tbaa !20
  %3194 = insertelement <2 x float> poison, float %3182, i64 0
  %3195 = shufflevector <2 x float> %3194, <2 x float> poison, <2 x i32> zeroinitializer
  %3196 = fmul fast <2 x float> %3192, %3195
  %3197 = fmul fast <2 x float> %3196, %3193
  %3198 = load <2 x float>, ptr %24, align 8, !tbaa !20
  %3199 = fadd fast <2 x float> %3198, %3197
  store <2 x float> %3199, ptr %24, align 8, !tbaa !20
  %3200 = getelementptr inbounds float, ptr %24, i64 2
  %3201 = load float, ptr %3200, align 8, !tbaa !20
  %3202 = fadd fast float %3201, %3190
  store float %3202, ptr %3200, align 8, !tbaa !20
  %3203 = icmp sgt i32 %3159, 0
  br i1 %3203, label %3204, label %3493

3204:                                             ; preds = %3180
  %3205 = getelementptr inbounds %struct.SculptSession, ptr %3160, i64 0, i32 15
  %3206 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 5
  %3207 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 12
  %3208 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 6
  %3209 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 13
  %3210 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 1
  %3211 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 2
  %3212 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 11
  %3213 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 7
  %3214 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 9
  %3215 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 10
  %3216 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 15
  %3217 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 4
  %3218 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 3
  %3219 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 8
  %3220 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 24
  %3221 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 26
  %3222 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 27
  %3223 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 14
  %3224 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 16
  %3225 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 22
  %3226 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 25
  %3227 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 17
  %3228 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 18, i32 0, i32 1
  %3229 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 18
  %3230 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 23
  %3231 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 19
  %3232 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 19, i32 0, i32 1
  %3233 = getelementptr inbounds %struct.PBVHVertexIter, ptr %25, i64 0, i32 21
  %3234 = getelementptr i8, ptr %3161, i64 1856
  %3235 = zext i32 %3159 to i64
  br label %3236

3236:                                             ; preds = %3490, %3204
  %3237 = phi i64 [ 0, %3204 ], [ %3491, %3490 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %25) #10
  %3238 = load ptr, ptr %3205, align 8, !tbaa !21
  %3239 = getelementptr inbounds ptr, ptr %3158, i64 %3237
  %3240 = load ptr, ptr %3239, align 8, !tbaa !31
  %3241 = call ptr @BKE_pbvh_node_add_proxy(ptr noundef %3238, ptr noundef %3240) #10
  %3242 = load ptr, ptr %3241, align 8, !tbaa !252
  %3243 = load ptr, ptr %3162, align 8, !tbaa !22
  %3244 = getelementptr inbounds %struct.StrokeCache, ptr %3243, i64 0, i32 22
  %3245 = load ptr, ptr %3244, align 8, !tbaa !172
  %3246 = getelementptr inbounds %struct.ViewContext, ptr %3245, i64 0, i32 5
  %3247 = load ptr, ptr %3246, align 8, !tbaa !174
  %3248 = getelementptr inbounds %struct.StrokeCache, ptr %3243, i64 0, i32 12
  %3249 = load float, ptr %3248, align 4, !tbaa !199
  %3250 = getelementptr inbounds %struct.StrokeCache, ptr %3243, i64 0, i32 14
  %3251 = load float, ptr %3250, align 4, !tbaa !20
  %3252 = getelementptr inbounds %struct.StrokeCache, ptr %3243, i64 0, i32 14, i64 1
  %3253 = load <2 x float>, ptr %3252, align 4, !tbaa !20
  %3254 = getelementptr inbounds %struct.RegionView3D, ptr %3247, i64 0, i32 32
  %3255 = load i16, ptr %3254, align 2, !tbaa !293
  %3256 = and i16 %3255, 4
  %3257 = icmp eq i16 %3256, 0
  %3258 = select i1 %3257, ptr null, ptr %3247
  %3259 = load ptr, ptr %3205, align 8, !tbaa !21
  %3260 = load ptr, ptr %3239, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %3259, ptr noundef %3260, ptr noundef nonnull %25, i32 noundef 1) #10
  store i32 0, ptr %3206, align 4, !tbaa !210
  store i32 0, ptr %25, align 8, !tbaa !214
  %3261 = load i32, ptr %3207, align 8, !tbaa !215
  %3262 = icmp sgt i32 %3261, 0
  br i1 %3262, label %3263, label %3490

3263:                                             ; preds = %3236
  %3264 = icmp eq ptr %3258, null
  br label %3265

3265:                                             ; preds = %3485, %3263
  %3266 = phi i32 [ %3261, %3263 ], [ %3486, %3485 ]
  %3267 = phi i32 [ 0, %3263 ], [ %3488, %3485 ]
  %3268 = load ptr, ptr %3208, align 8, !tbaa !216
  %3269 = icmp eq ptr %3268, null
  br i1 %3269, label %3270, label %3272

3270:                                             ; preds = %3265
  %3271 = load i32, ptr %3216, align 8, !tbaa !217
  store i32 %3271, ptr %3210, align 4, !tbaa !218
  store i32 1, ptr %3211, align 8, !tbaa !219
  store i32 0, ptr %3217, align 8, !tbaa !220
  br label %3285

3272:                                             ; preds = %3265
  %3273 = load i32, ptr %3209, align 4, !tbaa !221
  store i32 %3273, ptr %3210, align 4, !tbaa !218
  store i32 %3273, ptr %3211, align 8, !tbaa !219
  %3274 = load ptr, ptr %3212, align 8, !tbaa !222
  %3275 = sext i32 %3267 to i64
  %3276 = getelementptr inbounds i32, ptr %3274, i64 %3275
  %3277 = load i32, ptr %3276, align 4, !tbaa !24
  %3278 = sext i32 %3277 to i64
  %3279 = getelementptr inbounds ptr, ptr %3268, i64 %3278
  %3280 = load ptr, ptr %3279, align 8, !tbaa !31
  store ptr %3280, ptr %3213, align 8, !tbaa !223
  %3281 = load ptr, ptr %3214, align 8, !tbaa !224
  %3282 = getelementptr inbounds ptr, ptr %3281, i64 %3278
  %3283 = load ptr, ptr %3282, align 8, !tbaa !31
  store ptr %3283, ptr %3215, align 8, !tbaa !225
  store i32 0, ptr %3217, align 8, !tbaa !220
  %3284 = icmp sgt i32 %3273, 0
  br i1 %3284, label %3285, label %3485

3285:                                             ; preds = %3272, %3270
  %3286 = phi i32 [ %3273, %3272 ], [ 1, %3270 ]
  %3287 = phi i32 [ %3273, %3272 ], [ %3271, %3270 ]
  br label %3288

3288:                                             ; preds = %3285, %3476
  %3289 = phi i32 [ %3477, %3476 ], [ %3286, %3285 ]
  %3290 = phi i32 [ %3480, %3476 ], [ 0, %3285 ]
  %3291 = phi i32 [ %3479, %3476 ], [ %3287, %3285 ]
  store i32 0, ptr %3218, align 4, !tbaa !226
  %3292 = icmp sgt i32 %3291, 0
  br i1 %3292, label %3293, label %3476

3293:                                             ; preds = %3288, %3466
  %3294 = phi i32 [ %3468, %3466 ], [ 0, %3288 ]
  %3295 = load ptr, ptr %3213, align 8, !tbaa !223
  %3296 = icmp eq ptr %3295, null
  br i1 %3296, label %3332, label %3297

3297:                                             ; preds = %3293
  store ptr %3295, ptr %3220, align 8, !tbaa !227
  %3298 = load ptr, ptr %3219, align 8, !tbaa !228
  %3299 = getelementptr i8, ptr %3298, i64 20
  %3300 = load i32, ptr %3299, align 4, !tbaa !229
  %3301 = sext i32 %3300 to i64
  %3302 = getelementptr inbounds i8, ptr %3295, i64 %3301
  store ptr %3302, ptr %3221, align 8, !tbaa !231
  %3303 = getelementptr inbounds %struct.CCGKey, ptr %3298, i64 0, i32 9
  %3304 = load i32, ptr %3303, align 4, !tbaa !232
  %3305 = icmp eq i32 %3304, 0
  br i1 %3305, label %3311, label %3306

3306:                                             ; preds = %3297
  %3307 = getelementptr i8, ptr %3298, i64 24
  %3308 = load i32, ptr %3307, align 4, !tbaa !233
  %3309 = sext i32 %3308 to i64
  %3310 = getelementptr inbounds i8, ptr %3295, i64 %3309
  br label %3311

3311:                                             ; preds = %3306, %3297
  %3312 = phi ptr [ %3310, %3306 ], [ null, %3297 ]
  store ptr %3312, ptr %3222, align 8, !tbaa !234
  %3313 = getelementptr i8, ptr %3298, i64 4
  %3314 = load i32, ptr %3313, align 4, !tbaa !235
  %3315 = sext i32 %3314 to i64
  %3316 = getelementptr inbounds i8, ptr %3295, i64 %3315
  store ptr %3316, ptr %3213, align 8, !tbaa !223
  %3317 = load ptr, ptr %3215, align 8, !tbaa !225
  %3318 = icmp eq ptr %3317, null
  br i1 %3318, label %3375, label %3319

3319:                                             ; preds = %3311
  %3320 = load i32, ptr %3217, align 8, !tbaa !220
  %3321 = load i32, ptr %3209, align 4, !tbaa !221
  %3322 = mul nsw i32 %3321, %3320
  %3323 = add nsw i32 %3322, %3294
  %3324 = ashr i32 %3323, 5
  %3325 = sext i32 %3324 to i64
  %3326 = getelementptr inbounds i32, ptr %3317, i64 %3325
  %3327 = load i32, ptr %3326, align 4, !tbaa !24
  %3328 = and i32 %3323, 31
  %3329 = shl nuw i32 1, %3328
  %3330 = and i32 %3329, %3327
  %3331 = icmp eq i32 %3330, 0
  br i1 %3331, label %3375, label %3466

3332:                                             ; preds = %3293
  %3333 = load ptr, ptr %3223, align 8, !tbaa !236
  %3334 = icmp eq ptr %3333, null
  br i1 %3334, label %3352, label %3335

3335:                                             ; preds = %3332
  %3336 = load ptr, ptr %3224, align 8, !tbaa !237
  %3337 = sext i32 %3294 to i64
  %3338 = getelementptr inbounds i32, ptr %3336, i64 %3337
  %3339 = load i32, ptr %3338, align 4, !tbaa !24
  %3340 = sext i32 %3339 to i64
  %3341 = getelementptr inbounds %struct.MVert, ptr %3333, i64 %3340
  store ptr %3341, ptr %3225, align 8, !tbaa !238
  %3342 = getelementptr inbounds %struct.MVert, ptr %3333, i64 %3340, i32 2
  %3343 = load i8, ptr %3342, align 2, !tbaa !239
  %3344 = and i8 %3343, 16
  %3345 = icmp eq i8 %3344, 0
  br i1 %3345, label %3346, label %3466

3346:                                             ; preds = %3335
  store ptr %3341, ptr %3220, align 8, !tbaa !227
  %3347 = getelementptr inbounds %struct.MVert, ptr %3333, i64 %3340, i32 1
  store ptr %3347, ptr %3226, align 8, !tbaa !241
  %3348 = load ptr, ptr %3227, align 8, !tbaa !242
  %3349 = icmp eq ptr %3348, null
  br i1 %3349, label %3375, label %3350

3350:                                             ; preds = %3346
  %3351 = getelementptr inbounds float, ptr %3348, i64 %3340
  br label %3372

3352:                                             ; preds = %3332
  %3353 = load ptr, ptr %3228, align 8, !tbaa !243
  %3354 = icmp eq ptr %3353, null
  %3355 = load ptr, ptr %3232, align 8
  %3356 = select i1 %3354, ptr %3355, ptr %3353
  %3357 = select i1 %3354, ptr %3231, ptr %3229
  %3358 = getelementptr i8, ptr %3356, i64 8
  %3359 = load ptr, ptr %3358, align 8, !tbaa !244
  store ptr %3359, ptr %3230, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %3357) #10
  %3360 = load ptr, ptr %3230, align 8, !tbaa !246
  %3361 = getelementptr i8, ptr %3360, i64 13
  %3362 = load i8, ptr %3361, align 1, !tbaa !247
  %3363 = and i8 %3362, 2
  %3364 = icmp eq i8 %3363, 0
  br i1 %3364, label %3365, label %3466

3365:                                             ; preds = %3352
  %3366 = getelementptr inbounds %struct.BMVert, ptr %3360, i64 0, i32 2
  store ptr %3366, ptr %3220, align 8, !tbaa !227
  %3367 = getelementptr inbounds %struct.BMVert, ptr %3360, i64 0, i32 3
  store ptr %3367, ptr %3221, align 8, !tbaa !231
  %3368 = load ptr, ptr %3360, align 8, !tbaa !249
  %3369 = load i32, ptr %3233, align 8, !tbaa !251
  %3370 = sext i32 %3369 to i64
  %3371 = getelementptr inbounds i8, ptr %3368, i64 %3370
  br label %3372

3372:                                             ; preds = %3365, %3350
  %3373 = phi ptr [ %3371, %3365 ], [ %3351, %3350 ]
  %3374 = phi ptr [ %3366, %3365 ], [ %3341, %3350 ]
  store ptr %3373, ptr %3222, align 8, !tbaa !234
  br label %3375

3375:                                             ; preds = %3372, %3346, %3319, %3311
  %3376 = phi ptr [ %3341, %3346 ], [ %3295, %3311 ], [ %3295, %3319 ], [ %3374, %3372 ]
  %3377 = load float, ptr %3376, align 4, !tbaa !20
  %3378 = fsub fast float %3251, %3377
  %3379 = getelementptr inbounds float, ptr %3376, i64 1
  %3380 = load <2 x float>, ptr %3379, align 4, !tbaa !20
  %3381 = fmul fast float %3378, %3378
  %3382 = fsub fast <2 x float> %3253, %3380
  %3383 = fmul fast <2 x float> %3382, %3382
  %3384 = extractelement <2 x float> %3383, i64 0
  %3385 = fadd fast float %3384, %3381
  %3386 = extractelement <2 x float> %3383, i64 1
  %3387 = fadd fast float %3385, %3386
  %3388 = fcmp fast ugt float %3387, %3249
  br i1 %3388, label %3466, label %3389

3389:                                             ; preds = %3375
  br i1 %3264, label %3398, label %3390

3390:                                             ; preds = %3389
  %3391 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %3258, ptr noundef nonnull %3376, i8 noundef zeroext 1) #10
  %3392 = icmp eq i8 %3391, 0
  br i1 %3392, label %3393, label %3466

3393:                                             ; preds = %3390
  %3394 = load ptr, ptr %3220, align 8, !tbaa !227
  %3395 = load float, ptr %3394, align 4, !tbaa !20
  %3396 = getelementptr inbounds float, ptr %3394, i64 1
  %3397 = load <2 x float>, ptr %3396, align 4, !tbaa !20
  br label %3398

3398:                                             ; preds = %3393, %3389
  %3399 = phi float [ %3395, %3393 ], [ %3377, %3389 ]
  %3400 = phi ptr [ %3394, %3393 ], [ %3376, %3389 ]
  %3401 = phi <2 x float> [ %3397, %3393 ], [ %3380, %3389 ]
  %3402 = load float, ptr %24, align 8, !tbaa !20
  %3403 = fsub fast float %3399, %3402
  %3404 = load float, ptr %3185, align 8, !tbaa !20
  %3405 = load <2 x float>, ptr %23, align 8, !tbaa !20
  %3406 = extractelement <2 x float> %3405, i64 0
  %3407 = fmul fast float %3406, %3403
  %3408 = load <2 x float>, ptr %3191, align 4, !tbaa !20
  %3409 = fsub fast <2 x float> %3401, %3408
  %3410 = shufflevector <2 x float> %3405, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %3411 = insertelement <2 x float> %3410, float %3404, i64 1
  %3412 = fmul fast <2 x float> %3411, %3409
  %3413 = extractelement <2 x float> %3412, i64 0
  %3414 = fadd fast float %3413, %3407
  %3415 = extractelement <2 x float> %3412, i64 1
  %3416 = fadd fast float %3414, %3415
  %3417 = fneg fast <2 x float> %3405
  %3418 = insertelement <2 x float> poison, float %3416, i64 0
  %3419 = shufflevector <2 x float> %3418, <2 x float> poison, <2 x i32> zeroinitializer
  %3420 = fmul fast <2 x float> %3419, %3417
  %3421 = fneg fast float %3404
  %3422 = fmul fast float %3416, %3421
  %3423 = load i32, ptr %3234, align 8, !tbaa !180
  %3424 = and i32 %3423, 67108864
  %3425 = icmp eq i32 %3424, 0
  br i1 %3425, label %3440, label %3426

3426:                                             ; preds = %3398
  %3427 = load ptr, ptr %3162, align 8, !tbaa !22
  %3428 = fmul fast <2 x float> %3420, %3420
  %3429 = shufflevector <2 x float> %3428, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %3430 = fadd fast <2 x float> %3429, %3428
  %3431 = extractelement <2 x float> %3430, i64 0
  %3432 = fmul fast float %3422, %3422
  %3433 = fadd fast float %3431, %3432
  %3434 = getelementptr inbounds %struct.StrokeCache, ptr %3427, i64 0, i32 12
  %3435 = load float, ptr %3434, align 4, !tbaa !199
  %3436 = getelementptr inbounds %struct.StrokeCache, ptr %3427, i64 0, i32 49
  %3437 = load float, ptr %3436, align 4, !tbaa !159
  %3438 = fmul fast float %3437, %3435
  %3439 = fcmp fast ugt float %3433, %3438
  br i1 %3439, label %3466, label %3440

3440:                                             ; preds = %3426, %3398
  %3441 = call fast float @llvm.sqrt.f32(float %3387)
  %3442 = load ptr, ptr %3226, align 8, !tbaa !241
  %3443 = load ptr, ptr %3221, align 8, !tbaa !231
  %3444 = load ptr, ptr %3222, align 8, !tbaa !234
  %3445 = icmp eq ptr %3444, null
  br i1 %3445, label %3448, label %3446

3446:                                             ; preds = %3440
  %3447 = load float, ptr %3444, align 4, !tbaa !20
  br label %3448

3448:                                             ; preds = %3446, %3440
  %3449 = phi fast float [ %3447, %3446 ], [ 0.000000e+00, %3440 ]
  %3450 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef nonnull %3160, ptr noundef nonnull %3161, ptr noundef nonnull %3400, float noundef nofpclass(nan inf) %3441, ptr noundef %3442, ptr noundef %3443, float noundef nofpclass(nan inf) %3449)
  %3451 = fmul fast float %3450, %3165
  %3452 = load i32, ptr %3206, align 4, !tbaa !210
  %3453 = sext i32 %3452 to i64
  %3454 = getelementptr inbounds [3 x float], ptr %3242, i64 %3453
  %3455 = insertelement <2 x float> poison, float %3451, i64 0
  %3456 = shufflevector <2 x float> %3455, <2 x float> poison, <2 x i32> zeroinitializer
  %3457 = fmul fast <2 x float> %3456, %3420
  store <2 x float> %3457, ptr %3454, align 4, !tbaa !20
  %3458 = fmul fast float %3451, %3422
  %3459 = getelementptr inbounds float, ptr %3454, i64 2
  store float %3458, ptr %3459, align 4, !tbaa !20
  %3460 = load ptr, ptr %3225, align 8, !tbaa !238
  %3461 = icmp eq ptr %3460, null
  br i1 %3461, label %3466, label %3462

3462:                                             ; preds = %3448
  %3463 = getelementptr inbounds %struct.MVert, ptr %3460, i64 0, i32 2
  %3464 = load i8, ptr %3463, align 2, !tbaa !239
  %3465 = or i8 %3464, -128
  store i8 %3465, ptr %3463, align 2, !tbaa !239
  br label %3466

3466:                                             ; preds = %3462, %3448, %3426, %3390, %3375, %3352, %3335, %3319
  %3467 = load i32, ptr %3218, align 4, !tbaa !226
  %3468 = add nsw i32 %3467, 1
  store i32 %3468, ptr %3218, align 4, !tbaa !226
  %3469 = load i32, ptr %3206, align 4, !tbaa !210
  %3470 = add nsw i32 %3469, 1
  store i32 %3470, ptr %3206, align 4, !tbaa !210
  %3471 = load i32, ptr %3210, align 4, !tbaa !218
  %3472 = icmp slt i32 %3468, %3471
  br i1 %3472, label %3293, label %3473, !llvm.loop !336

3473:                                             ; preds = %3466
  %3474 = load i32, ptr %3217, align 8, !tbaa !220
  %3475 = load i32, ptr %3211, align 8, !tbaa !219
  br label %3476

3476:                                             ; preds = %3473, %3288
  %3477 = phi i32 [ %3289, %3288 ], [ %3475, %3473 ]
  %3478 = phi i32 [ %3290, %3288 ], [ %3474, %3473 ]
  %3479 = phi i32 [ %3291, %3288 ], [ %3471, %3473 ]
  %3480 = add nsw i32 %3478, 1
  store i32 %3480, ptr %3217, align 8, !tbaa !220
  %3481 = icmp slt i32 %3480, %3477
  br i1 %3481, label %3288, label %3482, !llvm.loop !337

3482:                                             ; preds = %3476
  %3483 = load i32, ptr %25, align 8, !tbaa !214
  %3484 = load i32, ptr %3207, align 8, !tbaa !215
  br label %3485

3485:                                             ; preds = %3482, %3272
  %3486 = phi i32 [ %3266, %3272 ], [ %3484, %3482 ]
  %3487 = phi i32 [ %3267, %3272 ], [ %3483, %3482 ]
  %3488 = add nsw i32 %3487, 1
  store i32 %3488, ptr %25, align 8, !tbaa !214
  %3489 = icmp slt i32 %3488, %3486
  br i1 %3489, label %3265, label %3490, !llvm.loop !338

3490:                                             ; preds = %3485, %3236
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %25) #10
  %3491 = add nuw nsw i64 %3237, 1
  %3492 = icmp eq i64 %3491, %3235
  br i1 %3492, label %3493, label %3236, !llvm.loop !339

3493:                                             ; preds = %3490, %3180
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %24) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %23) #10
  br label %5193

3494:                                             ; preds = %285
  %3495 = load ptr, ptr %45, align 8, !tbaa !31
  %3496 = load i32, ptr %46, align 4, !tbaa !24
  %3497 = load ptr, ptr %48, align 8, !tbaa !5
  %3498 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %3499 = getelementptr %struct.SculptSession, ptr %3497, i64 0, i32 28
  %3500 = load ptr, ptr %3499, align 8, !tbaa !22
  %3501 = getelementptr inbounds %struct.StrokeCache, ptr %3500, i64 0, i32 19
  %3502 = load float, ptr %3501, align 8, !tbaa !203
  %3503 = getelementptr inbounds %struct.StrokeCache, ptr %3500, i64 0, i32 11
  %3504 = load float, ptr %3503, align 8, !tbaa !198
  %3505 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %3506 = getelementptr inbounds %struct.Brush, ptr %3505, i64 0, i32 29
  %3507 = load float, ptr %3506, align 4, !tbaa !335
  %3508 = getelementptr inbounds %struct.Brush, ptr %3505, i64 0, i32 16
  %3509 = load i32, ptr %3508, align 8, !tbaa !180
  %3510 = and i32 %3509, 65536
  %3511 = icmp eq i32 %3510, 0
  br i1 %3511, label %3517, label %3512

3512:                                             ; preds = %3494
  %3513 = load ptr, ptr %3499, align 8, !tbaa !22
  %3514 = getelementptr inbounds %struct.StrokeCache, ptr %3513, i64 0, i32 17
  %3515 = load float, ptr %3514, align 4, !tbaa !196
  %3516 = fmul fast float %3515, %3507
  br label %3517

3517:                                             ; preds = %3512, %3494
  %3518 = phi float [ %3516, %3512 ], [ %3507, %3494 ]
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %20) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %21) #10
  call fastcc void @calc_sculpt_plane(ptr noundef %0, ptr noundef nonnull %1, ptr noundef %3495, i32 noundef %3496, ptr noundef nonnull %20, ptr noundef nonnull %21)
  %3519 = fcmp fast uge float %3502, 0.000000e+00
  %3520 = fneg fast float %3502
  %3521 = fneg fast float %3504
  %3522 = select i1 %3519, float %3504, float %3521
  %3523 = select nnan ninf i1 %3519, float %3502, float %3520
  %3524 = fadd fast float %3518, 2.500000e-01
  %3525 = fmul fast float %3524, %3522
  %3526 = load ptr, ptr %3499, align 8, !tbaa !22
  %3527 = getelementptr inbounds %struct.StrokeCache, ptr %3526, i64 0, i32 1
  %3528 = getelementptr inbounds float, ptr %20, i64 2
  %3529 = load float, ptr %3528, align 8, !tbaa !20
  %3530 = getelementptr inbounds %struct.StrokeCache, ptr %3526, i64 0, i32 1, i64 2
  %3531 = load float, ptr %3530, align 4, !tbaa !20
  %3532 = fmul fast float %3529, %3525
  %3533 = fmul fast float %3532, %3531
  %3534 = getelementptr inbounds float, ptr %21, i64 1
  %3535 = load <2 x float>, ptr %20, align 8, !tbaa !20
  %3536 = load <2 x float>, ptr %3527, align 4, !tbaa !20
  %3537 = insertelement <2 x float> poison, float %3525, i64 0
  %3538 = shufflevector <2 x float> %3537, <2 x float> poison, <2 x i32> zeroinitializer
  %3539 = fmul fast <2 x float> %3535, %3538
  %3540 = fmul fast <2 x float> %3539, %3536
  %3541 = load <2 x float>, ptr %21, align 8, !tbaa !20
  %3542 = fadd fast <2 x float> %3541, %3540
  store <2 x float> %3542, ptr %21, align 8, !tbaa !20
  %3543 = getelementptr inbounds float, ptr %21, i64 2
  %3544 = load float, ptr %3543, align 8, !tbaa !20
  %3545 = fadd fast float %3544, %3533
  store float %3545, ptr %3543, align 8, !tbaa !20
  %3546 = icmp sgt i32 %3496, 0
  br i1 %3546, label %3547, label %3840

3547:                                             ; preds = %3517
  %3548 = getelementptr inbounds %struct.SculptSession, ptr %3497, i64 0, i32 15
  %3549 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 5
  %3550 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 12
  %3551 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 6
  %3552 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 13
  %3553 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 1
  %3554 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 2
  %3555 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 11
  %3556 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 7
  %3557 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 9
  %3558 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 10
  %3559 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 15
  %3560 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 4
  %3561 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 3
  %3562 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 8
  %3563 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 24
  %3564 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 26
  %3565 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 27
  %3566 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 14
  %3567 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 16
  %3568 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 22
  %3569 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 25
  %3570 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 17
  %3571 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 18, i32 0, i32 1
  %3572 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 18
  %3573 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 23
  %3574 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 19
  %3575 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 19, i32 0, i32 1
  %3576 = getelementptr inbounds %struct.PBVHVertexIter, ptr %22, i64 0, i32 21
  %3577 = getelementptr i8, ptr %3498, i64 1856
  %3578 = zext i32 %3496 to i64
  br label %3579

3579:                                             ; preds = %3837, %3547
  %3580 = phi i64 [ 0, %3547 ], [ %3838, %3837 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %22) #10
  %3581 = load ptr, ptr %3548, align 8, !tbaa !21
  %3582 = getelementptr inbounds ptr, ptr %3495, i64 %3580
  %3583 = load ptr, ptr %3582, align 8, !tbaa !31
  %3584 = call ptr @BKE_pbvh_node_add_proxy(ptr noundef %3581, ptr noundef %3583) #10
  %3585 = load ptr, ptr %3584, align 8, !tbaa !252
  %3586 = load ptr, ptr %3499, align 8, !tbaa !22
  %3587 = getelementptr inbounds %struct.StrokeCache, ptr %3586, i64 0, i32 22
  %3588 = load ptr, ptr %3587, align 8, !tbaa !172
  %3589 = getelementptr inbounds %struct.ViewContext, ptr %3588, i64 0, i32 5
  %3590 = load ptr, ptr %3589, align 8, !tbaa !174
  %3591 = getelementptr inbounds %struct.StrokeCache, ptr %3586, i64 0, i32 12
  %3592 = load float, ptr %3591, align 4, !tbaa !199
  %3593 = getelementptr inbounds %struct.StrokeCache, ptr %3586, i64 0, i32 14
  %3594 = load float, ptr %3593, align 4, !tbaa !20
  %3595 = getelementptr inbounds %struct.StrokeCache, ptr %3586, i64 0, i32 14, i64 1
  %3596 = load <2 x float>, ptr %3595, align 4, !tbaa !20
  %3597 = getelementptr inbounds %struct.RegionView3D, ptr %3590, i64 0, i32 32
  %3598 = load i16, ptr %3597, align 2, !tbaa !293
  %3599 = and i16 %3598, 4
  %3600 = icmp eq i16 %3599, 0
  %3601 = select i1 %3600, ptr null, ptr %3590
  %3602 = load ptr, ptr %3548, align 8, !tbaa !21
  %3603 = load ptr, ptr %3582, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %3602, ptr noundef %3603, ptr noundef nonnull %22, i32 noundef 1) #10
  store i32 0, ptr %3549, align 4, !tbaa !210
  store i32 0, ptr %22, align 8, !tbaa !214
  %3604 = load i32, ptr %3550, align 8, !tbaa !215
  %3605 = icmp sgt i32 %3604, 0
  br i1 %3605, label %3606, label %3837

3606:                                             ; preds = %3579
  %3607 = icmp eq ptr %3601, null
  br label %3608

3608:                                             ; preds = %3832, %3606
  %3609 = phi i32 [ %3604, %3606 ], [ %3833, %3832 ]
  %3610 = phi i32 [ 0, %3606 ], [ %3835, %3832 ]
  %3611 = load ptr, ptr %3551, align 8, !tbaa !216
  %3612 = icmp eq ptr %3611, null
  br i1 %3612, label %3613, label %3615

3613:                                             ; preds = %3608
  %3614 = load i32, ptr %3559, align 8, !tbaa !217
  store i32 %3614, ptr %3553, align 4, !tbaa !218
  store i32 1, ptr %3554, align 8, !tbaa !219
  store i32 0, ptr %3560, align 8, !tbaa !220
  br label %3628

3615:                                             ; preds = %3608
  %3616 = load i32, ptr %3552, align 4, !tbaa !221
  store i32 %3616, ptr %3553, align 4, !tbaa !218
  store i32 %3616, ptr %3554, align 8, !tbaa !219
  %3617 = load ptr, ptr %3555, align 8, !tbaa !222
  %3618 = sext i32 %3610 to i64
  %3619 = getelementptr inbounds i32, ptr %3617, i64 %3618
  %3620 = load i32, ptr %3619, align 4, !tbaa !24
  %3621 = sext i32 %3620 to i64
  %3622 = getelementptr inbounds ptr, ptr %3611, i64 %3621
  %3623 = load ptr, ptr %3622, align 8, !tbaa !31
  store ptr %3623, ptr %3556, align 8, !tbaa !223
  %3624 = load ptr, ptr %3557, align 8, !tbaa !224
  %3625 = getelementptr inbounds ptr, ptr %3624, i64 %3621
  %3626 = load ptr, ptr %3625, align 8, !tbaa !31
  store ptr %3626, ptr %3558, align 8, !tbaa !225
  store i32 0, ptr %3560, align 8, !tbaa !220
  %3627 = icmp sgt i32 %3616, 0
  br i1 %3627, label %3628, label %3832

3628:                                             ; preds = %3615, %3613
  %3629 = phi i32 [ %3616, %3615 ], [ 1, %3613 ]
  %3630 = phi i32 [ %3616, %3615 ], [ %3614, %3613 ]
  br label %3631

3631:                                             ; preds = %3628, %3823
  %3632 = phi i32 [ %3824, %3823 ], [ %3629, %3628 ]
  %3633 = phi i32 [ %3827, %3823 ], [ 0, %3628 ]
  %3634 = phi i32 [ %3826, %3823 ], [ %3630, %3628 ]
  store i32 0, ptr %3561, align 4, !tbaa !226
  %3635 = icmp sgt i32 %3634, 0
  br i1 %3635, label %3636, label %3823

3636:                                             ; preds = %3631, %3813
  %3637 = phi i32 [ %3815, %3813 ], [ 0, %3631 ]
  %3638 = load ptr, ptr %3556, align 8, !tbaa !223
  %3639 = icmp eq ptr %3638, null
  br i1 %3639, label %3675, label %3640

3640:                                             ; preds = %3636
  store ptr %3638, ptr %3563, align 8, !tbaa !227
  %3641 = load ptr, ptr %3562, align 8, !tbaa !228
  %3642 = getelementptr i8, ptr %3641, i64 20
  %3643 = load i32, ptr %3642, align 4, !tbaa !229
  %3644 = sext i32 %3643 to i64
  %3645 = getelementptr inbounds i8, ptr %3638, i64 %3644
  store ptr %3645, ptr %3564, align 8, !tbaa !231
  %3646 = getelementptr inbounds %struct.CCGKey, ptr %3641, i64 0, i32 9
  %3647 = load i32, ptr %3646, align 4, !tbaa !232
  %3648 = icmp eq i32 %3647, 0
  br i1 %3648, label %3654, label %3649

3649:                                             ; preds = %3640
  %3650 = getelementptr i8, ptr %3641, i64 24
  %3651 = load i32, ptr %3650, align 4, !tbaa !233
  %3652 = sext i32 %3651 to i64
  %3653 = getelementptr inbounds i8, ptr %3638, i64 %3652
  br label %3654

3654:                                             ; preds = %3649, %3640
  %3655 = phi ptr [ %3653, %3649 ], [ null, %3640 ]
  store ptr %3655, ptr %3565, align 8, !tbaa !234
  %3656 = getelementptr i8, ptr %3641, i64 4
  %3657 = load i32, ptr %3656, align 4, !tbaa !235
  %3658 = sext i32 %3657 to i64
  %3659 = getelementptr inbounds i8, ptr %3638, i64 %3658
  store ptr %3659, ptr %3556, align 8, !tbaa !223
  %3660 = load ptr, ptr %3558, align 8, !tbaa !225
  %3661 = icmp eq ptr %3660, null
  br i1 %3661, label %3718, label %3662

3662:                                             ; preds = %3654
  %3663 = load i32, ptr %3560, align 8, !tbaa !220
  %3664 = load i32, ptr %3552, align 4, !tbaa !221
  %3665 = mul nsw i32 %3664, %3663
  %3666 = add nsw i32 %3665, %3637
  %3667 = ashr i32 %3666, 5
  %3668 = sext i32 %3667 to i64
  %3669 = getelementptr inbounds i32, ptr %3660, i64 %3668
  %3670 = load i32, ptr %3669, align 4, !tbaa !24
  %3671 = and i32 %3666, 31
  %3672 = shl nuw i32 1, %3671
  %3673 = and i32 %3672, %3670
  %3674 = icmp eq i32 %3673, 0
  br i1 %3674, label %3718, label %3813

3675:                                             ; preds = %3636
  %3676 = load ptr, ptr %3566, align 8, !tbaa !236
  %3677 = icmp eq ptr %3676, null
  br i1 %3677, label %3695, label %3678

3678:                                             ; preds = %3675
  %3679 = load ptr, ptr %3567, align 8, !tbaa !237
  %3680 = sext i32 %3637 to i64
  %3681 = getelementptr inbounds i32, ptr %3679, i64 %3680
  %3682 = load i32, ptr %3681, align 4, !tbaa !24
  %3683 = sext i32 %3682 to i64
  %3684 = getelementptr inbounds %struct.MVert, ptr %3676, i64 %3683
  store ptr %3684, ptr %3568, align 8, !tbaa !238
  %3685 = getelementptr inbounds %struct.MVert, ptr %3676, i64 %3683, i32 2
  %3686 = load i8, ptr %3685, align 2, !tbaa !239
  %3687 = and i8 %3686, 16
  %3688 = icmp eq i8 %3687, 0
  br i1 %3688, label %3689, label %3813

3689:                                             ; preds = %3678
  store ptr %3684, ptr %3563, align 8, !tbaa !227
  %3690 = getelementptr inbounds %struct.MVert, ptr %3676, i64 %3683, i32 1
  store ptr %3690, ptr %3569, align 8, !tbaa !241
  %3691 = load ptr, ptr %3570, align 8, !tbaa !242
  %3692 = icmp eq ptr %3691, null
  br i1 %3692, label %3718, label %3693

3693:                                             ; preds = %3689
  %3694 = getelementptr inbounds float, ptr %3691, i64 %3683
  br label %3715

3695:                                             ; preds = %3675
  %3696 = load ptr, ptr %3571, align 8, !tbaa !243
  %3697 = icmp eq ptr %3696, null
  %3698 = load ptr, ptr %3575, align 8
  %3699 = select i1 %3697, ptr %3698, ptr %3696
  %3700 = select i1 %3697, ptr %3574, ptr %3572
  %3701 = getelementptr i8, ptr %3699, i64 8
  %3702 = load ptr, ptr %3701, align 8, !tbaa !244
  store ptr %3702, ptr %3573, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %3700) #10
  %3703 = load ptr, ptr %3573, align 8, !tbaa !246
  %3704 = getelementptr i8, ptr %3703, i64 13
  %3705 = load i8, ptr %3704, align 1, !tbaa !247
  %3706 = and i8 %3705, 2
  %3707 = icmp eq i8 %3706, 0
  br i1 %3707, label %3708, label %3813

3708:                                             ; preds = %3695
  %3709 = getelementptr inbounds %struct.BMVert, ptr %3703, i64 0, i32 2
  store ptr %3709, ptr %3563, align 8, !tbaa !227
  %3710 = getelementptr inbounds %struct.BMVert, ptr %3703, i64 0, i32 3
  store ptr %3710, ptr %3564, align 8, !tbaa !231
  %3711 = load ptr, ptr %3703, align 8, !tbaa !249
  %3712 = load i32, ptr %3576, align 8, !tbaa !251
  %3713 = sext i32 %3712 to i64
  %3714 = getelementptr inbounds i8, ptr %3711, i64 %3713
  br label %3715

3715:                                             ; preds = %3708, %3693
  %3716 = phi ptr [ %3714, %3708 ], [ %3694, %3693 ]
  %3717 = phi ptr [ %3709, %3708 ], [ %3684, %3693 ]
  store ptr %3716, ptr %3565, align 8, !tbaa !234
  br label %3718

3718:                                             ; preds = %3715, %3689, %3662, %3654
  %3719 = phi ptr [ %3684, %3689 ], [ %3638, %3654 ], [ %3638, %3662 ], [ %3717, %3715 ]
  %3720 = load float, ptr %3719, align 4, !tbaa !20
  %3721 = fsub fast float %3594, %3720
  %3722 = getelementptr inbounds float, ptr %3719, i64 1
  %3723 = load <2 x float>, ptr %3722, align 4, !tbaa !20
  %3724 = fmul fast float %3721, %3721
  %3725 = fsub fast <2 x float> %3596, %3723
  %3726 = fmul fast <2 x float> %3725, %3725
  %3727 = extractelement <2 x float> %3726, i64 0
  %3728 = fadd fast float %3727, %3724
  %3729 = extractelement <2 x float> %3726, i64 1
  %3730 = fadd fast float %3728, %3729
  %3731 = fcmp fast ugt float %3730, %3592
  br i1 %3731, label %3813, label %3732

3732:                                             ; preds = %3718
  br i1 %3607, label %3741, label %3733

3733:                                             ; preds = %3732
  %3734 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %3601, ptr noundef nonnull %3719, i8 noundef zeroext 1) #10
  %3735 = icmp eq i8 %3734, 0
  br i1 %3735, label %3736, label %3813

3736:                                             ; preds = %3733
  %3737 = load ptr, ptr %3563, align 8, !tbaa !227
  %3738 = load float, ptr %3737, align 4, !tbaa !20
  %3739 = getelementptr inbounds float, ptr %3737, i64 1
  %3740 = load <2 x float>, ptr %3739, align 4, !tbaa !20
  br label %3741

3741:                                             ; preds = %3736, %3732
  %3742 = phi float [ %3738, %3736 ], [ %3720, %3732 ]
  %3743 = phi ptr [ %3737, %3736 ], [ %3719, %3732 ]
  %3744 = phi <2 x float> [ %3740, %3736 ], [ %3723, %3732 ]
  %3745 = load float, ptr %21, align 8, !tbaa !20
  %3746 = fsub fast float %3742, %3745
  %3747 = load <2 x float>, ptr %20, align 8, !tbaa !20
  %3748 = extractelement <2 x float> %3747, i64 0
  %3749 = fmul fast float %3748, %3746
  %3750 = load float, ptr %3528, align 8, !tbaa !20
  %3751 = load <2 x float>, ptr %3534, align 4, !tbaa !20
  %3752 = fsub fast <2 x float> %3744, %3751
  %3753 = shufflevector <2 x float> %3747, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %3754 = insertelement <2 x float> %3753, float %3750, i64 1
  %3755 = fmul fast <2 x float> %3754, %3752
  %3756 = extractelement <2 x float> %3755, i64 0
  %3757 = fadd fast float %3756, %3749
  %3758 = extractelement <2 x float> %3755, i64 1
  %3759 = fadd fast float %3757, %3758
  %3760 = fneg fast float %3759
  %3761 = select i1 %3519, float %3759, float %3760
  %3762 = fcmp fast ugt float %3761, 0.000000e+00
  br i1 %3762, label %3813, label %3763

3763:                                             ; preds = %3741
  %3764 = fneg fast <2 x float> %3747
  %3765 = insertelement <2 x float> poison, float %3759, i64 0
  %3766 = shufflevector <2 x float> %3765, <2 x float> poison, <2 x i32> zeroinitializer
  %3767 = fmul fast <2 x float> %3766, %3764
  %3768 = fneg fast float %3750
  %3769 = fmul fast float %3759, %3768
  %3770 = load i32, ptr %3577, align 8, !tbaa !180
  %3771 = and i32 %3770, 67108864
  %3772 = icmp eq i32 %3771, 0
  br i1 %3772, label %3787, label %3773

3773:                                             ; preds = %3763
  %3774 = load ptr, ptr %3499, align 8, !tbaa !22
  %3775 = fmul fast <2 x float> %3767, %3767
  %3776 = shufflevector <2 x float> %3775, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %3777 = fadd fast <2 x float> %3776, %3775
  %3778 = extractelement <2 x float> %3777, i64 0
  %3779 = fmul fast float %3769, %3769
  %3780 = fadd fast float %3778, %3779
  %3781 = getelementptr inbounds %struct.StrokeCache, ptr %3774, i64 0, i32 12
  %3782 = load float, ptr %3781, align 4, !tbaa !199
  %3783 = getelementptr inbounds %struct.StrokeCache, ptr %3774, i64 0, i32 49
  %3784 = load float, ptr %3783, align 4, !tbaa !159
  %3785 = fmul fast float %3784, %3782
  %3786 = fcmp fast ugt float %3780, %3785
  br i1 %3786, label %3813, label %3787

3787:                                             ; preds = %3773, %3763
  %3788 = call fast float @llvm.sqrt.f32(float %3730)
  %3789 = load ptr, ptr %3569, align 8, !tbaa !241
  %3790 = load ptr, ptr %3564, align 8, !tbaa !231
  %3791 = load ptr, ptr %3565, align 8, !tbaa !234
  %3792 = icmp eq ptr %3791, null
  br i1 %3792, label %3795, label %3793

3793:                                             ; preds = %3787
  %3794 = load float, ptr %3791, align 4, !tbaa !20
  br label %3795

3795:                                             ; preds = %3793, %3787
  %3796 = phi fast float [ %3794, %3793 ], [ 0.000000e+00, %3787 ]
  %3797 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef nonnull %3497, ptr noundef nonnull %3498, ptr noundef nonnull %3743, float noundef nofpclass(nan inf) %3788, ptr noundef %3789, ptr noundef %3790, float noundef nofpclass(nan inf) %3796)
  %3798 = fmul fast float %3797, %3523
  %3799 = load i32, ptr %3549, align 4, !tbaa !210
  %3800 = sext i32 %3799 to i64
  %3801 = getelementptr inbounds [3 x float], ptr %3585, i64 %3800
  %3802 = insertelement <2 x float> poison, float %3798, i64 0
  %3803 = shufflevector <2 x float> %3802, <2 x float> poison, <2 x i32> zeroinitializer
  %3804 = fmul fast <2 x float> %3803, %3767
  store <2 x float> %3804, ptr %3801, align 4, !tbaa !20
  %3805 = fmul fast float %3798, %3769
  %3806 = getelementptr inbounds float, ptr %3801, i64 2
  store float %3805, ptr %3806, align 4, !tbaa !20
  %3807 = load ptr, ptr %3568, align 8, !tbaa !238
  %3808 = icmp eq ptr %3807, null
  br i1 %3808, label %3813, label %3809

3809:                                             ; preds = %3795
  %3810 = getelementptr inbounds %struct.MVert, ptr %3807, i64 0, i32 2
  %3811 = load i8, ptr %3810, align 2, !tbaa !239
  %3812 = or i8 %3811, -128
  store i8 %3812, ptr %3810, align 2, !tbaa !239
  br label %3813

3813:                                             ; preds = %3809, %3795, %3773, %3741, %3733, %3718, %3695, %3678, %3662
  %3814 = load i32, ptr %3561, align 4, !tbaa !226
  %3815 = add nsw i32 %3814, 1
  store i32 %3815, ptr %3561, align 4, !tbaa !226
  %3816 = load i32, ptr %3549, align 4, !tbaa !210
  %3817 = add nsw i32 %3816, 1
  store i32 %3817, ptr %3549, align 4, !tbaa !210
  %3818 = load i32, ptr %3553, align 4, !tbaa !218
  %3819 = icmp slt i32 %3815, %3818
  br i1 %3819, label %3636, label %3820, !llvm.loop !340

3820:                                             ; preds = %3813
  %3821 = load i32, ptr %3560, align 8, !tbaa !220
  %3822 = load i32, ptr %3554, align 8, !tbaa !219
  br label %3823

3823:                                             ; preds = %3820, %3631
  %3824 = phi i32 [ %3632, %3631 ], [ %3822, %3820 ]
  %3825 = phi i32 [ %3633, %3631 ], [ %3821, %3820 ]
  %3826 = phi i32 [ %3634, %3631 ], [ %3818, %3820 ]
  %3827 = add nsw i32 %3825, 1
  store i32 %3827, ptr %3560, align 8, !tbaa !220
  %3828 = icmp slt i32 %3827, %3824
  br i1 %3828, label %3631, label %3829, !llvm.loop !341

3829:                                             ; preds = %3823
  %3830 = load i32, ptr %22, align 8, !tbaa !214
  %3831 = load i32, ptr %3550, align 8, !tbaa !215
  br label %3832

3832:                                             ; preds = %3829, %3615
  %3833 = phi i32 [ %3609, %3615 ], [ %3831, %3829 ]
  %3834 = phi i32 [ %3610, %3615 ], [ %3830, %3829 ]
  %3835 = add nsw i32 %3834, 1
  store i32 %3835, ptr %22, align 8, !tbaa !214
  %3836 = icmp slt i32 %3835, %3833
  br i1 %3836, label %3608, label %3837, !llvm.loop !342

3837:                                             ; preds = %3832, %3579
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %22) #10
  %3838 = add nuw nsw i64 %3580, 1
  %3839 = icmp eq i64 %3838, %3578
  br i1 %3839, label %3840, label %3579, !llvm.loop !343

3840:                                             ; preds = %3837, %3517
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %21) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %20) #10
  br label %5193

3841:                                             ; preds = %285
  %3842 = load ptr, ptr %45, align 8, !tbaa !31
  %3843 = load i32, ptr %46, align 4, !tbaa !24
  %3844 = load ptr, ptr %48, align 8, !tbaa !5
  %3845 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %3846 = getelementptr %struct.SculptSession, ptr %3844, i64 0, i32 28
  %3847 = load ptr, ptr %3846, align 8, !tbaa !22
  %3848 = getelementptr inbounds %struct.StrokeCache, ptr %3847, i64 0, i32 19
  %3849 = load float, ptr %3848, align 8, !tbaa !203
  %3850 = getelementptr inbounds %struct.StrokeCache, ptr %3847, i64 0, i32 11
  %3851 = load float, ptr %3850, align 8, !tbaa !198
  %3852 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %3853 = getelementptr inbounds %struct.Brush, ptr %3852, i64 0, i32 29
  %3854 = load float, ptr %3853, align 4, !tbaa !335
  %3855 = getelementptr inbounds %struct.Brush, ptr %3852, i64 0, i32 16
  %3856 = load i32, ptr %3855, align 8, !tbaa !180
  %3857 = and i32 %3856, 65536
  %3858 = icmp eq i32 %3857, 0
  br i1 %3858, label %3864, label %3859

3859:                                             ; preds = %3841
  %3860 = load ptr, ptr %3846, align 8, !tbaa !22
  %3861 = getelementptr inbounds %struct.StrokeCache, ptr %3860, i64 0, i32 17
  %3862 = load float, ptr %3861, align 4, !tbaa !196
  %3863 = fmul fast float %3862, %3854
  br label %3864

3864:                                             ; preds = %3859, %3841
  %3865 = phi float [ %3863, %3859 ], [ %3854, %3841 ]
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %13) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %14) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %15) #10
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %16) #10
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %17) #10
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %18) #10
  call fastcc void @calc_sculpt_plane(ptr noundef %0, ptr noundef nonnull %1, ptr noundef %3842, i32 noundef %3843, ptr noundef nonnull %13, ptr noundef nonnull %15)
  %3866 = getelementptr inbounds %struct.Brush, ptr %3845, i64 0, i32 28
  %3867 = load i32, ptr %3866, align 8, !tbaa !291
  %3868 = icmp eq i32 %3867, 0
  br i1 %3868, label %3869, label %3874

3869:                                             ; preds = %3864
  %3870 = getelementptr inbounds %struct.Brush, ptr %3845, i64 0, i32 16
  %3871 = load i32, ptr %3870, align 8, !tbaa !180
  %3872 = and i32 %3871, 32768
  %3873 = icmp eq i32 %3872, 0
  br i1 %3873, label %3875, label %3874

3874:                                             ; preds = %3869, %3864
  call fastcc void @calc_area_normal(ptr noundef %0, ptr noundef nonnull %1, ptr noundef nonnull %14, ptr noundef %3842, i32 noundef %3843)
  br label %3880

3875:                                             ; preds = %3869
  %3876 = load <2 x float>, ptr %13, align 8, !tbaa !20
  store <2 x float> %3876, ptr %14, align 8, !tbaa !20
  %3877 = getelementptr inbounds float, ptr %13, i64 2
  %3878 = load float, ptr %3877, align 8, !tbaa !20
  %3879 = getelementptr inbounds float, ptr %14, i64 2
  store float %3878, ptr %3879, align 8, !tbaa !20
  br label %3880

3880:                                             ; preds = %3875, %3874
  %3881 = load ptr, ptr %3846, align 8, !tbaa !22
  %3882 = getelementptr inbounds %struct.StrokeCache, ptr %3881, i64 0, i32 20
  %3883 = load i8, ptr %3882, align 4, !tbaa !188
  %3884 = icmp eq i8 %3883, 0
  br i1 %3884, label %3885, label %4258

3885:                                             ; preds = %3880
  %3886 = fcmp fast uge float %3849, 0.000000e+00
  %3887 = fneg fast float %3849
  %3888 = fneg fast float %3851
  %3889 = select i1 %3886, float %3851, float %3888
  %3890 = select nnan ninf i1 %3886, float %3849, float %3887
  %3891 = fadd fast float %3865, 2.500000e-01
  %3892 = fmul fast float %3891, %3889
  %3893 = getelementptr inbounds %struct.StrokeCache, ptr %3881, i64 0, i32 1
  %3894 = getelementptr inbounds float, ptr %13, i64 2
  %3895 = load float, ptr %3894, align 8, !tbaa !20
  %3896 = getelementptr inbounds %struct.StrokeCache, ptr %3881, i64 0, i32 1, i64 2
  %3897 = load float, ptr %3896, align 4, !tbaa !20
  %3898 = fmul fast float %3895, %3892
  %3899 = fmul fast float %3898, %3897
  %3900 = getelementptr inbounds float, ptr %15, i64 1
  %3901 = load <2 x float>, ptr %13, align 8, !tbaa !20
  %3902 = load <2 x float>, ptr %3893, align 4, !tbaa !20
  %3903 = insertelement <2 x float> poison, float %3892, i64 0
  %3904 = shufflevector <2 x float> %3903, <2 x float> poison, <2 x i32> zeroinitializer
  %3905 = fmul fast <2 x float> %3901, %3904
  %3906 = fmul fast <2 x float> %3905, %3902
  %3907 = load <2 x float>, ptr %15, align 8, !tbaa !20
  %3908 = fadd fast <2 x float> %3907, %3906
  store <2 x float> %3908, ptr %15, align 8, !tbaa !20
  %3909 = getelementptr inbounds float, ptr %15, i64 2
  %3910 = load float, ptr %3909, align 8, !tbaa !20
  %3911 = fadd fast float %3910, %3899
  store float %3911, ptr %3909, align 8, !tbaa !20
  %3912 = getelementptr inbounds %struct.StrokeCache, ptr %3881, i64 0, i32 27
  %3913 = getelementptr inbounds float, ptr %14, i64 1
  %3914 = getelementptr inbounds %struct.StrokeCache, ptr %3881, i64 0, i32 27, i64 1
  %3915 = load float, ptr %3912, align 4, !tbaa !20
  %3916 = load float, ptr %14, align 8, !tbaa !20
  %3917 = load <2 x float>, ptr %3913, align 4, !tbaa !20
  %3918 = load <2 x float>, ptr %3914, align 4, !tbaa !20
  %3919 = shufflevector <2 x float> %3918, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %3920 = insertelement <2 x float> %3919, float %3915, i64 1
  %3921 = fmul fast <2 x float> %3920, %3917
  %3922 = shufflevector <2 x float> %3917, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %3923 = insertelement <2 x float> %3922, float %3916, i64 1
  %3924 = fmul fast <2 x float> %3923, %3918
  %3925 = fsub fast <2 x float> %3921, %3924
  store <2 x float> %3925, ptr %16, align 16, !tbaa !20
  %3926 = extractelement <2 x float> %3918, i64 0
  %3927 = fmul fast float %3916, %3926
  %3928 = extractelement <2 x float> %3917, i64 0
  %3929 = fmul fast float %3915, %3928
  %3930 = fsub fast float %3927, %3929
  %3931 = getelementptr inbounds float, ptr %16, i64 2
  store float %3930, ptr %3931, align 8, !tbaa !20
  %3932 = getelementptr inbounds [4 x float], ptr %16, i64 0, i64 3
  store float 0.000000e+00, ptr %3932, align 4, !tbaa !20
  %3933 = getelementptr inbounds [4 x [4 x float]], ptr %16, i64 0, i64 1
  %3934 = fmul fast float %3930, %3928
  %3935 = extractelement <2 x float> %3925, i64 1
  %3936 = extractelement <2 x float> %3917, i64 1
  %3937 = fmul fast float %3935, %3936
  %3938 = fsub fast float %3934, %3937
  store float %3938, ptr %3933, align 16, !tbaa !20
  %3939 = extractelement <2 x float> %3925, i64 0
  %3940 = fmul fast float %3939, %3936
  %3941 = fmul fast float %3930, %3916
  %3942 = fsub fast float %3940, %3941
  %3943 = getelementptr inbounds [4 x [4 x float]], ptr %16, i64 0, i64 1, i64 1
  store float %3942, ptr %3943, align 4, !tbaa !20
  %3944 = fmul fast float %3935, %3916
  %3945 = fmul fast <2 x float> %3925, %3917
  %3946 = extractelement <2 x float> %3945, i64 0
  %3947 = fsub fast float %3944, %3946
  %3948 = getelementptr inbounds [4 x [4 x float]], ptr %16, i64 0, i64 1, i64 2
  store float %3947, ptr %3948, align 8, !tbaa !20
  %3949 = getelementptr inbounds [4 x [4 x float]], ptr %16, i64 0, i64 1, i64 3
  store float 0.000000e+00, ptr %3949, align 4, !tbaa !20
  %3950 = getelementptr inbounds [4 x [4 x float]], ptr %16, i64 0, i64 2
  store float %3916, ptr %3950, align 16, !tbaa !20
  %3951 = getelementptr inbounds [4 x [4 x float]], ptr %16, i64 0, i64 2, i64 1
  store <2 x float> %3917, ptr %3951, align 4, !tbaa !20
  %3952 = getelementptr inbounds [4 x [4 x float]], ptr %16, i64 0, i64 2, i64 3
  store float 0.000000e+00, ptr %3952, align 4, !tbaa !20
  %3953 = getelementptr inbounds [4 x [4 x float]], ptr %16, i64 0, i64 3
  %3954 = getelementptr inbounds %struct.StrokeCache, ptr %3881, i64 0, i32 14
  %3955 = load <2 x float>, ptr %3954, align 4, !tbaa !20
  store <2 x float> %3955, ptr %3953, align 16, !tbaa !20
  %3956 = getelementptr inbounds %struct.StrokeCache, ptr %3881, i64 0, i32 14, i64 2
  %3957 = load float, ptr %3956, align 4, !tbaa !20
  %3958 = getelementptr inbounds [4 x [4 x float]], ptr %16, i64 0, i64 3, i64 2
  store float %3957, ptr %3958, align 8, !tbaa !20
  %3959 = getelementptr inbounds [4 x [4 x float]], ptr %16, i64 0, i64 3, i64 3
  store float 1.000000e+00, ptr %3959, align 4, !tbaa !20
  call void @normalize_m4(ptr noundef nonnull %16) #10
  %3960 = load ptr, ptr %3846, align 8, !tbaa !22
  %3961 = getelementptr inbounds %struct.StrokeCache, ptr %3960, i64 0, i32 11
  %3962 = load float, ptr %3961, align 8, !tbaa !198
  call void @scale_m4_fl(ptr noundef nonnull %17, float noundef nofpclass(nan inf) %3962) #10
  call void @mul_m4_m4m4(ptr noundef nonnull %18, ptr noundef nonnull %16, ptr noundef nonnull %17) #10
  %3963 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %16, ptr noundef nonnull %18) #10
  %3964 = icmp sgt i32 %3843, 0
  br i1 %3964, label %3965, label %4258

3965:                                             ; preds = %3885
  %3966 = getelementptr inbounds %struct.SculptSession, ptr %3844, i64 0, i32 15
  %3967 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 5
  %3968 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 12
  %3969 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 6
  %3970 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 13
  %3971 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 1
  %3972 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 2
  %3973 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 11
  %3974 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 7
  %3975 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 9
  %3976 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 10
  %3977 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 15
  %3978 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 4
  %3979 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 3
  %3980 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 8
  %3981 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 24
  %3982 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 26
  %3983 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 27
  %3984 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 14
  %3985 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 16
  %3986 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 22
  %3987 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 25
  %3988 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 17
  %3989 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 18, i32 0, i32 1
  %3990 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 18
  %3991 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 23
  %3992 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 19
  %3993 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 19, i32 0, i32 1
  %3994 = getelementptr inbounds %struct.PBVHVertexIter, ptr %19, i64 0, i32 21
  %3995 = getelementptr inbounds [3 x float], ptr %12, i64 0, i64 1
  %3996 = getelementptr i8, ptr %3845, i64 1856
  %3997 = zext i32 %3843 to i64
  br label %3998

3998:                                             ; preds = %4255, %3965
  %3999 = phi i64 [ 0, %3965 ], [ %4256, %4255 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %19) #10
  %4000 = load ptr, ptr %3966, align 8, !tbaa !21
  %4001 = getelementptr inbounds ptr, ptr %3842, i64 %3999
  %4002 = load ptr, ptr %4001, align 8, !tbaa !31
  %4003 = call ptr @BKE_pbvh_node_add_proxy(ptr noundef %4000, ptr noundef %4002) #10
  %4004 = load ptr, ptr %4003, align 8, !tbaa !252
  %4005 = load ptr, ptr %3846, align 8, !tbaa !22
  %4006 = getelementptr inbounds %struct.StrokeCache, ptr %4005, i64 0, i32 22
  %4007 = load ptr, ptr %4006, align 8, !tbaa !172
  %4008 = getelementptr inbounds %struct.ViewContext, ptr %4007, i64 0, i32 5
  %4009 = load ptr, ptr %4008, align 8, !tbaa !174
  %4010 = getelementptr inbounds %struct.RegionView3D, ptr %4009, i64 0, i32 32
  %4011 = load i16, ptr %4010, align 2, !tbaa !293
  %4012 = and i16 %4011, 4
  %4013 = icmp eq i16 %4012, 0
  %4014 = select i1 %4013, ptr null, ptr %4009
  %4015 = load ptr, ptr %3966, align 8, !tbaa !21
  %4016 = load ptr, ptr %4001, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %4015, ptr noundef %4016, ptr noundef nonnull %19, i32 noundef 1) #10
  store i32 0, ptr %3967, align 4, !tbaa !210
  store i32 0, ptr %19, align 8, !tbaa !214
  %4017 = load i32, ptr %3968, align 8, !tbaa !215
  %4018 = icmp sgt i32 %4017, 0
  br i1 %4018, label %4019, label %4255

4019:                                             ; preds = %3998
  %4020 = icmp eq ptr %4014, null
  br label %4021

4021:                                             ; preds = %4250, %4019
  %4022 = phi i32 [ %4017, %4019 ], [ %4251, %4250 ]
  %4023 = phi i32 [ 0, %4019 ], [ %4253, %4250 ]
  %4024 = load ptr, ptr %3969, align 8, !tbaa !216
  %4025 = icmp eq ptr %4024, null
  br i1 %4025, label %4026, label %4028

4026:                                             ; preds = %4021
  %4027 = load i32, ptr %3977, align 8, !tbaa !217
  store i32 %4027, ptr %3971, align 4, !tbaa !218
  store i32 1, ptr %3972, align 8, !tbaa !219
  store i32 0, ptr %3978, align 8, !tbaa !220
  br label %4041

4028:                                             ; preds = %4021
  %4029 = load i32, ptr %3970, align 4, !tbaa !221
  store i32 %4029, ptr %3971, align 4, !tbaa !218
  store i32 %4029, ptr %3972, align 8, !tbaa !219
  %4030 = load ptr, ptr %3973, align 8, !tbaa !222
  %4031 = sext i32 %4023 to i64
  %4032 = getelementptr inbounds i32, ptr %4030, i64 %4031
  %4033 = load i32, ptr %4032, align 4, !tbaa !24
  %4034 = sext i32 %4033 to i64
  %4035 = getelementptr inbounds ptr, ptr %4024, i64 %4034
  %4036 = load ptr, ptr %4035, align 8, !tbaa !31
  store ptr %4036, ptr %3974, align 8, !tbaa !223
  %4037 = load ptr, ptr %3975, align 8, !tbaa !224
  %4038 = getelementptr inbounds ptr, ptr %4037, i64 %4034
  %4039 = load ptr, ptr %4038, align 8, !tbaa !31
  store ptr %4039, ptr %3976, align 8, !tbaa !225
  store i32 0, ptr %3978, align 8, !tbaa !220
  %4040 = icmp sgt i32 %4029, 0
  br i1 %4040, label %4041, label %4250

4041:                                             ; preds = %4028, %4026
  %4042 = phi i32 [ %4029, %4028 ], [ 1, %4026 ]
  %4043 = phi i32 [ %4029, %4028 ], [ %4027, %4026 ]
  br label %4044

4044:                                             ; preds = %4041, %4241
  %4045 = phi i32 [ %4242, %4241 ], [ %4042, %4041 ]
  %4046 = phi i32 [ %4245, %4241 ], [ 0, %4041 ]
  %4047 = phi i32 [ %4244, %4241 ], [ %4043, %4041 ]
  store i32 0, ptr %3979, align 4, !tbaa !226
  %4048 = icmp sgt i32 %4047, 0
  br i1 %4048, label %4049, label %4241

4049:                                             ; preds = %4044, %4231
  %4050 = phi i32 [ %4233, %4231 ], [ 0, %4044 ]
  %4051 = load ptr, ptr %3974, align 8, !tbaa !223
  %4052 = icmp eq ptr %4051, null
  br i1 %4052, label %4088, label %4053

4053:                                             ; preds = %4049
  store ptr %4051, ptr %3981, align 8, !tbaa !227
  %4054 = load ptr, ptr %3980, align 8, !tbaa !228
  %4055 = getelementptr i8, ptr %4054, i64 20
  %4056 = load i32, ptr %4055, align 4, !tbaa !229
  %4057 = sext i32 %4056 to i64
  %4058 = getelementptr inbounds i8, ptr %4051, i64 %4057
  store ptr %4058, ptr %3982, align 8, !tbaa !231
  %4059 = getelementptr inbounds %struct.CCGKey, ptr %4054, i64 0, i32 9
  %4060 = load i32, ptr %4059, align 4, !tbaa !232
  %4061 = icmp eq i32 %4060, 0
  br i1 %4061, label %4067, label %4062

4062:                                             ; preds = %4053
  %4063 = getelementptr i8, ptr %4054, i64 24
  %4064 = load i32, ptr %4063, align 4, !tbaa !233
  %4065 = sext i32 %4064 to i64
  %4066 = getelementptr inbounds i8, ptr %4051, i64 %4065
  br label %4067

4067:                                             ; preds = %4062, %4053
  %4068 = phi ptr [ %4066, %4062 ], [ null, %4053 ]
  store ptr %4068, ptr %3983, align 8, !tbaa !234
  %4069 = getelementptr i8, ptr %4054, i64 4
  %4070 = load i32, ptr %4069, align 4, !tbaa !235
  %4071 = sext i32 %4070 to i64
  %4072 = getelementptr inbounds i8, ptr %4051, i64 %4071
  store ptr %4072, ptr %3974, align 8, !tbaa !223
  %4073 = load ptr, ptr %3976, align 8, !tbaa !225
  %4074 = icmp eq ptr %4073, null
  br i1 %4074, label %4131, label %4075

4075:                                             ; preds = %4067
  %4076 = load i32, ptr %3978, align 8, !tbaa !220
  %4077 = load i32, ptr %3970, align 4, !tbaa !221
  %4078 = mul nsw i32 %4077, %4076
  %4079 = add nsw i32 %4078, %4050
  %4080 = ashr i32 %4079, 5
  %4081 = sext i32 %4080 to i64
  %4082 = getelementptr inbounds i32, ptr %4073, i64 %4081
  %4083 = load i32, ptr %4082, align 4, !tbaa !24
  %4084 = and i32 %4079, 31
  %4085 = shl nuw i32 1, %4084
  %4086 = and i32 %4085, %4083
  %4087 = icmp eq i32 %4086, 0
  br i1 %4087, label %4131, label %4231

4088:                                             ; preds = %4049
  %4089 = load ptr, ptr %3984, align 8, !tbaa !236
  %4090 = icmp eq ptr %4089, null
  br i1 %4090, label %4108, label %4091

4091:                                             ; preds = %4088
  %4092 = load ptr, ptr %3985, align 8, !tbaa !237
  %4093 = sext i32 %4050 to i64
  %4094 = getelementptr inbounds i32, ptr %4092, i64 %4093
  %4095 = load i32, ptr %4094, align 4, !tbaa !24
  %4096 = sext i32 %4095 to i64
  %4097 = getelementptr inbounds %struct.MVert, ptr %4089, i64 %4096
  store ptr %4097, ptr %3986, align 8, !tbaa !238
  %4098 = getelementptr inbounds %struct.MVert, ptr %4089, i64 %4096, i32 2
  %4099 = load i8, ptr %4098, align 2, !tbaa !239
  %4100 = and i8 %4099, 16
  %4101 = icmp eq i8 %4100, 0
  br i1 %4101, label %4102, label %4231

4102:                                             ; preds = %4091
  store ptr %4097, ptr %3981, align 8, !tbaa !227
  %4103 = getelementptr inbounds %struct.MVert, ptr %4089, i64 %4096, i32 1
  store ptr %4103, ptr %3987, align 8, !tbaa !241
  %4104 = load ptr, ptr %3988, align 8, !tbaa !242
  %4105 = icmp eq ptr %4104, null
  br i1 %4105, label %4131, label %4106

4106:                                             ; preds = %4102
  %4107 = getelementptr inbounds float, ptr %4104, i64 %4096
  br label %4128

4108:                                             ; preds = %4088
  %4109 = load ptr, ptr %3989, align 8, !tbaa !243
  %4110 = icmp eq ptr %4109, null
  %4111 = load ptr, ptr %3993, align 8
  %4112 = select i1 %4110, ptr %4111, ptr %4109
  %4113 = select i1 %4110, ptr %3992, ptr %3990
  %4114 = getelementptr i8, ptr %4112, i64 8
  %4115 = load ptr, ptr %4114, align 8, !tbaa !244
  store ptr %4115, ptr %3991, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %4113) #10
  %4116 = load ptr, ptr %3991, align 8, !tbaa !246
  %4117 = getelementptr i8, ptr %4116, i64 13
  %4118 = load i8, ptr %4117, align 1, !tbaa !247
  %4119 = and i8 %4118, 2
  %4120 = icmp eq i8 %4119, 0
  br i1 %4120, label %4121, label %4231

4121:                                             ; preds = %4108
  %4122 = getelementptr inbounds %struct.BMVert, ptr %4116, i64 0, i32 2
  store ptr %4122, ptr %3981, align 8, !tbaa !227
  %4123 = getelementptr inbounds %struct.BMVert, ptr %4116, i64 0, i32 3
  store ptr %4123, ptr %3982, align 8, !tbaa !231
  %4124 = load ptr, ptr %4116, align 8, !tbaa !249
  %4125 = load i32, ptr %3994, align 8, !tbaa !251
  %4126 = sext i32 %4125 to i64
  %4127 = getelementptr inbounds i8, ptr %4124, i64 %4126
  br label %4128

4128:                                             ; preds = %4121, %4106
  %4129 = phi ptr [ %4127, %4121 ], [ %4107, %4106 ]
  %4130 = phi ptr [ %4122, %4121 ], [ %4097, %4106 ]
  store ptr %4129, ptr %3983, align 8, !tbaa !234
  br label %4131

4131:                                             ; preds = %4128, %4102, %4075, %4067
  %4132 = phi ptr [ %4097, %4102 ], [ %4051, %4067 ], [ %4051, %4075 ], [ %4130, %4128 ]
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %12) #10
  br i1 %4020, label %4136, label %4133

4133:                                             ; preds = %4131
  %4134 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %4014, ptr noundef nonnull %4132, i8 noundef zeroext 1) #10
  %4135 = icmp eq i8 %4134, 0
  br i1 %4135, label %4136, label %4147

4136:                                             ; preds = %4133, %4131
  call void @mul_v3_m4v3(ptr noundef nonnull %12, ptr noundef nonnull %16, ptr noundef nonnull %4132) #10
  %4137 = load float, ptr %12, align 4, !tbaa !20
  %4138 = call fast float @llvm.fabs.f32(float %4137)
  %4139 = load <2 x float>, ptr %3995, align 4, !tbaa !20
  %4140 = fcmp fast ugt float %4138, 0x3FE6A09E60000000
  br i1 %4140, label %4147, label %4141

4141:                                             ; preds = %4136
  %4142 = call fast <2 x float> @llvm.fabs.v2f32(<2 x float> %4139)
  %4143 = fcmp fast ugt <2 x float> %4142, <float 0x3FE6A09E60000000, float 0x3FE6A09E60000000>
  %4144 = extractelement <2 x i1> %4143, i64 0
  %4145 = extractelement <2 x i1> %4143, i64 1
  %4146 = select i1 %4144, i1 true, i1 %4145
  br i1 %4146, label %4147, label %4148

4147:                                             ; preds = %4141, %4136, %4133
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %12) #10
  br label %4231

4148:                                             ; preds = %4141
  %4149 = call fast float @llvm.powi.f32.i32(float %4137, i32 4)
  %4150 = extractelement <2 x float> %4139, i64 0
  %4151 = call fast float @llvm.powi.f32.i32(float %4150, i32 4)
  %4152 = fadd fast float %4151, %4149
  %4153 = extractelement <2 x float> %4139, i64 1
  %4154 = call fast float @llvm.powi.f32.i32(float %4153, i32 4)
  %4155 = fadd fast float %4152, %4154
  %4156 = fmul fast float %4155, 0x4010000020000000
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %12) #10
  %4157 = load ptr, ptr %3981, align 8, !tbaa !227
  %4158 = load float, ptr %4157, align 4, !tbaa !20
  %4159 = load float, ptr %15, align 8, !tbaa !20
  %4160 = fsub fast float %4158, %4159
  %4161 = getelementptr inbounds float, ptr %4157, i64 1
  %4162 = load <2 x float>, ptr %13, align 8, !tbaa !20
  %4163 = extractelement <2 x float> %4162, i64 0
  %4164 = fmul fast float %4163, %4160
  %4165 = load float, ptr %3894, align 8, !tbaa !20
  %4166 = load <2 x float>, ptr %4161, align 4, !tbaa !20
  %4167 = load <2 x float>, ptr %3900, align 4, !tbaa !20
  %4168 = fsub fast <2 x float> %4166, %4167
  %4169 = shufflevector <2 x float> %4162, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %4170 = insertelement <2 x float> %4169, float %4165, i64 1
  %4171 = fmul fast <2 x float> %4170, %4168
  %4172 = extractelement <2 x float> %4171, i64 0
  %4173 = fadd fast float %4172, %4164
  %4174 = extractelement <2 x float> %4171, i64 1
  %4175 = fadd fast float %4173, %4174
  %4176 = fneg fast float %4175
  %4177 = select i1 %3886, float %4175, float %4176
  %4178 = fcmp fast ugt float %4177, 0.000000e+00
  br i1 %4178, label %4231, label %4179

4179:                                             ; preds = %4148
  %4180 = fneg fast <2 x float> %4162
  %4181 = insertelement <2 x float> poison, float %4175, i64 0
  %4182 = shufflevector <2 x float> %4181, <2 x float> poison, <2 x i32> zeroinitializer
  %4183 = fmul fast <2 x float> %4182, %4180
  %4184 = fneg fast float %4165
  %4185 = fmul fast float %4175, %4184
  %4186 = load ptr, ptr %3846, align 8, !tbaa !22
  %4187 = load i32, ptr %3996, align 8, !tbaa !180
  %4188 = and i32 %4187, 67108864
  %4189 = icmp eq i32 %4188, 0
  br i1 %4189, label %4203, label %4190

4190:                                             ; preds = %4179
  %4191 = fmul fast <2 x float> %4183, %4183
  %4192 = shufflevector <2 x float> %4191, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %4193 = fadd fast <2 x float> %4192, %4191
  %4194 = extractelement <2 x float> %4193, i64 0
  %4195 = fmul fast float %4185, %4185
  %4196 = fadd fast float %4194, %4195
  %4197 = getelementptr inbounds %struct.StrokeCache, ptr %4186, i64 0, i32 12
  %4198 = load float, ptr %4197, align 4, !tbaa !199
  %4199 = getelementptr inbounds %struct.StrokeCache, ptr %4186, i64 0, i32 49
  %4200 = load float, ptr %4199, align 4, !tbaa !159
  %4201 = fmul fast float %4200, %4198
  %4202 = fcmp fast ugt float %4196, %4201
  br i1 %4202, label %4231, label %4203

4203:                                             ; preds = %4190, %4179
  %4204 = getelementptr inbounds %struct.StrokeCache, ptr %4186, i64 0, i32 11
  %4205 = load float, ptr %4204, align 8, !tbaa !198
  %4206 = fmul fast float %4156, %4205
  %4207 = load ptr, ptr %3987, align 8, !tbaa !241
  %4208 = load ptr, ptr %3982, align 8, !tbaa !231
  %4209 = load ptr, ptr %3983, align 8, !tbaa !234
  %4210 = icmp eq ptr %4209, null
  br i1 %4210, label %4213, label %4211

4211:                                             ; preds = %4203
  %4212 = load float, ptr %4209, align 4, !tbaa !20
  br label %4213

4213:                                             ; preds = %4211, %4203
  %4214 = phi fast float [ %4212, %4211 ], [ 0.000000e+00, %4203 ]
  %4215 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef nonnull %3844, ptr noundef nonnull %3845, ptr noundef nonnull %4157, float noundef nofpclass(nan inf) %4206, ptr noundef %4207, ptr noundef %4208, float noundef nofpclass(nan inf) %4214)
  %4216 = fmul fast float %4215, %3890
  %4217 = load i32, ptr %3967, align 4, !tbaa !210
  %4218 = sext i32 %4217 to i64
  %4219 = getelementptr inbounds [3 x float], ptr %4004, i64 %4218
  %4220 = insertelement <2 x float> poison, float %4216, i64 0
  %4221 = shufflevector <2 x float> %4220, <2 x float> poison, <2 x i32> zeroinitializer
  %4222 = fmul fast <2 x float> %4221, %4183
  store <2 x float> %4222, ptr %4219, align 4, !tbaa !20
  %4223 = fmul fast float %4216, %4185
  %4224 = getelementptr inbounds float, ptr %4219, i64 2
  store float %4223, ptr %4224, align 4, !tbaa !20
  %4225 = load ptr, ptr %3986, align 8, !tbaa !238
  %4226 = icmp eq ptr %4225, null
  br i1 %4226, label %4231, label %4227

4227:                                             ; preds = %4213
  %4228 = getelementptr inbounds %struct.MVert, ptr %4225, i64 0, i32 2
  %4229 = load i8, ptr %4228, align 2, !tbaa !239
  %4230 = or i8 %4229, -128
  store i8 %4230, ptr %4228, align 2, !tbaa !239
  br label %4231

4231:                                             ; preds = %4227, %4213, %4190, %4148, %4147, %4108, %4091, %4075
  %4232 = load i32, ptr %3979, align 4, !tbaa !226
  %4233 = add nsw i32 %4232, 1
  store i32 %4233, ptr %3979, align 4, !tbaa !226
  %4234 = load i32, ptr %3967, align 4, !tbaa !210
  %4235 = add nsw i32 %4234, 1
  store i32 %4235, ptr %3967, align 4, !tbaa !210
  %4236 = load i32, ptr %3971, align 4, !tbaa !218
  %4237 = icmp slt i32 %4233, %4236
  br i1 %4237, label %4049, label %4238, !llvm.loop !344

4238:                                             ; preds = %4231
  %4239 = load i32, ptr %3978, align 8, !tbaa !220
  %4240 = load i32, ptr %3972, align 8, !tbaa !219
  br label %4241

4241:                                             ; preds = %4238, %4044
  %4242 = phi i32 [ %4045, %4044 ], [ %4240, %4238 ]
  %4243 = phi i32 [ %4046, %4044 ], [ %4239, %4238 ]
  %4244 = phi i32 [ %4047, %4044 ], [ %4236, %4238 ]
  %4245 = add nsw i32 %4243, 1
  store i32 %4245, ptr %3978, align 8, !tbaa !220
  %4246 = icmp slt i32 %4245, %4242
  br i1 %4246, label %4044, label %4247, !llvm.loop !345

4247:                                             ; preds = %4241
  %4248 = load i32, ptr %19, align 8, !tbaa !214
  %4249 = load i32, ptr %3968, align 8, !tbaa !215
  br label %4250

4250:                                             ; preds = %4247, %4028
  %4251 = phi i32 [ %4022, %4028 ], [ %4249, %4247 ]
  %4252 = phi i32 [ %4023, %4028 ], [ %4248, %4247 ]
  %4253 = add nsw i32 %4252, 1
  store i32 %4253, ptr %19, align 8, !tbaa !214
  %4254 = icmp slt i32 %4253, %4251
  br i1 %4254, label %4021, label %4255, !llvm.loop !346

4255:                                             ; preds = %4250, %3998
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %19) #10
  %4256 = add nuw nsw i64 %3999, 1
  %4257 = icmp eq i64 %4256, %3997
  br i1 %4257, label %4258, label %3998, !llvm.loop !347

4258:                                             ; preds = %4255, %3880, %3885
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %18) #10
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %17) #10
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %16) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %15) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %14) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %13) #10
  br label %5193

4259:                                             ; preds = %285
  %4260 = load ptr, ptr %45, align 8, !tbaa !31
  %4261 = load i32, ptr %46, align 4, !tbaa !24
  %4262 = load ptr, ptr %48, align 8, !tbaa !5
  %4263 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %4264 = getelementptr %struct.SculptSession, ptr %4262, i64 0, i32 28
  %4265 = load ptr, ptr %4264, align 8, !tbaa !22
  %4266 = getelementptr inbounds %struct.StrokeCache, ptr %4265, i64 0, i32 19
  %4267 = load float, ptr %4266, align 8, !tbaa !203
  %4268 = getelementptr inbounds %struct.StrokeCache, ptr %4265, i64 0, i32 11
  %4269 = load float, ptr %4268, align 8, !tbaa !198
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %9) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %10) #10
  %4270 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %4271 = getelementptr inbounds %struct.Brush, ptr %4270, i64 0, i32 29
  %4272 = load float, ptr %4271, align 4, !tbaa !335
  %4273 = getelementptr inbounds %struct.Brush, ptr %4270, i64 0, i32 16
  %4274 = load i32, ptr %4273, align 8, !tbaa !180
  %4275 = and i32 %4274, 65536
  %4276 = icmp eq i32 %4275, 0
  br i1 %4276, label %4282, label %4277

4277:                                             ; preds = %4259
  %4278 = load ptr, ptr %4264, align 8, !tbaa !22
  %4279 = getelementptr inbounds %struct.StrokeCache, ptr %4278, i64 0, i32 17
  %4280 = load float, ptr %4279, align 4, !tbaa !196
  %4281 = fmul fast float %4280, %4272
  br label %4282

4282:                                             ; preds = %4277, %4259
  %4283 = phi float [ %4281, %4277 ], [ %4272, %4259 ]
  call fastcc void @calc_sculpt_plane(ptr noundef %0, ptr noundef nonnull %1, ptr noundef %4260, i32 noundef %4261, ptr noundef nonnull %9, ptr noundef nonnull %10)
  %4284 = fmul fast float %4283, %4269
  %4285 = load ptr, ptr %4264, align 8, !tbaa !22
  %4286 = getelementptr inbounds %struct.StrokeCache, ptr %4285, i64 0, i32 1
  %4287 = getelementptr inbounds float, ptr %9, i64 2
  %4288 = load float, ptr %4287, align 8, !tbaa !20
  %4289 = getelementptr inbounds %struct.StrokeCache, ptr %4285, i64 0, i32 1, i64 2
  %4290 = load float, ptr %4289, align 4, !tbaa !20
  %4291 = fmul fast float %4288, %4284
  %4292 = fmul fast float %4291, %4290
  %4293 = getelementptr inbounds float, ptr %10, i64 1
  %4294 = load <2 x float>, ptr %9, align 8, !tbaa !20
  %4295 = load <2 x float>, ptr %4286, align 4, !tbaa !20
  %4296 = insertelement <2 x float> poison, float %4284, i64 0
  %4297 = shufflevector <2 x float> %4296, <2 x float> poison, <2 x i32> zeroinitializer
  %4298 = fmul fast <2 x float> %4294, %4297
  %4299 = fmul fast <2 x float> %4298, %4295
  %4300 = load <2 x float>, ptr %10, align 8, !tbaa !20
  %4301 = fadd fast <2 x float> %4300, %4299
  store <2 x float> %4301, ptr %10, align 8, !tbaa !20
  %4302 = getelementptr inbounds float, ptr %10, i64 2
  %4303 = load float, ptr %4302, align 8, !tbaa !20
  %4304 = fadd fast float %4303, %4292
  store float %4304, ptr %4302, align 8, !tbaa !20
  %4305 = icmp sgt i32 %4261, 0
  br i1 %4305, label %4306, label %4597

4306:                                             ; preds = %4282
  %4307 = getelementptr inbounds %struct.SculptSession, ptr %4262, i64 0, i32 15
  %4308 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 5
  %4309 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 12
  %4310 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 6
  %4311 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 13
  %4312 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 1
  %4313 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 2
  %4314 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 11
  %4315 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 7
  %4316 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 9
  %4317 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 10
  %4318 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 15
  %4319 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 4
  %4320 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 3
  %4321 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 8
  %4322 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 24
  %4323 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 26
  %4324 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 27
  %4325 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 14
  %4326 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 16
  %4327 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 22
  %4328 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 25
  %4329 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 17
  %4330 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 18, i32 0, i32 1
  %4331 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 18
  %4332 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 23
  %4333 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 19
  %4334 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 19, i32 0, i32 1
  %4335 = getelementptr inbounds %struct.PBVHVertexIter, ptr %11, i64 0, i32 21
  %4336 = getelementptr i8, ptr %4263, i64 1856
  %4337 = zext i32 %4261 to i64
  br label %4338

4338:                                             ; preds = %4594, %4306
  %4339 = phi i64 [ 0, %4306 ], [ %4595, %4594 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %11) #10
  %4340 = load ptr, ptr %4307, align 8, !tbaa !21
  %4341 = getelementptr inbounds ptr, ptr %4260, i64 %4339
  %4342 = load ptr, ptr %4341, align 8, !tbaa !31
  %4343 = call ptr @BKE_pbvh_node_add_proxy(ptr noundef %4340, ptr noundef %4342) #10
  %4344 = load ptr, ptr %4343, align 8, !tbaa !252
  %4345 = load ptr, ptr %4264, align 8, !tbaa !22
  %4346 = getelementptr inbounds %struct.StrokeCache, ptr %4345, i64 0, i32 22
  %4347 = load ptr, ptr %4346, align 8, !tbaa !172
  %4348 = getelementptr inbounds %struct.ViewContext, ptr %4347, i64 0, i32 5
  %4349 = load ptr, ptr %4348, align 8, !tbaa !174
  %4350 = getelementptr inbounds %struct.StrokeCache, ptr %4345, i64 0, i32 12
  %4351 = load float, ptr %4350, align 4, !tbaa !199
  %4352 = getelementptr inbounds %struct.StrokeCache, ptr %4345, i64 0, i32 14
  %4353 = load float, ptr %4352, align 4, !tbaa !20
  %4354 = getelementptr inbounds %struct.StrokeCache, ptr %4345, i64 0, i32 14, i64 1
  %4355 = load <2 x float>, ptr %4354, align 4, !tbaa !20
  %4356 = getelementptr inbounds %struct.RegionView3D, ptr %4349, i64 0, i32 32
  %4357 = load i16, ptr %4356, align 2, !tbaa !293
  %4358 = and i16 %4357, 4
  %4359 = icmp eq i16 %4358, 0
  %4360 = select i1 %4359, ptr null, ptr %4349
  %4361 = load ptr, ptr %4307, align 8, !tbaa !21
  %4362 = load ptr, ptr %4341, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %4361, ptr noundef %4362, ptr noundef nonnull %11, i32 noundef 1) #10
  store i32 0, ptr %4308, align 4, !tbaa !210
  store i32 0, ptr %11, align 8, !tbaa !214
  %4363 = load i32, ptr %4309, align 8, !tbaa !215
  %4364 = icmp sgt i32 %4363, 0
  br i1 %4364, label %4365, label %4594

4365:                                             ; preds = %4338
  %4366 = icmp eq ptr %4360, null
  br label %4367

4367:                                             ; preds = %4589, %4365
  %4368 = phi i32 [ %4363, %4365 ], [ %4590, %4589 ]
  %4369 = phi i32 [ 0, %4365 ], [ %4592, %4589 ]
  %4370 = load ptr, ptr %4310, align 8, !tbaa !216
  %4371 = icmp eq ptr %4370, null
  br i1 %4371, label %4372, label %4374

4372:                                             ; preds = %4367
  %4373 = load i32, ptr %4318, align 8, !tbaa !217
  store i32 %4373, ptr %4312, align 4, !tbaa !218
  store i32 1, ptr %4313, align 8, !tbaa !219
  store i32 0, ptr %4319, align 8, !tbaa !220
  br label %4387

4374:                                             ; preds = %4367
  %4375 = load i32, ptr %4311, align 4, !tbaa !221
  store i32 %4375, ptr %4312, align 4, !tbaa !218
  store i32 %4375, ptr %4313, align 8, !tbaa !219
  %4376 = load ptr, ptr %4314, align 8, !tbaa !222
  %4377 = sext i32 %4369 to i64
  %4378 = getelementptr inbounds i32, ptr %4376, i64 %4377
  %4379 = load i32, ptr %4378, align 4, !tbaa !24
  %4380 = sext i32 %4379 to i64
  %4381 = getelementptr inbounds ptr, ptr %4370, i64 %4380
  %4382 = load ptr, ptr %4381, align 8, !tbaa !31
  store ptr %4382, ptr %4315, align 8, !tbaa !223
  %4383 = load ptr, ptr %4316, align 8, !tbaa !224
  %4384 = getelementptr inbounds ptr, ptr %4383, i64 %4380
  %4385 = load ptr, ptr %4384, align 8, !tbaa !31
  store ptr %4385, ptr %4317, align 8, !tbaa !225
  store i32 0, ptr %4319, align 8, !tbaa !220
  %4386 = icmp sgt i32 %4375, 0
  br i1 %4386, label %4387, label %4589

4387:                                             ; preds = %4374, %4372
  %4388 = phi i32 [ %4375, %4374 ], [ 1, %4372 ]
  %4389 = phi i32 [ %4375, %4374 ], [ %4373, %4372 ]
  br label %4390

4390:                                             ; preds = %4387, %4580
  %4391 = phi i32 [ %4581, %4580 ], [ %4388, %4387 ]
  %4392 = phi i32 [ %4584, %4580 ], [ 0, %4387 ]
  %4393 = phi i32 [ %4583, %4580 ], [ %4389, %4387 ]
  store i32 0, ptr %4320, align 4, !tbaa !226
  %4394 = icmp sgt i32 %4393, 0
  br i1 %4394, label %4395, label %4580

4395:                                             ; preds = %4390, %4570
  %4396 = phi i32 [ %4572, %4570 ], [ 0, %4390 ]
  %4397 = load ptr, ptr %4315, align 8, !tbaa !223
  %4398 = icmp eq ptr %4397, null
  br i1 %4398, label %4434, label %4399

4399:                                             ; preds = %4395
  store ptr %4397, ptr %4322, align 8, !tbaa !227
  %4400 = load ptr, ptr %4321, align 8, !tbaa !228
  %4401 = getelementptr i8, ptr %4400, i64 20
  %4402 = load i32, ptr %4401, align 4, !tbaa !229
  %4403 = sext i32 %4402 to i64
  %4404 = getelementptr inbounds i8, ptr %4397, i64 %4403
  store ptr %4404, ptr %4323, align 8, !tbaa !231
  %4405 = getelementptr inbounds %struct.CCGKey, ptr %4400, i64 0, i32 9
  %4406 = load i32, ptr %4405, align 4, !tbaa !232
  %4407 = icmp eq i32 %4406, 0
  br i1 %4407, label %4413, label %4408

4408:                                             ; preds = %4399
  %4409 = getelementptr i8, ptr %4400, i64 24
  %4410 = load i32, ptr %4409, align 4, !tbaa !233
  %4411 = sext i32 %4410 to i64
  %4412 = getelementptr inbounds i8, ptr %4397, i64 %4411
  br label %4413

4413:                                             ; preds = %4408, %4399
  %4414 = phi ptr [ %4412, %4408 ], [ null, %4399 ]
  store ptr %4414, ptr %4324, align 8, !tbaa !234
  %4415 = getelementptr i8, ptr %4400, i64 4
  %4416 = load i32, ptr %4415, align 4, !tbaa !235
  %4417 = sext i32 %4416 to i64
  %4418 = getelementptr inbounds i8, ptr %4397, i64 %4417
  store ptr %4418, ptr %4315, align 8, !tbaa !223
  %4419 = load ptr, ptr %4317, align 8, !tbaa !225
  %4420 = icmp eq ptr %4419, null
  br i1 %4420, label %4477, label %4421

4421:                                             ; preds = %4413
  %4422 = load i32, ptr %4319, align 8, !tbaa !220
  %4423 = load i32, ptr %4311, align 4, !tbaa !221
  %4424 = mul nsw i32 %4423, %4422
  %4425 = add nsw i32 %4424, %4396
  %4426 = ashr i32 %4425, 5
  %4427 = sext i32 %4426 to i64
  %4428 = getelementptr inbounds i32, ptr %4419, i64 %4427
  %4429 = load i32, ptr %4428, align 4, !tbaa !24
  %4430 = and i32 %4425, 31
  %4431 = shl nuw i32 1, %4430
  %4432 = and i32 %4431, %4429
  %4433 = icmp eq i32 %4432, 0
  br i1 %4433, label %4477, label %4570

4434:                                             ; preds = %4395
  %4435 = load ptr, ptr %4325, align 8, !tbaa !236
  %4436 = icmp eq ptr %4435, null
  br i1 %4436, label %4454, label %4437

4437:                                             ; preds = %4434
  %4438 = load ptr, ptr %4326, align 8, !tbaa !237
  %4439 = sext i32 %4396 to i64
  %4440 = getelementptr inbounds i32, ptr %4438, i64 %4439
  %4441 = load i32, ptr %4440, align 4, !tbaa !24
  %4442 = sext i32 %4441 to i64
  %4443 = getelementptr inbounds %struct.MVert, ptr %4435, i64 %4442
  store ptr %4443, ptr %4327, align 8, !tbaa !238
  %4444 = getelementptr inbounds %struct.MVert, ptr %4435, i64 %4442, i32 2
  %4445 = load i8, ptr %4444, align 2, !tbaa !239
  %4446 = and i8 %4445, 16
  %4447 = icmp eq i8 %4446, 0
  br i1 %4447, label %4448, label %4570

4448:                                             ; preds = %4437
  store ptr %4443, ptr %4322, align 8, !tbaa !227
  %4449 = getelementptr inbounds %struct.MVert, ptr %4435, i64 %4442, i32 1
  store ptr %4449, ptr %4328, align 8, !tbaa !241
  %4450 = load ptr, ptr %4329, align 8, !tbaa !242
  %4451 = icmp eq ptr %4450, null
  br i1 %4451, label %4477, label %4452

4452:                                             ; preds = %4448
  %4453 = getelementptr inbounds float, ptr %4450, i64 %4442
  br label %4474

4454:                                             ; preds = %4434
  %4455 = load ptr, ptr %4330, align 8, !tbaa !243
  %4456 = icmp eq ptr %4455, null
  %4457 = load ptr, ptr %4334, align 8
  %4458 = select i1 %4456, ptr %4457, ptr %4455
  %4459 = select i1 %4456, ptr %4333, ptr %4331
  %4460 = getelementptr i8, ptr %4458, i64 8
  %4461 = load ptr, ptr %4460, align 8, !tbaa !244
  store ptr %4461, ptr %4332, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %4459) #10
  %4462 = load ptr, ptr %4332, align 8, !tbaa !246
  %4463 = getelementptr i8, ptr %4462, i64 13
  %4464 = load i8, ptr %4463, align 1, !tbaa !247
  %4465 = and i8 %4464, 2
  %4466 = icmp eq i8 %4465, 0
  br i1 %4466, label %4467, label %4570

4467:                                             ; preds = %4454
  %4468 = getelementptr inbounds %struct.BMVert, ptr %4462, i64 0, i32 2
  store ptr %4468, ptr %4322, align 8, !tbaa !227
  %4469 = getelementptr inbounds %struct.BMVert, ptr %4462, i64 0, i32 3
  store ptr %4469, ptr %4323, align 8, !tbaa !231
  %4470 = load ptr, ptr %4462, align 8, !tbaa !249
  %4471 = load i32, ptr %4335, align 8, !tbaa !251
  %4472 = sext i32 %4471 to i64
  %4473 = getelementptr inbounds i8, ptr %4470, i64 %4472
  br label %4474

4474:                                             ; preds = %4467, %4452
  %4475 = phi ptr [ %4473, %4467 ], [ %4453, %4452 ]
  %4476 = phi ptr [ %4468, %4467 ], [ %4443, %4452 ]
  store ptr %4475, ptr %4324, align 8, !tbaa !234
  br label %4477

4477:                                             ; preds = %4474, %4448, %4421, %4413
  %4478 = phi ptr [ %4443, %4448 ], [ %4397, %4413 ], [ %4397, %4421 ], [ %4476, %4474 ]
  %4479 = load float, ptr %4478, align 4, !tbaa !20
  %4480 = fsub fast float %4353, %4479
  %4481 = getelementptr inbounds float, ptr %4478, i64 1
  %4482 = load <2 x float>, ptr %4481, align 4, !tbaa !20
  %4483 = fmul fast float %4480, %4480
  %4484 = fsub fast <2 x float> %4355, %4482
  %4485 = fmul fast <2 x float> %4484, %4484
  %4486 = extractelement <2 x float> %4485, i64 0
  %4487 = fadd fast float %4486, %4483
  %4488 = extractelement <2 x float> %4485, i64 1
  %4489 = fadd fast float %4487, %4488
  %4490 = fcmp fast ugt float %4489, %4351
  br i1 %4490, label %4570, label %4491

4491:                                             ; preds = %4477
  br i1 %4366, label %4500, label %4492

4492:                                             ; preds = %4491
  %4493 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %4360, ptr noundef nonnull %4478, i8 noundef zeroext 1) #10
  %4494 = icmp eq i8 %4493, 0
  br i1 %4494, label %4495, label %4570

4495:                                             ; preds = %4492
  %4496 = load ptr, ptr %4322, align 8, !tbaa !227
  %4497 = load float, ptr %4496, align 4, !tbaa !20
  %4498 = getelementptr inbounds float, ptr %4496, i64 1
  %4499 = load <2 x float>, ptr %4498, align 4, !tbaa !20
  br label %4500

4500:                                             ; preds = %4495, %4491
  %4501 = phi float [ %4497, %4495 ], [ %4479, %4491 ]
  %4502 = phi ptr [ %4496, %4495 ], [ %4478, %4491 ]
  %4503 = phi <2 x float> [ %4499, %4495 ], [ %4482, %4491 ]
  %4504 = load float, ptr %10, align 8, !tbaa !20
  %4505 = fsub fast float %4501, %4504
  %4506 = load <2 x float>, ptr %9, align 8, !tbaa !20
  %4507 = extractelement <2 x float> %4506, i64 0
  %4508 = fmul fast float %4507, %4505
  %4509 = load float, ptr %4287, align 8, !tbaa !20
  %4510 = load <2 x float>, ptr %4293, align 4, !tbaa !20
  %4511 = fsub fast <2 x float> %4503, %4510
  %4512 = shufflevector <2 x float> %4506, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %4513 = insertelement <2 x float> %4512, float %4509, i64 1
  %4514 = fmul fast <2 x float> %4513, %4511
  %4515 = extractelement <2 x float> %4514, i64 0
  %4516 = fadd fast float %4515, %4508
  %4517 = extractelement <2 x float> %4514, i64 1
  %4518 = fadd fast float %4516, %4517
  %4519 = fcmp fast ugt float %4518, 0.000000e+00
  br i1 %4519, label %4570, label %4520

4520:                                             ; preds = %4500
  %4521 = fneg fast <2 x float> %4506
  %4522 = insertelement <2 x float> poison, float %4518, i64 0
  %4523 = shufflevector <2 x float> %4522, <2 x float> poison, <2 x i32> zeroinitializer
  %4524 = fmul fast <2 x float> %4523, %4521
  %4525 = fneg fast float %4509
  %4526 = fmul fast float %4518, %4525
  %4527 = load i32, ptr %4336, align 8, !tbaa !180
  %4528 = and i32 %4527, 67108864
  %4529 = icmp eq i32 %4528, 0
  br i1 %4529, label %4544, label %4530

4530:                                             ; preds = %4520
  %4531 = load ptr, ptr %4264, align 8, !tbaa !22
  %4532 = fmul fast <2 x float> %4524, %4524
  %4533 = shufflevector <2 x float> %4532, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %4534 = fadd fast <2 x float> %4533, %4532
  %4535 = extractelement <2 x float> %4534, i64 0
  %4536 = fmul fast float %4526, %4526
  %4537 = fadd fast float %4535, %4536
  %4538 = getelementptr inbounds %struct.StrokeCache, ptr %4531, i64 0, i32 12
  %4539 = load float, ptr %4538, align 4, !tbaa !199
  %4540 = getelementptr inbounds %struct.StrokeCache, ptr %4531, i64 0, i32 49
  %4541 = load float, ptr %4540, align 4, !tbaa !159
  %4542 = fmul fast float %4541, %4539
  %4543 = fcmp fast ugt float %4537, %4542
  br i1 %4543, label %4570, label %4544

4544:                                             ; preds = %4530, %4520
  %4545 = call fast float @llvm.sqrt.f32(float %4489)
  %4546 = load ptr, ptr %4328, align 8, !tbaa !241
  %4547 = load ptr, ptr %4323, align 8, !tbaa !231
  %4548 = load ptr, ptr %4324, align 8, !tbaa !234
  %4549 = icmp eq ptr %4548, null
  br i1 %4549, label %4552, label %4550

4550:                                             ; preds = %4544
  %4551 = load float, ptr %4548, align 4, !tbaa !20
  br label %4552

4552:                                             ; preds = %4550, %4544
  %4553 = phi fast float [ %4551, %4550 ], [ 0.000000e+00, %4544 ]
  %4554 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef nonnull %4262, ptr noundef nonnull %4263, ptr noundef nonnull %4502, float noundef nofpclass(nan inf) %4545, ptr noundef %4546, ptr noundef %4547, float noundef nofpclass(nan inf) %4553)
  %4555 = fmul fast float %4554, %4267
  %4556 = load i32, ptr %4308, align 4, !tbaa !210
  %4557 = sext i32 %4556 to i64
  %4558 = getelementptr inbounds [3 x float], ptr %4344, i64 %4557
  %4559 = insertelement <2 x float> poison, float %4555, i64 0
  %4560 = shufflevector <2 x float> %4559, <2 x float> poison, <2 x i32> zeroinitializer
  %4561 = fmul fast <2 x float> %4560, %4524
  store <2 x float> %4561, ptr %4558, align 4, !tbaa !20
  %4562 = fmul fast float %4555, %4526
  %4563 = getelementptr inbounds float, ptr %4558, i64 2
  store float %4562, ptr %4563, align 4, !tbaa !20
  %4564 = load ptr, ptr %4327, align 8, !tbaa !238
  %4565 = icmp eq ptr %4564, null
  br i1 %4565, label %4570, label %4566

4566:                                             ; preds = %4552
  %4567 = getelementptr inbounds %struct.MVert, ptr %4564, i64 0, i32 2
  %4568 = load i8, ptr %4567, align 2, !tbaa !239
  %4569 = or i8 %4568, -128
  store i8 %4569, ptr %4567, align 2, !tbaa !239
  br label %4570

4570:                                             ; preds = %4566, %4552, %4530, %4500, %4492, %4477, %4454, %4437, %4421
  %4571 = load i32, ptr %4320, align 4, !tbaa !226
  %4572 = add nsw i32 %4571, 1
  store i32 %4572, ptr %4320, align 4, !tbaa !226
  %4573 = load i32, ptr %4308, align 4, !tbaa !210
  %4574 = add nsw i32 %4573, 1
  store i32 %4574, ptr %4308, align 4, !tbaa !210
  %4575 = load i32, ptr %4312, align 4, !tbaa !218
  %4576 = icmp slt i32 %4572, %4575
  br i1 %4576, label %4395, label %4577, !llvm.loop !348

4577:                                             ; preds = %4570
  %4578 = load i32, ptr %4319, align 8, !tbaa !220
  %4579 = load i32, ptr %4313, align 8, !tbaa !219
  br label %4580

4580:                                             ; preds = %4577, %4390
  %4581 = phi i32 [ %4391, %4390 ], [ %4579, %4577 ]
  %4582 = phi i32 [ %4392, %4390 ], [ %4578, %4577 ]
  %4583 = phi i32 [ %4393, %4390 ], [ %4575, %4577 ]
  %4584 = add nsw i32 %4582, 1
  store i32 %4584, ptr %4319, align 8, !tbaa !220
  %4585 = icmp slt i32 %4584, %4581
  br i1 %4585, label %4390, label %4586, !llvm.loop !349

4586:                                             ; preds = %4580
  %4587 = load i32, ptr %11, align 8, !tbaa !214
  %4588 = load i32, ptr %4309, align 8, !tbaa !215
  br label %4589

4589:                                             ; preds = %4586, %4374
  %4590 = phi i32 [ %4368, %4374 ], [ %4588, %4586 ]
  %4591 = phi i32 [ %4369, %4374 ], [ %4587, %4586 ]
  %4592 = add nsw i32 %4591, 1
  store i32 %4592, ptr %11, align 8, !tbaa !214
  %4593 = icmp slt i32 %4592, %4590
  br i1 %4593, label %4367, label %4594, !llvm.loop !350

4594:                                             ; preds = %4589, %4338
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %11) #10
  %4595 = add nuw nsw i64 %4339, 1
  %4596 = icmp eq i64 %4595, %4337
  br i1 %4596, label %4597, label %4338, !llvm.loop !351

4597:                                             ; preds = %4594, %4282
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %10) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %9) #10
  br label %5193

4598:                                             ; preds = %285
  %4599 = load ptr, ptr %45, align 8, !tbaa !31
  %4600 = load i32, ptr %46, align 4, !tbaa !24
  %4601 = load ptr, ptr %48, align 8, !tbaa !5
  %4602 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %4603 = getelementptr %struct.SculptSession, ptr %4601, i64 0, i32 28
  %4604 = load ptr, ptr %4603, align 8, !tbaa !22
  %4605 = getelementptr inbounds %struct.StrokeCache, ptr %4604, i64 0, i32 19
  %4606 = load float, ptr %4605, align 8, !tbaa !203
  %4607 = getelementptr inbounds %struct.StrokeCache, ptr %4604, i64 0, i32 11
  %4608 = load float, ptr %4607, align 8, !tbaa !198
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #10
  %4609 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %4610 = getelementptr inbounds %struct.Brush, ptr %4609, i64 0, i32 29
  %4611 = load float, ptr %4610, align 4, !tbaa !335
  %4612 = getelementptr inbounds %struct.Brush, ptr %4609, i64 0, i32 16
  %4613 = load i32, ptr %4612, align 8, !tbaa !180
  %4614 = and i32 %4613, 65536
  %4615 = icmp eq i32 %4614, 0
  br i1 %4615, label %4621, label %4616

4616:                                             ; preds = %4598
  %4617 = load ptr, ptr %4603, align 8, !tbaa !22
  %4618 = getelementptr inbounds %struct.StrokeCache, ptr %4617, i64 0, i32 17
  %4619 = load float, ptr %4618, align 4, !tbaa !196
  %4620 = fmul fast float %4619, %4611
  br label %4621

4621:                                             ; preds = %4616, %4598
  %4622 = phi float [ %4620, %4616 ], [ %4611, %4598 ]
  call fastcc void @calc_sculpt_plane(ptr noundef %0, ptr noundef nonnull %1, ptr noundef %4599, i32 noundef %4600, ptr noundef nonnull %6, ptr noundef nonnull %7)
  %4623 = fneg fast float %4608
  %4624 = fmul fast float %4622, %4623
  %4625 = load ptr, ptr %4603, align 8, !tbaa !22
  %4626 = getelementptr inbounds %struct.StrokeCache, ptr %4625, i64 0, i32 1
  %4627 = getelementptr inbounds float, ptr %6, i64 2
  %4628 = load float, ptr %4627, align 8, !tbaa !20
  %4629 = getelementptr inbounds %struct.StrokeCache, ptr %4625, i64 0, i32 1, i64 2
  %4630 = load float, ptr %4629, align 4, !tbaa !20
  %4631 = fmul fast float %4628, %4624
  %4632 = fmul fast float %4631, %4630
  %4633 = getelementptr inbounds float, ptr %7, i64 1
  %4634 = load <2 x float>, ptr %6, align 8, !tbaa !20
  %4635 = load <2 x float>, ptr %4626, align 4, !tbaa !20
  %4636 = insertelement <2 x float> poison, float %4624, i64 0
  %4637 = shufflevector <2 x float> %4636, <2 x float> poison, <2 x i32> zeroinitializer
  %4638 = fmul fast <2 x float> %4634, %4637
  %4639 = fmul fast <2 x float> %4638, %4635
  %4640 = load <2 x float>, ptr %7, align 8, !tbaa !20
  %4641 = fadd fast <2 x float> %4640, %4639
  store <2 x float> %4641, ptr %7, align 8, !tbaa !20
  %4642 = getelementptr inbounds float, ptr %7, i64 2
  %4643 = load float, ptr %4642, align 8, !tbaa !20
  %4644 = fadd fast float %4643, %4632
  store float %4644, ptr %4642, align 8, !tbaa !20
  %4645 = icmp sgt i32 %4600, 0
  br i1 %4645, label %4646, label %4937

4646:                                             ; preds = %4621
  %4647 = getelementptr inbounds %struct.SculptSession, ptr %4601, i64 0, i32 15
  %4648 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 5
  %4649 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 12
  %4650 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 6
  %4651 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 13
  %4652 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 1
  %4653 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 2
  %4654 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 11
  %4655 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 7
  %4656 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 9
  %4657 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 10
  %4658 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 15
  %4659 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 4
  %4660 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 3
  %4661 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 8
  %4662 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 24
  %4663 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 26
  %4664 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 27
  %4665 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 14
  %4666 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 16
  %4667 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 22
  %4668 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 25
  %4669 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 17
  %4670 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 18, i32 0, i32 1
  %4671 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 18
  %4672 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 23
  %4673 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 19
  %4674 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 19, i32 0, i32 1
  %4675 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 21
  %4676 = getelementptr i8, ptr %4602, i64 1856
  %4677 = zext i32 %4600 to i64
  br label %4678

4678:                                             ; preds = %4934, %4646
  %4679 = phi i64 [ 0, %4646 ], [ %4935, %4934 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %8) #10
  %4680 = load ptr, ptr %4647, align 8, !tbaa !21
  %4681 = getelementptr inbounds ptr, ptr %4599, i64 %4679
  %4682 = load ptr, ptr %4681, align 8, !tbaa !31
  %4683 = call ptr @BKE_pbvh_node_add_proxy(ptr noundef %4680, ptr noundef %4682) #10
  %4684 = load ptr, ptr %4683, align 8, !tbaa !252
  %4685 = load ptr, ptr %4603, align 8, !tbaa !22
  %4686 = getelementptr inbounds %struct.StrokeCache, ptr %4685, i64 0, i32 22
  %4687 = load ptr, ptr %4686, align 8, !tbaa !172
  %4688 = getelementptr inbounds %struct.ViewContext, ptr %4687, i64 0, i32 5
  %4689 = load ptr, ptr %4688, align 8, !tbaa !174
  %4690 = getelementptr inbounds %struct.StrokeCache, ptr %4685, i64 0, i32 12
  %4691 = load float, ptr %4690, align 4, !tbaa !199
  %4692 = getelementptr inbounds %struct.StrokeCache, ptr %4685, i64 0, i32 14
  %4693 = load float, ptr %4692, align 4, !tbaa !20
  %4694 = getelementptr inbounds %struct.StrokeCache, ptr %4685, i64 0, i32 14, i64 1
  %4695 = load <2 x float>, ptr %4694, align 4, !tbaa !20
  %4696 = getelementptr inbounds %struct.RegionView3D, ptr %4689, i64 0, i32 32
  %4697 = load i16, ptr %4696, align 2, !tbaa !293
  %4698 = and i16 %4697, 4
  %4699 = icmp eq i16 %4698, 0
  %4700 = select i1 %4699, ptr null, ptr %4689
  %4701 = load ptr, ptr %4647, align 8, !tbaa !21
  %4702 = load ptr, ptr %4681, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %4701, ptr noundef %4702, ptr noundef nonnull %8, i32 noundef 1) #10
  store i32 0, ptr %4648, align 4, !tbaa !210
  store i32 0, ptr %8, align 8, !tbaa !214
  %4703 = load i32, ptr %4649, align 8, !tbaa !215
  %4704 = icmp sgt i32 %4703, 0
  br i1 %4704, label %4705, label %4934

4705:                                             ; preds = %4678
  %4706 = icmp eq ptr %4700, null
  br label %4707

4707:                                             ; preds = %4929, %4705
  %4708 = phi i32 [ %4703, %4705 ], [ %4930, %4929 ]
  %4709 = phi i32 [ 0, %4705 ], [ %4932, %4929 ]
  %4710 = load ptr, ptr %4650, align 8, !tbaa !216
  %4711 = icmp eq ptr %4710, null
  br i1 %4711, label %4712, label %4714

4712:                                             ; preds = %4707
  %4713 = load i32, ptr %4658, align 8, !tbaa !217
  store i32 %4713, ptr %4652, align 4, !tbaa !218
  store i32 1, ptr %4653, align 8, !tbaa !219
  store i32 0, ptr %4659, align 8, !tbaa !220
  br label %4727

4714:                                             ; preds = %4707
  %4715 = load i32, ptr %4651, align 4, !tbaa !221
  store i32 %4715, ptr %4652, align 4, !tbaa !218
  store i32 %4715, ptr %4653, align 8, !tbaa !219
  %4716 = load ptr, ptr %4654, align 8, !tbaa !222
  %4717 = sext i32 %4709 to i64
  %4718 = getelementptr inbounds i32, ptr %4716, i64 %4717
  %4719 = load i32, ptr %4718, align 4, !tbaa !24
  %4720 = sext i32 %4719 to i64
  %4721 = getelementptr inbounds ptr, ptr %4710, i64 %4720
  %4722 = load ptr, ptr %4721, align 8, !tbaa !31
  store ptr %4722, ptr %4655, align 8, !tbaa !223
  %4723 = load ptr, ptr %4656, align 8, !tbaa !224
  %4724 = getelementptr inbounds ptr, ptr %4723, i64 %4720
  %4725 = load ptr, ptr %4724, align 8, !tbaa !31
  store ptr %4725, ptr %4657, align 8, !tbaa !225
  store i32 0, ptr %4659, align 8, !tbaa !220
  %4726 = icmp sgt i32 %4715, 0
  br i1 %4726, label %4727, label %4929

4727:                                             ; preds = %4714, %4712
  %4728 = phi i32 [ %4715, %4714 ], [ 1, %4712 ]
  %4729 = phi i32 [ %4715, %4714 ], [ %4713, %4712 ]
  br label %4730

4730:                                             ; preds = %4727, %4920
  %4731 = phi i32 [ %4921, %4920 ], [ %4728, %4727 ]
  %4732 = phi i32 [ %4924, %4920 ], [ 0, %4727 ]
  %4733 = phi i32 [ %4923, %4920 ], [ %4729, %4727 ]
  store i32 0, ptr %4660, align 4, !tbaa !226
  %4734 = icmp sgt i32 %4733, 0
  br i1 %4734, label %4735, label %4920

4735:                                             ; preds = %4730, %4910
  %4736 = phi i32 [ %4912, %4910 ], [ 0, %4730 ]
  %4737 = load ptr, ptr %4655, align 8, !tbaa !223
  %4738 = icmp eq ptr %4737, null
  br i1 %4738, label %4774, label %4739

4739:                                             ; preds = %4735
  store ptr %4737, ptr %4662, align 8, !tbaa !227
  %4740 = load ptr, ptr %4661, align 8, !tbaa !228
  %4741 = getelementptr i8, ptr %4740, i64 20
  %4742 = load i32, ptr %4741, align 4, !tbaa !229
  %4743 = sext i32 %4742 to i64
  %4744 = getelementptr inbounds i8, ptr %4737, i64 %4743
  store ptr %4744, ptr %4663, align 8, !tbaa !231
  %4745 = getelementptr inbounds %struct.CCGKey, ptr %4740, i64 0, i32 9
  %4746 = load i32, ptr %4745, align 4, !tbaa !232
  %4747 = icmp eq i32 %4746, 0
  br i1 %4747, label %4753, label %4748

4748:                                             ; preds = %4739
  %4749 = getelementptr i8, ptr %4740, i64 24
  %4750 = load i32, ptr %4749, align 4, !tbaa !233
  %4751 = sext i32 %4750 to i64
  %4752 = getelementptr inbounds i8, ptr %4737, i64 %4751
  br label %4753

4753:                                             ; preds = %4748, %4739
  %4754 = phi ptr [ %4752, %4748 ], [ null, %4739 ]
  store ptr %4754, ptr %4664, align 8, !tbaa !234
  %4755 = getelementptr i8, ptr %4740, i64 4
  %4756 = load i32, ptr %4755, align 4, !tbaa !235
  %4757 = sext i32 %4756 to i64
  %4758 = getelementptr inbounds i8, ptr %4737, i64 %4757
  store ptr %4758, ptr %4655, align 8, !tbaa !223
  %4759 = load ptr, ptr %4657, align 8, !tbaa !225
  %4760 = icmp eq ptr %4759, null
  br i1 %4760, label %4817, label %4761

4761:                                             ; preds = %4753
  %4762 = load i32, ptr %4659, align 8, !tbaa !220
  %4763 = load i32, ptr %4651, align 4, !tbaa !221
  %4764 = mul nsw i32 %4763, %4762
  %4765 = add nsw i32 %4764, %4736
  %4766 = ashr i32 %4765, 5
  %4767 = sext i32 %4766 to i64
  %4768 = getelementptr inbounds i32, ptr %4759, i64 %4767
  %4769 = load i32, ptr %4768, align 4, !tbaa !24
  %4770 = and i32 %4765, 31
  %4771 = shl nuw i32 1, %4770
  %4772 = and i32 %4771, %4769
  %4773 = icmp eq i32 %4772, 0
  br i1 %4773, label %4817, label %4910

4774:                                             ; preds = %4735
  %4775 = load ptr, ptr %4665, align 8, !tbaa !236
  %4776 = icmp eq ptr %4775, null
  br i1 %4776, label %4794, label %4777

4777:                                             ; preds = %4774
  %4778 = load ptr, ptr %4666, align 8, !tbaa !237
  %4779 = sext i32 %4736 to i64
  %4780 = getelementptr inbounds i32, ptr %4778, i64 %4779
  %4781 = load i32, ptr %4780, align 4, !tbaa !24
  %4782 = sext i32 %4781 to i64
  %4783 = getelementptr inbounds %struct.MVert, ptr %4775, i64 %4782
  store ptr %4783, ptr %4667, align 8, !tbaa !238
  %4784 = getelementptr inbounds %struct.MVert, ptr %4775, i64 %4782, i32 2
  %4785 = load i8, ptr %4784, align 2, !tbaa !239
  %4786 = and i8 %4785, 16
  %4787 = icmp eq i8 %4786, 0
  br i1 %4787, label %4788, label %4910

4788:                                             ; preds = %4777
  store ptr %4783, ptr %4662, align 8, !tbaa !227
  %4789 = getelementptr inbounds %struct.MVert, ptr %4775, i64 %4782, i32 1
  store ptr %4789, ptr %4668, align 8, !tbaa !241
  %4790 = load ptr, ptr %4669, align 8, !tbaa !242
  %4791 = icmp eq ptr %4790, null
  br i1 %4791, label %4817, label %4792

4792:                                             ; preds = %4788
  %4793 = getelementptr inbounds float, ptr %4790, i64 %4782
  br label %4814

4794:                                             ; preds = %4774
  %4795 = load ptr, ptr %4670, align 8, !tbaa !243
  %4796 = icmp eq ptr %4795, null
  %4797 = load ptr, ptr %4674, align 8
  %4798 = select i1 %4796, ptr %4797, ptr %4795
  %4799 = select i1 %4796, ptr %4673, ptr %4671
  %4800 = getelementptr i8, ptr %4798, i64 8
  %4801 = load ptr, ptr %4800, align 8, !tbaa !244
  store ptr %4801, ptr %4672, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %4799) #10
  %4802 = load ptr, ptr %4672, align 8, !tbaa !246
  %4803 = getelementptr i8, ptr %4802, i64 13
  %4804 = load i8, ptr %4803, align 1, !tbaa !247
  %4805 = and i8 %4804, 2
  %4806 = icmp eq i8 %4805, 0
  br i1 %4806, label %4807, label %4910

4807:                                             ; preds = %4794
  %4808 = getelementptr inbounds %struct.BMVert, ptr %4802, i64 0, i32 2
  store ptr %4808, ptr %4662, align 8, !tbaa !227
  %4809 = getelementptr inbounds %struct.BMVert, ptr %4802, i64 0, i32 3
  store ptr %4809, ptr %4663, align 8, !tbaa !231
  %4810 = load ptr, ptr %4802, align 8, !tbaa !249
  %4811 = load i32, ptr %4675, align 8, !tbaa !251
  %4812 = sext i32 %4811 to i64
  %4813 = getelementptr inbounds i8, ptr %4810, i64 %4812
  br label %4814

4814:                                             ; preds = %4807, %4792
  %4815 = phi ptr [ %4813, %4807 ], [ %4793, %4792 ]
  %4816 = phi ptr [ %4808, %4807 ], [ %4783, %4792 ]
  store ptr %4815, ptr %4664, align 8, !tbaa !234
  br label %4817

4817:                                             ; preds = %4814, %4788, %4761, %4753
  %4818 = phi ptr [ %4783, %4788 ], [ %4737, %4753 ], [ %4737, %4761 ], [ %4816, %4814 ]
  %4819 = load float, ptr %4818, align 4, !tbaa !20
  %4820 = fsub fast float %4693, %4819
  %4821 = getelementptr inbounds float, ptr %4818, i64 1
  %4822 = load <2 x float>, ptr %4821, align 4, !tbaa !20
  %4823 = fmul fast float %4820, %4820
  %4824 = fsub fast <2 x float> %4695, %4822
  %4825 = fmul fast <2 x float> %4824, %4824
  %4826 = extractelement <2 x float> %4825, i64 0
  %4827 = fadd fast float %4826, %4823
  %4828 = extractelement <2 x float> %4825, i64 1
  %4829 = fadd fast float %4827, %4828
  %4830 = fcmp fast ugt float %4829, %4691
  br i1 %4830, label %4910, label %4831

4831:                                             ; preds = %4817
  br i1 %4706, label %4840, label %4832

4832:                                             ; preds = %4831
  %4833 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %4700, ptr noundef nonnull %4818, i8 noundef zeroext 1) #10
  %4834 = icmp eq i8 %4833, 0
  br i1 %4834, label %4835, label %4910

4835:                                             ; preds = %4832
  %4836 = load ptr, ptr %4662, align 8, !tbaa !227
  %4837 = load float, ptr %4836, align 4, !tbaa !20
  %4838 = getelementptr inbounds float, ptr %4836, i64 1
  %4839 = load <2 x float>, ptr %4838, align 4, !tbaa !20
  br label %4840

4840:                                             ; preds = %4835, %4831
  %4841 = phi float [ %4837, %4835 ], [ %4819, %4831 ]
  %4842 = phi ptr [ %4836, %4835 ], [ %4818, %4831 ]
  %4843 = phi <2 x float> [ %4839, %4835 ], [ %4822, %4831 ]
  %4844 = load float, ptr %7, align 8, !tbaa !20
  %4845 = fsub fast float %4841, %4844
  %4846 = load <2 x float>, ptr %6, align 8, !tbaa !20
  %4847 = extractelement <2 x float> %4846, i64 0
  %4848 = fmul fast float %4847, %4845
  %4849 = load float, ptr %4627, align 8, !tbaa !20
  %4850 = load <2 x float>, ptr %4633, align 4, !tbaa !20
  %4851 = fsub fast <2 x float> %4843, %4850
  %4852 = shufflevector <2 x float> %4846, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %4853 = insertelement <2 x float> %4852, float %4849, i64 1
  %4854 = fmul fast <2 x float> %4853, %4851
  %4855 = extractelement <2 x float> %4854, i64 0
  %4856 = fadd fast float %4855, %4848
  %4857 = extractelement <2 x float> %4854, i64 1
  %4858 = fadd fast float %4856, %4857
  %4859 = fcmp fast ugt float %4858, 0.000000e+00
  br i1 %4859, label %4860, label %4910

4860:                                             ; preds = %4840
  %4861 = fneg fast <2 x float> %4846
  %4862 = insertelement <2 x float> poison, float %4858, i64 0
  %4863 = shufflevector <2 x float> %4862, <2 x float> poison, <2 x i32> zeroinitializer
  %4864 = fmul fast <2 x float> %4863, %4861
  %4865 = fneg fast float %4849
  %4866 = fmul fast float %4858, %4865
  %4867 = load i32, ptr %4676, align 8, !tbaa !180
  %4868 = and i32 %4867, 67108864
  %4869 = icmp eq i32 %4868, 0
  br i1 %4869, label %4884, label %4870

4870:                                             ; preds = %4860
  %4871 = load ptr, ptr %4603, align 8, !tbaa !22
  %4872 = fmul fast <2 x float> %4864, %4864
  %4873 = shufflevector <2 x float> %4872, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %4874 = fadd fast <2 x float> %4873, %4872
  %4875 = extractelement <2 x float> %4874, i64 0
  %4876 = fmul fast float %4866, %4866
  %4877 = fadd fast float %4875, %4876
  %4878 = getelementptr inbounds %struct.StrokeCache, ptr %4871, i64 0, i32 12
  %4879 = load float, ptr %4878, align 4, !tbaa !199
  %4880 = getelementptr inbounds %struct.StrokeCache, ptr %4871, i64 0, i32 49
  %4881 = load float, ptr %4880, align 4, !tbaa !159
  %4882 = fmul fast float %4881, %4879
  %4883 = fcmp fast ugt float %4877, %4882
  br i1 %4883, label %4910, label %4884

4884:                                             ; preds = %4870, %4860
  %4885 = call fast float @llvm.sqrt.f32(float %4829)
  %4886 = load ptr, ptr %4668, align 8, !tbaa !241
  %4887 = load ptr, ptr %4663, align 8, !tbaa !231
  %4888 = load ptr, ptr %4664, align 8, !tbaa !234
  %4889 = icmp eq ptr %4888, null
  br i1 %4889, label %4892, label %4890

4890:                                             ; preds = %4884
  %4891 = load float, ptr %4888, align 4, !tbaa !20
  br label %4892

4892:                                             ; preds = %4890, %4884
  %4893 = phi fast float [ %4891, %4890 ], [ 0.000000e+00, %4884 ]
  %4894 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef nonnull %4601, ptr noundef nonnull %4602, ptr noundef nonnull %4842, float noundef nofpclass(nan inf) %4885, ptr noundef %4886, ptr noundef %4887, float noundef nofpclass(nan inf) %4893)
  %4895 = fmul fast float %4894, %4606
  %4896 = load i32, ptr %4648, align 4, !tbaa !210
  %4897 = sext i32 %4896 to i64
  %4898 = getelementptr inbounds [3 x float], ptr %4684, i64 %4897
  %4899 = insertelement <2 x float> poison, float %4895, i64 0
  %4900 = shufflevector <2 x float> %4899, <2 x float> poison, <2 x i32> zeroinitializer
  %4901 = fmul fast <2 x float> %4900, %4864
  store <2 x float> %4901, ptr %4898, align 4, !tbaa !20
  %4902 = fmul fast float %4895, %4866
  %4903 = getelementptr inbounds float, ptr %4898, i64 2
  store float %4902, ptr %4903, align 4, !tbaa !20
  %4904 = load ptr, ptr %4667, align 8, !tbaa !238
  %4905 = icmp eq ptr %4904, null
  br i1 %4905, label %4910, label %4906

4906:                                             ; preds = %4892
  %4907 = getelementptr inbounds %struct.MVert, ptr %4904, i64 0, i32 2
  %4908 = load i8, ptr %4907, align 2, !tbaa !239
  %4909 = or i8 %4908, -128
  store i8 %4909, ptr %4907, align 2, !tbaa !239
  br label %4910

4910:                                             ; preds = %4906, %4892, %4870, %4840, %4832, %4817, %4794, %4777, %4761
  %4911 = load i32, ptr %4660, align 4, !tbaa !226
  %4912 = add nsw i32 %4911, 1
  store i32 %4912, ptr %4660, align 4, !tbaa !226
  %4913 = load i32, ptr %4648, align 4, !tbaa !210
  %4914 = add nsw i32 %4913, 1
  store i32 %4914, ptr %4648, align 4, !tbaa !210
  %4915 = load i32, ptr %4652, align 4, !tbaa !218
  %4916 = icmp slt i32 %4912, %4915
  br i1 %4916, label %4735, label %4917, !llvm.loop !352

4917:                                             ; preds = %4910
  %4918 = load i32, ptr %4659, align 8, !tbaa !220
  %4919 = load i32, ptr %4653, align 8, !tbaa !219
  br label %4920

4920:                                             ; preds = %4917, %4730
  %4921 = phi i32 [ %4731, %4730 ], [ %4919, %4917 ]
  %4922 = phi i32 [ %4732, %4730 ], [ %4918, %4917 ]
  %4923 = phi i32 [ %4733, %4730 ], [ %4915, %4917 ]
  %4924 = add nsw i32 %4922, 1
  store i32 %4924, ptr %4659, align 8, !tbaa !220
  %4925 = icmp slt i32 %4924, %4921
  br i1 %4925, label %4730, label %4926, !llvm.loop !353

4926:                                             ; preds = %4920
  %4927 = load i32, ptr %8, align 8, !tbaa !214
  %4928 = load i32, ptr %4649, align 8, !tbaa !215
  br label %4929

4929:                                             ; preds = %4926, %4714
  %4930 = phi i32 [ %4708, %4714 ], [ %4928, %4926 ]
  %4931 = phi i32 [ %4709, %4714 ], [ %4927, %4926 ]
  %4932 = add nsw i32 %4931, 1
  store i32 %4932, ptr %8, align 8, !tbaa !214
  %4933 = icmp slt i32 %4932, %4930
  br i1 %4933, label %4707, label %4934, !llvm.loop !354

4934:                                             ; preds = %4929, %4678
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %8) #10
  %4935 = add nuw nsw i64 %4679, 1
  %4936 = icmp eq i64 %4935, %4677
  br i1 %4936, label %4937, label %4678, !llvm.loop !355

4937:                                             ; preds = %4934, %4621
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #10
  br label %5193

4938:                                             ; preds = %285
  %4939 = load ptr, ptr %45, align 8, !tbaa !31
  %4940 = load i32, ptr %46, align 4, !tbaa !24
  %4941 = load ptr, ptr %48, align 8, !tbaa !5
  %4942 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %4943 = getelementptr inbounds %struct.Brush, ptr %4942, i64 0, i32 37
  %4944 = load i8, ptr %4943, align 1, !tbaa !64
  switch i8 %4944, label %5193 [
    i8 0, label %4945
    i8 1, label %5188
  ]

4945:                                             ; preds = %4938
  %4946 = load ptr, ptr %48, align 8, !tbaa !5
  %4947 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %4948 = getelementptr %struct.SculptSession, ptr %4946, i64 0, i32 28
  %4949 = load ptr, ptr %4948, align 8, !tbaa !22
  %4950 = getelementptr inbounds %struct.StrokeCache, ptr %4949, i64 0, i32 19
  %4951 = load float, ptr %4950, align 8, !tbaa !203
  %4952 = icmp sgt i32 %4940, 0
  br i1 %4952, label %4953, label %5193

4953:                                             ; preds = %4945
  %4954 = getelementptr inbounds %struct.SculptSession, ptr %4946, i64 0, i32 15
  %4955 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 5
  %4956 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 12
  %4957 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 6
  %4958 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 13
  %4959 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 1
  %4960 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 2
  %4961 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 11
  %4962 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 7
  %4963 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 9
  %4964 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 10
  %4965 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 15
  %4966 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 4
  %4967 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 3
  %4968 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 8
  %4969 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 24
  %4970 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 26
  %4971 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 27
  %4972 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 14
  %4973 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 16
  %4974 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 22
  %4975 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 25
  %4976 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 17
  %4977 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 18, i32 0, i32 1
  %4978 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 18
  %4979 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 23
  %4980 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 19
  %4981 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 19, i32 0, i32 1
  %4982 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 21
  %4983 = zext i32 %4940 to i64
  br label %4984

4984:                                             ; preds = %5185, %4953
  %4985 = phi i64 [ 0, %4953 ], [ %5186, %5185 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %5) #10
  %4986 = load ptr, ptr %4948, align 8, !tbaa !22
  %4987 = getelementptr inbounds %struct.StrokeCache, ptr %4986, i64 0, i32 22
  %4988 = load ptr, ptr %4987, align 8, !tbaa !172
  %4989 = getelementptr inbounds %struct.ViewContext, ptr %4988, i64 0, i32 5
  %4990 = load ptr, ptr %4989, align 8, !tbaa !174
  %4991 = getelementptr inbounds %struct.StrokeCache, ptr %4986, i64 0, i32 12
  %4992 = load float, ptr %4991, align 4, !tbaa !199
  %4993 = getelementptr inbounds %struct.StrokeCache, ptr %4986, i64 0, i32 14
  %4994 = load float, ptr %4993, align 4, !tbaa !20
  %4995 = getelementptr inbounds %struct.StrokeCache, ptr %4986, i64 0, i32 14, i64 1
  %4996 = load <2 x float>, ptr %4995, align 4, !tbaa !20
  %4997 = getelementptr inbounds %struct.RegionView3D, ptr %4990, i64 0, i32 32
  %4998 = load i16, ptr %4997, align 2, !tbaa !293
  %4999 = and i16 %4998, 4
  %5000 = icmp eq i16 %4999, 0
  %5001 = select i1 %5000, ptr null, ptr %4990
  %5002 = load ptr, ptr %4954, align 8, !tbaa !21
  %5003 = getelementptr inbounds ptr, ptr %4939, i64 %4985
  %5004 = load ptr, ptr %5003, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %5002, ptr noundef %5004, ptr noundef nonnull %5, i32 noundef 1) #10
  store i32 0, ptr %4955, align 4, !tbaa !210
  store i32 0, ptr %5, align 8, !tbaa !214
  %5005 = load i32, ptr %4956, align 8, !tbaa !215
  %5006 = icmp sgt i32 %5005, 0
  br i1 %5006, label %5007, label %5185

5007:                                             ; preds = %4984
  %5008 = icmp eq ptr %5001, null
  br label %5009

5009:                                             ; preds = %5180, %5007
  %5010 = phi i32 [ %5005, %5007 ], [ %5181, %5180 ]
  %5011 = phi i32 [ 0, %5007 ], [ %5183, %5180 ]
  %5012 = load ptr, ptr %4957, align 8, !tbaa !216
  %5013 = icmp eq ptr %5012, null
  br i1 %5013, label %5014, label %5016

5014:                                             ; preds = %5009
  %5015 = load i32, ptr %4965, align 8, !tbaa !217
  store i32 %5015, ptr %4959, align 4, !tbaa !218
  store i32 1, ptr %4960, align 8, !tbaa !219
  store i32 0, ptr %4966, align 8, !tbaa !220
  br label %5029

5016:                                             ; preds = %5009
  %5017 = load i32, ptr %4958, align 4, !tbaa !221
  store i32 %5017, ptr %4959, align 4, !tbaa !218
  store i32 %5017, ptr %4960, align 8, !tbaa !219
  %5018 = load ptr, ptr %4961, align 8, !tbaa !222
  %5019 = sext i32 %5011 to i64
  %5020 = getelementptr inbounds i32, ptr %5018, i64 %5019
  %5021 = load i32, ptr %5020, align 4, !tbaa !24
  %5022 = sext i32 %5021 to i64
  %5023 = getelementptr inbounds ptr, ptr %5012, i64 %5022
  %5024 = load ptr, ptr %5023, align 8, !tbaa !31
  store ptr %5024, ptr %4962, align 8, !tbaa !223
  %5025 = load ptr, ptr %4963, align 8, !tbaa !224
  %5026 = getelementptr inbounds ptr, ptr %5025, i64 %5022
  %5027 = load ptr, ptr %5026, align 8, !tbaa !31
  store ptr %5027, ptr %4964, align 8, !tbaa !225
  store i32 0, ptr %4966, align 8, !tbaa !220
  %5028 = icmp sgt i32 %5017, 0
  br i1 %5028, label %5029, label %5180

5029:                                             ; preds = %5016, %5014
  %5030 = phi i32 [ %5017, %5016 ], [ 1, %5014 ]
  %5031 = phi i32 [ %5017, %5016 ], [ %5015, %5014 ]
  br label %5032

5032:                                             ; preds = %5029, %5171
  %5033 = phi i32 [ %5172, %5171 ], [ %5030, %5029 ]
  %5034 = phi i32 [ %5175, %5171 ], [ 0, %5029 ]
  %5035 = phi i32 [ %5174, %5171 ], [ %5031, %5029 ]
  store i32 0, ptr %4967, align 4, !tbaa !226
  %5036 = icmp sgt i32 %5035, 0
  br i1 %5036, label %5037, label %5171

5037:                                             ; preds = %5032, %5161
  %5038 = phi i32 [ %5163, %5161 ], [ 0, %5032 ]
  %5039 = load ptr, ptr %4962, align 8, !tbaa !223
  %5040 = icmp eq ptr %5039, null
  br i1 %5040, label %5076, label %5041

5041:                                             ; preds = %5037
  store ptr %5039, ptr %4969, align 8, !tbaa !227
  %5042 = load ptr, ptr %4968, align 8, !tbaa !228
  %5043 = getelementptr i8, ptr %5042, i64 20
  %5044 = load i32, ptr %5043, align 4, !tbaa !229
  %5045 = sext i32 %5044 to i64
  %5046 = getelementptr inbounds i8, ptr %5039, i64 %5045
  store ptr %5046, ptr %4970, align 8, !tbaa !231
  %5047 = getelementptr inbounds %struct.CCGKey, ptr %5042, i64 0, i32 9
  %5048 = load i32, ptr %5047, align 4, !tbaa !232
  %5049 = icmp eq i32 %5048, 0
  br i1 %5049, label %5055, label %5050

5050:                                             ; preds = %5041
  %5051 = getelementptr i8, ptr %5042, i64 24
  %5052 = load i32, ptr %5051, align 4, !tbaa !233
  %5053 = sext i32 %5052 to i64
  %5054 = getelementptr inbounds i8, ptr %5039, i64 %5053
  br label %5055

5055:                                             ; preds = %5050, %5041
  %5056 = phi ptr [ %5054, %5050 ], [ null, %5041 ]
  store ptr %5056, ptr %4971, align 8, !tbaa !234
  %5057 = getelementptr i8, ptr %5042, i64 4
  %5058 = load i32, ptr %5057, align 4, !tbaa !235
  %5059 = sext i32 %5058 to i64
  %5060 = getelementptr inbounds i8, ptr %5039, i64 %5059
  store ptr %5060, ptr %4962, align 8, !tbaa !223
  %5061 = load ptr, ptr %4964, align 8, !tbaa !225
  %5062 = icmp eq ptr %5061, null
  br i1 %5062, label %5119, label %5063

5063:                                             ; preds = %5055
  %5064 = load i32, ptr %4966, align 8, !tbaa !220
  %5065 = load i32, ptr %4958, align 4, !tbaa !221
  %5066 = mul nsw i32 %5065, %5064
  %5067 = add nsw i32 %5066, %5038
  %5068 = ashr i32 %5067, 5
  %5069 = sext i32 %5068 to i64
  %5070 = getelementptr inbounds i32, ptr %5061, i64 %5069
  %5071 = load i32, ptr %5070, align 4, !tbaa !24
  %5072 = and i32 %5067, 31
  %5073 = shl nuw i32 1, %5072
  %5074 = and i32 %5073, %5071
  %5075 = icmp eq i32 %5074, 0
  br i1 %5075, label %5119, label %5161

5076:                                             ; preds = %5037
  %5077 = load ptr, ptr %4972, align 8, !tbaa !236
  %5078 = icmp eq ptr %5077, null
  br i1 %5078, label %5096, label %5079

5079:                                             ; preds = %5076
  %5080 = load ptr, ptr %4973, align 8, !tbaa !237
  %5081 = sext i32 %5038 to i64
  %5082 = getelementptr inbounds i32, ptr %5080, i64 %5081
  %5083 = load i32, ptr %5082, align 4, !tbaa !24
  %5084 = sext i32 %5083 to i64
  %5085 = getelementptr inbounds %struct.MVert, ptr %5077, i64 %5084
  store ptr %5085, ptr %4974, align 8, !tbaa !238
  %5086 = getelementptr inbounds %struct.MVert, ptr %5077, i64 %5084, i32 2
  %5087 = load i8, ptr %5086, align 2, !tbaa !239
  %5088 = and i8 %5087, 16
  %5089 = icmp eq i8 %5088, 0
  br i1 %5089, label %5090, label %5161

5090:                                             ; preds = %5079
  store ptr %5085, ptr %4969, align 8, !tbaa !227
  %5091 = getelementptr inbounds %struct.MVert, ptr %5077, i64 %5084, i32 1
  store ptr %5091, ptr %4975, align 8, !tbaa !241
  %5092 = load ptr, ptr %4976, align 8, !tbaa !242
  %5093 = icmp eq ptr %5092, null
  br i1 %5093, label %5119, label %5094

5094:                                             ; preds = %5090
  %5095 = getelementptr inbounds float, ptr %5092, i64 %5084
  br label %5116

5096:                                             ; preds = %5076
  %5097 = load ptr, ptr %4977, align 8, !tbaa !243
  %5098 = icmp eq ptr %5097, null
  %5099 = load ptr, ptr %4981, align 8
  %5100 = select i1 %5098, ptr %5099, ptr %5097
  %5101 = select i1 %5098, ptr %4980, ptr %4978
  %5102 = getelementptr i8, ptr %5100, i64 8
  %5103 = load ptr, ptr %5102, align 8, !tbaa !244
  store ptr %5103, ptr %4979, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %5101) #10
  %5104 = load ptr, ptr %4979, align 8, !tbaa !246
  %5105 = getelementptr i8, ptr %5104, i64 13
  %5106 = load i8, ptr %5105, align 1, !tbaa !247
  %5107 = and i8 %5106, 2
  %5108 = icmp eq i8 %5107, 0
  br i1 %5108, label %5109, label %5161

5109:                                             ; preds = %5096
  %5110 = getelementptr inbounds %struct.BMVert, ptr %5104, i64 0, i32 2
  store ptr %5110, ptr %4969, align 8, !tbaa !227
  %5111 = getelementptr inbounds %struct.BMVert, ptr %5104, i64 0, i32 3
  store ptr %5111, ptr %4970, align 8, !tbaa !231
  %5112 = load ptr, ptr %5104, align 8, !tbaa !249
  %5113 = load i32, ptr %4982, align 8, !tbaa !251
  %5114 = sext i32 %5113 to i64
  %5115 = getelementptr inbounds i8, ptr %5112, i64 %5114
  br label %5116

5116:                                             ; preds = %5109, %5094
  %5117 = phi ptr [ %5115, %5109 ], [ %5095, %5094 ]
  %5118 = phi ptr [ %5110, %5109 ], [ %5085, %5094 ]
  store ptr %5117, ptr %4971, align 8, !tbaa !234
  br label %5119

5119:                                             ; preds = %5116, %5090, %5063, %5055
  %5120 = phi ptr [ %5085, %5090 ], [ %5039, %5055 ], [ %5039, %5063 ], [ %5118, %5116 ]
  %5121 = load float, ptr %5120, align 4, !tbaa !20
  %5122 = fsub fast float %4994, %5121
  %5123 = getelementptr inbounds float, ptr %5120, i64 1
  %5124 = fmul fast float %5122, %5122
  %5125 = load <2 x float>, ptr %5123, align 4, !tbaa !20
  %5126 = fsub fast <2 x float> %4996, %5125
  %5127 = fmul fast <2 x float> %5126, %5126
  %5128 = extractelement <2 x float> %5127, i64 0
  %5129 = fadd fast float %5128, %5124
  %5130 = extractelement <2 x float> %5127, i64 1
  %5131 = fadd fast float %5129, %5130
  %5132 = fcmp fast ugt float %5131, %4992
  br i1 %5132, label %5161, label %5133

5133:                                             ; preds = %5119
  br i1 %5008, label %5139, label %5134

5134:                                             ; preds = %5133
  %5135 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %5001, ptr noundef nonnull %5120, i8 noundef zeroext 1) #10
  %5136 = icmp eq i8 %5135, 0
  br i1 %5136, label %5137, label %5161

5137:                                             ; preds = %5134
  %5138 = load ptr, ptr %4969, align 8, !tbaa !227
  br label %5139

5139:                                             ; preds = %5137, %5133
  %5140 = phi ptr [ %5138, %5137 ], [ %5120, %5133 ]
  %5141 = call fast float @llvm.sqrt.f32(float %5131)
  %5142 = load ptr, ptr %4975, align 8, !tbaa !241
  %5143 = load ptr, ptr %4970, align 8, !tbaa !231
  %5144 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef %4946, ptr noundef %4947, ptr noundef %5140, float noundef nofpclass(nan inf) %5141, ptr noundef %5142, ptr noundef %5143, float noundef nofpclass(nan inf) 0.000000e+00)
  %5145 = fmul fast float %5144, %4951
  %5146 = load ptr, ptr %4971, align 8, !tbaa !234
  %5147 = load float, ptr %5146, align 4, !tbaa !20
  %5148 = fadd fast float %5147, %5145
  store float %5148, ptr %5146, align 4, !tbaa !20
  %5149 = fcmp fast olt float %5148, 0.000000e+00
  br i1 %5149, label %5152, label %5150

5150:                                             ; preds = %5139
  %5151 = fcmp fast ogt float %5148, 1.000000e+00
  br i1 %5151, label %5152, label %5154

5152:                                             ; preds = %5150, %5139
  %5153 = phi float [ 0.000000e+00, %5139 ], [ 1.000000e+00, %5150 ]
  store float %5153, ptr %5146, align 4, !tbaa !20
  br label %5154

5154:                                             ; preds = %5152, %5150
  %5155 = load ptr, ptr %4974, align 8, !tbaa !238
  %5156 = icmp eq ptr %5155, null
  br i1 %5156, label %5161, label %5157

5157:                                             ; preds = %5154
  %5158 = getelementptr inbounds %struct.MVert, ptr %5155, i64 0, i32 2
  %5159 = load i8, ptr %5158, align 2, !tbaa !239
  %5160 = or i8 %5159, -128
  store i8 %5160, ptr %5158, align 2, !tbaa !239
  br label %5161

5161:                                             ; preds = %5157, %5154, %5134, %5119, %5096, %5079, %5063
  %5162 = load i32, ptr %4967, align 4, !tbaa !226
  %5163 = add nsw i32 %5162, 1
  store i32 %5163, ptr %4967, align 4, !tbaa !226
  %5164 = load i32, ptr %4955, align 4, !tbaa !210
  %5165 = add nsw i32 %5164, 1
  store i32 %5165, ptr %4955, align 4, !tbaa !210
  %5166 = load i32, ptr %4959, align 4, !tbaa !218
  %5167 = icmp slt i32 %5163, %5166
  br i1 %5167, label %5037, label %5168, !llvm.loop !356

5168:                                             ; preds = %5161
  %5169 = load i32, ptr %4966, align 8, !tbaa !220
  %5170 = load i32, ptr %4960, align 8, !tbaa !219
  br label %5171

5171:                                             ; preds = %5168, %5032
  %5172 = phi i32 [ %5033, %5032 ], [ %5170, %5168 ]
  %5173 = phi i32 [ %5034, %5032 ], [ %5169, %5168 ]
  %5174 = phi i32 [ %5035, %5032 ], [ %5166, %5168 ]
  %5175 = add nsw i32 %5173, 1
  store i32 %5175, ptr %4966, align 8, !tbaa !220
  %5176 = icmp slt i32 %5175, %5172
  br i1 %5176, label %5032, label %5177, !llvm.loop !357

5177:                                             ; preds = %5171
  %5178 = load i32, ptr %5, align 8, !tbaa !214
  %5179 = load i32, ptr %4956, align 8, !tbaa !215
  br label %5180

5180:                                             ; preds = %5177, %5016
  %5181 = phi i32 [ %5010, %5016 ], [ %5179, %5177 ]
  %5182 = phi i32 [ %5011, %5016 ], [ %5178, %5177 ]
  %5183 = add nsw i32 %5182, 1
  store i32 %5183, ptr %5, align 8, !tbaa !214
  %5184 = icmp slt i32 %5183, %5181
  br i1 %5184, label %5009, label %5185, !llvm.loop !358

5185:                                             ; preds = %5180, %4984
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %5) #10
  %5186 = add nuw nsw i64 %4985, 1
  %5187 = icmp eq i64 %5186, %4983
  br i1 %5187, label %5193, label %4984, !llvm.loop !359

5188:                                             ; preds = %4938
  %5189 = getelementptr inbounds %struct.SculptSession, ptr %4941, i64 0, i32 28
  %5190 = load ptr, ptr %5189, align 8, !tbaa !22
  %5191 = getelementptr inbounds %struct.StrokeCache, ptr %5190, i64 0, i32 19
  %5192 = load float, ptr %5191, align 8, !tbaa !203
  call fastcc void @smooth(ptr noundef %0, ptr noundef nonnull %1, ptr noundef %4939, i32 noundef %4940, float noundef nofpclass(nan inf) %5192, i32 noundef 1)
  br label %5193

5193:                                             ; preds = %5185, %3154, %2733, %2394, %2110, %1814, %1463, %1119, %832, %553, %556, %564, %568, %3493, %3840, %4258, %4597, %4937, %287, %572, %835, %1163, %1466, %1865, %2113, %2397, %2736, %4938, %4945, %5188
  %5194 = load i8, ptr %56, align 8, !tbaa !59
  br label %5195

5195:                                             ; preds = %5193, %285
  %5196 = phi i8 [ %5194, %5193 ], [ %286, %285 ]
  switch i8 %5196, label %5197 [
    i8 2, label %5216
    i8 19, label %5216
  ]

5197:                                             ; preds = %5195
  %5198 = getelementptr inbounds %struct.Brush, ptr %2, i64 0, i32 38
  %5199 = load float, ptr %5198, align 4, !tbaa !63
  %5200 = fcmp fast ogt float %5199, 0.000000e+00
  br i1 %5200, label %5201, label %5216

5201:                                             ; preds = %5197
  %5202 = getelementptr inbounds %struct.Brush, ptr %2, i64 0, i32 16
  %5203 = load i32, ptr %5202, align 8, !tbaa !180
  %5204 = and i32 %5203, 16777216
  %5205 = icmp eq i32 %5204, 0
  %5206 = load ptr, ptr %45, align 8, !tbaa !31
  %5207 = load i32, ptr %46, align 4, !tbaa !24
  br i1 %5205, label %5214, label %5208

5208:                                             ; preds = %5201
  %5209 = load ptr, ptr %51, align 8, !tbaa !22
  %5210 = getelementptr inbounds %struct.StrokeCache, ptr %5209, i64 0, i32 17
  %5211 = load float, ptr %5210, align 4, !tbaa !196
  %5212 = fsub fast float 1.000000e+00, %5211
  %5213 = fmul fast float %5212, %5199
  br label %5214

5214:                                             ; preds = %5201, %5208
  %5215 = phi float [ %5213, %5208 ], [ %5199, %5201 ]
  call fastcc void @smooth(ptr noundef %0, ptr noundef %1, ptr noundef %5206, i32 noundef %5207, float noundef nofpclass(nan inf) %5215, i32 noundef 0)
  br label %5216

5216:                                             ; preds = %5214, %5195, %5195, %5197
  %5217 = load ptr, ptr %51, align 8, !tbaa !22
  %5218 = getelementptr inbounds %struct.StrokeCache, ptr %5217, i64 0, i32 50
  %5219 = load i8, ptr %5218, align 8, !tbaa !176
  %5220 = icmp eq i8 %5219, 0
  br i1 %5220, label %5491, label %5221

5221:                                             ; preds = %5216
  %5222 = load ptr, ptr %45, align 8, !tbaa !31
  %5223 = load i32, ptr %46, align 4, !tbaa !24
  %5224 = getelementptr inbounds %struct.Sculpt, ptr %0, i64 0, i32 5
  %5225 = load float, ptr %5224, align 8, !tbaa !175
  %5226 = load ptr, ptr %48, align 8, !tbaa !5
  %5227 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  %5228 = icmp sgt i32 %5223, 0
  br i1 %5228, label %5229, label %5491

5229:                                             ; preds = %5221
  %5230 = getelementptr %struct.SculptSession, ptr %5226, i64 0, i32 28
  %5231 = load ptr, ptr %5230, align 8, !tbaa !22
  %5232 = getelementptr inbounds %struct.StrokeCache, ptr %5231, i64 0, i32 1, i64 2
  %5233 = load float, ptr %5232, align 4, !tbaa !20
  %5234 = getelementptr inbounds %struct.StrokeCache, ptr %5231, i64 0, i32 1
  %5235 = getelementptr inbounds %struct.StrokeCache, ptr %5231, i64 0, i32 52, i64 2
  %5236 = load float, ptr %5235, align 4, !tbaa !20
  %5237 = getelementptr inbounds %struct.StrokeCache, ptr %5231, i64 0, i32 52
  %5238 = getelementptr inbounds %struct.StrokeCache, ptr %5231, i64 0, i32 12
  %5239 = load float, ptr %5238, align 4, !tbaa !199
  %5240 = getelementptr inbounds %struct.SculptSession, ptr %5226, i64 0, i32 15
  %5241 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 5
  %5242 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 12
  %5243 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 6
  %5244 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 13
  %5245 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 1
  %5246 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 2
  %5247 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 11
  %5248 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 7
  %5249 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 9
  %5250 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 10
  %5251 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 15
  %5252 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 4
  %5253 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 3
  %5254 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 8
  %5255 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 24
  %5256 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 26
  %5257 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 27
  %5258 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 14
  %5259 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 16
  %5260 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 22
  %5261 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 25
  %5262 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 17
  %5263 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 18, i32 0, i32 1
  %5264 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 18
  %5265 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 23
  %5266 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 19
  %5267 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 19, i32 0, i32 1
  %5268 = getelementptr inbounds %struct.PBVHVertexIter, ptr %4, i64 0, i32 21
  %5269 = fneg fast float %5225
  %5270 = fmul fast float %5239, %5269
  %5271 = zext i32 %5223 to i64
  %5272 = load <2 x float>, ptr %5234, align 4, !tbaa !20
  %5273 = load <2 x float>, ptr %5237, align 4, !tbaa !20
  %5274 = fmul fast <2 x float> %5273, %5272
  %5275 = insertelement <2 x float> poison, float %5270, i64 0
  %5276 = fmul fast float %5236, %5233
  %5277 = fmul fast float %5276, %5270
  br label %5278

5278:                                             ; preds = %5488, %5229
  %5279 = phi i64 [ 0, %5229 ], [ %5489, %5488 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %4) #10
  %5280 = load ptr, ptr %5240, align 8, !tbaa !21
  %5281 = getelementptr inbounds ptr, ptr %5222, i64 %5279
  %5282 = load ptr, ptr %5281, align 8, !tbaa !31
  %5283 = call ptr @BKE_pbvh_node_add_proxy(ptr noundef %5280, ptr noundef %5282) #10
  %5284 = load ptr, ptr %5283, align 8, !tbaa !252
  %5285 = load ptr, ptr %5230, align 8, !tbaa !22
  %5286 = getelementptr inbounds %struct.StrokeCache, ptr %5285, i64 0, i32 22
  %5287 = load ptr, ptr %5286, align 8, !tbaa !172
  %5288 = getelementptr inbounds %struct.ViewContext, ptr %5287, i64 0, i32 5
  %5289 = load ptr, ptr %5288, align 8, !tbaa !174
  %5290 = getelementptr inbounds %struct.StrokeCache, ptr %5285, i64 0, i32 12
  %5291 = load float, ptr %5290, align 4, !tbaa !199
  %5292 = getelementptr inbounds %struct.StrokeCache, ptr %5285, i64 0, i32 14
  %5293 = load float, ptr %5292, align 4, !tbaa !20
  %5294 = getelementptr inbounds %struct.StrokeCache, ptr %5285, i64 0, i32 14, i64 1
  %5295 = load <2 x float>, ptr %5294, align 4, !tbaa !20
  %5296 = getelementptr inbounds %struct.RegionView3D, ptr %5289, i64 0, i32 32
  %5297 = load i16, ptr %5296, align 2, !tbaa !293
  %5298 = and i16 %5297, 4
  %5299 = icmp eq i16 %5298, 0
  %5300 = select i1 %5299, ptr null, ptr %5289
  %5301 = load ptr, ptr %5240, align 8, !tbaa !21
  %5302 = load ptr, ptr %5281, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %5301, ptr noundef %5302, ptr noundef nonnull %4, i32 noundef 1) #10
  store i32 0, ptr %5241, align 4, !tbaa !210
  store i32 0, ptr %4, align 8, !tbaa !214
  %5303 = load i32, ptr %5242, align 8, !tbaa !215
  %5304 = icmp sgt i32 %5303, 0
  br i1 %5304, label %5305, label %5488

5305:                                             ; preds = %5278
  %5306 = icmp eq ptr %5300, null
  br label %5307

5307:                                             ; preds = %5483, %5305
  %5308 = phi i32 [ %5303, %5305 ], [ %5484, %5483 ]
  %5309 = phi i32 [ 0, %5305 ], [ %5486, %5483 ]
  %5310 = load ptr, ptr %5243, align 8, !tbaa !216
  %5311 = icmp eq ptr %5310, null
  br i1 %5311, label %5312, label %5314

5312:                                             ; preds = %5307
  %5313 = load i32, ptr %5251, align 8, !tbaa !217
  store i32 %5313, ptr %5245, align 4, !tbaa !218
  store i32 1, ptr %5246, align 8, !tbaa !219
  store i32 0, ptr %5252, align 8, !tbaa !220
  br label %5327

5314:                                             ; preds = %5307
  %5315 = load i32, ptr %5244, align 4, !tbaa !221
  store i32 %5315, ptr %5245, align 4, !tbaa !218
  store i32 %5315, ptr %5246, align 8, !tbaa !219
  %5316 = load ptr, ptr %5247, align 8, !tbaa !222
  %5317 = sext i32 %5309 to i64
  %5318 = getelementptr inbounds i32, ptr %5316, i64 %5317
  %5319 = load i32, ptr %5318, align 4, !tbaa !24
  %5320 = sext i32 %5319 to i64
  %5321 = getelementptr inbounds ptr, ptr %5310, i64 %5320
  %5322 = load ptr, ptr %5321, align 8, !tbaa !31
  store ptr %5322, ptr %5248, align 8, !tbaa !223
  %5323 = load ptr, ptr %5249, align 8, !tbaa !224
  %5324 = getelementptr inbounds ptr, ptr %5323, i64 %5320
  %5325 = load ptr, ptr %5324, align 8, !tbaa !31
  store ptr %5325, ptr %5250, align 8, !tbaa !225
  store i32 0, ptr %5252, align 8, !tbaa !220
  %5326 = icmp sgt i32 %5315, 0
  br i1 %5326, label %5327, label %5483

5327:                                             ; preds = %5314, %5312
  %5328 = phi i32 [ %5315, %5314 ], [ 1, %5312 ]
  %5329 = phi i32 [ %5315, %5314 ], [ %5313, %5312 ]
  br label %5330

5330:                                             ; preds = %5327, %5474
  %5331 = phi i32 [ %5475, %5474 ], [ %5328, %5327 ]
  %5332 = phi i32 [ %5478, %5474 ], [ 0, %5327 ]
  %5333 = phi i32 [ %5477, %5474 ], [ %5329, %5327 ]
  store i32 0, ptr %5253, align 4, !tbaa !226
  %5334 = icmp sgt i32 %5333, 0
  br i1 %5334, label %5335, label %5474

5335:                                             ; preds = %5330, %5464
  %5336 = phi i32 [ %5466, %5464 ], [ 0, %5330 ]
  %5337 = load ptr, ptr %5248, align 8, !tbaa !223
  %5338 = icmp eq ptr %5337, null
  br i1 %5338, label %5374, label %5339

5339:                                             ; preds = %5335
  store ptr %5337, ptr %5255, align 8, !tbaa !227
  %5340 = load ptr, ptr %5254, align 8, !tbaa !228
  %5341 = getelementptr i8, ptr %5340, i64 20
  %5342 = load i32, ptr %5341, align 4, !tbaa !229
  %5343 = sext i32 %5342 to i64
  %5344 = getelementptr inbounds i8, ptr %5337, i64 %5343
  store ptr %5344, ptr %5256, align 8, !tbaa !231
  %5345 = getelementptr inbounds %struct.CCGKey, ptr %5340, i64 0, i32 9
  %5346 = load i32, ptr %5345, align 4, !tbaa !232
  %5347 = icmp eq i32 %5346, 0
  br i1 %5347, label %5353, label %5348

5348:                                             ; preds = %5339
  %5349 = getelementptr i8, ptr %5340, i64 24
  %5350 = load i32, ptr %5349, align 4, !tbaa !233
  %5351 = sext i32 %5350 to i64
  %5352 = getelementptr inbounds i8, ptr %5337, i64 %5351
  br label %5353

5353:                                             ; preds = %5348, %5339
  %5354 = phi ptr [ %5352, %5348 ], [ null, %5339 ]
  store ptr %5354, ptr %5257, align 8, !tbaa !234
  %5355 = getelementptr i8, ptr %5340, i64 4
  %5356 = load i32, ptr %5355, align 4, !tbaa !235
  %5357 = sext i32 %5356 to i64
  %5358 = getelementptr inbounds i8, ptr %5337, i64 %5357
  store ptr %5358, ptr %5248, align 8, !tbaa !223
  %5359 = load ptr, ptr %5250, align 8, !tbaa !225
  %5360 = icmp eq ptr %5359, null
  br i1 %5360, label %5417, label %5361

5361:                                             ; preds = %5353
  %5362 = load i32, ptr %5252, align 8, !tbaa !220
  %5363 = load i32, ptr %5244, align 4, !tbaa !221
  %5364 = mul nsw i32 %5363, %5362
  %5365 = add nsw i32 %5364, %5336
  %5366 = ashr i32 %5365, 5
  %5367 = sext i32 %5366 to i64
  %5368 = getelementptr inbounds i32, ptr %5359, i64 %5367
  %5369 = load i32, ptr %5368, align 4, !tbaa !24
  %5370 = and i32 %5365, 31
  %5371 = shl nuw i32 1, %5370
  %5372 = and i32 %5371, %5369
  %5373 = icmp eq i32 %5372, 0
  br i1 %5373, label %5417, label %5464

5374:                                             ; preds = %5335
  %5375 = load ptr, ptr %5258, align 8, !tbaa !236
  %5376 = icmp eq ptr %5375, null
  br i1 %5376, label %5394, label %5377

5377:                                             ; preds = %5374
  %5378 = load ptr, ptr %5259, align 8, !tbaa !237
  %5379 = sext i32 %5336 to i64
  %5380 = getelementptr inbounds i32, ptr %5378, i64 %5379
  %5381 = load i32, ptr %5380, align 4, !tbaa !24
  %5382 = sext i32 %5381 to i64
  %5383 = getelementptr inbounds %struct.MVert, ptr %5375, i64 %5382
  store ptr %5383, ptr %5260, align 8, !tbaa !238
  %5384 = getelementptr inbounds %struct.MVert, ptr %5375, i64 %5382, i32 2
  %5385 = load i8, ptr %5384, align 2, !tbaa !239
  %5386 = and i8 %5385, 16
  %5387 = icmp eq i8 %5386, 0
  br i1 %5387, label %5388, label %5464

5388:                                             ; preds = %5377
  store ptr %5383, ptr %5255, align 8, !tbaa !227
  %5389 = getelementptr inbounds %struct.MVert, ptr %5375, i64 %5382, i32 1
  store ptr %5389, ptr %5261, align 8, !tbaa !241
  %5390 = load ptr, ptr %5262, align 8, !tbaa !242
  %5391 = icmp eq ptr %5390, null
  br i1 %5391, label %5417, label %5392

5392:                                             ; preds = %5388
  %5393 = getelementptr inbounds float, ptr %5390, i64 %5382
  br label %5414

5394:                                             ; preds = %5374
  %5395 = load ptr, ptr %5263, align 8, !tbaa !243
  %5396 = icmp eq ptr %5395, null
  %5397 = load ptr, ptr %5267, align 8
  %5398 = select i1 %5396, ptr %5397, ptr %5395
  %5399 = select i1 %5396, ptr %5266, ptr %5264
  %5400 = getelementptr i8, ptr %5398, i64 8
  %5401 = load ptr, ptr %5400, align 8, !tbaa !244
  store ptr %5401, ptr %5265, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %5399) #10
  %5402 = load ptr, ptr %5265, align 8, !tbaa !246
  %5403 = getelementptr i8, ptr %5402, i64 13
  %5404 = load i8, ptr %5403, align 1, !tbaa !247
  %5405 = and i8 %5404, 2
  %5406 = icmp eq i8 %5405, 0
  br i1 %5406, label %5407, label %5464

5407:                                             ; preds = %5394
  %5408 = getelementptr inbounds %struct.BMVert, ptr %5402, i64 0, i32 2
  store ptr %5408, ptr %5255, align 8, !tbaa !227
  %5409 = getelementptr inbounds %struct.BMVert, ptr %5402, i64 0, i32 3
  store ptr %5409, ptr %5256, align 8, !tbaa !231
  %5410 = load ptr, ptr %5402, align 8, !tbaa !249
  %5411 = load i32, ptr %5268, align 8, !tbaa !251
  %5412 = sext i32 %5411 to i64
  %5413 = getelementptr inbounds i8, ptr %5410, i64 %5412
  br label %5414

5414:                                             ; preds = %5407, %5392
  %5415 = phi ptr [ %5413, %5407 ], [ %5393, %5392 ]
  %5416 = phi ptr [ %5408, %5407 ], [ %5383, %5392 ]
  store ptr %5415, ptr %5257, align 8, !tbaa !234
  br label %5417

5417:                                             ; preds = %5414, %5388, %5361, %5353
  %5418 = phi ptr [ %5383, %5388 ], [ %5337, %5353 ], [ %5337, %5361 ], [ %5416, %5414 ]
  %5419 = load float, ptr %5418, align 4, !tbaa !20
  %5420 = fsub fast float %5293, %5419
  %5421 = getelementptr inbounds float, ptr %5418, i64 1
  %5422 = fmul fast float %5420, %5420
  %5423 = load <2 x float>, ptr %5421, align 4, !tbaa !20
  %5424 = fsub fast <2 x float> %5295, %5423
  %5425 = fmul fast <2 x float> %5424, %5424
  %5426 = extractelement <2 x float> %5425, i64 0
  %5427 = fadd fast float %5426, %5422
  %5428 = extractelement <2 x float> %5425, i64 1
  %5429 = fadd fast float %5427, %5428
  %5430 = fcmp fast ugt float %5429, %5291
  br i1 %5430, label %5464, label %5431

5431:                                             ; preds = %5417
  br i1 %5306, label %5437, label %5432

5432:                                             ; preds = %5431
  %5433 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %5300, ptr noundef nonnull %5418, i8 noundef zeroext 1) #10
  %5434 = icmp eq i8 %5433, 0
  br i1 %5434, label %5435, label %5464

5435:                                             ; preds = %5432
  %5436 = load ptr, ptr %5255, align 8, !tbaa !227
  br label %5437

5437:                                             ; preds = %5435, %5431
  %5438 = phi ptr [ %5436, %5435 ], [ %5418, %5431 ]
  %5439 = call fast float @llvm.sqrt.f32(float %5429)
  %5440 = load ptr, ptr %5261, align 8, !tbaa !241
  %5441 = load ptr, ptr %5256, align 8, !tbaa !231
  %5442 = load ptr, ptr %5257, align 8, !tbaa !234
  %5443 = icmp eq ptr %5442, null
  br i1 %5443, label %5446, label %5444

5444:                                             ; preds = %5437
  %5445 = load float, ptr %5442, align 4, !tbaa !20
  br label %5446

5446:                                             ; preds = %5444, %5437
  %5447 = phi fast float [ %5445, %5444 ], [ 0.000000e+00, %5437 ]
  %5448 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef %5226, ptr noundef %5227, ptr noundef %5438, float noundef nofpclass(nan inf) %5439, ptr noundef %5440, ptr noundef %5441, float noundef nofpclass(nan inf) %5447)
  %5449 = load i32, ptr %5241, align 4, !tbaa !210
  %5450 = sext i32 %5449 to i64
  %5451 = getelementptr inbounds [3 x float], ptr %5284, i64 %5450
  %5452 = insertelement <2 x float> poison, float %5448, i64 0
  %5453 = fmul fast <2 x float> %5452, %5275
  %5454 = shufflevector <2 x float> %5453, <2 x float> poison, <2 x i32> zeroinitializer
  %5455 = fmul fast <2 x float> %5454, %5274
  store <2 x float> %5455, ptr %5451, align 4, !tbaa !20
  %5456 = fmul fast float %5277, %5448
  %5457 = getelementptr inbounds float, ptr %5451, i64 2
  store float %5456, ptr %5457, align 4, !tbaa !20
  %5458 = load ptr, ptr %5260, align 8, !tbaa !238
  %5459 = icmp eq ptr %5458, null
  br i1 %5459, label %5464, label %5460

5460:                                             ; preds = %5446
  %5461 = getelementptr inbounds %struct.MVert, ptr %5458, i64 0, i32 2
  %5462 = load i8, ptr %5461, align 2, !tbaa !239
  %5463 = or i8 %5462, -128
  store i8 %5463, ptr %5461, align 2, !tbaa !239
  br label %5464

5464:                                             ; preds = %5460, %5446, %5432, %5417, %5394, %5377, %5361
  %5465 = load i32, ptr %5253, align 4, !tbaa !226
  %5466 = add nsw i32 %5465, 1
  store i32 %5466, ptr %5253, align 4, !tbaa !226
  %5467 = load i32, ptr %5241, align 4, !tbaa !210
  %5468 = add nsw i32 %5467, 1
  store i32 %5468, ptr %5241, align 4, !tbaa !210
  %5469 = load i32, ptr %5245, align 4, !tbaa !218
  %5470 = icmp slt i32 %5466, %5469
  br i1 %5470, label %5335, label %5471, !llvm.loop !360

5471:                                             ; preds = %5464
  %5472 = load i32, ptr %5252, align 8, !tbaa !220
  %5473 = load i32, ptr %5246, align 8, !tbaa !219
  br label %5474

5474:                                             ; preds = %5471, %5330
  %5475 = phi i32 [ %5331, %5330 ], [ %5473, %5471 ]
  %5476 = phi i32 [ %5332, %5330 ], [ %5472, %5471 ]
  %5477 = phi i32 [ %5333, %5330 ], [ %5469, %5471 ]
  %5478 = add nsw i32 %5476, 1
  store i32 %5478, ptr %5252, align 8, !tbaa !220
  %5479 = icmp slt i32 %5478, %5475
  br i1 %5479, label %5330, label %5480, !llvm.loop !361

5480:                                             ; preds = %5474
  %5481 = load i32, ptr %4, align 8, !tbaa !214
  %5482 = load i32, ptr %5242, align 8, !tbaa !215
  br label %5483

5483:                                             ; preds = %5480, %5314
  %5484 = phi i32 [ %5308, %5314 ], [ %5482, %5480 ]
  %5485 = phi i32 [ %5309, %5314 ], [ %5481, %5480 ]
  %5486 = add nsw i32 %5485, 1
  store i32 %5486, ptr %4, align 8, !tbaa !214
  %5487 = icmp slt i32 %5486, %5484
  br i1 %5487, label %5307, label %5488, !llvm.loop !362

5488:                                             ; preds = %5483, %5278
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %4) #10
  %5489 = add nuw nsw i64 %5279, 1
  %5490 = icmp eq i64 %5489, %5271
  br i1 %5490, label %5491, label %5278, !llvm.loop !363

5491:                                             ; preds = %5488, %5221, %5216
  %5492 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  %5493 = load ptr, ptr %45, align 8, !tbaa !31
  call void %5492(ptr noundef %5493) #10
  %5494 = load ptr, ptr %51, align 8, !tbaa !22
  %5495 = getelementptr inbounds %struct.StrokeCache, ptr %5494, i64 0, i32 13
  %5496 = load <2 x float>, ptr %5495, align 4, !tbaa !20
  store <2 x float> %5496, ptr %47, align 8, !tbaa !20
  %5497 = getelementptr inbounds %struct.StrokeCache, ptr %5494, i64 0, i32 13, i64 2
  %5498 = load float, ptr %5497, align 4, !tbaa !20
  %5499 = getelementptr inbounds float, ptr %47, i64 2
  store float %5498, ptr %5499, align 8, !tbaa !20
  %5500 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 47
  call void @mul_m4_v3(ptr noundef nonnull %5500, ptr noundef nonnull %47) #10
  %5501 = load ptr, ptr %48, align 8, !tbaa !5
  %5502 = getelementptr inbounds %struct.SculptSession, ptr %5501, i64 0, i32 31
  %5503 = load <2 x float>, ptr %47, align 8, !tbaa !20
  %5504 = load <2 x float>, ptr %5502, align 4, !tbaa !20
  %5505 = fadd fast <2 x float> %5504, %5503
  store <2 x float> %5505, ptr %5502, align 4, !tbaa !20
  %5506 = load float, ptr %5499, align 8, !tbaa !20
  %5507 = getelementptr inbounds %struct.SculptSession, ptr %5501, i64 0, i32 31, i64 2
  %5508 = load float, ptr %5507, align 4, !tbaa !20
  %5509 = fadd fast float %5508, %5506
  store float %5509, ptr %5507, align 4, !tbaa !20
  %5510 = getelementptr inbounds %struct.SculptSession, ptr %5501, i64 0, i32 32
  %5511 = load i32, ptr %5510, align 4, !tbaa !19
  %5512 = add nsw i32 %5511, 1
  store i32 %5512, ptr %5510, align 4, !tbaa !19
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %47) #10
  br label %5513

5513:                                             ; preds = %5491, %68
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %46) #10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %45) #10
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %44) #10
  ret void
}

declare void @RNA_float_get_array(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare zeroext i8 @paint_supports_dynamic_size(ptr noundef, i32 noundef) local_unnamed_addr #3

declare nofpclass(nan inf) float @RNA_float_get(ptr noundef, ptr noundef) local_unnamed_addr #3

declare i32 @BKE_brush_use_locked_size(ptr noundef, ptr noundef) local_unnamed_addr #3

declare nofpclass(nan inf) float @paint_calc_object_space_radius(ptr noundef, ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

declare void @BKE_brush_unprojected_radius_set(ptr noundef, ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

declare nofpclass(nan inf) float @BKE_brush_unprojected_radius_get(ptr noundef, ptr noundef) local_unnamed_addr #3

declare i32 @BKE_brush_use_size_pressure(ptr noundef, ptr noundef) local_unnamed_addr #3

declare nofpclass(nan inf) float @BLI_dial_angle(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @mul_v3_m4v3(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @ED_view3d_win_to_3d(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @mul_mat3_m4_v3(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @paint_mesh_restore_co(ptr noundef %0, ptr noundef %1) unnamed_addr #2 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.PBVHVertexIter, align 8
  %6 = getelementptr %struct.Object, ptr %1, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.SculptSession, ptr %7, i64 0, i32 28
  %9 = load ptr, ptr %8, align 8, !tbaa !22
  %10 = tail call ptr @BKE_paint_brush(ptr noundef %0) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #10
  %11 = getelementptr inbounds %struct.SculptSession, ptr %7, i64 0, i32 15
  %12 = load ptr, ptr %11, align 8, !tbaa !21
  call void @BKE_pbvh_search_gather(ptr noundef %12, ptr noundef null, ptr noundef null, ptr noundef nonnull %3, ptr noundef nonnull %4) #10
  %13 = load i32, ptr %4, align 4, !tbaa !24
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %333

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.SculptSession, ptr %7, i64 0, i32 10
  %17 = getelementptr inbounds %struct.Brush, ptr %10, i64 0, i32 34
  %18 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 5
  %19 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 12
  %20 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 6
  %21 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 13
  %22 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 1
  %23 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 2
  %24 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 11
  %25 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 7
  %26 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 9
  %27 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 10
  %28 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 15
  %29 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 4
  %30 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 3
  %31 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 8
  %32 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 24
  %33 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 26
  %34 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 27
  %35 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 14
  %36 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 16
  %37 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 22
  %38 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 25
  %39 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 17
  %40 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 18, i32 0, i32 1
  %41 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 18
  %42 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 23
  %43 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 19
  %44 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 19, i32 0, i32 1
  %45 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 21
  br label %46

46:                                               ; preds = %15, %328
  %47 = phi i64 [ 0, %15 ], [ %329, %328 ]
  %48 = load ptr, ptr %16, align 8, !tbaa !86
  %49 = icmp eq ptr %48, null
  br i1 %49, label %58, label %50

50:                                               ; preds = %46
  %51 = load i8, ptr %17, align 8, !tbaa !59
  %52 = icmp eq i8 %51, 19
  %53 = select i1 %52, i32 2, i32 0
  %54 = load ptr, ptr %3, align 8, !tbaa !31
  %55 = getelementptr inbounds ptr, ptr %54, i64 %47
  %56 = load ptr, ptr %55, align 8, !tbaa !31
  %57 = call ptr @sculpt_undo_push_node(ptr noundef %1, ptr noundef %56, i32 noundef %53) #10
  br label %63

58:                                               ; preds = %46
  %59 = load ptr, ptr %3, align 8, !tbaa !31
  %60 = getelementptr inbounds ptr, ptr %59, i64 %47
  %61 = load ptr, ptr %60, align 8, !tbaa !31
  %62 = call ptr @sculpt_undo_get_node(ptr noundef %61) #10
  br label %63

63:                                               ; preds = %58, %50
  %64 = phi ptr [ %57, %50 ], [ %62, %58 ]
  %65 = icmp eq ptr %64, null
  br i1 %65, label %328, label %66

66:                                               ; preds = %63
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %5) #10
  %67 = load ptr, ptr %6, align 8, !tbaa !5
  %68 = getelementptr inbounds %struct.SculptSession, ptr %67, i64 0, i32 10
  %69 = load ptr, ptr %68, align 8, !tbaa !86
  %70 = icmp eq ptr %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %struct.SculptSession, ptr %67, i64 0, i32 14
  %73 = load ptr, ptr %72, align 8, !tbaa !119
  br label %81

74:                                               ; preds = %66
  %75 = getelementptr inbounds %struct.SculptUndoNode, ptr %64, i64 0, i32 5
  %76 = load ptr, ptr %75, align 8, !tbaa !80
  %77 = getelementptr inbounds %struct.SculptUndoNode, ptr %64, i64 0, i32 7
  %78 = load ptr, ptr %77, align 8, !tbaa !307
  %79 = getelementptr inbounds %struct.SculptUndoNode, ptr %64, i64 0, i32 8
  %80 = load ptr, ptr %79, align 8, !tbaa !308
  br label %81

81:                                               ; preds = %71, %74
  %82 = phi ptr [ %76, %74 ], [ null, %71 ]
  %83 = phi ptr [ %78, %74 ], [ null, %71 ]
  %84 = phi ptr [ %80, %74 ], [ null, %71 ]
  %85 = phi ptr [ null, %74 ], [ %73, %71 ]
  %86 = load ptr, ptr %11, align 8, !tbaa !21
  %87 = load ptr, ptr %3, align 8, !tbaa !31
  %88 = getelementptr inbounds ptr, ptr %87, i64 %47
  %89 = load ptr, ptr %88, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %86, ptr noundef %89, ptr noundef nonnull %5, i32 noundef 1) #10
  store i32 0, ptr %18, align 4, !tbaa !210
  store i32 0, ptr %5, align 8, !tbaa !214
  %90 = load i32, ptr %19, align 8, !tbaa !215
  %91 = icmp sgt i32 %90, 0
  br i1 %91, label %92, label %324

92:                                               ; preds = %81
  %93 = getelementptr inbounds %struct.SculptUndoNode, ptr %64, i64 0, i32 2
  %94 = icmp eq ptr %84, null
  %95 = icmp eq ptr %82, null
  %96 = icmp eq ptr %83, null
  br label %97

97:                                               ; preds = %92, %316
  %98 = phi i32 [ %90, %92 ], [ %317, %316 ]
  %99 = phi i32 [ 0, %92 ], [ %322, %316 ]
  %100 = phi float [ 0.000000e+00, %92 ], [ %321, %316 ]
  %101 = phi ptr [ null, %92 ], [ %320, %316 ]
  %102 = phi ptr [ null, %92 ], [ %319, %316 ]
  %103 = load ptr, ptr %20, align 8, !tbaa !216
  %104 = icmp eq ptr %103, null
  br i1 %104, label %105, label %107

105:                                              ; preds = %97
  %106 = load i32, ptr %28, align 8, !tbaa !217
  store i32 %106, ptr %22, align 4, !tbaa !218
  store i32 1, ptr %23, align 8, !tbaa !219
  store i32 0, ptr %29, align 8, !tbaa !220
  br label %120

107:                                              ; preds = %97
  %108 = load i32, ptr %21, align 4, !tbaa !221
  store i32 %108, ptr %22, align 4, !tbaa !218
  store i32 %108, ptr %23, align 8, !tbaa !219
  %109 = load ptr, ptr %24, align 8, !tbaa !222
  %110 = sext i32 %99 to i64
  %111 = getelementptr inbounds i32, ptr %109, i64 %110
  %112 = load i32, ptr %111, align 4, !tbaa !24
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds ptr, ptr %103, i64 %113
  %115 = load ptr, ptr %114, align 8, !tbaa !31
  store ptr %115, ptr %25, align 8, !tbaa !223
  %116 = load ptr, ptr %26, align 8, !tbaa !224
  %117 = getelementptr inbounds ptr, ptr %116, i64 %113
  %118 = load ptr, ptr %117, align 8, !tbaa !31
  store ptr %118, ptr %27, align 8, !tbaa !225
  store i32 0, ptr %29, align 8, !tbaa !220
  %119 = icmp sgt i32 %108, 0
  br i1 %119, label %120, label %316

120:                                              ; preds = %105, %107
  %121 = phi i32 [ %108, %107 ], [ 1, %105 ]
  %122 = phi i32 [ %108, %107 ], [ %106, %105 ]
  br label %123

123:                                              ; preds = %120, %304
  %124 = phi i32 [ %305, %304 ], [ %121, %120 ]
  %125 = phi i32 [ %311, %304 ], [ 0, %120 ]
  %126 = phi i32 [ %307, %304 ], [ %122, %120 ]
  %127 = phi float [ %310, %304 ], [ %100, %120 ]
  %128 = phi ptr [ %309, %304 ], [ %101, %120 ]
  %129 = phi ptr [ %308, %304 ], [ %102, %120 ]
  store i32 0, ptr %30, align 4, !tbaa !226
  %130 = icmp sgt i32 %126, 0
  br i1 %130, label %131, label %304

131:                                              ; preds = %123, %291
  %132 = phi i32 [ %296, %291 ], [ 0, %123 ]
  %133 = phi float [ %294, %291 ], [ %127, %123 ]
  %134 = phi ptr [ %293, %291 ], [ %128, %123 ]
  %135 = phi ptr [ %292, %291 ], [ %129, %123 ]
  %136 = load ptr, ptr %25, align 8, !tbaa !223
  %137 = icmp eq ptr %136, null
  br i1 %137, label %173, label %138

138:                                              ; preds = %131
  store ptr %136, ptr %32, align 8, !tbaa !227
  %139 = load ptr, ptr %31, align 8, !tbaa !228
  %140 = getelementptr i8, ptr %139, i64 20
  %141 = load i32, ptr %140, align 4, !tbaa !229
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i8, ptr %136, i64 %142
  store ptr %143, ptr %33, align 8, !tbaa !231
  %144 = getelementptr inbounds %struct.CCGKey, ptr %139, i64 0, i32 9
  %145 = load i32, ptr %144, align 4, !tbaa !232
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %152, label %147

147:                                              ; preds = %138
  %148 = getelementptr i8, ptr %139, i64 24
  %149 = load i32, ptr %148, align 4, !tbaa !233
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i8, ptr %136, i64 %150
  br label %152

152:                                              ; preds = %138, %147
  %153 = phi ptr [ %151, %147 ], [ null, %138 ]
  store ptr %153, ptr %34, align 8, !tbaa !234
  %154 = getelementptr i8, ptr %139, i64 4
  %155 = load i32, ptr %154, align 4, !tbaa !235
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds i8, ptr %136, i64 %156
  store ptr %157, ptr %25, align 8, !tbaa !223
  %158 = load ptr, ptr %27, align 8, !tbaa !225
  %159 = icmp eq ptr %158, null
  br i1 %159, label %215, label %160

160:                                              ; preds = %152
  %161 = load i32, ptr %29, align 8, !tbaa !220
  %162 = load i32, ptr %21, align 4, !tbaa !221
  %163 = mul nsw i32 %162, %161
  %164 = add nsw i32 %163, %132
  %165 = ashr i32 %164, 5
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds i32, ptr %158, i64 %166
  %168 = load i32, ptr %167, align 4, !tbaa !24
  %169 = and i32 %164, 31
  %170 = shl nuw i32 1, %169
  %171 = and i32 %170, %168
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %215, label %291

173:                                              ; preds = %131
  %174 = load ptr, ptr %35, align 8, !tbaa !236
  %175 = icmp eq ptr %174, null
  br i1 %175, label %193, label %176

176:                                              ; preds = %173
  %177 = load ptr, ptr %36, align 8, !tbaa !237
  %178 = sext i32 %132 to i64
  %179 = getelementptr inbounds i32, ptr %177, i64 %178
  %180 = load i32, ptr %179, align 4, !tbaa !24
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds %struct.MVert, ptr %174, i64 %181
  store ptr %182, ptr %37, align 8, !tbaa !238
  %183 = getelementptr inbounds %struct.MVert, ptr %174, i64 %181, i32 2
  %184 = load i8, ptr %183, align 2, !tbaa !239
  %185 = and i8 %184, 16
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %187, label %291

187:                                              ; preds = %176
  store ptr %182, ptr %32, align 8, !tbaa !227
  %188 = getelementptr inbounds %struct.MVert, ptr %174, i64 %181, i32 1
  store ptr %188, ptr %38, align 8, !tbaa !241
  %189 = load ptr, ptr %39, align 8, !tbaa !242
  %190 = icmp eq ptr %189, null
  br i1 %190, label %215, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds float, ptr %189, i64 %181
  br label %213

193:                                              ; preds = %173
  %194 = load ptr, ptr %40, align 8, !tbaa !243
  %195 = icmp eq ptr %194, null
  %196 = load ptr, ptr %44, align 8
  %197 = select i1 %195, ptr %196, ptr %194
  %198 = select i1 %195, ptr %43, ptr %41
  %199 = getelementptr i8, ptr %197, i64 8
  %200 = load ptr, ptr %199, align 8, !tbaa !244
  store ptr %200, ptr %42, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %198) #10
  %201 = load ptr, ptr %42, align 8, !tbaa !246
  %202 = getelementptr i8, ptr %201, i64 13
  %203 = load i8, ptr %202, align 1, !tbaa !247
  %204 = and i8 %203, 2
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %206, label %291

206:                                              ; preds = %193
  %207 = getelementptr inbounds %struct.BMVert, ptr %201, i64 0, i32 2
  store ptr %207, ptr %32, align 8, !tbaa !227
  %208 = getelementptr inbounds %struct.BMVert, ptr %201, i64 0, i32 3
  store ptr %208, ptr %33, align 8, !tbaa !231
  %209 = load ptr, ptr %201, align 8, !tbaa !249
  %210 = load i32, ptr %45, align 8, !tbaa !251
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i8, ptr %209, i64 %211
  br label %213

213:                                              ; preds = %191, %206
  %214 = phi ptr [ %212, %206 ], [ %192, %191 ]
  store ptr %214, ptr %34, align 8, !tbaa !234
  br label %215

215:                                              ; preds = %213, %187, %152, %160
  %216 = load i32, ptr %93, align 8, !tbaa !309
  switch i32 %216, label %248 [
    i32 0, label %217
    i32 2, label %234
  ]

217:                                              ; preds = %215
  br i1 %95, label %222, label %218

218:                                              ; preds = %217
  %219 = load i32, ptr %18, align 4, !tbaa !210
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds [3 x float], ptr %82, i64 %220
  br label %225

222:                                              ; preds = %217
  %223 = load ptr, ptr %42, align 8, !tbaa !246
  %224 = call ptr @BM_log_original_vert_co(ptr noundef %85, ptr noundef %223) #10
  br label %225

225:                                              ; preds = %222, %218
  %226 = phi ptr [ %224, %222 ], [ %221, %218 ]
  br i1 %96, label %231, label %227

227:                                              ; preds = %225
  %228 = load i32, ptr %18, align 4, !tbaa !210
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds [3 x i16], ptr %83, i64 %229
  br label %243

231:                                              ; preds = %225
  %232 = load ptr, ptr %42, align 8, !tbaa !246
  %233 = call ptr @BM_log_original_vert_no(ptr noundef %85, ptr noundef %232) #10
  br label %243

234:                                              ; preds = %215
  br i1 %94, label %240, label %235

235:                                              ; preds = %234
  %236 = load i32, ptr %18, align 4, !tbaa !210
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds float, ptr %84, i64 %237
  %239 = load float, ptr %238, align 4, !tbaa !20
  br label %243

240:                                              ; preds = %234
  %241 = load ptr, ptr %42, align 8, !tbaa !246
  %242 = call fast nofpclass(nan inf) float @BM_log_original_mask(ptr noundef %85, ptr noundef %241) #10
  br label %243

243:                                              ; preds = %240, %235, %231, %227
  %244 = phi ptr [ %226, %227 ], [ %226, %231 ], [ %135, %235 ], [ %135, %240 ]
  %245 = phi ptr [ %230, %227 ], [ %233, %231 ], [ %134, %235 ], [ %134, %240 ]
  %246 = phi float [ %133, %227 ], [ %133, %231 ], [ %239, %235 ], [ %242, %240 ]
  %247 = load i32, ptr %93, align 8, !tbaa !309
  br label %248

248:                                              ; preds = %243, %215
  %249 = phi i32 [ %247, %243 ], [ %216, %215 ]
  %250 = phi ptr [ %244, %243 ], [ %135, %215 ]
  %251 = phi ptr [ %245, %243 ], [ %134, %215 ]
  %252 = phi float [ %246, %243 ], [ %133, %215 ]
  switch i32 %249, label %284 [
    i32 0, label %253
    i32 2, label %282
  ]

253:                                              ; preds = %248
  %254 = load ptr, ptr %32, align 8, !tbaa !227
  %255 = load float, ptr %250, align 4, !tbaa !20
  store float %255, ptr %254, align 4, !tbaa !20
  %256 = getelementptr inbounds float, ptr %250, i64 1
  %257 = load float, ptr %256, align 4, !tbaa !20
  %258 = getelementptr inbounds float, ptr %254, i64 1
  store float %257, ptr %258, align 4, !tbaa !20
  %259 = getelementptr inbounds float, ptr %250, i64 2
  %260 = load float, ptr %259, align 4, !tbaa !20
  %261 = getelementptr inbounds float, ptr %254, i64 2
  store float %260, ptr %261, align 4, !tbaa !20
  %262 = load ptr, ptr %38, align 8, !tbaa !241
  %263 = icmp eq ptr %262, null
  br i1 %263, label %272, label %264

264:                                              ; preds = %253
  %265 = load i16, ptr %251, align 2, !tbaa !302
  store i16 %265, ptr %262, align 2, !tbaa !302
  %266 = getelementptr inbounds i16, ptr %251, i64 1
  %267 = load i16, ptr %266, align 2, !tbaa !302
  %268 = getelementptr inbounds i16, ptr %262, i64 1
  store i16 %267, ptr %268, align 2, !tbaa !302
  %269 = getelementptr inbounds i16, ptr %251, i64 2
  %270 = load i16, ptr %269, align 2, !tbaa !302
  %271 = getelementptr inbounds i16, ptr %262, i64 2
  store i16 %270, ptr %271, align 2, !tbaa !302
  br label %284

272:                                              ; preds = %253
  %273 = load ptr, ptr %33, align 8, !tbaa !231
  %274 = load <2 x i16>, ptr %251, align 2, !tbaa !302
  %275 = sitofp <2 x i16> %274 to <2 x float>
  %276 = fmul fast <2 x float> %275, <float 0x3F00002000000000, float 0x3F00002000000000>
  store <2 x float> %276, ptr %273, align 4, !tbaa !20
  %277 = getelementptr inbounds i16, ptr %251, i64 2
  %278 = load i16, ptr %277, align 2, !tbaa !302
  %279 = sitofp i16 %278 to float
  %280 = fmul fast float %279, 0x3F00002000000000
  %281 = getelementptr inbounds float, ptr %273, i64 2
  store float %280, ptr %281, align 4, !tbaa !20
  br label %284

282:                                              ; preds = %248
  %283 = load ptr, ptr %34, align 8, !tbaa !234
  store float %252, ptr %283, align 4, !tbaa !20
  br label %284

284:                                              ; preds = %248, %282, %264, %272
  %285 = load ptr, ptr %37, align 8, !tbaa !238
  %286 = icmp eq ptr %285, null
  br i1 %286, label %291, label %287

287:                                              ; preds = %284
  %288 = getelementptr inbounds %struct.MVert, ptr %285, i64 0, i32 2
  %289 = load i8, ptr %288, align 2, !tbaa !239
  %290 = or i8 %289, -128
  store i8 %290, ptr %288, align 2, !tbaa !239
  br label %291

291:                                              ; preds = %284, %287, %193, %176, %160
  %292 = phi ptr [ %250, %284 ], [ %250, %287 ], [ %135, %193 ], [ %135, %176 ], [ %135, %160 ]
  %293 = phi ptr [ %251, %284 ], [ %251, %287 ], [ %134, %193 ], [ %134, %176 ], [ %134, %160 ]
  %294 = phi float [ %252, %284 ], [ %252, %287 ], [ %133, %193 ], [ %133, %176 ], [ %133, %160 ]
  %295 = load i32, ptr %30, align 4, !tbaa !226
  %296 = add nsw i32 %295, 1
  store i32 %296, ptr %30, align 4, !tbaa !226
  %297 = load i32, ptr %18, align 4, !tbaa !210
  %298 = add nsw i32 %297, 1
  store i32 %298, ptr %18, align 4, !tbaa !210
  %299 = load i32, ptr %22, align 4, !tbaa !218
  %300 = icmp slt i32 %296, %299
  br i1 %300, label %131, label %301, !llvm.loop !364

301:                                              ; preds = %291
  %302 = load i32, ptr %29, align 8, !tbaa !220
  %303 = load i32, ptr %23, align 8, !tbaa !219
  br label %304

304:                                              ; preds = %301, %123
  %305 = phi i32 [ %124, %123 ], [ %303, %301 ]
  %306 = phi i32 [ %125, %123 ], [ %302, %301 ]
  %307 = phi i32 [ %126, %123 ], [ %299, %301 ]
  %308 = phi ptr [ %129, %123 ], [ %292, %301 ]
  %309 = phi ptr [ %128, %123 ], [ %293, %301 ]
  %310 = phi float [ %127, %123 ], [ %294, %301 ]
  %311 = add nsw i32 %306, 1
  store i32 %311, ptr %29, align 8, !tbaa !220
  %312 = icmp slt i32 %311, %305
  br i1 %312, label %123, label %313, !llvm.loop !365

313:                                              ; preds = %304
  %314 = load i32, ptr %5, align 8, !tbaa !214
  %315 = load i32, ptr %19, align 8, !tbaa !215
  br label %316

316:                                              ; preds = %313, %107
  %317 = phi i32 [ %98, %107 ], [ %315, %313 ]
  %318 = phi i32 [ %99, %107 ], [ %314, %313 ]
  %319 = phi ptr [ %102, %107 ], [ %308, %313 ]
  %320 = phi ptr [ %101, %107 ], [ %309, %313 ]
  %321 = phi float [ %100, %107 ], [ %310, %313 ]
  %322 = add nsw i32 %318, 1
  store i32 %322, ptr %5, align 8, !tbaa !214
  %323 = icmp slt i32 %322, %317
  br i1 %323, label %97, label %324, !llvm.loop !366

324:                                              ; preds = %316, %81
  %325 = load ptr, ptr %3, align 8, !tbaa !31
  %326 = getelementptr inbounds ptr, ptr %325, i64 %47
  %327 = load ptr, ptr %326, align 8, !tbaa !31
  call void @BKE_pbvh_node_mark_update(ptr noundef %327) #10
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %5) #10
  br label %328

328:                                              ; preds = %324, %63
  %329 = add nuw nsw i64 %47, 1
  %330 = load i32, ptr %4, align 4, !tbaa !24
  %331 = sext i32 %330 to i64
  %332 = icmp slt i64 %329, %331
  br i1 %332, label %46, label %333, !llvm.loop !367

333:                                              ; preds = %328, %2
  %334 = getelementptr inbounds %struct.SculptSession, ptr %7, i64 0, i32 6
  %335 = load ptr, ptr %334, align 8, !tbaa !185
  %336 = icmp eq ptr %335, null
  br i1 %336, label %387, label %337

337:                                              ; preds = %333
  %338 = getelementptr inbounds %struct.SculptSession, ptr %7, i64 0, i32 5
  %339 = load i32, ptr %338, align 4, !tbaa !186
  %340 = icmp sgt i32 %339, 0
  br i1 %340, label %341, label %387

341:                                              ; preds = %337
  %342 = getelementptr inbounds %struct.StrokeCache, ptr %9, i64 0, i32 24
  %343 = load ptr, ptr %342, align 8, !tbaa !145
  %344 = zext i32 %339 to i64
  %345 = and i64 %344, 1
  %346 = icmp eq i32 %339, 1
  br i1 %346, label %374, label %347

347:                                              ; preds = %341
  %348 = and i64 %344, 4294967294
  br label %349

349:                                              ; preds = %349, %347
  %350 = phi i64 [ 0, %347 ], [ %371, %349 ]
  %351 = phi i64 [ 0, %347 ], [ %372, %349 ]
  %352 = getelementptr inbounds [3 x float], ptr %335, i64 %350
  %353 = getelementptr inbounds [3 x float], ptr %343, i64 %350
  %354 = load float, ptr %353, align 4, !tbaa !20
  store float %354, ptr %352, align 4, !tbaa !20
  %355 = getelementptr inbounds float, ptr %353, i64 1
  %356 = load float, ptr %355, align 4, !tbaa !20
  %357 = getelementptr inbounds float, ptr %352, i64 1
  store float %356, ptr %357, align 4, !tbaa !20
  %358 = getelementptr inbounds float, ptr %353, i64 2
  %359 = load float, ptr %358, align 4, !tbaa !20
  %360 = getelementptr inbounds float, ptr %352, i64 2
  store float %359, ptr %360, align 4, !tbaa !20
  %361 = or i64 %350, 1
  %362 = getelementptr inbounds [3 x float], ptr %335, i64 %361
  %363 = getelementptr inbounds [3 x float], ptr %343, i64 %361
  %364 = load float, ptr %363, align 4, !tbaa !20
  store float %364, ptr %362, align 4, !tbaa !20
  %365 = getelementptr inbounds float, ptr %363, i64 1
  %366 = load float, ptr %365, align 4, !tbaa !20
  %367 = getelementptr inbounds float, ptr %362, i64 1
  store float %366, ptr %367, align 4, !tbaa !20
  %368 = getelementptr inbounds float, ptr %363, i64 2
  %369 = load float, ptr %368, align 4, !tbaa !20
  %370 = getelementptr inbounds float, ptr %362, i64 2
  store float %369, ptr %370, align 4, !tbaa !20
  %371 = add nuw nsw i64 %350, 2
  %372 = add i64 %351, 2
  %373 = icmp eq i64 %372, %348
  br i1 %373, label %374, label %349, !llvm.loop !368

374:                                              ; preds = %349, %341
  %375 = phi i64 [ 0, %341 ], [ %371, %349 ]
  %376 = icmp eq i64 %345, 0
  br i1 %376, label %387, label %377

377:                                              ; preds = %374
  %378 = getelementptr inbounds [3 x float], ptr %335, i64 %375
  %379 = getelementptr inbounds [3 x float], ptr %343, i64 %375
  %380 = load float, ptr %379, align 4, !tbaa !20
  store float %380, ptr %378, align 4, !tbaa !20
  %381 = getelementptr inbounds float, ptr %379, i64 1
  %382 = load float, ptr %381, align 4, !tbaa !20
  %383 = getelementptr inbounds float, ptr %378, i64 1
  store float %382, ptr %383, align 4, !tbaa !20
  %384 = getelementptr inbounds float, ptr %379, i64 2
  %385 = load float, ptr %384, align 4, !tbaa !20
  %386 = getelementptr inbounds float, ptr %378, i64 2
  store float %385, ptr %386, align 4, !tbaa !20
  br label %387

387:                                              ; preds = %377, %374, %337, %333
  %388 = load ptr, ptr %3, align 8, !tbaa !31
  %389 = icmp eq ptr %388, null
  br i1 %389, label %392, label %390

390:                                              ; preds = %387
  %391 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  call void %391(ptr noundef nonnull %388) #10
  br label %392

392:                                              ; preds = %390, %387
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #10
  ret void
}

declare void @BKE_pbvh_search_gather(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @sculpt_undo_push_node(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @pbvh_vertex_iter_init(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @BKE_pbvh_node_mark_update(ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #7

declare void @BLI_ghashIterator_step(ptr noundef) local_unnamed_addr #3

declare ptr @BM_log_original_vert_co(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @BM_log_original_vert_no(ptr noundef, ptr noundef) local_unnamed_addr #3

declare nofpclass(nan inf) float @BM_log_original_mask(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @calc_brushdata_symm(ptr noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, float noundef nofpclass(nan inf) %3) unnamed_addr #2 {
  %5 = getelementptr inbounds %struct.StrokeCache, ptr %0, i64 0, i32 14
  %6 = getelementptr inbounds %struct.StrokeCache, ptr %0, i64 0, i32 13
  tail call void @flip_v3_v3(ptr noundef nonnull %5, ptr noundef nonnull %6, i8 noundef zeroext %1) #10
  %7 = getelementptr inbounds %struct.StrokeCache, ptr %0, i64 0, i32 27
  %8 = getelementptr inbounds %struct.StrokeCache, ptr %0, i64 0, i32 26
  tail call void @flip_v3_v3(ptr noundef nonnull %7, ptr noundef nonnull %8, i8 noundef zeroext %1) #10
  %9 = getelementptr inbounds %struct.StrokeCache, ptr %0, i64 0, i32 33
  %10 = getelementptr inbounds %struct.StrokeCache, ptr %0, i64 0, i32 32
  tail call void @flip_v3_v3(ptr noundef nonnull %9, ptr noundef nonnull %10, i8 noundef zeroext %1) #10
  %11 = getelementptr inbounds %struct.StrokeCache, ptr %0, i64 0, i32 39
  tail call void @unit_m4(ptr noundef nonnull %11) #10
  %12 = getelementptr inbounds %struct.StrokeCache, ptr %0, i64 0, i32 40
  tail call void @unit_m4(ptr noundef nonnull %12) #10
  %13 = icmp eq i8 %2, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %4
  tail call void @rotate_m4(ptr noundef nonnull %11, i8 noundef zeroext %2, float noundef nofpclass(nan inf) %3) #10
  %15 = fneg fast float %3
  tail call void @rotate_m4(ptr noundef nonnull %12, i8 noundef zeroext %2, float noundef nofpclass(nan inf) %15) #10
  br label %16

16:                                               ; preds = %14, %4
  tail call void @mul_m4_v3(ptr noundef nonnull %11, ptr noundef nonnull %5) #10
  tail call void @mul_m4_v3(ptr noundef nonnull %11, ptr noundef nonnull %7) #10
  %17 = getelementptr inbounds %struct.StrokeCache, ptr %0, i64 0, i32 50
  %18 = load i8, ptr %17, align 8, !tbaa !176
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.StrokeCache, ptr %0, i64 0, i32 52
  %22 = getelementptr inbounds %struct.StrokeCache, ptr %0, i64 0, i32 51
  tail call void @flip_v3_v3(ptr noundef nonnull %21, ptr noundef nonnull %22, i8 noundef zeroext %1) #10
  tail call void @mul_m4_v3(ptr noundef nonnull %11, ptr noundef nonnull %21) #10
  br label %23

23:                                               ; preds = %20, %16
  ret void
}

declare void @flip_v3_v3(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

declare void @unit_m4(ptr noundef) local_unnamed_addr #3

declare void @rotate_m4(ptr noundef, i8 noundef zeroext, float noundef nofpclass(nan inf)) local_unnamed_addr #3

declare nofpclass(nan inf) float @BKE_brush_alpha_get(ptr noundef, ptr noundef) local_unnamed_addr #3

declare i32 @BKE_brush_use_alpha_pressure(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal zeroext i8 @sculpt_search_sphere_cb(ptr noundef %0, ptr nocapture noundef readonly %1) #2 {
  %3 = alloca [3 x float], align 4
  %4 = alloca [3 x float], align 4
  %5 = getelementptr inbounds %struct.SculptSearchSphereData, ptr %1, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !282
  %7 = getelementptr inbounds %struct.SculptSession, ptr %6, i64 0, i32 28
  %8 = load ptr, ptr %7, align 8, !tbaa !22
  %9 = getelementptr inbounds %struct.StrokeCache, ptr %8, i64 0, i32 14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %3) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #10
  %10 = getelementptr inbounds %struct.SculptSearchSphereData, ptr %1, i64 0, i32 3
  %11 = load i8, ptr %10, align 4, !tbaa !286
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  call void @BKE_pbvh_node_get_original_BB(ptr noundef %0, ptr noundef nonnull %3, ptr noundef nonnull %4) #10
  br label %15

14:                                               ; preds = %2
  call void @BKE_pbvh_node_get_BB(ptr noundef %0, ptr noundef nonnull %3, ptr noundef nonnull %4) #10
  br label %15

15:                                               ; preds = %14, %13
  %16 = load float, ptr %3, align 4, !tbaa !20
  %17 = load float, ptr %9, align 4, !tbaa !20
  %18 = fcmp fast ogt float %16, %17
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = load float, ptr %4, align 4, !tbaa !20
  %21 = fcmp fast olt float %20, %17
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  br label %23

23:                                               ; preds = %19, %15, %22
  %24 = phi float [ %17, %22 ], [ %16, %15 ], [ %20, %19 ]
  %25 = getelementptr inbounds [3 x float], ptr %3, i64 0, i64 1
  %26 = load float, ptr %25, align 4, !tbaa !20
  %27 = getelementptr inbounds %struct.StrokeCache, ptr %8, i64 0, i32 14, i64 1
  %28 = load float, ptr %27, align 4, !tbaa !20
  %29 = fcmp fast ogt float %26, %28
  br i1 %29, label %35, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds [3 x float], ptr %4, i64 0, i64 1
  %32 = load float, ptr %31, align 4, !tbaa !20
  %33 = fcmp fast olt float %32, %28
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  br label %35

35:                                               ; preds = %23, %30, %34
  %36 = phi float [ %32, %34 ], [ %28, %30 ], [ %26, %23 ]
  %37 = getelementptr inbounds [3 x float], ptr %3, i64 0, i64 2
  %38 = load float, ptr %37, align 4, !tbaa !20
  %39 = getelementptr inbounds %struct.StrokeCache, ptr %8, i64 0, i32 14, i64 2
  %40 = load float, ptr %39, align 4, !tbaa !20
  %41 = fcmp fast ogt float %38, %40
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds [3 x float], ptr %4, i64 0, i64 2
  %44 = load float, ptr %43, align 4, !tbaa !20
  %45 = fcmp fast olt float %44, %40
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  br label %47

47:                                               ; preds = %35, %42, %46
  %48 = phi float [ %44, %46 ], [ %40, %42 ], [ %38, %35 ]
  %49 = fsub fast float %17, %24
  %50 = fsub fast float %28, %36
  %51 = fsub fast float %40, %48
  %52 = fmul fast float %49, %49
  %53 = fmul fast float %50, %50
  %54 = fadd fast float %53, %52
  %55 = fmul fast float %51, %51
  %56 = fadd fast float %54, %55
  %57 = getelementptr inbounds %struct.SculptSearchSphereData, ptr %1, i64 0, i32 2
  %58 = load float, ptr %57, align 8, !tbaa !285
  %59 = fcmp fast olt float %56, %58
  %60 = zext i1 %59 to i8
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %3) #10
  ret i8 %60
}

declare void @BKE_pbvh_node_mark_topology_update(ptr noundef) local_unnamed_addr #3

declare void @BKE_pbvh_bmesh_node_save_orig(ptr noundef) local_unnamed_addr #3

declare zeroext i8 @BKE_pbvh_bmesh_update_topology(ptr noundef, i32 noundef, ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

declare void @BKE_pbvh_node_get_original_BB(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BKE_pbvh_node_get_BB(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @do_crease_brush(ptr noundef %0, ptr nocapture readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3) unnamed_addr #2 {
  %5 = alloca %struct.PBVHVertexIter, align 8
  %6 = getelementptr %struct.SculptSession, ptr %1, i64 0, i32 28
  %7 = load ptr, ptr %6, align 8, !tbaa !22
  %8 = getelementptr inbounds %struct.StrokeCache, ptr %7, i64 0, i32 22
  %9 = load ptr, ptr %8, align 8, !tbaa !172
  %10 = load ptr, ptr %9, align 8, !tbaa !207
  %11 = tail call ptr @BKE_paint_brush(ptr noundef %0) #10
  %12 = load ptr, ptr %6, align 8, !tbaa !22
  %13 = getelementptr inbounds %struct.StrokeCache, ptr %12, i64 0, i32 19
  %14 = load float, ptr %13, align 8, !tbaa !203
  %15 = getelementptr inbounds %struct.StrokeCache, ptr %12, i64 0, i32 35
  %16 = getelementptr inbounds %struct.StrokeCache, ptr %12, i64 0, i32 11
  %17 = load float, ptr %16, align 8, !tbaa !198
  %18 = getelementptr inbounds %struct.StrokeCache, ptr %12, i64 0, i32 35, i64 2
  %19 = load float, ptr %18, align 4, !tbaa !20
  %20 = getelementptr inbounds %struct.StrokeCache, ptr %12, i64 0, i32 1
  %21 = load <2 x float>, ptr %15, align 4, !tbaa !20
  %22 = load <2 x float>, ptr %20, align 4, !tbaa !20
  %23 = getelementptr inbounds %struct.StrokeCache, ptr %12, i64 0, i32 1, i64 2
  %24 = load float, ptr %23, align 4, !tbaa !20
  %25 = getelementptr inbounds %struct.Brush, ptr %11, i64 0, i32 39
  %26 = load float, ptr %25, align 8, !tbaa !369
  %27 = fmul fast float %26, %26
  %28 = tail call fast nofpclass(nan inf) float @BKE_brush_alpha_get(ptr noundef %10, ptr noundef %11) #10
  %29 = fcmp fast ogt float %28, 0.000000e+00
  %30 = fmul fast float %28, %28
  %31 = select i1 %29, float %30, float 1.000000e+00
  %32 = fdiv fast float %27, %31
  %33 = fcmp fast olt float %14, 0.000000e+00
  %34 = fneg fast float %32
  %35 = select i1 %33, float %34, float %32
  %36 = fmul fast float %35, %14
  %37 = getelementptr inbounds %struct.Brush, ptr %11, i64 0, i32 34
  %38 = load i8, ptr %37, align 8, !tbaa !59
  %39 = icmp eq i8 %38, 17
  %40 = fneg fast float %36
  %41 = select i1 %39, float %40, float %36
  %42 = icmp sgt i32 %3, 0
  br i1 %42, label %43, label %309

43:                                               ; preds = %4
  %44 = getelementptr inbounds %struct.SculptSession, ptr %1, i64 0, i32 15
  %45 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 5
  %46 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 12
  %47 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 6
  %48 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 13
  %49 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 1
  %50 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 2
  %51 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 11
  %52 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 7
  %53 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 9
  %54 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 10
  %55 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 15
  %56 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 4
  %57 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 3
  %58 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 8
  %59 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 24
  %60 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 26
  %61 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 27
  %62 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 14
  %63 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 16
  %64 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 22
  %65 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 25
  %66 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 17
  %67 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 18, i32 0, i32 1
  %68 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 18
  %69 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 23
  %70 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 19
  %71 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 19, i32 0, i32 1
  %72 = getelementptr inbounds %struct.PBVHVertexIter, ptr %5, i64 0, i32 21
  %73 = fmul fast float %17, %14
  %74 = insertelement <2 x float> poison, float %73, i64 0
  %75 = shufflevector <2 x float> %74, <2 x float> poison, <2 x i32> zeroinitializer
  %76 = fmul fast <2 x float> %75, %21
  %77 = fmul fast <2 x float> %76, %22
  %78 = fmul fast float %73, %19
  %79 = fmul fast float %78, %24
  %80 = zext i32 %3 to i64
  br label %81

81:                                               ; preds = %43, %306
  %82 = phi i64 [ 0, %43 ], [ %307, %306 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %5) #10
  %83 = load ptr, ptr %44, align 8, !tbaa !21
  %84 = getelementptr inbounds ptr, ptr %2, i64 %82
  %85 = load ptr, ptr %84, align 8, !tbaa !31
  %86 = call ptr @BKE_pbvh_node_add_proxy(ptr noundef %83, ptr noundef %85) #10
  %87 = load ptr, ptr %86, align 8, !tbaa !252
  %88 = load ptr, ptr %6, align 8, !tbaa !22
  %89 = getelementptr inbounds %struct.StrokeCache, ptr %88, i64 0, i32 22
  %90 = load ptr, ptr %89, align 8, !tbaa !172
  %91 = getelementptr inbounds %struct.ViewContext, ptr %90, i64 0, i32 5
  %92 = load ptr, ptr %91, align 8, !tbaa !174
  %93 = getelementptr inbounds %struct.StrokeCache, ptr %88, i64 0, i32 12
  %94 = load float, ptr %93, align 4, !tbaa !199
  %95 = getelementptr inbounds %struct.StrokeCache, ptr %88, i64 0, i32 14
  %96 = load <2 x float>, ptr %95, align 4, !tbaa !20
  %97 = getelementptr inbounds %struct.StrokeCache, ptr %88, i64 0, i32 14, i64 2
  %98 = load float, ptr %97, align 4, !tbaa !20
  %99 = getelementptr inbounds %struct.RegionView3D, ptr %92, i64 0, i32 32
  %100 = load i16, ptr %99, align 2, !tbaa !293
  %101 = and i16 %100, 4
  %102 = icmp eq i16 %101, 0
  %103 = select i1 %102, ptr null, ptr %92
  %104 = load ptr, ptr %44, align 8, !tbaa !21
  %105 = load ptr, ptr %84, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %104, ptr noundef %105, ptr noundef nonnull %5, i32 noundef 1) #10
  store i32 0, ptr %45, align 4, !tbaa !210
  store i32 0, ptr %5, align 8, !tbaa !214
  %106 = load i32, ptr %46, align 8, !tbaa !215
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %108, label %306

108:                                              ; preds = %81
  %109 = icmp eq ptr %103, null
  %110 = extractelement <2 x float> %96, i64 0
  %111 = shufflevector <2 x float> %96, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %112 = insertelement <2 x float> %111, float %98, i64 1
  br label %113

113:                                              ; preds = %108, %301
  %114 = phi i32 [ %106, %108 ], [ %302, %301 ]
  %115 = phi i32 [ 0, %108 ], [ %304, %301 ]
  %116 = load ptr, ptr %47, align 8, !tbaa !216
  %117 = icmp eq ptr %116, null
  br i1 %117, label %118, label %120

118:                                              ; preds = %113
  %119 = load i32, ptr %55, align 8, !tbaa !217
  store i32 %119, ptr %49, align 4, !tbaa !218
  store i32 1, ptr %50, align 8, !tbaa !219
  store i32 0, ptr %56, align 8, !tbaa !220
  br label %133

120:                                              ; preds = %113
  %121 = load i32, ptr %48, align 4, !tbaa !221
  store i32 %121, ptr %49, align 4, !tbaa !218
  store i32 %121, ptr %50, align 8, !tbaa !219
  %122 = load ptr, ptr %51, align 8, !tbaa !222
  %123 = sext i32 %115 to i64
  %124 = getelementptr inbounds i32, ptr %122, i64 %123
  %125 = load i32, ptr %124, align 4, !tbaa !24
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds ptr, ptr %116, i64 %126
  %128 = load ptr, ptr %127, align 8, !tbaa !31
  store ptr %128, ptr %52, align 8, !tbaa !223
  %129 = load ptr, ptr %53, align 8, !tbaa !224
  %130 = getelementptr inbounds ptr, ptr %129, i64 %126
  %131 = load ptr, ptr %130, align 8, !tbaa !31
  store ptr %131, ptr %54, align 8, !tbaa !225
  store i32 0, ptr %56, align 8, !tbaa !220
  %132 = icmp sgt i32 %121, 0
  br i1 %132, label %133, label %301

133:                                              ; preds = %118, %120
  %134 = phi i32 [ %121, %120 ], [ 1, %118 ]
  %135 = phi i32 [ %121, %120 ], [ %119, %118 ]
  br label %136

136:                                              ; preds = %133, %292
  %137 = phi i32 [ %293, %292 ], [ %134, %133 ]
  %138 = phi i32 [ %296, %292 ], [ 0, %133 ]
  %139 = phi i32 [ %295, %292 ], [ %135, %133 ]
  store i32 0, ptr %57, align 4, !tbaa !226
  %140 = icmp sgt i32 %139, 0
  br i1 %140, label %141, label %292

141:                                              ; preds = %136, %282
  %142 = phi i32 [ %284, %282 ], [ 0, %136 ]
  %143 = load ptr, ptr %52, align 8, !tbaa !223
  %144 = icmp eq ptr %143, null
  br i1 %144, label %180, label %145

145:                                              ; preds = %141
  store ptr %143, ptr %59, align 8, !tbaa !227
  %146 = load ptr, ptr %58, align 8, !tbaa !228
  %147 = getelementptr i8, ptr %146, i64 20
  %148 = load i32, ptr %147, align 4, !tbaa !229
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i8, ptr %143, i64 %149
  store ptr %150, ptr %60, align 8, !tbaa !231
  %151 = getelementptr inbounds %struct.CCGKey, ptr %146, i64 0, i32 9
  %152 = load i32, ptr %151, align 4, !tbaa !232
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %159, label %154

154:                                              ; preds = %145
  %155 = getelementptr i8, ptr %146, i64 24
  %156 = load i32, ptr %155, align 4, !tbaa !233
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i8, ptr %143, i64 %157
  br label %159

159:                                              ; preds = %145, %154
  %160 = phi ptr [ %158, %154 ], [ null, %145 ]
  store ptr %160, ptr %61, align 8, !tbaa !234
  %161 = getelementptr i8, ptr %146, i64 4
  %162 = load i32, ptr %161, align 4, !tbaa !235
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds i8, ptr %143, i64 %163
  store ptr %164, ptr %52, align 8, !tbaa !223
  %165 = load ptr, ptr %54, align 8, !tbaa !225
  %166 = icmp eq ptr %165, null
  br i1 %166, label %223, label %167

167:                                              ; preds = %159
  %168 = load i32, ptr %56, align 8, !tbaa !220
  %169 = load i32, ptr %48, align 4, !tbaa !221
  %170 = mul nsw i32 %169, %168
  %171 = add nsw i32 %170, %142
  %172 = ashr i32 %171, 5
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i32, ptr %165, i64 %173
  %175 = load i32, ptr %174, align 4, !tbaa !24
  %176 = and i32 %171, 31
  %177 = shl nuw i32 1, %176
  %178 = and i32 %177, %175
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %223, label %282

180:                                              ; preds = %141
  %181 = load ptr, ptr %62, align 8, !tbaa !236
  %182 = icmp eq ptr %181, null
  br i1 %182, label %200, label %183

183:                                              ; preds = %180
  %184 = load ptr, ptr %63, align 8, !tbaa !237
  %185 = sext i32 %142 to i64
  %186 = getelementptr inbounds i32, ptr %184, i64 %185
  %187 = load i32, ptr %186, align 4, !tbaa !24
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds %struct.MVert, ptr %181, i64 %188
  store ptr %189, ptr %64, align 8, !tbaa !238
  %190 = getelementptr inbounds %struct.MVert, ptr %181, i64 %188, i32 2
  %191 = load i8, ptr %190, align 2, !tbaa !239
  %192 = and i8 %191, 16
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %194, label %282

194:                                              ; preds = %183
  store ptr %189, ptr %59, align 8, !tbaa !227
  %195 = getelementptr inbounds %struct.MVert, ptr %181, i64 %188, i32 1
  store ptr %195, ptr %65, align 8, !tbaa !241
  %196 = load ptr, ptr %66, align 8, !tbaa !242
  %197 = icmp eq ptr %196, null
  br i1 %197, label %223, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds float, ptr %196, i64 %188
  br label %220

200:                                              ; preds = %180
  %201 = load ptr, ptr %67, align 8, !tbaa !243
  %202 = icmp eq ptr %201, null
  %203 = load ptr, ptr %71, align 8
  %204 = select i1 %202, ptr %203, ptr %201
  %205 = select i1 %202, ptr %70, ptr %68
  %206 = getelementptr i8, ptr %204, i64 8
  %207 = load ptr, ptr %206, align 8, !tbaa !244
  store ptr %207, ptr %69, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %205) #10
  %208 = load ptr, ptr %69, align 8, !tbaa !246
  %209 = getelementptr i8, ptr %208, i64 13
  %210 = load i8, ptr %209, align 1, !tbaa !247
  %211 = and i8 %210, 2
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %213, label %282

213:                                              ; preds = %200
  %214 = getelementptr inbounds %struct.BMVert, ptr %208, i64 0, i32 2
  store ptr %214, ptr %59, align 8, !tbaa !227
  %215 = getelementptr inbounds %struct.BMVert, ptr %208, i64 0, i32 3
  store ptr %215, ptr %60, align 8, !tbaa !231
  %216 = load ptr, ptr %208, align 8, !tbaa !249
  %217 = load i32, ptr %72, align 8, !tbaa !251
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds i8, ptr %216, i64 %218
  br label %220

220:                                              ; preds = %198, %213
  %221 = phi ptr [ %219, %213 ], [ %199, %198 ]
  %222 = phi ptr [ %214, %213 ], [ %189, %198 ]
  store ptr %221, ptr %61, align 8, !tbaa !234
  br label %223

223:                                              ; preds = %220, %194, %159, %167
  %224 = phi ptr [ %189, %194 ], [ %143, %159 ], [ %143, %167 ], [ %222, %220 ]
  %225 = load float, ptr %224, align 4, !tbaa !20
  %226 = fsub fast float %110, %225
  %227 = getelementptr inbounds float, ptr %224, i64 1
  %228 = fmul fast float %226, %226
  %229 = load <2 x float>, ptr %227, align 4, !tbaa !20
  %230 = fsub fast <2 x float> %112, %229
  %231 = fmul fast <2 x float> %230, %230
  %232 = extractelement <2 x float> %231, i64 0
  %233 = fadd fast float %232, %228
  %234 = extractelement <2 x float> %231, i64 1
  %235 = fadd fast float %233, %234
  %236 = fcmp fast ugt float %235, %94
  br i1 %236, label %282, label %237

237:                                              ; preds = %223
  br i1 %109, label %243, label %238

238:                                              ; preds = %237
  %239 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %103, ptr noundef nonnull %224, i8 noundef zeroext 1) #10
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %241, label %282

241:                                              ; preds = %238
  %242 = load ptr, ptr %59, align 8, !tbaa !227
  br label %243

243:                                              ; preds = %241, %237
  %244 = phi ptr [ %242, %241 ], [ %224, %237 ]
  %245 = call fast float @llvm.sqrt.f32(float %235)
  %246 = load ptr, ptr %65, align 8, !tbaa !241
  %247 = load ptr, ptr %60, align 8, !tbaa !231
  %248 = load ptr, ptr %61, align 8, !tbaa !234
  %249 = icmp eq ptr %248, null
  br i1 %249, label %252, label %250

250:                                              ; preds = %243
  %251 = load float, ptr %248, align 4, !tbaa !20
  br label %252

252:                                              ; preds = %243, %250
  %253 = phi fast float [ %251, %250 ], [ 0.000000e+00, %243 ]
  %254 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef %1, ptr noundef %11, ptr noundef %244, float noundef nofpclass(nan inf) %245, ptr noundef %246, ptr noundef %247, float noundef nofpclass(nan inf) %253)
  %255 = load ptr, ptr %59, align 8, !tbaa !227
  %256 = getelementptr inbounds float, ptr %255, i64 2
  %257 = load float, ptr %256, align 4, !tbaa !20
  %258 = fsub fast float %98, %257
  %259 = fmul fast float %254, %41
  %260 = fmul fast float %258, %259
  %261 = fmul fast float %79, %254
  %262 = load i32, ptr %45, align 4, !tbaa !210
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds [3 x float], ptr %87, i64 %263
  %265 = load <2 x float>, ptr %255, align 4, !tbaa !20
  %266 = fsub fast <2 x float> %96, %265
  %267 = insertelement <2 x float> poison, float %259, i64 0
  %268 = shufflevector <2 x float> %267, <2 x float> poison, <2 x i32> zeroinitializer
  %269 = fmul fast <2 x float> %266, %268
  %270 = insertelement <2 x float> poison, float %254, i64 0
  %271 = shufflevector <2 x float> %270, <2 x float> poison, <2 x i32> zeroinitializer
  %272 = fmul fast <2 x float> %77, %271
  %273 = fadd fast <2 x float> %269, %272
  store <2 x float> %273, ptr %264, align 4, !tbaa !20
  %274 = fadd fast float %260, %261
  %275 = getelementptr inbounds float, ptr %264, i64 2
  store float %274, ptr %275, align 4, !tbaa !20
  %276 = load ptr, ptr %64, align 8, !tbaa !238
  %277 = icmp eq ptr %276, null
  br i1 %277, label %282, label %278

278:                                              ; preds = %252
  %279 = getelementptr inbounds %struct.MVert, ptr %276, i64 0, i32 2
  %280 = load i8, ptr %279, align 2, !tbaa !239
  %281 = or i8 %280, -128
  store i8 %281, ptr %279, align 2, !tbaa !239
  br label %282

282:                                              ; preds = %223, %238, %252, %278, %200, %183, %167
  %283 = load i32, ptr %57, align 4, !tbaa !226
  %284 = add nsw i32 %283, 1
  store i32 %284, ptr %57, align 4, !tbaa !226
  %285 = load i32, ptr %45, align 4, !tbaa !210
  %286 = add nsw i32 %285, 1
  store i32 %286, ptr %45, align 4, !tbaa !210
  %287 = load i32, ptr %49, align 4, !tbaa !218
  %288 = icmp slt i32 %284, %287
  br i1 %288, label %141, label %289, !llvm.loop !370

289:                                              ; preds = %282
  %290 = load i32, ptr %56, align 8, !tbaa !220
  %291 = load i32, ptr %50, align 8, !tbaa !219
  br label %292

292:                                              ; preds = %289, %136
  %293 = phi i32 [ %137, %136 ], [ %291, %289 ]
  %294 = phi i32 [ %138, %136 ], [ %290, %289 ]
  %295 = phi i32 [ %139, %136 ], [ %287, %289 ]
  %296 = add nsw i32 %294, 1
  store i32 %296, ptr %56, align 8, !tbaa !220
  %297 = icmp slt i32 %296, %293
  br i1 %297, label %136, label %298, !llvm.loop !371

298:                                              ; preds = %292
  %299 = load i32, ptr %5, align 8, !tbaa !214
  %300 = load i32, ptr %46, align 8, !tbaa !215
  br label %301

301:                                              ; preds = %298, %120
  %302 = phi i32 [ %114, %120 ], [ %300, %298 ]
  %303 = phi i32 [ %115, %120 ], [ %299, %298 ]
  %304 = add nsw i32 %303, 1
  store i32 %304, ptr %5, align 8, !tbaa !214
  %305 = icmp slt i32 %304, %302
  br i1 %305, label %113, label %306, !llvm.loop !372

306:                                              ; preds = %301, %81
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %5) #10
  %307 = add nuw nsw i64 %82, 1
  %308 = icmp eq i64 %307, %80
  br i1 %308, label %309, label %81, !llvm.loop !373

309:                                              ; preds = %306, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @smooth(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3, float noundef nofpclass(nan inf) %4, i32 noundef %5) unnamed_addr #2 {
  %7 = alloca %struct.BMIter, align 8
  %8 = alloca %struct.BMIter, align 8
  %9 = alloca %struct.PBVHVertexIter, align 8
  %10 = alloca [3 x i32], align 4
  %11 = alloca [3 x i32], align 4
  %12 = alloca %struct.PBVHVertexIter, align 8
  %13 = alloca ptr, align 8
  %14 = alloca %struct.CCGKey, align 4
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !5
  %21 = getelementptr inbounds %struct.SculptSession, ptr %20, i64 0, i32 15
  %22 = load ptr, ptr %21, align 8, !tbaa !21
  %23 = tail call i32 @BKE_pbvh_type(ptr noundef %22) #10
  %24 = fcmp fast olt float %4, 0.000000e+00
  br i1 %24, label %28, label %25

25:                                               ; preds = %6
  %26 = fcmp fast ogt float %4, 1.000000e+00
  br i1 %26, label %27, label %28

27:                                               ; preds = %25
  br label %28

28:                                               ; preds = %6, %25, %27
  %29 = phi float [ 1.000000e+00, %27 ], [ %4, %25 ], [ 0.000000e+00, %6 ]
  %30 = fmul fast float %29, 4.000000e+00
  %31 = fptosi float %30 to i32
  %32 = sitofp i32 %31 to float
  %33 = fmul fast float %32, 2.500000e-01
  %34 = fsub fast float %29, %33
  %35 = fmul fast float %34, 4.000000e+00
  %36 = icmp eq i32 %23, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %28
  %38 = getelementptr inbounds %struct.SculptSession, ptr %20, i64 0, i32 9
  %39 = load ptr, ptr %38, align 8, !tbaa !374
  %40 = icmp eq ptr %39, null
  %41 = icmp slt i32 %31, 0
  %42 = select i1 %40, i1 true, i1 %41
  br i1 %42, label %1534, label %45

43:                                               ; preds = %28
  %44 = icmp slt i32 %31, 0
  br i1 %44, label %1534, label %45

45:                                               ; preds = %37, %43
  %46 = icmp sgt i32 %3, 0
  %47 = getelementptr i8, ptr %20, i64 192
  %48 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 5
  %49 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 12
  %50 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 6
  %51 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 13
  %52 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 1
  %53 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 2
  %54 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 11
  %55 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 7
  %56 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 9
  %57 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 10
  %58 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 15
  %59 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 4
  %60 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 3
  %61 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 8
  %62 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 24
  %63 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 26
  %64 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 27
  %65 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 14
  %66 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 16
  %67 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 22
  %68 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 25
  %69 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 17
  %70 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 18, i32 0, i32 1
  %71 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 18
  %72 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 23
  %73 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 19
  %74 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 19, i32 0, i32 1
  %75 = getelementptr inbounds %struct.PBVHVertexIter, ptr %9, i64 0, i32 21
  %76 = icmp eq i32 %5, 0
  %77 = getelementptr inbounds %struct.SculptSession, ptr %20, i64 0, i32 10
  %78 = getelementptr inbounds %struct.BMIter, ptr %8, i64 0, i32 4
  %79 = getelementptr inbounds %struct.BMIter, ptr %8, i64 0, i32 1
  %80 = getelementptr inbounds %struct.BMIter, ptr %8, i64 0, i32 2
  %81 = getelementptr inbounds %struct.BMIter, ptr %7, i64 0, i32 4
  %82 = getelementptr inbounds %struct.BMIter, ptr %7, i64 0, i32 1
  %83 = getelementptr inbounds %struct.BMIter, ptr %7, i64 0, i32 2
  %84 = getelementptr inbounds %struct.Sculpt, ptr %0, i64 0, i32 1
  %85 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 5
  %86 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 12
  %87 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 6
  %88 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 13
  %89 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 1
  %90 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 2
  %91 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 11
  %92 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 7
  %93 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 9
  %94 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 10
  %95 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 15
  %96 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 4
  %97 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 3
  %98 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 8
  %99 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 24
  %100 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 26
  %101 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 27
  %102 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 14
  %103 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 16
  %104 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 22
  %105 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 25
  %106 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 17
  %107 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 18, i32 0, i32 1
  %108 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 18
  %109 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 23
  %110 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 19
  %111 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 19, i32 0, i32 1
  %112 = getelementptr inbounds %struct.PBVHVertexIter, ptr %12, i64 0, i32 21
  %113 = getelementptr inbounds %struct.SculptSession, ptr %20, i64 0, i32 8
  %114 = getelementptr inbounds %struct.SculptSession, ptr %20, i64 0, i32 9
  %115 = getelementptr inbounds %struct.SculptSession, ptr %20, i64 0, i32 2
  %116 = getelementptr inbounds %struct.SculptSession, ptr %20, i64 0, i32 3
  %117 = getelementptr inbounds [3 x i32], ptr %11, i64 0, i64 1
  %118 = getelementptr inbounds [3 x i32], ptr %11, i64 0, i64 2
  %119 = getelementptr inbounds %struct.SculptSession, ptr %20, i64 0, i32 1
  %120 = getelementptr inbounds %struct.SculptSession, ptr %20, i64 0, i32 19
  %121 = getelementptr inbounds [3 x i32], ptr %10, i64 0, i64 1
  %122 = getelementptr inbounds [3 x i32], ptr %10, i64 0, i64 2
  %123 = getelementptr inbounds i8, ptr %14, i64 4
  %124 = getelementptr inbounds i8, ptr %14, i64 24
  %125 = getelementptr inbounds i8, ptr %14, i64 20
  br i1 %46, label %126, label %1521

126:                                              ; preds = %45
  %127 = zext i32 %3 to i64
  %128 = zext i32 %3 to i64
  %129 = zext i32 %3 to i64
  br label %130

130:                                              ; preds = %126, %148
  %131 = phi i32 [ %149, %148 ], [ 0, %126 ]
  %132 = icmp eq i32 %131, %31
  %133 = select fast i1 %132, float %35, float 1.000000e+00
  switch i32 %23, label %151 [
    i32 1, label %143
    i32 0, label %139
    i32 2, label %134
  ]

134:                                              ; preds = %130
  %135 = fcmp fast ogt float %133, 1.000000e+00
  %136 = select fast i1 %135, float 1.000000e+00, float %133
  %137 = call fast float @llvm.maxnum.f32(float %136, float 0.000000e+00)
  %138 = fmul fast float %137, %137
  br label %1073

139:                                              ; preds = %130
  %140 = fcmp fast ogt float %133, 1.000000e+00
  %141 = select fast i1 %140, float 1.000000e+00, float %133
  %142 = call fast float @llvm.maxnum.f32(float %141, float 0.000000e+00)
  br label %561

143:                                              ; preds = %130
  %144 = fcmp fast ogt float %133, 1.000000e+00
  %145 = select fast i1 %144, float 1.000000e+00, float %133
  %146 = call fast float @llvm.maxnum.f32(float %145, float 0.000000e+00)
  br label %154

147:                                              ; preds = %151
  call void @multires_stitch_grids(ptr noundef %1) #10
  br label %148

148:                                              ; preds = %147, %151
  %149 = add nuw i32 %131, 1
  %150 = icmp eq i32 %131, %31
  br i1 %150, label %1534, label %130, !llvm.loop !375

151:                                              ; preds = %1518, %1070, %474, %130
  %152 = load ptr, ptr %20, align 8, !tbaa !178
  %153 = icmp eq ptr %152, null
  br i1 %153, label %148, label %147

154:                                              ; preds = %143, %474
  %155 = phi i64 [ 0, %143 ], [ %475, %474 ]
  %156 = getelementptr inbounds ptr, ptr %2, i64 %155
  %157 = load ptr, ptr %156, align 8, !tbaa !31
  %158 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #10
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %14) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %15) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %16) #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #10
  %159 = load ptr, ptr %47, align 8, !tbaa !22
  %160 = getelementptr inbounds %struct.StrokeCache, ptr %159, i64 0, i32 22
  %161 = load ptr, ptr %160, align 8, !tbaa !172
  %162 = getelementptr inbounds %struct.ViewContext, ptr %161, i64 0, i32 5
  %163 = load ptr, ptr %162, align 8, !tbaa !174
  %164 = getelementptr inbounds %struct.StrokeCache, ptr %159, i64 0, i32 12
  %165 = load float, ptr %164, align 4, !tbaa !199
  %166 = getelementptr inbounds %struct.StrokeCache, ptr %159, i64 0, i32 14
  %167 = load float, ptr %166, align 4, !tbaa !20
  %168 = getelementptr inbounds %struct.StrokeCache, ptr %159, i64 0, i32 14, i64 1
  %169 = load <2 x float>, ptr %168, align 4, !tbaa !20
  %170 = getelementptr inbounds %struct.RegionView3D, ptr %163, i64 0, i32 32
  %171 = load i16, ptr %170, align 2, !tbaa !293
  %172 = and i16 %171, 4
  %173 = icmp eq i16 %172, 0
  %174 = select i1 %173, ptr null, ptr %163
  %175 = load ptr, ptr %21, align 8, !tbaa !21
  call void @BKE_pbvh_node_get_grids(ptr noundef %175, ptr noundef %157, ptr noundef nonnull %16, ptr noundef nonnull %17, ptr noundef null, ptr noundef nonnull %18, ptr noundef nonnull %13, ptr noundef nonnull %15) #10
  %176 = load ptr, ptr %21, align 8, !tbaa !21
  call void @BKE_pbvh_get_grid_key(ptr noundef %176, ptr noundef nonnull %14) #10
  %177 = load ptr, ptr %21, align 8, !tbaa !21
  %178 = call ptr @BKE_pbvh_grid_hidden(ptr noundef %177) #10
  %179 = load ptr, ptr %47, align 8, !tbaa !22
  %180 = getelementptr inbounds %struct.StrokeCache, ptr %179, i64 0, i32 7
  %181 = load ptr, ptr %180, align 8, !tbaa !190
  %182 = load ptr, ptr %181, align 8, !tbaa !31
  %183 = getelementptr inbounds %struct.StrokeCache, ptr %179, i64 0, i32 8
  %184 = load ptr, ptr %183, align 8, !tbaa !191
  %185 = load ptr, ptr %184, align 8, !tbaa !31
  %186 = getelementptr inbounds %struct.StrokeCache, ptr %179, i64 0, i32 9
  %187 = load ptr, ptr %186, align 8, !tbaa !192
  %188 = load ptr, ptr %187, align 8, !tbaa !31
  %189 = getelementptr inbounds %struct.StrokeCache, ptr %179, i64 0, i32 10
  %190 = load ptr, ptr %189, align 8, !tbaa !193
  %191 = load ptr, ptr %190, align 8, !tbaa !31
  %192 = load i32, ptr %17, align 4, !tbaa !24
  %193 = icmp sgt i32 %192, 0
  br i1 %193, label %194, label %474

194:                                              ; preds = %154
  %195 = getelementptr inbounds float, ptr %185, i64 1
  %196 = getelementptr inbounds float, ptr %185, i64 2
  %197 = icmp eq ptr %174, null
  %198 = select i1 %76, ptr %182, ptr %188
  %199 = load i32, ptr %18, align 4, !tbaa !24
  br label %200

200:                                              ; preds = %468, %194
  %201 = phi i32 [ %199, %194 ], [ %469, %468 ]
  %202 = phi i64 [ 0, %194 ], [ %470, %468 ]
  %203 = load ptr, ptr %16, align 8, !tbaa !31
  %204 = getelementptr inbounds i32, ptr %203, i64 %202
  %205 = load i32, ptr %204, align 4, !tbaa !24
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds ptr, ptr %178, i64 %206
  %208 = load ptr, ptr %207, align 8, !tbaa !31
  %209 = load ptr, ptr %13, align 8, !tbaa !31
  %210 = getelementptr inbounds ptr, ptr %209, i64 %206
  %211 = load ptr, ptr %210, align 8, !tbaa !31
  %212 = load ptr, ptr %15, align 8, !tbaa !31
  %213 = getelementptr inbounds %struct.DMGridAdjacency, ptr %212, i64 %206
  %214 = sext i32 %201 to i64
  %215 = mul nsw i64 %214, 12
  %216 = shl nsw i64 %214, 2
  %217 = select i1 %76, i64 %215, i64 %216
  %218 = mul i64 %217, %214
  call void @llvm.memset.p0.i64(ptr align 4 %198, i8 0, i64 %218, i1 false)
  %219 = load i32, ptr %18, align 4, !tbaa !24
  %220 = icmp sgt i32 %219, 1
  br i1 %220, label %221, label %273

221:                                              ; preds = %200
  %222 = add nsw i32 %219, -1
  %223 = load i32, ptr %123, align 4
  %224 = load i32, ptr %124, align 4
  %225 = sext i32 %224 to i64
  %226 = getelementptr i8, ptr %211, i64 %225
  %227 = zext i32 %219 to i64
  %228 = sext i32 %223 to i64
  %229 = zext i32 %222 to i64
  br i1 %76, label %480, label %230

230:                                              ; preds = %221, %477
  %231 = phi i64 [ %478, %477 ], [ 0, %221 ]
  %232 = mul nuw nsw i64 %231, %227
  %233 = mul nsw i64 %232, %228
  %234 = getelementptr i8, ptr %226, i64 %233
  %235 = load float, ptr %234, align 4, !tbaa !20
  %236 = add nuw nsw i64 %232, %227
  %237 = mul nsw i64 %236, %228
  %238 = getelementptr i8, ptr %226, i64 %237
  %239 = load float, ptr %238, align 4, !tbaa !20
  %240 = fadd fast float %239, %235
  store float %240, ptr %191, align 4, !tbaa !20
  %241 = load i32, ptr %123, align 4
  %242 = load i32, ptr %124, align 4
  %243 = sext i32 %242 to i64
  %244 = getelementptr i8, ptr %211, i64 %243
  %245 = sext i32 %241 to i64
  br label %246

246:                                              ; preds = %246, %230
  %247 = phi i64 [ 0, %230 ], [ %259, %246 ]
  %248 = add nuw nsw i64 %247, %232
  %249 = add nuw nsw i64 %248, 1
  %250 = add nuw nsw i64 %248, %227
  %251 = add nuw nsw i64 %250, 1
  %252 = mul nsw i64 %249, %245
  %253 = getelementptr i8, ptr %244, i64 %252
  %254 = load float, ptr %253, align 4, !tbaa !20
  %255 = mul nsw i64 %251, %245
  %256 = getelementptr i8, ptr %244, i64 %255
  %257 = load float, ptr %256, align 4, !tbaa !20
  %258 = fadd fast float %257, %254
  %259 = add nuw nsw i64 %247, 1
  %260 = getelementptr inbounds float, ptr %191, i64 %259
  store float %258, ptr %260, align 4, !tbaa !20
  %261 = getelementptr inbounds float, ptr %191, i64 %247
  %262 = load float, ptr %261, align 4, !tbaa !20
  %263 = fadd fast float %262, %258
  %264 = getelementptr inbounds float, ptr %188, i64 %248
  %265 = load <2 x float>, ptr %264, align 4, !tbaa !20
  %266 = insertelement <2 x float> poison, float %263, i64 0
  %267 = shufflevector <2 x float> %266, <2 x float> poison, <2 x i32> zeroinitializer
  %268 = fadd fast <2 x float> %265, %267
  store <2 x float> %268, ptr %264, align 4, !tbaa !20
  %269 = getelementptr inbounds float, ptr %188, i64 %250
  %270 = load <2 x float>, ptr %269, align 4, !tbaa !20
  %271 = fadd fast <2 x float> %270, %267
  store <2 x float> %271, ptr %269, align 4, !tbaa !20
  %272 = icmp eq i64 %259, %229
  br i1 %272, label %477, label %246, !llvm.loop !376

273:                                              ; preds = %477, %558, %200
  %274 = icmp sgt i32 %219, 0
  br i1 %274, label %275, label %468

275:                                              ; preds = %273
  %276 = icmp eq ptr %208, null
  %277 = getelementptr inbounds [4 x i32], ptr %213, i64 0, i64 2
  %278 = getelementptr inbounds [4 x i32], ptr %213, i64 0, i64 3
  %279 = getelementptr inbounds [4 x i32], ptr %213, i64 0, i64 1
  br label %280

280:                                              ; preds = %463, %275
  %281 = phi i32 [ %464, %463 ], [ %219, %275 ]
  %282 = phi i32 [ %465, %463 ], [ %219, %275 ]
  %283 = phi i32 [ %466, %463 ], [ 0, %275 ]
  %284 = icmp sgt i32 %282, 0
  br i1 %284, label %285, label %463

285:                                              ; preds = %280
  %286 = icmp eq i32 %283, 0
  br label %287

287:                                              ; preds = %457, %285
  %288 = phi i32 [ %281, %285 ], [ %458, %457 ]
  %289 = phi i32 [ %282, %285 ], [ %459, %457 ]
  %290 = phi i32 [ %282, %285 ], [ %460, %457 ]
  %291 = phi i32 [ 0, %285 ], [ %461, %457 ]
  br i1 %276, label %303, label %292

292:                                              ; preds = %287
  %293 = mul nsw i32 %290, %283
  %294 = add nsw i32 %293, %291
  %295 = ashr i32 %294, 5
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds i32, ptr %208, i64 %296
  %298 = load i32, ptr %297, align 4, !tbaa !24
  %299 = and i32 %294, 31
  %300 = shl nuw i32 1, %299
  %301 = and i32 %298, %300
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %457

303:                                              ; preds = %292, %287
  %304 = icmp eq i32 %291, 0
  br i1 %304, label %305, label %308

305:                                              ; preds = %303
  %306 = load i32, ptr %213, align 4, !tbaa !24
  %307 = icmp eq i32 %306, -1
  br i1 %307, label %457, label %308

308:                                              ; preds = %305, %303
  %309 = add nsw i32 %290, -1
  %310 = icmp eq i32 %291, %309
  br i1 %310, label %311, label %314

311:                                              ; preds = %308
  %312 = load i32, ptr %277, align 4, !tbaa !24
  %313 = icmp eq i32 %312, -1
  br i1 %313, label %457, label %314

314:                                              ; preds = %311, %308
  br i1 %286, label %315, label %318

315:                                              ; preds = %314
  %316 = load i32, ptr %278, align 4, !tbaa !24
  %317 = icmp eq i32 %316, -1
  br i1 %317, label %457, label %318

318:                                              ; preds = %315, %314
  %319 = icmp eq i32 %283, %309
  br i1 %319, label %320, label %323

320:                                              ; preds = %318
  %321 = load i32, ptr %279, align 4, !tbaa !24
  %322 = icmp eq i32 %321, -1
  br i1 %322, label %457, label %323

323:                                              ; preds = %320, %318
  %324 = mul nsw i32 %290, %283
  %325 = add nsw i32 %324, %291
  %326 = load i32, ptr %123, align 4, !tbaa !235
  %327 = mul nsw i32 %326, %325
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds i8, ptr %211, i64 %328
  %330 = load i32, ptr %125, align 4, !tbaa !229
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds i8, ptr %329, i64 %331
  %333 = load i32, ptr %124, align 4, !tbaa !233
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds i8, ptr %329, i64 %334
  %336 = load float, ptr %329, align 4, !tbaa !20
  %337 = fsub fast float %167, %336
  %338 = getelementptr inbounds float, ptr %329, i64 1
  %339 = getelementptr inbounds float, ptr %329, i64 2
  %340 = fmul fast float %337, %337
  %341 = load <2 x float>, ptr %338, align 4, !tbaa !20
  %342 = fsub fast <2 x float> %169, %341
  %343 = fmul fast <2 x float> %342, %342
  %344 = extractelement <2 x float> %343, i64 0
  %345 = fadd fast float %344, %340
  %346 = extractelement <2 x float> %343, i64 1
  %347 = fadd fast float %345, %346
  %348 = fcmp fast ugt float %347, %165
  br i1 %348, label %457, label %349

349:                                              ; preds = %323
  br i1 %197, label %355, label %350

350:                                              ; preds = %349
  %351 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %174, ptr noundef nonnull %329, i8 noundef zeroext 1) #10
  %352 = icmp eq i8 %351, 0
  br i1 %352, label %355, label %353

353:                                              ; preds = %350
  %354 = load i32, ptr %18, align 4, !tbaa !24
  br label %457

355:                                              ; preds = %350, %349
  %356 = call fast float @llvm.sqrt.f32(float %347)
  br i1 %76, label %357, label %359

357:                                              ; preds = %355
  %358 = load float, ptr %335, align 4, !tbaa !20
  br label %359

359:                                              ; preds = %357, %355
  %360 = phi fast float [ %358, %357 ], [ 0.000000e+00, %355 ]
  %361 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef %20, ptr noundef %158, ptr noundef nonnull %329, float noundef nofpclass(nan inf) %356, ptr noundef null, ptr noundef nonnull %332, float noundef nofpclass(nan inf) %360)
  %362 = fmul fast float %361, %146
  %363 = load i32, ptr %18, align 4, !tbaa !24
  %364 = add nsw i32 %363, -1
  %365 = icmp eq i32 %291, %364
  %366 = select i1 %304, i1 true, i1 %365
  %367 = select i1 %366, float 1.250000e-01, float 6.250000e-02
  %368 = add nsw i32 %363, -1
  %369 = icmp eq i32 %283, %368
  %370 = select i1 %286, i1 true, i1 %369
  %371 = fmul fast float %367, 2.000000e+00
  %372 = select i1 %370, float %371, float %367
  %373 = mul nsw i32 %363, %283
  %374 = add nsw i32 %373, %291
  %375 = sext i32 %374 to i64
  br i1 %76, label %384, label %376

376:                                              ; preds = %359
  %377 = getelementptr inbounds float, ptr %188, i64 %375
  %378 = load float, ptr %377, align 4, !tbaa !20
  %379 = fmul fast float %378, %372
  %380 = load float, ptr %335, align 4, !tbaa !20
  %381 = fsub fast float %379, %380
  %382 = fmul fast float %381, %362
  %383 = fadd fast float %382, %380
  store float %383, ptr %335, align 4, !tbaa !20
  br label %457

384:                                              ; preds = %359
  %385 = getelementptr inbounds [3 x float], ptr %182, i64 %375
  %386 = load <2 x float>, ptr %385, align 4, !tbaa !20
  %387 = insertelement <2 x float> poison, float %372, i64 0
  %388 = shufflevector <2 x float> %387, <2 x float> poison, <2 x i32> zeroinitializer
  %389 = fmul fast <2 x float> %386, %388
  store <2 x float> %389, ptr %385, align 4, !tbaa !20
  %390 = getelementptr inbounds float, ptr %385, i64 2
  %391 = load float, ptr %390, align 4, !tbaa !20
  %392 = fmul fast float %391, %372
  store float %392, ptr %390, align 4, !tbaa !20
  %393 = load float, ptr %329, align 4, !tbaa !20
  %394 = extractelement <2 x float> %389, i64 0
  %395 = fsub fast float %394, %393
  %396 = load float, ptr %338, align 4, !tbaa !20
  %397 = extractelement <2 x float> %389, i64 1
  %398 = fsub fast float %397, %396
  %399 = load float, ptr %339, align 4, !tbaa !20
  %400 = fsub fast float %392, %399
  %401 = fmul fast float %395, %362
  %402 = fmul fast float %398, %362
  %403 = fmul fast float %400, %362
  %404 = fadd fast float %401, %393
  %405 = fadd fast float %402, %396
  %406 = fadd fast float %403, %399
  %407 = load i32, ptr %84, align 8, !tbaa !113
  %408 = and i32 %407, 8
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %410, label %424

410:                                              ; preds = %384
  %411 = load ptr, ptr %47, align 8, !tbaa !22
  %412 = getelementptr inbounds %struct.StrokeCache, ptr %411, i64 0, i32 2
  %413 = load i32, ptr %412, align 8, !tbaa !160
  %414 = and i32 %413, 1
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %421, label %416

416:                                              ; preds = %410
  %417 = call fast float @llvm.fabs.f32(float %393)
  %418 = getelementptr inbounds %struct.StrokeCache, ptr %411, i64 0, i32 3, i64 0
  %419 = load float, ptr %418, align 4, !tbaa !20
  %420 = fcmp fast ugt float %417, %419
  br i1 %420, label %421, label %422

421:                                              ; preds = %416, %410
  br label %422

422:                                              ; preds = %421, %416
  %423 = phi float [ %404, %421 ], [ 0.000000e+00, %416 ]
  store float %423, ptr %329, align 4, !tbaa !20
  br label %424

424:                                              ; preds = %422, %384
  %425 = and i32 %407, 16
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %427, label %441

427:                                              ; preds = %424
  %428 = load ptr, ptr %47, align 8, !tbaa !22
  %429 = getelementptr inbounds %struct.StrokeCache, ptr %428, i64 0, i32 2
  %430 = load i32, ptr %429, align 8, !tbaa !160
  %431 = and i32 %430, 2
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %438, label %433

433:                                              ; preds = %427
  %434 = call fast float @llvm.fabs.f32(float %396)
  %435 = getelementptr inbounds %struct.StrokeCache, ptr %428, i64 0, i32 3, i64 1
  %436 = load float, ptr %435, align 4, !tbaa !20
  %437 = fcmp fast ugt float %434, %436
  br i1 %437, label %438, label %439

438:                                              ; preds = %433, %427
  br label %439

439:                                              ; preds = %438, %433
  %440 = phi float [ %405, %438 ], [ 0.000000e+00, %433 ]
  store float %440, ptr %338, align 4, !tbaa !20
  br label %441

441:                                              ; preds = %439, %424
  %442 = and i32 %407, 32
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %444, label %457

444:                                              ; preds = %441
  %445 = load ptr, ptr %47, align 8, !tbaa !22
  %446 = getelementptr inbounds %struct.StrokeCache, ptr %445, i64 0, i32 2
  %447 = load i32, ptr %446, align 8, !tbaa !160
  %448 = and i32 %447, 4
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %456, label %450

450:                                              ; preds = %444
  %451 = call fast float @llvm.fabs.f32(float %399)
  %452 = getelementptr inbounds %struct.StrokeCache, ptr %445, i64 0, i32 3, i64 2
  %453 = load float, ptr %452, align 4, !tbaa !20
  %454 = fcmp fast ugt float %451, %453
  br i1 %454, label %456, label %455

455:                                              ; preds = %450
  store float 0.000000e+00, ptr %339, align 4, !tbaa !20
  br label %457

456:                                              ; preds = %450, %444
  store float %406, ptr %339, align 4, !tbaa !20
  br label %457

457:                                              ; preds = %456, %455, %441, %376, %353, %323, %320, %315, %311, %305, %292
  %458 = phi i32 [ %288, %305 ], [ %288, %311 ], [ %288, %315 ], [ %288, %320 ], [ %363, %376 ], [ %288, %292 ], [ %363, %441 ], [ %363, %455 ], [ %363, %456 ], [ %354, %353 ], [ %288, %323 ]
  %459 = phi i32 [ %289, %305 ], [ %289, %311 ], [ %289, %315 ], [ %289, %320 ], [ %363, %376 ], [ %289, %292 ], [ %363, %441 ], [ %363, %455 ], [ %363, %456 ], [ %354, %353 ], [ %289, %323 ]
  %460 = phi i32 [ %290, %305 ], [ %290, %311 ], [ %290, %315 ], [ %290, %320 ], [ %363, %376 ], [ %290, %292 ], [ %363, %441 ], [ %363, %455 ], [ %363, %456 ], [ %354, %353 ], [ %290, %323 ]
  %461 = add nuw nsw i32 %291, 1
  %462 = icmp slt i32 %461, %460
  br i1 %462, label %287, label %463, !llvm.loop !377

463:                                              ; preds = %457, %280
  %464 = phi i32 [ %281, %280 ], [ %458, %457 ]
  %465 = phi i32 [ %282, %280 ], [ %459, %457 ]
  %466 = add nuw nsw i32 %283, 1
  %467 = icmp slt i32 %466, %465
  br i1 %467, label %280, label %468, !llvm.loop !378

468:                                              ; preds = %463, %273
  %469 = phi i32 [ %219, %273 ], [ %464, %463 ]
  %470 = add nuw nsw i64 %202, 1
  %471 = load i32, ptr %17, align 4, !tbaa !24
  %472 = sext i32 %471 to i64
  %473 = icmp slt i64 %470, %472
  br i1 %473, label %200, label %474, !llvm.loop !380

474:                                              ; preds = %468, %154
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %16) #10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %15) #10
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %14) #10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #10
  %475 = add nuw nsw i64 %155, 1
  %476 = icmp eq i64 %475, %129
  br i1 %476, label %151, label %154, !llvm.loop !381

477:                                              ; preds = %246
  %478 = add nuw nsw i64 %231, 1
  %479 = icmp eq i64 %478, %229
  br i1 %479, label %273, label %230, !llvm.loop !382

480:                                              ; preds = %221, %558
  %481 = phi i64 [ %559, %558 ], [ 0, %221 ]
  %482 = mul nuw nsw i64 %481, %227
  %483 = mul nsw i64 %482, %228
  %484 = getelementptr inbounds i8, ptr %211, i64 %483
  %485 = add nuw nsw i64 %482, %227
  %486 = mul nsw i64 %485, %228
  %487 = getelementptr inbounds i8, ptr %211, i64 %486
  %488 = load float, ptr %484, align 4, !tbaa !20
  %489 = load float, ptr %487, align 4, !tbaa !20
  %490 = fadd fast float %489, %488
  store float %490, ptr %185, align 4, !tbaa !20
  %491 = getelementptr inbounds float, ptr %484, i64 1
  %492 = load float, ptr %491, align 4, !tbaa !20
  %493 = getelementptr inbounds float, ptr %487, i64 1
  %494 = load float, ptr %493, align 4, !tbaa !20
  %495 = fadd fast float %494, %492
  store float %495, ptr %195, align 4, !tbaa !20
  %496 = getelementptr inbounds float, ptr %484, i64 2
  %497 = load float, ptr %496, align 4, !tbaa !20
  %498 = getelementptr inbounds float, ptr %487, i64 2
  %499 = load float, ptr %498, align 4, !tbaa !20
  %500 = fadd fast float %499, %497
  store float %500, ptr %196, align 4, !tbaa !20
  %501 = load i32, ptr %123, align 4
  %502 = sext i32 %501 to i64
  br label %503

503:                                              ; preds = %503, %480
  %504 = phi i64 [ 0, %480 ], [ %509, %503 ]
  %505 = add nuw nsw i64 %504, %482
  %506 = add nuw nsw i64 %505, 1
  %507 = add nuw nsw i64 %505, %227
  %508 = add nuw nsw i64 %507, 1
  %509 = add nuw nsw i64 %504, 1
  %510 = getelementptr inbounds [3 x float], ptr %185, i64 %509
  %511 = mul nsw i64 %506, %502
  %512 = getelementptr inbounds i8, ptr %211, i64 %511
  %513 = mul nsw i64 %508, %502
  %514 = getelementptr inbounds i8, ptr %211, i64 %513
  %515 = load float, ptr %512, align 4, !tbaa !20
  %516 = load float, ptr %514, align 4, !tbaa !20
  %517 = fadd fast float %516, %515
  store float %517, ptr %510, align 4, !tbaa !20
  %518 = getelementptr inbounds float, ptr %512, i64 1
  %519 = load float, ptr %518, align 4, !tbaa !20
  %520 = getelementptr inbounds float, ptr %514, i64 1
  %521 = load float, ptr %520, align 4, !tbaa !20
  %522 = getelementptr inbounds float, ptr %510, i64 1
  %523 = getelementptr inbounds float, ptr %512, i64 2
  %524 = getelementptr inbounds float, ptr %514, i64 2
  %525 = getelementptr inbounds float, ptr %510, i64 2
  %526 = getelementptr inbounds [3 x float], ptr %185, i64 %504
  %527 = load float, ptr %526, align 4, !tbaa !20
  %528 = fadd fast float %527, %517
  %529 = getelementptr inbounds float, ptr %526, i64 1
  %530 = getelementptr inbounds [3 x float], ptr %182, i64 %505
  %531 = getelementptr inbounds [3 x float], ptr %182, i64 %506, i64 1
  %532 = getelementptr inbounds [3 x float], ptr %182, i64 %507
  %533 = insertelement <4 x float> poison, float %528, i64 0
  %534 = getelementptr inbounds [3 x float], ptr %182, i64 %508, i64 1
  %535 = fadd fast float %521, %519
  store float %535, ptr %522, align 4, !tbaa !20
  %536 = load float, ptr %523, align 4, !tbaa !20
  %537 = load float, ptr %524, align 4, !tbaa !20
  %538 = fadd fast float %537, %536
  store float %538, ptr %525, align 4, !tbaa !20
  %539 = load <2 x float>, ptr %529, align 4, !tbaa !20
  %540 = insertelement <2 x float> poison, float %535, i64 0
  %541 = insertelement <2 x float> %540, float %538, i64 1
  %542 = fadd fast <2 x float> %539, %541
  %543 = load <4 x float>, ptr %530, align 4, !tbaa !20
  %544 = shufflevector <2 x float> %542, <2 x float> poison, <4 x i32> <i32 poison, i32 0, i32 1, i32 poison>
  %545 = insertelement <4 x float> %544, float %528, i64 0
  %546 = shufflevector <4 x float> %545, <4 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 0>
  %547 = fadd fast <4 x float> %543, %546
  store <4 x float> %547, ptr %530, align 4, !tbaa !20
  %548 = load <2 x float>, ptr %531, align 4, !tbaa !20
  %549 = fadd fast <2 x float> %548, %542
  store <2 x float> %549, ptr %531, align 4, !tbaa !20
  %550 = load <4 x float>, ptr %532, align 4, !tbaa !20
  %551 = shufflevector <2 x float> %542, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %552 = shufflevector <4 x float> %533, <4 x float> %551, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>
  %553 = shufflevector <4 x float> %552, <4 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 0>
  %554 = fadd fast <4 x float> %550, %553
  store <4 x float> %554, ptr %532, align 4, !tbaa !20
  %555 = load <2 x float>, ptr %534, align 4, !tbaa !20
  %556 = fadd fast <2 x float> %555, %542
  store <2 x float> %556, ptr %534, align 4, !tbaa !20
  %557 = icmp eq i64 %509, %229
  br i1 %557, label %558, label %503, !llvm.loop !376

558:                                              ; preds = %503
  %559 = add nuw nsw i64 %481, 1
  %560 = icmp eq i64 %559, %229
  br i1 %560, label %273, label %480, !llvm.loop !382

561:                                              ; preds = %139, %1070
  %562 = phi i64 [ 0, %139 ], [ %1071, %1070 ]
  %563 = getelementptr inbounds ptr, ptr %2, i64 %562
  %564 = load ptr, ptr %563, align 8, !tbaa !31
  %565 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %12) #10
  %566 = load ptr, ptr %47, align 8, !tbaa !22
  %567 = getelementptr inbounds %struct.StrokeCache, ptr %566, i64 0, i32 22
  %568 = load ptr, ptr %567, align 8, !tbaa !172
  %569 = getelementptr inbounds %struct.ViewContext, ptr %568, i64 0, i32 5
  %570 = load ptr, ptr %569, align 8, !tbaa !174
  %571 = getelementptr inbounds %struct.StrokeCache, ptr %566, i64 0, i32 12
  %572 = load float, ptr %571, align 4, !tbaa !199
  %573 = getelementptr inbounds %struct.StrokeCache, ptr %566, i64 0, i32 14
  %574 = load float, ptr %573, align 4, !tbaa !20
  %575 = getelementptr inbounds %struct.StrokeCache, ptr %566, i64 0, i32 14, i64 1
  %576 = load <2 x float>, ptr %575, align 4, !tbaa !20
  %577 = getelementptr inbounds %struct.RegionView3D, ptr %570, i64 0, i32 32
  %578 = load i16, ptr %577, align 2, !tbaa !293
  %579 = and i16 %578, 4
  %580 = icmp eq i16 %579, 0
  %581 = select i1 %580, ptr null, ptr %570
  %582 = load ptr, ptr %21, align 8, !tbaa !21
  call void @pbvh_vertex_iter_init(ptr noundef %582, ptr noundef %564, ptr noundef nonnull %12, i32 noundef 1) #10
  store i32 0, ptr %85, align 4, !tbaa !210
  store i32 0, ptr %12, align 8, !tbaa !214
  %583 = load i32, ptr %86, align 8, !tbaa !215
  %584 = icmp sgt i32 %583, 0
  br i1 %584, label %585, label %1070

585:                                              ; preds = %561
  %586 = icmp eq ptr %581, null
  br label %587

587:                                              ; preds = %1065, %585
  %588 = phi i32 [ %583, %585 ], [ %1066, %1065 ]
  %589 = phi i32 [ 0, %585 ], [ %1068, %1065 ]
  %590 = load ptr, ptr %87, align 8, !tbaa !216
  %591 = icmp eq ptr %590, null
  br i1 %591, label %605, label %592

592:                                              ; preds = %587
  %593 = load i32, ptr %88, align 4, !tbaa !221
  store i32 %593, ptr %89, align 4, !tbaa !218
  store i32 %593, ptr %90, align 8, !tbaa !219
  %594 = load ptr, ptr %91, align 8, !tbaa !222
  %595 = sext i32 %589 to i64
  %596 = getelementptr inbounds i32, ptr %594, i64 %595
  %597 = load i32, ptr %596, align 4, !tbaa !24
  %598 = sext i32 %597 to i64
  %599 = getelementptr inbounds ptr, ptr %590, i64 %598
  %600 = load ptr, ptr %599, align 8, !tbaa !31
  store ptr %600, ptr %92, align 8, !tbaa !223
  %601 = load ptr, ptr %93, align 8, !tbaa !224
  %602 = getelementptr inbounds ptr, ptr %601, i64 %598
  %603 = load ptr, ptr %602, align 8, !tbaa !31
  store ptr %603, ptr %94, align 8, !tbaa !225
  store i32 0, ptr %96, align 8, !tbaa !220
  %604 = icmp sgt i32 %593, 0
  br i1 %604, label %607, label %1065

605:                                              ; preds = %587
  %606 = load i32, ptr %95, align 8, !tbaa !217
  store i32 %606, ptr %89, align 4, !tbaa !218
  store i32 1, ptr %90, align 8, !tbaa !219
  store i32 0, ptr %96, align 8, !tbaa !220
  br label %607

607:                                              ; preds = %605, %592
  %608 = phi i32 [ %593, %592 ], [ 1, %605 ]
  %609 = phi i32 [ %593, %592 ], [ %606, %605 ]
  br label %610

610:                                              ; preds = %607, %1056
  %611 = phi i32 [ %1057, %1056 ], [ %608, %607 ]
  %612 = phi i32 [ %1060, %1056 ], [ 0, %607 ]
  %613 = phi i32 [ %1059, %1056 ], [ %609, %607 ]
  store i32 0, ptr %97, align 4, !tbaa !226
  %614 = icmp sgt i32 %613, 0
  br i1 %614, label %615, label %1056

615:                                              ; preds = %610, %1046
  %616 = phi i32 [ %1048, %1046 ], [ 0, %610 ]
  %617 = load ptr, ptr %92, align 8, !tbaa !223
  %618 = icmp eq ptr %617, null
  br i1 %618, label %654, label %619

619:                                              ; preds = %615
  store ptr %617, ptr %99, align 8, !tbaa !227
  %620 = load ptr, ptr %98, align 8, !tbaa !228
  %621 = getelementptr i8, ptr %620, i64 20
  %622 = load i32, ptr %621, align 4, !tbaa !229
  %623 = sext i32 %622 to i64
  %624 = getelementptr inbounds i8, ptr %617, i64 %623
  store ptr %624, ptr %100, align 8, !tbaa !231
  %625 = getelementptr inbounds %struct.CCGKey, ptr %620, i64 0, i32 9
  %626 = load i32, ptr %625, align 4, !tbaa !232
  %627 = icmp eq i32 %626, 0
  br i1 %627, label %633, label %628

628:                                              ; preds = %619
  %629 = getelementptr i8, ptr %620, i64 24
  %630 = load i32, ptr %629, align 4, !tbaa !233
  %631 = sext i32 %630 to i64
  %632 = getelementptr inbounds i8, ptr %617, i64 %631
  br label %633

633:                                              ; preds = %628, %619
  %634 = phi ptr [ %632, %628 ], [ null, %619 ]
  store ptr %634, ptr %101, align 8, !tbaa !234
  %635 = getelementptr i8, ptr %620, i64 4
  %636 = load i32, ptr %635, align 4, !tbaa !235
  %637 = sext i32 %636 to i64
  %638 = getelementptr inbounds i8, ptr %617, i64 %637
  store ptr %638, ptr %92, align 8, !tbaa !223
  %639 = load ptr, ptr %94, align 8, !tbaa !225
  %640 = icmp eq ptr %639, null
  br i1 %640, label %697, label %641

641:                                              ; preds = %633
  %642 = load i32, ptr %96, align 8, !tbaa !220
  %643 = load i32, ptr %88, align 4, !tbaa !221
  %644 = mul nsw i32 %643, %642
  %645 = add nsw i32 %644, %616
  %646 = ashr i32 %645, 5
  %647 = sext i32 %646 to i64
  %648 = getelementptr inbounds i32, ptr %639, i64 %647
  %649 = load i32, ptr %648, align 4, !tbaa !24
  %650 = and i32 %645, 31
  %651 = shl nuw i32 1, %650
  %652 = and i32 %651, %649
  %653 = icmp eq i32 %652, 0
  br i1 %653, label %697, label %1046

654:                                              ; preds = %615
  %655 = load ptr, ptr %102, align 8, !tbaa !236
  %656 = icmp eq ptr %655, null
  br i1 %656, label %674, label %657

657:                                              ; preds = %654
  %658 = load ptr, ptr %103, align 8, !tbaa !237
  %659 = sext i32 %616 to i64
  %660 = getelementptr inbounds i32, ptr %658, i64 %659
  %661 = load i32, ptr %660, align 4, !tbaa !24
  %662 = sext i32 %661 to i64
  %663 = getelementptr inbounds %struct.MVert, ptr %655, i64 %662
  store ptr %663, ptr %104, align 8, !tbaa !238
  %664 = getelementptr inbounds %struct.MVert, ptr %655, i64 %662, i32 2
  %665 = load i8, ptr %664, align 2, !tbaa !239
  %666 = and i8 %665, 16
  %667 = icmp eq i8 %666, 0
  br i1 %667, label %668, label %1046

668:                                              ; preds = %657
  store ptr %663, ptr %99, align 8, !tbaa !227
  %669 = getelementptr inbounds %struct.MVert, ptr %655, i64 %662, i32 1
  store ptr %669, ptr %105, align 8, !tbaa !241
  %670 = load ptr, ptr %106, align 8, !tbaa !242
  %671 = icmp eq ptr %670, null
  br i1 %671, label %697, label %672

672:                                              ; preds = %668
  %673 = getelementptr inbounds float, ptr %670, i64 %662
  br label %694

674:                                              ; preds = %654
  %675 = load ptr, ptr %107, align 8, !tbaa !243
  %676 = icmp eq ptr %675, null
  %677 = load ptr, ptr %111, align 8
  %678 = select i1 %676, ptr %677, ptr %675
  %679 = select i1 %676, ptr %110, ptr %108
  %680 = getelementptr i8, ptr %678, i64 8
  %681 = load ptr, ptr %680, align 8, !tbaa !244
  store ptr %681, ptr %109, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %679) #10
  %682 = load ptr, ptr %109, align 8, !tbaa !246
  %683 = getelementptr i8, ptr %682, i64 13
  %684 = load i8, ptr %683, align 1, !tbaa !247
  %685 = and i8 %684, 2
  %686 = icmp eq i8 %685, 0
  br i1 %686, label %687, label %1046

687:                                              ; preds = %674
  %688 = getelementptr inbounds %struct.BMVert, ptr %682, i64 0, i32 2
  store ptr %688, ptr %99, align 8, !tbaa !227
  %689 = getelementptr inbounds %struct.BMVert, ptr %682, i64 0, i32 3
  store ptr %689, ptr %100, align 8, !tbaa !231
  %690 = load ptr, ptr %682, align 8, !tbaa !249
  %691 = load i32, ptr %112, align 8, !tbaa !251
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds i8, ptr %690, i64 %692
  br label %694

694:                                              ; preds = %687, %672
  %695 = phi ptr [ %693, %687 ], [ %673, %672 ]
  %696 = phi ptr [ %688, %687 ], [ %663, %672 ]
  store ptr %695, ptr %101, align 8, !tbaa !234
  br label %697

697:                                              ; preds = %694, %668, %641, %633
  %698 = phi ptr [ %663, %668 ], [ %617, %633 ], [ %617, %641 ], [ %696, %694 ]
  %699 = load float, ptr %698, align 4, !tbaa !20
  %700 = fsub fast float %574, %699
  %701 = getelementptr inbounds float, ptr %698, i64 1
  %702 = fmul fast float %700, %700
  %703 = load <2 x float>, ptr %701, align 4, !tbaa !20
  %704 = fsub fast <2 x float> %576, %703
  %705 = fmul fast <2 x float> %704, %704
  %706 = extractelement <2 x float> %705, i64 0
  %707 = fadd fast float %706, %702
  %708 = extractelement <2 x float> %705, i64 1
  %709 = fadd fast float %707, %708
  %710 = fcmp fast ugt float %709, %572
  br i1 %710, label %1046, label %711

711:                                              ; preds = %697
  br i1 %586, label %717, label %712

712:                                              ; preds = %711
  %713 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %581, ptr noundef nonnull %698, i8 noundef zeroext 1) #10
  %714 = icmp eq i8 %713, 0
  br i1 %714, label %715, label %1046

715:                                              ; preds = %712
  %716 = load ptr, ptr %99, align 8, !tbaa !227
  br label %717

717:                                              ; preds = %715, %711
  %718 = phi ptr [ %716, %715 ], [ %698, %711 ]
  %719 = call fast float @llvm.sqrt.f32(float %709)
  %720 = load ptr, ptr %105, align 8, !tbaa !241
  %721 = load ptr, ptr %100, align 8, !tbaa !231
  %722 = load ptr, ptr %101, align 8
  %723 = icmp ne ptr %722, null
  %724 = select i1 %76, i1 %723, i1 false
  br i1 %724, label %802, label %725

725:                                              ; preds = %717
  %726 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef %20, ptr noundef %565, ptr noundef %718, float noundef nofpclass(nan inf) %719, ptr noundef %720, ptr noundef %721, float noundef nofpclass(nan inf) 0.000000e+00)
  %727 = fmul fast float %726, %142
  br i1 %76, label %806, label %728

728:                                              ; preds = %725
  %729 = load ptr, ptr %103, align 8, !tbaa !237
  %730 = load i32, ptr %85, align 4, !tbaa !210
  %731 = sext i32 %730 to i64
  %732 = getelementptr inbounds i32, ptr %729, i64 %731
  %733 = load i32, ptr %732, align 4, !tbaa !24
  %734 = load ptr, ptr %113, align 8, !tbaa !383
  %735 = zext i32 %733 to i64
  %736 = load ptr, ptr %114, align 8, !tbaa !374
  %737 = getelementptr inbounds %struct.MeshElemMap, ptr %736, i64 %735, i32 1
  %738 = load i32, ptr %737, align 8, !tbaa !384
  %739 = icmp sgt i32 %738, 0
  br i1 %739, label %740, label %783

740:                                              ; preds = %728, %772
  %741 = phi i64 [ %775, %772 ], [ 0, %728 ]
  %742 = phi ptr [ %776, %772 ], [ %736, %728 ]
  %743 = phi i32 [ %774, %772 ], [ 0, %728 ]
  %744 = phi float [ %773, %772 ], [ 0.000000e+00, %728 ]
  %745 = getelementptr inbounds %struct.MeshElemMap, ptr %742, i64 %735
  %746 = load ptr, ptr %115, align 8, !tbaa !386
  %747 = load ptr, ptr %745, align 8, !tbaa !387
  %748 = getelementptr inbounds i32, ptr %747, i64 %741
  %749 = load i32, ptr %748, align 4, !tbaa !24
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds %struct.MPoly, ptr %746, i64 %750
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %11) #10
  %752 = load ptr, ptr %116, align 8, !tbaa !388
  %753 = call i32 @poly_get_adj_loops_from_vert(ptr noundef nonnull %11, ptr noundef %751, ptr noundef %752, i32 noundef %733) #10
  %754 = icmp eq i32 %753, -1
  br i1 %754, label %772, label %755

755:                                              ; preds = %740
  %756 = load i32, ptr %11, align 4, !tbaa !24
  %757 = zext i32 %756 to i64
  %758 = getelementptr inbounds float, ptr %734, i64 %757
  %759 = load float, ptr %758, align 4, !tbaa !20
  %760 = fadd fast float %759, %744
  %761 = load i32, ptr %117, align 4, !tbaa !24
  %762 = zext i32 %761 to i64
  %763 = getelementptr inbounds float, ptr %734, i64 %762
  %764 = load float, ptr %763, align 4, !tbaa !20
  %765 = fadd fast float %760, %764
  %766 = load i32, ptr %118, align 4, !tbaa !24
  %767 = zext i32 %766 to i64
  %768 = getelementptr inbounds float, ptr %734, i64 %767
  %769 = load float, ptr %768, align 4, !tbaa !20
  %770 = fadd fast float %765, %769
  %771 = add i32 %743, 3
  br label %772

772:                                              ; preds = %755, %740
  %773 = phi float [ %744, %740 ], [ %770, %755 ]
  %774 = phi i32 [ %743, %740 ], [ %771, %755 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %11) #10
  %775 = add nuw nsw i64 %741, 1
  %776 = load ptr, ptr %114, align 8, !tbaa !374
  %777 = getelementptr inbounds %struct.MeshElemMap, ptr %776, i64 %735, i32 1
  %778 = load i32, ptr %777, align 8, !tbaa !384
  %779 = sext i32 %778 to i64
  %780 = icmp slt i64 %775, %779
  br i1 %780, label %740, label %781, !llvm.loop !389

781:                                              ; preds = %772
  %782 = icmp sgt i32 %774, 0
  br i1 %782, label %786, label %783

783:                                              ; preds = %781, %728
  %784 = getelementptr inbounds float, ptr %734, i64 %735
  %785 = load float, ptr %784, align 4, !tbaa !20
  br label %789

786:                                              ; preds = %781
  %787 = sitofp i32 %774 to float
  %788 = fdiv fast float %773, %787
  br label %789

789:                                              ; preds = %786, %783
  %790 = phi float [ %788, %786 ], [ %785, %783 ]
  %791 = load ptr, ptr %101, align 8, !tbaa !234
  %792 = load float, ptr %791, align 4, !tbaa !20
  %793 = fsub fast float %790, %792
  %794 = fmul fast float %727, %142
  %795 = fmul fast float %794, %793
  %796 = fadd fast float %795, %792
  store float %796, ptr %791, align 4, !tbaa !20
  %797 = fcmp fast olt float %796, 0.000000e+00
  br i1 %797, label %801, label %798

798:                                              ; preds = %789
  %799 = fcmp fast ogt float %796, 1.000000e+00
  br i1 %799, label %800, label %1039

800:                                              ; preds = %798
  store float 1.000000e+00, ptr %791, align 4, !tbaa !20
  br label %1039

801:                                              ; preds = %789
  store float 0.000000e+00, ptr %791, align 4, !tbaa !20
  br label %1039

802:                                              ; preds = %717
  %803 = load float, ptr %722, align 4, !tbaa !20
  %804 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef %20, ptr noundef %565, ptr noundef %718, float noundef nofpclass(nan inf) %719, ptr noundef %720, ptr noundef %721, float noundef nofpclass(nan inf) %803)
  %805 = fmul fast float %804, %142
  br label %806

806:                                              ; preds = %802, %725
  %807 = phi float [ %805, %802 ], [ %727, %725 ]
  %808 = load ptr, ptr %103, align 8, !tbaa !237
  %809 = load i32, ptr %85, align 4, !tbaa !210
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds i32, ptr %808, i64 %810
  %812 = load i32, ptr %811, align 4, !tbaa !24
  %813 = load ptr, ptr %114, align 8, !tbaa !374
  %814 = zext i32 %812 to i64
  %815 = getelementptr inbounds %struct.MeshElemMap, ptr %813, i64 %814
  %816 = load ptr, ptr %119, align 8, !tbaa !183
  %817 = load ptr, ptr %120, align 8, !tbaa !182
  %818 = getelementptr inbounds %struct.MeshElemMap, ptr %813, i64 %814, i32 1
  %819 = load i32, ptr %818, align 8, !tbaa !384
  %820 = icmp sgt i32 %819, 1
  br i1 %820, label %821, label %960

821:                                              ; preds = %806
  %822 = icmp eq ptr %817, null
  br label %823

823:                                              ; preds = %942, %821
  %824 = phi float [ 0.000000e+00, %821 ], [ %943, %942 ]
  %825 = phi i64 [ 0, %821 ], [ %946, %942 ]
  %826 = phi i32 [ 0, %821 ], [ %944, %942 ]
  %827 = phi <2 x float> [ zeroinitializer, %821 ], [ %945, %942 ]
  %828 = load ptr, ptr %115, align 8, !tbaa !386
  %829 = load ptr, ptr %815, align 8, !tbaa !387
  %830 = getelementptr inbounds i32, ptr %829, i64 %825
  %831 = load i32, ptr %830, align 4, !tbaa !24
  %832 = sext i32 %831 to i64
  %833 = getelementptr inbounds %struct.MPoly, ptr %828, i64 %832
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %10) #10
  %834 = load ptr, ptr %116, align 8, !tbaa !388
  %835 = call i32 @poly_get_adj_loops_from_vert(ptr noundef nonnull %10, ptr noundef %833, ptr noundef %834, i32 noundef %812) #10
  %836 = icmp eq i32 %835, -1
  br i1 %836, label %942, label %837

837:                                              ; preds = %823
  %838 = load i32, ptr %818, align 8, !tbaa !384
  %839 = icmp eq i32 %838, 2
  br i1 %839, label %887, label %840

840:                                              ; preds = %837
  %841 = load i32, ptr %10, align 4, !tbaa !24
  %842 = zext i32 %841 to i64
  %843 = load i32, ptr %121, align 4, !tbaa !24
  %844 = zext i32 %843 to i64
  %845 = load i32, ptr %122, align 4, !tbaa !24
  %846 = zext i32 %845 to i64
  br i1 %822, label %867, label %847

847:                                              ; preds = %840
  %848 = getelementptr inbounds [3 x float], ptr %817, i64 %842
  %849 = getelementptr inbounds float, ptr %848, i64 2
  %850 = load float, ptr %849, align 4, !tbaa !20
  %851 = fadd fast float %850, %824
  %852 = getelementptr inbounds [3 x float], ptr %817, i64 %844
  %853 = getelementptr inbounds float, ptr %852, i64 2
  %854 = load float, ptr %853, align 4, !tbaa !20
  %855 = fadd fast float %851, %854
  %856 = getelementptr inbounds [3 x float], ptr %817, i64 %846
  %857 = load <2 x float>, ptr %848, align 4, !tbaa !20
  %858 = fadd fast <2 x float> %857, %827
  %859 = load <2 x float>, ptr %852, align 4, !tbaa !20
  %860 = fadd fast <2 x float> %858, %859
  %861 = load <2 x float>, ptr %856, align 4, !tbaa !20
  %862 = fadd fast <2 x float> %860, %861
  %863 = getelementptr inbounds float, ptr %856, i64 2
  %864 = load float, ptr %863, align 4, !tbaa !20
  %865 = fadd fast float %855, %864
  %866 = add i32 %826, 3
  br label %942

867:                                              ; preds = %840
  %868 = getelementptr inbounds %struct.MVert, ptr %816, i64 %842
  %869 = getelementptr inbounds float, ptr %868, i64 2
  %870 = load float, ptr %869, align 4, !tbaa !20
  %871 = fadd fast float %870, %824
  %872 = getelementptr inbounds %struct.MVert, ptr %816, i64 %844
  %873 = getelementptr inbounds float, ptr %872, i64 2
  %874 = load float, ptr %873, align 4, !tbaa !20
  %875 = fadd fast float %871, %874
  %876 = getelementptr inbounds %struct.MVert, ptr %816, i64 %846
  %877 = load <2 x float>, ptr %868, align 4, !tbaa !20
  %878 = fadd fast <2 x float> %877, %827
  %879 = load <2 x float>, ptr %872, align 4, !tbaa !20
  %880 = fadd fast <2 x float> %878, %879
  %881 = load <2 x float>, ptr %876, align 4, !tbaa !20
  %882 = fadd fast <2 x float> %880, %881
  %883 = getelementptr inbounds float, ptr %876, i64 2
  %884 = load float, ptr %883, align 4, !tbaa !20
  %885 = fadd fast float %875, %884
  %886 = add i32 %826, 3
  br label %942

887:                                              ; preds = %837
  %888 = load ptr, ptr %114, align 8, !tbaa !374
  %889 = load i32, ptr %10, align 4, !tbaa !24
  %890 = zext i32 %889 to i64
  %891 = getelementptr inbounds %struct.MeshElemMap, ptr %888, i64 %890, i32 1
  %892 = load i32, ptr %891, align 8, !tbaa !384
  %893 = icmp slt i32 %892, 3
  br i1 %893, label %894, label %904

894:                                              ; preds = %887
  %895 = getelementptr inbounds [3 x float], ptr %817, i64 %890
  %896 = getelementptr inbounds %struct.MVert, ptr %816, i64 %890
  %897 = select i1 %822, ptr %896, ptr %895
  %898 = load <2 x float>, ptr %897, align 4, !tbaa !20
  %899 = fadd fast <2 x float> %898, %827
  %900 = getelementptr inbounds float, ptr %897, i64 2
  %901 = load float, ptr %900, align 4, !tbaa !20
  %902 = fadd fast float %901, %824
  %903 = add nsw i32 %826, 1
  br label %904

904:                                              ; preds = %894, %887
  %905 = phi float [ %902, %894 ], [ %824, %887 ]
  %906 = phi i32 [ %903, %894 ], [ %826, %887 ]
  %907 = phi <2 x float> [ %899, %894 ], [ %827, %887 ]
  %908 = load i32, ptr %121, align 4, !tbaa !24
  %909 = zext i32 %908 to i64
  %910 = getelementptr inbounds %struct.MeshElemMap, ptr %888, i64 %909, i32 1
  %911 = load i32, ptr %910, align 8, !tbaa !384
  %912 = icmp slt i32 %911, 3
  br i1 %912, label %913, label %923

913:                                              ; preds = %904
  %914 = getelementptr inbounds [3 x float], ptr %817, i64 %909
  %915 = getelementptr inbounds %struct.MVert, ptr %816, i64 %909
  %916 = select i1 %822, ptr %915, ptr %914
  %917 = load <2 x float>, ptr %916, align 4, !tbaa !20
  %918 = fadd fast <2 x float> %917, %907
  %919 = getelementptr inbounds float, ptr %916, i64 2
  %920 = load float, ptr %919, align 4, !tbaa !20
  %921 = fadd fast float %920, %905
  %922 = add nsw i32 %906, 1
  br label %923

923:                                              ; preds = %913, %904
  %924 = phi float [ %921, %913 ], [ %905, %904 ]
  %925 = phi i32 [ %922, %913 ], [ %906, %904 ]
  %926 = phi <2 x float> [ %918, %913 ], [ %907, %904 ]
  %927 = load i32, ptr %122, align 4, !tbaa !24
  %928 = zext i32 %927 to i64
  %929 = getelementptr inbounds %struct.MeshElemMap, ptr %888, i64 %928, i32 1
  %930 = load i32, ptr %929, align 8, !tbaa !384
  %931 = icmp slt i32 %930, 3
  br i1 %931, label %932, label %942

932:                                              ; preds = %923
  %933 = getelementptr inbounds [3 x float], ptr %817, i64 %928
  %934 = getelementptr inbounds %struct.MVert, ptr %816, i64 %928
  %935 = select i1 %822, ptr %934, ptr %933
  %936 = load <2 x float>, ptr %935, align 4, !tbaa !20
  %937 = fadd fast <2 x float> %936, %926
  %938 = getelementptr inbounds float, ptr %935, i64 2
  %939 = load float, ptr %938, align 4, !tbaa !20
  %940 = fadd fast float %939, %924
  %941 = add nsw i32 %925, 1
  br label %942

942:                                              ; preds = %932, %923, %867, %847, %823
  %943 = phi float [ %824, %823 ], [ %940, %932 ], [ %924, %923 ], [ %885, %867 ], [ %865, %847 ]
  %944 = phi i32 [ %826, %823 ], [ %941, %932 ], [ %925, %923 ], [ %886, %867 ], [ %866, %847 ]
  %945 = phi <2 x float> [ %827, %823 ], [ %937, %932 ], [ %926, %923 ], [ %882, %867 ], [ %862, %847 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %10) #10
  %946 = add nuw nsw i64 %825, 1
  %947 = load i32, ptr %818, align 8, !tbaa !384
  %948 = sext i32 %947 to i64
  %949 = icmp slt i64 %946, %948
  br i1 %949, label %823, label %950, !llvm.loop !390

950:                                              ; preds = %942
  %951 = icmp slt i32 %944, 1
  br i1 %951, label %960, label %952

952:                                              ; preds = %950
  %953 = sitofp i32 %944 to float
  %954 = fdiv fast float 1.000000e+00, %953
  %955 = extractelement <2 x float> %945, i64 0
  %956 = fmul fast float %954, %955
  %957 = extractelement <2 x float> %945, i64 1
  %958 = fmul fast float %954, %957
  %959 = fmul fast float %954, %943
  br label %970

960:                                              ; preds = %950, %806
  %961 = icmp eq ptr %817, null
  %962 = getelementptr inbounds [3 x float], ptr %817, i64 %814
  %963 = getelementptr inbounds %struct.MVert, ptr %816, i64 %814
  %964 = select i1 %961, ptr %963, ptr %962
  %965 = load float, ptr %964, align 4, !tbaa !20
  %966 = getelementptr inbounds float, ptr %964, i64 1
  %967 = load float, ptr %966, align 4, !tbaa !20
  %968 = getelementptr inbounds float, ptr %964, i64 2
  %969 = load float, ptr %968, align 4, !tbaa !20
  br label %970

970:                                              ; preds = %960, %952
  %971 = phi float [ %967, %960 ], [ %958, %952 ]
  %972 = phi float [ %965, %960 ], [ %956, %952 ]
  %973 = phi float [ %969, %960 ], [ %959, %952 ]
  %974 = load ptr, ptr %99, align 8, !tbaa !227
  %975 = load float, ptr %974, align 4, !tbaa !20
  %976 = fsub fast float %972, %975
  %977 = getelementptr inbounds float, ptr %974, i64 1
  %978 = load float, ptr %977, align 4, !tbaa !20
  %979 = fsub fast float %971, %978
  %980 = getelementptr inbounds float, ptr %974, i64 2
  %981 = load float, ptr %980, align 4, !tbaa !20
  %982 = fsub fast float %973, %981
  %983 = fmul fast float %976, %807
  %984 = fmul fast float %979, %807
  %985 = fmul fast float %982, %807
  %986 = fadd fast float %983, %975
  %987 = fadd fast float %984, %978
  %988 = fadd fast float %985, %981
  %989 = load i32, ptr %84, align 8, !tbaa !113
  %990 = and i32 %989, 8
  %991 = icmp eq i32 %990, 0
  br i1 %991, label %992, label %1006

992:                                              ; preds = %970
  %993 = load ptr, ptr %47, align 8, !tbaa !22
  %994 = getelementptr inbounds %struct.StrokeCache, ptr %993, i64 0, i32 2
  %995 = load i32, ptr %994, align 8, !tbaa !160
  %996 = and i32 %995, 1
  %997 = icmp eq i32 %996, 0
  br i1 %997, label %1003, label %998

998:                                              ; preds = %992
  %999 = call fast float @llvm.fabs.f32(float %975)
  %1000 = getelementptr inbounds %struct.StrokeCache, ptr %993, i64 0, i32 3, i64 0
  %1001 = load float, ptr %1000, align 4, !tbaa !20
  %1002 = fcmp fast ugt float %999, %1001
  br i1 %1002, label %1003, label %1004

1003:                                             ; preds = %998, %992
  br label %1004

1004:                                             ; preds = %1003, %998
  %1005 = phi float [ %986, %1003 ], [ 0.000000e+00, %998 ]
  store float %1005, ptr %974, align 4, !tbaa !20
  br label %1006

1006:                                             ; preds = %1004, %970
  %1007 = and i32 %989, 16
  %1008 = icmp eq i32 %1007, 0
  br i1 %1008, label %1009, label %1023

1009:                                             ; preds = %1006
  %1010 = load ptr, ptr %47, align 8, !tbaa !22
  %1011 = getelementptr inbounds %struct.StrokeCache, ptr %1010, i64 0, i32 2
  %1012 = load i32, ptr %1011, align 8, !tbaa !160
  %1013 = and i32 %1012, 2
  %1014 = icmp eq i32 %1013, 0
  br i1 %1014, label %1020, label %1015

1015:                                             ; preds = %1009
  %1016 = call fast float @llvm.fabs.f32(float %978)
  %1017 = getelementptr inbounds %struct.StrokeCache, ptr %1010, i64 0, i32 3, i64 1
  %1018 = load float, ptr %1017, align 4, !tbaa !20
  %1019 = fcmp fast ugt float %1016, %1018
  br i1 %1019, label %1020, label %1021

1020:                                             ; preds = %1015, %1009
  br label %1021

1021:                                             ; preds = %1020, %1015
  %1022 = phi float [ %987, %1020 ], [ 0.000000e+00, %1015 ]
  store float %1022, ptr %977, align 4, !tbaa !20
  br label %1023

1023:                                             ; preds = %1021, %1006
  %1024 = and i32 %989, 32
  %1025 = icmp eq i32 %1024, 0
  br i1 %1025, label %1026, label %1039

1026:                                             ; preds = %1023
  %1027 = load ptr, ptr %47, align 8, !tbaa !22
  %1028 = getelementptr inbounds %struct.StrokeCache, ptr %1027, i64 0, i32 2
  %1029 = load i32, ptr %1028, align 8, !tbaa !160
  %1030 = and i32 %1029, 4
  %1031 = icmp eq i32 %1030, 0
  br i1 %1031, label %1038, label %1032

1032:                                             ; preds = %1026
  %1033 = call fast float @llvm.fabs.f32(float %981)
  %1034 = getelementptr inbounds %struct.StrokeCache, ptr %1027, i64 0, i32 3, i64 2
  %1035 = load float, ptr %1034, align 4, !tbaa !20
  %1036 = fcmp fast ugt float %1033, %1035
  br i1 %1036, label %1038, label %1037

1037:                                             ; preds = %1032
  store float 0.000000e+00, ptr %980, align 4, !tbaa !20
  br label %1039

1038:                                             ; preds = %1032, %1026
  store float %988, ptr %980, align 4, !tbaa !20
  br label %1039

1039:                                             ; preds = %1038, %1037, %1023, %801, %800, %798
  %1040 = load ptr, ptr %104, align 8, !tbaa !238
  %1041 = icmp eq ptr %1040, null
  br i1 %1041, label %1046, label %1042

1042:                                             ; preds = %1039
  %1043 = getelementptr inbounds %struct.MVert, ptr %1040, i64 0, i32 2
  %1044 = load i8, ptr %1043, align 2, !tbaa !239
  %1045 = or i8 %1044, -128
  store i8 %1045, ptr %1043, align 2, !tbaa !239
  br label %1046

1046:                                             ; preds = %1042, %1039, %712, %697, %674, %657, %641
  %1047 = load i32, ptr %97, align 4, !tbaa !226
  %1048 = add nsw i32 %1047, 1
  store i32 %1048, ptr %97, align 4, !tbaa !226
  %1049 = load i32, ptr %85, align 4, !tbaa !210
  %1050 = add nsw i32 %1049, 1
  store i32 %1050, ptr %85, align 4, !tbaa !210
  %1051 = load i32, ptr %89, align 4, !tbaa !218
  %1052 = icmp slt i32 %1048, %1051
  br i1 %1052, label %615, label %1053, !llvm.loop !391

1053:                                             ; preds = %1046
  %1054 = load i32, ptr %96, align 8, !tbaa !220
  %1055 = load i32, ptr %90, align 8, !tbaa !219
  br label %1056

1056:                                             ; preds = %1053, %610
  %1057 = phi i32 [ %611, %610 ], [ %1055, %1053 ]
  %1058 = phi i32 [ %612, %610 ], [ %1054, %1053 ]
  %1059 = phi i32 [ %613, %610 ], [ %1051, %1053 ]
  %1060 = add nsw i32 %1058, 1
  store i32 %1060, ptr %96, align 8, !tbaa !220
  %1061 = icmp slt i32 %1060, %1057
  br i1 %1061, label %610, label %1062, !llvm.loop !392

1062:                                             ; preds = %1056
  %1063 = load i32, ptr %12, align 8, !tbaa !214
  %1064 = load i32, ptr %86, align 8, !tbaa !215
  br label %1065

1065:                                             ; preds = %1062, %592
  %1066 = phi i32 [ %588, %592 ], [ %1064, %1062 ]
  %1067 = phi i32 [ %589, %592 ], [ %1063, %1062 ]
  %1068 = add nsw i32 %1067, 1
  store i32 %1068, ptr %12, align 8, !tbaa !214
  %1069 = icmp slt i32 %1068, %1066
  br i1 %1069, label %587, label %1070, !llvm.loop !393

1070:                                             ; preds = %1065, %561
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %12) #10
  %1071 = add nuw nsw i64 %562, 1
  %1072 = icmp eq i64 %1071, %128
  br i1 %1072, label %151, label %561, !llvm.loop !381

1073:                                             ; preds = %134, %1518
  %1074 = phi i64 [ 0, %134 ], [ %1519, %1518 ]
  %1075 = getelementptr inbounds ptr, ptr %2, i64 %1074
  %1076 = load ptr, ptr %1075, align 8, !tbaa !31
  %1077 = call ptr @BKE_paint_brush(ptr noundef %0) #10
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %9) #10
  %1078 = load ptr, ptr %47, align 8, !tbaa !22
  %1079 = getelementptr inbounds %struct.StrokeCache, ptr %1078, i64 0, i32 22
  %1080 = load ptr, ptr %1079, align 8, !tbaa !172
  %1081 = getelementptr inbounds %struct.ViewContext, ptr %1080, i64 0, i32 5
  %1082 = load ptr, ptr %1081, align 8, !tbaa !174
  %1083 = getelementptr inbounds %struct.StrokeCache, ptr %1078, i64 0, i32 12
  %1084 = load float, ptr %1083, align 4, !tbaa !199
  %1085 = getelementptr inbounds %struct.StrokeCache, ptr %1078, i64 0, i32 14
  %1086 = load float, ptr %1085, align 4, !tbaa !20
  %1087 = getelementptr inbounds %struct.StrokeCache, ptr %1078, i64 0, i32 14, i64 1
  %1088 = load <2 x float>, ptr %1087, align 4, !tbaa !20
  %1089 = getelementptr inbounds %struct.RegionView3D, ptr %1082, i64 0, i32 32
  %1090 = load i16, ptr %1089, align 2, !tbaa !293
  %1091 = and i16 %1090, 4
  %1092 = icmp eq i16 %1091, 0
  %1093 = select i1 %1092, ptr null, ptr %1082
  %1094 = load ptr, ptr %21, align 8, !tbaa !21
  call void @pbvh_vertex_iter_init(ptr noundef %1094, ptr noundef %1076, ptr noundef nonnull %9, i32 noundef 1) #10
  store i32 0, ptr %48, align 4, !tbaa !210
  store i32 0, ptr %9, align 8, !tbaa !214
  %1095 = load i32, ptr %49, align 8, !tbaa !215
  %1096 = icmp sgt i32 %1095, 0
  br i1 %1096, label %1097, label %1518

1097:                                             ; preds = %1073
  %1098 = icmp eq ptr %1093, null
  br label %1099

1099:                                             ; preds = %1513, %1097
  %1100 = phi i32 [ %1095, %1097 ], [ %1514, %1513 ]
  %1101 = phi i32 [ 0, %1097 ], [ %1516, %1513 ]
  %1102 = load ptr, ptr %50, align 8, !tbaa !216
  %1103 = icmp eq ptr %1102, null
  br i1 %1103, label %1117, label %1104

1104:                                             ; preds = %1099
  %1105 = load i32, ptr %51, align 4, !tbaa !221
  store i32 %1105, ptr %52, align 4, !tbaa !218
  store i32 %1105, ptr %53, align 8, !tbaa !219
  %1106 = load ptr, ptr %54, align 8, !tbaa !222
  %1107 = sext i32 %1101 to i64
  %1108 = getelementptr inbounds i32, ptr %1106, i64 %1107
  %1109 = load i32, ptr %1108, align 4, !tbaa !24
  %1110 = sext i32 %1109 to i64
  %1111 = getelementptr inbounds ptr, ptr %1102, i64 %1110
  %1112 = load ptr, ptr %1111, align 8, !tbaa !31
  store ptr %1112, ptr %55, align 8, !tbaa !223
  %1113 = load ptr, ptr %56, align 8, !tbaa !224
  %1114 = getelementptr inbounds ptr, ptr %1113, i64 %1110
  %1115 = load ptr, ptr %1114, align 8, !tbaa !31
  store ptr %1115, ptr %57, align 8, !tbaa !225
  store i32 0, ptr %59, align 8, !tbaa !220
  %1116 = icmp sgt i32 %1105, 0
  br i1 %1116, label %1119, label %1513

1117:                                             ; preds = %1099
  %1118 = load i32, ptr %58, align 8, !tbaa !217
  store i32 %1118, ptr %52, align 4, !tbaa !218
  store i32 1, ptr %53, align 8, !tbaa !219
  store i32 0, ptr %59, align 8, !tbaa !220
  br label %1119

1119:                                             ; preds = %1117, %1104
  %1120 = phi i32 [ %1105, %1104 ], [ 1, %1117 ]
  %1121 = phi i32 [ %1105, %1104 ], [ %1118, %1117 ]
  br label %1122

1122:                                             ; preds = %1119, %1504
  %1123 = phi i32 [ %1505, %1504 ], [ %1120, %1119 ]
  %1124 = phi i32 [ %1508, %1504 ], [ 0, %1119 ]
  %1125 = phi i32 [ %1507, %1504 ], [ %1121, %1119 ]
  store i32 0, ptr %60, align 4, !tbaa !226
  %1126 = icmp sgt i32 %1125, 0
  br i1 %1126, label %1127, label %1504

1127:                                             ; preds = %1122, %1494
  %1128 = phi i32 [ %1496, %1494 ], [ 0, %1122 ]
  %1129 = load ptr, ptr %55, align 8, !tbaa !223
  %1130 = icmp eq ptr %1129, null
  br i1 %1130, label %1166, label %1131

1131:                                             ; preds = %1127
  store ptr %1129, ptr %62, align 8, !tbaa !227
  %1132 = load ptr, ptr %61, align 8, !tbaa !228
  %1133 = getelementptr i8, ptr %1132, i64 20
  %1134 = load i32, ptr %1133, align 4, !tbaa !229
  %1135 = sext i32 %1134 to i64
  %1136 = getelementptr inbounds i8, ptr %1129, i64 %1135
  store ptr %1136, ptr %63, align 8, !tbaa !231
  %1137 = getelementptr inbounds %struct.CCGKey, ptr %1132, i64 0, i32 9
  %1138 = load i32, ptr %1137, align 4, !tbaa !232
  %1139 = icmp eq i32 %1138, 0
  br i1 %1139, label %1145, label %1140

1140:                                             ; preds = %1131
  %1141 = getelementptr i8, ptr %1132, i64 24
  %1142 = load i32, ptr %1141, align 4, !tbaa !233
  %1143 = sext i32 %1142 to i64
  %1144 = getelementptr inbounds i8, ptr %1129, i64 %1143
  br label %1145

1145:                                             ; preds = %1140, %1131
  %1146 = phi ptr [ %1144, %1140 ], [ null, %1131 ]
  store ptr %1146, ptr %64, align 8, !tbaa !234
  %1147 = getelementptr i8, ptr %1132, i64 4
  %1148 = load i32, ptr %1147, align 4, !tbaa !235
  %1149 = sext i32 %1148 to i64
  %1150 = getelementptr inbounds i8, ptr %1129, i64 %1149
  store ptr %1150, ptr %55, align 8, !tbaa !223
  %1151 = load ptr, ptr %57, align 8, !tbaa !225
  %1152 = icmp eq ptr %1151, null
  br i1 %1152, label %1209, label %1153

1153:                                             ; preds = %1145
  %1154 = load i32, ptr %59, align 8, !tbaa !220
  %1155 = load i32, ptr %51, align 4, !tbaa !221
  %1156 = mul nsw i32 %1155, %1154
  %1157 = add nsw i32 %1156, %1128
  %1158 = ashr i32 %1157, 5
  %1159 = sext i32 %1158 to i64
  %1160 = getelementptr inbounds i32, ptr %1151, i64 %1159
  %1161 = load i32, ptr %1160, align 4, !tbaa !24
  %1162 = and i32 %1157, 31
  %1163 = shl nuw i32 1, %1162
  %1164 = and i32 %1163, %1161
  %1165 = icmp eq i32 %1164, 0
  br i1 %1165, label %1209, label %1494

1166:                                             ; preds = %1127
  %1167 = load ptr, ptr %65, align 8, !tbaa !236
  %1168 = icmp eq ptr %1167, null
  br i1 %1168, label %1186, label %1169

1169:                                             ; preds = %1166
  %1170 = load ptr, ptr %66, align 8, !tbaa !237
  %1171 = sext i32 %1128 to i64
  %1172 = getelementptr inbounds i32, ptr %1170, i64 %1171
  %1173 = load i32, ptr %1172, align 4, !tbaa !24
  %1174 = sext i32 %1173 to i64
  %1175 = getelementptr inbounds %struct.MVert, ptr %1167, i64 %1174
  store ptr %1175, ptr %67, align 8, !tbaa !238
  %1176 = getelementptr inbounds %struct.MVert, ptr %1167, i64 %1174, i32 2
  %1177 = load i8, ptr %1176, align 2, !tbaa !239
  %1178 = and i8 %1177, 16
  %1179 = icmp eq i8 %1178, 0
  br i1 %1179, label %1180, label %1494

1180:                                             ; preds = %1169
  store ptr %1175, ptr %62, align 8, !tbaa !227
  %1181 = getelementptr inbounds %struct.MVert, ptr %1167, i64 %1174, i32 1
  store ptr %1181, ptr %68, align 8, !tbaa !241
  %1182 = load ptr, ptr %69, align 8, !tbaa !242
  %1183 = icmp eq ptr %1182, null
  br i1 %1183, label %1209, label %1184

1184:                                             ; preds = %1180
  %1185 = getelementptr inbounds float, ptr %1182, i64 %1174
  br label %1206

1186:                                             ; preds = %1166
  %1187 = load ptr, ptr %70, align 8, !tbaa !243
  %1188 = icmp eq ptr %1187, null
  %1189 = load ptr, ptr %74, align 8
  %1190 = select i1 %1188, ptr %1189, ptr %1187
  %1191 = select i1 %1188, ptr %73, ptr %71
  %1192 = getelementptr i8, ptr %1190, i64 8
  %1193 = load ptr, ptr %1192, align 8, !tbaa !244
  store ptr %1193, ptr %72, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %1191) #10
  %1194 = load ptr, ptr %72, align 8, !tbaa !246
  %1195 = getelementptr i8, ptr %1194, i64 13
  %1196 = load i8, ptr %1195, align 1, !tbaa !247
  %1197 = and i8 %1196, 2
  %1198 = icmp eq i8 %1197, 0
  br i1 %1198, label %1199, label %1494

1199:                                             ; preds = %1186
  %1200 = getelementptr inbounds %struct.BMVert, ptr %1194, i64 0, i32 2
  store ptr %1200, ptr %62, align 8, !tbaa !227
  %1201 = getelementptr inbounds %struct.BMVert, ptr %1194, i64 0, i32 3
  store ptr %1201, ptr %63, align 8, !tbaa !231
  %1202 = load ptr, ptr %1194, align 8, !tbaa !249
  %1203 = load i32, ptr %75, align 8, !tbaa !251
  %1204 = sext i32 %1203 to i64
  %1205 = getelementptr inbounds i8, ptr %1202, i64 %1204
  br label %1206

1206:                                             ; preds = %1199, %1184
  %1207 = phi ptr [ %1205, %1199 ], [ %1185, %1184 ]
  %1208 = phi ptr [ %1200, %1199 ], [ %1175, %1184 ]
  store ptr %1207, ptr %64, align 8, !tbaa !234
  br label %1209

1209:                                             ; preds = %1206, %1180, %1153, %1145
  %1210 = phi ptr [ %1175, %1180 ], [ %1129, %1145 ], [ %1129, %1153 ], [ %1208, %1206 ]
  %1211 = load float, ptr %1210, align 4, !tbaa !20
  %1212 = fsub fast float %1086, %1211
  %1213 = getelementptr inbounds float, ptr %1210, i64 1
  %1214 = fmul fast float %1212, %1212
  %1215 = load <2 x float>, ptr %1213, align 4, !tbaa !20
  %1216 = fsub fast <2 x float> %1088, %1215
  %1217 = fmul fast <2 x float> %1216, %1216
  %1218 = extractelement <2 x float> %1217, i64 0
  %1219 = fadd fast float %1218, %1214
  %1220 = extractelement <2 x float> %1217, i64 1
  %1221 = fadd fast float %1219, %1220
  %1222 = fcmp fast ugt float %1221, %1084
  br i1 %1222, label %1494, label %1223

1223:                                             ; preds = %1209
  br i1 %1098, label %1229, label %1224

1224:                                             ; preds = %1223
  %1225 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %1093, ptr noundef nonnull %1210, i8 noundef zeroext 1) #10
  %1226 = icmp eq i8 %1225, 0
  br i1 %1226, label %1227, label %1494

1227:                                             ; preds = %1224
  %1228 = load ptr, ptr %62, align 8, !tbaa !227
  br label %1229

1229:                                             ; preds = %1227, %1223
  %1230 = phi ptr [ %1228, %1227 ], [ %1210, %1223 ]
  %1231 = call fast float @llvm.sqrt.f32(float %1221)
  %1232 = load ptr, ptr %68, align 8, !tbaa !241
  %1233 = load ptr, ptr %63, align 8, !tbaa !231
  br i1 %76, label %1294, label %1234

1234:                                             ; preds = %1229
  %1235 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef %20, ptr noundef %1077, ptr noundef %1230, float noundef nofpclass(nan inf) %1231, ptr noundef %1232, ptr noundef %1233, float noundef nofpclass(nan inf) 0.000000e+00)
  %1236 = load ptr, ptr %77, align 8, !tbaa !86
  %1237 = load ptr, ptr %72, align 8, !tbaa !246
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %8) #10
  store i8 6, ptr %78, align 4, !tbaa !394
  store ptr @bmiter__loop_of_vert_begin, ptr %79, align 8, !tbaa !396
  store ptr @bmiter__loop_of_vert_step, ptr %80, align 8, !tbaa !397
  store ptr %1237, ptr %8, align 8, !tbaa !398
  call void @bmiter__loop_of_vert_begin(ptr noundef nonnull %8) #10
  %1238 = load ptr, ptr %80, align 8, !tbaa !397
  %1239 = call ptr %1238(ptr noundef nonnull %8) #10
  %1240 = icmp eq ptr %1239, null
  br i1 %1240, label %1276, label %1241

1241:                                             ; preds = %1234
  %1242 = getelementptr inbounds %struct.BMesh, ptr %1236, i64 0, i32 24
  br label %1243

1243:                                             ; preds = %1243, %1241
  %1244 = phi ptr [ %1239, %1241 ], [ %1269, %1243 ]
  %1245 = phi float [ 0.000000e+00, %1241 ], [ %1266, %1243 ]
  %1246 = phi i32 [ 0, %1241 ], [ %1267, %1243 ]
  %1247 = getelementptr inbounds %struct.BMLoop, ptr %1244, i64 0, i32 7
  %1248 = load ptr, ptr %1247, align 8, !tbaa !399
  %1249 = getelementptr inbounds %struct.BMLoop, ptr %1248, i64 0, i32 1
  %1250 = load ptr, ptr %1249, align 8, !tbaa !401
  %1251 = getelementptr inbounds %struct.BMLoop, ptr %1244, i64 0, i32 6
  %1252 = load ptr, ptr %1251, align 8, !tbaa !402
  %1253 = getelementptr inbounds %struct.BMLoop, ptr %1252, i64 0, i32 1
  %1254 = load ptr, ptr %1253, align 8, !tbaa !401
  %1255 = load ptr, ptr %1250, align 8, !tbaa !249
  %1256 = call ptr @CustomData_bmesh_get(ptr noundef nonnull %1242, ptr noundef %1255, i32 noundef 34) #10
  %1257 = load float, ptr %1256, align 4, !tbaa !20
  %1258 = fadd fast float %1257, %1245
  %1259 = load ptr, ptr %1237, align 8, !tbaa !249
  %1260 = call ptr @CustomData_bmesh_get(ptr noundef nonnull %1242, ptr noundef %1259, i32 noundef 34) #10
  %1261 = load float, ptr %1260, align 4, !tbaa !20
  %1262 = fadd fast float %1258, %1261
  %1263 = load ptr, ptr %1254, align 8, !tbaa !249
  %1264 = call ptr @CustomData_bmesh_get(ptr noundef nonnull %1242, ptr noundef %1263, i32 noundef 34) #10
  %1265 = load float, ptr %1264, align 4, !tbaa !20
  %1266 = fadd fast float %1262, %1265
  %1267 = add i32 %1246, 3
  %1268 = load ptr, ptr %80, align 8, !tbaa !397
  %1269 = call ptr %1268(ptr noundef nonnull %8) #10
  %1270 = icmp eq ptr %1269, null
  br i1 %1270, label %1271, label %1243, !llvm.loop !403

1271:                                             ; preds = %1243
  %1272 = icmp sgt i32 %1267, 0
  br i1 %1272, label %1273, label %1276

1273:                                             ; preds = %1271
  %1274 = sitofp i32 %1267 to float
  %1275 = fdiv fast float %1266, %1274
  br label %1281

1276:                                             ; preds = %1271, %1234
  %1277 = getelementptr inbounds %struct.BMesh, ptr %1236, i64 0, i32 24
  %1278 = load ptr, ptr %1237, align 8, !tbaa !249
  %1279 = call ptr @CustomData_bmesh_get(ptr noundef nonnull %1277, ptr noundef %1278, i32 noundef 34) #10
  %1280 = load float, ptr %1279, align 4, !tbaa !20
  br label %1281

1281:                                             ; preds = %1276, %1273
  %1282 = phi float [ %1275, %1273 ], [ %1280, %1276 ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %8) #10
  %1283 = load ptr, ptr %64, align 8, !tbaa !234
  %1284 = load float, ptr %1283, align 4, !tbaa !20
  %1285 = fsub fast float %1282, %1284
  %1286 = fmul fast float %138, %1235
  %1287 = fmul fast float %1286, %1285
  %1288 = fadd fast float %1287, %1284
  store float %1288, ptr %1283, align 4, !tbaa !20
  %1289 = fcmp fast olt float %1288, 0.000000e+00
  br i1 %1289, label %1293, label %1290

1290:                                             ; preds = %1281
  %1291 = fcmp fast ogt float %1288, 1.000000e+00
  br i1 %1291, label %1292, label %1487

1292:                                             ; preds = %1290
  store float 1.000000e+00, ptr %1283, align 4, !tbaa !20
  br label %1487

1293:                                             ; preds = %1281
  store float 0.000000e+00, ptr %1283, align 4, !tbaa !20
  br label %1487

1294:                                             ; preds = %1229
  %1295 = load ptr, ptr %64, align 8, !tbaa !234
  %1296 = load float, ptr %1295, align 4, !tbaa !20
  %1297 = call fast fastcc nofpclass(nan inf) float @tex_strength(ptr noundef %20, ptr noundef %1077, ptr noundef %1230, float noundef nofpclass(nan inf) %1231, ptr noundef %1232, ptr noundef %1233, float noundef nofpclass(nan inf) %1296)
  %1298 = fmul fast float %1297, %137
  %1299 = load ptr, ptr %72, align 8, !tbaa !246
  %1300 = call i32 @BM_vert_face_count(ptr noundef %1299) #10
  %1301 = icmp sgt i32 %1300, 1
  br i1 %1301, label %1302, label %1412

1302:                                             ; preds = %1294
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %7) #10
  store i8 6, ptr %81, align 4, !tbaa !394
  store ptr @bmiter__loop_of_vert_begin, ptr %82, align 8, !tbaa !396
  store ptr @bmiter__loop_of_vert_step, ptr %83, align 8, !tbaa !397
  store ptr %1299, ptr %7, align 8, !tbaa !398
  call void @bmiter__loop_of_vert_begin(ptr noundef nonnull %7) #10
  %1303 = load ptr, ptr %83, align 8, !tbaa !397
  %1304 = call ptr %1303(ptr noundef nonnull %7) #10
  %1305 = icmp eq ptr %1304, null
  br i1 %1305, label %1411, label %1306

1306:                                             ; preds = %1302
  %1307 = icmp eq i32 %1300, 2
  %1308 = getelementptr inbounds %struct.BMVert, ptr %1299, i64 0, i32 2
  %1309 = getelementptr inbounds %struct.BMVert, ptr %1299, i64 0, i32 2, i64 2
  br i1 %1307, label %1343, label %1310

1310:                                             ; preds = %1306, %1310
  %1311 = phi float [ %1338, %1310 ], [ 0.000000e+00, %1306 ]
  %1312 = phi i32 [ %1339, %1310 ], [ 0, %1306 ]
  %1313 = phi ptr [ %1341, %1310 ], [ %1304, %1306 ]
  %1314 = phi <2 x float> [ %1335, %1310 ], [ zeroinitializer, %1306 ]
  %1315 = getelementptr inbounds %struct.BMLoop, ptr %1313, i64 0, i32 7
  %1316 = load ptr, ptr %1315, align 8, !tbaa !399
  %1317 = getelementptr inbounds %struct.BMLoop, ptr %1316, i64 0, i32 1
  %1318 = load ptr, ptr %1317, align 8, !tbaa !401
  %1319 = getelementptr inbounds %struct.BMLoop, ptr %1313, i64 0, i32 6
  %1320 = load ptr, ptr %1319, align 8, !tbaa !402
  %1321 = getelementptr inbounds %struct.BMLoop, ptr %1320, i64 0, i32 1
  %1322 = load ptr, ptr %1321, align 8, !tbaa !401
  %1323 = getelementptr inbounds %struct.BMVert, ptr %1318, i64 0, i32 2
  %1324 = getelementptr inbounds %struct.BMVert, ptr %1318, i64 0, i32 2, i64 2
  %1325 = load float, ptr %1324, align 4, !tbaa !20
  %1326 = fadd fast float %1325, %1311
  %1327 = load float, ptr %1309, align 4, !tbaa !20
  %1328 = fadd fast float %1326, %1327
  %1329 = getelementptr inbounds %struct.BMVert, ptr %1322, i64 0, i32 2
  %1330 = load <2 x float>, ptr %1323, align 4, !tbaa !20
  %1331 = fadd fast <2 x float> %1330, %1314
  %1332 = load <2 x float>, ptr %1308, align 4, !tbaa !20
  %1333 = fadd fast <2 x float> %1331, %1332
  %1334 = load <2 x float>, ptr %1329, align 4, !tbaa !20
  %1335 = fadd fast <2 x float> %1333, %1334
  %1336 = getelementptr inbounds %struct.BMVert, ptr %1322, i64 0, i32 2, i64 2
  %1337 = load float, ptr %1336, align 4, !tbaa !20
  %1338 = fadd fast float %1328, %1337
  %1339 = add i32 %1312, 3
  %1340 = load ptr, ptr %83, align 8, !tbaa !397
  %1341 = call ptr %1340(ptr noundef nonnull %7) #10
  %1342 = icmp eq ptr %1341, null
  br i1 %1342, label %1399, label %1310, !llvm.loop !404

1343:                                             ; preds = %1306, %1392
  %1344 = phi float [ %1393, %1392 ], [ 0.000000e+00, %1306 ]
  %1345 = phi i32 [ %1394, %1392 ], [ 0, %1306 ]
  %1346 = phi ptr [ %1397, %1392 ], [ %1304, %1306 ]
  %1347 = phi <2 x float> [ %1395, %1392 ], [ zeroinitializer, %1306 ]
  %1348 = getelementptr inbounds %struct.BMLoop, ptr %1346, i64 0, i32 7
  %1349 = load ptr, ptr %1348, align 8, !tbaa !399
  %1350 = getelementptr inbounds %struct.BMLoop, ptr %1349, i64 0, i32 1
  %1351 = load ptr, ptr %1350, align 8, !tbaa !401
  %1352 = getelementptr inbounds %struct.BMLoop, ptr %1346, i64 0, i32 6
  %1353 = load ptr, ptr %1352, align 8, !tbaa !402
  %1354 = getelementptr inbounds %struct.BMLoop, ptr %1353, i64 0, i32 1
  %1355 = load ptr, ptr %1354, align 8, !tbaa !401
  %1356 = call i32 @BM_vert_face_count(ptr noundef %1351) #10
  %1357 = icmp slt i32 %1356, 3
  br i1 %1357, label %1358, label %1366

1358:                                             ; preds = %1343
  %1359 = getelementptr inbounds %struct.BMVert, ptr %1351, i64 0, i32 2
  %1360 = load <2 x float>, ptr %1359, align 4, !tbaa !20
  %1361 = fadd fast <2 x float> %1360, %1347
  %1362 = getelementptr inbounds %struct.BMVert, ptr %1351, i64 0, i32 2, i64 2
  %1363 = load float, ptr %1362, align 4, !tbaa !20
  %1364 = fadd fast float %1363, %1344
  %1365 = add nsw i32 %1345, 1
  br label %1366

1366:                                             ; preds = %1358, %1343
  %1367 = phi float [ %1364, %1358 ], [ %1344, %1343 ]
  %1368 = phi i32 [ %1365, %1358 ], [ %1345, %1343 ]
  %1369 = phi <2 x float> [ %1361, %1358 ], [ %1347, %1343 ]
  %1370 = call i32 @BM_vert_face_count(ptr noundef %1299) #10
  %1371 = icmp slt i32 %1370, 3
  br i1 %1371, label %1372, label %1378

1372:                                             ; preds = %1366
  %1373 = load <2 x float>, ptr %1308, align 4, !tbaa !20
  %1374 = fadd fast <2 x float> %1373, %1369
  %1375 = load float, ptr %1309, align 4, !tbaa !20
  %1376 = fadd fast float %1375, %1367
  %1377 = add nsw i32 %1368, 1
  br label %1378

1378:                                             ; preds = %1372, %1366
  %1379 = phi float [ %1376, %1372 ], [ %1367, %1366 ]
  %1380 = phi i32 [ %1377, %1372 ], [ %1368, %1366 ]
  %1381 = phi <2 x float> [ %1374, %1372 ], [ %1369, %1366 ]
  %1382 = call i32 @BM_vert_face_count(ptr noundef %1355) #10
  %1383 = icmp slt i32 %1382, 3
  br i1 %1383, label %1384, label %1392

1384:                                             ; preds = %1378
  %1385 = getelementptr inbounds %struct.BMVert, ptr %1355, i64 0, i32 2
  %1386 = load <2 x float>, ptr %1385, align 4, !tbaa !20
  %1387 = fadd fast <2 x float> %1386, %1381
  %1388 = getelementptr inbounds %struct.BMVert, ptr %1355, i64 0, i32 2, i64 2
  %1389 = load float, ptr %1388, align 4, !tbaa !20
  %1390 = fadd fast float %1389, %1379
  %1391 = add nsw i32 %1380, 1
  br label %1392

1392:                                             ; preds = %1384, %1378
  %1393 = phi float [ %1390, %1384 ], [ %1379, %1378 ]
  %1394 = phi i32 [ %1391, %1384 ], [ %1380, %1378 ]
  %1395 = phi <2 x float> [ %1387, %1384 ], [ %1381, %1378 ]
  %1396 = load ptr, ptr %83, align 8, !tbaa !397
  %1397 = call ptr %1396(ptr noundef nonnull %7) #10
  %1398 = icmp eq ptr %1397, null
  br i1 %1398, label %1399, label %1343, !llvm.loop !404

1399:                                             ; preds = %1310, %1392
  %1400 = phi float [ %1393, %1392 ], [ %1338, %1310 ]
  %1401 = phi i32 [ %1394, %1392 ], [ %1339, %1310 ]
  %1402 = phi <2 x float> [ %1395, %1392 ], [ %1335, %1310 ]
  %1403 = icmp slt i32 %1401, 1
  br i1 %1403, label %1411, label %1404

1404:                                             ; preds = %1399
  %1405 = sitofp i32 %1401 to float
  %1406 = fdiv fast float 1.000000e+00, %1405
  %1407 = insertelement <2 x float> poison, float %1406, i64 0
  %1408 = shufflevector <2 x float> %1407, <2 x float> poison, <2 x i32> zeroinitializer
  %1409 = fmul fast <2 x float> %1408, %1402
  %1410 = fmul fast float %1406, %1400
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %7) #10
  br label %1417

1411:                                             ; preds = %1399, %1302
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %7) #10
  br label %1412

1412:                                             ; preds = %1411, %1294
  %1413 = getelementptr inbounds %struct.BMVert, ptr %1299, i64 0, i32 2
  %1414 = load <2 x float>, ptr %1413, align 4, !tbaa !20
  %1415 = getelementptr inbounds %struct.BMVert, ptr %1299, i64 0, i32 2, i64 2
  %1416 = load float, ptr %1415, align 4, !tbaa !20
  br label %1417

1417:                                             ; preds = %1412, %1404
  %1418 = phi float [ %1416, %1412 ], [ %1410, %1404 ]
  %1419 = phi <2 x float> [ %1414, %1412 ], [ %1409, %1404 ]
  %1420 = load ptr, ptr %62, align 8, !tbaa !227
  %1421 = load float, ptr %1420, align 4, !tbaa !20
  %1422 = extractelement <2 x float> %1419, i64 0
  %1423 = fsub fast float %1422, %1421
  %1424 = getelementptr inbounds float, ptr %1420, i64 1
  %1425 = load float, ptr %1424, align 4, !tbaa !20
  %1426 = extractelement <2 x float> %1419, i64 1
  %1427 = fsub fast float %1426, %1425
  %1428 = getelementptr inbounds float, ptr %1420, i64 2
  %1429 = load float, ptr %1428, align 4, !tbaa !20
  %1430 = fsub fast float %1418, %1429
  %1431 = fmul fast float %1423, %1298
  %1432 = fmul fast float %1427, %1298
  %1433 = fmul fast float %1430, %1298
  %1434 = fadd fast float %1431, %1421
  %1435 = fadd fast float %1432, %1425
  %1436 = fadd fast float %1433, %1429
  %1437 = load i32, ptr %84, align 8, !tbaa !113
  %1438 = and i32 %1437, 8
  %1439 = icmp eq i32 %1438, 0
  br i1 %1439, label %1440, label %1454

1440:                                             ; preds = %1417
  %1441 = load ptr, ptr %47, align 8, !tbaa !22
  %1442 = getelementptr inbounds %struct.StrokeCache, ptr %1441, i64 0, i32 2
  %1443 = load i32, ptr %1442, align 8, !tbaa !160
  %1444 = and i32 %1443, 1
  %1445 = icmp eq i32 %1444, 0
  br i1 %1445, label %1451, label %1446

1446:                                             ; preds = %1440
  %1447 = call fast float @llvm.fabs.f32(float %1421)
  %1448 = getelementptr inbounds %struct.StrokeCache, ptr %1441, i64 0, i32 3, i64 0
  %1449 = load float, ptr %1448, align 4, !tbaa !20
  %1450 = fcmp fast ugt float %1447, %1449
  br i1 %1450, label %1451, label %1452

1451:                                             ; preds = %1446, %1440
  br label %1452

1452:                                             ; preds = %1451, %1446
  %1453 = phi float [ %1434, %1451 ], [ 0.000000e+00, %1446 ]
  store float %1453, ptr %1420, align 4, !tbaa !20
  br label %1454

1454:                                             ; preds = %1452, %1417
  %1455 = and i32 %1437, 16
  %1456 = icmp eq i32 %1455, 0
  br i1 %1456, label %1457, label %1471

1457:                                             ; preds = %1454
  %1458 = load ptr, ptr %47, align 8, !tbaa !22
  %1459 = getelementptr inbounds %struct.StrokeCache, ptr %1458, i64 0, i32 2
  %1460 = load i32, ptr %1459, align 8, !tbaa !160
  %1461 = and i32 %1460, 2
  %1462 = icmp eq i32 %1461, 0
  br i1 %1462, label %1468, label %1463

1463:                                             ; preds = %1457
  %1464 = call fast float @llvm.fabs.f32(float %1425)
  %1465 = getelementptr inbounds %struct.StrokeCache, ptr %1458, i64 0, i32 3, i64 1
  %1466 = load float, ptr %1465, align 4, !tbaa !20
  %1467 = fcmp fast ugt float %1464, %1466
  br i1 %1467, label %1468, label %1469

1468:                                             ; preds = %1463, %1457
  br label %1469

1469:                                             ; preds = %1468, %1463
  %1470 = phi float [ %1435, %1468 ], [ 0.000000e+00, %1463 ]
  store float %1470, ptr %1424, align 4, !tbaa !20
  br label %1471

1471:                                             ; preds = %1469, %1454
  %1472 = and i32 %1437, 32
  %1473 = icmp eq i32 %1472, 0
  br i1 %1473, label %1474, label %1487

1474:                                             ; preds = %1471
  %1475 = load ptr, ptr %47, align 8, !tbaa !22
  %1476 = getelementptr inbounds %struct.StrokeCache, ptr %1475, i64 0, i32 2
  %1477 = load i32, ptr %1476, align 8, !tbaa !160
  %1478 = and i32 %1477, 4
  %1479 = icmp eq i32 %1478, 0
  br i1 %1479, label %1486, label %1480

1480:                                             ; preds = %1474
  %1481 = call fast float @llvm.fabs.f32(float %1429)
  %1482 = getelementptr inbounds %struct.StrokeCache, ptr %1475, i64 0, i32 3, i64 2
  %1483 = load float, ptr %1482, align 4, !tbaa !20
  %1484 = fcmp fast ugt float %1481, %1483
  br i1 %1484, label %1486, label %1485

1485:                                             ; preds = %1480
  store float 0.000000e+00, ptr %1428, align 4, !tbaa !20
  br label %1487

1486:                                             ; preds = %1480, %1474
  store float %1436, ptr %1428, align 4, !tbaa !20
  br label %1487

1487:                                             ; preds = %1486, %1485, %1471, %1293, %1292, %1290
  %1488 = load ptr, ptr %67, align 8, !tbaa !238
  %1489 = icmp eq ptr %1488, null
  br i1 %1489, label %1494, label %1490

1490:                                             ; preds = %1487
  %1491 = getelementptr inbounds %struct.MVert, ptr %1488, i64 0, i32 2
  %1492 = load i8, ptr %1491, align 2, !tbaa !239
  %1493 = or i8 %1492, -128
  store i8 %1493, ptr %1491, align 2, !tbaa !239
  br label %1494

1494:                                             ; preds = %1490, %1487, %1224, %1209, %1186, %1169, %1153
  %1495 = load i32, ptr %60, align 4, !tbaa !226
  %1496 = add nsw i32 %1495, 1
  store i32 %1496, ptr %60, align 4, !tbaa !226
  %1497 = load i32, ptr %48, align 4, !tbaa !210
  %1498 = add nsw i32 %1497, 1
  store i32 %1498, ptr %48, align 4, !tbaa !210
  %1499 = load i32, ptr %52, align 4, !tbaa !218
  %1500 = icmp slt i32 %1496, %1499
  br i1 %1500, label %1127, label %1501, !llvm.loop !405

1501:                                             ; preds = %1494
  %1502 = load i32, ptr %59, align 8, !tbaa !220
  %1503 = load i32, ptr %53, align 8, !tbaa !219
  br label %1504

1504:                                             ; preds = %1501, %1122
  %1505 = phi i32 [ %1123, %1122 ], [ %1503, %1501 ]
  %1506 = phi i32 [ %1124, %1122 ], [ %1502, %1501 ]
  %1507 = phi i32 [ %1125, %1122 ], [ %1499, %1501 ]
  %1508 = add nsw i32 %1506, 1
  store i32 %1508, ptr %59, align 8, !tbaa !220
  %1509 = icmp slt i32 %1508, %1505
  br i1 %1509, label %1122, label %1510, !llvm.loop !406

1510:                                             ; preds = %1504
  %1511 = load i32, ptr %9, align 8, !tbaa !214
  %1512 = load i32, ptr %49, align 8, !tbaa !215
  br label %1513

1513:                                             ; preds = %1510, %1104
  %1514 = phi i32 [ %1100, %1104 ], [ %1512, %1510 ]
  %1515 = phi i32 [ %1101, %1104 ], [ %1511, %1510 ]
  %1516 = add nsw i32 %1515, 1
  store i32 %1516, ptr %9, align 8, !tbaa !214
  %1517 = icmp slt i32 %1516, %1514
  br i1 %1517, label %1099, label %1518, !llvm.loop !407

1518:                                             ; preds = %1513, %1073
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %9) #10
  %1519 = add nuw nsw i64 %1074, 1
  %1520 = icmp eq i64 %1519, %127
  br i1 %1520, label %151, label %1073, !llvm.loop !381

1521:                                             ; preds = %45
  %1522 = load ptr, ptr %20, align 8, !tbaa !178
  %1523 = icmp eq ptr %1522, null
  br i1 %1523, label %1534, label %1527

1524:                                             ; preds = %1532
  %1525 = add nuw i32 %1529, 1
  %1526 = load ptr, ptr %20, align 8, !tbaa !178
  br label %1527

1527:                                             ; preds = %1521, %1524
  %1528 = phi ptr [ %1526, %1524 ], [ %1522, %1521 ]
  %1529 = phi i32 [ %1525, %1524 ], [ 0, %1521 ]
  %1530 = icmp eq ptr %1528, null
  br i1 %1530, label %1532, label %1531

1531:                                             ; preds = %1527
  tail call void @multires_stitch_grids(ptr noundef %1) #10
  br label %1532

1532:                                             ; preds = %1531, %1527
  %1533 = icmp eq i32 %1529, %31
  br i1 %1533, label %1534, label %1524, !llvm.loop !408

1534:                                             ; preds = %1532, %148, %1521, %43, %37
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @calc_area_normal(ptr noundef %0, ptr noundef %1, ptr nocapture noundef %2, ptr nocapture noundef readonly %3, i32 noundef %4) unnamed_addr #2 {
  %6 = alloca %struct.PBVHVertexIter, align 8
  %7 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !5
  %9 = tail call ptr @BKE_paint_brush(ptr noundef %0) #10
  %10 = tail call ptr @BKE_paint_brush(ptr noundef %0) #10
  %11 = getelementptr inbounds %struct.Brush, ptr %10, i64 0, i32 34
  %12 = load i8, ptr %11, align 8, !tbaa !59
  %13 = icmp eq i8 %12, 5
  br i1 %13, label %19, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %struct.SculptSession, ptr %8, i64 0, i32 28
  %16 = load ptr, ptr %15, align 8, !tbaa !22
  %17 = getelementptr inbounds %struct.StrokeCache, ptr %16, i64 0, i32 41
  %18 = load i8, ptr %17, align 4, !tbaa !46
  br label %19

19:                                               ; preds = %5, %14
  %20 = phi i8 [ %18, %14 ], [ 1, %5 ]
  %21 = getelementptr inbounds %struct.SculptSession, ptr %8, i64 0, i32 10
  %22 = load ptr, ptr %21, align 8, !tbaa !86
  %23 = icmp eq ptr %22, null
  br i1 %23, label %24, label %28

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.Brush, ptr %9, i64 0, i32 34
  %26 = load i8, ptr %25, align 8, !tbaa !59
  %27 = icmp eq i8 %26, 19
  br i1 %27, label %28, label %29

28:                                               ; preds = %24, %19
  br label %29

29:                                               ; preds = %28, %24
  %30 = phi i8 [ 0, %28 ], [ %20, %24 ]
  %31 = getelementptr inbounds float, ptr %2, i64 1
  store <2 x float> zeroinitializer, ptr %2, align 4, !tbaa !20
  %32 = getelementptr inbounds float, ptr %2, i64 2
  store float 0.000000e+00, ptr %32, align 4, !tbaa !20
  %33 = icmp sgt i32 %4, 0
  br i1 %33, label %34, label %610

34:                                               ; preds = %29
  %35 = getelementptr i8, ptr %8, i64 192
  %36 = freeze i8 %30
  %37 = icmp eq i8 %36, 0
  %38 = getelementptr inbounds %struct.SculptSession, ptr %8, i64 0, i32 15
  %39 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 5
  %40 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 12
  %41 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 6
  %42 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 13
  %43 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 1
  %44 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 2
  %45 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 11
  %46 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 7
  %47 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 9
  %48 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 10
  %49 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 15
  %50 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 4
  %51 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 3
  %52 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 8
  %53 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 24
  %54 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 26
  %55 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 27
  %56 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 14
  %57 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 16
  %58 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 22
  %59 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 25
  %60 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 17
  %61 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 18, i32 0, i32 1
  %62 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 18
  %63 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 23
  %64 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 19
  %65 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 19, i32 0, i32 1
  %66 = getelementptr inbounds %struct.PBVHVertexIter, ptr %6, i64 0, i32 21
  %67 = zext i32 %4 to i64
  br i1 %37, label %68, label %338

68:                                               ; preds = %34, %323
  %69 = phi i64 [ %334, %323 ], [ 0, %34 ]
  %70 = phi float [ %332, %323 ], [ 0.000000e+00, %34 ]
  %71 = phi <2 x float> [ %333, %323 ], [ zeroinitializer, %34 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %6) #10
  %72 = getelementptr inbounds ptr, ptr %3, i64 %69
  %73 = load ptr, ptr %72, align 8, !tbaa !31
  %74 = call ptr @sculpt_undo_push_node(ptr noundef %1, ptr noundef %73, i32 noundef 0) #10
  %75 = load ptr, ptr %35, align 8, !tbaa !22
  %76 = getelementptr inbounds %struct.StrokeCache, ptr %75, i64 0, i32 22
  %77 = load ptr, ptr %76, align 8, !tbaa !172
  %78 = getelementptr inbounds %struct.ViewContext, ptr %77, i64 0, i32 5
  %79 = load ptr, ptr %78, align 8, !tbaa !174
  %80 = getelementptr inbounds %struct.StrokeCache, ptr %75, i64 0, i32 12
  %81 = load float, ptr %80, align 4, !tbaa !199
  %82 = getelementptr inbounds %struct.StrokeCache, ptr %75, i64 0, i32 14
  %83 = load float, ptr %82, align 4, !tbaa !20
  %84 = getelementptr inbounds %struct.StrokeCache, ptr %75, i64 0, i32 14, i64 1
  %85 = load <2 x float>, ptr %84, align 4, !tbaa !20
  %86 = getelementptr inbounds %struct.RegionView3D, ptr %79, i64 0, i32 32
  %87 = load i16, ptr %86, align 2, !tbaa !293
  %88 = and i16 %87, 4
  %89 = icmp eq i16 %88, 0
  %90 = select i1 %89, ptr null, ptr %79
  %91 = load ptr, ptr %38, align 8, !tbaa !21
  %92 = load ptr, ptr %72, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %91, ptr noundef %92, ptr noundef nonnull %6, i32 noundef 1) #10
  store i32 0, ptr %39, align 4, !tbaa !210
  store i32 0, ptr %6, align 8, !tbaa !214
  %93 = load i32, ptr %40, align 8, !tbaa !215
  %94 = icmp sgt i32 %93, 0
  br i1 %94, label %336, label %323

95:                                               ; preds = %336, %125
  %96 = phi i32 [ %93, %336 ], [ %126, %125 ]
  %97 = phi i32 [ 0, %336 ], [ %132, %125 ]
  %98 = phi float [ 0.000000e+00, %336 ], [ %129, %125 ]
  %99 = phi float [ 0.000000e+00, %336 ], [ %128, %125 ]
  %100 = phi <2 x float> [ zeroinitializer, %336 ], [ %130, %125 ]
  %101 = phi <2 x float> [ zeroinitializer, %336 ], [ %131, %125 ]
  %102 = load ptr, ptr %41, align 8, !tbaa !216
  %103 = icmp eq ptr %102, null
  br i1 %103, label %104, label %106

104:                                              ; preds = %95
  %105 = load i32, ptr %49, align 8, !tbaa !217
  store i32 %105, ptr %43, align 4, !tbaa !218
  store i32 1, ptr %44, align 8, !tbaa !219
  store i32 0, ptr %50, align 8, !tbaa !220
  br label %119

106:                                              ; preds = %95
  %107 = load i32, ptr %42, align 4, !tbaa !221
  store i32 %107, ptr %43, align 4, !tbaa !218
  store i32 %107, ptr %44, align 8, !tbaa !219
  %108 = load ptr, ptr %45, align 8, !tbaa !222
  %109 = sext i32 %97 to i64
  %110 = getelementptr inbounds i32, ptr %108, i64 %109
  %111 = load i32, ptr %110, align 4, !tbaa !24
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds ptr, ptr %102, i64 %112
  %114 = load ptr, ptr %113, align 8, !tbaa !31
  store ptr %114, ptr %46, align 8, !tbaa !223
  %115 = load ptr, ptr %47, align 8, !tbaa !224
  %116 = getelementptr inbounds ptr, ptr %115, i64 %112
  %117 = load ptr, ptr %116, align 8, !tbaa !31
  store ptr %117, ptr %48, align 8, !tbaa !225
  store i32 0, ptr %50, align 8, !tbaa !220
  %118 = icmp sgt i32 %107, 0
  br i1 %118, label %119, label %125

119:                                              ; preds = %104, %106
  %120 = phi i32 [ %107, %106 ], [ 1, %104 ]
  %121 = phi i32 [ %107, %106 ], [ %105, %104 ]
  br label %134

122:                                              ; preds = %146
  %123 = load i32, ptr %6, align 8, !tbaa !214
  %124 = load i32, ptr %40, align 8, !tbaa !215
  br label %125

125:                                              ; preds = %122, %106
  %126 = phi i32 [ %96, %106 ], [ %124, %122 ]
  %127 = phi i32 [ %97, %106 ], [ %123, %122 ]
  %128 = phi float [ %99, %106 ], [ %150, %122 ]
  %129 = phi float [ %98, %106 ], [ %151, %122 ]
  %130 = phi <2 x float> [ %100, %106 ], [ %152, %122 ]
  %131 = phi <2 x float> [ %101, %106 ], [ %153, %122 ]
  %132 = add nsw i32 %127, 1
  store i32 %132, ptr %6, align 8, !tbaa !214
  %133 = icmp slt i32 %132, %126
  br i1 %133, label %95, label %323, !llvm.loop !409

134:                                              ; preds = %119, %146
  %135 = phi i32 [ %147, %146 ], [ %120, %119 ]
  %136 = phi i32 [ %154, %146 ], [ 0, %119 ]
  %137 = phi i32 [ %149, %146 ], [ %121, %119 ]
  %138 = phi float [ %151, %146 ], [ %98, %119 ]
  %139 = phi float [ %150, %146 ], [ %99, %119 ]
  %140 = phi <2 x float> [ %152, %146 ], [ %100, %119 ]
  %141 = phi <2 x float> [ %153, %146 ], [ %101, %119 ]
  store i32 0, ptr %51, align 4, !tbaa !226
  %142 = icmp sgt i32 %137, 0
  br i1 %142, label %156, label %146

143:                                              ; preds = %312
  %144 = load i32, ptr %50, align 8, !tbaa !220
  %145 = load i32, ptr %44, align 8, !tbaa !219
  br label %146

146:                                              ; preds = %143, %134
  %147 = phi i32 [ %135, %134 ], [ %145, %143 ]
  %148 = phi i32 [ %136, %134 ], [ %144, %143 ]
  %149 = phi i32 [ %137, %134 ], [ %321, %143 ]
  %150 = phi float [ %139, %134 ], [ %313, %143 ]
  %151 = phi float [ %138, %134 ], [ %314, %143 ]
  %152 = phi <2 x float> [ %140, %134 ], [ %315, %143 ]
  %153 = phi <2 x float> [ %141, %134 ], [ %316, %143 ]
  %154 = add nsw i32 %148, 1
  store i32 %154, ptr %50, align 8, !tbaa !220
  %155 = icmp slt i32 %154, %147
  br i1 %155, label %134, label %122, !llvm.loop !410

156:                                              ; preds = %134, %312
  %157 = phi i32 [ %318, %312 ], [ 0, %134 ]
  %158 = phi float [ %314, %312 ], [ %138, %134 ]
  %159 = phi float [ %313, %312 ], [ %139, %134 ]
  %160 = phi <2 x float> [ %315, %312 ], [ %140, %134 ]
  %161 = phi <2 x float> [ %316, %312 ], [ %141, %134 ]
  %162 = load ptr, ptr %46, align 8, !tbaa !223
  %163 = icmp eq ptr %162, null
  br i1 %163, label %199, label %164

164:                                              ; preds = %156
  store ptr %162, ptr %53, align 8, !tbaa !227
  %165 = load ptr, ptr %52, align 8, !tbaa !228
  %166 = getelementptr i8, ptr %165, i64 20
  %167 = load i32, ptr %166, align 4, !tbaa !229
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds i8, ptr %162, i64 %168
  store ptr %169, ptr %54, align 8, !tbaa !231
  %170 = getelementptr inbounds %struct.CCGKey, ptr %165, i64 0, i32 9
  %171 = load i32, ptr %170, align 4, !tbaa !232
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %178, label %173

173:                                              ; preds = %164
  %174 = getelementptr i8, ptr %165, i64 24
  %175 = load i32, ptr %174, align 4, !tbaa !233
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds i8, ptr %162, i64 %176
  br label %178

178:                                              ; preds = %173, %164
  %179 = phi ptr [ %177, %173 ], [ null, %164 ]
  store ptr %179, ptr %55, align 8, !tbaa !234
  %180 = getelementptr i8, ptr %165, i64 4
  %181 = load i32, ptr %180, align 4, !tbaa !235
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds i8, ptr %162, i64 %182
  store ptr %183, ptr %46, align 8, !tbaa !223
  %184 = load ptr, ptr %48, align 8, !tbaa !225
  %185 = icmp eq ptr %184, null
  br i1 %185, label %242, label %186

186:                                              ; preds = %178
  %187 = load i32, ptr %50, align 8, !tbaa !220
  %188 = load i32, ptr %42, align 4, !tbaa !221
  %189 = mul nsw i32 %188, %187
  %190 = add nsw i32 %189, %157
  %191 = ashr i32 %190, 5
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds i32, ptr %184, i64 %192
  %194 = load i32, ptr %193, align 4, !tbaa !24
  %195 = and i32 %190, 31
  %196 = shl nuw i32 1, %195
  %197 = and i32 %196, %194
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %242, label %312

199:                                              ; preds = %156
  %200 = load ptr, ptr %56, align 8, !tbaa !236
  %201 = icmp eq ptr %200, null
  br i1 %201, label %219, label %202

202:                                              ; preds = %199
  %203 = load ptr, ptr %57, align 8, !tbaa !237
  %204 = sext i32 %157 to i64
  %205 = getelementptr inbounds i32, ptr %203, i64 %204
  %206 = load i32, ptr %205, align 4, !tbaa !24
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds %struct.MVert, ptr %200, i64 %207
  store ptr %208, ptr %58, align 8, !tbaa !238
  %209 = getelementptr inbounds %struct.MVert, ptr %200, i64 %207, i32 2
  %210 = load i8, ptr %209, align 2, !tbaa !239
  %211 = and i8 %210, 16
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %213, label %312

213:                                              ; preds = %202
  store ptr %208, ptr %53, align 8, !tbaa !227
  %214 = getelementptr inbounds %struct.MVert, ptr %200, i64 %207, i32 1
  store ptr %214, ptr %59, align 8, !tbaa !241
  %215 = load ptr, ptr %60, align 8, !tbaa !242
  %216 = icmp eq ptr %215, null
  br i1 %216, label %242, label %217

217:                                              ; preds = %213
  %218 = getelementptr inbounds float, ptr %215, i64 %207
  br label %239

219:                                              ; preds = %199
  %220 = load ptr, ptr %61, align 8, !tbaa !243
  %221 = icmp eq ptr %220, null
  %222 = load ptr, ptr %65, align 8
  %223 = select i1 %221, ptr %222, ptr %220
  %224 = select i1 %221, ptr %64, ptr %62
  %225 = getelementptr i8, ptr %223, i64 8
  %226 = load ptr, ptr %225, align 8, !tbaa !244
  store ptr %226, ptr %63, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %224) #10
  %227 = load ptr, ptr %63, align 8, !tbaa !246
  %228 = getelementptr i8, ptr %227, i64 13
  %229 = load i8, ptr %228, align 1, !tbaa !247
  %230 = and i8 %229, 2
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %232, label %312

232:                                              ; preds = %219
  %233 = getelementptr inbounds %struct.BMVert, ptr %227, i64 0, i32 2
  store ptr %233, ptr %53, align 8, !tbaa !227
  %234 = getelementptr inbounds %struct.BMVert, ptr %227, i64 0, i32 3
  store ptr %234, ptr %54, align 8, !tbaa !231
  %235 = load ptr, ptr %227, align 8, !tbaa !249
  %236 = load i32, ptr %66, align 8, !tbaa !251
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds i8, ptr %235, i64 %237
  br label %239

239:                                              ; preds = %217, %232
  %240 = phi ptr [ %238, %232 ], [ %218, %217 ]
  %241 = phi ptr [ %233, %232 ], [ %208, %217 ]
  store ptr %240, ptr %55, align 8, !tbaa !234
  br label %242

242:                                              ; preds = %239, %213, %186, %178
  %243 = phi ptr [ %208, %213 ], [ %162, %186 ], [ %162, %178 ], [ %241, %239 ]
  br i1 %337, label %247, label %244

244:                                              ; preds = %242
  %245 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %90, ptr noundef nonnull %243, i8 noundef zeroext 1) #10
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %247, label %312

247:                                              ; preds = %244, %242
  %248 = load float, ptr %243, align 4, !tbaa !20
  %249 = fsub fast float %83, %248
  %250 = getelementptr inbounds float, ptr %243, i64 1
  %251 = fmul fast float %249, %249
  %252 = load <2 x float>, ptr %250, align 4, !tbaa !20
  %253 = fsub fast <2 x float> %85, %252
  %254 = fmul fast <2 x float> %253, %253
  %255 = extractelement <2 x float> %254, i64 0
  %256 = fadd fast float %255, %251
  %257 = extractelement <2 x float> %254, i64 1
  %258 = fadd fast float %256, %257
  %259 = fcmp fast ugt float %258, %81
  br i1 %259, label %312, label %260

260:                                              ; preds = %247
  %261 = load ptr, ptr %59, align 8, !tbaa !241
  %262 = icmp eq ptr %261, null
  br i1 %262, label %289, label %263

263:                                              ; preds = %260
  %264 = load i16, ptr %261, align 2, !tbaa !302
  %265 = sitofp i16 %264 to float
  %266 = fmul fast float %265, 0x3F00002000000000
  %267 = getelementptr inbounds i16, ptr %261, i64 1
  %268 = load <2 x i16>, ptr %267, align 2, !tbaa !302
  %269 = sitofp <2 x i16> %268 to <2 x float>
  %270 = fmul fast <2 x float> %269, <float 0x3F00002000000000, float 0x3F00002000000000>
  %271 = load ptr, ptr %35, align 8, !tbaa !22
  %272 = getelementptr inbounds %struct.StrokeCache, ptr %271, i64 0, i32 33
  %273 = load float, ptr %272, align 4, !tbaa !20
  %274 = fmul fast float %273, %266
  %275 = getelementptr inbounds %struct.StrokeCache, ptr %271, i64 0, i32 33, i64 1
  %276 = load <2 x float>, ptr %275, align 4, !tbaa !20
  %277 = fmul fast <2 x float> %276, %270
  %278 = extractelement <2 x float> %277, i64 0
  %279 = fadd fast float %278, %274
  %280 = extractelement <2 x float> %277, i64 1
  %281 = fadd fast float %279, %280
  %282 = fcmp fast ogt float %281, 0.000000e+00
  %283 = select i1 %282, float %158, float %159
  %284 = fadd fast float %283, %266
  br i1 %282, label %287, label %285

285:                                              ; preds = %263
  %286 = fadd fast <2 x float> %270, %161
  br label %312

287:                                              ; preds = %263
  %288 = fadd fast <2 x float> %270, %160
  br label %312

289:                                              ; preds = %260
  %290 = load ptr, ptr %35, align 8, !tbaa !22
  %291 = getelementptr inbounds %struct.StrokeCache, ptr %290, i64 0, i32 33
  %292 = load ptr, ptr %54, align 8, !tbaa !231
  %293 = load float, ptr %291, align 4, !tbaa !20
  %294 = load float, ptr %292, align 4, !tbaa !20
  %295 = fmul fast float %294, %293
  %296 = getelementptr inbounds %struct.StrokeCache, ptr %290, i64 0, i32 33, i64 1
  %297 = getelementptr inbounds float, ptr %292, i64 1
  %298 = load <2 x float>, ptr %297, align 4, !tbaa !20
  %299 = load <2 x float>, ptr %296, align 4, !tbaa !20
  %300 = fmul fast <2 x float> %298, %299
  %301 = extractelement <2 x float> %300, i64 0
  %302 = fadd fast float %301, %295
  %303 = extractelement <2 x float> %300, i64 1
  %304 = fadd fast float %302, %303
  %305 = fcmp fast ogt float %304, 0.000000e+00
  %306 = select i1 %305, float %158, float %159
  %307 = fadd fast float %306, %294
  br i1 %305, label %310, label %308

308:                                              ; preds = %289
  %309 = fadd fast <2 x float> %298, %161
  br label %312

310:                                              ; preds = %289
  %311 = fadd fast <2 x float> %298, %160
  br label %312

312:                                              ; preds = %310, %308, %287, %285, %247, %244, %219, %202, %186
  %313 = phi float [ %159, %247 ], [ %159, %219 ], [ %159, %202 ], [ %159, %186 ], [ %159, %287 ], [ %284, %285 ], [ %159, %310 ], [ %307, %308 ], [ %159, %244 ]
  %314 = phi float [ %158, %247 ], [ %158, %219 ], [ %158, %202 ], [ %158, %186 ], [ %284, %287 ], [ %158, %285 ], [ %307, %310 ], [ %158, %308 ], [ %158, %244 ]
  %315 = phi <2 x float> [ %160, %247 ], [ %160, %219 ], [ %160, %202 ], [ %160, %186 ], [ %288, %287 ], [ %160, %285 ], [ %311, %310 ], [ %160, %308 ], [ %160, %244 ]
  %316 = phi <2 x float> [ %161, %247 ], [ %161, %219 ], [ %161, %202 ], [ %161, %186 ], [ %161, %287 ], [ %286, %285 ], [ %161, %310 ], [ %309, %308 ], [ %161, %244 ]
  %317 = load i32, ptr %51, align 4, !tbaa !226
  %318 = add nsw i32 %317, 1
  store i32 %318, ptr %51, align 4, !tbaa !226
  %319 = load i32, ptr %39, align 4, !tbaa !210
  %320 = add nsw i32 %319, 1
  store i32 %320, ptr %39, align 4, !tbaa !210
  %321 = load i32, ptr %43, align 4, !tbaa !218
  %322 = icmp slt i32 %318, %321
  br i1 %322, label %156, label %143, !llvm.loop !411

323:                                              ; preds = %125, %68
  %324 = phi float [ 0.000000e+00, %68 ], [ %128, %125 ]
  %325 = phi float [ 0.000000e+00, %68 ], [ %129, %125 ]
  %326 = phi <2 x float> [ zeroinitializer, %68 ], [ %130, %125 ]
  %327 = phi <2 x float> [ zeroinitializer, %68 ], [ %131, %125 ]
  %328 = load float, ptr %2, align 4, !tbaa !20
  %329 = fadd fast float %328, %325
  store float %329, ptr %2, align 4, !tbaa !20
  %330 = load <2 x float>, ptr %31, align 4, !tbaa !20
  %331 = fadd fast <2 x float> %330, %326
  store <2 x float> %331, ptr %31, align 4, !tbaa !20
  %332 = fadd fast float %324, %70
  %333 = fadd fast <2 x float> %327, %71
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %6) #10
  %334 = add nuw nsw i64 %69, 1
  %335 = icmp eq i64 %334, %67
  br i1 %335, label %598, label %68, !llvm.loop !412

336:                                              ; preds = %68
  %337 = icmp eq ptr %90, null
  br label %95

338:                                              ; preds = %34, %585
  %339 = phi i64 [ %596, %585 ], [ 0, %34 ]
  %340 = phi float [ %594, %585 ], [ 0.000000e+00, %34 ]
  %341 = phi <2 x float> [ %595, %585 ], [ zeroinitializer, %34 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %6) #10
  %342 = getelementptr inbounds ptr, ptr %3, i64 %339
  %343 = load ptr, ptr %342, align 8, !tbaa !31
  %344 = call ptr @sculpt_undo_push_node(ptr noundef %1, ptr noundef %343, i32 noundef 0) #10
  %345 = load ptr, ptr %35, align 8, !tbaa !22
  %346 = getelementptr inbounds %struct.StrokeCache, ptr %345, i64 0, i32 22
  %347 = load ptr, ptr %346, align 8, !tbaa !172
  %348 = getelementptr inbounds %struct.ViewContext, ptr %347, i64 0, i32 5
  %349 = load ptr, ptr %348, align 8, !tbaa !174
  %350 = getelementptr inbounds %struct.StrokeCache, ptr %345, i64 0, i32 12
  %351 = load float, ptr %350, align 4, !tbaa !199
  %352 = getelementptr inbounds %struct.StrokeCache, ptr %345, i64 0, i32 14
  %353 = load float, ptr %352, align 4, !tbaa !20
  %354 = getelementptr inbounds %struct.StrokeCache, ptr %345, i64 0, i32 14, i64 1
  %355 = load <2 x float>, ptr %354, align 4, !tbaa !20
  %356 = getelementptr inbounds %struct.RegionView3D, ptr %349, i64 0, i32 32
  %357 = load i16, ptr %356, align 2, !tbaa !293
  %358 = and i16 %357, 4
  %359 = icmp eq i16 %358, 0
  %360 = select i1 %359, ptr null, ptr %349
  %361 = load ptr, ptr %38, align 8, !tbaa !21
  %362 = load ptr, ptr %342, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %361, ptr noundef %362, ptr noundef nonnull %6, i32 noundef 1) #10
  store i32 0, ptr %39, align 4, !tbaa !210
  store i32 0, ptr %6, align 8, !tbaa !214
  %363 = load i32, ptr %40, align 8, !tbaa !215
  %364 = icmp sgt i32 %363, 0
  br i1 %364, label %365, label %585

365:                                              ; preds = %338
  %366 = getelementptr inbounds %struct.SculptUndoNode, ptr %344, i64 0, i32 5
  %367 = icmp eq ptr %360, null
  %368 = getelementptr inbounds %struct.SculptUndoNode, ptr %344, i64 0, i32 7
  br label %369

369:                                              ; preds = %365, %575
  %370 = phi i32 [ %363, %365 ], [ %576, %575 ]
  %371 = phi i32 [ 0, %365 ], [ %578, %575 ]
  %372 = phi i32 [ 0, %365 ], [ %583, %575 ]
  %373 = phi float [ 0.000000e+00, %365 ], [ %580, %575 ]
  %374 = phi float [ 0.000000e+00, %365 ], [ %579, %575 ]
  %375 = phi <2 x float> [ zeroinitializer, %365 ], [ %581, %575 ]
  %376 = phi <2 x float> [ zeroinitializer, %365 ], [ %582, %575 ]
  %377 = load ptr, ptr %41, align 8, !tbaa !216
  %378 = icmp eq ptr %377, null
  br i1 %378, label %379, label %381

379:                                              ; preds = %369
  %380 = load i32, ptr %49, align 8, !tbaa !217
  store i32 %380, ptr %43, align 4, !tbaa !218
  store i32 1, ptr %44, align 8, !tbaa !219
  store i32 0, ptr %50, align 8, !tbaa !220
  br label %394

381:                                              ; preds = %369
  %382 = load i32, ptr %42, align 4, !tbaa !221
  store i32 %382, ptr %43, align 4, !tbaa !218
  store i32 %382, ptr %44, align 8, !tbaa !219
  %383 = load ptr, ptr %45, align 8, !tbaa !222
  %384 = sext i32 %372 to i64
  %385 = getelementptr inbounds i32, ptr %383, i64 %384
  %386 = load i32, ptr %385, align 4, !tbaa !24
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds ptr, ptr %377, i64 %387
  %389 = load ptr, ptr %388, align 8, !tbaa !31
  store ptr %389, ptr %46, align 8, !tbaa !223
  %390 = load ptr, ptr %47, align 8, !tbaa !224
  %391 = getelementptr inbounds ptr, ptr %390, i64 %387
  %392 = load ptr, ptr %391, align 8, !tbaa !31
  store ptr %392, ptr %48, align 8, !tbaa !225
  store i32 0, ptr %50, align 8, !tbaa !220
  %393 = icmp sgt i32 %382, 0
  br i1 %393, label %394, label %575

394:                                              ; preds = %379, %381
  %395 = phi i32 [ %382, %381 ], [ 1, %379 ]
  %396 = phi i32 [ %382, %381 ], [ %380, %379 ]
  br label %397

397:                                              ; preds = %394, %561
  %398 = phi i32 [ %562, %561 ], [ %395, %394 ]
  %399 = phi i32 [ %570, %561 ], [ 0, %394 ]
  %400 = phi i32 [ %564, %561 ], [ %371, %394 ]
  %401 = phi i32 [ %565, %561 ], [ %396, %394 ]
  %402 = phi float [ %567, %561 ], [ %373, %394 ]
  %403 = phi float [ %566, %561 ], [ %374, %394 ]
  %404 = phi <2 x float> [ %568, %561 ], [ %375, %394 ]
  %405 = phi <2 x float> [ %569, %561 ], [ %376, %394 ]
  store i32 0, ptr %51, align 4, !tbaa !226
  %406 = icmp sgt i32 %401, 0
  br i1 %406, label %407, label %561

407:                                              ; preds = %397, %547
  %408 = phi i32 [ %555, %547 ], [ %400, %397 ]
  %409 = phi i32 [ %554, %547 ], [ 0, %397 ]
  %410 = phi float [ %550, %547 ], [ %402, %397 ]
  %411 = phi float [ %549, %547 ], [ %403, %397 ]
  %412 = phi <2 x float> [ %551, %547 ], [ %404, %397 ]
  %413 = phi <2 x float> [ %552, %547 ], [ %405, %397 ]
  %414 = load ptr, ptr %46, align 8, !tbaa !223
  %415 = icmp eq ptr %414, null
  br i1 %415, label %451, label %416

416:                                              ; preds = %407
  store ptr %414, ptr %53, align 8, !tbaa !227
  %417 = load ptr, ptr %52, align 8, !tbaa !228
  %418 = getelementptr i8, ptr %417, i64 20
  %419 = load i32, ptr %418, align 4, !tbaa !229
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds i8, ptr %414, i64 %420
  store ptr %421, ptr %54, align 8, !tbaa !231
  %422 = getelementptr inbounds %struct.CCGKey, ptr %417, i64 0, i32 9
  %423 = load i32, ptr %422, align 4, !tbaa !232
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %430, label %425

425:                                              ; preds = %416
  %426 = getelementptr i8, ptr %417, i64 24
  %427 = load i32, ptr %426, align 4, !tbaa !233
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds i8, ptr %414, i64 %428
  br label %430

430:                                              ; preds = %416, %425
  %431 = phi ptr [ %429, %425 ], [ null, %416 ]
  store ptr %431, ptr %55, align 8, !tbaa !234
  %432 = getelementptr i8, ptr %417, i64 4
  %433 = load i32, ptr %432, align 4, !tbaa !235
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds i8, ptr %414, i64 %434
  store ptr %435, ptr %46, align 8, !tbaa !223
  %436 = load ptr, ptr %48, align 8, !tbaa !225
  %437 = icmp eq ptr %436, null
  br i1 %437, label %495, label %438

438:                                              ; preds = %430
  %439 = load i32, ptr %50, align 8, !tbaa !220
  %440 = load i32, ptr %42, align 4, !tbaa !221
  %441 = mul nsw i32 %440, %439
  %442 = add nsw i32 %441, %409
  %443 = ashr i32 %442, 5
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds i32, ptr %436, i64 %444
  %446 = load i32, ptr %445, align 4, !tbaa !24
  %447 = and i32 %442, 31
  %448 = shl nuw i32 1, %447
  %449 = and i32 %448, %446
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %495, label %547

451:                                              ; preds = %407
  %452 = load ptr, ptr %56, align 8, !tbaa !236
  %453 = icmp eq ptr %452, null
  br i1 %453, label %471, label %454

454:                                              ; preds = %451
  %455 = load ptr, ptr %57, align 8, !tbaa !237
  %456 = sext i32 %409 to i64
  %457 = getelementptr inbounds i32, ptr %455, i64 %456
  %458 = load i32, ptr %457, align 4, !tbaa !24
  %459 = sext i32 %458 to i64
  %460 = getelementptr inbounds %struct.MVert, ptr %452, i64 %459
  store ptr %460, ptr %58, align 8, !tbaa !238
  %461 = getelementptr inbounds %struct.MVert, ptr %452, i64 %459, i32 2
  %462 = load i8, ptr %461, align 2, !tbaa !239
  %463 = and i8 %462, 16
  %464 = icmp eq i8 %463, 0
  br i1 %464, label %465, label %547

465:                                              ; preds = %454
  store ptr %460, ptr %53, align 8, !tbaa !227
  %466 = getelementptr inbounds %struct.MVert, ptr %452, i64 %459, i32 1
  store ptr %466, ptr %59, align 8, !tbaa !241
  %467 = load ptr, ptr %60, align 8, !tbaa !242
  %468 = icmp eq ptr %467, null
  br i1 %468, label %495, label %469

469:                                              ; preds = %465
  %470 = getelementptr inbounds float, ptr %467, i64 %459
  br label %492

471:                                              ; preds = %451
  %472 = load ptr, ptr %61, align 8, !tbaa !243
  %473 = icmp eq ptr %472, null
  %474 = load ptr, ptr %65, align 8
  %475 = select i1 %473, ptr %474, ptr %472
  %476 = select i1 %473, ptr %64, ptr %62
  %477 = getelementptr i8, ptr %475, i64 8
  %478 = load ptr, ptr %477, align 8, !tbaa !244
  store ptr %478, ptr %63, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %476) #10
  %479 = load ptr, ptr %63, align 8, !tbaa !246
  %480 = getelementptr i8, ptr %479, i64 13
  %481 = load i8, ptr %480, align 1, !tbaa !247
  %482 = and i8 %481, 2
  %483 = icmp eq i8 %482, 0
  %484 = load i32, ptr %39, align 4, !tbaa !210
  br i1 %483, label %485, label %547

485:                                              ; preds = %471
  %486 = getelementptr inbounds %struct.BMVert, ptr %479, i64 0, i32 2
  store ptr %486, ptr %53, align 8, !tbaa !227
  %487 = getelementptr inbounds %struct.BMVert, ptr %479, i64 0, i32 3
  store ptr %487, ptr %54, align 8, !tbaa !231
  %488 = load ptr, ptr %479, align 8, !tbaa !249
  %489 = load i32, ptr %66, align 8, !tbaa !251
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds i8, ptr %488, i64 %490
  br label %492

492:                                              ; preds = %469, %485
  %493 = phi ptr [ %491, %485 ], [ %470, %469 ]
  %494 = phi i32 [ %484, %485 ], [ %408, %469 ]
  store ptr %493, ptr %55, align 8, !tbaa !234
  br label %495

495:                                              ; preds = %492, %465, %430, %438
  %496 = phi i32 [ %408, %465 ], [ %408, %430 ], [ %408, %438 ], [ %494, %492 ]
  %497 = load ptr, ptr %366, align 8, !tbaa !80
  %498 = sext i32 %496 to i64
  %499 = getelementptr inbounds [3 x float], ptr %497, i64 %498
  br i1 %367, label %504, label %500

500:                                              ; preds = %495
  %501 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %360, ptr noundef %499, i8 noundef zeroext 1) #10
  %502 = icmp eq i8 %501, 0
  %503 = load i32, ptr %39, align 4, !tbaa !210
  br i1 %502, label %504, label %547

504:                                              ; preds = %495, %500
  %505 = phi i32 [ %496, %495 ], [ %503, %500 ]
  %506 = load float, ptr %499, align 4, !tbaa !20
  %507 = fsub fast float %353, %506
  %508 = getelementptr inbounds float, ptr %499, i64 1
  %509 = fmul fast float %507, %507
  %510 = load <2 x float>, ptr %508, align 4, !tbaa !20
  %511 = fsub fast <2 x float> %355, %510
  %512 = fmul fast <2 x float> %511, %511
  %513 = extractelement <2 x float> %512, i64 0
  %514 = fadd fast float %513, %509
  %515 = extractelement <2 x float> %512, i64 1
  %516 = fadd fast float %514, %515
  %517 = fcmp fast ugt float %516, %351
  br i1 %517, label %547, label %518

518:                                              ; preds = %504
  %519 = load ptr, ptr %368, align 8, !tbaa !307
  %520 = sext i32 %505 to i64
  %521 = getelementptr inbounds [3 x i16], ptr %519, i64 %520
  %522 = load i16, ptr %521, align 2, !tbaa !302
  %523 = sitofp i16 %522 to float
  %524 = fmul fast float %523, 0x3F00002000000000
  %525 = getelementptr inbounds i16, ptr %521, i64 1
  %526 = load <2 x i16>, ptr %525, align 2, !tbaa !302
  %527 = sitofp <2 x i16> %526 to <2 x float>
  %528 = fmul fast <2 x float> %527, <float 0x3F00002000000000, float 0x3F00002000000000>
  %529 = load ptr, ptr %35, align 8, !tbaa !22
  %530 = getelementptr inbounds %struct.StrokeCache, ptr %529, i64 0, i32 33
  %531 = load float, ptr %530, align 4, !tbaa !20
  %532 = fmul fast float %531, %524
  %533 = getelementptr inbounds %struct.StrokeCache, ptr %529, i64 0, i32 33, i64 1
  %534 = load <2 x float>, ptr %533, align 4, !tbaa !20
  %535 = fmul fast <2 x float> %534, %528
  %536 = extractelement <2 x float> %535, i64 0
  %537 = fadd fast float %536, %532
  %538 = extractelement <2 x float> %535, i64 1
  %539 = fadd fast float %537, %538
  %540 = fcmp fast ogt float %539, 0.000000e+00
  %541 = select i1 %540, float %410, float %411
  %542 = fadd fast float %541, %524
  br i1 %540, label %543, label %545

543:                                              ; preds = %518
  %544 = fadd fast <2 x float> %528, %412
  br label %547

545:                                              ; preds = %518
  %546 = fadd fast <2 x float> %528, %413
  br label %547

547:                                              ; preds = %500, %543, %545, %504, %471, %454, %438
  %548 = phi i32 [ %505, %504 ], [ %484, %471 ], [ %408, %454 ], [ %408, %438 ], [ %505, %543 ], [ %505, %545 ], [ %503, %500 ]
  %549 = phi float [ %411, %504 ], [ %411, %471 ], [ %411, %454 ], [ %411, %438 ], [ %411, %543 ], [ %542, %545 ], [ %411, %500 ]
  %550 = phi float [ %410, %504 ], [ %410, %471 ], [ %410, %454 ], [ %410, %438 ], [ %542, %543 ], [ %410, %545 ], [ %410, %500 ]
  %551 = phi <2 x float> [ %412, %504 ], [ %412, %471 ], [ %412, %454 ], [ %412, %438 ], [ %544, %543 ], [ %412, %545 ], [ %412, %500 ]
  %552 = phi <2 x float> [ %413, %504 ], [ %413, %471 ], [ %413, %454 ], [ %413, %438 ], [ %413, %543 ], [ %546, %545 ], [ %413, %500 ]
  %553 = load i32, ptr %51, align 4, !tbaa !226
  %554 = add nsw i32 %553, 1
  store i32 %554, ptr %51, align 4, !tbaa !226
  %555 = add nsw i32 %548, 1
  store i32 %555, ptr %39, align 4, !tbaa !210
  %556 = load i32, ptr %43, align 4, !tbaa !218
  %557 = icmp slt i32 %554, %556
  br i1 %557, label %407, label %558, !llvm.loop !413

558:                                              ; preds = %547
  %559 = load i32, ptr %50, align 8, !tbaa !220
  %560 = load i32, ptr %44, align 8, !tbaa !219
  br label %561

561:                                              ; preds = %558, %397
  %562 = phi i32 [ %398, %397 ], [ %560, %558 ]
  %563 = phi i32 [ %399, %397 ], [ %559, %558 ]
  %564 = phi i32 [ %400, %397 ], [ %555, %558 ]
  %565 = phi i32 [ %401, %397 ], [ %556, %558 ]
  %566 = phi float [ %403, %397 ], [ %549, %558 ]
  %567 = phi float [ %402, %397 ], [ %550, %558 ]
  %568 = phi <2 x float> [ %404, %397 ], [ %551, %558 ]
  %569 = phi <2 x float> [ %405, %397 ], [ %552, %558 ]
  %570 = add nsw i32 %563, 1
  store i32 %570, ptr %50, align 8, !tbaa !220
  %571 = icmp slt i32 %570, %562
  br i1 %571, label %397, label %572, !llvm.loop !414

572:                                              ; preds = %561
  %573 = load i32, ptr %6, align 8, !tbaa !214
  %574 = load i32, ptr %40, align 8, !tbaa !215
  br label %575

575:                                              ; preds = %572, %381
  %576 = phi i32 [ %370, %381 ], [ %574, %572 ]
  %577 = phi i32 [ %372, %381 ], [ %573, %572 ]
  %578 = phi i32 [ %371, %381 ], [ %564, %572 ]
  %579 = phi float [ %374, %381 ], [ %566, %572 ]
  %580 = phi float [ %373, %381 ], [ %567, %572 ]
  %581 = phi <2 x float> [ %375, %381 ], [ %568, %572 ]
  %582 = phi <2 x float> [ %376, %381 ], [ %569, %572 ]
  %583 = add nsw i32 %577, 1
  store i32 %583, ptr %6, align 8, !tbaa !214
  %584 = icmp slt i32 %583, %576
  br i1 %584, label %369, label %585, !llvm.loop !415

585:                                              ; preds = %575, %338
  %586 = phi float [ 0.000000e+00, %338 ], [ %579, %575 ]
  %587 = phi float [ 0.000000e+00, %338 ], [ %580, %575 ]
  %588 = phi <2 x float> [ zeroinitializer, %338 ], [ %581, %575 ]
  %589 = phi <2 x float> [ zeroinitializer, %338 ], [ %582, %575 ]
  %590 = load float, ptr %2, align 4, !tbaa !20
  %591 = fadd fast float %590, %587
  store float %591, ptr %2, align 4, !tbaa !20
  %592 = load <2 x float>, ptr %31, align 4, !tbaa !20
  %593 = fadd fast <2 x float> %592, %588
  store <2 x float> %593, ptr %31, align 4, !tbaa !20
  %594 = fadd fast float %586, %340
  %595 = fadd fast <2 x float> %589, %341
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %6) #10
  %596 = add nuw nsw i64 %339, 1
  %597 = icmp eq i64 %596, %67
  br i1 %597, label %598, label %338, !llvm.loop !412

598:                                              ; preds = %585, %323
  %599 = phi float [ %329, %323 ], [ %591, %585 ]
  %600 = phi float [ %332, %323 ], [ %594, %585 ]
  %601 = phi <2 x float> [ %331, %323 ], [ %593, %585 ]
  %602 = phi <2 x float> [ %333, %323 ], [ %595, %585 ]
  %603 = fcmp fast une float %599, 0.000000e+00
  %604 = extractelement <2 x float> %601, i64 0
  %605 = fcmp fast une float %604, 0.000000e+00
  %606 = select i1 %603, i1 true, i1 %605
  %607 = extractelement <2 x float> %601, i64 1
  %608 = fcmp fast une float %607, 0.000000e+00
  %609 = select i1 %606, i1 true, i1 %608
  br i1 %609, label %613, label %610

610:                                              ; preds = %598, %29
  %611 = phi float [ 0.000000e+00, %29 ], [ %600, %598 ]
  %612 = phi <2 x float> [ zeroinitializer, %29 ], [ %602, %598 ]
  br label %613

613:                                              ; preds = %598, %610
  %614 = phi float [ %599, %598 ], [ %611, %610 ]
  %615 = phi <2 x float> [ %601, %598 ], [ %612, %610 ]
  %616 = fmul fast float %614, %614
  %617 = fmul fast <2 x float> %615, %615
  %618 = extractelement <2 x float> %617, i64 0
  %619 = fadd fast float %618, %616
  %620 = extractelement <2 x float> %617, i64 1
  %621 = fadd fast float %619, %620
  %622 = fcmp fast ogt float %621, 0x38AA95A5C0000000
  br i1 %622, label %623, label %630

623:                                              ; preds = %613
  %624 = call fast float @llvm.sqrt.f32(float %621)
  %625 = fdiv fast float 1.000000e+00, %624
  %626 = fmul fast float %625, %614
  %627 = insertelement <2 x float> poison, float %625, i64 0
  %628 = shufflevector <2 x float> %627, <2 x float> poison, <2 x i32> zeroinitializer
  %629 = fmul fast <2 x float> %628, %615
  br label %630

630:                                              ; preds = %613, %623
  %631 = phi float [ %626, %623 ], [ 0.000000e+00, %613 ]
  %632 = phi <2 x float> [ %629, %623 ], [ zeroinitializer, %613 ]
  store float %631, ptr %2, align 4
  store <2 x float> %632, ptr %31, align 4
  ret void
}

declare zeroext i8 @ED_view3d_clipping_test(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

declare void @rotate_v3_v3v3fl(ptr noundef, ptr noundef, ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

declare void @normalize_m4(ptr noundef) local_unnamed_addr #3

declare void @scale_m4_fl(ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

declare void @mul_m4_m4m4(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare nofpclass(nan inf) float @ED_view3d_calc_zfac(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @ED_view3d_win_to_delta(ptr noundef, ptr noundef, ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

declare ptr @BKE_pbvh_node_add_proxy(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc nofpclass(nan inf) float @tex_strength(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2, float noundef nofpclass(nan inf) %3, ptr noundef readonly %4, ptr nocapture noundef readonly %5, float noundef nofpclass(nan inf) %6) unnamed_addr #2 {
  %8 = alloca [4 x float], align 16
  %9 = alloca [3 x float], align 4
  %10 = alloca [2 x float], align 8
  %11 = alloca [3 x float], align 8
  %12 = getelementptr inbounds %struct.SculptSession, ptr %0, i64 0, i32 28
  %13 = load ptr, ptr %12, align 8, !tbaa !22
  %14 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 22
  %15 = load ptr, ptr %14, align 8, !tbaa !172
  %16 = load ptr, ptr %15, align 8, !tbaa !207
  %17 = getelementptr inbounds %struct.Brush, ptr %1, i64 0, i32 3
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #10
  %18 = getelementptr inbounds %struct.Brush, ptr %1, i64 0, i32 3, i32 5
  %19 = load ptr, ptr %18, align 8, !tbaa !147
  %20 = icmp eq ptr %19, null
  br i1 %20, label %80, label %21

21:                                               ; preds = %7
  %22 = getelementptr inbounds %struct.Brush, ptr %1, i64 0, i32 3, i32 20
  %23 = load i8, ptr %22, align 4, !tbaa !416
  %24 = icmp eq i8 %23, 2
  br i1 %24, label %25, label %29

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.SculptSession, ptr %0, i64 0, i32 25
  %27 = load ptr, ptr %26, align 8, !tbaa !155
  %28 = call fast nofpclass(nan inf) float @BKE_brush_sample_tex_3D(ptr noundef %16, ptr noundef nonnull %1, ptr noundef %2, ptr noundef nonnull %8, i32 noundef 0, ptr noundef %27) #10
  br label %80

29:                                               ; preds = %21
  %30 = getelementptr inbounds %struct.SculptSession, ptr %0, i64 0, i32 23
  %31 = load ptr, ptr %30, align 8, !tbaa !154
  %32 = icmp eq ptr %31, null
  br i1 %32, label %80, label %33

33:                                               ; preds = %29
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %9) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #10
  %34 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 31
  %35 = load i32, ptr %34, align 8, !tbaa !277
  %36 = trunc i32 %35 to i8
  call void @flip_v3_v3(ptr noundef nonnull %9, ptr noundef %2, i8 noundef zeroext %36) #10
  %37 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 38
  %38 = load i32, ptr %37, align 8, !tbaa !278
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 40
  call void @mul_m4_v3(ptr noundef nonnull %41, ptr noundef nonnull %9) #10
  br label %42

42:                                               ; preds = %40, %33
  %43 = load ptr, ptr %14, align 8, !tbaa !172
  %44 = getelementptr inbounds %struct.ViewContext, ptr %43, i64 0, i32 3
  %45 = load ptr, ptr %44, align 8, !tbaa !72
  %46 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 21
  call void @ED_view3d_project_float_v2_m4(ptr noundef %45, ptr noundef nonnull %9, ptr noundef nonnull %10, ptr noundef nonnull %46) #10
  %47 = load i8, ptr %22, align 4, !tbaa !416
  %48 = icmp eq i8 %47, 3
  br i1 %48, label %49, label %72

49:                                               ; preds = %42
  %50 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 36
  call void @mul_m4_v3(ptr noundef nonnull %50, ptr noundef nonnull %9) #10
  %51 = load float, ptr %9, align 4, !tbaa !20
  %52 = getelementptr inbounds [3 x float], ptr %9, i64 0, i64 1
  %53 = load float, ptr %52, align 4, !tbaa !20
  %54 = getelementptr inbounds %struct.Brush, ptr %1, i64 0, i32 3, i32 12
  %55 = load float, ptr %54, align 8, !tbaa !20
  %56 = fmul fast float %55, %51
  %57 = getelementptr inbounds %struct.Brush, ptr %1, i64 0, i32 3, i32 12, i64 1
  %58 = load float, ptr %57, align 4, !tbaa !20
  %59 = fmul fast float %58, %53
  %60 = getelementptr inbounds %struct.Brush, ptr %1, i64 0, i32 3, i32 11
  %61 = load float, ptr %60, align 4, !tbaa !20
  %62 = fadd fast float %61, %56
  %63 = getelementptr inbounds %struct.Brush, ptr %1, i64 0, i32 3, i32 11, i64 1
  %64 = load float, ptr %63, align 4, !tbaa !20
  %65 = fadd fast float %64, %59
  %66 = getelementptr inbounds %struct.SculptSession, ptr %0, i64 0, i32 25
  %67 = load ptr, ptr %66, align 8, !tbaa !155
  %68 = call fast nofpclass(nan inf) float @paint_get_tex_pixel(ptr noundef nonnull %17, float noundef nofpclass(nan inf) %62, float noundef nofpclass(nan inf) %65, ptr noundef %67, i32 noundef 0) #10
  %69 = getelementptr inbounds %struct.Brush, ptr %1, i64 0, i32 42
  %70 = load float, ptr %69, align 4, !tbaa !417
  %71 = fadd fast float %70, %68
  br label %78

72:                                               ; preds = %42
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %11) #10
  %73 = load <2 x float>, ptr %10, align 8, !tbaa !20
  store <2 x float> %73, ptr %11, align 8, !tbaa !20
  %74 = getelementptr inbounds float, ptr %11, i64 2
  store float 0.000000e+00, ptr %74, align 8, !tbaa !20
  %75 = getelementptr inbounds %struct.SculptSession, ptr %0, i64 0, i32 25
  %76 = load ptr, ptr %75, align 8, !tbaa !155
  %77 = call fast nofpclass(nan inf) float @BKE_brush_sample_tex_3D(ptr noundef %16, ptr noundef nonnull %1, ptr noundef nonnull %11, ptr noundef nonnull %8, i32 noundef 0, ptr noundef %76) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %11) #10
  br label %78

78:                                               ; preds = %72, %49
  %79 = phi float [ %71, %49 ], [ %77, %72 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %9) #10
  br label %80

80:                                               ; preds = %7, %25, %78, %29
  %81 = phi float [ %28, %25 ], [ %79, %78 ], [ 1.000000e+00, %29 ], [ 1.000000e+00, %7 ]
  %82 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 11
  %83 = load float, ptr %82, align 8, !tbaa !198
  %84 = call fast nofpclass(nan inf) float @BKE_brush_curve_strength(ptr noundef nonnull %1, float noundef nofpclass(nan inf) %3, float noundef nofpclass(nan inf) %83) #10
  %85 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 33
  %86 = getelementptr i8, ptr %1, i64 1856
  %87 = load i32, ptr %86, align 8, !tbaa !180
  %88 = and i32 %87, 134217728
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %124, label %90

90:                                               ; preds = %80
  %91 = icmp eq ptr %4, null
  br i1 %91, label %108, label %92

92:                                               ; preds = %90
  %93 = load i16, ptr %4, align 2, !tbaa !302
  %94 = sitofp i16 %93 to float
  %95 = getelementptr inbounds i16, ptr %4, i64 1
  %96 = load float, ptr %85, align 4, !tbaa !20
  %97 = fmul fast float %96, %94
  %98 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 33, i64 1
  %99 = load <2 x i16>, ptr %95, align 2, !tbaa !302
  %100 = sitofp <2 x i16> %99 to <2 x float>
  %101 = load <2 x float>, ptr %98, align 4, !tbaa !20
  %102 = fmul fast <2 x float> %101, %100
  %103 = extractelement <2 x float> %102, i64 0
  %104 = fadd fast float %103, %97
  %105 = extractelement <2 x float> %102, i64 1
  %106 = fadd fast float %104, %105
  %107 = fmul fast float %106, 0x3F00002000000000
  br label %121

108:                                              ; preds = %90
  %109 = load float, ptr %5, align 4, !tbaa !20
  %110 = load float, ptr %85, align 4, !tbaa !20
  %111 = fmul fast float %110, %109
  %112 = getelementptr inbounds float, ptr %5, i64 1
  %113 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 33, i64 1
  %114 = load <2 x float>, ptr %112, align 4, !tbaa !20
  %115 = load <2 x float>, ptr %113, align 4, !tbaa !20
  %116 = fmul fast <2 x float> %115, %114
  %117 = extractelement <2 x float> %116, i64 0
  %118 = fadd fast float %117, %111
  %119 = extractelement <2 x float> %116, i64 1
  %120 = fadd fast float %118, %119
  br label %121

121:                                              ; preds = %108, %92
  %122 = phi float [ %107, %92 ], [ %120, %108 ]
  %123 = call fast float @llvm.maxnum.f32(float %122, float 0.000000e+00)
  br label %124

124:                                              ; preds = %80, %121
  %125 = phi float [ %123, %121 ], [ 1.000000e+00, %80 ]
  %126 = fsub fast float 1.000000e+00, %6
  %127 = fmul fast float %81, %126
  %128 = fmul fast float %127, %84
  %129 = fmul fast float %128, %125
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #10
  ret float %129
}

declare nofpclass(nan inf) float @BKE_brush_sample_tex_3D(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare void @ED_view3d_project_float_v2_m4(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare nofpclass(nan inf) float @paint_get_tex_pixel(ptr noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), ptr noundef, i32 noundef) local_unnamed_addr #3

declare nofpclass(nan inf) float @BKE_brush_curve_strength(ptr noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #3

declare void @axis_angle_normalized_to_mat3(ptr noundef, ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

declare void @mul_v3_m3v3(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @BKE_pbvh_node_layer_disp_get(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @calc_sculpt_plane(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3, ptr noundef %4, ptr noundef %5) unnamed_addr #2 {
  %7 = alloca %struct.PBVHVertexIter, align 8
  %8 = alloca %struct.PBVHVertexIter, align 8
  %9 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !5
  %11 = tail call ptr @BKE_paint_brush(ptr noundef %0) #10
  %12 = getelementptr inbounds %struct.SculptSession, ptr %10, i64 0, i32 28
  %13 = load ptr, ptr %12, align 8, !tbaa !22
  %14 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 31
  %15 = load i32, ptr %14, align 8, !tbaa !277
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %1404

17:                                               ; preds = %6
  %18 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 38
  %19 = load i32, ptr %18, align 8, !tbaa !278
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %1404

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 20
  %23 = load i8, ptr %22, align 4, !tbaa !188
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.Brush, ptr %11, i64 0, i32 16
  %27 = load i32, ptr %26, align 8, !tbaa !180
  %28 = and i32 %27, 32768
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %1404

30:                                               ; preds = %25, %21
  %31 = getelementptr inbounds %struct.Brush, ptr %11, i64 0, i32 28
  %32 = load i32, ptr %31, align 8, !tbaa !291
  switch i32 %32, label %780 [
    i32 1, label %33
    i32 2, label %42
    i32 3, label %44
    i32 4, label %46
    i32 0, label %48
  ]

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 32
  %35 = load float, ptr %34, align 4, !tbaa !20
  store float %35, ptr %4, align 4, !tbaa !20
  %36 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 32, i64 1
  %37 = load float, ptr %36, align 4, !tbaa !20
  %38 = getelementptr inbounds float, ptr %4, i64 1
  store float %37, ptr %38, align 4, !tbaa !20
  %39 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 32, i64 2
  %40 = load float, ptr %39, align 4, !tbaa !20
  %41 = getelementptr inbounds float, ptr %4, i64 2
  store float %40, ptr %41, align 4, !tbaa !20
  br label %780

42:                                               ; preds = %30
  %43 = getelementptr inbounds float, ptr %4, i64 2
  store float 0.000000e+00, ptr %43, align 4, !tbaa !20
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr %4, align 4, !tbaa !20
  br label %780

44:                                               ; preds = %30
  %45 = getelementptr inbounds float, ptr %4, i64 2
  store float 0.000000e+00, ptr %45, align 4, !tbaa !20
  store <2 x float> <float 0.000000e+00, float 1.000000e+00>, ptr %4, align 4, !tbaa !20
  br label %780

46:                                               ; preds = %30
  store <2 x float> zeroinitializer, ptr %4, align 4, !tbaa !20
  %47 = getelementptr inbounds float, ptr %4, i64 2
  store float 1.000000e+00, ptr %47, align 4, !tbaa !20
  br label %780

48:                                               ; preds = %30
  %49 = load ptr, ptr %9, align 8, !tbaa !5
  store <2 x float> zeroinitializer, ptr %4, align 4, !tbaa !20
  %50 = getelementptr inbounds float, ptr %4, i64 2
  store float 0.000000e+00, ptr %50, align 4, !tbaa !20
  store <2 x float> zeroinitializer, ptr %5, align 4, !tbaa !20
  %51 = getelementptr inbounds float, ptr %5, i64 2
  store float 0.000000e+00, ptr %51, align 4, !tbaa !20
  %52 = icmp sgt i32 %3, 0
  br i1 %52, label %53, label %717

53:                                               ; preds = %48
  %54 = getelementptr i8, ptr %49, i64 192
  %55 = getelementptr inbounds %struct.SculptSession, ptr %49, i64 0, i32 15
  %56 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 5
  %57 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 12
  %58 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 6
  %59 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 13
  %60 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 1
  %61 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 2
  %62 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 11
  %63 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 7
  %64 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 9
  %65 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 10
  %66 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 15
  %67 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 4
  %68 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 3
  %69 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 8
  %70 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 24
  %71 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 26
  %72 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 27
  %73 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 14
  %74 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 16
  %75 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 22
  %76 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 25
  %77 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 17
  %78 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 18, i32 0, i32 1
  %79 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 18
  %80 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 23
  %81 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 19
  %82 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 19, i32 0, i32 1
  %83 = getelementptr inbounds %struct.PBVHVertexIter, ptr %8, i64 0, i32 21
  %84 = zext i32 %3 to i64
  br label %85

85:                                               ; preds = %690, %53
  %86 = phi i64 [ 0, %53 ], [ %715, %690 ]
  %87 = phi i32 [ 0, %53 ], [ %714, %690 ]
  %88 = phi i32 [ 0, %53 ], [ %713, %690 ]
  %89 = phi float [ 0.000000e+00, %53 ], [ %706, %690 ]
  %90 = phi float [ 0.000000e+00, %53 ], [ %712, %690 ]
  %91 = phi <2 x float> [ zeroinitializer, %53 ], [ %711, %690 ]
  %92 = phi <2 x float> [ zeroinitializer, %53 ], [ %705, %690 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %8) #10
  %93 = getelementptr inbounds ptr, ptr %2, i64 %86
  %94 = load ptr, ptr %93, align 8, !tbaa !31
  %95 = call ptr @sculpt_undo_push_node(ptr noundef %1, ptr noundef %94, i32 noundef 0) #10
  %96 = load ptr, ptr %54, align 8, !tbaa !22
  %97 = getelementptr inbounds %struct.StrokeCache, ptr %96, i64 0, i32 22
  %98 = load ptr, ptr %97, align 8, !tbaa !172
  %99 = getelementptr inbounds %struct.ViewContext, ptr %98, i64 0, i32 5
  %100 = load ptr, ptr %99, align 8, !tbaa !174
  %101 = getelementptr inbounds %struct.StrokeCache, ptr %96, i64 0, i32 12
  %102 = load float, ptr %101, align 4, !tbaa !199
  %103 = getelementptr inbounds %struct.StrokeCache, ptr %96, i64 0, i32 14
  %104 = load float, ptr %103, align 4, !tbaa !20
  %105 = getelementptr inbounds %struct.StrokeCache, ptr %96, i64 0, i32 14, i64 1
  %106 = load <2 x float>, ptr %105, align 4, !tbaa !20
  %107 = getelementptr inbounds %struct.RegionView3D, ptr %100, i64 0, i32 32
  %108 = load i16, ptr %107, align 2, !tbaa !293
  %109 = and i16 %108, 4
  %110 = icmp eq i16 %109, 0
  %111 = select i1 %110, ptr null, ptr %100
  %112 = getelementptr inbounds %struct.StrokeCache, ptr %96, i64 0, i32 41
  %113 = load i8, ptr %112, align 4, !tbaa !46
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %393, label %115

115:                                              ; preds = %85
  %116 = getelementptr inbounds %struct.SculptUndoNode, ptr %95, i64 0, i32 5
  %117 = load ptr, ptr %116, align 8, !tbaa !80
  %118 = icmp eq ptr %117, null
  br i1 %118, label %393, label %119

119:                                              ; preds = %115
  %120 = load ptr, ptr %55, align 8, !tbaa !21
  %121 = load ptr, ptr %93, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %120, ptr noundef %121, ptr noundef nonnull %8, i32 noundef 1) #10
  store i32 0, ptr %56, align 4, !tbaa !210
  store i32 0, ptr %8, align 8, !tbaa !214
  %122 = load i32, ptr %57, align 8, !tbaa !215
  %123 = icmp sgt i32 %122, 0
  br i1 %123, label %124, label %690

124:                                              ; preds = %119
  %125 = icmp eq ptr %111, null
  %126 = getelementptr inbounds %struct.SculptUndoNode, ptr %95, i64 0, i32 7
  br label %127

127:                                              ; preds = %377, %124
  %128 = phi i32 [ %122, %124 ], [ %378, %377 ]
  %129 = phi i32 [ 0, %124 ], [ %380, %377 ]
  %130 = phi i32 [ 0, %124 ], [ %386, %377 ]
  %131 = phi i32 [ 0, %124 ], [ %385, %377 ]
  %132 = phi i32 [ 0, %124 ], [ %391, %377 ]
  %133 = phi float [ 0.000000e+00, %124 ], [ %384, %377 ]
  %134 = phi float [ 0.000000e+00, %124 ], [ %383, %377 ]
  %135 = phi float [ 0.000000e+00, %124 ], [ %382, %377 ]
  %136 = phi float [ 0.000000e+00, %124 ], [ %381, %377 ]
  %137 = phi <2 x float> [ zeroinitializer, %124 ], [ %387, %377 ]
  %138 = phi <2 x float> [ zeroinitializer, %124 ], [ %388, %377 ]
  %139 = phi <2 x float> [ zeroinitializer, %124 ], [ %389, %377 ]
  %140 = phi <2 x float> [ zeroinitializer, %124 ], [ %390, %377 ]
  %141 = load ptr, ptr %58, align 8, !tbaa !216
  %142 = icmp eq ptr %141, null
  br i1 %142, label %143, label %145

143:                                              ; preds = %127
  %144 = load i32, ptr %66, align 8, !tbaa !217
  store i32 %144, ptr %60, align 4, !tbaa !218
  store i32 1, ptr %61, align 8, !tbaa !219
  store i32 0, ptr %67, align 8, !tbaa !220
  br label %158

145:                                              ; preds = %127
  %146 = load i32, ptr %59, align 4, !tbaa !221
  store i32 %146, ptr %60, align 4, !tbaa !218
  store i32 %146, ptr %61, align 8, !tbaa !219
  %147 = load ptr, ptr %62, align 8, !tbaa !222
  %148 = sext i32 %132 to i64
  %149 = getelementptr inbounds i32, ptr %147, i64 %148
  %150 = load i32, ptr %149, align 4, !tbaa !24
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds ptr, ptr %141, i64 %151
  %153 = load ptr, ptr %152, align 8, !tbaa !31
  store ptr %153, ptr %63, align 8, !tbaa !223
  %154 = load ptr, ptr %64, align 8, !tbaa !224
  %155 = getelementptr inbounds ptr, ptr %154, i64 %151
  %156 = load ptr, ptr %155, align 8, !tbaa !31
  store ptr %156, ptr %65, align 8, !tbaa !225
  store i32 0, ptr %67, align 8, !tbaa !220
  %157 = icmp sgt i32 %146, 0
  br i1 %157, label %158, label %377

158:                                              ; preds = %145, %143
  %159 = phi i32 [ %146, %145 ], [ 1, %143 ]
  %160 = phi i32 [ %146, %145 ], [ %144, %143 ]
  br label %161

161:                                              ; preds = %158, %357
  %162 = phi i32 [ %358, %357 ], [ %159, %158 ]
  %163 = phi i32 [ %372, %357 ], [ 0, %158 ]
  %164 = phi i32 [ %360, %357 ], [ %129, %158 ]
  %165 = phi i32 [ %361, %357 ], [ %160, %158 ]
  %166 = phi i32 [ %367, %357 ], [ %130, %158 ]
  %167 = phi i32 [ %366, %357 ], [ %131, %158 ]
  %168 = phi float [ %365, %357 ], [ %133, %158 ]
  %169 = phi float [ %364, %357 ], [ %134, %158 ]
  %170 = phi float [ %363, %357 ], [ %135, %158 ]
  %171 = phi float [ %362, %357 ], [ %136, %158 ]
  %172 = phi <2 x float> [ %368, %357 ], [ %137, %158 ]
  %173 = phi <2 x float> [ %369, %357 ], [ %138, %158 ]
  %174 = phi <2 x float> [ %370, %357 ], [ %139, %158 ]
  %175 = phi <2 x float> [ %371, %357 ], [ %140, %158 ]
  store i32 0, ptr %68, align 4, !tbaa !226
  %176 = icmp sgt i32 %165, 0
  br i1 %176, label %177, label %357

177:                                              ; preds = %161, %337
  %178 = phi i32 [ %351, %337 ], [ %164, %161 ]
  %179 = phi i32 [ %350, %337 ], [ 0, %161 ]
  %180 = phi i32 [ %344, %337 ], [ %166, %161 ]
  %181 = phi i32 [ %343, %337 ], [ %167, %161 ]
  %182 = phi float [ %342, %337 ], [ %168, %161 ]
  %183 = phi float [ %341, %337 ], [ %169, %161 ]
  %184 = phi float [ %340, %337 ], [ %170, %161 ]
  %185 = phi float [ %339, %337 ], [ %171, %161 ]
  %186 = phi <2 x float> [ %345, %337 ], [ %172, %161 ]
  %187 = phi <2 x float> [ %346, %337 ], [ %173, %161 ]
  %188 = phi <2 x float> [ %347, %337 ], [ %174, %161 ]
  %189 = phi <2 x float> [ %348, %337 ], [ %175, %161 ]
  %190 = load ptr, ptr %63, align 8, !tbaa !223
  %191 = icmp eq ptr %190, null
  br i1 %191, label %227, label %192

192:                                              ; preds = %177
  store ptr %190, ptr %70, align 8, !tbaa !227
  %193 = load ptr, ptr %69, align 8, !tbaa !228
  %194 = getelementptr i8, ptr %193, i64 20
  %195 = load i32, ptr %194, align 4, !tbaa !229
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds i8, ptr %190, i64 %196
  store ptr %197, ptr %71, align 8, !tbaa !231
  %198 = getelementptr inbounds %struct.CCGKey, ptr %193, i64 0, i32 9
  %199 = load i32, ptr %198, align 4, !tbaa !232
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %206, label %201

201:                                              ; preds = %192
  %202 = getelementptr i8, ptr %193, i64 24
  %203 = load i32, ptr %202, align 4, !tbaa !233
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds i8, ptr %190, i64 %204
  br label %206

206:                                              ; preds = %201, %192
  %207 = phi ptr [ %205, %201 ], [ null, %192 ]
  store ptr %207, ptr %72, align 8, !tbaa !234
  %208 = getelementptr i8, ptr %193, i64 4
  %209 = load i32, ptr %208, align 4, !tbaa !235
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds i8, ptr %190, i64 %210
  store ptr %211, ptr %63, align 8, !tbaa !223
  %212 = load ptr, ptr %65, align 8, !tbaa !225
  %213 = icmp eq ptr %212, null
  br i1 %213, label %271, label %214

214:                                              ; preds = %206
  %215 = load i32, ptr %67, align 8, !tbaa !220
  %216 = load i32, ptr %59, align 4, !tbaa !221
  %217 = mul nsw i32 %216, %215
  %218 = add nsw i32 %217, %179
  %219 = ashr i32 %218, 5
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds i32, ptr %212, i64 %220
  %222 = load i32, ptr %221, align 4, !tbaa !24
  %223 = and i32 %218, 31
  %224 = shl nuw i32 1, %223
  %225 = and i32 %224, %222
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %271, label %337

227:                                              ; preds = %177
  %228 = load ptr, ptr %73, align 8, !tbaa !236
  %229 = icmp eq ptr %228, null
  br i1 %229, label %247, label %230

230:                                              ; preds = %227
  %231 = load ptr, ptr %74, align 8, !tbaa !237
  %232 = sext i32 %179 to i64
  %233 = getelementptr inbounds i32, ptr %231, i64 %232
  %234 = load i32, ptr %233, align 4, !tbaa !24
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds %struct.MVert, ptr %228, i64 %235
  store ptr %236, ptr %75, align 8, !tbaa !238
  %237 = getelementptr inbounds %struct.MVert, ptr %228, i64 %235, i32 2
  %238 = load i8, ptr %237, align 2, !tbaa !239
  %239 = and i8 %238, 16
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %241, label %337

241:                                              ; preds = %230
  store ptr %236, ptr %70, align 8, !tbaa !227
  %242 = getelementptr inbounds %struct.MVert, ptr %228, i64 %235, i32 1
  store ptr %242, ptr %76, align 8, !tbaa !241
  %243 = load ptr, ptr %77, align 8, !tbaa !242
  %244 = icmp eq ptr %243, null
  br i1 %244, label %271, label %245

245:                                              ; preds = %241
  %246 = getelementptr inbounds float, ptr %243, i64 %235
  br label %268

247:                                              ; preds = %227
  %248 = load ptr, ptr %78, align 8, !tbaa !243
  %249 = icmp eq ptr %248, null
  %250 = load ptr, ptr %82, align 8
  %251 = select i1 %249, ptr %250, ptr %248
  %252 = select i1 %249, ptr %81, ptr %79
  %253 = getelementptr i8, ptr %251, i64 8
  %254 = load ptr, ptr %253, align 8, !tbaa !244
  store ptr %254, ptr %80, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %252) #10
  %255 = load ptr, ptr %80, align 8, !tbaa !246
  %256 = getelementptr i8, ptr %255, i64 13
  %257 = load i8, ptr %256, align 1, !tbaa !247
  %258 = and i8 %257, 2
  %259 = icmp eq i8 %258, 0
  %260 = load i32, ptr %56, align 4, !tbaa !210
  br i1 %259, label %261, label %337

261:                                              ; preds = %247
  %262 = getelementptr inbounds %struct.BMVert, ptr %255, i64 0, i32 2
  store ptr %262, ptr %70, align 8, !tbaa !227
  %263 = getelementptr inbounds %struct.BMVert, ptr %255, i64 0, i32 3
  store ptr %263, ptr %71, align 8, !tbaa !231
  %264 = load ptr, ptr %255, align 8, !tbaa !249
  %265 = load i32, ptr %83, align 8, !tbaa !251
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds i8, ptr %264, i64 %266
  br label %268

268:                                              ; preds = %261, %245
  %269 = phi ptr [ %267, %261 ], [ %246, %245 ]
  %270 = phi i32 [ %260, %261 ], [ %178, %245 ]
  store ptr %269, ptr %72, align 8, !tbaa !234
  br label %271

271:                                              ; preds = %268, %241, %214, %206
  %272 = phi i32 [ %178, %241 ], [ %178, %206 ], [ %178, %214 ], [ %270, %268 ]
  %273 = load ptr, ptr %116, align 8, !tbaa !80
  %274 = sext i32 %272 to i64
  %275 = getelementptr inbounds [3 x float], ptr %273, i64 %274
  br i1 %125, label %280, label %276

276:                                              ; preds = %271
  %277 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %111, ptr noundef %275, i8 noundef zeroext 1) #10
  %278 = icmp eq i8 %277, 0
  %279 = load i32, ptr %56, align 4, !tbaa !210
  br i1 %278, label %280, label %337

280:                                              ; preds = %276, %271
  %281 = phi i32 [ %272, %271 ], [ %279, %276 ]
  %282 = load float, ptr %275, align 4, !tbaa !20
  %283 = fsub fast float %104, %282
  %284 = getelementptr inbounds float, ptr %275, i64 1
  %285 = fmul fast float %283, %283
  %286 = load <2 x float>, ptr %284, align 4, !tbaa !20
  %287 = fsub fast <2 x float> %106, %286
  %288 = fmul fast <2 x float> %287, %287
  %289 = extractelement <2 x float> %288, i64 0
  %290 = fadd fast float %289, %285
  %291 = extractelement <2 x float> %288, i64 1
  %292 = fadd fast float %290, %291
  %293 = fcmp fast ugt float %292, %102
  br i1 %293, label %337, label %294

294:                                              ; preds = %280
  %295 = load ptr, ptr %126, align 8, !tbaa !307
  %296 = sext i32 %281 to i64
  %297 = getelementptr inbounds [3 x i16], ptr %295, i64 %296
  %298 = load <2 x i16>, ptr %297, align 2, !tbaa !302
  %299 = sitofp <2 x i16> %298 to <2 x float>
  %300 = fmul fast <2 x float> %299, <float 0x3F00002000000000, float 0x3F00002000000000>
  %301 = getelementptr inbounds i16, ptr %297, i64 2
  %302 = load i16, ptr %301, align 2, !tbaa !302
  %303 = sitofp i16 %302 to float
  %304 = fmul fast float %303, 0x3F00002000000000
  %305 = load ptr, ptr %54, align 8, !tbaa !22
  %306 = getelementptr inbounds %struct.StrokeCache, ptr %305, i64 0, i32 33
  %307 = load float, ptr %306, align 4, !tbaa !20
  %308 = extractelement <2 x float> %300, i64 0
  %309 = fmul fast float %307, %308
  %310 = getelementptr inbounds %struct.StrokeCache, ptr %305, i64 0, i32 33, i64 1
  %311 = load <2 x float>, ptr %310, align 4, !tbaa !20
  %312 = shufflevector <2 x float> %300, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %313 = insertelement <2 x float> %312, float %304, i64 1
  %314 = fmul fast <2 x float> %311, %313
  %315 = extractelement <2 x float> %314, i64 0
  %316 = fadd fast float %315, %309
  %317 = extractelement <2 x float> %314, i64 1
  %318 = fadd fast float %316, %317
  %319 = fcmp fast ogt float %318, 0.000000e+00
  %320 = load ptr, ptr %116, align 8, !tbaa !80
  %321 = getelementptr inbounds [3 x float], ptr %320, i64 %296
  %322 = load <2 x float>, ptr %321, align 4, !tbaa !20
  %323 = getelementptr inbounds float, ptr %321, i64 2
  %324 = load float, ptr %323, align 4, !tbaa !20
  br i1 %319, label %325, label %331

325:                                              ; preds = %294
  %326 = fadd fast <2 x float> %300, %188
  %327 = fadd fast float %304, %185
  %328 = fadd fast <2 x float> %322, %189
  %329 = fadd fast float %324, %183
  %330 = add nsw i32 %181, 1
  br label %337

331:                                              ; preds = %294
  %332 = fadd fast <2 x float> %300, %187
  %333 = fadd fast float %304, %184
  %334 = fadd fast <2 x float> %322, %186
  %335 = fadd fast float %324, %182
  %336 = add nsw i32 %180, 1
  br label %337

337:                                              ; preds = %331, %325, %280, %276, %247, %230, %214
  %338 = phi i32 [ %281, %280 ], [ %260, %247 ], [ %178, %230 ], [ %178, %214 ], [ %281, %325 ], [ %281, %331 ], [ %279, %276 ]
  %339 = phi float [ %185, %280 ], [ %185, %247 ], [ %185, %230 ], [ %185, %214 ], [ %327, %325 ], [ %185, %331 ], [ %185, %276 ]
  %340 = phi float [ %184, %280 ], [ %184, %247 ], [ %184, %230 ], [ %184, %214 ], [ %184, %325 ], [ %333, %331 ], [ %184, %276 ]
  %341 = phi float [ %183, %280 ], [ %183, %247 ], [ %183, %230 ], [ %183, %214 ], [ %329, %325 ], [ %183, %331 ], [ %183, %276 ]
  %342 = phi float [ %182, %280 ], [ %182, %247 ], [ %182, %230 ], [ %182, %214 ], [ %182, %325 ], [ %335, %331 ], [ %182, %276 ]
  %343 = phi i32 [ %181, %280 ], [ %181, %247 ], [ %181, %230 ], [ %181, %214 ], [ %330, %325 ], [ %181, %331 ], [ %181, %276 ]
  %344 = phi i32 [ %180, %280 ], [ %180, %247 ], [ %180, %230 ], [ %180, %214 ], [ %180, %325 ], [ %336, %331 ], [ %180, %276 ]
  %345 = phi <2 x float> [ %186, %280 ], [ %186, %247 ], [ %186, %230 ], [ %186, %214 ], [ %186, %325 ], [ %334, %331 ], [ %186, %276 ]
  %346 = phi <2 x float> [ %187, %280 ], [ %187, %247 ], [ %187, %230 ], [ %187, %214 ], [ %187, %325 ], [ %332, %331 ], [ %187, %276 ]
  %347 = phi <2 x float> [ %188, %280 ], [ %188, %247 ], [ %188, %230 ], [ %188, %214 ], [ %326, %325 ], [ %188, %331 ], [ %188, %276 ]
  %348 = phi <2 x float> [ %189, %280 ], [ %189, %247 ], [ %189, %230 ], [ %189, %214 ], [ %328, %325 ], [ %189, %331 ], [ %189, %276 ]
  %349 = load i32, ptr %68, align 4, !tbaa !226
  %350 = add nsw i32 %349, 1
  store i32 %350, ptr %68, align 4, !tbaa !226
  %351 = add nsw i32 %338, 1
  store i32 %351, ptr %56, align 4, !tbaa !210
  %352 = load i32, ptr %60, align 4, !tbaa !218
  %353 = icmp slt i32 %350, %352
  br i1 %353, label %177, label %354, !llvm.loop !418

354:                                              ; preds = %337
  %355 = load i32, ptr %67, align 8, !tbaa !220
  %356 = load i32, ptr %61, align 8, !tbaa !219
  br label %357

357:                                              ; preds = %354, %161
  %358 = phi i32 [ %162, %161 ], [ %356, %354 ]
  %359 = phi i32 [ %163, %161 ], [ %355, %354 ]
  %360 = phi i32 [ %164, %161 ], [ %351, %354 ]
  %361 = phi i32 [ %165, %161 ], [ %352, %354 ]
  %362 = phi float [ %171, %161 ], [ %339, %354 ]
  %363 = phi float [ %170, %161 ], [ %340, %354 ]
  %364 = phi float [ %169, %161 ], [ %341, %354 ]
  %365 = phi float [ %168, %161 ], [ %342, %354 ]
  %366 = phi i32 [ %167, %161 ], [ %343, %354 ]
  %367 = phi i32 [ %166, %161 ], [ %344, %354 ]
  %368 = phi <2 x float> [ %172, %161 ], [ %345, %354 ]
  %369 = phi <2 x float> [ %173, %161 ], [ %346, %354 ]
  %370 = phi <2 x float> [ %174, %161 ], [ %347, %354 ]
  %371 = phi <2 x float> [ %175, %161 ], [ %348, %354 ]
  %372 = add nsw i32 %359, 1
  store i32 %372, ptr %67, align 8, !tbaa !220
  %373 = icmp slt i32 %372, %358
  br i1 %373, label %161, label %374, !llvm.loop !419

374:                                              ; preds = %357
  %375 = load i32, ptr %8, align 8, !tbaa !214
  %376 = load i32, ptr %57, align 8, !tbaa !215
  br label %377

377:                                              ; preds = %374, %145
  %378 = phi i32 [ %128, %145 ], [ %376, %374 ]
  %379 = phi i32 [ %132, %145 ], [ %375, %374 ]
  %380 = phi i32 [ %129, %145 ], [ %360, %374 ]
  %381 = phi float [ %136, %145 ], [ %362, %374 ]
  %382 = phi float [ %135, %145 ], [ %363, %374 ]
  %383 = phi float [ %134, %145 ], [ %364, %374 ]
  %384 = phi float [ %133, %145 ], [ %365, %374 ]
  %385 = phi i32 [ %131, %145 ], [ %366, %374 ]
  %386 = phi i32 [ %130, %145 ], [ %367, %374 ]
  %387 = phi <2 x float> [ %137, %145 ], [ %368, %374 ]
  %388 = phi <2 x float> [ %138, %145 ], [ %369, %374 ]
  %389 = phi <2 x float> [ %139, %145 ], [ %370, %374 ]
  %390 = phi <2 x float> [ %140, %145 ], [ %371, %374 ]
  %391 = add nsw i32 %379, 1
  store i32 %391, ptr %8, align 8, !tbaa !214
  %392 = icmp slt i32 %391, %378
  br i1 %392, label %127, label %690, !llvm.loop !420

393:                                              ; preds = %115, %85
  %394 = load ptr, ptr %55, align 8, !tbaa !21
  %395 = load ptr, ptr %93, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %394, ptr noundef %395, ptr noundef nonnull %8, i32 noundef 1) #10
  store i32 0, ptr %56, align 4, !tbaa !210
  store i32 0, ptr %8, align 8, !tbaa !214
  %396 = load i32, ptr %57, align 8, !tbaa !215
  %397 = icmp sgt i32 %396, 0
  br i1 %397, label %398, label %690

398:                                              ; preds = %393
  %399 = icmp eq ptr %111, null
  br label %400

400:                                              ; preds = %675, %398
  %401 = phi i32 [ %396, %398 ], [ %676, %675 ]
  %402 = phi i32 [ 0, %398 ], [ %683, %675 ]
  %403 = phi i32 [ 0, %398 ], [ %682, %675 ]
  %404 = phi i32 [ 0, %398 ], [ %688, %675 ]
  %405 = phi float [ 0.000000e+00, %398 ], [ %681, %675 ]
  %406 = phi float [ 0.000000e+00, %398 ], [ %680, %675 ]
  %407 = phi float [ 0.000000e+00, %398 ], [ %679, %675 ]
  %408 = phi float [ 0.000000e+00, %398 ], [ %678, %675 ]
  %409 = phi <2 x float> [ zeroinitializer, %398 ], [ %684, %675 ]
  %410 = phi <2 x float> [ zeroinitializer, %398 ], [ %685, %675 ]
  %411 = phi <2 x float> [ zeroinitializer, %398 ], [ %686, %675 ]
  %412 = phi <2 x float> [ zeroinitializer, %398 ], [ %687, %675 ]
  %413 = load ptr, ptr %58, align 8, !tbaa !216
  %414 = icmp eq ptr %413, null
  br i1 %414, label %415, label %417

415:                                              ; preds = %400
  %416 = load i32, ptr %66, align 8, !tbaa !217
  store i32 %416, ptr %60, align 4, !tbaa !218
  store i32 1, ptr %61, align 8, !tbaa !219
  store i32 0, ptr %67, align 8, !tbaa !220
  br label %430

417:                                              ; preds = %400
  %418 = load i32, ptr %59, align 4, !tbaa !221
  store i32 %418, ptr %60, align 4, !tbaa !218
  store i32 %418, ptr %61, align 8, !tbaa !219
  %419 = load ptr, ptr %62, align 8, !tbaa !222
  %420 = sext i32 %404 to i64
  %421 = getelementptr inbounds i32, ptr %419, i64 %420
  %422 = load i32, ptr %421, align 4, !tbaa !24
  %423 = sext i32 %422 to i64
  %424 = getelementptr inbounds ptr, ptr %413, i64 %423
  %425 = load ptr, ptr %424, align 8, !tbaa !31
  store ptr %425, ptr %63, align 8, !tbaa !223
  %426 = load ptr, ptr %64, align 8, !tbaa !224
  %427 = getelementptr inbounds ptr, ptr %426, i64 %423
  %428 = load ptr, ptr %427, align 8, !tbaa !31
  store ptr %428, ptr %65, align 8, !tbaa !225
  store i32 0, ptr %67, align 8, !tbaa !220
  %429 = icmp sgt i32 %418, 0
  br i1 %429, label %430, label %675

430:                                              ; preds = %417, %415
  %431 = phi i32 [ %418, %417 ], [ 1, %415 ]
  %432 = phi i32 [ %418, %417 ], [ %416, %415 ]
  br label %433

433:                                              ; preds = %430, %656
  %434 = phi i32 [ %657, %656 ], [ %431, %430 ]
  %435 = phi i32 [ %670, %656 ], [ 0, %430 ]
  %436 = phi i32 [ %659, %656 ], [ %432, %430 ]
  %437 = phi i32 [ %665, %656 ], [ %402, %430 ]
  %438 = phi i32 [ %664, %656 ], [ %403, %430 ]
  %439 = phi float [ %663, %656 ], [ %405, %430 ]
  %440 = phi float [ %662, %656 ], [ %406, %430 ]
  %441 = phi float [ %661, %656 ], [ %407, %430 ]
  %442 = phi float [ %660, %656 ], [ %408, %430 ]
  %443 = phi <2 x float> [ %666, %656 ], [ %409, %430 ]
  %444 = phi <2 x float> [ %667, %656 ], [ %410, %430 ]
  %445 = phi <2 x float> [ %668, %656 ], [ %411, %430 ]
  %446 = phi <2 x float> [ %669, %656 ], [ %412, %430 ]
  store i32 0, ptr %68, align 4, !tbaa !226
  %447 = icmp sgt i32 %436, 0
  br i1 %447, label %448, label %656

448:                                              ; preds = %433, %636
  %449 = phi i32 [ %648, %636 ], [ 0, %433 ]
  %450 = phi i32 [ %642, %636 ], [ %437, %433 ]
  %451 = phi i32 [ %641, %636 ], [ %438, %433 ]
  %452 = phi float [ %640, %636 ], [ %439, %433 ]
  %453 = phi float [ %639, %636 ], [ %440, %433 ]
  %454 = phi float [ %638, %636 ], [ %441, %433 ]
  %455 = phi float [ %637, %636 ], [ %442, %433 ]
  %456 = phi <2 x float> [ %643, %636 ], [ %443, %433 ]
  %457 = phi <2 x float> [ %644, %636 ], [ %444, %433 ]
  %458 = phi <2 x float> [ %645, %636 ], [ %445, %433 ]
  %459 = phi <2 x float> [ %646, %636 ], [ %446, %433 ]
  %460 = load ptr, ptr %63, align 8, !tbaa !223
  %461 = icmp eq ptr %460, null
  br i1 %461, label %497, label %462

462:                                              ; preds = %448
  store ptr %460, ptr %70, align 8, !tbaa !227
  %463 = load ptr, ptr %69, align 8, !tbaa !228
  %464 = getelementptr i8, ptr %463, i64 20
  %465 = load i32, ptr %464, align 4, !tbaa !229
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds i8, ptr %460, i64 %466
  store ptr %467, ptr %71, align 8, !tbaa !231
  %468 = getelementptr inbounds %struct.CCGKey, ptr %463, i64 0, i32 9
  %469 = load i32, ptr %468, align 4, !tbaa !232
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %476, label %471

471:                                              ; preds = %462
  %472 = getelementptr i8, ptr %463, i64 24
  %473 = load i32, ptr %472, align 4, !tbaa !233
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds i8, ptr %460, i64 %474
  br label %476

476:                                              ; preds = %471, %462
  %477 = phi ptr [ %475, %471 ], [ null, %462 ]
  store ptr %477, ptr %72, align 8, !tbaa !234
  %478 = getelementptr i8, ptr %463, i64 4
  %479 = load i32, ptr %478, align 4, !tbaa !235
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds i8, ptr %460, i64 %480
  store ptr %481, ptr %63, align 8, !tbaa !223
  %482 = load ptr, ptr %65, align 8, !tbaa !225
  %483 = icmp eq ptr %482, null
  br i1 %483, label %540, label %484

484:                                              ; preds = %476
  %485 = load i32, ptr %67, align 8, !tbaa !220
  %486 = load i32, ptr %59, align 4, !tbaa !221
  %487 = mul nsw i32 %486, %485
  %488 = add nsw i32 %487, %449
  %489 = ashr i32 %488, 5
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds i32, ptr %482, i64 %490
  %492 = load i32, ptr %491, align 4, !tbaa !24
  %493 = and i32 %488, 31
  %494 = shl nuw i32 1, %493
  %495 = and i32 %494, %492
  %496 = icmp eq i32 %495, 0
  br i1 %496, label %540, label %636

497:                                              ; preds = %448
  %498 = load ptr, ptr %73, align 8, !tbaa !236
  %499 = icmp eq ptr %498, null
  br i1 %499, label %517, label %500

500:                                              ; preds = %497
  %501 = load ptr, ptr %74, align 8, !tbaa !237
  %502 = sext i32 %449 to i64
  %503 = getelementptr inbounds i32, ptr %501, i64 %502
  %504 = load i32, ptr %503, align 4, !tbaa !24
  %505 = sext i32 %504 to i64
  %506 = getelementptr inbounds %struct.MVert, ptr %498, i64 %505
  store ptr %506, ptr %75, align 8, !tbaa !238
  %507 = getelementptr inbounds %struct.MVert, ptr %498, i64 %505, i32 2
  %508 = load i8, ptr %507, align 2, !tbaa !239
  %509 = and i8 %508, 16
  %510 = icmp eq i8 %509, 0
  br i1 %510, label %511, label %636

511:                                              ; preds = %500
  store ptr %506, ptr %70, align 8, !tbaa !227
  %512 = getelementptr inbounds %struct.MVert, ptr %498, i64 %505, i32 1
  store ptr %512, ptr %76, align 8, !tbaa !241
  %513 = load ptr, ptr %77, align 8, !tbaa !242
  %514 = icmp eq ptr %513, null
  br i1 %514, label %540, label %515

515:                                              ; preds = %511
  %516 = getelementptr inbounds float, ptr %513, i64 %505
  br label %537

517:                                              ; preds = %497
  %518 = load ptr, ptr %78, align 8, !tbaa !243
  %519 = icmp eq ptr %518, null
  %520 = load ptr, ptr %82, align 8
  %521 = select i1 %519, ptr %520, ptr %518
  %522 = select i1 %519, ptr %81, ptr %79
  %523 = getelementptr i8, ptr %521, i64 8
  %524 = load ptr, ptr %523, align 8, !tbaa !244
  store ptr %524, ptr %80, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %522) #10
  %525 = load ptr, ptr %80, align 8, !tbaa !246
  %526 = getelementptr i8, ptr %525, i64 13
  %527 = load i8, ptr %526, align 1, !tbaa !247
  %528 = and i8 %527, 2
  %529 = icmp eq i8 %528, 0
  br i1 %529, label %530, label %636

530:                                              ; preds = %517
  %531 = getelementptr inbounds %struct.BMVert, ptr %525, i64 0, i32 2
  store ptr %531, ptr %70, align 8, !tbaa !227
  %532 = getelementptr inbounds %struct.BMVert, ptr %525, i64 0, i32 3
  store ptr %532, ptr %71, align 8, !tbaa !231
  %533 = load ptr, ptr %525, align 8, !tbaa !249
  %534 = load i32, ptr %83, align 8, !tbaa !251
  %535 = sext i32 %534 to i64
  %536 = getelementptr inbounds i8, ptr %533, i64 %535
  br label %537

537:                                              ; preds = %530, %515
  %538 = phi ptr [ %536, %530 ], [ %516, %515 ]
  %539 = phi ptr [ %531, %530 ], [ %506, %515 ]
  store ptr %538, ptr %72, align 8, !tbaa !234
  br label %540

540:                                              ; preds = %537, %511, %484, %476
  %541 = phi ptr [ %506, %511 ], [ %460, %476 ], [ %460, %484 ], [ %539, %537 ]
  br i1 %399, label %545, label %542

542:                                              ; preds = %540
  %543 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %111, ptr noundef nonnull %541, i8 noundef zeroext 1) #10
  %544 = icmp eq i8 %543, 0
  br i1 %544, label %545, label %636

545:                                              ; preds = %542, %540
  %546 = load float, ptr %541, align 4, !tbaa !20
  %547 = fsub fast float %104, %546
  %548 = getelementptr inbounds float, ptr %541, i64 1
  %549 = fmul fast float %547, %547
  %550 = load <2 x float>, ptr %548, align 4, !tbaa !20
  %551 = fsub fast <2 x float> %106, %550
  %552 = fmul fast <2 x float> %551, %551
  %553 = extractelement <2 x float> %552, i64 0
  %554 = fadd fast float %553, %549
  %555 = extractelement <2 x float> %552, i64 1
  %556 = fadd fast float %554, %555
  %557 = fcmp fast ugt float %556, %102
  br i1 %557, label %636, label %558

558:                                              ; preds = %545
  %559 = load ptr, ptr %76, align 8, !tbaa !241
  %560 = icmp eq ptr %559, null
  br i1 %560, label %600, label %561

561:                                              ; preds = %558
  %562 = load <2 x i16>, ptr %559, align 2, !tbaa !302
  %563 = sitofp <2 x i16> %562 to <2 x float>
  %564 = fmul fast <2 x float> %563, <float 0x3F00002000000000, float 0x3F00002000000000>
  %565 = getelementptr inbounds i16, ptr %559, i64 2
  %566 = load i16, ptr %565, align 2, !tbaa !302
  %567 = sitofp i16 %566 to float
  %568 = fmul fast float %567, 0x3F00002000000000
  %569 = load ptr, ptr %54, align 8, !tbaa !22
  %570 = getelementptr inbounds %struct.StrokeCache, ptr %569, i64 0, i32 33
  %571 = load float, ptr %570, align 4, !tbaa !20
  %572 = extractelement <2 x float> %564, i64 0
  %573 = fmul fast float %571, %572
  %574 = getelementptr inbounds %struct.StrokeCache, ptr %569, i64 0, i32 33, i64 1
  %575 = load <2 x float>, ptr %574, align 4, !tbaa !20
  %576 = shufflevector <2 x float> %564, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %577 = insertelement <2 x float> %576, float %568, i64 1
  %578 = fmul fast <2 x float> %575, %577
  %579 = extractelement <2 x float> %578, i64 0
  %580 = fadd fast float %579, %573
  %581 = extractelement <2 x float> %578, i64 1
  %582 = fadd fast float %580, %581
  %583 = fcmp fast ogt float %582, 0.000000e+00
  %584 = load ptr, ptr %70, align 8, !tbaa !227
  %585 = load <2 x float>, ptr %584, align 4, !tbaa !20
  %586 = getelementptr inbounds float, ptr %584, i64 2
  %587 = load float, ptr %586, align 4, !tbaa !20
  br i1 %583, label %588, label %594

588:                                              ; preds = %561
  %589 = fadd fast <2 x float> %564, %458
  %590 = fadd fast float %568, %455
  %591 = fadd fast <2 x float> %585, %459
  %592 = fadd fast float %587, %453
  %593 = add nsw i32 %451, 1
  br label %636

594:                                              ; preds = %561
  %595 = fadd fast <2 x float> %564, %457
  %596 = fadd fast float %568, %454
  %597 = fadd fast <2 x float> %585, %456
  %598 = fadd fast float %587, %452
  %599 = add nsw i32 %450, 1
  br label %636

600:                                              ; preds = %558
  %601 = load ptr, ptr %54, align 8, !tbaa !22
  %602 = getelementptr inbounds %struct.StrokeCache, ptr %601, i64 0, i32 33
  %603 = load ptr, ptr %71, align 8, !tbaa !231
  %604 = load float, ptr %602, align 4, !tbaa !20
  %605 = getelementptr inbounds %struct.StrokeCache, ptr %601, i64 0, i32 33, i64 1
  %606 = load <2 x float>, ptr %603, align 4, !tbaa !20
  %607 = extractelement <2 x float> %606, i64 0
  %608 = fmul fast float %607, %604
  %609 = getelementptr inbounds float, ptr %603, i64 2
  %610 = load float, ptr %609, align 4, !tbaa !20
  %611 = load <2 x float>, ptr %605, align 4, !tbaa !20
  %612 = shufflevector <2 x float> %606, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %613 = insertelement <2 x float> %612, float %610, i64 1
  %614 = fmul fast <2 x float> %613, %611
  %615 = extractelement <2 x float> %614, i64 0
  %616 = fadd fast float %615, %608
  %617 = extractelement <2 x float> %614, i64 1
  %618 = fadd fast float %616, %617
  %619 = fcmp fast ogt float %618, 0.000000e+00
  %620 = load ptr, ptr %70, align 8, !tbaa !227
  %621 = load <2 x float>, ptr %620, align 4, !tbaa !20
  %622 = getelementptr inbounds float, ptr %620, i64 2
  %623 = load float, ptr %622, align 4, !tbaa !20
  br i1 %619, label %624, label %630

624:                                              ; preds = %600
  %625 = fadd fast <2 x float> %606, %458
  %626 = fadd fast float %610, %455
  %627 = fadd fast <2 x float> %621, %459
  %628 = fadd fast float %623, %453
  %629 = add nsw i32 %451, 1
  br label %636

630:                                              ; preds = %600
  %631 = fadd fast <2 x float> %606, %457
  %632 = fadd fast float %610, %454
  %633 = fadd fast <2 x float> %621, %456
  %634 = fadd fast float %623, %452
  %635 = add nsw i32 %450, 1
  br label %636

636:                                              ; preds = %630, %624, %594, %588, %545, %542, %517, %500, %484
  %637 = phi float [ %455, %545 ], [ %626, %624 ], [ %455, %630 ], [ %455, %517 ], [ %455, %500 ], [ %455, %484 ], [ %590, %588 ], [ %455, %594 ], [ %455, %542 ]
  %638 = phi float [ %454, %545 ], [ %454, %624 ], [ %632, %630 ], [ %454, %517 ], [ %454, %500 ], [ %454, %484 ], [ %454, %588 ], [ %596, %594 ], [ %454, %542 ]
  %639 = phi float [ %453, %545 ], [ %628, %624 ], [ %453, %630 ], [ %453, %517 ], [ %453, %500 ], [ %453, %484 ], [ %592, %588 ], [ %453, %594 ], [ %453, %542 ]
  %640 = phi float [ %452, %545 ], [ %452, %624 ], [ %634, %630 ], [ %452, %517 ], [ %452, %500 ], [ %452, %484 ], [ %452, %588 ], [ %598, %594 ], [ %452, %542 ]
  %641 = phi i32 [ %451, %545 ], [ %629, %624 ], [ %451, %630 ], [ %451, %517 ], [ %451, %500 ], [ %451, %484 ], [ %593, %588 ], [ %451, %594 ], [ %451, %542 ]
  %642 = phi i32 [ %450, %545 ], [ %450, %624 ], [ %635, %630 ], [ %450, %517 ], [ %450, %500 ], [ %450, %484 ], [ %450, %588 ], [ %599, %594 ], [ %450, %542 ]
  %643 = phi <2 x float> [ %456, %545 ], [ %456, %624 ], [ %633, %630 ], [ %456, %517 ], [ %456, %500 ], [ %456, %484 ], [ %456, %588 ], [ %597, %594 ], [ %456, %542 ]
  %644 = phi <2 x float> [ %457, %545 ], [ %457, %624 ], [ %631, %630 ], [ %457, %517 ], [ %457, %500 ], [ %457, %484 ], [ %457, %588 ], [ %595, %594 ], [ %457, %542 ]
  %645 = phi <2 x float> [ %458, %545 ], [ %625, %624 ], [ %458, %630 ], [ %458, %517 ], [ %458, %500 ], [ %458, %484 ], [ %589, %588 ], [ %458, %594 ], [ %458, %542 ]
  %646 = phi <2 x float> [ %459, %545 ], [ %627, %624 ], [ %459, %630 ], [ %459, %517 ], [ %459, %500 ], [ %459, %484 ], [ %591, %588 ], [ %459, %594 ], [ %459, %542 ]
  %647 = load i32, ptr %68, align 4, !tbaa !226
  %648 = add nsw i32 %647, 1
  store i32 %648, ptr %68, align 4, !tbaa !226
  %649 = load i32, ptr %56, align 4, !tbaa !210
  %650 = add nsw i32 %649, 1
  store i32 %650, ptr %56, align 4, !tbaa !210
  %651 = load i32, ptr %60, align 4, !tbaa !218
  %652 = icmp slt i32 %648, %651
  br i1 %652, label %448, label %653, !llvm.loop !421

653:                                              ; preds = %636
  %654 = load i32, ptr %67, align 8, !tbaa !220
  %655 = load i32, ptr %61, align 8, !tbaa !219
  br label %656

656:                                              ; preds = %653, %433
  %657 = phi i32 [ %434, %433 ], [ %655, %653 ]
  %658 = phi i32 [ %435, %433 ], [ %654, %653 ]
  %659 = phi i32 [ %436, %433 ], [ %651, %653 ]
  %660 = phi float [ %442, %433 ], [ %637, %653 ]
  %661 = phi float [ %441, %433 ], [ %638, %653 ]
  %662 = phi float [ %440, %433 ], [ %639, %653 ]
  %663 = phi float [ %439, %433 ], [ %640, %653 ]
  %664 = phi i32 [ %438, %433 ], [ %641, %653 ]
  %665 = phi i32 [ %437, %433 ], [ %642, %653 ]
  %666 = phi <2 x float> [ %443, %433 ], [ %643, %653 ]
  %667 = phi <2 x float> [ %444, %433 ], [ %644, %653 ]
  %668 = phi <2 x float> [ %445, %433 ], [ %645, %653 ]
  %669 = phi <2 x float> [ %446, %433 ], [ %646, %653 ]
  %670 = add nsw i32 %658, 1
  store i32 %670, ptr %67, align 8, !tbaa !220
  %671 = icmp slt i32 %670, %657
  br i1 %671, label %433, label %672, !llvm.loop !422

672:                                              ; preds = %656
  %673 = load i32, ptr %8, align 8, !tbaa !214
  %674 = load i32, ptr %57, align 8, !tbaa !215
  br label %675

675:                                              ; preds = %672, %417
  %676 = phi i32 [ %401, %417 ], [ %674, %672 ]
  %677 = phi i32 [ %404, %417 ], [ %673, %672 ]
  %678 = phi float [ %408, %417 ], [ %660, %672 ]
  %679 = phi float [ %407, %417 ], [ %661, %672 ]
  %680 = phi float [ %406, %417 ], [ %662, %672 ]
  %681 = phi float [ %405, %417 ], [ %663, %672 ]
  %682 = phi i32 [ %403, %417 ], [ %664, %672 ]
  %683 = phi i32 [ %402, %417 ], [ %665, %672 ]
  %684 = phi <2 x float> [ %409, %417 ], [ %666, %672 ]
  %685 = phi <2 x float> [ %410, %417 ], [ %667, %672 ]
  %686 = phi <2 x float> [ %411, %417 ], [ %668, %672 ]
  %687 = phi <2 x float> [ %412, %417 ], [ %669, %672 ]
  %688 = add nsw i32 %677, 1
  store i32 %688, ptr %8, align 8, !tbaa !214
  %689 = icmp slt i32 %688, %676
  br i1 %689, label %400, label %690, !llvm.loop !423

690:                                              ; preds = %377, %675, %393, %119
  %691 = phi float [ 0.000000e+00, %393 ], [ 0.000000e+00, %119 ], [ %678, %675 ], [ %381, %377 ]
  %692 = phi float [ 0.000000e+00, %393 ], [ 0.000000e+00, %119 ], [ %679, %675 ], [ %382, %377 ]
  %693 = phi float [ 0.000000e+00, %393 ], [ 0.000000e+00, %119 ], [ %680, %675 ], [ %383, %377 ]
  %694 = phi float [ 0.000000e+00, %393 ], [ 0.000000e+00, %119 ], [ %681, %675 ], [ %384, %377 ]
  %695 = phi i32 [ 0, %393 ], [ 0, %119 ], [ %682, %675 ], [ %385, %377 ]
  %696 = phi i32 [ 0, %393 ], [ 0, %119 ], [ %683, %675 ], [ %386, %377 ]
  %697 = phi <2 x float> [ zeroinitializer, %393 ], [ zeroinitializer, %119 ], [ %684, %675 ], [ %387, %377 ]
  %698 = phi <2 x float> [ zeroinitializer, %393 ], [ zeroinitializer, %119 ], [ %685, %675 ], [ %388, %377 ]
  %699 = phi <2 x float> [ zeroinitializer, %393 ], [ zeroinitializer, %119 ], [ %686, %675 ], [ %389, %377 ]
  %700 = phi <2 x float> [ zeroinitializer, %393 ], [ zeroinitializer, %119 ], [ %687, %675 ], [ %390, %377 ]
  %701 = load <2 x float>, ptr %4, align 4, !tbaa !20
  %702 = fadd fast <2 x float> %701, %699
  store <2 x float> %702, ptr %4, align 4, !tbaa !20
  %703 = load float, ptr %50, align 4, !tbaa !20
  %704 = fadd fast float %703, %691
  store float %704, ptr %50, align 4, !tbaa !20
  %705 = fadd fast <2 x float> %698, %92
  %706 = fadd fast float %692, %89
  %707 = load <2 x float>, ptr %5, align 4, !tbaa !20
  %708 = fadd fast <2 x float> %707, %700
  store <2 x float> %708, ptr %5, align 4, !tbaa !20
  %709 = load float, ptr %51, align 4, !tbaa !20
  %710 = fadd fast float %709, %693
  store float %710, ptr %51, align 4, !tbaa !20
  %711 = fadd fast <2 x float> %697, %91
  %712 = fadd fast float %694, %90
  %713 = add nsw i32 %695, %88
  %714 = add nsw i32 %696, %87
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %8) #10
  %715 = add nuw nsw i64 %86, 1
  %716 = icmp eq i64 %715, %84
  br i1 %716, label %717, label %85, !llvm.loop !424

717:                                              ; preds = %690, %48
  %718 = phi float [ 0.000000e+00, %48 ], [ %712, %690 ]
  %719 = phi float [ 0.000000e+00, %48 ], [ %706, %690 ]
  %720 = phi i32 [ 0, %48 ], [ %713, %690 ]
  %721 = phi i32 [ 0, %48 ], [ %714, %690 ]
  %722 = phi <2 x float> [ zeroinitializer, %48 ], [ %711, %690 ]
  %723 = phi <2 x float> [ zeroinitializer, %48 ], [ %705, %690 ]
  %724 = load <2 x float>, ptr %4, align 4, !tbaa !20
  %725 = extractelement <2 x float> %724, i64 0
  %726 = fcmp fast oeq float %725, 0.000000e+00
  br i1 %726, label %729, label %727

727:                                              ; preds = %717
  %728 = load float, ptr %50, align 4, !tbaa !20
  br label %736

729:                                              ; preds = %717
  %730 = extractelement <2 x float> %724, i64 1
  %731 = fcmp fast une float %730, 0.000000e+00
  %732 = load float, ptr %50, align 4, !tbaa !20
  %733 = fcmp fast une float %732, 0.000000e+00
  %734 = select i1 %731, i1 true, i1 %733
  br i1 %734, label %736, label %735

735:                                              ; preds = %729
  br label %736

736:                                              ; preds = %735, %729, %727
  %737 = phi float [ %728, %727 ], [ %732, %729 ], [ %719, %735 ]
  %738 = phi <2 x float> [ %724, %727 ], [ %724, %729 ], [ %723, %735 ]
  %739 = fmul fast <2 x float> %738, %738
  %740 = fmul fast float %737, %737
  %741 = extractelement <2 x float> %739, i64 1
  %742 = fadd fast float %741, %740
  %743 = extractelement <2 x float> %739, i64 0
  %744 = fadd fast float %742, %743
  %745 = fcmp fast ogt float %744, 0x38AA95A5C0000000
  br i1 %745, label %746, label %753

746:                                              ; preds = %736
  %747 = call fast float @llvm.sqrt.f32(float %744)
  %748 = fdiv fast float 1.000000e+00, %747
  %749 = insertelement <2 x float> poison, float %748, i64 0
  %750 = shufflevector <2 x float> %749, <2 x float> poison, <2 x i32> zeroinitializer
  %751 = fmul fast <2 x float> %750, %738
  %752 = fmul fast float %748, %737
  br label %753

753:                                              ; preds = %746, %736
  %754 = phi float [ %752, %746 ], [ 0.000000e+00, %736 ]
  %755 = phi <2 x float> [ %751, %746 ], [ zeroinitializer, %736 ]
  store <2 x float> %755, ptr %4, align 4
  store float %754, ptr %50, align 4
  %756 = icmp eq i32 %720, 0
  br i1 %756, label %766, label %757

757:                                              ; preds = %753
  %758 = sitofp i32 %720 to float
  %759 = fdiv fast float 1.000000e+00, %758
  %760 = load <2 x float>, ptr %5, align 4, !tbaa !20
  %761 = insertelement <2 x float> poison, float %759, i64 0
  %762 = shufflevector <2 x float> %761, <2 x float> poison, <2 x i32> zeroinitializer
  %763 = fmul fast <2 x float> %760, %762
  store <2 x float> %763, ptr %5, align 4, !tbaa !20
  %764 = load float, ptr %51, align 4, !tbaa !20
  %765 = fmul fast float %764, %759
  br label %776

766:                                              ; preds = %753
  %767 = icmp eq i32 %721, 0
  br i1 %767, label %775, label %768

768:                                              ; preds = %766
  %769 = sitofp i32 %721 to float
  %770 = fdiv fast float 1.000000e+00, %769
  %771 = insertelement <2 x float> poison, float %770, i64 0
  %772 = shufflevector <2 x float> %771, <2 x float> poison, <2 x i32> zeroinitializer
  %773 = fmul fast <2 x float> %772, %722
  store <2 x float> %773, ptr %5, align 4, !tbaa !20
  %774 = fmul fast float %770, %718
  br label %776

775:                                              ; preds = %766
  store <2 x float> zeroinitializer, ptr %5, align 4, !tbaa !20
  br label %776

776:                                              ; preds = %775, %768, %757
  %777 = phi float [ %774, %768 ], [ 0.000000e+00, %775 ], [ %765, %757 ]
  store float %777, ptr %51, align 4, !tbaa !20
  %778 = load i32, ptr %31, align 8, !tbaa !291
  %779 = icmp eq i32 %778, 0
  br i1 %779, label %1386, label %780

780:                                              ; preds = %33, %42, %44, %46, %30, %776
  %781 = load ptr, ptr %9, align 8, !tbaa !5
  store <2 x float> zeroinitializer, ptr %5, align 4, !tbaa !20
  %782 = getelementptr inbounds float, ptr %5, i64 2
  store float 0.000000e+00, ptr %782, align 4, !tbaa !20
  %783 = icmp sgt i32 %3, 0
  br i1 %783, label %784, label %1383

784:                                              ; preds = %780
  %785 = getelementptr i8, ptr %781, i64 192
  %786 = getelementptr inbounds %struct.SculptSession, ptr %781, i64 0, i32 15
  %787 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 5
  %788 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 12
  %789 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 6
  %790 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 13
  %791 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 1
  %792 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 2
  %793 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 11
  %794 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 7
  %795 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 9
  %796 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 10
  %797 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 15
  %798 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 4
  %799 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 3
  %800 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 8
  %801 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 24
  %802 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 26
  %803 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 27
  %804 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 14
  %805 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 16
  %806 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 22
  %807 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 25
  %808 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 17
  %809 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 18, i32 0, i32 1
  %810 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 18
  %811 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 23
  %812 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 19
  %813 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 19, i32 0, i32 1
  %814 = getelementptr inbounds %struct.PBVHVertexIter, ptr %7, i64 0, i32 21
  %815 = zext i32 %3 to i64
  br label %816

816:                                              ; preds = %1348, %784
  %817 = phi i64 [ 0, %784 ], [ %1363, %1348 ]
  %818 = phi i32 [ 0, %784 ], [ %1362, %1348 ]
  %819 = phi i32 [ 0, %784 ], [ %1361, %1348 ]
  %820 = phi float [ 0.000000e+00, %784 ], [ %1360, %1348 ]
  %821 = phi <2 x float> [ zeroinitializer, %784 ], [ %1359, %1348 ]
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %7) #10
  %822 = getelementptr inbounds ptr, ptr %2, i64 %817
  %823 = load ptr, ptr %822, align 8, !tbaa !31
  %824 = call ptr @sculpt_undo_push_node(ptr noundef %1, ptr noundef %823, i32 noundef 0) #10
  %825 = load ptr, ptr %785, align 8, !tbaa !22
  %826 = getelementptr inbounds %struct.StrokeCache, ptr %825, i64 0, i32 22
  %827 = load ptr, ptr %826, align 8, !tbaa !172
  %828 = getelementptr inbounds %struct.ViewContext, ptr %827, i64 0, i32 5
  %829 = load ptr, ptr %828, align 8, !tbaa !174
  %830 = getelementptr inbounds %struct.StrokeCache, ptr %825, i64 0, i32 12
  %831 = load float, ptr %830, align 4, !tbaa !199
  %832 = getelementptr inbounds %struct.StrokeCache, ptr %825, i64 0, i32 14
  %833 = load float, ptr %832, align 4, !tbaa !20
  %834 = getelementptr inbounds %struct.StrokeCache, ptr %825, i64 0, i32 14, i64 1
  %835 = load <2 x float>, ptr %834, align 4, !tbaa !20
  %836 = getelementptr inbounds %struct.RegionView3D, ptr %829, i64 0, i32 32
  %837 = load i16, ptr %836, align 2, !tbaa !293
  %838 = and i16 %837, 4
  %839 = icmp eq i16 %838, 0
  %840 = select i1 %839, ptr null, ptr %829
  %841 = getelementptr inbounds %struct.StrokeCache, ptr %825, i64 0, i32 41
  %842 = load i8, ptr %841, align 4, !tbaa !46
  %843 = icmp eq i8 %842, 0
  br i1 %843, label %1090, label %844

844:                                              ; preds = %816
  %845 = getelementptr inbounds %struct.SculptUndoNode, ptr %824, i64 0, i32 5
  %846 = load ptr, ptr %845, align 8, !tbaa !80
  %847 = icmp eq ptr %846, null
  br i1 %847, label %1090, label %848

848:                                              ; preds = %844
  %849 = load ptr, ptr %786, align 8, !tbaa !21
  %850 = load ptr, ptr %822, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %849, ptr noundef %850, ptr noundef nonnull %7, i32 noundef 1) #10
  store i32 0, ptr %787, align 4, !tbaa !210
  store i32 0, ptr %7, align 8, !tbaa !214
  %851 = load i32, ptr %788, align 8, !tbaa !215
  %852 = icmp sgt i32 %851, 0
  br i1 %852, label %853, label %1348

853:                                              ; preds = %848
  %854 = icmp eq ptr %840, null
  %855 = getelementptr inbounds %struct.SculptUndoNode, ptr %824, i64 0, i32 7
  br label %856

856:                                              ; preds = %1078, %853
  %857 = phi i32 [ %851, %853 ], [ %1079, %1078 ]
  %858 = phi i32 [ 0, %853 ], [ %1081, %1078 ]
  %859 = phi i32 [ 0, %853 ], [ %1085, %1078 ]
  %860 = phi i32 [ 0, %853 ], [ %1084, %1078 ]
  %861 = phi i32 [ 0, %853 ], [ %1088, %1078 ]
  %862 = phi float [ 0.000000e+00, %853 ], [ %1083, %1078 ]
  %863 = phi float [ 0.000000e+00, %853 ], [ %1082, %1078 ]
  %864 = phi <2 x float> [ zeroinitializer, %853 ], [ %1086, %1078 ]
  %865 = phi <2 x float> [ zeroinitializer, %853 ], [ %1087, %1078 ]
  %866 = load ptr, ptr %789, align 8, !tbaa !216
  %867 = icmp eq ptr %866, null
  br i1 %867, label %868, label %870

868:                                              ; preds = %856
  %869 = load i32, ptr %797, align 8, !tbaa !217
  store i32 %869, ptr %791, align 4, !tbaa !218
  store i32 1, ptr %792, align 8, !tbaa !219
  store i32 0, ptr %798, align 8, !tbaa !220
  br label %883

870:                                              ; preds = %856
  %871 = load i32, ptr %790, align 4, !tbaa !221
  store i32 %871, ptr %791, align 4, !tbaa !218
  store i32 %871, ptr %792, align 8, !tbaa !219
  %872 = load ptr, ptr %793, align 8, !tbaa !222
  %873 = sext i32 %861 to i64
  %874 = getelementptr inbounds i32, ptr %872, i64 %873
  %875 = load i32, ptr %874, align 4, !tbaa !24
  %876 = sext i32 %875 to i64
  %877 = getelementptr inbounds ptr, ptr %866, i64 %876
  %878 = load ptr, ptr %877, align 8, !tbaa !31
  store ptr %878, ptr %794, align 8, !tbaa !223
  %879 = load ptr, ptr %795, align 8, !tbaa !224
  %880 = getelementptr inbounds ptr, ptr %879, i64 %876
  %881 = load ptr, ptr %880, align 8, !tbaa !31
  store ptr %881, ptr %796, align 8, !tbaa !225
  store i32 0, ptr %798, align 8, !tbaa !220
  %882 = icmp sgt i32 %871, 0
  br i1 %882, label %883, label %1078

883:                                              ; preds = %870, %868
  %884 = phi i32 [ %871, %870 ], [ 1, %868 ]
  %885 = phi i32 [ %871, %870 ], [ %869, %868 ]
  br label %886

886:                                              ; preds = %883, %1062
  %887 = phi i32 [ %1063, %1062 ], [ %884, %883 ]
  %888 = phi i32 [ %1073, %1062 ], [ 0, %883 ]
  %889 = phi i32 [ %1065, %1062 ], [ %858, %883 ]
  %890 = phi i32 [ %1066, %1062 ], [ %885, %883 ]
  %891 = phi i32 [ %1070, %1062 ], [ %859, %883 ]
  %892 = phi i32 [ %1069, %1062 ], [ %860, %883 ]
  %893 = phi float [ %1068, %1062 ], [ %862, %883 ]
  %894 = phi float [ %1067, %1062 ], [ %863, %883 ]
  %895 = phi <2 x float> [ %1071, %1062 ], [ %864, %883 ]
  %896 = phi <2 x float> [ %1072, %1062 ], [ %865, %883 ]
  store i32 0, ptr %799, align 4, !tbaa !226
  %897 = icmp sgt i32 %890, 0
  br i1 %897, label %898, label %1062

898:                                              ; preds = %886, %1046
  %899 = phi i32 [ %1056, %1046 ], [ %889, %886 ]
  %900 = phi i32 [ %1055, %1046 ], [ 0, %886 ]
  %901 = phi i32 [ %1051, %1046 ], [ %891, %886 ]
  %902 = phi i32 [ %1050, %1046 ], [ %892, %886 ]
  %903 = phi float [ %1049, %1046 ], [ %893, %886 ]
  %904 = phi float [ %1048, %1046 ], [ %894, %886 ]
  %905 = phi <2 x float> [ %1052, %1046 ], [ %895, %886 ]
  %906 = phi <2 x float> [ %1053, %1046 ], [ %896, %886 ]
  %907 = load ptr, ptr %794, align 8, !tbaa !223
  %908 = icmp eq ptr %907, null
  br i1 %908, label %944, label %909

909:                                              ; preds = %898
  store ptr %907, ptr %801, align 8, !tbaa !227
  %910 = load ptr, ptr %800, align 8, !tbaa !228
  %911 = getelementptr i8, ptr %910, i64 20
  %912 = load i32, ptr %911, align 4, !tbaa !229
  %913 = sext i32 %912 to i64
  %914 = getelementptr inbounds i8, ptr %907, i64 %913
  store ptr %914, ptr %802, align 8, !tbaa !231
  %915 = getelementptr inbounds %struct.CCGKey, ptr %910, i64 0, i32 9
  %916 = load i32, ptr %915, align 4, !tbaa !232
  %917 = icmp eq i32 %916, 0
  br i1 %917, label %923, label %918

918:                                              ; preds = %909
  %919 = getelementptr i8, ptr %910, i64 24
  %920 = load i32, ptr %919, align 4, !tbaa !233
  %921 = sext i32 %920 to i64
  %922 = getelementptr inbounds i8, ptr %907, i64 %921
  br label %923

923:                                              ; preds = %918, %909
  %924 = phi ptr [ %922, %918 ], [ null, %909 ]
  store ptr %924, ptr %803, align 8, !tbaa !234
  %925 = getelementptr i8, ptr %910, i64 4
  %926 = load i32, ptr %925, align 4, !tbaa !235
  %927 = sext i32 %926 to i64
  %928 = getelementptr inbounds i8, ptr %907, i64 %927
  store ptr %928, ptr %794, align 8, !tbaa !223
  %929 = load ptr, ptr %796, align 8, !tbaa !225
  %930 = icmp eq ptr %929, null
  br i1 %930, label %988, label %931

931:                                              ; preds = %923
  %932 = load i32, ptr %798, align 8, !tbaa !220
  %933 = load i32, ptr %790, align 4, !tbaa !221
  %934 = mul nsw i32 %933, %932
  %935 = add nsw i32 %934, %900
  %936 = ashr i32 %935, 5
  %937 = sext i32 %936 to i64
  %938 = getelementptr inbounds i32, ptr %929, i64 %937
  %939 = load i32, ptr %938, align 4, !tbaa !24
  %940 = and i32 %935, 31
  %941 = shl nuw i32 1, %940
  %942 = and i32 %941, %939
  %943 = icmp eq i32 %942, 0
  br i1 %943, label %988, label %1046

944:                                              ; preds = %898
  %945 = load ptr, ptr %804, align 8, !tbaa !236
  %946 = icmp eq ptr %945, null
  br i1 %946, label %964, label %947

947:                                              ; preds = %944
  %948 = load ptr, ptr %805, align 8, !tbaa !237
  %949 = sext i32 %900 to i64
  %950 = getelementptr inbounds i32, ptr %948, i64 %949
  %951 = load i32, ptr %950, align 4, !tbaa !24
  %952 = sext i32 %951 to i64
  %953 = getelementptr inbounds %struct.MVert, ptr %945, i64 %952
  store ptr %953, ptr %806, align 8, !tbaa !238
  %954 = getelementptr inbounds %struct.MVert, ptr %945, i64 %952, i32 2
  %955 = load i8, ptr %954, align 2, !tbaa !239
  %956 = and i8 %955, 16
  %957 = icmp eq i8 %956, 0
  br i1 %957, label %958, label %1046

958:                                              ; preds = %947
  store ptr %953, ptr %801, align 8, !tbaa !227
  %959 = getelementptr inbounds %struct.MVert, ptr %945, i64 %952, i32 1
  store ptr %959, ptr %807, align 8, !tbaa !241
  %960 = load ptr, ptr %808, align 8, !tbaa !242
  %961 = icmp eq ptr %960, null
  br i1 %961, label %988, label %962

962:                                              ; preds = %958
  %963 = getelementptr inbounds float, ptr %960, i64 %952
  br label %985

964:                                              ; preds = %944
  %965 = load ptr, ptr %809, align 8, !tbaa !243
  %966 = icmp eq ptr %965, null
  %967 = load ptr, ptr %813, align 8
  %968 = select i1 %966, ptr %967, ptr %965
  %969 = select i1 %966, ptr %812, ptr %810
  %970 = getelementptr i8, ptr %968, i64 8
  %971 = load ptr, ptr %970, align 8, !tbaa !244
  store ptr %971, ptr %811, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %969) #10
  %972 = load ptr, ptr %811, align 8, !tbaa !246
  %973 = getelementptr i8, ptr %972, i64 13
  %974 = load i8, ptr %973, align 1, !tbaa !247
  %975 = and i8 %974, 2
  %976 = icmp eq i8 %975, 0
  %977 = load i32, ptr %787, align 4, !tbaa !210
  br i1 %976, label %978, label %1046

978:                                              ; preds = %964
  %979 = getelementptr inbounds %struct.BMVert, ptr %972, i64 0, i32 2
  store ptr %979, ptr %801, align 8, !tbaa !227
  %980 = getelementptr inbounds %struct.BMVert, ptr %972, i64 0, i32 3
  store ptr %980, ptr %802, align 8, !tbaa !231
  %981 = load ptr, ptr %972, align 8, !tbaa !249
  %982 = load i32, ptr %814, align 8, !tbaa !251
  %983 = sext i32 %982 to i64
  %984 = getelementptr inbounds i8, ptr %981, i64 %983
  br label %985

985:                                              ; preds = %978, %962
  %986 = phi ptr [ %984, %978 ], [ %963, %962 ]
  %987 = phi i32 [ %977, %978 ], [ %899, %962 ]
  store ptr %986, ptr %803, align 8, !tbaa !234
  br label %988

988:                                              ; preds = %985, %958, %931, %923
  %989 = phi i32 [ %899, %958 ], [ %899, %923 ], [ %899, %931 ], [ %987, %985 ]
  %990 = load ptr, ptr %845, align 8, !tbaa !80
  %991 = sext i32 %989 to i64
  %992 = getelementptr inbounds [3 x float], ptr %990, i64 %991
  br i1 %854, label %997, label %993

993:                                              ; preds = %988
  %994 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %840, ptr noundef %992, i8 noundef zeroext 1) #10
  %995 = icmp eq i8 %994, 0
  %996 = load i32, ptr %787, align 4, !tbaa !210
  br i1 %995, label %997, label %1046

997:                                              ; preds = %993, %988
  %998 = phi i32 [ %989, %988 ], [ %996, %993 ]
  %999 = load float, ptr %992, align 4, !tbaa !20
  %1000 = fsub fast float %833, %999
  %1001 = getelementptr inbounds float, ptr %992, i64 1
  %1002 = fmul fast float %1000, %1000
  %1003 = load <2 x float>, ptr %1001, align 4, !tbaa !20
  %1004 = fsub fast <2 x float> %835, %1003
  %1005 = fmul fast <2 x float> %1004, %1004
  %1006 = extractelement <2 x float> %1005, i64 0
  %1007 = fadd fast float %1006, %1002
  %1008 = extractelement <2 x float> %1005, i64 1
  %1009 = fadd fast float %1007, %1008
  %1010 = fcmp fast ugt float %1009, %831
  br i1 %1010, label %1046, label %1011

1011:                                             ; preds = %997
  %1012 = load ptr, ptr %855, align 8, !tbaa !307
  %1013 = sext i32 %998 to i64
  %1014 = getelementptr inbounds [3 x i16], ptr %1012, i64 %1013
  %1015 = load i16, ptr %1014, align 2, !tbaa !302
  %1016 = sitofp i16 %1015 to float
  %1017 = getelementptr inbounds i16, ptr %1014, i64 1
  %1018 = load ptr, ptr %785, align 8, !tbaa !22
  %1019 = getelementptr inbounds %struct.StrokeCache, ptr %1018, i64 0, i32 33
  %1020 = load float, ptr %1019, align 4, !tbaa !20
  %1021 = fmul fast float %1020, %1016
  %1022 = getelementptr inbounds %struct.StrokeCache, ptr %1018, i64 0, i32 33, i64 1
  %1023 = load <2 x i16>, ptr %1017, align 2, !tbaa !302
  %1024 = sitofp <2 x i16> %1023 to <2 x float>
  %1025 = load <2 x float>, ptr %1022, align 4, !tbaa !20
  %1026 = fmul fast <2 x float> %1025, %1024
  %1027 = extractelement <2 x float> %1026, i64 0
  %1028 = fadd fast float %1027, %1021
  %1029 = extractelement <2 x float> %1026, i64 1
  %1030 = fadd fast float %1028, %1029
  %1031 = fmul fast float %1030, 0x3F00002000000000
  %1032 = fcmp fast ogt float %1031, 0.000000e+00
  %1033 = load ptr, ptr %845, align 8, !tbaa !80
  %1034 = getelementptr inbounds [3 x float], ptr %1033, i64 %1013
  %1035 = load <2 x float>, ptr %1034, align 4, !tbaa !20
  %1036 = getelementptr inbounds float, ptr %1034, i64 2
  %1037 = load float, ptr %1036, align 4, !tbaa !20
  br i1 %1032, label %1038, label %1042

1038:                                             ; preds = %1011
  %1039 = fadd fast <2 x float> %1035, %906
  %1040 = fadd fast float %1037, %903
  %1041 = add nsw i32 %902, 1
  br label %1046

1042:                                             ; preds = %1011
  %1043 = fadd fast <2 x float> %1035, %905
  %1044 = fadd fast float %1037, %904
  %1045 = add nsw i32 %901, 1
  br label %1046

1046:                                             ; preds = %1042, %1038, %997, %993, %964, %947, %931
  %1047 = phi i32 [ %998, %997 ], [ %977, %964 ], [ %899, %947 ], [ %899, %931 ], [ %998, %1038 ], [ %998, %1042 ], [ %996, %993 ]
  %1048 = phi float [ %904, %997 ], [ %904, %964 ], [ %904, %947 ], [ %904, %931 ], [ %904, %1038 ], [ %1044, %1042 ], [ %904, %993 ]
  %1049 = phi float [ %903, %997 ], [ %903, %964 ], [ %903, %947 ], [ %903, %931 ], [ %1040, %1038 ], [ %903, %1042 ], [ %903, %993 ]
  %1050 = phi i32 [ %902, %997 ], [ %902, %964 ], [ %902, %947 ], [ %902, %931 ], [ %1041, %1038 ], [ %902, %1042 ], [ %902, %993 ]
  %1051 = phi i32 [ %901, %997 ], [ %901, %964 ], [ %901, %947 ], [ %901, %931 ], [ %901, %1038 ], [ %1045, %1042 ], [ %901, %993 ]
  %1052 = phi <2 x float> [ %905, %997 ], [ %905, %964 ], [ %905, %947 ], [ %905, %931 ], [ %905, %1038 ], [ %1043, %1042 ], [ %905, %993 ]
  %1053 = phi <2 x float> [ %906, %997 ], [ %906, %964 ], [ %906, %947 ], [ %906, %931 ], [ %1039, %1038 ], [ %906, %1042 ], [ %906, %993 ]
  %1054 = load i32, ptr %799, align 4, !tbaa !226
  %1055 = add nsw i32 %1054, 1
  store i32 %1055, ptr %799, align 4, !tbaa !226
  %1056 = add nsw i32 %1047, 1
  store i32 %1056, ptr %787, align 4, !tbaa !210
  %1057 = load i32, ptr %791, align 4, !tbaa !218
  %1058 = icmp slt i32 %1055, %1057
  br i1 %1058, label %898, label %1059, !llvm.loop !425

1059:                                             ; preds = %1046
  %1060 = load i32, ptr %798, align 8, !tbaa !220
  %1061 = load i32, ptr %792, align 8, !tbaa !219
  br label %1062

1062:                                             ; preds = %1059, %886
  %1063 = phi i32 [ %887, %886 ], [ %1061, %1059 ]
  %1064 = phi i32 [ %888, %886 ], [ %1060, %1059 ]
  %1065 = phi i32 [ %889, %886 ], [ %1056, %1059 ]
  %1066 = phi i32 [ %890, %886 ], [ %1057, %1059 ]
  %1067 = phi float [ %894, %886 ], [ %1048, %1059 ]
  %1068 = phi float [ %893, %886 ], [ %1049, %1059 ]
  %1069 = phi i32 [ %892, %886 ], [ %1050, %1059 ]
  %1070 = phi i32 [ %891, %886 ], [ %1051, %1059 ]
  %1071 = phi <2 x float> [ %895, %886 ], [ %1052, %1059 ]
  %1072 = phi <2 x float> [ %896, %886 ], [ %1053, %1059 ]
  %1073 = add nsw i32 %1064, 1
  store i32 %1073, ptr %798, align 8, !tbaa !220
  %1074 = icmp slt i32 %1073, %1063
  br i1 %1074, label %886, label %1075, !llvm.loop !426

1075:                                             ; preds = %1062
  %1076 = load i32, ptr %7, align 8, !tbaa !214
  %1077 = load i32, ptr %788, align 8, !tbaa !215
  br label %1078

1078:                                             ; preds = %1075, %870
  %1079 = phi i32 [ %857, %870 ], [ %1077, %1075 ]
  %1080 = phi i32 [ %861, %870 ], [ %1076, %1075 ]
  %1081 = phi i32 [ %858, %870 ], [ %1065, %1075 ]
  %1082 = phi float [ %863, %870 ], [ %1067, %1075 ]
  %1083 = phi float [ %862, %870 ], [ %1068, %1075 ]
  %1084 = phi i32 [ %860, %870 ], [ %1069, %1075 ]
  %1085 = phi i32 [ %859, %870 ], [ %1070, %1075 ]
  %1086 = phi <2 x float> [ %864, %870 ], [ %1071, %1075 ]
  %1087 = phi <2 x float> [ %865, %870 ], [ %1072, %1075 ]
  %1088 = add nsw i32 %1080, 1
  store i32 %1088, ptr %7, align 8, !tbaa !214
  %1089 = icmp slt i32 %1088, %1079
  br i1 %1089, label %856, label %1348, !llvm.loop !427

1090:                                             ; preds = %844, %816
  %1091 = load ptr, ptr %786, align 8, !tbaa !21
  %1092 = load ptr, ptr %822, align 8, !tbaa !31
  call void @pbvh_vertex_iter_init(ptr noundef %1091, ptr noundef %1092, ptr noundef nonnull %7, i32 noundef 1) #10
  store i32 0, ptr %787, align 4, !tbaa !210
  store i32 0, ptr %7, align 8, !tbaa !214
  %1093 = load i32, ptr %788, align 8, !tbaa !215
  %1094 = icmp sgt i32 %1093, 0
  br i1 %1094, label %1095, label %1348

1095:                                             ; preds = %1090
  %1096 = icmp eq ptr %840, null
  br label %1097

1097:                                             ; preds = %1337, %1095
  %1098 = phi i32 [ %1093, %1095 ], [ %1338, %1337 ]
  %1099 = phi i32 [ 0, %1095 ], [ %1343, %1337 ]
  %1100 = phi i32 [ 0, %1095 ], [ %1342, %1337 ]
  %1101 = phi i32 [ 0, %1095 ], [ %1346, %1337 ]
  %1102 = phi float [ 0.000000e+00, %1095 ], [ %1341, %1337 ]
  %1103 = phi float [ 0.000000e+00, %1095 ], [ %1340, %1337 ]
  %1104 = phi <2 x float> [ zeroinitializer, %1095 ], [ %1344, %1337 ]
  %1105 = phi <2 x float> [ zeroinitializer, %1095 ], [ %1345, %1337 ]
  %1106 = load ptr, ptr %789, align 8, !tbaa !216
  %1107 = icmp eq ptr %1106, null
  br i1 %1107, label %1108, label %1110

1108:                                             ; preds = %1097
  %1109 = load i32, ptr %797, align 8, !tbaa !217
  store i32 %1109, ptr %791, align 4, !tbaa !218
  store i32 1, ptr %792, align 8, !tbaa !219
  store i32 0, ptr %798, align 8, !tbaa !220
  br label %1123

1110:                                             ; preds = %1097
  %1111 = load i32, ptr %790, align 4, !tbaa !221
  store i32 %1111, ptr %791, align 4, !tbaa !218
  store i32 %1111, ptr %792, align 8, !tbaa !219
  %1112 = load ptr, ptr %793, align 8, !tbaa !222
  %1113 = sext i32 %1101 to i64
  %1114 = getelementptr inbounds i32, ptr %1112, i64 %1113
  %1115 = load i32, ptr %1114, align 4, !tbaa !24
  %1116 = sext i32 %1115 to i64
  %1117 = getelementptr inbounds ptr, ptr %1106, i64 %1116
  %1118 = load ptr, ptr %1117, align 8, !tbaa !31
  store ptr %1118, ptr %794, align 8, !tbaa !223
  %1119 = load ptr, ptr %795, align 8, !tbaa !224
  %1120 = getelementptr inbounds ptr, ptr %1119, i64 %1116
  %1121 = load ptr, ptr %1120, align 8, !tbaa !31
  store ptr %1121, ptr %796, align 8, !tbaa !225
  store i32 0, ptr %798, align 8, !tbaa !220
  %1122 = icmp sgt i32 %1111, 0
  br i1 %1122, label %1123, label %1337

1123:                                             ; preds = %1110, %1108
  %1124 = phi i32 [ %1111, %1110 ], [ 1, %1108 ]
  %1125 = phi i32 [ %1111, %1110 ], [ %1109, %1108 ]
  br label %1126

1126:                                             ; preds = %1123, %1322
  %1127 = phi i32 [ %1323, %1322 ], [ %1124, %1123 ]
  %1128 = phi i32 [ %1332, %1322 ], [ 0, %1123 ]
  %1129 = phi i32 [ %1325, %1322 ], [ %1125, %1123 ]
  %1130 = phi i32 [ %1329, %1322 ], [ %1099, %1123 ]
  %1131 = phi i32 [ %1328, %1322 ], [ %1100, %1123 ]
  %1132 = phi float [ %1327, %1322 ], [ %1102, %1123 ]
  %1133 = phi float [ %1326, %1322 ], [ %1103, %1123 ]
  %1134 = phi <2 x float> [ %1330, %1322 ], [ %1104, %1123 ]
  %1135 = phi <2 x float> [ %1331, %1322 ], [ %1105, %1123 ]
  store i32 0, ptr %799, align 4, !tbaa !226
  %1136 = icmp sgt i32 %1129, 0
  br i1 %1136, label %1137, label %1322

1137:                                             ; preds = %1126, %1306
  %1138 = phi i32 [ %1314, %1306 ], [ 0, %1126 ]
  %1139 = phi i32 [ %1310, %1306 ], [ %1130, %1126 ]
  %1140 = phi i32 [ %1309, %1306 ], [ %1131, %1126 ]
  %1141 = phi float [ %1308, %1306 ], [ %1132, %1126 ]
  %1142 = phi float [ %1307, %1306 ], [ %1133, %1126 ]
  %1143 = phi <2 x float> [ %1311, %1306 ], [ %1134, %1126 ]
  %1144 = phi <2 x float> [ %1312, %1306 ], [ %1135, %1126 ]
  %1145 = load ptr, ptr %794, align 8, !tbaa !223
  %1146 = icmp eq ptr %1145, null
  br i1 %1146, label %1182, label %1147

1147:                                             ; preds = %1137
  store ptr %1145, ptr %801, align 8, !tbaa !227
  %1148 = load ptr, ptr %800, align 8, !tbaa !228
  %1149 = getelementptr i8, ptr %1148, i64 20
  %1150 = load i32, ptr %1149, align 4, !tbaa !229
  %1151 = sext i32 %1150 to i64
  %1152 = getelementptr inbounds i8, ptr %1145, i64 %1151
  store ptr %1152, ptr %802, align 8, !tbaa !231
  %1153 = getelementptr inbounds %struct.CCGKey, ptr %1148, i64 0, i32 9
  %1154 = load i32, ptr %1153, align 4, !tbaa !232
  %1155 = icmp eq i32 %1154, 0
  br i1 %1155, label %1161, label %1156

1156:                                             ; preds = %1147
  %1157 = getelementptr i8, ptr %1148, i64 24
  %1158 = load i32, ptr %1157, align 4, !tbaa !233
  %1159 = sext i32 %1158 to i64
  %1160 = getelementptr inbounds i8, ptr %1145, i64 %1159
  br label %1161

1161:                                             ; preds = %1156, %1147
  %1162 = phi ptr [ %1160, %1156 ], [ null, %1147 ]
  store ptr %1162, ptr %803, align 8, !tbaa !234
  %1163 = getelementptr i8, ptr %1148, i64 4
  %1164 = load i32, ptr %1163, align 4, !tbaa !235
  %1165 = sext i32 %1164 to i64
  %1166 = getelementptr inbounds i8, ptr %1145, i64 %1165
  store ptr %1166, ptr %794, align 8, !tbaa !223
  %1167 = load ptr, ptr %796, align 8, !tbaa !225
  %1168 = icmp eq ptr %1167, null
  br i1 %1168, label %1225, label %1169

1169:                                             ; preds = %1161
  %1170 = load i32, ptr %798, align 8, !tbaa !220
  %1171 = load i32, ptr %790, align 4, !tbaa !221
  %1172 = mul nsw i32 %1171, %1170
  %1173 = add nsw i32 %1172, %1138
  %1174 = ashr i32 %1173, 5
  %1175 = sext i32 %1174 to i64
  %1176 = getelementptr inbounds i32, ptr %1167, i64 %1175
  %1177 = load i32, ptr %1176, align 4, !tbaa !24
  %1178 = and i32 %1173, 31
  %1179 = shl nuw i32 1, %1178
  %1180 = and i32 %1179, %1177
  %1181 = icmp eq i32 %1180, 0
  br i1 %1181, label %1225, label %1306

1182:                                             ; preds = %1137
  %1183 = load ptr, ptr %804, align 8, !tbaa !236
  %1184 = icmp eq ptr %1183, null
  br i1 %1184, label %1202, label %1185

1185:                                             ; preds = %1182
  %1186 = load ptr, ptr %805, align 8, !tbaa !237
  %1187 = sext i32 %1138 to i64
  %1188 = getelementptr inbounds i32, ptr %1186, i64 %1187
  %1189 = load i32, ptr %1188, align 4, !tbaa !24
  %1190 = sext i32 %1189 to i64
  %1191 = getelementptr inbounds %struct.MVert, ptr %1183, i64 %1190
  store ptr %1191, ptr %806, align 8, !tbaa !238
  %1192 = getelementptr inbounds %struct.MVert, ptr %1183, i64 %1190, i32 2
  %1193 = load i8, ptr %1192, align 2, !tbaa !239
  %1194 = and i8 %1193, 16
  %1195 = icmp eq i8 %1194, 0
  br i1 %1195, label %1196, label %1306

1196:                                             ; preds = %1185
  store ptr %1191, ptr %801, align 8, !tbaa !227
  %1197 = getelementptr inbounds %struct.MVert, ptr %1183, i64 %1190, i32 1
  store ptr %1197, ptr %807, align 8, !tbaa !241
  %1198 = load ptr, ptr %808, align 8, !tbaa !242
  %1199 = icmp eq ptr %1198, null
  br i1 %1199, label %1225, label %1200

1200:                                             ; preds = %1196
  %1201 = getelementptr inbounds float, ptr %1198, i64 %1190
  br label %1222

1202:                                             ; preds = %1182
  %1203 = load ptr, ptr %809, align 8, !tbaa !243
  %1204 = icmp eq ptr %1203, null
  %1205 = load ptr, ptr %813, align 8
  %1206 = select i1 %1204, ptr %1205, ptr %1203
  %1207 = select i1 %1204, ptr %812, ptr %810
  %1208 = getelementptr i8, ptr %1206, i64 8
  %1209 = load ptr, ptr %1208, align 8, !tbaa !244
  store ptr %1209, ptr %811, align 8, !tbaa !246
  call void @BLI_ghashIterator_step(ptr noundef nonnull %1207) #10
  %1210 = load ptr, ptr %811, align 8, !tbaa !246
  %1211 = getelementptr i8, ptr %1210, i64 13
  %1212 = load i8, ptr %1211, align 1, !tbaa !247
  %1213 = and i8 %1212, 2
  %1214 = icmp eq i8 %1213, 0
  br i1 %1214, label %1215, label %1306

1215:                                             ; preds = %1202
  %1216 = getelementptr inbounds %struct.BMVert, ptr %1210, i64 0, i32 2
  store ptr %1216, ptr %801, align 8, !tbaa !227
  %1217 = getelementptr inbounds %struct.BMVert, ptr %1210, i64 0, i32 3
  store ptr %1217, ptr %802, align 8, !tbaa !231
  %1218 = load ptr, ptr %1210, align 8, !tbaa !249
  %1219 = load i32, ptr %814, align 8, !tbaa !251
  %1220 = sext i32 %1219 to i64
  %1221 = getelementptr inbounds i8, ptr %1218, i64 %1220
  br label %1222

1222:                                             ; preds = %1215, %1200
  %1223 = phi ptr [ %1221, %1215 ], [ %1201, %1200 ]
  %1224 = phi ptr [ %1216, %1215 ], [ %1191, %1200 ]
  store ptr %1223, ptr %803, align 8, !tbaa !234
  br label %1225

1225:                                             ; preds = %1222, %1196, %1169, %1161
  %1226 = phi ptr [ %1191, %1196 ], [ %1145, %1161 ], [ %1145, %1169 ], [ %1224, %1222 ]
  br i1 %1096, label %1230, label %1227

1227:                                             ; preds = %1225
  %1228 = call zeroext i8 @ED_view3d_clipping_test(ptr noundef nonnull %840, ptr noundef nonnull %1226, i8 noundef zeroext 1) #10
  %1229 = icmp eq i8 %1228, 0
  br i1 %1229, label %1230, label %1306

1230:                                             ; preds = %1227, %1225
  %1231 = load float, ptr %1226, align 4, !tbaa !20
  %1232 = fsub fast float %833, %1231
  %1233 = getelementptr inbounds float, ptr %1226, i64 1
  %1234 = fmul fast float %1232, %1232
  %1235 = load <2 x float>, ptr %1233, align 4, !tbaa !20
  %1236 = fsub fast <2 x float> %835, %1235
  %1237 = fmul fast <2 x float> %1236, %1236
  %1238 = extractelement <2 x float> %1237, i64 0
  %1239 = fadd fast float %1238, %1234
  %1240 = extractelement <2 x float> %1237, i64 1
  %1241 = fadd fast float %1239, %1240
  %1242 = fcmp fast ugt float %1241, %831
  br i1 %1242, label %1306, label %1243

1243:                                             ; preds = %1230
  %1244 = load ptr, ptr %807, align 8, !tbaa !241
  %1245 = icmp eq ptr %1244, null
  br i1 %1245, label %1277, label %1246

1246:                                             ; preds = %1243
  %1247 = load i16, ptr %1244, align 2, !tbaa !302
  %1248 = sitofp i16 %1247 to float
  %1249 = getelementptr inbounds i16, ptr %1244, i64 1
  %1250 = load ptr, ptr %785, align 8, !tbaa !22
  %1251 = getelementptr inbounds %struct.StrokeCache, ptr %1250, i64 0, i32 33
  %1252 = load float, ptr %1251, align 4, !tbaa !20
  %1253 = fmul fast float %1252, %1248
  %1254 = getelementptr inbounds %struct.StrokeCache, ptr %1250, i64 0, i32 33, i64 1
  %1255 = load <2 x i16>, ptr %1249, align 2, !tbaa !302
  %1256 = sitofp <2 x i16> %1255 to <2 x float>
  %1257 = load <2 x float>, ptr %1254, align 4, !tbaa !20
  %1258 = fmul fast <2 x float> %1257, %1256
  %1259 = extractelement <2 x float> %1258, i64 0
  %1260 = fadd fast float %1259, %1253
  %1261 = extractelement <2 x float> %1258, i64 1
  %1262 = fadd fast float %1260, %1261
  %1263 = fmul fast float %1262, 0x3F00002000000000
  %1264 = fcmp fast ogt float %1263, 0.000000e+00
  %1265 = load ptr, ptr %801, align 8, !tbaa !227
  %1266 = load <2 x float>, ptr %1265, align 4, !tbaa !20
  %1267 = getelementptr inbounds float, ptr %1265, i64 2
  %1268 = load float, ptr %1267, align 4, !tbaa !20
  br i1 %1264, label %1269, label %1273

1269:                                             ; preds = %1246
  %1270 = fadd fast <2 x float> %1266, %1144
  %1271 = fadd fast float %1268, %1141
  %1272 = add nsw i32 %1140, 1
  br label %1306

1273:                                             ; preds = %1246
  %1274 = fadd fast <2 x float> %1266, %1143
  %1275 = fadd fast float %1268, %1142
  %1276 = add nsw i32 %1139, 1
  br label %1306

1277:                                             ; preds = %1243
  %1278 = load ptr, ptr %785, align 8, !tbaa !22
  %1279 = getelementptr inbounds %struct.StrokeCache, ptr %1278, i64 0, i32 33
  %1280 = load ptr, ptr %802, align 8, !tbaa !231
  %1281 = load float, ptr %1279, align 4, !tbaa !20
  %1282 = load float, ptr %1280, align 4, !tbaa !20
  %1283 = fmul fast float %1282, %1281
  %1284 = getelementptr inbounds %struct.StrokeCache, ptr %1278, i64 0, i32 33, i64 1
  %1285 = getelementptr inbounds float, ptr %1280, i64 1
  %1286 = load <2 x float>, ptr %1284, align 4, !tbaa !20
  %1287 = load <2 x float>, ptr %1285, align 4, !tbaa !20
  %1288 = fmul fast <2 x float> %1287, %1286
  %1289 = extractelement <2 x float> %1288, i64 0
  %1290 = fadd fast float %1289, %1283
  %1291 = extractelement <2 x float> %1288, i64 1
  %1292 = fadd fast float %1290, %1291
  %1293 = fcmp fast ogt float %1292, 0.000000e+00
  %1294 = load ptr, ptr %801, align 8, !tbaa !227
  %1295 = load <2 x float>, ptr %1294, align 4, !tbaa !20
  %1296 = getelementptr inbounds float, ptr %1294, i64 2
  %1297 = load float, ptr %1296, align 4, !tbaa !20
  br i1 %1293, label %1298, label %1302

1298:                                             ; preds = %1277
  %1299 = fadd fast <2 x float> %1295, %1144
  %1300 = fadd fast float %1297, %1141
  %1301 = add nsw i32 %1140, 1
  br label %1306

1302:                                             ; preds = %1277
  %1303 = fadd fast <2 x float> %1295, %1143
  %1304 = fadd fast float %1297, %1142
  %1305 = add nsw i32 %1139, 1
  br label %1306

1306:                                             ; preds = %1302, %1298, %1273, %1269, %1230, %1227, %1202, %1185, %1169
  %1307 = phi float [ %1142, %1230 ], [ %1142, %1298 ], [ %1304, %1302 ], [ %1142, %1202 ], [ %1142, %1185 ], [ %1142, %1169 ], [ %1142, %1269 ], [ %1275, %1273 ], [ %1142, %1227 ]
  %1308 = phi float [ %1141, %1230 ], [ %1300, %1298 ], [ %1141, %1302 ], [ %1141, %1202 ], [ %1141, %1185 ], [ %1141, %1169 ], [ %1271, %1269 ], [ %1141, %1273 ], [ %1141, %1227 ]
  %1309 = phi i32 [ %1140, %1230 ], [ %1301, %1298 ], [ %1140, %1302 ], [ %1140, %1202 ], [ %1140, %1185 ], [ %1140, %1169 ], [ %1272, %1269 ], [ %1140, %1273 ], [ %1140, %1227 ]
  %1310 = phi i32 [ %1139, %1230 ], [ %1139, %1298 ], [ %1305, %1302 ], [ %1139, %1202 ], [ %1139, %1185 ], [ %1139, %1169 ], [ %1139, %1269 ], [ %1276, %1273 ], [ %1139, %1227 ]
  %1311 = phi <2 x float> [ %1143, %1230 ], [ %1143, %1298 ], [ %1303, %1302 ], [ %1143, %1202 ], [ %1143, %1185 ], [ %1143, %1169 ], [ %1143, %1269 ], [ %1274, %1273 ], [ %1143, %1227 ]
  %1312 = phi <2 x float> [ %1144, %1230 ], [ %1299, %1298 ], [ %1144, %1302 ], [ %1144, %1202 ], [ %1144, %1185 ], [ %1144, %1169 ], [ %1270, %1269 ], [ %1144, %1273 ], [ %1144, %1227 ]
  %1313 = load i32, ptr %799, align 4, !tbaa !226
  %1314 = add nsw i32 %1313, 1
  store i32 %1314, ptr %799, align 4, !tbaa !226
  %1315 = load i32, ptr %787, align 4, !tbaa !210
  %1316 = add nsw i32 %1315, 1
  store i32 %1316, ptr %787, align 4, !tbaa !210
  %1317 = load i32, ptr %791, align 4, !tbaa !218
  %1318 = icmp slt i32 %1314, %1317
  br i1 %1318, label %1137, label %1319, !llvm.loop !428

1319:                                             ; preds = %1306
  %1320 = load i32, ptr %798, align 8, !tbaa !220
  %1321 = load i32, ptr %792, align 8, !tbaa !219
  br label %1322

1322:                                             ; preds = %1319, %1126
  %1323 = phi i32 [ %1127, %1126 ], [ %1321, %1319 ]
  %1324 = phi i32 [ %1128, %1126 ], [ %1320, %1319 ]
  %1325 = phi i32 [ %1129, %1126 ], [ %1317, %1319 ]
  %1326 = phi float [ %1133, %1126 ], [ %1307, %1319 ]
  %1327 = phi float [ %1132, %1126 ], [ %1308, %1319 ]
  %1328 = phi i32 [ %1131, %1126 ], [ %1309, %1319 ]
  %1329 = phi i32 [ %1130, %1126 ], [ %1310, %1319 ]
  %1330 = phi <2 x float> [ %1134, %1126 ], [ %1311, %1319 ]
  %1331 = phi <2 x float> [ %1135, %1126 ], [ %1312, %1319 ]
  %1332 = add nsw i32 %1324, 1
  store i32 %1332, ptr %798, align 8, !tbaa !220
  %1333 = icmp slt i32 %1332, %1323
  br i1 %1333, label %1126, label %1334, !llvm.loop !429

1334:                                             ; preds = %1322
  %1335 = load i32, ptr %7, align 8, !tbaa !214
  %1336 = load i32, ptr %788, align 8, !tbaa !215
  br label %1337

1337:                                             ; preds = %1334, %1110
  %1338 = phi i32 [ %1098, %1110 ], [ %1336, %1334 ]
  %1339 = phi i32 [ %1101, %1110 ], [ %1335, %1334 ]
  %1340 = phi float [ %1103, %1110 ], [ %1326, %1334 ]
  %1341 = phi float [ %1102, %1110 ], [ %1327, %1334 ]
  %1342 = phi i32 [ %1100, %1110 ], [ %1328, %1334 ]
  %1343 = phi i32 [ %1099, %1110 ], [ %1329, %1334 ]
  %1344 = phi <2 x float> [ %1104, %1110 ], [ %1330, %1334 ]
  %1345 = phi <2 x float> [ %1105, %1110 ], [ %1331, %1334 ]
  %1346 = add nsw i32 %1339, 1
  store i32 %1346, ptr %7, align 8, !tbaa !214
  %1347 = icmp slt i32 %1346, %1338
  br i1 %1347, label %1097, label %1348, !llvm.loop !430

1348:                                             ; preds = %1078, %1337, %1090, %848
  %1349 = phi float [ 0.000000e+00, %1090 ], [ 0.000000e+00, %848 ], [ %1340, %1337 ], [ %1082, %1078 ]
  %1350 = phi float [ 0.000000e+00, %1090 ], [ 0.000000e+00, %848 ], [ %1341, %1337 ], [ %1083, %1078 ]
  %1351 = phi i32 [ 0, %1090 ], [ 0, %848 ], [ %1342, %1337 ], [ %1084, %1078 ]
  %1352 = phi i32 [ 0, %1090 ], [ 0, %848 ], [ %1343, %1337 ], [ %1085, %1078 ]
  %1353 = phi <2 x float> [ zeroinitializer, %1090 ], [ zeroinitializer, %848 ], [ %1344, %1337 ], [ %1086, %1078 ]
  %1354 = phi <2 x float> [ zeroinitializer, %1090 ], [ zeroinitializer, %848 ], [ %1345, %1337 ], [ %1087, %1078 ]
  %1355 = load <2 x float>, ptr %5, align 4, !tbaa !20
  %1356 = fadd fast <2 x float> %1355, %1354
  store <2 x float> %1356, ptr %5, align 4, !tbaa !20
  %1357 = load float, ptr %782, align 4, !tbaa !20
  %1358 = fadd fast float %1357, %1350
  store float %1358, ptr %782, align 4, !tbaa !20
  %1359 = fadd fast <2 x float> %1353, %821
  %1360 = fadd fast float %1349, %820
  %1361 = add nsw i32 %1351, %819
  %1362 = add nsw i32 %1352, %818
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %7) #10
  %1363 = add nuw nsw i64 %817, 1
  %1364 = icmp eq i64 %1363, %815
  br i1 %1364, label %1365, label %816, !llvm.loop !431

1365:                                             ; preds = %1348
  %1366 = icmp eq i32 %1361, 0
  br i1 %1366, label %1374, label %1367

1367:                                             ; preds = %1365
  %1368 = sitofp i32 %1361 to float
  %1369 = fdiv fast float 1.000000e+00, %1368
  %1370 = insertelement <2 x float> poison, float %1369, i64 0
  %1371 = shufflevector <2 x float> %1370, <2 x float> poison, <2 x i32> zeroinitializer
  %1372 = fmul fast <2 x float> %1356, %1371
  store <2 x float> %1372, ptr %5, align 4, !tbaa !20
  %1373 = fmul fast float %1358, %1369
  br label %1384

1374:                                             ; preds = %1365
  %1375 = icmp eq i32 %1362, 0
  br i1 %1375, label %1383, label %1376

1376:                                             ; preds = %1374
  %1377 = sitofp i32 %1362 to float
  %1378 = fdiv fast float 1.000000e+00, %1377
  %1379 = insertelement <2 x float> poison, float %1378, i64 0
  %1380 = shufflevector <2 x float> %1379, <2 x float> poison, <2 x i32> zeroinitializer
  %1381 = fmul fast <2 x float> %1380, %1359
  store <2 x float> %1381, ptr %5, align 4, !tbaa !20
  %1382 = fmul fast float %1378, %1360
  br label %1384

1383:                                             ; preds = %1374, %780
  store <2 x float> zeroinitializer, ptr %5, align 4, !tbaa !20
  br label %1384

1384:                                             ; preds = %1367, %1376, %1383
  %1385 = phi float [ %1382, %1376 ], [ 0.000000e+00, %1383 ], [ %1373, %1367 ]
  store float %1385, ptr %782, align 4, !tbaa !20
  br label %1386

1386:                                             ; preds = %1384, %776
  %1387 = load ptr, ptr %12, align 8, !tbaa !22
  %1388 = getelementptr inbounds %struct.StrokeCache, ptr %1387, i64 0, i32 34
  %1389 = load float, ptr %4, align 4, !tbaa !20
  store float %1389, ptr %1388, align 4, !tbaa !20
  %1390 = getelementptr inbounds float, ptr %4, i64 1
  %1391 = load float, ptr %1390, align 4, !tbaa !20
  %1392 = getelementptr inbounds %struct.StrokeCache, ptr %1387, i64 0, i32 34, i64 1
  store float %1391, ptr %1392, align 4, !tbaa !20
  %1393 = getelementptr inbounds float, ptr %4, i64 2
  %1394 = load float, ptr %1393, align 4, !tbaa !20
  %1395 = getelementptr inbounds %struct.StrokeCache, ptr %1387, i64 0, i32 34, i64 2
  store float %1394, ptr %1395, align 4, !tbaa !20
  %1396 = getelementptr inbounds %struct.StrokeCache, ptr %1387, i64 0, i32 37
  %1397 = load float, ptr %5, align 4, !tbaa !20
  store float %1397, ptr %1396, align 4, !tbaa !20
  %1398 = getelementptr inbounds float, ptr %5, i64 1
  %1399 = load float, ptr %1398, align 4, !tbaa !20
  %1400 = getelementptr inbounds %struct.StrokeCache, ptr %1387, i64 0, i32 37, i64 1
  store float %1399, ptr %1400, align 4, !tbaa !20
  %1401 = getelementptr inbounds float, ptr %5, i64 2
  %1402 = load float, ptr %1401, align 4, !tbaa !20
  %1403 = getelementptr inbounds %struct.StrokeCache, ptr %1387, i64 0, i32 37, i64 2
  store float %1402, ptr %1403, align 4, !tbaa !20
  br label %1430

1404:                                             ; preds = %25, %17, %6
  %1405 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 34
  %1406 = load float, ptr %1405, align 4, !tbaa !20
  store float %1406, ptr %4, align 4, !tbaa !20
  %1407 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 34, i64 1
  %1408 = load float, ptr %1407, align 4, !tbaa !20
  %1409 = getelementptr inbounds float, ptr %4, i64 1
  store float %1408, ptr %1409, align 4, !tbaa !20
  %1410 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 34, i64 2
  %1411 = load float, ptr %1410, align 4, !tbaa !20
  %1412 = getelementptr inbounds float, ptr %4, i64 2
  store float %1411, ptr %1412, align 4, !tbaa !20
  %1413 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 37
  %1414 = load float, ptr %1413, align 4, !tbaa !20
  store float %1414, ptr %5, align 4, !tbaa !20
  %1415 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 37, i64 1
  %1416 = load float, ptr %1415, align 4, !tbaa !20
  %1417 = getelementptr inbounds float, ptr %5, i64 1
  store float %1416, ptr %1417, align 4, !tbaa !20
  %1418 = getelementptr inbounds %struct.StrokeCache, ptr %13, i64 0, i32 37, i64 2
  %1419 = load float, ptr %1418, align 4, !tbaa !20
  %1420 = getelementptr inbounds float, ptr %5, i64 2
  store float %1419, ptr %1420, align 4, !tbaa !20
  %1421 = trunc i32 %15 to i8
  tail call void @flip_v3_v3(ptr noundef nonnull %4, ptr noundef nonnull %4, i8 noundef zeroext %1421) #10
  %1422 = load ptr, ptr %12, align 8, !tbaa !22
  %1423 = getelementptr inbounds %struct.StrokeCache, ptr %1422, i64 0, i32 31
  %1424 = load i32, ptr %1423, align 8, !tbaa !277
  %1425 = trunc i32 %1424 to i8
  tail call void @flip_v3_v3(ptr noundef nonnull %5, ptr noundef nonnull %5, i8 noundef zeroext %1425) #10
  %1426 = load ptr, ptr %12, align 8, !tbaa !22
  %1427 = getelementptr inbounds %struct.StrokeCache, ptr %1426, i64 0, i32 39
  tail call void @mul_m4_v3(ptr noundef nonnull %1427, ptr noundef nonnull %4) #10
  %1428 = load ptr, ptr %12, align 8, !tbaa !22
  %1429 = getelementptr inbounds %struct.StrokeCache, ptr %1428, i64 0, i32 39
  tail call void @mul_m4_v3(ptr noundef nonnull %1429, ptr noundef nonnull %5) #10
  br label %1430

1430:                                             ; preds = %1404, %1386
  ret void
}

declare void @multires_stitch_grids(ptr noundef) local_unnamed_addr #3

declare void @BKE_pbvh_get_grid_key(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @BKE_pbvh_grid_hidden(ptr noundef) local_unnamed_addr #3

declare i32 @poly_get_adj_loops_from_vert(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @CustomData_bmesh_get(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @bmiter__loop_of_vert_begin(ptr noundef) #3

declare ptr @bmiter__loop_of_vert_step(ptr noundef) #3

declare i32 @BM_vert_face_count(ptr noundef) local_unnamed_addr #3

declare void @BKE_pbvh_gather_proxies(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BKE_pbvh_node_get_proxies(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BKE_pbvh_node_free_proxies(ptr noundef) local_unnamed_addr #3

declare ptr @BKE_pbvh_get_vertCos(ptr noundef) local_unnamed_addr #3

declare ptr @CTX_wm_region(ptr noundef) local_unnamed_addr #3

declare void @multires_mark_as_modified(ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @GPU_drawobject_free(ptr noundef) local_unnamed_addr #3

declare void @DAG_id_tag_update(ptr noundef, i16 noundef signext) local_unnamed_addr #3

declare void @ED_region_tag_redraw(ptr noundef) local_unnamed_addr #3

declare void @ED_region_tag_redraw_partial(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BKE_pbvh_redraw_BB(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare zeroext i8 @paint_convert_bb_to_rect(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @sculpt_undo_push_end() local_unnamed_addr #3

declare void @BKE_pbvh_bmesh_after_stroke(ptr noundef) local_unnamed_addr #3

declare void @ntreeTexEndExecTree(ptr noundef) local_unnamed_addr #3

declare i32 @paint_stroke_exec(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @paint_stroke_cancel(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @sculpt_mode_toggle_exec(ptr noundef %0, ptr nocapture noundef readonly %1) #2 {
  %3 = alloca %struct.VirtualModifierData, align 8
  %4 = tail call ptr @CTX_data_scene(ptr noundef %0) #10
  %5 = tail call ptr @CTX_data_tool_settings(ptr noundef %0) #10
  %6 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %7 = getelementptr inbounds %struct.Object, ptr %6, i64 0, i32 27
  %8 = load i32, ptr %7, align 8, !tbaa !43
  %9 = tail call ptr @BKE_sculpt_multires_active(ptr noundef %4, ptr noundef %6) #10
  %10 = and i32 %8, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.wmOperator, ptr %1, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !432
  %15 = tail call zeroext i8 @ED_object_mode_compat_set(ptr noundef %0, ptr noundef nonnull %6, i32 noundef 2, ptr noundef %14) #10
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %135, label %17

17:                                               ; preds = %12, %2
  %18 = tail call ptr @BKE_mesh_from_object(ptr noundef nonnull %6) #10
  %19 = icmp eq ptr %9, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.MultiresModifierData, ptr %9, i64 0, i32 2
  %22 = load i8, ptr %21, align 1, !tbaa !433
  %23 = getelementptr inbounds %struct.MultiresModifierData, ptr %9, i64 0, i32 1
  %24 = load i8, ptr %23, align 8, !tbaa !435
  %25 = icmp ne i8 %22, %24
  %26 = zext i1 %25 to i32
  br label %27

27:                                               ; preds = %20, %17
  %28 = phi i32 [ 0, %17 ], [ %26, %20 ]
  call void @llvm.lifetime.start.p0(i64 696, ptr nonnull %3) #10
  %29 = call ptr @modifiers_getVirtualModifierList(ptr noundef nonnull %6, ptr noundef nonnull %3) #10
  %30 = icmp eq ptr %29, null
  br i1 %30, label %38, label %31

31:                                               ; preds = %27, %35
  %32 = phi ptr [ %36, %35 ], [ %29, %27 ]
  %33 = call zeroext i8 @modifier_isEnabled(ptr noundef %4, ptr noundef nonnull %32, i32 noundef 1) #10
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %31
  %36 = load ptr, ptr %32, align 8, !tbaa !436
  %37 = icmp eq ptr %36, null
  br i1 %37, label %38, label %31, !llvm.loop !437

38:                                               ; preds = %31, %35, %27
  %39 = phi i32 [ 0, %27 ], [ 1, %31 ], [ 0, %35 ]
  call void @llvm.lifetime.end.p0(i64 696, ptr nonnull %3) #10
  %40 = or i32 %39, %28
  br i1 %11, label %64, label %41

41:                                               ; preds = %38
  br i1 %19, label %43, label %42

42:                                               ; preds = %41
  call void @multires_force_update(ptr noundef %6) #10
  br label %43

43:                                               ; preds = %42, %41
  %44 = icmp eq i32 %40, 0
  br i1 %44, label %45, label %53

45:                                               ; preds = %43
  %46 = getelementptr inbounds %struct.Object, ptr %6, i64 0, i32 2
  %47 = load ptr, ptr %46, align 8, !tbaa !5
  %48 = icmp eq ptr %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.SculptSession, ptr %47, i64 0, i32 10
  %51 = load ptr, ptr %50, align 8, !tbaa !86
  %52 = icmp eq ptr %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %49, %43
  call void @DAG_id_tag_update(ptr noundef %6, i16 noundef signext 2) #10
  br label %54

54:                                               ; preds = %53, %49, %45
  %55 = getelementptr inbounds %struct.Mesh, ptr %18, i64 0, i32 38
  %56 = load i16, ptr %55, align 2, !tbaa !118
  %57 = and i16 %56, 1024
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %54
  %60 = call i32 @sculpt_dynamic_topology_toggle_exec(ptr noundef %0, ptr poison)
  br label %61

61:                                               ; preds = %59, %54
  %62 = load i32, ptr %7, align 8, !tbaa !43
  %63 = and i32 %62, -3
  store i32 %63, ptr %7, align 8, !tbaa !43
  call void @BKE_free_sculptsession(ptr noundef %6) #10
  call void @paint_cursor_delete_textures() #10
  br label %134

64:                                               ; preds = %38
  %65 = load i32, ptr %7, align 8, !tbaa !43
  %66 = or i32 %65, 2
  store i32 %66, ptr %7, align 8, !tbaa !43
  %67 = getelementptr inbounds %struct.Mesh, ptr %18, i64 0, i32 38
  %68 = load i16, ptr %67, align 2, !tbaa !118
  %69 = and i16 %68, -1025
  store i16 %69, ptr %67, align 2, !tbaa !118
  %70 = icmp eq i32 %40, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %64
  call void @DAG_id_tag_update(ptr noundef nonnull %6, i16 noundef signext 2) #10
  br label %72

72:                                               ; preds = %71, %64
  %73 = getelementptr inbounds %struct.ToolSettings, ptr %5, i64 0, i32 2
  %74 = load ptr, ptr %73, align 8, !tbaa !51
  %75 = icmp eq ptr %74, null
  br i1 %75, label %76, label %85

76:                                               ; preds = %72
  %77 = load ptr, ptr @MEM_callocN, align 8, !tbaa !31
  %78 = call ptr %77(i64 noundef 88, ptr noundef nonnull @.str.47) #10
  store ptr %78, ptr %73, align 8, !tbaa !51
  %79 = getelementptr inbounds %struct.Paint, ptr %78, i64 0, i32 6
  %80 = getelementptr inbounds %struct.Paint, ptr %78, i64 0, i32 4
  %81 = load i32, ptr %80, align 4, !tbaa !438
  %82 = or i32 %81, 1
  store i32 %82, ptr %80, align 4, !tbaa !438
  %83 = load <2 x i32>, ptr %79, align 4, !tbaa !24
  %84 = or <2 x i32> %83, <i32 1, i32 6144>
  store <2 x i32> %84, ptr %79, align 4, !tbaa !24
  br label %85

85:                                               ; preds = %76, %72
  %86 = phi ptr [ %78, %76 ], [ %74, %72 ]
  %87 = getelementptr inbounds %struct.Sculpt, ptr %86, i64 0, i32 3
  %88 = load float, ptr %87, align 8, !tbaa !209
  %89 = fcmp fast une float %88, 0.000000e+00
  br i1 %89, label %91, label %90

90:                                               ; preds = %85
  store float 1.200000e+01, ptr %87, align 8, !tbaa !209
  br label %91

91:                                               ; preds = %90, %85
  %92 = getelementptr inbounds %struct.Sculpt, ptr %86, i64 0, i32 6
  %93 = load float, ptr %92, align 4, !tbaa !208
  %94 = fcmp fast oeq float %93, 0.000000e+00
  br i1 %94, label %95, label %96

95:                                               ; preds = %91
  store float 3.000000e+01, ptr %92, align 4, !tbaa !208
  br label %96

96:                                               ; preds = %95, %91
  %97 = getelementptr inbounds %struct.Object, ptr %6, i64 0, i32 2
  %98 = load ptr, ptr %97, align 8, !tbaa !5
  %99 = icmp eq ptr %98, null
  br i1 %99, label %101, label %100

100:                                              ; preds = %96
  call void @BKE_free_sculptsession(ptr noundef nonnull %6) #10
  br label %101

101:                                              ; preds = %100, %96
  %102 = load ptr, ptr @MEM_callocN, align 8, !tbaa !31
  %103 = call ptr %102(i64 noundef 232, ptr noundef nonnull @.str.52) #10
  store ptr %103, ptr %97, align 8, !tbaa !5
  %104 = getelementptr inbounds %struct.Scene, ptr %4, i64 0, i32 20
  %105 = load ptr, ptr %104, align 8, !tbaa !94
  %106 = getelementptr inbounds %struct.ToolSettings, ptr %105, i64 0, i32 2
  %107 = load ptr, ptr %106, align 8, !tbaa !51
  call void @BKE_sculpt_update_mesh_elements(ptr noundef %4, ptr noundef %107, ptr noundef nonnull %6, i8 noundef zeroext 0, i8 noundef zeroext 0) #10
  br i1 %19, label %110, label %108

108:                                              ; preds = %101
  %109 = call i32 @BKE_sculpt_mask_layers_ensure(ptr noundef nonnull %6, ptr noundef nonnull %9) #10
  br label %110

110:                                              ; preds = %108, %101
  %111 = getelementptr inbounds %struct.Object, ptr %6, i64 0, i32 36
  %112 = load float, ptr %111, align 4, !tbaa !20
  %113 = getelementptr inbounds %struct.Object, ptr %6, i64 0, i32 36, i64 1
  %114 = load float, ptr %113, align 4, !tbaa !20
  %115 = fsub fast float %112, %114
  %116 = call fast float @llvm.fabs.f32(float %115)
  %117 = fcmp fast olt float %116, 0x3F1A36E2E0000000
  br i1 %117, label %118, label %128

118:                                              ; preds = %110
  %119 = getelementptr inbounds %struct.Object, ptr %6, i64 0, i32 36, i64 2
  %120 = load float, ptr %119, align 4, !tbaa !20
  %121 = fsub fast float %114, %120
  %122 = call fast float @llvm.fabs.f32(float %121)
  %123 = fcmp fast olt float %122, 0x3F1A36E2E0000000
  br i1 %123, label %124, label %128

124:                                              ; preds = %118
  %125 = getelementptr inbounds %struct.Object, ptr %6, i64 0, i32 47
  %126 = call zeroext i8 @is_negative_m4(ptr noundef nonnull %125) #10
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %132, label %128

128:                                              ; preds = %124, %110, %118
  %129 = phi ptr [ @.str.48, %118 ], [ @.str.48, %110 ], [ @.str.49, %124 ]
  %130 = getelementptr inbounds %struct.wmOperator, ptr %1, i64 0, i32 8
  %131 = load ptr, ptr %130, align 8, !tbaa !432
  call void @BKE_report(ptr noundef %131, i32 noundef 16, ptr noundef nonnull %129) #10
  br label %132

132:                                              ; preds = %128, %124
  %133 = load ptr, ptr %73, align 8, !tbaa !51
  call void @BKE_paint_init(ptr noundef %133, ptr noundef nonnull @PAINT_CURSOR_SCULPT) #10
  call void @paint_cursor_start(ptr noundef %0, ptr noundef nonnull @sculpt_poll_view3d) #10
  br label %134

134:                                              ; preds = %132, %61
  call void @WM_event_add_notifier(ptr noundef %0, i32 noundef 67829760, ptr noundef %4) #10
  br label %135

135:                                              ; preds = %12, %134
  %136 = phi i32 [ 4, %134 ], [ 2, %12 ]
  ret i32 %136
}

declare i32 @ED_operator_object_active_editable_mesh(ptr noundef) #3

declare ptr @BKE_sculpt_multires_active(ptr noundef, ptr noundef) local_unnamed_addr #3

declare zeroext i8 @ED_object_mode_compat_set(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare ptr @BKE_mesh_from_object(ptr noundef) local_unnamed_addr #3

declare void @multires_force_update(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @sculpt_dynamic_topology_toggle_exec(ptr noundef %0, ptr nocapture readnone %1) #2 {
  %3 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %4 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !5
  %6 = getelementptr inbounds %struct.SculptSession, ptr %5, i64 0, i32 10
  %7 = load ptr, ptr %6, align 8, !tbaa !86
  %8 = icmp eq ptr %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  tail call void @sculpt_undo_push_begin(ptr noundef nonnull @.str.50) #10
  %10 = tail call ptr @sculpt_undo_push_node(ptr noundef nonnull %3, ptr noundef null, i32 noundef 4) #10
  tail call void @sculpt_dynamic_topology_disable(ptr noundef %0, ptr noundef null)
  br label %13

11:                                               ; preds = %2
  tail call void @sculpt_undo_push_begin(ptr noundef nonnull @.str.51) #10
  tail call void @sculpt_dynamic_topology_enable(ptr noundef %0)
  %12 = tail call ptr @sculpt_undo_push_node(ptr noundef nonnull %3, ptr noundef null, i32 noundef 3) #10
  br label %13

13:                                               ; preds = %11, %9
  tail call void @sculpt_undo_push_end() #10
  ret i32 4
}

declare void @BKE_free_sculptsession(ptr noundef) local_unnamed_addr #3

declare void @paint_cursor_delete_textures() local_unnamed_addr #3

declare i32 @BKE_sculpt_mask_layers_ensure(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BKE_report(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare zeroext i8 @is_negative_m4(ptr noundef) local_unnamed_addr #3

declare void @BKE_paint_init(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @paint_cursor_start(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @modifiers_getVirtualModifierList(ptr noundef, ptr noundef) local_unnamed_addr #3

declare zeroext i8 @modifier_isEnabled(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @sculpt_set_persistent_base_exec(ptr noundef %0, ptr nocapture readnone %1) #2 {
  %3 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %4 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !5
  %6 = icmp eq ptr %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.SculptSession, ptr %5, i64 0, i32 26
  %9 = load ptr, ptr %8, align 8, !tbaa !179
  %10 = icmp eq ptr %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  tail call void %12(ptr noundef nonnull %9) #10
  br label %13

13:                                               ; preds = %11, %7
  store ptr null, ptr %8, align 8, !tbaa !179
  br label %14

14:                                               ; preds = %13, %2
  ret i32 4
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @sculpt_dynamic_topology_toggle_invoke(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture readnone %2) #2 {
  %4 = alloca %struct.PointerRNA, align 8
  %5 = alloca %struct.VirtualModifierData, align 8
  %6 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %7 = getelementptr inbounds %struct.Object, ptr %6, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.SculptSession, ptr %8, i64 0, i32 10
  %10 = load ptr, ptr %9, align 8, !tbaa !86
  %11 = icmp eq ptr %10, null
  br i1 %11, label %12, label %69

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.Object, ptr %6, i64 0, i32 19
  %14 = load ptr, ptr %13, align 8, !tbaa !25
  %15 = tail call ptr @CTX_data_scene(ptr noundef %0) #10
  call void @llvm.lifetime.start.p0(i64 696, ptr nonnull %5) #10
  %16 = getelementptr inbounds %struct.Mesh, ptr %14, i64 0, i32 21
  %17 = getelementptr inbounds %struct.Mesh, ptr %14, i64 0, i32 22
  %18 = getelementptr inbounds %struct.Mesh, ptr %14, i64 0, i32 23
  br label %19

19:                                               ; preds = %12, %34
  %20 = phi i1 [ false, %12 ], [ %36, %34 ]
  %21 = phi i32 [ 0, %12 ], [ %35, %34 ]
  %22 = and i32 %21, 2147483643
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %19
  switch i32 %21, label %25 [
    i32 34, label %34
    i32 26, label %34
    i32 25, label %34
    i32 7, label %34
    i32 3, label %34
  ]

25:                                               ; preds = %24
  %26 = tail call zeroext i8 @CustomData_has_layer(ptr noundef nonnull %16, i32 noundef %21) #10
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %38

28:                                               ; preds = %25
  %29 = tail call zeroext i8 @CustomData_has_layer(ptr noundef nonnull %17, i32 noundef %21) #10
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %28
  %32 = tail call zeroext i8 @CustomData_has_layer(ptr noundef nonnull %18, i32 noundef %21) #10
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %24, %24, %24, %24, %24, %19, %31
  %35 = add nuw nsw i32 %21, 1
  %36 = icmp ugt i32 %21, 39
  %37 = icmp eq i32 %35, 41
  br i1 %37, label %38, label %19, !llvm.loop !439

38:                                               ; preds = %25, %28, %31, %34
  %39 = phi i1 [ %20, %25 ], [ %20, %28 ], [ %20, %31 ], [ %36, %34 ]
  %40 = call ptr @modifiers_getVirtualModifierList(ptr noundef %6, ptr noundef nonnull %5) #10
  %41 = icmp eq ptr %40, null
  br i1 %41, label %56, label %42

42:                                               ; preds = %38, %53
  %43 = phi ptr [ %54, %53 ], [ %40, %38 ]
  %44 = getelementptr inbounds %struct.ModifierData, ptr %43, i64 0, i32 2
  %45 = load i32, ptr %44, align 8, !tbaa !161
  %46 = call ptr @modifierType_getInfo(i32 noundef %45) #10
  %47 = call zeroext i8 @modifier_isEnabled(ptr noundef %15, ptr noundef nonnull %43, i32 noundef 1) #10
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %struct.ModifierTypeInfo, ptr %46, i64 0, i32 3
  %51 = load i32, ptr %50, align 4, !tbaa !440
  %52 = icmp eq i32 %51, 2
  br i1 %52, label %56, label %53

53:                                               ; preds = %42, %49
  %54 = load ptr, ptr %43, align 8, !tbaa !436
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %42, !llvm.loop !442

56:                                               ; preds = %53, %49, %38
  %57 = phi i1 [ true, %38 ], [ false, %49 ], [ true, %53 ]
  %58 = and i1 %39, %57
  br i1 %58, label %68, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.wmOperator, ptr %1, i64 0, i32 4
  %61 = load ptr, ptr %60, align 8, !tbaa !144
  %62 = call ptr @uiPupMenuBegin(ptr noundef %0, ptr noundef nonnull @.str.59, i32 noundef 2) #10
  %63 = call ptr @uiPupMenuLayout(ptr noundef %62) #10
  br i1 %39, label %65, label %64

64:                                               ; preds = %59
  call void @uiItemL(ptr noundef %63, ptr noundef nonnull @.str.60, i32 noundef 110) #10
  call void @uiItemL(ptr noundef %63, ptr noundef nonnull @.str.61, i32 noundef 0) #10
  call void @uiItemS(ptr noundef %63) #10
  br label %65

65:                                               ; preds = %64, %59
  br i1 %57, label %67, label %66

66:                                               ; preds = %65
  call void @uiItemL(ptr noundef %63, ptr noundef nonnull @.str.62, i32 noundef 110) #10
  call void @uiItemL(ptr noundef %63, ptr noundef nonnull @.str.63, i32 noundef 0) #10
  call void @uiItemS(ptr noundef %63) #10
  br label %67

67:                                               ; preds = %65, %66
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #10
  call void @uiItemFullO_ptr(ptr nonnull sret(%struct.PointerRNA) align 8 %4, ptr noundef %63, ptr noundef %61, ptr noundef nonnull @.str.64, i32 noundef 0, ptr noundef null, i32 noundef 6, i32 noundef 0) #10
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #10
  call void @uiPupMenuEnd(ptr noundef %0, ptr noundef %62) #10
  call void @llvm.lifetime.end.p0(i64 696, ptr nonnull %5) #10
  br label %71

68:                                               ; preds = %56
  call void @llvm.lifetime.end.p0(i64 696, ptr nonnull %5) #10
  br label %69

69:                                               ; preds = %68, %3
  %70 = call i32 @sculpt_dynamic_topology_toggle_exec(ptr noundef %0, ptr poison)
  br label %71

71:                                               ; preds = %67, %69
  %72 = phi i32 [ 4, %69 ], [ 32, %67 ]
  ret i32 %72
}

declare zeroext i8 @CustomData_has_layer(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @modifierType_getInfo(i32 noundef) local_unnamed_addr #3

declare ptr @uiPupMenuBegin(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @uiPupMenuLayout(ptr noundef) local_unnamed_addr #3

declare void @uiItemL(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @uiItemS(ptr noundef) local_unnamed_addr #3

declare void @uiItemFullO_ptr(ptr sret(%struct.PointerRNA) align 8, ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare void @uiPupMenuEnd(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @sculpt_optimize_exec(ptr noundef %0, ptr nocapture readnone %1) #2 {
  %3 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %4 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !5
  %6 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 120
  %7 = load ptr, ptr %6, align 8, !tbaa !83
  %8 = getelementptr inbounds %struct.SculptSession, ptr %5, i64 0, i32 15
  %9 = load ptr, ptr %8, align 8, !tbaa !21
  %10 = icmp eq ptr %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  tail call void @BKE_pbvh_free(ptr noundef nonnull %9) #10
  br label %12

12:                                               ; preds = %11, %2
  store ptr null, ptr %8, align 8, !tbaa !21
  %13 = icmp eq ptr %7, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.DerivedMesh, ptr %7, i64 0, i32 81
  %16 = load ptr, ptr %15, align 8, !tbaa !84
  %17 = tail call ptr %16(ptr noundef null, ptr noundef nonnull %7) #10
  br label %18

18:                                               ; preds = %12, %14
  tail call void @BKE_object_free_derived_caches(ptr noundef nonnull %3) #10
  tail call void @WM_event_add_notifier(ptr noundef %0, i32 noundef 85393408, ptr noundef nonnull %3) #10
  ret i32 4
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @sculpt_and_dynamic_topology_poll(ptr noundef %0) #2 {
  %2 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %3 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %4 = icmp eq ptr %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 27
  %7 = load i32, ptr %6, align 8, !tbaa !43
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !5
  %13 = getelementptr inbounds %struct.SculptSession, ptr %12, i64 0, i32 10
  %14 = load ptr, ptr %13, align 8, !tbaa !86
  %15 = icmp ne ptr %14, null
  %16 = zext i1 %15 to i32
  br label %17

17:                                               ; preds = %1, %10, %5
  %18 = phi i32 [ 0, %5 ], [ %16, %10 ], [ 0, %1 ]
  ret i32 %18
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @sculpt_symmetrize_exec(ptr noundef %0, ptr nocapture readnone %1) #2 {
  %3 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %4 = tail call ptr @CTX_data_tool_settings(ptr noundef %0) #10
  %5 = getelementptr inbounds %struct.ToolSettings, ptr %4, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !51
  %7 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !5
  tail call void @sculpt_undo_push_begin(ptr noundef nonnull @.str.71) #10
  %9 = tail call ptr @sculpt_undo_push_node(ptr noundef %3, ptr noundef null, i32 noundef 5) #10
  %10 = getelementptr inbounds %struct.SculptSession, ptr %8, i64 0, i32 10
  %11 = load ptr, ptr %10, align 8, !tbaa !86
  %12 = getelementptr inbounds %struct.SculptSession, ptr %8, i64 0, i32 14
  %13 = load ptr, ptr %12, align 8, !tbaa !119
  tail call void @BM_log_before_all_removed(ptr noundef %11, ptr noundef %13) #10
  %14 = load ptr, ptr %10, align 8, !tbaa !86
  %15 = getelementptr inbounds %struct.Sculpt, ptr %6, i64 0, i32 4
  %16 = load i32, ptr %15, align 4, !tbaa !443
  %17 = tail call zeroext i8 (ptr, i32, ptr, ...) @BMO_op_callf(ptr noundef %14, i32 noundef 1, ptr noundef nonnull @.str.72, i32 noundef %16, double noundef nofpclass(nan inf) 0x3EE4F8B580000000) #10
  %18 = load ptr, ptr %10, align 8, !tbaa !86
  %19 = getelementptr inbounds %struct.BMesh, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 8, !tbaa !116
  %21 = getelementptr inbounds %struct.BMesh, ptr %18, i64 0, i32 3
  %22 = load i32, ptr %21, align 4, !tbaa !117
  %23 = mul nsw i32 %22, 3
  %24 = icmp eq i32 %20, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %2
  tail call void @BM_mesh_triangulate(ptr noundef nonnull %18, i32 noundef 1, i32 noundef 1, i8 noundef zeroext 0, ptr noundef null, ptr noundef null) #10
  %26 = load ptr, ptr %10, align 8, !tbaa !86
  br label %27

27:                                               ; preds = %2, %25
  %28 = phi ptr [ %18, %2 ], [ %26, %25 ]
  %29 = load ptr, ptr %12, align 8, !tbaa !119
  tail call void @BM_log_all_added(ptr noundef %28, ptr noundef %29) #10
  tail call void @sculpt_undo_push_end() #10
  %30 = load ptr, ptr %7, align 8, !tbaa !5
  %31 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 120
  %32 = load ptr, ptr %31, align 8, !tbaa !83
  %33 = getelementptr inbounds %struct.SculptSession, ptr %30, i64 0, i32 15
  %34 = load ptr, ptr %33, align 8, !tbaa !21
  %35 = icmp eq ptr %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %27
  tail call void @BKE_pbvh_free(ptr noundef nonnull %34) #10
  br label %37

37:                                               ; preds = %36, %27
  store ptr null, ptr %33, align 8, !tbaa !21
  %38 = icmp eq ptr %32, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.DerivedMesh, ptr %32, i64 0, i32 81
  %41 = load ptr, ptr %40, align 8, !tbaa !84
  %42 = tail call ptr %41(ptr noundef null, ptr noundef nonnull %32) #10
  br label %43

43:                                               ; preds = %37, %39
  tail call void @BKE_object_free_derived_caches(ptr noundef nonnull %3) #10
  tail call void @WM_event_add_notifier(ptr noundef %0, i32 noundef 85393408, ptr noundef nonnull %3) #10
  ret i32 4
}

declare void @BM_log_before_all_removed(ptr noundef, ptr noundef) local_unnamed_addr #3

declare zeroext i8 @BMO_op_callf(ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

declare void @BM_log_all_added(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @sculpt_detail_flood_fill_exec(ptr noundef %0, ptr nocapture readnone %1) #2 {
  %3 = alloca [3 x float], align 8
  %4 = alloca [3 x float], align 8
  %5 = alloca i32, align 4
  %6 = alloca ptr, align 8
  %7 = tail call ptr @CTX_data_tool_settings(ptr noundef %0) #10
  %8 = getelementptr inbounds %struct.ToolSettings, ptr %7, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !51
  %10 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %11 = getelementptr inbounds %struct.Object, ptr %10, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %3) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #10
  %13 = getelementptr inbounds %struct.SculptSession, ptr %12, i64 0, i32 15
  %14 = load ptr, ptr %13, align 8, !tbaa !21
  call void @BKE_pbvh_search_gather(ptr noundef %14, ptr noundef null, ptr noundef null, ptr noundef nonnull %6, ptr noundef nonnull %5) #10
  %15 = load i32, ptr %5, align 4, !tbaa !24
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %85, label %17

17:                                               ; preds = %2
  %18 = icmp sgt i32 %15, 0
  br i1 %18, label %19, label %28

19:                                               ; preds = %17, %19
  %20 = phi i64 [ %24, %19 ], [ 0, %17 ]
  %21 = load ptr, ptr %6, align 8, !tbaa !31
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8, !tbaa !31
  call void @BKE_pbvh_node_mark_topology_update(ptr noundef %23) #10
  %24 = add nuw nsw i64 %20, 1
  %25 = load i32, ptr %5, align 4, !tbaa !24
  %26 = sext i32 %25 to i64
  %27 = icmp slt i64 %24, %26
  br i1 %27, label %19, label %28, !llvm.loop !444

28:                                               ; preds = %19, %17
  %29 = load ptr, ptr %11, align 8, !tbaa !5
  %30 = getelementptr inbounds %struct.SculptSession, ptr %29, i64 0, i32 15
  %31 = load ptr, ptr %30, align 8, !tbaa !21
  call void @BKE_pbvh_bounding_box(ptr noundef %31, ptr noundef nonnull %3, ptr noundef nonnull %4) #10
  %32 = load <2 x float>, ptr %3, align 8, !tbaa !20
  %33 = load <2 x float>, ptr %4, align 8, !tbaa !20
  %34 = fsub fast <2 x float> %33, %32
  store <2 x float> %34, ptr %4, align 8, !tbaa !20
  %35 = getelementptr inbounds float, ptr %3, i64 2
  %36 = load float, ptr %35, align 8, !tbaa !20
  %37 = getelementptr inbounds float, ptr %4, i64 2
  %38 = load float, ptr %37, align 8, !tbaa !20
  %39 = fsub fast float %38, %36
  store float %39, ptr %37, align 8, !tbaa !20
  store <2 x float> zeroinitializer, ptr %3, align 8, !tbaa !20
  store float 0.000000e+00, ptr %35, align 8, !tbaa !20
  %40 = extractelement <2 x float> %34, i64 0
  %41 = extractelement <2 x float> %34, i64 1
  %42 = call fast float @llvm.maxnum.f32(float %40, float %41)
  %43 = call fast float @llvm.maxnum.f32(float %42, float %39)
  %44 = load ptr, ptr %13, align 8, !tbaa !21
  %45 = getelementptr inbounds %struct.Sculpt, ptr %9, i64 0, i32 6
  %46 = load float, ptr %45, align 4, !tbaa !208
  %47 = fmul fast float %46, 0x3F847AE140000000
  call void @BKE_pbvh_bmesh_detail_size_set(ptr noundef %44, float noundef nofpclass(nan inf) %47) #10
  call void @sculpt_undo_push_begin(ptr noundef nonnull @.str.76) #10
  %48 = call ptr @sculpt_undo_push_node(ptr noundef %10, ptr noundef null, i32 noundef 0) #10
  %49 = load ptr, ptr %13, align 8, !tbaa !21
  %50 = call zeroext i8 @BKE_pbvh_bmesh_update_topology(ptr noundef %49, i32 noundef 3, ptr noundef nonnull %3, float noundef nofpclass(nan inf) %43) #10
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %68, label %56

52:                                               ; preds = %59, %56
  %53 = load ptr, ptr %13, align 8, !tbaa !21
  %54 = call zeroext i8 @BKE_pbvh_bmesh_update_topology(ptr noundef %53, i32 noundef 3, ptr noundef nonnull %3, float noundef nofpclass(nan inf) %43) #10
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %68, label %56, !llvm.loop !445

56:                                               ; preds = %28, %52
  %57 = load i32, ptr %5, align 4, !tbaa !24
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %59, label %52

59:                                               ; preds = %56, %59
  %60 = phi i64 [ %64, %59 ], [ 0, %56 ]
  %61 = load ptr, ptr %6, align 8, !tbaa !31
  %62 = getelementptr inbounds ptr, ptr %61, i64 %60
  %63 = load ptr, ptr %62, align 8, !tbaa !31
  call void @BKE_pbvh_node_mark_topology_update(ptr noundef %63) #10
  %64 = add nuw nsw i64 %60, 1
  %65 = load i32, ptr %5, align 4, !tbaa !24
  %66 = sext i32 %65 to i64
  %67 = icmp slt i64 %64, %66
  br i1 %67, label %59, label %52, !llvm.loop !446

68:                                               ; preds = %52, %28
  %69 = load ptr, ptr @MEM_freeN, align 8, !tbaa !31
  %70 = load ptr, ptr %6, align 8, !tbaa !31
  call void %69(ptr noundef %70) #10
  call void @sculpt_undo_push_end() #10
  %71 = load ptr, ptr %11, align 8, !tbaa !5
  %72 = getelementptr inbounds %struct.Object, ptr %10, i64 0, i32 120
  %73 = load ptr, ptr %72, align 8, !tbaa !83
  %74 = getelementptr inbounds %struct.SculptSession, ptr %71, i64 0, i32 15
  %75 = load ptr, ptr %74, align 8, !tbaa !21
  %76 = icmp eq ptr %75, null
  br i1 %76, label %78, label %77

77:                                               ; preds = %68
  call void @BKE_pbvh_free(ptr noundef nonnull %75) #10
  br label %78

78:                                               ; preds = %77, %68
  store ptr null, ptr %74, align 8, !tbaa !21
  %79 = icmp eq ptr %73, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %78
  %81 = getelementptr inbounds %struct.DerivedMesh, ptr %73, i64 0, i32 81
  %82 = load ptr, ptr %81, align 8, !tbaa !84
  %83 = call ptr %82(ptr noundef null, ptr noundef nonnull %73) #10
  br label %84

84:                                               ; preds = %78, %80
  call void @BKE_object_free_derived_caches(ptr noundef nonnull %10) #10
  call void @WM_event_add_notifier(ptr noundef %0, i32 noundef 85393408, ptr noundef nonnull %10) #10
  br label %85

85:                                               ; preds = %2, %84
  %86 = phi i32 [ 4, %84 ], [ 2, %2 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %3) #10
  ret i32 %86
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @sculpt_and_dynamic_topology_constant_detail_poll(ptr noundef %0) #2 {
  %2 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %3 = tail call ptr @CTX_data_tool_settings(ptr noundef %0) #10
  %4 = getelementptr inbounds %struct.ToolSettings, ptr %3, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !51
  %6 = tail call ptr @CTX_data_active_object(ptr noundef %0) #10
  %7 = icmp eq ptr %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.Object, ptr %6, i64 0, i32 27
  %10 = load i32, ptr %9, align 8, !tbaa !43
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !5
  %16 = getelementptr inbounds %struct.SculptSession, ptr %15, i64 0, i32 10
  %17 = load ptr, ptr %16, align 8, !tbaa !86
  %18 = icmp eq ptr %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.Sculpt, ptr %5, i64 0, i32 1
  %21 = load i32, ptr %20, align 8, !tbaa !113
  %22 = lshr i32 %21, 13
  %23 = and i32 %22, 1
  br label %24

24:                                               ; preds = %1, %19, %13, %8
  %25 = phi i32 [ 0, %13 ], [ 0, %8 ], [ %23, %19 ], [ 0, %1 ]
  ret i32 %25
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @sculpt_sample_detail_size_invoke(ptr noundef %0, ptr noundef %1, ptr nocapture readnone %2) #2 {
  %4 = tail call ptr @CTX_wm_area(ptr noundef %0) #10
  tail call void @ED_area_headerprint(ptr noundef %4, ptr noundef nonnull @.str.82) #10
  %5 = tail call ptr @CTX_wm_window(ptr noundef %0) #10
  tail call void @WM_cursor_modal_set(ptr noundef %5, i32 noundef 17) #10
  %6 = tail call ptr @WM_event_add_modal_handler(ptr noundef %0, ptr noundef %1) #10
  ret i32 1
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @sculpt_sample_detail_size_exec(ptr noundef %0, ptr nocapture noundef readonly %1) #2 {
  %3 = alloca [2 x i32], align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #10
  %4 = getelementptr inbounds %struct.wmOperator, ptr %1, i64 0, i32 7
  %5 = load ptr, ptr %4, align 8, !tbaa !143
  call void @RNA_int_get_array(ptr noundef %5, ptr noundef nonnull @.str.39, ptr noundef nonnull %3) #10
  %6 = load i32, ptr %3, align 4, !tbaa !24
  %7 = getelementptr inbounds i8, ptr %3, i64 4
  %8 = load i32, ptr %7, align 4, !tbaa !24
  call fastcc void @sample_detail(ptr noundef %0, i32 %6, i32 %8)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #10
  ret i32 4
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @sculpt_sample_detail_size_modal(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #2 {
  %4 = alloca [2 x i32], align 4
  %5 = getelementptr inbounds %struct.wmEvent, ptr %2, i64 0, i32 2
  %6 = load i16, ptr %5, align 8, !tbaa !138
  %7 = sext i16 %6 to i32
  switch i32 %7, label %25 [
    i32 1, label %8
    i32 3, label %22
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.wmEvent, ptr %2, i64 0, i32 3
  %10 = load i16, ptr %9, align 2, !tbaa !447
  %11 = icmp eq i16 %10, 1
  br i1 %11, label %12, label %25

12:                                               ; preds = %8
  %13 = tail call ptr @CTX_wm_area(ptr noundef %0) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #10
  %14 = getelementptr inbounds %struct.wmEvent, ptr %2, i64 0, i32 6
  %15 = load i32, ptr %14, align 4, !tbaa !24
  store i32 %15, ptr %4, align 4, !tbaa !24
  %16 = getelementptr inbounds i32, ptr %4, i64 1
  %17 = getelementptr inbounds %struct.wmEvent, ptr %2, i64 0, i32 6, i64 1
  %18 = load i32, ptr %17, align 4, !tbaa !24
  store i32 %18, ptr %16, align 4, !tbaa !24
  tail call fastcc void @sample_detail(ptr noundef %0, i32 %15, i32 %18)
  %19 = getelementptr inbounds %struct.wmOperator, ptr %1, i64 0, i32 7
  %20 = load ptr, ptr %19, align 8, !tbaa !143
  call void @RNA_int_set_array(ptr noundef %20, ptr noundef nonnull @.str.39, ptr noundef nonnull %4) #10
  %21 = call ptr @CTX_wm_window(ptr noundef %0) #10
  call void @WM_cursor_modal_restore(ptr noundef %21) #10
  call void @ED_area_headerprint(ptr noundef %13, ptr noundef null) #10
  call void @WM_main_add_notifier(i32 noundef 68091904, ptr noundef null) #10
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #10
  br label %25

22:                                               ; preds = %3
  %23 = tail call ptr @CTX_wm_area(ptr noundef %0) #10
  %24 = tail call ptr @CTX_wm_window(ptr noundef %0) #10
  tail call void @WM_cursor_modal_restore(ptr noundef %24) #10
  tail call void @ED_area_headerprint(ptr noundef %23, ptr noundef null) #10
  br label %25

25:                                               ; preds = %3, %8, %22, %12
  %26 = phi i32 [ 2, %22 ], [ 4, %12 ], [ 1, %8 ], [ 1, %3 ]
  ret i32 %26
}

declare ptr @RNA_def_int_array(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare ptr @CTX_wm_area(ptr noundef) local_unnamed_addr #3

declare void @ED_area_headerprint(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @WM_cursor_modal_set(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @CTX_wm_window(ptr noundef) local_unnamed_addr #3

declare void @RNA_int_get_array(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @sample_detail(ptr noundef %0, i32 %1, i32 %2) unnamed_addr #2 {
  %4 = alloca %struct.ViewContext, align 8
  %5 = alloca [3 x float], align 4
  %6 = alloca [3 x float], align 4
  %7 = alloca [3 x float], align 4
  %8 = alloca %struct.SculptDetailRaycastData, align 8
  %9 = alloca [2 x float], align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %4) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #10
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #10
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %8) #10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #10
  %10 = sitofp i32 %1 to float
  store float %10, ptr %9, align 4, !tbaa !20
  %11 = getelementptr inbounds float, ptr %9, i64 1
  %12 = sitofp i32 %2 to float
  store float %12, ptr %11, align 4, !tbaa !20
  call void @view3d_set_viewcontext(ptr noundef %0, ptr noundef nonnull %4) #10
  %13 = call ptr @CTX_data_tool_settings(ptr noundef %0) #10
  %14 = getelementptr inbounds %struct.ToolSettings, ptr %13, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !51
  %16 = getelementptr inbounds %struct.ViewContext, ptr %4, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !44
  %18 = getelementptr inbounds %struct.Object, ptr %17, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !5
  %20 = getelementptr inbounds %struct.SculptSession, ptr %19, i64 0, i32 7
  %21 = load ptr, ptr %20, align 8, !tbaa !49
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.SculptSession, ptr %19, i64 0, i32 17
  %25 = load i8, ptr %24, align 1, !tbaa !50
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %23, %3
  %28 = call ptr @CTX_data_tool_settings(ptr noundef %0) #10
  %29 = getelementptr inbounds %struct.ToolSettings, ptr %28, i64 0, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !51
  %31 = call ptr @BKE_paint_brush(ptr noundef %30) #10
  %32 = call ptr @CTX_data_scene(ptr noundef %0) #10
  %33 = getelementptr inbounds %struct.SculptSession, ptr %19, i64 0, i32 28
  %34 = load ptr, ptr %33, align 8, !tbaa !22
  %35 = icmp eq ptr %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %struct.StrokeCache, ptr %34, i64 0, i32 48
  %38 = load i8, ptr %37, align 8, !tbaa !58
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %55

40:                                               ; preds = %36, %27
  %41 = getelementptr inbounds %struct.Brush, ptr %31, i64 0, i32 34
  %42 = load i8, ptr %41, align 8, !tbaa !59
  %43 = icmp eq i8 %42, 2
  br i1 %43, label %55, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.Brush, ptr %31, i64 0, i32 38
  %46 = load float, ptr %45, align 4, !tbaa !63
  %47 = fcmp fast ogt float %46, 0.000000e+00
  br i1 %47, label %55, label %48

48:                                               ; preds = %44
  %49 = icmp eq i8 %42, 19
  br i1 %49, label %50, label %55

50:                                               ; preds = %48
  %51 = getelementptr inbounds %struct.Brush, ptr %31, i64 0, i32 37
  %52 = load i8, ptr %51, align 1, !tbaa !64
  %53 = icmp eq i8 %52, 1
  %54 = zext i1 %53 to i8
  br label %55

55:                                               ; preds = %50, %48, %44, %40, %36
  %56 = phi i8 [ 1, %44 ], [ 1, %40 ], [ 1, %36 ], [ 0, %48 ], [ %54, %50 ]
  call void @BKE_sculpt_update_mesh_elements(ptr noundef %32, ptr noundef %30, ptr noundef nonnull %17, i8 noundef zeroext %56, i8 noundef zeroext 0) #10
  br label %57

57:                                               ; preds = %23, %55
  %58 = call fast fastcc nofpclass(nan inf) float @sculpt_raycast_init(ptr noundef nonnull %4, ptr noundef nonnull %9, ptr noundef nonnull %5, ptr noundef nonnull %6, ptr noundef nonnull %7, i8 noundef zeroext 0)
  %59 = getelementptr inbounds %struct.SculptDetailRaycastData, ptr %8, i64 0, i32 2
  store i8 0, ptr %59, align 8, !tbaa !448
  store ptr %5, ptr %8, align 8, !tbaa !450
  %60 = getelementptr inbounds %struct.SculptDetailRaycastData, ptr %8, i64 0, i32 1
  store ptr %7, ptr %60, align 8, !tbaa !451
  %61 = getelementptr inbounds %struct.SculptDetailRaycastData, ptr %8, i64 0, i32 3
  store float %58, ptr %61, align 4, !tbaa !452
  %62 = getelementptr inbounds %struct.Sculpt, ptr %15, i64 0, i32 6
  %63 = load float, ptr %62, align 4, !tbaa !208
  %64 = getelementptr inbounds %struct.SculptDetailRaycastData, ptr %8, i64 0, i32 4
  store float %63, ptr %64, align 8, !tbaa !453
  %65 = load ptr, ptr %18, align 8, !tbaa !5
  %66 = getelementptr inbounds %struct.SculptSession, ptr %65, i64 0, i32 15
  %67 = load ptr, ptr %66, align 8, !tbaa !21
  call void @BKE_pbvh_raycast(ptr noundef %67, ptr noundef nonnull @sculpt_raycast_detail_cb, ptr noundef nonnull %8, ptr noundef nonnull %5, ptr noundef nonnull %7, i8 noundef zeroext 0) #10
  %68 = load i8, ptr %59, align 8, !tbaa !448
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %57
  %71 = load float, ptr %64, align 8, !tbaa !453
  %72 = fmul fast float %71, 1.000000e+02
  store float %72, ptr %62, align 4, !tbaa !208
  br label %73

73:                                               ; preds = %70, %57
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #10
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #10
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %4) #10
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @sculpt_raycast_detail_cb(ptr noundef %0, ptr noundef %1, ptr nocapture noundef %2) #2 {
  %4 = tail call fast nofpclass(nan inf) float @BKE_pbvh_node_get_tmin(ptr noundef %0) #10
  %5 = load float, ptr %2, align 4, !tbaa !20
  %6 = fcmp fast olt float %4, %5
  br i1 %6, label %7, label %18

7:                                                ; preds = %3
  %8 = load ptr, ptr %1, align 8, !tbaa !450
  %9 = getelementptr inbounds %struct.SculptDetailRaycastData, ptr %1, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !451
  %11 = getelementptr inbounds %struct.SculptDetailRaycastData, ptr %1, i64 0, i32 4
  %12 = getelementptr inbounds %struct.SculptDetailRaycastData, ptr %1, i64 0, i32 3
  %13 = tail call zeroext i8 @BKE_pbvh_bmesh_node_raycast_detail(ptr noundef %0, ptr noundef %8, ptr noundef %10, ptr noundef nonnull %11, ptr noundef nonnull %12) #10
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.SculptDetailRaycastData, ptr %1, i64 0, i32 2
  store i8 1, ptr %16, align 8, !tbaa !448
  %17 = load float, ptr %12, align 4, !tbaa !452
  store float %17, ptr %2, align 4, !tbaa !20
  br label %18

18:                                               ; preds = %7, %15, %3
  ret void
}

declare zeroext i8 @BKE_pbvh_bmesh_node_raycast_detail(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @RNA_int_set_array(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @WM_cursor_modal_restore(ptr noundef) local_unnamed_addr #3

declare void @WM_main_add_notifier(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.maxnum.f32(float, float) #8

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.powi.f32.i32(float, i32) #8

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #8

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare ptr @llvm.load.relative.i64(ptr, i64) #9

attributes #0 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #3 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #4 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: write) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #6 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #7 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #8 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #9 = { nocallback nofree nosync nounwind willreturn memory(argmem: read) }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !8, i64 128}
!6 = !{!"Object", !7, i64 0, !8, i64 120, !8, i64 128, !11, i64 136, !11, i64 138, !12, i64 140, !12, i64 144, !12, i64 148, !9, i64 152, !8, i64 216, !8, i64 224, !8, i64 232, !8, i64 240, !8, i64 248, !8, i64 256, !8, i64 264, !8, i64 272, !8, i64 280, !8, i64 288, !8, i64 296, !8, i64 304, !13, i64 312, !8, i64 360, !14, i64 368, !14, i64 384, !14, i64 400, !14, i64 416, !12, i64 432, !12, i64 436, !8, i64 440, !8, i64 448, !12, i64 456, !12, i64 460, !9, i64 464, !9, i64 476, !9, i64 488, !9, i64 500, !9, i64 512, !9, i64 524, !9, i64 536, !9, i64 548, !9, i64 560, !9, i64 576, !9, i64 592, !9, i64 604, !15, i64 616, !15, i64 620, !9, i64 624, !9, i64 688, !9, i64 752, !9, i64 816, !9, i64 880, !12, i64 944, !11, i64 948, !11, i64 950, !11, i64 952, !11, i64 954, !11, i64 956, !11, i64 958, !11, i64 960, !11, i64 962, !11, i64 964, !9, i64 966, !9, i64 967, !12, i64 968, !12, i64 972, !12, i64 976, !12, i64 980, !12, i64 984, !15, i64 988, !15, i64 992, !15, i64 996, !15, i64 1000, !15, i64 1004, !15, i64 1008, !15, i64 1012, !15, i64 1016, !15, i64 1020, !15, i64 1024, !15, i64 1028, !15, i64 1032, !11, i64 1036, !11, i64 1038, !11, i64 1040, !9, i64 1042, !9, i64 1043, !11, i64 1044, !9, i64 1046, !9, i64 1047, !15, i64 1048, !15, i64 1052, !14, i64 1056, !14, i64 1072, !14, i64 1088, !14, i64 1104, !15, i64 1120, !11, i64 1124, !11, i64 1126, !9, i64 1128, !12, i64 1144, !12, i64 1148, !8, i64 1152, !9, i64 1160, !9, i64 1161, !11, i64 1162, !9, i64 1164, !14, i64 1176, !14, i64 1192, !14, i64 1208, !14, i64 1224, !8, i64 1240, !8, i64 1248, !8, i64 1256, !9, i64 1264, !9, i64 1265, !11, i64 1266, !15, i64 1268, !8, i64 1272, !8, i64 1280, !8, i64 1288, !8, i64 1296, !16, i64 1304, !16, i64 1312, !12, i64 1320, !12, i64 1324, !14, i64 1328, !14, i64 1344, !8, i64 1360, !8, i64 1368, !8, i64 1376, !9, i64 1384, !8, i64 1392, !14, i64 1400, !8, i64 1416}
!7 = !{!"ID", !8, i64 0, !8, i64 8, !8, i64 16, !8, i64 24, !9, i64 32, !11, i64 98, !12, i64 100, !12, i64 104, !12, i64 108, !8, i64 112}
!8 = !{!"any pointer", !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C/C++ TBAA"}
!11 = !{!"short", !9, i64 0}
!12 = !{!"int", !9, i64 0}
!13 = !{!"bAnimVizSettings", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !11, i64 16, !11, i64 18, !11, i64 20, !11, i64 22, !11, i64 24, !11, i64 26, !11, i64 28, !11, i64 30, !12, i64 32, !12, i64 36, !12, i64 40, !12, i64 44}
!14 = !{!"ListBase", !8, i64 0, !8, i64 8}
!15 = !{!"float", !9, i64 0}
!16 = !{!"long", !9, i64 0}
!17 = !{!18, !9, i64 200}
!18 = !{!"SculptSession", !8, i64 0, !8, i64 8, !8, i64 16, !8, i64 24, !12, i64 32, !12, i64 36, !8, i64 40, !8, i64 48, !8, i64 56, !8, i64 64, !8, i64 72, !12, i64 80, !12, i64 84, !9, i64 88, !8, i64 96, !8, i64 104, !9, i64 112, !9, i64 113, !8, i64 120, !8, i64 128, !8, i64 136, !9, i64 144, !12, i64 148, !8, i64 152, !12, i64 160, !8, i64 168, !8, i64 176, !8, i64 184, !8, i64 192, !9, i64 200, !9, i64 204, !9, i64 216, !12, i64 228}
!19 = !{!18, !12, i64 228}
!20 = !{!15, !15, i64 0}
!21 = !{!18, !8, i64 104}
!22 = !{!18, !8, i64 192}
!23 = !{i64 0, i64 4, !24, i64 4, i64 4, !24, i64 8, i64 4, !24, i64 12, i64 4, !24}
!24 = !{!12, !12, i64 0}
!25 = !{!6, !8, i64 296}
!26 = !{!27, !8, i64 144}
!27 = !{!"Mesh", !7, i64 0, !8, i64 120, !8, i64 128, !8, i64 136, !8, i64 144, !8, i64 152, !8, i64 160, !8, i64 168, !8, i64 176, !8, i64 184, !8, i64 192, !8, i64 200, !8, i64 208, !8, i64 216, !8, i64 224, !8, i64 232, !8, i64 240, !8, i64 248, !8, i64 256, !8, i64 264, !8, i64 272, !28, i64 280, !28, i64 480, !28, i64 680, !28, i64 880, !28, i64 1080, !12, i64 1280, !12, i64 1284, !12, i64 1288, !12, i64 1292, !12, i64 1296, !12, i64 1300, !12, i64 1304, !9, i64 1308, !9, i64 1320, !9, i64 1332, !12, i64 1344, !11, i64 1348, !11, i64 1350, !15, i64 1352, !12, i64 1356, !9, i64 1360, !9, i64 1361, !9, i64 1362, !9, i64 1363, !9, i64 1364, !9, i64 1365, !11, i64 1366, !8, i64 1368}
!28 = !{!"CustomData", !8, i64 0, !9, i64 8, !12, i64 172, !12, i64 176, !12, i64 180, !8, i64 184, !8, i64 192}
!29 = !{!30, !11, i64 208}
!30 = !{!"Key", !7, i64 0, !8, i64 120, !8, i64 128, !9, i64 136, !12, i64 168, !12, i64 172, !14, i64 176, !8, i64 192, !8, i64 200, !11, i64 208, !11, i64 210, !11, i64 212, !11, i64 214, !15, i64 216, !12, i64 220}
!31 = !{!8, !8, i64 0}
!32 = !{!6, !11, i64 1266}
!33 = !{!34, !11, i64 28}
!34 = !{!"KeyBlock", !8, i64 0, !8, i64 8, !15, i64 16, !15, i64 20, !11, i64 24, !11, i64 26, !11, i64 28, !11, i64 30, !12, i64 32, !12, i64 36, !8, i64 40, !9, i64 48, !9, i64 112, !15, i64 176, !15, i64 180}
!35 = distinct !{!35, !36}
!36 = !{!"llvm.loop.mustprogress"}
!37 = !{!27, !12, i64 1280}
!38 = distinct !{!38, !36}
!39 = distinct !{!39, !36}
!40 = !{!30, !8, i64 128}
!41 = !{!27, !8, i64 232}
!42 = distinct !{!42, !36}
!43 = !{!6, !12, i64 432}
!44 = !{!45, !8, i64 8}
!45 = !{!"ViewContext", !8, i64 0, !8, i64 8, !8, i64 16, !8, i64 24, !8, i64 32, !8, i64 40, !8, i64 48, !9, i64 56}
!46 = !{!47, !9, i64 540}
!47 = !{!"StrokeCache", !15, i64 0, !9, i64 4, !12, i64 16, !9, i64 20, !9, i64 32, !12, i64 40, !12, i64 44, !8, i64 48, !8, i64 56, !8, i64 64, !8, i64 72, !15, i64 80, !15, i64 84, !9, i64 88, !9, i64 100, !9, i64 112, !9, i64 113, !15, i64 116, !9, i64 120, !15, i64 128, !9, i64 132, !9, i64 136, !8, i64 200, !8, i64 208, !8, i64 216, !15, i64 224, !9, i64 228, !9, i64 240, !9, i64 252, !9, i64 264, !12, i64 276, !12, i64 280, !9, i64 284, !9, i64 296, !9, i64 308, !9, i64 320, !9, i64 332, !9, i64 396, !12, i64 408, !9, i64 412, !9, i64 476, !9, i64 540, !9, i64 544, !15, i64 556, !8, i64 560, !9, i64 568, !9, i64 634, !12, i64 636, !9, i64 640, !15, i64 644, !9, i64 648, !9, i64 652, !9, i64 664, !48, i64 676, !48, i64 692}
!48 = !{!"rcti", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12}
!49 = !{!18, !8, i64 48}
!50 = !{!18, !9, i64 113}
!51 = !{!52, !8, i64 16}
!52 = !{!"ToolSettings", !8, i64 0, !8, i64 8, !8, i64 16, !8, i64 24, !15, i64 32, !15, i64 36, !15, i64 40, !11, i64 44, !11, i64 46, !9, i64 48, !9, i64 49, !9, i64 50, !9, i64 51, !15, i64 52, !11, i64 56, !9, i64 58, !9, i64 59, !53, i64 64, !55, i64 168, !15, i64 336, !15, i64 340, !11, i64 344, !11, i64 346, !9, i64 348, !9, i64 349, !11, i64 350, !15, i64 352, !15, i64 356, !15, i64 360, !15, i64 364, !15, i64 368, !15, i64 372, !15, i64 376, !15, i64 380, !15, i64 384, !15, i64 388, !11, i64 392, !9, i64 394, !9, i64 395, !9, i64 396, !9, i64 399, !8, i64 400, !9, i64 408, !9, i64 409, !9, i64 410, !9, i64 411, !9, i64 412, !9, i64 413, !9, i64 421, !9, i64 429, !9, i64 430, !9, i64 431, !9, i64 432, !9, i64 433, !11, i64 434, !11, i64 436, !11, i64 438, !11, i64 440, !9, i64 442, !9, i64 443, !9, i64 444, !9, i64 445, !9, i64 446, !9, i64 447, !12, i64 448, !12, i64 452, !12, i64 456, !12, i64 460, !11, i64 464, !11, i64 466, !12, i64 468, !15, i64 472, !15, i64 476, !56, i64 480, !57, i64 608}
!53 = !{!"ImagePaintSettings", !54, i64 0, !11, i64 40, !11, i64 42, !11, i64 44, !11, i64 46, !9, i64 48, !12, i64 52, !8, i64 56, !8, i64 64, !8, i64 72, !8, i64 80, !9, i64 88, !15, i64 100}
!54 = !{!"Paint", !8, i64 0, !8, i64 8, !8, i64 16, !9, i64 24, !12, i64 28, !12, i64 32, !12, i64 36}
!55 = !{!"ParticleEditSettings", !11, i64 0, !11, i64 2, !11, i64 4, !11, i64 6, !9, i64 8, !8, i64 120, !15, i64 128, !15, i64 132, !12, i64 136, !12, i64 140, !12, i64 144, !12, i64 148, !8, i64 152, !8, i64 160}
!56 = !{!"UnifiedPaintSettings", !12, i64 0, !15, i64 4, !15, i64 8, !15, i64 12, !9, i64 16, !9, i64 28, !12, i64 40, !9, i64 44, !15, i64 52, !12, i64 56, !12, i64 60, !9, i64 64, !9, i64 65, !15, i64 72, !9, i64 76, !12, i64 84, !15, i64 88, !9, i64 92, !9, i64 100, !12, i64 108, !8, i64 112, !15, i64 120, !12, i64 124}
!57 = !{!"MeshStatVis", !9, i64 0, !9, i64 1, !9, i64 3, !15, i64 4, !15, i64 8, !15, i64 12, !15, i64 16, !9, i64 20, !9, i64 21, !15, i64 24, !15, i64 28, !15, i64 32, !15, i64 36}
!58 = !{!47, !9, i64 640}
!59 = !{!60, !9, i64 1944}
!60 = !{!"Brush", !7, i64 0, !61, i64 120, !8, i64 144, !62, i64 152, !62, i64 464, !8, i64 776, !8, i64 784, !8, i64 792, !8, i64 800, !8, i64 808, !9, i64 816, !15, i64 1840, !11, i64 1844, !11, i64 1846, !15, i64 1848, !12, i64 1852, !12, i64 1856, !12, i64 1860, !15, i64 1864, !12, i64 1868, !12, i64 1872, !12, i64 1876, !12, i64 1880, !15, i64 1884, !15, i64 1888, !9, i64 1892, !15, i64 1904, !9, i64 1908, !12, i64 1920, !15, i64 1924, !15, i64 1928, !12, i64 1932, !12, i64 1936, !12, i64 1940, !9, i64 1944, !9, i64 1945, !9, i64 1946, !9, i64 1947, !15, i64 1948, !15, i64 1952, !15, i64 1956, !15, i64 1960, !15, i64 1964, !12, i64 1968, !12, i64 1972, !12, i64 1976, !15, i64 1980, !15, i64 1984, !12, i64 1988, !12, i64 1992, !15, i64 1996, !9, i64 2000, !9, i64 2012, !9, i64 2024, !9, i64 2032, !9, i64 2040, !9, i64 2048}
!61 = !{!"BrushClone", !8, i64 0, !9, i64 8, !15, i64 16, !15, i64 20}
!62 = !{!"MTex", !11, i64 0, !11, i64 2, !11, i64 4, !11, i64 6, !8, i64 8, !8, i64 16, !9, i64 24, !9, i64 88, !9, i64 89, !9, i64 90, !9, i64 91, !9, i64 92, !9, i64 104, !15, i64 116, !11, i64 120, !11, i64 122, !11, i64 124, !11, i64 126, !11, i64 128, !11, i64 130, !9, i64 132, !9, i64 133, !15, i64 140, !15, i64 144, !15, i64 148, !15, i64 152, !15, i64 156, !15, i64 160, !15, i64 164, !15, i64 168, !15, i64 172, !15, i64 176, !15, i64 180, !15, i64 184, !15, i64 188, !15, i64 192, !15, i64 196, !15, i64 200, !15, i64 204, !15, i64 208, !15, i64 212, !15, i64 216, !15, i64 220, !15, i64 224, !15, i64 228, !15, i64 232, !15, i64 236, !15, i64 240, !15, i64 244, !15, i64 248, !15, i64 252, !15, i64 256, !15, i64 260, !15, i64 264, !15, i64 268, !15, i64 272, !15, i64 276, !15, i64 280, !15, i64 284, !15, i64 288, !15, i64 292, !15, i64 296, !15, i64 300, !15, i64 304, !15, i64 308}
!63 = !{!60, !15, i64 1948}
!64 = !{!60, !9, i64 1947}
!65 = !{!66, !9, i64 32}
!66 = !{!"", !8, i64 0, !8, i64 8, !8, i64 16, !9, i64 24, !15, i64 28, !9, i64 32}
!67 = !{!66, !8, i64 0}
!68 = !{!66, !9, i64 24}
!69 = !{!66, !8, i64 8}
!70 = !{!66, !8, i64 16}
!71 = !{!66, !15, i64 28}
!72 = !{!45, !8, i64 24}
!73 = !{!74, !8, i64 376}
!74 = !{!"ARegion", !8, i64 0, !8, i64 8, !75, i64 16, !48, i64 176, !48, i64 192, !11, i64 208, !11, i64 210, !11, i64 212, !11, i64 214, !11, i64 216, !11, i64 218, !15, i64 220, !11, i64 224, !11, i64 226, !11, i64 228, !11, i64 230, !11, i64 232, !11, i64 234, !11, i64 236, !11, i64 238, !8, i64 240, !14, i64 248, !14, i64 264, !14, i64 280, !14, i64 296, !14, i64 312, !14, i64 328, !14, i64 344, !8, i64 360, !8, i64 368, !8, i64 376}
!75 = !{!"View2D", !76, i64 0, !76, i64 16, !48, i64 32, !48, i64 48, !48, i64 64, !9, i64 80, !9, i64 88, !15, i64 96, !15, i64 100, !11, i64 104, !11, i64 106, !11, i64 108, !11, i64 110, !11, i64 112, !11, i64 114, !11, i64 116, !11, i64 118, !11, i64 120, !11, i64 122, !11, i64 124, !11, i64 126, !8, i64 128, !12, i64 136, !12, i64 140, !8, i64 144, !8, i64 152}
!76 = !{!"rctf", !15, i64 0, !15, i64 4, !15, i64 8, !15, i64 12}
!77 = !{!45, !8, i64 32}
!78 = !{!79, !9, i64 808}
!79 = !{!"RegionView3D", !9, i64 0, !9, i64 64, !9, i64 128, !9, i64 192, !9, i64 256, !9, i64 320, !9, i64 384, !9, i64 448, !9, i64 544, !8, i64 640, !8, i64 648, !8, i64 656, !8, i64 664, !8, i64 672, !8, i64 680, !8, i64 688, !9, i64 696, !9, i64 760, !15, i64 776, !15, i64 780, !15, i64 784, !15, i64 788, !9, i64 792, !15, i64 804, !9, i64 808, !9, i64 809, !9, i64 810, !9, i64 811, !9, i64 812, !9, i64 813, !9, i64 816, !11, i64 824, !11, i64 826, !9, i64 828, !11, i64 844, !11, i64 846, !15, i64 848, !9, i64 852, !15, i64 864, !9, i64 868}
!80 = !{!81, !8, i64 96}
!81 = !{!"SculptUndoNode", !8, i64 0, !8, i64 8, !9, i64 16, !9, i64 20, !8, i64 88, !8, i64 96, !8, i64 104, !8, i64 112, !8, i64 120, !12, i64 128, !12, i64 132, !8, i64 136, !8, i64 144, !12, i64 152, !12, i64 156, !12, i64 160, !8, i64 168, !8, i64 176, !8, i64 184, !9, i64 192, !28, i64 200, !28, i64 400, !28, i64 600, !28, i64 800, !12, i64 1000, !12, i64 1004, !12, i64 1008, !12, i64 1012, !9, i64 1016}
!82 = !{!6, !8, i64 264}
!83 = !{!6, !8, i64 1296}
!84 = !{!85, !8, i64 1568}
!85 = !{!"DerivedMesh", !28, i64 0, !28, i64 200, !28, i64 400, !28, i64 600, !28, i64 800, !12, i64 1000, !12, i64 1004, !12, i64 1008, !12, i64 1012, !12, i64 1016, !12, i64 1020, !12, i64 1024, !8, i64 1032, !8, i64 1040, !9, i64 1048, !15, i64 1052, !9, i64 1056, !12, i64 1060, !8, i64 1064, !9, i64 1072, !8, i64 1080, !8, i64 1088, !8, i64 1096, !8, i64 1104, !8, i64 1112, !8, i64 1120, !8, i64 1128, !8, i64 1136, !8, i64 1144, !8, i64 1152, !8, i64 1160, !8, i64 1168, !8, i64 1176, !8, i64 1184, !8, i64 1192, !8, i64 1200, !8, i64 1208, !8, i64 1216, !8, i64 1224, !8, i64 1232, !8, i64 1240, !8, i64 1248, !8, i64 1256, !8, i64 1264, !8, i64 1272, !8, i64 1280, !8, i64 1288, !8, i64 1296, !8, i64 1304, !8, i64 1312, !8, i64 1320, !8, i64 1328, !8, i64 1336, !8, i64 1344, !8, i64 1352, !8, i64 1360, !8, i64 1368, !8, i64 1376, !8, i64 1384, !8, i64 1392, !8, i64 1400, !8, i64 1408, !8, i64 1416, !8, i64 1424, !8, i64 1432, !8, i64 1440, !8, i64 1448, !8, i64 1456, !8, i64 1464, !8, i64 1472, !8, i64 1480, !8, i64 1488, !8, i64 1496, !8, i64 1504, !8, i64 1512, !8, i64 1520, !8, i64 1528, !8, i64 1536, !8, i64 1544, !8, i64 1552, !8, i64 1560, !8, i64 1568, !8, i64 1576, !8, i64 1584, !8, i64 1592, !8, i64 1600, !8, i64 1608, !8, i64 1616, !8, i64 1624, !8, i64 1632, !8, i64 1640, !8, i64 1648, !8, i64 1656, !8, i64 1664, !8, i64 1672, !8, i64 1680}
!86 = !{!18, !8, i64 72}
!87 = !{!18, !12, i64 80}
!88 = !{!89, !8, i64 144}
!89 = !{!"BMesh", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !12, i64 16, !12, i64 20, !12, i64 24, !9, i64 28, !9, i64 29, !8, i64 32, !8, i64 40, !8, i64 48, !8, i64 56, !8, i64 64, !8, i64 72, !8, i64 80, !12, i64 88, !12, i64 92, !12, i64 96, !8, i64 104, !8, i64 112, !8, i64 120, !12, i64 128, !8, i64 136, !28, i64 144, !28, i64 344, !28, i64 544, !28, i64 744, !11, i64 944, !12, i64 948, !12, i64 952, !12, i64 956, !14, i64 960, !8, i64 976, !14, i64 984, !8, i64 1000}
!90 = !{!91, !12, i64 8}
!91 = !{!"CustomDataLayer", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !12, i64 16, !12, i64 20, !12, i64 24, !12, i64 28, !9, i64 32, !8, i64 96}
!92 = !{!18, !12, i64 84}
!93 = !{!89, !8, i64 744}
!94 = !{!95, !8, i64 264}
!95 = !{!"Scene", !7, i64 0, !8, i64 120, !8, i64 128, !8, i64 136, !8, i64 144, !14, i64 152, !8, i64 168, !8, i64 176, !9, i64 184, !9, i64 196, !9, i64 208, !9, i64 220, !12, i64 232, !12, i64 236, !12, i64 240, !11, i64 244, !9, i64 246, !9, i64 247, !8, i64 248, !8, i64 256, !8, i64 264, !8, i64 272, !96, i64 280, !103, i64 4264, !14, i64 4296, !14, i64 4312, !8, i64 4328, !8, i64 4336, !8, i64 4344, !8, i64 4352, !8, i64 4360, !8, i64 4368, !11, i64 4376, !11, i64 4378, !12, i64 4380, !14, i64 4384, !104, i64 4400, !105, i64 4416, !108, i64 4600, !8, i64 4608, !109, i64 4616, !8, i64 4640, !16, i64 4648, !16, i64 4656, !98, i64 4664, !99, i64 4824, !110, i64 4888, !8, i64 4952}
!96 = !{!"RenderData", !97, i64 0, !8, i64 248, !8, i64 256, !100, i64 264, !101, i64 328, !12, i64 400, !12, i64 404, !12, i64 408, !15, i64 412, !12, i64 416, !12, i64 420, !12, i64 424, !12, i64 428, !11, i64 432, !11, i64 434, !15, i64 436, !15, i64 440, !15, i64 444, !15, i64 448, !15, i64 452, !11, i64 456, !11, i64 458, !11, i64 460, !11, i64 462, !11, i64 464, !11, i64 466, !12, i64 468, !11, i64 472, !11, i64 474, !11, i64 476, !11, i64 478, !11, i64 480, !11, i64 482, !12, i64 484, !12, i64 488, !11, i64 492, !11, i64 494, !12, i64 496, !12, i64 500, !11, i64 504, !11, i64 506, !11, i64 508, !11, i64 510, !11, i64 512, !9, i64 514, !9, i64 515, !12, i64 516, !12, i64 520, !12, i64 524, !11, i64 528, !11, i64 530, !11, i64 532, !11, i64 534, !11, i64 536, !11, i64 538, !11, i64 540, !11, i64 542, !76, i64 544, !76, i64 560, !48, i64 576, !14, i64 592, !11, i64 608, !11, i64 610, !15, i64 612, !15, i64 616, !15, i64 620, !15, i64 624, !12, i64 628, !15, i64 632, !15, i64 636, !15, i64 640, !15, i64 644, !11, i64 648, !11, i64 650, !11, i64 652, !11, i64 654, !11, i64 656, !11, i64 658, !15, i64 660, !15, i64 664, !11, i64 668, !11, i64 670, !15, i64 672, !15, i64 676, !9, i64 680, !12, i64 1704, !11, i64 1708, !11, i64 1710, !9, i64 1712, !9, i64 2480, !9, i64 2496, !9, i64 2512, !9, i64 2513, !9, i64 2514, !9, i64 2515, !12, i64 2520, !11, i64 2524, !11, i64 2526, !15, i64 2528, !15, i64 2532, !11, i64 2536, !11, i64 2538, !15, i64 2540, !11, i64 2544, !11, i64 2546, !12, i64 2548, !11, i64 2552, !11, i64 2554, !11, i64 2556, !11, i64 2558, !15, i64 2560, !15, i64 2564, !8, i64 2568, !12, i64 2576, !15, i64 2580, !9, i64 2584, !102, i64 2616, !12, i64 3976, !12, i64 3980}
!97 = !{!"ImageFormatData", !9, i64 0, !9, i64 1, !9, i64 2, !9, i64 3, !9, i64 4, !9, i64 5, !9, i64 6, !9, i64 7, !11, i64 8, !11, i64 10, !15, i64 12, !9, i64 16, !9, i64 17, !9, i64 18, !98, i64 24, !99, i64 184}
!98 = !{!"ColorManagedViewSettings", !12, i64 0, !12, i64 4, !9, i64 8, !9, i64 72, !15, i64 136, !15, i64 140, !8, i64 144, !8, i64 152}
!99 = !{!"ColorManagedDisplaySettings", !9, i64 0}
!100 = !{!"QuicktimeCodecSettings", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !12, i64 16, !12, i64 20, !12, i64 24, !12, i64 28, !12, i64 32, !12, i64 36, !12, i64 40, !12, i64 44, !11, i64 48, !11, i64 50, !12, i64 52, !12, i64 56, !12, i64 60}
!101 = !{!"FFMpegCodecData", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !12, i64 16, !12, i64 20, !12, i64 24, !12, i64 28, !15, i64 32, !12, i64 36, !12, i64 40, !12, i64 44, !12, i64 48, !12, i64 52, !12, i64 56, !12, i64 60, !8, i64 64}
!102 = !{!"BakeData", !97, i64 0, !9, i64 248, !11, i64 1272, !11, i64 1274, !11, i64 1276, !11, i64 1278, !15, i64 1280, !15, i64 1284, !9, i64 1288, !9, i64 1291, !9, i64 1292, !9, i64 1293, !9, i64 1296}
!103 = !{!"AudioData", !12, i64 0, !15, i64 4, !15, i64 8, !15, i64 12, !12, i64 16, !11, i64 20, !11, i64 22, !15, i64 24, !15, i64 28}
!104 = !{!"GameFraming", !9, i64 0, !9, i64 12, !9, i64 13, !9, i64 14, !9, i64 15}
!105 = !{!"GameData", !104, i64 0, !11, i64 16, !11, i64 18, !11, i64 20, !11, i64 22, !11, i64 24, !11, i64 26, !11, i64 28, !11, i64 30, !11, i64 32, !9, i64 34, !106, i64 40, !11, i64 64, !11, i64 66, !15, i64 68, !107, i64 72, !15, i64 128, !15, i64 132, !12, i64 136, !11, i64 140, !11, i64 142, !11, i64 144, !11, i64 146, !11, i64 148, !11, i64 150, !11, i64 152, !11, i64 154, !11, i64 156, !11, i64 158, !11, i64 160, !11, i64 162, !15, i64 164, !15, i64 168, !15, i64 172, !15, i64 176, !15, i64 180}
!106 = !{!"GameDome", !11, i64 0, !11, i64 2, !11, i64 4, !11, i64 6, !15, i64 8, !15, i64 12, !8, i64 16}
!107 = !{!"RecastData", !15, i64 0, !15, i64 4, !15, i64 8, !15, i64 12, !15, i64 16, !15, i64 20, !15, i64 24, !15, i64 28, !15, i64 32, !15, i64 36, !12, i64 40, !15, i64 44, !15, i64 48, !11, i64 52, !11, i64 54}
!108 = !{!"UnitSettings", !15, i64 0, !9, i64 4, !9, i64 5, !11, i64 6}
!109 = !{!"PhysicsSettings", !9, i64 0, !12, i64 12, !12, i64 16, !12, i64 20}
!110 = !{!"ColorManagedColorspaceSettings", !9, i64 0}
!111 = !{!27, !12, i64 1300}
!112 = !{!27, !12, i64 1296}
!113 = !{!114, !12, i64 40}
!114 = !{!"Sculpt", !54, i64 0, !12, i64 40, !9, i64 44, !15, i64 56, !12, i64 60, !15, i64 64, !15, i64 68, !8, i64 72, !8, i64 80}
!115 = !{!18, !9, i64 88}
!116 = !{!89, !12, i64 8}
!117 = !{!89, !12, i64 12}
!118 = !{!27, !11, i64 1350}
!119 = !{!18, !8, i64 96}
!120 = !{!27, !12, i64 1284}
!121 = !{!27, !12, i64 1288}
!122 = !{!16, !16, i64 0}
!123 = !{!81, !12, i64 1004}
!124 = !{!81, !12, i64 1008}
!125 = !{!81, !12, i64 1012}
!126 = !{!127, !8, i64 0}
!127 = !{!"wmOperatorType", !8, i64 0, !8, i64 8, !8, i64 16, !8, i64 24, !8, i64 32, !8, i64 40, !8, i64 48, !8, i64 56, !8, i64 64, !8, i64 72, !8, i64 80, !8, i64 88, !8, i64 96, !8, i64 104, !14, i64 112, !8, i64 128, !8, i64 136, !8, i64 144, !128, i64 152, !11, i64 184}
!128 = !{!"ExtensionRNA", !8, i64 0, !8, i64 8, !8, i64 16, !8, i64 24}
!129 = !{!127, !8, i64 8}
!130 = !{!127, !8, i64 24}
!131 = !{!127, !8, i64 48}
!132 = !{!127, !8, i64 64}
!133 = !{!127, !8, i64 32}
!134 = !{!127, !8, i64 72}
!135 = !{!127, !8, i64 56}
!136 = !{!127, !11, i64 184}
!137 = !{!127, !8, i64 88}
!138 = !{!139, !11, i64 16}
!139 = !{!"wmEvent", !8, i64 0, !8, i64 8, !11, i64 16, !11, i64 18, !12, i64 20, !12, i64 24, !9, i64 28, !9, i64 36, !9, i64 42, !9, i64 43, !11, i64 44, !11, i64 46, !12, i64 48, !12, i64 52, !140, i64 56, !12, i64 64, !12, i64 68, !11, i64 72, !11, i64 74, !11, i64 76, !11, i64 78, !11, i64 80, !11, i64 82, !8, i64 88, !8, i64 96, !11, i64 104, !11, i64 106, !12, i64 108, !8, i64 112}
!140 = !{!"double", !9, i64 0}
!141 = !{!142, !8, i64 96}
!142 = !{!"wmOperator", !8, i64 0, !8, i64 8, !9, i64 16, !8, i64 80, !8, i64 88, !8, i64 96, !8, i64 104, !8, i64 112, !8, i64 120, !14, i64 128, !8, i64 144, !8, i64 152, !11, i64 160, !9, i64 162}
!143 = !{!142, !8, i64 112}
!144 = !{!142, !8, i64 88}
!145 = !{!47, !8, i64 216}
!146 = !{!47, !8, i64 560}
!147 = !{!62, !8, i64 16}
!148 = !{!149, !8, i64 336}
!149 = !{!"Tex", !7, i64 0, !8, i64 120, !15, i64 128, !15, i64 132, !15, i64 136, !15, i64 140, !15, i64 144, !15, i64 148, !15, i64 152, !15, i64 156, !15, i64 160, !15, i64 164, !15, i64 168, !15, i64 172, !15, i64 176, !15, i64 180, !15, i64 184, !15, i64 188, !15, i64 192, !15, i64 196, !15, i64 200, !15, i64 204, !15, i64 208, !15, i64 212, !11, i64 216, !11, i64 218, !11, i64 220, !11, i64 222, !11, i64 224, !11, i64 226, !11, i64 228, !11, i64 230, !11, i64 232, !11, i64 234, !15, i64 236, !15, i64 240, !15, i64 244, !15, i64 248, !12, i64 252, !12, i64 256, !11, i64 260, !11, i64 262, !11, i64 264, !11, i64 266, !12, i64 268, !12, i64 272, !12, i64 276, !12, i64 280, !15, i64 284, !15, i64 288, !15, i64 292, !150, i64 296, !8, i64 336, !8, i64 344, !8, i64 352, !8, i64 360, !8, i64 368, !8, i64 376, !8, i64 384, !8, i64 392, !8, i64 400, !9, i64 408, !9, i64 409}
!150 = !{!"ImageUser", !8, i64 0, !12, i64 8, !12, i64 12, !12, i64 16, !12, i64 20, !9, i64 24, !9, i64 25, !9, i64 26, !9, i64 27, !11, i64 28, !11, i64 30, !11, i64 32, !11, i64 34, !12, i64 36}
!151 = !{!152, !8, i64 360}
!152 = !{!"bNodeTree", !7, i64 0, !8, i64 120, !8, i64 128, !9, i64 136, !8, i64 200, !8, i64 208, !9, i64 216, !14, i64 224, !14, i64 240, !12, i64 256, !12, i64 260, !12, i64 264, !12, i64 268, !12, i64 272, !11, i64 276, !11, i64 278, !12, i64 280, !12, i64 284, !11, i64 288, !11, i64 290, !12, i64 292, !76, i64 296, !14, i64 312, !14, i64 328, !8, i64 344, !153, i64 352, !12, i64 356, !8, i64 360, !8, i64 368, !8, i64 376, !8, i64 384, !8, i64 392, !8, i64 400, !8, i64 408, !8, i64 416, !8, i64 424}
!153 = !{!"bNodeInstanceKey", !12, i64 0}
!154 = !{!18, !8, i64 152}
!155 = !{!18, !8, i64 168}
!156 = !{!18, !12, i64 148}
!157 = !{!18, !12, i64 160}
!158 = !{!60, !15, i64 1956}
!159 = !{!47, !15, i64 644}
!160 = !{!47, !12, i64 16}
!161 = !{!162, !12, i64 16}
!162 = !{!"ModifierData", !8, i64 0, !8, i64 8, !12, i64 16, !12, i64 20, !12, i64 24, !12, i64 28, !9, i64 32, !8, i64 96, !8, i64 104}
!163 = !{!162, !12, i64 20}
!164 = !{!165, !11, i64 114}
!165 = !{!"MirrorModifierData", !162, i64 0, !11, i64 112, !11, i64 114, !15, i64 116, !8, i64 120}
!166 = !{!165, !15, i64 116}
!167 = distinct !{!167, !36}
!168 = !{!47, !9, i64 113}
!169 = !{!47, !9, i64 634}
!170 = !{!47, !12, i64 636}
!171 = !{!60, !8, i64 144}
!172 = !{!47, !8, i64 200}
!173 = !{!47, !8, i64 208}
!174 = !{!45, !8, i64 40}
!175 = !{!114, !15, i64 64}
!176 = !{!47, !9, i64 648}
!177 = !{!114, !8, i64 72}
!178 = !{!18, !8, i64 0}
!179 = !{!18, !8, i64 176}
!180 = !{!60, !12, i64 1856}
!181 = !{!18, !12, i64 32}
!182 = !{!18, !8, i64 128}
!183 = !{!18, !8, i64 8}
!184 = distinct !{!184, !36}
!185 = !{!18, !8, i64 40}
!186 = !{!18, !12, i64 36}
!187 = distinct !{!187, !36}
!188 = !{!47, !9, i64 132}
!189 = !{!47, !12, i64 40}
!190 = !{!47, !8, i64 48}
!191 = !{!47, !8, i64 56}
!192 = !{!47, !8, i64 64}
!193 = !{!47, !8, i64 72}
!194 = distinct !{!194, !36}
!195 = !{!47, !9, i64 112}
!196 = !{!47, !15, i64 116}
!197 = !{!47, !15, i64 0}
!198 = !{!47, !15, i64 80}
!199 = !{!47, !15, i64 84}
!200 = !{!56, !15, i64 120}
!201 = !{!56, !12, i64 56}
!202 = !{!56, !12, i64 60}
!203 = !{!47, !15, i64 128}
!204 = !{!47, !15, i64 556}
!205 = !{!56, !15, i64 52}
!206 = !{!47, !15, i64 224}
!207 = !{!45, !8, i64 0}
!208 = !{!114, !15, i64 68}
!209 = !{!114, !15, i64 56}
!210 = !{!211, !12, i64 20}
!211 = !{!"PBVHVertexIter", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !12, i64 16, !12, i64 20, !8, i64 24, !8, i64 32, !8, i64 40, !8, i64 48, !8, i64 56, !8, i64 64, !12, i64 72, !12, i64 76, !8, i64 80, !12, i64 88, !8, i64 96, !8, i64 104, !212, i64 112, !212, i64 136, !8, i64 160, !12, i64 168, !8, i64 176, !8, i64 184, !8, i64 192, !8, i64 200, !8, i64 208, !8, i64 216}
!212 = !{!"GSetIterator", !213, i64 0}
!213 = !{!"GHashIterator", !8, i64 0, !8, i64 8, !12, i64 16}
!214 = !{!211, !12, i64 0}
!215 = !{!211, !12, i64 72}
!216 = !{!211, !8, i64 24}
!217 = !{!211, !12, i64 88}
!218 = !{!211, !12, i64 4}
!219 = !{!211, !12, i64 8}
!220 = !{!211, !12, i64 16}
!221 = !{!211, !12, i64 76}
!222 = !{!211, !8, i64 64}
!223 = !{!211, !8, i64 32}
!224 = !{!211, !8, i64 48}
!225 = !{!211, !8, i64 56}
!226 = !{!211, !12, i64 12}
!227 = !{!211, !8, i64 192}
!228 = !{!211, !8, i64 40}
!229 = !{!230, !12, i64 20}
!230 = !{!"CCGKey", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !12, i64 16, !12, i64 20, !12, i64 24, !12, i64 28, !12, i64 32, !12, i64 36}
!231 = !{!211, !8, i64 208}
!232 = !{!230, !12, i64 36}
!233 = !{!230, !12, i64 24}
!234 = !{!211, !8, i64 216}
!235 = !{!230, !12, i64 4}
!236 = !{!211, !8, i64 80}
!237 = !{!211, !8, i64 96}
!238 = !{!211, !8, i64 176}
!239 = !{!240, !9, i64 18}
!240 = !{!"MVert", !9, i64 0, !9, i64 12, !9, i64 18, !9, i64 19}
!241 = !{!211, !8, i64 200}
!242 = !{!211, !8, i64 104}
!243 = !{!213, !8, i64 8}
!244 = !{!245, !8, i64 8}
!245 = !{!"_gh_Entry", !8, i64 0, !8, i64 8, !8, i64 16}
!246 = !{!211, !8, i64 184}
!247 = !{!248, !9, i64 13}
!248 = !{!"BMHeader", !8, i64 0, !12, i64 8, !9, i64 12, !9, i64 13, !9, i64 14}
!249 = !{!250, !8, i64 0}
!250 = !{!"BMVert", !248, i64 0, !8, i64 16, !9, i64 24, !9, i64 36, !8, i64 48}
!251 = !{!211, !12, i64 168}
!252 = !{!253, !8, i64 0}
!253 = !{!"", !8, i64 0}
!254 = distinct !{!254, !36}
!255 = !{!18, !8, i64 136}
!256 = !{!18, !8, i64 120}
!257 = distinct !{!257, !36}
!258 = distinct !{!258, !36}
!259 = distinct !{!259, !36}
!260 = distinct !{!260, !36}
!261 = !{!149, !11, i64 232}
!262 = distinct !{!262, !36}
!263 = distinct !{!263, !36}
!264 = distinct !{!264, !36}
!265 = distinct !{!265, !36}
!266 = !{!74, !12, i64 176}
!267 = !{!74, !12, i64 184}
!268 = !{!18, !9, i64 144}
!269 = distinct !{!269, !36}
!270 = !{!56, !9, i64 64}
!271 = !{!27, !12, i64 100}
!272 = !{!114, !12, i64 36}
!273 = !{!47, !12, i64 276}
!274 = distinct !{!274, !36}
!275 = distinct !{!275, !36}
!276 = !{!56, !15, i64 72}
!277 = !{!47, !12, i64 280}
!278 = !{!47, !12, i64 408}
!279 = !{ptr @do_brush_action, ptr @sculpt_topology_update}
!280 = distinct !{!280, !36}
!281 = distinct !{!281, !36}
!282 = !{!283, !8, i64 8}
!283 = !{!"", !8, i64 0, !8, i64 8, !15, i64 16, !9, i64 20}
!284 = !{!283, !8, i64 0}
!285 = !{!283, !15, i64 16}
!286 = !{!283, !9, i64 20}
!287 = distinct !{!287, !36}
!288 = distinct !{!288, !36}
!289 = !{!60, !15, i64 1840}
!290 = !{!60, !9, i64 284}
!291 = !{!60, !12, i64 1920}
!292 = !{!60, !15, i64 268}
!293 = !{!79, !11, i64 826}
!294 = distinct !{!294, !36}
!295 = distinct !{!295, !36}
!296 = distinct !{!296, !36}
!297 = distinct !{!297, !36}
!298 = distinct !{!298, !36}
!299 = distinct !{!299, !36}
!300 = distinct !{!300, !36}
!301 = distinct !{!301, !36}
!302 = !{!11, !11, i64 0}
!303 = distinct !{!303, !36}
!304 = distinct !{!304, !36}
!305 = distinct !{!305, !36}
!306 = distinct !{!306, !36}
!307 = !{!81, !8, i64 112}
!308 = !{!81, !8, i64 120}
!309 = !{!81, !9, i64 16}
!310 = distinct !{!310, !36}
!311 = distinct !{!311, !36}
!312 = distinct !{!312, !36}
!313 = distinct !{!313, !36}
!314 = distinct !{!314, !36}
!315 = distinct !{!315, !36}
!316 = distinct !{!316, !36}
!317 = distinct !{!317, !36}
!318 = distinct !{!318, !36}
!319 = distinct !{!319, !36}
!320 = distinct !{!320, !36}
!321 = distinct !{!321, !36}
!322 = distinct !{!322, !36}
!323 = distinct !{!323, !36}
!324 = distinct !{!324, !36}
!325 = distinct !{!325, !36}
!326 = distinct !{!326, !36}
!327 = distinct !{!327, !36}
!328 = distinct !{!328, !36}
!329 = distinct !{!329, !36}
!330 = !{!60, !15, i64 1960}
!331 = distinct !{!331, !36}
!332 = distinct !{!332, !36}
!333 = distinct !{!333, !36}
!334 = distinct !{!334, !36}
!335 = !{!60, !15, i64 1924}
!336 = distinct !{!336, !36}
!337 = distinct !{!337, !36}
!338 = distinct !{!338, !36}
!339 = distinct !{!339, !36}
!340 = distinct !{!340, !36}
!341 = distinct !{!341, !36}
!342 = distinct !{!342, !36}
!343 = distinct !{!343, !36}
!344 = distinct !{!344, !36}
!345 = distinct !{!345, !36}
!346 = distinct !{!346, !36}
!347 = distinct !{!347, !36}
!348 = distinct !{!348, !36}
!349 = distinct !{!349, !36}
!350 = distinct !{!350, !36}
!351 = distinct !{!351, !36}
!352 = distinct !{!352, !36}
!353 = distinct !{!353, !36}
!354 = distinct !{!354, !36}
!355 = distinct !{!355, !36}
!356 = distinct !{!356, !36}
!357 = distinct !{!357, !36}
!358 = distinct !{!358, !36}
!359 = distinct !{!359, !36}
!360 = distinct !{!360, !36}
!361 = distinct !{!361, !36}
!362 = distinct !{!362, !36}
!363 = distinct !{!363, !36}
!364 = distinct !{!364, !36}
!365 = distinct !{!365, !36}
!366 = distinct !{!366, !36}
!367 = distinct !{!367, !36}
!368 = distinct !{!368, !36}
!369 = !{!60, !15, i64 1952}
!370 = distinct !{!370, !36}
!371 = distinct !{!371, !36}
!372 = distinct !{!372, !36}
!373 = distinct !{!373, !36}
!374 = !{!18, !8, i64 64}
!375 = distinct !{!375, !36}
!376 = distinct !{!376, !36}
!377 = distinct !{!377, !36}
!378 = distinct !{!378, !36, !379}
!379 = !{!"llvm.loop.unswitch.partial.disable"}
!380 = distinct !{!380, !36}
!381 = distinct !{!381, !36}
!382 = distinct !{!382, !36}
!383 = !{!18, !8, i64 56}
!384 = !{!385, !12, i64 8}
!385 = !{!"MeshElemMap", !8, i64 0, !12, i64 8}
!386 = !{!18, !8, i64 16}
!387 = !{!385, !8, i64 0}
!388 = !{!18, !8, i64 24}
!389 = distinct !{!389, !36}
!390 = distinct !{!390, !36}
!391 = distinct !{!391, !36}
!392 = distinct !{!392, !36}
!393 = distinct !{!393, !36}
!394 = !{!395, !9, i64 60}
!395 = !{!"BMIter", !9, i64 0, !8, i64 40, !8, i64 48, !12, i64 56, !9, i64 60}
!396 = !{!395, !8, i64 40}
!397 = !{!395, !8, i64 48}
!398 = !{!9, !9, i64 0}
!399 = !{!400, !8, i64 64}
!400 = !{!"BMLoop", !248, i64 0, !8, i64 16, !8, i64 24, !8, i64 32, !8, i64 40, !8, i64 48, !8, i64 56, !8, i64 64}
!401 = !{!400, !8, i64 16}
!402 = !{!400, !8, i64 56}
!403 = distinct !{!403, !36}
!404 = distinct !{!404, !36}
!405 = distinct !{!405, !36}
!406 = distinct !{!406, !36}
!407 = distinct !{!407, !36}
!408 = distinct !{!408, !36, !379}
!409 = distinct !{!409, !36}
!410 = distinct !{!410, !36}
!411 = distinct !{!411, !36}
!412 = distinct !{!412, !36}
!413 = distinct !{!413, !36}
!414 = distinct !{!414, !36}
!415 = distinct !{!415, !36}
!416 = !{!62, !9, i64 132}
!417 = !{!60, !15, i64 1964}
!418 = distinct !{!418, !36}
!419 = distinct !{!419, !36}
!420 = distinct !{!420, !36}
!421 = distinct !{!421, !36}
!422 = distinct !{!422, !36}
!423 = distinct !{!423, !36}
!424 = distinct !{!424, !36}
!425 = distinct !{!425, !36}
!426 = distinct !{!426, !36}
!427 = distinct !{!427, !36}
!428 = distinct !{!428, !36}
!429 = distinct !{!429, !36}
!430 = distinct !{!430, !36}
!431 = distinct !{!431, !36}
!432 = !{!142, !8, i64 120}
!433 = !{!434, !9, i64 113}
!434 = !{!"MultiresModifierData", !162, i64 0, !9, i64 112, !9, i64 113, !9, i64 114, !9, i64 115, !9, i64 116, !9, i64 117, !9, i64 118}
!435 = !{!434, !9, i64 112}
!436 = !{!162, !8, i64 0}
!437 = distinct !{!437, !36}
!438 = !{!114, !12, i64 28}
!439 = distinct !{!439, !36}
!440 = !{!441, !9, i64 68}
!441 = !{!"ModifierTypeInfo", !9, i64 0, !9, i64 32, !12, i64 64, !9, i64 68, !9, i64 72, !8, i64 80, !8, i64 88, !8, i64 96, !8, i64 104, !8, i64 112, !8, i64 120, !8, i64 128, !8, i64 136, !8, i64 144, !8, i64 152, !8, i64 160, !8, i64 168, !8, i64 176, !8, i64 184, !8, i64 192, !8, i64 200, !8, i64 208}
!442 = distinct !{!442, !36}
!443 = !{!114, !12, i64 60}
!444 = distinct !{!444, !36}
!445 = distinct !{!445, !36}
!446 = distinct !{!446, !36}
!447 = !{!139, !11, i64 18}
!448 = !{!449, !9, i64 16}
!449 = !{!"", !8, i64 0, !8, i64 8, !9, i64 16, !15, i64 20, !15, i64 24}
!450 = !{!449, !8, i64 0}
!451 = !{!449, !8, i64 8}
!452 = !{!449, !15, i64 20}
!453 = !{!449, !15, i64 24}
