; ModuleID = 'blender/source/blender/blenkernel/intern/CCGSubSurf.c'
source_filename = "blender/source/blender/blenkernel/intern/CCGSubSurf.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.CCGAllocatorIFC = type { ptr, ptr, ptr, ptr }
%struct.CCGSubSurf = type { ptr, ptr, ptr, %struct.CCGMeshIFC, %struct.CCGAllocatorIFC, ptr, i32, i32, i32, float, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, i32, ptr, ptr }
%struct.CCGMeshIFC = type { i32, i32, i32, i32, i32, i32 }
%struct._EHash = type { ptr, i32, i32, i32, %struct.CCGAllocatorIFC, ptr }
%struct.CCGEdge = type { ptr, ptr, i16, i16, float, ptr, ptr, ptr }
%struct.CCGVert = type { ptr, ptr, i16, i16, i16, i16, ptr, ptr }
%struct._EHEntry = type { ptr, ptr }
%struct.CCGFace = type { ptr, ptr, i16, i16, i16, i16 }
%struct._EHashIterator = type { ptr, i32, ptr }
%struct.CCGKey = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@MEM_freeN = external local_unnamed_addr global ptr, align 8
@MEM_mallocN = external local_unnamed_addr global ptr, align 8
@.str = private unnamed_addr constant [21 x i8] c"CCGSubsurf tempVerts\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"CCGSubsurf tempEdges\00", align 1
@MEM_reallocN_id = external local_unnamed_addr global ptr, align 8
@__func__.ccgSubSurf_syncFace = private unnamed_addr constant [20 x i8] c"ccgSubSurf_syncFace\00", align 1
@_getStandardAllocatorIFC.ifc = internal unnamed_addr global %struct.CCGAllocatorIFC zeroinitializer, align 8
@kHashSizes = internal unnamed_addr constant [29 x i32] [i32 1, i32 3, i32 5, i32 11, i32 17, i32 37, i32 67, i32 131, i32 257, i32 521, i32 1031, i32 2053, i32 4099, i32 8209, i32 16411, i32 32771, i32 65537, i32 131101, i32 262147, i32 524309, i32 1048583, i32 2097169, i32 4194319, i32 8388617, i32 16777259, i32 33554467, i32 67108879, i32 134217757, i32 268435459], align 16
@.str.2 = private unnamed_addr constant [21 x i8] c"CCGSubsurf effectedV\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"CCGSubsurf effectedE\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"CCGSubsurf effectedF\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"CCGSubsurf allFaces\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"CCGSubsurf arrayV\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"CCGSubsurf q\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"CCGSubsurf r\00", align 1

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local i32 @BKE_ccg_gridsize(i32 noundef %0) local_unnamed_addr #0 {
  %2 = add nsw i32 %0, -1
  %3 = shl nuw i32 1, %2
  %4 = add nuw nsw i32 %3, 1
  ret i32 %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local i32 @BKE_ccg_factor(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %3 = sub nsw i32 %1, %0
  %4 = shl nuw i32 1, %3
  ret i32 %4
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @ccgSubSurf_new(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef readonly %2, ptr noundef %3) local_unnamed_addr #1 {
  %5 = icmp eq ptr %2, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  store ptr @_stdAllocator_alloc, ptr @_getStandardAllocatorIFC.ifc, align 8, !tbaa !5
  store ptr @_stdAllocator_realloc, ptr getelementptr inbounds (%struct.CCGAllocatorIFC, ptr @_getStandardAllocatorIFC.ifc, i64 0, i32 1), align 8, !tbaa !10
  store ptr @_stdAllocator_free, ptr getelementptr inbounds (%struct.CCGAllocatorIFC, ptr @_getStandardAllocatorIFC.ifc, i64 0, i32 2), align 8, !tbaa !11
  store ptr null, ptr getelementptr inbounds (%struct.CCGAllocatorIFC, ptr @_getStandardAllocatorIFC.ifc, i64 0, i32 3), align 8, !tbaa !12
  br label %7

7:                                                ; preds = %6, %4
  %8 = phi ptr [ %2, %4 ], [ @_getStandardAllocatorIFC.ifc, %6 ]
  %9 = phi ptr [ %3, %4 ], [ null, %6 ]
  %10 = icmp slt i32 %1, 1
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = load ptr, ptr %8, align 8, !tbaa !5
  %13 = tail call ptr %12(ptr noundef %9, i32 noundef 216) #23
  %14 = getelementptr inbounds %struct.CCGSubSurf, ptr %13, i64 0, i32 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %14, ptr noundef nonnull align 8 dereferenceable(32) %8, i64 32, i1 false), !tbaa.struct !13
  %15 = getelementptr inbounds %struct.CCGSubSurf, ptr %13, i64 0, i32 5
  store ptr %9, ptr %15, align 8, !tbaa !15
  %16 = load ptr, ptr %14, align 8, !tbaa !5
  %17 = tail call ptr %16(ptr noundef %9, i32 noundef 64) #23
  %18 = getelementptr inbounds %struct._EHash, ptr %17, i64 0, i32 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %18, ptr noundef nonnull align 8 dereferenceable(32) %14, i64 32, i1 false), !tbaa.struct !13
  %19 = getelementptr inbounds %struct._EHash, ptr %17, i64 0, i32 5
  store ptr %9, ptr %19, align 8, !tbaa !20
  %20 = getelementptr inbounds %struct._EHash, ptr %17, i64 0, i32 1
  store i32 0, ptr %20, align 8, !tbaa !22
  %21 = getelementptr inbounds %struct._EHash, ptr %17, i64 0, i32 3
  store i32 0, ptr %21, align 8, !tbaa !23
  %22 = getelementptr inbounds %struct._EHash, ptr %17, i64 0, i32 2
  store i32 1, ptr %22, align 4, !tbaa !24
  %23 = load ptr, ptr %18, align 8, !tbaa !25
  %24 = tail call ptr %23(ptr noundef %9, i32 noundef 8) #23
  store ptr %24, ptr %17, align 8, !tbaa !26
  %25 = load i32, ptr %22, align 4, !tbaa !24
  %26 = sext i32 %25 to i64
  %27 = shl nsw i64 %26, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %24, i8 0, i64 %27, i1 false)
  store ptr %17, ptr %13, align 8, !tbaa !27
  %28 = load ptr, ptr %15, align 8, !tbaa !15
  %29 = load ptr, ptr %14, align 8, !tbaa !5
  %30 = tail call ptr %29(ptr noundef %28, i32 noundef 64) #23
  %31 = getelementptr inbounds %struct._EHash, ptr %30, i64 0, i32 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %31, ptr noundef nonnull align 8 dereferenceable(32) %14, i64 32, i1 false), !tbaa.struct !13
  %32 = getelementptr inbounds %struct._EHash, ptr %30, i64 0, i32 5
  store ptr %28, ptr %32, align 8, !tbaa !20
  %33 = getelementptr inbounds %struct._EHash, ptr %30, i64 0, i32 1
  store i32 0, ptr %33, align 8, !tbaa !22
  %34 = getelementptr inbounds %struct._EHash, ptr %30, i64 0, i32 3
  store i32 0, ptr %34, align 8, !tbaa !23
  %35 = getelementptr inbounds %struct._EHash, ptr %30, i64 0, i32 2
  store i32 1, ptr %35, align 4, !tbaa !24
  %36 = load ptr, ptr %31, align 8, !tbaa !25
  %37 = tail call ptr %36(ptr noundef %28, i32 noundef 8) #23
  store ptr %37, ptr %30, align 8, !tbaa !26
  %38 = load i32, ptr %35, align 4, !tbaa !24
  %39 = sext i32 %38 to i64
  %40 = shl nsw i64 %39, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %37, i8 0, i64 %40, i1 false)
  %41 = getelementptr inbounds %struct.CCGSubSurf, ptr %13, i64 0, i32 1
  store ptr %30, ptr %41, align 8, !tbaa !28
  %42 = load ptr, ptr %15, align 8, !tbaa !15
  %43 = load ptr, ptr %14, align 8, !tbaa !5
  %44 = tail call ptr %43(ptr noundef %42, i32 noundef 64) #23
  %45 = getelementptr inbounds %struct._EHash, ptr %44, i64 0, i32 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %45, ptr noundef nonnull align 8 dereferenceable(32) %14, i64 32, i1 false), !tbaa.struct !13
  %46 = getelementptr inbounds %struct._EHash, ptr %44, i64 0, i32 5
  store ptr %42, ptr %46, align 8, !tbaa !20
  %47 = getelementptr inbounds %struct._EHash, ptr %44, i64 0, i32 1
  store i32 0, ptr %47, align 8, !tbaa !22
  %48 = getelementptr inbounds %struct._EHash, ptr %44, i64 0, i32 3
  store i32 0, ptr %48, align 8, !tbaa !23
  %49 = getelementptr inbounds %struct._EHash, ptr %44, i64 0, i32 2
  store i32 1, ptr %49, align 4, !tbaa !24
  %50 = load ptr, ptr %45, align 8, !tbaa !25
  %51 = tail call ptr %50(ptr noundef %42, i32 noundef 8) #23
  store ptr %51, ptr %44, align 8, !tbaa !26
  %52 = load i32, ptr %49, align 4, !tbaa !24
  %53 = sext i32 %52 to i64
  %54 = shl nsw i64 %53, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %51, i8 0, i64 %54, i1 false)
  %55 = getelementptr inbounds %struct.CCGSubSurf, ptr %13, i64 0, i32 2
  store ptr %44, ptr %55, align 8, !tbaa !29
  %56 = getelementptr inbounds %struct.CCGSubSurf, ptr %13, i64 0, i32 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %56, ptr noundef nonnull align 4 dereferenceable(24) %0, i64 24, i1 false), !tbaa.struct !30
  %57 = getelementptr inbounds %struct.CCGSubSurf, ptr %13, i64 0, i32 6
  store i32 %1, ptr %57, align 8, !tbaa !32
  %58 = getelementptr inbounds %struct.CCGSubSurf, ptr %13, i64 0, i32 7
  %59 = getelementptr inbounds %struct.CCGSubSurf, ptr %13, i64 0, i32 18
  %60 = getelementptr inbounds %struct.CCGSubSurf, ptr %13, i64 0, i32 13
  store i32 0, ptr %60, align 8, !tbaa !33
  %61 = getelementptr inbounds %struct.CCGSubSurf, ptr %13, i64 0, i32 14
  store i32 0, ptr %61, align 4, !tbaa !34
  %62 = getelementptr inbounds %struct.CCGSubSurf, ptr %13, i64 0, i32 15
  store i32 0, ptr %62, align 8, !tbaa !35
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %58, i8 0, i64 20, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %59, i8 0, i64 16, i1 false)
  %63 = load ptr, ptr %14, align 8, !tbaa !36
  %64 = load ptr, ptr %15, align 8, !tbaa !15
  %65 = getelementptr inbounds %struct.CCGSubSurf, ptr %13, i64 0, i32 3, i32 4
  %66 = load i32, ptr %65, align 8, !tbaa !37
  %67 = tail call ptr %63(ptr noundef %64, i32 noundef %66) #23
  %68 = getelementptr inbounds %struct.CCGSubSurf, ptr %13, i64 0, i32 11
  store ptr %67, ptr %68, align 8, !tbaa !38
  %69 = load ptr, ptr %14, align 8, !tbaa !36
  %70 = load ptr, ptr %15, align 8, !tbaa !15
  %71 = load i32, ptr %65, align 8, !tbaa !37
  %72 = tail call ptr %69(ptr noundef %70, i32 noundef %71) #23
  %73 = getelementptr inbounds %struct.CCGSubSurf, ptr %13, i64 0, i32 12
  store ptr %72, ptr %73, align 8, !tbaa !39
  %74 = getelementptr inbounds %struct.CCGSubSurf, ptr %13, i64 0, i32 17
  store i32 0, ptr %74, align 8, !tbaa !40
  %75 = getelementptr inbounds %struct.CCGSubSurf, ptr %13, i64 0, i32 22
  %76 = getelementptr inbounds %struct.CCGSubSurf, ptr %13, i64 0, i32 27
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %75, i8 0, i64 32, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %76, i8 0, i64 16, i1 false)
  br label %77

77:                                               ; preds = %7, %11
  %78 = phi ptr [ %13, %11 ], [ null, %7 ]
  ret ptr %78
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @ccgSubSurf_free(ptr noundef %0) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa.struct !41
  %4 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 5
  %5 = load ptr, ptr %4, align 8, !tbaa !15
  %6 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 22
  %7 = load i32, ptr %6, align 4, !tbaa !42
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %125, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 25
  %11 = load ptr, ptr %10, align 8, !tbaa !43
  %12 = getelementptr inbounds %struct._EHash, ptr %11, i64 0, i32 2
  %13 = load i32, ptr %12, align 4, !tbaa !24
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %34, label %15

15:                                               ; preds = %9
  %16 = sext i32 %13 to i64
  %17 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4, i32 2
  br label %21

18:                                               ; preds = %28, %21
  %19 = and i64 %23, 4294967295
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %34, label %21, !llvm.loop !44

21:                                               ; preds = %18, %15
  %22 = phi i64 [ %16, %15 ], [ %23, %18 ]
  %23 = add nsw i64 %22, -1
  %24 = load ptr, ptr %11, align 8, !tbaa !26
  %25 = getelementptr inbounds ptr, ptr %24, i64 %23
  %26 = load ptr, ptr %25, align 8, !tbaa !14
  %27 = icmp eq ptr %26, null
  br i1 %27, label %18, label %28

28:                                               ; preds = %21, %28
  %29 = phi ptr [ %30, %28 ], [ %26, %21 ]
  %30 = load ptr, ptr %29, align 8, !tbaa !46
  %31 = load ptr, ptr %17, align 8, !tbaa !48
  %32 = load ptr, ptr %4, align 8, !tbaa !15
  tail call void %31(ptr noundef %32, ptr noundef nonnull %29) #23
  %33 = icmp eq ptr %30, null
  br i1 %33, label %18, label %28, !llvm.loop !49

34:                                               ; preds = %18, %9
  %35 = getelementptr inbounds %struct._EHash, ptr %11, i64 0, i32 4, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !50
  %37 = getelementptr inbounds %struct._EHash, ptr %11, i64 0, i32 5
  %38 = load ptr, ptr %37, align 8, !tbaa !20
  %39 = load ptr, ptr %11, align 8, !tbaa !26
  tail call void %36(ptr noundef %38, ptr noundef %39) #23
  %40 = load ptr, ptr %35, align 8, !tbaa !50
  %41 = load ptr, ptr %37, align 8, !tbaa !20
  tail call void %40(ptr noundef %41, ptr noundef nonnull %11) #23
  %42 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 24
  %43 = load ptr, ptr %42, align 8, !tbaa !51
  %44 = getelementptr inbounds %struct._EHash, ptr %43, i64 0, i32 2
  %45 = load i32, ptr %44, align 4, !tbaa !24
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %70, label %47

47:                                               ; preds = %34
  %48 = sext i32 %45 to i64
  %49 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4, i32 2
  br label %53

50:                                               ; preds = %60, %53
  %51 = and i64 %55, 4294967295
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %70, label %53, !llvm.loop !44

53:                                               ; preds = %50, %47
  %54 = phi i64 [ %48, %47 ], [ %55, %50 ]
  %55 = add nsw i64 %54, -1
  %56 = load ptr, ptr %43, align 8, !tbaa !26
  %57 = getelementptr inbounds ptr, ptr %56, i64 %55
  %58 = load ptr, ptr %57, align 8, !tbaa !14
  %59 = icmp eq ptr %58, null
  br i1 %59, label %50, label %60

60:                                               ; preds = %53, %60
  %61 = phi ptr [ %62, %60 ], [ %58, %53 ]
  %62 = load ptr, ptr %61, align 8, !tbaa !46
  %63 = load ptr, ptr %49, align 8, !tbaa !48
  %64 = load ptr, ptr %4, align 8, !tbaa !15
  %65 = getelementptr inbounds %struct.CCGEdge, ptr %61, i64 0, i32 7
  %66 = load ptr, ptr %65, align 8, !tbaa !52
  tail call void %63(ptr noundef %64, ptr noundef %66) #23
  %67 = load ptr, ptr %49, align 8, !tbaa !48
  %68 = load ptr, ptr %4, align 8, !tbaa !15
  tail call void %67(ptr noundef %68, ptr noundef nonnull %61) #23
  %69 = icmp eq ptr %62, null
  br i1 %69, label %50, label %60, !llvm.loop !49

70:                                               ; preds = %50, %34
  %71 = getelementptr inbounds %struct._EHash, ptr %43, i64 0, i32 4, i32 2
  %72 = load ptr, ptr %71, align 8, !tbaa !50
  %73 = getelementptr inbounds %struct._EHash, ptr %43, i64 0, i32 5
  %74 = load ptr, ptr %73, align 8, !tbaa !20
  %75 = load ptr, ptr %43, align 8, !tbaa !26
  tail call void %72(ptr noundef %74, ptr noundef %75) #23
  %76 = load ptr, ptr %71, align 8, !tbaa !50
  %77 = load ptr, ptr %73, align 8, !tbaa !20
  tail call void %76(ptr noundef %77, ptr noundef nonnull %43) #23
  %78 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 23
  %79 = load ptr, ptr %78, align 8, !tbaa !55
  %80 = getelementptr inbounds %struct._EHash, ptr %79, i64 0, i32 2
  %81 = load i32, ptr %80, align 4, !tbaa !24
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %110, label %83

83:                                               ; preds = %70
  %84 = sext i32 %81 to i64
  %85 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4, i32 2
  br label %89

86:                                               ; preds = %96, %89
  %87 = and i64 %91, 4294967295
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %110, label %89, !llvm.loop !44

89:                                               ; preds = %86, %83
  %90 = phi i64 [ %84, %83 ], [ %91, %86 ]
  %91 = add nsw i64 %90, -1
  %92 = load ptr, ptr %79, align 8, !tbaa !26
  %93 = getelementptr inbounds ptr, ptr %92, i64 %91
  %94 = load ptr, ptr %93, align 8, !tbaa !14
  %95 = icmp eq ptr %94, null
  br i1 %95, label %86, label %96

96:                                               ; preds = %89, %96
  %97 = phi ptr [ %98, %96 ], [ %94, %89 ]
  %98 = load ptr, ptr %97, align 8, !tbaa !46
  %99 = load ptr, ptr %85, align 8, !tbaa !48
  %100 = load ptr, ptr %4, align 8, !tbaa !15
  %101 = getelementptr inbounds %struct.CCGVert, ptr %97, i64 0, i32 6
  %102 = load ptr, ptr %101, align 8, !tbaa !56
  tail call void %99(ptr noundef %100, ptr noundef %102) #23
  %103 = load ptr, ptr %85, align 8, !tbaa !48
  %104 = load ptr, ptr %4, align 8, !tbaa !15
  %105 = getelementptr inbounds %struct.CCGVert, ptr %97, i64 0, i32 7
  %106 = load ptr, ptr %105, align 8, !tbaa !58
  tail call void %103(ptr noundef %104, ptr noundef %106) #23
  %107 = load ptr, ptr %85, align 8, !tbaa !48
  %108 = load ptr, ptr %4, align 8, !tbaa !15
  tail call void %107(ptr noundef %108, ptr noundef nonnull %97) #23
  %109 = icmp eq ptr %98, null
  br i1 %109, label %86, label %96, !llvm.loop !49

110:                                              ; preds = %86, %70
  %111 = getelementptr inbounds %struct._EHash, ptr %79, i64 0, i32 4, i32 2
  %112 = load ptr, ptr %111, align 8, !tbaa !50
  %113 = getelementptr inbounds %struct._EHash, ptr %79, i64 0, i32 5
  %114 = load ptr, ptr %113, align 8, !tbaa !20
  %115 = load ptr, ptr %79, align 8, !tbaa !26
  tail call void %112(ptr noundef %114, ptr noundef %115) #23
  %116 = load ptr, ptr %111, align 8, !tbaa !50
  %117 = load ptr, ptr %113, align 8, !tbaa !20
  tail call void %116(ptr noundef %117, ptr noundef nonnull %79) #23
  %118 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  %119 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 27
  %120 = load ptr, ptr %119, align 8, !tbaa !59
  tail call void %118(ptr noundef %120) #23
  %121 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  %122 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 28
  %123 = load ptr, ptr %122, align 8, !tbaa !60
  tail call void %121(ptr noundef %123) #23
  %124 = load ptr, ptr %4, align 8, !tbaa !15
  br label %125

125:                                              ; preds = %110, %1
  %126 = phi ptr [ %124, %110 ], [ %5, %1 ]
  %127 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4, i32 2
  %128 = load ptr, ptr %127, align 8, !tbaa !48
  %129 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 12
  %130 = load ptr, ptr %129, align 8, !tbaa !39
  tail call void %128(ptr noundef %126, ptr noundef %130) #23
  %131 = load ptr, ptr %127, align 8, !tbaa !48
  %132 = load ptr, ptr %4, align 8, !tbaa !15
  %133 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 11
  %134 = load ptr, ptr %133, align 8, !tbaa !38
  tail call void %131(ptr noundef %132, ptr noundef %134) #23
  %135 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 10
  %136 = load ptr, ptr %135, align 8, !tbaa !61
  %137 = icmp eq ptr %136, null
  br i1 %137, label %141, label %138

138:                                              ; preds = %125
  %139 = load ptr, ptr %127, align 8, !tbaa !48
  %140 = load ptr, ptr %4, align 8, !tbaa !15
  tail call void %139(ptr noundef %140, ptr noundef nonnull %136) #23
  br label %141

141:                                              ; preds = %138, %125
  %142 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 2
  %143 = load ptr, ptr %142, align 8, !tbaa !29
  %144 = getelementptr inbounds %struct._EHash, ptr %143, i64 0, i32 2
  %145 = load i32, ptr %144, align 4, !tbaa !24
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %165, label %147

147:                                              ; preds = %141
  %148 = sext i32 %145 to i64
  br label %152

149:                                              ; preds = %159, %152
  %150 = and i64 %154, 4294967295
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %165, label %152, !llvm.loop !44

152:                                              ; preds = %149, %147
  %153 = phi i64 [ %148, %147 ], [ %154, %149 ]
  %154 = add nsw i64 %153, -1
  %155 = load ptr, ptr %143, align 8, !tbaa !26
  %156 = getelementptr inbounds ptr, ptr %155, i64 %154
  %157 = load ptr, ptr %156, align 8, !tbaa !14
  %158 = icmp eq ptr %157, null
  br i1 %158, label %149, label %159

159:                                              ; preds = %152, %159
  %160 = phi ptr [ %161, %159 ], [ %157, %152 ]
  %161 = load ptr, ptr %160, align 8, !tbaa !46
  %162 = load ptr, ptr %127, align 8, !tbaa !48
  %163 = load ptr, ptr %4, align 8, !tbaa !15
  tail call void %162(ptr noundef %163, ptr noundef nonnull %160) #23
  %164 = icmp eq ptr %161, null
  br i1 %164, label %149, label %159, !llvm.loop !49

165:                                              ; preds = %149, %141
  %166 = getelementptr inbounds %struct._EHash, ptr %143, i64 0, i32 4, i32 2
  %167 = load ptr, ptr %166, align 8, !tbaa !50
  %168 = getelementptr inbounds %struct._EHash, ptr %143, i64 0, i32 5
  %169 = load ptr, ptr %168, align 8, !tbaa !20
  %170 = load ptr, ptr %143, align 8, !tbaa !26
  tail call void %167(ptr noundef %169, ptr noundef %170) #23
  %171 = load ptr, ptr %166, align 8, !tbaa !50
  %172 = load ptr, ptr %168, align 8, !tbaa !20
  tail call void %171(ptr noundef %172, ptr noundef nonnull %143) #23
  %173 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 1
  %174 = load ptr, ptr %173, align 8, !tbaa !28
  %175 = getelementptr inbounds %struct._EHash, ptr %174, i64 0, i32 2
  %176 = load i32, ptr %175, align 4, !tbaa !24
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %200, label %178

178:                                              ; preds = %165
  %179 = sext i32 %176 to i64
  br label %183

180:                                              ; preds = %190, %183
  %181 = and i64 %185, 4294967295
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %200, label %183, !llvm.loop !44

183:                                              ; preds = %180, %178
  %184 = phi i64 [ %179, %178 ], [ %185, %180 ]
  %185 = add nsw i64 %184, -1
  %186 = load ptr, ptr %174, align 8, !tbaa !26
  %187 = getelementptr inbounds ptr, ptr %186, i64 %185
  %188 = load ptr, ptr %187, align 8, !tbaa !14
  %189 = icmp eq ptr %188, null
  br i1 %189, label %180, label %190

190:                                              ; preds = %183, %190
  %191 = phi ptr [ %192, %190 ], [ %188, %183 ]
  %192 = load ptr, ptr %191, align 8, !tbaa !46
  %193 = load ptr, ptr %127, align 8, !tbaa !48
  %194 = load ptr, ptr %4, align 8, !tbaa !15
  %195 = getelementptr inbounds %struct.CCGEdge, ptr %191, i64 0, i32 7
  %196 = load ptr, ptr %195, align 8, !tbaa !52
  tail call void %193(ptr noundef %194, ptr noundef %196) #23
  %197 = load ptr, ptr %127, align 8, !tbaa !48
  %198 = load ptr, ptr %4, align 8, !tbaa !15
  tail call void %197(ptr noundef %198, ptr noundef nonnull %191) #23
  %199 = icmp eq ptr %192, null
  br i1 %199, label %180, label %190, !llvm.loop !49

200:                                              ; preds = %180, %165
  %201 = getelementptr inbounds %struct._EHash, ptr %174, i64 0, i32 4, i32 2
  %202 = load ptr, ptr %201, align 8, !tbaa !50
  %203 = getelementptr inbounds %struct._EHash, ptr %174, i64 0, i32 5
  %204 = load ptr, ptr %203, align 8, !tbaa !20
  %205 = load ptr, ptr %174, align 8, !tbaa !26
  tail call void %202(ptr noundef %204, ptr noundef %205) #23
  %206 = load ptr, ptr %201, align 8, !tbaa !50
  %207 = load ptr, ptr %203, align 8, !tbaa !20
  tail call void %206(ptr noundef %207, ptr noundef nonnull %174) #23
  %208 = load ptr, ptr %0, align 8, !tbaa !27
  %209 = getelementptr inbounds %struct._EHash, ptr %208, i64 0, i32 2
  %210 = load i32, ptr %209, align 4, !tbaa !24
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %238, label %212

212:                                              ; preds = %200
  %213 = sext i32 %210 to i64
  br label %217

214:                                              ; preds = %224, %217
  %215 = and i64 %219, 4294967295
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %238, label %217, !llvm.loop !44

217:                                              ; preds = %214, %212
  %218 = phi i64 [ %213, %212 ], [ %219, %214 ]
  %219 = add nsw i64 %218, -1
  %220 = load ptr, ptr %208, align 8, !tbaa !26
  %221 = getelementptr inbounds ptr, ptr %220, i64 %219
  %222 = load ptr, ptr %221, align 8, !tbaa !14
  %223 = icmp eq ptr %222, null
  br i1 %223, label %214, label %224

224:                                              ; preds = %217, %224
  %225 = phi ptr [ %226, %224 ], [ %222, %217 ]
  %226 = load ptr, ptr %225, align 8, !tbaa !46
  %227 = load ptr, ptr %127, align 8, !tbaa !48
  %228 = load ptr, ptr %4, align 8, !tbaa !15
  %229 = getelementptr inbounds %struct.CCGVert, ptr %225, i64 0, i32 6
  %230 = load ptr, ptr %229, align 8, !tbaa !56
  tail call void %227(ptr noundef %228, ptr noundef %230) #23
  %231 = load ptr, ptr %127, align 8, !tbaa !48
  %232 = load ptr, ptr %4, align 8, !tbaa !15
  %233 = getelementptr inbounds %struct.CCGVert, ptr %225, i64 0, i32 7
  %234 = load ptr, ptr %233, align 8, !tbaa !58
  tail call void %231(ptr noundef %232, ptr noundef %234) #23
  %235 = load ptr, ptr %127, align 8, !tbaa !48
  %236 = load ptr, ptr %4, align 8, !tbaa !15
  tail call void %235(ptr noundef %236, ptr noundef nonnull %225) #23
  %237 = icmp eq ptr %226, null
  br i1 %237, label %214, label %224, !llvm.loop !49

238:                                              ; preds = %214, %200
  %239 = getelementptr inbounds %struct._EHash, ptr %208, i64 0, i32 4, i32 2
  %240 = load ptr, ptr %239, align 8, !tbaa !50
  %241 = getelementptr inbounds %struct._EHash, ptr %208, i64 0, i32 5
  %242 = load ptr, ptr %241, align 8, !tbaa !20
  %243 = load ptr, ptr %208, align 8, !tbaa !26
  tail call void %240(ptr noundef %242, ptr noundef %243) #23
  %244 = load ptr, ptr %239, align 8, !tbaa !50
  %245 = load ptr, ptr %241, align 8, !tbaa !20
  tail call void %244(ptr noundef %245, ptr noundef nonnull %208) #23
  %246 = load ptr, ptr %127, align 8, !tbaa !48
  %247 = load ptr, ptr %4, align 8, !tbaa !15
  tail call void %246(ptr noundef %247, ptr noundef nonnull %0) #23
  %248 = icmp eq ptr %3, null
  br i1 %248, label %250, label %249

249:                                              ; preds = %238
  tail call void %3(ptr noundef %5) #23
  br label %250

250:                                              ; preds = %249, %238
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @ccgSubSurf_setAllowEdgeCreation(ptr nocapture noundef %0, i32 noundef %1, float noundef nofpclass(nan inf) %2, ptr noundef readonly %3) local_unnamed_addr #1 {
  %5 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 10
  %6 = load ptr, ptr %5, align 8, !tbaa !61
  %7 = icmp eq ptr %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !48
  %11 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 5
  %12 = load ptr, ptr %11, align 8, !tbaa !15
  tail call void %10(ptr noundef %12, ptr noundef nonnull %6) #23
  br label %13

13:                                               ; preds = %8, %4
  %14 = icmp ne i32 %1, 0
  %15 = zext i1 %14 to i32
  %16 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 8
  store i32 %15, ptr %16, align 8, !tbaa !62
  %17 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 9
  store float %2, ptr %17, align 4, !tbaa !63
  %18 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4
  %19 = load ptr, ptr %18, align 8, !tbaa !36
  %20 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 5
  %21 = load ptr, ptr %20, align 8, !tbaa !15
  %22 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 1
  %23 = load i32, ptr %22, align 4, !tbaa !64
  %24 = tail call ptr %19(ptr noundef %21, i32 noundef %23) #23
  store ptr %24, ptr %5, align 8, !tbaa !61
  %25 = icmp eq ptr %3, null
  %26 = load i32, ptr %22, align 4, !tbaa !64
  %27 = sext i32 %26 to i64
  br i1 %25, label %29, label %28

28:                                               ; preds = %13
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %24, ptr nonnull align 1 %3, i64 %27, i1 false)
  br label %30

29:                                               ; preds = %13
  tail call void @llvm.memset.p0.i64(ptr align 1 %24, i8 0, i64 %27, i1 false)
  br label %30

30:                                               ; preds = %29, %28
  ret i32 0
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: mustprogress nofree nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @ccgSubSurf_getAllowEdgeCreation(ptr nocapture noundef readonly %0, ptr noundef writeonly %1, ptr noundef writeonly %2, ptr noundef writeonly %3) local_unnamed_addr #5 {
  %5 = icmp eq ptr %1, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 8
  %8 = load i32, ptr %7, align 8, !tbaa !62
  store i32 %8, ptr %1, align 4, !tbaa !31
  br label %9

9:                                                ; preds = %6, %4
  %10 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 8
  %11 = load i32, ptr %10, align 8, !tbaa !62
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %26, label %13

13:                                               ; preds = %9
  %14 = icmp eq ptr %2, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 9
  %17 = load float, ptr %16, align 4, !tbaa !63
  store float %17, ptr %2, align 4, !tbaa !65
  br label %18

18:                                               ; preds = %15, %13
  %19 = icmp eq ptr %3, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 10
  %22 = load ptr, ptr %21, align 8, !tbaa !61
  %23 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 1
  %24 = load i32, ptr %23, align 4, !tbaa !64
  %25 = sext i32 %24 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %3, ptr align 1 %22, i64 %25, i1 false)
  br label %26

26:                                               ; preds = %18, %20, %9
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @ccgSubSurf_setSubdivisionLevels(ptr nocapture noundef %0, i32 noundef %1) local_unnamed_addr #1 {
  %3 = icmp slt i32 %1, 1
  br i1 %3, label %161, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %6 = load i32, ptr %5, align 8, !tbaa !32
  %7 = icmp eq i32 %6, %1
  br i1 %7, label %161, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 7
  store i32 0, ptr %9, align 4, !tbaa !66
  store i32 %1, ptr %5, align 8, !tbaa !32
  %10 = load ptr, ptr %0, align 8, !tbaa !27
  %11 = getelementptr inbounds %struct._EHash, ptr %10, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !24
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %42, label %14

14:                                               ; preds = %8
  %15 = sext i32 %12 to i64
  %16 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4, i32 2
  %17 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 5
  br label %21

18:                                               ; preds = %28, %21
  %19 = and i64 %23, 4294967295
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %42, label %21, !llvm.loop !44

21:                                               ; preds = %18, %14
  %22 = phi i64 [ %15, %14 ], [ %23, %18 ]
  %23 = add nsw i64 %22, -1
  %24 = load ptr, ptr %10, align 8, !tbaa !26
  %25 = getelementptr inbounds ptr, ptr %24, i64 %23
  %26 = load ptr, ptr %25, align 8, !tbaa !14
  %27 = icmp eq ptr %26, null
  br i1 %27, label %18, label %28

28:                                               ; preds = %21, %28
  %29 = phi ptr [ %30, %28 ], [ %26, %21 ]
  %30 = load ptr, ptr %29, align 8, !tbaa !46
  %31 = load ptr, ptr %16, align 8, !tbaa !48
  %32 = load ptr, ptr %17, align 8, !tbaa !15
  %33 = getelementptr inbounds %struct.CCGVert, ptr %29, i64 0, i32 6
  %34 = load ptr, ptr %33, align 8, !tbaa !56
  tail call void %31(ptr noundef %32, ptr noundef %34) #23
  %35 = load ptr, ptr %16, align 8, !tbaa !48
  %36 = load ptr, ptr %17, align 8, !tbaa !15
  %37 = getelementptr inbounds %struct.CCGVert, ptr %29, i64 0, i32 7
  %38 = load ptr, ptr %37, align 8, !tbaa !58
  tail call void %35(ptr noundef %36, ptr noundef %38) #23
  %39 = load ptr, ptr %16, align 8, !tbaa !48
  %40 = load ptr, ptr %17, align 8, !tbaa !15
  tail call void %39(ptr noundef %40, ptr noundef nonnull %29) #23
  %41 = icmp eq ptr %30, null
  br i1 %41, label %18, label %28, !llvm.loop !49

42:                                               ; preds = %18, %8
  %43 = getelementptr inbounds %struct._EHash, ptr %10, i64 0, i32 4, i32 2
  %44 = load ptr, ptr %43, align 8, !tbaa !50
  %45 = getelementptr inbounds %struct._EHash, ptr %10, i64 0, i32 5
  %46 = load ptr, ptr %45, align 8, !tbaa !20
  %47 = load ptr, ptr %10, align 8, !tbaa !26
  tail call void %44(ptr noundef %46, ptr noundef %47) #23
  %48 = load ptr, ptr %43, align 8, !tbaa !50
  %49 = load ptr, ptr %45, align 8, !tbaa !20
  tail call void %48(ptr noundef %49, ptr noundef nonnull %10) #23
  %50 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 1
  %51 = load ptr, ptr %50, align 8, !tbaa !28
  %52 = getelementptr inbounds %struct._EHash, ptr %51, i64 0, i32 2
  %53 = load i32, ptr %52, align 4, !tbaa !24
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %79, label %55

55:                                               ; preds = %42
  %56 = sext i32 %53 to i64
  %57 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4, i32 2
  %58 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 5
  br label %62

59:                                               ; preds = %69, %62
  %60 = and i64 %64, 4294967295
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %79, label %62, !llvm.loop !44

62:                                               ; preds = %59, %55
  %63 = phi i64 [ %56, %55 ], [ %64, %59 ]
  %64 = add nsw i64 %63, -1
  %65 = load ptr, ptr %51, align 8, !tbaa !26
  %66 = getelementptr inbounds ptr, ptr %65, i64 %64
  %67 = load ptr, ptr %66, align 8, !tbaa !14
  %68 = icmp eq ptr %67, null
  br i1 %68, label %59, label %69

69:                                               ; preds = %62, %69
  %70 = phi ptr [ %71, %69 ], [ %67, %62 ]
  %71 = load ptr, ptr %70, align 8, !tbaa !46
  %72 = load ptr, ptr %57, align 8, !tbaa !48
  %73 = load ptr, ptr %58, align 8, !tbaa !15
  %74 = getelementptr inbounds %struct.CCGEdge, ptr %70, i64 0, i32 7
  %75 = load ptr, ptr %74, align 8, !tbaa !52
  tail call void %72(ptr noundef %73, ptr noundef %75) #23
  %76 = load ptr, ptr %57, align 8, !tbaa !48
  %77 = load ptr, ptr %58, align 8, !tbaa !15
  tail call void %76(ptr noundef %77, ptr noundef nonnull %70) #23
  %78 = icmp eq ptr %71, null
  br i1 %78, label %59, label %69, !llvm.loop !49

79:                                               ; preds = %59, %42
  %80 = getelementptr inbounds %struct._EHash, ptr %51, i64 0, i32 4, i32 2
  %81 = load ptr, ptr %80, align 8, !tbaa !50
  %82 = getelementptr inbounds %struct._EHash, ptr %51, i64 0, i32 5
  %83 = load ptr, ptr %82, align 8, !tbaa !20
  %84 = load ptr, ptr %51, align 8, !tbaa !26
  tail call void %81(ptr noundef %83, ptr noundef %84) #23
  %85 = load ptr, ptr %80, align 8, !tbaa !50
  %86 = load ptr, ptr %82, align 8, !tbaa !20
  tail call void %85(ptr noundef %86, ptr noundef nonnull %51) #23
  %87 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 2
  %88 = load ptr, ptr %87, align 8, !tbaa !29
  %89 = getelementptr inbounds %struct._EHash, ptr %88, i64 0, i32 2
  %90 = load i32, ptr %89, align 4, !tbaa !24
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %112, label %92

92:                                               ; preds = %79
  %93 = sext i32 %90 to i64
  %94 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4, i32 2
  %95 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 5
  br label %99

96:                                               ; preds = %106, %99
  %97 = and i64 %101, 4294967295
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %112, label %99, !llvm.loop !44

99:                                               ; preds = %96, %92
  %100 = phi i64 [ %93, %92 ], [ %101, %96 ]
  %101 = add nsw i64 %100, -1
  %102 = load ptr, ptr %88, align 8, !tbaa !26
  %103 = getelementptr inbounds ptr, ptr %102, i64 %101
  %104 = load ptr, ptr %103, align 8, !tbaa !14
  %105 = icmp eq ptr %104, null
  br i1 %105, label %96, label %106

106:                                              ; preds = %99, %106
  %107 = phi ptr [ %108, %106 ], [ %104, %99 ]
  %108 = load ptr, ptr %107, align 8, !tbaa !46
  %109 = load ptr, ptr %94, align 8, !tbaa !48
  %110 = load ptr, ptr %95, align 8, !tbaa !15
  tail call void %109(ptr noundef %110, ptr noundef nonnull %107) #23
  %111 = icmp eq ptr %108, null
  br i1 %111, label %96, label %106, !llvm.loop !49

112:                                              ; preds = %96, %79
  %113 = getelementptr inbounds %struct._EHash, ptr %88, i64 0, i32 4, i32 2
  %114 = load ptr, ptr %113, align 8, !tbaa !50
  %115 = getelementptr inbounds %struct._EHash, ptr %88, i64 0, i32 5
  %116 = load ptr, ptr %115, align 8, !tbaa !20
  %117 = load ptr, ptr %88, align 8, !tbaa !26
  tail call void %114(ptr noundef %116, ptr noundef %117) #23
  %118 = load ptr, ptr %113, align 8, !tbaa !50
  %119 = load ptr, ptr %115, align 8, !tbaa !20
  tail call void %118(ptr noundef %119, ptr noundef nonnull %88) #23
  %120 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4
  %121 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 5
  %122 = load ptr, ptr %121, align 8, !tbaa !15
  %123 = load ptr, ptr %120, align 8, !tbaa !5
  %124 = tail call ptr %123(ptr noundef %122, i32 noundef 64) #23
  %125 = getelementptr inbounds %struct._EHash, ptr %124, i64 0, i32 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %125, ptr noundef nonnull align 8 dereferenceable(32) %120, i64 32, i1 false), !tbaa.struct !13
  %126 = getelementptr inbounds %struct._EHash, ptr %124, i64 0, i32 5
  store ptr %122, ptr %126, align 8, !tbaa !20
  %127 = getelementptr inbounds %struct._EHash, ptr %124, i64 0, i32 1
  store i32 0, ptr %127, align 8, !tbaa !22
  %128 = getelementptr inbounds %struct._EHash, ptr %124, i64 0, i32 3
  store i32 0, ptr %128, align 8, !tbaa !23
  %129 = getelementptr inbounds %struct._EHash, ptr %124, i64 0, i32 2
  store i32 1, ptr %129, align 4, !tbaa !24
  %130 = load ptr, ptr %125, align 8, !tbaa !25
  %131 = tail call ptr %130(ptr noundef %122, i32 noundef 8) #23
  store ptr %131, ptr %124, align 8, !tbaa !26
  %132 = load i32, ptr %129, align 4, !tbaa !24
  %133 = sext i32 %132 to i64
  %134 = shl nsw i64 %133, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %131, i8 0, i64 %134, i1 false)
  store ptr %124, ptr %0, align 8, !tbaa !27
  %135 = load ptr, ptr %121, align 8, !tbaa !15
  %136 = load ptr, ptr %120, align 8, !tbaa !5
  %137 = tail call ptr %136(ptr noundef %135, i32 noundef 64) #23
  %138 = getelementptr inbounds %struct._EHash, ptr %137, i64 0, i32 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %138, ptr noundef nonnull align 8 dereferenceable(32) %120, i64 32, i1 false), !tbaa.struct !13
  %139 = getelementptr inbounds %struct._EHash, ptr %137, i64 0, i32 5
  store ptr %135, ptr %139, align 8, !tbaa !20
  %140 = getelementptr inbounds %struct._EHash, ptr %137, i64 0, i32 1
  store i32 0, ptr %140, align 8, !tbaa !22
  %141 = getelementptr inbounds %struct._EHash, ptr %137, i64 0, i32 3
  store i32 0, ptr %141, align 8, !tbaa !23
  %142 = getelementptr inbounds %struct._EHash, ptr %137, i64 0, i32 2
  store i32 1, ptr %142, align 4, !tbaa !24
  %143 = load ptr, ptr %138, align 8, !tbaa !25
  %144 = tail call ptr %143(ptr noundef %135, i32 noundef 8) #23
  store ptr %144, ptr %137, align 8, !tbaa !26
  %145 = load i32, ptr %142, align 4, !tbaa !24
  %146 = sext i32 %145 to i64
  %147 = shl nsw i64 %146, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %144, i8 0, i64 %147, i1 false)
  store ptr %137, ptr %50, align 8, !tbaa !28
  %148 = load ptr, ptr %121, align 8, !tbaa !15
  %149 = load ptr, ptr %120, align 8, !tbaa !5
  %150 = tail call ptr %149(ptr noundef %148, i32 noundef 64) #23
  %151 = getelementptr inbounds %struct._EHash, ptr %150, i64 0, i32 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %151, ptr noundef nonnull align 8 dereferenceable(32) %120, i64 32, i1 false), !tbaa.struct !13
  %152 = getelementptr inbounds %struct._EHash, ptr %150, i64 0, i32 5
  store ptr %148, ptr %152, align 8, !tbaa !20
  %153 = getelementptr inbounds %struct._EHash, ptr %150, i64 0, i32 1
  store i32 0, ptr %153, align 8, !tbaa !22
  %154 = getelementptr inbounds %struct._EHash, ptr %150, i64 0, i32 3
  store i32 0, ptr %154, align 8, !tbaa !23
  %155 = getelementptr inbounds %struct._EHash, ptr %150, i64 0, i32 2
  store i32 1, ptr %155, align 4, !tbaa !24
  %156 = load ptr, ptr %151, align 8, !tbaa !25
  %157 = tail call ptr %156(ptr noundef %148, i32 noundef 8) #23
  store ptr %157, ptr %150, align 8, !tbaa !26
  %158 = load i32, ptr %155, align 4, !tbaa !24
  %159 = sext i32 %158 to i64
  %160 = shl nsw i64 %159, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %157, i8 0, i64 %160, i1 false)
  store ptr %150, ptr %87, align 8, !tbaa !29
  br label %161

161:                                              ; preds = %112, %4, %2
  %162 = phi i32 [ 2, %2 ], [ 0, %4 ], [ 0, %112 ]
  ret i32 %162
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable
define dso_local void @ccgSubSurf_getUseAgeCounts(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, ptr noundef writeonly %2, ptr noundef writeonly %3, ptr noundef writeonly %4) local_unnamed_addr #6 {
  %6 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 18
  %7 = load i32, ptr %6, align 4, !tbaa !67
  store i32 %7, ptr %1, align 4, !tbaa !31
  %8 = icmp eq ptr %2, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 19
  %11 = load i32, ptr %10, align 8, !tbaa !68
  store i32 %11, ptr %2, align 4, !tbaa !31
  br label %12

12:                                               ; preds = %9, %5
  %13 = icmp eq ptr %3, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 20
  %16 = load i32, ptr %15, align 4, !tbaa !69
  store i32 %16, ptr %3, align 4, !tbaa !31
  br label %17

17:                                               ; preds = %14, %12
  %18 = icmp eq ptr %4, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 21
  %21 = load i32, ptr %20, align 8, !tbaa !70
  store i32 %21, ptr %4, align 4, !tbaa !31
  br label %22

22:                                               ; preds = %19, %17
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable
define dso_local i32 @ccgSubSurf_setUseAgeCounts(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #7 {
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %5
  %8 = add nsw i32 %2, 4
  %9 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3
  %10 = load i32, ptr %9, align 8, !tbaa !71
  %11 = icmp sgt i32 %8, %10
  br i1 %11, label %29, label %12

12:                                               ; preds = %7
  %13 = add nsw i32 %3, 4
  %14 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 1
  %15 = load i32, ptr %14, align 4, !tbaa !64
  %16 = icmp sgt i32 %13, %15
  br i1 %16, label %29, label %17

17:                                               ; preds = %12
  %18 = add nsw i32 %4, 4
  %19 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 2
  %20 = load i32, ptr %19, align 8, !tbaa !72
  %21 = icmp sgt i32 %18, %20
  br i1 %21, label %29, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 18
  store i32 1, ptr %23, align 4, !tbaa !67
  %24 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 19
  store i32 %2, ptr %24, align 8, !tbaa !68
  %25 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 20
  store i32 %3, ptr %25, align 4, !tbaa !69
  %26 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 21
  store i32 %4, ptr %26, align 8, !tbaa !70
  br label %29

27:                                               ; preds = %5
  %28 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 18
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %28, i8 0, i64 16, i1 false)
  br label %29

29:                                               ; preds = %22, %27, %7, %12, %17
  %30 = phi i32 [ 2, %17 ], [ 2, %12 ], [ 2, %7 ], [ 0, %27 ], [ 0, %22 ]
  ret i32 %30
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable
define dso_local i32 @ccgSubSurf_setCalcVertexNormals(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %3
  %6 = icmp slt i32 %2, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %5
  %8 = add nuw nsw i32 %2, 12
  %9 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %10 = load i32, ptr %9, align 8, !tbaa !37
  %11 = icmp sgt i32 %8, %10
  br i1 %11, label %17, label %12

12:                                               ; preds = %3, %7
  %13 = phi i32 [ 1, %7 ], [ 0, %3 ]
  %14 = phi i32 [ %2, %7 ], [ 0, %3 ]
  %15 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 13
  store i32 %13, ptr %15, align 8, !tbaa !33
  %16 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 14
  store i32 %14, ptr %16, align 4, !tbaa !34
  br label %17

17:                                               ; preds = %12, %5, %7
  %18 = phi i32 [ 2, %7 ], [ 2, %5 ], [ 0, %12 ]
  ret i32 %18
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: write) uwtable
define dso_local void @ccgSubSurf_setAllocMask(ptr nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 {
  %4 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 15
  store i32 %1, ptr %4, align 8, !tbaa !35
  %5 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 16
  store i32 %2, ptr %5, align 4, !tbaa !73
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: write) uwtable
define dso_local void @ccgSubSurf_setNumLayers(ptr nocapture noundef writeonly %0, i32 noundef %1) local_unnamed_addr #8 {
  %3 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 3
  store i32 %1, ptr %3, align 4, !tbaa !74
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @ccgSubSurf_initFullSync(ptr nocapture noundef %0) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 22
  %3 = load i32, ptr %2, align 4, !tbaa !42
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %67

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 17
  %7 = load i32, ptr %6, align 8, !tbaa !40
  %8 = add nsw i32 %7, 1
  store i32 %8, ptr %6, align 8, !tbaa !40
  %9 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 23
  %10 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 1
  %11 = load <2 x ptr>, ptr %0, align 8, !tbaa !14
  store <2 x ptr> %11, ptr %9, align 8, !tbaa !14
  %12 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !29
  %14 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 25
  store ptr %13, ptr %14, align 8, !tbaa !43
  %15 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4
  %16 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 5
  %17 = load ptr, ptr %16, align 8, !tbaa !15
  %18 = load ptr, ptr %15, align 8, !tbaa !5
  %19 = tail call ptr %18(ptr noundef %17, i32 noundef 64) #23
  %20 = getelementptr inbounds %struct._EHash, ptr %19, i64 0, i32 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %20, ptr noundef nonnull align 8 dereferenceable(32) %15, i64 32, i1 false), !tbaa.struct !13
  %21 = getelementptr inbounds %struct._EHash, ptr %19, i64 0, i32 5
  store ptr %17, ptr %21, align 8, !tbaa !20
  %22 = getelementptr inbounds %struct._EHash, ptr %19, i64 0, i32 1
  store i32 0, ptr %22, align 8, !tbaa !22
  %23 = getelementptr inbounds %struct._EHash, ptr %19, i64 0, i32 3
  store i32 0, ptr %23, align 8, !tbaa !23
  %24 = getelementptr inbounds %struct._EHash, ptr %19, i64 0, i32 2
  store i32 1, ptr %24, align 4, !tbaa !24
  %25 = load ptr, ptr %20, align 8, !tbaa !25
  %26 = tail call ptr %25(ptr noundef %17, i32 noundef 8) #23
  store ptr %26, ptr %19, align 8, !tbaa !26
  %27 = load i32, ptr %24, align 4, !tbaa !24
  %28 = sext i32 %27 to i64
  %29 = shl nsw i64 %28, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %26, i8 0, i64 %29, i1 false)
  store ptr %19, ptr %0, align 8, !tbaa !27
  %30 = load ptr, ptr %16, align 8, !tbaa !15
  %31 = load ptr, ptr %15, align 8, !tbaa !5
  %32 = tail call ptr %31(ptr noundef %30, i32 noundef 64) #23
  %33 = getelementptr inbounds %struct._EHash, ptr %32, i64 0, i32 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %33, ptr noundef nonnull align 8 dereferenceable(32) %15, i64 32, i1 false), !tbaa.struct !13
  %34 = getelementptr inbounds %struct._EHash, ptr %32, i64 0, i32 5
  store ptr %30, ptr %34, align 8, !tbaa !20
  %35 = getelementptr inbounds %struct._EHash, ptr %32, i64 0, i32 1
  store i32 0, ptr %35, align 8, !tbaa !22
  %36 = getelementptr inbounds %struct._EHash, ptr %32, i64 0, i32 3
  store i32 0, ptr %36, align 8, !tbaa !23
  %37 = getelementptr inbounds %struct._EHash, ptr %32, i64 0, i32 2
  store i32 1, ptr %37, align 4, !tbaa !24
  %38 = load ptr, ptr %33, align 8, !tbaa !25
  %39 = tail call ptr %38(ptr noundef %30, i32 noundef 8) #23
  store ptr %39, ptr %32, align 8, !tbaa !26
  %40 = load i32, ptr %37, align 4, !tbaa !24
  %41 = sext i32 %40 to i64
  %42 = shl nsw i64 %41, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %39, i8 0, i64 %42, i1 false)
  store ptr %32, ptr %10, align 8, !tbaa !28
  %43 = load ptr, ptr %16, align 8, !tbaa !15
  %44 = load ptr, ptr %15, align 8, !tbaa !5
  %45 = tail call ptr %44(ptr noundef %43, i32 noundef 64) #23
  %46 = getelementptr inbounds %struct._EHash, ptr %45, i64 0, i32 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %46, ptr noundef nonnull align 8 dereferenceable(32) %15, i64 32, i1 false), !tbaa.struct !13
  %47 = getelementptr inbounds %struct._EHash, ptr %45, i64 0, i32 5
  store ptr %43, ptr %47, align 8, !tbaa !20
  %48 = getelementptr inbounds %struct._EHash, ptr %45, i64 0, i32 1
  store i32 0, ptr %48, align 8, !tbaa !22
  %49 = getelementptr inbounds %struct._EHash, ptr %45, i64 0, i32 3
  store i32 0, ptr %49, align 8, !tbaa !23
  %50 = getelementptr inbounds %struct._EHash, ptr %45, i64 0, i32 2
  store i32 1, ptr %50, align 4, !tbaa !24
  %51 = load ptr, ptr %46, align 8, !tbaa !25
  %52 = tail call ptr %51(ptr noundef %43, i32 noundef 8) #23
  store ptr %52, ptr %45, align 8, !tbaa !26
  %53 = load i32, ptr %50, align 4, !tbaa !24
  %54 = sext i32 %53 to i64
  %55 = shl nsw i64 %54, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %52, i8 0, i64 %55, i1 false)
  store ptr %45, ptr %12, align 8, !tbaa !29
  %56 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 7
  store i32 0, ptr %56, align 4, !tbaa !66
  %57 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 26
  store i32 12, ptr %57, align 8, !tbaa !75
  %58 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !14
  %59 = tail call ptr %58(i64 noundef 96, ptr noundef nonnull @.str) #23
  %60 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 27
  store ptr %59, ptr %60, align 8, !tbaa !59
  %61 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !14
  %62 = load i32, ptr %57, align 8, !tbaa !75
  %63 = sext i32 %62 to i64
  %64 = shl nsw i64 %63, 3
  %65 = tail call ptr %61(i64 noundef %64, ptr noundef nonnull @.str.1) #23
  %66 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 28
  store ptr %65, ptr %66, align 8, !tbaa !60
  store i32 1, ptr %2, align 4, !tbaa !42
  br label %67

67:                                               ; preds = %1, %5
  %68 = phi i32 [ 0, %5 ], [ 1, %1 ]
  ret i32 %68
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable
define dso_local i32 @ccgSubSurf_initPartialSync(ptr nocapture noundef %0) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 22
  %3 = load i32, ptr %2, align 4, !tbaa !42
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 17
  %7 = load i32, ptr %6, align 8, !tbaa !40
  %8 = add nsw i32 %7, 1
  store i32 %8, ptr %6, align 8, !tbaa !40
  store i32 4, ptr %2, align 4, !tbaa !42
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i32 [ 0, %5 ], [ 1, %1 ]
  ret i32 %10
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @ccgSubSurf_syncVertDel(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 22
  %4 = load i32, ptr %3, align 4, !tbaa !42
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %47

6:                                                ; preds = %2
  %7 = load ptr, ptr %0, align 8, !tbaa !27
  %8 = load ptr, ptr %7, align 8, !tbaa !26
  %9 = getelementptr i8, ptr %7, i64 12
  %10 = load i32, ptr %9, align 4, !tbaa !24
  %11 = ptrtoint ptr %1 to i64
  %12 = zext i32 %10 to i64
  %13 = urem i64 %11, %12
  %14 = shl nuw i64 %13, 32
  %15 = ashr exact i64 %14, 32
  %16 = getelementptr inbounds ptr, ptr %8, i64 %15
  br label %17

17:                                               ; preds = %21, %6
  %18 = phi ptr [ %16, %6 ], [ %19, %21 ]
  %19 = load ptr, ptr %18, align 8, !tbaa !14
  %20 = icmp eq ptr %19, null
  br i1 %20, label %47, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct._EHEntry, ptr %19, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !76
  %24 = icmp eq ptr %23, %1
  br i1 %24, label %25, label %17, !llvm.loop !77

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.CCGVert, ptr %19, i64 0, i32 3
  %27 = load i16, ptr %26, align 2, !tbaa !78
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %29, label %47

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.CCGVert, ptr %19, i64 0, i32 2
  %31 = load i16, ptr %30, align 8, !tbaa !79
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %33, label %47

33:                                               ; preds = %29
  %34 = load ptr, ptr %19, align 8, !tbaa !80
  store ptr %34, ptr %18, align 8, !tbaa !14
  %35 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !48
  %37 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 5
  %38 = load ptr, ptr %37, align 8, !tbaa !15
  %39 = getelementptr inbounds %struct.CCGVert, ptr %19, i64 0, i32 6
  %40 = load ptr, ptr %39, align 8, !tbaa !56
  tail call void %36(ptr noundef %38, ptr noundef %40) #23
  %41 = load ptr, ptr %35, align 8, !tbaa !48
  %42 = load ptr, ptr %37, align 8, !tbaa !15
  %43 = getelementptr inbounds %struct.CCGVert, ptr %19, i64 0, i32 7
  %44 = load ptr, ptr %43, align 8, !tbaa !58
  tail call void %41(ptr noundef %42, ptr noundef %44) #23
  %45 = load ptr, ptr %35, align 8, !tbaa !48
  %46 = load ptr, ptr %37, align 8, !tbaa !15
  tail call void %45(ptr noundef %46, ptr noundef nonnull %19) #23
  br label %47

47:                                               ; preds = %17, %25, %29, %33, %2
  %48 = phi i32 [ 1, %2 ], [ 0, %33 ], [ 2, %29 ], [ 2, %25 ], [ 2, %17 ]
  ret i32 %48
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @ccgSubSurf_syncEdgeDel(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 22
  %4 = load i32, ptr %3, align 4, !tbaa !42
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %97

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !28
  %9 = load ptr, ptr %8, align 8, !tbaa !26
  %10 = getelementptr i8, ptr %8, i64 12
  %11 = load i32, ptr %10, align 4, !tbaa !24
  %12 = ptrtoint ptr %1 to i64
  %13 = zext i32 %11 to i64
  %14 = urem i64 %12, %13
  %15 = shl nuw i64 %14, 32
  %16 = ashr exact i64 %15, 32
  %17 = getelementptr inbounds ptr, ptr %9, i64 %16
  br label %18

18:                                               ; preds = %22, %6
  %19 = phi ptr [ %17, %6 ], [ %20, %22 ]
  %20 = load ptr, ptr %19, align 8, !tbaa !14
  %21 = icmp eq ptr %20, null
  br i1 %21, label %97, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct._EHEntry, ptr %20, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !76
  %25 = icmp eq ptr %24, %1
  br i1 %25, label %26, label %18, !llvm.loop !77

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.CCGEdge, ptr %20, i64 0, i32 2
  %28 = load i16, ptr %27, align 8, !tbaa !81
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %30, label %97

30:                                               ; preds = %26
  %31 = load ptr, ptr %20, align 8, !tbaa !82
  store ptr %31, ptr %19, align 8, !tbaa !14
  %32 = getelementptr inbounds %struct.CCGEdge, ptr %20, i64 0, i32 5
  %33 = load ptr, ptr %32, align 8, !tbaa !83
  %34 = getelementptr inbounds %struct.CCGVert, ptr %33, i64 0, i32 2
  %35 = load i16, ptr %34, align 8, !tbaa !79
  %36 = icmp sgt i16 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %30
  %38 = zext i16 %35 to i64
  %39 = getelementptr inbounds %struct.CCGVert, ptr %33, i64 0, i32 6
  %40 = load ptr, ptr %39, align 8, !tbaa !56
  br label %44

41:                                               ; preds = %44
  %42 = add nuw nsw i64 %45, 1
  %43 = icmp eq i64 %42, %38
  br i1 %43, label %55, label %44, !llvm.loop !84

44:                                               ; preds = %41, %37
  %45 = phi i64 [ 0, %37 ], [ %42, %41 ]
  %46 = getelementptr inbounds ptr, ptr %40, i64 %45
  %47 = load ptr, ptr %46, align 8, !tbaa !14
  %48 = icmp eq ptr %47, %20
  br i1 %48, label %49, label %41

49:                                               ; preds = %44
  %50 = getelementptr inbounds ptr, ptr %40, i64 %45
  %51 = add i16 %35, -1
  store i16 %51, ptr %34, align 8, !tbaa !79
  %52 = sext i16 %51 to i64
  %53 = getelementptr inbounds ptr, ptr %40, i64 %52
  %54 = load ptr, ptr %53, align 8, !tbaa !14
  store ptr %54, ptr %50, align 8, !tbaa !14
  br label %55

55:                                               ; preds = %41, %49, %30
  %56 = getelementptr inbounds %struct.CCGEdge, ptr %20, i64 0, i32 6
  %57 = load ptr, ptr %56, align 8, !tbaa !85
  %58 = getelementptr inbounds %struct.CCGVert, ptr %57, i64 0, i32 2
  %59 = load i16, ptr %58, align 8, !tbaa !79
  %60 = icmp sgt i16 %59, 0
  br i1 %60, label %61, label %80

61:                                               ; preds = %55
  %62 = zext i16 %59 to i64
  %63 = getelementptr inbounds %struct.CCGVert, ptr %57, i64 0, i32 6
  %64 = load ptr, ptr %63, align 8, !tbaa !56
  br label %68

65:                                               ; preds = %68
  %66 = add nuw nsw i64 %69, 1
  %67 = icmp eq i64 %66, %62
  br i1 %67, label %80, label %68, !llvm.loop !84

68:                                               ; preds = %65, %61
  %69 = phi i64 [ 0, %61 ], [ %66, %65 ]
  %70 = getelementptr inbounds ptr, ptr %64, i64 %69
  %71 = load ptr, ptr %70, align 8, !tbaa !14
  %72 = icmp eq ptr %71, %20
  br i1 %72, label %73, label %65

73:                                               ; preds = %68
  %74 = getelementptr inbounds ptr, ptr %64, i64 %69
  %75 = add i16 %59, -1
  store i16 %75, ptr %58, align 8, !tbaa !79
  %76 = sext i16 %75 to i64
  %77 = getelementptr inbounds ptr, ptr %64, i64 %76
  %78 = load ptr, ptr %77, align 8, !tbaa !14
  store ptr %78, ptr %74, align 8, !tbaa !14
  %79 = load ptr, ptr %56, align 8, !tbaa !85
  br label %80

80:                                               ; preds = %65, %55, %73
  %81 = phi ptr [ %57, %55 ], [ %79, %73 ], [ %57, %65 ]
  %82 = load ptr, ptr %32, align 8, !tbaa !83
  %83 = getelementptr inbounds %struct.CCGVert, ptr %82, i64 0, i32 4
  %84 = load i16, ptr %83, align 4, !tbaa !86
  %85 = or i16 %84, 1
  store i16 %85, ptr %83, align 4, !tbaa !86
  %86 = getelementptr inbounds %struct.CCGVert, ptr %81, i64 0, i32 4
  %87 = load i16, ptr %86, align 4, !tbaa !86
  %88 = or i16 %87, 1
  store i16 %88, ptr %86, align 4, !tbaa !86
  %89 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4, i32 2
  %90 = load ptr, ptr %89, align 8, !tbaa !48
  %91 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 5
  %92 = load ptr, ptr %91, align 8, !tbaa !15
  %93 = getelementptr inbounds %struct.CCGEdge, ptr %20, i64 0, i32 7
  %94 = load ptr, ptr %93, align 8, !tbaa !52
  tail call void %90(ptr noundef %92, ptr noundef %94) #23
  %95 = load ptr, ptr %89, align 8, !tbaa !48
  %96 = load ptr, ptr %91, align 8, !tbaa !15
  tail call void %95(ptr noundef %96, ptr noundef nonnull %20) #23
  br label %97

97:                                               ; preds = %18, %26, %80, %2
  %98 = phi i32 [ 1, %2 ], [ 0, %80 ], [ 2, %26 ], [ 2, %18 ]
  ret i32 %98
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @ccgSubSurf_syncFaceDel(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 22
  %4 = load i32, ptr %3, align 4, !tbaa !42
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %96

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !29
  %9 = load ptr, ptr %8, align 8, !tbaa !26
  %10 = getelementptr i8, ptr %8, i64 12
  %11 = load i32, ptr %10, align 4, !tbaa !24
  %12 = ptrtoint ptr %1 to i64
  %13 = zext i32 %11 to i64
  %14 = urem i64 %12, %13
  %15 = shl nuw i64 %14, 32
  %16 = ashr exact i64 %15, 32
  %17 = getelementptr inbounds ptr, ptr %9, i64 %16
  br label %18

18:                                               ; preds = %22, %6
  %19 = phi ptr [ %17, %6 ], [ %20, %22 ]
  %20 = load ptr, ptr %19, align 8, !tbaa !14
  %21 = icmp eq ptr %20, null
  br i1 %21, label %96, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct._EHEntry, ptr %20, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !76
  %25 = icmp eq ptr %24, %1
  br i1 %25, label %26, label %18, !llvm.loop !77

26:                                               ; preds = %22
  %27 = load ptr, ptr %20, align 8, !tbaa !87
  store ptr %27, ptr %19, align 8, !tbaa !14
  %28 = getelementptr inbounds %struct.CCGFace, ptr %20, i64 0, i32 2
  %29 = load i16, ptr %28, align 8, !tbaa !89
  %30 = icmp sgt i16 %29, 0
  br i1 %30, label %31, label %91

31:                                               ; preds = %26
  %32 = zext i16 %29 to i64
  %33 = getelementptr inbounds %struct.CCGFace, ptr %20, i64 1
  %34 = getelementptr inbounds ptr, ptr %33, i64 %32
  br label %35

35:                                               ; preds = %84, %31
  %36 = phi i64 [ 0, %31 ], [ %89, %84 ]
  %37 = getelementptr inbounds ptr, ptr %33, i64 %36
  %38 = load ptr, ptr %37, align 8, !tbaa !14
  %39 = getelementptr inbounds %struct.CCGVert, ptr %38, i64 0, i32 3
  %40 = load i16, ptr %39, align 2, !tbaa !78
  %41 = icmp sgt i16 %40, 0
  br i1 %41, label %42, label %60

42:                                               ; preds = %35
  %43 = zext i16 %40 to i64
  %44 = getelementptr inbounds %struct.CCGVert, ptr %38, i64 0, i32 7
  %45 = load ptr, ptr %44, align 8, !tbaa !58
  br label %49

46:                                               ; preds = %49
  %47 = add nuw nsw i64 %50, 1
  %48 = icmp eq i64 %47, %43
  br i1 %48, label %60, label %49, !llvm.loop !90

49:                                               ; preds = %46, %42
  %50 = phi i64 [ 0, %42 ], [ %47, %46 ]
  %51 = getelementptr inbounds ptr, ptr %45, i64 %50
  %52 = load ptr, ptr %51, align 8, !tbaa !14
  %53 = icmp eq ptr %52, %20
  br i1 %53, label %54, label %46

54:                                               ; preds = %49
  %55 = getelementptr inbounds ptr, ptr %45, i64 %50
  %56 = add i16 %40, -1
  store i16 %56, ptr %39, align 2, !tbaa !78
  %57 = sext i16 %56 to i64
  %58 = getelementptr inbounds ptr, ptr %45, i64 %57
  %59 = load ptr, ptr %58, align 8, !tbaa !14
  store ptr %59, ptr %55, align 8, !tbaa !14
  br label %60

60:                                               ; preds = %46, %54, %35
  %61 = getelementptr inbounds ptr, ptr %34, i64 %36
  %62 = load ptr, ptr %61, align 8, !tbaa !14
  %63 = getelementptr inbounds %struct.CCGEdge, ptr %62, i64 0, i32 2
  %64 = load i16, ptr %63, align 8, !tbaa !81
  %65 = icmp sgt i16 %64, 0
  br i1 %65, label %66, label %84

66:                                               ; preds = %60
  %67 = zext i16 %64 to i64
  %68 = getelementptr inbounds %struct.CCGEdge, ptr %62, i64 0, i32 7
  %69 = load ptr, ptr %68, align 8, !tbaa !52
  br label %73

70:                                               ; preds = %73
  %71 = add nuw nsw i64 %74, 1
  %72 = icmp eq i64 %71, %67
  br i1 %72, label %84, label %73, !llvm.loop !91

73:                                               ; preds = %70, %66
  %74 = phi i64 [ 0, %66 ], [ %71, %70 ]
  %75 = getelementptr inbounds ptr, ptr %69, i64 %74
  %76 = load ptr, ptr %75, align 8, !tbaa !14
  %77 = icmp eq ptr %76, %20
  br i1 %77, label %78, label %70

78:                                               ; preds = %73
  %79 = getelementptr inbounds ptr, ptr %69, i64 %74
  %80 = add i16 %64, -1
  store i16 %80, ptr %63, align 8, !tbaa !81
  %81 = sext i16 %80 to i64
  %82 = getelementptr inbounds ptr, ptr %69, i64 %81
  %83 = load ptr, ptr %82, align 8, !tbaa !14
  store ptr %83, ptr %79, align 8, !tbaa !14
  br label %84

84:                                               ; preds = %70, %78, %60
  %85 = load ptr, ptr %37, align 8, !tbaa !14
  %86 = getelementptr inbounds %struct.CCGVert, ptr %85, i64 0, i32 4
  %87 = load i16, ptr %86, align 4, !tbaa !86
  %88 = or i16 %87, 1
  store i16 %88, ptr %86, align 4, !tbaa !86
  %89 = add nuw nsw i64 %36, 1
  %90 = icmp eq i64 %89, %32
  br i1 %90, label %91, label %35, !llvm.loop !92

91:                                               ; preds = %84, %26
  %92 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4, i32 2
  %93 = load ptr, ptr %92, align 8, !tbaa !48
  %94 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 5
  %95 = load ptr, ptr %94, align 8, !tbaa !15
  tail call void %93(ptr noundef %95, ptr noundef nonnull %20) #23
  br label %96

96:                                               ; preds = %18, %91, %2
  %97 = phi i32 [ 1, %2 ], [ 0, %91 ], [ 2, %18 ]
  ret i32 %97
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @ccgSubSurf_syncVert(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3, ptr noundef writeonly %4) local_unnamed_addr #1 {
  %6 = ptrtoint ptr %2 to i64
  %7 = icmp eq i32 %3, 0
  %8 = select i1 %7, i16 0, i16 4
  %9 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 22
  %10 = load i32, ptr %9, align 4, !tbaa !42
  switch i32 %10, label %593 [
    i32 4, label %11
    i32 1, label %359
  ]

11:                                               ; preds = %5
  %12 = load ptr, ptr %0, align 8, !tbaa !27
  %13 = load ptr, ptr %12, align 8, !tbaa !26
  %14 = getelementptr i8, ptr %12, i64 12
  %15 = load i32, ptr %14, align 4, !tbaa !24
  %16 = ptrtoint ptr %1 to i64
  %17 = zext i32 %15 to i64
  %18 = urem i64 %16, %17
  %19 = shl nuw i64 %18, 32
  %20 = ashr exact i64 %19, 32
  %21 = getelementptr inbounds ptr, ptr %13, i64 %20
  br label %22

22:                                               ; preds = %26, %11
  %23 = phi ptr [ %21, %11 ], [ %24, %26 ]
  %24 = load ptr, ptr %23, align 8, !tbaa !14
  %25 = icmp eq ptr %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct._EHEntry, ptr %24, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !76
  %29 = icmp eq ptr %28, %1
  br i1 %29, label %142, label %22, !llvm.loop !77

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %32 = load i32, ptr %31, align 8, !tbaa !32
  %33 = add nsw i32 %32, 1
  %34 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4
  %35 = load ptr, ptr %34, align 8, !tbaa !36
  %36 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 5
  %37 = load ptr, ptr %36, align 8, !tbaa !15
  %38 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3
  %39 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %40 = load i32, ptr %39, align 8, !tbaa !37
  %41 = mul nsw i32 %40, %33
  %42 = add i32 %41, 40
  %43 = load i32, ptr %38, align 8, !tbaa !71
  %44 = add i32 %42, %43
  %45 = tail call ptr %35(ptr noundef %37, i32 noundef %44) #23
  %46 = ptrtoint ptr %45 to i64
  %47 = getelementptr inbounds %struct.CCGVert, ptr %45, i64 0, i32 1
  store ptr %1, ptr %47, align 8, !tbaa !93
  %48 = getelementptr inbounds %struct.CCGVert, ptr %45, i64 0, i32 6
  %49 = getelementptr inbounds %struct.CCGVert, ptr %45, i64 0, i32 3
  store i16 0, ptr %49, align 2, !tbaa !78
  %50 = getelementptr inbounds %struct.CCGVert, ptr %45, i64 0, i32 2
  store i16 0, ptr %50, align 8, !tbaa !79
  %51 = getelementptr inbounds %struct.CCGVert, ptr %45, i64 0, i32 4
  store i16 0, ptr %51, align 4, !tbaa !86
  %52 = getelementptr %struct.CCGVert, ptr %45, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %48, i8 0, i64 16, i1 false)
  %53 = load i32, ptr %39, align 8, !tbaa !37
  %54 = load i32, ptr %31, align 8, !tbaa !32
  %55 = add nsw i32 %54, 1
  %56 = mul nsw i32 %55, %53
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, ptr %52, i64 %57
  %59 = load i32, ptr %38, align 8, !tbaa !71
  %60 = sext i32 %59 to i64
  tail call void @llvm.memset.p0.i64(ptr nonnull align 1 %58, i8 0, i64 %60, i1 false)
  %61 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 18
  %62 = load i32, ptr %61, align 4, !tbaa !67
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %71, label %64

64:                                               ; preds = %30
  %65 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 17
  %66 = load i32, ptr %65, align 8, !tbaa !40
  %67 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 19
  %68 = load i32, ptr %67, align 8, !tbaa !68
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, ptr %58, i64 %69
  store i32 %66, ptr %70, align 4, !tbaa !31
  br label %71

71:                                               ; preds = %30, %64
  %72 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 3
  %73 = load i32, ptr %72, align 4, !tbaa !74
  %74 = icmp sgt i32 %73, 0
  br i1 %74, label %75, label %139

75:                                               ; preds = %71
  %76 = zext i32 %73 to i64
  %77 = icmp ult i32 %73, 32
  br i1 %77, label %102, label %78

78:                                               ; preds = %75
  %79 = add i64 %46, 40
  %80 = sub i64 %79, %6
  %81 = icmp ult i64 %80, 128
  br i1 %81, label %102, label %82

82:                                               ; preds = %78
  %83 = and i64 %76, 4294967264
  br label %84

84:                                               ; preds = %84, %82
  %85 = phi i64 [ 0, %82 ], [ %98, %84 ]
  %86 = getelementptr inbounds float, ptr %2, i64 %85
  %87 = load <8 x float>, ptr %86, align 4, !tbaa !65
  %88 = getelementptr inbounds float, ptr %86, i64 8
  %89 = load <8 x float>, ptr %88, align 4, !tbaa !65
  %90 = getelementptr inbounds float, ptr %86, i64 16
  %91 = load <8 x float>, ptr %90, align 4, !tbaa !65
  %92 = getelementptr inbounds float, ptr %86, i64 24
  %93 = load <8 x float>, ptr %92, align 4, !tbaa !65
  %94 = getelementptr inbounds float, ptr %52, i64 %85
  store <8 x float> %87, ptr %94, align 4, !tbaa !65
  %95 = getelementptr inbounds float, ptr %94, i64 8
  store <8 x float> %89, ptr %95, align 4, !tbaa !65
  %96 = getelementptr inbounds float, ptr %94, i64 16
  store <8 x float> %91, ptr %96, align 4, !tbaa !65
  %97 = getelementptr inbounds float, ptr %94, i64 24
  store <8 x float> %93, ptr %97, align 4, !tbaa !65
  %98 = add nuw i64 %85, 32
  %99 = icmp eq i64 %98, %83
  br i1 %99, label %100, label %84, !llvm.loop !94

100:                                              ; preds = %84
  %101 = icmp eq i64 %83, %76
  br i1 %101, label %139, label %102

102:                                              ; preds = %78, %75, %100
  %103 = phi i64 [ 0, %78 ], [ 0, %75 ], [ %83, %100 ]
  %104 = xor i64 %103, -1
  %105 = add nsw i64 %104, %76
  %106 = and i64 %76, 3
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %117, label %108

108:                                              ; preds = %102, %108
  %109 = phi i64 [ %114, %108 ], [ %103, %102 ]
  %110 = phi i64 [ %115, %108 ], [ 0, %102 ]
  %111 = getelementptr inbounds float, ptr %2, i64 %109
  %112 = load float, ptr %111, align 4, !tbaa !65
  %113 = getelementptr inbounds float, ptr %52, i64 %109
  store float %112, ptr %113, align 4, !tbaa !65
  %114 = add nuw nsw i64 %109, 1
  %115 = add i64 %110, 1
  %116 = icmp eq i64 %115, %106
  br i1 %116, label %117, label %108, !llvm.loop !97

117:                                              ; preds = %108, %102
  %118 = phi i64 [ %103, %102 ], [ %114, %108 ]
  %119 = icmp ult i64 %105, 3
  br i1 %119, label %139, label %120

120:                                              ; preds = %117, %120
  %121 = phi i64 [ %137, %120 ], [ %118, %117 ]
  %122 = getelementptr inbounds float, ptr %2, i64 %121
  %123 = load float, ptr %122, align 4, !tbaa !65
  %124 = getelementptr inbounds float, ptr %52, i64 %121
  store float %123, ptr %124, align 4, !tbaa !65
  %125 = add nuw nsw i64 %121, 1
  %126 = getelementptr inbounds float, ptr %2, i64 %125
  %127 = load float, ptr %126, align 4, !tbaa !65
  %128 = getelementptr inbounds float, ptr %52, i64 %125
  store float %127, ptr %128, align 4, !tbaa !65
  %129 = add nuw nsw i64 %121, 2
  %130 = getelementptr inbounds float, ptr %2, i64 %129
  %131 = load float, ptr %130, align 4, !tbaa !65
  %132 = getelementptr inbounds float, ptr %52, i64 %129
  store float %131, ptr %132, align 4, !tbaa !65
  %133 = add nuw nsw i64 %121, 3
  %134 = getelementptr inbounds float, ptr %2, i64 %133
  %135 = load float, ptr %134, align 4, !tbaa !65
  %136 = getelementptr inbounds float, ptr %52, i64 %133
  store float %135, ptr %136, align 4, !tbaa !65
  %137 = add nuw nsw i64 %121, 4
  %138 = icmp eq i64 %137, %76
  br i1 %138, label %139, label %120, !llvm.loop !99

139:                                              ; preds = %117, %120, %100, %71
  %140 = load ptr, ptr %0, align 8, !tbaa !27
  tail call fastcc void @_ehash_insert(ptr noundef %140, ptr noundef nonnull %45)
  %141 = or i16 %8, 1
  store i16 %141, ptr %51, align 4, !tbaa !86
  br label %589

142:                                              ; preds = %26
  %143 = ptrtoint ptr %24 to i64
  %144 = getelementptr %struct.CCGVert, ptr %24, i64 1
  %145 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 3
  %146 = load i32, ptr %145, align 4, !tbaa !74
  %147 = icmp sgt i32 %146, 0
  br i1 %147, label %148, label %160

148:                                              ; preds = %142
  %149 = zext i32 %146 to i64
  br label %153

150:                                              ; preds = %153
  %151 = add nuw nsw i64 %154, 1
  %152 = icmp eq i64 %151, %149
  br i1 %152, label %160, label %153, !llvm.loop !100

153:                                              ; preds = %150, %148
  %154 = phi i64 [ 0, %148 ], [ %151, %150 ]
  %155 = getelementptr inbounds float, ptr %2, i64 %154
  %156 = load float, ptr %155, align 4, !tbaa !65
  %157 = getelementptr inbounds float, ptr %144, i64 %154
  %158 = load float, ptr %157, align 4, !tbaa !65
  %159 = fcmp fast une float %156, %158
  br i1 %159, label %165, label %150

160:                                              ; preds = %150, %142
  %161 = getelementptr inbounds %struct.CCGVert, ptr %24, i64 0, i32 4
  %162 = load i16, ptr %161, align 4, !tbaa !86
  %163 = and i16 %162, 4
  %164 = icmp eq i16 %163, %8
  br i1 %164, label %589, label %165

165:                                              ; preds = %153, %160
  br i1 %147, label %166, label %230

166:                                              ; preds = %165
  %167 = zext i32 %146 to i64
  %168 = icmp ult i32 %146, 32
  br i1 %168, label %193, label %169

169:                                              ; preds = %166
  %170 = add i64 %143, 40
  %171 = sub i64 %170, %6
  %172 = icmp ult i64 %171, 128
  br i1 %172, label %193, label %173

173:                                              ; preds = %169
  %174 = and i64 %167, 4294967264
  br label %175

175:                                              ; preds = %175, %173
  %176 = phi i64 [ 0, %173 ], [ %189, %175 ]
  %177 = getelementptr inbounds float, ptr %2, i64 %176
  %178 = load <8 x float>, ptr %177, align 4, !tbaa !65
  %179 = getelementptr inbounds float, ptr %177, i64 8
  %180 = load <8 x float>, ptr %179, align 4, !tbaa !65
  %181 = getelementptr inbounds float, ptr %177, i64 16
  %182 = load <8 x float>, ptr %181, align 4, !tbaa !65
  %183 = getelementptr inbounds float, ptr %177, i64 24
  %184 = load <8 x float>, ptr %183, align 4, !tbaa !65
  %185 = getelementptr inbounds float, ptr %144, i64 %176
  store <8 x float> %178, ptr %185, align 4, !tbaa !65
  %186 = getelementptr inbounds float, ptr %185, i64 8
  store <8 x float> %180, ptr %186, align 4, !tbaa !65
  %187 = getelementptr inbounds float, ptr %185, i64 16
  store <8 x float> %182, ptr %187, align 4, !tbaa !65
  %188 = getelementptr inbounds float, ptr %185, i64 24
  store <8 x float> %184, ptr %188, align 4, !tbaa !65
  %189 = add nuw i64 %176, 32
  %190 = icmp eq i64 %189, %174
  br i1 %190, label %191, label %175, !llvm.loop !101

191:                                              ; preds = %175
  %192 = icmp eq i64 %174, %167
  br i1 %192, label %230, label %193

193:                                              ; preds = %169, %166, %191
  %194 = phi i64 [ 0, %169 ], [ 0, %166 ], [ %174, %191 ]
  %195 = xor i64 %194, -1
  %196 = add nsw i64 %195, %167
  %197 = and i64 %167, 3
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %208, label %199

199:                                              ; preds = %193, %199
  %200 = phi i64 [ %205, %199 ], [ %194, %193 ]
  %201 = phi i64 [ %206, %199 ], [ 0, %193 ]
  %202 = getelementptr inbounds float, ptr %2, i64 %200
  %203 = load float, ptr %202, align 4, !tbaa !65
  %204 = getelementptr inbounds float, ptr %144, i64 %200
  store float %203, ptr %204, align 4, !tbaa !65
  %205 = add nuw nsw i64 %200, 1
  %206 = add i64 %201, 1
  %207 = icmp eq i64 %206, %197
  br i1 %207, label %208, label %199, !llvm.loop !102

208:                                              ; preds = %199, %193
  %209 = phi i64 [ %194, %193 ], [ %205, %199 ]
  %210 = icmp ult i64 %196, 3
  br i1 %210, label %230, label %211

211:                                              ; preds = %208, %211
  %212 = phi i64 [ %228, %211 ], [ %209, %208 ]
  %213 = getelementptr inbounds float, ptr %2, i64 %212
  %214 = load float, ptr %213, align 4, !tbaa !65
  %215 = getelementptr inbounds float, ptr %144, i64 %212
  store float %214, ptr %215, align 4, !tbaa !65
  %216 = add nuw nsw i64 %212, 1
  %217 = getelementptr inbounds float, ptr %2, i64 %216
  %218 = load float, ptr %217, align 4, !tbaa !65
  %219 = getelementptr inbounds float, ptr %144, i64 %216
  store float %218, ptr %219, align 4, !tbaa !65
  %220 = add nuw nsw i64 %212, 2
  %221 = getelementptr inbounds float, ptr %2, i64 %220
  %222 = load float, ptr %221, align 4, !tbaa !65
  %223 = getelementptr inbounds float, ptr %144, i64 %220
  store float %222, ptr %223, align 4, !tbaa !65
  %224 = add nuw nsw i64 %212, 3
  %225 = getelementptr inbounds float, ptr %2, i64 %224
  %226 = load float, ptr %225, align 4, !tbaa !65
  %227 = getelementptr inbounds float, ptr %144, i64 %224
  store float %226, ptr %227, align 4, !tbaa !65
  %228 = add nuw nsw i64 %212, 4
  %229 = icmp eq i64 %228, %167
  br i1 %229, label %230, label %211, !llvm.loop !103

230:                                              ; preds = %208, %211, %191, %165
  %231 = or i16 %8, 1
  %232 = getelementptr inbounds %struct.CCGVert, ptr %24, i64 0, i32 4
  store i16 %231, ptr %232, align 4, !tbaa !86
  %233 = getelementptr inbounds %struct.CCGVert, ptr %24, i64 0, i32 2
  %234 = load i16, ptr %233, align 8, !tbaa !79
  %235 = icmp sgt i16 %234, 0
  br i1 %235, label %236, label %260

236:                                              ; preds = %230
  %237 = zext i16 %234 to i64
  %238 = getelementptr inbounds %struct.CCGVert, ptr %24, i64 0, i32 6
  %239 = load ptr, ptr %238, align 8, !tbaa !56
  %240 = and i64 %237, 1
  %241 = icmp eq i16 %234, 1
  br i1 %241, label %244, label %242

242:                                              ; preds = %236
  %243 = and i64 %237, 65534
  br label %268

244:                                              ; preds = %268, %236
  %245 = phi i64 [ 0, %236 ], [ %296, %268 ]
  %246 = icmp eq i64 %240, 0
  br i1 %246, label %260, label %247

247:                                              ; preds = %244
  %248 = getelementptr inbounds ptr, ptr %239, i64 %245
  %249 = load ptr, ptr %248, align 8, !tbaa !14
  %250 = getelementptr inbounds %struct.CCGEdge, ptr %249, i64 0, i32 5
  %251 = load ptr, ptr %250, align 8, !tbaa !83
  %252 = getelementptr inbounds %struct.CCGVert, ptr %251, i64 0, i32 4
  %253 = load i16, ptr %252, align 4, !tbaa !86
  %254 = or i16 %253, 1
  store i16 %254, ptr %252, align 4, !tbaa !86
  %255 = getelementptr inbounds %struct.CCGEdge, ptr %249, i64 0, i32 6
  %256 = load ptr, ptr %255, align 8, !tbaa !85
  %257 = getelementptr inbounds %struct.CCGVert, ptr %256, i64 0, i32 4
  %258 = load i16, ptr %257, align 4, !tbaa !86
  %259 = or i16 %258, 1
  store i16 %259, ptr %257, align 4, !tbaa !86
  br label %260

260:                                              ; preds = %247, %244, %230
  %261 = getelementptr inbounds %struct.CCGVert, ptr %24, i64 0, i32 3
  %262 = load i16, ptr %261, align 2, !tbaa !78
  %263 = icmp sgt i16 %262, 0
  br i1 %263, label %264, label %589

264:                                              ; preds = %260
  %265 = zext i16 %262 to i64
  %266 = getelementptr inbounds %struct.CCGVert, ptr %24, i64 0, i32 7
  %267 = load ptr, ptr %266, align 8, !tbaa !58
  br label %299

268:                                              ; preds = %268, %242
  %269 = phi i64 [ 0, %242 ], [ %296, %268 ]
  %270 = phi i64 [ 0, %242 ], [ %297, %268 ]
  %271 = getelementptr inbounds ptr, ptr %239, i64 %269
  %272 = load ptr, ptr %271, align 8, !tbaa !14
  %273 = getelementptr inbounds %struct.CCGEdge, ptr %272, i64 0, i32 5
  %274 = load ptr, ptr %273, align 8, !tbaa !83
  %275 = getelementptr inbounds %struct.CCGVert, ptr %274, i64 0, i32 4
  %276 = load i16, ptr %275, align 4, !tbaa !86
  %277 = or i16 %276, 1
  store i16 %277, ptr %275, align 4, !tbaa !86
  %278 = getelementptr inbounds %struct.CCGEdge, ptr %272, i64 0, i32 6
  %279 = load ptr, ptr %278, align 8, !tbaa !85
  %280 = getelementptr inbounds %struct.CCGVert, ptr %279, i64 0, i32 4
  %281 = load i16, ptr %280, align 4, !tbaa !86
  %282 = or i16 %281, 1
  store i16 %282, ptr %280, align 4, !tbaa !86
  %283 = or i64 %269, 1
  %284 = getelementptr inbounds ptr, ptr %239, i64 %283
  %285 = load ptr, ptr %284, align 8, !tbaa !14
  %286 = getelementptr inbounds %struct.CCGEdge, ptr %285, i64 0, i32 5
  %287 = load ptr, ptr %286, align 8, !tbaa !83
  %288 = getelementptr inbounds %struct.CCGVert, ptr %287, i64 0, i32 4
  %289 = load i16, ptr %288, align 4, !tbaa !86
  %290 = or i16 %289, 1
  store i16 %290, ptr %288, align 4, !tbaa !86
  %291 = getelementptr inbounds %struct.CCGEdge, ptr %285, i64 0, i32 6
  %292 = load ptr, ptr %291, align 8, !tbaa !85
  %293 = getelementptr inbounds %struct.CCGVert, ptr %292, i64 0, i32 4
  %294 = load i16, ptr %293, align 4, !tbaa !86
  %295 = or i16 %294, 1
  store i16 %295, ptr %293, align 4, !tbaa !86
  %296 = add nuw nsw i64 %269, 2
  %297 = add i64 %270, 2
  %298 = icmp eq i64 %297, %243
  br i1 %298, label %244, label %268, !llvm.loop !104

299:                                              ; preds = %264, %356
  %300 = phi i64 [ 0, %264 ], [ %357, %356 ]
  %301 = getelementptr inbounds ptr, ptr %267, i64 %300
  %302 = load ptr, ptr %301, align 8, !tbaa !14
  %303 = getelementptr inbounds %struct.CCGFace, ptr %302, i64 0, i32 2
  %304 = load i16, ptr %303, align 8, !tbaa !89
  %305 = icmp sgt i16 %304, 0
  br i1 %305, label %306, label %356

306:                                              ; preds = %299
  %307 = zext i16 %304 to i64
  %308 = getelementptr inbounds %struct.CCGFace, ptr %302, i64 1
  %309 = and i64 %307, 3
  %310 = icmp ult i16 %304, 4
  br i1 %310, label %342, label %311

311:                                              ; preds = %306
  %312 = and i64 %307, 65532
  br label %313

313:                                              ; preds = %313, %311
  %314 = phi i64 [ 0, %311 ], [ %339, %313 ]
  %315 = phi i64 [ 0, %311 ], [ %340, %313 ]
  %316 = getelementptr inbounds ptr, ptr %308, i64 %314
  %317 = load ptr, ptr %316, align 8, !tbaa !14
  %318 = getelementptr inbounds %struct.CCGVert, ptr %317, i64 0, i32 4
  %319 = load i16, ptr %318, align 4, !tbaa !86
  %320 = or i16 %319, 1
  store i16 %320, ptr %318, align 4, !tbaa !86
  %321 = or i64 %314, 1
  %322 = getelementptr inbounds ptr, ptr %308, i64 %321
  %323 = load ptr, ptr %322, align 8, !tbaa !14
  %324 = getelementptr inbounds %struct.CCGVert, ptr %323, i64 0, i32 4
  %325 = load i16, ptr %324, align 4, !tbaa !86
  %326 = or i16 %325, 1
  store i16 %326, ptr %324, align 4, !tbaa !86
  %327 = or i64 %314, 2
  %328 = getelementptr inbounds ptr, ptr %308, i64 %327
  %329 = load ptr, ptr %328, align 8, !tbaa !14
  %330 = getelementptr inbounds %struct.CCGVert, ptr %329, i64 0, i32 4
  %331 = load i16, ptr %330, align 4, !tbaa !86
  %332 = or i16 %331, 1
  store i16 %332, ptr %330, align 4, !tbaa !86
  %333 = or i64 %314, 3
  %334 = getelementptr inbounds ptr, ptr %308, i64 %333
  %335 = load ptr, ptr %334, align 8, !tbaa !14
  %336 = getelementptr inbounds %struct.CCGVert, ptr %335, i64 0, i32 4
  %337 = load i16, ptr %336, align 4, !tbaa !86
  %338 = or i16 %337, 1
  store i16 %338, ptr %336, align 4, !tbaa !86
  %339 = add nuw nsw i64 %314, 4
  %340 = add i64 %315, 4
  %341 = icmp eq i64 %340, %312
  br i1 %341, label %342, label %313, !llvm.loop !105

342:                                              ; preds = %313, %306
  %343 = phi i64 [ 0, %306 ], [ %339, %313 ]
  %344 = icmp eq i64 %309, 0
  br i1 %344, label %356, label %345

345:                                              ; preds = %342, %345
  %346 = phi i64 [ %353, %345 ], [ %343, %342 ]
  %347 = phi i64 [ %354, %345 ], [ 0, %342 ]
  %348 = getelementptr inbounds ptr, ptr %308, i64 %346
  %349 = load ptr, ptr %348, align 8, !tbaa !14
  %350 = getelementptr inbounds %struct.CCGVert, ptr %349, i64 0, i32 4
  %351 = load i16, ptr %350, align 4, !tbaa !86
  %352 = or i16 %351, 1
  store i16 %352, ptr %350, align 4, !tbaa !86
  %353 = add nuw nsw i64 %346, 1
  %354 = add i64 %347, 1
  %355 = icmp eq i64 %354, %309
  br i1 %355, label %356, label %345, !llvm.loop !106

356:                                              ; preds = %342, %345, %299
  %357 = add nuw nsw i64 %300, 1
  %358 = icmp eq i64 %357, %265
  br i1 %358, label %589, label %299, !llvm.loop !107

359:                                              ; preds = %5
  %360 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 23
  %361 = load ptr, ptr %360, align 8, !tbaa !55
  %362 = load ptr, ptr %361, align 8, !tbaa !26
  %363 = getelementptr i8, ptr %361, i64 12
  %364 = load i32, ptr %363, align 4, !tbaa !24
  %365 = ptrtoint ptr %1 to i64
  %366 = zext i32 %364 to i64
  %367 = urem i64 %365, %366
  %368 = shl nuw i64 %367, 32
  %369 = ashr exact i64 %368, 32
  %370 = getelementptr inbounds ptr, ptr %362, i64 %369
  br label %371

371:                                              ; preds = %375, %359
  %372 = phi ptr [ %370, %359 ], [ %373, %375 ]
  %373 = load ptr, ptr %372, align 8, !tbaa !14
  %374 = icmp eq ptr %373, null
  br i1 %374, label %379, label %375

375:                                              ; preds = %371
  %376 = getelementptr inbounds %struct._EHEntry, ptr %373, i64 0, i32 1
  %377 = load ptr, ptr %376, align 8, !tbaa !76
  %378 = icmp eq ptr %377, %1
  br i1 %378, label %491, label %371, !llvm.loop !77

379:                                              ; preds = %371
  %380 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %381 = load i32, ptr %380, align 8, !tbaa !32
  %382 = add nsw i32 %381, 1
  %383 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4
  %384 = load ptr, ptr %383, align 8, !tbaa !36
  %385 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 5
  %386 = load ptr, ptr %385, align 8, !tbaa !15
  %387 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3
  %388 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %389 = load i32, ptr %388, align 8, !tbaa !37
  %390 = mul nsw i32 %389, %382
  %391 = add i32 %390, 40
  %392 = load i32, ptr %387, align 8, !tbaa !71
  %393 = add i32 %391, %392
  %394 = tail call ptr %384(ptr noundef %386, i32 noundef %393) #23
  %395 = ptrtoint ptr %394 to i64
  %396 = getelementptr inbounds %struct.CCGVert, ptr %394, i64 0, i32 1
  store ptr %1, ptr %396, align 8, !tbaa !93
  %397 = getelementptr inbounds %struct.CCGVert, ptr %394, i64 0, i32 6
  %398 = getelementptr inbounds %struct.CCGVert, ptr %394, i64 0, i32 3
  store i16 0, ptr %398, align 2, !tbaa !78
  %399 = getelementptr inbounds %struct.CCGVert, ptr %394, i64 0, i32 2
  store i16 0, ptr %399, align 8, !tbaa !79
  %400 = getelementptr inbounds %struct.CCGVert, ptr %394, i64 0, i32 4
  store i16 0, ptr %400, align 4, !tbaa !86
  %401 = getelementptr %struct.CCGVert, ptr %394, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %397, i8 0, i64 16, i1 false)
  %402 = load i32, ptr %388, align 8, !tbaa !37
  %403 = load i32, ptr %380, align 8, !tbaa !32
  %404 = add nsw i32 %403, 1
  %405 = mul nsw i32 %404, %402
  %406 = sext i32 %405 to i64
  %407 = getelementptr inbounds i8, ptr %401, i64 %406
  %408 = load i32, ptr %387, align 8, !tbaa !71
  %409 = sext i32 %408 to i64
  tail call void @llvm.memset.p0.i64(ptr nonnull align 1 %407, i8 0, i64 %409, i1 false)
  %410 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 18
  %411 = load i32, ptr %410, align 4, !tbaa !67
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %420, label %413

413:                                              ; preds = %379
  %414 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 17
  %415 = load i32, ptr %414, align 8, !tbaa !40
  %416 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 19
  %417 = load i32, ptr %416, align 8, !tbaa !68
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds i8, ptr %407, i64 %418
  store i32 %415, ptr %419, align 4, !tbaa !31
  br label %420

420:                                              ; preds = %379, %413
  %421 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 3
  %422 = load i32, ptr %421, align 4, !tbaa !74
  %423 = icmp sgt i32 %422, 0
  br i1 %423, label %424, label %488

424:                                              ; preds = %420
  %425 = zext i32 %422 to i64
  %426 = icmp ult i32 %422, 32
  br i1 %426, label %451, label %427

427:                                              ; preds = %424
  %428 = add i64 %395, 40
  %429 = sub i64 %428, %6
  %430 = icmp ult i64 %429, 128
  br i1 %430, label %451, label %431

431:                                              ; preds = %427
  %432 = and i64 %425, 4294967264
  br label %433

433:                                              ; preds = %433, %431
  %434 = phi i64 [ 0, %431 ], [ %447, %433 ]
  %435 = getelementptr inbounds float, ptr %2, i64 %434
  %436 = load <8 x float>, ptr %435, align 4, !tbaa !65
  %437 = getelementptr inbounds float, ptr %435, i64 8
  %438 = load <8 x float>, ptr %437, align 4, !tbaa !65
  %439 = getelementptr inbounds float, ptr %435, i64 16
  %440 = load <8 x float>, ptr %439, align 4, !tbaa !65
  %441 = getelementptr inbounds float, ptr %435, i64 24
  %442 = load <8 x float>, ptr %441, align 4, !tbaa !65
  %443 = getelementptr inbounds float, ptr %401, i64 %434
  store <8 x float> %436, ptr %443, align 4, !tbaa !65
  %444 = getelementptr inbounds float, ptr %443, i64 8
  store <8 x float> %438, ptr %444, align 4, !tbaa !65
  %445 = getelementptr inbounds float, ptr %443, i64 16
  store <8 x float> %440, ptr %445, align 4, !tbaa !65
  %446 = getelementptr inbounds float, ptr %443, i64 24
  store <8 x float> %442, ptr %446, align 4, !tbaa !65
  %447 = add nuw i64 %434, 32
  %448 = icmp eq i64 %447, %432
  br i1 %448, label %449, label %433, !llvm.loop !108

449:                                              ; preds = %433
  %450 = icmp eq i64 %432, %425
  br i1 %450, label %488, label %451

451:                                              ; preds = %427, %424, %449
  %452 = phi i64 [ 0, %427 ], [ 0, %424 ], [ %432, %449 ]
  %453 = xor i64 %452, -1
  %454 = add nsw i64 %453, %425
  %455 = and i64 %425, 3
  %456 = icmp eq i64 %455, 0
  br i1 %456, label %466, label %457

457:                                              ; preds = %451, %457
  %458 = phi i64 [ %463, %457 ], [ %452, %451 ]
  %459 = phi i64 [ %464, %457 ], [ 0, %451 ]
  %460 = getelementptr inbounds float, ptr %2, i64 %458
  %461 = load float, ptr %460, align 4, !tbaa !65
  %462 = getelementptr inbounds float, ptr %401, i64 %458
  store float %461, ptr %462, align 4, !tbaa !65
  %463 = add nuw nsw i64 %458, 1
  %464 = add i64 %459, 1
  %465 = icmp eq i64 %464, %455
  br i1 %465, label %466, label %457, !llvm.loop !109

466:                                              ; preds = %457, %451
  %467 = phi i64 [ %452, %451 ], [ %463, %457 ]
  %468 = icmp ult i64 %454, 3
  br i1 %468, label %488, label %469

469:                                              ; preds = %466, %469
  %470 = phi i64 [ %486, %469 ], [ %467, %466 ]
  %471 = getelementptr inbounds float, ptr %2, i64 %470
  %472 = load float, ptr %471, align 4, !tbaa !65
  %473 = getelementptr inbounds float, ptr %401, i64 %470
  store float %472, ptr %473, align 4, !tbaa !65
  %474 = add nuw nsw i64 %470, 1
  %475 = getelementptr inbounds float, ptr %2, i64 %474
  %476 = load float, ptr %475, align 4, !tbaa !65
  %477 = getelementptr inbounds float, ptr %401, i64 %474
  store float %476, ptr %477, align 4, !tbaa !65
  %478 = add nuw nsw i64 %470, 2
  %479 = getelementptr inbounds float, ptr %2, i64 %478
  %480 = load float, ptr %479, align 4, !tbaa !65
  %481 = getelementptr inbounds float, ptr %401, i64 %478
  store float %480, ptr %481, align 4, !tbaa !65
  %482 = add nuw nsw i64 %470, 3
  %483 = getelementptr inbounds float, ptr %2, i64 %482
  %484 = load float, ptr %483, align 4, !tbaa !65
  %485 = getelementptr inbounds float, ptr %401, i64 %482
  store float %484, ptr %485, align 4, !tbaa !65
  %486 = add nuw nsw i64 %470, 4
  %487 = icmp eq i64 %486, %425
  br i1 %487, label %488, label %469, !llvm.loop !110

488:                                              ; preds = %466, %469, %449, %420
  %489 = load ptr, ptr %0, align 8, !tbaa !27
  tail call fastcc void @_ehash_insert(ptr noundef %489, ptr noundef nonnull %394)
  %490 = or i16 %8, 1
  store i16 %490, ptr %400, align 4, !tbaa !86
  br label %589

491:                                              ; preds = %375
  %492 = ptrtoint ptr %373 to i64
  %493 = getelementptr %struct.CCGVert, ptr %373, i64 1
  %494 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 3
  %495 = load i32, ptr %494, align 4, !tbaa !74
  %496 = icmp sgt i32 %495, 0
  br i1 %496, label %497, label %509

497:                                              ; preds = %491
  %498 = zext i32 %495 to i64
  br label %502

499:                                              ; preds = %502
  %500 = add nuw nsw i64 %503, 1
  %501 = icmp eq i64 %500, %498
  br i1 %501, label %509, label %502, !llvm.loop !100

502:                                              ; preds = %499, %497
  %503 = phi i64 [ 0, %497 ], [ %500, %499 ]
  %504 = getelementptr inbounds float, ptr %2, i64 %503
  %505 = load float, ptr %504, align 4, !tbaa !65
  %506 = getelementptr inbounds float, ptr %493, i64 %503
  %507 = load float, ptr %506, align 4, !tbaa !65
  %508 = fcmp fast une float %505, %507
  br i1 %508, label %514, label %499

509:                                              ; preds = %499, %491
  %510 = getelementptr inbounds %struct.CCGVert, ptr %373, i64 0, i32 4
  %511 = load i16, ptr %510, align 4, !tbaa !86
  %512 = and i16 %511, 4
  %513 = icmp eq i16 %512, %8
  br i1 %513, label %586, label %514

514:                                              ; preds = %502, %509
  %515 = load ptr, ptr %373, align 8, !tbaa !80
  store ptr %515, ptr %372, align 8, !tbaa !14
  %516 = load ptr, ptr %0, align 8, !tbaa !27
  tail call fastcc void @_ehash_insert(ptr noundef %516, ptr noundef nonnull %373)
  %517 = load i32, ptr %494, align 4, !tbaa !74
  %518 = icmp sgt i32 %517, 0
  br i1 %518, label %519, label %583

519:                                              ; preds = %514
  %520 = zext i32 %517 to i64
  %521 = icmp ult i32 %517, 32
  br i1 %521, label %546, label %522

522:                                              ; preds = %519
  %523 = add i64 %492, 40
  %524 = sub i64 %523, %6
  %525 = icmp ult i64 %524, 128
  br i1 %525, label %546, label %526

526:                                              ; preds = %522
  %527 = and i64 %520, 4294967264
  br label %528

528:                                              ; preds = %528, %526
  %529 = phi i64 [ 0, %526 ], [ %542, %528 ]
  %530 = getelementptr inbounds float, ptr %2, i64 %529
  %531 = load <8 x float>, ptr %530, align 4, !tbaa !65
  %532 = getelementptr inbounds float, ptr %530, i64 8
  %533 = load <8 x float>, ptr %532, align 4, !tbaa !65
  %534 = getelementptr inbounds float, ptr %530, i64 16
  %535 = load <8 x float>, ptr %534, align 4, !tbaa !65
  %536 = getelementptr inbounds float, ptr %530, i64 24
  %537 = load <8 x float>, ptr %536, align 4, !tbaa !65
  %538 = getelementptr inbounds float, ptr %493, i64 %529
  store <8 x float> %531, ptr %538, align 4, !tbaa !65
  %539 = getelementptr inbounds float, ptr %538, i64 8
  store <8 x float> %533, ptr %539, align 4, !tbaa !65
  %540 = getelementptr inbounds float, ptr %538, i64 16
  store <8 x float> %535, ptr %540, align 4, !tbaa !65
  %541 = getelementptr inbounds float, ptr %538, i64 24
  store <8 x float> %537, ptr %541, align 4, !tbaa !65
  %542 = add nuw i64 %529, 32
  %543 = icmp eq i64 %542, %527
  br i1 %543, label %544, label %528, !llvm.loop !111

544:                                              ; preds = %528
  %545 = icmp eq i64 %527, %520
  br i1 %545, label %583, label %546

546:                                              ; preds = %522, %519, %544
  %547 = phi i64 [ 0, %522 ], [ 0, %519 ], [ %527, %544 ]
  %548 = xor i64 %547, -1
  %549 = add nsw i64 %548, %520
  %550 = and i64 %520, 3
  %551 = icmp eq i64 %550, 0
  br i1 %551, label %561, label %552

552:                                              ; preds = %546, %552
  %553 = phi i64 [ %558, %552 ], [ %547, %546 ]
  %554 = phi i64 [ %559, %552 ], [ 0, %546 ]
  %555 = getelementptr inbounds float, ptr %2, i64 %553
  %556 = load float, ptr %555, align 4, !tbaa !65
  %557 = getelementptr inbounds float, ptr %493, i64 %553
  store float %556, ptr %557, align 4, !tbaa !65
  %558 = add nuw nsw i64 %553, 1
  %559 = add i64 %554, 1
  %560 = icmp eq i64 %559, %550
  br i1 %560, label %561, label %552, !llvm.loop !112

561:                                              ; preds = %552, %546
  %562 = phi i64 [ %547, %546 ], [ %558, %552 ]
  %563 = icmp ult i64 %549, 3
  br i1 %563, label %583, label %564

564:                                              ; preds = %561, %564
  %565 = phi i64 [ %581, %564 ], [ %562, %561 ]
  %566 = getelementptr inbounds float, ptr %2, i64 %565
  %567 = load float, ptr %566, align 4, !tbaa !65
  %568 = getelementptr inbounds float, ptr %493, i64 %565
  store float %567, ptr %568, align 4, !tbaa !65
  %569 = add nuw nsw i64 %565, 1
  %570 = getelementptr inbounds float, ptr %2, i64 %569
  %571 = load float, ptr %570, align 4, !tbaa !65
  %572 = getelementptr inbounds float, ptr %493, i64 %569
  store float %571, ptr %572, align 4, !tbaa !65
  %573 = add nuw nsw i64 %565, 2
  %574 = getelementptr inbounds float, ptr %2, i64 %573
  %575 = load float, ptr %574, align 4, !tbaa !65
  %576 = getelementptr inbounds float, ptr %493, i64 %573
  store float %575, ptr %576, align 4, !tbaa !65
  %577 = add nuw nsw i64 %565, 3
  %578 = getelementptr inbounds float, ptr %2, i64 %577
  %579 = load float, ptr %578, align 4, !tbaa !65
  %580 = getelementptr inbounds float, ptr %493, i64 %577
  store float %579, ptr %580, align 4, !tbaa !65
  %581 = add nuw nsw i64 %565, 4
  %582 = icmp eq i64 %581, %520
  br i1 %582, label %583, label %564, !llvm.loop !113

583:                                              ; preds = %561, %564, %544, %514
  %584 = or i16 %8, 3
  %585 = getelementptr inbounds %struct.CCGVert, ptr %373, i64 0, i32 4
  store i16 %584, ptr %585, align 4, !tbaa !86
  br label %589

586:                                              ; preds = %509
  %587 = load ptr, ptr %373, align 8, !tbaa !80
  store ptr %587, ptr %372, align 8, !tbaa !14
  %588 = load ptr, ptr %0, align 8, !tbaa !27
  tail call fastcc void @_ehash_insert(ptr noundef %588, ptr noundef nonnull %373)
  store i16 0, ptr %510, align 4, !tbaa !86
  br label %589

589:                                              ; preds = %356, %260, %488, %586, %583, %139, %160
  %590 = phi ptr [ %24, %160 ], [ %45, %139 ], [ %373, %583 ], [ %373, %586 ], [ %394, %488 ], [ %24, %260 ], [ %24, %356 ]
  %591 = icmp eq ptr %4, null
  br i1 %591, label %593, label %592

592:                                              ; preds = %589
  store ptr %590, ptr %4, align 8, !tbaa !14
  br label %593

593:                                              ; preds = %589, %592, %5
  %594 = phi i32 [ 1, %5 ], [ 0, %592 ], [ 0, %589 ]
  ret i32 %594
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @_ehash_insert(ptr nocapture noundef %0, ptr noundef %1) unnamed_addr #1 {
  %3 = getelementptr inbounds %struct._EHash, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 4, !tbaa !24
  %5 = getelementptr inbounds %struct._EHEntry, ptr %1, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !76
  %7 = ptrtoint ptr %6 to i64
  %8 = zext i32 %4 to i64
  %9 = urem i64 %7, %8
  %10 = load ptr, ptr %0, align 8, !tbaa !26
  %11 = shl nuw i64 %9, 32
  %12 = ashr exact i64 %11, 32
  %13 = getelementptr inbounds ptr, ptr %10, i64 %12
  %14 = load ptr, ptr %13, align 8, !tbaa !14
  store ptr %14, ptr %1, align 8, !tbaa !46
  store ptr %1, ptr %13, align 8, !tbaa !14
  %15 = getelementptr inbounds %struct._EHash, ptr %0, i64 0, i32 1
  %16 = load i32, ptr %15, align 8, !tbaa !22
  %17 = add nsw i32 %16, 1
  store i32 %17, ptr %15, align 8, !tbaa !22
  %18 = mul nsw i32 %4, 3
  %19 = icmp slt i32 %16, %18
  br i1 %19, label %69, label %20

20:                                               ; preds = %2
  %21 = load ptr, ptr %0, align 8, !tbaa !26
  %22 = getelementptr inbounds %struct._EHash, ptr %0, i64 0, i32 3
  %23 = load i32, ptr %22, align 8, !tbaa !23
  %24 = add nsw i32 %23, 1
  store i32 %24, ptr %22, align 8, !tbaa !23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [29 x i32], ptr @kHashSizes, i64 0, i64 %25
  %27 = load i32, ptr %26, align 4, !tbaa !31
  store i32 %27, ptr %3, align 4, !tbaa !24
  %28 = getelementptr inbounds %struct._EHash, ptr %0, i64 0, i32 4
  %29 = load ptr, ptr %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct._EHash, ptr %0, i64 0, i32 5
  %31 = load ptr, ptr %30, align 8, !tbaa !20
  %32 = shl i32 %27, 3
  %33 = tail call ptr %29(ptr noundef %31, i32 noundef %32) #23
  store ptr %33, ptr %0, align 8, !tbaa !26
  %34 = load i32, ptr %3, align 4, !tbaa !24
  %35 = sext i32 %34 to i64
  %36 = shl nsw i64 %35, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %36, i1 false)
  %37 = icmp eq i32 %4, 0
  br i1 %37, label %65, label %38

38:                                               ; preds = %20
  %39 = sext i32 %4 to i64
  br label %43

40:                                               ; preds = %52, %43
  %41 = and i64 %45, 4294967295
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %65, label %43, !llvm.loop !114

43:                                               ; preds = %38, %40
  %44 = phi i64 [ %39, %38 ], [ %45, %40 ]
  %45 = add nsw i64 %44, -1
  %46 = getelementptr inbounds ptr, ptr %21, i64 %45
  %47 = load ptr, ptr %46, align 8, !tbaa !14
  %48 = icmp eq ptr %47, null
  br i1 %48, label %40, label %49

49:                                               ; preds = %43
  %50 = load i32, ptr %3, align 4, !tbaa !24
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %49, %52
  %53 = phi ptr [ %47, %49 ], [ %54, %52 ]
  %54 = load ptr, ptr %53, align 8, !tbaa !46
  %55 = getelementptr inbounds %struct._EHEntry, ptr %53, i64 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !76
  %57 = ptrtoint ptr %56 to i64
  %58 = urem i64 %57, %51
  %59 = load ptr, ptr %0, align 8, !tbaa !26
  %60 = shl nuw i64 %58, 32
  %61 = ashr exact i64 %60, 32
  %62 = getelementptr inbounds ptr, ptr %59, i64 %61
  %63 = load ptr, ptr %62, align 8, !tbaa !14
  store ptr %63, ptr %53, align 8, !tbaa !46
  store ptr %53, ptr %62, align 8, !tbaa !14
  %64 = icmp eq ptr %54, null
  br i1 %64, label %40, label %52, !llvm.loop !115

65:                                               ; preds = %40, %20
  %66 = getelementptr inbounds %struct._EHash, ptr %0, i64 0, i32 4, i32 2
  %67 = load ptr, ptr %66, align 8, !tbaa !50
  %68 = load ptr, ptr %30, align 8, !tbaa !20
  tail call void %67(ptr noundef %68, ptr noundef %21) #23
  br label %69

69:                                               ; preds = %65, %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @ccgSubSurf_syncEdge(ptr nocapture noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, float noundef nofpclass(nan inf) %4, ptr noundef writeonly %5) local_unnamed_addr #1 {
  %7 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 22
  %8 = load i32, ptr %7, align 4, !tbaa !42
  switch i32 %8, label %265 [
    i32 4, label %9
    i32 1, label %158
    i32 2, label %159
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !28
  %12 = load ptr, ptr %11, align 8, !tbaa !26
  %13 = getelementptr i8, ptr %11, i64 12
  %14 = load i32, ptr %13, align 4, !tbaa !24
  %15 = ptrtoint ptr %1 to i64
  %16 = zext i32 %14 to i64
  %17 = urem i64 %15, %16
  %18 = shl nuw i64 %17, 32
  %19 = ashr exact i64 %18, 32
  %20 = getelementptr inbounds ptr, ptr %12, i64 %19
  br label %21

21:                                               ; preds = %25, %9
  %22 = phi ptr [ %20, %9 ], [ %23, %25 ]
  %23 = load ptr, ptr %22, align 8, !tbaa !14
  %24 = icmp eq ptr %23, null
  br i1 %24, label %45, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct._EHEntry, ptr %23, i64 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !76
  %28 = icmp eq ptr %27, %1
  br i1 %28, label %29, label %21, !llvm.loop !77

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.CCGEdge, ptr %23, i64 0, i32 5
  %31 = load ptr, ptr %30, align 8, !tbaa !83
  %32 = getelementptr inbounds %struct.CCGVert, ptr %31, i64 0, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !93
  %34 = icmp eq ptr %33, %2
  br i1 %34, label %35, label %45

35:                                               ; preds = %29
  %36 = getelementptr inbounds %struct.CCGEdge, ptr %23, i64 0, i32 6
  %37 = load ptr, ptr %36, align 8, !tbaa !85
  %38 = getelementptr inbounds %struct.CCGVert, ptr %37, i64 0, i32 1
  %39 = load ptr, ptr %38, align 8, !tbaa !93
  %40 = icmp eq ptr %39, %3
  br i1 %40, label %41, label %45

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.CCGEdge, ptr %23, i64 0, i32 4
  %43 = load float, ptr %42, align 4, !tbaa !116
  %44 = fcmp fast une float %43, %4
  br i1 %44, label %45, label %261

45:                                               ; preds = %21, %41, %35, %29
  %46 = load ptr, ptr %0, align 8, !tbaa !27
  %47 = load ptr, ptr %46, align 8, !tbaa !26
  %48 = getelementptr i8, ptr %46, i64 12
  %49 = load i32, ptr %48, align 4, !tbaa !24
  %50 = ptrtoint ptr %2 to i64
  %51 = zext i32 %49 to i64
  %52 = urem i64 %50, %51
  %53 = shl nuw i64 %52, 32
  %54 = ashr exact i64 %53, 32
  %55 = getelementptr inbounds ptr, ptr %47, i64 %54
  br label %56

56:                                               ; preds = %60, %45
  %57 = phi ptr [ %55, %45 ], [ %58, %60 ]
  %58 = load ptr, ptr %57, align 8, !tbaa !14
  %59 = icmp eq ptr %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct._EHEntry, ptr %58, i64 0, i32 1
  %62 = load ptr, ptr %61, align 8, !tbaa !76
  %63 = icmp eq ptr %62, %2
  br i1 %63, label %64, label %56, !llvm.loop !117

64:                                               ; preds = %56, %60
  %65 = ptrtoint ptr %3 to i64
  %66 = urem i64 %65, %51
  %67 = shl nuw i64 %66, 32
  %68 = ashr exact i64 %67, 32
  %69 = getelementptr inbounds ptr, ptr %47, i64 %68
  br label %70

70:                                               ; preds = %74, %64
  %71 = phi ptr [ %69, %64 ], [ %72, %74 ]
  %72 = load ptr, ptr %71, align 8, !tbaa !14
  %73 = icmp eq ptr %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct._EHEntry, ptr %72, i64 0, i32 1
  %76 = load ptr, ptr %75, align 8, !tbaa !76
  %77 = icmp eq ptr %76, %3
  br i1 %77, label %78, label %70, !llvm.loop !117

78:                                               ; preds = %70, %74
  %79 = tail call fastcc ptr @_edge_new(ptr noundef %1, ptr noundef %58, ptr noundef %72, float noundef nofpclass(nan inf) %4, ptr noundef nonnull %0)
  br i1 %24, label %147, label %80

80:                                               ; preds = %78
  store ptr %79, ptr %22, align 8, !tbaa !14
  %81 = load ptr, ptr %23, align 8, !tbaa !82
  store ptr %81, ptr %79, align 8, !tbaa !82
  %82 = getelementptr inbounds %struct.CCGEdge, ptr %23, i64 0, i32 5
  %83 = load ptr, ptr %82, align 8, !tbaa !83
  %84 = getelementptr inbounds %struct.CCGVert, ptr %83, i64 0, i32 2
  %85 = load i16, ptr %84, align 8, !tbaa !79
  %86 = icmp sgt i16 %85, 0
  br i1 %86, label %87, label %105

87:                                               ; preds = %80
  %88 = zext i16 %85 to i64
  %89 = getelementptr inbounds %struct.CCGVert, ptr %83, i64 0, i32 6
  %90 = load ptr, ptr %89, align 8, !tbaa !56
  br label %94

91:                                               ; preds = %94
  %92 = add nuw nsw i64 %95, 1
  %93 = icmp eq i64 %92, %88
  br i1 %93, label %105, label %94, !llvm.loop !84

94:                                               ; preds = %91, %87
  %95 = phi i64 [ 0, %87 ], [ %92, %91 ]
  %96 = getelementptr inbounds ptr, ptr %90, i64 %95
  %97 = load ptr, ptr %96, align 8, !tbaa !14
  %98 = icmp eq ptr %97, %23
  br i1 %98, label %99, label %91

99:                                               ; preds = %94
  %100 = getelementptr inbounds ptr, ptr %90, i64 %95
  %101 = add i16 %85, -1
  store i16 %101, ptr %84, align 8, !tbaa !79
  %102 = sext i16 %101 to i64
  %103 = getelementptr inbounds ptr, ptr %90, i64 %102
  %104 = load ptr, ptr %103, align 8, !tbaa !14
  store ptr %104, ptr %100, align 8, !tbaa !14
  br label %105

105:                                              ; preds = %91, %99, %80
  %106 = getelementptr inbounds %struct.CCGEdge, ptr %23, i64 0, i32 6
  %107 = load ptr, ptr %106, align 8, !tbaa !85
  %108 = getelementptr inbounds %struct.CCGVert, ptr %107, i64 0, i32 2
  %109 = load i16, ptr %108, align 8, !tbaa !79
  %110 = icmp sgt i16 %109, 0
  br i1 %110, label %111, label %130

111:                                              ; preds = %105
  %112 = zext i16 %109 to i64
  %113 = getelementptr inbounds %struct.CCGVert, ptr %107, i64 0, i32 6
  %114 = load ptr, ptr %113, align 8, !tbaa !56
  br label %118

115:                                              ; preds = %118
  %116 = add nuw nsw i64 %119, 1
  %117 = icmp eq i64 %116, %112
  br i1 %117, label %130, label %118, !llvm.loop !84

118:                                              ; preds = %115, %111
  %119 = phi i64 [ 0, %111 ], [ %116, %115 ]
  %120 = getelementptr inbounds ptr, ptr %114, i64 %119
  %121 = load ptr, ptr %120, align 8, !tbaa !14
  %122 = icmp eq ptr %121, %23
  br i1 %122, label %123, label %115

123:                                              ; preds = %118
  %124 = getelementptr inbounds ptr, ptr %114, i64 %119
  %125 = add i16 %109, -1
  store i16 %125, ptr %108, align 8, !tbaa !79
  %126 = sext i16 %125 to i64
  %127 = getelementptr inbounds ptr, ptr %114, i64 %126
  %128 = load ptr, ptr %127, align 8, !tbaa !14
  store ptr %128, ptr %124, align 8, !tbaa !14
  %129 = load ptr, ptr %106, align 8, !tbaa !85
  br label %130

130:                                              ; preds = %115, %105, %123
  %131 = phi ptr [ %107, %105 ], [ %129, %123 ], [ %107, %115 ]
  %132 = load ptr, ptr %82, align 8, !tbaa !83
  %133 = getelementptr inbounds %struct.CCGVert, ptr %132, i64 0, i32 4
  %134 = load i16, ptr %133, align 4, !tbaa !86
  %135 = or i16 %134, 1
  store i16 %135, ptr %133, align 4, !tbaa !86
  %136 = getelementptr inbounds %struct.CCGVert, ptr %131, i64 0, i32 4
  %137 = load i16, ptr %136, align 4, !tbaa !86
  %138 = or i16 %137, 1
  store i16 %138, ptr %136, align 4, !tbaa !86
  %139 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4, i32 2
  %140 = load ptr, ptr %139, align 8, !tbaa !48
  %141 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 5
  %142 = load ptr, ptr %141, align 8, !tbaa !15
  %143 = getelementptr inbounds %struct.CCGEdge, ptr %23, i64 0, i32 7
  %144 = load ptr, ptr %143, align 8, !tbaa !52
  tail call void %140(ptr noundef %142, ptr noundef %144) #23
  %145 = load ptr, ptr %139, align 8, !tbaa !48
  %146 = load ptr, ptr %141, align 8, !tbaa !15
  tail call void %145(ptr noundef %146, ptr noundef nonnull %23) #23
  br label %149

147:                                              ; preds = %78
  %148 = load ptr, ptr %10, align 8, !tbaa !28
  tail call fastcc void @_ehash_insert(ptr noundef %148, ptr noundef %79)
  br label %149

149:                                              ; preds = %147, %130
  %150 = getelementptr inbounds %struct.CCGEdge, ptr %79, i64 0, i32 5
  %151 = load ptr, ptr %150, align 8, !tbaa !83
  %152 = getelementptr inbounds %struct.CCGVert, ptr %151, i64 0, i32 4
  %153 = load i16, ptr %152, align 4, !tbaa !86
  %154 = or i16 %153, 1
  store i16 %154, ptr %152, align 4, !tbaa !86
  %155 = getelementptr inbounds %struct.CCGEdge, ptr %79, i64 0, i32 6
  %156 = load ptr, ptr %155, align 8, !tbaa !85
  %157 = getelementptr inbounds %struct.CCGVert, ptr %156, i64 0, i32 4
  br label %256

158:                                              ; preds = %6
  store i32 2, ptr %7, align 4, !tbaa !42
  br label %159

159:                                              ; preds = %6, %158
  %160 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 24
  %161 = load ptr, ptr %160, align 8, !tbaa !51
  %162 = load ptr, ptr %161, align 8, !tbaa !26
  %163 = getelementptr i8, ptr %161, i64 12
  %164 = load i32, ptr %163, align 4, !tbaa !24
  %165 = ptrtoint ptr %1 to i64
  %166 = zext i32 %164 to i64
  %167 = urem i64 %165, %166
  %168 = shl nuw i64 %167, 32
  %169 = ashr exact i64 %168, 32
  %170 = getelementptr inbounds ptr, ptr %162, i64 %169
  br label %171

171:                                              ; preds = %175, %159
  %172 = phi ptr [ %170, %159 ], [ %173, %175 ]
  %173 = load ptr, ptr %172, align 8, !tbaa !14
  %174 = icmp eq ptr %173, null
  br i1 %174, label %195, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %struct._EHEntry, ptr %173, i64 0, i32 1
  %177 = load ptr, ptr %176, align 8, !tbaa !76
  %178 = icmp eq ptr %177, %1
  br i1 %178, label %179, label %171, !llvm.loop !77

179:                                              ; preds = %175
  %180 = getelementptr inbounds %struct.CCGEdge, ptr %173, i64 0, i32 5
  %181 = load ptr, ptr %180, align 8, !tbaa !83
  %182 = getelementptr inbounds %struct.CCGVert, ptr %181, i64 0, i32 1
  %183 = load ptr, ptr %182, align 8, !tbaa !93
  %184 = icmp eq ptr %183, %2
  br i1 %184, label %185, label %195

185:                                              ; preds = %179
  %186 = getelementptr inbounds %struct.CCGEdge, ptr %173, i64 0, i32 6
  %187 = load ptr, ptr %186, align 8, !tbaa !85
  %188 = getelementptr inbounds %struct.CCGVert, ptr %187, i64 0, i32 1
  %189 = load ptr, ptr %188, align 8, !tbaa !93
  %190 = icmp eq ptr %189, %3
  br i1 %190, label %191, label %195

191:                                              ; preds = %185
  %192 = getelementptr inbounds %struct.CCGEdge, ptr %173, i64 0, i32 4
  %193 = load float, ptr %192, align 4, !tbaa !116
  %194 = fcmp fast une float %193, %4
  br i1 %194, label %195, label %240

195:                                              ; preds = %171, %191, %185, %179
  %196 = load ptr, ptr %0, align 8, !tbaa !27
  %197 = load ptr, ptr %196, align 8, !tbaa !26
  %198 = getelementptr i8, ptr %196, i64 12
  %199 = load i32, ptr %198, align 4, !tbaa !24
  %200 = ptrtoint ptr %2 to i64
  %201 = zext i32 %199 to i64
  %202 = urem i64 %200, %201
  %203 = shl nuw i64 %202, 32
  %204 = ashr exact i64 %203, 32
  %205 = getelementptr inbounds ptr, ptr %197, i64 %204
  br label %206

206:                                              ; preds = %210, %195
  %207 = phi ptr [ %205, %195 ], [ %208, %210 ]
  %208 = load ptr, ptr %207, align 8, !tbaa !14
  %209 = icmp eq ptr %208, null
  br i1 %209, label %214, label %210

210:                                              ; preds = %206
  %211 = getelementptr inbounds %struct._EHEntry, ptr %208, i64 0, i32 1
  %212 = load ptr, ptr %211, align 8, !tbaa !76
  %213 = icmp eq ptr %212, %2
  br i1 %213, label %214, label %206, !llvm.loop !117

214:                                              ; preds = %206, %210
  %215 = ptrtoint ptr %3 to i64
  %216 = urem i64 %215, %201
  %217 = shl nuw i64 %216, 32
  %218 = ashr exact i64 %217, 32
  %219 = getelementptr inbounds ptr, ptr %197, i64 %218
  br label %220

220:                                              ; preds = %224, %214
  %221 = phi ptr [ %219, %214 ], [ %222, %224 ]
  %222 = load ptr, ptr %221, align 8, !tbaa !14
  %223 = icmp eq ptr %222, null
  br i1 %223, label %228, label %224

224:                                              ; preds = %220
  %225 = getelementptr inbounds %struct._EHEntry, ptr %222, i64 0, i32 1
  %226 = load ptr, ptr %225, align 8, !tbaa !76
  %227 = icmp eq ptr %226, %3
  br i1 %227, label %228, label %220, !llvm.loop !117

228:                                              ; preds = %220, %224
  %229 = tail call fastcc ptr @_edge_new(ptr noundef %1, ptr noundef %208, ptr noundef %222, float noundef nofpclass(nan inf) %4, ptr noundef nonnull %0)
  %230 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 1
  %231 = load ptr, ptr %230, align 8, !tbaa !28
  tail call fastcc void @_ehash_insert(ptr noundef %231, ptr noundef %229)
  %232 = getelementptr inbounds %struct.CCGEdge, ptr %229, i64 0, i32 5
  %233 = load ptr, ptr %232, align 8, !tbaa !83
  %234 = getelementptr inbounds %struct.CCGVert, ptr %233, i64 0, i32 4
  %235 = load i16, ptr %234, align 4, !tbaa !86
  %236 = or i16 %235, 1
  store i16 %236, ptr %234, align 4, !tbaa !86
  %237 = getelementptr inbounds %struct.CCGEdge, ptr %229, i64 0, i32 6
  %238 = load ptr, ptr %237, align 8, !tbaa !85
  %239 = getelementptr inbounds %struct.CCGVert, ptr %238, i64 0, i32 4
  br label %256

240:                                              ; preds = %191
  %241 = load ptr, ptr %173, align 8, !tbaa !82
  store ptr %241, ptr %172, align 8, !tbaa !14
  %242 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 1
  %243 = load ptr, ptr %242, align 8, !tbaa !28
  tail call fastcc void @_ehash_insert(ptr noundef %243, ptr noundef nonnull %173)
  %244 = getelementptr inbounds %struct.CCGEdge, ptr %173, i64 0, i32 3
  store i16 0, ptr %244, align 2, !tbaa !118
  %245 = load ptr, ptr %180, align 8, !tbaa !83
  %246 = getelementptr inbounds %struct.CCGVert, ptr %245, i64 0, i32 4
  %247 = load i16, ptr %246, align 4, !tbaa !86
  %248 = load ptr, ptr %186, align 8, !tbaa !85
  %249 = getelementptr inbounds %struct.CCGVert, ptr %248, i64 0, i32 4
  %250 = load i16, ptr %249, align 4, !tbaa !86
  %251 = or i16 %250, %247
  %252 = and i16 %251, 2
  %253 = icmp eq i16 %252, 0
  br i1 %253, label %261, label %254

254:                                              ; preds = %240
  %255 = or i16 %247, 1
  store i16 %255, ptr %246, align 4, !tbaa !86
  br label %256

256:                                              ; preds = %149, %254, %228
  %257 = phi ptr [ %239, %228 ], [ %249, %254 ], [ %157, %149 ]
  %258 = phi ptr [ %229, %228 ], [ %173, %254 ], [ %23, %149 ]
  %259 = load i16, ptr %257, align 4, !tbaa !86
  %260 = or i16 %259, 1
  store i16 %260, ptr %257, align 4, !tbaa !86
  br label %261

261:                                              ; preds = %256, %240, %41
  %262 = phi ptr [ %23, %41 ], [ %173, %240 ], [ %258, %256 ]
  %263 = icmp eq ptr %5, null
  br i1 %263, label %265, label %264

264:                                              ; preds = %261
  store ptr %262, ptr %5, align 8, !tbaa !14
  br label %265

265:                                              ; preds = %261, %264, %6
  %266 = phi i32 [ 1, %6 ], [ 0, %264 ], [ 0, %261 ]
  ret i32 %266
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @_edge_new(ptr noundef %0, ptr noundef %1, ptr noundef %2, float noundef nofpclass(nan inf) %3, ptr nocapture noundef readonly %4) unnamed_addr #1 {
  %6 = getelementptr inbounds %struct.CCGSubSurf, ptr %4, i64 0, i32 6
  %7 = load i32, ptr %6, align 8, !tbaa !32
  %8 = add nsw i32 %7, 1
  %9 = shl nuw i32 1, %8
  %10 = add i32 %9, %7
  %11 = getelementptr inbounds %struct.CCGSubSurf, ptr %4, i64 0, i32 4
  %12 = load ptr, ptr %11, align 8, !tbaa !36
  %13 = getelementptr %struct.CCGSubSurf, ptr %4, i64 0, i32 5
  %14 = load ptr, ptr %13, align 8, !tbaa !15
  %15 = getelementptr inbounds %struct.CCGSubSurf, ptr %4, i64 0, i32 3, i32 4
  %16 = load i32, ptr %15, align 8, !tbaa !37
  %17 = mul nsw i32 %16, %10
  %18 = add i32 %17, 48
  %19 = getelementptr inbounds %struct.CCGSubSurf, ptr %4, i64 0, i32 3, i32 1
  %20 = load i32, ptr %19, align 4, !tbaa !64
  %21 = add i32 %18, %20
  %22 = tail call ptr %12(ptr noundef %14, i32 noundef %21) #23
  %23 = getelementptr inbounds %struct.CCGEdge, ptr %22, i64 0, i32 1
  store ptr %0, ptr %23, align 8, !tbaa !119
  %24 = getelementptr inbounds %struct.CCGEdge, ptr %22, i64 0, i32 5
  store ptr %1, ptr %24, align 8, !tbaa !83
  %25 = getelementptr inbounds %struct.CCGEdge, ptr %22, i64 0, i32 6
  store ptr %2, ptr %25, align 8, !tbaa !85
  %26 = getelementptr inbounds %struct.CCGEdge, ptr %22, i64 0, i32 4
  store float %3, ptr %26, align 4, !tbaa !116
  %27 = getelementptr inbounds %struct.CCGEdge, ptr %22, i64 0, i32 7
  store ptr null, ptr %27, align 8, !tbaa !52
  %28 = getelementptr inbounds %struct.CCGEdge, ptr %22, i64 0, i32 2
  store i16 0, ptr %28, align 8, !tbaa !81
  %29 = getelementptr inbounds %struct.CCGEdge, ptr %22, i64 0, i32 3
  store i16 0, ptr %29, align 2, !tbaa !118
  %30 = getelementptr i8, ptr %4, i64 56
  %31 = load ptr, ptr %30, align 8, !tbaa !120
  %32 = load ptr, ptr %13, align 8, !tbaa !15
  %33 = getelementptr inbounds %struct.CCGVert, ptr %1, i64 0, i32 6
  %34 = load ptr, ptr %33, align 8, !tbaa !56
  %35 = getelementptr inbounds %struct.CCGVert, ptr %1, i64 0, i32 2
  %36 = load i16, ptr %35, align 8, !tbaa !79
  %37 = sext i16 %36 to i32
  %38 = shl nsw i32 %37, 3
  %39 = add nsw i32 %38, 8
  %40 = tail call ptr %31(ptr noundef %32, ptr noundef %34, i32 noundef %39, i32 noundef %38) #23
  store ptr %40, ptr %33, align 8, !tbaa !56
  %41 = load i16, ptr %35, align 8, !tbaa !79
  %42 = add i16 %41, 1
  store i16 %42, ptr %35, align 8, !tbaa !79
  %43 = sext i16 %41 to i64
  %44 = getelementptr inbounds ptr, ptr %40, i64 %43
  store ptr %22, ptr %44, align 8, !tbaa !14
  %45 = load ptr, ptr %30, align 8, !tbaa !120
  %46 = load ptr, ptr %13, align 8, !tbaa !15
  %47 = getelementptr inbounds %struct.CCGVert, ptr %2, i64 0, i32 6
  %48 = load ptr, ptr %47, align 8, !tbaa !56
  %49 = getelementptr inbounds %struct.CCGVert, ptr %2, i64 0, i32 2
  %50 = load i16, ptr %49, align 8, !tbaa !79
  %51 = sext i16 %50 to i32
  %52 = shl nsw i32 %51, 3
  %53 = add nsw i32 %52, 8
  %54 = tail call ptr %45(ptr noundef %46, ptr noundef %48, i32 noundef %53, i32 noundef %52) #23
  store ptr %54, ptr %47, align 8, !tbaa !56
  %55 = load i16, ptr %49, align 8, !tbaa !79
  %56 = add i16 %55, 1
  store i16 %56, ptr %49, align 8, !tbaa !79
  %57 = sext i16 %55 to i64
  %58 = getelementptr inbounds ptr, ptr %54, i64 %57
  store ptr %22, ptr %58, align 8, !tbaa !14
  %59 = getelementptr inbounds %struct.CCGEdge, ptr %22, i64 1
  %60 = load i32, ptr %15, align 8, !tbaa !37
  %61 = load i32, ptr %6, align 8, !tbaa !32
  %62 = add nsw i32 %61, 1
  %63 = shl nuw i32 1, %62
  %64 = add i32 %63, %61
  %65 = mul nsw i32 %64, %60
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, ptr %59, i64 %66
  %68 = load i32, ptr %19, align 4, !tbaa !64
  %69 = sext i32 %68 to i64
  tail call void @llvm.memset.p0.i64(ptr nonnull align 1 %67, i8 0, i64 %69, i1 false)
  %70 = getelementptr inbounds %struct.CCGSubSurf, ptr %4, i64 0, i32 18
  %71 = load i32, ptr %70, align 4, !tbaa !67
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %5
  %74 = getelementptr inbounds %struct.CCGSubSurf, ptr %4, i64 0, i32 17
  %75 = load i32, ptr %74, align 8, !tbaa !40
  %76 = getelementptr inbounds %struct.CCGSubSurf, ptr %4, i64 0, i32 20
  %77 = load i32, ptr %76, align 4, !tbaa !69
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8, ptr %67, i64 %78
  store i32 %75, ptr %79, align 4, !tbaa !31
  br label %80

80:                                               ; preds = %73, %5
  ret ptr %22
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @ccgSubSurf_syncFace(ptr nocapture noundef %0, ptr noundef %1, i32 noundef %2, ptr nocapture noundef readonly %3, ptr noundef writeonly %4) local_unnamed_addr #1 {
  %6 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 26
  %7 = load i32, ptr %6, align 8, !tbaa !75
  %8 = icmp slt i32 %7, %2
  br i1 %8, label %9, label %25

9:                                                ; preds = %5
  %10 = shl nsw i32 %7, 1
  %11 = tail call i32 @llvm.smax.i32(i32 %10, i32 %2)
  store i32 %11, ptr %6, align 8, !tbaa !75
  %12 = load ptr, ptr @MEM_reallocN_id, align 8, !tbaa !14
  %13 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 27
  %14 = load ptr, ptr %13, align 8, !tbaa !59
  %15 = sext i32 %11 to i64
  %16 = shl nsw i64 %15, 3
  %17 = tail call ptr %12(ptr noundef %14, i64 noundef %16, ptr noundef nonnull @__func__.ccgSubSurf_syncFace) #23
  store ptr %17, ptr %13, align 8, !tbaa !59
  %18 = load ptr, ptr @MEM_reallocN_id, align 8, !tbaa !14
  %19 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 28
  %20 = load ptr, ptr %19, align 8, !tbaa !60
  %21 = load i32, ptr %6, align 8, !tbaa !75
  %22 = sext i32 %21 to i64
  %23 = shl nsw i64 %22, 3
  %24 = tail call ptr %18(ptr noundef %20, i64 noundef %23, ptr noundef nonnull @__func__.ccgSubSurf_syncFace) #23
  store ptr %24, ptr %19, align 8, !tbaa !60
  br label %25

25:                                               ; preds = %9, %5
  %26 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 22
  %27 = load i32, ptr %26, align 4, !tbaa !42
  switch i32 %27, label %612 [
    i32 4, label %28
    i32 1, label %281
    i32 2, label %281
    i32 3, label %282
  ]

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !29
  %31 = load ptr, ptr %30, align 8, !tbaa !26
  %32 = getelementptr i8, ptr %30, i64 12
  %33 = load i32, ptr %32, align 4, !tbaa !24
  %34 = ptrtoint ptr %1 to i64
  %35 = zext i32 %33 to i64
  %36 = urem i64 %34, %35
  %37 = shl nuw i64 %36, 32
  %38 = ashr exact i64 %37, 32
  %39 = getelementptr inbounds ptr, ptr %31, i64 %38
  br label %40

40:                                               ; preds = %44, %28
  %41 = phi ptr [ %39, %28 ], [ %42, %44 ]
  %42 = load ptr, ptr %41, align 8, !tbaa !14
  %43 = icmp eq ptr %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct._EHEntry, ptr %42, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !76
  %47 = icmp eq ptr %46, %1
  br i1 %47, label %48, label %40, !llvm.loop !77

48:                                               ; preds = %44, %40
  %49 = icmp sgt i32 %2, 0
  br i1 %49, label %50, label %131

50:                                               ; preds = %48
  %51 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 27
  %52 = zext i32 %2 to i64
  br label %58

53:                                               ; preds = %80
  br i1 %49, label %54, label %131

54:                                               ; preds = %53
  %55 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 27
  %56 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 28
  %57 = zext i32 %2 to i64
  br label %85

58:                                               ; preds = %50, %80
  %59 = phi i64 [ 0, %50 ], [ %83, %80 ]
  %60 = load ptr, ptr %0, align 8, !tbaa !27
  %61 = getelementptr inbounds ptr, ptr %3, i64 %59
  %62 = load ptr, ptr %61, align 8, !tbaa !14
  %63 = load ptr, ptr %60, align 8, !tbaa !26
  %64 = getelementptr i8, ptr %60, i64 12
  %65 = load i32, ptr %64, align 4, !tbaa !24
  %66 = ptrtoint ptr %62 to i64
  %67 = zext i32 %65 to i64
  %68 = urem i64 %66, %67
  %69 = shl nuw i64 %68, 32
  %70 = ashr exact i64 %69, 32
  %71 = getelementptr inbounds ptr, ptr %63, i64 %70
  br label %72

72:                                               ; preds = %76, %58
  %73 = phi ptr [ %71, %58 ], [ %74, %76 ]
  %74 = load ptr, ptr %73, align 8, !tbaa !14
  %75 = icmp eq ptr %74, null
  br i1 %75, label %80, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct._EHEntry, ptr %74, i64 0, i32 1
  %78 = load ptr, ptr %77, align 8, !tbaa !76
  %79 = icmp eq ptr %78, %62
  br i1 %79, label %80, label %72, !llvm.loop !117

80:                                               ; preds = %72, %76
  %81 = load ptr, ptr %51, align 8, !tbaa !59
  %82 = getelementptr inbounds ptr, ptr %81, i64 %59
  store ptr %74, ptr %82, align 8, !tbaa !14
  %83 = add nuw nsw i64 %59, 1
  %84 = icmp eq i64 %83, %52
  br i1 %84, label %53, label %58, !llvm.loop !121

85:                                               ; preds = %54, %126
  %86 = phi i64 [ 0, %54 ], [ %90, %126 ]
  %87 = load ptr, ptr %55, align 8, !tbaa !59
  %88 = getelementptr inbounds ptr, ptr %87, i64 %86
  %89 = load ptr, ptr %88, align 8, !tbaa !14
  %90 = add nuw nsw i64 %86, 1
  %91 = icmp eq i64 %90, %57
  %92 = and i64 %90, 4294967295
  %93 = select i1 %91, i64 0, i64 %92
  %94 = getelementptr inbounds ptr, ptr %87, i64 %93
  %95 = load ptr, ptr %94, align 8, !tbaa !14
  %96 = getelementptr inbounds %struct.CCGVert, ptr %89, i64 0, i32 2
  %97 = load i16, ptr %96, align 8, !tbaa !79
  %98 = sext i16 %97 to i32
  %99 = icmp sgt i16 %97, 0
  br i1 %99, label %100, label %126

100:                                              ; preds = %85
  %101 = getelementptr inbounds %struct.CCGVert, ptr %89, i64 0, i32 6
  %102 = load ptr, ptr %101, align 8, !tbaa !56
  %103 = zext i32 %98 to i64
  br label %107

104:                                              ; preds = %122
  %105 = add nuw nsw i64 %108, 1
  %106 = icmp eq i64 %105, %103
  br i1 %106, label %126, label %107, !llvm.loop !122

107:                                              ; preds = %104, %100
  %108 = phi i64 [ 0, %100 ], [ %105, %104 ]
  %109 = trunc i64 %108 to i32
  %110 = xor i32 %109, -1
  %111 = add i32 %110, %98
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds ptr, ptr %102, i64 %112
  %114 = load ptr, ptr %113, align 8, !tbaa !14
  %115 = getelementptr inbounds %struct.CCGEdge, ptr %114, i64 0, i32 5
  %116 = load ptr, ptr %115, align 8, !tbaa !83
  %117 = icmp eq ptr %116, %89
  %118 = getelementptr inbounds %struct.CCGEdge, ptr %114, i64 0, i32 6
  %119 = load ptr, ptr %118, align 8, !tbaa !85
  %120 = icmp eq ptr %119, %95
  %121 = select i1 %117, i1 %120, i1 false
  br i1 %121, label %126, label %122

122:                                              ; preds = %107
  %123 = icmp eq ptr %119, %89
  %124 = icmp eq ptr %116, %95
  %125 = and i1 %124, %123
  br i1 %125, label %126, label %104

126:                                              ; preds = %104, %107, %122, %85
  %127 = phi ptr [ null, %85 ], [ %114, %107 ], [ null, %104 ], [ %114, %122 ]
  %128 = load ptr, ptr %56, align 8, !tbaa !60
  %129 = getelementptr inbounds ptr, ptr %128, i64 %86
  store ptr %127, ptr %129, align 8, !tbaa !14
  %130 = icmp eq i64 %90, %57
  br i1 %130, label %131, label %85, !llvm.loop !123

131:                                              ; preds = %126, %48, %53
  br i1 %43, label %233, label %132

132:                                              ; preds = %131
  %133 = getelementptr inbounds %struct.CCGFace, ptr %42, i64 0, i32 2
  %134 = load i16, ptr %133, align 8, !tbaa !89
  %135 = sext i16 %134 to i32
  %136 = icmp eq i32 %135, %2
  br i1 %136, label %140, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 27
  %139 = load ptr, ptr %138, align 8, !tbaa !59
  br label %155

140:                                              ; preds = %132
  %141 = getelementptr inbounds %struct.CCGFace, ptr %42, i64 1
  %142 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 27
  %143 = load ptr, ptr %142, align 8, !tbaa !59
  %144 = sext i32 %2 to i64
  %145 = shl nsw i64 %144, 3
  %146 = tail call i32 @bcmp(ptr nonnull %141, ptr %143, i64 %145)
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %155

148:                                              ; preds = %140
  %149 = sext i16 %134 to i64
  %150 = getelementptr inbounds ptr, ptr %141, i64 %149
  %151 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 28
  %152 = load ptr, ptr %151, align 8, !tbaa !60
  %153 = tail call i32 @bcmp(ptr nonnull %150, ptr %152, i64 %145)
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %608, label %155

155:                                              ; preds = %137, %140, %148
  %156 = phi ptr [ %139, %137 ], [ %143, %140 ], [ %143, %148 ]
  %157 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 28
  %158 = load ptr, ptr %157, align 8, !tbaa !60
  %159 = tail call fastcc ptr @_face_new(ptr noundef %1, ptr noundef %156, ptr noundef %158, i32 noundef %2, ptr noundef nonnull %0)
  %160 = load i16, ptr %133, align 8, !tbaa !89
  %161 = sext i16 %160 to i32
  %162 = sub i32 %2, %161
  %163 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 7
  %164 = load i32, ptr %163, align 4, !tbaa !66
  %165 = add nsw i32 %162, %164
  store i32 %165, ptr %163, align 4, !tbaa !66
  store ptr %159, ptr %41, align 8, !tbaa !14
  %166 = load ptr, ptr %42, align 8, !tbaa !87
  store ptr %166, ptr %159, align 8, !tbaa !87
  %167 = icmp sgt i16 %160, 0
  br i1 %167, label %168, label %228

168:                                              ; preds = %155
  %169 = zext i16 %160 to i64
  %170 = getelementptr inbounds %struct.CCGFace, ptr %42, i64 1
  %171 = getelementptr inbounds ptr, ptr %170, i64 %169
  br label %172

172:                                              ; preds = %221, %168
  %173 = phi i64 [ 0, %168 ], [ %226, %221 ]
  %174 = getelementptr inbounds ptr, ptr %170, i64 %173
  %175 = load ptr, ptr %174, align 8, !tbaa !14
  %176 = getelementptr inbounds %struct.CCGVert, ptr %175, i64 0, i32 3
  %177 = load i16, ptr %176, align 2, !tbaa !78
  %178 = icmp sgt i16 %177, 0
  br i1 %178, label %179, label %197

179:                                              ; preds = %172
  %180 = zext i16 %177 to i64
  %181 = getelementptr inbounds %struct.CCGVert, ptr %175, i64 0, i32 7
  %182 = load ptr, ptr %181, align 8, !tbaa !58
  br label %186

183:                                              ; preds = %186
  %184 = add nuw nsw i64 %187, 1
  %185 = icmp eq i64 %184, %180
  br i1 %185, label %197, label %186, !llvm.loop !90

186:                                              ; preds = %183, %179
  %187 = phi i64 [ 0, %179 ], [ %184, %183 ]
  %188 = getelementptr inbounds ptr, ptr %182, i64 %187
  %189 = load ptr, ptr %188, align 8, !tbaa !14
  %190 = icmp eq ptr %189, %42
  br i1 %190, label %191, label %183

191:                                              ; preds = %186
  %192 = getelementptr inbounds ptr, ptr %182, i64 %187
  %193 = add i16 %177, -1
  store i16 %193, ptr %176, align 2, !tbaa !78
  %194 = sext i16 %193 to i64
  %195 = getelementptr inbounds ptr, ptr %182, i64 %194
  %196 = load ptr, ptr %195, align 8, !tbaa !14
  store ptr %196, ptr %192, align 8, !tbaa !14
  br label %197

197:                                              ; preds = %183, %191, %172
  %198 = getelementptr inbounds ptr, ptr %171, i64 %173
  %199 = load ptr, ptr %198, align 8, !tbaa !14
  %200 = getelementptr inbounds %struct.CCGEdge, ptr %199, i64 0, i32 2
  %201 = load i16, ptr %200, align 8, !tbaa !81
  %202 = icmp sgt i16 %201, 0
  br i1 %202, label %203, label %221

203:                                              ; preds = %197
  %204 = zext i16 %201 to i64
  %205 = getelementptr inbounds %struct.CCGEdge, ptr %199, i64 0, i32 7
  %206 = load ptr, ptr %205, align 8, !tbaa !52
  br label %210

207:                                              ; preds = %210
  %208 = add nuw nsw i64 %211, 1
  %209 = icmp eq i64 %208, %204
  br i1 %209, label %221, label %210, !llvm.loop !91

210:                                              ; preds = %207, %203
  %211 = phi i64 [ 0, %203 ], [ %208, %207 ]
  %212 = getelementptr inbounds ptr, ptr %206, i64 %211
  %213 = load ptr, ptr %212, align 8, !tbaa !14
  %214 = icmp eq ptr %213, %42
  br i1 %214, label %215, label %207

215:                                              ; preds = %210
  %216 = getelementptr inbounds ptr, ptr %206, i64 %211
  %217 = add i16 %201, -1
  store i16 %217, ptr %200, align 8, !tbaa !81
  %218 = sext i16 %217 to i64
  %219 = getelementptr inbounds ptr, ptr %206, i64 %218
  %220 = load ptr, ptr %219, align 8, !tbaa !14
  store ptr %220, ptr %216, align 8, !tbaa !14
  br label %221

221:                                              ; preds = %207, %215, %197
  %222 = load ptr, ptr %174, align 8, !tbaa !14
  %223 = getelementptr inbounds %struct.CCGVert, ptr %222, i64 0, i32 4
  %224 = load i16, ptr %223, align 4, !tbaa !86
  %225 = or i16 %224, 1
  store i16 %225, ptr %223, align 4, !tbaa !86
  %226 = add nuw nsw i64 %173, 1
  %227 = icmp eq i64 %226, %169
  br i1 %227, label %228, label %172, !llvm.loop !92

228:                                              ; preds = %221, %155
  %229 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4, i32 2
  %230 = load ptr, ptr %229, align 8, !tbaa !48
  %231 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 5
  %232 = load ptr, ptr %231, align 8, !tbaa !15
  tail call void %230(ptr noundef %232, ptr noundef nonnull %42) #23
  br label %243

233:                                              ; preds = %131
  %234 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 27
  %235 = load ptr, ptr %234, align 8, !tbaa !59
  %236 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 28
  %237 = load ptr, ptr %236, align 8, !tbaa !60
  %238 = tail call fastcc ptr @_face_new(ptr noundef %1, ptr noundef %235, ptr noundef %237, i32 noundef %2, ptr noundef %0)
  %239 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 7
  %240 = load i32, ptr %239, align 4, !tbaa !66
  %241 = add nsw i32 %240, %2
  store i32 %241, ptr %239, align 4, !tbaa !66
  %242 = load ptr, ptr %29, align 8, !tbaa !29
  tail call fastcc void @_ehash_insert(ptr noundef %242, ptr noundef %238)
  br label %243

243:                                              ; preds = %233, %228
  %244 = phi ptr [ %238, %233 ], [ %159, %228 ]
  br i1 %49, label %245, label %608

245:                                              ; preds = %243
  %246 = getelementptr inbounds %struct.CCGFace, ptr %244, i64 1
  %247 = zext i32 %2 to i64
  %248 = and i64 %247, 3
  %249 = icmp ult i32 %2, 4
  br i1 %249, label %566, label %250

250:                                              ; preds = %245
  %251 = and i64 %247, 4294967292
  br label %252

252:                                              ; preds = %252, %250
  %253 = phi i64 [ 0, %250 ], [ %278, %252 ]
  %254 = phi i64 [ 0, %250 ], [ %279, %252 ]
  %255 = getelementptr inbounds ptr, ptr %246, i64 %253
  %256 = load ptr, ptr %255, align 8, !tbaa !14
  %257 = getelementptr inbounds %struct.CCGVert, ptr %256, i64 0, i32 4
  %258 = load i16, ptr %257, align 4, !tbaa !86
  %259 = or i16 %258, 1
  store i16 %259, ptr %257, align 4, !tbaa !86
  %260 = or i64 %253, 1
  %261 = getelementptr inbounds ptr, ptr %246, i64 %260
  %262 = load ptr, ptr %261, align 8, !tbaa !14
  %263 = getelementptr inbounds %struct.CCGVert, ptr %262, i64 0, i32 4
  %264 = load i16, ptr %263, align 4, !tbaa !86
  %265 = or i16 %264, 1
  store i16 %265, ptr %263, align 4, !tbaa !86
  %266 = or i64 %253, 2
  %267 = getelementptr inbounds ptr, ptr %246, i64 %266
  %268 = load ptr, ptr %267, align 8, !tbaa !14
  %269 = getelementptr inbounds %struct.CCGVert, ptr %268, i64 0, i32 4
  %270 = load i16, ptr %269, align 4, !tbaa !86
  %271 = or i16 %270, 1
  store i16 %271, ptr %269, align 4, !tbaa !86
  %272 = or i64 %253, 3
  %273 = getelementptr inbounds ptr, ptr %246, i64 %272
  %274 = load ptr, ptr %273, align 8, !tbaa !14
  %275 = getelementptr inbounds %struct.CCGVert, ptr %274, i64 0, i32 4
  %276 = load i16, ptr %275, align 4, !tbaa !86
  %277 = or i16 %276, 1
  store i16 %277, ptr %275, align 4, !tbaa !86
  %278 = add nuw nsw i64 %253, 4
  %279 = add i64 %254, 4
  %280 = icmp eq i64 %279, %251
  br i1 %280, label %566, label %252, !llvm.loop !124

281:                                              ; preds = %25, %25
  store i32 3, ptr %26, align 4, !tbaa !42
  br label %282

282:                                              ; preds = %25, %281
  %283 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 25
  %284 = load ptr, ptr %283, align 8, !tbaa !43
  %285 = load ptr, ptr %284, align 8, !tbaa !26
  %286 = getelementptr i8, ptr %284, i64 12
  %287 = load i32, ptr %286, align 4, !tbaa !24
  %288 = ptrtoint ptr %1 to i64
  %289 = zext i32 %287 to i64
  %290 = urem i64 %288, %289
  %291 = shl nuw i64 %290, 32
  %292 = ashr exact i64 %291, 32
  %293 = getelementptr inbounds ptr, ptr %285, i64 %292
  br label %294

294:                                              ; preds = %298, %282
  %295 = phi ptr [ %293, %282 ], [ %296, %298 ]
  %296 = load ptr, ptr %295, align 8, !tbaa !14
  %297 = icmp eq ptr %296, null
  br i1 %297, label %302, label %298

298:                                              ; preds = %294
  %299 = getelementptr inbounds %struct._EHEntry, ptr %296, i64 0, i32 1
  %300 = load ptr, ptr %299, align 8, !tbaa !76
  %301 = icmp eq ptr %300, %1
  br i1 %301, label %302, label %294, !llvm.loop !77

302:                                              ; preds = %298, %294
  %303 = icmp sgt i32 %2, 0
  br i1 %303, label %304, label %440

304:                                              ; preds = %302
  %305 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 27
  %306 = zext i32 %2 to i64
  br label %322

307:                                              ; preds = %344
  %308 = add nuw nsw i64 %323, 1
  %309 = icmp eq i64 %308, %306
  br i1 %309, label %310, label %322, !llvm.loop !125

310:                                              ; preds = %307
  br i1 %303, label %311, label %440

311:                                              ; preds = %310
  %312 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 27
  %313 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 28
  %314 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 8
  %315 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 9
  %316 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 1
  %317 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 1
  %318 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %319 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %320 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 10
  %321 = zext i32 %2 to i64
  br label %351

322:                                              ; preds = %304, %307
  %323 = phi i64 [ 0, %304 ], [ %308, %307 ]
  %324 = load ptr, ptr %0, align 8, !tbaa !27
  %325 = getelementptr inbounds ptr, ptr %3, i64 %323
  %326 = load ptr, ptr %325, align 8, !tbaa !14
  %327 = load ptr, ptr %324, align 8, !tbaa !26
  %328 = getelementptr i8, ptr %324, i64 12
  %329 = load i32, ptr %328, align 4, !tbaa !24
  %330 = ptrtoint ptr %326 to i64
  %331 = zext i32 %329 to i64
  %332 = urem i64 %330, %331
  %333 = shl nuw i64 %332, 32
  %334 = ashr exact i64 %333, 32
  %335 = getelementptr inbounds ptr, ptr %327, i64 %334
  br label %336

336:                                              ; preds = %340, %322
  %337 = phi ptr [ %335, %322 ], [ %338, %340 ]
  %338 = load ptr, ptr %337, align 8, !tbaa !14
  %339 = icmp eq ptr %338, null
  br i1 %339, label %344, label %340

340:                                              ; preds = %336
  %341 = getelementptr inbounds %struct._EHEntry, ptr %338, i64 0, i32 1
  %342 = load ptr, ptr %341, align 8, !tbaa !76
  %343 = icmp eq ptr %342, %326
  br i1 %343, label %344, label %336, !llvm.loop !117

344:                                              ; preds = %336, %340
  %345 = load ptr, ptr %305, align 8, !tbaa !59
  %346 = getelementptr inbounds ptr, ptr %345, i64 %323
  store ptr %338, ptr %346, align 8, !tbaa !14
  %347 = load ptr, ptr %305, align 8, !tbaa !59
  %348 = getelementptr inbounds ptr, ptr %347, i64 %323
  %349 = load ptr, ptr %348, align 8, !tbaa !14
  %350 = icmp eq ptr %349, null
  br i1 %350, label %612, label %307

351:                                              ; preds = %311, %438
  %352 = phi i64 [ 0, %311 ], [ %356, %438 ]
  %353 = load ptr, ptr %312, align 8, !tbaa !59
  %354 = getelementptr inbounds ptr, ptr %353, i64 %352
  %355 = load ptr, ptr %354, align 8, !tbaa !14
  %356 = add nuw nsw i64 %352, 1
  %357 = icmp eq i64 %356, %321
  %358 = and i64 %356, 4294967295
  %359 = select i1 %357, i64 0, i64 %358
  %360 = getelementptr inbounds ptr, ptr %353, i64 %359
  %361 = load ptr, ptr %360, align 8, !tbaa !14
  %362 = getelementptr inbounds %struct.CCGVert, ptr %355, i64 0, i32 2
  %363 = load i16, ptr %362, align 8, !tbaa !79
  %364 = sext i16 %363 to i32
  %365 = icmp sgt i16 %363, 0
  br i1 %365, label %366, label %392

366:                                              ; preds = %351
  %367 = getelementptr inbounds %struct.CCGVert, ptr %355, i64 0, i32 6
  %368 = load ptr, ptr %367, align 8, !tbaa !56
  %369 = zext i32 %364 to i64
  br label %373

370:                                              ; preds = %388
  %371 = add nuw nsw i64 %374, 1
  %372 = icmp eq i64 %371, %369
  br i1 %372, label %392, label %373, !llvm.loop !122

373:                                              ; preds = %370, %366
  %374 = phi i64 [ 0, %366 ], [ %371, %370 ]
  %375 = trunc i64 %374 to i32
  %376 = xor i32 %375, -1
  %377 = add i32 %376, %364
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds ptr, ptr %368, i64 %378
  %380 = load ptr, ptr %379, align 8, !tbaa !14
  %381 = getelementptr inbounds %struct.CCGEdge, ptr %380, i64 0, i32 5
  %382 = load ptr, ptr %381, align 8, !tbaa !83
  %383 = icmp eq ptr %382, %355
  %384 = getelementptr inbounds %struct.CCGEdge, ptr %380, i64 0, i32 6
  %385 = load ptr, ptr %384, align 8, !tbaa !85
  %386 = icmp eq ptr %385, %361
  %387 = select i1 %383, i1 %386, i1 false
  br i1 %387, label %392, label %388

388:                                              ; preds = %373
  %389 = icmp eq ptr %385, %355
  %390 = icmp eq ptr %382, %361
  %391 = and i1 %390, %389
  br i1 %391, label %392, label %370

392:                                              ; preds = %370, %373, %388, %351
  %393 = phi ptr [ null, %351 ], [ %380, %373 ], [ null, %370 ], [ %380, %388 ]
  %394 = load ptr, ptr %313, align 8, !tbaa !60
  %395 = getelementptr inbounds ptr, ptr %394, i64 %352
  store ptr %393, ptr %395, align 8, !tbaa !14
  %396 = load ptr, ptr %313, align 8, !tbaa !60
  %397 = getelementptr inbounds ptr, ptr %396, i64 %352
  %398 = load ptr, ptr %397, align 8, !tbaa !14
  %399 = icmp eq ptr %398, null
  br i1 %399, label %400, label %438

400:                                              ; preds = %392
  %401 = load i32, ptr %314, align 8, !tbaa !62
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %612, label %403

403:                                              ; preds = %400
  %404 = load ptr, ptr %312, align 8, !tbaa !59
  %405 = getelementptr inbounds ptr, ptr %404, i64 %352
  %406 = load ptr, ptr %405, align 8, !tbaa !14
  %407 = getelementptr inbounds ptr, ptr %404, i64 %359
  %408 = load ptr, ptr %407, align 8, !tbaa !14
  %409 = load float, ptr %315, align 4, !tbaa !63
  %410 = tail call fastcc ptr @_edge_new(ptr noundef nonnull inttoptr (i64 -1 to ptr), ptr noundef %406, ptr noundef %408, float noundef nofpclass(nan inf) %409, ptr noundef nonnull %0)
  %411 = load ptr, ptr %313, align 8, !tbaa !60
  %412 = getelementptr inbounds ptr, ptr %411, i64 %352
  store ptr %410, ptr %412, align 8, !tbaa !14
  %413 = load ptr, ptr %316, align 8, !tbaa !28
  tail call fastcc void @_ehash_insert(ptr noundef %413, ptr noundef %410)
  %414 = getelementptr inbounds %struct.CCGEdge, ptr %410, i64 0, i32 5
  %415 = load ptr, ptr %414, align 8, !tbaa !83
  %416 = getelementptr inbounds %struct.CCGVert, ptr %415, i64 0, i32 4
  %417 = load i16, ptr %416, align 4, !tbaa !86
  %418 = or i16 %417, 1
  store i16 %418, ptr %416, align 4, !tbaa !86
  %419 = getelementptr inbounds %struct.CCGEdge, ptr %410, i64 0, i32 6
  %420 = load ptr, ptr %419, align 8, !tbaa !85
  %421 = getelementptr inbounds %struct.CCGVert, ptr %420, i64 0, i32 4
  %422 = load i16, ptr %421, align 4, !tbaa !86
  %423 = or i16 %422, 1
  store i16 %423, ptr %421, align 4, !tbaa !86
  %424 = load i32, ptr %317, align 4, !tbaa !64
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %438, label %426

426:                                              ; preds = %403
  %427 = getelementptr inbounds %struct.CCGEdge, ptr %410, i64 1
  %428 = load i32, ptr %318, align 8, !tbaa !37
  %429 = load i32, ptr %319, align 8, !tbaa !32
  %430 = add nsw i32 %429, 1
  %431 = shl nuw i32 1, %430
  %432 = add i32 %431, %429
  %433 = mul nsw i32 %432, %428
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds i8, ptr %427, i64 %434
  %436 = load ptr, ptr %320, align 8, !tbaa !61
  %437 = sext i32 %424 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %435, ptr align 1 %436, i64 %437, i1 false)
  br label %438

438:                                              ; preds = %403, %426, %392
  %439 = icmp eq i64 %356, %321
  br i1 %439, label %440, label %351, !llvm.loop !126

440:                                              ; preds = %438, %302, %310
  br i1 %297, label %461, label %441

441:                                              ; preds = %440
  %442 = getelementptr inbounds %struct.CCGFace, ptr %296, i64 0, i32 2
  %443 = load i16, ptr %442, align 8, !tbaa !89
  %444 = sext i16 %443 to i32
  %445 = icmp eq i32 %444, %2
  br i1 %445, label %446, label %461

446:                                              ; preds = %441
  %447 = getelementptr inbounds %struct.CCGFace, ptr %296, i64 1
  %448 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 27
  %449 = load ptr, ptr %448, align 8, !tbaa !59
  %450 = sext i32 %2 to i64
  %451 = shl nsw i64 %450, 3
  %452 = tail call i32 @bcmp(ptr nonnull %447, ptr %449, i64 %451)
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %454, label %461

454:                                              ; preds = %446
  %455 = sext i16 %443 to i64
  %456 = getelementptr inbounds ptr, ptr %447, i64 %455
  %457 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 28
  %458 = load ptr, ptr %457, align 8, !tbaa !60
  %459 = tail call i32 @bcmp(ptr nonnull %456, ptr %458, i64 %451)
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %508, label %461

461:                                              ; preds = %441, %446, %454, %440
  %462 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 27
  %463 = load ptr, ptr %462, align 8, !tbaa !59
  %464 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 28
  %465 = load ptr, ptr %464, align 8, !tbaa !60
  %466 = tail call fastcc ptr @_face_new(ptr noundef %1, ptr noundef %463, ptr noundef %465, i32 noundef %2, ptr noundef %0)
  %467 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 2
  %468 = load ptr, ptr %467, align 8, !tbaa !29
  tail call fastcc void @_ehash_insert(ptr noundef %468, ptr noundef %466)
  %469 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 7
  %470 = load i32, ptr %469, align 4, !tbaa !66
  %471 = add nsw i32 %470, %2
  store i32 %471, ptr %469, align 4, !tbaa !66
  br i1 %303, label %472, label %608

472:                                              ; preds = %461
  %473 = getelementptr inbounds %struct.CCGFace, ptr %466, i64 1
  %474 = zext i32 %2 to i64
  %475 = and i64 %474, 3
  %476 = icmp ult i32 %2, 4
  br i1 %476, label %580, label %477

477:                                              ; preds = %472
  %478 = and i64 %474, 4294967292
  br label %479

479:                                              ; preds = %479, %477
  %480 = phi i64 [ 0, %477 ], [ %505, %479 ]
  %481 = phi i64 [ 0, %477 ], [ %506, %479 ]
  %482 = getelementptr inbounds ptr, ptr %473, i64 %480
  %483 = load ptr, ptr %482, align 8, !tbaa !14
  %484 = getelementptr inbounds %struct.CCGVert, ptr %483, i64 0, i32 4
  %485 = load i16, ptr %484, align 4, !tbaa !86
  %486 = or i16 %485, 1
  store i16 %486, ptr %484, align 4, !tbaa !86
  %487 = or i64 %480, 1
  %488 = getelementptr inbounds ptr, ptr %473, i64 %487
  %489 = load ptr, ptr %488, align 8, !tbaa !14
  %490 = getelementptr inbounds %struct.CCGVert, ptr %489, i64 0, i32 4
  %491 = load i16, ptr %490, align 4, !tbaa !86
  %492 = or i16 %491, 1
  store i16 %492, ptr %490, align 4, !tbaa !86
  %493 = or i64 %480, 2
  %494 = getelementptr inbounds ptr, ptr %473, i64 %493
  %495 = load ptr, ptr %494, align 8, !tbaa !14
  %496 = getelementptr inbounds %struct.CCGVert, ptr %495, i64 0, i32 4
  %497 = load i16, ptr %496, align 4, !tbaa !86
  %498 = or i16 %497, 1
  store i16 %498, ptr %496, align 4, !tbaa !86
  %499 = or i64 %480, 3
  %500 = getelementptr inbounds ptr, ptr %473, i64 %499
  %501 = load ptr, ptr %500, align 8, !tbaa !14
  %502 = getelementptr inbounds %struct.CCGVert, ptr %501, i64 0, i32 4
  %503 = load i16, ptr %502, align 4, !tbaa !86
  %504 = or i16 %503, 1
  store i16 %504, ptr %502, align 4, !tbaa !86
  %505 = add nuw nsw i64 %480, 4
  %506 = add i64 %481, 4
  %507 = icmp eq i64 %506, %478
  br i1 %507, label %580, label %479, !llvm.loop !127

508:                                              ; preds = %454
  %509 = load ptr, ptr %296, align 8, !tbaa !87
  store ptr %509, ptr %295, align 8, !tbaa !14
  %510 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 2
  %511 = load ptr, ptr %510, align 8, !tbaa !29
  tail call fastcc void @_ehash_insert(ptr noundef %511, ptr noundef nonnull %296)
  %512 = getelementptr inbounds %struct.CCGFace, ptr %296, i64 0, i32 3
  store i16 0, ptr %512, align 2, !tbaa !128
  %513 = load i16, ptr %442, align 8, !tbaa !89
  %514 = sext i16 %513 to i32
  %515 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 7
  %516 = load i32, ptr %515, align 4, !tbaa !66
  %517 = add nsw i32 %516, %514
  store i32 %517, ptr %515, align 4, !tbaa !66
  %518 = icmp sgt i16 %513, 0
  br i1 %518, label %519, label %608

519:                                              ; preds = %508
  %520 = zext i32 %514 to i64
  br label %524

521:                                              ; preds = %524
  %522 = add nuw nsw i64 %525, 1
  %523 = icmp eq i64 %522, %520
  br i1 %523, label %608, label %524, !llvm.loop !129

524:                                              ; preds = %519, %521
  %525 = phi i64 [ 0, %519 ], [ %522, %521 ]
  %526 = getelementptr inbounds ptr, ptr %447, i64 %525
  %527 = load ptr, ptr %526, align 8, !tbaa !14
  %528 = getelementptr inbounds %struct.CCGVert, ptr %527, i64 0, i32 4
  %529 = load i16, ptr %528, align 4, !tbaa !86
  %530 = and i16 %529, 2
  %531 = icmp eq i16 %530, 0
  br i1 %531, label %521, label %532

532:                                              ; preds = %524
  %533 = and i64 %520, 3
  %534 = icmp ult i16 %513, 4
  br i1 %534, label %594, label %535

535:                                              ; preds = %532
  %536 = and i64 %520, 4294967292
  br label %537

537:                                              ; preds = %537, %535
  %538 = phi i64 [ 0, %535 ], [ %563, %537 ]
  %539 = phi i64 [ 0, %535 ], [ %564, %537 ]
  %540 = getelementptr inbounds ptr, ptr %447, i64 %538
  %541 = load ptr, ptr %540, align 8, !tbaa !14
  %542 = getelementptr inbounds %struct.CCGVert, ptr %541, i64 0, i32 4
  %543 = load i16, ptr %542, align 4, !tbaa !86
  %544 = or i16 %543, 1
  store i16 %544, ptr %542, align 4, !tbaa !86
  %545 = or i64 %538, 1
  %546 = getelementptr inbounds ptr, ptr %447, i64 %545
  %547 = load ptr, ptr %546, align 8, !tbaa !14
  %548 = getelementptr inbounds %struct.CCGVert, ptr %547, i64 0, i32 4
  %549 = load i16, ptr %548, align 4, !tbaa !86
  %550 = or i16 %549, 1
  store i16 %550, ptr %548, align 4, !tbaa !86
  %551 = or i64 %538, 2
  %552 = getelementptr inbounds ptr, ptr %447, i64 %551
  %553 = load ptr, ptr %552, align 8, !tbaa !14
  %554 = getelementptr inbounds %struct.CCGVert, ptr %553, i64 0, i32 4
  %555 = load i16, ptr %554, align 4, !tbaa !86
  %556 = or i16 %555, 1
  store i16 %556, ptr %554, align 4, !tbaa !86
  %557 = or i64 %538, 3
  %558 = getelementptr inbounds ptr, ptr %447, i64 %557
  %559 = load ptr, ptr %558, align 8, !tbaa !14
  %560 = getelementptr inbounds %struct.CCGVert, ptr %559, i64 0, i32 4
  %561 = load i16, ptr %560, align 4, !tbaa !86
  %562 = or i16 %561, 1
  store i16 %562, ptr %560, align 4, !tbaa !86
  %563 = add nuw nsw i64 %538, 4
  %564 = add i64 %539, 4
  %565 = icmp eq i64 %564, %536
  br i1 %565, label %594, label %537, !llvm.loop !130

566:                                              ; preds = %252, %245
  %567 = phi i64 [ 0, %245 ], [ %278, %252 ]
  %568 = icmp eq i64 %248, 0
  br i1 %568, label %608, label %569

569:                                              ; preds = %566, %569
  %570 = phi i64 [ %577, %569 ], [ %567, %566 ]
  %571 = phi i64 [ %578, %569 ], [ 0, %566 ]
  %572 = getelementptr inbounds ptr, ptr %246, i64 %570
  %573 = load ptr, ptr %572, align 8, !tbaa !14
  %574 = getelementptr inbounds %struct.CCGVert, ptr %573, i64 0, i32 4
  %575 = load i16, ptr %574, align 4, !tbaa !86
  %576 = or i16 %575, 1
  store i16 %576, ptr %574, align 4, !tbaa !86
  %577 = add nuw nsw i64 %570, 1
  %578 = add i64 %571, 1
  %579 = icmp eq i64 %578, %248
  br i1 %579, label %608, label %569, !llvm.loop !131

580:                                              ; preds = %479, %472
  %581 = phi i64 [ 0, %472 ], [ %505, %479 ]
  %582 = icmp eq i64 %475, 0
  br i1 %582, label %608, label %583

583:                                              ; preds = %580, %583
  %584 = phi i64 [ %591, %583 ], [ %581, %580 ]
  %585 = phi i64 [ %592, %583 ], [ 0, %580 ]
  %586 = getelementptr inbounds ptr, ptr %473, i64 %584
  %587 = load ptr, ptr %586, align 8, !tbaa !14
  %588 = getelementptr inbounds %struct.CCGVert, ptr %587, i64 0, i32 4
  %589 = load i16, ptr %588, align 4, !tbaa !86
  %590 = or i16 %589, 1
  store i16 %590, ptr %588, align 4, !tbaa !86
  %591 = add nuw nsw i64 %584, 1
  %592 = add i64 %585, 1
  %593 = icmp eq i64 %592, %475
  br i1 %593, label %608, label %583, !llvm.loop !132

594:                                              ; preds = %537, %532
  %595 = phi i64 [ 0, %532 ], [ %563, %537 ]
  %596 = icmp eq i64 %533, 0
  br i1 %596, label %608, label %597

597:                                              ; preds = %594, %597
  %598 = phi i64 [ %605, %597 ], [ %595, %594 ]
  %599 = phi i64 [ %606, %597 ], [ 0, %594 ]
  %600 = getelementptr inbounds ptr, ptr %447, i64 %598
  %601 = load ptr, ptr %600, align 8, !tbaa !14
  %602 = getelementptr inbounds %struct.CCGVert, ptr %601, i64 0, i32 4
  %603 = load i16, ptr %602, align 4, !tbaa !86
  %604 = or i16 %603, 1
  store i16 %604, ptr %602, align 4, !tbaa !86
  %605 = add nuw nsw i64 %598, 1
  %606 = add i64 %599, 1
  %607 = icmp eq i64 %606, %533
  br i1 %607, label %608, label %597, !llvm.loop !133

608:                                              ; preds = %521, %594, %597, %580, %583, %566, %569, %508, %461, %243, %148
  %609 = phi ptr [ %42, %148 ], [ %42, %243 ], [ %466, %461 ], [ %296, %508 ], [ %42, %569 ], [ %42, %566 ], [ %466, %583 ], [ %466, %580 ], [ %296, %597 ], [ %296, %594 ], [ %296, %521 ]
  %610 = icmp eq ptr %4, null
  br i1 %610, label %612, label %611

611:                                              ; preds = %608
  store ptr %609, ptr %4, align 8, !tbaa !14
  br label %612

612:                                              ; preds = %344, %400, %608, %611, %25
  %613 = phi i32 [ 1, %25 ], [ 0, %611 ], [ 0, %608 ], [ 2, %400 ], [ 2, %344 ]
  ret i32 %613
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @_face_new(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3, ptr nocapture noundef readonly %4) unnamed_addr #1 {
  %6 = getelementptr inbounds %struct.CCGSubSurf, ptr %4, i64 0, i32 6
  %7 = load i32, ptr %6, align 8, !tbaa !32
  %8 = add nsw i32 %7, -1
  %9 = shl nuw i32 1, %8
  %10 = add nuw nsw i32 %9, 1
  %11 = add nuw i32 %9, 2
  %12 = mul i32 %11, %3
  %13 = mul i32 %12, %10
  %14 = add nsw i32 %13, 1
  %15 = getelementptr inbounds %struct.CCGSubSurf, ptr %4, i64 0, i32 4
  %16 = load ptr, ptr %15, align 8, !tbaa !36
  %17 = getelementptr %struct.CCGSubSurf, ptr %4, i64 0, i32 5
  %18 = load ptr, ptr %17, align 8, !tbaa !15
  %19 = shl i32 %3, 4
  %20 = add i32 %19, 24
  %21 = getelementptr inbounds %struct.CCGSubSurf, ptr %4, i64 0, i32 3, i32 4
  %22 = load i32, ptr %21, align 8, !tbaa !37
  %23 = mul nsw i32 %14, %22
  %24 = getelementptr inbounds %struct.CCGSubSurf, ptr %4, i64 0, i32 3, i32 2
  %25 = load i32, ptr %24, align 8, !tbaa !72
  %26 = add i32 %20, %25
  %27 = add i32 %26, %23
  %28 = tail call ptr %16(ptr noundef %18, i32 noundef %27) #23
  %29 = trunc i32 %3 to i16
  %30 = getelementptr inbounds %struct.CCGFace, ptr %28, i64 0, i32 2
  store i16 %29, ptr %30, align 8, !tbaa !89
  %31 = getelementptr inbounds %struct.CCGFace, ptr %28, i64 0, i32 1
  store ptr %0, ptr %31, align 8, !tbaa !134
  %32 = getelementptr inbounds %struct.CCGFace, ptr %28, i64 0, i32 3
  store i16 0, ptr %32, align 2, !tbaa !128
  %33 = icmp sgt i32 %3, 0
  br i1 %33, label %34, label %83

34:                                               ; preds = %5
  %35 = getelementptr inbounds %struct.CCGFace, ptr %28, i64 1
  %36 = getelementptr i8, ptr %4, i64 56
  %37 = zext i32 %3 to i64
  br label %38

38:                                               ; preds = %34, %38
  %39 = phi i64 [ 0, %34 ], [ %79, %38 ]
  %40 = getelementptr inbounds ptr, ptr %1, i64 %39
  %41 = load ptr, ptr %40, align 8, !tbaa !14
  %42 = getelementptr inbounds ptr, ptr %35, i64 %39
  store ptr %41, ptr %42, align 8, !tbaa !14
  %43 = getelementptr inbounds ptr, ptr %2, i64 %39
  %44 = load ptr, ptr %43, align 8, !tbaa !14
  %45 = load i16, ptr %30, align 8, !tbaa !89
  %46 = sext i16 %45 to i64
  %47 = getelementptr inbounds ptr, ptr %35, i64 %46
  %48 = getelementptr inbounds ptr, ptr %47, i64 %39
  store ptr %44, ptr %48, align 8, !tbaa !14
  %49 = load ptr, ptr %40, align 8, !tbaa !14
  %50 = load ptr, ptr %36, align 8, !tbaa !120
  %51 = load ptr, ptr %17, align 8, !tbaa !15
  %52 = getelementptr inbounds %struct.CCGVert, ptr %49, i64 0, i32 7
  %53 = load ptr, ptr %52, align 8, !tbaa !58
  %54 = getelementptr inbounds %struct.CCGVert, ptr %49, i64 0, i32 3
  %55 = load i16, ptr %54, align 2, !tbaa !78
  %56 = sext i16 %55 to i32
  %57 = shl nsw i32 %56, 3
  %58 = add nsw i32 %57, 8
  %59 = tail call ptr %50(ptr noundef %51, ptr noundef %53, i32 noundef %58, i32 noundef %57) #23
  store ptr %59, ptr %52, align 8, !tbaa !58
  %60 = load i16, ptr %54, align 2, !tbaa !78
  %61 = add i16 %60, 1
  store i16 %61, ptr %54, align 2, !tbaa !78
  %62 = sext i16 %60 to i64
  %63 = getelementptr inbounds ptr, ptr %59, i64 %62
  store ptr %28, ptr %63, align 8, !tbaa !14
  %64 = load ptr, ptr %43, align 8, !tbaa !14
  %65 = load ptr, ptr %36, align 8, !tbaa !120
  %66 = load ptr, ptr %17, align 8, !tbaa !15
  %67 = getelementptr inbounds %struct.CCGEdge, ptr %64, i64 0, i32 7
  %68 = load ptr, ptr %67, align 8, !tbaa !52
  %69 = getelementptr inbounds %struct.CCGEdge, ptr %64, i64 0, i32 2
  %70 = load i16, ptr %69, align 8, !tbaa !81
  %71 = sext i16 %70 to i32
  %72 = shl nsw i32 %71, 3
  %73 = add nsw i32 %72, 8
  %74 = tail call ptr %65(ptr noundef %66, ptr noundef %68, i32 noundef %73, i32 noundef %72) #23
  store ptr %74, ptr %67, align 8, !tbaa !52
  %75 = load i16, ptr %69, align 8, !tbaa !81
  %76 = add i16 %75, 1
  store i16 %76, ptr %69, align 8, !tbaa !81
  %77 = sext i16 %75 to i64
  %78 = getelementptr inbounds ptr, ptr %74, i64 %77
  store ptr %28, ptr %78, align 8, !tbaa !14
  %79 = add nuw nsw i64 %39, 1
  %80 = icmp eq i64 %79, %37
  br i1 %80, label %81, label %38, !llvm.loop !135

81:                                               ; preds = %38
  %82 = load i16, ptr %30, align 8, !tbaa !89
  br label %83

83:                                               ; preds = %81, %5
  %84 = phi i16 [ %82, %81 ], [ %29, %5 ]
  %85 = load i32, ptr %6, align 8, !tbaa !32
  %86 = add nsw i32 %85, -1
  %87 = shl nuw i32 1, %86
  %88 = add nuw nsw i32 %87, 1
  %89 = getelementptr inbounds %struct.CCGFace, ptr %28, i64 1
  %90 = sext i16 %84 to i64
  %91 = getelementptr inbounds ptr, ptr %89, i64 %90
  %92 = getelementptr inbounds ptr, ptr %91, i64 %90
  %93 = load i32, ptr %21, align 8, !tbaa !37
  %94 = sext i16 %84 to i32
  %95 = mul nsw i32 %88, %94
  %96 = add nsw i32 %95, 1
  %97 = mul nsw i32 %95, %88
  %98 = add nsw i32 %96, %97
  %99 = mul nsw i32 %98, %93
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i8, ptr %92, i64 %100
  %102 = load i32, ptr %24, align 8, !tbaa !72
  %103 = sext i32 %102 to i64
  tail call void @llvm.memset.p0.i64(ptr nonnull align 1 %101, i8 0, i64 %103, i1 false)
  %104 = getelementptr inbounds %struct.CCGSubSurf, ptr %4, i64 0, i32 18
  %105 = load i32, ptr %104, align 4, !tbaa !67
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %114, label %107

107:                                              ; preds = %83
  %108 = getelementptr inbounds %struct.CCGSubSurf, ptr %4, i64 0, i32 17
  %109 = load i32, ptr %108, align 8, !tbaa !40
  %110 = getelementptr inbounds %struct.CCGSubSurf, ptr %4, i64 0, i32 21
  %111 = load i32, ptr %110, align 8, !tbaa !70
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i8, ptr %101, i64 %112
  store i32 %109, ptr %113, align 4, !tbaa !31
  br label %114

114:                                              ; preds = %107, %83
  ret ptr %28
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local nonnull ptr @ccgSubSurf_getEdgeUserData(ptr nocapture noundef readonly %0, ptr noundef readnone %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.CCGEdge, ptr %1, i64 1
  %4 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %5 = load i32, ptr %4, align 8, !tbaa !37
  %6 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %7 = load i32, ptr %6, align 8, !tbaa !32
  %8 = add nsw i32 %7, 1
  %9 = shl nuw i32 1, %8
  %10 = add i32 %9, %7
  %11 = mul nsw i32 %10, %5
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i8, ptr %3, i64 %12
  ret ptr %13
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @ccgSubSurf_processSync(ptr nocapture noundef %0) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 22
  %3 = load i32, ptr %2, align 4, !tbaa !42
  switch i32 %3, label %5 [
    i32 4, label %4
    i32 0, label %244
  ]

4:                                                ; preds = %1
  store i32 0, ptr %2, align 4, !tbaa !42
  tail call fastcc void @ccgSubSurf__sync(ptr noundef nonnull %0)
  br label %244

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 25
  %7 = load ptr, ptr %6, align 8, !tbaa !43
  %8 = getelementptr inbounds %struct._EHash, ptr %7, i64 0, i32 2
  %9 = load i32, ptr %8, align 4, !tbaa !24
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %95, label %11

11:                                               ; preds = %5
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4, i32 2
  %14 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 5
  br label %18

15:                                               ; preds = %91, %18
  %16 = and i64 %20, 4294967295
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %95, label %18, !llvm.loop !44

18:                                               ; preds = %15, %11
  %19 = phi i64 [ %12, %11 ], [ %20, %15 ]
  %20 = add nsw i64 %19, -1
  %21 = load ptr, ptr %7, align 8, !tbaa !26
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8, !tbaa !14
  %24 = icmp eq ptr %23, null
  br i1 %24, label %15, label %25

25:                                               ; preds = %18, %91
  %26 = phi ptr [ %27, %91 ], [ %23, %18 ]
  %27 = load ptr, ptr %26, align 8, !tbaa !46
  %28 = getelementptr inbounds %struct.CCGFace, ptr %26, i64 0, i32 2
  %29 = load i16, ptr %28, align 8, !tbaa !89
  %30 = icmp sgt i16 %29, 0
  br i1 %30, label %31, label %91

31:                                               ; preds = %25
  %32 = zext i16 %29 to i64
  %33 = getelementptr inbounds %struct.CCGFace, ptr %26, i64 1
  %34 = getelementptr inbounds ptr, ptr %33, i64 %32
  br label %35

35:                                               ; preds = %84, %31
  %36 = phi i64 [ 0, %31 ], [ %89, %84 ]
  %37 = getelementptr inbounds ptr, ptr %33, i64 %36
  %38 = load ptr, ptr %37, align 8, !tbaa !14
  %39 = getelementptr inbounds %struct.CCGVert, ptr %38, i64 0, i32 3
  %40 = load i16, ptr %39, align 2, !tbaa !78
  %41 = icmp sgt i16 %40, 0
  br i1 %41, label %42, label %60

42:                                               ; preds = %35
  %43 = zext i16 %40 to i64
  %44 = getelementptr inbounds %struct.CCGVert, ptr %38, i64 0, i32 7
  %45 = load ptr, ptr %44, align 8, !tbaa !58
  br label %49

46:                                               ; preds = %49
  %47 = add nuw nsw i64 %50, 1
  %48 = icmp eq i64 %47, %43
  br i1 %48, label %60, label %49, !llvm.loop !90

49:                                               ; preds = %46, %42
  %50 = phi i64 [ 0, %42 ], [ %47, %46 ]
  %51 = getelementptr inbounds ptr, ptr %45, i64 %50
  %52 = load ptr, ptr %51, align 8, !tbaa !14
  %53 = icmp eq ptr %52, %26
  br i1 %53, label %54, label %46

54:                                               ; preds = %49
  %55 = getelementptr inbounds ptr, ptr %45, i64 %50
  %56 = add i16 %40, -1
  store i16 %56, ptr %39, align 2, !tbaa !78
  %57 = sext i16 %56 to i64
  %58 = getelementptr inbounds ptr, ptr %45, i64 %57
  %59 = load ptr, ptr %58, align 8, !tbaa !14
  store ptr %59, ptr %55, align 8, !tbaa !14
  br label %60

60:                                               ; preds = %46, %54, %35
  %61 = getelementptr inbounds ptr, ptr %34, i64 %36
  %62 = load ptr, ptr %61, align 8, !tbaa !14
  %63 = getelementptr inbounds %struct.CCGEdge, ptr %62, i64 0, i32 2
  %64 = load i16, ptr %63, align 8, !tbaa !81
  %65 = icmp sgt i16 %64, 0
  br i1 %65, label %66, label %84

66:                                               ; preds = %60
  %67 = zext i16 %64 to i64
  %68 = getelementptr inbounds %struct.CCGEdge, ptr %62, i64 0, i32 7
  %69 = load ptr, ptr %68, align 8, !tbaa !52
  br label %73

70:                                               ; preds = %73
  %71 = add nuw nsw i64 %74, 1
  %72 = icmp eq i64 %71, %67
  br i1 %72, label %84, label %73, !llvm.loop !91

73:                                               ; preds = %70, %66
  %74 = phi i64 [ 0, %66 ], [ %71, %70 ]
  %75 = getelementptr inbounds ptr, ptr %69, i64 %74
  %76 = load ptr, ptr %75, align 8, !tbaa !14
  %77 = icmp eq ptr %76, %26
  br i1 %77, label %78, label %70

78:                                               ; preds = %73
  %79 = getelementptr inbounds ptr, ptr %69, i64 %74
  %80 = add i16 %64, -1
  store i16 %80, ptr %63, align 8, !tbaa !81
  %81 = sext i16 %80 to i64
  %82 = getelementptr inbounds ptr, ptr %69, i64 %81
  %83 = load ptr, ptr %82, align 8, !tbaa !14
  store ptr %83, ptr %79, align 8, !tbaa !14
  br label %84

84:                                               ; preds = %70, %78, %60
  %85 = load ptr, ptr %37, align 8, !tbaa !14
  %86 = getelementptr inbounds %struct.CCGVert, ptr %85, i64 0, i32 4
  %87 = load i16, ptr %86, align 4, !tbaa !86
  %88 = or i16 %87, 1
  store i16 %88, ptr %86, align 4, !tbaa !86
  %89 = add nuw nsw i64 %36, 1
  %90 = icmp eq i64 %89, %32
  br i1 %90, label %91, label %35, !llvm.loop !92

91:                                               ; preds = %84, %25
  %92 = load ptr, ptr %13, align 8, !tbaa !48
  %93 = load ptr, ptr %14, align 8, !tbaa !15
  tail call void %92(ptr noundef %93, ptr noundef nonnull %26) #23
  %94 = icmp eq ptr %27, null
  br i1 %94, label %15, label %25, !llvm.loop !49

95:                                               ; preds = %15, %5
  %96 = getelementptr inbounds %struct._EHash, ptr %7, i64 0, i32 4, i32 2
  %97 = load ptr, ptr %96, align 8, !tbaa !50
  %98 = getelementptr inbounds %struct._EHash, ptr %7, i64 0, i32 5
  %99 = load ptr, ptr %98, align 8, !tbaa !20
  %100 = load ptr, ptr %7, align 8, !tbaa !26
  tail call void %97(ptr noundef %99, ptr noundef %100) #23
  %101 = load ptr, ptr %96, align 8, !tbaa !50
  %102 = load ptr, ptr %98, align 8, !tbaa !20
  tail call void %101(ptr noundef %102, ptr noundef nonnull %7) #23
  %103 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 24
  %104 = load ptr, ptr %103, align 8, !tbaa !51
  %105 = getelementptr inbounds %struct._EHash, ptr %104, i64 0, i32 2
  %106 = load i32, ptr %105, align 4, !tbaa !24
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %189, label %108

108:                                              ; preds = %95
  %109 = sext i32 %106 to i64
  %110 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4, i32 2
  %111 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 5
  br label %115

112:                                              ; preds = %173, %115
  %113 = and i64 %117, 4294967295
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %189, label %115, !llvm.loop !44

115:                                              ; preds = %112, %108
  %116 = phi i64 [ %109, %108 ], [ %117, %112 ]
  %117 = add nsw i64 %116, -1
  %118 = load ptr, ptr %104, align 8, !tbaa !26
  %119 = getelementptr inbounds ptr, ptr %118, i64 %117
  %120 = load ptr, ptr %119, align 8, !tbaa !14
  %121 = icmp eq ptr %120, null
  br i1 %121, label %112, label %122

122:                                              ; preds = %115, %173
  %123 = phi ptr [ %124, %173 ], [ %120, %115 ]
  %124 = load ptr, ptr %123, align 8, !tbaa !46
  %125 = getelementptr inbounds %struct.CCGEdge, ptr %123, i64 0, i32 5
  %126 = load ptr, ptr %125, align 8, !tbaa !83
  %127 = getelementptr inbounds %struct.CCGVert, ptr %126, i64 0, i32 2
  %128 = load i16, ptr %127, align 8, !tbaa !79
  %129 = icmp sgt i16 %128, 0
  br i1 %129, label %130, label %148

130:                                              ; preds = %122
  %131 = zext i16 %128 to i64
  %132 = getelementptr inbounds %struct.CCGVert, ptr %126, i64 0, i32 6
  %133 = load ptr, ptr %132, align 8, !tbaa !56
  br label %137

134:                                              ; preds = %137
  %135 = add nuw nsw i64 %138, 1
  %136 = icmp eq i64 %135, %131
  br i1 %136, label %148, label %137, !llvm.loop !84

137:                                              ; preds = %134, %130
  %138 = phi i64 [ 0, %130 ], [ %135, %134 ]
  %139 = getelementptr inbounds ptr, ptr %133, i64 %138
  %140 = load ptr, ptr %139, align 8, !tbaa !14
  %141 = icmp eq ptr %140, %123
  br i1 %141, label %142, label %134

142:                                              ; preds = %137
  %143 = getelementptr inbounds ptr, ptr %133, i64 %138
  %144 = add i16 %128, -1
  store i16 %144, ptr %127, align 8, !tbaa !79
  %145 = sext i16 %144 to i64
  %146 = getelementptr inbounds ptr, ptr %133, i64 %145
  %147 = load ptr, ptr %146, align 8, !tbaa !14
  store ptr %147, ptr %143, align 8, !tbaa !14
  br label %148

148:                                              ; preds = %134, %142, %122
  %149 = getelementptr inbounds %struct.CCGEdge, ptr %123, i64 0, i32 6
  %150 = load ptr, ptr %149, align 8, !tbaa !85
  %151 = getelementptr inbounds %struct.CCGVert, ptr %150, i64 0, i32 2
  %152 = load i16, ptr %151, align 8, !tbaa !79
  %153 = icmp sgt i16 %152, 0
  br i1 %153, label %154, label %173

154:                                              ; preds = %148
  %155 = zext i16 %152 to i64
  %156 = getelementptr inbounds %struct.CCGVert, ptr %150, i64 0, i32 6
  %157 = load ptr, ptr %156, align 8, !tbaa !56
  br label %161

158:                                              ; preds = %161
  %159 = add nuw nsw i64 %162, 1
  %160 = icmp eq i64 %159, %155
  br i1 %160, label %173, label %161, !llvm.loop !84

161:                                              ; preds = %158, %154
  %162 = phi i64 [ 0, %154 ], [ %159, %158 ]
  %163 = getelementptr inbounds ptr, ptr %157, i64 %162
  %164 = load ptr, ptr %163, align 8, !tbaa !14
  %165 = icmp eq ptr %164, %123
  br i1 %165, label %166, label %158

166:                                              ; preds = %161
  %167 = getelementptr inbounds ptr, ptr %157, i64 %162
  %168 = add i16 %152, -1
  store i16 %168, ptr %151, align 8, !tbaa !79
  %169 = sext i16 %168 to i64
  %170 = getelementptr inbounds ptr, ptr %157, i64 %169
  %171 = load ptr, ptr %170, align 8, !tbaa !14
  store ptr %171, ptr %167, align 8, !tbaa !14
  %172 = load ptr, ptr %149, align 8, !tbaa !85
  br label %173

173:                                              ; preds = %158, %148, %166
  %174 = phi ptr [ %150, %148 ], [ %172, %166 ], [ %150, %158 ]
  %175 = load ptr, ptr %125, align 8, !tbaa !83
  %176 = getelementptr inbounds %struct.CCGVert, ptr %175, i64 0, i32 4
  %177 = load i16, ptr %176, align 4, !tbaa !86
  %178 = or i16 %177, 1
  store i16 %178, ptr %176, align 4, !tbaa !86
  %179 = getelementptr inbounds %struct.CCGVert, ptr %174, i64 0, i32 4
  %180 = load i16, ptr %179, align 4, !tbaa !86
  %181 = or i16 %180, 1
  store i16 %181, ptr %179, align 4, !tbaa !86
  %182 = load ptr, ptr %110, align 8, !tbaa !48
  %183 = load ptr, ptr %111, align 8, !tbaa !15
  %184 = getelementptr inbounds %struct.CCGEdge, ptr %123, i64 0, i32 7
  %185 = load ptr, ptr %184, align 8, !tbaa !52
  tail call void %182(ptr noundef %183, ptr noundef %185) #23
  %186 = load ptr, ptr %110, align 8, !tbaa !48
  %187 = load ptr, ptr %111, align 8, !tbaa !15
  tail call void %186(ptr noundef %187, ptr noundef nonnull %123) #23
  %188 = icmp eq ptr %124, null
  br i1 %188, label %112, label %122, !llvm.loop !49

189:                                              ; preds = %112, %95
  %190 = getelementptr inbounds %struct._EHash, ptr %104, i64 0, i32 4, i32 2
  %191 = load ptr, ptr %190, align 8, !tbaa !50
  %192 = getelementptr inbounds %struct._EHash, ptr %104, i64 0, i32 5
  %193 = load ptr, ptr %192, align 8, !tbaa !20
  %194 = load ptr, ptr %104, align 8, !tbaa !26
  tail call void %191(ptr noundef %193, ptr noundef %194) #23
  %195 = load ptr, ptr %190, align 8, !tbaa !50
  %196 = load ptr, ptr %192, align 8, !tbaa !20
  tail call void %195(ptr noundef %196, ptr noundef nonnull %104) #23
  %197 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 23
  %198 = load ptr, ptr %197, align 8, !tbaa !55
  %199 = getelementptr inbounds %struct._EHash, ptr %198, i64 0, i32 2
  %200 = load i32, ptr %199, align 4, !tbaa !24
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %230, label %202

202:                                              ; preds = %189
  %203 = sext i32 %200 to i64
  %204 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 4, i32 2
  %205 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 5
  br label %209

206:                                              ; preds = %216, %209
  %207 = and i64 %211, 4294967295
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %230, label %209, !llvm.loop !44

209:                                              ; preds = %206, %202
  %210 = phi i64 [ %203, %202 ], [ %211, %206 ]
  %211 = add nsw i64 %210, -1
  %212 = load ptr, ptr %198, align 8, !tbaa !26
  %213 = getelementptr inbounds ptr, ptr %212, i64 %211
  %214 = load ptr, ptr %213, align 8, !tbaa !14
  %215 = icmp eq ptr %214, null
  br i1 %215, label %206, label %216

216:                                              ; preds = %209, %216
  %217 = phi ptr [ %218, %216 ], [ %214, %209 ]
  %218 = load ptr, ptr %217, align 8, !tbaa !46
  %219 = load ptr, ptr %204, align 8, !tbaa !48
  %220 = load ptr, ptr %205, align 8, !tbaa !15
  %221 = getelementptr inbounds %struct.CCGVert, ptr %217, i64 0, i32 6
  %222 = load ptr, ptr %221, align 8, !tbaa !56
  tail call void %219(ptr noundef %220, ptr noundef %222) #23
  %223 = load ptr, ptr %204, align 8, !tbaa !48
  %224 = load ptr, ptr %205, align 8, !tbaa !15
  %225 = getelementptr inbounds %struct.CCGVert, ptr %217, i64 0, i32 7
  %226 = load ptr, ptr %225, align 8, !tbaa !58
  tail call void %223(ptr noundef %224, ptr noundef %226) #23
  %227 = load ptr, ptr %204, align 8, !tbaa !48
  %228 = load ptr, ptr %205, align 8, !tbaa !15
  tail call void %227(ptr noundef %228, ptr noundef nonnull %217) #23
  %229 = icmp eq ptr %218, null
  br i1 %229, label %206, label %216, !llvm.loop !49

230:                                              ; preds = %206, %189
  %231 = getelementptr inbounds %struct._EHash, ptr %198, i64 0, i32 4, i32 2
  %232 = load ptr, ptr %231, align 8, !tbaa !50
  %233 = getelementptr inbounds %struct._EHash, ptr %198, i64 0, i32 5
  %234 = load ptr, ptr %233, align 8, !tbaa !20
  %235 = load ptr, ptr %198, align 8, !tbaa !26
  tail call void %232(ptr noundef %234, ptr noundef %235) #23
  %236 = load ptr, ptr %231, align 8, !tbaa !50
  %237 = load ptr, ptr %233, align 8, !tbaa !20
  tail call void %236(ptr noundef %237, ptr noundef nonnull %198) #23
  %238 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  %239 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 28
  %240 = load ptr, ptr %239, align 8, !tbaa !60
  tail call void %238(ptr noundef %240) #23
  %241 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  %242 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 27
  %243 = load ptr, ptr %242, align 8, !tbaa !59
  tail call void %241(ptr noundef %243) #23
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %2, i8 0, i64 32, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %242, i8 0, i64 16, i1 false)
  tail call fastcc void @ccgSubSurf__sync(ptr noundef %0)
  br label %244

244:                                              ; preds = %4, %230, %1
  %245 = phi i32 [ 1, %1 ], [ 0, %230 ], [ 0, %4 ]
  ret i32 %245
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @ccgSubSurf__sync(ptr nocapture noundef readonly %0) unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %3 = load i32, ptr %2, align 8, !tbaa !32
  %4 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %5 = load i32, ptr %4, align 8, !tbaa !37
  %6 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 11
  %7 = load ptr, ptr %6, align 8, !tbaa !38
  %8 = ptrtoint ptr %7 to i64
  %9 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 12
  %10 = load ptr, ptr %9, align 8, !tbaa !39
  %11 = ptrtoint ptr %10 to i64
  %12 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !14
  %13 = load ptr, ptr %0, align 8, !tbaa !27
  %14 = getelementptr inbounds %struct._EHash, ptr %13, i64 0, i32 1
  %15 = load i32, ptr %14, align 8, !tbaa !22
  %16 = sext i32 %15 to i64
  %17 = shl nsw i64 %16, 3
  %18 = tail call ptr %12(i64 noundef %17, ptr noundef nonnull @.str.2) #23
  %19 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !14
  %20 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !28
  %22 = getelementptr inbounds %struct._EHash, ptr %21, i64 0, i32 1
  %23 = load i32, ptr %22, align 8, !tbaa !22
  %24 = sext i32 %23 to i64
  %25 = shl nsw i64 %24, 3
  %26 = tail call ptr %19(i64 noundef %25, ptr noundef nonnull @.str.3) #23
  %27 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !14
  %28 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !29
  %30 = getelementptr inbounds %struct._EHash, ptr %29, i64 0, i32 1
  %31 = load i32, ptr %30, align 8, !tbaa !22
  %32 = sext i32 %31 to i64
  %33 = shl nsw i64 %32, 3
  %34 = tail call ptr %27(i64 noundef %33, ptr noundef nonnull @.str.4) #23
  %35 = load ptr, ptr %0, align 8, !tbaa !27
  %36 = getelementptr inbounds %struct._EHash, ptr %35, i64 0, i32 2
  %37 = load i32, ptr %36, align 4, !tbaa !24
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %45, label %3687

39:                                               ; preds = %128
  %40 = icmp sgt i32 %130, 0
  br i1 %40, label %41, label %138

41:                                               ; preds = %39
  %42 = getelementptr i8, ptr %0, i64 36
  %43 = zext i32 %130 to i64
  %44 = load i32, ptr %42, align 4, !tbaa !74
  br label %150

45:                                               ; preds = %1, %128
  %46 = phi ptr [ %129, %128 ], [ %35, %1 ]
  %47 = phi i64 [ %133, %128 ], [ 0, %1 ]
  %48 = phi i32 [ %132, %128 ], [ 0, %1 ]
  %49 = phi i32 [ %131, %128 ], [ 0, %1 ]
  %50 = phi i32 [ %130, %128 ], [ 0, %1 ]
  %51 = load ptr, ptr %46, align 8, !tbaa !26
  %52 = getelementptr inbounds ptr, ptr %51, i64 %47
  %53 = load ptr, ptr %52, align 8, !tbaa !14
  %54 = icmp eq ptr %53, null
  br i1 %54, label %128, label %55

55:                                               ; preds = %45, %120
  %56 = phi ptr [ %124, %120 ], [ %53, %45 ]
  %57 = phi i32 [ %123, %120 ], [ %48, %45 ]
  %58 = phi i32 [ %122, %120 ], [ %49, %45 ]
  %59 = phi i32 [ %121, %120 ], [ %50, %45 ]
  %60 = getelementptr inbounds %struct.CCGVert, ptr %56, i64 0, i32 4
  %61 = load i16, ptr %60, align 4, !tbaa !86
  %62 = and i16 %61, 1
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %120, label %64

64:                                               ; preds = %55
  %65 = add nsw i32 %57, 1
  %66 = sext i32 %57 to i64
  %67 = getelementptr inbounds ptr, ptr %18, i64 %66
  store ptr %56, ptr %67, align 8, !tbaa !14
  %68 = getelementptr inbounds %struct.CCGVert, ptr %56, i64 0, i32 2
  %69 = load i16, ptr %68, align 8, !tbaa !79
  %70 = icmp sgt i16 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %64
  %72 = zext i16 %69 to i64
  %73 = getelementptr inbounds %struct.CCGVert, ptr %56, i64 0, i32 6
  br label %82

74:                                               ; preds = %97, %64
  %75 = phi i32 [ %58, %64 ], [ %98, %97 ]
  %76 = getelementptr inbounds %struct.CCGVert, ptr %56, i64 0, i32 3
  %77 = load i16, ptr %76, align 2, !tbaa !78
  %78 = icmp sgt i16 %77, 0
  br i1 %78, label %79, label %120

79:                                               ; preds = %74
  %80 = zext i16 %77 to i64
  %81 = getelementptr inbounds %struct.CCGVert, ptr %56, i64 0, i32 7
  br label %101

82:                                               ; preds = %71, %97
  %83 = phi i64 [ 0, %71 ], [ %99, %97 ]
  %84 = phi i32 [ %58, %71 ], [ %98, %97 ]
  %85 = load ptr, ptr %73, align 8, !tbaa !56
  %86 = getelementptr inbounds ptr, ptr %85, i64 %83
  %87 = load ptr, ptr %86, align 8, !tbaa !14
  %88 = getelementptr inbounds %struct.CCGEdge, ptr %87, i64 0, i32 3
  %89 = load i16, ptr %88, align 2, !tbaa !118
  %90 = and i16 %89, 1
  %91 = icmp eq i16 %90, 0
  br i1 %91, label %92, label %97

92:                                               ; preds = %82
  %93 = add nsw i32 %84, 1
  %94 = sext i32 %84 to i64
  %95 = getelementptr inbounds ptr, ptr %26, i64 %94
  store ptr %87, ptr %95, align 8, !tbaa !14
  %96 = or i16 %89, 1
  store i16 %96, ptr %88, align 2, !tbaa !118
  br label %97

97:                                               ; preds = %92, %82
  %98 = phi i32 [ %84, %82 ], [ %93, %92 ]
  %99 = add nuw nsw i64 %83, 1
  %100 = icmp eq i64 %99, %72
  br i1 %100, label %74, label %82, !llvm.loop !136

101:                                              ; preds = %79, %116
  %102 = phi i64 [ 0, %79 ], [ %118, %116 ]
  %103 = phi i32 [ %59, %79 ], [ %117, %116 ]
  %104 = load ptr, ptr %81, align 8, !tbaa !58
  %105 = getelementptr inbounds ptr, ptr %104, i64 %102
  %106 = load ptr, ptr %105, align 8, !tbaa !14
  %107 = getelementptr inbounds %struct.CCGFace, ptr %106, i64 0, i32 3
  %108 = load i16, ptr %107, align 2, !tbaa !128
  %109 = and i16 %108, 1
  %110 = icmp eq i16 %109, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %101
  %112 = add nsw i32 %103, 1
  %113 = sext i32 %103 to i64
  %114 = getelementptr inbounds ptr, ptr %34, i64 %113
  store ptr %106, ptr %114, align 8, !tbaa !14
  %115 = or i16 %108, 1
  store i16 %115, ptr %107, align 2, !tbaa !128
  br label %116

116:                                              ; preds = %111, %101
  %117 = phi i32 [ %103, %101 ], [ %112, %111 ]
  %118 = add nuw nsw i64 %102, 1
  %119 = icmp eq i64 %118, %80
  br i1 %119, label %120, label %101, !llvm.loop !137

120:                                              ; preds = %116, %74, %55
  %121 = phi i32 [ %59, %55 ], [ %59, %74 ], [ %117, %116 ]
  %122 = phi i32 [ %58, %55 ], [ %75, %74 ], [ %75, %116 ]
  %123 = phi i32 [ %57, %55 ], [ %65, %74 ], [ %65, %116 ]
  %124 = load ptr, ptr %56, align 8, !tbaa !14
  %125 = icmp eq ptr %124, null
  br i1 %125, label %126, label %55, !llvm.loop !138

126:                                              ; preds = %120
  %127 = load ptr, ptr %0, align 8, !tbaa !27
  br label %128

128:                                              ; preds = %126, %45
  %129 = phi ptr [ %46, %45 ], [ %127, %126 ]
  %130 = phi i32 [ %50, %45 ], [ %121, %126 ]
  %131 = phi i32 [ %49, %45 ], [ %122, %126 ]
  %132 = phi i32 [ %48, %45 ], [ %123, %126 ]
  %133 = add nuw nsw i64 %47, 1
  %134 = getelementptr inbounds %struct._EHash, ptr %129, i64 0, i32 2
  %135 = load i32, ptr %134, align 4, !tbaa !24
  %136 = sext i32 %135 to i64
  %137 = icmp slt i64 %133, %136
  br i1 %137, label %45, label %39, !llvm.loop !139

138:                                              ; preds = %296, %39
  %139 = phi i1 [ false, %39 ], [ %40, %296 ]
  %140 = icmp sgt i32 %131, 0
  br i1 %140, label %141, label %300

141:                                              ; preds = %138
  %142 = mul nsw i32 %5, 3
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 3
  %145 = zext i32 %131 to i64
  %146 = add nsw i64 %143, 48
  %147 = add nsw i64 %143, 48
  %148 = add nsw i64 %143, 48
  %149 = add nsw i64 %143, 48
  br label %316

150:                                              ; preds = %41, %296
  %151 = phi i32 [ %44, %41 ], [ %166, %296 ]
  %152 = phi i64 [ 0, %41 ], [ %298, %296 ]
  %153 = getelementptr inbounds ptr, ptr %34, i64 %152
  %154 = load ptr, ptr %153, align 8, !tbaa !14
  %155 = getelementptr inbounds %struct.CCGFace, ptr %154, i64 1
  %156 = getelementptr inbounds %struct.CCGFace, ptr %154, i64 0, i32 2
  %157 = load i16, ptr %156, align 8, !tbaa !89
  %158 = sext i16 %157 to i64
  %159 = getelementptr inbounds ptr, ptr %155, i64 %158
  %160 = getelementptr ptr, ptr %159, i64 %158
  %161 = sext i32 %151 to i64
  %162 = shl nsw i64 %161, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %160, i8 0, i64 %162, i1 false)
  %163 = load i16, ptr %156, align 8, !tbaa !89
  %164 = sext i16 %163 to i64
  %165 = icmp sgt i16 %163, 0
  %166 = load i32, ptr %42, align 4, !tbaa !74
  br i1 %165, label %167, label %266

167:                                              ; preds = %150
  %168 = icmp sgt i32 %166, 0
  %169 = zext i32 %166 to i64
  br i1 %168, label %170, label %296

170:                                              ; preds = %167
  %171 = and i64 %164, 4294967295
  %172 = getelementptr i8, ptr %154, i64 24
  %173 = shl nsw i64 %158, 4
  %174 = shl nuw nsw i64 %169, 2
  %175 = add nsw i64 %173, %174
  %176 = getelementptr i8, ptr %172, i64 %175
  %177 = icmp ult i32 %166, 32
  %178 = and i64 %169, 4294967264
  %179 = icmp eq i64 %178, %169
  %180 = and i64 %169, 3
  %181 = icmp eq i64 %180, 0
  br label %182

182:                                              ; preds = %170, %263
  %183 = phi i64 [ 0, %170 ], [ %264, %263 ]
  %184 = getelementptr inbounds ptr, ptr %155, i64 %183
  %185 = load ptr, ptr %184, align 8, !tbaa !14
  %186 = getelementptr inbounds %struct.CCGVert, ptr %185, i64 1
  br i1 %177, label %218, label %187

187:                                              ; preds = %182
  %188 = getelementptr i8, ptr %185, i64 40
  %189 = getelementptr i8, ptr %188, i64 %174
  %190 = icmp ult ptr %160, %189
  %191 = icmp ult ptr %186, %176
  %192 = and i1 %190, %191
  br i1 %192, label %218, label %193

193:                                              ; preds = %187, %193
  %194 = phi i64 [ %215, %193 ], [ 0, %187 ]
  %195 = getelementptr inbounds float, ptr %186, i64 %194
  %196 = load <8 x float>, ptr %195, align 4, !tbaa !65, !alias.scope !140
  %197 = getelementptr inbounds float, ptr %195, i64 8
  %198 = load <8 x float>, ptr %197, align 4, !tbaa !65, !alias.scope !140
  %199 = getelementptr inbounds float, ptr %195, i64 16
  %200 = load <8 x float>, ptr %199, align 4, !tbaa !65, !alias.scope !140
  %201 = getelementptr inbounds float, ptr %195, i64 24
  %202 = load <8 x float>, ptr %201, align 4, !tbaa !65, !alias.scope !140
  %203 = getelementptr inbounds float, ptr %160, i64 %194
  %204 = load <8 x float>, ptr %203, align 4, !tbaa !65, !alias.scope !143, !noalias !140
  %205 = getelementptr inbounds float, ptr %203, i64 8
  %206 = load <8 x float>, ptr %205, align 4, !tbaa !65, !alias.scope !143, !noalias !140
  %207 = getelementptr inbounds float, ptr %203, i64 16
  %208 = load <8 x float>, ptr %207, align 4, !tbaa !65, !alias.scope !143, !noalias !140
  %209 = getelementptr inbounds float, ptr %203, i64 24
  %210 = load <8 x float>, ptr %209, align 4, !tbaa !65, !alias.scope !143, !noalias !140
  %211 = fadd fast <8 x float> %204, %196
  %212 = fadd fast <8 x float> %206, %198
  %213 = fadd fast <8 x float> %208, %200
  %214 = fadd fast <8 x float> %210, %202
  store <8 x float> %211, ptr %203, align 4, !tbaa !65, !alias.scope !143, !noalias !140
  store <8 x float> %212, ptr %205, align 4, !tbaa !65, !alias.scope !143, !noalias !140
  store <8 x float> %213, ptr %207, align 4, !tbaa !65, !alias.scope !143, !noalias !140
  store <8 x float> %214, ptr %209, align 4, !tbaa !65, !alias.scope !143, !noalias !140
  %215 = add nuw i64 %194, 32
  %216 = icmp eq i64 %215, %178
  br i1 %216, label %217, label %193, !llvm.loop !145

217:                                              ; preds = %193
  br i1 %179, label %263, label %218

218:                                              ; preds = %187, %182, %217
  %219 = phi i64 [ 0, %187 ], [ 0, %182 ], [ %178, %217 ]
  %220 = xor i64 %219, -1
  %221 = add nsw i64 %220, %169
  br i1 %181, label %233, label %222

222:                                              ; preds = %218, %222
  %223 = phi i64 [ %230, %222 ], [ %219, %218 ]
  %224 = phi i64 [ %231, %222 ], [ 0, %218 ]
  %225 = getelementptr inbounds float, ptr %186, i64 %223
  %226 = load float, ptr %225, align 4, !tbaa !65
  %227 = getelementptr inbounds float, ptr %160, i64 %223
  %228 = load float, ptr %227, align 4, !tbaa !65
  %229 = fadd fast float %228, %226
  store float %229, ptr %227, align 4, !tbaa !65
  %230 = add nuw nsw i64 %223, 1
  %231 = add i64 %224, 1
  %232 = icmp eq i64 %231, %180
  br i1 %232, label %233, label %222, !llvm.loop !146

233:                                              ; preds = %222, %218
  %234 = phi i64 [ %219, %218 ], [ %230, %222 ]
  %235 = icmp ult i64 %221, 3
  br i1 %235, label %263, label %236

236:                                              ; preds = %233, %236
  %237 = phi i64 [ %261, %236 ], [ %234, %233 ]
  %238 = getelementptr inbounds float, ptr %186, i64 %237
  %239 = load float, ptr %238, align 4, !tbaa !65
  %240 = getelementptr inbounds float, ptr %160, i64 %237
  %241 = load float, ptr %240, align 4, !tbaa !65
  %242 = fadd fast float %241, %239
  store float %242, ptr %240, align 4, !tbaa !65
  %243 = add nuw nsw i64 %237, 1
  %244 = getelementptr inbounds float, ptr %186, i64 %243
  %245 = load float, ptr %244, align 4, !tbaa !65
  %246 = getelementptr inbounds float, ptr %160, i64 %243
  %247 = load float, ptr %246, align 4, !tbaa !65
  %248 = fadd fast float %247, %245
  store float %248, ptr %246, align 4, !tbaa !65
  %249 = add nuw nsw i64 %237, 2
  %250 = getelementptr inbounds float, ptr %186, i64 %249
  %251 = load float, ptr %250, align 4, !tbaa !65
  %252 = getelementptr inbounds float, ptr %160, i64 %249
  %253 = load float, ptr %252, align 4, !tbaa !65
  %254 = fadd fast float %253, %251
  store float %254, ptr %252, align 4, !tbaa !65
  %255 = add nuw nsw i64 %237, 3
  %256 = getelementptr inbounds float, ptr %186, i64 %255
  %257 = load float, ptr %256, align 4, !tbaa !65
  %258 = getelementptr inbounds float, ptr %160, i64 %255
  %259 = load float, ptr %258, align 4, !tbaa !65
  %260 = fadd fast float %259, %257
  store float %260, ptr %258, align 4, !tbaa !65
  %261 = add nuw nsw i64 %237, 4
  %262 = icmp eq i64 %261, %169
  br i1 %262, label %263, label %236, !llvm.loop !147

263:                                              ; preds = %233, %236, %217
  %264 = add nuw nsw i64 %183, 1
  %265 = icmp eq i64 %264, %171
  br i1 %265, label %266, label %182, !llvm.loop !148

266:                                              ; preds = %263, %150
  %267 = icmp sgt i32 %166, 0
  br i1 %267, label %268, label %296

268:                                              ; preds = %266
  %269 = sitofp i16 %163 to float
  %270 = zext i32 %166 to i64
  %271 = icmp ult i32 %166, 8
  br i1 %271, label %286, label %272

272:                                              ; preds = %268
  %273 = and i64 %270, 4294967288
  %274 = insertelement <8 x float> poison, float %269, i64 0
  %275 = shufflevector <8 x float> %274, <8 x float> poison, <8 x i32> zeroinitializer
  %276 = fdiv fast <8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %275
  br label %277

277:                                              ; preds = %277, %272
  %278 = phi i64 [ 0, %272 ], [ %282, %277 ]
  %279 = getelementptr inbounds float, ptr %160, i64 %278
  %280 = load <8 x float>, ptr %279, align 4, !tbaa !65
  %281 = fmul fast <8 x float> %280, %276
  store <8 x float> %281, ptr %279, align 4, !tbaa !65
  %282 = add nuw i64 %278, 8
  %283 = icmp eq i64 %282, %273
  br i1 %283, label %284, label %277, !llvm.loop !149

284:                                              ; preds = %277
  %285 = icmp eq i64 %273, %270
  br i1 %285, label %296, label %286

286:                                              ; preds = %268, %284
  %287 = phi i64 [ 0, %268 ], [ %273, %284 ]
  %288 = fdiv fast float 1.000000e+00, %269
  br label %289

289:                                              ; preds = %286, %289
  %290 = phi i64 [ %294, %289 ], [ %287, %286 ]
  %291 = getelementptr inbounds float, ptr %160, i64 %290
  %292 = load float, ptr %291, align 4, !tbaa !65
  %293 = fmul fast float %292, %288
  store float %293, ptr %291, align 4, !tbaa !65
  %294 = add nuw nsw i64 %290, 1
  %295 = icmp eq i64 %294, %270
  br i1 %295, label %296, label %289, !llvm.loop !150

296:                                              ; preds = %289, %284, %167, %266
  %297 = getelementptr inbounds %struct.CCGFace, ptr %154, i64 0, i32 3
  store i16 0, ptr %297, align 2, !tbaa !128
  %298 = add nuw nsw i64 %152, 1
  %299 = icmp eq i64 %298, %43
  br i1 %299, label %138, label %150, !llvm.loop !151

300:                                              ; preds = %1269, %138
  %301 = phi i1 [ false, %138 ], [ %140, %1269 ]
  %302 = icmp sgt i32 %132, 0
  br i1 %302, label %303, label %3314

303:                                              ; preds = %300
  %304 = sext i32 %5 to i64
  %305 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 5
  %306 = getelementptr i8, ptr %0, i64 36
  %307 = zext i32 %132 to i64
  %308 = add nsw i64 %304, 40
  %309 = add nsw i64 %304, 40
  %310 = add nsw i64 %304, 40
  %311 = add nsw i64 %304, 40
  %312 = add nsw i64 %304, 40
  %313 = icmp ult i32 %5, 128
  %314 = icmp ult i32 %5, 128
  %315 = icmp ult i32 %5, 128
  br label %1272

316:                                              ; preds = %141, %1269
  %317 = phi i64 [ 0, %141 ], [ %1270, %1269 ]
  %318 = getelementptr inbounds ptr, ptr %26, i64 %317
  %319 = load ptr, ptr %318, align 8, !tbaa !14
  %320 = ptrtoint ptr %319 to i64
  %321 = getelementptr inbounds %struct.CCGEdge, ptr %319, i64 1
  %322 = getelementptr i8, ptr %321, i64 %143
  %323 = getelementptr inbounds %struct.CCGEdge, ptr %319, i64 0, i32 4
  %324 = load float, ptr %323, align 4, !tbaa !116
  %325 = getelementptr i8, ptr %319, i64 16
  %326 = load i16, ptr %325, align 8, !tbaa !81
  %327 = icmp slt i16 %326, 2
  %328 = fcmp fast oge float %324, 1.000000e+00
  %329 = select i1 %327, i1 true, i1 %328
  %330 = getelementptr inbounds %struct.CCGEdge, ptr %319, i64 0, i32 5
  %331 = load ptr, ptr %330, align 8, !tbaa !83
  %332 = ptrtoint ptr %331 to i64
  %333 = getelementptr %struct.CCGVert, ptr %331, i64 1
  %334 = load i32, ptr %144, align 4, !tbaa !74
  %335 = icmp sgt i32 %334, 0
  br i1 %329, label %336, label %522

336:                                              ; preds = %316
  br i1 %335, label %337, label %1269

337:                                              ; preds = %336
  %338 = zext i32 %334 to i64
  %339 = icmp ult i32 %334, 32
  br i1 %339, label %365, label %340

340:                                              ; preds = %337
  %341 = add i64 %147, %320
  %342 = add i64 %332, 40
  %343 = sub i64 %341, %342
  %344 = icmp ult i64 %343, 128
  br i1 %344, label %365, label %345

345:                                              ; preds = %340
  %346 = and i64 %338, 4294967264
  br label %347

347:                                              ; preds = %347, %345
  %348 = phi i64 [ 0, %345 ], [ %361, %347 ]
  %349 = getelementptr inbounds float, ptr %333, i64 %348
  %350 = load <8 x float>, ptr %349, align 4, !tbaa !65
  %351 = getelementptr inbounds float, ptr %349, i64 8
  %352 = load <8 x float>, ptr %351, align 4, !tbaa !65
  %353 = getelementptr inbounds float, ptr %349, i64 16
  %354 = load <8 x float>, ptr %353, align 4, !tbaa !65
  %355 = getelementptr inbounds float, ptr %349, i64 24
  %356 = load <8 x float>, ptr %355, align 4, !tbaa !65
  %357 = getelementptr inbounds float, ptr %322, i64 %348
  store <8 x float> %350, ptr %357, align 4, !tbaa !65
  %358 = getelementptr inbounds float, ptr %357, i64 8
  store <8 x float> %352, ptr %358, align 4, !tbaa !65
  %359 = getelementptr inbounds float, ptr %357, i64 16
  store <8 x float> %354, ptr %359, align 4, !tbaa !65
  %360 = getelementptr inbounds float, ptr %357, i64 24
  store <8 x float> %356, ptr %360, align 4, !tbaa !65
  %361 = add nuw i64 %348, 32
  %362 = icmp eq i64 %361, %346
  br i1 %362, label %363, label %347, !llvm.loop !152

363:                                              ; preds = %347
  %364 = icmp eq i64 %346, %338
  br i1 %364, label %402, label %365

365:                                              ; preds = %340, %337, %363
  %366 = phi i64 [ 0, %340 ], [ 0, %337 ], [ %346, %363 ]
  %367 = xor i64 %366, -1
  %368 = add nsw i64 %367, %338
  %369 = and i64 %338, 3
  %370 = icmp eq i64 %369, 0
  br i1 %370, label %380, label %371

371:                                              ; preds = %365, %371
  %372 = phi i64 [ %377, %371 ], [ %366, %365 ]
  %373 = phi i64 [ %378, %371 ], [ 0, %365 ]
  %374 = getelementptr inbounds float, ptr %333, i64 %372
  %375 = load float, ptr %374, align 4, !tbaa !65
  %376 = getelementptr inbounds float, ptr %322, i64 %372
  store float %375, ptr %376, align 4, !tbaa !65
  %377 = add nuw nsw i64 %372, 1
  %378 = add i64 %373, 1
  %379 = icmp eq i64 %378, %369
  br i1 %379, label %380, label %371, !llvm.loop !153

380:                                              ; preds = %371, %365
  %381 = phi i64 [ %366, %365 ], [ %377, %371 ]
  %382 = icmp ult i64 %368, 3
  br i1 %382, label %402, label %383

383:                                              ; preds = %380, %383
  %384 = phi i64 [ %400, %383 ], [ %381, %380 ]
  %385 = getelementptr inbounds float, ptr %333, i64 %384
  %386 = load float, ptr %385, align 4, !tbaa !65
  %387 = getelementptr inbounds float, ptr %322, i64 %384
  store float %386, ptr %387, align 4, !tbaa !65
  %388 = add nuw nsw i64 %384, 1
  %389 = getelementptr inbounds float, ptr %333, i64 %388
  %390 = load float, ptr %389, align 4, !tbaa !65
  %391 = getelementptr inbounds float, ptr %322, i64 %388
  store float %390, ptr %391, align 4, !tbaa !65
  %392 = add nuw nsw i64 %384, 2
  %393 = getelementptr inbounds float, ptr %333, i64 %392
  %394 = load float, ptr %393, align 4, !tbaa !65
  %395 = getelementptr inbounds float, ptr %322, i64 %392
  store float %394, ptr %395, align 4, !tbaa !65
  %396 = add nuw nsw i64 %384, 3
  %397 = getelementptr inbounds float, ptr %333, i64 %396
  %398 = load float, ptr %397, align 4, !tbaa !65
  %399 = getelementptr inbounds float, ptr %322, i64 %396
  store float %398, ptr %399, align 4, !tbaa !65
  %400 = add nuw nsw i64 %384, 4
  %401 = icmp eq i64 %400, %338
  br i1 %401, label %402, label %383, !llvm.loop !154

402:                                              ; preds = %380, %383, %363
  %403 = getelementptr inbounds %struct.CCGEdge, ptr %319, i64 0, i32 6
  %404 = load ptr, ptr %403, align 8, !tbaa !85
  %405 = getelementptr inbounds %struct.CCGVert, ptr %404, i64 1
  %406 = icmp ult i32 %334, 32
  br i1 %406, label %444, label %407

407:                                              ; preds = %402
  %408 = getelementptr i8, ptr %319, i64 %146
  %409 = shl nuw nsw i64 %338, 2
  %410 = getelementptr i8, ptr %408, i64 %409
  %411 = getelementptr i8, ptr %404, i64 40
  %412 = getelementptr i8, ptr %411, i64 %409
  %413 = icmp ult ptr %322, %412
  %414 = icmp ult ptr %405, %410
  %415 = and i1 %413, %414
  br i1 %415, label %444, label %416

416:                                              ; preds = %407
  %417 = and i64 %338, 4294967264
  br label %418

418:                                              ; preds = %418, %416
  %419 = phi i64 [ 0, %416 ], [ %440, %418 ]
  %420 = getelementptr inbounds float, ptr %405, i64 %419
  %421 = load <8 x float>, ptr %420, align 4, !tbaa !65, !alias.scope !155
  %422 = getelementptr inbounds float, ptr %420, i64 8
  %423 = load <8 x float>, ptr %422, align 4, !tbaa !65, !alias.scope !155
  %424 = getelementptr inbounds float, ptr %420, i64 16
  %425 = load <8 x float>, ptr %424, align 4, !tbaa !65, !alias.scope !155
  %426 = getelementptr inbounds float, ptr %420, i64 24
  %427 = load <8 x float>, ptr %426, align 4, !tbaa !65, !alias.scope !155
  %428 = getelementptr inbounds float, ptr %322, i64 %419
  %429 = load <8 x float>, ptr %428, align 4, !tbaa !65, !alias.scope !158, !noalias !155
  %430 = getelementptr inbounds float, ptr %428, i64 8
  %431 = load <8 x float>, ptr %430, align 4, !tbaa !65, !alias.scope !158, !noalias !155
  %432 = getelementptr inbounds float, ptr %428, i64 16
  %433 = load <8 x float>, ptr %432, align 4, !tbaa !65, !alias.scope !158, !noalias !155
  %434 = getelementptr inbounds float, ptr %428, i64 24
  %435 = load <8 x float>, ptr %434, align 4, !tbaa !65, !alias.scope !158, !noalias !155
  %436 = fadd fast <8 x float> %429, %421
  %437 = fadd fast <8 x float> %431, %423
  %438 = fadd fast <8 x float> %433, %425
  %439 = fadd fast <8 x float> %435, %427
  store <8 x float> %436, ptr %428, align 4, !tbaa !65, !alias.scope !158, !noalias !155
  store <8 x float> %437, ptr %430, align 4, !tbaa !65, !alias.scope !158, !noalias !155
  store <8 x float> %438, ptr %432, align 4, !tbaa !65, !alias.scope !158, !noalias !155
  store <8 x float> %439, ptr %434, align 4, !tbaa !65, !alias.scope !158, !noalias !155
  %440 = add nuw i64 %419, 32
  %441 = icmp eq i64 %440, %417
  br i1 %441, label %442, label %418, !llvm.loop !160

442:                                              ; preds = %418
  %443 = icmp eq i64 %417, %338
  br i1 %443, label %491, label %444

444:                                              ; preds = %407, %402, %442
  %445 = phi i64 [ 0, %407 ], [ 0, %402 ], [ %417, %442 ]
  %446 = xor i64 %445, -1
  %447 = add nsw i64 %446, %338
  %448 = and i64 %338, 3
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %461, label %450

450:                                              ; preds = %444, %450
  %451 = phi i64 [ %458, %450 ], [ %445, %444 ]
  %452 = phi i64 [ %459, %450 ], [ 0, %444 ]
  %453 = getelementptr inbounds float, ptr %405, i64 %451
  %454 = load float, ptr %453, align 4, !tbaa !65
  %455 = getelementptr inbounds float, ptr %322, i64 %451
  %456 = load float, ptr %455, align 4, !tbaa !65
  %457 = fadd fast float %456, %454
  store float %457, ptr %455, align 4, !tbaa !65
  %458 = add nuw nsw i64 %451, 1
  %459 = add i64 %452, 1
  %460 = icmp eq i64 %459, %448
  br i1 %460, label %461, label %450, !llvm.loop !161

461:                                              ; preds = %450, %444
  %462 = phi i64 [ %445, %444 ], [ %458, %450 ]
  %463 = icmp ult i64 %447, 3
  br i1 %463, label %491, label %464

464:                                              ; preds = %461, %464
  %465 = phi i64 [ %489, %464 ], [ %462, %461 ]
  %466 = getelementptr inbounds float, ptr %405, i64 %465
  %467 = load float, ptr %466, align 4, !tbaa !65
  %468 = getelementptr inbounds float, ptr %322, i64 %465
  %469 = load float, ptr %468, align 4, !tbaa !65
  %470 = fadd fast float %469, %467
  store float %470, ptr %468, align 4, !tbaa !65
  %471 = add nuw nsw i64 %465, 1
  %472 = getelementptr inbounds float, ptr %405, i64 %471
  %473 = load float, ptr %472, align 4, !tbaa !65
  %474 = getelementptr inbounds float, ptr %322, i64 %471
  %475 = load float, ptr %474, align 4, !tbaa !65
  %476 = fadd fast float %475, %473
  store float %476, ptr %474, align 4, !tbaa !65
  %477 = add nuw nsw i64 %465, 2
  %478 = getelementptr inbounds float, ptr %405, i64 %477
  %479 = load float, ptr %478, align 4, !tbaa !65
  %480 = getelementptr inbounds float, ptr %322, i64 %477
  %481 = load float, ptr %480, align 4, !tbaa !65
  %482 = fadd fast float %481, %479
  store float %482, ptr %480, align 4, !tbaa !65
  %483 = add nuw nsw i64 %465, 3
  %484 = getelementptr inbounds float, ptr %405, i64 %483
  %485 = load float, ptr %484, align 4, !tbaa !65
  %486 = getelementptr inbounds float, ptr %322, i64 %483
  %487 = load float, ptr %486, align 4, !tbaa !65
  %488 = fadd fast float %487, %485
  store float %488, ptr %486, align 4, !tbaa !65
  %489 = add nuw nsw i64 %465, 4
  %490 = icmp eq i64 %489, %338
  br i1 %490, label %491, label %464, !llvm.loop !162

491:                                              ; preds = %461, %464, %442
  %492 = icmp ult i32 %334, 32
  br i1 %492, label %513, label %493

493:                                              ; preds = %491
  %494 = and i64 %338, 4294967264
  br label %495

495:                                              ; preds = %495, %493
  %496 = phi i64 [ 0, %493 ], [ %509, %495 ]
  %497 = getelementptr inbounds float, ptr %322, i64 %496
  %498 = load <8 x float>, ptr %497, align 4, !tbaa !65
  %499 = getelementptr inbounds float, ptr %497, i64 8
  %500 = load <8 x float>, ptr %499, align 4, !tbaa !65
  %501 = getelementptr inbounds float, ptr %497, i64 16
  %502 = load <8 x float>, ptr %501, align 4, !tbaa !65
  %503 = getelementptr inbounds float, ptr %497, i64 24
  %504 = load <8 x float>, ptr %503, align 4, !tbaa !65
  %505 = fmul fast <8 x float> %498, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %506 = fmul fast <8 x float> %500, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %507 = fmul fast <8 x float> %502, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %508 = fmul fast <8 x float> %504, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  store <8 x float> %505, ptr %497, align 4, !tbaa !65
  store <8 x float> %506, ptr %499, align 4, !tbaa !65
  store <8 x float> %507, ptr %501, align 4, !tbaa !65
  store <8 x float> %508, ptr %503, align 4, !tbaa !65
  %509 = add nuw i64 %496, 32
  %510 = icmp eq i64 %509, %494
  br i1 %510, label %511, label %495, !llvm.loop !163

511:                                              ; preds = %495
  %512 = icmp eq i64 %494, %338
  br i1 %512, label %1269, label %513

513:                                              ; preds = %491, %511
  %514 = phi i64 [ 0, %491 ], [ %494, %511 ]
  br label %515

515:                                              ; preds = %513, %515
  %516 = phi i64 [ %520, %515 ], [ %514, %513 ]
  %517 = getelementptr inbounds float, ptr %322, i64 %516
  %518 = load float, ptr %517, align 4, !tbaa !65
  %519 = fmul fast float %518, 5.000000e-01
  store float %519, ptr %517, align 4, !tbaa !65
  %520 = add nuw nsw i64 %516, 1
  %521 = icmp eq i64 %520, %338
  br i1 %521, label %1269, label %515, !llvm.loop !164

522:                                              ; preds = %316
  br i1 %335, label %526, label %523

523:                                              ; preds = %522
  %524 = getelementptr inbounds %struct.CCGEdge, ptr %319, i64 0, i32 6
  %525 = load ptr, ptr %524, align 8, !tbaa !85
  br label %680

526:                                              ; preds = %522
  %527 = zext i32 %334 to i64
  %528 = icmp ult i32 %334, 32
  br i1 %528, label %553, label %529

529:                                              ; preds = %526
  %530 = add i64 %332, 40
  %531 = sub i64 %8, %530
  %532 = icmp ult i64 %531, 128
  br i1 %532, label %553, label %533

533:                                              ; preds = %529
  %534 = and i64 %527, 4294967264
  br label %535

535:                                              ; preds = %535, %533
  %536 = phi i64 [ 0, %533 ], [ %549, %535 ]
  %537 = getelementptr inbounds float, ptr %333, i64 %536
  %538 = load <8 x float>, ptr %537, align 4, !tbaa !65
  %539 = getelementptr inbounds float, ptr %537, i64 8
  %540 = load <8 x float>, ptr %539, align 4, !tbaa !65
  %541 = getelementptr inbounds float, ptr %537, i64 16
  %542 = load <8 x float>, ptr %541, align 4, !tbaa !65
  %543 = getelementptr inbounds float, ptr %537, i64 24
  %544 = load <8 x float>, ptr %543, align 4, !tbaa !65
  %545 = getelementptr inbounds float, ptr %7, i64 %536
  store <8 x float> %538, ptr %545, align 4, !tbaa !65
  %546 = getelementptr inbounds float, ptr %545, i64 8
  store <8 x float> %540, ptr %546, align 4, !tbaa !65
  %547 = getelementptr inbounds float, ptr %545, i64 16
  store <8 x float> %542, ptr %547, align 4, !tbaa !65
  %548 = getelementptr inbounds float, ptr %545, i64 24
  store <8 x float> %544, ptr %548, align 4, !tbaa !65
  %549 = add nuw i64 %536, 32
  %550 = icmp eq i64 %549, %534
  br i1 %550, label %551, label %535, !llvm.loop !165

551:                                              ; preds = %535
  %552 = icmp eq i64 %534, %527
  br i1 %552, label %590, label %553

553:                                              ; preds = %529, %526, %551
  %554 = phi i64 [ 0, %529 ], [ 0, %526 ], [ %534, %551 ]
  %555 = xor i64 %554, -1
  %556 = add nsw i64 %555, %527
  %557 = and i64 %527, 3
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %568, label %559

559:                                              ; preds = %553, %559
  %560 = phi i64 [ %565, %559 ], [ %554, %553 ]
  %561 = phi i64 [ %566, %559 ], [ 0, %553 ]
  %562 = getelementptr inbounds float, ptr %333, i64 %560
  %563 = load float, ptr %562, align 4, !tbaa !65
  %564 = getelementptr inbounds float, ptr %7, i64 %560
  store float %563, ptr %564, align 4, !tbaa !65
  %565 = add nuw nsw i64 %560, 1
  %566 = add i64 %561, 1
  %567 = icmp eq i64 %566, %557
  br i1 %567, label %568, label %559, !llvm.loop !166

568:                                              ; preds = %559, %553
  %569 = phi i64 [ %554, %553 ], [ %565, %559 ]
  %570 = icmp ult i64 %556, 3
  br i1 %570, label %590, label %571

571:                                              ; preds = %568, %571
  %572 = phi i64 [ %588, %571 ], [ %569, %568 ]
  %573 = getelementptr inbounds float, ptr %333, i64 %572
  %574 = load float, ptr %573, align 4, !tbaa !65
  %575 = getelementptr inbounds float, ptr %7, i64 %572
  store float %574, ptr %575, align 4, !tbaa !65
  %576 = add nuw nsw i64 %572, 1
  %577 = getelementptr inbounds float, ptr %333, i64 %576
  %578 = load float, ptr %577, align 4, !tbaa !65
  %579 = getelementptr inbounds float, ptr %7, i64 %576
  store float %578, ptr %579, align 4, !tbaa !65
  %580 = add nuw nsw i64 %572, 2
  %581 = getelementptr inbounds float, ptr %333, i64 %580
  %582 = load float, ptr %581, align 4, !tbaa !65
  %583 = getelementptr inbounds float, ptr %7, i64 %580
  store float %582, ptr %583, align 4, !tbaa !65
  %584 = add nuw nsw i64 %572, 3
  %585 = getelementptr inbounds float, ptr %333, i64 %584
  %586 = load float, ptr %585, align 4, !tbaa !65
  %587 = getelementptr inbounds float, ptr %7, i64 %584
  store float %586, ptr %587, align 4, !tbaa !65
  %588 = add nuw nsw i64 %572, 4
  %589 = icmp eq i64 %588, %527
  br i1 %589, label %590, label %571, !llvm.loop !167

590:                                              ; preds = %568, %571, %551
  %591 = getelementptr inbounds %struct.CCGEdge, ptr %319, i64 0, i32 6
  %592 = load ptr, ptr %591, align 8, !tbaa !85
  %593 = getelementptr inbounds %struct.CCGVert, ptr %592, i64 1
  %594 = icmp ult i32 %334, 32
  br i1 %594, label %631, label %595

595:                                              ; preds = %590
  %596 = shl nuw nsw i64 %527, 2
  %597 = getelementptr i8, ptr %7, i64 %596
  %598 = getelementptr i8, ptr %592, i64 40
  %599 = getelementptr i8, ptr %598, i64 %596
  %600 = icmp ult ptr %7, %599
  %601 = icmp ult ptr %593, %597
  %602 = and i1 %600, %601
  br i1 %602, label %631, label %603

603:                                              ; preds = %595
  %604 = and i64 %527, 4294967264
  br label %605

605:                                              ; preds = %605, %603
  %606 = phi i64 [ 0, %603 ], [ %627, %605 ]
  %607 = getelementptr inbounds float, ptr %593, i64 %606
  %608 = load <8 x float>, ptr %607, align 4, !tbaa !65, !alias.scope !168
  %609 = getelementptr inbounds float, ptr %607, i64 8
  %610 = load <8 x float>, ptr %609, align 4, !tbaa !65, !alias.scope !168
  %611 = getelementptr inbounds float, ptr %607, i64 16
  %612 = load <8 x float>, ptr %611, align 4, !tbaa !65, !alias.scope !168
  %613 = getelementptr inbounds float, ptr %607, i64 24
  %614 = load <8 x float>, ptr %613, align 4, !tbaa !65, !alias.scope !168
  %615 = getelementptr inbounds float, ptr %7, i64 %606
  %616 = load <8 x float>, ptr %615, align 4, !tbaa !65, !alias.scope !171, !noalias !168
  %617 = getelementptr inbounds float, ptr %615, i64 8
  %618 = load <8 x float>, ptr %617, align 4, !tbaa !65, !alias.scope !171, !noalias !168
  %619 = getelementptr inbounds float, ptr %615, i64 16
  %620 = load <8 x float>, ptr %619, align 4, !tbaa !65, !alias.scope !171, !noalias !168
  %621 = getelementptr inbounds float, ptr %615, i64 24
  %622 = load <8 x float>, ptr %621, align 4, !tbaa !65, !alias.scope !171, !noalias !168
  %623 = fadd fast <8 x float> %616, %608
  %624 = fadd fast <8 x float> %618, %610
  %625 = fadd fast <8 x float> %620, %612
  %626 = fadd fast <8 x float> %622, %614
  store <8 x float> %623, ptr %615, align 4, !tbaa !65, !alias.scope !171, !noalias !168
  store <8 x float> %624, ptr %617, align 4, !tbaa !65, !alias.scope !171, !noalias !168
  store <8 x float> %625, ptr %619, align 4, !tbaa !65, !alias.scope !171, !noalias !168
  store <8 x float> %626, ptr %621, align 4, !tbaa !65, !alias.scope !171, !noalias !168
  %627 = add nuw i64 %606, 32
  %628 = icmp eq i64 %627, %604
  br i1 %628, label %629, label %605, !llvm.loop !173

629:                                              ; preds = %605
  %630 = icmp eq i64 %604, %527
  br i1 %630, label %678, label %631

631:                                              ; preds = %595, %590, %629
  %632 = phi i64 [ 0, %595 ], [ 0, %590 ], [ %604, %629 ]
  %633 = xor i64 %632, -1
  %634 = add nsw i64 %633, %527
  %635 = and i64 %527, 3
  %636 = icmp eq i64 %635, 0
  br i1 %636, label %648, label %637

637:                                              ; preds = %631, %637
  %638 = phi i64 [ %645, %637 ], [ %632, %631 ]
  %639 = phi i64 [ %646, %637 ], [ 0, %631 ]
  %640 = getelementptr inbounds float, ptr %593, i64 %638
  %641 = load float, ptr %640, align 4, !tbaa !65
  %642 = getelementptr inbounds float, ptr %7, i64 %638
  %643 = load float, ptr %642, align 4, !tbaa !65
  %644 = fadd fast float %643, %641
  store float %644, ptr %642, align 4, !tbaa !65
  %645 = add nuw nsw i64 %638, 1
  %646 = add i64 %639, 1
  %647 = icmp eq i64 %646, %635
  br i1 %647, label %648, label %637, !llvm.loop !174

648:                                              ; preds = %637, %631
  %649 = phi i64 [ %632, %631 ], [ %645, %637 ]
  %650 = icmp ult i64 %634, 3
  br i1 %650, label %678, label %651

651:                                              ; preds = %648, %651
  %652 = phi i64 [ %676, %651 ], [ %649, %648 ]
  %653 = getelementptr inbounds float, ptr %593, i64 %652
  %654 = load float, ptr %653, align 4, !tbaa !65
  %655 = getelementptr inbounds float, ptr %7, i64 %652
  %656 = load float, ptr %655, align 4, !tbaa !65
  %657 = fadd fast float %656, %654
  store float %657, ptr %655, align 4, !tbaa !65
  %658 = add nuw nsw i64 %652, 1
  %659 = getelementptr inbounds float, ptr %593, i64 %658
  %660 = load float, ptr %659, align 4, !tbaa !65
  %661 = getelementptr inbounds float, ptr %7, i64 %658
  %662 = load float, ptr %661, align 4, !tbaa !65
  %663 = fadd fast float %662, %660
  store float %663, ptr %661, align 4, !tbaa !65
  %664 = add nuw nsw i64 %652, 2
  %665 = getelementptr inbounds float, ptr %593, i64 %664
  %666 = load float, ptr %665, align 4, !tbaa !65
  %667 = getelementptr inbounds float, ptr %7, i64 %664
  %668 = load float, ptr %667, align 4, !tbaa !65
  %669 = fadd fast float %668, %666
  store float %669, ptr %667, align 4, !tbaa !65
  %670 = add nuw nsw i64 %652, 3
  %671 = getelementptr inbounds float, ptr %593, i64 %670
  %672 = load float, ptr %671, align 4, !tbaa !65
  %673 = getelementptr inbounds float, ptr %7, i64 %670
  %674 = load float, ptr %673, align 4, !tbaa !65
  %675 = fadd fast float %674, %672
  store float %675, ptr %673, align 4, !tbaa !65
  %676 = add nuw nsw i64 %652, 4
  %677 = icmp eq i64 %676, %527
  br i1 %677, label %678, label %651, !llvm.loop !175

678:                                              ; preds = %648, %651, %629
  %679 = icmp sgt i16 %326, 0
  br i1 %679, label %680, label %786

680:                                              ; preds = %523, %678
  %681 = phi ptr [ %525, %523 ], [ %592, %678 ]
  %682 = zext i16 %326 to i32
  %683 = getelementptr inbounds %struct.CCGEdge, ptr %319, i64 0, i32 7
  %684 = load ptr, ptr %683, align 8, !tbaa !52
  %685 = zext i32 %334 to i64
  %686 = zext i16 %326 to i64
  %687 = shl nuw nsw i64 %685, 2
  %688 = getelementptr i8, ptr %7, i64 %687
  %689 = icmp ult i32 %334, 32
  %690 = and i64 %685, 4294967264
  %691 = icmp eq i64 %690, %685
  %692 = and i64 %685, 3
  %693 = icmp eq i64 %692, 0
  br label %694

694:                                              ; preds = %680, %783
  %695 = phi i64 [ 0, %680 ], [ %784, %783 ]
  %696 = getelementptr inbounds ptr, ptr %684, i64 %695
  %697 = load ptr, ptr %696, align 8, !tbaa !14
  %698 = getelementptr inbounds %struct.CCGFace, ptr %697, i64 1
  %699 = getelementptr inbounds %struct.CCGFace, ptr %697, i64 0, i32 2
  %700 = load i16, ptr %699, align 8, !tbaa !89
  %701 = sext i16 %700 to i64
  %702 = getelementptr inbounds ptr, ptr %698, i64 %701
  %703 = getelementptr ptr, ptr %702, i64 %701
  br i1 %335, label %704, label %783

704:                                              ; preds = %694
  br i1 %689, label %738, label %705

705:                                              ; preds = %704
  %706 = getelementptr i8, ptr %697, i64 24
  %707 = getelementptr i8, ptr %706, i64 %687
  %708 = shl nsw i64 %701, 4
  %709 = getelementptr i8, ptr %707, i64 %708
  %710 = icmp ult ptr %7, %709
  %711 = icmp ult ptr %703, %688
  %712 = and i1 %710, %711
  br i1 %712, label %738, label %713

713:                                              ; preds = %705, %713
  %714 = phi i64 [ %735, %713 ], [ 0, %705 ]
  %715 = getelementptr inbounds float, ptr %703, i64 %714
  %716 = load <8 x float>, ptr %715, align 4, !tbaa !65, !alias.scope !176
  %717 = getelementptr inbounds float, ptr %715, i64 8
  %718 = load <8 x float>, ptr %717, align 4, !tbaa !65, !alias.scope !176
  %719 = getelementptr inbounds float, ptr %715, i64 16
  %720 = load <8 x float>, ptr %719, align 4, !tbaa !65, !alias.scope !176
  %721 = getelementptr inbounds float, ptr %715, i64 24
  %722 = load <8 x float>, ptr %721, align 4, !tbaa !65, !alias.scope !176
  %723 = getelementptr inbounds float, ptr %7, i64 %714
  %724 = load <8 x float>, ptr %723, align 4, !tbaa !65, !alias.scope !179, !noalias !176
  %725 = getelementptr inbounds float, ptr %723, i64 8
  %726 = load <8 x float>, ptr %725, align 4, !tbaa !65, !alias.scope !179, !noalias !176
  %727 = getelementptr inbounds float, ptr %723, i64 16
  %728 = load <8 x float>, ptr %727, align 4, !tbaa !65, !alias.scope !179, !noalias !176
  %729 = getelementptr inbounds float, ptr %723, i64 24
  %730 = load <8 x float>, ptr %729, align 4, !tbaa !65, !alias.scope !179, !noalias !176
  %731 = fadd fast <8 x float> %724, %716
  %732 = fadd fast <8 x float> %726, %718
  %733 = fadd fast <8 x float> %728, %720
  %734 = fadd fast <8 x float> %730, %722
  store <8 x float> %731, ptr %723, align 4, !tbaa !65, !alias.scope !179, !noalias !176
  store <8 x float> %732, ptr %725, align 4, !tbaa !65, !alias.scope !179, !noalias !176
  store <8 x float> %733, ptr %727, align 4, !tbaa !65, !alias.scope !179, !noalias !176
  store <8 x float> %734, ptr %729, align 4, !tbaa !65, !alias.scope !179, !noalias !176
  %735 = add nuw i64 %714, 32
  %736 = icmp eq i64 %735, %690
  br i1 %736, label %737, label %713, !llvm.loop !181

737:                                              ; preds = %713
  br i1 %691, label %783, label %738

738:                                              ; preds = %705, %704, %737
  %739 = phi i64 [ 0, %705 ], [ 0, %704 ], [ %690, %737 ]
  %740 = xor i64 %739, -1
  %741 = add nsw i64 %740, %685
  br i1 %693, label %753, label %742

742:                                              ; preds = %738, %742
  %743 = phi i64 [ %750, %742 ], [ %739, %738 ]
  %744 = phi i64 [ %751, %742 ], [ 0, %738 ]
  %745 = getelementptr inbounds float, ptr %703, i64 %743
  %746 = load float, ptr %745, align 4, !tbaa !65
  %747 = getelementptr inbounds float, ptr %7, i64 %743
  %748 = load float, ptr %747, align 4, !tbaa !65
  %749 = fadd fast float %748, %746
  store float %749, ptr %747, align 4, !tbaa !65
  %750 = add nuw nsw i64 %743, 1
  %751 = add i64 %744, 1
  %752 = icmp eq i64 %751, %692
  br i1 %752, label %753, label %742, !llvm.loop !182

753:                                              ; preds = %742, %738
  %754 = phi i64 [ %739, %738 ], [ %750, %742 ]
  %755 = icmp ult i64 %741, 3
  br i1 %755, label %783, label %756

756:                                              ; preds = %753, %756
  %757 = phi i64 [ %781, %756 ], [ %754, %753 ]
  %758 = getelementptr inbounds float, ptr %703, i64 %757
  %759 = load float, ptr %758, align 4, !tbaa !65
  %760 = getelementptr inbounds float, ptr %7, i64 %757
  %761 = load float, ptr %760, align 4, !tbaa !65
  %762 = fadd fast float %761, %759
  store float %762, ptr %760, align 4, !tbaa !65
  %763 = add nuw nsw i64 %757, 1
  %764 = getelementptr inbounds float, ptr %703, i64 %763
  %765 = load float, ptr %764, align 4, !tbaa !65
  %766 = getelementptr inbounds float, ptr %7, i64 %763
  %767 = load float, ptr %766, align 4, !tbaa !65
  %768 = fadd fast float %767, %765
  store float %768, ptr %766, align 4, !tbaa !65
  %769 = add nuw nsw i64 %757, 2
  %770 = getelementptr inbounds float, ptr %703, i64 %769
  %771 = load float, ptr %770, align 4, !tbaa !65
  %772 = getelementptr inbounds float, ptr %7, i64 %769
  %773 = load float, ptr %772, align 4, !tbaa !65
  %774 = fadd fast float %773, %771
  store float %774, ptr %772, align 4, !tbaa !65
  %775 = add nuw nsw i64 %757, 3
  %776 = getelementptr inbounds float, ptr %703, i64 %775
  %777 = load float, ptr %776, align 4, !tbaa !65
  %778 = getelementptr inbounds float, ptr %7, i64 %775
  %779 = load float, ptr %778, align 4, !tbaa !65
  %780 = fadd fast float %779, %777
  store float %780, ptr %778, align 4, !tbaa !65
  %781 = add nuw nsw i64 %757, 4
  %782 = icmp eq i64 %781, %685
  br i1 %782, label %783, label %756, !llvm.loop !183

783:                                              ; preds = %753, %756, %737, %694
  %784 = add nuw nsw i64 %695, 1
  %785 = icmp eq i64 %784, %686
  br i1 %785, label %786, label %694, !llvm.loop !184

786:                                              ; preds = %783, %678
  %787 = phi ptr [ %592, %678 ], [ %681, %783 ]
  %788 = phi i32 [ 0, %678 ], [ %682, %783 ]
  br i1 %335, label %789, label %1269

789:                                              ; preds = %786
  %790 = sitofp i32 %788 to float
  %791 = fadd fast float %790, 2.000000e+00
  %792 = zext i32 %334 to i64
  %793 = icmp ult i32 %334, 8
  br i1 %793, label %808, label %794

794:                                              ; preds = %789
  %795 = and i64 %792, 4294967288
  %796 = insertelement <8 x float> poison, float %791, i64 0
  %797 = shufflevector <8 x float> %796, <8 x float> poison, <8 x i32> zeroinitializer
  %798 = fdiv fast <8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %797
  br label %799

799:                                              ; preds = %799, %794
  %800 = phi i64 [ 0, %794 ], [ %804, %799 ]
  %801 = getelementptr inbounds float, ptr %7, i64 %800
  %802 = load <8 x float>, ptr %801, align 4, !tbaa !65
  %803 = fmul fast <8 x float> %802, %798
  store <8 x float> %803, ptr %801, align 4, !tbaa !65
  %804 = add nuw i64 %800, 8
  %805 = icmp eq i64 %804, %795
  br i1 %805, label %806, label %799, !llvm.loop !185

806:                                              ; preds = %799
  %807 = icmp eq i64 %795, %792
  br i1 %807, label %818, label %808

808:                                              ; preds = %789, %806
  %809 = phi i64 [ 0, %789 ], [ %795, %806 ]
  %810 = fdiv fast float 1.000000e+00, %791
  br label %811

811:                                              ; preds = %808, %811
  %812 = phi i64 [ %816, %811 ], [ %809, %808 ]
  %813 = getelementptr inbounds float, ptr %7, i64 %812
  %814 = load float, ptr %813, align 4, !tbaa !65
  %815 = fmul fast float %814, %810
  store float %815, ptr %813, align 4, !tbaa !65
  %816 = add nuw nsw i64 %812, 1
  %817 = icmp eq i64 %816, %792
  br i1 %817, label %818, label %811, !llvm.loop !186

818:                                              ; preds = %811, %806
  %819 = icmp ult i32 %334, 32
  br i1 %819, label %844, label %820

820:                                              ; preds = %818
  %821 = add i64 %332, 40
  %822 = sub i64 %11, %821
  %823 = icmp ult i64 %822, 128
  br i1 %823, label %844, label %824

824:                                              ; preds = %820
  %825 = and i64 %792, 4294967264
  br label %826

826:                                              ; preds = %826, %824
  %827 = phi i64 [ 0, %824 ], [ %840, %826 ]
  %828 = getelementptr inbounds float, ptr %333, i64 %827
  %829 = load <8 x float>, ptr %828, align 4, !tbaa !65
  %830 = getelementptr inbounds float, ptr %828, i64 8
  %831 = load <8 x float>, ptr %830, align 4, !tbaa !65
  %832 = getelementptr inbounds float, ptr %828, i64 16
  %833 = load <8 x float>, ptr %832, align 4, !tbaa !65
  %834 = getelementptr inbounds float, ptr %828, i64 24
  %835 = load <8 x float>, ptr %834, align 4, !tbaa !65
  %836 = getelementptr inbounds float, ptr %10, i64 %827
  store <8 x float> %829, ptr %836, align 4, !tbaa !65
  %837 = getelementptr inbounds float, ptr %836, i64 8
  store <8 x float> %831, ptr %837, align 4, !tbaa !65
  %838 = getelementptr inbounds float, ptr %836, i64 16
  store <8 x float> %833, ptr %838, align 4, !tbaa !65
  %839 = getelementptr inbounds float, ptr %836, i64 24
  store <8 x float> %835, ptr %839, align 4, !tbaa !65
  %840 = add nuw i64 %827, 32
  %841 = icmp eq i64 %840, %825
  br i1 %841, label %842, label %826, !llvm.loop !187

842:                                              ; preds = %826
  %843 = icmp eq i64 %825, %792
  br i1 %843, label %881, label %844

844:                                              ; preds = %820, %818, %842
  %845 = phi i64 [ 0, %820 ], [ 0, %818 ], [ %825, %842 ]
  %846 = xor i64 %845, -1
  %847 = add nsw i64 %846, %792
  %848 = and i64 %792, 3
  %849 = icmp eq i64 %848, 0
  br i1 %849, label %859, label %850

850:                                              ; preds = %844, %850
  %851 = phi i64 [ %856, %850 ], [ %845, %844 ]
  %852 = phi i64 [ %857, %850 ], [ 0, %844 ]
  %853 = getelementptr inbounds float, ptr %333, i64 %851
  %854 = load float, ptr %853, align 4, !tbaa !65
  %855 = getelementptr inbounds float, ptr %10, i64 %851
  store float %854, ptr %855, align 4, !tbaa !65
  %856 = add nuw nsw i64 %851, 1
  %857 = add i64 %852, 1
  %858 = icmp eq i64 %857, %848
  br i1 %858, label %859, label %850, !llvm.loop !188

859:                                              ; preds = %850, %844
  %860 = phi i64 [ %845, %844 ], [ %856, %850 ]
  %861 = icmp ult i64 %847, 3
  br i1 %861, label %881, label %862

862:                                              ; preds = %859, %862
  %863 = phi i64 [ %879, %862 ], [ %860, %859 ]
  %864 = getelementptr inbounds float, ptr %333, i64 %863
  %865 = load float, ptr %864, align 4, !tbaa !65
  %866 = getelementptr inbounds float, ptr %10, i64 %863
  store float %865, ptr %866, align 4, !tbaa !65
  %867 = add nuw nsw i64 %863, 1
  %868 = getelementptr inbounds float, ptr %333, i64 %867
  %869 = load float, ptr %868, align 4, !tbaa !65
  %870 = getelementptr inbounds float, ptr %10, i64 %867
  store float %869, ptr %870, align 4, !tbaa !65
  %871 = add nuw nsw i64 %863, 2
  %872 = getelementptr inbounds float, ptr %333, i64 %871
  %873 = load float, ptr %872, align 4, !tbaa !65
  %874 = getelementptr inbounds float, ptr %10, i64 %871
  store float %873, ptr %874, align 4, !tbaa !65
  %875 = add nuw nsw i64 %863, 3
  %876 = getelementptr inbounds float, ptr %333, i64 %875
  %877 = load float, ptr %876, align 4, !tbaa !65
  %878 = getelementptr inbounds float, ptr %10, i64 %875
  store float %877, ptr %878, align 4, !tbaa !65
  %879 = add nuw nsw i64 %863, 4
  %880 = icmp eq i64 %879, %792
  br i1 %880, label %881, label %862, !llvm.loop !189

881:                                              ; preds = %859, %862, %842
  %882 = getelementptr inbounds %struct.CCGVert, ptr %787, i64 1
  %883 = icmp ult i32 %334, 32
  br i1 %883, label %920, label %884

884:                                              ; preds = %881
  %885 = shl nuw nsw i64 %792, 2
  %886 = getelementptr i8, ptr %10, i64 %885
  %887 = getelementptr i8, ptr %787, i64 40
  %888 = getelementptr i8, ptr %887, i64 %885
  %889 = icmp ult ptr %10, %888
  %890 = icmp ult ptr %882, %886
  %891 = and i1 %889, %890
  br i1 %891, label %920, label %892

892:                                              ; preds = %884
  %893 = and i64 %792, 4294967264
  br label %894

894:                                              ; preds = %894, %892
  %895 = phi i64 [ 0, %892 ], [ %916, %894 ]
  %896 = getelementptr inbounds float, ptr %882, i64 %895
  %897 = load <8 x float>, ptr %896, align 4, !tbaa !65, !alias.scope !190
  %898 = getelementptr inbounds float, ptr %896, i64 8
  %899 = load <8 x float>, ptr %898, align 4, !tbaa !65, !alias.scope !190
  %900 = getelementptr inbounds float, ptr %896, i64 16
  %901 = load <8 x float>, ptr %900, align 4, !tbaa !65, !alias.scope !190
  %902 = getelementptr inbounds float, ptr %896, i64 24
  %903 = load <8 x float>, ptr %902, align 4, !tbaa !65, !alias.scope !190
  %904 = getelementptr inbounds float, ptr %10, i64 %895
  %905 = load <8 x float>, ptr %904, align 4, !tbaa !65, !alias.scope !193, !noalias !190
  %906 = getelementptr inbounds float, ptr %904, i64 8
  %907 = load <8 x float>, ptr %906, align 4, !tbaa !65, !alias.scope !193, !noalias !190
  %908 = getelementptr inbounds float, ptr %904, i64 16
  %909 = load <8 x float>, ptr %908, align 4, !tbaa !65, !alias.scope !193, !noalias !190
  %910 = getelementptr inbounds float, ptr %904, i64 24
  %911 = load <8 x float>, ptr %910, align 4, !tbaa !65, !alias.scope !193, !noalias !190
  %912 = fadd fast <8 x float> %905, %897
  %913 = fadd fast <8 x float> %907, %899
  %914 = fadd fast <8 x float> %909, %901
  %915 = fadd fast <8 x float> %911, %903
  store <8 x float> %912, ptr %904, align 4, !tbaa !65, !alias.scope !193, !noalias !190
  store <8 x float> %913, ptr %906, align 4, !tbaa !65, !alias.scope !193, !noalias !190
  store <8 x float> %914, ptr %908, align 4, !tbaa !65, !alias.scope !193, !noalias !190
  store <8 x float> %915, ptr %910, align 4, !tbaa !65, !alias.scope !193, !noalias !190
  %916 = add nuw i64 %895, 32
  %917 = icmp eq i64 %916, %893
  br i1 %917, label %918, label %894, !llvm.loop !195

918:                                              ; preds = %894
  %919 = icmp eq i64 %893, %792
  br i1 %919, label %967, label %920

920:                                              ; preds = %884, %881, %918
  %921 = phi i64 [ 0, %884 ], [ 0, %881 ], [ %893, %918 ]
  %922 = xor i64 %921, -1
  %923 = add nsw i64 %922, %792
  %924 = and i64 %792, 3
  %925 = icmp eq i64 %924, 0
  br i1 %925, label %937, label %926

926:                                              ; preds = %920, %926
  %927 = phi i64 [ %934, %926 ], [ %921, %920 ]
  %928 = phi i64 [ %935, %926 ], [ 0, %920 ]
  %929 = getelementptr inbounds float, ptr %882, i64 %927
  %930 = load float, ptr %929, align 4, !tbaa !65
  %931 = getelementptr inbounds float, ptr %10, i64 %927
  %932 = load float, ptr %931, align 4, !tbaa !65
  %933 = fadd fast float %932, %930
  store float %933, ptr %931, align 4, !tbaa !65
  %934 = add nuw nsw i64 %927, 1
  %935 = add i64 %928, 1
  %936 = icmp eq i64 %935, %924
  br i1 %936, label %937, label %926, !llvm.loop !196

937:                                              ; preds = %926, %920
  %938 = phi i64 [ %921, %920 ], [ %934, %926 ]
  %939 = icmp ult i64 %923, 3
  br i1 %939, label %967, label %940

940:                                              ; preds = %937, %940
  %941 = phi i64 [ %965, %940 ], [ %938, %937 ]
  %942 = getelementptr inbounds float, ptr %882, i64 %941
  %943 = load float, ptr %942, align 4, !tbaa !65
  %944 = getelementptr inbounds float, ptr %10, i64 %941
  %945 = load float, ptr %944, align 4, !tbaa !65
  %946 = fadd fast float %945, %943
  store float %946, ptr %944, align 4, !tbaa !65
  %947 = add nuw nsw i64 %941, 1
  %948 = getelementptr inbounds float, ptr %882, i64 %947
  %949 = load float, ptr %948, align 4, !tbaa !65
  %950 = getelementptr inbounds float, ptr %10, i64 %947
  %951 = load float, ptr %950, align 4, !tbaa !65
  %952 = fadd fast float %951, %949
  store float %952, ptr %950, align 4, !tbaa !65
  %953 = add nuw nsw i64 %941, 2
  %954 = getelementptr inbounds float, ptr %882, i64 %953
  %955 = load float, ptr %954, align 4, !tbaa !65
  %956 = getelementptr inbounds float, ptr %10, i64 %953
  %957 = load float, ptr %956, align 4, !tbaa !65
  %958 = fadd fast float %957, %955
  store float %958, ptr %956, align 4, !tbaa !65
  %959 = add nuw nsw i64 %941, 3
  %960 = getelementptr inbounds float, ptr %882, i64 %959
  %961 = load float, ptr %960, align 4, !tbaa !65
  %962 = getelementptr inbounds float, ptr %10, i64 %959
  %963 = load float, ptr %962, align 4, !tbaa !65
  %964 = fadd fast float %963, %961
  store float %964, ptr %962, align 4, !tbaa !65
  %965 = add nuw nsw i64 %941, 4
  %966 = icmp eq i64 %965, %792
  br i1 %966, label %967, label %940, !llvm.loop !197

967:                                              ; preds = %937, %940, %918
  %968 = icmp ult i32 %334, 32
  br i1 %968, label %989, label %969

969:                                              ; preds = %967
  %970 = and i64 %792, 4294967264
  br label %971

971:                                              ; preds = %971, %969
  %972 = phi i64 [ 0, %969 ], [ %985, %971 ]
  %973 = getelementptr inbounds float, ptr %10, i64 %972
  %974 = load <8 x float>, ptr %973, align 4, !tbaa !65
  %975 = getelementptr inbounds float, ptr %973, i64 8
  %976 = load <8 x float>, ptr %975, align 4, !tbaa !65
  %977 = getelementptr inbounds float, ptr %973, i64 16
  %978 = load <8 x float>, ptr %977, align 4, !tbaa !65
  %979 = getelementptr inbounds float, ptr %973, i64 24
  %980 = load <8 x float>, ptr %979, align 4, !tbaa !65
  %981 = fmul fast <8 x float> %974, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %982 = fmul fast <8 x float> %976, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %983 = fmul fast <8 x float> %978, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %984 = fmul fast <8 x float> %980, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  store <8 x float> %981, ptr %973, align 4, !tbaa !65
  store <8 x float> %982, ptr %975, align 4, !tbaa !65
  store <8 x float> %983, ptr %977, align 4, !tbaa !65
  store <8 x float> %984, ptr %979, align 4, !tbaa !65
  %985 = add nuw i64 %972, 32
  %986 = icmp eq i64 %985, %970
  br i1 %986, label %987, label %971, !llvm.loop !198

987:                                              ; preds = %971
  %988 = icmp eq i64 %970, %792
  br i1 %988, label %998, label %989

989:                                              ; preds = %967, %987
  %990 = phi i64 [ 0, %967 ], [ %970, %987 ]
  br label %991

991:                                              ; preds = %989, %991
  %992 = phi i64 [ %996, %991 ], [ %990, %989 ]
  %993 = getelementptr inbounds float, ptr %10, i64 %992
  %994 = load float, ptr %993, align 4, !tbaa !65
  %995 = fmul fast float %994, 5.000000e-01
  store float %995, ptr %993, align 4, !tbaa !65
  %996 = add nuw nsw i64 %992, 1
  %997 = icmp eq i64 %996, %792
  br i1 %997, label %998, label %991, !llvm.loop !199

998:                                              ; preds = %991, %987
  %999 = icmp ult i32 %334, 32
  br i1 %999, label %1024, label %1000

1000:                                             ; preds = %998
  %1001 = add i64 %149, %320
  %1002 = sub i64 %1001, %8
  %1003 = icmp ult i64 %1002, 128
  br i1 %1003, label %1024, label %1004

1004:                                             ; preds = %1000
  %1005 = and i64 %792, 4294967264
  br label %1006

1006:                                             ; preds = %1006, %1004
  %1007 = phi i64 [ 0, %1004 ], [ %1020, %1006 ]
  %1008 = getelementptr inbounds float, ptr %7, i64 %1007
  %1009 = load <8 x float>, ptr %1008, align 4, !tbaa !65
  %1010 = getelementptr inbounds float, ptr %1008, i64 8
  %1011 = load <8 x float>, ptr %1010, align 4, !tbaa !65
  %1012 = getelementptr inbounds float, ptr %1008, i64 16
  %1013 = load <8 x float>, ptr %1012, align 4, !tbaa !65
  %1014 = getelementptr inbounds float, ptr %1008, i64 24
  %1015 = load <8 x float>, ptr %1014, align 4, !tbaa !65
  %1016 = getelementptr inbounds float, ptr %322, i64 %1007
  store <8 x float> %1009, ptr %1016, align 4, !tbaa !65
  %1017 = getelementptr inbounds float, ptr %1016, i64 8
  store <8 x float> %1011, ptr %1017, align 4, !tbaa !65
  %1018 = getelementptr inbounds float, ptr %1016, i64 16
  store <8 x float> %1013, ptr %1018, align 4, !tbaa !65
  %1019 = getelementptr inbounds float, ptr %1016, i64 24
  store <8 x float> %1015, ptr %1019, align 4, !tbaa !65
  %1020 = add nuw i64 %1007, 32
  %1021 = icmp eq i64 %1020, %1005
  br i1 %1021, label %1022, label %1006, !llvm.loop !200

1022:                                             ; preds = %1006
  %1023 = icmp eq i64 %1005, %792
  br i1 %1023, label %1061, label %1024

1024:                                             ; preds = %1000, %998, %1022
  %1025 = phi i64 [ 0, %1000 ], [ 0, %998 ], [ %1005, %1022 ]
  %1026 = xor i64 %1025, -1
  %1027 = add nsw i64 %1026, %792
  %1028 = and i64 %792, 3
  %1029 = icmp eq i64 %1028, 0
  br i1 %1029, label %1039, label %1030

1030:                                             ; preds = %1024, %1030
  %1031 = phi i64 [ %1036, %1030 ], [ %1025, %1024 ]
  %1032 = phi i64 [ %1037, %1030 ], [ 0, %1024 ]
  %1033 = getelementptr inbounds float, ptr %7, i64 %1031
  %1034 = load float, ptr %1033, align 4, !tbaa !65
  %1035 = getelementptr inbounds float, ptr %322, i64 %1031
  store float %1034, ptr %1035, align 4, !tbaa !65
  %1036 = add nuw nsw i64 %1031, 1
  %1037 = add i64 %1032, 1
  %1038 = icmp eq i64 %1037, %1028
  br i1 %1038, label %1039, label %1030, !llvm.loop !201

1039:                                             ; preds = %1030, %1024
  %1040 = phi i64 [ %1025, %1024 ], [ %1036, %1030 ]
  %1041 = icmp ult i64 %1027, 3
  br i1 %1041, label %1061, label %1042

1042:                                             ; preds = %1039, %1042
  %1043 = phi i64 [ %1059, %1042 ], [ %1040, %1039 ]
  %1044 = getelementptr inbounds float, ptr %7, i64 %1043
  %1045 = load float, ptr %1044, align 4, !tbaa !65
  %1046 = getelementptr inbounds float, ptr %322, i64 %1043
  store float %1045, ptr %1046, align 4, !tbaa !65
  %1047 = add nuw nsw i64 %1043, 1
  %1048 = getelementptr inbounds float, ptr %7, i64 %1047
  %1049 = load float, ptr %1048, align 4, !tbaa !65
  %1050 = getelementptr inbounds float, ptr %322, i64 %1047
  store float %1049, ptr %1050, align 4, !tbaa !65
  %1051 = add nuw nsw i64 %1043, 2
  %1052 = getelementptr inbounds float, ptr %7, i64 %1051
  %1053 = load float, ptr %1052, align 4, !tbaa !65
  %1054 = getelementptr inbounds float, ptr %322, i64 %1051
  store float %1053, ptr %1054, align 4, !tbaa !65
  %1055 = add nuw nsw i64 %1043, 3
  %1056 = getelementptr inbounds float, ptr %7, i64 %1055
  %1057 = load float, ptr %1056, align 4, !tbaa !65
  %1058 = getelementptr inbounds float, ptr %322, i64 %1055
  store float %1057, ptr %1058, align 4, !tbaa !65
  %1059 = add nuw nsw i64 %1043, 4
  %1060 = icmp eq i64 %1059, %792
  br i1 %1060, label %1061, label %1042, !llvm.loop !202

1061:                                             ; preds = %1039, %1042, %1022
  %1062 = icmp ult i32 %334, 32
  br i1 %1062, label %1098, label %1063

1063:                                             ; preds = %1061
  %1064 = shl nuw nsw i64 %792, 2
  %1065 = getelementptr i8, ptr %10, i64 %1064
  %1066 = getelementptr i8, ptr %7, i64 %1064
  %1067 = icmp ult ptr %10, %1066
  %1068 = icmp ult ptr %7, %1065
  %1069 = and i1 %1067, %1068
  br i1 %1069, label %1098, label %1070

1070:                                             ; preds = %1063
  %1071 = and i64 %792, 4294967264
  br label %1072

1072:                                             ; preds = %1072, %1070
  %1073 = phi i64 [ 0, %1070 ], [ %1094, %1072 ]
  %1074 = getelementptr inbounds float, ptr %7, i64 %1073
  %1075 = load <8 x float>, ptr %1074, align 4, !tbaa !65, !alias.scope !203
  %1076 = getelementptr inbounds float, ptr %1074, i64 8
  %1077 = load <8 x float>, ptr %1076, align 4, !tbaa !65, !alias.scope !203
  %1078 = getelementptr inbounds float, ptr %1074, i64 16
  %1079 = load <8 x float>, ptr %1078, align 4, !tbaa !65, !alias.scope !203
  %1080 = getelementptr inbounds float, ptr %1074, i64 24
  %1081 = load <8 x float>, ptr %1080, align 4, !tbaa !65, !alias.scope !203
  %1082 = getelementptr inbounds float, ptr %10, i64 %1073
  %1083 = load <8 x float>, ptr %1082, align 4, !tbaa !65, !alias.scope !206, !noalias !203
  %1084 = getelementptr inbounds float, ptr %1082, i64 8
  %1085 = load <8 x float>, ptr %1084, align 4, !tbaa !65, !alias.scope !206, !noalias !203
  %1086 = getelementptr inbounds float, ptr %1082, i64 16
  %1087 = load <8 x float>, ptr %1086, align 4, !tbaa !65, !alias.scope !206, !noalias !203
  %1088 = getelementptr inbounds float, ptr %1082, i64 24
  %1089 = load <8 x float>, ptr %1088, align 4, !tbaa !65, !alias.scope !206, !noalias !203
  %1090 = fsub fast <8 x float> %1083, %1075
  %1091 = fsub fast <8 x float> %1085, %1077
  %1092 = fsub fast <8 x float> %1087, %1079
  %1093 = fsub fast <8 x float> %1089, %1081
  store <8 x float> %1090, ptr %1082, align 4, !tbaa !65, !alias.scope !206, !noalias !203
  store <8 x float> %1091, ptr %1084, align 4, !tbaa !65, !alias.scope !206, !noalias !203
  store <8 x float> %1092, ptr %1086, align 4, !tbaa !65, !alias.scope !206, !noalias !203
  store <8 x float> %1093, ptr %1088, align 4, !tbaa !65, !alias.scope !206, !noalias !203
  %1094 = add nuw i64 %1073, 32
  %1095 = icmp eq i64 %1094, %1071
  br i1 %1095, label %1096, label %1072, !llvm.loop !208

1096:                                             ; preds = %1072
  %1097 = icmp eq i64 %1071, %792
  br i1 %1097, label %1145, label %1098

1098:                                             ; preds = %1063, %1061, %1096
  %1099 = phi i64 [ 0, %1063 ], [ 0, %1061 ], [ %1071, %1096 ]
  %1100 = xor i64 %1099, -1
  %1101 = add nsw i64 %1100, %792
  %1102 = and i64 %792, 3
  %1103 = icmp eq i64 %1102, 0
  br i1 %1103, label %1115, label %1104

1104:                                             ; preds = %1098, %1104
  %1105 = phi i64 [ %1112, %1104 ], [ %1099, %1098 ]
  %1106 = phi i64 [ %1113, %1104 ], [ 0, %1098 ]
  %1107 = getelementptr inbounds float, ptr %7, i64 %1105
  %1108 = load float, ptr %1107, align 4, !tbaa !65
  %1109 = getelementptr inbounds float, ptr %10, i64 %1105
  %1110 = load float, ptr %1109, align 4, !tbaa !65
  %1111 = fsub fast float %1110, %1108
  store float %1111, ptr %1109, align 4, !tbaa !65
  %1112 = add nuw nsw i64 %1105, 1
  %1113 = add i64 %1106, 1
  %1114 = icmp eq i64 %1113, %1102
  br i1 %1114, label %1115, label %1104, !llvm.loop !209

1115:                                             ; preds = %1104, %1098
  %1116 = phi i64 [ %1099, %1098 ], [ %1112, %1104 ]
  %1117 = icmp ult i64 %1101, 3
  br i1 %1117, label %1145, label %1118

1118:                                             ; preds = %1115, %1118
  %1119 = phi i64 [ %1143, %1118 ], [ %1116, %1115 ]
  %1120 = getelementptr inbounds float, ptr %7, i64 %1119
  %1121 = load float, ptr %1120, align 4, !tbaa !65
  %1122 = getelementptr inbounds float, ptr %10, i64 %1119
  %1123 = load float, ptr %1122, align 4, !tbaa !65
  %1124 = fsub fast float %1123, %1121
  store float %1124, ptr %1122, align 4, !tbaa !65
  %1125 = add nuw nsw i64 %1119, 1
  %1126 = getelementptr inbounds float, ptr %7, i64 %1125
  %1127 = load float, ptr %1126, align 4, !tbaa !65
  %1128 = getelementptr inbounds float, ptr %10, i64 %1125
  %1129 = load float, ptr %1128, align 4, !tbaa !65
  %1130 = fsub fast float %1129, %1127
  store float %1130, ptr %1128, align 4, !tbaa !65
  %1131 = add nuw nsw i64 %1119, 2
  %1132 = getelementptr inbounds float, ptr %7, i64 %1131
  %1133 = load float, ptr %1132, align 4, !tbaa !65
  %1134 = getelementptr inbounds float, ptr %10, i64 %1131
  %1135 = load float, ptr %1134, align 4, !tbaa !65
  %1136 = fsub fast float %1135, %1133
  store float %1136, ptr %1134, align 4, !tbaa !65
  %1137 = add nuw nsw i64 %1119, 3
  %1138 = getelementptr inbounds float, ptr %7, i64 %1137
  %1139 = load float, ptr %1138, align 4, !tbaa !65
  %1140 = getelementptr inbounds float, ptr %10, i64 %1137
  %1141 = load float, ptr %1140, align 4, !tbaa !65
  %1142 = fsub fast float %1141, %1139
  store float %1142, ptr %1140, align 4, !tbaa !65
  %1143 = add nuw nsw i64 %1119, 4
  %1144 = icmp eq i64 %1143, %792
  br i1 %1144, label %1145, label %1118, !llvm.loop !210

1145:                                             ; preds = %1115, %1118, %1096
  %1146 = icmp ult i32 %334, 32
  br i1 %1146, label %1175, label %1147

1147:                                             ; preds = %1145
  %1148 = and i64 %792, 4294967264
  %1149 = insertelement <8 x float> poison, float %324, i64 0
  %1150 = shufflevector <8 x float> %1149, <8 x float> poison, <8 x i32> zeroinitializer
  %1151 = insertelement <8 x float> poison, float %324, i64 0
  %1152 = shufflevector <8 x float> %1151, <8 x float> poison, <8 x i32> zeroinitializer
  %1153 = insertelement <8 x float> poison, float %324, i64 0
  %1154 = shufflevector <8 x float> %1153, <8 x float> poison, <8 x i32> zeroinitializer
  %1155 = insertelement <8 x float> poison, float %324, i64 0
  %1156 = shufflevector <8 x float> %1155, <8 x float> poison, <8 x i32> zeroinitializer
  br label %1157

1157:                                             ; preds = %1157, %1147
  %1158 = phi i64 [ 0, %1147 ], [ %1171, %1157 ]
  %1159 = getelementptr inbounds float, ptr %10, i64 %1158
  %1160 = load <8 x float>, ptr %1159, align 4, !tbaa !65
  %1161 = getelementptr inbounds float, ptr %1159, i64 8
  %1162 = load <8 x float>, ptr %1161, align 4, !tbaa !65
  %1163 = getelementptr inbounds float, ptr %1159, i64 16
  %1164 = load <8 x float>, ptr %1163, align 4, !tbaa !65
  %1165 = getelementptr inbounds float, ptr %1159, i64 24
  %1166 = load <8 x float>, ptr %1165, align 4, !tbaa !65
  %1167 = fmul fast <8 x float> %1160, %1150
  %1168 = fmul fast <8 x float> %1162, %1152
  %1169 = fmul fast <8 x float> %1164, %1154
  %1170 = fmul fast <8 x float> %1166, %1156
  store <8 x float> %1167, ptr %1159, align 4, !tbaa !65
  store <8 x float> %1168, ptr %1161, align 4, !tbaa !65
  store <8 x float> %1169, ptr %1163, align 4, !tbaa !65
  store <8 x float> %1170, ptr %1165, align 4, !tbaa !65
  %1171 = add nuw i64 %1158, 32
  %1172 = icmp eq i64 %1171, %1148
  br i1 %1172, label %1173, label %1157, !llvm.loop !211

1173:                                             ; preds = %1157
  %1174 = icmp eq i64 %1148, %792
  br i1 %1174, label %1184, label %1175

1175:                                             ; preds = %1145, %1173
  %1176 = phi i64 [ 0, %1145 ], [ %1148, %1173 ]
  br label %1177

1177:                                             ; preds = %1175, %1177
  %1178 = phi i64 [ %1182, %1177 ], [ %1176, %1175 ]
  %1179 = getelementptr inbounds float, ptr %10, i64 %1178
  %1180 = load float, ptr %1179, align 4, !tbaa !65
  %1181 = fmul fast float %1180, %324
  store float %1181, ptr %1179, align 4, !tbaa !65
  %1182 = add nuw nsw i64 %1178, 1
  %1183 = icmp eq i64 %1182, %792
  br i1 %1183, label %1184, label %1177, !llvm.loop !212

1184:                                             ; preds = %1177, %1173
  %1185 = icmp ult i32 %334, 32
  br i1 %1185, label %1222, label %1186

1186:                                             ; preds = %1184
  %1187 = getelementptr i8, ptr %319, i64 %148
  %1188 = shl nuw nsw i64 %792, 2
  %1189 = getelementptr i8, ptr %1187, i64 %1188
  %1190 = getelementptr i8, ptr %10, i64 %1188
  %1191 = icmp ult ptr %322, %1190
  %1192 = icmp ult ptr %10, %1189
  %1193 = and i1 %1191, %1192
  br i1 %1193, label %1222, label %1194

1194:                                             ; preds = %1186
  %1195 = and i64 %792, 4294967264
  br label %1196

1196:                                             ; preds = %1196, %1194
  %1197 = phi i64 [ 0, %1194 ], [ %1218, %1196 ]
  %1198 = getelementptr inbounds float, ptr %10, i64 %1197
  %1199 = load <8 x float>, ptr %1198, align 4, !tbaa !65, !alias.scope !213
  %1200 = getelementptr inbounds float, ptr %1198, i64 8
  %1201 = load <8 x float>, ptr %1200, align 4, !tbaa !65, !alias.scope !213
  %1202 = getelementptr inbounds float, ptr %1198, i64 16
  %1203 = load <8 x float>, ptr %1202, align 4, !tbaa !65, !alias.scope !213
  %1204 = getelementptr inbounds float, ptr %1198, i64 24
  %1205 = load <8 x float>, ptr %1204, align 4, !tbaa !65, !alias.scope !213
  %1206 = getelementptr inbounds float, ptr %322, i64 %1197
  %1207 = load <8 x float>, ptr %1206, align 4, !tbaa !65, !alias.scope !216, !noalias !213
  %1208 = getelementptr inbounds float, ptr %1206, i64 8
  %1209 = load <8 x float>, ptr %1208, align 4, !tbaa !65, !alias.scope !216, !noalias !213
  %1210 = getelementptr inbounds float, ptr %1206, i64 16
  %1211 = load <8 x float>, ptr %1210, align 4, !tbaa !65, !alias.scope !216, !noalias !213
  %1212 = getelementptr inbounds float, ptr %1206, i64 24
  %1213 = load <8 x float>, ptr %1212, align 4, !tbaa !65, !alias.scope !216, !noalias !213
  %1214 = fadd fast <8 x float> %1207, %1199
  %1215 = fadd fast <8 x float> %1209, %1201
  %1216 = fadd fast <8 x float> %1211, %1203
  %1217 = fadd fast <8 x float> %1213, %1205
  store <8 x float> %1214, ptr %1206, align 4, !tbaa !65, !alias.scope !216, !noalias !213
  store <8 x float> %1215, ptr %1208, align 4, !tbaa !65, !alias.scope !216, !noalias !213
  store <8 x float> %1216, ptr %1210, align 4, !tbaa !65, !alias.scope !216, !noalias !213
  store <8 x float> %1217, ptr %1212, align 4, !tbaa !65, !alias.scope !216, !noalias !213
  %1218 = add nuw i64 %1197, 32
  %1219 = icmp eq i64 %1218, %1195
  br i1 %1219, label %1220, label %1196, !llvm.loop !218

1220:                                             ; preds = %1196
  %1221 = icmp eq i64 %1195, %792
  br i1 %1221, label %1269, label %1222

1222:                                             ; preds = %1186, %1184, %1220
  %1223 = phi i64 [ 0, %1186 ], [ 0, %1184 ], [ %1195, %1220 ]
  %1224 = xor i64 %1223, -1
  %1225 = add nsw i64 %1224, %792
  %1226 = and i64 %792, 3
  %1227 = icmp eq i64 %1226, 0
  br i1 %1227, label %1239, label %1228

1228:                                             ; preds = %1222, %1228
  %1229 = phi i64 [ %1236, %1228 ], [ %1223, %1222 ]
  %1230 = phi i64 [ %1237, %1228 ], [ 0, %1222 ]
  %1231 = getelementptr inbounds float, ptr %10, i64 %1229
  %1232 = load float, ptr %1231, align 4, !tbaa !65
  %1233 = getelementptr inbounds float, ptr %322, i64 %1229
  %1234 = load float, ptr %1233, align 4, !tbaa !65
  %1235 = fadd fast float %1234, %1232
  store float %1235, ptr %1233, align 4, !tbaa !65
  %1236 = add nuw nsw i64 %1229, 1
  %1237 = add i64 %1230, 1
  %1238 = icmp eq i64 %1237, %1226
  br i1 %1238, label %1239, label %1228, !llvm.loop !219

1239:                                             ; preds = %1228, %1222
  %1240 = phi i64 [ %1223, %1222 ], [ %1236, %1228 ]
  %1241 = icmp ult i64 %1225, 3
  br i1 %1241, label %1269, label %1242

1242:                                             ; preds = %1239, %1242
  %1243 = phi i64 [ %1267, %1242 ], [ %1240, %1239 ]
  %1244 = getelementptr inbounds float, ptr %10, i64 %1243
  %1245 = load float, ptr %1244, align 4, !tbaa !65
  %1246 = getelementptr inbounds float, ptr %322, i64 %1243
  %1247 = load float, ptr %1246, align 4, !tbaa !65
  %1248 = fadd fast float %1247, %1245
  store float %1248, ptr %1246, align 4, !tbaa !65
  %1249 = add nuw nsw i64 %1243, 1
  %1250 = getelementptr inbounds float, ptr %10, i64 %1249
  %1251 = load float, ptr %1250, align 4, !tbaa !65
  %1252 = getelementptr inbounds float, ptr %322, i64 %1249
  %1253 = load float, ptr %1252, align 4, !tbaa !65
  %1254 = fadd fast float %1253, %1251
  store float %1254, ptr %1252, align 4, !tbaa !65
  %1255 = add nuw nsw i64 %1243, 2
  %1256 = getelementptr inbounds float, ptr %10, i64 %1255
  %1257 = load float, ptr %1256, align 4, !tbaa !65
  %1258 = getelementptr inbounds float, ptr %322, i64 %1255
  %1259 = load float, ptr %1258, align 4, !tbaa !65
  %1260 = fadd fast float %1259, %1257
  store float %1260, ptr %1258, align 4, !tbaa !65
  %1261 = add nuw nsw i64 %1243, 3
  %1262 = getelementptr inbounds float, ptr %10, i64 %1261
  %1263 = load float, ptr %1262, align 4, !tbaa !65
  %1264 = getelementptr inbounds float, ptr %322, i64 %1261
  %1265 = load float, ptr %1264, align 4, !tbaa !65
  %1266 = fadd fast float %1265, %1263
  store float %1266, ptr %1264, align 4, !tbaa !65
  %1267 = add nuw nsw i64 %1243, 4
  %1268 = icmp eq i64 %1267, %792
  br i1 %1268, label %1269, label %1242, !llvm.loop !220

1269:                                             ; preds = %1239, %1242, %515, %1220, %511, %786, %336
  %1270 = add nuw nsw i64 %317, 1
  %1271 = icmp eq i64 %1270, %145
  br i1 %1271, label %300, label %316, !llvm.loop !221

1272:                                             ; preds = %303, %3311
  %1273 = phi i64 [ 0, %303 ], [ %3312, %3311 ]
  %1274 = getelementptr inbounds ptr, ptr %18, i64 %1273
  %1275 = load ptr, ptr %1274, align 8, !tbaa !14
  %1276 = ptrtoint ptr %1275 to i64
  %1277 = getelementptr %struct.CCGVert, ptr %1275, i64 1
  %1278 = getelementptr i8, ptr %1277, i64 %304
  %1279 = getelementptr i8, ptr %1275, i64 20
  %1280 = load i16, ptr %1279, align 4, !tbaa !86
  %1281 = lshr i16 %1280, 2
  %1282 = and i16 %1281, 1
  %1283 = getelementptr inbounds %struct.CCGVert, ptr %1275, i64 0, i32 2
  %1284 = load i16, ptr %1283, align 8, !tbaa !79
  %1285 = sext i16 %1284 to i32
  %1286 = icmp sgt i16 %1284, 0
  br i1 %1286, label %1287, label %1325

1287:                                             ; preds = %1272
  %1288 = getelementptr inbounds %struct.CCGVert, ptr %1275, i64 0, i32 6
  %1289 = load ptr, ptr %1288, align 8, !tbaa !56
  %1290 = icmp eq i16 %1282, 0
  %1291 = zext i32 %1285 to i64
  br label %1292

1292:                                             ; preds = %1287, %1308
  %1293 = phi i64 [ 0, %1287 ], [ %1316, %1308 ]
  %1294 = phi i32 [ 0, %1287 ], [ %1315, %1308 ]
  %1295 = phi i32 [ 1, %1287 ], [ %1313, %1308 ]
  %1296 = phi float [ 0.000000e+00, %1287 ], [ %1312, %1308 ]
  %1297 = phi i32 [ 0, %1287 ], [ %1309, %1308 ]
  %1298 = getelementptr inbounds ptr, ptr %1289, i64 %1293
  %1299 = load ptr, ptr %1298, align 8, !tbaa !14
  %1300 = getelementptr inbounds %struct.CCGEdge, ptr %1299, i64 0, i32 4
  %1301 = load float, ptr %1300, align 4, !tbaa !116
  br i1 %1290, label %1308, label %1302

1302:                                             ; preds = %1292
  %1303 = getelementptr i8, ptr %1299, i64 16
  %1304 = load i16, ptr %1303, align 8, !tbaa !81
  %1305 = icmp slt i16 %1304, 2
  %1306 = zext i1 %1305 to i32
  %1307 = add nsw i32 %1297, %1306
  br label %1308

1308:                                             ; preds = %1302, %1292
  %1309 = phi i32 [ %1297, %1292 ], [ %1307, %1302 ]
  %1310 = fcmp fast une float %1301, 0.000000e+00
  %1311 = select i1 %1310, float %1301, float -0.000000e+00
  %1312 = fadd fast float %1311, %1296
  %1313 = select i1 %1310, i32 %1295, i32 0
  %1314 = zext i1 %1310 to i32
  %1315 = add nuw nsw i32 %1294, %1314
  %1316 = add nuw nsw i64 %1293, 1
  %1317 = icmp eq i64 %1316, %1291
  br i1 %1317, label %1318, label %1292, !llvm.loop !222

1318:                                             ; preds = %1308
  %1319 = icmp eq i32 %1315, 0
  br i1 %1319, label %1325, label %1320

1320:                                             ; preds = %1318
  %1321 = sitofp i32 %1315 to float
  %1322 = fdiv fast float %1312, %1321
  %1323 = fcmp fast ogt float %1322, 1.000000e+00
  br i1 %1323, label %1324, label %1325

1324:                                             ; preds = %1320
  br label %1325

1325:                                             ; preds = %1272, %1320, %1324, %1318
  %1326 = phi i32 [ %1315, %1324 ], [ %1315, %1320 ], [ 0, %1318 ], [ 0, %1272 ]
  %1327 = phi i32 [ %1313, %1324 ], [ %1313, %1320 ], [ %1313, %1318 ], [ 1, %1272 ]
  %1328 = phi i32 [ %1309, %1324 ], [ %1309, %1320 ], [ %1309, %1318 ], [ 0, %1272 ]
  %1329 = phi float [ 1.000000e+00, %1324 ], [ %1322, %1320 ], [ %1312, %1318 ], [ 0.000000e+00, %1272 ]
  %1330 = icmp sgt i32 %1328, 1
  %1331 = icmp eq i32 %1328, %1285
  %1332 = and i1 %1330, %1331
  %1333 = icmp eq i16 %1284, 0
  br i1 %1333, label %1337, label %1334

1334:                                             ; preds = %1325
  %1335 = load i32, ptr %305, align 4, !tbaa !223
  %1336 = icmp eq i32 %1335, 0
  br i1 %1336, label %1401, label %1337

1337:                                             ; preds = %1334, %1325
  %1338 = load i32, ptr %306, align 4, !tbaa !74
  %1339 = icmp sgt i32 %1338, 0
  br i1 %1339, label %1340, label %2359

1340:                                             ; preds = %1337
  %1341 = zext i32 %1338 to i64
  %1342 = icmp ult i32 %1338, 32
  %1343 = select i1 %1342, i1 true, i1 %315
  br i1 %1343, label %1364, label %1344

1344:                                             ; preds = %1340
  %1345 = and i64 %1341, 4294967264
  br label %1346

1346:                                             ; preds = %1346, %1344
  %1347 = phi i64 [ 0, %1344 ], [ %1360, %1346 ]
  %1348 = getelementptr inbounds float, ptr %1277, i64 %1347
  %1349 = load <8 x float>, ptr %1348, align 4, !tbaa !65
  %1350 = getelementptr inbounds float, ptr %1348, i64 8
  %1351 = load <8 x float>, ptr %1350, align 4, !tbaa !65
  %1352 = getelementptr inbounds float, ptr %1348, i64 16
  %1353 = load <8 x float>, ptr %1352, align 4, !tbaa !65
  %1354 = getelementptr inbounds float, ptr %1348, i64 24
  %1355 = load <8 x float>, ptr %1354, align 4, !tbaa !65
  %1356 = getelementptr inbounds float, ptr %1278, i64 %1347
  store <8 x float> %1349, ptr %1356, align 4, !tbaa !65
  %1357 = getelementptr inbounds float, ptr %1356, i64 8
  store <8 x float> %1351, ptr %1357, align 4, !tbaa !65
  %1358 = getelementptr inbounds float, ptr %1356, i64 16
  store <8 x float> %1353, ptr %1358, align 4, !tbaa !65
  %1359 = getelementptr inbounds float, ptr %1356, i64 24
  store <8 x float> %1355, ptr %1359, align 4, !tbaa !65
  %1360 = add nuw i64 %1347, 32
  %1361 = icmp eq i64 %1360, %1345
  br i1 %1361, label %1362, label %1346, !llvm.loop !224

1362:                                             ; preds = %1346
  %1363 = icmp eq i64 %1345, %1341
  br i1 %1363, label %2359, label %1364

1364:                                             ; preds = %1340, %1362
  %1365 = phi i64 [ 0, %1340 ], [ %1345, %1362 ]
  %1366 = xor i64 %1365, -1
  %1367 = add nsw i64 %1366, %1341
  %1368 = and i64 %1341, 3
  %1369 = icmp eq i64 %1368, 0
  br i1 %1369, label %1379, label %1370

1370:                                             ; preds = %1364, %1370
  %1371 = phi i64 [ %1376, %1370 ], [ %1365, %1364 ]
  %1372 = phi i64 [ %1377, %1370 ], [ 0, %1364 ]
  %1373 = getelementptr inbounds float, ptr %1277, i64 %1371
  %1374 = load float, ptr %1373, align 4, !tbaa !65
  %1375 = getelementptr inbounds float, ptr %1278, i64 %1371
  store float %1374, ptr %1375, align 4, !tbaa !65
  %1376 = add nuw nsw i64 %1371, 1
  %1377 = add i64 %1372, 1
  %1378 = icmp eq i64 %1377, %1368
  br i1 %1378, label %1379, label %1370, !llvm.loop !225

1379:                                             ; preds = %1370, %1364
  %1380 = phi i64 [ %1365, %1364 ], [ %1376, %1370 ]
  %1381 = icmp ult i64 %1367, 3
  br i1 %1381, label %2359, label %1382

1382:                                             ; preds = %1379, %1382
  %1383 = phi i64 [ %1399, %1382 ], [ %1380, %1379 ]
  %1384 = getelementptr inbounds float, ptr %1277, i64 %1383
  %1385 = load float, ptr %1384, align 4, !tbaa !65
  %1386 = getelementptr inbounds float, ptr %1278, i64 %1383
  store float %1385, ptr %1386, align 4, !tbaa !65
  %1387 = add nuw nsw i64 %1383, 1
  %1388 = getelementptr inbounds float, ptr %1277, i64 %1387
  %1389 = load float, ptr %1388, align 4, !tbaa !65
  %1390 = getelementptr inbounds float, ptr %1278, i64 %1387
  store float %1389, ptr %1390, align 4, !tbaa !65
  %1391 = add nuw nsw i64 %1383, 2
  %1392 = getelementptr inbounds float, ptr %1277, i64 %1391
  %1393 = load float, ptr %1392, align 4, !tbaa !65
  %1394 = getelementptr inbounds float, ptr %1278, i64 %1391
  store float %1393, ptr %1394, align 4, !tbaa !65
  %1395 = add nuw nsw i64 %1383, 3
  %1396 = getelementptr inbounds float, ptr %1277, i64 %1395
  %1397 = load float, ptr %1396, align 4, !tbaa !65
  %1398 = getelementptr inbounds float, ptr %1278, i64 %1395
  store float %1397, ptr %1398, align 4, !tbaa !65
  %1399 = add nuw nsw i64 %1383, 4
  %1400 = icmp eq i64 %1399, %1341
  br i1 %1400, label %2359, label %1382, !llvm.loop !226

1401:                                             ; preds = %1334
  br i1 %1286, label %1402, label %1747

1402:                                             ; preds = %1401
  %1403 = zext i16 %1284 to i64
  %1404 = getelementptr inbounds %struct.CCGVert, ptr %1275, i64 0, i32 6
  %1405 = load ptr, ptr %1404, align 8, !tbaa !56
  br label %1409

1406:                                             ; preds = %1409
  %1407 = add nuw nsw i64 %1410, 1
  %1408 = icmp eq i64 %1407, %1403
  br i1 %1408, label %1747, label %1409, !llvm.loop !227

1409:                                             ; preds = %1406, %1402
  %1410 = phi i64 [ 0, %1402 ], [ %1407, %1406 ]
  %1411 = getelementptr inbounds ptr, ptr %1405, i64 %1410
  %1412 = load ptr, ptr %1411, align 8, !tbaa !14
  %1413 = getelementptr i8, ptr %1412, i64 16
  %1414 = load i16, ptr %1413, align 8, !tbaa !81
  %1415 = icmp sgt i16 %1414, 1
  br i1 %1415, label %1406, label %1416

1416:                                             ; preds = %1409
  %1417 = load i32, ptr %306, align 4, !tbaa !74
  %1418 = sext i32 %1417 to i64
  %1419 = shl nsw i64 %1418, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %10, i8 0, i64 %1419, i1 false)
  %1420 = load i16, ptr %1283, align 8, !tbaa !79
  %1421 = icmp sgt i16 %1420, 0
  br i1 %1421, label %1422, label %1537

1422:                                             ; preds = %1416
  %1423 = zext i16 %1420 to i64
  %1424 = load ptr, ptr %1404, align 8, !tbaa !56
  br label %1425

1425:                                             ; preds = %1422, %1533
  %1426 = phi i64 [ 0, %1422 ], [ %1535, %1533 ]
  %1427 = phi i32 [ 0, %1422 ], [ %1534, %1533 ]
  %1428 = getelementptr inbounds ptr, ptr %1424, i64 %1426
  %1429 = load ptr, ptr %1428, align 8, !tbaa !14
  %1430 = getelementptr i8, ptr %1429, i64 16
  %1431 = load i16, ptr %1430, align 8, !tbaa !81
  %1432 = icmp sgt i16 %1431, 1
  br i1 %1432, label %1533, label %1433

1433:                                             ; preds = %1425
  %1434 = getelementptr inbounds %struct.CCGEdge, ptr %1429, i64 0, i32 5
  %1435 = load ptr, ptr %1434, align 8, !tbaa !83
  %1436 = icmp eq ptr %1435, %1275
  br i1 %1436, label %1437, label %1440

1437:                                             ; preds = %1433
  %1438 = getelementptr inbounds %struct.CCGEdge, ptr %1429, i64 0, i32 6
  %1439 = load ptr, ptr %1438, align 8, !tbaa !85
  br label %1440

1440:                                             ; preds = %1433, %1437
  %1441 = phi ptr [ %1439, %1437 ], [ %1435, %1433 ]
  %1442 = getelementptr %struct.CCGVert, ptr %1441, i64 1
  %1443 = load i32, ptr %306, align 4, !tbaa !74
  %1444 = icmp sgt i32 %1443, 0
  br i1 %1444, label %1445, label %1531

1445:                                             ; preds = %1440
  %1446 = zext i32 %1443 to i64
  %1447 = icmp ult i32 %1443, 32
  br i1 %1447, label %1484, label %1448

1448:                                             ; preds = %1445
  %1449 = shl nuw nsw i64 %1446, 2
  %1450 = getelementptr i8, ptr %10, i64 %1449
  %1451 = getelementptr i8, ptr %1441, i64 40
  %1452 = getelementptr i8, ptr %1451, i64 %1449
  %1453 = icmp ult ptr %10, %1452
  %1454 = icmp ult ptr %1442, %1450
  %1455 = and i1 %1453, %1454
  br i1 %1455, label %1484, label %1456

1456:                                             ; preds = %1448
  %1457 = and i64 %1446, 4294967264
  br label %1458

1458:                                             ; preds = %1458, %1456
  %1459 = phi i64 [ 0, %1456 ], [ %1480, %1458 ]
  %1460 = getelementptr inbounds float, ptr %1442, i64 %1459
  %1461 = load <8 x float>, ptr %1460, align 4, !tbaa !65, !alias.scope !228
  %1462 = getelementptr inbounds float, ptr %1460, i64 8
  %1463 = load <8 x float>, ptr %1462, align 4, !tbaa !65, !alias.scope !228
  %1464 = getelementptr inbounds float, ptr %1460, i64 16
  %1465 = load <8 x float>, ptr %1464, align 4, !tbaa !65, !alias.scope !228
  %1466 = getelementptr inbounds float, ptr %1460, i64 24
  %1467 = load <8 x float>, ptr %1466, align 4, !tbaa !65, !alias.scope !228
  %1468 = getelementptr inbounds float, ptr %10, i64 %1459
  %1469 = load <8 x float>, ptr %1468, align 4, !tbaa !65, !alias.scope !231, !noalias !228
  %1470 = getelementptr inbounds float, ptr %1468, i64 8
  %1471 = load <8 x float>, ptr %1470, align 4, !tbaa !65, !alias.scope !231, !noalias !228
  %1472 = getelementptr inbounds float, ptr %1468, i64 16
  %1473 = load <8 x float>, ptr %1472, align 4, !tbaa !65, !alias.scope !231, !noalias !228
  %1474 = getelementptr inbounds float, ptr %1468, i64 24
  %1475 = load <8 x float>, ptr %1474, align 4, !tbaa !65, !alias.scope !231, !noalias !228
  %1476 = fadd fast <8 x float> %1469, %1461
  %1477 = fadd fast <8 x float> %1471, %1463
  %1478 = fadd fast <8 x float> %1473, %1465
  %1479 = fadd fast <8 x float> %1475, %1467
  store <8 x float> %1476, ptr %1468, align 4, !tbaa !65, !alias.scope !231, !noalias !228
  store <8 x float> %1477, ptr %1470, align 4, !tbaa !65, !alias.scope !231, !noalias !228
  store <8 x float> %1478, ptr %1472, align 4, !tbaa !65, !alias.scope !231, !noalias !228
  store <8 x float> %1479, ptr %1474, align 4, !tbaa !65, !alias.scope !231, !noalias !228
  %1480 = add nuw i64 %1459, 32
  %1481 = icmp eq i64 %1480, %1457
  br i1 %1481, label %1482, label %1458, !llvm.loop !233

1482:                                             ; preds = %1458
  %1483 = icmp eq i64 %1457, %1446
  br i1 %1483, label %1531, label %1484

1484:                                             ; preds = %1448, %1445, %1482
  %1485 = phi i64 [ 0, %1448 ], [ 0, %1445 ], [ %1457, %1482 ]
  %1486 = xor i64 %1485, -1
  %1487 = add nsw i64 %1486, %1446
  %1488 = and i64 %1446, 3
  %1489 = icmp eq i64 %1488, 0
  br i1 %1489, label %1501, label %1490

1490:                                             ; preds = %1484, %1490
  %1491 = phi i64 [ %1498, %1490 ], [ %1485, %1484 ]
  %1492 = phi i64 [ %1499, %1490 ], [ 0, %1484 ]
  %1493 = getelementptr inbounds float, ptr %1442, i64 %1491
  %1494 = load float, ptr %1493, align 4, !tbaa !65
  %1495 = getelementptr inbounds float, ptr %10, i64 %1491
  %1496 = load float, ptr %1495, align 4, !tbaa !65
  %1497 = fadd fast float %1496, %1494
  store float %1497, ptr %1495, align 4, !tbaa !65
  %1498 = add nuw nsw i64 %1491, 1
  %1499 = add i64 %1492, 1
  %1500 = icmp eq i64 %1499, %1488
  br i1 %1500, label %1501, label %1490, !llvm.loop !234

1501:                                             ; preds = %1490, %1484
  %1502 = phi i64 [ %1485, %1484 ], [ %1498, %1490 ]
  %1503 = icmp ult i64 %1487, 3
  br i1 %1503, label %1531, label %1504

1504:                                             ; preds = %1501, %1504
  %1505 = phi i64 [ %1529, %1504 ], [ %1502, %1501 ]
  %1506 = getelementptr inbounds float, ptr %1442, i64 %1505
  %1507 = load float, ptr %1506, align 4, !tbaa !65
  %1508 = getelementptr inbounds float, ptr %10, i64 %1505
  %1509 = load float, ptr %1508, align 4, !tbaa !65
  %1510 = fadd fast float %1509, %1507
  store float %1510, ptr %1508, align 4, !tbaa !65
  %1511 = add nuw nsw i64 %1505, 1
  %1512 = getelementptr inbounds float, ptr %1442, i64 %1511
  %1513 = load float, ptr %1512, align 4, !tbaa !65
  %1514 = getelementptr inbounds float, ptr %10, i64 %1511
  %1515 = load float, ptr %1514, align 4, !tbaa !65
  %1516 = fadd fast float %1515, %1513
  store float %1516, ptr %1514, align 4, !tbaa !65
  %1517 = add nuw nsw i64 %1505, 2
  %1518 = getelementptr inbounds float, ptr %1442, i64 %1517
  %1519 = load float, ptr %1518, align 4, !tbaa !65
  %1520 = getelementptr inbounds float, ptr %10, i64 %1517
  %1521 = load float, ptr %1520, align 4, !tbaa !65
  %1522 = fadd fast float %1521, %1519
  store float %1522, ptr %1520, align 4, !tbaa !65
  %1523 = add nuw nsw i64 %1505, 3
  %1524 = getelementptr inbounds float, ptr %1442, i64 %1523
  %1525 = load float, ptr %1524, align 4, !tbaa !65
  %1526 = getelementptr inbounds float, ptr %10, i64 %1523
  %1527 = load float, ptr %1526, align 4, !tbaa !65
  %1528 = fadd fast float %1527, %1525
  store float %1528, ptr %1526, align 4, !tbaa !65
  %1529 = add nuw nsw i64 %1505, 4
  %1530 = icmp eq i64 %1529, %1446
  br i1 %1530, label %1531, label %1504, !llvm.loop !235

1531:                                             ; preds = %1501, %1504, %1482, %1440
  %1532 = add nsw i32 %1427, 1
  br label %1533

1533:                                             ; preds = %1531, %1425
  %1534 = phi i32 [ %1532, %1531 ], [ %1427, %1425 ]
  %1535 = add nuw nsw i64 %1426, 1
  %1536 = icmp eq i64 %1535, %1423
  br i1 %1536, label %1537, label %1425, !llvm.loop !236

1537:                                             ; preds = %1533, %1416
  %1538 = phi i32 [ 0, %1416 ], [ %1534, %1533 ]
  %1539 = load i32, ptr %306, align 4, !tbaa !74
  %1540 = icmp sgt i32 %1539, 0
  br i1 %1540, label %1541, label %2359

1541:                                             ; preds = %1537
  %1542 = zext i32 %1539 to i64
  %1543 = icmp ult i32 %1539, 32
  %1544 = select i1 %1543, i1 true, i1 %313
  br i1 %1544, label %1565, label %1545

1545:                                             ; preds = %1541
  %1546 = and i64 %1542, 4294967264
  br label %1547

1547:                                             ; preds = %1547, %1545
  %1548 = phi i64 [ 0, %1545 ], [ %1561, %1547 ]
  %1549 = getelementptr inbounds float, ptr %1277, i64 %1548
  %1550 = load <8 x float>, ptr %1549, align 4, !tbaa !65
  %1551 = getelementptr inbounds float, ptr %1549, i64 8
  %1552 = load <8 x float>, ptr %1551, align 4, !tbaa !65
  %1553 = getelementptr inbounds float, ptr %1549, i64 16
  %1554 = load <8 x float>, ptr %1553, align 4, !tbaa !65
  %1555 = getelementptr inbounds float, ptr %1549, i64 24
  %1556 = load <8 x float>, ptr %1555, align 4, !tbaa !65
  %1557 = getelementptr inbounds float, ptr %1278, i64 %1548
  store <8 x float> %1550, ptr %1557, align 4, !tbaa !65
  %1558 = getelementptr inbounds float, ptr %1557, i64 8
  store <8 x float> %1552, ptr %1558, align 4, !tbaa !65
  %1559 = getelementptr inbounds float, ptr %1557, i64 16
  store <8 x float> %1554, ptr %1559, align 4, !tbaa !65
  %1560 = getelementptr inbounds float, ptr %1557, i64 24
  store <8 x float> %1556, ptr %1560, align 4, !tbaa !65
  %1561 = add nuw i64 %1548, 32
  %1562 = icmp eq i64 %1561, %1546
  br i1 %1562, label %1563, label %1547, !llvm.loop !237

1563:                                             ; preds = %1547
  %1564 = icmp eq i64 %1546, %1542
  br i1 %1564, label %1602, label %1565

1565:                                             ; preds = %1541, %1563
  %1566 = phi i64 [ 0, %1541 ], [ %1546, %1563 ]
  %1567 = xor i64 %1566, -1
  %1568 = add nsw i64 %1567, %1542
  %1569 = and i64 %1542, 3
  %1570 = icmp eq i64 %1569, 0
  br i1 %1570, label %1580, label %1571

1571:                                             ; preds = %1565, %1571
  %1572 = phi i64 [ %1577, %1571 ], [ %1566, %1565 ]
  %1573 = phi i64 [ %1578, %1571 ], [ 0, %1565 ]
  %1574 = getelementptr inbounds float, ptr %1277, i64 %1572
  %1575 = load float, ptr %1574, align 4, !tbaa !65
  %1576 = getelementptr inbounds float, ptr %1278, i64 %1572
  store float %1575, ptr %1576, align 4, !tbaa !65
  %1577 = add nuw nsw i64 %1572, 1
  %1578 = add i64 %1573, 1
  %1579 = icmp eq i64 %1578, %1569
  br i1 %1579, label %1580, label %1571, !llvm.loop !238

1580:                                             ; preds = %1571, %1565
  %1581 = phi i64 [ %1566, %1565 ], [ %1577, %1571 ]
  %1582 = icmp ult i64 %1568, 3
  br i1 %1582, label %1602, label %1583

1583:                                             ; preds = %1580, %1583
  %1584 = phi i64 [ %1600, %1583 ], [ %1581, %1580 ]
  %1585 = getelementptr inbounds float, ptr %1277, i64 %1584
  %1586 = load float, ptr %1585, align 4, !tbaa !65
  %1587 = getelementptr inbounds float, ptr %1278, i64 %1584
  store float %1586, ptr %1587, align 4, !tbaa !65
  %1588 = add nuw nsw i64 %1584, 1
  %1589 = getelementptr inbounds float, ptr %1277, i64 %1588
  %1590 = load float, ptr %1589, align 4, !tbaa !65
  %1591 = getelementptr inbounds float, ptr %1278, i64 %1588
  store float %1590, ptr %1591, align 4, !tbaa !65
  %1592 = add nuw nsw i64 %1584, 2
  %1593 = getelementptr inbounds float, ptr %1277, i64 %1592
  %1594 = load float, ptr %1593, align 4, !tbaa !65
  %1595 = getelementptr inbounds float, ptr %1278, i64 %1592
  store float %1594, ptr %1595, align 4, !tbaa !65
  %1596 = add nuw nsw i64 %1584, 3
  %1597 = getelementptr inbounds float, ptr %1277, i64 %1596
  %1598 = load float, ptr %1597, align 4, !tbaa !65
  %1599 = getelementptr inbounds float, ptr %1278, i64 %1596
  store float %1598, ptr %1599, align 4, !tbaa !65
  %1600 = add nuw nsw i64 %1584, 4
  %1601 = icmp eq i64 %1600, %1542
  br i1 %1601, label %1602, label %1583, !llvm.loop !239

1602:                                             ; preds = %1580, %1583, %1563
  %1603 = icmp ult i32 %1539, 32
  br i1 %1603, label %1624, label %1604

1604:                                             ; preds = %1602
  %1605 = and i64 %1542, 4294967264
  br label %1606

1606:                                             ; preds = %1606, %1604
  %1607 = phi i64 [ 0, %1604 ], [ %1620, %1606 ]
  %1608 = getelementptr inbounds float, ptr %1278, i64 %1607
  %1609 = load <8 x float>, ptr %1608, align 4, !tbaa !65
  %1610 = getelementptr inbounds float, ptr %1608, i64 8
  %1611 = load <8 x float>, ptr %1610, align 4, !tbaa !65
  %1612 = getelementptr inbounds float, ptr %1608, i64 16
  %1613 = load <8 x float>, ptr %1612, align 4, !tbaa !65
  %1614 = getelementptr inbounds float, ptr %1608, i64 24
  %1615 = load <8 x float>, ptr %1614, align 4, !tbaa !65
  %1616 = fmul fast <8 x float> %1609, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  %1617 = fmul fast <8 x float> %1611, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  %1618 = fmul fast <8 x float> %1613, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  %1619 = fmul fast <8 x float> %1615, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  store <8 x float> %1616, ptr %1608, align 4, !tbaa !65
  store <8 x float> %1617, ptr %1610, align 4, !tbaa !65
  store <8 x float> %1618, ptr %1612, align 4, !tbaa !65
  store <8 x float> %1619, ptr %1614, align 4, !tbaa !65
  %1620 = add nuw i64 %1607, 32
  %1621 = icmp eq i64 %1620, %1605
  br i1 %1621, label %1622, label %1606, !llvm.loop !240

1622:                                             ; preds = %1606
  %1623 = icmp eq i64 %1605, %1542
  br i1 %1623, label %1633, label %1624

1624:                                             ; preds = %1602, %1622
  %1625 = phi i64 [ 0, %1602 ], [ %1605, %1622 ]
  br label %1626

1626:                                             ; preds = %1624, %1626
  %1627 = phi i64 [ %1631, %1626 ], [ %1625, %1624 ]
  %1628 = getelementptr inbounds float, ptr %1278, i64 %1627
  %1629 = load float, ptr %1628, align 4, !tbaa !65
  %1630 = fmul fast float %1629, 7.500000e-01
  store float %1630, ptr %1628, align 4, !tbaa !65
  %1631 = add nuw nsw i64 %1627, 1
  %1632 = icmp eq i64 %1631, %1542
  br i1 %1632, label %1633, label %1626, !llvm.loop !241

1633:                                             ; preds = %1626, %1622
  %1634 = sitofp i32 %1538 to float
  %1635 = icmp ult i32 %1539, 8
  br i1 %1635, label %1651, label %1636

1636:                                             ; preds = %1633
  %1637 = and i64 %1542, 4294967288
  %1638 = insertelement <8 x float> poison, float %1634, i64 0
  %1639 = shufflevector <8 x float> %1638, <8 x float> poison, <8 x i32> zeroinitializer
  %1640 = fdiv fast <8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1639
  br label %1641

1641:                                             ; preds = %1641, %1636
  %1642 = phi i64 [ 0, %1636 ], [ %1647, %1641 ]
  %1643 = getelementptr inbounds float, ptr %10, i64 %1642
  %1644 = load <8 x float>, ptr %1643, align 4, !tbaa !65
  %1645 = fmul fast <8 x float> %1644, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %1646 = fmul fast <8 x float> %1645, %1640
  store <8 x float> %1646, ptr %1643, align 4, !tbaa !65
  %1647 = add nuw i64 %1642, 8
  %1648 = icmp eq i64 %1647, %1637
  br i1 %1648, label %1649, label %1641, !llvm.loop !242

1649:                                             ; preds = %1641
  %1650 = icmp eq i64 %1637, %1542
  br i1 %1650, label %1662, label %1651

1651:                                             ; preds = %1633, %1649
  %1652 = phi i64 [ 0, %1633 ], [ %1637, %1649 ]
  %1653 = fdiv fast float 1.000000e+00, %1634
  br label %1654

1654:                                             ; preds = %1651, %1654
  %1655 = phi i64 [ %1660, %1654 ], [ %1652, %1651 ]
  %1656 = getelementptr inbounds float, ptr %10, i64 %1655
  %1657 = load float, ptr %1656, align 4, !tbaa !65
  %1658 = fmul fast float %1657, 2.500000e-01
  %1659 = fmul fast float %1658, %1653
  store float %1659, ptr %1656, align 4, !tbaa !65
  %1660 = add nuw nsw i64 %1655, 1
  %1661 = icmp eq i64 %1660, %1542
  br i1 %1661, label %1662, label %1654, !llvm.loop !243

1662:                                             ; preds = %1654, %1649
  %1663 = icmp ult i32 %1539, 32
  br i1 %1663, label %1700, label %1664

1664:                                             ; preds = %1662
  %1665 = getelementptr i8, ptr %1275, i64 %312
  %1666 = shl nuw nsw i64 %1542, 2
  %1667 = getelementptr i8, ptr %1665, i64 %1666
  %1668 = getelementptr i8, ptr %10, i64 %1666
  %1669 = icmp ult ptr %1278, %1668
  %1670 = icmp ult ptr %10, %1667
  %1671 = and i1 %1669, %1670
  br i1 %1671, label %1700, label %1672

1672:                                             ; preds = %1664
  %1673 = and i64 %1542, 4294967264
  br label %1674

1674:                                             ; preds = %1674, %1672
  %1675 = phi i64 [ 0, %1672 ], [ %1696, %1674 ]
  %1676 = getelementptr inbounds float, ptr %10, i64 %1675
  %1677 = load <8 x float>, ptr %1676, align 4, !tbaa !65, !alias.scope !244
  %1678 = getelementptr inbounds float, ptr %1676, i64 8
  %1679 = load <8 x float>, ptr %1678, align 4, !tbaa !65, !alias.scope !244
  %1680 = getelementptr inbounds float, ptr %1676, i64 16
  %1681 = load <8 x float>, ptr %1680, align 4, !tbaa !65, !alias.scope !244
  %1682 = getelementptr inbounds float, ptr %1676, i64 24
  %1683 = load <8 x float>, ptr %1682, align 4, !tbaa !65, !alias.scope !244
  %1684 = getelementptr inbounds float, ptr %1278, i64 %1675
  %1685 = load <8 x float>, ptr %1684, align 4, !tbaa !65, !alias.scope !247, !noalias !244
  %1686 = getelementptr inbounds float, ptr %1684, i64 8
  %1687 = load <8 x float>, ptr %1686, align 4, !tbaa !65, !alias.scope !247, !noalias !244
  %1688 = getelementptr inbounds float, ptr %1684, i64 16
  %1689 = load <8 x float>, ptr %1688, align 4, !tbaa !65, !alias.scope !247, !noalias !244
  %1690 = getelementptr inbounds float, ptr %1684, i64 24
  %1691 = load <8 x float>, ptr %1690, align 4, !tbaa !65, !alias.scope !247, !noalias !244
  %1692 = fadd fast <8 x float> %1685, %1677
  %1693 = fadd fast <8 x float> %1687, %1679
  %1694 = fadd fast <8 x float> %1689, %1681
  %1695 = fadd fast <8 x float> %1691, %1683
  store <8 x float> %1692, ptr %1684, align 4, !tbaa !65, !alias.scope !247, !noalias !244
  store <8 x float> %1693, ptr %1686, align 4, !tbaa !65, !alias.scope !247, !noalias !244
  store <8 x float> %1694, ptr %1688, align 4, !tbaa !65, !alias.scope !247, !noalias !244
  store <8 x float> %1695, ptr %1690, align 4, !tbaa !65, !alias.scope !247, !noalias !244
  %1696 = add nuw i64 %1675, 32
  %1697 = icmp eq i64 %1696, %1673
  br i1 %1697, label %1698, label %1674, !llvm.loop !249

1698:                                             ; preds = %1674
  %1699 = icmp eq i64 %1673, %1542
  br i1 %1699, label %2359, label %1700

1700:                                             ; preds = %1664, %1662, %1698
  %1701 = phi i64 [ 0, %1664 ], [ 0, %1662 ], [ %1673, %1698 ]
  %1702 = xor i64 %1701, -1
  %1703 = add nsw i64 %1702, %1542
  %1704 = and i64 %1542, 3
  %1705 = icmp eq i64 %1704, 0
  br i1 %1705, label %1717, label %1706

1706:                                             ; preds = %1700, %1706
  %1707 = phi i64 [ %1714, %1706 ], [ %1701, %1700 ]
  %1708 = phi i64 [ %1715, %1706 ], [ 0, %1700 ]
  %1709 = getelementptr inbounds float, ptr %10, i64 %1707
  %1710 = load float, ptr %1709, align 4, !tbaa !65
  %1711 = getelementptr inbounds float, ptr %1278, i64 %1707
  %1712 = load float, ptr %1711, align 4, !tbaa !65
  %1713 = fadd fast float %1712, %1710
  store float %1713, ptr %1711, align 4, !tbaa !65
  %1714 = add nuw nsw i64 %1707, 1
  %1715 = add i64 %1708, 1
  %1716 = icmp eq i64 %1715, %1704
  br i1 %1716, label %1717, label %1706, !llvm.loop !250

1717:                                             ; preds = %1706, %1700
  %1718 = phi i64 [ %1701, %1700 ], [ %1714, %1706 ]
  %1719 = icmp ult i64 %1703, 3
  br i1 %1719, label %2359, label %1720

1720:                                             ; preds = %1717, %1720
  %1721 = phi i64 [ %1745, %1720 ], [ %1718, %1717 ]
  %1722 = getelementptr inbounds float, ptr %10, i64 %1721
  %1723 = load float, ptr %1722, align 4, !tbaa !65
  %1724 = getelementptr inbounds float, ptr %1278, i64 %1721
  %1725 = load float, ptr %1724, align 4, !tbaa !65
  %1726 = fadd fast float %1725, %1723
  store float %1726, ptr %1724, align 4, !tbaa !65
  %1727 = add nuw nsw i64 %1721, 1
  %1728 = getelementptr inbounds float, ptr %10, i64 %1727
  %1729 = load float, ptr %1728, align 4, !tbaa !65
  %1730 = getelementptr inbounds float, ptr %1278, i64 %1727
  %1731 = load float, ptr %1730, align 4, !tbaa !65
  %1732 = fadd fast float %1731, %1729
  store float %1732, ptr %1730, align 4, !tbaa !65
  %1733 = add nuw nsw i64 %1721, 2
  %1734 = getelementptr inbounds float, ptr %10, i64 %1733
  %1735 = load float, ptr %1734, align 4, !tbaa !65
  %1736 = getelementptr inbounds float, ptr %1278, i64 %1733
  %1737 = load float, ptr %1736, align 4, !tbaa !65
  %1738 = fadd fast float %1737, %1735
  store float %1738, ptr %1736, align 4, !tbaa !65
  %1739 = add nuw nsw i64 %1721, 3
  %1740 = getelementptr inbounds float, ptr %10, i64 %1739
  %1741 = load float, ptr %1740, align 4, !tbaa !65
  %1742 = getelementptr inbounds float, ptr %1278, i64 %1739
  %1743 = load float, ptr %1742, align 4, !tbaa !65
  %1744 = fadd fast float %1743, %1741
  store float %1744, ptr %1742, align 4, !tbaa !65
  %1745 = add nuw nsw i64 %1721, 4
  %1746 = icmp eq i64 %1745, %1542
  br i1 %1746, label %2359, label %1720, !llvm.loop !251

1747:                                             ; preds = %1406, %1401
  %1748 = load i32, ptr %306, align 4, !tbaa !74
  %1749 = sext i32 %1748 to i64
  %1750 = shl nsw i64 %1749, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %7, i8 0, i64 %1750, i1 false)
  %1751 = getelementptr inbounds %struct.CCGVert, ptr %1275, i64 0, i32 3
  %1752 = load i16, ptr %1751, align 2, !tbaa !78
  %1753 = sext i16 %1752 to i32
  %1754 = icmp sgt i16 %1752, 0
  %1755 = load i32, ptr %306, align 4, !tbaa !74
  br i1 %1754, label %1756, label %1861

1756:                                             ; preds = %1747
  %1757 = getelementptr inbounds %struct.CCGVert, ptr %1275, i64 0, i32 7
  %1758 = load ptr, ptr %1757, align 8, !tbaa !58
  %1759 = icmp sgt i32 %1755, 0
  %1760 = zext i32 %1755 to i64
  %1761 = zext i32 %1753 to i64
  %1762 = shl nuw nsw i64 %1760, 2
  %1763 = getelementptr i8, ptr %7, i64 %1762
  %1764 = icmp ult i32 %1755, 32
  %1765 = and i64 %1760, 4294967264
  %1766 = icmp eq i64 %1765, %1760
  %1767 = and i64 %1760, 3
  %1768 = icmp eq i64 %1767, 0
  br label %1769

1769:                                             ; preds = %1756, %1858
  %1770 = phi i64 [ 0, %1756 ], [ %1859, %1858 ]
  %1771 = getelementptr inbounds ptr, ptr %1758, i64 %1770
  %1772 = load ptr, ptr %1771, align 8, !tbaa !14
  %1773 = getelementptr inbounds %struct.CCGFace, ptr %1772, i64 1
  %1774 = getelementptr inbounds %struct.CCGFace, ptr %1772, i64 0, i32 2
  %1775 = load i16, ptr %1774, align 8, !tbaa !89
  %1776 = sext i16 %1775 to i64
  %1777 = getelementptr inbounds ptr, ptr %1773, i64 %1776
  %1778 = getelementptr ptr, ptr %1777, i64 %1776
  br i1 %1759, label %1779, label %1858

1779:                                             ; preds = %1769
  br i1 %1764, label %1813, label %1780

1780:                                             ; preds = %1779
  %1781 = getelementptr i8, ptr %1772, i64 24
  %1782 = getelementptr i8, ptr %1781, i64 %1762
  %1783 = shl nsw i64 %1776, 4
  %1784 = getelementptr i8, ptr %1782, i64 %1783
  %1785 = icmp ult ptr %7, %1784
  %1786 = icmp ult ptr %1778, %1763
  %1787 = and i1 %1785, %1786
  br i1 %1787, label %1813, label %1788

1788:                                             ; preds = %1780, %1788
  %1789 = phi i64 [ %1810, %1788 ], [ 0, %1780 ]
  %1790 = getelementptr inbounds float, ptr %1778, i64 %1789
  %1791 = load <8 x float>, ptr %1790, align 4, !tbaa !65, !alias.scope !252
  %1792 = getelementptr inbounds float, ptr %1790, i64 8
  %1793 = load <8 x float>, ptr %1792, align 4, !tbaa !65, !alias.scope !252
  %1794 = getelementptr inbounds float, ptr %1790, i64 16
  %1795 = load <8 x float>, ptr %1794, align 4, !tbaa !65, !alias.scope !252
  %1796 = getelementptr inbounds float, ptr %1790, i64 24
  %1797 = load <8 x float>, ptr %1796, align 4, !tbaa !65, !alias.scope !252
  %1798 = getelementptr inbounds float, ptr %7, i64 %1789
  %1799 = load <8 x float>, ptr %1798, align 4, !tbaa !65, !alias.scope !255, !noalias !252
  %1800 = getelementptr inbounds float, ptr %1798, i64 8
  %1801 = load <8 x float>, ptr %1800, align 4, !tbaa !65, !alias.scope !255, !noalias !252
  %1802 = getelementptr inbounds float, ptr %1798, i64 16
  %1803 = load <8 x float>, ptr %1802, align 4, !tbaa !65, !alias.scope !255, !noalias !252
  %1804 = getelementptr inbounds float, ptr %1798, i64 24
  %1805 = load <8 x float>, ptr %1804, align 4, !tbaa !65, !alias.scope !255, !noalias !252
  %1806 = fadd fast <8 x float> %1799, %1791
  %1807 = fadd fast <8 x float> %1801, %1793
  %1808 = fadd fast <8 x float> %1803, %1795
  %1809 = fadd fast <8 x float> %1805, %1797
  store <8 x float> %1806, ptr %1798, align 4, !tbaa !65, !alias.scope !255, !noalias !252
  store <8 x float> %1807, ptr %1800, align 4, !tbaa !65, !alias.scope !255, !noalias !252
  store <8 x float> %1808, ptr %1802, align 4, !tbaa !65, !alias.scope !255, !noalias !252
  store <8 x float> %1809, ptr %1804, align 4, !tbaa !65, !alias.scope !255, !noalias !252
  %1810 = add nuw i64 %1789, 32
  %1811 = icmp eq i64 %1810, %1765
  br i1 %1811, label %1812, label %1788, !llvm.loop !257

1812:                                             ; preds = %1788
  br i1 %1766, label %1858, label %1813

1813:                                             ; preds = %1780, %1779, %1812
  %1814 = phi i64 [ 0, %1780 ], [ 0, %1779 ], [ %1765, %1812 ]
  %1815 = xor i64 %1814, -1
  %1816 = add nsw i64 %1815, %1760
  br i1 %1768, label %1828, label %1817

1817:                                             ; preds = %1813, %1817
  %1818 = phi i64 [ %1825, %1817 ], [ %1814, %1813 ]
  %1819 = phi i64 [ %1826, %1817 ], [ 0, %1813 ]
  %1820 = getelementptr inbounds float, ptr %1778, i64 %1818
  %1821 = load float, ptr %1820, align 4, !tbaa !65
  %1822 = getelementptr inbounds float, ptr %7, i64 %1818
  %1823 = load float, ptr %1822, align 4, !tbaa !65
  %1824 = fadd fast float %1823, %1821
  store float %1824, ptr %1822, align 4, !tbaa !65
  %1825 = add nuw nsw i64 %1818, 1
  %1826 = add i64 %1819, 1
  %1827 = icmp eq i64 %1826, %1767
  br i1 %1827, label %1828, label %1817, !llvm.loop !258

1828:                                             ; preds = %1817, %1813
  %1829 = phi i64 [ %1814, %1813 ], [ %1825, %1817 ]
  %1830 = icmp ult i64 %1816, 3
  br i1 %1830, label %1858, label %1831

1831:                                             ; preds = %1828, %1831
  %1832 = phi i64 [ %1856, %1831 ], [ %1829, %1828 ]
  %1833 = getelementptr inbounds float, ptr %1778, i64 %1832
  %1834 = load float, ptr %1833, align 4, !tbaa !65
  %1835 = getelementptr inbounds float, ptr %7, i64 %1832
  %1836 = load float, ptr %1835, align 4, !tbaa !65
  %1837 = fadd fast float %1836, %1834
  store float %1837, ptr %1835, align 4, !tbaa !65
  %1838 = add nuw nsw i64 %1832, 1
  %1839 = getelementptr inbounds float, ptr %1778, i64 %1838
  %1840 = load float, ptr %1839, align 4, !tbaa !65
  %1841 = getelementptr inbounds float, ptr %7, i64 %1838
  %1842 = load float, ptr %1841, align 4, !tbaa !65
  %1843 = fadd fast float %1842, %1840
  store float %1843, ptr %1841, align 4, !tbaa !65
  %1844 = add nuw nsw i64 %1832, 2
  %1845 = getelementptr inbounds float, ptr %1778, i64 %1844
  %1846 = load float, ptr %1845, align 4, !tbaa !65
  %1847 = getelementptr inbounds float, ptr %7, i64 %1844
  %1848 = load float, ptr %1847, align 4, !tbaa !65
  %1849 = fadd fast float %1848, %1846
  store float %1849, ptr %1847, align 4, !tbaa !65
  %1850 = add nuw nsw i64 %1832, 3
  %1851 = getelementptr inbounds float, ptr %1778, i64 %1850
  %1852 = load float, ptr %1851, align 4, !tbaa !65
  %1853 = getelementptr inbounds float, ptr %7, i64 %1850
  %1854 = load float, ptr %1853, align 4, !tbaa !65
  %1855 = fadd fast float %1854, %1852
  store float %1855, ptr %1853, align 4, !tbaa !65
  %1856 = add nuw nsw i64 %1832, 4
  %1857 = icmp eq i64 %1856, %1760
  br i1 %1857, label %1858, label %1831, !llvm.loop !259

1858:                                             ; preds = %1828, %1831, %1812, %1769
  %1859 = add nuw nsw i64 %1770, 1
  %1860 = icmp eq i64 %1859, %1761
  br i1 %1860, label %1861, label %1769, !llvm.loop !260

1861:                                             ; preds = %1858, %1747
  %1862 = phi i32 [ 0, %1747 ], [ %1753, %1858 ]
  %1863 = icmp sgt i32 %1755, 0
  br i1 %1863, label %1864, label %1892

1864:                                             ; preds = %1861
  %1865 = sitofp i32 %1862 to float
  %1866 = zext i32 %1755 to i64
  %1867 = icmp ult i32 %1755, 8
  br i1 %1867, label %1882, label %1868

1868:                                             ; preds = %1864
  %1869 = and i64 %1866, 4294967288
  %1870 = insertelement <8 x float> poison, float %1865, i64 0
  %1871 = shufflevector <8 x float> %1870, <8 x float> poison, <8 x i32> zeroinitializer
  %1872 = fdiv fast <8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1871
  br label %1873

1873:                                             ; preds = %1873, %1868
  %1874 = phi i64 [ 0, %1868 ], [ %1878, %1873 ]
  %1875 = getelementptr inbounds float, ptr %7, i64 %1874
  %1876 = load <8 x float>, ptr %1875, align 4, !tbaa !65
  %1877 = fmul fast <8 x float> %1876, %1872
  store <8 x float> %1877, ptr %1875, align 4, !tbaa !65
  %1878 = add nuw i64 %1874, 8
  %1879 = icmp eq i64 %1878, %1869
  br i1 %1879, label %1880, label %1873, !llvm.loop !261

1880:                                             ; preds = %1873
  %1881 = icmp eq i64 %1869, %1866
  br i1 %1881, label %1892, label %1882

1882:                                             ; preds = %1864, %1880
  %1883 = phi i64 [ 0, %1864 ], [ %1869, %1880 ]
  %1884 = fdiv fast float 1.000000e+00, %1865
  br label %1885

1885:                                             ; preds = %1882, %1885
  %1886 = phi i64 [ %1890, %1885 ], [ %1883, %1882 ]
  %1887 = getelementptr inbounds float, ptr %7, i64 %1886
  %1888 = load float, ptr %1887, align 4, !tbaa !65
  %1889 = fmul fast float %1888, %1884
  store float %1889, ptr %1887, align 4, !tbaa !65
  %1890 = add nuw nsw i64 %1886, 1
  %1891 = icmp eq i64 %1890, %1866
  br i1 %1891, label %1892, label %1885, !llvm.loop !262

1892:                                             ; preds = %1885, %1880, %1861
  %1893 = sext i32 %1755 to i64
  %1894 = shl nsw i64 %1893, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %10, i8 0, i64 %1894, i1 false)
  %1895 = load i16, ptr %1283, align 8, !tbaa !79
  %1896 = sext i16 %1895 to i32
  %1897 = icmp sgt i16 %1895, 0
  %1898 = load i32, ptr %306, align 4, !tbaa !74
  br i1 %1897, label %1899, label %2005

1899:                                             ; preds = %1892
  %1900 = getelementptr inbounds %struct.CCGVert, ptr %1275, i64 0, i32 6
  %1901 = load ptr, ptr %1900, align 8, !tbaa !56
  %1902 = icmp sgt i32 %1898, 0
  %1903 = zext i32 %1898 to i64
  %1904 = zext i32 %1896 to i64
  %1905 = shl nuw nsw i64 %1903, 2
  %1906 = getelementptr i8, ptr %10, i64 %1905
  %1907 = icmp ult i32 %1898, 32
  %1908 = and i64 %1903, 4294967264
  %1909 = icmp eq i64 %1908, %1903
  %1910 = and i64 %1903, 3
  %1911 = icmp eq i64 %1910, 0
  br label %1912

1912:                                             ; preds = %1899, %2002
  %1913 = phi i64 [ 0, %1899 ], [ %2003, %2002 ]
  %1914 = getelementptr inbounds ptr, ptr %1901, i64 %1913
  %1915 = load ptr, ptr %1914, align 8, !tbaa !14
  %1916 = getelementptr inbounds %struct.CCGEdge, ptr %1915, i64 0, i32 5
  %1917 = load ptr, ptr %1916, align 8, !tbaa !83
  %1918 = icmp eq ptr %1917, %1275
  br i1 %1918, label %1919, label %1922

1919:                                             ; preds = %1912
  %1920 = getelementptr inbounds %struct.CCGEdge, ptr %1915, i64 0, i32 6
  %1921 = load ptr, ptr %1920, align 8, !tbaa !85
  br label %1922

1922:                                             ; preds = %1912, %1919
  %1923 = phi ptr [ %1921, %1919 ], [ %1917, %1912 ]
  %1924 = getelementptr %struct.CCGVert, ptr %1923, i64 1
  br i1 %1902, label %1925, label %2002

1925:                                             ; preds = %1922
  br i1 %1907, label %1957, label %1926

1926:                                             ; preds = %1925
  %1927 = getelementptr i8, ptr %1923, i64 40
  %1928 = getelementptr i8, ptr %1927, i64 %1905
  %1929 = icmp ult ptr %10, %1928
  %1930 = icmp ult ptr %1924, %1906
  %1931 = and i1 %1929, %1930
  br i1 %1931, label %1957, label %1932

1932:                                             ; preds = %1926, %1932
  %1933 = phi i64 [ %1954, %1932 ], [ 0, %1926 ]
  %1934 = getelementptr inbounds float, ptr %1924, i64 %1933
  %1935 = load <8 x float>, ptr %1934, align 4, !tbaa !65, !alias.scope !263
  %1936 = getelementptr inbounds float, ptr %1934, i64 8
  %1937 = load <8 x float>, ptr %1936, align 4, !tbaa !65, !alias.scope !263
  %1938 = getelementptr inbounds float, ptr %1934, i64 16
  %1939 = load <8 x float>, ptr %1938, align 4, !tbaa !65, !alias.scope !263
  %1940 = getelementptr inbounds float, ptr %1934, i64 24
  %1941 = load <8 x float>, ptr %1940, align 4, !tbaa !65, !alias.scope !263
  %1942 = getelementptr inbounds float, ptr %10, i64 %1933
  %1943 = load <8 x float>, ptr %1942, align 4, !tbaa !65, !alias.scope !266, !noalias !263
  %1944 = getelementptr inbounds float, ptr %1942, i64 8
  %1945 = load <8 x float>, ptr %1944, align 4, !tbaa !65, !alias.scope !266, !noalias !263
  %1946 = getelementptr inbounds float, ptr %1942, i64 16
  %1947 = load <8 x float>, ptr %1946, align 4, !tbaa !65, !alias.scope !266, !noalias !263
  %1948 = getelementptr inbounds float, ptr %1942, i64 24
  %1949 = load <8 x float>, ptr %1948, align 4, !tbaa !65, !alias.scope !266, !noalias !263
  %1950 = fadd fast <8 x float> %1943, %1935
  %1951 = fadd fast <8 x float> %1945, %1937
  %1952 = fadd fast <8 x float> %1947, %1939
  %1953 = fadd fast <8 x float> %1949, %1941
  store <8 x float> %1950, ptr %1942, align 4, !tbaa !65, !alias.scope !266, !noalias !263
  store <8 x float> %1951, ptr %1944, align 4, !tbaa !65, !alias.scope !266, !noalias !263
  store <8 x float> %1952, ptr %1946, align 4, !tbaa !65, !alias.scope !266, !noalias !263
  store <8 x float> %1953, ptr %1948, align 4, !tbaa !65, !alias.scope !266, !noalias !263
  %1954 = add nuw i64 %1933, 32
  %1955 = icmp eq i64 %1954, %1908
  br i1 %1955, label %1956, label %1932, !llvm.loop !268

1956:                                             ; preds = %1932
  br i1 %1909, label %2002, label %1957

1957:                                             ; preds = %1926, %1925, %1956
  %1958 = phi i64 [ 0, %1926 ], [ 0, %1925 ], [ %1908, %1956 ]
  %1959 = xor i64 %1958, -1
  %1960 = add nsw i64 %1959, %1903
  br i1 %1911, label %1972, label %1961

1961:                                             ; preds = %1957, %1961
  %1962 = phi i64 [ %1969, %1961 ], [ %1958, %1957 ]
  %1963 = phi i64 [ %1970, %1961 ], [ 0, %1957 ]
  %1964 = getelementptr inbounds float, ptr %1924, i64 %1962
  %1965 = load float, ptr %1964, align 4, !tbaa !65
  %1966 = getelementptr inbounds float, ptr %10, i64 %1962
  %1967 = load float, ptr %1966, align 4, !tbaa !65
  %1968 = fadd fast float %1967, %1965
  store float %1968, ptr %1966, align 4, !tbaa !65
  %1969 = add nuw nsw i64 %1962, 1
  %1970 = add i64 %1963, 1
  %1971 = icmp eq i64 %1970, %1910
  br i1 %1971, label %1972, label %1961, !llvm.loop !269

1972:                                             ; preds = %1961, %1957
  %1973 = phi i64 [ %1958, %1957 ], [ %1969, %1961 ]
  %1974 = icmp ult i64 %1960, 3
  br i1 %1974, label %2002, label %1975

1975:                                             ; preds = %1972, %1975
  %1976 = phi i64 [ %2000, %1975 ], [ %1973, %1972 ]
  %1977 = getelementptr inbounds float, ptr %1924, i64 %1976
  %1978 = load float, ptr %1977, align 4, !tbaa !65
  %1979 = getelementptr inbounds float, ptr %10, i64 %1976
  %1980 = load float, ptr %1979, align 4, !tbaa !65
  %1981 = fadd fast float %1980, %1978
  store float %1981, ptr %1979, align 4, !tbaa !65
  %1982 = add nuw nsw i64 %1976, 1
  %1983 = getelementptr inbounds float, ptr %1924, i64 %1982
  %1984 = load float, ptr %1983, align 4, !tbaa !65
  %1985 = getelementptr inbounds float, ptr %10, i64 %1982
  %1986 = load float, ptr %1985, align 4, !tbaa !65
  %1987 = fadd fast float %1986, %1984
  store float %1987, ptr %1985, align 4, !tbaa !65
  %1988 = add nuw nsw i64 %1976, 2
  %1989 = getelementptr inbounds float, ptr %1924, i64 %1988
  %1990 = load float, ptr %1989, align 4, !tbaa !65
  %1991 = getelementptr inbounds float, ptr %10, i64 %1988
  %1992 = load float, ptr %1991, align 4, !tbaa !65
  %1993 = fadd fast float %1992, %1990
  store float %1993, ptr %1991, align 4, !tbaa !65
  %1994 = add nuw nsw i64 %1976, 3
  %1995 = getelementptr inbounds float, ptr %1924, i64 %1994
  %1996 = load float, ptr %1995, align 4, !tbaa !65
  %1997 = getelementptr inbounds float, ptr %10, i64 %1994
  %1998 = load float, ptr %1997, align 4, !tbaa !65
  %1999 = fadd fast float %1998, %1996
  store float %1999, ptr %1997, align 4, !tbaa !65
  %2000 = add nuw nsw i64 %1976, 4
  %2001 = icmp eq i64 %2000, %1903
  br i1 %2001, label %2002, label %1975, !llvm.loop !270

2002:                                             ; preds = %1972, %1975, %1956, %1922
  %2003 = add nuw nsw i64 %1913, 1
  %2004 = icmp eq i64 %2003, %1904
  br i1 %2004, label %2005, label %1912, !llvm.loop !271

2005:                                             ; preds = %2002, %1892
  %2006 = phi i32 [ 0, %1892 ], [ %1896, %2002 ]
  %2007 = sitofp i32 %2006 to float
  %2008 = fdiv fast float 1.000000e+00, %2007
  %2009 = icmp sgt i32 %1898, 0
  br i1 %2009, label %2010, label %2359

2010:                                             ; preds = %2005
  %2011 = zext i32 %1898 to i64
  %2012 = icmp ult i32 %1898, 32
  br i1 %2012, label %2041, label %2013

2013:                                             ; preds = %2010
  %2014 = and i64 %2011, 4294967264
  %2015 = insertelement <8 x float> poison, float %2008, i64 0
  %2016 = shufflevector <8 x float> %2015, <8 x float> poison, <8 x i32> zeroinitializer
  %2017 = insertelement <8 x float> poison, float %2008, i64 0
  %2018 = shufflevector <8 x float> %2017, <8 x float> poison, <8 x i32> zeroinitializer
  %2019 = insertelement <8 x float> poison, float %2008, i64 0
  %2020 = shufflevector <8 x float> %2019, <8 x float> poison, <8 x i32> zeroinitializer
  %2021 = insertelement <8 x float> poison, float %2008, i64 0
  %2022 = shufflevector <8 x float> %2021, <8 x float> poison, <8 x i32> zeroinitializer
  br label %2023

2023:                                             ; preds = %2023, %2013
  %2024 = phi i64 [ 0, %2013 ], [ %2037, %2023 ]
  %2025 = getelementptr inbounds float, ptr %10, i64 %2024
  %2026 = load <8 x float>, ptr %2025, align 4, !tbaa !65
  %2027 = getelementptr inbounds float, ptr %2025, i64 8
  %2028 = load <8 x float>, ptr %2027, align 4, !tbaa !65
  %2029 = getelementptr inbounds float, ptr %2025, i64 16
  %2030 = load <8 x float>, ptr %2029, align 4, !tbaa !65
  %2031 = getelementptr inbounds float, ptr %2025, i64 24
  %2032 = load <8 x float>, ptr %2031, align 4, !tbaa !65
  %2033 = fmul fast <8 x float> %2026, %2016
  %2034 = fmul fast <8 x float> %2028, %2018
  %2035 = fmul fast <8 x float> %2030, %2020
  %2036 = fmul fast <8 x float> %2032, %2022
  store <8 x float> %2033, ptr %2025, align 4, !tbaa !65
  store <8 x float> %2034, ptr %2027, align 4, !tbaa !65
  store <8 x float> %2035, ptr %2029, align 4, !tbaa !65
  store <8 x float> %2036, ptr %2031, align 4, !tbaa !65
  %2037 = add nuw i64 %2024, 32
  %2038 = icmp eq i64 %2037, %2014
  br i1 %2038, label %2039, label %2023, !llvm.loop !272

2039:                                             ; preds = %2023
  %2040 = icmp eq i64 %2014, %2011
  br i1 %2040, label %2050, label %2041

2041:                                             ; preds = %2010, %2039
  %2042 = phi i64 [ 0, %2010 ], [ %2014, %2039 ]
  br label %2043

2043:                                             ; preds = %2041, %2043
  %2044 = phi i64 [ %2048, %2043 ], [ %2042, %2041 ]
  %2045 = getelementptr inbounds float, ptr %10, i64 %2044
  %2046 = load float, ptr %2045, align 4, !tbaa !65
  %2047 = fmul fast float %2046, %2008
  store float %2047, ptr %2045, align 4, !tbaa !65
  %2048 = add nuw nsw i64 %2044, 1
  %2049 = icmp eq i64 %2048, %2011
  br i1 %2049, label %2050, label %2043, !llvm.loop !273

2050:                                             ; preds = %2043, %2039
  %2051 = icmp ult i32 %1898, 32
  %2052 = select i1 %2051, i1 true, i1 %314
  br i1 %2052, label %2073, label %2053

2053:                                             ; preds = %2050
  %2054 = and i64 %2011, 4294967264
  br label %2055

2055:                                             ; preds = %2055, %2053
  %2056 = phi i64 [ 0, %2053 ], [ %2069, %2055 ]
  %2057 = getelementptr inbounds float, ptr %1277, i64 %2056
  %2058 = load <8 x float>, ptr %2057, align 4, !tbaa !65
  %2059 = getelementptr inbounds float, ptr %2057, i64 8
  %2060 = load <8 x float>, ptr %2059, align 4, !tbaa !65
  %2061 = getelementptr inbounds float, ptr %2057, i64 16
  %2062 = load <8 x float>, ptr %2061, align 4, !tbaa !65
  %2063 = getelementptr inbounds float, ptr %2057, i64 24
  %2064 = load <8 x float>, ptr %2063, align 4, !tbaa !65
  %2065 = getelementptr inbounds float, ptr %1278, i64 %2056
  store <8 x float> %2058, ptr %2065, align 4, !tbaa !65
  %2066 = getelementptr inbounds float, ptr %2065, i64 8
  store <8 x float> %2060, ptr %2066, align 4, !tbaa !65
  %2067 = getelementptr inbounds float, ptr %2065, i64 16
  store <8 x float> %2062, ptr %2067, align 4, !tbaa !65
  %2068 = getelementptr inbounds float, ptr %2065, i64 24
  store <8 x float> %2064, ptr %2068, align 4, !tbaa !65
  %2069 = add nuw i64 %2056, 32
  %2070 = icmp eq i64 %2069, %2054
  br i1 %2070, label %2071, label %2055, !llvm.loop !274

2071:                                             ; preds = %2055
  %2072 = icmp eq i64 %2054, %2011
  br i1 %2072, label %2110, label %2073

2073:                                             ; preds = %2050, %2071
  %2074 = phi i64 [ 0, %2050 ], [ %2054, %2071 ]
  %2075 = xor i64 %2074, -1
  %2076 = add nsw i64 %2075, %2011
  %2077 = and i64 %2011, 3
  %2078 = icmp eq i64 %2077, 0
  br i1 %2078, label %2088, label %2079

2079:                                             ; preds = %2073, %2079
  %2080 = phi i64 [ %2085, %2079 ], [ %2074, %2073 ]
  %2081 = phi i64 [ %2086, %2079 ], [ 0, %2073 ]
  %2082 = getelementptr inbounds float, ptr %1277, i64 %2080
  %2083 = load float, ptr %2082, align 4, !tbaa !65
  %2084 = getelementptr inbounds float, ptr %1278, i64 %2080
  store float %2083, ptr %2084, align 4, !tbaa !65
  %2085 = add nuw nsw i64 %2080, 1
  %2086 = add i64 %2081, 1
  %2087 = icmp eq i64 %2086, %2077
  br i1 %2087, label %2088, label %2079, !llvm.loop !275

2088:                                             ; preds = %2079, %2073
  %2089 = phi i64 [ %2074, %2073 ], [ %2085, %2079 ]
  %2090 = icmp ult i64 %2076, 3
  br i1 %2090, label %2110, label %2091

2091:                                             ; preds = %2088, %2091
  %2092 = phi i64 [ %2108, %2091 ], [ %2089, %2088 ]
  %2093 = getelementptr inbounds float, ptr %1277, i64 %2092
  %2094 = load float, ptr %2093, align 4, !tbaa !65
  %2095 = getelementptr inbounds float, ptr %1278, i64 %2092
  store float %2094, ptr %2095, align 4, !tbaa !65
  %2096 = add nuw nsw i64 %2092, 1
  %2097 = getelementptr inbounds float, ptr %1277, i64 %2096
  %2098 = load float, ptr %2097, align 4, !tbaa !65
  %2099 = getelementptr inbounds float, ptr %1278, i64 %2096
  store float %2098, ptr %2099, align 4, !tbaa !65
  %2100 = add nuw nsw i64 %2092, 2
  %2101 = getelementptr inbounds float, ptr %1277, i64 %2100
  %2102 = load float, ptr %2101, align 4, !tbaa !65
  %2103 = getelementptr inbounds float, ptr %1278, i64 %2100
  store float %2102, ptr %2103, align 4, !tbaa !65
  %2104 = add nuw nsw i64 %2092, 3
  %2105 = getelementptr inbounds float, ptr %1277, i64 %2104
  %2106 = load float, ptr %2105, align 4, !tbaa !65
  %2107 = getelementptr inbounds float, ptr %1278, i64 %2104
  store float %2106, ptr %2107, align 4, !tbaa !65
  %2108 = add nuw nsw i64 %2092, 4
  %2109 = icmp eq i64 %2108, %2011
  br i1 %2109, label %2110, label %2091, !llvm.loop !276

2110:                                             ; preds = %2088, %2091, %2071
  %2111 = fadd fast float %2007, -2.000000e+00
  %2112 = icmp ult i32 %1898, 32
  br i1 %2112, label %2141, label %2113

2113:                                             ; preds = %2110
  %2114 = and i64 %2011, 4294967264
  %2115 = insertelement <8 x float> poison, float %2111, i64 0
  %2116 = shufflevector <8 x float> %2115, <8 x float> poison, <8 x i32> zeroinitializer
  %2117 = insertelement <8 x float> poison, float %2111, i64 0
  %2118 = shufflevector <8 x float> %2117, <8 x float> poison, <8 x i32> zeroinitializer
  %2119 = insertelement <8 x float> poison, float %2111, i64 0
  %2120 = shufflevector <8 x float> %2119, <8 x float> poison, <8 x i32> zeroinitializer
  %2121 = insertelement <8 x float> poison, float %2111, i64 0
  %2122 = shufflevector <8 x float> %2121, <8 x float> poison, <8 x i32> zeroinitializer
  br label %2123

2123:                                             ; preds = %2123, %2113
  %2124 = phi i64 [ 0, %2113 ], [ %2137, %2123 ]
  %2125 = getelementptr inbounds float, ptr %1278, i64 %2124
  %2126 = load <8 x float>, ptr %2125, align 4, !tbaa !65
  %2127 = getelementptr inbounds float, ptr %2125, i64 8
  %2128 = load <8 x float>, ptr %2127, align 4, !tbaa !65
  %2129 = getelementptr inbounds float, ptr %2125, i64 16
  %2130 = load <8 x float>, ptr %2129, align 4, !tbaa !65
  %2131 = getelementptr inbounds float, ptr %2125, i64 24
  %2132 = load <8 x float>, ptr %2131, align 4, !tbaa !65
  %2133 = fmul fast <8 x float> %2126, %2116
  %2134 = fmul fast <8 x float> %2128, %2118
  %2135 = fmul fast <8 x float> %2130, %2120
  %2136 = fmul fast <8 x float> %2132, %2122
  store <8 x float> %2133, ptr %2125, align 4, !tbaa !65
  store <8 x float> %2134, ptr %2127, align 4, !tbaa !65
  store <8 x float> %2135, ptr %2129, align 4, !tbaa !65
  store <8 x float> %2136, ptr %2131, align 4, !tbaa !65
  %2137 = add nuw i64 %2124, 32
  %2138 = icmp eq i64 %2137, %2114
  br i1 %2138, label %2139, label %2123, !llvm.loop !277

2139:                                             ; preds = %2123
  %2140 = icmp eq i64 %2114, %2011
  br i1 %2140, label %2150, label %2141

2141:                                             ; preds = %2110, %2139
  %2142 = phi i64 [ 0, %2110 ], [ %2114, %2139 ]
  br label %2143

2143:                                             ; preds = %2141, %2143
  %2144 = phi i64 [ %2148, %2143 ], [ %2142, %2141 ]
  %2145 = getelementptr inbounds float, ptr %1278, i64 %2144
  %2146 = load float, ptr %2145, align 4, !tbaa !65
  %2147 = fmul fast float %2146, %2111
  store float %2147, ptr %2145, align 4, !tbaa !65
  %2148 = add nuw nsw i64 %2144, 1
  %2149 = icmp eq i64 %2148, %2011
  br i1 %2149, label %2150, label %2143, !llvm.loop !278

2150:                                             ; preds = %2143, %2139
  %2151 = icmp ult i32 %1898, 32
  br i1 %2151, label %2188, label %2152

2152:                                             ; preds = %2150
  %2153 = getelementptr i8, ptr %1275, i64 %311
  %2154 = shl nuw nsw i64 %2011, 2
  %2155 = getelementptr i8, ptr %2153, i64 %2154
  %2156 = getelementptr i8, ptr %7, i64 %2154
  %2157 = icmp ult ptr %1278, %2156
  %2158 = icmp ult ptr %7, %2155
  %2159 = and i1 %2157, %2158
  br i1 %2159, label %2188, label %2160

2160:                                             ; preds = %2152
  %2161 = and i64 %2011, 4294967264
  br label %2162

2162:                                             ; preds = %2162, %2160
  %2163 = phi i64 [ 0, %2160 ], [ %2184, %2162 ]
  %2164 = getelementptr inbounds float, ptr %7, i64 %2163
  %2165 = load <8 x float>, ptr %2164, align 4, !tbaa !65, !alias.scope !279
  %2166 = getelementptr inbounds float, ptr %2164, i64 8
  %2167 = load <8 x float>, ptr %2166, align 4, !tbaa !65, !alias.scope !279
  %2168 = getelementptr inbounds float, ptr %2164, i64 16
  %2169 = load <8 x float>, ptr %2168, align 4, !tbaa !65, !alias.scope !279
  %2170 = getelementptr inbounds float, ptr %2164, i64 24
  %2171 = load <8 x float>, ptr %2170, align 4, !tbaa !65, !alias.scope !279
  %2172 = getelementptr inbounds float, ptr %1278, i64 %2163
  %2173 = load <8 x float>, ptr %2172, align 4, !tbaa !65, !alias.scope !282, !noalias !279
  %2174 = getelementptr inbounds float, ptr %2172, i64 8
  %2175 = load <8 x float>, ptr %2174, align 4, !tbaa !65, !alias.scope !282, !noalias !279
  %2176 = getelementptr inbounds float, ptr %2172, i64 16
  %2177 = load <8 x float>, ptr %2176, align 4, !tbaa !65, !alias.scope !282, !noalias !279
  %2178 = getelementptr inbounds float, ptr %2172, i64 24
  %2179 = load <8 x float>, ptr %2178, align 4, !tbaa !65, !alias.scope !282, !noalias !279
  %2180 = fadd fast <8 x float> %2173, %2165
  %2181 = fadd fast <8 x float> %2175, %2167
  %2182 = fadd fast <8 x float> %2177, %2169
  %2183 = fadd fast <8 x float> %2179, %2171
  store <8 x float> %2180, ptr %2172, align 4, !tbaa !65, !alias.scope !282, !noalias !279
  store <8 x float> %2181, ptr %2174, align 4, !tbaa !65, !alias.scope !282, !noalias !279
  store <8 x float> %2182, ptr %2176, align 4, !tbaa !65, !alias.scope !282, !noalias !279
  store <8 x float> %2183, ptr %2178, align 4, !tbaa !65, !alias.scope !282, !noalias !279
  %2184 = add nuw i64 %2163, 32
  %2185 = icmp eq i64 %2184, %2161
  br i1 %2185, label %2186, label %2162, !llvm.loop !284

2186:                                             ; preds = %2162
  %2187 = icmp eq i64 %2161, %2011
  br i1 %2187, label %2235, label %2188

2188:                                             ; preds = %2152, %2150, %2186
  %2189 = phi i64 [ 0, %2152 ], [ 0, %2150 ], [ %2161, %2186 ]
  %2190 = xor i64 %2189, -1
  %2191 = add nsw i64 %2190, %2011
  %2192 = and i64 %2011, 3
  %2193 = icmp eq i64 %2192, 0
  br i1 %2193, label %2205, label %2194

2194:                                             ; preds = %2188, %2194
  %2195 = phi i64 [ %2202, %2194 ], [ %2189, %2188 ]
  %2196 = phi i64 [ %2203, %2194 ], [ 0, %2188 ]
  %2197 = getelementptr inbounds float, ptr %7, i64 %2195
  %2198 = load float, ptr %2197, align 4, !tbaa !65
  %2199 = getelementptr inbounds float, ptr %1278, i64 %2195
  %2200 = load float, ptr %2199, align 4, !tbaa !65
  %2201 = fadd fast float %2200, %2198
  store float %2201, ptr %2199, align 4, !tbaa !65
  %2202 = add nuw nsw i64 %2195, 1
  %2203 = add i64 %2196, 1
  %2204 = icmp eq i64 %2203, %2192
  br i1 %2204, label %2205, label %2194, !llvm.loop !285

2205:                                             ; preds = %2194, %2188
  %2206 = phi i64 [ %2189, %2188 ], [ %2202, %2194 ]
  %2207 = icmp ult i64 %2191, 3
  br i1 %2207, label %2235, label %2208

2208:                                             ; preds = %2205, %2208
  %2209 = phi i64 [ %2233, %2208 ], [ %2206, %2205 ]
  %2210 = getelementptr inbounds float, ptr %7, i64 %2209
  %2211 = load float, ptr %2210, align 4, !tbaa !65
  %2212 = getelementptr inbounds float, ptr %1278, i64 %2209
  %2213 = load float, ptr %2212, align 4, !tbaa !65
  %2214 = fadd fast float %2213, %2211
  store float %2214, ptr %2212, align 4, !tbaa !65
  %2215 = add nuw nsw i64 %2209, 1
  %2216 = getelementptr inbounds float, ptr %7, i64 %2215
  %2217 = load float, ptr %2216, align 4, !tbaa !65
  %2218 = getelementptr inbounds float, ptr %1278, i64 %2215
  %2219 = load float, ptr %2218, align 4, !tbaa !65
  %2220 = fadd fast float %2219, %2217
  store float %2220, ptr %2218, align 4, !tbaa !65
  %2221 = add nuw nsw i64 %2209, 2
  %2222 = getelementptr inbounds float, ptr %7, i64 %2221
  %2223 = load float, ptr %2222, align 4, !tbaa !65
  %2224 = getelementptr inbounds float, ptr %1278, i64 %2221
  %2225 = load float, ptr %2224, align 4, !tbaa !65
  %2226 = fadd fast float %2225, %2223
  store float %2226, ptr %2224, align 4, !tbaa !65
  %2227 = add nuw nsw i64 %2209, 3
  %2228 = getelementptr inbounds float, ptr %7, i64 %2227
  %2229 = load float, ptr %2228, align 4, !tbaa !65
  %2230 = getelementptr inbounds float, ptr %1278, i64 %2227
  %2231 = load float, ptr %2230, align 4, !tbaa !65
  %2232 = fadd fast float %2231, %2229
  store float %2232, ptr %2230, align 4, !tbaa !65
  %2233 = add nuw nsw i64 %2209, 4
  %2234 = icmp eq i64 %2233, %2011
  br i1 %2234, label %2235, label %2208, !llvm.loop !286

2235:                                             ; preds = %2205, %2208, %2186
  %2236 = icmp ult i32 %1898, 32
  br i1 %2236, label %2273, label %2237

2237:                                             ; preds = %2235
  %2238 = getelementptr i8, ptr %1275, i64 %310
  %2239 = shl nuw nsw i64 %2011, 2
  %2240 = getelementptr i8, ptr %2238, i64 %2239
  %2241 = getelementptr i8, ptr %10, i64 %2239
  %2242 = icmp ult ptr %1278, %2241
  %2243 = icmp ult ptr %10, %2240
  %2244 = and i1 %2242, %2243
  br i1 %2244, label %2273, label %2245

2245:                                             ; preds = %2237
  %2246 = and i64 %2011, 4294967264
  br label %2247

2247:                                             ; preds = %2247, %2245
  %2248 = phi i64 [ 0, %2245 ], [ %2269, %2247 ]
  %2249 = getelementptr inbounds float, ptr %10, i64 %2248
  %2250 = load <8 x float>, ptr %2249, align 4, !tbaa !65, !alias.scope !287
  %2251 = getelementptr inbounds float, ptr %2249, i64 8
  %2252 = load <8 x float>, ptr %2251, align 4, !tbaa !65, !alias.scope !287
  %2253 = getelementptr inbounds float, ptr %2249, i64 16
  %2254 = load <8 x float>, ptr %2253, align 4, !tbaa !65, !alias.scope !287
  %2255 = getelementptr inbounds float, ptr %2249, i64 24
  %2256 = load <8 x float>, ptr %2255, align 4, !tbaa !65, !alias.scope !287
  %2257 = getelementptr inbounds float, ptr %1278, i64 %2248
  %2258 = load <8 x float>, ptr %2257, align 4, !tbaa !65, !alias.scope !290, !noalias !287
  %2259 = getelementptr inbounds float, ptr %2257, i64 8
  %2260 = load <8 x float>, ptr %2259, align 4, !tbaa !65, !alias.scope !290, !noalias !287
  %2261 = getelementptr inbounds float, ptr %2257, i64 16
  %2262 = load <8 x float>, ptr %2261, align 4, !tbaa !65, !alias.scope !290, !noalias !287
  %2263 = getelementptr inbounds float, ptr %2257, i64 24
  %2264 = load <8 x float>, ptr %2263, align 4, !tbaa !65, !alias.scope !290, !noalias !287
  %2265 = fadd fast <8 x float> %2258, %2250
  %2266 = fadd fast <8 x float> %2260, %2252
  %2267 = fadd fast <8 x float> %2262, %2254
  %2268 = fadd fast <8 x float> %2264, %2256
  store <8 x float> %2265, ptr %2257, align 4, !tbaa !65, !alias.scope !290, !noalias !287
  store <8 x float> %2266, ptr %2259, align 4, !tbaa !65, !alias.scope !290, !noalias !287
  store <8 x float> %2267, ptr %2261, align 4, !tbaa !65, !alias.scope !290, !noalias !287
  store <8 x float> %2268, ptr %2263, align 4, !tbaa !65, !alias.scope !290, !noalias !287
  %2269 = add nuw i64 %2248, 32
  %2270 = icmp eq i64 %2269, %2246
  br i1 %2270, label %2271, label %2247, !llvm.loop !292

2271:                                             ; preds = %2247
  %2272 = icmp eq i64 %2246, %2011
  br i1 %2272, label %2320, label %2273

2273:                                             ; preds = %2237, %2235, %2271
  %2274 = phi i64 [ 0, %2237 ], [ 0, %2235 ], [ %2246, %2271 ]
  %2275 = xor i64 %2274, -1
  %2276 = add nsw i64 %2275, %2011
  %2277 = and i64 %2011, 3
  %2278 = icmp eq i64 %2277, 0
  br i1 %2278, label %2290, label %2279

2279:                                             ; preds = %2273, %2279
  %2280 = phi i64 [ %2287, %2279 ], [ %2274, %2273 ]
  %2281 = phi i64 [ %2288, %2279 ], [ 0, %2273 ]
  %2282 = getelementptr inbounds float, ptr %10, i64 %2280
  %2283 = load float, ptr %2282, align 4, !tbaa !65
  %2284 = getelementptr inbounds float, ptr %1278, i64 %2280
  %2285 = load float, ptr %2284, align 4, !tbaa !65
  %2286 = fadd fast float %2285, %2283
  store float %2286, ptr %2284, align 4, !tbaa !65
  %2287 = add nuw nsw i64 %2280, 1
  %2288 = add i64 %2281, 1
  %2289 = icmp eq i64 %2288, %2277
  br i1 %2289, label %2290, label %2279, !llvm.loop !293

2290:                                             ; preds = %2279, %2273
  %2291 = phi i64 [ %2274, %2273 ], [ %2287, %2279 ]
  %2292 = icmp ult i64 %2276, 3
  br i1 %2292, label %2320, label %2293

2293:                                             ; preds = %2290, %2293
  %2294 = phi i64 [ %2318, %2293 ], [ %2291, %2290 ]
  %2295 = getelementptr inbounds float, ptr %10, i64 %2294
  %2296 = load float, ptr %2295, align 4, !tbaa !65
  %2297 = getelementptr inbounds float, ptr %1278, i64 %2294
  %2298 = load float, ptr %2297, align 4, !tbaa !65
  %2299 = fadd fast float %2298, %2296
  store float %2299, ptr %2297, align 4, !tbaa !65
  %2300 = add nuw nsw i64 %2294, 1
  %2301 = getelementptr inbounds float, ptr %10, i64 %2300
  %2302 = load float, ptr %2301, align 4, !tbaa !65
  %2303 = getelementptr inbounds float, ptr %1278, i64 %2300
  %2304 = load float, ptr %2303, align 4, !tbaa !65
  %2305 = fadd fast float %2304, %2302
  store float %2305, ptr %2303, align 4, !tbaa !65
  %2306 = add nuw nsw i64 %2294, 2
  %2307 = getelementptr inbounds float, ptr %10, i64 %2306
  %2308 = load float, ptr %2307, align 4, !tbaa !65
  %2309 = getelementptr inbounds float, ptr %1278, i64 %2306
  %2310 = load float, ptr %2309, align 4, !tbaa !65
  %2311 = fadd fast float %2310, %2308
  store float %2311, ptr %2309, align 4, !tbaa !65
  %2312 = add nuw nsw i64 %2294, 3
  %2313 = getelementptr inbounds float, ptr %10, i64 %2312
  %2314 = load float, ptr %2313, align 4, !tbaa !65
  %2315 = getelementptr inbounds float, ptr %1278, i64 %2312
  %2316 = load float, ptr %2315, align 4, !tbaa !65
  %2317 = fadd fast float %2316, %2314
  store float %2317, ptr %2315, align 4, !tbaa !65
  %2318 = add nuw nsw i64 %2294, 4
  %2319 = icmp eq i64 %2318, %2011
  br i1 %2319, label %2320, label %2293, !llvm.loop !294

2320:                                             ; preds = %2290, %2293, %2271
  %2321 = icmp ult i32 %1898, 32
  br i1 %2321, label %2350, label %2322

2322:                                             ; preds = %2320
  %2323 = and i64 %2011, 4294967264
  %2324 = insertelement <8 x float> poison, float %2008, i64 0
  %2325 = shufflevector <8 x float> %2324, <8 x float> poison, <8 x i32> zeroinitializer
  %2326 = insertelement <8 x float> poison, float %2008, i64 0
  %2327 = shufflevector <8 x float> %2326, <8 x float> poison, <8 x i32> zeroinitializer
  %2328 = insertelement <8 x float> poison, float %2008, i64 0
  %2329 = shufflevector <8 x float> %2328, <8 x float> poison, <8 x i32> zeroinitializer
  %2330 = insertelement <8 x float> poison, float %2008, i64 0
  %2331 = shufflevector <8 x float> %2330, <8 x float> poison, <8 x i32> zeroinitializer
  br label %2332

2332:                                             ; preds = %2332, %2322
  %2333 = phi i64 [ 0, %2322 ], [ %2346, %2332 ]
  %2334 = getelementptr inbounds float, ptr %1278, i64 %2333
  %2335 = load <8 x float>, ptr %2334, align 4, !tbaa !65
  %2336 = getelementptr inbounds float, ptr %2334, i64 8
  %2337 = load <8 x float>, ptr %2336, align 4, !tbaa !65
  %2338 = getelementptr inbounds float, ptr %2334, i64 16
  %2339 = load <8 x float>, ptr %2338, align 4, !tbaa !65
  %2340 = getelementptr inbounds float, ptr %2334, i64 24
  %2341 = load <8 x float>, ptr %2340, align 4, !tbaa !65
  %2342 = fmul fast <8 x float> %2335, %2325
  %2343 = fmul fast <8 x float> %2337, %2327
  %2344 = fmul fast <8 x float> %2339, %2329
  %2345 = fmul fast <8 x float> %2341, %2331
  store <8 x float> %2342, ptr %2334, align 4, !tbaa !65
  store <8 x float> %2343, ptr %2336, align 4, !tbaa !65
  store <8 x float> %2344, ptr %2338, align 4, !tbaa !65
  store <8 x float> %2345, ptr %2340, align 4, !tbaa !65
  %2346 = add nuw i64 %2333, 32
  %2347 = icmp eq i64 %2346, %2323
  br i1 %2347, label %2348, label %2332, !llvm.loop !295

2348:                                             ; preds = %2332
  %2349 = icmp eq i64 %2323, %2011
  br i1 %2349, label %2359, label %2350

2350:                                             ; preds = %2320, %2348
  %2351 = phi i64 [ 0, %2320 ], [ %2323, %2348 ]
  br label %2352

2352:                                             ; preds = %2350, %2352
  %2353 = phi i64 [ %2357, %2352 ], [ %2351, %2350 ]
  %2354 = getelementptr inbounds float, ptr %1278, i64 %2353
  %2355 = load float, ptr %2354, align 4, !tbaa !65
  %2356 = fmul fast float %2355, %2008
  store float %2356, ptr %2354, align 4, !tbaa !65
  %2357 = add nuw nsw i64 %2353, 1
  %2358 = icmp eq i64 %2357, %2011
  br i1 %2358, label %2359, label %2352, !llvm.loop !296

2359:                                             ; preds = %1717, %1720, %2352, %1379, %1382, %1698, %2348, %1362, %2005, %1537, %1337
  %2360 = phi i32 [ %1898, %2005 ], [ %1539, %1537 ], [ %1338, %1337 ], [ %1338, %1362 ], [ %1898, %2348 ], [ %1539, %1698 ], [ %1338, %1382 ], [ %1338, %1379 ], [ %1898, %2352 ], [ %1539, %1720 ], [ %1539, %1717 ]
  %2361 = icmp ugt i32 %1326, 1
  %2362 = icmp ne i16 %1282, 0
  %2363 = select i1 %1332, i1 %2362, i1 false
  %2364 = select i1 %2361, i1 true, i1 %2363
  br i1 %2364, label %2365, label %3311

2365:                                             ; preds = %2359
  %2366 = sext i32 %2360 to i64
  %2367 = shl nsw i64 %2366, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %7, i8 0, i64 %2367, i1 false)
  %2368 = select i1 %2363, float 1.000000e+00, float %1329
  %2369 = select i1 %2363, i32 %1328, i32 %1326
  %2370 = load i16, ptr %1283, align 8, !tbaa !79
  %2371 = icmp sgt i16 %2370, 0
  br i1 %2371, label %2372, label %2587

2372:                                             ; preds = %2365
  %2373 = zext i16 %2370 to i64
  %2374 = getelementptr inbounds %struct.CCGVert, ptr %1275, i64 0, i32 6
  %2375 = load ptr, ptr %2374, align 8, !tbaa !56
  br label %2376

2376:                                             ; preds = %2372, %2584
  %2377 = phi i64 [ 0, %2372 ], [ %2585, %2584 ]
  %2378 = getelementptr inbounds ptr, ptr %2375, i64 %2377
  %2379 = load ptr, ptr %2378, align 8, !tbaa !14
  br i1 %2363, label %2380, label %2482

2380:                                             ; preds = %2376
  %2381 = getelementptr i8, ptr %2379, i64 16
  %2382 = load i16, ptr %2381, align 8, !tbaa !81
  %2383 = icmp sgt i16 %2382, 1
  br i1 %2383, label %2584, label %2384

2384:                                             ; preds = %2380
  %2385 = getelementptr inbounds %struct.CCGEdge, ptr %2379, i64 0, i32 5
  %2386 = load ptr, ptr %2385, align 8, !tbaa !83
  %2387 = icmp eq ptr %2386, %1275
  br i1 %2387, label %2388, label %2391

2388:                                             ; preds = %2384
  %2389 = getelementptr inbounds %struct.CCGEdge, ptr %2379, i64 0, i32 6
  %2390 = load ptr, ptr %2389, align 8, !tbaa !85
  br label %2391

2391:                                             ; preds = %2384, %2388
  %2392 = phi ptr [ %2390, %2388 ], [ %2386, %2384 ]
  %2393 = getelementptr %struct.CCGVert, ptr %2392, i64 1
  %2394 = load i32, ptr %306, align 4, !tbaa !74
  %2395 = icmp sgt i32 %2394, 0
  br i1 %2395, label %2396, label %2584

2396:                                             ; preds = %2391
  %2397 = zext i32 %2394 to i64
  %2398 = icmp ult i32 %2394, 32
  br i1 %2398, label %2435, label %2399

2399:                                             ; preds = %2396
  %2400 = shl nuw nsw i64 %2397, 2
  %2401 = getelementptr i8, ptr %7, i64 %2400
  %2402 = getelementptr i8, ptr %2392, i64 40
  %2403 = getelementptr i8, ptr %2402, i64 %2400
  %2404 = icmp ult ptr %7, %2403
  %2405 = icmp ult ptr %2393, %2401
  %2406 = and i1 %2404, %2405
  br i1 %2406, label %2435, label %2407

2407:                                             ; preds = %2399
  %2408 = and i64 %2397, 4294967264
  br label %2409

2409:                                             ; preds = %2409, %2407
  %2410 = phi i64 [ 0, %2407 ], [ %2431, %2409 ]
  %2411 = getelementptr inbounds float, ptr %2393, i64 %2410
  %2412 = load <8 x float>, ptr %2411, align 4, !tbaa !65, !alias.scope !297
  %2413 = getelementptr inbounds float, ptr %2411, i64 8
  %2414 = load <8 x float>, ptr %2413, align 4, !tbaa !65, !alias.scope !297
  %2415 = getelementptr inbounds float, ptr %2411, i64 16
  %2416 = load <8 x float>, ptr %2415, align 4, !tbaa !65, !alias.scope !297
  %2417 = getelementptr inbounds float, ptr %2411, i64 24
  %2418 = load <8 x float>, ptr %2417, align 4, !tbaa !65, !alias.scope !297
  %2419 = getelementptr inbounds float, ptr %7, i64 %2410
  %2420 = load <8 x float>, ptr %2419, align 4, !tbaa !65, !alias.scope !300, !noalias !297
  %2421 = getelementptr inbounds float, ptr %2419, i64 8
  %2422 = load <8 x float>, ptr %2421, align 4, !tbaa !65, !alias.scope !300, !noalias !297
  %2423 = getelementptr inbounds float, ptr %2419, i64 16
  %2424 = load <8 x float>, ptr %2423, align 4, !tbaa !65, !alias.scope !300, !noalias !297
  %2425 = getelementptr inbounds float, ptr %2419, i64 24
  %2426 = load <8 x float>, ptr %2425, align 4, !tbaa !65, !alias.scope !300, !noalias !297
  %2427 = fadd fast <8 x float> %2420, %2412
  %2428 = fadd fast <8 x float> %2422, %2414
  %2429 = fadd fast <8 x float> %2424, %2416
  %2430 = fadd fast <8 x float> %2426, %2418
  store <8 x float> %2427, ptr %2419, align 4, !tbaa !65, !alias.scope !300, !noalias !297
  store <8 x float> %2428, ptr %2421, align 4, !tbaa !65, !alias.scope !300, !noalias !297
  store <8 x float> %2429, ptr %2423, align 4, !tbaa !65, !alias.scope !300, !noalias !297
  store <8 x float> %2430, ptr %2425, align 4, !tbaa !65, !alias.scope !300, !noalias !297
  %2431 = add nuw i64 %2410, 32
  %2432 = icmp eq i64 %2431, %2408
  br i1 %2432, label %2433, label %2409, !llvm.loop !302

2433:                                             ; preds = %2409
  %2434 = icmp eq i64 %2408, %2397
  br i1 %2434, label %2584, label %2435

2435:                                             ; preds = %2399, %2396, %2433
  %2436 = phi i64 [ 0, %2399 ], [ 0, %2396 ], [ %2408, %2433 ]
  %2437 = xor i64 %2436, -1
  %2438 = add nsw i64 %2437, %2397
  %2439 = and i64 %2397, 3
  %2440 = icmp eq i64 %2439, 0
  br i1 %2440, label %2452, label %2441

2441:                                             ; preds = %2435, %2441
  %2442 = phi i64 [ %2449, %2441 ], [ %2436, %2435 ]
  %2443 = phi i64 [ %2450, %2441 ], [ 0, %2435 ]
  %2444 = getelementptr inbounds float, ptr %2393, i64 %2442
  %2445 = load float, ptr %2444, align 4, !tbaa !65
  %2446 = getelementptr inbounds float, ptr %7, i64 %2442
  %2447 = load float, ptr %2446, align 4, !tbaa !65
  %2448 = fadd fast float %2447, %2445
  store float %2448, ptr %2446, align 4, !tbaa !65
  %2449 = add nuw nsw i64 %2442, 1
  %2450 = add i64 %2443, 1
  %2451 = icmp eq i64 %2450, %2439
  br i1 %2451, label %2452, label %2441, !llvm.loop !303

2452:                                             ; preds = %2441, %2435
  %2453 = phi i64 [ %2436, %2435 ], [ %2449, %2441 ]
  %2454 = icmp ult i64 %2438, 3
  br i1 %2454, label %2584, label %2455

2455:                                             ; preds = %2452, %2455
  %2456 = phi i64 [ %2480, %2455 ], [ %2453, %2452 ]
  %2457 = getelementptr inbounds float, ptr %2393, i64 %2456
  %2458 = load float, ptr %2457, align 4, !tbaa !65
  %2459 = getelementptr inbounds float, ptr %7, i64 %2456
  %2460 = load float, ptr %2459, align 4, !tbaa !65
  %2461 = fadd fast float %2460, %2458
  store float %2461, ptr %2459, align 4, !tbaa !65
  %2462 = add nuw nsw i64 %2456, 1
  %2463 = getelementptr inbounds float, ptr %2393, i64 %2462
  %2464 = load float, ptr %2463, align 4, !tbaa !65
  %2465 = getelementptr inbounds float, ptr %7, i64 %2462
  %2466 = load float, ptr %2465, align 4, !tbaa !65
  %2467 = fadd fast float %2466, %2464
  store float %2467, ptr %2465, align 4, !tbaa !65
  %2468 = add nuw nsw i64 %2456, 2
  %2469 = getelementptr inbounds float, ptr %2393, i64 %2468
  %2470 = load float, ptr %2469, align 4, !tbaa !65
  %2471 = getelementptr inbounds float, ptr %7, i64 %2468
  %2472 = load float, ptr %2471, align 4, !tbaa !65
  %2473 = fadd fast float %2472, %2470
  store float %2473, ptr %2471, align 4, !tbaa !65
  %2474 = add nuw nsw i64 %2456, 3
  %2475 = getelementptr inbounds float, ptr %2393, i64 %2474
  %2476 = load float, ptr %2475, align 4, !tbaa !65
  %2477 = getelementptr inbounds float, ptr %7, i64 %2474
  %2478 = load float, ptr %2477, align 4, !tbaa !65
  %2479 = fadd fast float %2478, %2476
  store float %2479, ptr %2477, align 4, !tbaa !65
  %2480 = add nuw nsw i64 %2456, 4
  %2481 = icmp eq i64 %2480, %2397
  br i1 %2481, label %2584, label %2455, !llvm.loop !304

2482:                                             ; preds = %2376
  %2483 = getelementptr inbounds %struct.CCGEdge, ptr %2379, i64 0, i32 4
  %2484 = load float, ptr %2483, align 4, !tbaa !116
  %2485 = fcmp fast une float %2484, 0.000000e+00
  br i1 %2485, label %2486, label %2584

2486:                                             ; preds = %2482
  %2487 = getelementptr inbounds %struct.CCGEdge, ptr %2379, i64 0, i32 5
  %2488 = load ptr, ptr %2487, align 8, !tbaa !83
  %2489 = icmp eq ptr %2488, %1275
  br i1 %2489, label %2490, label %2493

2490:                                             ; preds = %2486
  %2491 = getelementptr inbounds %struct.CCGEdge, ptr %2379, i64 0, i32 6
  %2492 = load ptr, ptr %2491, align 8, !tbaa !85
  br label %2493

2493:                                             ; preds = %2486, %2490
  %2494 = phi ptr [ %2492, %2490 ], [ %2488, %2486 ]
  %2495 = getelementptr %struct.CCGVert, ptr %2494, i64 1
  %2496 = load i32, ptr %306, align 4, !tbaa !74
  %2497 = icmp sgt i32 %2496, 0
  br i1 %2497, label %2498, label %2584

2498:                                             ; preds = %2493
  %2499 = zext i32 %2496 to i64
  %2500 = icmp ult i32 %2496, 32
  br i1 %2500, label %2537, label %2501

2501:                                             ; preds = %2498
  %2502 = shl nuw nsw i64 %2499, 2
  %2503 = getelementptr i8, ptr %7, i64 %2502
  %2504 = getelementptr i8, ptr %2494, i64 40
  %2505 = getelementptr i8, ptr %2504, i64 %2502
  %2506 = icmp ult ptr %7, %2505
  %2507 = icmp ult ptr %2495, %2503
  %2508 = and i1 %2506, %2507
  br i1 %2508, label %2537, label %2509

2509:                                             ; preds = %2501
  %2510 = and i64 %2499, 4294967264
  br label %2511

2511:                                             ; preds = %2511, %2509
  %2512 = phi i64 [ 0, %2509 ], [ %2533, %2511 ]
  %2513 = getelementptr inbounds float, ptr %2495, i64 %2512
  %2514 = load <8 x float>, ptr %2513, align 4, !tbaa !65, !alias.scope !305
  %2515 = getelementptr inbounds float, ptr %2513, i64 8
  %2516 = load <8 x float>, ptr %2515, align 4, !tbaa !65, !alias.scope !305
  %2517 = getelementptr inbounds float, ptr %2513, i64 16
  %2518 = load <8 x float>, ptr %2517, align 4, !tbaa !65, !alias.scope !305
  %2519 = getelementptr inbounds float, ptr %2513, i64 24
  %2520 = load <8 x float>, ptr %2519, align 4, !tbaa !65, !alias.scope !305
  %2521 = getelementptr inbounds float, ptr %7, i64 %2512
  %2522 = load <8 x float>, ptr %2521, align 4, !tbaa !65, !alias.scope !308, !noalias !305
  %2523 = getelementptr inbounds float, ptr %2521, i64 8
  %2524 = load <8 x float>, ptr %2523, align 4, !tbaa !65, !alias.scope !308, !noalias !305
  %2525 = getelementptr inbounds float, ptr %2521, i64 16
  %2526 = load <8 x float>, ptr %2525, align 4, !tbaa !65, !alias.scope !308, !noalias !305
  %2527 = getelementptr inbounds float, ptr %2521, i64 24
  %2528 = load <8 x float>, ptr %2527, align 4, !tbaa !65, !alias.scope !308, !noalias !305
  %2529 = fadd fast <8 x float> %2522, %2514
  %2530 = fadd fast <8 x float> %2524, %2516
  %2531 = fadd fast <8 x float> %2526, %2518
  %2532 = fadd fast <8 x float> %2528, %2520
  store <8 x float> %2529, ptr %2521, align 4, !tbaa !65, !alias.scope !308, !noalias !305
  store <8 x float> %2530, ptr %2523, align 4, !tbaa !65, !alias.scope !308, !noalias !305
  store <8 x float> %2531, ptr %2525, align 4, !tbaa !65, !alias.scope !308, !noalias !305
  store <8 x float> %2532, ptr %2527, align 4, !tbaa !65, !alias.scope !308, !noalias !305
  %2533 = add nuw i64 %2512, 32
  %2534 = icmp eq i64 %2533, %2510
  br i1 %2534, label %2535, label %2511, !llvm.loop !310

2535:                                             ; preds = %2511
  %2536 = icmp eq i64 %2510, %2499
  br i1 %2536, label %2584, label %2537

2537:                                             ; preds = %2501, %2498, %2535
  %2538 = phi i64 [ 0, %2501 ], [ 0, %2498 ], [ %2510, %2535 ]
  %2539 = xor i64 %2538, -1
  %2540 = add nsw i64 %2539, %2499
  %2541 = and i64 %2499, 3
  %2542 = icmp eq i64 %2541, 0
  br i1 %2542, label %2554, label %2543

2543:                                             ; preds = %2537, %2543
  %2544 = phi i64 [ %2551, %2543 ], [ %2538, %2537 ]
  %2545 = phi i64 [ %2552, %2543 ], [ 0, %2537 ]
  %2546 = getelementptr inbounds float, ptr %2495, i64 %2544
  %2547 = load float, ptr %2546, align 4, !tbaa !65
  %2548 = getelementptr inbounds float, ptr %7, i64 %2544
  %2549 = load float, ptr %2548, align 4, !tbaa !65
  %2550 = fadd fast float %2549, %2547
  store float %2550, ptr %2548, align 4, !tbaa !65
  %2551 = add nuw nsw i64 %2544, 1
  %2552 = add i64 %2545, 1
  %2553 = icmp eq i64 %2552, %2541
  br i1 %2553, label %2554, label %2543, !llvm.loop !311

2554:                                             ; preds = %2543, %2537
  %2555 = phi i64 [ %2538, %2537 ], [ %2551, %2543 ]
  %2556 = icmp ult i64 %2540, 3
  br i1 %2556, label %2584, label %2557

2557:                                             ; preds = %2554, %2557
  %2558 = phi i64 [ %2582, %2557 ], [ %2555, %2554 ]
  %2559 = getelementptr inbounds float, ptr %2495, i64 %2558
  %2560 = load float, ptr %2559, align 4, !tbaa !65
  %2561 = getelementptr inbounds float, ptr %7, i64 %2558
  %2562 = load float, ptr %2561, align 4, !tbaa !65
  %2563 = fadd fast float %2562, %2560
  store float %2563, ptr %2561, align 4, !tbaa !65
  %2564 = add nuw nsw i64 %2558, 1
  %2565 = getelementptr inbounds float, ptr %2495, i64 %2564
  %2566 = load float, ptr %2565, align 4, !tbaa !65
  %2567 = getelementptr inbounds float, ptr %7, i64 %2564
  %2568 = load float, ptr %2567, align 4, !tbaa !65
  %2569 = fadd fast float %2568, %2566
  store float %2569, ptr %2567, align 4, !tbaa !65
  %2570 = add nuw nsw i64 %2558, 2
  %2571 = getelementptr inbounds float, ptr %2495, i64 %2570
  %2572 = load float, ptr %2571, align 4, !tbaa !65
  %2573 = getelementptr inbounds float, ptr %7, i64 %2570
  %2574 = load float, ptr %2573, align 4, !tbaa !65
  %2575 = fadd fast float %2574, %2572
  store float %2575, ptr %2573, align 4, !tbaa !65
  %2576 = add nuw nsw i64 %2558, 3
  %2577 = getelementptr inbounds float, ptr %2495, i64 %2576
  %2578 = load float, ptr %2577, align 4, !tbaa !65
  %2579 = getelementptr inbounds float, ptr %7, i64 %2576
  %2580 = load float, ptr %2579, align 4, !tbaa !65
  %2581 = fadd fast float %2580, %2578
  store float %2581, ptr %2579, align 4, !tbaa !65
  %2582 = add nuw nsw i64 %2558, 4
  %2583 = icmp eq i64 %2582, %2499
  br i1 %2583, label %2584, label %2557, !llvm.loop !312

2584:                                             ; preds = %2554, %2557, %2452, %2455, %2535, %2433, %2493, %2391, %2482, %2380
  %2585 = add nuw nsw i64 %2377, 1
  %2586 = icmp eq i64 %2585, %2373
  br i1 %2586, label %2587, label %2376, !llvm.loop !313

2587:                                             ; preds = %2584, %2365
  %2588 = load i32, ptr %306, align 4, !tbaa !74
  %2589 = icmp sgt i32 %2588, 0
  br i1 %2589, label %2590, label %3311

2590:                                             ; preds = %2587
  %2591 = sitofp i32 %2369 to float
  %2592 = zext i32 %2588 to i64
  %2593 = icmp ult i32 %2588, 8
  br i1 %2593, label %2608, label %2594

2594:                                             ; preds = %2590
  %2595 = and i64 %2592, 4294967288
  %2596 = insertelement <8 x float> poison, float %2591, i64 0
  %2597 = shufflevector <8 x float> %2596, <8 x float> poison, <8 x i32> zeroinitializer
  %2598 = fdiv fast <8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2597
  br label %2599

2599:                                             ; preds = %2599, %2594
  %2600 = phi i64 [ 0, %2594 ], [ %2604, %2599 ]
  %2601 = getelementptr inbounds float, ptr %7, i64 %2600
  %2602 = load <8 x float>, ptr %2601, align 4, !tbaa !65
  %2603 = fmul fast <8 x float> %2602, %2598
  store <8 x float> %2603, ptr %2601, align 4, !tbaa !65
  %2604 = add nuw i64 %2600, 8
  %2605 = icmp eq i64 %2604, %2595
  br i1 %2605, label %2606, label %2599, !llvm.loop !314

2606:                                             ; preds = %2599
  %2607 = icmp eq i64 %2595, %2592
  br i1 %2607, label %2618, label %2608

2608:                                             ; preds = %2590, %2606
  %2609 = phi i64 [ 0, %2590 ], [ %2595, %2606 ]
  %2610 = fdiv fast float 1.000000e+00, %2591
  br label %2611

2611:                                             ; preds = %2608, %2611
  %2612 = phi i64 [ %2616, %2611 ], [ %2609, %2608 ]
  %2613 = getelementptr inbounds float, ptr %7, i64 %2612
  %2614 = load float, ptr %2613, align 4, !tbaa !65
  %2615 = fmul fast float %2614, %2610
  store float %2615, ptr %2613, align 4, !tbaa !65
  %2616 = add nuw nsw i64 %2612, 1
  %2617 = icmp eq i64 %2616, %2592
  br i1 %2617, label %2618, label %2611, !llvm.loop !315

2618:                                             ; preds = %2611, %2606
  %2619 = icmp ne i32 %2369, 2
  %2620 = icmp ne i32 %1327, 0
  %2621 = or i1 %2363, %2619
  %2622 = select i1 %2621, i1 true, i1 %2620
  br i1 %2622, label %2623, label %2893

2623:                                             ; preds = %2618
  %2624 = icmp ult i32 %2588, 32
  br i1 %2624, label %2649, label %2625

2625:                                             ; preds = %2623
  %2626 = add i64 %1276, 40
  %2627 = sub i64 %11, %2626
  %2628 = icmp ult i64 %2627, 128
  br i1 %2628, label %2649, label %2629

2629:                                             ; preds = %2625
  %2630 = and i64 %2592, 4294967264
  br label %2631

2631:                                             ; preds = %2631, %2629
  %2632 = phi i64 [ 0, %2629 ], [ %2645, %2631 ]
  %2633 = getelementptr inbounds float, ptr %1277, i64 %2632
  %2634 = load <8 x float>, ptr %2633, align 4, !tbaa !65
  %2635 = getelementptr inbounds float, ptr %2633, i64 8
  %2636 = load <8 x float>, ptr %2635, align 4, !tbaa !65
  %2637 = getelementptr inbounds float, ptr %2633, i64 16
  %2638 = load <8 x float>, ptr %2637, align 4, !tbaa !65
  %2639 = getelementptr inbounds float, ptr %2633, i64 24
  %2640 = load <8 x float>, ptr %2639, align 4, !tbaa !65
  %2641 = getelementptr inbounds float, ptr %10, i64 %2632
  store <8 x float> %2634, ptr %2641, align 4, !tbaa !65
  %2642 = getelementptr inbounds float, ptr %2641, i64 8
  store <8 x float> %2636, ptr %2642, align 4, !tbaa !65
  %2643 = getelementptr inbounds float, ptr %2641, i64 16
  store <8 x float> %2638, ptr %2643, align 4, !tbaa !65
  %2644 = getelementptr inbounds float, ptr %2641, i64 24
  store <8 x float> %2640, ptr %2644, align 4, !tbaa !65
  %2645 = add nuw i64 %2632, 32
  %2646 = icmp eq i64 %2645, %2630
  br i1 %2646, label %2647, label %2631, !llvm.loop !316

2647:                                             ; preds = %2631
  %2648 = icmp eq i64 %2630, %2592
  br i1 %2648, label %2686, label %2649

2649:                                             ; preds = %2625, %2623, %2647
  %2650 = phi i64 [ 0, %2625 ], [ 0, %2623 ], [ %2630, %2647 ]
  %2651 = xor i64 %2650, -1
  %2652 = add nsw i64 %2651, %2592
  %2653 = and i64 %2592, 3
  %2654 = icmp eq i64 %2653, 0
  br i1 %2654, label %2664, label %2655

2655:                                             ; preds = %2649, %2655
  %2656 = phi i64 [ %2661, %2655 ], [ %2650, %2649 ]
  %2657 = phi i64 [ %2662, %2655 ], [ 0, %2649 ]
  %2658 = getelementptr inbounds float, ptr %1277, i64 %2656
  %2659 = load float, ptr %2658, align 4, !tbaa !65
  %2660 = getelementptr inbounds float, ptr %10, i64 %2656
  store float %2659, ptr %2660, align 4, !tbaa !65
  %2661 = add nuw nsw i64 %2656, 1
  %2662 = add i64 %2657, 1
  %2663 = icmp eq i64 %2662, %2653
  br i1 %2663, label %2664, label %2655, !llvm.loop !317

2664:                                             ; preds = %2655, %2649
  %2665 = phi i64 [ %2650, %2649 ], [ %2661, %2655 ]
  %2666 = icmp ult i64 %2652, 3
  br i1 %2666, label %2686, label %2667

2667:                                             ; preds = %2664, %2667
  %2668 = phi i64 [ %2684, %2667 ], [ %2665, %2664 ]
  %2669 = getelementptr inbounds float, ptr %1277, i64 %2668
  %2670 = load float, ptr %2669, align 4, !tbaa !65
  %2671 = getelementptr inbounds float, ptr %10, i64 %2668
  store float %2670, ptr %2671, align 4, !tbaa !65
  %2672 = add nuw nsw i64 %2668, 1
  %2673 = getelementptr inbounds float, ptr %1277, i64 %2672
  %2674 = load float, ptr %2673, align 4, !tbaa !65
  %2675 = getelementptr inbounds float, ptr %10, i64 %2672
  store float %2674, ptr %2675, align 4, !tbaa !65
  %2676 = add nuw nsw i64 %2668, 2
  %2677 = getelementptr inbounds float, ptr %1277, i64 %2676
  %2678 = load float, ptr %2677, align 4, !tbaa !65
  %2679 = getelementptr inbounds float, ptr %10, i64 %2676
  store float %2678, ptr %2679, align 4, !tbaa !65
  %2680 = add nuw nsw i64 %2668, 3
  %2681 = getelementptr inbounds float, ptr %1277, i64 %2680
  %2682 = load float, ptr %2681, align 4, !tbaa !65
  %2683 = getelementptr inbounds float, ptr %10, i64 %2680
  store float %2682, ptr %2683, align 4, !tbaa !65
  %2684 = add nuw nsw i64 %2668, 4
  %2685 = icmp eq i64 %2684, %2592
  br i1 %2685, label %2686, label %2667, !llvm.loop !318

2686:                                             ; preds = %2664, %2667, %2647
  %2687 = icmp ult i32 %2588, 32
  br i1 %2687, label %2723, label %2688

2688:                                             ; preds = %2686
  %2689 = shl nuw nsw i64 %2592, 2
  %2690 = getelementptr i8, ptr %10, i64 %2689
  %2691 = getelementptr i8, ptr %7, i64 %2689
  %2692 = icmp ult ptr %10, %2691
  %2693 = icmp ult ptr %7, %2690
  %2694 = and i1 %2692, %2693
  br i1 %2694, label %2723, label %2695

2695:                                             ; preds = %2688
  %2696 = and i64 %2592, 4294967264
  br label %2697

2697:                                             ; preds = %2697, %2695
  %2698 = phi i64 [ 0, %2695 ], [ %2719, %2697 ]
  %2699 = getelementptr inbounds float, ptr %7, i64 %2698
  %2700 = load <8 x float>, ptr %2699, align 4, !tbaa !65, !alias.scope !319
  %2701 = getelementptr inbounds float, ptr %2699, i64 8
  %2702 = load <8 x float>, ptr %2701, align 4, !tbaa !65, !alias.scope !319
  %2703 = getelementptr inbounds float, ptr %2699, i64 16
  %2704 = load <8 x float>, ptr %2703, align 4, !tbaa !65, !alias.scope !319
  %2705 = getelementptr inbounds float, ptr %2699, i64 24
  %2706 = load <8 x float>, ptr %2705, align 4, !tbaa !65, !alias.scope !319
  %2707 = getelementptr inbounds float, ptr %10, i64 %2698
  %2708 = load <8 x float>, ptr %2707, align 4, !tbaa !65, !alias.scope !322, !noalias !319
  %2709 = getelementptr inbounds float, ptr %2707, i64 8
  %2710 = load <8 x float>, ptr %2709, align 4, !tbaa !65, !alias.scope !322, !noalias !319
  %2711 = getelementptr inbounds float, ptr %2707, i64 16
  %2712 = load <8 x float>, ptr %2711, align 4, !tbaa !65, !alias.scope !322, !noalias !319
  %2713 = getelementptr inbounds float, ptr %2707, i64 24
  %2714 = load <8 x float>, ptr %2713, align 4, !tbaa !65, !alias.scope !322, !noalias !319
  %2715 = fsub fast <8 x float> %2708, %2700
  %2716 = fsub fast <8 x float> %2710, %2702
  %2717 = fsub fast <8 x float> %2712, %2704
  %2718 = fsub fast <8 x float> %2714, %2706
  store <8 x float> %2715, ptr %2707, align 4, !tbaa !65, !alias.scope !322, !noalias !319
  store <8 x float> %2716, ptr %2709, align 4, !tbaa !65, !alias.scope !322, !noalias !319
  store <8 x float> %2717, ptr %2711, align 4, !tbaa !65, !alias.scope !322, !noalias !319
  store <8 x float> %2718, ptr %2713, align 4, !tbaa !65, !alias.scope !322, !noalias !319
  %2719 = add nuw i64 %2698, 32
  %2720 = icmp eq i64 %2719, %2696
  br i1 %2720, label %2721, label %2697, !llvm.loop !324

2721:                                             ; preds = %2697
  %2722 = icmp eq i64 %2696, %2592
  br i1 %2722, label %2770, label %2723

2723:                                             ; preds = %2688, %2686, %2721
  %2724 = phi i64 [ 0, %2688 ], [ 0, %2686 ], [ %2696, %2721 ]
  %2725 = xor i64 %2724, -1
  %2726 = add nsw i64 %2725, %2592
  %2727 = and i64 %2592, 3
  %2728 = icmp eq i64 %2727, 0
  br i1 %2728, label %2740, label %2729

2729:                                             ; preds = %2723, %2729
  %2730 = phi i64 [ %2737, %2729 ], [ %2724, %2723 ]
  %2731 = phi i64 [ %2738, %2729 ], [ 0, %2723 ]
  %2732 = getelementptr inbounds float, ptr %7, i64 %2730
  %2733 = load float, ptr %2732, align 4, !tbaa !65
  %2734 = getelementptr inbounds float, ptr %10, i64 %2730
  %2735 = load float, ptr %2734, align 4, !tbaa !65
  %2736 = fsub fast float %2735, %2733
  store float %2736, ptr %2734, align 4, !tbaa !65
  %2737 = add nuw nsw i64 %2730, 1
  %2738 = add i64 %2731, 1
  %2739 = icmp eq i64 %2738, %2727
  br i1 %2739, label %2740, label %2729, !llvm.loop !325

2740:                                             ; preds = %2729, %2723
  %2741 = phi i64 [ %2724, %2723 ], [ %2737, %2729 ]
  %2742 = icmp ult i64 %2726, 3
  br i1 %2742, label %2770, label %2743

2743:                                             ; preds = %2740, %2743
  %2744 = phi i64 [ %2768, %2743 ], [ %2741, %2740 ]
  %2745 = getelementptr inbounds float, ptr %7, i64 %2744
  %2746 = load float, ptr %2745, align 4, !tbaa !65
  %2747 = getelementptr inbounds float, ptr %10, i64 %2744
  %2748 = load float, ptr %2747, align 4, !tbaa !65
  %2749 = fsub fast float %2748, %2746
  store float %2749, ptr %2747, align 4, !tbaa !65
  %2750 = add nuw nsw i64 %2744, 1
  %2751 = getelementptr inbounds float, ptr %7, i64 %2750
  %2752 = load float, ptr %2751, align 4, !tbaa !65
  %2753 = getelementptr inbounds float, ptr %10, i64 %2750
  %2754 = load float, ptr %2753, align 4, !tbaa !65
  %2755 = fsub fast float %2754, %2752
  store float %2755, ptr %2753, align 4, !tbaa !65
  %2756 = add nuw nsw i64 %2744, 2
  %2757 = getelementptr inbounds float, ptr %7, i64 %2756
  %2758 = load float, ptr %2757, align 4, !tbaa !65
  %2759 = getelementptr inbounds float, ptr %10, i64 %2756
  %2760 = load float, ptr %2759, align 4, !tbaa !65
  %2761 = fsub fast float %2760, %2758
  store float %2761, ptr %2759, align 4, !tbaa !65
  %2762 = add nuw nsw i64 %2744, 3
  %2763 = getelementptr inbounds float, ptr %7, i64 %2762
  %2764 = load float, ptr %2763, align 4, !tbaa !65
  %2765 = getelementptr inbounds float, ptr %10, i64 %2762
  %2766 = load float, ptr %2765, align 4, !tbaa !65
  %2767 = fsub fast float %2766, %2764
  store float %2767, ptr %2765, align 4, !tbaa !65
  %2768 = add nuw nsw i64 %2744, 4
  %2769 = icmp eq i64 %2768, %2592
  br i1 %2769, label %2770, label %2743, !llvm.loop !326

2770:                                             ; preds = %2740, %2743, %2721
  %2771 = icmp ult i32 %2588, 32
  br i1 %2771, label %2800, label %2772

2772:                                             ; preds = %2770
  %2773 = and i64 %2592, 4294967264
  %2774 = insertelement <8 x float> poison, float %2368, i64 0
  %2775 = shufflevector <8 x float> %2774, <8 x float> poison, <8 x i32> zeroinitializer
  %2776 = insertelement <8 x float> poison, float %2368, i64 0
  %2777 = shufflevector <8 x float> %2776, <8 x float> poison, <8 x i32> zeroinitializer
  %2778 = insertelement <8 x float> poison, float %2368, i64 0
  %2779 = shufflevector <8 x float> %2778, <8 x float> poison, <8 x i32> zeroinitializer
  %2780 = insertelement <8 x float> poison, float %2368, i64 0
  %2781 = shufflevector <8 x float> %2780, <8 x float> poison, <8 x i32> zeroinitializer
  br label %2782

2782:                                             ; preds = %2782, %2772
  %2783 = phi i64 [ 0, %2772 ], [ %2796, %2782 ]
  %2784 = getelementptr inbounds float, ptr %10, i64 %2783
  %2785 = load <8 x float>, ptr %2784, align 4, !tbaa !65
  %2786 = getelementptr inbounds float, ptr %2784, i64 8
  %2787 = load <8 x float>, ptr %2786, align 4, !tbaa !65
  %2788 = getelementptr inbounds float, ptr %2784, i64 16
  %2789 = load <8 x float>, ptr %2788, align 4, !tbaa !65
  %2790 = getelementptr inbounds float, ptr %2784, i64 24
  %2791 = load <8 x float>, ptr %2790, align 4, !tbaa !65
  %2792 = fmul fast <8 x float> %2785, %2775
  %2793 = fmul fast <8 x float> %2787, %2777
  %2794 = fmul fast <8 x float> %2789, %2779
  %2795 = fmul fast <8 x float> %2791, %2781
  store <8 x float> %2792, ptr %2784, align 4, !tbaa !65
  store <8 x float> %2793, ptr %2786, align 4, !tbaa !65
  store <8 x float> %2794, ptr %2788, align 4, !tbaa !65
  store <8 x float> %2795, ptr %2790, align 4, !tbaa !65
  %2796 = add nuw i64 %2783, 32
  %2797 = icmp eq i64 %2796, %2773
  br i1 %2797, label %2798, label %2782, !llvm.loop !327

2798:                                             ; preds = %2782
  %2799 = icmp eq i64 %2773, %2592
  br i1 %2799, label %2809, label %2800

2800:                                             ; preds = %2770, %2798
  %2801 = phi i64 [ 0, %2770 ], [ %2773, %2798 ]
  br label %2802

2802:                                             ; preds = %2800, %2802
  %2803 = phi i64 [ %2807, %2802 ], [ %2801, %2800 ]
  %2804 = getelementptr inbounds float, ptr %10, i64 %2803
  %2805 = load float, ptr %2804, align 4, !tbaa !65
  %2806 = fmul fast float %2805, %2368
  store float %2806, ptr %2804, align 4, !tbaa !65
  %2807 = add nuw nsw i64 %2803, 1
  %2808 = icmp eq i64 %2807, %2592
  br i1 %2808, label %2809, label %2802, !llvm.loop !328

2809:                                             ; preds = %2802, %2798
  %2810 = icmp ult i32 %2588, 32
  br i1 %2810, label %2846, label %2811

2811:                                             ; preds = %2809
  %2812 = shl nuw nsw i64 %2592, 2
  %2813 = getelementptr i8, ptr %7, i64 %2812
  %2814 = getelementptr i8, ptr %10, i64 %2812
  %2815 = icmp ult ptr %7, %2814
  %2816 = icmp ult ptr %10, %2813
  %2817 = and i1 %2815, %2816
  br i1 %2817, label %2846, label %2818

2818:                                             ; preds = %2811
  %2819 = and i64 %2592, 4294967264
  br label %2820

2820:                                             ; preds = %2820, %2818
  %2821 = phi i64 [ 0, %2818 ], [ %2842, %2820 ]
  %2822 = getelementptr inbounds float, ptr %10, i64 %2821
  %2823 = load <8 x float>, ptr %2822, align 4, !tbaa !65, !alias.scope !329
  %2824 = getelementptr inbounds float, ptr %2822, i64 8
  %2825 = load <8 x float>, ptr %2824, align 4, !tbaa !65, !alias.scope !329
  %2826 = getelementptr inbounds float, ptr %2822, i64 16
  %2827 = load <8 x float>, ptr %2826, align 4, !tbaa !65, !alias.scope !329
  %2828 = getelementptr inbounds float, ptr %2822, i64 24
  %2829 = load <8 x float>, ptr %2828, align 4, !tbaa !65, !alias.scope !329
  %2830 = getelementptr inbounds float, ptr %7, i64 %2821
  %2831 = load <8 x float>, ptr %2830, align 4, !tbaa !65, !alias.scope !332, !noalias !329
  %2832 = getelementptr inbounds float, ptr %2830, i64 8
  %2833 = load <8 x float>, ptr %2832, align 4, !tbaa !65, !alias.scope !332, !noalias !329
  %2834 = getelementptr inbounds float, ptr %2830, i64 16
  %2835 = load <8 x float>, ptr %2834, align 4, !tbaa !65, !alias.scope !332, !noalias !329
  %2836 = getelementptr inbounds float, ptr %2830, i64 24
  %2837 = load <8 x float>, ptr %2836, align 4, !tbaa !65, !alias.scope !332, !noalias !329
  %2838 = fadd fast <8 x float> %2831, %2823
  %2839 = fadd fast <8 x float> %2833, %2825
  %2840 = fadd fast <8 x float> %2835, %2827
  %2841 = fadd fast <8 x float> %2837, %2829
  store <8 x float> %2838, ptr %2830, align 4, !tbaa !65, !alias.scope !332, !noalias !329
  store <8 x float> %2839, ptr %2832, align 4, !tbaa !65, !alias.scope !332, !noalias !329
  store <8 x float> %2840, ptr %2834, align 4, !tbaa !65, !alias.scope !332, !noalias !329
  store <8 x float> %2841, ptr %2836, align 4, !tbaa !65, !alias.scope !332, !noalias !329
  %2842 = add nuw i64 %2821, 32
  %2843 = icmp eq i64 %2842, %2819
  br i1 %2843, label %2844, label %2820, !llvm.loop !334

2844:                                             ; preds = %2820
  %2845 = icmp eq i64 %2819, %2592
  br i1 %2845, label %2893, label %2846

2846:                                             ; preds = %2811, %2809, %2844
  %2847 = phi i64 [ 0, %2811 ], [ 0, %2809 ], [ %2819, %2844 ]
  %2848 = xor i64 %2847, -1
  %2849 = add nsw i64 %2848, %2592
  %2850 = and i64 %2592, 3
  %2851 = icmp eq i64 %2850, 0
  br i1 %2851, label %2863, label %2852

2852:                                             ; preds = %2846, %2852
  %2853 = phi i64 [ %2860, %2852 ], [ %2847, %2846 ]
  %2854 = phi i64 [ %2861, %2852 ], [ 0, %2846 ]
  %2855 = getelementptr inbounds float, ptr %10, i64 %2853
  %2856 = load float, ptr %2855, align 4, !tbaa !65
  %2857 = getelementptr inbounds float, ptr %7, i64 %2853
  %2858 = load float, ptr %2857, align 4, !tbaa !65
  %2859 = fadd fast float %2858, %2856
  store float %2859, ptr %2857, align 4, !tbaa !65
  %2860 = add nuw nsw i64 %2853, 1
  %2861 = add i64 %2854, 1
  %2862 = icmp eq i64 %2861, %2850
  br i1 %2862, label %2863, label %2852, !llvm.loop !335

2863:                                             ; preds = %2852, %2846
  %2864 = phi i64 [ %2847, %2846 ], [ %2860, %2852 ]
  %2865 = icmp ult i64 %2849, 3
  br i1 %2865, label %2893, label %2866

2866:                                             ; preds = %2863, %2866
  %2867 = phi i64 [ %2891, %2866 ], [ %2864, %2863 ]
  %2868 = getelementptr inbounds float, ptr %10, i64 %2867
  %2869 = load float, ptr %2868, align 4, !tbaa !65
  %2870 = getelementptr inbounds float, ptr %7, i64 %2867
  %2871 = load float, ptr %2870, align 4, !tbaa !65
  %2872 = fadd fast float %2871, %2869
  store float %2872, ptr %2870, align 4, !tbaa !65
  %2873 = add nuw nsw i64 %2867, 1
  %2874 = getelementptr inbounds float, ptr %10, i64 %2873
  %2875 = load float, ptr %2874, align 4, !tbaa !65
  %2876 = getelementptr inbounds float, ptr %7, i64 %2873
  %2877 = load float, ptr %2876, align 4, !tbaa !65
  %2878 = fadd fast float %2877, %2875
  store float %2878, ptr %2876, align 4, !tbaa !65
  %2879 = add nuw nsw i64 %2867, 2
  %2880 = getelementptr inbounds float, ptr %10, i64 %2879
  %2881 = load float, ptr %2880, align 4, !tbaa !65
  %2882 = getelementptr inbounds float, ptr %7, i64 %2879
  %2883 = load float, ptr %2882, align 4, !tbaa !65
  %2884 = fadd fast float %2883, %2881
  store float %2884, ptr %2882, align 4, !tbaa !65
  %2885 = add nuw nsw i64 %2867, 3
  %2886 = getelementptr inbounds float, ptr %10, i64 %2885
  %2887 = load float, ptr %2886, align 4, !tbaa !65
  %2888 = getelementptr inbounds float, ptr %7, i64 %2885
  %2889 = load float, ptr %2888, align 4, !tbaa !65
  %2890 = fadd fast float %2889, %2887
  store float %2890, ptr %2888, align 4, !tbaa !65
  %2891 = add nuw nsw i64 %2867, 4
  %2892 = icmp eq i64 %2891, %2592
  br i1 %2892, label %2893, label %2866, !llvm.loop !336

2893:                                             ; preds = %2863, %2866, %2844, %2618
  %2894 = icmp ult i32 %2588, 32
  br i1 %2894, label %2919, label %2895

2895:                                             ; preds = %2893
  %2896 = add i64 %1276, 40
  %2897 = sub i64 %11, %2896
  %2898 = icmp ult i64 %2897, 128
  br i1 %2898, label %2919, label %2899

2899:                                             ; preds = %2895
  %2900 = and i64 %2592, 4294967264
  br label %2901

2901:                                             ; preds = %2901, %2899
  %2902 = phi i64 [ 0, %2899 ], [ %2915, %2901 ]
  %2903 = getelementptr inbounds float, ptr %1277, i64 %2902
  %2904 = load <8 x float>, ptr %2903, align 4, !tbaa !65
  %2905 = getelementptr inbounds float, ptr %2903, i64 8
  %2906 = load <8 x float>, ptr %2905, align 4, !tbaa !65
  %2907 = getelementptr inbounds float, ptr %2903, i64 16
  %2908 = load <8 x float>, ptr %2907, align 4, !tbaa !65
  %2909 = getelementptr inbounds float, ptr %2903, i64 24
  %2910 = load <8 x float>, ptr %2909, align 4, !tbaa !65
  %2911 = getelementptr inbounds float, ptr %10, i64 %2902
  store <8 x float> %2904, ptr %2911, align 4, !tbaa !65
  %2912 = getelementptr inbounds float, ptr %2911, i64 8
  store <8 x float> %2906, ptr %2912, align 4, !tbaa !65
  %2913 = getelementptr inbounds float, ptr %2911, i64 16
  store <8 x float> %2908, ptr %2913, align 4, !tbaa !65
  %2914 = getelementptr inbounds float, ptr %2911, i64 24
  store <8 x float> %2910, ptr %2914, align 4, !tbaa !65
  %2915 = add nuw i64 %2902, 32
  %2916 = icmp eq i64 %2915, %2900
  br i1 %2916, label %2917, label %2901, !llvm.loop !337

2917:                                             ; preds = %2901
  %2918 = icmp eq i64 %2900, %2592
  br i1 %2918, label %2956, label %2919

2919:                                             ; preds = %2895, %2893, %2917
  %2920 = phi i64 [ 0, %2895 ], [ 0, %2893 ], [ %2900, %2917 ]
  %2921 = xor i64 %2920, -1
  %2922 = add nsw i64 %2921, %2592
  %2923 = and i64 %2592, 3
  %2924 = icmp eq i64 %2923, 0
  br i1 %2924, label %2934, label %2925

2925:                                             ; preds = %2919, %2925
  %2926 = phi i64 [ %2931, %2925 ], [ %2920, %2919 ]
  %2927 = phi i64 [ %2932, %2925 ], [ 0, %2919 ]
  %2928 = getelementptr inbounds float, ptr %1277, i64 %2926
  %2929 = load float, ptr %2928, align 4, !tbaa !65
  %2930 = getelementptr inbounds float, ptr %10, i64 %2926
  store float %2929, ptr %2930, align 4, !tbaa !65
  %2931 = add nuw nsw i64 %2926, 1
  %2932 = add i64 %2927, 1
  %2933 = icmp eq i64 %2932, %2923
  br i1 %2933, label %2934, label %2925, !llvm.loop !338

2934:                                             ; preds = %2925, %2919
  %2935 = phi i64 [ %2920, %2919 ], [ %2931, %2925 ]
  %2936 = icmp ult i64 %2922, 3
  br i1 %2936, label %2956, label %2937

2937:                                             ; preds = %2934, %2937
  %2938 = phi i64 [ %2954, %2937 ], [ %2935, %2934 ]
  %2939 = getelementptr inbounds float, ptr %1277, i64 %2938
  %2940 = load float, ptr %2939, align 4, !tbaa !65
  %2941 = getelementptr inbounds float, ptr %10, i64 %2938
  store float %2940, ptr %2941, align 4, !tbaa !65
  %2942 = add nuw nsw i64 %2938, 1
  %2943 = getelementptr inbounds float, ptr %1277, i64 %2942
  %2944 = load float, ptr %2943, align 4, !tbaa !65
  %2945 = getelementptr inbounds float, ptr %10, i64 %2942
  store float %2944, ptr %2945, align 4, !tbaa !65
  %2946 = add nuw nsw i64 %2938, 2
  %2947 = getelementptr inbounds float, ptr %1277, i64 %2946
  %2948 = load float, ptr %2947, align 4, !tbaa !65
  %2949 = getelementptr inbounds float, ptr %10, i64 %2946
  store float %2948, ptr %2949, align 4, !tbaa !65
  %2950 = add nuw nsw i64 %2938, 3
  %2951 = getelementptr inbounds float, ptr %1277, i64 %2950
  %2952 = load float, ptr %2951, align 4, !tbaa !65
  %2953 = getelementptr inbounds float, ptr %10, i64 %2950
  store float %2952, ptr %2953, align 4, !tbaa !65
  %2954 = add nuw nsw i64 %2938, 4
  %2955 = icmp eq i64 %2954, %2592
  br i1 %2955, label %2956, label %2937, !llvm.loop !339

2956:                                             ; preds = %2934, %2937, %2917
  %2957 = icmp ult i32 %2588, 32
  br i1 %2957, label %2978, label %2958

2958:                                             ; preds = %2956
  %2959 = and i64 %2592, 4294967264
  br label %2960

2960:                                             ; preds = %2960, %2958
  %2961 = phi i64 [ 0, %2958 ], [ %2974, %2960 ]
  %2962 = getelementptr inbounds float, ptr %10, i64 %2961
  %2963 = load <8 x float>, ptr %2962, align 4, !tbaa !65
  %2964 = getelementptr inbounds float, ptr %2962, i64 8
  %2965 = load <8 x float>, ptr %2964, align 4, !tbaa !65
  %2966 = getelementptr inbounds float, ptr %2962, i64 16
  %2967 = load <8 x float>, ptr %2966, align 4, !tbaa !65
  %2968 = getelementptr inbounds float, ptr %2962, i64 24
  %2969 = load <8 x float>, ptr %2968, align 4, !tbaa !65
  %2970 = fmul fast <8 x float> %2963, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  %2971 = fmul fast <8 x float> %2965, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  %2972 = fmul fast <8 x float> %2967, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  %2973 = fmul fast <8 x float> %2969, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  store <8 x float> %2970, ptr %2962, align 4, !tbaa !65
  store <8 x float> %2971, ptr %2964, align 4, !tbaa !65
  store <8 x float> %2972, ptr %2966, align 4, !tbaa !65
  store <8 x float> %2973, ptr %2968, align 4, !tbaa !65
  %2974 = add nuw i64 %2961, 32
  %2975 = icmp eq i64 %2974, %2959
  br i1 %2975, label %2976, label %2960, !llvm.loop !340

2976:                                             ; preds = %2960
  %2977 = icmp eq i64 %2959, %2592
  br i1 %2977, label %2987, label %2978

2978:                                             ; preds = %2956, %2976
  %2979 = phi i64 [ 0, %2956 ], [ %2959, %2976 ]
  br label %2980

2980:                                             ; preds = %2978, %2980
  %2981 = phi i64 [ %2985, %2980 ], [ %2979, %2978 ]
  %2982 = getelementptr inbounds float, ptr %10, i64 %2981
  %2983 = load float, ptr %2982, align 4, !tbaa !65
  %2984 = fmul fast float %2983, 7.500000e-01
  store float %2984, ptr %2982, align 4, !tbaa !65
  %2985 = add nuw nsw i64 %2981, 1
  %2986 = icmp eq i64 %2985, %2592
  br i1 %2986, label %2987, label %2980, !llvm.loop !341

2987:                                             ; preds = %2980, %2976
  %2988 = icmp ult i32 %2588, 32
  br i1 %2988, label %3009, label %2989

2989:                                             ; preds = %2987
  %2990 = and i64 %2592, 4294967264
  br label %2991

2991:                                             ; preds = %2991, %2989
  %2992 = phi i64 [ 0, %2989 ], [ %3005, %2991 ]
  %2993 = getelementptr inbounds float, ptr %7, i64 %2992
  %2994 = load <8 x float>, ptr %2993, align 4, !tbaa !65
  %2995 = getelementptr inbounds float, ptr %2993, i64 8
  %2996 = load <8 x float>, ptr %2995, align 4, !tbaa !65
  %2997 = getelementptr inbounds float, ptr %2993, i64 16
  %2998 = load <8 x float>, ptr %2997, align 4, !tbaa !65
  %2999 = getelementptr inbounds float, ptr %2993, i64 24
  %3000 = load <8 x float>, ptr %2999, align 4, !tbaa !65
  %3001 = fmul fast <8 x float> %2994, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %3002 = fmul fast <8 x float> %2996, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %3003 = fmul fast <8 x float> %2998, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %3004 = fmul fast <8 x float> %3000, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  store <8 x float> %3001, ptr %2993, align 4, !tbaa !65
  store <8 x float> %3002, ptr %2995, align 4, !tbaa !65
  store <8 x float> %3003, ptr %2997, align 4, !tbaa !65
  store <8 x float> %3004, ptr %2999, align 4, !tbaa !65
  %3005 = add nuw i64 %2992, 32
  %3006 = icmp eq i64 %3005, %2990
  br i1 %3006, label %3007, label %2991, !llvm.loop !342

3007:                                             ; preds = %2991
  %3008 = icmp eq i64 %2990, %2592
  br i1 %3008, label %3018, label %3009

3009:                                             ; preds = %2987, %3007
  %3010 = phi i64 [ 0, %2987 ], [ %2990, %3007 ]
  br label %3011

3011:                                             ; preds = %3009, %3011
  %3012 = phi i64 [ %3016, %3011 ], [ %3010, %3009 ]
  %3013 = getelementptr inbounds float, ptr %7, i64 %3012
  %3014 = load float, ptr %3013, align 4, !tbaa !65
  %3015 = fmul fast float %3014, 2.500000e-01
  store float %3015, ptr %3013, align 4, !tbaa !65
  %3016 = add nuw nsw i64 %3012, 1
  %3017 = icmp eq i64 %3016, %2592
  br i1 %3017, label %3018, label %3011, !llvm.loop !343

3018:                                             ; preds = %3011, %3007
  %3019 = icmp ult i32 %2588, 32
  br i1 %3019, label %3055, label %3020

3020:                                             ; preds = %3018
  %3021 = shl nuw nsw i64 %2592, 2
  %3022 = getelementptr i8, ptr %10, i64 %3021
  %3023 = getelementptr i8, ptr %7, i64 %3021
  %3024 = icmp ult ptr %10, %3023
  %3025 = icmp ult ptr %7, %3022
  %3026 = and i1 %3024, %3025
  br i1 %3026, label %3055, label %3027

3027:                                             ; preds = %3020
  %3028 = and i64 %2592, 4294967264
  br label %3029

3029:                                             ; preds = %3029, %3027
  %3030 = phi i64 [ 0, %3027 ], [ %3051, %3029 ]
  %3031 = getelementptr inbounds float, ptr %7, i64 %3030
  %3032 = load <8 x float>, ptr %3031, align 4, !tbaa !65, !alias.scope !344
  %3033 = getelementptr inbounds float, ptr %3031, i64 8
  %3034 = load <8 x float>, ptr %3033, align 4, !tbaa !65, !alias.scope !344
  %3035 = getelementptr inbounds float, ptr %3031, i64 16
  %3036 = load <8 x float>, ptr %3035, align 4, !tbaa !65, !alias.scope !344
  %3037 = getelementptr inbounds float, ptr %3031, i64 24
  %3038 = load <8 x float>, ptr %3037, align 4, !tbaa !65, !alias.scope !344
  %3039 = getelementptr inbounds float, ptr %10, i64 %3030
  %3040 = load <8 x float>, ptr %3039, align 4, !tbaa !65, !alias.scope !347, !noalias !344
  %3041 = getelementptr inbounds float, ptr %3039, i64 8
  %3042 = load <8 x float>, ptr %3041, align 4, !tbaa !65, !alias.scope !347, !noalias !344
  %3043 = getelementptr inbounds float, ptr %3039, i64 16
  %3044 = load <8 x float>, ptr %3043, align 4, !tbaa !65, !alias.scope !347, !noalias !344
  %3045 = getelementptr inbounds float, ptr %3039, i64 24
  %3046 = load <8 x float>, ptr %3045, align 4, !tbaa !65, !alias.scope !347, !noalias !344
  %3047 = fadd fast <8 x float> %3040, %3032
  %3048 = fadd fast <8 x float> %3042, %3034
  %3049 = fadd fast <8 x float> %3044, %3036
  %3050 = fadd fast <8 x float> %3046, %3038
  store <8 x float> %3047, ptr %3039, align 4, !tbaa !65, !alias.scope !347, !noalias !344
  store <8 x float> %3048, ptr %3041, align 4, !tbaa !65, !alias.scope !347, !noalias !344
  store <8 x float> %3049, ptr %3043, align 4, !tbaa !65, !alias.scope !347, !noalias !344
  store <8 x float> %3050, ptr %3045, align 4, !tbaa !65, !alias.scope !347, !noalias !344
  %3051 = add nuw i64 %3030, 32
  %3052 = icmp eq i64 %3051, %3028
  br i1 %3052, label %3053, label %3029, !llvm.loop !349

3053:                                             ; preds = %3029
  %3054 = icmp eq i64 %3028, %2592
  br i1 %3054, label %3102, label %3055

3055:                                             ; preds = %3020, %3018, %3053
  %3056 = phi i64 [ 0, %3020 ], [ 0, %3018 ], [ %3028, %3053 ]
  %3057 = xor i64 %3056, -1
  %3058 = add nsw i64 %3057, %2592
  %3059 = and i64 %2592, 3
  %3060 = icmp eq i64 %3059, 0
  br i1 %3060, label %3072, label %3061

3061:                                             ; preds = %3055, %3061
  %3062 = phi i64 [ %3069, %3061 ], [ %3056, %3055 ]
  %3063 = phi i64 [ %3070, %3061 ], [ 0, %3055 ]
  %3064 = getelementptr inbounds float, ptr %7, i64 %3062
  %3065 = load float, ptr %3064, align 4, !tbaa !65
  %3066 = getelementptr inbounds float, ptr %10, i64 %3062
  %3067 = load float, ptr %3066, align 4, !tbaa !65
  %3068 = fadd fast float %3067, %3065
  store float %3068, ptr %3066, align 4, !tbaa !65
  %3069 = add nuw nsw i64 %3062, 1
  %3070 = add i64 %3063, 1
  %3071 = icmp eq i64 %3070, %3059
  br i1 %3071, label %3072, label %3061, !llvm.loop !350

3072:                                             ; preds = %3061, %3055
  %3073 = phi i64 [ %3056, %3055 ], [ %3069, %3061 ]
  %3074 = icmp ult i64 %3058, 3
  br i1 %3074, label %3102, label %3075

3075:                                             ; preds = %3072, %3075
  %3076 = phi i64 [ %3100, %3075 ], [ %3073, %3072 ]
  %3077 = getelementptr inbounds float, ptr %7, i64 %3076
  %3078 = load float, ptr %3077, align 4, !tbaa !65
  %3079 = getelementptr inbounds float, ptr %10, i64 %3076
  %3080 = load float, ptr %3079, align 4, !tbaa !65
  %3081 = fadd fast float %3080, %3078
  store float %3081, ptr %3079, align 4, !tbaa !65
  %3082 = add nuw nsw i64 %3076, 1
  %3083 = getelementptr inbounds float, ptr %7, i64 %3082
  %3084 = load float, ptr %3083, align 4, !tbaa !65
  %3085 = getelementptr inbounds float, ptr %10, i64 %3082
  %3086 = load float, ptr %3085, align 4, !tbaa !65
  %3087 = fadd fast float %3086, %3084
  store float %3087, ptr %3085, align 4, !tbaa !65
  %3088 = add nuw nsw i64 %3076, 2
  %3089 = getelementptr inbounds float, ptr %7, i64 %3088
  %3090 = load float, ptr %3089, align 4, !tbaa !65
  %3091 = getelementptr inbounds float, ptr %10, i64 %3088
  %3092 = load float, ptr %3091, align 4, !tbaa !65
  %3093 = fadd fast float %3092, %3090
  store float %3093, ptr %3091, align 4, !tbaa !65
  %3094 = add nuw nsw i64 %3076, 3
  %3095 = getelementptr inbounds float, ptr %7, i64 %3094
  %3096 = load float, ptr %3095, align 4, !tbaa !65
  %3097 = getelementptr inbounds float, ptr %10, i64 %3094
  %3098 = load float, ptr %3097, align 4, !tbaa !65
  %3099 = fadd fast float %3098, %3096
  store float %3099, ptr %3097, align 4, !tbaa !65
  %3100 = add nuw nsw i64 %3076, 4
  %3101 = icmp eq i64 %3100, %2592
  br i1 %3101, label %3102, label %3075, !llvm.loop !351

3102:                                             ; preds = %3072, %3075, %3053
  %3103 = icmp ult i32 %2588, 32
  br i1 %3103, label %3140, label %3104

3104:                                             ; preds = %3102
  %3105 = shl nuw nsw i64 %2592, 2
  %3106 = getelementptr i8, ptr %10, i64 %3105
  %3107 = getelementptr i8, ptr %1275, i64 %309
  %3108 = getelementptr i8, ptr %3107, i64 %3105
  %3109 = icmp ult ptr %10, %3108
  %3110 = icmp ult ptr %1278, %3106
  %3111 = and i1 %3109, %3110
  br i1 %3111, label %3140, label %3112

3112:                                             ; preds = %3104
  %3113 = and i64 %2592, 4294967264
  br label %3114

3114:                                             ; preds = %3114, %3112
  %3115 = phi i64 [ 0, %3112 ], [ %3136, %3114 ]
  %3116 = getelementptr inbounds float, ptr %1278, i64 %3115
  %3117 = load <8 x float>, ptr %3116, align 4, !tbaa !65, !alias.scope !352
  %3118 = getelementptr inbounds float, ptr %3116, i64 8
  %3119 = load <8 x float>, ptr %3118, align 4, !tbaa !65, !alias.scope !352
  %3120 = getelementptr inbounds float, ptr %3116, i64 16
  %3121 = load <8 x float>, ptr %3120, align 4, !tbaa !65, !alias.scope !352
  %3122 = getelementptr inbounds float, ptr %3116, i64 24
  %3123 = load <8 x float>, ptr %3122, align 4, !tbaa !65, !alias.scope !352
  %3124 = getelementptr inbounds float, ptr %10, i64 %3115
  %3125 = load <8 x float>, ptr %3124, align 4, !tbaa !65, !alias.scope !355, !noalias !352
  %3126 = getelementptr inbounds float, ptr %3124, i64 8
  %3127 = load <8 x float>, ptr %3126, align 4, !tbaa !65, !alias.scope !355, !noalias !352
  %3128 = getelementptr inbounds float, ptr %3124, i64 16
  %3129 = load <8 x float>, ptr %3128, align 4, !tbaa !65, !alias.scope !355, !noalias !352
  %3130 = getelementptr inbounds float, ptr %3124, i64 24
  %3131 = load <8 x float>, ptr %3130, align 4, !tbaa !65, !alias.scope !355, !noalias !352
  %3132 = fsub fast <8 x float> %3125, %3117
  %3133 = fsub fast <8 x float> %3127, %3119
  %3134 = fsub fast <8 x float> %3129, %3121
  %3135 = fsub fast <8 x float> %3131, %3123
  store <8 x float> %3132, ptr %3124, align 4, !tbaa !65, !alias.scope !355, !noalias !352
  store <8 x float> %3133, ptr %3126, align 4, !tbaa !65, !alias.scope !355, !noalias !352
  store <8 x float> %3134, ptr %3128, align 4, !tbaa !65, !alias.scope !355, !noalias !352
  store <8 x float> %3135, ptr %3130, align 4, !tbaa !65, !alias.scope !355, !noalias !352
  %3136 = add nuw i64 %3115, 32
  %3137 = icmp eq i64 %3136, %3113
  br i1 %3137, label %3138, label %3114, !llvm.loop !357

3138:                                             ; preds = %3114
  %3139 = icmp eq i64 %3113, %2592
  br i1 %3139, label %3187, label %3140

3140:                                             ; preds = %3104, %3102, %3138
  %3141 = phi i64 [ 0, %3104 ], [ 0, %3102 ], [ %3113, %3138 ]
  %3142 = xor i64 %3141, -1
  %3143 = add nsw i64 %3142, %2592
  %3144 = and i64 %2592, 3
  %3145 = icmp eq i64 %3144, 0
  br i1 %3145, label %3157, label %3146

3146:                                             ; preds = %3140, %3146
  %3147 = phi i64 [ %3154, %3146 ], [ %3141, %3140 ]
  %3148 = phi i64 [ %3155, %3146 ], [ 0, %3140 ]
  %3149 = getelementptr inbounds float, ptr %1278, i64 %3147
  %3150 = load float, ptr %3149, align 4, !tbaa !65
  %3151 = getelementptr inbounds float, ptr %10, i64 %3147
  %3152 = load float, ptr %3151, align 4, !tbaa !65
  %3153 = fsub fast float %3152, %3150
  store float %3153, ptr %3151, align 4, !tbaa !65
  %3154 = add nuw nsw i64 %3147, 1
  %3155 = add i64 %3148, 1
  %3156 = icmp eq i64 %3155, %3144
  br i1 %3156, label %3157, label %3146, !llvm.loop !358

3157:                                             ; preds = %3146, %3140
  %3158 = phi i64 [ %3141, %3140 ], [ %3154, %3146 ]
  %3159 = icmp ult i64 %3143, 3
  br i1 %3159, label %3187, label %3160

3160:                                             ; preds = %3157, %3160
  %3161 = phi i64 [ %3185, %3160 ], [ %3158, %3157 ]
  %3162 = getelementptr inbounds float, ptr %1278, i64 %3161
  %3163 = load float, ptr %3162, align 4, !tbaa !65
  %3164 = getelementptr inbounds float, ptr %10, i64 %3161
  %3165 = load float, ptr %3164, align 4, !tbaa !65
  %3166 = fsub fast float %3165, %3163
  store float %3166, ptr %3164, align 4, !tbaa !65
  %3167 = add nuw nsw i64 %3161, 1
  %3168 = getelementptr inbounds float, ptr %1278, i64 %3167
  %3169 = load float, ptr %3168, align 4, !tbaa !65
  %3170 = getelementptr inbounds float, ptr %10, i64 %3167
  %3171 = load float, ptr %3170, align 4, !tbaa !65
  %3172 = fsub fast float %3171, %3169
  store float %3172, ptr %3170, align 4, !tbaa !65
  %3173 = add nuw nsw i64 %3161, 2
  %3174 = getelementptr inbounds float, ptr %1278, i64 %3173
  %3175 = load float, ptr %3174, align 4, !tbaa !65
  %3176 = getelementptr inbounds float, ptr %10, i64 %3173
  %3177 = load float, ptr %3176, align 4, !tbaa !65
  %3178 = fsub fast float %3177, %3175
  store float %3178, ptr %3176, align 4, !tbaa !65
  %3179 = add nuw nsw i64 %3161, 3
  %3180 = getelementptr inbounds float, ptr %1278, i64 %3179
  %3181 = load float, ptr %3180, align 4, !tbaa !65
  %3182 = getelementptr inbounds float, ptr %10, i64 %3179
  %3183 = load float, ptr %3182, align 4, !tbaa !65
  %3184 = fsub fast float %3183, %3181
  store float %3184, ptr %3182, align 4, !tbaa !65
  %3185 = add nuw nsw i64 %3161, 4
  %3186 = icmp eq i64 %3185, %2592
  br i1 %3186, label %3187, label %3160, !llvm.loop !359

3187:                                             ; preds = %3157, %3160, %3138
  %3188 = icmp ult i32 %2588, 32
  br i1 %3188, label %3217, label %3189

3189:                                             ; preds = %3187
  %3190 = and i64 %2592, 4294967264
  %3191 = insertelement <8 x float> poison, float %2368, i64 0
  %3192 = shufflevector <8 x float> %3191, <8 x float> poison, <8 x i32> zeroinitializer
  %3193 = insertelement <8 x float> poison, float %2368, i64 0
  %3194 = shufflevector <8 x float> %3193, <8 x float> poison, <8 x i32> zeroinitializer
  %3195 = insertelement <8 x float> poison, float %2368, i64 0
  %3196 = shufflevector <8 x float> %3195, <8 x float> poison, <8 x i32> zeroinitializer
  %3197 = insertelement <8 x float> poison, float %2368, i64 0
  %3198 = shufflevector <8 x float> %3197, <8 x float> poison, <8 x i32> zeroinitializer
  br label %3199

3199:                                             ; preds = %3199, %3189
  %3200 = phi i64 [ 0, %3189 ], [ %3213, %3199 ]
  %3201 = getelementptr inbounds float, ptr %10, i64 %3200
  %3202 = load <8 x float>, ptr %3201, align 4, !tbaa !65
  %3203 = getelementptr inbounds float, ptr %3201, i64 8
  %3204 = load <8 x float>, ptr %3203, align 4, !tbaa !65
  %3205 = getelementptr inbounds float, ptr %3201, i64 16
  %3206 = load <8 x float>, ptr %3205, align 4, !tbaa !65
  %3207 = getelementptr inbounds float, ptr %3201, i64 24
  %3208 = load <8 x float>, ptr %3207, align 4, !tbaa !65
  %3209 = fmul fast <8 x float> %3202, %3192
  %3210 = fmul fast <8 x float> %3204, %3194
  %3211 = fmul fast <8 x float> %3206, %3196
  %3212 = fmul fast <8 x float> %3208, %3198
  store <8 x float> %3209, ptr %3201, align 4, !tbaa !65
  store <8 x float> %3210, ptr %3203, align 4, !tbaa !65
  store <8 x float> %3211, ptr %3205, align 4, !tbaa !65
  store <8 x float> %3212, ptr %3207, align 4, !tbaa !65
  %3213 = add nuw i64 %3200, 32
  %3214 = icmp eq i64 %3213, %3190
  br i1 %3214, label %3215, label %3199, !llvm.loop !360

3215:                                             ; preds = %3199
  %3216 = icmp eq i64 %3190, %2592
  br i1 %3216, label %3226, label %3217

3217:                                             ; preds = %3187, %3215
  %3218 = phi i64 [ 0, %3187 ], [ %3190, %3215 ]
  br label %3219

3219:                                             ; preds = %3217, %3219
  %3220 = phi i64 [ %3224, %3219 ], [ %3218, %3217 ]
  %3221 = getelementptr inbounds float, ptr %10, i64 %3220
  %3222 = load float, ptr %3221, align 4, !tbaa !65
  %3223 = fmul fast float %3222, %2368
  store float %3223, ptr %3221, align 4, !tbaa !65
  %3224 = add nuw nsw i64 %3220, 1
  %3225 = icmp eq i64 %3224, %2592
  br i1 %3225, label %3226, label %3219, !llvm.loop !361

3226:                                             ; preds = %3219, %3215
  %3227 = icmp ult i32 %2588, 32
  br i1 %3227, label %3264, label %3228

3228:                                             ; preds = %3226
  %3229 = getelementptr i8, ptr %1275, i64 %308
  %3230 = shl nuw nsw i64 %2592, 2
  %3231 = getelementptr i8, ptr %3229, i64 %3230
  %3232 = getelementptr i8, ptr %10, i64 %3230
  %3233 = icmp ult ptr %1278, %3232
  %3234 = icmp ult ptr %10, %3231
  %3235 = and i1 %3233, %3234
  br i1 %3235, label %3264, label %3236

3236:                                             ; preds = %3228
  %3237 = and i64 %2592, 4294967264
  br label %3238

3238:                                             ; preds = %3238, %3236
  %3239 = phi i64 [ 0, %3236 ], [ %3260, %3238 ]
  %3240 = getelementptr inbounds float, ptr %10, i64 %3239
  %3241 = load <8 x float>, ptr %3240, align 4, !tbaa !65, !alias.scope !362
  %3242 = getelementptr inbounds float, ptr %3240, i64 8
  %3243 = load <8 x float>, ptr %3242, align 4, !tbaa !65, !alias.scope !362
  %3244 = getelementptr inbounds float, ptr %3240, i64 16
  %3245 = load <8 x float>, ptr %3244, align 4, !tbaa !65, !alias.scope !362
  %3246 = getelementptr inbounds float, ptr %3240, i64 24
  %3247 = load <8 x float>, ptr %3246, align 4, !tbaa !65, !alias.scope !362
  %3248 = getelementptr inbounds float, ptr %1278, i64 %3239
  %3249 = load <8 x float>, ptr %3248, align 4, !tbaa !65, !alias.scope !365, !noalias !362
  %3250 = getelementptr inbounds float, ptr %3248, i64 8
  %3251 = load <8 x float>, ptr %3250, align 4, !tbaa !65, !alias.scope !365, !noalias !362
  %3252 = getelementptr inbounds float, ptr %3248, i64 16
  %3253 = load <8 x float>, ptr %3252, align 4, !tbaa !65, !alias.scope !365, !noalias !362
  %3254 = getelementptr inbounds float, ptr %3248, i64 24
  %3255 = load <8 x float>, ptr %3254, align 4, !tbaa !65, !alias.scope !365, !noalias !362
  %3256 = fadd fast <8 x float> %3249, %3241
  %3257 = fadd fast <8 x float> %3251, %3243
  %3258 = fadd fast <8 x float> %3253, %3245
  %3259 = fadd fast <8 x float> %3255, %3247
  store <8 x float> %3256, ptr %3248, align 4, !tbaa !65, !alias.scope !365, !noalias !362
  store <8 x float> %3257, ptr %3250, align 4, !tbaa !65, !alias.scope !365, !noalias !362
  store <8 x float> %3258, ptr %3252, align 4, !tbaa !65, !alias.scope !365, !noalias !362
  store <8 x float> %3259, ptr %3254, align 4, !tbaa !65, !alias.scope !365, !noalias !362
  %3260 = add nuw i64 %3239, 32
  %3261 = icmp eq i64 %3260, %3237
  br i1 %3261, label %3262, label %3238, !llvm.loop !367

3262:                                             ; preds = %3238
  %3263 = icmp eq i64 %3237, %2592
  br i1 %3263, label %3311, label %3264

3264:                                             ; preds = %3228, %3226, %3262
  %3265 = phi i64 [ 0, %3228 ], [ 0, %3226 ], [ %3237, %3262 ]
  %3266 = xor i64 %3265, -1
  %3267 = add nsw i64 %3266, %2592
  %3268 = and i64 %2592, 3
  %3269 = icmp eq i64 %3268, 0
  br i1 %3269, label %3281, label %3270

3270:                                             ; preds = %3264, %3270
  %3271 = phi i64 [ %3278, %3270 ], [ %3265, %3264 ]
  %3272 = phi i64 [ %3279, %3270 ], [ 0, %3264 ]
  %3273 = getelementptr inbounds float, ptr %10, i64 %3271
  %3274 = load float, ptr %3273, align 4, !tbaa !65
  %3275 = getelementptr inbounds float, ptr %1278, i64 %3271
  %3276 = load float, ptr %3275, align 4, !tbaa !65
  %3277 = fadd fast float %3276, %3274
  store float %3277, ptr %3275, align 4, !tbaa !65
  %3278 = add nuw nsw i64 %3271, 1
  %3279 = add i64 %3272, 1
  %3280 = icmp eq i64 %3279, %3268
  br i1 %3280, label %3281, label %3270, !llvm.loop !368

3281:                                             ; preds = %3270, %3264
  %3282 = phi i64 [ %3265, %3264 ], [ %3278, %3270 ]
  %3283 = icmp ult i64 %3267, 3
  br i1 %3283, label %3311, label %3284

3284:                                             ; preds = %3281, %3284
  %3285 = phi i64 [ %3309, %3284 ], [ %3282, %3281 ]
  %3286 = getelementptr inbounds float, ptr %10, i64 %3285
  %3287 = load float, ptr %3286, align 4, !tbaa !65
  %3288 = getelementptr inbounds float, ptr %1278, i64 %3285
  %3289 = load float, ptr %3288, align 4, !tbaa !65
  %3290 = fadd fast float %3289, %3287
  store float %3290, ptr %3288, align 4, !tbaa !65
  %3291 = add nuw nsw i64 %3285, 1
  %3292 = getelementptr inbounds float, ptr %10, i64 %3291
  %3293 = load float, ptr %3292, align 4, !tbaa !65
  %3294 = getelementptr inbounds float, ptr %1278, i64 %3291
  %3295 = load float, ptr %3294, align 4, !tbaa !65
  %3296 = fadd fast float %3295, %3293
  store float %3296, ptr %3294, align 4, !tbaa !65
  %3297 = add nuw nsw i64 %3285, 2
  %3298 = getelementptr inbounds float, ptr %10, i64 %3297
  %3299 = load float, ptr %3298, align 4, !tbaa !65
  %3300 = getelementptr inbounds float, ptr %1278, i64 %3297
  %3301 = load float, ptr %3300, align 4, !tbaa !65
  %3302 = fadd fast float %3301, %3299
  store float %3302, ptr %3300, align 4, !tbaa !65
  %3303 = add nuw nsw i64 %3285, 3
  %3304 = getelementptr inbounds float, ptr %10, i64 %3303
  %3305 = load float, ptr %3304, align 4, !tbaa !65
  %3306 = getelementptr inbounds float, ptr %1278, i64 %3303
  %3307 = load float, ptr %3306, align 4, !tbaa !65
  %3308 = fadd fast float %3307, %3305
  store float %3308, ptr %3306, align 4, !tbaa !65
  %3309 = add nuw nsw i64 %3285, 4
  %3310 = icmp eq i64 %3309, %2592
  br i1 %3310, label %3311, label %3284, !llvm.loop !369

3311:                                             ; preds = %3281, %3284, %3262, %2587, %2359
  %3312 = add nuw nsw i64 %1273, 1
  %3313 = icmp eq i64 %3312, %307
  br i1 %3313, label %3314, label %1272, !llvm.loop !370

3314:                                             ; preds = %3311, %300
  %3315 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 18
  %3316 = load i32, ptr %3315, align 4, !tbaa !67
  %3317 = icmp eq i32 %3316, 0
  br i1 %3317, label %3478, label %3318

3318:                                             ; preds = %3314
  br i1 %302, label %3319, label %3344

3319:                                             ; preds = %3318
  %3320 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 17
  %3321 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 19
  %3322 = zext i32 %132 to i64
  %3323 = and i64 %3322, 1
  %3324 = icmp eq i32 %132, 1
  br i1 %3324, label %3327, label %3325

3325:                                             ; preds = %3319
  %3326 = and i64 %3322, 4294967294
  br label %3354

3327:                                             ; preds = %3354, %3319
  %3328 = phi i64 [ 0, %3319 ], [ %3384, %3354 ]
  %3329 = icmp eq i64 %3323, 0
  br i1 %3329, label %3344, label %3330

3330:                                             ; preds = %3327
  %3331 = getelementptr inbounds ptr, ptr %18, i64 %3328
  %3332 = load ptr, ptr %3331, align 8, !tbaa !14
  %3333 = getelementptr inbounds %struct.CCGVert, ptr %3332, i64 1
  %3334 = load i32, ptr %4, align 8, !tbaa !37
  %3335 = load i32, ptr %2, align 8, !tbaa !32
  %3336 = add nsw i32 %3335, 1
  %3337 = mul nsw i32 %3336, %3334
  %3338 = sext i32 %3337 to i64
  %3339 = getelementptr inbounds i8, ptr %3333, i64 %3338
  %3340 = load i32, ptr %3320, align 8, !tbaa !40
  %3341 = load i32, ptr %3321, align 8, !tbaa !68
  %3342 = sext i32 %3341 to i64
  %3343 = getelementptr inbounds i8, ptr %3339, i64 %3342
  store i32 %3340, ptr %3343, align 4, !tbaa !31
  br label %3344

3344:                                             ; preds = %3330, %3327, %3318
  %3345 = phi i1 [ false, %3318 ], [ %302, %3327 ], [ %302, %3330 ]
  br i1 %301, label %3346, label %3406

3346:                                             ; preds = %3344
  %3347 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 17
  %3348 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 20
  %3349 = zext i32 %131 to i64
  %3350 = and i64 %3349, 1
  %3351 = icmp eq i32 %131, 1
  br i1 %3351, label %3387, label %3352

3352:                                             ; preds = %3346
  %3353 = and i64 %3349, 4294967294
  br label %3412

3354:                                             ; preds = %3354, %3325
  %3355 = phi i64 [ 0, %3325 ], [ %3384, %3354 ]
  %3356 = phi i64 [ 0, %3325 ], [ %3385, %3354 ]
  %3357 = getelementptr inbounds ptr, ptr %18, i64 %3355
  %3358 = load ptr, ptr %3357, align 8, !tbaa !14
  %3359 = getelementptr inbounds %struct.CCGVert, ptr %3358, i64 1
  %3360 = load i32, ptr %4, align 8, !tbaa !37
  %3361 = load i32, ptr %2, align 8, !tbaa !32
  %3362 = add nsw i32 %3361, 1
  %3363 = mul nsw i32 %3362, %3360
  %3364 = sext i32 %3363 to i64
  %3365 = getelementptr inbounds i8, ptr %3359, i64 %3364
  %3366 = load i32, ptr %3320, align 8, !tbaa !40
  %3367 = load i32, ptr %3321, align 8, !tbaa !68
  %3368 = sext i32 %3367 to i64
  %3369 = getelementptr inbounds i8, ptr %3365, i64 %3368
  store i32 %3366, ptr %3369, align 4, !tbaa !31
  %3370 = or i64 %3355, 1
  %3371 = getelementptr inbounds ptr, ptr %18, i64 %3370
  %3372 = load ptr, ptr %3371, align 8, !tbaa !14
  %3373 = getelementptr inbounds %struct.CCGVert, ptr %3372, i64 1
  %3374 = load i32, ptr %4, align 8, !tbaa !37
  %3375 = load i32, ptr %2, align 8, !tbaa !32
  %3376 = add nsw i32 %3375, 1
  %3377 = mul nsw i32 %3376, %3374
  %3378 = sext i32 %3377 to i64
  %3379 = getelementptr inbounds i8, ptr %3373, i64 %3378
  %3380 = load i32, ptr %3320, align 8, !tbaa !40
  %3381 = load i32, ptr %3321, align 8, !tbaa !68
  %3382 = sext i32 %3381 to i64
  %3383 = getelementptr inbounds i8, ptr %3379, i64 %3382
  store i32 %3380, ptr %3383, align 4, !tbaa !31
  %3384 = add nuw nsw i64 %3355, 2
  %3385 = add i64 %3356, 2
  %3386 = icmp eq i64 %3385, %3326
  br i1 %3386, label %3327, label %3354, !llvm.loop !371

3387:                                             ; preds = %3412, %3346
  %3388 = phi i64 [ 0, %3346 ], [ %3446, %3412 ]
  %3389 = icmp eq i64 %3350, 0
  br i1 %3389, label %3406, label %3390

3390:                                             ; preds = %3387
  %3391 = getelementptr inbounds ptr, ptr %26, i64 %3388
  %3392 = load ptr, ptr %3391, align 8, !tbaa !14
  %3393 = getelementptr inbounds %struct.CCGEdge, ptr %3392, i64 1
  %3394 = load i32, ptr %4, align 8, !tbaa !37
  %3395 = load i32, ptr %2, align 8, !tbaa !32
  %3396 = add nsw i32 %3395, 1
  %3397 = shl nuw i32 1, %3396
  %3398 = add i32 %3397, %3395
  %3399 = mul nsw i32 %3398, %3394
  %3400 = sext i32 %3399 to i64
  %3401 = getelementptr inbounds i8, ptr %3393, i64 %3400
  %3402 = load i32, ptr %3347, align 8, !tbaa !40
  %3403 = load i32, ptr %3348, align 4, !tbaa !69
  %3404 = sext i32 %3403 to i64
  %3405 = getelementptr inbounds i8, ptr %3401, i64 %3404
  store i32 %3402, ptr %3405, align 4, !tbaa !31
  br label %3406

3406:                                             ; preds = %3390, %3387, %3344
  %3407 = phi i1 [ false, %3344 ], [ %301, %3387 ], [ %301, %3390 ]
  br i1 %139, label %3408, label %3478

3408:                                             ; preds = %3406
  %3409 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 17
  %3410 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 21
  %3411 = zext i32 %130 to i64
  br label %3449

3412:                                             ; preds = %3412, %3352
  %3413 = phi i64 [ 0, %3352 ], [ %3446, %3412 ]
  %3414 = phi i64 [ 0, %3352 ], [ %3447, %3412 ]
  %3415 = getelementptr inbounds ptr, ptr %26, i64 %3413
  %3416 = load ptr, ptr %3415, align 8, !tbaa !14
  %3417 = getelementptr inbounds %struct.CCGEdge, ptr %3416, i64 1
  %3418 = load i32, ptr %4, align 8, !tbaa !37
  %3419 = load i32, ptr %2, align 8, !tbaa !32
  %3420 = add nsw i32 %3419, 1
  %3421 = shl nuw i32 1, %3420
  %3422 = add i32 %3421, %3419
  %3423 = mul nsw i32 %3422, %3418
  %3424 = sext i32 %3423 to i64
  %3425 = getelementptr inbounds i8, ptr %3417, i64 %3424
  %3426 = load i32, ptr %3347, align 8, !tbaa !40
  %3427 = load i32, ptr %3348, align 4, !tbaa !69
  %3428 = sext i32 %3427 to i64
  %3429 = getelementptr inbounds i8, ptr %3425, i64 %3428
  store i32 %3426, ptr %3429, align 4, !tbaa !31
  %3430 = or i64 %3413, 1
  %3431 = getelementptr inbounds ptr, ptr %26, i64 %3430
  %3432 = load ptr, ptr %3431, align 8, !tbaa !14
  %3433 = getelementptr inbounds %struct.CCGEdge, ptr %3432, i64 1
  %3434 = load i32, ptr %4, align 8, !tbaa !37
  %3435 = load i32, ptr %2, align 8, !tbaa !32
  %3436 = add nsw i32 %3435, 1
  %3437 = shl nuw i32 1, %3436
  %3438 = add i32 %3437, %3435
  %3439 = mul nsw i32 %3438, %3434
  %3440 = sext i32 %3439 to i64
  %3441 = getelementptr inbounds i8, ptr %3433, i64 %3440
  %3442 = load i32, ptr %3347, align 8, !tbaa !40
  %3443 = load i32, ptr %3348, align 4, !tbaa !69
  %3444 = sext i32 %3443 to i64
  %3445 = getelementptr inbounds i8, ptr %3441, i64 %3444
  store i32 %3442, ptr %3445, align 4, !tbaa !31
  %3446 = add nuw nsw i64 %3413, 2
  %3447 = add i64 %3414, 2
  %3448 = icmp eq i64 %3447, %3353
  br i1 %3448, label %3387, label %3412, !llvm.loop !372

3449:                                             ; preds = %3408, %3449
  %3450 = phi i64 [ 0, %3408 ], [ %3476, %3449 ]
  %3451 = getelementptr inbounds ptr, ptr %34, i64 %3450
  %3452 = load ptr, ptr %3451, align 8, !tbaa !14
  %3453 = load i32, ptr %2, align 8, !tbaa !32
  %3454 = add nsw i32 %3453, -1
  %3455 = shl nuw i32 1, %3454
  %3456 = add nuw nsw i32 %3455, 1
  %3457 = getelementptr inbounds %struct.CCGFace, ptr %3452, i64 1
  %3458 = getelementptr inbounds %struct.CCGFace, ptr %3452, i64 0, i32 2
  %3459 = load i16, ptr %3458, align 8, !tbaa !89
  %3460 = sext i16 %3459 to i64
  %3461 = getelementptr inbounds ptr, ptr %3457, i64 %3460
  %3462 = getelementptr inbounds ptr, ptr %3461, i64 %3460
  %3463 = load i32, ptr %4, align 8, !tbaa !37
  %3464 = sext i16 %3459 to i32
  %3465 = mul nsw i32 %3456, %3464
  %3466 = add nsw i32 %3465, 1
  %3467 = mul nsw i32 %3465, %3456
  %3468 = add nsw i32 %3466, %3467
  %3469 = mul nsw i32 %3468, %3463
  %3470 = sext i32 %3469 to i64
  %3471 = getelementptr inbounds i8, ptr %3462, i64 %3470
  %3472 = load i32, ptr %3409, align 8, !tbaa !40
  %3473 = load i32, ptr %3410, align 8, !tbaa !70
  %3474 = sext i32 %3473 to i64
  %3475 = getelementptr inbounds i8, ptr %3471, i64 %3474
  store i32 %3472, ptr %3475, align 4, !tbaa !31
  %3476 = add nuw nsw i64 %3450, 1
  %3477 = icmp eq i64 %3476, %3411
  br i1 %3477, label %3478, label %3449, !llvm.loop !373

3478:                                             ; preds = %3449, %3406, %3314
  %3479 = phi i1 [ %3407, %3406 ], [ %301, %3314 ], [ %3407, %3449 ]
  %3480 = phi i1 [ false, %3406 ], [ %139, %3314 ], [ %139, %3449 ]
  %3481 = phi i1 [ %3345, %3406 ], [ %302, %3314 ], [ %3345, %3449 ]
  br i1 %3479, label %3482, label %3644

3482:                                             ; preds = %3478
  %3483 = shl nsw i32 %5, 1
  %3484 = sext i32 %3483 to i64
  %3485 = sext i32 %5 to i64
  %3486 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 3
  %3487 = load i32, ptr %3486, align 4, !tbaa !74
  %3488 = icmp sgt i32 %3487, 0
  %3489 = zext i32 %3487 to i64
  %3490 = shl nsw i32 %5, 2
  %3491 = sext i32 %3490 to i64
  br i1 %3488, label %3492, label %3644

3492:                                             ; preds = %3482
  %3493 = zext i32 %131 to i64
  %3494 = add nsw i64 %3491, 48
  %3495 = add nsw i64 %3485, 40
  %3496 = add nsw i64 %3484, 48
  %3497 = add nsw i64 %3485, 40
  %3498 = icmp ult i32 %3487, 32
  %3499 = and i64 %3489, 4294967264
  %3500 = icmp eq i64 %3499, %3489
  %3501 = and i64 %3489, 3
  %3502 = icmp eq i64 %3501, 0
  %3503 = icmp ult i32 %3487, 32
  %3504 = and i64 %3489, 4294967264
  %3505 = icmp eq i64 %3504, %3489
  %3506 = and i64 %3489, 3
  %3507 = icmp eq i64 %3506, 0
  br label %3508

3508:                                             ; preds = %3492, %3641
  %3509 = phi i64 [ 0, %3492 ], [ %3642, %3641 ]
  %3510 = getelementptr inbounds ptr, ptr %26, i64 %3509
  %3511 = load ptr, ptr %3510, align 8, !tbaa !14
  %3512 = ptrtoint ptr %3511 to i64
  %3513 = getelementptr inbounds %struct.CCGEdge, ptr %3511, i64 1
  %3514 = getelementptr inbounds i8, ptr %3513, i64 %3484
  %3515 = getelementptr inbounds %struct.CCGEdge, ptr %3511, i64 0, i32 5
  %3516 = load ptr, ptr %3515, align 8, !tbaa !83
  %3517 = getelementptr inbounds %struct.CCGVert, ptr %3516, i64 1
  %3518 = getelementptr inbounds i8, ptr %3517, i64 %3485
  br i1 %3498, label %3542, label %3519

3519:                                             ; preds = %3508
  %3520 = ptrtoint ptr %3516 to i64
  %3521 = add i64 %3496, %3512
  %3522 = add i64 %3497, %3520
  %3523 = sub i64 %3521, %3522
  %3524 = icmp ult i64 %3523, 128
  br i1 %3524, label %3542, label %3525

3525:                                             ; preds = %3519, %3525
  %3526 = phi i64 [ %3539, %3525 ], [ 0, %3519 ]
  %3527 = getelementptr inbounds float, ptr %3518, i64 %3526
  %3528 = load <8 x float>, ptr %3527, align 4, !tbaa !65
  %3529 = getelementptr inbounds float, ptr %3527, i64 8
  %3530 = load <8 x float>, ptr %3529, align 4, !tbaa !65
  %3531 = getelementptr inbounds float, ptr %3527, i64 16
  %3532 = load <8 x float>, ptr %3531, align 4, !tbaa !65
  %3533 = getelementptr inbounds float, ptr %3527, i64 24
  %3534 = load <8 x float>, ptr %3533, align 4, !tbaa !65
  %3535 = getelementptr inbounds float, ptr %3514, i64 %3526
  store <8 x float> %3528, ptr %3535, align 4, !tbaa !65
  %3536 = getelementptr inbounds float, ptr %3535, i64 8
  store <8 x float> %3530, ptr %3536, align 4, !tbaa !65
  %3537 = getelementptr inbounds float, ptr %3535, i64 16
  store <8 x float> %3532, ptr %3537, align 4, !tbaa !65
  %3538 = getelementptr inbounds float, ptr %3535, i64 24
  store <8 x float> %3534, ptr %3538, align 4, !tbaa !65
  %3539 = add nuw i64 %3526, 32
  %3540 = icmp eq i64 %3539, %3499
  br i1 %3540, label %3541, label %3525, !llvm.loop !374

3541:                                             ; preds = %3525
  br i1 %3500, label %3577, label %3542

3542:                                             ; preds = %3519, %3508, %3541
  %3543 = phi i64 [ 0, %3519 ], [ 0, %3508 ], [ %3499, %3541 ]
  %3544 = xor i64 %3543, -1
  %3545 = add nsw i64 %3544, %3489
  br i1 %3502, label %3555, label %3546

3546:                                             ; preds = %3542, %3546
  %3547 = phi i64 [ %3552, %3546 ], [ %3543, %3542 ]
  %3548 = phi i64 [ %3553, %3546 ], [ 0, %3542 ]
  %3549 = getelementptr inbounds float, ptr %3518, i64 %3547
  %3550 = load float, ptr %3549, align 4, !tbaa !65
  %3551 = getelementptr inbounds float, ptr %3514, i64 %3547
  store float %3550, ptr %3551, align 4, !tbaa !65
  %3552 = add nuw nsw i64 %3547, 1
  %3553 = add i64 %3548, 1
  %3554 = icmp eq i64 %3553, %3501
  br i1 %3554, label %3555, label %3546, !llvm.loop !375

3555:                                             ; preds = %3546, %3542
  %3556 = phi i64 [ %3543, %3542 ], [ %3552, %3546 ]
  %3557 = icmp ult i64 %3545, 3
  br i1 %3557, label %3577, label %3558

3558:                                             ; preds = %3555, %3558
  %3559 = phi i64 [ %3575, %3558 ], [ %3556, %3555 ]
  %3560 = getelementptr inbounds float, ptr %3518, i64 %3559
  %3561 = load float, ptr %3560, align 4, !tbaa !65
  %3562 = getelementptr inbounds float, ptr %3514, i64 %3559
  store float %3561, ptr %3562, align 4, !tbaa !65
  %3563 = add nuw nsw i64 %3559, 1
  %3564 = getelementptr inbounds float, ptr %3518, i64 %3563
  %3565 = load float, ptr %3564, align 4, !tbaa !65
  %3566 = getelementptr inbounds float, ptr %3514, i64 %3563
  store float %3565, ptr %3566, align 4, !tbaa !65
  %3567 = add nuw nsw i64 %3559, 2
  %3568 = getelementptr inbounds float, ptr %3518, i64 %3567
  %3569 = load float, ptr %3568, align 4, !tbaa !65
  %3570 = getelementptr inbounds float, ptr %3514, i64 %3567
  store float %3569, ptr %3570, align 4, !tbaa !65
  %3571 = add nuw nsw i64 %3559, 3
  %3572 = getelementptr inbounds float, ptr %3518, i64 %3571
  %3573 = load float, ptr %3572, align 4, !tbaa !65
  %3574 = getelementptr inbounds float, ptr %3514, i64 %3571
  store float %3573, ptr %3574, align 4, !tbaa !65
  %3575 = add nuw nsw i64 %3559, 4
  %3576 = icmp eq i64 %3575, %3489
  br i1 %3576, label %3577, label %3558, !llvm.loop !376

3577:                                             ; preds = %3555, %3558, %3541
  %3578 = getelementptr inbounds i8, ptr %3513, i64 %3491
  %3579 = getelementptr inbounds %struct.CCGEdge, ptr %3511, i64 0, i32 6
  %3580 = load ptr, ptr %3579, align 8, !tbaa !85
  %3581 = getelementptr inbounds %struct.CCGVert, ptr %3580, i64 1
  %3582 = getelementptr inbounds i8, ptr %3581, i64 %3485
  br i1 %3503, label %3606, label %3583

3583:                                             ; preds = %3577
  %3584 = ptrtoint ptr %3580 to i64
  %3585 = add i64 %3494, %3512
  %3586 = add i64 %3495, %3584
  %3587 = sub i64 %3585, %3586
  %3588 = icmp ult i64 %3587, 128
  br i1 %3588, label %3606, label %3589

3589:                                             ; preds = %3583, %3589
  %3590 = phi i64 [ %3603, %3589 ], [ 0, %3583 ]
  %3591 = getelementptr inbounds float, ptr %3582, i64 %3590
  %3592 = load <8 x float>, ptr %3591, align 4, !tbaa !65
  %3593 = getelementptr inbounds float, ptr %3591, i64 8
  %3594 = load <8 x float>, ptr %3593, align 4, !tbaa !65
  %3595 = getelementptr inbounds float, ptr %3591, i64 16
  %3596 = load <8 x float>, ptr %3595, align 4, !tbaa !65
  %3597 = getelementptr inbounds float, ptr %3591, i64 24
  %3598 = load <8 x float>, ptr %3597, align 4, !tbaa !65
  %3599 = getelementptr inbounds float, ptr %3578, i64 %3590
  store <8 x float> %3592, ptr %3599, align 4, !tbaa !65
  %3600 = getelementptr inbounds float, ptr %3599, i64 8
  store <8 x float> %3594, ptr %3600, align 4, !tbaa !65
  %3601 = getelementptr inbounds float, ptr %3599, i64 16
  store <8 x float> %3596, ptr %3601, align 4, !tbaa !65
  %3602 = getelementptr inbounds float, ptr %3599, i64 24
  store <8 x float> %3598, ptr %3602, align 4, !tbaa !65
  %3603 = add nuw i64 %3590, 32
  %3604 = icmp eq i64 %3603, %3504
  br i1 %3604, label %3605, label %3589, !llvm.loop !377

3605:                                             ; preds = %3589
  br i1 %3505, label %3641, label %3606

3606:                                             ; preds = %3583, %3577, %3605
  %3607 = phi i64 [ 0, %3583 ], [ 0, %3577 ], [ %3504, %3605 ]
  %3608 = xor i64 %3607, -1
  %3609 = add nsw i64 %3608, %3489
  br i1 %3507, label %3619, label %3610

3610:                                             ; preds = %3606, %3610
  %3611 = phi i64 [ %3616, %3610 ], [ %3607, %3606 ]
  %3612 = phi i64 [ %3617, %3610 ], [ 0, %3606 ]
  %3613 = getelementptr inbounds float, ptr %3582, i64 %3611
  %3614 = load float, ptr %3613, align 4, !tbaa !65
  %3615 = getelementptr inbounds float, ptr %3578, i64 %3611
  store float %3614, ptr %3615, align 4, !tbaa !65
  %3616 = add nuw nsw i64 %3611, 1
  %3617 = add i64 %3612, 1
  %3618 = icmp eq i64 %3617, %3506
  br i1 %3618, label %3619, label %3610, !llvm.loop !378

3619:                                             ; preds = %3610, %3606
  %3620 = phi i64 [ %3607, %3606 ], [ %3616, %3610 ]
  %3621 = icmp ult i64 %3609, 3
  br i1 %3621, label %3641, label %3622

3622:                                             ; preds = %3619, %3622
  %3623 = phi i64 [ %3639, %3622 ], [ %3620, %3619 ]
  %3624 = getelementptr inbounds float, ptr %3582, i64 %3623
  %3625 = load float, ptr %3624, align 4, !tbaa !65
  %3626 = getelementptr inbounds float, ptr %3578, i64 %3623
  store float %3625, ptr %3626, align 4, !tbaa !65
  %3627 = add nuw nsw i64 %3623, 1
  %3628 = getelementptr inbounds float, ptr %3582, i64 %3627
  %3629 = load float, ptr %3628, align 4, !tbaa !65
  %3630 = getelementptr inbounds float, ptr %3578, i64 %3627
  store float %3629, ptr %3630, align 4, !tbaa !65
  %3631 = add nuw nsw i64 %3623, 2
  %3632 = getelementptr inbounds float, ptr %3582, i64 %3631
  %3633 = load float, ptr %3632, align 4, !tbaa !65
  %3634 = getelementptr inbounds float, ptr %3578, i64 %3631
  store float %3633, ptr %3634, align 4, !tbaa !65
  %3635 = add nuw nsw i64 %3623, 3
  %3636 = getelementptr inbounds float, ptr %3582, i64 %3635
  %3637 = load float, ptr %3636, align 4, !tbaa !65
  %3638 = getelementptr inbounds float, ptr %3578, i64 %3635
  store float %3637, ptr %3638, align 4, !tbaa !65
  %3639 = add nuw nsw i64 %3623, 4
  %3640 = icmp eq i64 %3639, %3489
  br i1 %3640, label %3641, label %3622, !llvm.loop !379

3641:                                             ; preds = %3619, %3622, %3605
  %3642 = add nuw nsw i64 %3509, 1
  %3643 = icmp eq i64 %3642, %3493
  br i1 %3643, label %3644, label %3508, !llvm.loop !380

3644:                                             ; preds = %3641, %3482, %3478
  %3645 = phi i1 [ false, %3478 ], [ true, %3482 ], [ %3479, %3641 ]
  br i1 %3480, label %3646, label %3687

3646:                                             ; preds = %3644
  %3647 = add nsw i32 %3, -1
  %3648 = shl nuw i32 1, %3647
  %3649 = add nuw i32 %3648, 1
  %3650 = add nuw i32 %3648, 2
  %3651 = mul i32 %3649, %3650
  %3652 = mul nsw i32 %3649, %5
  %3653 = sext i32 %3652 to i64
  %3654 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 3
  %3655 = shl i32 %3650, %3647
  %3656 = add nsw i32 %3655, %3649
  %3657 = mul nsw i32 %3656, %5
  %3658 = sext i32 %3657 to i64
  %3659 = sext i32 %5 to i64
  %3660 = shl i32 %5, %3647
  %3661 = sext i32 %3660 to i64
  %3662 = mul nsw i32 %5, 3
  %3663 = sext i32 %3662 to i64
  %3664 = add nsw i32 %3649, %3648
  %3665 = mul nsw i32 %3664, %5
  %3666 = sext i32 %3665 to i64
  %3667 = shl i32 %3649, %3647
  %3668 = add nsw i32 %3667, %3649
  %3669 = mul nsw i32 %3668, %5
  %3670 = sext i32 %3669 to i64
  %3671 = zext i32 %130 to i64
  %3672 = add nsw i64 %3670, 24
  %3673 = mul i32 %5, %3650
  %3674 = mul i32 %3673, %3649
  %3675 = add nsw i64 %3663, 48
  %3676 = add nsw i64 %3666, 24
  %3677 = add nsw i64 %3663, 48
  %3678 = add nsw i64 %3661, 24
  %3679 = mul i32 %5, %3650
  %3680 = mul i32 %3679, %3649
  %3681 = add nsw i64 %3663, 48
  %3682 = add nsw i64 %3658, 24
  %3683 = add nsw i64 %3659, 40
  %3684 = mul i32 %5, %3650
  %3685 = mul i32 %3684, %3649
  %3686 = add nsw i64 %3653, 24
  br label %3694

3687:                                             ; preds = %4162, %1, %3644
  %3688 = phi i1 [ %3645, %3644 ], [ false, %1 ], [ %3645, %4162 ]
  %3689 = phi i32 [ %130, %3644 ], [ 0, %1 ], [ %130, %4162 ]
  %3690 = phi i32 [ %131, %3644 ], [ 0, %1 ], [ %131, %4162 ]
  %3691 = phi i32 [ %132, %3644 ], [ 0, %1 ], [ %132, %4162 ]
  %3692 = phi i1 [ %3481, %3644 ], [ false, %1 ], [ %3481, %4162 ]
  %3693 = icmp sgt i32 %3, 1
  br i1 %3693, label %4165, label %4169

3694:                                             ; preds = %3646, %4162
  %3695 = phi i64 [ 0, %3646 ], [ %4163, %4162 ]
  %3696 = getelementptr inbounds ptr, ptr %34, i64 %3695
  %3697 = load ptr, ptr %3696, align 8, !tbaa !14
  %3698 = ptrtoint ptr %3697 to i64
  %3699 = getelementptr inbounds %struct.CCGFace, ptr %3697, i64 0, i32 2
  %3700 = load i16, ptr %3699, align 8, !tbaa !89
  %3701 = sext i16 %3700 to i32
  %3702 = icmp sgt i16 %3700, 0
  br i1 %3702, label %3703, label %4162

3703:                                             ; preds = %3694
  %3704 = getelementptr inbounds %struct.CCGFace, ptr %3697, i64 1
  %3705 = zext i16 %3700 to i64
  %3706 = getelementptr inbounds ptr, ptr %3704, i64 %3705
  %3707 = getelementptr ptr, ptr %3706, i64 %3705
  %3708 = load i32, ptr %3654, align 4, !tbaa !74
  %3709 = icmp sgt i32 %3708, 0
  %3710 = zext i32 %3708 to i64
  br i1 %3709, label %3711, label %4162

3711:                                             ; preds = %3703
  %3712 = zext i32 %3701 to i64
  %3713 = add i64 %3672, %3698
  %3714 = shl nuw nsw i64 %3705, 4
  %3715 = add i64 %3713, %3714
  %3716 = add i64 %3676, %3698
  %3717 = shl nuw nsw i64 %3705, 4
  %3718 = add i64 %3716, %3717
  %3719 = add i64 %3678, %3698
  %3720 = shl nuw nsw i64 %3705, 4
  %3721 = add i64 %3719, %3720
  %3722 = add i64 %3682, %3698
  %3723 = shl nuw nsw i64 %3705, 4
  %3724 = add i64 %3722, %3723
  %3725 = add i64 %3698, 24
  %3726 = add i64 %3686, %3698
  %3727 = shl nuw nsw i64 %3705, 4
  %3728 = add i64 %3726, %3727
  %3729 = add i64 %3725, %3727
  %3730 = icmp ult i32 %3708, 32
  %3731 = and i64 %3710, 4294967264
  %3732 = icmp eq i64 %3731, %3710
  %3733 = and i64 %3710, 3
  %3734 = icmp eq i64 %3733, 0
  %3735 = icmp ult i32 %3708, 32
  %3736 = and i64 %3710, 4294967264
  %3737 = icmp eq i64 %3736, %3710
  %3738 = and i64 %3710, 3
  %3739 = icmp eq i64 %3738, 0
  %3740 = icmp ult i32 %3708, 32
  %3741 = and i64 %3710, 4294967264
  %3742 = icmp eq i64 %3741, %3710
  %3743 = and i64 %3710, 3
  %3744 = icmp eq i64 %3743, 0
  %3745 = icmp ult i32 %3708, 32
  %3746 = and i64 %3710, 4294967264
  %3747 = icmp eq i64 %3746, %3710
  %3748 = and i64 %3710, 3
  %3749 = icmp eq i64 %3748, 0
  %3750 = icmp ult i32 %3708, 32
  %3751 = and i64 %3710, 4294967264
  %3752 = icmp eq i64 %3751, %3710
  %3753 = and i64 %3710, 3
  %3754 = icmp eq i64 %3753, 0
  %3755 = icmp ult i32 %3708, 32
  %3756 = and i64 %3710, 4294967264
  %3757 = icmp eq i64 %3756, %3710
  %3758 = and i64 %3710, 3
  %3759 = icmp eq i64 %3758, 0
  br label %3760

3760:                                             ; preds = %3711, %4115
  %3761 = phi i64 [ 0, %3711 ], [ %4116, %4115 ]
  %3762 = trunc i64 %3761 to i32
  %3763 = mul i32 %3685, %3762
  %3764 = add i32 %3763, %5
  %3765 = trunc i64 %3761 to i32
  %3766 = mul i32 %3680, %3765
  %3767 = add i32 %3766, %5
  %3768 = sext i32 %3767 to i64
  %3769 = add i64 %3724, %3768
  %3770 = trunc i64 %3761 to i32
  %3771 = mul i32 %3680, %3770
  %3772 = add i32 %3771, %5
  %3773 = sext i32 %3772 to i64
  %3774 = add i64 %3721, %3773
  %3775 = trunc i64 %3761 to i32
  %3776 = mul i32 %3674, %3775
  %3777 = add i32 %3776, %5
  %3778 = sext i32 %3777 to i64
  %3779 = add i64 %3718, %3778
  %3780 = trunc i64 %3761 to i32
  %3781 = mul i32 %3674, %3780
  %3782 = add i32 %3781, %5
  %3783 = sext i32 %3782 to i64
  %3784 = add i64 %3715, %3783
  %3785 = getelementptr inbounds ptr, ptr %3706, i64 %3761
  %3786 = load ptr, ptr %3785, align 8, !tbaa !14
  %3787 = ptrtoint ptr %3786 to i64
  %3788 = trunc i64 %3761 to i32
  %3789 = add i32 %3788, -1
  %3790 = add i32 %3789, %3701
  %3791 = srem i32 %3790, %3701
  %3792 = sext i32 %3791 to i64
  %3793 = getelementptr inbounds ptr, ptr %3706, i64 %3792
  %3794 = load ptr, ptr %3793, align 8, !tbaa !14
  %3795 = ptrtoint ptr %3794 to i64
  %3796 = trunc i64 %3761 to i32
  %3797 = mul i32 %3651, %3796
  %3798 = add nsw i32 %3797, 1
  %3799 = mul nsw i32 %3798, %5
  %3800 = sext i32 %3799 to i64
  %3801 = getelementptr inbounds i8, ptr %3707, i64 %3800
  %3802 = getelementptr inbounds i8, ptr %3801, i64 %3653
  br i1 %3730, label %3828, label %3803

3803:                                             ; preds = %3760
  %3804 = trunc i64 %3761 to i32
  %3805 = mul i32 %3685, %3804
  %3806 = add i32 %3805, %5
  %3807 = sext i32 %3806 to i64
  %3808 = add i64 %3728, %3807
  %3809 = sub i64 %3808, %3729
  %3810 = icmp ult i64 %3809, 128
  br i1 %3810, label %3828, label %3811

3811:                                             ; preds = %3803, %3811
  %3812 = phi i64 [ %3825, %3811 ], [ 0, %3803 ]
  %3813 = getelementptr inbounds float, ptr %3707, i64 %3812
  %3814 = load <8 x float>, ptr %3813, align 4, !tbaa !65
  %3815 = getelementptr inbounds float, ptr %3813, i64 8
  %3816 = load <8 x float>, ptr %3815, align 4, !tbaa !65
  %3817 = getelementptr inbounds float, ptr %3813, i64 16
  %3818 = load <8 x float>, ptr %3817, align 4, !tbaa !65
  %3819 = getelementptr inbounds float, ptr %3813, i64 24
  %3820 = load <8 x float>, ptr %3819, align 4, !tbaa !65
  %3821 = getelementptr inbounds float, ptr %3802, i64 %3812
  store <8 x float> %3814, ptr %3821, align 4, !tbaa !65
  %3822 = getelementptr inbounds float, ptr %3821, i64 8
  store <8 x float> %3816, ptr %3822, align 4, !tbaa !65
  %3823 = getelementptr inbounds float, ptr %3821, i64 16
  store <8 x float> %3818, ptr %3823, align 4, !tbaa !65
  %3824 = getelementptr inbounds float, ptr %3821, i64 24
  store <8 x float> %3820, ptr %3824, align 4, !tbaa !65
  %3825 = add nuw i64 %3812, 32
  %3826 = icmp eq i64 %3825, %3731
  br i1 %3826, label %3827, label %3811, !llvm.loop !381

3827:                                             ; preds = %3811
  br i1 %3732, label %3863, label %3828

3828:                                             ; preds = %3803, %3760, %3827
  %3829 = phi i64 [ 0, %3803 ], [ 0, %3760 ], [ %3731, %3827 ]
  %3830 = xor i64 %3829, -1
  %3831 = add nsw i64 %3830, %3710
  br i1 %3734, label %3841, label %3832

3832:                                             ; preds = %3828, %3832
  %3833 = phi i64 [ %3838, %3832 ], [ %3829, %3828 ]
  %3834 = phi i64 [ %3839, %3832 ], [ 0, %3828 ]
  %3835 = getelementptr inbounds float, ptr %3707, i64 %3833
  %3836 = load float, ptr %3835, align 4, !tbaa !65
  %3837 = getelementptr inbounds float, ptr %3802, i64 %3833
  store float %3836, ptr %3837, align 4, !tbaa !65
  %3838 = add nuw nsw i64 %3833, 1
  %3839 = add i64 %3834, 1
  %3840 = icmp eq i64 %3839, %3733
  br i1 %3840, label %3841, label %3832, !llvm.loop !382

3841:                                             ; preds = %3832, %3828
  %3842 = phi i64 [ %3829, %3828 ], [ %3838, %3832 ]
  %3843 = icmp ult i64 %3831, 3
  br i1 %3843, label %3863, label %3844

3844:                                             ; preds = %3841, %3844
  %3845 = phi i64 [ %3861, %3844 ], [ %3842, %3841 ]
  %3846 = getelementptr inbounds float, ptr %3707, i64 %3845
  %3847 = load float, ptr %3846, align 4, !tbaa !65
  %3848 = getelementptr inbounds float, ptr %3802, i64 %3845
  store float %3847, ptr %3848, align 4, !tbaa !65
  %3849 = add nuw nsw i64 %3845, 1
  %3850 = getelementptr inbounds float, ptr %3707, i64 %3849
  %3851 = load float, ptr %3850, align 4, !tbaa !65
  %3852 = getelementptr inbounds float, ptr %3802, i64 %3849
  store float %3851, ptr %3852, align 4, !tbaa !65
  %3853 = add nuw nsw i64 %3845, 2
  %3854 = getelementptr inbounds float, ptr %3707, i64 %3853
  %3855 = load float, ptr %3854, align 4, !tbaa !65
  %3856 = getelementptr inbounds float, ptr %3802, i64 %3853
  store float %3855, ptr %3856, align 4, !tbaa !65
  %3857 = add nuw nsw i64 %3845, 3
  %3858 = getelementptr inbounds float, ptr %3707, i64 %3857
  %3859 = load float, ptr %3858, align 4, !tbaa !65
  %3860 = getelementptr inbounds float, ptr %3802, i64 %3857
  store float %3859, ptr %3860, align 4, !tbaa !65
  %3861 = add nuw nsw i64 %3845, 4
  %3862 = icmp eq i64 %3861, %3710
  br i1 %3862, label %3863, label %3844, !llvm.loop !383

3863:                                             ; preds = %3841, %3844, %3827
  %3864 = icmp ult i32 %3764, 128
  %3865 = select i1 %3735, i1 true, i1 %3864
  br i1 %3865, label %3883, label %3866

3866:                                             ; preds = %3863, %3866
  %3867 = phi i64 [ %3880, %3866 ], [ 0, %3863 ]
  %3868 = getelementptr inbounds float, ptr %3707, i64 %3867
  %3869 = load <8 x float>, ptr %3868, align 4, !tbaa !65
  %3870 = getelementptr inbounds float, ptr %3868, i64 8
  %3871 = load <8 x float>, ptr %3870, align 4, !tbaa !65
  %3872 = getelementptr inbounds float, ptr %3868, i64 16
  %3873 = load <8 x float>, ptr %3872, align 4, !tbaa !65
  %3874 = getelementptr inbounds float, ptr %3868, i64 24
  %3875 = load <8 x float>, ptr %3874, align 4, !tbaa !65
  %3876 = getelementptr inbounds float, ptr %3801, i64 %3867
  store <8 x float> %3869, ptr %3876, align 4, !tbaa !65
  %3877 = getelementptr inbounds float, ptr %3876, i64 8
  store <8 x float> %3871, ptr %3877, align 4, !tbaa !65
  %3878 = getelementptr inbounds float, ptr %3876, i64 16
  store <8 x float> %3873, ptr %3878, align 4, !tbaa !65
  %3879 = getelementptr inbounds float, ptr %3876, i64 24
  store <8 x float> %3875, ptr %3879, align 4, !tbaa !65
  %3880 = add nuw i64 %3867, 32
  %3881 = icmp eq i64 %3880, %3736
  br i1 %3881, label %3882, label %3866, !llvm.loop !384

3882:                                             ; preds = %3866
  br i1 %3737, label %4118, label %3883

3883:                                             ; preds = %3863, %3882
  %3884 = phi i64 [ 0, %3863 ], [ %3736, %3882 ]
  %3885 = xor i64 %3884, -1
  %3886 = add nsw i64 %3885, %3710
  br i1 %3739, label %3896, label %3887

3887:                                             ; preds = %3883, %3887
  %3888 = phi i64 [ %3893, %3887 ], [ %3884, %3883 ]
  %3889 = phi i64 [ %3894, %3887 ], [ 0, %3883 ]
  %3890 = getelementptr inbounds float, ptr %3707, i64 %3888
  %3891 = load float, ptr %3890, align 4, !tbaa !65
  %3892 = getelementptr inbounds float, ptr %3801, i64 %3888
  store float %3891, ptr %3892, align 4, !tbaa !65
  %3893 = add nuw nsw i64 %3888, 1
  %3894 = add i64 %3889, 1
  %3895 = icmp eq i64 %3894, %3738
  br i1 %3895, label %3896, label %3887, !llvm.loop !385

3896:                                             ; preds = %3887, %3883
  %3897 = phi i64 [ %3884, %3883 ], [ %3893, %3887 ]
  %3898 = icmp ult i64 %3886, 3
  br i1 %3898, label %4118, label %3899

3899:                                             ; preds = %3896, %3899
  %3900 = phi i64 [ %3916, %3899 ], [ %3897, %3896 ]
  %3901 = getelementptr inbounds float, ptr %3707, i64 %3900
  %3902 = load float, ptr %3901, align 4, !tbaa !65
  %3903 = getelementptr inbounds float, ptr %3801, i64 %3900
  store float %3902, ptr %3903, align 4, !tbaa !65
  %3904 = add nuw nsw i64 %3900, 1
  %3905 = getelementptr inbounds float, ptr %3707, i64 %3904
  %3906 = load float, ptr %3905, align 4, !tbaa !65
  %3907 = getelementptr inbounds float, ptr %3801, i64 %3904
  store float %3906, ptr %3907, align 4, !tbaa !65
  %3908 = add nuw nsw i64 %3900, 2
  %3909 = getelementptr inbounds float, ptr %3707, i64 %3908
  %3910 = load float, ptr %3909, align 4, !tbaa !65
  %3911 = getelementptr inbounds float, ptr %3801, i64 %3908
  store float %3910, ptr %3911, align 4, !tbaa !65
  %3912 = add nuw nsw i64 %3900, 3
  %3913 = getelementptr inbounds float, ptr %3707, i64 %3912
  %3914 = load float, ptr %3913, align 4, !tbaa !65
  %3915 = getelementptr inbounds float, ptr %3801, i64 %3912
  store float %3914, ptr %3915, align 4, !tbaa !65
  %3916 = add nuw nsw i64 %3900, 4
  %3917 = icmp eq i64 %3916, %3710
  br i1 %3917, label %4118, label %3899, !llvm.loop !386

3918:                                             ; preds = %4159, %3918
  %3919 = phi i64 [ %3935, %3918 ], [ %4160, %4159 ]
  %3920 = getelementptr inbounds float, ptr %4123, i64 %3919
  %3921 = load float, ptr %3920, align 4, !tbaa !65
  %3922 = getelementptr inbounds float, ptr %4119, i64 %3919
  store float %3921, ptr %3922, align 4, !tbaa !65
  %3923 = add nuw nsw i64 %3919, 1
  %3924 = getelementptr inbounds float, ptr %4123, i64 %3923
  %3925 = load float, ptr %3924, align 4, !tbaa !65
  %3926 = getelementptr inbounds float, ptr %4119, i64 %3923
  store float %3925, ptr %3926, align 4, !tbaa !65
  %3927 = add nuw nsw i64 %3919, 2
  %3928 = getelementptr inbounds float, ptr %4123, i64 %3927
  %3929 = load float, ptr %3928, align 4, !tbaa !65
  %3930 = getelementptr inbounds float, ptr %4119, i64 %3927
  store float %3929, ptr %3930, align 4, !tbaa !65
  %3931 = add nuw nsw i64 %3919, 3
  %3932 = getelementptr inbounds float, ptr %4123, i64 %3931
  %3933 = load float, ptr %3932, align 4, !tbaa !65
  %3934 = getelementptr inbounds float, ptr %4119, i64 %3931
  store float %3933, ptr %3934, align 4, !tbaa !65
  %3935 = add nuw nsw i64 %3919, 4
  %3936 = icmp eq i64 %3935, %3710
  br i1 %3936, label %3937, label %3918, !llvm.loop !387

3937:                                             ; preds = %4159, %3918, %4145
  %3938 = getelementptr inbounds i8, ptr %3801, i64 %3661
  %3939 = getelementptr inbounds %struct.CCGEdge, ptr %3786, i64 1
  %3940 = getelementptr inbounds i8, ptr %3939, i64 %3663
  br i1 %3745, label %3962, label %3941

3941:                                             ; preds = %3937
  %3942 = add i64 %3681, %3787
  %3943 = sub i64 %3774, %3942
  %3944 = icmp ult i64 %3943, 128
  br i1 %3944, label %3962, label %3945

3945:                                             ; preds = %3941, %3945
  %3946 = phi i64 [ %3959, %3945 ], [ 0, %3941 ]
  %3947 = getelementptr inbounds float, ptr %3940, i64 %3946
  %3948 = load <8 x float>, ptr %3947, align 4, !tbaa !65
  %3949 = getelementptr inbounds float, ptr %3947, i64 8
  %3950 = load <8 x float>, ptr %3949, align 4, !tbaa !65
  %3951 = getelementptr inbounds float, ptr %3947, i64 16
  %3952 = load <8 x float>, ptr %3951, align 4, !tbaa !65
  %3953 = getelementptr inbounds float, ptr %3947, i64 24
  %3954 = load <8 x float>, ptr %3953, align 4, !tbaa !65
  %3955 = getelementptr inbounds float, ptr %3938, i64 %3946
  store <8 x float> %3948, ptr %3955, align 4, !tbaa !65
  %3956 = getelementptr inbounds float, ptr %3955, i64 8
  store <8 x float> %3950, ptr %3956, align 4, !tbaa !65
  %3957 = getelementptr inbounds float, ptr %3955, i64 16
  store <8 x float> %3952, ptr %3957, align 4, !tbaa !65
  %3958 = getelementptr inbounds float, ptr %3955, i64 24
  store <8 x float> %3954, ptr %3958, align 4, !tbaa !65
  %3959 = add nuw i64 %3946, 32
  %3960 = icmp eq i64 %3959, %3746
  br i1 %3960, label %3961, label %3945, !llvm.loop !388

3961:                                             ; preds = %3945
  br i1 %3747, label %3997, label %3962

3962:                                             ; preds = %3941, %3937, %3961
  %3963 = phi i64 [ 0, %3941 ], [ 0, %3937 ], [ %3746, %3961 ]
  %3964 = xor i64 %3963, -1
  %3965 = add nsw i64 %3964, %3710
  br i1 %3749, label %3975, label %3966

3966:                                             ; preds = %3962, %3966
  %3967 = phi i64 [ %3972, %3966 ], [ %3963, %3962 ]
  %3968 = phi i64 [ %3973, %3966 ], [ 0, %3962 ]
  %3969 = getelementptr inbounds float, ptr %3940, i64 %3967
  %3970 = load float, ptr %3969, align 4, !tbaa !65
  %3971 = getelementptr inbounds float, ptr %3938, i64 %3967
  store float %3970, ptr %3971, align 4, !tbaa !65
  %3972 = add nuw nsw i64 %3967, 1
  %3973 = add i64 %3968, 1
  %3974 = icmp eq i64 %3973, %3748
  br i1 %3974, label %3975, label %3966, !llvm.loop !389

3975:                                             ; preds = %3966, %3962
  %3976 = phi i64 [ %3963, %3962 ], [ %3972, %3966 ]
  %3977 = icmp ult i64 %3965, 3
  br i1 %3977, label %3997, label %3978

3978:                                             ; preds = %3975, %3978
  %3979 = phi i64 [ %3995, %3978 ], [ %3976, %3975 ]
  %3980 = getelementptr inbounds float, ptr %3940, i64 %3979
  %3981 = load float, ptr %3980, align 4, !tbaa !65
  %3982 = getelementptr inbounds float, ptr %3938, i64 %3979
  store float %3981, ptr %3982, align 4, !tbaa !65
  %3983 = add nuw nsw i64 %3979, 1
  %3984 = getelementptr inbounds float, ptr %3940, i64 %3983
  %3985 = load float, ptr %3984, align 4, !tbaa !65
  %3986 = getelementptr inbounds float, ptr %3938, i64 %3983
  store float %3985, ptr %3986, align 4, !tbaa !65
  %3987 = add nuw nsw i64 %3979, 2
  %3988 = getelementptr inbounds float, ptr %3940, i64 %3987
  %3989 = load float, ptr %3988, align 4, !tbaa !65
  %3990 = getelementptr inbounds float, ptr %3938, i64 %3987
  store float %3989, ptr %3990, align 4, !tbaa !65
  %3991 = add nuw nsw i64 %3979, 3
  %3992 = getelementptr inbounds float, ptr %3940, i64 %3991
  %3993 = load float, ptr %3992, align 4, !tbaa !65
  %3994 = getelementptr inbounds float, ptr %3938, i64 %3991
  store float %3993, ptr %3994, align 4, !tbaa !65
  %3995 = add nuw nsw i64 %3979, 4
  %3996 = icmp eq i64 %3995, %3710
  br i1 %3996, label %3997, label %3978, !llvm.loop !390

3997:                                             ; preds = %3975, %3978, %3961
  %3998 = getelementptr inbounds i8, ptr %3801, i64 %3666
  br i1 %3750, label %4020, label %3999

3999:                                             ; preds = %3997
  %4000 = add i64 %3677, %3787
  %4001 = sub i64 %3779, %4000
  %4002 = icmp ult i64 %4001, 128
  br i1 %4002, label %4020, label %4003

4003:                                             ; preds = %3999, %4003
  %4004 = phi i64 [ %4017, %4003 ], [ 0, %3999 ]
  %4005 = getelementptr inbounds float, ptr %3940, i64 %4004
  %4006 = load <8 x float>, ptr %4005, align 4, !tbaa !65
  %4007 = getelementptr inbounds float, ptr %4005, i64 8
  %4008 = load <8 x float>, ptr %4007, align 4, !tbaa !65
  %4009 = getelementptr inbounds float, ptr %4005, i64 16
  %4010 = load <8 x float>, ptr %4009, align 4, !tbaa !65
  %4011 = getelementptr inbounds float, ptr %4005, i64 24
  %4012 = load <8 x float>, ptr %4011, align 4, !tbaa !65
  %4013 = getelementptr inbounds float, ptr %3998, i64 %4004
  store <8 x float> %4006, ptr %4013, align 4, !tbaa !65
  %4014 = getelementptr inbounds float, ptr %4013, i64 8
  store <8 x float> %4008, ptr %4014, align 4, !tbaa !65
  %4015 = getelementptr inbounds float, ptr %4013, i64 16
  store <8 x float> %4010, ptr %4015, align 4, !tbaa !65
  %4016 = getelementptr inbounds float, ptr %4013, i64 24
  store <8 x float> %4012, ptr %4016, align 4, !tbaa !65
  %4017 = add nuw i64 %4004, 32
  %4018 = icmp eq i64 %4017, %3751
  br i1 %4018, label %4019, label %4003, !llvm.loop !391

4019:                                             ; preds = %4003
  br i1 %3752, label %4055, label %4020

4020:                                             ; preds = %3999, %3997, %4019
  %4021 = phi i64 [ 0, %3999 ], [ 0, %3997 ], [ %3751, %4019 ]
  %4022 = xor i64 %4021, -1
  %4023 = add nsw i64 %4022, %3710
  br i1 %3754, label %4033, label %4024

4024:                                             ; preds = %4020, %4024
  %4025 = phi i64 [ %4030, %4024 ], [ %4021, %4020 ]
  %4026 = phi i64 [ %4031, %4024 ], [ 0, %4020 ]
  %4027 = getelementptr inbounds float, ptr %3940, i64 %4025
  %4028 = load float, ptr %4027, align 4, !tbaa !65
  %4029 = getelementptr inbounds float, ptr %3998, i64 %4025
  store float %4028, ptr %4029, align 4, !tbaa !65
  %4030 = add nuw nsw i64 %4025, 1
  %4031 = add i64 %4026, 1
  %4032 = icmp eq i64 %4031, %3753
  br i1 %4032, label %4033, label %4024, !llvm.loop !392

4033:                                             ; preds = %4024, %4020
  %4034 = phi i64 [ %4021, %4020 ], [ %4030, %4024 ]
  %4035 = icmp ult i64 %4023, 3
  br i1 %4035, label %4055, label %4036

4036:                                             ; preds = %4033, %4036
  %4037 = phi i64 [ %4053, %4036 ], [ %4034, %4033 ]
  %4038 = getelementptr inbounds float, ptr %3940, i64 %4037
  %4039 = load float, ptr %4038, align 4, !tbaa !65
  %4040 = getelementptr inbounds float, ptr %3998, i64 %4037
  store float %4039, ptr %4040, align 4, !tbaa !65
  %4041 = add nuw nsw i64 %4037, 1
  %4042 = getelementptr inbounds float, ptr %3940, i64 %4041
  %4043 = load float, ptr %4042, align 4, !tbaa !65
  %4044 = getelementptr inbounds float, ptr %3998, i64 %4041
  store float %4043, ptr %4044, align 4, !tbaa !65
  %4045 = add nuw nsw i64 %4037, 2
  %4046 = getelementptr inbounds float, ptr %3940, i64 %4045
  %4047 = load float, ptr %4046, align 4, !tbaa !65
  %4048 = getelementptr inbounds float, ptr %3998, i64 %4045
  store float %4047, ptr %4048, align 4, !tbaa !65
  %4049 = add nuw nsw i64 %4037, 3
  %4050 = getelementptr inbounds float, ptr %3940, i64 %4049
  %4051 = load float, ptr %4050, align 4, !tbaa !65
  %4052 = getelementptr inbounds float, ptr %3998, i64 %4049
  store float %4051, ptr %4052, align 4, !tbaa !65
  %4053 = add nuw nsw i64 %4037, 4
  %4054 = icmp eq i64 %4053, %3710
  br i1 %4054, label %4055, label %4036, !llvm.loop !393

4055:                                             ; preds = %4033, %4036, %4019
  %4056 = getelementptr inbounds i8, ptr %3801, i64 %3670
  %4057 = getelementptr inbounds %struct.CCGEdge, ptr %3794, i64 1
  %4058 = getelementptr inbounds i8, ptr %4057, i64 %3663
  br i1 %3755, label %4080, label %4059

4059:                                             ; preds = %4055
  %4060 = add i64 %3675, %3795
  %4061 = sub i64 %3784, %4060
  %4062 = icmp ult i64 %4061, 128
  br i1 %4062, label %4080, label %4063

4063:                                             ; preds = %4059, %4063
  %4064 = phi i64 [ %4077, %4063 ], [ 0, %4059 ]
  %4065 = getelementptr inbounds float, ptr %4058, i64 %4064
  %4066 = load <8 x float>, ptr %4065, align 4, !tbaa !65
  %4067 = getelementptr inbounds float, ptr %4065, i64 8
  %4068 = load <8 x float>, ptr %4067, align 4, !tbaa !65
  %4069 = getelementptr inbounds float, ptr %4065, i64 16
  %4070 = load <8 x float>, ptr %4069, align 4, !tbaa !65
  %4071 = getelementptr inbounds float, ptr %4065, i64 24
  %4072 = load <8 x float>, ptr %4071, align 4, !tbaa !65
  %4073 = getelementptr inbounds float, ptr %4056, i64 %4064
  store <8 x float> %4066, ptr %4073, align 4, !tbaa !65
  %4074 = getelementptr inbounds float, ptr %4073, i64 8
  store <8 x float> %4068, ptr %4074, align 4, !tbaa !65
  %4075 = getelementptr inbounds float, ptr %4073, i64 16
  store <8 x float> %4070, ptr %4075, align 4, !tbaa !65
  %4076 = getelementptr inbounds float, ptr %4073, i64 24
  store <8 x float> %4072, ptr %4076, align 4, !tbaa !65
  %4077 = add nuw i64 %4064, 32
  %4078 = icmp eq i64 %4077, %3756
  br i1 %4078, label %4079, label %4063, !llvm.loop !394

4079:                                             ; preds = %4063
  br i1 %3757, label %4115, label %4080

4080:                                             ; preds = %4059, %4055, %4079
  %4081 = phi i64 [ 0, %4059 ], [ 0, %4055 ], [ %3756, %4079 ]
  %4082 = xor i64 %4081, -1
  %4083 = add nsw i64 %4082, %3710
  br i1 %3759, label %4093, label %4084

4084:                                             ; preds = %4080, %4084
  %4085 = phi i64 [ %4090, %4084 ], [ %4081, %4080 ]
  %4086 = phi i64 [ %4091, %4084 ], [ 0, %4080 ]
  %4087 = getelementptr inbounds float, ptr %4058, i64 %4085
  %4088 = load float, ptr %4087, align 4, !tbaa !65
  %4089 = getelementptr inbounds float, ptr %4056, i64 %4085
  store float %4088, ptr %4089, align 4, !tbaa !65
  %4090 = add nuw nsw i64 %4085, 1
  %4091 = add i64 %4086, 1
  %4092 = icmp eq i64 %4091, %3758
  br i1 %4092, label %4093, label %4084, !llvm.loop !395

4093:                                             ; preds = %4084, %4080
  %4094 = phi i64 [ %4081, %4080 ], [ %4090, %4084 ]
  %4095 = icmp ult i64 %4083, 3
  br i1 %4095, label %4115, label %4096

4096:                                             ; preds = %4093, %4096
  %4097 = phi i64 [ %4113, %4096 ], [ %4094, %4093 ]
  %4098 = getelementptr inbounds float, ptr %4058, i64 %4097
  %4099 = load float, ptr %4098, align 4, !tbaa !65
  %4100 = getelementptr inbounds float, ptr %4056, i64 %4097
  store float %4099, ptr %4100, align 4, !tbaa !65
  %4101 = add nuw nsw i64 %4097, 1
  %4102 = getelementptr inbounds float, ptr %4058, i64 %4101
  %4103 = load float, ptr %4102, align 4, !tbaa !65
  %4104 = getelementptr inbounds float, ptr %4056, i64 %4101
  store float %4103, ptr %4104, align 4, !tbaa !65
  %4105 = add nuw nsw i64 %4097, 2
  %4106 = getelementptr inbounds float, ptr %4058, i64 %4105
  %4107 = load float, ptr %4106, align 4, !tbaa !65
  %4108 = getelementptr inbounds float, ptr %4056, i64 %4105
  store float %4107, ptr %4108, align 4, !tbaa !65
  %4109 = add nuw nsw i64 %4097, 3
  %4110 = getelementptr inbounds float, ptr %4058, i64 %4109
  %4111 = load float, ptr %4110, align 4, !tbaa !65
  %4112 = getelementptr inbounds float, ptr %4056, i64 %4109
  store float %4111, ptr %4112, align 4, !tbaa !65
  %4113 = add nuw nsw i64 %4097, 4
  %4114 = icmp eq i64 %4113, %3710
  br i1 %4114, label %4115, label %4096, !llvm.loop !396

4115:                                             ; preds = %4093, %4096, %4079
  %4116 = add nuw nsw i64 %3761, 1
  %4117 = icmp eq i64 %4116, %3712
  br i1 %4117, label %4162, label %3760, !llvm.loop !397

4118:                                             ; preds = %3896, %3899, %3882
  %4119 = getelementptr inbounds i8, ptr %3801, i64 %3658
  %4120 = getelementptr inbounds ptr, ptr %3704, i64 %3761
  %4121 = load ptr, ptr %4120, align 8, !tbaa !14
  %4122 = getelementptr inbounds %struct.CCGVert, ptr %4121, i64 1
  %4123 = getelementptr inbounds i8, ptr %4122, i64 %3659
  br i1 %3740, label %4146, label %4124

4124:                                             ; preds = %4118
  %4125 = ptrtoint ptr %4121 to i64
  %4126 = add i64 %3683, %4125
  %4127 = sub i64 %3769, %4126
  %4128 = icmp ult i64 %4127, 128
  br i1 %4128, label %4146, label %4129

4129:                                             ; preds = %4124, %4129
  %4130 = phi i64 [ %4143, %4129 ], [ 0, %4124 ]
  %4131 = getelementptr inbounds float, ptr %4123, i64 %4130
  %4132 = load <8 x float>, ptr %4131, align 4, !tbaa !65
  %4133 = getelementptr inbounds float, ptr %4131, i64 8
  %4134 = load <8 x float>, ptr %4133, align 4, !tbaa !65
  %4135 = getelementptr inbounds float, ptr %4131, i64 16
  %4136 = load <8 x float>, ptr %4135, align 4, !tbaa !65
  %4137 = getelementptr inbounds float, ptr %4131, i64 24
  %4138 = load <8 x float>, ptr %4137, align 4, !tbaa !65
  %4139 = getelementptr inbounds float, ptr %4119, i64 %4130
  store <8 x float> %4132, ptr %4139, align 4, !tbaa !65
  %4140 = getelementptr inbounds float, ptr %4139, i64 8
  store <8 x float> %4134, ptr %4140, align 4, !tbaa !65
  %4141 = getelementptr inbounds float, ptr %4139, i64 16
  store <8 x float> %4136, ptr %4141, align 4, !tbaa !65
  %4142 = getelementptr inbounds float, ptr %4139, i64 24
  store <8 x float> %4138, ptr %4142, align 4, !tbaa !65
  %4143 = add nuw i64 %4130, 32
  %4144 = icmp eq i64 %4143, %3741
  br i1 %4144, label %4145, label %4129, !llvm.loop !398

4145:                                             ; preds = %4129
  br i1 %3742, label %3937, label %4146

4146:                                             ; preds = %4124, %4118, %4145
  %4147 = phi i64 [ 0, %4124 ], [ 0, %4118 ], [ %3741, %4145 ]
  %4148 = xor i64 %4147, -1
  %4149 = add nsw i64 %4148, %3710
  br i1 %3744, label %4159, label %4150

4150:                                             ; preds = %4146, %4150
  %4151 = phi i64 [ %4156, %4150 ], [ %4147, %4146 ]
  %4152 = phi i64 [ %4157, %4150 ], [ 0, %4146 ]
  %4153 = getelementptr inbounds float, ptr %4123, i64 %4151
  %4154 = load float, ptr %4153, align 4, !tbaa !65
  %4155 = getelementptr inbounds float, ptr %4119, i64 %4151
  store float %4154, ptr %4155, align 4, !tbaa !65
  %4156 = add nuw nsw i64 %4151, 1
  %4157 = add i64 %4152, 1
  %4158 = icmp eq i64 %4157, %3743
  br i1 %4158, label %4159, label %4150, !llvm.loop !399

4159:                                             ; preds = %4150, %4146
  %4160 = phi i64 [ %4147, %4146 ], [ %4156, %4150 ]
  %4161 = icmp ult i64 %4149, 3
  br i1 %4161, label %3937, label %3918

4162:                                             ; preds = %4115, %3703, %3694
  %4163 = add nuw nsw i64 %3695, 1
  %4164 = icmp eq i64 %4163, %3671
  br i1 %4164, label %3687, label %3694, !llvm.loop !400

4165:                                             ; preds = %3687, %4165
  %4166 = phi i32 [ %4167, %4165 ], [ 1, %3687 ]
  tail call fastcc void @ccgSubSurf__calcSubdivLevel(ptr noundef nonnull %0, ptr noundef %18, ptr noundef %26, ptr noundef %34, i32 noundef %3691, i32 noundef %3690, i32 noundef %3689, i32 noundef %4166)
  %4167 = add nuw nsw i32 %4166, 1
  %4168 = icmp eq i32 %4167, %3
  br i1 %4168, label %4169, label %4165, !llvm.loop !401

4169:                                             ; preds = %4165, %3687
  %4170 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 13
  %4171 = load i32, ptr %4170, align 8, !tbaa !33
  %4172 = icmp eq i32 %4171, 0
  br i1 %4172, label %4174, label %4173

4173:                                             ; preds = %4169
  tail call fastcc void @ccgSubSurf__calcVertNormals(ptr noundef nonnull %0, ptr noundef %18, ptr noundef %26, ptr noundef %34, i32 noundef %3691, i32 noundef %3690, i32 noundef %3689)
  br label %4174

4174:                                             ; preds = %4173, %4169
  br i1 %3692, label %4175, label %4194

4175:                                             ; preds = %4174
  %4176 = zext i32 %3691 to i64
  %4177 = add nsw i64 %4176, -1
  %4178 = and i64 %4176, 7
  %4179 = icmp ult i64 %4177, 7
  br i1 %4179, label %4182, label %4180

4180:                                             ; preds = %4175
  %4181 = and i64 %4176, 4294967288
  br label %4202

4182:                                             ; preds = %4202, %4175
  %4183 = phi i64 [ 0, %4175 ], [ %4236, %4202 ]
  %4184 = icmp eq i64 %4178, 0
  br i1 %4184, label %4194, label %4185

4185:                                             ; preds = %4182, %4185
  %4186 = phi i64 [ %4191, %4185 ], [ %4183, %4182 ]
  %4187 = phi i64 [ %4192, %4185 ], [ 0, %4182 ]
  %4188 = getelementptr inbounds ptr, ptr %18, i64 %4186
  %4189 = load ptr, ptr %4188, align 8, !tbaa !14
  %4190 = getelementptr inbounds %struct.CCGVert, ptr %4189, i64 0, i32 4
  store i16 0, ptr %4190, align 4, !tbaa !86
  %4191 = add nuw nsw i64 %4186, 1
  %4192 = add i64 %4187, 1
  %4193 = icmp eq i64 %4192, %4178
  br i1 %4193, label %4194, label %4185, !llvm.loop !402

4194:                                             ; preds = %4182, %4185, %4174
  br i1 %3688, label %4195, label %4288

4195:                                             ; preds = %4194
  %4196 = zext i32 %3690 to i64
  %4197 = add nsw i64 %4196, -1
  %4198 = and i64 %4196, 7
  %4199 = icmp ult i64 %4197, 7
  br i1 %4199, label %4276, label %4200

4200:                                             ; preds = %4195
  %4201 = and i64 %4196, 4294967288
  br label %4239

4202:                                             ; preds = %4202, %4180
  %4203 = phi i64 [ 0, %4180 ], [ %4236, %4202 ]
  %4204 = phi i64 [ 0, %4180 ], [ %4237, %4202 ]
  %4205 = getelementptr inbounds ptr, ptr %18, i64 %4203
  %4206 = load ptr, ptr %4205, align 8, !tbaa !14
  %4207 = getelementptr inbounds %struct.CCGVert, ptr %4206, i64 0, i32 4
  store i16 0, ptr %4207, align 4, !tbaa !86
  %4208 = or i64 %4203, 1
  %4209 = getelementptr inbounds ptr, ptr %18, i64 %4208
  %4210 = load ptr, ptr %4209, align 8, !tbaa !14
  %4211 = getelementptr inbounds %struct.CCGVert, ptr %4210, i64 0, i32 4
  store i16 0, ptr %4211, align 4, !tbaa !86
  %4212 = or i64 %4203, 2
  %4213 = getelementptr inbounds ptr, ptr %18, i64 %4212
  %4214 = load ptr, ptr %4213, align 8, !tbaa !14
  %4215 = getelementptr inbounds %struct.CCGVert, ptr %4214, i64 0, i32 4
  store i16 0, ptr %4215, align 4, !tbaa !86
  %4216 = or i64 %4203, 3
  %4217 = getelementptr inbounds ptr, ptr %18, i64 %4216
  %4218 = load ptr, ptr %4217, align 8, !tbaa !14
  %4219 = getelementptr inbounds %struct.CCGVert, ptr %4218, i64 0, i32 4
  store i16 0, ptr %4219, align 4, !tbaa !86
  %4220 = or i64 %4203, 4
  %4221 = getelementptr inbounds ptr, ptr %18, i64 %4220
  %4222 = load ptr, ptr %4221, align 8, !tbaa !14
  %4223 = getelementptr inbounds %struct.CCGVert, ptr %4222, i64 0, i32 4
  store i16 0, ptr %4223, align 4, !tbaa !86
  %4224 = or i64 %4203, 5
  %4225 = getelementptr inbounds ptr, ptr %18, i64 %4224
  %4226 = load ptr, ptr %4225, align 8, !tbaa !14
  %4227 = getelementptr inbounds %struct.CCGVert, ptr %4226, i64 0, i32 4
  store i16 0, ptr %4227, align 4, !tbaa !86
  %4228 = or i64 %4203, 6
  %4229 = getelementptr inbounds ptr, ptr %18, i64 %4228
  %4230 = load ptr, ptr %4229, align 8, !tbaa !14
  %4231 = getelementptr inbounds %struct.CCGVert, ptr %4230, i64 0, i32 4
  store i16 0, ptr %4231, align 4, !tbaa !86
  %4232 = or i64 %4203, 7
  %4233 = getelementptr inbounds ptr, ptr %18, i64 %4232
  %4234 = load ptr, ptr %4233, align 8, !tbaa !14
  %4235 = getelementptr inbounds %struct.CCGVert, ptr %4234, i64 0, i32 4
  store i16 0, ptr %4235, align 4, !tbaa !86
  %4236 = add nuw nsw i64 %4203, 8
  %4237 = add i64 %4204, 8
  %4238 = icmp eq i64 %4237, %4181
  br i1 %4238, label %4182, label %4202, !llvm.loop !403

4239:                                             ; preds = %4239, %4200
  %4240 = phi i64 [ 0, %4200 ], [ %4273, %4239 ]
  %4241 = phi i64 [ 0, %4200 ], [ %4274, %4239 ]
  %4242 = getelementptr inbounds ptr, ptr %26, i64 %4240
  %4243 = load ptr, ptr %4242, align 8, !tbaa !14
  %4244 = getelementptr inbounds %struct.CCGEdge, ptr %4243, i64 0, i32 3
  store i16 0, ptr %4244, align 2, !tbaa !118
  %4245 = or i64 %4240, 1
  %4246 = getelementptr inbounds ptr, ptr %26, i64 %4245
  %4247 = load ptr, ptr %4246, align 8, !tbaa !14
  %4248 = getelementptr inbounds %struct.CCGEdge, ptr %4247, i64 0, i32 3
  store i16 0, ptr %4248, align 2, !tbaa !118
  %4249 = or i64 %4240, 2
  %4250 = getelementptr inbounds ptr, ptr %26, i64 %4249
  %4251 = load ptr, ptr %4250, align 8, !tbaa !14
  %4252 = getelementptr inbounds %struct.CCGEdge, ptr %4251, i64 0, i32 3
  store i16 0, ptr %4252, align 2, !tbaa !118
  %4253 = or i64 %4240, 3
  %4254 = getelementptr inbounds ptr, ptr %26, i64 %4253
  %4255 = load ptr, ptr %4254, align 8, !tbaa !14
  %4256 = getelementptr inbounds %struct.CCGEdge, ptr %4255, i64 0, i32 3
  store i16 0, ptr %4256, align 2, !tbaa !118
  %4257 = or i64 %4240, 4
  %4258 = getelementptr inbounds ptr, ptr %26, i64 %4257
  %4259 = load ptr, ptr %4258, align 8, !tbaa !14
  %4260 = getelementptr inbounds %struct.CCGEdge, ptr %4259, i64 0, i32 3
  store i16 0, ptr %4260, align 2, !tbaa !118
  %4261 = or i64 %4240, 5
  %4262 = getelementptr inbounds ptr, ptr %26, i64 %4261
  %4263 = load ptr, ptr %4262, align 8, !tbaa !14
  %4264 = getelementptr inbounds %struct.CCGEdge, ptr %4263, i64 0, i32 3
  store i16 0, ptr %4264, align 2, !tbaa !118
  %4265 = or i64 %4240, 6
  %4266 = getelementptr inbounds ptr, ptr %26, i64 %4265
  %4267 = load ptr, ptr %4266, align 8, !tbaa !14
  %4268 = getelementptr inbounds %struct.CCGEdge, ptr %4267, i64 0, i32 3
  store i16 0, ptr %4268, align 2, !tbaa !118
  %4269 = or i64 %4240, 7
  %4270 = getelementptr inbounds ptr, ptr %26, i64 %4269
  %4271 = load ptr, ptr %4270, align 8, !tbaa !14
  %4272 = getelementptr inbounds %struct.CCGEdge, ptr %4271, i64 0, i32 3
  store i16 0, ptr %4272, align 2, !tbaa !118
  %4273 = add nuw nsw i64 %4240, 8
  %4274 = add i64 %4241, 8
  %4275 = icmp eq i64 %4274, %4201
  br i1 %4275, label %4276, label %4239, !llvm.loop !404

4276:                                             ; preds = %4239, %4195
  %4277 = phi i64 [ 0, %4195 ], [ %4273, %4239 ]
  %4278 = icmp eq i64 %4198, 0
  br i1 %4278, label %4288, label %4279

4279:                                             ; preds = %4276, %4279
  %4280 = phi i64 [ %4285, %4279 ], [ %4277, %4276 ]
  %4281 = phi i64 [ %4286, %4279 ], [ 0, %4276 ]
  %4282 = getelementptr inbounds ptr, ptr %26, i64 %4280
  %4283 = load ptr, ptr %4282, align 8, !tbaa !14
  %4284 = getelementptr inbounds %struct.CCGEdge, ptr %4283, i64 0, i32 3
  store i16 0, ptr %4284, align 2, !tbaa !118
  %4285 = add nuw nsw i64 %4280, 1
  %4286 = add i64 %4281, 1
  %4287 = icmp eq i64 %4286, %4198
  br i1 %4287, label %4288, label %4279, !llvm.loop !405

4288:                                             ; preds = %4276, %4279, %4194
  %4289 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  tail call void %4289(ptr noundef %34) #23
  %4290 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  tail call void %4290(ptr noundef %26) #23
  %4291 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  tail call void %4291(ptr noundef %18) #23
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @ccgSubSurf_updateFromFaces(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #1 {
  %5 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %6 = load i32, ptr %5, align 8, !tbaa !37
  %7 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %8 = load i32, ptr %7, align 8, !tbaa !32
  %9 = icmp eq i32 %1, 0
  %10 = select i1 %9, i32 %8, i32 %1
  %11 = add i32 %10, -1
  %12 = shl nuw i32 1, %11
  %13 = icmp eq ptr %2, null
  br i1 %13, label %14, label %55

14:                                               ; preds = %4
  %15 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !14
  %16 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !29
  %18 = getelementptr inbounds %struct._EHash, ptr %17, i64 0, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !22
  %20 = sext i32 %19 to i64
  %21 = shl nsw i64 %20, 3
  %22 = tail call ptr %15(i64 noundef %21, ptr noundef nonnull @.str.5) #23
  %23 = load ptr, ptr %16, align 8, !tbaa !29
  %24 = getelementptr inbounds %struct._EHash, ptr %23, i64 0, i32 2
  %25 = load i32, ptr %24, align 4, !tbaa !24
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %560

27:                                               ; preds = %14, %47
  %28 = phi ptr [ %48, %47 ], [ %23, %14 ]
  %29 = phi i64 [ %50, %47 ], [ 0, %14 ]
  %30 = phi i32 [ %49, %47 ], [ 0, %14 ]
  %31 = load ptr, ptr %28, align 8, !tbaa !26
  %32 = getelementptr inbounds ptr, ptr %31, i64 %29
  %33 = load ptr, ptr %32, align 8, !tbaa !14
  %34 = icmp eq ptr %33, null
  br i1 %34, label %47, label %35

35:                                               ; preds = %27
  %36 = sext i32 %30 to i64
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i64 [ %36, %35 ], [ %40, %37 ]
  %39 = phi ptr [ %33, %35 ], [ %42, %37 ]
  %40 = add i64 %38, 1
  %41 = getelementptr inbounds ptr, ptr %22, i64 %38
  store ptr %39, ptr %41, align 8, !tbaa !14
  %42 = load ptr, ptr %39, align 8, !tbaa !14
  %43 = icmp eq ptr %42, null
  br i1 %43, label %44, label %37, !llvm.loop !406

44:                                               ; preds = %37
  %45 = trunc i64 %40 to i32
  %46 = load ptr, ptr %16, align 8, !tbaa !29
  br label %47

47:                                               ; preds = %44, %27
  %48 = phi ptr [ %28, %27 ], [ %46, %44 ]
  %49 = phi i32 [ %30, %27 ], [ %45, %44 ]
  %50 = add nuw nsw i64 %29, 1
  %51 = getelementptr inbounds %struct._EHash, ptr %48, i64 0, i32 2
  %52 = load i32, ptr %51, align 4, !tbaa !24
  %53 = sext i32 %52 to i64
  %54 = icmp slt i64 %50, %53
  br i1 %54, label %27, label %55, !llvm.loop !407

55:                                               ; preds = %47, %4
  %56 = phi i32 [ %3, %4 ], [ %49, %47 ]
  %57 = phi ptr [ %2, %4 ], [ %22, %47 ]
  %58 = icmp sgt i32 %56, 0
  br i1 %58, label %59, label %559

59:                                               ; preds = %55
  %60 = add nsw i32 %8, -1
  %61 = shl nuw i32 1, %60
  %62 = add nuw i32 %61, 1
  %63 = add nuw i32 %61, 2
  %64 = mul i32 %62, %63
  %65 = mul nsw i32 %62, %6
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 3
  %68 = mul nsw i32 %10, %6
  %69 = sext i32 %68 to i64
  %70 = sub nsw i32 %8, %10
  %71 = shl i32 %62, %11
  %72 = add nsw i32 %71, %12
  %73 = shl i32 %72, %70
  %74 = add nsw i32 %73, %62
  %75 = mul nsw i32 %74, %6
  %76 = sext i32 %75 to i64
  %77 = icmp eq i32 %11, 31
  %78 = shl nuw i32 1, %10
  %79 = add i32 %11, %78
  %80 = tail call i32 @llvm.smax.i32(i32 %12, i32 0)
  %81 = zext i32 %56 to i64
  %82 = mul i32 %6, %63
  %83 = mul i32 %82, %62
  %84 = add nsw i64 %69, 40
  %85 = add nsw i64 %76, 24
  %86 = mul i32 %6, %63
  %87 = mul i32 %86, %62
  %88 = add nsw i64 %66, 24
  br label %89

89:                                               ; preds = %59, %556
  %90 = phi i64 [ 0, %59 ], [ %557, %556 ]
  %91 = getelementptr inbounds ptr, ptr %57, i64 %90
  %92 = load ptr, ptr %91, align 8, !tbaa !14
  %93 = getelementptr inbounds %struct.CCGFace, ptr %92, i64 0, i32 2
  %94 = load i16, ptr %93, align 8, !tbaa !89
  %95 = sext i16 %94 to i32
  %96 = icmp sgt i16 %94, 0
  br i1 %96, label %97, label %556

97:                                               ; preds = %89
  %98 = ptrtoint ptr %92 to i64
  %99 = getelementptr inbounds %struct.CCGFace, ptr %92, i64 1
  %100 = zext i16 %94 to i64
  %101 = getelementptr inbounds ptr, ptr %99, i64 %100
  %102 = getelementptr ptr, ptr %101, i64 %100
  %103 = load i32, ptr %67, align 4, !tbaa !74
  %104 = icmp sgt i32 %103, 0
  %105 = zext i32 %103 to i64
  %106 = zext i32 %95 to i64
  %107 = add i64 %98, 24
  %108 = shl nuw nsw i64 %100, 4
  %109 = add i64 %107, %108
  %110 = add i64 %98, 24
  %111 = shl nuw nsw i64 %100, 4
  %112 = add i64 %110, %111
  %113 = add i64 %98, 24
  %114 = shl nuw nsw i64 %100, 4
  %115 = add i64 %113, %114
  %116 = add i64 %98, 24
  %117 = add i64 %116, %114
  %118 = add i64 %85, %98
  %119 = shl nuw nsw i64 %100, 4
  %120 = add i64 %118, %119
  %121 = shl nuw nsw i64 %100, 4
  %122 = add i64 %116, %121
  %123 = add i64 %88, %98
  %124 = add i64 %123, %121
  %125 = icmp ult i32 %103, 32
  %126 = and i64 %105, 4294967264
  %127 = icmp eq i64 %126, %105
  %128 = and i64 %105, 3
  %129 = icmp eq i64 %128, 0
  %130 = icmp ult i32 %103, 32
  %131 = and i64 %105, 4294967264
  %132 = icmp eq i64 %131, %105
  %133 = and i64 %105, 3
  %134 = icmp eq i64 %133, 0
  %135 = icmp ult i32 %103, 32
  %136 = and i64 %105, 4294967264
  %137 = icmp eq i64 %136, %105
  %138 = and i64 %105, 3
  %139 = icmp eq i64 %138, 0
  %140 = icmp ult i32 %103, 32
  %141 = and i64 %105, 4294967264
  %142 = icmp eq i64 %141, %105
  %143 = and i64 %105, 3
  %144 = icmp eq i64 %143, 0
  %145 = icmp ult i32 %103, 32
  %146 = and i64 %105, 4294967264
  %147 = icmp eq i64 %146, %105
  %148 = and i64 %105, 3
  %149 = icmp eq i64 %148, 0
  br label %150

150:                                              ; preds = %97, %553
  %151 = phi i64 [ 0, %97 ], [ %554, %553 ]
  %152 = trunc i64 %151 to i32
  %153 = mul i32 %87, %152
  %154 = add i32 %153, %6
  %155 = sext i32 %154 to i64
  %156 = add i64 %120, %155
  %157 = trunc i64 %151 to i32
  %158 = mul i32 %83, %157
  %159 = add i32 %158, %6
  %160 = sext i32 %159 to i64
  %161 = trunc i64 %151 to i32
  %162 = mul i32 %83, %161
  %163 = add i32 %162, %6
  %164 = sext i32 %163 to i64
  %165 = trunc i64 %151 to i32
  %166 = mul i32 %83, %165
  %167 = add i32 %166, %6
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds ptr, ptr %101, i64 %151
  %170 = load ptr, ptr %169, align 8, !tbaa !14
  %171 = ptrtoint ptr %170 to i64
  %172 = trunc i64 %151 to i32
  %173 = add i32 %172, -1
  %174 = add i32 %173, %95
  %175 = srem i32 %174, %95
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds ptr, ptr %101, i64 %176
  %178 = load ptr, ptr %177, align 8, !tbaa !14
  %179 = ptrtoint ptr %178 to i64
  %180 = trunc i64 %151 to i32
  %181 = mul i32 %64, %180
  %182 = add nsw i32 %181, 1
  %183 = mul nsw i32 %182, %6
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i8, ptr %102, i64 %184
  %186 = getelementptr inbounds i8, ptr %185, i64 %66
  br i1 %104, label %187, label %229

187:                                              ; preds = %150
  %188 = trunc i64 %151 to i32
  %189 = mul i32 %87, %188
  %190 = add i32 %189, %6
  %191 = sext i32 %190 to i64
  %192 = add i64 %124, %191
  %193 = sub i64 %122, %192
  %194 = icmp ult i64 %193, 128
  %195 = select i1 %125, i1 true, i1 %194
  br i1 %195, label %213, label %196

196:                                              ; preds = %187, %196
  %197 = phi i64 [ %210, %196 ], [ 0, %187 ]
  %198 = getelementptr inbounds float, ptr %186, i64 %197
  %199 = load <8 x float>, ptr %198, align 4, !tbaa !65
  %200 = getelementptr inbounds float, ptr %198, i64 8
  %201 = load <8 x float>, ptr %200, align 4, !tbaa !65
  %202 = getelementptr inbounds float, ptr %198, i64 16
  %203 = load <8 x float>, ptr %202, align 4, !tbaa !65
  %204 = getelementptr inbounds float, ptr %198, i64 24
  %205 = load <8 x float>, ptr %204, align 4, !tbaa !65
  %206 = getelementptr inbounds float, ptr %102, i64 %197
  store <8 x float> %199, ptr %206, align 4, !tbaa !65
  %207 = getelementptr inbounds float, ptr %206, i64 8
  store <8 x float> %201, ptr %207, align 4, !tbaa !65
  %208 = getelementptr inbounds float, ptr %206, i64 16
  store <8 x float> %203, ptr %208, align 4, !tbaa !65
  %209 = getelementptr inbounds float, ptr %206, i64 24
  store <8 x float> %205, ptr %209, align 4, !tbaa !65
  %210 = add nuw i64 %197, 32
  %211 = icmp eq i64 %210, %126
  br i1 %211, label %212, label %196, !llvm.loop !408

212:                                              ; preds = %196
  br i1 %127, label %251, label %213

213:                                              ; preds = %187, %212
  %214 = phi i64 [ 0, %187 ], [ %126, %212 ]
  %215 = xor i64 %214, -1
  %216 = add nsw i64 %215, %105
  br i1 %129, label %226, label %217

217:                                              ; preds = %213, %217
  %218 = phi i64 [ %223, %217 ], [ %214, %213 ]
  %219 = phi i64 [ %224, %217 ], [ 0, %213 ]
  %220 = getelementptr inbounds float, ptr %186, i64 %218
  %221 = load float, ptr %220, align 4, !tbaa !65
  %222 = getelementptr inbounds float, ptr %102, i64 %218
  store float %221, ptr %222, align 4, !tbaa !65
  %223 = add nuw nsw i64 %218, 1
  %224 = add i64 %219, 1
  %225 = icmp eq i64 %224, %128
  br i1 %225, label %226, label %217, !llvm.loop !409

226:                                              ; preds = %217, %213
  %227 = phi i64 [ %214, %213 ], [ %223, %217 ]
  %228 = icmp ult i64 %216, 3
  br i1 %228, label %251, label %232

229:                                              ; preds = %150
  %230 = getelementptr inbounds ptr, ptr %99, i64 %151
  %231 = load ptr, ptr %230, align 8, !tbaa !14
  br label %315

232:                                              ; preds = %226, %232
  %233 = phi i64 [ %249, %232 ], [ %227, %226 ]
  %234 = getelementptr inbounds float, ptr %186, i64 %233
  %235 = load float, ptr %234, align 4, !tbaa !65
  %236 = getelementptr inbounds float, ptr %102, i64 %233
  store float %235, ptr %236, align 4, !tbaa !65
  %237 = add nuw nsw i64 %233, 1
  %238 = getelementptr inbounds float, ptr %186, i64 %237
  %239 = load float, ptr %238, align 4, !tbaa !65
  %240 = getelementptr inbounds float, ptr %102, i64 %237
  store float %239, ptr %240, align 4, !tbaa !65
  %241 = add nuw nsw i64 %233, 2
  %242 = getelementptr inbounds float, ptr %186, i64 %241
  %243 = load float, ptr %242, align 4, !tbaa !65
  %244 = getelementptr inbounds float, ptr %102, i64 %241
  store float %243, ptr %244, align 4, !tbaa !65
  %245 = add nuw nsw i64 %233, 3
  %246 = getelementptr inbounds float, ptr %186, i64 %245
  %247 = load float, ptr %246, align 4, !tbaa !65
  %248 = getelementptr inbounds float, ptr %102, i64 %245
  store float %247, ptr %248, align 4, !tbaa !65
  %249 = add nuw nsw i64 %233, 4
  %250 = icmp eq i64 %249, %105
  br i1 %250, label %251, label %232, !llvm.loop !410

251:                                              ; preds = %226, %232, %212
  %252 = getelementptr inbounds ptr, ptr %99, i64 %151
  %253 = load ptr, ptr %252, align 8, !tbaa !14
  %254 = ptrtoint ptr %253 to i64
  %255 = getelementptr inbounds %struct.CCGVert, ptr %253, i64 1
  %256 = getelementptr i8, ptr %255, i64 %69
  %257 = getelementptr inbounds i8, ptr %185, i64 %76
  br i1 %104, label %258, label %315

258:                                              ; preds = %251
  br i1 %130, label %280, label %259

259:                                              ; preds = %258
  %260 = add i64 %84, %254
  %261 = sub i64 %260, %156
  %262 = icmp ult i64 %261, 128
  br i1 %262, label %280, label %263

263:                                              ; preds = %259, %263
  %264 = phi i64 [ %277, %263 ], [ 0, %259 ]
  %265 = getelementptr inbounds float, ptr %257, i64 %264
  %266 = load <8 x float>, ptr %265, align 4, !tbaa !65
  %267 = getelementptr inbounds float, ptr %265, i64 8
  %268 = load <8 x float>, ptr %267, align 4, !tbaa !65
  %269 = getelementptr inbounds float, ptr %265, i64 16
  %270 = load <8 x float>, ptr %269, align 4, !tbaa !65
  %271 = getelementptr inbounds float, ptr %265, i64 24
  %272 = load <8 x float>, ptr %271, align 4, !tbaa !65
  %273 = getelementptr inbounds float, ptr %256, i64 %264
  store <8 x float> %266, ptr %273, align 4, !tbaa !65
  %274 = getelementptr inbounds float, ptr %273, i64 8
  store <8 x float> %268, ptr %274, align 4, !tbaa !65
  %275 = getelementptr inbounds float, ptr %273, i64 16
  store <8 x float> %270, ptr %275, align 4, !tbaa !65
  %276 = getelementptr inbounds float, ptr %273, i64 24
  store <8 x float> %272, ptr %276, align 4, !tbaa !65
  %277 = add nuw i64 %264, 32
  %278 = icmp eq i64 %277, %131
  br i1 %278, label %279, label %263, !llvm.loop !411

279:                                              ; preds = %263
  br i1 %132, label %315, label %280

280:                                              ; preds = %259, %258, %279
  %281 = phi i64 [ 0, %259 ], [ 0, %258 ], [ %131, %279 ]
  %282 = xor i64 %281, -1
  %283 = add nsw i64 %282, %105
  br i1 %134, label %293, label %284

284:                                              ; preds = %280, %284
  %285 = phi i64 [ %290, %284 ], [ %281, %280 ]
  %286 = phi i64 [ %291, %284 ], [ 0, %280 ]
  %287 = getelementptr inbounds float, ptr %257, i64 %285
  %288 = load float, ptr %287, align 4, !tbaa !65
  %289 = getelementptr inbounds float, ptr %256, i64 %285
  store float %288, ptr %289, align 4, !tbaa !65
  %290 = add nuw nsw i64 %285, 1
  %291 = add i64 %286, 1
  %292 = icmp eq i64 %291, %133
  br i1 %292, label %293, label %284, !llvm.loop !412

293:                                              ; preds = %284, %280
  %294 = phi i64 [ %281, %280 ], [ %290, %284 ]
  %295 = icmp ult i64 %283, 3
  br i1 %295, label %315, label %296

296:                                              ; preds = %293, %296
  %297 = phi i64 [ %313, %296 ], [ %294, %293 ]
  %298 = getelementptr inbounds float, ptr %257, i64 %297
  %299 = load float, ptr %298, align 4, !tbaa !65
  %300 = getelementptr inbounds float, ptr %256, i64 %297
  store float %299, ptr %300, align 4, !tbaa !65
  %301 = add nuw nsw i64 %297, 1
  %302 = getelementptr inbounds float, ptr %257, i64 %301
  %303 = load float, ptr %302, align 4, !tbaa !65
  %304 = getelementptr inbounds float, ptr %256, i64 %301
  store float %303, ptr %304, align 4, !tbaa !65
  %305 = add nuw nsw i64 %297, 2
  %306 = getelementptr inbounds float, ptr %257, i64 %305
  %307 = load float, ptr %306, align 4, !tbaa !65
  %308 = getelementptr inbounds float, ptr %256, i64 %305
  store float %307, ptr %308, align 4, !tbaa !65
  %309 = add nuw nsw i64 %297, 3
  %310 = getelementptr inbounds float, ptr %257, i64 %309
  %311 = load float, ptr %310, align 4, !tbaa !65
  %312 = getelementptr inbounds float, ptr %256, i64 %309
  store float %311, ptr %312, align 4, !tbaa !65
  %313 = add nuw nsw i64 %297, 4
  %314 = icmp eq i64 %313, %105
  br i1 %314, label %315, label %296, !llvm.loop !413

315:                                              ; preds = %293, %296, %279, %229, %251
  %316 = phi ptr [ %231, %229 ], [ %253, %251 ], [ %253, %279 ], [ %253, %296 ], [ %253, %293 ]
  br i1 %77, label %553, label %317

317:                                              ; preds = %315
  br i1 %104, label %318, label %393

318:                                              ; preds = %317
  %319 = add i64 %115, %160
  %320 = add i64 %117, %160
  br label %321

321:                                              ; preds = %318, %389
  %322 = phi i32 [ %390, %389 ], [ 0, %318 ]
  %323 = mul nsw i32 %322, %6
  %324 = shl i32 %323, %70
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds i8, ptr %185, i64 %325
  %327 = shl i32 %322, %70
  %328 = add nsw i32 %327, %62
  %329 = mul nsw i32 %328, %6
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds i8, ptr %185, i64 %330
  br i1 %135, label %354, label %332

332:                                              ; preds = %321
  %333 = add i64 %319, %325
  %334 = add i64 %320, %330
  %335 = sub i64 %333, %334
  %336 = icmp ult i64 %335, 128
  br i1 %336, label %354, label %337

337:                                              ; preds = %332, %337
  %338 = phi i64 [ %351, %337 ], [ 0, %332 ]
  %339 = getelementptr inbounds float, ptr %331, i64 %338
  %340 = load <8 x float>, ptr %339, align 4, !tbaa !65
  %341 = getelementptr inbounds float, ptr %339, i64 8
  %342 = load <8 x float>, ptr %341, align 4, !tbaa !65
  %343 = getelementptr inbounds float, ptr %339, i64 16
  %344 = load <8 x float>, ptr %343, align 4, !tbaa !65
  %345 = getelementptr inbounds float, ptr %339, i64 24
  %346 = load <8 x float>, ptr %345, align 4, !tbaa !65
  %347 = getelementptr inbounds float, ptr %326, i64 %338
  store <8 x float> %340, ptr %347, align 4, !tbaa !65
  %348 = getelementptr inbounds float, ptr %347, i64 8
  store <8 x float> %342, ptr %348, align 4, !tbaa !65
  %349 = getelementptr inbounds float, ptr %347, i64 16
  store <8 x float> %344, ptr %349, align 4, !tbaa !65
  %350 = getelementptr inbounds float, ptr %347, i64 24
  store <8 x float> %346, ptr %350, align 4, !tbaa !65
  %351 = add nuw i64 %338, 32
  %352 = icmp eq i64 %351, %136
  br i1 %352, label %353, label %337, !llvm.loop !414

353:                                              ; preds = %337
  br i1 %137, label %389, label %354

354:                                              ; preds = %332, %321, %353
  %355 = phi i64 [ 0, %332 ], [ 0, %321 ], [ %136, %353 ]
  %356 = xor i64 %355, -1
  %357 = add nsw i64 %356, %105
  br i1 %139, label %367, label %358

358:                                              ; preds = %354, %358
  %359 = phi i64 [ %364, %358 ], [ %355, %354 ]
  %360 = phi i64 [ %365, %358 ], [ 0, %354 ]
  %361 = getelementptr inbounds float, ptr %331, i64 %359
  %362 = load float, ptr %361, align 4, !tbaa !65
  %363 = getelementptr inbounds float, ptr %326, i64 %359
  store float %362, ptr %363, align 4, !tbaa !65
  %364 = add nuw nsw i64 %359, 1
  %365 = add i64 %360, 1
  %366 = icmp eq i64 %365, %138
  br i1 %366, label %367, label %358, !llvm.loop !415

367:                                              ; preds = %358, %354
  %368 = phi i64 [ %355, %354 ], [ %364, %358 ]
  %369 = icmp ult i64 %357, 3
  br i1 %369, label %389, label %370

370:                                              ; preds = %367, %370
  %371 = phi i64 [ %387, %370 ], [ %368, %367 ]
  %372 = getelementptr inbounds float, ptr %331, i64 %371
  %373 = load float, ptr %372, align 4, !tbaa !65
  %374 = getelementptr inbounds float, ptr %326, i64 %371
  store float %373, ptr %374, align 4, !tbaa !65
  %375 = add nuw nsw i64 %371, 1
  %376 = getelementptr inbounds float, ptr %331, i64 %375
  %377 = load float, ptr %376, align 4, !tbaa !65
  %378 = getelementptr inbounds float, ptr %326, i64 %375
  store float %377, ptr %378, align 4, !tbaa !65
  %379 = add nuw nsw i64 %371, 2
  %380 = getelementptr inbounds float, ptr %331, i64 %379
  %381 = load float, ptr %380, align 4, !tbaa !65
  %382 = getelementptr inbounds float, ptr %326, i64 %379
  store float %381, ptr %382, align 4, !tbaa !65
  %383 = add nuw nsw i64 %371, 3
  %384 = getelementptr inbounds float, ptr %331, i64 %383
  %385 = load float, ptr %384, align 4, !tbaa !65
  %386 = getelementptr inbounds float, ptr %326, i64 %383
  store float %385, ptr %386, align 4, !tbaa !65
  %387 = add nuw nsw i64 %371, 4
  %388 = icmp eq i64 %387, %105
  br i1 %388, label %389, label %370, !llvm.loop !416

389:                                              ; preds = %367, %370, %353
  %390 = add nuw i32 %322, 1
  %391 = icmp eq i32 %322, %80
  br i1 %391, label %392, label %321, !llvm.loop !417

392:                                              ; preds = %389
  br i1 %77, label %553, label %393

393:                                              ; preds = %317, %392
  %394 = getelementptr inbounds %struct.CCGEdge, ptr %170, i64 0, i32 5
  %395 = load ptr, ptr %394, align 8, !tbaa !83
  %396 = icmp eq ptr %395, %316
  %397 = getelementptr inbounds %struct.CCGEdge, ptr %170, i64 1
  %398 = getelementptr inbounds %struct.CCGEdge, ptr %178, i64 0, i32 5
  %399 = load ptr, ptr %398, align 8, !tbaa !83
  %400 = icmp eq ptr %399, %316
  %401 = getelementptr inbounds %struct.CCGEdge, ptr %178, i64 1
  %402 = add i64 %179, 48
  %403 = add i64 %109, %168
  %404 = add i64 %171, 48
  %405 = add i64 %112, %164
  br label %406

406:                                              ; preds = %393, %550
  %407 = phi i32 [ 0, %393 ], [ %551, %550 ]
  %408 = sub nsw i32 %12, %407
  %409 = sub i32 %78, %408
  %410 = select i1 %396, i32 %408, i32 %409
  %411 = add i32 %410, %79
  %412 = mul nsw i32 %411, %6
  %413 = sext i32 %412 to i64
  %414 = getelementptr i8, ptr %397, i64 %413
  %415 = mul nsw i32 %407, %62
  %416 = add nsw i32 %415, %12
  %417 = shl i32 %416, %70
  %418 = add nsw i32 %417, %62
  %419 = mul nsw i32 %418, %6
  %420 = sext i32 %419 to i64
  %421 = getelementptr i8, ptr %185, i64 %420
  br i1 %104, label %422, label %480

422:                                              ; preds = %406
  br i1 %140, label %445, label %423

423:                                              ; preds = %422
  %424 = add i64 %404, %413
  %425 = add i64 %405, %420
  %426 = sub i64 %424, %425
  %427 = icmp ult i64 %426, 128
  br i1 %427, label %445, label %428

428:                                              ; preds = %423, %428
  %429 = phi i64 [ %442, %428 ], [ 0, %423 ]
  %430 = getelementptr inbounds float, ptr %421, i64 %429
  %431 = load <8 x float>, ptr %430, align 4, !tbaa !65
  %432 = getelementptr inbounds float, ptr %430, i64 8
  %433 = load <8 x float>, ptr %432, align 4, !tbaa !65
  %434 = getelementptr inbounds float, ptr %430, i64 16
  %435 = load <8 x float>, ptr %434, align 4, !tbaa !65
  %436 = getelementptr inbounds float, ptr %430, i64 24
  %437 = load <8 x float>, ptr %436, align 4, !tbaa !65
  %438 = getelementptr inbounds float, ptr %414, i64 %429
  store <8 x float> %431, ptr %438, align 4, !tbaa !65
  %439 = getelementptr inbounds float, ptr %438, i64 8
  store <8 x float> %433, ptr %439, align 4, !tbaa !65
  %440 = getelementptr inbounds float, ptr %438, i64 16
  store <8 x float> %435, ptr %440, align 4, !tbaa !65
  %441 = getelementptr inbounds float, ptr %438, i64 24
  store <8 x float> %437, ptr %441, align 4, !tbaa !65
  %442 = add nuw i64 %429, 32
  %443 = icmp eq i64 %442, %141
  br i1 %443, label %444, label %428, !llvm.loop !418

444:                                              ; preds = %428
  br i1 %142, label %480, label %445

445:                                              ; preds = %423, %422, %444
  %446 = phi i64 [ 0, %423 ], [ 0, %422 ], [ %141, %444 ]
  %447 = xor i64 %446, -1
  %448 = add nsw i64 %447, %105
  br i1 %144, label %458, label %449

449:                                              ; preds = %445, %449
  %450 = phi i64 [ %455, %449 ], [ %446, %445 ]
  %451 = phi i64 [ %456, %449 ], [ 0, %445 ]
  %452 = getelementptr inbounds float, ptr %421, i64 %450
  %453 = load float, ptr %452, align 4, !tbaa !65
  %454 = getelementptr inbounds float, ptr %414, i64 %450
  store float %453, ptr %454, align 4, !tbaa !65
  %455 = add nuw nsw i64 %450, 1
  %456 = add i64 %451, 1
  %457 = icmp eq i64 %456, %143
  br i1 %457, label %458, label %449, !llvm.loop !419

458:                                              ; preds = %449, %445
  %459 = phi i64 [ %446, %445 ], [ %455, %449 ]
  %460 = icmp ult i64 %448, 3
  br i1 %460, label %480, label %461

461:                                              ; preds = %458, %461
  %462 = phi i64 [ %478, %461 ], [ %459, %458 ]
  %463 = getelementptr inbounds float, ptr %421, i64 %462
  %464 = load float, ptr %463, align 4, !tbaa !65
  %465 = getelementptr inbounds float, ptr %414, i64 %462
  store float %464, ptr %465, align 4, !tbaa !65
  %466 = add nuw nsw i64 %462, 1
  %467 = getelementptr inbounds float, ptr %421, i64 %466
  %468 = load float, ptr %467, align 4, !tbaa !65
  %469 = getelementptr inbounds float, ptr %414, i64 %466
  store float %468, ptr %469, align 4, !tbaa !65
  %470 = add nuw nsw i64 %462, 2
  %471 = getelementptr inbounds float, ptr %421, i64 %470
  %472 = load float, ptr %471, align 4, !tbaa !65
  %473 = getelementptr inbounds float, ptr %414, i64 %470
  store float %472, ptr %473, align 4, !tbaa !65
  %474 = add nuw nsw i64 %462, 3
  %475 = getelementptr inbounds float, ptr %421, i64 %474
  %476 = load float, ptr %475, align 4, !tbaa !65
  %477 = getelementptr inbounds float, ptr %414, i64 %474
  store float %476, ptr %477, align 4, !tbaa !65
  %478 = add nuw nsw i64 %462, 4
  %479 = icmp eq i64 %478, %105
  br i1 %479, label %480, label %461, !llvm.loop !420

480:                                              ; preds = %458, %461, %444, %406
  %481 = select i1 %400, i32 %408, i32 %409
  %482 = add i32 %481, %79
  %483 = mul nsw i32 %482, %6
  %484 = sext i32 %483 to i64
  %485 = getelementptr i8, ptr %401, i64 %484
  %486 = add nsw i32 %407, %71
  %487 = shl i32 %486, %70
  %488 = add nsw i32 %487, %62
  %489 = mul nsw i32 %488, %6
  %490 = sext i32 %489 to i64
  %491 = getelementptr i8, ptr %185, i64 %490
  br i1 %104, label %492, label %550

492:                                              ; preds = %480
  br i1 %145, label %515, label %493

493:                                              ; preds = %492
  %494 = add i64 %402, %484
  %495 = add i64 %403, %490
  %496 = sub i64 %494, %495
  %497 = icmp ult i64 %496, 128
  br i1 %497, label %515, label %498

498:                                              ; preds = %493, %498
  %499 = phi i64 [ %512, %498 ], [ 0, %493 ]
  %500 = getelementptr inbounds float, ptr %491, i64 %499
  %501 = load <8 x float>, ptr %500, align 4, !tbaa !65
  %502 = getelementptr inbounds float, ptr %500, i64 8
  %503 = load <8 x float>, ptr %502, align 4, !tbaa !65
  %504 = getelementptr inbounds float, ptr %500, i64 16
  %505 = load <8 x float>, ptr %504, align 4, !tbaa !65
  %506 = getelementptr inbounds float, ptr %500, i64 24
  %507 = load <8 x float>, ptr %506, align 4, !tbaa !65
  %508 = getelementptr inbounds float, ptr %485, i64 %499
  store <8 x float> %501, ptr %508, align 4, !tbaa !65
  %509 = getelementptr inbounds float, ptr %508, i64 8
  store <8 x float> %503, ptr %509, align 4, !tbaa !65
  %510 = getelementptr inbounds float, ptr %508, i64 16
  store <8 x float> %505, ptr %510, align 4, !tbaa !65
  %511 = getelementptr inbounds float, ptr %508, i64 24
  store <8 x float> %507, ptr %511, align 4, !tbaa !65
  %512 = add nuw i64 %499, 32
  %513 = icmp eq i64 %512, %146
  br i1 %513, label %514, label %498, !llvm.loop !421

514:                                              ; preds = %498
  br i1 %147, label %550, label %515

515:                                              ; preds = %493, %492, %514
  %516 = phi i64 [ 0, %493 ], [ 0, %492 ], [ %146, %514 ]
  %517 = xor i64 %516, -1
  %518 = add nsw i64 %517, %105
  br i1 %149, label %528, label %519

519:                                              ; preds = %515, %519
  %520 = phi i64 [ %525, %519 ], [ %516, %515 ]
  %521 = phi i64 [ %526, %519 ], [ 0, %515 ]
  %522 = getelementptr inbounds float, ptr %491, i64 %520
  %523 = load float, ptr %522, align 4, !tbaa !65
  %524 = getelementptr inbounds float, ptr %485, i64 %520
  store float %523, ptr %524, align 4, !tbaa !65
  %525 = add nuw nsw i64 %520, 1
  %526 = add i64 %521, 1
  %527 = icmp eq i64 %526, %148
  br i1 %527, label %528, label %519, !llvm.loop !422

528:                                              ; preds = %519, %515
  %529 = phi i64 [ %516, %515 ], [ %525, %519 ]
  %530 = icmp ult i64 %518, 3
  br i1 %530, label %550, label %531

531:                                              ; preds = %528, %531
  %532 = phi i64 [ %548, %531 ], [ %529, %528 ]
  %533 = getelementptr inbounds float, ptr %491, i64 %532
  %534 = load float, ptr %533, align 4, !tbaa !65
  %535 = getelementptr inbounds float, ptr %485, i64 %532
  store float %534, ptr %535, align 4, !tbaa !65
  %536 = add nuw nsw i64 %532, 1
  %537 = getelementptr inbounds float, ptr %491, i64 %536
  %538 = load float, ptr %537, align 4, !tbaa !65
  %539 = getelementptr inbounds float, ptr %485, i64 %536
  store float %538, ptr %539, align 4, !tbaa !65
  %540 = add nuw nsw i64 %532, 2
  %541 = getelementptr inbounds float, ptr %491, i64 %540
  %542 = load float, ptr %541, align 4, !tbaa !65
  %543 = getelementptr inbounds float, ptr %485, i64 %540
  store float %542, ptr %543, align 4, !tbaa !65
  %544 = add nuw nsw i64 %532, 3
  %545 = getelementptr inbounds float, ptr %491, i64 %544
  %546 = load float, ptr %545, align 4, !tbaa !65
  %547 = getelementptr inbounds float, ptr %485, i64 %544
  store float %546, ptr %547, align 4, !tbaa !65
  %548 = add nuw nsw i64 %532, 4
  %549 = icmp eq i64 %548, %105
  br i1 %549, label %550, label %531, !llvm.loop !423

550:                                              ; preds = %528, %531, %514, %480
  %551 = add nuw i32 %407, 1
  %552 = icmp eq i32 %407, %80
  br i1 %552, label %553, label %406, !llvm.loop !424

553:                                              ; preds = %550, %315, %392
  %554 = add nuw nsw i64 %151, 1
  %555 = icmp eq i64 %554, %106
  br i1 %555, label %556, label %150, !llvm.loop !425

556:                                              ; preds = %553, %89
  %557 = add nuw nsw i64 %90, 1
  %558 = icmp eq i64 %557, %81
  br i1 %558, label %559, label %89, !llvm.loop !426

559:                                              ; preds = %556, %55
  br i1 %13, label %560, label %563

560:                                              ; preds = %14, %559
  %561 = phi ptr [ %57, %559 ], [ %22, %14 ]
  %562 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  tail call void %562(ptr noundef %561) #23
  br label %563

563:                                              ; preds = %560, %559
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @ccgSubSurf_updateToFaces(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #1 {
  %5 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %6 = load i32, ptr %5, align 8, !tbaa !37
  %7 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %8 = load i32, ptr %7, align 8, !tbaa !32
  %9 = icmp eq i32 %1, 0
  %10 = select i1 %9, i32 %8, i32 %1
  %11 = add i32 %10, -1
  %12 = shl nuw i32 1, %11
  %13 = icmp eq ptr %2, null
  br i1 %13, label %14, label %55

14:                                               ; preds = %4
  %15 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !14
  %16 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !29
  %18 = getelementptr inbounds %struct._EHash, ptr %17, i64 0, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !22
  %20 = sext i32 %19 to i64
  %21 = shl nsw i64 %20, 3
  %22 = tail call ptr %15(i64 noundef %21, ptr noundef nonnull @.str.5) #23
  %23 = load ptr, ptr %16, align 8, !tbaa !29
  %24 = getelementptr inbounds %struct._EHash, ptr %23, i64 0, i32 2
  %25 = load i32, ptr %24, align 4, !tbaa !24
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %654

27:                                               ; preds = %14, %47
  %28 = phi ptr [ %48, %47 ], [ %23, %14 ]
  %29 = phi i64 [ %50, %47 ], [ 0, %14 ]
  %30 = phi i32 [ %49, %47 ], [ 0, %14 ]
  %31 = load ptr, ptr %28, align 8, !tbaa !26
  %32 = getelementptr inbounds ptr, ptr %31, i64 %29
  %33 = load ptr, ptr %32, align 8, !tbaa !14
  %34 = icmp eq ptr %33, null
  br i1 %34, label %47, label %35

35:                                               ; preds = %27
  %36 = sext i32 %30 to i64
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i64 [ %36, %35 ], [ %40, %37 ]
  %39 = phi ptr [ %33, %35 ], [ %42, %37 ]
  %40 = add i64 %38, 1
  %41 = getelementptr inbounds ptr, ptr %22, i64 %38
  store ptr %39, ptr %41, align 8, !tbaa !14
  %42 = load ptr, ptr %39, align 8, !tbaa !14
  %43 = icmp eq ptr %42, null
  br i1 %43, label %44, label %37, !llvm.loop !406

44:                                               ; preds = %37
  %45 = trunc i64 %40 to i32
  %46 = load ptr, ptr %16, align 8, !tbaa !29
  br label %47

47:                                               ; preds = %44, %27
  %48 = phi ptr [ %28, %27 ], [ %46, %44 ]
  %49 = phi i32 [ %30, %27 ], [ %45, %44 ]
  %50 = add nuw nsw i64 %29, 1
  %51 = getelementptr inbounds %struct._EHash, ptr %48, i64 0, i32 2
  %52 = load i32, ptr %51, align 4, !tbaa !24
  %53 = sext i32 %52 to i64
  %54 = icmp slt i64 %50, %53
  br i1 %54, label %27, label %55, !llvm.loop !407

55:                                               ; preds = %47, %4
  %56 = phi i32 [ %3, %4 ], [ %49, %47 ]
  %57 = phi ptr [ %2, %4 ], [ %22, %47 ]
  %58 = icmp sgt i32 %56, 0
  br i1 %58, label %59, label %653

59:                                               ; preds = %55
  %60 = icmp eq i32 %11, 31
  %61 = add nsw i32 %8, -1
  %62 = shl nuw i32 1, %61
  %63 = add nuw i32 %62, 1
  %64 = sub nsw i32 %8, %10
  %65 = add nuw i32 %62, 2
  %66 = mul i32 %63, %65
  %67 = shl nuw i32 1, %10
  %68 = add i32 %11, %67
  %69 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 3
  %70 = shl i32 %63, %11
  %71 = icmp sgt i32 %12, 1
  %72 = mul nsw i32 %63, %6
  %73 = sext i32 %72 to i64
  %74 = shl i32 %65, %11
  %75 = shl i32 %74, %64
  %76 = add nsw i32 %75, %63
  %77 = mul nsw i32 %76, %6
  %78 = sext i32 %77 to i64
  %79 = mul nsw i32 %10, %6
  %80 = sext i32 %79 to i64
  %81 = tail call i32 @llvm.smax.i32(i32 %12, i32 0)
  %82 = zext i32 %56 to i64
  %83 = add nsw i64 %78, 24
  %84 = add nsw i64 %80, 40
  %85 = add nsw i64 %73, 24
  %86 = mul i32 %6, %65
  %87 = mul i32 %86, %63
  %88 = mul i32 %6, %65
  %89 = mul i32 %88, %63
  br label %90

90:                                               ; preds = %59, %650
  %91 = phi i64 [ 0, %59 ], [ %651, %650 ]
  %92 = getelementptr inbounds ptr, ptr %57, i64 %91
  %93 = load ptr, ptr %92, align 8, !tbaa !14
  %94 = getelementptr inbounds %struct.CCGFace, ptr %93, i64 0, i32 2
  %95 = load i16, ptr %94, align 8, !tbaa !89
  %96 = sext i16 %95 to i32
  %97 = icmp sgt i16 %95, 0
  br i1 %97, label %98, label %650

98:                                               ; preds = %90
  %99 = ptrtoint ptr %93 to i64
  %100 = getelementptr inbounds %struct.CCGFace, ptr %93, i64 1
  %101 = zext i16 %95 to i64
  %102 = getelementptr inbounds ptr, ptr %100, i64 %101
  %103 = getelementptr ptr, ptr %102, i64 %101
  %104 = load i32, ptr %69, align 4, !tbaa !74
  %105 = icmp sgt i32 %104, 0
  %106 = zext i32 %104 to i64
  %107 = zext i32 %96 to i64
  %108 = icmp sgt i32 %104, 0
  %109 = zext i32 %104 to i64
  %110 = add i64 %83, %99
  %111 = shl nuw nsw i64 %101, 4
  %112 = add i64 %110, %111
  %113 = add i64 %85, %99
  %114 = shl nuw nsw i64 %101, 4
  %115 = add i64 %113, %114
  %116 = add i64 %99, 24
  %117 = add i64 %116, %114
  %118 = add i64 %99, 24
  %119 = shl nuw nsw i64 %101, 4
  %120 = add i64 %118, %119
  %121 = add i64 %99, 24
  %122 = add i64 %121, %119
  %123 = add i64 %99, 24
  %124 = shl nuw nsw i64 %101, 4
  %125 = add i64 %123, %124
  %126 = add i64 %99, 24
  %127 = add i64 %126, %124
  %128 = add i64 %99, 24
  %129 = shl nuw nsw i64 %101, 4
  %130 = add i64 %128, %129
  %131 = add i64 %99, 24
  %132 = shl nuw nsw i64 %101, 4
  %133 = add i64 %131, %132
  %134 = icmp ult i32 %104, 32
  %135 = and i64 %109, 4294967264
  %136 = icmp eq i64 %135, %109
  %137 = and i64 %109, 3
  %138 = icmp eq i64 %137, 0
  %139 = icmp ult i32 %104, 32
  %140 = and i64 %109, 4294967264
  %141 = icmp eq i64 %140, %109
  %142 = and i64 %109, 3
  %143 = icmp eq i64 %142, 0
  %144 = icmp ult i32 %104, 32
  %145 = and i64 %109, 4294967264
  %146 = icmp eq i64 %145, %109
  %147 = and i64 %109, 3
  %148 = icmp eq i64 %147, 0
  %149 = icmp ult i32 %104, 32
  %150 = and i64 %109, 4294967264
  %151 = icmp eq i64 %150, %109
  %152 = and i64 %109, 3
  %153 = icmp eq i64 %152, 0
  %154 = icmp ult i32 %104, 32
  %155 = and i64 %109, 4294967264
  %156 = icmp eq i64 %155, %109
  %157 = and i64 %109, 3
  %158 = icmp eq i64 %157, 0
  %159 = icmp ult i32 %104, 32
  %160 = and i64 %109, 4294967264
  %161 = icmp eq i64 %160, %109
  %162 = and i64 %109, 3
  %163 = icmp eq i64 %162, 0
  br label %164

164:                                              ; preds = %98, %647
  %165 = phi i64 [ 0, %98 ], [ %648, %647 ]
  %166 = trunc i64 %165 to i32
  %167 = mul i32 %87, %166
  %168 = add i32 %167, %6
  %169 = sext i32 %168 to i64
  %170 = trunc i64 %165 to i32
  %171 = mul i32 %87, %170
  %172 = add i32 %171, %6
  %173 = sext i32 %172 to i64
  %174 = trunc i64 %165 to i32
  %175 = add i32 %174, -1
  %176 = add i32 %175, %96
  %177 = srem i32 %176, %96
  br i1 %60, label %215, label %178

178:                                              ; preds = %164
  %179 = trunc i64 %165 to i32
  %180 = mul i32 %87, %179
  %181 = add i32 %180, %6
  %182 = sext i32 %181 to i64
  %183 = trunc i64 %165 to i32
  %184 = mul i32 %89, %183
  %185 = add i32 %184, %6
  %186 = sext i32 %185 to i64
  %187 = sext i32 %177 to i64
  %188 = getelementptr inbounds ptr, ptr %102, i64 %187
  %189 = load ptr, ptr %188, align 8, !tbaa !14
  %190 = ptrtoint ptr %189 to i64
  %191 = getelementptr inbounds ptr, ptr %102, i64 %165
  %192 = load ptr, ptr %191, align 8, !tbaa !14
  %193 = ptrtoint ptr %192 to i64
  %194 = trunc i64 %165 to i32
  %195 = mul i32 %66, %194
  %196 = add nsw i32 %195, 1
  %197 = mul nsw i32 %196, %6
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds i8, ptr %103, i64 %198
  %200 = getelementptr inbounds ptr, ptr %100, i64 %165
  %201 = load ptr, ptr %200, align 8, !tbaa !14
  %202 = getelementptr inbounds %struct.CCGEdge, ptr %192, i64 0, i32 5
  %203 = load ptr, ptr %202, align 8, !tbaa !83
  %204 = icmp eq ptr %203, %201
  %205 = getelementptr inbounds %struct.CCGEdge, ptr %192, i64 1
  %206 = getelementptr inbounds %struct.CCGEdge, ptr %189, i64 0, i32 5
  %207 = load ptr, ptr %206, align 8, !tbaa !83
  %208 = icmp eq ptr %207, %201
  %209 = getelementptr inbounds %struct.CCGEdge, ptr %189, i64 1
  %210 = add i64 %130, %182
  %211 = add i64 %190, 48
  %212 = add i64 %133, %186
  %213 = add i64 %193, 48
  br label %374

214:                                              ; preds = %518
  br i1 %71, label %221, label %215

215:                                              ; preds = %164, %214
  %216 = trunc i64 %165 to i32
  %217 = mul i32 %66, %216
  %218 = add nsw i32 %217, 1
  %219 = mul nsw i32 %218, %6
  %220 = sext i32 %219 to i64
  br label %521

221:                                              ; preds = %214
  %222 = trunc i64 %165 to i32
  %223 = mul i32 %66, %222
  %224 = add nsw i32 %223, 1
  %225 = mul nsw i32 %224, %6
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds i8, ptr %103, i64 %226
  %228 = mul i32 %66, %177
  %229 = add nsw i32 %228, 1
  %230 = mul nsw i32 %229, %6
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i8, ptr %103, i64 %231
  br i1 %105, label %233, label %647

233:                                              ; preds = %221
  %234 = add i64 %120, %173
  %235 = add i64 %122, %173
  %236 = add i64 %125, %169
  %237 = add i64 %127, %231
  br label %238

238:                                              ; preds = %233, %371
  %239 = phi i32 [ %372, %371 ], [ 1, %233 ]
  %240 = mul nsw i32 %239, %63
  %241 = shl i32 %240, %64
  %242 = add nsw i32 %241, %63
  %243 = mul nsw i32 %242, %6
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds i8, ptr %227, i64 %244
  %246 = mul nsw i32 %239, %6
  %247 = shl i32 %246, %64
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, ptr %232, i64 %248
  br i1 %144, label %272, label %250

250:                                              ; preds = %238
  %251 = add i64 %236, %244
  %252 = add i64 %237, %248
  %253 = sub i64 %251, %252
  %254 = icmp ult i64 %253, 128
  br i1 %254, label %272, label %255

255:                                              ; preds = %250, %255
  %256 = phi i64 [ %269, %255 ], [ 0, %250 ]
  %257 = getelementptr inbounds float, ptr %249, i64 %256
  %258 = load <8 x float>, ptr %257, align 4, !tbaa !65
  %259 = getelementptr inbounds float, ptr %257, i64 8
  %260 = load <8 x float>, ptr %259, align 4, !tbaa !65
  %261 = getelementptr inbounds float, ptr %257, i64 16
  %262 = load <8 x float>, ptr %261, align 4, !tbaa !65
  %263 = getelementptr inbounds float, ptr %257, i64 24
  %264 = load <8 x float>, ptr %263, align 4, !tbaa !65
  %265 = getelementptr inbounds float, ptr %245, i64 %256
  store <8 x float> %258, ptr %265, align 4, !tbaa !65
  %266 = getelementptr inbounds float, ptr %265, i64 8
  store <8 x float> %260, ptr %266, align 4, !tbaa !65
  %267 = getelementptr inbounds float, ptr %265, i64 16
  store <8 x float> %262, ptr %267, align 4, !tbaa !65
  %268 = getelementptr inbounds float, ptr %265, i64 24
  store <8 x float> %264, ptr %268, align 4, !tbaa !65
  %269 = add nuw i64 %256, 32
  %270 = icmp eq i64 %269, %145
  br i1 %270, label %271, label %255, !llvm.loop !427

271:                                              ; preds = %255
  br i1 %146, label %307, label %272

272:                                              ; preds = %250, %238, %271
  %273 = phi i64 [ 0, %250 ], [ 0, %238 ], [ %145, %271 ]
  %274 = xor i64 %273, -1
  %275 = add nsw i64 %274, %109
  br i1 %148, label %285, label %276

276:                                              ; preds = %272, %276
  %277 = phi i64 [ %282, %276 ], [ %273, %272 ]
  %278 = phi i64 [ %283, %276 ], [ 0, %272 ]
  %279 = getelementptr inbounds float, ptr %249, i64 %277
  %280 = load float, ptr %279, align 4, !tbaa !65
  %281 = getelementptr inbounds float, ptr %245, i64 %277
  store float %280, ptr %281, align 4, !tbaa !65
  %282 = add nuw nsw i64 %277, 1
  %283 = add i64 %278, 1
  %284 = icmp eq i64 %283, %147
  br i1 %284, label %285, label %276, !llvm.loop !428

285:                                              ; preds = %276, %272
  %286 = phi i64 [ %273, %272 ], [ %282, %276 ]
  %287 = icmp ult i64 %275, 3
  br i1 %287, label %307, label %288

288:                                              ; preds = %285, %288
  %289 = phi i64 [ %305, %288 ], [ %286, %285 ]
  %290 = getelementptr inbounds float, ptr %249, i64 %289
  %291 = load float, ptr %290, align 4, !tbaa !65
  %292 = getelementptr inbounds float, ptr %245, i64 %289
  store float %291, ptr %292, align 4, !tbaa !65
  %293 = add nuw nsw i64 %289, 1
  %294 = getelementptr inbounds float, ptr %249, i64 %293
  %295 = load float, ptr %294, align 4, !tbaa !65
  %296 = getelementptr inbounds float, ptr %245, i64 %293
  store float %295, ptr %296, align 4, !tbaa !65
  %297 = add nuw nsw i64 %289, 2
  %298 = getelementptr inbounds float, ptr %249, i64 %297
  %299 = load float, ptr %298, align 4, !tbaa !65
  %300 = getelementptr inbounds float, ptr %245, i64 %297
  store float %299, ptr %300, align 4, !tbaa !65
  %301 = add nuw nsw i64 %289, 3
  %302 = getelementptr inbounds float, ptr %249, i64 %301
  %303 = load float, ptr %302, align 4, !tbaa !65
  %304 = getelementptr inbounds float, ptr %245, i64 %301
  store float %303, ptr %304, align 4, !tbaa !65
  %305 = add nuw nsw i64 %289, 4
  %306 = icmp eq i64 %305, %106
  br i1 %306, label %307, label %288, !llvm.loop !429

307:                                              ; preds = %285, %288, %271
  %308 = shl i32 %239, %64
  %309 = add nsw i32 %308, %63
  %310 = mul nsw i32 %309, %6
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds i8, ptr %227, i64 %311
  %313 = getelementptr inbounds i8, ptr %227, i64 %248
  br i1 %149, label %336, label %314

314:                                              ; preds = %307
  %315 = add i64 %234, %311
  %316 = add i64 %235, %248
  %317 = sub i64 %315, %316
  %318 = icmp ult i64 %317, 128
  br i1 %318, label %336, label %319

319:                                              ; preds = %314, %319
  %320 = phi i64 [ %333, %319 ], [ 0, %314 ]
  %321 = getelementptr inbounds float, ptr %313, i64 %320
  %322 = load <8 x float>, ptr %321, align 4, !tbaa !65
  %323 = getelementptr inbounds float, ptr %321, i64 8
  %324 = load <8 x float>, ptr %323, align 4, !tbaa !65
  %325 = getelementptr inbounds float, ptr %321, i64 16
  %326 = load <8 x float>, ptr %325, align 4, !tbaa !65
  %327 = getelementptr inbounds float, ptr %321, i64 24
  %328 = load <8 x float>, ptr %327, align 4, !tbaa !65
  %329 = getelementptr inbounds float, ptr %312, i64 %320
  store <8 x float> %322, ptr %329, align 4, !tbaa !65
  %330 = getelementptr inbounds float, ptr %329, i64 8
  store <8 x float> %324, ptr %330, align 4, !tbaa !65
  %331 = getelementptr inbounds float, ptr %329, i64 16
  store <8 x float> %326, ptr %331, align 4, !tbaa !65
  %332 = getelementptr inbounds float, ptr %329, i64 24
  store <8 x float> %328, ptr %332, align 4, !tbaa !65
  %333 = add nuw i64 %320, 32
  %334 = icmp eq i64 %333, %150
  br i1 %334, label %335, label %319, !llvm.loop !430

335:                                              ; preds = %319
  br i1 %151, label %371, label %336

336:                                              ; preds = %314, %307, %335
  %337 = phi i64 [ 0, %314 ], [ 0, %307 ], [ %150, %335 ]
  %338 = xor i64 %337, -1
  %339 = add nsw i64 %338, %109
  br i1 %153, label %349, label %340

340:                                              ; preds = %336, %340
  %341 = phi i64 [ %346, %340 ], [ %337, %336 ]
  %342 = phi i64 [ %347, %340 ], [ 0, %336 ]
  %343 = getelementptr inbounds float, ptr %313, i64 %341
  %344 = load float, ptr %343, align 4, !tbaa !65
  %345 = getelementptr inbounds float, ptr %312, i64 %341
  store float %344, ptr %345, align 4, !tbaa !65
  %346 = add nuw nsw i64 %341, 1
  %347 = add i64 %342, 1
  %348 = icmp eq i64 %347, %152
  br i1 %348, label %349, label %340, !llvm.loop !431

349:                                              ; preds = %340, %336
  %350 = phi i64 [ %337, %336 ], [ %346, %340 ]
  %351 = icmp ult i64 %339, 3
  br i1 %351, label %371, label %352

352:                                              ; preds = %349, %352
  %353 = phi i64 [ %369, %352 ], [ %350, %349 ]
  %354 = getelementptr inbounds float, ptr %313, i64 %353
  %355 = load float, ptr %354, align 4, !tbaa !65
  %356 = getelementptr inbounds float, ptr %312, i64 %353
  store float %355, ptr %356, align 4, !tbaa !65
  %357 = add nuw nsw i64 %353, 1
  %358 = getelementptr inbounds float, ptr %313, i64 %357
  %359 = load float, ptr %358, align 4, !tbaa !65
  %360 = getelementptr inbounds float, ptr %312, i64 %357
  store float %359, ptr %360, align 4, !tbaa !65
  %361 = add nuw nsw i64 %353, 2
  %362 = getelementptr inbounds float, ptr %313, i64 %361
  %363 = load float, ptr %362, align 4, !tbaa !65
  %364 = getelementptr inbounds float, ptr %312, i64 %361
  store float %363, ptr %364, align 4, !tbaa !65
  %365 = add nuw nsw i64 %353, 3
  %366 = getelementptr inbounds float, ptr %313, i64 %365
  %367 = load float, ptr %366, align 4, !tbaa !65
  %368 = getelementptr inbounds float, ptr %312, i64 %365
  store float %367, ptr %368, align 4, !tbaa !65
  %369 = add nuw nsw i64 %353, 4
  %370 = icmp eq i64 %369, %106
  br i1 %370, label %371, label %352, !llvm.loop !432

371:                                              ; preds = %349, %352, %335
  %372 = add nuw nsw i32 %239, 1
  %373 = icmp eq i32 %372, %12
  br i1 %373, label %521, label %238, !llvm.loop !433

374:                                              ; preds = %178, %518
  %375 = phi i32 [ 0, %178 ], [ %519, %518 ]
  %376 = sub nsw i32 %12, %375
  %377 = mul nsw i32 %375, %63
  %378 = add nsw i32 %377, %12
  %379 = shl i32 %378, %64
  %380 = add nsw i32 %379, %63
  %381 = mul nsw i32 %380, %6
  %382 = sext i32 %381 to i64
  %383 = getelementptr i8, ptr %199, i64 %382
  %384 = sub i32 %67, %376
  %385 = select i1 %204, i32 %376, i32 %384
  %386 = add i32 %385, %68
  %387 = mul nsw i32 %386, %6
  %388 = sext i32 %387 to i64
  %389 = getelementptr i8, ptr %205, i64 %388
  br i1 %108, label %390, label %448

390:                                              ; preds = %374
  br i1 %134, label %413, label %391

391:                                              ; preds = %390
  %392 = add i64 %212, %382
  %393 = add i64 %213, %388
  %394 = sub i64 %392, %393
  %395 = icmp ult i64 %394, 128
  br i1 %395, label %413, label %396

396:                                              ; preds = %391, %396
  %397 = phi i64 [ %410, %396 ], [ 0, %391 ]
  %398 = getelementptr inbounds float, ptr %389, i64 %397
  %399 = load <8 x float>, ptr %398, align 4, !tbaa !65
  %400 = getelementptr inbounds float, ptr %398, i64 8
  %401 = load <8 x float>, ptr %400, align 4, !tbaa !65
  %402 = getelementptr inbounds float, ptr %398, i64 16
  %403 = load <8 x float>, ptr %402, align 4, !tbaa !65
  %404 = getelementptr inbounds float, ptr %398, i64 24
  %405 = load <8 x float>, ptr %404, align 4, !tbaa !65
  %406 = getelementptr inbounds float, ptr %383, i64 %397
  store <8 x float> %399, ptr %406, align 4, !tbaa !65
  %407 = getelementptr inbounds float, ptr %406, i64 8
  store <8 x float> %401, ptr %407, align 4, !tbaa !65
  %408 = getelementptr inbounds float, ptr %406, i64 16
  store <8 x float> %403, ptr %408, align 4, !tbaa !65
  %409 = getelementptr inbounds float, ptr %406, i64 24
  store <8 x float> %405, ptr %409, align 4, !tbaa !65
  %410 = add nuw i64 %397, 32
  %411 = icmp eq i64 %410, %135
  br i1 %411, label %412, label %396, !llvm.loop !434

412:                                              ; preds = %396
  br i1 %136, label %448, label %413

413:                                              ; preds = %391, %390, %412
  %414 = phi i64 [ 0, %391 ], [ 0, %390 ], [ %135, %412 ]
  %415 = xor i64 %414, -1
  %416 = add nsw i64 %415, %109
  br i1 %138, label %426, label %417

417:                                              ; preds = %413, %417
  %418 = phi i64 [ %423, %417 ], [ %414, %413 ]
  %419 = phi i64 [ %424, %417 ], [ 0, %413 ]
  %420 = getelementptr inbounds float, ptr %389, i64 %418
  %421 = load float, ptr %420, align 4, !tbaa !65
  %422 = getelementptr inbounds float, ptr %383, i64 %418
  store float %421, ptr %422, align 4, !tbaa !65
  %423 = add nuw nsw i64 %418, 1
  %424 = add i64 %419, 1
  %425 = icmp eq i64 %424, %137
  br i1 %425, label %426, label %417, !llvm.loop !435

426:                                              ; preds = %417, %413
  %427 = phi i64 [ %414, %413 ], [ %423, %417 ]
  %428 = icmp ult i64 %416, 3
  br i1 %428, label %448, label %429

429:                                              ; preds = %426, %429
  %430 = phi i64 [ %446, %429 ], [ %427, %426 ]
  %431 = getelementptr inbounds float, ptr %389, i64 %430
  %432 = load float, ptr %431, align 4, !tbaa !65
  %433 = getelementptr inbounds float, ptr %383, i64 %430
  store float %432, ptr %433, align 4, !tbaa !65
  %434 = add nuw nsw i64 %430, 1
  %435 = getelementptr inbounds float, ptr %389, i64 %434
  %436 = load float, ptr %435, align 4, !tbaa !65
  %437 = getelementptr inbounds float, ptr %383, i64 %434
  store float %436, ptr %437, align 4, !tbaa !65
  %438 = add nuw nsw i64 %430, 2
  %439 = getelementptr inbounds float, ptr %389, i64 %438
  %440 = load float, ptr %439, align 4, !tbaa !65
  %441 = getelementptr inbounds float, ptr %383, i64 %438
  store float %440, ptr %441, align 4, !tbaa !65
  %442 = add nuw nsw i64 %430, 3
  %443 = getelementptr inbounds float, ptr %389, i64 %442
  %444 = load float, ptr %443, align 4, !tbaa !65
  %445 = getelementptr inbounds float, ptr %383, i64 %442
  store float %444, ptr %445, align 4, !tbaa !65
  %446 = add nuw nsw i64 %430, 4
  %447 = icmp eq i64 %446, %109
  br i1 %447, label %448, label %429, !llvm.loop !436

448:                                              ; preds = %426, %429, %412, %374
  %449 = add nsw i32 %375, %70
  %450 = shl i32 %449, %64
  %451 = add nsw i32 %450, %63
  %452 = mul nsw i32 %451, %6
  %453 = sext i32 %452 to i64
  %454 = getelementptr i8, ptr %199, i64 %453
  %455 = select i1 %208, i32 %376, i32 %384
  %456 = add i32 %455, %68
  %457 = mul nsw i32 %456, %6
  %458 = sext i32 %457 to i64
  %459 = getelementptr i8, ptr %209, i64 %458
  br i1 %108, label %460, label %518

460:                                              ; preds = %448
  br i1 %139, label %483, label %461

461:                                              ; preds = %460
  %462 = add i64 %210, %453
  %463 = add i64 %211, %458
  %464 = sub i64 %462, %463
  %465 = icmp ult i64 %464, 128
  br i1 %465, label %483, label %466

466:                                              ; preds = %461, %466
  %467 = phi i64 [ %480, %466 ], [ 0, %461 ]
  %468 = getelementptr inbounds float, ptr %459, i64 %467
  %469 = load <8 x float>, ptr %468, align 4, !tbaa !65
  %470 = getelementptr inbounds float, ptr %468, i64 8
  %471 = load <8 x float>, ptr %470, align 4, !tbaa !65
  %472 = getelementptr inbounds float, ptr %468, i64 16
  %473 = load <8 x float>, ptr %472, align 4, !tbaa !65
  %474 = getelementptr inbounds float, ptr %468, i64 24
  %475 = load <8 x float>, ptr %474, align 4, !tbaa !65
  %476 = getelementptr inbounds float, ptr %454, i64 %467
  store <8 x float> %469, ptr %476, align 4, !tbaa !65
  %477 = getelementptr inbounds float, ptr %476, i64 8
  store <8 x float> %471, ptr %477, align 4, !tbaa !65
  %478 = getelementptr inbounds float, ptr %476, i64 16
  store <8 x float> %473, ptr %478, align 4, !tbaa !65
  %479 = getelementptr inbounds float, ptr %476, i64 24
  store <8 x float> %475, ptr %479, align 4, !tbaa !65
  %480 = add nuw i64 %467, 32
  %481 = icmp eq i64 %480, %140
  br i1 %481, label %482, label %466, !llvm.loop !437

482:                                              ; preds = %466
  br i1 %141, label %518, label %483

483:                                              ; preds = %461, %460, %482
  %484 = phi i64 [ 0, %461 ], [ 0, %460 ], [ %140, %482 ]
  %485 = xor i64 %484, -1
  %486 = add nsw i64 %485, %109
  br i1 %143, label %496, label %487

487:                                              ; preds = %483, %487
  %488 = phi i64 [ %493, %487 ], [ %484, %483 ]
  %489 = phi i64 [ %494, %487 ], [ 0, %483 ]
  %490 = getelementptr inbounds float, ptr %459, i64 %488
  %491 = load float, ptr %490, align 4, !tbaa !65
  %492 = getelementptr inbounds float, ptr %454, i64 %488
  store float %491, ptr %492, align 4, !tbaa !65
  %493 = add nuw nsw i64 %488, 1
  %494 = add i64 %489, 1
  %495 = icmp eq i64 %494, %142
  br i1 %495, label %496, label %487, !llvm.loop !438

496:                                              ; preds = %487, %483
  %497 = phi i64 [ %484, %483 ], [ %493, %487 ]
  %498 = icmp ult i64 %486, 3
  br i1 %498, label %518, label %499

499:                                              ; preds = %496, %499
  %500 = phi i64 [ %516, %499 ], [ %497, %496 ]
  %501 = getelementptr inbounds float, ptr %459, i64 %500
  %502 = load float, ptr %501, align 4, !tbaa !65
  %503 = getelementptr inbounds float, ptr %454, i64 %500
  store float %502, ptr %503, align 4, !tbaa !65
  %504 = add nuw nsw i64 %500, 1
  %505 = getelementptr inbounds float, ptr %459, i64 %504
  %506 = load float, ptr %505, align 4, !tbaa !65
  %507 = getelementptr inbounds float, ptr %454, i64 %504
  store float %506, ptr %507, align 4, !tbaa !65
  %508 = add nuw nsw i64 %500, 2
  %509 = getelementptr inbounds float, ptr %459, i64 %508
  %510 = load float, ptr %509, align 4, !tbaa !65
  %511 = getelementptr inbounds float, ptr %454, i64 %508
  store float %510, ptr %511, align 4, !tbaa !65
  %512 = add nuw nsw i64 %500, 3
  %513 = getelementptr inbounds float, ptr %459, i64 %512
  %514 = load float, ptr %513, align 4, !tbaa !65
  %515 = getelementptr inbounds float, ptr %454, i64 %512
  store float %514, ptr %515, align 4, !tbaa !65
  %516 = add nuw nsw i64 %500, 4
  %517 = icmp eq i64 %516, %109
  br i1 %517, label %518, label %499, !llvm.loop !439

518:                                              ; preds = %496, %499, %482, %448
  %519 = add nuw i32 %375, 1
  %520 = icmp eq i32 %375, %81
  br i1 %520, label %214, label %374, !llvm.loop !440

521:                                              ; preds = %371, %215
  %522 = phi i64 [ %220, %215 ], [ %226, %371 ]
  %523 = getelementptr inbounds i8, ptr %103, i64 %522
  %524 = getelementptr inbounds i8, ptr %523, i64 %73
  br i1 %105, label %525, label %647

525:                                              ; preds = %521
  br i1 %154, label %547, label %526

526:                                              ; preds = %525
  %527 = add i64 %115, %522
  %528 = sub i64 %527, %117
  %529 = icmp ult i64 %528, 128
  br i1 %529, label %547, label %530

530:                                              ; preds = %526, %530
  %531 = phi i64 [ %544, %530 ], [ 0, %526 ]
  %532 = getelementptr inbounds float, ptr %103, i64 %531
  %533 = load <8 x float>, ptr %532, align 4, !tbaa !65
  %534 = getelementptr inbounds float, ptr %532, i64 8
  %535 = load <8 x float>, ptr %534, align 4, !tbaa !65
  %536 = getelementptr inbounds float, ptr %532, i64 16
  %537 = load <8 x float>, ptr %536, align 4, !tbaa !65
  %538 = getelementptr inbounds float, ptr %532, i64 24
  %539 = load <8 x float>, ptr %538, align 4, !tbaa !65
  %540 = getelementptr inbounds float, ptr %524, i64 %531
  store <8 x float> %533, ptr %540, align 4, !tbaa !65
  %541 = getelementptr inbounds float, ptr %540, i64 8
  store <8 x float> %535, ptr %541, align 4, !tbaa !65
  %542 = getelementptr inbounds float, ptr %540, i64 16
  store <8 x float> %537, ptr %542, align 4, !tbaa !65
  %543 = getelementptr inbounds float, ptr %540, i64 24
  store <8 x float> %539, ptr %543, align 4, !tbaa !65
  %544 = add nuw i64 %531, 32
  %545 = icmp eq i64 %544, %155
  br i1 %545, label %546, label %530, !llvm.loop !441

546:                                              ; preds = %530
  br i1 %156, label %582, label %547

547:                                              ; preds = %526, %525, %546
  %548 = phi i64 [ 0, %526 ], [ 0, %525 ], [ %155, %546 ]
  %549 = xor i64 %548, -1
  %550 = add nsw i64 %549, %109
  br i1 %158, label %560, label %551

551:                                              ; preds = %547, %551
  %552 = phi i64 [ %557, %551 ], [ %548, %547 ]
  %553 = phi i64 [ %558, %551 ], [ 0, %547 ]
  %554 = getelementptr inbounds float, ptr %103, i64 %552
  %555 = load float, ptr %554, align 4, !tbaa !65
  %556 = getelementptr inbounds float, ptr %524, i64 %552
  store float %555, ptr %556, align 4, !tbaa !65
  %557 = add nuw nsw i64 %552, 1
  %558 = add i64 %553, 1
  %559 = icmp eq i64 %558, %157
  br i1 %559, label %560, label %551, !llvm.loop !442

560:                                              ; preds = %551, %547
  %561 = phi i64 [ %548, %547 ], [ %557, %551 ]
  %562 = icmp ult i64 %550, 3
  br i1 %562, label %582, label %563

563:                                              ; preds = %560, %563
  %564 = phi i64 [ %580, %563 ], [ %561, %560 ]
  %565 = getelementptr inbounds float, ptr %103, i64 %564
  %566 = load float, ptr %565, align 4, !tbaa !65
  %567 = getelementptr inbounds float, ptr %524, i64 %564
  store float %566, ptr %567, align 4, !tbaa !65
  %568 = add nuw nsw i64 %564, 1
  %569 = getelementptr inbounds float, ptr %103, i64 %568
  %570 = load float, ptr %569, align 4, !tbaa !65
  %571 = getelementptr inbounds float, ptr %524, i64 %568
  store float %570, ptr %571, align 4, !tbaa !65
  %572 = add nuw nsw i64 %564, 2
  %573 = getelementptr inbounds float, ptr %103, i64 %572
  %574 = load float, ptr %573, align 4, !tbaa !65
  %575 = getelementptr inbounds float, ptr %524, i64 %572
  store float %574, ptr %575, align 4, !tbaa !65
  %576 = add nuw nsw i64 %564, 3
  %577 = getelementptr inbounds float, ptr %103, i64 %576
  %578 = load float, ptr %577, align 4, !tbaa !65
  %579 = getelementptr inbounds float, ptr %524, i64 %576
  store float %578, ptr %579, align 4, !tbaa !65
  %580 = add nuw nsw i64 %564, 4
  %581 = icmp eq i64 %580, %106
  br i1 %581, label %582, label %563, !llvm.loop !443

582:                                              ; preds = %560, %563, %546
  %583 = getelementptr inbounds i8, ptr %523, i64 %78
  %584 = getelementptr inbounds ptr, ptr %100, i64 %165
  %585 = load ptr, ptr %584, align 8, !tbaa !14
  %586 = ptrtoint ptr %585 to i64
  %587 = getelementptr inbounds %struct.CCGVert, ptr %585, i64 1
  %588 = getelementptr i8, ptr %587, i64 %80
  br i1 %105, label %589, label %647

589:                                              ; preds = %582
  br i1 %159, label %612, label %590

590:                                              ; preds = %589
  %591 = add i64 %112, %522
  %592 = add i64 %84, %586
  %593 = sub i64 %591, %592
  %594 = icmp ult i64 %593, 128
  br i1 %594, label %612, label %595

595:                                              ; preds = %590, %595
  %596 = phi i64 [ %609, %595 ], [ 0, %590 ]
  %597 = getelementptr inbounds float, ptr %588, i64 %596
  %598 = load <8 x float>, ptr %597, align 4, !tbaa !65
  %599 = getelementptr inbounds float, ptr %597, i64 8
  %600 = load <8 x float>, ptr %599, align 4, !tbaa !65
  %601 = getelementptr inbounds float, ptr %597, i64 16
  %602 = load <8 x float>, ptr %601, align 4, !tbaa !65
  %603 = getelementptr inbounds float, ptr %597, i64 24
  %604 = load <8 x float>, ptr %603, align 4, !tbaa !65
  %605 = getelementptr inbounds float, ptr %583, i64 %596
  store <8 x float> %598, ptr %605, align 4, !tbaa !65
  %606 = getelementptr inbounds float, ptr %605, i64 8
  store <8 x float> %600, ptr %606, align 4, !tbaa !65
  %607 = getelementptr inbounds float, ptr %605, i64 16
  store <8 x float> %602, ptr %607, align 4, !tbaa !65
  %608 = getelementptr inbounds float, ptr %605, i64 24
  store <8 x float> %604, ptr %608, align 4, !tbaa !65
  %609 = add nuw i64 %596, 32
  %610 = icmp eq i64 %609, %160
  br i1 %610, label %611, label %595, !llvm.loop !444

611:                                              ; preds = %595
  br i1 %161, label %647, label %612

612:                                              ; preds = %590, %589, %611
  %613 = phi i64 [ 0, %590 ], [ 0, %589 ], [ %160, %611 ]
  %614 = xor i64 %613, -1
  %615 = add nsw i64 %614, %109
  br i1 %163, label %625, label %616

616:                                              ; preds = %612, %616
  %617 = phi i64 [ %622, %616 ], [ %613, %612 ]
  %618 = phi i64 [ %623, %616 ], [ 0, %612 ]
  %619 = getelementptr inbounds float, ptr %588, i64 %617
  %620 = load float, ptr %619, align 4, !tbaa !65
  %621 = getelementptr inbounds float, ptr %583, i64 %617
  store float %620, ptr %621, align 4, !tbaa !65
  %622 = add nuw nsw i64 %617, 1
  %623 = add i64 %618, 1
  %624 = icmp eq i64 %623, %162
  br i1 %624, label %625, label %616, !llvm.loop !445

625:                                              ; preds = %616, %612
  %626 = phi i64 [ %613, %612 ], [ %622, %616 ]
  %627 = icmp ult i64 %615, 3
  br i1 %627, label %647, label %628

628:                                              ; preds = %625, %628
  %629 = phi i64 [ %645, %628 ], [ %626, %625 ]
  %630 = getelementptr inbounds float, ptr %588, i64 %629
  %631 = load float, ptr %630, align 4, !tbaa !65
  %632 = getelementptr inbounds float, ptr %583, i64 %629
  store float %631, ptr %632, align 4, !tbaa !65
  %633 = add nuw nsw i64 %629, 1
  %634 = getelementptr inbounds float, ptr %588, i64 %633
  %635 = load float, ptr %634, align 4, !tbaa !65
  %636 = getelementptr inbounds float, ptr %583, i64 %633
  store float %635, ptr %636, align 4, !tbaa !65
  %637 = add nuw nsw i64 %629, 2
  %638 = getelementptr inbounds float, ptr %588, i64 %637
  %639 = load float, ptr %638, align 4, !tbaa !65
  %640 = getelementptr inbounds float, ptr %583, i64 %637
  store float %639, ptr %640, align 4, !tbaa !65
  %641 = add nuw nsw i64 %629, 3
  %642 = getelementptr inbounds float, ptr %588, i64 %641
  %643 = load float, ptr %642, align 4, !tbaa !65
  %644 = getelementptr inbounds float, ptr %583, i64 %641
  store float %643, ptr %644, align 4, !tbaa !65
  %645 = add nuw nsw i64 %629, 4
  %646 = icmp eq i64 %645, %106
  br i1 %646, label %647, label %628, !llvm.loop !446

647:                                              ; preds = %625, %628, %611, %221, %521, %582
  %648 = add nuw nsw i64 %165, 1
  %649 = icmp eq i64 %648, %107
  br i1 %649, label %650, label %164, !llvm.loop !447

650:                                              ; preds = %647, %90
  %651 = add nuw nsw i64 %91, 1
  %652 = icmp eq i64 %651, %82
  br i1 %652, label %653, label %90, !llvm.loop !448

653:                                              ; preds = %650, %55
  br i1 %13, label %654, label %657

654:                                              ; preds = %14, %653
  %655 = phi ptr [ %57, %653 ], [ %22, %14 ]
  %656 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  tail call void %656(ptr noundef %655) #23
  br label %657

657:                                              ; preds = %654, %653
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @ccgSubSurf_stitchFaces(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #1 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #23
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #23
  %9 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %10 = load i32, ptr %9, align 8, !tbaa !37
  %11 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %12 = load i32, ptr %11, align 8, !tbaa !32
  %13 = freeze i32 %12
  %14 = icmp eq i32 %1, 0
  %15 = select i1 %14, i32 %13, i32 %1
  %16 = add i32 %15, -1
  %17 = shl nuw i32 1, %16
  %18 = shl nuw i32 1, %15
  %19 = icmp eq ptr %2, null
  br i1 %19, label %20, label %61

20:                                               ; preds = %4
  %21 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !14
  %22 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %22, align 8, !tbaa !29
  %24 = getelementptr inbounds %struct._EHash, ptr %23, i64 0, i32 1
  %25 = load i32, ptr %24, align 8, !tbaa !22
  %26 = sext i32 %25 to i64
  %27 = shl nsw i64 %26, 3
  %28 = tail call ptr %21(i64 noundef %27, ptr noundef nonnull @.str.5) #23
  %29 = load ptr, ptr %22, align 8, !tbaa !29
  %30 = getelementptr inbounds %struct._EHash, ptr %29, i64 0, i32 2
  %31 = load i32, ptr %30, align 4, !tbaa !24
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %61

33:                                               ; preds = %20, %53
  %34 = phi ptr [ %54, %53 ], [ %29, %20 ]
  %35 = phi i64 [ %56, %53 ], [ 0, %20 ]
  %36 = phi i32 [ %55, %53 ], [ 0, %20 ]
  %37 = load ptr, ptr %34, align 8, !tbaa !26
  %38 = getelementptr inbounds ptr, ptr %37, i64 %35
  %39 = load ptr, ptr %38, align 8, !tbaa !14
  %40 = icmp eq ptr %39, null
  br i1 %40, label %53, label %41

41:                                               ; preds = %33
  %42 = sext i32 %36 to i64
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ %42, %41 ], [ %46, %43 ]
  %45 = phi ptr [ %39, %41 ], [ %48, %43 ]
  %46 = add i64 %44, 1
  %47 = getelementptr inbounds ptr, ptr %28, i64 %44
  store ptr %45, ptr %47, align 8, !tbaa !14
  %48 = load ptr, ptr %45, align 8, !tbaa !14
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %43, !llvm.loop !406

50:                                               ; preds = %43
  %51 = trunc i64 %46 to i32
  %52 = load ptr, ptr %22, align 8, !tbaa !29
  br label %53

53:                                               ; preds = %50, %33
  %54 = phi ptr [ %34, %33 ], [ %52, %50 ]
  %55 = phi i32 [ %36, %33 ], [ %51, %50 ]
  %56 = add nuw nsw i64 %35, 1
  %57 = getelementptr inbounds %struct._EHash, ptr %54, i64 0, i32 2
  %58 = load i32, ptr %57, align 4, !tbaa !24
  %59 = sext i32 %58 to i64
  %60 = icmp slt i64 %56, %59
  br i1 %60, label %33, label %61, !llvm.loop !407

61:                                               ; preds = %53, %20, %4
  %62 = phi i32 [ %3, %4 ], [ 0, %20 ], [ %55, %53 ]
  %63 = phi ptr [ %2, %4 ], [ %28, %20 ], [ %28, %53 ]
  call fastcc void @ccgSubSurf__effectedFaceNeighbours(ptr noundef %0, ptr noundef %63, i32 noundef %62, ptr noundef nonnull %5, ptr noundef nonnull %7, ptr noundef nonnull %6, ptr noundef nonnull %8)
  %64 = load i32, ptr %7, align 4, !tbaa !31
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %66, label %91

66:                                               ; preds = %61
  %67 = load ptr, ptr %5, align 8, !tbaa !14
  %68 = mul nsw i32 %15, %10
  %69 = sext i32 %68 to i64
  %70 = getelementptr i8, ptr %0, i64 36
  %71 = zext i32 %64 to i64
  %72 = and i64 %71, 1
  %73 = icmp eq i32 %64, 1
  br i1 %73, label %76, label %74

74:                                               ; preds = %66
  %75 = and i64 %71, 4294967294
  br label %110

76:                                               ; preds = %137, %66
  %77 = phi i64 [ 0, %66 ], [ %138, %137 ]
  %78 = icmp eq i64 %72, 0
  br i1 %78, label %91, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds ptr, ptr %67, i64 %77
  %81 = load ptr, ptr %80, align 8, !tbaa !14
  %82 = getelementptr inbounds %struct.CCGVert, ptr %81, i64 0, i32 3
  %83 = load i16, ptr %82, align 2, !tbaa !78
  %84 = icmp eq i16 %83, 0
  br i1 %84, label %91, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %struct.CCGVert, ptr %81, i64 1
  %87 = getelementptr inbounds i8, ptr %86, i64 %69
  %88 = load i32, ptr %70, align 4, !tbaa !74
  %89 = sext i32 %88 to i64
  %90 = shl nsw i64 %89, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %87, i8 0, i64 %90, i1 false)
  br label %91

91:                                               ; preds = %76, %85, %79, %61
  %92 = load i32, ptr %8, align 4, !tbaa !31
  %93 = icmp sgt i32 %92, 0
  br i1 %93, label %94, label %141

94:                                               ; preds = %91
  %95 = load ptr, ptr %6, align 8, !tbaa !14
  %96 = icmp eq i32 %15, 31
  %97 = getelementptr i8, ptr %0, i64 36
  br i1 %96, label %141, label %98

98:                                               ; preds = %94
  %99 = add i32 %16, %18
  %100 = sext i32 %99 to i64
  %101 = sext i32 %10 to i64
  %102 = tail call i32 @llvm.smax.i32(i32 %18, i32 0)
  %103 = add nuw i32 %102, 1
  %104 = zext i32 %92 to i64
  %105 = zext i32 %103 to i64
  %106 = and i64 %105, 3
  %107 = icmp ult i32 %102, 3
  %108 = and i64 %105, 4294967292
  %109 = icmp eq i64 %106, 0
  br label %181

110:                                              ; preds = %137, %74
  %111 = phi i64 [ 0, %74 ], [ %138, %137 ]
  %112 = phi i64 [ 0, %74 ], [ %139, %137 ]
  %113 = getelementptr inbounds ptr, ptr %67, i64 %111
  %114 = load ptr, ptr %113, align 8, !tbaa !14
  %115 = getelementptr inbounds %struct.CCGVert, ptr %114, i64 0, i32 3
  %116 = load i16, ptr %115, align 2, !tbaa !78
  %117 = icmp eq i16 %116, 0
  br i1 %117, label %124, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %struct.CCGVert, ptr %114, i64 1
  %120 = getelementptr inbounds i8, ptr %119, i64 %69
  %121 = load i32, ptr %70, align 4, !tbaa !74
  %122 = sext i32 %121 to i64
  %123 = shl nsw i64 %122, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %120, i8 0, i64 %123, i1 false)
  br label %124

124:                                              ; preds = %118, %110
  %125 = or i64 %111, 1
  %126 = getelementptr inbounds ptr, ptr %67, i64 %125
  %127 = load ptr, ptr %126, align 8, !tbaa !14
  %128 = getelementptr inbounds %struct.CCGVert, ptr %127, i64 0, i32 3
  %129 = load i16, ptr %128, align 2, !tbaa !78
  %130 = icmp eq i16 %129, 0
  br i1 %130, label %137, label %131

131:                                              ; preds = %124
  %132 = getelementptr inbounds %struct.CCGVert, ptr %127, i64 1
  %133 = getelementptr inbounds i8, ptr %132, i64 %69
  %134 = load i32, ptr %70, align 4, !tbaa !74
  %135 = sext i32 %134 to i64
  %136 = shl nsw i64 %135, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %133, i8 0, i64 %136, i1 false)
  br label %137

137:                                              ; preds = %131, %124
  %138 = add nuw nsw i64 %111, 2
  %139 = add i64 %112, 2
  %140 = icmp eq i64 %139, %75
  br i1 %140, label %76, label %110, !llvm.loop !449

141:                                              ; preds = %237, %94, %91
  %142 = icmp sgt i32 %62, 0
  br i1 %142, label %143, label %240

143:                                              ; preds = %141
  %144 = getelementptr i8, ptr %0, i64 36
  %145 = icmp eq i32 %16, 31
  %146 = add nsw i32 %13, -1
  %147 = shl nuw i32 1, %146
  %148 = add nuw i32 %147, 1
  %149 = sub nsw i32 %13, %15
  %150 = add nuw i32 %147, 2
  %151 = mul i32 %148, %150
  %152 = mul nsw i32 %148, %10
  %153 = sext i32 %152 to i64
  %154 = mul nsw i32 %15, %10
  %155 = sext i32 %154 to i64
  %156 = shl i32 %150, %16
  %157 = shl i32 %156, %149
  %158 = add nsw i32 %157, %148
  %159 = mul nsw i32 %158, %10
  %160 = sext i32 %159 to i64
  %161 = icmp sgt i32 %17, 1
  %162 = add i32 %16, %18
  %163 = shl i32 %148, %16
  %164 = tail call i32 @llvm.smax.i32(i32 %17, i32 0)
  %165 = tail call i32 @llvm.smax.i32(i32 %17, i32 1)
  %166 = zext i32 %62 to i64
  %167 = mul i32 %10, %150
  %168 = mul i32 %167, %148
  %169 = mul i32 %10, %150
  %170 = mul i32 %169, %148
  %171 = add nsw i64 %155, 40
  %172 = add nsw i64 %160, 24
  %173 = add nsw i64 %153, 24
  %174 = mul i32 %10, %150
  %175 = mul i32 %174, %148
  %176 = add nuw i32 %164, 1
  %177 = and i32 %176, 1
  %178 = icmp eq i32 %16, 31
  %179 = and i32 %176, -2
  %180 = icmp eq i32 %177, 0
  br label %247

181:                                              ; preds = %98, %237
  %182 = phi i64 [ 0, %98 ], [ %238, %237 ]
  %183 = getelementptr inbounds ptr, ptr %95, i64 %182
  %184 = load ptr, ptr %183, align 8, !tbaa !14
  %185 = getelementptr inbounds %struct.CCGEdge, ptr %184, i64 0, i32 2
  %186 = load i16, ptr %185, align 8, !tbaa !81
  %187 = icmp eq i16 %186, 0
  br i1 %187, label %237, label %188

188:                                              ; preds = %181
  %189 = getelementptr inbounds %struct.CCGEdge, ptr %184, i64 1
  br i1 %107, label %223, label %190

190:                                              ; preds = %188, %190
  %191 = phi i64 [ %220, %190 ], [ 0, %188 ]
  %192 = phi i64 [ %221, %190 ], [ 0, %188 ]
  %193 = add nsw i64 %191, %100
  %194 = mul nsw i64 %193, %101
  %195 = getelementptr inbounds i8, ptr %189, i64 %194
  %196 = load i32, ptr %97, align 4, !tbaa !74
  %197 = sext i32 %196 to i64
  %198 = shl nsw i64 %197, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %195, i8 0, i64 %198, i1 false)
  %199 = or i64 %191, 1
  %200 = add nsw i64 %199, %100
  %201 = mul nsw i64 %200, %101
  %202 = getelementptr inbounds i8, ptr %189, i64 %201
  %203 = load i32, ptr %97, align 4, !tbaa !74
  %204 = sext i32 %203 to i64
  %205 = shl nsw i64 %204, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %202, i8 0, i64 %205, i1 false)
  %206 = or i64 %191, 2
  %207 = add nsw i64 %206, %100
  %208 = mul nsw i64 %207, %101
  %209 = getelementptr inbounds i8, ptr %189, i64 %208
  %210 = load i32, ptr %97, align 4, !tbaa !74
  %211 = sext i32 %210 to i64
  %212 = shl nsw i64 %211, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %209, i8 0, i64 %212, i1 false)
  %213 = or i64 %191, 3
  %214 = add nsw i64 %213, %100
  %215 = mul nsw i64 %214, %101
  %216 = getelementptr inbounds i8, ptr %189, i64 %215
  %217 = load i32, ptr %97, align 4, !tbaa !74
  %218 = sext i32 %217 to i64
  %219 = shl nsw i64 %218, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %216, i8 0, i64 %219, i1 false)
  %220 = add nuw nsw i64 %191, 4
  %221 = add i64 %192, 4
  %222 = icmp eq i64 %221, %108
  br i1 %222, label %223, label %190, !llvm.loop !450

223:                                              ; preds = %190, %188
  %224 = phi i64 [ 0, %188 ], [ %220, %190 ]
  br i1 %109, label %237, label %225

225:                                              ; preds = %223, %225
  %226 = phi i64 [ %234, %225 ], [ %224, %223 ]
  %227 = phi i64 [ %235, %225 ], [ 0, %223 ]
  %228 = add nsw i64 %226, %100
  %229 = mul nsw i64 %228, %101
  %230 = getelementptr inbounds i8, ptr %189, i64 %229
  %231 = load i32, ptr %97, align 4, !tbaa !74
  %232 = sext i32 %231 to i64
  %233 = shl nsw i64 %232, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %230, i8 0, i64 %233, i1 false)
  %234 = add nuw nsw i64 %226, 1
  %235 = add i64 %227, 1
  %236 = icmp eq i64 %235, %106
  br i1 %236, label %237, label %225, !llvm.loop !451

237:                                              ; preds = %223, %225, %181
  %238 = add nuw nsw i64 %182, 1
  %239 = icmp eq i64 %238, %104
  br i1 %239, label %141, label %181, !llvm.loop !452

240:                                              ; preds = %1020, %141
  br i1 %65, label %241, label %1023

241:                                              ; preds = %240
  %242 = load ptr, ptr %5, align 8, !tbaa !14
  %243 = mul nsw i32 %15, %10
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 3
  %246 = zext i32 %64 to i64
  br label %1060

247:                                              ; preds = %143, %1020
  %248 = phi i64 [ 0, %143 ], [ %1021, %1020 ]
  %249 = getelementptr inbounds ptr, ptr %63, i64 %248
  %250 = load ptr, ptr %249, align 8, !tbaa !14
  %251 = getelementptr inbounds %struct.CCGFace, ptr %250, i64 1
  %252 = getelementptr inbounds %struct.CCGFace, ptr %250, i64 0, i32 2
  %253 = load i16, ptr %252, align 8, !tbaa !89
  %254 = sext i16 %253 to i64
  %255 = getelementptr inbounds ptr, ptr %251, i64 %254
  %256 = getelementptr inbounds ptr, ptr %255, i64 %254
  %257 = load i32, ptr %144, align 4, !tbaa !74
  %258 = sext i32 %257 to i64
  %259 = shl nsw i64 %258, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %256, i8 0, i64 %259, i1 false)
  %260 = load i16, ptr %252, align 8, !tbaa !89
  %261 = icmp sgt i16 %260, 0
  br i1 %261, label %262, label %1020

262:                                              ; preds = %247
  br i1 %145, label %265, label %346

263:                                              ; preds = %399
  %264 = icmp sgt i16 %401, 0
  br i1 %264, label %265, label %1020

265:                                              ; preds = %262, %263
  %266 = phi i16 [ %401, %263 ], [ %260, %262 ]
  %267 = zext i16 %266 to i32
  %268 = add nsw i32 %267, -1
  %269 = zext i16 %266 to i64
  %270 = getelementptr inbounds ptr, ptr %251, i64 %269
  %271 = getelementptr ptr, ptr %270, i64 %269
  %272 = load i32, ptr %144, align 4, !tbaa !74
  %273 = icmp sgt i32 %272, 0
  %274 = zext i32 %272 to i64
  %275 = zext i16 %266 to i64
  %276 = shl nuw nsw i64 %274, 2
  %277 = getelementptr i8, ptr %250, i64 24
  %278 = shl nuw nsw i64 %275, 4
  %279 = add nuw nsw i64 %278, %276
  %280 = getelementptr i8, ptr %277, i64 %279
  %281 = shl nuw nsw i64 %274, 2
  %282 = getelementptr i8, ptr %250, i64 24
  %283 = shl nuw nsw i64 %275, 4
  %284 = add nuw nsw i64 %283, %281
  %285 = getelementptr i8, ptr %282, i64 %284
  %286 = getelementptr i8, ptr %250, i64 24
  %287 = shl nuw nsw i64 %275, 4
  %288 = shl nuw nsw i64 %274, 2
  %289 = add nuw nsw i64 %287, %288
  %290 = getelementptr i8, ptr %286, i64 %289
  %291 = getelementptr i8, ptr %250, i64 24
  %292 = getelementptr i8, ptr %291, i64 %289
  %293 = getelementptr i8, ptr %250, i64 24
  %294 = shl nuw nsw i64 %275, 4
  %295 = shl nuw nsw i64 %274, 2
  %296 = add nuw nsw i64 %294, %295
  %297 = getelementptr i8, ptr %293, i64 %296
  %298 = getelementptr i8, ptr %250, i64 24
  %299 = getelementptr i8, ptr %298, i64 %296
  %300 = shl nuw nsw i64 %274, 2
  %301 = getelementptr i8, ptr %250, i64 %172
  %302 = shl nuw nsw i64 %275, 4
  %303 = getelementptr i8, ptr %301, i64 %302
  %304 = getelementptr i8, ptr %250, i64 %172
  %305 = add nuw nsw i64 %302, %300
  %306 = getelementptr i8, ptr %304, i64 %305
  %307 = getelementptr i8, ptr %250, i64 24
  %308 = shl nuw nsw i64 %275, 4
  %309 = shl nuw nsw i64 %274, 2
  %310 = add nuw nsw i64 %308, %309
  %311 = getelementptr i8, ptr %307, i64 %310
  %312 = getelementptr i8, ptr %250, i64 %173
  %313 = getelementptr i8, ptr %312, i64 %308
  %314 = getelementptr i8, ptr %250, i64 %173
  %315 = getelementptr i8, ptr %314, i64 %310
  %316 = icmp ult i32 %272, 32
  %317 = and i64 %274, 4294967264
  %318 = icmp eq i64 %317, %274
  %319 = and i64 %274, 3
  %320 = icmp eq i64 %319, 0
  %321 = icmp ult i32 %272, 32
  %322 = and i64 %274, 4294967264
  %323 = icmp eq i64 %322, %274
  %324 = and i64 %274, 3
  %325 = icmp eq i64 %324, 0
  %326 = icmp ult i32 %272, 32
  %327 = and i64 %274, 4294967264
  %328 = icmp eq i64 %327, %274
  %329 = and i64 %274, 3
  %330 = icmp eq i64 %329, 0
  %331 = icmp ult i32 %272, 32
  %332 = and i64 %274, 4294967264
  %333 = icmp eq i64 %332, %274
  %334 = and i64 %274, 3
  %335 = icmp eq i64 %334, 0
  %336 = icmp ult i32 %272, 32
  %337 = and i64 %274, 4294967264
  %338 = icmp eq i64 %337, %274
  %339 = and i64 %274, 3
  %340 = icmp eq i64 %339, 0
  %341 = icmp ult i32 %272, 32
  %342 = and i64 %274, 4294967264
  %343 = icmp eq i64 %342, %274
  %344 = and i64 %274, 3
  %345 = icmp eq i64 %344, 0
  br label %404

346:                                              ; preds = %262, %399
  %347 = phi i64 [ %400, %399 ], [ 0, %262 ]
  %348 = trunc i64 %347 to i32
  %349 = mul i32 %151, %348
  %350 = add nsw i32 %349, 1
  %351 = mul nsw i32 %350, %10
  %352 = sext i32 %351 to i64
  br i1 %178, label %384, label %353

353:                                              ; preds = %346, %353
  %354 = phi i32 [ %381, %353 ], [ 0, %346 ]
  %355 = phi i32 [ %382, %353 ], [ 0, %346 ]
  %356 = load i16, ptr %252, align 8, !tbaa !89
  %357 = sext i16 %356 to i64
  %358 = getelementptr inbounds ptr, ptr %251, i64 %357
  %359 = getelementptr inbounds ptr, ptr %358, i64 %357
  %360 = getelementptr inbounds i8, ptr %359, i64 %352
  %361 = mul nsw i32 %354, %10
  %362 = shl i32 %361, %149
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds i8, ptr %360, i64 %363
  %365 = load i32, ptr %144, align 4, !tbaa !74
  %366 = sext i32 %365 to i64
  %367 = shl nsw i64 %366, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %364, i8 0, i64 %367, i1 false)
  %368 = or i32 %354, 1
  %369 = load i16, ptr %252, align 8, !tbaa !89
  %370 = sext i16 %369 to i64
  %371 = getelementptr inbounds ptr, ptr %251, i64 %370
  %372 = getelementptr inbounds ptr, ptr %371, i64 %370
  %373 = getelementptr inbounds i8, ptr %372, i64 %352
  %374 = mul nsw i32 %368, %10
  %375 = shl i32 %374, %149
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds i8, ptr %373, i64 %376
  %378 = load i32, ptr %144, align 4, !tbaa !74
  %379 = sext i32 %378 to i64
  %380 = shl nsw i64 %379, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %377, i8 0, i64 %380, i1 false)
  %381 = add nuw i32 %354, 2
  %382 = add i32 %355, 2
  %383 = icmp eq i32 %382, %179
  br i1 %383, label %384, label %353, !llvm.loop !453

384:                                              ; preds = %353, %346
  %385 = phi i32 [ 0, %346 ], [ %381, %353 ]
  br i1 %180, label %399, label %386

386:                                              ; preds = %384
  %387 = load i16, ptr %252, align 8, !tbaa !89
  %388 = sext i16 %387 to i64
  %389 = getelementptr inbounds ptr, ptr %251, i64 %388
  %390 = getelementptr inbounds ptr, ptr %389, i64 %388
  %391 = getelementptr inbounds i8, ptr %390, i64 %352
  %392 = mul nsw i32 %385, %10
  %393 = shl i32 %392, %149
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds i8, ptr %391, i64 %394
  %396 = load i32, ptr %144, align 4, !tbaa !74
  %397 = sext i32 %396 to i64
  %398 = shl nsw i64 %397, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %395, i8 0, i64 %398, i1 false)
  br label %399

399:                                              ; preds = %384, %386
  %400 = add nuw nsw i64 %347, 1
  %401 = load i16, ptr %252, align 8, !tbaa !89
  %402 = sext i16 %401 to i64
  %403 = icmp slt i64 %400, %402
  br i1 %403, label %346, label %263, !llvm.loop !454

404:                                              ; preds = %265, %1017
  %405 = phi i64 [ 0, %265 ], [ %1018, %1017 ]
  %406 = trunc i64 %405 to i32
  %407 = mul i32 %175, %406
  %408 = add i32 %407, %10
  %409 = sext i32 %408 to i64
  %410 = getelementptr i8, ptr %313, i64 %409
  %411 = getelementptr i8, ptr %315, i64 %409
  %412 = trunc i64 %405 to i32
  %413 = mul i32 %170, %412
  %414 = add i32 %413, %10
  %415 = sext i32 %414 to i64
  %416 = getelementptr i8, ptr %303, i64 %415
  %417 = getelementptr i8, ptr %306, i64 %415
  %418 = trunc i64 %405 to i32
  %419 = mul i32 %170, %418
  %420 = add i32 %419, %10
  %421 = sext i32 %420 to i64
  %422 = trunc i64 %405 to i32
  %423 = mul i32 %168, %422
  %424 = add i32 %423, %10
  %425 = sext i32 %424 to i64
  %426 = trunc i64 %405 to i32
  %427 = mul i32 %168, %426
  %428 = add i32 %427, %10
  %429 = sext i32 %428 to i64
  %430 = trunc i64 %405 to i32
  %431 = mul i32 %168, %430
  %432 = add i32 %431, %10
  %433 = sext i32 %432 to i64
  %434 = trunc i64 %405 to i32
  %435 = add i32 %268, %434
  %436 = srem i32 %435, %267
  %437 = getelementptr inbounds ptr, ptr %270, i64 %405
  %438 = load ptr, ptr %437, align 8, !tbaa !14
  %439 = sext i32 %436 to i64
  %440 = getelementptr inbounds ptr, ptr %270, i64 %439
  %441 = load ptr, ptr %440, align 8, !tbaa !14
  %442 = trunc i64 %405 to i32
  %443 = mul i32 %151, %442
  %444 = add nsw i32 %443, 1
  %445 = mul nsw i32 %444, %10
  %446 = sext i32 %445 to i64
  %447 = getelementptr inbounds i8, ptr %271, i64 %446
  %448 = getelementptr inbounds i8, ptr %447, i64 %153
  br i1 %273, label %449, label %531

449:                                              ; preds = %404
  br i1 %316, label %479, label %450

450:                                              ; preds = %449
  %451 = icmp ult ptr %271, %411
  %452 = icmp ult ptr %410, %311
  %453 = and i1 %451, %452
  br i1 %453, label %479, label %454

454:                                              ; preds = %450, %454
  %455 = phi i64 [ %476, %454 ], [ 0, %450 ]
  %456 = getelementptr inbounds float, ptr %448, i64 %455
  %457 = load <8 x float>, ptr %456, align 4, !tbaa !65, !alias.scope !455
  %458 = getelementptr inbounds float, ptr %456, i64 8
  %459 = load <8 x float>, ptr %458, align 4, !tbaa !65, !alias.scope !455
  %460 = getelementptr inbounds float, ptr %456, i64 16
  %461 = load <8 x float>, ptr %460, align 4, !tbaa !65, !alias.scope !455
  %462 = getelementptr inbounds float, ptr %456, i64 24
  %463 = load <8 x float>, ptr %462, align 4, !tbaa !65, !alias.scope !455
  %464 = getelementptr inbounds float, ptr %271, i64 %455
  %465 = load <8 x float>, ptr %464, align 4, !tbaa !65, !alias.scope !458, !noalias !455
  %466 = getelementptr inbounds float, ptr %464, i64 8
  %467 = load <8 x float>, ptr %466, align 4, !tbaa !65, !alias.scope !458, !noalias !455
  %468 = getelementptr inbounds float, ptr %464, i64 16
  %469 = load <8 x float>, ptr %468, align 4, !tbaa !65, !alias.scope !458, !noalias !455
  %470 = getelementptr inbounds float, ptr %464, i64 24
  %471 = load <8 x float>, ptr %470, align 4, !tbaa !65, !alias.scope !458, !noalias !455
  %472 = fadd fast <8 x float> %465, %457
  %473 = fadd fast <8 x float> %467, %459
  %474 = fadd fast <8 x float> %469, %461
  %475 = fadd fast <8 x float> %471, %463
  store <8 x float> %472, ptr %464, align 4, !tbaa !65, !alias.scope !458, !noalias !455
  store <8 x float> %473, ptr %466, align 4, !tbaa !65, !alias.scope !458, !noalias !455
  store <8 x float> %474, ptr %468, align 4, !tbaa !65, !alias.scope !458, !noalias !455
  store <8 x float> %475, ptr %470, align 4, !tbaa !65, !alias.scope !458, !noalias !455
  %476 = add nuw i64 %455, 32
  %477 = icmp eq i64 %476, %317
  br i1 %477, label %478, label %454, !llvm.loop !460

478:                                              ; preds = %454
  br i1 %318, label %524, label %479

479:                                              ; preds = %450, %449, %478
  %480 = phi i64 [ 0, %450 ], [ 0, %449 ], [ %317, %478 ]
  %481 = xor i64 %480, -1
  %482 = add nsw i64 %481, %274
  br i1 %320, label %494, label %483

483:                                              ; preds = %479, %483
  %484 = phi i64 [ %491, %483 ], [ %480, %479 ]
  %485 = phi i64 [ %492, %483 ], [ 0, %479 ]
  %486 = getelementptr inbounds float, ptr %448, i64 %484
  %487 = load float, ptr %486, align 4, !tbaa !65
  %488 = getelementptr inbounds float, ptr %271, i64 %484
  %489 = load float, ptr %488, align 4, !tbaa !65
  %490 = fadd fast float %489, %487
  store float %490, ptr %488, align 4, !tbaa !65
  %491 = add nuw nsw i64 %484, 1
  %492 = add i64 %485, 1
  %493 = icmp eq i64 %492, %319
  br i1 %493, label %494, label %483, !llvm.loop !461

494:                                              ; preds = %483, %479
  %495 = phi i64 [ %480, %479 ], [ %491, %483 ]
  %496 = icmp ult i64 %482, 3
  br i1 %496, label %524, label %497

497:                                              ; preds = %494, %497
  %498 = phi i64 [ %522, %497 ], [ %495, %494 ]
  %499 = getelementptr inbounds float, ptr %448, i64 %498
  %500 = load float, ptr %499, align 4, !tbaa !65
  %501 = getelementptr inbounds float, ptr %271, i64 %498
  %502 = load float, ptr %501, align 4, !tbaa !65
  %503 = fadd fast float %502, %500
  store float %503, ptr %501, align 4, !tbaa !65
  %504 = add nuw nsw i64 %498, 1
  %505 = getelementptr inbounds float, ptr %448, i64 %504
  %506 = load float, ptr %505, align 4, !tbaa !65
  %507 = getelementptr inbounds float, ptr %271, i64 %504
  %508 = load float, ptr %507, align 4, !tbaa !65
  %509 = fadd fast float %508, %506
  store float %509, ptr %507, align 4, !tbaa !65
  %510 = add nuw nsw i64 %498, 2
  %511 = getelementptr inbounds float, ptr %448, i64 %510
  %512 = load float, ptr %511, align 4, !tbaa !65
  %513 = getelementptr inbounds float, ptr %271, i64 %510
  %514 = load float, ptr %513, align 4, !tbaa !65
  %515 = fadd fast float %514, %512
  store float %515, ptr %513, align 4, !tbaa !65
  %516 = add nuw nsw i64 %498, 3
  %517 = getelementptr inbounds float, ptr %448, i64 %516
  %518 = load float, ptr %517, align 4, !tbaa !65
  %519 = getelementptr inbounds float, ptr %271, i64 %516
  %520 = load float, ptr %519, align 4, !tbaa !65
  %521 = fadd fast float %520, %518
  store float %521, ptr %519, align 4, !tbaa !65
  %522 = add nuw nsw i64 %498, 4
  %523 = icmp eq i64 %522, %274
  br i1 %523, label %524, label %497, !llvm.loop !462

524:                                              ; preds = %494, %497, %478
  %525 = getelementptr inbounds ptr, ptr %251, i64 %405
  %526 = load ptr, ptr %525, align 8, !tbaa !14
  %527 = getelementptr inbounds %struct.CCGVert, ptr %526, i64 0, i32 4
  %528 = load i16, ptr %527, align 4, !tbaa !86
  %529 = and i16 %528, 1
  %530 = icmp eq i16 %529, 0
  br i1 %530, label %615, label %534

531:                                              ; preds = %404
  %532 = getelementptr inbounds ptr, ptr %251, i64 %405
  %533 = load ptr, ptr %532, align 8, !tbaa !14
  br label %615

534:                                              ; preds = %524
  %535 = getelementptr inbounds %struct.CCGVert, ptr %526, i64 1
  %536 = getelementptr i8, ptr %535, i64 %155
  %537 = getelementptr inbounds i8, ptr %447, i64 %160
  br i1 %273, label %538, label %615

538:                                              ; preds = %534
  br i1 %321, label %570, label %539

539:                                              ; preds = %538
  %540 = getelementptr i8, ptr %526, i64 %171
  %541 = getelementptr i8, ptr %540, i64 %300
  %542 = icmp ult ptr %536, %417
  %543 = icmp ult ptr %416, %541
  %544 = and i1 %542, %543
  br i1 %544, label %570, label %545

545:                                              ; preds = %539, %545
  %546 = phi i64 [ %567, %545 ], [ 0, %539 ]
  %547 = getelementptr inbounds float, ptr %537, i64 %546
  %548 = load <8 x float>, ptr %547, align 4, !tbaa !65, !alias.scope !463
  %549 = getelementptr inbounds float, ptr %547, i64 8
  %550 = load <8 x float>, ptr %549, align 4, !tbaa !65, !alias.scope !463
  %551 = getelementptr inbounds float, ptr %547, i64 16
  %552 = load <8 x float>, ptr %551, align 4, !tbaa !65, !alias.scope !463
  %553 = getelementptr inbounds float, ptr %547, i64 24
  %554 = load <8 x float>, ptr %553, align 4, !tbaa !65, !alias.scope !463
  %555 = getelementptr inbounds float, ptr %536, i64 %546
  %556 = load <8 x float>, ptr %555, align 4, !tbaa !65, !alias.scope !466, !noalias !463
  %557 = getelementptr inbounds float, ptr %555, i64 8
  %558 = load <8 x float>, ptr %557, align 4, !tbaa !65, !alias.scope !466, !noalias !463
  %559 = getelementptr inbounds float, ptr %555, i64 16
  %560 = load <8 x float>, ptr %559, align 4, !tbaa !65, !alias.scope !466, !noalias !463
  %561 = getelementptr inbounds float, ptr %555, i64 24
  %562 = load <8 x float>, ptr %561, align 4, !tbaa !65, !alias.scope !466, !noalias !463
  %563 = fadd fast <8 x float> %556, %548
  %564 = fadd fast <8 x float> %558, %550
  %565 = fadd fast <8 x float> %560, %552
  %566 = fadd fast <8 x float> %562, %554
  store <8 x float> %563, ptr %555, align 4, !tbaa !65, !alias.scope !466, !noalias !463
  store <8 x float> %564, ptr %557, align 4, !tbaa !65, !alias.scope !466, !noalias !463
  store <8 x float> %565, ptr %559, align 4, !tbaa !65, !alias.scope !466, !noalias !463
  store <8 x float> %566, ptr %561, align 4, !tbaa !65, !alias.scope !466, !noalias !463
  %567 = add nuw i64 %546, 32
  %568 = icmp eq i64 %567, %322
  br i1 %568, label %569, label %545, !llvm.loop !468

569:                                              ; preds = %545
  br i1 %323, label %615, label %570

570:                                              ; preds = %539, %538, %569
  %571 = phi i64 [ 0, %539 ], [ 0, %538 ], [ %322, %569 ]
  %572 = xor i64 %571, -1
  %573 = add nsw i64 %572, %274
  br i1 %325, label %585, label %574

574:                                              ; preds = %570, %574
  %575 = phi i64 [ %582, %574 ], [ %571, %570 ]
  %576 = phi i64 [ %583, %574 ], [ 0, %570 ]
  %577 = getelementptr inbounds float, ptr %537, i64 %575
  %578 = load float, ptr %577, align 4, !tbaa !65
  %579 = getelementptr inbounds float, ptr %536, i64 %575
  %580 = load float, ptr %579, align 4, !tbaa !65
  %581 = fadd fast float %580, %578
  store float %581, ptr %579, align 4, !tbaa !65
  %582 = add nuw nsw i64 %575, 1
  %583 = add i64 %576, 1
  %584 = icmp eq i64 %583, %324
  br i1 %584, label %585, label %574, !llvm.loop !469

585:                                              ; preds = %574, %570
  %586 = phi i64 [ %571, %570 ], [ %582, %574 ]
  %587 = icmp ult i64 %573, 3
  br i1 %587, label %615, label %588

588:                                              ; preds = %585, %588
  %589 = phi i64 [ %613, %588 ], [ %586, %585 ]
  %590 = getelementptr inbounds float, ptr %537, i64 %589
  %591 = load float, ptr %590, align 4, !tbaa !65
  %592 = getelementptr inbounds float, ptr %536, i64 %589
  %593 = load float, ptr %592, align 4, !tbaa !65
  %594 = fadd fast float %593, %591
  store float %594, ptr %592, align 4, !tbaa !65
  %595 = add nuw nsw i64 %589, 1
  %596 = getelementptr inbounds float, ptr %537, i64 %595
  %597 = load float, ptr %596, align 4, !tbaa !65
  %598 = getelementptr inbounds float, ptr %536, i64 %595
  %599 = load float, ptr %598, align 4, !tbaa !65
  %600 = fadd fast float %599, %597
  store float %600, ptr %598, align 4, !tbaa !65
  %601 = add nuw nsw i64 %589, 2
  %602 = getelementptr inbounds float, ptr %537, i64 %601
  %603 = load float, ptr %602, align 4, !tbaa !65
  %604 = getelementptr inbounds float, ptr %536, i64 %601
  %605 = load float, ptr %604, align 4, !tbaa !65
  %606 = fadd fast float %605, %603
  store float %606, ptr %604, align 4, !tbaa !65
  %607 = add nuw nsw i64 %589, 3
  %608 = getelementptr inbounds float, ptr %537, i64 %607
  %609 = load float, ptr %608, align 4, !tbaa !65
  %610 = getelementptr inbounds float, ptr %536, i64 %607
  %611 = load float, ptr %610, align 4, !tbaa !65
  %612 = fadd fast float %611, %609
  store float %612, ptr %610, align 4, !tbaa !65
  %613 = add nuw nsw i64 %589, 4
  %614 = icmp eq i64 %613, %274
  br i1 %614, label %615, label %588, !llvm.loop !470

615:                                              ; preds = %585, %588, %569, %531, %534, %524
  %616 = phi ptr [ %526, %534 ], [ %526, %524 ], [ %533, %531 ], [ %526, %569 ], [ %526, %588 ], [ %526, %585 ]
  br i1 %161, label %617, label %627

617:                                              ; preds = %615
  %618 = mul i32 %151, %436
  %619 = add nsw i32 %618, 1
  %620 = mul nsw i32 %619, %10
  %621 = sext i32 %620 to i64
  %622 = getelementptr inbounds i8, ptr %271, i64 %621
  %623 = getelementptr i8, ptr %290, i64 %621
  %624 = getelementptr i8, ptr %292, i64 %425
  %625 = getelementptr i8, ptr %297, i64 %421
  %626 = getelementptr i8, ptr %299, i64 %421
  br label %647

627:                                              ; preds = %820, %615
  br i1 %145, label %1017, label %628

628:                                              ; preds = %627
  %629 = getelementptr inbounds %struct.CCGEdge, ptr %438, i64 0, i32 3
  %630 = load i16, ptr %629, align 2, !tbaa !118
  %631 = and i16 %630, 1
  %632 = icmp eq i16 %631, 0
  %633 = getelementptr inbounds %struct.CCGEdge, ptr %438, i64 0, i32 5
  %634 = getelementptr inbounds %struct.CCGEdge, ptr %438, i64 1
  %635 = getelementptr inbounds %struct.CCGEdge, ptr %441, i64 0, i32 3
  %636 = load i16, ptr %635, align 2, !tbaa !118
  %637 = and i16 %636, 1
  %638 = icmp ne i16 %637, 0
  %639 = getelementptr inbounds %struct.CCGEdge, ptr %441, i64 0, i32 5
  %640 = getelementptr inbounds %struct.CCGEdge, ptr %441, i64 1
  %641 = getelementptr i8, ptr %441, i64 48
  %642 = getelementptr i8, ptr %641, i64 %276
  %643 = getelementptr i8, ptr %280, i64 %433
  %644 = getelementptr i8, ptr %438, i64 48
  %645 = getelementptr i8, ptr %644, i64 %281
  %646 = getelementptr i8, ptr %285, i64 %429
  br label %823

647:                                              ; preds = %617, %820
  %648 = phi i32 [ 1, %617 ], [ %821, %820 ]
  %649 = mul nsw i32 %648, %10
  %650 = shl i32 %649, %149
  %651 = sext i32 %650 to i64
  %652 = getelementptr i8, ptr %447, i64 %651
  %653 = shl i32 %648, %149
  %654 = add nsw i32 %653, %148
  %655 = mul nsw i32 %654, %10
  %656 = sext i32 %655 to i64
  %657 = getelementptr i8, ptr %447, i64 %656
  br i1 %273, label %658, label %820

658:                                              ; preds = %647
  br i1 %326, label %690, label %659

659:                                              ; preds = %658
  %660 = getelementptr i8, ptr %625, i64 %651
  %661 = getelementptr i8, ptr %626, i64 %656
  %662 = icmp ult ptr %652, %661
  %663 = icmp ult ptr %657, %660
  %664 = and i1 %662, %663
  br i1 %664, label %690, label %665

665:                                              ; preds = %659, %665
  %666 = phi i64 [ %687, %665 ], [ 0, %659 ]
  %667 = getelementptr inbounds float, ptr %657, i64 %666
  %668 = load <8 x float>, ptr %667, align 4, !tbaa !65, !alias.scope !471
  %669 = getelementptr inbounds float, ptr %667, i64 8
  %670 = load <8 x float>, ptr %669, align 4, !tbaa !65, !alias.scope !471
  %671 = getelementptr inbounds float, ptr %667, i64 16
  %672 = load <8 x float>, ptr %671, align 4, !tbaa !65, !alias.scope !471
  %673 = getelementptr inbounds float, ptr %667, i64 24
  %674 = load <8 x float>, ptr %673, align 4, !tbaa !65, !alias.scope !471
  %675 = getelementptr inbounds float, ptr %652, i64 %666
  %676 = load <8 x float>, ptr %675, align 4, !tbaa !65, !alias.scope !474, !noalias !471
  %677 = getelementptr inbounds float, ptr %675, i64 8
  %678 = load <8 x float>, ptr %677, align 4, !tbaa !65, !alias.scope !474, !noalias !471
  %679 = getelementptr inbounds float, ptr %675, i64 16
  %680 = load <8 x float>, ptr %679, align 4, !tbaa !65, !alias.scope !474, !noalias !471
  %681 = getelementptr inbounds float, ptr %675, i64 24
  %682 = load <8 x float>, ptr %681, align 4, !tbaa !65, !alias.scope !474, !noalias !471
  %683 = fadd fast <8 x float> %676, %668
  %684 = fadd fast <8 x float> %678, %670
  %685 = fadd fast <8 x float> %680, %672
  %686 = fadd fast <8 x float> %682, %674
  store <8 x float> %683, ptr %675, align 4, !tbaa !65, !alias.scope !474, !noalias !471
  store <8 x float> %684, ptr %677, align 4, !tbaa !65, !alias.scope !474, !noalias !471
  store <8 x float> %685, ptr %679, align 4, !tbaa !65, !alias.scope !474, !noalias !471
  store <8 x float> %686, ptr %681, align 4, !tbaa !65, !alias.scope !474, !noalias !471
  %687 = add nuw i64 %666, 32
  %688 = icmp eq i64 %687, %327
  br i1 %688, label %689, label %665, !llvm.loop !476

689:                                              ; preds = %665
  br i1 %328, label %735, label %690

690:                                              ; preds = %659, %658, %689
  %691 = phi i64 [ 0, %659 ], [ 0, %658 ], [ %327, %689 ]
  %692 = xor i64 %691, -1
  %693 = add nsw i64 %692, %274
  br i1 %330, label %705, label %694

694:                                              ; preds = %690, %694
  %695 = phi i64 [ %702, %694 ], [ %691, %690 ]
  %696 = phi i64 [ %703, %694 ], [ 0, %690 ]
  %697 = getelementptr inbounds float, ptr %657, i64 %695
  %698 = load float, ptr %697, align 4, !tbaa !65
  %699 = getelementptr inbounds float, ptr %652, i64 %695
  %700 = load float, ptr %699, align 4, !tbaa !65
  %701 = fadd fast float %700, %698
  store float %701, ptr %699, align 4, !tbaa !65
  %702 = add nuw nsw i64 %695, 1
  %703 = add i64 %696, 1
  %704 = icmp eq i64 %703, %329
  br i1 %704, label %705, label %694, !llvm.loop !477

705:                                              ; preds = %694, %690
  %706 = phi i64 [ %691, %690 ], [ %702, %694 ]
  %707 = icmp ult i64 %693, 3
  br i1 %707, label %735, label %708

708:                                              ; preds = %705, %708
  %709 = phi i64 [ %733, %708 ], [ %706, %705 ]
  %710 = getelementptr inbounds float, ptr %657, i64 %709
  %711 = load float, ptr %710, align 4, !tbaa !65
  %712 = getelementptr inbounds float, ptr %652, i64 %709
  %713 = load float, ptr %712, align 4, !tbaa !65
  %714 = fadd fast float %713, %711
  store float %714, ptr %712, align 4, !tbaa !65
  %715 = add nuw nsw i64 %709, 1
  %716 = getelementptr inbounds float, ptr %657, i64 %715
  %717 = load float, ptr %716, align 4, !tbaa !65
  %718 = getelementptr inbounds float, ptr %652, i64 %715
  %719 = load float, ptr %718, align 4, !tbaa !65
  %720 = fadd fast float %719, %717
  store float %720, ptr %718, align 4, !tbaa !65
  %721 = add nuw nsw i64 %709, 2
  %722 = getelementptr inbounds float, ptr %657, i64 %721
  %723 = load float, ptr %722, align 4, !tbaa !65
  %724 = getelementptr inbounds float, ptr %652, i64 %721
  %725 = load float, ptr %724, align 4, !tbaa !65
  %726 = fadd fast float %725, %723
  store float %726, ptr %724, align 4, !tbaa !65
  %727 = add nuw nsw i64 %709, 3
  %728 = getelementptr inbounds float, ptr %657, i64 %727
  %729 = load float, ptr %728, align 4, !tbaa !65
  %730 = getelementptr inbounds float, ptr %652, i64 %727
  %731 = load float, ptr %730, align 4, !tbaa !65
  %732 = fadd fast float %731, %729
  store float %732, ptr %730, align 4, !tbaa !65
  %733 = add nuw nsw i64 %709, 4
  %734 = icmp eq i64 %733, %274
  br i1 %734, label %735, label %708, !llvm.loop !478

735:                                              ; preds = %705, %708, %689
  %736 = getelementptr i8, ptr %622, i64 %651
  %737 = mul nsw i32 %648, %148
  %738 = shl i32 %737, %149
  %739 = add nsw i32 %738, %148
  %740 = mul nsw i32 %739, %10
  %741 = sext i32 %740 to i64
  %742 = getelementptr i8, ptr %447, i64 %741
  br i1 %273, label %743, label %820

743:                                              ; preds = %735
  br i1 %331, label %775, label %744

744:                                              ; preds = %743
  %745 = getelementptr i8, ptr %623, i64 %651
  %746 = getelementptr i8, ptr %624, i64 %741
  %747 = icmp ult ptr %736, %746
  %748 = icmp ult ptr %742, %745
  %749 = and i1 %747, %748
  br i1 %749, label %775, label %750

750:                                              ; preds = %744, %750
  %751 = phi i64 [ %772, %750 ], [ 0, %744 ]
  %752 = getelementptr inbounds float, ptr %742, i64 %751
  %753 = load <8 x float>, ptr %752, align 4, !tbaa !65, !alias.scope !479
  %754 = getelementptr inbounds float, ptr %752, i64 8
  %755 = load <8 x float>, ptr %754, align 4, !tbaa !65, !alias.scope !479
  %756 = getelementptr inbounds float, ptr %752, i64 16
  %757 = load <8 x float>, ptr %756, align 4, !tbaa !65, !alias.scope !479
  %758 = getelementptr inbounds float, ptr %752, i64 24
  %759 = load <8 x float>, ptr %758, align 4, !tbaa !65, !alias.scope !479
  %760 = getelementptr inbounds float, ptr %736, i64 %751
  %761 = load <8 x float>, ptr %760, align 4, !tbaa !65, !alias.scope !482, !noalias !479
  %762 = getelementptr inbounds float, ptr %760, i64 8
  %763 = load <8 x float>, ptr %762, align 4, !tbaa !65, !alias.scope !482, !noalias !479
  %764 = getelementptr inbounds float, ptr %760, i64 16
  %765 = load <8 x float>, ptr %764, align 4, !tbaa !65, !alias.scope !482, !noalias !479
  %766 = getelementptr inbounds float, ptr %760, i64 24
  %767 = load <8 x float>, ptr %766, align 4, !tbaa !65, !alias.scope !482, !noalias !479
  %768 = fadd fast <8 x float> %761, %753
  %769 = fadd fast <8 x float> %763, %755
  %770 = fadd fast <8 x float> %765, %757
  %771 = fadd fast <8 x float> %767, %759
  store <8 x float> %768, ptr %760, align 4, !tbaa !65, !alias.scope !482, !noalias !479
  store <8 x float> %769, ptr %762, align 4, !tbaa !65, !alias.scope !482, !noalias !479
  store <8 x float> %770, ptr %764, align 4, !tbaa !65, !alias.scope !482, !noalias !479
  store <8 x float> %771, ptr %766, align 4, !tbaa !65, !alias.scope !482, !noalias !479
  %772 = add nuw i64 %751, 32
  %773 = icmp eq i64 %772, %332
  br i1 %773, label %774, label %750, !llvm.loop !484

774:                                              ; preds = %750
  br i1 %333, label %820, label %775

775:                                              ; preds = %744, %743, %774
  %776 = phi i64 [ 0, %744 ], [ 0, %743 ], [ %332, %774 ]
  %777 = xor i64 %776, -1
  %778 = add nsw i64 %777, %274
  br i1 %335, label %790, label %779

779:                                              ; preds = %775, %779
  %780 = phi i64 [ %787, %779 ], [ %776, %775 ]
  %781 = phi i64 [ %788, %779 ], [ 0, %775 ]
  %782 = getelementptr inbounds float, ptr %742, i64 %780
  %783 = load float, ptr %782, align 4, !tbaa !65
  %784 = getelementptr inbounds float, ptr %736, i64 %780
  %785 = load float, ptr %784, align 4, !tbaa !65
  %786 = fadd fast float %785, %783
  store float %786, ptr %784, align 4, !tbaa !65
  %787 = add nuw nsw i64 %780, 1
  %788 = add i64 %781, 1
  %789 = icmp eq i64 %788, %334
  br i1 %789, label %790, label %779, !llvm.loop !485

790:                                              ; preds = %779, %775
  %791 = phi i64 [ %776, %775 ], [ %787, %779 ]
  %792 = icmp ult i64 %778, 3
  br i1 %792, label %820, label %793

793:                                              ; preds = %790, %793
  %794 = phi i64 [ %818, %793 ], [ %791, %790 ]
  %795 = getelementptr inbounds float, ptr %742, i64 %794
  %796 = load float, ptr %795, align 4, !tbaa !65
  %797 = getelementptr inbounds float, ptr %736, i64 %794
  %798 = load float, ptr %797, align 4, !tbaa !65
  %799 = fadd fast float %798, %796
  store float %799, ptr %797, align 4, !tbaa !65
  %800 = add nuw nsw i64 %794, 1
  %801 = getelementptr inbounds float, ptr %742, i64 %800
  %802 = load float, ptr %801, align 4, !tbaa !65
  %803 = getelementptr inbounds float, ptr %736, i64 %800
  %804 = load float, ptr %803, align 4, !tbaa !65
  %805 = fadd fast float %804, %802
  store float %805, ptr %803, align 4, !tbaa !65
  %806 = add nuw nsw i64 %794, 2
  %807 = getelementptr inbounds float, ptr %742, i64 %806
  %808 = load float, ptr %807, align 4, !tbaa !65
  %809 = getelementptr inbounds float, ptr %736, i64 %806
  %810 = load float, ptr %809, align 4, !tbaa !65
  %811 = fadd fast float %810, %808
  store float %811, ptr %809, align 4, !tbaa !65
  %812 = add nuw nsw i64 %794, 3
  %813 = getelementptr inbounds float, ptr %742, i64 %812
  %814 = load float, ptr %813, align 4, !tbaa !65
  %815 = getelementptr inbounds float, ptr %736, i64 %812
  %816 = load float, ptr %815, align 4, !tbaa !65
  %817 = fadd fast float %816, %814
  store float %817, ptr %815, align 4, !tbaa !65
  %818 = add nuw nsw i64 %794, 4
  %819 = icmp eq i64 %818, %274
  br i1 %819, label %820, label %793, !llvm.loop !486

820:                                              ; preds = %790, %793, %774, %647, %735
  %821 = add nuw nsw i32 %648, 1
  %822 = icmp eq i32 %821, %17
  br i1 %822, label %627, label %647, !llvm.loop !487

823:                                              ; preds = %628, %1014
  %824 = phi i32 [ 0, %628 ], [ %1015, %1014 ]
  %825 = sub nsw i32 %17, %824
  br i1 %632, label %919, label %826

826:                                              ; preds = %823
  %827 = load ptr, ptr %633, align 8, !tbaa !83
  %828 = icmp eq ptr %827, %616
  %829 = sub i32 %18, %825
  %830 = select i1 %828, i32 %825, i32 %829
  %831 = add i32 %162, %830
  %832 = mul nsw i32 %831, %10
  %833 = sext i32 %832 to i64
  %834 = getelementptr i8, ptr %634, i64 %833
  %835 = mul nsw i32 %824, %148
  %836 = add nsw i32 %835, %17
  %837 = shl i32 %836, %149
  %838 = add nsw i32 %837, %148
  %839 = mul nsw i32 %838, %10
  %840 = sext i32 %839 to i64
  %841 = getelementptr i8, ptr %447, i64 %840
  br i1 %273, label %842, label %919

842:                                              ; preds = %826
  br i1 %336, label %874, label %843

843:                                              ; preds = %842
  %844 = getelementptr i8, ptr %645, i64 %833
  %845 = getelementptr i8, ptr %646, i64 %840
  %846 = icmp ult ptr %834, %845
  %847 = icmp ult ptr %841, %844
  %848 = and i1 %846, %847
  br i1 %848, label %874, label %849

849:                                              ; preds = %843, %849
  %850 = phi i64 [ %871, %849 ], [ 0, %843 ]
  %851 = getelementptr inbounds float, ptr %841, i64 %850
  %852 = load <8 x float>, ptr %851, align 4, !tbaa !65, !alias.scope !488
  %853 = getelementptr inbounds float, ptr %851, i64 8
  %854 = load <8 x float>, ptr %853, align 4, !tbaa !65, !alias.scope !488
  %855 = getelementptr inbounds float, ptr %851, i64 16
  %856 = load <8 x float>, ptr %855, align 4, !tbaa !65, !alias.scope !488
  %857 = getelementptr inbounds float, ptr %851, i64 24
  %858 = load <8 x float>, ptr %857, align 4, !tbaa !65, !alias.scope !488
  %859 = getelementptr inbounds float, ptr %834, i64 %850
  %860 = load <8 x float>, ptr %859, align 4, !tbaa !65, !alias.scope !491, !noalias !488
  %861 = getelementptr inbounds float, ptr %859, i64 8
  %862 = load <8 x float>, ptr %861, align 4, !tbaa !65, !alias.scope !491, !noalias !488
  %863 = getelementptr inbounds float, ptr %859, i64 16
  %864 = load <8 x float>, ptr %863, align 4, !tbaa !65, !alias.scope !491, !noalias !488
  %865 = getelementptr inbounds float, ptr %859, i64 24
  %866 = load <8 x float>, ptr %865, align 4, !tbaa !65, !alias.scope !491, !noalias !488
  %867 = fadd fast <8 x float> %860, %852
  %868 = fadd fast <8 x float> %862, %854
  %869 = fadd fast <8 x float> %864, %856
  %870 = fadd fast <8 x float> %866, %858
  store <8 x float> %867, ptr %859, align 4, !tbaa !65, !alias.scope !491, !noalias !488
  store <8 x float> %868, ptr %861, align 4, !tbaa !65, !alias.scope !491, !noalias !488
  store <8 x float> %869, ptr %863, align 4, !tbaa !65, !alias.scope !491, !noalias !488
  store <8 x float> %870, ptr %865, align 4, !tbaa !65, !alias.scope !491, !noalias !488
  %871 = add nuw i64 %850, 32
  %872 = icmp eq i64 %871, %337
  br i1 %872, label %873, label %849, !llvm.loop !493

873:                                              ; preds = %849
  br i1 %338, label %919, label %874

874:                                              ; preds = %843, %842, %873
  %875 = phi i64 [ 0, %843 ], [ 0, %842 ], [ %337, %873 ]
  %876 = xor i64 %875, -1
  %877 = add nsw i64 %876, %274
  br i1 %340, label %889, label %878

878:                                              ; preds = %874, %878
  %879 = phi i64 [ %886, %878 ], [ %875, %874 ]
  %880 = phi i64 [ %887, %878 ], [ 0, %874 ]
  %881 = getelementptr inbounds float, ptr %841, i64 %879
  %882 = load float, ptr %881, align 4, !tbaa !65
  %883 = getelementptr inbounds float, ptr %834, i64 %879
  %884 = load float, ptr %883, align 4, !tbaa !65
  %885 = fadd fast float %884, %882
  store float %885, ptr %883, align 4, !tbaa !65
  %886 = add nuw nsw i64 %879, 1
  %887 = add i64 %880, 1
  %888 = icmp eq i64 %887, %339
  br i1 %888, label %889, label %878, !llvm.loop !494

889:                                              ; preds = %878, %874
  %890 = phi i64 [ %875, %874 ], [ %886, %878 ]
  %891 = icmp ult i64 %877, 3
  br i1 %891, label %919, label %892

892:                                              ; preds = %889, %892
  %893 = phi i64 [ %917, %892 ], [ %890, %889 ]
  %894 = getelementptr inbounds float, ptr %841, i64 %893
  %895 = load float, ptr %894, align 4, !tbaa !65
  %896 = getelementptr inbounds float, ptr %834, i64 %893
  %897 = load float, ptr %896, align 4, !tbaa !65
  %898 = fadd fast float %897, %895
  store float %898, ptr %896, align 4, !tbaa !65
  %899 = add nuw nsw i64 %893, 1
  %900 = getelementptr inbounds float, ptr %841, i64 %899
  %901 = load float, ptr %900, align 4, !tbaa !65
  %902 = getelementptr inbounds float, ptr %834, i64 %899
  %903 = load float, ptr %902, align 4, !tbaa !65
  %904 = fadd fast float %903, %901
  store float %904, ptr %902, align 4, !tbaa !65
  %905 = add nuw nsw i64 %893, 2
  %906 = getelementptr inbounds float, ptr %841, i64 %905
  %907 = load float, ptr %906, align 4, !tbaa !65
  %908 = getelementptr inbounds float, ptr %834, i64 %905
  %909 = load float, ptr %908, align 4, !tbaa !65
  %910 = fadd fast float %909, %907
  store float %910, ptr %908, align 4, !tbaa !65
  %911 = add nuw nsw i64 %893, 3
  %912 = getelementptr inbounds float, ptr %841, i64 %911
  %913 = load float, ptr %912, align 4, !tbaa !65
  %914 = getelementptr inbounds float, ptr %834, i64 %911
  %915 = load float, ptr %914, align 4, !tbaa !65
  %916 = fadd fast float %915, %913
  store float %916, ptr %914, align 4, !tbaa !65
  %917 = add nuw nsw i64 %893, 4
  %918 = icmp eq i64 %917, %274
  br i1 %918, label %919, label %892, !llvm.loop !495

919:                                              ; preds = %889, %892, %873, %826, %823
  %920 = icmp ne i32 %824, 0
  %921 = and i1 %920, %638
  br i1 %921, label %922, label %1014

922:                                              ; preds = %919
  %923 = load ptr, ptr %639, align 8, !tbaa !83
  %924 = icmp eq ptr %923, %616
  %925 = sub i32 %18, %825
  %926 = select i1 %924, i32 %825, i32 %925
  %927 = add i32 %162, %926
  %928 = mul nsw i32 %927, %10
  %929 = sext i32 %928 to i64
  %930 = getelementptr i8, ptr %640, i64 %929
  %931 = add nsw i32 %824, %163
  %932 = shl i32 %931, %149
  %933 = add nsw i32 %932, %148
  %934 = mul nsw i32 %933, %10
  %935 = sext i32 %934 to i64
  %936 = getelementptr i8, ptr %447, i64 %935
  br i1 %273, label %937, label %1014

937:                                              ; preds = %922
  br i1 %341, label %969, label %938

938:                                              ; preds = %937
  %939 = getelementptr i8, ptr %642, i64 %929
  %940 = getelementptr i8, ptr %643, i64 %935
  %941 = icmp ult ptr %930, %940
  %942 = icmp ult ptr %936, %939
  %943 = and i1 %941, %942
  br i1 %943, label %969, label %944

944:                                              ; preds = %938, %944
  %945 = phi i64 [ %966, %944 ], [ 0, %938 ]
  %946 = getelementptr inbounds float, ptr %936, i64 %945
  %947 = load <8 x float>, ptr %946, align 4, !tbaa !65, !alias.scope !496
  %948 = getelementptr inbounds float, ptr %946, i64 8
  %949 = load <8 x float>, ptr %948, align 4, !tbaa !65, !alias.scope !496
  %950 = getelementptr inbounds float, ptr %946, i64 16
  %951 = load <8 x float>, ptr %950, align 4, !tbaa !65, !alias.scope !496
  %952 = getelementptr inbounds float, ptr %946, i64 24
  %953 = load <8 x float>, ptr %952, align 4, !tbaa !65, !alias.scope !496
  %954 = getelementptr inbounds float, ptr %930, i64 %945
  %955 = load <8 x float>, ptr %954, align 4, !tbaa !65, !alias.scope !499, !noalias !496
  %956 = getelementptr inbounds float, ptr %954, i64 8
  %957 = load <8 x float>, ptr %956, align 4, !tbaa !65, !alias.scope !499, !noalias !496
  %958 = getelementptr inbounds float, ptr %954, i64 16
  %959 = load <8 x float>, ptr %958, align 4, !tbaa !65, !alias.scope !499, !noalias !496
  %960 = getelementptr inbounds float, ptr %954, i64 24
  %961 = load <8 x float>, ptr %960, align 4, !tbaa !65, !alias.scope !499, !noalias !496
  %962 = fadd fast <8 x float> %955, %947
  %963 = fadd fast <8 x float> %957, %949
  %964 = fadd fast <8 x float> %959, %951
  %965 = fadd fast <8 x float> %961, %953
  store <8 x float> %962, ptr %954, align 4, !tbaa !65, !alias.scope !499, !noalias !496
  store <8 x float> %963, ptr %956, align 4, !tbaa !65, !alias.scope !499, !noalias !496
  store <8 x float> %964, ptr %958, align 4, !tbaa !65, !alias.scope !499, !noalias !496
  store <8 x float> %965, ptr %960, align 4, !tbaa !65, !alias.scope !499, !noalias !496
  %966 = add nuw i64 %945, 32
  %967 = icmp eq i64 %966, %342
  br i1 %967, label %968, label %944, !llvm.loop !501

968:                                              ; preds = %944
  br i1 %343, label %1014, label %969

969:                                              ; preds = %938, %937, %968
  %970 = phi i64 [ 0, %938 ], [ 0, %937 ], [ %342, %968 ]
  %971 = xor i64 %970, -1
  %972 = add nsw i64 %971, %274
  br i1 %345, label %984, label %973

973:                                              ; preds = %969, %973
  %974 = phi i64 [ %981, %973 ], [ %970, %969 ]
  %975 = phi i64 [ %982, %973 ], [ 0, %969 ]
  %976 = getelementptr inbounds float, ptr %936, i64 %974
  %977 = load float, ptr %976, align 4, !tbaa !65
  %978 = getelementptr inbounds float, ptr %930, i64 %974
  %979 = load float, ptr %978, align 4, !tbaa !65
  %980 = fadd fast float %979, %977
  store float %980, ptr %978, align 4, !tbaa !65
  %981 = add nuw nsw i64 %974, 1
  %982 = add i64 %975, 1
  %983 = icmp eq i64 %982, %344
  br i1 %983, label %984, label %973, !llvm.loop !502

984:                                              ; preds = %973, %969
  %985 = phi i64 [ %970, %969 ], [ %981, %973 ]
  %986 = icmp ult i64 %972, 3
  br i1 %986, label %1014, label %987

987:                                              ; preds = %984, %987
  %988 = phi i64 [ %1012, %987 ], [ %985, %984 ]
  %989 = getelementptr inbounds float, ptr %936, i64 %988
  %990 = load float, ptr %989, align 4, !tbaa !65
  %991 = getelementptr inbounds float, ptr %930, i64 %988
  %992 = load float, ptr %991, align 4, !tbaa !65
  %993 = fadd fast float %992, %990
  store float %993, ptr %991, align 4, !tbaa !65
  %994 = add nuw nsw i64 %988, 1
  %995 = getelementptr inbounds float, ptr %936, i64 %994
  %996 = load float, ptr %995, align 4, !tbaa !65
  %997 = getelementptr inbounds float, ptr %930, i64 %994
  %998 = load float, ptr %997, align 4, !tbaa !65
  %999 = fadd fast float %998, %996
  store float %999, ptr %997, align 4, !tbaa !65
  %1000 = add nuw nsw i64 %988, 2
  %1001 = getelementptr inbounds float, ptr %936, i64 %1000
  %1002 = load float, ptr %1001, align 4, !tbaa !65
  %1003 = getelementptr inbounds float, ptr %930, i64 %1000
  %1004 = load float, ptr %1003, align 4, !tbaa !65
  %1005 = fadd fast float %1004, %1002
  store float %1005, ptr %1003, align 4, !tbaa !65
  %1006 = add nuw nsw i64 %988, 3
  %1007 = getelementptr inbounds float, ptr %936, i64 %1006
  %1008 = load float, ptr %1007, align 4, !tbaa !65
  %1009 = getelementptr inbounds float, ptr %930, i64 %1006
  %1010 = load float, ptr %1009, align 4, !tbaa !65
  %1011 = fadd fast float %1010, %1008
  store float %1011, ptr %1009, align 4, !tbaa !65
  %1012 = add nuw nsw i64 %988, 4
  %1013 = icmp eq i64 %1012, %274
  br i1 %1013, label %1014, label %987, !llvm.loop !503

1014:                                             ; preds = %984, %987, %968, %922, %919
  %1015 = add nuw nsw i32 %824, 1
  %1016 = icmp eq i32 %1015, %165
  br i1 %1016, label %1017, label %823, !llvm.loop !504

1017:                                             ; preds = %1014, %627
  %1018 = add nuw nsw i64 %405, 1
  %1019 = icmp eq i64 %1018, %275
  br i1 %1019, label %1020, label %404, !llvm.loop !505

1020:                                             ; preds = %1017, %247, %263
  %1021 = add nuw nsw i64 %248, 1
  %1022 = icmp eq i64 %1021, %166
  br i1 %1022, label %240, label %247, !llvm.loop !506

1023:                                             ; preds = %1100, %240
  br i1 %93, label %1024, label %1103

1024:                                             ; preds = %1023
  %1025 = load ptr, ptr %6, align 8, !tbaa !14
  %1026 = add i32 %16, %18
  %1027 = mul nsw i32 %1026, %10
  %1028 = sext i32 %1027 to i64
  %1029 = mul nsw i32 %15, %10
  %1030 = sext i32 %1029 to i64
  %1031 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 3
  %1032 = load i32, ptr %1031, align 4, !tbaa !74
  %1033 = icmp slt i32 %1032, 1
  %1034 = zext i32 %1032 to i64
  %1035 = add nsw i32 %1026, %18
  %1036 = mul nsw i32 %1035, %10
  %1037 = sext i32 %1036 to i64
  %1038 = icmp slt i32 %18, 2
  %1039 = sext i32 %1026 to i64
  %1040 = sext i32 %10 to i64
  %1041 = zext i32 %92 to i64
  %1042 = zext i32 %18 to i64
  %1043 = add nsw i64 %1037, 48
  %1044 = add nsw i64 %1030, 40
  %1045 = add nsw i64 %1028, 48
  %1046 = add nsw i64 %1030, 40
  %1047 = icmp ult i32 %1032, 32
  %1048 = and i64 %1034, 4294967264
  %1049 = icmp eq i64 %1048, %1034
  %1050 = and i64 %1034, 3
  %1051 = icmp eq i64 %1050, 0
  %1052 = icmp ult i32 %1032, 32
  %1053 = and i64 %1034, 4294967264
  %1054 = icmp eq i64 %1053, %1034
  %1055 = and i64 %1034, 3
  %1056 = icmp eq i64 %1055, 0
  %1057 = icmp ult i32 %1032, 8
  %1058 = and i64 %1034, 4294967288
  %1059 = icmp eq i64 %1058, %1034
  br label %1197

1060:                                             ; preds = %241, %1100
  %1061 = phi i64 [ 0, %241 ], [ %1101, %1100 ]
  %1062 = getelementptr inbounds ptr, ptr %242, i64 %1061
  %1063 = load ptr, ptr %1062, align 8, !tbaa !14
  %1064 = getelementptr inbounds %struct.CCGVert, ptr %1063, i64 0, i32 3
  %1065 = load i16, ptr %1064, align 2, !tbaa !78
  %1066 = icmp eq i16 %1065, 0
  br i1 %1066, label %1100, label %1067

1067:                                             ; preds = %1060
  %1068 = getelementptr inbounds %struct.CCGVert, ptr %1063, i64 1
  %1069 = getelementptr inbounds i8, ptr %1068, i64 %244
  %1070 = load i32, ptr %245, align 4, !tbaa !74
  %1071 = icmp sgt i32 %1070, 0
  br i1 %1071, label %1072, label %1100

1072:                                             ; preds = %1067
  %1073 = sitofp i16 %1065 to float
  %1074 = zext i32 %1070 to i64
  %1075 = icmp ult i32 %1070, 8
  br i1 %1075, label %1090, label %1076

1076:                                             ; preds = %1072
  %1077 = and i64 %1074, 4294967288
  %1078 = insertelement <8 x float> poison, float %1073, i64 0
  %1079 = shufflevector <8 x float> %1078, <8 x float> poison, <8 x i32> zeroinitializer
  %1080 = fdiv fast <8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1079
  br label %1081

1081:                                             ; preds = %1081, %1076
  %1082 = phi i64 [ 0, %1076 ], [ %1086, %1081 ]
  %1083 = getelementptr inbounds float, ptr %1069, i64 %1082
  %1084 = load <8 x float>, ptr %1083, align 4, !tbaa !65
  %1085 = fmul fast <8 x float> %1084, %1080
  store <8 x float> %1085, ptr %1083, align 4, !tbaa !65
  %1086 = add nuw i64 %1082, 8
  %1087 = icmp eq i64 %1086, %1077
  br i1 %1087, label %1088, label %1081, !llvm.loop !507

1088:                                             ; preds = %1081
  %1089 = icmp eq i64 %1077, %1074
  br i1 %1089, label %1100, label %1090

1090:                                             ; preds = %1072, %1088
  %1091 = phi i64 [ 0, %1072 ], [ %1077, %1088 ]
  %1092 = fdiv fast float 1.000000e+00, %1073
  br label %1093

1093:                                             ; preds = %1090, %1093
  %1094 = phi i64 [ %1098, %1093 ], [ %1091, %1090 ]
  %1095 = getelementptr inbounds float, ptr %1069, i64 %1094
  %1096 = load float, ptr %1095, align 4, !tbaa !65
  %1097 = fmul fast float %1096, %1092
  store float %1097, ptr %1095, align 4, !tbaa !65
  %1098 = add nuw nsw i64 %1094, 1
  %1099 = icmp eq i64 %1098, %1074
  br i1 %1099, label %1100, label %1093, !llvm.loop !508

1100:                                             ; preds = %1093, %1088, %1067, %1060
  %1101 = add nuw nsw i64 %1061, 1
  %1102 = icmp eq i64 %1101, %246
  br i1 %1102, label %1023, label %1060, !llvm.loop !509

1103:                                             ; preds = %1368, %1023
  br i1 %142, label %1104, label %1371

1104:                                             ; preds = %1103
  %1105 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 3
  %1106 = load i32, ptr %1105, align 4, !tbaa !74
  %1107 = icmp slt i32 %1106, 1
  %1108 = zext i32 %1106 to i64
  %1109 = icmp slt i32 %17, 2
  %1110 = add nsw i32 %13, -1
  %1111 = shl nuw i32 1, %1110
  %1112 = add nuw i32 %1111, 1
  %1113 = sub nsw i32 %13, %15
  %1114 = add nuw i32 %1111, 2
  %1115 = mul i32 %1112, %1114
  %1116 = mul nsw i32 %1112, %10
  %1117 = sext i32 %1116 to i64
  %1118 = shl i32 %1112, %16
  %1119 = add nsw i32 %1118, %17
  %1120 = shl i32 %1119, %1113
  %1121 = add nsw i32 %1120, %1112
  %1122 = mul nsw i32 %1121, %10
  %1123 = sext i32 %1122 to i64
  %1124 = mul nsw i32 %15, %10
  %1125 = sext i32 %1124 to i64
  %1126 = icmp eq i32 %16, 31
  %1127 = add i32 %16, %18
  %1128 = shl i32 %10, %16
  %1129 = shl i32 %1128, %1113
  %1130 = sext i32 %1129 to i64
  %1131 = shl i32 %17, %1113
  %1132 = add nsw i32 %1131, %1112
  %1133 = mul nsw i32 %1132, %10
  %1134 = sext i32 %1133 to i64
  %1135 = tail call i32 @llvm.smax.i32(i32 %17, i32 1)
  %1136 = zext i32 %62 to i64
  %1137 = add nsw i64 %1130, 24
  %1138 = mul i32 %10, %1114
  %1139 = mul i32 %1138, %1112
  %1140 = add nsw i64 %1134, 24
  %1141 = mul i32 %10, %1114
  %1142 = mul i32 %1141, %1112
  %1143 = mul i32 %10, %1114
  %1144 = mul i32 %1143, %1112
  %1145 = add nsw i64 %1123, 24
  %1146 = add nsw i64 %1125, 40
  %1147 = add nsw i64 %1117, 24
  %1148 = mul i32 %10, %1114
  %1149 = mul i32 %1148, %1112
  %1150 = icmp ult i32 %1106, 8
  %1151 = and i64 %1108, 4294967288
  %1152 = icmp eq i64 %1151, %1108
  %1153 = select i1 %1109, i1 true, i1 %1107
  %1154 = icmp ult i32 %1106, 32
  %1155 = and i64 %1108, 4294967264
  %1156 = icmp eq i64 %1155, %1108
  %1157 = icmp ult i32 %1106, 32
  %1158 = and i64 %1108, 4294967264
  %1159 = icmp eq i64 %1158, %1108
  %1160 = and i64 %1108, 3
  %1161 = icmp eq i64 %1160, 0
  %1162 = icmp ult i32 %1106, 32
  %1163 = and i64 %1108, 4294967264
  %1164 = icmp eq i64 %1163, %1108
  %1165 = and i64 %1108, 3
  %1166 = icmp eq i64 %1165, 0
  %1167 = icmp ult i32 %1106, 32
  %1168 = and i64 %1108, 4294967264
  %1169 = icmp eq i64 %1168, %1108
  %1170 = and i64 %1108, 3
  %1171 = icmp eq i64 %1170, 0
  %1172 = icmp ult i32 %1106, 32
  %1173 = and i64 %1108, 4294967264
  %1174 = icmp eq i64 %1173, %1108
  %1175 = and i64 %1108, 3
  %1176 = icmp eq i64 %1175, 0
  %1177 = icmp ult i32 %1106, 32
  %1178 = and i64 %1108, 4294967264
  %1179 = icmp eq i64 %1178, %1108
  %1180 = and i64 %1108, 3
  %1181 = icmp eq i64 %1180, 0
  %1182 = icmp ult i32 %1106, 32
  %1183 = and i64 %1108, 4294967264
  %1184 = icmp eq i64 %1183, %1108
  %1185 = and i64 %1108, 3
  %1186 = icmp eq i64 %1185, 0
  %1187 = icmp ult i32 %1106, 32
  %1188 = and i64 %1108, 4294967264
  %1189 = icmp eq i64 %1188, %1108
  %1190 = and i64 %1108, 3
  %1191 = icmp eq i64 %1190, 0
  %1192 = icmp ult i32 %1106, 32
  %1193 = and i64 %1108, 4294967264
  %1194 = icmp eq i64 %1193, %1108
  %1195 = and i64 %1108, 3
  %1196 = icmp eq i64 %1195, 0
  br label %1379

1197:                                             ; preds = %1024, %1368
  %1198 = phi i64 [ 0, %1024 ], [ %1369, %1368 ]
  %1199 = getelementptr inbounds ptr, ptr %1025, i64 %1198
  %1200 = load ptr, ptr %1199, align 8, !tbaa !14
  %1201 = ptrtoint ptr %1200 to i64
  %1202 = getelementptr inbounds %struct.CCGEdge, ptr %1200, i64 1
  %1203 = getelementptr i8, ptr %1202, i64 %1028
  %1204 = getelementptr inbounds %struct.CCGEdge, ptr %1200, i64 0, i32 5
  %1205 = load ptr, ptr %1204, align 8, !tbaa !83
  %1206 = ptrtoint ptr %1205 to i64
  %1207 = getelementptr inbounds %struct.CCGVert, ptr %1205, i64 1
  %1208 = getelementptr i8, ptr %1207, i64 %1030
  br i1 %1033, label %1368, label %1209

1209:                                             ; preds = %1197
  br i1 %1047, label %1232, label %1210

1210:                                             ; preds = %1209
  %1211 = add i64 %1045, %1201
  %1212 = add i64 %1046, %1206
  %1213 = sub i64 %1211, %1212
  %1214 = icmp ult i64 %1213, 128
  br i1 %1214, label %1232, label %1215

1215:                                             ; preds = %1210, %1215
  %1216 = phi i64 [ %1229, %1215 ], [ 0, %1210 ]
  %1217 = getelementptr inbounds float, ptr %1208, i64 %1216
  %1218 = load <8 x float>, ptr %1217, align 4, !tbaa !65
  %1219 = getelementptr inbounds float, ptr %1217, i64 8
  %1220 = load <8 x float>, ptr %1219, align 4, !tbaa !65
  %1221 = getelementptr inbounds float, ptr %1217, i64 16
  %1222 = load <8 x float>, ptr %1221, align 4, !tbaa !65
  %1223 = getelementptr inbounds float, ptr %1217, i64 24
  %1224 = load <8 x float>, ptr %1223, align 4, !tbaa !65
  %1225 = getelementptr inbounds float, ptr %1203, i64 %1216
  store <8 x float> %1218, ptr %1225, align 4, !tbaa !65
  %1226 = getelementptr inbounds float, ptr %1225, i64 8
  store <8 x float> %1220, ptr %1226, align 4, !tbaa !65
  %1227 = getelementptr inbounds float, ptr %1225, i64 16
  store <8 x float> %1222, ptr %1227, align 4, !tbaa !65
  %1228 = getelementptr inbounds float, ptr %1225, i64 24
  store <8 x float> %1224, ptr %1228, align 4, !tbaa !65
  %1229 = add nuw i64 %1216, 32
  %1230 = icmp eq i64 %1229, %1048
  br i1 %1230, label %1231, label %1215, !llvm.loop !510

1231:                                             ; preds = %1215
  br i1 %1049, label %1267, label %1232

1232:                                             ; preds = %1210, %1209, %1231
  %1233 = phi i64 [ 0, %1210 ], [ 0, %1209 ], [ %1048, %1231 ]
  %1234 = xor i64 %1233, -1
  %1235 = add nsw i64 %1234, %1034
  br i1 %1051, label %1245, label %1236

1236:                                             ; preds = %1232, %1236
  %1237 = phi i64 [ %1242, %1236 ], [ %1233, %1232 ]
  %1238 = phi i64 [ %1243, %1236 ], [ 0, %1232 ]
  %1239 = getelementptr inbounds float, ptr %1208, i64 %1237
  %1240 = load float, ptr %1239, align 4, !tbaa !65
  %1241 = getelementptr inbounds float, ptr %1203, i64 %1237
  store float %1240, ptr %1241, align 4, !tbaa !65
  %1242 = add nuw nsw i64 %1237, 1
  %1243 = add i64 %1238, 1
  %1244 = icmp eq i64 %1243, %1050
  br i1 %1244, label %1245, label %1236, !llvm.loop !511

1245:                                             ; preds = %1236, %1232
  %1246 = phi i64 [ %1233, %1232 ], [ %1242, %1236 ]
  %1247 = icmp ult i64 %1235, 3
  br i1 %1247, label %1267, label %1248

1248:                                             ; preds = %1245, %1248
  %1249 = phi i64 [ %1265, %1248 ], [ %1246, %1245 ]
  %1250 = getelementptr inbounds float, ptr %1208, i64 %1249
  %1251 = load float, ptr %1250, align 4, !tbaa !65
  %1252 = getelementptr inbounds float, ptr %1203, i64 %1249
  store float %1251, ptr %1252, align 4, !tbaa !65
  %1253 = add nuw nsw i64 %1249, 1
  %1254 = getelementptr inbounds float, ptr %1208, i64 %1253
  %1255 = load float, ptr %1254, align 4, !tbaa !65
  %1256 = getelementptr inbounds float, ptr %1203, i64 %1253
  store float %1255, ptr %1256, align 4, !tbaa !65
  %1257 = add nuw nsw i64 %1249, 2
  %1258 = getelementptr inbounds float, ptr %1208, i64 %1257
  %1259 = load float, ptr %1258, align 4, !tbaa !65
  %1260 = getelementptr inbounds float, ptr %1203, i64 %1257
  store float %1259, ptr %1260, align 4, !tbaa !65
  %1261 = add nuw nsw i64 %1249, 3
  %1262 = getelementptr inbounds float, ptr %1208, i64 %1261
  %1263 = load float, ptr %1262, align 4, !tbaa !65
  %1264 = getelementptr inbounds float, ptr %1203, i64 %1261
  store float %1263, ptr %1264, align 4, !tbaa !65
  %1265 = add nuw nsw i64 %1249, 4
  %1266 = icmp eq i64 %1265, %1034
  br i1 %1266, label %1267, label %1248, !llvm.loop !512

1267:                                             ; preds = %1245, %1248, %1231
  %1268 = getelementptr inbounds i8, ptr %1202, i64 %1037
  %1269 = getelementptr inbounds %struct.CCGEdge, ptr %1200, i64 0, i32 6
  %1270 = load ptr, ptr %1269, align 8, !tbaa !85
  %1271 = getelementptr inbounds %struct.CCGVert, ptr %1270, i64 1
  %1272 = getelementptr inbounds i8, ptr %1271, i64 %1030
  br i1 %1052, label %1296, label %1273

1273:                                             ; preds = %1267
  %1274 = ptrtoint ptr %1270 to i64
  %1275 = add i64 %1043, %1201
  %1276 = add i64 %1044, %1274
  %1277 = sub i64 %1275, %1276
  %1278 = icmp ult i64 %1277, 128
  br i1 %1278, label %1296, label %1279

1279:                                             ; preds = %1273, %1279
  %1280 = phi i64 [ %1293, %1279 ], [ 0, %1273 ]
  %1281 = getelementptr inbounds float, ptr %1272, i64 %1280
  %1282 = load <8 x float>, ptr %1281, align 4, !tbaa !65
  %1283 = getelementptr inbounds float, ptr %1281, i64 8
  %1284 = load <8 x float>, ptr %1283, align 4, !tbaa !65
  %1285 = getelementptr inbounds float, ptr %1281, i64 16
  %1286 = load <8 x float>, ptr %1285, align 4, !tbaa !65
  %1287 = getelementptr inbounds float, ptr %1281, i64 24
  %1288 = load <8 x float>, ptr %1287, align 4, !tbaa !65
  %1289 = getelementptr inbounds float, ptr %1268, i64 %1280
  store <8 x float> %1282, ptr %1289, align 4, !tbaa !65
  %1290 = getelementptr inbounds float, ptr %1289, i64 8
  store <8 x float> %1284, ptr %1290, align 4, !tbaa !65
  %1291 = getelementptr inbounds float, ptr %1289, i64 16
  store <8 x float> %1286, ptr %1291, align 4, !tbaa !65
  %1292 = getelementptr inbounds float, ptr %1289, i64 24
  store <8 x float> %1288, ptr %1292, align 4, !tbaa !65
  %1293 = add nuw i64 %1280, 32
  %1294 = icmp eq i64 %1293, %1053
  br i1 %1294, label %1295, label %1279, !llvm.loop !513

1295:                                             ; preds = %1279
  br i1 %1054, label %1331, label %1296

1296:                                             ; preds = %1273, %1267, %1295
  %1297 = phi i64 [ 0, %1273 ], [ 0, %1267 ], [ %1053, %1295 ]
  %1298 = xor i64 %1297, -1
  %1299 = add nsw i64 %1298, %1034
  br i1 %1056, label %1309, label %1300

1300:                                             ; preds = %1296, %1300
  %1301 = phi i64 [ %1306, %1300 ], [ %1297, %1296 ]
  %1302 = phi i64 [ %1307, %1300 ], [ 0, %1296 ]
  %1303 = getelementptr inbounds float, ptr %1272, i64 %1301
  %1304 = load float, ptr %1303, align 4, !tbaa !65
  %1305 = getelementptr inbounds float, ptr %1268, i64 %1301
  store float %1304, ptr %1305, align 4, !tbaa !65
  %1306 = add nuw nsw i64 %1301, 1
  %1307 = add i64 %1302, 1
  %1308 = icmp eq i64 %1307, %1055
  br i1 %1308, label %1309, label %1300, !llvm.loop !514

1309:                                             ; preds = %1300, %1296
  %1310 = phi i64 [ %1297, %1296 ], [ %1306, %1300 ]
  %1311 = icmp ult i64 %1299, 3
  br i1 %1311, label %1331, label %1312

1312:                                             ; preds = %1309, %1312
  %1313 = phi i64 [ %1329, %1312 ], [ %1310, %1309 ]
  %1314 = getelementptr inbounds float, ptr %1272, i64 %1313
  %1315 = load float, ptr %1314, align 4, !tbaa !65
  %1316 = getelementptr inbounds float, ptr %1268, i64 %1313
  store float %1315, ptr %1316, align 4, !tbaa !65
  %1317 = add nuw nsw i64 %1313, 1
  %1318 = getelementptr inbounds float, ptr %1272, i64 %1317
  %1319 = load float, ptr %1318, align 4, !tbaa !65
  %1320 = getelementptr inbounds float, ptr %1268, i64 %1317
  store float %1319, ptr %1320, align 4, !tbaa !65
  %1321 = add nuw nsw i64 %1313, 2
  %1322 = getelementptr inbounds float, ptr %1272, i64 %1321
  %1323 = load float, ptr %1322, align 4, !tbaa !65
  %1324 = getelementptr inbounds float, ptr %1268, i64 %1321
  store float %1323, ptr %1324, align 4, !tbaa !65
  %1325 = add nuw nsw i64 %1313, 3
  %1326 = getelementptr inbounds float, ptr %1272, i64 %1325
  %1327 = load float, ptr %1326, align 4, !tbaa !65
  %1328 = getelementptr inbounds float, ptr %1268, i64 %1325
  store float %1327, ptr %1328, align 4, !tbaa !65
  %1329 = add nuw nsw i64 %1313, 4
  %1330 = icmp eq i64 %1329, %1034
  br i1 %1330, label %1331, label %1312, !llvm.loop !515

1331:                                             ; preds = %1309, %1312, %1295
  %1332 = getelementptr inbounds %struct.CCGEdge, ptr %1200, i64 0, i32 2
  %1333 = load i16, ptr %1332, align 8, !tbaa !81
  %1334 = icmp eq i16 %1333, 0
  %1335 = select i1 %1334, i1 true, i1 %1038
  %1336 = or i1 %1335, %1033
  br i1 %1336, label %1368, label %1337

1337:                                             ; preds = %1331
  %1338 = sitofp i16 %1333 to float
  %1339 = insertelement <8 x float> poison, float %1338, i64 0
  %1340 = shufflevector <8 x float> %1339, <8 x float> poison, <8 x i32> zeroinitializer
  %1341 = fdiv fast <8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1340
  %1342 = fdiv fast float 1.000000e+00, %1338
  br label %1343

1343:                                             ; preds = %1337, %1365
  %1344 = phi i64 [ 1, %1337 ], [ %1366, %1365 ]
  %1345 = add nsw i64 %1344, %1039
  %1346 = mul nsw i64 %1345, %1040
  %1347 = getelementptr inbounds i8, ptr %1202, i64 %1346
  br i1 %1057, label %1356, label %1348

1348:                                             ; preds = %1343, %1348
  %1349 = phi i64 [ %1353, %1348 ], [ 0, %1343 ]
  %1350 = getelementptr inbounds float, ptr %1347, i64 %1349
  %1351 = load <8 x float>, ptr %1350, align 4, !tbaa !65
  %1352 = fmul fast <8 x float> %1351, %1341
  store <8 x float> %1352, ptr %1350, align 4, !tbaa !65
  %1353 = add nuw i64 %1349, 8
  %1354 = icmp eq i64 %1353, %1058
  br i1 %1354, label %1355, label %1348, !llvm.loop !516

1355:                                             ; preds = %1348
  br i1 %1059, label %1365, label %1356

1356:                                             ; preds = %1343, %1355
  %1357 = phi i64 [ 0, %1343 ], [ %1058, %1355 ]
  br label %1358

1358:                                             ; preds = %1356, %1358
  %1359 = phi i64 [ %1363, %1358 ], [ %1357, %1356 ]
  %1360 = getelementptr inbounds float, ptr %1347, i64 %1359
  %1361 = load float, ptr %1360, align 4, !tbaa !65
  %1362 = fmul fast float %1361, %1342
  store float %1362, ptr %1360, align 4, !tbaa !65
  %1363 = add nuw nsw i64 %1359, 1
  %1364 = icmp eq i64 %1363, %1034
  br i1 %1364, label %1365, label %1358, !llvm.loop !517

1365:                                             ; preds = %1358, %1355
  %1366 = add nuw nsw i64 %1344, 1
  %1367 = icmp eq i64 %1366, %1042
  br i1 %1367, label %1368, label %1343, !llvm.loop !518

1368:                                             ; preds = %1365, %1331, %1197
  %1369 = add nuw nsw i64 %1198, 1
  %1370 = icmp eq i64 %1369, %1041
  br i1 %1370, label %1103, label %1197, !llvm.loop !519

1371:                                             ; preds = %2105, %1103
  br i1 %65, label %1372, label %2120

1372:                                             ; preds = %1371
  %1373 = load ptr, ptr %5, align 8, !tbaa !14
  %1374 = zext i32 %64 to i64
  %1375 = and i64 %1374, 7
  %1376 = icmp ult i32 %64, 8
  br i1 %1376, label %2108, label %1377

1377:                                             ; preds = %1372
  %1378 = and i64 %1374, 4294967288
  br label %2128

1379:                                             ; preds = %1104, %2105
  %1380 = phi i64 [ 0, %1104 ], [ %2106, %2105 ]
  %1381 = getelementptr inbounds ptr, ptr %63, i64 %1380
  %1382 = load ptr, ptr %1381, align 8, !tbaa !14
  %1383 = ptrtoint ptr %1382 to i64
  %1384 = getelementptr inbounds %struct.CCGFace, ptr %1382, i64 1
  %1385 = getelementptr inbounds %struct.CCGFace, ptr %1382, i64 0, i32 2
  %1386 = load i16, ptr %1385, align 8, !tbaa !89
  %1387 = sext i16 %1386 to i64
  %1388 = getelementptr inbounds ptr, ptr %1384, i64 %1387
  %1389 = getelementptr ptr, ptr %1388, i64 %1387
  br i1 %1107, label %1414, label %1390

1390:                                             ; preds = %1379
  %1391 = sitofp i16 %1386 to float
  br i1 %1150, label %1404, label %1392

1392:                                             ; preds = %1390
  %1393 = insertelement <8 x float> poison, float %1391, i64 0
  %1394 = shufflevector <8 x float> %1393, <8 x float> poison, <8 x i32> zeroinitializer
  %1395 = fdiv fast <8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1394
  br label %1396

1396:                                             ; preds = %1396, %1392
  %1397 = phi i64 [ 0, %1392 ], [ %1401, %1396 ]
  %1398 = getelementptr inbounds float, ptr %1389, i64 %1397
  %1399 = load <8 x float>, ptr %1398, align 4, !tbaa !65
  %1400 = fmul fast <8 x float> %1399, %1395
  store <8 x float> %1400, ptr %1398, align 4, !tbaa !65
  %1401 = add nuw i64 %1397, 8
  %1402 = icmp eq i64 %1401, %1151
  br i1 %1402, label %1403, label %1396, !llvm.loop !520

1403:                                             ; preds = %1396
  br i1 %1152, label %1414, label %1404

1404:                                             ; preds = %1390, %1403
  %1405 = phi i64 [ 0, %1390 ], [ %1151, %1403 ]
  %1406 = fdiv fast float 1.000000e+00, %1391
  br label %1407

1407:                                             ; preds = %1404, %1407
  %1408 = phi i64 [ %1412, %1407 ], [ %1405, %1404 ]
  %1409 = getelementptr inbounds float, ptr %1389, i64 %1408
  %1410 = load float, ptr %1409, align 4, !tbaa !65
  %1411 = fmul fast float %1410, %1406
  store float %1411, ptr %1409, align 4, !tbaa !65
  %1412 = add nuw nsw i64 %1408, 1
  %1413 = icmp eq i64 %1412, %1108
  br i1 %1413, label %1414, label %1407, !llvm.loop !521

1414:                                             ; preds = %1407, %1403, %1379
  %1415 = sext i16 %1386 to i32
  %1416 = icmp sgt i16 %1386, 0
  br i1 %1416, label %1417, label %2105

1417:                                             ; preds = %1414
  br i1 %1153, label %1467, label %1418

1418:                                             ; preds = %1417
  %1419 = zext i32 %1415 to i64
  br label %1420

1420:                                             ; preds = %1418, %1463
  %1421 = phi i64 [ 0, %1418 ], [ %1464, %1463 ]
  %1422 = trunc i64 %1421 to i32
  %1423 = mul i32 %1115, %1422
  %1424 = add nsw i32 %1423, 1
  %1425 = mul nsw i32 %1424, %10
  %1426 = sext i32 %1425 to i64
  %1427 = getelementptr inbounds i8, ptr %1389, i64 %1426
  br label %1428

1428:                                             ; preds = %1460, %1420
  %1429 = phi i32 [ 1, %1420 ], [ %1461, %1460 ]
  %1430 = mul nsw i32 %1429, %10
  %1431 = shl i32 %1430, %1113
  %1432 = sext i32 %1431 to i64
  %1433 = getelementptr inbounds i8, ptr %1427, i64 %1432
  br i1 %1154, label %1451, label %1434

1434:                                             ; preds = %1428, %1434
  %1435 = phi i64 [ %1448, %1434 ], [ 0, %1428 ]
  %1436 = getelementptr inbounds float, ptr %1433, i64 %1435
  %1437 = load <8 x float>, ptr %1436, align 4, !tbaa !65
  %1438 = getelementptr inbounds float, ptr %1436, i64 8
  %1439 = load <8 x float>, ptr %1438, align 4, !tbaa !65
  %1440 = getelementptr inbounds float, ptr %1436, i64 16
  %1441 = load <8 x float>, ptr %1440, align 4, !tbaa !65
  %1442 = getelementptr inbounds float, ptr %1436, i64 24
  %1443 = load <8 x float>, ptr %1442, align 4, !tbaa !65
  %1444 = fmul fast <8 x float> %1437, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %1445 = fmul fast <8 x float> %1439, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %1446 = fmul fast <8 x float> %1441, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %1447 = fmul fast <8 x float> %1443, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  store <8 x float> %1444, ptr %1436, align 4, !tbaa !65
  store <8 x float> %1445, ptr %1438, align 4, !tbaa !65
  store <8 x float> %1446, ptr %1440, align 4, !tbaa !65
  store <8 x float> %1447, ptr %1442, align 4, !tbaa !65
  %1448 = add nuw i64 %1435, 32
  %1449 = icmp eq i64 %1448, %1155
  br i1 %1449, label %1450, label %1434, !llvm.loop !522

1450:                                             ; preds = %1434
  br i1 %1156, label %1460, label %1451

1451:                                             ; preds = %1428, %1450
  %1452 = phi i64 [ 0, %1428 ], [ %1155, %1450 ]
  br label %1453

1453:                                             ; preds = %1451, %1453
  %1454 = phi i64 [ %1458, %1453 ], [ %1452, %1451 ]
  %1455 = getelementptr inbounds float, ptr %1433, i64 %1454
  %1456 = load float, ptr %1455, align 4, !tbaa !65
  %1457 = fmul fast float %1456, 5.000000e-01
  store float %1457, ptr %1455, align 4, !tbaa !65
  %1458 = add nuw nsw i64 %1454, 1
  %1459 = icmp eq i64 %1458, %1108
  br i1 %1459, label %1460, label %1453, !llvm.loop !523

1460:                                             ; preds = %1453, %1450
  %1461 = add nuw nsw i32 %1429, 1
  %1462 = icmp eq i32 %1461, %17
  br i1 %1462, label %1463, label %1428, !llvm.loop !524

1463:                                             ; preds = %1460
  %1464 = add nuw nsw i64 %1421, 1
  %1465 = icmp eq i64 %1464, %1419
  br i1 %1465, label %1466, label %1420, !llvm.loop !525

1466:                                             ; preds = %1463
  br i1 %1416, label %1467, label %2105

1467:                                             ; preds = %1417, %1466
  %1468 = add nsw i32 %1415, -1
  %1469 = zext i32 %1415 to i64
  %1470 = add i64 %1137, %1383
  %1471 = shl nsw i64 %1387, 4
  %1472 = add i64 %1470, %1471
  %1473 = add i64 %1140, %1383
  %1474 = add i64 %1473, %1471
  %1475 = add i64 %1383, 24
  %1476 = shl nsw i64 %1387, 4
  %1477 = add i64 %1475, %1476
  %1478 = add i64 %1383, 24
  %1479 = shl nsw i64 %1387, 4
  %1480 = add i64 %1478, %1479
  %1481 = add i64 %1383, 24
  %1482 = shl nsw i64 %1387, 4
  %1483 = add i64 %1481, %1482
  %1484 = add i64 %1383, 24
  %1485 = add i64 %1484, %1482
  %1486 = add i64 %1383, 24
  %1487 = shl nsw i64 %1387, 4
  %1488 = add i64 %1486, %1487
  %1489 = add i64 %1383, 24
  %1490 = add i64 %1489, %1487
  %1491 = add i64 %1145, %1383
  %1492 = shl nsw i64 %1387, 4
  %1493 = add i64 %1491, %1492
  %1494 = add i64 %1147, %1383
  %1495 = shl nsw i64 %1387, 4
  %1496 = add i64 %1494, %1495
  %1497 = add i64 %1383, 24
  %1498 = add i64 %1497, %1495
  br label %1499

1499:                                             ; preds = %1467, %2102
  %1500 = phi i64 [ 0, %1467 ], [ %2103, %2102 ]
  %1501 = trunc i64 %1500 to i32
  %1502 = mul i32 %1144, %1501
  %1503 = add i32 %1502, %10
  %1504 = sext i32 %1503 to i64
  %1505 = add i64 %1493, %1504
  %1506 = trunc i64 %1500 to i32
  %1507 = mul i32 %1144, %1506
  %1508 = add i32 %1507, %10
  %1509 = sext i32 %1508 to i64
  %1510 = trunc i64 %1500 to i32
  %1511 = mul i32 %1142, %1510
  %1512 = add i32 %1511, %10
  %1513 = sext i32 %1512 to i64
  %1514 = trunc i64 %1500 to i32
  %1515 = mul i32 %1142, %1514
  %1516 = add i32 %1515, %10
  %1517 = sext i32 %1516 to i64
  %1518 = trunc i64 %1500 to i32
  %1519 = mul i32 %1142, %1518
  %1520 = add i32 %1519, %10
  %1521 = sext i32 %1520 to i64
  %1522 = trunc i64 %1500 to i32
  %1523 = mul i32 %1139, %1522
  %1524 = add i32 %1523, %10
  %1525 = trunc i64 %1500 to i32
  %1526 = mul i32 %1139, %1525
  %1527 = add i32 %1526, %10
  %1528 = sext i32 %1527 to i64
  %1529 = add i64 %1472, %1528
  %1530 = add i64 %1474, %1528
  %1531 = trunc i64 %1500 to i32
  %1532 = add i32 %1468, %1531
  %1533 = srem i32 %1532, %1415
  %1534 = getelementptr inbounds ptr, ptr %1388, i64 %1500
  %1535 = load ptr, ptr %1534, align 8, !tbaa !14
  %1536 = ptrtoint ptr %1535 to i64
  %1537 = sext i32 %1533 to i64
  %1538 = getelementptr inbounds ptr, ptr %1388, i64 %1537
  %1539 = load ptr, ptr %1538, align 8, !tbaa !14
  %1540 = ptrtoint ptr %1539 to i64
  %1541 = trunc i64 %1500 to i32
  %1542 = mul i32 %1115, %1541
  %1543 = add nsw i32 %1542, 1
  %1544 = mul nsw i32 %1543, %10
  %1545 = sext i32 %1544 to i64
  %1546 = getelementptr inbounds i8, ptr %1389, i64 %1545
  %1547 = getelementptr inbounds i8, ptr %1546, i64 %1117
  br i1 %1107, label %1590, label %1548

1548:                                             ; preds = %1499
  %1549 = trunc i64 %1500 to i32
  %1550 = mul i32 %1149, %1549
  %1551 = add i32 %1550, %10
  %1552 = sext i32 %1551 to i64
  %1553 = add i64 %1496, %1552
  %1554 = sub i64 %1553, %1498
  %1555 = icmp ult i64 %1554, 128
  %1556 = select i1 %1157, i1 true, i1 %1555
  br i1 %1556, label %1574, label %1557

1557:                                             ; preds = %1548, %1557
  %1558 = phi i64 [ %1571, %1557 ], [ 0, %1548 ]
  %1559 = getelementptr inbounds float, ptr %1389, i64 %1558
  %1560 = load <8 x float>, ptr %1559, align 4, !tbaa !65
  %1561 = getelementptr inbounds float, ptr %1559, i64 8
  %1562 = load <8 x float>, ptr %1561, align 4, !tbaa !65
  %1563 = getelementptr inbounds float, ptr %1559, i64 16
  %1564 = load <8 x float>, ptr %1563, align 4, !tbaa !65
  %1565 = getelementptr inbounds float, ptr %1559, i64 24
  %1566 = load <8 x float>, ptr %1565, align 4, !tbaa !65
  %1567 = getelementptr inbounds float, ptr %1547, i64 %1558
  store <8 x float> %1560, ptr %1567, align 4, !tbaa !65
  %1568 = getelementptr inbounds float, ptr %1567, i64 8
  store <8 x float> %1562, ptr %1568, align 4, !tbaa !65
  %1569 = getelementptr inbounds float, ptr %1567, i64 16
  store <8 x float> %1564, ptr %1569, align 4, !tbaa !65
  %1570 = getelementptr inbounds float, ptr %1567, i64 24
  store <8 x float> %1566, ptr %1570, align 4, !tbaa !65
  %1571 = add nuw i64 %1558, 32
  %1572 = icmp eq i64 %1571, %1158
  br i1 %1572, label %1573, label %1557, !llvm.loop !526

1573:                                             ; preds = %1557
  br i1 %1159, label %1612, label %1574

1574:                                             ; preds = %1548, %1573
  %1575 = phi i64 [ 0, %1548 ], [ %1158, %1573 ]
  %1576 = xor i64 %1575, -1
  %1577 = add nsw i64 %1576, %1108
  br i1 %1161, label %1587, label %1578

1578:                                             ; preds = %1574, %1578
  %1579 = phi i64 [ %1584, %1578 ], [ %1575, %1574 ]
  %1580 = phi i64 [ %1585, %1578 ], [ 0, %1574 ]
  %1581 = getelementptr inbounds float, ptr %1389, i64 %1579
  %1582 = load float, ptr %1581, align 4, !tbaa !65
  %1583 = getelementptr inbounds float, ptr %1547, i64 %1579
  store float %1582, ptr %1583, align 4, !tbaa !65
  %1584 = add nuw nsw i64 %1579, 1
  %1585 = add i64 %1580, 1
  %1586 = icmp eq i64 %1585, %1160
  br i1 %1586, label %1587, label %1578, !llvm.loop !527

1587:                                             ; preds = %1578, %1574
  %1588 = phi i64 [ %1575, %1574 ], [ %1584, %1578 ]
  %1589 = icmp ult i64 %1577, 3
  br i1 %1589, label %1612, label %1593

1590:                                             ; preds = %1499
  %1591 = getelementptr inbounds ptr, ptr %1384, i64 %1500
  %1592 = load ptr, ptr %1591, align 8, !tbaa !14
  br label %1676

1593:                                             ; preds = %1587, %1593
  %1594 = phi i64 [ %1610, %1593 ], [ %1588, %1587 ]
  %1595 = getelementptr inbounds float, ptr %1389, i64 %1594
  %1596 = load float, ptr %1595, align 4, !tbaa !65
  %1597 = getelementptr inbounds float, ptr %1547, i64 %1594
  store float %1596, ptr %1597, align 4, !tbaa !65
  %1598 = add nuw nsw i64 %1594, 1
  %1599 = getelementptr inbounds float, ptr %1389, i64 %1598
  %1600 = load float, ptr %1599, align 4, !tbaa !65
  %1601 = getelementptr inbounds float, ptr %1547, i64 %1598
  store float %1600, ptr %1601, align 4, !tbaa !65
  %1602 = add nuw nsw i64 %1594, 2
  %1603 = getelementptr inbounds float, ptr %1389, i64 %1602
  %1604 = load float, ptr %1603, align 4, !tbaa !65
  %1605 = getelementptr inbounds float, ptr %1547, i64 %1602
  store float %1604, ptr %1605, align 4, !tbaa !65
  %1606 = add nuw nsw i64 %1594, 3
  %1607 = getelementptr inbounds float, ptr %1389, i64 %1606
  %1608 = load float, ptr %1607, align 4, !tbaa !65
  %1609 = getelementptr inbounds float, ptr %1547, i64 %1606
  store float %1608, ptr %1609, align 4, !tbaa !65
  %1610 = add nuw nsw i64 %1594, 4
  %1611 = icmp eq i64 %1610, %1108
  br i1 %1611, label %1612, label %1593, !llvm.loop !528

1612:                                             ; preds = %1587, %1593, %1573
  %1613 = getelementptr inbounds i8, ptr %1546, i64 %1123
  %1614 = getelementptr inbounds ptr, ptr %1384, i64 %1500
  %1615 = load ptr, ptr %1614, align 8, !tbaa !14
  %1616 = ptrtoint ptr %1615 to i64
  %1617 = getelementptr inbounds %struct.CCGVert, ptr %1615, i64 1
  %1618 = getelementptr i8, ptr %1617, i64 %1125
  br i1 %1107, label %1676, label %1619

1619:                                             ; preds = %1612
  br i1 %1162, label %1641, label %1620

1620:                                             ; preds = %1619
  %1621 = add i64 %1146, %1616
  %1622 = sub i64 %1505, %1621
  %1623 = icmp ult i64 %1622, 128
  br i1 %1623, label %1641, label %1624

1624:                                             ; preds = %1620, %1624
  %1625 = phi i64 [ %1638, %1624 ], [ 0, %1620 ]
  %1626 = getelementptr inbounds float, ptr %1618, i64 %1625
  %1627 = load <8 x float>, ptr %1626, align 4, !tbaa !65
  %1628 = getelementptr inbounds float, ptr %1626, i64 8
  %1629 = load <8 x float>, ptr %1628, align 4, !tbaa !65
  %1630 = getelementptr inbounds float, ptr %1626, i64 16
  %1631 = load <8 x float>, ptr %1630, align 4, !tbaa !65
  %1632 = getelementptr inbounds float, ptr %1626, i64 24
  %1633 = load <8 x float>, ptr %1632, align 4, !tbaa !65
  %1634 = getelementptr inbounds float, ptr %1613, i64 %1625
  store <8 x float> %1627, ptr %1634, align 4, !tbaa !65
  %1635 = getelementptr inbounds float, ptr %1634, i64 8
  store <8 x float> %1629, ptr %1635, align 4, !tbaa !65
  %1636 = getelementptr inbounds float, ptr %1634, i64 16
  store <8 x float> %1631, ptr %1636, align 4, !tbaa !65
  %1637 = getelementptr inbounds float, ptr %1634, i64 24
  store <8 x float> %1633, ptr %1637, align 4, !tbaa !65
  %1638 = add nuw i64 %1625, 32
  %1639 = icmp eq i64 %1638, %1163
  br i1 %1639, label %1640, label %1624, !llvm.loop !529

1640:                                             ; preds = %1624
  br i1 %1164, label %1676, label %1641

1641:                                             ; preds = %1620, %1619, %1640
  %1642 = phi i64 [ 0, %1620 ], [ 0, %1619 ], [ %1163, %1640 ]
  %1643 = xor i64 %1642, -1
  %1644 = add nsw i64 %1643, %1108
  br i1 %1166, label %1654, label %1645

1645:                                             ; preds = %1641, %1645
  %1646 = phi i64 [ %1651, %1645 ], [ %1642, %1641 ]
  %1647 = phi i64 [ %1652, %1645 ], [ 0, %1641 ]
  %1648 = getelementptr inbounds float, ptr %1618, i64 %1646
  %1649 = load float, ptr %1648, align 4, !tbaa !65
  %1650 = getelementptr inbounds float, ptr %1613, i64 %1646
  store float %1649, ptr %1650, align 4, !tbaa !65
  %1651 = add nuw nsw i64 %1646, 1
  %1652 = add i64 %1647, 1
  %1653 = icmp eq i64 %1652, %1165
  br i1 %1653, label %1654, label %1645, !llvm.loop !530

1654:                                             ; preds = %1645, %1641
  %1655 = phi i64 [ %1642, %1641 ], [ %1651, %1645 ]
  %1656 = icmp ult i64 %1644, 3
  br i1 %1656, label %1676, label %1657

1657:                                             ; preds = %1654, %1657
  %1658 = phi i64 [ %1674, %1657 ], [ %1655, %1654 ]
  %1659 = getelementptr inbounds float, ptr %1618, i64 %1658
  %1660 = load float, ptr %1659, align 4, !tbaa !65
  %1661 = getelementptr inbounds float, ptr %1613, i64 %1658
  store float %1660, ptr %1661, align 4, !tbaa !65
  %1662 = add nuw nsw i64 %1658, 1
  %1663 = getelementptr inbounds float, ptr %1618, i64 %1662
  %1664 = load float, ptr %1663, align 4, !tbaa !65
  %1665 = getelementptr inbounds float, ptr %1613, i64 %1662
  store float %1664, ptr %1665, align 4, !tbaa !65
  %1666 = add nuw nsw i64 %1658, 2
  %1667 = getelementptr inbounds float, ptr %1618, i64 %1666
  %1668 = load float, ptr %1667, align 4, !tbaa !65
  %1669 = getelementptr inbounds float, ptr %1613, i64 %1666
  store float %1668, ptr %1669, align 4, !tbaa !65
  %1670 = add nuw nsw i64 %1658, 3
  %1671 = getelementptr inbounds float, ptr %1618, i64 %1670
  %1672 = load float, ptr %1671, align 4, !tbaa !65
  %1673 = getelementptr inbounds float, ptr %1613, i64 %1670
  store float %1672, ptr %1673, align 4, !tbaa !65
  %1674 = add nuw nsw i64 %1658, 4
  %1675 = icmp eq i64 %1674, %1108
  br i1 %1675, label %1676, label %1657, !llvm.loop !531

1676:                                             ; preds = %1654, %1657, %1640, %1590, %1612
  %1677 = phi ptr [ %1592, %1590 ], [ %1615, %1612 ], [ %1615, %1640 ], [ %1615, %1657 ], [ %1615, %1654 ]
  br i1 %1109, label %1688, label %1678

1678:                                             ; preds = %1676
  %1679 = mul i32 %1115, %1533
  %1680 = add nsw i32 %1679, 1
  %1681 = mul nsw i32 %1680, %10
  %1682 = sext i32 %1681 to i64
  %1683 = getelementptr inbounds i8, ptr %1389, i64 %1682
  %1684 = add i64 %1483, %1513
  %1685 = add i64 %1485, %1682
  %1686 = add i64 %1488, %1509
  %1687 = add i64 %1490, %1509
  br label %1702

1688:                                             ; preds = %1837, %1676
  br i1 %1126, label %1987, label %1689

1689:                                             ; preds = %1688
  %1690 = getelementptr inbounds %struct.CCGEdge, ptr %1535, i64 0, i32 5
  %1691 = load ptr, ptr %1690, align 8, !tbaa !83
  %1692 = icmp eq ptr %1691, %1677
  %1693 = getelementptr inbounds %struct.CCGEdge, ptr %1535, i64 1
  %1694 = getelementptr inbounds %struct.CCGEdge, ptr %1539, i64 0, i32 5
  %1695 = load ptr, ptr %1694, align 8, !tbaa !83
  %1696 = icmp eq ptr %1695, %1677
  %1697 = getelementptr inbounds %struct.CCGEdge, ptr %1539, i64 1
  %1698 = add i64 %1477, %1521
  %1699 = add i64 %1540, 48
  %1700 = add i64 %1480, %1517
  %1701 = add i64 %1536, 48
  br label %1840

1702:                                             ; preds = %1678, %1837
  %1703 = phi i32 [ 1, %1678 ], [ %1838, %1837 ]
  %1704 = shl i32 %1703, %1113
  %1705 = add nsw i32 %1704, %1112
  %1706 = mul nsw i32 %1705, %10
  %1707 = sext i32 %1706 to i64
  %1708 = getelementptr i8, ptr %1546, i64 %1707
  %1709 = mul nsw i32 %1703, %10
  %1710 = shl i32 %1709, %1113
  %1711 = sext i32 %1710 to i64
  %1712 = getelementptr i8, ptr %1546, i64 %1711
  br i1 %1107, label %1837, label %1713

1713:                                             ; preds = %1702
  br i1 %1167, label %1736, label %1714

1714:                                             ; preds = %1713
  %1715 = add i64 %1686, %1707
  %1716 = add i64 %1687, %1711
  %1717 = sub i64 %1715, %1716
  %1718 = icmp ult i64 %1717, 128
  br i1 %1718, label %1736, label %1719

1719:                                             ; preds = %1714, %1719
  %1720 = phi i64 [ %1733, %1719 ], [ 0, %1714 ]
  %1721 = getelementptr inbounds float, ptr %1712, i64 %1720
  %1722 = load <8 x float>, ptr %1721, align 4, !tbaa !65
  %1723 = getelementptr inbounds float, ptr %1721, i64 8
  %1724 = load <8 x float>, ptr %1723, align 4, !tbaa !65
  %1725 = getelementptr inbounds float, ptr %1721, i64 16
  %1726 = load <8 x float>, ptr %1725, align 4, !tbaa !65
  %1727 = getelementptr inbounds float, ptr %1721, i64 24
  %1728 = load <8 x float>, ptr %1727, align 4, !tbaa !65
  %1729 = getelementptr inbounds float, ptr %1708, i64 %1720
  store <8 x float> %1722, ptr %1729, align 4, !tbaa !65
  %1730 = getelementptr inbounds float, ptr %1729, i64 8
  store <8 x float> %1724, ptr %1730, align 4, !tbaa !65
  %1731 = getelementptr inbounds float, ptr %1729, i64 16
  store <8 x float> %1726, ptr %1731, align 4, !tbaa !65
  %1732 = getelementptr inbounds float, ptr %1729, i64 24
  store <8 x float> %1728, ptr %1732, align 4, !tbaa !65
  %1733 = add nuw i64 %1720, 32
  %1734 = icmp eq i64 %1733, %1168
  br i1 %1734, label %1735, label %1719, !llvm.loop !532

1735:                                             ; preds = %1719
  br i1 %1169, label %1771, label %1736

1736:                                             ; preds = %1714, %1713, %1735
  %1737 = phi i64 [ 0, %1714 ], [ 0, %1713 ], [ %1168, %1735 ]
  %1738 = xor i64 %1737, -1
  %1739 = add nsw i64 %1738, %1108
  br i1 %1171, label %1749, label %1740

1740:                                             ; preds = %1736, %1740
  %1741 = phi i64 [ %1746, %1740 ], [ %1737, %1736 ]
  %1742 = phi i64 [ %1747, %1740 ], [ 0, %1736 ]
  %1743 = getelementptr inbounds float, ptr %1712, i64 %1741
  %1744 = load float, ptr %1743, align 4, !tbaa !65
  %1745 = getelementptr inbounds float, ptr %1708, i64 %1741
  store float %1744, ptr %1745, align 4, !tbaa !65
  %1746 = add nuw nsw i64 %1741, 1
  %1747 = add i64 %1742, 1
  %1748 = icmp eq i64 %1747, %1170
  br i1 %1748, label %1749, label %1740, !llvm.loop !533

1749:                                             ; preds = %1740, %1736
  %1750 = phi i64 [ %1737, %1736 ], [ %1746, %1740 ]
  %1751 = icmp ult i64 %1739, 3
  br i1 %1751, label %1771, label %1752

1752:                                             ; preds = %1749, %1752
  %1753 = phi i64 [ %1769, %1752 ], [ %1750, %1749 ]
  %1754 = getelementptr inbounds float, ptr %1712, i64 %1753
  %1755 = load float, ptr %1754, align 4, !tbaa !65
  %1756 = getelementptr inbounds float, ptr %1708, i64 %1753
  store float %1755, ptr %1756, align 4, !tbaa !65
  %1757 = add nuw nsw i64 %1753, 1
  %1758 = getelementptr inbounds float, ptr %1712, i64 %1757
  %1759 = load float, ptr %1758, align 4, !tbaa !65
  %1760 = getelementptr inbounds float, ptr %1708, i64 %1757
  store float %1759, ptr %1760, align 4, !tbaa !65
  %1761 = add nuw nsw i64 %1753, 2
  %1762 = getelementptr inbounds float, ptr %1712, i64 %1761
  %1763 = load float, ptr %1762, align 4, !tbaa !65
  %1764 = getelementptr inbounds float, ptr %1708, i64 %1761
  store float %1763, ptr %1764, align 4, !tbaa !65
  %1765 = add nuw nsw i64 %1753, 3
  %1766 = getelementptr inbounds float, ptr %1712, i64 %1765
  %1767 = load float, ptr %1766, align 4, !tbaa !65
  %1768 = getelementptr inbounds float, ptr %1708, i64 %1765
  store float %1767, ptr %1768, align 4, !tbaa !65
  %1769 = add nuw nsw i64 %1753, 4
  %1770 = icmp eq i64 %1769, %1108
  br i1 %1770, label %1771, label %1752, !llvm.loop !534

1771:                                             ; preds = %1749, %1752, %1735
  %1772 = mul nsw i32 %1703, %1112
  %1773 = shl i32 %1772, %1113
  %1774 = add nsw i32 %1773, %1112
  %1775 = mul nsw i32 %1774, %10
  %1776 = sext i32 %1775 to i64
  %1777 = getelementptr i8, ptr %1546, i64 %1776
  %1778 = getelementptr i8, ptr %1683, i64 %1711
  br i1 %1107, label %1837, label %1779

1779:                                             ; preds = %1771
  br i1 %1172, label %1802, label %1780

1780:                                             ; preds = %1779
  %1781 = add i64 %1684, %1776
  %1782 = add i64 %1685, %1711
  %1783 = sub i64 %1781, %1782
  %1784 = icmp ult i64 %1783, 128
  br i1 %1784, label %1802, label %1785

1785:                                             ; preds = %1780, %1785
  %1786 = phi i64 [ %1799, %1785 ], [ 0, %1780 ]
  %1787 = getelementptr inbounds float, ptr %1778, i64 %1786
  %1788 = load <8 x float>, ptr %1787, align 4, !tbaa !65
  %1789 = getelementptr inbounds float, ptr %1787, i64 8
  %1790 = load <8 x float>, ptr %1789, align 4, !tbaa !65
  %1791 = getelementptr inbounds float, ptr %1787, i64 16
  %1792 = load <8 x float>, ptr %1791, align 4, !tbaa !65
  %1793 = getelementptr inbounds float, ptr %1787, i64 24
  %1794 = load <8 x float>, ptr %1793, align 4, !tbaa !65
  %1795 = getelementptr inbounds float, ptr %1777, i64 %1786
  store <8 x float> %1788, ptr %1795, align 4, !tbaa !65
  %1796 = getelementptr inbounds float, ptr %1795, i64 8
  store <8 x float> %1790, ptr %1796, align 4, !tbaa !65
  %1797 = getelementptr inbounds float, ptr %1795, i64 16
  store <8 x float> %1792, ptr %1797, align 4, !tbaa !65
  %1798 = getelementptr inbounds float, ptr %1795, i64 24
  store <8 x float> %1794, ptr %1798, align 4, !tbaa !65
  %1799 = add nuw i64 %1786, 32
  %1800 = icmp eq i64 %1799, %1173
  br i1 %1800, label %1801, label %1785, !llvm.loop !535

1801:                                             ; preds = %1785
  br i1 %1174, label %1837, label %1802

1802:                                             ; preds = %1780, %1779, %1801
  %1803 = phi i64 [ 0, %1780 ], [ 0, %1779 ], [ %1173, %1801 ]
  %1804 = xor i64 %1803, -1
  %1805 = add nsw i64 %1804, %1108
  br i1 %1176, label %1815, label %1806

1806:                                             ; preds = %1802, %1806
  %1807 = phi i64 [ %1812, %1806 ], [ %1803, %1802 ]
  %1808 = phi i64 [ %1813, %1806 ], [ 0, %1802 ]
  %1809 = getelementptr inbounds float, ptr %1778, i64 %1807
  %1810 = load float, ptr %1809, align 4, !tbaa !65
  %1811 = getelementptr inbounds float, ptr %1777, i64 %1807
  store float %1810, ptr %1811, align 4, !tbaa !65
  %1812 = add nuw nsw i64 %1807, 1
  %1813 = add i64 %1808, 1
  %1814 = icmp eq i64 %1813, %1175
  br i1 %1814, label %1815, label %1806, !llvm.loop !536

1815:                                             ; preds = %1806, %1802
  %1816 = phi i64 [ %1803, %1802 ], [ %1812, %1806 ]
  %1817 = icmp ult i64 %1805, 3
  br i1 %1817, label %1837, label %1818

1818:                                             ; preds = %1815, %1818
  %1819 = phi i64 [ %1835, %1818 ], [ %1816, %1815 ]
  %1820 = getelementptr inbounds float, ptr %1778, i64 %1819
  %1821 = load float, ptr %1820, align 4, !tbaa !65
  %1822 = getelementptr inbounds float, ptr %1777, i64 %1819
  store float %1821, ptr %1822, align 4, !tbaa !65
  %1823 = add nuw nsw i64 %1819, 1
  %1824 = getelementptr inbounds float, ptr %1778, i64 %1823
  %1825 = load float, ptr %1824, align 4, !tbaa !65
  %1826 = getelementptr inbounds float, ptr %1777, i64 %1823
  store float %1825, ptr %1826, align 4, !tbaa !65
  %1827 = add nuw nsw i64 %1819, 2
  %1828 = getelementptr inbounds float, ptr %1778, i64 %1827
  %1829 = load float, ptr %1828, align 4, !tbaa !65
  %1830 = getelementptr inbounds float, ptr %1777, i64 %1827
  store float %1829, ptr %1830, align 4, !tbaa !65
  %1831 = add nuw nsw i64 %1819, 3
  %1832 = getelementptr inbounds float, ptr %1778, i64 %1831
  %1833 = load float, ptr %1832, align 4, !tbaa !65
  %1834 = getelementptr inbounds float, ptr %1777, i64 %1831
  store float %1833, ptr %1834, align 4, !tbaa !65
  %1835 = add nuw nsw i64 %1819, 4
  %1836 = icmp eq i64 %1835, %1108
  br i1 %1836, label %1837, label %1818, !llvm.loop !537

1837:                                             ; preds = %1815, %1818, %1801, %1702, %1771
  %1838 = add nuw nsw i32 %1703, 1
  %1839 = icmp eq i32 %1838, %17
  br i1 %1839, label %1688, label %1702, !llvm.loop !538

1840:                                             ; preds = %1689, %1984
  %1841 = phi i32 [ 0, %1689 ], [ %1985, %1984 ]
  %1842 = sub nsw i32 %17, %1841
  %1843 = mul nsw i32 %1841, %1112
  %1844 = add nsw i32 %1843, %17
  %1845 = shl i32 %1844, %1113
  %1846 = add nsw i32 %1845, %1112
  %1847 = mul nsw i32 %1846, %10
  %1848 = sext i32 %1847 to i64
  %1849 = getelementptr i8, ptr %1546, i64 %1848
  %1850 = sub i32 %18, %1842
  %1851 = select i1 %1692, i32 %1842, i32 %1850
  %1852 = add i32 %1851, %1127
  %1853 = mul nsw i32 %1852, %10
  %1854 = sext i32 %1853 to i64
  %1855 = getelementptr i8, ptr %1693, i64 %1854
  br i1 %1107, label %1914, label %1856

1856:                                             ; preds = %1840
  br i1 %1177, label %1879, label %1857

1857:                                             ; preds = %1856
  %1858 = add i64 %1700, %1848
  %1859 = add i64 %1701, %1854
  %1860 = sub i64 %1858, %1859
  %1861 = icmp ult i64 %1860, 128
  br i1 %1861, label %1879, label %1862

1862:                                             ; preds = %1857, %1862
  %1863 = phi i64 [ %1876, %1862 ], [ 0, %1857 ]
  %1864 = getelementptr inbounds float, ptr %1855, i64 %1863
  %1865 = load <8 x float>, ptr %1864, align 4, !tbaa !65
  %1866 = getelementptr inbounds float, ptr %1864, i64 8
  %1867 = load <8 x float>, ptr %1866, align 4, !tbaa !65
  %1868 = getelementptr inbounds float, ptr %1864, i64 16
  %1869 = load <8 x float>, ptr %1868, align 4, !tbaa !65
  %1870 = getelementptr inbounds float, ptr %1864, i64 24
  %1871 = load <8 x float>, ptr %1870, align 4, !tbaa !65
  %1872 = getelementptr inbounds float, ptr %1849, i64 %1863
  store <8 x float> %1865, ptr %1872, align 4, !tbaa !65
  %1873 = getelementptr inbounds float, ptr %1872, i64 8
  store <8 x float> %1867, ptr %1873, align 4, !tbaa !65
  %1874 = getelementptr inbounds float, ptr %1872, i64 16
  store <8 x float> %1869, ptr %1874, align 4, !tbaa !65
  %1875 = getelementptr inbounds float, ptr %1872, i64 24
  store <8 x float> %1871, ptr %1875, align 4, !tbaa !65
  %1876 = add nuw i64 %1863, 32
  %1877 = icmp eq i64 %1876, %1178
  br i1 %1877, label %1878, label %1862, !llvm.loop !539

1878:                                             ; preds = %1862
  br i1 %1179, label %1914, label %1879

1879:                                             ; preds = %1857, %1856, %1878
  %1880 = phi i64 [ 0, %1857 ], [ 0, %1856 ], [ %1178, %1878 ]
  %1881 = xor i64 %1880, -1
  %1882 = add nsw i64 %1881, %1108
  br i1 %1181, label %1892, label %1883

1883:                                             ; preds = %1879, %1883
  %1884 = phi i64 [ %1889, %1883 ], [ %1880, %1879 ]
  %1885 = phi i64 [ %1890, %1883 ], [ 0, %1879 ]
  %1886 = getelementptr inbounds float, ptr %1855, i64 %1884
  %1887 = load float, ptr %1886, align 4, !tbaa !65
  %1888 = getelementptr inbounds float, ptr %1849, i64 %1884
  store float %1887, ptr %1888, align 4, !tbaa !65
  %1889 = add nuw nsw i64 %1884, 1
  %1890 = add i64 %1885, 1
  %1891 = icmp eq i64 %1890, %1180
  br i1 %1891, label %1892, label %1883, !llvm.loop !540

1892:                                             ; preds = %1883, %1879
  %1893 = phi i64 [ %1880, %1879 ], [ %1889, %1883 ]
  %1894 = icmp ult i64 %1882, 3
  br i1 %1894, label %1914, label %1895

1895:                                             ; preds = %1892, %1895
  %1896 = phi i64 [ %1912, %1895 ], [ %1893, %1892 ]
  %1897 = getelementptr inbounds float, ptr %1855, i64 %1896
  %1898 = load float, ptr %1897, align 4, !tbaa !65
  %1899 = getelementptr inbounds float, ptr %1849, i64 %1896
  store float %1898, ptr %1899, align 4, !tbaa !65
  %1900 = add nuw nsw i64 %1896, 1
  %1901 = getelementptr inbounds float, ptr %1855, i64 %1900
  %1902 = load float, ptr %1901, align 4, !tbaa !65
  %1903 = getelementptr inbounds float, ptr %1849, i64 %1900
  store float %1902, ptr %1903, align 4, !tbaa !65
  %1904 = add nuw nsw i64 %1896, 2
  %1905 = getelementptr inbounds float, ptr %1855, i64 %1904
  %1906 = load float, ptr %1905, align 4, !tbaa !65
  %1907 = getelementptr inbounds float, ptr %1849, i64 %1904
  store float %1906, ptr %1907, align 4, !tbaa !65
  %1908 = add nuw nsw i64 %1896, 3
  %1909 = getelementptr inbounds float, ptr %1855, i64 %1908
  %1910 = load float, ptr %1909, align 4, !tbaa !65
  %1911 = getelementptr inbounds float, ptr %1849, i64 %1908
  store float %1910, ptr %1911, align 4, !tbaa !65
  %1912 = add nuw nsw i64 %1896, 4
  %1913 = icmp eq i64 %1912, %1108
  br i1 %1913, label %1914, label %1895, !llvm.loop !541

1914:                                             ; preds = %1892, %1895, %1878, %1840
  %1915 = add nsw i32 %1841, %1118
  %1916 = shl i32 %1915, %1113
  %1917 = add nsw i32 %1916, %1112
  %1918 = mul nsw i32 %1917, %10
  %1919 = sext i32 %1918 to i64
  %1920 = getelementptr i8, ptr %1546, i64 %1919
  %1921 = select i1 %1696, i32 %1842, i32 %1850
  %1922 = add i32 %1921, %1127
  %1923 = mul nsw i32 %1922, %10
  %1924 = sext i32 %1923 to i64
  %1925 = getelementptr i8, ptr %1697, i64 %1924
  br i1 %1107, label %1984, label %1926

1926:                                             ; preds = %1914
  br i1 %1182, label %1949, label %1927

1927:                                             ; preds = %1926
  %1928 = add i64 %1698, %1919
  %1929 = add i64 %1699, %1924
  %1930 = sub i64 %1928, %1929
  %1931 = icmp ult i64 %1930, 128
  br i1 %1931, label %1949, label %1932

1932:                                             ; preds = %1927, %1932
  %1933 = phi i64 [ %1946, %1932 ], [ 0, %1927 ]
  %1934 = getelementptr inbounds float, ptr %1925, i64 %1933
  %1935 = load <8 x float>, ptr %1934, align 4, !tbaa !65
  %1936 = getelementptr inbounds float, ptr %1934, i64 8
  %1937 = load <8 x float>, ptr %1936, align 4, !tbaa !65
  %1938 = getelementptr inbounds float, ptr %1934, i64 16
  %1939 = load <8 x float>, ptr %1938, align 4, !tbaa !65
  %1940 = getelementptr inbounds float, ptr %1934, i64 24
  %1941 = load <8 x float>, ptr %1940, align 4, !tbaa !65
  %1942 = getelementptr inbounds float, ptr %1920, i64 %1933
  store <8 x float> %1935, ptr %1942, align 4, !tbaa !65
  %1943 = getelementptr inbounds float, ptr %1942, i64 8
  store <8 x float> %1937, ptr %1943, align 4, !tbaa !65
  %1944 = getelementptr inbounds float, ptr %1942, i64 16
  store <8 x float> %1939, ptr %1944, align 4, !tbaa !65
  %1945 = getelementptr inbounds float, ptr %1942, i64 24
  store <8 x float> %1941, ptr %1945, align 4, !tbaa !65
  %1946 = add nuw i64 %1933, 32
  %1947 = icmp eq i64 %1946, %1183
  br i1 %1947, label %1948, label %1932, !llvm.loop !542

1948:                                             ; preds = %1932
  br i1 %1184, label %1984, label %1949

1949:                                             ; preds = %1927, %1926, %1948
  %1950 = phi i64 [ 0, %1927 ], [ 0, %1926 ], [ %1183, %1948 ]
  %1951 = xor i64 %1950, -1
  %1952 = add nsw i64 %1951, %1108
  br i1 %1186, label %1962, label %1953

1953:                                             ; preds = %1949, %1953
  %1954 = phi i64 [ %1959, %1953 ], [ %1950, %1949 ]
  %1955 = phi i64 [ %1960, %1953 ], [ 0, %1949 ]
  %1956 = getelementptr inbounds float, ptr %1925, i64 %1954
  %1957 = load float, ptr %1956, align 4, !tbaa !65
  %1958 = getelementptr inbounds float, ptr %1920, i64 %1954
  store float %1957, ptr %1958, align 4, !tbaa !65
  %1959 = add nuw nsw i64 %1954, 1
  %1960 = add i64 %1955, 1
  %1961 = icmp eq i64 %1960, %1185
  br i1 %1961, label %1962, label %1953, !llvm.loop !543

1962:                                             ; preds = %1953, %1949
  %1963 = phi i64 [ %1950, %1949 ], [ %1959, %1953 ]
  %1964 = icmp ult i64 %1952, 3
  br i1 %1964, label %1984, label %1965

1965:                                             ; preds = %1962, %1965
  %1966 = phi i64 [ %1982, %1965 ], [ %1963, %1962 ]
  %1967 = getelementptr inbounds float, ptr %1925, i64 %1966
  %1968 = load float, ptr %1967, align 4, !tbaa !65
  %1969 = getelementptr inbounds float, ptr %1920, i64 %1966
  store float %1968, ptr %1969, align 4, !tbaa !65
  %1970 = add nuw nsw i64 %1966, 1
  %1971 = getelementptr inbounds float, ptr %1925, i64 %1970
  %1972 = load float, ptr %1971, align 4, !tbaa !65
  %1973 = getelementptr inbounds float, ptr %1920, i64 %1970
  store float %1972, ptr %1973, align 4, !tbaa !65
  %1974 = add nuw nsw i64 %1966, 2
  %1975 = getelementptr inbounds float, ptr %1925, i64 %1974
  %1976 = load float, ptr %1975, align 4, !tbaa !65
  %1977 = getelementptr inbounds float, ptr %1920, i64 %1974
  store float %1976, ptr %1977, align 4, !tbaa !65
  %1978 = add nuw nsw i64 %1966, 3
  %1979 = getelementptr inbounds float, ptr %1925, i64 %1978
  %1980 = load float, ptr %1979, align 4, !tbaa !65
  %1981 = getelementptr inbounds float, ptr %1920, i64 %1978
  store float %1980, ptr %1981, align 4, !tbaa !65
  %1982 = add nuw nsw i64 %1966, 4
  %1983 = icmp eq i64 %1982, %1108
  br i1 %1983, label %1984, label %1965, !llvm.loop !544

1984:                                             ; preds = %1962, %1965, %1948, %1914
  %1985 = add nuw nsw i32 %1841, 1
  %1986 = icmp eq i32 %1985, %1135
  br i1 %1986, label %1987, label %1840, !llvm.loop !545

1987:                                             ; preds = %1984, %1688
  br i1 %1107, label %2102, label %1988

1988:                                             ; preds = %1987
  %1989 = icmp ult i32 %1524, 128
  %1990 = select i1 %1187, i1 true, i1 %1989
  br i1 %1990, label %2008, label %1991

1991:                                             ; preds = %1988, %1991
  %1992 = phi i64 [ %2005, %1991 ], [ 0, %1988 ]
  %1993 = getelementptr inbounds float, ptr %1389, i64 %1992
  %1994 = load <8 x float>, ptr %1993, align 4, !tbaa !65
  %1995 = getelementptr inbounds float, ptr %1993, i64 8
  %1996 = load <8 x float>, ptr %1995, align 4, !tbaa !65
  %1997 = getelementptr inbounds float, ptr %1993, i64 16
  %1998 = load <8 x float>, ptr %1997, align 4, !tbaa !65
  %1999 = getelementptr inbounds float, ptr %1993, i64 24
  %2000 = load <8 x float>, ptr %1999, align 4, !tbaa !65
  %2001 = getelementptr inbounds float, ptr %1546, i64 %1992
  store <8 x float> %1994, ptr %2001, align 4, !tbaa !65
  %2002 = getelementptr inbounds float, ptr %2001, i64 8
  store <8 x float> %1996, ptr %2002, align 4, !tbaa !65
  %2003 = getelementptr inbounds float, ptr %2001, i64 16
  store <8 x float> %1998, ptr %2003, align 4, !tbaa !65
  %2004 = getelementptr inbounds float, ptr %2001, i64 24
  store <8 x float> %2000, ptr %2004, align 4, !tbaa !65
  %2005 = add nuw i64 %1992, 32
  %2006 = icmp eq i64 %2005, %1188
  br i1 %2006, label %2007, label %1991, !llvm.loop !546

2007:                                             ; preds = %1991
  br i1 %1189, label %2043, label %2008

2008:                                             ; preds = %1988, %2007
  %2009 = phi i64 [ 0, %1988 ], [ %1188, %2007 ]
  %2010 = xor i64 %2009, -1
  %2011 = add nsw i64 %2010, %1108
  br i1 %1191, label %2021, label %2012

2012:                                             ; preds = %2008, %2012
  %2013 = phi i64 [ %2018, %2012 ], [ %2009, %2008 ]
  %2014 = phi i64 [ %2019, %2012 ], [ 0, %2008 ]
  %2015 = getelementptr inbounds float, ptr %1389, i64 %2013
  %2016 = load float, ptr %2015, align 4, !tbaa !65
  %2017 = getelementptr inbounds float, ptr %1546, i64 %2013
  store float %2016, ptr %2017, align 4, !tbaa !65
  %2018 = add nuw nsw i64 %2013, 1
  %2019 = add i64 %2014, 1
  %2020 = icmp eq i64 %2019, %1190
  br i1 %2020, label %2021, label %2012, !llvm.loop !547

2021:                                             ; preds = %2012, %2008
  %2022 = phi i64 [ %2009, %2008 ], [ %2018, %2012 ]
  %2023 = icmp ult i64 %2011, 3
  br i1 %2023, label %2043, label %2024

2024:                                             ; preds = %2021, %2024
  %2025 = phi i64 [ %2041, %2024 ], [ %2022, %2021 ]
  %2026 = getelementptr inbounds float, ptr %1389, i64 %2025
  %2027 = load float, ptr %2026, align 4, !tbaa !65
  %2028 = getelementptr inbounds float, ptr %1546, i64 %2025
  store float %2027, ptr %2028, align 4, !tbaa !65
  %2029 = add nuw nsw i64 %2025, 1
  %2030 = getelementptr inbounds float, ptr %1389, i64 %2029
  %2031 = load float, ptr %2030, align 4, !tbaa !65
  %2032 = getelementptr inbounds float, ptr %1546, i64 %2029
  store float %2031, ptr %2032, align 4, !tbaa !65
  %2033 = add nuw nsw i64 %2025, 2
  %2034 = getelementptr inbounds float, ptr %1389, i64 %2033
  %2035 = load float, ptr %2034, align 4, !tbaa !65
  %2036 = getelementptr inbounds float, ptr %1546, i64 %2033
  store float %2035, ptr %2036, align 4, !tbaa !65
  %2037 = add nuw nsw i64 %2025, 3
  %2038 = getelementptr inbounds float, ptr %1389, i64 %2037
  %2039 = load float, ptr %2038, align 4, !tbaa !65
  %2040 = getelementptr inbounds float, ptr %1546, i64 %2037
  store float %2039, ptr %2040, align 4, !tbaa !65
  %2041 = add nuw nsw i64 %2025, 4
  %2042 = icmp eq i64 %2041, %1108
  br i1 %2042, label %2043, label %2024, !llvm.loop !548

2043:                                             ; preds = %2021, %2024, %2007
  %2044 = getelementptr inbounds i8, ptr %1546, i64 %1130
  %2045 = getelementptr inbounds i8, ptr %1546, i64 %1134
  br i1 %1107, label %2102, label %2046

2046:                                             ; preds = %2043
  %2047 = sub i64 %1529, %1530
  %2048 = icmp ult i64 %2047, 128
  %2049 = select i1 %1192, i1 true, i1 %2048
  br i1 %2049, label %2067, label %2050

2050:                                             ; preds = %2046, %2050
  %2051 = phi i64 [ %2064, %2050 ], [ 0, %2046 ]
  %2052 = getelementptr inbounds float, ptr %2045, i64 %2051
  %2053 = load <8 x float>, ptr %2052, align 4, !tbaa !65
  %2054 = getelementptr inbounds float, ptr %2052, i64 8
  %2055 = load <8 x float>, ptr %2054, align 4, !tbaa !65
  %2056 = getelementptr inbounds float, ptr %2052, i64 16
  %2057 = load <8 x float>, ptr %2056, align 4, !tbaa !65
  %2058 = getelementptr inbounds float, ptr %2052, i64 24
  %2059 = load <8 x float>, ptr %2058, align 4, !tbaa !65
  %2060 = getelementptr inbounds float, ptr %2044, i64 %2051
  store <8 x float> %2053, ptr %2060, align 4, !tbaa !65
  %2061 = getelementptr inbounds float, ptr %2060, i64 8
  store <8 x float> %2055, ptr %2061, align 4, !tbaa !65
  %2062 = getelementptr inbounds float, ptr %2060, i64 16
  store <8 x float> %2057, ptr %2062, align 4, !tbaa !65
  %2063 = getelementptr inbounds float, ptr %2060, i64 24
  store <8 x float> %2059, ptr %2063, align 4, !tbaa !65
  %2064 = add nuw i64 %2051, 32
  %2065 = icmp eq i64 %2064, %1193
  br i1 %2065, label %2066, label %2050, !llvm.loop !549

2066:                                             ; preds = %2050
  br i1 %1194, label %2102, label %2067

2067:                                             ; preds = %2046, %2066
  %2068 = phi i64 [ 0, %2046 ], [ %1193, %2066 ]
  %2069 = xor i64 %2068, -1
  %2070 = add nsw i64 %2069, %1108
  br i1 %1196, label %2080, label %2071

2071:                                             ; preds = %2067, %2071
  %2072 = phi i64 [ %2077, %2071 ], [ %2068, %2067 ]
  %2073 = phi i64 [ %2078, %2071 ], [ 0, %2067 ]
  %2074 = getelementptr inbounds float, ptr %2045, i64 %2072
  %2075 = load float, ptr %2074, align 4, !tbaa !65
  %2076 = getelementptr inbounds float, ptr %2044, i64 %2072
  store float %2075, ptr %2076, align 4, !tbaa !65
  %2077 = add nuw nsw i64 %2072, 1
  %2078 = add i64 %2073, 1
  %2079 = icmp eq i64 %2078, %1195
  br i1 %2079, label %2080, label %2071, !llvm.loop !550

2080:                                             ; preds = %2071, %2067
  %2081 = phi i64 [ %2068, %2067 ], [ %2077, %2071 ]
  %2082 = icmp ult i64 %2070, 3
  br i1 %2082, label %2102, label %2083

2083:                                             ; preds = %2080, %2083
  %2084 = phi i64 [ %2100, %2083 ], [ %2081, %2080 ]
  %2085 = getelementptr inbounds float, ptr %2045, i64 %2084
  %2086 = load float, ptr %2085, align 4, !tbaa !65
  %2087 = getelementptr inbounds float, ptr %2044, i64 %2084
  store float %2086, ptr %2087, align 4, !tbaa !65
  %2088 = add nuw nsw i64 %2084, 1
  %2089 = getelementptr inbounds float, ptr %2045, i64 %2088
  %2090 = load float, ptr %2089, align 4, !tbaa !65
  %2091 = getelementptr inbounds float, ptr %2044, i64 %2088
  store float %2090, ptr %2091, align 4, !tbaa !65
  %2092 = add nuw nsw i64 %2084, 2
  %2093 = getelementptr inbounds float, ptr %2045, i64 %2092
  %2094 = load float, ptr %2093, align 4, !tbaa !65
  %2095 = getelementptr inbounds float, ptr %2044, i64 %2092
  store float %2094, ptr %2095, align 4, !tbaa !65
  %2096 = add nuw nsw i64 %2084, 3
  %2097 = getelementptr inbounds float, ptr %2045, i64 %2096
  %2098 = load float, ptr %2097, align 4, !tbaa !65
  %2099 = getelementptr inbounds float, ptr %2044, i64 %2096
  store float %2098, ptr %2099, align 4, !tbaa !65
  %2100 = add nuw nsw i64 %2084, 4
  %2101 = icmp eq i64 %2100, %1108
  br i1 %2101, label %2102, label %2083, !llvm.loop !551

2102:                                             ; preds = %2080, %2083, %2066, %1987, %2043
  %2103 = add nuw nsw i64 %1500, 1
  %2104 = icmp eq i64 %2103, %1469
  br i1 %2104, label %2105, label %1499, !llvm.loop !552

2105:                                             ; preds = %2102, %1414, %1466
  %2106 = add nuw nsw i64 %1380, 1
  %2107 = icmp eq i64 %2106, %1136
  br i1 %2107, label %1371, label %1379, !llvm.loop !553

2108:                                             ; preds = %2128, %1372
  %2109 = phi i64 [ 0, %1372 ], [ %2162, %2128 ]
  %2110 = icmp eq i64 %1375, 0
  br i1 %2110, label %2120, label %2111

2111:                                             ; preds = %2108, %2111
  %2112 = phi i64 [ %2117, %2111 ], [ %2109, %2108 ]
  %2113 = phi i64 [ %2118, %2111 ], [ 0, %2108 ]
  %2114 = getelementptr inbounds ptr, ptr %1373, i64 %2112
  %2115 = load ptr, ptr %2114, align 8, !tbaa !14
  %2116 = getelementptr inbounds %struct.CCGVert, ptr %2115, i64 0, i32 4
  store i16 0, ptr %2116, align 4, !tbaa !86
  %2117 = add nuw nsw i64 %2112, 1
  %2118 = add i64 %2113, 1
  %2119 = icmp eq i64 %2118, %1375
  br i1 %2119, label %2120, label %2111, !llvm.loop !554

2120:                                             ; preds = %2108, %2111, %1371
  br i1 %93, label %2121, label %2177

2121:                                             ; preds = %2120
  %2122 = load ptr, ptr %6, align 8, !tbaa !14
  %2123 = zext i32 %92 to i64
  %2124 = and i64 %2123, 7
  %2125 = icmp ult i32 %92, 8
  br i1 %2125, label %2165, label %2126

2126:                                             ; preds = %2121
  %2127 = and i64 %2123, 4294967288
  br label %2184

2128:                                             ; preds = %2128, %1377
  %2129 = phi i64 [ 0, %1377 ], [ %2162, %2128 ]
  %2130 = phi i64 [ 0, %1377 ], [ %2163, %2128 ]
  %2131 = getelementptr inbounds ptr, ptr %1373, i64 %2129
  %2132 = load ptr, ptr %2131, align 8, !tbaa !14
  %2133 = getelementptr inbounds %struct.CCGVert, ptr %2132, i64 0, i32 4
  store i16 0, ptr %2133, align 4, !tbaa !86
  %2134 = or i64 %2129, 1
  %2135 = getelementptr inbounds ptr, ptr %1373, i64 %2134
  %2136 = load ptr, ptr %2135, align 8, !tbaa !14
  %2137 = getelementptr inbounds %struct.CCGVert, ptr %2136, i64 0, i32 4
  store i16 0, ptr %2137, align 4, !tbaa !86
  %2138 = or i64 %2129, 2
  %2139 = getelementptr inbounds ptr, ptr %1373, i64 %2138
  %2140 = load ptr, ptr %2139, align 8, !tbaa !14
  %2141 = getelementptr inbounds %struct.CCGVert, ptr %2140, i64 0, i32 4
  store i16 0, ptr %2141, align 4, !tbaa !86
  %2142 = or i64 %2129, 3
  %2143 = getelementptr inbounds ptr, ptr %1373, i64 %2142
  %2144 = load ptr, ptr %2143, align 8, !tbaa !14
  %2145 = getelementptr inbounds %struct.CCGVert, ptr %2144, i64 0, i32 4
  store i16 0, ptr %2145, align 4, !tbaa !86
  %2146 = or i64 %2129, 4
  %2147 = getelementptr inbounds ptr, ptr %1373, i64 %2146
  %2148 = load ptr, ptr %2147, align 8, !tbaa !14
  %2149 = getelementptr inbounds %struct.CCGVert, ptr %2148, i64 0, i32 4
  store i16 0, ptr %2149, align 4, !tbaa !86
  %2150 = or i64 %2129, 5
  %2151 = getelementptr inbounds ptr, ptr %1373, i64 %2150
  %2152 = load ptr, ptr %2151, align 8, !tbaa !14
  %2153 = getelementptr inbounds %struct.CCGVert, ptr %2152, i64 0, i32 4
  store i16 0, ptr %2153, align 4, !tbaa !86
  %2154 = or i64 %2129, 6
  %2155 = getelementptr inbounds ptr, ptr %1373, i64 %2154
  %2156 = load ptr, ptr %2155, align 8, !tbaa !14
  %2157 = getelementptr inbounds %struct.CCGVert, ptr %2156, i64 0, i32 4
  store i16 0, ptr %2157, align 4, !tbaa !86
  %2158 = or i64 %2129, 7
  %2159 = getelementptr inbounds ptr, ptr %1373, i64 %2158
  %2160 = load ptr, ptr %2159, align 8, !tbaa !14
  %2161 = getelementptr inbounds %struct.CCGVert, ptr %2160, i64 0, i32 4
  store i16 0, ptr %2161, align 4, !tbaa !86
  %2162 = add nuw nsw i64 %2129, 8
  %2163 = add i64 %2130, 8
  %2164 = icmp eq i64 %2163, %1378
  br i1 %2164, label %2108, label %2128, !llvm.loop !555

2165:                                             ; preds = %2184, %2121
  %2166 = phi i64 [ 0, %2121 ], [ %2218, %2184 ]
  %2167 = icmp eq i64 %2124, 0
  br i1 %2167, label %2177, label %2168

2168:                                             ; preds = %2165, %2168
  %2169 = phi i64 [ %2174, %2168 ], [ %2166, %2165 ]
  %2170 = phi i64 [ %2175, %2168 ], [ 0, %2165 ]
  %2171 = getelementptr inbounds ptr, ptr %2122, i64 %2169
  %2172 = load ptr, ptr %2171, align 8, !tbaa !14
  %2173 = getelementptr inbounds %struct.CCGEdge, ptr %2172, i64 0, i32 3
  store i16 0, ptr %2173, align 2, !tbaa !118
  %2174 = add nuw nsw i64 %2169, 1
  %2175 = add i64 %2170, 1
  %2176 = icmp eq i64 %2175, %2124
  br i1 %2176, label %2177, label %2168, !llvm.loop !556

2177:                                             ; preds = %2165, %2168, %2120
  br i1 %142, label %2178, label %2270

2178:                                             ; preds = %2177
  %2179 = zext i32 %62 to i64
  %2180 = and i64 %2179, 7
  %2181 = icmp ult i32 %62, 8
  br i1 %2181, label %2258, label %2182

2182:                                             ; preds = %2178
  %2183 = and i64 %2179, 4294967288
  br label %2221

2184:                                             ; preds = %2184, %2126
  %2185 = phi i64 [ 0, %2126 ], [ %2218, %2184 ]
  %2186 = phi i64 [ 0, %2126 ], [ %2219, %2184 ]
  %2187 = getelementptr inbounds ptr, ptr %2122, i64 %2185
  %2188 = load ptr, ptr %2187, align 8, !tbaa !14
  %2189 = getelementptr inbounds %struct.CCGEdge, ptr %2188, i64 0, i32 3
  store i16 0, ptr %2189, align 2, !tbaa !118
  %2190 = or i64 %2185, 1
  %2191 = getelementptr inbounds ptr, ptr %2122, i64 %2190
  %2192 = load ptr, ptr %2191, align 8, !tbaa !14
  %2193 = getelementptr inbounds %struct.CCGEdge, ptr %2192, i64 0, i32 3
  store i16 0, ptr %2193, align 2, !tbaa !118
  %2194 = or i64 %2185, 2
  %2195 = getelementptr inbounds ptr, ptr %2122, i64 %2194
  %2196 = load ptr, ptr %2195, align 8, !tbaa !14
  %2197 = getelementptr inbounds %struct.CCGEdge, ptr %2196, i64 0, i32 3
  store i16 0, ptr %2197, align 2, !tbaa !118
  %2198 = or i64 %2185, 3
  %2199 = getelementptr inbounds ptr, ptr %2122, i64 %2198
  %2200 = load ptr, ptr %2199, align 8, !tbaa !14
  %2201 = getelementptr inbounds %struct.CCGEdge, ptr %2200, i64 0, i32 3
  store i16 0, ptr %2201, align 2, !tbaa !118
  %2202 = or i64 %2185, 4
  %2203 = getelementptr inbounds ptr, ptr %2122, i64 %2202
  %2204 = load ptr, ptr %2203, align 8, !tbaa !14
  %2205 = getelementptr inbounds %struct.CCGEdge, ptr %2204, i64 0, i32 3
  store i16 0, ptr %2205, align 2, !tbaa !118
  %2206 = or i64 %2185, 5
  %2207 = getelementptr inbounds ptr, ptr %2122, i64 %2206
  %2208 = load ptr, ptr %2207, align 8, !tbaa !14
  %2209 = getelementptr inbounds %struct.CCGEdge, ptr %2208, i64 0, i32 3
  store i16 0, ptr %2209, align 2, !tbaa !118
  %2210 = or i64 %2185, 6
  %2211 = getelementptr inbounds ptr, ptr %2122, i64 %2210
  %2212 = load ptr, ptr %2211, align 8, !tbaa !14
  %2213 = getelementptr inbounds %struct.CCGEdge, ptr %2212, i64 0, i32 3
  store i16 0, ptr %2213, align 2, !tbaa !118
  %2214 = or i64 %2185, 7
  %2215 = getelementptr inbounds ptr, ptr %2122, i64 %2214
  %2216 = load ptr, ptr %2215, align 8, !tbaa !14
  %2217 = getelementptr inbounds %struct.CCGEdge, ptr %2216, i64 0, i32 3
  store i16 0, ptr %2217, align 2, !tbaa !118
  %2218 = add nuw nsw i64 %2185, 8
  %2219 = add i64 %2186, 8
  %2220 = icmp eq i64 %2219, %2127
  br i1 %2220, label %2165, label %2184, !llvm.loop !557

2221:                                             ; preds = %2221, %2182
  %2222 = phi i64 [ 0, %2182 ], [ %2255, %2221 ]
  %2223 = phi i64 [ 0, %2182 ], [ %2256, %2221 ]
  %2224 = getelementptr inbounds ptr, ptr %63, i64 %2222
  %2225 = load ptr, ptr %2224, align 8, !tbaa !14
  %2226 = getelementptr inbounds %struct.CCGFace, ptr %2225, i64 0, i32 3
  store i16 0, ptr %2226, align 2, !tbaa !128
  %2227 = or i64 %2222, 1
  %2228 = getelementptr inbounds ptr, ptr %63, i64 %2227
  %2229 = load ptr, ptr %2228, align 8, !tbaa !14
  %2230 = getelementptr inbounds %struct.CCGFace, ptr %2229, i64 0, i32 3
  store i16 0, ptr %2230, align 2, !tbaa !128
  %2231 = or i64 %2222, 2
  %2232 = getelementptr inbounds ptr, ptr %63, i64 %2231
  %2233 = load ptr, ptr %2232, align 8, !tbaa !14
  %2234 = getelementptr inbounds %struct.CCGFace, ptr %2233, i64 0, i32 3
  store i16 0, ptr %2234, align 2, !tbaa !128
  %2235 = or i64 %2222, 3
  %2236 = getelementptr inbounds ptr, ptr %63, i64 %2235
  %2237 = load ptr, ptr %2236, align 8, !tbaa !14
  %2238 = getelementptr inbounds %struct.CCGFace, ptr %2237, i64 0, i32 3
  store i16 0, ptr %2238, align 2, !tbaa !128
  %2239 = or i64 %2222, 4
  %2240 = getelementptr inbounds ptr, ptr %63, i64 %2239
  %2241 = load ptr, ptr %2240, align 8, !tbaa !14
  %2242 = getelementptr inbounds %struct.CCGFace, ptr %2241, i64 0, i32 3
  store i16 0, ptr %2242, align 2, !tbaa !128
  %2243 = or i64 %2222, 5
  %2244 = getelementptr inbounds ptr, ptr %63, i64 %2243
  %2245 = load ptr, ptr %2244, align 8, !tbaa !14
  %2246 = getelementptr inbounds %struct.CCGFace, ptr %2245, i64 0, i32 3
  store i16 0, ptr %2246, align 2, !tbaa !128
  %2247 = or i64 %2222, 6
  %2248 = getelementptr inbounds ptr, ptr %63, i64 %2247
  %2249 = load ptr, ptr %2248, align 8, !tbaa !14
  %2250 = getelementptr inbounds %struct.CCGFace, ptr %2249, i64 0, i32 3
  store i16 0, ptr %2250, align 2, !tbaa !128
  %2251 = or i64 %2222, 7
  %2252 = getelementptr inbounds ptr, ptr %63, i64 %2251
  %2253 = load ptr, ptr %2252, align 8, !tbaa !14
  %2254 = getelementptr inbounds %struct.CCGFace, ptr %2253, i64 0, i32 3
  store i16 0, ptr %2254, align 2, !tbaa !128
  %2255 = add nuw nsw i64 %2222, 8
  %2256 = add i64 %2223, 8
  %2257 = icmp eq i64 %2256, %2183
  br i1 %2257, label %2258, label %2221, !llvm.loop !558

2258:                                             ; preds = %2221, %2178
  %2259 = phi i64 [ 0, %2178 ], [ %2255, %2221 ]
  %2260 = icmp eq i64 %2180, 0
  br i1 %2260, label %2270, label %2261

2261:                                             ; preds = %2258, %2261
  %2262 = phi i64 [ %2267, %2261 ], [ %2259, %2258 ]
  %2263 = phi i64 [ %2268, %2261 ], [ 0, %2258 ]
  %2264 = getelementptr inbounds ptr, ptr %63, i64 %2262
  %2265 = load ptr, ptr %2264, align 8, !tbaa !14
  %2266 = getelementptr inbounds %struct.CCGFace, ptr %2265, i64 0, i32 3
  store i16 0, ptr %2266, align 2, !tbaa !128
  %2267 = add nuw nsw i64 %2262, 1
  %2268 = add i64 %2263, 1
  %2269 = icmp eq i64 %2268, %2180
  br i1 %2269, label %2270, label %2261, !llvm.loop !559

2270:                                             ; preds = %2258, %2261, %2177
  %2271 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  %2272 = load ptr, ptr %6, align 8, !tbaa !14
  tail call void %2271(ptr noundef %2272) #23
  %2273 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  %2274 = load ptr, ptr %5, align 8, !tbaa !14
  tail call void %2273(ptr noundef %2274) #23
  br i1 %19, label %2275, label %2277

2275:                                             ; preds = %2270
  %2276 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  tail call void %2276(ptr noundef %63) #23
  br label %2277

2277:                                             ; preds = %2275, %2270
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #23
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @ccgSubSurf__effectedFaceNeighbours(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, i32 noundef %2, ptr nocapture noundef writeonly %3, ptr nocapture noundef writeonly %4, ptr nocapture noundef writeonly %5, ptr nocapture noundef writeonly %6) unnamed_addr #1 {
  %8 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !14
  %9 = load ptr, ptr %0, align 8, !tbaa !27
  %10 = getelementptr inbounds %struct._EHash, ptr %9, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !22
  %12 = sext i32 %11 to i64
  %13 = shl nsw i64 %12, 3
  %14 = tail call ptr %8(i64 noundef %13, ptr noundef nonnull @.str.6) #23
  %15 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !14
  %16 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !28
  %18 = getelementptr inbounds %struct._EHash, ptr %17, i64 0, i32 1
  %19 = load i32, ptr %18, align 8, !tbaa !22
  %20 = sext i32 %19 to i64
  %21 = shl nsw i64 %20, 3
  %22 = tail call ptr %15(i64 noundef %21, ptr noundef nonnull @.str.6) #23
  %23 = icmp sgt i32 %2, 0
  br i1 %23, label %24, label %44

24:                                               ; preds = %7
  %25 = zext i32 %2 to i64
  %26 = and i64 %25, 3
  %27 = icmp ult i32 %2, 4
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = and i64 %25, 4294967292
  br label %49

30:                                               ; preds = %49, %24
  %31 = phi i64 [ 0, %24 ], [ %75, %49 ]
  %32 = icmp eq i64 %26, 0
  br i1 %32, label %44, label %33

33:                                               ; preds = %30, %33
  %34 = phi i64 [ %41, %33 ], [ %31, %30 ]
  %35 = phi i64 [ %42, %33 ], [ 0, %30 ]
  %36 = getelementptr inbounds ptr, ptr %1, i64 %34
  %37 = load ptr, ptr %36, align 8, !tbaa !14
  %38 = getelementptr inbounds %struct.CCGFace, ptr %37, i64 0, i32 3
  %39 = load i16, ptr %38, align 2, !tbaa !128
  %40 = or i16 %39, 1
  store i16 %40, ptr %38, align 2, !tbaa !128
  %41 = add nuw nsw i64 %34, 1
  %42 = add i64 %35, 1
  %43 = icmp eq i64 %42, %26
  br i1 %43, label %44, label %33, !llvm.loop !560

44:                                               ; preds = %30, %33, %7
  %45 = load ptr, ptr %0, align 8, !tbaa !27
  %46 = getelementptr inbounds %struct._EHash, ptr %45, i64 0, i32 2
  %47 = load i32, ptr %46, align 4, !tbaa !24
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %84, label %78

49:                                               ; preds = %49, %28
  %50 = phi i64 [ 0, %28 ], [ %75, %49 ]
  %51 = phi i64 [ 0, %28 ], [ %76, %49 ]
  %52 = getelementptr inbounds ptr, ptr %1, i64 %50
  %53 = load ptr, ptr %52, align 8, !tbaa !14
  %54 = getelementptr inbounds %struct.CCGFace, ptr %53, i64 0, i32 3
  %55 = load i16, ptr %54, align 2, !tbaa !128
  %56 = or i16 %55, 1
  store i16 %56, ptr %54, align 2, !tbaa !128
  %57 = or i64 %50, 1
  %58 = getelementptr inbounds ptr, ptr %1, i64 %57
  %59 = load ptr, ptr %58, align 8, !tbaa !14
  %60 = getelementptr inbounds %struct.CCGFace, ptr %59, i64 0, i32 3
  %61 = load i16, ptr %60, align 2, !tbaa !128
  %62 = or i16 %61, 1
  store i16 %62, ptr %60, align 2, !tbaa !128
  %63 = or i64 %50, 2
  %64 = getelementptr inbounds ptr, ptr %1, i64 %63
  %65 = load ptr, ptr %64, align 8, !tbaa !14
  %66 = getelementptr inbounds %struct.CCGFace, ptr %65, i64 0, i32 3
  %67 = load i16, ptr %66, align 2, !tbaa !128
  %68 = or i16 %67, 1
  store i16 %68, ptr %66, align 2, !tbaa !128
  %69 = or i64 %50, 3
  %70 = getelementptr inbounds ptr, ptr %1, i64 %69
  %71 = load ptr, ptr %70, align 8, !tbaa !14
  %72 = getelementptr inbounds %struct.CCGFace, ptr %71, i64 0, i32 3
  %73 = load i16, ptr %72, align 2, !tbaa !128
  %74 = or i16 %73, 1
  store i16 %74, ptr %72, align 2, !tbaa !128
  %75 = add nuw nsw i64 %50, 4
  %76 = add i64 %51, 4
  %77 = icmp eq i64 %76, %29
  br i1 %77, label %30, label %49, !llvm.loop !561

78:                                               ; preds = %132, %44
  %79 = phi i32 [ 0, %44 ], [ %134, %132 ]
  %80 = load ptr, ptr %16, align 8, !tbaa !28
  %81 = getelementptr inbounds %struct._EHash, ptr %80, i64 0, i32 2
  %82 = load i32, ptr %81, align 4, !tbaa !24
  %83 = icmp sgt i32 %82, 0
  br i1 %83, label %140, label %196

84:                                               ; preds = %44, %132
  %85 = phi ptr [ %133, %132 ], [ %45, %44 ]
  %86 = phi i64 [ %135, %132 ], [ 0, %44 ]
  %87 = phi i32 [ %134, %132 ], [ 0, %44 ]
  %88 = load ptr, ptr %85, align 8, !tbaa !26
  %89 = getelementptr inbounds ptr, ptr %88, i64 %86
  %90 = load ptr, ptr %89, align 8, !tbaa !14
  %91 = icmp eq ptr %90, null
  br i1 %91, label %132, label %92

92:                                               ; preds = %84, %126
  %93 = phi ptr [ %128, %126 ], [ %90, %84 ]
  %94 = phi i32 [ %127, %126 ], [ %87, %84 ]
  %95 = getelementptr inbounds %struct.CCGVert, ptr %93, i64 0, i32 3
  %96 = load i16, ptr %95, align 2, !tbaa !78
  %97 = sext i16 %96 to i32
  %98 = icmp sgt i16 %96, 0
  br i1 %98, label %99, label %116

99:                                               ; preds = %92
  %100 = getelementptr inbounds %struct.CCGVert, ptr %93, i64 0, i32 7
  %101 = load ptr, ptr %100, align 8, !tbaa !58
  %102 = zext i32 %97 to i64
  br label %103

103:                                              ; preds = %99, %111
  %104 = phi i64 [ 0, %99 ], [ %112, %111 ]
  %105 = getelementptr inbounds ptr, ptr %101, i64 %104
  %106 = load ptr, ptr %105, align 8, !tbaa !14
  %107 = getelementptr inbounds %struct.CCGFace, ptr %106, i64 0, i32 3
  %108 = load i16, ptr %107, align 2, !tbaa !128
  %109 = and i16 %108, 1
  %110 = icmp eq i16 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %103
  %112 = add nuw nsw i64 %104, 1
  %113 = icmp eq i64 %112, %102
  br i1 %113, label %119, label %103, !llvm.loop !562

114:                                              ; preds = %103
  %115 = trunc i64 %104 to i32
  br label %116

116:                                              ; preds = %114, %92
  %117 = phi i32 [ 0, %92 ], [ %115, %114 ]
  %118 = icmp eq i32 %117, %97
  br i1 %118, label %119, label %126

119:                                              ; preds = %111, %116
  %120 = add nsw i32 %94, 1
  %121 = sext i32 %94 to i64
  %122 = getelementptr inbounds ptr, ptr %14, i64 %121
  store ptr %93, ptr %122, align 8, !tbaa !14
  %123 = getelementptr inbounds %struct.CCGVert, ptr %93, i64 0, i32 4
  %124 = load i16, ptr %123, align 4, !tbaa !86
  %125 = or i16 %124, 1
  store i16 %125, ptr %123, align 4, !tbaa !86
  br label %126

126:                                              ; preds = %116, %119
  %127 = phi i32 [ %120, %119 ], [ %94, %116 ]
  %128 = load ptr, ptr %93, align 8, !tbaa !14
  %129 = icmp eq ptr %128, null
  br i1 %129, label %130, label %92, !llvm.loop !563

130:                                              ; preds = %126
  %131 = load ptr, ptr %0, align 8, !tbaa !27
  br label %132

132:                                              ; preds = %130, %84
  %133 = phi ptr [ %85, %84 ], [ %131, %130 ]
  %134 = phi i32 [ %87, %84 ], [ %127, %130 ]
  %135 = add nuw nsw i64 %86, 1
  %136 = getelementptr inbounds %struct._EHash, ptr %133, i64 0, i32 2
  %137 = load i32, ptr %136, align 4, !tbaa !24
  %138 = sext i32 %137 to i64
  %139 = icmp slt i64 %135, %138
  br i1 %139, label %84, label %78, !llvm.loop !564

140:                                              ; preds = %78, %188
  %141 = phi ptr [ %189, %188 ], [ %80, %78 ]
  %142 = phi i64 [ %191, %188 ], [ 0, %78 ]
  %143 = phi i32 [ %190, %188 ], [ 0, %78 ]
  %144 = load ptr, ptr %141, align 8, !tbaa !26
  %145 = getelementptr inbounds ptr, ptr %144, i64 %142
  %146 = load ptr, ptr %145, align 8, !tbaa !14
  %147 = icmp eq ptr %146, null
  br i1 %147, label %188, label %148

148:                                              ; preds = %140, %182
  %149 = phi ptr [ %184, %182 ], [ %146, %140 ]
  %150 = phi i32 [ %183, %182 ], [ %143, %140 ]
  %151 = getelementptr inbounds %struct.CCGEdge, ptr %149, i64 0, i32 2
  %152 = load i16, ptr %151, align 8, !tbaa !81
  %153 = sext i16 %152 to i32
  %154 = icmp sgt i16 %152, 0
  br i1 %154, label %155, label %172

155:                                              ; preds = %148
  %156 = getelementptr inbounds %struct.CCGEdge, ptr %149, i64 0, i32 7
  %157 = load ptr, ptr %156, align 8, !tbaa !52
  %158 = zext i32 %153 to i64
  br label %159

159:                                              ; preds = %155, %167
  %160 = phi i64 [ 0, %155 ], [ %168, %167 ]
  %161 = getelementptr inbounds ptr, ptr %157, i64 %160
  %162 = load ptr, ptr %161, align 8, !tbaa !14
  %163 = getelementptr inbounds %struct.CCGFace, ptr %162, i64 0, i32 3
  %164 = load i16, ptr %163, align 2, !tbaa !128
  %165 = and i16 %164, 1
  %166 = icmp eq i16 %165, 0
  br i1 %166, label %170, label %167

167:                                              ; preds = %159
  %168 = add nuw nsw i64 %160, 1
  %169 = icmp eq i64 %168, %158
  br i1 %169, label %175, label %159, !llvm.loop !565

170:                                              ; preds = %159
  %171 = trunc i64 %160 to i32
  br label %172

172:                                              ; preds = %170, %148
  %173 = phi i32 [ 0, %148 ], [ %171, %170 ]
  %174 = icmp eq i32 %173, %153
  br i1 %174, label %175, label %182

175:                                              ; preds = %167, %172
  %176 = getelementptr inbounds %struct.CCGEdge, ptr %149, i64 0, i32 3
  %177 = load i16, ptr %176, align 2, !tbaa !118
  %178 = or i16 %177, 1
  store i16 %178, ptr %176, align 2, !tbaa !118
  %179 = add nsw i32 %150, 1
  %180 = sext i32 %150 to i64
  %181 = getelementptr inbounds ptr, ptr %22, i64 %180
  store ptr %149, ptr %181, align 8, !tbaa !14
  br label %182

182:                                              ; preds = %172, %175
  %183 = phi i32 [ %179, %175 ], [ %150, %172 ]
  %184 = load ptr, ptr %149, align 8, !tbaa !14
  %185 = icmp eq ptr %184, null
  br i1 %185, label %186, label %148, !llvm.loop !566

186:                                              ; preds = %182
  %187 = load ptr, ptr %16, align 8, !tbaa !28
  br label %188

188:                                              ; preds = %186, %140
  %189 = phi ptr [ %141, %140 ], [ %187, %186 ]
  %190 = phi i32 [ %143, %140 ], [ %183, %186 ]
  %191 = add nuw nsw i64 %142, 1
  %192 = getelementptr inbounds %struct._EHash, ptr %189, i64 0, i32 2
  %193 = load i32, ptr %192, align 4, !tbaa !24
  %194 = sext i32 %193 to i64
  %195 = icmp slt i64 %191, %194
  br i1 %195, label %140, label %196, !llvm.loop !567

196:                                              ; preds = %188, %78
  %197 = phi i32 [ 0, %78 ], [ %190, %188 ]
  store ptr %14, ptr %3, align 8, !tbaa !14
  store i32 %79, ptr %4, align 4, !tbaa !31
  store ptr %22, ptr %5, align 8, !tbaa !14
  store i32 %197, ptr %6, align 4, !tbaa !31
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @ccgSubSurf_updateNormals(ptr nocapture noundef readonly %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #1 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #23
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #23
  %8 = icmp eq ptr %1, null
  br i1 %8, label %9, label %50

9:                                                ; preds = %3
  %10 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !14
  %11 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !29
  %13 = getelementptr inbounds %struct._EHash, ptr %12, i64 0, i32 1
  %14 = load i32, ptr %13, align 8, !tbaa !22
  %15 = sext i32 %14 to i64
  %16 = shl nsw i64 %15, 3
  %17 = tail call ptr %10(i64 noundef %16, ptr noundef nonnull @.str.5) #23
  %18 = load ptr, ptr %11, align 8, !tbaa !29
  %19 = getelementptr inbounds %struct._EHash, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !24
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %50

22:                                               ; preds = %9, %42
  %23 = phi ptr [ %43, %42 ], [ %18, %9 ]
  %24 = phi i64 [ %45, %42 ], [ 0, %9 ]
  %25 = phi i32 [ %44, %42 ], [ 0, %9 ]
  %26 = load ptr, ptr %23, align 8, !tbaa !26
  %27 = getelementptr inbounds ptr, ptr %26, i64 %24
  %28 = load ptr, ptr %27, align 8, !tbaa !14
  %29 = icmp eq ptr %28, null
  br i1 %29, label %42, label %30

30:                                               ; preds = %22
  %31 = sext i32 %25 to i64
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ %31, %30 ], [ %35, %32 ]
  %34 = phi ptr [ %28, %30 ], [ %37, %32 ]
  %35 = add i64 %33, 1
  %36 = getelementptr inbounds ptr, ptr %17, i64 %33
  store ptr %34, ptr %36, align 8, !tbaa !14
  %37 = load ptr, ptr %34, align 8, !tbaa !14
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %32, !llvm.loop !406

39:                                               ; preds = %32
  %40 = trunc i64 %35 to i32
  %41 = load ptr, ptr %11, align 8, !tbaa !29
  br label %42

42:                                               ; preds = %39, %22
  %43 = phi ptr [ %23, %22 ], [ %41, %39 ]
  %44 = phi i32 [ %25, %22 ], [ %40, %39 ]
  %45 = add nuw nsw i64 %24, 1
  %46 = getelementptr inbounds %struct._EHash, ptr %43, i64 0, i32 2
  %47 = load i32, ptr %46, align 4, !tbaa !24
  %48 = sext i32 %47 to i64
  %49 = icmp slt i64 %45, %48
  br i1 %49, label %22, label %50, !llvm.loop !407

50:                                               ; preds = %42, %9, %3
  %51 = phi i32 [ %2, %3 ], [ 0, %9 ], [ %44, %42 ]
  %52 = phi ptr [ %1, %3 ], [ %17, %9 ], [ %17, %42 ]
  call fastcc void @ccgSubSurf__effectedFaceNeighbours(ptr noundef %0, ptr noundef %52, i32 noundef %51, ptr noundef nonnull %4, ptr noundef nonnull %6, ptr noundef nonnull %5, ptr noundef nonnull %7)
  %53 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 13
  %54 = load i32, ptr %53, align 8, !tbaa !33
  %55 = icmp eq i32 %54, 0
  %56 = load i32, ptr %6, align 4, !tbaa !31
  br i1 %55, label %61, label %57

57:                                               ; preds = %50
  %58 = load ptr, ptr %4, align 8, !tbaa !14
  %59 = load ptr, ptr %5, align 8, !tbaa !14
  %60 = load i32, ptr %7, align 4, !tbaa !31
  tail call fastcc void @ccgSubSurf__calcVertNormals(ptr noundef nonnull %0, ptr noundef %58, ptr noundef %59, ptr noundef %52, i32 noundef %56, i32 noundef %60, i32 noundef %51)
  br label %61

61:                                               ; preds = %57, %50
  %62 = icmp sgt i32 %56, 0
  br i1 %62, label %63, label %82

63:                                               ; preds = %61
  %64 = load ptr, ptr %4, align 8, !tbaa !14
  %65 = zext i32 %56 to i64
  %66 = and i64 %65, 7
  %67 = icmp ult i32 %56, 8
  br i1 %67, label %70, label %68

68:                                               ; preds = %63
  %69 = and i64 %65, 4294967288
  br label %92

70:                                               ; preds = %92, %63
  %71 = phi i64 [ 0, %63 ], [ %126, %92 ]
  %72 = icmp eq i64 %66, 0
  br i1 %72, label %82, label %73

73:                                               ; preds = %70, %73
  %74 = phi i64 [ %79, %73 ], [ %71, %70 ]
  %75 = phi i64 [ %80, %73 ], [ 0, %70 ]
  %76 = getelementptr inbounds ptr, ptr %64, i64 %74
  %77 = load ptr, ptr %76, align 8, !tbaa !14
  %78 = getelementptr inbounds %struct.CCGVert, ptr %77, i64 0, i32 4
  store i16 0, ptr %78, align 4, !tbaa !86
  %79 = add nuw nsw i64 %74, 1
  %80 = add i64 %75, 1
  %81 = icmp eq i64 %80, %66
  br i1 %81, label %82, label %73, !llvm.loop !568

82:                                               ; preds = %70, %73, %61
  %83 = load i32, ptr %7, align 4, !tbaa !31
  %84 = icmp sgt i32 %83, 0
  br i1 %84, label %85, label %141

85:                                               ; preds = %82
  %86 = load ptr, ptr %5, align 8, !tbaa !14
  %87 = zext i32 %83 to i64
  %88 = and i64 %87, 7
  %89 = icmp ult i32 %83, 8
  br i1 %89, label %129, label %90

90:                                               ; preds = %85
  %91 = and i64 %87, 4294967288
  br label %149

92:                                               ; preds = %92, %68
  %93 = phi i64 [ 0, %68 ], [ %126, %92 ]
  %94 = phi i64 [ 0, %68 ], [ %127, %92 ]
  %95 = getelementptr inbounds ptr, ptr %64, i64 %93
  %96 = load ptr, ptr %95, align 8, !tbaa !14
  %97 = getelementptr inbounds %struct.CCGVert, ptr %96, i64 0, i32 4
  store i16 0, ptr %97, align 4, !tbaa !86
  %98 = or i64 %93, 1
  %99 = getelementptr inbounds ptr, ptr %64, i64 %98
  %100 = load ptr, ptr %99, align 8, !tbaa !14
  %101 = getelementptr inbounds %struct.CCGVert, ptr %100, i64 0, i32 4
  store i16 0, ptr %101, align 4, !tbaa !86
  %102 = or i64 %93, 2
  %103 = getelementptr inbounds ptr, ptr %64, i64 %102
  %104 = load ptr, ptr %103, align 8, !tbaa !14
  %105 = getelementptr inbounds %struct.CCGVert, ptr %104, i64 0, i32 4
  store i16 0, ptr %105, align 4, !tbaa !86
  %106 = or i64 %93, 3
  %107 = getelementptr inbounds ptr, ptr %64, i64 %106
  %108 = load ptr, ptr %107, align 8, !tbaa !14
  %109 = getelementptr inbounds %struct.CCGVert, ptr %108, i64 0, i32 4
  store i16 0, ptr %109, align 4, !tbaa !86
  %110 = or i64 %93, 4
  %111 = getelementptr inbounds ptr, ptr %64, i64 %110
  %112 = load ptr, ptr %111, align 8, !tbaa !14
  %113 = getelementptr inbounds %struct.CCGVert, ptr %112, i64 0, i32 4
  store i16 0, ptr %113, align 4, !tbaa !86
  %114 = or i64 %93, 5
  %115 = getelementptr inbounds ptr, ptr %64, i64 %114
  %116 = load ptr, ptr %115, align 8, !tbaa !14
  %117 = getelementptr inbounds %struct.CCGVert, ptr %116, i64 0, i32 4
  store i16 0, ptr %117, align 4, !tbaa !86
  %118 = or i64 %93, 6
  %119 = getelementptr inbounds ptr, ptr %64, i64 %118
  %120 = load ptr, ptr %119, align 8, !tbaa !14
  %121 = getelementptr inbounds %struct.CCGVert, ptr %120, i64 0, i32 4
  store i16 0, ptr %121, align 4, !tbaa !86
  %122 = or i64 %93, 7
  %123 = getelementptr inbounds ptr, ptr %64, i64 %122
  %124 = load ptr, ptr %123, align 8, !tbaa !14
  %125 = getelementptr inbounds %struct.CCGVert, ptr %124, i64 0, i32 4
  store i16 0, ptr %125, align 4, !tbaa !86
  %126 = add nuw nsw i64 %93, 8
  %127 = add i64 %94, 8
  %128 = icmp eq i64 %127, %69
  br i1 %128, label %70, label %92, !llvm.loop !569

129:                                              ; preds = %149, %85
  %130 = phi i64 [ 0, %85 ], [ %183, %149 ]
  %131 = icmp eq i64 %88, 0
  br i1 %131, label %141, label %132

132:                                              ; preds = %129, %132
  %133 = phi i64 [ %138, %132 ], [ %130, %129 ]
  %134 = phi i64 [ %139, %132 ], [ 0, %129 ]
  %135 = getelementptr inbounds ptr, ptr %86, i64 %133
  %136 = load ptr, ptr %135, align 8, !tbaa !14
  %137 = getelementptr inbounds %struct.CCGEdge, ptr %136, i64 0, i32 3
  store i16 0, ptr %137, align 2, !tbaa !118
  %138 = add nuw nsw i64 %133, 1
  %139 = add i64 %134, 1
  %140 = icmp eq i64 %139, %88
  br i1 %140, label %141, label %132, !llvm.loop !570

141:                                              ; preds = %129, %132, %82
  %142 = icmp sgt i32 %51, 0
  br i1 %142, label %143, label %235

143:                                              ; preds = %141
  %144 = zext i32 %51 to i64
  %145 = and i64 %144, 7
  %146 = icmp ult i32 %51, 8
  br i1 %146, label %223, label %147

147:                                              ; preds = %143
  %148 = and i64 %144, 4294967288
  br label %186

149:                                              ; preds = %149, %90
  %150 = phi i64 [ 0, %90 ], [ %183, %149 ]
  %151 = phi i64 [ 0, %90 ], [ %184, %149 ]
  %152 = getelementptr inbounds ptr, ptr %86, i64 %150
  %153 = load ptr, ptr %152, align 8, !tbaa !14
  %154 = getelementptr inbounds %struct.CCGEdge, ptr %153, i64 0, i32 3
  store i16 0, ptr %154, align 2, !tbaa !118
  %155 = or i64 %150, 1
  %156 = getelementptr inbounds ptr, ptr %86, i64 %155
  %157 = load ptr, ptr %156, align 8, !tbaa !14
  %158 = getelementptr inbounds %struct.CCGEdge, ptr %157, i64 0, i32 3
  store i16 0, ptr %158, align 2, !tbaa !118
  %159 = or i64 %150, 2
  %160 = getelementptr inbounds ptr, ptr %86, i64 %159
  %161 = load ptr, ptr %160, align 8, !tbaa !14
  %162 = getelementptr inbounds %struct.CCGEdge, ptr %161, i64 0, i32 3
  store i16 0, ptr %162, align 2, !tbaa !118
  %163 = or i64 %150, 3
  %164 = getelementptr inbounds ptr, ptr %86, i64 %163
  %165 = load ptr, ptr %164, align 8, !tbaa !14
  %166 = getelementptr inbounds %struct.CCGEdge, ptr %165, i64 0, i32 3
  store i16 0, ptr %166, align 2, !tbaa !118
  %167 = or i64 %150, 4
  %168 = getelementptr inbounds ptr, ptr %86, i64 %167
  %169 = load ptr, ptr %168, align 8, !tbaa !14
  %170 = getelementptr inbounds %struct.CCGEdge, ptr %169, i64 0, i32 3
  store i16 0, ptr %170, align 2, !tbaa !118
  %171 = or i64 %150, 5
  %172 = getelementptr inbounds ptr, ptr %86, i64 %171
  %173 = load ptr, ptr %172, align 8, !tbaa !14
  %174 = getelementptr inbounds %struct.CCGEdge, ptr %173, i64 0, i32 3
  store i16 0, ptr %174, align 2, !tbaa !118
  %175 = or i64 %150, 6
  %176 = getelementptr inbounds ptr, ptr %86, i64 %175
  %177 = load ptr, ptr %176, align 8, !tbaa !14
  %178 = getelementptr inbounds %struct.CCGEdge, ptr %177, i64 0, i32 3
  store i16 0, ptr %178, align 2, !tbaa !118
  %179 = or i64 %150, 7
  %180 = getelementptr inbounds ptr, ptr %86, i64 %179
  %181 = load ptr, ptr %180, align 8, !tbaa !14
  %182 = getelementptr inbounds %struct.CCGEdge, ptr %181, i64 0, i32 3
  store i16 0, ptr %182, align 2, !tbaa !118
  %183 = add nuw nsw i64 %150, 8
  %184 = add i64 %151, 8
  %185 = icmp eq i64 %184, %91
  br i1 %185, label %129, label %149, !llvm.loop !571

186:                                              ; preds = %186, %147
  %187 = phi i64 [ 0, %147 ], [ %220, %186 ]
  %188 = phi i64 [ 0, %147 ], [ %221, %186 ]
  %189 = getelementptr inbounds ptr, ptr %52, i64 %187
  %190 = load ptr, ptr %189, align 8, !tbaa !14
  %191 = getelementptr inbounds %struct.CCGFace, ptr %190, i64 0, i32 3
  store i16 0, ptr %191, align 2, !tbaa !128
  %192 = or i64 %187, 1
  %193 = getelementptr inbounds ptr, ptr %52, i64 %192
  %194 = load ptr, ptr %193, align 8, !tbaa !14
  %195 = getelementptr inbounds %struct.CCGFace, ptr %194, i64 0, i32 3
  store i16 0, ptr %195, align 2, !tbaa !128
  %196 = or i64 %187, 2
  %197 = getelementptr inbounds ptr, ptr %52, i64 %196
  %198 = load ptr, ptr %197, align 8, !tbaa !14
  %199 = getelementptr inbounds %struct.CCGFace, ptr %198, i64 0, i32 3
  store i16 0, ptr %199, align 2, !tbaa !128
  %200 = or i64 %187, 3
  %201 = getelementptr inbounds ptr, ptr %52, i64 %200
  %202 = load ptr, ptr %201, align 8, !tbaa !14
  %203 = getelementptr inbounds %struct.CCGFace, ptr %202, i64 0, i32 3
  store i16 0, ptr %203, align 2, !tbaa !128
  %204 = or i64 %187, 4
  %205 = getelementptr inbounds ptr, ptr %52, i64 %204
  %206 = load ptr, ptr %205, align 8, !tbaa !14
  %207 = getelementptr inbounds %struct.CCGFace, ptr %206, i64 0, i32 3
  store i16 0, ptr %207, align 2, !tbaa !128
  %208 = or i64 %187, 5
  %209 = getelementptr inbounds ptr, ptr %52, i64 %208
  %210 = load ptr, ptr %209, align 8, !tbaa !14
  %211 = getelementptr inbounds %struct.CCGFace, ptr %210, i64 0, i32 3
  store i16 0, ptr %211, align 2, !tbaa !128
  %212 = or i64 %187, 6
  %213 = getelementptr inbounds ptr, ptr %52, i64 %212
  %214 = load ptr, ptr %213, align 8, !tbaa !14
  %215 = getelementptr inbounds %struct.CCGFace, ptr %214, i64 0, i32 3
  store i16 0, ptr %215, align 2, !tbaa !128
  %216 = or i64 %187, 7
  %217 = getelementptr inbounds ptr, ptr %52, i64 %216
  %218 = load ptr, ptr %217, align 8, !tbaa !14
  %219 = getelementptr inbounds %struct.CCGFace, ptr %218, i64 0, i32 3
  store i16 0, ptr %219, align 2, !tbaa !128
  %220 = add nuw nsw i64 %187, 8
  %221 = add i64 %188, 8
  %222 = icmp eq i64 %221, %148
  br i1 %222, label %223, label %186, !llvm.loop !572

223:                                              ; preds = %186, %143
  %224 = phi i64 [ 0, %143 ], [ %220, %186 ]
  %225 = icmp eq i64 %145, 0
  br i1 %225, label %235, label %226

226:                                              ; preds = %223, %226
  %227 = phi i64 [ %232, %226 ], [ %224, %223 ]
  %228 = phi i64 [ %233, %226 ], [ 0, %223 ]
  %229 = getelementptr inbounds ptr, ptr %52, i64 %227
  %230 = load ptr, ptr %229, align 8, !tbaa !14
  %231 = getelementptr inbounds %struct.CCGFace, ptr %230, i64 0, i32 3
  store i16 0, ptr %231, align 2, !tbaa !128
  %232 = add nuw nsw i64 %227, 1
  %233 = add i64 %228, 1
  %234 = icmp eq i64 %233, %145
  br i1 %234, label %235, label %226, !llvm.loop !573

235:                                              ; preds = %223, %226, %141
  %236 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  %237 = load ptr, ptr %5, align 8, !tbaa !14
  tail call void %236(ptr noundef %237) #23
  %238 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  %239 = load ptr, ptr %4, align 8, !tbaa !14
  tail call void %238(ptr noundef %239) #23
  br i1 %8, label %240, label %242

240:                                              ; preds = %235
  %241 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  tail call void %241(ptr noundef %52) #23
  br label %242

242:                                              ; preds = %240, %235
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #23
  ret i32 0
}

; Function Attrs: nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @ccgSubSurf__calcVertNormals(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, i32 noundef %4, i32 noundef %5, i32 noundef %6) unnamed_addr #10 {
  %8 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %9 = load i32, ptr %8, align 8, !tbaa !32
  %10 = shl nuw i32 1, %9
  %11 = add i32 %9, -1
  %12 = shl nuw i32 1, %11
  %13 = add nuw i32 %12, 1
  %14 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 14
  %15 = load i32, ptr %14, align 4, !tbaa !34
  %16 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %17 = load i32, ptr %16, align 8, !tbaa !37
  %18 = icmp sgt i32 %6, 0
  br i1 %18, label %19, label %63

19:                                               ; preds = %7
  %20 = icmp eq i32 %11, 31
  %21 = add nuw i32 %12, 2
  %22 = mul i32 %13, %21
  %23 = shl i32 %13, %11
  %24 = add i32 %23, %13
  %25 = add i32 %13, %12
  %26 = shl i32 %21, %11
  %27 = add nsw i32 %26, %13
  %28 = mul nsw i32 %27, %17
  %29 = add nsw i32 %28, %15
  %30 = sext i32 %29 to i64
  %31 = add nsw i32 %12, -1
  %32 = mul i32 %13, %17
  %33 = icmp sgt i32 %12, 1
  %34 = shl i32 %32, 1
  %35 = add nsw i32 %34, %15
  %36 = sext i32 %35 to i64
  %37 = mul nsw i32 %21, %17
  %38 = add nsw i32 %37, %15
  %39 = sext i32 %38 to i64
  %40 = add nsw i32 %32, %15
  %41 = sext i32 %40 to i64
  %42 = tail call i32 @llvm.smax.i32(i32 %12, i32 1)
  %43 = sext i32 %13 to i64
  %44 = sext i32 %31 to i64
  %45 = sext i32 %17 to i64
  %46 = sext i32 %15 to i64
  %47 = zext i32 %6 to i64
  %48 = zext i32 %42 to i64
  %49 = zext i32 %42 to i64
  %50 = add nsw i64 %48, -1
  %51 = and i64 %48, 1
  %52 = icmp eq i64 %50, 0
  %53 = and i64 %48, 2147483646
  %54 = icmp eq i64 %51, 0
  %55 = and i64 %48, 1
  %56 = icmp eq i64 %50, 0
  %57 = and i64 %48, 2147483646
  %58 = icmp eq i64 %55, 0
  %59 = and i64 %48, 1
  %60 = icmp eq i64 %50, 0
  %61 = and i64 %48, 2147483646
  %62 = icmp eq i64 %59, 0
  br label %78

63:                                               ; preds = %544, %7
  %64 = icmp sgt i32 %4, 0
  br i1 %64, label %65, label %547

65:                                               ; preds = %63
  %66 = mul nsw i32 %17, %9
  %67 = add nsw i32 %66, %15
  %68 = sext i32 %67 to i64
  %69 = add nuw i32 %12, 2
  %70 = mul i32 %13, %69
  %71 = shl i32 %69, %11
  %72 = add nsw i32 %71, %13
  %73 = mul nsw i32 %72, %17
  %74 = add nsw i32 %73, %15
  %75 = sext i32 %74 to i64
  %76 = sext i32 %66 to i64
  %77 = zext i32 %4 to i64
  br label %558

78:                                               ; preds = %19, %544
  %79 = phi i64 [ 0, %19 ], [ %545, %544 ]
  %80 = getelementptr inbounds ptr, ptr %3, i64 %79
  %81 = load ptr, ptr %80, align 8, !tbaa !14
  %82 = getelementptr inbounds %struct.CCGFace, ptr %81, i64 0, i32 2
  %83 = load i16, ptr %82, align 8, !tbaa !89
  %84 = sext i16 %83 to i32
  %85 = icmp sgt i16 %83, 0
  br i1 %85, label %86, label %544

86:                                               ; preds = %78
  %87 = getelementptr inbounds %struct.CCGFace, ptr %81, i64 1
  %88 = zext i16 %83 to i64
  %89 = getelementptr inbounds ptr, ptr %87, i64 %88
  %90 = getelementptr inbounds ptr, ptr %89, i64 %88
  %91 = add nsw i32 %84, -1
  %92 = getelementptr i8, ptr %90, i64 %30
  %93 = zext i32 %84 to i64
  br label %381

94:                                               ; preds = %541
  br i1 %85, label %95, label %544

95:                                               ; preds = %94
  %96 = getelementptr inbounds %struct.CCGFace, ptr %81, i64 1
  %97 = zext i16 %83 to i64
  %98 = getelementptr inbounds ptr, ptr %96, i64 %97
  %99 = getelementptr inbounds ptr, ptr %98, i64 %97
  %100 = getelementptr i8, ptr %99, i64 %36
  %101 = getelementptr i8, ptr %99, i64 %39
  %102 = getelementptr i8, ptr %99, i64 %41
  br i1 %20, label %544, label %103

103:                                              ; preds = %95
  %104 = add nsw i32 %84, -1
  %105 = zext i32 %84 to i64
  br label %106

106:                                              ; preds = %103, %379
  %107 = phi i64 [ 0, %103 ], [ %136, %379 ]
  %108 = trunc i64 %107 to i32
  %109 = add i32 %104, %108
  %110 = srem i32 %109, %84
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds ptr, ptr %98, i64 %111
  %113 = load ptr, ptr %112, align 8, !tbaa !14
  %114 = getelementptr inbounds %struct.CCGEdge, ptr %113, i64 0, i32 3
  %115 = load i16, ptr %114, align 2, !tbaa !118
  %116 = and i16 %115, 1
  %117 = icmp ne i16 %116, 0
  %118 = getelementptr inbounds ptr, ptr %98, i64 %107
  %119 = load ptr, ptr %118, align 8, !tbaa !14
  %120 = getelementptr inbounds %struct.CCGEdge, ptr %119, i64 0, i32 3
  %121 = load i16, ptr %120, align 2, !tbaa !118
  %122 = and i16 %121, 1
  %123 = icmp ne i16 %122, 0
  %124 = trunc i64 %107 to i32
  %125 = mul i32 %22, %124
  %126 = add nsw i32 %125, 1
  %127 = mul nsw i32 %126, %17
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i8, ptr %99, i64 %128
  %130 = getelementptr inbounds ptr, ptr %96, i64 %107
  %131 = mul i32 %22, %110
  %132 = add nsw i32 %131, 1
  %133 = mul nsw i32 %132, %17
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i8, ptr %99, i64 %134
  %136 = add nuw nsw i64 %107, 1
  %137 = select i1 %123, i1 true, i1 %33
  %138 = select i1 %117, i1 true, i1 %33
  %139 = getelementptr i8, ptr %101, i64 %134
  %140 = getelementptr inbounds float, ptr %139, i64 2
  %141 = icmp eq i64 %136, %105
  %142 = trunc i64 %136 to i32
  %143 = select i1 %141, i32 0, i32 %142
  %144 = mul i32 %22, %143
  %145 = add nsw i32 %144, 1
  %146 = mul nsw i32 %145, %17
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds i8, ptr %99, i64 %147
  %149 = icmp eq i64 %136, %105
  %150 = trunc i64 %136 to i32
  %151 = select i1 %149, i32 0, i32 %150
  %152 = mul i32 %22, %151
  %153 = add nsw i32 %152, 1
  %154 = mul nsw i32 %153, %17
  %155 = sext i32 %154 to i64
  %156 = getelementptr i8, ptr %100, i64 %155
  %157 = getelementptr inbounds float, ptr %156, i64 2
  br label %158

158:                                              ; preds = %377, %106
  %159 = phi i64 [ %165, %377 ], [ 0, %106 ]
  %160 = icmp slt i64 %159, %44
  %161 = select i1 %117, i1 true, i1 %160
  %162 = trunc i64 %159 to i32
  %163 = add i32 %162, 1
  %164 = mul i32 %13, %163
  %165 = add nuw nsw i64 %159, 1
  %166 = trunc i64 %165 to i32
  %167 = add i32 %166, 1
  %168 = mul i32 %13, %167
  %169 = icmp eq i64 %159, 0
  %170 = add nsw i64 %159, %43
  %171 = mul nsw i64 %170, %45
  %172 = add nsw i64 %171, %46
  %173 = getelementptr inbounds i8, ptr %135, i64 %172
  %174 = getelementptr inbounds float, ptr %173, i64 2
  %175 = add nsw i64 %165, %43
  %176 = mul nsw i64 %175, %45
  %177 = add nsw i64 %176, %46
  %178 = getelementptr inbounds i8, ptr %135, i64 %177
  br label %179

179:                                              ; preds = %357, %158
  %180 = phi i64 [ %188, %357 ], [ 0, %158 ]
  %181 = icmp slt i64 %180, %44
  %182 = select i1 %123, i1 true, i1 %181
  %183 = trunc i64 %180 to i32
  %184 = add i32 %164, %183
  %185 = mul nsw i32 %184, %17
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds i8, ptr %129, i64 %186
  %188 = add nuw nsw i64 %180, 1
  %189 = trunc i64 %188 to i32
  %190 = add i32 %164, %189
  %191 = mul nsw i32 %190, %17
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds i8, ptr %129, i64 %192
  %194 = add i32 %168, %189
  %195 = mul nsw i32 %194, %17
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds i8, ptr %129, i64 %196
  %198 = add i32 %168, %183
  %199 = mul nsw i32 %198, %17
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i8, ptr %129, i64 %200
  %202 = load float, ptr %197, align 4, !tbaa !65
  %203 = load float, ptr %187, align 4, !tbaa !65
  %204 = getelementptr inbounds float, ptr %197, i64 1
  %205 = load float, ptr %204, align 4, !tbaa !65
  %206 = getelementptr inbounds float, ptr %187, i64 1
  %207 = load float, ptr %206, align 4, !tbaa !65
  %208 = fsub fast float %205, %207
  %209 = getelementptr inbounds float, ptr %197, i64 2
  %210 = load float, ptr %209, align 4, !tbaa !65
  %211 = getelementptr inbounds float, ptr %187, i64 2
  %212 = load float, ptr %211, align 4, !tbaa !65
  %213 = load float, ptr %201, align 4, !tbaa !65
  %214 = load float, ptr %193, align 4, !tbaa !65
  %215 = fsub fast float %213, %214
  %216 = getelementptr inbounds float, ptr %201, i64 1
  %217 = getelementptr inbounds float, ptr %193, i64 1
  %218 = fmul fast float %215, %208
  %219 = insertelement <2 x float> poison, float %210, i64 0
  %220 = insertelement <2 x float> %219, float %202, i64 1
  %221 = insertelement <2 x float> poison, float %212, i64 0
  %222 = insertelement <2 x float> %221, float %203, i64 1
  %223 = fsub fast <2 x float> %220, %222
  %224 = load <2 x float>, ptr %216, align 4, !tbaa !65
  %225 = load <2 x float>, ptr %217, align 4, !tbaa !65
  %226 = fsub fast <2 x float> %224, %225
  %227 = fmul fast <2 x float> %226, %223
  %228 = shufflevector <2 x float> %226, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %229 = insertelement <2 x float> %228, float %215, i64 1
  %230 = shufflevector <2 x float> %223, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %231 = insertelement <2 x float> %230, float %208, i64 0
  %232 = fmul fast <2 x float> %229, %231
  %233 = fsub fast <2 x float> %227, %232
  %234 = shufflevector <2 x float> %223, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %235 = fmul fast <2 x float> %226, %234
  %236 = extractelement <2 x float> %235, i64 0
  %237 = fsub fast float %218, %236
  %238 = fmul fast <2 x float> %233, %233
  %239 = fmul fast float %237, %237
  %240 = extractelement <2 x float> %238, i64 0
  %241 = fadd fast float %240, %239
  %242 = extractelement <2 x float> %238, i64 1
  %243 = fadd fast float %241, %242
  %244 = tail call fast float @llvm.sqrt.f32(float %243)
  %245 = fcmp fast ogt float %244, 0x38AA95A5C0000000
  %246 = fdiv fast float 1.000000e+00, %244
  %247 = insertelement <2 x float> poison, float %246, i64 0
  %248 = shufflevector <2 x float> %247, <2 x float> poison, <2 x i32> zeroinitializer
  %249 = fmul fast <2 x float> %248, %233
  %250 = fmul fast float %246, %237
  %251 = insertelement <2 x i1> poison, i1 %245, i64 0
  %252 = shufflevector <2 x i1> %251, <2 x i1> poison, <2 x i32> zeroinitializer
  %253 = select <2 x i1> %252, <2 x float> %249, <2 x float> zeroinitializer
  %254 = select i1 %245, float %250, float 0.000000e+00
  %255 = add nsw i32 %185, %15
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds i8, ptr %129, i64 %256
  %258 = load <2 x float>, ptr %257, align 4, !tbaa !65
  %259 = fadd fast <2 x float> %253, %258
  store <2 x float> %259, ptr %257, align 4, !tbaa !65
  %260 = getelementptr inbounds float, ptr %257, i64 2
  %261 = load float, ptr %260, align 4, !tbaa !65
  %262 = fadd fast float %254, %261
  store float %262, ptr %260, align 4, !tbaa !65
  br i1 %182, label %263, label %272

263:                                              ; preds = %179
  %264 = add nsw i32 %191, %15
  %265 = sext i32 %264 to i64
  %266 = getelementptr inbounds i8, ptr %129, i64 %265
  %267 = load <2 x float>, ptr %266, align 4, !tbaa !65
  %268 = fadd fast <2 x float> %267, %253
  store <2 x float> %268, ptr %266, align 4, !tbaa !65
  %269 = getelementptr inbounds float, ptr %266, i64 2
  %270 = load float, ptr %269, align 4, !tbaa !65
  %271 = fadd fast float %270, %254
  store float %271, ptr %269, align 4, !tbaa !65
  br label %272

272:                                              ; preds = %263, %179
  br i1 %161, label %273, label %299

273:                                              ; preds = %272
  %274 = add nsw i32 %199, %15
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds i8, ptr %129, i64 %275
  %277 = load <2 x float>, ptr %276, align 4, !tbaa !65
  %278 = fadd fast <2 x float> %277, %253
  store <2 x float> %278, ptr %276, align 4, !tbaa !65
  %279 = getelementptr inbounds float, ptr %276, i64 2
  %280 = load float, ptr %279, align 4, !tbaa !65
  %281 = fadd fast float %280, %254
  store float %281, ptr %279, align 4, !tbaa !65
  br i1 %182, label %282, label %299

282:                                              ; preds = %273
  %283 = or i1 %160, %181
  br i1 %283, label %290, label %284

284:                                              ; preds = %282
  %285 = load ptr, ptr %130, align 8, !tbaa !14
  %286 = getelementptr inbounds %struct.CCGVert, ptr %285, i64 0, i32 4
  %287 = load i16, ptr %286, align 4, !tbaa !86
  %288 = and i16 %287, 1
  %289 = icmp eq i16 %288, 0
  br i1 %289, label %299, label %290

290:                                              ; preds = %284, %282
  %291 = add nsw i32 %195, %15
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds i8, ptr %129, i64 %292
  %294 = load <2 x float>, ptr %293, align 4, !tbaa !65
  %295 = fadd fast <2 x float> %294, %253
  store <2 x float> %295, ptr %293, align 4, !tbaa !65
  %296 = getelementptr inbounds float, ptr %293, i64 2
  %297 = load float, ptr %296, align 4, !tbaa !65
  %298 = fadd fast float %297, %254
  store float %298, ptr %296, align 4, !tbaa !65
  br label %299

299:                                              ; preds = %290, %284, %273, %272
  %300 = icmp eq i64 %180, 0
  %301 = or i64 %180, %159
  %302 = and i64 %301, 4294967295
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %335, label %304

304:                                              ; preds = %299
  br i1 %169, label %315, label %305

305:                                              ; preds = %304
  br i1 %300, label %306, label %357

306:                                              ; preds = %305
  %307 = load <2 x float>, ptr %173, align 4, !tbaa !65
  %308 = fadd fast <2 x float> %307, %253
  store <2 x float> %308, ptr %173, align 4, !tbaa !65
  %309 = load float, ptr %174, align 4, !tbaa !65
  %310 = fadd fast float %309, %254
  store float %310, ptr %174, align 4, !tbaa !65
  br i1 %161, label %311, label %357

311:                                              ; preds = %306
  %312 = load float, ptr %178, align 4, !tbaa !65
  %313 = extractelement <2 x float> %253, i64 0
  %314 = fadd fast float %312, %313
  store float %314, ptr %178, align 4, !tbaa !65
  br label %348

315:                                              ; preds = %304
  %316 = mul i32 %32, %189
  %317 = add nsw i32 %316, %15
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds i8, ptr %148, i64 %318
  %320 = load <2 x float>, ptr %319, align 4, !tbaa !65
  %321 = fadd fast <2 x float> %320, %253
  store <2 x float> %321, ptr %319, align 4, !tbaa !65
  %322 = getelementptr inbounds float, ptr %319, i64 2
  %323 = load float, ptr %322, align 4, !tbaa !65
  %324 = fadd fast float %323, %254
  store float %324, ptr %322, align 4, !tbaa !65
  br i1 %182, label %325, label %357

325:                                              ; preds = %315
  %326 = trunc i64 %180 to i32
  %327 = add i32 %326, 2
  %328 = mul i32 %32, %327
  %329 = add nsw i32 %328, %15
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds i8, ptr %148, i64 %330
  %332 = load float, ptr %331, align 4, !tbaa !65
  %333 = extractelement <2 x float> %253, i64 0
  %334 = fadd fast float %332, %333
  store float %334, ptr %331, align 4, !tbaa !65
  br label %348

335:                                              ; preds = %299
  br i1 %137, label %336, label %341

336:                                              ; preds = %335
  %337 = load <2 x float>, ptr %156, align 4, !tbaa !65
  %338 = fadd fast <2 x float> %337, %253
  store <2 x float> %338, ptr %156, align 4, !tbaa !65
  %339 = load float, ptr %157, align 4, !tbaa !65
  %340 = fadd fast float %339, %254
  store float %340, ptr %157, align 4, !tbaa !65
  br label %341

341:                                              ; preds = %336, %335
  br i1 %138, label %342, label %347

342:                                              ; preds = %341
  %343 = load <2 x float>, ptr %139, align 4, !tbaa !65
  %344 = fadd fast <2 x float> %343, %253
  store <2 x float> %344, ptr %139, align 4, !tbaa !65
  %345 = load float, ptr %140, align 4, !tbaa !65
  %346 = fadd fast float %345, %254
  store float %346, ptr %140, align 4, !tbaa !65
  br label %347

347:                                              ; preds = %341, %342
  br label %359

348:                                              ; preds = %311, %325
  %349 = phi ptr [ %178, %311 ], [ %331, %325 ]
  %350 = getelementptr inbounds float, ptr %349, i64 1
  %351 = load float, ptr %350, align 4, !tbaa !65
  %352 = extractelement <2 x float> %253, i64 1
  %353 = fadd fast float %351, %352
  store float %353, ptr %350, align 4, !tbaa !65
  %354 = getelementptr inbounds float, ptr %349, i64 2
  %355 = load float, ptr %354, align 4, !tbaa !65
  %356 = fadd fast float %355, %254
  store float %356, ptr %354, align 4, !tbaa !65
  br label %357

357:                                              ; preds = %374, %348, %315, %306, %305
  %358 = icmp eq i64 %188, %49
  br i1 %358, label %377, label %179, !llvm.loop !574

359:                                              ; preds = %347, %374
  %360 = phi i64 [ %375, %374 ], [ 0, %347 ]
  %361 = icmp eq i64 %360, %107
  br i1 %361, label %374, label %362

362:                                              ; preds = %359
  %363 = trunc i64 %360 to i32
  %364 = mul i32 %22, %363
  %365 = add nsw i32 %364, 1
  %366 = mul nsw i32 %365, %17
  %367 = sext i32 %366 to i64
  %368 = getelementptr i8, ptr %102, i64 %367
  %369 = load <2 x float>, ptr %368, align 4, !tbaa !65
  %370 = fadd fast <2 x float> %369, %253
  store <2 x float> %370, ptr %368, align 4, !tbaa !65
  %371 = getelementptr inbounds float, ptr %368, i64 2
  %372 = load float, ptr %371, align 4, !tbaa !65
  %373 = fadd fast float %372, %254
  store float %373, ptr %371, align 4, !tbaa !65
  br label %374

374:                                              ; preds = %362, %359
  %375 = add nuw nsw i64 %360, 1
  %376 = icmp eq i64 %375, %105
  br i1 %376, label %357, label %359, !llvm.loop !575

377:                                              ; preds = %357
  %378 = icmp eq i64 %165, %49
  br i1 %378, label %379, label %158, !llvm.loop !576

379:                                              ; preds = %377
  %380 = icmp eq i64 %136, %105
  br i1 %380, label %544, label %106, !llvm.loop !577

381:                                              ; preds = %86, %541
  %382 = phi i64 [ 0, %86 ], [ %542, %541 ]
  br i1 %20, label %427, label %383

383:                                              ; preds = %381
  %384 = trunc i64 %382 to i32
  %385 = mul i32 %22, %384
  %386 = add nsw i32 %385, 1
  %387 = mul nsw i32 %386, %17
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds i8, ptr %90, i64 %388
  br label %390

390:                                              ; preds = %425, %383
  %391 = phi i32 [ 0, %383 ], [ %392, %425 ]
  %392 = add nuw nsw i32 %391, 1
  %393 = mul i32 %392, %13
  br i1 %52, label %415, label %394

394:                                              ; preds = %390, %394
  %395 = phi i64 [ %412, %394 ], [ 0, %390 ]
  %396 = phi i64 [ %413, %394 ], [ 0, %390 ]
  %397 = trunc i64 %395 to i32
  %398 = add i32 %393, %397
  %399 = mul nsw i32 %398, %17
  %400 = add nsw i32 %399, %15
  %401 = sext i32 %400 to i64
  %402 = getelementptr inbounds i8, ptr %389, i64 %401
  %403 = getelementptr inbounds float, ptr %402, i64 2
  store float 0.000000e+00, ptr %403, align 4, !tbaa !65
  store <2 x float> zeroinitializer, ptr %402, align 4, !tbaa !65
  %404 = trunc i64 %395 to i32
  %405 = or i32 %404, 1
  %406 = add i32 %393, %405
  %407 = mul nsw i32 %406, %17
  %408 = add nsw i32 %407, %15
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds i8, ptr %389, i64 %409
  %411 = getelementptr inbounds float, ptr %410, i64 2
  store float 0.000000e+00, ptr %411, align 4, !tbaa !65
  store <2 x float> zeroinitializer, ptr %410, align 4, !tbaa !65
  %412 = add nuw nsw i64 %395, 2
  %413 = add i64 %396, 2
  %414 = icmp eq i64 %413, %53
  br i1 %414, label %415, label %394, !llvm.loop !578

415:                                              ; preds = %394, %390
  %416 = phi i64 [ 0, %390 ], [ %412, %394 ]
  br i1 %54, label %425, label %417

417:                                              ; preds = %415
  %418 = trunc i64 %416 to i32
  %419 = add i32 %393, %418
  %420 = mul nsw i32 %419, %17
  %421 = add nsw i32 %420, %15
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds i8, ptr %389, i64 %422
  %424 = getelementptr inbounds float, ptr %423, i64 2
  store float 0.000000e+00, ptr %424, align 4, !tbaa !65
  store <2 x float> zeroinitializer, ptr %423, align 4, !tbaa !65
  br label %425

425:                                              ; preds = %415, %417
  %426 = icmp eq i32 %392, %42
  br i1 %426, label %427, label %390, !llvm.loop !579

427:                                              ; preds = %425, %381
  %428 = trunc i64 %382 to i32
  %429 = add i32 %91, %428
  %430 = srem i32 %429, %84
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds ptr, ptr %89, i64 %431
  %433 = load ptr, ptr %432, align 8, !tbaa !14
  %434 = getelementptr inbounds %struct.CCGEdge, ptr %433, i64 0, i32 3
  %435 = load i16, ptr %434, align 2, !tbaa !118
  %436 = and i16 %435, 1
  %437 = icmp eq i16 %436, 0
  %438 = select i1 %437, i1 true, i1 %20
  br i1 %438, label %477, label %439

439:                                              ; preds = %427
  %440 = trunc i64 %382 to i32
  %441 = mul i32 %22, %440
  %442 = add nsw i32 %441, 1
  %443 = mul nsw i32 %442, %17
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds i8, ptr %90, i64 %444
  br i1 %56, label %467, label %446

446:                                              ; preds = %439, %446
  %447 = phi i64 [ %464, %446 ], [ 0, %439 ]
  %448 = phi i64 [ %465, %446 ], [ 0, %439 ]
  %449 = trunc i64 %447 to i32
  %450 = add i32 %24, %449
  %451 = mul nsw i32 %450, %17
  %452 = add nsw i32 %451, %15
  %453 = sext i32 %452 to i64
  %454 = getelementptr inbounds i8, ptr %445, i64 %453
  %455 = getelementptr inbounds float, ptr %454, i64 2
  store float 0.000000e+00, ptr %455, align 4, !tbaa !65
  store <2 x float> zeroinitializer, ptr %454, align 4, !tbaa !65
  %456 = trunc i64 %447 to i32
  %457 = or i32 %456, 1
  %458 = add i32 %24, %457
  %459 = mul nsw i32 %458, %17
  %460 = add nsw i32 %459, %15
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds i8, ptr %445, i64 %461
  %463 = getelementptr inbounds float, ptr %462, i64 2
  store float 0.000000e+00, ptr %463, align 4, !tbaa !65
  store <2 x float> zeroinitializer, ptr %462, align 4, !tbaa !65
  %464 = add nuw nsw i64 %447, 2
  %465 = add i64 %448, 2
  %466 = icmp eq i64 %465, %57
  br i1 %466, label %467, label %446, !llvm.loop !580

467:                                              ; preds = %446, %439
  %468 = phi i64 [ 0, %439 ], [ %464, %446 ]
  br i1 %58, label %477, label %469

469:                                              ; preds = %467
  %470 = trunc i64 %468 to i32
  %471 = add i32 %24, %470
  %472 = mul nsw i32 %471, %17
  %473 = add nsw i32 %472, %15
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds i8, ptr %445, i64 %474
  %476 = getelementptr inbounds float, ptr %475, i64 2
  store float 0.000000e+00, ptr %476, align 4, !tbaa !65
  store <2 x float> zeroinitializer, ptr %475, align 4, !tbaa !65
  br label %477

477:                                              ; preds = %469, %467, %427
  %478 = getelementptr inbounds ptr, ptr %89, i64 %382
  %479 = load ptr, ptr %478, align 8, !tbaa !14
  %480 = getelementptr inbounds %struct.CCGEdge, ptr %479, i64 0, i32 3
  %481 = load i16, ptr %480, align 2, !tbaa !118
  %482 = and i16 %481, 1
  %483 = icmp eq i16 %482, 0
  %484 = select i1 %483, i1 true, i1 %20
  br i1 %484, label %526, label %485

485:                                              ; preds = %477
  %486 = trunc i64 %382 to i32
  %487 = mul i32 %22, %486
  %488 = add nsw i32 %487, 1
  %489 = mul nsw i32 %488, %17
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds i8, ptr %90, i64 %490
  br i1 %60, label %515, label %492

492:                                              ; preds = %485, %492
  %493 = phi i64 [ %512, %492 ], [ 0, %485 ]
  %494 = phi i64 [ %513, %492 ], [ 0, %485 ]
  %495 = trunc i64 %493 to i32
  %496 = mul i32 %13, %495
  %497 = add i32 %25, %496
  %498 = mul nsw i32 %497, %17
  %499 = add nsw i32 %498, %15
  %500 = sext i32 %499 to i64
  %501 = getelementptr inbounds i8, ptr %491, i64 %500
  %502 = getelementptr inbounds float, ptr %501, i64 2
  store float 0.000000e+00, ptr %502, align 4, !tbaa !65
  store <2 x float> zeroinitializer, ptr %501, align 4, !tbaa !65
  %503 = trunc i64 %493 to i32
  %504 = or i32 %503, 1
  %505 = mul i32 %13, %504
  %506 = add i32 %25, %505
  %507 = mul nsw i32 %506, %17
  %508 = add nsw i32 %507, %15
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds i8, ptr %491, i64 %509
  %511 = getelementptr inbounds float, ptr %510, i64 2
  store float 0.000000e+00, ptr %511, align 4, !tbaa !65
  store <2 x float> zeroinitializer, ptr %510, align 4, !tbaa !65
  %512 = add nuw nsw i64 %493, 2
  %513 = add i64 %494, 2
  %514 = icmp eq i64 %513, %61
  br i1 %514, label %515, label %492, !llvm.loop !581

515:                                              ; preds = %492, %485
  %516 = phi i64 [ 0, %485 ], [ %512, %492 ]
  br i1 %62, label %526, label %517

517:                                              ; preds = %515
  %518 = trunc i64 %516 to i32
  %519 = mul i32 %13, %518
  %520 = add i32 %25, %519
  %521 = mul nsw i32 %520, %17
  %522 = add nsw i32 %521, %15
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds i8, ptr %491, i64 %523
  %525 = getelementptr inbounds float, ptr %524, i64 2
  store float 0.000000e+00, ptr %525, align 4, !tbaa !65
  store <2 x float> zeroinitializer, ptr %524, align 4, !tbaa !65
  br label %526

526:                                              ; preds = %517, %515, %477
  %527 = getelementptr inbounds ptr, ptr %87, i64 %382
  %528 = load ptr, ptr %527, align 8, !tbaa !14
  %529 = getelementptr inbounds %struct.CCGVert, ptr %528, i64 0, i32 4
  %530 = load i16, ptr %529, align 4, !tbaa !86
  %531 = and i16 %530, 1
  %532 = icmp eq i16 %531, 0
  br i1 %532, label %541, label %533

533:                                              ; preds = %526
  %534 = trunc i64 %382 to i32
  %535 = mul i32 %22, %534
  %536 = add nsw i32 %535, 1
  %537 = mul nsw i32 %536, %17
  %538 = sext i32 %537 to i64
  %539 = getelementptr i8, ptr %92, i64 %538
  %540 = getelementptr inbounds float, ptr %539, i64 2
  store float 0.000000e+00, ptr %540, align 4, !tbaa !65
  store <2 x float> zeroinitializer, ptr %539, align 4, !tbaa !65
  br label %541

541:                                              ; preds = %526, %533
  %542 = add nuw nsw i64 %382, 1
  %543 = icmp eq i64 %542, %93
  br i1 %543, label %94, label %381, !llvm.loop !582

544:                                              ; preds = %379, %78, %95, %94
  %545 = add nuw nsw i64 %79, 1
  %546 = icmp eq i64 %545, %47
  br i1 %546, label %63, label %78, !llvm.loop !583

547:                                              ; preds = %691, %63
  %548 = icmp sgt i32 %5, 0
  br i1 %548, label %549, label %694

549:                                              ; preds = %547
  %550 = icmp sgt i32 %10, 1
  %551 = shl nsw i32 %13, 1
  %552 = icmp eq i32 %11, 31
  %553 = sub nsw i32 0, %12
  %554 = add nuw i32 %12, 2
  %555 = mul i32 %13, %554
  %556 = sext i32 %15 to i64
  %557 = zext i32 %5 to i64
  br label %730

558:                                              ; preds = %65, %691
  %559 = phi i64 [ 0, %65 ], [ %692, %691 ]
  %560 = getelementptr inbounds ptr, ptr %1, i64 %559
  %561 = load ptr, ptr %560, align 8, !tbaa !14
  %562 = getelementptr inbounds %struct.CCGVert, ptr %561, i64 1
  %563 = getelementptr inbounds i8, ptr %562, i64 %68
  %564 = getelementptr inbounds float, ptr %563, i64 2
  store float 0.000000e+00, ptr %564, align 4, !tbaa !65
  %565 = getelementptr inbounds float, ptr %563, i64 1
  store <2 x float> zeroinitializer, ptr %563, align 4, !tbaa !65
  %566 = getelementptr inbounds %struct.CCGVert, ptr %561, i64 0, i32 3
  %567 = load i16, ptr %566, align 2, !tbaa !78
  %568 = icmp sgt i16 %567, 0
  br i1 %568, label %569, label %617

569:                                              ; preds = %558
  %570 = zext i16 %567 to i64
  %571 = getelementptr inbounds %struct.CCGVert, ptr %561, i64 0, i32 7
  %572 = load ptr, ptr %571, align 8, !tbaa !58
  br label %573

573:                                              ; preds = %569, %596
  %574 = phi i64 [ 0, %569 ], [ %615, %596 ]
  %575 = phi float [ 0.000000e+00, %569 ], [ %614, %596 ]
  %576 = phi float [ 0.000000e+00, %569 ], [ %611, %596 ]
  %577 = phi float [ 0.000000e+00, %569 ], [ %608, %596 ]
  %578 = getelementptr inbounds ptr, ptr %572, i64 %574
  %579 = load ptr, ptr %578, align 8, !tbaa !14
  %580 = getelementptr inbounds %struct.CCGFace, ptr %579, i64 1
  %581 = getelementptr inbounds %struct.CCGFace, ptr %579, i64 0, i32 2
  %582 = load i16, ptr %581, align 8, !tbaa !89
  %583 = icmp sgt i16 %582, 0
  br i1 %583, label %584, label %596

584:                                              ; preds = %573
  %585 = zext i16 %582 to i64
  br label %586

586:                                              ; preds = %591, %584
  %587 = phi i64 [ 0, %584 ], [ %592, %591 ]
  %588 = getelementptr inbounds ptr, ptr %580, i64 %587
  %589 = load ptr, ptr %588, align 8, !tbaa !14
  %590 = icmp eq ptr %589, %561
  br i1 %590, label %594, label %591

591:                                              ; preds = %586
  %592 = add nuw nsw i64 %587, 1
  %593 = icmp eq i64 %592, %585
  br i1 %593, label %596, label %586, !llvm.loop !584

594:                                              ; preds = %586
  %595 = trunc i64 %587 to i32
  br label %596

596:                                              ; preds = %591, %573, %594
  %597 = phi i32 [ -1, %573 ], [ %595, %594 ], [ -1, %591 ]
  %598 = sext i16 %582 to i64
  %599 = getelementptr inbounds ptr, ptr %580, i64 %598
  %600 = getelementptr inbounds ptr, ptr %599, i64 %598
  %601 = mul i32 %70, %597
  %602 = add nsw i32 %601, 1
  %603 = mul nsw i32 %602, %17
  %604 = sext i32 %603 to i64
  %605 = getelementptr inbounds i8, ptr %600, i64 %604
  %606 = getelementptr inbounds i8, ptr %605, i64 %75
  %607 = load float, ptr %606, align 4, !tbaa !65
  %608 = fadd fast float %577, %607
  store float %608, ptr %563, align 4, !tbaa !65
  %609 = getelementptr inbounds float, ptr %606, i64 1
  %610 = load float, ptr %609, align 4, !tbaa !65
  %611 = fadd fast float %576, %610
  store float %611, ptr %565, align 4, !tbaa !65
  %612 = getelementptr inbounds float, ptr %606, i64 2
  %613 = load float, ptr %612, align 4, !tbaa !65
  %614 = fadd fast float %575, %613
  store float %614, ptr %564, align 4, !tbaa !65
  %615 = add nuw nsw i64 %574, 1
  %616 = icmp eq i64 %615, %570
  br i1 %616, label %617, label %573, !llvm.loop !585

617:                                              ; preds = %596, %558
  %618 = phi float [ 0.000000e+00, %558 ], [ %614, %596 ]
  %619 = phi float [ 0.000000e+00, %558 ], [ %611, %596 ]
  %620 = phi float [ 0.000000e+00, %558 ], [ %608, %596 ]
  %621 = icmp eq i16 %567, 0
  br i1 %621, label %622, label %629

622:                                              ; preds = %617
  %623 = getelementptr inbounds i8, ptr %562, i64 %76
  %624 = load float, ptr %623, align 4, !tbaa !65
  store float %624, ptr %563, align 4, !tbaa !65
  %625 = getelementptr inbounds float, ptr %623, i64 1
  %626 = load float, ptr %625, align 4, !tbaa !65
  store float %626, ptr %565, align 4, !tbaa !65
  %627 = getelementptr inbounds float, ptr %623, i64 2
  %628 = load float, ptr %627, align 4, !tbaa !65
  br label %629

629:                                              ; preds = %622, %617
  %630 = phi float [ %628, %622 ], [ %618, %617 ]
  %631 = phi float [ %626, %622 ], [ %619, %617 ]
  %632 = phi float [ %624, %622 ], [ %620, %617 ]
  %633 = fmul fast float %632, %632
  %634 = fmul fast float %631, %631
  %635 = fadd fast float %634, %633
  %636 = fmul fast float %630, %630
  %637 = fadd fast float %635, %636
  %638 = tail call fast float @llvm.sqrt.f32(float %637)
  %639 = fcmp fast ogt float %638, 0x38AA95A5C0000000
  %640 = fdiv fast float 1.000000e+00, %638
  %641 = fmul fast float %640, %632
  %642 = fmul fast float %640, %631
  %643 = fmul fast float %640, %630
  %644 = select i1 %639, float %641, float 0.000000e+00
  %645 = select i1 %639, float %642, float 0.000000e+00
  %646 = select i1 %639, float %643, float 0.000000e+00
  store float %644, ptr %563, align 4
  store float %645, ptr %565, align 4
  store float %646, ptr %564, align 4
  %647 = load i16, ptr %566, align 2, !tbaa !78
  %648 = icmp sgt i16 %647, 0
  br i1 %648, label %649, label %691

649:                                              ; preds = %629
  %650 = zext i16 %647 to i64
  %651 = getelementptr inbounds %struct.CCGVert, ptr %561, i64 0, i32 7
  %652 = load ptr, ptr %651, align 8, !tbaa !58
  br label %653

653:                                              ; preds = %649, %673
  %654 = phi i64 [ 0, %649 ], [ %689, %673 ]
  %655 = getelementptr inbounds ptr, ptr %652, i64 %654
  %656 = load ptr, ptr %655, align 8, !tbaa !14
  %657 = getelementptr inbounds %struct.CCGFace, ptr %656, i64 1
  %658 = getelementptr inbounds %struct.CCGFace, ptr %656, i64 0, i32 2
  %659 = load i16, ptr %658, align 8, !tbaa !89
  %660 = icmp sgt i16 %659, 0
  br i1 %660, label %661, label %673

661:                                              ; preds = %653
  %662 = zext i16 %659 to i64
  br label %663

663:                                              ; preds = %668, %661
  %664 = phi i64 [ 0, %661 ], [ %669, %668 ]
  %665 = getelementptr inbounds ptr, ptr %657, i64 %664
  %666 = load ptr, ptr %665, align 8, !tbaa !14
  %667 = icmp eq ptr %666, %561
  br i1 %667, label %671, label %668

668:                                              ; preds = %663
  %669 = add nuw nsw i64 %664, 1
  %670 = icmp eq i64 %669, %662
  br i1 %670, label %673, label %663, !llvm.loop !584

671:                                              ; preds = %663
  %672 = trunc i64 %664 to i32
  br label %673

673:                                              ; preds = %668, %653, %671
  %674 = phi i32 [ -1, %653 ], [ %672, %671 ], [ -1, %668 ]
  %675 = sext i16 %659 to i64
  %676 = getelementptr inbounds ptr, ptr %657, i64 %675
  %677 = getelementptr inbounds ptr, ptr %676, i64 %675
  %678 = mul i32 %70, %674
  %679 = add nsw i32 %678, 1
  %680 = mul nsw i32 %679, %17
  %681 = sext i32 %680 to i64
  %682 = getelementptr inbounds i8, ptr %677, i64 %681
  %683 = getelementptr inbounds i8, ptr %682, i64 %75
  %684 = load float, ptr %563, align 4, !tbaa !65
  store float %684, ptr %683, align 4, !tbaa !65
  %685 = load float, ptr %565, align 4, !tbaa !65
  %686 = getelementptr inbounds float, ptr %683, i64 1
  store float %685, ptr %686, align 4, !tbaa !65
  %687 = load float, ptr %564, align 4, !tbaa !65
  %688 = getelementptr inbounds float, ptr %683, i64 2
  store float %687, ptr %688, align 4, !tbaa !65
  %689 = add nuw nsw i64 %654, 1
  %690 = icmp eq i64 %689, %650
  br i1 %690, label %691, label %653, !llvm.loop !586

691:                                              ; preds = %673, %629
  %692 = add nuw nsw i64 %559, 1
  %693 = icmp eq i64 %692, %77
  br i1 %693, label %547, label %558, !llvm.loop !587

694:                                              ; preds = %1024, %547
  br i1 %18, label %695, label %1027

695:                                              ; preds = %694
  %696 = add nuw i32 %12, 2
  %697 = mul i32 %13, %696
  %698 = shl i32 %13, %11
  %699 = add nsw i32 %698, %13
  %700 = mul nsw i32 %699, %17
  %701 = add nsw i32 %700, %15
  %702 = sext i32 %701 to i64
  %703 = add nsw i32 %13, %12
  %704 = mul nsw i32 %703, %17
  %705 = add nsw i32 %704, %15
  %706 = sext i32 %705 to i64
  %707 = icmp eq i32 %11, 31
  %708 = sext i32 %15 to i64
  %709 = mul nsw i32 %13, %17
  %710 = add nsw i32 %709, %15
  %711 = sext i32 %710 to i64
  %712 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 3
  %713 = icmp sgt i32 %12, 1
  %714 = tail call i32 @llvm.smax.i32(i32 %12, i32 0)
  %715 = add nuw i32 %714, 1
  %716 = sext i32 %13 to i64
  %717 = sext i32 %17 to i64
  %718 = zext i32 %6 to i64
  %719 = zext i32 %715 to i64
  %720 = zext i32 %12 to i64
  %721 = add nsw i64 %708, 24
  %722 = add nsw i64 %711, 24
  %723 = mul i32 %17, %696
  %724 = mul i32 %723, %13
  %725 = add nsw i64 %720, -1
  %726 = and i64 %725, 1
  %727 = icmp eq i32 %11, 1
  %728 = and i64 %725, -2
  %729 = icmp eq i64 %726, 0
  br label %1045

730:                                              ; preds = %549, %1024
  %731 = phi i64 [ 0, %549 ], [ %1025, %1024 ]
  %732 = getelementptr inbounds ptr, ptr %2, i64 %731
  %733 = load ptr, ptr %732, align 8, !tbaa !14
  %734 = getelementptr inbounds %struct.CCGEdge, ptr %733, i64 0, i32 2
  %735 = load i16, ptr %734, align 8, !tbaa !81
  %736 = icmp eq i16 %735, 0
  br i1 %736, label %1024, label %737

737:                                              ; preds = %730
  %738 = getelementptr inbounds %struct.CCGEdge, ptr %733, i64 0, i32 7
  %739 = load ptr, ptr %738, align 8, !tbaa !52
  %740 = sext i16 %735 to i64
  %741 = add nsw i64 %740, -1
  %742 = getelementptr inbounds ptr, ptr %739, i64 %741
  %743 = load ptr, ptr %742, align 8, !tbaa !14
  %744 = sext i16 %735 to i32
  %745 = add nsw i32 %744, -1
  %746 = icmp sgt i16 %735, 1
  br i1 %746, label %747, label %1024

747:                                              ; preds = %737
  %748 = getelementptr inbounds %struct.CCGFace, ptr %743, i64 0, i32 2
  %749 = load i16, ptr %748, align 8, !tbaa !89
  %750 = icmp sgt i16 %749, 0
  %751 = zext i16 %749 to i64
  %752 = getelementptr inbounds %struct.CCGFace, ptr %743, i64 1
  %753 = getelementptr inbounds ptr, ptr %752, i64 %751
  %754 = getelementptr i8, ptr %733, i64 24
  %755 = sext i16 %749 to i32
  %756 = add nsw i32 %755, -1
  %757 = sext i16 %749 to i64
  %758 = getelementptr inbounds ptr, ptr %752, i64 %757
  %759 = getelementptr inbounds ptr, ptr %758, i64 %757
  %760 = zext i32 %745 to i64
  br label %776

761:                                              ; preds = %900
  br i1 %746, label %762, label %1024

762:                                              ; preds = %761
  %763 = getelementptr inbounds %struct.CCGFace, ptr %743, i64 0, i32 2
  %764 = load i16, ptr %763, align 8, !tbaa !89
  %765 = icmp sgt i16 %764, 0
  %766 = zext i16 %764 to i64
  %767 = getelementptr inbounds %struct.CCGFace, ptr %743, i64 1
  %768 = getelementptr inbounds ptr, ptr %767, i64 %766
  %769 = getelementptr i8, ptr %733, i64 24
  %770 = sext i16 %764 to i32
  %771 = add nsw i32 %770, -1
  %772 = sext i16 %764 to i64
  %773 = getelementptr inbounds ptr, ptr %767, i64 %772
  %774 = getelementptr inbounds ptr, ptr %773, i64 %772
  %775 = zext i32 %745 to i64
  br label %903

776:                                              ; preds = %747, %900
  %777 = phi i64 [ 0, %747 ], [ %901, %900 ]
  %778 = getelementptr inbounds ptr, ptr %739, i64 %777
  %779 = load ptr, ptr %778, align 8, !tbaa !14
  %780 = getelementptr inbounds %struct.CCGFace, ptr %779, i64 0, i32 2
  %781 = load i16, ptr %780, align 8, !tbaa !89
  %782 = icmp sgt i16 %781, 0
  br i1 %782, label %783, label %797

783:                                              ; preds = %776
  %784 = zext i16 %781 to i64
  %785 = getelementptr inbounds %struct.CCGFace, ptr %779, i64 1
  %786 = getelementptr inbounds ptr, ptr %785, i64 %784
  br label %787

787:                                              ; preds = %792, %783
  %788 = phi i64 [ 0, %783 ], [ %793, %792 ]
  %789 = getelementptr inbounds ptr, ptr %786, i64 %788
  %790 = load ptr, ptr %789, align 8, !tbaa !14
  %791 = icmp eq ptr %790, %733
  br i1 %791, label %795, label %792

792:                                              ; preds = %787
  %793 = add nuw nsw i64 %788, 1
  %794 = icmp eq i64 %793, %784
  br i1 %794, label %797, label %787, !llvm.loop !588

795:                                              ; preds = %787
  %796 = trunc i64 %788 to i32
  br label %797

797:                                              ; preds = %792, %776, %795
  %798 = phi i32 [ -1, %776 ], [ %796, %795 ], [ -1, %792 ]
  br i1 %750, label %799, label %809

799:                                              ; preds = %797, %804
  %800 = phi i64 [ %805, %804 ], [ 0, %797 ]
  %801 = getelementptr inbounds ptr, ptr %753, i64 %800
  %802 = load ptr, ptr %801, align 8, !tbaa !14
  %803 = icmp eq ptr %802, %733
  br i1 %803, label %807, label %804

804:                                              ; preds = %799
  %805 = add nuw nsw i64 %800, 1
  %806 = icmp eq i64 %805, %751
  br i1 %806, label %809, label %799, !llvm.loop !588

807:                                              ; preds = %799
  %808 = trunc i64 %800 to i32
  br label %809

809:                                              ; preds = %804, %797, %807
  %810 = phi i32 [ -1, %797 ], [ %808, %807 ], [ -1, %804 ]
  br i1 %550, label %811, label %900

811:                                              ; preds = %809
  %812 = load ptr, ptr %754, align 8, !tbaa !83
  %813 = sext i32 %810 to i64
  %814 = getelementptr inbounds ptr, ptr %752, i64 %813
  %815 = load ptr, ptr %814, align 8, !tbaa !14
  %816 = icmp eq ptr %815, %812
  %817 = add nsw i32 %810, 1
  %818 = add i32 %756, %810
  %819 = getelementptr inbounds %struct.CCGFace, ptr %779, i64 1
  %820 = sext i32 %798 to i64
  %821 = getelementptr inbounds ptr, ptr %819, i64 %820
  %822 = load ptr, ptr %821, align 8, !tbaa !14
  %823 = icmp eq ptr %822, %812
  %824 = add nsw i32 %798, 1
  %825 = sext i16 %781 to i32
  %826 = add nsw i32 %825, -1
  %827 = add i32 %826, %798
  %828 = sext i16 %781 to i64
  %829 = getelementptr inbounds ptr, ptr %819, i64 %828
  %830 = getelementptr inbounds ptr, ptr %829, i64 %828
  br label %831

831:                                              ; preds = %811, %869
  %832 = phi i32 [ 1, %811 ], [ %898, %869 ]
  %833 = sub i32 %551, %832
  %834 = add i32 %833, -2
  %835 = select i1 %816, i32 %832, i32 %834
  %836 = sub nsw i32 %12, %835
  br i1 %552, label %837, label %839

837:                                              ; preds = %831
  %838 = srem i32 %818, %755
  br label %844

839:                                              ; preds = %831
  %840 = icmp slt i32 %836, 0
  br i1 %840, label %841, label %844

841:                                              ; preds = %839
  %842 = srem i32 %817, %755
  %843 = sub nsw i32 0, %836
  br label %844

844:                                              ; preds = %839, %837, %841
  %845 = phi i32 [ %838, %837 ], [ %842, %841 ], [ %810, %839 ]
  %846 = phi i32 [ %836, %837 ], [ %843, %841 ], [ %12, %839 ]
  %847 = phi i32 [ %553, %837 ], [ %12, %841 ], [ %836, %839 ]
  %848 = mul i32 %845, %555
  %849 = add nsw i32 %848, 1
  %850 = mul nsw i32 %849, %17
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds i8, ptr %759, i64 %851
  %853 = mul nsw i32 %847, %13
  %854 = add i32 %846, %13
  %855 = add i32 %854, %853
  %856 = mul nsw i32 %855, %17
  %857 = sext i32 %856 to i64
  %858 = getelementptr inbounds i8, ptr %852, i64 %857
  %859 = getelementptr inbounds i8, ptr %858, i64 %556
  %860 = select i1 %823, i32 %832, i32 %834
  %861 = sub nsw i32 %12, %860
  br i1 %552, label %862, label %864

862:                                              ; preds = %844
  %863 = srem i32 %827, %825
  br label %869

864:                                              ; preds = %844
  %865 = icmp slt i32 %861, 0
  br i1 %865, label %866, label %869

866:                                              ; preds = %864
  %867 = srem i32 %824, %825
  %868 = sub nsw i32 0, %861
  br label %869

869:                                              ; preds = %864, %862, %866
  %870 = phi i32 [ %863, %862 ], [ %867, %866 ], [ %798, %864 ]
  %871 = phi i32 [ %861, %862 ], [ %868, %866 ], [ %12, %864 ]
  %872 = phi i32 [ %553, %862 ], [ %12, %866 ], [ %861, %864 ]
  %873 = mul i32 %870, %555
  %874 = add nsw i32 %873, 1
  %875 = mul nsw i32 %874, %17
  %876 = sext i32 %875 to i64
  %877 = getelementptr inbounds i8, ptr %830, i64 %876
  %878 = mul nsw i32 %872, %13
  %879 = add i32 %871, %13
  %880 = add i32 %879, %878
  %881 = mul nsw i32 %880, %17
  %882 = sext i32 %881 to i64
  %883 = getelementptr inbounds i8, ptr %877, i64 %882
  %884 = getelementptr inbounds i8, ptr %883, i64 %556
  %885 = load float, ptr %884, align 4, !tbaa !65
  %886 = load float, ptr %859, align 4, !tbaa !65
  %887 = fadd fast float %886, %885
  store float %887, ptr %859, align 4, !tbaa !65
  %888 = getelementptr inbounds float, ptr %884, i64 1
  %889 = load float, ptr %888, align 4, !tbaa !65
  %890 = getelementptr inbounds float, ptr %859, i64 1
  %891 = load float, ptr %890, align 4, !tbaa !65
  %892 = fadd fast float %891, %889
  store float %892, ptr %890, align 4, !tbaa !65
  %893 = getelementptr inbounds float, ptr %884, i64 2
  %894 = load float, ptr %893, align 4, !tbaa !65
  %895 = getelementptr inbounds float, ptr %859, i64 2
  %896 = load float, ptr %895, align 4, !tbaa !65
  %897 = fadd fast float %896, %894
  store float %897, ptr %895, align 4, !tbaa !65
  %898 = add nuw nsw i32 %832, 1
  %899 = icmp eq i32 %898, %10
  br i1 %899, label %900, label %831, !llvm.loop !589

900:                                              ; preds = %869, %809
  %901 = add nuw nsw i64 %777, 1
  %902 = icmp eq i64 %901, %760
  br i1 %902, label %761, label %776, !llvm.loop !590

903:                                              ; preds = %762, %1021
  %904 = phi i64 [ 0, %762 ], [ %1022, %1021 ]
  %905 = getelementptr inbounds ptr, ptr %739, i64 %904
  %906 = load ptr, ptr %905, align 8, !tbaa !14
  %907 = getelementptr inbounds %struct.CCGFace, ptr %906, i64 0, i32 2
  %908 = load i16, ptr %907, align 8, !tbaa !89
  %909 = icmp sgt i16 %908, 0
  br i1 %909, label %910, label %924

910:                                              ; preds = %903
  %911 = zext i16 %908 to i64
  %912 = getelementptr inbounds %struct.CCGFace, ptr %906, i64 1
  %913 = getelementptr inbounds ptr, ptr %912, i64 %911
  br label %914

914:                                              ; preds = %919, %910
  %915 = phi i64 [ 0, %910 ], [ %920, %919 ]
  %916 = getelementptr inbounds ptr, ptr %913, i64 %915
  %917 = load ptr, ptr %916, align 8, !tbaa !14
  %918 = icmp eq ptr %917, %733
  br i1 %918, label %922, label %919

919:                                              ; preds = %914
  %920 = add nuw nsw i64 %915, 1
  %921 = icmp eq i64 %920, %911
  br i1 %921, label %924, label %914, !llvm.loop !588

922:                                              ; preds = %914
  %923 = trunc i64 %915 to i32
  br label %924

924:                                              ; preds = %919, %903, %922
  %925 = phi i32 [ -1, %903 ], [ %923, %922 ], [ -1, %919 ]
  br i1 %765, label %926, label %936

926:                                              ; preds = %924, %931
  %927 = phi i64 [ %932, %931 ], [ 0, %924 ]
  %928 = getelementptr inbounds ptr, ptr %768, i64 %927
  %929 = load ptr, ptr %928, align 8, !tbaa !14
  %930 = icmp eq ptr %929, %733
  br i1 %930, label %934, label %931

931:                                              ; preds = %926
  %932 = add nuw nsw i64 %927, 1
  %933 = icmp eq i64 %932, %766
  br i1 %933, label %936, label %926, !llvm.loop !588

934:                                              ; preds = %926
  %935 = trunc i64 %927 to i32
  br label %936

936:                                              ; preds = %931, %924, %934
  %937 = phi i32 [ -1, %924 ], [ %935, %934 ], [ -1, %931 ]
  br i1 %550, label %938, label %1021

938:                                              ; preds = %936
  %939 = load ptr, ptr %769, align 8, !tbaa !83
  %940 = getelementptr inbounds %struct.CCGFace, ptr %906, i64 1
  %941 = sext i32 %925 to i64
  %942 = getelementptr inbounds ptr, ptr %940, i64 %941
  %943 = load ptr, ptr %942, align 8, !tbaa !14
  %944 = icmp eq ptr %943, %939
  %945 = add nsw i32 %925, 1
  %946 = sext i16 %908 to i32
  %947 = add nsw i32 %946, -1
  %948 = add i32 %947, %925
  %949 = sext i16 %908 to i64
  %950 = getelementptr inbounds ptr, ptr %940, i64 %949
  %951 = getelementptr inbounds ptr, ptr %950, i64 %949
  %952 = sext i32 %937 to i64
  %953 = getelementptr inbounds ptr, ptr %767, i64 %952
  %954 = load ptr, ptr %953, align 8, !tbaa !14
  %955 = icmp eq ptr %954, %939
  %956 = add nsw i32 %937, 1
  %957 = add i32 %771, %937
  br label %958

958:                                              ; preds = %938, %996
  %959 = phi i32 [ 1, %938 ], [ %1019, %996 ]
  %960 = sub i32 %551, %959
  %961 = add i32 %960, -2
  %962 = select i1 %944, i32 %959, i32 %961
  %963 = sub nsw i32 %12, %962
  br i1 %552, label %964, label %966

964:                                              ; preds = %958
  %965 = srem i32 %948, %946
  br label %971

966:                                              ; preds = %958
  %967 = icmp slt i32 %963, 0
  br i1 %967, label %968, label %971

968:                                              ; preds = %966
  %969 = srem i32 %945, %946
  %970 = sub nsw i32 0, %963
  br label %971

971:                                              ; preds = %966, %964, %968
  %972 = phi i32 [ %965, %964 ], [ %969, %968 ], [ %925, %966 ]
  %973 = phi i32 [ %963, %964 ], [ %970, %968 ], [ %12, %966 ]
  %974 = phi i32 [ %553, %964 ], [ %12, %968 ], [ %963, %966 ]
  %975 = mul i32 %972, %555
  %976 = add nsw i32 %975, 1
  %977 = mul nsw i32 %976, %17
  %978 = sext i32 %977 to i64
  %979 = getelementptr inbounds i8, ptr %951, i64 %978
  %980 = mul nsw i32 %974, %13
  %981 = add i32 %973, %13
  %982 = add i32 %981, %980
  %983 = mul nsw i32 %982, %17
  %984 = sext i32 %983 to i64
  %985 = getelementptr inbounds i8, ptr %979, i64 %984
  %986 = getelementptr inbounds i8, ptr %985, i64 %556
  %987 = select i1 %955, i32 %959, i32 %961
  %988 = sub nsw i32 %12, %987
  br i1 %552, label %989, label %991

989:                                              ; preds = %971
  %990 = srem i32 %957, %770
  br label %996

991:                                              ; preds = %971
  %992 = icmp slt i32 %988, 0
  br i1 %992, label %993, label %996

993:                                              ; preds = %991
  %994 = srem i32 %956, %770
  %995 = sub nsw i32 0, %988
  br label %996

996:                                              ; preds = %991, %989, %993
  %997 = phi i32 [ %990, %989 ], [ %994, %993 ], [ %937, %991 ]
  %998 = phi i32 [ %988, %989 ], [ %995, %993 ], [ %12, %991 ]
  %999 = phi i32 [ %553, %989 ], [ %12, %993 ], [ %988, %991 ]
  %1000 = mul i32 %997, %555
  %1001 = add nsw i32 %1000, 1
  %1002 = mul nsw i32 %1001, %17
  %1003 = sext i32 %1002 to i64
  %1004 = getelementptr inbounds i8, ptr %774, i64 %1003
  %1005 = mul nsw i32 %999, %13
  %1006 = add i32 %998, %13
  %1007 = add i32 %1006, %1005
  %1008 = mul nsw i32 %1007, %17
  %1009 = sext i32 %1008 to i64
  %1010 = getelementptr inbounds i8, ptr %1004, i64 %1009
  %1011 = getelementptr inbounds i8, ptr %1010, i64 %556
  %1012 = load float, ptr %1011, align 4, !tbaa !65
  store float %1012, ptr %986, align 4, !tbaa !65
  %1013 = getelementptr inbounds float, ptr %1011, i64 1
  %1014 = load float, ptr %1013, align 4, !tbaa !65
  %1015 = getelementptr inbounds float, ptr %986, i64 1
  store float %1014, ptr %1015, align 4, !tbaa !65
  %1016 = getelementptr inbounds float, ptr %1011, i64 2
  %1017 = load float, ptr %1016, align 4, !tbaa !65
  %1018 = getelementptr inbounds float, ptr %986, i64 2
  store float %1017, ptr %1018, align 4, !tbaa !65
  %1019 = add nuw nsw i32 %959, 1
  %1020 = icmp eq i32 %1019, %10
  br i1 %1020, label %1021, label %958, !llvm.loop !591

1021:                                             ; preds = %996, %936
  %1022 = add nuw nsw i64 %904, 1
  %1023 = icmp eq i64 %1022, %775
  br i1 %1023, label %1024, label %903, !llvm.loop !592

1024:                                             ; preds = %1021, %737, %761, %730
  %1025 = add nuw nsw i64 %731, 1
  %1026 = icmp eq i64 %1025, %557
  br i1 %1026, label %694, label %730, !llvm.loop !593

1027:                                             ; preds = %1281, %694
  br i1 %548, label %1028, label %1408

1028:                                             ; preds = %1027
  %1029 = icmp eq i32 %9, 31
  %1030 = add i32 %11, %10
  %1031 = shl nsw i32 %13, 1
  %1032 = add i32 %1031, -2
  %1033 = icmp eq i32 %11, 31
  %1034 = sub nsw i32 0, %12
  %1035 = add nuw i32 %12, 2
  %1036 = mul i32 %13, %1035
  %1037 = sext i32 %15 to i64
  %1038 = sext i32 %1030 to i64
  %1039 = sext i32 %17 to i64
  %1040 = tail call i32 @llvm.smax.i32(i32 %10, i32 0)
  %1041 = add nuw i32 %1040, 1
  %1042 = zext i32 %5 to i64
  %1043 = zext i32 %1041 to i64
  %1044 = zext i32 %1041 to i64
  br label %1284

1045:                                             ; preds = %695, %1281
  %1046 = phi i64 [ 0, %695 ], [ %1282, %1281 ]
  %1047 = getelementptr inbounds ptr, ptr %3, i64 %1046
  %1048 = load ptr, ptr %1047, align 8, !tbaa !14
  %1049 = ptrtoint ptr %1048 to i64
  %1050 = getelementptr inbounds %struct.CCGFace, ptr %1048, i64 0, i32 2
  %1051 = load i16, ptr %1050, align 8, !tbaa !89
  %1052 = icmp sgt i16 %1051, 0
  br i1 %1052, label %1053, label %1281

1053:                                             ; preds = %1045
  %1054 = zext i16 %1051 to i64
  %1055 = getelementptr inbounds %struct.CCGFace, ptr %1048, i64 1
  %1056 = zext i16 %1051 to i64
  %1057 = getelementptr inbounds ptr, ptr %1055, i64 %1056
  %1058 = getelementptr inbounds ptr, ptr %1057, i64 %1056
  %1059 = getelementptr i8, ptr %1058, i64 %702
  %1060 = getelementptr i8, ptr %1058, i64 %706
  br label %1066

1061:                                             ; preds = %1066
  br i1 %1052, label %1062, label %1281

1062:                                             ; preds = %1061
  %1063 = getelementptr inbounds %struct.CCGFace, ptr %1048, i64 1
  %1064 = add i64 %721, %1049
  %1065 = add i64 %722, %1049
  br label %1091

1066:                                             ; preds = %1053, %1066
  %1067 = phi i64 [ 0, %1053 ], [ %1068, %1066 ]
  %1068 = add nuw nsw i64 %1067, 1
  %1069 = icmp eq i64 %1068, %1054
  %1070 = trunc i64 %1068 to i32
  %1071 = select i1 %1069, i32 0, i32 %1070
  %1072 = mul i32 %697, %1071
  %1073 = add nsw i32 %1072, 1
  %1074 = mul nsw i32 %1073, %17
  %1075 = sext i32 %1074 to i64
  %1076 = getelementptr i8, ptr %1059, i64 %1075
  %1077 = trunc i64 %1067 to i32
  %1078 = mul i32 %697, %1077
  %1079 = add nsw i32 %1078, 1
  %1080 = mul nsw i32 %1079, %17
  %1081 = sext i32 %1080 to i64
  %1082 = getelementptr i8, ptr %1060, i64 %1081
  %1083 = load float, ptr %1082, align 4, !tbaa !65
  store float %1083, ptr %1076, align 4, !tbaa !65
  %1084 = getelementptr inbounds float, ptr %1082, i64 1
  %1085 = load float, ptr %1084, align 4, !tbaa !65
  %1086 = getelementptr inbounds float, ptr %1076, i64 1
  store float %1085, ptr %1086, align 4, !tbaa !65
  %1087 = getelementptr inbounds float, ptr %1082, i64 2
  %1088 = load float, ptr %1087, align 4, !tbaa !65
  %1089 = getelementptr inbounds float, ptr %1076, i64 2
  store float %1088, ptr %1089, align 4, !tbaa !65
  %1090 = icmp eq i64 %1068, %1054
  br i1 %1090, label %1061, label %1066, !llvm.loop !594

1091:                                             ; preds = %1062, %1277
  %1092 = phi i16 [ %1051, %1062 ], [ %1147, %1277 ]
  %1093 = phi i64 [ 0, %1062 ], [ %1278, %1277 ]
  %1094 = trunc i64 %1093 to i32
  %1095 = mul i32 %724, %1094
  %1096 = add i32 %1095, %17
  %1097 = sext i32 %1096 to i64
  %1098 = trunc i64 %1093 to i32
  %1099 = mul i32 %697, %1098
  %1100 = add nsw i32 %1099, 1
  %1101 = mul nsw i32 %1100, %17
  %1102 = sext i32 %1101 to i64
  br i1 %707, label %1146, label %1103

1103:                                             ; preds = %1091, %1142
  %1104 = phi i32 [ %1105, %1142 ], [ 0, %1091 ]
  %1105 = add nuw i32 %1104, 1
  %1106 = mul i32 %1105, %13
  br label %1107

1107:                                             ; preds = %1103, %1107
  %1108 = phi i64 [ 0, %1103 ], [ %1140, %1107 ]
  %1109 = load i16, ptr %1050, align 8, !tbaa !89
  %1110 = sext i16 %1109 to i64
  %1111 = getelementptr inbounds ptr, ptr %1063, i64 %1110
  %1112 = getelementptr inbounds ptr, ptr %1111, i64 %1110
  %1113 = getelementptr inbounds i8, ptr %1112, i64 %1102
  %1114 = trunc i64 %1108 to i32
  %1115 = add i32 %1106, %1114
  %1116 = mul nsw i32 %1115, %17
  %1117 = add nsw i32 %1116, %15
  %1118 = sext i32 %1117 to i64
  %1119 = getelementptr inbounds i8, ptr %1113, i64 %1118
  %1120 = getelementptr inbounds float, ptr %1119, i64 2
  %1121 = load float, ptr %1120, align 4, !tbaa !65
  %1122 = fmul fast float %1121, %1121
  %1123 = load <2 x float>, ptr %1119, align 4, !tbaa !65
  %1124 = fmul fast <2 x float> %1123, %1123
  %1125 = shufflevector <2 x float> %1124, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %1126 = fadd fast <2 x float> %1125, %1124
  %1127 = extractelement <2 x float> %1126, i64 0
  %1128 = fadd fast float %1127, %1122
  %1129 = tail call fast float @llvm.sqrt.f32(float %1128)
  %1130 = fcmp fast ogt float %1129, 0x38AA95A5C0000000
  %1131 = fdiv fast float 1.000000e+00, %1129
  %1132 = insertelement <2 x float> poison, float %1131, i64 0
  %1133 = shufflevector <2 x float> %1132, <2 x float> poison, <2 x i32> zeroinitializer
  %1134 = fmul fast <2 x float> %1133, %1123
  %1135 = fmul fast float %1131, %1121
  %1136 = insertelement <2 x i1> poison, i1 %1130, i64 0
  %1137 = shufflevector <2 x i1> %1136, <2 x i1> poison, <2 x i32> zeroinitializer
  %1138 = select <2 x i1> %1137, <2 x float> %1134, <2 x float> zeroinitializer
  %1139 = select i1 %1130, float %1135, float 0.000000e+00
  store <2 x float> %1138, ptr %1119, align 4
  store float %1139, ptr %1120, align 4
  %1140 = add nuw nsw i64 %1108, 1
  %1141 = icmp eq i64 %1140, %719
  br i1 %1141, label %1142, label %1107, !llvm.loop !595

1142:                                             ; preds = %1107
  %1143 = icmp eq i32 %1104, %714
  br i1 %1143, label %1144, label %1103, !llvm.loop !596

1144:                                             ; preds = %1142
  %1145 = load i16, ptr %1050, align 8, !tbaa !89
  br label %1146

1146:                                             ; preds = %1091, %1144
  %1147 = phi i16 [ %1145, %1144 ], [ %1092, %1091 ]
  %1148 = sext i16 %1147 to i64
  %1149 = getelementptr inbounds ptr, ptr %1063, i64 %1148
  %1150 = getelementptr inbounds ptr, ptr %1149, i64 %1148
  %1151 = getelementptr i8, ptr %1150, i64 %708
  %1152 = getelementptr inbounds i8, ptr %1150, i64 %1102
  %1153 = getelementptr i8, ptr %1152, i64 %711
  %1154 = load i32, ptr %712, align 4, !tbaa !74
  %1155 = icmp sgt i32 %1154, 0
  br i1 %1155, label %1156, label %1223

1156:                                             ; preds = %1146
  %1157 = zext i32 %1154 to i64
  %1158 = icmp ult i32 %1154, 32
  br i1 %1158, label %1186, label %1159

1159:                                             ; preds = %1156
  %1160 = shl nsw i64 %1148, 4
  %1161 = add i64 %1064, %1160
  %1162 = add i64 %1065, %1160
  %1163 = add i64 %1162, %1097
  %1164 = sub i64 %1161, %1163
  %1165 = icmp ult i64 %1164, 128
  br i1 %1165, label %1186, label %1166

1166:                                             ; preds = %1159
  %1167 = and i64 %1157, 4294967264
  br label %1168

1168:                                             ; preds = %1168, %1166
  %1169 = phi i64 [ 0, %1166 ], [ %1182, %1168 ]
  %1170 = getelementptr inbounds float, ptr %1153, i64 %1169
  %1171 = load <8 x float>, ptr %1170, align 4, !tbaa !65
  %1172 = getelementptr inbounds float, ptr %1170, i64 8
  %1173 = load <8 x float>, ptr %1172, align 4, !tbaa !65
  %1174 = getelementptr inbounds float, ptr %1170, i64 16
  %1175 = load <8 x float>, ptr %1174, align 4, !tbaa !65
  %1176 = getelementptr inbounds float, ptr %1170, i64 24
  %1177 = load <8 x float>, ptr %1176, align 4, !tbaa !65
  %1178 = getelementptr inbounds float, ptr %1151, i64 %1169
  store <8 x float> %1171, ptr %1178, align 4, !tbaa !65
  %1179 = getelementptr inbounds float, ptr %1178, i64 8
  store <8 x float> %1173, ptr %1179, align 4, !tbaa !65
  %1180 = getelementptr inbounds float, ptr %1178, i64 16
  store <8 x float> %1175, ptr %1180, align 4, !tbaa !65
  %1181 = getelementptr inbounds float, ptr %1178, i64 24
  store <8 x float> %1177, ptr %1181, align 4, !tbaa !65
  %1182 = add nuw i64 %1169, 32
  %1183 = icmp eq i64 %1182, %1167
  br i1 %1183, label %1184, label %1168, !llvm.loop !597

1184:                                             ; preds = %1168
  %1185 = icmp eq i64 %1167, %1157
  br i1 %1185, label %1223, label %1186

1186:                                             ; preds = %1159, %1156, %1184
  %1187 = phi i64 [ 0, %1159 ], [ 0, %1156 ], [ %1167, %1184 ]
  %1188 = xor i64 %1187, -1
  %1189 = add nsw i64 %1188, %1157
  %1190 = and i64 %1157, 3
  %1191 = icmp eq i64 %1190, 0
  br i1 %1191, label %1201, label %1192

1192:                                             ; preds = %1186, %1192
  %1193 = phi i64 [ %1198, %1192 ], [ %1187, %1186 ]
  %1194 = phi i64 [ %1199, %1192 ], [ 0, %1186 ]
  %1195 = getelementptr inbounds float, ptr %1153, i64 %1193
  %1196 = load float, ptr %1195, align 4, !tbaa !65
  %1197 = getelementptr inbounds float, ptr %1151, i64 %1193
  store float %1196, ptr %1197, align 4, !tbaa !65
  %1198 = add nuw nsw i64 %1193, 1
  %1199 = add i64 %1194, 1
  %1200 = icmp eq i64 %1199, %1190
  br i1 %1200, label %1201, label %1192, !llvm.loop !598

1201:                                             ; preds = %1192, %1186
  %1202 = phi i64 [ %1187, %1186 ], [ %1198, %1192 ]
  %1203 = icmp ult i64 %1189, 3
  br i1 %1203, label %1223, label %1204

1204:                                             ; preds = %1201, %1204
  %1205 = phi i64 [ %1221, %1204 ], [ %1202, %1201 ]
  %1206 = getelementptr inbounds float, ptr %1153, i64 %1205
  %1207 = load float, ptr %1206, align 4, !tbaa !65
  %1208 = getelementptr inbounds float, ptr %1151, i64 %1205
  store float %1207, ptr %1208, align 4, !tbaa !65
  %1209 = add nuw nsw i64 %1205, 1
  %1210 = getelementptr inbounds float, ptr %1153, i64 %1209
  %1211 = load float, ptr %1210, align 4, !tbaa !65
  %1212 = getelementptr inbounds float, ptr %1151, i64 %1209
  store float %1211, ptr %1212, align 4, !tbaa !65
  %1213 = add nuw nsw i64 %1205, 2
  %1214 = getelementptr inbounds float, ptr %1153, i64 %1213
  %1215 = load float, ptr %1214, align 4, !tbaa !65
  %1216 = getelementptr inbounds float, ptr %1151, i64 %1213
  store float %1215, ptr %1216, align 4, !tbaa !65
  %1217 = add nuw nsw i64 %1205, 3
  %1218 = getelementptr inbounds float, ptr %1153, i64 %1217
  %1219 = load float, ptr %1218, align 4, !tbaa !65
  %1220 = getelementptr inbounds float, ptr %1151, i64 %1217
  store float %1219, ptr %1220, align 4, !tbaa !65
  %1221 = add nuw nsw i64 %1205, 4
  %1222 = icmp eq i64 %1221, %1157
  br i1 %1222, label %1223, label %1204, !llvm.loop !599

1223:                                             ; preds = %1201, %1204, %1184, %1146
  br i1 %713, label %1224, label %1277

1224:                                             ; preds = %1223
  br i1 %727, label %1260, label %1225

1225:                                             ; preds = %1224, %1225
  %1226 = phi i64 [ %1257, %1225 ], [ 1, %1224 ]
  %1227 = phi i64 [ %1258, %1225 ], [ 0, %1224 ]
  %1228 = mul nsw i64 %1226, %717
  %1229 = add nsw i64 %1228, %708
  %1230 = getelementptr inbounds i8, ptr %1152, i64 %1229
  %1231 = add nsw i64 %1226, %716
  %1232 = mul nsw i64 %1231, %717
  %1233 = add nsw i64 %1232, %708
  %1234 = getelementptr inbounds i8, ptr %1152, i64 %1233
  %1235 = load float, ptr %1234, align 4, !tbaa !65
  store float %1235, ptr %1230, align 4, !tbaa !65
  %1236 = getelementptr inbounds float, ptr %1234, i64 1
  %1237 = load float, ptr %1236, align 4, !tbaa !65
  %1238 = getelementptr inbounds float, ptr %1230, i64 1
  store float %1237, ptr %1238, align 4, !tbaa !65
  %1239 = getelementptr inbounds float, ptr %1234, i64 2
  %1240 = load float, ptr %1239, align 4, !tbaa !65
  %1241 = getelementptr inbounds float, ptr %1230, i64 2
  store float %1240, ptr %1241, align 4, !tbaa !65
  %1242 = add nuw nsw i64 %1226, 1
  %1243 = mul nsw i64 %1242, %717
  %1244 = add nsw i64 %1243, %708
  %1245 = getelementptr inbounds i8, ptr %1152, i64 %1244
  %1246 = add nsw i64 %1242, %716
  %1247 = mul nsw i64 %1246, %717
  %1248 = add nsw i64 %1247, %708
  %1249 = getelementptr inbounds i8, ptr %1152, i64 %1248
  %1250 = load float, ptr %1249, align 4, !tbaa !65
  store float %1250, ptr %1245, align 4, !tbaa !65
  %1251 = getelementptr inbounds float, ptr %1249, i64 1
  %1252 = load float, ptr %1251, align 4, !tbaa !65
  %1253 = getelementptr inbounds float, ptr %1245, i64 1
  store float %1252, ptr %1253, align 4, !tbaa !65
  %1254 = getelementptr inbounds float, ptr %1249, i64 2
  %1255 = load float, ptr %1254, align 4, !tbaa !65
  %1256 = getelementptr inbounds float, ptr %1245, i64 2
  store float %1255, ptr %1256, align 4, !tbaa !65
  %1257 = add nuw nsw i64 %1226, 2
  %1258 = add i64 %1227, 2
  %1259 = icmp eq i64 %1258, %728
  br i1 %1259, label %1260, label %1225, !llvm.loop !600

1260:                                             ; preds = %1225, %1224
  %1261 = phi i64 [ 1, %1224 ], [ %1257, %1225 ]
  br i1 %729, label %1277, label %1262

1262:                                             ; preds = %1260
  %1263 = mul nsw i64 %1261, %717
  %1264 = add nsw i64 %1263, %708
  %1265 = getelementptr inbounds i8, ptr %1152, i64 %1264
  %1266 = add nsw i64 %1261, %716
  %1267 = mul nsw i64 %1266, %717
  %1268 = add nsw i64 %1267, %708
  %1269 = getelementptr inbounds i8, ptr %1152, i64 %1268
  %1270 = load float, ptr %1269, align 4, !tbaa !65
  store float %1270, ptr %1265, align 4, !tbaa !65
  %1271 = getelementptr inbounds float, ptr %1269, i64 1
  %1272 = load float, ptr %1271, align 4, !tbaa !65
  %1273 = getelementptr inbounds float, ptr %1265, i64 1
  store float %1272, ptr %1273, align 4, !tbaa !65
  %1274 = getelementptr inbounds float, ptr %1269, i64 2
  %1275 = load float, ptr %1274, align 4, !tbaa !65
  %1276 = getelementptr inbounds float, ptr %1265, i64 2
  store float %1275, ptr %1276, align 4, !tbaa !65
  br label %1277

1277:                                             ; preds = %1262, %1260, %1223
  %1278 = add nuw nsw i64 %1093, 1
  %1279 = sext i16 %1147 to i64
  %1280 = icmp slt i64 %1278, %1279
  br i1 %1280, label %1091, label %1281, !llvm.loop !601

1281:                                             ; preds = %1277, %1045, %1061
  %1282 = add nuw nsw i64 %1046, 1
  %1283 = icmp eq i64 %1282, %718
  br i1 %1283, label %1027, label %1045, !llvm.loop !602

1284:                                             ; preds = %1028, %1405
  %1285 = phi i64 [ 0, %1028 ], [ %1406, %1405 ]
  %1286 = getelementptr inbounds ptr, ptr %2, i64 %1285
  %1287 = load ptr, ptr %1286, align 8, !tbaa !14
  %1288 = getelementptr inbounds %struct.CCGEdge, ptr %1287, i64 0, i32 2
  %1289 = load i16, ptr %1288, align 8, !tbaa !81
  %1290 = icmp eq i16 %1289, 0
  br i1 %1290, label %1291, label %1294

1291:                                             ; preds = %1284
  br i1 %1029, label %1405, label %1292

1292:                                             ; preds = %1291
  %1293 = getelementptr inbounds %struct.CCGEdge, ptr %1287, i64 1
  br label %1375

1294:                                             ; preds = %1284
  %1295 = getelementptr inbounds %struct.CCGEdge, ptr %1287, i64 0, i32 7
  %1296 = load ptr, ptr %1295, align 8, !tbaa !52
  %1297 = load ptr, ptr %1296, align 8, !tbaa !14
  %1298 = getelementptr inbounds %struct.CCGFace, ptr %1297, i64 0, i32 2
  %1299 = load i16, ptr %1298, align 8, !tbaa !89
  %1300 = icmp sgt i16 %1299, 0
  br i1 %1300, label %1301, label %1315

1301:                                             ; preds = %1294
  %1302 = zext i16 %1299 to i64
  %1303 = getelementptr inbounds %struct.CCGFace, ptr %1297, i64 1
  %1304 = getelementptr inbounds ptr, ptr %1303, i64 %1302
  br label %1305

1305:                                             ; preds = %1310, %1301
  %1306 = phi i64 [ 0, %1301 ], [ %1311, %1310 ]
  %1307 = getelementptr inbounds ptr, ptr %1304, i64 %1306
  %1308 = load ptr, ptr %1307, align 8, !tbaa !14
  %1309 = icmp eq ptr %1308, %1287
  br i1 %1309, label %1313, label %1310

1310:                                             ; preds = %1305
  %1311 = add nuw nsw i64 %1306, 1
  %1312 = icmp eq i64 %1311, %1302
  br i1 %1312, label %1315, label %1305, !llvm.loop !588

1313:                                             ; preds = %1305
  %1314 = trunc i64 %1306 to i32
  br label %1315

1315:                                             ; preds = %1310, %1294, %1313
  %1316 = phi i32 [ -1, %1294 ], [ %1314, %1313 ], [ -1, %1310 ]
  br i1 %1029, label %1405, label %1317

1317:                                             ; preds = %1315
  %1318 = getelementptr inbounds %struct.CCGEdge, ptr %1287, i64 1
  %1319 = getelementptr i8, ptr %1287, i64 24
  %1320 = load ptr, ptr %1319, align 8, !tbaa !83
  %1321 = getelementptr inbounds %struct.CCGFace, ptr %1297, i64 1
  %1322 = sext i32 %1316 to i64
  %1323 = getelementptr inbounds ptr, ptr %1321, i64 %1322
  %1324 = load ptr, ptr %1323, align 8, !tbaa !14
  %1325 = icmp eq ptr %1324, %1320
  %1326 = add nsw i32 %1316, 1
  %1327 = sext i16 %1299 to i32
  %1328 = add nsw i32 %1327, -1
  %1329 = add i32 %1328, %1316
  %1330 = sext i16 %1299 to i64
  %1331 = getelementptr inbounds ptr, ptr %1321, i64 %1330
  %1332 = getelementptr inbounds ptr, ptr %1331, i64 %1330
  br label %1333

1333:                                             ; preds = %1317, %1350
  %1334 = phi i64 [ 0, %1317 ], [ %1373, %1350 ]
  %1335 = add nsw i64 %1334, %1038
  %1336 = mul nsw i64 %1335, %1039
  %1337 = add nsw i64 %1336, %1037
  %1338 = getelementptr inbounds i8, ptr %1318, i64 %1337
  %1339 = trunc i64 %1334 to i32
  %1340 = sub i32 %1032, %1339
  %1341 = select i1 %1325, i32 %1339, i32 %1340
  %1342 = sub nsw i32 %12, %1341
  br i1 %1033, label %1343, label %1345

1343:                                             ; preds = %1333
  %1344 = srem i32 %1329, %1327
  br label %1350

1345:                                             ; preds = %1333
  %1346 = icmp slt i32 %1342, 0
  br i1 %1346, label %1347, label %1350

1347:                                             ; preds = %1345
  %1348 = srem i32 %1326, %1327
  %1349 = sub nsw i32 0, %1342
  br label %1350

1350:                                             ; preds = %1345, %1343, %1347
  %1351 = phi i32 [ %1344, %1343 ], [ %1348, %1347 ], [ %1316, %1345 ]
  %1352 = phi i32 [ %1342, %1343 ], [ %1349, %1347 ], [ %12, %1345 ]
  %1353 = phi i32 [ %1034, %1343 ], [ %12, %1347 ], [ %1342, %1345 ]
  %1354 = mul i32 %1036, %1351
  %1355 = add nsw i32 %1354, 1
  %1356 = mul nsw i32 %1355, %17
  %1357 = sext i32 %1356 to i64
  %1358 = getelementptr inbounds i8, ptr %1332, i64 %1357
  %1359 = mul nsw i32 %1353, %13
  %1360 = add i32 %1352, %13
  %1361 = add i32 %1360, %1359
  %1362 = mul nsw i32 %1361, %17
  %1363 = sext i32 %1362 to i64
  %1364 = getelementptr inbounds i8, ptr %1358, i64 %1363
  %1365 = getelementptr inbounds i8, ptr %1364, i64 %1037
  %1366 = load float, ptr %1365, align 4, !tbaa !65
  store float %1366, ptr %1338, align 4, !tbaa !65
  %1367 = getelementptr inbounds float, ptr %1365, i64 1
  %1368 = load float, ptr %1367, align 4, !tbaa !65
  %1369 = getelementptr inbounds float, ptr %1338, i64 1
  store float %1368, ptr %1369, align 4, !tbaa !65
  %1370 = getelementptr inbounds float, ptr %1365, i64 2
  %1371 = load float, ptr %1370, align 4, !tbaa !65
  %1372 = getelementptr inbounds float, ptr %1338, i64 2
  store float %1371, ptr %1372, align 4, !tbaa !65
  %1373 = add nuw nsw i64 %1334, 1
  %1374 = icmp eq i64 %1373, %1043
  br i1 %1374, label %1405, label %1333, !llvm.loop !603

1375:                                             ; preds = %1292, %1375
  %1376 = phi i64 [ 0, %1292 ], [ %1403, %1375 ]
  %1377 = add nsw i64 %1376, %1038
  %1378 = mul nsw i64 %1377, %1039
  %1379 = add nsw i64 %1378, %1037
  %1380 = getelementptr inbounds i8, ptr %1293, i64 %1379
  %1381 = getelementptr inbounds i8, ptr %1293, i64 %1378
  %1382 = load float, ptr %1381, align 4, !tbaa !65
  store float %1382, ptr %1380, align 4, !tbaa !65
  %1383 = getelementptr inbounds float, ptr %1381, i64 1
  %1384 = load float, ptr %1383, align 4, !tbaa !65
  %1385 = getelementptr inbounds float, ptr %1380, i64 1
  store float %1384, ptr %1385, align 4, !tbaa !65
  %1386 = getelementptr inbounds float, ptr %1381, i64 2
  %1387 = load float, ptr %1386, align 4, !tbaa !65
  %1388 = getelementptr inbounds float, ptr %1380, i64 2
  %1389 = fmul fast float %1382, %1382
  %1390 = fmul fast float %1384, %1384
  %1391 = fadd fast float %1390, %1389
  %1392 = fmul fast float %1387, %1387
  %1393 = fadd fast float %1391, %1392
  %1394 = tail call fast float @llvm.sqrt.f32(float %1393)
  %1395 = fcmp fast ogt float %1394, 0x38AA95A5C0000000
  %1396 = fdiv fast float 1.000000e+00, %1394
  %1397 = fmul fast float %1396, %1382
  %1398 = fmul fast float %1396, %1384
  %1399 = fmul fast float %1396, %1387
  %1400 = select i1 %1395, float %1397, float 0.000000e+00
  %1401 = select i1 %1395, float %1398, float 0.000000e+00
  %1402 = select i1 %1395, float %1399, float 0.000000e+00
  store float %1400, ptr %1380, align 4
  store float %1401, ptr %1385, align 4
  store float %1402, ptr %1388, align 4
  %1403 = add nuw nsw i64 %1376, 1
  %1404 = icmp eq i64 %1403, %1044
  br i1 %1404, label %1405, label %1375, !llvm.loop !604

1405:                                             ; preds = %1350, %1375, %1315, %1291
  %1406 = add nuw nsw i64 %1285, 1
  %1407 = icmp eq i64 %1406, %1042
  br i1 %1407, label %1408, label %1284, !llvm.loop !605

1408:                                             ; preds = %1405, %1027
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @ccgSubSurf_updateLevels(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #1 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #23
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #23
  %9 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %10 = load i32, ptr %9, align 8, !tbaa !32
  %11 = icmp eq ptr %2, null
  br i1 %11, label %12, label %53

12:                                               ; preds = %4
  %13 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !14
  %14 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !29
  %16 = getelementptr inbounds %struct._EHash, ptr %15, i64 0, i32 1
  %17 = load i32, ptr %16, align 8, !tbaa !22
  %18 = sext i32 %17 to i64
  %19 = shl nsw i64 %18, 3
  %20 = tail call ptr %13(i64 noundef %19, ptr noundef nonnull @.str.5) #23
  %21 = load ptr, ptr %14, align 8, !tbaa !29
  %22 = getelementptr inbounds %struct._EHash, ptr %21, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !24
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %53

25:                                               ; preds = %12, %45
  %26 = phi ptr [ %46, %45 ], [ %21, %12 ]
  %27 = phi i64 [ %48, %45 ], [ 0, %12 ]
  %28 = phi i32 [ %47, %45 ], [ 0, %12 ]
  %29 = load ptr, ptr %26, align 8, !tbaa !26
  %30 = getelementptr inbounds ptr, ptr %29, i64 %27
  %31 = load ptr, ptr %30, align 8, !tbaa !14
  %32 = icmp eq ptr %31, null
  br i1 %32, label %45, label %33

33:                                               ; preds = %25
  %34 = sext i32 %28 to i64
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ %34, %33 ], [ %38, %35 ]
  %37 = phi ptr [ %31, %33 ], [ %40, %35 ]
  %38 = add i64 %36, 1
  %39 = getelementptr inbounds ptr, ptr %20, i64 %36
  store ptr %37, ptr %39, align 8, !tbaa !14
  %40 = load ptr, ptr %37, align 8, !tbaa !14
  %41 = icmp eq ptr %40, null
  br i1 %41, label %42, label %35, !llvm.loop !406

42:                                               ; preds = %35
  %43 = trunc i64 %38 to i32
  %44 = load ptr, ptr %14, align 8, !tbaa !29
  br label %45

45:                                               ; preds = %42, %25
  %46 = phi ptr [ %26, %25 ], [ %44, %42 ]
  %47 = phi i32 [ %28, %25 ], [ %43, %42 ]
  %48 = add nuw nsw i64 %27, 1
  %49 = getelementptr inbounds %struct._EHash, ptr %46, i64 0, i32 2
  %50 = load i32, ptr %49, align 4, !tbaa !24
  %51 = sext i32 %50 to i64
  %52 = icmp slt i64 %48, %51
  br i1 %52, label %25, label %53, !llvm.loop !407

53:                                               ; preds = %45, %12, %4
  %54 = phi i32 [ %3, %4 ], [ 0, %12 ], [ %47, %45 ]
  %55 = phi ptr [ %2, %4 ], [ %20, %12 ], [ %20, %45 ]
  call fastcc void @ccgSubSurf__effectedFaceNeighbours(ptr noundef %0, ptr noundef %55, i32 noundef %54, ptr noundef nonnull %5, ptr noundef nonnull %7, ptr noundef nonnull %6, ptr noundef nonnull %8)
  %56 = icmp sgt i32 %10, %1
  %57 = load i32, ptr %7, align 4, !tbaa !31
  br i1 %56, label %58, label %62

58:                                               ; preds = %53
  %59 = load ptr, ptr %5, align 8, !tbaa !14
  %60 = load ptr, ptr %6, align 8, !tbaa !14
  %61 = load i32, ptr %8, align 4, !tbaa !31
  br label %71

62:                                               ; preds = %71, %53
  %63 = icmp sgt i32 %57, 0
  br i1 %63, label %64, label %87

64:                                               ; preds = %62
  %65 = load ptr, ptr %5, align 8, !tbaa !14
  %66 = zext i32 %57 to i64
  %67 = and i64 %66, 7
  %68 = icmp ult i32 %57, 8
  br i1 %68, label %75, label %69

69:                                               ; preds = %64
  %70 = and i64 %66, 4294967288
  br label %97

71:                                               ; preds = %58, %71
  %72 = phi i32 [ %1, %58 ], [ %73, %71 ]
  tail call fastcc void @ccgSubSurf__calcSubdivLevel(ptr noundef %0, ptr noundef %59, ptr noundef %60, ptr noundef %55, i32 noundef %57, i32 noundef %61, i32 noundef %54, i32 noundef %72)
  %73 = add i32 %72, 1
  %74 = icmp eq i32 %73, %10
  br i1 %74, label %62, label %71, !llvm.loop !606

75:                                               ; preds = %97, %64
  %76 = phi i64 [ 0, %64 ], [ %131, %97 ]
  %77 = icmp eq i64 %67, 0
  br i1 %77, label %87, label %78

78:                                               ; preds = %75, %78
  %79 = phi i64 [ %84, %78 ], [ %76, %75 ]
  %80 = phi i64 [ %85, %78 ], [ 0, %75 ]
  %81 = getelementptr inbounds ptr, ptr %65, i64 %79
  %82 = load ptr, ptr %81, align 8, !tbaa !14
  %83 = getelementptr inbounds %struct.CCGVert, ptr %82, i64 0, i32 4
  store i16 0, ptr %83, align 4, !tbaa !86
  %84 = add nuw nsw i64 %79, 1
  %85 = add i64 %80, 1
  %86 = icmp eq i64 %85, %67
  br i1 %86, label %87, label %78, !llvm.loop !607

87:                                               ; preds = %75, %78, %62
  %88 = load i32, ptr %8, align 4, !tbaa !31
  %89 = icmp sgt i32 %88, 0
  br i1 %89, label %90, label %146

90:                                               ; preds = %87
  %91 = load ptr, ptr %6, align 8, !tbaa !14
  %92 = zext i32 %88 to i64
  %93 = and i64 %92, 7
  %94 = icmp ult i32 %88, 8
  br i1 %94, label %134, label %95

95:                                               ; preds = %90
  %96 = and i64 %92, 4294967288
  br label %154

97:                                               ; preds = %97, %69
  %98 = phi i64 [ 0, %69 ], [ %131, %97 ]
  %99 = phi i64 [ 0, %69 ], [ %132, %97 ]
  %100 = getelementptr inbounds ptr, ptr %65, i64 %98
  %101 = load ptr, ptr %100, align 8, !tbaa !14
  %102 = getelementptr inbounds %struct.CCGVert, ptr %101, i64 0, i32 4
  store i16 0, ptr %102, align 4, !tbaa !86
  %103 = or i64 %98, 1
  %104 = getelementptr inbounds ptr, ptr %65, i64 %103
  %105 = load ptr, ptr %104, align 8, !tbaa !14
  %106 = getelementptr inbounds %struct.CCGVert, ptr %105, i64 0, i32 4
  store i16 0, ptr %106, align 4, !tbaa !86
  %107 = or i64 %98, 2
  %108 = getelementptr inbounds ptr, ptr %65, i64 %107
  %109 = load ptr, ptr %108, align 8, !tbaa !14
  %110 = getelementptr inbounds %struct.CCGVert, ptr %109, i64 0, i32 4
  store i16 0, ptr %110, align 4, !tbaa !86
  %111 = or i64 %98, 3
  %112 = getelementptr inbounds ptr, ptr %65, i64 %111
  %113 = load ptr, ptr %112, align 8, !tbaa !14
  %114 = getelementptr inbounds %struct.CCGVert, ptr %113, i64 0, i32 4
  store i16 0, ptr %114, align 4, !tbaa !86
  %115 = or i64 %98, 4
  %116 = getelementptr inbounds ptr, ptr %65, i64 %115
  %117 = load ptr, ptr %116, align 8, !tbaa !14
  %118 = getelementptr inbounds %struct.CCGVert, ptr %117, i64 0, i32 4
  store i16 0, ptr %118, align 4, !tbaa !86
  %119 = or i64 %98, 5
  %120 = getelementptr inbounds ptr, ptr %65, i64 %119
  %121 = load ptr, ptr %120, align 8, !tbaa !14
  %122 = getelementptr inbounds %struct.CCGVert, ptr %121, i64 0, i32 4
  store i16 0, ptr %122, align 4, !tbaa !86
  %123 = or i64 %98, 6
  %124 = getelementptr inbounds ptr, ptr %65, i64 %123
  %125 = load ptr, ptr %124, align 8, !tbaa !14
  %126 = getelementptr inbounds %struct.CCGVert, ptr %125, i64 0, i32 4
  store i16 0, ptr %126, align 4, !tbaa !86
  %127 = or i64 %98, 7
  %128 = getelementptr inbounds ptr, ptr %65, i64 %127
  %129 = load ptr, ptr %128, align 8, !tbaa !14
  %130 = getelementptr inbounds %struct.CCGVert, ptr %129, i64 0, i32 4
  store i16 0, ptr %130, align 4, !tbaa !86
  %131 = add nuw nsw i64 %98, 8
  %132 = add i64 %99, 8
  %133 = icmp eq i64 %132, %70
  br i1 %133, label %75, label %97, !llvm.loop !608

134:                                              ; preds = %154, %90
  %135 = phi i64 [ 0, %90 ], [ %188, %154 ]
  %136 = icmp eq i64 %93, 0
  br i1 %136, label %146, label %137

137:                                              ; preds = %134, %137
  %138 = phi i64 [ %143, %137 ], [ %135, %134 ]
  %139 = phi i64 [ %144, %137 ], [ 0, %134 ]
  %140 = getelementptr inbounds ptr, ptr %91, i64 %138
  %141 = load ptr, ptr %140, align 8, !tbaa !14
  %142 = getelementptr inbounds %struct.CCGEdge, ptr %141, i64 0, i32 3
  store i16 0, ptr %142, align 2, !tbaa !118
  %143 = add nuw nsw i64 %138, 1
  %144 = add i64 %139, 1
  %145 = icmp eq i64 %144, %93
  br i1 %145, label %146, label %137, !llvm.loop !609

146:                                              ; preds = %134, %137, %87
  %147 = icmp sgt i32 %54, 0
  br i1 %147, label %148, label %240

148:                                              ; preds = %146
  %149 = zext i32 %54 to i64
  %150 = and i64 %149, 7
  %151 = icmp ult i32 %54, 8
  br i1 %151, label %228, label %152

152:                                              ; preds = %148
  %153 = and i64 %149, 4294967288
  br label %191

154:                                              ; preds = %154, %95
  %155 = phi i64 [ 0, %95 ], [ %188, %154 ]
  %156 = phi i64 [ 0, %95 ], [ %189, %154 ]
  %157 = getelementptr inbounds ptr, ptr %91, i64 %155
  %158 = load ptr, ptr %157, align 8, !tbaa !14
  %159 = getelementptr inbounds %struct.CCGEdge, ptr %158, i64 0, i32 3
  store i16 0, ptr %159, align 2, !tbaa !118
  %160 = or i64 %155, 1
  %161 = getelementptr inbounds ptr, ptr %91, i64 %160
  %162 = load ptr, ptr %161, align 8, !tbaa !14
  %163 = getelementptr inbounds %struct.CCGEdge, ptr %162, i64 0, i32 3
  store i16 0, ptr %163, align 2, !tbaa !118
  %164 = or i64 %155, 2
  %165 = getelementptr inbounds ptr, ptr %91, i64 %164
  %166 = load ptr, ptr %165, align 8, !tbaa !14
  %167 = getelementptr inbounds %struct.CCGEdge, ptr %166, i64 0, i32 3
  store i16 0, ptr %167, align 2, !tbaa !118
  %168 = or i64 %155, 3
  %169 = getelementptr inbounds ptr, ptr %91, i64 %168
  %170 = load ptr, ptr %169, align 8, !tbaa !14
  %171 = getelementptr inbounds %struct.CCGEdge, ptr %170, i64 0, i32 3
  store i16 0, ptr %171, align 2, !tbaa !118
  %172 = or i64 %155, 4
  %173 = getelementptr inbounds ptr, ptr %91, i64 %172
  %174 = load ptr, ptr %173, align 8, !tbaa !14
  %175 = getelementptr inbounds %struct.CCGEdge, ptr %174, i64 0, i32 3
  store i16 0, ptr %175, align 2, !tbaa !118
  %176 = or i64 %155, 5
  %177 = getelementptr inbounds ptr, ptr %91, i64 %176
  %178 = load ptr, ptr %177, align 8, !tbaa !14
  %179 = getelementptr inbounds %struct.CCGEdge, ptr %178, i64 0, i32 3
  store i16 0, ptr %179, align 2, !tbaa !118
  %180 = or i64 %155, 6
  %181 = getelementptr inbounds ptr, ptr %91, i64 %180
  %182 = load ptr, ptr %181, align 8, !tbaa !14
  %183 = getelementptr inbounds %struct.CCGEdge, ptr %182, i64 0, i32 3
  store i16 0, ptr %183, align 2, !tbaa !118
  %184 = or i64 %155, 7
  %185 = getelementptr inbounds ptr, ptr %91, i64 %184
  %186 = load ptr, ptr %185, align 8, !tbaa !14
  %187 = getelementptr inbounds %struct.CCGEdge, ptr %186, i64 0, i32 3
  store i16 0, ptr %187, align 2, !tbaa !118
  %188 = add nuw nsw i64 %155, 8
  %189 = add i64 %156, 8
  %190 = icmp eq i64 %189, %96
  br i1 %190, label %134, label %154, !llvm.loop !610

191:                                              ; preds = %191, %152
  %192 = phi i64 [ 0, %152 ], [ %225, %191 ]
  %193 = phi i64 [ 0, %152 ], [ %226, %191 ]
  %194 = getelementptr inbounds ptr, ptr %55, i64 %192
  %195 = load ptr, ptr %194, align 8, !tbaa !14
  %196 = getelementptr inbounds %struct.CCGFace, ptr %195, i64 0, i32 3
  store i16 0, ptr %196, align 2, !tbaa !128
  %197 = or i64 %192, 1
  %198 = getelementptr inbounds ptr, ptr %55, i64 %197
  %199 = load ptr, ptr %198, align 8, !tbaa !14
  %200 = getelementptr inbounds %struct.CCGFace, ptr %199, i64 0, i32 3
  store i16 0, ptr %200, align 2, !tbaa !128
  %201 = or i64 %192, 2
  %202 = getelementptr inbounds ptr, ptr %55, i64 %201
  %203 = load ptr, ptr %202, align 8, !tbaa !14
  %204 = getelementptr inbounds %struct.CCGFace, ptr %203, i64 0, i32 3
  store i16 0, ptr %204, align 2, !tbaa !128
  %205 = or i64 %192, 3
  %206 = getelementptr inbounds ptr, ptr %55, i64 %205
  %207 = load ptr, ptr %206, align 8, !tbaa !14
  %208 = getelementptr inbounds %struct.CCGFace, ptr %207, i64 0, i32 3
  store i16 0, ptr %208, align 2, !tbaa !128
  %209 = or i64 %192, 4
  %210 = getelementptr inbounds ptr, ptr %55, i64 %209
  %211 = load ptr, ptr %210, align 8, !tbaa !14
  %212 = getelementptr inbounds %struct.CCGFace, ptr %211, i64 0, i32 3
  store i16 0, ptr %212, align 2, !tbaa !128
  %213 = or i64 %192, 5
  %214 = getelementptr inbounds ptr, ptr %55, i64 %213
  %215 = load ptr, ptr %214, align 8, !tbaa !14
  %216 = getelementptr inbounds %struct.CCGFace, ptr %215, i64 0, i32 3
  store i16 0, ptr %216, align 2, !tbaa !128
  %217 = or i64 %192, 6
  %218 = getelementptr inbounds ptr, ptr %55, i64 %217
  %219 = load ptr, ptr %218, align 8, !tbaa !14
  %220 = getelementptr inbounds %struct.CCGFace, ptr %219, i64 0, i32 3
  store i16 0, ptr %220, align 2, !tbaa !128
  %221 = or i64 %192, 7
  %222 = getelementptr inbounds ptr, ptr %55, i64 %221
  %223 = load ptr, ptr %222, align 8, !tbaa !14
  %224 = getelementptr inbounds %struct.CCGFace, ptr %223, i64 0, i32 3
  store i16 0, ptr %224, align 2, !tbaa !128
  %225 = add nuw nsw i64 %192, 8
  %226 = add i64 %193, 8
  %227 = icmp eq i64 %226, %153
  br i1 %227, label %228, label %191, !llvm.loop !611

228:                                              ; preds = %191, %148
  %229 = phi i64 [ 0, %148 ], [ %225, %191 ]
  %230 = icmp eq i64 %150, 0
  br i1 %230, label %240, label %231

231:                                              ; preds = %228, %231
  %232 = phi i64 [ %237, %231 ], [ %229, %228 ]
  %233 = phi i64 [ %238, %231 ], [ 0, %228 ]
  %234 = getelementptr inbounds ptr, ptr %55, i64 %232
  %235 = load ptr, ptr %234, align 8, !tbaa !14
  %236 = getelementptr inbounds %struct.CCGFace, ptr %235, i64 0, i32 3
  store i16 0, ptr %236, align 2, !tbaa !128
  %237 = add nuw nsw i64 %232, 1
  %238 = add i64 %233, 1
  %239 = icmp eq i64 %238, %150
  br i1 %239, label %240, label %231, !llvm.loop !612

240:                                              ; preds = %228, %231, %146
  %241 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  %242 = load ptr, ptr %6, align 8, !tbaa !14
  tail call void %241(ptr noundef %242) #23
  %243 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  %244 = load ptr, ptr %5, align 8, !tbaa !14
  tail call void %243(ptr noundef %244) #23
  br i1 %11, label %245, label %247

245:                                              ; preds = %240
  %246 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  tail call void %246(ptr noundef %55) #23
  br label %247

247:                                              ; preds = %245, %240
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #23
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #23
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @ccgSubSurf__calcSubdivLevel(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, i32 noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7) unnamed_addr #1 {
  %9 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %10 = load i32, ptr %9, align 8, !tbaa !32
  %11 = shl nuw i32 1, %7
  %12 = add i32 %7, -1
  %13 = shl nuw i32 1, %12
  %14 = add i32 %7, 1
  %15 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %16 = load i32, ptr %15, align 8, !tbaa !37
  %17 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 11
  %18 = load ptr, ptr %17, align 8, !tbaa !38
  %19 = ptrtoint ptr %18 to i64
  %20 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 12
  %21 = load ptr, ptr %20, align 8, !tbaa !39
  %22 = ptrtoint ptr %21 to i64
  %23 = icmp sgt i32 %6, 0
  br i1 %23, label %24, label %42

24:                                               ; preds = %8
  %25 = icmp eq i32 %12, 31
  %26 = add nsw i32 %10, -1
  %27 = shl nuw i32 1, %26
  %28 = add nuw i32 %27, 1
  %29 = sub nsw i32 %10, %7
  %30 = add nuw i32 %27, 2
  %31 = mul i32 %28, %30
  %32 = sub nsw i32 %10, %14
  %33 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 3
  %34 = icmp slt i32 %13, 2
  %35 = tail call i32 @llvm.smax.i32(i32 %13, i32 1)
  %36 = zext i32 %6 to i64
  %37 = mul i32 %16, %30
  %38 = mul i32 %37, %28
  %39 = mul i32 %16, %30
  %40 = mul i32 %39, %28
  %41 = or i1 %34, %25
  br label %100

42:                                               ; preds = %969, %8
  %43 = icmp sgt i32 %5, 0
  br i1 %43, label %44, label %972

44:                                               ; preds = %42
  %45 = icmp eq i32 %7, 0
  %46 = sitofp i32 %7 to float
  %47 = icmp eq i32 %7, 31
  %48 = add i32 %12, %11
  %49 = shl nuw i32 1, %14
  %50 = add i32 %49, %7
  %51 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 3
  %52 = add nsw i32 %10, -1
  %53 = shl nuw i32 1, %52
  %54 = add nuw nsw i32 %53, 1
  %55 = sub nsw i32 %10, %14
  %56 = shl nsw i32 -1, %55
  %57 = shl nsw i32 %54, 1
  %58 = add i32 %57, -2
  %59 = add i32 %56, %53
  %60 = icmp slt i32 %59, 0
  %61 = sub nsw i32 0, %59
  %62 = add nuw i32 %53, 2
  %63 = mul i32 %54, %62
  %64 = add i32 %14, %49
  %65 = sext i32 %48 to i64
  %66 = sext i32 %16 to i64
  %67 = tail call i32 @llvm.smax.i32(i32 %11, i32 1)
  %68 = zext i32 %5 to i64
  %69 = zext i32 %67 to i64
  %70 = zext i32 %67 to i64
  %71 = add i32 %49, %7
  %72 = add i32 %71, 1
  %73 = mul i32 %16, %72
  %74 = shl i32 %16, 1
  %75 = add nsw i64 %65, 1
  %76 = mul i64 %75, %66
  %77 = add nsw i64 %76, 48
  %78 = add i64 %76, 48
  %79 = add i32 %49, %7
  %80 = add i32 %79, 1
  %81 = mul i32 %16, %80
  %82 = shl i32 %16, 1
  %83 = mul nsw i64 %66, %65
  %84 = add i64 %83, 48
  %85 = add i32 %49, %7
  %86 = add i32 %85, 1
  %87 = mul i32 %16, %86
  %88 = shl i32 %16, 1
  %89 = add nsw i64 %65, 1
  %90 = mul i64 %89, %66
  %91 = add nsw i64 %90, 48
  %92 = add i64 %90, 48
  %93 = mul nsw i64 %66, %65
  %94 = add i64 %93, 48
  %95 = add nsw i64 %65, 1
  %96 = mul i64 %95, %66
  %97 = add nsw i64 %96, 48
  %98 = add i64 %96, 48
  %99 = add i64 %93, 48
  br label %1013

100:                                              ; preds = %24, %969
  %101 = phi i64 [ 0, %24 ], [ %970, %969 ]
  %102 = getelementptr inbounds ptr, ptr %3, i64 %101
  %103 = load ptr, ptr %102, align 8, !tbaa !14
  %104 = ptrtoint ptr %103 to i64
  %105 = getelementptr inbounds %struct.CCGFace, ptr %103, i64 0, i32 2
  %106 = load i16, ptr %105, align 8, !tbaa !89
  %107 = sext i16 %106 to i32
  %108 = icmp sgt i16 %106, 0
  br i1 %108, label %109, label %969

109:                                              ; preds = %100
  %110 = getelementptr inbounds %struct.CCGFace, ptr %103, i64 1
  %111 = zext i16 %106 to i64
  %112 = getelementptr inbounds ptr, ptr %110, i64 %111
  %113 = getelementptr inbounds ptr, ptr %112, i64 %111
  br i1 %25, label %331, label %114

114:                                              ; preds = %109
  %115 = load i32, ptr %33, align 4, !tbaa !74
  %116 = icmp sgt i32 %115, 0
  %117 = zext i32 %115 to i64
  br i1 %116, label %118, label %331

118:                                              ; preds = %114
  %119 = zext i32 %107 to i64
  %120 = add i64 %104, 24
  %121 = shl nuw nsw i64 %111, 4
  %122 = add i64 %120, %121
  %123 = add i64 %104, 24
  %124 = add i64 %123, %121
  %125 = add i64 %104, 24
  %126 = add i64 %125, %121
  %127 = add i64 %104, 24
  %128 = add i64 %127, %121
  %129 = add i64 %104, 24
  %130 = add i64 %129, %121
  %131 = icmp ult i32 %115, 32
  %132 = and i64 %117, 4294967264
  %133 = icmp eq i64 %132, %117
  %134 = and i64 %117, 1
  %135 = icmp eq i64 %134, 0
  %136 = sub nsw i64 0, %117
  br label %137

137:                                              ; preds = %118, %327
  %138 = phi i64 [ 0, %118 ], [ %328, %327 ]
  %139 = trunc i64 %138 to i32
  %140 = mul i32 %40, %139
  %141 = add i32 %140, %16
  %142 = sext i32 %141 to i64
  %143 = trunc i64 %138 to i32
  %144 = mul i32 %31, %143
  %145 = add nsw i32 %144, 1
  %146 = mul nsw i32 %145, %16
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds i8, ptr %113, i64 %147
  %149 = add i64 %122, %142
  %150 = add i64 %124, %142
  %151 = add i64 %126, %142
  %152 = add i64 %128, %142
  %153 = add i64 %130, %142
  br label %154

154:                                              ; preds = %325, %137
  %155 = phi i32 [ 0, %137 ], [ %159, %325 ]
  %156 = shl nuw nsw i32 %155, 1
  %157 = or i32 %156, 1
  %158 = mul nsw i32 %155, %28
  %159 = add nuw nsw i32 %155, 1
  %160 = mul nsw i32 %159, %28
  %161 = mul nsw i32 %157, %28
  %162 = add i32 %161, 1
  br label %163

163:                                              ; preds = %323, %154
  %164 = phi i32 [ 0, %154 ], [ %172, %323 ]
  %165 = shl nuw nsw i32 %164, 1
  %166 = add nsw i32 %164, %158
  %167 = shl i32 %166, %29
  %168 = add nsw i32 %167, %28
  %169 = mul nsw i32 %168, %16
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i8, ptr %148, i64 %170
  %172 = add nuw nsw i32 %164, 1
  %173 = add nsw i32 %172, %158
  %174 = shl i32 %173, %29
  %175 = add nsw i32 %174, %28
  %176 = mul nsw i32 %175, %16
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i8, ptr %148, i64 %177
  %179 = add nsw i32 %172, %160
  %180 = shl i32 %179, %29
  %181 = add nsw i32 %180, %28
  %182 = mul nsw i32 %181, %16
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i8, ptr %148, i64 %183
  %185 = add nsw i32 %164, %160
  %186 = shl i32 %185, %29
  %187 = add nsw i32 %186, %28
  %188 = mul nsw i32 %187, %16
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds i8, ptr %148, i64 %189
  %191 = add i32 %162, %165
  %192 = shl i32 %191, %32
  %193 = add nsw i32 %192, %28
  %194 = mul nsw i32 %193, %16
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8, ptr %148, i64 %195
  br i1 %131, label %271, label %197

197:                                              ; preds = %163
  %198 = add i64 %149, %195
  %199 = add i64 %150, %170
  %200 = sub i64 %198, %199
  %201 = icmp ult i64 %200, 128
  %202 = add i64 %151, %177
  %203 = sub i64 %198, %202
  %204 = icmp ult i64 %203, 128
  %205 = or i1 %201, %204
  %206 = add i64 %152, %183
  %207 = sub i64 %198, %206
  %208 = icmp ult i64 %207, 128
  %209 = or i1 %205, %208
  %210 = add i64 %153, %189
  %211 = sub i64 %198, %210
  %212 = icmp ult i64 %211, 128
  %213 = or i1 %209, %212
  br i1 %213, label %271, label %214

214:                                              ; preds = %197, %214
  %215 = phi i64 [ %268, %214 ], [ 0, %197 ]
  %216 = getelementptr inbounds float, ptr %171, i64 %215
  %217 = load <8 x float>, ptr %216, align 4, !tbaa !65
  %218 = getelementptr inbounds float, ptr %216, i64 8
  %219 = load <8 x float>, ptr %218, align 4, !tbaa !65
  %220 = getelementptr inbounds float, ptr %216, i64 16
  %221 = load <8 x float>, ptr %220, align 4, !tbaa !65
  %222 = getelementptr inbounds float, ptr %216, i64 24
  %223 = load <8 x float>, ptr %222, align 4, !tbaa !65
  %224 = getelementptr inbounds float, ptr %178, i64 %215
  %225 = load <8 x float>, ptr %224, align 4, !tbaa !65
  %226 = getelementptr inbounds float, ptr %224, i64 8
  %227 = load <8 x float>, ptr %226, align 4, !tbaa !65
  %228 = getelementptr inbounds float, ptr %224, i64 16
  %229 = load <8 x float>, ptr %228, align 4, !tbaa !65
  %230 = getelementptr inbounds float, ptr %224, i64 24
  %231 = load <8 x float>, ptr %230, align 4, !tbaa !65
  %232 = fadd fast <8 x float> %225, %217
  %233 = fadd fast <8 x float> %227, %219
  %234 = fadd fast <8 x float> %229, %221
  %235 = fadd fast <8 x float> %231, %223
  %236 = getelementptr inbounds float, ptr %184, i64 %215
  %237 = load <8 x float>, ptr %236, align 4, !tbaa !65
  %238 = getelementptr inbounds float, ptr %236, i64 8
  %239 = load <8 x float>, ptr %238, align 4, !tbaa !65
  %240 = getelementptr inbounds float, ptr %236, i64 16
  %241 = load <8 x float>, ptr %240, align 4, !tbaa !65
  %242 = getelementptr inbounds float, ptr %236, i64 24
  %243 = load <8 x float>, ptr %242, align 4, !tbaa !65
  %244 = fadd fast <8 x float> %232, %237
  %245 = fadd fast <8 x float> %233, %239
  %246 = fadd fast <8 x float> %234, %241
  %247 = fadd fast <8 x float> %235, %243
  %248 = getelementptr inbounds float, ptr %190, i64 %215
  %249 = load <8 x float>, ptr %248, align 4, !tbaa !65
  %250 = getelementptr inbounds float, ptr %248, i64 8
  %251 = load <8 x float>, ptr %250, align 4, !tbaa !65
  %252 = getelementptr inbounds float, ptr %248, i64 16
  %253 = load <8 x float>, ptr %252, align 4, !tbaa !65
  %254 = getelementptr inbounds float, ptr %248, i64 24
  %255 = load <8 x float>, ptr %254, align 4, !tbaa !65
  %256 = fadd fast <8 x float> %244, %249
  %257 = fadd fast <8 x float> %245, %251
  %258 = fadd fast <8 x float> %246, %253
  %259 = fadd fast <8 x float> %247, %255
  %260 = fmul fast <8 x float> %256, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %261 = fmul fast <8 x float> %257, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %262 = fmul fast <8 x float> %258, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %263 = fmul fast <8 x float> %259, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %264 = getelementptr inbounds float, ptr %196, i64 %215
  store <8 x float> %260, ptr %264, align 4, !tbaa !65
  %265 = getelementptr inbounds float, ptr %264, i64 8
  store <8 x float> %261, ptr %265, align 4, !tbaa !65
  %266 = getelementptr inbounds float, ptr %264, i64 16
  store <8 x float> %262, ptr %266, align 4, !tbaa !65
  %267 = getelementptr inbounds float, ptr %264, i64 24
  store <8 x float> %263, ptr %267, align 4, !tbaa !65
  %268 = add nuw i64 %215, 32
  %269 = icmp eq i64 %268, %132
  br i1 %269, label %270, label %214, !llvm.loop !613

270:                                              ; preds = %214
  br i1 %133, label %323, label %271

271:                                              ; preds = %197, %163, %270
  %272 = phi i64 [ 0, %197 ], [ 0, %163 ], [ %132, %270 ]
  %273 = xor i64 %272, -1
  br i1 %135, label %289, label %274

274:                                              ; preds = %271
  %275 = getelementptr inbounds float, ptr %171, i64 %272
  %276 = load float, ptr %275, align 4, !tbaa !65
  %277 = getelementptr inbounds float, ptr %178, i64 %272
  %278 = load float, ptr %277, align 4, !tbaa !65
  %279 = fadd fast float %278, %276
  %280 = getelementptr inbounds float, ptr %184, i64 %272
  %281 = load float, ptr %280, align 4, !tbaa !65
  %282 = fadd fast float %279, %281
  %283 = getelementptr inbounds float, ptr %190, i64 %272
  %284 = load float, ptr %283, align 4, !tbaa !65
  %285 = fadd fast float %282, %284
  %286 = fmul fast float %285, 2.500000e-01
  %287 = getelementptr inbounds float, ptr %196, i64 %272
  store float %286, ptr %287, align 4, !tbaa !65
  %288 = or i64 %272, 1
  br label %289

289:                                              ; preds = %274, %271
  %290 = phi i64 [ %272, %271 ], [ %288, %274 ]
  %291 = icmp eq i64 %273, %136
  br i1 %291, label %323, label %292

292:                                              ; preds = %289, %292
  %293 = phi i64 [ %321, %292 ], [ %290, %289 ]
  %294 = getelementptr inbounds float, ptr %171, i64 %293
  %295 = load float, ptr %294, align 4, !tbaa !65
  %296 = getelementptr inbounds float, ptr %178, i64 %293
  %297 = load float, ptr %296, align 4, !tbaa !65
  %298 = fadd fast float %297, %295
  %299 = getelementptr inbounds float, ptr %184, i64 %293
  %300 = load float, ptr %299, align 4, !tbaa !65
  %301 = fadd fast float %298, %300
  %302 = getelementptr inbounds float, ptr %190, i64 %293
  %303 = load float, ptr %302, align 4, !tbaa !65
  %304 = fadd fast float %301, %303
  %305 = fmul fast float %304, 2.500000e-01
  %306 = getelementptr inbounds float, ptr %196, i64 %293
  store float %305, ptr %306, align 4, !tbaa !65
  %307 = add nuw nsw i64 %293, 1
  %308 = getelementptr inbounds float, ptr %171, i64 %307
  %309 = load float, ptr %308, align 4, !tbaa !65
  %310 = getelementptr inbounds float, ptr %178, i64 %307
  %311 = load float, ptr %310, align 4, !tbaa !65
  %312 = fadd fast float %311, %309
  %313 = getelementptr inbounds float, ptr %184, i64 %307
  %314 = load float, ptr %313, align 4, !tbaa !65
  %315 = fadd fast float %312, %314
  %316 = getelementptr inbounds float, ptr %190, i64 %307
  %317 = load float, ptr %316, align 4, !tbaa !65
  %318 = fadd fast float %315, %317
  %319 = fmul fast float %318, 2.500000e-01
  %320 = getelementptr inbounds float, ptr %196, i64 %307
  store float %319, ptr %320, align 4, !tbaa !65
  %321 = add nuw nsw i64 %293, 2
  %322 = icmp eq i64 %321, %117
  br i1 %322, label %323, label %292, !llvm.loop !614

323:                                              ; preds = %289, %292, %270
  %324 = icmp eq i32 %172, %35
  br i1 %324, label %325, label %163, !llvm.loop !615

325:                                              ; preds = %323
  %326 = icmp eq i32 %159, %35
  br i1 %326, label %327, label %154, !llvm.loop !616

327:                                              ; preds = %325
  %328 = add nuw nsw i64 %138, 1
  %329 = icmp eq i64 %328, %119
  br i1 %329, label %330, label %137, !llvm.loop !617

330:                                              ; preds = %327
  br i1 %108, label %331, label %969

331:                                              ; preds = %109, %114, %330
  %332 = getelementptr inbounds %struct.CCGFace, ptr %103, i64 1
  %333 = zext i16 %106 to i64
  %334 = getelementptr inbounds ptr, ptr %332, i64 %333
  %335 = getelementptr inbounds ptr, ptr %334, i64 %333
  %336 = zext i32 %107 to i64
  %337 = add i64 %104, 24
  %338 = shl nuw nsw i64 %333, 4
  %339 = add i64 %337, %338
  %340 = add i64 %104, 24
  %341 = add i64 %340, %338
  %342 = add i64 %104, 24
  %343 = add i64 %342, %338
  %344 = add i64 %104, 24
  %345 = add i64 %344, %338
  %346 = add i64 %104, 24
  %347 = add i64 %346, %338
  %348 = add i64 %104, 24
  %349 = shl nuw nsw i64 %333, 4
  %350 = add i64 %348, %349
  %351 = add i64 %104, 24
  %352 = add i64 %351, %349
  %353 = add i64 %104, 24
  %354 = add i64 %353, %349
  %355 = add i64 %104, 24
  %356 = add i64 %355, %349
  %357 = add i64 %104, 24
  %358 = add i64 %357, %349
  %359 = add i64 %104, 24
  %360 = shl nuw nsw i64 %333, 4
  %361 = add i64 %359, %360
  %362 = add i64 %104, 24
  %363 = add i64 %362, %360
  %364 = add i64 %104, 24
  %365 = add i64 %364, %360
  %366 = add i64 %104, 24
  %367 = add i64 %366, %360
  %368 = add i64 %104, 24
  %369 = add i64 %368, %360
  br label %370

370:                                              ; preds = %331, %966
  %371 = phi i64 [ 0, %331 ], [ %967, %966 ]
  %372 = trunc i64 %371 to i32
  %373 = mul i32 %38, %372
  %374 = add i32 %373, %16
  %375 = sext i32 %374 to i64
  %376 = trunc i64 %371 to i32
  %377 = mul i32 %38, %376
  %378 = add i32 %377, %16
  %379 = sext i32 %378 to i64
  br i1 %25, label %966, label %380

380:                                              ; preds = %370
  %381 = trunc i64 %371 to i32
  %382 = mul i32 %38, %381
  %383 = add i32 %382, %16
  %384 = sext i32 %383 to i64
  %385 = trunc i64 %371 to i32
  %386 = mul i32 %31, %385
  %387 = add nsw i32 %386, 1
  %388 = mul nsw i32 %387, %16
  %389 = sext i32 %388 to i64
  %390 = getelementptr inbounds i8, ptr %335, i64 %389
  %391 = add nuw nsw i64 %371, 1
  %392 = icmp eq i64 %391, %336
  %393 = trunc i64 %391 to i32
  %394 = select i1 %392, i32 0, i32 %393
  %395 = mul i32 %31, %394
  %396 = add nsw i32 %395, 1
  %397 = mul nsw i32 %396, %16
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds i8, ptr %335, i64 %398
  %400 = load i32, ptr %33, align 4, !tbaa !74
  %401 = icmp sgt i32 %400, 0
  %402 = zext i32 %400 to i64
  %403 = add i64 %361, %384
  %404 = add i64 %363, %384
  %405 = add i64 %365, %384
  %406 = add i64 %367, %398
  %407 = add i64 %369, %384
  %408 = icmp ult i32 %400, 32
  %409 = and i64 %402, 4294967264
  %410 = icmp eq i64 %409, %402
  %411 = and i64 %402, 1
  %412 = icmp eq i64 %411, 0
  %413 = sub nsw i64 0, %402
  br label %610

414:                                              ; preds = %767
  br i1 %34, label %966, label %415

415:                                              ; preds = %414
  %416 = trunc i64 %371 to i32
  %417 = mul i32 %31, %416
  %418 = add nsw i32 %417, 1
  %419 = mul nsw i32 %418, %16
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds i8, ptr %335, i64 %420
  br i1 %25, label %966, label %422

422:                                              ; preds = %415
  %423 = load i32, ptr %33, align 4, !tbaa !74
  %424 = icmp sgt i32 %423, 0
  %425 = zext i32 %423 to i64
  br i1 %424, label %426, label %770

426:                                              ; preds = %422
  %427 = add i64 %350, %375
  %428 = add i64 %352, %375
  %429 = add i64 %354, %375
  %430 = add i64 %356, %375
  %431 = add i64 %358, %375
  %432 = icmp ult i32 %423, 32
  %433 = and i64 %425, 4294967264
  %434 = icmp eq i64 %433, %425
  %435 = and i64 %425, 1
  %436 = icmp eq i64 %435, 0
  %437 = sub nsw i64 0, %425
  br label %438

438:                                              ; preds = %426, %607
  %439 = phi i32 [ %608, %607 ], [ 1, %426 ]
  %440 = shl nuw nsw i32 %439, 1
  br label %441

441:                                              ; preds = %605, %438
  %442 = phi i32 [ 0, %438 ], [ %452, %605 ]
  %443 = shl nuw nsw i32 %442, 1
  %444 = or i32 %443, 1
  %445 = mul nsw i32 %442, %28
  %446 = add nsw i32 %445, %439
  %447 = shl i32 %446, %29
  %448 = add nsw i32 %447, %28
  %449 = mul nsw i32 %448, %16
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds i8, ptr %421, i64 %450
  %452 = add nuw nsw i32 %442, 1
  %453 = mul nsw i32 %452, %28
  %454 = add nsw i32 %453, %439
  %455 = shl i32 %454, %29
  %456 = add nsw i32 %455, %28
  %457 = mul nsw i32 %456, %16
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds i8, ptr %421, i64 %458
  %460 = mul nsw i32 %444, %28
  %461 = add i32 %460, %440
  %462 = add i32 %461, -1
  %463 = shl i32 %462, %32
  %464 = add nsw i32 %463, %28
  %465 = mul nsw i32 %464, %16
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds i8, ptr %421, i64 %466
  %468 = add i32 %461, 1
  %469 = shl i32 %468, %32
  %470 = add nsw i32 %469, %28
  %471 = mul nsw i32 %470, %16
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds i8, ptr %421, i64 %472
  %474 = shl i32 %461, %32
  %475 = add nsw i32 %474, %28
  %476 = mul nsw i32 %475, %16
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds i8, ptr %421, i64 %477
  br i1 %432, label %553, label %479

479:                                              ; preds = %441
  %480 = add i64 %427, %477
  %481 = add i64 %428, %450
  %482 = sub i64 %480, %481
  %483 = icmp ult i64 %482, 128
  %484 = add i64 %429, %458
  %485 = sub i64 %480, %484
  %486 = icmp ult i64 %485, 128
  %487 = or i1 %483, %486
  %488 = add i64 %430, %466
  %489 = sub i64 %480, %488
  %490 = icmp ult i64 %489, 128
  %491 = or i1 %487, %490
  %492 = add i64 %431, %472
  %493 = sub i64 %480, %492
  %494 = icmp ult i64 %493, 128
  %495 = or i1 %491, %494
  br i1 %495, label %553, label %496

496:                                              ; preds = %479, %496
  %497 = phi i64 [ %550, %496 ], [ 0, %479 ]
  %498 = getelementptr inbounds float, ptr %451, i64 %497
  %499 = load <8 x float>, ptr %498, align 4, !tbaa !65
  %500 = getelementptr inbounds float, ptr %498, i64 8
  %501 = load <8 x float>, ptr %500, align 4, !tbaa !65
  %502 = getelementptr inbounds float, ptr %498, i64 16
  %503 = load <8 x float>, ptr %502, align 4, !tbaa !65
  %504 = getelementptr inbounds float, ptr %498, i64 24
  %505 = load <8 x float>, ptr %504, align 4, !tbaa !65
  %506 = getelementptr inbounds float, ptr %459, i64 %497
  %507 = load <8 x float>, ptr %506, align 4, !tbaa !65
  %508 = getelementptr inbounds float, ptr %506, i64 8
  %509 = load <8 x float>, ptr %508, align 4, !tbaa !65
  %510 = getelementptr inbounds float, ptr %506, i64 16
  %511 = load <8 x float>, ptr %510, align 4, !tbaa !65
  %512 = getelementptr inbounds float, ptr %506, i64 24
  %513 = load <8 x float>, ptr %512, align 4, !tbaa !65
  %514 = fadd fast <8 x float> %507, %499
  %515 = fadd fast <8 x float> %509, %501
  %516 = fadd fast <8 x float> %511, %503
  %517 = fadd fast <8 x float> %513, %505
  %518 = getelementptr inbounds float, ptr %467, i64 %497
  %519 = load <8 x float>, ptr %518, align 4, !tbaa !65
  %520 = getelementptr inbounds float, ptr %518, i64 8
  %521 = load <8 x float>, ptr %520, align 4, !tbaa !65
  %522 = getelementptr inbounds float, ptr %518, i64 16
  %523 = load <8 x float>, ptr %522, align 4, !tbaa !65
  %524 = getelementptr inbounds float, ptr %518, i64 24
  %525 = load <8 x float>, ptr %524, align 4, !tbaa !65
  %526 = fadd fast <8 x float> %514, %519
  %527 = fadd fast <8 x float> %515, %521
  %528 = fadd fast <8 x float> %516, %523
  %529 = fadd fast <8 x float> %517, %525
  %530 = getelementptr inbounds float, ptr %473, i64 %497
  %531 = load <8 x float>, ptr %530, align 4, !tbaa !65
  %532 = getelementptr inbounds float, ptr %530, i64 8
  %533 = load <8 x float>, ptr %532, align 4, !tbaa !65
  %534 = getelementptr inbounds float, ptr %530, i64 16
  %535 = load <8 x float>, ptr %534, align 4, !tbaa !65
  %536 = getelementptr inbounds float, ptr %530, i64 24
  %537 = load <8 x float>, ptr %536, align 4, !tbaa !65
  %538 = fadd fast <8 x float> %526, %531
  %539 = fadd fast <8 x float> %527, %533
  %540 = fadd fast <8 x float> %528, %535
  %541 = fadd fast <8 x float> %529, %537
  %542 = fmul fast <8 x float> %538, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %543 = fmul fast <8 x float> %539, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %544 = fmul fast <8 x float> %540, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %545 = fmul fast <8 x float> %541, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %546 = getelementptr inbounds float, ptr %478, i64 %497
  store <8 x float> %542, ptr %546, align 4, !tbaa !65
  %547 = getelementptr inbounds float, ptr %546, i64 8
  store <8 x float> %543, ptr %547, align 4, !tbaa !65
  %548 = getelementptr inbounds float, ptr %546, i64 16
  store <8 x float> %544, ptr %548, align 4, !tbaa !65
  %549 = getelementptr inbounds float, ptr %546, i64 24
  store <8 x float> %545, ptr %549, align 4, !tbaa !65
  %550 = add nuw i64 %497, 32
  %551 = icmp eq i64 %550, %433
  br i1 %551, label %552, label %496, !llvm.loop !618

552:                                              ; preds = %496
  br i1 %434, label %605, label %553

553:                                              ; preds = %479, %441, %552
  %554 = phi i64 [ 0, %479 ], [ 0, %441 ], [ %433, %552 ]
  %555 = xor i64 %554, -1
  br i1 %436, label %571, label %556

556:                                              ; preds = %553
  %557 = getelementptr inbounds float, ptr %451, i64 %554
  %558 = load float, ptr %557, align 4, !tbaa !65
  %559 = getelementptr inbounds float, ptr %459, i64 %554
  %560 = load float, ptr %559, align 4, !tbaa !65
  %561 = fadd fast float %560, %558
  %562 = getelementptr inbounds float, ptr %467, i64 %554
  %563 = load float, ptr %562, align 4, !tbaa !65
  %564 = fadd fast float %561, %563
  %565 = getelementptr inbounds float, ptr %473, i64 %554
  %566 = load float, ptr %565, align 4, !tbaa !65
  %567 = fadd fast float %564, %566
  %568 = fmul fast float %567, 2.500000e-01
  %569 = getelementptr inbounds float, ptr %478, i64 %554
  store float %568, ptr %569, align 4, !tbaa !65
  %570 = or i64 %554, 1
  br label %571

571:                                              ; preds = %556, %553
  %572 = phi i64 [ %554, %553 ], [ %570, %556 ]
  %573 = icmp eq i64 %555, %437
  br i1 %573, label %605, label %574

574:                                              ; preds = %571, %574
  %575 = phi i64 [ %603, %574 ], [ %572, %571 ]
  %576 = getelementptr inbounds float, ptr %451, i64 %575
  %577 = load float, ptr %576, align 4, !tbaa !65
  %578 = getelementptr inbounds float, ptr %459, i64 %575
  %579 = load float, ptr %578, align 4, !tbaa !65
  %580 = fadd fast float %579, %577
  %581 = getelementptr inbounds float, ptr %467, i64 %575
  %582 = load float, ptr %581, align 4, !tbaa !65
  %583 = fadd fast float %580, %582
  %584 = getelementptr inbounds float, ptr %473, i64 %575
  %585 = load float, ptr %584, align 4, !tbaa !65
  %586 = fadd fast float %583, %585
  %587 = fmul fast float %586, 2.500000e-01
  %588 = getelementptr inbounds float, ptr %478, i64 %575
  store float %587, ptr %588, align 4, !tbaa !65
  %589 = add nuw nsw i64 %575, 1
  %590 = getelementptr inbounds float, ptr %451, i64 %589
  %591 = load float, ptr %590, align 4, !tbaa !65
  %592 = getelementptr inbounds float, ptr %459, i64 %589
  %593 = load float, ptr %592, align 4, !tbaa !65
  %594 = fadd fast float %593, %591
  %595 = getelementptr inbounds float, ptr %467, i64 %589
  %596 = load float, ptr %595, align 4, !tbaa !65
  %597 = fadd fast float %594, %596
  %598 = getelementptr inbounds float, ptr %473, i64 %589
  %599 = load float, ptr %598, align 4, !tbaa !65
  %600 = fadd fast float %597, %599
  %601 = fmul fast float %600, 2.500000e-01
  %602 = getelementptr inbounds float, ptr %478, i64 %589
  store float %601, ptr %602, align 4, !tbaa !65
  %603 = add nuw nsw i64 %575, 2
  %604 = icmp eq i64 %603, %425
  br i1 %604, label %605, label %574, !llvm.loop !619

605:                                              ; preds = %571, %574, %552
  %606 = icmp eq i32 %452, %13
  br i1 %606, label %607, label %441, !llvm.loop !620

607:                                              ; preds = %605
  %608 = add nuw nsw i32 %439, 1
  %609 = icmp eq i32 %608, %13
  br i1 %609, label %769, label %438, !llvm.loop !621

610:                                              ; preds = %380, %767
  %611 = phi i32 [ 0, %380 ], [ %618, %767 ]
  %612 = shl nuw nsw i32 %611, 1
  %613 = or i32 %612, 1
  %614 = mul nsw i32 %611, %16
  %615 = shl i32 %614, %29
  %616 = sext i32 %615 to i64
  %617 = getelementptr inbounds i8, ptr %390, i64 %616
  %618 = add nuw nsw i32 %611, 1
  %619 = mul nsw i32 %618, %16
  %620 = shl i32 %619, %29
  %621 = sext i32 %620 to i64
  %622 = getelementptr inbounds i8, ptr %390, i64 %621
  %623 = mul nsw i32 %613, %28
  %624 = add nsw i32 %623, 1
  %625 = shl i32 %624, %32
  %626 = add nsw i32 %625, %28
  %627 = mul nsw i32 %626, %16
  %628 = sext i32 %627 to i64
  %629 = getelementptr inbounds i8, ptr %399, i64 %628
  %630 = add nsw i32 %613, %28
  %631 = shl i32 %630, %32
  %632 = add nsw i32 %631, %28
  %633 = mul nsw i32 %632, %16
  %634 = sext i32 %633 to i64
  %635 = getelementptr inbounds i8, ptr %390, i64 %634
  %636 = mul nsw i32 %613, %16
  %637 = shl i32 %636, %32
  %638 = sext i32 %637 to i64
  %639 = getelementptr inbounds i8, ptr %390, i64 %638
  br i1 %401, label %640, label %767

640:                                              ; preds = %610
  br i1 %408, label %715, label %641

641:                                              ; preds = %640
  %642 = add i64 %403, %638
  %643 = add i64 %404, %616
  %644 = sub i64 %642, %643
  %645 = icmp ult i64 %644, 128
  %646 = add i64 %405, %621
  %647 = sub i64 %642, %646
  %648 = icmp ult i64 %647, 128
  %649 = or i1 %645, %648
  %650 = add i64 %406, %628
  %651 = sub i64 %642, %650
  %652 = icmp ult i64 %651, 128
  %653 = or i1 %649, %652
  %654 = add i64 %407, %634
  %655 = sub i64 %642, %654
  %656 = icmp ult i64 %655, 128
  %657 = or i1 %653, %656
  br i1 %657, label %715, label %658

658:                                              ; preds = %641, %658
  %659 = phi i64 [ %712, %658 ], [ 0, %641 ]
  %660 = getelementptr inbounds float, ptr %617, i64 %659
  %661 = load <8 x float>, ptr %660, align 4, !tbaa !65
  %662 = getelementptr inbounds float, ptr %660, i64 8
  %663 = load <8 x float>, ptr %662, align 4, !tbaa !65
  %664 = getelementptr inbounds float, ptr %660, i64 16
  %665 = load <8 x float>, ptr %664, align 4, !tbaa !65
  %666 = getelementptr inbounds float, ptr %660, i64 24
  %667 = load <8 x float>, ptr %666, align 4, !tbaa !65
  %668 = getelementptr inbounds float, ptr %622, i64 %659
  %669 = load <8 x float>, ptr %668, align 4, !tbaa !65
  %670 = getelementptr inbounds float, ptr %668, i64 8
  %671 = load <8 x float>, ptr %670, align 4, !tbaa !65
  %672 = getelementptr inbounds float, ptr %668, i64 16
  %673 = load <8 x float>, ptr %672, align 4, !tbaa !65
  %674 = getelementptr inbounds float, ptr %668, i64 24
  %675 = load <8 x float>, ptr %674, align 4, !tbaa !65
  %676 = fadd fast <8 x float> %669, %661
  %677 = fadd fast <8 x float> %671, %663
  %678 = fadd fast <8 x float> %673, %665
  %679 = fadd fast <8 x float> %675, %667
  %680 = getelementptr inbounds float, ptr %629, i64 %659
  %681 = load <8 x float>, ptr %680, align 4, !tbaa !65
  %682 = getelementptr inbounds float, ptr %680, i64 8
  %683 = load <8 x float>, ptr %682, align 4, !tbaa !65
  %684 = getelementptr inbounds float, ptr %680, i64 16
  %685 = load <8 x float>, ptr %684, align 4, !tbaa !65
  %686 = getelementptr inbounds float, ptr %680, i64 24
  %687 = load <8 x float>, ptr %686, align 4, !tbaa !65
  %688 = fadd fast <8 x float> %676, %681
  %689 = fadd fast <8 x float> %677, %683
  %690 = fadd fast <8 x float> %678, %685
  %691 = fadd fast <8 x float> %679, %687
  %692 = getelementptr inbounds float, ptr %635, i64 %659
  %693 = load <8 x float>, ptr %692, align 4, !tbaa !65
  %694 = getelementptr inbounds float, ptr %692, i64 8
  %695 = load <8 x float>, ptr %694, align 4, !tbaa !65
  %696 = getelementptr inbounds float, ptr %692, i64 16
  %697 = load <8 x float>, ptr %696, align 4, !tbaa !65
  %698 = getelementptr inbounds float, ptr %692, i64 24
  %699 = load <8 x float>, ptr %698, align 4, !tbaa !65
  %700 = fadd fast <8 x float> %688, %693
  %701 = fadd fast <8 x float> %689, %695
  %702 = fadd fast <8 x float> %690, %697
  %703 = fadd fast <8 x float> %691, %699
  %704 = fmul fast <8 x float> %700, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %705 = fmul fast <8 x float> %701, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %706 = fmul fast <8 x float> %702, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %707 = fmul fast <8 x float> %703, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %708 = getelementptr inbounds float, ptr %639, i64 %659
  store <8 x float> %704, ptr %708, align 4, !tbaa !65
  %709 = getelementptr inbounds float, ptr %708, i64 8
  store <8 x float> %705, ptr %709, align 4, !tbaa !65
  %710 = getelementptr inbounds float, ptr %708, i64 16
  store <8 x float> %706, ptr %710, align 4, !tbaa !65
  %711 = getelementptr inbounds float, ptr %708, i64 24
  store <8 x float> %707, ptr %711, align 4, !tbaa !65
  %712 = add nuw i64 %659, 32
  %713 = icmp eq i64 %712, %409
  br i1 %713, label %714, label %658, !llvm.loop !622

714:                                              ; preds = %658
  br i1 %410, label %767, label %715

715:                                              ; preds = %641, %640, %714
  %716 = phi i64 [ 0, %641 ], [ 0, %640 ], [ %409, %714 ]
  %717 = xor i64 %716, -1
  br i1 %412, label %733, label %718

718:                                              ; preds = %715
  %719 = getelementptr inbounds float, ptr %617, i64 %716
  %720 = load float, ptr %719, align 4, !tbaa !65
  %721 = getelementptr inbounds float, ptr %622, i64 %716
  %722 = load float, ptr %721, align 4, !tbaa !65
  %723 = fadd fast float %722, %720
  %724 = getelementptr inbounds float, ptr %629, i64 %716
  %725 = load float, ptr %724, align 4, !tbaa !65
  %726 = fadd fast float %723, %725
  %727 = getelementptr inbounds float, ptr %635, i64 %716
  %728 = load float, ptr %727, align 4, !tbaa !65
  %729 = fadd fast float %726, %728
  %730 = fmul fast float %729, 2.500000e-01
  %731 = getelementptr inbounds float, ptr %639, i64 %716
  store float %730, ptr %731, align 4, !tbaa !65
  %732 = or i64 %716, 1
  br label %733

733:                                              ; preds = %718, %715
  %734 = phi i64 [ %716, %715 ], [ %732, %718 ]
  %735 = icmp eq i64 %717, %413
  br i1 %735, label %767, label %736

736:                                              ; preds = %733, %736
  %737 = phi i64 [ %765, %736 ], [ %734, %733 ]
  %738 = getelementptr inbounds float, ptr %617, i64 %737
  %739 = load float, ptr %738, align 4, !tbaa !65
  %740 = getelementptr inbounds float, ptr %622, i64 %737
  %741 = load float, ptr %740, align 4, !tbaa !65
  %742 = fadd fast float %741, %739
  %743 = getelementptr inbounds float, ptr %629, i64 %737
  %744 = load float, ptr %743, align 4, !tbaa !65
  %745 = fadd fast float %742, %744
  %746 = getelementptr inbounds float, ptr %635, i64 %737
  %747 = load float, ptr %746, align 4, !tbaa !65
  %748 = fadd fast float %745, %747
  %749 = fmul fast float %748, 2.500000e-01
  %750 = getelementptr inbounds float, ptr %639, i64 %737
  store float %749, ptr %750, align 4, !tbaa !65
  %751 = add nuw nsw i64 %737, 1
  %752 = getelementptr inbounds float, ptr %617, i64 %751
  %753 = load float, ptr %752, align 4, !tbaa !65
  %754 = getelementptr inbounds float, ptr %622, i64 %751
  %755 = load float, ptr %754, align 4, !tbaa !65
  %756 = fadd fast float %755, %753
  %757 = getelementptr inbounds float, ptr %629, i64 %751
  %758 = load float, ptr %757, align 4, !tbaa !65
  %759 = fadd fast float %756, %758
  %760 = getelementptr inbounds float, ptr %635, i64 %751
  %761 = load float, ptr %760, align 4, !tbaa !65
  %762 = fadd fast float %759, %761
  %763 = fmul fast float %762, 2.500000e-01
  %764 = getelementptr inbounds float, ptr %639, i64 %751
  store float %763, ptr %764, align 4, !tbaa !65
  %765 = add nuw nsw i64 %737, 2
  %766 = icmp eq i64 %765, %402
  br i1 %766, label %767, label %736, !llvm.loop !623

767:                                              ; preds = %733, %736, %714, %610
  %768 = icmp eq i32 %618, %35
  br i1 %768, label %414, label %610, !llvm.loop !624

769:                                              ; preds = %607
  br i1 %41, label %966, label %770

770:                                              ; preds = %769, %422
  %771 = trunc i64 %371 to i32
  %772 = mul i32 %31, %771
  %773 = add nsw i32 %772, 1
  %774 = mul nsw i32 %773, %16
  %775 = sext i32 %774 to i64
  %776 = getelementptr inbounds i8, ptr %335, i64 %775
  %777 = load i32, ptr %33, align 4, !tbaa !74
  %778 = icmp sgt i32 %777, 0
  %779 = zext i32 %777 to i64
  %780 = add i64 %339, %379
  %781 = add i64 %341, %379
  %782 = add i64 %343, %379
  %783 = add i64 %345, %379
  %784 = add i64 %347, %379
  %785 = icmp ult i32 %777, 32
  %786 = and i64 %779, 4294967264
  %787 = icmp eq i64 %786, %779
  %788 = and i64 %779, 1
  %789 = icmp eq i64 %788, 0
  %790 = sub nsw i64 0, %779
  br label %791

791:                                              ; preds = %800, %770
  %792 = phi i32 [ 1, %770 ], [ %801, %800 ]
  %793 = shl nuw nsw i32 %792, 1
  %794 = mul nsw i32 %792, %28
  %795 = add nsw i32 %793, -1
  %796 = mul nsw i32 %795, %28
  %797 = or i32 %793, 1
  %798 = mul nsw i32 %797, %28
  %799 = mul nsw i32 %793, %28
  br i1 %778, label %803, label %800

800:                                              ; preds = %964, %791
  %801 = add nuw nsw i32 %792, 1
  %802 = icmp eq i32 %801, %13
  br i1 %802, label %966, label %791, !llvm.loop !625

803:                                              ; preds = %791, %964
  %804 = phi i32 [ %813, %964 ], [ 0, %791 ]
  %805 = shl nuw nsw i32 %804, 1
  %806 = or i32 %805, 1
  %807 = add nsw i32 %804, %794
  %808 = shl i32 %807, %29
  %809 = add nsw i32 %808, %28
  %810 = mul nsw i32 %809, %16
  %811 = sext i32 %810 to i64
  %812 = getelementptr inbounds i8, ptr %776, i64 %811
  %813 = add nuw nsw i32 %804, 1
  %814 = add nsw i32 %813, %794
  %815 = shl i32 %814, %29
  %816 = add nsw i32 %815, %28
  %817 = mul nsw i32 %816, %16
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds i8, ptr %776, i64 %818
  %820 = add nsw i32 %806, %796
  %821 = shl i32 %820, %32
  %822 = add nsw i32 %821, %28
  %823 = mul nsw i32 %822, %16
  %824 = sext i32 %823 to i64
  %825 = getelementptr inbounds i8, ptr %776, i64 %824
  %826 = add nsw i32 %806, %798
  %827 = shl i32 %826, %32
  %828 = add nsw i32 %827, %28
  %829 = mul nsw i32 %828, %16
  %830 = sext i32 %829 to i64
  %831 = getelementptr inbounds i8, ptr %776, i64 %830
  %832 = add nsw i32 %806, %799
  %833 = shl i32 %832, %32
  %834 = add nsw i32 %833, %28
  %835 = mul nsw i32 %834, %16
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds i8, ptr %776, i64 %836
  br i1 %785, label %912, label %838

838:                                              ; preds = %803
  %839 = add i64 %780, %836
  %840 = add i64 %781, %811
  %841 = sub i64 %839, %840
  %842 = icmp ult i64 %841, 128
  %843 = add i64 %782, %818
  %844 = sub i64 %839, %843
  %845 = icmp ult i64 %844, 128
  %846 = or i1 %842, %845
  %847 = add i64 %783, %824
  %848 = sub i64 %839, %847
  %849 = icmp ult i64 %848, 128
  %850 = or i1 %846, %849
  %851 = add i64 %784, %830
  %852 = sub i64 %839, %851
  %853 = icmp ult i64 %852, 128
  %854 = or i1 %850, %853
  br i1 %854, label %912, label %855

855:                                              ; preds = %838, %855
  %856 = phi i64 [ %909, %855 ], [ 0, %838 ]
  %857 = getelementptr inbounds float, ptr %812, i64 %856
  %858 = load <8 x float>, ptr %857, align 4, !tbaa !65
  %859 = getelementptr inbounds float, ptr %857, i64 8
  %860 = load <8 x float>, ptr %859, align 4, !tbaa !65
  %861 = getelementptr inbounds float, ptr %857, i64 16
  %862 = load <8 x float>, ptr %861, align 4, !tbaa !65
  %863 = getelementptr inbounds float, ptr %857, i64 24
  %864 = load <8 x float>, ptr %863, align 4, !tbaa !65
  %865 = getelementptr inbounds float, ptr %819, i64 %856
  %866 = load <8 x float>, ptr %865, align 4, !tbaa !65
  %867 = getelementptr inbounds float, ptr %865, i64 8
  %868 = load <8 x float>, ptr %867, align 4, !tbaa !65
  %869 = getelementptr inbounds float, ptr %865, i64 16
  %870 = load <8 x float>, ptr %869, align 4, !tbaa !65
  %871 = getelementptr inbounds float, ptr %865, i64 24
  %872 = load <8 x float>, ptr %871, align 4, !tbaa !65
  %873 = fadd fast <8 x float> %866, %858
  %874 = fadd fast <8 x float> %868, %860
  %875 = fadd fast <8 x float> %870, %862
  %876 = fadd fast <8 x float> %872, %864
  %877 = getelementptr inbounds float, ptr %825, i64 %856
  %878 = load <8 x float>, ptr %877, align 4, !tbaa !65
  %879 = getelementptr inbounds float, ptr %877, i64 8
  %880 = load <8 x float>, ptr %879, align 4, !tbaa !65
  %881 = getelementptr inbounds float, ptr %877, i64 16
  %882 = load <8 x float>, ptr %881, align 4, !tbaa !65
  %883 = getelementptr inbounds float, ptr %877, i64 24
  %884 = load <8 x float>, ptr %883, align 4, !tbaa !65
  %885 = fadd fast <8 x float> %873, %878
  %886 = fadd fast <8 x float> %874, %880
  %887 = fadd fast <8 x float> %875, %882
  %888 = fadd fast <8 x float> %876, %884
  %889 = getelementptr inbounds float, ptr %831, i64 %856
  %890 = load <8 x float>, ptr %889, align 4, !tbaa !65
  %891 = getelementptr inbounds float, ptr %889, i64 8
  %892 = load <8 x float>, ptr %891, align 4, !tbaa !65
  %893 = getelementptr inbounds float, ptr %889, i64 16
  %894 = load <8 x float>, ptr %893, align 4, !tbaa !65
  %895 = getelementptr inbounds float, ptr %889, i64 24
  %896 = load <8 x float>, ptr %895, align 4, !tbaa !65
  %897 = fadd fast <8 x float> %885, %890
  %898 = fadd fast <8 x float> %886, %892
  %899 = fadd fast <8 x float> %887, %894
  %900 = fadd fast <8 x float> %888, %896
  %901 = fmul fast <8 x float> %897, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %902 = fmul fast <8 x float> %898, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %903 = fmul fast <8 x float> %899, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %904 = fmul fast <8 x float> %900, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %905 = getelementptr inbounds float, ptr %837, i64 %856
  store <8 x float> %901, ptr %905, align 4, !tbaa !65
  %906 = getelementptr inbounds float, ptr %905, i64 8
  store <8 x float> %902, ptr %906, align 4, !tbaa !65
  %907 = getelementptr inbounds float, ptr %905, i64 16
  store <8 x float> %903, ptr %907, align 4, !tbaa !65
  %908 = getelementptr inbounds float, ptr %905, i64 24
  store <8 x float> %904, ptr %908, align 4, !tbaa !65
  %909 = add nuw i64 %856, 32
  %910 = icmp eq i64 %909, %786
  br i1 %910, label %911, label %855, !llvm.loop !626

911:                                              ; preds = %855
  br i1 %787, label %964, label %912

912:                                              ; preds = %838, %803, %911
  %913 = phi i64 [ 0, %838 ], [ 0, %803 ], [ %786, %911 ]
  %914 = xor i64 %913, -1
  br i1 %789, label %930, label %915

915:                                              ; preds = %912
  %916 = getelementptr inbounds float, ptr %812, i64 %913
  %917 = load float, ptr %916, align 4, !tbaa !65
  %918 = getelementptr inbounds float, ptr %819, i64 %913
  %919 = load float, ptr %918, align 4, !tbaa !65
  %920 = fadd fast float %919, %917
  %921 = getelementptr inbounds float, ptr %825, i64 %913
  %922 = load float, ptr %921, align 4, !tbaa !65
  %923 = fadd fast float %920, %922
  %924 = getelementptr inbounds float, ptr %831, i64 %913
  %925 = load float, ptr %924, align 4, !tbaa !65
  %926 = fadd fast float %923, %925
  %927 = fmul fast float %926, 2.500000e-01
  %928 = getelementptr inbounds float, ptr %837, i64 %913
  store float %927, ptr %928, align 4, !tbaa !65
  %929 = or i64 %913, 1
  br label %930

930:                                              ; preds = %915, %912
  %931 = phi i64 [ %913, %912 ], [ %929, %915 ]
  %932 = icmp eq i64 %914, %790
  br i1 %932, label %964, label %933

933:                                              ; preds = %930, %933
  %934 = phi i64 [ %962, %933 ], [ %931, %930 ]
  %935 = getelementptr inbounds float, ptr %812, i64 %934
  %936 = load float, ptr %935, align 4, !tbaa !65
  %937 = getelementptr inbounds float, ptr %819, i64 %934
  %938 = load float, ptr %937, align 4, !tbaa !65
  %939 = fadd fast float %938, %936
  %940 = getelementptr inbounds float, ptr %825, i64 %934
  %941 = load float, ptr %940, align 4, !tbaa !65
  %942 = fadd fast float %939, %941
  %943 = getelementptr inbounds float, ptr %831, i64 %934
  %944 = load float, ptr %943, align 4, !tbaa !65
  %945 = fadd fast float %942, %944
  %946 = fmul fast float %945, 2.500000e-01
  %947 = getelementptr inbounds float, ptr %837, i64 %934
  store float %946, ptr %947, align 4, !tbaa !65
  %948 = add nuw nsw i64 %934, 1
  %949 = getelementptr inbounds float, ptr %812, i64 %948
  %950 = load float, ptr %949, align 4, !tbaa !65
  %951 = getelementptr inbounds float, ptr %819, i64 %948
  %952 = load float, ptr %951, align 4, !tbaa !65
  %953 = fadd fast float %952, %950
  %954 = getelementptr inbounds float, ptr %825, i64 %948
  %955 = load float, ptr %954, align 4, !tbaa !65
  %956 = fadd fast float %953, %955
  %957 = getelementptr inbounds float, ptr %831, i64 %948
  %958 = load float, ptr %957, align 4, !tbaa !65
  %959 = fadd fast float %956, %958
  %960 = fmul fast float %959, 2.500000e-01
  %961 = getelementptr inbounds float, ptr %837, i64 %948
  store float %960, ptr %961, align 4, !tbaa !65
  %962 = add nuw nsw i64 %934, 2
  %963 = icmp eq i64 %962, %779
  br i1 %963, label %964, label %933, !llvm.loop !627

964:                                              ; preds = %930, %933, %911
  %965 = icmp eq i32 %813, %13
  br i1 %965, label %800, label %803, !llvm.loop !628

966:                                              ; preds = %800, %769, %415, %370, %414
  %967 = add nuw nsw i64 %371, 1
  %968 = icmp eq i64 %967, %336
  br i1 %968, label %969, label %370, !llvm.loop !629

969:                                              ; preds = %966, %100, %330
  %970 = add nuw nsw i64 %101, 1
  %971 = icmp eq i64 %970, %36
  br i1 %971, label %42, label %100, !llvm.loop !630

972:                                              ; preds = %2076, %42
  %973 = icmp sgt i32 %4, 0
  br i1 %973, label %974, label %2079

974:                                              ; preds = %972
  %975 = mul nsw i32 %16, %7
  %976 = sext i32 %975 to i64
  %977 = mul nsw i32 %16, %14
  %978 = sext i32 %977 to i64
  %979 = icmp eq i32 %7, 0
  %980 = sitofp i32 %7 to float
  %981 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 5
  %982 = getelementptr i8, ptr %0, i64 36
  %983 = add i32 %12, %11
  %984 = add i32 %11, -1
  %985 = add nsw i32 %10, -1
  %986 = shl nuw i32 1, %985
  %987 = freeze i32 %986
  %988 = add nuw nsw i32 %987, 1
  %989 = sub nsw i32 %10, %14
  %990 = add i32 %987, 2
  %991 = mul i32 %988, %990
  %992 = shl i32 %990, %7
  %993 = sub i32 %992, %990
  %994 = shl i32 %993, %989
  %995 = add nsw i32 %994, %988
  %996 = mul nsw i32 %995, %16
  %997 = sext i32 %996 to i64
  %998 = zext i32 %4 to i64
  %999 = add nsw i64 %978, 40
  %1000 = add nsw i64 %978, 40
  %1001 = add nsw i64 %976, 40
  %1002 = add nsw i64 %976, 40
  %1003 = add nsw i64 %978, 40
  %1004 = add nsw i64 %976, 40
  %1005 = add nsw i64 %978, 40
  %1006 = add nsw i64 %978, 40
  %1007 = add nsw i64 %978, 40
  %1008 = add nsw i64 %976, 40
  %1009 = add nsw i64 %997, 24
  %1010 = add nsw i64 %978, 40
  %1011 = add nsw i64 %978, 40
  %1012 = add nsw i64 %976, 40
  br label %2122

1013:                                             ; preds = %44, %2076
  %1014 = phi i64 [ 0, %44 ], [ %2077, %2076 ]
  %1015 = getelementptr inbounds ptr, ptr %2, i64 %1014
  %1016 = load ptr, ptr %1015, align 8, !tbaa !14
  %1017 = ptrtoint ptr %1016 to i64
  %1018 = getelementptr inbounds %struct.CCGEdge, ptr %1016, i64 0, i32 4
  %1019 = load float, ptr %1018, align 4, !tbaa !116
  br i1 %45, label %1026, label %1020

1020:                                             ; preds = %1013
  %1021 = fcmp fast une float %1019, 0.000000e+00
  br i1 %1021, label %1022, label %1026

1022:                                             ; preds = %1020
  %1023 = fsub fast float %1019, %46
  %1024 = fcmp fast olt float %1023, 0.000000e+00
  %1025 = select i1 %1024, float 0.000000e+00, float %1023
  br label %1026

1026:                                             ; preds = %1013, %1020, %1022
  %1027 = phi float [ 0.000000e+00, %1020 ], [ %1025, %1022 ], [ %1019, %1013 ]
  %1028 = getelementptr i8, ptr %1016, i64 16
  %1029 = load i16, ptr %1028, align 8, !tbaa !81
  %1030 = icmp slt i16 %1029, 2
  %1031 = fcmp fast ogt float %1027, 1.000000e+00
  %1032 = select i1 %1030, i1 true, i1 %1031
  br i1 %1032, label %1129, label %1033

1033:                                             ; preds = %1026
  br i1 %47, label %2076, label %1034

1034:                                             ; preds = %1033
  %1035 = getelementptr inbounds %struct.CCGEdge, ptr %1016, i64 1
  %1036 = load i32, ptr %51, align 4, !tbaa !74
  %1037 = icmp sgt i32 %1036, 0
  %1038 = zext i32 %1036 to i64
  %1039 = getelementptr inbounds %struct.CCGEdge, ptr %1016, i64 0, i32 7
  %1040 = getelementptr i8, ptr %1016, i64 24
  %1041 = zext i16 %1029 to i64
  %1042 = getelementptr i8, ptr %1016, i64 48
  %1043 = getelementptr i8, ptr %1016, i64 48
  %1044 = shl nuw nsw i64 %1038, 2
  %1045 = getelementptr i8, ptr %1043, i64 %1044
  %1046 = getelementptr i8, ptr %21, i64 %1044
  %1047 = shl nuw nsw i64 %1038, 2
  %1048 = getelementptr i8, ptr %21, i64 %1047
  %1049 = getelementptr i8, ptr %18, i64 %1047
  %1050 = add i64 %1017, 48
  %1051 = shl nuw nsw i64 %1038, 2
  %1052 = getelementptr i8, ptr %21, i64 %1051
  %1053 = add i64 %92, %1051
  %1054 = add i64 %94, %1017
  %1055 = shl nuw nsw i64 %1038, 2
  %1056 = getelementptr i8, ptr %18, i64 %1055
  %1057 = shl nuw nsw i64 %1038, 2
  %1058 = getelementptr i8, ptr %18, i64 %1057
  %1059 = add i64 %98, %1057
  %1060 = add i64 %99, %1017
  %1061 = icmp ult i32 %1036, 32
  %1062 = and i64 %1038, 4294967264
  %1063 = icmp eq i64 %1062, %1038
  %1064 = and i64 %1038, 3
  %1065 = icmp eq i64 %1064, 0
  %1066 = icmp ult i32 %1036, 32
  %1067 = and i64 %1038, 4294967264
  %1068 = icmp eq i64 %1067, %1038
  %1069 = and i64 %1038, 3
  %1070 = icmp eq i64 %1069, 0
  %1071 = load ptr, ptr %1039, align 8, !tbaa !52
  %1072 = load ptr, ptr %1040, align 8, !tbaa !83
  %1073 = icmp ult i32 %1036, 32
  %1074 = and i64 %1038, 4294967264
  %1075 = icmp eq i64 %1074, %1038
  %1076 = and i64 %1038, 3
  %1077 = icmp eq i64 %1076, 0
  %1078 = uitofp i16 %1029 to float
  %1079 = fadd fast float %1078, 2.000000e+00
  %1080 = icmp ult i32 %1036, 8
  %1081 = and i64 %1038, 4294967288
  %1082 = insertelement <8 x float> poison, float %1079, i64 0
  %1083 = shufflevector <8 x float> %1082, <8 x float> poison, <8 x i32> zeroinitializer
  %1084 = fdiv fast <8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1083
  %1085 = icmp eq i64 %1081, %1038
  %1086 = fdiv fast float 1.000000e+00, %1079
  %1087 = icmp ult i32 %1036, 32
  %1088 = and i64 %1038, 4294967264
  %1089 = icmp eq i64 %1088, %1038
  %1090 = and i64 %1038, 3
  %1091 = icmp eq i64 %1090, 0
  %1092 = icmp ult i32 %1036, 32
  %1093 = and i64 %1038, 4294967264
  %1094 = icmp eq i64 %1093, %1038
  %1095 = and i64 %1038, 3
  %1096 = icmp eq i64 %1095, 0
  %1097 = icmp ult i32 %1036, 32
  %1098 = and i64 %1038, 4294967264
  %1099 = icmp eq i64 %1098, %1038
  %1100 = icmp ult i32 %1036, 32
  %1101 = and i64 %1038, 4294967264
  %1102 = icmp eq i64 %1101, %1038
  %1103 = and i64 %1038, 3
  %1104 = icmp eq i64 %1103, 0
  %1105 = icmp ult i32 %1036, 32
  %1106 = icmp ult ptr %21, %1049
  %1107 = icmp ult ptr %18, %1048
  %1108 = and i1 %1106, %1107
  %1109 = and i64 %1038, 4294967264
  %1110 = icmp eq i64 %1109, %1038
  %1111 = and i64 %1038, 3
  %1112 = icmp eq i64 %1111, 0
  %1113 = icmp ult i32 %1036, 32
  %1114 = and i64 %1038, 4294967264
  %1115 = insertelement <8 x float> poison, float %1027, i64 0
  %1116 = shufflevector <8 x float> %1115, <8 x float> poison, <8 x i32> zeroinitializer
  %1117 = insertelement <8 x float> poison, float %1027, i64 0
  %1118 = shufflevector <8 x float> %1117, <8 x float> poison, <8 x i32> zeroinitializer
  %1119 = insertelement <8 x float> poison, float %1027, i64 0
  %1120 = shufflevector <8 x float> %1119, <8 x float> poison, <8 x i32> zeroinitializer
  %1121 = insertelement <8 x float> poison, float %1027, i64 0
  %1122 = shufflevector <8 x float> %1121, <8 x float> poison, <8 x i32> zeroinitializer
  %1123 = icmp eq i64 %1114, %1038
  %1124 = icmp ult i32 %1036, 32
  %1125 = and i64 %1038, 4294967264
  %1126 = icmp eq i64 %1125, %1038
  %1127 = and i64 %1038, 3
  %1128 = icmp eq i64 %1127, 0
  br label %1348

1129:                                             ; preds = %1026
  br i1 %47, label %2076, label %1130

1130:                                             ; preds = %1129
  %1131 = getelementptr inbounds %struct.CCGEdge, ptr %1016, i64 1
  %1132 = load i32, ptr %51, align 4, !tbaa !74
  %1133 = icmp sgt i32 %1132, 0
  %1134 = zext i32 %1132 to i64
  br i1 %1133, label %1135, label %2076

1135:                                             ; preds = %1130
  %1136 = getelementptr i8, ptr %1016, i64 48
  %1137 = getelementptr i8, ptr %1016, i64 48
  %1138 = shl nuw nsw i64 %1134, 2
  %1139 = getelementptr i8, ptr %1137, i64 %1138
  %1140 = add i64 %78, %1138
  %1141 = add i64 %1017, 48
  %1142 = add i64 %84, %1017
  %1143 = icmp ult i32 %1132, 32
  %1144 = and i64 %1134, 4294967264
  %1145 = icmp eq i64 %1144, %1134
  %1146 = and i64 %1134, 3
  %1147 = icmp eq i64 %1146, 0
  %1148 = icmp ult i32 %1132, 32
  %1149 = and i64 %1134, 4294967264
  %1150 = icmp eq i64 %1149, %1134
  %1151 = and i64 %1134, 3
  %1152 = icmp eq i64 %1151, 0
  %1153 = icmp ult i32 %1132, 32
  %1154 = and i64 %1134, 4294967264
  %1155 = icmp eq i64 %1154, %1134
  br label %1156

1156:                                             ; preds = %1135, %1346
  %1157 = phi i64 [ %1172, %1346 ], [ 0, %1135 ]
  %1158 = trunc i64 %1157 to i32
  %1159 = mul i32 %74, %1158
  %1160 = add i32 %1159, %73
  %1161 = sext i32 %1160 to i64
  %1162 = getelementptr i8, ptr %1136, i64 %1161
  %1163 = getelementptr i8, ptr %1139, i64 %1161
  %1164 = mul i64 %1157, %66
  %1165 = add i64 %77, %1164
  %1166 = getelementptr i8, ptr %1016, i64 %1165
  %1167 = add i64 %1140, %1164
  %1168 = getelementptr i8, ptr %1016, i64 %1167
  %1169 = add nsw i64 %1157, %65
  %1170 = mul nsw i64 %1169, %66
  %1171 = getelementptr inbounds i8, ptr %1131, i64 %1170
  %1172 = add nuw nsw i64 %1157, 1
  %1173 = add nsw i64 %1172, %65
  %1174 = mul nsw i64 %1173, %66
  %1175 = trunc i64 %1157 to i32
  %1176 = shl i32 %1175, 1
  %1177 = add i32 %64, %1176
  %1178 = mul nsw i32 %1177, %16
  %1179 = sext i32 %1178 to i64
  %1180 = getelementptr inbounds i8, ptr %1131, i64 %1179
  br i1 %1143, label %1208, label %1181

1181:                                             ; preds = %1156
  %1182 = mul i64 %1157, %66
  %1183 = add i64 %1142, %1182
  %1184 = trunc i64 %1157 to i32
  %1185 = mul i32 %82, %1184
  %1186 = add i32 %1185, %81
  %1187 = sext i32 %1186 to i64
  %1188 = add i64 %1141, %1187
  %1189 = sub i64 %1188, %1183
  %1190 = icmp ult i64 %1189, 128
  br i1 %1190, label %1208, label %1191

1191:                                             ; preds = %1181, %1191
  %1192 = phi i64 [ %1205, %1191 ], [ 0, %1181 ]
  %1193 = getelementptr inbounds float, ptr %1171, i64 %1192
  %1194 = load <8 x float>, ptr %1193, align 4, !tbaa !65
  %1195 = getelementptr inbounds float, ptr %1193, i64 8
  %1196 = load <8 x float>, ptr %1195, align 4, !tbaa !65
  %1197 = getelementptr inbounds float, ptr %1193, i64 16
  %1198 = load <8 x float>, ptr %1197, align 4, !tbaa !65
  %1199 = getelementptr inbounds float, ptr %1193, i64 24
  %1200 = load <8 x float>, ptr %1199, align 4, !tbaa !65
  %1201 = getelementptr inbounds float, ptr %1180, i64 %1192
  store <8 x float> %1194, ptr %1201, align 4, !tbaa !65
  %1202 = getelementptr inbounds float, ptr %1201, i64 8
  store <8 x float> %1196, ptr %1202, align 4, !tbaa !65
  %1203 = getelementptr inbounds float, ptr %1201, i64 16
  store <8 x float> %1198, ptr %1203, align 4, !tbaa !65
  %1204 = getelementptr inbounds float, ptr %1201, i64 24
  store <8 x float> %1200, ptr %1204, align 4, !tbaa !65
  %1205 = add nuw i64 %1192, 32
  %1206 = icmp eq i64 %1205, %1144
  br i1 %1206, label %1207, label %1191, !llvm.loop !631

1207:                                             ; preds = %1191
  br i1 %1145, label %1243, label %1208

1208:                                             ; preds = %1181, %1156, %1207
  %1209 = phi i64 [ 0, %1181 ], [ 0, %1156 ], [ %1144, %1207 ]
  %1210 = xor i64 %1209, -1
  %1211 = add nsw i64 %1210, %1134
  br i1 %1147, label %1221, label %1212

1212:                                             ; preds = %1208, %1212
  %1213 = phi i64 [ %1218, %1212 ], [ %1209, %1208 ]
  %1214 = phi i64 [ %1219, %1212 ], [ 0, %1208 ]
  %1215 = getelementptr inbounds float, ptr %1171, i64 %1213
  %1216 = load float, ptr %1215, align 4, !tbaa !65
  %1217 = getelementptr inbounds float, ptr %1180, i64 %1213
  store float %1216, ptr %1217, align 4, !tbaa !65
  %1218 = add nuw nsw i64 %1213, 1
  %1219 = add i64 %1214, 1
  %1220 = icmp eq i64 %1219, %1146
  br i1 %1220, label %1221, label %1212, !llvm.loop !632

1221:                                             ; preds = %1212, %1208
  %1222 = phi i64 [ %1209, %1208 ], [ %1218, %1212 ]
  %1223 = icmp ult i64 %1211, 3
  br i1 %1223, label %1243, label %1224

1224:                                             ; preds = %1221, %1224
  %1225 = phi i64 [ %1241, %1224 ], [ %1222, %1221 ]
  %1226 = getelementptr inbounds float, ptr %1171, i64 %1225
  %1227 = load float, ptr %1226, align 4, !tbaa !65
  %1228 = getelementptr inbounds float, ptr %1180, i64 %1225
  store float %1227, ptr %1228, align 4, !tbaa !65
  %1229 = add nuw nsw i64 %1225, 1
  %1230 = getelementptr inbounds float, ptr %1171, i64 %1229
  %1231 = load float, ptr %1230, align 4, !tbaa !65
  %1232 = getelementptr inbounds float, ptr %1180, i64 %1229
  store float %1231, ptr %1232, align 4, !tbaa !65
  %1233 = add nuw nsw i64 %1225, 2
  %1234 = getelementptr inbounds float, ptr %1171, i64 %1233
  %1235 = load float, ptr %1234, align 4, !tbaa !65
  %1236 = getelementptr inbounds float, ptr %1180, i64 %1233
  store float %1235, ptr %1236, align 4, !tbaa !65
  %1237 = add nuw nsw i64 %1225, 3
  %1238 = getelementptr inbounds float, ptr %1171, i64 %1237
  %1239 = load float, ptr %1238, align 4, !tbaa !65
  %1240 = getelementptr inbounds float, ptr %1180, i64 %1237
  store float %1239, ptr %1240, align 4, !tbaa !65
  %1241 = add nuw nsw i64 %1225, 4
  %1242 = icmp eq i64 %1241, %1134
  br i1 %1242, label %1243, label %1224, !llvm.loop !633

1243:                                             ; preds = %1221, %1224, %1207
  %1244 = getelementptr inbounds i8, ptr %1131, i64 %1174
  br i1 %1148, label %1274, label %1245

1245:                                             ; preds = %1243
  %1246 = icmp ult ptr %1162, %1168
  %1247 = icmp ult ptr %1166, %1163
  %1248 = and i1 %1246, %1247
  br i1 %1248, label %1274, label %1249

1249:                                             ; preds = %1245, %1249
  %1250 = phi i64 [ %1271, %1249 ], [ 0, %1245 ]
  %1251 = getelementptr inbounds float, ptr %1244, i64 %1250
  %1252 = load <8 x float>, ptr %1251, align 4, !tbaa !65, !alias.scope !634
  %1253 = getelementptr inbounds float, ptr %1251, i64 8
  %1254 = load <8 x float>, ptr %1253, align 4, !tbaa !65, !alias.scope !634
  %1255 = getelementptr inbounds float, ptr %1251, i64 16
  %1256 = load <8 x float>, ptr %1255, align 4, !tbaa !65, !alias.scope !634
  %1257 = getelementptr inbounds float, ptr %1251, i64 24
  %1258 = load <8 x float>, ptr %1257, align 4, !tbaa !65, !alias.scope !634
  %1259 = getelementptr inbounds float, ptr %1180, i64 %1250
  %1260 = load <8 x float>, ptr %1259, align 4, !tbaa !65, !alias.scope !637, !noalias !634
  %1261 = getelementptr inbounds float, ptr %1259, i64 8
  %1262 = load <8 x float>, ptr %1261, align 4, !tbaa !65, !alias.scope !637, !noalias !634
  %1263 = getelementptr inbounds float, ptr %1259, i64 16
  %1264 = load <8 x float>, ptr %1263, align 4, !tbaa !65, !alias.scope !637, !noalias !634
  %1265 = getelementptr inbounds float, ptr %1259, i64 24
  %1266 = load <8 x float>, ptr %1265, align 4, !tbaa !65, !alias.scope !637, !noalias !634
  %1267 = fadd fast <8 x float> %1260, %1252
  %1268 = fadd fast <8 x float> %1262, %1254
  %1269 = fadd fast <8 x float> %1264, %1256
  %1270 = fadd fast <8 x float> %1266, %1258
  store <8 x float> %1267, ptr %1259, align 4, !tbaa !65, !alias.scope !637, !noalias !634
  store <8 x float> %1268, ptr %1261, align 4, !tbaa !65, !alias.scope !637, !noalias !634
  store <8 x float> %1269, ptr %1263, align 4, !tbaa !65, !alias.scope !637, !noalias !634
  store <8 x float> %1270, ptr %1265, align 4, !tbaa !65, !alias.scope !637, !noalias !634
  %1271 = add nuw i64 %1250, 32
  %1272 = icmp eq i64 %1271, %1149
  br i1 %1272, label %1273, label %1249, !llvm.loop !639

1273:                                             ; preds = %1249
  br i1 %1150, label %1319, label %1274

1274:                                             ; preds = %1245, %1243, %1273
  %1275 = phi i64 [ 0, %1245 ], [ 0, %1243 ], [ %1149, %1273 ]
  %1276 = xor i64 %1275, -1
  %1277 = add nsw i64 %1276, %1134
  br i1 %1152, label %1289, label %1278

1278:                                             ; preds = %1274, %1278
  %1279 = phi i64 [ %1286, %1278 ], [ %1275, %1274 ]
  %1280 = phi i64 [ %1287, %1278 ], [ 0, %1274 ]
  %1281 = getelementptr inbounds float, ptr %1244, i64 %1279
  %1282 = load float, ptr %1281, align 4, !tbaa !65
  %1283 = getelementptr inbounds float, ptr %1180, i64 %1279
  %1284 = load float, ptr %1283, align 4, !tbaa !65
  %1285 = fadd fast float %1284, %1282
  store float %1285, ptr %1283, align 4, !tbaa !65
  %1286 = add nuw nsw i64 %1279, 1
  %1287 = add i64 %1280, 1
  %1288 = icmp eq i64 %1287, %1151
  br i1 %1288, label %1289, label %1278, !llvm.loop !640

1289:                                             ; preds = %1278, %1274
  %1290 = phi i64 [ %1275, %1274 ], [ %1286, %1278 ]
  %1291 = icmp ult i64 %1277, 3
  br i1 %1291, label %1319, label %1292

1292:                                             ; preds = %1289, %1292
  %1293 = phi i64 [ %1317, %1292 ], [ %1290, %1289 ]
  %1294 = getelementptr inbounds float, ptr %1244, i64 %1293
  %1295 = load float, ptr %1294, align 4, !tbaa !65
  %1296 = getelementptr inbounds float, ptr %1180, i64 %1293
  %1297 = load float, ptr %1296, align 4, !tbaa !65
  %1298 = fadd fast float %1297, %1295
  store float %1298, ptr %1296, align 4, !tbaa !65
  %1299 = add nuw nsw i64 %1293, 1
  %1300 = getelementptr inbounds float, ptr %1244, i64 %1299
  %1301 = load float, ptr %1300, align 4, !tbaa !65
  %1302 = getelementptr inbounds float, ptr %1180, i64 %1299
  %1303 = load float, ptr %1302, align 4, !tbaa !65
  %1304 = fadd fast float %1303, %1301
  store float %1304, ptr %1302, align 4, !tbaa !65
  %1305 = add nuw nsw i64 %1293, 2
  %1306 = getelementptr inbounds float, ptr %1244, i64 %1305
  %1307 = load float, ptr %1306, align 4, !tbaa !65
  %1308 = getelementptr inbounds float, ptr %1180, i64 %1305
  %1309 = load float, ptr %1308, align 4, !tbaa !65
  %1310 = fadd fast float %1309, %1307
  store float %1310, ptr %1308, align 4, !tbaa !65
  %1311 = add nuw nsw i64 %1293, 3
  %1312 = getelementptr inbounds float, ptr %1244, i64 %1311
  %1313 = load float, ptr %1312, align 4, !tbaa !65
  %1314 = getelementptr inbounds float, ptr %1180, i64 %1311
  %1315 = load float, ptr %1314, align 4, !tbaa !65
  %1316 = fadd fast float %1315, %1313
  store float %1316, ptr %1314, align 4, !tbaa !65
  %1317 = add nuw nsw i64 %1293, 4
  %1318 = icmp eq i64 %1317, %1134
  br i1 %1318, label %1319, label %1292, !llvm.loop !641

1319:                                             ; preds = %1289, %1292, %1273
  br i1 %1153, label %1337, label %1320

1320:                                             ; preds = %1319, %1320
  %1321 = phi i64 [ %1334, %1320 ], [ 0, %1319 ]
  %1322 = getelementptr inbounds float, ptr %1180, i64 %1321
  %1323 = load <8 x float>, ptr %1322, align 4, !tbaa !65
  %1324 = getelementptr inbounds float, ptr %1322, i64 8
  %1325 = load <8 x float>, ptr %1324, align 4, !tbaa !65
  %1326 = getelementptr inbounds float, ptr %1322, i64 16
  %1327 = load <8 x float>, ptr %1326, align 4, !tbaa !65
  %1328 = getelementptr inbounds float, ptr %1322, i64 24
  %1329 = load <8 x float>, ptr %1328, align 4, !tbaa !65
  %1330 = fmul fast <8 x float> %1323, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %1331 = fmul fast <8 x float> %1325, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %1332 = fmul fast <8 x float> %1327, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %1333 = fmul fast <8 x float> %1329, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  store <8 x float> %1330, ptr %1322, align 4, !tbaa !65
  store <8 x float> %1331, ptr %1324, align 4, !tbaa !65
  store <8 x float> %1332, ptr %1326, align 4, !tbaa !65
  store <8 x float> %1333, ptr %1328, align 4, !tbaa !65
  %1334 = add nuw i64 %1321, 32
  %1335 = icmp eq i64 %1334, %1154
  br i1 %1335, label %1336, label %1320, !llvm.loop !642

1336:                                             ; preds = %1320
  br i1 %1155, label %1346, label %1337

1337:                                             ; preds = %1319, %1336
  %1338 = phi i64 [ 0, %1319 ], [ %1154, %1336 ]
  br label %1339

1339:                                             ; preds = %1337, %1339
  %1340 = phi i64 [ %1344, %1339 ], [ %1338, %1337 ]
  %1341 = getelementptr inbounds float, ptr %1180, i64 %1340
  %1342 = load float, ptr %1341, align 4, !tbaa !65
  %1343 = fmul fast float %1342, 5.000000e-01
  store float %1343, ptr %1341, align 4, !tbaa !65
  %1344 = add nuw nsw i64 %1340, 1
  %1345 = icmp eq i64 %1344, %1134
  br i1 %1345, label %1346, label %1339, !llvm.loop !643

1346:                                             ; preds = %1339, %1336
  %1347 = icmp eq i64 %1172, %70
  br i1 %1347, label %2076, label %1156, !llvm.loop !644

1348:                                             ; preds = %1034, %2074
  %1349 = phi i64 [ 0, %1034 ], [ %1376, %2074 ]
  %1350 = mul i64 %1349, %66
  %1351 = add i64 %97, %1350
  %1352 = getelementptr i8, ptr %1016, i64 %1351
  %1353 = add i64 %1059, %1350
  %1354 = getelementptr i8, ptr %1016, i64 %1353
  %1355 = mul i64 %1349, %66
  %1356 = add i64 %1054, %1355
  %1357 = mul i64 %1349, %66
  %1358 = add i64 %91, %1357
  %1359 = getelementptr i8, ptr %1016, i64 %1358
  %1360 = add i64 %1053, %1357
  %1361 = getelementptr i8, ptr %1016, i64 %1360
  %1362 = trunc i64 %1349 to i32
  %1363 = mul i32 %88, %1362
  %1364 = add i32 %1363, %87
  %1365 = sext i32 %1364 to i64
  %1366 = add i64 %1050, %1365
  %1367 = trunc i64 %1349 to i32
  %1368 = mul i32 %88, %1367
  %1369 = add i32 %1368, %87
  %1370 = sext i32 %1369 to i64
  %1371 = getelementptr i8, ptr %1042, i64 %1370
  %1372 = getelementptr i8, ptr %1045, i64 %1370
  %1373 = add nsw i64 %1349, %65
  %1374 = mul nsw i64 %1373, %66
  %1375 = getelementptr inbounds i8, ptr %1035, i64 %1374
  %1376 = add nuw nsw i64 %1349, 1
  %1377 = add nsw i64 %1376, %65
  %1378 = mul nsw i64 %1377, %66
  %1379 = getelementptr inbounds i8, ptr %1035, i64 %1378
  %1380 = trunc i64 %1349 to i32
  %1381 = shl i32 %1380, 1
  %1382 = or i32 %1381, 1
  %1383 = add nsw i32 %50, %1382
  %1384 = mul nsw i32 %1383, %16
  %1385 = sext i32 %1384 to i64
  %1386 = getelementptr inbounds i8, ptr %1035, i64 %1385
  br i1 %1037, label %1387, label %1520

1387:                                             ; preds = %1348
  %1388 = mul i64 %1349, %66
  %1389 = add i64 %1060, %1388
  %1390 = sub i64 %19, %1389
  %1391 = icmp ult i64 %1390, 128
  %1392 = select i1 %1061, i1 true, i1 %1391
  br i1 %1392, label %1410, label %1393

1393:                                             ; preds = %1387, %1393
  %1394 = phi i64 [ %1407, %1393 ], [ 0, %1387 ]
  %1395 = getelementptr inbounds float, ptr %1375, i64 %1394
  %1396 = load <8 x float>, ptr %1395, align 4, !tbaa !65
  %1397 = getelementptr inbounds float, ptr %1395, i64 8
  %1398 = load <8 x float>, ptr %1397, align 4, !tbaa !65
  %1399 = getelementptr inbounds float, ptr %1395, i64 16
  %1400 = load <8 x float>, ptr %1399, align 4, !tbaa !65
  %1401 = getelementptr inbounds float, ptr %1395, i64 24
  %1402 = load <8 x float>, ptr %1401, align 4, !tbaa !65
  %1403 = getelementptr inbounds float, ptr %18, i64 %1394
  store <8 x float> %1396, ptr %1403, align 4, !tbaa !65
  %1404 = getelementptr inbounds float, ptr %1403, i64 8
  store <8 x float> %1398, ptr %1404, align 4, !tbaa !65
  %1405 = getelementptr inbounds float, ptr %1403, i64 16
  store <8 x float> %1400, ptr %1405, align 4, !tbaa !65
  %1406 = getelementptr inbounds float, ptr %1403, i64 24
  store <8 x float> %1402, ptr %1406, align 4, !tbaa !65
  %1407 = add nuw i64 %1394, 32
  %1408 = icmp eq i64 %1407, %1062
  br i1 %1408, label %1409, label %1393, !llvm.loop !645

1409:                                             ; preds = %1393
  br i1 %1063, label %1445, label %1410

1410:                                             ; preds = %1387, %1409
  %1411 = phi i64 [ 0, %1387 ], [ %1062, %1409 ]
  %1412 = xor i64 %1411, -1
  %1413 = add nsw i64 %1412, %1038
  br i1 %1065, label %1423, label %1414

1414:                                             ; preds = %1410, %1414
  %1415 = phi i64 [ %1420, %1414 ], [ %1411, %1410 ]
  %1416 = phi i64 [ %1421, %1414 ], [ 0, %1410 ]
  %1417 = getelementptr inbounds float, ptr %1375, i64 %1415
  %1418 = load float, ptr %1417, align 4, !tbaa !65
  %1419 = getelementptr inbounds float, ptr %18, i64 %1415
  store float %1418, ptr %1419, align 4, !tbaa !65
  %1420 = add nuw nsw i64 %1415, 1
  %1421 = add i64 %1416, 1
  %1422 = icmp eq i64 %1421, %1064
  br i1 %1422, label %1423, label %1414, !llvm.loop !646

1423:                                             ; preds = %1414, %1410
  %1424 = phi i64 [ %1411, %1410 ], [ %1420, %1414 ]
  %1425 = icmp ult i64 %1413, 3
  br i1 %1425, label %1445, label %1426

1426:                                             ; preds = %1423, %1426
  %1427 = phi i64 [ %1443, %1426 ], [ %1424, %1423 ]
  %1428 = getelementptr inbounds float, ptr %1375, i64 %1427
  %1429 = load float, ptr %1428, align 4, !tbaa !65
  %1430 = getelementptr inbounds float, ptr %18, i64 %1427
  store float %1429, ptr %1430, align 4, !tbaa !65
  %1431 = add nuw nsw i64 %1427, 1
  %1432 = getelementptr inbounds float, ptr %1375, i64 %1431
  %1433 = load float, ptr %1432, align 4, !tbaa !65
  %1434 = getelementptr inbounds float, ptr %18, i64 %1431
  store float %1433, ptr %1434, align 4, !tbaa !65
  %1435 = add nuw nsw i64 %1427, 2
  %1436 = getelementptr inbounds float, ptr %1375, i64 %1435
  %1437 = load float, ptr %1436, align 4, !tbaa !65
  %1438 = getelementptr inbounds float, ptr %18, i64 %1435
  store float %1437, ptr %1438, align 4, !tbaa !65
  %1439 = add nuw nsw i64 %1427, 3
  %1440 = getelementptr inbounds float, ptr %1375, i64 %1439
  %1441 = load float, ptr %1440, align 4, !tbaa !65
  %1442 = getelementptr inbounds float, ptr %18, i64 %1439
  store float %1441, ptr %1442, align 4, !tbaa !65
  %1443 = add nuw nsw i64 %1427, 4
  %1444 = icmp eq i64 %1443, %1038
  br i1 %1444, label %1445, label %1426, !llvm.loop !647

1445:                                             ; preds = %1423, %1426, %1409
  br i1 %1066, label %1475, label %1446

1446:                                             ; preds = %1445
  %1447 = icmp ult ptr %18, %1354
  %1448 = icmp ult ptr %1352, %1058
  %1449 = and i1 %1447, %1448
  br i1 %1449, label %1475, label %1450

1450:                                             ; preds = %1446, %1450
  %1451 = phi i64 [ %1472, %1450 ], [ 0, %1446 ]
  %1452 = getelementptr inbounds float, ptr %1379, i64 %1451
  %1453 = load <8 x float>, ptr %1452, align 4, !tbaa !65, !alias.scope !648
  %1454 = getelementptr inbounds float, ptr %1452, i64 8
  %1455 = load <8 x float>, ptr %1454, align 4, !tbaa !65, !alias.scope !648
  %1456 = getelementptr inbounds float, ptr %1452, i64 16
  %1457 = load <8 x float>, ptr %1456, align 4, !tbaa !65, !alias.scope !648
  %1458 = getelementptr inbounds float, ptr %1452, i64 24
  %1459 = load <8 x float>, ptr %1458, align 4, !tbaa !65, !alias.scope !648
  %1460 = getelementptr inbounds float, ptr %18, i64 %1451
  %1461 = load <8 x float>, ptr %1460, align 4, !tbaa !65, !alias.scope !651, !noalias !648
  %1462 = getelementptr inbounds float, ptr %1460, i64 8
  %1463 = load <8 x float>, ptr %1462, align 4, !tbaa !65, !alias.scope !651, !noalias !648
  %1464 = getelementptr inbounds float, ptr %1460, i64 16
  %1465 = load <8 x float>, ptr %1464, align 4, !tbaa !65, !alias.scope !651, !noalias !648
  %1466 = getelementptr inbounds float, ptr %1460, i64 24
  %1467 = load <8 x float>, ptr %1466, align 4, !tbaa !65, !alias.scope !651, !noalias !648
  %1468 = fadd fast <8 x float> %1461, %1453
  %1469 = fadd fast <8 x float> %1463, %1455
  %1470 = fadd fast <8 x float> %1465, %1457
  %1471 = fadd fast <8 x float> %1467, %1459
  store <8 x float> %1468, ptr %1460, align 4, !tbaa !65, !alias.scope !651, !noalias !648
  store <8 x float> %1469, ptr %1462, align 4, !tbaa !65, !alias.scope !651, !noalias !648
  store <8 x float> %1470, ptr %1464, align 4, !tbaa !65, !alias.scope !651, !noalias !648
  store <8 x float> %1471, ptr %1466, align 4, !tbaa !65, !alias.scope !651, !noalias !648
  %1472 = add nuw i64 %1451, 32
  %1473 = icmp eq i64 %1472, %1067
  br i1 %1473, label %1474, label %1450, !llvm.loop !653

1474:                                             ; preds = %1450
  br i1 %1068, label %1520, label %1475

1475:                                             ; preds = %1446, %1445, %1474
  %1476 = phi i64 [ 0, %1446 ], [ 0, %1445 ], [ %1067, %1474 ]
  %1477 = xor i64 %1476, -1
  %1478 = add nsw i64 %1477, %1038
  br i1 %1070, label %1490, label %1479

1479:                                             ; preds = %1475, %1479
  %1480 = phi i64 [ %1487, %1479 ], [ %1476, %1475 ]
  %1481 = phi i64 [ %1488, %1479 ], [ 0, %1475 ]
  %1482 = getelementptr inbounds float, ptr %1379, i64 %1480
  %1483 = load float, ptr %1482, align 4, !tbaa !65
  %1484 = getelementptr inbounds float, ptr %18, i64 %1480
  %1485 = load float, ptr %1484, align 4, !tbaa !65
  %1486 = fadd fast float %1485, %1483
  store float %1486, ptr %1484, align 4, !tbaa !65
  %1487 = add nuw nsw i64 %1480, 1
  %1488 = add i64 %1481, 1
  %1489 = icmp eq i64 %1488, %1069
  br i1 %1489, label %1490, label %1479, !llvm.loop !654

1490:                                             ; preds = %1479, %1475
  %1491 = phi i64 [ %1476, %1475 ], [ %1487, %1479 ]
  %1492 = icmp ult i64 %1478, 3
  br i1 %1492, label %1520, label %1493

1493:                                             ; preds = %1490, %1493
  %1494 = phi i64 [ %1518, %1493 ], [ %1491, %1490 ]
  %1495 = getelementptr inbounds float, ptr %1379, i64 %1494
  %1496 = load float, ptr %1495, align 4, !tbaa !65
  %1497 = getelementptr inbounds float, ptr %18, i64 %1494
  %1498 = load float, ptr %1497, align 4, !tbaa !65
  %1499 = fadd fast float %1498, %1496
  store float %1499, ptr %1497, align 4, !tbaa !65
  %1500 = add nuw nsw i64 %1494, 1
  %1501 = getelementptr inbounds float, ptr %1379, i64 %1500
  %1502 = load float, ptr %1501, align 4, !tbaa !65
  %1503 = getelementptr inbounds float, ptr %18, i64 %1500
  %1504 = load float, ptr %1503, align 4, !tbaa !65
  %1505 = fadd fast float %1504, %1502
  store float %1505, ptr %1503, align 4, !tbaa !65
  %1506 = add nuw nsw i64 %1494, 2
  %1507 = getelementptr inbounds float, ptr %1379, i64 %1506
  %1508 = load float, ptr %1507, align 4, !tbaa !65
  %1509 = getelementptr inbounds float, ptr %18, i64 %1506
  %1510 = load float, ptr %1509, align 4, !tbaa !65
  %1511 = fadd fast float %1510, %1508
  store float %1511, ptr %1509, align 4, !tbaa !65
  %1512 = add nuw nsw i64 %1494, 3
  %1513 = getelementptr inbounds float, ptr %1379, i64 %1512
  %1514 = load float, ptr %1513, align 4, !tbaa !65
  %1515 = getelementptr inbounds float, ptr %18, i64 %1512
  %1516 = load float, ptr %1515, align 4, !tbaa !65
  %1517 = fadd fast float %1516, %1514
  store float %1517, ptr %1515, align 4, !tbaa !65
  %1518 = add nuw nsw i64 %1494, 4
  %1519 = icmp eq i64 %1518, %1038
  br i1 %1519, label %1520, label %1493, !llvm.loop !655

1520:                                             ; preds = %1490, %1493, %1474, %1348
  %1521 = shl i32 %1382, %55
  %1522 = sub i32 %58, %1521
  br label %1523

1523:                                             ; preds = %1520, %1664
  %1524 = phi i64 [ 0, %1520 ], [ %1665, %1664 ]
  %1525 = getelementptr inbounds ptr, ptr %1071, i64 %1524
  %1526 = load ptr, ptr %1525, align 8, !tbaa !14
  %1527 = getelementptr inbounds %struct.CCGFace, ptr %1526, i64 0, i32 2
  %1528 = load i16, ptr %1527, align 8, !tbaa !89
  %1529 = icmp sgt i16 %1528, 0
  br i1 %1529, label %1530, label %1544

1530:                                             ; preds = %1523
  %1531 = zext i16 %1528 to i64
  %1532 = getelementptr inbounds %struct.CCGFace, ptr %1526, i64 1
  %1533 = getelementptr inbounds ptr, ptr %1532, i64 %1531
  br label %1534

1534:                                             ; preds = %1539, %1530
  %1535 = phi i64 [ 0, %1530 ], [ %1540, %1539 ]
  %1536 = getelementptr inbounds ptr, ptr %1533, i64 %1535
  %1537 = load ptr, ptr %1536, align 8, !tbaa !14
  %1538 = icmp eq ptr %1537, %1016
  br i1 %1538, label %1542, label %1539

1539:                                             ; preds = %1534
  %1540 = add nuw nsw i64 %1535, 1
  %1541 = icmp eq i64 %1540, %1531
  br i1 %1541, label %1544, label %1534, !llvm.loop !588

1542:                                             ; preds = %1534
  %1543 = trunc i64 %1535 to i32
  br label %1544

1544:                                             ; preds = %1539, %1523, %1542
  %1545 = phi i32 [ -1, %1523 ], [ %1543, %1542 ], [ -1, %1539 ]
  %1546 = getelementptr inbounds %struct.CCGFace, ptr %1526, i64 1
  %1547 = sext i32 %1545 to i64
  %1548 = getelementptr inbounds ptr, ptr %1546, i64 %1547
  %1549 = load ptr, ptr %1548, align 8, !tbaa !14
  %1550 = icmp eq ptr %1549, %1072
  %1551 = select i1 %1550, i32 %1521, i32 %1522
  %1552 = sub nsw i32 %53, %1551
  br i1 %60, label %1553, label %1558

1553:                                             ; preds = %1544
  %1554 = sext i16 %1528 to i32
  %1555 = add nsw i32 %1554, -1
  %1556 = add i32 %1555, %1545
  %1557 = srem i32 %1556, %1554
  br label %1565

1558:                                             ; preds = %1544
  %1559 = icmp slt i32 %1552, 0
  br i1 %1559, label %1560, label %1565

1560:                                             ; preds = %1558
  %1561 = add nsw i32 %1545, 1
  %1562 = sext i16 %1528 to i32
  %1563 = srem i32 %1561, %1562
  %1564 = sub nsw i32 0, %1552
  br label %1565

1565:                                             ; preds = %1558, %1553, %1560
  %1566 = phi i32 [ %1557, %1553 ], [ %1563, %1560 ], [ %1545, %1558 ]
  %1567 = phi i32 [ %1552, %1553 ], [ %1564, %1560 ], [ %59, %1558 ]
  %1568 = phi i32 [ %61, %1553 ], [ %59, %1560 ], [ %1552, %1558 ]
  %1569 = sext i16 %1528 to i64
  %1570 = getelementptr inbounds ptr, ptr %1546, i64 %1569
  %1571 = getelementptr inbounds ptr, ptr %1570, i64 %1569
  %1572 = mul i32 %63, %1566
  %1573 = add nsw i32 %1572, 1
  %1574 = mul nsw i32 %1573, %16
  %1575 = sext i32 %1574 to i64
  %1576 = getelementptr inbounds i8, ptr %1571, i64 %1575
  %1577 = mul nsw i32 %1568, %54
  %1578 = add i32 %1567, %54
  %1579 = add i32 %1578, %1577
  %1580 = mul nsw i32 %1579, %16
  %1581 = sext i32 %1580 to i64
  %1582 = getelementptr i8, ptr %1576, i64 %1581
  br i1 %1037, label %1583, label %1664

1583:                                             ; preds = %1565
  br i1 %1073, label %1619, label %1584

1584:                                             ; preds = %1583
  %1585 = getelementptr i8, ptr %1526, i64 24
  %1586 = getelementptr i8, ptr %1585, i64 %1055
  %1587 = shl nsw i64 %1569, 4
  %1588 = add nsw i64 %1587, %1581
  %1589 = add nsw i64 %1588, %1575
  %1590 = getelementptr i8, ptr %1586, i64 %1589
  %1591 = icmp ult ptr %18, %1590
  %1592 = icmp ult ptr %1582, %1056
  %1593 = and i1 %1591, %1592
  br i1 %1593, label %1619, label %1594

1594:                                             ; preds = %1584, %1594
  %1595 = phi i64 [ %1616, %1594 ], [ 0, %1584 ]
  %1596 = getelementptr inbounds float, ptr %1582, i64 %1595
  %1597 = load <8 x float>, ptr %1596, align 4, !tbaa !65, !alias.scope !656
  %1598 = getelementptr inbounds float, ptr %1596, i64 8
  %1599 = load <8 x float>, ptr %1598, align 4, !tbaa !65, !alias.scope !656
  %1600 = getelementptr inbounds float, ptr %1596, i64 16
  %1601 = load <8 x float>, ptr %1600, align 4, !tbaa !65, !alias.scope !656
  %1602 = getelementptr inbounds float, ptr %1596, i64 24
  %1603 = load <8 x float>, ptr %1602, align 4, !tbaa !65, !alias.scope !656
  %1604 = getelementptr inbounds float, ptr %18, i64 %1595
  %1605 = load <8 x float>, ptr %1604, align 4, !tbaa !65, !alias.scope !659, !noalias !656
  %1606 = getelementptr inbounds float, ptr %1604, i64 8
  %1607 = load <8 x float>, ptr %1606, align 4, !tbaa !65, !alias.scope !659, !noalias !656
  %1608 = getelementptr inbounds float, ptr %1604, i64 16
  %1609 = load <8 x float>, ptr %1608, align 4, !tbaa !65, !alias.scope !659, !noalias !656
  %1610 = getelementptr inbounds float, ptr %1604, i64 24
  %1611 = load <8 x float>, ptr %1610, align 4, !tbaa !65, !alias.scope !659, !noalias !656
  %1612 = fadd fast <8 x float> %1605, %1597
  %1613 = fadd fast <8 x float> %1607, %1599
  %1614 = fadd fast <8 x float> %1609, %1601
  %1615 = fadd fast <8 x float> %1611, %1603
  store <8 x float> %1612, ptr %1604, align 4, !tbaa !65, !alias.scope !659, !noalias !656
  store <8 x float> %1613, ptr %1606, align 4, !tbaa !65, !alias.scope !659, !noalias !656
  store <8 x float> %1614, ptr %1608, align 4, !tbaa !65, !alias.scope !659, !noalias !656
  store <8 x float> %1615, ptr %1610, align 4, !tbaa !65, !alias.scope !659, !noalias !656
  %1616 = add nuw i64 %1595, 32
  %1617 = icmp eq i64 %1616, %1074
  br i1 %1617, label %1618, label %1594, !llvm.loop !661

1618:                                             ; preds = %1594
  br i1 %1075, label %1664, label %1619

1619:                                             ; preds = %1584, %1583, %1618
  %1620 = phi i64 [ 0, %1584 ], [ 0, %1583 ], [ %1074, %1618 ]
  %1621 = xor i64 %1620, -1
  %1622 = add nsw i64 %1621, %1038
  br i1 %1077, label %1634, label %1623

1623:                                             ; preds = %1619, %1623
  %1624 = phi i64 [ %1631, %1623 ], [ %1620, %1619 ]
  %1625 = phi i64 [ %1632, %1623 ], [ 0, %1619 ]
  %1626 = getelementptr inbounds float, ptr %1582, i64 %1624
  %1627 = load float, ptr %1626, align 4, !tbaa !65
  %1628 = getelementptr inbounds float, ptr %18, i64 %1624
  %1629 = load float, ptr %1628, align 4, !tbaa !65
  %1630 = fadd fast float %1629, %1627
  store float %1630, ptr %1628, align 4, !tbaa !65
  %1631 = add nuw nsw i64 %1624, 1
  %1632 = add i64 %1625, 1
  %1633 = icmp eq i64 %1632, %1076
  br i1 %1633, label %1634, label %1623, !llvm.loop !662

1634:                                             ; preds = %1623, %1619
  %1635 = phi i64 [ %1620, %1619 ], [ %1631, %1623 ]
  %1636 = icmp ult i64 %1622, 3
  br i1 %1636, label %1664, label %1637

1637:                                             ; preds = %1634, %1637
  %1638 = phi i64 [ %1662, %1637 ], [ %1635, %1634 ]
  %1639 = getelementptr inbounds float, ptr %1582, i64 %1638
  %1640 = load float, ptr %1639, align 4, !tbaa !65
  %1641 = getelementptr inbounds float, ptr %18, i64 %1638
  %1642 = load float, ptr %1641, align 4, !tbaa !65
  %1643 = fadd fast float %1642, %1640
  store float %1643, ptr %1641, align 4, !tbaa !65
  %1644 = add nuw nsw i64 %1638, 1
  %1645 = getelementptr inbounds float, ptr %1582, i64 %1644
  %1646 = load float, ptr %1645, align 4, !tbaa !65
  %1647 = getelementptr inbounds float, ptr %18, i64 %1644
  %1648 = load float, ptr %1647, align 4, !tbaa !65
  %1649 = fadd fast float %1648, %1646
  store float %1649, ptr %1647, align 4, !tbaa !65
  %1650 = add nuw nsw i64 %1638, 2
  %1651 = getelementptr inbounds float, ptr %1582, i64 %1650
  %1652 = load float, ptr %1651, align 4, !tbaa !65
  %1653 = getelementptr inbounds float, ptr %18, i64 %1650
  %1654 = load float, ptr %1653, align 4, !tbaa !65
  %1655 = fadd fast float %1654, %1652
  store float %1655, ptr %1653, align 4, !tbaa !65
  %1656 = add nuw nsw i64 %1638, 3
  %1657 = getelementptr inbounds float, ptr %1582, i64 %1656
  %1658 = load float, ptr %1657, align 4, !tbaa !65
  %1659 = getelementptr inbounds float, ptr %18, i64 %1656
  %1660 = load float, ptr %1659, align 4, !tbaa !65
  %1661 = fadd fast float %1660, %1658
  store float %1661, ptr %1659, align 4, !tbaa !65
  %1662 = add nuw nsw i64 %1638, 4
  %1663 = icmp eq i64 %1662, %1038
  br i1 %1663, label %1664, label %1637, !llvm.loop !663

1664:                                             ; preds = %1634, %1637, %1618, %1565
  %1665 = add nuw nsw i64 %1524, 1
  %1666 = icmp eq i64 %1665, %1041
  br i1 %1666, label %1667, label %1523, !llvm.loop !664

1667:                                             ; preds = %1664
  br i1 %1037, label %1668, label %2074

1668:                                             ; preds = %1667
  br i1 %1080, label %1677, label %1669

1669:                                             ; preds = %1668, %1669
  %1670 = phi i64 [ %1674, %1669 ], [ 0, %1668 ]
  %1671 = getelementptr inbounds float, ptr %18, i64 %1670
  %1672 = load <8 x float>, ptr %1671, align 4, !tbaa !65
  %1673 = fmul fast <8 x float> %1672, %1084
  store <8 x float> %1673, ptr %1671, align 4, !tbaa !65
  %1674 = add nuw i64 %1670, 8
  %1675 = icmp eq i64 %1674, %1081
  br i1 %1675, label %1676, label %1669, !llvm.loop !665

1676:                                             ; preds = %1669
  br i1 %1085, label %1686, label %1677

1677:                                             ; preds = %1668, %1676
  %1678 = phi i64 [ 0, %1668 ], [ %1081, %1676 ]
  br label %1679

1679:                                             ; preds = %1677, %1679
  %1680 = phi i64 [ %1684, %1679 ], [ %1678, %1677 ]
  %1681 = getelementptr inbounds float, ptr %18, i64 %1680
  %1682 = load float, ptr %1681, align 4, !tbaa !65
  %1683 = fmul fast float %1682, %1086
  store float %1683, ptr %1681, align 4, !tbaa !65
  %1684 = add nuw nsw i64 %1680, 1
  %1685 = icmp eq i64 %1684, %1038
  br i1 %1685, label %1686, label %1679, !llvm.loop !666

1686:                                             ; preds = %1679, %1676
  %1687 = sub i64 %22, %1356
  %1688 = icmp ult i64 %1687, 128
  %1689 = select i1 %1087, i1 true, i1 %1688
  br i1 %1689, label %1707, label %1690

1690:                                             ; preds = %1686, %1690
  %1691 = phi i64 [ %1704, %1690 ], [ 0, %1686 ]
  %1692 = getelementptr inbounds float, ptr %1375, i64 %1691
  %1693 = load <8 x float>, ptr %1692, align 4, !tbaa !65
  %1694 = getelementptr inbounds float, ptr %1692, i64 8
  %1695 = load <8 x float>, ptr %1694, align 4, !tbaa !65
  %1696 = getelementptr inbounds float, ptr %1692, i64 16
  %1697 = load <8 x float>, ptr %1696, align 4, !tbaa !65
  %1698 = getelementptr inbounds float, ptr %1692, i64 24
  %1699 = load <8 x float>, ptr %1698, align 4, !tbaa !65
  %1700 = getelementptr inbounds float, ptr %21, i64 %1691
  store <8 x float> %1693, ptr %1700, align 4, !tbaa !65
  %1701 = getelementptr inbounds float, ptr %1700, i64 8
  store <8 x float> %1695, ptr %1701, align 4, !tbaa !65
  %1702 = getelementptr inbounds float, ptr %1700, i64 16
  store <8 x float> %1697, ptr %1702, align 4, !tbaa !65
  %1703 = getelementptr inbounds float, ptr %1700, i64 24
  store <8 x float> %1699, ptr %1703, align 4, !tbaa !65
  %1704 = add nuw i64 %1691, 32
  %1705 = icmp eq i64 %1704, %1088
  br i1 %1705, label %1706, label %1690, !llvm.loop !667

1706:                                             ; preds = %1690
  br i1 %1089, label %1742, label %1707

1707:                                             ; preds = %1686, %1706
  %1708 = phi i64 [ 0, %1686 ], [ %1088, %1706 ]
  %1709 = xor i64 %1708, -1
  %1710 = add nsw i64 %1709, %1038
  br i1 %1091, label %1720, label %1711

1711:                                             ; preds = %1707, %1711
  %1712 = phi i64 [ %1717, %1711 ], [ %1708, %1707 ]
  %1713 = phi i64 [ %1718, %1711 ], [ 0, %1707 ]
  %1714 = getelementptr inbounds float, ptr %1375, i64 %1712
  %1715 = load float, ptr %1714, align 4, !tbaa !65
  %1716 = getelementptr inbounds float, ptr %21, i64 %1712
  store float %1715, ptr %1716, align 4, !tbaa !65
  %1717 = add nuw nsw i64 %1712, 1
  %1718 = add i64 %1713, 1
  %1719 = icmp eq i64 %1718, %1090
  br i1 %1719, label %1720, label %1711, !llvm.loop !668

1720:                                             ; preds = %1711, %1707
  %1721 = phi i64 [ %1708, %1707 ], [ %1717, %1711 ]
  %1722 = icmp ult i64 %1710, 3
  br i1 %1722, label %1742, label %1723

1723:                                             ; preds = %1720, %1723
  %1724 = phi i64 [ %1740, %1723 ], [ %1721, %1720 ]
  %1725 = getelementptr inbounds float, ptr %1375, i64 %1724
  %1726 = load float, ptr %1725, align 4, !tbaa !65
  %1727 = getelementptr inbounds float, ptr %21, i64 %1724
  store float %1726, ptr %1727, align 4, !tbaa !65
  %1728 = add nuw nsw i64 %1724, 1
  %1729 = getelementptr inbounds float, ptr %1375, i64 %1728
  %1730 = load float, ptr %1729, align 4, !tbaa !65
  %1731 = getelementptr inbounds float, ptr %21, i64 %1728
  store float %1730, ptr %1731, align 4, !tbaa !65
  %1732 = add nuw nsw i64 %1724, 2
  %1733 = getelementptr inbounds float, ptr %1375, i64 %1732
  %1734 = load float, ptr %1733, align 4, !tbaa !65
  %1735 = getelementptr inbounds float, ptr %21, i64 %1732
  store float %1734, ptr %1735, align 4, !tbaa !65
  %1736 = add nuw nsw i64 %1724, 3
  %1737 = getelementptr inbounds float, ptr %1375, i64 %1736
  %1738 = load float, ptr %1737, align 4, !tbaa !65
  %1739 = getelementptr inbounds float, ptr %21, i64 %1736
  store float %1738, ptr %1739, align 4, !tbaa !65
  %1740 = add nuw nsw i64 %1724, 4
  %1741 = icmp eq i64 %1740, %1038
  br i1 %1741, label %1742, label %1723, !llvm.loop !669

1742:                                             ; preds = %1720, %1723, %1706
  br i1 %1092, label %1772, label %1743

1743:                                             ; preds = %1742
  %1744 = icmp ult ptr %21, %1361
  %1745 = icmp ult ptr %1359, %1052
  %1746 = and i1 %1744, %1745
  br i1 %1746, label %1772, label %1747

1747:                                             ; preds = %1743, %1747
  %1748 = phi i64 [ %1769, %1747 ], [ 0, %1743 ]
  %1749 = getelementptr inbounds float, ptr %1379, i64 %1748
  %1750 = load <8 x float>, ptr %1749, align 4, !tbaa !65, !alias.scope !670
  %1751 = getelementptr inbounds float, ptr %1749, i64 8
  %1752 = load <8 x float>, ptr %1751, align 4, !tbaa !65, !alias.scope !670
  %1753 = getelementptr inbounds float, ptr %1749, i64 16
  %1754 = load <8 x float>, ptr %1753, align 4, !tbaa !65, !alias.scope !670
  %1755 = getelementptr inbounds float, ptr %1749, i64 24
  %1756 = load <8 x float>, ptr %1755, align 4, !tbaa !65, !alias.scope !670
  %1757 = getelementptr inbounds float, ptr %21, i64 %1748
  %1758 = load <8 x float>, ptr %1757, align 4, !tbaa !65, !alias.scope !673, !noalias !670
  %1759 = getelementptr inbounds float, ptr %1757, i64 8
  %1760 = load <8 x float>, ptr %1759, align 4, !tbaa !65, !alias.scope !673, !noalias !670
  %1761 = getelementptr inbounds float, ptr %1757, i64 16
  %1762 = load <8 x float>, ptr %1761, align 4, !tbaa !65, !alias.scope !673, !noalias !670
  %1763 = getelementptr inbounds float, ptr %1757, i64 24
  %1764 = load <8 x float>, ptr %1763, align 4, !tbaa !65, !alias.scope !673, !noalias !670
  %1765 = fadd fast <8 x float> %1758, %1750
  %1766 = fadd fast <8 x float> %1760, %1752
  %1767 = fadd fast <8 x float> %1762, %1754
  %1768 = fadd fast <8 x float> %1764, %1756
  store <8 x float> %1765, ptr %1757, align 4, !tbaa !65, !alias.scope !673, !noalias !670
  store <8 x float> %1766, ptr %1759, align 4, !tbaa !65, !alias.scope !673, !noalias !670
  store <8 x float> %1767, ptr %1761, align 4, !tbaa !65, !alias.scope !673, !noalias !670
  store <8 x float> %1768, ptr %1763, align 4, !tbaa !65, !alias.scope !673, !noalias !670
  %1769 = add nuw i64 %1748, 32
  %1770 = icmp eq i64 %1769, %1093
  br i1 %1770, label %1771, label %1747, !llvm.loop !675

1771:                                             ; preds = %1747
  br i1 %1094, label %1817, label %1772

1772:                                             ; preds = %1743, %1742, %1771
  %1773 = phi i64 [ 0, %1743 ], [ 0, %1742 ], [ %1093, %1771 ]
  %1774 = xor i64 %1773, -1
  %1775 = add nsw i64 %1774, %1038
  br i1 %1096, label %1787, label %1776

1776:                                             ; preds = %1772, %1776
  %1777 = phi i64 [ %1784, %1776 ], [ %1773, %1772 ]
  %1778 = phi i64 [ %1785, %1776 ], [ 0, %1772 ]
  %1779 = getelementptr inbounds float, ptr %1379, i64 %1777
  %1780 = load float, ptr %1779, align 4, !tbaa !65
  %1781 = getelementptr inbounds float, ptr %21, i64 %1777
  %1782 = load float, ptr %1781, align 4, !tbaa !65
  %1783 = fadd fast float %1782, %1780
  store float %1783, ptr %1781, align 4, !tbaa !65
  %1784 = add nuw nsw i64 %1777, 1
  %1785 = add i64 %1778, 1
  %1786 = icmp eq i64 %1785, %1095
  br i1 %1786, label %1787, label %1776, !llvm.loop !676

1787:                                             ; preds = %1776, %1772
  %1788 = phi i64 [ %1773, %1772 ], [ %1784, %1776 ]
  %1789 = icmp ult i64 %1775, 3
  br i1 %1789, label %1817, label %1790

1790:                                             ; preds = %1787, %1790
  %1791 = phi i64 [ %1815, %1790 ], [ %1788, %1787 ]
  %1792 = getelementptr inbounds float, ptr %1379, i64 %1791
  %1793 = load float, ptr %1792, align 4, !tbaa !65
  %1794 = getelementptr inbounds float, ptr %21, i64 %1791
  %1795 = load float, ptr %1794, align 4, !tbaa !65
  %1796 = fadd fast float %1795, %1793
  store float %1796, ptr %1794, align 4, !tbaa !65
  %1797 = add nuw nsw i64 %1791, 1
  %1798 = getelementptr inbounds float, ptr %1379, i64 %1797
  %1799 = load float, ptr %1798, align 4, !tbaa !65
  %1800 = getelementptr inbounds float, ptr %21, i64 %1797
  %1801 = load float, ptr %1800, align 4, !tbaa !65
  %1802 = fadd fast float %1801, %1799
  store float %1802, ptr %1800, align 4, !tbaa !65
  %1803 = add nuw nsw i64 %1791, 2
  %1804 = getelementptr inbounds float, ptr %1379, i64 %1803
  %1805 = load float, ptr %1804, align 4, !tbaa !65
  %1806 = getelementptr inbounds float, ptr %21, i64 %1803
  %1807 = load float, ptr %1806, align 4, !tbaa !65
  %1808 = fadd fast float %1807, %1805
  store float %1808, ptr %1806, align 4, !tbaa !65
  %1809 = add nuw nsw i64 %1791, 3
  %1810 = getelementptr inbounds float, ptr %1379, i64 %1809
  %1811 = load float, ptr %1810, align 4, !tbaa !65
  %1812 = getelementptr inbounds float, ptr %21, i64 %1809
  %1813 = load float, ptr %1812, align 4, !tbaa !65
  %1814 = fadd fast float %1813, %1811
  store float %1814, ptr %1812, align 4, !tbaa !65
  %1815 = add nuw nsw i64 %1791, 4
  %1816 = icmp eq i64 %1815, %1038
  br i1 %1816, label %1817, label %1790, !llvm.loop !677

1817:                                             ; preds = %1787, %1790, %1771
  br i1 %1097, label %1835, label %1818

1818:                                             ; preds = %1817, %1818
  %1819 = phi i64 [ %1832, %1818 ], [ 0, %1817 ]
  %1820 = getelementptr inbounds float, ptr %21, i64 %1819
  %1821 = load <8 x float>, ptr %1820, align 4, !tbaa !65
  %1822 = getelementptr inbounds float, ptr %1820, i64 8
  %1823 = load <8 x float>, ptr %1822, align 4, !tbaa !65
  %1824 = getelementptr inbounds float, ptr %1820, i64 16
  %1825 = load <8 x float>, ptr %1824, align 4, !tbaa !65
  %1826 = getelementptr inbounds float, ptr %1820, i64 24
  %1827 = load <8 x float>, ptr %1826, align 4, !tbaa !65
  %1828 = fmul fast <8 x float> %1821, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %1829 = fmul fast <8 x float> %1823, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %1830 = fmul fast <8 x float> %1825, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %1831 = fmul fast <8 x float> %1827, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  store <8 x float> %1828, ptr %1820, align 4, !tbaa !65
  store <8 x float> %1829, ptr %1822, align 4, !tbaa !65
  store <8 x float> %1830, ptr %1824, align 4, !tbaa !65
  store <8 x float> %1831, ptr %1826, align 4, !tbaa !65
  %1832 = add nuw i64 %1819, 32
  %1833 = icmp eq i64 %1832, %1098
  br i1 %1833, label %1834, label %1818, !llvm.loop !678

1834:                                             ; preds = %1818
  br i1 %1099, label %1844, label %1835

1835:                                             ; preds = %1817, %1834
  %1836 = phi i64 [ 0, %1817 ], [ %1098, %1834 ]
  br label %1837

1837:                                             ; preds = %1835, %1837
  %1838 = phi i64 [ %1842, %1837 ], [ %1836, %1835 ]
  %1839 = getelementptr inbounds float, ptr %21, i64 %1838
  %1840 = load float, ptr %1839, align 4, !tbaa !65
  %1841 = fmul fast float %1840, 5.000000e-01
  store float %1841, ptr %1839, align 4, !tbaa !65
  %1842 = add nuw nsw i64 %1838, 1
  %1843 = icmp eq i64 %1842, %1038
  br i1 %1843, label %1844, label %1837, !llvm.loop !679

1844:                                             ; preds = %1837, %1834
  %1845 = sub i64 %1366, %19
  %1846 = icmp ult i64 %1845, 128
  %1847 = select i1 %1100, i1 true, i1 %1846
  br i1 %1847, label %1865, label %1848

1848:                                             ; preds = %1844, %1848
  %1849 = phi i64 [ %1862, %1848 ], [ 0, %1844 ]
  %1850 = getelementptr inbounds float, ptr %18, i64 %1849
  %1851 = load <8 x float>, ptr %1850, align 4, !tbaa !65
  %1852 = getelementptr inbounds float, ptr %1850, i64 8
  %1853 = load <8 x float>, ptr %1852, align 4, !tbaa !65
  %1854 = getelementptr inbounds float, ptr %1850, i64 16
  %1855 = load <8 x float>, ptr %1854, align 4, !tbaa !65
  %1856 = getelementptr inbounds float, ptr %1850, i64 24
  %1857 = load <8 x float>, ptr %1856, align 4, !tbaa !65
  %1858 = getelementptr inbounds float, ptr %1386, i64 %1849
  store <8 x float> %1851, ptr %1858, align 4, !tbaa !65
  %1859 = getelementptr inbounds float, ptr %1858, i64 8
  store <8 x float> %1853, ptr %1859, align 4, !tbaa !65
  %1860 = getelementptr inbounds float, ptr %1858, i64 16
  store <8 x float> %1855, ptr %1860, align 4, !tbaa !65
  %1861 = getelementptr inbounds float, ptr %1858, i64 24
  store <8 x float> %1857, ptr %1861, align 4, !tbaa !65
  %1862 = add nuw i64 %1849, 32
  %1863 = icmp eq i64 %1862, %1101
  br i1 %1863, label %1864, label %1848, !llvm.loop !680

1864:                                             ; preds = %1848
  br i1 %1102, label %1900, label %1865

1865:                                             ; preds = %1844, %1864
  %1866 = phi i64 [ 0, %1844 ], [ %1101, %1864 ]
  %1867 = xor i64 %1866, -1
  %1868 = add nsw i64 %1867, %1038
  br i1 %1104, label %1878, label %1869

1869:                                             ; preds = %1865, %1869
  %1870 = phi i64 [ %1875, %1869 ], [ %1866, %1865 ]
  %1871 = phi i64 [ %1876, %1869 ], [ 0, %1865 ]
  %1872 = getelementptr inbounds float, ptr %18, i64 %1870
  %1873 = load float, ptr %1872, align 4, !tbaa !65
  %1874 = getelementptr inbounds float, ptr %1386, i64 %1870
  store float %1873, ptr %1874, align 4, !tbaa !65
  %1875 = add nuw nsw i64 %1870, 1
  %1876 = add i64 %1871, 1
  %1877 = icmp eq i64 %1876, %1103
  br i1 %1877, label %1878, label %1869, !llvm.loop !681

1878:                                             ; preds = %1869, %1865
  %1879 = phi i64 [ %1866, %1865 ], [ %1875, %1869 ]
  %1880 = icmp ult i64 %1868, 3
  br i1 %1880, label %1900, label %1881

1881:                                             ; preds = %1878, %1881
  %1882 = phi i64 [ %1898, %1881 ], [ %1879, %1878 ]
  %1883 = getelementptr inbounds float, ptr %18, i64 %1882
  %1884 = load float, ptr %1883, align 4, !tbaa !65
  %1885 = getelementptr inbounds float, ptr %1386, i64 %1882
  store float %1884, ptr %1885, align 4, !tbaa !65
  %1886 = add nuw nsw i64 %1882, 1
  %1887 = getelementptr inbounds float, ptr %18, i64 %1886
  %1888 = load float, ptr %1887, align 4, !tbaa !65
  %1889 = getelementptr inbounds float, ptr %1386, i64 %1886
  store float %1888, ptr %1889, align 4, !tbaa !65
  %1890 = add nuw nsw i64 %1882, 2
  %1891 = getelementptr inbounds float, ptr %18, i64 %1890
  %1892 = load float, ptr %1891, align 4, !tbaa !65
  %1893 = getelementptr inbounds float, ptr %1386, i64 %1890
  store float %1892, ptr %1893, align 4, !tbaa !65
  %1894 = add nuw nsw i64 %1882, 3
  %1895 = getelementptr inbounds float, ptr %18, i64 %1894
  %1896 = load float, ptr %1895, align 4, !tbaa !65
  %1897 = getelementptr inbounds float, ptr %1386, i64 %1894
  store float %1896, ptr %1897, align 4, !tbaa !65
  %1898 = add nuw nsw i64 %1882, 4
  %1899 = icmp eq i64 %1898, %1038
  br i1 %1899, label %1900, label %1881, !llvm.loop !682

1900:                                             ; preds = %1878, %1881, %1864
  %1901 = select i1 %1105, i1 true, i1 %1108
  br i1 %1901, label %1927, label %1902

1902:                                             ; preds = %1900, %1902
  %1903 = phi i64 [ %1924, %1902 ], [ 0, %1900 ]
  %1904 = getelementptr inbounds float, ptr %18, i64 %1903
  %1905 = load <8 x float>, ptr %1904, align 4, !tbaa !65, !alias.scope !683
  %1906 = getelementptr inbounds float, ptr %1904, i64 8
  %1907 = load <8 x float>, ptr %1906, align 4, !tbaa !65, !alias.scope !683
  %1908 = getelementptr inbounds float, ptr %1904, i64 16
  %1909 = load <8 x float>, ptr %1908, align 4, !tbaa !65, !alias.scope !683
  %1910 = getelementptr inbounds float, ptr %1904, i64 24
  %1911 = load <8 x float>, ptr %1910, align 4, !tbaa !65, !alias.scope !683
  %1912 = getelementptr inbounds float, ptr %21, i64 %1903
  %1913 = load <8 x float>, ptr %1912, align 4, !tbaa !65, !alias.scope !686, !noalias !683
  %1914 = getelementptr inbounds float, ptr %1912, i64 8
  %1915 = load <8 x float>, ptr %1914, align 4, !tbaa !65, !alias.scope !686, !noalias !683
  %1916 = getelementptr inbounds float, ptr %1912, i64 16
  %1917 = load <8 x float>, ptr %1916, align 4, !tbaa !65, !alias.scope !686, !noalias !683
  %1918 = getelementptr inbounds float, ptr %1912, i64 24
  %1919 = load <8 x float>, ptr %1918, align 4, !tbaa !65, !alias.scope !686, !noalias !683
  %1920 = fsub fast <8 x float> %1913, %1905
  %1921 = fsub fast <8 x float> %1915, %1907
  %1922 = fsub fast <8 x float> %1917, %1909
  %1923 = fsub fast <8 x float> %1919, %1911
  store <8 x float> %1920, ptr %1912, align 4, !tbaa !65, !alias.scope !686, !noalias !683
  store <8 x float> %1921, ptr %1914, align 4, !tbaa !65, !alias.scope !686, !noalias !683
  store <8 x float> %1922, ptr %1916, align 4, !tbaa !65, !alias.scope !686, !noalias !683
  store <8 x float> %1923, ptr %1918, align 4, !tbaa !65, !alias.scope !686, !noalias !683
  %1924 = add nuw i64 %1903, 32
  %1925 = icmp eq i64 %1924, %1109
  br i1 %1925, label %1926, label %1902, !llvm.loop !688

1926:                                             ; preds = %1902
  br i1 %1110, label %1972, label %1927

1927:                                             ; preds = %1900, %1926
  %1928 = phi i64 [ 0, %1900 ], [ %1109, %1926 ]
  %1929 = xor i64 %1928, -1
  %1930 = add nsw i64 %1929, %1038
  br i1 %1112, label %1942, label %1931

1931:                                             ; preds = %1927, %1931
  %1932 = phi i64 [ %1939, %1931 ], [ %1928, %1927 ]
  %1933 = phi i64 [ %1940, %1931 ], [ 0, %1927 ]
  %1934 = getelementptr inbounds float, ptr %18, i64 %1932
  %1935 = load float, ptr %1934, align 4, !tbaa !65
  %1936 = getelementptr inbounds float, ptr %21, i64 %1932
  %1937 = load float, ptr %1936, align 4, !tbaa !65
  %1938 = fsub fast float %1937, %1935
  store float %1938, ptr %1936, align 4, !tbaa !65
  %1939 = add nuw nsw i64 %1932, 1
  %1940 = add i64 %1933, 1
  %1941 = icmp eq i64 %1940, %1111
  br i1 %1941, label %1942, label %1931, !llvm.loop !689

1942:                                             ; preds = %1931, %1927
  %1943 = phi i64 [ %1928, %1927 ], [ %1939, %1931 ]
  %1944 = icmp ult i64 %1930, 3
  br i1 %1944, label %1972, label %1945

1945:                                             ; preds = %1942, %1945
  %1946 = phi i64 [ %1970, %1945 ], [ %1943, %1942 ]
  %1947 = getelementptr inbounds float, ptr %18, i64 %1946
  %1948 = load float, ptr %1947, align 4, !tbaa !65
  %1949 = getelementptr inbounds float, ptr %21, i64 %1946
  %1950 = load float, ptr %1949, align 4, !tbaa !65
  %1951 = fsub fast float %1950, %1948
  store float %1951, ptr %1949, align 4, !tbaa !65
  %1952 = add nuw nsw i64 %1946, 1
  %1953 = getelementptr inbounds float, ptr %18, i64 %1952
  %1954 = load float, ptr %1953, align 4, !tbaa !65
  %1955 = getelementptr inbounds float, ptr %21, i64 %1952
  %1956 = load float, ptr %1955, align 4, !tbaa !65
  %1957 = fsub fast float %1956, %1954
  store float %1957, ptr %1955, align 4, !tbaa !65
  %1958 = add nuw nsw i64 %1946, 2
  %1959 = getelementptr inbounds float, ptr %18, i64 %1958
  %1960 = load float, ptr %1959, align 4, !tbaa !65
  %1961 = getelementptr inbounds float, ptr %21, i64 %1958
  %1962 = load float, ptr %1961, align 4, !tbaa !65
  %1963 = fsub fast float %1962, %1960
  store float %1963, ptr %1961, align 4, !tbaa !65
  %1964 = add nuw nsw i64 %1946, 3
  %1965 = getelementptr inbounds float, ptr %18, i64 %1964
  %1966 = load float, ptr %1965, align 4, !tbaa !65
  %1967 = getelementptr inbounds float, ptr %21, i64 %1964
  %1968 = load float, ptr %1967, align 4, !tbaa !65
  %1969 = fsub fast float %1968, %1966
  store float %1969, ptr %1967, align 4, !tbaa !65
  %1970 = add nuw nsw i64 %1946, 4
  %1971 = icmp eq i64 %1970, %1038
  br i1 %1971, label %1972, label %1945, !llvm.loop !690

1972:                                             ; preds = %1942, %1945, %1926
  br i1 %1113, label %1990, label %1973

1973:                                             ; preds = %1972, %1973
  %1974 = phi i64 [ %1987, %1973 ], [ 0, %1972 ]
  %1975 = getelementptr inbounds float, ptr %21, i64 %1974
  %1976 = load <8 x float>, ptr %1975, align 4, !tbaa !65
  %1977 = getelementptr inbounds float, ptr %1975, i64 8
  %1978 = load <8 x float>, ptr %1977, align 4, !tbaa !65
  %1979 = getelementptr inbounds float, ptr %1975, i64 16
  %1980 = load <8 x float>, ptr %1979, align 4, !tbaa !65
  %1981 = getelementptr inbounds float, ptr %1975, i64 24
  %1982 = load <8 x float>, ptr %1981, align 4, !tbaa !65
  %1983 = fmul fast <8 x float> %1976, %1116
  %1984 = fmul fast <8 x float> %1978, %1118
  %1985 = fmul fast <8 x float> %1980, %1120
  %1986 = fmul fast <8 x float> %1982, %1122
  store <8 x float> %1983, ptr %1975, align 4, !tbaa !65
  store <8 x float> %1984, ptr %1977, align 4, !tbaa !65
  store <8 x float> %1985, ptr %1979, align 4, !tbaa !65
  store <8 x float> %1986, ptr %1981, align 4, !tbaa !65
  %1987 = add nuw i64 %1974, 32
  %1988 = icmp eq i64 %1987, %1114
  br i1 %1988, label %1989, label %1973, !llvm.loop !691

1989:                                             ; preds = %1973
  br i1 %1123, label %1999, label %1990

1990:                                             ; preds = %1972, %1989
  %1991 = phi i64 [ 0, %1972 ], [ %1114, %1989 ]
  br label %1992

1992:                                             ; preds = %1990, %1992
  %1993 = phi i64 [ %1997, %1992 ], [ %1991, %1990 ]
  %1994 = getelementptr inbounds float, ptr %21, i64 %1993
  %1995 = load float, ptr %1994, align 4, !tbaa !65
  %1996 = fmul fast float %1995, %1027
  store float %1996, ptr %1994, align 4, !tbaa !65
  %1997 = add nuw nsw i64 %1993, 1
  %1998 = icmp eq i64 %1997, %1038
  br i1 %1998, label %1999, label %1992, !llvm.loop !692

1999:                                             ; preds = %1992, %1989
  br i1 %1124, label %2029, label %2000

2000:                                             ; preds = %1999
  %2001 = icmp ult ptr %1371, %1046
  %2002 = icmp ult ptr %21, %1372
  %2003 = and i1 %2001, %2002
  br i1 %2003, label %2029, label %2004

2004:                                             ; preds = %2000, %2004
  %2005 = phi i64 [ %2026, %2004 ], [ 0, %2000 ]
  %2006 = getelementptr inbounds float, ptr %21, i64 %2005
  %2007 = load <8 x float>, ptr %2006, align 4, !tbaa !65, !alias.scope !693
  %2008 = getelementptr inbounds float, ptr %2006, i64 8
  %2009 = load <8 x float>, ptr %2008, align 4, !tbaa !65, !alias.scope !693
  %2010 = getelementptr inbounds float, ptr %2006, i64 16
  %2011 = load <8 x float>, ptr %2010, align 4, !tbaa !65, !alias.scope !693
  %2012 = getelementptr inbounds float, ptr %2006, i64 24
  %2013 = load <8 x float>, ptr %2012, align 4, !tbaa !65, !alias.scope !693
  %2014 = getelementptr inbounds float, ptr %1386, i64 %2005
  %2015 = load <8 x float>, ptr %2014, align 4, !tbaa !65, !alias.scope !696, !noalias !693
  %2016 = getelementptr inbounds float, ptr %2014, i64 8
  %2017 = load <8 x float>, ptr %2016, align 4, !tbaa !65, !alias.scope !696, !noalias !693
  %2018 = getelementptr inbounds float, ptr %2014, i64 16
  %2019 = load <8 x float>, ptr %2018, align 4, !tbaa !65, !alias.scope !696, !noalias !693
  %2020 = getelementptr inbounds float, ptr %2014, i64 24
  %2021 = load <8 x float>, ptr %2020, align 4, !tbaa !65, !alias.scope !696, !noalias !693
  %2022 = fadd fast <8 x float> %2015, %2007
  %2023 = fadd fast <8 x float> %2017, %2009
  %2024 = fadd fast <8 x float> %2019, %2011
  %2025 = fadd fast <8 x float> %2021, %2013
  store <8 x float> %2022, ptr %2014, align 4, !tbaa !65, !alias.scope !696, !noalias !693
  store <8 x float> %2023, ptr %2016, align 4, !tbaa !65, !alias.scope !696, !noalias !693
  store <8 x float> %2024, ptr %2018, align 4, !tbaa !65, !alias.scope !696, !noalias !693
  store <8 x float> %2025, ptr %2020, align 4, !tbaa !65, !alias.scope !696, !noalias !693
  %2026 = add nuw i64 %2005, 32
  %2027 = icmp eq i64 %2026, %1125
  br i1 %2027, label %2028, label %2004, !llvm.loop !698

2028:                                             ; preds = %2004
  br i1 %1126, label %2074, label %2029

2029:                                             ; preds = %2000, %1999, %2028
  %2030 = phi i64 [ 0, %2000 ], [ 0, %1999 ], [ %1125, %2028 ]
  %2031 = xor i64 %2030, -1
  %2032 = add nsw i64 %2031, %1038
  br i1 %1128, label %2044, label %2033

2033:                                             ; preds = %2029, %2033
  %2034 = phi i64 [ %2041, %2033 ], [ %2030, %2029 ]
  %2035 = phi i64 [ %2042, %2033 ], [ 0, %2029 ]
  %2036 = getelementptr inbounds float, ptr %21, i64 %2034
  %2037 = load float, ptr %2036, align 4, !tbaa !65
  %2038 = getelementptr inbounds float, ptr %1386, i64 %2034
  %2039 = load float, ptr %2038, align 4, !tbaa !65
  %2040 = fadd fast float %2039, %2037
  store float %2040, ptr %2038, align 4, !tbaa !65
  %2041 = add nuw nsw i64 %2034, 1
  %2042 = add i64 %2035, 1
  %2043 = icmp eq i64 %2042, %1127
  br i1 %2043, label %2044, label %2033, !llvm.loop !699

2044:                                             ; preds = %2033, %2029
  %2045 = phi i64 [ %2030, %2029 ], [ %2041, %2033 ]
  %2046 = icmp ult i64 %2032, 3
  br i1 %2046, label %2074, label %2047

2047:                                             ; preds = %2044, %2047
  %2048 = phi i64 [ %2072, %2047 ], [ %2045, %2044 ]
  %2049 = getelementptr inbounds float, ptr %21, i64 %2048
  %2050 = load float, ptr %2049, align 4, !tbaa !65
  %2051 = getelementptr inbounds float, ptr %1386, i64 %2048
  %2052 = load float, ptr %2051, align 4, !tbaa !65
  %2053 = fadd fast float %2052, %2050
  store float %2053, ptr %2051, align 4, !tbaa !65
  %2054 = add nuw nsw i64 %2048, 1
  %2055 = getelementptr inbounds float, ptr %21, i64 %2054
  %2056 = load float, ptr %2055, align 4, !tbaa !65
  %2057 = getelementptr inbounds float, ptr %1386, i64 %2054
  %2058 = load float, ptr %2057, align 4, !tbaa !65
  %2059 = fadd fast float %2058, %2056
  store float %2059, ptr %2057, align 4, !tbaa !65
  %2060 = add nuw nsw i64 %2048, 2
  %2061 = getelementptr inbounds float, ptr %21, i64 %2060
  %2062 = load float, ptr %2061, align 4, !tbaa !65
  %2063 = getelementptr inbounds float, ptr %1386, i64 %2060
  %2064 = load float, ptr %2063, align 4, !tbaa !65
  %2065 = fadd fast float %2064, %2062
  store float %2065, ptr %2063, align 4, !tbaa !65
  %2066 = add nuw nsw i64 %2048, 3
  %2067 = getelementptr inbounds float, ptr %21, i64 %2066
  %2068 = load float, ptr %2067, align 4, !tbaa !65
  %2069 = getelementptr inbounds float, ptr %1386, i64 %2066
  %2070 = load float, ptr %2069, align 4, !tbaa !65
  %2071 = fadd fast float %2070, %2068
  store float %2071, ptr %2069, align 4, !tbaa !65
  %2072 = add nuw nsw i64 %2048, 4
  %2073 = icmp eq i64 %2072, %1038
  br i1 %2073, label %2074, label %2047, !llvm.loop !700

2074:                                             ; preds = %2044, %2047, %2028, %1667
  %2075 = icmp eq i64 %1376, %69
  br i1 %2075, label %2076, label %1348, !llvm.loop !701

2076:                                             ; preds = %2074, %1346, %1130, %1033, %1129
  %2077 = add nuw nsw i64 %1014, 1
  %2078 = icmp eq i64 %2077, %68
  br i1 %2078, label %972, label %1013, !llvm.loop !702

2079:                                             ; preds = %4225, %972
  br i1 %43, label %2080, label %6188

2080:                                             ; preds = %2079
  %2081 = icmp eq i32 %7, 0
  %2082 = sitofp i32 %7 to float
  %2083 = icmp sgt i32 %11, 1
  %2084 = add i32 %12, %11
  %2085 = shl nuw i32 1, %14
  %2086 = add i32 %2085, %7
  %2087 = add i32 %2084, -1
  %2088 = getelementptr %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 3
  %2089 = add nsw i32 %10, -1
  %2090 = shl nuw i32 1, %2089
  %2091 = add nuw nsw i32 %2090, 1
  %2092 = sub nsw i32 %10, %14
  %2093 = shl nsw i32 -1, %2092
  %2094 = shl nsw i32 %2091, 1
  %2095 = add i32 %2094, -2
  %2096 = add i32 %2093, %2090
  %2097 = icmp slt i32 %2096, 0
  %2098 = sub nsw i32 0, %2096
  %2099 = add nuw i32 %2090, 2
  %2100 = mul i32 %2091, %2099
  %2101 = sub nsw i32 %10, %7
  %2102 = shl nsw i32 -1, %2101
  %2103 = add i32 %2102, %2090
  %2104 = icmp slt i32 %2103, 0
  %2105 = sub nsw i32 0, %2103
  %2106 = sext i32 %2084 to i64
  %2107 = sext i32 %16 to i64
  %2108 = zext i32 %5 to i64
  %2109 = zext i32 %11 to i64
  %2110 = add i32 %2085, %7
  %2111 = add i32 %2110, 2
  %2112 = mul i32 %16, %2111
  %2113 = shl i32 %16, 1
  %2114 = shl i32 %16, 1
  %2115 = add nsw i64 %2106, 1
  %2116 = mul i64 %2115, %2107
  %2117 = add i64 %2116, 48
  %2118 = add nsw i64 %2106, 2
  %2119 = mul i64 %2118, %2107
  %2120 = add nsw i64 %2119, 48
  %2121 = add i64 %2119, 48
  br label %4228

2122:                                             ; preds = %974, %4225
  %2123 = phi i64 [ 0, %974 ], [ %4226, %4225 ]
  %2124 = getelementptr inbounds ptr, ptr %1, i64 %2123
  %2125 = load ptr, ptr %2124, align 8, !tbaa !14
  %2126 = ptrtoint ptr %2125 to i64
  %2127 = getelementptr inbounds %struct.CCGVert, ptr %2125, i64 1
  %2128 = getelementptr i8, ptr %2127, i64 %976
  %2129 = getelementptr i8, ptr %2127, i64 %978
  %2130 = getelementptr i8, ptr %2125, i64 20
  %2131 = load i16, ptr %2130, align 4, !tbaa !86
  %2132 = lshr i16 %2131, 2
  %2133 = and i16 %2132, 1
  %2134 = zext i16 %2133 to i32
  %2135 = getelementptr inbounds %struct.CCGVert, ptr %2125, i64 0, i32 2
  %2136 = load i16, ptr %2135, align 8, !tbaa !79
  %2137 = sext i16 %2136 to i32
  %2138 = icmp sgt i16 %2136, 0
  br i1 %2138, label %2139, label %2185

2139:                                             ; preds = %2122
  %2140 = getelementptr inbounds %struct.CCGVert, ptr %2125, i64 0, i32 6
  %2141 = load ptr, ptr %2140, align 8, !tbaa !56
  %2142 = icmp eq i16 %2133, 0
  %2143 = zext i32 %2137 to i64
  br label %2144

2144:                                             ; preds = %2139, %2168
  %2145 = phi i64 [ 0, %2139 ], [ %2176, %2168 ]
  %2146 = phi i32 [ 0, %2139 ], [ %2175, %2168 ]
  %2147 = phi i32 [ 1, %2139 ], [ %2173, %2168 ]
  %2148 = phi float [ 0.000000e+00, %2139 ], [ %2172, %2168 ]
  %2149 = phi i32 [ 0, %2139 ], [ %2169, %2168 ]
  %2150 = getelementptr inbounds ptr, ptr %2141, i64 %2145
  %2151 = load ptr, ptr %2150, align 8, !tbaa !14
  %2152 = getelementptr inbounds %struct.CCGEdge, ptr %2151, i64 0, i32 4
  %2153 = load float, ptr %2152, align 4, !tbaa !116
  br i1 %979, label %2160, label %2154

2154:                                             ; preds = %2144
  %2155 = fcmp fast une float %2153, 0.000000e+00
  br i1 %2155, label %2156, label %2160

2156:                                             ; preds = %2154
  %2157 = fsub fast float %2153, %980
  %2158 = fcmp fast olt float %2157, 0.000000e+00
  %2159 = select i1 %2158, float 0.000000e+00, float %2157
  br label %2160

2160:                                             ; preds = %2144, %2154, %2156
  %2161 = phi float [ 0.000000e+00, %2154 ], [ %2159, %2156 ], [ %2153, %2144 ]
  br i1 %2142, label %2168, label %2162

2162:                                             ; preds = %2160
  %2163 = getelementptr i8, ptr %2151, i64 16
  %2164 = load i16, ptr %2163, align 8, !tbaa !81
  %2165 = icmp slt i16 %2164, 2
  %2166 = zext i1 %2165 to i32
  %2167 = add nsw i32 %2149, %2166
  br label %2168

2168:                                             ; preds = %2162, %2160
  %2169 = phi i32 [ %2149, %2160 ], [ %2167, %2162 ]
  %2170 = fcmp fast une float %2161, 0.000000e+00
  %2171 = select i1 %2170, float %2161, float -0.000000e+00
  %2172 = fadd fast float %2171, %2148
  %2173 = select i1 %2170, i32 %2147, i32 0
  %2174 = zext i1 %2170 to i32
  %2175 = add nuw nsw i32 %2146, %2174
  %2176 = add nuw nsw i64 %2145, 1
  %2177 = icmp eq i64 %2176, %2143
  br i1 %2177, label %2178, label %2144, !llvm.loop !703

2178:                                             ; preds = %2168
  %2179 = icmp eq i32 %2175, 0
  br i1 %2179, label %2185, label %2180

2180:                                             ; preds = %2178
  %2181 = sitofp i32 %2175 to float
  %2182 = fdiv fast float %2172, %2181
  %2183 = fcmp fast ogt float %2182, 1.000000e+00
  br i1 %2183, label %2184, label %2185

2184:                                             ; preds = %2180
  br label %2185

2185:                                             ; preds = %2122, %2180, %2184, %2178
  %2186 = phi i32 [ %2175, %2184 ], [ %2175, %2180 ], [ 0, %2178 ], [ 0, %2122 ]
  %2187 = phi i32 [ %2173, %2184 ], [ %2173, %2180 ], [ %2173, %2178 ], [ 1, %2122 ]
  %2188 = phi i32 [ %2169, %2184 ], [ %2169, %2180 ], [ %2169, %2178 ], [ 0, %2122 ]
  %2189 = phi float [ 1.000000e+00, %2184 ], [ %2182, %2180 ], [ %2172, %2178 ], [ 0.000000e+00, %2122 ]
  %2190 = icmp sgt i32 %2188, 1
  %2191 = icmp eq i32 %2188, %2137
  %2192 = and i1 %2190, %2191
  %2193 = select i1 %2192, i32 %2134, i32 0
  %2194 = icmp eq i16 %2136, 0
  br i1 %2194, label %2198, label %2195

2195:                                             ; preds = %2185
  %2196 = load i32, ptr %981, align 4, !tbaa !223
  %2197 = icmp eq i32 %2196, 0
  br i1 %2197, label %2266, label %2198

2198:                                             ; preds = %2195, %2185
  %2199 = load i32, ptr %982, align 4, !tbaa !74
  %2200 = icmp sgt i32 %2199, 0
  br i1 %2200, label %2201, label %3256

2201:                                             ; preds = %2198
  %2202 = zext i32 %2199 to i64
  %2203 = icmp ult i32 %2199, 32
  br i1 %2203, label %2229, label %2204

2204:                                             ; preds = %2201
  %2205 = add i64 %1003, %2126
  %2206 = add i64 %1004, %2126
  %2207 = sub i64 %2205, %2206
  %2208 = icmp ult i64 %2207, 128
  br i1 %2208, label %2229, label %2209

2209:                                             ; preds = %2204
  %2210 = and i64 %2202, 4294967264
  br label %2211

2211:                                             ; preds = %2211, %2209
  %2212 = phi i64 [ 0, %2209 ], [ %2225, %2211 ]
  %2213 = getelementptr inbounds float, ptr %2128, i64 %2212
  %2214 = load <8 x float>, ptr %2213, align 4, !tbaa !65
  %2215 = getelementptr inbounds float, ptr %2213, i64 8
  %2216 = load <8 x float>, ptr %2215, align 4, !tbaa !65
  %2217 = getelementptr inbounds float, ptr %2213, i64 16
  %2218 = load <8 x float>, ptr %2217, align 4, !tbaa !65
  %2219 = getelementptr inbounds float, ptr %2213, i64 24
  %2220 = load <8 x float>, ptr %2219, align 4, !tbaa !65
  %2221 = getelementptr inbounds float, ptr %2129, i64 %2212
  store <8 x float> %2214, ptr %2221, align 4, !tbaa !65
  %2222 = getelementptr inbounds float, ptr %2221, i64 8
  store <8 x float> %2216, ptr %2222, align 4, !tbaa !65
  %2223 = getelementptr inbounds float, ptr %2221, i64 16
  store <8 x float> %2218, ptr %2223, align 4, !tbaa !65
  %2224 = getelementptr inbounds float, ptr %2221, i64 24
  store <8 x float> %2220, ptr %2224, align 4, !tbaa !65
  %2225 = add nuw i64 %2212, 32
  %2226 = icmp eq i64 %2225, %2210
  br i1 %2226, label %2227, label %2211, !llvm.loop !704

2227:                                             ; preds = %2211
  %2228 = icmp eq i64 %2210, %2202
  br i1 %2228, label %3256, label %2229

2229:                                             ; preds = %2204, %2201, %2227
  %2230 = phi i64 [ 0, %2204 ], [ 0, %2201 ], [ %2210, %2227 ]
  %2231 = xor i64 %2230, -1
  %2232 = add nsw i64 %2231, %2202
  %2233 = and i64 %2202, 3
  %2234 = icmp eq i64 %2233, 0
  br i1 %2234, label %2244, label %2235

2235:                                             ; preds = %2229, %2235
  %2236 = phi i64 [ %2241, %2235 ], [ %2230, %2229 ]
  %2237 = phi i64 [ %2242, %2235 ], [ 0, %2229 ]
  %2238 = getelementptr inbounds float, ptr %2128, i64 %2236
  %2239 = load float, ptr %2238, align 4, !tbaa !65
  %2240 = getelementptr inbounds float, ptr %2129, i64 %2236
  store float %2239, ptr %2240, align 4, !tbaa !65
  %2241 = add nuw nsw i64 %2236, 1
  %2242 = add i64 %2237, 1
  %2243 = icmp eq i64 %2242, %2233
  br i1 %2243, label %2244, label %2235, !llvm.loop !705

2244:                                             ; preds = %2235, %2229
  %2245 = phi i64 [ %2230, %2229 ], [ %2241, %2235 ]
  %2246 = icmp ult i64 %2232, 3
  br i1 %2246, label %3256, label %2247

2247:                                             ; preds = %2244, %2247
  %2248 = phi i64 [ %2264, %2247 ], [ %2245, %2244 ]
  %2249 = getelementptr inbounds float, ptr %2128, i64 %2248
  %2250 = load float, ptr %2249, align 4, !tbaa !65
  %2251 = getelementptr inbounds float, ptr %2129, i64 %2248
  store float %2250, ptr %2251, align 4, !tbaa !65
  %2252 = add nuw nsw i64 %2248, 1
  %2253 = getelementptr inbounds float, ptr %2128, i64 %2252
  %2254 = load float, ptr %2253, align 4, !tbaa !65
  %2255 = getelementptr inbounds float, ptr %2129, i64 %2252
  store float %2254, ptr %2255, align 4, !tbaa !65
  %2256 = add nuw nsw i64 %2248, 2
  %2257 = getelementptr inbounds float, ptr %2128, i64 %2256
  %2258 = load float, ptr %2257, align 4, !tbaa !65
  %2259 = getelementptr inbounds float, ptr %2129, i64 %2256
  store float %2258, ptr %2259, align 4, !tbaa !65
  %2260 = add nuw nsw i64 %2248, 3
  %2261 = getelementptr inbounds float, ptr %2128, i64 %2260
  %2262 = load float, ptr %2261, align 4, !tbaa !65
  %2263 = getelementptr inbounds float, ptr %2129, i64 %2260
  store float %2262, ptr %2263, align 4, !tbaa !65
  %2264 = add nuw nsw i64 %2248, 4
  %2265 = icmp eq i64 %2264, %2202
  br i1 %2265, label %3256, label %2247, !llvm.loop !706

2266:                                             ; preds = %2195
  br i1 %2138, label %2267, label %2617

2267:                                             ; preds = %2266
  %2268 = zext i16 %2136 to i64
  %2269 = getelementptr inbounds %struct.CCGVert, ptr %2125, i64 0, i32 6
  %2270 = load ptr, ptr %2269, align 8, !tbaa !56
  br label %2274

2271:                                             ; preds = %2274
  %2272 = add nuw nsw i64 %2275, 1
  %2273 = icmp eq i64 %2272, %2268
  br i1 %2273, label %2617, label %2274, !llvm.loop !227

2274:                                             ; preds = %2271, %2267
  %2275 = phi i64 [ 0, %2267 ], [ %2272, %2271 ]
  %2276 = getelementptr inbounds ptr, ptr %2270, i64 %2275
  %2277 = load ptr, ptr %2276, align 8, !tbaa !14
  %2278 = getelementptr i8, ptr %2277, i64 16
  %2279 = load i16, ptr %2278, align 8, !tbaa !81
  %2280 = icmp sgt i16 %2279, 1
  br i1 %2280, label %2271, label %2281

2281:                                             ; preds = %2274
  %2282 = load i32, ptr %982, align 4, !tbaa !74
  %2283 = sext i32 %2282 to i64
  %2284 = shl nsw i64 %2283, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %21, i8 0, i64 %2284, i1 false)
  %2285 = load i16, ptr %2135, align 8, !tbaa !79
  %2286 = icmp sgt i16 %2285, 0
  br i1 %2286, label %2287, label %2403

2287:                                             ; preds = %2281
  %2288 = zext i16 %2285 to i64
  %2289 = load ptr, ptr %2269, align 8, !tbaa !56
  br label %2290

2290:                                             ; preds = %2287, %2399
  %2291 = phi i64 [ 0, %2287 ], [ %2401, %2399 ]
  %2292 = phi i32 [ 0, %2287 ], [ %2400, %2399 ]
  %2293 = getelementptr inbounds ptr, ptr %2289, i64 %2291
  %2294 = load ptr, ptr %2293, align 8, !tbaa !14
  %2295 = getelementptr i8, ptr %2294, i64 16
  %2296 = load i16, ptr %2295, align 8, !tbaa !81
  %2297 = icmp sgt i16 %2296, 1
  br i1 %2297, label %2399, label %2298

2298:                                             ; preds = %2290
  %2299 = getelementptr inbounds %struct.CCGEdge, ptr %2294, i64 0, i32 5
  %2300 = load ptr, ptr %2299, align 8, !tbaa !83
  %2301 = icmp eq ptr %2300, %2125
  %2302 = getelementptr inbounds %struct.CCGEdge, ptr %2294, i64 1
  %2303 = select i1 %2301, i32 1, i32 %984
  %2304 = add i32 %983, %2303
  %2305 = mul nsw i32 %2304, %16
  %2306 = sext i32 %2305 to i64
  %2307 = getelementptr i8, ptr %2302, i64 %2306
  %2308 = load i32, ptr %982, align 4, !tbaa !74
  %2309 = icmp sgt i32 %2308, 0
  br i1 %2309, label %2310, label %2397

2310:                                             ; preds = %2298
  %2311 = zext i32 %2308 to i64
  %2312 = icmp ult i32 %2308, 32
  br i1 %2312, label %2350, label %2313

2313:                                             ; preds = %2310
  %2314 = shl nuw nsw i64 %2311, 2
  %2315 = getelementptr i8, ptr %21, i64 %2314
  %2316 = getelementptr i8, ptr %2294, i64 48
  %2317 = add nsw i64 %2314, %2306
  %2318 = getelementptr i8, ptr %2316, i64 %2317
  %2319 = icmp ult ptr %21, %2318
  %2320 = icmp ult ptr %2307, %2315
  %2321 = and i1 %2319, %2320
  br i1 %2321, label %2350, label %2322

2322:                                             ; preds = %2313
  %2323 = and i64 %2311, 4294967264
  br label %2324

2324:                                             ; preds = %2324, %2322
  %2325 = phi i64 [ 0, %2322 ], [ %2346, %2324 ]
  %2326 = getelementptr inbounds float, ptr %2307, i64 %2325
  %2327 = load <8 x float>, ptr %2326, align 4, !tbaa !65, !alias.scope !707
  %2328 = getelementptr inbounds float, ptr %2326, i64 8
  %2329 = load <8 x float>, ptr %2328, align 4, !tbaa !65, !alias.scope !707
  %2330 = getelementptr inbounds float, ptr %2326, i64 16
  %2331 = load <8 x float>, ptr %2330, align 4, !tbaa !65, !alias.scope !707
  %2332 = getelementptr inbounds float, ptr %2326, i64 24
  %2333 = load <8 x float>, ptr %2332, align 4, !tbaa !65, !alias.scope !707
  %2334 = getelementptr inbounds float, ptr %21, i64 %2325
  %2335 = load <8 x float>, ptr %2334, align 4, !tbaa !65, !alias.scope !710, !noalias !707
  %2336 = getelementptr inbounds float, ptr %2334, i64 8
  %2337 = load <8 x float>, ptr %2336, align 4, !tbaa !65, !alias.scope !710, !noalias !707
  %2338 = getelementptr inbounds float, ptr %2334, i64 16
  %2339 = load <8 x float>, ptr %2338, align 4, !tbaa !65, !alias.scope !710, !noalias !707
  %2340 = getelementptr inbounds float, ptr %2334, i64 24
  %2341 = load <8 x float>, ptr %2340, align 4, !tbaa !65, !alias.scope !710, !noalias !707
  %2342 = fadd fast <8 x float> %2335, %2327
  %2343 = fadd fast <8 x float> %2337, %2329
  %2344 = fadd fast <8 x float> %2339, %2331
  %2345 = fadd fast <8 x float> %2341, %2333
  store <8 x float> %2342, ptr %2334, align 4, !tbaa !65, !alias.scope !710, !noalias !707
  store <8 x float> %2343, ptr %2336, align 4, !tbaa !65, !alias.scope !710, !noalias !707
  store <8 x float> %2344, ptr %2338, align 4, !tbaa !65, !alias.scope !710, !noalias !707
  store <8 x float> %2345, ptr %2340, align 4, !tbaa !65, !alias.scope !710, !noalias !707
  %2346 = add nuw i64 %2325, 32
  %2347 = icmp eq i64 %2346, %2323
  br i1 %2347, label %2348, label %2324, !llvm.loop !712

2348:                                             ; preds = %2324
  %2349 = icmp eq i64 %2323, %2311
  br i1 %2349, label %2397, label %2350

2350:                                             ; preds = %2313, %2310, %2348
  %2351 = phi i64 [ 0, %2313 ], [ 0, %2310 ], [ %2323, %2348 ]
  %2352 = xor i64 %2351, -1
  %2353 = add nsw i64 %2352, %2311
  %2354 = and i64 %2311, 3
  %2355 = icmp eq i64 %2354, 0
  br i1 %2355, label %2367, label %2356

2356:                                             ; preds = %2350, %2356
  %2357 = phi i64 [ %2364, %2356 ], [ %2351, %2350 ]
  %2358 = phi i64 [ %2365, %2356 ], [ 0, %2350 ]
  %2359 = getelementptr inbounds float, ptr %2307, i64 %2357
  %2360 = load float, ptr %2359, align 4, !tbaa !65
  %2361 = getelementptr inbounds float, ptr %21, i64 %2357
  %2362 = load float, ptr %2361, align 4, !tbaa !65
  %2363 = fadd fast float %2362, %2360
  store float %2363, ptr %2361, align 4, !tbaa !65
  %2364 = add nuw nsw i64 %2357, 1
  %2365 = add i64 %2358, 1
  %2366 = icmp eq i64 %2365, %2354
  br i1 %2366, label %2367, label %2356, !llvm.loop !713

2367:                                             ; preds = %2356, %2350
  %2368 = phi i64 [ %2351, %2350 ], [ %2364, %2356 ]
  %2369 = icmp ult i64 %2353, 3
  br i1 %2369, label %2397, label %2370

2370:                                             ; preds = %2367, %2370
  %2371 = phi i64 [ %2395, %2370 ], [ %2368, %2367 ]
  %2372 = getelementptr inbounds float, ptr %2307, i64 %2371
  %2373 = load float, ptr %2372, align 4, !tbaa !65
  %2374 = getelementptr inbounds float, ptr %21, i64 %2371
  %2375 = load float, ptr %2374, align 4, !tbaa !65
  %2376 = fadd fast float %2375, %2373
  store float %2376, ptr %2374, align 4, !tbaa !65
  %2377 = add nuw nsw i64 %2371, 1
  %2378 = getelementptr inbounds float, ptr %2307, i64 %2377
  %2379 = load float, ptr %2378, align 4, !tbaa !65
  %2380 = getelementptr inbounds float, ptr %21, i64 %2377
  %2381 = load float, ptr %2380, align 4, !tbaa !65
  %2382 = fadd fast float %2381, %2379
  store float %2382, ptr %2380, align 4, !tbaa !65
  %2383 = add nuw nsw i64 %2371, 2
  %2384 = getelementptr inbounds float, ptr %2307, i64 %2383
  %2385 = load float, ptr %2384, align 4, !tbaa !65
  %2386 = getelementptr inbounds float, ptr %21, i64 %2383
  %2387 = load float, ptr %2386, align 4, !tbaa !65
  %2388 = fadd fast float %2387, %2385
  store float %2388, ptr %2386, align 4, !tbaa !65
  %2389 = add nuw nsw i64 %2371, 3
  %2390 = getelementptr inbounds float, ptr %2307, i64 %2389
  %2391 = load float, ptr %2390, align 4, !tbaa !65
  %2392 = getelementptr inbounds float, ptr %21, i64 %2389
  %2393 = load float, ptr %2392, align 4, !tbaa !65
  %2394 = fadd fast float %2393, %2391
  store float %2394, ptr %2392, align 4, !tbaa !65
  %2395 = add nuw nsw i64 %2371, 4
  %2396 = icmp eq i64 %2395, %2311
  br i1 %2396, label %2397, label %2370, !llvm.loop !714

2397:                                             ; preds = %2367, %2370, %2348, %2298
  %2398 = add nsw i32 %2292, 1
  br label %2399

2399:                                             ; preds = %2397, %2290
  %2400 = phi i32 [ %2398, %2397 ], [ %2292, %2290 ]
  %2401 = add nuw nsw i64 %2291, 1
  %2402 = icmp eq i64 %2401, %2288
  br i1 %2402, label %2403, label %2290, !llvm.loop !715

2403:                                             ; preds = %2399, %2281
  %2404 = phi i32 [ 0, %2281 ], [ %2400, %2399 ]
  %2405 = load i32, ptr %982, align 4, !tbaa !74
  %2406 = icmp sgt i32 %2405, 0
  br i1 %2406, label %2407, label %3256

2407:                                             ; preds = %2403
  %2408 = zext i32 %2405 to i64
  %2409 = icmp ult i32 %2405, 32
  br i1 %2409, label %2435, label %2410

2410:                                             ; preds = %2407
  %2411 = add i64 %1011, %2126
  %2412 = add i64 %1012, %2126
  %2413 = sub i64 %2411, %2412
  %2414 = icmp ult i64 %2413, 128
  br i1 %2414, label %2435, label %2415

2415:                                             ; preds = %2410
  %2416 = and i64 %2408, 4294967264
  br label %2417

2417:                                             ; preds = %2417, %2415
  %2418 = phi i64 [ 0, %2415 ], [ %2431, %2417 ]
  %2419 = getelementptr inbounds float, ptr %2128, i64 %2418
  %2420 = load <8 x float>, ptr %2419, align 4, !tbaa !65
  %2421 = getelementptr inbounds float, ptr %2419, i64 8
  %2422 = load <8 x float>, ptr %2421, align 4, !tbaa !65
  %2423 = getelementptr inbounds float, ptr %2419, i64 16
  %2424 = load <8 x float>, ptr %2423, align 4, !tbaa !65
  %2425 = getelementptr inbounds float, ptr %2419, i64 24
  %2426 = load <8 x float>, ptr %2425, align 4, !tbaa !65
  %2427 = getelementptr inbounds float, ptr %2129, i64 %2418
  store <8 x float> %2420, ptr %2427, align 4, !tbaa !65
  %2428 = getelementptr inbounds float, ptr %2427, i64 8
  store <8 x float> %2422, ptr %2428, align 4, !tbaa !65
  %2429 = getelementptr inbounds float, ptr %2427, i64 16
  store <8 x float> %2424, ptr %2429, align 4, !tbaa !65
  %2430 = getelementptr inbounds float, ptr %2427, i64 24
  store <8 x float> %2426, ptr %2430, align 4, !tbaa !65
  %2431 = add nuw i64 %2418, 32
  %2432 = icmp eq i64 %2431, %2416
  br i1 %2432, label %2433, label %2417, !llvm.loop !716

2433:                                             ; preds = %2417
  %2434 = icmp eq i64 %2416, %2408
  br i1 %2434, label %2472, label %2435

2435:                                             ; preds = %2410, %2407, %2433
  %2436 = phi i64 [ 0, %2410 ], [ 0, %2407 ], [ %2416, %2433 ]
  %2437 = xor i64 %2436, -1
  %2438 = add nsw i64 %2437, %2408
  %2439 = and i64 %2408, 3
  %2440 = icmp eq i64 %2439, 0
  br i1 %2440, label %2450, label %2441

2441:                                             ; preds = %2435, %2441
  %2442 = phi i64 [ %2447, %2441 ], [ %2436, %2435 ]
  %2443 = phi i64 [ %2448, %2441 ], [ 0, %2435 ]
  %2444 = getelementptr inbounds float, ptr %2128, i64 %2442
  %2445 = load float, ptr %2444, align 4, !tbaa !65
  %2446 = getelementptr inbounds float, ptr %2129, i64 %2442
  store float %2445, ptr %2446, align 4, !tbaa !65
  %2447 = add nuw nsw i64 %2442, 1
  %2448 = add i64 %2443, 1
  %2449 = icmp eq i64 %2448, %2439
  br i1 %2449, label %2450, label %2441, !llvm.loop !717

2450:                                             ; preds = %2441, %2435
  %2451 = phi i64 [ %2436, %2435 ], [ %2447, %2441 ]
  %2452 = icmp ult i64 %2438, 3
  br i1 %2452, label %2472, label %2453

2453:                                             ; preds = %2450, %2453
  %2454 = phi i64 [ %2470, %2453 ], [ %2451, %2450 ]
  %2455 = getelementptr inbounds float, ptr %2128, i64 %2454
  %2456 = load float, ptr %2455, align 4, !tbaa !65
  %2457 = getelementptr inbounds float, ptr %2129, i64 %2454
  store float %2456, ptr %2457, align 4, !tbaa !65
  %2458 = add nuw nsw i64 %2454, 1
  %2459 = getelementptr inbounds float, ptr %2128, i64 %2458
  %2460 = load float, ptr %2459, align 4, !tbaa !65
  %2461 = getelementptr inbounds float, ptr %2129, i64 %2458
  store float %2460, ptr %2461, align 4, !tbaa !65
  %2462 = add nuw nsw i64 %2454, 2
  %2463 = getelementptr inbounds float, ptr %2128, i64 %2462
  %2464 = load float, ptr %2463, align 4, !tbaa !65
  %2465 = getelementptr inbounds float, ptr %2129, i64 %2462
  store float %2464, ptr %2465, align 4, !tbaa !65
  %2466 = add nuw nsw i64 %2454, 3
  %2467 = getelementptr inbounds float, ptr %2128, i64 %2466
  %2468 = load float, ptr %2467, align 4, !tbaa !65
  %2469 = getelementptr inbounds float, ptr %2129, i64 %2466
  store float %2468, ptr %2469, align 4, !tbaa !65
  %2470 = add nuw nsw i64 %2454, 4
  %2471 = icmp eq i64 %2470, %2408
  br i1 %2471, label %2472, label %2453, !llvm.loop !718

2472:                                             ; preds = %2450, %2453, %2433
  %2473 = icmp ult i32 %2405, 32
  br i1 %2473, label %2494, label %2474

2474:                                             ; preds = %2472
  %2475 = and i64 %2408, 4294967264
  br label %2476

2476:                                             ; preds = %2476, %2474
  %2477 = phi i64 [ 0, %2474 ], [ %2490, %2476 ]
  %2478 = getelementptr inbounds float, ptr %2129, i64 %2477
  %2479 = load <8 x float>, ptr %2478, align 4, !tbaa !65
  %2480 = getelementptr inbounds float, ptr %2478, i64 8
  %2481 = load <8 x float>, ptr %2480, align 4, !tbaa !65
  %2482 = getelementptr inbounds float, ptr %2478, i64 16
  %2483 = load <8 x float>, ptr %2482, align 4, !tbaa !65
  %2484 = getelementptr inbounds float, ptr %2478, i64 24
  %2485 = load <8 x float>, ptr %2484, align 4, !tbaa !65
  %2486 = fmul fast <8 x float> %2479, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  %2487 = fmul fast <8 x float> %2481, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  %2488 = fmul fast <8 x float> %2483, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  %2489 = fmul fast <8 x float> %2485, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  store <8 x float> %2486, ptr %2478, align 4, !tbaa !65
  store <8 x float> %2487, ptr %2480, align 4, !tbaa !65
  store <8 x float> %2488, ptr %2482, align 4, !tbaa !65
  store <8 x float> %2489, ptr %2484, align 4, !tbaa !65
  %2490 = add nuw i64 %2477, 32
  %2491 = icmp eq i64 %2490, %2475
  br i1 %2491, label %2492, label %2476, !llvm.loop !719

2492:                                             ; preds = %2476
  %2493 = icmp eq i64 %2475, %2408
  br i1 %2493, label %2503, label %2494

2494:                                             ; preds = %2472, %2492
  %2495 = phi i64 [ 0, %2472 ], [ %2475, %2492 ]
  br label %2496

2496:                                             ; preds = %2494, %2496
  %2497 = phi i64 [ %2501, %2496 ], [ %2495, %2494 ]
  %2498 = getelementptr inbounds float, ptr %2129, i64 %2497
  %2499 = load float, ptr %2498, align 4, !tbaa !65
  %2500 = fmul fast float %2499, 7.500000e-01
  store float %2500, ptr %2498, align 4, !tbaa !65
  %2501 = add nuw nsw i64 %2497, 1
  %2502 = icmp eq i64 %2501, %2408
  br i1 %2502, label %2503, label %2496, !llvm.loop !720

2503:                                             ; preds = %2496, %2492
  %2504 = sitofp i32 %2404 to float
  %2505 = icmp ult i32 %2405, 8
  br i1 %2505, label %2521, label %2506

2506:                                             ; preds = %2503
  %2507 = and i64 %2408, 4294967288
  %2508 = insertelement <8 x float> poison, float %2504, i64 0
  %2509 = shufflevector <8 x float> %2508, <8 x float> poison, <8 x i32> zeroinitializer
  %2510 = fdiv fast <8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2509
  br label %2511

2511:                                             ; preds = %2511, %2506
  %2512 = phi i64 [ 0, %2506 ], [ %2517, %2511 ]
  %2513 = getelementptr inbounds float, ptr %21, i64 %2512
  %2514 = load <8 x float>, ptr %2513, align 4, !tbaa !65
  %2515 = fmul fast <8 x float> %2514, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %2516 = fmul fast <8 x float> %2515, %2510
  store <8 x float> %2516, ptr %2513, align 4, !tbaa !65
  %2517 = add nuw i64 %2512, 8
  %2518 = icmp eq i64 %2517, %2507
  br i1 %2518, label %2519, label %2511, !llvm.loop !721

2519:                                             ; preds = %2511
  %2520 = icmp eq i64 %2507, %2408
  br i1 %2520, label %2532, label %2521

2521:                                             ; preds = %2503, %2519
  %2522 = phi i64 [ 0, %2503 ], [ %2507, %2519 ]
  %2523 = fdiv fast float 1.000000e+00, %2504
  br label %2524

2524:                                             ; preds = %2521, %2524
  %2525 = phi i64 [ %2530, %2524 ], [ %2522, %2521 ]
  %2526 = getelementptr inbounds float, ptr %21, i64 %2525
  %2527 = load float, ptr %2526, align 4, !tbaa !65
  %2528 = fmul fast float %2527, 2.500000e-01
  %2529 = fmul fast float %2528, %2523
  store float %2529, ptr %2526, align 4, !tbaa !65
  %2530 = add nuw nsw i64 %2525, 1
  %2531 = icmp eq i64 %2530, %2408
  br i1 %2531, label %2532, label %2524, !llvm.loop !722

2532:                                             ; preds = %2524, %2519
  %2533 = icmp ult i32 %2405, 32
  br i1 %2533, label %2570, label %2534

2534:                                             ; preds = %2532
  %2535 = getelementptr i8, ptr %2125, i64 %1010
  %2536 = shl nuw nsw i64 %2408, 2
  %2537 = getelementptr i8, ptr %2535, i64 %2536
  %2538 = getelementptr i8, ptr %21, i64 %2536
  %2539 = icmp ult ptr %2129, %2538
  %2540 = icmp ult ptr %21, %2537
  %2541 = and i1 %2539, %2540
  br i1 %2541, label %2570, label %2542

2542:                                             ; preds = %2534
  %2543 = and i64 %2408, 4294967264
  br label %2544

2544:                                             ; preds = %2544, %2542
  %2545 = phi i64 [ 0, %2542 ], [ %2566, %2544 ]
  %2546 = getelementptr inbounds float, ptr %21, i64 %2545
  %2547 = load <8 x float>, ptr %2546, align 4, !tbaa !65, !alias.scope !723
  %2548 = getelementptr inbounds float, ptr %2546, i64 8
  %2549 = load <8 x float>, ptr %2548, align 4, !tbaa !65, !alias.scope !723
  %2550 = getelementptr inbounds float, ptr %2546, i64 16
  %2551 = load <8 x float>, ptr %2550, align 4, !tbaa !65, !alias.scope !723
  %2552 = getelementptr inbounds float, ptr %2546, i64 24
  %2553 = load <8 x float>, ptr %2552, align 4, !tbaa !65, !alias.scope !723
  %2554 = getelementptr inbounds float, ptr %2129, i64 %2545
  %2555 = load <8 x float>, ptr %2554, align 4, !tbaa !65, !alias.scope !726, !noalias !723
  %2556 = getelementptr inbounds float, ptr %2554, i64 8
  %2557 = load <8 x float>, ptr %2556, align 4, !tbaa !65, !alias.scope !726, !noalias !723
  %2558 = getelementptr inbounds float, ptr %2554, i64 16
  %2559 = load <8 x float>, ptr %2558, align 4, !tbaa !65, !alias.scope !726, !noalias !723
  %2560 = getelementptr inbounds float, ptr %2554, i64 24
  %2561 = load <8 x float>, ptr %2560, align 4, !tbaa !65, !alias.scope !726, !noalias !723
  %2562 = fadd fast <8 x float> %2555, %2547
  %2563 = fadd fast <8 x float> %2557, %2549
  %2564 = fadd fast <8 x float> %2559, %2551
  %2565 = fadd fast <8 x float> %2561, %2553
  store <8 x float> %2562, ptr %2554, align 4, !tbaa !65, !alias.scope !726, !noalias !723
  store <8 x float> %2563, ptr %2556, align 4, !tbaa !65, !alias.scope !726, !noalias !723
  store <8 x float> %2564, ptr %2558, align 4, !tbaa !65, !alias.scope !726, !noalias !723
  store <8 x float> %2565, ptr %2560, align 4, !tbaa !65, !alias.scope !726, !noalias !723
  %2566 = add nuw i64 %2545, 32
  %2567 = icmp eq i64 %2566, %2543
  br i1 %2567, label %2568, label %2544, !llvm.loop !728

2568:                                             ; preds = %2544
  %2569 = icmp eq i64 %2543, %2408
  br i1 %2569, label %3256, label %2570

2570:                                             ; preds = %2534, %2532, %2568
  %2571 = phi i64 [ 0, %2534 ], [ 0, %2532 ], [ %2543, %2568 ]
  %2572 = xor i64 %2571, -1
  %2573 = add nsw i64 %2572, %2408
  %2574 = and i64 %2408, 3
  %2575 = icmp eq i64 %2574, 0
  br i1 %2575, label %2587, label %2576

2576:                                             ; preds = %2570, %2576
  %2577 = phi i64 [ %2584, %2576 ], [ %2571, %2570 ]
  %2578 = phi i64 [ %2585, %2576 ], [ 0, %2570 ]
  %2579 = getelementptr inbounds float, ptr %21, i64 %2577
  %2580 = load float, ptr %2579, align 4, !tbaa !65
  %2581 = getelementptr inbounds float, ptr %2129, i64 %2577
  %2582 = load float, ptr %2581, align 4, !tbaa !65
  %2583 = fadd fast float %2582, %2580
  store float %2583, ptr %2581, align 4, !tbaa !65
  %2584 = add nuw nsw i64 %2577, 1
  %2585 = add i64 %2578, 1
  %2586 = icmp eq i64 %2585, %2574
  br i1 %2586, label %2587, label %2576, !llvm.loop !729

2587:                                             ; preds = %2576, %2570
  %2588 = phi i64 [ %2571, %2570 ], [ %2584, %2576 ]
  %2589 = icmp ult i64 %2573, 3
  br i1 %2589, label %3256, label %2590

2590:                                             ; preds = %2587, %2590
  %2591 = phi i64 [ %2615, %2590 ], [ %2588, %2587 ]
  %2592 = getelementptr inbounds float, ptr %21, i64 %2591
  %2593 = load float, ptr %2592, align 4, !tbaa !65
  %2594 = getelementptr inbounds float, ptr %2129, i64 %2591
  %2595 = load float, ptr %2594, align 4, !tbaa !65
  %2596 = fadd fast float %2595, %2593
  store float %2596, ptr %2594, align 4, !tbaa !65
  %2597 = add nuw nsw i64 %2591, 1
  %2598 = getelementptr inbounds float, ptr %21, i64 %2597
  %2599 = load float, ptr %2598, align 4, !tbaa !65
  %2600 = getelementptr inbounds float, ptr %2129, i64 %2597
  %2601 = load float, ptr %2600, align 4, !tbaa !65
  %2602 = fadd fast float %2601, %2599
  store float %2602, ptr %2600, align 4, !tbaa !65
  %2603 = add nuw nsw i64 %2591, 2
  %2604 = getelementptr inbounds float, ptr %21, i64 %2603
  %2605 = load float, ptr %2604, align 4, !tbaa !65
  %2606 = getelementptr inbounds float, ptr %2129, i64 %2603
  %2607 = load float, ptr %2606, align 4, !tbaa !65
  %2608 = fadd fast float %2607, %2605
  store float %2608, ptr %2606, align 4, !tbaa !65
  %2609 = add nuw nsw i64 %2591, 3
  %2610 = getelementptr inbounds float, ptr %21, i64 %2609
  %2611 = load float, ptr %2610, align 4, !tbaa !65
  %2612 = getelementptr inbounds float, ptr %2129, i64 %2609
  %2613 = load float, ptr %2612, align 4, !tbaa !65
  %2614 = fadd fast float %2613, %2611
  store float %2614, ptr %2612, align 4, !tbaa !65
  %2615 = add nuw nsw i64 %2591, 4
  %2616 = icmp eq i64 %2615, %2408
  br i1 %2616, label %3256, label %2590, !llvm.loop !730

2617:                                             ; preds = %2271, %2266
  %2618 = load i32, ptr %982, align 4, !tbaa !74
  %2619 = sext i32 %2618 to i64
  %2620 = shl nsw i64 %2619, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %18, i8 0, i64 %2620, i1 false)
  %2621 = getelementptr inbounds %struct.CCGVert, ptr %2125, i64 0, i32 3
  %2622 = load i16, ptr %2621, align 2, !tbaa !78
  %2623 = sext i16 %2622 to i32
  %2624 = icmp sgt i16 %2622, 0
  %2625 = load i32, ptr %982, align 4, !tbaa !74
  br i1 %2624, label %2626, label %2753

2626:                                             ; preds = %2617
  %2627 = getelementptr inbounds %struct.CCGVert, ptr %2125, i64 0, i32 7
  %2628 = load ptr, ptr %2627, align 8, !tbaa !58
  %2629 = icmp sgt i32 %2625, 0
  %2630 = zext i32 %2625 to i64
  %2631 = zext i32 %2623 to i64
  %2632 = shl nuw nsw i64 %2630, 2
  %2633 = getelementptr i8, ptr %18, i64 %2632
  %2634 = icmp ult i32 %2625, 32
  %2635 = and i64 %2630, 4294967264
  %2636 = icmp eq i64 %2635, %2630
  %2637 = and i64 %2630, 3
  %2638 = icmp eq i64 %2637, 0
  br label %2639

2639:                                             ; preds = %2626, %2750
  %2640 = phi i64 [ 0, %2626 ], [ %2751, %2750 ]
  %2641 = getelementptr inbounds ptr, ptr %2628, i64 %2640
  %2642 = load ptr, ptr %2641, align 8, !tbaa !14
  %2643 = getelementptr inbounds %struct.CCGFace, ptr %2642, i64 1
  %2644 = getelementptr inbounds %struct.CCGFace, ptr %2642, i64 0, i32 2
  %2645 = load i16, ptr %2644, align 8, !tbaa !89
  %2646 = icmp sgt i16 %2645, 0
  br i1 %2646, label %2647, label %2659

2647:                                             ; preds = %2639
  %2648 = zext i16 %2645 to i64
  br label %2649

2649:                                             ; preds = %2654, %2647
  %2650 = phi i64 [ 0, %2647 ], [ %2655, %2654 ]
  %2651 = getelementptr inbounds ptr, ptr %2643, i64 %2650
  %2652 = load ptr, ptr %2651, align 8, !tbaa !14
  %2653 = icmp eq ptr %2652, %2125
  br i1 %2653, label %2657, label %2654

2654:                                             ; preds = %2649
  %2655 = add nuw nsw i64 %2650, 1
  %2656 = icmp eq i64 %2655, %2648
  br i1 %2656, label %2659, label %2649, !llvm.loop !584

2657:                                             ; preds = %2649
  %2658 = trunc i64 %2650 to i32
  br label %2659

2659:                                             ; preds = %2654, %2639, %2657
  %2660 = phi i32 [ -1, %2639 ], [ %2658, %2657 ], [ -1, %2654 ]
  %2661 = sext i16 %2645 to i64
  %2662 = getelementptr inbounds ptr, ptr %2643, i64 %2661
  %2663 = getelementptr inbounds ptr, ptr %2662, i64 %2661
  %2664 = mul i32 %991, %2660
  %2665 = add nsw i32 %2664, 1
  %2666 = mul nsw i32 %2665, %16
  %2667 = sext i32 %2666 to i64
  %2668 = getelementptr inbounds i8, ptr %2663, i64 %2667
  %2669 = getelementptr i8, ptr %2668, i64 %997
  br i1 %2629, label %2670, label %2750

2670:                                             ; preds = %2659
  br i1 %2634, label %2705, label %2671

2671:                                             ; preds = %2670
  %2672 = getelementptr i8, ptr %2642, i64 %1009
  %2673 = getelementptr i8, ptr %2672, i64 %2632
  %2674 = shl nsw i64 %2661, 4
  %2675 = add nsw i64 %2674, %2667
  %2676 = getelementptr i8, ptr %2673, i64 %2675
  %2677 = icmp ult ptr %18, %2676
  %2678 = icmp ult ptr %2669, %2633
  %2679 = and i1 %2677, %2678
  br i1 %2679, label %2705, label %2680

2680:                                             ; preds = %2671, %2680
  %2681 = phi i64 [ %2702, %2680 ], [ 0, %2671 ]
  %2682 = getelementptr inbounds float, ptr %2669, i64 %2681
  %2683 = load <8 x float>, ptr %2682, align 4, !tbaa !65, !alias.scope !731
  %2684 = getelementptr inbounds float, ptr %2682, i64 8
  %2685 = load <8 x float>, ptr %2684, align 4, !tbaa !65, !alias.scope !731
  %2686 = getelementptr inbounds float, ptr %2682, i64 16
  %2687 = load <8 x float>, ptr %2686, align 4, !tbaa !65, !alias.scope !731
  %2688 = getelementptr inbounds float, ptr %2682, i64 24
  %2689 = load <8 x float>, ptr %2688, align 4, !tbaa !65, !alias.scope !731
  %2690 = getelementptr inbounds float, ptr %18, i64 %2681
  %2691 = load <8 x float>, ptr %2690, align 4, !tbaa !65, !alias.scope !734, !noalias !731
  %2692 = getelementptr inbounds float, ptr %2690, i64 8
  %2693 = load <8 x float>, ptr %2692, align 4, !tbaa !65, !alias.scope !734, !noalias !731
  %2694 = getelementptr inbounds float, ptr %2690, i64 16
  %2695 = load <8 x float>, ptr %2694, align 4, !tbaa !65, !alias.scope !734, !noalias !731
  %2696 = getelementptr inbounds float, ptr %2690, i64 24
  %2697 = load <8 x float>, ptr %2696, align 4, !tbaa !65, !alias.scope !734, !noalias !731
  %2698 = fadd fast <8 x float> %2691, %2683
  %2699 = fadd fast <8 x float> %2693, %2685
  %2700 = fadd fast <8 x float> %2695, %2687
  %2701 = fadd fast <8 x float> %2697, %2689
  store <8 x float> %2698, ptr %2690, align 4, !tbaa !65, !alias.scope !734, !noalias !731
  store <8 x float> %2699, ptr %2692, align 4, !tbaa !65, !alias.scope !734, !noalias !731
  store <8 x float> %2700, ptr %2694, align 4, !tbaa !65, !alias.scope !734, !noalias !731
  store <8 x float> %2701, ptr %2696, align 4, !tbaa !65, !alias.scope !734, !noalias !731
  %2702 = add nuw i64 %2681, 32
  %2703 = icmp eq i64 %2702, %2635
  br i1 %2703, label %2704, label %2680, !llvm.loop !736

2704:                                             ; preds = %2680
  br i1 %2636, label %2750, label %2705

2705:                                             ; preds = %2671, %2670, %2704
  %2706 = phi i64 [ 0, %2671 ], [ 0, %2670 ], [ %2635, %2704 ]
  %2707 = xor i64 %2706, -1
  %2708 = add nsw i64 %2707, %2630
  br i1 %2638, label %2720, label %2709

2709:                                             ; preds = %2705, %2709
  %2710 = phi i64 [ %2717, %2709 ], [ %2706, %2705 ]
  %2711 = phi i64 [ %2718, %2709 ], [ 0, %2705 ]
  %2712 = getelementptr inbounds float, ptr %2669, i64 %2710
  %2713 = load float, ptr %2712, align 4, !tbaa !65
  %2714 = getelementptr inbounds float, ptr %18, i64 %2710
  %2715 = load float, ptr %2714, align 4, !tbaa !65
  %2716 = fadd fast float %2715, %2713
  store float %2716, ptr %2714, align 4, !tbaa !65
  %2717 = add nuw nsw i64 %2710, 1
  %2718 = add i64 %2711, 1
  %2719 = icmp eq i64 %2718, %2637
  br i1 %2719, label %2720, label %2709, !llvm.loop !737

2720:                                             ; preds = %2709, %2705
  %2721 = phi i64 [ %2706, %2705 ], [ %2717, %2709 ]
  %2722 = icmp ult i64 %2708, 3
  br i1 %2722, label %2750, label %2723

2723:                                             ; preds = %2720, %2723
  %2724 = phi i64 [ %2748, %2723 ], [ %2721, %2720 ]
  %2725 = getelementptr inbounds float, ptr %2669, i64 %2724
  %2726 = load float, ptr %2725, align 4, !tbaa !65
  %2727 = getelementptr inbounds float, ptr %18, i64 %2724
  %2728 = load float, ptr %2727, align 4, !tbaa !65
  %2729 = fadd fast float %2728, %2726
  store float %2729, ptr %2727, align 4, !tbaa !65
  %2730 = add nuw nsw i64 %2724, 1
  %2731 = getelementptr inbounds float, ptr %2669, i64 %2730
  %2732 = load float, ptr %2731, align 4, !tbaa !65
  %2733 = getelementptr inbounds float, ptr %18, i64 %2730
  %2734 = load float, ptr %2733, align 4, !tbaa !65
  %2735 = fadd fast float %2734, %2732
  store float %2735, ptr %2733, align 4, !tbaa !65
  %2736 = add nuw nsw i64 %2724, 2
  %2737 = getelementptr inbounds float, ptr %2669, i64 %2736
  %2738 = load float, ptr %2737, align 4, !tbaa !65
  %2739 = getelementptr inbounds float, ptr %18, i64 %2736
  %2740 = load float, ptr %2739, align 4, !tbaa !65
  %2741 = fadd fast float %2740, %2738
  store float %2741, ptr %2739, align 4, !tbaa !65
  %2742 = add nuw nsw i64 %2724, 3
  %2743 = getelementptr inbounds float, ptr %2669, i64 %2742
  %2744 = load float, ptr %2743, align 4, !tbaa !65
  %2745 = getelementptr inbounds float, ptr %18, i64 %2742
  %2746 = load float, ptr %2745, align 4, !tbaa !65
  %2747 = fadd fast float %2746, %2744
  store float %2747, ptr %2745, align 4, !tbaa !65
  %2748 = add nuw nsw i64 %2724, 4
  %2749 = icmp eq i64 %2748, %2630
  br i1 %2749, label %2750, label %2723, !llvm.loop !738

2750:                                             ; preds = %2720, %2723, %2704, %2659
  %2751 = add nuw nsw i64 %2640, 1
  %2752 = icmp eq i64 %2751, %2631
  br i1 %2752, label %2753, label %2639, !llvm.loop !739

2753:                                             ; preds = %2750, %2617
  %2754 = phi i32 [ 0, %2617 ], [ %2623, %2750 ]
  %2755 = icmp sgt i32 %2625, 0
  br i1 %2755, label %2756, label %2784

2756:                                             ; preds = %2753
  %2757 = sitofp i32 %2754 to float
  %2758 = zext i32 %2625 to i64
  %2759 = icmp ult i32 %2625, 8
  br i1 %2759, label %2774, label %2760

2760:                                             ; preds = %2756
  %2761 = and i64 %2758, 4294967288
  %2762 = insertelement <8 x float> poison, float %2757, i64 0
  %2763 = shufflevector <8 x float> %2762, <8 x float> poison, <8 x i32> zeroinitializer
  %2764 = fdiv fast <8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %2763
  br label %2765

2765:                                             ; preds = %2765, %2760
  %2766 = phi i64 [ 0, %2760 ], [ %2770, %2765 ]
  %2767 = getelementptr inbounds float, ptr %18, i64 %2766
  %2768 = load <8 x float>, ptr %2767, align 4, !tbaa !65
  %2769 = fmul fast <8 x float> %2768, %2764
  store <8 x float> %2769, ptr %2767, align 4, !tbaa !65
  %2770 = add nuw i64 %2766, 8
  %2771 = icmp eq i64 %2770, %2761
  br i1 %2771, label %2772, label %2765, !llvm.loop !740

2772:                                             ; preds = %2765
  %2773 = icmp eq i64 %2761, %2758
  br i1 %2773, label %2784, label %2774

2774:                                             ; preds = %2756, %2772
  %2775 = phi i64 [ 0, %2756 ], [ %2761, %2772 ]
  %2776 = fdiv fast float 1.000000e+00, %2757
  br label %2777

2777:                                             ; preds = %2774, %2777
  %2778 = phi i64 [ %2782, %2777 ], [ %2775, %2774 ]
  %2779 = getelementptr inbounds float, ptr %18, i64 %2778
  %2780 = load float, ptr %2779, align 4, !tbaa !65
  %2781 = fmul fast float %2780, %2776
  store float %2781, ptr %2779, align 4, !tbaa !65
  %2782 = add nuw nsw i64 %2778, 1
  %2783 = icmp eq i64 %2782, %2758
  br i1 %2783, label %2784, label %2777, !llvm.loop !741

2784:                                             ; preds = %2777, %2772, %2753
  %2785 = sext i32 %2625 to i64
  %2786 = shl nsw i64 %2785, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %21, i8 0, i64 %2786, i1 false)
  %2787 = load i16, ptr %2135, align 8, !tbaa !79
  %2788 = sext i16 %2787 to i32
  %2789 = icmp sgt i16 %2787, 0
  %2790 = load i32, ptr %982, align 4, !tbaa !74
  br i1 %2789, label %2791, label %2898

2791:                                             ; preds = %2784
  %2792 = getelementptr inbounds %struct.CCGVert, ptr %2125, i64 0, i32 6
  %2793 = load ptr, ptr %2792, align 8, !tbaa !56
  %2794 = icmp sgt i32 %2790, 0
  %2795 = zext i32 %2790 to i64
  %2796 = zext i32 %2788 to i64
  %2797 = shl nuw nsw i64 %2795, 2
  %2798 = getelementptr i8, ptr %21, i64 %2797
  %2799 = icmp ult i32 %2790, 32
  %2800 = and i64 %2795, 4294967264
  %2801 = icmp eq i64 %2800, %2795
  %2802 = and i64 %2795, 3
  %2803 = icmp eq i64 %2802, 0
  br label %2804

2804:                                             ; preds = %2791, %2895
  %2805 = phi i64 [ 0, %2791 ], [ %2896, %2895 ]
  %2806 = getelementptr inbounds ptr, ptr %2793, i64 %2805
  %2807 = load ptr, ptr %2806, align 8, !tbaa !14
  %2808 = getelementptr inbounds %struct.CCGEdge, ptr %2807, i64 0, i32 5
  %2809 = load ptr, ptr %2808, align 8, !tbaa !83
  %2810 = icmp eq ptr %2809, %2125
  %2811 = getelementptr inbounds %struct.CCGEdge, ptr %2807, i64 1
  %2812 = select i1 %2810, i32 1, i32 %984
  %2813 = add i32 %983, %2812
  %2814 = mul nsw i32 %2813, %16
  %2815 = sext i32 %2814 to i64
  %2816 = getelementptr i8, ptr %2811, i64 %2815
  br i1 %2794, label %2817, label %2895

2817:                                             ; preds = %2804
  br i1 %2799, label %2850, label %2818

2818:                                             ; preds = %2817
  %2819 = getelementptr i8, ptr %2807, i64 48
  %2820 = getelementptr i8, ptr %2819, i64 %2797
  %2821 = getelementptr i8, ptr %2820, i64 %2815
  %2822 = icmp ult ptr %21, %2821
  %2823 = icmp ult ptr %2816, %2798
  %2824 = and i1 %2822, %2823
  br i1 %2824, label %2850, label %2825

2825:                                             ; preds = %2818, %2825
  %2826 = phi i64 [ %2847, %2825 ], [ 0, %2818 ]
  %2827 = getelementptr inbounds float, ptr %2816, i64 %2826
  %2828 = load <8 x float>, ptr %2827, align 4, !tbaa !65, !alias.scope !742
  %2829 = getelementptr inbounds float, ptr %2827, i64 8
  %2830 = load <8 x float>, ptr %2829, align 4, !tbaa !65, !alias.scope !742
  %2831 = getelementptr inbounds float, ptr %2827, i64 16
  %2832 = load <8 x float>, ptr %2831, align 4, !tbaa !65, !alias.scope !742
  %2833 = getelementptr inbounds float, ptr %2827, i64 24
  %2834 = load <8 x float>, ptr %2833, align 4, !tbaa !65, !alias.scope !742
  %2835 = getelementptr inbounds float, ptr %21, i64 %2826
  %2836 = load <8 x float>, ptr %2835, align 4, !tbaa !65, !alias.scope !745, !noalias !742
  %2837 = getelementptr inbounds float, ptr %2835, i64 8
  %2838 = load <8 x float>, ptr %2837, align 4, !tbaa !65, !alias.scope !745, !noalias !742
  %2839 = getelementptr inbounds float, ptr %2835, i64 16
  %2840 = load <8 x float>, ptr %2839, align 4, !tbaa !65, !alias.scope !745, !noalias !742
  %2841 = getelementptr inbounds float, ptr %2835, i64 24
  %2842 = load <8 x float>, ptr %2841, align 4, !tbaa !65, !alias.scope !745, !noalias !742
  %2843 = fadd fast <8 x float> %2836, %2828
  %2844 = fadd fast <8 x float> %2838, %2830
  %2845 = fadd fast <8 x float> %2840, %2832
  %2846 = fadd fast <8 x float> %2842, %2834
  store <8 x float> %2843, ptr %2835, align 4, !tbaa !65, !alias.scope !745, !noalias !742
  store <8 x float> %2844, ptr %2837, align 4, !tbaa !65, !alias.scope !745, !noalias !742
  store <8 x float> %2845, ptr %2839, align 4, !tbaa !65, !alias.scope !745, !noalias !742
  store <8 x float> %2846, ptr %2841, align 4, !tbaa !65, !alias.scope !745, !noalias !742
  %2847 = add nuw i64 %2826, 32
  %2848 = icmp eq i64 %2847, %2800
  br i1 %2848, label %2849, label %2825, !llvm.loop !747

2849:                                             ; preds = %2825
  br i1 %2801, label %2895, label %2850

2850:                                             ; preds = %2818, %2817, %2849
  %2851 = phi i64 [ 0, %2818 ], [ 0, %2817 ], [ %2800, %2849 ]
  %2852 = xor i64 %2851, -1
  %2853 = add nsw i64 %2852, %2795
  br i1 %2803, label %2865, label %2854

2854:                                             ; preds = %2850, %2854
  %2855 = phi i64 [ %2862, %2854 ], [ %2851, %2850 ]
  %2856 = phi i64 [ %2863, %2854 ], [ 0, %2850 ]
  %2857 = getelementptr inbounds float, ptr %2816, i64 %2855
  %2858 = load float, ptr %2857, align 4, !tbaa !65
  %2859 = getelementptr inbounds float, ptr %21, i64 %2855
  %2860 = load float, ptr %2859, align 4, !tbaa !65
  %2861 = fadd fast float %2860, %2858
  store float %2861, ptr %2859, align 4, !tbaa !65
  %2862 = add nuw nsw i64 %2855, 1
  %2863 = add i64 %2856, 1
  %2864 = icmp eq i64 %2863, %2802
  br i1 %2864, label %2865, label %2854, !llvm.loop !748

2865:                                             ; preds = %2854, %2850
  %2866 = phi i64 [ %2851, %2850 ], [ %2862, %2854 ]
  %2867 = icmp ult i64 %2853, 3
  br i1 %2867, label %2895, label %2868

2868:                                             ; preds = %2865, %2868
  %2869 = phi i64 [ %2893, %2868 ], [ %2866, %2865 ]
  %2870 = getelementptr inbounds float, ptr %2816, i64 %2869
  %2871 = load float, ptr %2870, align 4, !tbaa !65
  %2872 = getelementptr inbounds float, ptr %21, i64 %2869
  %2873 = load float, ptr %2872, align 4, !tbaa !65
  %2874 = fadd fast float %2873, %2871
  store float %2874, ptr %2872, align 4, !tbaa !65
  %2875 = add nuw nsw i64 %2869, 1
  %2876 = getelementptr inbounds float, ptr %2816, i64 %2875
  %2877 = load float, ptr %2876, align 4, !tbaa !65
  %2878 = getelementptr inbounds float, ptr %21, i64 %2875
  %2879 = load float, ptr %2878, align 4, !tbaa !65
  %2880 = fadd fast float %2879, %2877
  store float %2880, ptr %2878, align 4, !tbaa !65
  %2881 = add nuw nsw i64 %2869, 2
  %2882 = getelementptr inbounds float, ptr %2816, i64 %2881
  %2883 = load float, ptr %2882, align 4, !tbaa !65
  %2884 = getelementptr inbounds float, ptr %21, i64 %2881
  %2885 = load float, ptr %2884, align 4, !tbaa !65
  %2886 = fadd fast float %2885, %2883
  store float %2886, ptr %2884, align 4, !tbaa !65
  %2887 = add nuw nsw i64 %2869, 3
  %2888 = getelementptr inbounds float, ptr %2816, i64 %2887
  %2889 = load float, ptr %2888, align 4, !tbaa !65
  %2890 = getelementptr inbounds float, ptr %21, i64 %2887
  %2891 = load float, ptr %2890, align 4, !tbaa !65
  %2892 = fadd fast float %2891, %2889
  store float %2892, ptr %2890, align 4, !tbaa !65
  %2893 = add nuw nsw i64 %2869, 4
  %2894 = icmp eq i64 %2893, %2795
  br i1 %2894, label %2895, label %2868, !llvm.loop !749

2895:                                             ; preds = %2865, %2868, %2849, %2804
  %2896 = add nuw nsw i64 %2805, 1
  %2897 = icmp eq i64 %2896, %2796
  br i1 %2897, label %2898, label %2804, !llvm.loop !750

2898:                                             ; preds = %2895, %2784
  %2899 = phi i32 [ 0, %2784 ], [ %2788, %2895 ]
  %2900 = sitofp i32 %2899 to float
  %2901 = fdiv fast float 1.000000e+00, %2900
  %2902 = icmp sgt i32 %2790, 0
  br i1 %2902, label %2903, label %3256

2903:                                             ; preds = %2898
  %2904 = zext i32 %2790 to i64
  %2905 = icmp ult i32 %2790, 32
  br i1 %2905, label %2934, label %2906

2906:                                             ; preds = %2903
  %2907 = and i64 %2904, 4294967264
  %2908 = insertelement <8 x float> poison, float %2901, i64 0
  %2909 = shufflevector <8 x float> %2908, <8 x float> poison, <8 x i32> zeroinitializer
  %2910 = insertelement <8 x float> poison, float %2901, i64 0
  %2911 = shufflevector <8 x float> %2910, <8 x float> poison, <8 x i32> zeroinitializer
  %2912 = insertelement <8 x float> poison, float %2901, i64 0
  %2913 = shufflevector <8 x float> %2912, <8 x float> poison, <8 x i32> zeroinitializer
  %2914 = insertelement <8 x float> poison, float %2901, i64 0
  %2915 = shufflevector <8 x float> %2914, <8 x float> poison, <8 x i32> zeroinitializer
  br label %2916

2916:                                             ; preds = %2916, %2906
  %2917 = phi i64 [ 0, %2906 ], [ %2930, %2916 ]
  %2918 = getelementptr inbounds float, ptr %21, i64 %2917
  %2919 = load <8 x float>, ptr %2918, align 4, !tbaa !65
  %2920 = getelementptr inbounds float, ptr %2918, i64 8
  %2921 = load <8 x float>, ptr %2920, align 4, !tbaa !65
  %2922 = getelementptr inbounds float, ptr %2918, i64 16
  %2923 = load <8 x float>, ptr %2922, align 4, !tbaa !65
  %2924 = getelementptr inbounds float, ptr %2918, i64 24
  %2925 = load <8 x float>, ptr %2924, align 4, !tbaa !65
  %2926 = fmul fast <8 x float> %2919, %2909
  %2927 = fmul fast <8 x float> %2921, %2911
  %2928 = fmul fast <8 x float> %2923, %2913
  %2929 = fmul fast <8 x float> %2925, %2915
  store <8 x float> %2926, ptr %2918, align 4, !tbaa !65
  store <8 x float> %2927, ptr %2920, align 4, !tbaa !65
  store <8 x float> %2928, ptr %2922, align 4, !tbaa !65
  store <8 x float> %2929, ptr %2924, align 4, !tbaa !65
  %2930 = add nuw i64 %2917, 32
  %2931 = icmp eq i64 %2930, %2907
  br i1 %2931, label %2932, label %2916, !llvm.loop !751

2932:                                             ; preds = %2916
  %2933 = icmp eq i64 %2907, %2904
  br i1 %2933, label %2943, label %2934

2934:                                             ; preds = %2903, %2932
  %2935 = phi i64 [ 0, %2903 ], [ %2907, %2932 ]
  br label %2936

2936:                                             ; preds = %2934, %2936
  %2937 = phi i64 [ %2941, %2936 ], [ %2935, %2934 ]
  %2938 = getelementptr inbounds float, ptr %21, i64 %2937
  %2939 = load float, ptr %2938, align 4, !tbaa !65
  %2940 = fmul fast float %2939, %2901
  store float %2940, ptr %2938, align 4, !tbaa !65
  %2941 = add nuw nsw i64 %2937, 1
  %2942 = icmp eq i64 %2941, %2904
  br i1 %2942, label %2943, label %2936, !llvm.loop !752

2943:                                             ; preds = %2936, %2932
  %2944 = icmp ult i32 %2790, 32
  br i1 %2944, label %2970, label %2945

2945:                                             ; preds = %2943
  %2946 = add i64 %1007, %2126
  %2947 = add i64 %1008, %2126
  %2948 = sub i64 %2946, %2947
  %2949 = icmp ult i64 %2948, 128
  br i1 %2949, label %2970, label %2950

2950:                                             ; preds = %2945
  %2951 = and i64 %2904, 4294967264
  br label %2952

2952:                                             ; preds = %2952, %2950
  %2953 = phi i64 [ 0, %2950 ], [ %2966, %2952 ]
  %2954 = getelementptr inbounds float, ptr %2128, i64 %2953
  %2955 = load <8 x float>, ptr %2954, align 4, !tbaa !65
  %2956 = getelementptr inbounds float, ptr %2954, i64 8
  %2957 = load <8 x float>, ptr %2956, align 4, !tbaa !65
  %2958 = getelementptr inbounds float, ptr %2954, i64 16
  %2959 = load <8 x float>, ptr %2958, align 4, !tbaa !65
  %2960 = getelementptr inbounds float, ptr %2954, i64 24
  %2961 = load <8 x float>, ptr %2960, align 4, !tbaa !65
  %2962 = getelementptr inbounds float, ptr %2129, i64 %2953
  store <8 x float> %2955, ptr %2962, align 4, !tbaa !65
  %2963 = getelementptr inbounds float, ptr %2962, i64 8
  store <8 x float> %2957, ptr %2963, align 4, !tbaa !65
  %2964 = getelementptr inbounds float, ptr %2962, i64 16
  store <8 x float> %2959, ptr %2964, align 4, !tbaa !65
  %2965 = getelementptr inbounds float, ptr %2962, i64 24
  store <8 x float> %2961, ptr %2965, align 4, !tbaa !65
  %2966 = add nuw i64 %2953, 32
  %2967 = icmp eq i64 %2966, %2951
  br i1 %2967, label %2968, label %2952, !llvm.loop !753

2968:                                             ; preds = %2952
  %2969 = icmp eq i64 %2951, %2904
  br i1 %2969, label %3007, label %2970

2970:                                             ; preds = %2945, %2943, %2968
  %2971 = phi i64 [ 0, %2945 ], [ 0, %2943 ], [ %2951, %2968 ]
  %2972 = xor i64 %2971, -1
  %2973 = add nsw i64 %2972, %2904
  %2974 = and i64 %2904, 3
  %2975 = icmp eq i64 %2974, 0
  br i1 %2975, label %2985, label %2976

2976:                                             ; preds = %2970, %2976
  %2977 = phi i64 [ %2982, %2976 ], [ %2971, %2970 ]
  %2978 = phi i64 [ %2983, %2976 ], [ 0, %2970 ]
  %2979 = getelementptr inbounds float, ptr %2128, i64 %2977
  %2980 = load float, ptr %2979, align 4, !tbaa !65
  %2981 = getelementptr inbounds float, ptr %2129, i64 %2977
  store float %2980, ptr %2981, align 4, !tbaa !65
  %2982 = add nuw nsw i64 %2977, 1
  %2983 = add i64 %2978, 1
  %2984 = icmp eq i64 %2983, %2974
  br i1 %2984, label %2985, label %2976, !llvm.loop !754

2985:                                             ; preds = %2976, %2970
  %2986 = phi i64 [ %2971, %2970 ], [ %2982, %2976 ]
  %2987 = icmp ult i64 %2973, 3
  br i1 %2987, label %3007, label %2988

2988:                                             ; preds = %2985, %2988
  %2989 = phi i64 [ %3005, %2988 ], [ %2986, %2985 ]
  %2990 = getelementptr inbounds float, ptr %2128, i64 %2989
  %2991 = load float, ptr %2990, align 4, !tbaa !65
  %2992 = getelementptr inbounds float, ptr %2129, i64 %2989
  store float %2991, ptr %2992, align 4, !tbaa !65
  %2993 = add nuw nsw i64 %2989, 1
  %2994 = getelementptr inbounds float, ptr %2128, i64 %2993
  %2995 = load float, ptr %2994, align 4, !tbaa !65
  %2996 = getelementptr inbounds float, ptr %2129, i64 %2993
  store float %2995, ptr %2996, align 4, !tbaa !65
  %2997 = add nuw nsw i64 %2989, 2
  %2998 = getelementptr inbounds float, ptr %2128, i64 %2997
  %2999 = load float, ptr %2998, align 4, !tbaa !65
  %3000 = getelementptr inbounds float, ptr %2129, i64 %2997
  store float %2999, ptr %3000, align 4, !tbaa !65
  %3001 = add nuw nsw i64 %2989, 3
  %3002 = getelementptr inbounds float, ptr %2128, i64 %3001
  %3003 = load float, ptr %3002, align 4, !tbaa !65
  %3004 = getelementptr inbounds float, ptr %2129, i64 %3001
  store float %3003, ptr %3004, align 4, !tbaa !65
  %3005 = add nuw nsw i64 %2989, 4
  %3006 = icmp eq i64 %3005, %2904
  br i1 %3006, label %3007, label %2988, !llvm.loop !755

3007:                                             ; preds = %2985, %2988, %2968
  %3008 = fadd fast float %2900, -2.000000e+00
  %3009 = icmp ult i32 %2790, 32
  br i1 %3009, label %3038, label %3010

3010:                                             ; preds = %3007
  %3011 = and i64 %2904, 4294967264
  %3012 = insertelement <8 x float> poison, float %3008, i64 0
  %3013 = shufflevector <8 x float> %3012, <8 x float> poison, <8 x i32> zeroinitializer
  %3014 = insertelement <8 x float> poison, float %3008, i64 0
  %3015 = shufflevector <8 x float> %3014, <8 x float> poison, <8 x i32> zeroinitializer
  %3016 = insertelement <8 x float> poison, float %3008, i64 0
  %3017 = shufflevector <8 x float> %3016, <8 x float> poison, <8 x i32> zeroinitializer
  %3018 = insertelement <8 x float> poison, float %3008, i64 0
  %3019 = shufflevector <8 x float> %3018, <8 x float> poison, <8 x i32> zeroinitializer
  br label %3020

3020:                                             ; preds = %3020, %3010
  %3021 = phi i64 [ 0, %3010 ], [ %3034, %3020 ]
  %3022 = getelementptr inbounds float, ptr %2129, i64 %3021
  %3023 = load <8 x float>, ptr %3022, align 4, !tbaa !65
  %3024 = getelementptr inbounds float, ptr %3022, i64 8
  %3025 = load <8 x float>, ptr %3024, align 4, !tbaa !65
  %3026 = getelementptr inbounds float, ptr %3022, i64 16
  %3027 = load <8 x float>, ptr %3026, align 4, !tbaa !65
  %3028 = getelementptr inbounds float, ptr %3022, i64 24
  %3029 = load <8 x float>, ptr %3028, align 4, !tbaa !65
  %3030 = fmul fast <8 x float> %3023, %3013
  %3031 = fmul fast <8 x float> %3025, %3015
  %3032 = fmul fast <8 x float> %3027, %3017
  %3033 = fmul fast <8 x float> %3029, %3019
  store <8 x float> %3030, ptr %3022, align 4, !tbaa !65
  store <8 x float> %3031, ptr %3024, align 4, !tbaa !65
  store <8 x float> %3032, ptr %3026, align 4, !tbaa !65
  store <8 x float> %3033, ptr %3028, align 4, !tbaa !65
  %3034 = add nuw i64 %3021, 32
  %3035 = icmp eq i64 %3034, %3011
  br i1 %3035, label %3036, label %3020, !llvm.loop !756

3036:                                             ; preds = %3020
  %3037 = icmp eq i64 %3011, %2904
  br i1 %3037, label %3047, label %3038

3038:                                             ; preds = %3007, %3036
  %3039 = phi i64 [ 0, %3007 ], [ %3011, %3036 ]
  br label %3040

3040:                                             ; preds = %3038, %3040
  %3041 = phi i64 [ %3045, %3040 ], [ %3039, %3038 ]
  %3042 = getelementptr inbounds float, ptr %2129, i64 %3041
  %3043 = load float, ptr %3042, align 4, !tbaa !65
  %3044 = fmul fast float %3043, %3008
  store float %3044, ptr %3042, align 4, !tbaa !65
  %3045 = add nuw nsw i64 %3041, 1
  %3046 = icmp eq i64 %3045, %2904
  br i1 %3046, label %3047, label %3040, !llvm.loop !757

3047:                                             ; preds = %3040, %3036
  %3048 = icmp ult i32 %2790, 32
  br i1 %3048, label %3085, label %3049

3049:                                             ; preds = %3047
  %3050 = getelementptr i8, ptr %2125, i64 %1006
  %3051 = shl nuw nsw i64 %2904, 2
  %3052 = getelementptr i8, ptr %3050, i64 %3051
  %3053 = getelementptr i8, ptr %18, i64 %3051
  %3054 = icmp ult ptr %2129, %3053
  %3055 = icmp ult ptr %18, %3052
  %3056 = and i1 %3054, %3055
  br i1 %3056, label %3085, label %3057

3057:                                             ; preds = %3049
  %3058 = and i64 %2904, 4294967264
  br label %3059

3059:                                             ; preds = %3059, %3057
  %3060 = phi i64 [ 0, %3057 ], [ %3081, %3059 ]
  %3061 = getelementptr inbounds float, ptr %18, i64 %3060
  %3062 = load <8 x float>, ptr %3061, align 4, !tbaa !65, !alias.scope !758
  %3063 = getelementptr inbounds float, ptr %3061, i64 8
  %3064 = load <8 x float>, ptr %3063, align 4, !tbaa !65, !alias.scope !758
  %3065 = getelementptr inbounds float, ptr %3061, i64 16
  %3066 = load <8 x float>, ptr %3065, align 4, !tbaa !65, !alias.scope !758
  %3067 = getelementptr inbounds float, ptr %3061, i64 24
  %3068 = load <8 x float>, ptr %3067, align 4, !tbaa !65, !alias.scope !758
  %3069 = getelementptr inbounds float, ptr %2129, i64 %3060
  %3070 = load <8 x float>, ptr %3069, align 4, !tbaa !65, !alias.scope !761, !noalias !758
  %3071 = getelementptr inbounds float, ptr %3069, i64 8
  %3072 = load <8 x float>, ptr %3071, align 4, !tbaa !65, !alias.scope !761, !noalias !758
  %3073 = getelementptr inbounds float, ptr %3069, i64 16
  %3074 = load <8 x float>, ptr %3073, align 4, !tbaa !65, !alias.scope !761, !noalias !758
  %3075 = getelementptr inbounds float, ptr %3069, i64 24
  %3076 = load <8 x float>, ptr %3075, align 4, !tbaa !65, !alias.scope !761, !noalias !758
  %3077 = fadd fast <8 x float> %3070, %3062
  %3078 = fadd fast <8 x float> %3072, %3064
  %3079 = fadd fast <8 x float> %3074, %3066
  %3080 = fadd fast <8 x float> %3076, %3068
  store <8 x float> %3077, ptr %3069, align 4, !tbaa !65, !alias.scope !761, !noalias !758
  store <8 x float> %3078, ptr %3071, align 4, !tbaa !65, !alias.scope !761, !noalias !758
  store <8 x float> %3079, ptr %3073, align 4, !tbaa !65, !alias.scope !761, !noalias !758
  store <8 x float> %3080, ptr %3075, align 4, !tbaa !65, !alias.scope !761, !noalias !758
  %3081 = add nuw i64 %3060, 32
  %3082 = icmp eq i64 %3081, %3058
  br i1 %3082, label %3083, label %3059, !llvm.loop !763

3083:                                             ; preds = %3059
  %3084 = icmp eq i64 %3058, %2904
  br i1 %3084, label %3132, label %3085

3085:                                             ; preds = %3049, %3047, %3083
  %3086 = phi i64 [ 0, %3049 ], [ 0, %3047 ], [ %3058, %3083 ]
  %3087 = xor i64 %3086, -1
  %3088 = add nsw i64 %3087, %2904
  %3089 = and i64 %2904, 3
  %3090 = icmp eq i64 %3089, 0
  br i1 %3090, label %3102, label %3091

3091:                                             ; preds = %3085, %3091
  %3092 = phi i64 [ %3099, %3091 ], [ %3086, %3085 ]
  %3093 = phi i64 [ %3100, %3091 ], [ 0, %3085 ]
  %3094 = getelementptr inbounds float, ptr %18, i64 %3092
  %3095 = load float, ptr %3094, align 4, !tbaa !65
  %3096 = getelementptr inbounds float, ptr %2129, i64 %3092
  %3097 = load float, ptr %3096, align 4, !tbaa !65
  %3098 = fadd fast float %3097, %3095
  store float %3098, ptr %3096, align 4, !tbaa !65
  %3099 = add nuw nsw i64 %3092, 1
  %3100 = add i64 %3093, 1
  %3101 = icmp eq i64 %3100, %3089
  br i1 %3101, label %3102, label %3091, !llvm.loop !764

3102:                                             ; preds = %3091, %3085
  %3103 = phi i64 [ %3086, %3085 ], [ %3099, %3091 ]
  %3104 = icmp ult i64 %3088, 3
  br i1 %3104, label %3132, label %3105

3105:                                             ; preds = %3102, %3105
  %3106 = phi i64 [ %3130, %3105 ], [ %3103, %3102 ]
  %3107 = getelementptr inbounds float, ptr %18, i64 %3106
  %3108 = load float, ptr %3107, align 4, !tbaa !65
  %3109 = getelementptr inbounds float, ptr %2129, i64 %3106
  %3110 = load float, ptr %3109, align 4, !tbaa !65
  %3111 = fadd fast float %3110, %3108
  store float %3111, ptr %3109, align 4, !tbaa !65
  %3112 = add nuw nsw i64 %3106, 1
  %3113 = getelementptr inbounds float, ptr %18, i64 %3112
  %3114 = load float, ptr %3113, align 4, !tbaa !65
  %3115 = getelementptr inbounds float, ptr %2129, i64 %3112
  %3116 = load float, ptr %3115, align 4, !tbaa !65
  %3117 = fadd fast float %3116, %3114
  store float %3117, ptr %3115, align 4, !tbaa !65
  %3118 = add nuw nsw i64 %3106, 2
  %3119 = getelementptr inbounds float, ptr %18, i64 %3118
  %3120 = load float, ptr %3119, align 4, !tbaa !65
  %3121 = getelementptr inbounds float, ptr %2129, i64 %3118
  %3122 = load float, ptr %3121, align 4, !tbaa !65
  %3123 = fadd fast float %3122, %3120
  store float %3123, ptr %3121, align 4, !tbaa !65
  %3124 = add nuw nsw i64 %3106, 3
  %3125 = getelementptr inbounds float, ptr %18, i64 %3124
  %3126 = load float, ptr %3125, align 4, !tbaa !65
  %3127 = getelementptr inbounds float, ptr %2129, i64 %3124
  %3128 = load float, ptr %3127, align 4, !tbaa !65
  %3129 = fadd fast float %3128, %3126
  store float %3129, ptr %3127, align 4, !tbaa !65
  %3130 = add nuw nsw i64 %3106, 4
  %3131 = icmp eq i64 %3130, %2904
  br i1 %3131, label %3132, label %3105, !llvm.loop !765

3132:                                             ; preds = %3102, %3105, %3083
  %3133 = icmp ult i32 %2790, 32
  br i1 %3133, label %3170, label %3134

3134:                                             ; preds = %3132
  %3135 = getelementptr i8, ptr %2125, i64 %1005
  %3136 = shl nuw nsw i64 %2904, 2
  %3137 = getelementptr i8, ptr %3135, i64 %3136
  %3138 = getelementptr i8, ptr %21, i64 %3136
  %3139 = icmp ult ptr %2129, %3138
  %3140 = icmp ult ptr %21, %3137
  %3141 = and i1 %3139, %3140
  br i1 %3141, label %3170, label %3142

3142:                                             ; preds = %3134
  %3143 = and i64 %2904, 4294967264
  br label %3144

3144:                                             ; preds = %3144, %3142
  %3145 = phi i64 [ 0, %3142 ], [ %3166, %3144 ]
  %3146 = getelementptr inbounds float, ptr %21, i64 %3145
  %3147 = load <8 x float>, ptr %3146, align 4, !tbaa !65, !alias.scope !766
  %3148 = getelementptr inbounds float, ptr %3146, i64 8
  %3149 = load <8 x float>, ptr %3148, align 4, !tbaa !65, !alias.scope !766
  %3150 = getelementptr inbounds float, ptr %3146, i64 16
  %3151 = load <8 x float>, ptr %3150, align 4, !tbaa !65, !alias.scope !766
  %3152 = getelementptr inbounds float, ptr %3146, i64 24
  %3153 = load <8 x float>, ptr %3152, align 4, !tbaa !65, !alias.scope !766
  %3154 = getelementptr inbounds float, ptr %2129, i64 %3145
  %3155 = load <8 x float>, ptr %3154, align 4, !tbaa !65, !alias.scope !769, !noalias !766
  %3156 = getelementptr inbounds float, ptr %3154, i64 8
  %3157 = load <8 x float>, ptr %3156, align 4, !tbaa !65, !alias.scope !769, !noalias !766
  %3158 = getelementptr inbounds float, ptr %3154, i64 16
  %3159 = load <8 x float>, ptr %3158, align 4, !tbaa !65, !alias.scope !769, !noalias !766
  %3160 = getelementptr inbounds float, ptr %3154, i64 24
  %3161 = load <8 x float>, ptr %3160, align 4, !tbaa !65, !alias.scope !769, !noalias !766
  %3162 = fadd fast <8 x float> %3155, %3147
  %3163 = fadd fast <8 x float> %3157, %3149
  %3164 = fadd fast <8 x float> %3159, %3151
  %3165 = fadd fast <8 x float> %3161, %3153
  store <8 x float> %3162, ptr %3154, align 4, !tbaa !65, !alias.scope !769, !noalias !766
  store <8 x float> %3163, ptr %3156, align 4, !tbaa !65, !alias.scope !769, !noalias !766
  store <8 x float> %3164, ptr %3158, align 4, !tbaa !65, !alias.scope !769, !noalias !766
  store <8 x float> %3165, ptr %3160, align 4, !tbaa !65, !alias.scope !769, !noalias !766
  %3166 = add nuw i64 %3145, 32
  %3167 = icmp eq i64 %3166, %3143
  br i1 %3167, label %3168, label %3144, !llvm.loop !771

3168:                                             ; preds = %3144
  %3169 = icmp eq i64 %3143, %2904
  br i1 %3169, label %3217, label %3170

3170:                                             ; preds = %3134, %3132, %3168
  %3171 = phi i64 [ 0, %3134 ], [ 0, %3132 ], [ %3143, %3168 ]
  %3172 = xor i64 %3171, -1
  %3173 = add nsw i64 %3172, %2904
  %3174 = and i64 %2904, 3
  %3175 = icmp eq i64 %3174, 0
  br i1 %3175, label %3187, label %3176

3176:                                             ; preds = %3170, %3176
  %3177 = phi i64 [ %3184, %3176 ], [ %3171, %3170 ]
  %3178 = phi i64 [ %3185, %3176 ], [ 0, %3170 ]
  %3179 = getelementptr inbounds float, ptr %21, i64 %3177
  %3180 = load float, ptr %3179, align 4, !tbaa !65
  %3181 = getelementptr inbounds float, ptr %2129, i64 %3177
  %3182 = load float, ptr %3181, align 4, !tbaa !65
  %3183 = fadd fast float %3182, %3180
  store float %3183, ptr %3181, align 4, !tbaa !65
  %3184 = add nuw nsw i64 %3177, 1
  %3185 = add i64 %3178, 1
  %3186 = icmp eq i64 %3185, %3174
  br i1 %3186, label %3187, label %3176, !llvm.loop !772

3187:                                             ; preds = %3176, %3170
  %3188 = phi i64 [ %3171, %3170 ], [ %3184, %3176 ]
  %3189 = icmp ult i64 %3173, 3
  br i1 %3189, label %3217, label %3190

3190:                                             ; preds = %3187, %3190
  %3191 = phi i64 [ %3215, %3190 ], [ %3188, %3187 ]
  %3192 = getelementptr inbounds float, ptr %21, i64 %3191
  %3193 = load float, ptr %3192, align 4, !tbaa !65
  %3194 = getelementptr inbounds float, ptr %2129, i64 %3191
  %3195 = load float, ptr %3194, align 4, !tbaa !65
  %3196 = fadd fast float %3195, %3193
  store float %3196, ptr %3194, align 4, !tbaa !65
  %3197 = add nuw nsw i64 %3191, 1
  %3198 = getelementptr inbounds float, ptr %21, i64 %3197
  %3199 = load float, ptr %3198, align 4, !tbaa !65
  %3200 = getelementptr inbounds float, ptr %2129, i64 %3197
  %3201 = load float, ptr %3200, align 4, !tbaa !65
  %3202 = fadd fast float %3201, %3199
  store float %3202, ptr %3200, align 4, !tbaa !65
  %3203 = add nuw nsw i64 %3191, 2
  %3204 = getelementptr inbounds float, ptr %21, i64 %3203
  %3205 = load float, ptr %3204, align 4, !tbaa !65
  %3206 = getelementptr inbounds float, ptr %2129, i64 %3203
  %3207 = load float, ptr %3206, align 4, !tbaa !65
  %3208 = fadd fast float %3207, %3205
  store float %3208, ptr %3206, align 4, !tbaa !65
  %3209 = add nuw nsw i64 %3191, 3
  %3210 = getelementptr inbounds float, ptr %21, i64 %3209
  %3211 = load float, ptr %3210, align 4, !tbaa !65
  %3212 = getelementptr inbounds float, ptr %2129, i64 %3209
  %3213 = load float, ptr %3212, align 4, !tbaa !65
  %3214 = fadd fast float %3213, %3211
  store float %3214, ptr %3212, align 4, !tbaa !65
  %3215 = add nuw nsw i64 %3191, 4
  %3216 = icmp eq i64 %3215, %2904
  br i1 %3216, label %3217, label %3190, !llvm.loop !773

3217:                                             ; preds = %3187, %3190, %3168
  %3218 = icmp ult i32 %2790, 32
  br i1 %3218, label %3247, label %3219

3219:                                             ; preds = %3217
  %3220 = and i64 %2904, 4294967264
  %3221 = insertelement <8 x float> poison, float %2901, i64 0
  %3222 = shufflevector <8 x float> %3221, <8 x float> poison, <8 x i32> zeroinitializer
  %3223 = insertelement <8 x float> poison, float %2901, i64 0
  %3224 = shufflevector <8 x float> %3223, <8 x float> poison, <8 x i32> zeroinitializer
  %3225 = insertelement <8 x float> poison, float %2901, i64 0
  %3226 = shufflevector <8 x float> %3225, <8 x float> poison, <8 x i32> zeroinitializer
  %3227 = insertelement <8 x float> poison, float %2901, i64 0
  %3228 = shufflevector <8 x float> %3227, <8 x float> poison, <8 x i32> zeroinitializer
  br label %3229

3229:                                             ; preds = %3229, %3219
  %3230 = phi i64 [ 0, %3219 ], [ %3243, %3229 ]
  %3231 = getelementptr inbounds float, ptr %2129, i64 %3230
  %3232 = load <8 x float>, ptr %3231, align 4, !tbaa !65
  %3233 = getelementptr inbounds float, ptr %3231, i64 8
  %3234 = load <8 x float>, ptr %3233, align 4, !tbaa !65
  %3235 = getelementptr inbounds float, ptr %3231, i64 16
  %3236 = load <8 x float>, ptr %3235, align 4, !tbaa !65
  %3237 = getelementptr inbounds float, ptr %3231, i64 24
  %3238 = load <8 x float>, ptr %3237, align 4, !tbaa !65
  %3239 = fmul fast <8 x float> %3232, %3222
  %3240 = fmul fast <8 x float> %3234, %3224
  %3241 = fmul fast <8 x float> %3236, %3226
  %3242 = fmul fast <8 x float> %3238, %3228
  store <8 x float> %3239, ptr %3231, align 4, !tbaa !65
  store <8 x float> %3240, ptr %3233, align 4, !tbaa !65
  store <8 x float> %3241, ptr %3235, align 4, !tbaa !65
  store <8 x float> %3242, ptr %3237, align 4, !tbaa !65
  %3243 = add nuw i64 %3230, 32
  %3244 = icmp eq i64 %3243, %3220
  br i1 %3244, label %3245, label %3229, !llvm.loop !774

3245:                                             ; preds = %3229
  %3246 = icmp eq i64 %3220, %2904
  br i1 %3246, label %3256, label %3247

3247:                                             ; preds = %3217, %3245
  %3248 = phi i64 [ 0, %3217 ], [ %3220, %3245 ]
  br label %3249

3249:                                             ; preds = %3247, %3249
  %3250 = phi i64 [ %3254, %3249 ], [ %3248, %3247 ]
  %3251 = getelementptr inbounds float, ptr %2129, i64 %3250
  %3252 = load float, ptr %3251, align 4, !tbaa !65
  %3253 = fmul fast float %3252, %2901
  store float %3253, ptr %3251, align 4, !tbaa !65
  %3254 = add nuw nsw i64 %3250, 1
  %3255 = icmp eq i64 %3254, %2904
  br i1 %3255, label %3256, label %3249, !llvm.loop !775

3256:                                             ; preds = %2587, %2590, %3249, %2244, %2247, %2568, %3245, %2227, %2898, %2403, %2198
  %3257 = phi i32 [ %2790, %2898 ], [ %2405, %2403 ], [ %2199, %2198 ], [ %2199, %2227 ], [ %2790, %3245 ], [ %2405, %2568 ], [ %2199, %2247 ], [ %2199, %2244 ], [ %2790, %3249 ], [ %2405, %2590 ], [ %2405, %2587 ]
  %3258 = icmp ugt i32 %2186, 1
  br i1 %3258, label %3259, label %3265

3259:                                             ; preds = %3256
  %3260 = getelementptr inbounds %struct.CCGVert, ptr %2125, i64 0, i32 3
  %3261 = load i16, ptr %3260, align 2, !tbaa !78
  %3262 = icmp ne i16 %3261, 0
  %3263 = icmp ne i32 %2193, 0
  %3264 = select i1 %3262, i1 true, i1 %3263
  br i1 %3264, label %3267, label %4225

3265:                                             ; preds = %3256
  %3266 = icmp eq i32 %2193, 0
  br i1 %3266, label %4225, label %3267

3267:                                             ; preds = %3265, %3259
  %3268 = sext i32 %3257 to i64
  %3269 = shl nsw i64 %3268, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %18, i8 0, i64 %3269, i1 false)
  %3270 = icmp ne i32 %2193, 0
  %3271 = select i1 %3270, float 1.000000e+00, float %2189
  %3272 = select i1 %3270, i32 %2188, i32 %2186
  %3273 = load i16, ptr %2135, align 8, !tbaa !79
  %3274 = icmp sgt i16 %3273, 0
  br i1 %3274, label %3275, label %3501

3275:                                             ; preds = %3267
  %3276 = zext i16 %3273 to i64
  %3277 = getelementptr inbounds %struct.CCGVert, ptr %2125, i64 0, i32 6
  %3278 = load ptr, ptr %3277, align 8, !tbaa !56
  br label %3279

3279:                                             ; preds = %3275, %3498
  %3280 = phi i64 [ 0, %3275 ], [ %3499, %3498 ]
  %3281 = getelementptr inbounds ptr, ptr %3278, i64 %3280
  %3282 = load ptr, ptr %3281, align 8, !tbaa !14
  %3283 = getelementptr inbounds %struct.CCGEdge, ptr %3282, i64 0, i32 4
  %3284 = load float, ptr %3283, align 4, !tbaa !116
  br i1 %979, label %3291, label %3285

3285:                                             ; preds = %3279
  %3286 = fcmp fast une float %3284, 0.000000e+00
  br i1 %3286, label %3287, label %3293

3287:                                             ; preds = %3285
  %3288 = fsub fast float %3284, %980
  %3289 = fcmp fast olt float %3288, 0.000000e+00
  %3290 = select i1 %3289, float 0.000000e+00, float %3288
  br label %3291

3291:                                             ; preds = %3279, %3287
  %3292 = phi float [ %3290, %3287 ], [ %3284, %3279 ]
  br i1 %3270, label %3294, label %3397

3293:                                             ; preds = %3285
  br i1 %3270, label %3294, label %3498

3294:                                             ; preds = %3293, %3291
  %3295 = getelementptr i8, ptr %3282, i64 16
  %3296 = load i16, ptr %3295, align 8, !tbaa !81
  %3297 = icmp sgt i16 %3296, 1
  br i1 %3297, label %3498, label %3298

3298:                                             ; preds = %3294
  %3299 = getelementptr inbounds %struct.CCGEdge, ptr %3282, i64 0, i32 5
  %3300 = load ptr, ptr %3299, align 8, !tbaa !83
  %3301 = icmp eq ptr %3300, %2125
  %3302 = getelementptr inbounds %struct.CCGEdge, ptr %3282, i64 1
  %3303 = select i1 %3301, i32 1, i32 %984
  %3304 = add i32 %983, %3303
  %3305 = mul nsw i32 %3304, %16
  %3306 = sext i32 %3305 to i64
  %3307 = getelementptr i8, ptr %3302, i64 %3306
  %3308 = load i32, ptr %982, align 4, !tbaa !74
  %3309 = icmp sgt i32 %3308, 0
  br i1 %3309, label %3310, label %3498

3310:                                             ; preds = %3298
  %3311 = zext i32 %3308 to i64
  %3312 = icmp ult i32 %3308, 32
  br i1 %3312, label %3350, label %3313

3313:                                             ; preds = %3310
  %3314 = shl nuw nsw i64 %3311, 2
  %3315 = getelementptr i8, ptr %18, i64 %3314
  %3316 = getelementptr i8, ptr %3282, i64 48
  %3317 = add nsw i64 %3314, %3306
  %3318 = getelementptr i8, ptr %3316, i64 %3317
  %3319 = icmp ult ptr %18, %3318
  %3320 = icmp ult ptr %3307, %3315
  %3321 = and i1 %3319, %3320
  br i1 %3321, label %3350, label %3322

3322:                                             ; preds = %3313
  %3323 = and i64 %3311, 4294967264
  br label %3324

3324:                                             ; preds = %3324, %3322
  %3325 = phi i64 [ 0, %3322 ], [ %3346, %3324 ]
  %3326 = getelementptr inbounds float, ptr %3307, i64 %3325
  %3327 = load <8 x float>, ptr %3326, align 4, !tbaa !65, !alias.scope !776
  %3328 = getelementptr inbounds float, ptr %3326, i64 8
  %3329 = load <8 x float>, ptr %3328, align 4, !tbaa !65, !alias.scope !776
  %3330 = getelementptr inbounds float, ptr %3326, i64 16
  %3331 = load <8 x float>, ptr %3330, align 4, !tbaa !65, !alias.scope !776
  %3332 = getelementptr inbounds float, ptr %3326, i64 24
  %3333 = load <8 x float>, ptr %3332, align 4, !tbaa !65, !alias.scope !776
  %3334 = getelementptr inbounds float, ptr %18, i64 %3325
  %3335 = load <8 x float>, ptr %3334, align 4, !tbaa !65, !alias.scope !779, !noalias !776
  %3336 = getelementptr inbounds float, ptr %3334, i64 8
  %3337 = load <8 x float>, ptr %3336, align 4, !tbaa !65, !alias.scope !779, !noalias !776
  %3338 = getelementptr inbounds float, ptr %3334, i64 16
  %3339 = load <8 x float>, ptr %3338, align 4, !tbaa !65, !alias.scope !779, !noalias !776
  %3340 = getelementptr inbounds float, ptr %3334, i64 24
  %3341 = load <8 x float>, ptr %3340, align 4, !tbaa !65, !alias.scope !779, !noalias !776
  %3342 = fadd fast <8 x float> %3335, %3327
  %3343 = fadd fast <8 x float> %3337, %3329
  %3344 = fadd fast <8 x float> %3339, %3331
  %3345 = fadd fast <8 x float> %3341, %3333
  store <8 x float> %3342, ptr %3334, align 4, !tbaa !65, !alias.scope !779, !noalias !776
  store <8 x float> %3343, ptr %3336, align 4, !tbaa !65, !alias.scope !779, !noalias !776
  store <8 x float> %3344, ptr %3338, align 4, !tbaa !65, !alias.scope !779, !noalias !776
  store <8 x float> %3345, ptr %3340, align 4, !tbaa !65, !alias.scope !779, !noalias !776
  %3346 = add nuw i64 %3325, 32
  %3347 = icmp eq i64 %3346, %3323
  br i1 %3347, label %3348, label %3324, !llvm.loop !781

3348:                                             ; preds = %3324
  %3349 = icmp eq i64 %3323, %3311
  br i1 %3349, label %3498, label %3350

3350:                                             ; preds = %3313, %3310, %3348
  %3351 = phi i64 [ 0, %3313 ], [ 0, %3310 ], [ %3323, %3348 ]
  %3352 = xor i64 %3351, -1
  %3353 = add nsw i64 %3352, %3311
  %3354 = and i64 %3311, 3
  %3355 = icmp eq i64 %3354, 0
  br i1 %3355, label %3367, label %3356

3356:                                             ; preds = %3350, %3356
  %3357 = phi i64 [ %3364, %3356 ], [ %3351, %3350 ]
  %3358 = phi i64 [ %3365, %3356 ], [ 0, %3350 ]
  %3359 = getelementptr inbounds float, ptr %3307, i64 %3357
  %3360 = load float, ptr %3359, align 4, !tbaa !65
  %3361 = getelementptr inbounds float, ptr %18, i64 %3357
  %3362 = load float, ptr %3361, align 4, !tbaa !65
  %3363 = fadd fast float %3362, %3360
  store float %3363, ptr %3361, align 4, !tbaa !65
  %3364 = add nuw nsw i64 %3357, 1
  %3365 = add i64 %3358, 1
  %3366 = icmp eq i64 %3365, %3354
  br i1 %3366, label %3367, label %3356, !llvm.loop !782

3367:                                             ; preds = %3356, %3350
  %3368 = phi i64 [ %3351, %3350 ], [ %3364, %3356 ]
  %3369 = icmp ult i64 %3353, 3
  br i1 %3369, label %3498, label %3370

3370:                                             ; preds = %3367, %3370
  %3371 = phi i64 [ %3395, %3370 ], [ %3368, %3367 ]
  %3372 = getelementptr inbounds float, ptr %3307, i64 %3371
  %3373 = load float, ptr %3372, align 4, !tbaa !65
  %3374 = getelementptr inbounds float, ptr %18, i64 %3371
  %3375 = load float, ptr %3374, align 4, !tbaa !65
  %3376 = fadd fast float %3375, %3373
  store float %3376, ptr %3374, align 4, !tbaa !65
  %3377 = add nuw nsw i64 %3371, 1
  %3378 = getelementptr inbounds float, ptr %3307, i64 %3377
  %3379 = load float, ptr %3378, align 4, !tbaa !65
  %3380 = getelementptr inbounds float, ptr %18, i64 %3377
  %3381 = load float, ptr %3380, align 4, !tbaa !65
  %3382 = fadd fast float %3381, %3379
  store float %3382, ptr %3380, align 4, !tbaa !65
  %3383 = add nuw nsw i64 %3371, 2
  %3384 = getelementptr inbounds float, ptr %3307, i64 %3383
  %3385 = load float, ptr %3384, align 4, !tbaa !65
  %3386 = getelementptr inbounds float, ptr %18, i64 %3383
  %3387 = load float, ptr %3386, align 4, !tbaa !65
  %3388 = fadd fast float %3387, %3385
  store float %3388, ptr %3386, align 4, !tbaa !65
  %3389 = add nuw nsw i64 %3371, 3
  %3390 = getelementptr inbounds float, ptr %3307, i64 %3389
  %3391 = load float, ptr %3390, align 4, !tbaa !65
  %3392 = getelementptr inbounds float, ptr %18, i64 %3389
  %3393 = load float, ptr %3392, align 4, !tbaa !65
  %3394 = fadd fast float %3393, %3391
  store float %3394, ptr %3392, align 4, !tbaa !65
  %3395 = add nuw nsw i64 %3371, 4
  %3396 = icmp eq i64 %3395, %3311
  br i1 %3396, label %3498, label %3370, !llvm.loop !783

3397:                                             ; preds = %3291
  %3398 = fcmp fast une float %3292, 0.000000e+00
  br i1 %3398, label %3399, label %3498

3399:                                             ; preds = %3397
  %3400 = getelementptr inbounds %struct.CCGEdge, ptr %3282, i64 0, i32 5
  %3401 = load ptr, ptr %3400, align 8, !tbaa !83
  %3402 = icmp eq ptr %3401, %2125
  %3403 = getelementptr inbounds %struct.CCGEdge, ptr %3282, i64 1
  %3404 = select i1 %3402, i32 1, i32 %984
  %3405 = add i32 %983, %3404
  %3406 = mul nsw i32 %3405, %16
  %3407 = sext i32 %3406 to i64
  %3408 = getelementptr i8, ptr %3403, i64 %3407
  %3409 = load i32, ptr %982, align 4, !tbaa !74
  %3410 = icmp sgt i32 %3409, 0
  br i1 %3410, label %3411, label %3498

3411:                                             ; preds = %3399
  %3412 = zext i32 %3409 to i64
  %3413 = icmp ult i32 %3409, 32
  br i1 %3413, label %3451, label %3414

3414:                                             ; preds = %3411
  %3415 = shl nuw nsw i64 %3412, 2
  %3416 = getelementptr i8, ptr %18, i64 %3415
  %3417 = getelementptr i8, ptr %3282, i64 48
  %3418 = add nsw i64 %3415, %3407
  %3419 = getelementptr i8, ptr %3417, i64 %3418
  %3420 = icmp ult ptr %18, %3419
  %3421 = icmp ult ptr %3408, %3416
  %3422 = and i1 %3420, %3421
  br i1 %3422, label %3451, label %3423

3423:                                             ; preds = %3414
  %3424 = and i64 %3412, 4294967264
  br label %3425

3425:                                             ; preds = %3425, %3423
  %3426 = phi i64 [ 0, %3423 ], [ %3447, %3425 ]
  %3427 = getelementptr inbounds float, ptr %3408, i64 %3426
  %3428 = load <8 x float>, ptr %3427, align 4, !tbaa !65, !alias.scope !784
  %3429 = getelementptr inbounds float, ptr %3427, i64 8
  %3430 = load <8 x float>, ptr %3429, align 4, !tbaa !65, !alias.scope !784
  %3431 = getelementptr inbounds float, ptr %3427, i64 16
  %3432 = load <8 x float>, ptr %3431, align 4, !tbaa !65, !alias.scope !784
  %3433 = getelementptr inbounds float, ptr %3427, i64 24
  %3434 = load <8 x float>, ptr %3433, align 4, !tbaa !65, !alias.scope !784
  %3435 = getelementptr inbounds float, ptr %18, i64 %3426
  %3436 = load <8 x float>, ptr %3435, align 4, !tbaa !65, !alias.scope !787, !noalias !784
  %3437 = getelementptr inbounds float, ptr %3435, i64 8
  %3438 = load <8 x float>, ptr %3437, align 4, !tbaa !65, !alias.scope !787, !noalias !784
  %3439 = getelementptr inbounds float, ptr %3435, i64 16
  %3440 = load <8 x float>, ptr %3439, align 4, !tbaa !65, !alias.scope !787, !noalias !784
  %3441 = getelementptr inbounds float, ptr %3435, i64 24
  %3442 = load <8 x float>, ptr %3441, align 4, !tbaa !65, !alias.scope !787, !noalias !784
  %3443 = fadd fast <8 x float> %3436, %3428
  %3444 = fadd fast <8 x float> %3438, %3430
  %3445 = fadd fast <8 x float> %3440, %3432
  %3446 = fadd fast <8 x float> %3442, %3434
  store <8 x float> %3443, ptr %3435, align 4, !tbaa !65, !alias.scope !787, !noalias !784
  store <8 x float> %3444, ptr %3437, align 4, !tbaa !65, !alias.scope !787, !noalias !784
  store <8 x float> %3445, ptr %3439, align 4, !tbaa !65, !alias.scope !787, !noalias !784
  store <8 x float> %3446, ptr %3441, align 4, !tbaa !65, !alias.scope !787, !noalias !784
  %3447 = add nuw i64 %3426, 32
  %3448 = icmp eq i64 %3447, %3424
  br i1 %3448, label %3449, label %3425, !llvm.loop !789

3449:                                             ; preds = %3425
  %3450 = icmp eq i64 %3424, %3412
  br i1 %3450, label %3498, label %3451

3451:                                             ; preds = %3414, %3411, %3449
  %3452 = phi i64 [ 0, %3414 ], [ 0, %3411 ], [ %3424, %3449 ]
  %3453 = xor i64 %3452, -1
  %3454 = add nsw i64 %3453, %3412
  %3455 = and i64 %3412, 3
  %3456 = icmp eq i64 %3455, 0
  br i1 %3456, label %3468, label %3457

3457:                                             ; preds = %3451, %3457
  %3458 = phi i64 [ %3465, %3457 ], [ %3452, %3451 ]
  %3459 = phi i64 [ %3466, %3457 ], [ 0, %3451 ]
  %3460 = getelementptr inbounds float, ptr %3408, i64 %3458
  %3461 = load float, ptr %3460, align 4, !tbaa !65
  %3462 = getelementptr inbounds float, ptr %18, i64 %3458
  %3463 = load float, ptr %3462, align 4, !tbaa !65
  %3464 = fadd fast float %3463, %3461
  store float %3464, ptr %3462, align 4, !tbaa !65
  %3465 = add nuw nsw i64 %3458, 1
  %3466 = add i64 %3459, 1
  %3467 = icmp eq i64 %3466, %3455
  br i1 %3467, label %3468, label %3457, !llvm.loop !790

3468:                                             ; preds = %3457, %3451
  %3469 = phi i64 [ %3452, %3451 ], [ %3465, %3457 ]
  %3470 = icmp ult i64 %3454, 3
  br i1 %3470, label %3498, label %3471

3471:                                             ; preds = %3468, %3471
  %3472 = phi i64 [ %3496, %3471 ], [ %3469, %3468 ]
  %3473 = getelementptr inbounds float, ptr %3408, i64 %3472
  %3474 = load float, ptr %3473, align 4, !tbaa !65
  %3475 = getelementptr inbounds float, ptr %18, i64 %3472
  %3476 = load float, ptr %3475, align 4, !tbaa !65
  %3477 = fadd fast float %3476, %3474
  store float %3477, ptr %3475, align 4, !tbaa !65
  %3478 = add nuw nsw i64 %3472, 1
  %3479 = getelementptr inbounds float, ptr %3408, i64 %3478
  %3480 = load float, ptr %3479, align 4, !tbaa !65
  %3481 = getelementptr inbounds float, ptr %18, i64 %3478
  %3482 = load float, ptr %3481, align 4, !tbaa !65
  %3483 = fadd fast float %3482, %3480
  store float %3483, ptr %3481, align 4, !tbaa !65
  %3484 = add nuw nsw i64 %3472, 2
  %3485 = getelementptr inbounds float, ptr %3408, i64 %3484
  %3486 = load float, ptr %3485, align 4, !tbaa !65
  %3487 = getelementptr inbounds float, ptr %18, i64 %3484
  %3488 = load float, ptr %3487, align 4, !tbaa !65
  %3489 = fadd fast float %3488, %3486
  store float %3489, ptr %3487, align 4, !tbaa !65
  %3490 = add nuw nsw i64 %3472, 3
  %3491 = getelementptr inbounds float, ptr %3408, i64 %3490
  %3492 = load float, ptr %3491, align 4, !tbaa !65
  %3493 = getelementptr inbounds float, ptr %18, i64 %3490
  %3494 = load float, ptr %3493, align 4, !tbaa !65
  %3495 = fadd fast float %3494, %3492
  store float %3495, ptr %3493, align 4, !tbaa !65
  %3496 = add nuw nsw i64 %3472, 4
  %3497 = icmp eq i64 %3496, %3412
  br i1 %3497, label %3498, label %3471, !llvm.loop !791

3498:                                             ; preds = %3468, %3471, %3367, %3370, %3449, %3348, %3293, %3399, %3298, %3397, %3294
  %3499 = add nuw nsw i64 %3280, 1
  %3500 = icmp eq i64 %3499, %3276
  br i1 %3500, label %3501, label %3279, !llvm.loop !792

3501:                                             ; preds = %3498, %3267
  %3502 = load i32, ptr %982, align 4, !tbaa !74
  %3503 = icmp sgt i32 %3502, 0
  br i1 %3503, label %3504, label %4225

3504:                                             ; preds = %3501
  %3505 = sitofp i32 %3272 to float
  %3506 = zext i32 %3502 to i64
  %3507 = icmp ult i32 %3502, 8
  br i1 %3507, label %3522, label %3508

3508:                                             ; preds = %3504
  %3509 = and i64 %3506, 4294967288
  %3510 = insertelement <8 x float> poison, float %3505, i64 0
  %3511 = shufflevector <8 x float> %3510, <8 x float> poison, <8 x i32> zeroinitializer
  %3512 = fdiv fast <8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3511
  br label %3513

3513:                                             ; preds = %3513, %3508
  %3514 = phi i64 [ 0, %3508 ], [ %3518, %3513 ]
  %3515 = getelementptr inbounds float, ptr %18, i64 %3514
  %3516 = load <8 x float>, ptr %3515, align 4, !tbaa !65
  %3517 = fmul fast <8 x float> %3516, %3512
  store <8 x float> %3517, ptr %3515, align 4, !tbaa !65
  %3518 = add nuw i64 %3514, 8
  %3519 = icmp eq i64 %3518, %3509
  br i1 %3519, label %3520, label %3513, !llvm.loop !793

3520:                                             ; preds = %3513
  %3521 = icmp eq i64 %3509, %3506
  br i1 %3521, label %3532, label %3522

3522:                                             ; preds = %3504, %3520
  %3523 = phi i64 [ 0, %3504 ], [ %3509, %3520 ]
  %3524 = fdiv fast float 1.000000e+00, %3505
  br label %3525

3525:                                             ; preds = %3522, %3525
  %3526 = phi i64 [ %3530, %3525 ], [ %3523, %3522 ]
  %3527 = getelementptr inbounds float, ptr %18, i64 %3526
  %3528 = load float, ptr %3527, align 4, !tbaa !65
  %3529 = fmul fast float %3528, %3524
  store float %3529, ptr %3527, align 4, !tbaa !65
  %3530 = add nuw nsw i64 %3526, 1
  %3531 = icmp eq i64 %3530, %3506
  br i1 %3531, label %3532, label %3525, !llvm.loop !794

3532:                                             ; preds = %3525, %3520
  %3533 = icmp ne i32 %3272, 2
  %3534 = icmp ne i32 %2187, 0
  %3535 = or i1 %3270, %3533
  %3536 = select i1 %3535, i1 true, i1 %3534
  br i1 %3536, label %3537, label %3807

3537:                                             ; preds = %3532
  %3538 = icmp ult i32 %3502, 32
  br i1 %3538, label %3563, label %3539

3539:                                             ; preds = %3537
  %3540 = add i64 %1002, %2126
  %3541 = sub i64 %22, %3540
  %3542 = icmp ult i64 %3541, 128
  br i1 %3542, label %3563, label %3543

3543:                                             ; preds = %3539
  %3544 = and i64 %3506, 4294967264
  br label %3545

3545:                                             ; preds = %3545, %3543
  %3546 = phi i64 [ 0, %3543 ], [ %3559, %3545 ]
  %3547 = getelementptr inbounds float, ptr %2128, i64 %3546
  %3548 = load <8 x float>, ptr %3547, align 4, !tbaa !65
  %3549 = getelementptr inbounds float, ptr %3547, i64 8
  %3550 = load <8 x float>, ptr %3549, align 4, !tbaa !65
  %3551 = getelementptr inbounds float, ptr %3547, i64 16
  %3552 = load <8 x float>, ptr %3551, align 4, !tbaa !65
  %3553 = getelementptr inbounds float, ptr %3547, i64 24
  %3554 = load <8 x float>, ptr %3553, align 4, !tbaa !65
  %3555 = getelementptr inbounds float, ptr %21, i64 %3546
  store <8 x float> %3548, ptr %3555, align 4, !tbaa !65
  %3556 = getelementptr inbounds float, ptr %3555, i64 8
  store <8 x float> %3550, ptr %3556, align 4, !tbaa !65
  %3557 = getelementptr inbounds float, ptr %3555, i64 16
  store <8 x float> %3552, ptr %3557, align 4, !tbaa !65
  %3558 = getelementptr inbounds float, ptr %3555, i64 24
  store <8 x float> %3554, ptr %3558, align 4, !tbaa !65
  %3559 = add nuw i64 %3546, 32
  %3560 = icmp eq i64 %3559, %3544
  br i1 %3560, label %3561, label %3545, !llvm.loop !795

3561:                                             ; preds = %3545
  %3562 = icmp eq i64 %3544, %3506
  br i1 %3562, label %3600, label %3563

3563:                                             ; preds = %3539, %3537, %3561
  %3564 = phi i64 [ 0, %3539 ], [ 0, %3537 ], [ %3544, %3561 ]
  %3565 = xor i64 %3564, -1
  %3566 = add nsw i64 %3565, %3506
  %3567 = and i64 %3506, 3
  %3568 = icmp eq i64 %3567, 0
  br i1 %3568, label %3578, label %3569

3569:                                             ; preds = %3563, %3569
  %3570 = phi i64 [ %3575, %3569 ], [ %3564, %3563 ]
  %3571 = phi i64 [ %3576, %3569 ], [ 0, %3563 ]
  %3572 = getelementptr inbounds float, ptr %2128, i64 %3570
  %3573 = load float, ptr %3572, align 4, !tbaa !65
  %3574 = getelementptr inbounds float, ptr %21, i64 %3570
  store float %3573, ptr %3574, align 4, !tbaa !65
  %3575 = add nuw nsw i64 %3570, 1
  %3576 = add i64 %3571, 1
  %3577 = icmp eq i64 %3576, %3567
  br i1 %3577, label %3578, label %3569, !llvm.loop !796

3578:                                             ; preds = %3569, %3563
  %3579 = phi i64 [ %3564, %3563 ], [ %3575, %3569 ]
  %3580 = icmp ult i64 %3566, 3
  br i1 %3580, label %3600, label %3581

3581:                                             ; preds = %3578, %3581
  %3582 = phi i64 [ %3598, %3581 ], [ %3579, %3578 ]
  %3583 = getelementptr inbounds float, ptr %2128, i64 %3582
  %3584 = load float, ptr %3583, align 4, !tbaa !65
  %3585 = getelementptr inbounds float, ptr %21, i64 %3582
  store float %3584, ptr %3585, align 4, !tbaa !65
  %3586 = add nuw nsw i64 %3582, 1
  %3587 = getelementptr inbounds float, ptr %2128, i64 %3586
  %3588 = load float, ptr %3587, align 4, !tbaa !65
  %3589 = getelementptr inbounds float, ptr %21, i64 %3586
  store float %3588, ptr %3589, align 4, !tbaa !65
  %3590 = add nuw nsw i64 %3582, 2
  %3591 = getelementptr inbounds float, ptr %2128, i64 %3590
  %3592 = load float, ptr %3591, align 4, !tbaa !65
  %3593 = getelementptr inbounds float, ptr %21, i64 %3590
  store float %3592, ptr %3593, align 4, !tbaa !65
  %3594 = add nuw nsw i64 %3582, 3
  %3595 = getelementptr inbounds float, ptr %2128, i64 %3594
  %3596 = load float, ptr %3595, align 4, !tbaa !65
  %3597 = getelementptr inbounds float, ptr %21, i64 %3594
  store float %3596, ptr %3597, align 4, !tbaa !65
  %3598 = add nuw nsw i64 %3582, 4
  %3599 = icmp eq i64 %3598, %3506
  br i1 %3599, label %3600, label %3581, !llvm.loop !797

3600:                                             ; preds = %3578, %3581, %3561
  %3601 = icmp ult i32 %3502, 32
  br i1 %3601, label %3637, label %3602

3602:                                             ; preds = %3600
  %3603 = shl nuw nsw i64 %3506, 2
  %3604 = getelementptr i8, ptr %21, i64 %3603
  %3605 = getelementptr i8, ptr %18, i64 %3603
  %3606 = icmp ult ptr %21, %3605
  %3607 = icmp ult ptr %18, %3604
  %3608 = and i1 %3606, %3607
  br i1 %3608, label %3637, label %3609

3609:                                             ; preds = %3602
  %3610 = and i64 %3506, 4294967264
  br label %3611

3611:                                             ; preds = %3611, %3609
  %3612 = phi i64 [ 0, %3609 ], [ %3633, %3611 ]
  %3613 = getelementptr inbounds float, ptr %18, i64 %3612
  %3614 = load <8 x float>, ptr %3613, align 4, !tbaa !65, !alias.scope !798
  %3615 = getelementptr inbounds float, ptr %3613, i64 8
  %3616 = load <8 x float>, ptr %3615, align 4, !tbaa !65, !alias.scope !798
  %3617 = getelementptr inbounds float, ptr %3613, i64 16
  %3618 = load <8 x float>, ptr %3617, align 4, !tbaa !65, !alias.scope !798
  %3619 = getelementptr inbounds float, ptr %3613, i64 24
  %3620 = load <8 x float>, ptr %3619, align 4, !tbaa !65, !alias.scope !798
  %3621 = getelementptr inbounds float, ptr %21, i64 %3612
  %3622 = load <8 x float>, ptr %3621, align 4, !tbaa !65, !alias.scope !801, !noalias !798
  %3623 = getelementptr inbounds float, ptr %3621, i64 8
  %3624 = load <8 x float>, ptr %3623, align 4, !tbaa !65, !alias.scope !801, !noalias !798
  %3625 = getelementptr inbounds float, ptr %3621, i64 16
  %3626 = load <8 x float>, ptr %3625, align 4, !tbaa !65, !alias.scope !801, !noalias !798
  %3627 = getelementptr inbounds float, ptr %3621, i64 24
  %3628 = load <8 x float>, ptr %3627, align 4, !tbaa !65, !alias.scope !801, !noalias !798
  %3629 = fsub fast <8 x float> %3622, %3614
  %3630 = fsub fast <8 x float> %3624, %3616
  %3631 = fsub fast <8 x float> %3626, %3618
  %3632 = fsub fast <8 x float> %3628, %3620
  store <8 x float> %3629, ptr %3621, align 4, !tbaa !65, !alias.scope !801, !noalias !798
  store <8 x float> %3630, ptr %3623, align 4, !tbaa !65, !alias.scope !801, !noalias !798
  store <8 x float> %3631, ptr %3625, align 4, !tbaa !65, !alias.scope !801, !noalias !798
  store <8 x float> %3632, ptr %3627, align 4, !tbaa !65, !alias.scope !801, !noalias !798
  %3633 = add nuw i64 %3612, 32
  %3634 = icmp eq i64 %3633, %3610
  br i1 %3634, label %3635, label %3611, !llvm.loop !803

3635:                                             ; preds = %3611
  %3636 = icmp eq i64 %3610, %3506
  br i1 %3636, label %3684, label %3637

3637:                                             ; preds = %3602, %3600, %3635
  %3638 = phi i64 [ 0, %3602 ], [ 0, %3600 ], [ %3610, %3635 ]
  %3639 = xor i64 %3638, -1
  %3640 = add nsw i64 %3639, %3506
  %3641 = and i64 %3506, 3
  %3642 = icmp eq i64 %3641, 0
  br i1 %3642, label %3654, label %3643

3643:                                             ; preds = %3637, %3643
  %3644 = phi i64 [ %3651, %3643 ], [ %3638, %3637 ]
  %3645 = phi i64 [ %3652, %3643 ], [ 0, %3637 ]
  %3646 = getelementptr inbounds float, ptr %18, i64 %3644
  %3647 = load float, ptr %3646, align 4, !tbaa !65
  %3648 = getelementptr inbounds float, ptr %21, i64 %3644
  %3649 = load float, ptr %3648, align 4, !tbaa !65
  %3650 = fsub fast float %3649, %3647
  store float %3650, ptr %3648, align 4, !tbaa !65
  %3651 = add nuw nsw i64 %3644, 1
  %3652 = add i64 %3645, 1
  %3653 = icmp eq i64 %3652, %3641
  br i1 %3653, label %3654, label %3643, !llvm.loop !804

3654:                                             ; preds = %3643, %3637
  %3655 = phi i64 [ %3638, %3637 ], [ %3651, %3643 ]
  %3656 = icmp ult i64 %3640, 3
  br i1 %3656, label %3684, label %3657

3657:                                             ; preds = %3654, %3657
  %3658 = phi i64 [ %3682, %3657 ], [ %3655, %3654 ]
  %3659 = getelementptr inbounds float, ptr %18, i64 %3658
  %3660 = load float, ptr %3659, align 4, !tbaa !65
  %3661 = getelementptr inbounds float, ptr %21, i64 %3658
  %3662 = load float, ptr %3661, align 4, !tbaa !65
  %3663 = fsub fast float %3662, %3660
  store float %3663, ptr %3661, align 4, !tbaa !65
  %3664 = add nuw nsw i64 %3658, 1
  %3665 = getelementptr inbounds float, ptr %18, i64 %3664
  %3666 = load float, ptr %3665, align 4, !tbaa !65
  %3667 = getelementptr inbounds float, ptr %21, i64 %3664
  %3668 = load float, ptr %3667, align 4, !tbaa !65
  %3669 = fsub fast float %3668, %3666
  store float %3669, ptr %3667, align 4, !tbaa !65
  %3670 = add nuw nsw i64 %3658, 2
  %3671 = getelementptr inbounds float, ptr %18, i64 %3670
  %3672 = load float, ptr %3671, align 4, !tbaa !65
  %3673 = getelementptr inbounds float, ptr %21, i64 %3670
  %3674 = load float, ptr %3673, align 4, !tbaa !65
  %3675 = fsub fast float %3674, %3672
  store float %3675, ptr %3673, align 4, !tbaa !65
  %3676 = add nuw nsw i64 %3658, 3
  %3677 = getelementptr inbounds float, ptr %18, i64 %3676
  %3678 = load float, ptr %3677, align 4, !tbaa !65
  %3679 = getelementptr inbounds float, ptr %21, i64 %3676
  %3680 = load float, ptr %3679, align 4, !tbaa !65
  %3681 = fsub fast float %3680, %3678
  store float %3681, ptr %3679, align 4, !tbaa !65
  %3682 = add nuw nsw i64 %3658, 4
  %3683 = icmp eq i64 %3682, %3506
  br i1 %3683, label %3684, label %3657, !llvm.loop !805

3684:                                             ; preds = %3654, %3657, %3635
  %3685 = icmp ult i32 %3502, 32
  br i1 %3685, label %3714, label %3686

3686:                                             ; preds = %3684
  %3687 = and i64 %3506, 4294967264
  %3688 = insertelement <8 x float> poison, float %3271, i64 0
  %3689 = shufflevector <8 x float> %3688, <8 x float> poison, <8 x i32> zeroinitializer
  %3690 = insertelement <8 x float> poison, float %3271, i64 0
  %3691 = shufflevector <8 x float> %3690, <8 x float> poison, <8 x i32> zeroinitializer
  %3692 = insertelement <8 x float> poison, float %3271, i64 0
  %3693 = shufflevector <8 x float> %3692, <8 x float> poison, <8 x i32> zeroinitializer
  %3694 = insertelement <8 x float> poison, float %3271, i64 0
  %3695 = shufflevector <8 x float> %3694, <8 x float> poison, <8 x i32> zeroinitializer
  br label %3696

3696:                                             ; preds = %3696, %3686
  %3697 = phi i64 [ 0, %3686 ], [ %3710, %3696 ]
  %3698 = getelementptr inbounds float, ptr %21, i64 %3697
  %3699 = load <8 x float>, ptr %3698, align 4, !tbaa !65
  %3700 = getelementptr inbounds float, ptr %3698, i64 8
  %3701 = load <8 x float>, ptr %3700, align 4, !tbaa !65
  %3702 = getelementptr inbounds float, ptr %3698, i64 16
  %3703 = load <8 x float>, ptr %3702, align 4, !tbaa !65
  %3704 = getelementptr inbounds float, ptr %3698, i64 24
  %3705 = load <8 x float>, ptr %3704, align 4, !tbaa !65
  %3706 = fmul fast <8 x float> %3699, %3689
  %3707 = fmul fast <8 x float> %3701, %3691
  %3708 = fmul fast <8 x float> %3703, %3693
  %3709 = fmul fast <8 x float> %3705, %3695
  store <8 x float> %3706, ptr %3698, align 4, !tbaa !65
  store <8 x float> %3707, ptr %3700, align 4, !tbaa !65
  store <8 x float> %3708, ptr %3702, align 4, !tbaa !65
  store <8 x float> %3709, ptr %3704, align 4, !tbaa !65
  %3710 = add nuw i64 %3697, 32
  %3711 = icmp eq i64 %3710, %3687
  br i1 %3711, label %3712, label %3696, !llvm.loop !806

3712:                                             ; preds = %3696
  %3713 = icmp eq i64 %3687, %3506
  br i1 %3713, label %3723, label %3714

3714:                                             ; preds = %3684, %3712
  %3715 = phi i64 [ 0, %3684 ], [ %3687, %3712 ]
  br label %3716

3716:                                             ; preds = %3714, %3716
  %3717 = phi i64 [ %3721, %3716 ], [ %3715, %3714 ]
  %3718 = getelementptr inbounds float, ptr %21, i64 %3717
  %3719 = load float, ptr %3718, align 4, !tbaa !65
  %3720 = fmul fast float %3719, %3271
  store float %3720, ptr %3718, align 4, !tbaa !65
  %3721 = add nuw nsw i64 %3717, 1
  %3722 = icmp eq i64 %3721, %3506
  br i1 %3722, label %3723, label %3716, !llvm.loop !807

3723:                                             ; preds = %3716, %3712
  %3724 = icmp ult i32 %3502, 32
  br i1 %3724, label %3760, label %3725

3725:                                             ; preds = %3723
  %3726 = shl nuw nsw i64 %3506, 2
  %3727 = getelementptr i8, ptr %18, i64 %3726
  %3728 = getelementptr i8, ptr %21, i64 %3726
  %3729 = icmp ult ptr %18, %3728
  %3730 = icmp ult ptr %21, %3727
  %3731 = and i1 %3729, %3730
  br i1 %3731, label %3760, label %3732

3732:                                             ; preds = %3725
  %3733 = and i64 %3506, 4294967264
  br label %3734

3734:                                             ; preds = %3734, %3732
  %3735 = phi i64 [ 0, %3732 ], [ %3756, %3734 ]
  %3736 = getelementptr inbounds float, ptr %21, i64 %3735
  %3737 = load <8 x float>, ptr %3736, align 4, !tbaa !65, !alias.scope !808
  %3738 = getelementptr inbounds float, ptr %3736, i64 8
  %3739 = load <8 x float>, ptr %3738, align 4, !tbaa !65, !alias.scope !808
  %3740 = getelementptr inbounds float, ptr %3736, i64 16
  %3741 = load <8 x float>, ptr %3740, align 4, !tbaa !65, !alias.scope !808
  %3742 = getelementptr inbounds float, ptr %3736, i64 24
  %3743 = load <8 x float>, ptr %3742, align 4, !tbaa !65, !alias.scope !808
  %3744 = getelementptr inbounds float, ptr %18, i64 %3735
  %3745 = load <8 x float>, ptr %3744, align 4, !tbaa !65, !alias.scope !811, !noalias !808
  %3746 = getelementptr inbounds float, ptr %3744, i64 8
  %3747 = load <8 x float>, ptr %3746, align 4, !tbaa !65, !alias.scope !811, !noalias !808
  %3748 = getelementptr inbounds float, ptr %3744, i64 16
  %3749 = load <8 x float>, ptr %3748, align 4, !tbaa !65, !alias.scope !811, !noalias !808
  %3750 = getelementptr inbounds float, ptr %3744, i64 24
  %3751 = load <8 x float>, ptr %3750, align 4, !tbaa !65, !alias.scope !811, !noalias !808
  %3752 = fadd fast <8 x float> %3745, %3737
  %3753 = fadd fast <8 x float> %3747, %3739
  %3754 = fadd fast <8 x float> %3749, %3741
  %3755 = fadd fast <8 x float> %3751, %3743
  store <8 x float> %3752, ptr %3744, align 4, !tbaa !65, !alias.scope !811, !noalias !808
  store <8 x float> %3753, ptr %3746, align 4, !tbaa !65, !alias.scope !811, !noalias !808
  store <8 x float> %3754, ptr %3748, align 4, !tbaa !65, !alias.scope !811, !noalias !808
  store <8 x float> %3755, ptr %3750, align 4, !tbaa !65, !alias.scope !811, !noalias !808
  %3756 = add nuw i64 %3735, 32
  %3757 = icmp eq i64 %3756, %3733
  br i1 %3757, label %3758, label %3734, !llvm.loop !813

3758:                                             ; preds = %3734
  %3759 = icmp eq i64 %3733, %3506
  br i1 %3759, label %3807, label %3760

3760:                                             ; preds = %3725, %3723, %3758
  %3761 = phi i64 [ 0, %3725 ], [ 0, %3723 ], [ %3733, %3758 ]
  %3762 = xor i64 %3761, -1
  %3763 = add nsw i64 %3762, %3506
  %3764 = and i64 %3506, 3
  %3765 = icmp eq i64 %3764, 0
  br i1 %3765, label %3777, label %3766

3766:                                             ; preds = %3760, %3766
  %3767 = phi i64 [ %3774, %3766 ], [ %3761, %3760 ]
  %3768 = phi i64 [ %3775, %3766 ], [ 0, %3760 ]
  %3769 = getelementptr inbounds float, ptr %21, i64 %3767
  %3770 = load float, ptr %3769, align 4, !tbaa !65
  %3771 = getelementptr inbounds float, ptr %18, i64 %3767
  %3772 = load float, ptr %3771, align 4, !tbaa !65
  %3773 = fadd fast float %3772, %3770
  store float %3773, ptr %3771, align 4, !tbaa !65
  %3774 = add nuw nsw i64 %3767, 1
  %3775 = add i64 %3768, 1
  %3776 = icmp eq i64 %3775, %3764
  br i1 %3776, label %3777, label %3766, !llvm.loop !814

3777:                                             ; preds = %3766, %3760
  %3778 = phi i64 [ %3761, %3760 ], [ %3774, %3766 ]
  %3779 = icmp ult i64 %3763, 3
  br i1 %3779, label %3807, label %3780

3780:                                             ; preds = %3777, %3780
  %3781 = phi i64 [ %3805, %3780 ], [ %3778, %3777 ]
  %3782 = getelementptr inbounds float, ptr %21, i64 %3781
  %3783 = load float, ptr %3782, align 4, !tbaa !65
  %3784 = getelementptr inbounds float, ptr %18, i64 %3781
  %3785 = load float, ptr %3784, align 4, !tbaa !65
  %3786 = fadd fast float %3785, %3783
  store float %3786, ptr %3784, align 4, !tbaa !65
  %3787 = add nuw nsw i64 %3781, 1
  %3788 = getelementptr inbounds float, ptr %21, i64 %3787
  %3789 = load float, ptr %3788, align 4, !tbaa !65
  %3790 = getelementptr inbounds float, ptr %18, i64 %3787
  %3791 = load float, ptr %3790, align 4, !tbaa !65
  %3792 = fadd fast float %3791, %3789
  store float %3792, ptr %3790, align 4, !tbaa !65
  %3793 = add nuw nsw i64 %3781, 2
  %3794 = getelementptr inbounds float, ptr %21, i64 %3793
  %3795 = load float, ptr %3794, align 4, !tbaa !65
  %3796 = getelementptr inbounds float, ptr %18, i64 %3793
  %3797 = load float, ptr %3796, align 4, !tbaa !65
  %3798 = fadd fast float %3797, %3795
  store float %3798, ptr %3796, align 4, !tbaa !65
  %3799 = add nuw nsw i64 %3781, 3
  %3800 = getelementptr inbounds float, ptr %21, i64 %3799
  %3801 = load float, ptr %3800, align 4, !tbaa !65
  %3802 = getelementptr inbounds float, ptr %18, i64 %3799
  %3803 = load float, ptr %3802, align 4, !tbaa !65
  %3804 = fadd fast float %3803, %3801
  store float %3804, ptr %3802, align 4, !tbaa !65
  %3805 = add nuw nsw i64 %3781, 4
  %3806 = icmp eq i64 %3805, %3506
  br i1 %3806, label %3807, label %3780, !llvm.loop !815

3807:                                             ; preds = %3777, %3780, %3758, %3532
  %3808 = icmp ult i32 %3502, 32
  br i1 %3808, label %3833, label %3809

3809:                                             ; preds = %3807
  %3810 = add i64 %1001, %2126
  %3811 = sub i64 %22, %3810
  %3812 = icmp ult i64 %3811, 128
  br i1 %3812, label %3833, label %3813

3813:                                             ; preds = %3809
  %3814 = and i64 %3506, 4294967264
  br label %3815

3815:                                             ; preds = %3815, %3813
  %3816 = phi i64 [ 0, %3813 ], [ %3829, %3815 ]
  %3817 = getelementptr inbounds float, ptr %2128, i64 %3816
  %3818 = load <8 x float>, ptr %3817, align 4, !tbaa !65
  %3819 = getelementptr inbounds float, ptr %3817, i64 8
  %3820 = load <8 x float>, ptr %3819, align 4, !tbaa !65
  %3821 = getelementptr inbounds float, ptr %3817, i64 16
  %3822 = load <8 x float>, ptr %3821, align 4, !tbaa !65
  %3823 = getelementptr inbounds float, ptr %3817, i64 24
  %3824 = load <8 x float>, ptr %3823, align 4, !tbaa !65
  %3825 = getelementptr inbounds float, ptr %21, i64 %3816
  store <8 x float> %3818, ptr %3825, align 4, !tbaa !65
  %3826 = getelementptr inbounds float, ptr %3825, i64 8
  store <8 x float> %3820, ptr %3826, align 4, !tbaa !65
  %3827 = getelementptr inbounds float, ptr %3825, i64 16
  store <8 x float> %3822, ptr %3827, align 4, !tbaa !65
  %3828 = getelementptr inbounds float, ptr %3825, i64 24
  store <8 x float> %3824, ptr %3828, align 4, !tbaa !65
  %3829 = add nuw i64 %3816, 32
  %3830 = icmp eq i64 %3829, %3814
  br i1 %3830, label %3831, label %3815, !llvm.loop !816

3831:                                             ; preds = %3815
  %3832 = icmp eq i64 %3814, %3506
  br i1 %3832, label %3870, label %3833

3833:                                             ; preds = %3809, %3807, %3831
  %3834 = phi i64 [ 0, %3809 ], [ 0, %3807 ], [ %3814, %3831 ]
  %3835 = xor i64 %3834, -1
  %3836 = add nsw i64 %3835, %3506
  %3837 = and i64 %3506, 3
  %3838 = icmp eq i64 %3837, 0
  br i1 %3838, label %3848, label %3839

3839:                                             ; preds = %3833, %3839
  %3840 = phi i64 [ %3845, %3839 ], [ %3834, %3833 ]
  %3841 = phi i64 [ %3846, %3839 ], [ 0, %3833 ]
  %3842 = getelementptr inbounds float, ptr %2128, i64 %3840
  %3843 = load float, ptr %3842, align 4, !tbaa !65
  %3844 = getelementptr inbounds float, ptr %21, i64 %3840
  store float %3843, ptr %3844, align 4, !tbaa !65
  %3845 = add nuw nsw i64 %3840, 1
  %3846 = add i64 %3841, 1
  %3847 = icmp eq i64 %3846, %3837
  br i1 %3847, label %3848, label %3839, !llvm.loop !817

3848:                                             ; preds = %3839, %3833
  %3849 = phi i64 [ %3834, %3833 ], [ %3845, %3839 ]
  %3850 = icmp ult i64 %3836, 3
  br i1 %3850, label %3870, label %3851

3851:                                             ; preds = %3848, %3851
  %3852 = phi i64 [ %3868, %3851 ], [ %3849, %3848 ]
  %3853 = getelementptr inbounds float, ptr %2128, i64 %3852
  %3854 = load float, ptr %3853, align 4, !tbaa !65
  %3855 = getelementptr inbounds float, ptr %21, i64 %3852
  store float %3854, ptr %3855, align 4, !tbaa !65
  %3856 = add nuw nsw i64 %3852, 1
  %3857 = getelementptr inbounds float, ptr %2128, i64 %3856
  %3858 = load float, ptr %3857, align 4, !tbaa !65
  %3859 = getelementptr inbounds float, ptr %21, i64 %3856
  store float %3858, ptr %3859, align 4, !tbaa !65
  %3860 = add nuw nsw i64 %3852, 2
  %3861 = getelementptr inbounds float, ptr %2128, i64 %3860
  %3862 = load float, ptr %3861, align 4, !tbaa !65
  %3863 = getelementptr inbounds float, ptr %21, i64 %3860
  store float %3862, ptr %3863, align 4, !tbaa !65
  %3864 = add nuw nsw i64 %3852, 3
  %3865 = getelementptr inbounds float, ptr %2128, i64 %3864
  %3866 = load float, ptr %3865, align 4, !tbaa !65
  %3867 = getelementptr inbounds float, ptr %21, i64 %3864
  store float %3866, ptr %3867, align 4, !tbaa !65
  %3868 = add nuw nsw i64 %3852, 4
  %3869 = icmp eq i64 %3868, %3506
  br i1 %3869, label %3870, label %3851, !llvm.loop !818

3870:                                             ; preds = %3848, %3851, %3831
  %3871 = icmp ult i32 %3502, 32
  br i1 %3871, label %3892, label %3872

3872:                                             ; preds = %3870
  %3873 = and i64 %3506, 4294967264
  br label %3874

3874:                                             ; preds = %3874, %3872
  %3875 = phi i64 [ 0, %3872 ], [ %3888, %3874 ]
  %3876 = getelementptr inbounds float, ptr %21, i64 %3875
  %3877 = load <8 x float>, ptr %3876, align 4, !tbaa !65
  %3878 = getelementptr inbounds float, ptr %3876, i64 8
  %3879 = load <8 x float>, ptr %3878, align 4, !tbaa !65
  %3880 = getelementptr inbounds float, ptr %3876, i64 16
  %3881 = load <8 x float>, ptr %3880, align 4, !tbaa !65
  %3882 = getelementptr inbounds float, ptr %3876, i64 24
  %3883 = load <8 x float>, ptr %3882, align 4, !tbaa !65
  %3884 = fmul fast <8 x float> %3877, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  %3885 = fmul fast <8 x float> %3879, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  %3886 = fmul fast <8 x float> %3881, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  %3887 = fmul fast <8 x float> %3883, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  store <8 x float> %3884, ptr %3876, align 4, !tbaa !65
  store <8 x float> %3885, ptr %3878, align 4, !tbaa !65
  store <8 x float> %3886, ptr %3880, align 4, !tbaa !65
  store <8 x float> %3887, ptr %3882, align 4, !tbaa !65
  %3888 = add nuw i64 %3875, 32
  %3889 = icmp eq i64 %3888, %3873
  br i1 %3889, label %3890, label %3874, !llvm.loop !819

3890:                                             ; preds = %3874
  %3891 = icmp eq i64 %3873, %3506
  br i1 %3891, label %3901, label %3892

3892:                                             ; preds = %3870, %3890
  %3893 = phi i64 [ 0, %3870 ], [ %3873, %3890 ]
  br label %3894

3894:                                             ; preds = %3892, %3894
  %3895 = phi i64 [ %3899, %3894 ], [ %3893, %3892 ]
  %3896 = getelementptr inbounds float, ptr %21, i64 %3895
  %3897 = load float, ptr %3896, align 4, !tbaa !65
  %3898 = fmul fast float %3897, 7.500000e-01
  store float %3898, ptr %3896, align 4, !tbaa !65
  %3899 = add nuw nsw i64 %3895, 1
  %3900 = icmp eq i64 %3899, %3506
  br i1 %3900, label %3901, label %3894, !llvm.loop !820

3901:                                             ; preds = %3894, %3890
  %3902 = icmp ult i32 %3502, 32
  br i1 %3902, label %3923, label %3903

3903:                                             ; preds = %3901
  %3904 = and i64 %3506, 4294967264
  br label %3905

3905:                                             ; preds = %3905, %3903
  %3906 = phi i64 [ 0, %3903 ], [ %3919, %3905 ]
  %3907 = getelementptr inbounds float, ptr %18, i64 %3906
  %3908 = load <8 x float>, ptr %3907, align 4, !tbaa !65
  %3909 = getelementptr inbounds float, ptr %3907, i64 8
  %3910 = load <8 x float>, ptr %3909, align 4, !tbaa !65
  %3911 = getelementptr inbounds float, ptr %3907, i64 16
  %3912 = load <8 x float>, ptr %3911, align 4, !tbaa !65
  %3913 = getelementptr inbounds float, ptr %3907, i64 24
  %3914 = load <8 x float>, ptr %3913, align 4, !tbaa !65
  %3915 = fmul fast <8 x float> %3908, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %3916 = fmul fast <8 x float> %3910, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %3917 = fmul fast <8 x float> %3912, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %3918 = fmul fast <8 x float> %3914, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  store <8 x float> %3915, ptr %3907, align 4, !tbaa !65
  store <8 x float> %3916, ptr %3909, align 4, !tbaa !65
  store <8 x float> %3917, ptr %3911, align 4, !tbaa !65
  store <8 x float> %3918, ptr %3913, align 4, !tbaa !65
  %3919 = add nuw i64 %3906, 32
  %3920 = icmp eq i64 %3919, %3904
  br i1 %3920, label %3921, label %3905, !llvm.loop !821

3921:                                             ; preds = %3905
  %3922 = icmp eq i64 %3904, %3506
  br i1 %3922, label %3932, label %3923

3923:                                             ; preds = %3901, %3921
  %3924 = phi i64 [ 0, %3901 ], [ %3904, %3921 ]
  br label %3925

3925:                                             ; preds = %3923, %3925
  %3926 = phi i64 [ %3930, %3925 ], [ %3924, %3923 ]
  %3927 = getelementptr inbounds float, ptr %18, i64 %3926
  %3928 = load float, ptr %3927, align 4, !tbaa !65
  %3929 = fmul fast float %3928, 2.500000e-01
  store float %3929, ptr %3927, align 4, !tbaa !65
  %3930 = add nuw nsw i64 %3926, 1
  %3931 = icmp eq i64 %3930, %3506
  br i1 %3931, label %3932, label %3925, !llvm.loop !822

3932:                                             ; preds = %3925, %3921
  %3933 = icmp ult i32 %3502, 32
  br i1 %3933, label %3969, label %3934

3934:                                             ; preds = %3932
  %3935 = shl nuw nsw i64 %3506, 2
  %3936 = getelementptr i8, ptr %21, i64 %3935
  %3937 = getelementptr i8, ptr %18, i64 %3935
  %3938 = icmp ult ptr %21, %3937
  %3939 = icmp ult ptr %18, %3936
  %3940 = and i1 %3938, %3939
  br i1 %3940, label %3969, label %3941

3941:                                             ; preds = %3934
  %3942 = and i64 %3506, 4294967264
  br label %3943

3943:                                             ; preds = %3943, %3941
  %3944 = phi i64 [ 0, %3941 ], [ %3965, %3943 ]
  %3945 = getelementptr inbounds float, ptr %18, i64 %3944
  %3946 = load <8 x float>, ptr %3945, align 4, !tbaa !65, !alias.scope !823
  %3947 = getelementptr inbounds float, ptr %3945, i64 8
  %3948 = load <8 x float>, ptr %3947, align 4, !tbaa !65, !alias.scope !823
  %3949 = getelementptr inbounds float, ptr %3945, i64 16
  %3950 = load <8 x float>, ptr %3949, align 4, !tbaa !65, !alias.scope !823
  %3951 = getelementptr inbounds float, ptr %3945, i64 24
  %3952 = load <8 x float>, ptr %3951, align 4, !tbaa !65, !alias.scope !823
  %3953 = getelementptr inbounds float, ptr %21, i64 %3944
  %3954 = load <8 x float>, ptr %3953, align 4, !tbaa !65, !alias.scope !826, !noalias !823
  %3955 = getelementptr inbounds float, ptr %3953, i64 8
  %3956 = load <8 x float>, ptr %3955, align 4, !tbaa !65, !alias.scope !826, !noalias !823
  %3957 = getelementptr inbounds float, ptr %3953, i64 16
  %3958 = load <8 x float>, ptr %3957, align 4, !tbaa !65, !alias.scope !826, !noalias !823
  %3959 = getelementptr inbounds float, ptr %3953, i64 24
  %3960 = load <8 x float>, ptr %3959, align 4, !tbaa !65, !alias.scope !826, !noalias !823
  %3961 = fadd fast <8 x float> %3954, %3946
  %3962 = fadd fast <8 x float> %3956, %3948
  %3963 = fadd fast <8 x float> %3958, %3950
  %3964 = fadd fast <8 x float> %3960, %3952
  store <8 x float> %3961, ptr %3953, align 4, !tbaa !65, !alias.scope !826, !noalias !823
  store <8 x float> %3962, ptr %3955, align 4, !tbaa !65, !alias.scope !826, !noalias !823
  store <8 x float> %3963, ptr %3957, align 4, !tbaa !65, !alias.scope !826, !noalias !823
  store <8 x float> %3964, ptr %3959, align 4, !tbaa !65, !alias.scope !826, !noalias !823
  %3965 = add nuw i64 %3944, 32
  %3966 = icmp eq i64 %3965, %3942
  br i1 %3966, label %3967, label %3943, !llvm.loop !828

3967:                                             ; preds = %3943
  %3968 = icmp eq i64 %3942, %3506
  br i1 %3968, label %4016, label %3969

3969:                                             ; preds = %3934, %3932, %3967
  %3970 = phi i64 [ 0, %3934 ], [ 0, %3932 ], [ %3942, %3967 ]
  %3971 = xor i64 %3970, -1
  %3972 = add nsw i64 %3971, %3506
  %3973 = and i64 %3506, 3
  %3974 = icmp eq i64 %3973, 0
  br i1 %3974, label %3986, label %3975

3975:                                             ; preds = %3969, %3975
  %3976 = phi i64 [ %3983, %3975 ], [ %3970, %3969 ]
  %3977 = phi i64 [ %3984, %3975 ], [ 0, %3969 ]
  %3978 = getelementptr inbounds float, ptr %18, i64 %3976
  %3979 = load float, ptr %3978, align 4, !tbaa !65
  %3980 = getelementptr inbounds float, ptr %21, i64 %3976
  %3981 = load float, ptr %3980, align 4, !tbaa !65
  %3982 = fadd fast float %3981, %3979
  store float %3982, ptr %3980, align 4, !tbaa !65
  %3983 = add nuw nsw i64 %3976, 1
  %3984 = add i64 %3977, 1
  %3985 = icmp eq i64 %3984, %3973
  br i1 %3985, label %3986, label %3975, !llvm.loop !829

3986:                                             ; preds = %3975, %3969
  %3987 = phi i64 [ %3970, %3969 ], [ %3983, %3975 ]
  %3988 = icmp ult i64 %3972, 3
  br i1 %3988, label %4016, label %3989

3989:                                             ; preds = %3986, %3989
  %3990 = phi i64 [ %4014, %3989 ], [ %3987, %3986 ]
  %3991 = getelementptr inbounds float, ptr %18, i64 %3990
  %3992 = load float, ptr %3991, align 4, !tbaa !65
  %3993 = getelementptr inbounds float, ptr %21, i64 %3990
  %3994 = load float, ptr %3993, align 4, !tbaa !65
  %3995 = fadd fast float %3994, %3992
  store float %3995, ptr %3993, align 4, !tbaa !65
  %3996 = add nuw nsw i64 %3990, 1
  %3997 = getelementptr inbounds float, ptr %18, i64 %3996
  %3998 = load float, ptr %3997, align 4, !tbaa !65
  %3999 = getelementptr inbounds float, ptr %21, i64 %3996
  %4000 = load float, ptr %3999, align 4, !tbaa !65
  %4001 = fadd fast float %4000, %3998
  store float %4001, ptr %3999, align 4, !tbaa !65
  %4002 = add nuw nsw i64 %3990, 2
  %4003 = getelementptr inbounds float, ptr %18, i64 %4002
  %4004 = load float, ptr %4003, align 4, !tbaa !65
  %4005 = getelementptr inbounds float, ptr %21, i64 %4002
  %4006 = load float, ptr %4005, align 4, !tbaa !65
  %4007 = fadd fast float %4006, %4004
  store float %4007, ptr %4005, align 4, !tbaa !65
  %4008 = add nuw nsw i64 %3990, 3
  %4009 = getelementptr inbounds float, ptr %18, i64 %4008
  %4010 = load float, ptr %4009, align 4, !tbaa !65
  %4011 = getelementptr inbounds float, ptr %21, i64 %4008
  %4012 = load float, ptr %4011, align 4, !tbaa !65
  %4013 = fadd fast float %4012, %4010
  store float %4013, ptr %4011, align 4, !tbaa !65
  %4014 = add nuw nsw i64 %3990, 4
  %4015 = icmp eq i64 %4014, %3506
  br i1 %4015, label %4016, label %3989, !llvm.loop !830

4016:                                             ; preds = %3986, %3989, %3967
  %4017 = icmp ult i32 %3502, 32
  br i1 %4017, label %4054, label %4018

4018:                                             ; preds = %4016
  %4019 = shl nuw nsw i64 %3506, 2
  %4020 = getelementptr i8, ptr %21, i64 %4019
  %4021 = getelementptr i8, ptr %2125, i64 %1000
  %4022 = getelementptr i8, ptr %4021, i64 %4019
  %4023 = icmp ult ptr %21, %4022
  %4024 = icmp ult ptr %2129, %4020
  %4025 = and i1 %4023, %4024
  br i1 %4025, label %4054, label %4026

4026:                                             ; preds = %4018
  %4027 = and i64 %3506, 4294967264
  br label %4028

4028:                                             ; preds = %4028, %4026
  %4029 = phi i64 [ 0, %4026 ], [ %4050, %4028 ]
  %4030 = getelementptr inbounds float, ptr %2129, i64 %4029
  %4031 = load <8 x float>, ptr %4030, align 4, !tbaa !65, !alias.scope !831
  %4032 = getelementptr inbounds float, ptr %4030, i64 8
  %4033 = load <8 x float>, ptr %4032, align 4, !tbaa !65, !alias.scope !831
  %4034 = getelementptr inbounds float, ptr %4030, i64 16
  %4035 = load <8 x float>, ptr %4034, align 4, !tbaa !65, !alias.scope !831
  %4036 = getelementptr inbounds float, ptr %4030, i64 24
  %4037 = load <8 x float>, ptr %4036, align 4, !tbaa !65, !alias.scope !831
  %4038 = getelementptr inbounds float, ptr %21, i64 %4029
  %4039 = load <8 x float>, ptr %4038, align 4, !tbaa !65, !alias.scope !834, !noalias !831
  %4040 = getelementptr inbounds float, ptr %4038, i64 8
  %4041 = load <8 x float>, ptr %4040, align 4, !tbaa !65, !alias.scope !834, !noalias !831
  %4042 = getelementptr inbounds float, ptr %4038, i64 16
  %4043 = load <8 x float>, ptr %4042, align 4, !tbaa !65, !alias.scope !834, !noalias !831
  %4044 = getelementptr inbounds float, ptr %4038, i64 24
  %4045 = load <8 x float>, ptr %4044, align 4, !tbaa !65, !alias.scope !834, !noalias !831
  %4046 = fsub fast <8 x float> %4039, %4031
  %4047 = fsub fast <8 x float> %4041, %4033
  %4048 = fsub fast <8 x float> %4043, %4035
  %4049 = fsub fast <8 x float> %4045, %4037
  store <8 x float> %4046, ptr %4038, align 4, !tbaa !65, !alias.scope !834, !noalias !831
  store <8 x float> %4047, ptr %4040, align 4, !tbaa !65, !alias.scope !834, !noalias !831
  store <8 x float> %4048, ptr %4042, align 4, !tbaa !65, !alias.scope !834, !noalias !831
  store <8 x float> %4049, ptr %4044, align 4, !tbaa !65, !alias.scope !834, !noalias !831
  %4050 = add nuw i64 %4029, 32
  %4051 = icmp eq i64 %4050, %4027
  br i1 %4051, label %4052, label %4028, !llvm.loop !836

4052:                                             ; preds = %4028
  %4053 = icmp eq i64 %4027, %3506
  br i1 %4053, label %4101, label %4054

4054:                                             ; preds = %4018, %4016, %4052
  %4055 = phi i64 [ 0, %4018 ], [ 0, %4016 ], [ %4027, %4052 ]
  %4056 = xor i64 %4055, -1
  %4057 = add nsw i64 %4056, %3506
  %4058 = and i64 %3506, 3
  %4059 = icmp eq i64 %4058, 0
  br i1 %4059, label %4071, label %4060

4060:                                             ; preds = %4054, %4060
  %4061 = phi i64 [ %4068, %4060 ], [ %4055, %4054 ]
  %4062 = phi i64 [ %4069, %4060 ], [ 0, %4054 ]
  %4063 = getelementptr inbounds float, ptr %2129, i64 %4061
  %4064 = load float, ptr %4063, align 4, !tbaa !65
  %4065 = getelementptr inbounds float, ptr %21, i64 %4061
  %4066 = load float, ptr %4065, align 4, !tbaa !65
  %4067 = fsub fast float %4066, %4064
  store float %4067, ptr %4065, align 4, !tbaa !65
  %4068 = add nuw nsw i64 %4061, 1
  %4069 = add i64 %4062, 1
  %4070 = icmp eq i64 %4069, %4058
  br i1 %4070, label %4071, label %4060, !llvm.loop !837

4071:                                             ; preds = %4060, %4054
  %4072 = phi i64 [ %4055, %4054 ], [ %4068, %4060 ]
  %4073 = icmp ult i64 %4057, 3
  br i1 %4073, label %4101, label %4074

4074:                                             ; preds = %4071, %4074
  %4075 = phi i64 [ %4099, %4074 ], [ %4072, %4071 ]
  %4076 = getelementptr inbounds float, ptr %2129, i64 %4075
  %4077 = load float, ptr %4076, align 4, !tbaa !65
  %4078 = getelementptr inbounds float, ptr %21, i64 %4075
  %4079 = load float, ptr %4078, align 4, !tbaa !65
  %4080 = fsub fast float %4079, %4077
  store float %4080, ptr %4078, align 4, !tbaa !65
  %4081 = add nuw nsw i64 %4075, 1
  %4082 = getelementptr inbounds float, ptr %2129, i64 %4081
  %4083 = load float, ptr %4082, align 4, !tbaa !65
  %4084 = getelementptr inbounds float, ptr %21, i64 %4081
  %4085 = load float, ptr %4084, align 4, !tbaa !65
  %4086 = fsub fast float %4085, %4083
  store float %4086, ptr %4084, align 4, !tbaa !65
  %4087 = add nuw nsw i64 %4075, 2
  %4088 = getelementptr inbounds float, ptr %2129, i64 %4087
  %4089 = load float, ptr %4088, align 4, !tbaa !65
  %4090 = getelementptr inbounds float, ptr %21, i64 %4087
  %4091 = load float, ptr %4090, align 4, !tbaa !65
  %4092 = fsub fast float %4091, %4089
  store float %4092, ptr %4090, align 4, !tbaa !65
  %4093 = add nuw nsw i64 %4075, 3
  %4094 = getelementptr inbounds float, ptr %2129, i64 %4093
  %4095 = load float, ptr %4094, align 4, !tbaa !65
  %4096 = getelementptr inbounds float, ptr %21, i64 %4093
  %4097 = load float, ptr %4096, align 4, !tbaa !65
  %4098 = fsub fast float %4097, %4095
  store float %4098, ptr %4096, align 4, !tbaa !65
  %4099 = add nuw nsw i64 %4075, 4
  %4100 = icmp eq i64 %4099, %3506
  br i1 %4100, label %4101, label %4074, !llvm.loop !838

4101:                                             ; preds = %4071, %4074, %4052
  %4102 = icmp ult i32 %3502, 32
  br i1 %4102, label %4131, label %4103

4103:                                             ; preds = %4101
  %4104 = and i64 %3506, 4294967264
  %4105 = insertelement <8 x float> poison, float %3271, i64 0
  %4106 = shufflevector <8 x float> %4105, <8 x float> poison, <8 x i32> zeroinitializer
  %4107 = insertelement <8 x float> poison, float %3271, i64 0
  %4108 = shufflevector <8 x float> %4107, <8 x float> poison, <8 x i32> zeroinitializer
  %4109 = insertelement <8 x float> poison, float %3271, i64 0
  %4110 = shufflevector <8 x float> %4109, <8 x float> poison, <8 x i32> zeroinitializer
  %4111 = insertelement <8 x float> poison, float %3271, i64 0
  %4112 = shufflevector <8 x float> %4111, <8 x float> poison, <8 x i32> zeroinitializer
  br label %4113

4113:                                             ; preds = %4113, %4103
  %4114 = phi i64 [ 0, %4103 ], [ %4127, %4113 ]
  %4115 = getelementptr inbounds float, ptr %21, i64 %4114
  %4116 = load <8 x float>, ptr %4115, align 4, !tbaa !65
  %4117 = getelementptr inbounds float, ptr %4115, i64 8
  %4118 = load <8 x float>, ptr %4117, align 4, !tbaa !65
  %4119 = getelementptr inbounds float, ptr %4115, i64 16
  %4120 = load <8 x float>, ptr %4119, align 4, !tbaa !65
  %4121 = getelementptr inbounds float, ptr %4115, i64 24
  %4122 = load <8 x float>, ptr %4121, align 4, !tbaa !65
  %4123 = fmul fast <8 x float> %4116, %4106
  %4124 = fmul fast <8 x float> %4118, %4108
  %4125 = fmul fast <8 x float> %4120, %4110
  %4126 = fmul fast <8 x float> %4122, %4112
  store <8 x float> %4123, ptr %4115, align 4, !tbaa !65
  store <8 x float> %4124, ptr %4117, align 4, !tbaa !65
  store <8 x float> %4125, ptr %4119, align 4, !tbaa !65
  store <8 x float> %4126, ptr %4121, align 4, !tbaa !65
  %4127 = add nuw i64 %4114, 32
  %4128 = icmp eq i64 %4127, %4104
  br i1 %4128, label %4129, label %4113, !llvm.loop !839

4129:                                             ; preds = %4113
  %4130 = icmp eq i64 %4104, %3506
  br i1 %4130, label %4140, label %4131

4131:                                             ; preds = %4101, %4129
  %4132 = phi i64 [ 0, %4101 ], [ %4104, %4129 ]
  br label %4133

4133:                                             ; preds = %4131, %4133
  %4134 = phi i64 [ %4138, %4133 ], [ %4132, %4131 ]
  %4135 = getelementptr inbounds float, ptr %21, i64 %4134
  %4136 = load float, ptr %4135, align 4, !tbaa !65
  %4137 = fmul fast float %4136, %3271
  store float %4137, ptr %4135, align 4, !tbaa !65
  %4138 = add nuw nsw i64 %4134, 1
  %4139 = icmp eq i64 %4138, %3506
  br i1 %4139, label %4140, label %4133, !llvm.loop !840

4140:                                             ; preds = %4133, %4129
  %4141 = icmp ult i32 %3502, 32
  br i1 %4141, label %4178, label %4142

4142:                                             ; preds = %4140
  %4143 = getelementptr i8, ptr %2125, i64 %999
  %4144 = shl nuw nsw i64 %3506, 2
  %4145 = getelementptr i8, ptr %4143, i64 %4144
  %4146 = getelementptr i8, ptr %21, i64 %4144
  %4147 = icmp ult ptr %2129, %4146
  %4148 = icmp ult ptr %21, %4145
  %4149 = and i1 %4147, %4148
  br i1 %4149, label %4178, label %4150

4150:                                             ; preds = %4142
  %4151 = and i64 %3506, 4294967264
  br label %4152

4152:                                             ; preds = %4152, %4150
  %4153 = phi i64 [ 0, %4150 ], [ %4174, %4152 ]
  %4154 = getelementptr inbounds float, ptr %21, i64 %4153
  %4155 = load <8 x float>, ptr %4154, align 4, !tbaa !65, !alias.scope !841
  %4156 = getelementptr inbounds float, ptr %4154, i64 8
  %4157 = load <8 x float>, ptr %4156, align 4, !tbaa !65, !alias.scope !841
  %4158 = getelementptr inbounds float, ptr %4154, i64 16
  %4159 = load <8 x float>, ptr %4158, align 4, !tbaa !65, !alias.scope !841
  %4160 = getelementptr inbounds float, ptr %4154, i64 24
  %4161 = load <8 x float>, ptr %4160, align 4, !tbaa !65, !alias.scope !841
  %4162 = getelementptr inbounds float, ptr %2129, i64 %4153
  %4163 = load <8 x float>, ptr %4162, align 4, !tbaa !65, !alias.scope !844, !noalias !841
  %4164 = getelementptr inbounds float, ptr %4162, i64 8
  %4165 = load <8 x float>, ptr %4164, align 4, !tbaa !65, !alias.scope !844, !noalias !841
  %4166 = getelementptr inbounds float, ptr %4162, i64 16
  %4167 = load <8 x float>, ptr %4166, align 4, !tbaa !65, !alias.scope !844, !noalias !841
  %4168 = getelementptr inbounds float, ptr %4162, i64 24
  %4169 = load <8 x float>, ptr %4168, align 4, !tbaa !65, !alias.scope !844, !noalias !841
  %4170 = fadd fast <8 x float> %4163, %4155
  %4171 = fadd fast <8 x float> %4165, %4157
  %4172 = fadd fast <8 x float> %4167, %4159
  %4173 = fadd fast <8 x float> %4169, %4161
  store <8 x float> %4170, ptr %4162, align 4, !tbaa !65, !alias.scope !844, !noalias !841
  store <8 x float> %4171, ptr %4164, align 4, !tbaa !65, !alias.scope !844, !noalias !841
  store <8 x float> %4172, ptr %4166, align 4, !tbaa !65, !alias.scope !844, !noalias !841
  store <8 x float> %4173, ptr %4168, align 4, !tbaa !65, !alias.scope !844, !noalias !841
  %4174 = add nuw i64 %4153, 32
  %4175 = icmp eq i64 %4174, %4151
  br i1 %4175, label %4176, label %4152, !llvm.loop !846

4176:                                             ; preds = %4152
  %4177 = icmp eq i64 %4151, %3506
  br i1 %4177, label %4225, label %4178

4178:                                             ; preds = %4142, %4140, %4176
  %4179 = phi i64 [ 0, %4142 ], [ 0, %4140 ], [ %4151, %4176 ]
  %4180 = xor i64 %4179, -1
  %4181 = add nsw i64 %4180, %3506
  %4182 = and i64 %3506, 3
  %4183 = icmp eq i64 %4182, 0
  br i1 %4183, label %4195, label %4184

4184:                                             ; preds = %4178, %4184
  %4185 = phi i64 [ %4192, %4184 ], [ %4179, %4178 ]
  %4186 = phi i64 [ %4193, %4184 ], [ 0, %4178 ]
  %4187 = getelementptr inbounds float, ptr %21, i64 %4185
  %4188 = load float, ptr %4187, align 4, !tbaa !65
  %4189 = getelementptr inbounds float, ptr %2129, i64 %4185
  %4190 = load float, ptr %4189, align 4, !tbaa !65
  %4191 = fadd fast float %4190, %4188
  store float %4191, ptr %4189, align 4, !tbaa !65
  %4192 = add nuw nsw i64 %4185, 1
  %4193 = add i64 %4186, 1
  %4194 = icmp eq i64 %4193, %4182
  br i1 %4194, label %4195, label %4184, !llvm.loop !847

4195:                                             ; preds = %4184, %4178
  %4196 = phi i64 [ %4179, %4178 ], [ %4192, %4184 ]
  %4197 = icmp ult i64 %4181, 3
  br i1 %4197, label %4225, label %4198

4198:                                             ; preds = %4195, %4198
  %4199 = phi i64 [ %4223, %4198 ], [ %4196, %4195 ]
  %4200 = getelementptr inbounds float, ptr %21, i64 %4199
  %4201 = load float, ptr %4200, align 4, !tbaa !65
  %4202 = getelementptr inbounds float, ptr %2129, i64 %4199
  %4203 = load float, ptr %4202, align 4, !tbaa !65
  %4204 = fadd fast float %4203, %4201
  store float %4204, ptr %4202, align 4, !tbaa !65
  %4205 = add nuw nsw i64 %4199, 1
  %4206 = getelementptr inbounds float, ptr %21, i64 %4205
  %4207 = load float, ptr %4206, align 4, !tbaa !65
  %4208 = getelementptr inbounds float, ptr %2129, i64 %4205
  %4209 = load float, ptr %4208, align 4, !tbaa !65
  %4210 = fadd fast float %4209, %4207
  store float %4210, ptr %4208, align 4, !tbaa !65
  %4211 = add nuw nsw i64 %4199, 2
  %4212 = getelementptr inbounds float, ptr %21, i64 %4211
  %4213 = load float, ptr %4212, align 4, !tbaa !65
  %4214 = getelementptr inbounds float, ptr %2129, i64 %4211
  %4215 = load float, ptr %4214, align 4, !tbaa !65
  %4216 = fadd fast float %4215, %4213
  store float %4216, ptr %4214, align 4, !tbaa !65
  %4217 = add nuw nsw i64 %4199, 3
  %4218 = getelementptr inbounds float, ptr %21, i64 %4217
  %4219 = load float, ptr %4218, align 4, !tbaa !65
  %4220 = getelementptr inbounds float, ptr %2129, i64 %4217
  %4221 = load float, ptr %4220, align 4, !tbaa !65
  %4222 = fadd fast float %4221, %4219
  store float %4222, ptr %4220, align 4, !tbaa !65
  %4223 = add nuw nsw i64 %4199, 4
  %4224 = icmp eq i64 %4223, %3506
  br i1 %4224, label %4225, label %4198, !llvm.loop !848

4225:                                             ; preds = %4195, %4198, %4176, %3501, %3259, %3265
  %4226 = add nuw nsw i64 %2123, 1
  %4227 = icmp eq i64 %4226, %998
  br i1 %4227, label %2079, label %2122, !llvm.loop !849

4228:                                             ; preds = %2080, %6185
  %4229 = phi i64 [ 0, %2080 ], [ %6186, %6185 ]
  %4230 = getelementptr inbounds ptr, ptr %2, i64 %4229
  %4231 = load ptr, ptr %4230, align 8, !tbaa !14
  %4232 = ptrtoint ptr %4231 to i64
  %4233 = getelementptr inbounds %struct.CCGEdge, ptr %4231, i64 0, i32 4
  %4234 = load float, ptr %4233, align 4, !tbaa !116
  br i1 %2081, label %4240, label %4235

4235:                                             ; preds = %4228
  %4236 = fcmp fast oeq float %4234, 0.000000e+00
  %4237 = fsub fast float %4234, %2082
  %4238 = fcmp fast olt float %4237, 0.000000e+00
  %4239 = select i1 %4236, i1 true, i1 %4238
  br i1 %4239, label %4246, label %4240

4240:                                             ; preds = %4235, %4228
  %4241 = phi float [ %4234, %4228 ], [ %4237, %4235 ]
  %4242 = fcmp fast une float %4241, 0.000000e+00
  br i1 %4242, label %4243, label %4246

4243:                                             ; preds = %4240
  %4244 = fcmp fast ogt float %4241, 1.000000e+00
  br i1 %4244, label %4245, label %4246

4245:                                             ; preds = %4243
  br label %4246

4246:                                             ; preds = %4235, %4240, %4243, %4245
  %4247 = phi i1 [ false, %4245 ], [ false, %4243 ], [ true, %4240 ], [ true, %4235 ]
  %4248 = phi float [ 1.000000e+00, %4245 ], [ %4241, %4243 ], [ 0.000000e+00, %4240 ], [ 0.000000e+00, %4235 ]
  %4249 = getelementptr i8, ptr %4231, i64 16
  %4250 = load i16, ptr %4249, align 8, !tbaa !81
  %4251 = icmp sgt i16 %4250, 1
  br i1 %4251, label %4688, label %4252

4252:                                             ; preds = %4246
  br i1 %2083, label %4253, label %6185

4253:                                             ; preds = %4252
  %4254 = getelementptr inbounds %struct.CCGEdge, ptr %4231, i64 1
  %4255 = load i32, ptr %2088, align 4, !tbaa !74
  %4256 = icmp sgt i32 %4255, 0
  %4257 = zext i32 %4255 to i64
  br i1 %4256, label %4258, label %6185

4258:                                             ; preds = %4253
  %4259 = getelementptr i8, ptr %4231, i64 48
  %4260 = getelementptr i8, ptr %4231, i64 48
  %4261 = shl nuw nsw i64 %4257, 2
  %4262 = getelementptr i8, ptr %4260, i64 %4261
  %4263 = getelementptr i8, ptr %21, i64 %4261
  %4264 = add i64 %4232, 48
  %4265 = add i64 %2117, %4232
  %4266 = shl nuw nsw i64 %4257, 2
  %4267 = getelementptr i8, ptr %21, i64 %4266
  %4268 = add i64 %2121, %4266
  %4269 = add i64 %4232, 48
  %4270 = icmp ult i32 %4255, 32
  %4271 = and i64 %4257, 4294967264
  %4272 = icmp eq i64 %4271, %4257
  %4273 = and i64 %4257, 3
  %4274 = icmp eq i64 %4273, 0
  %4275 = icmp ult i32 %4255, 32
  %4276 = and i64 %4257, 4294967264
  %4277 = icmp eq i64 %4276, %4257
  %4278 = and i64 %4257, 3
  %4279 = icmp eq i64 %4278, 0
  %4280 = icmp ult i32 %4255, 32
  %4281 = and i64 %4257, 4294967264
  %4282 = icmp eq i64 %4281, %4257
  %4283 = icmp ult i32 %4255, 32
  %4284 = and i64 %4257, 4294967264
  %4285 = icmp eq i64 %4284, %4257
  %4286 = and i64 %4257, 3
  %4287 = icmp eq i64 %4286, 0
  %4288 = icmp ult i32 %4255, 32
  %4289 = and i64 %4257, 4294967264
  %4290 = icmp eq i64 %4289, %4257
  %4291 = icmp ult i32 %4255, 32
  %4292 = and i64 %4257, 4294967264
  %4293 = icmp eq i64 %4292, %4257
  %4294 = icmp ult i32 %4255, 32
  %4295 = and i64 %4257, 4294967264
  %4296 = icmp eq i64 %4295, %4257
  %4297 = and i64 %4257, 3
  %4298 = icmp eq i64 %4297, 0
  br label %4299

4299:                                             ; preds = %4258, %4684
  %4300 = phi i64 [ 0, %4258 ], [ %4687, %4684 ]
  %4301 = phi i32 [ 0, %4258 ], [ %4686, %4684 ]
  %4302 = phi i64 [ 1, %4258 ], [ %4393, %4684 ]
  %4303 = mul i64 %4300, %2107
  %4304 = add i64 %2120, %4303
  %4305 = getelementptr i8, ptr %4231, i64 %4304
  %4306 = add i64 %4268, %4303
  %4307 = getelementptr i8, ptr %4231, i64 %4306
  %4308 = mul i32 %2114, %4301
  %4309 = add i32 %2112, %4308
  %4310 = sext i32 %4309 to i64
  %4311 = add i64 %4264, %4310
  %4312 = mul i64 %4300, %2107
  %4313 = add i64 %4265, %4312
  %4314 = mul i32 %2113, %4301
  %4315 = add i32 %2112, %4314
  %4316 = sext i32 %4315 to i64
  %4317 = getelementptr i8, ptr %4259, i64 %4316
  %4318 = getelementptr i8, ptr %4262, i64 %4316
  %4319 = add nsw i64 %4302, %2106
  %4320 = mul nsw i64 %4319, %2107
  %4321 = trunc i64 %4302 to i32
  %4322 = shl i32 %4321, 1
  %4323 = add nsw i32 %2086, %4322
  %4324 = mul nsw i32 %4323, %16
  %4325 = sext i32 %4324 to i64
  %4326 = trunc i64 %4302 to i32
  %4327 = add i32 %2087, %4326
  %4328 = mul nsw i32 %4327, %16
  %4329 = sext i32 %4328 to i64
  %4330 = getelementptr inbounds i8, ptr %4254, i64 %4329
  br i1 %4270, label %4356, label %4331

4331:                                             ; preds = %4299
  %4332 = trunc i64 %4300 to i32
  %4333 = add i32 %2084, %4332
  %4334 = mul i32 %16, %4333
  %4335 = sext i32 %4334 to i64
  %4336 = add i64 %4269, %4335
  %4337 = sub i64 %22, %4336
  %4338 = icmp ult i64 %4337, 128
  br i1 %4338, label %4356, label %4339

4339:                                             ; preds = %4331, %4339
  %4340 = phi i64 [ %4353, %4339 ], [ 0, %4331 ]
  %4341 = getelementptr inbounds float, ptr %4330, i64 %4340
  %4342 = load <8 x float>, ptr %4341, align 4, !tbaa !65
  %4343 = getelementptr inbounds float, ptr %4341, i64 8
  %4344 = load <8 x float>, ptr %4343, align 4, !tbaa !65
  %4345 = getelementptr inbounds float, ptr %4341, i64 16
  %4346 = load <8 x float>, ptr %4345, align 4, !tbaa !65
  %4347 = getelementptr inbounds float, ptr %4341, i64 24
  %4348 = load <8 x float>, ptr %4347, align 4, !tbaa !65
  %4349 = getelementptr inbounds float, ptr %21, i64 %4340
  store <8 x float> %4342, ptr %4349, align 4, !tbaa !65
  %4350 = getelementptr inbounds float, ptr %4349, i64 8
  store <8 x float> %4344, ptr %4350, align 4, !tbaa !65
  %4351 = getelementptr inbounds float, ptr %4349, i64 16
  store <8 x float> %4346, ptr %4351, align 4, !tbaa !65
  %4352 = getelementptr inbounds float, ptr %4349, i64 24
  store <8 x float> %4348, ptr %4352, align 4, !tbaa !65
  %4353 = add nuw i64 %4340, 32
  %4354 = icmp eq i64 %4353, %4271
  br i1 %4354, label %4355, label %4339, !llvm.loop !850

4355:                                             ; preds = %4339
  br i1 %4272, label %4391, label %4356

4356:                                             ; preds = %4331, %4299, %4355
  %4357 = phi i64 [ 0, %4331 ], [ 0, %4299 ], [ %4271, %4355 ]
  %4358 = xor i64 %4357, -1
  %4359 = add nsw i64 %4358, %4257
  br i1 %4274, label %4369, label %4360

4360:                                             ; preds = %4356, %4360
  %4361 = phi i64 [ %4366, %4360 ], [ %4357, %4356 ]
  %4362 = phi i64 [ %4367, %4360 ], [ 0, %4356 ]
  %4363 = getelementptr inbounds float, ptr %4330, i64 %4361
  %4364 = load float, ptr %4363, align 4, !tbaa !65
  %4365 = getelementptr inbounds float, ptr %21, i64 %4361
  store float %4364, ptr %4365, align 4, !tbaa !65
  %4366 = add nuw nsw i64 %4361, 1
  %4367 = add i64 %4362, 1
  %4368 = icmp eq i64 %4367, %4273
  br i1 %4368, label %4369, label %4360, !llvm.loop !851

4369:                                             ; preds = %4360, %4356
  %4370 = phi i64 [ %4357, %4356 ], [ %4366, %4360 ]
  %4371 = icmp ult i64 %4359, 3
  br i1 %4371, label %4391, label %4372

4372:                                             ; preds = %4369, %4372
  %4373 = phi i64 [ %4389, %4372 ], [ %4370, %4369 ]
  %4374 = getelementptr inbounds float, ptr %4330, i64 %4373
  %4375 = load float, ptr %4374, align 4, !tbaa !65
  %4376 = getelementptr inbounds float, ptr %21, i64 %4373
  store float %4375, ptr %4376, align 4, !tbaa !65
  %4377 = add nuw nsw i64 %4373, 1
  %4378 = getelementptr inbounds float, ptr %4330, i64 %4377
  %4379 = load float, ptr %4378, align 4, !tbaa !65
  %4380 = getelementptr inbounds float, ptr %21, i64 %4377
  store float %4379, ptr %4380, align 4, !tbaa !65
  %4381 = add nuw nsw i64 %4373, 2
  %4382 = getelementptr inbounds float, ptr %4330, i64 %4381
  %4383 = load float, ptr %4382, align 4, !tbaa !65
  %4384 = getelementptr inbounds float, ptr %21, i64 %4381
  store float %4383, ptr %4384, align 4, !tbaa !65
  %4385 = add nuw nsw i64 %4373, 3
  %4386 = getelementptr inbounds float, ptr %4330, i64 %4385
  %4387 = load float, ptr %4386, align 4, !tbaa !65
  %4388 = getelementptr inbounds float, ptr %21, i64 %4385
  store float %4387, ptr %4388, align 4, !tbaa !65
  %4389 = add nuw nsw i64 %4373, 4
  %4390 = icmp eq i64 %4389, %4257
  br i1 %4390, label %4391, label %4372, !llvm.loop !852

4391:                                             ; preds = %4369, %4372, %4355
  %4392 = getelementptr inbounds i8, ptr %4254, i64 %4320
  %4393 = add nuw nsw i64 %4302, 1
  %4394 = add nsw i64 %4393, %2106
  %4395 = mul nsw i64 %4394, %2107
  %4396 = getelementptr inbounds i8, ptr %4254, i64 %4395
  br i1 %4275, label %4426, label %4397

4397:                                             ; preds = %4391
  %4398 = icmp ult ptr %21, %4307
  %4399 = icmp ult ptr %4305, %4267
  %4400 = and i1 %4398, %4399
  br i1 %4400, label %4426, label %4401

4401:                                             ; preds = %4397, %4401
  %4402 = phi i64 [ %4423, %4401 ], [ 0, %4397 ]
  %4403 = getelementptr inbounds float, ptr %4396, i64 %4402
  %4404 = load <8 x float>, ptr %4403, align 4, !tbaa !65, !alias.scope !853
  %4405 = getelementptr inbounds float, ptr %4403, i64 8
  %4406 = load <8 x float>, ptr %4405, align 4, !tbaa !65, !alias.scope !853
  %4407 = getelementptr inbounds float, ptr %4403, i64 16
  %4408 = load <8 x float>, ptr %4407, align 4, !tbaa !65, !alias.scope !853
  %4409 = getelementptr inbounds float, ptr %4403, i64 24
  %4410 = load <8 x float>, ptr %4409, align 4, !tbaa !65, !alias.scope !853
  %4411 = getelementptr inbounds float, ptr %21, i64 %4402
  %4412 = load <8 x float>, ptr %4411, align 4, !tbaa !65, !alias.scope !856, !noalias !853
  %4413 = getelementptr inbounds float, ptr %4411, i64 8
  %4414 = load <8 x float>, ptr %4413, align 4, !tbaa !65, !alias.scope !856, !noalias !853
  %4415 = getelementptr inbounds float, ptr %4411, i64 16
  %4416 = load <8 x float>, ptr %4415, align 4, !tbaa !65, !alias.scope !856, !noalias !853
  %4417 = getelementptr inbounds float, ptr %4411, i64 24
  %4418 = load <8 x float>, ptr %4417, align 4, !tbaa !65, !alias.scope !856, !noalias !853
  %4419 = fadd fast <8 x float> %4412, %4404
  %4420 = fadd fast <8 x float> %4414, %4406
  %4421 = fadd fast <8 x float> %4416, %4408
  %4422 = fadd fast <8 x float> %4418, %4410
  store <8 x float> %4419, ptr %4411, align 4, !tbaa !65, !alias.scope !856, !noalias !853
  store <8 x float> %4420, ptr %4413, align 4, !tbaa !65, !alias.scope !856, !noalias !853
  store <8 x float> %4421, ptr %4415, align 4, !tbaa !65, !alias.scope !856, !noalias !853
  store <8 x float> %4422, ptr %4417, align 4, !tbaa !65, !alias.scope !856, !noalias !853
  %4423 = add nuw i64 %4402, 32
  %4424 = icmp eq i64 %4423, %4276
  br i1 %4424, label %4425, label %4401, !llvm.loop !858

4425:                                             ; preds = %4401
  br i1 %4277, label %4471, label %4426

4426:                                             ; preds = %4397, %4391, %4425
  %4427 = phi i64 [ 0, %4397 ], [ 0, %4391 ], [ %4276, %4425 ]
  %4428 = xor i64 %4427, -1
  %4429 = add nsw i64 %4428, %4257
  br i1 %4279, label %4441, label %4430

4430:                                             ; preds = %4426, %4430
  %4431 = phi i64 [ %4438, %4430 ], [ %4427, %4426 ]
  %4432 = phi i64 [ %4439, %4430 ], [ 0, %4426 ]
  %4433 = getelementptr inbounds float, ptr %4396, i64 %4431
  %4434 = load float, ptr %4433, align 4, !tbaa !65
  %4435 = getelementptr inbounds float, ptr %21, i64 %4431
  %4436 = load float, ptr %4435, align 4, !tbaa !65
  %4437 = fadd fast float %4436, %4434
  store float %4437, ptr %4435, align 4, !tbaa !65
  %4438 = add nuw nsw i64 %4431, 1
  %4439 = add i64 %4432, 1
  %4440 = icmp eq i64 %4439, %4278
  br i1 %4440, label %4441, label %4430, !llvm.loop !859

4441:                                             ; preds = %4430, %4426
  %4442 = phi i64 [ %4427, %4426 ], [ %4438, %4430 ]
  %4443 = icmp ult i64 %4429, 3
  br i1 %4443, label %4471, label %4444

4444:                                             ; preds = %4441, %4444
  %4445 = phi i64 [ %4469, %4444 ], [ %4442, %4441 ]
  %4446 = getelementptr inbounds float, ptr %4396, i64 %4445
  %4447 = load float, ptr %4446, align 4, !tbaa !65
  %4448 = getelementptr inbounds float, ptr %21, i64 %4445
  %4449 = load float, ptr %4448, align 4, !tbaa !65
  %4450 = fadd fast float %4449, %4447
  store float %4450, ptr %4448, align 4, !tbaa !65
  %4451 = add nuw nsw i64 %4445, 1
  %4452 = getelementptr inbounds float, ptr %4396, i64 %4451
  %4453 = load float, ptr %4452, align 4, !tbaa !65
  %4454 = getelementptr inbounds float, ptr %21, i64 %4451
  %4455 = load float, ptr %4454, align 4, !tbaa !65
  %4456 = fadd fast float %4455, %4453
  store float %4456, ptr %4454, align 4, !tbaa !65
  %4457 = add nuw nsw i64 %4445, 2
  %4458 = getelementptr inbounds float, ptr %4396, i64 %4457
  %4459 = load float, ptr %4458, align 4, !tbaa !65
  %4460 = getelementptr inbounds float, ptr %21, i64 %4457
  %4461 = load float, ptr %4460, align 4, !tbaa !65
  %4462 = fadd fast float %4461, %4459
  store float %4462, ptr %4460, align 4, !tbaa !65
  %4463 = add nuw nsw i64 %4445, 3
  %4464 = getelementptr inbounds float, ptr %4396, i64 %4463
  %4465 = load float, ptr %4464, align 4, !tbaa !65
  %4466 = getelementptr inbounds float, ptr %21, i64 %4463
  %4467 = load float, ptr %4466, align 4, !tbaa !65
  %4468 = fadd fast float %4467, %4465
  store float %4468, ptr %4466, align 4, !tbaa !65
  %4469 = add nuw nsw i64 %4445, 4
  %4470 = icmp eq i64 %4469, %4257
  br i1 %4470, label %4471, label %4444, !llvm.loop !860

4471:                                             ; preds = %4441, %4444, %4425
  br i1 %4280, label %4489, label %4472

4472:                                             ; preds = %4471, %4472
  %4473 = phi i64 [ %4486, %4472 ], [ 0, %4471 ]
  %4474 = getelementptr inbounds float, ptr %21, i64 %4473
  %4475 = load <8 x float>, ptr %4474, align 4, !tbaa !65
  %4476 = getelementptr inbounds float, ptr %4474, i64 8
  %4477 = load <8 x float>, ptr %4476, align 4, !tbaa !65
  %4478 = getelementptr inbounds float, ptr %4474, i64 16
  %4479 = load <8 x float>, ptr %4478, align 4, !tbaa !65
  %4480 = getelementptr inbounds float, ptr %4474, i64 24
  %4481 = load <8 x float>, ptr %4480, align 4, !tbaa !65
  %4482 = fmul fast <8 x float> %4475, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %4483 = fmul fast <8 x float> %4477, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %4484 = fmul fast <8 x float> %4479, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %4485 = fmul fast <8 x float> %4481, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  store <8 x float> %4482, ptr %4474, align 4, !tbaa !65
  store <8 x float> %4483, ptr %4476, align 4, !tbaa !65
  store <8 x float> %4484, ptr %4478, align 4, !tbaa !65
  store <8 x float> %4485, ptr %4480, align 4, !tbaa !65
  %4486 = add nuw i64 %4473, 32
  %4487 = icmp eq i64 %4486, %4281
  br i1 %4487, label %4488, label %4472, !llvm.loop !861

4488:                                             ; preds = %4472
  br i1 %4282, label %4498, label %4489

4489:                                             ; preds = %4471, %4488
  %4490 = phi i64 [ 0, %4471 ], [ %4281, %4488 ]
  br label %4491

4491:                                             ; preds = %4489, %4491
  %4492 = phi i64 [ %4496, %4491 ], [ %4490, %4489 ]
  %4493 = getelementptr inbounds float, ptr %21, i64 %4492
  %4494 = load float, ptr %4493, align 4, !tbaa !65
  %4495 = fmul fast float %4494, 5.000000e-01
  store float %4495, ptr %4493, align 4, !tbaa !65
  %4496 = add nuw nsw i64 %4492, 1
  %4497 = icmp eq i64 %4496, %4257
  br i1 %4497, label %4498, label %4491, !llvm.loop !862

4498:                                             ; preds = %4491, %4488
  %4499 = getelementptr inbounds i8, ptr %4254, i64 %4325
  %4500 = sub i64 %4311, %4313
  %4501 = icmp ult i64 %4500, 128
  %4502 = select i1 %4283, i1 true, i1 %4501
  br i1 %4502, label %4520, label %4503

4503:                                             ; preds = %4498, %4503
  %4504 = phi i64 [ %4517, %4503 ], [ 0, %4498 ]
  %4505 = getelementptr inbounds float, ptr %4392, i64 %4504
  %4506 = load <8 x float>, ptr %4505, align 4, !tbaa !65
  %4507 = getelementptr inbounds float, ptr %4505, i64 8
  %4508 = load <8 x float>, ptr %4507, align 4, !tbaa !65
  %4509 = getelementptr inbounds float, ptr %4505, i64 16
  %4510 = load <8 x float>, ptr %4509, align 4, !tbaa !65
  %4511 = getelementptr inbounds float, ptr %4505, i64 24
  %4512 = load <8 x float>, ptr %4511, align 4, !tbaa !65
  %4513 = getelementptr inbounds float, ptr %4499, i64 %4504
  store <8 x float> %4506, ptr %4513, align 4, !tbaa !65
  %4514 = getelementptr inbounds float, ptr %4513, i64 8
  store <8 x float> %4508, ptr %4514, align 4, !tbaa !65
  %4515 = getelementptr inbounds float, ptr %4513, i64 16
  store <8 x float> %4510, ptr %4515, align 4, !tbaa !65
  %4516 = getelementptr inbounds float, ptr %4513, i64 24
  store <8 x float> %4512, ptr %4516, align 4, !tbaa !65
  %4517 = add nuw i64 %4504, 32
  %4518 = icmp eq i64 %4517, %4284
  br i1 %4518, label %4519, label %4503, !llvm.loop !863

4519:                                             ; preds = %4503
  br i1 %4285, label %4555, label %4520

4520:                                             ; preds = %4498, %4519
  %4521 = phi i64 [ 0, %4498 ], [ %4284, %4519 ]
  %4522 = xor i64 %4521, -1
  %4523 = add nsw i64 %4522, %4257
  br i1 %4287, label %4533, label %4524

4524:                                             ; preds = %4520, %4524
  %4525 = phi i64 [ %4530, %4524 ], [ %4521, %4520 ]
  %4526 = phi i64 [ %4531, %4524 ], [ 0, %4520 ]
  %4527 = getelementptr inbounds float, ptr %4392, i64 %4525
  %4528 = load float, ptr %4527, align 4, !tbaa !65
  %4529 = getelementptr inbounds float, ptr %4499, i64 %4525
  store float %4528, ptr %4529, align 4, !tbaa !65
  %4530 = add nuw nsw i64 %4525, 1
  %4531 = add i64 %4526, 1
  %4532 = icmp eq i64 %4531, %4286
  br i1 %4532, label %4533, label %4524, !llvm.loop !864

4533:                                             ; preds = %4524, %4520
  %4534 = phi i64 [ %4521, %4520 ], [ %4530, %4524 ]
  %4535 = icmp ult i64 %4523, 3
  br i1 %4535, label %4555, label %4536

4536:                                             ; preds = %4533, %4536
  %4537 = phi i64 [ %4553, %4536 ], [ %4534, %4533 ]
  %4538 = getelementptr inbounds float, ptr %4392, i64 %4537
  %4539 = load float, ptr %4538, align 4, !tbaa !65
  %4540 = getelementptr inbounds float, ptr %4499, i64 %4537
  store float %4539, ptr %4540, align 4, !tbaa !65
  %4541 = add nuw nsw i64 %4537, 1
  %4542 = getelementptr inbounds float, ptr %4392, i64 %4541
  %4543 = load float, ptr %4542, align 4, !tbaa !65
  %4544 = getelementptr inbounds float, ptr %4499, i64 %4541
  store float %4543, ptr %4544, align 4, !tbaa !65
  %4545 = add nuw nsw i64 %4537, 2
  %4546 = getelementptr inbounds float, ptr %4392, i64 %4545
  %4547 = load float, ptr %4546, align 4, !tbaa !65
  %4548 = getelementptr inbounds float, ptr %4499, i64 %4545
  store float %4547, ptr %4548, align 4, !tbaa !65
  %4549 = add nuw nsw i64 %4537, 3
  %4550 = getelementptr inbounds float, ptr %4392, i64 %4549
  %4551 = load float, ptr %4550, align 4, !tbaa !65
  %4552 = getelementptr inbounds float, ptr %4499, i64 %4549
  store float %4551, ptr %4552, align 4, !tbaa !65
  %4553 = add nuw nsw i64 %4537, 4
  %4554 = icmp eq i64 %4553, %4257
  br i1 %4554, label %4555, label %4536, !llvm.loop !865

4555:                                             ; preds = %4533, %4536, %4519
  br i1 %4288, label %4573, label %4556

4556:                                             ; preds = %4555, %4556
  %4557 = phi i64 [ %4570, %4556 ], [ 0, %4555 ]
  %4558 = getelementptr inbounds float, ptr %4499, i64 %4557
  %4559 = load <8 x float>, ptr %4558, align 4, !tbaa !65
  %4560 = getelementptr inbounds float, ptr %4558, i64 8
  %4561 = load <8 x float>, ptr %4560, align 4, !tbaa !65
  %4562 = getelementptr inbounds float, ptr %4558, i64 16
  %4563 = load <8 x float>, ptr %4562, align 4, !tbaa !65
  %4564 = getelementptr inbounds float, ptr %4558, i64 24
  %4565 = load <8 x float>, ptr %4564, align 4, !tbaa !65
  %4566 = fmul fast <8 x float> %4559, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  %4567 = fmul fast <8 x float> %4561, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  %4568 = fmul fast <8 x float> %4563, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  %4569 = fmul fast <8 x float> %4565, <float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01, float 7.500000e-01>
  store <8 x float> %4566, ptr %4558, align 4, !tbaa !65
  store <8 x float> %4567, ptr %4560, align 4, !tbaa !65
  store <8 x float> %4568, ptr %4562, align 4, !tbaa !65
  store <8 x float> %4569, ptr %4564, align 4, !tbaa !65
  %4570 = add nuw i64 %4557, 32
  %4571 = icmp eq i64 %4570, %4289
  br i1 %4571, label %4572, label %4556, !llvm.loop !866

4572:                                             ; preds = %4556
  br i1 %4290, label %4582, label %4573

4573:                                             ; preds = %4555, %4572
  %4574 = phi i64 [ 0, %4555 ], [ %4289, %4572 ]
  br label %4575

4575:                                             ; preds = %4573, %4575
  %4576 = phi i64 [ %4580, %4575 ], [ %4574, %4573 ]
  %4577 = getelementptr inbounds float, ptr %4499, i64 %4576
  %4578 = load float, ptr %4577, align 4, !tbaa !65
  %4579 = fmul fast float %4578, 7.500000e-01
  store float %4579, ptr %4577, align 4, !tbaa !65
  %4580 = add nuw nsw i64 %4576, 1
  %4581 = icmp eq i64 %4580, %4257
  br i1 %4581, label %4582, label %4575, !llvm.loop !867

4582:                                             ; preds = %4575, %4572
  br i1 %4291, label %4600, label %4583

4583:                                             ; preds = %4582, %4583
  %4584 = phi i64 [ %4597, %4583 ], [ 0, %4582 ]
  %4585 = getelementptr inbounds float, ptr %21, i64 %4584
  %4586 = load <8 x float>, ptr %4585, align 4, !tbaa !65
  %4587 = getelementptr inbounds float, ptr %4585, i64 8
  %4588 = load <8 x float>, ptr %4587, align 4, !tbaa !65
  %4589 = getelementptr inbounds float, ptr %4585, i64 16
  %4590 = load <8 x float>, ptr %4589, align 4, !tbaa !65
  %4591 = getelementptr inbounds float, ptr %4585, i64 24
  %4592 = load <8 x float>, ptr %4591, align 4, !tbaa !65
  %4593 = fmul fast <8 x float> %4586, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %4594 = fmul fast <8 x float> %4588, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %4595 = fmul fast <8 x float> %4590, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %4596 = fmul fast <8 x float> %4592, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  store <8 x float> %4593, ptr %4585, align 4, !tbaa !65
  store <8 x float> %4594, ptr %4587, align 4, !tbaa !65
  store <8 x float> %4595, ptr %4589, align 4, !tbaa !65
  store <8 x float> %4596, ptr %4591, align 4, !tbaa !65
  %4597 = add nuw i64 %4584, 32
  %4598 = icmp eq i64 %4597, %4292
  br i1 %4598, label %4599, label %4583, !llvm.loop !868

4599:                                             ; preds = %4583
  br i1 %4293, label %4609, label %4600

4600:                                             ; preds = %4582, %4599
  %4601 = phi i64 [ 0, %4582 ], [ %4292, %4599 ]
  br label %4602

4602:                                             ; preds = %4600, %4602
  %4603 = phi i64 [ %4607, %4602 ], [ %4601, %4600 ]
  %4604 = getelementptr inbounds float, ptr %21, i64 %4603
  %4605 = load float, ptr %4604, align 4, !tbaa !65
  %4606 = fmul fast float %4605, 2.500000e-01
  store float %4606, ptr %4604, align 4, !tbaa !65
  %4607 = add nuw nsw i64 %4603, 1
  %4608 = icmp eq i64 %4607, %4257
  br i1 %4608, label %4609, label %4602, !llvm.loop !869

4609:                                             ; preds = %4602, %4599
  br i1 %4294, label %4639, label %4610

4610:                                             ; preds = %4609
  %4611 = icmp ult ptr %4317, %4263
  %4612 = icmp ult ptr %21, %4318
  %4613 = and i1 %4611, %4612
  br i1 %4613, label %4639, label %4614

4614:                                             ; preds = %4610, %4614
  %4615 = phi i64 [ %4636, %4614 ], [ 0, %4610 ]
  %4616 = getelementptr inbounds float, ptr %21, i64 %4615
  %4617 = load <8 x float>, ptr %4616, align 4, !tbaa !65, !alias.scope !870
  %4618 = getelementptr inbounds float, ptr %4616, i64 8
  %4619 = load <8 x float>, ptr %4618, align 4, !tbaa !65, !alias.scope !870
  %4620 = getelementptr inbounds float, ptr %4616, i64 16
  %4621 = load <8 x float>, ptr %4620, align 4, !tbaa !65, !alias.scope !870
  %4622 = getelementptr inbounds float, ptr %4616, i64 24
  %4623 = load <8 x float>, ptr %4622, align 4, !tbaa !65, !alias.scope !870
  %4624 = getelementptr inbounds float, ptr %4499, i64 %4615
  %4625 = load <8 x float>, ptr %4624, align 4, !tbaa !65, !alias.scope !873, !noalias !870
  %4626 = getelementptr inbounds float, ptr %4624, i64 8
  %4627 = load <8 x float>, ptr %4626, align 4, !tbaa !65, !alias.scope !873, !noalias !870
  %4628 = getelementptr inbounds float, ptr %4624, i64 16
  %4629 = load <8 x float>, ptr %4628, align 4, !tbaa !65, !alias.scope !873, !noalias !870
  %4630 = getelementptr inbounds float, ptr %4624, i64 24
  %4631 = load <8 x float>, ptr %4630, align 4, !tbaa !65, !alias.scope !873, !noalias !870
  %4632 = fadd fast <8 x float> %4625, %4617
  %4633 = fadd fast <8 x float> %4627, %4619
  %4634 = fadd fast <8 x float> %4629, %4621
  %4635 = fadd fast <8 x float> %4631, %4623
  store <8 x float> %4632, ptr %4624, align 4, !tbaa !65, !alias.scope !873, !noalias !870
  store <8 x float> %4633, ptr %4626, align 4, !tbaa !65, !alias.scope !873, !noalias !870
  store <8 x float> %4634, ptr %4628, align 4, !tbaa !65, !alias.scope !873, !noalias !870
  store <8 x float> %4635, ptr %4630, align 4, !tbaa !65, !alias.scope !873, !noalias !870
  %4636 = add nuw i64 %4615, 32
  %4637 = icmp eq i64 %4636, %4295
  br i1 %4637, label %4638, label %4614, !llvm.loop !875

4638:                                             ; preds = %4614
  br i1 %4296, label %4684, label %4639

4639:                                             ; preds = %4610, %4609, %4638
  %4640 = phi i64 [ 0, %4610 ], [ 0, %4609 ], [ %4295, %4638 ]
  %4641 = xor i64 %4640, -1
  %4642 = add nsw i64 %4641, %4257
  br i1 %4298, label %4654, label %4643

4643:                                             ; preds = %4639, %4643
  %4644 = phi i64 [ %4651, %4643 ], [ %4640, %4639 ]
  %4645 = phi i64 [ %4652, %4643 ], [ 0, %4639 ]
  %4646 = getelementptr inbounds float, ptr %21, i64 %4644
  %4647 = load float, ptr %4646, align 4, !tbaa !65
  %4648 = getelementptr inbounds float, ptr %4499, i64 %4644
  %4649 = load float, ptr %4648, align 4, !tbaa !65
  %4650 = fadd fast float %4649, %4647
  store float %4650, ptr %4648, align 4, !tbaa !65
  %4651 = add nuw nsw i64 %4644, 1
  %4652 = add i64 %4645, 1
  %4653 = icmp eq i64 %4652, %4297
  br i1 %4653, label %4654, label %4643, !llvm.loop !876

4654:                                             ; preds = %4643, %4639
  %4655 = phi i64 [ %4640, %4639 ], [ %4651, %4643 ]
  %4656 = icmp ult i64 %4642, 3
  br i1 %4656, label %4684, label %4657

4657:                                             ; preds = %4654, %4657
  %4658 = phi i64 [ %4682, %4657 ], [ %4655, %4654 ]
  %4659 = getelementptr inbounds float, ptr %21, i64 %4658
  %4660 = load float, ptr %4659, align 4, !tbaa !65
  %4661 = getelementptr inbounds float, ptr %4499, i64 %4658
  %4662 = load float, ptr %4661, align 4, !tbaa !65
  %4663 = fadd fast float %4662, %4660
  store float %4663, ptr %4661, align 4, !tbaa !65
  %4664 = add nuw nsw i64 %4658, 1
  %4665 = getelementptr inbounds float, ptr %21, i64 %4664
  %4666 = load float, ptr %4665, align 4, !tbaa !65
  %4667 = getelementptr inbounds float, ptr %4499, i64 %4664
  %4668 = load float, ptr %4667, align 4, !tbaa !65
  %4669 = fadd fast float %4668, %4666
  store float %4669, ptr %4667, align 4, !tbaa !65
  %4670 = add nuw nsw i64 %4658, 2
  %4671 = getelementptr inbounds float, ptr %21, i64 %4670
  %4672 = load float, ptr %4671, align 4, !tbaa !65
  %4673 = getelementptr inbounds float, ptr %4499, i64 %4670
  %4674 = load float, ptr %4673, align 4, !tbaa !65
  %4675 = fadd fast float %4674, %4672
  store float %4675, ptr %4673, align 4, !tbaa !65
  %4676 = add nuw nsw i64 %4658, 3
  %4677 = getelementptr inbounds float, ptr %21, i64 %4676
  %4678 = load float, ptr %4677, align 4, !tbaa !65
  %4679 = getelementptr inbounds float, ptr %4499, i64 %4676
  %4680 = load float, ptr %4679, align 4, !tbaa !65
  %4681 = fadd fast float %4680, %4678
  store float %4681, ptr %4679, align 4, !tbaa !65
  %4682 = add nuw nsw i64 %4658, 4
  %4683 = icmp eq i64 %4682, %4257
  br i1 %4683, label %4684, label %4657, !llvm.loop !877

4684:                                             ; preds = %4654, %4657, %4638
  %4685 = icmp eq i64 %4393, %2109
  %4686 = add i32 %4301, 1
  %4687 = add i64 %4300, 1
  br i1 %4685, label %6185, label %4299, !llvm.loop !878

4688:                                             ; preds = %4246
  br i1 %2083, label %4689, label %6185

4689:                                             ; preds = %4688
  %4690 = getelementptr inbounds %struct.CCGEdge, ptr %4231, i64 1
  %4691 = getelementptr inbounds %struct.CCGEdge, ptr %4231, i64 0, i32 7
  %4692 = getelementptr i8, ptr %4231, i64 24
  %4693 = load i32, ptr %2088, align 4, !tbaa !74
  %4694 = getelementptr i8, ptr %4231, i64 48
  %4695 = getelementptr i8, ptr %4231, i64 48
  %4696 = getelementptr i8, ptr %4231, i64 48
  %4697 = getelementptr i8, ptr %4231, i64 48
  %4698 = add i64 %4232, 48
  %4699 = getelementptr i8, ptr %4231, i64 48
  %4700 = getelementptr i8, ptr %4231, i64 48
  %4701 = add i64 %4232, 48
  %4702 = add i64 %4232, 48
  %4703 = getelementptr i8, ptr %4231, i64 48
  %4704 = getelementptr i8, ptr %4231, i64 48
  %4705 = insertelement <8 x float> poison, float %4248, i64 0
  %4706 = shufflevector <8 x float> %4705, <8 x float> poison, <8 x i32> zeroinitializer
  %4707 = insertelement <8 x float> poison, float %4248, i64 0
  %4708 = shufflevector <8 x float> %4707, <8 x float> poison, <8 x i32> zeroinitializer
  %4709 = insertelement <8 x float> poison, float %4248, i64 0
  %4710 = shufflevector <8 x float> %4709, <8 x float> poison, <8 x i32> zeroinitializer
  %4711 = insertelement <8 x float> poison, float %4248, i64 0
  %4712 = shufflevector <8 x float> %4711, <8 x float> poison, <8 x i32> zeroinitializer
  br label %4713

4713:                                             ; preds = %4689, %6183
  %4714 = phi i32 [ %4693, %4689 ], [ %4734, %6183 ]
  %4715 = phi i32 [ 1, %4689 ], [ %4919, %6183 ]
  %4716 = shl nuw nsw i32 %4715, 1
  %4717 = add nsw i32 %4715, %2084
  %4718 = mul nsw i32 %4717, %16
  %4719 = sext i32 %4718 to i64
  %4720 = getelementptr i8, ptr %4690, i64 %4719
  %4721 = add nsw i32 %2086, %4716
  %4722 = mul nsw i32 %4721, %16
  %4723 = sext i32 %4722 to i64
  %4724 = getelementptr i8, ptr %4690, i64 %4723
  %4725 = sext i32 %4714 to i64
  %4726 = shl nsw i64 %4725, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %18, i8 0, i64 %4726, i1 false)
  %4727 = load i32, ptr %2088, align 4, !tbaa !74
  %4728 = sext i32 %4727 to i64
  %4729 = shl nsw i64 %4728, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %21, i8 0, i64 %4729, i1 false)
  %4730 = add i32 %2087, %4715
  %4731 = mul nsw i32 %4730, %16
  %4732 = sext i32 %4731 to i64
  %4733 = getelementptr i8, ptr %4690, i64 %4732
  %4734 = load i32, ptr %2088, align 4, !tbaa !74
  %4735 = icmp slt i32 %4734, 1
  br i1 %4735, label %4736, label %4741

4736:                                             ; preds = %4713
  %4737 = add nuw nsw i32 %4715, 1
  %4738 = add nsw i32 %4737, %2084
  %4739 = mul nsw i32 %4738, %16
  %4740 = sext i32 %4739 to i64
  br label %4917

4741:                                             ; preds = %4713
  %4742 = zext i32 %4734 to i64
  %4743 = icmp ult i32 %4734, 32
  br i1 %4743, label %4780, label %4744

4744:                                             ; preds = %4741
  %4745 = shl nuw nsw i64 %4742, 2
  %4746 = getelementptr i8, ptr %21, i64 %4745
  %4747 = add nsw i64 %4745, %4732
  %4748 = getelementptr i8, ptr %4704, i64 %4747
  %4749 = icmp ult ptr %21, %4748
  %4750 = icmp ult ptr %4733, %4746
  %4751 = and i1 %4749, %4750
  br i1 %4751, label %4780, label %4752

4752:                                             ; preds = %4744
  %4753 = and i64 %4742, 4294967264
  br label %4754

4754:                                             ; preds = %4754, %4752
  %4755 = phi i64 [ 0, %4752 ], [ %4776, %4754 ]
  %4756 = getelementptr inbounds float, ptr %4733, i64 %4755
  %4757 = load <8 x float>, ptr %4756, align 4, !tbaa !65, !alias.scope !879
  %4758 = getelementptr inbounds float, ptr %4756, i64 8
  %4759 = load <8 x float>, ptr %4758, align 4, !tbaa !65, !alias.scope !879
  %4760 = getelementptr inbounds float, ptr %4756, i64 16
  %4761 = load <8 x float>, ptr %4760, align 4, !tbaa !65, !alias.scope !879
  %4762 = getelementptr inbounds float, ptr %4756, i64 24
  %4763 = load <8 x float>, ptr %4762, align 4, !tbaa !65, !alias.scope !879
  %4764 = getelementptr inbounds float, ptr %21, i64 %4755
  %4765 = load <8 x float>, ptr %4764, align 4, !tbaa !65, !alias.scope !882, !noalias !879
  %4766 = getelementptr inbounds float, ptr %4764, i64 8
  %4767 = load <8 x float>, ptr %4766, align 4, !tbaa !65, !alias.scope !882, !noalias !879
  %4768 = getelementptr inbounds float, ptr %4764, i64 16
  %4769 = load <8 x float>, ptr %4768, align 4, !tbaa !65, !alias.scope !882, !noalias !879
  %4770 = getelementptr inbounds float, ptr %4764, i64 24
  %4771 = load <8 x float>, ptr %4770, align 4, !tbaa !65, !alias.scope !882, !noalias !879
  %4772 = fadd fast <8 x float> %4765, %4757
  %4773 = fadd fast <8 x float> %4767, %4759
  %4774 = fadd fast <8 x float> %4769, %4761
  %4775 = fadd fast <8 x float> %4771, %4763
  store <8 x float> %4772, ptr %4764, align 4, !tbaa !65, !alias.scope !882, !noalias !879
  store <8 x float> %4773, ptr %4766, align 4, !tbaa !65, !alias.scope !882, !noalias !879
  store <8 x float> %4774, ptr %4768, align 4, !tbaa !65, !alias.scope !882, !noalias !879
  store <8 x float> %4775, ptr %4770, align 4, !tbaa !65, !alias.scope !882, !noalias !879
  %4776 = add nuw i64 %4755, 32
  %4777 = icmp eq i64 %4776, %4753
  br i1 %4777, label %4778, label %4754, !llvm.loop !884

4778:                                             ; preds = %4754
  %4779 = icmp eq i64 %4753, %4742
  br i1 %4779, label %4827, label %4780

4780:                                             ; preds = %4744, %4741, %4778
  %4781 = phi i64 [ 0, %4744 ], [ 0, %4741 ], [ %4753, %4778 ]
  %4782 = xor i64 %4781, -1
  %4783 = add nsw i64 %4782, %4742
  %4784 = and i64 %4742, 3
  %4785 = icmp eq i64 %4784, 0
  br i1 %4785, label %4797, label %4786

4786:                                             ; preds = %4780, %4786
  %4787 = phi i64 [ %4794, %4786 ], [ %4781, %4780 ]
  %4788 = phi i64 [ %4795, %4786 ], [ 0, %4780 ]
  %4789 = getelementptr inbounds float, ptr %4733, i64 %4787
  %4790 = load float, ptr %4789, align 4, !tbaa !65
  %4791 = getelementptr inbounds float, ptr %21, i64 %4787
  %4792 = load float, ptr %4791, align 4, !tbaa !65
  %4793 = fadd fast float %4792, %4790
  store float %4793, ptr %4791, align 4, !tbaa !65
  %4794 = add nuw nsw i64 %4787, 1
  %4795 = add i64 %4788, 1
  %4796 = icmp eq i64 %4795, %4784
  br i1 %4796, label %4797, label %4786, !llvm.loop !885

4797:                                             ; preds = %4786, %4780
  %4798 = phi i64 [ %4781, %4780 ], [ %4794, %4786 ]
  %4799 = icmp ult i64 %4783, 3
  br i1 %4799, label %4827, label %4800

4800:                                             ; preds = %4797, %4800
  %4801 = phi i64 [ %4825, %4800 ], [ %4798, %4797 ]
  %4802 = getelementptr inbounds float, ptr %4733, i64 %4801
  %4803 = load float, ptr %4802, align 4, !tbaa !65
  %4804 = getelementptr inbounds float, ptr %21, i64 %4801
  %4805 = load float, ptr %4804, align 4, !tbaa !65
  %4806 = fadd fast float %4805, %4803
  store float %4806, ptr %4804, align 4, !tbaa !65
  %4807 = add nuw nsw i64 %4801, 1
  %4808 = getelementptr inbounds float, ptr %4733, i64 %4807
  %4809 = load float, ptr %4808, align 4, !tbaa !65
  %4810 = getelementptr inbounds float, ptr %21, i64 %4807
  %4811 = load float, ptr %4810, align 4, !tbaa !65
  %4812 = fadd fast float %4811, %4809
  store float %4812, ptr %4810, align 4, !tbaa !65
  %4813 = add nuw nsw i64 %4801, 2
  %4814 = getelementptr inbounds float, ptr %4733, i64 %4813
  %4815 = load float, ptr %4814, align 4, !tbaa !65
  %4816 = getelementptr inbounds float, ptr %21, i64 %4813
  %4817 = load float, ptr %4816, align 4, !tbaa !65
  %4818 = fadd fast float %4817, %4815
  store float %4818, ptr %4816, align 4, !tbaa !65
  %4819 = add nuw nsw i64 %4801, 3
  %4820 = getelementptr inbounds float, ptr %4733, i64 %4819
  %4821 = load float, ptr %4820, align 4, !tbaa !65
  %4822 = getelementptr inbounds float, ptr %21, i64 %4819
  %4823 = load float, ptr %4822, align 4, !tbaa !65
  %4824 = fadd fast float %4823, %4821
  store float %4824, ptr %4822, align 4, !tbaa !65
  %4825 = add nuw nsw i64 %4801, 4
  %4826 = icmp eq i64 %4825, %4742
  br i1 %4826, label %4827, label %4800, !llvm.loop !886

4827:                                             ; preds = %4797, %4800, %4778
  %4828 = add nuw nsw i32 %4715, 1
  %4829 = add nsw i32 %4828, %2084
  %4830 = mul nsw i32 %4829, %16
  %4831 = sext i32 %4830 to i64
  %4832 = getelementptr inbounds i8, ptr %4690, i64 %4831
  %4833 = icmp ult i32 %4734, 32
  br i1 %4833, label %4870, label %4834

4834:                                             ; preds = %4827
  %4835 = shl nuw nsw i64 %4742, 2
  %4836 = getelementptr i8, ptr %21, i64 %4835
  %4837 = add nsw i64 %4835, %4831
  %4838 = getelementptr i8, ptr %4703, i64 %4837
  %4839 = icmp ult ptr %21, %4838
  %4840 = icmp ult ptr %4832, %4836
  %4841 = and i1 %4839, %4840
  br i1 %4841, label %4870, label %4842

4842:                                             ; preds = %4834
  %4843 = and i64 %4742, 4294967264
  br label %4844

4844:                                             ; preds = %4844, %4842
  %4845 = phi i64 [ 0, %4842 ], [ %4866, %4844 ]
  %4846 = getelementptr inbounds float, ptr %4832, i64 %4845
  %4847 = load <8 x float>, ptr %4846, align 4, !tbaa !65, !alias.scope !887
  %4848 = getelementptr inbounds float, ptr %4846, i64 8
  %4849 = load <8 x float>, ptr %4848, align 4, !tbaa !65, !alias.scope !887
  %4850 = getelementptr inbounds float, ptr %4846, i64 16
  %4851 = load <8 x float>, ptr %4850, align 4, !tbaa !65, !alias.scope !887
  %4852 = getelementptr inbounds float, ptr %4846, i64 24
  %4853 = load <8 x float>, ptr %4852, align 4, !tbaa !65, !alias.scope !887
  %4854 = getelementptr inbounds float, ptr %21, i64 %4845
  %4855 = load <8 x float>, ptr %4854, align 4, !tbaa !65, !alias.scope !890, !noalias !887
  %4856 = getelementptr inbounds float, ptr %4854, i64 8
  %4857 = load <8 x float>, ptr %4856, align 4, !tbaa !65, !alias.scope !890, !noalias !887
  %4858 = getelementptr inbounds float, ptr %4854, i64 16
  %4859 = load <8 x float>, ptr %4858, align 4, !tbaa !65, !alias.scope !890, !noalias !887
  %4860 = getelementptr inbounds float, ptr %4854, i64 24
  %4861 = load <8 x float>, ptr %4860, align 4, !tbaa !65, !alias.scope !890, !noalias !887
  %4862 = fadd fast <8 x float> %4855, %4847
  %4863 = fadd fast <8 x float> %4857, %4849
  %4864 = fadd fast <8 x float> %4859, %4851
  %4865 = fadd fast <8 x float> %4861, %4853
  store <8 x float> %4862, ptr %4854, align 4, !tbaa !65, !alias.scope !890, !noalias !887
  store <8 x float> %4863, ptr %4856, align 4, !tbaa !65, !alias.scope !890, !noalias !887
  store <8 x float> %4864, ptr %4858, align 4, !tbaa !65, !alias.scope !890, !noalias !887
  store <8 x float> %4865, ptr %4860, align 4, !tbaa !65, !alias.scope !890, !noalias !887
  %4866 = add nuw i64 %4845, 32
  %4867 = icmp eq i64 %4866, %4843
  br i1 %4867, label %4868, label %4844, !llvm.loop !892

4868:                                             ; preds = %4844
  %4869 = icmp eq i64 %4843, %4742
  br i1 %4869, label %4917, label %4870

4870:                                             ; preds = %4834, %4827, %4868
  %4871 = phi i64 [ 0, %4834 ], [ 0, %4827 ], [ %4843, %4868 ]
  %4872 = xor i64 %4871, -1
  %4873 = add nsw i64 %4872, %4742
  %4874 = and i64 %4742, 3
  %4875 = icmp eq i64 %4874, 0
  br i1 %4875, label %4887, label %4876

4876:                                             ; preds = %4870, %4876
  %4877 = phi i64 [ %4884, %4876 ], [ %4871, %4870 ]
  %4878 = phi i64 [ %4885, %4876 ], [ 0, %4870 ]
  %4879 = getelementptr inbounds float, ptr %4832, i64 %4877
  %4880 = load float, ptr %4879, align 4, !tbaa !65
  %4881 = getelementptr inbounds float, ptr %21, i64 %4877
  %4882 = load float, ptr %4881, align 4, !tbaa !65
  %4883 = fadd fast float %4882, %4880
  store float %4883, ptr %4881, align 4, !tbaa !65
  %4884 = add nuw nsw i64 %4877, 1
  %4885 = add i64 %4878, 1
  %4886 = icmp eq i64 %4885, %4874
  br i1 %4886, label %4887, label %4876, !llvm.loop !893

4887:                                             ; preds = %4876, %4870
  %4888 = phi i64 [ %4871, %4870 ], [ %4884, %4876 ]
  %4889 = icmp ult i64 %4873, 3
  br i1 %4889, label %4917, label %4890

4890:                                             ; preds = %4887, %4890
  %4891 = phi i64 [ %4915, %4890 ], [ %4888, %4887 ]
  %4892 = getelementptr inbounds float, ptr %4832, i64 %4891
  %4893 = load float, ptr %4892, align 4, !tbaa !65
  %4894 = getelementptr inbounds float, ptr %21, i64 %4891
  %4895 = load float, ptr %4894, align 4, !tbaa !65
  %4896 = fadd fast float %4895, %4893
  store float %4896, ptr %4894, align 4, !tbaa !65
  %4897 = add nuw nsw i64 %4891, 1
  %4898 = getelementptr inbounds float, ptr %4832, i64 %4897
  %4899 = load float, ptr %4898, align 4, !tbaa !65
  %4900 = getelementptr inbounds float, ptr %21, i64 %4897
  %4901 = load float, ptr %4900, align 4, !tbaa !65
  %4902 = fadd fast float %4901, %4899
  store float %4902, ptr %4900, align 4, !tbaa !65
  %4903 = add nuw nsw i64 %4891, 2
  %4904 = getelementptr inbounds float, ptr %4832, i64 %4903
  %4905 = load float, ptr %4904, align 4, !tbaa !65
  %4906 = getelementptr inbounds float, ptr %21, i64 %4903
  %4907 = load float, ptr %4906, align 4, !tbaa !65
  %4908 = fadd fast float %4907, %4905
  store float %4908, ptr %4906, align 4, !tbaa !65
  %4909 = add nuw nsw i64 %4891, 3
  %4910 = getelementptr inbounds float, ptr %4832, i64 %4909
  %4911 = load float, ptr %4910, align 4, !tbaa !65
  %4912 = getelementptr inbounds float, ptr %21, i64 %4909
  %4913 = load float, ptr %4912, align 4, !tbaa !65
  %4914 = fadd fast float %4913, %4911
  store float %4914, ptr %4912, align 4, !tbaa !65
  %4915 = add nuw nsw i64 %4891, 4
  %4916 = icmp eq i64 %4915, %4742
  br i1 %4916, label %4917, label %4890, !llvm.loop !894

4917:                                             ; preds = %4887, %4890, %4868, %4736
  %4918 = phi i64 [ %4740, %4736 ], [ %4831, %4868 ], [ %4831, %4890 ], [ %4831, %4887 ]
  %4919 = phi i32 [ %4737, %4736 ], [ %4828, %4868 ], [ %4828, %4890 ], [ %4828, %4887 ]
  %4920 = load i16, ptr %4249, align 8, !tbaa !81
  %4921 = sext i16 %4920 to i32
  %4922 = icmp sgt i16 %4920, 0
  br i1 %4922, label %4923, label %5323

4923:                                             ; preds = %4917
  %4924 = load ptr, ptr %4691, align 8, !tbaa !52
  %4925 = add nsw i32 %4716, -1
  %4926 = load ptr, ptr %4692, align 8, !tbaa !83
  %4927 = shl i32 %4925, %2092
  %4928 = sub i32 %2095, %4927
  %4929 = zext i32 %4734 to i64
  %4930 = or i32 %4716, 1
  %4931 = shl i32 %4930, %2092
  %4932 = sub i32 %2095, %4931
  %4933 = shl i32 %4715, %2101
  %4934 = sub i32 %2095, %4933
  %4935 = zext i32 %4921 to i64
  %4936 = shl nuw nsw i64 %4929, 2
  %4937 = getelementptr i8, ptr %21, i64 %4936
  %4938 = shl nuw nsw i64 %4929, 2
  %4939 = getelementptr i8, ptr %18, i64 %4938
  %4940 = shl nuw nsw i64 %4929, 2
  %4941 = getelementptr i8, ptr %18, i64 %4940
  %4942 = icmp ult i32 %4734, 32
  %4943 = and i64 %4929, 4294967264
  %4944 = icmp eq i64 %4943, %4929
  %4945 = and i64 %4929, 3
  %4946 = icmp eq i64 %4945, 0
  %4947 = icmp ult i32 %4734, 32
  %4948 = and i64 %4929, 4294967264
  %4949 = icmp eq i64 %4948, %4929
  %4950 = and i64 %4929, 3
  %4951 = icmp eq i64 %4950, 0
  %4952 = icmp ult i32 %4734, 32
  %4953 = and i64 %4929, 4294967264
  %4954 = icmp eq i64 %4953, %4929
  %4955 = and i64 %4929, 3
  %4956 = icmp eq i64 %4955, 0
  br label %4957

4957:                                             ; preds = %4923, %5320
  %4958 = phi i64 [ 0, %4923 ], [ %5321, %5320 ]
  %4959 = getelementptr inbounds ptr, ptr %4924, i64 %4958
  %4960 = load ptr, ptr %4959, align 8, !tbaa !14
  %4961 = getelementptr inbounds %struct.CCGFace, ptr %4960, i64 0, i32 2
  %4962 = load i16, ptr %4961, align 8, !tbaa !89
  %4963 = icmp sgt i16 %4962, 0
  br i1 %4963, label %4964, label %4978

4964:                                             ; preds = %4957
  %4965 = zext i16 %4962 to i64
  %4966 = getelementptr inbounds %struct.CCGFace, ptr %4960, i64 1
  %4967 = getelementptr inbounds ptr, ptr %4966, i64 %4965
  br label %4968

4968:                                             ; preds = %4973, %4964
  %4969 = phi i64 [ 0, %4964 ], [ %4974, %4973 ]
  %4970 = getelementptr inbounds ptr, ptr %4967, i64 %4969
  %4971 = load ptr, ptr %4970, align 8, !tbaa !14
  %4972 = icmp eq ptr %4971, %4231
  br i1 %4972, label %4976, label %4973

4973:                                             ; preds = %4968
  %4974 = add nuw nsw i64 %4969, 1
  %4975 = icmp eq i64 %4974, %4965
  br i1 %4975, label %4978, label %4968, !llvm.loop !588

4976:                                             ; preds = %4968
  %4977 = trunc i64 %4969 to i32
  br label %4978

4978:                                             ; preds = %4973, %4957, %4976
  %4979 = phi i32 [ -1, %4957 ], [ %4977, %4976 ], [ -1, %4973 ]
  %4980 = getelementptr inbounds %struct.CCGFace, ptr %4960, i64 1
  %4981 = sext i32 %4979 to i64
  %4982 = getelementptr inbounds ptr, ptr %4980, i64 %4981
  %4983 = load ptr, ptr %4982, align 8, !tbaa !14
  %4984 = icmp eq ptr %4983, %4926
  %4985 = select i1 %4984, i32 %4927, i32 %4928
  %4986 = sub nsw i32 %2090, %4985
  br i1 %2097, label %4987, label %4992

4987:                                             ; preds = %4978
  %4988 = sext i16 %4962 to i32
  %4989 = add nsw i32 %4988, -1
  %4990 = add i32 %4989, %4979
  %4991 = srem i32 %4990, %4988
  br label %4999

4992:                                             ; preds = %4978
  %4993 = icmp slt i32 %4986, 0
  br i1 %4993, label %4994, label %4999

4994:                                             ; preds = %4992
  %4995 = add nsw i32 %4979, 1
  %4996 = sext i16 %4962 to i32
  %4997 = srem i32 %4995, %4996
  %4998 = sub nsw i32 0, %4986
  br label %4999

4999:                                             ; preds = %4992, %4987, %4994
  %5000 = phi i32 [ %4991, %4987 ], [ %4997, %4994 ], [ %4979, %4992 ]
  %5001 = phi i32 [ %4986, %4987 ], [ %4998, %4994 ], [ %2096, %4992 ]
  %5002 = phi i32 [ %2098, %4987 ], [ %2096, %4994 ], [ %4986, %4992 ]
  %5003 = sext i16 %4962 to i64
  %5004 = getelementptr inbounds ptr, ptr %4980, i64 %5003
  %5005 = getelementptr inbounds ptr, ptr %5004, i64 %5003
  %5006 = mul i32 %5000, %2100
  %5007 = add nsw i32 %5006, 1
  %5008 = mul nsw i32 %5007, %16
  %5009 = sext i32 %5008 to i64
  %5010 = getelementptr inbounds i8, ptr %5005, i64 %5009
  %5011 = mul nsw i32 %5002, %2091
  %5012 = add i32 %5001, %2091
  %5013 = add i32 %5012, %5011
  %5014 = mul nsw i32 %5013, %16
  %5015 = sext i32 %5014 to i64
  %5016 = getelementptr i8, ptr %5010, i64 %5015
  br i1 %4735, label %5098, label %5017

5017:                                             ; preds = %4999
  br i1 %4942, label %5053, label %5018

5018:                                             ; preds = %5017
  %5019 = getelementptr i8, ptr %4960, i64 24
  %5020 = getelementptr i8, ptr %5019, i64 %4940
  %5021 = shl nsw i64 %5003, 4
  %5022 = add nsw i64 %5021, %5015
  %5023 = add nsw i64 %5022, %5009
  %5024 = getelementptr i8, ptr %5020, i64 %5023
  %5025 = icmp ult ptr %18, %5024
  %5026 = icmp ult ptr %5016, %4941
  %5027 = and i1 %5025, %5026
  br i1 %5027, label %5053, label %5028

5028:                                             ; preds = %5018, %5028
  %5029 = phi i64 [ %5050, %5028 ], [ 0, %5018 ]
  %5030 = getelementptr inbounds float, ptr %5016, i64 %5029
  %5031 = load <8 x float>, ptr %5030, align 4, !tbaa !65, !alias.scope !895
  %5032 = getelementptr inbounds float, ptr %5030, i64 8
  %5033 = load <8 x float>, ptr %5032, align 4, !tbaa !65, !alias.scope !895
  %5034 = getelementptr inbounds float, ptr %5030, i64 16
  %5035 = load <8 x float>, ptr %5034, align 4, !tbaa !65, !alias.scope !895
  %5036 = getelementptr inbounds float, ptr %5030, i64 24
  %5037 = load <8 x float>, ptr %5036, align 4, !tbaa !65, !alias.scope !895
  %5038 = getelementptr inbounds float, ptr %18, i64 %5029
  %5039 = load <8 x float>, ptr %5038, align 4, !tbaa !65, !alias.scope !898, !noalias !895
  %5040 = getelementptr inbounds float, ptr %5038, i64 8
  %5041 = load <8 x float>, ptr %5040, align 4, !tbaa !65, !alias.scope !898, !noalias !895
  %5042 = getelementptr inbounds float, ptr %5038, i64 16
  %5043 = load <8 x float>, ptr %5042, align 4, !tbaa !65, !alias.scope !898, !noalias !895
  %5044 = getelementptr inbounds float, ptr %5038, i64 24
  %5045 = load <8 x float>, ptr %5044, align 4, !tbaa !65, !alias.scope !898, !noalias !895
  %5046 = fadd fast <8 x float> %5039, %5031
  %5047 = fadd fast <8 x float> %5041, %5033
  %5048 = fadd fast <8 x float> %5043, %5035
  %5049 = fadd fast <8 x float> %5045, %5037
  store <8 x float> %5046, ptr %5038, align 4, !tbaa !65, !alias.scope !898, !noalias !895
  store <8 x float> %5047, ptr %5040, align 4, !tbaa !65, !alias.scope !898, !noalias !895
  store <8 x float> %5048, ptr %5042, align 4, !tbaa !65, !alias.scope !898, !noalias !895
  store <8 x float> %5049, ptr %5044, align 4, !tbaa !65, !alias.scope !898, !noalias !895
  %5050 = add nuw i64 %5029, 32
  %5051 = icmp eq i64 %5050, %4943
  br i1 %5051, label %5052, label %5028, !llvm.loop !900

5052:                                             ; preds = %5028
  br i1 %4944, label %5098, label %5053

5053:                                             ; preds = %5018, %5017, %5052
  %5054 = phi i64 [ 0, %5018 ], [ 0, %5017 ], [ %4943, %5052 ]
  %5055 = xor i64 %5054, -1
  %5056 = add nsw i64 %5055, %4929
  br i1 %4946, label %5068, label %5057

5057:                                             ; preds = %5053, %5057
  %5058 = phi i64 [ %5065, %5057 ], [ %5054, %5053 ]
  %5059 = phi i64 [ %5066, %5057 ], [ 0, %5053 ]
  %5060 = getelementptr inbounds float, ptr %5016, i64 %5058
  %5061 = load float, ptr %5060, align 4, !tbaa !65
  %5062 = getelementptr inbounds float, ptr %18, i64 %5058
  %5063 = load float, ptr %5062, align 4, !tbaa !65
  %5064 = fadd fast float %5063, %5061
  store float %5064, ptr %5062, align 4, !tbaa !65
  %5065 = add nuw nsw i64 %5058, 1
  %5066 = add i64 %5059, 1
  %5067 = icmp eq i64 %5066, %4945
  br i1 %5067, label %5068, label %5057, !llvm.loop !901

5068:                                             ; preds = %5057, %5053
  %5069 = phi i64 [ %5054, %5053 ], [ %5065, %5057 ]
  %5070 = icmp ult i64 %5056, 3
  br i1 %5070, label %5098, label %5071

5071:                                             ; preds = %5068, %5071
  %5072 = phi i64 [ %5096, %5071 ], [ %5069, %5068 ]
  %5073 = getelementptr inbounds float, ptr %5016, i64 %5072
  %5074 = load float, ptr %5073, align 4, !tbaa !65
  %5075 = getelementptr inbounds float, ptr %18, i64 %5072
  %5076 = load float, ptr %5075, align 4, !tbaa !65
  %5077 = fadd fast float %5076, %5074
  store float %5077, ptr %5075, align 4, !tbaa !65
  %5078 = add nuw nsw i64 %5072, 1
  %5079 = getelementptr inbounds float, ptr %5016, i64 %5078
  %5080 = load float, ptr %5079, align 4, !tbaa !65
  %5081 = getelementptr inbounds float, ptr %18, i64 %5078
  %5082 = load float, ptr %5081, align 4, !tbaa !65
  %5083 = fadd fast float %5082, %5080
  store float %5083, ptr %5081, align 4, !tbaa !65
  %5084 = add nuw nsw i64 %5072, 2
  %5085 = getelementptr inbounds float, ptr %5016, i64 %5084
  %5086 = load float, ptr %5085, align 4, !tbaa !65
  %5087 = getelementptr inbounds float, ptr %18, i64 %5084
  %5088 = load float, ptr %5087, align 4, !tbaa !65
  %5089 = fadd fast float %5088, %5086
  store float %5089, ptr %5087, align 4, !tbaa !65
  %5090 = add nuw nsw i64 %5072, 3
  %5091 = getelementptr inbounds float, ptr %5016, i64 %5090
  %5092 = load float, ptr %5091, align 4, !tbaa !65
  %5093 = getelementptr inbounds float, ptr %18, i64 %5090
  %5094 = load float, ptr %5093, align 4, !tbaa !65
  %5095 = fadd fast float %5094, %5092
  store float %5095, ptr %5093, align 4, !tbaa !65
  %5096 = add nuw nsw i64 %5072, 4
  %5097 = icmp eq i64 %5096, %4929
  br i1 %5097, label %5098, label %5071, !llvm.loop !902

5098:                                             ; preds = %5068, %5071, %5052, %4999
  %5099 = select i1 %4984, i32 %4931, i32 %4932
  %5100 = sub nsw i32 %2090, %5099
  br i1 %2097, label %5101, label %5106

5101:                                             ; preds = %5098
  %5102 = sext i16 %4962 to i32
  %5103 = add nsw i32 %5102, -1
  %5104 = add i32 %5103, %4979
  %5105 = srem i32 %5104, %5102
  br label %5113

5106:                                             ; preds = %5098
  %5107 = icmp slt i32 %5100, 0
  br i1 %5107, label %5108, label %5113

5108:                                             ; preds = %5106
  %5109 = add nsw i32 %4979, 1
  %5110 = sext i16 %4962 to i32
  %5111 = srem i32 %5109, %5110
  %5112 = sub nsw i32 0, %5100
  br label %5113

5113:                                             ; preds = %5106, %5101, %5108
  %5114 = phi i32 [ %5105, %5101 ], [ %5111, %5108 ], [ %4979, %5106 ]
  %5115 = phi i32 [ %5100, %5101 ], [ %5112, %5108 ], [ %2096, %5106 ]
  %5116 = phi i32 [ %2098, %5101 ], [ %2096, %5108 ], [ %5100, %5106 ]
  %5117 = mul i32 %5114, %2100
  %5118 = add nsw i32 %5117, 1
  %5119 = mul nsw i32 %5118, %16
  %5120 = sext i32 %5119 to i64
  %5121 = getelementptr inbounds i8, ptr %5005, i64 %5120
  %5122 = mul nsw i32 %5116, %2091
  %5123 = add i32 %5115, %2091
  %5124 = add i32 %5123, %5122
  %5125 = mul nsw i32 %5124, %16
  %5126 = sext i32 %5125 to i64
  %5127 = getelementptr i8, ptr %5121, i64 %5126
  br i1 %4735, label %5209, label %5128

5128:                                             ; preds = %5113
  br i1 %4947, label %5164, label %5129

5129:                                             ; preds = %5128
  %5130 = getelementptr i8, ptr %4960, i64 24
  %5131 = getelementptr i8, ptr %5130, i64 %4938
  %5132 = shl nsw i64 %5003, 4
  %5133 = add nsw i64 %5132, %5126
  %5134 = add nsw i64 %5133, %5120
  %5135 = getelementptr i8, ptr %5131, i64 %5134
  %5136 = icmp ult ptr %18, %5135
  %5137 = icmp ult ptr %5127, %4939
  %5138 = and i1 %5136, %5137
  br i1 %5138, label %5164, label %5139

5139:                                             ; preds = %5129, %5139
  %5140 = phi i64 [ %5161, %5139 ], [ 0, %5129 ]
  %5141 = getelementptr inbounds float, ptr %5127, i64 %5140
  %5142 = load <8 x float>, ptr %5141, align 4, !tbaa !65, !alias.scope !903
  %5143 = getelementptr inbounds float, ptr %5141, i64 8
  %5144 = load <8 x float>, ptr %5143, align 4, !tbaa !65, !alias.scope !903
  %5145 = getelementptr inbounds float, ptr %5141, i64 16
  %5146 = load <8 x float>, ptr %5145, align 4, !tbaa !65, !alias.scope !903
  %5147 = getelementptr inbounds float, ptr %5141, i64 24
  %5148 = load <8 x float>, ptr %5147, align 4, !tbaa !65, !alias.scope !903
  %5149 = getelementptr inbounds float, ptr %18, i64 %5140
  %5150 = load <8 x float>, ptr %5149, align 4, !tbaa !65, !alias.scope !906, !noalias !903
  %5151 = getelementptr inbounds float, ptr %5149, i64 8
  %5152 = load <8 x float>, ptr %5151, align 4, !tbaa !65, !alias.scope !906, !noalias !903
  %5153 = getelementptr inbounds float, ptr %5149, i64 16
  %5154 = load <8 x float>, ptr %5153, align 4, !tbaa !65, !alias.scope !906, !noalias !903
  %5155 = getelementptr inbounds float, ptr %5149, i64 24
  %5156 = load <8 x float>, ptr %5155, align 4, !tbaa !65, !alias.scope !906, !noalias !903
  %5157 = fadd fast <8 x float> %5150, %5142
  %5158 = fadd fast <8 x float> %5152, %5144
  %5159 = fadd fast <8 x float> %5154, %5146
  %5160 = fadd fast <8 x float> %5156, %5148
  store <8 x float> %5157, ptr %5149, align 4, !tbaa !65, !alias.scope !906, !noalias !903
  store <8 x float> %5158, ptr %5151, align 4, !tbaa !65, !alias.scope !906, !noalias !903
  store <8 x float> %5159, ptr %5153, align 4, !tbaa !65, !alias.scope !906, !noalias !903
  store <8 x float> %5160, ptr %5155, align 4, !tbaa !65, !alias.scope !906, !noalias !903
  %5161 = add nuw i64 %5140, 32
  %5162 = icmp eq i64 %5161, %4948
  br i1 %5162, label %5163, label %5139, !llvm.loop !908

5163:                                             ; preds = %5139
  br i1 %4949, label %5209, label %5164

5164:                                             ; preds = %5129, %5128, %5163
  %5165 = phi i64 [ 0, %5129 ], [ 0, %5128 ], [ %4948, %5163 ]
  %5166 = xor i64 %5165, -1
  %5167 = add nsw i64 %5166, %4929
  br i1 %4951, label %5179, label %5168

5168:                                             ; preds = %5164, %5168
  %5169 = phi i64 [ %5176, %5168 ], [ %5165, %5164 ]
  %5170 = phi i64 [ %5177, %5168 ], [ 0, %5164 ]
  %5171 = getelementptr inbounds float, ptr %5127, i64 %5169
  %5172 = load float, ptr %5171, align 4, !tbaa !65
  %5173 = getelementptr inbounds float, ptr %18, i64 %5169
  %5174 = load float, ptr %5173, align 4, !tbaa !65
  %5175 = fadd fast float %5174, %5172
  store float %5175, ptr %5173, align 4, !tbaa !65
  %5176 = add nuw nsw i64 %5169, 1
  %5177 = add i64 %5170, 1
  %5178 = icmp eq i64 %5177, %4950
  br i1 %5178, label %5179, label %5168, !llvm.loop !909

5179:                                             ; preds = %5168, %5164
  %5180 = phi i64 [ %5165, %5164 ], [ %5176, %5168 ]
  %5181 = icmp ult i64 %5167, 3
  br i1 %5181, label %5209, label %5182

5182:                                             ; preds = %5179, %5182
  %5183 = phi i64 [ %5207, %5182 ], [ %5180, %5179 ]
  %5184 = getelementptr inbounds float, ptr %5127, i64 %5183
  %5185 = load float, ptr %5184, align 4, !tbaa !65
  %5186 = getelementptr inbounds float, ptr %18, i64 %5183
  %5187 = load float, ptr %5186, align 4, !tbaa !65
  %5188 = fadd fast float %5187, %5185
  store float %5188, ptr %5186, align 4, !tbaa !65
  %5189 = add nuw nsw i64 %5183, 1
  %5190 = getelementptr inbounds float, ptr %5127, i64 %5189
  %5191 = load float, ptr %5190, align 4, !tbaa !65
  %5192 = getelementptr inbounds float, ptr %18, i64 %5189
  %5193 = load float, ptr %5192, align 4, !tbaa !65
  %5194 = fadd fast float %5193, %5191
  store float %5194, ptr %5192, align 4, !tbaa !65
  %5195 = add nuw nsw i64 %5183, 2
  %5196 = getelementptr inbounds float, ptr %5127, i64 %5195
  %5197 = load float, ptr %5196, align 4, !tbaa !65
  %5198 = getelementptr inbounds float, ptr %18, i64 %5195
  %5199 = load float, ptr %5198, align 4, !tbaa !65
  %5200 = fadd fast float %5199, %5197
  store float %5200, ptr %5198, align 4, !tbaa !65
  %5201 = add nuw nsw i64 %5183, 3
  %5202 = getelementptr inbounds float, ptr %5127, i64 %5201
  %5203 = load float, ptr %5202, align 4, !tbaa !65
  %5204 = getelementptr inbounds float, ptr %18, i64 %5201
  %5205 = load float, ptr %5204, align 4, !tbaa !65
  %5206 = fadd fast float %5205, %5203
  store float %5206, ptr %5204, align 4, !tbaa !65
  %5207 = add nuw nsw i64 %5183, 4
  %5208 = icmp eq i64 %5207, %4929
  br i1 %5208, label %5209, label %5182, !llvm.loop !910

5209:                                             ; preds = %5179, %5182, %5163, %5113
  %5210 = select i1 %4984, i32 %4933, i32 %4934
  %5211 = sub nsw i32 %2090, %5210
  br i1 %2104, label %5212, label %5217

5212:                                             ; preds = %5209
  %5213 = sext i16 %4962 to i32
  %5214 = add nsw i32 %5213, -1
  %5215 = add i32 %5214, %4979
  %5216 = srem i32 %5215, %5213
  br label %5224

5217:                                             ; preds = %5209
  %5218 = icmp slt i32 %5211, 0
  br i1 %5218, label %5219, label %5224

5219:                                             ; preds = %5217
  %5220 = add nsw i32 %4979, 1
  %5221 = sext i16 %4962 to i32
  %5222 = srem i32 %5220, %5221
  %5223 = sub nsw i32 0, %5211
  br label %5224

5224:                                             ; preds = %5217, %5212, %5219
  %5225 = phi i32 [ %5216, %5212 ], [ %5222, %5219 ], [ %4979, %5217 ]
  %5226 = phi i32 [ %5211, %5212 ], [ %5223, %5219 ], [ %2103, %5217 ]
  %5227 = phi i32 [ %2105, %5212 ], [ %2103, %5219 ], [ %5211, %5217 ]
  %5228 = mul i32 %5225, %2100
  %5229 = add nsw i32 %5228, 1
  %5230 = mul nsw i32 %5229, %16
  %5231 = sext i32 %5230 to i64
  %5232 = getelementptr inbounds i8, ptr %5005, i64 %5231
  %5233 = mul nsw i32 %5227, %2091
  %5234 = add i32 %5226, %2091
  %5235 = add i32 %5234, %5233
  %5236 = mul nsw i32 %5235, %16
  %5237 = sext i32 %5236 to i64
  %5238 = getelementptr i8, ptr %5232, i64 %5237
  br i1 %4735, label %5320, label %5239

5239:                                             ; preds = %5224
  br i1 %4952, label %5275, label %5240

5240:                                             ; preds = %5239
  %5241 = getelementptr i8, ptr %4960, i64 24
  %5242 = getelementptr i8, ptr %5241, i64 %4936
  %5243 = shl nsw i64 %5003, 4
  %5244 = add nsw i64 %5243, %5237
  %5245 = add nsw i64 %5244, %5231
  %5246 = getelementptr i8, ptr %5242, i64 %5245
  %5247 = icmp ult ptr %21, %5246
  %5248 = icmp ult ptr %5238, %4937
  %5249 = and i1 %5247, %5248
  br i1 %5249, label %5275, label %5250

5250:                                             ; preds = %5240, %5250
  %5251 = phi i64 [ %5272, %5250 ], [ 0, %5240 ]
  %5252 = getelementptr inbounds float, ptr %5238, i64 %5251
  %5253 = load <8 x float>, ptr %5252, align 4, !tbaa !65, !alias.scope !911
  %5254 = getelementptr inbounds float, ptr %5252, i64 8
  %5255 = load <8 x float>, ptr %5254, align 4, !tbaa !65, !alias.scope !911
  %5256 = getelementptr inbounds float, ptr %5252, i64 16
  %5257 = load <8 x float>, ptr %5256, align 4, !tbaa !65, !alias.scope !911
  %5258 = getelementptr inbounds float, ptr %5252, i64 24
  %5259 = load <8 x float>, ptr %5258, align 4, !tbaa !65, !alias.scope !911
  %5260 = getelementptr inbounds float, ptr %21, i64 %5251
  %5261 = load <8 x float>, ptr %5260, align 4, !tbaa !65, !alias.scope !914, !noalias !911
  %5262 = getelementptr inbounds float, ptr %5260, i64 8
  %5263 = load <8 x float>, ptr %5262, align 4, !tbaa !65, !alias.scope !914, !noalias !911
  %5264 = getelementptr inbounds float, ptr %5260, i64 16
  %5265 = load <8 x float>, ptr %5264, align 4, !tbaa !65, !alias.scope !914, !noalias !911
  %5266 = getelementptr inbounds float, ptr %5260, i64 24
  %5267 = load <8 x float>, ptr %5266, align 4, !tbaa !65, !alias.scope !914, !noalias !911
  %5268 = fadd fast <8 x float> %5261, %5253
  %5269 = fadd fast <8 x float> %5263, %5255
  %5270 = fadd fast <8 x float> %5265, %5257
  %5271 = fadd fast <8 x float> %5267, %5259
  store <8 x float> %5268, ptr %5260, align 4, !tbaa !65, !alias.scope !914, !noalias !911
  store <8 x float> %5269, ptr %5262, align 4, !tbaa !65, !alias.scope !914, !noalias !911
  store <8 x float> %5270, ptr %5264, align 4, !tbaa !65, !alias.scope !914, !noalias !911
  store <8 x float> %5271, ptr %5266, align 4, !tbaa !65, !alias.scope !914, !noalias !911
  %5272 = add nuw i64 %5251, 32
  %5273 = icmp eq i64 %5272, %4953
  br i1 %5273, label %5274, label %5250, !llvm.loop !916

5274:                                             ; preds = %5250
  br i1 %4954, label %5320, label %5275

5275:                                             ; preds = %5240, %5239, %5274
  %5276 = phi i64 [ 0, %5240 ], [ 0, %5239 ], [ %4953, %5274 ]
  %5277 = xor i64 %5276, -1
  %5278 = add nsw i64 %5277, %4929
  br i1 %4956, label %5290, label %5279

5279:                                             ; preds = %5275, %5279
  %5280 = phi i64 [ %5287, %5279 ], [ %5276, %5275 ]
  %5281 = phi i64 [ %5288, %5279 ], [ 0, %5275 ]
  %5282 = getelementptr inbounds float, ptr %5238, i64 %5280
  %5283 = load float, ptr %5282, align 4, !tbaa !65
  %5284 = getelementptr inbounds float, ptr %21, i64 %5280
  %5285 = load float, ptr %5284, align 4, !tbaa !65
  %5286 = fadd fast float %5285, %5283
  store float %5286, ptr %5284, align 4, !tbaa !65
  %5287 = add nuw nsw i64 %5280, 1
  %5288 = add i64 %5281, 1
  %5289 = icmp eq i64 %5288, %4955
  br i1 %5289, label %5290, label %5279, !llvm.loop !917

5290:                                             ; preds = %5279, %5275
  %5291 = phi i64 [ %5276, %5275 ], [ %5287, %5279 ]
  %5292 = icmp ult i64 %5278, 3
  br i1 %5292, label %5320, label %5293

5293:                                             ; preds = %5290, %5293
  %5294 = phi i64 [ %5318, %5293 ], [ %5291, %5290 ]
  %5295 = getelementptr inbounds float, ptr %5238, i64 %5294
  %5296 = load float, ptr %5295, align 4, !tbaa !65
  %5297 = getelementptr inbounds float, ptr %21, i64 %5294
  %5298 = load float, ptr %5297, align 4, !tbaa !65
  %5299 = fadd fast float %5298, %5296
  store float %5299, ptr %5297, align 4, !tbaa !65
  %5300 = add nuw nsw i64 %5294, 1
  %5301 = getelementptr inbounds float, ptr %5238, i64 %5300
  %5302 = load float, ptr %5301, align 4, !tbaa !65
  %5303 = getelementptr inbounds float, ptr %21, i64 %5300
  %5304 = load float, ptr %5303, align 4, !tbaa !65
  %5305 = fadd fast float %5304, %5302
  store float %5305, ptr %5303, align 4, !tbaa !65
  %5306 = add nuw nsw i64 %5294, 2
  %5307 = getelementptr inbounds float, ptr %5238, i64 %5306
  %5308 = load float, ptr %5307, align 4, !tbaa !65
  %5309 = getelementptr inbounds float, ptr %21, i64 %5306
  %5310 = load float, ptr %5309, align 4, !tbaa !65
  %5311 = fadd fast float %5310, %5308
  store float %5311, ptr %5309, align 4, !tbaa !65
  %5312 = add nuw nsw i64 %5294, 3
  %5313 = getelementptr inbounds float, ptr %5238, i64 %5312
  %5314 = load float, ptr %5313, align 4, !tbaa !65
  %5315 = getelementptr inbounds float, ptr %21, i64 %5312
  %5316 = load float, ptr %5315, align 4, !tbaa !65
  %5317 = fadd fast float %5316, %5314
  store float %5317, ptr %5315, align 4, !tbaa !65
  %5318 = add nuw nsw i64 %5294, 4
  %5319 = icmp eq i64 %5318, %4929
  br i1 %5319, label %5320, label %5293, !llvm.loop !918

5320:                                             ; preds = %5290, %5293, %5274, %5224
  %5321 = add nuw nsw i64 %4958, 1
  %5322 = icmp eq i64 %5321, %4935
  br i1 %5322, label %5323, label %4957, !llvm.loop !919

5323:                                             ; preds = %5320, %4917
  %5324 = phi i32 [ 0, %4917 ], [ %4921, %5320 ]
  %5325 = sitofp i32 %5324 to float
  br i1 %4735, label %6183, label %5326

5326:                                             ; preds = %5323
  %5327 = zext i32 %4734 to i64
  %5328 = icmp ult i32 %4734, 8
  br i1 %5328, label %5344, label %5329

5329:                                             ; preds = %5326
  %5330 = and i64 %5327, 4294967288
  %5331 = insertelement <8 x float> poison, float %5325, i64 0
  %5332 = shufflevector <8 x float> %5331, <8 x float> poison, <8 x i32> zeroinitializer
  %5333 = fdiv fast <8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5332
  br label %5334

5334:                                             ; preds = %5334, %5329
  %5335 = phi i64 [ 0, %5329 ], [ %5340, %5334 ]
  %5336 = getelementptr inbounds float, ptr %18, i64 %5335
  %5337 = load <8 x float>, ptr %5336, align 4, !tbaa !65
  %5338 = fmul fast <8 x float> %5337, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %5339 = fmul fast <8 x float> %5338, %5333
  store <8 x float> %5339, ptr %5336, align 4, !tbaa !65
  %5340 = add nuw i64 %5335, 8
  %5341 = icmp eq i64 %5340, %5330
  br i1 %5341, label %5342, label %5334, !llvm.loop !920

5342:                                             ; preds = %5334
  %5343 = icmp eq i64 %5330, %5327
  br i1 %5343, label %5355, label %5344

5344:                                             ; preds = %5326, %5342
  %5345 = phi i64 [ 0, %5326 ], [ %5330, %5342 ]
  %5346 = fdiv fast float 1.000000e+00, %5325
  br label %5347

5347:                                             ; preds = %5344, %5347
  %5348 = phi i64 [ %5353, %5347 ], [ %5345, %5344 ]
  %5349 = getelementptr inbounds float, ptr %18, i64 %5348
  %5350 = load float, ptr %5349, align 4, !tbaa !65
  %5351 = fmul fast float %5350, 5.000000e-01
  %5352 = fmul fast float %5351, %5346
  store float %5352, ptr %5349, align 4, !tbaa !65
  %5353 = add nuw nsw i64 %5348, 1
  %5354 = icmp eq i64 %5353, %5327
  br i1 %5354, label %5355, label %5347, !llvm.loop !921

5355:                                             ; preds = %5347, %5342
  %5356 = fadd fast float %5325, 2.000000e+00
  %5357 = icmp ult i32 %4734, 8
  br i1 %5357, label %5372, label %5358

5358:                                             ; preds = %5355
  %5359 = and i64 %5327, 4294967288
  %5360 = insertelement <8 x float> poison, float %5356, i64 0
  %5361 = shufflevector <8 x float> %5360, <8 x float> poison, <8 x i32> zeroinitializer
  %5362 = fdiv fast <8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5361
  br label %5363

5363:                                             ; preds = %5363, %5358
  %5364 = phi i64 [ 0, %5358 ], [ %5368, %5363 ]
  %5365 = getelementptr inbounds float, ptr %21, i64 %5364
  %5366 = load <8 x float>, ptr %5365, align 4, !tbaa !65
  %5367 = fmul fast <8 x float> %5366, %5362
  store <8 x float> %5367, ptr %5365, align 4, !tbaa !65
  %5368 = add nuw i64 %5364, 8
  %5369 = icmp eq i64 %5368, %5359
  br i1 %5369, label %5370, label %5363, !llvm.loop !922

5370:                                             ; preds = %5363
  %5371 = icmp eq i64 %5359, %5327
  br i1 %5371, label %5382, label %5372

5372:                                             ; preds = %5355, %5370
  %5373 = phi i64 [ 0, %5355 ], [ %5359, %5370 ]
  %5374 = fdiv fast float 1.000000e+00, %5356
  br label %5375

5375:                                             ; preds = %5372, %5375
  %5376 = phi i64 [ %5380, %5375 ], [ %5373, %5372 ]
  %5377 = getelementptr inbounds float, ptr %21, i64 %5376
  %5378 = load float, ptr %5377, align 4, !tbaa !65
  %5379 = fmul fast float %5378, %5374
  store float %5379, ptr %5377, align 4, !tbaa !65
  %5380 = add nuw nsw i64 %5376, 1
  %5381 = icmp eq i64 %5380, %5327
  br i1 %5381, label %5382, label %5375, !llvm.loop !923

5382:                                             ; preds = %5375, %5370
  %5383 = icmp ult i32 %4734, 32
  br i1 %5383, label %5409, label %5384

5384:                                             ; preds = %5382
  %5385 = add i64 %4701, %4723
  %5386 = add i64 %4702, %4719
  %5387 = sub i64 %5385, %5386
  %5388 = icmp ult i64 %5387, 128
  br i1 %5388, label %5409, label %5389

5389:                                             ; preds = %5384
  %5390 = and i64 %5327, 4294967264
  br label %5391

5391:                                             ; preds = %5391, %5389
  %5392 = phi i64 [ 0, %5389 ], [ %5405, %5391 ]
  %5393 = getelementptr inbounds float, ptr %4720, i64 %5392
  %5394 = load <8 x float>, ptr %5393, align 4, !tbaa !65
  %5395 = getelementptr inbounds float, ptr %5393, i64 8
  %5396 = load <8 x float>, ptr %5395, align 4, !tbaa !65
  %5397 = getelementptr inbounds float, ptr %5393, i64 16
  %5398 = load <8 x float>, ptr %5397, align 4, !tbaa !65
  %5399 = getelementptr inbounds float, ptr %5393, i64 24
  %5400 = load <8 x float>, ptr %5399, align 4, !tbaa !65
  %5401 = getelementptr inbounds float, ptr %4724, i64 %5392
  store <8 x float> %5394, ptr %5401, align 4, !tbaa !65
  %5402 = getelementptr inbounds float, ptr %5401, i64 8
  store <8 x float> %5396, ptr %5402, align 4, !tbaa !65
  %5403 = getelementptr inbounds float, ptr %5401, i64 16
  store <8 x float> %5398, ptr %5403, align 4, !tbaa !65
  %5404 = getelementptr inbounds float, ptr %5401, i64 24
  store <8 x float> %5400, ptr %5404, align 4, !tbaa !65
  %5405 = add nuw i64 %5392, 32
  %5406 = icmp eq i64 %5405, %5390
  br i1 %5406, label %5407, label %5391, !llvm.loop !924

5407:                                             ; preds = %5391
  %5408 = icmp eq i64 %5390, %5327
  br i1 %5408, label %5446, label %5409

5409:                                             ; preds = %5384, %5382, %5407
  %5410 = phi i64 [ 0, %5384 ], [ 0, %5382 ], [ %5390, %5407 ]
  %5411 = xor i64 %5410, -1
  %5412 = add nsw i64 %5411, %5327
  %5413 = and i64 %5327, 3
  %5414 = icmp eq i64 %5413, 0
  br i1 %5414, label %5424, label %5415

5415:                                             ; preds = %5409, %5415
  %5416 = phi i64 [ %5421, %5415 ], [ %5410, %5409 ]
  %5417 = phi i64 [ %5422, %5415 ], [ 0, %5409 ]
  %5418 = getelementptr inbounds float, ptr %4720, i64 %5416
  %5419 = load float, ptr %5418, align 4, !tbaa !65
  %5420 = getelementptr inbounds float, ptr %4724, i64 %5416
  store float %5419, ptr %5420, align 4, !tbaa !65
  %5421 = add nuw nsw i64 %5416, 1
  %5422 = add i64 %5417, 1
  %5423 = icmp eq i64 %5422, %5413
  br i1 %5423, label %5424, label %5415, !llvm.loop !925

5424:                                             ; preds = %5415, %5409
  %5425 = phi i64 [ %5410, %5409 ], [ %5421, %5415 ]
  %5426 = icmp ult i64 %5412, 3
  br i1 %5426, label %5446, label %5427

5427:                                             ; preds = %5424, %5427
  %5428 = phi i64 [ %5444, %5427 ], [ %5425, %5424 ]
  %5429 = getelementptr inbounds float, ptr %4720, i64 %5428
  %5430 = load float, ptr %5429, align 4, !tbaa !65
  %5431 = getelementptr inbounds float, ptr %4724, i64 %5428
  store float %5430, ptr %5431, align 4, !tbaa !65
  %5432 = add nuw nsw i64 %5428, 1
  %5433 = getelementptr inbounds float, ptr %4720, i64 %5432
  %5434 = load float, ptr %5433, align 4, !tbaa !65
  %5435 = getelementptr inbounds float, ptr %4724, i64 %5432
  store float %5434, ptr %5435, align 4, !tbaa !65
  %5436 = add nuw nsw i64 %5428, 2
  %5437 = getelementptr inbounds float, ptr %4720, i64 %5436
  %5438 = load float, ptr %5437, align 4, !tbaa !65
  %5439 = getelementptr inbounds float, ptr %4724, i64 %5436
  store float %5438, ptr %5439, align 4, !tbaa !65
  %5440 = add nuw nsw i64 %5428, 3
  %5441 = getelementptr inbounds float, ptr %4720, i64 %5440
  %5442 = load float, ptr %5441, align 4, !tbaa !65
  %5443 = getelementptr inbounds float, ptr %4724, i64 %5440
  store float %5442, ptr %5443, align 4, !tbaa !65
  %5444 = add nuw nsw i64 %5428, 4
  %5445 = icmp eq i64 %5444, %5327
  br i1 %5445, label %5446, label %5427, !llvm.loop !926

5446:                                             ; preds = %5424, %5427, %5407
  %5447 = icmp ult i32 %4734, 32
  br i1 %5447, label %5476, label %5448

5448:                                             ; preds = %5446
  %5449 = and i64 %5327, 4294967264
  %5450 = insertelement <8 x float> poison, float %5325, i64 0
  %5451 = shufflevector <8 x float> %5450, <8 x float> poison, <8 x i32> zeroinitializer
  %5452 = insertelement <8 x float> poison, float %5325, i64 0
  %5453 = shufflevector <8 x float> %5452, <8 x float> poison, <8 x i32> zeroinitializer
  %5454 = insertelement <8 x float> poison, float %5325, i64 0
  %5455 = shufflevector <8 x float> %5454, <8 x float> poison, <8 x i32> zeroinitializer
  %5456 = insertelement <8 x float> poison, float %5325, i64 0
  %5457 = shufflevector <8 x float> %5456, <8 x float> poison, <8 x i32> zeroinitializer
  br label %5458

5458:                                             ; preds = %5458, %5448
  %5459 = phi i64 [ 0, %5448 ], [ %5472, %5458 ]
  %5460 = getelementptr inbounds float, ptr %4724, i64 %5459
  %5461 = load <8 x float>, ptr %5460, align 4, !tbaa !65
  %5462 = getelementptr inbounds float, ptr %5460, i64 8
  %5463 = load <8 x float>, ptr %5462, align 4, !tbaa !65
  %5464 = getelementptr inbounds float, ptr %5460, i64 16
  %5465 = load <8 x float>, ptr %5464, align 4, !tbaa !65
  %5466 = getelementptr inbounds float, ptr %5460, i64 24
  %5467 = load <8 x float>, ptr %5466, align 4, !tbaa !65
  %5468 = fmul fast <8 x float> %5461, %5451
  %5469 = fmul fast <8 x float> %5463, %5453
  %5470 = fmul fast <8 x float> %5465, %5455
  %5471 = fmul fast <8 x float> %5467, %5457
  store <8 x float> %5468, ptr %5460, align 4, !tbaa !65
  store <8 x float> %5469, ptr %5462, align 4, !tbaa !65
  store <8 x float> %5470, ptr %5464, align 4, !tbaa !65
  store <8 x float> %5471, ptr %5466, align 4, !tbaa !65
  %5472 = add nuw i64 %5459, 32
  %5473 = icmp eq i64 %5472, %5449
  br i1 %5473, label %5474, label %5458, !llvm.loop !927

5474:                                             ; preds = %5458
  %5475 = icmp eq i64 %5449, %5327
  br i1 %5475, label %5485, label %5476

5476:                                             ; preds = %5446, %5474
  %5477 = phi i64 [ 0, %5446 ], [ %5449, %5474 ]
  br label %5478

5478:                                             ; preds = %5476, %5478
  %5479 = phi i64 [ %5483, %5478 ], [ %5477, %5476 ]
  %5480 = getelementptr inbounds float, ptr %4724, i64 %5479
  %5481 = load float, ptr %5480, align 4, !tbaa !65
  %5482 = fmul fast float %5481, %5325
  store float %5482, ptr %5480, align 4, !tbaa !65
  %5483 = add nuw nsw i64 %5479, 1
  %5484 = icmp eq i64 %5483, %5327
  br i1 %5484, label %5485, label %5478, !llvm.loop !928

5485:                                             ; preds = %5478, %5474
  %5486 = icmp ult i32 %4734, 32
  br i1 %5486, label %5523, label %5487

5487:                                             ; preds = %5485
  %5488 = shl nuw nsw i64 %5327, 2
  %5489 = add nsw i64 %5488, %4723
  %5490 = getelementptr i8, ptr %4700, i64 %5489
  %5491 = getelementptr i8, ptr %18, i64 %5488
  %5492 = icmp ult ptr %4724, %5491
  %5493 = icmp ult ptr %18, %5490
  %5494 = and i1 %5492, %5493
  br i1 %5494, label %5523, label %5495

5495:                                             ; preds = %5487
  %5496 = and i64 %5327, 4294967264
  br label %5497

5497:                                             ; preds = %5497, %5495
  %5498 = phi i64 [ 0, %5495 ], [ %5519, %5497 ]
  %5499 = getelementptr inbounds float, ptr %18, i64 %5498
  %5500 = load <8 x float>, ptr %5499, align 4, !tbaa !65, !alias.scope !929
  %5501 = getelementptr inbounds float, ptr %5499, i64 8
  %5502 = load <8 x float>, ptr %5501, align 4, !tbaa !65, !alias.scope !929
  %5503 = getelementptr inbounds float, ptr %5499, i64 16
  %5504 = load <8 x float>, ptr %5503, align 4, !tbaa !65, !alias.scope !929
  %5505 = getelementptr inbounds float, ptr %5499, i64 24
  %5506 = load <8 x float>, ptr %5505, align 4, !tbaa !65, !alias.scope !929
  %5507 = getelementptr inbounds float, ptr %4724, i64 %5498
  %5508 = load <8 x float>, ptr %5507, align 4, !tbaa !65, !alias.scope !932, !noalias !929
  %5509 = getelementptr inbounds float, ptr %5507, i64 8
  %5510 = load <8 x float>, ptr %5509, align 4, !tbaa !65, !alias.scope !932, !noalias !929
  %5511 = getelementptr inbounds float, ptr %5507, i64 16
  %5512 = load <8 x float>, ptr %5511, align 4, !tbaa !65, !alias.scope !932, !noalias !929
  %5513 = getelementptr inbounds float, ptr %5507, i64 24
  %5514 = load <8 x float>, ptr %5513, align 4, !tbaa !65, !alias.scope !932, !noalias !929
  %5515 = fadd fast <8 x float> %5508, %5500
  %5516 = fadd fast <8 x float> %5510, %5502
  %5517 = fadd fast <8 x float> %5512, %5504
  %5518 = fadd fast <8 x float> %5514, %5506
  store <8 x float> %5515, ptr %5507, align 4, !tbaa !65, !alias.scope !932, !noalias !929
  store <8 x float> %5516, ptr %5509, align 4, !tbaa !65, !alias.scope !932, !noalias !929
  store <8 x float> %5517, ptr %5511, align 4, !tbaa !65, !alias.scope !932, !noalias !929
  store <8 x float> %5518, ptr %5513, align 4, !tbaa !65, !alias.scope !932, !noalias !929
  %5519 = add nuw i64 %5498, 32
  %5520 = icmp eq i64 %5519, %5496
  br i1 %5520, label %5521, label %5497, !llvm.loop !934

5521:                                             ; preds = %5497
  %5522 = icmp eq i64 %5496, %5327
  br i1 %5522, label %5570, label %5523

5523:                                             ; preds = %5487, %5485, %5521
  %5524 = phi i64 [ 0, %5487 ], [ 0, %5485 ], [ %5496, %5521 ]
  %5525 = xor i64 %5524, -1
  %5526 = add nsw i64 %5525, %5327
  %5527 = and i64 %5327, 3
  %5528 = icmp eq i64 %5527, 0
  br i1 %5528, label %5540, label %5529

5529:                                             ; preds = %5523, %5529
  %5530 = phi i64 [ %5537, %5529 ], [ %5524, %5523 ]
  %5531 = phi i64 [ %5538, %5529 ], [ 0, %5523 ]
  %5532 = getelementptr inbounds float, ptr %18, i64 %5530
  %5533 = load float, ptr %5532, align 4, !tbaa !65
  %5534 = getelementptr inbounds float, ptr %4724, i64 %5530
  %5535 = load float, ptr %5534, align 4, !tbaa !65
  %5536 = fadd fast float %5535, %5533
  store float %5536, ptr %5534, align 4, !tbaa !65
  %5537 = add nuw nsw i64 %5530, 1
  %5538 = add i64 %5531, 1
  %5539 = icmp eq i64 %5538, %5527
  br i1 %5539, label %5540, label %5529, !llvm.loop !935

5540:                                             ; preds = %5529, %5523
  %5541 = phi i64 [ %5524, %5523 ], [ %5537, %5529 ]
  %5542 = icmp ult i64 %5526, 3
  br i1 %5542, label %5570, label %5543

5543:                                             ; preds = %5540, %5543
  %5544 = phi i64 [ %5568, %5543 ], [ %5541, %5540 ]
  %5545 = getelementptr inbounds float, ptr %18, i64 %5544
  %5546 = load float, ptr %5545, align 4, !tbaa !65
  %5547 = getelementptr inbounds float, ptr %4724, i64 %5544
  %5548 = load float, ptr %5547, align 4, !tbaa !65
  %5549 = fadd fast float %5548, %5546
  store float %5549, ptr %5547, align 4, !tbaa !65
  %5550 = add nuw nsw i64 %5544, 1
  %5551 = getelementptr inbounds float, ptr %18, i64 %5550
  %5552 = load float, ptr %5551, align 4, !tbaa !65
  %5553 = getelementptr inbounds float, ptr %4724, i64 %5550
  %5554 = load float, ptr %5553, align 4, !tbaa !65
  %5555 = fadd fast float %5554, %5552
  store float %5555, ptr %5553, align 4, !tbaa !65
  %5556 = add nuw nsw i64 %5544, 2
  %5557 = getelementptr inbounds float, ptr %18, i64 %5556
  %5558 = load float, ptr %5557, align 4, !tbaa !65
  %5559 = getelementptr inbounds float, ptr %4724, i64 %5556
  %5560 = load float, ptr %5559, align 4, !tbaa !65
  %5561 = fadd fast float %5560, %5558
  store float %5561, ptr %5559, align 4, !tbaa !65
  %5562 = add nuw nsw i64 %5544, 3
  %5563 = getelementptr inbounds float, ptr %18, i64 %5562
  %5564 = load float, ptr %5563, align 4, !tbaa !65
  %5565 = getelementptr inbounds float, ptr %4724, i64 %5562
  %5566 = load float, ptr %5565, align 4, !tbaa !65
  %5567 = fadd fast float %5566, %5564
  store float %5567, ptr %5565, align 4, !tbaa !65
  %5568 = add nuw nsw i64 %5544, 4
  %5569 = icmp eq i64 %5568, %5327
  br i1 %5569, label %5570, label %5543, !llvm.loop !936

5570:                                             ; preds = %5540, %5543, %5521
  %5571 = icmp ult i32 %4734, 32
  br i1 %5571, label %5608, label %5572

5572:                                             ; preds = %5570
  %5573 = shl nuw nsw i64 %5327, 2
  %5574 = add nsw i64 %5573, %4723
  %5575 = getelementptr i8, ptr %4699, i64 %5574
  %5576 = getelementptr i8, ptr %21, i64 %5573
  %5577 = icmp ult ptr %4724, %5576
  %5578 = icmp ult ptr %21, %5575
  %5579 = and i1 %5577, %5578
  br i1 %5579, label %5608, label %5580

5580:                                             ; preds = %5572
  %5581 = and i64 %5327, 4294967264
  br label %5582

5582:                                             ; preds = %5582, %5580
  %5583 = phi i64 [ 0, %5580 ], [ %5604, %5582 ]
  %5584 = getelementptr inbounds float, ptr %21, i64 %5583
  %5585 = load <8 x float>, ptr %5584, align 4, !tbaa !65, !alias.scope !937
  %5586 = getelementptr inbounds float, ptr %5584, i64 8
  %5587 = load <8 x float>, ptr %5586, align 4, !tbaa !65, !alias.scope !937
  %5588 = getelementptr inbounds float, ptr %5584, i64 16
  %5589 = load <8 x float>, ptr %5588, align 4, !tbaa !65, !alias.scope !937
  %5590 = getelementptr inbounds float, ptr %5584, i64 24
  %5591 = load <8 x float>, ptr %5590, align 4, !tbaa !65, !alias.scope !937
  %5592 = getelementptr inbounds float, ptr %4724, i64 %5583
  %5593 = load <8 x float>, ptr %5592, align 4, !tbaa !65, !alias.scope !940, !noalias !937
  %5594 = getelementptr inbounds float, ptr %5592, i64 8
  %5595 = load <8 x float>, ptr %5594, align 4, !tbaa !65, !alias.scope !940, !noalias !937
  %5596 = getelementptr inbounds float, ptr %5592, i64 16
  %5597 = load <8 x float>, ptr %5596, align 4, !tbaa !65, !alias.scope !940, !noalias !937
  %5598 = getelementptr inbounds float, ptr %5592, i64 24
  %5599 = load <8 x float>, ptr %5598, align 4, !tbaa !65, !alias.scope !940, !noalias !937
  %5600 = fadd fast <8 x float> %5593, %5585
  %5601 = fadd fast <8 x float> %5595, %5587
  %5602 = fadd fast <8 x float> %5597, %5589
  %5603 = fadd fast <8 x float> %5599, %5591
  store <8 x float> %5600, ptr %5592, align 4, !tbaa !65, !alias.scope !940, !noalias !937
  store <8 x float> %5601, ptr %5594, align 4, !tbaa !65, !alias.scope !940, !noalias !937
  store <8 x float> %5602, ptr %5596, align 4, !tbaa !65, !alias.scope !940, !noalias !937
  store <8 x float> %5603, ptr %5598, align 4, !tbaa !65, !alias.scope !940, !noalias !937
  %5604 = add nuw i64 %5583, 32
  %5605 = icmp eq i64 %5604, %5581
  br i1 %5605, label %5606, label %5582, !llvm.loop !942

5606:                                             ; preds = %5582
  %5607 = icmp eq i64 %5581, %5327
  br i1 %5607, label %5655, label %5608

5608:                                             ; preds = %5572, %5570, %5606
  %5609 = phi i64 [ 0, %5572 ], [ 0, %5570 ], [ %5581, %5606 ]
  %5610 = xor i64 %5609, -1
  %5611 = add nsw i64 %5610, %5327
  %5612 = and i64 %5327, 3
  %5613 = icmp eq i64 %5612, 0
  br i1 %5613, label %5625, label %5614

5614:                                             ; preds = %5608, %5614
  %5615 = phi i64 [ %5622, %5614 ], [ %5609, %5608 ]
  %5616 = phi i64 [ %5623, %5614 ], [ 0, %5608 ]
  %5617 = getelementptr inbounds float, ptr %21, i64 %5615
  %5618 = load float, ptr %5617, align 4, !tbaa !65
  %5619 = getelementptr inbounds float, ptr %4724, i64 %5615
  %5620 = load float, ptr %5619, align 4, !tbaa !65
  %5621 = fadd fast float %5620, %5618
  store float %5621, ptr %5619, align 4, !tbaa !65
  %5622 = add nuw nsw i64 %5615, 1
  %5623 = add i64 %5616, 1
  %5624 = icmp eq i64 %5623, %5612
  br i1 %5624, label %5625, label %5614, !llvm.loop !943

5625:                                             ; preds = %5614, %5608
  %5626 = phi i64 [ %5609, %5608 ], [ %5622, %5614 ]
  %5627 = icmp ult i64 %5611, 3
  br i1 %5627, label %5655, label %5628

5628:                                             ; preds = %5625, %5628
  %5629 = phi i64 [ %5653, %5628 ], [ %5626, %5625 ]
  %5630 = getelementptr inbounds float, ptr %21, i64 %5629
  %5631 = load float, ptr %5630, align 4, !tbaa !65
  %5632 = getelementptr inbounds float, ptr %4724, i64 %5629
  %5633 = load float, ptr %5632, align 4, !tbaa !65
  %5634 = fadd fast float %5633, %5631
  store float %5634, ptr %5632, align 4, !tbaa !65
  %5635 = add nuw nsw i64 %5629, 1
  %5636 = getelementptr inbounds float, ptr %21, i64 %5635
  %5637 = load float, ptr %5636, align 4, !tbaa !65
  %5638 = getelementptr inbounds float, ptr %4724, i64 %5635
  %5639 = load float, ptr %5638, align 4, !tbaa !65
  %5640 = fadd fast float %5639, %5637
  store float %5640, ptr %5638, align 4, !tbaa !65
  %5641 = add nuw nsw i64 %5629, 2
  %5642 = getelementptr inbounds float, ptr %21, i64 %5641
  %5643 = load float, ptr %5642, align 4, !tbaa !65
  %5644 = getelementptr inbounds float, ptr %4724, i64 %5641
  %5645 = load float, ptr %5644, align 4, !tbaa !65
  %5646 = fadd fast float %5645, %5643
  store float %5646, ptr %5644, align 4, !tbaa !65
  %5647 = add nuw nsw i64 %5629, 3
  %5648 = getelementptr inbounds float, ptr %21, i64 %5647
  %5649 = load float, ptr %5648, align 4, !tbaa !65
  %5650 = getelementptr inbounds float, ptr %4724, i64 %5647
  %5651 = load float, ptr %5650, align 4, !tbaa !65
  %5652 = fadd fast float %5651, %5649
  store float %5652, ptr %5650, align 4, !tbaa !65
  %5653 = add nuw nsw i64 %5629, 4
  %5654 = icmp eq i64 %5653, %5327
  br i1 %5654, label %5655, label %5628, !llvm.loop !944

5655:                                             ; preds = %5625, %5628, %5606
  %5656 = add nuw nsw i32 %5324, 2
  %5657 = sitofp i32 %5656 to float
  %5658 = icmp ult i32 %4734, 8
  br i1 %5658, label %5673, label %5659

5659:                                             ; preds = %5655
  %5660 = and i64 %5327, 4294967288
  %5661 = insertelement <8 x float> poison, float %5657, i64 0
  %5662 = shufflevector <8 x float> %5661, <8 x float> poison, <8 x i32> zeroinitializer
  %5663 = fdiv fast <8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %5662
  br label %5664

5664:                                             ; preds = %5664, %5659
  %5665 = phi i64 [ 0, %5659 ], [ %5669, %5664 ]
  %5666 = getelementptr inbounds float, ptr %4724, i64 %5665
  %5667 = load <8 x float>, ptr %5666, align 4, !tbaa !65
  %5668 = fmul fast <8 x float> %5667, %5663
  store <8 x float> %5668, ptr %5666, align 4, !tbaa !65
  %5669 = add nuw i64 %5665, 8
  %5670 = icmp eq i64 %5669, %5660
  br i1 %5670, label %5671, label %5664, !llvm.loop !945

5671:                                             ; preds = %5664
  %5672 = icmp eq i64 %5660, %5327
  br i1 %5672, label %5683, label %5673

5673:                                             ; preds = %5655, %5671
  %5674 = phi i64 [ 0, %5655 ], [ %5660, %5671 ]
  %5675 = fdiv fast float 1.000000e+00, %5657
  br label %5676

5676:                                             ; preds = %5673, %5676
  %5677 = phi i64 [ %5681, %5676 ], [ %5674, %5673 ]
  %5678 = getelementptr inbounds float, ptr %4724, i64 %5677
  %5679 = load float, ptr %5678, align 4, !tbaa !65
  %5680 = fmul fast float %5679, %5675
  store float %5680, ptr %5678, align 4, !tbaa !65
  %5681 = add nuw nsw i64 %5677, 1
  %5682 = icmp eq i64 %5681, %5327
  br i1 %5682, label %5683, label %5676, !llvm.loop !946

5683:                                             ; preds = %5676, %5671
  %5684 = or i1 %4247, %4735
  br i1 %5684, label %6183, label %5685

5685:                                             ; preds = %5683
  %5686 = zext i32 %4734 to i64
  %5687 = icmp ult i32 %4734, 32
  br i1 %5687, label %5712, label %5688

5688:                                             ; preds = %5685
  %5689 = add i64 %4698, %4719
  %5690 = sub i64 %19, %5689
  %5691 = icmp ult i64 %5690, 128
  br i1 %5691, label %5712, label %5692

5692:                                             ; preds = %5688
  %5693 = and i64 %5327, 4294967264
  br label %5694

5694:                                             ; preds = %5694, %5692
  %5695 = phi i64 [ 0, %5692 ], [ %5708, %5694 ]
  %5696 = getelementptr inbounds float, ptr %4720, i64 %5695
  %5697 = load <8 x float>, ptr %5696, align 4, !tbaa !65
  %5698 = getelementptr inbounds float, ptr %5696, i64 8
  %5699 = load <8 x float>, ptr %5698, align 4, !tbaa !65
  %5700 = getelementptr inbounds float, ptr %5696, i64 16
  %5701 = load <8 x float>, ptr %5700, align 4, !tbaa !65
  %5702 = getelementptr inbounds float, ptr %5696, i64 24
  %5703 = load <8 x float>, ptr %5702, align 4, !tbaa !65
  %5704 = getelementptr inbounds float, ptr %18, i64 %5695
  store <8 x float> %5697, ptr %5704, align 4, !tbaa !65
  %5705 = getelementptr inbounds float, ptr %5704, i64 8
  store <8 x float> %5699, ptr %5705, align 4, !tbaa !65
  %5706 = getelementptr inbounds float, ptr %5704, i64 16
  store <8 x float> %5701, ptr %5706, align 4, !tbaa !65
  %5707 = getelementptr inbounds float, ptr %5704, i64 24
  store <8 x float> %5703, ptr %5707, align 4, !tbaa !65
  %5708 = add nuw i64 %5695, 32
  %5709 = icmp eq i64 %5708, %5693
  br i1 %5709, label %5710, label %5694, !llvm.loop !947

5710:                                             ; preds = %5694
  %5711 = icmp eq i64 %5693, %5327
  br i1 %5711, label %5749, label %5712

5712:                                             ; preds = %5688, %5685, %5710
  %5713 = phi i64 [ 0, %5688 ], [ 0, %5685 ], [ %5693, %5710 ]
  %5714 = xor i64 %5713, -1
  %5715 = add nsw i64 %5714, %5327
  %5716 = and i64 %5327, 3
  %5717 = icmp eq i64 %5716, 0
  br i1 %5717, label %5727, label %5718

5718:                                             ; preds = %5712, %5718
  %5719 = phi i64 [ %5724, %5718 ], [ %5713, %5712 ]
  %5720 = phi i64 [ %5725, %5718 ], [ 0, %5712 ]
  %5721 = getelementptr inbounds float, ptr %4720, i64 %5719
  %5722 = load float, ptr %5721, align 4, !tbaa !65
  %5723 = getelementptr inbounds float, ptr %18, i64 %5719
  store float %5722, ptr %5723, align 4, !tbaa !65
  %5724 = add nuw nsw i64 %5719, 1
  %5725 = add i64 %5720, 1
  %5726 = icmp eq i64 %5725, %5716
  br i1 %5726, label %5727, label %5718, !llvm.loop !948

5727:                                             ; preds = %5718, %5712
  %5728 = phi i64 [ %5713, %5712 ], [ %5724, %5718 ]
  %5729 = icmp ult i64 %5715, 3
  br i1 %5729, label %5749, label %5730

5730:                                             ; preds = %5727, %5730
  %5731 = phi i64 [ %5747, %5730 ], [ %5728, %5727 ]
  %5732 = getelementptr inbounds float, ptr %4720, i64 %5731
  %5733 = load float, ptr %5732, align 4, !tbaa !65
  %5734 = getelementptr inbounds float, ptr %18, i64 %5731
  store float %5733, ptr %5734, align 4, !tbaa !65
  %5735 = add nuw nsw i64 %5731, 1
  %5736 = getelementptr inbounds float, ptr %4720, i64 %5735
  %5737 = load float, ptr %5736, align 4, !tbaa !65
  %5738 = getelementptr inbounds float, ptr %18, i64 %5735
  store float %5737, ptr %5738, align 4, !tbaa !65
  %5739 = add nuw nsw i64 %5731, 2
  %5740 = getelementptr inbounds float, ptr %4720, i64 %5739
  %5741 = load float, ptr %5740, align 4, !tbaa !65
  %5742 = getelementptr inbounds float, ptr %18, i64 %5739
  store float %5741, ptr %5742, align 4, !tbaa !65
  %5743 = add nuw nsw i64 %5731, 3
  %5744 = getelementptr inbounds float, ptr %4720, i64 %5743
  %5745 = load float, ptr %5744, align 4, !tbaa !65
  %5746 = getelementptr inbounds float, ptr %18, i64 %5743
  store float %5745, ptr %5746, align 4, !tbaa !65
  %5747 = add nuw nsw i64 %5731, 4
  %5748 = icmp eq i64 %5747, %5686
  br i1 %5748, label %5749, label %5730, !llvm.loop !949

5749:                                             ; preds = %5727, %5730, %5710
  %5750 = icmp ult i32 %4734, 32
  br i1 %5750, label %5771, label %5751

5751:                                             ; preds = %5749
  %5752 = and i64 %5327, 4294967264
  br label %5753

5753:                                             ; preds = %5753, %5751
  %5754 = phi i64 [ 0, %5751 ], [ %5767, %5753 ]
  %5755 = getelementptr inbounds float, ptr %18, i64 %5754
  %5756 = load <8 x float>, ptr %5755, align 4, !tbaa !65
  %5757 = getelementptr inbounds float, ptr %5755, i64 8
  %5758 = load <8 x float>, ptr %5757, align 4, !tbaa !65
  %5759 = getelementptr inbounds float, ptr %5755, i64 16
  %5760 = load <8 x float>, ptr %5759, align 4, !tbaa !65
  %5761 = getelementptr inbounds float, ptr %5755, i64 24
  %5762 = load <8 x float>, ptr %5761, align 4, !tbaa !65
  %5763 = fmul fast <8 x float> %5756, <float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00>
  %5764 = fmul fast <8 x float> %5758, <float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00>
  %5765 = fmul fast <8 x float> %5760, <float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00>
  %5766 = fmul fast <8 x float> %5762, <float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00>
  store <8 x float> %5763, ptr %5755, align 4, !tbaa !65
  store <8 x float> %5764, ptr %5757, align 4, !tbaa !65
  store <8 x float> %5765, ptr %5759, align 4, !tbaa !65
  store <8 x float> %5766, ptr %5761, align 4, !tbaa !65
  %5767 = add nuw i64 %5754, 32
  %5768 = icmp eq i64 %5767, %5752
  br i1 %5768, label %5769, label %5753, !llvm.loop !950

5769:                                             ; preds = %5753
  %5770 = icmp eq i64 %5752, %5327
  br i1 %5770, label %5780, label %5771

5771:                                             ; preds = %5749, %5769
  %5772 = phi i64 [ 0, %5749 ], [ %5752, %5769 ]
  br label %5773

5773:                                             ; preds = %5771, %5773
  %5774 = phi i64 [ %5778, %5773 ], [ %5772, %5771 ]
  %5775 = getelementptr inbounds float, ptr %18, i64 %5774
  %5776 = load float, ptr %5775, align 4, !tbaa !65
  %5777 = fmul fast float %5776, 6.000000e+00
  store float %5777, ptr %5775, align 4, !tbaa !65
  %5778 = add nuw nsw i64 %5774, 1
  %5779 = icmp eq i64 %5778, %5686
  br i1 %5779, label %5780, label %5773, !llvm.loop !951

5780:                                             ; preds = %5773, %5769
  %5781 = icmp ult i32 %4734, 32
  br i1 %5781, label %5818, label %5782

5782:                                             ; preds = %5780
  %5783 = shl nuw nsw i64 %5327, 2
  %5784 = getelementptr i8, ptr %18, i64 %5783
  %5785 = add nsw i64 %5783, %4732
  %5786 = getelementptr i8, ptr %4697, i64 %5785
  %5787 = icmp ult ptr %18, %5786
  %5788 = icmp ult ptr %4733, %5784
  %5789 = and i1 %5787, %5788
  br i1 %5789, label %5818, label %5790

5790:                                             ; preds = %5782
  %5791 = and i64 %5327, 4294967264
  br label %5792

5792:                                             ; preds = %5792, %5790
  %5793 = phi i64 [ 0, %5790 ], [ %5814, %5792 ]
  %5794 = getelementptr inbounds float, ptr %4733, i64 %5793
  %5795 = load <8 x float>, ptr %5794, align 4, !tbaa !65, !alias.scope !952
  %5796 = getelementptr inbounds float, ptr %5794, i64 8
  %5797 = load <8 x float>, ptr %5796, align 4, !tbaa !65, !alias.scope !952
  %5798 = getelementptr inbounds float, ptr %5794, i64 16
  %5799 = load <8 x float>, ptr %5798, align 4, !tbaa !65, !alias.scope !952
  %5800 = getelementptr inbounds float, ptr %5794, i64 24
  %5801 = load <8 x float>, ptr %5800, align 4, !tbaa !65, !alias.scope !952
  %5802 = getelementptr inbounds float, ptr %18, i64 %5793
  %5803 = load <8 x float>, ptr %5802, align 4, !tbaa !65, !alias.scope !955, !noalias !952
  %5804 = getelementptr inbounds float, ptr %5802, i64 8
  %5805 = load <8 x float>, ptr %5804, align 4, !tbaa !65, !alias.scope !955, !noalias !952
  %5806 = getelementptr inbounds float, ptr %5802, i64 16
  %5807 = load <8 x float>, ptr %5806, align 4, !tbaa !65, !alias.scope !955, !noalias !952
  %5808 = getelementptr inbounds float, ptr %5802, i64 24
  %5809 = load <8 x float>, ptr %5808, align 4, !tbaa !65, !alias.scope !955, !noalias !952
  %5810 = fadd fast <8 x float> %5803, %5795
  %5811 = fadd fast <8 x float> %5805, %5797
  %5812 = fadd fast <8 x float> %5807, %5799
  %5813 = fadd fast <8 x float> %5809, %5801
  store <8 x float> %5810, ptr %5802, align 4, !tbaa !65, !alias.scope !955, !noalias !952
  store <8 x float> %5811, ptr %5804, align 4, !tbaa !65, !alias.scope !955, !noalias !952
  store <8 x float> %5812, ptr %5806, align 4, !tbaa !65, !alias.scope !955, !noalias !952
  store <8 x float> %5813, ptr %5808, align 4, !tbaa !65, !alias.scope !955, !noalias !952
  %5814 = add nuw i64 %5793, 32
  %5815 = icmp eq i64 %5814, %5791
  br i1 %5815, label %5816, label %5792, !llvm.loop !957

5816:                                             ; preds = %5792
  %5817 = icmp eq i64 %5791, %5327
  br i1 %5817, label %5865, label %5818

5818:                                             ; preds = %5782, %5780, %5816
  %5819 = phi i64 [ 0, %5782 ], [ 0, %5780 ], [ %5791, %5816 ]
  %5820 = xor i64 %5819, -1
  %5821 = add nsw i64 %5820, %5327
  %5822 = and i64 %5327, 3
  %5823 = icmp eq i64 %5822, 0
  br i1 %5823, label %5835, label %5824

5824:                                             ; preds = %5818, %5824
  %5825 = phi i64 [ %5832, %5824 ], [ %5819, %5818 ]
  %5826 = phi i64 [ %5833, %5824 ], [ 0, %5818 ]
  %5827 = getelementptr inbounds float, ptr %4733, i64 %5825
  %5828 = load float, ptr %5827, align 4, !tbaa !65
  %5829 = getelementptr inbounds float, ptr %18, i64 %5825
  %5830 = load float, ptr %5829, align 4, !tbaa !65
  %5831 = fadd fast float %5830, %5828
  store float %5831, ptr %5829, align 4, !tbaa !65
  %5832 = add nuw nsw i64 %5825, 1
  %5833 = add i64 %5826, 1
  %5834 = icmp eq i64 %5833, %5822
  br i1 %5834, label %5835, label %5824, !llvm.loop !958

5835:                                             ; preds = %5824, %5818
  %5836 = phi i64 [ %5819, %5818 ], [ %5832, %5824 ]
  %5837 = icmp ult i64 %5821, 3
  br i1 %5837, label %5865, label %5838

5838:                                             ; preds = %5835, %5838
  %5839 = phi i64 [ %5863, %5838 ], [ %5836, %5835 ]
  %5840 = getelementptr inbounds float, ptr %4733, i64 %5839
  %5841 = load float, ptr %5840, align 4, !tbaa !65
  %5842 = getelementptr inbounds float, ptr %18, i64 %5839
  %5843 = load float, ptr %5842, align 4, !tbaa !65
  %5844 = fadd fast float %5843, %5841
  store float %5844, ptr %5842, align 4, !tbaa !65
  %5845 = add nuw nsw i64 %5839, 1
  %5846 = getelementptr inbounds float, ptr %4733, i64 %5845
  %5847 = load float, ptr %5846, align 4, !tbaa !65
  %5848 = getelementptr inbounds float, ptr %18, i64 %5845
  %5849 = load float, ptr %5848, align 4, !tbaa !65
  %5850 = fadd fast float %5849, %5847
  store float %5850, ptr %5848, align 4, !tbaa !65
  %5851 = add nuw nsw i64 %5839, 2
  %5852 = getelementptr inbounds float, ptr %4733, i64 %5851
  %5853 = load float, ptr %5852, align 4, !tbaa !65
  %5854 = getelementptr inbounds float, ptr %18, i64 %5851
  %5855 = load float, ptr %5854, align 4, !tbaa !65
  %5856 = fadd fast float %5855, %5853
  store float %5856, ptr %5854, align 4, !tbaa !65
  %5857 = add nuw nsw i64 %5839, 3
  %5858 = getelementptr inbounds float, ptr %4733, i64 %5857
  %5859 = load float, ptr %5858, align 4, !tbaa !65
  %5860 = getelementptr inbounds float, ptr %18, i64 %5857
  %5861 = load float, ptr %5860, align 4, !tbaa !65
  %5862 = fadd fast float %5861, %5859
  store float %5862, ptr %5860, align 4, !tbaa !65
  %5863 = add nuw nsw i64 %5839, 4
  %5864 = icmp eq i64 %5863, %5686
  br i1 %5864, label %5865, label %5838, !llvm.loop !959

5865:                                             ; preds = %5835, %5838, %5816
  %5866 = getelementptr inbounds i8, ptr %4690, i64 %4918
  %5867 = icmp ult i32 %4734, 32
  br i1 %5867, label %5904, label %5868

5868:                                             ; preds = %5865
  %5869 = shl nuw nsw i64 %5327, 2
  %5870 = getelementptr i8, ptr %18, i64 %5869
  %5871 = add nsw i64 %4918, %5869
  %5872 = getelementptr i8, ptr %4696, i64 %5871
  %5873 = icmp ult ptr %18, %5872
  %5874 = icmp ult ptr %5866, %5870
  %5875 = and i1 %5873, %5874
  br i1 %5875, label %5904, label %5876

5876:                                             ; preds = %5868
  %5877 = and i64 %5327, 4294967264
  br label %5878

5878:                                             ; preds = %5878, %5876
  %5879 = phi i64 [ 0, %5876 ], [ %5900, %5878 ]
  %5880 = getelementptr inbounds float, ptr %5866, i64 %5879
  %5881 = load <8 x float>, ptr %5880, align 4, !tbaa !65, !alias.scope !960
  %5882 = getelementptr inbounds float, ptr %5880, i64 8
  %5883 = load <8 x float>, ptr %5882, align 4, !tbaa !65, !alias.scope !960
  %5884 = getelementptr inbounds float, ptr %5880, i64 16
  %5885 = load <8 x float>, ptr %5884, align 4, !tbaa !65, !alias.scope !960
  %5886 = getelementptr inbounds float, ptr %5880, i64 24
  %5887 = load <8 x float>, ptr %5886, align 4, !tbaa !65, !alias.scope !960
  %5888 = getelementptr inbounds float, ptr %18, i64 %5879
  %5889 = load <8 x float>, ptr %5888, align 4, !tbaa !65, !alias.scope !963, !noalias !960
  %5890 = getelementptr inbounds float, ptr %5888, i64 8
  %5891 = load <8 x float>, ptr %5890, align 4, !tbaa !65, !alias.scope !963, !noalias !960
  %5892 = getelementptr inbounds float, ptr %5888, i64 16
  %5893 = load <8 x float>, ptr %5892, align 4, !tbaa !65, !alias.scope !963, !noalias !960
  %5894 = getelementptr inbounds float, ptr %5888, i64 24
  %5895 = load <8 x float>, ptr %5894, align 4, !tbaa !65, !alias.scope !963, !noalias !960
  %5896 = fadd fast <8 x float> %5889, %5881
  %5897 = fadd fast <8 x float> %5891, %5883
  %5898 = fadd fast <8 x float> %5893, %5885
  %5899 = fadd fast <8 x float> %5895, %5887
  store <8 x float> %5896, ptr %5888, align 4, !tbaa !65, !alias.scope !963, !noalias !960
  store <8 x float> %5897, ptr %5890, align 4, !tbaa !65, !alias.scope !963, !noalias !960
  store <8 x float> %5898, ptr %5892, align 4, !tbaa !65, !alias.scope !963, !noalias !960
  store <8 x float> %5899, ptr %5894, align 4, !tbaa !65, !alias.scope !963, !noalias !960
  %5900 = add nuw i64 %5879, 32
  %5901 = icmp eq i64 %5900, %5877
  br i1 %5901, label %5902, label %5878, !llvm.loop !965

5902:                                             ; preds = %5878
  %5903 = icmp eq i64 %5877, %5327
  br i1 %5903, label %5951, label %5904

5904:                                             ; preds = %5868, %5865, %5902
  %5905 = phi i64 [ 0, %5868 ], [ 0, %5865 ], [ %5877, %5902 ]
  %5906 = xor i64 %5905, -1
  %5907 = add nsw i64 %5906, %5327
  %5908 = and i64 %5327, 3
  %5909 = icmp eq i64 %5908, 0
  br i1 %5909, label %5921, label %5910

5910:                                             ; preds = %5904, %5910
  %5911 = phi i64 [ %5918, %5910 ], [ %5905, %5904 ]
  %5912 = phi i64 [ %5919, %5910 ], [ 0, %5904 ]
  %5913 = getelementptr inbounds float, ptr %5866, i64 %5911
  %5914 = load float, ptr %5913, align 4, !tbaa !65
  %5915 = getelementptr inbounds float, ptr %18, i64 %5911
  %5916 = load float, ptr %5915, align 4, !tbaa !65
  %5917 = fadd fast float %5916, %5914
  store float %5917, ptr %5915, align 4, !tbaa !65
  %5918 = add nuw nsw i64 %5911, 1
  %5919 = add i64 %5912, 1
  %5920 = icmp eq i64 %5919, %5908
  br i1 %5920, label %5921, label %5910, !llvm.loop !966

5921:                                             ; preds = %5910, %5904
  %5922 = phi i64 [ %5905, %5904 ], [ %5918, %5910 ]
  %5923 = icmp ult i64 %5907, 3
  br i1 %5923, label %5951, label %5924

5924:                                             ; preds = %5921, %5924
  %5925 = phi i64 [ %5949, %5924 ], [ %5922, %5921 ]
  %5926 = getelementptr inbounds float, ptr %5866, i64 %5925
  %5927 = load float, ptr %5926, align 4, !tbaa !65
  %5928 = getelementptr inbounds float, ptr %18, i64 %5925
  %5929 = load float, ptr %5928, align 4, !tbaa !65
  %5930 = fadd fast float %5929, %5927
  store float %5930, ptr %5928, align 4, !tbaa !65
  %5931 = add nuw nsw i64 %5925, 1
  %5932 = getelementptr inbounds float, ptr %5866, i64 %5931
  %5933 = load float, ptr %5932, align 4, !tbaa !65
  %5934 = getelementptr inbounds float, ptr %18, i64 %5931
  %5935 = load float, ptr %5934, align 4, !tbaa !65
  %5936 = fadd fast float %5935, %5933
  store float %5936, ptr %5934, align 4, !tbaa !65
  %5937 = add nuw nsw i64 %5925, 2
  %5938 = getelementptr inbounds float, ptr %5866, i64 %5937
  %5939 = load float, ptr %5938, align 4, !tbaa !65
  %5940 = getelementptr inbounds float, ptr %18, i64 %5937
  %5941 = load float, ptr %5940, align 4, !tbaa !65
  %5942 = fadd fast float %5941, %5939
  store float %5942, ptr %5940, align 4, !tbaa !65
  %5943 = add nuw nsw i64 %5925, 3
  %5944 = getelementptr inbounds float, ptr %5866, i64 %5943
  %5945 = load float, ptr %5944, align 4, !tbaa !65
  %5946 = getelementptr inbounds float, ptr %18, i64 %5943
  %5947 = load float, ptr %5946, align 4, !tbaa !65
  %5948 = fadd fast float %5947, %5945
  store float %5948, ptr %5946, align 4, !tbaa !65
  %5949 = add nuw nsw i64 %5925, 4
  %5950 = icmp eq i64 %5949, %5686
  br i1 %5950, label %5951, label %5924, !llvm.loop !967

5951:                                             ; preds = %5921, %5924, %5902
  %5952 = icmp ult i32 %4734, 32
  br i1 %5952, label %5973, label %5953

5953:                                             ; preds = %5951
  %5954 = and i64 %5327, 4294967264
  br label %5955

5955:                                             ; preds = %5955, %5953
  %5956 = phi i64 [ 0, %5953 ], [ %5969, %5955 ]
  %5957 = getelementptr inbounds float, ptr %18, i64 %5956
  %5958 = load <8 x float>, ptr %5957, align 4, !tbaa !65
  %5959 = getelementptr inbounds float, ptr %5957, i64 8
  %5960 = load <8 x float>, ptr %5959, align 4, !tbaa !65
  %5961 = getelementptr inbounds float, ptr %5957, i64 16
  %5962 = load <8 x float>, ptr %5961, align 4, !tbaa !65
  %5963 = getelementptr inbounds float, ptr %5957, i64 24
  %5964 = load <8 x float>, ptr %5963, align 4, !tbaa !65
  %5965 = fmul fast <8 x float> %5958, <float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01>
  %5966 = fmul fast <8 x float> %5960, <float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01>
  %5967 = fmul fast <8 x float> %5962, <float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01>
  %5968 = fmul fast <8 x float> %5964, <float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01, float 1.250000e-01>
  store <8 x float> %5965, ptr %5957, align 4, !tbaa !65
  store <8 x float> %5966, ptr %5959, align 4, !tbaa !65
  store <8 x float> %5967, ptr %5961, align 4, !tbaa !65
  store <8 x float> %5968, ptr %5963, align 4, !tbaa !65
  %5969 = add nuw i64 %5956, 32
  %5970 = icmp eq i64 %5969, %5954
  br i1 %5970, label %5971, label %5955, !llvm.loop !968

5971:                                             ; preds = %5955
  %5972 = icmp eq i64 %5954, %5327
  br i1 %5972, label %5982, label %5973

5973:                                             ; preds = %5951, %5971
  %5974 = phi i64 [ 0, %5951 ], [ %5954, %5971 ]
  br label %5975

5975:                                             ; preds = %5973, %5975
  %5976 = phi i64 [ %5980, %5975 ], [ %5974, %5973 ]
  %5977 = getelementptr inbounds float, ptr %18, i64 %5976
  %5978 = load float, ptr %5977, align 4, !tbaa !65
  %5979 = fmul fast float %5978, 1.250000e-01
  store float %5979, ptr %5977, align 4, !tbaa !65
  %5980 = add nuw nsw i64 %5976, 1
  %5981 = icmp eq i64 %5980, %5686
  br i1 %5981, label %5982, label %5975, !llvm.loop !969

5982:                                             ; preds = %5975, %5971
  %5983 = icmp ult i32 %4734, 32
  br i1 %5983, label %6020, label %5984

5984:                                             ; preds = %5982
  %5985 = shl nuw nsw i64 %5327, 2
  %5986 = getelementptr i8, ptr %18, i64 %5985
  %5987 = add nsw i64 %5985, %4723
  %5988 = getelementptr i8, ptr %4695, i64 %5987
  %5989 = icmp ult ptr %18, %5988
  %5990 = icmp ult ptr %4724, %5986
  %5991 = and i1 %5989, %5990
  br i1 %5991, label %6020, label %5992

5992:                                             ; preds = %5984
  %5993 = and i64 %5327, 4294967264
  br label %5994

5994:                                             ; preds = %5994, %5992
  %5995 = phi i64 [ 0, %5992 ], [ %6016, %5994 ]
  %5996 = getelementptr inbounds float, ptr %4724, i64 %5995
  %5997 = load <8 x float>, ptr %5996, align 4, !tbaa !65, !alias.scope !970
  %5998 = getelementptr inbounds float, ptr %5996, i64 8
  %5999 = load <8 x float>, ptr %5998, align 4, !tbaa !65, !alias.scope !970
  %6000 = getelementptr inbounds float, ptr %5996, i64 16
  %6001 = load <8 x float>, ptr %6000, align 4, !tbaa !65, !alias.scope !970
  %6002 = getelementptr inbounds float, ptr %5996, i64 24
  %6003 = load <8 x float>, ptr %6002, align 4, !tbaa !65, !alias.scope !970
  %6004 = getelementptr inbounds float, ptr %18, i64 %5995
  %6005 = load <8 x float>, ptr %6004, align 4, !tbaa !65, !alias.scope !973, !noalias !970
  %6006 = getelementptr inbounds float, ptr %6004, i64 8
  %6007 = load <8 x float>, ptr %6006, align 4, !tbaa !65, !alias.scope !973, !noalias !970
  %6008 = getelementptr inbounds float, ptr %6004, i64 16
  %6009 = load <8 x float>, ptr %6008, align 4, !tbaa !65, !alias.scope !973, !noalias !970
  %6010 = getelementptr inbounds float, ptr %6004, i64 24
  %6011 = load <8 x float>, ptr %6010, align 4, !tbaa !65, !alias.scope !973, !noalias !970
  %6012 = fsub fast <8 x float> %6005, %5997
  %6013 = fsub fast <8 x float> %6007, %5999
  %6014 = fsub fast <8 x float> %6009, %6001
  %6015 = fsub fast <8 x float> %6011, %6003
  store <8 x float> %6012, ptr %6004, align 4, !tbaa !65, !alias.scope !973, !noalias !970
  store <8 x float> %6013, ptr %6006, align 4, !tbaa !65, !alias.scope !973, !noalias !970
  store <8 x float> %6014, ptr %6008, align 4, !tbaa !65, !alias.scope !973, !noalias !970
  store <8 x float> %6015, ptr %6010, align 4, !tbaa !65, !alias.scope !973, !noalias !970
  %6016 = add nuw i64 %5995, 32
  %6017 = icmp eq i64 %6016, %5993
  br i1 %6017, label %6018, label %5994, !llvm.loop !975

6018:                                             ; preds = %5994
  %6019 = icmp eq i64 %5993, %5327
  br i1 %6019, label %6067, label %6020

6020:                                             ; preds = %5984, %5982, %6018
  %6021 = phi i64 [ 0, %5984 ], [ 0, %5982 ], [ %5993, %6018 ]
  %6022 = xor i64 %6021, -1
  %6023 = add nsw i64 %6022, %5327
  %6024 = and i64 %5327, 3
  %6025 = icmp eq i64 %6024, 0
  br i1 %6025, label %6037, label %6026

6026:                                             ; preds = %6020, %6026
  %6027 = phi i64 [ %6034, %6026 ], [ %6021, %6020 ]
  %6028 = phi i64 [ %6035, %6026 ], [ 0, %6020 ]
  %6029 = getelementptr inbounds float, ptr %4724, i64 %6027
  %6030 = load float, ptr %6029, align 4, !tbaa !65
  %6031 = getelementptr inbounds float, ptr %18, i64 %6027
  %6032 = load float, ptr %6031, align 4, !tbaa !65
  %6033 = fsub fast float %6032, %6030
  store float %6033, ptr %6031, align 4, !tbaa !65
  %6034 = add nuw nsw i64 %6027, 1
  %6035 = add i64 %6028, 1
  %6036 = icmp eq i64 %6035, %6024
  br i1 %6036, label %6037, label %6026, !llvm.loop !976

6037:                                             ; preds = %6026, %6020
  %6038 = phi i64 [ %6021, %6020 ], [ %6034, %6026 ]
  %6039 = icmp ult i64 %6023, 3
  br i1 %6039, label %6067, label %6040

6040:                                             ; preds = %6037, %6040
  %6041 = phi i64 [ %6065, %6040 ], [ %6038, %6037 ]
  %6042 = getelementptr inbounds float, ptr %4724, i64 %6041
  %6043 = load float, ptr %6042, align 4, !tbaa !65
  %6044 = getelementptr inbounds float, ptr %18, i64 %6041
  %6045 = load float, ptr %6044, align 4, !tbaa !65
  %6046 = fsub fast float %6045, %6043
  store float %6046, ptr %6044, align 4, !tbaa !65
  %6047 = add nuw nsw i64 %6041, 1
  %6048 = getelementptr inbounds float, ptr %4724, i64 %6047
  %6049 = load float, ptr %6048, align 4, !tbaa !65
  %6050 = getelementptr inbounds float, ptr %18, i64 %6047
  %6051 = load float, ptr %6050, align 4, !tbaa !65
  %6052 = fsub fast float %6051, %6049
  store float %6052, ptr %6050, align 4, !tbaa !65
  %6053 = add nuw nsw i64 %6041, 2
  %6054 = getelementptr inbounds float, ptr %4724, i64 %6053
  %6055 = load float, ptr %6054, align 4, !tbaa !65
  %6056 = getelementptr inbounds float, ptr %18, i64 %6053
  %6057 = load float, ptr %6056, align 4, !tbaa !65
  %6058 = fsub fast float %6057, %6055
  store float %6058, ptr %6056, align 4, !tbaa !65
  %6059 = add nuw nsw i64 %6041, 3
  %6060 = getelementptr inbounds float, ptr %4724, i64 %6059
  %6061 = load float, ptr %6060, align 4, !tbaa !65
  %6062 = getelementptr inbounds float, ptr %18, i64 %6059
  %6063 = load float, ptr %6062, align 4, !tbaa !65
  %6064 = fsub fast float %6063, %6061
  store float %6064, ptr %6062, align 4, !tbaa !65
  %6065 = add nuw nsw i64 %6041, 4
  %6066 = icmp eq i64 %6065, %5686
  br i1 %6066, label %6067, label %6040, !llvm.loop !977

6067:                                             ; preds = %6037, %6040, %6018
  %6068 = icmp ult i32 %4734, 32
  br i1 %6068, label %6089, label %6069

6069:                                             ; preds = %6067
  %6070 = and i64 %5327, 4294967264
  br label %6071

6071:                                             ; preds = %6071, %6069
  %6072 = phi i64 [ 0, %6069 ], [ %6085, %6071 ]
  %6073 = getelementptr inbounds float, ptr %18, i64 %6072
  %6074 = load <8 x float>, ptr %6073, align 4, !tbaa !65
  %6075 = getelementptr inbounds float, ptr %6073, i64 8
  %6076 = load <8 x float>, ptr %6075, align 4, !tbaa !65
  %6077 = getelementptr inbounds float, ptr %6073, i64 16
  %6078 = load <8 x float>, ptr %6077, align 4, !tbaa !65
  %6079 = getelementptr inbounds float, ptr %6073, i64 24
  %6080 = load <8 x float>, ptr %6079, align 4, !tbaa !65
  %6081 = fmul fast <8 x float> %6074, %4706
  %6082 = fmul fast <8 x float> %6076, %4708
  %6083 = fmul fast <8 x float> %6078, %4710
  %6084 = fmul fast <8 x float> %6080, %4712
  store <8 x float> %6081, ptr %6073, align 4, !tbaa !65
  store <8 x float> %6082, ptr %6075, align 4, !tbaa !65
  store <8 x float> %6083, ptr %6077, align 4, !tbaa !65
  store <8 x float> %6084, ptr %6079, align 4, !tbaa !65
  %6085 = add nuw i64 %6072, 32
  %6086 = icmp eq i64 %6085, %6070
  br i1 %6086, label %6087, label %6071, !llvm.loop !978

6087:                                             ; preds = %6071
  %6088 = icmp eq i64 %6070, %5327
  br i1 %6088, label %6098, label %6089

6089:                                             ; preds = %6067, %6087
  %6090 = phi i64 [ 0, %6067 ], [ %6070, %6087 ]
  br label %6091

6091:                                             ; preds = %6089, %6091
  %6092 = phi i64 [ %6096, %6091 ], [ %6090, %6089 ]
  %6093 = getelementptr inbounds float, ptr %18, i64 %6092
  %6094 = load float, ptr %6093, align 4, !tbaa !65
  %6095 = fmul fast float %6094, %4248
  store float %6095, ptr %6093, align 4, !tbaa !65
  %6096 = add nuw nsw i64 %6092, 1
  %6097 = icmp eq i64 %6096, %5686
  br i1 %6097, label %6098, label %6091, !llvm.loop !979

6098:                                             ; preds = %6091, %6087
  %6099 = icmp ult i32 %4734, 32
  br i1 %6099, label %6136, label %6100

6100:                                             ; preds = %6098
  %6101 = shl nuw nsw i64 %5327, 2
  %6102 = add nsw i64 %6101, %4723
  %6103 = getelementptr i8, ptr %4694, i64 %6102
  %6104 = getelementptr i8, ptr %18, i64 %6101
  %6105 = icmp ult ptr %4724, %6104
  %6106 = icmp ult ptr %18, %6103
  %6107 = and i1 %6105, %6106
  br i1 %6107, label %6136, label %6108

6108:                                             ; preds = %6100
  %6109 = and i64 %5327, 4294967264
  br label %6110

6110:                                             ; preds = %6110, %6108
  %6111 = phi i64 [ 0, %6108 ], [ %6132, %6110 ]
  %6112 = getelementptr inbounds float, ptr %18, i64 %6111
  %6113 = load <8 x float>, ptr %6112, align 4, !tbaa !65, !alias.scope !980
  %6114 = getelementptr inbounds float, ptr %6112, i64 8
  %6115 = load <8 x float>, ptr %6114, align 4, !tbaa !65, !alias.scope !980
  %6116 = getelementptr inbounds float, ptr %6112, i64 16
  %6117 = load <8 x float>, ptr %6116, align 4, !tbaa !65, !alias.scope !980
  %6118 = getelementptr inbounds float, ptr %6112, i64 24
  %6119 = load <8 x float>, ptr %6118, align 4, !tbaa !65, !alias.scope !980
  %6120 = getelementptr inbounds float, ptr %4724, i64 %6111
  %6121 = load <8 x float>, ptr %6120, align 4, !tbaa !65, !alias.scope !983, !noalias !980
  %6122 = getelementptr inbounds float, ptr %6120, i64 8
  %6123 = load <8 x float>, ptr %6122, align 4, !tbaa !65, !alias.scope !983, !noalias !980
  %6124 = getelementptr inbounds float, ptr %6120, i64 16
  %6125 = load <8 x float>, ptr %6124, align 4, !tbaa !65, !alias.scope !983, !noalias !980
  %6126 = getelementptr inbounds float, ptr %6120, i64 24
  %6127 = load <8 x float>, ptr %6126, align 4, !tbaa !65, !alias.scope !983, !noalias !980
  %6128 = fadd fast <8 x float> %6121, %6113
  %6129 = fadd fast <8 x float> %6123, %6115
  %6130 = fadd fast <8 x float> %6125, %6117
  %6131 = fadd fast <8 x float> %6127, %6119
  store <8 x float> %6128, ptr %6120, align 4, !tbaa !65, !alias.scope !983, !noalias !980
  store <8 x float> %6129, ptr %6122, align 4, !tbaa !65, !alias.scope !983, !noalias !980
  store <8 x float> %6130, ptr %6124, align 4, !tbaa !65, !alias.scope !983, !noalias !980
  store <8 x float> %6131, ptr %6126, align 4, !tbaa !65, !alias.scope !983, !noalias !980
  %6132 = add nuw i64 %6111, 32
  %6133 = icmp eq i64 %6132, %6109
  br i1 %6133, label %6134, label %6110, !llvm.loop !985

6134:                                             ; preds = %6110
  %6135 = icmp eq i64 %6109, %5327
  br i1 %6135, label %6183, label %6136

6136:                                             ; preds = %6100, %6098, %6134
  %6137 = phi i64 [ 0, %6100 ], [ 0, %6098 ], [ %6109, %6134 ]
  %6138 = xor i64 %6137, -1
  %6139 = add nsw i64 %6138, %5327
  %6140 = and i64 %5327, 3
  %6141 = icmp eq i64 %6140, 0
  br i1 %6141, label %6153, label %6142

6142:                                             ; preds = %6136, %6142
  %6143 = phi i64 [ %6150, %6142 ], [ %6137, %6136 ]
  %6144 = phi i64 [ %6151, %6142 ], [ 0, %6136 ]
  %6145 = getelementptr inbounds float, ptr %18, i64 %6143
  %6146 = load float, ptr %6145, align 4, !tbaa !65
  %6147 = getelementptr inbounds float, ptr %4724, i64 %6143
  %6148 = load float, ptr %6147, align 4, !tbaa !65
  %6149 = fadd fast float %6148, %6146
  store float %6149, ptr %6147, align 4, !tbaa !65
  %6150 = add nuw nsw i64 %6143, 1
  %6151 = add i64 %6144, 1
  %6152 = icmp eq i64 %6151, %6140
  br i1 %6152, label %6153, label %6142, !llvm.loop !986

6153:                                             ; preds = %6142, %6136
  %6154 = phi i64 [ %6137, %6136 ], [ %6150, %6142 ]
  %6155 = icmp ult i64 %6139, 3
  br i1 %6155, label %6183, label %6156

6156:                                             ; preds = %6153, %6156
  %6157 = phi i64 [ %6181, %6156 ], [ %6154, %6153 ]
  %6158 = getelementptr inbounds float, ptr %18, i64 %6157
  %6159 = load float, ptr %6158, align 4, !tbaa !65
  %6160 = getelementptr inbounds float, ptr %4724, i64 %6157
  %6161 = load float, ptr %6160, align 4, !tbaa !65
  %6162 = fadd fast float %6161, %6159
  store float %6162, ptr %6160, align 4, !tbaa !65
  %6163 = add nuw nsw i64 %6157, 1
  %6164 = getelementptr inbounds float, ptr %18, i64 %6163
  %6165 = load float, ptr %6164, align 4, !tbaa !65
  %6166 = getelementptr inbounds float, ptr %4724, i64 %6163
  %6167 = load float, ptr %6166, align 4, !tbaa !65
  %6168 = fadd fast float %6167, %6165
  store float %6168, ptr %6166, align 4, !tbaa !65
  %6169 = add nuw nsw i64 %6157, 2
  %6170 = getelementptr inbounds float, ptr %18, i64 %6169
  %6171 = load float, ptr %6170, align 4, !tbaa !65
  %6172 = getelementptr inbounds float, ptr %4724, i64 %6169
  %6173 = load float, ptr %6172, align 4, !tbaa !65
  %6174 = fadd fast float %6173, %6171
  store float %6174, ptr %6172, align 4, !tbaa !65
  %6175 = add nuw nsw i64 %6157, 3
  %6176 = getelementptr inbounds float, ptr %18, i64 %6175
  %6177 = load float, ptr %6176, align 4, !tbaa !65
  %6178 = getelementptr inbounds float, ptr %4724, i64 %6175
  %6179 = load float, ptr %6178, align 4, !tbaa !65
  %6180 = fadd fast float %6179, %6177
  store float %6180, ptr %6178, align 4, !tbaa !65
  %6181 = add nuw nsw i64 %6157, 4
  %6182 = icmp eq i64 %6181, %5686
  br i1 %6182, label %6183, label %6156, !llvm.loop !987

6183:                                             ; preds = %6153, %6156, %6134, %5323, %5683
  %6184 = icmp slt i32 %4919, %11
  br i1 %6184, label %4713, label %6185, !llvm.loop !988

6185:                                             ; preds = %4684, %6183, %4253, %4252, %4688
  %6186 = add nuw nsw i64 %4229, 1
  %6187 = icmp eq i64 %6186, %2108
  br i1 %6187, label %6188, label %4228, !llvm.loop !989

6188:                                             ; preds = %6185, %2079
  %6189 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !14
  %6190 = load i32, ptr %15, align 8, !tbaa !37
  %6191 = sext i32 %6190 to i64
  %6192 = tail call ptr %6189(i64 noundef %6191, ptr noundef nonnull @.str.7) #23
  %6193 = ptrtoint ptr %6192 to i64
  %6194 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !14
  %6195 = load i32, ptr %15, align 8, !tbaa !37
  %6196 = sext i32 %6195 to i64
  %6197 = tail call ptr %6194(i64 noundef %6196, ptr noundef nonnull @.str.8) #23
  %6198 = ptrtoint ptr %6197 to i64
  br i1 %23, label %6199, label %8062

6199:                                             ; preds = %6188
  %6200 = getelementptr i8, ptr %0, i64 36
  %6201 = add nsw i32 %10, -1
  %6202 = shl nuw i32 1, %6201
  %6203 = add nuw i32 %6202, 1
  %6204 = sub nsw i32 %10, %14
  %6205 = add nuw i32 %6202, 2
  %6206 = mul i32 %6203, %6205
  %6207 = shl i32 %6205, %6204
  %6208 = add nsw i32 %6207, %6203
  %6209 = mul nsw i32 %6208, %16
  %6210 = sext i32 %6209 to i64
  %6211 = sub nsw i32 %10, %7
  %6212 = shl i32 %16, %6211
  %6213 = sext i32 %6212 to i64
  %6214 = icmp sgt i32 %13, 1
  %6215 = zext i32 %6 to i64
  %6216 = load i32, ptr %6200, align 4, !tbaa !74
  %6217 = add nsw i64 %6213, 24
  %6218 = mul i32 %16, %6205
  %6219 = mul i32 %6218, %6203
  %6220 = add nsw i64 %6210, 24
  br label %6221

6221:                                             ; preds = %6199, %8059
  %6222 = phi i32 [ %6216, %6199 ], [ %6382, %8059 ]
  %6223 = phi i64 [ 0, %6199 ], [ %8060, %8059 ]
  %6224 = getelementptr inbounds ptr, ptr %3, i64 %6223
  %6225 = load ptr, ptr %6224, align 8, !tbaa !14
  %6226 = sext i32 %6222 to i64
  %6227 = shl nsw i64 %6226, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %6192, i8 0, i64 %6227, i1 false)
  %6228 = getelementptr inbounds %struct.CCGFace, ptr %6225, i64 0, i32 2
  %6229 = load i16, ptr %6228, align 8, !tbaa !89
  %6230 = icmp sgt i16 %6229, 0
  %6231 = load i32, ptr %6200, align 4, !tbaa !74
  br i1 %6230, label %6232, label %6346

6232:                                             ; preds = %6221
  %6233 = zext i16 %6229 to i64
  %6234 = getelementptr inbounds %struct.CCGFace, ptr %6225, i64 1
  %6235 = zext i16 %6229 to i64
  %6236 = getelementptr inbounds ptr, ptr %6234, i64 %6235
  %6237 = getelementptr inbounds ptr, ptr %6236, i64 %6235
  %6238 = getelementptr i8, ptr %6237, i64 %6210
  %6239 = icmp sgt i32 %6231, 0
  %6240 = zext i32 %6231 to i64
  %6241 = shl nuw nsw i64 %6240, 2
  %6242 = getelementptr i8, ptr %6192, i64 %6241
  %6243 = getelementptr i8, ptr %6225, i64 %6220
  %6244 = shl nuw nsw i64 %6233, 4
  %6245 = getelementptr i8, ptr %6243, i64 %6244
  %6246 = getelementptr i8, ptr %6225, i64 %6220
  %6247 = add nuw nsw i64 %6244, %6241
  %6248 = getelementptr i8, ptr %6246, i64 %6247
  %6249 = icmp ult i32 %6231, 32
  %6250 = and i64 %6240, 4294967264
  %6251 = icmp eq i64 %6250, %6240
  %6252 = and i64 %6240, 3
  %6253 = icmp eq i64 %6252, 0
  br label %6254

6254:                                             ; preds = %6232, %6343
  %6255 = phi i64 [ 0, %6232 ], [ %6344, %6343 ]
  %6256 = trunc i64 %6255 to i32
  %6257 = mul i32 %6219, %6256
  %6258 = add i32 %6257, %16
  %6259 = sext i32 %6258 to i64
  %6260 = getelementptr i8, ptr %6245, i64 %6259
  %6261 = getelementptr i8, ptr %6248, i64 %6259
  %6262 = trunc i64 %6255 to i32
  %6263 = mul i32 %6206, %6262
  %6264 = add nsw i32 %6263, 1
  %6265 = mul nsw i32 %6264, %16
  %6266 = sext i32 %6265 to i64
  %6267 = getelementptr i8, ptr %6238, i64 %6266
  br i1 %6239, label %6268, label %6343

6268:                                             ; preds = %6254
  br i1 %6249, label %6298, label %6269

6269:                                             ; preds = %6268
  %6270 = icmp ult ptr %6192, %6261
  %6271 = icmp ult ptr %6260, %6242
  %6272 = and i1 %6270, %6271
  br i1 %6272, label %6298, label %6273

6273:                                             ; preds = %6269, %6273
  %6274 = phi i64 [ %6295, %6273 ], [ 0, %6269 ]
  %6275 = getelementptr inbounds float, ptr %6267, i64 %6274
  %6276 = load <8 x float>, ptr %6275, align 4, !tbaa !65, !alias.scope !990
  %6277 = getelementptr inbounds float, ptr %6275, i64 8
  %6278 = load <8 x float>, ptr %6277, align 4, !tbaa !65, !alias.scope !990
  %6279 = getelementptr inbounds float, ptr %6275, i64 16
  %6280 = load <8 x float>, ptr %6279, align 4, !tbaa !65, !alias.scope !990
  %6281 = getelementptr inbounds float, ptr %6275, i64 24
  %6282 = load <8 x float>, ptr %6281, align 4, !tbaa !65, !alias.scope !990
  %6283 = getelementptr inbounds float, ptr %6192, i64 %6274
  %6284 = load <8 x float>, ptr %6283, align 4, !tbaa !65, !alias.scope !993, !noalias !990
  %6285 = getelementptr inbounds float, ptr %6283, i64 8
  %6286 = load <8 x float>, ptr %6285, align 4, !tbaa !65, !alias.scope !993, !noalias !990
  %6287 = getelementptr inbounds float, ptr %6283, i64 16
  %6288 = load <8 x float>, ptr %6287, align 4, !tbaa !65, !alias.scope !993, !noalias !990
  %6289 = getelementptr inbounds float, ptr %6283, i64 24
  %6290 = load <8 x float>, ptr %6289, align 4, !tbaa !65, !alias.scope !993, !noalias !990
  %6291 = fadd fast <8 x float> %6284, %6276
  %6292 = fadd fast <8 x float> %6286, %6278
  %6293 = fadd fast <8 x float> %6288, %6280
  %6294 = fadd fast <8 x float> %6290, %6282
  store <8 x float> %6291, ptr %6283, align 4, !tbaa !65, !alias.scope !993, !noalias !990
  store <8 x float> %6292, ptr %6285, align 4, !tbaa !65, !alias.scope !993, !noalias !990
  store <8 x float> %6293, ptr %6287, align 4, !tbaa !65, !alias.scope !993, !noalias !990
  store <8 x float> %6294, ptr %6289, align 4, !tbaa !65, !alias.scope !993, !noalias !990
  %6295 = add nuw i64 %6274, 32
  %6296 = icmp eq i64 %6295, %6250
  br i1 %6296, label %6297, label %6273, !llvm.loop !995

6297:                                             ; preds = %6273
  br i1 %6251, label %6343, label %6298

6298:                                             ; preds = %6269, %6268, %6297
  %6299 = phi i64 [ 0, %6269 ], [ 0, %6268 ], [ %6250, %6297 ]
  %6300 = xor i64 %6299, -1
  %6301 = add nsw i64 %6300, %6240
  br i1 %6253, label %6313, label %6302

6302:                                             ; preds = %6298, %6302
  %6303 = phi i64 [ %6310, %6302 ], [ %6299, %6298 ]
  %6304 = phi i64 [ %6311, %6302 ], [ 0, %6298 ]
  %6305 = getelementptr inbounds float, ptr %6267, i64 %6303
  %6306 = load float, ptr %6305, align 4, !tbaa !65
  %6307 = getelementptr inbounds float, ptr %6192, i64 %6303
  %6308 = load float, ptr %6307, align 4, !tbaa !65
  %6309 = fadd fast float %6308, %6306
  store float %6309, ptr %6307, align 4, !tbaa !65
  %6310 = add nuw nsw i64 %6303, 1
  %6311 = add i64 %6304, 1
  %6312 = icmp eq i64 %6311, %6252
  br i1 %6312, label %6313, label %6302, !llvm.loop !996

6313:                                             ; preds = %6302, %6298
  %6314 = phi i64 [ %6299, %6298 ], [ %6310, %6302 ]
  %6315 = icmp ult i64 %6301, 3
  br i1 %6315, label %6343, label %6316

6316:                                             ; preds = %6313, %6316
  %6317 = phi i64 [ %6341, %6316 ], [ %6314, %6313 ]
  %6318 = getelementptr inbounds float, ptr %6267, i64 %6317
  %6319 = load float, ptr %6318, align 4, !tbaa !65
  %6320 = getelementptr inbounds float, ptr %6192, i64 %6317
  %6321 = load float, ptr %6320, align 4, !tbaa !65
  %6322 = fadd fast float %6321, %6319
  store float %6322, ptr %6320, align 4, !tbaa !65
  %6323 = add nuw nsw i64 %6317, 1
  %6324 = getelementptr inbounds float, ptr %6267, i64 %6323
  %6325 = load float, ptr %6324, align 4, !tbaa !65
  %6326 = getelementptr inbounds float, ptr %6192, i64 %6323
  %6327 = load float, ptr %6326, align 4, !tbaa !65
  %6328 = fadd fast float %6327, %6325
  store float %6328, ptr %6326, align 4, !tbaa !65
  %6329 = add nuw nsw i64 %6317, 2
  %6330 = getelementptr inbounds float, ptr %6267, i64 %6329
  %6331 = load float, ptr %6330, align 4, !tbaa !65
  %6332 = getelementptr inbounds float, ptr %6192, i64 %6329
  %6333 = load float, ptr %6332, align 4, !tbaa !65
  %6334 = fadd fast float %6333, %6331
  store float %6334, ptr %6332, align 4, !tbaa !65
  %6335 = add nuw nsw i64 %6317, 3
  %6336 = getelementptr inbounds float, ptr %6267, i64 %6335
  %6337 = load float, ptr %6336, align 4, !tbaa !65
  %6338 = getelementptr inbounds float, ptr %6192, i64 %6335
  %6339 = load float, ptr %6338, align 4, !tbaa !65
  %6340 = fadd fast float %6339, %6337
  store float %6340, ptr %6338, align 4, !tbaa !65
  %6341 = add nuw nsw i64 %6317, 4
  %6342 = icmp eq i64 %6341, %6240
  br i1 %6342, label %6343, label %6316, !llvm.loop !997

6343:                                             ; preds = %6313, %6316, %6297, %6254
  %6344 = add nuw nsw i64 %6255, 1
  %6345 = icmp eq i64 %6344, %6233
  br i1 %6345, label %6346, label %6254, !llvm.loop !998

6346:                                             ; preds = %6343, %6221
  %6347 = icmp sgt i32 %6231, 0
  br i1 %6347, label %6348, label %6376

6348:                                             ; preds = %6346
  %6349 = sitofp i16 %6229 to float
  %6350 = zext i32 %6231 to i64
  %6351 = icmp ult i32 %6231, 8
  br i1 %6351, label %6366, label %6352

6352:                                             ; preds = %6348
  %6353 = and i64 %6350, 4294967288
  %6354 = insertelement <8 x float> poison, float %6349, i64 0
  %6355 = shufflevector <8 x float> %6354, <8 x float> poison, <8 x i32> zeroinitializer
  %6356 = fdiv fast <8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %6355
  br label %6357

6357:                                             ; preds = %6357, %6352
  %6358 = phi i64 [ 0, %6352 ], [ %6362, %6357 ]
  %6359 = getelementptr inbounds float, ptr %6192, i64 %6358
  %6360 = load <8 x float>, ptr %6359, align 4, !tbaa !65
  %6361 = fmul fast <8 x float> %6360, %6356
  store <8 x float> %6361, ptr %6359, align 4, !tbaa !65
  %6362 = add nuw i64 %6358, 8
  %6363 = icmp eq i64 %6362, %6353
  br i1 %6363, label %6364, label %6357, !llvm.loop !999

6364:                                             ; preds = %6357
  %6365 = icmp eq i64 %6353, %6350
  br i1 %6365, label %6376, label %6366

6366:                                             ; preds = %6348, %6364
  %6367 = phi i64 [ 0, %6348 ], [ %6353, %6364 ]
  %6368 = fdiv fast float 1.000000e+00, %6349
  br label %6369

6369:                                             ; preds = %6366, %6369
  %6370 = phi i64 [ %6374, %6369 ], [ %6367, %6366 ]
  %6371 = getelementptr inbounds float, ptr %6192, i64 %6370
  %6372 = load float, ptr %6371, align 4, !tbaa !65
  %6373 = fmul fast float %6372, %6368
  store float %6373, ptr %6371, align 4, !tbaa !65
  %6374 = add nuw nsw i64 %6370, 1
  %6375 = icmp eq i64 %6374, %6350
  br i1 %6375, label %6376, label %6369, !llvm.loop !1000

6376:                                             ; preds = %6369, %6364, %6346
  %6377 = sext i32 %6231 to i64
  %6378 = shl nsw i64 %6377, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %6197, i8 0, i64 %6378, i1 false)
  %6379 = load i16, ptr %6228, align 8, !tbaa !89
  %6380 = sext i16 %6379 to i32
  %6381 = icmp sgt i16 %6379, 0
  %6382 = load i32, ptr %6200, align 4, !tbaa !74
  br i1 %6381, label %6383, label %6497

6383:                                             ; preds = %6376
  %6384 = getelementptr inbounds %struct.CCGFace, ptr %6225, i64 1
  %6385 = zext i16 %6379 to i64
  %6386 = getelementptr inbounds ptr, ptr %6384, i64 %6385
  %6387 = getelementptr inbounds ptr, ptr %6386, i64 %6385
  %6388 = getelementptr i8, ptr %6387, i64 %6213
  %6389 = icmp sgt i32 %6382, 0
  %6390 = zext i32 %6382 to i64
  %6391 = zext i32 %6380 to i64
  %6392 = shl nuw nsw i64 %6390, 2
  %6393 = getelementptr i8, ptr %6197, i64 %6392
  %6394 = getelementptr i8, ptr %6225, i64 %6217
  %6395 = shl nuw nsw i64 %6385, 4
  %6396 = getelementptr i8, ptr %6394, i64 %6395
  %6397 = getelementptr i8, ptr %6225, i64 %6217
  %6398 = add nuw nsw i64 %6395, %6392
  %6399 = getelementptr i8, ptr %6397, i64 %6398
  %6400 = icmp ult i32 %6382, 32
  %6401 = and i64 %6390, 4294967264
  %6402 = icmp eq i64 %6401, %6390
  %6403 = and i64 %6390, 3
  %6404 = icmp eq i64 %6403, 0
  br label %6405

6405:                                             ; preds = %6383, %6494
  %6406 = phi i64 [ 0, %6383 ], [ %6495, %6494 ]
  %6407 = trunc i64 %6406 to i32
  %6408 = mul i32 %6219, %6407
  %6409 = add i32 %6408, %16
  %6410 = sext i32 %6409 to i64
  %6411 = getelementptr i8, ptr %6396, i64 %6410
  %6412 = getelementptr i8, ptr %6399, i64 %6410
  %6413 = trunc i64 %6406 to i32
  %6414 = mul i32 %6206, %6413
  %6415 = add nsw i32 %6414, 1
  %6416 = mul nsw i32 %6415, %16
  %6417 = sext i32 %6416 to i64
  %6418 = getelementptr i8, ptr %6388, i64 %6417
  br i1 %6389, label %6419, label %6494

6419:                                             ; preds = %6405
  br i1 %6400, label %6449, label %6420

6420:                                             ; preds = %6419
  %6421 = icmp ult ptr %6197, %6412
  %6422 = icmp ult ptr %6411, %6393
  %6423 = and i1 %6421, %6422
  br i1 %6423, label %6449, label %6424

6424:                                             ; preds = %6420, %6424
  %6425 = phi i64 [ %6446, %6424 ], [ 0, %6420 ]
  %6426 = getelementptr inbounds float, ptr %6418, i64 %6425
  %6427 = load <8 x float>, ptr %6426, align 4, !tbaa !65, !alias.scope !1001
  %6428 = getelementptr inbounds float, ptr %6426, i64 8
  %6429 = load <8 x float>, ptr %6428, align 4, !tbaa !65, !alias.scope !1001
  %6430 = getelementptr inbounds float, ptr %6426, i64 16
  %6431 = load <8 x float>, ptr %6430, align 4, !tbaa !65, !alias.scope !1001
  %6432 = getelementptr inbounds float, ptr %6426, i64 24
  %6433 = load <8 x float>, ptr %6432, align 4, !tbaa !65, !alias.scope !1001
  %6434 = getelementptr inbounds float, ptr %6197, i64 %6425
  %6435 = load <8 x float>, ptr %6434, align 4, !tbaa !65, !alias.scope !1004, !noalias !1001
  %6436 = getelementptr inbounds float, ptr %6434, i64 8
  %6437 = load <8 x float>, ptr %6436, align 4, !tbaa !65, !alias.scope !1004, !noalias !1001
  %6438 = getelementptr inbounds float, ptr %6434, i64 16
  %6439 = load <8 x float>, ptr %6438, align 4, !tbaa !65, !alias.scope !1004, !noalias !1001
  %6440 = getelementptr inbounds float, ptr %6434, i64 24
  %6441 = load <8 x float>, ptr %6440, align 4, !tbaa !65, !alias.scope !1004, !noalias !1001
  %6442 = fadd fast <8 x float> %6435, %6427
  %6443 = fadd fast <8 x float> %6437, %6429
  %6444 = fadd fast <8 x float> %6439, %6431
  %6445 = fadd fast <8 x float> %6441, %6433
  store <8 x float> %6442, ptr %6434, align 4, !tbaa !65, !alias.scope !1004, !noalias !1001
  store <8 x float> %6443, ptr %6436, align 4, !tbaa !65, !alias.scope !1004, !noalias !1001
  store <8 x float> %6444, ptr %6438, align 4, !tbaa !65, !alias.scope !1004, !noalias !1001
  store <8 x float> %6445, ptr %6440, align 4, !tbaa !65, !alias.scope !1004, !noalias !1001
  %6446 = add nuw i64 %6425, 32
  %6447 = icmp eq i64 %6446, %6401
  br i1 %6447, label %6448, label %6424, !llvm.loop !1006

6448:                                             ; preds = %6424
  br i1 %6402, label %6494, label %6449

6449:                                             ; preds = %6420, %6419, %6448
  %6450 = phi i64 [ 0, %6420 ], [ 0, %6419 ], [ %6401, %6448 ]
  %6451 = xor i64 %6450, -1
  %6452 = add nsw i64 %6451, %6390
  br i1 %6404, label %6464, label %6453

6453:                                             ; preds = %6449, %6453
  %6454 = phi i64 [ %6461, %6453 ], [ %6450, %6449 ]
  %6455 = phi i64 [ %6462, %6453 ], [ 0, %6449 ]
  %6456 = getelementptr inbounds float, ptr %6418, i64 %6454
  %6457 = load float, ptr %6456, align 4, !tbaa !65
  %6458 = getelementptr inbounds float, ptr %6197, i64 %6454
  %6459 = load float, ptr %6458, align 4, !tbaa !65
  %6460 = fadd fast float %6459, %6457
  store float %6460, ptr %6458, align 4, !tbaa !65
  %6461 = add nuw nsw i64 %6454, 1
  %6462 = add i64 %6455, 1
  %6463 = icmp eq i64 %6462, %6403
  br i1 %6463, label %6464, label %6453, !llvm.loop !1007

6464:                                             ; preds = %6453, %6449
  %6465 = phi i64 [ %6450, %6449 ], [ %6461, %6453 ]
  %6466 = icmp ult i64 %6452, 3
  br i1 %6466, label %6494, label %6467

6467:                                             ; preds = %6464, %6467
  %6468 = phi i64 [ %6492, %6467 ], [ %6465, %6464 ]
  %6469 = getelementptr inbounds float, ptr %6418, i64 %6468
  %6470 = load float, ptr %6469, align 4, !tbaa !65
  %6471 = getelementptr inbounds float, ptr %6197, i64 %6468
  %6472 = load float, ptr %6471, align 4, !tbaa !65
  %6473 = fadd fast float %6472, %6470
  store float %6473, ptr %6471, align 4, !tbaa !65
  %6474 = add nuw nsw i64 %6468, 1
  %6475 = getelementptr inbounds float, ptr %6418, i64 %6474
  %6476 = load float, ptr %6475, align 4, !tbaa !65
  %6477 = getelementptr inbounds float, ptr %6197, i64 %6474
  %6478 = load float, ptr %6477, align 4, !tbaa !65
  %6479 = fadd fast float %6478, %6476
  store float %6479, ptr %6477, align 4, !tbaa !65
  %6480 = add nuw nsw i64 %6468, 2
  %6481 = getelementptr inbounds float, ptr %6418, i64 %6480
  %6482 = load float, ptr %6481, align 4, !tbaa !65
  %6483 = getelementptr inbounds float, ptr %6197, i64 %6480
  %6484 = load float, ptr %6483, align 4, !tbaa !65
  %6485 = fadd fast float %6484, %6482
  store float %6485, ptr %6483, align 4, !tbaa !65
  %6486 = add nuw nsw i64 %6468, 3
  %6487 = getelementptr inbounds float, ptr %6418, i64 %6486
  %6488 = load float, ptr %6487, align 4, !tbaa !65
  %6489 = getelementptr inbounds float, ptr %6197, i64 %6486
  %6490 = load float, ptr %6489, align 4, !tbaa !65
  %6491 = fadd fast float %6490, %6488
  store float %6491, ptr %6489, align 4, !tbaa !65
  %6492 = add nuw nsw i64 %6468, 4
  %6493 = icmp eq i64 %6492, %6390
  br i1 %6493, label %6494, label %6467, !llvm.loop !1008

6494:                                             ; preds = %6464, %6467, %6448, %6405
  %6495 = add nuw nsw i64 %6406, 1
  %6496 = icmp eq i64 %6495, %6391
  br i1 %6496, label %6497, label %6405, !llvm.loop !1009

6497:                                             ; preds = %6494, %6376
  %6498 = sitofp i16 %6379 to float
  %6499 = fdiv fast float 1.000000e+00, %6498
  %6500 = icmp sgt i32 %6382, 0
  br i1 %6500, label %6506, label %6501

6501:                                             ; preds = %6497
  %6502 = getelementptr inbounds %struct.CCGFace, ptr %6225, i64 1
  %6503 = sext i16 %6379 to i64
  %6504 = getelementptr inbounds ptr, ptr %6502, i64 %6503
  %6505 = getelementptr inbounds ptr, ptr %6504, i64 %6503
  br label %6803

6506:                                             ; preds = %6497
  %6507 = zext i32 %6382 to i64
  %6508 = icmp ult i32 %6382, 32
  br i1 %6508, label %6537, label %6509

6509:                                             ; preds = %6506
  %6510 = and i64 %6507, 4294967264
  %6511 = insertelement <8 x float> poison, float %6499, i64 0
  %6512 = shufflevector <8 x float> %6511, <8 x float> poison, <8 x i32> zeroinitializer
  %6513 = insertelement <8 x float> poison, float %6499, i64 0
  %6514 = shufflevector <8 x float> %6513, <8 x float> poison, <8 x i32> zeroinitializer
  %6515 = insertelement <8 x float> poison, float %6499, i64 0
  %6516 = shufflevector <8 x float> %6515, <8 x float> poison, <8 x i32> zeroinitializer
  %6517 = insertelement <8 x float> poison, float %6499, i64 0
  %6518 = shufflevector <8 x float> %6517, <8 x float> poison, <8 x i32> zeroinitializer
  br label %6519

6519:                                             ; preds = %6519, %6509
  %6520 = phi i64 [ 0, %6509 ], [ %6533, %6519 ]
  %6521 = getelementptr inbounds float, ptr %6197, i64 %6520
  %6522 = load <8 x float>, ptr %6521, align 4, !tbaa !65
  %6523 = getelementptr inbounds float, ptr %6521, i64 8
  %6524 = load <8 x float>, ptr %6523, align 4, !tbaa !65
  %6525 = getelementptr inbounds float, ptr %6521, i64 16
  %6526 = load <8 x float>, ptr %6525, align 4, !tbaa !65
  %6527 = getelementptr inbounds float, ptr %6521, i64 24
  %6528 = load <8 x float>, ptr %6527, align 4, !tbaa !65
  %6529 = fmul fast <8 x float> %6522, %6512
  %6530 = fmul fast <8 x float> %6524, %6514
  %6531 = fmul fast <8 x float> %6526, %6516
  %6532 = fmul fast <8 x float> %6528, %6518
  store <8 x float> %6529, ptr %6521, align 4, !tbaa !65
  store <8 x float> %6530, ptr %6523, align 4, !tbaa !65
  store <8 x float> %6531, ptr %6525, align 4, !tbaa !65
  store <8 x float> %6532, ptr %6527, align 4, !tbaa !65
  %6533 = add nuw i64 %6520, 32
  %6534 = icmp eq i64 %6533, %6510
  br i1 %6534, label %6535, label %6519, !llvm.loop !1010

6535:                                             ; preds = %6519
  %6536 = icmp eq i64 %6510, %6507
  br i1 %6536, label %6546, label %6537

6537:                                             ; preds = %6506, %6535
  %6538 = phi i64 [ 0, %6506 ], [ %6510, %6535 ]
  br label %6539

6539:                                             ; preds = %6537, %6539
  %6540 = phi i64 [ %6544, %6539 ], [ %6538, %6537 ]
  %6541 = getelementptr inbounds float, ptr %6197, i64 %6540
  %6542 = load float, ptr %6541, align 4, !tbaa !65
  %6543 = fmul fast float %6542, %6499
  store float %6543, ptr %6541, align 4, !tbaa !65
  %6544 = add nuw nsw i64 %6540, 1
  %6545 = icmp eq i64 %6544, %6507
  br i1 %6545, label %6546, label %6539, !llvm.loop !1011

6546:                                             ; preds = %6539, %6535
  %6547 = getelementptr inbounds %struct.CCGFace, ptr %6225, i64 1
  %6548 = sext i16 %6379 to i64
  %6549 = getelementptr inbounds ptr, ptr %6547, i64 %6548
  %6550 = getelementptr inbounds ptr, ptr %6549, i64 %6548
  %6551 = fadd fast float %6498, -2.000000e+00
  %6552 = icmp ult i32 %6382, 32
  br i1 %6552, label %6581, label %6553

6553:                                             ; preds = %6546
  %6554 = and i64 %6507, 4294967264
  %6555 = insertelement <8 x float> poison, float %6551, i64 0
  %6556 = shufflevector <8 x float> %6555, <8 x float> poison, <8 x i32> zeroinitializer
  %6557 = insertelement <8 x float> poison, float %6551, i64 0
  %6558 = shufflevector <8 x float> %6557, <8 x float> poison, <8 x i32> zeroinitializer
  %6559 = insertelement <8 x float> poison, float %6551, i64 0
  %6560 = shufflevector <8 x float> %6559, <8 x float> poison, <8 x i32> zeroinitializer
  %6561 = insertelement <8 x float> poison, float %6551, i64 0
  %6562 = shufflevector <8 x float> %6561, <8 x float> poison, <8 x i32> zeroinitializer
  br label %6563

6563:                                             ; preds = %6563, %6553
  %6564 = phi i64 [ 0, %6553 ], [ %6577, %6563 ]
  %6565 = getelementptr inbounds float, ptr %6550, i64 %6564
  %6566 = load <8 x float>, ptr %6565, align 4, !tbaa !65
  %6567 = getelementptr inbounds float, ptr %6565, i64 8
  %6568 = load <8 x float>, ptr %6567, align 4, !tbaa !65
  %6569 = getelementptr inbounds float, ptr %6565, i64 16
  %6570 = load <8 x float>, ptr %6569, align 4, !tbaa !65
  %6571 = getelementptr inbounds float, ptr %6565, i64 24
  %6572 = load <8 x float>, ptr %6571, align 4, !tbaa !65
  %6573 = fmul fast <8 x float> %6566, %6556
  %6574 = fmul fast <8 x float> %6568, %6558
  %6575 = fmul fast <8 x float> %6570, %6560
  %6576 = fmul fast <8 x float> %6572, %6562
  store <8 x float> %6573, ptr %6565, align 4, !tbaa !65
  store <8 x float> %6574, ptr %6567, align 4, !tbaa !65
  store <8 x float> %6575, ptr %6569, align 4, !tbaa !65
  store <8 x float> %6576, ptr %6571, align 4, !tbaa !65
  %6577 = add nuw i64 %6564, 32
  %6578 = icmp eq i64 %6577, %6554
  br i1 %6578, label %6579, label %6563, !llvm.loop !1012

6579:                                             ; preds = %6563
  %6580 = icmp eq i64 %6554, %6507
  br i1 %6580, label %6590, label %6581

6581:                                             ; preds = %6546, %6579
  %6582 = phi i64 [ 0, %6546 ], [ %6554, %6579 ]
  br label %6583

6583:                                             ; preds = %6581, %6583
  %6584 = phi i64 [ %6588, %6583 ], [ %6582, %6581 ]
  %6585 = getelementptr inbounds float, ptr %6550, i64 %6584
  %6586 = load float, ptr %6585, align 4, !tbaa !65
  %6587 = fmul fast float %6586, %6551
  store float %6587, ptr %6585, align 4, !tbaa !65
  %6588 = add nuw nsw i64 %6584, 1
  %6589 = icmp eq i64 %6588, %6507
  br i1 %6589, label %6590, label %6583, !llvm.loop !1013

6590:                                             ; preds = %6583, %6579
  %6591 = icmp ult i32 %6382, 32
  br i1 %6591, label %6630, label %6592

6592:                                             ; preds = %6590
  %6593 = getelementptr i8, ptr %6225, i64 24
  %6594 = shl nsw i64 %6548, 4
  %6595 = shl nuw nsw i64 %6507, 2
  %6596 = add nsw i64 %6594, %6595
  %6597 = getelementptr i8, ptr %6593, i64 %6596
  %6598 = getelementptr i8, ptr %6192, i64 %6595
  %6599 = icmp ult ptr %6550, %6598
  %6600 = icmp ult ptr %6192, %6597
  %6601 = and i1 %6599, %6600
  br i1 %6601, label %6630, label %6602

6602:                                             ; preds = %6592
  %6603 = and i64 %6507, 4294967264
  br label %6604

6604:                                             ; preds = %6604, %6602
  %6605 = phi i64 [ 0, %6602 ], [ %6626, %6604 ]
  %6606 = getelementptr inbounds float, ptr %6192, i64 %6605
  %6607 = load <8 x float>, ptr %6606, align 4, !tbaa !65, !alias.scope !1014
  %6608 = getelementptr inbounds float, ptr %6606, i64 8
  %6609 = load <8 x float>, ptr %6608, align 4, !tbaa !65, !alias.scope !1014
  %6610 = getelementptr inbounds float, ptr %6606, i64 16
  %6611 = load <8 x float>, ptr %6610, align 4, !tbaa !65, !alias.scope !1014
  %6612 = getelementptr inbounds float, ptr %6606, i64 24
  %6613 = load <8 x float>, ptr %6612, align 4, !tbaa !65, !alias.scope !1014
  %6614 = getelementptr inbounds float, ptr %6550, i64 %6605
  %6615 = load <8 x float>, ptr %6614, align 4, !tbaa !65, !alias.scope !1017, !noalias !1014
  %6616 = getelementptr inbounds float, ptr %6614, i64 8
  %6617 = load <8 x float>, ptr %6616, align 4, !tbaa !65, !alias.scope !1017, !noalias !1014
  %6618 = getelementptr inbounds float, ptr %6614, i64 16
  %6619 = load <8 x float>, ptr %6618, align 4, !tbaa !65, !alias.scope !1017, !noalias !1014
  %6620 = getelementptr inbounds float, ptr %6614, i64 24
  %6621 = load <8 x float>, ptr %6620, align 4, !tbaa !65, !alias.scope !1017, !noalias !1014
  %6622 = fadd fast <8 x float> %6615, %6607
  %6623 = fadd fast <8 x float> %6617, %6609
  %6624 = fadd fast <8 x float> %6619, %6611
  %6625 = fadd fast <8 x float> %6621, %6613
  store <8 x float> %6622, ptr %6614, align 4, !tbaa !65, !alias.scope !1017, !noalias !1014
  store <8 x float> %6623, ptr %6616, align 4, !tbaa !65, !alias.scope !1017, !noalias !1014
  store <8 x float> %6624, ptr %6618, align 4, !tbaa !65, !alias.scope !1017, !noalias !1014
  store <8 x float> %6625, ptr %6620, align 4, !tbaa !65, !alias.scope !1017, !noalias !1014
  %6626 = add nuw i64 %6605, 32
  %6627 = icmp eq i64 %6626, %6603
  br i1 %6627, label %6628, label %6604, !llvm.loop !1019

6628:                                             ; preds = %6604
  %6629 = icmp eq i64 %6603, %6507
  br i1 %6629, label %6677, label %6630

6630:                                             ; preds = %6592, %6590, %6628
  %6631 = phi i64 [ 0, %6592 ], [ 0, %6590 ], [ %6603, %6628 ]
  %6632 = xor i64 %6631, -1
  %6633 = add nsw i64 %6632, %6507
  %6634 = and i64 %6507, 3
  %6635 = icmp eq i64 %6634, 0
  br i1 %6635, label %6647, label %6636

6636:                                             ; preds = %6630, %6636
  %6637 = phi i64 [ %6644, %6636 ], [ %6631, %6630 ]
  %6638 = phi i64 [ %6645, %6636 ], [ 0, %6630 ]
  %6639 = getelementptr inbounds float, ptr %6192, i64 %6637
  %6640 = load float, ptr %6639, align 4, !tbaa !65
  %6641 = getelementptr inbounds float, ptr %6550, i64 %6637
  %6642 = load float, ptr %6641, align 4, !tbaa !65
  %6643 = fadd fast float %6642, %6640
  store float %6643, ptr %6641, align 4, !tbaa !65
  %6644 = add nuw nsw i64 %6637, 1
  %6645 = add i64 %6638, 1
  %6646 = icmp eq i64 %6645, %6634
  br i1 %6646, label %6647, label %6636, !llvm.loop !1020

6647:                                             ; preds = %6636, %6630
  %6648 = phi i64 [ %6631, %6630 ], [ %6644, %6636 ]
  %6649 = icmp ult i64 %6633, 3
  br i1 %6649, label %6677, label %6650

6650:                                             ; preds = %6647, %6650
  %6651 = phi i64 [ %6675, %6650 ], [ %6648, %6647 ]
  %6652 = getelementptr inbounds float, ptr %6192, i64 %6651
  %6653 = load float, ptr %6652, align 4, !tbaa !65
  %6654 = getelementptr inbounds float, ptr %6550, i64 %6651
  %6655 = load float, ptr %6654, align 4, !tbaa !65
  %6656 = fadd fast float %6655, %6653
  store float %6656, ptr %6654, align 4, !tbaa !65
  %6657 = add nuw nsw i64 %6651, 1
  %6658 = getelementptr inbounds float, ptr %6192, i64 %6657
  %6659 = load float, ptr %6658, align 4, !tbaa !65
  %6660 = getelementptr inbounds float, ptr %6550, i64 %6657
  %6661 = load float, ptr %6660, align 4, !tbaa !65
  %6662 = fadd fast float %6661, %6659
  store float %6662, ptr %6660, align 4, !tbaa !65
  %6663 = add nuw nsw i64 %6651, 2
  %6664 = getelementptr inbounds float, ptr %6192, i64 %6663
  %6665 = load float, ptr %6664, align 4, !tbaa !65
  %6666 = getelementptr inbounds float, ptr %6550, i64 %6663
  %6667 = load float, ptr %6666, align 4, !tbaa !65
  %6668 = fadd fast float %6667, %6665
  store float %6668, ptr %6666, align 4, !tbaa !65
  %6669 = add nuw nsw i64 %6651, 3
  %6670 = getelementptr inbounds float, ptr %6192, i64 %6669
  %6671 = load float, ptr %6670, align 4, !tbaa !65
  %6672 = getelementptr inbounds float, ptr %6550, i64 %6669
  %6673 = load float, ptr %6672, align 4, !tbaa !65
  %6674 = fadd fast float %6673, %6671
  store float %6674, ptr %6672, align 4, !tbaa !65
  %6675 = add nuw nsw i64 %6651, 4
  %6676 = icmp eq i64 %6675, %6507
  br i1 %6676, label %6677, label %6650, !llvm.loop !1021

6677:                                             ; preds = %6647, %6650, %6628
  %6678 = icmp ult i32 %6382, 32
  br i1 %6678, label %6717, label %6679

6679:                                             ; preds = %6677
  %6680 = getelementptr i8, ptr %6225, i64 24
  %6681 = shl nsw i64 %6548, 4
  %6682 = shl nuw nsw i64 %6507, 2
  %6683 = add nsw i64 %6681, %6682
  %6684 = getelementptr i8, ptr %6680, i64 %6683
  %6685 = getelementptr i8, ptr %6197, i64 %6682
  %6686 = icmp ult ptr %6550, %6685
  %6687 = icmp ult ptr %6197, %6684
  %6688 = and i1 %6686, %6687
  br i1 %6688, label %6717, label %6689

6689:                                             ; preds = %6679
  %6690 = and i64 %6507, 4294967264
  br label %6691

6691:                                             ; preds = %6691, %6689
  %6692 = phi i64 [ 0, %6689 ], [ %6713, %6691 ]
  %6693 = getelementptr inbounds float, ptr %6197, i64 %6692
  %6694 = load <8 x float>, ptr %6693, align 4, !tbaa !65, !alias.scope !1022
  %6695 = getelementptr inbounds float, ptr %6693, i64 8
  %6696 = load <8 x float>, ptr %6695, align 4, !tbaa !65, !alias.scope !1022
  %6697 = getelementptr inbounds float, ptr %6693, i64 16
  %6698 = load <8 x float>, ptr %6697, align 4, !tbaa !65, !alias.scope !1022
  %6699 = getelementptr inbounds float, ptr %6693, i64 24
  %6700 = load <8 x float>, ptr %6699, align 4, !tbaa !65, !alias.scope !1022
  %6701 = getelementptr inbounds float, ptr %6550, i64 %6692
  %6702 = load <8 x float>, ptr %6701, align 4, !tbaa !65, !alias.scope !1025, !noalias !1022
  %6703 = getelementptr inbounds float, ptr %6701, i64 8
  %6704 = load <8 x float>, ptr %6703, align 4, !tbaa !65, !alias.scope !1025, !noalias !1022
  %6705 = getelementptr inbounds float, ptr %6701, i64 16
  %6706 = load <8 x float>, ptr %6705, align 4, !tbaa !65, !alias.scope !1025, !noalias !1022
  %6707 = getelementptr inbounds float, ptr %6701, i64 24
  %6708 = load <8 x float>, ptr %6707, align 4, !tbaa !65, !alias.scope !1025, !noalias !1022
  %6709 = fadd fast <8 x float> %6702, %6694
  %6710 = fadd fast <8 x float> %6704, %6696
  %6711 = fadd fast <8 x float> %6706, %6698
  %6712 = fadd fast <8 x float> %6708, %6700
  store <8 x float> %6709, ptr %6701, align 4, !tbaa !65, !alias.scope !1025, !noalias !1022
  store <8 x float> %6710, ptr %6703, align 4, !tbaa !65, !alias.scope !1025, !noalias !1022
  store <8 x float> %6711, ptr %6705, align 4, !tbaa !65, !alias.scope !1025, !noalias !1022
  store <8 x float> %6712, ptr %6707, align 4, !tbaa !65, !alias.scope !1025, !noalias !1022
  %6713 = add nuw i64 %6692, 32
  %6714 = icmp eq i64 %6713, %6690
  br i1 %6714, label %6715, label %6691, !llvm.loop !1027

6715:                                             ; preds = %6691
  %6716 = icmp eq i64 %6690, %6507
  br i1 %6716, label %6764, label %6717

6717:                                             ; preds = %6679, %6677, %6715
  %6718 = phi i64 [ 0, %6679 ], [ 0, %6677 ], [ %6690, %6715 ]
  %6719 = xor i64 %6718, -1
  %6720 = add nsw i64 %6719, %6507
  %6721 = and i64 %6507, 3
  %6722 = icmp eq i64 %6721, 0
  br i1 %6722, label %6734, label %6723

6723:                                             ; preds = %6717, %6723
  %6724 = phi i64 [ %6731, %6723 ], [ %6718, %6717 ]
  %6725 = phi i64 [ %6732, %6723 ], [ 0, %6717 ]
  %6726 = getelementptr inbounds float, ptr %6197, i64 %6724
  %6727 = load float, ptr %6726, align 4, !tbaa !65
  %6728 = getelementptr inbounds float, ptr %6550, i64 %6724
  %6729 = load float, ptr %6728, align 4, !tbaa !65
  %6730 = fadd fast float %6729, %6727
  store float %6730, ptr %6728, align 4, !tbaa !65
  %6731 = add nuw nsw i64 %6724, 1
  %6732 = add i64 %6725, 1
  %6733 = icmp eq i64 %6732, %6721
  br i1 %6733, label %6734, label %6723, !llvm.loop !1028

6734:                                             ; preds = %6723, %6717
  %6735 = phi i64 [ %6718, %6717 ], [ %6731, %6723 ]
  %6736 = icmp ult i64 %6720, 3
  br i1 %6736, label %6764, label %6737

6737:                                             ; preds = %6734, %6737
  %6738 = phi i64 [ %6762, %6737 ], [ %6735, %6734 ]
  %6739 = getelementptr inbounds float, ptr %6197, i64 %6738
  %6740 = load float, ptr %6739, align 4, !tbaa !65
  %6741 = getelementptr inbounds float, ptr %6550, i64 %6738
  %6742 = load float, ptr %6741, align 4, !tbaa !65
  %6743 = fadd fast float %6742, %6740
  store float %6743, ptr %6741, align 4, !tbaa !65
  %6744 = add nuw nsw i64 %6738, 1
  %6745 = getelementptr inbounds float, ptr %6197, i64 %6744
  %6746 = load float, ptr %6745, align 4, !tbaa !65
  %6747 = getelementptr inbounds float, ptr %6550, i64 %6744
  %6748 = load float, ptr %6747, align 4, !tbaa !65
  %6749 = fadd fast float %6748, %6746
  store float %6749, ptr %6747, align 4, !tbaa !65
  %6750 = add nuw nsw i64 %6738, 2
  %6751 = getelementptr inbounds float, ptr %6197, i64 %6750
  %6752 = load float, ptr %6751, align 4, !tbaa !65
  %6753 = getelementptr inbounds float, ptr %6550, i64 %6750
  %6754 = load float, ptr %6753, align 4, !tbaa !65
  %6755 = fadd fast float %6754, %6752
  store float %6755, ptr %6753, align 4, !tbaa !65
  %6756 = add nuw nsw i64 %6738, 3
  %6757 = getelementptr inbounds float, ptr %6197, i64 %6756
  %6758 = load float, ptr %6757, align 4, !tbaa !65
  %6759 = getelementptr inbounds float, ptr %6550, i64 %6756
  %6760 = load float, ptr %6759, align 4, !tbaa !65
  %6761 = fadd fast float %6760, %6758
  store float %6761, ptr %6759, align 4, !tbaa !65
  %6762 = add nuw nsw i64 %6738, 4
  %6763 = icmp eq i64 %6762, %6507
  br i1 %6763, label %6764, label %6737, !llvm.loop !1029

6764:                                             ; preds = %6734, %6737, %6715
  %6765 = icmp ult i32 %6382, 32
  br i1 %6765, label %6794, label %6766

6766:                                             ; preds = %6764
  %6767 = and i64 %6507, 4294967264
  %6768 = insertelement <8 x float> poison, float %6499, i64 0
  %6769 = shufflevector <8 x float> %6768, <8 x float> poison, <8 x i32> zeroinitializer
  %6770 = insertelement <8 x float> poison, float %6499, i64 0
  %6771 = shufflevector <8 x float> %6770, <8 x float> poison, <8 x i32> zeroinitializer
  %6772 = insertelement <8 x float> poison, float %6499, i64 0
  %6773 = shufflevector <8 x float> %6772, <8 x float> poison, <8 x i32> zeroinitializer
  %6774 = insertelement <8 x float> poison, float %6499, i64 0
  %6775 = shufflevector <8 x float> %6774, <8 x float> poison, <8 x i32> zeroinitializer
  br label %6776

6776:                                             ; preds = %6776, %6766
  %6777 = phi i64 [ 0, %6766 ], [ %6790, %6776 ]
  %6778 = getelementptr inbounds float, ptr %6550, i64 %6777
  %6779 = load <8 x float>, ptr %6778, align 4, !tbaa !65
  %6780 = getelementptr inbounds float, ptr %6778, i64 8
  %6781 = load <8 x float>, ptr %6780, align 4, !tbaa !65
  %6782 = getelementptr inbounds float, ptr %6778, i64 16
  %6783 = load <8 x float>, ptr %6782, align 4, !tbaa !65
  %6784 = getelementptr inbounds float, ptr %6778, i64 24
  %6785 = load <8 x float>, ptr %6784, align 4, !tbaa !65
  %6786 = fmul fast <8 x float> %6779, %6769
  %6787 = fmul fast <8 x float> %6781, %6771
  %6788 = fmul fast <8 x float> %6783, %6773
  %6789 = fmul fast <8 x float> %6785, %6775
  store <8 x float> %6786, ptr %6778, align 4, !tbaa !65
  store <8 x float> %6787, ptr %6780, align 4, !tbaa !65
  store <8 x float> %6788, ptr %6782, align 4, !tbaa !65
  store <8 x float> %6789, ptr %6784, align 4, !tbaa !65
  %6790 = add nuw i64 %6777, 32
  %6791 = icmp eq i64 %6790, %6767
  br i1 %6791, label %6792, label %6776, !llvm.loop !1030

6792:                                             ; preds = %6776
  %6793 = icmp eq i64 %6767, %6507
  br i1 %6793, label %6803, label %6794

6794:                                             ; preds = %6764, %6792
  %6795 = phi i64 [ 0, %6764 ], [ %6767, %6792 ]
  br label %6796

6796:                                             ; preds = %6794, %6796
  %6797 = phi i64 [ %6801, %6796 ], [ %6795, %6794 ]
  %6798 = getelementptr inbounds float, ptr %6550, i64 %6797
  %6799 = load float, ptr %6798, align 4, !tbaa !65
  %6800 = fmul fast float %6799, %6499
  store float %6800, ptr %6798, align 4, !tbaa !65
  %6801 = add nuw nsw i64 %6797, 1
  %6802 = icmp eq i64 %6801, %6507
  br i1 %6802, label %6803, label %6796, !llvm.loop !1031

6803:                                             ; preds = %6796, %6792, %6501
  %6804 = phi ptr [ %6505, %6501 ], [ %6550, %6792 ], [ %6550, %6796 ]
  %6805 = ptrtoint ptr %6804 to i64
  br i1 %6381, label %6806, label %8059

6806:                                             ; preds = %6803
  %6807 = zext i32 %6382 to i64
  %6808 = zext i32 %6380 to i64
  %6809 = shl nuw nsw i64 %6807, 2
  %6810 = getelementptr i8, ptr %6804, i64 %6809
  %6811 = getelementptr i8, ptr %6197, i64 %6809
  %6812 = shl nuw nsw i64 %6807, 2
  %6813 = getelementptr i8, ptr %6804, i64 %6812
  %6814 = getelementptr i8, ptr %6192, i64 %6812
  %6815 = shl nuw nsw i64 %6807, 2
  %6816 = getelementptr i8, ptr %6804, i64 %6815
  %6817 = getelementptr i8, ptr %6197, i64 %6815
  %6818 = shl nuw nsw i64 %6807, 2
  %6819 = getelementptr i8, ptr %6804, i64 %6818
  %6820 = getelementptr i8, ptr %6192, i64 %6818
  %6821 = icmp ult i32 %6382, 32
  %6822 = and i64 %6807, 4294967264
  %6823 = icmp eq i64 %6822, %6807
  %6824 = and i64 %6807, 1
  %6825 = icmp eq i64 %6824, 0
  %6826 = sub nsw i64 0, %6807
  %6827 = icmp ult i32 %6382, 32
  %6828 = and i64 %6807, 4294967264
  %6829 = icmp eq i64 %6828, %6807
  %6830 = and i64 %6807, 1
  %6831 = icmp eq i64 %6830, 0
  %6832 = sub nsw i64 0, %6807
  %6833 = icmp ult i32 %6382, 32
  %6834 = and i64 %6807, 4294967264
  %6835 = icmp eq i64 %6834, %6807
  %6836 = and i64 %6807, 3
  %6837 = icmp eq i64 %6836, 0
  %6838 = icmp ult i32 %6382, 32
  %6839 = and i64 %6807, 4294967264
  %6840 = icmp eq i64 %6839, %6807
  %6841 = and i64 %6807, 3
  %6842 = icmp eq i64 %6841, 0
  %6843 = icmp ult i32 %6382, 32
  %6844 = and i64 %6807, 4294967264
  %6845 = icmp eq i64 %6844, %6807
  %6846 = icmp ult i32 %6382, 32
  %6847 = and i64 %6807, 4294967264
  %6848 = icmp eq i64 %6847, %6807
  %6849 = and i64 %6807, 3
  %6850 = icmp eq i64 %6849, 0
  %6851 = icmp ult i32 %6382, 32
  %6852 = and i64 %6807, 4294967264
  %6853 = icmp eq i64 %6852, %6807
  %6854 = and i64 %6807, 1
  %6855 = icmp eq i64 %6854, 0
  %6856 = sub nsw i64 0, %6807
  %6857 = icmp ult i32 %6382, 32
  %6858 = and i64 %6807, 4294967264
  %6859 = icmp eq i64 %6858, %6807
  %6860 = and i64 %6807, 1
  %6861 = icmp eq i64 %6860, 0
  %6862 = sub nsw i64 0, %6807
  %6863 = icmp ult i32 %6382, 32
  %6864 = and i64 %6807, 4294967264
  %6865 = icmp eq i64 %6864, %6807
  %6866 = and i64 %6807, 3
  %6867 = icmp eq i64 %6866, 0
  %6868 = icmp ult i32 %6382, 32
  %6869 = and i64 %6807, 4294967264
  %6870 = icmp eq i64 %6869, %6807
  %6871 = and i64 %6807, 3
  %6872 = icmp eq i64 %6871, 0
  %6873 = icmp ult i32 %6382, 32
  %6874 = and i64 %6807, 4294967264
  %6875 = icmp eq i64 %6874, %6807
  %6876 = icmp ult i32 %6382, 32
  %6877 = and i64 %6807, 4294967264
  %6878 = icmp eq i64 %6877, %6807
  %6879 = and i64 %6807, 3
  %6880 = icmp eq i64 %6879, 0
  br label %6881

6881:                                             ; preds = %6806, %8056
  %6882 = phi i64 [ 0, %6806 ], [ %8057, %8056 ]
  br i1 %6214, label %6883, label %7473

6883:                                             ; preds = %6881
  %6884 = trunc i64 %6882 to i32
  %6885 = mul i32 %6206, %6884
  %6886 = add nsw i32 %6885, 1
  %6887 = mul nsw i32 %6886, %16
  %6888 = sext i32 %6887 to i64
  %6889 = getelementptr inbounds i8, ptr %6804, i64 %6888
  %6890 = getelementptr i8, ptr %6816, i64 %6888
  %6891 = getelementptr i8, ptr %6819, i64 %6888
  %6892 = add i64 %6805, %6888
  %6893 = add i64 %6805, %6888
  %6894 = add i64 %6805, %6888
  %6895 = add i64 %6805, %6888
  %6896 = add i64 %6805, %6888
  %6897 = add i64 %6805, %6888
  %6898 = add i64 %6805, %6888
  %6899 = add i64 %6805, %6888
  %6900 = add i64 %6805, %6888
  %6901 = add i64 %6805, %6888
  br label %6902

6902:                                             ; preds = %7469, %6883
  %6903 = phi i32 [ 1, %6883 ], [ %7470, %7469 ]
  %6904 = shl nuw nsw i32 %6903, 1
  %6905 = add nsw i32 %6904, -1
  %6906 = or i32 %6904, 1
  br label %6907

6907:                                             ; preds = %6902, %7466
  %6908 = phi i32 [ 1, %6902 ], [ %7467, %7466 ]
  %6909 = shl nuw nsw i32 %6908, 1
  %6910 = mul nsw i32 %6908, %6203
  %6911 = add nsw i32 %6910, %6903
  %6912 = shl i32 %6911, %6211
  %6913 = add nsw i32 %6912, %6203
  %6914 = mul nsw i32 %6913, %16
  %6915 = sext i32 %6914 to i64
  %6916 = getelementptr i8, ptr %6889, i64 %6915
  %6917 = mul nsw i32 %6909, %6203
  %6918 = add nsw i32 %6917, %6904
  %6919 = shl i32 %6918, %6204
  %6920 = add nsw i32 %6919, %6203
  %6921 = mul nsw i32 %6920, %16
  %6922 = sext i32 %6921 to i64
  %6923 = getelementptr i8, ptr %6889, i64 %6922
  %6924 = add nsw i32 %6909, -1
  %6925 = mul nsw i32 %6924, %6203
  %6926 = add nsw i32 %6925, %6905
  %6927 = shl i32 %6926, %6204
  %6928 = add nsw i32 %6927, %6203
  %6929 = mul nsw i32 %6928, %16
  %6930 = sext i32 %6929 to i64
  %6931 = getelementptr inbounds i8, ptr %6889, i64 %6930
  %6932 = add nsw i32 %6925, %6906
  %6933 = shl i32 %6932, %6204
  %6934 = add nsw i32 %6933, %6203
  %6935 = mul nsw i32 %6934, %16
  %6936 = sext i32 %6935 to i64
  %6937 = getelementptr inbounds i8, ptr %6889, i64 %6936
  %6938 = or i32 %6909, 1
  %6939 = mul nsw i32 %6938, %6203
  %6940 = add nsw i32 %6939, %6906
  %6941 = shl i32 %6940, %6204
  %6942 = add nsw i32 %6941, %6203
  %6943 = mul nsw i32 %6942, %16
  %6944 = sext i32 %6943 to i64
  %6945 = getelementptr inbounds i8, ptr %6889, i64 %6944
  %6946 = add nsw i32 %6939, %6905
  %6947 = shl i32 %6946, %6204
  %6948 = add nsw i32 %6947, %6203
  %6949 = mul nsw i32 %6948, %16
  %6950 = sext i32 %6949 to i64
  %6951 = getelementptr inbounds i8, ptr %6889, i64 %6950
  br i1 %6500, label %6952, label %7078

6952:                                             ; preds = %6907
  br i1 %6821, label %7026, label %6953

6953:                                             ; preds = %6952
  %6954 = add i64 %6898, %6950
  %6955 = sub i64 %6193, %6954
  %6956 = icmp ult i64 %6955, 128
  %6957 = add i64 %6899, %6944
  %6958 = sub i64 %6193, %6957
  %6959 = icmp ult i64 %6958, 128
  %6960 = or i1 %6956, %6959
  %6961 = add i64 %6900, %6936
  %6962 = sub i64 %6193, %6961
  %6963 = icmp ult i64 %6962, 128
  %6964 = or i1 %6960, %6963
  %6965 = add i64 %6901, %6930
  %6966 = sub i64 %6193, %6965
  %6967 = icmp ult i64 %6966, 128
  %6968 = or i1 %6964, %6967
  br i1 %6968, label %7026, label %6969

6969:                                             ; preds = %6953, %6969
  %6970 = phi i64 [ %7023, %6969 ], [ 0, %6953 ]
  %6971 = getelementptr inbounds float, ptr %6931, i64 %6970
  %6972 = load <8 x float>, ptr %6971, align 4, !tbaa !65
  %6973 = getelementptr inbounds float, ptr %6971, i64 8
  %6974 = load <8 x float>, ptr %6973, align 4, !tbaa !65
  %6975 = getelementptr inbounds float, ptr %6971, i64 16
  %6976 = load <8 x float>, ptr %6975, align 4, !tbaa !65
  %6977 = getelementptr inbounds float, ptr %6971, i64 24
  %6978 = load <8 x float>, ptr %6977, align 4, !tbaa !65
  %6979 = getelementptr inbounds float, ptr %6937, i64 %6970
  %6980 = load <8 x float>, ptr %6979, align 4, !tbaa !65
  %6981 = getelementptr inbounds float, ptr %6979, i64 8
  %6982 = load <8 x float>, ptr %6981, align 4, !tbaa !65
  %6983 = getelementptr inbounds float, ptr %6979, i64 16
  %6984 = load <8 x float>, ptr %6983, align 4, !tbaa !65
  %6985 = getelementptr inbounds float, ptr %6979, i64 24
  %6986 = load <8 x float>, ptr %6985, align 4, !tbaa !65
  %6987 = fadd fast <8 x float> %6980, %6972
  %6988 = fadd fast <8 x float> %6982, %6974
  %6989 = fadd fast <8 x float> %6984, %6976
  %6990 = fadd fast <8 x float> %6986, %6978
  %6991 = getelementptr inbounds float, ptr %6945, i64 %6970
  %6992 = load <8 x float>, ptr %6991, align 4, !tbaa !65
  %6993 = getelementptr inbounds float, ptr %6991, i64 8
  %6994 = load <8 x float>, ptr %6993, align 4, !tbaa !65
  %6995 = getelementptr inbounds float, ptr %6991, i64 16
  %6996 = load <8 x float>, ptr %6995, align 4, !tbaa !65
  %6997 = getelementptr inbounds float, ptr %6991, i64 24
  %6998 = load <8 x float>, ptr %6997, align 4, !tbaa !65
  %6999 = fadd fast <8 x float> %6987, %6992
  %7000 = fadd fast <8 x float> %6988, %6994
  %7001 = fadd fast <8 x float> %6989, %6996
  %7002 = fadd fast <8 x float> %6990, %6998
  %7003 = getelementptr inbounds float, ptr %6951, i64 %6970
  %7004 = load <8 x float>, ptr %7003, align 4, !tbaa !65
  %7005 = getelementptr inbounds float, ptr %7003, i64 8
  %7006 = load <8 x float>, ptr %7005, align 4, !tbaa !65
  %7007 = getelementptr inbounds float, ptr %7003, i64 16
  %7008 = load <8 x float>, ptr %7007, align 4, !tbaa !65
  %7009 = getelementptr inbounds float, ptr %7003, i64 24
  %7010 = load <8 x float>, ptr %7009, align 4, !tbaa !65
  %7011 = fadd fast <8 x float> %6999, %7004
  %7012 = fadd fast <8 x float> %7000, %7006
  %7013 = fadd fast <8 x float> %7001, %7008
  %7014 = fadd fast <8 x float> %7002, %7010
  %7015 = fmul fast <8 x float> %7011, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7016 = fmul fast <8 x float> %7012, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7017 = fmul fast <8 x float> %7013, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7018 = fmul fast <8 x float> %7014, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7019 = getelementptr inbounds float, ptr %6192, i64 %6970
  store <8 x float> %7015, ptr %7019, align 4, !tbaa !65
  %7020 = getelementptr inbounds float, ptr %7019, i64 8
  store <8 x float> %7016, ptr %7020, align 4, !tbaa !65
  %7021 = getelementptr inbounds float, ptr %7019, i64 16
  store <8 x float> %7017, ptr %7021, align 4, !tbaa !65
  %7022 = getelementptr inbounds float, ptr %7019, i64 24
  store <8 x float> %7018, ptr %7022, align 4, !tbaa !65
  %7023 = add nuw i64 %6970, 32
  %7024 = icmp eq i64 %7023, %6822
  br i1 %7024, label %7025, label %6969, !llvm.loop !1032

7025:                                             ; preds = %6969
  br i1 %6823, label %7078, label %7026

7026:                                             ; preds = %6953, %6952, %7025
  %7027 = phi i64 [ 0, %6953 ], [ 0, %6952 ], [ %6822, %7025 ]
  %7028 = xor i64 %7027, -1
  br i1 %6825, label %7044, label %7029

7029:                                             ; preds = %7026
  %7030 = getelementptr inbounds float, ptr %6931, i64 %7027
  %7031 = load float, ptr %7030, align 4, !tbaa !65
  %7032 = getelementptr inbounds float, ptr %6937, i64 %7027
  %7033 = load float, ptr %7032, align 4, !tbaa !65
  %7034 = fadd fast float %7033, %7031
  %7035 = getelementptr inbounds float, ptr %6945, i64 %7027
  %7036 = load float, ptr %7035, align 4, !tbaa !65
  %7037 = fadd fast float %7034, %7036
  %7038 = getelementptr inbounds float, ptr %6951, i64 %7027
  %7039 = load float, ptr %7038, align 4, !tbaa !65
  %7040 = fadd fast float %7037, %7039
  %7041 = fmul fast float %7040, 2.500000e-01
  %7042 = getelementptr inbounds float, ptr %6192, i64 %7027
  store float %7041, ptr %7042, align 4, !tbaa !65
  %7043 = or i64 %7027, 1
  br label %7044

7044:                                             ; preds = %7029, %7026
  %7045 = phi i64 [ %7027, %7026 ], [ %7043, %7029 ]
  %7046 = icmp eq i64 %7028, %6826
  br i1 %7046, label %7078, label %7047

7047:                                             ; preds = %7044, %7047
  %7048 = phi i64 [ %7076, %7047 ], [ %7045, %7044 ]
  %7049 = getelementptr inbounds float, ptr %6931, i64 %7048
  %7050 = load float, ptr %7049, align 4, !tbaa !65
  %7051 = getelementptr inbounds float, ptr %6937, i64 %7048
  %7052 = load float, ptr %7051, align 4, !tbaa !65
  %7053 = fadd fast float %7052, %7050
  %7054 = getelementptr inbounds float, ptr %6945, i64 %7048
  %7055 = load float, ptr %7054, align 4, !tbaa !65
  %7056 = fadd fast float %7053, %7055
  %7057 = getelementptr inbounds float, ptr %6951, i64 %7048
  %7058 = load float, ptr %7057, align 4, !tbaa !65
  %7059 = fadd fast float %7056, %7058
  %7060 = fmul fast float %7059, 2.500000e-01
  %7061 = getelementptr inbounds float, ptr %6192, i64 %7048
  store float %7060, ptr %7061, align 4, !tbaa !65
  %7062 = add nuw nsw i64 %7048, 1
  %7063 = getelementptr inbounds float, ptr %6931, i64 %7062
  %7064 = load float, ptr %7063, align 4, !tbaa !65
  %7065 = getelementptr inbounds float, ptr %6937, i64 %7062
  %7066 = load float, ptr %7065, align 4, !tbaa !65
  %7067 = fadd fast float %7066, %7064
  %7068 = getelementptr inbounds float, ptr %6945, i64 %7062
  %7069 = load float, ptr %7068, align 4, !tbaa !65
  %7070 = fadd fast float %7067, %7069
  %7071 = getelementptr inbounds float, ptr %6951, i64 %7062
  %7072 = load float, ptr %7071, align 4, !tbaa !65
  %7073 = fadd fast float %7070, %7072
  %7074 = fmul fast float %7073, 2.500000e-01
  %7075 = getelementptr inbounds float, ptr %6192, i64 %7062
  store float %7074, ptr %7075, align 4, !tbaa !65
  %7076 = add nuw nsw i64 %7048, 2
  %7077 = icmp eq i64 %7076, %6807
  br i1 %7077, label %7078, label %7047, !llvm.loop !1033

7078:                                             ; preds = %7044, %7047, %7025, %6907
  %7079 = add nsw i32 %6917, %6905
  %7080 = shl i32 %7079, %6204
  %7081 = add nsw i32 %7080, %6203
  %7082 = mul nsw i32 %7081, %16
  %7083 = sext i32 %7082 to i64
  %7084 = getelementptr inbounds i8, ptr %6889, i64 %7083
  %7085 = add nsw i32 %6917, %6906
  %7086 = shl i32 %7085, %6204
  %7087 = add nsw i32 %7086, %6203
  %7088 = mul nsw i32 %7087, %16
  %7089 = sext i32 %7088 to i64
  %7090 = getelementptr inbounds i8, ptr %6889, i64 %7089
  %7091 = add nsw i32 %6925, %6904
  %7092 = shl i32 %7091, %6204
  %7093 = add nsw i32 %7092, %6203
  %7094 = mul nsw i32 %7093, %16
  %7095 = sext i32 %7094 to i64
  %7096 = getelementptr inbounds i8, ptr %6889, i64 %7095
  %7097 = add nsw i32 %6939, %6904
  %7098 = shl i32 %7097, %6204
  %7099 = add nsw i32 %7098, %6203
  %7100 = mul nsw i32 %7099, %16
  %7101 = sext i32 %7100 to i64
  %7102 = getelementptr inbounds i8, ptr %6889, i64 %7101
  br i1 %6500, label %7103, label %7466

7103:                                             ; preds = %7078
  br i1 %6827, label %7177, label %7104

7104:                                             ; preds = %7103
  %7105 = add i64 %6894, %7101
  %7106 = sub i64 %6198, %7105
  %7107 = icmp ult i64 %7106, 128
  %7108 = add i64 %6895, %7095
  %7109 = sub i64 %6198, %7108
  %7110 = icmp ult i64 %7109, 128
  %7111 = or i1 %7107, %7110
  %7112 = add i64 %6896, %7089
  %7113 = sub i64 %6198, %7112
  %7114 = icmp ult i64 %7113, 128
  %7115 = or i1 %7111, %7114
  %7116 = add i64 %6897, %7083
  %7117 = sub i64 %6198, %7116
  %7118 = icmp ult i64 %7117, 128
  %7119 = or i1 %7115, %7118
  br i1 %7119, label %7177, label %7120

7120:                                             ; preds = %7104, %7120
  %7121 = phi i64 [ %7174, %7120 ], [ 0, %7104 ]
  %7122 = getelementptr inbounds float, ptr %7084, i64 %7121
  %7123 = load <8 x float>, ptr %7122, align 4, !tbaa !65
  %7124 = getelementptr inbounds float, ptr %7122, i64 8
  %7125 = load <8 x float>, ptr %7124, align 4, !tbaa !65
  %7126 = getelementptr inbounds float, ptr %7122, i64 16
  %7127 = load <8 x float>, ptr %7126, align 4, !tbaa !65
  %7128 = getelementptr inbounds float, ptr %7122, i64 24
  %7129 = load <8 x float>, ptr %7128, align 4, !tbaa !65
  %7130 = getelementptr inbounds float, ptr %7090, i64 %7121
  %7131 = load <8 x float>, ptr %7130, align 4, !tbaa !65
  %7132 = getelementptr inbounds float, ptr %7130, i64 8
  %7133 = load <8 x float>, ptr %7132, align 4, !tbaa !65
  %7134 = getelementptr inbounds float, ptr %7130, i64 16
  %7135 = load <8 x float>, ptr %7134, align 4, !tbaa !65
  %7136 = getelementptr inbounds float, ptr %7130, i64 24
  %7137 = load <8 x float>, ptr %7136, align 4, !tbaa !65
  %7138 = fadd fast <8 x float> %7131, %7123
  %7139 = fadd fast <8 x float> %7133, %7125
  %7140 = fadd fast <8 x float> %7135, %7127
  %7141 = fadd fast <8 x float> %7137, %7129
  %7142 = getelementptr inbounds float, ptr %7096, i64 %7121
  %7143 = load <8 x float>, ptr %7142, align 4, !tbaa !65
  %7144 = getelementptr inbounds float, ptr %7142, i64 8
  %7145 = load <8 x float>, ptr %7144, align 4, !tbaa !65
  %7146 = getelementptr inbounds float, ptr %7142, i64 16
  %7147 = load <8 x float>, ptr %7146, align 4, !tbaa !65
  %7148 = getelementptr inbounds float, ptr %7142, i64 24
  %7149 = load <8 x float>, ptr %7148, align 4, !tbaa !65
  %7150 = fadd fast <8 x float> %7138, %7143
  %7151 = fadd fast <8 x float> %7139, %7145
  %7152 = fadd fast <8 x float> %7140, %7147
  %7153 = fadd fast <8 x float> %7141, %7149
  %7154 = getelementptr inbounds float, ptr %7102, i64 %7121
  %7155 = load <8 x float>, ptr %7154, align 4, !tbaa !65
  %7156 = getelementptr inbounds float, ptr %7154, i64 8
  %7157 = load <8 x float>, ptr %7156, align 4, !tbaa !65
  %7158 = getelementptr inbounds float, ptr %7154, i64 16
  %7159 = load <8 x float>, ptr %7158, align 4, !tbaa !65
  %7160 = getelementptr inbounds float, ptr %7154, i64 24
  %7161 = load <8 x float>, ptr %7160, align 4, !tbaa !65
  %7162 = fadd fast <8 x float> %7150, %7155
  %7163 = fadd fast <8 x float> %7151, %7157
  %7164 = fadd fast <8 x float> %7152, %7159
  %7165 = fadd fast <8 x float> %7153, %7161
  %7166 = fmul fast <8 x float> %7162, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7167 = fmul fast <8 x float> %7163, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7168 = fmul fast <8 x float> %7164, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7169 = fmul fast <8 x float> %7165, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7170 = getelementptr inbounds float, ptr %6197, i64 %7121
  store <8 x float> %7166, ptr %7170, align 4, !tbaa !65
  %7171 = getelementptr inbounds float, ptr %7170, i64 8
  store <8 x float> %7167, ptr %7171, align 4, !tbaa !65
  %7172 = getelementptr inbounds float, ptr %7170, i64 16
  store <8 x float> %7168, ptr %7172, align 4, !tbaa !65
  %7173 = getelementptr inbounds float, ptr %7170, i64 24
  store <8 x float> %7169, ptr %7173, align 4, !tbaa !65
  %7174 = add nuw i64 %7121, 32
  %7175 = icmp eq i64 %7174, %6828
  br i1 %7175, label %7176, label %7120, !llvm.loop !1034

7176:                                             ; preds = %7120
  br i1 %6829, label %7229, label %7177

7177:                                             ; preds = %7104, %7103, %7176
  %7178 = phi i64 [ 0, %7104 ], [ 0, %7103 ], [ %6828, %7176 ]
  %7179 = xor i64 %7178, -1
  br i1 %6831, label %7195, label %7180

7180:                                             ; preds = %7177
  %7181 = getelementptr inbounds float, ptr %7084, i64 %7178
  %7182 = load float, ptr %7181, align 4, !tbaa !65
  %7183 = getelementptr inbounds float, ptr %7090, i64 %7178
  %7184 = load float, ptr %7183, align 4, !tbaa !65
  %7185 = fadd fast float %7184, %7182
  %7186 = getelementptr inbounds float, ptr %7096, i64 %7178
  %7187 = load float, ptr %7186, align 4, !tbaa !65
  %7188 = fadd fast float %7185, %7187
  %7189 = getelementptr inbounds float, ptr %7102, i64 %7178
  %7190 = load float, ptr %7189, align 4, !tbaa !65
  %7191 = fadd fast float %7188, %7190
  %7192 = fmul fast float %7191, 2.500000e-01
  %7193 = getelementptr inbounds float, ptr %6197, i64 %7178
  store float %7192, ptr %7193, align 4, !tbaa !65
  %7194 = or i64 %7178, 1
  br label %7195

7195:                                             ; preds = %7180, %7177
  %7196 = phi i64 [ %7178, %7177 ], [ %7194, %7180 ]
  %7197 = icmp eq i64 %7179, %6832
  br i1 %7197, label %7229, label %7198

7198:                                             ; preds = %7195, %7198
  %7199 = phi i64 [ %7227, %7198 ], [ %7196, %7195 ]
  %7200 = getelementptr inbounds float, ptr %7084, i64 %7199
  %7201 = load float, ptr %7200, align 4, !tbaa !65
  %7202 = getelementptr inbounds float, ptr %7090, i64 %7199
  %7203 = load float, ptr %7202, align 4, !tbaa !65
  %7204 = fadd fast float %7203, %7201
  %7205 = getelementptr inbounds float, ptr %7096, i64 %7199
  %7206 = load float, ptr %7205, align 4, !tbaa !65
  %7207 = fadd fast float %7204, %7206
  %7208 = getelementptr inbounds float, ptr %7102, i64 %7199
  %7209 = load float, ptr %7208, align 4, !tbaa !65
  %7210 = fadd fast float %7207, %7209
  %7211 = fmul fast float %7210, 2.500000e-01
  %7212 = getelementptr inbounds float, ptr %6197, i64 %7199
  store float %7211, ptr %7212, align 4, !tbaa !65
  %7213 = add nuw nsw i64 %7199, 1
  %7214 = getelementptr inbounds float, ptr %7084, i64 %7213
  %7215 = load float, ptr %7214, align 4, !tbaa !65
  %7216 = getelementptr inbounds float, ptr %7090, i64 %7213
  %7217 = load float, ptr %7216, align 4, !tbaa !65
  %7218 = fadd fast float %7217, %7215
  %7219 = getelementptr inbounds float, ptr %7096, i64 %7213
  %7220 = load float, ptr %7219, align 4, !tbaa !65
  %7221 = fadd fast float %7218, %7220
  %7222 = getelementptr inbounds float, ptr %7102, i64 %7213
  %7223 = load float, ptr %7222, align 4, !tbaa !65
  %7224 = fadd fast float %7221, %7223
  %7225 = fmul fast float %7224, 2.500000e-01
  %7226 = getelementptr inbounds float, ptr %6197, i64 %7213
  store float %7225, ptr %7226, align 4, !tbaa !65
  %7227 = add nuw nsw i64 %7199, 2
  %7228 = icmp eq i64 %7227, %6807
  br i1 %7228, label %7229, label %7198, !llvm.loop !1035

7229:                                             ; preds = %7195, %7198, %7176
  br i1 %6833, label %7252, label %7230

7230:                                             ; preds = %7229
  %7231 = add i64 %6892, %6922
  %7232 = add i64 %6893, %6915
  %7233 = sub i64 %7231, %7232
  %7234 = icmp ult i64 %7233, 128
  br i1 %7234, label %7252, label %7235

7235:                                             ; preds = %7230, %7235
  %7236 = phi i64 [ %7249, %7235 ], [ 0, %7230 ]
  %7237 = getelementptr inbounds float, ptr %6916, i64 %7236
  %7238 = load <8 x float>, ptr %7237, align 4, !tbaa !65
  %7239 = getelementptr inbounds float, ptr %7237, i64 8
  %7240 = load <8 x float>, ptr %7239, align 4, !tbaa !65
  %7241 = getelementptr inbounds float, ptr %7237, i64 16
  %7242 = load <8 x float>, ptr %7241, align 4, !tbaa !65
  %7243 = getelementptr inbounds float, ptr %7237, i64 24
  %7244 = load <8 x float>, ptr %7243, align 4, !tbaa !65
  %7245 = getelementptr inbounds float, ptr %6923, i64 %7236
  store <8 x float> %7238, ptr %7245, align 4, !tbaa !65
  %7246 = getelementptr inbounds float, ptr %7245, i64 8
  store <8 x float> %7240, ptr %7246, align 4, !tbaa !65
  %7247 = getelementptr inbounds float, ptr %7245, i64 16
  store <8 x float> %7242, ptr %7247, align 4, !tbaa !65
  %7248 = getelementptr inbounds float, ptr %7245, i64 24
  store <8 x float> %7244, ptr %7248, align 4, !tbaa !65
  %7249 = add nuw i64 %7236, 32
  %7250 = icmp eq i64 %7249, %6834
  br i1 %7250, label %7251, label %7235, !llvm.loop !1036

7251:                                             ; preds = %7235
  br i1 %6835, label %7287, label %7252

7252:                                             ; preds = %7230, %7229, %7251
  %7253 = phi i64 [ 0, %7230 ], [ 0, %7229 ], [ %6834, %7251 ]
  %7254 = xor i64 %7253, -1
  %7255 = add nsw i64 %7254, %6807
  br i1 %6837, label %7265, label %7256

7256:                                             ; preds = %7252, %7256
  %7257 = phi i64 [ %7262, %7256 ], [ %7253, %7252 ]
  %7258 = phi i64 [ %7263, %7256 ], [ 0, %7252 ]
  %7259 = getelementptr inbounds float, ptr %6916, i64 %7257
  %7260 = load float, ptr %7259, align 4, !tbaa !65
  %7261 = getelementptr inbounds float, ptr %6923, i64 %7257
  store float %7260, ptr %7261, align 4, !tbaa !65
  %7262 = add nuw nsw i64 %7257, 1
  %7263 = add i64 %7258, 1
  %7264 = icmp eq i64 %7263, %6836
  br i1 %7264, label %7265, label %7256, !llvm.loop !1037

7265:                                             ; preds = %7256, %7252
  %7266 = phi i64 [ %7253, %7252 ], [ %7262, %7256 ]
  %7267 = icmp ult i64 %7255, 3
  br i1 %7267, label %7287, label %7268

7268:                                             ; preds = %7265, %7268
  %7269 = phi i64 [ %7285, %7268 ], [ %7266, %7265 ]
  %7270 = getelementptr inbounds float, ptr %6916, i64 %7269
  %7271 = load float, ptr %7270, align 4, !tbaa !65
  %7272 = getelementptr inbounds float, ptr %6923, i64 %7269
  store float %7271, ptr %7272, align 4, !tbaa !65
  %7273 = add nuw nsw i64 %7269, 1
  %7274 = getelementptr inbounds float, ptr %6916, i64 %7273
  %7275 = load float, ptr %7274, align 4, !tbaa !65
  %7276 = getelementptr inbounds float, ptr %6923, i64 %7273
  store float %7275, ptr %7276, align 4, !tbaa !65
  %7277 = add nuw nsw i64 %7269, 2
  %7278 = getelementptr inbounds float, ptr %6916, i64 %7277
  %7279 = load float, ptr %7278, align 4, !tbaa !65
  %7280 = getelementptr inbounds float, ptr %6923, i64 %7277
  store float %7279, ptr %7280, align 4, !tbaa !65
  %7281 = add nuw nsw i64 %7269, 3
  %7282 = getelementptr inbounds float, ptr %6916, i64 %7281
  %7283 = load float, ptr %7282, align 4, !tbaa !65
  %7284 = getelementptr inbounds float, ptr %6923, i64 %7281
  store float %7283, ptr %7284, align 4, !tbaa !65
  %7285 = add nuw nsw i64 %7269, 4
  %7286 = icmp eq i64 %7285, %6807
  br i1 %7286, label %7287, label %7268, !llvm.loop !1038

7287:                                             ; preds = %7265, %7268, %7251
  br i1 %6838, label %7318, label %7288

7288:                                             ; preds = %7287
  %7289 = getelementptr i8, ptr %6891, i64 %6922
  %7290 = icmp ult ptr %6923, %6820
  %7291 = icmp ult ptr %6192, %7289
  %7292 = and i1 %7290, %7291
  br i1 %7292, label %7318, label %7293

7293:                                             ; preds = %7288, %7293
  %7294 = phi i64 [ %7315, %7293 ], [ 0, %7288 ]
  %7295 = getelementptr inbounds float, ptr %6192, i64 %7294
  %7296 = load <8 x float>, ptr %7295, align 4, !tbaa !65, !alias.scope !1039
  %7297 = getelementptr inbounds float, ptr %7295, i64 8
  %7298 = load <8 x float>, ptr %7297, align 4, !tbaa !65, !alias.scope !1039
  %7299 = getelementptr inbounds float, ptr %7295, i64 16
  %7300 = load <8 x float>, ptr %7299, align 4, !tbaa !65, !alias.scope !1039
  %7301 = getelementptr inbounds float, ptr %7295, i64 24
  %7302 = load <8 x float>, ptr %7301, align 4, !tbaa !65, !alias.scope !1039
  %7303 = getelementptr inbounds float, ptr %6923, i64 %7294
  %7304 = load <8 x float>, ptr %7303, align 4, !tbaa !65, !alias.scope !1042, !noalias !1039
  %7305 = getelementptr inbounds float, ptr %7303, i64 8
  %7306 = load <8 x float>, ptr %7305, align 4, !tbaa !65, !alias.scope !1042, !noalias !1039
  %7307 = getelementptr inbounds float, ptr %7303, i64 16
  %7308 = load <8 x float>, ptr %7307, align 4, !tbaa !65, !alias.scope !1042, !noalias !1039
  %7309 = getelementptr inbounds float, ptr %7303, i64 24
  %7310 = load <8 x float>, ptr %7309, align 4, !tbaa !65, !alias.scope !1042, !noalias !1039
  %7311 = fsub fast <8 x float> %7304, %7296
  %7312 = fsub fast <8 x float> %7306, %7298
  %7313 = fsub fast <8 x float> %7308, %7300
  %7314 = fsub fast <8 x float> %7310, %7302
  store <8 x float> %7311, ptr %7303, align 4, !tbaa !65, !alias.scope !1042, !noalias !1039
  store <8 x float> %7312, ptr %7305, align 4, !tbaa !65, !alias.scope !1042, !noalias !1039
  store <8 x float> %7313, ptr %7307, align 4, !tbaa !65, !alias.scope !1042, !noalias !1039
  store <8 x float> %7314, ptr %7309, align 4, !tbaa !65, !alias.scope !1042, !noalias !1039
  %7315 = add nuw i64 %7294, 32
  %7316 = icmp eq i64 %7315, %6839
  br i1 %7316, label %7317, label %7293, !llvm.loop !1044

7317:                                             ; preds = %7293
  br i1 %6840, label %7363, label %7318

7318:                                             ; preds = %7288, %7287, %7317
  %7319 = phi i64 [ 0, %7288 ], [ 0, %7287 ], [ %6839, %7317 ]
  %7320 = xor i64 %7319, -1
  %7321 = add nsw i64 %7320, %6807
  br i1 %6842, label %7333, label %7322

7322:                                             ; preds = %7318, %7322
  %7323 = phi i64 [ %7330, %7322 ], [ %7319, %7318 ]
  %7324 = phi i64 [ %7331, %7322 ], [ 0, %7318 ]
  %7325 = getelementptr inbounds float, ptr %6192, i64 %7323
  %7326 = load float, ptr %7325, align 4, !tbaa !65
  %7327 = getelementptr inbounds float, ptr %6923, i64 %7323
  %7328 = load float, ptr %7327, align 4, !tbaa !65
  %7329 = fsub fast float %7328, %7326
  store float %7329, ptr %7327, align 4, !tbaa !65
  %7330 = add nuw nsw i64 %7323, 1
  %7331 = add i64 %7324, 1
  %7332 = icmp eq i64 %7331, %6841
  br i1 %7332, label %7333, label %7322, !llvm.loop !1045

7333:                                             ; preds = %7322, %7318
  %7334 = phi i64 [ %7319, %7318 ], [ %7330, %7322 ]
  %7335 = icmp ult i64 %7321, 3
  br i1 %7335, label %7363, label %7336

7336:                                             ; preds = %7333, %7336
  %7337 = phi i64 [ %7361, %7336 ], [ %7334, %7333 ]
  %7338 = getelementptr inbounds float, ptr %6192, i64 %7337
  %7339 = load float, ptr %7338, align 4, !tbaa !65
  %7340 = getelementptr inbounds float, ptr %6923, i64 %7337
  %7341 = load float, ptr %7340, align 4, !tbaa !65
  %7342 = fsub fast float %7341, %7339
  store float %7342, ptr %7340, align 4, !tbaa !65
  %7343 = add nuw nsw i64 %7337, 1
  %7344 = getelementptr inbounds float, ptr %6192, i64 %7343
  %7345 = load float, ptr %7344, align 4, !tbaa !65
  %7346 = getelementptr inbounds float, ptr %6923, i64 %7343
  %7347 = load float, ptr %7346, align 4, !tbaa !65
  %7348 = fsub fast float %7347, %7345
  store float %7348, ptr %7346, align 4, !tbaa !65
  %7349 = add nuw nsw i64 %7337, 2
  %7350 = getelementptr inbounds float, ptr %6192, i64 %7349
  %7351 = load float, ptr %7350, align 4, !tbaa !65
  %7352 = getelementptr inbounds float, ptr %6923, i64 %7349
  %7353 = load float, ptr %7352, align 4, !tbaa !65
  %7354 = fsub fast float %7353, %7351
  store float %7354, ptr %7352, align 4, !tbaa !65
  %7355 = add nuw nsw i64 %7337, 3
  %7356 = getelementptr inbounds float, ptr %6192, i64 %7355
  %7357 = load float, ptr %7356, align 4, !tbaa !65
  %7358 = getelementptr inbounds float, ptr %6923, i64 %7355
  %7359 = load float, ptr %7358, align 4, !tbaa !65
  %7360 = fsub fast float %7359, %7357
  store float %7360, ptr %7358, align 4, !tbaa !65
  %7361 = add nuw nsw i64 %7337, 4
  %7362 = icmp eq i64 %7361, %6807
  br i1 %7362, label %7363, label %7336, !llvm.loop !1046

7363:                                             ; preds = %7333, %7336, %7317
  br i1 %6843, label %7381, label %7364

7364:                                             ; preds = %7363, %7364
  %7365 = phi i64 [ %7378, %7364 ], [ 0, %7363 ]
  %7366 = getelementptr inbounds float, ptr %6923, i64 %7365
  %7367 = load <8 x float>, ptr %7366, align 4, !tbaa !65
  %7368 = getelementptr inbounds float, ptr %7366, i64 8
  %7369 = load <8 x float>, ptr %7368, align 4, !tbaa !65
  %7370 = getelementptr inbounds float, ptr %7366, i64 16
  %7371 = load <8 x float>, ptr %7370, align 4, !tbaa !65
  %7372 = getelementptr inbounds float, ptr %7366, i64 24
  %7373 = load <8 x float>, ptr %7372, align 4, !tbaa !65
  %7374 = fmul fast <8 x float> %7367, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7375 = fmul fast <8 x float> %7369, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7376 = fmul fast <8 x float> %7371, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7377 = fmul fast <8 x float> %7373, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  store <8 x float> %7374, ptr %7366, align 4, !tbaa !65
  store <8 x float> %7375, ptr %7368, align 4, !tbaa !65
  store <8 x float> %7376, ptr %7370, align 4, !tbaa !65
  store <8 x float> %7377, ptr %7372, align 4, !tbaa !65
  %7378 = add nuw i64 %7365, 32
  %7379 = icmp eq i64 %7378, %6844
  br i1 %7379, label %7380, label %7364, !llvm.loop !1047

7380:                                             ; preds = %7364
  br i1 %6845, label %7390, label %7381

7381:                                             ; preds = %7363, %7380
  %7382 = phi i64 [ 0, %7363 ], [ %6844, %7380 ]
  br label %7383

7383:                                             ; preds = %7381, %7383
  %7384 = phi i64 [ %7388, %7383 ], [ %7382, %7381 ]
  %7385 = getelementptr inbounds float, ptr %6923, i64 %7384
  %7386 = load float, ptr %7385, align 4, !tbaa !65
  %7387 = fmul fast float %7386, 2.500000e-01
  store float %7387, ptr %7385, align 4, !tbaa !65
  %7388 = add nuw nsw i64 %7384, 1
  %7389 = icmp eq i64 %7388, %6807
  br i1 %7389, label %7390, label %7383, !llvm.loop !1048

7390:                                             ; preds = %7383, %7380
  br i1 %6846, label %7421, label %7391

7391:                                             ; preds = %7390
  %7392 = getelementptr i8, ptr %6890, i64 %6922
  %7393 = icmp ult ptr %6923, %6817
  %7394 = icmp ult ptr %6197, %7392
  %7395 = and i1 %7393, %7394
  br i1 %7395, label %7421, label %7396

7396:                                             ; preds = %7391, %7396
  %7397 = phi i64 [ %7418, %7396 ], [ 0, %7391 ]
  %7398 = getelementptr inbounds float, ptr %6197, i64 %7397
  %7399 = load <8 x float>, ptr %7398, align 4, !tbaa !65, !alias.scope !1049
  %7400 = getelementptr inbounds float, ptr %7398, i64 8
  %7401 = load <8 x float>, ptr %7400, align 4, !tbaa !65, !alias.scope !1049
  %7402 = getelementptr inbounds float, ptr %7398, i64 16
  %7403 = load <8 x float>, ptr %7402, align 4, !tbaa !65, !alias.scope !1049
  %7404 = getelementptr inbounds float, ptr %7398, i64 24
  %7405 = load <8 x float>, ptr %7404, align 4, !tbaa !65, !alias.scope !1049
  %7406 = getelementptr inbounds float, ptr %6923, i64 %7397
  %7407 = load <8 x float>, ptr %7406, align 4, !tbaa !65, !alias.scope !1052, !noalias !1049
  %7408 = getelementptr inbounds float, ptr %7406, i64 8
  %7409 = load <8 x float>, ptr %7408, align 4, !tbaa !65, !alias.scope !1052, !noalias !1049
  %7410 = getelementptr inbounds float, ptr %7406, i64 16
  %7411 = load <8 x float>, ptr %7410, align 4, !tbaa !65, !alias.scope !1052, !noalias !1049
  %7412 = getelementptr inbounds float, ptr %7406, i64 24
  %7413 = load <8 x float>, ptr %7412, align 4, !tbaa !65, !alias.scope !1052, !noalias !1049
  %7414 = fadd fast <8 x float> %7407, %7399
  %7415 = fadd fast <8 x float> %7409, %7401
  %7416 = fadd fast <8 x float> %7411, %7403
  %7417 = fadd fast <8 x float> %7413, %7405
  store <8 x float> %7414, ptr %7406, align 4, !tbaa !65, !alias.scope !1052, !noalias !1049
  store <8 x float> %7415, ptr %7408, align 4, !tbaa !65, !alias.scope !1052, !noalias !1049
  store <8 x float> %7416, ptr %7410, align 4, !tbaa !65, !alias.scope !1052, !noalias !1049
  store <8 x float> %7417, ptr %7412, align 4, !tbaa !65, !alias.scope !1052, !noalias !1049
  %7418 = add nuw i64 %7397, 32
  %7419 = icmp eq i64 %7418, %6847
  br i1 %7419, label %7420, label %7396, !llvm.loop !1054

7420:                                             ; preds = %7396
  br i1 %6848, label %7466, label %7421

7421:                                             ; preds = %7391, %7390, %7420
  %7422 = phi i64 [ 0, %7391 ], [ 0, %7390 ], [ %6847, %7420 ]
  %7423 = xor i64 %7422, -1
  %7424 = add nsw i64 %7423, %6807
  br i1 %6850, label %7436, label %7425

7425:                                             ; preds = %7421, %7425
  %7426 = phi i64 [ %7433, %7425 ], [ %7422, %7421 ]
  %7427 = phi i64 [ %7434, %7425 ], [ 0, %7421 ]
  %7428 = getelementptr inbounds float, ptr %6197, i64 %7426
  %7429 = load float, ptr %7428, align 4, !tbaa !65
  %7430 = getelementptr inbounds float, ptr %6923, i64 %7426
  %7431 = load float, ptr %7430, align 4, !tbaa !65
  %7432 = fadd fast float %7431, %7429
  store float %7432, ptr %7430, align 4, !tbaa !65
  %7433 = add nuw nsw i64 %7426, 1
  %7434 = add i64 %7427, 1
  %7435 = icmp eq i64 %7434, %6849
  br i1 %7435, label %7436, label %7425, !llvm.loop !1055

7436:                                             ; preds = %7425, %7421
  %7437 = phi i64 [ %7422, %7421 ], [ %7433, %7425 ]
  %7438 = icmp ult i64 %7424, 3
  br i1 %7438, label %7466, label %7439

7439:                                             ; preds = %7436, %7439
  %7440 = phi i64 [ %7464, %7439 ], [ %7437, %7436 ]
  %7441 = getelementptr inbounds float, ptr %6197, i64 %7440
  %7442 = load float, ptr %7441, align 4, !tbaa !65
  %7443 = getelementptr inbounds float, ptr %6923, i64 %7440
  %7444 = load float, ptr %7443, align 4, !tbaa !65
  %7445 = fadd fast float %7444, %7442
  store float %7445, ptr %7443, align 4, !tbaa !65
  %7446 = add nuw nsw i64 %7440, 1
  %7447 = getelementptr inbounds float, ptr %6197, i64 %7446
  %7448 = load float, ptr %7447, align 4, !tbaa !65
  %7449 = getelementptr inbounds float, ptr %6923, i64 %7446
  %7450 = load float, ptr %7449, align 4, !tbaa !65
  %7451 = fadd fast float %7450, %7448
  store float %7451, ptr %7449, align 4, !tbaa !65
  %7452 = add nuw nsw i64 %7440, 2
  %7453 = getelementptr inbounds float, ptr %6197, i64 %7452
  %7454 = load float, ptr %7453, align 4, !tbaa !65
  %7455 = getelementptr inbounds float, ptr %6923, i64 %7452
  %7456 = load float, ptr %7455, align 4, !tbaa !65
  %7457 = fadd fast float %7456, %7454
  store float %7457, ptr %7455, align 4, !tbaa !65
  %7458 = add nuw nsw i64 %7440, 3
  %7459 = getelementptr inbounds float, ptr %6197, i64 %7458
  %7460 = load float, ptr %7459, align 4, !tbaa !65
  %7461 = getelementptr inbounds float, ptr %6923, i64 %7458
  %7462 = load float, ptr %7461, align 4, !tbaa !65
  %7463 = fadd fast float %7462, %7460
  store float %7463, ptr %7461, align 4, !tbaa !65
  %7464 = add nuw nsw i64 %7440, 4
  %7465 = icmp eq i64 %7464, %6807
  br i1 %7465, label %7466, label %7439, !llvm.loop !1056

7466:                                             ; preds = %7436, %7439, %7420, %7078
  %7467 = add nuw nsw i32 %6908, 1
  %7468 = icmp eq i32 %7467, %13
  br i1 %7468, label %7469, label %6907, !llvm.loop !1057

7469:                                             ; preds = %7466
  %7470 = add nuw nsw i32 %6903, 1
  %7471 = icmp eq i32 %7470, %13
  br i1 %7471, label %7472, label %6902, !llvm.loop !1058

7472:                                             ; preds = %7469
  br i1 %6214, label %7475, label %7473

7473:                                             ; preds = %6881, %7472
  %7474 = add nuw nsw i64 %6882, 1
  br label %8056

7475:                                             ; preds = %7472
  %7476 = trunc i64 %6882 to i32
  %7477 = mul i32 %6206, %7476
  %7478 = add nsw i32 %7477, 1
  %7479 = mul nsw i32 %7478, %16
  %7480 = sext i32 %7479 to i64
  %7481 = getelementptr inbounds i8, ptr %6804, i64 %7480
  %7482 = add nuw nsw i64 %6882, 1
  %7483 = icmp eq i64 %7482, %6808
  %7484 = trunc i64 %7482 to i32
  %7485 = select i1 %7483, i32 0, i32 %7484
  %7486 = mul i32 %6206, %7485
  %7487 = add nsw i32 %7486, 1
  %7488 = mul nsw i32 %7487, %16
  %7489 = sext i32 %7488 to i64
  %7490 = getelementptr inbounds i8, ptr %6804, i64 %7489
  %7491 = getelementptr i8, ptr %6810, i64 %7480
  %7492 = getelementptr i8, ptr %6813, i64 %7480
  %7493 = add i64 %6805, %7480
  %7494 = add i64 %6805, %7480
  %7495 = add i64 %6805, %7480
  %7496 = add i64 %6805, %7489
  %7497 = add i64 %6805, %7480
  %7498 = add i64 %6805, %7480
  %7499 = add i64 %6805, %7480
  %7500 = add i64 %6805, %7480
  %7501 = add i64 %6805, %7489
  %7502 = add i64 %6805, %7489
  br label %7503

7503:                                             ; preds = %7475, %8053
  %7504 = phi i32 [ 1, %7475 ], [ %8054, %8053 ]
  %7505 = shl nuw nsw i32 %7504, 1
  %7506 = mul nsw i32 %7504, %16
  %7507 = shl i32 %7506, %6211
  %7508 = sext i32 %7507 to i64
  %7509 = getelementptr i8, ptr %7481, i64 %7508
  %7510 = mul nsw i32 %7505, %16
  %7511 = shl i32 %7510, %6204
  %7512 = sext i32 %7511 to i64
  %7513 = getelementptr i8, ptr %7481, i64 %7512
  %7514 = add nsw i32 %7505, -1
  %7515 = mul nsw i32 %7514, %6203
  %7516 = add nsw i32 %7515, 1
  %7517 = shl i32 %7516, %6204
  %7518 = add nsw i32 %7517, %6203
  %7519 = mul nsw i32 %7518, %16
  %7520 = sext i32 %7519 to i64
  %7521 = getelementptr inbounds i8, ptr %7490, i64 %7520
  %7522 = or i32 %7505, 1
  %7523 = mul nsw i32 %7522, %6203
  %7524 = add nsw i32 %7523, 1
  %7525 = shl i32 %7524, %6204
  %7526 = add nsw i32 %7525, %6203
  %7527 = mul nsw i32 %7526, %16
  %7528 = sext i32 %7527 to i64
  %7529 = getelementptr inbounds i8, ptr %7490, i64 %7528
  %7530 = add nsw i32 %7522, %6203
  %7531 = shl i32 %7530, %6204
  %7532 = add nsw i32 %7531, %6203
  %7533 = mul nsw i32 %7532, %16
  %7534 = sext i32 %7533 to i64
  %7535 = getelementptr inbounds i8, ptr %7481, i64 %7534
  %7536 = add nuw i32 %7505, %6202
  %7537 = shl i32 %7536, %6204
  %7538 = add nsw i32 %7537, %6203
  %7539 = mul nsw i32 %7538, %16
  %7540 = sext i32 %7539 to i64
  %7541 = getelementptr inbounds i8, ptr %7481, i64 %7540
  br i1 %6500, label %7542, label %7668

7542:                                             ; preds = %7503
  br i1 %6851, label %7616, label %7543

7543:                                             ; preds = %7542
  %7544 = add i64 %7499, %7540
  %7545 = sub i64 %6193, %7544
  %7546 = icmp ult i64 %7545, 128
  %7547 = add i64 %7500, %7534
  %7548 = sub i64 %6193, %7547
  %7549 = icmp ult i64 %7548, 128
  %7550 = or i1 %7546, %7549
  %7551 = add i64 %7501, %7528
  %7552 = sub i64 %6193, %7551
  %7553 = icmp ult i64 %7552, 128
  %7554 = or i1 %7550, %7553
  %7555 = add i64 %7502, %7520
  %7556 = sub i64 %6193, %7555
  %7557 = icmp ult i64 %7556, 128
  %7558 = or i1 %7554, %7557
  br i1 %7558, label %7616, label %7559

7559:                                             ; preds = %7543, %7559
  %7560 = phi i64 [ %7613, %7559 ], [ 0, %7543 ]
  %7561 = getelementptr inbounds float, ptr %7521, i64 %7560
  %7562 = load <8 x float>, ptr %7561, align 4, !tbaa !65
  %7563 = getelementptr inbounds float, ptr %7561, i64 8
  %7564 = load <8 x float>, ptr %7563, align 4, !tbaa !65
  %7565 = getelementptr inbounds float, ptr %7561, i64 16
  %7566 = load <8 x float>, ptr %7565, align 4, !tbaa !65
  %7567 = getelementptr inbounds float, ptr %7561, i64 24
  %7568 = load <8 x float>, ptr %7567, align 4, !tbaa !65
  %7569 = getelementptr inbounds float, ptr %7529, i64 %7560
  %7570 = load <8 x float>, ptr %7569, align 4, !tbaa !65
  %7571 = getelementptr inbounds float, ptr %7569, i64 8
  %7572 = load <8 x float>, ptr %7571, align 4, !tbaa !65
  %7573 = getelementptr inbounds float, ptr %7569, i64 16
  %7574 = load <8 x float>, ptr %7573, align 4, !tbaa !65
  %7575 = getelementptr inbounds float, ptr %7569, i64 24
  %7576 = load <8 x float>, ptr %7575, align 4, !tbaa !65
  %7577 = fadd fast <8 x float> %7570, %7562
  %7578 = fadd fast <8 x float> %7572, %7564
  %7579 = fadd fast <8 x float> %7574, %7566
  %7580 = fadd fast <8 x float> %7576, %7568
  %7581 = getelementptr inbounds float, ptr %7535, i64 %7560
  %7582 = load <8 x float>, ptr %7581, align 4, !tbaa !65
  %7583 = getelementptr inbounds float, ptr %7581, i64 8
  %7584 = load <8 x float>, ptr %7583, align 4, !tbaa !65
  %7585 = getelementptr inbounds float, ptr %7581, i64 16
  %7586 = load <8 x float>, ptr %7585, align 4, !tbaa !65
  %7587 = getelementptr inbounds float, ptr %7581, i64 24
  %7588 = load <8 x float>, ptr %7587, align 4, !tbaa !65
  %7589 = fadd fast <8 x float> %7577, %7582
  %7590 = fadd fast <8 x float> %7578, %7584
  %7591 = fadd fast <8 x float> %7579, %7586
  %7592 = fadd fast <8 x float> %7580, %7588
  %7593 = getelementptr inbounds float, ptr %7541, i64 %7560
  %7594 = load <8 x float>, ptr %7593, align 4, !tbaa !65
  %7595 = getelementptr inbounds float, ptr %7593, i64 8
  %7596 = load <8 x float>, ptr %7595, align 4, !tbaa !65
  %7597 = getelementptr inbounds float, ptr %7593, i64 16
  %7598 = load <8 x float>, ptr %7597, align 4, !tbaa !65
  %7599 = getelementptr inbounds float, ptr %7593, i64 24
  %7600 = load <8 x float>, ptr %7599, align 4, !tbaa !65
  %7601 = fadd fast <8 x float> %7589, %7594
  %7602 = fadd fast <8 x float> %7590, %7596
  %7603 = fadd fast <8 x float> %7591, %7598
  %7604 = fadd fast <8 x float> %7592, %7600
  %7605 = fmul fast <8 x float> %7601, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7606 = fmul fast <8 x float> %7602, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7607 = fmul fast <8 x float> %7603, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7608 = fmul fast <8 x float> %7604, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7609 = getelementptr inbounds float, ptr %6192, i64 %7560
  store <8 x float> %7605, ptr %7609, align 4, !tbaa !65
  %7610 = getelementptr inbounds float, ptr %7609, i64 8
  store <8 x float> %7606, ptr %7610, align 4, !tbaa !65
  %7611 = getelementptr inbounds float, ptr %7609, i64 16
  store <8 x float> %7607, ptr %7611, align 4, !tbaa !65
  %7612 = getelementptr inbounds float, ptr %7609, i64 24
  store <8 x float> %7608, ptr %7612, align 4, !tbaa !65
  %7613 = add nuw i64 %7560, 32
  %7614 = icmp eq i64 %7613, %6852
  br i1 %7614, label %7615, label %7559, !llvm.loop !1059

7615:                                             ; preds = %7559
  br i1 %6853, label %7668, label %7616

7616:                                             ; preds = %7543, %7542, %7615
  %7617 = phi i64 [ 0, %7543 ], [ 0, %7542 ], [ %6852, %7615 ]
  %7618 = xor i64 %7617, -1
  br i1 %6855, label %7634, label %7619

7619:                                             ; preds = %7616
  %7620 = getelementptr inbounds float, ptr %7521, i64 %7617
  %7621 = load float, ptr %7620, align 4, !tbaa !65
  %7622 = getelementptr inbounds float, ptr %7529, i64 %7617
  %7623 = load float, ptr %7622, align 4, !tbaa !65
  %7624 = fadd fast float %7623, %7621
  %7625 = getelementptr inbounds float, ptr %7535, i64 %7617
  %7626 = load float, ptr %7625, align 4, !tbaa !65
  %7627 = fadd fast float %7624, %7626
  %7628 = getelementptr inbounds float, ptr %7541, i64 %7617
  %7629 = load float, ptr %7628, align 4, !tbaa !65
  %7630 = fadd fast float %7627, %7629
  %7631 = fmul fast float %7630, 2.500000e-01
  %7632 = getelementptr inbounds float, ptr %6192, i64 %7617
  store float %7631, ptr %7632, align 4, !tbaa !65
  %7633 = or i64 %7617, 1
  br label %7634

7634:                                             ; preds = %7619, %7616
  %7635 = phi i64 [ %7617, %7616 ], [ %7633, %7619 ]
  %7636 = icmp eq i64 %7618, %6856
  br i1 %7636, label %7668, label %7637

7637:                                             ; preds = %7634, %7637
  %7638 = phi i64 [ %7666, %7637 ], [ %7635, %7634 ]
  %7639 = getelementptr inbounds float, ptr %7521, i64 %7638
  %7640 = load float, ptr %7639, align 4, !tbaa !65
  %7641 = getelementptr inbounds float, ptr %7529, i64 %7638
  %7642 = load float, ptr %7641, align 4, !tbaa !65
  %7643 = fadd fast float %7642, %7640
  %7644 = getelementptr inbounds float, ptr %7535, i64 %7638
  %7645 = load float, ptr %7644, align 4, !tbaa !65
  %7646 = fadd fast float %7643, %7645
  %7647 = getelementptr inbounds float, ptr %7541, i64 %7638
  %7648 = load float, ptr %7647, align 4, !tbaa !65
  %7649 = fadd fast float %7646, %7648
  %7650 = fmul fast float %7649, 2.500000e-01
  %7651 = getelementptr inbounds float, ptr %6192, i64 %7638
  store float %7650, ptr %7651, align 4, !tbaa !65
  %7652 = add nuw nsw i64 %7638, 1
  %7653 = getelementptr inbounds float, ptr %7521, i64 %7652
  %7654 = load float, ptr %7653, align 4, !tbaa !65
  %7655 = getelementptr inbounds float, ptr %7529, i64 %7652
  %7656 = load float, ptr %7655, align 4, !tbaa !65
  %7657 = fadd fast float %7656, %7654
  %7658 = getelementptr inbounds float, ptr %7535, i64 %7652
  %7659 = load float, ptr %7658, align 4, !tbaa !65
  %7660 = fadd fast float %7657, %7659
  %7661 = getelementptr inbounds float, ptr %7541, i64 %7652
  %7662 = load float, ptr %7661, align 4, !tbaa !65
  %7663 = fadd fast float %7660, %7662
  %7664 = fmul fast float %7663, 2.500000e-01
  %7665 = getelementptr inbounds float, ptr %6192, i64 %7652
  store float %7664, ptr %7665, align 4, !tbaa !65
  %7666 = add nuw nsw i64 %7638, 2
  %7667 = icmp eq i64 %7666, %6807
  br i1 %7667, label %7668, label %7637, !llvm.loop !1060

7668:                                             ; preds = %7634, %7637, %7615, %7503
  %7669 = mul nsw i32 %7514, %16
  %7670 = shl i32 %7669, %6204
  %7671 = sext i32 %7670 to i64
  %7672 = getelementptr inbounds i8, ptr %7481, i64 %7671
  %7673 = mul nsw i32 %7522, %16
  %7674 = shl i32 %7673, %6204
  %7675 = sext i32 %7674 to i64
  %7676 = getelementptr inbounds i8, ptr %7481, i64 %7675
  %7677 = mul nsw i32 %7505, %6203
  %7678 = or i32 %7677, 1
  %7679 = shl i32 %7678, %6204
  %7680 = add nsw i32 %7679, %6203
  %7681 = mul nsw i32 %7680, %16
  %7682 = sext i32 %7681 to i64
  %7683 = getelementptr inbounds i8, ptr %7490, i64 %7682
  %7684 = add nsw i32 %7505, %6203
  %7685 = shl i32 %7684, %6204
  %7686 = add nsw i32 %7685, %6203
  %7687 = mul nsw i32 %7686, %16
  %7688 = sext i32 %7687 to i64
  %7689 = getelementptr inbounds i8, ptr %7481, i64 %7688
  br i1 %6500, label %7690, label %8053

7690:                                             ; preds = %7668
  br i1 %6857, label %7764, label %7691

7691:                                             ; preds = %7690
  %7692 = add i64 %7495, %7688
  %7693 = sub i64 %6198, %7692
  %7694 = icmp ult i64 %7693, 128
  %7695 = add i64 %7496, %7682
  %7696 = sub i64 %6198, %7695
  %7697 = icmp ult i64 %7696, 128
  %7698 = or i1 %7694, %7697
  %7699 = add i64 %7497, %7675
  %7700 = sub i64 %6198, %7699
  %7701 = icmp ult i64 %7700, 128
  %7702 = or i1 %7698, %7701
  %7703 = add i64 %7498, %7671
  %7704 = sub i64 %6198, %7703
  %7705 = icmp ult i64 %7704, 128
  %7706 = or i1 %7702, %7705
  br i1 %7706, label %7764, label %7707

7707:                                             ; preds = %7691, %7707
  %7708 = phi i64 [ %7761, %7707 ], [ 0, %7691 ]
  %7709 = getelementptr inbounds float, ptr %7672, i64 %7708
  %7710 = load <8 x float>, ptr %7709, align 4, !tbaa !65
  %7711 = getelementptr inbounds float, ptr %7709, i64 8
  %7712 = load <8 x float>, ptr %7711, align 4, !tbaa !65
  %7713 = getelementptr inbounds float, ptr %7709, i64 16
  %7714 = load <8 x float>, ptr %7713, align 4, !tbaa !65
  %7715 = getelementptr inbounds float, ptr %7709, i64 24
  %7716 = load <8 x float>, ptr %7715, align 4, !tbaa !65
  %7717 = getelementptr inbounds float, ptr %7676, i64 %7708
  %7718 = load <8 x float>, ptr %7717, align 4, !tbaa !65
  %7719 = getelementptr inbounds float, ptr %7717, i64 8
  %7720 = load <8 x float>, ptr %7719, align 4, !tbaa !65
  %7721 = getelementptr inbounds float, ptr %7717, i64 16
  %7722 = load <8 x float>, ptr %7721, align 4, !tbaa !65
  %7723 = getelementptr inbounds float, ptr %7717, i64 24
  %7724 = load <8 x float>, ptr %7723, align 4, !tbaa !65
  %7725 = fadd fast <8 x float> %7718, %7710
  %7726 = fadd fast <8 x float> %7720, %7712
  %7727 = fadd fast <8 x float> %7722, %7714
  %7728 = fadd fast <8 x float> %7724, %7716
  %7729 = getelementptr inbounds float, ptr %7683, i64 %7708
  %7730 = load <8 x float>, ptr %7729, align 4, !tbaa !65
  %7731 = getelementptr inbounds float, ptr %7729, i64 8
  %7732 = load <8 x float>, ptr %7731, align 4, !tbaa !65
  %7733 = getelementptr inbounds float, ptr %7729, i64 16
  %7734 = load <8 x float>, ptr %7733, align 4, !tbaa !65
  %7735 = getelementptr inbounds float, ptr %7729, i64 24
  %7736 = load <8 x float>, ptr %7735, align 4, !tbaa !65
  %7737 = fadd fast <8 x float> %7725, %7730
  %7738 = fadd fast <8 x float> %7726, %7732
  %7739 = fadd fast <8 x float> %7727, %7734
  %7740 = fadd fast <8 x float> %7728, %7736
  %7741 = getelementptr inbounds float, ptr %7689, i64 %7708
  %7742 = load <8 x float>, ptr %7741, align 4, !tbaa !65
  %7743 = getelementptr inbounds float, ptr %7741, i64 8
  %7744 = load <8 x float>, ptr %7743, align 4, !tbaa !65
  %7745 = getelementptr inbounds float, ptr %7741, i64 16
  %7746 = load <8 x float>, ptr %7745, align 4, !tbaa !65
  %7747 = getelementptr inbounds float, ptr %7741, i64 24
  %7748 = load <8 x float>, ptr %7747, align 4, !tbaa !65
  %7749 = fadd fast <8 x float> %7737, %7742
  %7750 = fadd fast <8 x float> %7738, %7744
  %7751 = fadd fast <8 x float> %7739, %7746
  %7752 = fadd fast <8 x float> %7740, %7748
  %7753 = fmul fast <8 x float> %7749, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7754 = fmul fast <8 x float> %7750, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7755 = fmul fast <8 x float> %7751, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7756 = fmul fast <8 x float> %7752, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7757 = getelementptr inbounds float, ptr %6197, i64 %7708
  store <8 x float> %7753, ptr %7757, align 4, !tbaa !65
  %7758 = getelementptr inbounds float, ptr %7757, i64 8
  store <8 x float> %7754, ptr %7758, align 4, !tbaa !65
  %7759 = getelementptr inbounds float, ptr %7757, i64 16
  store <8 x float> %7755, ptr %7759, align 4, !tbaa !65
  %7760 = getelementptr inbounds float, ptr %7757, i64 24
  store <8 x float> %7756, ptr %7760, align 4, !tbaa !65
  %7761 = add nuw i64 %7708, 32
  %7762 = icmp eq i64 %7761, %6858
  br i1 %7762, label %7763, label %7707, !llvm.loop !1061

7763:                                             ; preds = %7707
  br i1 %6859, label %7816, label %7764

7764:                                             ; preds = %7691, %7690, %7763
  %7765 = phi i64 [ 0, %7691 ], [ 0, %7690 ], [ %6858, %7763 ]
  %7766 = xor i64 %7765, -1
  br i1 %6861, label %7782, label %7767

7767:                                             ; preds = %7764
  %7768 = getelementptr inbounds float, ptr %7672, i64 %7765
  %7769 = load float, ptr %7768, align 4, !tbaa !65
  %7770 = getelementptr inbounds float, ptr %7676, i64 %7765
  %7771 = load float, ptr %7770, align 4, !tbaa !65
  %7772 = fadd fast float %7771, %7769
  %7773 = getelementptr inbounds float, ptr %7683, i64 %7765
  %7774 = load float, ptr %7773, align 4, !tbaa !65
  %7775 = fadd fast float %7772, %7774
  %7776 = getelementptr inbounds float, ptr %7689, i64 %7765
  %7777 = load float, ptr %7776, align 4, !tbaa !65
  %7778 = fadd fast float %7775, %7777
  %7779 = fmul fast float %7778, 2.500000e-01
  %7780 = getelementptr inbounds float, ptr %6197, i64 %7765
  store float %7779, ptr %7780, align 4, !tbaa !65
  %7781 = or i64 %7765, 1
  br label %7782

7782:                                             ; preds = %7767, %7764
  %7783 = phi i64 [ %7765, %7764 ], [ %7781, %7767 ]
  %7784 = icmp eq i64 %7766, %6862
  br i1 %7784, label %7816, label %7785

7785:                                             ; preds = %7782, %7785
  %7786 = phi i64 [ %7814, %7785 ], [ %7783, %7782 ]
  %7787 = getelementptr inbounds float, ptr %7672, i64 %7786
  %7788 = load float, ptr %7787, align 4, !tbaa !65
  %7789 = getelementptr inbounds float, ptr %7676, i64 %7786
  %7790 = load float, ptr %7789, align 4, !tbaa !65
  %7791 = fadd fast float %7790, %7788
  %7792 = getelementptr inbounds float, ptr %7683, i64 %7786
  %7793 = load float, ptr %7792, align 4, !tbaa !65
  %7794 = fadd fast float %7791, %7793
  %7795 = getelementptr inbounds float, ptr %7689, i64 %7786
  %7796 = load float, ptr %7795, align 4, !tbaa !65
  %7797 = fadd fast float %7794, %7796
  %7798 = fmul fast float %7797, 2.500000e-01
  %7799 = getelementptr inbounds float, ptr %6197, i64 %7786
  store float %7798, ptr %7799, align 4, !tbaa !65
  %7800 = add nuw nsw i64 %7786, 1
  %7801 = getelementptr inbounds float, ptr %7672, i64 %7800
  %7802 = load float, ptr %7801, align 4, !tbaa !65
  %7803 = getelementptr inbounds float, ptr %7676, i64 %7800
  %7804 = load float, ptr %7803, align 4, !tbaa !65
  %7805 = fadd fast float %7804, %7802
  %7806 = getelementptr inbounds float, ptr %7683, i64 %7800
  %7807 = load float, ptr %7806, align 4, !tbaa !65
  %7808 = fadd fast float %7805, %7807
  %7809 = getelementptr inbounds float, ptr %7689, i64 %7800
  %7810 = load float, ptr %7809, align 4, !tbaa !65
  %7811 = fadd fast float %7808, %7810
  %7812 = fmul fast float %7811, 2.500000e-01
  %7813 = getelementptr inbounds float, ptr %6197, i64 %7800
  store float %7812, ptr %7813, align 4, !tbaa !65
  %7814 = add nuw nsw i64 %7786, 2
  %7815 = icmp eq i64 %7814, %6807
  br i1 %7815, label %7816, label %7785, !llvm.loop !1062

7816:                                             ; preds = %7782, %7785, %7763
  br i1 %6863, label %7839, label %7817

7817:                                             ; preds = %7816
  %7818 = add i64 %7493, %7512
  %7819 = add i64 %7494, %7508
  %7820 = sub i64 %7818, %7819
  %7821 = icmp ult i64 %7820, 128
  br i1 %7821, label %7839, label %7822

7822:                                             ; preds = %7817, %7822
  %7823 = phi i64 [ %7836, %7822 ], [ 0, %7817 ]
  %7824 = getelementptr inbounds float, ptr %7509, i64 %7823
  %7825 = load <8 x float>, ptr %7824, align 4, !tbaa !65
  %7826 = getelementptr inbounds float, ptr %7824, i64 8
  %7827 = load <8 x float>, ptr %7826, align 4, !tbaa !65
  %7828 = getelementptr inbounds float, ptr %7824, i64 16
  %7829 = load <8 x float>, ptr %7828, align 4, !tbaa !65
  %7830 = getelementptr inbounds float, ptr %7824, i64 24
  %7831 = load <8 x float>, ptr %7830, align 4, !tbaa !65
  %7832 = getelementptr inbounds float, ptr %7513, i64 %7823
  store <8 x float> %7825, ptr %7832, align 4, !tbaa !65
  %7833 = getelementptr inbounds float, ptr %7832, i64 8
  store <8 x float> %7827, ptr %7833, align 4, !tbaa !65
  %7834 = getelementptr inbounds float, ptr %7832, i64 16
  store <8 x float> %7829, ptr %7834, align 4, !tbaa !65
  %7835 = getelementptr inbounds float, ptr %7832, i64 24
  store <8 x float> %7831, ptr %7835, align 4, !tbaa !65
  %7836 = add nuw i64 %7823, 32
  %7837 = icmp eq i64 %7836, %6864
  br i1 %7837, label %7838, label %7822, !llvm.loop !1063

7838:                                             ; preds = %7822
  br i1 %6865, label %7874, label %7839

7839:                                             ; preds = %7817, %7816, %7838
  %7840 = phi i64 [ 0, %7817 ], [ 0, %7816 ], [ %6864, %7838 ]
  %7841 = xor i64 %7840, -1
  %7842 = add nsw i64 %7841, %6807
  br i1 %6867, label %7852, label %7843

7843:                                             ; preds = %7839, %7843
  %7844 = phi i64 [ %7849, %7843 ], [ %7840, %7839 ]
  %7845 = phi i64 [ %7850, %7843 ], [ 0, %7839 ]
  %7846 = getelementptr inbounds float, ptr %7509, i64 %7844
  %7847 = load float, ptr %7846, align 4, !tbaa !65
  %7848 = getelementptr inbounds float, ptr %7513, i64 %7844
  store float %7847, ptr %7848, align 4, !tbaa !65
  %7849 = add nuw nsw i64 %7844, 1
  %7850 = add i64 %7845, 1
  %7851 = icmp eq i64 %7850, %6866
  br i1 %7851, label %7852, label %7843, !llvm.loop !1064

7852:                                             ; preds = %7843, %7839
  %7853 = phi i64 [ %7840, %7839 ], [ %7849, %7843 ]
  %7854 = icmp ult i64 %7842, 3
  br i1 %7854, label %7874, label %7855

7855:                                             ; preds = %7852, %7855
  %7856 = phi i64 [ %7872, %7855 ], [ %7853, %7852 ]
  %7857 = getelementptr inbounds float, ptr %7509, i64 %7856
  %7858 = load float, ptr %7857, align 4, !tbaa !65
  %7859 = getelementptr inbounds float, ptr %7513, i64 %7856
  store float %7858, ptr %7859, align 4, !tbaa !65
  %7860 = add nuw nsw i64 %7856, 1
  %7861 = getelementptr inbounds float, ptr %7509, i64 %7860
  %7862 = load float, ptr %7861, align 4, !tbaa !65
  %7863 = getelementptr inbounds float, ptr %7513, i64 %7860
  store float %7862, ptr %7863, align 4, !tbaa !65
  %7864 = add nuw nsw i64 %7856, 2
  %7865 = getelementptr inbounds float, ptr %7509, i64 %7864
  %7866 = load float, ptr %7865, align 4, !tbaa !65
  %7867 = getelementptr inbounds float, ptr %7513, i64 %7864
  store float %7866, ptr %7867, align 4, !tbaa !65
  %7868 = add nuw nsw i64 %7856, 3
  %7869 = getelementptr inbounds float, ptr %7509, i64 %7868
  %7870 = load float, ptr %7869, align 4, !tbaa !65
  %7871 = getelementptr inbounds float, ptr %7513, i64 %7868
  store float %7870, ptr %7871, align 4, !tbaa !65
  %7872 = add nuw nsw i64 %7856, 4
  %7873 = icmp eq i64 %7872, %6807
  br i1 %7873, label %7874, label %7855, !llvm.loop !1065

7874:                                             ; preds = %7852, %7855, %7838
  br i1 %6868, label %7905, label %7875

7875:                                             ; preds = %7874
  %7876 = getelementptr i8, ptr %7492, i64 %7512
  %7877 = icmp ult ptr %7513, %6814
  %7878 = icmp ult ptr %6192, %7876
  %7879 = and i1 %7877, %7878
  br i1 %7879, label %7905, label %7880

7880:                                             ; preds = %7875, %7880
  %7881 = phi i64 [ %7902, %7880 ], [ 0, %7875 ]
  %7882 = getelementptr inbounds float, ptr %6192, i64 %7881
  %7883 = load <8 x float>, ptr %7882, align 4, !tbaa !65, !alias.scope !1066
  %7884 = getelementptr inbounds float, ptr %7882, i64 8
  %7885 = load <8 x float>, ptr %7884, align 4, !tbaa !65, !alias.scope !1066
  %7886 = getelementptr inbounds float, ptr %7882, i64 16
  %7887 = load <8 x float>, ptr %7886, align 4, !tbaa !65, !alias.scope !1066
  %7888 = getelementptr inbounds float, ptr %7882, i64 24
  %7889 = load <8 x float>, ptr %7888, align 4, !tbaa !65, !alias.scope !1066
  %7890 = getelementptr inbounds float, ptr %7513, i64 %7881
  %7891 = load <8 x float>, ptr %7890, align 4, !tbaa !65, !alias.scope !1069, !noalias !1066
  %7892 = getelementptr inbounds float, ptr %7890, i64 8
  %7893 = load <8 x float>, ptr %7892, align 4, !tbaa !65, !alias.scope !1069, !noalias !1066
  %7894 = getelementptr inbounds float, ptr %7890, i64 16
  %7895 = load <8 x float>, ptr %7894, align 4, !tbaa !65, !alias.scope !1069, !noalias !1066
  %7896 = getelementptr inbounds float, ptr %7890, i64 24
  %7897 = load <8 x float>, ptr %7896, align 4, !tbaa !65, !alias.scope !1069, !noalias !1066
  %7898 = fsub fast <8 x float> %7891, %7883
  %7899 = fsub fast <8 x float> %7893, %7885
  %7900 = fsub fast <8 x float> %7895, %7887
  %7901 = fsub fast <8 x float> %7897, %7889
  store <8 x float> %7898, ptr %7890, align 4, !tbaa !65, !alias.scope !1069, !noalias !1066
  store <8 x float> %7899, ptr %7892, align 4, !tbaa !65, !alias.scope !1069, !noalias !1066
  store <8 x float> %7900, ptr %7894, align 4, !tbaa !65, !alias.scope !1069, !noalias !1066
  store <8 x float> %7901, ptr %7896, align 4, !tbaa !65, !alias.scope !1069, !noalias !1066
  %7902 = add nuw i64 %7881, 32
  %7903 = icmp eq i64 %7902, %6869
  br i1 %7903, label %7904, label %7880, !llvm.loop !1071

7904:                                             ; preds = %7880
  br i1 %6870, label %7950, label %7905

7905:                                             ; preds = %7875, %7874, %7904
  %7906 = phi i64 [ 0, %7875 ], [ 0, %7874 ], [ %6869, %7904 ]
  %7907 = xor i64 %7906, -1
  %7908 = add nsw i64 %7907, %6807
  br i1 %6872, label %7920, label %7909

7909:                                             ; preds = %7905, %7909
  %7910 = phi i64 [ %7917, %7909 ], [ %7906, %7905 ]
  %7911 = phi i64 [ %7918, %7909 ], [ 0, %7905 ]
  %7912 = getelementptr inbounds float, ptr %6192, i64 %7910
  %7913 = load float, ptr %7912, align 4, !tbaa !65
  %7914 = getelementptr inbounds float, ptr %7513, i64 %7910
  %7915 = load float, ptr %7914, align 4, !tbaa !65
  %7916 = fsub fast float %7915, %7913
  store float %7916, ptr %7914, align 4, !tbaa !65
  %7917 = add nuw nsw i64 %7910, 1
  %7918 = add i64 %7911, 1
  %7919 = icmp eq i64 %7918, %6871
  br i1 %7919, label %7920, label %7909, !llvm.loop !1072

7920:                                             ; preds = %7909, %7905
  %7921 = phi i64 [ %7906, %7905 ], [ %7917, %7909 ]
  %7922 = icmp ult i64 %7908, 3
  br i1 %7922, label %7950, label %7923

7923:                                             ; preds = %7920, %7923
  %7924 = phi i64 [ %7948, %7923 ], [ %7921, %7920 ]
  %7925 = getelementptr inbounds float, ptr %6192, i64 %7924
  %7926 = load float, ptr %7925, align 4, !tbaa !65
  %7927 = getelementptr inbounds float, ptr %7513, i64 %7924
  %7928 = load float, ptr %7927, align 4, !tbaa !65
  %7929 = fsub fast float %7928, %7926
  store float %7929, ptr %7927, align 4, !tbaa !65
  %7930 = add nuw nsw i64 %7924, 1
  %7931 = getelementptr inbounds float, ptr %6192, i64 %7930
  %7932 = load float, ptr %7931, align 4, !tbaa !65
  %7933 = getelementptr inbounds float, ptr %7513, i64 %7930
  %7934 = load float, ptr %7933, align 4, !tbaa !65
  %7935 = fsub fast float %7934, %7932
  store float %7935, ptr %7933, align 4, !tbaa !65
  %7936 = add nuw nsw i64 %7924, 2
  %7937 = getelementptr inbounds float, ptr %6192, i64 %7936
  %7938 = load float, ptr %7937, align 4, !tbaa !65
  %7939 = getelementptr inbounds float, ptr %7513, i64 %7936
  %7940 = load float, ptr %7939, align 4, !tbaa !65
  %7941 = fsub fast float %7940, %7938
  store float %7941, ptr %7939, align 4, !tbaa !65
  %7942 = add nuw nsw i64 %7924, 3
  %7943 = getelementptr inbounds float, ptr %6192, i64 %7942
  %7944 = load float, ptr %7943, align 4, !tbaa !65
  %7945 = getelementptr inbounds float, ptr %7513, i64 %7942
  %7946 = load float, ptr %7945, align 4, !tbaa !65
  %7947 = fsub fast float %7946, %7944
  store float %7947, ptr %7945, align 4, !tbaa !65
  %7948 = add nuw nsw i64 %7924, 4
  %7949 = icmp eq i64 %7948, %6807
  br i1 %7949, label %7950, label %7923, !llvm.loop !1073

7950:                                             ; preds = %7920, %7923, %7904
  br i1 %6873, label %7968, label %7951

7951:                                             ; preds = %7950, %7951
  %7952 = phi i64 [ %7965, %7951 ], [ 0, %7950 ]
  %7953 = getelementptr inbounds float, ptr %7513, i64 %7952
  %7954 = load <8 x float>, ptr %7953, align 4, !tbaa !65
  %7955 = getelementptr inbounds float, ptr %7953, i64 8
  %7956 = load <8 x float>, ptr %7955, align 4, !tbaa !65
  %7957 = getelementptr inbounds float, ptr %7953, i64 16
  %7958 = load <8 x float>, ptr %7957, align 4, !tbaa !65
  %7959 = getelementptr inbounds float, ptr %7953, i64 24
  %7960 = load <8 x float>, ptr %7959, align 4, !tbaa !65
  %7961 = fmul fast <8 x float> %7954, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7962 = fmul fast <8 x float> %7956, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7963 = fmul fast <8 x float> %7958, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  %7964 = fmul fast <8 x float> %7960, <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>
  store <8 x float> %7961, ptr %7953, align 4, !tbaa !65
  store <8 x float> %7962, ptr %7955, align 4, !tbaa !65
  store <8 x float> %7963, ptr %7957, align 4, !tbaa !65
  store <8 x float> %7964, ptr %7959, align 4, !tbaa !65
  %7965 = add nuw i64 %7952, 32
  %7966 = icmp eq i64 %7965, %6874
  br i1 %7966, label %7967, label %7951, !llvm.loop !1074

7967:                                             ; preds = %7951
  br i1 %6875, label %7977, label %7968

7968:                                             ; preds = %7950, %7967
  %7969 = phi i64 [ 0, %7950 ], [ %6874, %7967 ]
  br label %7970

7970:                                             ; preds = %7968, %7970
  %7971 = phi i64 [ %7975, %7970 ], [ %7969, %7968 ]
  %7972 = getelementptr inbounds float, ptr %7513, i64 %7971
  %7973 = load float, ptr %7972, align 4, !tbaa !65
  %7974 = fmul fast float %7973, 2.500000e-01
  store float %7974, ptr %7972, align 4, !tbaa !65
  %7975 = add nuw nsw i64 %7971, 1
  %7976 = icmp eq i64 %7975, %6807
  br i1 %7976, label %7977, label %7970, !llvm.loop !1075

7977:                                             ; preds = %7970, %7967
  br i1 %6876, label %8008, label %7978

7978:                                             ; preds = %7977
  %7979 = getelementptr i8, ptr %7491, i64 %7512
  %7980 = icmp ult ptr %7513, %6811
  %7981 = icmp ult ptr %6197, %7979
  %7982 = and i1 %7980, %7981
  br i1 %7982, label %8008, label %7983

7983:                                             ; preds = %7978, %7983
  %7984 = phi i64 [ %8005, %7983 ], [ 0, %7978 ]
  %7985 = getelementptr inbounds float, ptr %6197, i64 %7984
  %7986 = load <8 x float>, ptr %7985, align 4, !tbaa !65, !alias.scope !1076
  %7987 = getelementptr inbounds float, ptr %7985, i64 8
  %7988 = load <8 x float>, ptr %7987, align 4, !tbaa !65, !alias.scope !1076
  %7989 = getelementptr inbounds float, ptr %7985, i64 16
  %7990 = load <8 x float>, ptr %7989, align 4, !tbaa !65, !alias.scope !1076
  %7991 = getelementptr inbounds float, ptr %7985, i64 24
  %7992 = load <8 x float>, ptr %7991, align 4, !tbaa !65, !alias.scope !1076
  %7993 = getelementptr inbounds float, ptr %7513, i64 %7984
  %7994 = load <8 x float>, ptr %7993, align 4, !tbaa !65, !alias.scope !1079, !noalias !1076
  %7995 = getelementptr inbounds float, ptr %7993, i64 8
  %7996 = load <8 x float>, ptr %7995, align 4, !tbaa !65, !alias.scope !1079, !noalias !1076
  %7997 = getelementptr inbounds float, ptr %7993, i64 16
  %7998 = load <8 x float>, ptr %7997, align 4, !tbaa !65, !alias.scope !1079, !noalias !1076
  %7999 = getelementptr inbounds float, ptr %7993, i64 24
  %8000 = load <8 x float>, ptr %7999, align 4, !tbaa !65, !alias.scope !1079, !noalias !1076
  %8001 = fadd fast <8 x float> %7994, %7986
  %8002 = fadd fast <8 x float> %7996, %7988
  %8003 = fadd fast <8 x float> %7998, %7990
  %8004 = fadd fast <8 x float> %8000, %7992
  store <8 x float> %8001, ptr %7993, align 4, !tbaa !65, !alias.scope !1079, !noalias !1076
  store <8 x float> %8002, ptr %7995, align 4, !tbaa !65, !alias.scope !1079, !noalias !1076
  store <8 x float> %8003, ptr %7997, align 4, !tbaa !65, !alias.scope !1079, !noalias !1076
  store <8 x float> %8004, ptr %7999, align 4, !tbaa !65, !alias.scope !1079, !noalias !1076
  %8005 = add nuw i64 %7984, 32
  %8006 = icmp eq i64 %8005, %6877
  br i1 %8006, label %8007, label %7983, !llvm.loop !1081

8007:                                             ; preds = %7983
  br i1 %6878, label %8053, label %8008

8008:                                             ; preds = %7978, %7977, %8007
  %8009 = phi i64 [ 0, %7978 ], [ 0, %7977 ], [ %6877, %8007 ]
  %8010 = xor i64 %8009, -1
  %8011 = add nsw i64 %8010, %6807
  br i1 %6880, label %8023, label %8012

8012:                                             ; preds = %8008, %8012
  %8013 = phi i64 [ %8020, %8012 ], [ %8009, %8008 ]
  %8014 = phi i64 [ %8021, %8012 ], [ 0, %8008 ]
  %8015 = getelementptr inbounds float, ptr %6197, i64 %8013
  %8016 = load float, ptr %8015, align 4, !tbaa !65
  %8017 = getelementptr inbounds float, ptr %7513, i64 %8013
  %8018 = load float, ptr %8017, align 4, !tbaa !65
  %8019 = fadd fast float %8018, %8016
  store float %8019, ptr %8017, align 4, !tbaa !65
  %8020 = add nuw nsw i64 %8013, 1
  %8021 = add i64 %8014, 1
  %8022 = icmp eq i64 %8021, %6879
  br i1 %8022, label %8023, label %8012, !llvm.loop !1082

8023:                                             ; preds = %8012, %8008
  %8024 = phi i64 [ %8009, %8008 ], [ %8020, %8012 ]
  %8025 = icmp ult i64 %8011, 3
  br i1 %8025, label %8053, label %8026

8026:                                             ; preds = %8023, %8026
  %8027 = phi i64 [ %8051, %8026 ], [ %8024, %8023 ]
  %8028 = getelementptr inbounds float, ptr %6197, i64 %8027
  %8029 = load float, ptr %8028, align 4, !tbaa !65
  %8030 = getelementptr inbounds float, ptr %7513, i64 %8027
  %8031 = load float, ptr %8030, align 4, !tbaa !65
  %8032 = fadd fast float %8031, %8029
  store float %8032, ptr %8030, align 4, !tbaa !65
  %8033 = add nuw nsw i64 %8027, 1
  %8034 = getelementptr inbounds float, ptr %6197, i64 %8033
  %8035 = load float, ptr %8034, align 4, !tbaa !65
  %8036 = getelementptr inbounds float, ptr %7513, i64 %8033
  %8037 = load float, ptr %8036, align 4, !tbaa !65
  %8038 = fadd fast float %8037, %8035
  store float %8038, ptr %8036, align 4, !tbaa !65
  %8039 = add nuw nsw i64 %8027, 2
  %8040 = getelementptr inbounds float, ptr %6197, i64 %8039
  %8041 = load float, ptr %8040, align 4, !tbaa !65
  %8042 = getelementptr inbounds float, ptr %7513, i64 %8039
  %8043 = load float, ptr %8042, align 4, !tbaa !65
  %8044 = fadd fast float %8043, %8041
  store float %8044, ptr %8042, align 4, !tbaa !65
  %8045 = add nuw nsw i64 %8027, 3
  %8046 = getelementptr inbounds float, ptr %6197, i64 %8045
  %8047 = load float, ptr %8046, align 4, !tbaa !65
  %8048 = getelementptr inbounds float, ptr %7513, i64 %8045
  %8049 = load float, ptr %8048, align 4, !tbaa !65
  %8050 = fadd fast float %8049, %8047
  store float %8050, ptr %8048, align 4, !tbaa !65
  %8051 = add nuw nsw i64 %8027, 4
  %8052 = icmp eq i64 %8051, %6807
  br i1 %8052, label %8053, label %8026, !llvm.loop !1083

8053:                                             ; preds = %8023, %8026, %8007, %7668
  %8054 = add nuw nsw i32 %7504, 1
  %8055 = icmp eq i32 %8054, %13
  br i1 %8055, label %8056, label %7503, !llvm.loop !1084

8056:                                             ; preds = %8053, %7473
  %8057 = phi i64 [ %7474, %7473 ], [ %7482, %8053 ]
  %8058 = icmp eq i64 %8057, %6808
  br i1 %8058, label %8059, label %6881, !llvm.loop !1085

8059:                                             ; preds = %8056, %6803
  %8060 = add nuw nsw i64 %6223, 1
  %8061 = icmp eq i64 %8060, %6215
  br i1 %8061, label %8062, label %6221, !llvm.loop !1086

8062:                                             ; preds = %8059, %6188
  %8063 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  tail call void %8063(ptr noundef %6192) #23
  %8064 = load ptr, ptr @MEM_freeN, align 8, !tbaa !14
  tail call void %8064(ptr noundef %6197) #23
  %8065 = shl nuw i32 1, %14
  br i1 %43, label %8066, label %8231

8066:                                             ; preds = %8062
  %8067 = add i32 %8065, %7
  %8068 = mul nsw i32 %16, %8067
  %8069 = sext i32 %8068 to i64
  %8070 = mul nsw i32 %16, %14
  %8071 = sext i32 %8070 to i64
  %8072 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 3
  %8073 = load i32, ptr %8072, align 4, !tbaa !74
  %8074 = icmp sgt i32 %8073, 0
  %8075 = zext i32 %8073 to i64
  %8076 = add nsw i32 %8067, %8065
  %8077 = mul nsw i32 %16, %8076
  %8078 = sext i32 %8077 to i64
  br i1 %8074, label %8079, label %8231

8079:                                             ; preds = %8066
  %8080 = zext i32 %5 to i64
  %8081 = add nsw i64 %8078, 48
  %8082 = add nsw i64 %8071, 40
  %8083 = add nsw i64 %8069, 48
  %8084 = add nsw i64 %8071, 40
  %8085 = icmp ult i32 %8073, 32
  %8086 = and i64 %8075, 4294967264
  %8087 = icmp eq i64 %8086, %8075
  %8088 = and i64 %8075, 3
  %8089 = icmp eq i64 %8088, 0
  %8090 = icmp ult i32 %8073, 32
  %8091 = and i64 %8075, 4294967264
  %8092 = icmp eq i64 %8091, %8075
  %8093 = and i64 %8075, 3
  %8094 = icmp eq i64 %8093, 0
  br label %8095

8095:                                             ; preds = %8079, %8228
  %8096 = phi i64 [ 0, %8079 ], [ %8229, %8228 ]
  %8097 = getelementptr inbounds ptr, ptr %2, i64 %8096
  %8098 = load ptr, ptr %8097, align 8, !tbaa !14
  %8099 = ptrtoint ptr %8098 to i64
  %8100 = getelementptr inbounds %struct.CCGEdge, ptr %8098, i64 1
  %8101 = getelementptr inbounds i8, ptr %8100, i64 %8069
  %8102 = getelementptr inbounds %struct.CCGEdge, ptr %8098, i64 0, i32 5
  %8103 = load ptr, ptr %8102, align 8, !tbaa !83
  %8104 = getelementptr inbounds %struct.CCGVert, ptr %8103, i64 1
  %8105 = getelementptr inbounds i8, ptr %8104, i64 %8071
  br i1 %8085, label %8129, label %8106

8106:                                             ; preds = %8095
  %8107 = ptrtoint ptr %8103 to i64
  %8108 = add i64 %8083, %8099
  %8109 = add i64 %8084, %8107
  %8110 = sub i64 %8108, %8109
  %8111 = icmp ult i64 %8110, 128
  br i1 %8111, label %8129, label %8112

8112:                                             ; preds = %8106, %8112
  %8113 = phi i64 [ %8126, %8112 ], [ 0, %8106 ]
  %8114 = getelementptr inbounds float, ptr %8105, i64 %8113
  %8115 = load <8 x float>, ptr %8114, align 4, !tbaa !65
  %8116 = getelementptr inbounds float, ptr %8114, i64 8
  %8117 = load <8 x float>, ptr %8116, align 4, !tbaa !65
  %8118 = getelementptr inbounds float, ptr %8114, i64 16
  %8119 = load <8 x float>, ptr %8118, align 4, !tbaa !65
  %8120 = getelementptr inbounds float, ptr %8114, i64 24
  %8121 = load <8 x float>, ptr %8120, align 4, !tbaa !65
  %8122 = getelementptr inbounds float, ptr %8101, i64 %8113
  store <8 x float> %8115, ptr %8122, align 4, !tbaa !65
  %8123 = getelementptr inbounds float, ptr %8122, i64 8
  store <8 x float> %8117, ptr %8123, align 4, !tbaa !65
  %8124 = getelementptr inbounds float, ptr %8122, i64 16
  store <8 x float> %8119, ptr %8124, align 4, !tbaa !65
  %8125 = getelementptr inbounds float, ptr %8122, i64 24
  store <8 x float> %8121, ptr %8125, align 4, !tbaa !65
  %8126 = add nuw i64 %8113, 32
  %8127 = icmp eq i64 %8126, %8086
  br i1 %8127, label %8128, label %8112, !llvm.loop !1087

8128:                                             ; preds = %8112
  br i1 %8087, label %8164, label %8129

8129:                                             ; preds = %8106, %8095, %8128
  %8130 = phi i64 [ 0, %8106 ], [ 0, %8095 ], [ %8086, %8128 ]
  %8131 = xor i64 %8130, -1
  %8132 = add nsw i64 %8131, %8075
  br i1 %8089, label %8142, label %8133

8133:                                             ; preds = %8129, %8133
  %8134 = phi i64 [ %8139, %8133 ], [ %8130, %8129 ]
  %8135 = phi i64 [ %8140, %8133 ], [ 0, %8129 ]
  %8136 = getelementptr inbounds float, ptr %8105, i64 %8134
  %8137 = load float, ptr %8136, align 4, !tbaa !65
  %8138 = getelementptr inbounds float, ptr %8101, i64 %8134
  store float %8137, ptr %8138, align 4, !tbaa !65
  %8139 = add nuw nsw i64 %8134, 1
  %8140 = add i64 %8135, 1
  %8141 = icmp eq i64 %8140, %8088
  br i1 %8141, label %8142, label %8133, !llvm.loop !1088

8142:                                             ; preds = %8133, %8129
  %8143 = phi i64 [ %8130, %8129 ], [ %8139, %8133 ]
  %8144 = icmp ult i64 %8132, 3
  br i1 %8144, label %8164, label %8145

8145:                                             ; preds = %8142, %8145
  %8146 = phi i64 [ %8162, %8145 ], [ %8143, %8142 ]
  %8147 = getelementptr inbounds float, ptr %8105, i64 %8146
  %8148 = load float, ptr %8147, align 4, !tbaa !65
  %8149 = getelementptr inbounds float, ptr %8101, i64 %8146
  store float %8148, ptr %8149, align 4, !tbaa !65
  %8150 = add nuw nsw i64 %8146, 1
  %8151 = getelementptr inbounds float, ptr %8105, i64 %8150
  %8152 = load float, ptr %8151, align 4, !tbaa !65
  %8153 = getelementptr inbounds float, ptr %8101, i64 %8150
  store float %8152, ptr %8153, align 4, !tbaa !65
  %8154 = add nuw nsw i64 %8146, 2
  %8155 = getelementptr inbounds float, ptr %8105, i64 %8154
  %8156 = load float, ptr %8155, align 4, !tbaa !65
  %8157 = getelementptr inbounds float, ptr %8101, i64 %8154
  store float %8156, ptr %8157, align 4, !tbaa !65
  %8158 = add nuw nsw i64 %8146, 3
  %8159 = getelementptr inbounds float, ptr %8105, i64 %8158
  %8160 = load float, ptr %8159, align 4, !tbaa !65
  %8161 = getelementptr inbounds float, ptr %8101, i64 %8158
  store float %8160, ptr %8161, align 4, !tbaa !65
  %8162 = add nuw nsw i64 %8146, 4
  %8163 = icmp eq i64 %8162, %8075
  br i1 %8163, label %8164, label %8145, !llvm.loop !1089

8164:                                             ; preds = %8142, %8145, %8128
  %8165 = getelementptr inbounds i8, ptr %8100, i64 %8078
  %8166 = getelementptr inbounds %struct.CCGEdge, ptr %8098, i64 0, i32 6
  %8167 = load ptr, ptr %8166, align 8, !tbaa !85
  %8168 = getelementptr inbounds %struct.CCGVert, ptr %8167, i64 1
  %8169 = getelementptr inbounds i8, ptr %8168, i64 %8071
  br i1 %8090, label %8193, label %8170

8170:                                             ; preds = %8164
  %8171 = ptrtoint ptr %8167 to i64
  %8172 = add i64 %8081, %8099
  %8173 = add i64 %8082, %8171
  %8174 = sub i64 %8172, %8173
  %8175 = icmp ult i64 %8174, 128
  br i1 %8175, label %8193, label %8176

8176:                                             ; preds = %8170, %8176
  %8177 = phi i64 [ %8190, %8176 ], [ 0, %8170 ]
  %8178 = getelementptr inbounds float, ptr %8169, i64 %8177
  %8179 = load <8 x float>, ptr %8178, align 4, !tbaa !65
  %8180 = getelementptr inbounds float, ptr %8178, i64 8
  %8181 = load <8 x float>, ptr %8180, align 4, !tbaa !65
  %8182 = getelementptr inbounds float, ptr %8178, i64 16
  %8183 = load <8 x float>, ptr %8182, align 4, !tbaa !65
  %8184 = getelementptr inbounds float, ptr %8178, i64 24
  %8185 = load <8 x float>, ptr %8184, align 4, !tbaa !65
  %8186 = getelementptr inbounds float, ptr %8165, i64 %8177
  store <8 x float> %8179, ptr %8186, align 4, !tbaa !65
  %8187 = getelementptr inbounds float, ptr %8186, i64 8
  store <8 x float> %8181, ptr %8187, align 4, !tbaa !65
  %8188 = getelementptr inbounds float, ptr %8186, i64 16
  store <8 x float> %8183, ptr %8188, align 4, !tbaa !65
  %8189 = getelementptr inbounds float, ptr %8186, i64 24
  store <8 x float> %8185, ptr %8189, align 4, !tbaa !65
  %8190 = add nuw i64 %8177, 32
  %8191 = icmp eq i64 %8190, %8091
  br i1 %8191, label %8192, label %8176, !llvm.loop !1090

8192:                                             ; preds = %8176
  br i1 %8092, label %8228, label %8193

8193:                                             ; preds = %8170, %8164, %8192
  %8194 = phi i64 [ 0, %8170 ], [ 0, %8164 ], [ %8091, %8192 ]
  %8195 = xor i64 %8194, -1
  %8196 = add nsw i64 %8195, %8075
  br i1 %8094, label %8206, label %8197

8197:                                             ; preds = %8193, %8197
  %8198 = phi i64 [ %8203, %8197 ], [ %8194, %8193 ]
  %8199 = phi i64 [ %8204, %8197 ], [ 0, %8193 ]
  %8200 = getelementptr inbounds float, ptr %8169, i64 %8198
  %8201 = load float, ptr %8200, align 4, !tbaa !65
  %8202 = getelementptr inbounds float, ptr %8165, i64 %8198
  store float %8201, ptr %8202, align 4, !tbaa !65
  %8203 = add nuw nsw i64 %8198, 1
  %8204 = add i64 %8199, 1
  %8205 = icmp eq i64 %8204, %8093
  br i1 %8205, label %8206, label %8197, !llvm.loop !1091

8206:                                             ; preds = %8197, %8193
  %8207 = phi i64 [ %8194, %8193 ], [ %8203, %8197 ]
  %8208 = icmp ult i64 %8196, 3
  br i1 %8208, label %8228, label %8209

8209:                                             ; preds = %8206, %8209
  %8210 = phi i64 [ %8226, %8209 ], [ %8207, %8206 ]
  %8211 = getelementptr inbounds float, ptr %8169, i64 %8210
  %8212 = load float, ptr %8211, align 4, !tbaa !65
  %8213 = getelementptr inbounds float, ptr %8165, i64 %8210
  store float %8212, ptr %8213, align 4, !tbaa !65
  %8214 = add nuw nsw i64 %8210, 1
  %8215 = getelementptr inbounds float, ptr %8169, i64 %8214
  %8216 = load float, ptr %8215, align 4, !tbaa !65
  %8217 = getelementptr inbounds float, ptr %8165, i64 %8214
  store float %8216, ptr %8217, align 4, !tbaa !65
  %8218 = add nuw nsw i64 %8210, 2
  %8219 = getelementptr inbounds float, ptr %8169, i64 %8218
  %8220 = load float, ptr %8219, align 4, !tbaa !65
  %8221 = getelementptr inbounds float, ptr %8165, i64 %8218
  store float %8220, ptr %8221, align 4, !tbaa !65
  %8222 = add nuw nsw i64 %8210, 3
  %8223 = getelementptr inbounds float, ptr %8169, i64 %8222
  %8224 = load float, ptr %8223, align 4, !tbaa !65
  %8225 = getelementptr inbounds float, ptr %8165, i64 %8222
  store float %8224, ptr %8225, align 4, !tbaa !65
  %8226 = add nuw nsw i64 %8210, 4
  %8227 = icmp eq i64 %8226, %8075
  br i1 %8227, label %8228, label %8209, !llvm.loop !1092

8228:                                             ; preds = %8206, %8209, %8192
  %8229 = add nuw nsw i64 %8096, 1
  %8230 = icmp eq i64 %8229, %8080
  br i1 %8230, label %8231, label %8095, !llvm.loop !1093

8231:                                             ; preds = %8228, %8066, %8062
  br i1 %23, label %8232, label %8972

8232:                                             ; preds = %8231
  %8233 = add nsw i32 %10, -1
  %8234 = shl nuw i32 1, %8233
  %8235 = add nuw i32 %8234, 1
  %8236 = add nuw i32 %8234, 2
  %8237 = mul i32 %8235, %8236
  %8238 = mul nsw i32 %8235, %16
  %8239 = sext i32 %8238 to i64
  %8240 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 3
  %8241 = sub nsw i32 %10, %14
  %8242 = shl i32 %8235, %7
  %8243 = add nsw i32 %8242, %11
  %8244 = shl i32 %8243, %8241
  %8245 = add nsw i32 %8244, %8235
  %8246 = mul nsw i32 %8245, %16
  %8247 = sext i32 %8246 to i64
  %8248 = mul nsw i32 %16, %14
  %8249 = sext i32 %8248 to i64
  %8250 = shl i32 %16, %7
  %8251 = shl i32 %8250, %8241
  %8252 = sext i32 %8251 to i64
  %8253 = add i32 %8065, %7
  %8254 = add nsw i32 %8253, %11
  %8255 = mul nsw i32 %16, %8254
  %8256 = sext i32 %8255 to i64
  %8257 = icmp sgt i32 %11, 1
  %8258 = icmp eq i32 %7, 31
  %8259 = tail call i32 @llvm.smax.i32(i32 %11, i32 1)
  %8260 = zext i32 %6 to i64
  %8261 = mul i32 %16, %8236
  %8262 = mul i32 %8261, %8235
  %8263 = mul i32 %16, %8236
  %8264 = mul i32 %8263, %8235
  %8265 = add nsw i64 %8252, 24
  %8266 = add nsw i64 %8256, 48
  %8267 = add nsw i64 %8247, 24
  %8268 = mul i32 %16, %8236
  %8269 = mul i32 %8268, %8235
  %8270 = add nsw i64 %8249, 40
  %8271 = add nsw i64 %8239, 24
  %8272 = mul i32 %16, %8236
  %8273 = mul i32 %8272, %8235
  br label %8274

8274:                                             ; preds = %8232, %8969
  %8275 = phi i64 [ 0, %8232 ], [ %8970, %8969 ]
  %8276 = getelementptr inbounds ptr, ptr %3, i64 %8275
  %8277 = load ptr, ptr %8276, align 8, !tbaa !14
  %8278 = getelementptr inbounds %struct.CCGFace, ptr %8277, i64 0, i32 2
  %8279 = load i16, ptr %8278, align 8, !tbaa !89
  %8280 = sext i16 %8279 to i32
  %8281 = icmp sgt i16 %8279, 0
  br i1 %8281, label %8282, label %8969

8282:                                             ; preds = %8274
  %8283 = ptrtoint ptr %8277 to i64
  %8284 = getelementptr inbounds %struct.CCGFace, ptr %8277, i64 1
  %8285 = zext i16 %8279 to i64
  %8286 = getelementptr inbounds ptr, ptr %8284, i64 %8285
  %8287 = getelementptr ptr, ptr %8286, i64 %8285
  %8288 = load i32, ptr %8240, align 4, !tbaa !74
  %8289 = icmp sgt i32 %8288, 0
  %8290 = zext i32 %8288 to i64
  %8291 = zext i32 %8280 to i64
  %8292 = add i64 %8283, 24
  %8293 = shl nuw nsw i64 %8285, 4
  %8294 = add i64 %8292, %8293
  %8295 = add i64 %8283, 24
  %8296 = shl nuw nsw i64 %8285, 4
  %8297 = add i64 %8295, %8296
  %8298 = add i64 %8283, 24
  %8299 = shl nuw nsw i64 %8285, 4
  %8300 = add i64 %8298, %8299
  %8301 = add i64 %8283, 24
  %8302 = add i64 %8301, %8299
  %8303 = add i64 %8283, 24
  %8304 = shl nuw nsw i64 %8285, 4
  %8305 = add i64 %8303, %8304
  %8306 = add i64 %8283, 24
  %8307 = add i64 %8306, %8304
  %8308 = add i64 %8265, %8283
  %8309 = shl nuw nsw i64 %8285, 4
  %8310 = add i64 %8308, %8309
  %8311 = add i64 %8267, %8283
  %8312 = shl nuw nsw i64 %8285, 4
  %8313 = add i64 %8311, %8312
  %8314 = add i64 %8283, 24
  %8315 = add i64 %8271, %8283
  %8316 = shl nuw nsw i64 %8285, 4
  %8317 = add i64 %8315, %8316
  %8318 = add i64 %8314, %8316
  %8319 = icmp ult i32 %8288, 32
  %8320 = and i64 %8290, 4294967264
  %8321 = icmp eq i64 %8320, %8290
  %8322 = and i64 %8290, 3
  %8323 = icmp eq i64 %8322, 0
  %8324 = icmp ult i32 %8288, 32
  %8325 = and i64 %8290, 4294967264
  %8326 = icmp eq i64 %8325, %8290
  %8327 = and i64 %8290, 3
  %8328 = icmp eq i64 %8327, 0
  %8329 = icmp ult i32 %8288, 32
  %8330 = and i64 %8290, 4294967264
  %8331 = icmp eq i64 %8330, %8290
  %8332 = and i64 %8290, 3
  %8333 = icmp eq i64 %8332, 0
  %8334 = icmp ult i32 %8288, 32
  %8335 = and i64 %8290, 4294967264
  %8336 = icmp eq i64 %8335, %8290
  %8337 = and i64 %8290, 3
  %8338 = icmp eq i64 %8337, 0
  %8339 = icmp ult i32 %8288, 32
  %8340 = and i64 %8290, 4294967264
  %8341 = icmp eq i64 %8340, %8290
  %8342 = and i64 %8290, 3
  %8343 = icmp eq i64 %8342, 0
  %8344 = icmp ult i32 %8288, 32
  %8345 = and i64 %8290, 4294967264
  %8346 = icmp eq i64 %8345, %8290
  %8347 = and i64 %8290, 3
  %8348 = icmp eq i64 %8347, 0
  %8349 = icmp ult i32 %8288, 32
  %8350 = and i64 %8290, 4294967264
  %8351 = icmp eq i64 %8350, %8290
  %8352 = and i64 %8290, 3
  %8353 = icmp eq i64 %8352, 0
  %8354 = icmp ult i32 %8288, 32
  %8355 = and i64 %8290, 4294967264
  %8356 = icmp eq i64 %8355, %8290
  %8357 = and i64 %8290, 3
  %8358 = icmp eq i64 %8357, 0
  br label %8359

8359:                                             ; preds = %8282, %8966
  %8360 = phi i64 [ 0, %8282 ], [ %8967, %8966 ]
  %8361 = trunc i64 %8360 to i32
  %8362 = mul i32 %8269, %8361
  %8363 = add i32 %8362, %16
  %8364 = trunc i64 %8360 to i32
  %8365 = mul i32 %8269, %8364
  %8366 = add i32 %8365, %16
  %8367 = sext i32 %8366 to i64
  %8368 = add i64 %8313, %8367
  %8369 = trunc i64 %8360 to i32
  %8370 = mul i32 %8264, %8369
  %8371 = add i32 %8370, %16
  %8372 = sext i32 %8371 to i64
  %8373 = add i64 %8310, %8372
  %8374 = trunc i64 %8360 to i32
  %8375 = mul i32 %8264, %8374
  %8376 = add i32 %8375, %16
  %8377 = sext i32 %8376 to i64
  %8378 = trunc i64 %8360 to i32
  %8379 = mul i32 %8262, %8378
  %8380 = add i32 %8379, %16
  %8381 = sext i32 %8380 to i64
  %8382 = trunc i64 %8360 to i32
  %8383 = mul i32 %8262, %8382
  %8384 = add i32 %8383, %16
  %8385 = sext i32 %8384 to i64
  %8386 = trunc i64 %8360 to i32
  %8387 = mul i32 %8262, %8386
  %8388 = add i32 %8387, %16
  %8389 = sext i32 %8388 to i64
  %8390 = getelementptr inbounds ptr, ptr %8286, i64 %8360
  %8391 = load ptr, ptr %8390, align 8, !tbaa !14
  %8392 = ptrtoint ptr %8391 to i64
  %8393 = trunc i64 %8360 to i32
  %8394 = add i32 %8393, -1
  %8395 = add i32 %8394, %8280
  %8396 = srem i32 %8395, %8280
  %8397 = sext i32 %8396 to i64
  %8398 = getelementptr inbounds ptr, ptr %8286, i64 %8397
  %8399 = load ptr, ptr %8398, align 8, !tbaa !14
  %8400 = ptrtoint ptr %8399 to i64
  %8401 = trunc i64 %8360 to i32
  %8402 = mul i32 %8237, %8401
  %8403 = add nsw i32 %8402, 1
  %8404 = mul nsw i32 %8403, %16
  %8405 = sext i32 %8404 to i64
  %8406 = getelementptr inbounds i8, ptr %8287, i64 %8405
  %8407 = getelementptr inbounds i8, ptr %8406, i64 %8239
  br i1 %8289, label %8408, label %8450

8408:                                             ; preds = %8359
  %8409 = trunc i64 %8360 to i32
  %8410 = mul i32 %8273, %8409
  %8411 = add i32 %8410, %16
  %8412 = sext i32 %8411 to i64
  %8413 = add i64 %8317, %8412
  %8414 = sub i64 %8413, %8318
  %8415 = icmp ult i64 %8414, 128
  %8416 = select i1 %8319, i1 true, i1 %8415
  br i1 %8416, label %8434, label %8417

8417:                                             ; preds = %8408, %8417
  %8418 = phi i64 [ %8431, %8417 ], [ 0, %8408 ]
  %8419 = getelementptr inbounds float, ptr %8287, i64 %8418
  %8420 = load <8 x float>, ptr %8419, align 4, !tbaa !65
  %8421 = getelementptr inbounds float, ptr %8419, i64 8
  %8422 = load <8 x float>, ptr %8421, align 4, !tbaa !65
  %8423 = getelementptr inbounds float, ptr %8419, i64 16
  %8424 = load <8 x float>, ptr %8423, align 4, !tbaa !65
  %8425 = getelementptr inbounds float, ptr %8419, i64 24
  %8426 = load <8 x float>, ptr %8425, align 4, !tbaa !65
  %8427 = getelementptr inbounds float, ptr %8407, i64 %8418
  store <8 x float> %8420, ptr %8427, align 4, !tbaa !65
  %8428 = getelementptr inbounds float, ptr %8427, i64 8
  store <8 x float> %8422, ptr %8428, align 4, !tbaa !65
  %8429 = getelementptr inbounds float, ptr %8427, i64 16
  store <8 x float> %8424, ptr %8429, align 4, !tbaa !65
  %8430 = getelementptr inbounds float, ptr %8427, i64 24
  store <8 x float> %8426, ptr %8430, align 4, !tbaa !65
  %8431 = add nuw i64 %8418, 32
  %8432 = icmp eq i64 %8431, %8320
  br i1 %8432, label %8433, label %8417, !llvm.loop !1094

8433:                                             ; preds = %8417
  br i1 %8321, label %8472, label %8434

8434:                                             ; preds = %8408, %8433
  %8435 = phi i64 [ 0, %8408 ], [ %8320, %8433 ]
  %8436 = xor i64 %8435, -1
  %8437 = add nsw i64 %8436, %8290
  br i1 %8323, label %8447, label %8438

8438:                                             ; preds = %8434, %8438
  %8439 = phi i64 [ %8444, %8438 ], [ %8435, %8434 ]
  %8440 = phi i64 [ %8445, %8438 ], [ 0, %8434 ]
  %8441 = getelementptr inbounds float, ptr %8287, i64 %8439
  %8442 = load float, ptr %8441, align 4, !tbaa !65
  %8443 = getelementptr inbounds float, ptr %8407, i64 %8439
  store float %8442, ptr %8443, align 4, !tbaa !65
  %8444 = add nuw nsw i64 %8439, 1
  %8445 = add i64 %8440, 1
  %8446 = icmp eq i64 %8445, %8322
  br i1 %8446, label %8447, label %8438, !llvm.loop !1095

8447:                                             ; preds = %8438, %8434
  %8448 = phi i64 [ %8435, %8434 ], [ %8444, %8438 ]
  %8449 = icmp ult i64 %8437, 3
  br i1 %8449, label %8472, label %8453

8450:                                             ; preds = %8359
  %8451 = getelementptr inbounds ptr, ptr %8284, i64 %8360
  %8452 = load ptr, ptr %8451, align 8, !tbaa !14
  br label %8652

8453:                                             ; preds = %8447, %8453
  %8454 = phi i64 [ %8470, %8453 ], [ %8448, %8447 ]
  %8455 = getelementptr inbounds float, ptr %8287, i64 %8454
  %8456 = load float, ptr %8455, align 4, !tbaa !65
  %8457 = getelementptr inbounds float, ptr %8407, i64 %8454
  store float %8456, ptr %8457, align 4, !tbaa !65
  %8458 = add nuw nsw i64 %8454, 1
  %8459 = getelementptr inbounds float, ptr %8287, i64 %8458
  %8460 = load float, ptr %8459, align 4, !tbaa !65
  %8461 = getelementptr inbounds float, ptr %8407, i64 %8458
  store float %8460, ptr %8461, align 4, !tbaa !65
  %8462 = add nuw nsw i64 %8454, 2
  %8463 = getelementptr inbounds float, ptr %8287, i64 %8462
  %8464 = load float, ptr %8463, align 4, !tbaa !65
  %8465 = getelementptr inbounds float, ptr %8407, i64 %8462
  store float %8464, ptr %8465, align 4, !tbaa !65
  %8466 = add nuw nsw i64 %8454, 3
  %8467 = getelementptr inbounds float, ptr %8287, i64 %8466
  %8468 = load float, ptr %8467, align 4, !tbaa !65
  %8469 = getelementptr inbounds float, ptr %8407, i64 %8466
  store float %8468, ptr %8469, align 4, !tbaa !65
  %8470 = add nuw nsw i64 %8454, 4
  %8471 = icmp eq i64 %8470, %8290
  br i1 %8471, label %8472, label %8453, !llvm.loop !1096

8472:                                             ; preds = %8447, %8453, %8433
  %8473 = icmp ult i32 %8363, 128
  %8474 = select i1 %8324, i1 true, i1 %8473
  br i1 %8474, label %8492, label %8475

8475:                                             ; preds = %8472, %8475
  %8476 = phi i64 [ %8489, %8475 ], [ 0, %8472 ]
  %8477 = getelementptr inbounds float, ptr %8287, i64 %8476
  %8478 = load <8 x float>, ptr %8477, align 4, !tbaa !65
  %8479 = getelementptr inbounds float, ptr %8477, i64 8
  %8480 = load <8 x float>, ptr %8479, align 4, !tbaa !65
  %8481 = getelementptr inbounds float, ptr %8477, i64 16
  %8482 = load <8 x float>, ptr %8481, align 4, !tbaa !65
  %8483 = getelementptr inbounds float, ptr %8477, i64 24
  %8484 = load <8 x float>, ptr %8483, align 4, !tbaa !65
  %8485 = getelementptr inbounds float, ptr %8406, i64 %8476
  store <8 x float> %8478, ptr %8485, align 4, !tbaa !65
  %8486 = getelementptr inbounds float, ptr %8485, i64 8
  store <8 x float> %8480, ptr %8486, align 4, !tbaa !65
  %8487 = getelementptr inbounds float, ptr %8485, i64 16
  store <8 x float> %8482, ptr %8487, align 4, !tbaa !65
  %8488 = getelementptr inbounds float, ptr %8485, i64 24
  store <8 x float> %8484, ptr %8488, align 4, !tbaa !65
  %8489 = add nuw i64 %8476, 32
  %8490 = icmp eq i64 %8489, %8325
  br i1 %8490, label %8491, label %8475, !llvm.loop !1097

8491:                                             ; preds = %8475
  br i1 %8326, label %8527, label %8492

8492:                                             ; preds = %8472, %8491
  %8493 = phi i64 [ 0, %8472 ], [ %8325, %8491 ]
  %8494 = xor i64 %8493, -1
  %8495 = add nsw i64 %8494, %8290
  br i1 %8328, label %8505, label %8496

8496:                                             ; preds = %8492, %8496
  %8497 = phi i64 [ %8502, %8496 ], [ %8493, %8492 ]
  %8498 = phi i64 [ %8503, %8496 ], [ 0, %8492 ]
  %8499 = getelementptr inbounds float, ptr %8287, i64 %8497
  %8500 = load float, ptr %8499, align 4, !tbaa !65
  %8501 = getelementptr inbounds float, ptr %8406, i64 %8497
  store float %8500, ptr %8501, align 4, !tbaa !65
  %8502 = add nuw nsw i64 %8497, 1
  %8503 = add i64 %8498, 1
  %8504 = icmp eq i64 %8503, %8327
  br i1 %8504, label %8505, label %8496, !llvm.loop !1098

8505:                                             ; preds = %8496, %8492
  %8506 = phi i64 [ %8493, %8492 ], [ %8502, %8496 ]
  %8507 = icmp ult i64 %8495, 3
  br i1 %8507, label %8527, label %8508

8508:                                             ; preds = %8505, %8508
  %8509 = phi i64 [ %8525, %8508 ], [ %8506, %8505 ]
  %8510 = getelementptr inbounds float, ptr %8287, i64 %8509
  %8511 = load float, ptr %8510, align 4, !tbaa !65
  %8512 = getelementptr inbounds float, ptr %8406, i64 %8509
  store float %8511, ptr %8512, align 4, !tbaa !65
  %8513 = add nuw nsw i64 %8509, 1
  %8514 = getelementptr inbounds float, ptr %8287, i64 %8513
  %8515 = load float, ptr %8514, align 4, !tbaa !65
  %8516 = getelementptr inbounds float, ptr %8406, i64 %8513
  store float %8515, ptr %8516, align 4, !tbaa !65
  %8517 = add nuw nsw i64 %8509, 2
  %8518 = getelementptr inbounds float, ptr %8287, i64 %8517
  %8519 = load float, ptr %8518, align 4, !tbaa !65
  %8520 = getelementptr inbounds float, ptr %8406, i64 %8517
  store float %8519, ptr %8520, align 4, !tbaa !65
  %8521 = add nuw nsw i64 %8509, 3
  %8522 = getelementptr inbounds float, ptr %8287, i64 %8521
  %8523 = load float, ptr %8522, align 4, !tbaa !65
  %8524 = getelementptr inbounds float, ptr %8406, i64 %8521
  store float %8523, ptr %8524, align 4, !tbaa !65
  %8525 = add nuw nsw i64 %8509, 4
  %8526 = icmp eq i64 %8525, %8290
  br i1 %8526, label %8527, label %8508, !llvm.loop !1099

8527:                                             ; preds = %8505, %8508, %8491
  %8528 = getelementptr inbounds i8, ptr %8406, i64 %8247
  %8529 = getelementptr inbounds ptr, ptr %8284, i64 %8360
  %8530 = load ptr, ptr %8529, align 8, !tbaa !14
  %8531 = ptrtoint ptr %8530 to i64
  %8532 = getelementptr inbounds %struct.CCGVert, ptr %8530, i64 1
  %8533 = getelementptr i8, ptr %8532, i64 %8249
  br i1 %8289, label %8534, label %8652

8534:                                             ; preds = %8527
  br i1 %8329, label %8556, label %8535

8535:                                             ; preds = %8534
  %8536 = add i64 %8270, %8531
  %8537 = sub i64 %8368, %8536
  %8538 = icmp ult i64 %8537, 128
  br i1 %8538, label %8556, label %8539

8539:                                             ; preds = %8535, %8539
  %8540 = phi i64 [ %8553, %8539 ], [ 0, %8535 ]
  %8541 = getelementptr inbounds float, ptr %8533, i64 %8540
  %8542 = load <8 x float>, ptr %8541, align 4, !tbaa !65
  %8543 = getelementptr inbounds float, ptr %8541, i64 8
  %8544 = load <8 x float>, ptr %8543, align 4, !tbaa !65
  %8545 = getelementptr inbounds float, ptr %8541, i64 16
  %8546 = load <8 x float>, ptr %8545, align 4, !tbaa !65
  %8547 = getelementptr inbounds float, ptr %8541, i64 24
  %8548 = load <8 x float>, ptr %8547, align 4, !tbaa !65
  %8549 = getelementptr inbounds float, ptr %8528, i64 %8540
  store <8 x float> %8542, ptr %8549, align 4, !tbaa !65
  %8550 = getelementptr inbounds float, ptr %8549, i64 8
  store <8 x float> %8544, ptr %8550, align 4, !tbaa !65
  %8551 = getelementptr inbounds float, ptr %8549, i64 16
  store <8 x float> %8546, ptr %8551, align 4, !tbaa !65
  %8552 = getelementptr inbounds float, ptr %8549, i64 24
  store <8 x float> %8548, ptr %8552, align 4, !tbaa !65
  %8553 = add nuw i64 %8540, 32
  %8554 = icmp eq i64 %8553, %8330
  br i1 %8554, label %8555, label %8539, !llvm.loop !1100

8555:                                             ; preds = %8539
  br i1 %8331, label %8591, label %8556

8556:                                             ; preds = %8535, %8534, %8555
  %8557 = phi i64 [ 0, %8535 ], [ 0, %8534 ], [ %8330, %8555 ]
  %8558 = xor i64 %8557, -1
  %8559 = add nsw i64 %8558, %8290
  br i1 %8333, label %8569, label %8560

8560:                                             ; preds = %8556, %8560
  %8561 = phi i64 [ %8566, %8560 ], [ %8557, %8556 ]
  %8562 = phi i64 [ %8567, %8560 ], [ 0, %8556 ]
  %8563 = getelementptr inbounds float, ptr %8533, i64 %8561
  %8564 = load float, ptr %8563, align 4, !tbaa !65
  %8565 = getelementptr inbounds float, ptr %8528, i64 %8561
  store float %8564, ptr %8565, align 4, !tbaa !65
  %8566 = add nuw nsw i64 %8561, 1
  %8567 = add i64 %8562, 1
  %8568 = icmp eq i64 %8567, %8332
  br i1 %8568, label %8569, label %8560, !llvm.loop !1101

8569:                                             ; preds = %8560, %8556
  %8570 = phi i64 [ %8557, %8556 ], [ %8566, %8560 ]
  %8571 = icmp ult i64 %8559, 3
  br i1 %8571, label %8591, label %8572

8572:                                             ; preds = %8569, %8572
  %8573 = phi i64 [ %8589, %8572 ], [ %8570, %8569 ]
  %8574 = getelementptr inbounds float, ptr %8533, i64 %8573
  %8575 = load float, ptr %8574, align 4, !tbaa !65
  %8576 = getelementptr inbounds float, ptr %8528, i64 %8573
  store float %8575, ptr %8576, align 4, !tbaa !65
  %8577 = add nuw nsw i64 %8573, 1
  %8578 = getelementptr inbounds float, ptr %8533, i64 %8577
  %8579 = load float, ptr %8578, align 4, !tbaa !65
  %8580 = getelementptr inbounds float, ptr %8528, i64 %8577
  store float %8579, ptr %8580, align 4, !tbaa !65
  %8581 = add nuw nsw i64 %8573, 2
  %8582 = getelementptr inbounds float, ptr %8533, i64 %8581
  %8583 = load float, ptr %8582, align 4, !tbaa !65
  %8584 = getelementptr inbounds float, ptr %8528, i64 %8581
  store float %8583, ptr %8584, align 4, !tbaa !65
  %8585 = add nuw nsw i64 %8573, 3
  %8586 = getelementptr inbounds float, ptr %8533, i64 %8585
  %8587 = load float, ptr %8586, align 4, !tbaa !65
  %8588 = getelementptr inbounds float, ptr %8528, i64 %8585
  store float %8587, ptr %8588, align 4, !tbaa !65
  %8589 = add nuw nsw i64 %8573, 4
  %8590 = icmp eq i64 %8589, %8290
  br i1 %8590, label %8591, label %8572, !llvm.loop !1102

8591:                                             ; preds = %8569, %8572, %8555
  %8592 = getelementptr inbounds i8, ptr %8406, i64 %8252
  %8593 = getelementptr inbounds %struct.CCGEdge, ptr %8391, i64 1
  %8594 = getelementptr i8, ptr %8593, i64 %8256
  br i1 %8289, label %8595, label %8652

8595:                                             ; preds = %8591
  br i1 %8334, label %8617, label %8596

8596:                                             ; preds = %8595
  %8597 = add i64 %8266, %8392
  %8598 = sub i64 %8373, %8597
  %8599 = icmp ult i64 %8598, 128
  br i1 %8599, label %8617, label %8600

8600:                                             ; preds = %8596, %8600
  %8601 = phi i64 [ %8614, %8600 ], [ 0, %8596 ]
  %8602 = getelementptr inbounds float, ptr %8594, i64 %8601
  %8603 = load <8 x float>, ptr %8602, align 4, !tbaa !65
  %8604 = getelementptr inbounds float, ptr %8602, i64 8
  %8605 = load <8 x float>, ptr %8604, align 4, !tbaa !65
  %8606 = getelementptr inbounds float, ptr %8602, i64 16
  %8607 = load <8 x float>, ptr %8606, align 4, !tbaa !65
  %8608 = getelementptr inbounds float, ptr %8602, i64 24
  %8609 = load <8 x float>, ptr %8608, align 4, !tbaa !65
  %8610 = getelementptr inbounds float, ptr %8592, i64 %8601
  store <8 x float> %8603, ptr %8610, align 4, !tbaa !65
  %8611 = getelementptr inbounds float, ptr %8610, i64 8
  store <8 x float> %8605, ptr %8611, align 4, !tbaa !65
  %8612 = getelementptr inbounds float, ptr %8610, i64 16
  store <8 x float> %8607, ptr %8612, align 4, !tbaa !65
  %8613 = getelementptr inbounds float, ptr %8610, i64 24
  store <8 x float> %8609, ptr %8613, align 4, !tbaa !65
  %8614 = add nuw i64 %8601, 32
  %8615 = icmp eq i64 %8614, %8335
  br i1 %8615, label %8616, label %8600, !llvm.loop !1103

8616:                                             ; preds = %8600
  br i1 %8336, label %8652, label %8617

8617:                                             ; preds = %8596, %8595, %8616
  %8618 = phi i64 [ 0, %8596 ], [ 0, %8595 ], [ %8335, %8616 ]
  %8619 = xor i64 %8618, -1
  %8620 = add nsw i64 %8619, %8290
  br i1 %8338, label %8630, label %8621

8621:                                             ; preds = %8617, %8621
  %8622 = phi i64 [ %8627, %8621 ], [ %8618, %8617 ]
  %8623 = phi i64 [ %8628, %8621 ], [ 0, %8617 ]
  %8624 = getelementptr inbounds float, ptr %8594, i64 %8622
  %8625 = load float, ptr %8624, align 4, !tbaa !65
  %8626 = getelementptr inbounds float, ptr %8592, i64 %8622
  store float %8625, ptr %8626, align 4, !tbaa !65
  %8627 = add nuw nsw i64 %8622, 1
  %8628 = add i64 %8623, 1
  %8629 = icmp eq i64 %8628, %8337
  br i1 %8629, label %8630, label %8621, !llvm.loop !1104

8630:                                             ; preds = %8621, %8617
  %8631 = phi i64 [ %8618, %8617 ], [ %8627, %8621 ]
  %8632 = icmp ult i64 %8620, 3
  br i1 %8632, label %8652, label %8633

8633:                                             ; preds = %8630, %8633
  %8634 = phi i64 [ %8650, %8633 ], [ %8631, %8630 ]
  %8635 = getelementptr inbounds float, ptr %8594, i64 %8634
  %8636 = load float, ptr %8635, align 4, !tbaa !65
  %8637 = getelementptr inbounds float, ptr %8592, i64 %8634
  store float %8636, ptr %8637, align 4, !tbaa !65
  %8638 = add nuw nsw i64 %8634, 1
  %8639 = getelementptr inbounds float, ptr %8594, i64 %8638
  %8640 = load float, ptr %8639, align 4, !tbaa !65
  %8641 = getelementptr inbounds float, ptr %8592, i64 %8638
  store float %8640, ptr %8641, align 4, !tbaa !65
  %8642 = add nuw nsw i64 %8634, 2
  %8643 = getelementptr inbounds float, ptr %8594, i64 %8642
  %8644 = load float, ptr %8643, align 4, !tbaa !65
  %8645 = getelementptr inbounds float, ptr %8592, i64 %8642
  store float %8644, ptr %8645, align 4, !tbaa !65
  %8646 = add nuw nsw i64 %8634, 3
  %8647 = getelementptr inbounds float, ptr %8594, i64 %8646
  %8648 = load float, ptr %8647, align 4, !tbaa !65
  %8649 = getelementptr inbounds float, ptr %8592, i64 %8646
  store float %8648, ptr %8649, align 4, !tbaa !65
  %8650 = add nuw nsw i64 %8634, 4
  %8651 = icmp eq i64 %8650, %8290
  br i1 %8651, label %8652, label %8633, !llvm.loop !1105

8652:                                             ; preds = %8630, %8633, %8616, %8527, %8450, %8591
  %8653 = phi ptr [ %8530, %8591 ], [ %8530, %8527 ], [ %8452, %8450 ], [ %8530, %8616 ], [ %8530, %8633 ], [ %8530, %8630 ]
  br i1 %8257, label %8654, label %8668

8654:                                             ; preds = %8652
  %8655 = add nuw nsw i64 %8360, 1
  %8656 = icmp eq i64 %8655, %8291
  %8657 = trunc i64 %8655 to i32
  %8658 = select i1 %8656, i32 0, i32 %8657
  %8659 = mul i32 %8237, %8658
  %8660 = add nsw i32 %8659, 1
  %8661 = mul nsw i32 %8660, %16
  %8662 = sext i32 %8661 to i64
  %8663 = getelementptr inbounds i8, ptr %8287, i64 %8662
  %8664 = add i64 %8300, %8662
  %8665 = add i64 %8302, %8381
  %8666 = add i64 %8305, %8377
  %8667 = add i64 %8307, %8377
  br label %8682

8668:                                             ; preds = %8816, %8652
  br i1 %8258, label %8966, label %8669

8669:                                             ; preds = %8668
  %8670 = getelementptr inbounds %struct.CCGEdge, ptr %8391, i64 0, i32 5
  %8671 = load ptr, ptr %8670, align 8, !tbaa !83
  %8672 = icmp eq ptr %8671, %8653
  %8673 = getelementptr inbounds %struct.CCGEdge, ptr %8399, i64 0, i32 5
  %8674 = load ptr, ptr %8673, align 8, !tbaa !83
  %8675 = icmp eq ptr %8674, %8653
  %8676 = getelementptr inbounds %struct.CCGEdge, ptr %8399, i64 1
  %8677 = add i64 %8294, %8389
  %8678 = add i64 %8400, 48
  %8679 = add i64 %8297, %8385
  %8680 = add i64 %8392, 48
  %8681 = getelementptr inbounds %struct.CCGEdge, ptr %8391, i64 1
  br label %8819

8682:                                             ; preds = %8654, %8816
  %8683 = phi i32 [ 1, %8654 ], [ %8817, %8816 ]
  %8684 = mul nsw i32 %8683, %16
  %8685 = shl i32 %8684, %8241
  %8686 = sext i32 %8685 to i64
  %8687 = getelementptr i8, ptr %8406, i64 %8686
  %8688 = shl i32 %8683, %8241
  %8689 = add nsw i32 %8688, %8235
  %8690 = mul nsw i32 %8689, %16
  %8691 = sext i32 %8690 to i64
  %8692 = getelementptr i8, ptr %8406, i64 %8691
  br i1 %8289, label %8693, label %8816

8693:                                             ; preds = %8682
  br i1 %8339, label %8716, label %8694

8694:                                             ; preds = %8693
  %8695 = add i64 %8666, %8691
  %8696 = add i64 %8667, %8686
  %8697 = sub i64 %8695, %8696
  %8698 = icmp ult i64 %8697, 128
  br i1 %8698, label %8716, label %8699

8699:                                             ; preds = %8694, %8699
  %8700 = phi i64 [ %8713, %8699 ], [ 0, %8694 ]
  %8701 = getelementptr inbounds float, ptr %8687, i64 %8700
  %8702 = load <8 x float>, ptr %8701, align 4, !tbaa !65
  %8703 = getelementptr inbounds float, ptr %8701, i64 8
  %8704 = load <8 x float>, ptr %8703, align 4, !tbaa !65
  %8705 = getelementptr inbounds float, ptr %8701, i64 16
  %8706 = load <8 x float>, ptr %8705, align 4, !tbaa !65
  %8707 = getelementptr inbounds float, ptr %8701, i64 24
  %8708 = load <8 x float>, ptr %8707, align 4, !tbaa !65
  %8709 = getelementptr inbounds float, ptr %8692, i64 %8700
  store <8 x float> %8702, ptr %8709, align 4, !tbaa !65
  %8710 = getelementptr inbounds float, ptr %8709, i64 8
  store <8 x float> %8704, ptr %8710, align 4, !tbaa !65
  %8711 = getelementptr inbounds float, ptr %8709, i64 16
  store <8 x float> %8706, ptr %8711, align 4, !tbaa !65
  %8712 = getelementptr inbounds float, ptr %8709, i64 24
  store <8 x float> %8708, ptr %8712, align 4, !tbaa !65
  %8713 = add nuw i64 %8700, 32
  %8714 = icmp eq i64 %8713, %8340
  br i1 %8714, label %8715, label %8699, !llvm.loop !1106

8715:                                             ; preds = %8699
  br i1 %8341, label %8751, label %8716

8716:                                             ; preds = %8694, %8693, %8715
  %8717 = phi i64 [ 0, %8694 ], [ 0, %8693 ], [ %8340, %8715 ]
  %8718 = xor i64 %8717, -1
  %8719 = add nsw i64 %8718, %8290
  br i1 %8343, label %8729, label %8720

8720:                                             ; preds = %8716, %8720
  %8721 = phi i64 [ %8726, %8720 ], [ %8717, %8716 ]
  %8722 = phi i64 [ %8727, %8720 ], [ 0, %8716 ]
  %8723 = getelementptr inbounds float, ptr %8687, i64 %8721
  %8724 = load float, ptr %8723, align 4, !tbaa !65
  %8725 = getelementptr inbounds float, ptr %8692, i64 %8721
  store float %8724, ptr %8725, align 4, !tbaa !65
  %8726 = add nuw nsw i64 %8721, 1
  %8727 = add i64 %8722, 1
  %8728 = icmp eq i64 %8727, %8342
  br i1 %8728, label %8729, label %8720, !llvm.loop !1107

8729:                                             ; preds = %8720, %8716
  %8730 = phi i64 [ %8717, %8716 ], [ %8726, %8720 ]
  %8731 = icmp ult i64 %8719, 3
  br i1 %8731, label %8751, label %8732

8732:                                             ; preds = %8729, %8732
  %8733 = phi i64 [ %8749, %8732 ], [ %8730, %8729 ]
  %8734 = getelementptr inbounds float, ptr %8687, i64 %8733
  %8735 = load float, ptr %8734, align 4, !tbaa !65
  %8736 = getelementptr inbounds float, ptr %8692, i64 %8733
  store float %8735, ptr %8736, align 4, !tbaa !65
  %8737 = add nuw nsw i64 %8733, 1
  %8738 = getelementptr inbounds float, ptr %8687, i64 %8737
  %8739 = load float, ptr %8738, align 4, !tbaa !65
  %8740 = getelementptr inbounds float, ptr %8692, i64 %8737
  store float %8739, ptr %8740, align 4, !tbaa !65
  %8741 = add nuw nsw i64 %8733, 2
  %8742 = getelementptr inbounds float, ptr %8687, i64 %8741
  %8743 = load float, ptr %8742, align 4, !tbaa !65
  %8744 = getelementptr inbounds float, ptr %8692, i64 %8741
  store float %8743, ptr %8744, align 4, !tbaa !65
  %8745 = add nuw nsw i64 %8733, 3
  %8746 = getelementptr inbounds float, ptr %8687, i64 %8745
  %8747 = load float, ptr %8746, align 4, !tbaa !65
  %8748 = getelementptr inbounds float, ptr %8692, i64 %8745
  store float %8747, ptr %8748, align 4, !tbaa !65
  %8749 = add nuw nsw i64 %8733, 4
  %8750 = icmp eq i64 %8749, %8290
  br i1 %8750, label %8751, label %8732, !llvm.loop !1108

8751:                                             ; preds = %8729, %8732, %8715
  %8752 = mul nsw i32 %8683, %8235
  %8753 = shl i32 %8752, %8241
  %8754 = add nsw i32 %8753, %8235
  %8755 = mul nsw i32 %8754, %16
  %8756 = sext i32 %8755 to i64
  %8757 = getelementptr i8, ptr %8663, i64 %8756
  br i1 %8289, label %8758, label %8816

8758:                                             ; preds = %8751
  br i1 %8344, label %8781, label %8759

8759:                                             ; preds = %8758
  %8760 = add i64 %8664, %8756
  %8761 = add i64 %8665, %8686
  %8762 = sub i64 %8760, %8761
  %8763 = icmp ult i64 %8762, 128
  br i1 %8763, label %8781, label %8764

8764:                                             ; preds = %8759, %8764
  %8765 = phi i64 [ %8778, %8764 ], [ 0, %8759 ]
  %8766 = getelementptr inbounds float, ptr %8687, i64 %8765
  %8767 = load <8 x float>, ptr %8766, align 4, !tbaa !65
  %8768 = getelementptr inbounds float, ptr %8766, i64 8
  %8769 = load <8 x float>, ptr %8768, align 4, !tbaa !65
  %8770 = getelementptr inbounds float, ptr %8766, i64 16
  %8771 = load <8 x float>, ptr %8770, align 4, !tbaa !65
  %8772 = getelementptr inbounds float, ptr %8766, i64 24
  %8773 = load <8 x float>, ptr %8772, align 4, !tbaa !65
  %8774 = getelementptr inbounds float, ptr %8757, i64 %8765
  store <8 x float> %8767, ptr %8774, align 4, !tbaa !65
  %8775 = getelementptr inbounds float, ptr %8774, i64 8
  store <8 x float> %8769, ptr %8775, align 4, !tbaa !65
  %8776 = getelementptr inbounds float, ptr %8774, i64 16
  store <8 x float> %8771, ptr %8776, align 4, !tbaa !65
  %8777 = getelementptr inbounds float, ptr %8774, i64 24
  store <8 x float> %8773, ptr %8777, align 4, !tbaa !65
  %8778 = add nuw i64 %8765, 32
  %8779 = icmp eq i64 %8778, %8345
  br i1 %8779, label %8780, label %8764, !llvm.loop !1109

8780:                                             ; preds = %8764
  br i1 %8346, label %8816, label %8781

8781:                                             ; preds = %8759, %8758, %8780
  %8782 = phi i64 [ 0, %8759 ], [ 0, %8758 ], [ %8345, %8780 ]
  %8783 = xor i64 %8782, -1
  %8784 = add nsw i64 %8783, %8290
  br i1 %8348, label %8794, label %8785

8785:                                             ; preds = %8781, %8785
  %8786 = phi i64 [ %8791, %8785 ], [ %8782, %8781 ]
  %8787 = phi i64 [ %8792, %8785 ], [ 0, %8781 ]
  %8788 = getelementptr inbounds float, ptr %8687, i64 %8786
  %8789 = load float, ptr %8788, align 4, !tbaa !65
  %8790 = getelementptr inbounds float, ptr %8757, i64 %8786
  store float %8789, ptr %8790, align 4, !tbaa !65
  %8791 = add nuw nsw i64 %8786, 1
  %8792 = add i64 %8787, 1
  %8793 = icmp eq i64 %8792, %8347
  br i1 %8793, label %8794, label %8785, !llvm.loop !1110

8794:                                             ; preds = %8785, %8781
  %8795 = phi i64 [ %8782, %8781 ], [ %8791, %8785 ]
  %8796 = icmp ult i64 %8784, 3
  br i1 %8796, label %8816, label %8797

8797:                                             ; preds = %8794, %8797
  %8798 = phi i64 [ %8814, %8797 ], [ %8795, %8794 ]
  %8799 = getelementptr inbounds float, ptr %8687, i64 %8798
  %8800 = load float, ptr %8799, align 4, !tbaa !65
  %8801 = getelementptr inbounds float, ptr %8757, i64 %8798
  store float %8800, ptr %8801, align 4, !tbaa !65
  %8802 = add nuw nsw i64 %8798, 1
  %8803 = getelementptr inbounds float, ptr %8687, i64 %8802
  %8804 = load float, ptr %8803, align 4, !tbaa !65
  %8805 = getelementptr inbounds float, ptr %8757, i64 %8802
  store float %8804, ptr %8805, align 4, !tbaa !65
  %8806 = add nuw nsw i64 %8798, 2
  %8807 = getelementptr inbounds float, ptr %8687, i64 %8806
  %8808 = load float, ptr %8807, align 4, !tbaa !65
  %8809 = getelementptr inbounds float, ptr %8757, i64 %8806
  store float %8808, ptr %8809, align 4, !tbaa !65
  %8810 = add nuw nsw i64 %8798, 3
  %8811 = getelementptr inbounds float, ptr %8687, i64 %8810
  %8812 = load float, ptr %8811, align 4, !tbaa !65
  %8813 = getelementptr inbounds float, ptr %8757, i64 %8810
  store float %8812, ptr %8813, align 4, !tbaa !65
  %8814 = add nuw nsw i64 %8798, 4
  %8815 = icmp eq i64 %8814, %8290
  br i1 %8815, label %8816, label %8797, !llvm.loop !1111

8816:                                             ; preds = %8794, %8797, %8780, %8682, %8751
  %8817 = add nuw nsw i32 %8683, 1
  %8818 = icmp eq i32 %8817, %11
  br i1 %8818, label %8668, label %8682, !llvm.loop !1112

8819:                                             ; preds = %8669, %8963
  %8820 = phi i32 [ 0, %8669 ], [ %8964, %8963 ]
  %8821 = sub nsw i32 %11, %8820
  %8822 = mul nsw i32 %8820, %8235
  %8823 = add nsw i32 %8822, %11
  %8824 = shl i32 %8823, %8241
  %8825 = add nsw i32 %8824, %8235
  %8826 = mul nsw i32 %8825, %16
  %8827 = sext i32 %8826 to i64
  %8828 = getelementptr i8, ptr %8406, i64 %8827
  %8829 = sub i32 %8065, %8821
  %8830 = select i1 %8672, i32 %8821, i32 %8829
  %8831 = add i32 %8830, %8253
  %8832 = mul nsw i32 %8831, %16
  %8833 = sext i32 %8832 to i64
  %8834 = getelementptr i8, ptr %8681, i64 %8833
  br i1 %8289, label %8835, label %8893

8835:                                             ; preds = %8819
  br i1 %8349, label %8858, label %8836

8836:                                             ; preds = %8835
  %8837 = add i64 %8679, %8827
  %8838 = add i64 %8680, %8833
  %8839 = sub i64 %8837, %8838
  %8840 = icmp ult i64 %8839, 128
  br i1 %8840, label %8858, label %8841

8841:                                             ; preds = %8836, %8841
  %8842 = phi i64 [ %8855, %8841 ], [ 0, %8836 ]
  %8843 = getelementptr inbounds float, ptr %8834, i64 %8842
  %8844 = load <8 x float>, ptr %8843, align 4, !tbaa !65
  %8845 = getelementptr inbounds float, ptr %8843, i64 8
  %8846 = load <8 x float>, ptr %8845, align 4, !tbaa !65
  %8847 = getelementptr inbounds float, ptr %8843, i64 16
  %8848 = load <8 x float>, ptr %8847, align 4, !tbaa !65
  %8849 = getelementptr inbounds float, ptr %8843, i64 24
  %8850 = load <8 x float>, ptr %8849, align 4, !tbaa !65
  %8851 = getelementptr inbounds float, ptr %8828, i64 %8842
  store <8 x float> %8844, ptr %8851, align 4, !tbaa !65
  %8852 = getelementptr inbounds float, ptr %8851, i64 8
  store <8 x float> %8846, ptr %8852, align 4, !tbaa !65
  %8853 = getelementptr inbounds float, ptr %8851, i64 16
  store <8 x float> %8848, ptr %8853, align 4, !tbaa !65
  %8854 = getelementptr inbounds float, ptr %8851, i64 24
  store <8 x float> %8850, ptr %8854, align 4, !tbaa !65
  %8855 = add nuw i64 %8842, 32
  %8856 = icmp eq i64 %8855, %8350
  br i1 %8856, label %8857, label %8841, !llvm.loop !1113

8857:                                             ; preds = %8841
  br i1 %8351, label %8893, label %8858

8858:                                             ; preds = %8836, %8835, %8857
  %8859 = phi i64 [ 0, %8836 ], [ 0, %8835 ], [ %8350, %8857 ]
  %8860 = xor i64 %8859, -1
  %8861 = add nsw i64 %8860, %8290
  br i1 %8353, label %8871, label %8862

8862:                                             ; preds = %8858, %8862
  %8863 = phi i64 [ %8868, %8862 ], [ %8859, %8858 ]
  %8864 = phi i64 [ %8869, %8862 ], [ 0, %8858 ]
  %8865 = getelementptr inbounds float, ptr %8834, i64 %8863
  %8866 = load float, ptr %8865, align 4, !tbaa !65
  %8867 = getelementptr inbounds float, ptr %8828, i64 %8863
  store float %8866, ptr %8867, align 4, !tbaa !65
  %8868 = add nuw nsw i64 %8863, 1
  %8869 = add i64 %8864, 1
  %8870 = icmp eq i64 %8869, %8352
  br i1 %8870, label %8871, label %8862, !llvm.loop !1114

8871:                                             ; preds = %8862, %8858
  %8872 = phi i64 [ %8859, %8858 ], [ %8868, %8862 ]
  %8873 = icmp ult i64 %8861, 3
  br i1 %8873, label %8893, label %8874

8874:                                             ; preds = %8871, %8874
  %8875 = phi i64 [ %8891, %8874 ], [ %8872, %8871 ]
  %8876 = getelementptr inbounds float, ptr %8834, i64 %8875
  %8877 = load float, ptr %8876, align 4, !tbaa !65
  %8878 = getelementptr inbounds float, ptr %8828, i64 %8875
  store float %8877, ptr %8878, align 4, !tbaa !65
  %8879 = add nuw nsw i64 %8875, 1
  %8880 = getelementptr inbounds float, ptr %8834, i64 %8879
  %8881 = load float, ptr %8880, align 4, !tbaa !65
  %8882 = getelementptr inbounds float, ptr %8828, i64 %8879
  store float %8881, ptr %8882, align 4, !tbaa !65
  %8883 = add nuw nsw i64 %8875, 2
  %8884 = getelementptr inbounds float, ptr %8834, i64 %8883
  %8885 = load float, ptr %8884, align 4, !tbaa !65
  %8886 = getelementptr inbounds float, ptr %8828, i64 %8883
  store float %8885, ptr %8886, align 4, !tbaa !65
  %8887 = add nuw nsw i64 %8875, 3
  %8888 = getelementptr inbounds float, ptr %8834, i64 %8887
  %8889 = load float, ptr %8888, align 4, !tbaa !65
  %8890 = getelementptr inbounds float, ptr %8828, i64 %8887
  store float %8889, ptr %8890, align 4, !tbaa !65
  %8891 = add nuw nsw i64 %8875, 4
  %8892 = icmp eq i64 %8891, %8290
  br i1 %8892, label %8893, label %8874, !llvm.loop !1115

8893:                                             ; preds = %8871, %8874, %8857, %8819
  %8894 = add nsw i32 %8820, %8242
  %8895 = shl i32 %8894, %8241
  %8896 = add nsw i32 %8895, %8235
  %8897 = mul nsw i32 %8896, %16
  %8898 = sext i32 %8897 to i64
  %8899 = getelementptr i8, ptr %8406, i64 %8898
  %8900 = select i1 %8675, i32 %8821, i32 %8829
  %8901 = add i32 %8900, %8253
  %8902 = mul nsw i32 %8901, %16
  %8903 = sext i32 %8902 to i64
  %8904 = getelementptr i8, ptr %8676, i64 %8903
  br i1 %8289, label %8905, label %8963

8905:                                             ; preds = %8893
  br i1 %8354, label %8928, label %8906

8906:                                             ; preds = %8905
  %8907 = add i64 %8677, %8898
  %8908 = add i64 %8678, %8903
  %8909 = sub i64 %8907, %8908
  %8910 = icmp ult i64 %8909, 128
  br i1 %8910, label %8928, label %8911

8911:                                             ; preds = %8906, %8911
  %8912 = phi i64 [ %8925, %8911 ], [ 0, %8906 ]
  %8913 = getelementptr inbounds float, ptr %8904, i64 %8912
  %8914 = load <8 x float>, ptr %8913, align 4, !tbaa !65
  %8915 = getelementptr inbounds float, ptr %8913, i64 8
  %8916 = load <8 x float>, ptr %8915, align 4, !tbaa !65
  %8917 = getelementptr inbounds float, ptr %8913, i64 16
  %8918 = load <8 x float>, ptr %8917, align 4, !tbaa !65
  %8919 = getelementptr inbounds float, ptr %8913, i64 24
  %8920 = load <8 x float>, ptr %8919, align 4, !tbaa !65
  %8921 = getelementptr inbounds float, ptr %8899, i64 %8912
  store <8 x float> %8914, ptr %8921, align 4, !tbaa !65
  %8922 = getelementptr inbounds float, ptr %8921, i64 8
  store <8 x float> %8916, ptr %8922, align 4, !tbaa !65
  %8923 = getelementptr inbounds float, ptr %8921, i64 16
  store <8 x float> %8918, ptr %8923, align 4, !tbaa !65
  %8924 = getelementptr inbounds float, ptr %8921, i64 24
  store <8 x float> %8920, ptr %8924, align 4, !tbaa !65
  %8925 = add nuw i64 %8912, 32
  %8926 = icmp eq i64 %8925, %8355
  br i1 %8926, label %8927, label %8911, !llvm.loop !1116

8927:                                             ; preds = %8911
  br i1 %8356, label %8963, label %8928

8928:                                             ; preds = %8906, %8905, %8927
  %8929 = phi i64 [ 0, %8906 ], [ 0, %8905 ], [ %8355, %8927 ]
  %8930 = xor i64 %8929, -1
  %8931 = add nsw i64 %8930, %8290
  br i1 %8358, label %8941, label %8932

8932:                                             ; preds = %8928, %8932
  %8933 = phi i64 [ %8938, %8932 ], [ %8929, %8928 ]
  %8934 = phi i64 [ %8939, %8932 ], [ 0, %8928 ]
  %8935 = getelementptr inbounds float, ptr %8904, i64 %8933
  %8936 = load float, ptr %8935, align 4, !tbaa !65
  %8937 = getelementptr inbounds float, ptr %8899, i64 %8933
  store float %8936, ptr %8937, align 4, !tbaa !65
  %8938 = add nuw nsw i64 %8933, 1
  %8939 = add i64 %8934, 1
  %8940 = icmp eq i64 %8939, %8357
  br i1 %8940, label %8941, label %8932, !llvm.loop !1117

8941:                                             ; preds = %8932, %8928
  %8942 = phi i64 [ %8929, %8928 ], [ %8938, %8932 ]
  %8943 = icmp ult i64 %8931, 3
  br i1 %8943, label %8963, label %8944

8944:                                             ; preds = %8941, %8944
  %8945 = phi i64 [ %8961, %8944 ], [ %8942, %8941 ]
  %8946 = getelementptr inbounds float, ptr %8904, i64 %8945
  %8947 = load float, ptr %8946, align 4, !tbaa !65
  %8948 = getelementptr inbounds float, ptr %8899, i64 %8945
  store float %8947, ptr %8948, align 4, !tbaa !65
  %8949 = add nuw nsw i64 %8945, 1
  %8950 = getelementptr inbounds float, ptr %8904, i64 %8949
  %8951 = load float, ptr %8950, align 4, !tbaa !65
  %8952 = getelementptr inbounds float, ptr %8899, i64 %8949
  store float %8951, ptr %8952, align 4, !tbaa !65
  %8953 = add nuw nsw i64 %8945, 2
  %8954 = getelementptr inbounds float, ptr %8904, i64 %8953
  %8955 = load float, ptr %8954, align 4, !tbaa !65
  %8956 = getelementptr inbounds float, ptr %8899, i64 %8953
  store float %8955, ptr %8956, align 4, !tbaa !65
  %8957 = add nuw nsw i64 %8945, 3
  %8958 = getelementptr inbounds float, ptr %8904, i64 %8957
  %8959 = load float, ptr %8958, align 4, !tbaa !65
  %8960 = getelementptr inbounds float, ptr %8899, i64 %8957
  store float %8959, ptr %8960, align 4, !tbaa !65
  %8961 = add nuw nsw i64 %8945, 4
  %8962 = icmp eq i64 %8961, %8290
  br i1 %8962, label %8963, label %8944, !llvm.loop !1118

8963:                                             ; preds = %8941, %8944, %8927, %8893
  %8964 = add nuw nsw i32 %8820, 1
  %8965 = icmp eq i32 %8964, %8259
  br i1 %8965, label %8966, label %8819, !llvm.loop !1119

8966:                                             ; preds = %8963, %8668
  %8967 = add nuw nsw i64 %8360, 1
  %8968 = icmp eq i64 %8967, %8291
  br i1 %8968, label %8969, label %8359, !llvm.loop !1120

8969:                                             ; preds = %8966, %8274
  %8970 = add nuw nsw i64 %8275, 1
  %8971 = icmp eq i64 %8970, %8260
  br i1 %8971, label %8972, label %8274, !llvm.loop !1121

8972:                                             ; preds = %8969, %8231
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @ccgSubSurf_getNumVerts(ptr nocapture noundef readonly %0) local_unnamed_addr #11 {
  %2 = load ptr, ptr %0, align 8, !tbaa !27
  %3 = getelementptr inbounds %struct._EHash, ptr %2, i64 0, i32 1
  %4 = load i32, ptr %3, align 8, !tbaa !22
  ret i32 %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @ccgSubSurf_getNumEdges(ptr nocapture noundef readonly %0) local_unnamed_addr #11 {
  %2 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !28
  %4 = getelementptr inbounds %struct._EHash, ptr %3, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !22
  ret i32 %5
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @ccgSubSurf_getNumFaces(ptr nocapture noundef readonly %0) local_unnamed_addr #11 {
  %2 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !29
  %4 = getelementptr inbounds %struct._EHash, ptr %3, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !22
  ret i32 %5
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @ccgSubSurf_getVert(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #12 {
  %3 = load ptr, ptr %0, align 8, !tbaa !27
  %4 = load ptr, ptr %3, align 8, !tbaa !26
  %5 = getelementptr i8, ptr %3, i64 12
  %6 = load i32, ptr %5, align 4, !tbaa !24
  %7 = ptrtoint ptr %1 to i64
  %8 = zext i32 %6 to i64
  %9 = urem i64 %7, %8
  %10 = shl nuw i64 %9, 32
  %11 = ashr exact i64 %10, 32
  %12 = getelementptr inbounds ptr, ptr %4, i64 %11
  br label %13

13:                                               ; preds = %17, %2
  %14 = phi ptr [ %12, %2 ], [ %15, %17 ]
  %15 = load ptr, ptr %14, align 8, !tbaa !14
  %16 = icmp eq ptr %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct._EHEntry, ptr %15, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !76
  %20 = icmp eq ptr %19, %1
  br i1 %20, label %21, label %13, !llvm.loop !117

21:                                               ; preds = %13, %17
  ret ptr %15
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @ccgSubSurf_getEdge(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #12 {
  %3 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !28
  %5 = load ptr, ptr %4, align 8, !tbaa !26
  %6 = getelementptr i8, ptr %4, i64 12
  %7 = load i32, ptr %6, align 4, !tbaa !24
  %8 = ptrtoint ptr %1 to i64
  %9 = zext i32 %7 to i64
  %10 = urem i64 %8, %9
  %11 = shl nuw i64 %10, 32
  %12 = ashr exact i64 %11, 32
  %13 = getelementptr inbounds ptr, ptr %5, i64 %12
  br label %14

14:                                               ; preds = %18, %2
  %15 = phi ptr [ %13, %2 ], [ %16, %18 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !14
  %17 = icmp eq ptr %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct._EHEntry, ptr %16, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !76
  %21 = icmp eq ptr %20, %1
  br i1 %21, label %22, label %14, !llvm.loop !117

22:                                               ; preds = %14, %18
  ret ptr %16
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @ccgSubSurf_getFace(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #12 {
  %3 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !29
  %5 = load ptr, ptr %4, align 8, !tbaa !26
  %6 = getelementptr i8, ptr %4, i64 12
  %7 = load i32, ptr %6, align 4, !tbaa !24
  %8 = ptrtoint ptr %1 to i64
  %9 = zext i32 %7 to i64
  %10 = urem i64 %8, %9
  %11 = shl nuw i64 %10, 32
  %12 = ashr exact i64 %11, 32
  %13 = getelementptr inbounds ptr, ptr %5, i64 %12
  br label %14

14:                                               ; preds = %18, %2
  %15 = phi ptr [ %13, %2 ], [ %16, %18 ]
  %16 = load ptr, ptr %15, align 8, !tbaa !14
  %17 = icmp eq ptr %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct._EHEntry, ptr %16, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !76
  %21 = icmp eq ptr %20, %1
  br i1 %21, label %22, label %14, !llvm.loop !117

22:                                               ; preds = %14, %18
  ret ptr %16
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ccgSubSurf_getSubdivisionLevels(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %3 = load i32, ptr %2, align 8, !tbaa !32
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ccgSubSurf_getEdgeSize(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %3 = load i32, ptr %2, align 8, !tbaa !32
  %4 = icmp slt i32 %3, 1
  %5 = shl nuw i32 1, %3
  %6 = add nuw nsw i32 %5, 1
  %7 = select i1 %4, i32 -1, i32 %6
  ret i32 %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ccgSubSurf_getEdgeLevelSize(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = icmp slt i32 %1, 1
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %6 = load i32, ptr %5, align 8, !tbaa !32
  %7 = icmp slt i32 %6, %1
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = shl nuw i32 1, %1
  %10 = add nuw nsw i32 %9, 1
  br label %11

11:                                               ; preds = %2, %4, %8
  %12 = phi i32 [ %10, %8 ], [ -1, %4 ], [ -1, %2 ]
  ret i32 %12
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ccgSubSurf_getGridSize(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %3 = load i32, ptr %2, align 8, !tbaa !32
  %4 = icmp slt i32 %3, 1
  %5 = add nsw i32 %3, -1
  %6 = shl nuw i32 1, %5
  %7 = add nuw nsw i32 %6, 1
  %8 = select i1 %4, i32 -1, i32 %7
  ret i32 %8
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ccgSubSurf_getGridLevelSize(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = icmp slt i32 %1, 1
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %6 = load i32, ptr %5, align 8, !tbaa !32
  %7 = icmp slt i32 %6, %1
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = add nsw i32 %1, -1
  %10 = shl nuw i32 1, %9
  %11 = add nuw nsw i32 %10, 1
  br label %12

12:                                               ; preds = %2, %4, %8
  %13 = phi i32 [ %11, %8 ], [ -1, %4 ], [ -1, %2 ]
  ret i32 %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ccgSubSurf_getSimpleSubdiv(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 5
  %3 = load i32, ptr %2, align 4, !tbaa !223
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local ptr @ccgSubSurf_getVertVertHandle(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.CCGVert, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !93
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ccgSubSurf_getVertAge(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 18
  %4 = load i32, ptr %3, align 4, !tbaa !67
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %24, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.CCGVert, ptr %1, i64 1
  %8 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %9 = load i32, ptr %8, align 8, !tbaa !37
  %10 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %11 = load i32, ptr %10, align 8, !tbaa !32
  %12 = add nsw i32 %11, 1
  %13 = mul nsw i32 %12, %9
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, ptr %7, i64 %14
  %16 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 17
  %17 = load i32, ptr %16, align 8, !tbaa !40
  %18 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 19
  %19 = load i32, ptr %18, align 8, !tbaa !68
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, ptr %15, i64 %20
  %22 = load i32, ptr %21, align 4, !tbaa !31
  %23 = sub nsw i32 %17, %22
  br label %24

24:                                               ; preds = %2, %6
  %25 = phi i32 [ %23, %6 ], [ 0, %2 ]
  ret i32 %25
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local nonnull ptr @ccgSubSurf_getVertUserData(ptr nocapture noundef readonly %0, ptr noundef readnone %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.CCGVert, ptr %1, i64 1
  %4 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %5 = load i32, ptr %4, align 8, !tbaa !37
  %6 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %7 = load i32, ptr %6, align 8, !tbaa !32
  %8 = add nsw i32 %7, 1
  %9 = mul nsw i32 %8, %5
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i8, ptr %3, i64 %10
  ret ptr %11
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ccgSubSurf_getVertNumFaces(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.CCGVert, ptr %0, i64 0, i32 3
  %3 = load i16, ptr %2, align 2, !tbaa !78
  %4 = sext i16 %3 to i32
  ret i32 %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @ccgSubSurf_getVertFace(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.CCGVert, ptr %0, i64 0, i32 3
  %6 = load i16, ptr %5, align 2, !tbaa !78
  %7 = sext i16 %6 to i32
  %8 = icmp sgt i32 %7, %1
  br i1 %8, label %9, label %15

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.CCGVert, ptr %0, i64 0, i32 7
  %11 = load ptr, ptr %10, align 8, !tbaa !58
  %12 = zext i32 %1 to i64
  %13 = getelementptr inbounds ptr, ptr %11, i64 %12
  %14 = load ptr, ptr %13, align 8, !tbaa !14
  br label %15

15:                                               ; preds = %2, %4, %9
  %16 = phi ptr [ %14, %9 ], [ null, %4 ], [ null, %2 ]
  ret ptr %16
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ccgSubSurf_getVertNumEdges(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.CCGVert, ptr %0, i64 0, i32 2
  %3 = load i16, ptr %2, align 8, !tbaa !79
  %4 = sext i16 %3 to i32
  ret i32 %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @ccgSubSurf_getVertEdge(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.CCGVert, ptr %0, i64 0, i32 2
  %6 = load i16, ptr %5, align 8, !tbaa !79
  %7 = sext i16 %6 to i32
  %8 = icmp sgt i32 %7, %1
  br i1 %8, label %9, label %15

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.CCGVert, ptr %0, i64 0, i32 6
  %11 = load ptr, ptr %10, align 8, !tbaa !56
  %12 = zext i32 %1 to i64
  %13 = getelementptr inbounds ptr, ptr %11, i64 %12
  %14 = load ptr, ptr %13, align 8, !tbaa !14
  br label %15

15:                                               ; preds = %2, %4, %9
  %16 = phi ptr [ %14, %9 ], [ null, %4 ], [ null, %2 ]
  ret ptr %16
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local ptr @ccgSubSurf_getVertData(ptr nocapture noundef readonly %0, ptr noundef readnone %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %4 = load i32, ptr %3, align 8, !tbaa !32
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %8 = load i32, ptr %7, align 8, !tbaa !37
  %9 = getelementptr inbounds %struct.CCGVert, ptr %1, i64 1
  %10 = mul nsw i32 %8, %4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i8, ptr %9, i64 %11
  br label %13

13:                                               ; preds = %2, %6
  %14 = phi ptr [ %12, %6 ], [ null, %2 ]
  ret ptr %14
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local ptr @ccgSubSurf_getVertLevelData(ptr nocapture noundef readonly %0, ptr noundef readnone %1, i32 noundef %2) local_unnamed_addr #9 {
  %4 = icmp slt i32 %2, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %7 = load i32, ptr %6, align 8, !tbaa !32
  %8 = icmp slt i32 %7, %2
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %11 = load i32, ptr %10, align 8, !tbaa !37
  %12 = getelementptr inbounds %struct.CCGVert, ptr %1, i64 1
  %13 = mul nsw i32 %11, %2
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, ptr %12, i64 %14
  br label %16

16:                                               ; preds = %3, %5, %9
  %17 = phi ptr [ %15, %9 ], [ null, %5 ], [ null, %3 ]
  ret ptr %17
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local ptr @ccgSubSurf_getEdgeEdgeHandle(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.CCGEdge, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !119
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ccgSubSurf_getEdgeAge(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 18
  %4 = load i32, ptr %3, align 4, !tbaa !67
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.CCGEdge, ptr %1, i64 1
  %8 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %9 = load i32, ptr %8, align 8, !tbaa !37
  %10 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %11 = load i32, ptr %10, align 8, !tbaa !32
  %12 = add nsw i32 %11, 1
  %13 = shl nuw i32 1, %12
  %14 = add i32 %13, %11
  %15 = mul nsw i32 %14, %9
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, ptr %7, i64 %16
  %18 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 17
  %19 = load i32, ptr %18, align 8, !tbaa !40
  %20 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 20
  %21 = load i32, ptr %20, align 4, !tbaa !69
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, ptr %17, i64 %22
  %24 = load i32, ptr %23, align 4, !tbaa !31
  %25 = sub nsw i32 %19, %24
  br label %26

26:                                               ; preds = %2, %6
  %27 = phi i32 [ %25, %6 ], [ 0, %2 ]
  ret i32 %27
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ccgSubSurf_getEdgeNumFaces(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.CCGEdge, ptr %0, i64 0, i32 2
  %3 = load i16, ptr %2, align 8, !tbaa !81
  %4 = sext i16 %3 to i32
  ret i32 %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @ccgSubSurf_getEdgeFace(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.CCGEdge, ptr %0, i64 0, i32 2
  %6 = load i16, ptr %5, align 8, !tbaa !81
  %7 = sext i16 %6 to i32
  %8 = icmp sgt i32 %7, %1
  br i1 %8, label %9, label %15

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.CCGEdge, ptr %0, i64 0, i32 7
  %11 = load ptr, ptr %10, align 8, !tbaa !52
  %12 = zext i32 %1 to i64
  %13 = getelementptr inbounds ptr, ptr %11, i64 %12
  %14 = load ptr, ptr %13, align 8, !tbaa !14
  br label %15

15:                                               ; preds = %2, %4, %9
  %16 = phi ptr [ %14, %9 ], [ null, %4 ], [ null, %2 ]
  ret ptr %16
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local ptr @ccgSubSurf_getEdgeVert0(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.CCGEdge, ptr %0, i64 0, i32 5
  %3 = load ptr, ptr %2, align 8, !tbaa !83
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local ptr @ccgSubSurf_getEdgeVert1(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.CCGEdge, ptr %0, i64 0, i32 6
  %3 = load ptr, ptr %2, align 8, !tbaa !85
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local ptr @ccgSubSurf_getEdgeDataArray(ptr nocapture noundef readonly %0, ptr noundef readnone %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %4 = load i32, ptr %3, align 8, !tbaa !32
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %8 = load i32, ptr %7, align 8, !tbaa !37
  %9 = shl nuw i32 1, %4
  %10 = getelementptr inbounds %struct.CCGEdge, ptr %1, i64 1
  %11 = add nsw i32 %4, -1
  %12 = add i32 %11, %9
  %13 = mul nsw i32 %8, %12
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, ptr %10, i64 %14
  br label %16

16:                                               ; preds = %2, %6
  %17 = phi ptr [ %15, %6 ], [ null, %2 ]
  ret ptr %17
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local ptr @ccgSubSurf_getEdgeData(ptr nocapture noundef readonly %0, ptr noundef readnone %1, i32 noundef %2) local_unnamed_addr #9 {
  %4 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %5 = load i32, ptr %4, align 8, !tbaa !32
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %9 = load i32, ptr %8, align 8, !tbaa !37
  %10 = shl nuw i32 1, %5
  %11 = getelementptr inbounds %struct.CCGEdge, ptr %1, i64 1
  %12 = add i32 %2, -1
  %13 = add i32 %12, %5
  %14 = add i32 %13, %10
  %15 = mul nsw i32 %9, %14
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, ptr %11, i64 %16
  br label %18

18:                                               ; preds = %3, %7
  %19 = phi ptr [ %17, %7 ], [ null, %3 ]
  ret ptr %19
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local ptr @ccgSubSurf_getEdgeLevelData(ptr nocapture noundef readonly %0, ptr noundef readnone %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 {
  %5 = icmp slt i32 %3, 0
  br i1 %5, label %21, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %8 = load i32, ptr %7, align 8, !tbaa !32
  %9 = icmp slt i32 %8, %3
  br i1 %9, label %21, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %12 = load i32, ptr %11, align 8, !tbaa !37
  %13 = shl nuw i32 1, %3
  %14 = getelementptr inbounds %struct.CCGEdge, ptr %1, i64 1
  %15 = add i32 %2, -1
  %16 = add i32 %15, %3
  %17 = add i32 %16, %13
  %18 = mul nsw i32 %12, %17
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, ptr %14, i64 %19
  br label %21

21:                                               ; preds = %4, %6, %10
  %22 = phi ptr [ %20, %10 ], [ null, %6 ], [ null, %4 ]
  ret ptr %22
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local nofpclass(nan inf) float @ccgSubSurf_getEdgeCrease(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.CCGEdge, ptr %0, i64 0, i32 4
  %3 = load float, ptr %2, align 4, !tbaa !116
  ret float %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local ptr @ccgSubSurf_getFaceFaceHandle(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.CCGFace, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !134
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ccgSubSurf_getFaceAge(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 18
  %4 = load i32, ptr %3, align 4, !tbaa !67
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %36, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %8 = load i32, ptr %7, align 8, !tbaa !32
  %9 = add nsw i32 %8, -1
  %10 = shl nuw i32 1, %9
  %11 = add nuw nsw i32 %10, 1
  %12 = getelementptr inbounds %struct.CCGFace, ptr %1, i64 1
  %13 = getelementptr inbounds %struct.CCGFace, ptr %1, i64 0, i32 2
  %14 = load i16, ptr %13, align 8, !tbaa !89
  %15 = sext i16 %14 to i64
  %16 = getelementptr inbounds ptr, ptr %12, i64 %15
  %17 = getelementptr inbounds ptr, ptr %16, i64 %15
  %18 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %19 = load i32, ptr %18, align 8, !tbaa !37
  %20 = sext i16 %14 to i32
  %21 = mul nsw i32 %11, %20
  %22 = add nsw i32 %21, 1
  %23 = mul nsw i32 %21, %11
  %24 = add nsw i32 %22, %23
  %25 = mul nsw i32 %24, %19
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, ptr %17, i64 %26
  %28 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 17
  %29 = load i32, ptr %28, align 8, !tbaa !40
  %30 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 21
  %31 = load i32, ptr %30, align 8, !tbaa !70
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, ptr %27, i64 %32
  %34 = load i32, ptr %33, align 4, !tbaa !31
  %35 = sub nsw i32 %29, %34
  br label %36

36:                                               ; preds = %2, %6
  %37 = phi i32 [ %35, %6 ], [ 0, %2 ]
  ret i32 %37
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local nonnull ptr @ccgSubSurf_getFaceUserData(ptr nocapture noundef readonly %0, ptr noundef readonly %1) local_unnamed_addr #9 {
  %3 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %4 = load i32, ptr %3, align 8, !tbaa !32
  %5 = add nsw i32 %4, -1
  %6 = shl nuw i32 1, %5
  %7 = add nuw nsw i32 %6, 1
  %8 = getelementptr inbounds %struct.CCGFace, ptr %1, i64 1
  %9 = getelementptr inbounds %struct.CCGFace, ptr %1, i64 0, i32 2
  %10 = load i16, ptr %9, align 8, !tbaa !89
  %11 = sext i16 %10 to i64
  %12 = getelementptr inbounds ptr, ptr %8, i64 %11
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %14 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %15 = load i32, ptr %14, align 8, !tbaa !37
  %16 = sext i16 %10 to i32
  %17 = mul nsw i32 %7, %16
  %18 = add nsw i32 %17, 1
  %19 = mul nsw i32 %17, %7
  %20 = add nsw i32 %18, %19
  %21 = mul nsw i32 %20, %15
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, ptr %13, i64 %22
  ret ptr %23
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ccgSubSurf_getFaceNumVerts(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.CCGFace, ptr %0, i64 0, i32 2
  %3 = load i16, ptr %2, align 8, !tbaa !89
  %4 = sext i16 %3 to i32
  ret i32 %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local ptr @ccgSubSurf_getFaceVert(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.CCGFace, ptr %0, i64 0, i32 2
  %6 = load i16, ptr %5, align 8, !tbaa !89
  %7 = sext i16 %6 to i32
  %8 = icmp sgt i32 %7, %1
  br i1 %8, label %9, label %14

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.CCGFace, ptr %0, i64 1
  %11 = zext i32 %1 to i64
  %12 = getelementptr inbounds ptr, ptr %10, i64 %11
  %13 = load ptr, ptr %12, align 8, !tbaa !14
  br label %14

14:                                               ; preds = %2, %4, %9
  %15 = phi ptr [ %13, %9 ], [ null, %4 ], [ null, %2 ]
  ret ptr %15
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local ptr @ccgSubSurf_getFaceEdge(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %16, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.CCGFace, ptr %0, i64 0, i32 2
  %6 = load i16, ptr %5, align 8, !tbaa !89
  %7 = sext i16 %6 to i32
  %8 = icmp sgt i32 %7, %1
  br i1 %8, label %9, label %16

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.CCGFace, ptr %0, i64 1
  %11 = sext i16 %6 to i64
  %12 = getelementptr inbounds ptr, ptr %10, i64 %11
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds ptr, ptr %12, i64 %13
  %15 = load ptr, ptr %14, align 8, !tbaa !14
  br label %16

16:                                               ; preds = %2, %4, %9
  %17 = phi ptr [ %15, %9 ], [ null, %4 ], [ null, %2 ]
  ret ptr %17
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(argmem: read) uwtable
define dso_local i32 @ccgSubSurf_getFaceEdgeIndex(ptr nocapture noundef readonly %0, ptr noundef readnone %1) local_unnamed_addr #13 {
  %3 = getelementptr inbounds %struct.CCGFace, ptr %0, i64 0, i32 2
  %4 = load i16, ptr %3, align 8, !tbaa !89
  %5 = icmp sgt i16 %4, 0
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = zext i16 %4 to i64
  %8 = getelementptr inbounds %struct.CCGFace, ptr %0, i64 1
  %9 = zext i16 %4 to i64
  %10 = getelementptr inbounds ptr, ptr %8, i64 %9
  br label %11

11:                                               ; preds = %6, %16
  %12 = phi i64 [ 0, %6 ], [ %17, %16 ]
  %13 = getelementptr inbounds ptr, ptr %10, i64 %12
  %14 = load ptr, ptr %13, align 8, !tbaa !14
  %15 = icmp eq ptr %14, %1
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, %7
  br i1 %18, label %21, label %11, !llvm.loop !1122

19:                                               ; preds = %11
  %20 = trunc i64 %12 to i32
  br label %21

21:                                               ; preds = %16, %19, %2
  %22 = phi i32 [ -1, %2 ], [ %20, %19 ], [ -1, %16 ]
  ret i32 %22
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local nonnull ptr @ccgSubSurf_getFaceCenterData(ptr noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.CCGFace, ptr %0, i64 1
  %3 = getelementptr inbounds %struct.CCGFace, ptr %0, i64 0, i32 2
  %4 = load i16, ptr %3, align 8, !tbaa !89
  %5 = sext i16 %4 to i64
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = getelementptr inbounds ptr, ptr %6, i64 %5
  ret ptr %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local nonnull ptr @ccgSubSurf_getFaceGridEdgeDataArray(ptr nocapture noundef readonly %0, ptr noundef readonly %1, i32 noundef %2) local_unnamed_addr #9 {
  %4 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %5 = load i32, ptr %4, align 8, !tbaa !32
  %6 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %7 = load i32, ptr %6, align 8, !tbaa !37
  %8 = add nsw i32 %5, -1
  %9 = shl nuw i32 1, %8
  %10 = add nuw nsw i32 %9, 1
  %11 = getelementptr inbounds %struct.CCGFace, ptr %1, i64 1
  %12 = getelementptr inbounds %struct.CCGFace, ptr %1, i64 0, i32 2
  %13 = load i16, ptr %12, align 8, !tbaa !89
  %14 = sext i16 %13 to i64
  %15 = getelementptr inbounds ptr, ptr %11, i64 %14
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = add nuw i32 %9, 2
  %18 = mul i32 %17, %2
  %19 = mul i32 %18, %10
  %20 = add nsw i32 %19, 1
  %21 = mul nsw i32 %20, %7
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, ptr %16, i64 %22
  ret ptr %23
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local nonnull ptr @ccgSubSurf_getFaceGridEdgeData(ptr nocapture noundef readonly %0, ptr noundef readonly %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 {
  %5 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %6 = load i32, ptr %5, align 8, !tbaa !32
  %7 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %8 = load i32, ptr %7, align 8, !tbaa !37
  %9 = add nsw i32 %6, -1
  %10 = shl nuw i32 1, %9
  %11 = add nuw nsw i32 %10, 1
  %12 = getelementptr inbounds %struct.CCGFace, ptr %1, i64 1
  %13 = getelementptr inbounds %struct.CCGFace, ptr %1, i64 0, i32 2
  %14 = load i16, ptr %13, align 8, !tbaa !89
  %15 = sext i16 %14 to i64
  %16 = getelementptr inbounds ptr, ptr %12, i64 %15
  %17 = getelementptr inbounds ptr, ptr %16, i64 %15
  %18 = add nuw i32 %10, 2
  %19 = mul i32 %18, %2
  %20 = mul i32 %19, %11
  %21 = add nsw i32 %20, 1
  %22 = mul nsw i32 %21, %8
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, ptr %17, i64 %23
  %25 = mul nsw i32 %8, %3
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, ptr %24, i64 %26
  ret ptr %27
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local nonnull ptr @ccgSubSurf_getFaceGridDataArray(ptr nocapture noundef readonly %0, ptr noundef readonly %1, i32 noundef %2) local_unnamed_addr #9 {
  %4 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %5 = load i32, ptr %4, align 8, !tbaa !32
  %6 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %7 = load i32, ptr %6, align 8, !tbaa !37
  %8 = add nsw i32 %5, -1
  %9 = shl nuw i32 1, %8
  %10 = add nuw nsw i32 %9, 1
  %11 = getelementptr inbounds %struct.CCGFace, ptr %1, i64 1
  %12 = getelementptr inbounds %struct.CCGFace, ptr %1, i64 0, i32 2
  %13 = load i16, ptr %12, align 8, !tbaa !89
  %14 = sext i16 %13 to i64
  %15 = getelementptr inbounds ptr, ptr %11, i64 %14
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = add nuw i32 %9, 2
  %18 = mul i32 %17, %2
  %19 = mul i32 %18, %10
  %20 = add nsw i32 %19, 1
  %21 = mul nsw i32 %20, %7
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, ptr %16, i64 %22
  %24 = mul nsw i32 %10, %7
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, ptr %23, i64 %25
  ret ptr %26
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local nonnull ptr @ccgSubSurf_getFaceGridData(ptr nocapture noundef readonly %0, ptr noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #9 {
  %6 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %7 = load i32, ptr %6, align 8, !tbaa !32
  %8 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 3, i32 4
  %9 = load i32, ptr %8, align 8, !tbaa !37
  %10 = add nsw i32 %7, -1
  %11 = shl nuw i32 1, %10
  %12 = add nuw nsw i32 %11, 1
  %13 = getelementptr inbounds %struct.CCGFace, ptr %1, i64 1
  %14 = getelementptr inbounds %struct.CCGFace, ptr %1, i64 0, i32 2
  %15 = load i16, ptr %14, align 8, !tbaa !89
  %16 = sext i16 %15 to i64
  %17 = getelementptr inbounds ptr, ptr %13, i64 %16
  %18 = getelementptr inbounds ptr, ptr %17, i64 %16
  %19 = add nuw i32 %11, 2
  %20 = mul i32 %19, %2
  %21 = mul i32 %20, %12
  %22 = add nsw i32 %21, 1
  %23 = mul nsw i32 %22, %9
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, ptr %18, i64 %24
  %26 = mul nsw i32 %12, %4
  %27 = add i32 %12, %3
  %28 = add i32 %27, %26
  %29 = mul nsw i32 %28, %9
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, ptr %25, i64 %30
  ret ptr %31
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @ccgSubSurf_getVertIterator(ptr nocapture noundef readonly %0) local_unnamed_addr #1 {
  %2 = load ptr, ptr %0, align 8, !tbaa !27
  %3 = getelementptr inbounds %struct._EHash, ptr %2, i64 0, i32 4
  %4 = load ptr, ptr %3, align 8, !tbaa !25
  %5 = getelementptr inbounds %struct._EHash, ptr %2, i64 0, i32 5
  %6 = load ptr, ptr %5, align 8, !tbaa !20
  %7 = tail call ptr %4(ptr noundef %6, i32 noundef 24) #23
  store ptr %2, ptr %7, align 8, !tbaa !1123
  %8 = getelementptr inbounds %struct._EHashIterator, ptr %7, i64 0, i32 2
  store ptr null, ptr %8, align 8, !tbaa !1125
  %9 = getelementptr inbounds %struct._EHash, ptr %2, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !24
  %11 = zext i32 %10 to i64
  br label %12

12:                                               ; preds = %16, %1
  %13 = phi i64 [ -1, %1 ], [ %14, %16 ]
  %14 = add nsw i64 %13, 1
  %15 = icmp eq i64 %14, %11
  br i1 %15, label %23, label %16

16:                                               ; preds = %12
  %17 = load ptr, ptr %2, align 8, !tbaa !26
  %18 = getelementptr inbounds ptr, ptr %17, i64 %14
  %19 = load ptr, ptr %18, align 8, !tbaa !14
  store ptr %19, ptr %8, align 8, !tbaa !1125
  %20 = icmp eq ptr %19, null
  br i1 %20, label %12, label %21, !llvm.loop !1126

21:                                               ; preds = %16
  %22 = trunc i64 %14 to i32
  br label %23

23:                                               ; preds = %12, %21
  %24 = phi i32 [ %22, %21 ], [ %10, %12 ]
  %25 = getelementptr inbounds %struct._EHashIterator, ptr %7, i64 0, i32 1
  store i32 %24, ptr %25, align 8, !tbaa !1127
  ret ptr %7
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @ccgSubSurf_getEdgeIterator(ptr nocapture noundef readonly %0) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !28
  %4 = getelementptr inbounds %struct._EHash, ptr %3, i64 0, i32 4
  %5 = load ptr, ptr %4, align 8, !tbaa !25
  %6 = getelementptr inbounds %struct._EHash, ptr %3, i64 0, i32 5
  %7 = load ptr, ptr %6, align 8, !tbaa !20
  %8 = tail call ptr %5(ptr noundef %7, i32 noundef 24) #23
  store ptr %3, ptr %8, align 8, !tbaa !1123
  %9 = getelementptr inbounds %struct._EHashIterator, ptr %8, i64 0, i32 2
  store ptr null, ptr %9, align 8, !tbaa !1125
  %10 = getelementptr inbounds %struct._EHash, ptr %3, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !24
  %12 = zext i32 %11 to i64
  br label %13

13:                                               ; preds = %17, %1
  %14 = phi i64 [ -1, %1 ], [ %15, %17 ]
  %15 = add nsw i64 %14, 1
  %16 = icmp eq i64 %15, %12
  br i1 %16, label %24, label %17

17:                                               ; preds = %13
  %18 = load ptr, ptr %3, align 8, !tbaa !26
  %19 = getelementptr inbounds ptr, ptr %18, i64 %15
  %20 = load ptr, ptr %19, align 8, !tbaa !14
  store ptr %20, ptr %9, align 8, !tbaa !1125
  %21 = icmp eq ptr %20, null
  br i1 %21, label %13, label %22, !llvm.loop !1126

22:                                               ; preds = %17
  %23 = trunc i64 %15 to i32
  br label %24

24:                                               ; preds = %13, %22
  %25 = phi i32 [ %23, %22 ], [ %11, %13 ]
  %26 = getelementptr inbounds %struct._EHashIterator, ptr %8, i64 0, i32 1
  store i32 %25, ptr %26, align 8, !tbaa !1127
  ret ptr %8
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @ccgSubSurf_getFaceIterator(ptr nocapture noundef readonly %0) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !29
  %4 = getelementptr inbounds %struct._EHash, ptr %3, i64 0, i32 4
  %5 = load ptr, ptr %4, align 8, !tbaa !25
  %6 = getelementptr inbounds %struct._EHash, ptr %3, i64 0, i32 5
  %7 = load ptr, ptr %6, align 8, !tbaa !20
  %8 = tail call ptr %5(ptr noundef %7, i32 noundef 24) #23
  store ptr %3, ptr %8, align 8, !tbaa !1123
  %9 = getelementptr inbounds %struct._EHashIterator, ptr %8, i64 0, i32 2
  store ptr null, ptr %9, align 8, !tbaa !1125
  %10 = getelementptr inbounds %struct._EHash, ptr %3, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !24
  %12 = zext i32 %11 to i64
  br label %13

13:                                               ; preds = %17, %1
  %14 = phi i64 [ -1, %1 ], [ %15, %17 ]
  %15 = add nsw i64 %14, 1
  %16 = icmp eq i64 %15, %12
  br i1 %16, label %24, label %17

17:                                               ; preds = %13
  %18 = load ptr, ptr %3, align 8, !tbaa !26
  %19 = getelementptr inbounds ptr, ptr %18, i64 %15
  %20 = load ptr, ptr %19, align 8, !tbaa !14
  store ptr %20, ptr %9, align 8, !tbaa !1125
  %21 = icmp eq ptr %20, null
  br i1 %21, label %13, label %22, !llvm.loop !1126

22:                                               ; preds = %17
  %23 = trunc i64 %15 to i32
  br label %24

24:                                               ; preds = %13, %22
  %25 = phi i32 [ %23, %22 ], [ %11, %13 ]
  %26 = getelementptr inbounds %struct._EHashIterator, ptr %8, i64 0, i32 1
  store i32 %25, ptr %26, align 8, !tbaa !1127
  ret ptr %8
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local ptr @ccgVertIterator_getCurrent(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8, !tbaa !1125
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ccgVertIterator_isStopped(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8, !tbaa !1125
  %4 = icmp eq ptr %3, null
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @ccgVertIterator_next(ptr nocapture noundef %0) local_unnamed_addr #14 {
  %2 = getelementptr inbounds %struct._EHashIterator, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !1125
  %4 = icmp eq ptr %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct._EHashIterator, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %3, align 8, !tbaa !14
  store ptr %7, ptr %2, align 8, !tbaa !1125
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %29

9:                                                ; preds = %5
  %10 = load ptr, ptr %0, align 8, !tbaa !1123
  %11 = getelementptr inbounds %struct._EHash, ptr %10, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !24
  %13 = load i32, ptr %6, align 8, !tbaa !1127
  %14 = sext i32 %13 to i64
  %15 = sext i32 %12 to i64
  br label %16

16:                                               ; preds = %20, %9
  %17 = phi i64 [ %14, %9 ], [ %18, %20 ]
  %18 = add nsw i64 %17, 1
  %19 = icmp eq i64 %18, %15
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = load ptr, ptr %10, align 8, !tbaa !26
  %22 = getelementptr inbounds ptr, ptr %21, i64 %18
  %23 = load ptr, ptr %22, align 8, !tbaa !14
  store ptr %23, ptr %2, align 8, !tbaa !1125
  %24 = icmp eq ptr %23, null
  br i1 %24, label %16, label %25, !llvm.loop !1128

25:                                               ; preds = %20
  %26 = trunc i64 %18 to i32
  br label %27

27:                                               ; preds = %16, %25
  %28 = phi i32 [ %26, %25 ], [ %12, %16 ]
  store i32 %28, ptr %6, align 8, !tbaa !1127
  br label %29

29:                                               ; preds = %1, %5, %27
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @ccgVertIterator_free(ptr noundef %0) local_unnamed_addr #1 {
  %2 = load ptr, ptr %0, align 8, !tbaa !1123
  %3 = getelementptr inbounds %struct._EHash, ptr %2, i64 0, i32 4, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !50
  %5 = getelementptr inbounds %struct._EHash, ptr %2, i64 0, i32 5
  %6 = load ptr, ptr %5, align 8, !tbaa !20
  tail call void %4(ptr noundef %6, ptr noundef nonnull %0) #23
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local ptr @ccgEdgeIterator_getCurrent(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8, !tbaa !1125
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ccgEdgeIterator_isStopped(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8, !tbaa !1125
  %4 = icmp eq ptr %3, null
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @ccgEdgeIterator_next(ptr nocapture noundef %0) local_unnamed_addr #14 {
  %2 = getelementptr inbounds %struct._EHashIterator, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !1125
  %4 = icmp eq ptr %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct._EHashIterator, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %3, align 8, !tbaa !14
  store ptr %7, ptr %2, align 8, !tbaa !1125
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %29

9:                                                ; preds = %5
  %10 = load ptr, ptr %0, align 8, !tbaa !1123
  %11 = getelementptr inbounds %struct._EHash, ptr %10, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !24
  %13 = load i32, ptr %6, align 8, !tbaa !1127
  %14 = sext i32 %13 to i64
  %15 = sext i32 %12 to i64
  br label %16

16:                                               ; preds = %20, %9
  %17 = phi i64 [ %14, %9 ], [ %18, %20 ]
  %18 = add nsw i64 %17, 1
  %19 = icmp eq i64 %18, %15
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = load ptr, ptr %10, align 8, !tbaa !26
  %22 = getelementptr inbounds ptr, ptr %21, i64 %18
  %23 = load ptr, ptr %22, align 8, !tbaa !14
  store ptr %23, ptr %2, align 8, !tbaa !1125
  %24 = icmp eq ptr %23, null
  br i1 %24, label %16, label %25, !llvm.loop !1128

25:                                               ; preds = %20
  %26 = trunc i64 %18 to i32
  br label %27

27:                                               ; preds = %16, %25
  %28 = phi i32 [ %26, %25 ], [ %12, %16 ]
  store i32 %28, ptr %6, align 8, !tbaa !1127
  br label %29

29:                                               ; preds = %1, %5, %27
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @ccgEdgeIterator_free(ptr noundef %0) local_unnamed_addr #1 {
  %2 = load ptr, ptr %0, align 8, !tbaa !1123
  %3 = getelementptr inbounds %struct._EHash, ptr %2, i64 0, i32 4, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !50
  %5 = getelementptr inbounds %struct._EHash, ptr %2, i64 0, i32 5
  %6 = load ptr, ptr %5, align 8, !tbaa !20
  tail call void %4(ptr noundef %6, ptr noundef nonnull %0) #23
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local ptr @ccgFaceIterator_getCurrent(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8, !tbaa !1125
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ccgFaceIterator_isStopped(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8, !tbaa !1125
  %4 = icmp eq ptr %3, null
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @ccgFaceIterator_next(ptr nocapture noundef %0) local_unnamed_addr #14 {
  %2 = getelementptr inbounds %struct._EHashIterator, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !1125
  %4 = icmp eq ptr %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct._EHashIterator, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %3, align 8, !tbaa !14
  store ptr %7, ptr %2, align 8, !tbaa !1125
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %29

9:                                                ; preds = %5
  %10 = load ptr, ptr %0, align 8, !tbaa !1123
  %11 = getelementptr inbounds %struct._EHash, ptr %10, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !24
  %13 = load i32, ptr %6, align 8, !tbaa !1127
  %14 = sext i32 %13 to i64
  %15 = sext i32 %12 to i64
  br label %16

16:                                               ; preds = %20, %9
  %17 = phi i64 [ %14, %9 ], [ %18, %20 ]
  %18 = add nsw i64 %17, 1
  %19 = icmp eq i64 %18, %15
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = load ptr, ptr %10, align 8, !tbaa !26
  %22 = getelementptr inbounds ptr, ptr %21, i64 %18
  %23 = load ptr, ptr %22, align 8, !tbaa !14
  store ptr %23, ptr %2, align 8, !tbaa !1125
  %24 = icmp eq ptr %23, null
  br i1 %24, label %16, label %25, !llvm.loop !1128

25:                                               ; preds = %20
  %26 = trunc i64 %18 to i32
  br label %27

27:                                               ; preds = %16, %25
  %28 = phi i32 [ %26, %25 ], [ %12, %16 ]
  store i32 %28, ptr %6, align 8, !tbaa !1127
  br label %29

29:                                               ; preds = %1, %5, %27
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @ccgFaceIterator_free(ptr noundef %0) local_unnamed_addr #1 {
  %2 = load ptr, ptr %0, align 8, !tbaa !1123
  %3 = getelementptr inbounds %struct._EHash, ptr %2, i64 0, i32 4, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !50
  %5 = getelementptr inbounds %struct._EHash, ptr %2, i64 0, i32 5
  %6 = load ptr, ptr %5, align 8, !tbaa !20
  tail call void %4(ptr noundef %6, ptr noundef nonnull %0) #23
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @ccgSubSurf_getNumFinalVerts(ptr nocapture noundef readonly %0) local_unnamed_addr #11 {
  %2 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %3 = load i32, ptr %2, align 8, !tbaa !32
  %4 = add nsw i32 %3, -1
  %5 = load ptr, ptr %0, align 8, !tbaa !27
  %6 = getelementptr inbounds %struct._EHash, ptr %5, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !22
  %8 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !28
  %10 = getelementptr inbounds %struct._EHash, ptr %9, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !22
  %12 = freeze i32 %11
  %13 = shl i32 %12, %3
  %14 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !29
  %16 = getelementptr inbounds %struct._EHash, ptr %15, i64 0, i32 1
  %17 = load i32, ptr %16, align 8, !tbaa !22
  %18 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 7
  %19 = load i32, ptr %18, align 4, !tbaa !66
  %20 = shl nsw i32 -1, %4
  %21 = xor i32 %20, -1
  %22 = shl i32 %21, %4
  %23 = mul nsw i32 %19, %22
  %24 = sub i32 %7, %12
  %25 = add i32 %24, %13
  %26 = add nsw i32 %25, %17
  %27 = add nsw i32 %26, %23
  ret i32 %27
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @ccgSubSurf_getNumFinalEdges(ptr nocapture noundef readonly %0) local_unnamed_addr #11 {
  %2 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %3 = load i32, ptr %2, align 8, !tbaa !32
  %4 = add nsw i32 %3, -1
  %5 = shl nuw i32 1, %4
  %6 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !28
  %8 = getelementptr inbounds %struct._EHash, ptr %7, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !22
  %10 = shl i32 %9, %3
  %11 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 7
  %12 = load i32, ptr %11, align 4, !tbaa !66
  %13 = add nsw i32 %5, -1
  %14 = shl i32 %13, %4
  %15 = shl nsw i32 %14, 1
  %16 = add nsw i32 %15, %5
  %17 = mul nsw i32 %16, %12
  %18 = add nsw i32 %17, %10
  ret i32 %18
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @ccgSubSurf_getNumFinalFaces(ptr nocapture noundef readonly %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 6
  %3 = load i32, ptr %2, align 8, !tbaa !32
  %4 = add nsw i32 %3, -1
  %5 = shl nuw i32 1, %4
  %6 = getelementptr inbounds %struct.CCGSubSurf, ptr %0, i64 0, i32 7
  %7 = load i32, ptr %6, align 4, !tbaa !66
  %8 = shl i32 %5, %4
  %9 = mul nsw i32 %8, %7
  ret i32 %9
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable
define dso_local void @CCG_key(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 {
  store i32 %2, ptr %0, align 4, !tbaa !1129
  %4 = getelementptr inbounds %struct.CCGSubSurf, ptr %1, i64 0, i32 3, i32 4
  %5 = load i32, ptr %4, align 8, !tbaa !37
  %6 = getelementptr inbounds %struct.CCGKey, ptr %0, i64 0, i32 1
  store i32 %5, ptr %6, align 4, !tbaa !1131
  %7 = getelementptr inbounds %struct.CCGSubSurf, ptr %1, i64 0, i32 13
  %8 = load i32, ptr %7, align 8, !tbaa !33
  %9 = getelementptr inbounds %struct.CCGKey, ptr %0, i64 0, i32 8
  store i32 %8, ptr %9, align 4, !tbaa !1132
  %10 = getelementptr inbounds %struct.CCGSubSurf, ptr %1, i64 0, i32 3, i32 3
  %11 = load i32, ptr %10, align 4, !tbaa !74
  %12 = getelementptr inbounds %struct.CCGKey, ptr %0, i64 0, i32 7
  store i32 %11, ptr %12, align 4, !tbaa !1133
  %13 = icmp eq i32 %8, 0
  %14 = add i32 %5, -12
  %15 = select i1 %13, i32 -1, i32 %14
  %16 = getelementptr inbounds %struct.CCGKey, ptr %0, i64 0, i32 5
  store i32 %15, ptr %16, align 4
  %17 = icmp slt i32 %2, 1
  br i1 %17, label %26, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.CCGSubSurf, ptr %1, i64 0, i32 6
  %20 = load i32, ptr %19, align 8, !tbaa !32
  %21 = icmp slt i32 %20, %2
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = add nsw i32 %2, -1
  %24 = shl nuw i32 1, %23
  %25 = add nuw nsw i32 %24, 1
  br label %26

26:                                               ; preds = %3, %18, %22
  %27 = phi i32 [ %25, %22 ], [ -1, %18 ], [ -1, %3 ]
  %28 = getelementptr inbounds %struct.CCGKey, ptr %0, i64 0, i32 2
  store i32 %27, ptr %28, align 4, !tbaa !1134
  %29 = mul nsw i32 %27, %27
  %30 = getelementptr inbounds %struct.CCGKey, ptr %0, i64 0, i32 3
  store i32 %29, ptr %30, align 4, !tbaa !1135
  %31 = mul nsw i32 %29, %5
  %32 = getelementptr inbounds %struct.CCGKey, ptr %0, i64 0, i32 4
  store i32 %31, ptr %32, align 4, !tbaa !1136
  %33 = getelementptr inbounds %struct.CCGSubSurf, ptr %1, i64 0, i32 15
  %34 = load i32, ptr %33, align 8, !tbaa !35
  %35 = getelementptr inbounds %struct.CCGKey, ptr %0, i64 0, i32 9
  store i32 %34, ptr %35, align 4, !tbaa !1137
  %36 = icmp eq i32 %34, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %26
  %38 = getelementptr inbounds %struct.CCGSubSurf, ptr %1, i64 0, i32 16
  %39 = load i32, ptr %38, align 4, !tbaa !73
  br label %40

40:                                               ; preds = %26, %37
  %41 = phi i32 [ %39, %37 ], [ -1, %26 ]
  %42 = getelementptr inbounds %struct.CCGKey, ptr %0, i64 0, i32 6
  store i32 %41, ptr %42, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable
define dso_local void @CCG_key_top_level(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.CCGSubSurf, ptr %1, i64 0, i32 6
  %4 = load i32, ptr %3, align 8, !tbaa !32
  store i32 %4, ptr %0, align 4, !tbaa !1129
  %5 = getelementptr inbounds %struct.CCGSubSurf, ptr %1, i64 0, i32 3, i32 4
  %6 = load i32, ptr %5, align 8, !tbaa !37
  %7 = getelementptr inbounds %struct.CCGKey, ptr %0, i64 0, i32 1
  store i32 %6, ptr %7, align 4, !tbaa !1131
  %8 = getelementptr inbounds %struct.CCGSubSurf, ptr %1, i64 0, i32 13
  %9 = load i32, ptr %8, align 8, !tbaa !33
  %10 = getelementptr inbounds %struct.CCGKey, ptr %0, i64 0, i32 8
  store i32 %9, ptr %10, align 4, !tbaa !1132
  %11 = getelementptr inbounds %struct.CCGSubSurf, ptr %1, i64 0, i32 3, i32 3
  %12 = load i32, ptr %11, align 4, !tbaa !74
  %13 = getelementptr inbounds %struct.CCGKey, ptr %0, i64 0, i32 7
  store i32 %12, ptr %13, align 4, !tbaa !1133
  %14 = icmp eq i32 %9, 0
  %15 = add i32 %6, -12
  %16 = select i1 %14, i32 -1, i32 %15
  %17 = getelementptr inbounds %struct.CCGKey, ptr %0, i64 0, i32 5
  store i32 %16, ptr %17, align 4
  %18 = icmp slt i32 %4, 1
  br i1 %18, label %26, label %19

19:                                               ; preds = %2
  %20 = load i32, ptr %3, align 8, !tbaa !32
  %21 = icmp slt i32 %20, %4
  br i1 %21, label %26, label %22

22:                                               ; preds = %19
  %23 = add nsw i32 %4, -1
  %24 = shl nuw i32 1, %23
  %25 = add nuw nsw i32 %24, 1
  br label %26

26:                                               ; preds = %22, %19, %2
  %27 = phi i32 [ %25, %22 ], [ -1, %19 ], [ -1, %2 ]
  %28 = getelementptr inbounds %struct.CCGKey, ptr %0, i64 0, i32 2
  store i32 %27, ptr %28, align 4, !tbaa !1134
  %29 = mul nsw i32 %27, %27
  %30 = getelementptr inbounds %struct.CCGKey, ptr %0, i64 0, i32 3
  store i32 %29, ptr %30, align 4, !tbaa !1135
  %31 = mul nsw i32 %29, %6
  %32 = getelementptr inbounds %struct.CCGKey, ptr %0, i64 0, i32 4
  store i32 %31, ptr %32, align 4, !tbaa !1136
  %33 = getelementptr inbounds %struct.CCGSubSurf, ptr %1, i64 0, i32 15
  %34 = load i32, ptr %33, align 8, !tbaa !35
  %35 = getelementptr inbounds %struct.CCGKey, ptr %0, i64 0, i32 9
  store i32 %34, ptr %35, align 4, !tbaa !1137
  %36 = icmp eq i32 %34, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %26
  %38 = getelementptr inbounds %struct.CCGSubSurf, ptr %1, i64 0, i32 16
  %39 = load i32, ptr %38, align 4, !tbaa !73
  br label %40

40:                                               ; preds = %26, %37
  %41 = phi i32 [ %39, %37 ], [ -1, %26 ]
  %42 = getelementptr inbounds %struct.CCGKey, ptr %0, i64 0, i32 6
  store i32 %41, ptr %42, align 4
  ret void
}

; Function Attrs: mustprogress nofree nounwind sspstrong willreturn memory(inaccessiblemem: readwrite) uwtable
define internal noalias ptr @_stdAllocator_alloc(ptr nocapture readnone %0, i32 noundef %1) #15 {
  %3 = sext i32 %1 to i64
  %4 = tail call noalias ptr @malloc(i64 noundef %3) #24
  ret ptr %4
}

; Function Attrs: mustprogress nounwind sspstrong willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define internal noalias ptr @_stdAllocator_realloc(ptr nocapture readnone %0, ptr nocapture noundef %1, i32 noundef %2, i32 %3) #16 {
  %5 = sext i32 %2 to i64
  %6 = tail call ptr @realloc(ptr noundef %1, i64 noundef %5) #25
  ret ptr %6
}

; Function Attrs: mustprogress nounwind sspstrong willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define internal void @_stdAllocator_free(ptr nocapture readnone %0, ptr nocapture noundef %1) #16 {
  tail call void @free(ptr noundef %1) #23
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #17

; Function Attrs: mustprogress nounwind willreturn allockind("realloc") allocsize(1) memory(argmem: readwrite, inaccessiblemem: readwrite)
declare noalias noundef ptr @realloc(ptr allocptr nocapture noundef, i64 noundef) local_unnamed_addr #18

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #19

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.sqrt.f32(float) #20

; Function Attrs: nofree nounwind willreturn memory(argmem: read)
declare i32 @bcmp(ptr nocapture, ptr nocapture, i64) local_unnamed_addr #21

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #22

attributes #0 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #5 = { mustprogress nofree nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #7 = { mustprogress nofree nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: write) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #9 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #10 = { nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #11 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #12 = { nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #13 = { nofree norecurse nosync nounwind sspstrong memory(argmem: read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #14 = { nofree norecurse nosync nounwind sspstrong memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #15 = { mustprogress nofree nounwind sspstrong willreturn memory(inaccessiblemem: readwrite) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #16 = { mustprogress nounwind sspstrong willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #17 = { mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #18 = { mustprogress nounwind willreturn allockind("realloc") allocsize(1) memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #19 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #20 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #21 = { nofree nounwind willreturn memory(argmem: read) }
attributes #22 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #23 = { nounwind }
attributes #24 = { nounwind allocsize(0) }
attributes #25 = { nounwind allocsize(1) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !7, i64 0}
!6 = !{!"CCGAllocatorIFC", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24}
!7 = !{!"any pointer", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!6, !7, i64 8}
!11 = !{!6, !7, i64 16}
!12 = !{!6, !7, i64 24}
!13 = !{i64 0, i64 8, !14, i64 8, i64 8, !14, i64 16, i64 8, !14, i64 24, i64 8, !14}
!14 = !{!7, !7, i64 0}
!15 = !{!16, !7, i64 80}
!16 = !{!"CCGSubSurf", !7, i64 0, !7, i64 8, !7, i64 16, !17, i64 24, !6, i64 48, !7, i64 80, !18, i64 88, !18, i64 92, !18, i64 96, !19, i64 100, !7, i64 104, !7, i64 112, !7, i64 120, !18, i64 128, !18, i64 132, !18, i64 136, !18, i64 140, !18, i64 144, !18, i64 148, !18, i64 152, !18, i64 156, !18, i64 160, !8, i64 164, !7, i64 168, !7, i64 176, !7, i64 184, !18, i64 192, !7, i64 200, !7, i64 208}
!17 = !{!"CCGMeshIFC", !18, i64 0, !18, i64 4, !18, i64 8, !18, i64 12, !18, i64 16, !18, i64 20}
!18 = !{!"int", !8, i64 0}
!19 = !{!"float", !8, i64 0}
!20 = !{!21, !7, i64 56}
!21 = !{!"_EHash", !7, i64 0, !18, i64 8, !18, i64 12, !18, i64 16, !6, i64 24, !7, i64 56}
!22 = !{!21, !18, i64 8}
!23 = !{!21, !18, i64 16}
!24 = !{!21, !18, i64 12}
!25 = !{!21, !7, i64 24}
!26 = !{!21, !7, i64 0}
!27 = !{!16, !7, i64 0}
!28 = !{!16, !7, i64 8}
!29 = !{!16, !7, i64 16}
!30 = !{i64 0, i64 4, !31, i64 4, i64 4, !31, i64 8, i64 4, !31, i64 12, i64 4, !31, i64 16, i64 4, !31, i64 20, i64 4, !31}
!31 = !{!18, !18, i64 0}
!32 = !{!16, !18, i64 88}
!33 = !{!16, !18, i64 128}
!34 = !{!16, !18, i64 132}
!35 = !{!16, !18, i64 136}
!36 = !{!16, !7, i64 48}
!37 = !{!16, !18, i64 40}
!38 = !{!16, !7, i64 112}
!39 = !{!16, !7, i64 120}
!40 = !{!16, !18, i64 144}
!41 = !{i64 0, i64 8, !14}
!42 = !{!16, !8, i64 164}
!43 = !{!16, !7, i64 184}
!44 = distinct !{!44, !45}
!45 = !{!"llvm.loop.mustprogress"}
!46 = !{!47, !7, i64 0}
!47 = !{!"_EHEntry", !7, i64 0, !7, i64 8}
!48 = !{!16, !7, i64 64}
!49 = distinct !{!49, !45}
!50 = !{!21, !7, i64 40}
!51 = !{!16, !7, i64 176}
!52 = !{!53, !7, i64 40}
!53 = !{!"CCGEdge", !7, i64 0, !7, i64 8, !54, i64 16, !54, i64 18, !19, i64 20, !7, i64 24, !7, i64 32, !7, i64 40}
!54 = !{!"short", !8, i64 0}
!55 = !{!16, !7, i64 168}
!56 = !{!57, !7, i64 24}
!57 = !{!"CCGVert", !7, i64 0, !7, i64 8, !54, i64 16, !54, i64 18, !54, i64 20, !54, i64 22, !7, i64 24, !7, i64 32}
!58 = !{!57, !7, i64 32}
!59 = !{!16, !7, i64 200}
!60 = !{!16, !7, i64 208}
!61 = !{!16, !7, i64 104}
!62 = !{!16, !18, i64 96}
!63 = !{!16, !19, i64 100}
!64 = !{!16, !18, i64 28}
!65 = !{!19, !19, i64 0}
!66 = !{!16, !18, i64 92}
!67 = !{!16, !18, i64 148}
!68 = !{!16, !18, i64 152}
!69 = !{!16, !18, i64 156}
!70 = !{!16, !18, i64 160}
!71 = !{!16, !18, i64 24}
!72 = !{!16, !18, i64 32}
!73 = !{!16, !18, i64 140}
!74 = !{!16, !18, i64 36}
!75 = !{!16, !18, i64 192}
!76 = !{!47, !7, i64 8}
!77 = distinct !{!77, !45}
!78 = !{!57, !54, i64 18}
!79 = !{!57, !54, i64 16}
!80 = !{!57, !7, i64 0}
!81 = !{!53, !54, i64 16}
!82 = !{!53, !7, i64 0}
!83 = !{!53, !7, i64 24}
!84 = distinct !{!84, !45}
!85 = !{!53, !7, i64 32}
!86 = !{!57, !54, i64 20}
!87 = !{!88, !7, i64 0}
!88 = !{!"CCGFace", !7, i64 0, !7, i64 8, !54, i64 16, !54, i64 18, !54, i64 20, !54, i64 22}
!89 = !{!88, !54, i64 16}
!90 = distinct !{!90, !45}
!91 = distinct !{!91, !45}
!92 = distinct !{!92, !45}
!93 = !{!57, !7, i64 8}
!94 = distinct !{!94, !45, !95, !96}
!95 = !{!"llvm.loop.isvectorized", i32 1}
!96 = !{!"llvm.loop.unroll.runtime.disable"}
!97 = distinct !{!97, !98}
!98 = !{!"llvm.loop.unroll.disable"}
!99 = distinct !{!99, !45, !95}
!100 = distinct !{!100, !45}
!101 = distinct !{!101, !45, !95, !96}
!102 = distinct !{!102, !98}
!103 = distinct !{!103, !45, !95}
!104 = distinct !{!104, !45}
!105 = distinct !{!105, !45}
!106 = distinct !{!106, !98}
!107 = distinct !{!107, !45}
!108 = distinct !{!108, !45, !95, !96}
!109 = distinct !{!109, !98}
!110 = distinct !{!110, !45, !95}
!111 = distinct !{!111, !45, !95, !96}
!112 = distinct !{!112, !98}
!113 = distinct !{!113, !45, !95}
!114 = distinct !{!114, !45}
!115 = distinct !{!115, !45}
!116 = !{!53, !19, i64 20}
!117 = distinct !{!117, !45}
!118 = !{!53, !54, i64 18}
!119 = !{!53, !7, i64 8}
!120 = !{!16, !7, i64 56}
!121 = distinct !{!121, !45}
!122 = distinct !{!122, !45}
!123 = distinct !{!123, !45}
!124 = distinct !{!124, !45}
!125 = distinct !{!125, !45}
!126 = distinct !{!126, !45}
!127 = distinct !{!127, !45}
!128 = !{!88, !54, i64 18}
!129 = distinct !{!129, !45}
!130 = distinct !{!130, !45}
!131 = distinct !{!131, !98}
!132 = distinct !{!132, !98}
!133 = distinct !{!133, !98}
!134 = !{!88, !7, i64 8}
!135 = distinct !{!135, !45}
!136 = distinct !{!136, !45}
!137 = distinct !{!137, !45}
!138 = distinct !{!138, !45}
!139 = distinct !{!139, !45}
!140 = !{!141}
!141 = distinct !{!141, !142}
!142 = distinct !{!142, !"LVerDomain"}
!143 = !{!144}
!144 = distinct !{!144, !142}
!145 = distinct !{!145, !45, !95, !96}
!146 = distinct !{!146, !98}
!147 = distinct !{!147, !45, !95}
!148 = distinct !{!148, !45}
!149 = distinct !{!149, !45, !95, !96}
!150 = distinct !{!150, !45, !96, !95}
!151 = distinct !{!151, !45}
!152 = distinct !{!152, !45, !95, !96}
!153 = distinct !{!153, !98}
!154 = distinct !{!154, !45, !95}
!155 = !{!156}
!156 = distinct !{!156, !157}
!157 = distinct !{!157, !"LVerDomain"}
!158 = !{!159}
!159 = distinct !{!159, !157}
!160 = distinct !{!160, !45, !95, !96}
!161 = distinct !{!161, !98}
!162 = distinct !{!162, !45, !95}
!163 = distinct !{!163, !45, !95, !96}
!164 = distinct !{!164, !45, !96, !95}
!165 = distinct !{!165, !45, !95, !96}
!166 = distinct !{!166, !98}
!167 = distinct !{!167, !45, !95}
!168 = !{!169}
!169 = distinct !{!169, !170}
!170 = distinct !{!170, !"LVerDomain"}
!171 = !{!172}
!172 = distinct !{!172, !170}
!173 = distinct !{!173, !45, !95, !96}
!174 = distinct !{!174, !98}
!175 = distinct !{!175, !45, !95}
!176 = !{!177}
!177 = distinct !{!177, !178}
!178 = distinct !{!178, !"LVerDomain"}
!179 = !{!180}
!180 = distinct !{!180, !178}
!181 = distinct !{!181, !45, !95, !96}
!182 = distinct !{!182, !98}
!183 = distinct !{!183, !45, !95}
!184 = distinct !{!184, !45}
!185 = distinct !{!185, !45, !95, !96}
!186 = distinct !{!186, !45, !96, !95}
!187 = distinct !{!187, !45, !95, !96}
!188 = distinct !{!188, !98}
!189 = distinct !{!189, !45, !95}
!190 = !{!191}
!191 = distinct !{!191, !192}
!192 = distinct !{!192, !"LVerDomain"}
!193 = !{!194}
!194 = distinct !{!194, !192}
!195 = distinct !{!195, !45, !95, !96}
!196 = distinct !{!196, !98}
!197 = distinct !{!197, !45, !95}
!198 = distinct !{!198, !45, !95, !96}
!199 = distinct !{!199, !45, !96, !95}
!200 = distinct !{!200, !45, !95, !96}
!201 = distinct !{!201, !98}
!202 = distinct !{!202, !45, !95}
!203 = !{!204}
!204 = distinct !{!204, !205}
!205 = distinct !{!205, !"LVerDomain"}
!206 = !{!207}
!207 = distinct !{!207, !205}
!208 = distinct !{!208, !45, !95, !96}
!209 = distinct !{!209, !98}
!210 = distinct !{!210, !45, !95}
!211 = distinct !{!211, !45, !95, !96}
!212 = distinct !{!212, !45, !96, !95}
!213 = !{!214}
!214 = distinct !{!214, !215}
!215 = distinct !{!215, !"LVerDomain"}
!216 = !{!217}
!217 = distinct !{!217, !215}
!218 = distinct !{!218, !45, !95, !96}
!219 = distinct !{!219, !98}
!220 = distinct !{!220, !45, !95}
!221 = distinct !{!221, !45}
!222 = distinct !{!222, !45}
!223 = !{!16, !18, i64 44}
!224 = distinct !{!224, !45, !95, !96}
!225 = distinct !{!225, !98}
!226 = distinct !{!226, !45, !95}
!227 = distinct !{!227, !45}
!228 = !{!229}
!229 = distinct !{!229, !230}
!230 = distinct !{!230, !"LVerDomain"}
!231 = !{!232}
!232 = distinct !{!232, !230}
!233 = distinct !{!233, !45, !95, !96}
!234 = distinct !{!234, !98}
!235 = distinct !{!235, !45, !95}
!236 = distinct !{!236, !45}
!237 = distinct !{!237, !45, !95, !96}
!238 = distinct !{!238, !98}
!239 = distinct !{!239, !45, !95}
!240 = distinct !{!240, !45, !95, !96}
!241 = distinct !{!241, !45, !96, !95}
!242 = distinct !{!242, !45, !95, !96}
!243 = distinct !{!243, !45, !96, !95}
!244 = !{!245}
!245 = distinct !{!245, !246}
!246 = distinct !{!246, !"LVerDomain"}
!247 = !{!248}
!248 = distinct !{!248, !246}
!249 = distinct !{!249, !45, !95, !96}
!250 = distinct !{!250, !98}
!251 = distinct !{!251, !45, !95}
!252 = !{!253}
!253 = distinct !{!253, !254}
!254 = distinct !{!254, !"LVerDomain"}
!255 = !{!256}
!256 = distinct !{!256, !254}
!257 = distinct !{!257, !45, !95, !96}
!258 = distinct !{!258, !98}
!259 = distinct !{!259, !45, !95}
!260 = distinct !{!260, !45}
!261 = distinct !{!261, !45, !95, !96}
!262 = distinct !{!262, !45, !96, !95}
!263 = !{!264}
!264 = distinct !{!264, !265}
!265 = distinct !{!265, !"LVerDomain"}
!266 = !{!267}
!267 = distinct !{!267, !265}
!268 = distinct !{!268, !45, !95, !96}
!269 = distinct !{!269, !98}
!270 = distinct !{!270, !45, !95}
!271 = distinct !{!271, !45}
!272 = distinct !{!272, !45, !95, !96}
!273 = distinct !{!273, !45, !96, !95}
!274 = distinct !{!274, !45, !95, !96}
!275 = distinct !{!275, !98}
!276 = distinct !{!276, !45, !95}
!277 = distinct !{!277, !45, !95, !96}
!278 = distinct !{!278, !45, !96, !95}
!279 = !{!280}
!280 = distinct !{!280, !281}
!281 = distinct !{!281, !"LVerDomain"}
!282 = !{!283}
!283 = distinct !{!283, !281}
!284 = distinct !{!284, !45, !95, !96}
!285 = distinct !{!285, !98}
!286 = distinct !{!286, !45, !95}
!287 = !{!288}
!288 = distinct !{!288, !289}
!289 = distinct !{!289, !"LVerDomain"}
!290 = !{!291}
!291 = distinct !{!291, !289}
!292 = distinct !{!292, !45, !95, !96}
!293 = distinct !{!293, !98}
!294 = distinct !{!294, !45, !95}
!295 = distinct !{!295, !45, !95, !96}
!296 = distinct !{!296, !45, !96, !95}
!297 = !{!298}
!298 = distinct !{!298, !299}
!299 = distinct !{!299, !"LVerDomain"}
!300 = !{!301}
!301 = distinct !{!301, !299}
!302 = distinct !{!302, !45, !95, !96}
!303 = distinct !{!303, !98}
!304 = distinct !{!304, !45, !95}
!305 = !{!306}
!306 = distinct !{!306, !307}
!307 = distinct !{!307, !"LVerDomain"}
!308 = !{!309}
!309 = distinct !{!309, !307}
!310 = distinct !{!310, !45, !95, !96}
!311 = distinct !{!311, !98}
!312 = distinct !{!312, !45, !95}
!313 = distinct !{!313, !45}
!314 = distinct !{!314, !45, !95, !96}
!315 = distinct !{!315, !45, !96, !95}
!316 = distinct !{!316, !45, !95, !96}
!317 = distinct !{!317, !98}
!318 = distinct !{!318, !45, !95}
!319 = !{!320}
!320 = distinct !{!320, !321}
!321 = distinct !{!321, !"LVerDomain"}
!322 = !{!323}
!323 = distinct !{!323, !321}
!324 = distinct !{!324, !45, !95, !96}
!325 = distinct !{!325, !98}
!326 = distinct !{!326, !45, !95}
!327 = distinct !{!327, !45, !95, !96}
!328 = distinct !{!328, !45, !96, !95}
!329 = !{!330}
!330 = distinct !{!330, !331}
!331 = distinct !{!331, !"LVerDomain"}
!332 = !{!333}
!333 = distinct !{!333, !331}
!334 = distinct !{!334, !45, !95, !96}
!335 = distinct !{!335, !98}
!336 = distinct !{!336, !45, !95}
!337 = distinct !{!337, !45, !95, !96}
!338 = distinct !{!338, !98}
!339 = distinct !{!339, !45, !95}
!340 = distinct !{!340, !45, !95, !96}
!341 = distinct !{!341, !45, !96, !95}
!342 = distinct !{!342, !45, !95, !96}
!343 = distinct !{!343, !45, !96, !95}
!344 = !{!345}
!345 = distinct !{!345, !346}
!346 = distinct !{!346, !"LVerDomain"}
!347 = !{!348}
!348 = distinct !{!348, !346}
!349 = distinct !{!349, !45, !95, !96}
!350 = distinct !{!350, !98}
!351 = distinct !{!351, !45, !95}
!352 = !{!353}
!353 = distinct !{!353, !354}
!354 = distinct !{!354, !"LVerDomain"}
!355 = !{!356}
!356 = distinct !{!356, !354}
!357 = distinct !{!357, !45, !95, !96}
!358 = distinct !{!358, !98}
!359 = distinct !{!359, !45, !95}
!360 = distinct !{!360, !45, !95, !96}
!361 = distinct !{!361, !45, !96, !95}
!362 = !{!363}
!363 = distinct !{!363, !364}
!364 = distinct !{!364, !"LVerDomain"}
!365 = !{!366}
!366 = distinct !{!366, !364}
!367 = distinct !{!367, !45, !95, !96}
!368 = distinct !{!368, !98}
!369 = distinct !{!369, !45, !95}
!370 = distinct !{!370, !45}
!371 = distinct !{!371, !45}
!372 = distinct !{!372, !45}
!373 = distinct !{!373, !45}
!374 = distinct !{!374, !45, !95, !96}
!375 = distinct !{!375, !98}
!376 = distinct !{!376, !45, !95}
!377 = distinct !{!377, !45, !95, !96}
!378 = distinct !{!378, !98}
!379 = distinct !{!379, !45, !95}
!380 = distinct !{!380, !45}
!381 = distinct !{!381, !45, !95, !96}
!382 = distinct !{!382, !98}
!383 = distinct !{!383, !45, !95}
!384 = distinct !{!384, !45, !95, !96}
!385 = distinct !{!385, !98}
!386 = distinct !{!386, !45, !95}
!387 = distinct !{!387, !45, !95}
!388 = distinct !{!388, !45, !95, !96}
!389 = distinct !{!389, !98}
!390 = distinct !{!390, !45, !95}
!391 = distinct !{!391, !45, !95, !96}
!392 = distinct !{!392, !98}
!393 = distinct !{!393, !45, !95}
!394 = distinct !{!394, !45, !95, !96}
!395 = distinct !{!395, !98}
!396 = distinct !{!396, !45, !95}
!397 = distinct !{!397, !45}
!398 = distinct !{!398, !45, !95, !96}
!399 = distinct !{!399, !98}
!400 = distinct !{!400, !45}
!401 = distinct !{!401, !45}
!402 = distinct !{!402, !98}
!403 = distinct !{!403, !45}
!404 = distinct !{!404, !45}
!405 = distinct !{!405, !98}
!406 = distinct !{!406, !45}
!407 = distinct !{!407, !45}
!408 = distinct !{!408, !45, !95, !96}
!409 = distinct !{!409, !98}
!410 = distinct !{!410, !45, !95}
!411 = distinct !{!411, !45, !95, !96}
!412 = distinct !{!412, !98}
!413 = distinct !{!413, !45, !95}
!414 = distinct !{!414, !45, !95, !96}
!415 = distinct !{!415, !98}
!416 = distinct !{!416, !45, !95}
!417 = distinct !{!417, !45}
!418 = distinct !{!418, !45, !95, !96}
!419 = distinct !{!419, !98}
!420 = distinct !{!420, !45, !95}
!421 = distinct !{!421, !45, !95, !96}
!422 = distinct !{!422, !98}
!423 = distinct !{!423, !45, !95}
!424 = distinct !{!424, !45}
!425 = distinct !{!425, !45}
!426 = distinct !{!426, !45}
!427 = distinct !{!427, !45, !95, !96}
!428 = distinct !{!428, !98}
!429 = distinct !{!429, !45, !95}
!430 = distinct !{!430, !45, !95, !96}
!431 = distinct !{!431, !98}
!432 = distinct !{!432, !45, !95}
!433 = distinct !{!433, !45}
!434 = distinct !{!434, !45, !95, !96}
!435 = distinct !{!435, !98}
!436 = distinct !{!436, !45, !95}
!437 = distinct !{!437, !45, !95, !96}
!438 = distinct !{!438, !98}
!439 = distinct !{!439, !45, !95}
!440 = distinct !{!440, !45}
!441 = distinct !{!441, !45, !95, !96}
!442 = distinct !{!442, !98}
!443 = distinct !{!443, !45, !95}
!444 = distinct !{!444, !45, !95, !96}
!445 = distinct !{!445, !98}
!446 = distinct !{!446, !45, !95}
!447 = distinct !{!447, !45}
!448 = distinct !{!448, !45}
!449 = distinct !{!449, !45}
!450 = distinct !{!450, !45}
!451 = distinct !{!451, !98}
!452 = distinct !{!452, !45}
!453 = distinct !{!453, !45}
!454 = distinct !{!454, !45}
!455 = !{!456}
!456 = distinct !{!456, !457}
!457 = distinct !{!457, !"LVerDomain"}
!458 = !{!459}
!459 = distinct !{!459, !457}
!460 = distinct !{!460, !45, !95, !96}
!461 = distinct !{!461, !98}
!462 = distinct !{!462, !45, !95}
!463 = !{!464}
!464 = distinct !{!464, !465}
!465 = distinct !{!465, !"LVerDomain"}
!466 = !{!467}
!467 = distinct !{!467, !465}
!468 = distinct !{!468, !45, !95, !96}
!469 = distinct !{!469, !98}
!470 = distinct !{!470, !45, !95}
!471 = !{!472}
!472 = distinct !{!472, !473}
!473 = distinct !{!473, !"LVerDomain"}
!474 = !{!475}
!475 = distinct !{!475, !473}
!476 = distinct !{!476, !45, !95, !96}
!477 = distinct !{!477, !98}
!478 = distinct !{!478, !45, !95}
!479 = !{!480}
!480 = distinct !{!480, !481}
!481 = distinct !{!481, !"LVerDomain"}
!482 = !{!483}
!483 = distinct !{!483, !481}
!484 = distinct !{!484, !45, !95, !96}
!485 = distinct !{!485, !98}
!486 = distinct !{!486, !45, !95}
!487 = distinct !{!487, !45}
!488 = !{!489}
!489 = distinct !{!489, !490}
!490 = distinct !{!490, !"LVerDomain"}
!491 = !{!492}
!492 = distinct !{!492, !490}
!493 = distinct !{!493, !45, !95, !96}
!494 = distinct !{!494, !98}
!495 = distinct !{!495, !45, !95}
!496 = !{!497}
!497 = distinct !{!497, !498}
!498 = distinct !{!498, !"LVerDomain"}
!499 = !{!500}
!500 = distinct !{!500, !498}
!501 = distinct !{!501, !45, !95, !96}
!502 = distinct !{!502, !98}
!503 = distinct !{!503, !45, !95}
!504 = distinct !{!504, !45}
!505 = distinct !{!505, !45}
!506 = distinct !{!506, !45}
!507 = distinct !{!507, !45, !95, !96}
!508 = distinct !{!508, !45, !96, !95}
!509 = distinct !{!509, !45}
!510 = distinct !{!510, !45, !95, !96}
!511 = distinct !{!511, !98}
!512 = distinct !{!512, !45, !95}
!513 = distinct !{!513, !45, !95, !96}
!514 = distinct !{!514, !98}
!515 = distinct !{!515, !45, !95}
!516 = distinct !{!516, !45, !95, !96}
!517 = distinct !{!517, !45, !96, !95}
!518 = distinct !{!518, !45}
!519 = distinct !{!519, !45}
!520 = distinct !{!520, !45, !95, !96}
!521 = distinct !{!521, !45, !96, !95}
!522 = distinct !{!522, !45, !95, !96}
!523 = distinct !{!523, !45, !96, !95}
!524 = distinct !{!524, !45}
!525 = distinct !{!525, !45}
!526 = distinct !{!526, !45, !95, !96}
!527 = distinct !{!527, !98}
!528 = distinct !{!528, !45, !95}
!529 = distinct !{!529, !45, !95, !96}
!530 = distinct !{!530, !98}
!531 = distinct !{!531, !45, !95}
!532 = distinct !{!532, !45, !95, !96}
!533 = distinct !{!533, !98}
!534 = distinct !{!534, !45, !95}
!535 = distinct !{!535, !45, !95, !96}
!536 = distinct !{!536, !98}
!537 = distinct !{!537, !45, !95}
!538 = distinct !{!538, !45}
!539 = distinct !{!539, !45, !95, !96}
!540 = distinct !{!540, !98}
!541 = distinct !{!541, !45, !95}
!542 = distinct !{!542, !45, !95, !96}
!543 = distinct !{!543, !98}
!544 = distinct !{!544, !45, !95}
!545 = distinct !{!545, !45}
!546 = distinct !{!546, !45, !95, !96}
!547 = distinct !{!547, !98}
!548 = distinct !{!548, !45, !95}
!549 = distinct !{!549, !45, !95, !96}
!550 = distinct !{!550, !98}
!551 = distinct !{!551, !45, !95}
!552 = distinct !{!552, !45}
!553 = distinct !{!553, !45}
!554 = distinct !{!554, !98}
!555 = distinct !{!555, !45}
!556 = distinct !{!556, !98}
!557 = distinct !{!557, !45}
!558 = distinct !{!558, !45}
!559 = distinct !{!559, !98}
!560 = distinct !{!560, !98}
!561 = distinct !{!561, !45}
!562 = distinct !{!562, !45}
!563 = distinct !{!563, !45}
!564 = distinct !{!564, !45}
!565 = distinct !{!565, !45}
!566 = distinct !{!566, !45}
!567 = distinct !{!567, !45}
!568 = distinct !{!568, !98}
!569 = distinct !{!569, !45}
!570 = distinct !{!570, !98}
!571 = distinct !{!571, !45}
!572 = distinct !{!572, !45}
!573 = distinct !{!573, !98}
!574 = distinct !{!574, !45}
!575 = distinct !{!575, !45}
!576 = distinct !{!576, !45}
!577 = distinct !{!577, !45}
!578 = distinct !{!578, !45}
!579 = distinct !{!579, !45}
!580 = distinct !{!580, !45}
!581 = distinct !{!581, !45}
!582 = distinct !{!582, !45}
!583 = distinct !{!583, !45}
!584 = distinct !{!584, !45}
!585 = distinct !{!585, !45}
!586 = distinct !{!586, !45}
!587 = distinct !{!587, !45}
!588 = distinct !{!588, !45}
!589 = distinct !{!589, !45}
!590 = distinct !{!590, !45}
!591 = distinct !{!591, !45}
!592 = distinct !{!592, !45}
!593 = distinct !{!593, !45}
!594 = distinct !{!594, !45}
!595 = distinct !{!595, !45}
!596 = distinct !{!596, !45}
!597 = distinct !{!597, !45, !95, !96}
!598 = distinct !{!598, !98}
!599 = distinct !{!599, !45, !95}
!600 = distinct !{!600, !45}
!601 = distinct !{!601, !45}
!602 = distinct !{!602, !45}
!603 = distinct !{!603, !45}
!604 = distinct !{!604, !45}
!605 = distinct !{!605, !45}
!606 = distinct !{!606, !45}
!607 = distinct !{!607, !98}
!608 = distinct !{!608, !45}
!609 = distinct !{!609, !98}
!610 = distinct !{!610, !45}
!611 = distinct !{!611, !45}
!612 = distinct !{!612, !98}
!613 = distinct !{!613, !45, !95, !96}
!614 = distinct !{!614, !45, !95}
!615 = distinct !{!615, !45}
!616 = distinct !{!616, !45}
!617 = distinct !{!617, !45}
!618 = distinct !{!618, !45, !95, !96}
!619 = distinct !{!619, !45, !95}
!620 = distinct !{!620, !45}
!621 = distinct !{!621, !45}
!622 = distinct !{!622, !45, !95, !96}
!623 = distinct !{!623, !45, !95}
!624 = distinct !{!624, !45}
!625 = distinct !{!625, !45}
!626 = distinct !{!626, !45, !95, !96}
!627 = distinct !{!627, !45, !95}
!628 = distinct !{!628, !45}
!629 = distinct !{!629, !45}
!630 = distinct !{!630, !45}
!631 = distinct !{!631, !45, !95, !96}
!632 = distinct !{!632, !98}
!633 = distinct !{!633, !45, !95}
!634 = !{!635}
!635 = distinct !{!635, !636}
!636 = distinct !{!636, !"LVerDomain"}
!637 = !{!638}
!638 = distinct !{!638, !636}
!639 = distinct !{!639, !45, !95, !96}
!640 = distinct !{!640, !98}
!641 = distinct !{!641, !45, !95}
!642 = distinct !{!642, !45, !95, !96}
!643 = distinct !{!643, !45, !96, !95}
!644 = distinct !{!644, !45}
!645 = distinct !{!645, !45, !95, !96}
!646 = distinct !{!646, !98}
!647 = distinct !{!647, !45, !95}
!648 = !{!649}
!649 = distinct !{!649, !650}
!650 = distinct !{!650, !"LVerDomain"}
!651 = !{!652}
!652 = distinct !{!652, !650}
!653 = distinct !{!653, !45, !95, !96}
!654 = distinct !{!654, !98}
!655 = distinct !{!655, !45, !95}
!656 = !{!657}
!657 = distinct !{!657, !658}
!658 = distinct !{!658, !"LVerDomain"}
!659 = !{!660}
!660 = distinct !{!660, !658}
!661 = distinct !{!661, !45, !95, !96}
!662 = distinct !{!662, !98}
!663 = distinct !{!663, !45, !95}
!664 = distinct !{!664, !45}
!665 = distinct !{!665, !45, !95, !96}
!666 = distinct !{!666, !45, !96, !95}
!667 = distinct !{!667, !45, !95, !96}
!668 = distinct !{!668, !98}
!669 = distinct !{!669, !45, !95}
!670 = !{!671}
!671 = distinct !{!671, !672}
!672 = distinct !{!672, !"LVerDomain"}
!673 = !{!674}
!674 = distinct !{!674, !672}
!675 = distinct !{!675, !45, !95, !96}
!676 = distinct !{!676, !98}
!677 = distinct !{!677, !45, !95}
!678 = distinct !{!678, !45, !95, !96}
!679 = distinct !{!679, !45, !96, !95}
!680 = distinct !{!680, !45, !95, !96}
!681 = distinct !{!681, !98}
!682 = distinct !{!682, !45, !95}
!683 = !{!684}
!684 = distinct !{!684, !685}
!685 = distinct !{!685, !"LVerDomain"}
!686 = !{!687}
!687 = distinct !{!687, !685}
!688 = distinct !{!688, !45, !95, !96}
!689 = distinct !{!689, !98}
!690 = distinct !{!690, !45, !95}
!691 = distinct !{!691, !45, !95, !96}
!692 = distinct !{!692, !45, !96, !95}
!693 = !{!694}
!694 = distinct !{!694, !695}
!695 = distinct !{!695, !"LVerDomain"}
!696 = !{!697}
!697 = distinct !{!697, !695}
!698 = distinct !{!698, !45, !95, !96}
!699 = distinct !{!699, !98}
!700 = distinct !{!700, !45, !95}
!701 = distinct !{!701, !45}
!702 = distinct !{!702, !45}
!703 = distinct !{!703, !45}
!704 = distinct !{!704, !45, !95, !96}
!705 = distinct !{!705, !98}
!706 = distinct !{!706, !45, !95}
!707 = !{!708}
!708 = distinct !{!708, !709}
!709 = distinct !{!709, !"LVerDomain"}
!710 = !{!711}
!711 = distinct !{!711, !709}
!712 = distinct !{!712, !45, !95, !96}
!713 = distinct !{!713, !98}
!714 = distinct !{!714, !45, !95}
!715 = distinct !{!715, !45}
!716 = distinct !{!716, !45, !95, !96}
!717 = distinct !{!717, !98}
!718 = distinct !{!718, !45, !95}
!719 = distinct !{!719, !45, !95, !96}
!720 = distinct !{!720, !45, !96, !95}
!721 = distinct !{!721, !45, !95, !96}
!722 = distinct !{!722, !45, !96, !95}
!723 = !{!724}
!724 = distinct !{!724, !725}
!725 = distinct !{!725, !"LVerDomain"}
!726 = !{!727}
!727 = distinct !{!727, !725}
!728 = distinct !{!728, !45, !95, !96}
!729 = distinct !{!729, !98}
!730 = distinct !{!730, !45, !95}
!731 = !{!732}
!732 = distinct !{!732, !733}
!733 = distinct !{!733, !"LVerDomain"}
!734 = !{!735}
!735 = distinct !{!735, !733}
!736 = distinct !{!736, !45, !95, !96}
!737 = distinct !{!737, !98}
!738 = distinct !{!738, !45, !95}
!739 = distinct !{!739, !45}
!740 = distinct !{!740, !45, !95, !96}
!741 = distinct !{!741, !45, !96, !95}
!742 = !{!743}
!743 = distinct !{!743, !744}
!744 = distinct !{!744, !"LVerDomain"}
!745 = !{!746}
!746 = distinct !{!746, !744}
!747 = distinct !{!747, !45, !95, !96}
!748 = distinct !{!748, !98}
!749 = distinct !{!749, !45, !95}
!750 = distinct !{!750, !45}
!751 = distinct !{!751, !45, !95, !96}
!752 = distinct !{!752, !45, !96, !95}
!753 = distinct !{!753, !45, !95, !96}
!754 = distinct !{!754, !98}
!755 = distinct !{!755, !45, !95}
!756 = distinct !{!756, !45, !95, !96}
!757 = distinct !{!757, !45, !96, !95}
!758 = !{!759}
!759 = distinct !{!759, !760}
!760 = distinct !{!760, !"LVerDomain"}
!761 = !{!762}
!762 = distinct !{!762, !760}
!763 = distinct !{!763, !45, !95, !96}
!764 = distinct !{!764, !98}
!765 = distinct !{!765, !45, !95}
!766 = !{!767}
!767 = distinct !{!767, !768}
!768 = distinct !{!768, !"LVerDomain"}
!769 = !{!770}
!770 = distinct !{!770, !768}
!771 = distinct !{!771, !45, !95, !96}
!772 = distinct !{!772, !98}
!773 = distinct !{!773, !45, !95}
!774 = distinct !{!774, !45, !95, !96}
!775 = distinct !{!775, !45, !96, !95}
!776 = !{!777}
!777 = distinct !{!777, !778}
!778 = distinct !{!778, !"LVerDomain"}
!779 = !{!780}
!780 = distinct !{!780, !778}
!781 = distinct !{!781, !45, !95, !96}
!782 = distinct !{!782, !98}
!783 = distinct !{!783, !45, !95}
!784 = !{!785}
!785 = distinct !{!785, !786}
!786 = distinct !{!786, !"LVerDomain"}
!787 = !{!788}
!788 = distinct !{!788, !786}
!789 = distinct !{!789, !45, !95, !96}
!790 = distinct !{!790, !98}
!791 = distinct !{!791, !45, !95}
!792 = distinct !{!792, !45}
!793 = distinct !{!793, !45, !95, !96}
!794 = distinct !{!794, !45, !96, !95}
!795 = distinct !{!795, !45, !95, !96}
!796 = distinct !{!796, !98}
!797 = distinct !{!797, !45, !95}
!798 = !{!799}
!799 = distinct !{!799, !800}
!800 = distinct !{!800, !"LVerDomain"}
!801 = !{!802}
!802 = distinct !{!802, !800}
!803 = distinct !{!803, !45, !95, !96}
!804 = distinct !{!804, !98}
!805 = distinct !{!805, !45, !95}
!806 = distinct !{!806, !45, !95, !96}
!807 = distinct !{!807, !45, !96, !95}
!808 = !{!809}
!809 = distinct !{!809, !810}
!810 = distinct !{!810, !"LVerDomain"}
!811 = !{!812}
!812 = distinct !{!812, !810}
!813 = distinct !{!813, !45, !95, !96}
!814 = distinct !{!814, !98}
!815 = distinct !{!815, !45, !95}
!816 = distinct !{!816, !45, !95, !96}
!817 = distinct !{!817, !98}
!818 = distinct !{!818, !45, !95}
!819 = distinct !{!819, !45, !95, !96}
!820 = distinct !{!820, !45, !96, !95}
!821 = distinct !{!821, !45, !95, !96}
!822 = distinct !{!822, !45, !96, !95}
!823 = !{!824}
!824 = distinct !{!824, !825}
!825 = distinct !{!825, !"LVerDomain"}
!826 = !{!827}
!827 = distinct !{!827, !825}
!828 = distinct !{!828, !45, !95, !96}
!829 = distinct !{!829, !98}
!830 = distinct !{!830, !45, !95}
!831 = !{!832}
!832 = distinct !{!832, !833}
!833 = distinct !{!833, !"LVerDomain"}
!834 = !{!835}
!835 = distinct !{!835, !833}
!836 = distinct !{!836, !45, !95, !96}
!837 = distinct !{!837, !98}
!838 = distinct !{!838, !45, !95}
!839 = distinct !{!839, !45, !95, !96}
!840 = distinct !{!840, !45, !96, !95}
!841 = !{!842}
!842 = distinct !{!842, !843}
!843 = distinct !{!843, !"LVerDomain"}
!844 = !{!845}
!845 = distinct !{!845, !843}
!846 = distinct !{!846, !45, !95, !96}
!847 = distinct !{!847, !98}
!848 = distinct !{!848, !45, !95}
!849 = distinct !{!849, !45}
!850 = distinct !{!850, !45, !95, !96}
!851 = distinct !{!851, !98}
!852 = distinct !{!852, !45, !95}
!853 = !{!854}
!854 = distinct !{!854, !855}
!855 = distinct !{!855, !"LVerDomain"}
!856 = !{!857}
!857 = distinct !{!857, !855}
!858 = distinct !{!858, !45, !95, !96}
!859 = distinct !{!859, !98}
!860 = distinct !{!860, !45, !95}
!861 = distinct !{!861, !45, !95, !96}
!862 = distinct !{!862, !45, !96, !95}
!863 = distinct !{!863, !45, !95, !96}
!864 = distinct !{!864, !98}
!865 = distinct !{!865, !45, !95}
!866 = distinct !{!866, !45, !95, !96}
!867 = distinct !{!867, !45, !96, !95}
!868 = distinct !{!868, !45, !95, !96}
!869 = distinct !{!869, !45, !96, !95}
!870 = !{!871}
!871 = distinct !{!871, !872}
!872 = distinct !{!872, !"LVerDomain"}
!873 = !{!874}
!874 = distinct !{!874, !872}
!875 = distinct !{!875, !45, !95, !96}
!876 = distinct !{!876, !98}
!877 = distinct !{!877, !45, !95}
!878 = distinct !{!878, !45}
!879 = !{!880}
!880 = distinct !{!880, !881}
!881 = distinct !{!881, !"LVerDomain"}
!882 = !{!883}
!883 = distinct !{!883, !881}
!884 = distinct !{!884, !45, !95, !96}
!885 = distinct !{!885, !98}
!886 = distinct !{!886, !45, !95}
!887 = !{!888}
!888 = distinct !{!888, !889}
!889 = distinct !{!889, !"LVerDomain"}
!890 = !{!891}
!891 = distinct !{!891, !889}
!892 = distinct !{!892, !45, !95, !96}
!893 = distinct !{!893, !98}
!894 = distinct !{!894, !45, !95}
!895 = !{!896}
!896 = distinct !{!896, !897}
!897 = distinct !{!897, !"LVerDomain"}
!898 = !{!899}
!899 = distinct !{!899, !897}
!900 = distinct !{!900, !45, !95, !96}
!901 = distinct !{!901, !98}
!902 = distinct !{!902, !45, !95}
!903 = !{!904}
!904 = distinct !{!904, !905}
!905 = distinct !{!905, !"LVerDomain"}
!906 = !{!907}
!907 = distinct !{!907, !905}
!908 = distinct !{!908, !45, !95, !96}
!909 = distinct !{!909, !98}
!910 = distinct !{!910, !45, !95}
!911 = !{!912}
!912 = distinct !{!912, !913}
!913 = distinct !{!913, !"LVerDomain"}
!914 = !{!915}
!915 = distinct !{!915, !913}
!916 = distinct !{!916, !45, !95, !96}
!917 = distinct !{!917, !98}
!918 = distinct !{!918, !45, !95}
!919 = distinct !{!919, !45}
!920 = distinct !{!920, !45, !95, !96}
!921 = distinct !{!921, !45, !96, !95}
!922 = distinct !{!922, !45, !95, !96}
!923 = distinct !{!923, !45, !96, !95}
!924 = distinct !{!924, !45, !95, !96}
!925 = distinct !{!925, !98}
!926 = distinct !{!926, !45, !95}
!927 = distinct !{!927, !45, !95, !96}
!928 = distinct !{!928, !45, !96, !95}
!929 = !{!930}
!930 = distinct !{!930, !931}
!931 = distinct !{!931, !"LVerDomain"}
!932 = !{!933}
!933 = distinct !{!933, !931}
!934 = distinct !{!934, !45, !95, !96}
!935 = distinct !{!935, !98}
!936 = distinct !{!936, !45, !95}
!937 = !{!938}
!938 = distinct !{!938, !939}
!939 = distinct !{!939, !"LVerDomain"}
!940 = !{!941}
!941 = distinct !{!941, !939}
!942 = distinct !{!942, !45, !95, !96}
!943 = distinct !{!943, !98}
!944 = distinct !{!944, !45, !95}
!945 = distinct !{!945, !45, !95, !96}
!946 = distinct !{!946, !45, !96, !95}
!947 = distinct !{!947, !45, !95, !96}
!948 = distinct !{!948, !98}
!949 = distinct !{!949, !45, !95}
!950 = distinct !{!950, !45, !95, !96}
!951 = distinct !{!951, !45, !96, !95}
!952 = !{!953}
!953 = distinct !{!953, !954}
!954 = distinct !{!954, !"LVerDomain"}
!955 = !{!956}
!956 = distinct !{!956, !954}
!957 = distinct !{!957, !45, !95, !96}
!958 = distinct !{!958, !98}
!959 = distinct !{!959, !45, !95}
!960 = !{!961}
!961 = distinct !{!961, !962}
!962 = distinct !{!962, !"LVerDomain"}
!963 = !{!964}
!964 = distinct !{!964, !962}
!965 = distinct !{!965, !45, !95, !96}
!966 = distinct !{!966, !98}
!967 = distinct !{!967, !45, !95}
!968 = distinct !{!968, !45, !95, !96}
!969 = distinct !{!969, !45, !96, !95}
!970 = !{!971}
!971 = distinct !{!971, !972}
!972 = distinct !{!972, !"LVerDomain"}
!973 = !{!974}
!974 = distinct !{!974, !972}
!975 = distinct !{!975, !45, !95, !96}
!976 = distinct !{!976, !98}
!977 = distinct !{!977, !45, !95}
!978 = distinct !{!978, !45, !95, !96}
!979 = distinct !{!979, !45, !96, !95}
!980 = !{!981}
!981 = distinct !{!981, !982}
!982 = distinct !{!982, !"LVerDomain"}
!983 = !{!984}
!984 = distinct !{!984, !982}
!985 = distinct !{!985, !45, !95, !96}
!986 = distinct !{!986, !98}
!987 = distinct !{!987, !45, !95}
!988 = distinct !{!988, !45}
!989 = distinct !{!989, !45}
!990 = !{!991}
!991 = distinct !{!991, !992}
!992 = distinct !{!992, !"LVerDomain"}
!993 = !{!994}
!994 = distinct !{!994, !992}
!995 = distinct !{!995, !45, !95, !96}
!996 = distinct !{!996, !98}
!997 = distinct !{!997, !45, !95}
!998 = distinct !{!998, !45}
!999 = distinct !{!999, !45, !95, !96}
!1000 = distinct !{!1000, !45, !96, !95}
!1001 = !{!1002}
!1002 = distinct !{!1002, !1003}
!1003 = distinct !{!1003, !"LVerDomain"}
!1004 = !{!1005}
!1005 = distinct !{!1005, !1003}
!1006 = distinct !{!1006, !45, !95, !96}
!1007 = distinct !{!1007, !98}
!1008 = distinct !{!1008, !45, !95}
!1009 = distinct !{!1009, !45}
!1010 = distinct !{!1010, !45, !95, !96}
!1011 = distinct !{!1011, !45, !96, !95}
!1012 = distinct !{!1012, !45, !95, !96}
!1013 = distinct !{!1013, !45, !96, !95}
!1014 = !{!1015}
!1015 = distinct !{!1015, !1016}
!1016 = distinct !{!1016, !"LVerDomain"}
!1017 = !{!1018}
!1018 = distinct !{!1018, !1016}
!1019 = distinct !{!1019, !45, !95, !96}
!1020 = distinct !{!1020, !98}
!1021 = distinct !{!1021, !45, !95}
!1022 = !{!1023}
!1023 = distinct !{!1023, !1024}
!1024 = distinct !{!1024, !"LVerDomain"}
!1025 = !{!1026}
!1026 = distinct !{!1026, !1024}
!1027 = distinct !{!1027, !45, !95, !96}
!1028 = distinct !{!1028, !98}
!1029 = distinct !{!1029, !45, !95}
!1030 = distinct !{!1030, !45, !95, !96}
!1031 = distinct !{!1031, !45, !96, !95}
!1032 = distinct !{!1032, !45, !95, !96}
!1033 = distinct !{!1033, !45, !95}
!1034 = distinct !{!1034, !45, !95, !96}
!1035 = distinct !{!1035, !45, !95}
!1036 = distinct !{!1036, !45, !95, !96}
!1037 = distinct !{!1037, !98}
!1038 = distinct !{!1038, !45, !95}
!1039 = !{!1040}
!1040 = distinct !{!1040, !1041}
!1041 = distinct !{!1041, !"LVerDomain"}
!1042 = !{!1043}
!1043 = distinct !{!1043, !1041}
!1044 = distinct !{!1044, !45, !95, !96}
!1045 = distinct !{!1045, !98}
!1046 = distinct !{!1046, !45, !95}
!1047 = distinct !{!1047, !45, !95, !96}
!1048 = distinct !{!1048, !45, !96, !95}
!1049 = !{!1050}
!1050 = distinct !{!1050, !1051}
!1051 = distinct !{!1051, !"LVerDomain"}
!1052 = !{!1053}
!1053 = distinct !{!1053, !1051}
!1054 = distinct !{!1054, !45, !95, !96}
!1055 = distinct !{!1055, !98}
!1056 = distinct !{!1056, !45, !95}
!1057 = distinct !{!1057, !45}
!1058 = distinct !{!1058, !45}
!1059 = distinct !{!1059, !45, !95, !96}
!1060 = distinct !{!1060, !45, !95}
!1061 = distinct !{!1061, !45, !95, !96}
!1062 = distinct !{!1062, !45, !95}
!1063 = distinct !{!1063, !45, !95, !96}
!1064 = distinct !{!1064, !98}
!1065 = distinct !{!1065, !45, !95}
!1066 = !{!1067}
!1067 = distinct !{!1067, !1068}
!1068 = distinct !{!1068, !"LVerDomain"}
!1069 = !{!1070}
!1070 = distinct !{!1070, !1068}
!1071 = distinct !{!1071, !45, !95, !96}
!1072 = distinct !{!1072, !98}
!1073 = distinct !{!1073, !45, !95}
!1074 = distinct !{!1074, !45, !95, !96}
!1075 = distinct !{!1075, !45, !96, !95}
!1076 = !{!1077}
!1077 = distinct !{!1077, !1078}
!1078 = distinct !{!1078, !"LVerDomain"}
!1079 = !{!1080}
!1080 = distinct !{!1080, !1078}
!1081 = distinct !{!1081, !45, !95, !96}
!1082 = distinct !{!1082, !98}
!1083 = distinct !{!1083, !45, !95}
!1084 = distinct !{!1084, !45}
!1085 = distinct !{!1085, !45}
!1086 = distinct !{!1086, !45}
!1087 = distinct !{!1087, !45, !95, !96}
!1088 = distinct !{!1088, !98}
!1089 = distinct !{!1089, !45, !95}
!1090 = distinct !{!1090, !45, !95, !96}
!1091 = distinct !{!1091, !98}
!1092 = distinct !{!1092, !45, !95}
!1093 = distinct !{!1093, !45}
!1094 = distinct !{!1094, !45, !95, !96}
!1095 = distinct !{!1095, !98}
!1096 = distinct !{!1096, !45, !95}
!1097 = distinct !{!1097, !45, !95, !96}
!1098 = distinct !{!1098, !98}
!1099 = distinct !{!1099, !45, !95}
!1100 = distinct !{!1100, !45, !95, !96}
!1101 = distinct !{!1101, !98}
!1102 = distinct !{!1102, !45, !95}
!1103 = distinct !{!1103, !45, !95, !96}
!1104 = distinct !{!1104, !98}
!1105 = distinct !{!1105, !45, !95}
!1106 = distinct !{!1106, !45, !95, !96}
!1107 = distinct !{!1107, !98}
!1108 = distinct !{!1108, !45, !95}
!1109 = distinct !{!1109, !45, !95, !96}
!1110 = distinct !{!1110, !98}
!1111 = distinct !{!1111, !45, !95}
!1112 = distinct !{!1112, !45}
!1113 = distinct !{!1113, !45, !95, !96}
!1114 = distinct !{!1114, !98}
!1115 = distinct !{!1115, !45, !95}
!1116 = distinct !{!1116, !45, !95, !96}
!1117 = distinct !{!1117, !98}
!1118 = distinct !{!1118, !45, !95}
!1119 = distinct !{!1119, !45}
!1120 = distinct !{!1120, !45}
!1121 = distinct !{!1121, !45}
!1122 = distinct !{!1122, !45}
!1123 = !{!1124, !7, i64 0}
!1124 = !{!"_EHashIterator", !7, i64 0, !18, i64 8, !7, i64 16}
!1125 = !{!1124, !7, i64 16}
!1126 = distinct !{!1126, !45}
!1127 = !{!1124, !18, i64 8}
!1128 = distinct !{!1128, !45}
!1129 = !{!1130, !18, i64 0}
!1130 = !{!"CCGKey", !18, i64 0, !18, i64 4, !18, i64 8, !18, i64 12, !18, i64 16, !18, i64 20, !18, i64 24, !18, i64 28, !18, i64 32, !18, i64 36}
!1131 = !{!1130, !18, i64 4}
!1132 = !{!1130, !18, i64 32}
!1133 = !{!1130, !18, i64 28}
!1134 = !{!1130, !18, i64 8}
!1135 = !{!1130, !18, i64 12}
!1136 = !{!1130, !18, i64 16}
!1137 = !{!1130, !18, i64 36}
