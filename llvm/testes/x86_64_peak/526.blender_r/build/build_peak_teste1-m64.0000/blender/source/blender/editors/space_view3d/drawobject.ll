; ModuleID = 'blender/source/blender/editors/space_view3d/drawobject.c'
source_filename = "blender/source/blender/editors/space_view3d/drawobject.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.Global = type { ptr, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.ListBase = type { ptr, ptr }
%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.Material = type { %struct.ID, ptr, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, ptr, ptr, i8, i8, i8, i8, i16, i16, float, float, [18 x ptr], ptr, ptr, ptr, ptr, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], ptr, %struct.ListBase }
%struct.ID = type { ptr, ptr, ptr, ptr, [66 x i8], i16, i32, i32, i32, ptr }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.View3D = type { ptr, ptr, %struct.ListBase, i32, float, [8 x i16], [4 x float], float, float, i8, [3 x i8], i32, i32, i16, i16, ptr, ptr, %struct.rctf, %struct.ListBase, ptr, ptr, [64 x i8], i32, i32, i16, i16, i16, i16, i16, i16, float, float, float, float, [3 x float], [3 x float], i16, i16, i16, i8, i8, i8, i8, [2 x i8], %struct.ListBase, %struct.ListBase, %struct.ListBase, i8, i8, i8, [5 x i8], ptr, ptr, ptr }
%struct.rctf = type { float, float, float, float }
%struct.Scene = type { %struct.ID, ptr, ptr, ptr, ptr, %struct.ListBase, ptr, ptr, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], ptr, ptr, ptr, ptr, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, ptr, ptr, ptr, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, ptr, %struct.PhysicsSettings, ptr, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, ptr }
%struct.RenderData = type { %struct.ImageFormatData, ptr, ptr, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, ptr, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, ptr }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, ptr }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, ptr, ptr }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.Base = type { ptr, ptr, i32, i32, i32, i16, i16, ptr }
%struct.Object = type { %struct.ID, ptr, ptr, i16, i16, i32, i32, i32, [64 x i8], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.bAnimVizSettings, ptr, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, ptr, ptr, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, ptr, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, i8, i8, i16, float, ptr, ptr, ptr, ptr, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, [2 x float], ptr, %struct.ListBase, ptr }
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.ViewCachedString = type { ptr, [3 x float], %union.anon, [2 x i16], i16, i16, i32, [0 x i8] }
%union.anon = type { i32 }
%struct.ARegion = type { ptr, ptr, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, ptr, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, ptr, i32, i32, ptr, ptr }
%struct.RegionView3D = type { [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [6 x [4 x float]], [6 x [4 x float]], ptr, ptr, ptr, ptr, ptr, ptr, ptr, [4 x [4 x float]], [4 x float], float, float, float, float, [3 x float], float, i8, i8, i8, i8, i8, [3 x i8], [2 x float], i16, i16, [4 x float], i16, i16, float, [3 x float], float, [3 x float] }
%struct.ParticleKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float }
%struct.ParticleBillboardData = type { ptr, [3 x float], [3 x float], [2 x float], [2 x float], float, float, float, [3 x i32], i32, i32, i32, i32, i16, i16, i16, i16 }
%struct.ParticleSimulationData = type { ptr, ptr, ptr, ptr, ptr, float }
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.ParticleSystem = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, ptr, ptr, ptr, %struct.ListBase, [64 x i8], [4 x [4 x float]], float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, [3 x [64 x i8]], [12 x i16], i16, i16, ptr, ptr, %struct.ListBase, ptr, ptr, i32, i32, ptr, ptr, ptr, float, float }
%struct.ParticleSettings = type { %struct.ID, ptr, ptr, ptr, ptr, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, [2 x float], [2 x float], float, float, float, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, [1 x float], i32, i32, i32, i32, i16, [3 x i16], float, float, float, float, float, float, float, [3 x float], float, float, float, float, float, float, float, [3 x float], float, float, float, float, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, [2 x float], float, float, i32, i32, [18 x ptr], ptr, %struct.ListBase, ptr, ptr, ptr, ptr, ptr, ptr, i16, [3 x i16] }
%struct.Curve = type { %struct.ID, ptr, ptr, %struct.ListBase, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [3 x float], [3 x float], [3 x float], i16, i16, i16, i16, float, float, i32, i16, i16, i32, float, float, float, i16, i16, i16, i16, i32, i32, [4 x i8], i16, i8, i8, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, ptr, ptr, [64 x i8], ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, %struct.CharInfo, float, float, float, i8, i8, [2 x i8] }
%struct.CharInfo = type { i16, i16, i8, i8, i16 }
%struct.MetaBall = type { %struct.ID, ptr, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, i8, i8, i16, i16, i16, [3 x float], [3 x float], [3 x float], float, float, float, ptr }
%struct.SoftBody = type { i32, i32, ptr, ptr, i8, i8, i16, float, [64 x i8], float, float, float, float, float, float, float, float, float, i16, [64 x i8], i16, float, float, [64 x i8], i32, i32, i32, i16, i16, ptr, i32, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, ptr, float, float, ptr, %struct.ListBase, ptr, [3 x float], [3 x [3 x float]], [3 x [3 x float]], i32 }
%struct.PartDeflect = type { i32, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr, ptr, float, i32, ptr }
%struct.CurveCache = type { %struct.ListBase, %struct.ListBase, %struct.ListBase, ptr }
%struct.PTCacheEdit = type { %struct.ListBase, ptr, ptr, %struct.PTCacheID, ptr, ptr, ptr, ptr, ptr, ptr, %struct.ListBase, i32, i32, i32, i32, [3 x i8], [3 x i8] }
%struct.PTCacheID = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.ParticleDrawData = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32 }
%struct.ParticleData = type { %struct.ParticleKey, %struct.ParticleKey, ptr, ptr, ptr, i32, float, float, float, i32, i32, [4 x float], float, float, float, i32, i32, i16, i16 }
%struct.BoidParticle = type { ptr, %struct.BoidData, [3 x float], [3 x float], float }
%struct.BoidData = type { float, [3 x float], i16, i16 }
%struct.ChildParticle = type { i32, i32, [4 x i32], [4 x float], [4 x float], float, float }
%struct.ParticleCacheKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float, i32 }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], ptr, float, float, i32, i32, i32, i32, ptr, ptr }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.PTCacheEditPoint = type { ptr, i32, i16 }
%struct.PTCacheEditKey = type { ptr, ptr, ptr, ptr, [3 x float], float, float, i16 }
%struct.SmokeModifierData = type { %struct.ModifierData, ptr, ptr, ptr, float, i32 }
%struct.ModifierData = type { ptr, ptr, i32, i32, i32, i32, [64 x i8], ptr, ptr }
%struct.SmokeDomainSettings = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x i32], [3 x float], [3 x float], [4 x [4 x float]], [4 x [4 x float]], [3 x i32], [3 x i32], [3 x i32], [3 x i32], i32, float, float, i32, i32, float, float, float, i32, i32, i32, i32, i16, i16, i32, float, [3 x i32], float, i32, i32, [2 x ptr], [2 x %struct.ListBase], ptr, i32, float, float, i32, [3 x float], i32, float, float, float, float, float, [3 x float] }
%struct.PointCache = type { ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, [64 x i8], [64 x i8], [64 x i8], [1024 x i8], ptr, %struct.ListBase, ptr, ptr }
%struct.bConstraint = type { ptr, ptr, ptr, i16, i16, i8, i8, [64 x i8], i16, float, float, ptr, float, float }
%struct.bRigidBodyJointConstraint = type { ptr, ptr, i32, float, float, float, float, float, float, [6 x float], [6 x float], float, i16, i16, i16, i16 }
%struct.RigidBodyOb = type { ptr, ptr, i16, i16, i32, i32, i16, i16, float, float, float, float, float, float, float, float, [4 x float], [3 x float], float }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, i32, float, i32, i32, ptr, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.CustomData = type { ptr, [41 x i32], i32, i32, i32, ptr, ptr }
%struct.HookModifierData = type { %struct.ModifierData, ptr, [64 x i8], [4 x [4 x float]], [3 x float], float, ptr, i32, float, [64 x i8] }
%struct.bFollowTrackConstraint = type { ptr, [64 x i8], i32, i32, [64 x i8], ptr, ptr }
%struct.bObjectSolverConstraint = type { ptr, i32, i32, [64 x i8], [4 x [4 x float]], ptr }
%struct.bConstraintTypeInfo = type { i16, i16, [32 x i8], [32 x i8], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.bConstraintTarget = type { ptr, ptr, ptr, [64 x i8], [4 x [4 x float]], i16, i16, i16, i16 }
%struct.RigidBodyCon = type { ptr, ptr, i16, i16, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr }
%struct.drawDMVertSel_userData = type { ptr, i32, [3 x ptr], i8 }
%struct.GPUVertexAttribs = type { [32 x %struct.anon], i32 }
%struct.anon = type { i32, i32, i32, i32, [64 x i8] }
%struct.Mesh = type { %struct.ID, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, ptr }
%struct.Paint = type { ptr, ptr, ptr, [4 x i8], i32, i32, i32 }
%struct.SculptSession = type { ptr, ptr, ptr, ptr, i32, i32, ptr, ptr, ptr, ptr, ptr, i32, i32, i8, ptr, ptr, i8, i8, ptr, ptr, ptr, i8, i32, ptr, i32, ptr, ptr, ptr, ptr, i8, [3 x float], [3 x float], i32 }
%struct.EditFont = type { ptr, ptr, ptr, ptr, ptr, [4 x [2 x float]], i32, i32, i32, i32 }
%struct.TextBox = type { float, float, float, float }
%struct.EditFontSelBox = type { float, float, float, float, float }
%struct.Main = type { ptr, ptr, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, ptr, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], ptr, ptr }
%struct.DispList = type { ptr, ptr, i16, i16, i32, i32, i16, i16, ptr, ptr, ptr, i32, i32, ptr }
%struct.Nurb = type { ptr, ptr, i16, i16, i16, i16, i32, i32, [2 x i16], i16, i16, i16, i16, i16, i16, ptr, ptr, ptr, ptr, i16, i16, i32 }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.ToolSettings = type { ptr, ptr, ptr, ptr, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, ptr, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, ptr, ptr, ptr, ptr, [3 x float], float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, ptr, float, i32 }
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.BevList = type { ptr, ptr, i32, i32, i32, i32, i32, ptr, ptr, [0 x %struct.BevPoint] }
%struct.BevPoint = type { [3 x float], float, float, float, float, float, float, [3 x float], [3 x float], [4 x float], i16, i16 }
%struct.MetaElem = type { ptr, ptr, ptr, i16, i16, i16, i16, float, float, float, [4 x float], float, float, float, float, float, float, float, ptr, ptr }
%struct.ImBuf = type { ptr, ptr, i32, i32, i8, i32, i32, i32, ptr, ptr, [2 x double], i32, i32, i32, i32, ptr, ptr, ptr, float, [20 x ptr], i32, i32, i32, i32, ptr, ptr, i32, [1024 x i8], [1024 x i8], ptr, i32, ptr, i32, i32, ptr, ptr, ptr, ptr, i32, %struct.rcti, %struct.DDSData }
%struct.DDSData = type { i32, i32, ptr, i32 }
%struct.Image = type { %struct.ID, [1024 x i8], ptr, ptr, ptr, ptr, [8 x ptr], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, ptr, ptr, ptr, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.RenderSlot = type { [64 x i8] }
%struct.Lamp = type { %struct.ID, ptr, i16, i16, i32, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i8, i8, i16, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, [2 x i8], ptr, [18 x ptr], i16, i16, [4 x i8], ptr, ptr }
%struct.Camera = type { %struct.ID, ptr, i8, i8, i16, float, float, float, float, float, float, float, float, float, float, float, ptr, ptr, i8, [7 x i8] }
%struct.World = type { %struct.ID, ptr, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, ptr, ptr, ptr, [18 x ptr], i16, i16, [2 x i16], ptr, ptr }
%struct.Lattice = type { %struct.ID, ptr, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i32, float, float, float, float, float, float, ptr, ptr, ptr, ptr, [64 x i8], ptr }
%struct.MDeformVert = type { ptr, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.BPoint = type { [4 x float], float, float, i16, i16, float, float }
%struct.drawMVertOffset_userData = type { ptr, i32 }
%struct.drawBMOffset_userData = type { ptr, i32 }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, ptr, ptr, i32, ptr, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, ptr, %struct.ListBase, ptr }
%struct.BMIter = type { %union.anon.0, ptr, ptr, i32, i8 }
%union.anon.0 = type { %struct.BMIter__face_of_vert }
%struct.BMIter__face_of_vert = type { ptr, ptr, ptr, ptr, ptr }
%struct.bglMats = type { [16 x double], [16 x double], [4 x i32] }
%struct.drawDMNormal_userData = type { ptr, i32, float, [3 x [3 x float]], [3 x [3 x float]] }
%struct.drawBMSelect_userData = type { ptr, i8 }
%struct.drawDMVerts_userData = type { ptr, ptr, i8, [4 x i8], [4 x i8], [4 x i8], [4 x i8], float, i32, [4 x [4 x float]] }
%struct.drawDMLayer_userData = type { ptr, i32 }
%struct.drawDMFacesSel_userData = type { [3 x ptr], ptr, ptr, ptr, ptr, ptr }
%struct.BMEditSelection = type { ptr, ptr, ptr, i8 }
%struct.BMEditMesh = type { ptr, ptr, i32, ptr, i32, ptr, ptr, i64, ptr, i32, ptr, i32, i16, i16, ptr, i32 }
%struct.BMEdge = type { %struct.BMHeader, ptr, ptr, ptr, ptr, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMHeader = type { ptr, i32, i8, i8, i8 }
%struct.BMDiskLink = type { ptr, ptr }
%struct.BMVert = type { %struct.BMHeader, ptr, [3 x float], [3 x float], ptr }
%struct.BMLoop = type { %struct.BMHeader, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.BMFace = type { %struct.BMHeader, ptr, ptr, i32, [3 x float], i16 }
%struct.drawDMEdgesSel_userData = type { ptr, ptr, ptr, ptr, ptr }
%struct.drawDMEdgesSelInterp_userData = type { ptr, ptr, ptr, ptr }
%struct.drawDMEdgesWeightInterp_userData = type { ptr, i32, i32, i32, i8, [3 x float] }
%struct.MVertSkin = type { [3 x float], i32 }
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MovieClip = type { %struct.ID, ptr, [1024 x i8], i32, i32, [2 x i32], float, float, ptr, ptr, ptr, %struct.MovieTracking, ptr, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, ptr, ptr, %struct.ListBase, i32, i32, ptr, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { ptr, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, ptr }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, ptr, float, float, float, i32, i32, float }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.MovieTrackingObject = type { ptr, ptr, [64 x i8], i32, float, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, i32, i32 }
%struct.MovieTrackingTrack = type { ptr, ptr, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, ptr, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, ptr, float, float }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MPoly = type { i32, i32, i16, i8, i8 }

@G = external local_unnamed_addr global %struct.Global, align 8
@g_v3d_string_level = internal unnamed_addr global i32 -1, align 4
@g_v3d_strings_arena = internal unnamed_addr global ptr null, align 8
@__func__.view3d_cached_text_draw_add = private unnamed_addr constant [28 x i8] c"view3d_cached_text_draw_add\00", align 1
@g_v3d_strings = internal unnamed_addr global [3 x ptr] zeroinitializer, align 16
@view3d_camera_border_hack_test = dso_local local_unnamed_addr global i8 0, align 1
@U = external local_unnamed_addr global %struct.UserDef, align 8
@CD_MASK_BAREMESH = external local_unnamed_addr constant i64, align 8
@bm_solidoffs = external local_unnamed_addr global i32, align 4
@bm_wireoffs = external local_unnamed_addr global i32, align 4
@bm_vertoffs = external local_unnamed_addr global i32, align 4
@view3d_camera_border_hack_col = dso_local global [3 x i8] zeroinitializer, align 1
@sinval = internal unnamed_addr constant [32 x float] [float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000, float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000, float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000, float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00], align 16
@cosval = internal unnamed_addr constant [32 x float] [float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000, float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000, float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000, float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00], align 16
@draw_empty_sphere.displist = internal unnamed_addr global i32 0, align 4
@colortab = internal unnamed_addr constant [3 x i32] [i32 0, i32 4206592, i32 16777096], align 4
@MEM_mallocN = external local_unnamed_addr global ptr, align 8
@.str = private unnamed_addr constant [16 x i8] c"matcap material\00", align 1
@defmaterial = external local_unnamed_addr global %struct.Material, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"%.6g\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"%.5g\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"%.4g\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"%.3g\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"%.2g\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"%.3f\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@__const.draw_mesh_fancy.spec = private unnamed_addr constant [4 x float] [float 0x3FDE147AE0000000, float 0x3FDE147AE0000000, float 0x3FDE147AE0000000, float 0x3FDE147AE0000000], align 16
@__const.drawSelectedVertices.sel_col = private unnamed_addr constant [3 x i8] c"\D8\B8\00", align 1
@__const.draw_bounding_volume.min = private unnamed_addr constant [3 x float] [float -1.000000e+00, float -1.000000e+00, float -1.000000e+00], align 4
@__const.draw_bounding_volume.max = private unnamed_addr constant [3 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00], align 4
@index3_nors_incr = internal unnamed_addr global i1 false, align 1
@draw_bundle_sphere.displist = internal unnamed_addr global i32 0, align 4
@MEM_freeN = external local_unnamed_addr global ptr, align 8
@MEM_callocN = external local_unnamed_addr global ptr, align 8
@.str.9 = private unnamed_addr constant [16 x i8] c"ParticlDrawData\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"particle_vdata\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"particle_cdata\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"particle_ndata\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"particle_vedata\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"%d:%.2f\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"%.2f\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"%i\00", align 1
@PSYS_FRAND_SEED_OFFSET = external local_unnamed_addr global [1024 x i32], align 16
@PSYS_FRAND_SEED_MULTIPLIER = external local_unnamed_addr global [1024 x i32], align 16
@PSYS_FRAND_BASE = external local_unnamed_addr global [1024 x float], align 16
@.str.17 = private unnamed_addr constant [25 x i8] c"particle path color data\00", align 1
@.str.18 = private unnamed_addr constant [25 x i8] c"particle edit point data\00", align 1
@.str.19 = private unnamed_addr constant [25 x i8] c"particle edit color data\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"px\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"py\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"pz\00", align 1
@str = private unnamed_addr constant [53 x i8] c"Billboards need an active camera or a target object!\00", align 1

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @check_object_draw_texture(ptr noundef %0, ptr nocapture noundef readonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.View3D, ptr %1, i64 0, i32 24
  %5 = load i16, ptr %4, align 8, !tbaa !5
  %6 = icmp eq i16 %5, 5
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = icmp eq i16 %5, 4
  %9 = icmp ugt i8 %2, 3
  %10 = and i1 %9, %8
  br i1 %10, label %29, label %13

11:                                               ; preds = %3
  %12 = icmp ugt i8 %2, 3
  br i1 %12, label %29, label %23

13:                                               ; preds = %7
  %14 = icmp eq i16 %5, 3
  br i1 %14, label %15, label %23

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.View3D, ptr %1, i64 0, i32 29
  %17 = load i16, ptr %16, align 2, !tbaa !15
  %18 = and i16 %17, 8
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = tail call zeroext i8 @BKE_scene_use_new_shading_nodes(ptr noundef %0) #13
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %11, %20, %15, %13
  %24 = getelementptr inbounds %struct.View3D, ptr %1, i64 0, i32 29
  %25 = load i16, ptr %24, align 2, !tbaa !15
  %26 = lshr i16 %25, 13
  %27 = trunc i16 %26 to i8
  %28 = and i8 %27, 1
  br label %29

29:                                               ; preds = %23, %20, %11, %7
  %30 = phi i8 [ 1, %7 ], [ 1, %11 ], [ 1, %20 ], [ %28, %23 ]
  ret i8 %30
}

declare zeroext i8 @BKE_scene_use_new_shading_nodes(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @draw_glsl_material(ptr noundef %0, ptr noundef readonly %1, ptr nocapture noundef readonly %2, i8 noundef zeroext %3) local_unnamed_addr #0 {
  %5 = tail call i32 @GPU_glsl_support() #13
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 15), align 8, !tbaa !16
  %9 = and i32 %8, 32
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %73

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 24
  %13 = load i16, ptr %12, align 8, !tbaa !5
  %14 = icmp eq i16 %13, 5
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = icmp eq i16 %13, 4
  %17 = icmp ugt i8 %3, 3
  %18 = and i1 %17, %16
  br i1 %18, label %36, label %21

19:                                               ; preds = %11
  %20 = icmp ugt i8 %3, 3
  br i1 %20, label %36, label %31

21:                                               ; preds = %15
  %22 = icmp eq i16 %13, 3
  br i1 %22, label %23, label %31

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 29
  %25 = load i16, ptr %24, align 2, !tbaa !15
  %26 = and i16 %25, 8
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = tail call zeroext i8 @BKE_scene_use_new_shading_nodes(ptr noundef %0) #13
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %19, %21, %23, %28
  %32 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 29
  %33 = load i16, ptr %32, align 2, !tbaa !15
  %34 = and i16 %33, 8192
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %73, label %36

36:                                               ; preds = %28, %19, %15, %31
  %37 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 6
  %38 = load ptr, ptr %37, align 8, !tbaa !18
  %39 = icmp eq ptr %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.Base, ptr %38, i64 0, i32 7
  %42 = load ptr, ptr %41, align 8, !tbaa !38
  br label %43

43:                                               ; preds = %36, %40
  %44 = phi ptr [ %42, %40 ], [ null, %36 ]
  %45 = icmp eq ptr %44, %1
  %46 = icmp ne ptr %1, null
  %47 = and i1 %46, %45
  br i1 %47, label %48, label %53

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 27
  %50 = load i32, ptr %49, align 8, !tbaa !40
  %51 = and i32 %50, 8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %73

53:                                               ; preds = %48, %43
  %54 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 29
  %55 = load i16, ptr %54, align 2, !tbaa !15
  %56 = and i16 %55, 8192
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %58, label %73

58:                                               ; preds = %53
  %59 = tail call zeroext i8 @BKE_scene_use_new_shading_nodes(ptr noundef nonnull %0) #13
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 37, i32 20
  %63 = load i16, ptr %62, align 2, !tbaa !43
  %64 = icmp eq i16 %63, 2
  %65 = load i16, ptr %12, align 8, !tbaa !5
  %66 = icmp eq i16 %65, 5
  %67 = select i1 %64, i1 %66, i1 false
  %68 = icmp eq i16 %65, 4
  %69 = select i1 %67, i1 true, i1 %68
  br i1 %69, label %70, label %73

70:                                               ; preds = %61
  %71 = icmp ugt i8 %3, 3
  %72 = zext i1 %71 to i8
  br label %73

73:                                               ; preds = %61, %70, %58, %53, %48, %31, %7, %4
  %74 = phi i8 [ 0, %4 ], [ 0, %7 ], [ 0, %31 ], [ 0, %48 ], [ 1, %53 ], [ 0, %58 ], [ %72, %70 ], [ 0, %61 ]
  ret i8 %74
}

declare i32 @GPU_glsl_support() local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @drawaxes(float noundef nofpclass(nan inf) %0, i8 noundef zeroext %1) local_unnamed_addr #0 {
  %3 = alloca [3 x float], align 8
  %4 = alloca [3 x float], align 8
  %5 = alloca [3 x float], align 4
  %6 = alloca [3 x float], align 8
  %7 = alloca [3 x float], align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #13
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(12) %5, i8 0, i64 12, i1 false)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #13
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %6, i8 0, i64 12, i1 false)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #13
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(12) %7, i8 0, i64 12, i1 false)
  switch i8 %1, label %14 [
    i8 2, label %8
    i8 4, label %30
    i8 5, label %52
    i8 3, label %54
    i8 6, label %66
    i8 7, label %75
  ]

8:                                                ; preds = %2
  %9 = fneg fast float %0
  tail call void @glBegin(i32 noundef 1) #13
  store float %0, ptr %5, align 4, !tbaa !44
  store float %9, ptr %6, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glVertex3fv(ptr noundef nonnull %6) #13
  store float 0.000000e+00, ptr %6, align 8, !tbaa !44
  store float 0.000000e+00, ptr %5, align 4, !tbaa !44
  call void @glEnd() #13
  call void @glBegin(i32 noundef 1) #13
  %10 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 1
  store float %0, ptr %10, align 4, !tbaa !44
  %11 = getelementptr inbounds [3 x float], ptr %6, i64 0, i64 1
  store float %9, ptr %11, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glVertex3fv(ptr noundef nonnull %6) #13
  store float 0.000000e+00, ptr %11, align 4, !tbaa !44
  store float 0.000000e+00, ptr %10, align 4, !tbaa !44
  call void @glEnd() #13
  call void @glBegin(i32 noundef 1) #13
  %12 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 2
  store float %0, ptr %12, align 4, !tbaa !44
  %13 = getelementptr inbounds [3 x float], ptr %6, i64 0, i64 2
  store float %9, ptr %13, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glVertex3fv(ptr noundef nonnull %6) #13
  store float 0.000000e+00, ptr %13, align 8, !tbaa !44
  store float 0.000000e+00, ptr %12, align 4, !tbaa !44
  call void @glEnd() #13
  br label %129

14:                                               ; preds = %2
  %15 = fmul fast float %0, 0x3FEB333340000000
  %16 = fmul fast float %0, 0xBFB47AE140000000
  %17 = fmul fast float %0, 0x3FB47AE140000000
  %18 = fmul fast float %0, 1.250000e-01
  %19 = getelementptr inbounds float, ptr %6, i64 1
  %20 = getelementptr inbounds float, ptr %3, i64 1
  %21 = getelementptr inbounds float, ptr %6, i64 2
  %22 = getelementptr inbounds float, ptr %3, i64 2
  %23 = fmul fast float %0, 0x3FC99999A0000000
  %24 = insertelement <2 x float> poison, float %0, i64 0
  %25 = shufflevector <2 x float> %24, <2 x float> poison, <2 x i32> zeroinitializer
  %26 = fmul fast <2 x float> %25, <float 0x3FB3333340000000, float 0x3FB99999A0000000>
  %27 = getelementptr inbounds float, ptr %4, i64 1
  %28 = getelementptr inbounds float, ptr %4, i64 2
  %29 = extractelement <2 x float> %26, i64 1
  br label %78

30:                                               ; preds = %2
  tail call void @glBegin(i32 noundef 1) #13
  %31 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 2
  store float %0, ptr %31, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glVertex3fv(ptr noundef nonnull %6) #13
  call void @glEnd() #13
  call void @glBegin(i32 noundef 4) #13
  %32 = fmul fast float %0, 0x3FA1EB8520000000
  store float %32, ptr %6, align 8, !tbaa !44
  %33 = getelementptr inbounds [3 x float], ptr %6, i64 0, i64 1
  %34 = getelementptr inbounds [3 x float], ptr %7, i64 0, i64 1
  store float %32, ptr %34, align 4, !tbaa !44
  %35 = fmul fast float %0, 7.500000e-01
  %36 = getelementptr inbounds [3 x float], ptr %7, i64 0, i64 2
  store float %35, ptr %36, align 4, !tbaa !44
  %37 = getelementptr inbounds [3 x float], ptr %6, i64 0, i64 2
  store float %35, ptr %37, align 8, !tbaa !44
  %38 = fneg fast float %32
  store float %38, ptr %33, align 4, !tbaa !44
  %39 = fmul fast float %0, 0x3FA1EB8520000000
  store float %39, ptr %7, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glVertex3fv(ptr noundef nonnull %6) #13
  call void @glVertex3fv(ptr noundef nonnull %7) #13
  %40 = load float, ptr %6, align 8, !tbaa !44
  %41 = fneg fast float %40
  store float %41, ptr %6, align 8, !tbaa !44
  %42 = load float, ptr %34, align 4, !tbaa !44
  %43 = fneg fast float %42
  store float %43, ptr %34, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glVertex3fv(ptr noundef nonnull %6) #13
  call void @glVertex3fv(ptr noundef nonnull %7) #13
  %44 = load float, ptr %33, align 4, !tbaa !44
  %45 = fneg fast float %44
  store float %45, ptr %33, align 4, !tbaa !44
  %46 = load float, ptr %7, align 4, !tbaa !44
  %47 = fneg fast float %46
  store float %47, ptr %7, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glVertex3fv(ptr noundef nonnull %6) #13
  call void @glVertex3fv(ptr noundef nonnull %7) #13
  %48 = load float, ptr %6, align 8, !tbaa !44
  %49 = fneg fast float %48
  store float %49, ptr %6, align 8, !tbaa !44
  %50 = load float, ptr %34, align 4, !tbaa !44
  %51 = fneg fast float %50
  store float %51, ptr %34, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glVertex3fv(ptr noundef nonnull %6) #13
  call void @glVertex3fv(ptr noundef nonnull %7) #13
  call void @glEnd() #13
  br label %129

52:                                               ; preds = %2
  tail call void @glBegin(i32 noundef 3) #13
  %53 = fneg fast float %0
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %53, float noundef nofpclass(nan inf) %53, float noundef nofpclass(nan inf) %53) #13
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %53, float noundef nofpclass(nan inf) %53, float noundef nofpclass(nan inf) %0) #13
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %53, float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %0) #13
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %53, float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %53) #13
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %53, float noundef nofpclass(nan inf) %53, float noundef nofpclass(nan inf) %53) #13
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %53, float noundef nofpclass(nan inf) %53) #13
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %53, float noundef nofpclass(nan inf) %0) #13
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %0) #13
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %53) #13
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %53, float noundef nofpclass(nan inf) %53) #13
  tail call void @glEnd() #13
  tail call void @glBegin(i32 noundef 3) #13
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %53, float noundef nofpclass(nan inf) %53, float noundef nofpclass(nan inf) %0) #13
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %53, float noundef nofpclass(nan inf) %0) #13
  tail call void @glEnd() #13
  tail call void @glBegin(i32 noundef 3) #13
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %53, float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %0) #13
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %0) #13
  tail call void @glEnd() #13
  tail call void @glBegin(i32 noundef 3) #13
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %53, float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %53) #13
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %53) #13
  tail call void @glEnd() #13
  br label %129

54:                                               ; preds = %2
  tail call void @glBegin(i32 noundef 2) #13
  br label %55

55:                                               ; preds = %55, %54
  %56 = phi i64 [ 0, %54 ], [ %63, %55 ]
  %57 = getelementptr inbounds [32 x float], ptr @cosval, i64 0, i64 %56
  %58 = load float, ptr %57, align 4, !tbaa !44
  %59 = getelementptr inbounds [32 x float], ptr @sinval, i64 0, i64 %56
  %60 = load float, ptr %59, align 4, !tbaa !44
  %61 = fmul fast float %58, %0
  %62 = fmul fast float %60, %0
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %61, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %62) #13
  %63 = add nuw nsw i64 %56, 1
  %64 = icmp eq i64 %63, 32
  br i1 %64, label %65, label %55, !llvm.loop !45

65:                                               ; preds = %55
  tail call void @glEnd() #13
  br label %129

66:                                               ; preds = %2
  %67 = load i32, ptr @draw_empty_sphere.displist, align 4, !tbaa !47
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %66
  %70 = tail call i32 @glGenLists(i32 noundef 1) #13
  store i32 %70, ptr @draw_empty_sphere.displist, align 4, !tbaa !47
  tail call void @glNewList(i32 noundef %70, i32 noundef 4864) #13
  tail call void @glPushMatrix() #13
  %71 = tail call ptr @gluNewQuadric() #13
  tail call void @gluQuadricDrawStyle(ptr noundef %71, i32 noundef 100013) #13
  tail call void @gluDisk(ptr noundef %71, double noundef nofpclass(nan inf) 0.000000e+00, double noundef nofpclass(nan inf) 1.000000e+00, i32 noundef 16, i32 noundef 1) #13
  tail call void @glRotatef(float noundef nofpclass(nan inf) 9.000000e+01, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 1.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00) #13
  tail call void @gluDisk(ptr noundef %71, double noundef nofpclass(nan inf) 0.000000e+00, double noundef nofpclass(nan inf) 1.000000e+00, i32 noundef 16, i32 noundef 1) #13
  tail call void @glRotatef(float noundef nofpclass(nan inf) 9.000000e+01, float noundef nofpclass(nan inf) 1.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00) #13
  tail call void @gluDisk(ptr noundef %71, double noundef nofpclass(nan inf) 0.000000e+00, double noundef nofpclass(nan inf) 1.000000e+00, i32 noundef 16, i32 noundef 1) #13
  tail call void @gluDeleteQuadric(ptr noundef %71) #13
  tail call void @glPopMatrix() #13
  tail call void @glEndList() #13
  br label %72

72:                                               ; preds = %66, %69
  tail call void @glScalef(float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %0) #13
  %73 = load i32, ptr @draw_empty_sphere.displist, align 4, !tbaa !47
  tail call void @glCallList(i32 noundef %73) #13
  %74 = fdiv fast float 1.000000e+00, %0
  tail call void @glScalef(float noundef nofpclass(nan inf) %74, float noundef nofpclass(nan inf) %74, float noundef nofpclass(nan inf) %74) #13
  br label %129

75:                                               ; preds = %2
  %76 = tail call ptr @gluNewQuadric() #13
  tail call void @gluQuadricDrawStyle(ptr noundef %76, i32 noundef 100013) #13
  tail call void @glPushMatrix() #13
  tail call void @glTranslatef(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00) #13
  %77 = fmul fast float %0, 2.000000e+00
  tail call void @glScalef(float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %77, float noundef nofpclass(nan inf) %0) #13
  tail call void @glRotatef(float noundef nofpclass(nan inf) -9.000000e+01, float noundef nofpclass(nan inf) 1.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00) #13
  tail call void @gluCylinder(ptr noundef %76, double noundef nofpclass(nan inf) 1.000000e+00, double noundef nofpclass(nan inf) 0.000000e+00, double noundef nofpclass(nan inf) 1.000000e+00, i32 noundef 8, i32 noundef 1) #13
  tail call void @glPopMatrix() #13
  tail call void @gluDeleteQuadric(ptr noundef %76) #13
  br label %129

78:                                               ; preds = %14, %126
  %79 = phi i64 [ 0, %14 ], [ %127, %126 ]
  %80 = icmp eq i64 %79, 0
  call void @glBegin(i32 noundef 1) #13
  %81 = getelementptr inbounds [3 x float], ptr %6, i64 0, i64 %79
  store float %0, ptr %81, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glVertex3fv(ptr noundef nonnull %6) #13
  %82 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 %79
  store float %15, ptr %82, align 4, !tbaa !44
  %83 = zext i1 %80 to i64
  %84 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 %83
  store float %16, ptr %84, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glVertex3fv(ptr noundef nonnull %6) #13
  store float %17, ptr %84, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glVertex3fv(ptr noundef nonnull %6) #13
  call void @glEnd() #13
  %85 = load float, ptr %81, align 4, !tbaa !44
  %86 = fadd fast float %85, %18
  store float %86, ptr %81, align 4, !tbaa !44
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %3) #13
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %3, i8 0, i64 12, i1 false)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #13
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %4, i8 0, i64 12, i1 false)
  %87 = trunc i64 %79 to i32
  switch i32 %87, label %126 [
    i32 0, label %88
    i32 1, label %100
    i32 2, label %112
  ]

88:                                               ; preds = %78
  call void @glBegin(i32 noundef 1) #13
  %89 = load float, ptr %6, align 8, !tbaa !44
  %90 = fsub fast float %89, %29
  %91 = load float, ptr %19, align 4, !tbaa !44
  %92 = load float, ptr %21, align 8, !tbaa !44
  store float %90, ptr %3, align 8, !tbaa !44
  %93 = fsub fast float %91, %29
  store float %93, ptr %20, align 4, !tbaa !44
  store float %92, ptr %22, align 8, !tbaa !44
  %94 = fadd fast float %89, %29
  store float %94, ptr %4, align 8, !tbaa !44
  %95 = fadd fast float %91, %29
  store float %95, ptr %27, align 4, !tbaa !44
  store float %92, ptr %28, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %3) #13
  call void @glVertex3fv(ptr noundef nonnull %4) #13
  %96 = load float, ptr %20, align 4, !tbaa !44
  %97 = fadd fast float %96, %23
  store float %97, ptr %20, align 4, !tbaa !44
  %98 = load float, ptr %27, align 4, !tbaa !44
  %99 = fsub fast float %98, %23
  store float %99, ptr %27, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %3) #13
  br label %124

100:                                              ; preds = %78
  call void @glBegin(i32 noundef 1) #13
  %101 = load float, ptr %21, align 8, !tbaa !44
  store float %101, ptr %22, align 8, !tbaa !44
  %102 = load <2 x float>, ptr %6, align 8, !tbaa !44
  %103 = fsub fast <2 x float> %102, %26
  %104 = extractelement <2 x float> %103, i64 0
  store float %104, ptr %3, align 8, !tbaa !44
  %105 = fsub fast <2 x float> %102, %26
  %106 = extractelement <2 x float> %105, i64 1
  store float %106, ptr %20, align 4, !tbaa !44
  %107 = fadd fast <2 x float> %102, %26
  store <2 x float> %107, ptr %4, align 8, !tbaa !44
  store float %101, ptr %28, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %3) #13
  call void @glVertex3fv(ptr noundef nonnull %4) #13
  %108 = load float, ptr %20, align 4, !tbaa !44
  %109 = fadd fast float %108, %23
  store float %109, ptr %20, align 4, !tbaa !44
  %110 = load <2 x float>, ptr %6, align 8, !tbaa !44
  store <2 x float> %110, ptr %4, align 8, !tbaa !44
  %111 = load float, ptr %21, align 8, !tbaa !44
  store float %111, ptr %28, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %3) #13
  br label %124

112:                                              ; preds = %78
  call void @glBegin(i32 noundef 3) #13
  %113 = load float, ptr %21, align 8, !tbaa !44
  %114 = load <2 x float>, ptr %6, align 8, !tbaa !44
  store <2 x float> %114, ptr %3, align 8, !tbaa !44
  %115 = fadd fast float %113, %29
  store float %115, ptr %22, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %3) #13
  %116 = load float, ptr %3, align 8, !tbaa !44
  %117 = fadd fast float %116, %23
  store float %117, ptr %3, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %3) #13
  %118 = load float, ptr %3, align 8, !tbaa !44
  %119 = fsub fast float %118, %23
  %120 = load float, ptr %22, align 8, !tbaa !44
  store float %119, ptr %3, align 8, !tbaa !44
  %121 = fsub fast float %120, %23
  store float %121, ptr %22, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %3) #13
  %122 = load float, ptr %3, align 8, !tbaa !44
  %123 = fadd fast float %122, %23
  store float %123, ptr %3, align 8, !tbaa !44
  br label %124

124:                                              ; preds = %112, %100, %88
  %125 = phi ptr [ %3, %112 ], [ %4, %100 ], [ %4, %88 ]
  call void @glVertex3fv(ptr noundef nonnull %125) #13
  call void @glEnd() #13
  br label %126

126:                                              ; preds = %78, %124
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %3) #13
  store float 0.000000e+00, ptr %81, align 4, !tbaa !44
  store float 0.000000e+00, ptr %82, align 4, !tbaa !44
  store float 0.000000e+00, ptr %84, align 4, !tbaa !44
  %127 = add nuw nsw i64 %79, 1
  %128 = icmp eq i64 %127, 3
  br i1 %128, label %129, label %78, !llvm.loop !48

129:                                              ; preds = %126, %8, %75, %72, %65, %52, %30
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #13
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #3

declare void @glBegin(i32 noundef) local_unnamed_addr #1

declare void @glVertex3fv(ptr noundef) local_unnamed_addr #1

declare void @glEnd() local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @drawcircball(i32 noundef %0, ptr nocapture noundef readonly %1, float noundef nofpclass(nan inf) %2, ptr nocapture noundef readonly %3) local_unnamed_addr #0 {
  %5 = alloca [32 x [3 x float]], align 16
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %5) #13
  %6 = getelementptr inbounds float, ptr %1, i64 2
  %7 = load float, ptr %6, align 4, !tbaa !44
  %8 = insertelement <8 x float> poison, float %7, i64 0
  %9 = shufflevector <8 x float> %8, <8 x float> poison, <8 x i32> zeroinitializer
  %10 = getelementptr inbounds [4 x float], ptr %3, i64 1, i64 2
  %11 = load float, ptr %10, align 4, !tbaa !44
  %12 = insertelement <8 x float> poison, float %11, i64 0
  %13 = shufflevector <8 x float> %12, <8 x float> poison, <8 x i32> zeroinitializer
  %14 = getelementptr inbounds float, ptr %3, i64 2
  %15 = load float, ptr %14, align 4, !tbaa !44
  %16 = insertelement <8 x float> poison, float %15, i64 0
  %17 = shufflevector <8 x float> %16, <8 x float> poison, <8 x i32> zeroinitializer
  %18 = getelementptr inbounds float, ptr %1, i64 1
  %19 = load float, ptr %18, align 4, !tbaa !44
  %20 = insertelement <8 x float> poison, float %19, i64 0
  %21 = shufflevector <8 x float> %20, <8 x float> poison, <8 x i32> zeroinitializer
  %22 = getelementptr inbounds [4 x float], ptr %3, i64 1, i64 1
  %23 = load float, ptr %22, align 4, !tbaa !44
  %24 = insertelement <8 x float> poison, float %23, i64 0
  %25 = shufflevector <8 x float> %24, <8 x float> poison, <8 x i32> zeroinitializer
  %26 = getelementptr inbounds float, ptr %3, i64 1
  %27 = load float, ptr %26, align 4, !tbaa !44
  %28 = insertelement <8 x float> poison, float %27, i64 0
  %29 = shufflevector <8 x float> %28, <8 x float> poison, <8 x i32> zeroinitializer
  %30 = load float, ptr %1, align 4, !tbaa !44
  %31 = insertelement <8 x float> poison, float %30, i64 0
  %32 = shufflevector <8 x float> %31, <8 x float> poison, <8 x i32> zeroinitializer
  %33 = insertelement <8 x float> poison, float %2, i64 0
  %34 = shufflevector <8 x float> %33, <8 x float> poison, <8 x i32> zeroinitializer
  %35 = getelementptr inbounds [4 x float], ptr %3, i64 1
  %36 = load float, ptr %35, align 4, !tbaa !44
  %37 = insertelement <8 x float> poison, float %36, i64 0
  %38 = shufflevector <8 x float> %37, <8 x float> poison, <8 x i32> zeroinitializer
  %39 = load float, ptr %3, align 4, !tbaa !44
  %40 = insertelement <8 x float> poison, float %39, i64 0
  %41 = shufflevector <8 x float> %40, <8 x float> poison, <8 x i32> zeroinitializer
  %42 = fmul fast <8 x float> %41, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %43 = fmul fast <8 x float> %38, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %44 = fadd fast <8 x float> %43, %42
  %45 = fmul fast <8 x float> %44, %34
  %46 = fadd fast <8 x float> %45, %32
  %47 = fmul fast <8 x float> %29, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %48 = fmul fast <8 x float> %25, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %49 = fadd fast <8 x float> %48, %47
  %50 = fmul fast <8 x float> %49, %34
  %51 = fadd fast <8 x float> %50, %21
  %52 = fmul fast <8 x float> %17, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %53 = fmul fast <8 x float> %13, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %54 = fadd fast <8 x float> %53, %52
  %55 = fmul fast <8 x float> %54, %34
  %56 = fadd fast <8 x float> %9, %55
  %57 = shufflevector <8 x float> %46, <8 x float> %51, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %58 = shufflevector <8 x float> %56, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %59 = shufflevector <16 x float> %57, <16 x float> %58, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %59, ptr %5, align 16, !tbaa !44
  %60 = getelementptr inbounds i8, ptr %5, i64 96
  %61 = fmul fast <8 x float> %41, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %62 = fmul fast <8 x float> %38, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %63 = fadd fast <8 x float> %62, %61
  %64 = fmul fast <8 x float> %63, %34
  %65 = fadd fast <8 x float> %64, %32
  %66 = fmul fast <8 x float> %29, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %67 = fmul fast <8 x float> %25, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %68 = fadd fast <8 x float> %67, %66
  %69 = fmul fast <8 x float> %68, %34
  %70 = fadd fast <8 x float> %69, %21
  %71 = fmul fast <8 x float> %17, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %72 = fmul fast <8 x float> %13, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %73 = fadd fast <8 x float> %72, %71
  %74 = fmul fast <8 x float> %73, %34
  %75 = fadd fast <8 x float> %9, %74
  %76 = shufflevector <8 x float> %65, <8 x float> %70, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %77 = shufflevector <8 x float> %75, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %78 = shufflevector <16 x float> %76, <16 x float> %77, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %78, ptr %60, align 16, !tbaa !44
  %79 = getelementptr inbounds i8, ptr %5, i64 192
  %80 = fmul fast <8 x float> %41, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %81 = fmul fast <8 x float> %38, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %82 = fadd fast <8 x float> %81, %80
  %83 = fmul fast <8 x float> %82, %34
  %84 = fadd fast <8 x float> %83, %32
  %85 = fmul fast <8 x float> %29, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %86 = fmul fast <8 x float> %25, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %87 = fadd fast <8 x float> %86, %85
  %88 = fmul fast <8 x float> %87, %34
  %89 = fadd fast <8 x float> %88, %21
  %90 = fmul fast <8 x float> %17, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %91 = fmul fast <8 x float> %13, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %92 = fadd fast <8 x float> %91, %90
  %93 = fmul fast <8 x float> %92, %34
  %94 = fadd fast <8 x float> %9, %93
  %95 = shufflevector <8 x float> %84, <8 x float> %89, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %96 = shufflevector <8 x float> %94, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %97 = shufflevector <16 x float> %95, <16 x float> %96, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %97, ptr %79, align 16, !tbaa !44
  %98 = getelementptr inbounds i8, ptr %5, i64 288
  %99 = fmul fast <8 x float> %41, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %100 = fmul fast <8 x float> %38, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %101 = fadd fast <8 x float> %100, %99
  %102 = fmul fast <8 x float> %101, %34
  %103 = fadd fast <8 x float> %102, %32
  %104 = fmul fast <8 x float> %29, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %105 = fmul fast <8 x float> %25, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %106 = fadd fast <8 x float> %105, %104
  %107 = fmul fast <8 x float> %106, %34
  %108 = fadd fast <8 x float> %107, %21
  %109 = fmul fast <8 x float> %17, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %110 = fmul fast <8 x float> %13, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %111 = fadd fast <8 x float> %110, %109
  %112 = fmul fast <8 x float> %111, %34
  %113 = fadd fast <8 x float> %9, %112
  %114 = shufflevector <8 x float> %103, <8 x float> %108, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %115 = shufflevector <8 x float> %113, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %116 = shufflevector <16 x float> %114, <16 x float> %115, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %116, ptr %98, align 16, !tbaa !44
  tail call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %5) #13
  call void @glDrawArrays(i32 noundef %0, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %5) #13
  ret void
}

declare void @glEnableClientState(i32 noundef) local_unnamed_addr #1

declare void @glVertexPointer(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

declare void @glDrawArrays(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

declare void @glDisableClientState(i32 noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, argmem: none, inaccessiblemem: none) uwtable
define dso_local void @view3d_cached_text_draw_begin() local_unnamed_addr #4 {
  %1 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %2 = add nsw i32 %1, 1
  store i32 %2, ptr @g_v3d_string_level, align 4, !tbaa !47
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @view3d_cached_text_draw_add(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, i64 noundef %2, i16 noundef signext %3, i16 noundef signext %4, ptr nocapture noundef readonly %5) local_unnamed_addr #0 {
  %7 = load ptr, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %6
  %10 = tail call ptr @BLI_memarena_new(i64 noundef 16376, ptr noundef nonnull @__func__.view3d_cached_text_draw_add) #13
  store ptr %10, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  br label %11

11:                                               ; preds = %9, %6
  %12 = phi ptr [ %10, %9 ], [ %7, %6 ]
  %13 = shl i64 %2, 32
  %14 = add i64 %13, 4294967296
  %15 = ashr exact i64 %14, 32
  %16 = add nsw i64 %15, 40
  %17 = tail call ptr @BLI_memarena_alloc(ptr noundef %12, i64 noundef %16) #13
  %18 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [3 x ptr], ptr @g_v3d_strings, i64 0, i64 %19
  %21 = load ptr, ptr %20, align 8, !tbaa !49
  store ptr %21, ptr %17, align 8, !tbaa !49
  store ptr %17, ptr %20, align 8, !tbaa !49
  %22 = getelementptr inbounds %struct.ViewCachedString, ptr %17, i64 0, i32 1
  %23 = load float, ptr %0, align 4, !tbaa !44
  store float %23, ptr %22, align 4, !tbaa !44
  %24 = getelementptr inbounds float, ptr %0, i64 1
  %25 = load float, ptr %24, align 4, !tbaa !44
  %26 = getelementptr inbounds %struct.ViewCachedString, ptr %17, i64 0, i32 1, i64 1
  store float %25, ptr %26, align 4, !tbaa !44
  %27 = getelementptr inbounds float, ptr %0, i64 2
  %28 = load float, ptr %27, align 4, !tbaa !44
  %29 = getelementptr inbounds %struct.ViewCachedString, ptr %17, i64 0, i32 1, i64 2
  store float %28, ptr %29, align 4, !tbaa !44
  %30 = getelementptr inbounds %struct.ViewCachedString, ptr %17, i64 0, i32 2
  %31 = load i8, ptr %5, align 1, !tbaa !50
  store i8 %31, ptr %30, align 1, !tbaa !50
  %32 = getelementptr inbounds i8, ptr %5, i64 1
  %33 = load i8, ptr %32, align 1, !tbaa !50
  %34 = getelementptr inbounds i8, ptr %17, i64 21
  store i8 %33, ptr %34, align 1, !tbaa !50
  %35 = getelementptr inbounds i8, ptr %5, i64 2
  %36 = load i8, ptr %35, align 1, !tbaa !50
  %37 = getelementptr inbounds i8, ptr %17, i64 22
  store i8 %36, ptr %37, align 1, !tbaa !50
  %38 = getelementptr inbounds i8, ptr %5, i64 3
  %39 = load i8, ptr %38, align 1, !tbaa !50
  %40 = getelementptr inbounds i8, ptr %17, i64 23
  store i8 %39, ptr %40, align 1, !tbaa !50
  %41 = getelementptr inbounds %struct.ViewCachedString, ptr %17, i64 0, i32 4
  store i16 %3, ptr %41, align 4, !tbaa !51
  %42 = getelementptr inbounds %struct.ViewCachedString, ptr %17, i64 0, i32 5
  store i16 %4, ptr %42, align 2, !tbaa !51
  %43 = trunc i64 %2 to i32
  %44 = getelementptr inbounds %struct.ViewCachedString, ptr %17, i64 0, i32 6
  store i32 %43, ptr %44, align 8, !tbaa !47
  %45 = getelementptr inbounds %struct.ViewCachedString, ptr %17, i64 0, i32 7
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 4 %45, ptr align 1 %1, i64 %15, i1 false)
  ret void
}

declare ptr @BLI_memarena_new(i64 noundef, ptr noundef) local_unnamed_addr #1

declare ptr @BLI_memarena_alloc(ptr noundef, i64 noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @view3d_cached_text_draw_end(ptr nocapture noundef readonly %0, ptr noundef %1, i8 noundef zeroext %2, ptr noundef %3) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.ARegion, ptr %1, i64 0, i32 30
  %6 = load ptr, ptr %5, align 8, !tbaa !52
  %7 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds [3 x ptr], ptr @g_v3d_strings, i64 0, i64 %8
  %10 = load ptr, ptr %9, align 8, !tbaa !49
  %11 = icmp eq ptr %10, null
  br i1 %11, label %142, label %12

12:                                               ; preds = %4
  %13 = icmp eq ptr %3, null
  %14 = getelementptr inbounds %struct.RegionView3D, ptr %6, i64 0, i32 3
  %15 = getelementptr inbounds %struct.RegionView3D, ptr %6, i64 0, i32 6
  br i1 %13, label %16, label %38

16:                                               ; preds = %12, %34
  %17 = phi ptr [ %36, %34 ], [ %10, %12 ]
  %18 = phi i32 [ %35, %34 ], [ 0, %12 ]
  %19 = getelementptr inbounds %struct.ViewCachedString, ptr %17, i64 0, i32 5
  %20 = load i16, ptr %19, align 2, !tbaa !51
  %21 = and i16 %20, 8
  %22 = icmp eq i16 %21, 0
  %23 = select i1 %22, ptr %15, ptr %14
  %24 = trunc i16 %20 to i8
  %25 = lshr i8 %24, 4
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.ViewCachedString, ptr %17, i64 0, i32 1
  %28 = getelementptr inbounds %struct.ViewCachedString, ptr %17, i64 0, i32 3
  %29 = tail call i32 @ED_view3d_project_short_ex(ptr noundef %1, ptr noundef nonnull %23, i8 noundef zeroext %26, ptr noundef nonnull %27, ptr noundef nonnull %28, i32 noundef 7) #13
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %16
  store i16 12000, ptr %28, align 8, !tbaa !51
  br label %34

32:                                               ; preds = %16
  %33 = add nsw i32 %18, 1
  br label %34

34:                                               ; preds = %32, %31
  %35 = phi i32 [ %33, %32 ], [ %18, %31 ]
  %36 = load ptr, ptr %17, align 8, !tbaa !49
  %37 = icmp eq ptr %36, null
  br i1 %37, label %67, label %16, !llvm.loop !55

38:                                               ; preds = %12, %63
  %39 = phi ptr [ %65, %63 ], [ %10, %12 ]
  %40 = phi i32 [ %64, %63 ], [ 0, %12 ]
  %41 = getelementptr inbounds %struct.ViewCachedString, ptr %39, i64 0, i32 5
  %42 = load i16, ptr %41, align 2, !tbaa !51
  %43 = and i16 %42, 2
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %38
  %46 = getelementptr inbounds %struct.ViewCachedString, ptr %39, i64 0, i32 1
  tail call void @mul_m4_v3(ptr noundef nonnull %3, ptr noundef nonnull %46) #13
  %47 = load i16, ptr %41, align 2, !tbaa !51
  br label %48

48:                                               ; preds = %45, %38
  %49 = phi i16 [ %47, %45 ], [ %42, %38 ]
  %50 = and i16 %49, 8
  %51 = icmp eq i16 %50, 0
  %52 = select i1 %51, ptr %15, ptr %14
  %53 = trunc i16 %49 to i8
  %54 = lshr i8 %53, 4
  %55 = and i8 %54, 1
  %56 = getelementptr inbounds %struct.ViewCachedString, ptr %39, i64 0, i32 1
  %57 = getelementptr inbounds %struct.ViewCachedString, ptr %39, i64 0, i32 3
  %58 = tail call i32 @ED_view3d_project_short_ex(ptr noundef %1, ptr noundef nonnull %52, i8 noundef zeroext %55, ptr noundef nonnull %56, ptr noundef nonnull %57, i32 noundef 7) #13
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %48
  %61 = add nsw i32 %40, 1
  br label %63

62:                                               ; preds = %48
  store i16 12000, ptr %57, align 8, !tbaa !51
  br label %63

63:                                               ; preds = %60, %62
  %64 = phi i32 [ %61, %60 ], [ %40, %62 ]
  %65 = load ptr, ptr %39, align 8, !tbaa !49
  %66 = icmp eq ptr %65, null
  br i1 %66, label %67, label %38, !llvm.loop !55

67:                                               ; preds = %63, %34
  %68 = phi i32 [ %35, %34 ], [ %64, %63 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %142, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %struct.RegionView3D, ptr %6, i64 0, i32 32
  %72 = load i16, ptr %71, align 2, !tbaa !56
  %73 = and i16 %72, 4
  %74 = icmp eq i16 %73, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %70
  tail call void @ED_view3d_clipping_disable() #13
  br label %76

76:                                               ; preds = %75, %70
  tail call void @glMatrixMode(i32 noundef 5889) #13
  tail call void @glPushMatrix() #13
  tail call void @glMatrixMode(i32 noundef 5888) #13
  tail call void @glPushMatrix() #13
  tail call void @wmOrtho2_region_ui(ptr noundef %1) #13
  tail call void @glLoadIdentity() #13
  %77 = icmp eq i8 %2, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds %struct.View3D, ptr %0, i64 0, i32 47
  %80 = load i8, ptr %79, align 8, !tbaa !58
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %78
  tail call void @glDisable(i32 noundef 2929) #13
  br label %84

83:                                               ; preds = %76
  tail call void @glDepthMask(i8 noundef zeroext 0) #13
  br label %84

84:                                               ; preds = %78, %82, %83
  %85 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [3 x ptr], ptr @g_v3d_strings, i64 0, i64 %86
  %88 = load ptr, ptr %87, align 8, !tbaa !49
  %89 = icmp eq ptr %88, null
  br i1 %89, label %130, label %90

90:                                               ; preds = %84
  %91 = select fast i1 %77, float 2.000000e+00, float 0.000000e+00
  br label %92

92:                                               ; preds = %90, %126
  %93 = phi ptr [ %88, %90 ], [ %128, %126 ]
  %94 = phi i32 [ 0, %90 ], [ %127, %126 ]
  %95 = getelementptr inbounds %struct.ViewCachedString, ptr %93, i64 0, i32 3
  %96 = load i16, ptr %95, align 8, !tbaa !51
  %97 = icmp eq i16 %96, 12000
  br i1 %97, label %126, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %struct.ViewCachedString, ptr %93, i64 0, i32 2
  %100 = load i32, ptr %99, align 4, !tbaa !50
  %101 = icmp eq i32 %94, %100
  br i1 %101, label %105, label %102

102:                                              ; preds = %98
  tail call void @glColor3ubv(ptr noundef nonnull %99) #13
  %103 = load i32, ptr %99, align 4, !tbaa !50
  %104 = load i16, ptr %95, align 8, !tbaa !51
  br label %105

105:                                              ; preds = %102, %98
  %106 = phi i16 [ %104, %102 ], [ %96, %98 ]
  %107 = phi i32 [ %103, %102 ], [ %94, %98 ]
  %108 = getelementptr inbounds %struct.ViewCachedString, ptr %93, i64 0, i32 5
  %109 = load i16, ptr %108, align 2, !tbaa !51
  %110 = and i16 %109, 4
  %111 = icmp eq i16 %110, 0
  %112 = select i1 %111, ptr @BLF_draw_default, ptr @BLF_draw_default_ascii
  %113 = sext i16 %106 to i32
  %114 = getelementptr inbounds %struct.ViewCachedString, ptr %93, i64 0, i32 4
  %115 = load i16, ptr %114, align 4, !tbaa !51
  %116 = sext i16 %115 to i32
  %117 = add nsw i32 %116, %113
  %118 = sitofp i32 %117 to float
  %119 = getelementptr inbounds %struct.ViewCachedString, ptr %93, i64 0, i32 3, i64 1
  %120 = load i16, ptr %119, align 2, !tbaa !51
  %121 = sitofp i16 %120 to float
  %122 = getelementptr inbounds %struct.ViewCachedString, ptr %93, i64 0, i32 7
  %123 = getelementptr inbounds %struct.ViewCachedString, ptr %93, i64 0, i32 6
  %124 = load i32, ptr %123, align 8, !tbaa !47
  %125 = sext i32 %124 to i64
  tail call void %112(float noundef nofpclass(nan inf) %118, float noundef nofpclass(nan inf) %121, float noundef nofpclass(nan inf) %91, ptr noundef nonnull %122, i64 noundef %125) #13, !callees !59
  br label %126

126:                                              ; preds = %92, %105
  %127 = phi i32 [ %107, %105 ], [ %94, %92 ]
  %128 = load ptr, ptr %93, align 8, !tbaa !49
  %129 = icmp eq ptr %128, null
  br i1 %129, label %130, label %92, !llvm.loop !60

130:                                              ; preds = %126, %84
  br i1 %77, label %136, label %131

131:                                              ; preds = %130
  %132 = getelementptr inbounds %struct.View3D, ptr %0, i64 0, i32 47
  %133 = load i8, ptr %132, align 8, !tbaa !58
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %131
  tail call void @glEnable(i32 noundef 2929) #13
  br label %137

136:                                              ; preds = %130
  tail call void @glDepthMask(i8 noundef zeroext 1) #13
  br label %137

137:                                              ; preds = %131, %135, %136
  tail call void @glMatrixMode(i32 noundef 5889) #13
  tail call void @glPopMatrix() #13
  tail call void @glMatrixMode(i32 noundef 5888) #13
  tail call void @glPopMatrix() #13
  %138 = load i16, ptr %71, align 2, !tbaa !56
  %139 = and i16 %138, 4
  %140 = icmp eq i16 %139, 0
  br i1 %140, label %142, label %141

141:                                              ; preds = %137
  tail call void @ED_view3d_clipping_enable() #13
  br label %142

142:                                              ; preds = %4, %137, %141, %67
  %143 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds [3 x ptr], ptr @g_v3d_strings, i64 0, i64 %144
  store ptr null, ptr %145, align 8, !tbaa !49
  %146 = icmp eq i32 %143, 0
  %147 = load ptr, ptr @g_v3d_strings_arena, align 8
  %148 = icmp ne ptr %147, null
  %149 = select i1 %146, i1 %148, i1 false
  br i1 %149, label %150, label %152

150:                                              ; preds = %142
  tail call void @BLI_memarena_free(ptr noundef nonnull %147) #13
  store ptr null, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  %151 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  br label %152

152:                                              ; preds = %150, %142
  %153 = phi i32 [ %151, %150 ], [ %143, %142 ]
  %154 = add nsw i32 %153, -1
  store i32 %154, ptr @g_v3d_string_level, align 4, !tbaa !47
  ret void
}

declare void @mul_m4_v3(ptr noundef, ptr noundef) local_unnamed_addr #1

declare i32 @ED_view3d_project_short_ex(ptr noundef, ptr noundef, i8 noundef zeroext, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

declare void @ED_view3d_clipping_disable() local_unnamed_addr #1

declare void @glMatrixMode(i32 noundef) local_unnamed_addr #1

declare void @glPushMatrix() local_unnamed_addr #1

declare void @wmOrtho2_region_ui(ptr noundef) local_unnamed_addr #1

declare void @glLoadIdentity() local_unnamed_addr #1

declare void @glDisable(i32 noundef) local_unnamed_addr #1

declare void @glDepthMask(i8 noundef zeroext) local_unnamed_addr #1

declare void @glColor3ubv(ptr noundef) local_unnamed_addr #1

declare void @BLF_draw_default_ascii(float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), ptr noundef, i64 noundef) local_unnamed_addr #1

declare void @BLF_draw_default(float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), ptr noundef, i64 noundef) local_unnamed_addr #1

declare void @glEnable(i32 noundef) local_unnamed_addr #1

declare void @glPopMatrix() local_unnamed_addr #1

declare void @ED_view3d_clipping_enable() local_unnamed_addr #1

declare void @BLI_memarena_free(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @draw_object(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i16 noundef signext %4) local_unnamed_addr #0 {
  %6 = alloca [3 x float], align 4
  %7 = alloca [32 x [3 x float]], align 16
  %8 = alloca [8 x [3 x float]], align 16
  %9 = alloca [3 x float], align 8
  %10 = alloca [3 x float], align 8
  %11 = alloca [3 x float], align 4
  %12 = alloca [3 x float], align 8
  %13 = alloca [8 x [3 x float]], align 16
  %14 = alloca [4 x [4 x float]], align 16
  %15 = alloca [3 x float], align 8
  %16 = alloca [3 x float], align 8
  %17 = alloca [3 x float], align 4
  %18 = alloca [3 x float], align 4
  %19 = alloca [32 x [3 x float]], align 16
  %20 = alloca %struct.ParticleKey, align 8
  %21 = alloca %struct.ParticleBillboardData, align 8
  %22 = alloca %struct.ParticleSimulationData, align 8
  %23 = alloca [4 x [4 x float]], align 16
  %24 = alloca float, align 4
  %25 = alloca float, align 4
  %26 = alloca [3 x float], align 8
  %27 = alloca [2 x i32], align 4
  %28 = alloca [32 x i8], align 16
  %29 = alloca [4 x i8], align 4
  %30 = alloca [4 x [4 x float]], align 16
  %31 = alloca [3 x float], align 8
  %32 = alloca [3 x float], align 8
  %33 = alloca [32 x [3 x float]], align 16
  %34 = alloca [32 x [3 x float]], align 16
  %35 = alloca [3 x float], align 4
  %36 = alloca [3 x float], align 4
  %37 = alloca [3 x float], align 4
  %38 = alloca [32 x [3 x float]], align 16
  %39 = alloca [32 x [3 x float]], align 16
  %40 = alloca [3 x float], align 4
  %41 = alloca [3 x float], align 4
  %42 = alloca [3 x float], align 4
  %43 = alloca [32 x [3 x float]], align 16
  %44 = alloca [3 x float], align 4
  %45 = alloca [3 x float], align 4
  %46 = alloca [3 x float], align 4
  %47 = alloca [32 x [3 x float]], align 16
  %48 = alloca [32 x [3 x float]], align 16
  %49 = alloca [3 x float], align 4
  %50 = alloca [3 x float], align 4
  %51 = alloca [3 x float], align 4
  %52 = alloca [32 x [3 x float]], align 16
  %53 = alloca [3 x float], align 4
  %54 = alloca [3 x float], align 4
  %55 = alloca [3 x float], align 4
  %56 = alloca [32 x [3 x float]], align 16
  %57 = alloca [32 x [3 x float]], align 16
  %58 = alloca [32 x [3 x float]], align 16
  %59 = alloca [32 x [3 x float]], align 16
  %60 = alloca [3 x float], align 4
  %61 = alloca [3 x float], align 4
  %62 = alloca [3 x float], align 4
  %63 = alloca [4 x [4 x float]], align 16
  %64 = alloca [4 x [4 x float]], align 16
  %65 = alloca [3 x float], align 8
  %66 = alloca [4 x float], align 16
  %67 = alloca [3 x float], align 4
  %68 = alloca [4 x i8], align 1
  %69 = alloca [3 x [3 x float]], align 16
  %70 = alloca [3 x [3 x float]], align 16
  %71 = alloca [3 x [3 x float]], align 16
  %72 = alloca [3 x float], align 8
  %73 = alloca [3 x float], align 8
  %74 = alloca [3 x float], align 8
  %75 = alloca %struct.BoundBox, align 4
  %76 = alloca [4 x [4 x float]], align 16
  %77 = alloca [4 x i8], align 1
  %78 = alloca [4 x i8], align 1
  %79 = alloca %struct.ListBase, align 8
  %80 = getelementptr inbounds %struct.Base, ptr %3, i64 0, i32 7
  %81 = load ptr, ptr %80, align 8, !tbaa !38
  %82 = getelementptr inbounds %struct.ARegion, ptr %1, i64 0, i32 30
  %83 = load ptr, ptr %82, align 8, !tbaa !52
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %68) #13
  %84 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 6
  %85 = load ptr, ptr %84, align 8, !tbaa !18
  %86 = icmp eq ptr %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %5
  %88 = getelementptr inbounds %struct.Base, ptr %85, i64 0, i32 7
  %89 = load ptr, ptr %88, align 8, !tbaa !38
  br label %90

90:                                               ; preds = %5, %87
  %91 = phi ptr [ %89, %87 ], [ null, %5 ]
  %92 = icmp eq ptr %81, %91
  %93 = zext i1 %92 to i8
  %94 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 29
  %95 = load i16, ptr %94, align 2, !tbaa !15
  %96 = trunc i16 %95 to i8
  %97 = lshr i8 %96, 2
  %98 = and i8 %97, 1
  %99 = load i32, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 15), align 8, !tbaa !16
  %100 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 109
  %101 = load ptr, ptr %100, align 8, !tbaa !61
  %102 = icmp eq ptr %101, null
  %103 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 7
  %104 = load ptr, ptr %103, align 8, !tbaa !62
  %105 = icmp eq ptr %81, %104
  br i1 %105, label %123, label %106

106:                                              ; preds = %90
  %107 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 102
  %108 = load i8, ptr %107, align 8, !tbaa !63
  %109 = zext i8 %108 to i32
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %4550

112:                                              ; preds = %106
  %113 = icmp eq i8 %98, 0
  br i1 %113, label %123, label %114

114:                                              ; preds = %112
  %115 = and i32 %109, 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %4550

117:                                              ; preds = %114
  br i1 %102, label %118, label %124

118:                                              ; preds = %117
  %119 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 55
  %120 = load i16, ptr %119, align 8, !tbaa !64
  %121 = and i16 %120, 2832
  %122 = icmp eq i16 %121, 0
  br i1 %122, label %142, label %4550

123:                                              ; preds = %112, %90
  br i1 %102, label %142, label %124

124:                                              ; preds = %117, %123
  %125 = load i8, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 13), align 2, !tbaa !65
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %127, label %4550

127:                                              ; preds = %124
  %128 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 27
  %129 = load i32, ptr %128, align 8, !tbaa !40
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %142

131:                                              ; preds = %127, %135
  %132 = phi ptr [ %133, %135 ], [ %100, %127 ]
  %133 = load ptr, ptr %132, align 8, !tbaa !49
  %134 = icmp eq ptr %133, null
  br i1 %134, label %142, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.ParticleSystem, ptr %133, i64 0, i32 2
  %137 = load ptr, ptr %136, align 8, !tbaa !66
  %138 = getelementptr inbounds %struct.ParticleSettings, ptr %137, i64 0, i32 15
  %139 = load i32, ptr %138, align 8, !tbaa !68
  %140 = and i32 %139, 8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %131, label %142, !llvm.loop !70

142:                                              ; preds = %131, %135, %118, %127, %123
  %143 = phi i8 [ 0, %127 ], [ 0, %123 ], [ 0, %118 ], [ 0, %135 ], [ %98, %131 ]
  %144 = sext i16 %4 to i32
  %145 = and i32 %144, 1
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %195

147:                                              ; preds = %142
  %148 = getelementptr inbounds %struct.Base, ptr %3, i64 0, i32 4
  %149 = load i32, ptr %148, align 8, !tbaa !71
  %150 = and i32 %149, 512
  %151 = icmp eq i32 %150, 0
  %152 = and i16 %95, 64
  %153 = icmp eq i16 %152, 0
  %154 = select i1 %151, i1 %153, i1 false
  br i1 %154, label %155, label %195

155:                                              ; preds = %147
  %156 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 27
  %157 = load i32, ptr %156, align 8, !tbaa !40
  %158 = and i32 %157, 32
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %195

160:                                              ; preds = %155
  %161 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 49
  %162 = load i8, ptr %161, align 2, !tbaa !72
  %163 = icmp ne i8 %162, 0
  br i1 %163, label %175, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 48
  %166 = load i8, ptr %165, align 1, !tbaa !73
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %168, label %175

168:                                              ; preds = %164
  %169 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 86
  %170 = load i16, ptr %169, align 4, !tbaa !74
  %171 = and i16 %170, 192
  %172 = icmp eq i16 %171, 64
  br i1 %172, label %173, label %175

173:                                              ; preds = %168
  %174 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 45
  tail call void @ED_view3d_after_add(ptr noundef nonnull %174, ptr noundef nonnull %3, i16 noundef signext %4) #13
  br label %4550

175:                                              ; preds = %168, %164, %160
  %176 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 3
  %177 = load i16, ptr %176, align 8, !tbaa !75
  %178 = icmp eq i16 %177, 0
  br i1 %178, label %179, label %195

179:                                              ; preds = %175
  %180 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 88
  %181 = load i8, ptr %180, align 1, !tbaa !76
  %182 = icmp ne i8 %181, 8
  %183 = or i1 %163, %182
  br i1 %183, label %195, label %184

184:                                              ; preds = %179
  %185 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 48
  %186 = load i8, ptr %185, align 1, !tbaa !73
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %188, label %195

188:                                              ; preds = %184
  %189 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 86
  %190 = load i16, ptr %189, align 4, !tbaa !74
  %191 = and i16 %190, 192
  %192 = icmp eq i16 %191, 128
  br i1 %192, label %193, label %195

193:                                              ; preds = %188
  %194 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 44
  tail call void @ED_view3d_after_add(ptr noundef nonnull %194, ptr noundef nonnull %3, i16 noundef signext %4) #13
  br label %4550

195:                                              ; preds = %179, %155, %184, %188, %175, %147, %142
  tail call void @glBlendFunc(i32 noundef 770, i32 noundef 771) #13
  %196 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %197 = add nsw i32 %196, 1
  store i32 %197, ptr @g_v3d_string_level, align 4, !tbaa !47
  %198 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 22
  %199 = load ptr, ptr %198, align 8, !tbaa !77
  %200 = icmp eq ptr %199, null
  %201 = icmp ne i8 %98, 0
  %202 = select i1 %200, i1 true, i1 %201
  br i1 %202, label %206, label %203

203:                                              ; preds = %195
  %204 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 21
  tail call void @draw_motion_paths_init(ptr noundef %2, ptr noundef %1) #13
  %205 = load ptr, ptr %198, align 8, !tbaa !77
  tail call void @draw_motion_path_instance(ptr noundef %0, ptr noundef nonnull %81, ptr noundef null, ptr noundef nonnull %204, ptr noundef %205) #13
  tail call void @draw_motion_paths_cleanup(ptr noundef %2) #13
  br label %206

206:                                              ; preds = %203, %195
  tail call void @ED_view3d_init_mats_rv3d_gl(ptr noundef nonnull %81, ptr noundef %83) #13
  %207 = and i32 %144, 2
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %277

209:                                              ; preds = %206
  %210 = tail call i32 @ED_view3d_project_base(ptr noundef %1, ptr noundef %3) #13
  %211 = load ptr, ptr %80, align 8, !tbaa !38
  %212 = getelementptr inbounds %struct.Object, ptr %211, i64 0, i32 27
  %213 = load i32, ptr %212, align 8, !tbaa !40
  %214 = and i32 %213, 1
  %215 = icmp eq i32 %214, 0
  %216 = select i1 %215, i32 25, i32 27
  %217 = load ptr, ptr %103, align 8, !tbaa !62
  %218 = icmp eq ptr %217, null
  br i1 %218, label %219, label %228

219:                                              ; preds = %209
  %220 = load i16, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 10), align 4, !tbaa !78
  %221 = and i16 %220, 1
  %222 = icmp eq i16 %221, 0
  br i1 %222, label %228, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.Base, ptr %3, i64 0, i32 4
  %225 = load i32, ptr %224, align 8, !tbaa !71
  %226 = and i32 %225, 3
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %272

228:                                              ; preds = %223, %219, %209
  %229 = getelementptr inbounds %struct.ID, ptr %211, i64 0, i32 3
  %230 = load ptr, ptr %229, align 8, !tbaa !79
  %231 = icmp eq ptr %230, null
  br i1 %231, label %232, label %254

232:                                              ; preds = %228
  %233 = getelementptr inbounds %struct.Object, ptr %211, i64 0, i32 53
  %234 = load i16, ptr %233, align 4, !tbaa !80
  %235 = and i16 %234, 4096
  %236 = icmp eq i16 %235, 0
  %237 = getelementptr inbounds %struct.Base, ptr %3, i64 0, i32 4
  %238 = load i32, ptr %237, align 8, !tbaa !71
  %239 = and i32 %238, 3
  %240 = icmp eq i32 %239, 0
  br i1 %236, label %242, label %241

241:                                              ; preds = %232
  br i1 %240, label %272, label %269

242:                                              ; preds = %232
  br i1 %240, label %247, label %243

243:                                              ; preds = %242
  %244 = load ptr, ptr %84, align 8, !tbaa !18
  %245 = icmp eq ptr %244, %3
  %246 = select i1 %245, i32 29, i32 28
  br label %272

247:                                              ; preds = %242
  %248 = getelementptr inbounds %struct.Object, ptr %211, i64 0, i32 3
  %249 = load i16, ptr %248, align 8, !tbaa !75
  switch i16 %249, label %253 [
    i16 10, label %272
    i16 12, label %250
    i16 11, label %251
    i16 0, label %252
  ]

250:                                              ; preds = %247
  br label %272

251:                                              ; preds = %247
  br label %272

252:                                              ; preds = %247
  br label %272

253:                                              ; preds = %247
  br label %272

254:                                              ; preds = %228
  %255 = getelementptr inbounds %struct.Base, ptr %3, i64 0, i32 4
  %256 = load i32, ptr %255, align 8, !tbaa !71
  %257 = and i32 %256, 3
  %258 = icmp eq i32 %257, 0
  %259 = select i1 %258, i64 1, i64 2
  %260 = getelementptr inbounds [3 x i32], ptr @colortab, i64 0, i64 %259
  %261 = load i32, ptr %260, align 4, !tbaa !47
  %262 = trunc i32 %261 to i8
  store i8 %262, ptr %68, align 1, !tbaa !50
  %263 = lshr i32 %261, 8
  %264 = trunc i32 %263 to i8
  %265 = getelementptr inbounds i8, ptr %68, i64 1
  store i8 %264, ptr %265, align 1, !tbaa !50
  %266 = lshr i32 %261, 16
  %267 = trunc i32 %266 to i8
  %268 = getelementptr inbounds i8, ptr %68, i64 2
  store i8 %267, ptr %268, align 1, !tbaa !50
  br label %275

269:                                              ; preds = %241
  %270 = load ptr, ptr %84, align 8, !tbaa !18
  %271 = icmp eq ptr %270, %3
  br i1 %271, label %272, label %274

272:                                              ; preds = %269, %253, %252, %251, %250, %247, %243, %241, %223
  %273 = phi i32 [ 31, %269 ], [ %246, %243 ], [ 90, %250 ], [ 91, %251 ], [ 92, %252 ], [ 32, %223 ], [ 30, %241 ], [ 89, %247 ], [ %216, %253 ]
  call void @UI_GetThemeColor3ubv(i32 noundef %273, ptr noundef nonnull %68) #13
  br label %275

274:                                              ; preds = %269
  call void @UI_GetThemeColorShade3ubv(i32 noundef 31, i32 noundef -16, ptr noundef nonnull %68) #13
  br label %275

275:                                              ; preds = %254, %272, %274
  %276 = getelementptr inbounds i8, ptr %68, i64 3
  store i8 -1, ptr %276, align 1, !tbaa !50
  call void @glColor3ubv(ptr noundef nonnull %68) #13
  br label %277

277:                                              ; preds = %275, %206
  %278 = phi ptr [ %68, %275 ], [ null, %206 ]
  %279 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 24
  %280 = load i16, ptr %279, align 8, !tbaa !5
  %281 = and i16 %280, 255
  %282 = icmp eq i16 %281, 6
  %283 = select i1 %282, i16 3, i16 %281
  %284 = zext i16 %283 to i32
  %285 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 87
  %286 = load i8, ptr %285, align 2, !tbaa !81
  %287 = zext i8 %286 to i32
  %288 = call i32 @llvm.umin.i32(i32 %284, i32 %287)
  %289 = trunc i32 %288 to i8
  %290 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 47
  %291 = load i8, ptr %290, align 8, !tbaa !58
  %292 = icmp eq i8 %291, 0
  %293 = icmp ugt i32 %288, 2
  %294 = and i1 %292, %293
  %295 = select i1 %294, i8 2, i8 %289
  br i1 %92, label %296, label %312

296:                                              ; preds = %277
  %297 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 27
  %298 = load i32, ptr %297, align 8, !tbaa !40
  %299 = and i32 %298, 28
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %296
  %302 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 3
  %303 = load i16, ptr %302, align 8, !tbaa !75
  %304 = icmp eq i16 %303, 1
  br i1 %304, label %305, label %312

305:                                              ; preds = %301
  %306 = icmp ult i8 %295, 3
  %307 = zext i1 %306 to i8
  %308 = call i8 @llvm.umax.i8(i8 %295, i8 3)
  %309 = and i32 %298, 12
  %310 = icmp eq i32 %309, 0
  %311 = select i1 %310, i8 %308, i8 100
  call void @glEnable(i32 noundef 2929) #13
  br label %312

312:                                              ; preds = %296, %305, %301, %277
  %313 = phi i1 [ false, %305 ], [ true, %301 ], [ true, %296 ], [ true, %277 ]
  %314 = phi i8 [ %307, %305 ], [ 0, %301 ], [ 0, %296 ], [ 0, %277 ]
  %315 = phi i8 [ %311, %305 ], [ %295, %301 ], [ %295, %296 ], [ %295, %277 ]
  %316 = load i16, ptr %94, align 2, !tbaa !15
  %317 = zext i16 %316 to i32
  %318 = and i32 %317, 4096
  %319 = icmp ne i32 %318, 0
  %320 = icmp eq i8 %315, 3
  %321 = select i1 %319, i1 %320, i1 false
  %322 = and i1 %313, %321
  %323 = and i32 %99, 32
  %324 = and i32 %317, 64
  %325 = or i32 %324, %323
  %326 = icmp eq i32 %325, 0
  %327 = select i1 %322, i1 %326, i1 false
  br i1 %327, label %328, label %358

328:                                              ; preds = %312
  %329 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 52
  %330 = load ptr, ptr %329, align 8, !tbaa !82
  %331 = icmp eq ptr %330, null
  br i1 %331, label %332, label %339

332:                                              ; preds = %328
  %333 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !49
  %334 = call ptr %333(i64 noundef 944, ptr noundef nonnull @.str) #13
  store ptr %334, ptr %329, align 8, !tbaa !82
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(944) %334, ptr noundef nonnull align 8 dereferenceable(944) @defmaterial, i64 944, i1 false), !tbaa.struct !83
  %335 = load ptr, ptr %329, align 8, !tbaa !82
  %336 = getelementptr inbounds %struct.Material, ptr %335, i64 0, i32 136
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %336, i8 0, i64 16, i1 false)
  %337 = load ptr, ptr %329, align 8, !tbaa !82
  %338 = getelementptr inbounds %struct.Material, ptr %337, i64 0, i32 106
  store ptr null, ptr %338, align 8, !tbaa !84
  br label %339

339:                                              ; preds = %332, %328
  %340 = phi ptr [ %337, %332 ], [ %330, %328 ]
  %341 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 36
  %342 = load i16, ptr %341, align 4, !tbaa !88
  %343 = icmp eq i16 %342, 0
  br i1 %343, label %344, label %345

344:                                              ; preds = %339
  store i16 812, ptr %341, align 4, !tbaa !88
  br label %345

345:                                              ; preds = %344, %339
  %346 = phi i16 [ 812, %344 ], [ %342, %339 ]
  %347 = getelementptr inbounds %struct.Material, ptr %340, i64 0, i32 106
  %348 = load ptr, ptr %347, align 8, !tbaa !84
  %349 = icmp eq ptr %348, null
  br i1 %349, label %350, label %355

350:                                              ; preds = %345
  %351 = sext i16 %346 to i32
  %352 = call ptr @UI_icon_to_preview(i32 noundef %351) #13
  %353 = load ptr, ptr %329, align 8, !tbaa !82
  %354 = getelementptr inbounds %struct.Material, ptr %353, i64 0, i32 106
  store ptr %352, ptr %354, align 8, !tbaa !84
  br label %355

355:                                              ; preds = %350, %345
  %356 = load i16, ptr %94, align 2, !tbaa !15
  %357 = or i16 %356, 8192
  store i16 %357, ptr %94, align 2, !tbaa !15
  br label %360

358:                                              ; preds = %312
  %359 = icmp eq i8 %315, 0
  br i1 %359, label %369, label %360

360:                                              ; preds = %355, %358
  %361 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 86
  %362 = load i16, ptr %361, align 4, !tbaa !74
  %363 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 27
  %364 = load i32, ptr %363, align 8, !tbaa !40
  %365 = and i32 %364, 1
  %366 = icmp eq i32 %365, 0
  %367 = and i16 %362, 36
  %368 = select i1 %366, i16 %362, i16 %367
  br label %369

369:                                              ; preds = %360, %358
  %370 = phi i16 [ 0, %358 ], [ %368, %360 ]
  %371 = icmp eq i8 %143, 0
  br i1 %371, label %372, label %1846

372:                                              ; preds = %369
  %373 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 28
  %374 = load i16, ptr %373, align 8, !tbaa !89
  %375 = and i16 %374, 2048
  %376 = icmp eq i16 %375, 0
  %377 = select i1 %376, i1 true, i1 %201
  br i1 %377, label %405, label %378

378:                                              ; preds = %372
  %379 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 3
  %380 = load i16, ptr %379, align 8, !tbaa !75
  %381 = icmp ne i16 %380, 1
  %382 = icmp ugt i8 %315, 2
  %383 = select i1 %381, i1 %382, i1 false
  br i1 %383, label %384, label %405

384:                                              ; preds = %378
  %385 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 27
  %386 = load i32, ptr %385, align 8, !tbaa !40
  %387 = and i32 %386, 1
  %388 = and i32 %144, 4
  %389 = or i32 %387, %388
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %405

391:                                              ; preds = %384
  %392 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 86
  %393 = load i16, ptr %392, align 4, !tbaa !74
  %394 = and i16 %393, 32
  %395 = icmp eq i16 %394, 0
  br i1 %395, label %396, label %405

396:                                              ; preds = %391
  %397 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 53
  %398 = load i16, ptr %397, align 4, !tbaa !80
  %399 = and i16 %398, 1
  %400 = icmp ne i16 %399, 0
  %401 = and i32 %144, 3
  %402 = icmp eq i32 %401, 0
  %403 = and i1 %402, %400
  br i1 %403, label %404, label %405

404:                                              ; preds = %396
  call fastcc void @drawObjectSelect(ptr noundef %0, ptr noundef nonnull %2, ptr noundef %1, ptr noundef %3, ptr noundef %278)
  br label %405

405:                                              ; preds = %384, %404, %396, %391, %378, %372
  %406 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 3
  %407 = load i16, ptr %406, align 8, !tbaa !75
  %408 = sext i16 %407 to i32
  switch i32 %408, label %543 [
    i32 1, label %409
    i32 4, label %413
    i32 2, label %438
    i32 3, label %438
    i32 5, label %465
    i32 0, label %486
    i32 10, label %495
    i32 11, label %497
    i32 12, label %507
    i32 22, label %509
    i32 25, label %522
  ]

409:                                              ; preds = %405
  %410 = call fastcc zeroext i8 @draw_mesh_object(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %2, ptr noundef %83, ptr noundef %3, i8 noundef zeroext %315, ptr noundef %278, i16 noundef signext %4)
  %411 = and i16 %370, -33
  %412 = select i1 %208, i16 %411, i16 %370
  br label %545

413:                                              ; preds = %405
  %414 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 19
  %415 = load ptr, ptr %414, align 8, !tbaa !90
  %416 = getelementptr inbounds %struct.Curve, ptr %415, i64 0, i32 53
  %417 = load ptr, ptr %416, align 8, !tbaa !91
  %418 = icmp eq ptr %417, null
  br i1 %418, label %420, label %419

419:                                              ; preds = %413
  call fastcc void @draw_editfont(ptr noundef %0, ptr noundef nonnull %2, ptr noundef %83, ptr noundef %3, i8 noundef zeroext %315, i16 noundef signext %4, ptr noundef %278)
  br label %545

420:                                              ; preds = %413
  %421 = icmp eq i8 %315, 1
  br i1 %421, label %422, label %431

422:                                              ; preds = %420
  %423 = icmp eq i8 %98, 0
  br i1 %423, label %427, label %424

424:                                              ; preds = %422
  %425 = load i16, ptr %279, align 8, !tbaa !5
  %426 = icmp sgt i16 %425, 1
  br i1 %426, label %1846, label %427

427:                                              ; preds = %422, %424
  %428 = load ptr, ptr %80, align 8, !tbaa !38
  call fastcc void @ensure_curve_cache(ptr noundef %0, ptr noundef %428)
  %429 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 84
  %430 = load i8, ptr %429, align 2, !tbaa !94
  call fastcc void @draw_bounding_volume(ptr noundef nonnull %81, i8 noundef zeroext %430)
  br label %545

431:                                              ; preds = %420
  %432 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 15
  %433 = load ptr, ptr %432, align 8, !tbaa !95
  %434 = call zeroext i8 @ED_view3d_boundbox_clip(ptr noundef %83, ptr noundef %433) #13
  %435 = icmp eq i8 %434, 0
  br i1 %435, label %545, label %436

436:                                              ; preds = %431
  %437 = call fastcc zeroext i8 @drawDispList(ptr noundef %0, ptr noundef nonnull %2, ptr noundef %83, ptr noundef %3, i8 noundef zeroext %315, i16 noundef signext %4, ptr noundef %278), !range !96
  br label %545

438:                                              ; preds = %405, %405
  %439 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 19
  %440 = load ptr, ptr %439, align 8, !tbaa !90
  %441 = getelementptr inbounds %struct.Curve, ptr %440, i64 0, i32 4
  %442 = load ptr, ptr %441, align 8, !tbaa !97
  %443 = icmp eq ptr %442, null
  br i1 %443, label %447, label %444

444:                                              ; preds = %438
  %445 = call ptr @BKE_curve_editNurbs_get(ptr noundef nonnull %440) #13
  %446 = load ptr, ptr %445, align 8, !tbaa !98
  call fastcc void @draw_editnurb(ptr noundef %0, ptr noundef nonnull %2, ptr noundef %83, ptr noundef %3, ptr noundef %446, i8 noundef zeroext %315, i16 noundef signext %4, ptr noundef %278)
  br label %545

447:                                              ; preds = %438
  %448 = icmp eq i8 %315, 1
  br i1 %448, label %449, label %458

449:                                              ; preds = %447
  %450 = icmp eq i8 %98, 0
  br i1 %450, label %454, label %451

451:                                              ; preds = %449
  %452 = load i16, ptr %279, align 8, !tbaa !5
  %453 = icmp sgt i16 %452, 1
  br i1 %453, label %1846, label %454

454:                                              ; preds = %449, %451
  %455 = load ptr, ptr %80, align 8, !tbaa !38
  call fastcc void @ensure_curve_cache(ptr noundef %0, ptr noundef %455)
  %456 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 84
  %457 = load i8, ptr %456, align 2, !tbaa !94
  call fastcc void @draw_bounding_volume(ptr noundef nonnull %81, i8 noundef zeroext %457)
  br label %545

458:                                              ; preds = %447
  %459 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 15
  %460 = load ptr, ptr %459, align 8, !tbaa !95
  %461 = call zeroext i8 @ED_view3d_boundbox_clip(ptr noundef %83, ptr noundef %460) #13
  %462 = icmp eq i8 %461, 0
  br i1 %462, label %545, label %463

463:                                              ; preds = %458
  %464 = call fastcc zeroext i8 @drawDispList(ptr noundef %0, ptr noundef nonnull %2, ptr noundef %83, ptr noundef %3, i8 noundef zeroext %315, i16 noundef signext %4, ptr noundef %278), !range !96
  br label %545

465:                                              ; preds = %405
  %466 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 19
  %467 = load ptr, ptr %466, align 8, !tbaa !90
  %468 = getelementptr inbounds %struct.MetaBall, ptr %467, i64 0, i32 4
  %469 = load ptr, ptr %468, align 8, !tbaa !99
  %470 = icmp eq ptr %469, null
  br i1 %470, label %473, label %471

471:                                              ; preds = %465
  %472 = call fastcc zeroext i8 @drawmball(ptr noundef %0, ptr noundef nonnull %2, ptr noundef %83, ptr noundef %3, i8 noundef zeroext %315, i16 noundef signext %4, ptr noundef %278), !range !96
  br label %545

473:                                              ; preds = %465
  %474 = icmp eq i8 %315, 1
  br i1 %474, label %475, label %484

475:                                              ; preds = %473
  %476 = icmp eq i8 %98, 0
  br i1 %476, label %480, label %477

477:                                              ; preds = %475
  %478 = load i16, ptr %279, align 8, !tbaa !5
  %479 = icmp sgt i16 %478, 1
  br i1 %479, label %1846, label %480

480:                                              ; preds = %475, %477
  %481 = load ptr, ptr %80, align 8, !tbaa !38
  call fastcc void @ensure_curve_cache(ptr noundef %0, ptr noundef %481)
  %482 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 84
  %483 = load i8, ptr %482, align 2, !tbaa !94
  call fastcc void @draw_bounding_volume(ptr noundef nonnull %81, i8 noundef zeroext %483)
  br label %545

484:                                              ; preds = %473
  %485 = call fastcc zeroext i8 @drawmball(ptr noundef %0, ptr noundef nonnull %2, ptr noundef %83, ptr noundef %3, i8 noundef zeroext %315, i16 noundef signext %4, ptr noundef %278), !range !96
  br label %545

486:                                              ; preds = %405
  br i1 %201, label %1846, label %487

487:                                              ; preds = %486
  %488 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 88
  %489 = load i8, ptr %488, align 1, !tbaa !76
  %490 = icmp eq i8 %489, 8
  br i1 %490, label %491, label %492

491:                                              ; preds = %487
  call fastcc void @draw_empty_image(ptr noundef nonnull %81, i16 noundef signext %4, ptr noundef %278)
  br label %549

492:                                              ; preds = %487
  %493 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 89
  %494 = load float, ptr %493, align 8, !tbaa !101
  call void @drawaxes(float noundef nofpclass(nan inf) %494, i8 noundef zeroext %489)
  br label %549

495:                                              ; preds = %405
  br i1 %201, label %1846, label %496

496:                                              ; preds = %495
  call fastcc void @drawlamp(ptr noundef nonnull %2, ptr noundef %83, ptr noundef %3, i8 noundef zeroext %315, i16 noundef signext %4, ptr noundef %278, i8 noundef zeroext %93)
  br label %549

497:                                              ; preds = %405
  br i1 %201, label %498, label %506

498:                                              ; preds = %497
  %499 = getelementptr inbounds %struct.RegionView3D, ptr %83, i64 0, i32 25
  %500 = load i8, ptr %499, align 1, !tbaa !102
  %501 = icmp eq i8 %500, 2
  br i1 %501, label %502, label %1846

502:                                              ; preds = %498
  %503 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 15
  %504 = load ptr, ptr %503, align 8, !tbaa !103
  %505 = icmp eq ptr %504, %81
  br i1 %505, label %506, label %1846

506:                                              ; preds = %502, %497
  call fastcc void @drawcamera(ptr noundef %0, ptr noundef nonnull %2, ptr noundef %83, ptr noundef %3, i16 noundef signext %4, ptr noundef %278)
  br label %545

507:                                              ; preds = %405
  br i1 %201, label %1846, label %508

508:                                              ; preds = %507
  call fastcc void @drawspeaker()
  br label %549

509:                                              ; preds = %405
  br i1 %201, label %1846, label %510

510:                                              ; preds = %509
  %511 = icmp eq i8 %315, 1
  br i1 %511, label %512, label %520

512:                                              ; preds = %510
  %513 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 27
  %514 = load i32, ptr %513, align 8, !tbaa !40
  %515 = and i32 %514, 1
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %517, label %520

517:                                              ; preds = %512
  %518 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 84
  %519 = load i8, ptr %518, align 2, !tbaa !94
  call fastcc void @draw_bounding_volume(ptr noundef nonnull %81, i8 noundef zeroext %519)
  br label %549

520:                                              ; preds = %510, %512
  %521 = phi i8 [ 2, %512 ], [ %315, %510 ]
  call fastcc void @ensure_curve_cache(ptr noundef %0, ptr noundef nonnull %81)
  call fastcc void @drawlattice(ptr noundef nonnull %2, ptr noundef nonnull %81)
  br label %549

522:                                              ; preds = %405
  br i1 %201, label %1846, label %523

523:                                              ; preds = %522
  %524 = icmp eq i8 %315, 1
  br i1 %524, label %525, label %533

525:                                              ; preds = %523
  %526 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 27
  %527 = load i32, ptr %526, align 8, !tbaa !40
  %528 = and i32 %527, 65
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %530, label %535

530:                                              ; preds = %525
  %531 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 84
  %532 = load i8, ptr %531, align 2, !tbaa !94
  call fastcc void @draw_bounding_volume(ptr noundef nonnull %81, i8 noundef zeroext %532)
  br label %549

533:                                              ; preds = %523
  %534 = icmp ugt i8 %315, 2
  br i1 %534, label %539, label %535

535:                                              ; preds = %533, %525
  %536 = phi i8 [ %315, %533 ], [ 2, %525 ]
  %537 = zext i8 %536 to i16
  %538 = call zeroext i8 @draw_armature(ptr noundef %0, ptr noundef nonnull %2, ptr noundef %1, ptr noundef %3, i16 noundef signext %537, i16 noundef signext %4, ptr noundef %278, i8 noundef zeroext 0) #13
  br label %549

539:                                              ; preds = %533
  %540 = call i32 @GPU_enable_material(i32 noundef 0, ptr noundef null) #13
  %541 = zext i8 %315 to i16
  %542 = call zeroext i8 @draw_armature(ptr noundef %0, ptr noundef nonnull %2, ptr noundef %1, ptr noundef %3, i16 noundef signext %541, i16 noundef signext %4, ptr noundef %278, i8 noundef zeroext 0) #13
  call void @GPU_disable_material() #13
  br label %549

543:                                              ; preds = %405
  br i1 %201, label %1846, label %544

544:                                              ; preds = %543
  call void @drawaxes(float noundef nofpclass(nan inf) 1.000000e+00, i8 noundef zeroext 1)
  br label %549

545:                                              ; preds = %409, %471, %480, %484, %506, %444, %458, %463, %454, %419, %431, %436, %427
  %546 = phi i8 [ 0, %506 ], [ 0, %444 ], [ 0, %454 ], [ %464, %463 ], [ 0, %458 ], [ 0, %419 ], [ 0, %427 ], [ %437, %436 ], [ 0, %431 ], [ %410, %409 ], [ 0, %471 ], [ 0, %480 ], [ %485, %484 ]
  %547 = phi i8 [ %315, %506 ], [ %315, %444 ], [ 1, %454 ], [ %315, %463 ], [ %315, %458 ], [ %315, %419 ], [ 1, %427 ], [ %315, %436 ], [ %315, %431 ], [ %315, %409 ], [ %315, %471 ], [ 1, %480 ], [ %315, %484 ]
  %548 = phi i16 [ %370, %506 ], [ %370, %444 ], [ %370, %454 ], [ %370, %463 ], [ %370, %458 ], [ %370, %419 ], [ %370, %427 ], [ %370, %436 ], [ %370, %431 ], [ %412, %409 ], [ %370, %471 ], [ %370, %480 ], [ %370, %484 ]
  br i1 %201, label %1846, label %549

549:                                              ; preds = %491, %492, %496, %508, %517, %520, %530, %539, %544, %535, %545
  %550 = phi i16 [ %548, %545 ], [ %370, %535 ], [ %370, %544 ], [ %370, %539 ], [ %370, %530 ], [ %370, %520 ], [ %370, %517 ], [ %370, %508 ], [ %370, %496 ], [ %370, %492 ], [ %370, %491 ]
  %551 = phi i8 [ %547, %545 ], [ %536, %535 ], [ %315, %544 ], [ %315, %539 ], [ 1, %530 ], [ %521, %520 ], [ 1, %517 ], [ %315, %508 ], [ %315, %496 ], [ %315, %492 ], [ %315, %491 ]
  %552 = phi i8 [ %546, %545 ], [ %538, %535 ], [ 0, %544 ], [ %542, %539 ], [ 0, %530 ], [ 0, %520 ], [ 0, %517 ], [ 0, %508 ], [ 0, %496 ], [ 0, %492 ], [ 0, %491 ]
  %553 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 111
  %554 = load ptr, ptr %553, align 8, !tbaa !104
  %555 = icmp eq ptr %554, null
  br i1 %555, label %568, label %556

556:                                              ; preds = %549
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %69) #13
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %70) #13
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %71) #13
  %557 = getelementptr inbounds %struct.SoftBody, ptr %554, i64 0, i32 28
  %558 = load i16, ptr %557, align 2, !tbaa !105
  %559 = and i16 %558, 4
  %560 = icmp eq i16 %559, 0
  br i1 %560, label %567, label %561

561:                                              ; preds = %556
  %562 = getelementptr inbounds %struct.RegionView3D, ptr %83, i64 0, i32 1
  call void @glLoadMatrixf(ptr noundef nonnull %562) #13
  %563 = getelementptr inbounds %struct.SoftBody, ptr %554, i64 0, i32 52
  call void @copy_m3_m3(ptr noundef nonnull %70, ptr noundef nonnull %563) #13
  %564 = getelementptr inbounds %struct.SoftBody, ptr %554, i64 0, i32 51
  call void @copy_m3_m3(ptr noundef nonnull %69, ptr noundef nonnull %564) #13
  call void @mul_m3_m3m3(ptr noundef nonnull %71, ptr noundef nonnull %69, ptr noundef nonnull %70) #13
  %565 = getelementptr inbounds %struct.SoftBody, ptr %554, i64 0, i32 50
  call fastcc void @ob_draw_RE_motion(ptr noundef nonnull %565, ptr noundef nonnull %71)
  %566 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 47
  call void @glMultMatrixf(ptr noundef nonnull %566) #13
  br label %567

567:                                              ; preds = %556, %561
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %71) #13
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %70) #13
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %69) #13
  br label %568

568:                                              ; preds = %567, %549
  %569 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 110
  %570 = load ptr, ptr %569, align 8, !tbaa !107
  %571 = icmp eq ptr %570, null
  br i1 %571, label %1846, label %572

572:                                              ; preds = %568
  %573 = getelementptr inbounds %struct.PartDeflect, ptr %570, i64 0, i32 2
  %574 = load i16, ptr %573, align 2, !tbaa !108
  %575 = icmp eq i16 %574, 0
  br i1 %575, label %1846, label %576

576:                                              ; preds = %572
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %63) #13
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %64) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %65) #13
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %65, i8 0, i64 12, i1 false)
  %577 = load i16, ptr %406, align 8, !tbaa !75
  %578 = icmp eq i16 %577, 0
  br i1 %578, label %579, label %582

579:                                              ; preds = %576
  %580 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 89
  %581 = load float, ptr %580, align 8, !tbaa !101
  br label %582

582:                                              ; preds = %579, %576
  %583 = phi float [ %581, %579 ], [ 1.000000e+00, %576 ]
  %584 = getelementptr inbounds %struct.RegionView3D, ptr %83, i64 0, i32 5
  %585 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %63, ptr noundef nonnull %584) #13
  %586 = load i16, ptr %573, align 2, !tbaa !108
  switch i16 %586, label %1514 [
    i16 4, label %587
    i16 1, label %929
    i16 2, label %1272
    i16 5, label %1282
  ]

587:                                              ; preds = %582
  %588 = and i16 %4, 2
  %589 = icmp eq i16 %588, 0
  br i1 %589, label %590, label %591

590:                                              ; preds = %587
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %60) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %61) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %62) #13
  call void @rgb_uchar_to_float(ptr noundef nonnull %60, ptr noundef %278) #13
  call void @UI_GetThemeColor3fv(i32 noundef 2, ptr noundef nonnull %61) #13
  call void @interp_v3_v3v3(ptr noundef nonnull %62, ptr noundef nonnull %61, ptr noundef nonnull %60, float noundef nofpclass(nan inf) 5.000000e-01) #13
  call void @glColor3fv(ptr noundef nonnull %62) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %62) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %61) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %60) #13
  br label %591

591:                                              ; preds = %590, %587
  %592 = getelementptr inbounds %struct.PartDeflect, ptr %570, i64 0, i32 9
  %593 = load float, ptr %592, align 4, !tbaa !110
  call void @unit_m4(ptr noundef nonnull %64) #13
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %59) #13
  %594 = getelementptr inbounds float, ptr %64, i64 1
  %595 = getelementptr inbounds float, ptr %64, i64 2
  %596 = getelementptr inbounds [4 x float], ptr %64, i64 1
  %597 = getelementptr inbounds [4 x float], ptr %64, i64 1, i64 1
  %598 = getelementptr inbounds [4 x float], ptr %64, i64 1, i64 2
  %599 = load <8 x float>, ptr %598, align 8
  %600 = shufflevector <8 x float> %599, <8 x float> poison, <8 x i32> zeroinitializer
  %601 = load <8 x float>, ptr %595, align 8
  %602 = shufflevector <8 x float> %601, <8 x float> poison, <8 x i32> zeroinitializer
  %603 = load <8 x float>, ptr %597, align 4
  %604 = shufflevector <8 x float> %603, <8 x float> poison, <8 x i32> zeroinitializer
  %605 = load <8 x float>, ptr %594, align 4
  %606 = shufflevector <8 x float> %605, <8 x float> poison, <8 x i32> zeroinitializer
  %607 = insertelement <8 x float> poison, float %583, i64 0
  %608 = shufflevector <8 x float> %607, <8 x float> poison, <8 x i32> zeroinitializer
  %609 = load <8 x float>, ptr %596, align 16
  %610 = shufflevector <8 x float> %609, <8 x float> poison, <8 x i32> zeroinitializer
  %611 = load <8 x float>, ptr %64, align 16
  %612 = shufflevector <8 x float> %611, <8 x float> poison, <8 x i32> zeroinitializer
  %613 = fmul fast <8 x float> %612, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %614 = fmul fast <8 x float> %610, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %615 = fadd fast <8 x float> %614, %613
  %616 = fmul fast <8 x float> %615, %608
  %617 = fmul fast <8 x float> %606, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %618 = fmul fast <8 x float> %604, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %619 = fadd fast <8 x float> %618, %617
  %620 = fmul fast <8 x float> %619, %608
  %621 = fmul fast <8 x float> %602, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %622 = fmul fast <8 x float> %600, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %623 = fadd fast <8 x float> %622, %621
  %624 = fmul fast <8 x float> %623, %608
  %625 = shufflevector <8 x float> %616, <8 x float> %620, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %626 = shufflevector <8 x float> %624, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %627 = shufflevector <16 x float> %625, <16 x float> %626, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %627, ptr %59, align 16, !tbaa !44
  %628 = getelementptr inbounds i8, ptr %59, i64 96
  %629 = fmul fast <8 x float> %612, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %630 = fmul fast <8 x float> %610, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %631 = fadd fast <8 x float> %630, %629
  %632 = fmul fast <8 x float> %631, %608
  %633 = fmul fast <8 x float> %606, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %634 = fmul fast <8 x float> %604, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %635 = fadd fast <8 x float> %634, %633
  %636 = fmul fast <8 x float> %635, %608
  %637 = fmul fast <8 x float> %602, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %638 = fmul fast <8 x float> %600, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %639 = fadd fast <8 x float> %638, %637
  %640 = fmul fast <8 x float> %639, %608
  %641 = shufflevector <8 x float> %632, <8 x float> %636, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %642 = shufflevector <8 x float> %640, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %643 = shufflevector <16 x float> %641, <16 x float> %642, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %643, ptr %628, align 16, !tbaa !44
  %644 = getelementptr inbounds i8, ptr %59, i64 192
  %645 = fmul fast <8 x float> %612, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %646 = fmul fast <8 x float> %610, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %647 = fadd fast <8 x float> %646, %645
  %648 = fmul fast <8 x float> %647, %608
  %649 = fmul fast <8 x float> %606, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %650 = fmul fast <8 x float> %604, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %651 = fadd fast <8 x float> %650, %649
  %652 = fmul fast <8 x float> %651, %608
  %653 = fmul fast <8 x float> %602, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %654 = fmul fast <8 x float> %600, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %655 = fadd fast <8 x float> %654, %653
  %656 = fmul fast <8 x float> %655, %608
  %657 = shufflevector <8 x float> %648, <8 x float> %652, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %658 = shufflevector <8 x float> %656, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %659 = shufflevector <16 x float> %657, <16 x float> %658, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %659, ptr %644, align 16, !tbaa !44
  %660 = getelementptr inbounds i8, ptr %59, i64 288
  %661 = fmul fast <8 x float> %612, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %662 = fmul fast <8 x float> %610, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %663 = fadd fast <8 x float> %662, %661
  %664 = fmul fast <8 x float> %663, %608
  %665 = fmul fast <8 x float> %606, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %666 = fmul fast <8 x float> %604, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %667 = fadd fast <8 x float> %666, %665
  %668 = fmul fast <8 x float> %667, %608
  %669 = fmul fast <8 x float> %602, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %670 = fmul fast <8 x float> %600, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %671 = fadd fast <8 x float> %670, %669
  %672 = fmul fast <8 x float> %671, %608
  %673 = shufflevector <8 x float> %664, <8 x float> %668, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %674 = shufflevector <8 x float> %672, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %675 = shufflevector <16 x float> %673, <16 x float> %674, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %675, ptr %660, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %59) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %59) #13
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %58) #13
  %676 = fmul fast float %593, 0x3FA99999A0000000
  %677 = insertelement <8 x float> poison, float %676, i64 0
  %678 = shufflevector <8 x float> %677, <8 x float> poison, <8 x i32> zeroinitializer
  %679 = load <8 x float>, ptr %598, align 8
  %680 = shufflevector <8 x float> %679, <8 x float> poison, <8 x i32> zeroinitializer
  %681 = load <8 x float>, ptr %595, align 8
  %682 = shufflevector <8 x float> %681, <8 x float> poison, <8 x i32> zeroinitializer
  %683 = load <8 x float>, ptr %597, align 4
  %684 = shufflevector <8 x float> %683, <8 x float> poison, <8 x i32> zeroinitializer
  %685 = load <8 x float>, ptr %594, align 4
  %686 = shufflevector <8 x float> %685, <8 x float> poison, <8 x i32> zeroinitializer
  %687 = insertelement <8 x float> poison, float %583, i64 0
  %688 = shufflevector <8 x float> %687, <8 x float> poison, <8 x i32> zeroinitializer
  %689 = load <8 x float>, ptr %596, align 16
  %690 = shufflevector <8 x float> %689, <8 x float> poison, <8 x i32> zeroinitializer
  %691 = load <8 x float>, ptr %64, align 16
  %692 = shufflevector <8 x float> %691, <8 x float> poison, <8 x i32> zeroinitializer
  %693 = fmul fast <8 x float> %692, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %694 = fmul fast <8 x float> %690, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %695 = fadd fast <8 x float> %694, %693
  %696 = fmul fast <8 x float> %695, %688
  %697 = fmul fast <8 x float> %686, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %698 = fmul fast <8 x float> %684, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %699 = fadd fast <8 x float> %698, %697
  %700 = fmul fast <8 x float> %699, %688
  %701 = fmul fast <8 x float> %682, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %702 = fmul fast <8 x float> %680, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %703 = fadd fast <8 x float> %702, %701
  %704 = fmul fast <8 x float> %703, %688
  %705 = fadd fast <8 x float> %704, %678
  %706 = shufflevector <8 x float> %696, <8 x float> %700, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %707 = shufflevector <8 x float> %705, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %708 = shufflevector <16 x float> %706, <16 x float> %707, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %708, ptr %58, align 16, !tbaa !44
  %709 = getelementptr inbounds i8, ptr %58, i64 96
  %710 = fmul fast <8 x float> %692, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %711 = fmul fast <8 x float> %690, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %712 = fadd fast <8 x float> %711, %710
  %713 = fmul fast <8 x float> %712, %688
  %714 = fmul fast <8 x float> %686, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %715 = fmul fast <8 x float> %684, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %716 = fadd fast <8 x float> %715, %714
  %717 = fmul fast <8 x float> %716, %688
  %718 = fmul fast <8 x float> %682, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %719 = fmul fast <8 x float> %680, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %720 = fadd fast <8 x float> %719, %718
  %721 = fmul fast <8 x float> %720, %688
  %722 = fadd fast <8 x float> %721, %678
  %723 = shufflevector <8 x float> %713, <8 x float> %717, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %724 = shufflevector <8 x float> %722, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %725 = shufflevector <16 x float> %723, <16 x float> %724, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %725, ptr %709, align 16, !tbaa !44
  %726 = getelementptr inbounds i8, ptr %58, i64 192
  %727 = fmul fast <8 x float> %692, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %728 = fmul fast <8 x float> %690, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %729 = fadd fast <8 x float> %728, %727
  %730 = fmul fast <8 x float> %729, %688
  %731 = fmul fast <8 x float> %686, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %732 = fmul fast <8 x float> %684, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %733 = fadd fast <8 x float> %732, %731
  %734 = fmul fast <8 x float> %733, %688
  %735 = fmul fast <8 x float> %682, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %736 = fmul fast <8 x float> %680, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %737 = fadd fast <8 x float> %736, %735
  %738 = fmul fast <8 x float> %737, %688
  %739 = fadd fast <8 x float> %738, %678
  %740 = shufflevector <8 x float> %730, <8 x float> %734, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %741 = shufflevector <8 x float> %739, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %742 = shufflevector <16 x float> %740, <16 x float> %741, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %742, ptr %726, align 16, !tbaa !44
  %743 = getelementptr inbounds i8, ptr %58, i64 288
  %744 = fmul fast <8 x float> %692, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %745 = fmul fast <8 x float> %690, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %746 = fadd fast <8 x float> %745, %744
  %747 = fmul fast <8 x float> %746, %688
  %748 = fmul fast <8 x float> %686, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %749 = fmul fast <8 x float> %684, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %750 = fadd fast <8 x float> %749, %748
  %751 = fmul fast <8 x float> %750, %688
  %752 = fmul fast <8 x float> %682, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %753 = fmul fast <8 x float> %680, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %754 = fadd fast <8 x float> %753, %752
  %755 = fmul fast <8 x float> %754, %688
  %756 = fadd fast <8 x float> %755, %678
  %757 = shufflevector <8 x float> %747, <8 x float> %751, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %758 = shufflevector <8 x float> %756, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %759 = shufflevector <16 x float> %757, <16 x float> %758, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %759, ptr %743, align 16, !tbaa !44
  %760 = getelementptr inbounds float, ptr %65, i64 2
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %58) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %58) #13
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %57) #13
  %761 = fmul fast float %593, 0x3FB99999A0000000
  %762 = insertelement <8 x float> poison, float %761, i64 0
  %763 = shufflevector <8 x float> %762, <8 x float> poison, <8 x i32> zeroinitializer
  %764 = load <8 x float>, ptr %598, align 8
  %765 = shufflevector <8 x float> %764, <8 x float> poison, <8 x i32> zeroinitializer
  %766 = load <8 x float>, ptr %595, align 8
  %767 = shufflevector <8 x float> %766, <8 x float> poison, <8 x i32> zeroinitializer
  %768 = load <8 x float>, ptr %597, align 4
  %769 = shufflevector <8 x float> %768, <8 x float> poison, <8 x i32> zeroinitializer
  %770 = load <8 x float>, ptr %594, align 4
  %771 = shufflevector <8 x float> %770, <8 x float> poison, <8 x i32> zeroinitializer
  %772 = insertelement <8 x float> poison, float %583, i64 0
  %773 = shufflevector <8 x float> %772, <8 x float> poison, <8 x i32> zeroinitializer
  %774 = load <8 x float>, ptr %596, align 16
  %775 = shufflevector <8 x float> %774, <8 x float> poison, <8 x i32> zeroinitializer
  %776 = load <8 x float>, ptr %64, align 16
  %777 = shufflevector <8 x float> %776, <8 x float> poison, <8 x i32> zeroinitializer
  %778 = fmul fast <8 x float> %777, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %779 = fmul fast <8 x float> %775, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %780 = fadd fast <8 x float> %779, %778
  %781 = fmul fast <8 x float> %780, %773
  %782 = fmul fast <8 x float> %771, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %783 = fmul fast <8 x float> %769, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %784 = fadd fast <8 x float> %783, %782
  %785 = fmul fast <8 x float> %784, %773
  %786 = fmul fast <8 x float> %767, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %787 = fmul fast <8 x float> %765, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %788 = fadd fast <8 x float> %787, %786
  %789 = fmul fast <8 x float> %788, %773
  %790 = fadd fast <8 x float> %789, %763
  %791 = shufflevector <8 x float> %781, <8 x float> %785, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %792 = shufflevector <8 x float> %790, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %793 = shufflevector <16 x float> %791, <16 x float> %792, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %793, ptr %57, align 16, !tbaa !44
  %794 = getelementptr inbounds i8, ptr %57, i64 96
  %795 = fmul fast <8 x float> %777, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %796 = fmul fast <8 x float> %775, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %797 = fadd fast <8 x float> %796, %795
  %798 = fmul fast <8 x float> %797, %773
  %799 = fmul fast <8 x float> %771, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %800 = fmul fast <8 x float> %769, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %801 = fadd fast <8 x float> %800, %799
  %802 = fmul fast <8 x float> %801, %773
  %803 = fmul fast <8 x float> %767, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %804 = fmul fast <8 x float> %765, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %805 = fadd fast <8 x float> %804, %803
  %806 = fmul fast <8 x float> %805, %773
  %807 = fadd fast <8 x float> %806, %763
  %808 = shufflevector <8 x float> %798, <8 x float> %802, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %809 = shufflevector <8 x float> %807, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %810 = shufflevector <16 x float> %808, <16 x float> %809, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %810, ptr %794, align 16, !tbaa !44
  %811 = getelementptr inbounds i8, ptr %57, i64 192
  %812 = fmul fast <8 x float> %777, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %813 = fmul fast <8 x float> %775, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %814 = fadd fast <8 x float> %813, %812
  %815 = fmul fast <8 x float> %814, %773
  %816 = fmul fast <8 x float> %771, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %817 = fmul fast <8 x float> %769, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %818 = fadd fast <8 x float> %817, %816
  %819 = fmul fast <8 x float> %818, %773
  %820 = fmul fast <8 x float> %767, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %821 = fmul fast <8 x float> %765, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %822 = fadd fast <8 x float> %821, %820
  %823 = fmul fast <8 x float> %822, %773
  %824 = fadd fast <8 x float> %823, %763
  %825 = shufflevector <8 x float> %815, <8 x float> %819, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %826 = shufflevector <8 x float> %824, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %827 = shufflevector <16 x float> %825, <16 x float> %826, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %827, ptr %811, align 16, !tbaa !44
  %828 = getelementptr inbounds i8, ptr %57, i64 288
  %829 = fmul fast <8 x float> %777, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %830 = fmul fast <8 x float> %775, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %831 = fadd fast <8 x float> %830, %829
  %832 = fmul fast <8 x float> %831, %773
  %833 = fmul fast <8 x float> %771, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %834 = fmul fast <8 x float> %769, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %835 = fadd fast <8 x float> %834, %833
  %836 = fmul fast <8 x float> %835, %773
  %837 = fmul fast <8 x float> %767, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %838 = fmul fast <8 x float> %765, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %839 = fadd fast <8 x float> %838, %837
  %840 = fmul fast <8 x float> %839, %773
  %841 = fadd fast <8 x float> %840, %763
  %842 = shufflevector <8 x float> %832, <8 x float> %836, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %843 = shufflevector <8 x float> %841, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %844 = shufflevector <16 x float> %842, <16 x float> %843, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %844, ptr %828, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %57) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %57) #13
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %56) #13
  %845 = fmul fast float %593, 0x3FC3333340000000
  %846 = insertelement <8 x float> poison, float %845, i64 0
  %847 = shufflevector <8 x float> %846, <8 x float> poison, <8 x i32> zeroinitializer
  %848 = load <8 x float>, ptr %598, align 8
  %849 = shufflevector <8 x float> %848, <8 x float> poison, <8 x i32> zeroinitializer
  %850 = load <8 x float>, ptr %595, align 8
  %851 = shufflevector <8 x float> %850, <8 x float> poison, <8 x i32> zeroinitializer
  %852 = load <8 x float>, ptr %597, align 4
  %853 = shufflevector <8 x float> %852, <8 x float> poison, <8 x i32> zeroinitializer
  %854 = load <8 x float>, ptr %594, align 4
  %855 = shufflevector <8 x float> %854, <8 x float> poison, <8 x i32> zeroinitializer
  %856 = insertelement <8 x float> poison, float %583, i64 0
  %857 = shufflevector <8 x float> %856, <8 x float> poison, <8 x i32> zeroinitializer
  %858 = load <8 x float>, ptr %596, align 16
  %859 = shufflevector <8 x float> %858, <8 x float> poison, <8 x i32> zeroinitializer
  %860 = load <8 x float>, ptr %64, align 16
  %861 = shufflevector <8 x float> %860, <8 x float> poison, <8 x i32> zeroinitializer
  %862 = fmul fast <8 x float> %861, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %863 = fmul fast <8 x float> %859, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %864 = fadd fast <8 x float> %863, %862
  %865 = fmul fast <8 x float> %864, %857
  %866 = fmul fast <8 x float> %855, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %867 = fmul fast <8 x float> %853, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %868 = fadd fast <8 x float> %867, %866
  %869 = fmul fast <8 x float> %868, %857
  %870 = fmul fast <8 x float> %851, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %871 = fmul fast <8 x float> %849, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %872 = fadd fast <8 x float> %871, %870
  %873 = fmul fast <8 x float> %872, %857
  %874 = fadd fast <8 x float> %873, %847
  %875 = shufflevector <8 x float> %865, <8 x float> %869, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %876 = shufflevector <8 x float> %874, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %877 = shufflevector <16 x float> %875, <16 x float> %876, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %877, ptr %56, align 16, !tbaa !44
  %878 = getelementptr inbounds i8, ptr %56, i64 96
  %879 = fmul fast <8 x float> %861, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %880 = fmul fast <8 x float> %859, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %881 = fadd fast <8 x float> %880, %879
  %882 = fmul fast <8 x float> %881, %857
  %883 = fmul fast <8 x float> %855, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %884 = fmul fast <8 x float> %853, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %885 = fadd fast <8 x float> %884, %883
  %886 = fmul fast <8 x float> %885, %857
  %887 = fmul fast <8 x float> %851, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %888 = fmul fast <8 x float> %849, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %889 = fadd fast <8 x float> %888, %887
  %890 = fmul fast <8 x float> %889, %857
  %891 = fadd fast <8 x float> %890, %847
  %892 = shufflevector <8 x float> %882, <8 x float> %886, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %893 = shufflevector <8 x float> %891, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %894 = shufflevector <16 x float> %892, <16 x float> %893, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %894, ptr %878, align 16, !tbaa !44
  %895 = getelementptr inbounds i8, ptr %56, i64 192
  %896 = fmul fast <8 x float> %861, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %897 = fmul fast <8 x float> %859, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %898 = fadd fast <8 x float> %897, %896
  %899 = fmul fast <8 x float> %898, %857
  %900 = fmul fast <8 x float> %855, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %901 = fmul fast <8 x float> %853, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %902 = fadd fast <8 x float> %901, %900
  %903 = fmul fast <8 x float> %902, %857
  %904 = fmul fast <8 x float> %851, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %905 = fmul fast <8 x float> %849, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %906 = fadd fast <8 x float> %905, %904
  %907 = fmul fast <8 x float> %906, %857
  %908 = fadd fast <8 x float> %907, %847
  %909 = shufflevector <8 x float> %899, <8 x float> %903, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %910 = shufflevector <8 x float> %908, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %911 = shufflevector <16 x float> %909, <16 x float> %910, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %911, ptr %895, align 16, !tbaa !44
  %912 = getelementptr inbounds i8, ptr %56, i64 288
  %913 = fmul fast <8 x float> %861, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %914 = fmul fast <8 x float> %859, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %915 = fadd fast <8 x float> %914, %913
  %916 = fmul fast <8 x float> %915, %857
  %917 = fmul fast <8 x float> %855, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %918 = fmul fast <8 x float> %853, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %919 = fadd fast <8 x float> %918, %917
  %920 = fmul fast <8 x float> %919, %857
  %921 = fmul fast <8 x float> %851, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %922 = fmul fast <8 x float> %849, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %923 = fadd fast <8 x float> %922, %921
  %924 = fmul fast <8 x float> %923, %857
  %925 = fadd fast <8 x float> %924, %847
  %926 = shufflevector <8 x float> %916, <8 x float> %920, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %927 = shufflevector <8 x float> %925, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %928 = shufflevector <16 x float> %926, <16 x float> %927, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %928, ptr %912, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %56) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %56) #13
  store float 0.000000e+00, ptr %760, align 8, !tbaa !44
  br label %1514

929:                                              ; preds = %582
  %930 = getelementptr inbounds %struct.PartDeflect, ptr %570, i64 0, i32 13
  %931 = load float, ptr %930, align 4, !tbaa !111
  %932 = and i16 %4, 2
  %933 = icmp eq i16 %932, 0
  br i1 %933, label %934, label %1021

934:                                              ; preds = %929
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %53) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %54) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %55) #13
  call void @rgb_uchar_to_float(ptr noundef nonnull %53, ptr noundef %278) #13
  call void @UI_GetThemeColor3fv(i32 noundef 2, ptr noundef nonnull %54) #13
  call void @interp_v3_v3v3(ptr noundef nonnull %55, ptr noundef nonnull %54, ptr noundef nonnull %53, float noundef nofpclass(nan inf) 5.000000e-01) #13
  call void @glColor3fv(ptr noundef nonnull %55) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %55) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %54) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %53) #13
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %52) #13
  %935 = getelementptr inbounds [4 x float], ptr %63, i64 1, i64 2
  %936 = load <8 x float>, ptr %935, align 8
  %937 = shufflevector <8 x float> %936, <8 x float> poison, <8 x i32> zeroinitializer
  %938 = getelementptr inbounds float, ptr %63, i64 2
  %939 = load <8 x float>, ptr %938, align 8
  %940 = shufflevector <8 x float> %939, <8 x float> poison, <8 x i32> zeroinitializer
  %941 = getelementptr inbounds [4 x float], ptr %63, i64 1, i64 1
  %942 = load <8 x float>, ptr %941, align 4
  %943 = shufflevector <8 x float> %942, <8 x float> poison, <8 x i32> zeroinitializer
  %944 = getelementptr inbounds float, ptr %63, i64 1
  %945 = load <8 x float>, ptr %944, align 4
  %946 = shufflevector <8 x float> %945, <8 x float> poison, <8 x i32> zeroinitializer
  %947 = insertelement <8 x float> poison, float %583, i64 0
  %948 = shufflevector <8 x float> %947, <8 x float> poison, <8 x i32> zeroinitializer
  %949 = getelementptr inbounds [4 x float], ptr %63, i64 1
  %950 = load <8 x float>, ptr %949, align 16
  %951 = shufflevector <8 x float> %950, <8 x float> poison, <8 x i32> zeroinitializer
  %952 = load <8 x float>, ptr %63, align 16
  %953 = shufflevector <8 x float> %952, <8 x float> poison, <8 x i32> zeroinitializer
  %954 = fmul fast <8 x float> %953, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %955 = fmul fast <8 x float> %951, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %956 = fadd fast <8 x float> %955, %954
  %957 = fmul fast <8 x float> %956, %948
  %958 = fmul fast <8 x float> %946, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %959 = fmul fast <8 x float> %943, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %960 = fadd fast <8 x float> %959, %958
  %961 = fmul fast <8 x float> %960, %948
  %962 = fmul fast <8 x float> %940, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %963 = fmul fast <8 x float> %937, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %964 = fadd fast <8 x float> %963, %962
  %965 = fmul fast <8 x float> %964, %948
  %966 = shufflevector <8 x float> %957, <8 x float> %961, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %967 = shufflevector <8 x float> %965, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %968 = shufflevector <16 x float> %966, <16 x float> %967, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %968, ptr %52, align 16, !tbaa !44
  %969 = getelementptr inbounds i8, ptr %52, i64 96
  %970 = fmul fast <8 x float> %953, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %971 = fmul fast <8 x float> %951, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %972 = fadd fast <8 x float> %971, %970
  %973 = fmul fast <8 x float> %972, %948
  %974 = fmul fast <8 x float> %946, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %975 = fmul fast <8 x float> %943, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %976 = fadd fast <8 x float> %975, %974
  %977 = fmul fast <8 x float> %976, %948
  %978 = fmul fast <8 x float> %940, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %979 = fmul fast <8 x float> %937, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %980 = fadd fast <8 x float> %979, %978
  %981 = fmul fast <8 x float> %980, %948
  %982 = shufflevector <8 x float> %973, <8 x float> %977, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %983 = shufflevector <8 x float> %981, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %984 = shufflevector <16 x float> %982, <16 x float> %983, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %984, ptr %969, align 16, !tbaa !44
  %985 = getelementptr inbounds i8, ptr %52, i64 192
  %986 = fmul fast <8 x float> %953, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %987 = fmul fast <8 x float> %951, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %988 = fadd fast <8 x float> %987, %986
  %989 = fmul fast <8 x float> %988, %948
  %990 = fmul fast <8 x float> %946, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %991 = fmul fast <8 x float> %943, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %992 = fadd fast <8 x float> %991, %990
  %993 = fmul fast <8 x float> %992, %948
  %994 = fmul fast <8 x float> %940, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %995 = fmul fast <8 x float> %937, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %996 = fadd fast <8 x float> %995, %994
  %997 = fmul fast <8 x float> %996, %948
  %998 = shufflevector <8 x float> %989, <8 x float> %993, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %999 = shufflevector <8 x float> %997, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1000 = shufflevector <16 x float> %998, <16 x float> %999, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1000, ptr %985, align 16, !tbaa !44
  %1001 = getelementptr inbounds i8, ptr %52, i64 288
  %1002 = fmul fast <8 x float> %953, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1003 = fmul fast <8 x float> %951, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1004 = fadd fast <8 x float> %1003, %1002
  %1005 = fmul fast <8 x float> %1004, %948
  %1006 = fmul fast <8 x float> %946, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1007 = fmul fast <8 x float> %943, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1008 = fadd fast <8 x float> %1007, %1006
  %1009 = fmul fast <8 x float> %1008, %948
  %1010 = fmul fast <8 x float> %940, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1011 = fmul fast <8 x float> %937, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1012 = fadd fast <8 x float> %1011, %1010
  %1013 = fmul fast <8 x float> %1012, %948
  %1014 = shufflevector <8 x float> %1005, <8 x float> %1009, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1015 = shufflevector <8 x float> %1013, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1016 = shufflevector <16 x float> %1014, <16 x float> %1015, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1016, ptr %1001, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %52) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %52) #13
  %1017 = fmul fast float %931, 0xBFE2B80340000000
  %1018 = call fast float @llvm.exp2.f32(float %1017)
  %1019 = fmul fast float %1018, 0x3FD99999A0000000
  %1020 = fsub fast float 0x3FECCCCCC0000000, %1019
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %49) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %50) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %51) #13
  call void @rgb_uchar_to_float(ptr noundef nonnull %49, ptr noundef %278) #13
  call void @UI_GetThemeColor3fv(i32 noundef 2, ptr noundef nonnull %50) #13
  call void @interp_v3_v3v3(ptr noundef nonnull %51, ptr noundef nonnull %50, ptr noundef nonnull %49, float noundef nofpclass(nan inf) %1020) #13
  call void @glColor3fv(ptr noundef nonnull %51) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %51) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %50) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %49) #13
  br label %1104

1021:                                             ; preds = %929
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %48) #13
  %1022 = getelementptr inbounds [4 x float], ptr %63, i64 1, i64 2
  %1023 = load <8 x float>, ptr %1022, align 8
  %1024 = shufflevector <8 x float> %1023, <8 x float> poison, <8 x i32> zeroinitializer
  %1025 = getelementptr inbounds float, ptr %63, i64 2
  %1026 = load <8 x float>, ptr %1025, align 8
  %1027 = shufflevector <8 x float> %1026, <8 x float> poison, <8 x i32> zeroinitializer
  %1028 = getelementptr inbounds [4 x float], ptr %63, i64 1, i64 1
  %1029 = load <8 x float>, ptr %1028, align 4
  %1030 = shufflevector <8 x float> %1029, <8 x float> poison, <8 x i32> zeroinitializer
  %1031 = getelementptr inbounds float, ptr %63, i64 1
  %1032 = load <8 x float>, ptr %1031, align 4
  %1033 = shufflevector <8 x float> %1032, <8 x float> poison, <8 x i32> zeroinitializer
  %1034 = insertelement <8 x float> poison, float %583, i64 0
  %1035 = shufflevector <8 x float> %1034, <8 x float> poison, <8 x i32> zeroinitializer
  %1036 = getelementptr inbounds [4 x float], ptr %63, i64 1
  %1037 = load <8 x float>, ptr %1036, align 16
  %1038 = shufflevector <8 x float> %1037, <8 x float> poison, <8 x i32> zeroinitializer
  %1039 = load <8 x float>, ptr %63, align 16
  %1040 = shufflevector <8 x float> %1039, <8 x float> poison, <8 x i32> zeroinitializer
  %1041 = fmul fast <8 x float> %1040, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1042 = fmul fast <8 x float> %1038, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1043 = fadd fast <8 x float> %1042, %1041
  %1044 = fmul fast <8 x float> %1043, %1035
  %1045 = fmul fast <8 x float> %1033, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1046 = fmul fast <8 x float> %1030, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1047 = fadd fast <8 x float> %1046, %1045
  %1048 = fmul fast <8 x float> %1047, %1035
  %1049 = fmul fast <8 x float> %1027, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1050 = fmul fast <8 x float> %1024, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1051 = fadd fast <8 x float> %1050, %1049
  %1052 = fmul fast <8 x float> %1051, %1035
  %1053 = shufflevector <8 x float> %1044, <8 x float> %1048, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1054 = shufflevector <8 x float> %1052, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1055 = shufflevector <16 x float> %1053, <16 x float> %1054, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1055, ptr %48, align 16, !tbaa !44
  %1056 = getelementptr inbounds i8, ptr %48, i64 96
  %1057 = fmul fast <8 x float> %1040, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1058 = fmul fast <8 x float> %1038, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1059 = fadd fast <8 x float> %1058, %1057
  %1060 = fmul fast <8 x float> %1059, %1035
  %1061 = fmul fast <8 x float> %1033, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1062 = fmul fast <8 x float> %1030, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1063 = fadd fast <8 x float> %1062, %1061
  %1064 = fmul fast <8 x float> %1063, %1035
  %1065 = fmul fast <8 x float> %1027, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1066 = fmul fast <8 x float> %1024, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1067 = fadd fast <8 x float> %1066, %1065
  %1068 = fmul fast <8 x float> %1067, %1035
  %1069 = shufflevector <8 x float> %1060, <8 x float> %1064, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1070 = shufflevector <8 x float> %1068, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1071 = shufflevector <16 x float> %1069, <16 x float> %1070, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1071, ptr %1056, align 16, !tbaa !44
  %1072 = getelementptr inbounds i8, ptr %48, i64 192
  %1073 = fmul fast <8 x float> %1040, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1074 = fmul fast <8 x float> %1038, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1075 = fadd fast <8 x float> %1074, %1073
  %1076 = fmul fast <8 x float> %1075, %1035
  %1077 = fmul fast <8 x float> %1033, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1078 = fmul fast <8 x float> %1030, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1079 = fadd fast <8 x float> %1078, %1077
  %1080 = fmul fast <8 x float> %1079, %1035
  %1081 = fmul fast <8 x float> %1027, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1082 = fmul fast <8 x float> %1024, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1083 = fadd fast <8 x float> %1082, %1081
  %1084 = fmul fast <8 x float> %1083, %1035
  %1085 = shufflevector <8 x float> %1076, <8 x float> %1080, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1086 = shufflevector <8 x float> %1084, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1087 = shufflevector <16 x float> %1085, <16 x float> %1086, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1087, ptr %1072, align 16, !tbaa !44
  %1088 = getelementptr inbounds i8, ptr %48, i64 288
  %1089 = fmul fast <8 x float> %1040, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1090 = fmul fast <8 x float> %1038, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1091 = fadd fast <8 x float> %1090, %1089
  %1092 = fmul fast <8 x float> %1091, %1035
  %1093 = fmul fast <8 x float> %1033, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1094 = fmul fast <8 x float> %1030, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1095 = fadd fast <8 x float> %1094, %1093
  %1096 = fmul fast <8 x float> %1095, %1035
  %1097 = fmul fast <8 x float> %1027, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1098 = fmul fast <8 x float> %1024, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1099 = fadd fast <8 x float> %1098, %1097
  %1100 = fmul fast <8 x float> %1099, %1035
  %1101 = shufflevector <8 x float> %1092, <8 x float> %1096, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1102 = shufflevector <8 x float> %1100, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1103 = shufflevector <16 x float> %1101, <16 x float> %1102, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1103, ptr %1088, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %48) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %48) #13
  br label %1104

1104:                                             ; preds = %1021, %934
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %47) #13
  %1105 = getelementptr inbounds float, ptr %63, i64 1
  %1106 = getelementptr inbounds float, ptr %63, i64 2
  %1107 = getelementptr inbounds [4 x float], ptr %63, i64 1
  %1108 = getelementptr inbounds [4 x float], ptr %63, i64 1, i64 1
  %1109 = getelementptr inbounds [4 x float], ptr %63, i64 1, i64 2
  %1110 = load <8 x float>, ptr %1109, align 8
  %1111 = shufflevector <8 x float> %1110, <8 x float> poison, <8 x i32> zeroinitializer
  %1112 = load <8 x float>, ptr %1106, align 8
  %1113 = shufflevector <8 x float> %1112, <8 x float> poison, <8 x i32> zeroinitializer
  %1114 = load <8 x float>, ptr %1108, align 4
  %1115 = shufflevector <8 x float> %1114, <8 x float> poison, <8 x i32> zeroinitializer
  %1116 = load <8 x float>, ptr %1105, align 4
  %1117 = shufflevector <8 x float> %1116, <8 x float> poison, <8 x i32> zeroinitializer
  %1118 = fmul fast float %583, 1.500000e+00
  %1119 = insertelement <8 x float> poison, float %1118, i64 0
  %1120 = shufflevector <8 x float> %1119, <8 x float> poison, <8 x i32> zeroinitializer
  %1121 = load <8 x float>, ptr %1107, align 16
  %1122 = shufflevector <8 x float> %1121, <8 x float> poison, <8 x i32> zeroinitializer
  %1123 = load <8 x float>, ptr %63, align 16
  %1124 = shufflevector <8 x float> %1123, <8 x float> poison, <8 x i32> zeroinitializer
  %1125 = fmul fast <8 x float> %1124, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1126 = fmul fast <8 x float> %1122, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1127 = fadd fast <8 x float> %1126, %1125
  %1128 = fmul fast <8 x float> %1127, %1120
  %1129 = fmul fast <8 x float> %1117, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1130 = fmul fast <8 x float> %1115, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1131 = fadd fast <8 x float> %1130, %1129
  %1132 = fmul fast <8 x float> %1131, %1120
  %1133 = fmul fast <8 x float> %1113, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1134 = fmul fast <8 x float> %1111, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1135 = fadd fast <8 x float> %1134, %1133
  %1136 = fmul fast <8 x float> %1135, %1120
  %1137 = shufflevector <8 x float> %1128, <8 x float> %1132, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1138 = shufflevector <8 x float> %1136, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1139 = shufflevector <16 x float> %1137, <16 x float> %1138, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1139, ptr %47, align 16, !tbaa !44
  %1140 = getelementptr inbounds i8, ptr %47, i64 96
  %1141 = fmul fast <8 x float> %1124, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1142 = fmul fast <8 x float> %1122, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1143 = fadd fast <8 x float> %1142, %1141
  %1144 = fmul fast <8 x float> %1143, %1120
  %1145 = fmul fast <8 x float> %1117, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1146 = fmul fast <8 x float> %1115, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1147 = fadd fast <8 x float> %1146, %1145
  %1148 = fmul fast <8 x float> %1147, %1120
  %1149 = fmul fast <8 x float> %1113, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1150 = fmul fast <8 x float> %1111, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1151 = fadd fast <8 x float> %1150, %1149
  %1152 = fmul fast <8 x float> %1151, %1120
  %1153 = shufflevector <8 x float> %1144, <8 x float> %1148, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1154 = shufflevector <8 x float> %1152, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1155 = shufflevector <16 x float> %1153, <16 x float> %1154, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1155, ptr %1140, align 16, !tbaa !44
  %1156 = getelementptr inbounds i8, ptr %47, i64 192
  %1157 = fmul fast <8 x float> %1124, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1158 = fmul fast <8 x float> %1122, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1159 = fadd fast <8 x float> %1158, %1157
  %1160 = fmul fast <8 x float> %1159, %1120
  %1161 = fmul fast <8 x float> %1117, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1162 = fmul fast <8 x float> %1115, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1163 = fadd fast <8 x float> %1162, %1161
  %1164 = fmul fast <8 x float> %1163, %1120
  %1165 = fmul fast <8 x float> %1113, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1166 = fmul fast <8 x float> %1111, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1167 = fadd fast <8 x float> %1166, %1165
  %1168 = fmul fast <8 x float> %1167, %1120
  %1169 = shufflevector <8 x float> %1160, <8 x float> %1164, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1170 = shufflevector <8 x float> %1168, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1171 = shufflevector <16 x float> %1169, <16 x float> %1170, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1171, ptr %1156, align 16, !tbaa !44
  %1172 = getelementptr inbounds i8, ptr %47, i64 288
  %1173 = fmul fast <8 x float> %1124, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1174 = fmul fast <8 x float> %1122, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1175 = fadd fast <8 x float> %1174, %1173
  %1176 = fmul fast <8 x float> %1175, %1120
  %1177 = fmul fast <8 x float> %1117, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1178 = fmul fast <8 x float> %1115, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1179 = fadd fast <8 x float> %1178, %1177
  %1180 = fmul fast <8 x float> %1179, %1120
  %1181 = fmul fast <8 x float> %1113, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1182 = fmul fast <8 x float> %1111, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1183 = fadd fast <8 x float> %1182, %1181
  %1184 = fmul fast <8 x float> %1183, %1120
  %1185 = shufflevector <8 x float> %1176, <8 x float> %1180, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1186 = shufflevector <8 x float> %1184, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1187 = shufflevector <16 x float> %1185, <16 x float> %1186, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1187, ptr %1172, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %47) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %47) #13
  br i1 %933, label %1188, label %1193

1188:                                             ; preds = %1104
  %1189 = fneg fast float %931
  %1190 = call fast float @llvm.exp2.f32(float %1189)
  %1191 = fmul fast float %1190, 0x3FD99999A0000000
  %1192 = fsub fast float 0x3FECCCCCC0000000, %1191
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %44) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %45) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %46) #13
  call void @rgb_uchar_to_float(ptr noundef nonnull %44, ptr noundef %278) #13
  call void @UI_GetThemeColor3fv(i32 noundef 2, ptr noundef nonnull %45) #13
  call void @interp_v3_v3v3(ptr noundef nonnull %46, ptr noundef nonnull %45, ptr noundef nonnull %44, float noundef nofpclass(nan inf) %1192) #13
  call void @glColor3fv(ptr noundef nonnull %46) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %46) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %45) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %44) #13
  br label %1193

1193:                                             ; preds = %1188, %1104
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %43) #13
  %1194 = load <8 x float>, ptr %1109, align 8
  %1195 = shufflevector <8 x float> %1194, <8 x float> poison, <8 x i32> zeroinitializer
  %1196 = load <8 x float>, ptr %1106, align 8
  %1197 = shufflevector <8 x float> %1196, <8 x float> poison, <8 x i32> zeroinitializer
  %1198 = load <8 x float>, ptr %1108, align 4
  %1199 = shufflevector <8 x float> %1198, <8 x float> poison, <8 x i32> zeroinitializer
  %1200 = load <8 x float>, ptr %1105, align 4
  %1201 = shufflevector <8 x float> %1200, <8 x float> poison, <8 x i32> zeroinitializer
  %1202 = fmul fast float %583, 2.000000e+00
  %1203 = insertelement <8 x float> poison, float %1202, i64 0
  %1204 = shufflevector <8 x float> %1203, <8 x float> poison, <8 x i32> zeroinitializer
  %1205 = load <8 x float>, ptr %1107, align 16
  %1206 = shufflevector <8 x float> %1205, <8 x float> poison, <8 x i32> zeroinitializer
  %1207 = load <8 x float>, ptr %63, align 16
  %1208 = shufflevector <8 x float> %1207, <8 x float> poison, <8 x i32> zeroinitializer
  %1209 = fmul fast <8 x float> %1208, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1210 = fmul fast <8 x float> %1206, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1211 = fadd fast <8 x float> %1210, %1209
  %1212 = fmul fast <8 x float> %1211, %1204
  %1213 = fmul fast <8 x float> %1201, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1214 = fmul fast <8 x float> %1199, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1215 = fadd fast <8 x float> %1214, %1213
  %1216 = fmul fast <8 x float> %1215, %1204
  %1217 = fmul fast <8 x float> %1197, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1218 = fmul fast <8 x float> %1195, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1219 = fadd fast <8 x float> %1218, %1217
  %1220 = fmul fast <8 x float> %1219, %1204
  %1221 = shufflevector <8 x float> %1212, <8 x float> %1216, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1222 = shufflevector <8 x float> %1220, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1223 = shufflevector <16 x float> %1221, <16 x float> %1222, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1223, ptr %43, align 16, !tbaa !44
  %1224 = getelementptr inbounds i8, ptr %43, i64 96
  %1225 = fmul fast <8 x float> %1208, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1226 = fmul fast <8 x float> %1206, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1227 = fadd fast <8 x float> %1226, %1225
  %1228 = fmul fast <8 x float> %1227, %1204
  %1229 = fmul fast <8 x float> %1201, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1230 = fmul fast <8 x float> %1199, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1231 = fadd fast <8 x float> %1230, %1229
  %1232 = fmul fast <8 x float> %1231, %1204
  %1233 = fmul fast <8 x float> %1197, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1234 = fmul fast <8 x float> %1195, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1235 = fadd fast <8 x float> %1234, %1233
  %1236 = fmul fast <8 x float> %1235, %1204
  %1237 = shufflevector <8 x float> %1228, <8 x float> %1232, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1238 = shufflevector <8 x float> %1236, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1239 = shufflevector <16 x float> %1237, <16 x float> %1238, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1239, ptr %1224, align 16, !tbaa !44
  %1240 = getelementptr inbounds i8, ptr %43, i64 192
  %1241 = fmul fast <8 x float> %1208, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1242 = fmul fast <8 x float> %1206, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1243 = fadd fast <8 x float> %1242, %1241
  %1244 = fmul fast <8 x float> %1243, %1204
  %1245 = fmul fast <8 x float> %1201, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1246 = fmul fast <8 x float> %1199, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1247 = fadd fast <8 x float> %1246, %1245
  %1248 = fmul fast <8 x float> %1247, %1204
  %1249 = fmul fast <8 x float> %1197, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1250 = fmul fast <8 x float> %1195, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1251 = fadd fast <8 x float> %1250, %1249
  %1252 = fmul fast <8 x float> %1251, %1204
  %1253 = shufflevector <8 x float> %1244, <8 x float> %1248, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1254 = shufflevector <8 x float> %1252, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1255 = shufflevector <16 x float> %1253, <16 x float> %1254, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1255, ptr %1240, align 16, !tbaa !44
  %1256 = getelementptr inbounds i8, ptr %43, i64 288
  %1257 = fmul fast <8 x float> %1208, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1258 = fmul fast <8 x float> %1206, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1259 = fadd fast <8 x float> %1258, %1257
  %1260 = fmul fast <8 x float> %1259, %1204
  %1261 = fmul fast <8 x float> %1201, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1262 = fmul fast <8 x float> %1199, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1263 = fadd fast <8 x float> %1262, %1261
  %1264 = fmul fast <8 x float> %1263, %1204
  %1265 = fmul fast <8 x float> %1197, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1266 = fmul fast <8 x float> %1195, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1267 = fadd fast <8 x float> %1266, %1265
  %1268 = fmul fast <8 x float> %1267, %1204
  %1269 = shufflevector <8 x float> %1260, <8 x float> %1264, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1270 = shufflevector <8 x float> %1268, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1271 = shufflevector <16 x float> %1269, <16 x float> %1270, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1271, ptr %1256, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %43) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %43) #13
  br label %1514

1272:                                             ; preds = %582
  call void @unit_m4(ptr noundef nonnull %64) #13
  %1273 = getelementptr inbounds %struct.PartDeflect, ptr %570, i64 0, i32 9
  %1274 = load float, ptr %1273, align 4, !tbaa !110
  %1275 = and i16 %4, 2
  %1276 = icmp eq i16 %1275, 0
  br i1 %1276, label %1277, label %1278

1277:                                             ; preds = %1272
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %40) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %41) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %42) #13
  call void @rgb_uchar_to_float(ptr noundef nonnull %40, ptr noundef %278) #13
  call void @UI_GetThemeColor3fv(i32 noundef 2, ptr noundef nonnull %41) #13
  call void @interp_v3_v3v3(ptr noundef nonnull %42, ptr noundef nonnull %41, ptr noundef nonnull %40, float noundef nofpclass(nan inf) 0x3FE6666660000000) #13
  call void @glColor3fv(ptr noundef nonnull %42) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %42) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %41) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %40) #13
  br label %1278

1278:                                             ; preds = %1277, %1272
  %1279 = fcmp fast olt float %1274, 0.000000e+00
  br i1 %1279, label %1280, label %1281

1280:                                             ; preds = %1278
  call fastcc void @drawspiral(ptr noundef nonnull %65, float noundef nofpclass(nan inf) %583, ptr noundef nonnull %64, i32 noundef 1)
  call fastcc void @drawspiral(ptr noundef nonnull %65, float noundef nofpclass(nan inf) %583, ptr noundef nonnull %64, i32 noundef 16)
  br label %1514

1281:                                             ; preds = %1278
  call fastcc void @drawspiral(ptr noundef nonnull %65, float noundef nofpclass(nan inf) %583, ptr noundef nonnull %64, i32 noundef -1)
  call fastcc void @drawspiral(ptr noundef nonnull %65, float noundef nofpclass(nan inf) %583, ptr noundef nonnull %64, i32 noundef -16)
  br label %1514

1282:                                             ; preds = %582
  %1283 = load i16, ptr %406, align 8, !tbaa !75
  %1284 = icmp eq i16 %1283, 2
  br i1 %1284, label %1285, label %1514

1285:                                             ; preds = %1282
  %1286 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 19
  %1287 = load ptr, ptr %1286, align 8, !tbaa !90
  %1288 = getelementptr inbounds %struct.Curve, ptr %1287, i64 0, i32 23
  %1289 = load i32, ptr %1288, align 4, !tbaa !112
  %1290 = and i32 %1289, 8
  %1291 = icmp eq i32 %1290, 0
  br i1 %1291, label %1514, label %1292

1292:                                             ; preds = %1285
  %1293 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 118
  %1294 = load ptr, ptr %1293, align 8, !tbaa !113
  %1295 = getelementptr inbounds %struct.CurveCache, ptr %1294, i64 0, i32 3
  %1296 = load ptr, ptr %1295, align 8, !tbaa !114
  %1297 = icmp eq ptr %1296, null
  br i1 %1297, label %1514, label %1298

1298:                                             ; preds = %1292
  %1299 = load ptr, ptr %1296, align 8, !tbaa !116
  %1300 = icmp eq ptr %1299, null
  br i1 %1300, label %1514, label %1301

1301:                                             ; preds = %1298
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %66) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %67) #13
  %1302 = getelementptr inbounds %struct.PartDeflect, ptr %570, i64 0, i32 9
  %1303 = load float, ptr %1302, align 4, !tbaa !110
  %1304 = and i16 %4, 2
  %1305 = icmp eq i16 %1304, 0
  br i1 %1305, label %1306, label %1307

1306:                                             ; preds = %1301
  call fastcc void @ob_wire_color_blend_theme_id(ptr noundef %278, float noundef nofpclass(nan inf) 5.000000e-01)
  br label %1307

1307:                                             ; preds = %1306, %1301
  call void @setlinestyle(i32 noundef 3) #13
  %1308 = call i32 @where_on_path(ptr noundef nonnull %81, float noundef nofpclass(nan inf) 1.000000e+00, ptr noundef nonnull %66, ptr noundef nonnull %67, ptr noundef null, ptr noundef null, ptr noundef null) #13
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %39) #13
  %1309 = getelementptr inbounds float, ptr %66, i64 2
  %1310 = load float, ptr %1309, align 8, !tbaa !44
  %1311 = insertelement <8 x float> poison, float %1310, i64 0
  %1312 = shufflevector <8 x float> %1311, <8 x float> poison, <8 x i32> zeroinitializer
  %1313 = getelementptr inbounds [4 x float], ptr %63, i64 1, i64 2
  %1314 = load <8 x float>, ptr %1313, align 8
  %1315 = shufflevector <8 x float> %1314, <8 x float> poison, <8 x i32> zeroinitializer
  %1316 = getelementptr inbounds float, ptr %63, i64 2
  %1317 = load <8 x float>, ptr %1316, align 8
  %1318 = shufflevector <8 x float> %1317, <8 x float> poison, <8 x i32> zeroinitializer
  %1319 = getelementptr inbounds float, ptr %66, i64 1
  %1320 = load float, ptr %1319, align 4, !tbaa !44
  %1321 = insertelement <8 x float> poison, float %1320, i64 0
  %1322 = shufflevector <8 x float> %1321, <8 x float> poison, <8 x i32> zeroinitializer
  %1323 = getelementptr inbounds [4 x float], ptr %63, i64 1, i64 1
  %1324 = load <8 x float>, ptr %1323, align 4
  %1325 = shufflevector <8 x float> %1324, <8 x float> poison, <8 x i32> zeroinitializer
  %1326 = getelementptr inbounds float, ptr %63, i64 1
  %1327 = load <8 x float>, ptr %1326, align 4
  %1328 = shufflevector <8 x float> %1327, <8 x float> poison, <8 x i32> zeroinitializer
  %1329 = load <4 x float>, ptr %66, align 16
  %1330 = shufflevector <4 x float> %1329, <4 x float> poison, <8 x i32> zeroinitializer
  %1331 = insertelement <8 x float> poison, float %1303, i64 0
  %1332 = shufflevector <8 x float> %1331, <8 x float> poison, <8 x i32> zeroinitializer
  %1333 = getelementptr inbounds [4 x float], ptr %63, i64 1
  %1334 = load <8 x float>, ptr %1333, align 16
  %1335 = shufflevector <8 x float> %1334, <8 x float> poison, <8 x i32> zeroinitializer
  %1336 = load <8 x float>, ptr %63, align 16
  %1337 = shufflevector <8 x float> %1336, <8 x float> poison, <8 x i32> zeroinitializer
  %1338 = fmul fast <8 x float> %1337, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1339 = fmul fast <8 x float> %1335, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1340 = fadd fast <8 x float> %1339, %1338
  %1341 = fmul fast <8 x float> %1340, %1332
  %1342 = fadd fast <8 x float> %1341, %1330
  %1343 = fmul fast <8 x float> %1328, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1344 = fmul fast <8 x float> %1325, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1345 = fadd fast <8 x float> %1344, %1343
  %1346 = fmul fast <8 x float> %1345, %1332
  %1347 = fadd fast <8 x float> %1346, %1322
  %1348 = fmul fast <8 x float> %1318, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1349 = fmul fast <8 x float> %1315, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1350 = fadd fast <8 x float> %1349, %1348
  %1351 = fmul fast <8 x float> %1350, %1332
  %1352 = fadd fast <8 x float> %1351, %1312
  %1353 = shufflevector <8 x float> %1342, <8 x float> %1347, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1354 = shufflevector <8 x float> %1352, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1355 = shufflevector <16 x float> %1353, <16 x float> %1354, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1355, ptr %39, align 16, !tbaa !44
  %1356 = getelementptr inbounds i8, ptr %39, i64 96
  %1357 = fmul fast <8 x float> %1337, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1358 = fmul fast <8 x float> %1335, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1359 = fadd fast <8 x float> %1358, %1357
  %1360 = fmul fast <8 x float> %1359, %1332
  %1361 = fadd fast <8 x float> %1360, %1330
  %1362 = fmul fast <8 x float> %1328, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1363 = fmul fast <8 x float> %1325, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1364 = fadd fast <8 x float> %1363, %1362
  %1365 = fmul fast <8 x float> %1364, %1332
  %1366 = fadd fast <8 x float> %1365, %1322
  %1367 = fmul fast <8 x float> %1318, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1368 = fmul fast <8 x float> %1315, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1369 = fadd fast <8 x float> %1368, %1367
  %1370 = fmul fast <8 x float> %1369, %1332
  %1371 = fadd fast <8 x float> %1370, %1312
  %1372 = shufflevector <8 x float> %1361, <8 x float> %1366, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1373 = shufflevector <8 x float> %1371, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1374 = shufflevector <16 x float> %1372, <16 x float> %1373, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1374, ptr %1356, align 16, !tbaa !44
  %1375 = getelementptr inbounds i8, ptr %39, i64 192
  %1376 = fmul fast <8 x float> %1337, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1377 = fmul fast <8 x float> %1335, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1378 = fadd fast <8 x float> %1377, %1376
  %1379 = fmul fast <8 x float> %1378, %1332
  %1380 = fadd fast <8 x float> %1379, %1330
  %1381 = fmul fast <8 x float> %1328, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1382 = fmul fast <8 x float> %1325, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1383 = fadd fast <8 x float> %1382, %1381
  %1384 = fmul fast <8 x float> %1383, %1332
  %1385 = fadd fast <8 x float> %1384, %1322
  %1386 = fmul fast <8 x float> %1318, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1387 = fmul fast <8 x float> %1315, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1388 = fadd fast <8 x float> %1387, %1386
  %1389 = fmul fast <8 x float> %1388, %1332
  %1390 = fadd fast <8 x float> %1389, %1312
  %1391 = shufflevector <8 x float> %1380, <8 x float> %1385, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1392 = shufflevector <8 x float> %1390, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1393 = shufflevector <16 x float> %1391, <16 x float> %1392, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1393, ptr %1375, align 16, !tbaa !44
  %1394 = getelementptr inbounds i8, ptr %39, i64 288
  %1395 = fmul fast <8 x float> %1337, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1396 = fmul fast <8 x float> %1335, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1397 = fadd fast <8 x float> %1396, %1395
  %1398 = fmul fast <8 x float> %1397, %1332
  %1399 = fadd fast <8 x float> %1398, %1330
  %1400 = fmul fast <8 x float> %1328, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1401 = fmul fast <8 x float> %1325, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1402 = fadd fast <8 x float> %1401, %1400
  %1403 = fmul fast <8 x float> %1402, %1332
  %1404 = fadd fast <8 x float> %1403, %1322
  %1405 = fmul fast <8 x float> %1318, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1406 = fmul fast <8 x float> %1315, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1407 = fadd fast <8 x float> %1406, %1405
  %1408 = fmul fast <8 x float> %1407, %1332
  %1409 = fadd fast <8 x float> %1408, %1312
  %1410 = shufflevector <8 x float> %1399, <8 x float> %1404, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1411 = shufflevector <8 x float> %1409, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1412 = shufflevector <16 x float> %1410, <16 x float> %1411, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1412, ptr %1394, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %39) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %39) #13
  call void @setlinestyle(i32 noundef 0) #13
  %1413 = call i32 @where_on_path(ptr noundef %81, float noundef nofpclass(nan inf) 0.000000e+00, ptr noundef nonnull %66, ptr noundef nonnull %67, ptr noundef null, ptr noundef null, ptr noundef null) #13
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %38) #13
  %1414 = load float, ptr %1309, align 8, !tbaa !44
  %1415 = insertelement <8 x float> poison, float %1414, i64 0
  %1416 = shufflevector <8 x float> %1415, <8 x float> poison, <8 x i32> zeroinitializer
  %1417 = load <8 x float>, ptr %1313, align 8
  %1418 = shufflevector <8 x float> %1417, <8 x float> poison, <8 x i32> zeroinitializer
  %1419 = load <8 x float>, ptr %1316, align 8
  %1420 = shufflevector <8 x float> %1419, <8 x float> poison, <8 x i32> zeroinitializer
  %1421 = load float, ptr %1319, align 4, !tbaa !44
  %1422 = insertelement <8 x float> poison, float %1421, i64 0
  %1423 = shufflevector <8 x float> %1422, <8 x float> poison, <8 x i32> zeroinitializer
  %1424 = load <8 x float>, ptr %1323, align 4
  %1425 = shufflevector <8 x float> %1424, <8 x float> poison, <8 x i32> zeroinitializer
  %1426 = load <8 x float>, ptr %1326, align 4
  %1427 = shufflevector <8 x float> %1426, <8 x float> poison, <8 x i32> zeroinitializer
  %1428 = load <4 x float>, ptr %66, align 16
  %1429 = shufflevector <4 x float> %1428, <4 x float> poison, <8 x i32> zeroinitializer
  %1430 = insertelement <8 x float> poison, float %1303, i64 0
  %1431 = shufflevector <8 x float> %1430, <8 x float> poison, <8 x i32> zeroinitializer
  %1432 = load <8 x float>, ptr %1333, align 16
  %1433 = shufflevector <8 x float> %1432, <8 x float> poison, <8 x i32> zeroinitializer
  %1434 = load <8 x float>, ptr %63, align 16
  %1435 = shufflevector <8 x float> %1434, <8 x float> poison, <8 x i32> zeroinitializer
  %1436 = fmul fast <8 x float> %1435, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1437 = fmul fast <8 x float> %1433, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1438 = fadd fast <8 x float> %1437, %1436
  %1439 = fmul fast <8 x float> %1438, %1431
  %1440 = fadd fast <8 x float> %1439, %1429
  %1441 = fmul fast <8 x float> %1427, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1442 = fmul fast <8 x float> %1425, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1443 = fadd fast <8 x float> %1442, %1441
  %1444 = fmul fast <8 x float> %1443, %1431
  %1445 = fadd fast <8 x float> %1444, %1423
  %1446 = fmul fast <8 x float> %1420, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1447 = fmul fast <8 x float> %1418, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1448 = fadd fast <8 x float> %1447, %1446
  %1449 = fmul fast <8 x float> %1448, %1431
  %1450 = fadd fast <8 x float> %1449, %1416
  %1451 = shufflevector <8 x float> %1440, <8 x float> %1445, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1452 = shufflevector <8 x float> %1450, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1453 = shufflevector <16 x float> %1451, <16 x float> %1452, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1453, ptr %38, align 16, !tbaa !44
  %1454 = getelementptr inbounds i8, ptr %38, i64 96
  %1455 = fmul fast <8 x float> %1435, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1456 = fmul fast <8 x float> %1433, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1457 = fadd fast <8 x float> %1456, %1455
  %1458 = fmul fast <8 x float> %1457, %1431
  %1459 = fadd fast <8 x float> %1458, %1429
  %1460 = fmul fast <8 x float> %1427, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1461 = fmul fast <8 x float> %1425, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1462 = fadd fast <8 x float> %1461, %1460
  %1463 = fmul fast <8 x float> %1462, %1431
  %1464 = fadd fast <8 x float> %1463, %1423
  %1465 = fmul fast <8 x float> %1420, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1466 = fmul fast <8 x float> %1418, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1467 = fadd fast <8 x float> %1466, %1465
  %1468 = fmul fast <8 x float> %1467, %1431
  %1469 = fadd fast <8 x float> %1468, %1416
  %1470 = shufflevector <8 x float> %1459, <8 x float> %1464, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1471 = shufflevector <8 x float> %1469, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1472 = shufflevector <16 x float> %1470, <16 x float> %1471, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1472, ptr %1454, align 16, !tbaa !44
  %1473 = getelementptr inbounds i8, ptr %38, i64 192
  %1474 = fmul fast <8 x float> %1435, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1475 = fmul fast <8 x float> %1433, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1476 = fadd fast <8 x float> %1475, %1474
  %1477 = fmul fast <8 x float> %1476, %1431
  %1478 = fadd fast <8 x float> %1477, %1429
  %1479 = fmul fast <8 x float> %1427, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1480 = fmul fast <8 x float> %1425, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1481 = fadd fast <8 x float> %1480, %1479
  %1482 = fmul fast <8 x float> %1481, %1431
  %1483 = fadd fast <8 x float> %1482, %1423
  %1484 = fmul fast <8 x float> %1420, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1485 = fmul fast <8 x float> %1418, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1486 = fadd fast <8 x float> %1485, %1484
  %1487 = fmul fast <8 x float> %1486, %1431
  %1488 = fadd fast <8 x float> %1487, %1416
  %1489 = shufflevector <8 x float> %1478, <8 x float> %1483, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1490 = shufflevector <8 x float> %1488, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1491 = shufflevector <16 x float> %1489, <16 x float> %1490, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1491, ptr %1473, align 16, !tbaa !44
  %1492 = getelementptr inbounds i8, ptr %38, i64 288
  %1493 = fmul fast <8 x float> %1435, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1494 = fmul fast <8 x float> %1433, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1495 = fadd fast <8 x float> %1494, %1493
  %1496 = fmul fast <8 x float> %1495, %1431
  %1497 = fadd fast <8 x float> %1496, %1429
  %1498 = fmul fast <8 x float> %1427, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1499 = fmul fast <8 x float> %1425, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1500 = fadd fast <8 x float> %1499, %1498
  %1501 = fmul fast <8 x float> %1500, %1431
  %1502 = fadd fast <8 x float> %1501, %1423
  %1503 = fmul fast <8 x float> %1420, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1504 = fmul fast <8 x float> %1418, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1505 = fadd fast <8 x float> %1504, %1503
  %1506 = fmul fast <8 x float> %1505, %1431
  %1507 = fadd fast <8 x float> %1506, %1416
  %1508 = shufflevector <8 x float> %1497, <8 x float> %1502, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1509 = shufflevector <8 x float> %1507, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1510 = shufflevector <16 x float> %1508, <16 x float> %1509, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1510, ptr %1492, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %38) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %38) #13
  %1511 = load <2 x float>, ptr %66, align 16, !tbaa !44
  store <2 x float> %1511, ptr %65, align 8, !tbaa !44
  %1512 = load float, ptr %1309, align 8, !tbaa !44
  %1513 = getelementptr inbounds float, ptr %65, i64 2
  store float %1512, ptr %1513, align 8, !tbaa !44
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %67) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %66) #13
  br label %1514

1514:                                             ; preds = %1307, %1298, %1292, %1285, %1282, %1281, %1280, %1193, %591, %582
  %1515 = phi float [ 0.000000e+00, %1285 ], [ 0.000000e+00, %1292 ], [ 0.000000e+00, %1298 ], [ %1512, %1307 ], [ 0.000000e+00, %582 ], [ 0.000000e+00, %1280 ], [ 0.000000e+00, %1281 ], [ 0.000000e+00, %1193 ], [ 0.000000e+00, %1282 ], [ 0.000000e+00, %591 ]
  %1516 = phi <2 x float> [ zeroinitializer, %1285 ], [ zeroinitializer, %1292 ], [ zeroinitializer, %1298 ], [ %1511, %1307 ], [ zeroinitializer, %582 ], [ zeroinitializer, %1280 ], [ zeroinitializer, %1281 ], [ zeroinitializer, %1193 ], [ zeroinitializer, %1282 ], [ zeroinitializer, %591 ]
  call void @setlinestyle(i32 noundef 3) #13
  %1517 = and i16 %4, 2
  %1518 = icmp eq i16 %1517, 0
  br i1 %1518, label %1519, label %1520

1519:                                             ; preds = %1514
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %35) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %36) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %37) #13
  call void @rgb_uchar_to_float(ptr noundef nonnull %35, ptr noundef %278) #13
  call void @UI_GetThemeColor3fv(i32 noundef 2, ptr noundef nonnull %36) #13
  call void @interp_v3_v3v3(ptr noundef nonnull %37, ptr noundef nonnull %36, ptr noundef nonnull %35, float noundef nofpclass(nan inf) 5.000000e-01) #13
  call void @glColor3fv(ptr noundef nonnull %37) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %37) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %36) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %35) #13
  br label %1520

1520:                                             ; preds = %1519, %1514
  %1521 = getelementptr inbounds %struct.PartDeflect, ptr %570, i64 0, i32 3
  %1522 = load i16, ptr %1521, align 8, !tbaa !118
  switch i16 %1522, label %1845 [
    i16 0, label %1523
    i16 1, label %1734
    i16 2, label %1784
  ]

1523:                                             ; preds = %1520
  %1524 = load i32, ptr %570, align 8, !tbaa !119
  %1525 = and i32 %1524, 1
  %1526 = icmp eq i32 %1525, 0
  br i1 %1526, label %1629, label %1527

1527:                                             ; preds = %1523
  %1528 = getelementptr inbounds %struct.PartDeflect, ptr %570, i64 0, i32 14
  %1529 = load float, ptr %1528, align 8, !tbaa !120
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %34) #13
  %1530 = insertelement <8 x float> poison, float %1515, i64 0
  %1531 = shufflevector <8 x float> %1530, <8 x float> poison, <8 x i32> zeroinitializer
  %1532 = getelementptr inbounds [4 x float], ptr %63, i64 1, i64 2
  %1533 = load <8 x float>, ptr %1532, align 8
  %1534 = shufflevector <8 x float> %1533, <8 x float> poison, <8 x i32> zeroinitializer
  %1535 = getelementptr inbounds float, ptr %63, i64 2
  %1536 = load <8 x float>, ptr %1535, align 8
  %1537 = shufflevector <8 x float> %1536, <8 x float> poison, <8 x i32> zeroinitializer
  %1538 = shufflevector <2 x float> %1516, <2 x float> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %1539 = getelementptr inbounds [4 x float], ptr %63, i64 1, i64 1
  %1540 = load <8 x float>, ptr %1539, align 4
  %1541 = shufflevector <8 x float> %1540, <8 x float> poison, <8 x i32> zeroinitializer
  %1542 = getelementptr inbounds float, ptr %63, i64 1
  %1543 = load <8 x float>, ptr %1542, align 4
  %1544 = shufflevector <8 x float> %1543, <8 x float> poison, <8 x i32> zeroinitializer
  %1545 = shufflevector <2 x float> %1516, <2 x float> poison, <8 x i32> zeroinitializer
  %1546 = insertelement <8 x float> poison, float %1529, i64 0
  %1547 = shufflevector <8 x float> %1546, <8 x float> poison, <8 x i32> zeroinitializer
  %1548 = getelementptr inbounds [4 x float], ptr %63, i64 1
  %1549 = load <8 x float>, ptr %1548, align 16
  %1550 = shufflevector <8 x float> %1549, <8 x float> poison, <8 x i32> zeroinitializer
  %1551 = load <8 x float>, ptr %63, align 16
  %1552 = shufflevector <8 x float> %1551, <8 x float> poison, <8 x i32> zeroinitializer
  %1553 = fmul fast <8 x float> %1552, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1554 = fmul fast <8 x float> %1550, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1555 = fadd fast <8 x float> %1554, %1553
  %1556 = fmul fast <8 x float> %1555, %1547
  %1557 = fadd fast <8 x float> %1556, %1545
  %1558 = fmul fast <8 x float> %1544, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1559 = fmul fast <8 x float> %1541, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1560 = fadd fast <8 x float> %1559, %1558
  %1561 = fmul fast <8 x float> %1560, %1547
  %1562 = fadd fast <8 x float> %1561, %1538
  %1563 = fmul fast <8 x float> %1537, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1564 = fmul fast <8 x float> %1534, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1565 = fadd fast <8 x float> %1564, %1563
  %1566 = fmul fast <8 x float> %1565, %1547
  %1567 = fadd fast <8 x float> %1566, %1531
  %1568 = shufflevector <8 x float> %1557, <8 x float> %1562, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1569 = shufflevector <8 x float> %1567, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1570 = shufflevector <16 x float> %1568, <16 x float> %1569, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1570, ptr %34, align 16, !tbaa !44
  %1571 = getelementptr inbounds i8, ptr %34, i64 96
  %1572 = fmul fast <8 x float> %1552, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1573 = fmul fast <8 x float> %1550, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1574 = fadd fast <8 x float> %1573, %1572
  %1575 = fmul fast <8 x float> %1574, %1547
  %1576 = fadd fast <8 x float> %1575, %1545
  %1577 = fmul fast <8 x float> %1544, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1578 = fmul fast <8 x float> %1541, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1579 = fadd fast <8 x float> %1578, %1577
  %1580 = fmul fast <8 x float> %1579, %1547
  %1581 = fadd fast <8 x float> %1580, %1538
  %1582 = fmul fast <8 x float> %1537, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1583 = fmul fast <8 x float> %1534, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1584 = fadd fast <8 x float> %1583, %1582
  %1585 = fmul fast <8 x float> %1584, %1547
  %1586 = fadd fast <8 x float> %1585, %1531
  %1587 = shufflevector <8 x float> %1576, <8 x float> %1581, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1588 = shufflevector <8 x float> %1586, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1589 = shufflevector <16 x float> %1587, <16 x float> %1588, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1589, ptr %1571, align 16, !tbaa !44
  %1590 = getelementptr inbounds i8, ptr %34, i64 192
  %1591 = fmul fast <8 x float> %1552, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1592 = fmul fast <8 x float> %1550, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1593 = fadd fast <8 x float> %1592, %1591
  %1594 = fmul fast <8 x float> %1593, %1547
  %1595 = fadd fast <8 x float> %1594, %1545
  %1596 = fmul fast <8 x float> %1544, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1597 = fmul fast <8 x float> %1541, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1598 = fadd fast <8 x float> %1597, %1596
  %1599 = fmul fast <8 x float> %1598, %1547
  %1600 = fadd fast <8 x float> %1599, %1538
  %1601 = fmul fast <8 x float> %1537, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1602 = fmul fast <8 x float> %1534, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1603 = fadd fast <8 x float> %1602, %1601
  %1604 = fmul fast <8 x float> %1603, %1547
  %1605 = fadd fast <8 x float> %1604, %1531
  %1606 = shufflevector <8 x float> %1595, <8 x float> %1600, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1607 = shufflevector <8 x float> %1605, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1608 = shufflevector <16 x float> %1606, <16 x float> %1607, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1608, ptr %1590, align 16, !tbaa !44
  %1609 = getelementptr inbounds i8, ptr %34, i64 288
  %1610 = fmul fast <8 x float> %1552, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1611 = fmul fast <8 x float> %1550, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1612 = fadd fast <8 x float> %1611, %1610
  %1613 = fmul fast <8 x float> %1612, %1547
  %1614 = fadd fast <8 x float> %1613, %1545
  %1615 = fmul fast <8 x float> %1544, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1616 = fmul fast <8 x float> %1541, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1617 = fadd fast <8 x float> %1616, %1615
  %1618 = fmul fast <8 x float> %1617, %1547
  %1619 = fadd fast <8 x float> %1618, %1538
  %1620 = fmul fast <8 x float> %1537, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1621 = fmul fast <8 x float> %1534, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1622 = fadd fast <8 x float> %1621, %1620
  %1623 = fmul fast <8 x float> %1622, %1547
  %1624 = fadd fast <8 x float> %1623, %1531
  %1625 = shufflevector <8 x float> %1614, <8 x float> %1619, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1626 = shufflevector <8 x float> %1624, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1627 = shufflevector <16 x float> %1625, <16 x float> %1626, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1627, ptr %1609, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %34) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %34) #13
  %1628 = load i32, ptr %570, align 8, !tbaa !119
  br label %1629

1629:                                             ; preds = %1527, %1523
  %1630 = phi i32 [ %1628, %1527 ], [ %1524, %1523 ]
  %1631 = and i32 %1630, 256
  %1632 = icmp eq i32 %1631, 0
  br i1 %1632, label %1845, label %1633

1633:                                             ; preds = %1629
  %1634 = getelementptr inbounds %struct.PartDeflect, ptr %570, i64 0, i32 15
  %1635 = load float, ptr %1634, align 4, !tbaa !121
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %33) #13
  %1636 = insertelement <8 x float> poison, float %1515, i64 0
  %1637 = shufflevector <8 x float> %1636, <8 x float> poison, <8 x i32> zeroinitializer
  %1638 = getelementptr inbounds [4 x float], ptr %63, i64 1, i64 2
  %1639 = load <8 x float>, ptr %1638, align 8
  %1640 = shufflevector <8 x float> %1639, <8 x float> poison, <8 x i32> zeroinitializer
  %1641 = getelementptr inbounds float, ptr %63, i64 2
  %1642 = load <8 x float>, ptr %1641, align 8
  %1643 = shufflevector <8 x float> %1642, <8 x float> poison, <8 x i32> zeroinitializer
  %1644 = shufflevector <2 x float> %1516, <2 x float> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %1645 = getelementptr inbounds [4 x float], ptr %63, i64 1, i64 1
  %1646 = load <8 x float>, ptr %1645, align 4
  %1647 = shufflevector <8 x float> %1646, <8 x float> poison, <8 x i32> zeroinitializer
  %1648 = getelementptr inbounds float, ptr %63, i64 1
  %1649 = load <8 x float>, ptr %1648, align 4
  %1650 = shufflevector <8 x float> %1649, <8 x float> poison, <8 x i32> zeroinitializer
  %1651 = shufflevector <2 x float> %1516, <2 x float> poison, <8 x i32> zeroinitializer
  %1652 = insertelement <8 x float> poison, float %1635, i64 0
  %1653 = shufflevector <8 x float> %1652, <8 x float> poison, <8 x i32> zeroinitializer
  %1654 = getelementptr inbounds [4 x float], ptr %63, i64 1
  %1655 = load <8 x float>, ptr %1654, align 16
  %1656 = shufflevector <8 x float> %1655, <8 x float> poison, <8 x i32> zeroinitializer
  %1657 = load <8 x float>, ptr %63, align 16
  %1658 = shufflevector <8 x float> %1657, <8 x float> poison, <8 x i32> zeroinitializer
  %1659 = fmul fast <8 x float> %1658, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1660 = fmul fast <8 x float> %1656, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1661 = fadd fast <8 x float> %1660, %1659
  %1662 = fmul fast <8 x float> %1661, %1653
  %1663 = fadd fast <8 x float> %1662, %1651
  %1664 = fmul fast <8 x float> %1650, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1665 = fmul fast <8 x float> %1647, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1666 = fadd fast <8 x float> %1665, %1664
  %1667 = fmul fast <8 x float> %1666, %1653
  %1668 = fadd fast <8 x float> %1667, %1644
  %1669 = fmul fast <8 x float> %1643, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %1670 = fmul fast <8 x float> %1640, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %1671 = fadd fast <8 x float> %1670, %1669
  %1672 = fmul fast <8 x float> %1671, %1653
  %1673 = fadd fast <8 x float> %1672, %1637
  %1674 = shufflevector <8 x float> %1663, <8 x float> %1668, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1675 = shufflevector <8 x float> %1673, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1676 = shufflevector <16 x float> %1674, <16 x float> %1675, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1676, ptr %33, align 16, !tbaa !44
  %1677 = getelementptr inbounds i8, ptr %33, i64 96
  %1678 = fmul fast <8 x float> %1658, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1679 = fmul fast <8 x float> %1656, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1680 = fadd fast <8 x float> %1679, %1678
  %1681 = fmul fast <8 x float> %1680, %1653
  %1682 = fadd fast <8 x float> %1681, %1651
  %1683 = fmul fast <8 x float> %1650, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1684 = fmul fast <8 x float> %1647, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1685 = fadd fast <8 x float> %1684, %1683
  %1686 = fmul fast <8 x float> %1685, %1653
  %1687 = fadd fast <8 x float> %1686, %1644
  %1688 = fmul fast <8 x float> %1643, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %1689 = fmul fast <8 x float> %1640, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %1690 = fadd fast <8 x float> %1689, %1688
  %1691 = fmul fast <8 x float> %1690, %1653
  %1692 = fadd fast <8 x float> %1691, %1637
  %1693 = shufflevector <8 x float> %1682, <8 x float> %1687, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1694 = shufflevector <8 x float> %1692, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1695 = shufflevector <16 x float> %1693, <16 x float> %1694, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1695, ptr %1677, align 16, !tbaa !44
  %1696 = getelementptr inbounds i8, ptr %33, i64 192
  %1697 = fmul fast <8 x float> %1658, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1698 = fmul fast <8 x float> %1656, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1699 = fadd fast <8 x float> %1698, %1697
  %1700 = fmul fast <8 x float> %1699, %1653
  %1701 = fadd fast <8 x float> %1700, %1651
  %1702 = fmul fast <8 x float> %1650, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1703 = fmul fast <8 x float> %1647, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1704 = fadd fast <8 x float> %1703, %1702
  %1705 = fmul fast <8 x float> %1704, %1653
  %1706 = fadd fast <8 x float> %1705, %1644
  %1707 = fmul fast <8 x float> %1643, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %1708 = fmul fast <8 x float> %1640, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %1709 = fadd fast <8 x float> %1708, %1707
  %1710 = fmul fast <8 x float> %1709, %1653
  %1711 = fadd fast <8 x float> %1710, %1637
  %1712 = shufflevector <8 x float> %1701, <8 x float> %1706, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1713 = shufflevector <8 x float> %1711, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1714 = shufflevector <16 x float> %1712, <16 x float> %1713, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1714, ptr %1696, align 16, !tbaa !44
  %1715 = getelementptr inbounds i8, ptr %33, i64 288
  %1716 = fmul fast <8 x float> %1658, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1717 = fmul fast <8 x float> %1656, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1718 = fadd fast <8 x float> %1717, %1716
  %1719 = fmul fast <8 x float> %1718, %1653
  %1720 = fadd fast <8 x float> %1719, %1651
  %1721 = fmul fast <8 x float> %1650, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1722 = fmul fast <8 x float> %1647, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1723 = fadd fast <8 x float> %1722, %1721
  %1724 = fmul fast <8 x float> %1723, %1653
  %1725 = fadd fast <8 x float> %1724, %1644
  %1726 = fmul fast <8 x float> %1643, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %1727 = fmul fast <8 x float> %1640, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %1728 = fadd fast <8 x float> %1727, %1726
  %1729 = fmul fast <8 x float> %1728, %1653
  %1730 = fadd fast <8 x float> %1729, %1637
  %1731 = shufflevector <8 x float> %1720, <8 x float> %1725, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1732 = shufflevector <8 x float> %1730, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1733 = shufflevector <16 x float> %1731, <16 x float> %1732, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %1733, ptr %1715, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %33) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %33) #13
  br label %1845

1734:                                             ; preds = %1520
  call void @unit_m4(ptr noundef nonnull %64) #13
  store <2 x float> zeroinitializer, ptr %65, align 8, !tbaa !44
  %1735 = load i32, ptr %570, align 8, !tbaa !119
  %1736 = and i32 %1735, 512
  %1737 = icmp eq i32 %1736, 0
  br i1 %1737, label %1741, label %1738

1738:                                             ; preds = %1734
  %1739 = getelementptr inbounds %struct.PartDeflect, ptr %570, i64 0, i32 17
  %1740 = load float, ptr %1739, align 4, !tbaa !122
  br label %1741

1741:                                             ; preds = %1738, %1734
  %1742 = phi fast float [ %1740, %1738 ], [ 1.000000e+00, %1734 ]
  %1743 = and i32 %1735, 1
  %1744 = icmp eq i32 %1743, 0
  br i1 %1744, label %1748, label %1745

1745:                                             ; preds = %1741
  %1746 = getelementptr inbounds %struct.PartDeflect, ptr %570, i64 0, i32 14
  %1747 = load float, ptr %1746, align 8, !tbaa !120
  br label %1748

1748:                                             ; preds = %1745, %1741
  %1749 = phi fast float [ %1747, %1745 ], [ 0.000000e+00, %1741 ]
  %1750 = getelementptr inbounds [3 x float], ptr %65, i64 0, i64 2
  store float %1749, ptr %1750, align 8, !tbaa !44
  %1751 = and i32 %1735, 513
  %1752 = icmp eq i32 %1751, 0
  br i1 %1752, label %1760, label %1753

1753:                                             ; preds = %1748
  %1754 = and i32 %1735, 32
  %1755 = icmp eq i32 %1754, 0
  %1756 = fmul fast float %1749, -2.000000e+00
  %1757 = fneg fast float %1749
  %1758 = select fast i1 %1755, float %1756, float %1757
  call fastcc void @drawtube(ptr noundef nonnull %65, float noundef nofpclass(nan inf) %1742, float noundef nofpclass(nan inf) %1758, ptr noundef nonnull %64)
  %1759 = load i32, ptr %570, align 8, !tbaa !119
  br label %1760

1760:                                             ; preds = %1753, %1748
  %1761 = phi i32 [ %1759, %1753 ], [ %1735, %1748 ]
  %1762 = and i32 %1761, 1024
  %1763 = icmp eq i32 %1762, 0
  br i1 %1763, label %1767, label %1764

1764:                                             ; preds = %1760
  %1765 = getelementptr inbounds %struct.PartDeflect, ptr %570, i64 0, i32 18
  %1766 = load float, ptr %1765, align 8, !tbaa !123
  br label %1767

1767:                                             ; preds = %1764, %1760
  %1768 = phi fast float [ %1766, %1764 ], [ 1.000000e+00, %1760 ]
  %1769 = and i32 %1761, 256
  %1770 = icmp eq i32 %1769, 0
  br i1 %1770, label %1774, label %1771

1771:                                             ; preds = %1767
  %1772 = getelementptr inbounds %struct.PartDeflect, ptr %570, i64 0, i32 15
  %1773 = load float, ptr %1772, align 4, !tbaa !121
  br label %1774

1774:                                             ; preds = %1771, %1767
  %1775 = phi fast float [ %1773, %1771 ], [ 0.000000e+00, %1767 ]
  store float %1775, ptr %1750, align 8, !tbaa !44
  %1776 = and i32 %1761, 1280
  %1777 = icmp eq i32 %1776, 0
  br i1 %1777, label %1845, label %1778

1778:                                             ; preds = %1774
  %1779 = and i32 %1761, 32
  %1780 = icmp eq i32 %1779, 0
  %1781 = fmul fast float %1775, -2.000000e+00
  %1782 = fneg fast float %1775
  %1783 = select fast i1 %1780, float %1781, float %1782
  call fastcc void @drawtube(ptr noundef nonnull %65, float noundef nofpclass(nan inf) %1768, float noundef nofpclass(nan inf) %1783, ptr noundef nonnull %64)
  br label %1845

1784:                                             ; preds = %1520
  call void @unit_m4(ptr noundef nonnull %64) #13
  %1785 = load i32, ptr %570, align 8, !tbaa !119
  %1786 = and i32 %1785, 512
  %1787 = icmp eq i32 %1786, 0
  br i1 %1787, label %1792, label %1788

1788:                                             ; preds = %1784
  %1789 = getelementptr inbounds %struct.PartDeflect, ptr %570, i64 0, i32 17
  %1790 = load float, ptr %1789, align 4, !tbaa !122
  %1791 = fmul fast float %1790, 0x3F91DF46A0000000
  br label %1792

1792:                                             ; preds = %1788, %1784
  %1793 = phi float [ %1791, %1788 ], [ 0x3F91DF46A0000000, %1784 ]
  %1794 = and i32 %1785, 1
  %1795 = icmp eq i32 %1794, 0
  br i1 %1795, label %1799, label %1796

1796:                                             ; preds = %1792
  %1797 = getelementptr inbounds %struct.PartDeflect, ptr %570, i64 0, i32 14
  %1798 = load float, ptr %1797, align 8, !tbaa !120
  br label %1799

1799:                                             ; preds = %1796, %1792
  %1800 = phi fast float [ %1798, %1796 ], [ 0.000000e+00, %1792 ]
  %1801 = and i32 %1785, 513
  %1802 = icmp eq i32 %1801, 0
  br i1 %1802, label %1815, label %1803

1803:                                             ; preds = %1799
  %1804 = call fast float @llvm.sin.f32(float %1793)
  %1805 = fmul fast float %1800, %1804
  %1806 = call fast float @llvm.cos.f32(float %1793)
  %1807 = fmul fast float %1800, %1806
  call fastcc void @drawcone(ptr noundef nonnull %65, float noundef nofpclass(nan inf) %1805, float noundef nofpclass(nan inf) %1807, ptr noundef nonnull %64)
  %1808 = load i32, ptr %570, align 8, !tbaa !119
  %1809 = and i32 %1808, 32
  %1810 = icmp eq i32 %1809, 0
  br i1 %1810, label %1811, label %1815

1811:                                             ; preds = %1803
  %1812 = fneg fast float %1806
  %1813 = fmul fast float %1800, %1812
  call fastcc void @drawcone(ptr noundef nonnull %65, float noundef nofpclass(nan inf) %1805, float noundef nofpclass(nan inf) %1813, ptr noundef nonnull %64)
  %1814 = load i32, ptr %570, align 8, !tbaa !119
  br label %1815

1815:                                             ; preds = %1811, %1803, %1799
  %1816 = phi i32 [ %1808, %1803 ], [ %1814, %1811 ], [ %1785, %1799 ]
  %1817 = and i32 %1816, 1024
  %1818 = icmp eq i32 %1817, 0
  br i1 %1818, label %1823, label %1819

1819:                                             ; preds = %1815
  %1820 = getelementptr inbounds %struct.PartDeflect, ptr %570, i64 0, i32 18
  %1821 = load float, ptr %1820, align 8, !tbaa !123
  %1822 = fmul fast float %1821, 0x3F91DF46A0000000
  br label %1823

1823:                                             ; preds = %1819, %1815
  %1824 = phi float [ %1822, %1819 ], [ 0x3F91DF46A0000000, %1815 ]
  %1825 = and i32 %1816, 256
  %1826 = icmp eq i32 %1825, 0
  br i1 %1826, label %1830, label %1827

1827:                                             ; preds = %1823
  %1828 = getelementptr inbounds %struct.PartDeflect, ptr %570, i64 0, i32 15
  %1829 = load float, ptr %1828, align 4, !tbaa !121
  br label %1830

1830:                                             ; preds = %1827, %1823
  %1831 = phi fast float [ %1829, %1827 ], [ 0.000000e+00, %1823 ]
  %1832 = and i32 %1816, 1280
  %1833 = icmp eq i32 %1832, 0
  br i1 %1833, label %1845, label %1834

1834:                                             ; preds = %1830
  %1835 = call fast float @llvm.sin.f32(float %1824)
  %1836 = fmul fast float %1831, %1835
  %1837 = call fast float @llvm.cos.f32(float %1824)
  %1838 = fmul fast float %1831, %1837
  call fastcc void @drawcone(ptr noundef nonnull %65, float noundef nofpclass(nan inf) %1836, float noundef nofpclass(nan inf) %1838, ptr noundef nonnull %64)
  %1839 = load i32, ptr %570, align 8, !tbaa !119
  %1840 = and i32 %1839, 32
  %1841 = icmp eq i32 %1840, 0
  br i1 %1841, label %1842, label %1845

1842:                                             ; preds = %1834
  %1843 = fneg fast float %1837
  %1844 = fmul fast float %1831, %1843
  call fastcc void @drawcone(ptr noundef nonnull %65, float noundef nofpclass(nan inf) %1836, float noundef nofpclass(nan inf) %1844, ptr noundef nonnull %64)
  br label %1845

1845:                                             ; preds = %1520, %1629, %1633, %1774, %1778, %1830, %1834, %1842
  call void @setlinestyle(i32 noundef 0) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %65) #13
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %64) #13
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %63) #13
  br label %1846

1846:                                             ; preds = %424, %451, %486, %495, %502, %498, %507, %509, %522, %543, %477, %545, %1845, %572, %568, %369
  %1847 = phi i8 [ 0, %369 ], [ %546, %545 ], [ %552, %1845 ], [ %552, %572 ], [ %552, %568 ], [ 0, %477 ], [ 0, %543 ], [ 0, %522 ], [ 0, %509 ], [ 0, %507 ], [ 0, %498 ], [ 0, %502 ], [ 0, %495 ], [ 0, %486 ], [ 0, %451 ], [ 0, %424 ]
  %1848 = phi i8 [ %315, %369 ], [ %547, %545 ], [ %551, %1845 ], [ %551, %572 ], [ %551, %568 ], [ 1, %477 ], [ %315, %543 ], [ %315, %522 ], [ %315, %509 ], [ %315, %507 ], [ %315, %498 ], [ %315, %502 ], [ %315, %495 ], [ %315, %486 ], [ 1, %451 ], [ 1, %424 ]
  %1849 = phi i16 [ %370, %369 ], [ %548, %545 ], [ %550, %1845 ], [ %550, %572 ], [ %550, %568 ], [ %370, %477 ], [ %370, %543 ], [ %370, %522 ], [ %370, %509 ], [ %370, %507 ], [ %370, %498 ], [ %370, %502 ], [ %370, %495 ], [ %370, %486 ], [ %370, %451 ], [ %370, %424 ]
  %1850 = load ptr, ptr %100, align 8, !tbaa !61
  %1851 = icmp eq ptr %1850, null
  br i1 %1851, label %3023, label %1852

1852:                                             ; preds = %1846
  %1853 = load ptr, ptr %103, align 8, !tbaa !62
  %1854 = icmp eq ptr %81, %1853
  br i1 %1854, label %3023, label %1855

1855:                                             ; preds = %1852
  br i1 %208, label %1856, label %1862

1856:                                             ; preds = %1855
  %1857 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 53
  %1858 = load i16, ptr %1857, align 4, !tbaa !80
  %1859 = and i16 %1858, 1
  %1860 = icmp eq i16 %1859, 0
  br i1 %1860, label %1862, label %1861

1861:                                             ; preds = %1856
  call void @cpack(i32 noundef 16777215) #13
  br label %1862

1862:                                             ; preds = %1856, %1861, %1855
  %1863 = getelementptr inbounds %struct.RegionView3D, ptr %83, i64 0, i32 1
  call void @glLoadMatrixf(ptr noundef nonnull %1863) #13
  %1864 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %1865 = add nsw i32 %1864, 1
  store i32 %1865, ptr @g_v3d_string_level, align 4, !tbaa !47
  %1866 = load ptr, ptr %100, align 8, !tbaa !49
  %1867 = icmp eq ptr %1866, null
  br i1 %1867, label %3019, label %1868

1868:                                             ; preds = %1862
  %1869 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 27
  %1870 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 22, i32 5
  %1871 = getelementptr inbounds i8, ptr %22, i64 32
  %1872 = getelementptr inbounds %struct.ParticleSimulationData, ptr %22, i64 0, i32 1
  %1873 = getelementptr inbounds %struct.ParticleSimulationData, ptr %22, i64 0, i32 2
  %1874 = getelementptr inbounds %struct.ParticleSimulationData, ptr %22, i64 0, i32 3
  %1875 = getelementptr inbounds float, ptr %26, i64 2
  %1876 = and i16 %4, 2
  %1877 = icmp eq i16 %1876, 0
  %1878 = getelementptr inbounds %struct.Base, ptr %3, i64 0, i32 4
  %1879 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 15
  %1880 = getelementptr inbounds %struct.ParticleBillboardData, ptr %21, i64 0, i32 13
  %1881 = getelementptr inbounds %struct.ParticleBillboardData, ptr %21, i64 0, i32 15
  %1882 = getelementptr inbounds %struct.ParticleBillboardData, ptr %21, i64 0, i32 9
  %1883 = getelementptr inbounds %struct.RegionView3D, ptr %83, i64 0, i32 2
  %1884 = getelementptr inbounds float, ptr %23, i64 1
  %1885 = getelementptr inbounds float, ptr %23, i64 2
  %1886 = getelementptr inbounds [4 x [4 x float]], ptr %23, i64 0, i64 1
  %1887 = getelementptr inbounds [4 x [4 x float]], ptr %23, i64 0, i64 1, i64 1
  %1888 = getelementptr inbounds [4 x [4 x float]], ptr %23, i64 0, i64 1, i64 2
  %1889 = getelementptr inbounds %struct.ParticleKey, ptr %20, i64 0, i32 4
  %1890 = getelementptr inbounds float, ptr %20, i64 1
  %1891 = getelementptr inbounds float, ptr %20, i64 2
  %1892 = getelementptr inbounds %struct.ParticleKey, ptr %20, i64 0, i32 1
  %1893 = getelementptr inbounds %struct.ParticleKey, ptr %20, i64 0, i32 1, i64 2
  %1894 = getelementptr inbounds float, ptr %31, i64 2
  %1895 = zext i8 %1848 to i32
  %1896 = icmp ugt i8 %1848, 2
  %1897 = getelementptr inbounds float, ptr %32, i64 2
  %1898 = getelementptr inbounds [2 x i32], ptr %27, i64 0, i64 1
  %1899 = getelementptr inbounds i8, ptr %19, i64 96
  %1900 = getelementptr inbounds i8, ptr %19, i64 192
  %1901 = getelementptr inbounds i8, ptr %19, i64 288
  br label %1902

1902:                                             ; preds = %1868, %3016
  %1903 = phi ptr [ %1866, %1868 ], [ %3017, %3016 ]
  %1904 = load i32, ptr %1869, align 8, !tbaa !40
  %1905 = and i32 %1904, 32
  %1906 = icmp ne i32 %1905, 0
  %1907 = select i1 %1906, i1 %92, i1 false
  br i1 %1907, label %1908, label %1928

1908:                                             ; preds = %1902
  %1909 = call ptr @PE_create_current(ptr noundef %0, ptr noundef nonnull %81) #13
  %1910 = icmp eq ptr %1909, null
  br i1 %1910, label %1928, label %1911

1911:                                             ; preds = %1908
  %1912 = getelementptr inbounds %struct.PTCacheEdit, ptr %1909, i64 0, i32 4
  %1913 = load ptr, ptr %1912, align 8, !tbaa !124
  %1914 = icmp eq ptr %1913, %1903
  br i1 %1914, label %1915, label %1928

1915:                                             ; preds = %1911
  %1916 = getelementptr inbounds %struct.ParticleSystem, ptr %1903, i64 0, i32 25
  %1917 = load i32, ptr %1916, align 4, !tbaa !127
  %1918 = and i32 %1917, 32
  %1919 = icmp eq i32 %1918, 0
  br i1 %1919, label %1921, label %1920

1920:                                             ; preds = %1915
  call void @PE_update_object(ptr noundef %0, ptr noundef nonnull %81, i32 noundef 0) #13
  br label %1921

1921:                                             ; preds = %1920, %1915
  %1922 = getelementptr inbounds %struct.PTCacheEdit, ptr %1909, i64 0, i32 9
  %1923 = load ptr, ptr %1922, align 8, !tbaa !128
  %1924 = icmp eq ptr %1923, null
  br i1 %1924, label %1925, label %1928

1925:                                             ; preds = %1921
  %1926 = load i32, ptr %1870, align 8, !tbaa !129
  %1927 = sitofp i32 %1926 to float
  call void @psys_cache_edit_paths(ptr noundef %0, ptr noundef nonnull %81, ptr noundef nonnull %1909, float noundef nofpclass(nan inf) %1927) #13
  br label %1928

1928:                                             ; preds = %1925, %1921, %1908, %1911, %1902
  %1929 = load ptr, ptr %80, align 8, !tbaa !38
  %1930 = call ptr @PE_settings(ptr noundef %0) #13
  %1931 = getelementptr %struct.ParticleSystem, ptr %1903, i64 0, i32 2
  %1932 = load ptr, ptr %1931, align 8, !tbaa !66
  %1933 = getelementptr inbounds %struct.ParticleSystem, ptr %1903, i64 0, i32 3
  %1934 = load ptr, ptr %1933, align 8, !tbaa !130
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %20) #13
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %21) #13
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %22) #13
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %1871, i8 0, i64 16, i1 false)
  %1935 = getelementptr inbounds %struct.ParticleSystem, ptr %1903, i64 0, i32 48
  %1936 = load ptr, ptr %1935, align 8, !tbaa !131
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %23) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %24) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %25) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %26) #13
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %26, i8 0, i64 12, i1 false)
  %1937 = getelementptr inbounds %struct.Object, ptr %1929, i64 0, i32 53
  %1938 = load i16, ptr %1937, align 4, !tbaa !80
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %27) #13
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %28) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %29) #13
  store i32 -16777216, ptr %29, align 4
  %1939 = icmp eq ptr %1932, null
  br i1 %1939, label %3016, label %1940

1940:                                             ; preds = %1928
  %1941 = call i32 @psys_check_enabled(ptr noundef nonnull %1929, ptr noundef nonnull %1903) #13
  %1942 = icmp eq i32 %1941, 0
  %1943 = icmp eq ptr %1934, null
  %1944 = select i1 %1942, i1 true, i1 %1943
  br i1 %1944, label %3016, label %1945

1945:                                             ; preds = %1940
  %1946 = call i32 @psys_in_edit_mode(ptr noundef %0, ptr noundef nonnull %1903) #13
  %1947 = icmp eq i32 %1946, 0
  br i1 %1947, label %1952, label %1948

1948:                                             ; preds = %1945
  %1949 = load i16, ptr %1930, align 8, !tbaa !132
  %1950 = and i16 %1949, 16
  %1951 = icmp eq i16 %1950, 0
  br i1 %1951, label %3016, label %1952

1952:                                             ; preds = %1948, %1945
  %1953 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 17
  %1954 = load i16, ptr %1953, align 8, !tbaa !134
  %1955 = icmp eq i16 %1954, 10
  br i1 %1955, label %1956, label %1959

1956:                                             ; preds = %1952
  %1957 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 21
  %1958 = load i16, ptr %1957, align 8, !tbaa !135
  br label %1959

1959:                                             ; preds = %1956, %1952
  %1960 = phi i16 [ %1958, %1956 ], [ %1954, %1952 ]
  %1961 = sext i16 %1960 to i32
  %1962 = icmp eq i16 %1960, 0
  br i1 %1962, label %3016, label %1963

1963:                                             ; preds = %1959
  store ptr %0, ptr %22, align 8, !tbaa !136
  store ptr %1929, ptr %1872, align 8, !tbaa !138
  store ptr %1903, ptr %1873, align 8, !tbaa !139
  %1964 = call ptr @psys_get_modifier(ptr noundef nonnull %1929, ptr noundef nonnull %1903) #13
  store ptr %1964, ptr %1874, align 8, !tbaa !140
  %1965 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 11
  %1966 = load i16, ptr %1965, align 8, !tbaa !141
  %1967 = icmp eq i16 %1966, 2
  br i1 %1967, label %1968, label %1977

1968:                                             ; preds = %1963
  %1969 = getelementptr inbounds %struct.ParticleSystem, ptr %1903, i64 0, i32 25
  %1970 = load i32, ptr %1969, align 4, !tbaa !127
  %1971 = and i32 %1970, 1024
  %1972 = icmp eq i32 %1971, 0
  br i1 %1972, label %1977, label %1973

1973:                                             ; preds = %1968
  call void @psys_count_keyed_targets(ptr noundef nonnull %22) #13
  %1974 = getelementptr inbounds %struct.ParticleSystem, ptr %1903, i64 0, i32 33
  %1975 = load i16, ptr %1974, align 8, !tbaa !142
  %1976 = icmp eq i16 %1975, 0
  br i1 %1976, label %3016, label %1977

1977:                                             ; preds = %1973, %1968, %1963
  %1978 = and i16 %1938, 1
  %1979 = icmp eq i16 %1978, 0
  br i1 %1979, label %1983, label %1980

1980:                                             ; preds = %1977
  %1981 = call ptr @psys_get_current(ptr noundef nonnull %1929) #13
  %1982 = icmp ne ptr %1981, %1903
  br label %1983

1983:                                             ; preds = %1980, %1977
  %1984 = phi i1 [ true, %1977 ], [ %1982, %1980 ]
  %1985 = getelementptr inbounds %struct.ParticleSystem, ptr %1903, i64 0, i32 25
  %1986 = load i32, ptr %1985, align 4, !tbaa !127
  %1987 = or i32 %1986, 64
  store i32 %1987, ptr %1985, align 4, !tbaa !127
  %1988 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 7
  %1989 = load i16, ptr %1988, align 8, !tbaa !143
  %1990 = icmp eq i16 %1989, 2
  br i1 %1990, label %1991, label %1995

1991:                                             ; preds = %1983
  %1992 = getelementptr inbounds %struct.ParticleSystem, ptr %1903, i64 0, i32 8
  %1993 = load ptr, ptr %1992, align 8, !tbaa !144
  %1994 = icmp eq ptr %1993, null
  br i1 %1994, label %2003, label %1995

1995:                                             ; preds = %1991, %1983
  %1996 = getelementptr inbounds %struct.ParticleSystem, ptr %1903, i64 0, i32 28
  %1997 = load i32, ptr %1996, align 8, !tbaa !145
  %1998 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 30
  %1999 = load i16, ptr %1998, align 2, !tbaa !146
  %2000 = sext i16 %1999 to i32
  %2001 = mul nsw i32 %1997, %2000
  %2002 = sdiv i32 %2001, 100
  br label %2003

2003:                                             ; preds = %1995, %1991
  %2004 = phi i32 [ %2002, %1995 ], [ 0, %1991 ]
  %2005 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 31
  %2006 = load i16, ptr %2005, align 4, !tbaa !147
  %2007 = call ptr @give_current_material(ptr noundef nonnull %1929, i16 noundef signext %2006) #13
  %2008 = load i8, ptr %290, align 8, !tbaa !58
  %2009 = icmp eq i8 %2008, 0
  br i1 %2009, label %2011, label %2010

2010:                                             ; preds = %2003
  call void @glDepthMask(i8 noundef zeroext 1) #13
  br label %2011

2011:                                             ; preds = %2010, %2003
  %2012 = icmp eq ptr %2007, null
  br i1 %2012, label %2022, label %2013

2013:                                             ; preds = %2011
  %2014 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 23
  %2015 = load i16, ptr %2014, align 4, !tbaa !148
  %2016 = icmp eq i16 %2015, 1
  br i1 %2016, label %2017, label %2022

2017:                                             ; preds = %2013
  %2018 = getelementptr inbounds %struct.Material, ptr %2007, i64 0, i32 4
  call void @rgb_float_to_uchar(ptr noundef nonnull %29, ptr noundef nonnull %2018) #13
  %2019 = load <2 x float>, ptr %2018, align 4, !tbaa !44
  store <2 x float> %2019, ptr %26, align 8, !tbaa !44
  %2020 = getelementptr inbounds %struct.Material, ptr %2007, i64 0, i32 6
  %2021 = load float, ptr %2020, align 4, !tbaa !44
  store float %2021, ptr %1875, align 8, !tbaa !44
  br label %2022

2022:                                             ; preds = %2017, %2013, %2011
  br i1 %1877, label %2023, label %2024

2023:                                             ; preds = %2022
  call void @glColor3ubv(ptr noundef nonnull %29) #13
  br label %2024

2024:                                             ; preds = %2023, %2022
  %2025 = call fast nofpclass(nan inf) float @psys_get_timestep(ptr noundef nonnull %22) #13
  %2026 = load i32, ptr %1878, align 8, !tbaa !71
  %2027 = and i32 %2026, 512
  %2028 = icmp eq i32 %2027, 0
  br i1 %2028, label %2036, label %2029

2029:                                             ; preds = %2024
  %2030 = load i16, ptr %1937, align 4, !tbaa !80
  %2031 = and i16 %2030, 4096
  %2032 = icmp eq i16 %2031, 0
  br i1 %2032, label %2036, label %2033

2033:                                             ; preds = %2029
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %30) #13
  %2034 = getelementptr inbounds %struct.Object, ptr %1929, i64 0, i32 47
  %2035 = getelementptr inbounds %struct.ParticleSystem, ptr %1903, i64 0, i32 19
  call void @mul_m4_m4m4(ptr noundef nonnull %30, ptr noundef nonnull %2034, ptr noundef nonnull %2035) #13
  call void @glMultMatrixf(ptr noundef nonnull %30) #13
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %30) #13
  br label %2036

2036:                                             ; preds = %2033, %2029, %2024
  %2037 = getelementptr inbounds %struct.Object, ptr %1929, i64 0, i32 50
  %2038 = getelementptr inbounds %struct.Object, ptr %1929, i64 0, i32 47
  %2039 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %2037, ptr noundef nonnull %2038) #13
  %2040 = getelementptr inbounds %struct.ParticleSystem, ptr %1903, i64 0, i32 26
  %2041 = load i32, ptr %2040, align 8, !tbaa !149
  %2042 = call fast nofpclass(nan inf) float @BKE_scene_frame_get(ptr noundef %0) #13
  %2043 = icmp eq i16 %1960, 6
  br i1 %2043, label %2044, label %2052

2044:                                             ; preds = %2036
  %2045 = getelementptr inbounds %struct.ParticleSystem, ptr %1903, i64 0, i32 7
  %2046 = load ptr, ptr %2045, align 8, !tbaa !150
  %2047 = icmp eq ptr %2046, null
  br i1 %2047, label %2048, label %2145

2048:                                             ; preds = %2044
  %2049 = getelementptr inbounds %struct.ParticleSystem, ptr %1903, i64 0, i32 8
  %2050 = load ptr, ptr %2049, align 8, !tbaa !144
  %2051 = icmp eq ptr %2050, null
  br i1 %2051, label %2053, label %2145

2052:                                             ; preds = %2036
  switch i32 %1961, label %2145 [
    i32 1, label %2053
    i32 2, label %2060
    i32 3, label %2099
    i32 4, label %2099
    i32 7, label %2107
    i32 8, label %2112
    i32 9, label %2117
    i32 5, label %2144
  ]

2053:                                             ; preds = %2052, %2048
  %2054 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 18
  %2055 = load i16, ptr %2054, align 2, !tbaa !151
  %2056 = icmp eq i16 %2055, 0
  br i1 %2056, label %2059, label %2057

2057:                                             ; preds = %2053
  %2058 = sitofp i16 %2055 to float
  call void @glPointSize(float noundef nofpclass(nan inf) %2058) #13
  br label %2145

2059:                                             ; preds = %2053
  call void @glPointSize(float noundef nofpclass(nan inf) 2.000000e+00) #13
  br label %2145

2060:                                             ; preds = %2052
  call void @copy_m4_m4(ptr noundef nonnull %23, ptr noundef nonnull %1883) #13
  %2061 = load <2 x float>, ptr %23, align 16, !tbaa !44
  %2062 = fmul fast <2 x float> %2061, %2061
  %2063 = shufflevector <2 x float> %2062, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2064 = fadd fast <2 x float> %2063, %2062
  %2065 = extractelement <2 x float> %2064, i64 0
  %2066 = load float, ptr %1885, align 8, !tbaa !44
  %2067 = fmul fast float %2066, %2066
  %2068 = fadd fast float %2065, %2067
  %2069 = fcmp fast ogt float %2068, 0x38AA95A5C0000000
  br i1 %2069, label %2070, label %2077

2070:                                             ; preds = %2060
  %2071 = call fast float @llvm.sqrt.f32(float %2068)
  %2072 = fdiv fast float 1.000000e+00, %2071
  %2073 = insertelement <2 x float> poison, float %2072, i64 0
  %2074 = shufflevector <2 x float> %2073, <2 x float> poison, <2 x i32> zeroinitializer
  %2075 = fmul fast <2 x float> %2074, %2061
  %2076 = fmul fast float %2072, %2066
  br label %2077

2077:                                             ; preds = %2070, %2060
  %2078 = phi float [ %2076, %2070 ], [ 0.000000e+00, %2060 ]
  %2079 = phi <2 x float> [ %2075, %2070 ], [ zeroinitializer, %2060 ]
  store <2 x float> %2079, ptr %23, align 16
  store float %2078, ptr %1885, align 8
  %2080 = load <2 x float>, ptr %1886, align 16, !tbaa !44
  %2081 = fmul fast <2 x float> %2080, %2080
  %2082 = shufflevector <2 x float> %2081, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2083 = fadd fast <2 x float> %2082, %2081
  %2084 = extractelement <2 x float> %2083, i64 0
  %2085 = load float, ptr %1888, align 8, !tbaa !44
  %2086 = fmul fast float %2085, %2085
  %2087 = fadd fast float %2084, %2086
  %2088 = fcmp fast ogt float %2087, 0x38AA95A5C0000000
  br i1 %2088, label %2089, label %2096

2089:                                             ; preds = %2077
  %2090 = call fast float @llvm.sqrt.f32(float %2087)
  %2091 = fdiv fast float 1.000000e+00, %2090
  %2092 = insertelement <2 x float> poison, float %2091, i64 0
  %2093 = shufflevector <2 x float> %2092, <2 x float> poison, <2 x i32> zeroinitializer
  %2094 = fmul fast <2 x float> %2093, %2080
  %2095 = fmul fast float %2091, %2085
  br label %2096

2096:                                             ; preds = %2089, %2077
  %2097 = phi float [ %2095, %2089 ], [ 0.000000e+00, %2077 ]
  %2098 = phi <2 x float> [ %2094, %2089 ], [ zeroinitializer, %2077 ]
  store <2 x float> %2098, ptr %1886, align 16
  store float %2097, ptr %1888, align 8
  br label %2099

2099:                                             ; preds = %2096, %2052, %2052
  %2100 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 18
  %2101 = load i16, ptr %2100, align 2, !tbaa !151
  %2102 = icmp eq i16 %2101, 0
  %2103 = sitofp i16 %2101 to float
  %2104 = select i1 %2102, float 2.000000e+00, float %2103
  %2105 = icmp eq i16 %1960, 4
  %2106 = zext i1 %2105 to i8
  br label %2145

2107:                                             ; preds = %2052
  %2108 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 125
  %2109 = load ptr, ptr %2108, align 8, !tbaa !152
  %2110 = icmp eq ptr %2109, null
  %2111 = zext i1 %2110 to i32
  br label %2145

2112:                                             ; preds = %2052
  %2113 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 122
  %2114 = load ptr, ptr %2113, align 8, !tbaa !153
  %2115 = icmp eq ptr %2114, null
  %2116 = zext i1 %2115 to i32
  br label %2145

2117:                                             ; preds = %2052
  %2118 = load ptr, ptr %1879, align 8, !tbaa !103
  %2119 = icmp eq ptr %2118, null
  %2120 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 126
  %2121 = load ptr, ptr %2120, align 8, !tbaa !154
  %2122 = icmp eq ptr %2121, null
  br i1 %2119, label %2123, label %2132

2123:                                             ; preds = %2117
  br i1 %2122, label %2124, label %2133

2124:                                             ; preds = %2123
  %2125 = call i32 @puts(ptr nonnull dereferenceable(1) @str)
  store i16 1, ptr %1953, align 8, !tbaa !134
  %2126 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 18
  %2127 = load i16, ptr %2126, align 2, !tbaa !151
  %2128 = icmp eq i16 %2127, 0
  br i1 %2128, label %2131, label %2129

2129:                                             ; preds = %2124
  %2130 = sitofp i16 %2127 to float
  call void @glPointSize(float noundef nofpclass(nan inf) %2130) #13
  br label %2135

2131:                                             ; preds = %2124
  call void @glPointSize(float noundef nofpclass(nan inf) 2.000000e+00) #13
  br label %2135

2132:                                             ; preds = %2117
  br i1 %2122, label %2134, label %2133

2133:                                             ; preds = %2132, %2123
  store ptr %2121, ptr %21, align 8, !tbaa !155
  br label %2135

2134:                                             ; preds = %2132
  store ptr %2118, ptr %21, align 8, !tbaa !155
  br label %2135

2135:                                             ; preds = %2134, %2133, %2131, %2129
  %2136 = phi i32 [ 1, %2129 ], [ 1, %2131 ], [ 9, %2133 ], [ 9, %2134 ]
  %2137 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 37
  %2138 = load i16, ptr %2137, align 8, !tbaa !157
  store i16 %2138, ptr %1880, align 8, !tbaa !158
  %2139 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 39
  %2140 = load i16, ptr %2139, align 4, !tbaa !159
  store i16 %2140, ptr %1881, align 4, !tbaa !160
  %2141 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 15
  %2142 = load i32, ptr %2141, align 8, !tbaa !68
  %2143 = and i32 %2142, 128
  store i32 %2143, ptr %1882, align 8, !tbaa !161
  br label %2145

2144:                                             ; preds = %2052
  br label %2145

2145:                                             ; preds = %2144, %2135, %2112, %2107, %2099, %2059, %2057, %2052, %2048, %2044
  %2146 = phi i32 [ %1961, %2052 ], [ 5, %2144 ], [ %2136, %2135 ], [ 1, %2057 ], [ 1, %2059 ], [ %2111, %2107 ], [ %2116, %2112 ], [ %1961, %2099 ], [ 6, %2044 ], [ 6, %2048 ]
  %2147 = phi i8 [ 0, %2052 ], [ 0, %2144 ], [ 0, %2135 ], [ 0, %2057 ], [ 0, %2059 ], [ 0, %2107 ], [ 0, %2112 ], [ %2106, %2099 ], [ 0, %2044 ], [ 0, %2048 ]
  %2148 = phi i8 [ 0, %2052 ], [ 1, %2144 ], [ 0, %2135 ], [ 0, %2057 ], [ 0, %2059 ], [ 0, %2107 ], [ 0, %2112 ], [ 0, %2099 ], [ 0, %2044 ], [ 0, %2048 ]
  %2149 = phi float [ 1.000000e+00, %2052 ], [ 1.000000e+00, %2144 ], [ 1.000000e+00, %2135 ], [ 1.000000e+00, %2057 ], [ 1.000000e+00, %2059 ], [ 1.000000e+00, %2107 ], [ 1.000000e+00, %2112 ], [ %2104, %2099 ], [ 1.000000e+00, %2044 ], [ 1.000000e+00, %2048 ]
  %2150 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 15
  %2151 = load i32, ptr %2150, align 8, !tbaa !68
  %2152 = and i32 %2151, 4
  %2153 = icmp eq i32 %2152, 0
  br i1 %2153, label %2196, label %2154

2154:                                             ; preds = %2145
  %2155 = load i16, ptr %1953, align 8, !tbaa !134
  %2156 = icmp eq i16 %2155, 2
  br i1 %2156, label %2196, label %2157

2157:                                             ; preds = %2154
  call void @copy_m4_m4(ptr noundef nonnull %23, ptr noundef nonnull %1883) #13
  %2158 = load <2 x float>, ptr %23, align 16, !tbaa !44
  %2159 = fmul fast <2 x float> %2158, %2158
  %2160 = shufflevector <2 x float> %2159, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2161 = fadd fast <2 x float> %2160, %2159
  %2162 = extractelement <2 x float> %2161, i64 0
  %2163 = load float, ptr %1885, align 8, !tbaa !44
  %2164 = fmul fast float %2163, %2163
  %2165 = fadd fast float %2162, %2164
  %2166 = fcmp fast ogt float %2165, 0x38AA95A5C0000000
  br i1 %2166, label %2167, label %2174

2167:                                             ; preds = %2157
  %2168 = call fast float @llvm.sqrt.f32(float %2165)
  %2169 = fdiv fast float 1.000000e+00, %2168
  %2170 = insertelement <2 x float> poison, float %2169, i64 0
  %2171 = shufflevector <2 x float> %2170, <2 x float> poison, <2 x i32> zeroinitializer
  %2172 = fmul fast <2 x float> %2171, %2158
  %2173 = fmul fast float %2169, %2163
  br label %2174

2174:                                             ; preds = %2167, %2157
  %2175 = phi float [ %2173, %2167 ], [ 0.000000e+00, %2157 ]
  %2176 = phi <2 x float> [ %2172, %2167 ], [ zeroinitializer, %2157 ]
  store <2 x float> %2176, ptr %23, align 16
  store float %2175, ptr %1885, align 8
  %2177 = load <2 x float>, ptr %1886, align 16, !tbaa !44
  %2178 = fmul fast <2 x float> %2177, %2177
  %2179 = shufflevector <2 x float> %2178, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2180 = fadd fast <2 x float> %2179, %2178
  %2181 = extractelement <2 x float> %2180, i64 0
  %2182 = load float, ptr %1888, align 8, !tbaa !44
  %2183 = fmul fast float %2182, %2182
  %2184 = fadd fast float %2181, %2183
  %2185 = fcmp fast ogt float %2184, 0x38AA95A5C0000000
  br i1 %2185, label %2186, label %2193

2186:                                             ; preds = %2174
  %2187 = call fast float @llvm.sqrt.f32(float %2184)
  %2188 = fdiv fast float 1.000000e+00, %2187
  %2189 = insertelement <2 x float> poison, float %2188, i64 0
  %2190 = shufflevector <2 x float> %2189, <2 x float> poison, <2 x i32> zeroinitializer
  %2191 = fmul fast <2 x float> %2190, %2177
  %2192 = fmul fast float %2188, %2182
  br label %2193

2193:                                             ; preds = %2186, %2174
  %2194 = phi float [ %2192, %2186 ], [ 0.000000e+00, %2174 ]
  %2195 = phi <2 x float> [ %2191, %2186 ], [ zeroinitializer, %2174 ]
  store <2 x float> %2195, ptr %1886, align 16
  store float %2194, ptr %1888, align 8
  br label %2196

2196:                                             ; preds = %2193, %2154, %2145
  switch i32 %2146, label %2202 [
    i32 5, label %2197
    i32 3, label %2197
    i32 1, label %2197
  ]

2197:                                             ; preds = %2196, %2196, %2196
  %2198 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 23
  %2199 = load i16, ptr %2198, align 4, !tbaa !148
  %2200 = icmp sgt i16 %2199, 1
  %2201 = select i1 %2200, i8 1, i8 %2147
  br label %2202

2202:                                             ; preds = %2197, %2196
  %2203 = phi i8 [ %2147, %2196 ], [ %2201, %2197 ]
  %2204 = icmp eq i8 %2203, 0
  %2205 = icmp ne ptr %1936, null
  %2206 = select i1 %2204, i1 %2205, i1 false
  br i1 %2206, label %2207, label %2213

2207:                                             ; preds = %2202
  %2208 = getelementptr inbounds %struct.ParticleDrawData, ptr %1936, i64 0, i32 4
  %2209 = load ptr, ptr %2208, align 8, !tbaa !162
  %2210 = icmp eq ptr %2209, null
  br i1 %2210, label %2213, label %2211

2211:                                             ; preds = %2207
  %2212 = load ptr, ptr @MEM_freeN, align 8, !tbaa !49
  call void %2212(ptr noundef nonnull %2209) #13
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2208, i8 0, i64 16, i1 false)
  br label %2213

2213:                                             ; preds = %2211, %2207, %2202
  switch i32 %2146, label %2214 [
    i32 6, label %2308
    i32 2, label %2308
    i32 0, label %2308
  ]

2214:                                             ; preds = %2213
  %2215 = add nsw i32 %2041, %2004
  %2216 = mul i32 %2215, 12
  br i1 %2205, label %2220, label %2217

2217:                                             ; preds = %2214
  %2218 = load ptr, ptr @MEM_callocN, align 8, !tbaa !49
  %2219 = call ptr %2218(i64 noundef 88, ptr noundef nonnull @.str.9) #13
  store ptr %2219, ptr %1935, align 8, !tbaa !131
  br label %2220

2220:                                             ; preds = %2217, %2214
  %2221 = phi ptr [ %1936, %2214 ], [ %2219, %2217 ]
  %2222 = load i16, ptr %1953, align 8, !tbaa !134
  %2223 = icmp eq i16 %2222, 10
  br i1 %2223, label %2224, label %2230

2224:                                             ; preds = %2220
  %2225 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 119
  %2226 = load i32, ptr %2225, align 8, !tbaa !164
  %2227 = icmp sgt i32 %2226, 1
  br i1 %2227, label %2228, label %2230

2228:                                             ; preds = %2224
  %2229 = mul nsw i32 %2226, %2216
  call void @psys_make_temp_pointcache(ptr noundef nonnull %1929, ptr noundef nonnull %1903) #13
  br label %2230

2230:                                             ; preds = %2228, %2224, %2220
  %2231 = phi i32 [ %2229, %2228 ], [ %2216, %2224 ], [ %2216, %2220 ]
  switch i32 %2146, label %2240 [
    i32 4, label %2232
    i32 3, label %2232
    i32 5, label %2236
    i32 9, label %2238
  ]

2232:                                             ; preds = %2230, %2230
  %2233 = mul nsw i32 %2231, 6
  %2234 = icmp eq i32 %2146, 3
  %2235 = select i1 %2234, i8 %2203, i8 1
  br label %2240

2236:                                             ; preds = %2230
  %2237 = shl nsw i32 %2231, 1
  br label %2240

2238:                                             ; preds = %2230
  %2239 = shl nsw i32 %2231, 2
  br label %2240

2240:                                             ; preds = %2238, %2236, %2232, %2230
  %2241 = phi i8 [ %2203, %2230 ], [ %2203, %2238 ], [ %2203, %2236 ], [ %2235, %2232 ]
  %2242 = phi i32 [ %2231, %2230 ], [ %2239, %2238 ], [ %2237, %2236 ], [ %2233, %2232 ]
  %2243 = phi i1 [ true, %2230 ], [ false, %2238 ], [ true, %2236 ], [ true, %2232 ]
  %2244 = getelementptr inbounds %struct.ParticleDrawData, ptr %2221, i64 0, i32 9
  %2245 = load i32, ptr %2244, align 8, !tbaa !165
  %2246 = icmp eq i32 %2245, %2242
  br i1 %2246, label %2248, label %2247

2247:                                             ; preds = %2240
  call void @psys_free_pdd(ptr noundef nonnull %1903) #13
  br label %2248

2248:                                             ; preds = %2247, %2240
  %2249 = load ptr, ptr %2221, align 8, !tbaa !166
  %2250 = icmp eq ptr %2249, null
  br i1 %2250, label %2251, label %2255

2251:                                             ; preds = %2248
  %2252 = load ptr, ptr @MEM_callocN, align 8, !tbaa !49
  %2253 = sext i32 %2242 to i64
  %2254 = call ptr %2252(i64 noundef %2253, ptr noundef nonnull @.str.10) #13
  store ptr %2254, ptr %2221, align 8, !tbaa !166
  br label %2255

2255:                                             ; preds = %2251, %2248
  %2256 = icmp eq i8 %2241, 0
  br i1 %2256, label %2265, label %2257

2257:                                             ; preds = %2255
  %2258 = getelementptr inbounds %struct.ParticleDrawData, ptr %2221, i64 0, i32 4
  %2259 = load ptr, ptr %2258, align 8, !tbaa !162
  %2260 = icmp eq ptr %2259, null
  br i1 %2260, label %2261, label %2265

2261:                                             ; preds = %2257
  %2262 = load ptr, ptr @MEM_callocN, align 8, !tbaa !49
  %2263 = sext i32 %2242 to i64
  %2264 = call ptr %2262(i64 noundef %2263, ptr noundef nonnull @.str.11) #13
  store ptr %2264, ptr %2258, align 8, !tbaa !162
  br label %2265

2265:                                             ; preds = %2261, %2257, %2255
  br i1 %2243, label %2274, label %2266

2266:                                             ; preds = %2265
  %2267 = getelementptr inbounds %struct.ParticleDrawData, ptr %2221, i64 0, i32 2
  %2268 = load ptr, ptr %2267, align 8, !tbaa !167
  %2269 = icmp eq ptr %2268, null
  br i1 %2269, label %2270, label %2274

2270:                                             ; preds = %2266
  %2271 = load ptr, ptr @MEM_callocN, align 8, !tbaa !49
  %2272 = sext i32 %2242 to i64
  %2273 = call ptr %2271(i64 noundef %2272, ptr noundef nonnull @.str.12) #13
  store ptr %2273, ptr %2267, align 8, !tbaa !167
  br label %2274

2274:                                             ; preds = %2270, %2266, %2265
  %2275 = load i32, ptr %2150, align 8, !tbaa !68
  %2276 = and i32 %2275, 1
  %2277 = icmp ne i32 %2276, 0
  %2278 = icmp ne i32 %2146, 5
  %2279 = and i1 %2278, %2277
  %2280 = getelementptr inbounds %struct.ParticleDrawData, ptr %2221, i64 0, i32 6
  %2281 = load ptr, ptr %2280, align 8, !tbaa !168
  %2282 = icmp eq ptr %2281, null
  br i1 %2279, label %2283, label %2290

2283:                                             ; preds = %2274
  br i1 %2282, label %2284, label %2296

2284:                                             ; preds = %2283
  %2285 = load ptr, ptr @MEM_callocN, align 8, !tbaa !49
  %2286 = mul nsw i32 %2215, 6
  %2287 = sext i32 %2286 to i64
  %2288 = shl nsw i64 %2287, 2
  %2289 = call ptr %2285(i64 noundef %2288, ptr noundef nonnull @.str.13) #13
  br label %2293

2290:                                             ; preds = %2274
  br i1 %2282, label %2296, label %2291

2291:                                             ; preds = %2290
  %2292 = load ptr, ptr @MEM_freeN, align 8, !tbaa !49
  call void %2292(ptr noundef nonnull %2281) #13
  br label %2293

2293:                                             ; preds = %2291, %2284
  %2294 = phi ptr [ null, %2291 ], [ %2289, %2284 ]
  %2295 = phi i8 [ %2148, %2291 ], [ 1, %2284 ]
  store ptr %2294, ptr %2280, align 8, !tbaa !168
  br label %2296

2296:                                             ; preds = %2293, %2290, %2283
  %2297 = phi ptr [ null, %2290 ], [ %2281, %2283 ], [ %2294, %2293 ]
  %2298 = phi i8 [ %2148, %2290 ], [ 1, %2283 ], [ %2295, %2293 ]
  %2299 = load ptr, ptr %2221, align 8, !tbaa !166
  %2300 = getelementptr inbounds %struct.ParticleDrawData, ptr %2221, i64 0, i32 1
  store ptr %2299, ptr %2300, align 8, !tbaa !169
  %2301 = getelementptr inbounds %struct.ParticleDrawData, ptr %2221, i64 0, i32 7
  store ptr %2297, ptr %2301, align 8, !tbaa !170
  %2302 = getelementptr inbounds %struct.ParticleDrawData, ptr %2221, i64 0, i32 4
  %2303 = load ptr, ptr %2302, align 8, !tbaa !162
  %2304 = getelementptr inbounds %struct.ParticleDrawData, ptr %2221, i64 0, i32 5
  store ptr %2303, ptr %2304, align 8, !tbaa !171
  %2305 = getelementptr inbounds %struct.ParticleDrawData, ptr %2221, i64 0, i32 2
  %2306 = load ptr, ptr %2305, align 8, !tbaa !167
  %2307 = getelementptr inbounds %struct.ParticleDrawData, ptr %2221, i64 0, i32 3
  store ptr %2306, ptr %2307, align 8, !tbaa !172
  store i32 %2242, ptr %2244, align 8, !tbaa !165
  br label %2316

2308:                                             ; preds = %2213, %2213, %2213
  %2309 = load ptr, ptr %1935, align 8, !tbaa !131
  %2310 = icmp eq ptr %2309, null
  br i1 %2310, label %2314, label %2311

2311:                                             ; preds = %2308
  call void @psys_free_pdd(ptr noundef nonnull %1903) #13
  %2312 = load ptr, ptr @MEM_freeN, align 8, !tbaa !49
  %2313 = load ptr, ptr %1935, align 8, !tbaa !131
  call void %2312(ptr noundef %2313) #13
  store ptr null, ptr %1935, align 8, !tbaa !131
  br label %2320

2314:                                             ; preds = %2308
  %2315 = icmp eq ptr %1936, null
  br i1 %2315, label %2320, label %2316

2316:                                             ; preds = %2314, %2296
  %2317 = phi ptr [ %2221, %2296 ], [ %1936, %2314 ]
  %2318 = phi i8 [ %2298, %2296 ], [ %2148, %2314 ]
  %2319 = getelementptr inbounds %struct.ParticleDrawData, ptr %2317, i64 0, i32 8
  store ptr %26, ptr %2319, align 8, !tbaa !173
  br label %2320

2320:                                             ; preds = %2316, %2314, %2311
  %2321 = phi i1 [ true, %2316 ], [ false, %2314 ], [ false, %2311 ]
  %2322 = phi ptr [ %2317, %2316 ], [ null, %2314 ], [ null, %2311 ]
  %2323 = phi i8 [ %2318, %2316 ], [ %2148, %2314 ], [ %2148, %2311 ]
  %2324 = call ptr @psys_create_lattice_deform_data(ptr noundef nonnull %22) #13
  %2325 = getelementptr inbounds %struct.ParticleSystem, ptr %1903, i64 0, i32 15
  store ptr %2324, ptr %2325, align 8, !tbaa !174
  %2326 = icmp eq i32 %2146, 2
  %2327 = or i1 %2326, %2321
  %2328 = icmp ne i32 %2146, 6
  %2329 = and i1 %2328, %2327
  br i1 %2329, label %2330, label %2791

2330:                                             ; preds = %2320
  br i1 %2321, label %2331, label %2347

2331:                                             ; preds = %2330
  %2332 = getelementptr inbounds %struct.ParticleDrawData, ptr %2322, i64 0, i32 10
  %2333 = load i32, ptr %2332, align 4, !tbaa !175
  %2334 = and i32 %2333, 1
  %2335 = icmp eq i32 %2334, 0
  br i1 %2335, label %2347, label %2336

2336:                                             ; preds = %2331
  %2337 = getelementptr inbounds %struct.ParticleDrawData, ptr %2322, i64 0, i32 6
  %2338 = load ptr, ptr %2337, align 8, !tbaa !168
  %2339 = icmp eq ptr %2338, null
  br i1 %2339, label %2340, label %2347

2340:                                             ; preds = %2336
  %2341 = load i32, ptr %2150, align 8, !tbaa !68
  %2342 = and i32 %2341, 532
  %2343 = icmp eq i32 %2342, 0
  br i1 %2343, label %2344, label %2347

2344:                                             ; preds = %2340
  %2345 = getelementptr inbounds %struct.ParticleDrawData, ptr %2322, i64 0, i32 11
  %2346 = load i32, ptr %2345, align 8, !tbaa !176
  br label %2791

2347:                                             ; preds = %2340, %2336, %2331, %2330
  %2348 = add nsw i32 %2041, %2004
  %2349 = icmp sgt i32 %2348, 0
  br i1 %2349, label %2350, label %2791

2350:                                             ; preds = %2347
  %2351 = icmp eq i32 %2004, 0
  %2352 = getelementptr i8, ptr %1903, i64 308
  %2353 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 23
  %2354 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 47
  %2355 = getelementptr inbounds %struct.ParticleSystem, ptr %1903, i64 0, i32 4
  %2356 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 119
  %2357 = getelementptr i8, ptr %1903, i64 144
  %2358 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 118
  %2359 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 88
  %2360 = getelementptr inbounds %struct.ParticleDrawData, ptr %2322, i64 0, i32 6
  %2361 = getelementptr inbounds %struct.ParticleDrawData, ptr %2322, i64 0, i32 7
  %2362 = sext i32 %2041 to i64
  %2363 = zext i32 %2348 to i64
  %2364 = insertelement <2 x float> poison, float %2025, i64 0
  %2365 = shufflevector <2 x float> %2364, <2 x float> poison, <2 x i32> zeroinitializer
  br label %2366

2366:                                             ; preds = %2784, %2350
  %2367 = phi i64 [ 0, %2350 ], [ %2788, %2784 ]
  %2368 = phi ptr [ %1934, %2350 ], [ %2789, %2784 ]
  %2369 = phi i64 [ undef, %2350 ], [ %2787, %2784 ]
  %2370 = phi i32 [ 0, %2350 ], [ %2786, %2784 ]
  %2371 = phi i32 [ 0, %2350 ], [ %2785, %2784 ]
  %2372 = icmp sge i64 %2367, %2362
  br i1 %2372, label %2476, label %2373

2373:                                             ; preds = %2366
  br i1 %2351, label %2378, label %2374

2374:                                             ; preds = %2373
  %2375 = load i32, ptr %2150, align 8, !tbaa !68
  %2376 = and i32 %2375, 256
  %2377 = icmp eq i32 %2376, 0
  br i1 %2377, label %2784, label %2378

2378:                                             ; preds = %2374, %2373
  %2379 = getelementptr inbounds %struct.ParticleData, ptr %2368, i64 0, i32 17
  %2380 = load i16, ptr %2379, align 4, !tbaa !177
  %2381 = and i16 %2380, 3
  %2382 = icmp eq i16 %2381, 0
  br i1 %2382, label %2383, label %2784

2383:                                             ; preds = %2378
  %2384 = getelementptr inbounds %struct.ParticleData, ptr %2368, i64 0, i32 6
  %2385 = load float, ptr %2384, align 4, !tbaa !180
  %2386 = fsub fast float %2042, %2385
  %2387 = getelementptr inbounds %struct.ParticleData, ptr %2368, i64 0, i32 7
  %2388 = load float, ptr %2387, align 8, !tbaa !181
  %2389 = fdiv fast float %2386, %2388
  store float %2385, ptr %24, align 4, !tbaa !44
  %2390 = getelementptr inbounds %struct.ParticleData, ptr %2368, i64 0, i32 8
  %2391 = load float, ptr %2390, align 4, !tbaa !182
  store float %2391, ptr %25, align 4, !tbaa !44
  %2392 = getelementptr inbounds %struct.ParticleData, ptr %2368, i64 0, i32 13
  %2393 = load float, ptr %2392, align 4, !tbaa !183
  %2394 = load i16, ptr %1965, align 8, !tbaa !141
  %2395 = icmp eq i16 %2394, 3
  br i1 %2395, label %2396, label %2401

2396:                                             ; preds = %2383
  %2397 = getelementptr inbounds %struct.ParticleData, ptr %2368, i64 0, i32 4
  %2398 = load ptr, ptr %2397, align 8, !tbaa !184
  %2399 = getelementptr inbounds %struct.BoidParticle, ptr %2398, i64 0, i32 1
  %2400 = load float, ptr %2399, align 8, !tbaa !185
  br label %2401

2401:                                             ; preds = %2396, %2383
  %2402 = phi float [ %2400, %2396 ], [ -1.000000e+00, %2383 ]
  %2403 = load i32, ptr %2352, align 4, !tbaa !188
  %2404 = srem i32 %2403, 1024
  %2405 = sext i32 %2404 to i64
  %2406 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %2405
  %2407 = load i32, ptr %2406, align 4, !tbaa !47
  %2408 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %2405
  %2409 = load i32, ptr %2408, align 4, !tbaa !47
  %2410 = trunc i64 %2367 to i32
  %2411 = add i32 %2410, 21
  %2412 = mul i32 %2409, %2411
  %2413 = add i32 %2412, %2407
  %2414 = and i32 %2413, 1023
  %2415 = zext i32 %2414 to i64
  %2416 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %2415
  %2417 = load float, ptr %2416, align 4, !tbaa !44
  %2418 = add i32 %2410, 22
  %2419 = mul i32 %2409, %2418
  %2420 = add i32 %2419, %2407
  %2421 = and i32 %2420, 1023
  %2422 = zext i32 %2421 to i64
  %2423 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %2422
  %2424 = load float, ptr %2423, align 4, !tbaa !44
  %2425 = load i16, ptr %2353, align 4, !tbaa !148
  %2426 = icmp sgt i16 %2425, 1
  br i1 %2426, label %2427, label %2504

2427:                                             ; preds = %2401
  switch i16 %2425, label %2474 [
    i16 2, label %2428
    i16 3, label %2442
  ]

2428:                                             ; preds = %2427
  %2429 = getelementptr inbounds %struct.ParticleKey, ptr %2368, i64 0, i32 1
  %2430 = load float, ptr %2429, align 4, !tbaa !44
  %2431 = fmul fast float %2430, %2430
  %2432 = getelementptr inbounds %struct.ParticleKey, ptr %2368, i64 0, i32 1, i64 1
  %2433 = load <2 x float>, ptr %2432, align 4, !tbaa !44
  %2434 = fmul fast <2 x float> %2433, %2433
  %2435 = extractelement <2 x float> %2434, i64 0
  %2436 = fadd fast float %2435, %2431
  %2437 = extractelement <2 x float> %2434, i64 1
  %2438 = fadd fast float %2436, %2437
  %2439 = call fast float @llvm.sqrt.f32(float %2438)
  %2440 = load float, ptr %2354, align 8, !tbaa !189
  %2441 = fdiv fast float %2439, %2440
  br label %2468

2442:                                             ; preds = %2427
  %2443 = getelementptr inbounds %struct.ParticleKey, ptr %2368, i64 0, i32 1
  %2444 = getelementptr inbounds %struct.ParticleData, ptr %2368, i64 0, i32 1, i32 1
  %2445 = load float, ptr %2444, align 4, !tbaa !44
  %2446 = load float, ptr %2443, align 4, !tbaa !44
  %2447 = fsub fast float %2445, %2446
  %2448 = getelementptr inbounds %struct.ParticleData, ptr %2368, i64 0, i32 1, i32 1, i64 1
  %2449 = getelementptr inbounds %struct.ParticleKey, ptr %2368, i64 0, i32 1, i64 1
  %2450 = fmul fast float %2447, %2447
  %2451 = load <2 x float>, ptr %2448, align 4, !tbaa !44
  %2452 = load <2 x float>, ptr %2449, align 4, !tbaa !44
  %2453 = fsub fast <2 x float> %2451, %2452
  %2454 = fmul fast <2 x float> %2453, %2453
  %2455 = extractelement <2 x float> %2454, i64 0
  %2456 = fadd fast float %2455, %2450
  %2457 = extractelement <2 x float> %2454, i64 1
  %2458 = fadd fast float %2456, %2457
  %2459 = call fast float @llvm.sqrt.f32(float %2458)
  %2460 = getelementptr inbounds %struct.ParticleKey, ptr %2368, i64 0, i32 4
  %2461 = load float, ptr %2460, align 4, !tbaa !190
  %2462 = getelementptr inbounds %struct.ParticleData, ptr %2368, i64 0, i32 1, i32 4
  %2463 = load float, ptr %2462, align 4, !tbaa !191
  %2464 = fsub fast float %2461, %2463
  %2465 = load float, ptr %2354, align 8, !tbaa !189
  %2466 = fmul fast float %2464, %2465
  %2467 = fdiv fast float %2459, %2466
  br label %2468

2468:                                             ; preds = %2442, %2428
  %2469 = phi float [ %2467, %2442 ], [ %2441, %2428 ]
  %2470 = fcmp fast olt float %2469, 0.000000e+00
  br i1 %2470, label %2474, label %2471

2471:                                             ; preds = %2468
  %2472 = fcmp fast ogt float %2469, 1.000000e+00
  br i1 %2472, label %2473, label %2474

2473:                                             ; preds = %2471
  br label %2474

2474:                                             ; preds = %2473, %2471, %2468, %2427
  %2475 = phi float [ 1.000000e+00, %2473 ], [ %2469, %2471 ], [ 0.000000e+00, %2468 ], [ 1.000000e+00, %2427 ]
  call void @weight_to_rgb(ptr noundef nonnull %26, float noundef nofpclass(nan inf) %2475) #13
  br label %2504

2476:                                             ; preds = %2366
  %2477 = load ptr, ptr %2355, align 8, !tbaa !192
  %2478 = sub nsw i64 %2367, %2362
  %2479 = getelementptr inbounds %struct.ChildParticle, ptr %2477, i64 %2478
  %2480 = call fast nofpclass(nan inf) float @psys_get_child_time(ptr noundef %1903, ptr noundef %2479, float noundef nofpclass(nan inf) %2042, ptr noundef nonnull %24, ptr noundef nonnull %25) #13
  %2481 = call fast nofpclass(nan inf) float @psys_get_child_size(ptr noundef %1903, ptr noundef %2479, float noundef nofpclass(nan inf) %2042, ptr noundef null) #13
  %2482 = load i32, ptr %2352, align 4, !tbaa !188
  %2483 = srem i32 %2482, 1024
  %2484 = sext i32 %2483 to i64
  %2485 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %2484
  %2486 = load i32, ptr %2485, align 4, !tbaa !47
  %2487 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %2484
  %2488 = load i32, ptr %2487, align 4, !tbaa !47
  %2489 = trunc i64 %2367 to i32
  %2490 = add i32 %2489, 21
  %2491 = mul i32 %2488, %2490
  %2492 = add i32 %2491, %2486
  %2493 = and i32 %2492, 1023
  %2494 = zext i32 %2493 to i64
  %2495 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %2494
  %2496 = load float, ptr %2495, align 4, !tbaa !44
  %2497 = add i32 %2489, 22
  %2498 = mul i32 %2488, %2497
  %2499 = add i32 %2498, %2486
  %2500 = and i32 %2499, 1023
  %2501 = zext i32 %2500 to i64
  %2502 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %2501
  %2503 = load float, ptr %2502, align 4, !tbaa !44
  br label %2504

2504:                                             ; preds = %2476, %2474, %2401
  %2505 = phi float [ %2402, %2474 ], [ %2402, %2401 ], [ -1.000000e+00, %2476 ]
  %2506 = phi float [ %2389, %2474 ], [ %2389, %2401 ], [ %2480, %2476 ]
  %2507 = phi float [ %2424, %2474 ], [ %2424, %2401 ], [ %2503, %2476 ]
  %2508 = phi float [ %2417, %2474 ], [ %2417, %2401 ], [ %2496, %2476 ]
  %2509 = phi float [ %2393, %2474 ], [ %2393, %2401 ], [ %2481, %2476 ]
  %2510 = fmul fast float %2508, 2.000000e+00
  %2511 = fadd fast float %2510, -1.000000e+00
  %2512 = load i16, ptr %1953, align 8, !tbaa !134
  %2513 = icmp eq i16 %2512, 10
  br i1 %2513, label %2514, label %2583

2514:                                             ; preds = %2504
  %2515 = load i32, ptr %2356, align 8, !tbaa !164
  %2516 = icmp sgt i32 %2515, 1
  br i1 %2516, label %2517, label %2583

2517:                                             ; preds = %2514
  %2518 = load float, ptr %2358, align 4, !tbaa !193
  %2519 = load float, ptr %2359, align 8, !tbaa !194
  %2520 = fmul fast float %2519, %2507
  %2521 = fsub fast float 1.000000e+00, %2520
  %2522 = fmul fast float %2521, %2518
  %2523 = sitofp i32 %2515 to float
  %2524 = fmul fast float %2521, %2523
  %2525 = fptosi float %2524 to i32
  %2526 = icmp eq i32 %2525, 0
  %2527 = sitofp i32 %2525 to float
  %2528 = select fast i1 %2526, float 1.000000e+00, float %2527
  %2529 = fdiv fast float %2522, %2528
  %2530 = icmp sgt i32 %2525, 0
  br i1 %2530, label %2531, label %2784

2531:                                             ; preds = %2517
  %2532 = load i32, ptr %2150, align 8, !tbaa !68
  %2533 = and i32 %2532, 32
  %2534 = icmp eq i32 %2533, 0
  %2535 = select fast i1 %2534, float %2506, float %2042
  %2536 = fsub fast float %2535, %2522
  %2537 = trunc i64 %2367 to i32
  br label %2538

2538:                                             ; preds = %2572, %2531
  %2539 = phi float [ %2574, %2572 ], [ %2536, %2531 ]
  %2540 = phi i32 [ %2581, %2572 ], [ 0, %2531 ]
  %2541 = phi i1 [ false, %2572 ], [ true, %2531 ]
  %2542 = phi i32 [ %2580, %2572 ], [ %2371, %2531 ]
  %2543 = load i32, ptr %2150, align 8, !tbaa !68
  %2544 = and i32 %2543, 32
  %2545 = icmp eq i32 %2544, 0
  %2546 = load float, ptr %24, align 4
  %2547 = load float, ptr %25, align 4
  br i1 %2545, label %2548, label %2562

2548:                                             ; preds = %2538, %2555
  %2549 = phi float [ %2551, %2555 ], [ %2539, %2538 ]
  %2550 = phi i32 [ %2556, %2555 ], [ %2540, %2538 ]
  %2551 = fadd fast float %2549, %2529
  %2552 = fcmp fast olt float %2551, 0.000000e+00
  %2553 = fcmp fast ogt float %2551, 1.000000e+00
  %2554 = select i1 %2552, i1 true, i1 %2553
  br i1 %2554, label %2555, label %2558

2555:                                             ; preds = %2548
  %2556 = add nuw nsw i32 %2550, 1
  %2557 = icmp eq i32 %2556, %2525
  br i1 %2557, label %2592, label %2548, !llvm.loop !195

2558:                                             ; preds = %2548
  %2559 = fsub fast float %2547, %2546
  %2560 = fmul fast float %2559, %2551
  %2561 = fadd fast float %2560, %2546
  br label %2572

2562:                                             ; preds = %2538, %2569
  %2563 = phi float [ %2565, %2569 ], [ %2539, %2538 ]
  %2564 = phi i32 [ %2570, %2569 ], [ %2540, %2538 ]
  %2565 = fadd fast float %2563, %2529
  %2566 = fcmp fast olt float %2565, %2546
  %2567 = fcmp fast ogt float %2565, %2547
  %2568 = select i1 %2566, i1 true, i1 %2567
  br i1 %2568, label %2569, label %2572

2569:                                             ; preds = %2562
  %2570 = add nuw nsw i32 %2564, 1
  %2571 = icmp eq i32 %2570, %2525
  br i1 %2571, label %2592, label %2562, !llvm.loop !195

2572:                                             ; preds = %2562, %2558
  %2573 = phi i32 [ %2550, %2558 ], [ %2564, %2562 ]
  %2574 = phi float [ %2551, %2558 ], [ %2565, %2562 ]
  %2575 = phi float [ %2561, %2558 ], [ %2565, %2562 ]
  %2576 = fneg fast float %2575
  store float %2576, ptr %1889, align 4, !tbaa !196
  call void @psys_get_particle_on_path(ptr noundef nonnull %22, i32 noundef %2537, ptr noundef nonnull %20, i8 noundef zeroext %2323) #13
  %2577 = load ptr, ptr %1935, align 8, !tbaa !131
  %2578 = load ptr, ptr %1931, align 8, !tbaa !66
  %2579 = load ptr, ptr %2357, align 8, !tbaa !197
  call fastcc void @draw_particle_data(ptr %2578, ptr %2579, ptr noundef %83, ptr noundef nonnull %20, i32 noundef %2146, ptr noundef nonnull %23, ptr noundef nonnull %21, ptr noundef %2577, float noundef nofpclass(nan inf) %2574, float noundef nofpclass(nan inf) %2509, float noundef nofpclass(nan inf) %2511, float noundef nofpclass(nan inf) %2149)
  %2580 = add nsw i32 %2542, 1
  %2581 = add nuw nsw i32 %2573, 1
  %2582 = icmp eq i32 %2581, %2525
  br i1 %2582, label %2593, label %2538, !llvm.loop !195

2583:                                             ; preds = %2514, %2504
  store float %2042, ptr %1889, align 4, !tbaa !196
  %2584 = trunc i64 %2367 to i32
  %2585 = call i32 @psys_get_particle_state(ptr noundef nonnull %22, i32 noundef %2584, ptr noundef nonnull %20, i32 noundef 0) #13
  %2586 = icmp eq i32 %2585, 0
  br i1 %2586, label %2784, label %2587

2587:                                             ; preds = %2583
  %2588 = load ptr, ptr %1935, align 8, !tbaa !131
  %2589 = load ptr, ptr %1931, align 8, !tbaa !66
  %2590 = load ptr, ptr %2357, align 8, !tbaa !197
  call fastcc void @draw_particle_data(ptr %2589, ptr %2590, ptr noundef %83, ptr noundef nonnull %20, i32 noundef %2146, ptr noundef nonnull %23, ptr noundef nonnull %21, ptr noundef %2588, float noundef nofpclass(nan inf) %2506, float noundef nofpclass(nan inf) %2509, float noundef nofpclass(nan inf) %2511, float noundef nofpclass(nan inf) %2149)
  %2591 = add nsw i32 %2371, 1
  br label %2593

2592:                                             ; preds = %2569, %2555
  br i1 %2541, label %2784, label %2593

2593:                                             ; preds = %2572, %2592, %2587
  %2594 = phi i32 [ %2591, %2587 ], [ %2542, %2592 ], [ %2580, %2572 ]
  %2595 = load i32, ptr %2150, align 8, !tbaa !68
  %2596 = and i32 %2595, 1
  %2597 = icmp ne i32 %2596, 0
  %2598 = and i1 %2321, %2597
  br i1 %2598, label %2599, label %2621

2599:                                             ; preds = %2593
  %2600 = load ptr, ptr %2360, align 8, !tbaa !168
  %2601 = icmp eq ptr %2600, null
  br i1 %2601, label %2621, label %2602

2602:                                             ; preds = %2599
  %2603 = load ptr, ptr %2361, align 8, !tbaa !170
  %2604 = load float, ptr %20, align 8, !tbaa !44
  store float %2604, ptr %2603, align 4, !tbaa !44
  %2605 = load float, ptr %1890, align 4, !tbaa !44
  %2606 = getelementptr inbounds float, ptr %2603, i64 1
  store float %2605, ptr %2606, align 4, !tbaa !44
  %2607 = load float, ptr %1891, align 8, !tbaa !44
  %2608 = getelementptr inbounds float, ptr %2603, i64 2
  store float %2607, ptr %2608, align 4, !tbaa !44
  %2609 = getelementptr inbounds float, ptr %2603, i64 3
  %2610 = load float, ptr %1893, align 4, !tbaa !44
  %2611 = fmul fast float %2610, %2025
  %2612 = load <2 x float>, ptr %1892, align 4, !tbaa !44
  %2613 = fmul fast <2 x float> %2612, %2365
  %2614 = load <2 x float>, ptr %20, align 8, !tbaa !44
  %2615 = fadd fast <2 x float> %2614, %2613
  store <2 x float> %2615, ptr %2609, align 4, !tbaa !44
  %2616 = load float, ptr %1891, align 8, !tbaa !44
  %2617 = fadd fast float %2616, %2611
  %2618 = getelementptr inbounds float, ptr %2603, i64 5
  store float %2617, ptr %2618, align 4, !tbaa !44
  %2619 = getelementptr inbounds float, ptr %2603, i64 6
  store ptr %2619, ptr %2361, align 8, !tbaa !170
  %2620 = add nsw i32 %2370, 1
  br label %2621

2621:                                             ; preds = %2602, %2599, %2593
  %2622 = phi i32 [ %2620, %2602 ], [ %2370, %2599 ], [ %2370, %2593 ]
  %2623 = and i32 %2595, 4
  %2624 = icmp eq i32 %2623, 0
  br i1 %2624, label %2719, label %2625

2625:                                             ; preds = %2621
  call void @setlinestyle(i32 noundef 3) #13
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %19) #13
  %2626 = load <8 x float>, ptr %1891, align 8
  %2627 = shufflevector <8 x float> %2626, <8 x float> poison, <8 x i32> zeroinitializer
  %2628 = load <8 x float>, ptr %1888, align 8
  %2629 = shufflevector <8 x float> %2628, <8 x float> poison, <8 x i32> zeroinitializer
  %2630 = load <8 x float>, ptr %1885, align 8
  %2631 = shufflevector <8 x float> %2630, <8 x float> poison, <8 x i32> zeroinitializer
  %2632 = load <8 x float>, ptr %1890, align 4
  %2633 = shufflevector <8 x float> %2632, <8 x float> poison, <8 x i32> zeroinitializer
  %2634 = load <8 x float>, ptr %1887, align 4
  %2635 = shufflevector <8 x float> %2634, <8 x float> poison, <8 x i32> zeroinitializer
  %2636 = load <8 x float>, ptr %1884, align 4
  %2637 = shufflevector <8 x float> %2636, <8 x float> poison, <8 x i32> zeroinitializer
  %2638 = load <8 x float>, ptr %20, align 8
  %2639 = shufflevector <8 x float> %2638, <8 x float> poison, <8 x i32> zeroinitializer
  %2640 = insertelement <8 x float> poison, float %2509, i64 0
  %2641 = shufflevector <8 x float> %2640, <8 x float> poison, <8 x i32> zeroinitializer
  %2642 = load <8 x float>, ptr %1886, align 16
  %2643 = shufflevector <8 x float> %2642, <8 x float> poison, <8 x i32> zeroinitializer
  %2644 = load <8 x float>, ptr %23, align 16
  %2645 = shufflevector <8 x float> %2644, <8 x float> poison, <8 x i32> zeroinitializer
  %2646 = fmul fast <8 x float> %2645, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %2647 = fmul fast <8 x float> %2643, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %2648 = fadd fast <8 x float> %2647, %2646
  %2649 = fmul fast <8 x float> %2648, %2641
  %2650 = fadd fast <8 x float> %2649, %2639
  %2651 = fmul fast <8 x float> %2637, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %2652 = fmul fast <8 x float> %2635, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %2653 = fadd fast <8 x float> %2652, %2651
  %2654 = fmul fast <8 x float> %2653, %2641
  %2655 = fadd fast <8 x float> %2654, %2633
  %2656 = fmul fast <8 x float> %2631, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %2657 = fmul fast <8 x float> %2629, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %2658 = fadd fast <8 x float> %2657, %2656
  %2659 = fmul fast <8 x float> %2658, %2641
  %2660 = fadd fast <8 x float> %2659, %2627
  %2661 = shufflevector <8 x float> %2650, <8 x float> %2655, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2662 = shufflevector <8 x float> %2660, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2663 = shufflevector <16 x float> %2661, <16 x float> %2662, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %2663, ptr %19, align 16, !tbaa !44
  %2664 = fmul fast <8 x float> %2645, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %2665 = fmul fast <8 x float> %2643, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %2666 = fadd fast <8 x float> %2665, %2664
  %2667 = fmul fast <8 x float> %2666, %2641
  %2668 = fadd fast <8 x float> %2667, %2639
  %2669 = fmul fast <8 x float> %2637, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %2670 = fmul fast <8 x float> %2635, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %2671 = fadd fast <8 x float> %2670, %2669
  %2672 = fmul fast <8 x float> %2671, %2641
  %2673 = fadd fast <8 x float> %2672, %2633
  %2674 = fmul fast <8 x float> %2631, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %2675 = fmul fast <8 x float> %2629, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %2676 = fadd fast <8 x float> %2675, %2674
  %2677 = fmul fast <8 x float> %2676, %2641
  %2678 = fadd fast <8 x float> %2677, %2627
  %2679 = shufflevector <8 x float> %2668, <8 x float> %2673, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2680 = shufflevector <8 x float> %2678, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2681 = shufflevector <16 x float> %2679, <16 x float> %2680, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %2681, ptr %1899, align 16, !tbaa !44
  %2682 = fmul fast <8 x float> %2645, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %2683 = fmul fast <8 x float> %2643, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %2684 = fadd fast <8 x float> %2683, %2682
  %2685 = fmul fast <8 x float> %2684, %2641
  %2686 = fadd fast <8 x float> %2685, %2639
  %2687 = fmul fast <8 x float> %2637, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %2688 = fmul fast <8 x float> %2635, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %2689 = fadd fast <8 x float> %2688, %2687
  %2690 = fmul fast <8 x float> %2689, %2641
  %2691 = fadd fast <8 x float> %2690, %2633
  %2692 = fmul fast <8 x float> %2631, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %2693 = fmul fast <8 x float> %2629, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %2694 = fadd fast <8 x float> %2693, %2692
  %2695 = fmul fast <8 x float> %2694, %2641
  %2696 = fadd fast <8 x float> %2695, %2627
  %2697 = shufflevector <8 x float> %2686, <8 x float> %2691, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2698 = shufflevector <8 x float> %2696, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2699 = shufflevector <16 x float> %2697, <16 x float> %2698, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %2699, ptr %1900, align 16, !tbaa !44
  %2700 = fmul fast <8 x float> %2645, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %2701 = fmul fast <8 x float> %2643, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %2702 = fadd fast <8 x float> %2701, %2700
  %2703 = fmul fast <8 x float> %2702, %2641
  %2704 = fadd fast <8 x float> %2703, %2639
  %2705 = fmul fast <8 x float> %2637, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %2706 = fmul fast <8 x float> %2635, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %2707 = fadd fast <8 x float> %2706, %2705
  %2708 = fmul fast <8 x float> %2707, %2641
  %2709 = fadd fast <8 x float> %2708, %2633
  %2710 = fmul fast <8 x float> %2631, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %2711 = fmul fast <8 x float> %2629, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %2712 = fadd fast <8 x float> %2711, %2710
  %2713 = fmul fast <8 x float> %2712, %2641
  %2714 = fadd fast <8 x float> %2713, %2627
  %2715 = shufflevector <8 x float> %2704, <8 x float> %2709, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2716 = shufflevector <8 x float> %2714, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2717 = shufflevector <16 x float> %2715, <16 x float> %2716, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %2717, ptr %1901, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %19) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %19) #13
  call void @setlinestyle(i32 noundef 0) #13
  %2718 = load i32, ptr %2150, align 8, !tbaa !68
  br label %2719

2719:                                             ; preds = %2625, %2621
  %2720 = phi i32 [ %2718, %2625 ], [ %2595, %2621 ]
  %2721 = and i32 %2720, 512
  %2722 = icmp eq i32 %2721, 0
  %2723 = and i32 %2720, 16
  %2724 = icmp eq i32 %2723, 0
  %2725 = and i32 %2720, 528
  %2726 = icmp eq i32 %2725, 0
  br i1 %2726, label %2784, label %2727

2727:                                             ; preds = %2719
  %2728 = load i16, ptr %94, align 2, !tbaa !15
  %2729 = and i16 %2728, 4
  %2730 = icmp eq i16 %2729, 0
  br i1 %2730, label %2731, label %2784

2731:                                             ; preds = %2727
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %31) #13
  store i8 0, ptr %28, align 16, !tbaa !50
  %2732 = or i1 %2372, %2724
  br i1 %2722, label %2744, label %2733

2733:                                             ; preds = %2731
  br i1 %2732, label %2741, label %2734

2734:                                             ; preds = %2733
  %2735 = load i16, ptr %1965, align 8, !tbaa !141
  %2736 = icmp eq i16 %2735, 3
  br i1 %2736, label %2737, label %2741

2737:                                             ; preds = %2734
  %2738 = fpext float %2505 to double
  %2739 = trunc i64 %2367 to i32
  %2740 = call i64 (ptr, i64, ptr, ...) @BLI_snprintf(ptr noundef nonnull %28, i64 noundef 32, ptr noundef nonnull @.str.14, i32 noundef %2739, double noundef nofpclass(nan inf) %2738) #13
  br label %2751

2741:                                             ; preds = %2734, %2733
  %2742 = trunc i64 %2367 to i32
  %2743 = call i64 (ptr, i64, ptr, ...) @BLI_snprintf(ptr noundef nonnull %28, i64 noundef 32, ptr noundef nonnull @.str.7, i32 noundef %2742) #13
  br label %2751

2744:                                             ; preds = %2731
  br i1 %2732, label %2782, label %2745

2745:                                             ; preds = %2744
  %2746 = load i16, ptr %1965, align 8, !tbaa !141
  %2747 = icmp eq i16 %2746, 3
  br i1 %2747, label %2748, label %2751

2748:                                             ; preds = %2745
  %2749 = fpext float %2505 to double
  %2750 = call i64 (ptr, i64, ptr, ...) @BLI_snprintf(ptr noundef nonnull %28, i64 noundef 32, ptr noundef nonnull @.str.15, double noundef nofpclass(nan inf) %2749) #13
  br label %2751

2751:                                             ; preds = %2748, %2745, %2741, %2737
  %2752 = phi i64 [ %2369, %2745 ], [ %2750, %2748 ], [ %2743, %2741 ], [ %2740, %2737 ]
  %2753 = load i8, ptr %28, align 16, !tbaa !50
  %2754 = icmp eq i8 %2753, 0
  br i1 %2754, label %2782, label %2755

2755:                                             ; preds = %2751
  call void @mul_v3_m4v3(ptr noundef nonnull %31, ptr noundef nonnull %2037, ptr noundef nonnull %20) #13
  %2756 = load ptr, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  %2757 = icmp eq ptr %2756, null
  br i1 %2757, label %2758, label %2760

2758:                                             ; preds = %2755
  %2759 = call ptr @BLI_memarena_new(i64 noundef 16376, ptr noundef nonnull @__func__.view3d_cached_text_draw_add) #13
  store ptr %2759, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  br label %2760

2760:                                             ; preds = %2758, %2755
  %2761 = phi ptr [ %2759, %2758 ], [ %2756, %2755 ]
  %2762 = shl i64 %2752, 32
  %2763 = add i64 %2762, 4294967296
  %2764 = ashr exact i64 %2763, 32
  %2765 = add nsw i64 %2764, 40
  %2766 = call ptr @BLI_memarena_alloc(ptr noundef %2761, i64 noundef %2765) #13
  %2767 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %2768 = sext i32 %2767 to i64
  %2769 = getelementptr inbounds [3 x ptr], ptr @g_v3d_strings, i64 0, i64 %2768
  %2770 = load ptr, ptr %2769, align 8, !tbaa !49
  store ptr %2770, ptr %2766, align 8, !tbaa !49
  store ptr %2766, ptr %2769, align 8, !tbaa !49
  %2771 = getelementptr inbounds %struct.ViewCachedString, ptr %2766, i64 0, i32 1
  %2772 = load <2 x float>, ptr %31, align 8, !tbaa !44
  store <2 x float> %2772, ptr %2771, align 4, !tbaa !44
  %2773 = load float, ptr %1894, align 8, !tbaa !44
  %2774 = getelementptr inbounds %struct.ViewCachedString, ptr %2766, i64 0, i32 1, i64 2
  store float %2773, ptr %2774, align 4, !tbaa !44
  %2775 = getelementptr inbounds %struct.ViewCachedString, ptr %2766, i64 0, i32 2
  %2776 = load <4 x i8>, ptr %29, align 4, !tbaa !50
  store <4 x i8> %2776, ptr %2775, align 1, !tbaa !50
  %2777 = getelementptr inbounds %struct.ViewCachedString, ptr %2766, i64 0, i32 4
  store i16 10, ptr %2777, align 4, !tbaa !51
  %2778 = getelementptr inbounds %struct.ViewCachedString, ptr %2766, i64 0, i32 5
  store i16 6, ptr %2778, align 2, !tbaa !51
  %2779 = trunc i64 %2752 to i32
  %2780 = getelementptr inbounds %struct.ViewCachedString, ptr %2766, i64 0, i32 6
  store i32 %2779, ptr %2780, align 8, !tbaa !47
  %2781 = getelementptr inbounds %struct.ViewCachedString, ptr %2766, i64 0, i32 7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 4 %2781, ptr nonnull align 16 %28, i64 %2764, i1 false)
  br label %2782

2782:                                             ; preds = %2760, %2751, %2744
  %2783 = phi i64 [ %2752, %2760 ], [ %2752, %2751 ], [ %2369, %2744 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %31) #13
  br label %2784

2784:                                             ; preds = %2782, %2727, %2719, %2592, %2583, %2517, %2378, %2374
  %2785 = phi i32 [ %2371, %2374 ], [ %2371, %2378 ], [ %2594, %2782 ], [ %2594, %2727 ], [ %2542, %2592 ], [ %2594, %2719 ], [ %2371, %2583 ], [ %2371, %2517 ]
  %2786 = phi i32 [ %2370, %2374 ], [ %2370, %2378 ], [ %2622, %2782 ], [ %2622, %2727 ], [ %2370, %2592 ], [ %2622, %2719 ], [ %2370, %2583 ], [ %2370, %2517 ]
  %2787 = phi i64 [ %2369, %2374 ], [ %2369, %2378 ], [ %2783, %2782 ], [ %2369, %2727 ], [ %2369, %2592 ], [ %2369, %2719 ], [ %2369, %2583 ], [ %2369, %2517 ]
  %2788 = add nuw nsw i64 %2367, 1
  %2789 = getelementptr inbounds %struct.ParticleData, ptr %2368, i64 1
  %2790 = icmp eq i64 %2788, %2363
  br i1 %2790, label %2791, label %2366, !llvm.loop !198

2791:                                             ; preds = %2784, %2347, %2344, %2320
  %2792 = phi i32 [ %2346, %2344 ], [ 0, %2320 ], [ 0, %2347 ], [ %2785, %2784 ]
  %2793 = phi i32 [ 0, %2344 ], [ 0, %2320 ], [ 0, %2347 ], [ %2786, %2784 ]
  call void @glGetIntegerv(i32 noundef 2880, ptr noundef nonnull %27) #13
  call void @glEnableClientState(i32 noundef 32884) #13
  %2794 = icmp eq i32 %2146, 6
  br i1 %2794, label %2795, label %2935

2795:                                             ; preds = %2791
  call void @glEnableClientState(i32 noundef 32885) #13
  br i1 %1877, label %2796, label %2801

2796:                                             ; preds = %2795
  %2797 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 23
  %2798 = load i16, ptr %2797, align 4, !tbaa !148
  %2799 = icmp eq i16 %2798, 1
  br i1 %2799, label %2800, label %2801

2800:                                             ; preds = %2796
  call void @glEnableClientState(i32 noundef 32886) #13
  br label %2801

2801:                                             ; preds = %2800, %2796, %2795
  call void @glEnable(i32 noundef 2896) #13
  call void @glColorMaterial(i32 noundef 1032, i32 noundef 4609) #13
  call void @glEnable(i32 noundef 2903) #13
  %2802 = icmp eq i32 %2004, 0
  br i1 %2802, label %2807, label %2803

2803:                                             ; preds = %2801
  %2804 = load i32, ptr %2150, align 8, !tbaa !68
  %2805 = and i32 %2804, 256
  %2806 = icmp eq i32 %2805, 0
  br i1 %2806, label %2849, label %2807

2807:                                             ; preds = %2803, %2801
  %2808 = getelementptr inbounds %struct.ParticleSystem, ptr %1903, i64 0, i32 7
  %2809 = load ptr, ptr %2808, align 8, !tbaa !150
  %2810 = icmp eq ptr %2809, null
  br i1 %2810, label %2849, label %2811

2811:                                             ; preds = %2807
  %2812 = icmp sgt i32 %2041, 0
  br i1 %2812, label %2813, label %2849

2813:                                             ; preds = %2811
  %2814 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 23
  %2815 = zext i32 %2041 to i64
  br i1 %1877, label %2816, label %2835

2816:                                             ; preds = %2813, %2832
  %2817 = phi i64 [ %2833, %2832 ], [ 0, %2813 ]
  %2818 = getelementptr inbounds ptr, ptr %2809, i64 %2817
  %2819 = load ptr, ptr %2818, align 8, !tbaa !49
  %2820 = getelementptr inbounds %struct.ParticleCacheKey, ptr %2819, i64 0, i32 5
  %2821 = load i32, ptr %2820, align 4, !tbaa !199
  %2822 = icmp sgt i32 %2821, 0
  br i1 %2822, label %2823, label %2832

2823:                                             ; preds = %2816
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 60, ptr noundef nonnull %2819) #13
  %2824 = getelementptr inbounds %struct.ParticleCacheKey, ptr %2819, i64 0, i32 1
  call void @glNormalPointer(i32 noundef 5126, i32 noundef 60, ptr noundef nonnull %2824) #13
  %2825 = load i16, ptr %2814, align 4, !tbaa !148
  %2826 = icmp eq i16 %2825, 1
  br i1 %2826, label %2827, label %2829

2827:                                             ; preds = %2823
  %2828 = getelementptr inbounds %struct.ParticleCacheKey, ptr %2819, i64 0, i32 3
  call void @glColorPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 60, ptr noundef nonnull %2828) #13
  br label %2829

2829:                                             ; preds = %2827, %2823
  %2830 = load i32, ptr %2820, align 4, !tbaa !199
  %2831 = add nsw i32 %2830, 1
  call void @glDrawArrays(i32 noundef 3, i32 noundef 0, i32 noundef %2831) #13
  br label %2832

2832:                                             ; preds = %2829, %2816
  %2833 = add nuw nsw i64 %2817, 1
  %2834 = icmp eq i64 %2833, %2815
  br i1 %2834, label %2849, label %2816, !llvm.loop !201

2835:                                             ; preds = %2813, %2846
  %2836 = phi i64 [ %2847, %2846 ], [ 0, %2813 ]
  %2837 = getelementptr inbounds ptr, ptr %2809, i64 %2836
  %2838 = load ptr, ptr %2837, align 8, !tbaa !49
  %2839 = getelementptr inbounds %struct.ParticleCacheKey, ptr %2838, i64 0, i32 5
  %2840 = load i32, ptr %2839, align 4, !tbaa !199
  %2841 = icmp sgt i32 %2840, 0
  br i1 %2841, label %2842, label %2846

2842:                                             ; preds = %2835
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 60, ptr noundef nonnull %2838) #13
  %2843 = getelementptr inbounds %struct.ParticleCacheKey, ptr %2838, i64 0, i32 1
  call void @glNormalPointer(i32 noundef 5126, i32 noundef 60, ptr noundef nonnull %2843) #13
  %2844 = load i32, ptr %2839, align 4, !tbaa !199
  %2845 = add nsw i32 %2844, 1
  call void @glDrawArrays(i32 noundef 3, i32 noundef 0, i32 noundef %2845) #13
  br label %2846

2846:                                             ; preds = %2842, %2835
  %2847 = add nuw nsw i64 %2836, 1
  %2848 = icmp eq i64 %2847, %2815
  br i1 %2848, label %2849, label %2835, !llvm.loop !201

2849:                                             ; preds = %2846, %2832, %2803, %2807, %2811
  %2850 = phi i1 [ false, %2811 ], [ false, %2807 ], [ false, %2803 ], [ true, %2832 ], [ true, %2846 ]
  %2851 = phi i32 [ %2041, %2811 ], [ 0, %2807 ], [ 0, %2803 ], [ %2041, %2832 ], [ %2041, %2846 ]
  %2852 = getelementptr inbounds %struct.ParticleSystem, ptr %1903, i64 0, i32 7
  %2853 = getelementptr inbounds %struct.ParticleSystem, ptr %1903, i64 0, i32 8
  %2854 = load ptr, ptr %2853, align 8, !tbaa !144
  %2855 = icmp sgt i32 %2004, 0
  br i1 %2855, label %2856, label %2884

2856:                                             ; preds = %2849
  %2857 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 23
  %2858 = zext i32 %2004 to i64
  br i1 %1877, label %2859, label %2874

2859:                                             ; preds = %2856, %2868
  %2860 = phi i64 [ %2872, %2868 ], [ 0, %2856 ]
  %2861 = getelementptr inbounds ptr, ptr %2854, i64 %2860
  %2862 = load ptr, ptr %2861, align 8, !tbaa !49
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 60, ptr noundef %2862) #13
  %2863 = getelementptr inbounds %struct.ParticleCacheKey, ptr %2862, i64 0, i32 1
  call void @glNormalPointer(i32 noundef 5126, i32 noundef 60, ptr noundef nonnull %2863) #13
  %2864 = load i16, ptr %2857, align 4, !tbaa !148
  %2865 = icmp eq i16 %2864, 1
  br i1 %2865, label %2866, label %2868

2866:                                             ; preds = %2859
  %2867 = getelementptr inbounds %struct.ParticleCacheKey, ptr %2862, i64 0, i32 3
  call void @glColorPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 60, ptr noundef nonnull %2867) #13
  br label %2868

2868:                                             ; preds = %2866, %2859
  %2869 = getelementptr inbounds %struct.ParticleCacheKey, ptr %2862, i64 0, i32 5
  %2870 = load i32, ptr %2869, align 4, !tbaa !199
  %2871 = add nsw i32 %2870, 1
  call void @glDrawArrays(i32 noundef 3, i32 noundef 0, i32 noundef %2871) #13
  %2872 = add nuw nsw i64 %2860, 1
  %2873 = icmp eq i64 %2872, %2858
  br i1 %2873, label %2884, label %2859, !llvm.loop !202

2874:                                             ; preds = %2856, %2874
  %2875 = phi i64 [ %2882, %2874 ], [ 0, %2856 ]
  %2876 = getelementptr inbounds ptr, ptr %2854, i64 %2875
  %2877 = load ptr, ptr %2876, align 8, !tbaa !49
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 60, ptr noundef %2877) #13
  %2878 = getelementptr inbounds %struct.ParticleCacheKey, ptr %2877, i64 0, i32 1
  call void @glNormalPointer(i32 noundef 5126, i32 noundef 60, ptr noundef nonnull %2878) #13
  %2879 = getelementptr inbounds %struct.ParticleCacheKey, ptr %2877, i64 0, i32 5
  %2880 = load i32, ptr %2879, align 4, !tbaa !199
  %2881 = add nsw i32 %2880, 1
  call void @glDrawArrays(i32 noundef 3, i32 noundef 0, i32 noundef %2881) #13
  %2882 = add nuw nsw i64 %2875, 1
  %2883 = icmp eq i64 %2882, %2858
  br i1 %2883, label %2884, label %2874, !llvm.loop !202

2884:                                             ; preds = %2874, %2868, %2849
  %2885 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 23
  %2886 = load i16, ptr %2885, align 4, !tbaa !148
  %2887 = icmp eq i16 %2886, 1
  br i1 %2887, label %2888, label %2889

2888:                                             ; preds = %2884
  call void @glDisableClientState(i32 noundef 32886) #13
  br label %2889

2889:                                             ; preds = %2888, %2884
  call void @glDisable(i32 noundef 2903) #13
  call void @glLineWidth(float noundef nofpclass(nan inf) 1.000000e+00) #13
  %2890 = load i32, ptr %2150, align 8, !tbaa !68
  %2891 = and i32 %2890, 512
  %2892 = icmp eq i32 %2891, 0
  br i1 %2892, label %2979, label %2893

2893:                                             ; preds = %2889
  %2894 = load i16, ptr %94, align 2, !tbaa !15
  %2895 = and i16 %2894, 4
  %2896 = icmp eq i16 %2895, 0
  br i1 %2896, label %2897, label %2979

2897:                                             ; preds = %2893
  %2898 = load ptr, ptr %2852, align 8, !tbaa !150
  br i1 %2850, label %2899, label %2979

2899:                                             ; preds = %2897
  %2900 = zext i32 %2851 to i64
  br label %2901

2901:                                             ; preds = %2911, %2899
  %2902 = phi i64 [ 0, %2899 ], [ %2933, %2911 ]
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %32) #13
  %2903 = trunc i64 %2902 to i32
  %2904 = call i64 (ptr, i64, ptr, ...) @BLI_snprintf(ptr noundef nonnull %28, i64 noundef 32, ptr noundef nonnull @.str.16, i32 noundef %2903) #13
  %2905 = getelementptr inbounds ptr, ptr %2898, i64 %2902
  %2906 = load ptr, ptr %2905, align 8, !tbaa !49
  call void @mul_v3_m4v3(ptr noundef nonnull %32, ptr noundef nonnull %2037, ptr noundef %2906) #13
  %2907 = load ptr, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  %2908 = icmp eq ptr %2907, null
  br i1 %2908, label %2909, label %2911

2909:                                             ; preds = %2901
  %2910 = call ptr @BLI_memarena_new(i64 noundef 16376, ptr noundef nonnull @__func__.view3d_cached_text_draw_add) #13
  store ptr %2910, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  br label %2911

2911:                                             ; preds = %2909, %2901
  %2912 = phi ptr [ %2910, %2909 ], [ %2907, %2901 ]
  %2913 = shl i64 %2904, 32
  %2914 = add i64 %2913, 4294967296
  %2915 = ashr exact i64 %2914, 32
  %2916 = add nsw i64 %2915, 40
  %2917 = call ptr @BLI_memarena_alloc(ptr noundef %2912, i64 noundef %2916) #13
  %2918 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %2919 = sext i32 %2918 to i64
  %2920 = getelementptr inbounds [3 x ptr], ptr @g_v3d_strings, i64 0, i64 %2919
  %2921 = load ptr, ptr %2920, align 8, !tbaa !49
  store ptr %2921, ptr %2917, align 8, !tbaa !49
  store ptr %2917, ptr %2920, align 8, !tbaa !49
  %2922 = getelementptr inbounds %struct.ViewCachedString, ptr %2917, i64 0, i32 1
  %2923 = load <2 x float>, ptr %32, align 8, !tbaa !44
  store <2 x float> %2923, ptr %2922, align 4, !tbaa !44
  %2924 = load float, ptr %1897, align 8, !tbaa !44
  %2925 = getelementptr inbounds %struct.ViewCachedString, ptr %2917, i64 0, i32 1, i64 2
  store float %2924, ptr %2925, align 4, !tbaa !44
  %2926 = getelementptr inbounds %struct.ViewCachedString, ptr %2917, i64 0, i32 2
  %2927 = load <4 x i8>, ptr %29, align 4, !tbaa !50
  store <4 x i8> %2927, ptr %2926, align 1, !tbaa !50
  %2928 = getelementptr inbounds %struct.ViewCachedString, ptr %2917, i64 0, i32 4
  store i16 10, ptr %2928, align 4, !tbaa !51
  %2929 = getelementptr inbounds %struct.ViewCachedString, ptr %2917, i64 0, i32 5
  store i16 6, ptr %2929, align 2, !tbaa !51
  %2930 = trunc i64 %2904 to i32
  %2931 = getelementptr inbounds %struct.ViewCachedString, ptr %2917, i64 0, i32 6
  store i32 %2930, ptr %2931, align 8, !tbaa !47
  %2932 = getelementptr inbounds %struct.ViewCachedString, ptr %2917, i64 0, i32 7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 4 %2932, ptr nonnull align 16 %28, i64 %2915, i1 false)
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %32) #13
  %2933 = add nuw nsw i64 %2902, 1
  %2934 = icmp eq i64 %2933, %2900
  br i1 %2934, label %2979, label %2901, !llvm.loop !203

2935:                                             ; preds = %2791
  br i1 %2321, label %2936, label %2990

2936:                                             ; preds = %2935
  switch i32 %2146, label %2937 [
    i32 2, label %2980
    i32 0, label %2980
  ]

2937:                                             ; preds = %2936
  call void @glDisableClientState(i32 noundef 32886) #13
  %2938 = load ptr, ptr %2322, align 8, !tbaa !166
  %2939 = icmp eq ptr %2938, null
  br i1 %2939, label %2942, label %2940

2940:                                             ; preds = %2937
  call void @glEnableClientState(i32 noundef 32884) #13
  %2941 = load ptr, ptr %2322, align 8, !tbaa !166
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef %2941) #13
  br label %2943

2942:                                             ; preds = %2937
  call void @glDisableClientState(i32 noundef 32884) #13
  br label %2943

2943:                                             ; preds = %2942, %2940
  br i1 %1877, label %2944, label %2954

2944:                                             ; preds = %2943
  br i1 %1984, label %2953, label %2945

2945:                                             ; preds = %2944
  call void @UI_ThemeColor(i32 noundef 29) #13
  %2946 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 18
  %2947 = load i16, ptr %2946, align 2, !tbaa !151
  %2948 = icmp eq i16 %2947, 0
  %2949 = sext i16 %2947 to i32
  %2950 = add nsw i32 %2949, 2
  %2951 = sitofp i32 %2950 to float
  %2952 = select i1 %2948, float 4.000000e+00, float %2951
  call void @glPointSize(float noundef nofpclass(nan inf) %2952) #13
  call void @glLineWidth(float noundef nofpclass(nan inf) 3.000000e+00) #13
  call fastcc void @draw_particle_arrays(i32 noundef %2146, i32 noundef %2792, i32 noundef %1895, i32 noundef 1)
  br label %2953

2953:                                             ; preds = %2945, %2944
  call void @glColor3fv(ptr noundef nonnull %26) #13
  br label %2954

2954:                                             ; preds = %2953, %2943
  %2955 = getelementptr inbounds %struct.ParticleSettings, ptr %1932, i64 0, i32 18
  %2956 = load i16, ptr %2955, align 2, !tbaa !151
  %2957 = icmp eq i16 %2956, 0
  %2958 = sitofp i16 %2956 to float
  %2959 = select i1 %2957, float 2.000000e+00, float %2958
  call void @glPointSize(float noundef nofpclass(nan inf) %2959) #13
  call void @glLineWidth(float noundef nofpclass(nan inf) 1.000000e+00) #13
  %2960 = getelementptr inbounds %struct.ParticleDrawData, ptr %2322, i64 0, i32 2
  %2961 = load ptr, ptr %2960, align 8, !tbaa !167
  %2962 = icmp ne ptr %2961, null
  %2963 = and i1 %1896, %2962
  br i1 %2963, label %2964, label %2966

2964:                                             ; preds = %2954
  call void @glEnableClientState(i32 noundef 32885) #13
  %2965 = load ptr, ptr %2960, align 8, !tbaa !167
  call void @glNormalPointer(i32 noundef 5126, i32 noundef 0, ptr noundef %2965) #13
  call void @glEnable(i32 noundef 2896) #13
  br label %2967

2966:                                             ; preds = %2954
  call void @glDisableClientState(i32 noundef 32885) #13
  call void @glDisable(i32 noundef 2896) #13
  br label %2967

2967:                                             ; preds = %2966, %2964
  br i1 %1877, label %2968, label %2974

2968:                                             ; preds = %2967
  %2969 = getelementptr inbounds %struct.ParticleDrawData, ptr %2322, i64 0, i32 4
  %2970 = load ptr, ptr %2969, align 8, !tbaa !162
  %2971 = icmp eq ptr %2970, null
  br i1 %2971, label %2974, label %2972

2972:                                             ; preds = %2968
  call void @glEnableClientState(i32 noundef 32886) #13
  %2973 = load ptr, ptr %2969, align 8, !tbaa !162
  call void @glColorPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef %2973) #13
  br label %2974

2974:                                             ; preds = %2972, %2968, %2967
  call fastcc void @draw_particle_arrays(i32 noundef %2146, i32 noundef %2792, i32 noundef %1895, i32 noundef 0)
  %2975 = getelementptr inbounds %struct.ParticleDrawData, ptr %2322, i64 0, i32 10
  %2976 = load i32, ptr %2975, align 4, !tbaa !175
  %2977 = or i32 %2976, 1
  store i32 %2977, ptr %2975, align 4, !tbaa !175
  %2978 = getelementptr inbounds %struct.ParticleDrawData, ptr %2322, i64 0, i32 11
  store i32 %2792, ptr %2978, align 8, !tbaa !176
  br label %2980

2979:                                             ; preds = %2911, %2897, %2893, %2889
  br i1 %2321, label %2980, label %2990

2980:                                             ; preds = %2979, %2974, %2936, %2936
  %2981 = getelementptr inbounds %struct.ParticleDrawData, ptr %2322, i64 0, i32 6
  %2982 = load ptr, ptr %2981, align 8, !tbaa !168
  %2983 = icmp eq ptr %2982, null
  br i1 %2983, label %2990, label %2984

2984:                                             ; preds = %2980
  br i1 %1877, label %2985, label %2987

2985:                                             ; preds = %2984
  call void @glDisableClientState(i32 noundef 32886) #13
  call void @cpack(i32 noundef 12632256) #13
  %2986 = load ptr, ptr %2981, align 8, !tbaa !168
  br label %2987

2987:                                             ; preds = %2985, %2984
  %2988 = phi ptr [ %2986, %2985 ], [ %2982, %2984 ]
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef %2988) #13
  %2989 = shl nsw i32 %2793, 1
  call void @glDrawArrays(i32 noundef 1, i32 noundef 0, i32 noundef %2989) #13
  br label %2990

2990:                                             ; preds = %2987, %2980, %2979, %2935
  %2991 = load i32, ptr %27, align 4, !tbaa !47
  call void @glPolygonMode(i32 noundef 1028, i32 noundef %2991) #13
  %2992 = load i32, ptr %1898, align 4, !tbaa !47
  call void @glPolygonMode(i32 noundef 1029, i32 noundef %2992) #13
  call void @glDisable(i32 noundef 2896) #13
  call void @glDisableClientState(i32 noundef 32886) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @glDisableClientState(i32 noundef 32885) #13
  %2993 = load i32, ptr %1985, align 4, !tbaa !127
  %2994 = and i32 %2993, -65
  store i32 %2994, ptr %1985, align 4, !tbaa !127
  %2995 = icmp eq i32 %2146, 9
  br i1 %2995, label %2996, label %3000

2996:                                             ; preds = %2990
  call void @psys_free_pdd(ptr noundef nonnull %1903) #13
  %2997 = getelementptr inbounds %struct.ParticleDrawData, ptr %2322, i64 0, i32 10
  %2998 = load i32, ptr %2997, align 4, !tbaa !175
  %2999 = and i32 %2998, -2
  store i32 %2999, ptr %2997, align 4, !tbaa !175
  br label %3000

3000:                                             ; preds = %2996, %2990
  %3001 = load ptr, ptr %2325, align 8, !tbaa !174
  %3002 = icmp eq ptr %3001, null
  br i1 %3002, label %3004, label %3003

3003:                                             ; preds = %3000
  call void @end_latt_deform(ptr noundef nonnull %3001) #13
  store ptr null, ptr %2325, align 8, !tbaa !174
  br label %3004

3004:                                             ; preds = %3003, %3000
  br i1 %2321, label %3005, label %3007

3005:                                             ; preds = %3004
  %3006 = getelementptr inbounds %struct.ParticleDrawData, ptr %2322, i64 0, i32 8
  store ptr null, ptr %3006, align 8, !tbaa !173
  br label %3007

3007:                                             ; preds = %3005, %3004
  %3008 = load i32, ptr %1878, align 8, !tbaa !71
  %3009 = and i32 %3008, 512
  %3010 = icmp eq i32 %3009, 0
  br i1 %3010, label %3016, label %3011

3011:                                             ; preds = %3007
  %3012 = load i16, ptr %1937, align 4, !tbaa !80
  %3013 = and i16 %3012, 4096
  %3014 = icmp eq i16 %3013, 0
  br i1 %3014, label %3016, label %3015

3015:                                             ; preds = %3011
  call void @glLoadMatrixf(ptr noundef nonnull %1863) #13
  br label %3016

3016:                                             ; preds = %1928, %1940, %1948, %1959, %1973, %3007, %3011, %3015
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %29) #13
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %28) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %27) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %26) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %25) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %24) #13
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %23) #13
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %22) #13
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %21) #13
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %20) #13
  %3017 = load ptr, ptr %1903, align 8, !tbaa !49
  %3018 = icmp eq ptr %3017, null
  br i1 %3018, label %3019, label %1902, !llvm.loop !204

3019:                                             ; preds = %3016, %1862
  %3020 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 50
  %3021 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 47
  %3022 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %3020, ptr noundef nonnull %3021) #13
  call void @view3d_cached_text_draw_end(ptr noundef %2, ptr noundef %1, i8 noundef zeroext 0, ptr noundef null)
  call void @glMultMatrixf(ptr noundef nonnull %3021) #13
  br label %3023

3023:                                             ; preds = %3019, %1852, %1846
  br i1 %146, label %3024, label %3659

3024:                                             ; preds = %3023
  %3025 = load ptr, ptr %103, align 8, !tbaa !62
  %3026 = icmp eq ptr %3025, null
  br i1 %3026, label %3027, label %3659

3027:                                             ; preds = %3024
  %3028 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 27
  %3029 = load i32, ptr %3028, align 8, !tbaa !40
  %3030 = and i32 %3029, 32
  %3031 = icmp ne i32 %3030, 0
  %3032 = select i1 %3031, i1 %92, i1 false
  br i1 %3032, label %3033, label %3659

3033:                                             ; preds = %3027
  %3034 = call ptr @PE_create_current(ptr noundef nonnull %0, ptr noundef nonnull %81) #13
  %3035 = icmp eq ptr %3034, null
  br i1 %3035, label %3659, label %3036

3036:                                             ; preds = %3033
  %3037 = getelementptr inbounds %struct.RegionView3D, ptr %83, i64 0, i32 1
  call void @glLoadMatrixf(ptr noundef nonnull %3037) #13
  %3038 = getelementptr inbounds %struct.PTCacheEdit, ptr %3034, i64 0, i32 4
  %3039 = load ptr, ptr %3038, align 8, !tbaa !124
  %3040 = icmp eq ptr %3039, null
  br i1 %3040, label %3047, label %3041

3041:                                             ; preds = %3036
  %3042 = getelementptr inbounds %struct.ParticleSystem, ptr %3039, i64 0, i32 25
  %3043 = load i32, ptr %3042, align 4, !tbaa !127
  %3044 = and i32 %3043, 32
  %3045 = icmp eq i32 %3044, 0
  br i1 %3045, label %3047, label %3046

3046:                                             ; preds = %3041
  call void @PE_update_object(ptr noundef nonnull %0, ptr noundef nonnull %81, i32 noundef 0) #13
  br label %3047

3047:                                             ; preds = %3046, %3041, %3036
  %3048 = getelementptr inbounds %struct.PTCacheEdit, ptr %3034, i64 0, i32 9
  %3049 = load ptr, ptr %3048, align 8, !tbaa !128
  %3050 = icmp eq ptr %3049, null
  br i1 %3050, label %3051, label %3055

3051:                                             ; preds = %3047
  %3052 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 22, i32 5
  %3053 = load i32, ptr %3052, align 8, !tbaa !129
  %3054 = sitofp i32 %3053 to float
  call void @psys_cache_edit_paths(ptr noundef nonnull %0, ptr noundef nonnull %81, ptr noundef nonnull %3034, float noundef nofpclass(nan inf) %3054) #13
  br label %3055

3055:                                             ; preds = %3047, %3051
  %3056 = call ptr @PE_settings(ptr noundef nonnull %0) #13
  %3057 = getelementptr inbounds %struct.PTCacheEdit, ptr %3034, i64 0, i32 11
  %3058 = load i32, ptr %3057, align 8, !tbaa !205
  %3059 = load i16, ptr %3056, align 8, !tbaa !132
  %3060 = and i16 %3059, 128
  %3061 = icmp eq i16 %3060, 0
  br i1 %3061, label %3065, label %3062

3062:                                             ; preds = %3055
  %3063 = getelementptr inbounds %struct.ParticleEditSettings, ptr %3056, i64 0, i32 11
  %3064 = load i32, ptr %3063, align 4, !tbaa !206
  br label %3065

3065:                                             ; preds = %3062, %3055
  %3066 = phi i32 [ %3064, %3062 ], [ 0, %3055 ]
  %3067 = freeze i32 %3066
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %17) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %18) #13
  %3068 = load ptr, ptr %3048, align 8, !tbaa !128
  %3069 = icmp eq ptr %3068, null
  br i1 %3069, label %3657, label %3070

3070:                                             ; preds = %3065
  %3071 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 22, i32 5
  %3072 = load i32, ptr %3071, align 8, !tbaa !129
  %3073 = sitofp i32 %3072 to float
  call void @PE_hide_keys_time(ptr noundef nonnull %0, ptr noundef nonnull %3034, float noundef nofpclass(nan inf) %3073) #13
  %3074 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 28
  %3075 = load i16, ptr %3074, align 8, !tbaa !89
  %3076 = and i16 %3075, 4096
  %3077 = icmp eq i16 %3076, 0
  br i1 %3077, label %3078, label %3079

3078:                                             ; preds = %3070
  call void @glDisable(i32 noundef 2929) #13
  br label %3079

3079:                                             ; preds = %3078, %3070
  call void @UI_GetThemeColor3fv(i32 noundef 34, ptr noundef nonnull %17) #13
  call void @UI_GetThemeColor3fv(i32 noundef 33, ptr noundef nonnull %18) #13
  %3080 = load ptr, ptr %3048, align 8, !tbaa !128
  %3081 = load ptr, ptr %3080, align 8, !tbaa !49
  %3082 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3081, i64 0, i32 5
  %3083 = load i32, ptr %3082, align 4, !tbaa !199
  call void @glEnable(i32 noundef 3042) #13
  %3084 = load ptr, ptr @MEM_callocN, align 8, !tbaa !49
  %3085 = shl i32 %3083, 2
  %3086 = add i32 %3085, 4
  %3087 = sext i32 %3086 to i64
  %3088 = shl nsw i64 %3087, 2
  %3089 = call ptr %3084(i64 noundef %3088, ptr noundef nonnull @.str.17) #13
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glEnableClientState(i32 noundef 32886) #13
  call void @glColorMaterial(i32 noundef 1032, i32 noundef 4609) #13
  call void @glEnable(i32 noundef 2903) #13
  call void @glShadeModel(i32 noundef 7425) #13
  %3090 = getelementptr inbounds %struct.ParticleEditSettings, ptr %3056, i64 0, i32 3
  %3091 = load i16, ptr %3090, align 2, !tbaa !207
  %3092 = icmp eq i16 %3091, 6
  br i1 %3092, label %3093, label %3094

3093:                                             ; preds = %3079
  call void @glLineWidth(float noundef nofpclass(nan inf) 2.000000e+00) #13
  call void @glDisable(i32 noundef 2896) #13
  br label %3094

3094:                                             ; preds = %3093, %3079
  %3095 = load ptr, ptr %3048, align 8, !tbaa !128
  %3096 = getelementptr inbounds %struct.PTCacheEdit, ptr %3034, i64 0, i32 2
  %3097 = icmp sgt i32 %3058, 0
  br i1 %3097, label %3098, label %3340

3098:                                             ; preds = %3094
  %3099 = load ptr, ptr %3096, align 8, !tbaa !208
  %3100 = icmp slt i32 %3083, 0
  %3101 = icmp eq i32 %3067, 0
  %3102 = getelementptr inbounds %struct.ParticleEditSettings, ptr %3056, i64 0, i32 11
  %3103 = zext i32 %3058 to i64
  %3104 = zext i32 %3083 to i64
  %3105 = shl nuw nsw i64 %3104, 4
  %3106 = add nuw nsw i64 %3105, 16
  %3107 = getelementptr i8, ptr %3089, i64 %3106
  %3108 = mul nuw nsw i64 %3104, 60
  %3109 = add nuw nsw i64 %3108, 56
  %3110 = add i32 %3083, 1
  %3111 = zext i32 %3110 to i64
  %3112 = zext i32 %3083 to i64
  %3113 = shl nuw nsw i64 %3112, 4
  %3114 = add nuw nsw i64 %3113, 16
  %3115 = getelementptr i8, ptr %3089, i64 %3114
  %3116 = zext i32 %3110 to i64
  %3117 = add i32 %3083, 1
  %3118 = icmp ult i32 %3110, 8
  %3119 = and i64 %3116, 4294967288
  %3120 = shl nuw nsw i64 %3119, 4
  %3121 = getelementptr i8, ptr %3089, i64 %3120
  %3122 = trunc i64 %3119 to i32
  %3123 = icmp eq i64 %3119, %3116
  %3124 = icmp ult i32 %3110, 4
  %3125 = and i64 %3111, 4294967292
  %3126 = shl nuw nsw i64 %3125, 4
  %3127 = getelementptr i8, ptr %3089, i64 %3126
  %3128 = mul nuw nsw i64 %3125, 60
  %3129 = trunc i64 %3125 to i32
  %3130 = icmp eq i64 %3125, %3111
  br label %3131

3131:                                             ; preds = %3333, %3098
  %3132 = phi i64 [ 0, %3098 ], [ %3337, %3333 ]
  %3133 = phi ptr [ %3099, %3098 ], [ %3338, %3333 ]
  %3134 = getelementptr inbounds ptr, ptr %3095, i64 %3132
  %3135 = load ptr, ptr %3134, align 8, !tbaa !49
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 60, ptr noundef %3135) #13
  %3136 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3133, i64 0, i32 2
  %3137 = load i16, ptr %3136, align 4, !tbaa !209
  %3138 = and i16 %3137, 8
  %3139 = icmp eq i16 %3138, 0
  br i1 %3139, label %3209, label %3140

3140:                                             ; preds = %3131
  br i1 %3100, label %3208, label %3141

3141:                                             ; preds = %3140
  %3142 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3135, i64 0, i32 3
  %3143 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3135, i64 0, i32 3, i64 1
  %3144 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3135, i64 0, i32 3, i64 2
  br i1 %3118, label %3169, label %3145

3145:                                             ; preds = %3141
  %3146 = getelementptr i8, ptr %3135, i64 52
  %3147 = icmp ult ptr %3089, %3146
  %3148 = icmp ult ptr %3142, %3115
  %3149 = and i1 %3147, %3148
  br i1 %3149, label %3169, label %3150

3150:                                             ; preds = %3145, %3150
  %3151 = phi i64 [ %3166, %3150 ], [ 0, %3145 ]
  %3152 = shl i64 %3151, 4
  %3153 = getelementptr i8, ptr %3089, i64 %3152
  %3154 = load float, ptr %3142, align 4, !tbaa !44, !alias.scope !211
  %3155 = insertelement <8 x float> poison, float %3154, i64 0
  %3156 = shufflevector <8 x float> %3155, <8 x float> poison, <8 x i32> zeroinitializer
  %3157 = load float, ptr %3143, align 4, !tbaa !44, !alias.scope !211
  %3158 = insertelement <8 x float> poison, float %3157, i64 0
  %3159 = shufflevector <8 x float> %3158, <8 x float> poison, <8 x i32> zeroinitializer
  %3160 = load float, ptr %3144, align 4, !tbaa !44, !alias.scope !211
  %3161 = insertelement <8 x float> poison, float %3160, i64 0
  %3162 = shufflevector <8 x float> %3161, <8 x float> poison, <8 x i32> zeroinitializer
  %3163 = shufflevector <8 x float> %3156, <8 x float> %3159, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3164 = shufflevector <8 x float> %3162, <8 x float> <float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01, float 2.500000e-01>, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3165 = shufflevector <16 x float> %3163, <16 x float> %3164, <32 x i32> <i32 0, i32 8, i32 16, i32 24, i32 1, i32 9, i32 17, i32 25, i32 2, i32 10, i32 18, i32 26, i32 3, i32 11, i32 19, i32 27, i32 4, i32 12, i32 20, i32 28, i32 5, i32 13, i32 21, i32 29, i32 6, i32 14, i32 22, i32 30, i32 7, i32 15, i32 23, i32 31>
  store <32 x float> %3165, ptr %3153, align 4, !tbaa !44
  %3166 = add nuw i64 %3151, 8
  %3167 = icmp eq i64 %3166, %3119
  br i1 %3167, label %3168, label %3150, !llvm.loop !214

3168:                                             ; preds = %3150
  br i1 %3123, label %3208, label %3169

3169:                                             ; preds = %3145, %3141, %3168
  %3170 = phi ptr [ %3089, %3145 ], [ %3089, %3141 ], [ %3121, %3168 ]
  %3171 = phi i32 [ 0, %3145 ], [ 0, %3141 ], [ %3122, %3168 ]
  %3172 = sub i32 %3117, %3171
  %3173 = and i32 %3172, 1
  %3174 = icmp eq i32 %3173, 0
  br i1 %3174, label %3184, label %3175

3175:                                             ; preds = %3169
  %3176 = load float, ptr %3142, align 4, !tbaa !44
  store float %3176, ptr %3170, align 4, !tbaa !44
  %3177 = load float, ptr %3143, align 4, !tbaa !44
  %3178 = getelementptr inbounds float, ptr %3170, i64 1
  store float %3177, ptr %3178, align 4, !tbaa !44
  %3179 = load float, ptr %3144, align 4, !tbaa !44
  %3180 = getelementptr inbounds float, ptr %3170, i64 2
  store float %3179, ptr %3180, align 4, !tbaa !44
  %3181 = getelementptr inbounds float, ptr %3170, i64 3
  store float 2.500000e-01, ptr %3181, align 4, !tbaa !44
  %3182 = add nuw i32 %3171, 1
  %3183 = getelementptr inbounds float, ptr %3170, i64 4
  br label %3184

3184:                                             ; preds = %3175, %3169
  %3185 = phi ptr [ %3170, %3169 ], [ %3183, %3175 ]
  %3186 = phi i32 [ %3171, %3169 ], [ %3182, %3175 ]
  %3187 = icmp eq i32 %3083, %3171
  br i1 %3187, label %3208, label %3188

3188:                                             ; preds = %3184, %3188
  %3189 = phi ptr [ %3206, %3188 ], [ %3185, %3184 ]
  %3190 = phi i32 [ %3205, %3188 ], [ %3186, %3184 ]
  %3191 = load float, ptr %3142, align 4, !tbaa !44
  store float %3191, ptr %3189, align 4, !tbaa !44
  %3192 = load float, ptr %3143, align 4, !tbaa !44
  %3193 = getelementptr inbounds float, ptr %3189, i64 1
  store float %3192, ptr %3193, align 4, !tbaa !44
  %3194 = load float, ptr %3144, align 4, !tbaa !44
  %3195 = getelementptr inbounds float, ptr %3189, i64 2
  store float %3194, ptr %3195, align 4, !tbaa !44
  %3196 = getelementptr inbounds float, ptr %3189, i64 3
  store float 2.500000e-01, ptr %3196, align 4, !tbaa !44
  %3197 = add nuw i32 %3190, 1
  %3198 = getelementptr inbounds float, ptr %3189, i64 4
  %3199 = load float, ptr %3142, align 4, !tbaa !44
  store float %3199, ptr %3198, align 4, !tbaa !44
  %3200 = load float, ptr %3143, align 4, !tbaa !44
  %3201 = getelementptr inbounds float, ptr %3189, i64 5
  store float %3200, ptr %3201, align 4, !tbaa !44
  %3202 = load float, ptr %3144, align 4, !tbaa !44
  %3203 = getelementptr inbounds float, ptr %3189, i64 6
  store float %3202, ptr %3203, align 4, !tbaa !44
  %3204 = getelementptr inbounds float, ptr %3189, i64 7
  store float 2.500000e-01, ptr %3204, align 4, !tbaa !44
  %3205 = add nuw i32 %3190, 2
  %3206 = getelementptr inbounds float, ptr %3189, i64 8
  %3207 = icmp eq i32 %3197, %3083
  br i1 %3207, label %3208, label %3188, !llvm.loop !217

3208:                                             ; preds = %3184, %3188, %3168, %3140
  call void @glColorPointer(i32 noundef 4, i32 noundef 5126, i32 noundef 16, ptr noundef %3089) #13
  br label %3333

3209:                                             ; preds = %3131
  br i1 %3101, label %3331, label %3210

3210:                                             ; preds = %3209
  br i1 %3100, label %3330, label %3211

3211:                                             ; preds = %3210
  %3212 = load i32, ptr %3071, align 8, !tbaa !129
  %3213 = sitofp i32 %3212 to float
  %3214 = load i32, ptr %3102, align 4, !tbaa !206
  %3215 = sitofp i32 %3214 to float
  br i1 %3124, label %3302, label %3216

3216:                                             ; preds = %3211
  %3217 = getelementptr i8, ptr %3135, i64 40
  %3218 = getelementptr i8, ptr %3135, i64 %3109
  %3219 = icmp ult ptr %3089, %3218
  %3220 = icmp ult ptr %3217, %3107
  %3221 = and i1 %3219, %3220
  br i1 %3221, label %3302, label %3222

3222:                                             ; preds = %3216
  %3223 = getelementptr i8, ptr %3135, i64 %3128
  %3224 = insertelement <4 x float> poison, float %3213, i64 0
  %3225 = shufflevector <4 x float> %3224, <4 x float> poison, <4 x i32> zeroinitializer
  %3226 = insertelement <4 x float> poison, float %3215, i64 0
  %3227 = shufflevector <4 x float> %3226, <4 x float> poison, <4 x i32> zeroinitializer
  %3228 = fdiv fast <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3227
  br label %3229

3229:                                             ; preds = %3229, %3222
  %3230 = phi i64 [ 0, %3222 ], [ %3299, %3229 ]
  %3231 = shl i64 %3230, 4
  %3232 = getelementptr i8, ptr %3089, i64 %3231
  %3233 = mul i64 %3230, 60
  %3234 = getelementptr i8, ptr %3135, i64 %3233
  %3235 = mul i64 %3230, 60
  %3236 = add i64 %3235, 60
  %3237 = getelementptr i8, ptr %3135, i64 %3236
  %3238 = mul i64 %3230, 60
  %3239 = add i64 %3238, 120
  %3240 = getelementptr i8, ptr %3135, i64 %3239
  %3241 = mul i64 %3230, 60
  %3242 = add i64 %3241, 180
  %3243 = getelementptr i8, ptr %3135, i64 %3242
  %3244 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3234, i64 0, i32 3
  %3245 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3237, i64 0, i32 3
  %3246 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3240, i64 0, i32 3
  %3247 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3243, i64 0, i32 3
  %3248 = load float, ptr %3244, align 4, !tbaa !44, !alias.scope !218
  %3249 = load float, ptr %3245, align 4, !tbaa !44, !alias.scope !218
  %3250 = load float, ptr %3246, align 4, !tbaa !44, !alias.scope !218
  %3251 = load float, ptr %3247, align 4, !tbaa !44, !alias.scope !218
  %3252 = insertelement <4 x float> poison, float %3248, i64 0
  %3253 = insertelement <4 x float> %3252, float %3249, i64 1
  %3254 = insertelement <4 x float> %3253, float %3250, i64 2
  %3255 = insertelement <4 x float> %3254, float %3251, i64 3
  %3256 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3234, i64 0, i32 3, i64 1
  %3257 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3237, i64 0, i32 3, i64 1
  %3258 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3240, i64 0, i32 3, i64 1
  %3259 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3243, i64 0, i32 3, i64 1
  %3260 = load float, ptr %3256, align 4, !tbaa !44, !alias.scope !218
  %3261 = load float, ptr %3257, align 4, !tbaa !44, !alias.scope !218
  %3262 = load float, ptr %3258, align 4, !tbaa !44, !alias.scope !218
  %3263 = load float, ptr %3259, align 4, !tbaa !44, !alias.scope !218
  %3264 = insertelement <4 x float> poison, float %3260, i64 0
  %3265 = insertelement <4 x float> %3264, float %3261, i64 1
  %3266 = insertelement <4 x float> %3265, float %3262, i64 2
  %3267 = insertelement <4 x float> %3266, float %3263, i64 3
  %3268 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3234, i64 0, i32 3, i64 2
  %3269 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3237, i64 0, i32 3, i64 2
  %3270 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3240, i64 0, i32 3, i64 2
  %3271 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3243, i64 0, i32 3, i64 2
  %3272 = load float, ptr %3268, align 4, !tbaa !44, !alias.scope !218
  %3273 = load float, ptr %3269, align 4, !tbaa !44, !alias.scope !218
  %3274 = load float, ptr %3270, align 4, !tbaa !44, !alias.scope !218
  %3275 = load float, ptr %3271, align 4, !tbaa !44, !alias.scope !218
  %3276 = insertelement <4 x float> poison, float %3272, i64 0
  %3277 = insertelement <4 x float> %3276, float %3273, i64 1
  %3278 = insertelement <4 x float> %3277, float %3274, i64 2
  %3279 = insertelement <4 x float> %3278, float %3275, i64 3
  %3280 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3234, i64 0, i32 4
  %3281 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3237, i64 0, i32 4
  %3282 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3240, i64 0, i32 4
  %3283 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3243, i64 0, i32 4
  %3284 = load float, ptr %3280, align 4, !tbaa !221, !alias.scope !218
  %3285 = load float, ptr %3281, align 4, !tbaa !221, !alias.scope !218
  %3286 = load float, ptr %3282, align 4, !tbaa !221, !alias.scope !218
  %3287 = load float, ptr %3283, align 4, !tbaa !221, !alias.scope !218
  %3288 = insertelement <4 x float> poison, float %3284, i64 0
  %3289 = insertelement <4 x float> %3288, float %3285, i64 1
  %3290 = insertelement <4 x float> %3289, float %3286, i64 2
  %3291 = insertelement <4 x float> %3290, float %3287, i64 3
  %3292 = fsub fast <4 x float> %3225, %3291
  %3293 = call fast <4 x float> @llvm.fabs.v4f32(<4 x float> %3292)
  %3294 = fmul fast <4 x float> %3293, %3228
  %3295 = fsub fast <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %3294
  %3296 = shufflevector <4 x float> %3255, <4 x float> %3267, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3297 = shufflevector <4 x float> %3279, <4 x float> %3295, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3298 = shufflevector <8 x float> %3296, <8 x float> %3297, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 1, i32 5, i32 9, i32 13, i32 2, i32 6, i32 10, i32 14, i32 3, i32 7, i32 11, i32 15>
  store <16 x float> %3298, ptr %3232, align 4, !tbaa !44
  %3299 = add nuw i64 %3230, 4
  %3300 = icmp eq i64 %3299, %3125
  br i1 %3300, label %3301, label %3229, !llvm.loop !222

3301:                                             ; preds = %3229
  br i1 %3130, label %3330, label %3302

3302:                                             ; preds = %3216, %3211, %3301
  %3303 = phi ptr [ %3089, %3216 ], [ %3089, %3211 ], [ %3127, %3301 ]
  %3304 = phi ptr [ %3135, %3216 ], [ %3135, %3211 ], [ %3223, %3301 ]
  %3305 = phi i32 [ 0, %3216 ], [ 0, %3211 ], [ %3129, %3301 ]
  %3306 = fdiv fast float 1.000000e+00, %3215
  br label %3307

3307:                                             ; preds = %3302, %3307
  %3308 = phi ptr [ %3328, %3307 ], [ %3303, %3302 ]
  %3309 = phi ptr [ %3327, %3307 ], [ %3304, %3302 ]
  %3310 = phi i32 [ %3326, %3307 ], [ %3305, %3302 ]
  %3311 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3309, i64 0, i32 3
  %3312 = load float, ptr %3311, align 4, !tbaa !44
  store float %3312, ptr %3308, align 4, !tbaa !44
  %3313 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3309, i64 0, i32 3, i64 1
  %3314 = load float, ptr %3313, align 4, !tbaa !44
  %3315 = getelementptr inbounds float, ptr %3308, i64 1
  store float %3314, ptr %3315, align 4, !tbaa !44
  %3316 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3309, i64 0, i32 3, i64 2
  %3317 = load float, ptr %3316, align 4, !tbaa !44
  %3318 = getelementptr inbounds float, ptr %3308, i64 2
  store float %3317, ptr %3318, align 4, !tbaa !44
  %3319 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3309, i64 0, i32 4
  %3320 = load float, ptr %3319, align 4, !tbaa !221
  %3321 = fsub fast float %3213, %3320
  %3322 = call fast float @llvm.fabs.f32(float %3321)
  %3323 = fmul fast float %3322, %3306
  %3324 = fsub fast float 1.000000e+00, %3323
  %3325 = getelementptr inbounds float, ptr %3308, i64 3
  store float %3324, ptr %3325, align 4, !tbaa !44
  %3326 = add nuw i32 %3310, 1
  %3327 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3309, i64 1
  %3328 = getelementptr inbounds float, ptr %3308, i64 4
  %3329 = icmp eq i32 %3310, %3083
  br i1 %3329, label %3330, label %3307, !llvm.loop !223

3330:                                             ; preds = %3307, %3301, %3210
  call void @glColorPointer(i32 noundef 4, i32 noundef 5126, i32 noundef 16, ptr noundef %3089) #13
  br label %3333

3331:                                             ; preds = %3209
  %3332 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3135, i64 0, i32 3
  call void @glColorPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 60, ptr noundef nonnull %3332) #13
  br label %3333

3333:                                             ; preds = %3331, %3330, %3208
  %3334 = getelementptr inbounds %struct.ParticleCacheKey, ptr %3135, i64 0, i32 5
  %3335 = load i32, ptr %3334, align 4, !tbaa !199
  %3336 = add nsw i32 %3335, 1
  call void @glDrawArrays(i32 noundef 3, i32 noundef 0, i32 noundef %3336) #13
  %3337 = add nuw nsw i64 %3132, 1
  %3338 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3133, i64 1
  %3339 = icmp eq i64 %3337, %3103
  br i1 %3339, label %3340, label %3131, !llvm.loop !224

3340:                                             ; preds = %3333, %3094
  %3341 = icmp eq ptr %3089, null
  br i1 %3341, label %3344, label %3342

3342:                                             ; preds = %3340
  %3343 = load ptr, ptr @MEM_freeN, align 8, !tbaa !49
  call void %3343(ptr noundef nonnull %3089) #13
  br label %3344

3344:                                             ; preds = %3342, %3340
  %3345 = getelementptr inbounds %struct.ParticleEditSettings, ptr %3056, i64 0, i32 8
  %3346 = load i32, ptr %3345, align 8, !tbaa !225
  %3347 = icmp eq i32 %3346, 1
  br i1 %3347, label %3652, label %3348

3348:                                             ; preds = %3344
  %3349 = call fast nofpclass(nan inf) float @UI_GetThemeValuef(i32 noundef 36) #13
  call void @glPointSize(float noundef nofpclass(nan inf) %3349) #13
  %3350 = load i32, ptr %3345, align 8, !tbaa !225
  switch i32 %3350, label %3652 [
    i32 2, label %3351
    i32 4, label %3615
  ]

3351:                                             ; preds = %3348
  %3352 = load ptr, ptr %3096, align 8, !tbaa !208
  br i1 %3097, label %3353, label %3652

3353:                                             ; preds = %3351
  %3354 = and i32 %3058, 1
  %3355 = icmp eq i32 %3058, 1
  br i1 %3355, label %3385, label %3356

3356:                                             ; preds = %3353
  %3357 = and i32 %3058, -2
  br label %3358

3358:                                             ; preds = %3380, %3356
  %3359 = phi i32 [ 0, %3356 ], [ %3381, %3380 ]
  %3360 = phi ptr [ %3352, %3356 ], [ %3382, %3380 ]
  %3361 = phi i32 [ 0, %3356 ], [ %3383, %3380 ]
  %3362 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3360, i64 0, i32 2
  %3363 = load i16, ptr %3362, align 4, !tbaa !209
  %3364 = and i16 %3363, 8
  %3365 = icmp eq i16 %3364, 0
  br i1 %3365, label %3366, label %3370

3366:                                             ; preds = %3358
  %3367 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3360, i64 0, i32 1
  %3368 = load i32, ptr %3367, align 8, !tbaa !226
  %3369 = add nsw i32 %3368, %3359
  br label %3370

3370:                                             ; preds = %3366, %3358
  %3371 = phi i32 [ %3359, %3358 ], [ %3369, %3366 ]
  %3372 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3360, i64 1, i32 2
  %3373 = load i16, ptr %3372, align 4, !tbaa !209
  %3374 = and i16 %3373, 8
  %3375 = icmp eq i16 %3374, 0
  br i1 %3375, label %3376, label %3380

3376:                                             ; preds = %3370
  %3377 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3360, i64 1, i32 1
  %3378 = load i32, ptr %3377, align 8, !tbaa !226
  %3379 = add nsw i32 %3378, %3371
  br label %3380

3380:                                             ; preds = %3376, %3370
  %3381 = phi i32 [ %3371, %3370 ], [ %3379, %3376 ]
  %3382 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3360, i64 2
  %3383 = add i32 %3361, 2
  %3384 = icmp eq i32 %3383, %3357
  br i1 %3384, label %3385, label %3358, !llvm.loop !227

3385:                                             ; preds = %3380, %3353
  %3386 = phi i32 [ undef, %3353 ], [ %3381, %3380 ]
  %3387 = phi i32 [ 0, %3353 ], [ %3381, %3380 ]
  %3388 = phi ptr [ %3352, %3353 ], [ %3382, %3380 ]
  %3389 = icmp eq i32 %3354, 0
  br i1 %3389, label %3399, label %3390

3390:                                             ; preds = %3385
  %3391 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3388, i64 0, i32 2
  %3392 = load i16, ptr %3391, align 4, !tbaa !209
  %3393 = and i16 %3392, 8
  %3394 = icmp eq i16 %3393, 0
  br i1 %3394, label %3395, label %3399

3395:                                             ; preds = %3390
  %3396 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3388, i64 0, i32 1
  %3397 = load i32, ptr %3396, align 8, !tbaa !226
  %3398 = add nsw i32 %3397, %3387
  br label %3399

3399:                                             ; preds = %3390, %3395, %3385
  %3400 = phi i32 [ %3386, %3385 ], [ %3387, %3390 ], [ %3398, %3395 ]
  %3401 = icmp eq i32 %3400, 0
  br i1 %3401, label %3426, label %3402

3402:                                             ; preds = %3399
  %3403 = icmp eq ptr %3352, null
  br i1 %3403, label %3416, label %3404

3404:                                             ; preds = %3402
  %3405 = load ptr, ptr %3352, align 8, !tbaa !228
  %3406 = getelementptr inbounds %struct.PTCacheEditKey, ptr %3405, i64 0, i32 7
  %3407 = load i16, ptr %3406, align 4, !tbaa !229
  %3408 = and i16 %3407, 8
  %3409 = icmp eq i16 %3408, 0
  br i1 %3409, label %3410, label %3416

3410:                                             ; preds = %3404
  %3411 = load ptr, ptr @MEM_callocN, align 8, !tbaa !49
  %3412 = mul nsw i32 %3400, 3
  %3413 = sext i32 %3412 to i64
  %3414 = shl nsw i64 %3413, 2
  %3415 = call ptr %3411(i64 noundef %3414, ptr noundef nonnull @.str.18) #13
  br label %3416

3416:                                             ; preds = %3410, %3404, %3402
  %3417 = phi ptr [ null, %3404 ], [ %3415, %3410 ], [ null, %3402 ]
  %3418 = load ptr, ptr @MEM_callocN, align 8, !tbaa !49
  %3419 = icmp eq i32 %3067, 0
  %3420 = select i1 %3419, i32 3, i32 4
  %3421 = mul nsw i32 %3400, %3420
  %3422 = sext i32 %3421 to i64
  %3423 = shl nsw i64 %3422, 2
  %3424 = call ptr %3418(i64 noundef %3423, ptr noundef nonnull @.str.19) #13
  %3425 = load ptr, ptr %3096, align 8, !tbaa !208
  br label %3426

3426:                                             ; preds = %3399, %3416
  %3427 = phi ptr [ %3425, %3416 ], [ %3352, %3399 ]
  %3428 = phi ptr [ %3417, %3416 ], [ null, %3399 ]
  %3429 = phi ptr [ %3424, %3416 ], [ null, %3399 ]
  %3430 = getelementptr inbounds float, ptr %17, i64 1
  %3431 = getelementptr inbounds float, ptr %17, i64 2
  %3432 = getelementptr inbounds float, ptr %18, i64 1
  %3433 = getelementptr inbounds float, ptr %18, i64 2
  %3434 = icmp eq i32 %3067, 0
  %3435 = getelementptr inbounds %struct.ParticleEditSettings, ptr %3056, i64 0, i32 11
  br i1 %3434, label %3436, label %3497

3436:                                             ; preds = %3426, %3451
  %3437 = phi ptr [ %3453, %3451 ], [ %3429, %3426 ]
  %3438 = phi ptr [ %3452, %3451 ], [ %3428, %3426 ]
  %3439 = phi ptr [ %3455, %3451 ], [ %3427, %3426 ]
  %3440 = phi i32 [ %3454, %3451 ], [ 0, %3426 ]
  %3441 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3439, i64 0, i32 2
  %3442 = load i16, ptr %3441, align 4, !tbaa !209
  %3443 = and i16 %3442, 8
  %3444 = icmp eq i16 %3443, 0
  br i1 %3444, label %3445, label %3451

3445:                                             ; preds = %3436
  %3446 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3439, i64 0, i32 1
  %3447 = load i32, ptr %3446, align 8, !tbaa !226
  %3448 = icmp sgt i32 %3447, 0
  br i1 %3448, label %3449, label %3451

3449:                                             ; preds = %3445
  %3450 = load ptr, ptr %3439, align 8, !tbaa !228
  br label %3457

3451:                                             ; preds = %3473, %3445, %3436
  %3452 = phi ptr [ %3438, %3436 ], [ %3438, %3445 ], [ %3474, %3473 ]
  %3453 = phi ptr [ %3437, %3436 ], [ %3437, %3445 ], [ %3490, %3473 ]
  %3454 = add nuw nsw i32 %3440, 1
  %3455 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3439, i64 1
  %3456 = icmp eq i32 %3454, %3058
  br i1 %3456, label %3494, label %3436, !llvm.loop !231

3457:                                             ; preds = %3473, %3449
  %3458 = phi ptr [ %3490, %3473 ], [ %3437, %3449 ]
  %3459 = phi ptr [ %3474, %3473 ], [ %3438, %3449 ]
  %3460 = phi i32 [ %3491, %3473 ], [ 0, %3449 ]
  %3461 = phi ptr [ %3492, %3473 ], [ %3450, %3449 ]
  %3462 = icmp eq ptr %3459, null
  br i1 %3462, label %3473, label %3463

3463:                                             ; preds = %3457
  %3464 = load ptr, ptr %3461, align 8, !tbaa !232
  %3465 = load float, ptr %3464, align 4, !tbaa !44
  store float %3465, ptr %3459, align 4, !tbaa !44
  %3466 = getelementptr inbounds float, ptr %3464, i64 1
  %3467 = load float, ptr %3466, align 4, !tbaa !44
  %3468 = getelementptr inbounds float, ptr %3459, i64 1
  store float %3467, ptr %3468, align 4, !tbaa !44
  %3469 = getelementptr inbounds float, ptr %3464, i64 2
  %3470 = load float, ptr %3469, align 4, !tbaa !44
  %3471 = getelementptr inbounds float, ptr %3459, i64 2
  store float %3470, ptr %3471, align 4, !tbaa !44
  %3472 = getelementptr inbounds float, ptr %3459, i64 3
  br label %3473

3473:                                             ; preds = %3463, %3457
  %3474 = phi ptr [ %3472, %3463 ], [ null, %3457 ]
  %3475 = getelementptr inbounds %struct.PTCacheEditKey, ptr %3461, i64 0, i32 7
  %3476 = load i16, ptr %3475, align 4, !tbaa !229
  %3477 = and i16 %3476, 1
  %3478 = icmp eq i16 %3477, 0
  %3479 = getelementptr inbounds float, ptr %3458, i64 1
  %3480 = load float, ptr %18, align 4
  %3481 = load float, ptr %17, align 4
  %3482 = select i1 %3478, float %3480, float %3481
  store float %3482, ptr %3458, align 4, !tbaa !44
  %3483 = load float, ptr %3432, align 4
  %3484 = load float, ptr %3430, align 4
  %3485 = select i1 %3478, float %3483, float %3484
  store float %3485, ptr %3479, align 4, !tbaa !44
  %3486 = load float, ptr %3433, align 4
  %3487 = load float, ptr %3431, align 4
  %3488 = select i1 %3478, float %3486, float %3487
  %3489 = getelementptr inbounds float, ptr %3458, i64 2
  store float %3488, ptr %3489, align 4
  %3490 = getelementptr inbounds float, ptr %3458, i64 3
  %3491 = add nuw nsw i32 %3460, 1
  %3492 = getelementptr inbounds %struct.PTCacheEditKey, ptr %3461, i64 1
  %3493 = icmp eq i32 %3491, %3447
  br i1 %3493, label %3451, label %3457, !llvm.loop !233

3494:                                             ; preds = %3562, %3451
  %3495 = phi i32 [ 3, %3451 ], [ 4, %3562 ]
  %3496 = shl nuw nsw i32 %3495, 2
  br label %3568

3497:                                             ; preds = %3426, %3562
  %3498 = phi ptr [ %3564, %3562 ], [ %3429, %3426 ]
  %3499 = phi ptr [ %3563, %3562 ], [ %3428, %3426 ]
  %3500 = phi ptr [ %3566, %3562 ], [ %3427, %3426 ]
  %3501 = phi i32 [ %3565, %3562 ], [ 0, %3426 ]
  %3502 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3500, i64 0, i32 2
  %3503 = load i16, ptr %3502, align 4, !tbaa !209
  %3504 = and i16 %3503, 8
  %3505 = icmp eq i16 %3504, 0
  br i1 %3505, label %3506, label %3562

3506:                                             ; preds = %3497
  %3507 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3500, i64 0, i32 1
  %3508 = load i32, ptr %3507, align 8, !tbaa !226
  %3509 = icmp sgt i32 %3508, 0
  br i1 %3509, label %3510, label %3562

3510:                                             ; preds = %3506
  %3511 = load ptr, ptr %3500, align 8, !tbaa !228
  %3512 = load i32, ptr %3071, align 8, !tbaa !129
  %3513 = sitofp i32 %3512 to float
  %3514 = load i32, ptr %3435, align 4, !tbaa !206
  %3515 = sitofp i32 %3514 to float
  %3516 = fdiv fast float 1.000000e+00, %3515
  br label %3517

3517:                                             ; preds = %3533, %3510
  %3518 = phi ptr [ %3498, %3510 ], [ %3558, %3533 ]
  %3519 = phi ptr [ %3499, %3510 ], [ %3534, %3533 ]
  %3520 = phi i32 [ 0, %3510 ], [ %3559, %3533 ]
  %3521 = phi ptr [ %3511, %3510 ], [ %3560, %3533 ]
  %3522 = icmp eq ptr %3519, null
  br i1 %3522, label %3533, label %3523

3523:                                             ; preds = %3517
  %3524 = load ptr, ptr %3521, align 8, !tbaa !232
  %3525 = load float, ptr %3524, align 4, !tbaa !44
  store float %3525, ptr %3519, align 4, !tbaa !44
  %3526 = getelementptr inbounds float, ptr %3524, i64 1
  %3527 = load float, ptr %3526, align 4, !tbaa !44
  %3528 = getelementptr inbounds float, ptr %3519, i64 1
  store float %3527, ptr %3528, align 4, !tbaa !44
  %3529 = getelementptr inbounds float, ptr %3524, i64 2
  %3530 = load float, ptr %3529, align 4, !tbaa !44
  %3531 = getelementptr inbounds float, ptr %3519, i64 2
  store float %3530, ptr %3531, align 4, !tbaa !44
  %3532 = getelementptr inbounds float, ptr %3519, i64 3
  br label %3533

3533:                                             ; preds = %3523, %3517
  %3534 = phi ptr [ %3532, %3523 ], [ null, %3517 ]
  %3535 = getelementptr inbounds %struct.PTCacheEditKey, ptr %3521, i64 0, i32 7
  %3536 = load i16, ptr %3535, align 4, !tbaa !229
  %3537 = and i16 %3536, 1
  %3538 = icmp eq i16 %3537, 0
  %3539 = getelementptr inbounds float, ptr %3518, i64 1
  %3540 = load float, ptr %18, align 4
  %3541 = load float, ptr %17, align 4
  %3542 = select i1 %3538, float %3540, float %3541
  store float %3542, ptr %3518, align 4, !tbaa !44
  %3543 = load float, ptr %3432, align 4
  %3544 = load float, ptr %3430, align 4
  %3545 = select i1 %3538, float %3543, float %3544
  store float %3545, ptr %3539, align 4, !tbaa !44
  %3546 = load float, ptr %3433, align 4
  %3547 = load float, ptr %3431, align 4
  %3548 = select i1 %3538, float %3546, float %3547
  %3549 = getelementptr inbounds float, ptr %3518, i64 2
  store float %3548, ptr %3549, align 4
  %3550 = getelementptr inbounds %struct.PTCacheEditKey, ptr %3521, i64 0, i32 3
  %3551 = load ptr, ptr %3550, align 8, !tbaa !234
  %3552 = load float, ptr %3551, align 4, !tbaa !44
  %3553 = fsub fast float %3513, %3552
  %3554 = call fast float @llvm.fabs.f32(float %3553)
  %3555 = fmul fast float %3554, %3516
  %3556 = fsub fast float 1.000000e+00, %3555
  %3557 = getelementptr inbounds float, ptr %3518, i64 3
  store float %3556, ptr %3557, align 4, !tbaa !44
  %3558 = getelementptr inbounds float, ptr %3518, i64 4
  %3559 = add nuw nsw i32 %3520, 1
  %3560 = getelementptr inbounds %struct.PTCacheEditKey, ptr %3521, i64 1
  %3561 = icmp eq i32 %3559, %3508
  br i1 %3561, label %3562, label %3517, !llvm.loop !233

3562:                                             ; preds = %3533, %3506, %3497
  %3563 = phi ptr [ %3499, %3497 ], [ %3499, %3506 ], [ %3534, %3533 ]
  %3564 = phi ptr [ %3498, %3497 ], [ %3498, %3506 ], [ %3558, %3533 ]
  %3565 = add nuw nsw i32 %3501, 1
  %3566 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3500, i64 1
  %3567 = icmp eq i32 %3565, %3058
  br i1 %3567, label %3494, label %3497, !llvm.loop !231

3568:                                             ; preds = %3601, %3494
  %3569 = phi ptr [ %3429, %3494 ], [ %3603, %3601 ]
  %3570 = phi ptr [ %3428, %3494 ], [ %3602, %3601 ]
  %3571 = phi ptr [ %3427, %3494 ], [ %3605, %3601 ]
  %3572 = phi i32 [ 0, %3494 ], [ %3604, %3601 ]
  %3573 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3571, i64 0, i32 2
  %3574 = load i16, ptr %3573, align 4, !tbaa !209
  %3575 = and i16 %3574, 8
  %3576 = icmp eq i16 %3575, 0
  br i1 %3576, label %3577, label %3601

3577:                                             ; preds = %3568
  %3578 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3571, i64 0, i32 1
  %3579 = load i32, ptr %3578, align 8, !tbaa !226
  %3580 = icmp eq i32 %3579, 0
  br i1 %3580, label %3601, label %3581

3581:                                             ; preds = %3577
  %3582 = load ptr, ptr %3571, align 8, !tbaa !228
  %3583 = getelementptr inbounds %struct.PTCacheEditKey, ptr %3582, i64 0, i32 7
  %3584 = load i16, ptr %3583, align 4, !tbaa !229
  %3585 = and i16 %3584, 8
  %3586 = icmp eq i16 %3585, 0
  br i1 %3586, label %3589, label %3587

3587:                                             ; preds = %3581
  %3588 = getelementptr inbounds %struct.PTCacheEditKey, ptr %3582, i64 0, i32 4
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 56, ptr noundef nonnull %3588) #13
  br label %3590

3589:                                             ; preds = %3581
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 12, ptr noundef %3570) #13
  br label %3590

3590:                                             ; preds = %3589, %3587
  call void @glColorPointer(i32 noundef %3495, i32 noundef 5126, i32 noundef %3496, ptr noundef %3569) #13
  %3591 = load i32, ptr %3578, align 8, !tbaa !226
  call void @glDrawArrays(i32 noundef 0, i32 noundef 0, i32 noundef %3591) #13
  %3592 = icmp eq ptr %3570, null
  %3593 = load i32, ptr %3578, align 8, !tbaa !226
  %3594 = mul nsw i32 %3593, 3
  %3595 = sext i32 %3594 to i64
  %3596 = select i1 %3592, i64 0, i64 %3595
  %3597 = getelementptr inbounds float, ptr %3570, i64 %3596
  %3598 = mul nsw i32 %3593, %3495
  %3599 = sext i32 %3598 to i64
  %3600 = getelementptr inbounds float, ptr %3569, i64 %3599
  br label %3601

3601:                                             ; preds = %3590, %3577, %3568
  %3602 = phi ptr [ %3570, %3568 ], [ %3570, %3577 ], [ %3597, %3590 ]
  %3603 = phi ptr [ %3569, %3568 ], [ %3569, %3577 ], [ %3600, %3590 ]
  %3604 = add nuw nsw i32 %3572, 1
  %3605 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3571, i64 1
  %3606 = icmp eq i32 %3604, %3058
  br i1 %3606, label %3607, label %3568, !llvm.loop !235

3607:                                             ; preds = %3601
  %3608 = icmp eq ptr %3428, null
  br i1 %3608, label %3611, label %3609

3609:                                             ; preds = %3607
  %3610 = load ptr, ptr @MEM_freeN, align 8, !tbaa !49
  call void %3610(ptr noundef nonnull %3428) #13
  br label %3611

3611:                                             ; preds = %3609, %3607
  %3612 = icmp eq ptr %3429, null
  br i1 %3612, label %3652, label %3613

3613:                                             ; preds = %3611
  %3614 = load ptr, ptr @MEM_freeN, align 8, !tbaa !49
  call void %3614(ptr noundef nonnull %3429) #13
  br label %3652

3615:                                             ; preds = %3348
  br i1 %3097, label %3616, label %3652

3616:                                             ; preds = %3615
  %3617 = load ptr, ptr %3096, align 8, !tbaa !208
  br label %3618

3618:                                             ; preds = %3648, %3616
  %3619 = phi ptr [ %3650, %3648 ], [ %3617, %3616 ]
  %3620 = phi i32 [ %3649, %3648 ], [ 0, %3616 ]
  %3621 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3619, i64 0, i32 2
  %3622 = load i16, ptr %3621, align 4, !tbaa !209
  %3623 = and i16 %3622, 8
  %3624 = icmp eq i16 %3623, 0
  br i1 %3624, label %3625, label %3648

3625:                                             ; preds = %3618
  %3626 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3619, i64 0, i32 1
  %3627 = load i32, ptr %3626, align 8, !tbaa !226
  %3628 = icmp eq i32 %3627, 0
  br i1 %3628, label %3648, label %3629

3629:                                             ; preds = %3625
  %3630 = load ptr, ptr %3619, align 8, !tbaa !228
  %3631 = sext i32 %3627 to i64
  %3632 = getelementptr inbounds %struct.PTCacheEditKey, ptr %3630, i64 %3631
  %3633 = getelementptr %struct.PTCacheEditKey, ptr %3632, i64 -1, i32 7
  %3634 = load i16, ptr %3633, align 4, !tbaa !229
  %3635 = and i16 %3634, 1
  %3636 = icmp eq i16 %3635, 0
  %3637 = select i1 %3636, ptr %18, ptr %17
  call void @glColor3fv(ptr noundef nonnull %3637) #13
  call void @glBegin(i32 noundef 0) #13
  %3638 = load i16, ptr %3633, align 4, !tbaa !229
  %3639 = and i16 %3638, 8
  %3640 = icmp eq i16 %3639, 0
  br i1 %3640, label %3643, label %3641

3641:                                             ; preds = %3629
  %3642 = getelementptr %struct.PTCacheEditKey, ptr %3632, i64 -1, i32 4
  br label %3646

3643:                                             ; preds = %3629
  %3644 = getelementptr inbounds %struct.PTCacheEditKey, ptr %3632, i64 -1
  %3645 = load ptr, ptr %3644, align 8, !tbaa !232
  br label %3646

3646:                                             ; preds = %3643, %3641
  %3647 = phi ptr [ %3642, %3641 ], [ %3645, %3643 ]
  call void @glVertex3fv(ptr noundef %3647) #13
  call void @glEnd() #13
  br label %3648

3648:                                             ; preds = %3646, %3625, %3618
  %3649 = add nuw nsw i32 %3620, 1
  %3650 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %3619, i64 1
  %3651 = icmp eq i32 %3649, %3058
  br i1 %3651, label %3652, label %3618, !llvm.loop !236

3652:                                             ; preds = %3648, %3615, %3613, %3611, %3351, %3348, %3344
  call void @glDisable(i32 noundef 3042) #13
  call void @glDisable(i32 noundef 2896) #13
  call void @glDisable(i32 noundef 2903) #13
  call void @glDisableClientState(i32 noundef 32886) #13
  call void @glDisableClientState(i32 noundef 32885) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @glShadeModel(i32 noundef 7424) #13
  %3653 = load i8, ptr %290, align 8, !tbaa !58
  %3654 = icmp eq i8 %3653, 0
  br i1 %3654, label %3656, label %3655

3655:                                             ; preds = %3652
  call void @glEnable(i32 noundef 2929) #13
  br label %3656

3656:                                             ; preds = %3655, %3652
  call void @glLineWidth(float noundef nofpclass(nan inf) 1.000000e+00) #13
  call void @glPointSize(float noundef nofpclass(nan inf) 1.000000e+00) #13
  br label %3657

3657:                                             ; preds = %3065, %3656
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %18) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %17) #13
  %3658 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 47
  call void @glMultMatrixf(ptr noundef nonnull %3658) #13
  br label %3659

3659:                                             ; preds = %3033, %3657, %3027, %3024, %3023
  %3660 = call ptr @modifiers_findByType(ptr noundef %81, i32 noundef 31) #13
  %3661 = icmp eq ptr %3660, null
  br i1 %3661, label %3832, label %3662

3662:                                             ; preds = %3659
  %3663 = call zeroext i8 @modifier_isEnabled(ptr noundef %0, ptr noundef nonnull %3660, i32 noundef 1) #13
  %3664 = icmp eq i8 %3663, 0
  br i1 %3664, label %3832, label %3665

3665:                                             ; preds = %3662
  %3666 = getelementptr inbounds %struct.SmokeModifierData, ptr %3660, i64 0, i32 1
  %3667 = load ptr, ptr %3666, align 8, !tbaa !237
  %3668 = icmp eq ptr %3667, null
  br i1 %3668, label %3832, label %3669

3669:                                             ; preds = %3665
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %72) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %73) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %74) #13
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %75) #13
  %3670 = getelementptr inbounds %struct.RegionView3D, ptr %83, i64 0, i32 1
  call void @glLoadMatrixf(ptr noundef nonnull %3670) #13
  %3671 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 47
  call void @glMultMatrixf(ptr noundef nonnull %3671) #13
  %3672 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 37
  %3673 = load i32, ptr %3672, align 4, !tbaa !240
  %3674 = and i32 %3673, 128
  %3675 = icmp eq i32 %3674, 0
  br i1 %3675, label %3702, label %3676

3676:                                             ; preds = %3669
  %3677 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 12
  %3678 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 15
  %3679 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 31
  %3680 = load i32, ptr %3679, align 4, !tbaa !242
  %3681 = sitofp i32 %3680 to float
  %3682 = load <2 x float>, ptr %3677, align 8, !tbaa !44
  %3683 = load <2 x float>, ptr %3678, align 4, !tbaa !44
  %3684 = insertelement <2 x float> poison, float %3681, i64 0
  %3685 = shufflevector <2 x float> %3684, <2 x float> poison, <2 x i32> zeroinitializer
  %3686 = fmul fast <2 x float> %3683, %3685
  %3687 = fsub fast <2 x float> %3682, %3686
  store <2 x float> %3687, ptr %72, align 8, !tbaa !44
  %3688 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 12, i64 2
  %3689 = load float, ptr %3688, align 4, !tbaa !44
  %3690 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 15, i64 2
  %3691 = load float, ptr %3690, align 4, !tbaa !44
  %3692 = fmul fast float %3691, %3681
  %3693 = fsub fast float %3689, %3692
  %3694 = getelementptr inbounds float, ptr %72, i64 2
  store float %3693, ptr %3694, align 8, !tbaa !44
  %3695 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 13
  %3696 = load <2 x float>, ptr %3695, align 4, !tbaa !44
  %3697 = fadd fast <2 x float> %3696, %3686
  store <2 x float> %3697, ptr %73, align 8, !tbaa !44
  %3698 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 13, i64 2
  %3699 = load float, ptr %3698, align 4, !tbaa !44
  %3700 = fadd fast float %3699, %3692
  %3701 = getelementptr inbounds float, ptr %73, i64 2
  store float %3700, ptr %3701, align 8, !tbaa !44
  call void @BKE_boundbox_init_from_minmax(ptr noundef nonnull %75, ptr noundef nonnull %72, ptr noundef nonnull %73) #13
  call fastcc void @draw_box(ptr noundef nonnull %75)
  br label %3702

3702:                                             ; preds = %3676, %3669
  %3703 = load ptr, ptr %3666, align 8, !tbaa !237
  %3704 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3703, i64 0, i32 1
  %3705 = load ptr, ptr %3704, align 8, !tbaa !243
  %3706 = icmp eq ptr %3705, null
  br i1 %3706, label %3831, label %3707

3707:                                             ; preds = %3702
  %3708 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 22, i32 5
  %3709 = load i32, ptr %3708, align 8, !tbaa !129
  %3710 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3703, i64 0, i32 47
  %3711 = load ptr, ptr %3710, align 8, !tbaa !49
  %3712 = getelementptr inbounds %struct.PointCache, ptr %3711, i64 0, i32 5
  %3713 = load i32, ptr %3712, align 4, !tbaa !244
  %3714 = icmp slt i32 %3709, %3713
  br i1 %3714, label %3831, label %3715

3715:                                             ; preds = %3707
  %3716 = getelementptr inbounds %struct.RegionView3D, ptr %83, i64 0, i32 2, i64 2
  %3717 = load <2 x float>, ptr %3716, align 4, !tbaa !44
  store <2 x float> %3717, ptr %74, align 8, !tbaa !44
  %3718 = getelementptr inbounds %struct.RegionView3D, ptr %83, i64 0, i32 2, i64 2, i64 2
  %3719 = load float, ptr %3718, align 4, !tbaa !44
  %3720 = getelementptr inbounds float, ptr %74, i64 2
  store float %3719, ptr %3720, align 8, !tbaa !44
  %3721 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 50
  %3722 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %3721, ptr noundef nonnull %3671) #13
  call void @mul_mat3_m4_v3(ptr noundef nonnull %3721, ptr noundef nonnull %74) #13
  %3723 = load <2 x float>, ptr %74, align 8, !tbaa !44
  %3724 = fmul fast <2 x float> %3723, %3723
  %3725 = shufflevector <2 x float> %3724, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %3726 = fadd fast <2 x float> %3725, %3724
  %3727 = extractelement <2 x float> %3726, i64 0
  %3728 = load float, ptr %3720, align 8, !tbaa !44
  %3729 = fmul fast float %3728, %3728
  %3730 = fadd fast float %3727, %3729
  %3731 = fcmp fast ogt float %3730, 0x38AA95A5C0000000
  br i1 %3731, label %3732, label %3739

3732:                                             ; preds = %3715
  %3733 = call fast float @llvm.sqrt.f32(float %3730)
  %3734 = fdiv fast float 1.000000e+00, %3733
  %3735 = insertelement <2 x float> poison, float %3734, i64 0
  %3736 = shufflevector <2 x float> %3735, <2 x float> poison, <2 x i32> zeroinitializer
  %3737 = fmul fast <2 x float> %3736, %3723
  %3738 = fmul fast float %3734, %3728
  br label %3739

3739:                                             ; preds = %3715, %3732
  %3740 = phi float [ %3738, %3732 ], [ 0.000000e+00, %3715 ]
  %3741 = phi <2 x float> [ %3737, %3732 ], [ zeroinitializer, %3715 ]
  store <2 x float> %3741, ptr %74, align 8
  store float %3740, ptr %3720, align 8
  %3742 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 12
  %3743 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 15
  %3744 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 24
  %3745 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 20
  %3746 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 36
  %3747 = load <2 x float>, ptr %3742, align 8, !tbaa !44
  %3748 = load <2 x float>, ptr %3743, align 4, !tbaa !44
  %3749 = load <2 x i32>, ptr %3744, align 8, !tbaa !47
  %3750 = sitofp <2 x i32> %3749 to <2 x float>
  %3751 = fmul fast <2 x float> %3748, %3750
  %3752 = load <2 x float>, ptr %3745, align 8, !tbaa !44
  %3753 = fadd fast <2 x float> %3752, %3747
  %3754 = fadd fast <2 x float> %3753, %3751
  %3755 = load <2 x float>, ptr %3746, align 4, !tbaa !44
  %3756 = call fast <2 x float> @llvm.fabs.v2f32(<2 x float> %3755)
  %3757 = fmul fast <2 x float> %3754, %3756
  store <2 x float> %3757, ptr %72, align 8, !tbaa !44
  %3758 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 12, i64 2
  %3759 = load float, ptr %3758, align 8, !tbaa !44
  %3760 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 15, i64 2
  %3761 = load float, ptr %3760, align 4, !tbaa !44
  %3762 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 24, i64 2
  %3763 = load i32, ptr %3762, align 8, !tbaa !47
  %3764 = sitofp i32 %3763 to float
  %3765 = fmul fast float %3761, %3764
  %3766 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 20, i64 2
  %3767 = load float, ptr %3766, align 8, !tbaa !44
  %3768 = fadd fast float %3767, %3759
  %3769 = fadd fast float %3768, %3765
  %3770 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 36, i64 2
  %3771 = load float, ptr %3770, align 4, !tbaa !44
  %3772 = call fast float @llvm.fabs.f32(float %3771)
  %3773 = fmul fast float %3769, %3772
  %3774 = getelementptr inbounds [3 x float], ptr %72, i64 0, i64 2
  store float %3773, ptr %3774, align 8, !tbaa !44
  %3775 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 25
  %3776 = load <2 x i32>, ptr %3775, align 4, !tbaa !47
  %3777 = sitofp <2 x i32> %3776 to <2 x float>
  %3778 = fmul fast <2 x float> %3748, %3777
  %3779 = fadd fast <2 x float> %3753, %3778
  %3780 = fmul fast <2 x float> %3779, %3756
  store <2 x float> %3780, ptr %73, align 8, !tbaa !44
  %3781 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 25, i64 2
  %3782 = load i32, ptr %3781, align 4, !tbaa !47
  %3783 = sitofp i32 %3782 to float
  %3784 = fmul fast float %3761, %3783
  %3785 = fadd fast float %3768, %3784
  %3786 = fmul fast float %3785, %3772
  %3787 = getelementptr inbounds [3 x float], ptr %73, i64 0, i64 2
  store float %3786, ptr %3787, align 8, !tbaa !44
  %3788 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 6
  %3789 = load ptr, ptr %3788, align 8, !tbaa !246
  %3790 = icmp eq ptr %3789, null
  br i1 %3790, label %3796, label %3791

3791:                                             ; preds = %3739
  %3792 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 38
  %3793 = load i32, ptr %3792, align 8, !tbaa !247
  %3794 = and i32 %3793, 1
  %3795 = icmp eq i32 %3794, 0
  br i1 %3795, label %3796, label %3814

3796:                                             ; preds = %3791, %3739
  %3797 = load ptr, ptr %3666, align 8, !tbaa !237
  %3798 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3797, i64 0, i32 7
  store ptr null, ptr %3798, align 8, !tbaa !248
  call void @GPU_create_smoke(ptr noundef nonnull %3660, i32 noundef 0) #13
  %3799 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 7
  %3800 = load ptr, ptr %3799, align 8, !tbaa !248
  %3801 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 26
  %3802 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 28
  %3803 = load float, ptr %3802, align 8, !tbaa !249
  %3804 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 29
  %3805 = load float, ptr %3804, align 4, !tbaa !250
  %3806 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 36
  %3807 = load i32, ptr %3806, align 8, !tbaa !251
  %3808 = sitofp i32 %3807 to float
  %3809 = fmul fast float %3805, %3808
  %3810 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 9
  %3811 = load ptr, ptr %3810, align 8, !tbaa !252
  %3812 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 10
  %3813 = load ptr, ptr %3812, align 8, !tbaa !253
  call void @draw_smoke_volume(ptr noundef nonnull %3667, ptr noundef nonnull %81, ptr noundef %3800, ptr noundef nonnull %72, ptr noundef nonnull %73, ptr noundef nonnull %3801, float noundef nofpclass(nan inf) %3803, float noundef nofpclass(nan inf) %3809, ptr noundef nonnull %74, ptr noundef %3811, ptr noundef %3813) #13
  br label %3830

3814:                                             ; preds = %3791
  %3815 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 7
  store ptr null, ptr %3815, align 8, !tbaa !248
  call void @GPU_create_smoke(ptr noundef nonnull %3660, i32 noundef 1) #13
  %3816 = load ptr, ptr %3815, align 8, !tbaa !248
  %3817 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 43
  %3818 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 28
  %3819 = load float, ptr %3818, align 8, !tbaa !249
  %3820 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 29
  %3821 = load float, ptr %3820, align 4, !tbaa !250
  %3822 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 36
  %3823 = load i32, ptr %3822, align 8, !tbaa !251
  %3824 = sitofp i32 %3823 to float
  %3825 = fmul fast float %3821, %3824
  %3826 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 9
  %3827 = load ptr, ptr %3826, align 8, !tbaa !252
  %3828 = getelementptr inbounds %struct.SmokeDomainSettings, ptr %3667, i64 0, i32 10
  %3829 = load ptr, ptr %3828, align 8, !tbaa !253
  call void @draw_smoke_volume(ptr noundef nonnull %3667, ptr noundef nonnull %81, ptr noundef %3816, ptr noundef nonnull %72, ptr noundef nonnull %73, ptr noundef nonnull %3817, float noundef nofpclass(nan inf) %3819, float noundef nofpclass(nan inf) %3825, ptr noundef nonnull %74, ptr noundef %3827, ptr noundef %3829) #13
  br label %3830

3830:                                             ; preds = %3814, %3796
  call void @GPU_free_smoke(ptr noundef nonnull %3660) #13
  br label %3831

3831:                                             ; preds = %3830, %3707, %3702
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %75) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %74) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %73) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %72) #13
  br label %3832

3832:                                             ; preds = %3665, %3831, %3662, %3659
  br i1 %201, label %4350, label %3833

3833:                                             ; preds = %3832
  %3834 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 106
  %3835 = load ptr, ptr %3834, align 8, !tbaa !49
  %3836 = icmp eq ptr %3835, null
  br i1 %3836, label %3987, label %3837

3837:                                             ; preds = %3833
  %3838 = getelementptr inbounds float, ptr %16, i64 2
  %3839 = getelementptr inbounds float, ptr %15, i64 1
  %3840 = getelementptr inbounds float, ptr %15, i64 2
  %3841 = and i16 %4, 2
  %3842 = icmp eq i16 %3841, 0
  %3843 = getelementptr inbounds i8, ptr %278, i64 1
  %3844 = getelementptr inbounds i8, ptr %278, i64 2
  %3845 = getelementptr inbounds i8, ptr %278, i64 3
  br label %3846

3846:                                             ; preds = %3837, %3984
  %3847 = phi ptr [ %3835, %3837 ], [ %3985, %3984 ]
  %3848 = getelementptr inbounds %struct.bConstraint, ptr %3847, i64 0, i32 3
  %3849 = load i16, ptr %3848, align 8, !tbaa !254
  %3850 = icmp eq i16 %3849, 17
  br i1 %3850, label %3851, label %3984

3851:                                             ; preds = %3846
  %3852 = getelementptr inbounds %struct.bConstraint, ptr %3847, i64 0, i32 2
  %3853 = load ptr, ptr %3852, align 8, !tbaa !256
  %3854 = getelementptr inbounds %struct.bRigidBodyJointConstraint, ptr %3853, i64 0, i32 12
  %3855 = load i16, ptr %3854, align 8, !tbaa !257
  %3856 = and i16 %3855, 64
  %3857 = icmp eq i16 %3856, 0
  br i1 %3857, label %3984, label %3858

3858:                                             ; preds = %3851
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %14) #13
  %3859 = getelementptr inbounds %struct.bRigidBodyJointConstraint, ptr %3853, i64 0, i32 6
  call void @eul_to_mat4(ptr noundef nonnull %14, ptr noundef nonnull %3859) #13
  call void @glLineWidth(float noundef nofpclass(nan inf) 4.000000e+00) #13
  call void @setlinestyle(i32 noundef 2) #13
  %3860 = getelementptr inbounds %struct.bRigidBodyJointConstraint, ptr %3853, i64 0, i32 3
  %3861 = getelementptr inbounds %struct.bRigidBodyJointConstraint, ptr %3853, i64 0, i32 5
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %15) #13
  store i64 0, ptr %3839, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %16) #13
  %3862 = load float, ptr %3861, align 4, !tbaa !44
  store float %3862, ptr %3838, align 8, !tbaa !44
  store float 1.000000e+00, ptr %15, align 8, !tbaa !44
  %3863 = load <2 x float>, ptr %3860, align 4, !tbaa !44
  store <2 x float> %3863, ptr %16, align 8, !tbaa !44
  call void @glBegin(i32 noundef 1) #13
  call void @mul_m4_v3(ptr noundef nonnull %14, ptr noundef nonnull %15) #13
  %3864 = load <2 x float>, ptr %15, align 8, !tbaa !44
  %3865 = fadd fast <2 x float> %3864, %3863
  store <2 x float> %3865, ptr %16, align 8, !tbaa !44
  %3866 = load float, ptr %3840, align 8, !tbaa !44
  %3867 = fadd fast float %3866, %3862
  store float %3867, ptr %3838, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %3860) #13
  call void @glVertex3fv(ptr noundef nonnull %16) #13
  call void @glEnd() #13
  br i1 %3842, label %3885, label %3868

3868:                                             ; preds = %3858
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %16) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %15) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %15) #13
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %15, i8 0, i64 12, i1 false)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %16) #13
  %3869 = load <2 x float>, ptr %3860, align 4, !tbaa !44
  store <2 x float> %3869, ptr %16, align 8, !tbaa !44
  %3870 = load float, ptr %3861, align 4, !tbaa !44
  store float %3870, ptr %3838, align 8, !tbaa !44
  store float 1.000000e+00, ptr %3839, align 4, !tbaa !44
  call void @glBegin(i32 noundef 1) #13
  call void @mul_m4_v3(ptr noundef nonnull %14, ptr noundef nonnull %15) #13
  %3871 = load <2 x float>, ptr %15, align 8, !tbaa !44
  %3872 = load <2 x float>, ptr %16, align 8, !tbaa !44
  %3873 = fadd fast <2 x float> %3872, %3871
  store <2 x float> %3873, ptr %16, align 8, !tbaa !44
  %3874 = load float, ptr %3840, align 8, !tbaa !44
  %3875 = load float, ptr %3838, align 8, !tbaa !44
  %3876 = fadd fast float %3875, %3874
  store float %3876, ptr %3838, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %3860) #13
  call void @glVertex3fv(ptr noundef nonnull %16) #13
  call void @glEnd() #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %16) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %15) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %15) #13
  store i64 0, ptr %15, align 8
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %16) #13
  %3877 = load <2 x float>, ptr %3860, align 4, !tbaa !44
  store <2 x float> %3877, ptr %16, align 8, !tbaa !44
  %3878 = load float, ptr %3861, align 4, !tbaa !44
  store float %3878, ptr %3838, align 8, !tbaa !44
  store float 1.000000e+00, ptr %3840, align 8, !tbaa !44
  call void @glBegin(i32 noundef 1) #13
  call void @mul_m4_v3(ptr noundef nonnull %14, ptr noundef nonnull %15) #13
  %3879 = load <2 x float>, ptr %15, align 8, !tbaa !44
  %3880 = load <2 x float>, ptr %16, align 8, !tbaa !44
  %3881 = fadd fast <2 x float> %3880, %3879
  store <2 x float> %3881, ptr %16, align 8, !tbaa !44
  %3882 = load float, ptr %3840, align 8, !tbaa !44
  %3883 = load float, ptr %3838, align 8, !tbaa !44
  %3884 = fadd fast float %3883, %3882
  store float %3884, ptr %3838, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %3860) #13
  call void @glVertex3fv(ptr noundef nonnull %16) #13
  call void @glEnd() #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %16) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %15) #13
  br label %3983

3885:                                             ; preds = %3858
  %3886 = load ptr, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  %3887 = icmp eq ptr %3886, null
  br i1 %3887, label %3888, label %3890

3888:                                             ; preds = %3885
  %3889 = call ptr @BLI_memarena_new(i64 noundef 16376, ptr noundef nonnull @__func__.view3d_cached_text_draw_add) #13
  store ptr %3889, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  br label %3890

3890:                                             ; preds = %3888, %3885
  %3891 = phi ptr [ %3889, %3888 ], [ %3886, %3885 ]
  %3892 = call ptr @BLI_memarena_alloc(ptr noundef %3891, i64 noundef 43) #13
  %3893 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %3894 = sext i32 %3893 to i64
  %3895 = getelementptr inbounds [3 x ptr], ptr @g_v3d_strings, i64 0, i64 %3894
  %3896 = load ptr, ptr %3895, align 8, !tbaa !49
  store ptr %3896, ptr %3892, align 8, !tbaa !49
  store ptr %3892, ptr %3895, align 8, !tbaa !49
  %3897 = getelementptr inbounds %struct.ViewCachedString, ptr %3892, i64 0, i32 1
  %3898 = load <2 x float>, ptr %16, align 8, !tbaa !44
  store <2 x float> %3898, ptr %3897, align 4, !tbaa !44
  %3899 = load float, ptr %3838, align 8, !tbaa !44
  %3900 = getelementptr inbounds %struct.ViewCachedString, ptr %3892, i64 0, i32 1, i64 2
  store float %3899, ptr %3900, align 4, !tbaa !44
  %3901 = getelementptr inbounds %struct.ViewCachedString, ptr %3892, i64 0, i32 2
  %3902 = load i8, ptr %278, align 1, !tbaa !50
  store i8 %3902, ptr %3901, align 1, !tbaa !50
  %3903 = load i8, ptr %3843, align 1, !tbaa !50
  %3904 = getelementptr inbounds i8, ptr %3892, i64 21
  store i8 %3903, ptr %3904, align 1, !tbaa !50
  %3905 = load i8, ptr %3844, align 1, !tbaa !50
  %3906 = getelementptr inbounds i8, ptr %3892, i64 22
  store i8 %3905, ptr %3906, align 1, !tbaa !50
  %3907 = load i8, ptr %3845, align 1, !tbaa !50
  %3908 = getelementptr inbounds i8, ptr %3892, i64 23
  store i8 %3907, ptr %3908, align 1, !tbaa !50
  %3909 = getelementptr inbounds %struct.ViewCachedString, ptr %3892, i64 0, i32 4
  store i16 0, ptr %3909, align 4, !tbaa !51
  %3910 = getelementptr inbounds %struct.ViewCachedString, ptr %3892, i64 0, i32 5
  store i16 4, ptr %3910, align 2, !tbaa !51
  %3911 = getelementptr inbounds %struct.ViewCachedString, ptr %3892, i64 0, i32 6
  store i32 2, ptr %3911, align 8, !tbaa !47
  %3912 = getelementptr inbounds %struct.ViewCachedString, ptr %3892, i64 0, i32 7
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(3) %3912, ptr noundef nonnull align 1 dereferenceable(3) @.str.20, i64 3, i1 false)
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %16) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %15) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %15) #13
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %15, i8 0, i64 12, i1 false)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %16) #13
  %3913 = load <2 x float>, ptr %3860, align 4, !tbaa !44
  store <2 x float> %3913, ptr %16, align 8, !tbaa !44
  %3914 = load float, ptr %3861, align 4, !tbaa !44
  store float %3914, ptr %3838, align 8, !tbaa !44
  store float 1.000000e+00, ptr %3839, align 4, !tbaa !44
  call void @glBegin(i32 noundef 1) #13
  call void @mul_m4_v3(ptr noundef nonnull %14, ptr noundef nonnull %15) #13
  %3915 = load <2 x float>, ptr %15, align 8, !tbaa !44
  %3916 = load <2 x float>, ptr %16, align 8, !tbaa !44
  %3917 = fadd fast <2 x float> %3916, %3915
  store <2 x float> %3917, ptr %16, align 8, !tbaa !44
  %3918 = load float, ptr %3840, align 8, !tbaa !44
  %3919 = load float, ptr %3838, align 8, !tbaa !44
  %3920 = fadd fast float %3919, %3918
  store float %3920, ptr %3838, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %3860) #13
  call void @glVertex3fv(ptr noundef nonnull %16) #13
  call void @glEnd() #13
  %3921 = load ptr, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  %3922 = icmp eq ptr %3921, null
  br i1 %3922, label %3923, label %3925

3923:                                             ; preds = %3890
  %3924 = call ptr @BLI_memarena_new(i64 noundef 16376, ptr noundef nonnull @__func__.view3d_cached_text_draw_add) #13
  store ptr %3924, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  br label %3925

3925:                                             ; preds = %3923, %3890
  %3926 = phi ptr [ %3924, %3923 ], [ %3921, %3890 ]
  %3927 = call ptr @BLI_memarena_alloc(ptr noundef %3926, i64 noundef 43) #13
  %3928 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %3929 = sext i32 %3928 to i64
  %3930 = getelementptr inbounds [3 x ptr], ptr @g_v3d_strings, i64 0, i64 %3929
  %3931 = load ptr, ptr %3930, align 8, !tbaa !49
  store ptr %3931, ptr %3927, align 8, !tbaa !49
  store ptr %3927, ptr %3930, align 8, !tbaa !49
  %3932 = getelementptr inbounds %struct.ViewCachedString, ptr %3927, i64 0, i32 1
  %3933 = load <2 x float>, ptr %16, align 8, !tbaa !44
  store <2 x float> %3933, ptr %3932, align 4, !tbaa !44
  %3934 = load float, ptr %3838, align 8, !tbaa !44
  %3935 = getelementptr inbounds %struct.ViewCachedString, ptr %3927, i64 0, i32 1, i64 2
  store float %3934, ptr %3935, align 4, !tbaa !44
  %3936 = getelementptr inbounds %struct.ViewCachedString, ptr %3927, i64 0, i32 2
  %3937 = load i8, ptr %278, align 1, !tbaa !50
  store i8 %3937, ptr %3936, align 1, !tbaa !50
  %3938 = load i8, ptr %3843, align 1, !tbaa !50
  %3939 = getelementptr inbounds i8, ptr %3927, i64 21
  store i8 %3938, ptr %3939, align 1, !tbaa !50
  %3940 = load i8, ptr %3844, align 1, !tbaa !50
  %3941 = getelementptr inbounds i8, ptr %3927, i64 22
  store i8 %3940, ptr %3941, align 1, !tbaa !50
  %3942 = load i8, ptr %3845, align 1, !tbaa !50
  %3943 = getelementptr inbounds i8, ptr %3927, i64 23
  store i8 %3942, ptr %3943, align 1, !tbaa !50
  %3944 = getelementptr inbounds %struct.ViewCachedString, ptr %3927, i64 0, i32 4
  store i16 0, ptr %3944, align 4, !tbaa !51
  %3945 = getelementptr inbounds %struct.ViewCachedString, ptr %3927, i64 0, i32 5
  store i16 4, ptr %3945, align 2, !tbaa !51
  %3946 = getelementptr inbounds %struct.ViewCachedString, ptr %3927, i64 0, i32 6
  store i32 2, ptr %3946, align 8, !tbaa !47
  %3947 = getelementptr inbounds %struct.ViewCachedString, ptr %3927, i64 0, i32 7
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(3) %3947, ptr noundef nonnull align 1 dereferenceable(3) @.str.21, i64 3, i1 false)
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %16) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %15) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %15) #13
  store i64 0, ptr %15, align 8
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %16) #13
  %3948 = load <2 x float>, ptr %3860, align 4, !tbaa !44
  store <2 x float> %3948, ptr %16, align 8, !tbaa !44
  %3949 = load float, ptr %3861, align 4, !tbaa !44
  store float %3949, ptr %3838, align 8, !tbaa !44
  store float 1.000000e+00, ptr %3840, align 8, !tbaa !44
  call void @glBegin(i32 noundef 1) #13
  call void @mul_m4_v3(ptr noundef nonnull %14, ptr noundef nonnull %15) #13
  %3950 = load <2 x float>, ptr %15, align 8, !tbaa !44
  %3951 = load <2 x float>, ptr %16, align 8, !tbaa !44
  %3952 = fadd fast <2 x float> %3951, %3950
  store <2 x float> %3952, ptr %16, align 8, !tbaa !44
  %3953 = load float, ptr %3840, align 8, !tbaa !44
  %3954 = load float, ptr %3838, align 8, !tbaa !44
  %3955 = fadd fast float %3954, %3953
  store float %3955, ptr %3838, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %3860) #13
  call void @glVertex3fv(ptr noundef nonnull %16) #13
  call void @glEnd() #13
  %3956 = load ptr, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  %3957 = icmp eq ptr %3956, null
  br i1 %3957, label %3958, label %3960

3958:                                             ; preds = %3925
  %3959 = call ptr @BLI_memarena_new(i64 noundef 16376, ptr noundef nonnull @__func__.view3d_cached_text_draw_add) #13
  store ptr %3959, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  br label %3960

3960:                                             ; preds = %3958, %3925
  %3961 = phi ptr [ %3959, %3958 ], [ %3956, %3925 ]
  %3962 = call ptr @BLI_memarena_alloc(ptr noundef %3961, i64 noundef 43) #13
  %3963 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %3964 = sext i32 %3963 to i64
  %3965 = getelementptr inbounds [3 x ptr], ptr @g_v3d_strings, i64 0, i64 %3964
  %3966 = load ptr, ptr %3965, align 8, !tbaa !49
  store ptr %3966, ptr %3962, align 8, !tbaa !49
  store ptr %3962, ptr %3965, align 8, !tbaa !49
  %3967 = getelementptr inbounds %struct.ViewCachedString, ptr %3962, i64 0, i32 1
  %3968 = load <2 x float>, ptr %16, align 8, !tbaa !44
  store <2 x float> %3968, ptr %3967, align 4, !tbaa !44
  %3969 = load float, ptr %3838, align 8, !tbaa !44
  %3970 = getelementptr inbounds %struct.ViewCachedString, ptr %3962, i64 0, i32 1, i64 2
  store float %3969, ptr %3970, align 4, !tbaa !44
  %3971 = getelementptr inbounds %struct.ViewCachedString, ptr %3962, i64 0, i32 2
  %3972 = load i8, ptr %278, align 1, !tbaa !50
  store i8 %3972, ptr %3971, align 1, !tbaa !50
  %3973 = load i8, ptr %3843, align 1, !tbaa !50
  %3974 = getelementptr inbounds i8, ptr %3962, i64 21
  store i8 %3973, ptr %3974, align 1, !tbaa !50
  %3975 = load i8, ptr %3844, align 1, !tbaa !50
  %3976 = getelementptr inbounds i8, ptr %3962, i64 22
  store i8 %3975, ptr %3976, align 1, !tbaa !50
  %3977 = load i8, ptr %3845, align 1, !tbaa !50
  %3978 = getelementptr inbounds i8, ptr %3962, i64 23
  store i8 %3977, ptr %3978, align 1, !tbaa !50
  %3979 = getelementptr inbounds %struct.ViewCachedString, ptr %3962, i64 0, i32 4
  store i16 0, ptr %3979, align 4, !tbaa !51
  %3980 = getelementptr inbounds %struct.ViewCachedString, ptr %3962, i64 0, i32 5
  store i16 4, ptr %3980, align 2, !tbaa !51
  %3981 = getelementptr inbounds %struct.ViewCachedString, ptr %3962, i64 0, i32 6
  store i32 2, ptr %3981, align 8, !tbaa !47
  %3982 = getelementptr inbounds %struct.ViewCachedString, ptr %3962, i64 0, i32 7
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(3) %3982, ptr noundef nonnull align 1 dereferenceable(3) @.str.22, i64 3, i1 false)
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %16) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %15) #13
  br label %3983

3983:                                             ; preds = %3868, %3960
  call void @glLineWidth(float noundef nofpclass(nan inf) 1.000000e+00) #13
  call void @setlinestyle(i32 noundef 0) #13
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %14) #13
  br label %3984

3984:                                             ; preds = %3851, %3983, %3846
  %3985 = load ptr, ptr %3847, align 8, !tbaa !49
  %3986 = icmp eq ptr %3985, null
  br i1 %3986, label %3987, label %3846, !llvm.loop !259

3987:                                             ; preds = %3984, %3833
  %3988 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 99
  %3989 = load i32, ptr %3988, align 8, !tbaa !260
  %3990 = and i32 %3989, 2048
  %3991 = icmp eq i32 %3990, 0
  br i1 %3991, label %4007, label %3992

3992:                                             ; preds = %3987
  %3993 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 27
  %3994 = load i32, ptr %3993, align 8, !tbaa !40
  %3995 = icmp eq i32 %3994, 0
  br i1 %3995, label %3996, label %4007

3996:                                             ; preds = %3992
  %3997 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 84
  %3998 = load i8, ptr %3997, align 2, !tbaa !94
  %3999 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 85
  %4000 = load i8, ptr %3999, align 1, !tbaa !261
  %4001 = icmp ne i8 %3998, %4000
  %4002 = and i16 %1849, 1
  %4003 = icmp eq i16 %4002, 0
  %4004 = select i1 %4001, i1 true, i1 %4003
  br i1 %4004, label %4005, label %4007

4005:                                             ; preds = %3996
  call void @setlinestyle(i32 noundef 2) #13
  %4006 = load i8, ptr %3999, align 1, !tbaa !261
  call fastcc void @draw_bounding_volume(ptr noundef nonnull %81, i8 noundef zeroext %4006)
  call void @setlinestyle(i32 noundef 0) #13
  br label %4007

4007:                                             ; preds = %3996, %4005, %3992, %3987
  %4008 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 128
  %4009 = load ptr, ptr %4008, align 8, !tbaa !262
  %4010 = icmp eq ptr %4009, null
  br i1 %4010, label %4065, label %4011

4011:                                             ; preds = %4007
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %12) #13
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %13) #13
  %4012 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 3
  %4013 = load i16, ptr %4012, align 8, !tbaa !75
  %4014 = icmp eq i16 %4013, 1
  br i1 %4014, label %4015, label %4064

4015:                                             ; preds = %4011
  %4016 = call ptr @BKE_mesh_boundbox_get(ptr noundef nonnull %81) #13
  %4017 = icmp eq ptr %4016, null
  br i1 %4017, label %4064, label %4018

4018:                                             ; preds = %4015
  %4019 = load ptr, ptr %4008, align 8, !tbaa !262
  %4020 = getelementptr inbounds %struct.RigidBodyOb, ptr %4019, i64 0, i32 3
  %4021 = load i16, ptr %4020, align 2, !tbaa !263
  %4022 = sext i16 %4021 to i32
  switch i32 %4022, label %4064 [
    i32 0, label %4023
    i32 1, label %4052
    i32 4, label %4061
    i32 3, label %4062
    i32 2, label %4063
  ]

4023:                                             ; preds = %4018
  call void @BKE_boundbox_calc_size_aabb(ptr noundef nonnull %4016, ptr noundef nonnull %12) #13
  %4024 = getelementptr inbounds [8 x [3 x float]], ptr %13, i64 0, i64 3
  %4025 = getelementptr inbounds [8 x [3 x float]], ptr %13, i64 0, i64 2
  %4026 = getelementptr inbounds [8 x [3 x float]], ptr %13, i64 0, i64 1
  %4027 = getelementptr inbounds [8 x [3 x float]], ptr %13, i64 0, i64 7
  %4028 = getelementptr inbounds [8 x [3 x float]], ptr %13, i64 0, i64 6
  %4029 = getelementptr inbounds [8 x [3 x float]], ptr %13, i64 0, i64 5
  %4030 = getelementptr inbounds [8 x [3 x float]], ptr %13, i64 0, i64 4
  %4031 = getelementptr inbounds [8 x [3 x float]], ptr %13, i64 0, i64 5, i64 1
  %4032 = getelementptr inbounds [8 x [3 x float]], ptr %13, i64 0, i64 4, i64 1
  %4033 = load <2 x float>, ptr %12, align 8, !tbaa !44
  %4034 = fneg fast <2 x float> %4033
  %4035 = extractelement <2 x float> %4034, i64 0
  store float %4035, ptr %4024, align 4, !tbaa !44
  store float %4035, ptr %4025, align 8, !tbaa !44
  %4036 = extractelement <2 x float> %4033, i64 0
  store float %4036, ptr %4029, align 4, !tbaa !44
  store float %4036, ptr %4030, align 16, !tbaa !44
  %4037 = extractelement <2 x float> %4034, i64 1
  store float %4037, ptr %4031, align 16, !tbaa !44
  store float %4037, ptr %4032, align 4, !tbaa !44
  store <2 x float> %4034, ptr %4026, align 4, !tbaa !44
  store <2 x float> %4034, ptr %13, align 16, !tbaa !44
  store <2 x float> %4033, ptr %4027, align 4, !tbaa !44
  store <2 x float> %4033, ptr %4028, align 8, !tbaa !44
  %4038 = getelementptr inbounds [8 x [3 x float]], ptr %13, i64 0, i64 3, i64 1
  %4039 = extractelement <2 x float> %4033, i64 1
  store float %4039, ptr %4038, align 8, !tbaa !44
  %4040 = getelementptr inbounds [8 x [3 x float]], ptr %13, i64 0, i64 2, i64 1
  store float %4039, ptr %4040, align 4, !tbaa !44
  %4041 = getelementptr inbounds [3 x float], ptr %12, i64 0, i64 2
  %4042 = load float, ptr %4041, align 8, !tbaa !44
  %4043 = fneg fast float %4042
  %4044 = getelementptr inbounds [8 x [3 x float]], ptr %13, i64 0, i64 7, i64 2
  store float %4043, ptr %4044, align 4, !tbaa !44
  %4045 = getelementptr inbounds [8 x [3 x float]], ptr %13, i64 0, i64 4, i64 2
  store float %4043, ptr %4045, align 8, !tbaa !44
  %4046 = getelementptr inbounds [8 x [3 x float]], ptr %13, i64 0, i64 3, i64 2
  store float %4043, ptr %4046, align 4, !tbaa !44
  %4047 = getelementptr inbounds [3 x float], ptr %13, i64 0, i64 2
  store float %4043, ptr %4047, align 8, !tbaa !44
  %4048 = getelementptr inbounds [8 x [3 x float]], ptr %13, i64 0, i64 6, i64 2
  store float %4042, ptr %4048, align 16, !tbaa !44
  %4049 = getelementptr inbounds [8 x [3 x float]], ptr %13, i64 0, i64 5, i64 2
  store float %4042, ptr %4049, align 4, !tbaa !44
  %4050 = getelementptr inbounds [8 x [3 x float]], ptr %13, i64 0, i64 2, i64 2
  store float %4042, ptr %4050, align 16, !tbaa !44
  %4051 = getelementptr inbounds [8 x [3 x float]], ptr %13, i64 0, i64 1, i64 2
  store float %4042, ptr %4051, align 4, !tbaa !44
  call fastcc void @draw_box(ptr noundef nonnull %13)
  br label %4064

4052:                                             ; preds = %4018
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %11) #13
  %4053 = call ptr @gluNewQuadric() #13
  call void @gluQuadricDrawStyle(ptr noundef %4053, i32 noundef 100013) #13
  call void @BKE_boundbox_calc_size_aabb(ptr noundef nonnull %4016, ptr noundef nonnull %11) #13
  call void @glPushMatrix() #13
  %4054 = load float, ptr %11, align 4
  %4055 = getelementptr inbounds [3 x float], ptr %11, i64 0, i64 1
  %4056 = load float, ptr %4055, align 4
  %4057 = call fast float @llvm.maxnum.f32(float %4054, float %4056)
  %4058 = getelementptr inbounds [3 x float], ptr %11, i64 0, i64 2
  %4059 = load float, ptr %4058, align 4, !tbaa !44
  %4060 = call fast float @llvm.maxnum.f32(float %4057, float %4059)
  call void @glTranslatef(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00) #13
  call void @glScalef(float noundef nofpclass(nan inf) %4060, float noundef nofpclass(nan inf) %4060, float noundef nofpclass(nan inf) %4060) #13
  call void @gluSphere(ptr noundef %4053, double noundef nofpclass(nan inf) 1.000000e+00, i32 noundef 8, i32 noundef 5) #13
  call void @glPopMatrix() #13
  call void @gluDeleteQuadric(ptr noundef %4053) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %11) #13
  br label %4064

4061:                                             ; preds = %4018
  call fastcc void @draw_bb_quadric(ptr noundef nonnull %4016, i8 noundef zeroext 3, i8 noundef zeroext 1)
  br label %4064

4062:                                             ; preds = %4018
  call fastcc void @draw_bb_quadric(ptr noundef nonnull %4016, i8 noundef zeroext 2, i8 noundef zeroext 1)
  br label %4064

4063:                                             ; preds = %4018
  call fastcc void @draw_bb_quadric(ptr noundef nonnull %4016, i8 noundef zeroext 7, i8 noundef zeroext 1)
  br label %4064

4064:                                             ; preds = %4011, %4015, %4018, %4023, %4052, %4061, %4062, %4063
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %13) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %12) #13
  br label %4065

4065:                                             ; preds = %4064, %4007
  %4066 = zext i16 %1849 to i32
  %4067 = icmp eq i16 %1849, 0
  br i1 %4067, label %4243, label %4068

4068:                                             ; preds = %4065
  %4069 = load i32, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 15), align 8, !tbaa !16
  %4070 = and i32 %4069, 1
  %4071 = icmp eq i32 %4070, 0
  br i1 %4071, label %4072, label %4243

4072:                                             ; preds = %4068
  %4073 = and i32 %4066, 2
  %4074 = icmp eq i32 %4073, 0
  br i1 %4074, label %4076, label %4075

4075:                                             ; preds = %4072
  call void @drawaxes(float noundef nofpclass(nan inf) 1.000000e+00, i8 noundef zeroext 1)
  br label %4076

4076:                                             ; preds = %4075, %4072
  %4077 = and i32 %4066, 1
  %4078 = icmp eq i32 %4077, 0
  br i1 %4078, label %4082, label %4079

4079:                                             ; preds = %4076
  %4080 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 84
  %4081 = load i8, ptr %4080, align 2, !tbaa !94
  call fastcc void @draw_bounding_volume(ptr noundef nonnull %81, i8 noundef zeroext %4081)
  br label %4082

4082:                                             ; preds = %4079, %4076
  %4083 = and i32 %4066, 4
  %4084 = icmp eq i32 %4083, 0
  br i1 %4084, label %4149, label %4085

4085:                                             ; preds = %4082
  br i1 %208, label %4086, label %4087

4086:                                             ; preds = %4085
  call void @glColor3ubv(ptr noundef %278) #13
  br label %4087

4087:                                             ; preds = %4086, %4085
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %9) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %10) #13
  %4088 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 3
  %4089 = load i16, ptr %4088, align 8, !tbaa !75
  switch i16 %4089, label %4148 [
    i16 1, label %4090
    i16 2, label %4093
    i16 3, label %4093
    i16 4, label %4093
    i16 5, label %4096
  ]

4090:                                             ; preds = %4087
  %4091 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 19
  %4092 = load ptr, ptr %4091, align 8, !tbaa !90
  call void @BKE_mesh_texspace_get(ptr noundef %4092, ptr noundef nonnull %9, ptr noundef null, ptr noundef nonnull %10) #13
  br label %4109

4093:                                             ; preds = %4087, %4087, %4087
  %4094 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 19
  %4095 = load ptr, ptr %4094, align 8, !tbaa !90
  call void @BKE_curve_texspace_get(ptr noundef %4095, ptr noundef nonnull %9, ptr noundef null, ptr noundef nonnull %10) #13
  br label %4109

4096:                                             ; preds = %4087
  %4097 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 19
  %4098 = load ptr, ptr %4097, align 8, !tbaa !90
  %4099 = getelementptr inbounds %struct.MetaBall, ptr %4098, i64 0, i32 13
  %4100 = load <2 x float>, ptr %4099, align 4, !tbaa !44
  store <2 x float> %4100, ptr %10, align 8, !tbaa !44
  %4101 = getelementptr inbounds %struct.MetaBall, ptr %4098, i64 0, i32 13, i64 2
  %4102 = load float, ptr %4101, align 4, !tbaa !44
  %4103 = getelementptr inbounds float, ptr %10, i64 2
  store float %4102, ptr %4103, align 8, !tbaa !44
  %4104 = getelementptr inbounds %struct.MetaBall, ptr %4098, i64 0, i32 12
  %4105 = load <2 x float>, ptr %4104, align 4, !tbaa !44
  store <2 x float> %4105, ptr %9, align 8, !tbaa !44
  %4106 = getelementptr inbounds %struct.MetaBall, ptr %4098, i64 0, i32 12, i64 2
  %4107 = load float, ptr %4106, align 4, !tbaa !44
  %4108 = getelementptr inbounds float, ptr %9, i64 2
  store float %4107, ptr %4108, align 8, !tbaa !44
  br label %4109

4109:                                             ; preds = %4096, %4093, %4090
  %4110 = getelementptr inbounds [8 x [3 x float]], ptr %8, i64 0, i64 3
  %4111 = getelementptr inbounds [8 x [3 x float]], ptr %8, i64 0, i64 2
  %4112 = getelementptr inbounds [8 x [3 x float]], ptr %8, i64 0, i64 1
  %4113 = getelementptr inbounds [8 x [3 x float]], ptr %8, i64 0, i64 7
  %4114 = getelementptr inbounds [8 x [3 x float]], ptr %8, i64 0, i64 6
  %4115 = getelementptr inbounds [8 x [3 x float]], ptr %8, i64 0, i64 5
  %4116 = getelementptr inbounds [8 x [3 x float]], ptr %8, i64 0, i64 4
  %4117 = getelementptr inbounds [8 x [3 x float]], ptr %8, i64 0, i64 5, i64 1
  %4118 = getelementptr inbounds [8 x [3 x float]], ptr %8, i64 0, i64 4, i64 1
  %4119 = load <2 x float>, ptr %9, align 8, !tbaa !44
  %4120 = load <2 x float>, ptr %10, align 8, !tbaa !44
  %4121 = fsub fast <2 x float> %4119, %4120
  %4122 = extractelement <2 x float> %4121, i64 0
  store float %4122, ptr %4110, align 4, !tbaa !44
  store float %4122, ptr %4111, align 8, !tbaa !44
  %4123 = fadd fast <2 x float> %4120, %4119
  %4124 = extractelement <2 x float> %4123, i64 0
  store float %4124, ptr %4113, align 4, !tbaa !44
  store float %4124, ptr %4114, align 8, !tbaa !44
  store float %4124, ptr %4115, align 4, !tbaa !44
  store float %4124, ptr %4116, align 16, !tbaa !44
  %4125 = extractelement <2 x float> %4121, i64 1
  store float %4125, ptr %4117, align 16, !tbaa !44
  store float %4125, ptr %4118, align 4, !tbaa !44
  store <2 x float> %4121, ptr %4112, align 4, !tbaa !44
  store <2 x float> %4121, ptr %8, align 16, !tbaa !44
  %4126 = getelementptr inbounds [8 x [3 x float]], ptr %8, i64 0, i64 7, i64 1
  %4127 = getelementptr inbounds [8 x [3 x float]], ptr %8, i64 0, i64 6, i64 1
  %4128 = getelementptr inbounds [8 x [3 x float]], ptr %8, i64 0, i64 3, i64 1
  %4129 = getelementptr inbounds [8 x [3 x float]], ptr %8, i64 0, i64 2, i64 1
  %4130 = getelementptr inbounds [3 x float], ptr %9, i64 0, i64 2
  %4131 = load float, ptr %4130, align 8, !tbaa !44
  %4132 = getelementptr inbounds [3 x float], ptr %10, i64 0, i64 2
  %4133 = load float, ptr %4132, align 8, !tbaa !44
  %4134 = fsub fast float %4131, %4133
  %4135 = getelementptr inbounds [8 x [3 x float]], ptr %8, i64 0, i64 7, i64 2
  store float %4134, ptr %4135, align 4, !tbaa !44
  %4136 = getelementptr inbounds [8 x [3 x float]], ptr %8, i64 0, i64 4, i64 2
  store float %4134, ptr %4136, align 8, !tbaa !44
  %4137 = getelementptr inbounds [8 x [3 x float]], ptr %8, i64 0, i64 3, i64 2
  store float %4134, ptr %4137, align 4, !tbaa !44
  %4138 = getelementptr inbounds [3 x float], ptr %8, i64 0, i64 2
  store float %4134, ptr %4138, align 8, !tbaa !44
  %4139 = getelementptr inbounds [8 x [3 x float]], ptr %8, i64 0, i64 5, i64 2
  %4140 = shufflevector <2 x float> %4120, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %4141 = insertelement <2 x float> %4140, float %4133, i64 1
  %4142 = shufflevector <2 x float> %4119, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %4143 = insertelement <2 x float> %4142, float %4131, i64 1
  %4144 = fadd fast <2 x float> %4141, %4143
  %4145 = extractelement <2 x float> %4144, i64 0
  store float %4145, ptr %4126, align 8, !tbaa !44
  store float %4145, ptr %4128, align 8, !tbaa !44
  store <2 x float> %4144, ptr %4127, align 4, !tbaa !44
  %4146 = extractelement <2 x float> %4144, i64 1
  store float %4146, ptr %4139, align 4, !tbaa !44
  store <2 x float> %4144, ptr %4129, align 4, !tbaa !44
  %4147 = getelementptr inbounds [8 x [3 x float]], ptr %8, i64 0, i64 1, i64 2
  store float %4146, ptr %4147, align 4, !tbaa !44
  call void @setlinestyle(i32 noundef 2) #13
  call fastcc void @draw_box(ptr noundef nonnull %8)
  call void @setlinestyle(i32 noundef 0) #13
  br label %4148

4148:                                             ; preds = %4087, %4109
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %10) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %9) #13
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8) #13
  br label %4149

4149:                                             ; preds = %4148, %4082
  %4150 = and i32 %4066, 8
  %4151 = icmp ne i32 %4150, 0
  %4152 = icmp eq i16 %4, 0
  %4153 = and i1 %4152, %4151
  br i1 %4153, label %4154, label %4190

4154:                                             ; preds = %4149
  %4155 = getelementptr inbounds %struct.ID, ptr %81, i64 0, i32 4, i64 2
  %4156 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %4155) #14
  %4157 = load ptr, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  %4158 = icmp eq ptr %4157, null
  br i1 %4158, label %4159, label %4161

4159:                                             ; preds = %4154
  %4160 = call ptr @BLI_memarena_new(i64 noundef 16376, ptr noundef nonnull @__func__.view3d_cached_text_draw_add) #13
  store ptr %4160, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  br label %4161

4161:                                             ; preds = %4154, %4159
  %4162 = phi ptr [ %4160, %4159 ], [ %4157, %4154 ]
  %4163 = shl i64 %4156, 32
  %4164 = add i64 %4163, 4294967296
  %4165 = ashr exact i64 %4164, 32
  %4166 = add nsw i64 %4165, 40
  %4167 = call ptr @BLI_memarena_alloc(ptr noundef %4162, i64 noundef %4166) #13
  %4168 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %4169 = sext i32 %4168 to i64
  %4170 = getelementptr inbounds [3 x ptr], ptr @g_v3d_strings, i64 0, i64 %4169
  %4171 = load ptr, ptr %4170, align 8, !tbaa !49
  store ptr %4171, ptr %4167, align 8, !tbaa !49
  store ptr %4167, ptr %4170, align 8, !tbaa !49
  %4172 = getelementptr inbounds %struct.ViewCachedString, ptr %4167, i64 0, i32 1
  store <2 x float> zeroinitializer, ptr %4172, align 4, !tbaa !44
  %4173 = getelementptr inbounds %struct.ViewCachedString, ptr %4167, i64 0, i32 1, i64 2
  store float 0.000000e+00, ptr %4173, align 4, !tbaa !44
  %4174 = getelementptr inbounds %struct.ViewCachedString, ptr %4167, i64 0, i32 2
  %4175 = load i8, ptr %278, align 1, !tbaa !50
  store i8 %4175, ptr %4174, align 1, !tbaa !50
  %4176 = getelementptr inbounds i8, ptr %278, i64 1
  %4177 = load i8, ptr %4176, align 1, !tbaa !50
  %4178 = getelementptr inbounds i8, ptr %4167, i64 21
  store i8 %4177, ptr %4178, align 1, !tbaa !50
  %4179 = getelementptr inbounds i8, ptr %278, i64 2
  %4180 = load i8, ptr %4179, align 1, !tbaa !50
  %4181 = getelementptr inbounds i8, ptr %4167, i64 22
  store i8 %4180, ptr %4181, align 1, !tbaa !50
  %4182 = getelementptr inbounds i8, ptr %278, i64 3
  %4183 = load i8, ptr %4182, align 1, !tbaa !50
  %4184 = getelementptr inbounds i8, ptr %4167, i64 23
  store i8 %4183, ptr %4184, align 1, !tbaa !50
  %4185 = getelementptr inbounds %struct.ViewCachedString, ptr %4167, i64 0, i32 4
  store i16 10, ptr %4185, align 4, !tbaa !51
  %4186 = getelementptr inbounds %struct.ViewCachedString, ptr %4167, i64 0, i32 5
  store i16 0, ptr %4186, align 2, !tbaa !51
  %4187 = trunc i64 %4156 to i32
  %4188 = getelementptr inbounds %struct.ViewCachedString, ptr %4167, i64 0, i32 6
  store i32 %4187, ptr %4188, align 8, !tbaa !47
  %4189 = getelementptr inbounds %struct.ViewCachedString, ptr %4167, i64 0, i32 7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 4 %4189, ptr nonnull align 1 %4155, i64 %4165, i1 false)
  br label %4190

4190:                                             ; preds = %4161, %4149
  %4191 = and i32 %4066, 32
  %4192 = icmp eq i32 %4191, 0
  %4193 = icmp ult i8 %1848, 3
  %4194 = select i1 %4192, i1 true, i1 %4193
  %4195 = xor i1 %208, true
  %4196 = or i1 %4194, %4195
  br i1 %4196, label %4243, label %4197

4197:                                             ; preds = %4190
  %4198 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 3
  %4199 = load i16, ptr %4198, align 8, !tbaa !75
  %4200 = add i16 %4199, -2
  %4201 = icmp ult i16 %4200, 4
  br i1 %4201, label %4202, label %4243

4202:                                             ; preds = %4197
  %4203 = load ptr, ptr %103, align 8, !tbaa !62
  %4204 = icmp eq ptr %4203, %81
  br i1 %4204, label %4205, label %4206

4205:                                             ; preds = %4202
  call void @UI_ThemeColor(i32 noundef 27) #13
  br label %4207

4206:                                             ; preds = %4202
  call void @glColor3ubv(ptr noundef %278) #13
  br label %4207

4207:                                             ; preds = %4206, %4205
  call void @ED_view3d_polygon_offset(ptr noundef %83, float noundef nofpclass(nan inf) 1.000000e+00) #13
  call void @glDepthMask(i8 noundef zeroext 0) #13
  %4208 = load i16, ptr %4198, align 8, !tbaa !75
  switch i16 %4208, label %4242 [
    i16 4, label %4209
    i16 2, label %4209
    i16 3, label %4209
    i16 5, label %4230
  ]

4209:                                             ; preds = %4207, %4207, %4207
  %4210 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 15
  %4211 = load ptr, ptr %4210, align 8, !tbaa !95
  %4212 = call zeroext i8 @ED_view3d_boundbox_clip(ptr noundef %83, ptr noundef %4211) #13
  %4213 = icmp eq i8 %4212, 0
  br i1 %4213, label %4242, label %4214

4214:                                             ; preds = %4209
  %4215 = getelementptr %struct.Object, ptr %81, i64 0, i32 120
  %4216 = load ptr, ptr %4215, align 8, !tbaa !265
  %4217 = icmp eq ptr %4216, null
  br i1 %4217, label %4221, label %4218

4218:                                             ; preds = %4214
  %4219 = getelementptr inbounds %struct.DerivedMesh, ptr %4216, i64 0, i32 84
  %4220 = load ptr, ptr %4219, align 8, !tbaa !266
  call void %4220(ptr noundef nonnull %4216, i8 noundef zeroext 1, i8 noundef zeroext 0) #13
  br label %4242

4221:                                             ; preds = %4214
  %4222 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 118
  %4223 = load ptr, ptr %4222, align 8, !tbaa !113
  %4224 = load i16, ptr %4198, align 8, !tbaa !75
  %4225 = add i16 %4224, -2
  %4226 = and i16 %4225, -3
  %4227 = icmp eq i16 %4226, 0
  %4228 = select i1 %4227, i32 -49, i32 -1
  %4229 = call fastcc zeroext i8 @drawDispListwire_ex(ptr noundef %4223, i32 noundef %4228), !range !96
  br label %4242

4230:                                             ; preds = %4207
  %4231 = call zeroext i8 @BKE_mball_is_basis(ptr noundef nonnull %81) #13
  %4232 = icmp eq i8 %4231, 0
  br i1 %4232, label %4242, label %4233

4233:                                             ; preds = %4230
  %4234 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 118
  %4235 = load ptr, ptr %4234, align 8, !tbaa !113
  %4236 = load i16, ptr %4198, align 8, !tbaa !75
  %4237 = add i16 %4236, -2
  %4238 = and i16 %4237, -3
  %4239 = icmp eq i16 %4238, 0
  %4240 = select i1 %4239, i32 -49, i32 -1
  %4241 = call fastcc zeroext i8 @drawDispListwire_ex(ptr noundef %4235, i32 noundef %4240), !range !96
  br label %4242

4242:                                             ; preds = %4233, %4230, %4221, %4218, %4209, %4207
  call void @glDepthMask(i8 noundef zeroext 1) #13
  call void @ED_view3d_polygon_offset(ptr noundef %83, float noundef nofpclass(nan inf) 0.000000e+00) #13
  br label %4243

4243:                                             ; preds = %4242, %4197, %4065, %4068, %4190
  %4244 = icmp ugt i8 %1848, 3
  br i1 %4244, label %4350, label %4245

4245:                                             ; preds = %4243
  %4246 = load i32, ptr %3988, align 8, !tbaa !260
  %4247 = and i32 %4246, 1
  %4248 = icmp eq i32 %4247, 0
  br i1 %4248, label %4254, label %4249

4249:                                             ; preds = %4245
  %4250 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 85
  %4251 = load i8, ptr %4250, align 1, !tbaa !261
  %4252 = and i8 %4251, -2
  %4253 = icmp eq i8 %4252, 4
  br i1 %4253, label %4254, label %4261

4254:                                             ; preds = %4249, %4245
  %4255 = and i32 %4246, 2048
  %4256 = icmp eq i32 %4255, 0
  br i1 %4256, label %4350, label %4257

4257:                                             ; preds = %4254
  %4258 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 84
  %4259 = load i8, ptr %4258, align 2, !tbaa !94
  %4260 = icmp eq i8 %4259, 1
  br i1 %4260, label %4261, label %4350

4261:                                             ; preds = %4249, %4257
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %76) #13
  %4262 = getelementptr inbounds %struct.RegionView3D, ptr %83, i64 0, i32 5
  %4263 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %76, ptr noundef nonnull %4262) #13
  br i1 %208, label %4264, label %4265

4264:                                             ; preds = %4261
  call void @glColor3ubv(ptr noundef %278) #13
  br label %4265

4265:                                             ; preds = %4264, %4261
  call void @setlinestyle(i32 noundef 2) #13
  %4266 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 71
  %4267 = load float, ptr %4266, align 4, !tbaa !269
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %7) #13
  %4268 = getelementptr inbounds [4 x float], ptr %76, i64 1, i64 2
  %4269 = load <8 x float>, ptr %4268, align 8
  %4270 = shufflevector <8 x float> %4269, <8 x float> poison, <8 x i32> zeroinitializer
  %4271 = getelementptr inbounds float, ptr %76, i64 2
  %4272 = load <8 x float>, ptr %4271, align 8
  %4273 = shufflevector <8 x float> %4272, <8 x float> poison, <8 x i32> zeroinitializer
  %4274 = getelementptr inbounds [4 x float], ptr %76, i64 1, i64 1
  %4275 = load <8 x float>, ptr %4274, align 4
  %4276 = shufflevector <8 x float> %4275, <8 x float> poison, <8 x i32> zeroinitializer
  %4277 = getelementptr inbounds float, ptr %76, i64 1
  %4278 = load <8 x float>, ptr %4277, align 4
  %4279 = shufflevector <8 x float> %4278, <8 x float> poison, <8 x i32> zeroinitializer
  %4280 = insertelement <8 x float> poison, float %4267, i64 0
  %4281 = shufflevector <8 x float> %4280, <8 x float> poison, <8 x i32> zeroinitializer
  %4282 = getelementptr inbounds [4 x float], ptr %76, i64 1
  %4283 = load <8 x float>, ptr %4282, align 16
  %4284 = shufflevector <8 x float> %4283, <8 x float> poison, <8 x i32> zeroinitializer
  %4285 = load <8 x float>, ptr %76, align 16
  %4286 = shufflevector <8 x float> %4285, <8 x float> poison, <8 x i32> zeroinitializer
  %4287 = fmul fast <8 x float> %4286, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %4288 = fmul fast <8 x float> %4284, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %4289 = fadd fast <8 x float> %4288, %4287
  %4290 = fmul fast <8 x float> %4289, %4281
  %4291 = fmul fast <8 x float> %4279, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %4292 = fmul fast <8 x float> %4276, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %4293 = fadd fast <8 x float> %4292, %4291
  %4294 = fmul fast <8 x float> %4293, %4281
  %4295 = fmul fast <8 x float> %4273, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %4296 = fmul fast <8 x float> %4270, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %4297 = fadd fast <8 x float> %4296, %4295
  %4298 = fmul fast <8 x float> %4297, %4281
  %4299 = shufflevector <8 x float> %4290, <8 x float> %4294, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4300 = shufflevector <8 x float> %4298, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4301 = shufflevector <16 x float> %4299, <16 x float> %4300, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %4301, ptr %7, align 16, !tbaa !44
  %4302 = getelementptr inbounds i8, ptr %7, i64 96
  %4303 = fmul fast <8 x float> %4286, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %4304 = fmul fast <8 x float> %4284, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %4305 = fadd fast <8 x float> %4304, %4303
  %4306 = fmul fast <8 x float> %4305, %4281
  %4307 = fmul fast <8 x float> %4279, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %4308 = fmul fast <8 x float> %4276, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %4309 = fadd fast <8 x float> %4308, %4307
  %4310 = fmul fast <8 x float> %4309, %4281
  %4311 = fmul fast <8 x float> %4273, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %4312 = fmul fast <8 x float> %4270, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %4313 = fadd fast <8 x float> %4312, %4311
  %4314 = fmul fast <8 x float> %4313, %4281
  %4315 = shufflevector <8 x float> %4306, <8 x float> %4310, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4316 = shufflevector <8 x float> %4314, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4317 = shufflevector <16 x float> %4315, <16 x float> %4316, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %4317, ptr %4302, align 16, !tbaa !44
  %4318 = getelementptr inbounds i8, ptr %7, i64 192
  %4319 = fmul fast <8 x float> %4286, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %4320 = fmul fast <8 x float> %4284, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %4321 = fadd fast <8 x float> %4320, %4319
  %4322 = fmul fast <8 x float> %4321, %4281
  %4323 = fmul fast <8 x float> %4279, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %4324 = fmul fast <8 x float> %4276, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %4325 = fadd fast <8 x float> %4324, %4323
  %4326 = fmul fast <8 x float> %4325, %4281
  %4327 = fmul fast <8 x float> %4273, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %4328 = fmul fast <8 x float> %4270, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %4329 = fadd fast <8 x float> %4328, %4327
  %4330 = fmul fast <8 x float> %4329, %4281
  %4331 = shufflevector <8 x float> %4322, <8 x float> %4326, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4332 = shufflevector <8 x float> %4330, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4333 = shufflevector <16 x float> %4331, <16 x float> %4332, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %4333, ptr %4318, align 16, !tbaa !44
  %4334 = getelementptr inbounds i8, ptr %7, i64 288
  %4335 = fmul fast <8 x float> %4286, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %4336 = fmul fast <8 x float> %4284, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %4337 = fadd fast <8 x float> %4336, %4335
  %4338 = fmul fast <8 x float> %4337, %4281
  %4339 = fmul fast <8 x float> %4279, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %4340 = fmul fast <8 x float> %4276, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %4341 = fadd fast <8 x float> %4340, %4339
  %4342 = fmul fast <8 x float> %4341, %4281
  %4343 = fmul fast <8 x float> %4273, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %4344 = fmul fast <8 x float> %4270, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %4345 = fadd fast <8 x float> %4344, %4343
  %4346 = fmul fast <8 x float> %4345, %4281
  %4347 = shufflevector <8 x float> %4338, <8 x float> %4342, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4348 = shufflevector <8 x float> %4346, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4349 = shufflevector <16 x float> %4347, <16 x float> %4348, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %4349, ptr %4334, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %7) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %7) #13
  call void @setlinestyle(i32 noundef 0) #13
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %76) #13
  br label %4350

4350:                                             ; preds = %3832, %4254, %4257, %4265, %4243
  %4351 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 50
  %4352 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 47
  %4353 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %4351, ptr noundef nonnull %4352) #13
  call void @view3d_cached_text_draw_end(ptr noundef %2, ptr noundef %1, i8 noundef zeroext 1, ptr noundef null)
  %4354 = load i16, ptr %94, align 2, !tbaa !15
  %4355 = and i16 %4354, -8193
  store i16 %4355, ptr %94, align 2, !tbaa !15
  %4356 = getelementptr inbounds %struct.RegionView3D, ptr %83, i64 0, i32 1
  call void @glLoadMatrixf(ptr noundef nonnull %4356) #13
  %4357 = icmp eq i8 %314, 0
  br i1 %4357, label %4359, label %4358

4358:                                             ; preds = %4350
  call void @glDisable(i32 noundef 2929) #13
  br label %4359

4359:                                             ; preds = %4358, %4350
  %4360 = getelementptr inbounds %struct.Base, ptr %3, i64 0, i32 4
  %4361 = load i32, ptr %4360, align 8, !tbaa !71
  %4362 = and i32 %4361, 512
  %4363 = icmp ne i32 %4362, 0
  %4364 = select i1 %4363, i1 true, i1 %201
  br i1 %4364, label %4550, label %4365

4365:                                             ; preds = %4359
  br i1 %92, label %4366, label %4371

4366:                                             ; preds = %4365
  %4367 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 27
  %4368 = load i32, ptr %4367, align 8, !tbaa !40
  %4369 = and i32 %4368, 30
  %4370 = icmp eq i32 %4369, 0
  br i1 %4370, label %4371, label %4407

4371:                                             ; preds = %4365, %4366
  %4372 = load ptr, ptr %84, align 8, !tbaa !18
  %4373 = icmp eq ptr %4372, %3
  br i1 %4373, label %4383, label %4374

4374:                                             ; preds = %4371
  %4375 = and i32 %4361, 1
  %4376 = icmp eq i32 %4375, 0
  br i1 %4376, label %4377, label %4383

4377:                                             ; preds = %4374
  %4378 = icmp eq i8 %1847, 0
  br i1 %4378, label %4379, label %4383

4379:                                             ; preds = %4377
  %4380 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 28
  %4381 = load i16, ptr %4380, align 8, !tbaa !89
  %4382 = icmp sgt i16 %4381, -1
  br i1 %4382, label %4407, label %4383

4383:                                             ; preds = %4377, %4379, %4371, %4374
  %4384 = phi i32 [ 1, %4374 ], [ 2, %4371 ], [ 0, %4379 ], [ 0, %4377 ]
  br i1 %146, label %4387, label %4385

4385:                                             ; preds = %4383
  call void @glBegin(i32 noundef 0) #13
  %4386 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 47, i64 3
  call void @glVertex3fv(ptr noundef nonnull %4386) #13
  call void @glEnd() #13
  br label %4407

4387:                                             ; preds = %4383
  %4388 = load i16, ptr getelementptr inbounds (%struct.UserDef, ptr @U, i64 0, i32 67), align 4
  %4389 = icmp sgt i16 %4388, 0
  %4390 = select i1 %208, i1 %4389, i1 false
  br i1 %4390, label %4391, label %4407

4391:                                             ; preds = %4387
  %4392 = load i32, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 15), align 8, !tbaa !16
  %4393 = and i32 %4392, 1
  %4394 = icmp eq i32 %4393, 0
  br i1 %4394, label %4395, label %4407

4395:                                             ; preds = %4391
  %4396 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 47, i64 3
  %4397 = getelementptr inbounds %struct.ID, ptr %81, i64 0, i32 3
  %4398 = load ptr, ptr %4397, align 8, !tbaa !79
  %4399 = icmp eq ptr %4398, null
  br i1 %4399, label %4400, label %4405

4400:                                             ; preds = %4395
  %4401 = getelementptr inbounds %struct.ID, ptr %81, i64 0, i32 6
  %4402 = load i32, ptr %4401, align 4, !tbaa !270
  %4403 = icmp sgt i32 %4402, 1
  %4404 = zext i1 %4403 to i32
  br label %4405

4405:                                             ; preds = %4400, %4395
  %4406 = phi i32 [ 1, %4395 ], [ %4404, %4400 ]
  call fastcc void @drawcentercircle(ptr noundef nonnull %2, ptr noundef %83, ptr noundef nonnull %4396, i32 noundef %4384, i32 noundef %4406)
  br label %4407

4407:                                             ; preds = %4379, %4387, %4405, %4391, %4385, %4366
  %4408 = icmp eq i16 %4, 0
  br i1 %4408, label %4409, label %4550

4409:                                             ; preds = %4407
  %4410 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 28
  %4411 = load i16, ptr %4410, align 8, !tbaa !89
  %4412 = and i16 %4411, 4
  %4413 = icmp eq i16 %4412, 0
  br i1 %4413, label %4414, label %4550

4414:                                             ; preds = %4409
  %4415 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 129
  %4416 = load ptr, ptr %4415, align 8, !tbaa !271
  %4417 = load ptr, ptr %103, align 8, !tbaa !62
  %4418 = icmp eq ptr %81, %4417
  br i1 %4418, label %4459, label %4419

4419:                                             ; preds = %4414
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #13
  %4420 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 26
  %4421 = load ptr, ptr %4420, align 8, !tbaa !49
  %4422 = icmp eq ptr %4421, null
  br i1 %4422, label %4442, label %4423

4423:                                             ; preds = %4419, %4437
  %4424 = phi ptr [ %4438, %4437 ], [ %4421, %4419 ]
  %4425 = getelementptr inbounds %struct.ModifierData, ptr %4424, i64 0, i32 2
  %4426 = load i32, ptr %4425, align 8, !tbaa !272
  %4427 = icmp eq i32 %4426, 9
  br i1 %4427, label %4428, label %4437

4428:                                             ; preds = %4423
  %4429 = getelementptr inbounds %struct.HookModifierData, ptr %4424, i64 0, i32 4
  call void @mul_v3_m4v3(ptr noundef nonnull %6, ptr noundef nonnull %4352, ptr noundef nonnull %4429) #13
  %4430 = getelementptr inbounds %struct.HookModifierData, ptr %4424, i64 0, i32 1
  %4431 = load ptr, ptr %4430, align 8, !tbaa !273
  %4432 = icmp eq ptr %4431, null
  br i1 %4432, label %4436, label %4433

4433:                                             ; preds = %4428
  call void @setlinestyle(i32 noundef 3) #13
  call void @glBegin(i32 noundef 1) #13
  %4434 = load ptr, ptr %4430, align 8, !tbaa !273
  %4435 = getelementptr inbounds %struct.Object, ptr %4434, i64 0, i32 47, i64 3
  call void @glVertex3fv(ptr noundef nonnull %4435) #13
  call void @glVertex3fv(ptr noundef nonnull %6) #13
  call void @glEnd() #13
  call void @setlinestyle(i32 noundef 0) #13
  br label %4436

4436:                                             ; preds = %4433, %4428
  call void @glPointSize(float noundef nofpclass(nan inf) 3.000000e+00) #13
  call void @bglBegin(i32 noundef 0) #13
  call void @bglVertex3fv(ptr noundef nonnull %6) #13
  call void @bglEnd() #13
  call void @glPointSize(float noundef nofpclass(nan inf) 1.000000e+00) #13
  br label %4437

4437:                                             ; preds = %4436, %4423
  %4438 = load ptr, ptr %4424, align 8, !tbaa !49
  %4439 = icmp eq ptr %4438, null
  br i1 %4439, label %4440, label %4423, !llvm.loop !275

4440:                                             ; preds = %4437
  %4441 = load ptr, ptr %103, align 8, !tbaa !62
  br label %4442

4442:                                             ; preds = %4419, %4440
  %4443 = phi ptr [ %4441, %4440 ], [ %4417, %4419 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #13
  %4444 = icmp eq ptr %81, %4443
  br i1 %4444, label %4459, label %4445

4445:                                             ; preds = %4442
  %4446 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 9
  %4447 = load ptr, ptr %4446, align 8, !tbaa !276
  %4448 = icmp eq ptr %4447, null
  br i1 %4448, label %4459, label %4449

4449:                                             ; preds = %4445
  %4450 = getelementptr inbounds %struct.Object, ptr %4447, i64 0, i32 52
  %4451 = load i32, ptr %4450, align 8, !tbaa !277
  %4452 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 22
  %4453 = load i32, ptr %4452, align 8, !tbaa !278
  %4454 = and i32 %4453, %4451
  %4455 = icmp eq i32 %4454, 0
  br i1 %4455, label %4459, label %4456

4456:                                             ; preds = %4449
  call void @setlinestyle(i32 noundef 3) #13
  call void @glBegin(i32 noundef 1) #13
  %4457 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 47, i64 3
  call void @glVertex3fv(ptr noundef nonnull %4457) #13
  %4458 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 35
  call void @glVertex3fv(ptr noundef nonnull %4458) #13
  call void @glEnd() #13
  call void @setlinestyle(i32 noundef 0) #13
  br label %4459

4459:                                             ; preds = %4414, %4456, %4449, %4445, %4442
  %4460 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 106
  %4461 = load ptr, ptr %4460, align 8, !tbaa !279
  %4462 = icmp eq ptr %4461, null
  br i1 %4462, label %4532, label %4463

4463:                                             ; preds = %4459
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %77) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %78) #13
  call void @UI_GetThemeColor3ubv(i32 noundef 24, ptr noundef nonnull %77) #13
  call void @UI_make_axis_color(ptr noundef nonnull %77, ptr noundef nonnull %78, i8 noundef zeroext 90) #13
  call void @glColor3ubv(ptr noundef nonnull %78) #13
  %4464 = call ptr @BKE_constraints_make_evalob(ptr noundef nonnull %0, ptr noundef nonnull %81, ptr noundef null, i16 noundef signext 1) #13
  %4465 = load ptr, ptr %4460, align 8, !tbaa !49
  %4466 = icmp eq ptr %4465, null
  br i1 %4466, label %4531, label %4467

4467:                                             ; preds = %4463
  %4468 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 2
  %4469 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 47, i64 3
  br label %4470

4470:                                             ; preds = %4467, %4528
  %4471 = phi ptr [ %4465, %4467 ], [ %4529, %4528 ]
  %4472 = getelementptr inbounds %struct.bConstraint, ptr %4471, i64 0, i32 3
  %4473 = load i16, ptr %4472, align 8, !tbaa !254
  switch i16 %4473, label %4492 [
    i16 26, label %4474
    i16 28, label %4480
  ]

4474:                                             ; preds = %4470
  %4475 = getelementptr inbounds %struct.bConstraint, ptr %4471, i64 0, i32 2
  %4476 = load ptr, ptr %4475, align 8, !tbaa !256
  %4477 = getelementptr inbounds %struct.bFollowTrackConstraint, ptr %4476, i64 0, i32 5
  %4478 = load ptr, ptr %4477, align 8, !tbaa !280
  %4479 = icmp eq ptr %4478, null
  br i1 %4479, label %4486, label %4489

4480:                                             ; preds = %4470
  %4481 = getelementptr inbounds %struct.bConstraint, ptr %4471, i64 0, i32 2
  %4482 = load ptr, ptr %4481, align 8, !tbaa !256
  %4483 = getelementptr inbounds %struct.bObjectSolverConstraint, ptr %4482, i64 0, i32 5
  %4484 = load ptr, ptr %4483, align 8, !tbaa !282
  %4485 = icmp eq ptr %4484, null
  br i1 %4485, label %4486, label %4489

4486:                                             ; preds = %4480, %4474
  %4487 = load ptr, ptr %4468, align 8, !tbaa !284
  %4488 = icmp eq ptr %4487, null
  br i1 %4488, label %4528, label %4489

4489:                                             ; preds = %4480, %4474, %4486
  %4490 = phi ptr [ %4487, %4486 ], [ %4484, %4480 ], [ %4478, %4474 ]
  call void @setlinestyle(i32 noundef 3) #13
  call void @glBegin(i32 noundef 1) #13
  %4491 = getelementptr inbounds %struct.Object, ptr %4490, i64 0, i32 47, i64 3
  call void @glVertex3fv(ptr noundef nonnull %4491) #13
  call void @glVertex3fv(ptr noundef nonnull %4469) #13
  call void @glEnd() #13
  call void @setlinestyle(i32 noundef 0) #13
  br label %4528

4492:                                             ; preds = %4470
  %4493 = call ptr @BKE_constraint_typeinfo_get(ptr noundef nonnull %4471) #13
  %4494 = icmp eq ptr %4493, null
  br i1 %4494, label %4528, label %4495

4495:                                             ; preds = %4492
  %4496 = getelementptr inbounds %struct.bConstraintTypeInfo, ptr %4493, i64 0, i32 8
  %4497 = load ptr, ptr %4496, align 8, !tbaa !285
  %4498 = icmp eq ptr %4497, null
  br i1 %4498, label %4528, label %4499

4499:                                             ; preds = %4495
  %4500 = getelementptr inbounds %struct.bConstraint, ptr %4471, i64 0, i32 4
  %4501 = load i16, ptr %4500, align 2, !tbaa !287
  %4502 = and i16 %4501, 1
  %4503 = icmp eq i16 %4502, 0
  br i1 %4503, label %4528, label %4504

4504:                                             ; preds = %4499
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %79) #13
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %79, i8 0, i64 16, i1 false)
  %4505 = call i32 %4497(ptr noundef nonnull %4471, ptr noundef nonnull %79) #13
  %4506 = load ptr, ptr %79, align 8, !tbaa !49
  %4507 = icmp eq ptr %4506, null
  br i1 %4507, label %4522, label %4508

4508:                                             ; preds = %4504
  %4509 = getelementptr inbounds %struct.bConstraintTypeInfo, ptr %4493, i64 0, i32 10
  br label %4510

4510:                                             ; preds = %4508, %4518
  %4511 = phi ptr [ %4506, %4508 ], [ %4520, %4518 ]
  %4512 = load ptr, ptr %4509, align 8, !tbaa !288
  %4513 = icmp eq ptr %4512, null
  br i1 %4513, label %4516, label %4514

4514:                                             ; preds = %4510
  %4515 = call fast nofpclass(nan inf) float @BKE_scene_frame_get(ptr noundef %0) #13
  call void %4512(ptr noundef nonnull %4471, ptr noundef %4464, ptr noundef nonnull %4511, float noundef nofpclass(nan inf) %4515) #13
  br label %4518

4516:                                             ; preds = %4510
  %4517 = getelementptr inbounds %struct.bConstraintTarget, ptr %4511, i64 0, i32 4
  call void @unit_m4(ptr noundef nonnull %4517) #13
  br label %4518

4518:                                             ; preds = %4516, %4514
  call void @setlinestyle(i32 noundef 3) #13
  call void @glBegin(i32 noundef 1) #13
  %4519 = getelementptr inbounds %struct.bConstraintTarget, ptr %4511, i64 0, i32 4, i64 3
  call void @glVertex3fv(ptr noundef nonnull %4519) #13
  call void @glVertex3fv(ptr noundef nonnull %4469) #13
  call void @glEnd() #13
  call void @setlinestyle(i32 noundef 0) #13
  %4520 = load ptr, ptr %4511, align 8, !tbaa !49
  %4521 = icmp eq ptr %4520, null
  br i1 %4521, label %4522, label %4510, !llvm.loop !289

4522:                                             ; preds = %4518, %4504
  %4523 = getelementptr inbounds %struct.bConstraintTypeInfo, ptr %4493, i64 0, i32 9
  %4524 = load ptr, ptr %4523, align 8, !tbaa !290
  %4525 = icmp eq ptr %4524, null
  br i1 %4525, label %4527, label %4526

4526:                                             ; preds = %4522
  call void %4524(ptr noundef nonnull %4471, ptr noundef nonnull %79, i8 noundef zeroext 1) #13
  br label %4527

4527:                                             ; preds = %4526, %4522
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %79) #13
  br label %4528

4528:                                             ; preds = %4492, %4495, %4499, %4527, %4486, %4489
  %4529 = load ptr, ptr %4471, align 8, !tbaa !49
  %4530 = icmp eq ptr %4529, null
  br i1 %4530, label %4531, label %4470, !llvm.loop !291

4531:                                             ; preds = %4528, %4463
  call void @BKE_constraints_clear_evalob(ptr noundef %4464) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %78) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %77) #13
  br label %4532

4532:                                             ; preds = %4531, %4459
  %4533 = icmp eq ptr %4416, null
  br i1 %4533, label %4550, label %4534

4534:                                             ; preds = %4532
  call void @UI_ThemeColor(i32 noundef 25) #13
  call void @setlinestyle(i32 noundef 3) #13
  call void @glBegin(i32 noundef 1) #13
  %4535 = load ptr, ptr %4416, align 8, !tbaa !292
  %4536 = icmp eq ptr %4535, null
  br i1 %4536, label %4541, label %4537

4537:                                             ; preds = %4534
  %4538 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 47, i64 3
  call void @glVertex3fv(ptr noundef nonnull %4538) #13
  %4539 = load ptr, ptr %4416, align 8, !tbaa !292
  %4540 = getelementptr inbounds %struct.Object, ptr %4539, i64 0, i32 47, i64 3
  call void @glVertex3fv(ptr noundef nonnull %4540) #13
  br label %4541

4541:                                             ; preds = %4537, %4534
  %4542 = getelementptr inbounds %struct.RigidBodyCon, ptr %4416, i64 0, i32 1
  %4543 = load ptr, ptr %4542, align 8, !tbaa !294
  %4544 = icmp eq ptr %4543, null
  br i1 %4544, label %4549, label %4545

4545:                                             ; preds = %4541
  %4546 = getelementptr inbounds %struct.Object, ptr %81, i64 0, i32 47, i64 3
  call void @glVertex3fv(ptr noundef nonnull %4546) #13
  %4547 = load ptr, ptr %4542, align 8, !tbaa !294
  %4548 = getelementptr inbounds %struct.Object, ptr %4547, i64 0, i32 47, i64 3
  call void @glVertex3fv(ptr noundef nonnull %4548) #13
  br label %4549

4549:                                             ; preds = %4545, %4541
  call void @glEnd() #13
  call void @setlinestyle(i32 noundef 0) #13
  br label %4550

4550:                                             ; preds = %4407, %4409, %4549, %4532, %4359, %124, %118, %114, %106, %193, %173
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %68) #13
  ret void
}

declare void @ED_view3d_after_add(ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #1

declare void @glBlendFunc(i32 noundef, i32 noundef) local_unnamed_addr #1

declare void @draw_motion_paths_init(ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @draw_motion_path_instance(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @draw_motion_paths_cleanup(ptr noundef) local_unnamed_addr #1

declare void @ED_view3d_init_mats_rv3d_gl(ptr noundef, ptr noundef) local_unnamed_addr #1

declare i32 @ED_view3d_project_base(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @drawObjectSelect(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.ARegion, ptr %2, i64 0, i32 30
  %7 = load ptr, ptr %6, align 8, !tbaa !52
  %8 = getelementptr inbounds %struct.Base, ptr %3, i64 0, i32 7
  %9 = load ptr, ptr %8, align 8, !tbaa !38
  %10 = tail call fast nofpclass(nan inf) float @UI_GetThemeValuef(i32 noundef 37) #13
  %11 = fmul fast float %10, 2.000000e+00
  tail call void @glLineWidth(float noundef nofpclass(nan inf) %11) #13
  tail call void @glDepthMask(i8 noundef zeroext 0) #13
  %12 = getelementptr inbounds %struct.Object, ptr %9, i64 0, i32 3
  %13 = load i16, ptr %12, align 8, !tbaa !75
  switch i16 %13, label %77 [
    i16 4, label %14
    i16 2, label %14
    i16 3, label %14
    i16 5, label %49
    i16 25, label %66
  ]

14:                                               ; preds = %5, %5, %5
  %15 = getelementptr inbounds %struct.Object, ptr %9, i64 0, i32 120
  %16 = load ptr, ptr %15, align 8, !tbaa !265
  %17 = icmp eq ptr %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %14
  tail call void @DM_update_materials(ptr noundef nonnull %16, ptr noundef nonnull %9) #13
  tail call fastcc void @ensure_curve_cache(ptr noundef %0, ptr noundef nonnull %9)
  %19 = getelementptr inbounds %struct.DerivedMesh, ptr %16, i64 0, i32 25
  %20 = load ptr, ptr %19, align 8, !tbaa !295
  %21 = tail call i32 %20(ptr noundef nonnull %16) #13
  %22 = icmp sgt i32 %21, 0
  %23 = zext i1 %22 to i8
  br label %28

24:                                               ; preds = %14
  tail call fastcc void @ensure_curve_cache(ptr noundef %0, ptr noundef nonnull %9)
  %25 = getelementptr inbounds %struct.Object, ptr %9, i64 0, i32 118
  %26 = load ptr, ptr %25, align 8, !tbaa !113
  %27 = tail call zeroext i8 @BKE_displist_has_faces(ptr noundef %26) #13
  br label %28

28:                                               ; preds = %24, %18
  %29 = phi i8 [ %23, %18 ], [ %27, %24 ]
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %77, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.Object, ptr %9, i64 0, i32 15
  %33 = load ptr, ptr %32, align 8, !tbaa !95
  %34 = tail call zeroext i8 @ED_view3d_boundbox_clip(ptr noundef %7, ptr noundef %33) #13
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %77, label %36

36:                                               ; preds = %31
  br i1 %17, label %40, label %37

37:                                               ; preds = %36
  %38 = getelementptr i8, ptr %1, i64 345
  %39 = load i8, ptr %38, align 1, !tbaa !73
  tail call fastcc void @draw_mesh_object_outline(i8 %39, ptr noundef nonnull %9, ptr noundef nonnull %16)
  br label %77

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.Object, ptr %9, i64 0, i32 118
  %42 = load ptr, ptr %41, align 8, !tbaa !113
  %43 = load i16, ptr %12, align 8, !tbaa !75
  %44 = add i16 %43, -2
  %45 = and i16 %44, -3
  %46 = icmp eq i16 %45, 0
  %47 = select i1 %46, i32 -49, i32 -1
  %48 = tail call fastcc zeroext i8 @drawDispListwire_ex(ptr noundef %42, i32 noundef %47), !range !96
  br label %77

49:                                               ; preds = %5
  %50 = tail call zeroext i8 @BKE_mball_is_basis(ptr noundef nonnull %9) #13
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %77, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.Base, ptr %3, i64 0, i32 4
  %54 = load i32, ptr %53, align 8, !tbaa !71
  %55 = and i32 %54, 512
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %77

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.Object, ptr %9, i64 0, i32 118
  %59 = load ptr, ptr %58, align 8, !tbaa !113
  %60 = load i16, ptr %12, align 8, !tbaa !75
  %61 = add i16 %60, -2
  %62 = and i16 %61, -3
  %63 = icmp eq i16 %62, 0
  %64 = select i1 %63, i32 -49, i32 -1
  %65 = tail call fastcc zeroext i8 @drawDispListwire_ex(ptr noundef %59, i32 noundef %64), !range !96
  br label %77

66:                                               ; preds = %5
  %67 = getelementptr inbounds %struct.Object, ptr %9, i64 0, i32 27
  %68 = load i32, ptr %67, align 8, !tbaa !40
  %69 = and i32 %68, 64
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 6
  %73 = load ptr, ptr %72, align 8, !tbaa !18
  %74 = icmp eq ptr %73, %3
  br i1 %74, label %77, label %75

75:                                               ; preds = %71, %66
  %76 = tail call zeroext i8 @draw_armature(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %2, ptr noundef nonnull %3, i16 noundef signext 2, i16 noundef signext 0, ptr noundef %4, i8 noundef zeroext 1) #13
  br label %77

77:                                               ; preds = %5, %28, %31, %40, %37, %52, %57, %49, %71, %75
  tail call void @glLineWidth(float noundef nofpclass(nan inf) 1.000000e+00) #13
  tail call void @glDepthMask(i8 noundef zeroext 1) #13
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i8 @draw_mesh_object(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, i8 noundef zeroext %5, ptr noundef %6, i16 noundef signext %7) unnamed_addr #0 {
  %9 = alloca %struct.drawDMVertSel_userData, align 8
  %10 = alloca [3 x i8], align 1
  %11 = alloca [3 x i8], align 1
  %12 = alloca [3 x i8], align 1
  %13 = alloca [3 x float], align 4
  %14 = alloca [3 x float], align 4
  %15 = alloca [3 x float], align 4
  %16 = alloca %struct.GPUVertexAttribs, align 4
  %17 = alloca [4 x [4 x float]], align 16
  %18 = alloca [4 x float], align 16
  %19 = alloca [4 x [4 x float]], align 16
  %20 = alloca i8, align 1
  %21 = alloca ptr, align 8
  %22 = getelementptr inbounds %struct.Base, ptr %4, i64 0, i32 7
  %23 = load ptr, ptr %22, align 8, !tbaa !38
  %24 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 7
  %25 = load ptr, ptr %24, align 8, !tbaa !62
  %26 = getelementptr inbounds %struct.Object, ptr %23, i64 0, i32 19
  %27 = load ptr, ptr %26, align 8, !tbaa !90
  %28 = getelementptr inbounds %struct.Mesh, ptr %27, i64 0, i32 20
  %29 = load ptr, ptr %28, align 8, !tbaa !296
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %20) #13
  store i8 0, ptr %20, align 1, !tbaa !50
  %30 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 29
  %31 = load i16, ptr %30, align 2, !tbaa !15
  %32 = and i16 %31, 64
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %52, label %34

34:                                               ; preds = %8
  %35 = getelementptr inbounds %struct.Object, ptr %23, i64 0, i32 31
  %36 = load i32, ptr %35, align 8, !tbaa !298
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %38, label %52

38:                                               ; preds = %34, %48
  %39 = phi i32 [ %49, %48 ], [ 0, %34 ]
  %40 = trunc i32 %39 to i16
  %41 = tail call ptr @give_current_material(ptr noundef nonnull %23, i16 noundef signext %40) #13
  %42 = icmp eq ptr %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.Material, ptr %41, i64 0, i32 53
  %45 = load i32, ptr %44, align 4, !tbaa !299
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %603, label %48

48:                                               ; preds = %43, %38
  %49 = add nuw nsw i32 %39, 1
  %50 = load i32, ptr %35, align 8, !tbaa !298
  %51 = icmp slt i32 %49, %50
  br i1 %51, label %38, label %52, !llvm.loop !300

52:                                               ; preds = %48, %34, %8
  %53 = icmp eq ptr %25, null
  %54 = icmp eq ptr %23, %25
  %55 = or i1 %53, %54
  br i1 %55, label %75, label %56

56:                                               ; preds = %52
  %57 = load ptr, ptr %26, align 8, !tbaa !90
  %58 = getelementptr inbounds %struct.Object, ptr %25, i64 0, i32 19
  %59 = load ptr, ptr %58, align 8, !tbaa !90
  %60 = icmp eq ptr %57, %59
  br i1 %60, label %61, label %75

61:                                               ; preds = %56
  %62 = tail call ptr @BKE_key_from_object(ptr noundef nonnull %23) #13
  %63 = icmp eq ptr %62, null
  br i1 %63, label %64, label %75

64:                                               ; preds = %61
  %65 = tail call ptr @BKE_key_from_object(ptr noundef nonnull %25) #13
  %66 = icmp eq ptr %65, null
  br i1 %66, label %67, label %75

67:                                               ; preds = %64
  %68 = getelementptr inbounds %struct.Object, ptr %23, i64 0, i32 26
  %69 = load ptr, ptr %68, align 8, !tbaa !301
  %70 = icmp eq ptr %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.Object, ptr %25, i64 0, i32 26
  %73 = load ptr, ptr %72, align 8, !tbaa !301
  %74 = icmp eq ptr %73, null
  br label %75

75:                                               ; preds = %71, %64, %61, %67, %56, %52
  %76 = phi i1 [ false, %61 ], [ false, %64 ], [ false, %67 ], [ false, %56 ], [ false, %52 ], [ %74, %71 ]
  %77 = load i16, ptr %30, align 2, !tbaa !15
  %78 = and i16 %77, 1024
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %81, label %80

80:                                               ; preds = %75
  tail call void @glEnable(i32 noundef 2884) #13
  tail call void @glCullFace(i32 noundef 1029) #13
  br label %81

81:                                               ; preds = %80, %75
  %82 = or i1 %54, %76
  br i1 %82, label %83, label %107

83:                                               ; preds = %81
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %21) #13
  %84 = icmp ne ptr %25, %23
  br i1 %84, label %85, label %87

85:                                               ; preds = %83
  %86 = tail call ptr @editbmesh_get_derived_base(ptr noundef nonnull %23, ptr noundef %29) #13
  store ptr %86, ptr %21, align 8, !tbaa !49
  br label %92

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 42
  %89 = load i64, ptr %88, align 8, !tbaa !302
  %90 = call ptr @editbmesh_get_derived_cage_and_final(ptr noundef %0, ptr noundef nonnull %23, ptr noundef %29, ptr noundef nonnull %21, i64 noundef %89) #13
  %91 = load ptr, ptr %21, align 8, !tbaa !49
  br label %92

92:                                               ; preds = %87, %85
  %93 = phi ptr [ %86, %85 ], [ %91, %87 ]
  %94 = phi ptr [ %86, %85 ], [ %90, %87 ]
  call void @DM_update_materials(ptr noundef %93, ptr noundef nonnull %23) #13
  call void @DM_update_materials(ptr noundef %94, ptr noundef nonnull %23) #13
  %95 = icmp ugt i8 %5, 2
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = call zeroext i8 @draw_glsl_material(ptr noundef %0, ptr noundef nonnull %23, ptr noundef nonnull %2, i8 noundef zeroext %5), !range !96
  call void @GPU_begin_object_materials(ptr noundef nonnull %2, ptr noundef %3, ptr noundef %0, ptr noundef nonnull %23, i8 noundef zeroext %97, ptr noundef null) #13
  br label %98

98:                                               ; preds = %96, %92
  %99 = load ptr, ptr %21, align 8, !tbaa !49
  call fastcc void @draw_em_fancy(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %2, ptr noundef nonnull %23, ptr noundef %29, ptr noundef %94, ptr noundef %99, i8 noundef zeroext %5)
  call void @GPU_end_object_materials() #13
  %100 = load ptr, ptr %21, align 8
  %101 = icmp ne ptr %100, null
  %102 = select i1 %84, i1 %101, i1 false
  br i1 %102, label %103, label %106

103:                                              ; preds = %98
  %104 = getelementptr inbounds %struct.DerivedMesh, ptr %100, i64 0, i32 95
  %105 = load ptr, ptr %104, align 8, !tbaa !303
  call void %105(ptr noundef nonnull %100) #13
  br label %106

106:                                              ; preds = %103, %98
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %21) #13
  br label %558

107:                                              ; preds = %81
  %108 = getelementptr inbounds %struct.Mesh, ptr %27, i64 0, i32 30
  %109 = load i32, ptr %108, align 8, !tbaa !304
  %110 = icmp slt i32 %109, 5
  br i1 %110, label %118, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %struct.Object, ptr %23, i64 0, i32 15
  %113 = load ptr, ptr %112, align 8, !tbaa !95
  %114 = icmp eq ptr %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %111
  %116 = tail call zeroext i8 @ED_view3d_boundbox_clip(ptr noundef %3, ptr noundef nonnull %113) #13
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %558, label %118

118:                                              ; preds = %115, %111, %107
  %119 = icmp ugt i8 %5, 2
  br i1 %119, label %120, label %149

120:                                              ; preds = %118
  %121 = tail call zeroext i8 @draw_glsl_material(ptr noundef %0, ptr noundef nonnull %23, ptr noundef nonnull %2, i8 noundef zeroext %5), !range !96
  %122 = icmp eq i8 %5, 3
  %123 = icmp ne i8 %121, 0
  %124 = select i1 %122, i1 true, i1 %123
  br i1 %124, label %125, label %149

125:                                              ; preds = %120
  %126 = getelementptr inbounds %struct.Base, ptr %4, i64 0, i32 4
  %127 = load i32, ptr %126, align 8, !tbaa !71
  %128 = and i32 %127, 512
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %146

130:                                              ; preds = %125
  %131 = load i32, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 15), align 8, !tbaa !16
  %132 = and i32 %131, 32
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %146

134:                                              ; preds = %130
  %135 = load ptr, ptr %22, align 8, !tbaa !38
  %136 = getelementptr inbounds %struct.Object, ptr %135, i64 0, i32 27
  %137 = load i32, ptr %136, align 8, !tbaa !40
  %138 = and i32 %137, 30
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %146

140:                                              ; preds = %134
  %141 = getelementptr inbounds %struct.Object, ptr %135, i64 0, i32 86
  %142 = load i16, ptr %141, align 4, !tbaa !74
  %143 = freeze i16 %142
  %144 = and i16 %143, 128
  %145 = icmp eq i16 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %134, %130, %125, %140
  br label %147

147:                                              ; preds = %140, %146
  %148 = phi ptr [ null, %146 ], [ %20, %140 ]
  call void @GPU_begin_object_materials(ptr noundef nonnull %2, ptr noundef %3, ptr noundef %0, ptr noundef nonnull %23, i8 noundef zeroext %121, ptr noundef %148) #13
  br label %149

149:                                              ; preds = %147, %120, %118
  %150 = load ptr, ptr %22, align 8, !tbaa !38
  %151 = getelementptr inbounds %struct.Object, ptr %150, i64 0, i32 19
  %152 = load ptr, ptr %151, align 8, !tbaa !90
  %153 = call ptr @give_current_material(ptr noundef %150, i16 noundef signext 1) #13
  %154 = icmp eq ptr %153, null
  br i1 %154, label %162, label %155

155:                                              ; preds = %149
  %156 = getelementptr inbounds %struct.Material, ptr %153, i64 0, i32 2
  %157 = load i16, ptr %156, align 8, !tbaa !305
  %158 = icmp eq i16 %157, 1
  br i1 %158, label %159, label %162

159:                                              ; preds = %155
  %160 = call zeroext i8 @BKE_scene_use_new_shading_nodes(ptr noundef %0) #13
  %161 = icmp eq i8 %160, 0
  br label %162

162:                                              ; preds = %159, %155, %149
  %163 = phi i1 [ false, %155 ], [ false, %149 ], [ %161, %159 ]
  %164 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 42
  %165 = load i64, ptr %164, align 8, !tbaa !302
  %166 = call ptr @mesh_get_derived_final(ptr noundef %0, ptr noundef nonnull %150, i64 noundef %165) #13
  %167 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 6
  %168 = load ptr, ptr %167, align 8, !tbaa !18
  %169 = icmp eq ptr %168, null
  br i1 %169, label %179, label %170

170:                                              ; preds = %162
  %171 = getelementptr inbounds %struct.Base, ptr %168, i64 0, i32 7
  %172 = load ptr, ptr %171, align 8, !tbaa !38
  %173 = icmp eq ptr %150, %172
  br i1 %173, label %174, label %179

174:                                              ; preds = %170
  %175 = call zeroext i8 @BKE_paint_select_face_test(ptr noundef nonnull %150) #13
  %176 = freeze i8 %175
  %177 = icmp ne i8 %176, 0
  %178 = select i1 %177, i32 2, i32 0
  br label %179

179:                                              ; preds = %174, %170, %162
  %180 = phi i1 [ false, %170 ], [ false, %162 ], [ %177, %174 ]
  %181 = phi i1 [ false, %170 ], [ false, %162 ], [ true, %174 ]
  %182 = phi i32 [ 0, %170 ], [ 0, %162 ], [ %178, %174 ]
  %183 = icmp eq ptr %166, null
  br i1 %183, label %553, label %184

184:                                              ; preds = %179
  call void @DM_update_materials(ptr noundef nonnull %166, ptr noundef nonnull %150) #13
  %185 = call ptr @DM_get_tessface_data_layer(ptr noundef nonnull %166, i32 noundef 20) #13
  %186 = icmp eq ptr %185, null
  br i1 %186, label %192, label %187

187:                                              ; preds = %184
  %188 = call zeroext i8 @modifiers_isPreview(ptr noundef nonnull %150) #13
  %189 = icmp ne i8 %188, 0
  %190 = zext i1 %189 to i32
  %191 = or i32 %182, %190
  br label %192

192:                                              ; preds = %187, %184
  %193 = phi i32 [ %182, %184 ], [ %191, %187 ]
  br i1 %180, label %201, label %194

194:                                              ; preds = %192
  %195 = getelementptr inbounds %struct.Object, ptr %150, i64 0, i32 86
  %196 = load i16, ptr %195, align 4, !tbaa !74
  %197 = and i16 %196, 32
  %198 = icmp eq i16 %197, 0
  %199 = lshr exact i16 %197, 4
  %200 = zext i16 %199 to i32
  br label %201

201:                                              ; preds = %194, %192
  %202 = phi i1 [ true, %192 ], [ %198, %194 ]
  %203 = phi i32 [ 0, %192 ], [ %200, %194 ]
  %204 = getelementptr inbounds %struct.DerivedMesh, ptr %166, i64 0, i32 24
  %205 = load ptr, ptr %204, align 8, !tbaa !306
  %206 = call i32 %205(ptr noundef nonnull %166) #13
  %207 = getelementptr inbounds %struct.DerivedMesh, ptr %166, i64 0, i32 25
  %208 = load ptr, ptr %207, align 8, !tbaa !295
  %209 = call i32 %208(ptr noundef nonnull %166) #13
  %210 = getelementptr inbounds %struct.Object, ptr %150, i64 0, i32 55
  %211 = load i16, ptr %210, align 8, !tbaa !64
  %212 = and i16 %211, 4
  %213 = icmp eq i16 %212, 0
  %214 = select i1 %213, i32 2305, i32 2304
  call void @glFrontFace(i32 noundef %214) #13
  %215 = icmp eq i8 %5, 1
  br i1 %215, label %216, label %227

216:                                              ; preds = %201
  %217 = load i16, ptr %30, align 2, !tbaa !15
  %218 = and i16 %217, 4
  %219 = icmp eq i16 %218, 0
  br i1 %219, label %224, label %220

220:                                              ; preds = %216
  %221 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 24
  %222 = load i16, ptr %221, align 8, !tbaa !5
  %223 = icmp slt i16 %222, 2
  br i1 %223, label %224, label %483

224:                                              ; preds = %220, %216
  %225 = getelementptr inbounds %struct.Object, ptr %150, i64 0, i32 84
  %226 = load i8, ptr %225, align 2, !tbaa !94
  call fastcc void @draw_bounding_volume(ptr noundef nonnull %150, i8 noundef zeroext %226)
  br label %483

227:                                              ; preds = %201
  br i1 %163, label %232, label %228

228:                                              ; preds = %227
  %229 = icmp eq i32 %209, 0
  %230 = icmp eq i32 %206, 0
  %231 = select i1 %229, i1 %230, i1 false
  br i1 %231, label %232, label %235

232:                                              ; preds = %228, %227
  call void @glPointSize(float noundef nofpclass(nan inf) 1.500000e+00) #13
  %233 = getelementptr inbounds %struct.DerivedMesh, ptr %166, i64 0, i32 82
  %234 = load ptr, ptr %233, align 8, !tbaa !307
  call void %234(ptr noundef nonnull %166) #13
  call void @glPointSize(float noundef nofpclass(nan inf) 1.000000e+00) #13
  br label %483

235:                                              ; preds = %228
  %236 = icmp eq i8 %5, 2
  %237 = or i1 %236, %229
  br i1 %237, label %485, label %238

238:                                              ; preds = %235
  br i1 %181, label %239, label %244

239:                                              ; preds = %238
  %240 = getelementptr inbounds %struct.Object, ptr %150, i64 0, i32 27
  %241 = load i32, ptr %240, align 8, !tbaa !40
  %242 = and i32 %241, 16
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %267

244:                                              ; preds = %239, %238
  %245 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 24
  %246 = load i16, ptr %245, align 8, !tbaa !5
  %247 = icmp eq i16 %246, 5
  br i1 %247, label %252, label %248

248:                                              ; preds = %244
  %249 = icmp eq i16 %246, 4
  %250 = icmp ugt i8 %5, 3
  %251 = and i1 %250, %249
  br i1 %251, label %267, label %254

252:                                              ; preds = %244
  %253 = icmp ugt i8 %5, 3
  br i1 %253, label %267, label %263

254:                                              ; preds = %248
  %255 = icmp eq i16 %246, 3
  br i1 %255, label %256, label %263

256:                                              ; preds = %254
  %257 = load i16, ptr %30, align 2, !tbaa !15
  %258 = and i16 %257, 8
  %259 = icmp eq i16 %258, 0
  br i1 %259, label %263, label %260

260:                                              ; preds = %256
  %261 = call zeroext i8 @BKE_scene_use_new_shading_nodes(ptr noundef nonnull %0) #13
  %262 = icmp eq i8 %261, 0
  br i1 %262, label %267, label %263

263:                                              ; preds = %260, %256, %254, %252
  %264 = load i16, ptr %30, align 2, !tbaa !15
  %265 = and i16 %264, 8192
  %266 = icmp eq i16 %265, 0
  br i1 %266, label %364, label %267

267:                                              ; preds = %263, %260, %252, %248, %239
  %268 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 28
  %269 = load i16, ptr %268, align 8, !tbaa !89
  %270 = and i16 %269, 2048
  %271 = icmp eq i16 %270, 0
  br i1 %271, label %291, label %272

272:                                              ; preds = %267
  %273 = load i16, ptr %30, align 2, !tbaa !15
  %274 = and i16 %273, 4
  %275 = icmp eq i16 %274, 0
  br i1 %275, label %276, label %291

276:                                              ; preds = %272
  %277 = getelementptr inbounds %struct.Base, ptr %4, i64 0, i32 4
  %278 = load i32, ptr %277, align 8, !tbaa !71
  %279 = and i32 %278, 1
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %291, label %281

281:                                              ; preds = %276
  %282 = load i32, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 15), align 8, !tbaa !16
  %283 = and i32 %282, 32
  %284 = icmp eq i32 %283, 0
  %285 = xor i1 %180, true
  %286 = and i1 %202, %285
  %287 = select i1 %284, i1 %286, i1 false
  br i1 %287, label %288, label %291

288:                                              ; preds = %281
  %289 = getelementptr i8, ptr %2, i64 345
  %290 = load i8, ptr %289, align 1, !tbaa !73
  call fastcc void @draw_mesh_object_outline(i8 %290, ptr noundef nonnull %150, ptr noundef nonnull %166)
  br label %291

291:                                              ; preds = %288, %281, %276, %272, %267
  %292 = call zeroext i8 @draw_glsl_material(ptr noundef nonnull %0, ptr noundef nonnull %150, ptr noundef nonnull %2, i8 noundef zeroext %5), !range !96
  %293 = icmp ne i8 %292, 0
  %294 = and i32 %193, 1
  %295 = icmp eq i32 %294, 0
  %296 = select i1 %293, i1 %295, i1 false
  br i1 %296, label %297, label %348

297:                                              ; preds = %291
  %298 = load i16, ptr %210, align 8, !tbaa !64
  %299 = and i16 %298, 4
  %300 = icmp eq i16 %299, 0
  %301 = select i1 %300, i32 2305, i32 2304
  call void @glFrontFace(i32 noundef %301) #13
  %302 = load i16, ptr %30, align 2, !tbaa !15
  %303 = and i16 %302, 8192
  %304 = icmp eq i16 %303, 0
  br i1 %304, label %342, label %305

305:                                              ; preds = %297
  %306 = getelementptr inbounds %struct.Object, ptr %150, i64 0, i32 2
  %307 = load ptr, ptr %306, align 8, !tbaa !308
  %308 = icmp eq ptr %307, null
  br i1 %308, label %342, label %309

309:                                              ; preds = %305
  %310 = call ptr @BKE_paint_get_active(ptr noundef nonnull %0) #13
  %311 = icmp eq ptr %310, null
  br i1 %311, label %342, label %312

312:                                              ; preds = %309
  call void @llvm.lifetime.start.p0(i64 2564, ptr nonnull %16) #13
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %17) #13
  %313 = getelementptr inbounds %struct.Paint, ptr %310, i64 0, i32 4
  %314 = load i32, ptr %313, align 4, !tbaa !309
  %315 = and i32 %314, 2
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %322, label %317

317:                                              ; preds = %312
  %318 = getelementptr inbounds %struct.RegionView3D, ptr %3, i64 0, i32 32
  %319 = load i16, ptr %318, align 2, !tbaa !56
  %320 = and i16 %319, 8
  %321 = icmp ne i16 %320, 0
  br label %322

322:                                              ; preds = %317, %312
  %323 = phi i1 [ false, %312 ], [ %321, %317 ]
  %324 = zext i1 %323 to i8
  %325 = load ptr, ptr %306, align 8, !tbaa !308
  %326 = getelementptr inbounds %struct.SculptSession, ptr %325, i64 0, i32 21
  %327 = load i8, ptr %326, align 8, !tbaa !311
  %328 = icmp eq i8 %327, 0
  br i1 %328, label %337, label %329

329:                                              ; preds = %322
  %330 = getelementptr inbounds %struct.ARegion, ptr %1, i64 0, i32 14
  %331 = load i16, ptr %330, align 4, !tbaa !313
  %332 = and i16 %331, 2
  %333 = icmp eq i16 %332, 0
  br i1 %333, label %337, label %334

334:                                              ; preds = %329
  call void @ED_sculpt_redraw_planes_get(ptr noundef nonnull %17, ptr noundef nonnull %1, ptr noundef %3, ptr noundef nonnull %150) #13
  %335 = load ptr, ptr %306, align 8, !tbaa !308
  %336 = getelementptr inbounds %struct.SculptSession, ptr %335, i64 0, i32 21
  store i8 0, ptr %336, align 8, !tbaa !311
  br label %337

337:                                              ; preds = %334, %329, %322
  %338 = phi ptr [ %17, %334 ], [ null, %329 ], [ null, %322 ]
  %339 = call i32 @GPU_enable_material(i32 noundef 1, ptr noundef nonnull %16) #13
  %340 = getelementptr inbounds %struct.DerivedMesh, ptr %166, i64 0, i32 86
  %341 = load ptr, ptr %340, align 8, !tbaa !314
  call void %341(ptr noundef nonnull %166, ptr noundef %338, i8 noundef zeroext %324, ptr noundef null) #13
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %17) #13
  call void @llvm.lifetime.end.p0(i64 2564, ptr nonnull %16) #13
  br label %345

342:                                              ; preds = %309, %305, %297
  %343 = getelementptr inbounds %struct.DerivedMesh, ptr %166, i64 0, i32 88
  %344 = load ptr, ptr %343, align 8, !tbaa !315
  call void %344(ptr noundef nonnull %166, ptr noundef nonnull @GPU_enable_material) #13
  br label %345

345:                                              ; preds = %342, %337
  %346 = phi i32 [ 0, %337 ], [ 1, %342 ]
  call void @GPU_disable_material() #13
  call void @glFrontFace(i32 noundef 2305) #13
  br i1 %180, label %347, label %349

347:                                              ; preds = %345
  call void @draw_mesh_face_select(ptr noundef %3, ptr noundef %152, ptr noundef nonnull %166) #13
  br label %483

348:                                              ; preds = %291
  call void @draw_mesh_textured(ptr noundef nonnull %0, ptr noundef nonnull %2, ptr noundef %3, ptr noundef nonnull %150, ptr noundef nonnull %166, i32 noundef %193) #13
  br label %349

349:                                              ; preds = %348, %345
  %350 = phi i32 [ 1, %348 ], [ %346, %345 ]
  %351 = icmp eq i32 %350, 0
  %352 = or i1 %180, %351
  br i1 %352, label %483, label %353

353:                                              ; preds = %349
  %354 = load i16, ptr %30, align 2, !tbaa !15
  %355 = and i16 %354, 4
  %356 = icmp eq i16 %355, 0
  br i1 %356, label %357, label %483

357:                                              ; preds = %353
  %358 = and i16 %7, 2
  %359 = icmp eq i16 %358, 0
  br i1 %359, label %360, label %361

360:                                              ; preds = %357
  call void @glColor3ubv(ptr noundef %6) #13
  br label %361

361:                                              ; preds = %360, %357
  %362 = getelementptr inbounds %struct.DerivedMesh, ptr %166, i64 0, i32 85
  %363 = load ptr, ptr %362, align 8, !tbaa !316
  call void %363(ptr noundef nonnull %166) #13
  br label %483

364:                                              ; preds = %263
  switch i8 %5, label %483 [
    i8 3, label %365
    i8 100, label %482
  ]

365:                                              ; preds = %364
  %366 = and i32 %193, 1
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %399, label %368

368:                                              ; preds = %365
  %369 = and i16 %7, 3
  %370 = icmp eq i16 %369, 0
  br i1 %370, label %374, label %371

371:                                              ; preds = %368
  %372 = getelementptr inbounds %struct.DerivedMesh, ptr %166, i64 0, i32 86
  %373 = load ptr, ptr %372, align 8, !tbaa !314
  call void %373(ptr noundef nonnull %166, ptr noundef null, i8 noundef zeroext 0, ptr noundef nonnull @GPU_enable_material) #13
  br label %483

374:                                              ; preds = %368
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %18) #13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %18, ptr noundef nonnull align 16 dereferenceable(16) @__const.draw_mesh_fancy.spec, i64 16, i1 false)
  %375 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 28
  %376 = load i16, ptr %375, align 8, !tbaa !89
  %377 = and i16 %376, 2048
  %378 = icmp ne i16 %377, 0
  %379 = and i16 %264, 4
  %380 = icmp eq i16 %379, 0
  %381 = and i1 %380, %378
  br i1 %381, label %382, label %395

382:                                              ; preds = %374
  %383 = getelementptr inbounds %struct.Base, ptr %4, i64 0, i32 4
  %384 = load i32, ptr %383, align 8, !tbaa !71
  %385 = and i32 %384, 1
  %386 = icmp ne i32 %385, 0
  %387 = and i1 %202, %386
  br i1 %387, label %388, label %395

388:                                              ; preds = %382
  %389 = getelementptr inbounds %struct.Object, ptr %150, i64 0, i32 2
  %390 = load ptr, ptr %389, align 8, !tbaa !308
  %391 = icmp eq ptr %390, null
  br i1 %391, label %392, label %395

392:                                              ; preds = %388
  %393 = getelementptr i8, ptr %2, i64 345
  %394 = load i8, ptr %393, align 1, !tbaa !73
  call fastcc void @draw_mesh_object_outline(i8 %394, ptr noundef nonnull %150, ptr noundef nonnull %166)
  br label %395

395:                                              ; preds = %392, %388, %382, %374
  call void @GPU_end_object_materials() #13
  %396 = call i32 @GPU_enable_material(i32 noundef 0, ptr noundef null) #13
  call void @glColorMaterial(i32 noundef 1032, i32 noundef 4610) #13
  call void @glMaterialfv(i32 noundef 1032, i32 noundef 4610, ptr noundef nonnull %18) #13
  call void @glColorMaterial(i32 noundef 1032, i32 noundef 4609) #13
  call void @glEnable(i32 noundef 2896) #13
  call void @glEnable(i32 noundef 2903) #13
  %397 = getelementptr inbounds %struct.DerivedMesh, ptr %166, i64 0, i32 89
  %398 = load ptr, ptr %397, align 8, !tbaa !317
  call void %398(ptr noundef nonnull %166, ptr noundef null, ptr noundef nonnull @draw_dm_override_material_color, ptr noundef null, ptr noundef null, i32 noundef 1) #13
  call void @glDisable(i32 noundef 2903) #13
  call void @glDisable(i32 noundef 2896) #13
  call void @GPU_disable_material() #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %18) #13
  br label %483

399:                                              ; preds = %365
  %400 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 28
  %401 = load i16, ptr %400, align 8, !tbaa !89
  %402 = and i16 %401, 2048
  %403 = icmp ne i16 %402, 0
  %404 = and i16 %264, 4
  %405 = icmp eq i16 %404, 0
  %406 = and i1 %405, %403
  br i1 %406, label %407, label %420

407:                                              ; preds = %399
  %408 = getelementptr inbounds %struct.Base, ptr %4, i64 0, i32 4
  %409 = load i32, ptr %408, align 8, !tbaa !71
  %410 = and i32 %409, 1
  %411 = icmp ne i32 %410, 0
  %412 = and i1 %202, %411
  br i1 %412, label %413, label %420

413:                                              ; preds = %407
  %414 = getelementptr inbounds %struct.Object, ptr %150, i64 0, i32 2
  %415 = load ptr, ptr %414, align 8, !tbaa !308
  %416 = icmp eq ptr %415, null
  br i1 %416, label %417, label %420

417:                                              ; preds = %413
  %418 = getelementptr i8, ptr %2, i64 345
  %419 = load i8, ptr %418, align 1, !tbaa !73
  call fastcc void @draw_mesh_object_outline(i8 %419, ptr noundef nonnull %150, ptr noundef nonnull %166)
  br label %420

420:                                              ; preds = %417, %413, %407, %399
  %421 = getelementptr inbounds %struct.Mesh, ptr %152, i64 0, i32 38
  %422 = load i16, ptr %421, align 2, !tbaa !318
  %423 = lshr i16 %422, 2
  %424 = and i16 %423, 1
  %425 = zext i16 %424 to i32
  call void @glLightModeli(i32 noundef 2898, i32 noundef %425) #13
  call void @glEnable(i32 noundef 2896) #13
  %426 = load i16, ptr %210, align 8, !tbaa !64
  %427 = and i16 %426, 4
  %428 = icmp eq i16 %427, 0
  %429 = select i1 %428, i32 2305, i32 2304
  call void @glFrontFace(i32 noundef %429) #13
  %430 = getelementptr inbounds %struct.Object, ptr %150, i64 0, i32 2
  %431 = load ptr, ptr %430, align 8, !tbaa !308
  %432 = icmp eq ptr %431, null
  br i1 %432, label %465, label %433

433:                                              ; preds = %420
  %434 = call ptr @BKE_paint_get_active(ptr noundef nonnull %0) #13
  %435 = icmp eq ptr %434, null
  br i1 %435, label %465, label %436

436:                                              ; preds = %433
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %19) #13
  %437 = getelementptr inbounds %struct.Paint, ptr %434, i64 0, i32 4
  %438 = load i32, ptr %437, align 4, !tbaa !309
  %439 = and i32 %438, 2
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %446, label %441

441:                                              ; preds = %436
  %442 = getelementptr inbounds %struct.RegionView3D, ptr %3, i64 0, i32 32
  %443 = load i16, ptr %442, align 2, !tbaa !56
  %444 = and i16 %443, 8
  %445 = icmp ne i16 %444, 0
  br label %446

446:                                              ; preds = %441, %436
  %447 = phi i1 [ false, %436 ], [ %445, %441 ]
  %448 = zext i1 %447 to i8
  %449 = load ptr, ptr %430, align 8, !tbaa !308
  %450 = getelementptr inbounds %struct.SculptSession, ptr %449, i64 0, i32 21
  %451 = load i8, ptr %450, align 8, !tbaa !311
  %452 = icmp eq i8 %451, 0
  br i1 %452, label %461, label %453

453:                                              ; preds = %446
  %454 = getelementptr inbounds %struct.ARegion, ptr %1, i64 0, i32 14
  %455 = load i16, ptr %454, align 4, !tbaa !313
  %456 = and i16 %455, 2
  %457 = icmp eq i16 %456, 0
  br i1 %457, label %461, label %458

458:                                              ; preds = %453
  call void @ED_sculpt_redraw_planes_get(ptr noundef nonnull %19, ptr noundef nonnull %1, ptr noundef %3, ptr noundef nonnull %150) #13
  %459 = load ptr, ptr %430, align 8, !tbaa !308
  %460 = getelementptr inbounds %struct.SculptSession, ptr %459, i64 0, i32 21
  store i8 0, ptr %460, align 8, !tbaa !311
  br label %461

461:                                              ; preds = %458, %453, %446
  %462 = phi ptr [ %19, %458 ], [ null, %453 ], [ null, %446 ]
  %463 = getelementptr inbounds %struct.DerivedMesh, ptr %166, i64 0, i32 86
  %464 = load ptr, ptr %463, align 8, !tbaa !314
  call void %464(ptr noundef nonnull %166, ptr noundef %462, i8 noundef zeroext %448, ptr noundef nonnull @GPU_enable_material) #13
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %19) #13
  br label %468

465:                                              ; preds = %433, %420
  %466 = getelementptr inbounds %struct.DerivedMesh, ptr %166, i64 0, i32 86
  %467 = load ptr, ptr %466, align 8, !tbaa !314
  call void %467(ptr noundef nonnull %166, ptr noundef null, i8 noundef zeroext 0, ptr noundef nonnull @GPU_enable_material) #13
  br label %468

468:                                              ; preds = %465, %461
  call void @GPU_disable_material() #13
  call void @glFrontFace(i32 noundef 2305) #13
  call void @glDisable(i32 noundef 2896) #13
  call void @glLightModeli(i32 noundef 2898, i32 noundef 0) #13
  %469 = load ptr, ptr %430, align 8, !tbaa !308
  %470 = icmp eq ptr %469, null
  br i1 %470, label %471, label %483

471:                                              ; preds = %468
  %472 = load i16, ptr %30, align 2, !tbaa !15
  %473 = and i16 %472, 4
  %474 = icmp eq i16 %473, 0
  br i1 %474, label %475, label %483

475:                                              ; preds = %471
  %476 = and i16 %7, 2
  %477 = icmp eq i16 %476, 0
  br i1 %477, label %478, label %479

478:                                              ; preds = %475
  call void @glColor3ubv(ptr noundef %6) #13
  br label %479

479:                                              ; preds = %478, %475
  %480 = getelementptr inbounds %struct.DerivedMesh, ptr %166, i64 0, i32 85
  %481 = load ptr, ptr %480, align 8, !tbaa !316
  call void %481(ptr noundef nonnull %166) #13
  br label %483

482:                                              ; preds = %364
  call void @draw_mesh_paint(ptr noundef nonnull %2, ptr noundef %3, ptr noundef nonnull %150, ptr noundef nonnull %166, i32 noundef %193) #13
  br i1 %181, label %524, label %550

483:                                              ; preds = %479, %471, %468, %395, %371, %364, %361, %353, %349, %347, %232, %224, %220
  %484 = icmp eq i32 %203, 0
  br i1 %484, label %523, label %485

485:                                              ; preds = %483, %235
  %486 = phi i32 [ %203, %483 ], [ 1, %235 ]
  %487 = load i16, ptr %30, align 2, !tbaa !15
  %488 = and i16 %487, 4
  %489 = icmp eq i16 %488, 0
  br i1 %489, label %494, label %490

490:                                              ; preds = %485
  %491 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 24
  %492 = load i16, ptr %491, align 8, !tbaa !5
  %493 = icmp slt i16 %492, 3
  br i1 %493, label %494, label %523

494:                                              ; preds = %490, %485
  %495 = and i16 %7, 2
  %496 = icmp eq i16 %495, 0
  br i1 %496, label %497, label %505

497:                                              ; preds = %494
  br i1 %181, label %498, label %504

498:                                              ; preds = %497
  %499 = getelementptr inbounds %struct.Object, ptr %150, i64 0, i32 27
  %500 = load i32, ptr %499, align 8, !tbaa !40
  %501 = and i32 %500, 32
  %502 = icmp eq i32 %501, 0
  br i1 %502, label %504, label %503

503:                                              ; preds = %498
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %13) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %14) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %15) #13
  call void @rgb_uchar_to_float(ptr noundef nonnull %13, ptr noundef %6) #13
  call void @UI_GetThemeColor3fv(i32 noundef 2, ptr noundef nonnull %14) #13
  call void @interp_v3_v3v3(ptr noundef nonnull %15, ptr noundef nonnull %14, ptr noundef nonnull %13, float noundef nofpclass(nan inf) 0x3FC3333340000000) #13
  call void @glColor3fv(ptr noundef nonnull %15) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %15) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %14) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %13) #13
  br label %505

504:                                              ; preds = %498, %497
  call void @glColor3ubv(ptr noundef %6) #13
  br label %505

505:                                              ; preds = %504, %503, %494
  %506 = icmp ne i8 %5, 2
  %507 = icmp eq i32 %486, 2
  %508 = and i1 %506, %507
  br i1 %508, label %509, label %510

509:                                              ; preds = %505
  call void @ED_view3d_polygon_offset(ptr noundef %3, float noundef nofpclass(nan inf) 1.000000e+00) #13
  call void @glDepthMask(i8 noundef zeroext 0) #13
  br label %510

510:                                              ; preds = %509, %505
  %511 = getelementptr inbounds %struct.DerivedMesh, ptr %166, i64 0, i32 84
  %512 = load ptr, ptr %511, align 8, !tbaa !266
  %513 = icmp eq i8 %5, 2
  %514 = icmp eq i32 %209, 0
  %515 = select i1 %513, i1 true, i1 %514
  %516 = zext i1 %515 to i8
  %517 = getelementptr inbounds %struct.Object, ptr %150, i64 0, i32 86
  %518 = load i16, ptr %517, align 4, !tbaa !74
  %519 = lshr i16 %518, 8
  %520 = trunc i16 %519 to i8
  %521 = and i8 %520, 1
  call void %512(ptr noundef nonnull %166, i8 noundef zeroext %516, i8 noundef zeroext %521) #13
  br i1 %508, label %522, label %523

522:                                              ; preds = %510
  call void @glDepthMask(i8 noundef zeroext 1) #13
  call void @ED_view3d_polygon_offset(ptr noundef %3, float noundef nofpclass(nan inf) 0.000000e+00) #13
  br i1 %181, label %524, label %550

523:                                              ; preds = %510, %490, %483
  br i1 %181, label %524, label %550

524:                                              ; preds = %523, %522, %482
  %525 = call zeroext i8 @BKE_paint_select_vert_test(ptr noundef nonnull %150) #13
  %526 = icmp eq i8 %525, 0
  br i1 %526, label %550, label %527

527:                                              ; preds = %524
  %528 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 28
  %529 = load i16, ptr %528, align 8, !tbaa !89
  %530 = and i16 %529, 4096
  call void @glColor3f(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00) #13
  %531 = call fast nofpclass(nan inf) float @UI_GetThemeValuef(i32 noundef 36) #13
  call void @glPointSize(float noundef nofpclass(nan inf) %531) #13
  %532 = icmp eq i16 %530, 0
  br i1 %532, label %533, label %534

533:                                              ; preds = %527
  call void @glDisable(i32 noundef 2929) #13
  br label %535

534:                                              ; preds = %527
  call void @ED_view3d_polygon_offset(ptr noundef %3, float noundef nofpclass(nan inf) 1.000000e+00) #13
  br label %535

535:                                              ; preds = %534, %533
  %536 = load ptr, ptr %151, align 8, !tbaa !90
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %9) #13
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %10) #13
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(3) %10, i8 0, i64 3, i1 false)
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %11) #13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(3) %11, ptr noundef nonnull align 1 dereferenceable(3) @__const.drawSelectedVertices.sel_col, i64 3, i1 false)
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %12) #13
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(3) %12, i8 -1, i64 3, i1 false)
  %537 = getelementptr inbounds %struct.Mesh, ptr %536, i64 0, i32 15
  %538 = load ptr, ptr %537, align 8, !tbaa !319
  store ptr %538, ptr %9, align 8, !tbaa !320
  %539 = call i32 @BKE_mesh_mselect_active_get(ptr noundef %536, i32 noundef 0) #13
  %540 = getelementptr inbounds %struct.drawDMVertSel_userData, ptr %9, i64 0, i32 1
  store i32 %539, ptr %540, align 8, !tbaa !322
  %541 = getelementptr inbounds %struct.drawDMVertSel_userData, ptr %9, i64 0, i32 3
  store i8 -1, ptr %541, align 8, !tbaa !323
  %542 = getelementptr inbounds %struct.drawDMVertSel_userData, ptr %9, i64 0, i32 2
  store ptr %10, ptr %542, align 8, !tbaa !49
  %543 = getelementptr inbounds %struct.drawDMVertSel_userData, ptr %9, i64 0, i32 2, i64 1
  store ptr %11, ptr %543, align 8, !tbaa !49
  %544 = getelementptr inbounds %struct.drawDMVertSel_userData, ptr %9, i64 0, i32 2, i64 2
  store ptr %12, ptr %544, align 8, !tbaa !49
  call void @glBegin(i32 noundef 0) #13
  %545 = getelementptr inbounds %struct.DerivedMesh, ptr %166, i64 0, i32 71
  %546 = load ptr, ptr %545, align 8, !tbaa !324
  call void %546(ptr noundef nonnull %166, ptr noundef nonnull @drawSelectedVertices__mapFunc, ptr noundef nonnull %9, i32 noundef 0) #13
  call void @glEnd() #13
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %12) #13
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %11) #13
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %10) #13
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %9) #13
  br i1 %532, label %547, label %548

547:                                              ; preds = %535
  call void @glEnable(i32 noundef 2929) #13
  br label %549

548:                                              ; preds = %535
  call void @ED_view3d_polygon_offset(ptr noundef %3, float noundef nofpclass(nan inf) 0.000000e+00) #13
  br label %549

549:                                              ; preds = %548, %547
  call void @glPointSize(float noundef nofpclass(nan inf) 1.000000e+00) #13
  br label %550

550:                                              ; preds = %549, %524, %523, %522, %482
  %551 = getelementptr inbounds %struct.DerivedMesh, ptr %166, i64 0, i32 95
  %552 = load ptr, ptr %551, align 8, !tbaa !303
  call void %552(ptr noundef nonnull %166) #13
  br label %553

553:                                              ; preds = %179, %550
  call void @GPU_end_object_materials() #13
  %554 = getelementptr inbounds %struct.Mesh, ptr %27, i64 0, i32 26
  %555 = load i32, ptr %554, align 8, !tbaa !325
  %556 = icmp eq i32 %555, 0
  %557 = zext i1 %556 to i8
  br label %558

558:                                              ; preds = %553, %115, %106
  %559 = phi i8 [ 0, %106 ], [ 0, %115 ], [ %557, %553 ]
  %560 = and i16 %7, 1
  %561 = icmp eq i16 %560, 0
  br i1 %561, label %562, label %598

562:                                              ; preds = %558
  %563 = getelementptr inbounds %struct.Base, ptr %4, i64 0, i32 4
  %564 = load i32, ptr %563, align 8, !tbaa !71
  %565 = and i32 %564, 512
  %566 = icmp eq i32 %565, 0
  br i1 %566, label %567, label %598

567:                                              ; preds = %562
  %568 = load i16, ptr %30, align 2, !tbaa !15
  %569 = and i16 %568, 64
  %570 = icmp eq i16 %569, 0
  br i1 %570, label %571, label %598

571:                                              ; preds = %567
  %572 = load i8, ptr %20, align 1, !tbaa !50
  %573 = icmp eq i8 %572, 0
  %574 = getelementptr inbounds %struct.Object, ptr %23, i64 0, i32 86
  %575 = load i16, ptr %574, align 4, !tbaa !74
  br i1 %573, label %583, label %576

576:                                              ; preds = %571
  %577 = and i16 %575, 64
  %578 = icmp eq i16 %577, 0
  br i1 %578, label %581, label %579

579:                                              ; preds = %576
  %580 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 46
  br label %596

581:                                              ; preds = %576
  %582 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 44
  br label %596

583:                                              ; preds = %571
  %584 = and i16 %575, 192
  %585 = icmp eq i16 %584, 192
  br i1 %585, label %586, label %598

586:                                              ; preds = %583
  %587 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 49
  %588 = load i8, ptr %587, align 2, !tbaa !72
  %589 = icmp eq i8 %588, 0
  br i1 %589, label %590, label %598

590:                                              ; preds = %586
  %591 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 48
  %592 = load i8, ptr %591, align 1, !tbaa !73
  %593 = icmp eq i8 %592, 0
  br i1 %593, label %594, label %598

594:                                              ; preds = %590
  %595 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 45
  br label %596

596:                                              ; preds = %594, %579, %581
  %597 = phi ptr [ %582, %581 ], [ %580, %579 ], [ %595, %594 ]
  call void @ED_view3d_after_add(ptr noundef nonnull %597, ptr noundef nonnull %4, i16 noundef signext %7) #13
  br label %598

598:                                              ; preds = %596, %586, %590, %583, %567, %562, %558
  %599 = load i16, ptr %30, align 2, !tbaa !15
  %600 = and i16 %599, 1024
  %601 = icmp eq i16 %600, 0
  br i1 %601, label %603, label %602

602:                                              ; preds = %598
  call void @glDisable(i32 noundef 2884) #13
  br label %603

603:                                              ; preds = %43, %598, %602
  %604 = phi i8 [ %559, %602 ], [ %559, %598 ], [ 1, %43 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %20) #13
  ret i8 %604
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @draw_editfont(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr nocapture noundef readonly %3, i8 noundef zeroext %4, i16 noundef signext %5, ptr noundef %6) unnamed_addr #0 {
  %8 = alloca [3 x float], align 8
  %9 = alloca [3 x float], align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [3 x float], align 8
  %13 = alloca [2 x [2 x float]], align 16
  %14 = getelementptr inbounds %struct.Base, ptr %3, i64 0, i32 7
  %15 = load ptr, ptr %14, align 8, !tbaa !38
  %16 = getelementptr inbounds %struct.Object, ptr %15, i64 0, i32 19
  %17 = load ptr, ptr %16, align 8, !tbaa !90
  %18 = getelementptr inbounds %struct.Curve, ptr %17, i64 0, i32 53
  %19 = load ptr, ptr %18, align 8, !tbaa !91
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %8) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %9) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #13
  %20 = getelementptr inbounds %struct.EditFont, ptr %19, i64 0, i32 5
  tail call void @cpack(i32 noundef 0) #13
  tail call void @ED_view3d_polygon_offset(ptr noundef %2, float noundef nofpclass(nan inf) -1.000000e+00) #13
  tail call void @set_inverted_drawing(i32 noundef 1) #13
  tail call void @glBegin(i32 noundef 7) #13
  tail call void @glVertex2fv(ptr noundef nonnull %20) #13
  %21 = getelementptr inbounds %struct.EditFont, ptr %19, i64 0, i32 5, i64 1
  tail call void @glVertex2fv(ptr noundef nonnull %21) #13
  %22 = getelementptr inbounds %struct.EditFont, ptr %19, i64 0, i32 5, i64 2
  tail call void @glVertex2fv(ptr noundef nonnull %22) #13
  %23 = getelementptr inbounds %struct.EditFont, ptr %19, i64 0, i32 5, i64 3
  tail call void @glVertex2fv(ptr noundef nonnull %23) #13
  tail call void @glEnd() #13
  tail call void @set_inverted_drawing(i32 noundef 0) #13
  tail call void @ED_view3d_polygon_offset(ptr noundef %2, float noundef nofpclass(nan inf) 0.000000e+00) #13
  %24 = getelementptr inbounds %struct.Curve, ptr %17, i64 0, i32 23
  %25 = load i32, ptr %24, align 4, !tbaa !112
  %26 = and i32 %25, 512
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %7
  tail call void @cpack(i32 noundef 16777215) #13
  tail call void @set_inverted_drawing(i32 noundef 1) #13
  %29 = tail call fastcc zeroext i8 @drawDispList(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull %3, i8 noundef zeroext 2, i16 noundef signext %5, ptr noundef %6), !range !96
  tail call void @set_inverted_drawing(i32 noundef 0) #13
  br label %32

30:                                               ; preds = %7
  %31 = tail call fastcc zeroext i8 @drawDispList(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull %3, i8 noundef zeroext %4, i16 noundef signext %5, ptr noundef %6), !range !96
  br label %32

32:                                               ; preds = %30, %28
  %33 = getelementptr inbounds %struct.Curve, ptr %17, i64 0, i32 46
  %34 = load float, ptr %33, align 8, !tbaa !326
  %35 = fcmp fast une float %34, 0.000000e+00
  br i1 %35, label %36, label %60

36:                                               ; preds = %32
  tail call void @UI_ThemeColor(i32 noundef 27) #13
  %37 = getelementptr inbounds %struct.Object, ptr %15, i64 0, i32 35
  %38 = getelementptr inbounds %struct.Object, ptr %15, i64 0, i32 35, i64 2
  %39 = load float, ptr %38, align 4, !tbaa !44
  %40 = getelementptr inbounds float, ptr %8, i64 2
  store float %39, ptr %40, align 8, !tbaa !44
  %41 = getelementptr inbounds float, ptr %9, i64 1
  %42 = getelementptr inbounds float, ptr %9, i64 2
  store float %39, ptr %42, align 4, !tbaa !44
  %43 = load float, ptr %33, align 8, !tbaa !326
  %44 = getelementptr inbounds %struct.Curve, ptr %17, i64 0, i32 38
  %45 = load float, ptr %44, align 8, !tbaa !327
  %46 = getelementptr inbounds %struct.Curve, ptr %17, i64 0, i32 40
  %47 = load float, ptr %46, align 8, !tbaa !328
  %48 = fmul fast float %47, %45
  %49 = load <2 x float>, ptr %37, align 4, !tbaa !44
  %50 = insertelement <2 x float> poison, float %43, i64 0
  %51 = insertelement <2 x float> %50, float %48, i64 1
  %52 = fadd fast <2 x float> %49, %51
  %53 = extractelement <2 x float> %52, i64 0
  store float %53, ptr %9, align 4, !tbaa !44
  store <2 x float> %52, ptr %8, align 8, !tbaa !44
  %54 = getelementptr inbounds %struct.Curve, ptr %17, i64 0, i32 34
  %55 = load i16, ptr %54, align 8, !tbaa !329
  %56 = sitofp i16 %55 to float
  %57 = fmul fast float %48, %56
  %58 = extractelement <2 x float> %49, i64 1
  %59 = fsub fast float %58, %57
  store float %59, ptr %41, align 4, !tbaa !44
  tail call void @setlinestyle(i32 noundef 3) #13
  tail call void @glBegin(i32 noundef 3) #13
  call void @glVertex2fv(ptr noundef nonnull %8) #13
  call void @glVertex2fv(ptr noundef nonnull %9) #13
  call void @glEnd() #13
  call void @setlinestyle(i32 noundef 0) #13
  br label %60

60:                                               ; preds = %36, %32
  call void @setlinestyle(i32 noundef 3) #13
  %61 = getelementptr inbounds %struct.Curve, ptr %17, i64 0, i32 60
  %62 = load i32, ptr %61, align 8, !tbaa !330
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %122

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.Curve, ptr %17, i64 0, i32 59
  %66 = getelementptr inbounds %struct.Curve, ptr %17, i64 0, i32 61
  %67 = getelementptr inbounds %struct.Curve, ptr %17, i64 0, i32 44
  %68 = getelementptr inbounds %struct.Curve, ptr %17, i64 0, i32 45
  %69 = getelementptr inbounds %struct.Curve, ptr %17, i64 0, i32 40
  %70 = getelementptr inbounds [3 x float], ptr %8, i64 0, i64 1
  %71 = getelementptr inbounds [3 x float], ptr %8, i64 0, i64 2
  br label %72

72:                                               ; preds = %64, %117
  %73 = phi i32 [ %62, %64 ], [ %118, %117 ]
  %74 = phi i64 [ 0, %64 ], [ %119, %117 ]
  %75 = load ptr, ptr %65, align 8, !tbaa !331
  %76 = getelementptr inbounds %struct.TextBox, ptr %75, i64 %74, i32 2
  %77 = load float, ptr %76, align 4, !tbaa !332
  %78 = fcmp fast une float %77, 0.000000e+00
  br i1 %78, label %79, label %117

79:                                               ; preds = %72
  %80 = load i32, ptr %66, align 4, !tbaa !334
  %81 = add nsw i32 %80, -1
  %82 = zext i32 %81 to i64
  %83 = icmp eq i64 %74, %82
  %84 = select i1 %83, i32 29, i32 25
  call void @UI_ThemeColor(i32 noundef %84) #13
  %85 = load float, ptr %67, align 8, !tbaa !335
  %86 = load ptr, ptr %65, align 8, !tbaa !331
  %87 = getelementptr inbounds %struct.TextBox, ptr %86, i64 %74
  %88 = load float, ptr %87, align 4, !tbaa !336
  %89 = fadd fast float %88, %85
  store float %89, ptr %8, align 8, !tbaa !44
  %90 = load float, ptr %68, align 4, !tbaa !337
  %91 = getelementptr inbounds %struct.TextBox, ptr %86, i64 %74, i32 1
  %92 = load float, ptr %91, align 4, !tbaa !338
  %93 = fadd fast float %92, %90
  %94 = load float, ptr %69, align 8, !tbaa !328
  %95 = fadd fast float %93, %94
  store float %95, ptr %70, align 4, !tbaa !44
  store float 0x3F50624DE0000000, ptr %71, align 8, !tbaa !44
  call void @glBegin(i32 noundef 3) #13
  call void @glVertex3fv(ptr noundef nonnull %8) #13
  %96 = load ptr, ptr %65, align 8, !tbaa !331
  %97 = getelementptr inbounds %struct.TextBox, ptr %96, i64 %74, i32 2
  %98 = load float, ptr %97, align 4, !tbaa !332
  %99 = load float, ptr %8, align 8, !tbaa !44
  %100 = fadd fast float %99, %98
  store float %100, ptr %8, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %8) #13
  %101 = load ptr, ptr %65, align 8, !tbaa !331
  %102 = getelementptr inbounds %struct.TextBox, ptr %101, i64 %74, i32 3
  %103 = load float, ptr %102, align 4, !tbaa !339
  %104 = load float, ptr %70, align 4, !tbaa !44
  %105 = fsub fast float %104, %103
  store float %105, ptr %70, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %8) #13
  %106 = load ptr, ptr %65, align 8, !tbaa !331
  %107 = getelementptr inbounds %struct.TextBox, ptr %106, i64 %74, i32 2
  %108 = load float, ptr %107, align 4, !tbaa !332
  %109 = load float, ptr %8, align 8, !tbaa !44
  %110 = fsub fast float %109, %108
  store float %110, ptr %8, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %8) #13
  %111 = load ptr, ptr %65, align 8, !tbaa !331
  %112 = getelementptr inbounds %struct.TextBox, ptr %111, i64 %74, i32 3
  %113 = load float, ptr %112, align 4, !tbaa !339
  %114 = load float, ptr %70, align 4, !tbaa !44
  %115 = fadd fast float %114, %113
  store float %115, ptr %70, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %8) #13
  call void @glEnd() #13
  %116 = load i32, ptr %61, align 8, !tbaa !330
  br label %117

117:                                              ; preds = %72, %79
  %118 = phi i32 [ %73, %72 ], [ %116, %79 ]
  %119 = add nuw nsw i64 %74, 1
  %120 = sext i32 %118 to i64
  %121 = icmp slt i64 %119, %120
  br i1 %121, label %72, label %122, !llvm.loop !340

122:                                              ; preds = %117, %60
  call void @setlinestyle(i32 noundef 0) #13
  %123 = call i32 @BKE_vfont_select_get(ptr noundef %15, ptr noundef nonnull %10, ptr noundef nonnull %11) #13
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %215, label %125

125:                                              ; preds = %122
  %126 = getelementptr inbounds %struct.EditFont, ptr %19, i64 0, i32 4
  %127 = load ptr, ptr %126, align 8, !tbaa !341
  %128 = icmp eq ptr %127, null
  br i1 %128, label %215, label %129

129:                                              ; preds = %125
  %130 = load i32, ptr %11, align 4, !tbaa !47
  %131 = load i32, ptr %10, align 4, !tbaa !47
  %132 = sub nsw i32 %130, %131
  call void @cpack(i32 noundef 16777215) #13
  call void @set_inverted_drawing(i32 noundef 1) #13
  %133 = icmp slt i32 %132, 0
  br i1 %133, label %214, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds [3 x float], ptr %12, i64 0, i64 2
  %136 = getelementptr inbounds float, ptr %12, i64 1
  %137 = zext i32 %132 to i64
  %138 = add i32 %130, 1
  %139 = sub i32 %138, %131
  %140 = zext i32 %139 to i64
  br label %141

141:                                              ; preds = %134, %211
  %142 = phi i64 [ 0, %134 ], [ %212, %211 ]
  %143 = load ptr, ptr %126, align 8, !tbaa !341
  %144 = getelementptr inbounds %struct.EditFontSelBox, ptr %143, i64 %142
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %12) #13
  %145 = icmp eq i64 %142, %137
  br i1 %145, label %161, label %146

146:                                              ; preds = %141
  %147 = add nuw nsw i64 %142, 1
  %148 = getelementptr inbounds %struct.EditFontSelBox, ptr %143, i64 %147, i32 1
  %149 = load float, ptr %148, align 4, !tbaa !343
  %150 = getelementptr inbounds %struct.EditFontSelBox, ptr %143, i64 %142, i32 1
  %151 = load float, ptr %150, align 4, !tbaa !343
  %152 = fcmp fast oeq float %149, %151
  br i1 %152, label %153, label %158

153:                                              ; preds = %146
  %154 = getelementptr inbounds %struct.EditFontSelBox, ptr %143, i64 %147
  %155 = load float, ptr %154, align 4, !tbaa !345
  %156 = load float, ptr %144, align 4, !tbaa !345
  %157 = fsub fast float %155, %156
  br label %164

158:                                              ; preds = %146
  %159 = getelementptr inbounds %struct.EditFontSelBox, ptr %143, i64 %142, i32 2
  %160 = load float, ptr %159, align 4, !tbaa !346
  br label %164

161:                                              ; preds = %141
  %162 = getelementptr inbounds %struct.EditFontSelBox, ptr %143, i64 %137, i32 2
  %163 = load float, ptr %162, align 4, !tbaa !346
  br label %164

164:                                              ; preds = %153, %158, %161
  %165 = phi float [ %157, %153 ], [ %160, %158 ], [ %163, %161 ]
  store float 0x3F50624DE0000000, ptr %135, align 8, !tbaa !44
  call void @glBegin(i32 noundef 7) #13
  %166 = getelementptr inbounds %struct.EditFontSelBox, ptr %143, i64 %142, i32 4
  %167 = load float, ptr %166, align 4, !tbaa !347
  %168 = fcmp fast oeq float %167, 0.000000e+00
  br i1 %168, label %169, label %185

169:                                              ; preds = %164
  %170 = getelementptr inbounds %struct.EditFontSelBox, ptr %143, i64 %142, i32 1
  %171 = load <2 x float>, ptr %144, align 4, !tbaa !44
  store <2 x float> %171, ptr %12, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %12) #13
  %172 = load float, ptr %144, align 4, !tbaa !345
  %173 = fadd fast float %172, %165
  %174 = load float, ptr %170, align 4, !tbaa !343
  store float %173, ptr %12, align 8, !tbaa !44
  store float %174, ptr %136, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %12) #13
  %175 = load float, ptr %144, align 4, !tbaa !345
  %176 = fadd fast float %175, %165
  %177 = load float, ptr %170, align 4, !tbaa !343
  %178 = getelementptr inbounds %struct.EditFontSelBox, ptr %143, i64 %142, i32 3
  %179 = load float, ptr %178, align 4, !tbaa !348
  %180 = fadd fast float %179, %177
  store float %176, ptr %12, align 8, !tbaa !44
  store float %180, ptr %136, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %12) #13
  %181 = load float, ptr %144, align 4, !tbaa !345
  %182 = load float, ptr %170, align 4, !tbaa !343
  %183 = load float, ptr %178, align 4, !tbaa !348
  %184 = fadd fast float %183, %182
  store float %181, ptr %12, align 8, !tbaa !44
  store float %184, ptr %136, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %12) #13
  br label %211

185:                                              ; preds = %164
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13) #13
  call void @angle_to_mat2(ptr noundef nonnull %13, float noundef nofpclass(nan inf) %167) #13
  %186 = load float, ptr %144, align 4, !tbaa !345
  %187 = getelementptr inbounds %struct.EditFontSelBox, ptr %143, i64 %142, i32 1
  %188 = load float, ptr %187, align 4, !tbaa !343
  store float %186, ptr %12, align 8, !tbaa !44
  store float %188, ptr %136, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %12) #13
  store float %165, ptr %12, align 8, !tbaa !44
  store float 0.000000e+00, ptr %136, align 4, !tbaa !44
  call void @mul_m2v2(ptr noundef nonnull %13, ptr noundef nonnull %12) #13
  %189 = load float, ptr %144, align 4, !tbaa !44
  %190 = load float, ptr %12, align 8, !tbaa !44
  %191 = fadd fast float %190, %189
  store float %191, ptr %12, align 8, !tbaa !44
  %192 = getelementptr inbounds float, ptr %144, i64 1
  %193 = load float, ptr %192, align 4, !tbaa !44
  %194 = load float, ptr %136, align 4, !tbaa !44
  %195 = fadd fast float %194, %193
  store float %195, ptr %136, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %12) #13
  %196 = getelementptr inbounds %struct.EditFontSelBox, ptr %143, i64 %142, i32 3
  %197 = load float, ptr %196, align 4, !tbaa !348
  store float %165, ptr %12, align 8, !tbaa !44
  store float %197, ptr %136, align 4, !tbaa !44
  call void @mul_m2v2(ptr noundef nonnull %13, ptr noundef nonnull %12) #13
  %198 = load float, ptr %144, align 4, !tbaa !44
  %199 = load float, ptr %12, align 8, !tbaa !44
  %200 = fadd fast float %199, %198
  store float %200, ptr %12, align 8, !tbaa !44
  %201 = load float, ptr %192, align 4, !tbaa !44
  %202 = load float, ptr %136, align 4, !tbaa !44
  %203 = fadd fast float %202, %201
  store float %203, ptr %136, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %12) #13
  %204 = load float, ptr %196, align 4, !tbaa !348
  store float 0.000000e+00, ptr %12, align 8, !tbaa !44
  store float %204, ptr %136, align 4, !tbaa !44
  call void @mul_m2v2(ptr noundef nonnull %13, ptr noundef nonnull %12) #13
  %205 = load float, ptr %144, align 4, !tbaa !44
  %206 = load float, ptr %12, align 8, !tbaa !44
  %207 = fadd fast float %206, %205
  store float %207, ptr %12, align 8, !tbaa !44
  %208 = load float, ptr %192, align 4, !tbaa !44
  %209 = load float, ptr %136, align 4, !tbaa !44
  %210 = fadd fast float %209, %208
  store float %210, ptr %136, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %12) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #13
  br label %211

211:                                              ; preds = %185, %169
  call void @glEnd() #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %12) #13
  %212 = add nuw nsw i64 %142, 1
  %213 = icmp eq i64 %212, %140
  br i1 %213, label %214, label %141, !llvm.loop !349

214:                                              ; preds = %211, %129
  call void @set_inverted_drawing(i32 noundef 0) #13
  br label %215

215:                                              ; preds = %214, %125, %122
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %9) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %8) #13
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @ensure_curve_cache(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 118
  %4 = load ptr, ptr %3, align 8, !tbaa !113
  %5 = icmp eq ptr %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = load ptr, ptr %4, align 8, !tbaa !350
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %23

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.CurveCache, ptr %4, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !351
  %12 = icmp eq ptr %11, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %2, %9
  %14 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 3
  %15 = load i16, ptr %14, align 8, !tbaa !75
  %16 = sext i16 %15 to i32
  switch i32 %16, label %23 [
    i32 2, label %17
    i32 3, label %17
    i32 4, label %17
    i32 5, label %18
    i32 22, label %22
  ]

17:                                               ; preds = %13, %13, %13
  tail call void @BKE_displist_make_curveTypes(ptr noundef %0, ptr noundef nonnull %1, i8 noundef zeroext 0) #13
  br label %23

18:                                               ; preds = %13
  %19 = load ptr, ptr @G, align 8, !tbaa !352
  %20 = getelementptr inbounds %struct.Main, ptr %19, i64 0, i32 46
  %21 = load ptr, ptr %20, align 8, !tbaa !353
  tail call void @BKE_displist_make_mball(ptr noundef %21, ptr noundef %0, ptr noundef nonnull %1) #13
  br label %23

22:                                               ; preds = %13
  tail call void @BKE_lattice_modifiers_calc(ptr noundef %0, ptr noundef nonnull %1) #13
  br label %23

23:                                               ; preds = %6, %17, %18, %22, %13, %9
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @draw_bounding_volume(ptr noundef %0, i8 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca %struct.BoundBox, align 4
  %4 = alloca [3 x float], align 4
  %5 = alloca [3 x float], align 4
  %6 = alloca [8 x [3 x float]], align 16
  %7 = alloca [3 x float], align 8
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %3) #13
  %8 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 3
  %9 = load i16, ptr %8, align 8, !tbaa !75
  switch i16 %9, label %22 [
    i16 1, label %10
    i16 2, label %12
    i16 3, label %12
    i16 4, label %12
    i16 5, label %14
    i16 25, label %20
  ]

10:                                               ; preds = %2
  %11 = tail call ptr @BKE_mesh_boundbox_get(ptr noundef nonnull %0) #13
  br label %23

12:                                               ; preds = %2, %2, %2
  %13 = tail call ptr @BKE_curve_boundbox_get(ptr noundef nonnull %0) #13
  br label %23

14:                                               ; preds = %2
  %15 = tail call zeroext i8 @BKE_mball_is_basis(ptr noundef nonnull %0) #13
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %67, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 15
  %19 = load ptr, ptr %18, align 8, !tbaa !95
  br label %23

20:                                               ; preds = %2
  %21 = tail call ptr @BKE_armature_boundbox_get(ptr noundef nonnull %0) #13
  br label %23

22:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(12) %4, ptr noundef nonnull align 4 dereferenceable(12) @__const.draw_bounding_volume.min, i64 12, i1 false)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(12) %5, ptr noundef nonnull align 4 dereferenceable(12) @__const.draw_bounding_volume.max, i64 12, i1 false)
  call void @BKE_boundbox_init_from_minmax(ptr noundef nonnull %3, ptr noundef nonnull %4, ptr noundef nonnull %5) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #13
  br label %26

23:                                               ; preds = %12, %20, %17, %10
  %24 = phi ptr [ %11, %10 ], [ %13, %12 ], [ %19, %17 ], [ %21, %20 ]
  %25 = icmp eq ptr %24, null
  br i1 %25, label %67, label %26

26:                                               ; preds = %22, %23
  %27 = phi ptr [ %3, %22 ], [ %24, %23 ]
  %28 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 99
  %29 = load i32, ptr %28, align 8, !tbaa !260
  %30 = and i32 %29, 2048
  %31 = icmp eq i32 %30, 0
  %32 = icmp eq i8 %1, 0
  br i1 %31, label %64, label %33

33:                                               ; preds = %26
  br i1 %32, label %34, label %63

34:                                               ; preds = %33
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %6) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #13
  call void @BKE_boundbox_calc_size_aabb(ptr noundef nonnull %27, ptr noundef nonnull %7) #13
  %35 = getelementptr inbounds [8 x [3 x float]], ptr %6, i64 0, i64 3
  %36 = getelementptr inbounds [8 x [3 x float]], ptr %6, i64 0, i64 2
  %37 = getelementptr inbounds [8 x [3 x float]], ptr %6, i64 0, i64 1
  %38 = getelementptr inbounds [8 x [3 x float]], ptr %6, i64 0, i64 7
  %39 = getelementptr inbounds [8 x [3 x float]], ptr %6, i64 0, i64 6
  %40 = getelementptr inbounds [8 x [3 x float]], ptr %6, i64 0, i64 5
  %41 = getelementptr inbounds [8 x [3 x float]], ptr %6, i64 0, i64 4
  %42 = getelementptr inbounds [8 x [3 x float]], ptr %6, i64 0, i64 5, i64 1
  %43 = getelementptr inbounds [8 x [3 x float]], ptr %6, i64 0, i64 4, i64 1
  %44 = load <2 x float>, ptr %7, align 8, !tbaa !44
  %45 = fneg fast <2 x float> %44
  %46 = extractelement <2 x float> %45, i64 0
  store float %46, ptr %35, align 4, !tbaa !44
  store float %46, ptr %36, align 8, !tbaa !44
  %47 = extractelement <2 x float> %44, i64 0
  store float %47, ptr %40, align 4, !tbaa !44
  store float %47, ptr %41, align 16, !tbaa !44
  %48 = extractelement <2 x float> %45, i64 1
  store float %48, ptr %42, align 16, !tbaa !44
  store float %48, ptr %43, align 4, !tbaa !44
  store <2 x float> %45, ptr %37, align 4, !tbaa !44
  store <2 x float> %45, ptr %6, align 16, !tbaa !44
  store <2 x float> %44, ptr %38, align 4, !tbaa !44
  store <2 x float> %44, ptr %39, align 8, !tbaa !44
  %49 = getelementptr inbounds [8 x [3 x float]], ptr %6, i64 0, i64 3, i64 1
  %50 = extractelement <2 x float> %44, i64 1
  store float %50, ptr %49, align 8, !tbaa !44
  %51 = getelementptr inbounds [8 x [3 x float]], ptr %6, i64 0, i64 2, i64 1
  store float %50, ptr %51, align 4, !tbaa !44
  %52 = getelementptr inbounds [3 x float], ptr %7, i64 0, i64 2
  %53 = load float, ptr %52, align 8, !tbaa !44
  %54 = fneg fast float %53
  %55 = getelementptr inbounds [8 x [3 x float]], ptr %6, i64 0, i64 7, i64 2
  store float %54, ptr %55, align 4, !tbaa !44
  %56 = getelementptr inbounds [8 x [3 x float]], ptr %6, i64 0, i64 4, i64 2
  store float %54, ptr %56, align 8, !tbaa !44
  %57 = getelementptr inbounds [8 x [3 x float]], ptr %6, i64 0, i64 3, i64 2
  store float %54, ptr %57, align 4, !tbaa !44
  %58 = getelementptr inbounds [3 x float], ptr %6, i64 0, i64 2
  store float %54, ptr %58, align 8, !tbaa !44
  %59 = getelementptr inbounds [8 x [3 x float]], ptr %6, i64 0, i64 6, i64 2
  store float %53, ptr %59, align 16, !tbaa !44
  %60 = getelementptr inbounds [8 x [3 x float]], ptr %6, i64 0, i64 5, i64 2
  store float %53, ptr %60, align 4, !tbaa !44
  %61 = getelementptr inbounds [8 x [3 x float]], ptr %6, i64 0, i64 2, i64 2
  store float %53, ptr %61, align 16, !tbaa !44
  %62 = getelementptr inbounds [8 x [3 x float]], ptr %6, i64 0, i64 1, i64 2
  store float %53, ptr %62, align 4, !tbaa !44
  call fastcc void @draw_box(ptr noundef nonnull %6)
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #13
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %6) #13
  br label %67

63:                                               ; preds = %33
  call fastcc void @draw_bb_quadric(ptr noundef nonnull %27, i8 noundef zeroext %1, i8 noundef zeroext 1)
  br label %67

64:                                               ; preds = %26
  br i1 %32, label %65, label %66

65:                                               ; preds = %64
  call fastcc void @draw_box(ptr noundef nonnull %27)
  br label %67

66:                                               ; preds = %64
  call fastcc void @draw_bb_quadric(ptr noundef nonnull %27, i8 noundef zeroext %1, i8 noundef zeroext 0)
  br label %67

67:                                               ; preds = %14, %63, %34, %66, %65, %23
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %3) #13
  ret void
}

declare zeroext i8 @ED_view3d_boundbox_clip(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i8 @drawDispList(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr nocapture noundef readonly %3, i8 noundef zeroext %4, i16 noundef signext %5, ptr noundef %6) unnamed_addr #0 {
  %8 = getelementptr inbounds %struct.View3D, ptr %1, i64 0, i32 29
  %9 = load i16, ptr %8, align 2, !tbaa !15
  %10 = and i16 %9, 1024
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @glEnable(i32 noundef 2884) #13
  tail call void @glCullFace(i32 noundef 1029) #13
  br label %13

13:                                               ; preds = %12, %7
  %14 = getelementptr %struct.Base, ptr %3, i64 0, i32 7
  %15 = load ptr, ptr %14, align 8, !tbaa !38
  tail call fastcc void @ensure_curve_cache(ptr noundef %0, ptr noundef %15)
  %16 = load ptr, ptr %14, align 8, !tbaa !38
  %17 = load i16, ptr %8, align 2, !tbaa !15
  %18 = and i16 %17, 4
  %19 = icmp ugt i8 %4, 2
  %20 = getelementptr %struct.Object, ptr %16, i64 0, i32 120
  %21 = load ptr, ptr %20, align 8, !tbaa !265
  %22 = icmp eq ptr %21, null
  br i1 %22, label %56, label %23

23:                                               ; preds = %13
  tail call void @DM_update_materials(ptr noundef nonnull %21, ptr noundef nonnull %16) #13
  %24 = getelementptr inbounds %struct.Object, ptr %16, i64 0, i32 55
  %25 = load i16, ptr %24, align 8, !tbaa !64
  %26 = and i16 %25, 4
  %27 = icmp eq i16 %26, 0
  %28 = select i1 %27, i32 2305, i32 2304
  tail call void @glFrontFace(i32 noundef %28) #13
  br i1 %19, label %29, label %44

29:                                               ; preds = %23
  %30 = getelementptr inbounds %struct.DerivedMesh, ptr %21, i64 0, i32 25
  %31 = load ptr, ptr %30, align 8, !tbaa !295
  %32 = tail call i32 %31(ptr noundef nonnull %21) #13
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %44, label %34

34:                                               ; preds = %29
  %35 = tail call zeroext i8 @draw_glsl_material(ptr noundef %0, ptr noundef nonnull %16, ptr noundef nonnull %1, i8 noundef zeroext %4), !range !96
  tail call void @GPU_begin_object_materials(ptr noundef nonnull %1, ptr noundef %2, ptr noundef %0, ptr noundef nonnull %16, i8 noundef zeroext %35, ptr noundef null) #13
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %34
  tail call void @glEnable(i32 noundef 2896) #13
  %38 = getelementptr inbounds %struct.DerivedMesh, ptr %21, i64 0, i32 86
  %39 = load ptr, ptr %38, align 8, !tbaa !314
  tail call void %39(ptr noundef nonnull %21, ptr noundef null, i8 noundef zeroext 0, ptr noundef nonnull @GPU_enable_material) #13
  tail call void @glDisable(i32 noundef 2896) #13
  br label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.DerivedMesh, ptr %21, i64 0, i32 88
  %42 = load ptr, ptr %41, align 8, !tbaa !315
  tail call void %42(ptr noundef nonnull %21, ptr noundef nonnull @GPU_enable_material) #13
  br label %43

43:                                               ; preds = %40, %37
  tail call void @GPU_end_object_materials() #13
  br label %177

44:                                               ; preds = %29, %23
  %45 = load i16, ptr %8, align 2, !tbaa !15
  %46 = and i16 %45, 4
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.View3D, ptr %1, i64 0, i32 24
  %50 = load i16, ptr %49, align 8, !tbaa !5
  %51 = icmp slt i16 %50, 3
  br i1 %51, label %52, label %177

52:                                               ; preds = %48, %44
  %53 = load ptr, ptr %20, align 8, !tbaa !265
  %54 = getelementptr inbounds %struct.DerivedMesh, ptr %53, i64 0, i32 84
  %55 = load ptr, ptr %54, align 8, !tbaa !266
  tail call void %55(ptr noundef %53, i8 noundef zeroext 1, i8 noundef zeroext 0) #13
  br label %177

56:                                               ; preds = %13
  %57 = getelementptr inbounds %struct.Object, ptr %16, i64 0, i32 3
  %58 = load i16, ptr %57, align 8, !tbaa !75
  %59 = icmp eq i16 %58, 5
  %60 = getelementptr inbounds %struct.Object, ptr %16, i64 0, i32 55
  %61 = load i16, ptr %60, align 8, !tbaa !64
  %62 = and i16 %61, 4
  %63 = icmp eq i16 %62, 0
  %64 = select i1 %63, i32 2304, i32 2305
  %65 = select i1 %63, i32 2305, i32 2304
  %66 = select i1 %59, i32 %65, i32 %64
  tail call void @glFrontFace(i32 noundef %66) #13
  %67 = load i16, ptr %57, align 8, !tbaa !75
  %68 = sext i16 %67 to i32
  switch i32 %68, label %177 [
    i32 4, label %69
    i32 2, label %69
    i32 3, label %134
    i32 5, label %156
  ]

69:                                               ; preds = %56, %56
  %70 = getelementptr inbounds %struct.Object, ptr %16, i64 0, i32 19
  %71 = load ptr, ptr %70, align 8, !tbaa !90
  %72 = getelementptr inbounds %struct.Object, ptr %16, i64 0, i32 118
  %73 = load ptr, ptr %72, align 8, !tbaa !113
  br i1 %19, label %74, label %120

74:                                               ; preds = %69
  %75 = tail call zeroext i8 @BKE_displist_has_faces(ptr noundef %73) #13
  %76 = load ptr, ptr %73, align 8, !tbaa !98
  %77 = icmp eq ptr %76, null
  br i1 %77, label %177, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %struct.DispList, ptr %76, i64 0, i32 9
  %80 = load ptr, ptr %79, align 8, !tbaa !355
  %81 = icmp eq ptr %80, null
  br i1 %81, label %82, label %83

82:                                               ; preds = %78
  tail call void @BKE_displist_normals_add(ptr noundef nonnull %73) #13
  br label %83

83:                                               ; preds = %82, %78
  store i1 true, ptr @index3_nors_incr, align 1
  %84 = icmp eq i16 %18, 0
  %85 = icmp eq i8 %75, 0
  br i1 %84, label %86, label %89

86:                                               ; preds = %83
  br i1 %85, label %112, label %87

87:                                               ; preds = %86
  %88 = tail call fastcc zeroext i8 @drawDispListwire_ex(ptr noundef nonnull %73, i32 noundef 2), !range !96
  br label %90

89:                                               ; preds = %83
  br i1 %85, label %119, label %90

90:                                               ; preds = %89, %87
  %91 = tail call zeroext i8 @draw_glsl_material(ptr noundef %0, ptr noundef nonnull %16, ptr noundef nonnull %1, i8 noundef zeroext %4), !range !96
  tail call void @GPU_begin_object_materials(ptr noundef nonnull %1, ptr noundef %2, ptr noundef %0, ptr noundef nonnull %16, i8 noundef zeroext %91, ptr noundef null) #13
  tail call fastcc void @drawDispListsolid(ptr noundef nonnull %73, ptr noundef nonnull %16, i16 noundef signext %5, ptr noundef %6, i8 noundef zeroext %91)
  tail call void @GPU_end_object_materials() #13
  %92 = getelementptr inbounds %struct.Curve, ptr %71, i64 0, i32 4
  %93 = load ptr, ptr %92, align 8, !tbaa !97
  %94 = icmp eq ptr %93, null
  br i1 %94, label %119, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %struct.Curve, ptr %71, i64 0, i32 5
  %97 = load ptr, ptr %96, align 8, !tbaa !357
  %98 = icmp eq ptr %97, null
  br i1 %98, label %99, label %119

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.Curve, ptr %71, i64 0, i32 6
  %101 = load ptr, ptr %100, align 8, !tbaa !358
  %102 = icmp eq ptr %101, null
  br i1 %102, label %103, label %119

103:                                              ; preds = %99
  %104 = getelementptr inbounds %struct.Curve, ptr %71, i64 0, i32 25
  %105 = load float, ptr %104, align 4, !tbaa !359
  %106 = fcmp fast oeq float %105, 0.000000e+00
  br i1 %106, label %107, label %119

107:                                              ; preds = %103
  %108 = getelementptr inbounds %struct.Curve, ptr %71, i64 0, i32 26
  %109 = load float, ptr %108, align 8, !tbaa !360
  %110 = fcmp fast oeq float %109, 0.000000e+00
  br i1 %110, label %111, label %119

111:                                              ; preds = %107
  tail call void @cpack(i32 noundef 0) #13
  br label %112

112:                                              ; preds = %111, %86
  %113 = load i16, ptr %57, align 8, !tbaa !75
  %114 = add i16 %113, -2
  %115 = and i16 %114, -3
  %116 = icmp eq i16 %115, 0
  %117 = select i1 %116, i32 -49, i32 -1
  %118 = tail call fastcc zeroext i8 @drawDispListwire_ex(ptr noundef nonnull %73, i32 noundef %117), !range !96
  br label %119

119:                                              ; preds = %112, %107, %103, %99, %95, %90, %89
  store i1 false, ptr @index3_nors_incr, align 1
  br label %177

120:                                              ; preds = %69
  %121 = icmp eq i16 %18, 0
  br i1 %121, label %127, label %122

122:                                              ; preds = %120
  %123 = tail call zeroext i8 @BKE_displist_has_faces(ptr noundef %73) #13
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %177, label %125

125:                                              ; preds = %122
  %126 = load i16, ptr %57, align 8, !tbaa !75
  br label %127

127:                                              ; preds = %125, %120
  %128 = phi i16 [ %126, %125 ], [ %67, %120 ]
  %129 = add i16 %128, -2
  %130 = and i16 %129, -3
  %131 = icmp eq i16 %130, 0
  %132 = select i1 %131, i32 -49, i32 -1
  %133 = tail call fastcc zeroext i8 @drawDispListwire_ex(ptr noundef %73, i32 noundef %132), !range !96
  br label %177

134:                                              ; preds = %56
  %135 = getelementptr inbounds %struct.Object, ptr %16, i64 0, i32 118
  %136 = load ptr, ptr %135, align 8, !tbaa !113
  br i1 %19, label %137, label %150

137:                                              ; preds = %134
  %138 = load ptr, ptr %136, align 8, !tbaa !98
  %139 = icmp eq ptr %138, null
  br i1 %139, label %177, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds %struct.DispList, ptr %138, i64 0, i32 9
  %142 = load ptr, ptr %141, align 8, !tbaa !355
  %143 = icmp eq ptr %142, null
  br i1 %143, label %144, label %145

144:                                              ; preds = %140
  tail call void @BKE_displist_normals_add(ptr noundef nonnull %136) #13
  br label %145

145:                                              ; preds = %144, %140
  %146 = tail call zeroext i8 @draw_glsl_material(ptr noundef %0, ptr noundef nonnull %16, ptr noundef nonnull %1, i8 noundef zeroext %4), !range !96
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %149, label %148

148:                                              ; preds = %145
  tail call void @GPU_begin_object_materials(ptr noundef nonnull %1, ptr noundef %2, ptr noundef %0, ptr noundef nonnull %16, i8 noundef zeroext 1, ptr noundef null) #13
  tail call fastcc void @drawDispListsolid(ptr noundef nonnull %136, ptr noundef nonnull %16, i16 noundef signext %5, ptr noundef %6, i8 noundef zeroext 1)
  tail call void @GPU_end_object_materials() #13
  br label %177

149:                                              ; preds = %145
  tail call void @GPU_begin_object_materials(ptr noundef nonnull %1, ptr noundef %2, ptr noundef %0, ptr noundef nonnull %16, i8 noundef zeroext 0, ptr noundef null) #13
  tail call fastcc void @drawDispListsolid(ptr noundef nonnull %136, ptr noundef nonnull %16, i16 noundef signext %5, ptr noundef %6, i8 noundef zeroext 0)
  tail call void @GPU_end_object_materials() #13
  br label %177

150:                                              ; preds = %134
  %151 = add i16 %67, -2
  %152 = and i16 %151, -3
  %153 = icmp eq i16 %152, 0
  %154 = select i1 %153, i32 -49, i32 -1
  %155 = tail call fastcc zeroext i8 @drawDispListwire_ex(ptr noundef %136, i32 noundef %154), !range !96
  br label %177

156:                                              ; preds = %56
  %157 = tail call zeroext i8 @BKE_mball_is_basis(ptr noundef nonnull %16) #13
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %struct.Object, ptr %16, i64 0, i32 118
  %161 = load ptr, ptr %160, align 8, !tbaa !113
  %162 = load ptr, ptr %161, align 8, !tbaa !98
  %163 = icmp eq ptr %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %159
  br i1 %19, label %165, label %170

165:                                              ; preds = %164
  %166 = tail call zeroext i8 @draw_glsl_material(ptr noundef %0, ptr noundef nonnull %16, ptr noundef nonnull %1, i8 noundef zeroext %4), !range !96
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %169, label %168

168:                                              ; preds = %165
  tail call void @GPU_begin_object_materials(ptr noundef nonnull %1, ptr noundef %2, ptr noundef %0, ptr noundef nonnull %16, i8 noundef zeroext 1, ptr noundef null) #13
  tail call fastcc void @drawDispListsolid(ptr noundef nonnull %161, ptr noundef nonnull %16, i16 noundef signext %5, ptr noundef %6, i8 noundef zeroext 1)
  tail call void @GPU_end_object_materials() #13
  br label %177

169:                                              ; preds = %165
  tail call void @GPU_begin_object_materials(ptr noundef nonnull %1, ptr noundef %2, ptr noundef %0, ptr noundef nonnull %16, i8 noundef zeroext 0, ptr noundef null) #13
  tail call fastcc void @drawDispListsolid(ptr noundef nonnull %161, ptr noundef nonnull %16, i16 noundef signext %5, ptr noundef %6, i8 noundef zeroext 0)
  tail call void @GPU_end_object_materials() #13
  br label %177

170:                                              ; preds = %164
  %171 = load i16, ptr %57, align 8, !tbaa !75
  %172 = add i16 %171, -2
  %173 = and i16 %172, -3
  %174 = icmp eq i16 %173, 0
  %175 = select i1 %174, i32 -49, i32 -1
  %176 = tail call fastcc zeroext i8 @drawDispListwire_ex(ptr noundef nonnull %161, i32 noundef %175), !range !96
  br label %177

177:                                              ; preds = %43, %48, %52, %56, %74, %119, %122, %127, %137, %148, %149, %150, %156, %159, %168, %169, %170
  %178 = phi i8 [ %176, %170 ], [ %155, %150 ], [ %133, %127 ], [ 1, %137 ], [ 1, %159 ], [ 1, %74 ], [ 0, %119 ], [ 0, %156 ], [ 0, %168 ], [ 0, %169 ], [ 0, %149 ], [ 0, %148 ], [ 0, %122 ], [ 0, %56 ], [ 0, %48 ], [ 0, %52 ], [ 0, %43 ]
  %179 = load i16, ptr %8, align 2, !tbaa !15
  %180 = and i16 %179, 1024
  %181 = icmp eq i16 %180, 0
  br i1 %181, label %183, label %182

182:                                              ; preds = %177
  tail call void @glDisable(i32 noundef 2884) #13
  br label %183

183:                                              ; preds = %182, %177
  ret i8 %178
}

declare ptr @BKE_curve_editNurbs_get(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @draw_editnurb(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr nocapture noundef readonly %3, ptr noundef %4, i8 noundef zeroext %5, i16 noundef signext %6, ptr noundef %7) unnamed_addr #0 {
  %9 = alloca [3 x i8], align 1
  %10 = alloca [3 x float], align 8
  %11 = alloca [3 x float], align 8
  %12 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 20
  %13 = load ptr, ptr %12, align 8, !tbaa !361
  %14 = getelementptr inbounds %struct.Base, ptr %3, i64 0, i32 7
  %15 = load ptr, ptr %14, align 8, !tbaa !38
  %16 = getelementptr %struct.Object, ptr %15, i64 0, i32 19
  %17 = load ptr, ptr %16, align 8, !tbaa !90
  %18 = tail call ptr @BKE_curve_vert_active_get(ptr noundef %17) #13
  %19 = getelementptr inbounds %struct.Curve, ptr %17, i64 0, i32 16
  %20 = load i16, ptr %19, align 8, !tbaa !362
  %21 = freeze i16 %20
  %22 = trunc i16 %21 to i8
  %23 = and i8 %22, 1
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %9) #13
  call void @UI_GetThemeColor3ubv(i32 noundef 27, ptr noundef nonnull %9) #13
  call void @glColor3ubv(ptr noundef nonnull %9) #13
  %24 = call fastcc zeroext i8 @drawDispList(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i8 noundef zeroext %5, i16 noundef signext %6, ptr noundef %7), !range !96
  %25 = getelementptr inbounds %struct.View3D, ptr %1, i64 0, i32 29
  %26 = load i16, ptr %25, align 2, !tbaa !15
  %27 = and i16 %26, 64
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %29, label %210

29:                                               ; preds = %8
  %30 = getelementptr inbounds %struct.View3D, ptr %1, i64 0, i32 47
  %31 = load i8, ptr %30, align 8, !tbaa !58
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  call void @glDepthFunc(i32 noundef 519) #13
  br label %34

34:                                               ; preds = %33, %29
  %35 = icmp eq ptr %4, null
  br i1 %35, label %106, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %struct.Curve, ptr %17, i64 0, i32 31
  %38 = icmp eq i8 %23, 0
  br i1 %38, label %48, label %39

39:                                               ; preds = %36, %45
  %40 = phi ptr [ %46, %45 ], [ %4, %36 ]
  %41 = getelementptr inbounds %struct.Nurb, ptr %40, i64 0, i32 2
  %42 = load i16, ptr %41, align 8, !tbaa !363
  %43 = icmp eq i16 %42, 1
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  call fastcc void @drawhandlesN(ptr noundef nonnull %40, i8 noundef zeroext 0, i8 noundef zeroext %23)
  br label %45

45:                                               ; preds = %44, %39
  %46 = load ptr, ptr %40, align 8, !tbaa !365
  %47 = icmp eq ptr %46, null
  br i1 %47, label %90, label %39, !llvm.loop !366

48:                                               ; preds = %36, %86
  %49 = phi ptr [ %88, %86 ], [ %4, %36 ]
  %50 = phi i32 [ %87, %86 ], [ 0, %36 ]
  %51 = getelementptr inbounds %struct.Nurb, ptr %49, i64 0, i32 2
  %52 = load i16, ptr %51, align 8, !tbaa !363
  %53 = icmp eq i16 %52, 1
  br i1 %53, label %54, label %86

54:                                               ; preds = %48
  %55 = load i32, ptr %37, align 4, !tbaa !367
  %56 = icmp eq i32 %50, %55
  br i1 %56, label %57, label %85

57:                                               ; preds = %54
  %58 = getelementptr inbounds %struct.Nurb, ptr %49, i64 0, i32 4
  %59 = load i16, ptr %58, align 4, !tbaa !368
  %60 = icmp eq i16 %59, 0
  br i1 %60, label %61, label %85

61:                                               ; preds = %57
  call void @UI_ThemeColor(i32 noundef 64) #13
  call void @glLineWidth(float noundef nofpclass(nan inf) 2.000000e+00) #13
  call void @glBegin(i32 noundef 1) #13
  %62 = load i16, ptr %51, align 8, !tbaa !363
  %63 = icmp eq i16 %62, 1
  br i1 %63, label %64, label %84

64:                                               ; preds = %61
  %65 = getelementptr inbounds %struct.Nurb, ptr %49, i64 0, i32 6
  %66 = load i32, ptr %65, align 8, !tbaa !369
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %84, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %struct.Nurb, ptr %49, i64 0, i32 18
  %70 = load ptr, ptr %69, align 8, !tbaa !370
  br label %71

71:                                               ; preds = %81, %68
  %72 = phi i32 [ %74, %81 ], [ %66, %68 ]
  %73 = phi ptr [ %82, %81 ], [ %70, %68 ]
  %74 = add nsw i32 %72, -1
  %75 = getelementptr inbounds %struct.BezTriple, ptr %73, i64 0, i32 10
  %76 = load i8, ptr %75, align 2, !tbaa !371
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %71
  call void @glVertex3fv(ptr noundef nonnull %73) #13
  %79 = getelementptr inbounds float, ptr %73, i64 3
  call void @glVertex3fv(ptr noundef nonnull %79) #13
  call void @glVertex3fv(ptr noundef nonnull %79) #13
  %80 = getelementptr inbounds float, ptr %73, i64 6
  call void @glVertex3fv(ptr noundef nonnull %80) #13
  br label %81

81:                                               ; preds = %78, %71
  %82 = getelementptr inbounds %struct.BezTriple, ptr %73, i64 1
  %83 = icmp eq i32 %74, 0
  br i1 %83, label %84, label %71, !llvm.loop !373

84:                                               ; preds = %81, %64, %61
  call void @glEnd() #13
  call void @glColor3ub(i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #13
  call void @glLineWidth(float noundef nofpclass(nan inf) 1.000000e+00) #13
  br label %85

85:                                               ; preds = %84, %57, %54
  call fastcc void @drawhandlesN(ptr noundef nonnull %49, i8 noundef zeroext 0, i8 noundef zeroext 0)
  br label %86

86:                                               ; preds = %85, %48
  %87 = add nuw nsw i32 %50, 1
  %88 = load ptr, ptr %49, align 8, !tbaa !365
  %89 = icmp eq ptr %88, null
  br i1 %89, label %90, label %48, !llvm.loop !366

90:                                               ; preds = %45, %86
  %91 = load ptr, ptr %16, align 8, !tbaa !90
  call fastcc void @draw_editnurb_splines(ptr %91, ptr noundef nonnull %4, i8 noundef zeroext 0)
  %92 = load ptr, ptr %16, align 8, !tbaa !90
  call fastcc void @draw_editnurb_splines(ptr %92, ptr noundef nonnull %4, i8 noundef zeroext 1)
  br i1 %35, label %109, label %93

93:                                               ; preds = %90, %103
  %94 = phi ptr [ %104, %103 ], [ %4, %90 ]
  %95 = getelementptr inbounds %struct.Nurb, ptr %94, i64 0, i32 2
  %96 = load i16, ptr %95, align 8, !tbaa !363
  %97 = icmp eq i16 %96, 1
  br i1 %97, label %98, label %103

98:                                               ; preds = %93
  %99 = load i16, ptr %19, align 8, !tbaa !362
  %100 = and i16 %99, 1
  %101 = icmp eq i16 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %98
  call fastcc void @drawhandlesN(ptr noundef nonnull %94, i8 noundef zeroext 1, i8 noundef zeroext %23)
  br label %103

103:                                              ; preds = %102, %98, %93
  call fastcc void @drawvertsN(ptr noundef nonnull %94, i8 noundef zeroext 0, i8 noundef zeroext %23, ptr noundef null)
  %104 = load ptr, ptr %94, align 8, !tbaa !365
  %105 = icmp eq ptr %104, null
  br i1 %105, label %109, label %93, !llvm.loop !374

106:                                              ; preds = %34
  %107 = load ptr, ptr %16, align 8, !tbaa !90
  call fastcc void @draw_editnurb_splines(ptr %107, ptr noundef %4, i8 noundef zeroext 0)
  %108 = load ptr, ptr %16, align 8, !tbaa !90
  call fastcc void @draw_editnurb_splines(ptr %108, ptr noundef %4, i8 noundef zeroext 1)
  br label %109

109:                                              ; preds = %103, %106, %90
  %110 = load i8, ptr %30, align 8, !tbaa !58
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %113, label %112

112:                                              ; preds = %109
  call void @glDepthFunc(i32 noundef 515) #13
  br label %113

113:                                              ; preds = %112, %109
  call void @glColor3ubv(ptr noundef nonnull %9) #13
  %114 = getelementptr inbounds %struct.Curve, ptr %17, i64 0, i32 23
  %115 = load i32, ptr %114, align 4, !tbaa !112
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %197, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %struct.ToolSettings, ptr %13, i64 0, i32 6
  %120 = load float, ptr %119, align 8, !tbaa !375
  %121 = fcmp fast ogt float %120, 0x3F589374C0000000
  br i1 %121, label %122, label %197

122:                                              ; preds = %118
  %123 = load i16, ptr %19, align 8, !tbaa !362
  %124 = and i16 %123, 2
  %125 = icmp eq i16 %124, 0
  br i1 %125, label %126, label %197

126:                                              ; preds = %122
  %127 = getelementptr inbounds %struct.Object, ptr %15, i64 0, i32 118
  %128 = load ptr, ptr %127, align 8, !tbaa !113
  %129 = getelementptr inbounds %struct.CurveCache, ptr %128, i64 0, i32 1
  %130 = load ptr, ptr %129, align 8, !tbaa !49
  %131 = icmp ne ptr %4, null
  %132 = icmp ne ptr %130, null
  %133 = select i1 %131, i1 %132, i1 false
  br i1 %133, label %134, label %197

134:                                              ; preds = %126
  %135 = getelementptr inbounds [3 x float], ptr %10, i64 0, i64 1
  %136 = getelementptr inbounds [3 x float], ptr %10, i64 0, i64 2
  %137 = getelementptr inbounds [3 x float], ptr %11, i64 0, i64 1
  %138 = getelementptr inbounds [3 x float], ptr %11, i64 0, i64 2
  br label %139

139:                                              ; preds = %134, %191
  %140 = phi ptr [ %130, %134 ], [ %193, %191 ]
  %141 = phi ptr [ %4, %134 ], [ %192, %191 ]
  %142 = getelementptr inbounds %struct.BevList, ptr %140, i64 0, i32 2
  %143 = load i32, ptr %142, align 8, !tbaa !47
  %144 = icmp sgt i32 %143, 0
  br i1 %144, label %145, label %191

145:                                              ; preds = %139
  %146 = getelementptr inbounds %struct.Nurb, ptr %141, i64 0, i32 9
  %147 = load i16, ptr %146, align 4, !tbaa !380
  %148 = sdiv i16 %147, 16
  %149 = sext i16 %148 to i32
  %150 = getelementptr inbounds %struct.BevList, ptr %140, i64 0, i32 9
  %151 = add nsw i32 %149, 1
  %152 = sext i32 %151 to i64
  %153 = xor i32 %149, -1
  br label %154

154:                                              ; preds = %145, %154
  %155 = phi i32 [ %143, %145 ], [ %189, %154 ]
  %156 = phi ptr [ %150, %145 ], [ %188, %154 ]
  %157 = getelementptr inbounds %struct.BevPoint, ptr %156, i64 0, i32 2
  %158 = load float, ptr %157, align 4, !tbaa !381
  %159 = load float, ptr %119, align 8, !tbaa !375
  %160 = fmul fast float %159, %158
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %10) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %11) #13
  store float %160, ptr %10, align 8, !tbaa !44
  store <2 x float> zeroinitializer, ptr %135, align 4, !tbaa !44
  %161 = fneg fast float %160
  store float %161, ptr %11, align 8, !tbaa !44
  store <2 x float> zeroinitializer, ptr %137, align 4, !tbaa !44
  %162 = getelementptr inbounds %struct.BevPoint, ptr %156, i64 0, i32 9
  call void @mul_qt_v3(ptr noundef nonnull %162, ptr noundef nonnull %10) #13
  call void @mul_qt_v3(ptr noundef nonnull %162, ptr noundef nonnull %11) #13
  %163 = getelementptr inbounds float, ptr %156, i64 2
  %164 = load float, ptr %163, align 4, !tbaa !44
  %165 = load float, ptr %136, align 8, !tbaa !44
  %166 = fadd fast float %165, %164
  %167 = load float, ptr %138, align 8, !tbaa !44
  %168 = getelementptr inbounds %struct.BevPoint, ptr %156, i64 0, i32 7
  %169 = load <2 x float>, ptr %156, align 4, !tbaa !44
  %170 = load <2 x float>, ptr %10, align 8, !tbaa !44
  %171 = fadd fast <2 x float> %170, %169
  store <2 x float> %171, ptr %10, align 8, !tbaa !44
  store float %166, ptr %136, align 8, !tbaa !44
  %172 = load float, ptr %163, align 4, !tbaa !44
  %173 = fadd fast float %167, %172
  %174 = load <2 x float>, ptr %168, align 4, !tbaa !44
  %175 = insertelement <2 x float> poison, float %161, i64 0
  %176 = shufflevector <2 x float> %175, <2 x float> poison, <2 x i32> zeroinitializer
  %177 = fmul fast <2 x float> %174, %176
  %178 = fadd fast <2 x float> %177, %171
  %179 = getelementptr inbounds %struct.BevPoint, ptr %156, i64 0, i32 7, i64 2
  %180 = load float, ptr %179, align 4, !tbaa !44
  %181 = fmul fast float %180, %161
  %182 = fadd fast float %181, %166
  %183 = load <2 x float>, ptr %11, align 8, !tbaa !44
  %184 = load <2 x float>, ptr %156, align 4, !tbaa !44
  %185 = fadd fast <2 x float> %183, %184
  store <2 x float> %178, ptr %10, align 8, !tbaa !44
  store float %182, ptr %136, align 8, !tbaa !44
  %186 = fadd fast <2 x float> %177, %185
  store <2 x float> %186, ptr %11, align 8, !tbaa !44
  %187 = fadd fast float %181, %173
  store float %187, ptr %138, align 8, !tbaa !44
  call void @glBegin(i32 noundef 3) #13
  call void @glVertex3fv(ptr noundef nonnull %10) #13
  call void @glVertex3fv(ptr noundef nonnull %156) #13
  call void @glVertex3fv(ptr noundef nonnull %11) #13
  call void @glEnd() #13
  %188 = getelementptr inbounds %struct.BevPoint, ptr %156, i64 %152
  %189 = add i32 %155, %153
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %11) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %10) #13
  %190 = icmp sgt i32 %189, 0
  br i1 %190, label %154, label %191, !llvm.loop !383

191:                                              ; preds = %154, %139
  %192 = load ptr, ptr %141, align 8, !tbaa !365
  %193 = load ptr, ptr %140, align 8, !tbaa !49
  %194 = icmp ne ptr %192, null
  %195 = icmp ne ptr %193, null
  %196 = select i1 %194, i1 %195, i1 false
  br i1 %196, label %139, label %197, !llvm.loop !384

197:                                              ; preds = %191, %126, %122, %118, %113
  %198 = load i8, ptr %30, align 8, !tbaa !58
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %201, label %200

200:                                              ; preds = %197
  call void @glDepthFunc(i32 noundef 519) #13
  br label %201

201:                                              ; preds = %200, %197
  br i1 %35, label %206, label %202

202:                                              ; preds = %201, %202
  %203 = phi ptr [ %204, %202 ], [ %4, %201 ]
  call fastcc void @drawvertsN(ptr noundef nonnull %203, i8 noundef zeroext 1, i8 noundef zeroext %23, ptr noundef %18)
  %204 = load ptr, ptr %203, align 8, !tbaa !365
  %205 = icmp eq ptr %204, null
  br i1 %205, label %206, label %202, !llvm.loop !385

206:                                              ; preds = %202, %201
  %207 = load i8, ptr %30, align 8, !tbaa !58
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %210, label %209

209:                                              ; preds = %206
  call void @glDepthFunc(i32 noundef 515) #13
  br label %210

210:                                              ; preds = %206, %209, %8
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %9) #13
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i8 @drawmball(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr nocapture noundef readonly %3, i8 noundef zeroext %4, i16 noundef signext %5, ptr noundef %6) unnamed_addr #0 {
  %8 = alloca [4 x [4 x float]], align 16
  %9 = alloca [4 x i8], align 1
  %10 = getelementptr inbounds %struct.Base, ptr %3, i64 0, i32 7
  %11 = load ptr, ptr %10, align 8, !tbaa !38
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %8) #13
  %12 = getelementptr inbounds %struct.Object, ptr %11, i64 0, i32 19
  %13 = load ptr, ptr %12, align 8, !tbaa !90
  %14 = getelementptr inbounds %struct.MetaBall, ptr %13, i64 0, i32 4
  %15 = load ptr, ptr %14, align 8, !tbaa !99
  %16 = icmp eq ptr %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %7
  %18 = load i32, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 15), align 8, !tbaa !16
  %19 = and i32 %18, 32
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #13
  call void @UI_GetThemeColor4ubv(i32 noundef 27, ptr noundef nonnull %9) #13
  call void @glColor3ubv(ptr noundef nonnull %9) #13
  %22 = call fastcc zeroext i8 @drawDispList(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull %3, i8 noundef zeroext %4, i16 noundef signext %5, ptr noundef nonnull %9), !range !96
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #13
  %23 = load ptr, ptr %14, align 8, !tbaa !99
  br label %33

24:                                               ; preds = %7
  %25 = getelementptr inbounds %struct.Base, ptr %3, i64 0, i32 4
  %26 = load i32, ptr %25, align 8, !tbaa !71
  %27 = and i32 %26, 512
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  %30 = tail call fastcc zeroext i8 @drawDispList(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull %3, i8 noundef zeroext %4, i16 noundef signext %5, ptr noundef %6), !range !96
  br label %31

31:                                               ; preds = %29, %24
  %32 = getelementptr inbounds %struct.MetaBall, ptr %13, i64 0, i32 2
  br label %33

33:                                               ; preds = %17, %21, %31
  %34 = phi ptr [ %32, %31 ], [ %23, %21 ], [ %15, %17 ]
  %35 = load ptr, ptr %34, align 8, !tbaa !98
  %36 = icmp eq ptr %35, null
  br i1 %36, label %149, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.View3D, ptr %1, i64 0, i32 29
  %39 = load i16, ptr %38, align 2, !tbaa !15
  %40 = and i16 %39, 4
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %42, label %149

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.RegionView3D, ptr %2, i64 0, i32 5
  %44 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %8, ptr noundef nonnull %43) #13
  %45 = load <2 x float>, ptr %8, align 16, !tbaa !44
  %46 = fmul fast <2 x float> %45, %45
  %47 = shufflevector <2 x float> %46, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %48 = fadd fast <2 x float> %47, %46
  %49 = extractelement <2 x float> %48, i64 0
  %50 = getelementptr inbounds float, ptr %8, i64 2
  %51 = load float, ptr %50, align 8, !tbaa !44
  %52 = fmul fast float %51, %51
  %53 = fadd fast float %49, %52
  %54 = fcmp fast ogt float %53, 0x38AA95A5C0000000
  br i1 %54, label %55, label %62

55:                                               ; preds = %42
  %56 = call fast float @llvm.sqrt.f32(float %53)
  %57 = fdiv fast float 1.000000e+00, %56
  %58 = insertelement <2 x float> poison, float %57, i64 0
  %59 = shufflevector <2 x float> %58, <2 x float> poison, <2 x i32> zeroinitializer
  %60 = fmul fast <2 x float> %59, %45
  %61 = fmul fast float %57, %51
  br label %62

62:                                               ; preds = %42, %55
  %63 = phi float [ %61, %55 ], [ 0.000000e+00, %42 ]
  %64 = phi <2 x float> [ %60, %55 ], [ zeroinitializer, %42 ]
  store <2 x float> %64, ptr %8, align 16
  store float %63, ptr %50, align 8
  %65 = getelementptr inbounds [4 x [4 x float]], ptr %8, i64 0, i64 1
  %66 = load <2 x float>, ptr %65, align 16, !tbaa !44
  %67 = fmul fast <2 x float> %66, %66
  %68 = shufflevector <2 x float> %67, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %69 = fadd fast <2 x float> %68, %67
  %70 = extractelement <2 x float> %69, i64 0
  %71 = getelementptr inbounds [4 x [4 x float]], ptr %8, i64 0, i64 1, i64 2
  %72 = load float, ptr %71, align 8, !tbaa !44
  %73 = fmul fast float %72, %72
  %74 = fadd fast float %70, %73
  %75 = fcmp fast ogt float %74, 0x38AA95A5C0000000
  br i1 %75, label %76, label %83

76:                                               ; preds = %62
  %77 = call fast float @llvm.sqrt.f32(float %74)
  %78 = fdiv fast float 1.000000e+00, %77
  %79 = insertelement <2 x float> poison, float %78, i64 0
  %80 = shufflevector <2 x float> %79, <2 x float> poison, <2 x i32> zeroinitializer
  %81 = fmul fast <2 x float> %80, %66
  %82 = fmul fast float %78, %72
  br label %83

83:                                               ; preds = %62, %76
  %84 = phi float [ %82, %76 ], [ 0.000000e+00, %62 ]
  %85 = phi <2 x float> [ %81, %76 ], [ zeroinitializer, %62 ]
  store <2 x float> %85, ptr %65, align 16
  store float %84, ptr %71, align 8
  %86 = load ptr, ptr %14, align 8, !tbaa !99
  %87 = icmp eq ptr %86, null
  %88 = and i16 %5, 2
  %89 = icmp eq i16 %88, 0
  %90 = and i1 %89, %87
  br i1 %90, label %91, label %92

91:                                               ; preds = %83
  call void @glColor3ubv(ptr noundef %6) #13
  br label %92

92:                                               ; preds = %91, %83
  br label %93

93:                                               ; preds = %92, %145
  %94 = phi i32 [ %146, %145 ], [ 1, %92 ]
  %95 = phi ptr [ %147, %145 ], [ %35, %92 ]
  %96 = load ptr, ptr %14, align 8, !tbaa !99
  %97 = icmp eq ptr %96, null
  br i1 %97, label %114, label %98

98:                                               ; preds = %93
  br i1 %89, label %99, label %105

99:                                               ; preds = %98
  %100 = getelementptr inbounds %struct.MetaElem, ptr %95, i64 0, i32 4
  %101 = load i16, ptr %100, align 2, !tbaa !386
  %102 = and i16 %101, 17
  %103 = icmp eq i16 %102, 17
  %104 = select i1 %103, i32 10526960, i32 3158176
  call void @cpack(i32 noundef %104) #13
  br label %105

105:                                              ; preds = %99, %98
  %106 = load i32, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 15), align 8, !tbaa !16
  %107 = and i32 %106, 32
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %114, label %109

109:                                              ; preds = %105
  %110 = trunc i32 %94 to i16
  %111 = getelementptr inbounds %struct.MetaElem, ptr %95, i64 0, i32 5
  store i16 %110, ptr %111, align 4, !tbaa !388
  %112 = add nsw i32 %94, 1
  %113 = call zeroext i8 @GPU_select_load_id(i32 noundef %94) #13
  br label %114

114:                                              ; preds = %105, %109, %93
  %115 = phi i32 [ %112, %109 ], [ %94, %105 ], [ %94, %93 ]
  %116 = getelementptr inbounds %struct.MetaElem, ptr %95, i64 0, i32 7
  %117 = getelementptr inbounds %struct.MetaElem, ptr %95, i64 0, i32 14
  %118 = load float, ptr %117, align 8, !tbaa !389
  call void @drawcircball(i32 noundef 2, ptr noundef nonnull %116, float noundef nofpclass(nan inf) %118, ptr noundef nonnull %8)
  %119 = load ptr, ptr %14, align 8, !tbaa !99
  %120 = icmp eq ptr %119, null
  br i1 %120, label %145, label %121

121:                                              ; preds = %114
  br i1 %89, label %122, label %128

122:                                              ; preds = %121
  %123 = getelementptr inbounds %struct.MetaElem, ptr %95, i64 0, i32 4
  %124 = load i16, ptr %123, align 2, !tbaa !386
  %125 = and i16 %124, 17
  %126 = icmp eq i16 %125, 1
  %127 = select i1 %126, i32 10547360, i32 3186736
  call void @cpack(i32 noundef %127) #13
  br label %128

128:                                              ; preds = %122, %121
  %129 = load i32, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 15), align 8, !tbaa !16
  %130 = and i32 %129, 32
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %137, label %132

132:                                              ; preds = %128
  %133 = trunc i32 %115 to i16
  %134 = getelementptr inbounds %struct.MetaElem, ptr %95, i64 0, i32 6
  store i16 %133, ptr %134, align 2, !tbaa !390
  %135 = add nsw i32 %115, 1
  %136 = call zeroext i8 @GPU_select_load_id(i32 noundef %115) #13
  br label %137

137:                                              ; preds = %132, %128
  %138 = phi i32 [ %135, %132 ], [ %115, %128 ]
  %139 = load float, ptr %117, align 8, !tbaa !389
  %140 = getelementptr inbounds %struct.MetaElem, ptr %95, i64 0, i32 16
  %141 = load float, ptr %140, align 8, !tbaa !391
  %142 = call fast nofpclass(nan inf) float @atanf(float noundef nofpclass(nan inf) %141) #15
  %143 = fmul fast float %139, 0x3FE45F3060000000
  %144 = fmul fast float %143, %142
  call void @drawcircball(i32 noundef 2, ptr noundef nonnull %116, float noundef nofpclass(nan inf) %144, ptr noundef nonnull %8)
  br label %145

145:                                              ; preds = %137, %114
  %146 = phi i32 [ %138, %137 ], [ %115, %114 ]
  %147 = load ptr, ptr %95, align 8, !tbaa !392
  %148 = icmp eq ptr %147, null
  br i1 %148, label %149, label %93, !llvm.loop !393

149:                                              ; preds = %145, %37, %33
  %150 = phi i8 [ 1, %33 ], [ 0, %37 ], [ 0, %145 ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %8) #13
  ret i8 %150
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @draw_empty_image(ptr noundef %0, i16 noundef signext %1, ptr noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 19
  %5 = load ptr, ptr %4, align 8, !tbaa !90
  %6 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 131
  %7 = load ptr, ptr %6, align 8, !tbaa !394
  %8 = tail call ptr @BKE_image_acquire_ibuf(ptr noundef %5, ptr noundef %7, ptr noundef null) #13
  %9 = icmp eq ptr %8, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.ImBuf, ptr %8, i64 0, i32 8
  %12 = load ptr, ptr %11, align 8, !tbaa !395
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.ImBuf, ptr %8, i64 0, i32 9
  %16 = load ptr, ptr %15, align 8, !tbaa !398
  %17 = icmp eq ptr %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %14
  tail call void @IMB_rect_from_float(ptr noundef nonnull %8) #13
  %19 = load ptr, ptr %11, align 8, !tbaa !395
  %20 = icmp eq ptr %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %10, %18
  %22 = getelementptr inbounds %struct.ImBuf, ptr %8, i64 0, i32 2
  %23 = load i32, ptr %22, align 8, !tbaa !399
  %24 = getelementptr inbounds %struct.ImBuf, ptr %8, i64 0, i32 3
  %25 = load i32, ptr %24, align 4, !tbaa !400
  br label %26

26:                                               ; preds = %14, %18, %3, %21
  %27 = phi i32 [ %23, %21 ], [ 1, %3 ], [ 1, %18 ], [ 1, %14 ]
  %28 = phi i32 [ %25, %21 ], [ 1, %3 ], [ 1, %18 ], [ 1, %14 ]
  %29 = icmp eq ptr %5, null
  br i1 %29, label %42, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.Image, ptr %5, i64 0, i32 34
  %32 = load float, ptr %31, align 8, !tbaa !401
  %33 = getelementptr inbounds %struct.Image, ptr %5, i64 0, i32 35
  %34 = load float, ptr %33, align 4, !tbaa !403
  %35 = fcmp fast ogt float %32, %34
  br i1 %35, label %36, label %38

36:                                               ; preds = %30
  %37 = fdiv fast float %34, %32
  br label %42

38:                                               ; preds = %30
  %39 = fcmp fast olt float %32, %34
  br i1 %39, label %40, label %42

40:                                               ; preds = %38
  %41 = fdiv fast float %32, %34
  br label %42

42:                                               ; preds = %26, %38, %36, %40
  %43 = phi float [ %37, %36 ], [ 1.000000e+00, %40 ], [ 1.000000e+00, %38 ], [ 1.000000e+00, %26 ]
  %44 = phi float [ 1.000000e+00, %36 ], [ %41, %40 ], [ 1.000000e+00, %38 ], [ 1.000000e+00, %26 ]
  %45 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 130
  %46 = load float, ptr %45, align 8, !tbaa !44
  %47 = sitofp i32 %27 to float
  %48 = fmul fast float %46, %47
  %49 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 130, i64 1
  %50 = load float, ptr %49, align 4, !tbaa !44
  %51 = sitofp i32 %28 to float
  %52 = fmul fast float %50, %51
  tail call void @glMatrixMode(i32 noundef 5888) #13
  tail call void @glPushMatrix() #13
  tail call void @glTranslatef(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00) #13
  %53 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 89
  %54 = load float, ptr %53, align 8, !tbaa !101
  %55 = fmul fast float %44, %47
  %56 = fmul fast float %43, %51
  %57 = tail call fast float @llvm.maxnum.f32(float %55, float %56)
  %58 = fdiv fast float %54, %57
  %59 = fmul fast float %58, %44
  %60 = fmul fast float %58, %43
  tail call void @glScalef(float noundef nofpclass(nan inf) %59, float noundef nofpclass(nan inf) %60, float noundef nofpclass(nan inf) 1.000000e+00) #13
  br i1 %9, label %79, label %61

61:                                               ; preds = %42
  %62 = getelementptr inbounds %struct.ImBuf, ptr %8, i64 0, i32 8
  %63 = load ptr, ptr %62, align 8, !tbaa !395
  %64 = icmp eq ptr %63, null
  br i1 %64, label %79, label %65

65:                                               ; preds = %61
  %66 = load float, ptr getelementptr inbounds (%struct.UserDef, ptr @U, i64 0, i32 90), align 4, !tbaa !404
  %67 = fcmp fast une float %66, 1.000000e+00
  %68 = load i16, ptr getelementptr inbounds (%struct.UserDef, ptr @U, i64 0, i32 20), align 8, !tbaa !408
  %69 = and i16 %68, 4
  %70 = icmp eq i16 %69, 0
  %71 = select i1 %70, i32 9729, i32 9728
  tail call void @glEnable(i32 noundef 3042) #13
  tail call void @glBlendFunc(i32 noundef 770, i32 noundef 771) #13
  br i1 %67, label %72, label %76

72:                                               ; preds = %65
  tail call void @glEnable(i32 noundef 3008) #13
  %73 = load float, ptr getelementptr inbounds (%struct.UserDef, ptr @U, i64 0, i32 90), align 4, !tbaa !404
  tail call void @glAlphaFunc(i32 noundef 516, float noundef nofpclass(nan inf) %73) #13
  %74 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 98
  tail call void @glColor4fv(ptr noundef nonnull %74) #13
  %75 = load ptr, ptr %62, align 8, !tbaa !395
  tail call void @glaDrawPixelsTex(float noundef nofpclass(nan inf) %48, float noundef nofpclass(nan inf) %52, i32 noundef %27, i32 noundef %28, i32 noundef 6408, i32 noundef 5121, i32 noundef %71, ptr noundef %75) #13
  tail call void @glPixelTransferf(i32 noundef 3356, float noundef nofpclass(nan inf) 1.000000e+00) #13
  tail call void @glDisable(i32 noundef 3042) #13
  tail call void @glDisable(i32 noundef 3008) #13
  tail call void @glAlphaFunc(i32 noundef 516, float noundef nofpclass(nan inf) 0.000000e+00) #13
  br label %79

76:                                               ; preds = %65
  %77 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 98
  tail call void @glColor4fv(ptr noundef nonnull %77) #13
  %78 = load ptr, ptr %62, align 8, !tbaa !395
  tail call void @glaDrawPixelsTex(float noundef nofpclass(nan inf) %48, float noundef nofpclass(nan inf) %52, i32 noundef %27, i32 noundef %28, i32 noundef 6408, i32 noundef 5121, i32 noundef %71, ptr noundef %78) #13
  tail call void @glPixelTransferf(i32 noundef 3356, float noundef nofpclass(nan inf) 1.000000e+00) #13
  tail call void @glDisable(i32 noundef 3042) #13
  br label %79

79:                                               ; preds = %72, %76, %61, %42
  %80 = and i16 %1, 2
  %81 = icmp eq i16 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @glColor3ubv(ptr noundef %2) #13
  br label %83

83:                                               ; preds = %82, %79
  tail call void @glBegin(i32 noundef 2) #13
  tail call void @glVertex2f(float noundef nofpclass(nan inf) %48, float noundef nofpclass(nan inf) %52) #13
  %84 = fadd fast float %48, %47
  tail call void @glVertex2f(float noundef nofpclass(nan inf) %84, float noundef nofpclass(nan inf) %52) #13
  %85 = fadd fast float %52, %51
  tail call void @glVertex2f(float noundef nofpclass(nan inf) %84, float noundef nofpclass(nan inf) %85) #13
  tail call void @glVertex2f(float noundef nofpclass(nan inf) %48, float noundef nofpclass(nan inf) %85) #13
  tail call void @glEnd() #13
  tail call void @glMatrixMode(i32 noundef 5888) #13
  tail call void @glPopMatrix() #13
  tail call void @BKE_image_release_ibuf(ptr noundef %5, ptr noundef %8, ptr noundef null) #13
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @drawlamp(ptr noundef %0, ptr noundef %1, ptr noundef %2, i8 noundef zeroext %3, i16 noundef signext %4, ptr noundef %5, i8 noundef zeroext %6) unnamed_addr #0 {
  %8 = alloca [3 x float], align 8
  %9 = alloca [3 x float], align 8
  %10 = alloca [3 x [3 x float]], align 16
  %11 = alloca [3 x [3 x float]], align 16
  %12 = alloca [3 x [3 x float]], align 16
  %13 = alloca [3 x [3 x float]], align 16
  %14 = alloca [4 x float], align 16
  %15 = alloca [32 x [3 x float]], align 16
  %16 = alloca [32 x [3 x float]], align 16
  %17 = alloca [32 x [3 x float]], align 16
  %18 = alloca [32 x [3 x float]], align 16
  %19 = alloca [32 x [3 x float]], align 16
  %20 = alloca [32 x [3 x float]], align 16
  %21 = alloca [32 x [3 x float]], align 16
  %22 = alloca [3 x float], align 8
  %23 = alloca [3 x float], align 8
  %24 = alloca [3 x float], align 8
  %25 = alloca [4 x [4 x float]], align 16
  %26 = alloca [4 x i8], align 1
  %27 = alloca [4 x i8], align 1
  %28 = alloca [3 x float], align 8
  %29 = alloca [3 x float], align 8
  %30 = alloca [3 x [3 x float]], align 16
  %31 = alloca [3 x float], align 4
  %32 = alloca [3 x float], align 4
  %33 = alloca [3 x float], align 4
  %34 = alloca [3 x float], align 4
  %35 = getelementptr inbounds %struct.Base, ptr %2, i64 0, i32 7
  %36 = load ptr, ptr %35, align 8, !tbaa !38
  %37 = getelementptr inbounds %struct.Object, ptr %36, i64 0, i32 47
  %38 = getelementptr inbounds %struct.Object, ptr %36, i64 0, i32 47, i64 3
  %39 = tail call fast nofpclass(nan inf) float @ED_view3d_pixel_size(ptr noundef %1, ptr noundef nonnull %38) #13
  %40 = getelementptr inbounds %struct.Object, ptr %36, i64 0, i32 19
  %41 = load ptr, ptr %40, align 8, !tbaa !90
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %22) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %23) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %24) #13
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %25) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %26) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %27) #13
  %42 = getelementptr inbounds %struct.RegionView3D, ptr %1, i64 0, i32 25
  %43 = load i8, ptr %42, align 1, !tbaa !102
  %44 = icmp eq i8 %43, 2
  br i1 %44, label %45, label %50

45:                                               ; preds = %7
  %46 = getelementptr inbounds %struct.View3D, ptr %0, i64 0, i32 15
  %47 = load ptr, ptr %46, align 8, !tbaa !103
  %48 = load ptr, ptr %35, align 8, !tbaa !38
  %49 = icmp eq ptr %47, %48
  br label %50

50:                                               ; preds = %45, %7
  %51 = phi i1 [ false, %7 ], [ %49, %45 ]
  %52 = icmp ugt i8 %3, 2
  br i1 %52, label %53, label %78

53:                                               ; preds = %50
  %54 = load i32, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 15), align 8, !tbaa !16
  %55 = and i32 %54, 32
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %78

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 2
  %59 = load i16, ptr %58, align 8, !tbaa !409
  %60 = icmp eq i16 %59, 2
  br i1 %60, label %61, label %78

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 4
  %63 = load i32, ptr %62, align 4, !tbaa !411
  %64 = and i32 %63, 131072
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %78, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct.Base, ptr %2, i64 0, i32 4
  %68 = load i32, ptr %67, align 8, !tbaa !71
  %69 = and i32 %68, 512
  %70 = icmp ne i32 %69, 0
  %71 = select i1 %70, i1 true, i1 %51
  br i1 %71, label %78, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %struct.View3D, ptr %0, i64 0, i32 48
  %74 = load i8, ptr %73, align 1, !tbaa !73
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.View3D, ptr %0, i64 0, i32 44
  tail call void @ED_view3d_after_add(ptr noundef nonnull %77, ptr noundef nonnull %2, i16 noundef signext %4) #13
  br label %1213

78:                                               ; preds = %50, %53, %57, %61, %72, %66
  %79 = phi i1 [ true, %72 ], [ false, %66 ], [ false, %61 ], [ false, %57 ], [ false, %53 ], [ false, %50 ]
  tail call void @glPushMatrix() #13
  %80 = getelementptr inbounds %struct.RegionView3D, ptr %1, i64 0, i32 1
  tail call void @glLoadMatrixf(ptr noundef nonnull %80) #13
  %81 = load i16, ptr getelementptr inbounds (%struct.UserDef, ptr @U, i64 0, i32 67), align 4, !tbaa !412
  %82 = sitofp i16 %81 to float
  %83 = fmul fast float %39, 5.000000e-01
  %84 = fmul fast float %83, %82
  %85 = getelementptr inbounds %struct.RegionView3D, ptr %1, i64 0, i32 2
  call void @copy_m4_m4(ptr noundef nonnull %25, ptr noundef nonnull %85) #13
  %86 = getelementptr inbounds float, ptr %25, i64 1
  %87 = load <2 x float>, ptr %25, align 16, !tbaa !44
  %88 = fmul fast <2 x float> %87, %87
  %89 = shufflevector <2 x float> %88, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %90 = fadd fast <2 x float> %89, %88
  %91 = extractelement <2 x float> %90, i64 0
  %92 = getelementptr inbounds float, ptr %25, i64 2
  %93 = load float, ptr %92, align 8, !tbaa !44
  %94 = fmul fast float %93, %93
  %95 = fadd fast float %91, %94
  %96 = fcmp fast ogt float %95, 0x38AA95A5C0000000
  br i1 %96, label %97, label %104

97:                                               ; preds = %78
  %98 = call fast float @llvm.sqrt.f32(float %95)
  %99 = fdiv fast float 1.000000e+00, %98
  %100 = insertelement <2 x float> poison, float %99, i64 0
  %101 = shufflevector <2 x float> %100, <2 x float> poison, <2 x i32> zeroinitializer
  %102 = fmul fast <2 x float> %101, %87
  %103 = fmul fast float %99, %93
  br label %104

104:                                              ; preds = %78, %97
  %105 = phi float [ %103, %97 ], [ 0.000000e+00, %78 ]
  %106 = phi <2 x float> [ %102, %97 ], [ zeroinitializer, %78 ]
  store <2 x float> %106, ptr %25, align 16
  store float %105, ptr %92, align 8
  %107 = getelementptr inbounds [4 x [4 x float]], ptr %25, i64 0, i64 1
  %108 = getelementptr inbounds [4 x [4 x float]], ptr %25, i64 0, i64 1, i64 1
  %109 = load <2 x float>, ptr %107, align 16, !tbaa !44
  %110 = fmul fast <2 x float> %109, %109
  %111 = shufflevector <2 x float> %110, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %112 = fadd fast <2 x float> %111, %110
  %113 = extractelement <2 x float> %112, i64 0
  %114 = getelementptr inbounds [4 x [4 x float]], ptr %25, i64 0, i64 1, i64 2
  %115 = load float, ptr %114, align 8, !tbaa !44
  %116 = fmul fast float %115, %115
  %117 = fadd fast float %113, %116
  %118 = fcmp fast ogt float %117, 0x38AA95A5C0000000
  br i1 %118, label %119, label %126

119:                                              ; preds = %104
  %120 = call fast float @llvm.sqrt.f32(float %117)
  %121 = fdiv fast float 1.000000e+00, %120
  %122 = insertelement <2 x float> poison, float %121, i64 0
  %123 = shufflevector <2 x float> %122, <2 x float> poison, <2 x i32> zeroinitializer
  %124 = fmul fast <2 x float> %123, %109
  %125 = fmul fast float %121, %115
  br label %126

126:                                              ; preds = %104, %119
  %127 = phi float [ %125, %119 ], [ 0.000000e+00, %104 ]
  %128 = phi <2 x float> [ %124, %119 ], [ zeroinitializer, %104 ]
  store <2 x float> %128, ptr %107, align 16
  store float %127, ptr %114, align 8
  %129 = getelementptr inbounds float, ptr %22, i64 1
  %130 = load <2 x float>, ptr %38, align 4, !tbaa !44
  store <2 x float> %130, ptr %22, align 8, !tbaa !44
  %131 = getelementptr inbounds %struct.Object, ptr %36, i64 0, i32 47, i64 3, i64 2
  %132 = load float, ptr %131, align 4, !tbaa !44
  %133 = getelementptr inbounds float, ptr %22, i64 2
  store float %132, ptr %133, align 8, !tbaa !44
  %134 = and i16 %4, 2
  %135 = icmp eq i16 %134, 0
  br i1 %135, label %136, label %146

136:                                              ; preds = %126
  %137 = load i8, ptr %5, align 1, !tbaa !50
  store i8 %137, ptr %26, align 1, !tbaa !50
  %138 = getelementptr inbounds i8, ptr %5, i64 1
  %139 = load i8, ptr %138, align 1, !tbaa !50
  %140 = getelementptr inbounds [4 x i8], ptr %26, i64 0, i64 1
  store i8 %139, ptr %140, align 1, !tbaa !50
  %141 = getelementptr inbounds i8, ptr %5, i64 2
  %142 = load i8, ptr %141, align 1, !tbaa !50
  %143 = getelementptr inbounds [4 x i8], ptr %26, i64 0, i64 2
  store i8 %142, ptr %143, align 1, !tbaa !50
  %144 = getelementptr inbounds [4 x i8], ptr %26, i64 0, i64 3
  store i8 -102, ptr %144, align 1, !tbaa !50
  call void @glColor4ubv(ptr noundef nonnull %26) #13
  %145 = fcmp fast ogt float %84, 0.000000e+00
  br i1 %145, label %148, label %772

146:                                              ; preds = %126
  %147 = fcmp fast ogt float %84, 0.000000e+00
  br i1 %147, label %361, label %772

148:                                              ; preds = %136
  %149 = getelementptr inbounds %struct.ID, ptr %36, i64 0, i32 6
  %150 = load i32, ptr %149, align 4, !tbaa !270
  %151 = icmp sgt i32 %150, 1
  br i1 %151, label %152, label %161

152:                                              ; preds = %148
  %153 = icmp eq i8 %6, 0
  br i1 %153, label %154, label %159

154:                                              ; preds = %152
  %155 = getelementptr inbounds %struct.Object, ptr %36, i64 0, i32 53
  %156 = load i16, ptr %155, align 4, !tbaa !80
  %157 = and i16 %156, 1
  %158 = icmp eq i16 %157, 0
  br i1 %158, label %160, label %159

159:                                              ; preds = %154, %152
  call void @glColor4ub(i8 noundef zeroext -120, i8 noundef zeroext -1, i8 noundef zeroext -1, i8 noundef zeroext -101) #13
  br label %161

160:                                              ; preds = %154
  call void @glColor4ub(i8 noundef zeroext 119, i8 noundef zeroext -52, i8 noundef zeroext -52, i8 noundef zeroext -101) #13
  br label %161

161:                                              ; preds = %148, %160, %159
  call void @glEnable(i32 noundef 3042) #13
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %21) #13
  %162 = load float, ptr %133, align 8, !tbaa !44
  %163 = insertelement <8 x float> poison, float %162, i64 0
  %164 = shufflevector <8 x float> %163, <8 x float> poison, <8 x i32> zeroinitializer
  %165 = load <8 x float>, ptr %114, align 8
  %166 = shufflevector <8 x float> %165, <8 x float> poison, <8 x i32> zeroinitializer
  %167 = load <8 x float>, ptr %92, align 8
  %168 = shufflevector <8 x float> %167, <8 x float> poison, <8 x i32> zeroinitializer
  %169 = load float, ptr %129, align 4, !tbaa !44
  %170 = insertelement <8 x float> poison, float %169, i64 0
  %171 = shufflevector <8 x float> %170, <8 x float> poison, <8 x i32> zeroinitializer
  %172 = load <8 x float>, ptr %108, align 4
  %173 = shufflevector <8 x float> %172, <8 x float> poison, <8 x i32> zeroinitializer
  %174 = load <8 x float>, ptr %86, align 4
  %175 = shufflevector <8 x float> %174, <8 x float> poison, <8 x i32> zeroinitializer
  %176 = load float, ptr %22, align 8, !tbaa !44
  %177 = insertelement <8 x float> poison, float %176, i64 0
  %178 = shufflevector <8 x float> %177, <8 x float> poison, <8 x i32> zeroinitializer
  %179 = insertelement <8 x float> poison, float %84, i64 0
  %180 = shufflevector <8 x float> %179, <8 x float> poison, <8 x i32> zeroinitializer
  %181 = load <8 x float>, ptr %107, align 16
  %182 = shufflevector <8 x float> %181, <8 x float> poison, <8 x i32> zeroinitializer
  %183 = load <8 x float>, ptr %25, align 16
  %184 = shufflevector <8 x float> %183, <8 x float> poison, <8 x i32> zeroinitializer
  %185 = fmul fast <8 x float> %184, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %186 = fmul fast <8 x float> %182, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %187 = fadd fast <8 x float> %186, %185
  %188 = fmul fast <8 x float> %187, %180
  %189 = fadd fast <8 x float> %188, %178
  %190 = fmul fast <8 x float> %175, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %191 = fmul fast <8 x float> %173, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %192 = fadd fast <8 x float> %191, %190
  %193 = fmul fast <8 x float> %192, %180
  %194 = fadd fast <8 x float> %193, %171
  %195 = fmul fast <8 x float> %168, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %196 = fmul fast <8 x float> %166, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %197 = fadd fast <8 x float> %196, %195
  %198 = fmul fast <8 x float> %197, %180
  %199 = fadd fast <8 x float> %198, %164
  %200 = shufflevector <8 x float> %189, <8 x float> %194, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %201 = shufflevector <8 x float> %199, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %202 = shufflevector <16 x float> %200, <16 x float> %201, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %202, ptr %21, align 16, !tbaa !44
  %203 = getelementptr inbounds i8, ptr %21, i64 96
  %204 = fmul fast <8 x float> %184, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %205 = fmul fast <8 x float> %182, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %206 = fadd fast <8 x float> %205, %204
  %207 = fmul fast <8 x float> %206, %180
  %208 = fadd fast <8 x float> %207, %178
  %209 = fmul fast <8 x float> %175, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %210 = fmul fast <8 x float> %173, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %211 = fadd fast <8 x float> %210, %209
  %212 = fmul fast <8 x float> %211, %180
  %213 = fadd fast <8 x float> %212, %171
  %214 = fmul fast <8 x float> %168, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %215 = fmul fast <8 x float> %166, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %216 = fadd fast <8 x float> %215, %214
  %217 = fmul fast <8 x float> %216, %180
  %218 = fadd fast <8 x float> %217, %164
  %219 = shufflevector <8 x float> %208, <8 x float> %213, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %220 = shufflevector <8 x float> %218, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %221 = shufflevector <16 x float> %219, <16 x float> %220, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %221, ptr %203, align 16, !tbaa !44
  %222 = getelementptr inbounds i8, ptr %21, i64 192
  %223 = fmul fast <8 x float> %184, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %224 = fmul fast <8 x float> %182, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %225 = fadd fast <8 x float> %224, %223
  %226 = fmul fast <8 x float> %225, %180
  %227 = fadd fast <8 x float> %226, %178
  %228 = fmul fast <8 x float> %175, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %229 = fmul fast <8 x float> %173, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %230 = fadd fast <8 x float> %229, %228
  %231 = fmul fast <8 x float> %230, %180
  %232 = fadd fast <8 x float> %231, %171
  %233 = fmul fast <8 x float> %168, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %234 = fmul fast <8 x float> %166, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %235 = fadd fast <8 x float> %234, %233
  %236 = fmul fast <8 x float> %235, %180
  %237 = fadd fast <8 x float> %236, %164
  %238 = shufflevector <8 x float> %227, <8 x float> %232, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %239 = shufflevector <8 x float> %237, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %240 = shufflevector <16 x float> %238, <16 x float> %239, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %240, ptr %222, align 16, !tbaa !44
  %241 = getelementptr inbounds i8, ptr %21, i64 288
  %242 = fmul fast <8 x float> %184, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %243 = fmul fast <8 x float> %182, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %244 = fadd fast <8 x float> %243, %242
  %245 = fmul fast <8 x float> %244, %180
  %246 = fadd fast <8 x float> %245, %178
  %247 = fmul fast <8 x float> %175, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %248 = fmul fast <8 x float> %173, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %249 = fadd fast <8 x float> %248, %247
  %250 = fmul fast <8 x float> %249, %180
  %251 = fadd fast <8 x float> %250, %171
  %252 = fmul fast <8 x float> %168, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %253 = fmul fast <8 x float> %166, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %254 = fadd fast <8 x float> %253, %252
  %255 = fmul fast <8 x float> %254, %180
  %256 = fadd fast <8 x float> %255, %164
  %257 = shufflevector <8 x float> %246, <8 x float> %251, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %258 = shufflevector <8 x float> %256, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %259 = shufflevector <16 x float> %257, <16 x float> %258, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %259, ptr %241, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %21) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %21) #13
  call void @glDisable(i32 noundef 3042) #13
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %20) #13
  %260 = load float, ptr %133, align 8, !tbaa !44
  %261 = insertelement <8 x float> poison, float %260, i64 0
  %262 = shufflevector <8 x float> %261, <8 x float> poison, <8 x i32> zeroinitializer
  %263 = load <8 x float>, ptr %114, align 8
  %264 = shufflevector <8 x float> %263, <8 x float> poison, <8 x i32> zeroinitializer
  %265 = load <8 x float>, ptr %92, align 8
  %266 = shufflevector <8 x float> %265, <8 x float> poison, <8 x i32> zeroinitializer
  %267 = load float, ptr %129, align 4, !tbaa !44
  %268 = insertelement <8 x float> poison, float %267, i64 0
  %269 = shufflevector <8 x float> %268, <8 x float> poison, <8 x i32> zeroinitializer
  %270 = load <8 x float>, ptr %108, align 4
  %271 = shufflevector <8 x float> %270, <8 x float> poison, <8 x i32> zeroinitializer
  %272 = load <8 x float>, ptr %86, align 4
  %273 = shufflevector <8 x float> %272, <8 x float> poison, <8 x i32> zeroinitializer
  %274 = load float, ptr %22, align 8, !tbaa !44
  %275 = insertelement <8 x float> poison, float %274, i64 0
  %276 = shufflevector <8 x float> %275, <8 x float> poison, <8 x i32> zeroinitializer
  %277 = insertelement <8 x float> poison, float %84, i64 0
  %278 = shufflevector <8 x float> %277, <8 x float> poison, <8 x i32> zeroinitializer
  %279 = load <8 x float>, ptr %107, align 16
  %280 = shufflevector <8 x float> %279, <8 x float> poison, <8 x i32> zeroinitializer
  %281 = load <8 x float>, ptr %25, align 16
  %282 = shufflevector <8 x float> %281, <8 x float> poison, <8 x i32> zeroinitializer
  %283 = fmul fast <8 x float> %282, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %284 = fmul fast <8 x float> %280, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %285 = fadd fast <8 x float> %284, %283
  %286 = fmul fast <8 x float> %285, %278
  %287 = fadd fast <8 x float> %286, %276
  %288 = fmul fast <8 x float> %273, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %289 = fmul fast <8 x float> %271, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %290 = fadd fast <8 x float> %289, %288
  %291 = fmul fast <8 x float> %290, %278
  %292 = fadd fast <8 x float> %291, %269
  %293 = fmul fast <8 x float> %266, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %294 = fmul fast <8 x float> %264, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %295 = fadd fast <8 x float> %294, %293
  %296 = fmul fast <8 x float> %295, %278
  %297 = fadd fast <8 x float> %296, %262
  %298 = shufflevector <8 x float> %287, <8 x float> %292, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %299 = shufflevector <8 x float> %297, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %300 = shufflevector <16 x float> %298, <16 x float> %299, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %300, ptr %20, align 16, !tbaa !44
  %301 = getelementptr inbounds i8, ptr %20, i64 96
  %302 = fmul fast <8 x float> %282, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %303 = fmul fast <8 x float> %280, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %304 = fadd fast <8 x float> %303, %302
  %305 = fmul fast <8 x float> %304, %278
  %306 = fadd fast <8 x float> %305, %276
  %307 = fmul fast <8 x float> %273, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %308 = fmul fast <8 x float> %271, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %309 = fadd fast <8 x float> %308, %307
  %310 = fmul fast <8 x float> %309, %278
  %311 = fadd fast <8 x float> %310, %269
  %312 = fmul fast <8 x float> %266, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %313 = fmul fast <8 x float> %264, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %314 = fadd fast <8 x float> %313, %312
  %315 = fmul fast <8 x float> %314, %278
  %316 = fadd fast <8 x float> %315, %262
  %317 = shufflevector <8 x float> %306, <8 x float> %311, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %318 = shufflevector <8 x float> %316, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %319 = shufflevector <16 x float> %317, <16 x float> %318, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %319, ptr %301, align 16, !tbaa !44
  %320 = getelementptr inbounds i8, ptr %20, i64 192
  %321 = fmul fast <8 x float> %282, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %322 = fmul fast <8 x float> %280, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %323 = fadd fast <8 x float> %322, %321
  %324 = fmul fast <8 x float> %323, %278
  %325 = fadd fast <8 x float> %324, %276
  %326 = fmul fast <8 x float> %273, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %327 = fmul fast <8 x float> %271, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %328 = fadd fast <8 x float> %327, %326
  %329 = fmul fast <8 x float> %328, %278
  %330 = fadd fast <8 x float> %329, %269
  %331 = fmul fast <8 x float> %266, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %332 = fmul fast <8 x float> %264, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %333 = fadd fast <8 x float> %332, %331
  %334 = fmul fast <8 x float> %333, %278
  %335 = fadd fast <8 x float> %334, %262
  %336 = shufflevector <8 x float> %325, <8 x float> %330, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %337 = shufflevector <8 x float> %335, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %338 = shufflevector <16 x float> %336, <16 x float> %337, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %338, ptr %320, align 16, !tbaa !44
  %339 = getelementptr inbounds i8, ptr %20, i64 288
  %340 = fmul fast <8 x float> %282, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %341 = fmul fast <8 x float> %280, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %342 = fadd fast <8 x float> %341, %340
  %343 = fmul fast <8 x float> %342, %278
  %344 = fadd fast <8 x float> %343, %276
  %345 = fmul fast <8 x float> %273, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %346 = fmul fast <8 x float> %271, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %347 = fadd fast <8 x float> %346, %345
  %348 = fmul fast <8 x float> %347, %278
  %349 = fadd fast <8 x float> %348, %269
  %350 = fmul fast <8 x float> %266, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %351 = fmul fast <8 x float> %264, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %352 = fadd fast <8 x float> %351, %350
  %353 = fmul fast <8 x float> %352, %278
  %354 = fadd fast <8 x float> %353, %262
  %355 = shufflevector <8 x float> %344, <8 x float> %349, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %356 = shufflevector <8 x float> %354, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %357 = shufflevector <16 x float> %355, <16 x float> %356, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %357, ptr %339, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %20) #13
  call void @glDrawArrays(i32 noundef 9, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %20) #13
  %358 = load i32, ptr %149, align 4, !tbaa !270
  %359 = icmp sgt i32 %358, 1
  br i1 %359, label %360, label %558

360:                                              ; preds = %161
  call void @glColor4ubv(ptr noundef nonnull %26) #13
  br label %558

361:                                              ; preds = %146
  call void @glEnable(i32 noundef 3042) #13
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %19) #13
  %362 = load float, ptr %133, align 8, !tbaa !44
  %363 = insertelement <8 x float> poison, float %362, i64 0
  %364 = shufflevector <8 x float> %363, <8 x float> poison, <8 x i32> zeroinitializer
  %365 = load <8 x float>, ptr %114, align 8
  %366 = shufflevector <8 x float> %365, <8 x float> poison, <8 x i32> zeroinitializer
  %367 = load <8 x float>, ptr %92, align 8
  %368 = shufflevector <8 x float> %367, <8 x float> poison, <8 x i32> zeroinitializer
  %369 = load float, ptr %129, align 4, !tbaa !44
  %370 = insertelement <8 x float> poison, float %369, i64 0
  %371 = shufflevector <8 x float> %370, <8 x float> poison, <8 x i32> zeroinitializer
  %372 = load <8 x float>, ptr %108, align 4
  %373 = shufflevector <8 x float> %372, <8 x float> poison, <8 x i32> zeroinitializer
  %374 = load <8 x float>, ptr %86, align 4
  %375 = shufflevector <8 x float> %374, <8 x float> poison, <8 x i32> zeroinitializer
  %376 = load float, ptr %22, align 8, !tbaa !44
  %377 = insertelement <8 x float> poison, float %376, i64 0
  %378 = shufflevector <8 x float> %377, <8 x float> poison, <8 x i32> zeroinitializer
  %379 = insertelement <8 x float> poison, float %84, i64 0
  %380 = shufflevector <8 x float> %379, <8 x float> poison, <8 x i32> zeroinitializer
  %381 = load <8 x float>, ptr %107, align 16
  %382 = shufflevector <8 x float> %381, <8 x float> poison, <8 x i32> zeroinitializer
  %383 = load <8 x float>, ptr %25, align 16
  %384 = shufflevector <8 x float> %383, <8 x float> poison, <8 x i32> zeroinitializer
  %385 = fmul fast <8 x float> %384, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %386 = fmul fast <8 x float> %382, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %387 = fadd fast <8 x float> %386, %385
  %388 = fmul fast <8 x float> %387, %380
  %389 = fadd fast <8 x float> %388, %378
  %390 = fmul fast <8 x float> %375, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %391 = fmul fast <8 x float> %373, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %392 = fadd fast <8 x float> %391, %390
  %393 = fmul fast <8 x float> %392, %380
  %394 = fadd fast <8 x float> %393, %371
  %395 = fmul fast <8 x float> %368, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %396 = fmul fast <8 x float> %366, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %397 = fadd fast <8 x float> %396, %395
  %398 = fmul fast <8 x float> %397, %380
  %399 = fadd fast <8 x float> %398, %364
  %400 = shufflevector <8 x float> %389, <8 x float> %394, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %401 = shufflevector <8 x float> %399, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %402 = shufflevector <16 x float> %400, <16 x float> %401, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %402, ptr %19, align 16, !tbaa !44
  %403 = getelementptr inbounds i8, ptr %19, i64 96
  %404 = fmul fast <8 x float> %384, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %405 = fmul fast <8 x float> %382, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %406 = fadd fast <8 x float> %405, %404
  %407 = fmul fast <8 x float> %406, %380
  %408 = fadd fast <8 x float> %407, %378
  %409 = fmul fast <8 x float> %375, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %410 = fmul fast <8 x float> %373, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %411 = fadd fast <8 x float> %410, %409
  %412 = fmul fast <8 x float> %411, %380
  %413 = fadd fast <8 x float> %412, %371
  %414 = fmul fast <8 x float> %368, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %415 = fmul fast <8 x float> %366, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %416 = fadd fast <8 x float> %415, %414
  %417 = fmul fast <8 x float> %416, %380
  %418 = fadd fast <8 x float> %417, %364
  %419 = shufflevector <8 x float> %408, <8 x float> %413, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %420 = shufflevector <8 x float> %418, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %421 = shufflevector <16 x float> %419, <16 x float> %420, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %421, ptr %403, align 16, !tbaa !44
  %422 = getelementptr inbounds i8, ptr %19, i64 192
  %423 = fmul fast <8 x float> %384, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %424 = fmul fast <8 x float> %382, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %425 = fadd fast <8 x float> %424, %423
  %426 = fmul fast <8 x float> %425, %380
  %427 = fadd fast <8 x float> %426, %378
  %428 = fmul fast <8 x float> %375, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %429 = fmul fast <8 x float> %373, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %430 = fadd fast <8 x float> %429, %428
  %431 = fmul fast <8 x float> %430, %380
  %432 = fadd fast <8 x float> %431, %371
  %433 = fmul fast <8 x float> %368, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %434 = fmul fast <8 x float> %366, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %435 = fadd fast <8 x float> %434, %433
  %436 = fmul fast <8 x float> %435, %380
  %437 = fadd fast <8 x float> %436, %364
  %438 = shufflevector <8 x float> %427, <8 x float> %432, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %439 = shufflevector <8 x float> %437, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %440 = shufflevector <16 x float> %438, <16 x float> %439, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %440, ptr %422, align 16, !tbaa !44
  %441 = getelementptr inbounds i8, ptr %19, i64 288
  %442 = fmul fast <8 x float> %384, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %443 = fmul fast <8 x float> %382, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %444 = fadd fast <8 x float> %443, %442
  %445 = fmul fast <8 x float> %444, %380
  %446 = fadd fast <8 x float> %445, %378
  %447 = fmul fast <8 x float> %375, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %448 = fmul fast <8 x float> %373, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %449 = fadd fast <8 x float> %448, %447
  %450 = fmul fast <8 x float> %449, %380
  %451 = fadd fast <8 x float> %450, %371
  %452 = fmul fast <8 x float> %368, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %453 = fmul fast <8 x float> %366, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %454 = fadd fast <8 x float> %453, %452
  %455 = fmul fast <8 x float> %454, %380
  %456 = fadd fast <8 x float> %455, %364
  %457 = shufflevector <8 x float> %446, <8 x float> %451, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %458 = shufflevector <8 x float> %456, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %459 = shufflevector <16 x float> %457, <16 x float> %458, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %459, ptr %441, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %19) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %19) #13
  call void @glDisable(i32 noundef 3042) #13
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %18) #13
  %460 = load float, ptr %133, align 8, !tbaa !44
  %461 = insertelement <8 x float> poison, float %460, i64 0
  %462 = shufflevector <8 x float> %461, <8 x float> poison, <8 x i32> zeroinitializer
  %463 = load <8 x float>, ptr %114, align 8
  %464 = shufflevector <8 x float> %463, <8 x float> poison, <8 x i32> zeroinitializer
  %465 = load <8 x float>, ptr %92, align 8
  %466 = shufflevector <8 x float> %465, <8 x float> poison, <8 x i32> zeroinitializer
  %467 = load float, ptr %129, align 4, !tbaa !44
  %468 = insertelement <8 x float> poison, float %467, i64 0
  %469 = shufflevector <8 x float> %468, <8 x float> poison, <8 x i32> zeroinitializer
  %470 = load <8 x float>, ptr %108, align 4
  %471 = shufflevector <8 x float> %470, <8 x float> poison, <8 x i32> zeroinitializer
  %472 = load <8 x float>, ptr %86, align 4
  %473 = shufflevector <8 x float> %472, <8 x float> poison, <8 x i32> zeroinitializer
  %474 = load float, ptr %22, align 8, !tbaa !44
  %475 = insertelement <8 x float> poison, float %474, i64 0
  %476 = shufflevector <8 x float> %475, <8 x float> poison, <8 x i32> zeroinitializer
  %477 = insertelement <8 x float> poison, float %84, i64 0
  %478 = shufflevector <8 x float> %477, <8 x float> poison, <8 x i32> zeroinitializer
  %479 = load <8 x float>, ptr %107, align 16
  %480 = shufflevector <8 x float> %479, <8 x float> poison, <8 x i32> zeroinitializer
  %481 = load <8 x float>, ptr %25, align 16
  %482 = shufflevector <8 x float> %481, <8 x float> poison, <8 x i32> zeroinitializer
  %483 = fmul fast <8 x float> %482, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %484 = fmul fast <8 x float> %480, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %485 = fadd fast <8 x float> %484, %483
  %486 = fmul fast <8 x float> %485, %478
  %487 = fadd fast <8 x float> %486, %476
  %488 = fmul fast <8 x float> %473, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %489 = fmul fast <8 x float> %471, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %490 = fadd fast <8 x float> %489, %488
  %491 = fmul fast <8 x float> %490, %478
  %492 = fadd fast <8 x float> %491, %469
  %493 = fmul fast <8 x float> %466, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %494 = fmul fast <8 x float> %464, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %495 = fadd fast <8 x float> %494, %493
  %496 = fmul fast <8 x float> %495, %478
  %497 = fadd fast <8 x float> %496, %462
  %498 = shufflevector <8 x float> %487, <8 x float> %492, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %499 = shufflevector <8 x float> %497, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %500 = shufflevector <16 x float> %498, <16 x float> %499, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %500, ptr %18, align 16, !tbaa !44
  %501 = getelementptr inbounds i8, ptr %18, i64 96
  %502 = fmul fast <8 x float> %482, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %503 = fmul fast <8 x float> %480, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %504 = fadd fast <8 x float> %503, %502
  %505 = fmul fast <8 x float> %504, %478
  %506 = fadd fast <8 x float> %505, %476
  %507 = fmul fast <8 x float> %473, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %508 = fmul fast <8 x float> %471, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %509 = fadd fast <8 x float> %508, %507
  %510 = fmul fast <8 x float> %509, %478
  %511 = fadd fast <8 x float> %510, %469
  %512 = fmul fast <8 x float> %466, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %513 = fmul fast <8 x float> %464, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %514 = fadd fast <8 x float> %513, %512
  %515 = fmul fast <8 x float> %514, %478
  %516 = fadd fast <8 x float> %515, %462
  %517 = shufflevector <8 x float> %506, <8 x float> %511, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %518 = shufflevector <8 x float> %516, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %519 = shufflevector <16 x float> %517, <16 x float> %518, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %519, ptr %501, align 16, !tbaa !44
  %520 = getelementptr inbounds i8, ptr %18, i64 192
  %521 = fmul fast <8 x float> %482, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %522 = fmul fast <8 x float> %480, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %523 = fadd fast <8 x float> %522, %521
  %524 = fmul fast <8 x float> %523, %478
  %525 = fadd fast <8 x float> %524, %476
  %526 = fmul fast <8 x float> %473, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %527 = fmul fast <8 x float> %471, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %528 = fadd fast <8 x float> %527, %526
  %529 = fmul fast <8 x float> %528, %478
  %530 = fadd fast <8 x float> %529, %469
  %531 = fmul fast <8 x float> %466, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %532 = fmul fast <8 x float> %464, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %533 = fadd fast <8 x float> %532, %531
  %534 = fmul fast <8 x float> %533, %478
  %535 = fadd fast <8 x float> %534, %462
  %536 = shufflevector <8 x float> %525, <8 x float> %530, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %537 = shufflevector <8 x float> %535, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %538 = shufflevector <16 x float> %536, <16 x float> %537, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %538, ptr %520, align 16, !tbaa !44
  %539 = getelementptr inbounds i8, ptr %18, i64 288
  %540 = fmul fast <8 x float> %482, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %541 = fmul fast <8 x float> %480, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %542 = fadd fast <8 x float> %541, %540
  %543 = fmul fast <8 x float> %542, %478
  %544 = fadd fast <8 x float> %543, %476
  %545 = fmul fast <8 x float> %473, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %546 = fmul fast <8 x float> %471, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %547 = fadd fast <8 x float> %546, %545
  %548 = fmul fast <8 x float> %547, %478
  %549 = fadd fast <8 x float> %548, %469
  %550 = fmul fast <8 x float> %466, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %551 = fmul fast <8 x float> %464, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %552 = fadd fast <8 x float> %551, %550
  %553 = fmul fast <8 x float> %552, %478
  %554 = fadd fast <8 x float> %553, %462
  %555 = shufflevector <8 x float> %544, <8 x float> %549, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %556 = shufflevector <8 x float> %554, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %557 = shufflevector <16 x float> %555, <16 x float> %556, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %557, ptr %539, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %18) #13
  call void @glDrawArrays(i32 noundef 9, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %18) #13
  br label %558

558:                                              ; preds = %361, %161, %360
  %559 = fmul fast float %84, 3.000000e+00
  call void @setlinestyle(i32 noundef 3) #13
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %17) #13
  %560 = load float, ptr %133, align 8, !tbaa !44
  %561 = insertelement <8 x float> poison, float %560, i64 0
  %562 = shufflevector <8 x float> %561, <8 x float> poison, <8 x i32> zeroinitializer
  %563 = load <8 x float>, ptr %114, align 8
  %564 = shufflevector <8 x float> %563, <8 x float> poison, <8 x i32> zeroinitializer
  %565 = load <8 x float>, ptr %92, align 8
  %566 = shufflevector <8 x float> %565, <8 x float> poison, <8 x i32> zeroinitializer
  %567 = load float, ptr %129, align 4, !tbaa !44
  %568 = insertelement <8 x float> poison, float %567, i64 0
  %569 = shufflevector <8 x float> %568, <8 x float> poison, <8 x i32> zeroinitializer
  %570 = load <8 x float>, ptr %108, align 4
  %571 = shufflevector <8 x float> %570, <8 x float> poison, <8 x i32> zeroinitializer
  %572 = load <8 x float>, ptr %86, align 4
  %573 = shufflevector <8 x float> %572, <8 x float> poison, <8 x i32> zeroinitializer
  %574 = load float, ptr %22, align 8, !tbaa !44
  %575 = insertelement <8 x float> poison, float %574, i64 0
  %576 = shufflevector <8 x float> %575, <8 x float> poison, <8 x i32> zeroinitializer
  %577 = insertelement <8 x float> poison, float %559, i64 0
  %578 = shufflevector <8 x float> %577, <8 x float> poison, <8 x i32> zeroinitializer
  %579 = load <8 x float>, ptr %107, align 16
  %580 = shufflevector <8 x float> %579, <8 x float> poison, <8 x i32> zeroinitializer
  %581 = load <8 x float>, ptr %25, align 16
  %582 = shufflevector <8 x float> %581, <8 x float> poison, <8 x i32> zeroinitializer
  %583 = fmul fast <8 x float> %582, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %584 = fmul fast <8 x float> %580, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %585 = fadd fast <8 x float> %584, %583
  %586 = fmul fast <8 x float> %585, %578
  %587 = fadd fast <8 x float> %586, %576
  %588 = fmul fast <8 x float> %573, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %589 = fmul fast <8 x float> %571, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %590 = fadd fast <8 x float> %589, %588
  %591 = fmul fast <8 x float> %590, %578
  %592 = fadd fast <8 x float> %591, %569
  %593 = fmul fast <8 x float> %566, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %594 = fmul fast <8 x float> %564, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %595 = fadd fast <8 x float> %594, %593
  %596 = fmul fast <8 x float> %595, %578
  %597 = fadd fast <8 x float> %596, %562
  %598 = shufflevector <8 x float> %587, <8 x float> %592, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %599 = shufflevector <8 x float> %597, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %600 = shufflevector <16 x float> %598, <16 x float> %599, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %600, ptr %17, align 16, !tbaa !44
  %601 = getelementptr inbounds i8, ptr %17, i64 96
  %602 = fmul fast <8 x float> %582, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %603 = fmul fast <8 x float> %580, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %604 = fadd fast <8 x float> %603, %602
  %605 = fmul fast <8 x float> %604, %578
  %606 = fadd fast <8 x float> %605, %576
  %607 = fmul fast <8 x float> %573, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %608 = fmul fast <8 x float> %571, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %609 = fadd fast <8 x float> %608, %607
  %610 = fmul fast <8 x float> %609, %578
  %611 = fadd fast <8 x float> %610, %569
  %612 = fmul fast <8 x float> %566, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %613 = fmul fast <8 x float> %564, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %614 = fadd fast <8 x float> %613, %612
  %615 = fmul fast <8 x float> %614, %578
  %616 = fadd fast <8 x float> %615, %562
  %617 = shufflevector <8 x float> %606, <8 x float> %611, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %618 = shufflevector <8 x float> %616, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %619 = shufflevector <16 x float> %617, <16 x float> %618, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %619, ptr %601, align 16, !tbaa !44
  %620 = getelementptr inbounds i8, ptr %17, i64 192
  %621 = fmul fast <8 x float> %582, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %622 = fmul fast <8 x float> %580, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %623 = fadd fast <8 x float> %622, %621
  %624 = fmul fast <8 x float> %623, %578
  %625 = fadd fast <8 x float> %624, %576
  %626 = fmul fast <8 x float> %573, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %627 = fmul fast <8 x float> %571, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %628 = fadd fast <8 x float> %627, %626
  %629 = fmul fast <8 x float> %628, %578
  %630 = fadd fast <8 x float> %629, %569
  %631 = fmul fast <8 x float> %566, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %632 = fmul fast <8 x float> %564, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %633 = fadd fast <8 x float> %632, %631
  %634 = fmul fast <8 x float> %633, %578
  %635 = fadd fast <8 x float> %634, %562
  %636 = shufflevector <8 x float> %625, <8 x float> %630, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %637 = shufflevector <8 x float> %635, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %638 = shufflevector <16 x float> %636, <16 x float> %637, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %638, ptr %620, align 16, !tbaa !44
  %639 = getelementptr inbounds i8, ptr %17, i64 288
  %640 = fmul fast <8 x float> %582, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %641 = fmul fast <8 x float> %580, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %642 = fadd fast <8 x float> %641, %640
  %643 = fmul fast <8 x float> %642, %578
  %644 = fadd fast <8 x float> %643, %576
  %645 = fmul fast <8 x float> %573, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %646 = fmul fast <8 x float> %571, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %647 = fadd fast <8 x float> %646, %645
  %648 = fmul fast <8 x float> %647, %578
  %649 = fadd fast <8 x float> %648, %569
  %650 = fmul fast <8 x float> %566, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %651 = fmul fast <8 x float> %564, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %652 = fadd fast <8 x float> %651, %650
  %653 = fmul fast <8 x float> %652, %578
  %654 = fadd fast <8 x float> %653, %562
  %655 = shufflevector <8 x float> %644, <8 x float> %649, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %656 = shufflevector <8 x float> %654, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %657 = shufflevector <16 x float> %655, <16 x float> %656, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %657, ptr %639, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %17) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %17) #13
  %658 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 2
  %659 = load i16, ptr %658, align 8, !tbaa !409
  %660 = icmp eq i16 %659, 3
  br i1 %660, label %773, label %661

661:                                              ; preds = %558
  %662 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 4
  %663 = load i32, ptr %662, align 4, !tbaa !411
  %664 = and i32 %663, 8192
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %666, label %671

666:                                              ; preds = %661
  %667 = and i32 %663, 1
  %668 = icmp ne i32 %667, 0
  %669 = icmp eq i16 %659, 2
  %670 = and i1 %669, %668
  br i1 %670, label %671, label %773

671:                                              ; preds = %666, %661
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %16) #13
  %672 = load float, ptr %133, align 8, !tbaa !44
  %673 = insertelement <8 x float> poison, float %672, i64 0
  %674 = shufflevector <8 x float> %673, <8 x float> poison, <8 x i32> zeroinitializer
  %675 = load <8 x float>, ptr %114, align 8
  %676 = shufflevector <8 x float> %675, <8 x float> poison, <8 x i32> zeroinitializer
  %677 = load <8 x float>, ptr %92, align 8
  %678 = shufflevector <8 x float> %677, <8 x float> poison, <8 x i32> zeroinitializer
  %679 = load float, ptr %129, align 4, !tbaa !44
  %680 = insertelement <8 x float> poison, float %679, i64 0
  %681 = shufflevector <8 x float> %680, <8 x float> poison, <8 x i32> zeroinitializer
  %682 = load <8 x float>, ptr %108, align 4
  %683 = shufflevector <8 x float> %682, <8 x float> poison, <8 x i32> zeroinitializer
  %684 = load <8 x float>, ptr %86, align 4
  %685 = shufflevector <8 x float> %684, <8 x float> poison, <8 x i32> zeroinitializer
  %686 = load float, ptr %22, align 8, !tbaa !44
  %687 = insertelement <8 x float> poison, float %686, i64 0
  %688 = shufflevector <8 x float> %687, <8 x float> poison, <8 x i32> zeroinitializer
  %689 = fmul fast float %39, 3.000000e+00
  %690 = fadd fast float %559, %689
  %691 = insertelement <8 x float> poison, float %690, i64 0
  %692 = shufflevector <8 x float> %691, <8 x float> poison, <8 x i32> zeroinitializer
  %693 = load <8 x float>, ptr %107, align 16
  %694 = shufflevector <8 x float> %693, <8 x float> poison, <8 x i32> zeroinitializer
  %695 = load <8 x float>, ptr %25, align 16
  %696 = shufflevector <8 x float> %695, <8 x float> poison, <8 x i32> zeroinitializer
  %697 = fmul fast <8 x float> %696, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %698 = fmul fast <8 x float> %694, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %699 = fadd fast <8 x float> %698, %697
  %700 = fmul fast <8 x float> %699, %692
  %701 = fadd fast <8 x float> %700, %688
  %702 = fmul fast <8 x float> %685, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %703 = fmul fast <8 x float> %683, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %704 = fadd fast <8 x float> %703, %702
  %705 = fmul fast <8 x float> %704, %692
  %706 = fadd fast <8 x float> %705, %681
  %707 = fmul fast <8 x float> %678, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %708 = fmul fast <8 x float> %676, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %709 = fadd fast <8 x float> %708, %707
  %710 = fmul fast <8 x float> %709, %692
  %711 = fadd fast <8 x float> %710, %674
  %712 = shufflevector <8 x float> %701, <8 x float> %706, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %713 = shufflevector <8 x float> %711, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %714 = shufflevector <16 x float> %712, <16 x float> %713, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %714, ptr %16, align 16, !tbaa !44
  %715 = getelementptr inbounds i8, ptr %16, i64 96
  %716 = fmul fast <8 x float> %696, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %717 = fmul fast <8 x float> %694, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %718 = fadd fast <8 x float> %717, %716
  %719 = fmul fast <8 x float> %718, %692
  %720 = fadd fast <8 x float> %719, %688
  %721 = fmul fast <8 x float> %685, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %722 = fmul fast <8 x float> %683, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %723 = fadd fast <8 x float> %722, %721
  %724 = fmul fast <8 x float> %723, %692
  %725 = fadd fast <8 x float> %724, %681
  %726 = fmul fast <8 x float> %678, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %727 = fmul fast <8 x float> %676, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %728 = fadd fast <8 x float> %727, %726
  %729 = fmul fast <8 x float> %728, %692
  %730 = fadd fast <8 x float> %729, %674
  %731 = shufflevector <8 x float> %720, <8 x float> %725, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %732 = shufflevector <8 x float> %730, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %733 = shufflevector <16 x float> %731, <16 x float> %732, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %733, ptr %715, align 16, !tbaa !44
  %734 = getelementptr inbounds i8, ptr %16, i64 192
  %735 = fmul fast <8 x float> %696, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %736 = fmul fast <8 x float> %694, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %737 = fadd fast <8 x float> %736, %735
  %738 = fmul fast <8 x float> %737, %692
  %739 = fadd fast <8 x float> %738, %688
  %740 = fmul fast <8 x float> %685, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %741 = fmul fast <8 x float> %683, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %742 = fadd fast <8 x float> %741, %740
  %743 = fmul fast <8 x float> %742, %692
  %744 = fadd fast <8 x float> %743, %681
  %745 = fmul fast <8 x float> %678, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %746 = fmul fast <8 x float> %676, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %747 = fadd fast <8 x float> %746, %745
  %748 = fmul fast <8 x float> %747, %692
  %749 = fadd fast <8 x float> %748, %674
  %750 = shufflevector <8 x float> %739, <8 x float> %744, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %751 = shufflevector <8 x float> %749, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %752 = shufflevector <16 x float> %750, <16 x float> %751, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %752, ptr %734, align 16, !tbaa !44
  %753 = getelementptr inbounds i8, ptr %16, i64 288
  %754 = fmul fast <8 x float> %696, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %755 = fmul fast <8 x float> %694, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %756 = fadd fast <8 x float> %755, %754
  %757 = fmul fast <8 x float> %756, %692
  %758 = fadd fast <8 x float> %757, %688
  %759 = fmul fast <8 x float> %685, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %760 = fmul fast <8 x float> %683, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %761 = fadd fast <8 x float> %760, %759
  %762 = fmul fast <8 x float> %761, %692
  %763 = fadd fast <8 x float> %762, %681
  %764 = fmul fast <8 x float> %678, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %765 = fmul fast <8 x float> %676, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %766 = fadd fast <8 x float> %765, %764
  %767 = fmul fast <8 x float> %766, %692
  %768 = fadd fast <8 x float> %767, %674
  %769 = shufflevector <8 x float> %758, <8 x float> %763, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %770 = shufflevector <8 x float> %768, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %771 = shufflevector <16 x float> %769, <16 x float> %770, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %771, ptr %753, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %16) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %16) #13
  br label %773

772:                                              ; preds = %146, %136
  call void @setlinestyle(i32 noundef 3) #13
  br label %773

773:                                              ; preds = %558, %671, %666, %772
  %774 = phi float [ %559, %671 ], [ %559, %666 ], [ %559, %558 ], [ 0.000000e+00, %772 ]
  %775 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 2
  %776 = load i16, ptr %775, align 8, !tbaa !409
  %777 = icmp eq i16 %776, 1
  br i1 %777, label %778, label %804

778:                                              ; preds = %773
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %28) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %29) #13
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %30) #13
  %779 = getelementptr inbounds [4 x [4 x float]], ptr %25, i64 0, i64 2
  call void @axis_angle_normalized_to_mat3_ex(ptr noundef nonnull %30, ptr noundef nonnull %779, float noundef nofpclass(nan inf) 0x3FE6A09E60000000, float noundef nofpclass(nan inf) 0x3FE6A09E60000000) #13
  %780 = fmul fast float %774, 0x3FF3333340000000
  %781 = load <2 x float>, ptr %25, align 16, !tbaa !44
  %782 = insertelement <2 x float> poison, float %780, i64 0
  %783 = shufflevector <2 x float> %782, <2 x float> poison, <2 x i32> zeroinitializer
  %784 = fmul fast <2 x float> %781, %783
  store <2 x float> %784, ptr %28, align 8, !tbaa !44
  %785 = load float, ptr %92, align 8, !tbaa !44
  %786 = fmul fast float %785, %780
  %787 = getelementptr inbounds float, ptr %28, i64 2
  store float %786, ptr %787, align 8, !tbaa !44
  %788 = fmul fast float %774, 2.500000e+00
  %789 = insertelement <2 x float> poison, float %788, i64 0
  %790 = shufflevector <2 x float> %789, <2 x float> poison, <2 x i32> zeroinitializer
  %791 = fmul fast <2 x float> %781, %790
  store <2 x float> %791, ptr %29, align 8, !tbaa !44
  %792 = fmul fast float %785, %788
  %793 = getelementptr inbounds float, ptr %29, i64 2
  store float %792, ptr %793, align 8, !tbaa !44
  %794 = load float, ptr %22, align 8, !tbaa !44
  %795 = load float, ptr %129, align 4, !tbaa !44
  %796 = load float, ptr %133, align 8, !tbaa !44
  call void @glTranslatef(float noundef nofpclass(nan inf) %794, float noundef nofpclass(nan inf) %795, float noundef nofpclass(nan inf) %796) #13
  call void @setlinestyle(i32 noundef 3) #13
  call void @glBegin(i32 noundef 1) #13
  call void @glVertex3fv(ptr noundef nonnull %28) #13
  call void @glVertex3fv(ptr noundef nonnull %29) #13
  call void @mul_m3_v3(ptr noundef nonnull %30, ptr noundef nonnull %28) #13
  call void @mul_m3_v3(ptr noundef nonnull %30, ptr noundef nonnull %29) #13
  call void @glVertex3fv(ptr noundef nonnull %28) #13
  call void @glVertex3fv(ptr noundef nonnull %29) #13
  call void @mul_m3_v3(ptr noundef nonnull %30, ptr noundef nonnull %28) #13
  call void @mul_m3_v3(ptr noundef nonnull %30, ptr noundef nonnull %29) #13
  call void @glVertex3fv(ptr noundef nonnull %28) #13
  call void @glVertex3fv(ptr noundef nonnull %29) #13
  call void @mul_m3_v3(ptr noundef nonnull %30, ptr noundef nonnull %28) #13
  call void @mul_m3_v3(ptr noundef nonnull %30, ptr noundef nonnull %29) #13
  call void @glVertex3fv(ptr noundef nonnull %28) #13
  call void @glVertex3fv(ptr noundef nonnull %29) #13
  call void @mul_m3_v3(ptr noundef nonnull %30, ptr noundef nonnull %28) #13
  call void @mul_m3_v3(ptr noundef nonnull %30, ptr noundef nonnull %29) #13
  call void @glVertex3fv(ptr noundef nonnull %28) #13
  call void @glVertex3fv(ptr noundef nonnull %29) #13
  call void @mul_m3_v3(ptr noundef nonnull %30, ptr noundef nonnull %28) #13
  call void @mul_m3_v3(ptr noundef nonnull %30, ptr noundef nonnull %29) #13
  call void @glVertex3fv(ptr noundef nonnull %28) #13
  call void @glVertex3fv(ptr noundef nonnull %29) #13
  call void @mul_m3_v3(ptr noundef nonnull %30, ptr noundef nonnull %28) #13
  call void @mul_m3_v3(ptr noundef nonnull %30, ptr noundef nonnull %29) #13
  call void @glVertex3fv(ptr noundef nonnull %28) #13
  call void @glVertex3fv(ptr noundef nonnull %29) #13
  call void @mul_m3_v3(ptr noundef nonnull %30, ptr noundef nonnull %28) #13
  call void @mul_m3_v3(ptr noundef nonnull %30, ptr noundef nonnull %29) #13
  call void @glVertex3fv(ptr noundef nonnull %28) #13
  call void @glVertex3fv(ptr noundef nonnull %29) #13
  call void @mul_m3_v3(ptr noundef nonnull %30, ptr noundef nonnull %28) #13
  call void @mul_m3_v3(ptr noundef nonnull %30, ptr noundef nonnull %29) #13
  call void @glEnd() #13
  %797 = load float, ptr %22, align 8, !tbaa !44
  %798 = fneg fast float %797
  %799 = load float, ptr %129, align 4, !tbaa !44
  %800 = fneg fast float %799
  %801 = load float, ptr %133, align 8, !tbaa !44
  %802 = fneg fast float %801
  call void @glTranslatef(float noundef nofpclass(nan inf) %798, float noundef nofpclass(nan inf) %800, float noundef nofpclass(nan inf) %802) #13
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %30) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %29) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %28) #13
  %803 = load i16, ptr %775, align 8, !tbaa !409
  br label %804

804:                                              ; preds = %778, %773
  %805 = phi i16 [ %803, %778 ], [ %776, %773 ]
  %806 = icmp eq i16 %805, 0
  br i1 %806, label %807, label %913

807:                                              ; preds = %804
  %808 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 4
  %809 = load i32, ptr %808, align 4, !tbaa !411
  %810 = and i32 %809, 64
  %811 = icmp eq i32 %810, 0
  br i1 %811, label %913, label %812

812:                                              ; preds = %807
  %813 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 16
  %814 = load float, ptr %813, align 8, !tbaa !413
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %15) #13
  %815 = load float, ptr %133, align 8, !tbaa !44
  %816 = insertelement <8 x float> poison, float %815, i64 0
  %817 = shufflevector <8 x float> %816, <8 x float> poison, <8 x i32> zeroinitializer
  %818 = load <8 x float>, ptr %114, align 8
  %819 = shufflevector <8 x float> %818, <8 x float> poison, <8 x i32> zeroinitializer
  %820 = load <8 x float>, ptr %92, align 8
  %821 = shufflevector <8 x float> %820, <8 x float> poison, <8 x i32> zeroinitializer
  %822 = load float, ptr %129, align 4, !tbaa !44
  %823 = insertelement <8 x float> poison, float %822, i64 0
  %824 = shufflevector <8 x float> %823, <8 x float> poison, <8 x i32> zeroinitializer
  %825 = load <8 x float>, ptr %108, align 4
  %826 = shufflevector <8 x float> %825, <8 x float> poison, <8 x i32> zeroinitializer
  %827 = load <8 x float>, ptr %86, align 4
  %828 = shufflevector <8 x float> %827, <8 x float> poison, <8 x i32> zeroinitializer
  %829 = load float, ptr %22, align 8, !tbaa !44
  %830 = insertelement <8 x float> poison, float %829, i64 0
  %831 = shufflevector <8 x float> %830, <8 x float> poison, <8 x i32> zeroinitializer
  %832 = insertelement <8 x float> poison, float %814, i64 0
  %833 = shufflevector <8 x float> %832, <8 x float> poison, <8 x i32> zeroinitializer
  %834 = load <8 x float>, ptr %107, align 16
  %835 = shufflevector <8 x float> %834, <8 x float> poison, <8 x i32> zeroinitializer
  %836 = load <8 x float>, ptr %25, align 16
  %837 = shufflevector <8 x float> %836, <8 x float> poison, <8 x i32> zeroinitializer
  %838 = fmul fast <8 x float> %837, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %839 = fmul fast <8 x float> %835, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %840 = fadd fast <8 x float> %839, %838
  %841 = fmul fast <8 x float> %840, %833
  %842 = fadd fast <8 x float> %841, %831
  %843 = fmul fast <8 x float> %828, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %844 = fmul fast <8 x float> %826, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %845 = fadd fast <8 x float> %844, %843
  %846 = fmul fast <8 x float> %845, %833
  %847 = fadd fast <8 x float> %846, %824
  %848 = fmul fast <8 x float> %821, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %849 = fmul fast <8 x float> %819, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %850 = fadd fast <8 x float> %849, %848
  %851 = fmul fast <8 x float> %850, %833
  %852 = fadd fast <8 x float> %851, %817
  %853 = shufflevector <8 x float> %842, <8 x float> %847, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %854 = shufflevector <8 x float> %852, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %855 = shufflevector <16 x float> %853, <16 x float> %854, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %855, ptr %15, align 16, !tbaa !44
  %856 = getelementptr inbounds i8, ptr %15, i64 96
  %857 = fmul fast <8 x float> %837, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %858 = fmul fast <8 x float> %835, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %859 = fadd fast <8 x float> %858, %857
  %860 = fmul fast <8 x float> %859, %833
  %861 = fadd fast <8 x float> %860, %831
  %862 = fmul fast <8 x float> %828, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %863 = fmul fast <8 x float> %826, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %864 = fadd fast <8 x float> %863, %862
  %865 = fmul fast <8 x float> %864, %833
  %866 = fadd fast <8 x float> %865, %824
  %867 = fmul fast <8 x float> %821, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %868 = fmul fast <8 x float> %819, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %869 = fadd fast <8 x float> %868, %867
  %870 = fmul fast <8 x float> %869, %833
  %871 = fadd fast <8 x float> %870, %817
  %872 = shufflevector <8 x float> %861, <8 x float> %866, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %873 = shufflevector <8 x float> %871, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %874 = shufflevector <16 x float> %872, <16 x float> %873, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %874, ptr %856, align 16, !tbaa !44
  %875 = getelementptr inbounds i8, ptr %15, i64 192
  %876 = fmul fast <8 x float> %837, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %877 = fmul fast <8 x float> %835, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %878 = fadd fast <8 x float> %877, %876
  %879 = fmul fast <8 x float> %878, %833
  %880 = fadd fast <8 x float> %879, %831
  %881 = fmul fast <8 x float> %828, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %882 = fmul fast <8 x float> %826, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %883 = fadd fast <8 x float> %882, %881
  %884 = fmul fast <8 x float> %883, %833
  %885 = fadd fast <8 x float> %884, %824
  %886 = fmul fast <8 x float> %821, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %887 = fmul fast <8 x float> %819, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %888 = fadd fast <8 x float> %887, %886
  %889 = fmul fast <8 x float> %888, %833
  %890 = fadd fast <8 x float> %889, %817
  %891 = shufflevector <8 x float> %880, <8 x float> %885, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %892 = shufflevector <8 x float> %890, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %893 = shufflevector <16 x float> %891, <16 x float> %892, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %893, ptr %875, align 16, !tbaa !44
  %894 = getelementptr inbounds i8, ptr %15, i64 288
  %895 = fmul fast <8 x float> %837, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %896 = fmul fast <8 x float> %835, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %897 = fadd fast <8 x float> %896, %895
  %898 = fmul fast <8 x float> %897, %833
  %899 = fadd fast <8 x float> %898, %831
  %900 = fmul fast <8 x float> %828, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %901 = fmul fast <8 x float> %826, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %902 = fadd fast <8 x float> %901, %900
  %903 = fmul fast <8 x float> %902, %833
  %904 = fadd fast <8 x float> %903, %824
  %905 = fmul fast <8 x float> %821, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %906 = fmul fast <8 x float> %819, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %907 = fadd fast <8 x float> %906, %905
  %908 = fmul fast <8 x float> %907, %833
  %909 = fadd fast <8 x float> %908, %817
  %910 = shufflevector <8 x float> %899, <8 x float> %904, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %911 = shufflevector <8 x float> %909, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %912 = shufflevector <16 x float> %910, <16 x float> %911, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %912, ptr %894, align 16, !tbaa !44
  call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %15) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %15) #13
  br label %913

913:                                              ; preds = %807, %812, %804
  call void @glPopMatrix() #13
  store <2 x float> zeroinitializer, ptr %22, align 8, !tbaa !44
  store float 0.000000e+00, ptr %133, align 8, !tbaa !44
  br i1 %51, label %1148, label %914

914:                                              ; preds = %913
  %915 = load i16, ptr %775, align 8, !tbaa !409
  switch i16 %915, label %1148 [
    i16 2, label %916
    i16 5, label %916
    i16 3, label %1049
    i16 1, label %1049
    i16 4, label %1126
  ]

916:                                              ; preds = %914, %914
  %917 = getelementptr inbounds float, ptr %23, i64 2
  %918 = getelementptr inbounds %struct.RegionView3D, ptr %1, i64 0, i32 3, i64 0, i64 2
  %919 = load float, ptr %918, align 8, !tbaa !44
  %920 = getelementptr inbounds %struct.RegionView3D, ptr %1, i64 0, i32 3, i64 1, i64 2
  %921 = load float, ptr %920, align 8, !tbaa !44
  %922 = getelementptr inbounds %struct.RegionView3D, ptr %1, i64 0, i32 3, i64 2, i64 2
  %923 = load float, ptr %922, align 8, !tbaa !44
  store float %919, ptr %24, align 8, !tbaa !44
  %924 = getelementptr inbounds float, ptr %24, i64 1
  store float %921, ptr %924, align 4, !tbaa !44
  %925 = getelementptr inbounds float, ptr %24, i64 2
  store float %923, ptr %925, align 8, !tbaa !44
  call void @mul_transposed_mat3_m4_v3(ptr noundef nonnull %37, ptr noundef nonnull %24) #13
  %926 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 16
  %927 = load float, ptr %926, align 8, !tbaa !413
  %928 = fneg fast float %927
  %929 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 17
  %930 = load float, ptr %929, align 4, !tbaa !414
  %931 = fmul fast float %930, 5.000000e-01
  %932 = call fast float @llvm.cos.f32(float %931)
  %933 = fmul fast float %932, %932
  %934 = fsub fast float 1.000000e+00, %933
  %935 = call fast float @llvm.sqrt.f32(float %934)
  %936 = fmul fast float %935, %928
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %10) #13
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %11) #13
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %12) #13
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %13) #13
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14) #13
  store <2 x float> zeroinitializer, ptr %23, align 8
  store float 1.000000e+00, ptr %917, align 8
  %937 = load float, ptr %24, align 8, !tbaa !44
  %938 = fmul fast float %937, %937
  %939 = load <2 x float>, ptr %924, align 4, !tbaa !44
  %940 = fmul fast <2 x float> %939, %939
  %941 = extractelement <2 x float> %940, i64 0
  %942 = fadd fast float %941, %938
  %943 = extractelement <2 x float> %940, i64 1
  %944 = fadd fast float %942, %943
  %945 = fcmp fast ogt float %944, 0x38AA95A5C0000000
  br i1 %945, label %946, label %953

946:                                              ; preds = %916
  %947 = call fast float @llvm.sqrt.f32(float %944)
  %948 = fdiv fast float 1.000000e+00, %947
  %949 = fmul fast float %948, %937
  %950 = insertelement <2 x float> poison, float %948, i64 0
  %951 = shufflevector <2 x float> %950, <2 x float> poison, <2 x i32> zeroinitializer
  %952 = fmul fast <2 x float> %951, %939
  br label %953

953:                                              ; preds = %946, %916
  %954 = phi float [ %949, %946 ], [ 0.000000e+00, %916 ]
  %955 = phi <2 x float> [ %952, %946 ], [ zeroinitializer, %916 ]
  store float %954, ptr %24, align 8
  store <2 x float> %955, ptr %924, align 4
  %956 = fmul fast float %954, %954
  %957 = fmul fast <2 x float> %955, %955
  %958 = extractelement <2 x float> %957, i64 0
  %959 = fadd fast float %958, %956
  %960 = fcmp fast ogt float %959, 0x38AA95A5C0000000
  br i1 %960, label %961, label %968

961:                                              ; preds = %953
  %962 = extractelement <2 x float> %955, i64 0
  %963 = call fast float @llvm.sqrt.f32(float %959)
  %964 = fdiv fast float 1.000000e+00, %963
  %965 = fmul fast float %964, %954
  %966 = fmul fast float %964, %962
  %967 = fcmp fast oeq float %963, 0.000000e+00
  br i1 %967, label %968, label %970

968:                                              ; preds = %961, %953
  %969 = phi float [ %965, %961 ], [ 0.000000e+00, %953 ]
  br label %970

970:                                              ; preds = %961, %968
  %971 = phi float [ %969, %968 ], [ %965, %961 ]
  %972 = phi float [ 1.000000e+00, %968 ], [ %966, %961 ]
  %973 = fmul fast float %972, %972
  %974 = fmul fast float %971, %971
  %975 = fadd fast float %973, %974
  %976 = fcmp fast ogt float %975, 0x38AA95A5C0000000
  %977 = call fast float @llvm.sqrt.f32(float %975)
  %978 = fdiv fast float 1.000000e+00, %977
  %979 = fneg fast float %971
  %980 = getelementptr inbounds [4 x float], ptr %14, i64 0, i64 3
  %981 = getelementptr inbounds [4 x float], ptr %14, i64 0, i64 1
  store float 0x3FE6A09E60000000, ptr %14, align 16, !tbaa !44
  %982 = insertelement <2 x float> poison, float %978, i64 0
  %983 = shufflevector <2 x float> %982, <2 x float> poison, <2 x i32> zeroinitializer
  %984 = insertelement <2 x float> poison, float %972, i64 0
  %985 = insertelement <2 x float> %984, float %979, i64 1
  %986 = fmul fast <2 x float> %983, %985
  %987 = fmul fast <2 x float> %986, <float 0x3FE6A09E60000000, float 0x3FE6A09E60000000>
  %988 = insertelement <2 x i1> poison, i1 %976, i64 0
  %989 = shufflevector <2 x i1> %988, <2 x i1> poison, <2 x i32> zeroinitializer
  %990 = select <2 x i1> %989, <2 x float> %987, <2 x float> zeroinitializer
  store <2 x float> %990, ptr %981, align 4, !tbaa !44
  store float 0.000000e+00, ptr %980, align 4, !tbaa !44
  call void @quat_to_mat3(ptr noundef nonnull %10, ptr noundef nonnull %14) #13
  store <2 x float> zeroinitializer, ptr %24, align 8, !tbaa !44
  store float 1.000000e+00, ptr %925, align 8, !tbaa !44
  call void @unit_m3(ptr noundef nonnull %11) #13
  store float %932, ptr %11, align 16, !tbaa !44
  %991 = fneg fast float %935
  %992 = getelementptr inbounds [3 x [3 x float]], ptr %11, i64 0, i64 1
  store float %991, ptr %992, align 4, !tbaa !44
  %993 = getelementptr inbounds [3 x float], ptr %11, i64 0, i64 1
  store float %935, ptr %993, align 4, !tbaa !44
  %994 = getelementptr inbounds [3 x [3 x float]], ptr %11, i64 0, i64 1, i64 1
  store float %932, ptr %994, align 16, !tbaa !44
  call void @mul_m3_m3m3(ptr noundef nonnull %12, ptr noundef nonnull %11, ptr noundef nonnull %10) #13
  store float %935, ptr %992, align 4, !tbaa !44
  store float %991, ptr %993, align 4, !tbaa !44
  call void @mul_m3_m3m3(ptr noundef nonnull %13, ptr noundef nonnull %11, ptr noundef nonnull %10) #13
  call void @transpose_m3(ptr noundef nonnull %10) #13
  call void @mul_m3_m3m3(ptr noundef nonnull %11, ptr noundef nonnull %10, ptr noundef nonnull %12) #13
  call void @mul_m3_v3(ptr noundef nonnull %11, ptr noundef nonnull %23) #13
  call void @mul_m3_m3m3(ptr noundef nonnull %11, ptr noundef nonnull %10, ptr noundef nonnull %13) #13
  call void @mul_m3_v3(ptr noundef nonnull %11, ptr noundef nonnull %24) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14) #13
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %13) #13
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %12) #13
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %11) #13
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %10) #13
  %995 = load <2 x float>, ptr %23, align 8, !tbaa !44
  %996 = insertelement <2 x float> poison, float %928, i64 0
  %997 = shufflevector <2 x float> %996, <2 x float> poison, <2 x i32> zeroinitializer
  %998 = fmul fast <2 x float> %995, %997
  store <2 x float> %998, ptr %23, align 8, !tbaa !44
  %999 = load float, ptr %917, align 8, !tbaa !44
  %1000 = fmul fast float %999, %928
  store float %1000, ptr %917, align 8, !tbaa !44
  %1001 = load <2 x float>, ptr %24, align 8, !tbaa !44
  %1002 = fmul fast <2 x float> %1001, %997
  store <2 x float> %1002, ptr %24, align 8, !tbaa !44
  %1003 = load float, ptr %925, align 8, !tbaa !44
  %1004 = fmul fast float %1003, %928
  store float %1004, ptr %925, align 8, !tbaa !44
  call void @glBegin(i32 noundef 3) #13
  call void @glVertex3fv(ptr noundef nonnull %24) #13
  call void @glVertex3fv(ptr noundef nonnull %22) #13
  call void @glVertex3fv(ptr noundef nonnull %23) #13
  call void @glEnd() #13
  %1005 = fmul fast float %932, %928
  call void @glTranslatef(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %1005) #13
  %1006 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 4
  %1007 = load i32, ptr %1006, align 4, !tbaa !411
  %1008 = and i32 %1007, 128
  %1009 = icmp eq i32 %1008, 0
  br i1 %1009, label %1015, label %1010

1010:                                             ; preds = %970
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %31) #13
  %1011 = call fast float @llvm.fabs.f32(float %936)
  %1012 = getelementptr inbounds [3 x float], ptr %31, i64 0, i64 1
  store float %1011, ptr %1012, align 4, !tbaa !44
  store float %1011, ptr %31, align 4, !tbaa !44
  %1013 = getelementptr inbounds [3 x float], ptr %31, i64 0, i64 2
  store float 0.000000e+00, ptr %1013, align 4, !tbaa !44
  call void @glBegin(i32 noundef 2) #13
  call void @glVertex3fv(ptr noundef nonnull %31) #13
  %1014 = fneg fast float %1011
  store float %1014, ptr %1012, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %31) #13
  store float %1014, ptr %31, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %31) #13
  store float %1011, ptr %1012, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %31) #13
  call void @glEnd() #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %31) #13
  br label %1017

1015:                                             ; preds = %970
  %1016 = call fast float @llvm.fabs.f32(float %936)
  call void @circ(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %1016) #13
  br label %1017

1017:                                             ; preds = %1015, %1010
  %1018 = load i16, ptr %775, align 8, !tbaa !409
  %1019 = icmp eq i16 %1018, 2
  br i1 %1019, label %1020, label %1031

1020:                                             ; preds = %1017
  %1021 = call fast float @llvm.fabs.f32(float %936)
  %1022 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 18
  %1023 = load float, ptr %1022, align 8, !tbaa !415
  %1024 = fmul fast float %1023, %1023
  %1025 = fsub fast float 1.000000e+00, %1024
  %1026 = fmul fast float %1025, %1021
  %1027 = fcmp fast une float %1026, 0.000000e+00
  %1028 = fcmp fast une float %1026, %1021
  %1029 = select i1 %1027, i1 %1028, i1 false
  br i1 %1029, label %1030, label %1031

1030:                                             ; preds = %1020
  call void @circ(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %1026) #13
  br label %1031

1031:                                             ; preds = %1020, %1030, %1017
  br i1 %79, label %1032, label %1033

1032:                                             ; preds = %1031
  call void @glEnable(i32 noundef 2884) #13
  call void @glEnable(i32 noundef 3042) #13
  call void @glDepthMask(i8 noundef zeroext 0) #13
  call void @glCullFace(i32 noundef 1028) #13
  call void @glBlendFunc(i32 noundef 0, i32 noundef 770) #13
  call void @glColor4f(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0x3FD99999A0000000) #13
  call fastcc void @draw_spot_cone(ptr noundef nonnull %41, float noundef nofpclass(nan inf) %1005, float noundef nofpclass(nan inf) %936)
  call void @glCullFace(i32 noundef 1029) #13
  call void @glBlendFunc(i32 noundef 1, i32 noundef 1) #13
  call void @glColor4f(float noundef nofpclass(nan inf) 0x3FC99999A0000000, float noundef nofpclass(nan inf) 0x3FC99999A0000000, float noundef nofpclass(nan inf) 0x3FC99999A0000000, float noundef nofpclass(nan inf) 1.000000e+00) #13
  call fastcc void @draw_spot_cone(ptr noundef nonnull %41, float noundef nofpclass(nan inf) %1005, float noundef nofpclass(nan inf) %936)
  call void @glBlendFunc(i32 noundef 770, i32 noundef 771) #13
  call void @glDisable(i32 noundef 3042) #13
  call void @glDepthMask(i8 noundef zeroext 1) #13
  call void @glDisable(i32 noundef 2884) #13
  call void @glCullFace(i32 noundef 1029) #13
  br label %1033

1033:                                             ; preds = %1032, %1031
  %1034 = fneg fast float %1005
  call void @glTranslatef(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %1034) #13
  %1035 = load i16, ptr %775, align 8, !tbaa !409
  %1036 = icmp eq i16 %1035, 2
  br i1 %1036, label %1037, label %1045

1037:                                             ; preds = %1033
  %1038 = load i32, ptr %1006, align 4, !tbaa !411
  %1039 = and i32 %1038, 1
  %1040 = icmp eq i32 %1039, 0
  br i1 %1040, label %1045, label %1041

1041:                                             ; preds = %1037
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %32) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %33) #13
  %1042 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 25
  %1043 = load float, ptr %1042, align 4, !tbaa !416
  %1044 = fdiv fast float %1043, %1034
  call void @interp_v3_v3v3(ptr noundef nonnull %32, ptr noundef nonnull %22, ptr noundef nonnull %23, float noundef nofpclass(nan inf) %1044) #13
  call void @interp_v3_v3v3(ptr noundef nonnull %33, ptr noundef nonnull %22, ptr noundef nonnull %24, float noundef nofpclass(nan inf) %1044) #13
  call void @glBegin(i32 noundef 3) #13
  call void @glVertex3fv(ptr noundef nonnull %32) #13
  call void @glVertex3fv(ptr noundef nonnull %33) #13
  call void @glEnd() #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %33) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %32) #13
  br label %1148

1045:                                             ; preds = %1037, %1033
  call void @glBegin(i32 noundef 3) #13
  %1046 = fneg fast float %774
  call void @glVertex3f(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %1046) #13
  %1047 = load float, ptr %926, align 8, !tbaa !413
  %1048 = fneg fast float %1047
  call void @glVertex3f(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %1048) #13
  call void @glEnd() #13
  br label %1148

1049:                                             ; preds = %914, %914
  call void @glBegin(i32 noundef 3) #13
  %1050 = fneg fast float %774
  store float %1050, ptr %133, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %22) #13
  %1051 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 16
  %1052 = load float, ptr %1051, align 8, !tbaa !413
  %1053 = fneg fast float %1052
  store float %1053, ptr %133, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %22) #13
  call void @glEnd() #13
  %1054 = load i16, ptr %775, align 8, !tbaa !409
  %1055 = icmp eq i16 %1054, 3
  br i1 %1055, label %1056, label %1148

1056:                                             ; preds = %1049
  store <2 x float> zeroinitializer, ptr %22, align 8, !tbaa !44
  store float 0.000000e+00, ptr %133, align 8, !tbaa !44
  call void @setlinestyle(i32 noundef 4) #13
  %1057 = getelementptr inbounds [3 x float], ptr %34, i64 0, i64 2
  %1058 = getelementptr inbounds [3 x float], ptr %34, i64 0, i64 1
  br label %1059

1059:                                             ; preds = %1056, %1120
  %1060 = phi i16 [ 1, %1056 ], [ %1123, %1120 ]
  %1061 = phi i16 [ 0, %1056 ], [ %1124, %1120 ]
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %34) #13
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(12) %34, i8 0, i64 12, i1 false)
  call void @glBegin(i32 noundef 3) #13
  %1062 = icmp ult i16 %1061, 2
  %1063 = sitofp i16 %1060 to float
  %1064 = fmul fast float %1063, 0x3FC1EB8520000000
  %1065 = fmul fast float %774, %1063
  br i1 %1062, label %1066, label %1089

1066:                                             ; preds = %1059
  store float %1065, ptr %34, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %34) #13
  %1067 = load float, ptr %34, align 4, !tbaa !44
  %1068 = fadd fast float %1067, %1064
  store float %1068, ptr %34, align 4, !tbaa !44
  %1069 = load float, ptr %1057, align 4, !tbaa !44
  %1070 = fadd fast float %1069, 0xBF9CAC0820000000
  store float %1070, ptr %1057, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %34) #13
  %1071 = load float, ptr %34, align 4, !tbaa !44
  %1072 = fmul fast float %1063, 0x3FD1EB8520000000
  %1073 = fadd fast float %1071, %1072
  store float %1073, ptr %34, align 4, !tbaa !44
  %1074 = load float, ptr %1057, align 4, !tbaa !44
  %1075 = fadd fast float %1074, 0xBFB41205A0000000
  store float %1075, ptr %1057, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %34) #13
  %1076 = load float, ptr %34, align 4, !tbaa !44
  %1077 = fmul fast float %1063, 0x3FDAE147C0000000
  %1078 = fadd fast float %1076, %1077
  store float %1078, ptr %34, align 4, !tbaa !44
  %1079 = load float, ptr %1057, align 4, !tbaa !44
  %1080 = fadd fast float %1079, 0xBFC512EC40000000
  store float %1080, ptr %1057, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %34) #13
  %1081 = load float, ptr %34, align 4, !tbaa !44
  %1082 = fmul fast float %1063, 0x3FE1EB8520000000
  %1083 = fadd fast float %1081, %1082
  store float %1083, ptr %34, align 4, !tbaa !44
  %1084 = load float, ptr %1057, align 4, !tbaa !44
  %1085 = fadd fast float %1084, 0xBFD3AB42E0000000
  store float %1085, ptr %1057, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %34) #13
  %1086 = load float, ptr %34, align 4, !tbaa !44
  %1087 = fmul fast float %1063, 0x3FE6666660000000
  %1088 = fadd fast float %1086, %1087
  store float %1088, ptr %34, align 4, !tbaa !44
  br label %1120

1089:                                             ; preds = %1059
  %1090 = and i16 %1061, 32766
  %1091 = icmp eq i16 %1090, 2
  br i1 %1091, label %1101, label %1092

1092:                                             ; preds = %1089
  call void @glVertex3fv(ptr noundef nonnull %34) #13
  %1093 = load float, ptr %1057, align 4, !tbaa !44
  %1094 = fadd fast float %1093, 0xBF9CAC0820000000
  store float %1094, ptr %1057, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %34) #13
  %1095 = load float, ptr %1057, align 4, !tbaa !44
  %1096 = fadd fast float %1095, 0xBFB41205A0000000
  store float %1096, ptr %1057, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %34) #13
  %1097 = load float, ptr %1057, align 4, !tbaa !44
  %1098 = fadd fast float %1097, 0xBFC512EC40000000
  store float %1098, ptr %1057, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %34) #13
  %1099 = load float, ptr %1057, align 4, !tbaa !44
  %1100 = fadd fast float %1099, 0xBFD3AB42E0000000
  store float %1100, ptr %1057, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %34) #13
  br label %1120

1101:                                             ; preds = %1089
  store float %1065, ptr %1058, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %34) #13
  %1102 = load <2 x float>, ptr %1058, align 4, !tbaa !44
  %1103 = insertelement <2 x float> <float poison, float 0xBF9CAC0820000000>, float %1064, i64 0
  %1104 = fadd fast <2 x float> %1102, %1103
  store <2 x float> %1104, ptr %1058, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %34) #13
  %1105 = fmul fast float %1063, 0x3FD1EB8520000000
  %1106 = load <2 x float>, ptr %1058, align 4, !tbaa !44
  %1107 = insertelement <2 x float> <float poison, float 0xBFB41205A0000000>, float %1105, i64 0
  %1108 = fadd fast <2 x float> %1106, %1107
  store <2 x float> %1108, ptr %1058, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %34) #13
  %1109 = fmul fast float %1063, 0x3FDAE147C0000000
  %1110 = load <2 x float>, ptr %1058, align 4, !tbaa !44
  %1111 = insertelement <2 x float> <float poison, float 0xBFC512EC40000000>, float %1109, i64 0
  %1112 = fadd fast <2 x float> %1110, %1111
  store <2 x float> %1112, ptr %1058, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %34) #13
  %1113 = fmul fast float %1063, 0x3FE1EB8520000000
  %1114 = load <2 x float>, ptr %1058, align 4, !tbaa !44
  %1115 = insertelement <2 x float> <float poison, float 0xBFD3AB42E0000000>, float %1113, i64 0
  %1116 = fadd fast <2 x float> %1114, %1115
  store <2 x float> %1116, ptr %1058, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %34) #13
  %1117 = load float, ptr %1058, align 4, !tbaa !44
  %1118 = fmul fast float %1063, 0x3FE6666660000000
  %1119 = fadd fast float %1117, %1118
  store float %1119, ptr %1058, align 4, !tbaa !44
  br label %1120

1120:                                             ; preds = %1092, %1101, %1066
  %1121 = load float, ptr %1057, align 4, !tbaa !44
  %1122 = fadd fast float %1121, 0xBFE135DA80000000
  store float %1122, ptr %1057, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %34) #13
  call void @glEnd() #13
  %1123 = sub nsw i16 0, %1060
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %34) #13
  %1124 = add nuw nsw i16 %1061, 1
  %1125 = icmp eq i16 %1124, 4
  br i1 %1125, label %1148, label %1059, !llvm.loop !417

1126:                                             ; preds = %914
  call void @setlinestyle(i32 noundef 3) #13
  %1127 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 42
  %1128 = load i16, ptr %1127, align 2, !tbaa !418
  switch i16 %1128, label %1143 [
    i16 0, label %1129
    i16 1, label %1134
  ]

1129:                                             ; preds = %1126
  %1130 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 43
  %1131 = load float, ptr %1130, align 4, !tbaa !419
  %1132 = fmul fast float %1131, -5.000000e-01
  %1133 = fmul fast float %1131, 5.000000e-01
  call void @fdrawbox(float noundef nofpclass(nan inf) %1132, float noundef nofpclass(nan inf) %1132, float noundef nofpclass(nan inf) %1133, float noundef nofpclass(nan inf) %1133) #13
  br label %1143

1134:                                             ; preds = %1126
  %1135 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 43
  %1136 = load float, ptr %1135, align 4, !tbaa !419
  %1137 = fmul fast float %1136, -5.000000e-01
  %1138 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 44
  %1139 = load float, ptr %1138, align 8, !tbaa !420
  %1140 = fmul fast float %1139, -5.000000e-01
  %1141 = fmul fast float %1136, 5.000000e-01
  %1142 = fmul fast float %1139, 5.000000e-01
  call void @fdrawbox(float noundef nofpclass(nan inf) %1137, float noundef nofpclass(nan inf) %1140, float noundef nofpclass(nan inf) %1141, float noundef nofpclass(nan inf) %1142) #13
  br label %1143

1143:                                             ; preds = %1126, %1134, %1129
  call void @glBegin(i32 noundef 3) #13
  %1144 = fneg fast float %774
  call void @glVertex3f(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %1144) #13
  %1145 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 16
  %1146 = load float, ptr %1145, align 8, !tbaa !413
  %1147 = fneg fast float %1146
  call void @glVertex3f(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %1147) #13
  call void @glEnd() #13
  br label %1148

1148:                                             ; preds = %1120, %914, %1045, %1041, %1143, %1049, %913
  call void @glPushMatrix() #13
  call void @glLoadMatrixf(ptr noundef nonnull %80) #13
  %1149 = load <2 x float>, ptr %38, align 4, !tbaa !44
  store <2 x float> %1149, ptr %22, align 8, !tbaa !44
  %1150 = load float, ptr %131, align 4, !tbaa !44
  store float %1150, ptr %133, align 8, !tbaa !44
  call void @setlinestyle(i32 noundef 0) #13
  %1151 = load i16, ptr %775, align 8, !tbaa !409
  %1152 = icmp eq i16 %1151, 2
  br i1 %1152, label %1153, label %1203

1153:                                             ; preds = %1148
  %1154 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 4
  %1155 = load i32, ptr %1154, align 4, !tbaa !411
  %1156 = and i32 %1155, 1
  %1157 = icmp eq i32 %1156, 0
  %1158 = select i1 %1157, i1 true, i1 %51
  br i1 %1158, label %1203, label %1159

1159:                                             ; preds = %1153
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %8) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %9) #13
  %1160 = getelementptr inbounds %struct.Object, ptr %36, i64 0, i32 47, i64 2
  %1161 = load <2 x float>, ptr %1160, align 4, !tbaa !44
  %1162 = getelementptr inbounds %struct.Object, ptr %36, i64 0, i32 47, i64 2, i64 2
  %1163 = load float, ptr %1162, align 4, !tbaa !44
  %1164 = fmul fast <2 x float> %1161, %1161
  %1165 = shufflevector <2 x float> %1164, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %1166 = fadd fast <2 x float> %1165, %1164
  %1167 = extractelement <2 x float> %1166, i64 0
  %1168 = fmul fast float %1163, %1163
  %1169 = fadd fast float %1167, %1168
  %1170 = fcmp fast ogt float %1169, 0x38AA95A5C0000000
  br i1 %1170, label %1171, label %1180

1171:                                             ; preds = %1159
  %1172 = fneg fast float %1163
  %1173 = fneg fast <2 x float> %1161
  %1174 = call fast float @llvm.sqrt.f32(float %1169)
  %1175 = fdiv fast float 1.000000e+00, %1174
  %1176 = insertelement <2 x float> poison, float %1175, i64 0
  %1177 = shufflevector <2 x float> %1176, <2 x float> poison, <2 x i32> zeroinitializer
  %1178 = fmul fast <2 x float> %1177, %1173
  %1179 = fmul fast float %1175, %1172
  br label %1180

1180:                                             ; preds = %1159, %1171
  %1181 = phi float [ %1179, %1171 ], [ 0.000000e+00, %1159 ]
  %1182 = phi <2 x float> [ %1178, %1171 ], [ zeroinitializer, %1159 ]
  %1183 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 25
  %1184 = load float, ptr %1183, align 4, !tbaa !416
  %1185 = load <2 x float>, ptr %38, align 4, !tbaa !44
  %1186 = insertelement <2 x float> poison, float %1184, i64 0
  %1187 = shufflevector <2 x float> %1186, <2 x float> poison, <2 x i32> zeroinitializer
  %1188 = fmul fast <2 x float> %1187, %1182
  %1189 = fadd fast <2 x float> %1188, %1185
  store <2 x float> %1189, ptr %8, align 8, !tbaa !44
  %1190 = load float, ptr %131, align 4, !tbaa !44
  %1191 = fmul fast float %1184, %1181
  %1192 = fadd fast float %1190, %1191
  %1193 = getelementptr inbounds float, ptr %8, i64 2
  store float %1192, ptr %1193, align 8, !tbaa !44
  %1194 = getelementptr inbounds %struct.Lamp, ptr %41, i64 0, i32 26
  %1195 = load float, ptr %1194, align 8, !tbaa !421
  %1196 = insertelement <2 x float> poison, float %1195, i64 0
  %1197 = shufflevector <2 x float> %1196, <2 x float> poison, <2 x i32> zeroinitializer
  %1198 = fmul fast <2 x float> %1197, %1182
  %1199 = fadd fast <2 x float> %1198, %1185
  store <2 x float> %1199, ptr %9, align 8, !tbaa !44
  %1200 = fmul fast float %1195, %1181
  %1201 = fadd fast float %1200, %1190
  %1202 = getelementptr inbounds float, ptr %9, i64 2
  store float %1201, ptr %1202, align 8, !tbaa !44
  call void @glBegin(i32 noundef 3) #13
  call void @glVertex3fv(ptr noundef nonnull %8) #13
  call void @glVertex3fv(ptr noundef nonnull %9) #13
  call void @glEnd() #13
  call void @glPointSize(float noundef nofpclass(nan inf) 3.000000e+00) #13
  call void @bglBegin(i32 noundef 0) #13
  call void @bglVertex3fv(ptr noundef nonnull %8) #13
  call void @bglVertex3fv(ptr noundef nonnull %9) #13
  call void @bglEnd() #13
  call void @glPointSize(float noundef nofpclass(nan inf) 1.000000e+00) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %9) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %8) #13
  br label %1203

1203:                                             ; preds = %1180, %1153, %1148
  br i1 %135, label %1204, label %1205

1204:                                             ; preds = %1203
  call void @UI_GetThemeColor4ubv(i32 noundef 89, ptr noundef nonnull %27) #13
  call void @glColor4ubv(ptr noundef nonnull %27) #13
  br label %1205

1205:                                             ; preds = %1204, %1203
  call void @glEnable(i32 noundef 3042) #13
  %1206 = load float, ptr %133, align 8, !tbaa !44
  %1207 = fcmp fast ogt float %1206, 0.000000e+00
  %1208 = fneg fast float %774
  %1209 = select i1 %1207, float %1208, float %774
  %1210 = fadd fast float %1209, %1206
  store float %1210, ptr %133, align 8, !tbaa !44
  call void @glBegin(i32 noundef 3) #13
  call void @glVertex3fv(ptr noundef nonnull %22) #13
  store float 0.000000e+00, ptr %133, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %22) #13
  call void @glEnd() #13
  call void @glPointSize(float noundef nofpclass(nan inf) 2.000000e+00) #13
  call void @glBegin(i32 noundef 0) #13
  call void @glVertex3fv(ptr noundef nonnull %22) #13
  call void @glEnd() #13
  call void @glPointSize(float noundef nofpclass(nan inf) 1.000000e+00) #13
  call void @glDisable(i32 noundef 3042) #13
  br i1 %135, label %1211, label %1212

1211:                                             ; preds = %1205
  call void @glColor3ubv(ptr noundef %5) #13
  br label %1212

1212:                                             ; preds = %1211, %1205
  call void @glPopMatrix() #13
  br label %1213

1213:                                             ; preds = %1212, %76
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %27) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %26) #13
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %25) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %24) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %23) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %22) #13
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @drawcamera(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2, ptr nocapture noundef readonly %3, i16 noundef signext %4, ptr noundef %5) unnamed_addr #0 {
  %7 = alloca [3 x float], align 8
  %8 = alloca [4 x [3 x float]], align 16
  %9 = alloca [2 x float], align 4
  %10 = alloca [2 x float], align 8
  %11 = alloca [3 x float], align 8
  %12 = alloca float, align 4
  %13 = alloca [4 x float], align 16
  %14 = alloca [4 x [4 x float]], align 16
  %15 = getelementptr inbounds %struct.Base, ptr %3, i64 0, i32 7
  %16 = load ptr, ptr %15, align 8, !tbaa !38
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #13
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %8) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %11) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #13
  %17 = getelementptr inbounds %struct.RegionView3D, ptr %2, i64 0, i32 25
  %18 = load i8, ptr %17, align 1, !tbaa !102
  %19 = icmp eq i8 %18, 2
  br i1 %19, label %20, label %25

20:                                               ; preds = %6
  %21 = getelementptr inbounds %struct.View3D, ptr %1, i64 0, i32 15
  %22 = load ptr, ptr %21, align 8, !tbaa !103
  %23 = icmp eq ptr %16, %22
  %24 = zext i1 %23 to i8
  br label %25

25:                                               ; preds = %20, %6
  %26 = phi i8 [ 0, %6 ], [ %24, %20 ]
  %27 = tail call ptr @BKE_object_movieclip_get(ptr noundef %0, ptr noundef %16, i8 noundef zeroext 0) #13
  %28 = icmp eq ptr %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  tail call fastcc void @draw_viewport_reconstruction(ptr noundef %0, ptr noundef nonnull %3, ptr noundef %1, ptr noundef nonnull %27, i16 noundef signext %4, ptr noundef %5, i8 noundef zeroext 0)
  tail call fastcc void @draw_viewport_reconstruction(ptr noundef %0, ptr noundef nonnull %3, ptr noundef %1, ptr noundef nonnull %27, i16 noundef signext %4, ptr noundef %5, i8 noundef zeroext 1)
  br label %30

30:                                               ; preds = %29, %25
  %31 = icmp eq i8 %26, 0
  br i1 %31, label %47, label %32

32:                                               ; preds = %30
  %33 = load i32, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 15), align 8, !tbaa !16
  %34 = and i32 %33, 32
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %47

36:                                               ; preds = %32
  %37 = and i16 %4, 2
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %39, label %45

39:                                               ; preds = %36
  %40 = load i8, ptr %5, align 1, !tbaa !50
  store i8 %40, ptr @view3d_camera_border_hack_col, align 1, !tbaa !50
  %41 = getelementptr inbounds i8, ptr %5, i64 1
  %42 = load i8, ptr %41, align 1, !tbaa !50
  store i8 %42, ptr getelementptr inbounds ([3 x i8], ptr @view3d_camera_border_hack_col, i64 0, i64 1), align 1, !tbaa !50
  %43 = getelementptr inbounds i8, ptr %5, i64 2
  %44 = load i8, ptr %43, align 1, !tbaa !50
  store i8 %44, ptr getelementptr inbounds ([3 x i8], ptr @view3d_camera_border_hack_col, i64 0, i64 2), align 1, !tbaa !50
  br label %46

45:                                               ; preds = %36
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13) #13
  call void @glGetFloatv(i32 noundef 2816, ptr noundef nonnull %13) #13
  call void @rgb_float_to_uchar(ptr noundef nonnull @view3d_camera_border_hack_col, ptr noundef nonnull %13) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #13
  br label %46

46:                                               ; preds = %45, %39
  store i8 1, ptr @view3d_camera_border_hack_test, align 1, !tbaa !50
  br label %202

47:                                               ; preds = %32, %30
  %48 = getelementptr inbounds %struct.Object, ptr %16, i64 0, i32 19
  %49 = load ptr, ptr %48, align 8, !tbaa !90
  %50 = getelementptr inbounds %struct.Object, ptr %16, i64 0, i32 47
  %51 = load float, ptr %50, align 4, !tbaa !44
  %52 = getelementptr inbounds %struct.Object, ptr %16, i64 0, i32 47, i64 0, i64 1
  %53 = load float, ptr %52, align 4, !tbaa !44
  %54 = getelementptr inbounds %struct.Object, ptr %16, i64 0, i32 47, i64 0, i64 2
  %55 = load float, ptr %54, align 4, !tbaa !44
  %56 = getelementptr inbounds %struct.Object, ptr %16, i64 0, i32 47, i64 1
  %57 = load float, ptr %56, align 4, !tbaa !44
  %58 = getelementptr inbounds %struct.Object, ptr %16, i64 0, i32 47, i64 1, i64 1
  %59 = load float, ptr %58, align 4, !tbaa !44
  %60 = getelementptr inbounds %struct.Object, ptr %16, i64 0, i32 47, i64 1, i64 2
  %61 = load float, ptr %60, align 4, !tbaa !44
  %62 = getelementptr inbounds [3 x float], ptr %11, i64 0, i64 1
  %63 = insertelement <2 x float> poison, float %51, i64 0
  %64 = insertelement <2 x float> %63, float %57, i64 1
  %65 = fmul fast <2 x float> %64, %64
  %66 = insertelement <2 x float> poison, float %53, i64 0
  %67 = insertelement <2 x float> %66, float %59, i64 1
  %68 = fmul fast <2 x float> %67, %67
  %69 = fadd fast <2 x float> %68, %65
  %70 = insertelement <2 x float> poison, float %55, i64 0
  %71 = insertelement <2 x float> %70, float %61, i64 1
  %72 = fmul fast <2 x float> %71, %71
  %73 = fadd fast <2 x float> %69, %72
  %74 = tail call fast <2 x float> @llvm.sqrt.v2f32(<2 x float> %73)
  %75 = fdiv fast <2 x float> <float 1.000000e+00, float 1.000000e+00>, %74
  store <2 x float> %75, ptr %11, align 8, !tbaa !44
  %76 = getelementptr inbounds %struct.Object, ptr %16, i64 0, i32 47, i64 2
  %77 = load float, ptr %76, align 4, !tbaa !44
  %78 = fmul fast float %77, %77
  %79 = getelementptr inbounds %struct.Object, ptr %16, i64 0, i32 47, i64 2, i64 1
  %80 = load float, ptr %79, align 4, !tbaa !44
  %81 = fmul fast float %80, %80
  %82 = fadd fast float %81, %78
  %83 = getelementptr inbounds %struct.Object, ptr %16, i64 0, i32 47, i64 2, i64 2
  %84 = load float, ptr %83, align 4, !tbaa !44
  %85 = fmul fast float %84, %84
  %86 = fadd fast float %82, %85
  %87 = tail call fast float @llvm.sqrt.f32(float %86)
  %88 = fdiv fast float 1.000000e+00, %87
  %89 = getelementptr inbounds [3 x float], ptr %11, i64 0, i64 2
  store float %88, ptr %89, align 8, !tbaa !44
  %90 = getelementptr inbounds %struct.Camera, ptr %49, i64 0, i32 10
  %91 = load float, ptr %90, align 8, !tbaa !422
  call void @BKE_camera_view_frame_ex(ptr noundef %0, ptr noundef %49, float noundef nofpclass(nan inf) %91, i8 noundef zeroext %26, ptr noundef nonnull %11, ptr noundef nonnull %9, ptr noundef nonnull %10, ptr noundef nonnull %12, ptr noundef nonnull %8) #13
  call void @glDisable(i32 noundef 2896) #13
  call void @glDisable(i32 noundef 2884) #13
  call void @glBegin(i32 noundef 2) #13
  call void @glVertex3fv(ptr noundef nonnull %8) #13
  %92 = getelementptr inbounds [4 x [3 x float]], ptr %8, i64 0, i64 1
  call void @glVertex3fv(ptr noundef nonnull %92) #13
  %93 = getelementptr inbounds [4 x [3 x float]], ptr %8, i64 0, i64 2
  call void @glVertex3fv(ptr noundef nonnull %93) #13
  %94 = getelementptr inbounds [4 x [3 x float]], ptr %8, i64 0, i64 3
  call void @glVertex3fv(ptr noundef nonnull %94) #13
  call void @glEnd() #13
  br i1 %31, label %95, label %202

95:                                               ; preds = %47
  %96 = getelementptr inbounds float, ptr %7, i64 1
  store <2 x float> zeroinitializer, ptr %7, align 8, !tbaa !44
  %97 = getelementptr inbounds float, ptr %7, i64 2
  store float 0.000000e+00, ptr %97, align 8, !tbaa !44
  call void @glBegin(i32 noundef 3) #13
  call void @glVertex3fv(ptr noundef nonnull %92) #13
  call void @glVertex3fv(ptr noundef nonnull %7) #13
  call void @glVertex3fv(ptr noundef nonnull %8) #13
  call void @glVertex3fv(ptr noundef nonnull %94) #13
  call void @glVertex3fv(ptr noundef nonnull %7) #13
  call void @glVertex3fv(ptr noundef nonnull %93) #13
  call void @glEnd() #13
  %98 = getelementptr inbounds [4 x [3 x float]], ptr %8, i64 0, i64 1, i64 2
  %99 = load float, ptr %98, align 4, !tbaa !44
  store float %99, ptr %97, align 8, !tbaa !44
  %100 = getelementptr inbounds %struct.View3D, ptr %1, i64 0, i32 15
  %101 = getelementptr inbounds [2 x float], ptr %10, i64 0, i64 1
  %102 = getelementptr inbounds [2 x float], ptr %9, i64 0, i64 1
  call void @glBegin(i32 noundef 2) #13
  %103 = load float, ptr %102, align 4, !tbaa !44
  %104 = load float, ptr %12, align 4, !tbaa !44
  %105 = fadd fast float %103, 0x3FB99999A0000000
  %106 = load <2 x float>, ptr %11, align 8, !tbaa !44
  %107 = load <2 x float>, ptr %10, align 8, !tbaa !44
  %108 = insertelement <2 x float> <float 0x3FE6666660000000, float poison>, float %105, i64 1
  %109 = insertelement <2 x float> poison, float %104, i64 0
  %110 = shufflevector <2 x float> %109, <2 x float> poison, <2 x i32> zeroinitializer
  %111 = fmul fast <2 x float> %108, %110
  %112 = fmul fast <2 x float> %111, %106
  %113 = fsub fast <2 x float> %107, %112
  %114 = fadd fast <2 x float> %107, %112
  %115 = shufflevector <2 x float> %113, <2 x float> %114, <2 x i32> <i32 0, i32 3>
  store <2 x float> %115, ptr %7, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %7) #13
  %116 = load float, ptr %10, align 8, !tbaa !44
  %117 = load float, ptr %12, align 4, !tbaa !44
  %118 = fmul fast float %117, 0x3FE6666660000000
  %119 = load float, ptr %11, align 8, !tbaa !44
  %120 = fmul fast float %118, %119
  %121 = fadd fast float %120, %116
  store float %121, ptr %7, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %7) #13
  %122 = load float, ptr %10, align 8, !tbaa !44
  store float %122, ptr %7, align 8, !tbaa !44
  %123 = load float, ptr %101, align 4, !tbaa !44
  %124 = load float, ptr %12, align 4, !tbaa !44
  %125 = fmul fast float %124, 0x3FF19999A0000000
  %126 = load float, ptr %102, align 4, !tbaa !44
  %127 = fadd fast float %126, 0x3FE6666660000000
  %128 = fmul fast float %125, %127
  %129 = load float, ptr %62, align 4, !tbaa !44
  %130 = fmul fast float %128, %129
  %131 = fadd fast float %130, %123
  store float %131, ptr %96, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %7) #13
  call void @glEnd() #13
  %132 = load ptr, ptr %100, align 8, !tbaa !103
  %133 = icmp eq ptr %16, %132
  br i1 %133, label %134, label %164

134:                                              ; preds = %95
  call void @glBegin(i32 noundef 4) #13
  %135 = load float, ptr %102, align 4, !tbaa !44
  %136 = load float, ptr %12, align 4, !tbaa !44
  %137 = fadd fast float %135, 0x3FB99999A0000000
  %138 = load <2 x float>, ptr %11, align 8, !tbaa !44
  %139 = load <2 x float>, ptr %10, align 8, !tbaa !44
  %140 = insertelement <2 x float> <float 0x3FE6666660000000, float poison>, float %137, i64 1
  %141 = insertelement <2 x float> poison, float %136, i64 0
  %142 = shufflevector <2 x float> %141, <2 x float> poison, <2 x i32> zeroinitializer
  %143 = fmul fast <2 x float> %140, %142
  %144 = fmul fast <2 x float> %143, %138
  %145 = fsub fast <2 x float> %139, %144
  %146 = fadd fast <2 x float> %139, %144
  %147 = shufflevector <2 x float> %145, <2 x float> %146, <2 x i32> <i32 0, i32 3>
  store <2 x float> %147, ptr %7, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %7) #13
  %148 = load float, ptr %10, align 8, !tbaa !44
  %149 = load float, ptr %12, align 4, !tbaa !44
  %150 = fmul fast float %149, 0x3FE6666660000000
  %151 = load float, ptr %11, align 8, !tbaa !44
  %152 = fmul fast float %150, %151
  %153 = fadd fast float %152, %148
  store float %153, ptr %7, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %7) #13
  %154 = load float, ptr %10, align 8, !tbaa !44
  store float %154, ptr %7, align 8, !tbaa !44
  %155 = load float, ptr %101, align 4, !tbaa !44
  %156 = load float, ptr %12, align 4, !tbaa !44
  %157 = fmul fast float %156, 0x3FF19999A0000000
  %158 = load float, ptr %102, align 4, !tbaa !44
  %159 = fadd fast float %158, 0x3FE6666660000000
  %160 = fmul fast float %157, %159
  %161 = load float, ptr %62, align 4, !tbaa !44
  %162 = fmul fast float %160, %161
  %163 = fadd fast float %162, %155
  store float %163, ptr %96, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %7) #13
  call void @glEnd() #13
  br label %164

164:                                              ; preds = %134, %95
  %165 = and i16 %4, 4
  %166 = icmp eq i16 %165, 0
  br i1 %166, label %167, label %202

167:                                              ; preds = %164
  %168 = getelementptr inbounds %struct.Camera, ptr %49, i64 0, i32 4
  %169 = load i16, ptr %168, align 2, !tbaa !424
  %170 = and i16 %169, 3
  %171 = icmp eq i16 %170, 0
  br i1 %171, label %202, label %172

172:                                              ; preds = %167
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %14) #13
  call void @copy_m4_m4(ptr noundef nonnull %14, ptr noundef nonnull %50) #13
  call void @normalize_m4(ptr noundef nonnull %14) #13
  call void @glPushMatrix() #13
  %173 = getelementptr inbounds %struct.RegionView3D, ptr %2, i64 0, i32 1
  call void @glLoadMatrixf(ptr noundef nonnull %173) #13
  call void @glMultMatrixf(ptr noundef nonnull %14) #13
  %174 = load i16, ptr %168, align 2, !tbaa !424
  %175 = and i16 %174, 1
  %176 = icmp eq i16 %175, 0
  br i1 %176, label %187, label %177

177:                                              ; preds = %172
  %178 = getelementptr inbounds %struct.Camera, ptr %49, i64 0, i32 6
  %179 = load float, ptr %178, align 8, !tbaa !425
  %180 = getelementptr inbounds %struct.Camera, ptr %49, i64 0, i32 7
  %181 = load float, ptr %180, align 4, !tbaa !426
  call fastcc void @draw_limit_line(float noundef nofpclass(nan inf) %179, float noundef nofpclass(nan inf) %181, i16 noundef signext %4, i32 noundef 7864319)
  %182 = call fast nofpclass(nan inf) float @BKE_camera_object_dof_distance(ptr noundef nonnull %16) #13
  %183 = load float, ptr %90, align 8, !tbaa !422
  call void @glBegin(i32 noundef 1) #13
  %184 = fneg fast float %183
  %185 = fneg fast float %182
  call void @glVertex3f(float noundef nofpclass(nan inf) %184, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %185) #13
  call void @glVertex3f(float noundef nofpclass(nan inf) %183, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %185) #13
  call void @glVertex3f(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %184, float noundef nofpclass(nan inf) %185) #13
  call void @glVertex3f(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %183, float noundef nofpclass(nan inf) %185) #13
  call void @glEnd() #13
  %186 = load i16, ptr %168, align 2, !tbaa !424
  br label %187

187:                                              ; preds = %177, %172
  %188 = phi i16 [ %186, %177 ], [ %174, %172 ]
  %189 = and i16 %188, 2
  %190 = icmp eq i16 %189, 0
  br i1 %190, label %201, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 3
  %193 = load ptr, ptr %192, align 8, !tbaa !427
  %194 = icmp eq ptr %193, null
  br i1 %194, label %201, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %struct.World, ptr %193, i64 0, i32 31
  %197 = load float, ptr %196, align 4, !tbaa !428
  %198 = getelementptr inbounds %struct.World, ptr %193, i64 0, i32 32
  %199 = load float, ptr %198, align 8, !tbaa !430
  %200 = fadd fast float %199, %197
  call fastcc void @draw_limit_line(float noundef nofpclass(nan inf) %197, float noundef nofpclass(nan inf) %200, i16 noundef signext %4, i32 noundef 16777215)
  br label %201

201:                                              ; preds = %191, %195, %187
  call void @glPopMatrix() #13
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %14) #13
  br label %202

202:                                              ; preds = %164, %201, %167, %47, %46
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %11) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #13
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %8) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #13
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @drawspeaker() unnamed_addr #0 {
  %1 = alloca [3 x float], align 8
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %1) #13
  tail call void @glEnable(i32 noundef 3042) #13
  %2 = getelementptr inbounds [3 x float], ptr %1, i64 0, i64 2
  store float -1.250000e-01, ptr %2, align 8, !tbaa !44
  tail call void @glBegin(i32 noundef 2) #13
  store <2 x float> <float 5.000000e-01, float 0.000000e+00>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3FDD906BC0000000, float 0x3FC87DE2C0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3FD6A09E60000000, float 0x3FD6A09E60000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3FC87DE2A0000000, float 0x3FDD906BC0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBE5777A5C0000000, float 5.000000e-01>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBFC87DE300000000, float 0x3FDD906BC0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBFD6A09E60000000, float 0x3FD6A09E60000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBFDD906C00000000, float 0x3FC87DE200000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float -5.000000e-01, float 0xBE6777A5C0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBFDD906BC0000000, float 0xBFC87DE2A0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBFD6A09E20000000, float 0xBFD6A09EA0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBFC87DE160000000, float 0xBFDD906C20000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3E399BC5C0000000, float -5.000000e-01>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3FC87DE360000000, float 0xBFDD906BA0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3FD6A09EE0000000, float 0xBFD6A09DE0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3FDD906BE0000000, float 0xBFC87DE2A0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  call void @glEnd() #13
  store float 1.250000e-01, ptr %2, align 8, !tbaa !44
  call void @glBegin(i32 noundef 2) #13
  store <2 x float> <float 2.500000e-01, float 0.000000e+00>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3FCD906BC0000000, float 0x3FB87DE2C0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3FC6A09E60000000, float 0x3FC6A09E60000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3FB87DE2A0000000, float 0x3FCD906BC0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBE4777A5C0000000, float 2.500000e-01>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBFB87DE300000000, float 0x3FCD906BC0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBFC6A09E60000000, float 0x3FC6A09E60000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBFCD906C00000000, float 0x3FB87DE200000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float -2.500000e-01, float 0xBE5777A5C0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBFCD906BC0000000, float 0xBFB87DE2A0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBFC6A09E20000000, float 0xBFC6A09EA0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBFB87DE160000000, float 0xBFCD906C20000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3E299BC5C0000000, float -2.500000e-01>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3FB87DE360000000, float 0xBFCD906BA0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3FC6A09EE0000000, float 0xBFC6A09DE0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3FCD906BE0000000, float 0xBFB87DE2A0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  call void @glEnd() #13
  store float 3.750000e-01, ptr %2, align 8, !tbaa !44
  call void @glBegin(i32 noundef 2) #13
  store <2 x float> <float 2.500000e-01, float 0.000000e+00>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3FCD906BC0000000, float 0x3FB87DE2C0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3FC6A09E60000000, float 0x3FC6A09E60000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3FB87DE2A0000000, float 0x3FCD906BC0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBE4777A5C0000000, float 2.500000e-01>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBFB87DE300000000, float 0x3FCD906BC0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBFC6A09E60000000, float 0x3FC6A09E60000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBFCD906C00000000, float 0x3FB87DE200000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float -2.500000e-01, float 0xBE5777A5C0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBFCD906BC0000000, float 0xBFB87DE2A0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBFC6A09E20000000, float 0xBFC6A09EA0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0xBFB87DE160000000, float 0xBFCD906C20000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3E299BC5C0000000, float -2.500000e-01>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3FB87DE360000000, float 0xBFCD906BA0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3FC6A09EE0000000, float 0xBFC6A09DE0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store <2 x float> <float 0x3FCD906BE0000000, float 0xBFB87DE2A0000000>, ptr %1, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  call void @glEnd() #13
  store <2 x float> <float -5.000000e-01, float 0.000000e+00>, ptr %1, align 8, !tbaa !44
  call void @glBegin(i32 noundef 3) #13
  store float -1.250000e-01, ptr %2, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  %3 = load <2 x float>, ptr %1, align 8, !tbaa !44
  %4 = fmul fast <2 x float> %3, <float 5.000000e-01, float 5.000000e-01>
  store <2 x float> %4, ptr %1, align 8, !tbaa !44
  store float 1.250000e-01, ptr %2, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store float 3.750000e-01, ptr %2, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  call void @glEnd() #13
  store <2 x float> <float 0.000000e+00, float -5.000000e-01>, ptr %1, align 8, !tbaa !44
  call void @glBegin(i32 noundef 3) #13
  store float -1.250000e-01, ptr %2, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  %5 = load <2 x float>, ptr %1, align 8, !tbaa !44
  %6 = fmul fast <2 x float> %5, <float 5.000000e-01, float 5.000000e-01>
  store <2 x float> %6, ptr %1, align 8, !tbaa !44
  store float 1.250000e-01, ptr %2, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store float 3.750000e-01, ptr %2, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  call void @glEnd() #13
  store <2 x float> <float 5.000000e-01, float 0.000000e+00>, ptr %1, align 8, !tbaa !44
  call void @glBegin(i32 noundef 3) #13
  store float -1.250000e-01, ptr %2, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  %7 = load <2 x float>, ptr %1, align 8, !tbaa !44
  %8 = fmul fast <2 x float> %7, <float 5.000000e-01, float 5.000000e-01>
  store <2 x float> %8, ptr %1, align 8, !tbaa !44
  store float 1.250000e-01, ptr %2, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store float 3.750000e-01, ptr %2, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  call void @glEnd() #13
  store <2 x float> <float 0.000000e+00, float 5.000000e-01>, ptr %1, align 8, !tbaa !44
  call void @glBegin(i32 noundef 3) #13
  store float -1.250000e-01, ptr %2, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  %9 = load <2 x float>, ptr %1, align 8, !tbaa !44
  %10 = fmul fast <2 x float> %9, <float 5.000000e-01, float 5.000000e-01>
  store <2 x float> %10, ptr %1, align 8, !tbaa !44
  store float 1.250000e-01, ptr %2, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  store float 3.750000e-01, ptr %2, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %1) #13
  call void @glEnd() #13
  call void @glDisable(i32 noundef 3042) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %1) #13
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @drawlattice(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) unnamed_addr #0 {
  %3 = alloca [3 x float], align 4
  %4 = alloca [3 x float], align 4
  %5 = alloca [3 x float], align 4
  %6 = alloca [3 x float], align 4
  %7 = alloca [3 x float], align 4
  %8 = alloca [3 x float], align 4
  %9 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 19
  %10 = load ptr, ptr %9, align 8, !tbaa !90
  %11 = getelementptr inbounds %struct.Lattice, ptr %10, i64 0, i32 26
  %12 = load ptr, ptr %11, align 8, !tbaa !431
  %13 = icmp eq ptr %12, null
  %14 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 118
  %15 = load ptr, ptr %14, align 8, !tbaa !113
  %16 = tail call ptr @BKE_displist_find(ptr noundef %15, i32 noundef 7) #13
  br i1 %13, label %31, label %17

17:                                               ; preds = %2
  %18 = load ptr, ptr %11, align 8, !tbaa !431
  %19 = load ptr, ptr %18, align 8, !tbaa !433
  tail call void @UI_ThemeColor(i32 noundef 27) #13
  %20 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 25
  %21 = load ptr, ptr %20, align 8, !tbaa !435
  %22 = icmp eq ptr %21, null
  br i1 %22, label %31, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.Lattice, ptr %19, i64 0, i32 24
  %25 = load ptr, ptr %24, align 8, !tbaa !436
  %26 = icmp eq ptr %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 97
  %29 = load i16, ptr %28, align 2, !tbaa !437
  %30 = zext i16 %29 to i32
  tail call void @glShadeModel(i32 noundef 7425) #13
  br label %31

31:                                               ; preds = %17, %23, %27, %2
  %32 = phi i32 [ %30, %27 ], [ 0, %23 ], [ 0, %17 ], [ 0, %2 ]
  %33 = phi ptr [ %19, %27 ], [ %19, %23 ], [ %19, %17 ], [ %10, %2 ]
  tail call void @glBegin(i32 noundef 1) #13
  %34 = getelementptr inbounds %struct.Lattice, ptr %33, i64 0, i32 4
  %35 = load i16, ptr %34, align 4, !tbaa !438
  %36 = icmp sgt i16 %35, 0
  br i1 %36, label %37, label %314

37:                                               ; preds = %31
  %38 = zext i16 %35 to i32
  %39 = getelementptr inbounds %struct.Lattice, ptr %33, i64 0, i32 3
  %40 = getelementptr inbounds %struct.Lattice, ptr %33, i64 0, i32 2
  %41 = getelementptr inbounds %struct.Lattice, ptr %33, i64 0, i32 5
  %42 = icmp eq i32 %32, 0
  %43 = getelementptr inbounds %struct.Lattice, ptr %33, i64 0, i32 24
  %44 = add nsw i32 %32, -1
  %45 = icmp eq ptr %16, null
  %46 = getelementptr inbounds %struct.DispList, ptr %16, i64 0, i32 8
  %47 = getelementptr inbounds %struct.Lattice, ptr %33, i64 0, i32 21
  %48 = load i16, ptr %39, align 2, !tbaa !439
  br label %49

49:                                               ; preds = %37, %307
  %50 = phi i16 [ %35, %37 ], [ %308, %307 ]
  %51 = phi i16 [ %48, %37 ], [ %309, %307 ]
  %52 = phi i16 [ %48, %37 ], [ %310, %307 ]
  %53 = phi i32 [ %38, %37 ], [ %312, %307 ]
  %54 = phi i32 [ 0, %37 ], [ %311, %307 ]
  %55 = icmp eq i32 %54, 0
  %56 = add nsw i32 %53, -1
  %57 = icmp eq i32 %54, %56
  %58 = select i1 %55, i1 true, i1 %57
  %59 = icmp sgt i16 %52, 0
  br i1 %59, label %60, label %307

60:                                               ; preds = %49
  %61 = zext i16 %52 to i32
  %62 = add nsw i32 %54, -1
  %63 = load i16, ptr %40, align 8, !tbaa !440
  br label %64

64:                                               ; preds = %60, %299
  %65 = phi i16 [ %51, %60 ], [ %300, %299 ]
  %66 = phi i16 [ %63, %60 ], [ %301, %299 ]
  %67 = phi i32 [ %61, %60 ], [ %303, %299 ]
  %68 = phi i32 [ 0, %60 ], [ %302, %299 ]
  %69 = icmp eq i32 %68, 0
  %70 = add nsw i32 %67, -1
  %71 = icmp eq i32 %68, %70
  %72 = select i1 %69, i1 true, i1 %71
  %73 = icmp sgt i16 %66, 0
  br i1 %73, label %74, label %299

74:                                               ; preds = %64
  %75 = zext i16 %66 to i32
  %76 = add nsw i32 %68, -1
  %77 = select i1 %72, i1 true, i1 %58
  br label %78

78:                                               ; preds = %74, %292
  %79 = phi i32 [ %75, %74 ], [ %295, %292 ]
  %80 = phi i32 [ 0, %74 ], [ %293, %292 ]
  %81 = icmp eq i32 %80, 0
  %82 = add nsw i32 %79, -1
  %83 = icmp eq i32 %80, %82
  %84 = select i1 %81, i1 true, i1 %83
  br i1 %55, label %152, label %85

85:                                               ; preds = %78
  %86 = select i1 %84, i1 true, i1 %72
  br i1 %86, label %91, label %87

87:                                               ; preds = %85
  %88 = load i16, ptr %41, align 2, !tbaa !441
  %89 = and i16 %88, 2
  %90 = icmp eq i16 %89, 0
  br i1 %90, label %91, label %153

91:                                               ; preds = %87, %85
  %92 = load i16, ptr %39, align 2, !tbaa !439
  %93 = sext i16 %92 to i32
  %94 = mul nsw i32 %62, %93
  %95 = add nsw i32 %94, %68
  %96 = mul nsw i32 %95, %79
  %97 = add nsw i32 %96, %80
  br i1 %42, label %109, label %98

98:                                               ; preds = %91
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %8) #13
  %99 = load ptr, ptr %43, align 8, !tbaa !436
  %100 = sext i32 %97 to i64
  %101 = getelementptr inbounds %struct.MDeformVert, ptr %99, i64 %100
  %102 = call ptr @defvert_find_index(ptr noundef %101, i32 noundef %44) #13
  %103 = icmp eq ptr %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %struct.MDeformWeight, ptr %102, i64 0, i32 1
  %106 = load float, ptr %105, align 4, !tbaa !442
  br label %107

107:                                              ; preds = %104, %98
  %108 = phi fast float [ %106, %104 ], [ 0.000000e+00, %98 ]
  call void @weight_to_rgb(ptr noundef nonnull %8, float noundef nofpclass(nan inf) %108) #13
  call void @glColor3fv(ptr noundef nonnull %8) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %8) #13
  br label %109

109:                                              ; preds = %107, %91
  br i1 %45, label %115, label %110

110:                                              ; preds = %109
  %111 = load ptr, ptr %46, align 8, !tbaa !444
  %112 = mul nsw i32 %97, 3
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds float, ptr %111, i64 %113
  br label %119

115:                                              ; preds = %109
  %116 = load ptr, ptr %47, align 8, !tbaa !445
  %117 = sext i32 %97 to i64
  %118 = getelementptr inbounds %struct.BPoint, ptr %116, i64 %117
  br label %119

119:                                              ; preds = %110, %115
  %120 = phi ptr [ %118, %115 ], [ %114, %110 ]
  call void @glVertex3fv(ptr noundef %120) #13
  %121 = load i16, ptr %39, align 2, !tbaa !439
  %122 = sext i16 %121 to i32
  %123 = mul nsw i32 %54, %122
  %124 = add nsw i32 %123, %68
  %125 = load i16, ptr %40, align 8, !tbaa !440
  %126 = sext i16 %125 to i32
  %127 = mul nsw i32 %124, %126
  %128 = add nsw i32 %127, %80
  br i1 %42, label %140, label %129

129:                                              ; preds = %119
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #13
  %130 = load ptr, ptr %43, align 8, !tbaa !436
  %131 = sext i32 %128 to i64
  %132 = getelementptr inbounds %struct.MDeformVert, ptr %130, i64 %131
  %133 = call ptr @defvert_find_index(ptr noundef %132, i32 noundef %44) #13
  %134 = icmp eq ptr %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %struct.MDeformWeight, ptr %133, i64 0, i32 1
  %137 = load float, ptr %136, align 4, !tbaa !442
  br label %138

138:                                              ; preds = %135, %129
  %139 = phi fast float [ %137, %135 ], [ 0.000000e+00, %129 ]
  call void @weight_to_rgb(ptr noundef nonnull %7, float noundef nofpclass(nan inf) %139) #13
  call void @glColor3fv(ptr noundef nonnull %7) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #13
  br label %140

140:                                              ; preds = %138, %119
  br i1 %45, label %146, label %141

141:                                              ; preds = %140
  %142 = load ptr, ptr %46, align 8, !tbaa !444
  %143 = mul nsw i32 %128, 3
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds float, ptr %142, i64 %144
  br label %150

146:                                              ; preds = %140
  %147 = load ptr, ptr %47, align 8, !tbaa !445
  %148 = sext i32 %128 to i64
  %149 = getelementptr inbounds %struct.BPoint, ptr %147, i64 %148
  br label %150

150:                                              ; preds = %141, %146
  %151 = phi ptr [ %149, %146 ], [ %145, %141 ]
  call void @glVertex3fv(ptr noundef %151) #13
  br label %152

152:                                              ; preds = %150, %78
  br i1 %69, label %222, label %153

153:                                              ; preds = %87, %152
  %154 = select i1 %84, i1 true, i1 %58
  br i1 %154, label %159, label %155

155:                                              ; preds = %153
  %156 = load i16, ptr %41, align 2, !tbaa !441
  %157 = and i16 %156, 2
  %158 = icmp eq i16 %157, 0
  br i1 %158, label %159, label %223

159:                                              ; preds = %155, %153
  %160 = load i16, ptr %39, align 2, !tbaa !439
  %161 = sext i16 %160 to i32
  %162 = mul nsw i32 %54, %161
  %163 = add nsw i32 %76, %162
  %164 = load i16, ptr %40, align 8, !tbaa !440
  %165 = sext i16 %164 to i32
  %166 = mul nsw i32 %163, %165
  %167 = add nsw i32 %166, %80
  br i1 %42, label %179, label %168

168:                                              ; preds = %159
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #13
  %169 = load ptr, ptr %43, align 8, !tbaa !436
  %170 = sext i32 %167 to i64
  %171 = getelementptr inbounds %struct.MDeformVert, ptr %169, i64 %170
  %172 = call ptr @defvert_find_index(ptr noundef %171, i32 noundef %44) #13
  %173 = icmp eq ptr %172, null
  br i1 %173, label %177, label %174

174:                                              ; preds = %168
  %175 = getelementptr inbounds %struct.MDeformWeight, ptr %172, i64 0, i32 1
  %176 = load float, ptr %175, align 4, !tbaa !442
  br label %177

177:                                              ; preds = %174, %168
  %178 = phi fast float [ %176, %174 ], [ 0.000000e+00, %168 ]
  call void @weight_to_rgb(ptr noundef nonnull %6, float noundef nofpclass(nan inf) %178) #13
  call void @glColor3fv(ptr noundef nonnull %6) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #13
  br label %179

179:                                              ; preds = %177, %159
  br i1 %45, label %185, label %180

180:                                              ; preds = %179
  %181 = load ptr, ptr %46, align 8, !tbaa !444
  %182 = mul nsw i32 %167, 3
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds float, ptr %181, i64 %183
  br label %189

185:                                              ; preds = %179
  %186 = load ptr, ptr %47, align 8, !tbaa !445
  %187 = sext i32 %167 to i64
  %188 = getelementptr inbounds %struct.BPoint, ptr %186, i64 %187
  br label %189

189:                                              ; preds = %180, %185
  %190 = phi ptr [ %188, %185 ], [ %184, %180 ]
  call void @glVertex3fv(ptr noundef %190) #13
  %191 = load i16, ptr %39, align 2, !tbaa !439
  %192 = sext i16 %191 to i32
  %193 = mul nsw i32 %54, %192
  %194 = add nsw i32 %193, %68
  %195 = load i16, ptr %40, align 8, !tbaa !440
  %196 = sext i16 %195 to i32
  %197 = mul nsw i32 %194, %196
  %198 = add nsw i32 %197, %80
  br i1 %42, label %210, label %199

199:                                              ; preds = %189
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #13
  %200 = load ptr, ptr %43, align 8, !tbaa !436
  %201 = sext i32 %198 to i64
  %202 = getelementptr inbounds %struct.MDeformVert, ptr %200, i64 %201
  %203 = call ptr @defvert_find_index(ptr noundef %202, i32 noundef %44) #13
  %204 = icmp eq ptr %203, null
  br i1 %204, label %208, label %205

205:                                              ; preds = %199
  %206 = getelementptr inbounds %struct.MDeformWeight, ptr %203, i64 0, i32 1
  %207 = load float, ptr %206, align 4, !tbaa !442
  br label %208

208:                                              ; preds = %205, %199
  %209 = phi fast float [ %207, %205 ], [ 0.000000e+00, %199 ]
  call void @weight_to_rgb(ptr noundef nonnull %5, float noundef nofpclass(nan inf) %209) #13
  call void @glColor3fv(ptr noundef nonnull %5) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #13
  br label %210

210:                                              ; preds = %208, %189
  br i1 %45, label %216, label %211

211:                                              ; preds = %210
  %212 = load ptr, ptr %46, align 8, !tbaa !444
  %213 = mul nsw i32 %198, 3
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds float, ptr %212, i64 %214
  br label %220

216:                                              ; preds = %210
  %217 = load ptr, ptr %47, align 8, !tbaa !445
  %218 = sext i32 %198 to i64
  %219 = getelementptr inbounds %struct.BPoint, ptr %217, i64 %218
  br label %220

220:                                              ; preds = %211, %216
  %221 = phi ptr [ %219, %216 ], [ %215, %211 ]
  call void @glVertex3fv(ptr noundef %221) #13
  br label %222

222:                                              ; preds = %220, %152
  br i1 %81, label %292, label %223

223:                                              ; preds = %155, %222
  br i1 %77, label %228, label %224

224:                                              ; preds = %223
  %225 = load i16, ptr %41, align 2, !tbaa !441
  %226 = and i16 %225, 2
  %227 = icmp eq i16 %226, 0
  br i1 %227, label %228, label %292

228:                                              ; preds = %224, %223
  %229 = add nsw i32 %80, -1
  %230 = load i16, ptr %39, align 2, !tbaa !439
  %231 = sext i16 %230 to i32
  %232 = mul nsw i32 %54, %231
  %233 = add nsw i32 %232, %68
  %234 = load i16, ptr %40, align 8, !tbaa !440
  %235 = sext i16 %234 to i32
  %236 = mul nsw i32 %233, %235
  %237 = add nsw i32 %229, %236
  br i1 %42, label %249, label %238

238:                                              ; preds = %228
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #13
  %239 = load ptr, ptr %43, align 8, !tbaa !436
  %240 = sext i32 %237 to i64
  %241 = getelementptr inbounds %struct.MDeformVert, ptr %239, i64 %240
  %242 = call ptr @defvert_find_index(ptr noundef %241, i32 noundef %44) #13
  %243 = icmp eq ptr %242, null
  br i1 %243, label %247, label %244

244:                                              ; preds = %238
  %245 = getelementptr inbounds %struct.MDeformWeight, ptr %242, i64 0, i32 1
  %246 = load float, ptr %245, align 4, !tbaa !442
  br label %247

247:                                              ; preds = %244, %238
  %248 = phi fast float [ %246, %244 ], [ 0.000000e+00, %238 ]
  call void @weight_to_rgb(ptr noundef nonnull %4, float noundef nofpclass(nan inf) %248) #13
  call void @glColor3fv(ptr noundef nonnull %4) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #13
  br label %249

249:                                              ; preds = %247, %228
  br i1 %45, label %255, label %250

250:                                              ; preds = %249
  %251 = load ptr, ptr %46, align 8, !tbaa !444
  %252 = mul nsw i32 %237, 3
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds float, ptr %251, i64 %253
  br label %259

255:                                              ; preds = %249
  %256 = load ptr, ptr %47, align 8, !tbaa !445
  %257 = sext i32 %237 to i64
  %258 = getelementptr inbounds %struct.BPoint, ptr %256, i64 %257
  br label %259

259:                                              ; preds = %250, %255
  %260 = phi ptr [ %258, %255 ], [ %254, %250 ]
  call void @glVertex3fv(ptr noundef %260) #13
  %261 = load i16, ptr %39, align 2, !tbaa !439
  %262 = sext i16 %261 to i32
  %263 = mul nsw i32 %54, %262
  %264 = add nsw i32 %263, %68
  %265 = load i16, ptr %40, align 8, !tbaa !440
  %266 = sext i16 %265 to i32
  %267 = mul nsw i32 %264, %266
  %268 = add nsw i32 %267, %80
  br i1 %42, label %280, label %269

269:                                              ; preds = %259
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %3) #13
  %270 = load ptr, ptr %43, align 8, !tbaa !436
  %271 = sext i32 %268 to i64
  %272 = getelementptr inbounds %struct.MDeformVert, ptr %270, i64 %271
  %273 = call ptr @defvert_find_index(ptr noundef %272, i32 noundef %44) #13
  %274 = icmp eq ptr %273, null
  br i1 %274, label %278, label %275

275:                                              ; preds = %269
  %276 = getelementptr inbounds %struct.MDeformWeight, ptr %273, i64 0, i32 1
  %277 = load float, ptr %276, align 4, !tbaa !442
  br label %278

278:                                              ; preds = %275, %269
  %279 = phi fast float [ %277, %275 ], [ 0.000000e+00, %269 ]
  call void @weight_to_rgb(ptr noundef nonnull %3, float noundef nofpclass(nan inf) %279) #13
  call void @glColor3fv(ptr noundef nonnull %3) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %3) #13
  br label %280

280:                                              ; preds = %278, %259
  br i1 %45, label %286, label %281

281:                                              ; preds = %280
  %282 = load ptr, ptr %46, align 8, !tbaa !444
  %283 = mul nsw i32 %268, 3
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds float, ptr %282, i64 %284
  br label %290

286:                                              ; preds = %280
  %287 = load ptr, ptr %47, align 8, !tbaa !445
  %288 = sext i32 %268 to i64
  %289 = getelementptr inbounds %struct.BPoint, ptr %287, i64 %288
  br label %290

290:                                              ; preds = %281, %286
  %291 = phi ptr [ %289, %286 ], [ %285, %281 ]
  call void @glVertex3fv(ptr noundef %291) #13
  br label %292

292:                                              ; preds = %290, %224, %222
  %293 = add nuw nsw i32 %80, 1
  %294 = load i16, ptr %40, align 8, !tbaa !440
  %295 = sext i16 %294 to i32
  %296 = icmp slt i32 %293, %295
  br i1 %296, label %78, label %297, !llvm.loop !446

297:                                              ; preds = %292
  %298 = load i16, ptr %39, align 2, !tbaa !439
  br label %299

299:                                              ; preds = %297, %64
  %300 = phi i16 [ %298, %297 ], [ %65, %64 ]
  %301 = phi i16 [ %294, %297 ], [ %66, %64 ]
  %302 = add nuw nsw i32 %68, 1
  %303 = sext i16 %300 to i32
  %304 = icmp slt i32 %302, %303
  br i1 %304, label %64, label %305, !llvm.loop !447

305:                                              ; preds = %299
  %306 = load i16, ptr %34, align 4, !tbaa !438
  br label %307

307:                                              ; preds = %305, %49
  %308 = phi i16 [ %306, %305 ], [ %50, %49 ]
  %309 = phi i16 [ %300, %305 ], [ %51, %49 ]
  %310 = phi i16 [ %300, %305 ], [ %52, %49 ]
  %311 = add nuw nsw i32 %54, 1
  %312 = sext i16 %308 to i32
  %313 = icmp slt i32 %311, %312
  br i1 %313, label %49, label %314, !llvm.loop !448

314:                                              ; preds = %307, %31
  call void @glEnd() #13
  %315 = icmp eq i32 %32, 0
  br i1 %315, label %317, label %316

316:                                              ; preds = %314
  call void @glShadeModel(i32 noundef 7424) #13
  br label %317

317:                                              ; preds = %316, %314
  br i1 %13, label %328, label %318

318:                                              ; preds = %317
  %319 = call ptr @BKE_lattice_active_point_get(ptr noundef nonnull %33) #13
  %320 = getelementptr inbounds %struct.View3D, ptr %0, i64 0, i32 47
  %321 = load i8, ptr %320, align 8, !tbaa !58
  %322 = icmp eq i8 %321, 0
  br i1 %322, label %324, label %323

323:                                              ; preds = %318
  call void @glDisable(i32 noundef 2929) #13
  br label %324

324:                                              ; preds = %323, %318
  call fastcc void @lattice_draw_verts(ptr noundef nonnull %33, ptr noundef %16, ptr noundef %319, i16 noundef signext 0)
  call fastcc void @lattice_draw_verts(ptr noundef nonnull %33, ptr noundef %16, ptr noundef %319, i16 noundef signext 1)
  %325 = load i8, ptr %320, align 8, !tbaa !58
  %326 = icmp eq i8 %325, 0
  br i1 %326, label %328, label %327

327:                                              ; preds = %324
  call void @glEnable(i32 noundef 2929) #13
  br label %328

328:                                              ; preds = %324, %327, %317
  ret void
}

declare i32 @GPU_enable_material(i32 noundef, ptr noundef) #1

declare zeroext i8 @draw_armature(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i16 noundef signext, i16 noundef signext, ptr noundef, i8 noundef zeroext) local_unnamed_addr #1

declare void @GPU_disable_material() local_unnamed_addr #1

declare void @glLoadMatrixf(ptr noundef) local_unnamed_addr #1

declare void @copy_m3_m3(ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @mul_m3_m3m3(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @ob_draw_RE_motion(ptr nocapture noundef readonly %0, ptr noundef %1) unnamed_addr #0 {
  %3 = alloca [3 x [3 x float]], align 16
  %4 = alloca [3 x float], align 8
  %5 = alloca [3 x float], align 8
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %3) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #13
  call void @copy_m3_m3(ptr noundef nonnull %3, ptr noundef %1) #13
  call void @glColor4ub(i8 noundef zeroext 127, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext -101) #13
  call void @glBegin(i32 noundef 1) #13
  %6 = getelementptr inbounds [3 x float], ptr %4, i64 0, i64 2
  %7 = getelementptr inbounds [3 x float], ptr %4, i64 0, i64 1
  store <2 x float> zeroinitializer, ptr %7, align 4, !tbaa !44
  store float -4.000000e+00, ptr %4, align 8, !tbaa !44
  call void @mul_m3_v3(ptr noundef nonnull %3, ptr noundef nonnull %4) #13
  %8 = load <2 x float>, ptr %0, align 4, !tbaa !44
  %9 = load <2 x float>, ptr %4, align 8, !tbaa !44
  %10 = fadd fast <2 x float> %9, %8
  store <2 x float> %10, ptr %4, align 8, !tbaa !44
  %11 = getelementptr inbounds float, ptr %0, i64 2
  %12 = load float, ptr %11, align 4, !tbaa !44
  %13 = load float, ptr %6, align 8, !tbaa !44
  %14 = fadd fast float %13, %12
  store float %14, ptr %6, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %4) #13
  %15 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 2
  store float 0.000000e+00, ptr %15, align 8, !tbaa !44
  store <2 x float> <float 4.000000e+00, float 0.000000e+00>, ptr %5, align 8, !tbaa !44
  call void @mul_m3_v3(ptr noundef nonnull %3, ptr noundef nonnull %5) #13
  %16 = load <2 x float>, ptr %0, align 4, !tbaa !44
  %17 = load <2 x float>, ptr %5, align 8, !tbaa !44
  %18 = fadd fast <2 x float> %17, %16
  store <2 x float> %18, ptr %5, align 8, !tbaa !44
  %19 = load float, ptr %11, align 4, !tbaa !44
  %20 = load float, ptr %15, align 8, !tbaa !44
  %21 = fadd fast float %20, %19
  store float %21, ptr %15, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glEnd() #13
  store <2 x float> <float 0.000000e+00, float 2.000000e+00>, ptr %7, align 4, !tbaa !44
  store float 2.000000e+00, ptr %4, align 8, !tbaa !44
  call void @glBegin(i32 noundef 1) #13
  call void @mul_m3_v3(ptr noundef nonnull %3, ptr noundef nonnull %4) #13
  %22 = load <2 x float>, ptr %0, align 4, !tbaa !44
  %23 = load <2 x float>, ptr %4, align 8, !tbaa !44
  %24 = fadd fast <2 x float> %23, %22
  store <2 x float> %24, ptr %4, align 8, !tbaa !44
  %25 = load float, ptr %11, align 4, !tbaa !44
  %26 = load float, ptr %6, align 8, !tbaa !44
  %27 = fadd fast float %26, %25
  store float %27, ptr %6, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %4) #13
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glEnd() #13
  store <2 x float> <float 0.000000e+00, float -2.000000e+00>, ptr %7, align 4, !tbaa !44
  store float 2.000000e+00, ptr %4, align 8, !tbaa !44
  call void @glBegin(i32 noundef 1) #13
  call void @mul_m3_v3(ptr noundef nonnull %3, ptr noundef nonnull %4) #13
  %28 = load <2 x float>, ptr %0, align 4, !tbaa !44
  %29 = load <2 x float>, ptr %4, align 8, !tbaa !44
  %30 = fadd fast <2 x float> %29, %28
  store <2 x float> %30, ptr %4, align 8, !tbaa !44
  %31 = load float, ptr %11, align 4, !tbaa !44
  %32 = load float, ptr %6, align 8, !tbaa !44
  %33 = fadd fast float %32, %31
  store float %33, ptr %6, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %4) #13
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glEnd() #13
  store <2 x float> <float 2.000000e+00, float 0.000000e+00>, ptr %7, align 4, !tbaa !44
  store float 2.000000e+00, ptr %4, align 8, !tbaa !44
  call void @glBegin(i32 noundef 1) #13
  call void @mul_m3_v3(ptr noundef nonnull %3, ptr noundef nonnull %4) #13
  %34 = load <2 x float>, ptr %0, align 4, !tbaa !44
  %35 = load <2 x float>, ptr %4, align 8, !tbaa !44
  %36 = fadd fast <2 x float> %35, %34
  store <2 x float> %36, ptr %4, align 8, !tbaa !44
  %37 = load float, ptr %11, align 4, !tbaa !44
  %38 = load float, ptr %6, align 8, !tbaa !44
  %39 = fadd fast float %38, %37
  store float %39, ptr %6, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %4) #13
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glEnd() #13
  store float 0.000000e+00, ptr %6, align 8, !tbaa !44
  store <2 x float> <float 2.000000e+00, float -2.000000e+00>, ptr %4, align 8, !tbaa !44
  call void @glBegin(i32 noundef 1) #13
  call void @mul_m3_v3(ptr noundef nonnull %3, ptr noundef nonnull %4) #13
  %40 = load <2 x float>, ptr %0, align 4, !tbaa !44
  %41 = load <2 x float>, ptr %4, align 8, !tbaa !44
  %42 = fadd fast <2 x float> %41, %40
  store <2 x float> %42, ptr %4, align 8, !tbaa !44
  %43 = load float, ptr %11, align 4, !tbaa !44
  %44 = load float, ptr %6, align 8, !tbaa !44
  %45 = fadd fast float %44, %43
  store float %45, ptr %6, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %4) #13
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glEnd() #13
  call void @glColor4ub(i8 noundef zeroext 0, i8 noundef zeroext 127, i8 noundef zeroext 0, i8 noundef zeroext -101) #13
  call void @glBegin(i32 noundef 1) #13
  store float 0.000000e+00, ptr %6, align 8, !tbaa !44
  store <2 x float> <float 0.000000e+00, float -4.000000e+00>, ptr %4, align 8, !tbaa !44
  call void @mul_m3_v3(ptr noundef nonnull %3, ptr noundef nonnull %4) #13
  %46 = load <2 x float>, ptr %0, align 4, !tbaa !44
  %47 = load <2 x float>, ptr %4, align 8, !tbaa !44
  %48 = fadd fast <2 x float> %47, %46
  store <2 x float> %48, ptr %4, align 8, !tbaa !44
  %49 = load float, ptr %11, align 4, !tbaa !44
  %50 = load float, ptr %6, align 8, !tbaa !44
  %51 = fadd fast float %50, %49
  store float %51, ptr %6, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %4) #13
  store float 0.000000e+00, ptr %15, align 8, !tbaa !44
  store <2 x float> <float 0.000000e+00, float 4.000000e+00>, ptr %5, align 8, !tbaa !44
  call void @mul_m3_v3(ptr noundef nonnull %3, ptr noundef nonnull %5) #13
  %52 = load <2 x float>, ptr %0, align 4, !tbaa !44
  %53 = load <2 x float>, ptr %5, align 8, !tbaa !44
  %54 = fadd fast <2 x float> %53, %52
  store <2 x float> %54, ptr %5, align 8, !tbaa !44
  %55 = load float, ptr %11, align 4, !tbaa !44
  %56 = load float, ptr %15, align 8, !tbaa !44
  %57 = fadd fast float %56, %55
  store float %57, ptr %15, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glEnd() #13
  store float 2.000000e+00, ptr %6, align 8, !tbaa !44
  store <2 x float> <float 0.000000e+00, float 2.000000e+00>, ptr %4, align 8, !tbaa !44
  call void @glBegin(i32 noundef 1) #13
  call void @mul_m3_v3(ptr noundef nonnull %3, ptr noundef nonnull %4) #13
  %58 = load <2 x float>, ptr %0, align 4, !tbaa !44
  %59 = load <2 x float>, ptr %4, align 8, !tbaa !44
  %60 = fadd fast <2 x float> %59, %58
  store <2 x float> %60, ptr %4, align 8, !tbaa !44
  %61 = load float, ptr %11, align 4, !tbaa !44
  %62 = load float, ptr %6, align 8, !tbaa !44
  %63 = fadd fast float %62, %61
  store float %63, ptr %6, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %4) #13
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glEnd() #13
  store float -2.000000e+00, ptr %6, align 8, !tbaa !44
  store <2 x float> <float 0.000000e+00, float 2.000000e+00>, ptr %4, align 8, !tbaa !44
  call void @glBegin(i32 noundef 1) #13
  call void @mul_m3_v3(ptr noundef nonnull %3, ptr noundef nonnull %4) #13
  %64 = load <2 x float>, ptr %0, align 4, !tbaa !44
  %65 = load <2 x float>, ptr %4, align 8, !tbaa !44
  %66 = fadd fast <2 x float> %65, %64
  store <2 x float> %66, ptr %4, align 8, !tbaa !44
  %67 = load float, ptr %11, align 4, !tbaa !44
  %68 = load float, ptr %6, align 8, !tbaa !44
  %69 = fadd fast float %68, %67
  store float %69, ptr %6, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %4) #13
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glEnd() #13
  store float 0.000000e+00, ptr %6, align 8, !tbaa !44
  store <2 x float> <float 2.000000e+00, float 2.000000e+00>, ptr %4, align 8, !tbaa !44
  call void @glBegin(i32 noundef 1) #13
  call void @mul_m3_v3(ptr noundef nonnull %3, ptr noundef nonnull %4) #13
  %70 = load <2 x float>, ptr %0, align 4, !tbaa !44
  %71 = load <2 x float>, ptr %4, align 8, !tbaa !44
  %72 = fadd fast <2 x float> %71, %70
  store <2 x float> %72, ptr %4, align 8, !tbaa !44
  %73 = load float, ptr %11, align 4, !tbaa !44
  %74 = load float, ptr %6, align 8, !tbaa !44
  %75 = fadd fast float %74, %73
  store float %75, ptr %6, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %4) #13
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glEnd() #13
  store float 0.000000e+00, ptr %6, align 8, !tbaa !44
  store <2 x float> <float -2.000000e+00, float 2.000000e+00>, ptr %4, align 8, !tbaa !44
  call void @glBegin(i32 noundef 1) #13
  call void @mul_m3_v3(ptr noundef nonnull %3, ptr noundef nonnull %4) #13
  %76 = load <2 x float>, ptr %0, align 4, !tbaa !44
  %77 = load <2 x float>, ptr %4, align 8, !tbaa !44
  %78 = fadd fast <2 x float> %77, %76
  store <2 x float> %78, ptr %4, align 8, !tbaa !44
  %79 = load float, ptr %11, align 4, !tbaa !44
  %80 = load float, ptr %6, align 8, !tbaa !44
  %81 = fadd fast float %80, %79
  store float %81, ptr %6, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %4) #13
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glEnd() #13
  call void @glColor4ub(i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 127, i8 noundef zeroext -101) #13
  call void @glBegin(i32 noundef 1) #13
  store <2 x float> zeroinitializer, ptr %4, align 8, !tbaa !44
  store float -4.000000e+00, ptr %6, align 8, !tbaa !44
  call void @mul_m3_v3(ptr noundef nonnull %3, ptr noundef nonnull %4) #13
  %82 = load <2 x float>, ptr %0, align 4, !tbaa !44
  %83 = load <2 x float>, ptr %4, align 8, !tbaa !44
  %84 = fadd fast <2 x float> %83, %82
  store <2 x float> %84, ptr %4, align 8, !tbaa !44
  %85 = load float, ptr %11, align 4, !tbaa !44
  %86 = load float, ptr %6, align 8, !tbaa !44
  %87 = fadd fast float %86, %85
  store float %87, ptr %6, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %4) #13
  store <2 x float> zeroinitializer, ptr %5, align 8, !tbaa !44
  store float 4.000000e+00, ptr %15, align 8, !tbaa !44
  call void @mul_m3_v3(ptr noundef nonnull %3, ptr noundef nonnull %5) #13
  %88 = load <2 x float>, ptr %0, align 4, !tbaa !44
  %89 = load <2 x float>, ptr %5, align 8, !tbaa !44
  %90 = fadd fast <2 x float> %89, %88
  store <2 x float> %90, ptr %5, align 8, !tbaa !44
  %91 = load float, ptr %11, align 4, !tbaa !44
  %92 = load float, ptr %15, align 8, !tbaa !44
  %93 = fadd fast float %92, %91
  store float %93, ptr %15, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glEnd() #13
  store <2 x float> <float 0.000000e+00, float 2.000000e+00>, ptr %4, align 8, !tbaa !44
  store float 2.000000e+00, ptr %6, align 8, !tbaa !44
  call void @glBegin(i32 noundef 1) #13
  call void @mul_m3_v3(ptr noundef nonnull %3, ptr noundef nonnull %4) #13
  %94 = load <2 x float>, ptr %0, align 4, !tbaa !44
  %95 = load <2 x float>, ptr %4, align 8, !tbaa !44
  %96 = fadd fast <2 x float> %95, %94
  store <2 x float> %96, ptr %4, align 8, !tbaa !44
  %97 = load float, ptr %11, align 4, !tbaa !44
  %98 = load float, ptr %6, align 8, !tbaa !44
  %99 = fadd fast float %98, %97
  store float %99, ptr %6, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %4) #13
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glEnd() #13
  store <2 x float> <float 0.000000e+00, float -2.000000e+00>, ptr %4, align 8, !tbaa !44
  store float 2.000000e+00, ptr %6, align 8, !tbaa !44
  call void @glBegin(i32 noundef 1) #13
  call void @mul_m3_v3(ptr noundef nonnull %3, ptr noundef nonnull %4) #13
  %100 = load <2 x float>, ptr %0, align 4, !tbaa !44
  %101 = load <2 x float>, ptr %4, align 8, !tbaa !44
  %102 = fadd fast <2 x float> %101, %100
  store <2 x float> %102, ptr %4, align 8, !tbaa !44
  %103 = load float, ptr %11, align 4, !tbaa !44
  %104 = load float, ptr %6, align 8, !tbaa !44
  %105 = fadd fast float %104, %103
  store float %105, ptr %6, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %4) #13
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glEnd() #13
  store <2 x float> <float 2.000000e+00, float 0.000000e+00>, ptr %4, align 8, !tbaa !44
  store float 2.000000e+00, ptr %6, align 8, !tbaa !44
  call void @glBegin(i32 noundef 1) #13
  call void @mul_m3_v3(ptr noundef nonnull %3, ptr noundef nonnull %4) #13
  %106 = load <2 x float>, ptr %0, align 4, !tbaa !44
  %107 = load <2 x float>, ptr %4, align 8, !tbaa !44
  %108 = fadd fast <2 x float> %107, %106
  store <2 x float> %108, ptr %4, align 8, !tbaa !44
  %109 = load float, ptr %11, align 4, !tbaa !44
  %110 = load float, ptr %6, align 8, !tbaa !44
  %111 = fadd fast float %110, %109
  store float %111, ptr %6, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %4) #13
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glEnd() #13
  store <2 x float> <float -2.000000e+00, float 0.000000e+00>, ptr %4, align 8, !tbaa !44
  store float 2.000000e+00, ptr %6, align 8, !tbaa !44
  call void @glBegin(i32 noundef 1) #13
  call void @mul_m3_v3(ptr noundef nonnull %3, ptr noundef nonnull %4) #13
  %112 = load <2 x float>, ptr %0, align 4, !tbaa !44
  %113 = load <2 x float>, ptr %4, align 8, !tbaa !44
  %114 = fadd fast <2 x float> %113, %112
  store <2 x float> %114, ptr %4, align 8, !tbaa !44
  %115 = load float, ptr %11, align 4, !tbaa !44
  %116 = load float, ptr %6, align 8, !tbaa !44
  %117 = fadd fast float %116, %115
  store float %117, ptr %6, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %4) #13
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  call void @glEnd() #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #13
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %3) #13
  ret void
}

declare void @glMultMatrixf(ptr noundef) local_unnamed_addr #1

declare void @cpack(i32 noundef) local_unnamed_addr #1

declare ptr @PE_create_current(ptr noundef, ptr noundef) local_unnamed_addr #1

declare zeroext i8 @invert_m4_m4(ptr noundef, ptr noundef) local_unnamed_addr #1

declare ptr @modifiers_findByType(ptr noundef, i32 noundef) local_unnamed_addr #1

declare zeroext i8 @modifier_isEnabled(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

declare void @BKE_boundbox_init_from_minmax(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @draw_box(ptr noundef %0) unnamed_addr #0 {
  tail call void @glBegin(i32 noundef 3) #13
  tail call void @glVertex3fv(ptr noundef %0) #13
  %2 = getelementptr inbounds [3 x float], ptr %0, i64 1
  tail call void @glVertex3fv(ptr noundef nonnull %2) #13
  %3 = getelementptr inbounds [3 x float], ptr %0, i64 2
  tail call void @glVertex3fv(ptr noundef nonnull %3) #13
  %4 = getelementptr inbounds [3 x float], ptr %0, i64 3
  tail call void @glVertex3fv(ptr noundef nonnull %4) #13
  tail call void @glVertex3fv(ptr noundef %0) #13
  %5 = getelementptr inbounds [3 x float], ptr %0, i64 4
  tail call void @glVertex3fv(ptr noundef nonnull %5) #13
  %6 = getelementptr inbounds [3 x float], ptr %0, i64 5
  tail call void @glVertex3fv(ptr noundef nonnull %6) #13
  %7 = getelementptr inbounds [3 x float], ptr %0, i64 6
  tail call void @glVertex3fv(ptr noundef nonnull %7) #13
  %8 = getelementptr inbounds [3 x float], ptr %0, i64 7
  tail call void @glVertex3fv(ptr noundef nonnull %8) #13
  tail call void @glVertex3fv(ptr noundef nonnull %5) #13
  tail call void @glEnd() #13
  tail call void @glBegin(i32 noundef 1) #13
  tail call void @glVertex3fv(ptr noundef nonnull %2) #13
  tail call void @glVertex3fv(ptr noundef nonnull %6) #13
  tail call void @glVertex3fv(ptr noundef nonnull %3) #13
  tail call void @glVertex3fv(ptr noundef nonnull %7) #13
  tail call void @glVertex3fv(ptr noundef nonnull %4) #13
  tail call void @glVertex3fv(ptr noundef nonnull %8) #13
  tail call void @glEnd() #13
  ret void
}

declare void @mul_mat3_m4_v3(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #6

declare void @GPU_create_smoke(ptr noundef, i32 noundef) local_unnamed_addr #1

declare void @draw_smoke_volume(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @GPU_free_smoke(ptr noundef) local_unnamed_addr #1

declare void @setlinestyle(i32 noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @drawcentercircle(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) unnamed_addr #0 {
  %6 = alloca [32 x [3 x float]], align 16
  %7 = tail call fast nofpclass(nan inf) float @ED_view3d_pixel_size(ptr noundef %1, ptr noundef %2) #13
  %8 = load i16, ptr getelementptr inbounds (%struct.UserDef, ptr @U, i64 0, i32 67), align 4, !tbaa !412
  %9 = sitofp i16 %8 to float
  %10 = fmul fast float %7, 5.000000e-01
  %11 = fmul fast float %10, %9
  call void @llvm.lifetime.start.p0(i64 384, ptr nonnull %6) #13
  %12 = getelementptr inbounds %struct.View3D, ptr %0, i64 0, i32 47
  %13 = load i8, ptr %12, align 8, !tbaa !58
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %5
  tail call void @glDepthFunc(i32 noundef 519) #13
  br label %16

16:                                               ; preds = %15, %5
  tail call void @glEnable(i32 noundef 3042) #13
  %17 = icmp eq i32 %4, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = add i32 %3, -1
  %20 = icmp ult i32 %19, 2
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @glColor4ub(i8 noundef zeroext -120, i8 noundef zeroext -1, i8 noundef zeroext -1, i8 noundef zeroext -101) #13
  br label %27

22:                                               ; preds = %18
  tail call void @glColor4ub(i8 noundef zeroext 85, i8 noundef zeroext -52, i8 noundef zeroext -52, i8 noundef zeroext -101) #13
  br label %27

23:                                               ; preds = %16
  switch i32 %3, label %26 [
    i32 2, label %24
    i32 1, label %25
  ]

24:                                               ; preds = %23
  tail call void @UI_ThemeColorShadeAlpha(i32 noundef 29, i32 noundef 0, i32 noundef -80) #13
  br label %27

25:                                               ; preds = %23
  tail call void @UI_ThemeColorShadeAlpha(i32 noundef 28, i32 noundef 0, i32 noundef -80) #13
  br label %27

26:                                               ; preds = %23
  tail call void @UI_ThemeColorShadeAlpha(i32 noundef 32, i32 noundef 0, i32 noundef -80) #13
  br label %27

27:                                               ; preds = %24, %26, %25, %21, %22
  %28 = getelementptr inbounds float, ptr %2, i64 2
  %29 = load float, ptr %28, align 4, !tbaa !44
  %30 = insertelement <8 x float> poison, float %29, i64 0
  %31 = shufflevector <8 x float> %30, <8 x float> poison, <8 x i32> zeroinitializer
  %32 = getelementptr inbounds %struct.RegionView3D, ptr %1, i64 0, i32 2, i64 1, i64 2
  %33 = load float, ptr %32, align 4, !tbaa !44
  %34 = insertelement <8 x float> poison, float %33, i64 0
  %35 = shufflevector <8 x float> %34, <8 x float> poison, <8 x i32> zeroinitializer
  %36 = getelementptr inbounds %struct.RegionView3D, ptr %1, i64 0, i32 2, i64 0, i64 2
  %37 = load float, ptr %36, align 4, !tbaa !44
  %38 = insertelement <8 x float> poison, float %37, i64 0
  %39 = shufflevector <8 x float> %38, <8 x float> poison, <8 x i32> zeroinitializer
  %40 = getelementptr inbounds float, ptr %2, i64 1
  %41 = load float, ptr %40, align 4, !tbaa !44
  %42 = insertelement <8 x float> poison, float %41, i64 0
  %43 = shufflevector <8 x float> %42, <8 x float> poison, <8 x i32> zeroinitializer
  %44 = getelementptr inbounds %struct.RegionView3D, ptr %1, i64 0, i32 2, i64 1, i64 1
  %45 = load float, ptr %44, align 4, !tbaa !44
  %46 = insertelement <8 x float> poison, float %45, i64 0
  %47 = shufflevector <8 x float> %46, <8 x float> poison, <8 x i32> zeroinitializer
  %48 = getelementptr inbounds %struct.RegionView3D, ptr %1, i64 0, i32 2, i64 0, i64 1
  %49 = load float, ptr %48, align 4, !tbaa !44
  %50 = insertelement <8 x float> poison, float %49, i64 0
  %51 = shufflevector <8 x float> %50, <8 x float> poison, <8 x i32> zeroinitializer
  %52 = load float, ptr %2, align 4, !tbaa !44
  %53 = insertelement <8 x float> poison, float %52, i64 0
  %54 = shufflevector <8 x float> %53, <8 x float> poison, <8 x i32> zeroinitializer
  %55 = insertelement <8 x float> poison, float %11, i64 0
  %56 = shufflevector <8 x float> %55, <8 x float> poison, <8 x i32> zeroinitializer
  %57 = getelementptr inbounds %struct.RegionView3D, ptr %1, i64 0, i32 2, i64 1
  %58 = load float, ptr %57, align 4, !tbaa !44
  %59 = insertelement <8 x float> poison, float %58, i64 0
  %60 = shufflevector <8 x float> %59, <8 x float> poison, <8 x i32> zeroinitializer
  %61 = getelementptr inbounds %struct.RegionView3D, ptr %1, i64 0, i32 2
  %62 = load float, ptr %61, align 4, !tbaa !44
  %63 = insertelement <8 x float> poison, float %62, i64 0
  %64 = shufflevector <8 x float> %63, <8 x float> poison, <8 x i32> zeroinitializer
  %65 = fmul fast <8 x float> %64, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %66 = fmul fast <8 x float> %60, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %67 = fadd fast <8 x float> %66, %65
  %68 = fmul fast <8 x float> %67, %56
  %69 = fadd fast <8 x float> %68, %54
  %70 = fmul fast <8 x float> %51, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %71 = fmul fast <8 x float> %47, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %72 = fadd fast <8 x float> %71, %70
  %73 = fmul fast <8 x float> %72, %56
  %74 = fadd fast <8 x float> %73, %43
  %75 = fmul fast <8 x float> %39, <float 0.000000e+00, float 0x3FC9C42660000000, float 0x3FD93D2060000000, float 0x3FE247D440000000, float 0x3FE73180A0000000, float 0x3FEB281800000000, float 0x3FEE0210C0000000, float 0x3FEFA18860000000>
  %76 = fmul fast <8 x float> %35, <float 1.000000e+00, float 0x3FEF584F20000000, float 0x3FED681A40000000, float 0x3FEA43B1C0000000, float 0x3FE60C0460000000, float 0x3FE0ED45E0000000, float 0x3FD63A3FC0000000, float 0x3FC361FC40000000>
  %77 = fadd fast <8 x float> %76, %75
  %78 = fmul fast <8 x float> %77, %56
  %79 = fadd fast <8 x float> %31, %78
  %80 = shufflevector <8 x float> %69, <8 x float> %74, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %81 = shufflevector <8 x float> %79, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %82 = shufflevector <16 x float> %80, <16 x float> %81, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %82, ptr %6, align 16, !tbaa !44
  %83 = getelementptr inbounds i8, ptr %6, i64 96
  %84 = fmul fast <8 x float> %64, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %85 = fmul fast <8 x float> %60, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %86 = fadd fast <8 x float> %85, %84
  %87 = fmul fast <8 x float> %86, %56
  %88 = fadd fast <8 x float> %87, %54
  %89 = fmul fast <8 x float> %51, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %90 = fmul fast <8 x float> %47, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %91 = fadd fast <8 x float> %90, %89
  %92 = fmul fast <8 x float> %91, %56
  %93 = fadd fast <8 x float> %92, %43
  %94 = fmul fast <8 x float> %39, <float 0x3FEFF57C40000000, float 0x3FEEFA7CE0000000, float 0x3FECBAD0A0000000, float 0x3FE94E08E0000000, float 0x3FE4D80B20000000, float 0x3FDF0F3000000000, float 0x3FD328C3E0000000, float 0x3FB9E62AC0000000>
  %95 = fmul fast <8 x float> %35, <float 0xBFA9EEAFC0000000, float 0xBFD00AB0E0000000, float 0xBFDC2F6B00000000, float 0xBFE3965F40000000, float 0xBFE847BF20000000, float 0xBFEBFAA5C0000000, float 0xBFEE884F00000000, float 0xBFEFD5F820000000>
  %96 = fadd fast <8 x float> %95, %94
  %97 = fmul fast <8 x float> %96, %56
  %98 = fadd fast <8 x float> %31, %97
  %99 = shufflevector <8 x float> %88, <8 x float> %93, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %100 = shufflevector <8 x float> %98, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %101 = shufflevector <16 x float> %99, <16 x float> %100, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %101, ptr %83, align 16, !tbaa !44
  %102 = getelementptr inbounds i8, ptr %6, i64 192
  %103 = fmul fast <8 x float> %64, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %104 = fmul fast <8 x float> %60, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %105 = fadd fast <8 x float> %104, %103
  %106 = fmul fast <8 x float> %105, %56
  %107 = fadd fast <8 x float> %106, %54
  %108 = fmul fast <8 x float> %51, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %109 = fmul fast <8 x float> %47, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %110 = fadd fast <8 x float> %109, %108
  %111 = fmul fast <8 x float> %110, %56
  %112 = fadd fast <8 x float> %111, %43
  %113 = fmul fast <8 x float> %39, <float 0xBFB9E62AC0000000, float 0xBFD328C3E0000000, float 0xBFDF0F3000000000, float 0xBFE4D80B20000000, float 0xBFE94E08E0000000, float 0xBFECBAD0A0000000, float 0xBFEEFA7CE0000000, float 0xBFEFF57C40000000>
  %114 = fmul fast <8 x float> %35, <float 0xBFEFD5F820000000, float 0xBFEE884F00000000, float 0xBFEBFAA5C0000000, float 0xBFE847BF20000000, float 0xBFE3965F40000000, float 0xBFDC2F6B00000000, float 0xBFD00AB0E0000000, float 0xBFA9EEAFC0000000>
  %115 = fadd fast <8 x float> %114, %113
  %116 = fmul fast <8 x float> %115, %56
  %117 = fadd fast <8 x float> %31, %116
  %118 = shufflevector <8 x float> %107, <8 x float> %112, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %119 = shufflevector <8 x float> %117, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %120 = shufflevector <16 x float> %118, <16 x float> %119, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %120, ptr %102, align 16, !tbaa !44
  %121 = getelementptr inbounds i8, ptr %6, i64 288
  %122 = fmul fast <8 x float> %64, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %123 = fmul fast <8 x float> %60, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %124 = fadd fast <8 x float> %123, %122
  %125 = fmul fast <8 x float> %124, %56
  %126 = fadd fast <8 x float> %125, %54
  %127 = fmul fast <8 x float> %51, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %128 = fmul fast <8 x float> %47, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %129 = fadd fast <8 x float> %128, %127
  %130 = fmul fast <8 x float> %129, %56
  %131 = fadd fast <8 x float> %130, %43
  %132 = fmul fast <8 x float> %39, <float 0xBFEFA18860000000, float 0xBFEE0210C0000000, float 0xBFEB281800000000, float 0xBFE73180A0000000, float 0xBFE247D440000000, float 0xBFD93D2060000000, float 0xBFC9C42660000000, float 0.000000e+00>
  %133 = fmul fast <8 x float> %35, <float 0x3FC361FC40000000, float 0x3FD63A3FC0000000, float 0x3FE0ED45E0000000, float 0x3FE60C0460000000, float 0x3FEA43B1C0000000, float 0x3FED681A40000000, float 0x3FEF584F20000000, float 1.000000e+00>
  %134 = fadd fast <8 x float> %133, %132
  %135 = fmul fast <8 x float> %134, %56
  %136 = fadd fast <8 x float> %31, %135
  %137 = shufflevector <8 x float> %126, <8 x float> %131, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %138 = shufflevector <8 x float> %136, <8 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %139 = shufflevector <16 x float> %137, <16 x float> %138, <24 x i32> <i32 0, i32 8, i32 16, i32 1, i32 9, i32 17, i32 2, i32 10, i32 18, i32 3, i32 11, i32 19, i32 4, i32 12, i32 20, i32 5, i32 13, i32 21, i32 6, i32 14, i32 22, i32 7, i32 15, i32 23>
  store <24 x float> %139, ptr %121, align 16, !tbaa !44
  tail call void @glEnableClientState(i32 noundef 32884) #13
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef nonnull %6) #13
  call void @glDrawArrays(i32 noundef 9, i32 noundef 0, i32 noundef 32) #13
  call void @UI_ThemeColorShadeAlpha(i32 noundef 25, i32 noundef 0, i32 noundef -30) #13
  call void @glDrawArrays(i32 noundef 2, i32 noundef 0, i32 noundef 32) #13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @glDisable(i32 noundef 3042) #13
  %140 = load i8, ptr %12, align 8, !tbaa !58
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %143, label %142

142:                                              ; preds = %27
  call void @glDepthFunc(i32 noundef 515) #13
  br label %143

143:                                              ; preds = %142, %27
  call void @llvm.lifetime.end.p0(i64 384, ptr nonnull %6) #13
  ret void
}

declare void @UI_GetThemeColor3ubv(i32 noundef, ptr noundef) local_unnamed_addr #1

declare void @UI_make_axis_color(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #1

declare ptr @BKE_constraints_make_evalob(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #1

declare ptr @BKE_constraint_typeinfo_get(ptr noundef) local_unnamed_addr #1

declare nofpclass(nan inf) float @BKE_scene_frame_get(ptr noundef) local_unnamed_addr #1

declare void @unit_m4(ptr noundef) local_unnamed_addr #1

declare void @BKE_constraints_clear_evalob(ptr noundef) local_unnamed_addr #1

declare void @UI_ThemeColor(i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @draw_object_backbufsel(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #0 {
  %5 = alloca %struct.drawMVertOffset_userData, align 8
  %6 = alloca %struct.drawBMOffset_userData, align 8
  %7 = alloca %struct.drawBMOffset_userData, align 8
  %8 = getelementptr %struct.Scene, ptr %0, i64 0, i32 20
  %9 = load ptr, ptr %8, align 8, !tbaa !361
  %10 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 47
  tail call void @glMultMatrixf(ptr noundef nonnull %10) #13
  tail call void @glClearDepth(double noundef nofpclass(nan inf) 1.000000e+00) #13
  tail call void @glClear(i32 noundef 256) #13
  tail call void @glEnable(i32 noundef 2929) #13
  %11 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 3
  %12 = load i16, ptr %11, align 8, !tbaa !75
  %13 = icmp eq i16 %12, 1
  br i1 %13, label %14, label %148

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 27
  %16 = load i32, ptr %15, align 8, !tbaa !40
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 19
  %20 = load ptr, ptr %19, align 8, !tbaa !90
  br i1 %18, label %111, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct.Mesh, ptr %20, i64 0, i32 20
  %23 = load ptr, ptr %22, align 8, !tbaa !296
  %24 = load i64, ptr @CD_MASK_BAREMESH, align 8, !tbaa !449
  %25 = tail call ptr @editbmesh_get_derived_cage(ptr noundef nonnull %0, ptr noundef nonnull %3, ptr noundef %23, i64 noundef %24) #13
  %26 = load ptr, ptr %23, align 8, !tbaa !450
  tail call void @BM_mesh_elem_table_ensure(ptr noundef %26, i8 noundef zeroext 11) #13
  tail call void @DM_update_materials(ptr noundef %25, ptr noundef nonnull %3) #13
  %27 = getelementptr inbounds %struct.ToolSettings, ptr %9, i64 0, i32 8
  %28 = load i16, ptr %27, align 2, !tbaa !452
  tail call void @cpack(i32 noundef 0) #13
  %29 = and i16 %28, 4
  %30 = icmp eq i16 %29, 0
  %31 = getelementptr inbounds %struct.DerivedMesh, ptr %25, i64 0, i32 89
  %32 = load ptr, ptr %31, align 8, !tbaa !317
  %33 = load ptr, ptr %23, align 8, !tbaa !450
  br i1 %30, label %69, label %34

34:                                               ; preds = %21
  tail call void %32(ptr noundef nonnull %25, ptr noundef nonnull @bbs_mesh_solid__setSolidDrawOptions, ptr noundef nonnull @GPU_enable_material, ptr noundef null, ptr noundef %33, i32 noundef 0) #13
  %35 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 87
  %36 = load i8, ptr %35, align 2, !tbaa !81
  %37 = load ptr, ptr %8, align 8, !tbaa !361
  %38 = getelementptr i8, ptr %37, i64 46
  %39 = load i16, ptr %38, align 2, !tbaa !452
  %40 = and i16 %39, 4
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %70, label %42

42:                                               ; preds = %34
  %43 = load i32, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 15), align 8, !tbaa !16
  %44 = and i32 %43, 16
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %70

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.View3D, ptr %1, i64 0, i32 28
  %48 = load i16, ptr %47, align 8, !tbaa !89
  %49 = and i16 %48, 4096
  %50 = icmp eq i16 %49, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %46
  %52 = icmp eq i8 %36, 5
  %53 = getelementptr inbounds %struct.View3D, ptr %1, i64 0, i32 24
  %54 = load i16, ptr %53, align 8, !tbaa !5
  %55 = icmp eq i16 %54, 5
  %56 = select i1 %52, i1 %55, i1 false
  br i1 %56, label %70, label %57

57:                                               ; preds = %51
  %58 = icmp sgt i16 %54, 2
  br i1 %58, label %59, label %64

59:                                               ; preds = %57
  %60 = getelementptr inbounds %struct.View3D, ptr %1, i64 0, i32 29
  %61 = load i16, ptr %60, align 2, !tbaa !15
  %62 = and i16 %61, 8
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %64, label %70

64:                                               ; preds = %59, %57, %46
  %65 = tail call fast nofpclass(nan inf) float @UI_GetThemeValuef(i32 noundef 48) #13
  tail call void @glPointSize(float noundef nofpclass(nan inf) %65) #13
  tail call void @bglBegin(i32 noundef 0) #13
  %66 = getelementptr inbounds %struct.DerivedMesh, ptr %25, i64 0, i32 74
  %67 = load ptr, ptr %66, align 8, !tbaa !453
  %68 = load ptr, ptr %23, align 8, !tbaa !450
  tail call void %67(ptr noundef nonnull %25, ptr noundef nonnull @bbs_mesh_solid__drawCenter, ptr noundef %68, i32 noundef 0) #13
  tail call void @bglEnd() #13
  br label %70

69:                                               ; preds = %21
  tail call void %32(ptr noundef nonnull %25, ptr noundef nonnull @bbs_mesh_mask__setSolidDrawOptions, ptr noundef nonnull @GPU_enable_material, ptr noundef null, ptr noundef %33, i32 noundef 0) #13
  br label %70

70:                                               ; preds = %34, %42, %51, %59, %64, %69
  %71 = load i16, ptr %27, align 2, !tbaa !452
  %72 = and i16 %71, 4
  %73 = icmp eq i16 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %70
  %75 = load ptr, ptr %23, align 8, !tbaa !450
  %76 = getelementptr inbounds %struct.BMesh, ptr %75, i64 0, i32 3
  %77 = load i32, ptr %76, align 4, !tbaa !454
  %78 = add nsw i32 %77, 1
  br label %79

79:                                               ; preds = %70, %74
  %80 = phi i32 [ %78, %74 ], [ 1, %70 ]
  store i32 %80, ptr @bm_solidoffs, align 4, !tbaa !47
  tail call void @ED_view3d_polygon_offset(ptr noundef %2, float noundef nofpclass(nan inf) 1.000000e+00) #13
  %81 = load i32, ptr @bm_solidoffs, align 4, !tbaa !47
  %82 = load ptr, ptr %23, align 8, !tbaa !450
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7) #13
  store ptr %82, ptr %7, align 8, !tbaa !456
  %83 = getelementptr inbounds %struct.drawBMOffset_userData, ptr %7, i64 0, i32 1
  store i32 %81, ptr %83, align 8, !tbaa !458
  %84 = getelementptr inbounds %struct.DerivedMesh, ptr %25, i64 0, i32 92
  %85 = load ptr, ptr %84, align 8, !tbaa !459
  call void %85(ptr noundef nonnull %25, ptr noundef nonnull @bbs_mesh_wire__setDrawOptions, ptr noundef nonnull %7) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #13
  %86 = load i32, ptr @bm_solidoffs, align 4, !tbaa !47
  %87 = load ptr, ptr %23, align 8, !tbaa !450
  %88 = getelementptr inbounds %struct.BMesh, ptr %87, i64 0, i32 1
  %89 = load i32, ptr %88, align 4, !tbaa !460
  %90 = add i32 %89, %86
  store i32 %90, ptr @bm_wireoffs, align 4, !tbaa !47
  %91 = load i16, ptr %27, align 2, !tbaa !452
  %92 = and i16 %91, 1
  %93 = icmp eq i16 %92, 0
  br i1 %93, label %94, label %98

94:                                               ; preds = %79
  %95 = load i16, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 10), align 4, !tbaa !78
  %96 = and i16 %95, 2
  %97 = icmp eq i16 %96, 0
  br i1 %97, label %107, label %98

98:                                               ; preds = %94, %79
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #13
  store ptr %87, ptr %6, align 8, !tbaa !456
  %99 = getelementptr inbounds %struct.drawBMOffset_userData, ptr %6, i64 0, i32 1
  store i32 %90, ptr %99, align 8, !tbaa !458
  %100 = call fast nofpclass(nan inf) float @UI_GetThemeValuef(i32 noundef 36) #13
  call void @glPointSize(float noundef nofpclass(nan inf) %100) #13
  call void @bglBegin(i32 noundef 0) #13
  %101 = getelementptr inbounds %struct.DerivedMesh, ptr %25, i64 0, i32 71
  %102 = load ptr, ptr %101, align 8, !tbaa !324
  call void %102(ptr noundef nonnull %25, ptr noundef nonnull @bbs_mesh_verts__mapFunc, ptr noundef nonnull %6, i32 noundef 0) #13
  call void @bglEnd() #13
  call void @glPointSize(float noundef nofpclass(nan inf) 1.000000e+00) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #13
  %103 = load i32, ptr @bm_wireoffs, align 4, !tbaa !47
  %104 = load ptr, ptr %23, align 8, !tbaa !450
  %105 = load i32, ptr %104, align 8, !tbaa !461
  %106 = add i32 %105, %103
  br label %107

107:                                              ; preds = %94, %98
  %108 = phi i32 [ %106, %98 ], [ %90, %94 ]
  store i32 %108, ptr @bm_vertoffs, align 4, !tbaa !47
  call void @ED_view3d_polygon_offset(ptr noundef %2, float noundef nofpclass(nan inf) 0.000000e+00) #13
  %109 = getelementptr inbounds %struct.DerivedMesh, ptr %25, i64 0, i32 95
  %110 = load ptr, ptr %109, align 8, !tbaa !303
  call void %110(ptr noundef nonnull %25) #13
  br label %148

111:                                              ; preds = %14
  %112 = getelementptr inbounds %struct.Mesh, ptr %20, i64 0, i32 46
  %113 = load i8, ptr %112, align 1, !tbaa !462
  %114 = and i8 %113, 32
  %115 = icmp eq i8 %114, 0
  %116 = and i32 %16, 8
  %117 = icmp eq i32 %116, 0
  %118 = or i1 %117, %115
  %119 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 42
  %120 = load i64, ptr %119, align 8, !tbaa !302
  %121 = tail call ptr @mesh_get_derived_final(ptr noundef nonnull %0, ptr noundef nonnull %3, i64 noundef %120) #13
  br i1 %118, label %137, label %122

122:                                              ; preds = %111
  tail call void @glColor3ub(i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #13
  tail call void @DM_update_materials(ptr noundef %121, ptr noundef nonnull %3) #13
  %123 = getelementptr inbounds %struct.DerivedMesh, ptr %121, i64 0, i32 89
  %124 = load ptr, ptr %123, align 8, !tbaa !317
  tail call void %124(ptr noundef %121, ptr noundef nonnull @bbs_mesh_solid_hide2__setDrawOpts, ptr noundef nonnull @GPU_enable_material, ptr noundef null, ptr noundef nonnull %20, i32 noundef 0) #13
  %125 = load ptr, ptr %19, align 8, !tbaa !90
  %126 = getelementptr i8, ptr %125, i64 232
  %127 = load ptr, ptr %126, align 8, !tbaa !319
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #13
  store ptr %127, ptr %5, align 8, !tbaa !463
  %128 = getelementptr inbounds %struct.drawMVertOffset_userData, ptr %5, i64 0, i32 1
  store i32 1, ptr %128, align 8, !tbaa !465
  %129 = tail call fast nofpclass(nan inf) float @UI_GetThemeValuef(i32 noundef 36) #13
  tail call void @glPointSize(float noundef nofpclass(nan inf) %129) #13
  tail call void @bglBegin(i32 noundef 0) #13
  %130 = getelementptr inbounds %struct.DerivedMesh, ptr %121, i64 0, i32 71
  %131 = load ptr, ptr %130, align 8, !tbaa !324
  call void %131(ptr noundef %121, ptr noundef nonnull @bbs_obmode_mesh_verts__mapFunc, ptr noundef nonnull %5, i32 noundef 0) #13
  call void @bglEnd() #13
  call void @glPointSize(float noundef nofpclass(nan inf) 1.000000e+00) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #13
  %132 = getelementptr inbounds %struct.Mesh, ptr %20, i64 0, i32 26
  %133 = load i32, ptr %132, align 8, !tbaa !325
  %134 = add nsw i32 %133, 1
  store i32 %134, ptr @bm_vertoffs, align 4, !tbaa !47
  %135 = getelementptr inbounds %struct.DerivedMesh, ptr %121, i64 0, i32 95
  %136 = load ptr, ptr %135, align 8, !tbaa !303
  call void %136(ptr noundef %121) #13
  br label %148

137:                                              ; preds = %111
  %138 = load ptr, ptr %19, align 8, !tbaa !90
  tail call void @glColor3ub(i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #13
  tail call void @DM_update_materials(ptr noundef %121, ptr noundef nonnull %3) #13
  %139 = getelementptr inbounds %struct.Mesh, ptr %138, i64 0, i32 46
  %140 = load i8, ptr %139, align 1, !tbaa !462
  %141 = and i8 %140, 8
  %142 = icmp eq i8 %141, 0
  %143 = getelementptr inbounds %struct.DerivedMesh, ptr %121, i64 0, i32 89
  %144 = load ptr, ptr %143, align 8, !tbaa !317
  %145 = select i1 %142, ptr @bbs_mesh_solid__setDrawOpts, ptr @bbs_mesh_solid_hide__setDrawOpts
  tail call void %144(ptr noundef %121, ptr noundef nonnull %145, ptr noundef nonnull @GPU_enable_material, ptr noundef null, ptr noundef nonnull %138, i32 noundef 0) #13
  %146 = getelementptr inbounds %struct.DerivedMesh, ptr %121, i64 0, i32 95
  %147 = load ptr, ptr %146, align 8, !tbaa !303
  tail call void %147(ptr noundef nonnull %121) #13
  br label %148

148:                                              ; preds = %122, %137, %4, %107
  %149 = getelementptr inbounds %struct.RegionView3D, ptr %2, i64 0, i32 1
  call void @glLoadMatrixf(ptr noundef nonnull %149) #13
  ret void
}

declare void @glClearDepth(double noundef nofpclass(nan inf)) local_unnamed_addr #1

declare void @glClear(i32 noundef) local_unnamed_addr #1

declare ptr @editbmesh_get_derived_cage(ptr noundef, ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #1

declare void @BM_mesh_elem_table_ensure(ptr noundef, i8 noundef zeroext) local_unnamed_addr #1

declare void @DM_update_materials(ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @ED_view3d_polygon_offset(ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @draw_object_instance(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i8 noundef zeroext %4, i32 noundef %5) local_unnamed_addr #0 {
  %7 = icmp eq ptr %3, null
  br i1 %7, label %87, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 3
  %10 = load i16, ptr %9, align 8, !tbaa !75
  %11 = sext i16 %10 to i32
  switch i32 %11, label %87 [
    i32 1, label %12
    i32 0, label %79
  ]

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 27
  %14 = load i32, ptr %13, align 8, !tbaa !40
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %12
  %18 = load i64, ptr @CD_MASK_BAREMESH, align 8, !tbaa !449
  %19 = tail call ptr @mesh_get_derived_final(ptr noundef %0, ptr noundef nonnull %3, i64 noundef %18) #13
  tail call void @DM_update_materials(ptr noundef %19, ptr noundef nonnull %3) #13
  %20 = icmp ult i8 %4, 3
  br i1 %20, label %28, label %38

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 19
  %23 = load ptr, ptr %22, align 8, !tbaa !90
  %24 = getelementptr inbounds %struct.Mesh, ptr %23, i64 0, i32 20
  %25 = load ptr, ptr %24, align 8, !tbaa !296
  %26 = tail call ptr @editbmesh_get_derived_base(ptr noundef nonnull %3, ptr noundef %25) #13
  tail call void @DM_update_materials(ptr noundef %26, ptr noundef nonnull %3) #13
  %27 = icmp ult i8 %4, 3
  br i1 %27, label %33, label %38

28:                                               ; preds = %17
  %29 = icmp eq ptr %19, null
  br i1 %29, label %87, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %struct.DerivedMesh, ptr %19, i64 0, i32 84
  %32 = load ptr, ptr %31, align 8, !tbaa !266
  tail call void %32(ptr noundef nonnull %19, i8 noundef zeroext 1, i8 noundef zeroext 0) #13
  br label %75

33:                                               ; preds = %21
  %34 = icmp eq ptr %26, null
  br i1 %34, label %87, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %struct.DerivedMesh, ptr %26, i64 0, i32 84
  %37 = load ptr, ptr %36, align 8, !tbaa !266
  tail call void %37(ptr noundef nonnull %26, i8 noundef zeroext 1, i8 noundef zeroext 0) #13
  br label %68

38:                                               ; preds = %21, %17
  %39 = phi ptr [ null, %21 ], [ %19, %17 ]
  %40 = phi ptr [ %26, %21 ], [ null, %17 ]
  %41 = icmp eq i32 %5, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = icmp eq ptr %39, null
  %44 = select i1 %43, ptr %40, ptr %39
  %45 = getelementptr i8, ptr %1, i64 345
  %46 = load i8, ptr %45, align 1, !tbaa !73
  tail call fastcc void @draw_mesh_object_outline(i8 %46, ptr noundef nonnull %3, ptr noundef %44)
  br label %47

47:                                               ; preds = %42, %38
  %48 = icmp eq ptr %39, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = tail call zeroext i8 @draw_glsl_material(ptr noundef %0, ptr noundef nonnull %3, ptr noundef %1, i8 noundef zeroext %4), !range !96
  tail call void @GPU_begin_object_materials(ptr noundef %1, ptr noundef %2, ptr noundef %0, ptr noundef nonnull %3, i8 noundef zeroext %50, ptr noundef null) #13
  br label %52

51:                                               ; preds = %47
  tail call void @glEnable(i32 noundef 2903) #13
  tail call void @UI_ThemeColor(i32 noundef 74) #13
  tail call void @glDisable(i32 noundef 2903) #13
  br label %52

52:                                               ; preds = %51, %49
  %53 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 55
  %54 = load i16, ptr %53, align 8, !tbaa !64
  %55 = and i16 %54, 4
  %56 = icmp eq i16 %55, 0
  %57 = select i1 %56, i32 2305, i32 2304
  tail call void @glFrontFace(i32 noundef %57) #13
  tail call void @glEnable(i32 noundef 2896) #13
  br i1 %48, label %58, label %64

58:                                               ; preds = %52
  %59 = icmp eq ptr %40, null
  br i1 %59, label %60, label %61

60:                                               ; preds = %58
  tail call void @glDisable(i32 noundef 2896) #13
  br label %87

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.DerivedMesh, ptr %40, i64 0, i32 89
  %63 = load ptr, ptr %62, align 8, !tbaa !317
  tail call void %63(ptr noundef nonnull %40, ptr noundef null, ptr noundef nonnull @GPU_enable_material, ptr noundef null, ptr noundef null, i32 noundef 0) #13
  tail call void @glDisable(i32 noundef 2896) #13
  br label %68

64:                                               ; preds = %52
  %65 = getelementptr inbounds %struct.DerivedMesh, ptr %39, i64 0, i32 86
  %66 = load ptr, ptr %65, align 8, !tbaa !314
  tail call void %66(ptr noundef nonnull %39, ptr noundef null, i8 noundef zeroext 0, ptr noundef nonnull @GPU_enable_material) #13
  tail call void @GPU_end_object_materials() #13
  tail call void @glDisable(i32 noundef 2896) #13
  %67 = icmp eq ptr %40, null
  br i1 %67, label %75, label %72

68:                                               ; preds = %61, %35
  %69 = phi ptr [ %40, %61 ], [ %26, %35 ]
  %70 = getelementptr inbounds %struct.DerivedMesh, ptr %69, i64 0, i32 95
  %71 = load ptr, ptr %70, align 8, !tbaa !303
  tail call void %71(ptr noundef nonnull %69) #13
  br label %87

72:                                               ; preds = %64
  %73 = getelementptr inbounds %struct.DerivedMesh, ptr %40, i64 0, i32 95
  %74 = load ptr, ptr %73, align 8, !tbaa !303
  tail call void %74(ptr noundef nonnull %40) #13
  br label %75

75:                                               ; preds = %72, %64, %30
  %76 = phi ptr [ %39, %72 ], [ %19, %30 ], [ %39, %64 ]
  %77 = getelementptr inbounds %struct.DerivedMesh, ptr %76, i64 0, i32 95
  %78 = load ptr, ptr %77, align 8, !tbaa !303
  tail call void %78(ptr noundef nonnull %76) #13
  br label %87

79:                                               ; preds = %8
  %80 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 88
  %81 = load i8, ptr %80, align 1, !tbaa !76
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %84

83:                                               ; preds = %79
  tail call fastcc void @draw_empty_image(ptr noundef nonnull %3, i16 noundef signext 2, ptr noundef null)
  br label %87

84:                                               ; preds = %79
  %85 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 89
  %86 = load float, ptr %85, align 8, !tbaa !101
  tail call void @drawaxes(float noundef nofpclass(nan inf) %86, i8 noundef zeroext %81)
  br label %87

87:                                               ; preds = %75, %68, %60, %33, %28, %83, %84, %6, %8
  ret void
}

declare void @glVertex3f(float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare i32 @glGenLists(i32 noundef) local_unnamed_addr #1

declare void @glNewList(i32 noundef, i32 noundef) local_unnamed_addr #1

declare ptr @gluNewQuadric() local_unnamed_addr #1

declare void @gluQuadricDrawStyle(ptr noundef, i32 noundef) local_unnamed_addr #1

declare void @gluDisk(ptr noundef, double noundef nofpclass(nan inf), double noundef nofpclass(nan inf), i32 noundef, i32 noundef) local_unnamed_addr #1

declare void @glRotatef(float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare void @gluDeleteQuadric(ptr noundef) local_unnamed_addr #1

declare void @glEndList() local_unnamed_addr #1

declare void @glScalef(float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare void @glCallList(i32 noundef) local_unnamed_addr #1

declare void @glTranslatef(float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare void @gluCylinder(ptr noundef, double noundef nofpclass(nan inf), double noundef nofpclass(nan inf), double noundef nofpclass(nan inf), i32 noundef, i32 noundef) local_unnamed_addr #1

declare void @UI_GetThemeColorShade3ubv(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

declare ptr @UI_icon_to_preview(i32 noundef) local_unnamed_addr #1

declare void @glLineWidth(float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare nofpclass(nan inf) float @UI_GetThemeValuef(i32 noundef) local_unnamed_addr #1

declare zeroext i8 @BKE_displist_has_faces(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @draw_mesh_object_outline(i8 %0, ptr nocapture noundef readonly %1, ptr noundef %2) unnamed_addr #0 {
  %4 = icmp eq i8 %0, 0
  br i1 %4, label %5, label %24

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 27
  %7 = load i32, ptr %6, align 8, !tbaa !40
  %8 = and i32 %7, 30
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = tail call fast nofpclass(nan inf) float @UI_GetThemeValuef(i32 noundef 37) #13
  %12 = fmul fast float %11, 2.000000e+00
  tail call void @glLineWidth(float noundef nofpclass(nan inf) %12) #13
  tail call void @glDepthMask(i8 noundef zeroext 0) #13
  %13 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 86
  %14 = load i16, ptr %13, align 4, !tbaa !74
  %15 = and i16 %14, 128
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %10
  tail call void @glPolygonMode(i32 noundef 1032, i32 noundef 6913) #13
  %18 = getelementptr inbounds %struct.DerivedMesh, ptr %2, i64 0, i32 86
  %19 = load ptr, ptr %18, align 8, !tbaa !314
  tail call void %19(ptr noundef %2, ptr noundef null, i8 noundef zeroext 0, ptr noundef nonnull @GPU_enable_material) #13
  tail call void @glPolygonMode(i32 noundef 1032, i32 noundef 6914) #13
  tail call void @GPU_disable_material() #13
  br label %23

20:                                               ; preds = %10
  %21 = getelementptr inbounds %struct.DerivedMesh, ptr %2, i64 0, i32 84
  %22 = load ptr, ptr %21, align 8, !tbaa !266
  tail call void %22(ptr noundef %2, i8 noundef zeroext 0, i8 noundef zeroext 1) #13
  br label %23

23:                                               ; preds = %20, %17
  tail call void @glLineWidth(float noundef nofpclass(nan inf) 1.000000e+00) #13
  tail call void @glDepthMask(i8 noundef zeroext 1) #13
  br label %24

24:                                               ; preds = %23, %5, %3
  ret void
}

declare zeroext i8 @BKE_mball_is_basis(ptr noundef) local_unnamed_addr #1

declare void @glPolygonMode(i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i8 @drawDispListwire_ex(ptr noundef readonly %0, i32 noundef %1) unnamed_addr #0 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %108, label %4

4:                                                ; preds = %2
  tail call void @glEnableClientState(i32 noundef 32884) #13
  tail call void @glPolygonMode(i32 noundef 1032, i32 noundef 6913) #13
  %5 = load ptr, ptr %0, align 8, !tbaa !49
  %6 = icmp eq ptr %5, null
  br i1 %6, label %107, label %7

7:                                                ; preds = %4, %104
  %8 = phi ptr [ %105, %104 ], [ %5, %4 ]
  %9 = getelementptr inbounds %struct.DispList, ptr %8, i64 0, i32 4
  %10 = load i32, ptr %9, align 4, !tbaa !466
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %104, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.DispList, ptr %8, i64 0, i32 5
  %14 = load i32, ptr %13, align 8, !tbaa !467
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %104, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.DispList, ptr %8, i64 0, i32 2
  %18 = load i16, ptr %17, align 8, !tbaa !468
  %19 = sext i16 %18 to i32
  %20 = shl nuw i32 1, %19
  %21 = and i32 %20, %1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %104, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.DispList, ptr %8, i64 0, i32 8
  %25 = load ptr, ptr %24, align 8, !tbaa !444
  switch i32 %19, label %104 [
    i32 1, label %26
    i32 0, label %36
    i32 2, label %46
    i32 4, label %94
    i32 5, label %99
  ]

26:                                               ; preds = %23
  tail call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef %25) #13
  %27 = load i32, ptr %9, align 4, !tbaa !466
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %104

29:                                               ; preds = %26, %29
  %30 = phi i32 [ %33, %29 ], [ 0, %26 ]
  %31 = load i32, ptr %13, align 8, !tbaa !467
  %32 = mul nsw i32 %31, %30
  tail call void @glDrawArrays(i32 noundef 3, i32 noundef %32, i32 noundef %31) #13
  %33 = add nuw nsw i32 %30, 1
  %34 = load i32, ptr %9, align 4, !tbaa !466
  %35 = icmp slt i32 %33, %34
  br i1 %35, label %29, label %104, !llvm.loop !469

36:                                               ; preds = %23
  tail call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef %25) #13
  %37 = load i32, ptr %9, align 4, !tbaa !466
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %104

39:                                               ; preds = %36, %39
  %40 = phi i32 [ %43, %39 ], [ 0, %36 ]
  %41 = load i32, ptr %13, align 8, !tbaa !467
  %42 = mul nsw i32 %41, %40
  tail call void @glDrawArrays(i32 noundef 2, i32 noundef %42, i32 noundef %41) #13
  %43 = add nuw nsw i32 %40, 1
  %44 = load i32, ptr %9, align 4, !tbaa !466
  %45 = icmp slt i32 %43, %44
  br i1 %45, label %39, label %104, !llvm.loop !470

46:                                               ; preds = %23
  tail call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef %25) #13
  %47 = load i32, ptr %9, align 4, !tbaa !466
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  %50 = getelementptr inbounds %struct.DispList, ptr %8, i64 0, i32 3
  br label %56

51:                                               ; preds = %56, %46
  %52 = load i32, ptr %13, align 8, !tbaa !467
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %54, label %104

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.DispList, ptr %8, i64 0, i32 3
  br label %67

56:                                               ; preds = %49, %56
  %57 = phi i32 [ 0, %49 ], [ %64, %56 ]
  %58 = load i16, ptr %50, align 2, !tbaa !471
  %59 = and i16 %58, 1
  %60 = icmp eq i16 %59, 0
  %61 = load i32, ptr %13, align 8, !tbaa !467
  %62 = mul nsw i32 %61, %57
  %63 = select i1 %60, i32 3, i32 2
  tail call void @glDrawArrays(i32 noundef %63, i32 noundef %62, i32 noundef %61) #13
  %64 = add nuw nsw i32 %57, 1
  %65 = load i32, ptr %9, align 4, !tbaa !466
  %66 = icmp slt i32 %64, %65
  br i1 %66, label %56, label %51, !llvm.loop !472

67:                                               ; preds = %54, %89
  %68 = phi i64 [ 0, %54 ], [ %90, %89 ]
  %69 = phi i32 [ %52, %54 ], [ %91, %89 ]
  %70 = load ptr, ptr %24, align 8, !tbaa !444
  %71 = load i32, ptr %9, align 4, !tbaa !466
  %72 = load i16, ptr %55, align 2, !tbaa !471
  %73 = and i16 %72, 2
  %74 = icmp eq i16 %73, 0
  %75 = select i1 %74, i32 3, i32 2
  tail call void @glBegin(i32 noundef %75) #13
  %76 = icmp eq i32 %71, 0
  br i1 %76, label %89, label %77

77:                                               ; preds = %67
  %78 = mul i64 %68, 3
  %79 = and i64 %78, 4294967295
  %80 = getelementptr inbounds float, ptr %70, i64 %79
  %81 = mul nsw i32 %69, 3
  %82 = sext i32 %81 to i64
  br label %83

83:                                               ; preds = %77, %83
  %84 = phi ptr [ %80, %77 ], [ %87, %83 ]
  %85 = phi i32 [ %71, %77 ], [ %86, %83 ]
  %86 = add nsw i32 %85, -1
  tail call void @glVertex3fv(ptr noundef %84) #13
  %87 = getelementptr inbounds float, ptr %84, i64 %82
  %88 = icmp eq i32 %86, 0
  br i1 %88, label %89, label %83, !llvm.loop !473

89:                                               ; preds = %83, %67
  tail call void @glEnd() #13
  %90 = add nuw nsw i64 %68, 1
  %91 = load i32, ptr %13, align 8, !tbaa !467
  %92 = sext i32 %91 to i64
  %93 = icmp slt i64 %90, %92
  br i1 %93, label %67, label %104, !llvm.loop !474

94:                                               ; preds = %23
  tail call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef %25) #13
  %95 = load i32, ptr %9, align 4, !tbaa !466
  %96 = mul nsw i32 %95, 3
  %97 = getelementptr inbounds %struct.DispList, ptr %8, i64 0, i32 10
  %98 = load ptr, ptr %97, align 8, !tbaa !475
  tail call void @glDrawElements(i32 noundef 4, i32 noundef %96, i32 noundef 5125, ptr noundef %98) #13
  br label %104

99:                                               ; preds = %23
  tail call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef %25) #13
  %100 = load i32, ptr %9, align 4, !tbaa !466
  %101 = shl nsw i32 %100, 2
  %102 = getelementptr inbounds %struct.DispList, ptr %8, i64 0, i32 10
  %103 = load ptr, ptr %102, align 8, !tbaa !475
  tail call void @glDrawElements(i32 noundef 7, i32 noundef %101, i32 noundef 5125, ptr noundef %103) #13
  br label %104

104:                                              ; preds = %89, %39, %29, %51, %36, %26, %94, %99, %23, %16, %7, %12
  %105 = load ptr, ptr %8, align 8, !tbaa !49
  %106 = icmp eq ptr %105, null
  br i1 %106, label %107, label %7, !llvm.loop !476

107:                                              ; preds = %104, %4
  tail call void @glDisableClientState(i32 noundef 32884) #13
  tail call void @glPolygonMode(i32 noundef 1032, i32 noundef 6914) #13
  br label %108

108:                                              ; preds = %2, %107
  %109 = phi i8 [ 0, %107 ], [ 1, %2 ]
  ret i8 %109
}

declare void @glDrawElements(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

declare ptr @give_current_material(ptr noundef, i16 noundef signext) local_unnamed_addr #1

declare ptr @BKE_key_from_object(ptr noundef) local_unnamed_addr #1

declare void @glCullFace(i32 noundef) local_unnamed_addr #1

declare ptr @editbmesh_get_derived_base(ptr noundef, ptr noundef) local_unnamed_addr #1

declare ptr @editbmesh_get_derived_cage_and_final(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #1

declare void @GPU_begin_object_materials(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @draw_em_fancy(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5, ptr noundef %6, i8 noundef zeroext %7) unnamed_addr #0 {
  %9 = alloca [32 x i8], align 16
  %10 = alloca [3 x float], align 8
  %11 = alloca [4 x i8], align 4
  %12 = alloca %struct.BMIter, align 8
  %13 = alloca [3 x float], align 8
  %14 = alloca [3 x float], align 8
  %15 = alloca [3 x float], align 8
  %16 = alloca [3 x float], align 8
  %17 = alloca [3 x float], align 8
  %18 = alloca [32 x i8], align 16
  %19 = alloca [4 x i8], align 4
  %20 = alloca [4 x [4 x float]], align 16
  %21 = alloca %struct.BMIter, align 8
  %22 = alloca %struct.BoundBox, align 4
  %23 = alloca %struct.bglMats, align 8
  %24 = alloca %struct.rcti, align 4
  %25 = alloca [3 x float], align 8
  %26 = alloca [3 x float], align 8
  %27 = alloca ptr, align 8
  %28 = alloca ptr, align 8
  %29 = alloca [3 x float], align 8
  %30 = alloca [3 x float], align 8
  %31 = alloca [3 x float], align 8
  %32 = alloca [3 x float], align 8
  %33 = alloca %struct.BMIter, align 8
  %34 = alloca [3 x float], align 8
  %35 = alloca [3 x float], align 8
  %36 = alloca [3 x [3 x float]], align 16
  %37 = alloca %struct.drawDMNormal_userData, align 8
  %38 = alloca [3 x [3 x float]], align 16
  %39 = alloca %struct.drawDMNormal_userData, align 8
  %40 = alloca [3 x [3 x float]], align 16
  %41 = alloca %struct.drawDMNormal_userData, align 8
  %42 = alloca %struct.drawBMSelect_userData, align 8
  %43 = alloca %struct.drawDMVerts_userData, align 8
  %44 = alloca [4 x i8], align 1
  %45 = alloca [4 x i8], align 1
  %46 = alloca %struct.drawDMLayer_userData, align 8
  %47 = alloca %struct.drawDMLayer_userData, align 8
  %48 = alloca %struct.drawDMLayer_userData, align 8
  %49 = alloca %struct.drawDMFacesSel_userData, align 8
  %50 = alloca %struct.drawDMFacesSel_userData, align 8
  %51 = alloca [4 x i8], align 1
  %52 = alloca [4 x i8], align 1
  %53 = alloca [4 x i8], align 1
  %54 = alloca [4 x i8], align 1
  %55 = alloca [4 x i8], align 1
  %56 = alloca [4 x i8], align 1
  %57 = getelementptr inbounds %struct.ARegion, ptr %1, i64 0, i32 30
  %58 = load ptr, ptr %57, align 8, !tbaa !52
  %59 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 19
  %60 = load ptr, ptr %59, align 8, !tbaa !90
  %61 = load ptr, ptr %4, align 8, !tbaa !450
  %62 = tail call ptr @BM_mesh_active_face_get(ptr noundef %61, i8 noundef zeroext 0, i8 noundef zeroext 1) #13
  %63 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 29
  %64 = load i16, ptr %63, align 2, !tbaa !15
  %65 = and i16 %64, 16384
  %66 = icmp ne i16 %65, 0
  %67 = icmp ugt i8 %7, 2
  %68 = and i1 %67, %66
  %69 = load ptr, ptr %4, align 8, !tbaa !450
  %70 = getelementptr inbounds %struct.BMesh, ptr %69, i64 0, i32 32, i32 1
  %71 = load ptr, ptr %70, align 8, !tbaa !477
  %72 = icmp eq ptr %71, null
  br i1 %72, label %82, label %73

73:                                               ; preds = %8
  %74 = getelementptr inbounds %struct.BMEditSelection, ptr %71, i64 0, i32 3
  %75 = load i8, ptr %74, align 8, !tbaa !478
  switch i8 %75, label %82 [
    i8 2, label %76
    i8 1, label %79
  ]

76:                                               ; preds = %73
  %77 = getelementptr inbounds %struct.BMEditSelection, ptr %71, i64 0, i32 2
  %78 = load ptr, ptr %77, align 8, !tbaa !480
  br label %82

79:                                               ; preds = %73
  %80 = getelementptr inbounds %struct.BMEditSelection, ptr %71, i64 0, i32 2
  %81 = load ptr, ptr %80, align 8, !tbaa !480
  br label %82

82:                                               ; preds = %76, %79, %73, %8
  %83 = phi ptr [ null, %8 ], [ null, %76 ], [ %81, %79 ], [ null, %73 ]
  %84 = phi ptr [ null, %8 ], [ %78, %76 ], [ null, %79 ], [ null, %73 ]
  tail call void @BM_mesh_elem_table_ensure(ptr noundef nonnull %69, i8 noundef zeroext 11) #13
  %85 = getelementptr i8, ptr %60, i64 1344
  %86 = load i32, ptr %85, align 8, !tbaa !481
  %87 = and i32 %86, 16
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %102, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %struct.DerivedMesh, ptr %6, i64 0, i32 14
  %91 = load i32, ptr %90, align 8, !tbaa !482
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %102, label %93

93:                                               ; preds = %89
  br i1 %67, label %94, label %97

94:                                               ; preds = %93
  %95 = getelementptr inbounds %struct.Mesh, ptr %60, i64 0, i32 20
  %96 = load ptr, ptr %95, align 8, !tbaa !296
  tail call void @draw_mesh_paint_weight_faces(ptr noundef nonnull %6, i8 noundef zeroext 1, ptr noundef nonnull @draw_em_fancy__setFaceOpts, ptr noundef %96) #13
  tail call void @ED_view3d_polygon_offset(ptr noundef %58, float noundef nofpclass(nan inf) 1.000000e+00) #13
  tail call void @glDepthMask(i8 noundef zeroext 0) #13
  br label %165

97:                                               ; preds = %93
  tail call void @glEnable(i32 noundef 2929) #13
  %98 = getelementptr inbounds %struct.Mesh, ptr %60, i64 0, i32 20
  %99 = load ptr, ptr %98, align 8, !tbaa !296
  tail call void @draw_mesh_paint_weight_faces(ptr noundef nonnull %6, i8 noundef zeroext 0, ptr noundef nonnull @draw_em_fancy__setFaceOpts, ptr noundef %99) #13
  %100 = load ptr, ptr %98, align 8, !tbaa !296
  %101 = load ptr, ptr %100, align 8, !tbaa !450
  tail call void @draw_mesh_paint_weight_edges(ptr noundef %58, ptr noundef nonnull %6, i8 noundef zeroext 1, i8 noundef zeroext 1, ptr noundef nonnull @draw_dm_edges__setDrawOptions, ptr noundef %101) #13
  tail call void @glDisable(i32 noundef 2929) #13
  br label %165

102:                                              ; preds = %82, %89
  br i1 %67, label %103, label %160

103:                                              ; preds = %102
  br i1 %68, label %104, label %109

104:                                              ; preds = %103
  tail call void @glColorMask(i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #13
  %105 = getelementptr inbounds %struct.DerivedMesh, ptr %5, i64 0, i32 89
  %106 = load ptr, ptr %105, align 8, !tbaa !317
  %107 = getelementptr inbounds %struct.Mesh, ptr %60, i64 0, i32 20
  %108 = load ptr, ptr %107, align 8, !tbaa !296
  tail call void %106(ptr noundef %5, ptr noundef nonnull @draw_em_fancy__setFaceOpts, ptr noundef nonnull @GPU_enable_material, ptr noundef null, ptr noundef %108, i32 noundef 0) #13
  tail call void @glColorMask(i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext 1) #13
  br label %159

109:                                              ; preds = %103
  %110 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 24
  %111 = load i16, ptr %110, align 8, !tbaa !5
  %112 = icmp eq i16 %111, 5
  br i1 %112, label %117, label %113

113:                                              ; preds = %109
  %114 = icmp eq i16 %111, 4
  %115 = icmp ugt i8 %7, 3
  %116 = and i1 %115, %114
  br i1 %116, label %132, label %119

117:                                              ; preds = %109
  %118 = icmp ugt i8 %7, 3
  br i1 %118, label %132, label %128

119:                                              ; preds = %113
  %120 = icmp eq i16 %111, 3
  br i1 %120, label %121, label %128

121:                                              ; preds = %119
  %122 = load i16, ptr %63, align 2, !tbaa !15
  %123 = and i16 %122, 8
  %124 = icmp eq i16 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %121
  %126 = tail call zeroext i8 @BKE_scene_use_new_shading_nodes(ptr noundef %0) #13
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %132, label %128

128:                                              ; preds = %117, %119, %121, %125
  %129 = load i16, ptr %63, align 2, !tbaa !15
  %130 = and i16 %129, 8192
  %131 = icmp eq i16 %130, 0
  br i1 %131, label %144, label %132

132:                                              ; preds = %125, %117, %113, %128
  %133 = tail call zeroext i8 @draw_glsl_material(ptr noundef %0, ptr noundef nonnull %3, ptr noundef nonnull %2, i8 noundef zeroext %7), !range !96
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %143, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 55
  %137 = load i16, ptr %136, align 8, !tbaa !64
  %138 = and i16 %137, 4
  %139 = icmp eq i16 %138, 0
  %140 = select i1 %139, i32 2305, i32 2304
  tail call void @glFrontFace(i32 noundef %140) #13
  %141 = getelementptr inbounds %struct.DerivedMesh, ptr %6, i64 0, i32 91
  %142 = load ptr, ptr %141, align 8, !tbaa !483
  tail call void %142(ptr noundef %6, ptr noundef nonnull @GPU_enable_material, ptr noundef nonnull @draw_em_fancy__setGLSLFaceOpts, ptr noundef nonnull %4) #13
  tail call void @GPU_disable_material() #13
  tail call void @glFrontFace(i32 noundef 2305) #13
  br label %159

143:                                              ; preds = %132
  tail call void @draw_mesh_textured(ptr noundef %0, ptr noundef nonnull %2, ptr noundef %58, ptr noundef nonnull %3, ptr noundef %6, i32 noundef 0) #13
  br label %159

144:                                              ; preds = %128
  %145 = getelementptr inbounds %struct.Mesh, ptr %60, i64 0, i32 38
  %146 = load i16, ptr %145, align 2, !tbaa !318
  %147 = lshr i16 %146, 2
  %148 = and i16 %147, 1
  %149 = zext i16 %148 to i32
  tail call void @glLightModeli(i32 noundef 2898, i32 noundef %149) #13
  tail call void @glEnable(i32 noundef 2896) #13
  %150 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 55
  %151 = load i16, ptr %150, align 8, !tbaa !64
  %152 = and i16 %151, 4
  %153 = icmp eq i16 %152, 0
  %154 = select i1 %153, i32 2305, i32 2304
  tail call void @glFrontFace(i32 noundef %154) #13
  %155 = getelementptr inbounds %struct.DerivedMesh, ptr %6, i64 0, i32 89
  %156 = load ptr, ptr %155, align 8, !tbaa !317
  %157 = getelementptr inbounds %struct.Mesh, ptr %60, i64 0, i32 20
  %158 = load ptr, ptr %157, align 8, !tbaa !296
  tail call void %156(ptr noundef %6, ptr noundef nonnull @draw_em_fancy__setFaceOpts, ptr noundef nonnull @GPU_enable_material, ptr noundef null, ptr noundef %158, i32 noundef 0) #13
  tail call void @glFrontFace(i32 noundef 2305) #13
  tail call void @glDisable(i32 noundef 2896) #13
  tail call void @glLightModeli(i32 noundef 2898, i32 noundef 0) #13
  br label %159

159:                                              ; preds = %144, %143, %135, %104
  tail call void @UI_ThemeColor(i32 noundef 27) #13
  tail call void @ED_view3d_polygon_offset(ptr noundef %58, float noundef nofpclass(nan inf) 1.000000e+00) #13
  tail call void @glDepthMask(i8 noundef zeroext 0) #13
  br label %165

160:                                              ; preds = %102
  %161 = icmp eq ptr %5, %6
  br i1 %161, label %165, label %162

162:                                              ; preds = %160
  tail call void @UI_ThemeColorBlend(i32 noundef 27, i32 noundef 2, float noundef nofpclass(nan inf) 0x3FE6666660000000) #13
  %163 = getelementptr inbounds %struct.DerivedMesh, ptr %6, i64 0, i32 84
  %164 = load ptr, ptr %163, align 8, !tbaa !266
  tail call void %164(ptr noundef %6, i8 noundef zeroext 1, i8 noundef zeroext 0) #13
  br label %165

165:                                              ; preds = %159, %162, %160, %94, %97
  %166 = load i32, ptr %85, align 8, !tbaa !481
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = select i1 %168, i1 true, i1 %68
  br i1 %169, label %213, label %170

170:                                              ; preds = %165
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %51) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %52) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %53) #13
  call void @UI_GetThemeColor4ubv(i32 noundef 42, ptr noundef nonnull %51) #13
  call void @UI_GetThemeColor4ubv(i32 noundef 43, ptr noundef nonnull %52) #13
  call void @UI_GetThemeColor4ubv(i32 noundef 127, ptr noundef nonnull %53) #13
  call void @glEnable(i32 noundef 3042) #13
  call void @glDepthMask(i8 noundef zeroext 0) #13
  %171 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 24
  %172 = load i16, ptr %171, align 8, !tbaa !5
  %173 = icmp eq i16 %172, 5
  br i1 %173, label %178, label %174

174:                                              ; preds = %170
  %175 = icmp eq i16 %172, 4
  %176 = icmp ugt i8 %7, 3
  %177 = and i1 %176, %175
  br i1 %177, label %193, label %180

178:                                              ; preds = %170
  %179 = icmp ugt i8 %7, 3
  br i1 %179, label %193, label %189

180:                                              ; preds = %174
  %181 = icmp eq i16 %172, 3
  br i1 %181, label %182, label %189

182:                                              ; preds = %180
  %183 = load i16, ptr %63, align 2, !tbaa !15
  %184 = and i16 %183, 8
  %185 = icmp eq i16 %184, 0
  br i1 %185, label %189, label %186

186:                                              ; preds = %182
  %187 = call zeroext i8 @BKE_scene_use_new_shading_nodes(ptr noundef %0) #13
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %193, label %189

189:                                              ; preds = %178, %180, %182, %186
  %190 = load i16, ptr %63, align 2, !tbaa !15
  %191 = and i16 %190, 8192
  %192 = icmp eq i16 %191, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %186, %178, %174, %189
  %194 = getelementptr inbounds [4 x i8], ptr %51, i64 0, i64 3
  store i8 0, ptr %194, align 1, !tbaa !50
  br label %195

195:                                              ; preds = %193, %189
  %196 = load ptr, ptr %4, align 8, !tbaa !450
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %50) #13
  %197 = getelementptr inbounds %struct.drawDMFacesSel_userData, ptr %50, i64 0, i32 1
  store ptr %5, ptr %197, align 8, !tbaa !484
  store ptr %51, ptr %50, align 8, !tbaa !49
  %198 = getelementptr inbounds %struct.drawDMFacesSel_userData, ptr %50, i64 0, i32 2
  store ptr %196, ptr %198, align 8, !tbaa !486
  %199 = getelementptr inbounds [3 x ptr], ptr %50, i64 0, i64 1
  store ptr %52, ptr %199, align 8, !tbaa !49
  %200 = getelementptr inbounds [3 x ptr], ptr %50, i64 0, i64 2
  store ptr %53, ptr %200, align 8, !tbaa !49
  %201 = getelementptr inbounds %struct.drawDMFacesSel_userData, ptr %50, i64 0, i32 3
  store ptr %62, ptr %201, align 8, !tbaa !487
  %202 = call ptr @DM_get_tessface_data_layer(ptr noundef %5, i32 noundef 7) #13
  %203 = getelementptr inbounds %struct.drawDMFacesSel_userData, ptr %50, i64 0, i32 4
  store ptr %202, ptr %203, align 8, !tbaa !488
  %204 = call ptr @DM_get_poly_data_layer(ptr noundef %5, i32 noundef 7) #13
  %205 = getelementptr inbounds %struct.drawDMFacesSel_userData, ptr %50, i64 0, i32 5
  store ptr %204, ptr %205, align 8, !tbaa !489
  %206 = icmp eq ptr %202, null
  %207 = icmp eq ptr %204, null
  %208 = select i1 %206, i1 true, i1 %207
  br i1 %208, label %209, label %210

209:                                              ; preds = %195
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %203, i8 0, i64 16, i1 false)
  br label %210

210:                                              ; preds = %195, %209
  %211 = getelementptr inbounds %struct.DerivedMesh, ptr %5, i64 0, i32 89
  %212 = load ptr, ptr %211, align 8, !tbaa !317
  call void %212(ptr noundef %5, ptr noundef nonnull @draw_dm_faces_sel__setDrawOptions, ptr noundef nonnull @GPU_enable_material, ptr noundef nonnull @draw_dm_faces_sel__compareDrawOptions, ptr noundef nonnull %50, i32 noundef 0) #13
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %50) #13
  call void @glDisable(i32 noundef 3042) #13
  call void @glDepthMask(i8 noundef zeroext 1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %53) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %52) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %51) #13
  br label %235

213:                                              ; preds = %165
  %214 = icmp eq ptr %62, null
  br i1 %214, label %235, label %215

215:                                              ; preds = %213
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %54) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %55) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %56) #13
  %216 = getelementptr inbounds [4 x i8], ptr %55, i64 0, i64 3
  store i8 0, ptr %216, align 1, !tbaa !50
  %217 = getelementptr inbounds [4 x i8], ptr %54, i64 0, i64 3
  store i8 0, ptr %217, align 1, !tbaa !50
  call void @UI_GetThemeColor4ubv(i32 noundef 127, ptr noundef nonnull %56) #13
  call void @glEnable(i32 noundef 3042) #13
  call void @glDepthMask(i8 noundef zeroext 0) #13
  %218 = load ptr, ptr %4, align 8, !tbaa !450
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %49) #13
  %219 = getelementptr inbounds %struct.drawDMFacesSel_userData, ptr %49, i64 0, i32 1
  store ptr %5, ptr %219, align 8, !tbaa !484
  store ptr %54, ptr %49, align 8, !tbaa !49
  %220 = getelementptr inbounds %struct.drawDMFacesSel_userData, ptr %49, i64 0, i32 2
  store ptr %218, ptr %220, align 8, !tbaa !486
  %221 = getelementptr inbounds [3 x ptr], ptr %49, i64 0, i64 1
  store ptr %55, ptr %221, align 8, !tbaa !49
  %222 = getelementptr inbounds [3 x ptr], ptr %49, i64 0, i64 2
  store ptr %56, ptr %222, align 8, !tbaa !49
  %223 = getelementptr inbounds %struct.drawDMFacesSel_userData, ptr %49, i64 0, i32 3
  store ptr %62, ptr %223, align 8, !tbaa !487
  %224 = call ptr @DM_get_tessface_data_layer(ptr noundef %5, i32 noundef 7) #13
  %225 = getelementptr inbounds %struct.drawDMFacesSel_userData, ptr %49, i64 0, i32 4
  store ptr %224, ptr %225, align 8, !tbaa !488
  %226 = call ptr @DM_get_poly_data_layer(ptr noundef %5, i32 noundef 7) #13
  %227 = getelementptr inbounds %struct.drawDMFacesSel_userData, ptr %49, i64 0, i32 5
  store ptr %226, ptr %227, align 8, !tbaa !489
  %228 = icmp eq ptr %224, null
  %229 = icmp eq ptr %226, null
  %230 = select i1 %228, i1 true, i1 %229
  br i1 %230, label %231, label %232

231:                                              ; preds = %215
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %225, i8 0, i64 16, i1 false)
  br label %232

232:                                              ; preds = %215, %231
  %233 = getelementptr inbounds %struct.DerivedMesh, ptr %5, i64 0, i32 89
  %234 = load ptr, ptr %233, align 8, !tbaa !317
  call void %234(ptr noundef %5, ptr noundef nonnull @draw_dm_faces_sel__setDrawOptions, ptr noundef nonnull @GPU_enable_material, ptr noundef nonnull @draw_dm_faces_sel__compareDrawOptions, ptr noundef nonnull %49, i32 noundef 0) #13
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %49) #13
  call void @glDisable(i32 noundef 3042) #13
  call void @glDepthMask(i8 noundef zeroext 1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %56) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %55) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %54) #13
  br label %235

235:                                              ; preds = %213, %232, %210
  %236 = load i32, ptr %85, align 8, !tbaa !481
  %237 = and i32 %236, 1
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %264

239:                                              ; preds = %235
  %240 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 24
  %241 = load i16, ptr %240, align 8, !tbaa !5
  %242 = icmp eq i16 %241, 5
  br i1 %242, label %247, label %243

243:                                              ; preds = %239
  %244 = icmp eq i16 %241, 4
  %245 = icmp ugt i8 %7, 3
  %246 = and i1 %245, %244
  br i1 %246, label %330, label %249

247:                                              ; preds = %239
  %248 = icmp ugt i8 %7, 3
  br i1 %248, label %330, label %258

249:                                              ; preds = %243
  %250 = icmp eq i16 %241, 3
  br i1 %250, label %251, label %258

251:                                              ; preds = %249
  %252 = load i16, ptr %63, align 2, !tbaa !15
  %253 = and i16 %252, 8
  %254 = icmp eq i16 %253, 0
  br i1 %254, label %258, label %255

255:                                              ; preds = %251
  %256 = call zeroext i8 @BKE_scene_use_new_shading_nodes(ptr noundef %0) #13
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %330, label %258

258:                                              ; preds = %247, %249, %251, %255
  %259 = load i16, ptr %63, align 2, !tbaa !15
  %260 = and i16 %259, 8192
  %261 = icmp eq i16 %260, 0
  br i1 %261, label %262, label %330

262:                                              ; preds = %258
  %263 = load i32, ptr %85, align 8, !tbaa !481
  br label %264

264:                                              ; preds = %262, %235
  %265 = phi i32 [ %263, %262 ], [ %236, %235 ]
  %266 = and i32 %265, 128
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %273, label %268

268:                                              ; preds = %264
  call void @UI_ThemeColor(i32 noundef 40) #13
  call void @glLineWidth(float noundef nofpclass(nan inf) 2.000000e+00) #13
  %269 = load ptr, ptr %4, align 8, !tbaa !450
  %270 = getelementptr inbounds %struct.DerivedMesh, ptr %5, i64 0, i32 92
  %271 = load ptr, ptr %270, align 8, !tbaa !459
  call void %271(ptr noundef %5, ptr noundef nonnull @draw_dm_edges_seams__setDrawOptions, ptr noundef %269) #13
  call void @glColor3ub(i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #13
  call void @glLineWidth(float noundef nofpclass(nan inf) 1.000000e+00) #13
  %272 = load i32, ptr %85, align 8, !tbaa !481
  br label %273

273:                                              ; preds = %268, %264
  %274 = phi i32 [ %272, %268 ], [ %265, %264 ]
  %275 = and i32 %274, 256
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %282, label %277

277:                                              ; preds = %273
  call void @UI_ThemeColor(i32 noundef 126) #13
  call void @glLineWidth(float noundef nofpclass(nan inf) 2.000000e+00) #13
  %278 = load ptr, ptr %4, align 8, !tbaa !450
  %279 = getelementptr inbounds %struct.DerivedMesh, ptr %5, i64 0, i32 92
  %280 = load ptr, ptr %279, align 8, !tbaa !459
  call void %280(ptr noundef %5, ptr noundef nonnull @draw_dm_edges_sharp__setDrawOptions, ptr noundef %278) #13
  call void @glColor3ub(i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #13
  call void @glLineWidth(float noundef nofpclass(nan inf) 1.000000e+00) #13
  %281 = load i32, ptr %85, align 8, !tbaa !481
  br label %282

282:                                              ; preds = %277, %273
  %283 = phi i32 [ %281, %277 ], [ %274, %273 ]
  %284 = and i32 %283, 64
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %297, label %286

286:                                              ; preds = %282
  %287 = load ptr, ptr %4, align 8, !tbaa !450
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %48) #13
  store ptr %287, ptr %48, align 8, !tbaa !490
  %288 = getelementptr inbounds %struct.BMesh, ptr %287, i64 0, i32 25
  %289 = call i32 @CustomData_get_offset(ptr noundef nonnull %288, i32 noundef 30) #13
  %290 = getelementptr inbounds %struct.drawDMLayer_userData, ptr %48, i64 0, i32 1
  store i32 %289, ptr %290, align 8, !tbaa !492
  %291 = icmp eq i32 %289, -1
  br i1 %291, label %295, label %292

292:                                              ; preds = %286
  call void @glLineWidth(float noundef nofpclass(nan inf) 3.000000e+00) #13
  %293 = getelementptr inbounds %struct.DerivedMesh, ptr %5, i64 0, i32 92
  %294 = load ptr, ptr %293, align 8, !tbaa !459
  call void %294(ptr noundef %5, ptr noundef nonnull @draw_dm_creases__setDrawOptions, ptr noundef nonnull %48) #13
  call void @glLineWidth(float noundef nofpclass(nan inf) 1.000000e+00) #13
  br label %295

295:                                              ; preds = %286, %292
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %48) #13
  %296 = load i32, ptr %85, align 8, !tbaa !481
  br label %297

297:                                              ; preds = %295, %282
  %298 = phi i32 [ %296, %295 ], [ %283, %282 ]
  %299 = and i32 %298, 512
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %330, label %301

301:                                              ; preds = %297
  %302 = getelementptr i8, ptr %0, i64 264
  %303 = load ptr, ptr %302, align 8, !tbaa !361
  %304 = getelementptr i8, ptr %303, i64 46
  %305 = load i16, ptr %304, align 2, !tbaa !452
  %306 = and i16 %305, 1
  %307 = icmp eq i16 %306, 0
  br i1 %307, label %320, label %308

308:                                              ; preds = %301
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %46) #13
  %309 = load ptr, ptr %4, align 8, !tbaa !450
  store ptr %309, ptr %46, align 8, !tbaa !490
  %310 = getelementptr inbounds %struct.BMesh, ptr %309, i64 0, i32 24
  %311 = call i32 @CustomData_get_offset(ptr noundef nonnull %310, i32 noundef 29) #13
  %312 = getelementptr inbounds %struct.drawDMLayer_userData, ptr %46, i64 0, i32 1
  store i32 %311, ptr %312, align 8, !tbaa !492
  %313 = icmp eq i32 %311, -1
  br i1 %313, label %319, label %314

314:                                              ; preds = %308
  %315 = call fast nofpclass(nan inf) float @UI_GetThemeValuef(i32 noundef 36) #13
  %316 = fadd fast float %315, 2.000000e+00
  call void @glPointSize(float noundef nofpclass(nan inf) %316) #13
  call void @bglBegin(i32 noundef 0) #13
  %317 = getelementptr inbounds %struct.DerivedMesh, ptr %5, i64 0, i32 71
  %318 = load ptr, ptr %317, align 8, !tbaa !324
  call void %318(ptr noundef %5, ptr noundef nonnull @draw_dm_bweights__mapFunc, ptr noundef nonnull %46, i32 noundef 0) #13
  call void @bglEnd() #13
  br label %319

319:                                              ; preds = %314, %308
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %46) #13
  br label %330

320:                                              ; preds = %301
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %47) #13
  %321 = load ptr, ptr %4, align 8, !tbaa !450
  store ptr %321, ptr %47, align 8, !tbaa !490
  %322 = getelementptr inbounds %struct.BMesh, ptr %321, i64 0, i32 25
  %323 = call i32 @CustomData_get_offset(ptr noundef nonnull %322, i32 noundef 29) #13
  %324 = getelementptr inbounds %struct.drawDMLayer_userData, ptr %47, i64 0, i32 1
  store i32 %323, ptr %324, align 8, !tbaa !492
  %325 = icmp eq i32 %323, -1
  br i1 %325, label %329, label %326

326:                                              ; preds = %320
  call void @glLineWidth(float noundef nofpclass(nan inf) 3.000000e+00) #13
  %327 = getelementptr inbounds %struct.DerivedMesh, ptr %5, i64 0, i32 92
  %328 = load ptr, ptr %327, align 8, !tbaa !459
  call void %328(ptr noundef %5, ptr noundef nonnull @draw_dm_bweights__setDrawOptions, ptr noundef nonnull %47) #13
  call void @glLineWidth(float noundef nofpclass(nan inf) 1.000000e+00) #13
  br label %329

329:                                              ; preds = %326, %320
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %47) #13
  br label %330

330:                                              ; preds = %297, %319, %329, %258, %243, %247, %255
  %331 = phi i16 [ 1, %255 ], [ 1, %247 ], [ 1, %243 ], [ 1, %258 ], [ 0, %329 ], [ 0, %319 ], [ 0, %297 ]
  %332 = getelementptr i8, ptr %0, i64 264
  %333 = load ptr, ptr %332, align 8, !tbaa !361
  call fastcc void @draw_em_fancy_edges(ptr noundef nonnull %4, ptr %333, ptr noundef nonnull %2, ptr noundef nonnull %60, ptr noundef %5, i16 noundef signext %331, ptr noundef %84)
  %334 = getelementptr %struct.Scene, ptr %0, i64 0, i32 20
  %335 = load ptr, ptr %334, align 8, !tbaa !361
  %336 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 47
  %337 = load i8, ptr %336, align 8, !tbaa !58
  %338 = icmp eq i8 %337, 0
  br i1 %338, label %340, label %339

339:                                              ; preds = %330
  call void @glDepthMask(i8 noundef zeroext 0) #13
  br label %340

340:                                              ; preds = %339, %330
  %341 = getelementptr inbounds [4 x i8], ptr %45, i64 0, i64 3
  %342 = getelementptr inbounds [4 x i8], ptr %44, i64 0, i64 3
  %343 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 28
  %344 = getelementptr inbounds %struct.ToolSettings, ptr %335, i64 0, i32 8
  %345 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %43, i64 0, i32 2
  %346 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %43, i64 0, i32 1
  %347 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %43, i64 0, i32 3
  %348 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %43, i64 0, i32 4
  %349 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %43, i64 0, i32 5
  %350 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %43, i64 0, i32 6
  %351 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %43, i64 0, i32 7
  %352 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %43, i64 0, i32 8
  %353 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %43, i64 0, i32 9
  %354 = getelementptr inbounds %struct.RegionView3D, ptr %58, i64 0, i32 1
  %355 = getelementptr inbounds %struct.BMEditMesh, ptr %4, i64 0, i32 14
  %356 = getelementptr inbounds %struct.DerivedMesh, ptr %5, i64 0, i32 71
  %357 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 87
  %358 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 24
  %359 = getelementptr inbounds %struct.drawBMSelect_userData, ptr %42, i64 0, i32 1
  %360 = getelementptr inbounds %struct.DerivedMesh, ptr %5, i64 0, i32 74
  br label %361

361:                                              ; preds = %469, %340
  %362 = phi i1 [ true, %340 ], [ false, %469 ]
  %363 = phi i8 [ 0, %340 ], [ 1, %469 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %44) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %45) #13
  %364 = select i1 %362, i32 33, i32 34
  call void @UI_GetThemeColor3ubv(i32 noundef %364, ptr noundef nonnull %44) #13
  %365 = select i1 %362, i32 27, i32 47
  call void @UI_GetThemeColor3ubv(i32 noundef %365, ptr noundef nonnull %45) #13
  %366 = call fast nofpclass(nan inf) float @UI_GetThemeValuef(i32 noundef 36) #13
  %367 = call fast nofpclass(nan inf) float @UI_GetThemeValuef(i32 noundef 48) #13
  %368 = load i8, ptr %336, align 8, !tbaa !58
  %369 = icmp eq i8 %368, 0
  br i1 %369, label %424, label %370

370:                                              ; preds = %361
  %371 = load i16, ptr %343, align 8, !tbaa !89
  %372 = and i16 %371, 4096
  %373 = icmp eq i16 %372, 0
  br i1 %373, label %374, label %424

374:                                              ; preds = %370
  call void @glDisable(i32 noundef 2929) #13
  call void @glEnable(i32 noundef 3042) #13
  %375 = fcmp fast ogt float %367, 0x4000CCCCC0000000
  %376 = fmul fast float %367, 5.000000e-01
  %377 = select fast i1 %375, float %376, float %367
  store i8 100, ptr %341, align 1, !tbaa !50
  store i8 100, ptr %342, align 1, !tbaa !50
  %378 = load i16, ptr %344, align 2, !tbaa !452
  %379 = and i16 %378, 1
  %380 = icmp eq i16 %379, 0
  br i1 %380, label %394, label %381

381:                                              ; preds = %374
  %382 = fcmp fast ogt float %366, 0x4000CCCCC0000000
  %383 = fmul fast float %366, 5.000000e-01
  %384 = select fast i1 %382, float %383, float %366
  call void @glPointSize(float noundef nofpclass(nan inf) %384) #13
  call void @glColor4ubv(ptr noundef nonnull %44) #13
  call void @llvm.lifetime.start.p0(i64 112, ptr nonnull %43) #13
  store i8 %363, ptr %345, align 8, !tbaa !493
  store ptr %83, ptr %346, align 8, !tbaa !495
  %385 = load ptr, ptr %4, align 8, !tbaa !450
  store ptr %385, ptr %43, align 8, !tbaa !496
  call void @UI_GetThemeColor4ubv(i32 noundef 127, ptr noundef nonnull %347) #13
  call void @UI_GetThemeColor4ubv(i32 noundef 34, ptr noundef nonnull %348) #13
  call void @UI_GetThemeColor4ubv(i32 noundef 33, ptr noundef nonnull %349) #13
  call void @UI_GetThemeColor4ubv(i32 noundef 164, ptr noundef nonnull %350) #13
  %386 = call fast nofpclass(nan inf) float @UI_GetThemeValuef(i32 noundef 36) #13
  store float %386, ptr %351, align 4, !tbaa !497
  %387 = load ptr, ptr %4, align 8, !tbaa !450
  %388 = getelementptr inbounds %struct.BMesh, ptr %387, i64 0, i32 24
  %389 = call i32 @CustomData_get_offset(ptr noundef nonnull %388, i32 noundef 36) #13
  store i32 %389, ptr %352, align 8, !tbaa !498
  %390 = load ptr, ptr %355, align 8, !tbaa !499
  %391 = getelementptr inbounds %struct.Object, ptr %390, i64 0, i32 47
  call void @mul_m4_m4m4(ptr noundef nonnull %353, ptr noundef nonnull %354, ptr noundef nonnull %391) #13
  %392 = call zeroext i8 @invert_m4(ptr noundef nonnull %353) #13
  call void @bglBegin(i32 noundef 0) #13
  %393 = load ptr, ptr %356, align 8, !tbaa !324
  call void %393(ptr noundef %5, ptr noundef nonnull @draw_dm_verts__mapFunc, ptr noundef nonnull %43, i32 noundef 0) #13
  call void @bglEnd() #13
  call void @llvm.lifetime.end.p0(i64 112, ptr nonnull %43) #13
  br label %394

394:                                              ; preds = %381, %374
  %395 = load i8, ptr %357, align 2, !tbaa !81
  %396 = load ptr, ptr %334, align 8, !tbaa !361
  %397 = getelementptr i8, ptr %396, i64 46
  %398 = load i16, ptr %397, align 2, !tbaa !452
  %399 = and i16 %398, 4
  %400 = icmp eq i16 %399, 0
  br i1 %400, label %423, label %401

401:                                              ; preds = %394
  %402 = load i32, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 15), align 8, !tbaa !16
  %403 = and i32 %402, 16
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %405, label %423

405:                                              ; preds = %401
  %406 = load i16, ptr %343, align 8, !tbaa !89
  %407 = and i16 %406, 4096
  %408 = icmp eq i16 %407, 0
  br i1 %408, label %420, label %409

409:                                              ; preds = %405
  %410 = icmp eq i8 %395, 5
  %411 = load i16, ptr %358, align 8, !tbaa !5
  %412 = icmp eq i16 %411, 5
  %413 = select i1 %410, i1 %412, i1 false
  br i1 %413, label %423, label %414

414:                                              ; preds = %409
  %415 = icmp sgt i16 %411, 2
  br i1 %415, label %416, label %420

416:                                              ; preds = %414
  %417 = load i16, ptr %63, align 2, !tbaa !15
  %418 = and i16 %417, 8
  %419 = icmp eq i16 %418, 0
  br i1 %419, label %420, label %423

420:                                              ; preds = %416, %414, %405
  call void @glPointSize(float noundef nofpclass(nan inf) %377) #13
  call void @glColor4ubv(ptr noundef nonnull %45) #13
  %421 = load ptr, ptr %4, align 8, !tbaa !450
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %42) #13
  store ptr %421, ptr %42, align 8, !tbaa !500
  store i8 %363, ptr %359, align 8, !tbaa !502
  call void @bglBegin(i32 noundef 0) #13
  %422 = load ptr, ptr %360, align 8, !tbaa !453
  call void %422(ptr noundef %5, ptr noundef nonnull @draw_dm_face_centers__mapFunc, ptr noundef nonnull %42, i32 noundef 0) #13
  call void @bglEnd() #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %42) #13
  br label %423

423:                                              ; preds = %420, %416, %409, %401, %394
  call void @glDisable(i32 noundef 3042) #13
  call void @glEnable(i32 noundef 2929) #13
  br label %424

424:                                              ; preds = %423, %370, %361
  %425 = call fast nofpclass(nan inf) float @UI_GetThemeValuef(i32 noundef 36) #13
  %426 = call fast nofpclass(nan inf) float @UI_GetThemeValuef(i32 noundef 48) #13
  store i8 -1, ptr %341, align 1, !tbaa !50
  store i8 -1, ptr %342, align 1, !tbaa !50
  %427 = load i16, ptr %344, align 2, !tbaa !452
  %428 = and i16 %427, 1
  %429 = icmp eq i16 %428, 0
  br i1 %429, label %440, label %430

430:                                              ; preds = %424
  call void @glPointSize(float noundef nofpclass(nan inf) %425) #13
  call void @glColor4ubv(ptr noundef nonnull %44) #13
  call void @llvm.lifetime.start.p0(i64 112, ptr nonnull %43) #13
  store i8 %363, ptr %345, align 8, !tbaa !493
  store ptr %83, ptr %346, align 8, !tbaa !495
  %431 = load ptr, ptr %4, align 8, !tbaa !450
  store ptr %431, ptr %43, align 8, !tbaa !496
  call void @UI_GetThemeColor4ubv(i32 noundef 127, ptr noundef nonnull %347) #13
  call void @UI_GetThemeColor4ubv(i32 noundef 34, ptr noundef nonnull %348) #13
  call void @UI_GetThemeColor4ubv(i32 noundef 33, ptr noundef nonnull %349) #13
  call void @UI_GetThemeColor4ubv(i32 noundef 164, ptr noundef nonnull %350) #13
  %432 = call fast nofpclass(nan inf) float @UI_GetThemeValuef(i32 noundef 36) #13
  store float %432, ptr %351, align 4, !tbaa !497
  %433 = load ptr, ptr %4, align 8, !tbaa !450
  %434 = getelementptr inbounds %struct.BMesh, ptr %433, i64 0, i32 24
  %435 = call i32 @CustomData_get_offset(ptr noundef nonnull %434, i32 noundef 36) #13
  store i32 %435, ptr %352, align 8, !tbaa !498
  %436 = load ptr, ptr %355, align 8, !tbaa !499
  %437 = getelementptr inbounds %struct.Object, ptr %436, i64 0, i32 47
  call void @mul_m4_m4m4(ptr noundef nonnull %353, ptr noundef nonnull %354, ptr noundef nonnull %437) #13
  %438 = call zeroext i8 @invert_m4(ptr noundef nonnull %353) #13
  call void @bglBegin(i32 noundef 0) #13
  %439 = load ptr, ptr %356, align 8, !tbaa !324
  call void %439(ptr noundef %5, ptr noundef nonnull @draw_dm_verts__mapFunc, ptr noundef nonnull %43, i32 noundef 0) #13
  call void @bglEnd() #13
  call void @llvm.lifetime.end.p0(i64 112, ptr nonnull %43) #13
  br label %440

440:                                              ; preds = %430, %424
  %441 = load i8, ptr %357, align 2, !tbaa !81
  %442 = load ptr, ptr %334, align 8, !tbaa !361
  %443 = getelementptr i8, ptr %442, i64 46
  %444 = load i16, ptr %443, align 2, !tbaa !452
  %445 = and i16 %444, 4
  %446 = icmp eq i16 %445, 0
  br i1 %446, label %469, label %447

447:                                              ; preds = %440
  %448 = load i32, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 15), align 8, !tbaa !16
  %449 = and i32 %448, 16
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %451, label %469

451:                                              ; preds = %447
  %452 = load i16, ptr %343, align 8, !tbaa !89
  %453 = and i16 %452, 4096
  %454 = icmp eq i16 %453, 0
  br i1 %454, label %466, label %455

455:                                              ; preds = %451
  %456 = icmp eq i8 %441, 5
  %457 = load i16, ptr %358, align 8, !tbaa !5
  %458 = icmp eq i16 %457, 5
  %459 = select i1 %456, i1 %458, i1 false
  br i1 %459, label %469, label %460

460:                                              ; preds = %455
  %461 = icmp sgt i16 %457, 2
  br i1 %461, label %462, label %466

462:                                              ; preds = %460
  %463 = load i16, ptr %63, align 2, !tbaa !15
  %464 = and i16 %463, 8
  %465 = icmp eq i16 %464, 0
  br i1 %465, label %466, label %469

466:                                              ; preds = %462, %460, %451
  call void @glPointSize(float noundef nofpclass(nan inf) %426) #13
  call void @glColor4ubv(ptr noundef nonnull %45) #13
  %467 = load ptr, ptr %4, align 8, !tbaa !450
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %42) #13
  store ptr %467, ptr %42, align 8, !tbaa !500
  store i8 %363, ptr %359, align 8, !tbaa !502
  call void @bglBegin(i32 noundef 0) #13
  %468 = load ptr, ptr %360, align 8, !tbaa !453
  call void %468(ptr noundef %5, ptr noundef nonnull @draw_dm_face_centers__mapFunc, ptr noundef nonnull %42, i32 noundef 0) #13
  call void @bglEnd() #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %42) #13
  br label %469

469:                                              ; preds = %466, %462, %455, %447, %440
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %45) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %44) #13
  br i1 %362, label %361, label %470, !llvm.loop !503

470:                                              ; preds = %469
  %471 = load i8, ptr %336, align 8, !tbaa !58
  %472 = icmp eq i8 %471, 0
  br i1 %472, label %474, label %473

473:                                              ; preds = %470
  call void @glDepthMask(i8 noundef zeroext 1) #13
  br label %474

474:                                              ; preds = %470, %473
  call void @glPointSize(float noundef nofpclass(nan inf) 1.000000e+00) #13
  %475 = load i32, ptr %85, align 8, !tbaa !481
  %476 = and i32 %475, 4
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %496, label %478

478:                                              ; preds = %474
  call void @UI_ThemeColor(i32 noundef 44) #13
  %479 = load ptr, ptr %4, align 8, !tbaa !450
  %480 = load ptr, ptr %334, align 8, !tbaa !361
  %481 = getelementptr i8, ptr %480, i64 40
  %482 = load float, ptr %481, align 8, !tbaa !375
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %41) #13
  store ptr %479, ptr %41, align 8, !tbaa !504
  %483 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %41, i64 0, i32 2
  store float %482, ptr %483, align 4, !tbaa !506
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %40) #13
  %484 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 47
  call void @copy_m3_m4(ptr noundef nonnull %40, ptr noundef nonnull %484) #13
  %485 = call zeroext i8 @is_uniform_scaled_m3(ptr noundef nonnull %40) #13
  %486 = zext i8 %485 to i32
  %487 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %41, i64 0, i32 1
  store i32 %486, ptr %487, align 8, !tbaa !507
  %488 = icmp eq i8 %485, 0
  br i1 %488, label %489, label %493

489:                                              ; preds = %478
  %490 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %41, i64 0, i32 4
  %491 = call zeroext i8 @invert_m3_m3(ptr noundef nonnull %490, ptr noundef nonnull %40) #13
  %492 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %41, i64 0, i32 3
  call void @copy_m3_m3(ptr noundef nonnull %492, ptr noundef nonnull %490) #13
  call void @transpose_m3(ptr noundef nonnull %492) #13
  br label %493

493:                                              ; preds = %478, %489
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %40) #13
  call void @glBegin(i32 noundef 1) #13
  %494 = load ptr, ptr %360, align 8, !tbaa !453
  call void %494(ptr noundef %5, ptr noundef nonnull @draw_dm_face_normals__mapFunc, ptr noundef nonnull %41, i32 noundef 1) #13
  call void @glEnd() #13
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %41) #13
  %495 = load i32, ptr %85, align 8, !tbaa !481
  br label %496

496:                                              ; preds = %493, %474
  %497 = phi i32 [ %495, %493 ], [ %475, %474 ]
  %498 = and i32 %497, 8
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %518, label %500

500:                                              ; preds = %496
  call void @UI_ThemeColor(i32 noundef 45) #13
  %501 = load ptr, ptr %4, align 8, !tbaa !450
  %502 = load ptr, ptr %334, align 8, !tbaa !361
  %503 = getelementptr i8, ptr %502, i64 40
  %504 = load float, ptr %503, align 8, !tbaa !375
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %39) #13
  store ptr %501, ptr %39, align 8, !tbaa !504
  %505 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %39, i64 0, i32 2
  store float %504, ptr %505, align 4, !tbaa !506
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %38) #13
  %506 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 47
  call void @copy_m3_m4(ptr noundef nonnull %38, ptr noundef nonnull %506) #13
  %507 = call zeroext i8 @is_uniform_scaled_m3(ptr noundef nonnull %38) #13
  %508 = zext i8 %507 to i32
  %509 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %39, i64 0, i32 1
  store i32 %508, ptr %509, align 8, !tbaa !507
  %510 = icmp eq i8 %507, 0
  br i1 %510, label %511, label %515

511:                                              ; preds = %500
  %512 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %39, i64 0, i32 4
  %513 = call zeroext i8 @invert_m3_m3(ptr noundef nonnull %512, ptr noundef nonnull %38) #13
  %514 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %39, i64 0, i32 3
  call void @copy_m3_m3(ptr noundef nonnull %514, ptr noundef nonnull %512) #13
  call void @transpose_m3(ptr noundef nonnull %514) #13
  br label %515

515:                                              ; preds = %500, %511
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %38) #13
  call void @glBegin(i32 noundef 1) #13
  %516 = load ptr, ptr %356, align 8, !tbaa !324
  call void %516(ptr noundef %5, ptr noundef nonnull @draw_dm_vert_normals__mapFunc, ptr noundef nonnull %39, i32 noundef 1) #13
  call void @glEnd() #13
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %39) #13
  %517 = load i32, ptr %85, align 8, !tbaa !481
  br label %518

518:                                              ; preds = %515, %496
  %519 = phi i32 [ %517, %515 ], [ %497, %496 ]
  %520 = and i32 %519, 262144
  %521 = icmp eq i32 %520, 0
  br i1 %521, label %541, label %522

522:                                              ; preds = %518
  call void @UI_ThemeColor(i32 noundef 46) #13
  %523 = load ptr, ptr %4, align 8, !tbaa !450
  %524 = load ptr, ptr %334, align 8, !tbaa !361
  %525 = getelementptr i8, ptr %524, i64 40
  %526 = load float, ptr %525, align 8, !tbaa !375
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %37) #13
  store ptr %523, ptr %37, align 8, !tbaa !504
  %527 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %37, i64 0, i32 2
  store float %526, ptr %527, align 4, !tbaa !506
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %36) #13
  %528 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 47
  call void @copy_m3_m4(ptr noundef nonnull %36, ptr noundef nonnull %528) #13
  %529 = call zeroext i8 @is_uniform_scaled_m3(ptr noundef nonnull %36) #13
  %530 = zext i8 %529 to i32
  %531 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %37, i64 0, i32 1
  store i32 %530, ptr %531, align 8, !tbaa !507
  %532 = icmp eq i8 %529, 0
  br i1 %532, label %533, label %537

533:                                              ; preds = %522
  %534 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %37, i64 0, i32 4
  %535 = call zeroext i8 @invert_m3_m3(ptr noundef nonnull %534, ptr noundef nonnull %36) #13
  %536 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %37, i64 0, i32 3
  call void @copy_m3_m3(ptr noundef nonnull %536, ptr noundef nonnull %534) #13
  call void @transpose_m3(ptr noundef nonnull %536) #13
  br label %537

537:                                              ; preds = %522, %533
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %36) #13
  call void @glBegin(i32 noundef 1) #13
  %538 = getelementptr inbounds %struct.DerivedMesh, ptr %5, i64 0, i32 73
  %539 = load ptr, ptr %538, align 8, !tbaa !508
  call void %539(ptr noundef %5, ptr noundef nonnull @draw_dm_loop_normals__mapFunc, ptr noundef nonnull %37, i32 noundef 1) #13
  call void @glEnd() #13
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %37) #13
  %540 = load i32, ptr %85, align 8, !tbaa !481
  br label %541

541:                                              ; preds = %537, %518
  %542 = phi i32 [ %540, %537 ], [ %519, %518 ]
  %543 = and i32 %542, 15360
  %544 = icmp eq i32 %543, 0
  br i1 %544, label %1409, label %545

545:                                              ; preds = %541
  %546 = load i16, ptr %63, align 2, !tbaa !15
  %547 = and i16 %546, 4
  %548 = icmp eq i16 %547, 0
  br i1 %548, label %549, label %1409

549:                                              ; preds = %545
  %550 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 38
  %551 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 38, i32 1
  %552 = load i8, ptr %551, align 4, !tbaa !509
  %553 = icmp eq i8 %552, 0
  %554 = select i1 %553, i16 20, i16 16
  %555 = load ptr, ptr %59, align 8, !tbaa !90
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %13) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %14) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %15) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %16) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %17) #13
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %18) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %19) #13
  store i32 -16777216, ptr %19, align 4
  %556 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 31
  %557 = select i1 %553, ptr %556, ptr %550
  %558 = load float, ptr %557, align 4, !tbaa !44
  %559 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 38, i32 3
  %560 = load i16, ptr %559, align 2, !tbaa !510
  %561 = trunc i16 %560 to i8
  %562 = and i8 %561, 1
  %563 = load i16, ptr %343, align 8, !tbaa !89
  %564 = lshr i16 %563, 13
  %565 = trunc i16 %564 to i8
  %566 = and i8 %565, 1
  %567 = load i16, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 10), align 4, !tbaa !78
  %568 = trunc i16 %567 to i8
  %569 = lshr i8 %568, 1
  %570 = and i8 %569, 1
  %571 = getelementptr inbounds %struct.Mesh, ptr %555, i64 0, i32 36
  %572 = load i32, ptr %571, align 8, !tbaa !481
  %573 = and i32 %572, 9216
  %574 = icmp eq i32 %573, 9216
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %20) #13
  %575 = call ptr @EDBM_mesh_deform_dm_get(ptr noundef %4) #13
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %21) #13
  %576 = fcmp fast ugt float %558, 0x3F847AE140000000
  br i1 %576, label %577, label %584

577:                                              ; preds = %549
  %578 = fcmp fast ugt float %558, 0x3FB99999A0000000
  br i1 %578, label %579, label %584

579:                                              ; preds = %577
  %580 = fcmp fast ugt float %558, 1.000000e+00
  br i1 %580, label %581, label %584

581:                                              ; preds = %579
  %582 = fcmp fast ugt float %558, 1.000000e+01
  %583 = select i1 %582, ptr @.str.5, ptr @.str.4
  br label %584

584:                                              ; preds = %581, %579, %577, %549
  %585 = phi ptr [ @.str.1, %549 ], [ @.str.2, %577 ], [ @.str.3, %579 ], [ %583, %581 ]
  %586 = load i32, ptr %571, align 8, !tbaa !481
  %587 = and i32 %586, 9216
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %602, label %589

589:                                              ; preds = %584
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %22) #13
  call void @llvm.lifetime.start.p0(i64 272, ptr nonnull %23) #13
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(272) %23, i8 0, i64 272, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %24) #13
  store i32 0, ptr %24, align 4, !tbaa !511
  %590 = getelementptr inbounds %struct.rcti, ptr %24, i64 0, i32 1
  %591 = getelementptr inbounds %struct.ARegion, ptr %1, i64 0, i32 5
  %592 = load i16, ptr %591, align 8, !tbaa !512
  %593 = sext i16 %592 to i32
  store i32 %593, ptr %590, align 4, !tbaa !513
  %594 = getelementptr inbounds %struct.rcti, ptr %24, i64 0, i32 2
  store i32 0, ptr %594, align 4, !tbaa !514
  %595 = getelementptr inbounds %struct.rcti, ptr %24, i64 0, i32 3
  %596 = getelementptr inbounds %struct.ARegion, ptr %1, i64 0, i32 6
  %597 = load i16, ptr %596, align 2, !tbaa !515
  %598 = sext i16 %597 to i32
  store i32 %598, ptr %595, align 4, !tbaa !516
  %599 = load ptr, ptr %57, align 8, !tbaa !52
  %600 = load ptr, ptr %355, align 8, !tbaa !499
  call void @view3d_get_transformation(ptr noundef %1, ptr noundef %599, ptr noundef %600, ptr noundef nonnull %23) #13
  call void @ED_view3d_clipping_calc(ptr noundef nonnull %22, ptr noundef nonnull %20, ptr noundef nonnull %23, ptr noundef nonnull %24) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %24) #13
  call void @llvm.lifetime.end.p0(i64 272, ptr nonnull %23) #13
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %22) #13
  %601 = load i32, ptr %571, align 8, !tbaa !481
  br label %602

602:                                              ; preds = %589, %584
  %603 = phi i32 [ %601, %589 ], [ %586, %584 ]
  %604 = and i32 %603, 1024
  %605 = icmp eq i32 %604, 0
  br i1 %605, label %754, label %606

606:                                              ; preds = %602
  call void @UI_GetThemeColor3ubv(i32 noundef 135, ptr noundef nonnull %19) #13
  %607 = icmp eq ptr %575, null
  br i1 %607, label %610, label %608

608:                                              ; preds = %606
  %609 = load ptr, ptr %4, align 8, !tbaa !450
  call void @BM_mesh_elem_index_ensure(ptr noundef %609, i8 noundef zeroext 1) #13
  br label %610

610:                                              ; preds = %608, %606
  %611 = load ptr, ptr %4, align 8, !tbaa !450
  %612 = getelementptr inbounds %struct.BMIter, ptr %21, i64 0, i32 4
  store i8 2, ptr %612, align 4, !tbaa !517
  %613 = getelementptr inbounds %struct.BMIter, ptr %21, i64 0, i32 1
  store ptr @bmiter__elem_of_mesh_begin, ptr %613, align 8, !tbaa !519
  %614 = getelementptr inbounds %struct.BMIter, ptr %21, i64 0, i32 2
  store ptr @bmiter__elem_of_mesh_step, ptr %614, align 8, !tbaa !520
  %615 = getelementptr inbounds %struct.BMesh, ptr %611, i64 0, i32 10
  %616 = load ptr, ptr %615, align 8, !tbaa !521
  store ptr %616, ptr %21, align 8, !tbaa !50
  call void @bmiter__elem_of_mesh_begin(ptr noundef nonnull %21) #13
  %617 = load ptr, ptr %614, align 8, !tbaa !520
  %618 = call ptr %617(ptr noundef nonnull %21) #13
  %619 = icmp eq ptr %618, null
  br i1 %619, label %754, label %620

620:                                              ; preds = %610
  %621 = icmp eq i8 %570, 0
  %622 = getelementptr inbounds %struct.DerivedMesh, ptr %575, i64 0, i32 76
  %623 = getelementptr inbounds float, ptr %13, i64 1
  %624 = getelementptr inbounds float, ptr %13, i64 2
  %625 = getelementptr inbounds float, ptr %14, i64 1
  %626 = getelementptr inbounds float, ptr %14, i64 2
  %627 = getelementptr inbounds float, ptr %25, i64 2
  %628 = getelementptr inbounds float, ptr %26, i64 2
  %629 = icmp eq i8 %566, 0
  %630 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 47
  %631 = getelementptr inbounds float, ptr %16, i64 2
  br label %632

632:                                              ; preds = %750, %620
  %633 = phi ptr [ %618, %620 ], [ %752, %750 ]
  %634 = getelementptr i8, ptr %633, i64 13
  %635 = load i8, ptr %634, align 1, !tbaa !522
  %636 = and i8 %635, 1
  %637 = icmp eq i8 %636, 0
  br i1 %637, label %638, label %653

638:                                              ; preds = %632
  br i1 %621, label %750, label %639

639:                                              ; preds = %638
  %640 = getelementptr inbounds %struct.BMEdge, ptr %633, i64 0, i32 2
  %641 = load ptr, ptr %640, align 8, !tbaa !524
  %642 = getelementptr i8, ptr %641, i64 13
  %643 = load i8, ptr %642, align 1, !tbaa !522
  %644 = and i8 %643, 1
  %645 = icmp eq i8 %644, 0
  br i1 %645, label %646, label %653

646:                                              ; preds = %639
  %647 = getelementptr inbounds %struct.BMEdge, ptr %633, i64 0, i32 3
  %648 = load ptr, ptr %647, align 8, !tbaa !527
  %649 = getelementptr i8, ptr %648, i64 13
  %650 = load i8, ptr %649, align 1, !tbaa !522
  %651 = and i8 %650, 1
  %652 = icmp eq i8 %651, 0
  br i1 %652, label %750, label %653

653:                                              ; preds = %646, %639, %632
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %25) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %26) #13
  br i1 %607, label %669, label %654

654:                                              ; preds = %653
  %655 = load ptr, ptr %622, align 8, !tbaa !528
  %656 = getelementptr inbounds %struct.BMEdge, ptr %633, i64 0, i32 2
  %657 = load ptr, ptr %656, align 8, !tbaa !524
  %658 = getelementptr i8, ptr %657, i64 8
  %659 = load i32, ptr %658, align 8, !tbaa !529
  call void %655(ptr noundef nonnull %575, i32 noundef %659, ptr noundef nonnull %13) #13
  %660 = load ptr, ptr %622, align 8, !tbaa !528
  %661 = getelementptr inbounds %struct.BMEdge, ptr %633, i64 0, i32 3
  %662 = load ptr, ptr %661, align 8, !tbaa !527
  %663 = getelementptr i8, ptr %662, i64 8
  %664 = load i32, ptr %663, align 8, !tbaa !529
  call void %660(ptr noundef nonnull %575, i32 noundef %664, ptr noundef nonnull %14) #13
  %665 = load <2 x float>, ptr %13, align 8, !tbaa !44
  %666 = load float, ptr %624, align 8, !tbaa !44
  %667 = load <2 x float>, ptr %14, align 8, !tbaa !44
  %668 = load float, ptr %626, align 8, !tbaa !44
  br label %682

669:                                              ; preds = %653
  %670 = getelementptr inbounds %struct.BMEdge, ptr %633, i64 0, i32 2
  %671 = load ptr, ptr %670, align 8, !tbaa !524
  %672 = getelementptr inbounds %struct.BMVert, ptr %671, i64 0, i32 2
  %673 = load <2 x float>, ptr %672, align 4, !tbaa !44
  store <2 x float> %673, ptr %13, align 8, !tbaa !44
  %674 = getelementptr inbounds %struct.BMVert, ptr %671, i64 0, i32 2, i64 2
  %675 = load float, ptr %674, align 4, !tbaa !44
  store float %675, ptr %624, align 8, !tbaa !44
  %676 = getelementptr inbounds %struct.BMEdge, ptr %633, i64 0, i32 3
  %677 = load ptr, ptr %676, align 8, !tbaa !527
  %678 = getelementptr inbounds %struct.BMVert, ptr %677, i64 0, i32 2
  %679 = load <2 x float>, ptr %678, align 4, !tbaa !44
  store <2 x float> %679, ptr %14, align 8, !tbaa !44
  %680 = getelementptr inbounds %struct.BMVert, ptr %677, i64 0, i32 2, i64 2
  %681 = load float, ptr %680, align 4, !tbaa !44
  store float %681, ptr %626, align 8, !tbaa !44
  br label %682

682:                                              ; preds = %669, %654
  %683 = phi float [ %681, %669 ], [ %668, %654 ]
  %684 = phi float [ %675, %669 ], [ %666, %654 ]
  %685 = phi <2 x float> [ %673, %669 ], [ %665, %654 ]
  %686 = phi <2 x float> [ %679, %669 ], [ %667, %654 ]
  store <2 x float> %685, ptr %25, align 8, !tbaa !44
  store float %684, ptr %627, align 8, !tbaa !44
  store <2 x float> %686, ptr %26, align 8, !tbaa !44
  store float %683, ptr %628, align 8, !tbaa !44
  %687 = call zeroext i8 @clip_segment_v3_plane_n(ptr noundef nonnull %25, ptr noundef nonnull %26, ptr noundef nonnull %20, i32 noundef 4) #13
  %688 = icmp eq i8 %687, 0
  br i1 %688, label %749, label %689

689:                                              ; preds = %682
  br i1 %574, label %690, label %691

690:                                              ; preds = %689
  call void @interp_v3_v3v3(ptr noundef nonnull %16, ptr noundef nonnull %13, ptr noundef nonnull %14, float noundef nofpclass(nan inf) 0x3FD99999A0000000) #13
  br label %692

691:                                              ; preds = %689
  call void @mid_v3_v3v3(ptr noundef nonnull %16, ptr noundef nonnull %25, ptr noundef nonnull %26) #13
  br label %692

692:                                              ; preds = %691, %690
  br i1 %629, label %694, label %693

693:                                              ; preds = %692
  call void @mul_mat3_m4_v3(ptr noundef nonnull %630, ptr noundef nonnull %13) #13
  call void @mul_mat3_m4_v3(ptr noundef nonnull %630, ptr noundef nonnull %14) #13
  br label %694

694:                                              ; preds = %693, %692
  %695 = load i8, ptr %551, align 4, !tbaa !509
  %696 = icmp eq i8 %695, 0
  %697 = load float, ptr %14, align 8, !tbaa !44
  %698 = load float, ptr %13, align 8, !tbaa !44
  %699 = fsub fast float %697, %698
  %700 = load float, ptr %625, align 4, !tbaa !44
  %701 = load float, ptr %623, align 4, !tbaa !44
  %702 = fsub fast float %700, %701
  %703 = load float, ptr %626, align 8, !tbaa !44
  %704 = load float, ptr %624, align 8, !tbaa !44
  %705 = fsub fast float %703, %704
  %706 = fmul fast float %699, %699
  %707 = fmul fast float %702, %702
  %708 = fadd fast float %707, %706
  %709 = fmul fast float %705, %705
  %710 = fadd fast float %708, %709
  %711 = call fast float @llvm.sqrt.f32(float %710)
  br i1 %696, label %718, label %712

712:                                              ; preds = %694
  %713 = load float, ptr %550, align 4, !tbaa !530
  %714 = fmul fast float %713, %711
  %715 = fpext float %714 to double
  %716 = zext i8 %695 to i32
  %717 = call i64 @bUnit_AsString(ptr noundef nonnull %18, i32 noundef 32, double noundef nofpclass(nan inf) %715, i32 noundef 3, i32 noundef %716, i32 noundef 1, i8 noundef zeroext %562, i8 noundef zeroext 0) #13
  br label %721

718:                                              ; preds = %694
  %719 = fpext float %711 to double
  %720 = call i64 (ptr, i64, ptr, ...) @BLI_snprintf(ptr noundef nonnull %18, i64 noundef 32, ptr noundef nonnull %585, double noundef nofpclass(nan inf) %719) #13
  br label %721

721:                                              ; preds = %718, %712
  %722 = phi i64 [ %717, %712 ], [ %720, %718 ]
  %723 = load ptr, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  %724 = icmp eq ptr %723, null
  br i1 %724, label %725, label %727

725:                                              ; preds = %721
  %726 = call ptr @BLI_memarena_new(i64 noundef 16376, ptr noundef nonnull @__func__.view3d_cached_text_draw_add) #13
  store ptr %726, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  br label %727

727:                                              ; preds = %725, %721
  %728 = phi ptr [ %726, %725 ], [ %723, %721 ]
  %729 = shl i64 %722, 32
  %730 = add i64 %729, 4294967296
  %731 = ashr exact i64 %730, 32
  %732 = add nsw i64 %731, 40
  %733 = call ptr @BLI_memarena_alloc(ptr noundef %728, i64 noundef %732) #13
  %734 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %735 = sext i32 %734 to i64
  %736 = getelementptr inbounds [3 x ptr], ptr @g_v3d_strings, i64 0, i64 %735
  %737 = load ptr, ptr %736, align 8, !tbaa !49
  store ptr %737, ptr %733, align 8, !tbaa !49
  store ptr %733, ptr %736, align 8, !tbaa !49
  %738 = getelementptr inbounds %struct.ViewCachedString, ptr %733, i64 0, i32 1
  %739 = load <2 x float>, ptr %16, align 8, !tbaa !44
  store <2 x float> %739, ptr %738, align 4, !tbaa !44
  %740 = load float, ptr %631, align 8, !tbaa !44
  %741 = getelementptr inbounds %struct.ViewCachedString, ptr %733, i64 0, i32 1, i64 2
  store float %740, ptr %741, align 4, !tbaa !44
  %742 = getelementptr inbounds %struct.ViewCachedString, ptr %733, i64 0, i32 2
  %743 = load <4 x i8>, ptr %19, align 4, !tbaa !50
  store <4 x i8> %743, ptr %742, align 1, !tbaa !50
  %744 = getelementptr inbounds %struct.ViewCachedString, ptr %733, i64 0, i32 4
  store i16 0, ptr %744, align 4, !tbaa !51
  %745 = getelementptr inbounds %struct.ViewCachedString, ptr %733, i64 0, i32 5
  store i16 %554, ptr %745, align 2, !tbaa !51
  %746 = trunc i64 %722 to i32
  %747 = getelementptr inbounds %struct.ViewCachedString, ptr %733, i64 0, i32 6
  store i32 %746, ptr %747, align 8, !tbaa !47
  %748 = getelementptr inbounds %struct.ViewCachedString, ptr %733, i64 0, i32 7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 4 %748, ptr nonnull align 16 %18, i64 %731, i1 false)
  br label %749

749:                                              ; preds = %727, %682
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %26) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %25) #13
  br label %750

750:                                              ; preds = %749, %646, %638
  %751 = load ptr, ptr %614, align 8, !tbaa !520
  %752 = call ptr %751(ptr noundef nonnull %21) #13
  %753 = icmp eq ptr %752, null
  br i1 %753, label %754, label %632, !llvm.loop !531

754:                                              ; preds = %750, %610, %602
  %755 = load i32, ptr %571, align 8, !tbaa !481
  %756 = and i32 %755, 8192
  %757 = icmp eq i32 %756, 0
  br i1 %757, label %999, label %758

758:                                              ; preds = %754
  %759 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 38, i32 2
  %760 = load i8, ptr %759, align 1, !tbaa !532
  %761 = icmp eq i8 %760, 2
  call void @UI_GetThemeColor3ubv(i32 noundef 136, ptr noundef nonnull %19) #13
  %762 = icmp eq ptr %575, null
  br i1 %762, label %765, label %763

763:                                              ; preds = %758
  %764 = load ptr, ptr %4, align 8, !tbaa !450
  call void @BM_mesh_elem_index_ensure(ptr noundef %764, i8 noundef zeroext 9) #13
  br label %765

765:                                              ; preds = %763, %758
  %766 = load ptr, ptr %4, align 8, !tbaa !450
  %767 = getelementptr inbounds %struct.BMIter, ptr %21, i64 0, i32 4
  store i8 2, ptr %767, align 4, !tbaa !517
  %768 = getelementptr inbounds %struct.BMIter, ptr %21, i64 0, i32 1
  store ptr @bmiter__elem_of_mesh_begin, ptr %768, align 8, !tbaa !519
  %769 = getelementptr inbounds %struct.BMIter, ptr %21, i64 0, i32 2
  store ptr @bmiter__elem_of_mesh_step, ptr %769, align 8, !tbaa !520
  %770 = getelementptr inbounds %struct.BMesh, ptr %766, i64 0, i32 10
  %771 = load ptr, ptr %770, align 8, !tbaa !521
  store ptr %771, ptr %21, align 8, !tbaa !50
  call void @bmiter__elem_of_mesh_begin(ptr noundef nonnull %21) #13
  %772 = load ptr, ptr %769, align 8, !tbaa !520
  %773 = call ptr %772(ptr noundef nonnull %21) #13
  %774 = icmp eq ptr %773, null
  br i1 %774, label %999, label %775

775:                                              ; preds = %765
  %776 = icmp eq i8 %570, 0
  %777 = getelementptr inbounds %struct.DerivedMesh, ptr %575, i64 0, i32 76
  %778 = getelementptr inbounds float, ptr %13, i64 2
  %779 = getelementptr inbounds float, ptr %14, i64 2
  %780 = getelementptr inbounds float, ptr %29, i64 2
  %781 = getelementptr inbounds float, ptr %30, i64 2
  %782 = getelementptr inbounds %struct.DerivedMesh, ptr %575, i64 0, i32 79
  %783 = getelementptr inbounds float, ptr %31, i64 2
  %784 = getelementptr inbounds float, ptr %32, i64 2
  %785 = icmp eq i8 %566, 0
  %786 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 50
  %787 = getelementptr inbounds float, ptr %16, i64 2
  br label %788

788:                                              ; preds = %995, %775
  %789 = phi ptr [ %773, %775 ], [ %997, %995 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %27) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %28) #13
  %790 = call zeroext i8 @BM_edge_loop_pair(ptr noundef nonnull %789, ptr noundef nonnull %27, ptr noundef nonnull %28) #13
  %791 = icmp eq i8 %790, 0
  br i1 %791, label %995, label %792

792:                                              ; preds = %788
  %793 = getelementptr i8, ptr %789, i64 13
  %794 = load i8, ptr %793, align 1, !tbaa !522
  %795 = and i8 %794, 1
  %796 = icmp eq i8 %795, 0
  br i1 %796, label %797, label %854

797:                                              ; preds = %792
  br i1 %776, label %995, label %798

798:                                              ; preds = %797
  %799 = getelementptr inbounds %struct.BMEdge, ptr %789, i64 0, i32 2
  %800 = load ptr, ptr %799, align 8, !tbaa !524
  %801 = getelementptr i8, ptr %800, i64 13
  %802 = load i8, ptr %801, align 1, !tbaa !522
  %803 = and i8 %802, 1
  %804 = icmp eq i8 %803, 0
  br i1 %804, label %805, label %854

805:                                              ; preds = %798
  %806 = getelementptr inbounds %struct.BMEdge, ptr %789, i64 0, i32 3
  %807 = load ptr, ptr %806, align 8, !tbaa !527
  %808 = getelementptr i8, ptr %807, i64 13
  %809 = load i8, ptr %808, align 1, !tbaa !522
  %810 = and i8 %809, 1
  %811 = icmp eq i8 %810, 0
  br i1 %811, label %812, label %854

812:                                              ; preds = %805
  %813 = load ptr, ptr %27, align 8, !tbaa !49
  %814 = getelementptr inbounds %struct.BMLoop, ptr %813, i64 0, i32 6
  %815 = load ptr, ptr %814, align 8, !tbaa !533
  %816 = getelementptr inbounds %struct.BMLoop, ptr %815, i64 0, i32 6
  %817 = load ptr, ptr %816, align 8, !tbaa !533
  %818 = getelementptr inbounds %struct.BMLoop, ptr %817, i64 0, i32 1
  %819 = load ptr, ptr %818, align 8, !tbaa !535
  %820 = getelementptr i8, ptr %819, i64 13
  %821 = load i8, ptr %820, align 1, !tbaa !522
  %822 = and i8 %821, 1
  %823 = icmp eq i8 %822, 0
  br i1 %823, label %824, label %854

824:                                              ; preds = %812
  %825 = getelementptr inbounds %struct.BMLoop, ptr %813, i64 0, i32 7
  %826 = load ptr, ptr %825, align 8, !tbaa !536
  %827 = getelementptr inbounds %struct.BMLoop, ptr %826, i64 0, i32 1
  %828 = load ptr, ptr %827, align 8, !tbaa !535
  %829 = getelementptr i8, ptr %828, i64 13
  %830 = load i8, ptr %829, align 1, !tbaa !522
  %831 = and i8 %830, 1
  %832 = icmp eq i8 %831, 0
  br i1 %832, label %833, label %854

833:                                              ; preds = %824
  %834 = load ptr, ptr %28, align 8, !tbaa !49
  %835 = getelementptr inbounds %struct.BMLoop, ptr %834, i64 0, i32 6
  %836 = load ptr, ptr %835, align 8, !tbaa !533
  %837 = getelementptr inbounds %struct.BMLoop, ptr %836, i64 0, i32 6
  %838 = load ptr, ptr %837, align 8, !tbaa !533
  %839 = getelementptr inbounds %struct.BMLoop, ptr %838, i64 0, i32 1
  %840 = load ptr, ptr %839, align 8, !tbaa !535
  %841 = getelementptr i8, ptr %840, i64 13
  %842 = load i8, ptr %841, align 1, !tbaa !522
  %843 = and i8 %842, 1
  %844 = icmp eq i8 %843, 0
  br i1 %844, label %845, label %854

845:                                              ; preds = %833
  %846 = getelementptr inbounds %struct.BMLoop, ptr %834, i64 0, i32 7
  %847 = load ptr, ptr %846, align 8, !tbaa !536
  %848 = getelementptr inbounds %struct.BMLoop, ptr %847, i64 0, i32 1
  %849 = load ptr, ptr %848, align 8, !tbaa !535
  %850 = getelementptr i8, ptr %849, i64 13
  %851 = load i8, ptr %850, align 1, !tbaa !522
  %852 = and i8 %851, 1
  %853 = icmp eq i8 %852, 0
  br i1 %853, label %995, label %854

854:                                              ; preds = %845, %833, %824, %812, %805, %798, %792
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %29) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %30) #13
  br i1 %762, label %870, label %855

855:                                              ; preds = %854
  %856 = load ptr, ptr %777, align 8, !tbaa !528
  %857 = getelementptr inbounds %struct.BMEdge, ptr %789, i64 0, i32 2
  %858 = load ptr, ptr %857, align 8, !tbaa !524
  %859 = getelementptr i8, ptr %858, i64 8
  %860 = load i32, ptr %859, align 8, !tbaa !529
  call void %856(ptr noundef nonnull %575, i32 noundef %860, ptr noundef nonnull %13) #13
  %861 = load ptr, ptr %777, align 8, !tbaa !528
  %862 = getelementptr inbounds %struct.BMEdge, ptr %789, i64 0, i32 3
  %863 = load ptr, ptr %862, align 8, !tbaa !527
  %864 = getelementptr i8, ptr %863, i64 8
  %865 = load i32, ptr %864, align 8, !tbaa !529
  call void %861(ptr noundef nonnull %575, i32 noundef %865, ptr noundef nonnull %14) #13
  %866 = load <2 x float>, ptr %13, align 8, !tbaa !44
  %867 = load float, ptr %778, align 8, !tbaa !44
  %868 = load <2 x float>, ptr %14, align 8, !tbaa !44
  %869 = load float, ptr %779, align 8, !tbaa !44
  br label %883

870:                                              ; preds = %854
  %871 = getelementptr inbounds %struct.BMEdge, ptr %789, i64 0, i32 2
  %872 = load ptr, ptr %871, align 8, !tbaa !524
  %873 = getelementptr inbounds %struct.BMVert, ptr %872, i64 0, i32 2
  %874 = load <2 x float>, ptr %873, align 4, !tbaa !44
  store <2 x float> %874, ptr %13, align 8, !tbaa !44
  %875 = getelementptr inbounds %struct.BMVert, ptr %872, i64 0, i32 2, i64 2
  %876 = load float, ptr %875, align 4, !tbaa !44
  store float %876, ptr %778, align 8, !tbaa !44
  %877 = getelementptr inbounds %struct.BMEdge, ptr %789, i64 0, i32 3
  %878 = load ptr, ptr %877, align 8, !tbaa !527
  %879 = getelementptr inbounds %struct.BMVert, ptr %878, i64 0, i32 2
  %880 = load <2 x float>, ptr %879, align 4, !tbaa !44
  store <2 x float> %880, ptr %14, align 8, !tbaa !44
  %881 = getelementptr inbounds %struct.BMVert, ptr %878, i64 0, i32 2, i64 2
  %882 = load float, ptr %881, align 4, !tbaa !44
  store float %882, ptr %779, align 8, !tbaa !44
  br label %883

883:                                              ; preds = %870, %855
  %884 = phi float [ %882, %870 ], [ %869, %855 ]
  %885 = phi float [ %876, %870 ], [ %867, %855 ]
  %886 = phi <2 x float> [ %874, %870 ], [ %866, %855 ]
  %887 = phi <2 x float> [ %880, %870 ], [ %868, %855 ]
  store <2 x float> %886, ptr %29, align 8, !tbaa !44
  store float %885, ptr %780, align 8, !tbaa !44
  store <2 x float> %887, ptr %30, align 8, !tbaa !44
  store float %884, ptr %781, align 8, !tbaa !44
  %888 = call zeroext i8 @clip_segment_v3_plane_n(ptr noundef nonnull %29, ptr noundef nonnull %30, ptr noundef nonnull %20, i32 noundef 4) #13
  %889 = icmp eq i8 %888, 0
  br i1 %889, label %994, label %890

890:                                              ; preds = %883
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %31) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %32) #13
  br i1 %574, label %891, label %892

891:                                              ; preds = %890
  call void @interp_v3_v3v3(ptr noundef nonnull %16, ptr noundef nonnull %30, ptr noundef nonnull %29, float noundef nofpclass(nan inf) 0x3FD99999A0000000) #13
  br label %893

892:                                              ; preds = %890
  call void @mid_v3_v3v3(ptr noundef nonnull %16, ptr noundef nonnull %29, ptr noundef nonnull %30) #13
  br label %893

893:                                              ; preds = %892, %891
  br i1 %762, label %907, label %894

894:                                              ; preds = %893
  %895 = load ptr, ptr %782, align 8, !tbaa !537
  %896 = load ptr, ptr %27, align 8, !tbaa !49
  %897 = getelementptr inbounds %struct.BMLoop, ptr %896, i64 0, i32 3
  %898 = load ptr, ptr %897, align 8, !tbaa !538
  %899 = getelementptr i8, ptr %898, i64 8
  %900 = load i32, ptr %899, align 8, !tbaa !529
  call void %895(ptr noundef nonnull %575, i32 noundef %900, ptr noundef nonnull %31) #13
  %901 = load ptr, ptr %782, align 8, !tbaa !537
  %902 = load ptr, ptr %28, align 8, !tbaa !49
  %903 = getelementptr inbounds %struct.BMLoop, ptr %902, i64 0, i32 3
  %904 = load ptr, ptr %903, align 8, !tbaa !538
  %905 = getelementptr i8, ptr %904, i64 8
  %906 = load i32, ptr %905, align 8, !tbaa !529
  call void %901(ptr noundef nonnull %575, i32 noundef %906, ptr noundef nonnull %32) #13
  br label %922

907:                                              ; preds = %893
  %908 = load ptr, ptr %27, align 8, !tbaa !49
  %909 = getelementptr inbounds %struct.BMLoop, ptr %908, i64 0, i32 3
  %910 = load ptr, ptr %909, align 8, !tbaa !538
  %911 = getelementptr inbounds %struct.BMFace, ptr %910, i64 0, i32 4
  %912 = load <2 x float>, ptr %911, align 4, !tbaa !44
  store <2 x float> %912, ptr %31, align 8, !tbaa !44
  %913 = getelementptr inbounds %struct.BMFace, ptr %910, i64 0, i32 4, i64 2
  %914 = load float, ptr %913, align 4, !tbaa !44
  store float %914, ptr %783, align 8, !tbaa !44
  %915 = load ptr, ptr %28, align 8, !tbaa !49
  %916 = getelementptr inbounds %struct.BMLoop, ptr %915, i64 0, i32 3
  %917 = load ptr, ptr %916, align 8, !tbaa !538
  %918 = getelementptr inbounds %struct.BMFace, ptr %917, i64 0, i32 4
  %919 = load <2 x float>, ptr %918, align 4, !tbaa !44
  store <2 x float> %919, ptr %32, align 8, !tbaa !44
  %920 = getelementptr inbounds %struct.BMFace, ptr %917, i64 0, i32 4, i64 2
  %921 = load float, ptr %920, align 4, !tbaa !44
  store float %921, ptr %784, align 8, !tbaa !44
  br label %922

922:                                              ; preds = %907, %894
  br i1 %785, label %962, label %923

923:                                              ; preds = %922
  call void @mul_mat3_m4_v3(ptr noundef nonnull %786, ptr noundef nonnull %31) #13
  call void @mul_mat3_m4_v3(ptr noundef nonnull %786, ptr noundef nonnull %32) #13
  %924 = load <2 x float>, ptr %31, align 8, !tbaa !44
  %925 = fmul fast <2 x float> %924, %924
  %926 = shufflevector <2 x float> %925, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %927 = fadd fast <2 x float> %926, %925
  %928 = extractelement <2 x float> %927, i64 0
  %929 = load float, ptr %783, align 8, !tbaa !44
  %930 = fmul fast float %929, %929
  %931 = fadd fast float %928, %930
  %932 = fcmp fast ogt float %931, 0x38AA95A5C0000000
  br i1 %932, label %933, label %940

933:                                              ; preds = %923
  %934 = call fast float @llvm.sqrt.f32(float %931)
  %935 = fdiv fast float 1.000000e+00, %934
  %936 = insertelement <2 x float> poison, float %935, i64 0
  %937 = shufflevector <2 x float> %936, <2 x float> poison, <2 x i32> zeroinitializer
  %938 = fmul fast <2 x float> %937, %924
  %939 = fmul fast float %935, %929
  br label %940

940:                                              ; preds = %933, %923
  %941 = phi float [ %939, %933 ], [ 0.000000e+00, %923 ]
  %942 = phi <2 x float> [ %938, %933 ], [ zeroinitializer, %923 ]
  store <2 x float> %942, ptr %31, align 8
  store float %941, ptr %783, align 8
  %943 = load <2 x float>, ptr %32, align 8, !tbaa !44
  %944 = fmul fast <2 x float> %943, %943
  %945 = shufflevector <2 x float> %944, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %946 = fadd fast <2 x float> %945, %944
  %947 = extractelement <2 x float> %946, i64 0
  %948 = load float, ptr %784, align 8, !tbaa !44
  %949 = fmul fast float %948, %948
  %950 = fadd fast float %947, %949
  %951 = fcmp fast ogt float %950, 0x38AA95A5C0000000
  br i1 %951, label %952, label %959

952:                                              ; preds = %940
  %953 = call fast float @llvm.sqrt.f32(float %950)
  %954 = fdiv fast float 1.000000e+00, %953
  %955 = insertelement <2 x float> poison, float %954, i64 0
  %956 = shufflevector <2 x float> %955, <2 x float> poison, <2 x i32> zeroinitializer
  %957 = fmul fast <2 x float> %956, %943
  %958 = fmul fast float %954, %948
  br label %959

959:                                              ; preds = %952, %940
  %960 = phi float [ %958, %952 ], [ 0.000000e+00, %940 ]
  %961 = phi <2 x float> [ %957, %952 ], [ zeroinitializer, %940 ]
  store <2 x float> %961, ptr %32, align 8
  store float %960, ptr %784, align 8
  br label %962

962:                                              ; preds = %959, %922
  %963 = call fast nofpclass(nan inf) float @angle_normalized_v3v3(ptr noundef nonnull %31, ptr noundef nonnull %32) #13
  %964 = fmul fast float %963, 0x404CA5DC20000000
  %965 = select fast i1 %761, float %963, float %964
  %966 = fpext float %965 to double
  %967 = call i64 (ptr, i64, ptr, ...) @BLI_snprintf(ptr noundef nonnull %18, i64 noundef 32, ptr noundef nonnull @.str.6, double noundef nofpclass(nan inf) %966) #13
  %968 = load ptr, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  %969 = icmp eq ptr %968, null
  br i1 %969, label %970, label %972

970:                                              ; preds = %962
  %971 = call ptr @BLI_memarena_new(i64 noundef 16376, ptr noundef nonnull @__func__.view3d_cached_text_draw_add) #13
  store ptr %971, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  br label %972

972:                                              ; preds = %970, %962
  %973 = phi ptr [ %971, %970 ], [ %968, %962 ]
  %974 = shl i64 %967, 32
  %975 = add i64 %974, 4294967296
  %976 = ashr exact i64 %975, 32
  %977 = add nsw i64 %976, 40
  %978 = call ptr @BLI_memarena_alloc(ptr noundef %973, i64 noundef %977) #13
  %979 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %980 = sext i32 %979 to i64
  %981 = getelementptr inbounds [3 x ptr], ptr @g_v3d_strings, i64 0, i64 %980
  %982 = load ptr, ptr %981, align 8, !tbaa !49
  store ptr %982, ptr %978, align 8, !tbaa !49
  store ptr %978, ptr %981, align 8, !tbaa !49
  %983 = getelementptr inbounds %struct.ViewCachedString, ptr %978, i64 0, i32 1
  %984 = load <2 x float>, ptr %16, align 8, !tbaa !44
  store <2 x float> %984, ptr %983, align 4, !tbaa !44
  %985 = load float, ptr %787, align 8, !tbaa !44
  %986 = getelementptr inbounds %struct.ViewCachedString, ptr %978, i64 0, i32 1, i64 2
  store float %985, ptr %986, align 4, !tbaa !44
  %987 = getelementptr inbounds %struct.ViewCachedString, ptr %978, i64 0, i32 2
  %988 = load <4 x i8>, ptr %19, align 4, !tbaa !50
  store <4 x i8> %988, ptr %987, align 1, !tbaa !50
  %989 = getelementptr inbounds %struct.ViewCachedString, ptr %978, i64 0, i32 4
  store i16 0, ptr %989, align 4, !tbaa !51
  %990 = getelementptr inbounds %struct.ViewCachedString, ptr %978, i64 0, i32 5
  store i16 %554, ptr %990, align 2, !tbaa !51
  %991 = trunc i64 %967 to i32
  %992 = getelementptr inbounds %struct.ViewCachedString, ptr %978, i64 0, i32 6
  store i32 %991, ptr %992, align 8, !tbaa !47
  %993 = getelementptr inbounds %struct.ViewCachedString, ptr %978, i64 0, i32 7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 4 %993, ptr nonnull align 16 %18, i64 %976, i1 false)
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %32) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %31) #13
  br label %994

994:                                              ; preds = %972, %883
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %30) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %29) #13
  br label %995

995:                                              ; preds = %994, %845, %797, %788
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %28) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %27) #13
  %996 = load ptr, ptr %769, align 8, !tbaa !520
  %997 = call ptr %996(ptr noundef nonnull %21) #13
  %998 = icmp eq ptr %997, null
  br i1 %998, label %999, label %788, !llvm.loop !539

999:                                              ; preds = %995, %765, %754
  %1000 = load i32, ptr %571, align 8, !tbaa !481
  %1001 = and i32 %1000, 2048
  %1002 = icmp eq i32 %1001, 0
  br i1 %1002, label %1225, label %1003

1003:                                             ; preds = %999
  call void @UI_GetThemeColor3ubv(i32 noundef 137, ptr noundef nonnull %19) #13
  %1004 = icmp eq ptr %575, null
  br i1 %1004, label %1007, label %1005

1005:                                             ; preds = %1003
  %1006 = load ptr, ptr %4, align 8, !tbaa !450
  call void @BM_mesh_elem_index_ensure(ptr noundef %1006, i8 noundef zeroext 1) #13
  br label %1007

1007:                                             ; preds = %1005, %1003
  store <2 x float> zeroinitializer, ptr %16, align 8, !tbaa !44
  %1008 = getelementptr inbounds float, ptr %16, i64 2
  store float 0.000000e+00, ptr %1008, align 8, !tbaa !44
  %1009 = getelementptr inbounds %struct.BMEditMesh, ptr %4, i64 0, i32 4
  %1010 = load i32, ptr %1009, align 8, !tbaa !540
  %1011 = icmp sgt i32 %1010, 0
  br i1 %1011, label %1012, label %1225

1012:                                             ; preds = %1007
  %1013 = getelementptr inbounds %struct.BMEditMesh, ptr %4, i64 0, i32 3
  %1014 = getelementptr inbounds %struct.DerivedMesh, ptr %575, i64 0, i32 76
  %1015 = getelementptr inbounds float, ptr %13, i64 2
  %1016 = getelementptr inbounds float, ptr %14, i64 2
  %1017 = getelementptr inbounds float, ptr %15, i64 2
  %1018 = icmp eq i8 %566, 0
  %1019 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 47
  br label %1020

1020:                                             ; preds = %1162, %1012
  %1021 = phi i64 [ 0, %1012 ], [ %1165, %1162 ]
  %1022 = phi float [ 0.000000e+00, %1012 ], [ %1164, %1162 ]
  %1023 = phi i32 [ 0, %1012 ], [ %1160, %1162 ]
  %1024 = phi ptr [ null, %1012 ], [ %1095, %1162 ]
  %1025 = load ptr, ptr %1013, align 8, !tbaa !541
  %1026 = getelementptr inbounds [3 x ptr], ptr %1025, i64 %1021
  %1027 = icmp eq ptr %1024, null
  %1028 = load ptr, ptr %1026, align 8, !tbaa !49
  br i1 %1027, label %1090, label %1029

1029:                                             ; preds = %1020
  %1030 = getelementptr inbounds %struct.BMLoop, ptr %1028, i64 0, i32 3
  %1031 = load ptr, ptr %1030, align 8, !tbaa !538
  %1032 = icmp eq ptr %1031, %1024
  br i1 %1032, label %1090, label %1033

1033:                                             ; preds = %1029
  %1034 = getelementptr i8, ptr %1024, i64 13
  %1035 = load i8, ptr %1034, align 1, !tbaa !522
  %1036 = and i8 %1035, 1
  %1037 = icmp eq i8 %1036, 0
  br i1 %1037, label %1088, label %1038

1038:                                             ; preds = %1033
  %1039 = sitofp i32 %1023 to float
  %1040 = fdiv fast float 1.000000e+00, %1039
  %1041 = load <2 x float>, ptr %16, align 8, !tbaa !44
  %1042 = insertelement <2 x float> poison, float %1040, i64 0
  %1043 = shufflevector <2 x float> %1042, <2 x float> poison, <2 x i32> zeroinitializer
  %1044 = fmul fast <2 x float> %1041, %1043
  store <2 x float> %1044, ptr %16, align 8, !tbaa !44
  %1045 = load float, ptr %1008, align 8, !tbaa !44
  %1046 = fmul fast float %1045, %1040
  store float %1046, ptr %1008, align 8, !tbaa !44
  %1047 = load i8, ptr %551, align 4, !tbaa !509
  %1048 = icmp eq i8 %1047, 0
  br i1 %1048, label %1056, label %1049

1049:                                             ; preds = %1038
  %1050 = load float, ptr %550, align 4, !tbaa !530
  %1051 = fmul fast float %1050, %1050
  %1052 = fmul fast float %1051, %1022
  %1053 = fpext float %1052 to double
  %1054 = zext i8 %1047 to i32
  %1055 = call i64 @bUnit_AsString(ptr noundef nonnull %18, i32 noundef 32, double noundef nofpclass(nan inf) %1053, i32 noundef 3, i32 noundef %1054, i32 noundef 2, i8 noundef zeroext %562, i8 noundef zeroext 0) #13
  br label %1059

1056:                                             ; preds = %1038
  %1057 = fpext float %1022 to double
  %1058 = call i64 (ptr, i64, ptr, ...) @BLI_snprintf(ptr noundef nonnull %18, i64 noundef 32, ptr noundef nonnull %585, double noundef nofpclass(nan inf) %1057) #13
  br label %1059

1059:                                             ; preds = %1056, %1049
  %1060 = phi i64 [ %1055, %1049 ], [ %1058, %1056 ]
  %1061 = load ptr, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  %1062 = icmp eq ptr %1061, null
  br i1 %1062, label %1063, label %1065

1063:                                             ; preds = %1059
  %1064 = call ptr @BLI_memarena_new(i64 noundef 16376, ptr noundef nonnull @__func__.view3d_cached_text_draw_add) #13
  store ptr %1064, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  br label %1065

1065:                                             ; preds = %1063, %1059
  %1066 = phi ptr [ %1064, %1063 ], [ %1061, %1059 ]
  %1067 = shl i64 %1060, 32
  %1068 = add i64 %1067, 4294967296
  %1069 = ashr exact i64 %1068, 32
  %1070 = add nsw i64 %1069, 40
  %1071 = call ptr @BLI_memarena_alloc(ptr noundef %1066, i64 noundef %1070) #13
  %1072 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %1073 = sext i32 %1072 to i64
  %1074 = getelementptr inbounds [3 x ptr], ptr @g_v3d_strings, i64 0, i64 %1073
  %1075 = load ptr, ptr %1074, align 8, !tbaa !49
  store ptr %1075, ptr %1071, align 8, !tbaa !49
  store ptr %1071, ptr %1074, align 8, !tbaa !49
  %1076 = getelementptr inbounds %struct.ViewCachedString, ptr %1071, i64 0, i32 1
  %1077 = load <2 x float>, ptr %16, align 8, !tbaa !44
  store <2 x float> %1077, ptr %1076, align 4, !tbaa !44
  %1078 = load float, ptr %1008, align 8, !tbaa !44
  %1079 = getelementptr inbounds %struct.ViewCachedString, ptr %1071, i64 0, i32 1, i64 2
  store float %1078, ptr %1079, align 4, !tbaa !44
  %1080 = getelementptr inbounds %struct.ViewCachedString, ptr %1071, i64 0, i32 2
  %1081 = load <4 x i8>, ptr %19, align 4, !tbaa !50
  store <4 x i8> %1081, ptr %1080, align 1, !tbaa !50
  %1082 = getelementptr inbounds %struct.ViewCachedString, ptr %1071, i64 0, i32 4
  store i16 0, ptr %1082, align 4, !tbaa !51
  %1083 = getelementptr inbounds %struct.ViewCachedString, ptr %1071, i64 0, i32 5
  store i16 %554, ptr %1083, align 2, !tbaa !51
  %1084 = trunc i64 %1060 to i32
  %1085 = getelementptr inbounds %struct.ViewCachedString, ptr %1071, i64 0, i32 6
  store i32 %1084, ptr %1085, align 8, !tbaa !47
  %1086 = getelementptr inbounds %struct.ViewCachedString, ptr %1071, i64 0, i32 7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 4 %1086, ptr nonnull align 16 %18, i64 %1069, i1 false)
  %1087 = load ptr, ptr %1026, align 8, !tbaa !49
  br label %1088

1088:                                             ; preds = %1065, %1033
  %1089 = phi ptr [ %1087, %1065 ], [ %1028, %1033 ]
  store <2 x float> zeroinitializer, ptr %16, align 8, !tbaa !44
  store float 0.000000e+00, ptr %1008, align 8, !tbaa !44
  br label %1090

1090:                                             ; preds = %1088, %1029, %1020
  %1091 = phi ptr [ %1089, %1088 ], [ %1028, %1029 ], [ %1028, %1020 ]
  %1092 = phi i32 [ 0, %1088 ], [ %1023, %1029 ], [ %1023, %1020 ]
  %1093 = phi float [ 0.000000e+00, %1088 ], [ %1022, %1029 ], [ %1022, %1020 ]
  %1094 = getelementptr inbounds %struct.BMLoop, ptr %1091, i64 0, i32 3
  %1095 = load ptr, ptr %1094, align 8, !tbaa !538
  br i1 %1004, label %1122, label %1096

1096:                                             ; preds = %1090
  %1097 = load ptr, ptr %1014, align 8, !tbaa !528
  %1098 = getelementptr inbounds %struct.BMLoop, ptr %1091, i64 0, i32 1
  %1099 = load ptr, ptr %1098, align 8, !tbaa !535
  %1100 = getelementptr i8, ptr %1099, i64 8
  %1101 = load i32, ptr %1100, align 8, !tbaa !529
  call void %1097(ptr noundef nonnull %575, i32 noundef %1101, ptr noundef nonnull %13) #13
  %1102 = load ptr, ptr %1014, align 8, !tbaa !528
  %1103 = getelementptr inbounds ptr, ptr %1026, i64 1
  %1104 = load ptr, ptr %1103, align 8, !tbaa !49
  %1105 = getelementptr inbounds %struct.BMLoop, ptr %1104, i64 0, i32 1
  %1106 = load ptr, ptr %1105, align 8, !tbaa !535
  %1107 = getelementptr i8, ptr %1106, i64 8
  %1108 = load i32, ptr %1107, align 8, !tbaa !529
  call void %1102(ptr noundef nonnull %575, i32 noundef %1108, ptr noundef nonnull %14) #13
  %1109 = load ptr, ptr %1014, align 8, !tbaa !528
  %1110 = getelementptr inbounds ptr, ptr %1026, i64 2
  %1111 = load ptr, ptr %1110, align 8, !tbaa !49
  %1112 = getelementptr inbounds %struct.BMLoop, ptr %1111, i64 0, i32 1
  %1113 = load ptr, ptr %1112, align 8, !tbaa !535
  %1114 = getelementptr i8, ptr %1113, i64 8
  %1115 = load i32, ptr %1114, align 8, !tbaa !529
  call void %1109(ptr noundef nonnull %575, i32 noundef %1115, ptr noundef nonnull %15) #13
  %1116 = load float, ptr %1015, align 8, !tbaa !44
  %1117 = load float, ptr %1016, align 8, !tbaa !44
  %1118 = load <2 x float>, ptr %13, align 8, !tbaa !44
  %1119 = load <2 x float>, ptr %14, align 8, !tbaa !44
  %1120 = load <2 x float>, ptr %15, align 8, !tbaa !44
  %1121 = load float, ptr %1017, align 8, !tbaa !44
  br label %1145

1122:                                             ; preds = %1090
  %1123 = getelementptr inbounds %struct.BMLoop, ptr %1091, i64 0, i32 1
  %1124 = load ptr, ptr %1123, align 8, !tbaa !535
  %1125 = getelementptr inbounds %struct.BMVert, ptr %1124, i64 0, i32 2
  %1126 = getelementptr inbounds %struct.BMVert, ptr %1124, i64 0, i32 2, i64 2
  %1127 = load float, ptr %1126, align 4, !tbaa !44
  store float %1127, ptr %1015, align 8, !tbaa !44
  %1128 = getelementptr inbounds ptr, ptr %1026, i64 1
  %1129 = load ptr, ptr %1128, align 8, !tbaa !49
  %1130 = getelementptr inbounds %struct.BMLoop, ptr %1129, i64 0, i32 1
  %1131 = load ptr, ptr %1130, align 8, !tbaa !535
  %1132 = getelementptr inbounds %struct.BMVert, ptr %1131, i64 0, i32 2
  %1133 = getelementptr inbounds %struct.BMVert, ptr %1131, i64 0, i32 2, i64 2
  %1134 = load float, ptr %1133, align 4, !tbaa !44
  store float %1134, ptr %1016, align 8, !tbaa !44
  %1135 = getelementptr inbounds ptr, ptr %1026, i64 2
  %1136 = load ptr, ptr %1135, align 8, !tbaa !49
  %1137 = getelementptr inbounds %struct.BMLoop, ptr %1136, i64 0, i32 1
  %1138 = load ptr, ptr %1137, align 8, !tbaa !535
  %1139 = getelementptr inbounds %struct.BMVert, ptr %1138, i64 0, i32 2
  %1140 = load <2 x float>, ptr %1125, align 4, !tbaa !44
  store <2 x float> %1140, ptr %13, align 8, !tbaa !44
  %1141 = load <2 x float>, ptr %1132, align 4, !tbaa !44
  store <2 x float> %1141, ptr %14, align 8, !tbaa !44
  %1142 = load <2 x float>, ptr %1139, align 4, !tbaa !44
  store <2 x float> %1142, ptr %15, align 8, !tbaa !44
  %1143 = getelementptr inbounds %struct.BMVert, ptr %1138, i64 0, i32 2, i64 2
  %1144 = load float, ptr %1143, align 4, !tbaa !44
  store float %1144, ptr %1017, align 8, !tbaa !44
  br label %1145

1145:                                             ; preds = %1122, %1096
  %1146 = phi float [ %1144, %1122 ], [ %1121, %1096 ]
  %1147 = phi float [ %1134, %1122 ], [ %1117, %1096 ]
  %1148 = phi float [ %1127, %1122 ], [ %1116, %1096 ]
  %1149 = phi <2 x float> [ %1141, %1122 ], [ %1119, %1096 ]
  %1150 = phi <2 x float> [ %1142, %1122 ], [ %1120, %1096 ]
  %1151 = phi <2 x float> [ %1140, %1122 ], [ %1118, %1096 ]
  %1152 = load float, ptr %1008, align 8, !tbaa !44
  %1153 = fadd fast <2 x float> %1149, %1150
  %1154 = load <2 x float>, ptr %16, align 8, !tbaa !44
  %1155 = fadd fast <2 x float> %1153, %1151
  %1156 = fadd fast <2 x float> %1155, %1154
  store <2 x float> %1156, ptr %16, align 8, !tbaa !44
  %1157 = fadd fast float %1147, %1146
  %1158 = fadd fast float %1157, %1148
  %1159 = fadd fast float %1158, %1152
  store float %1159, ptr %1008, align 8, !tbaa !44
  %1160 = add nsw i32 %1092, 3
  br i1 %1018, label %1162, label %1161

1161:                                             ; preds = %1145
  call void @mul_mat3_m4_v3(ptr noundef nonnull %1019, ptr noundef nonnull %13) #13
  call void @mul_mat3_m4_v3(ptr noundef nonnull %1019, ptr noundef nonnull %14) #13
  call void @mul_mat3_m4_v3(ptr noundef nonnull %1019, ptr noundef nonnull %15) #13
  br label %1162

1162:                                             ; preds = %1161, %1145
  %1163 = call fast nofpclass(nan inf) float @area_tri_v3(ptr noundef nonnull %13, ptr noundef nonnull %14, ptr noundef nonnull %15) #13
  %1164 = fadd fast float %1163, %1093
  %1165 = add nuw nsw i64 %1021, 1
  %1166 = load i32, ptr %1009, align 8, !tbaa !540
  %1167 = sext i32 %1166 to i64
  %1168 = icmp slt i64 %1165, %1167
  br i1 %1168, label %1020, label %1169, !llvm.loop !542

1169:                                             ; preds = %1162
  %1170 = sitofp i32 %1160 to float
  %1171 = icmp eq ptr %1095, null
  br i1 %1171, label %1225, label %1172

1172:                                             ; preds = %1169
  %1173 = getelementptr i8, ptr %1095, i64 13
  %1174 = load i8, ptr %1173, align 1, !tbaa !522
  %1175 = and i8 %1174, 1
  %1176 = icmp eq i8 %1175, 0
  br i1 %1176, label %1225, label %1177

1177:                                             ; preds = %1172
  %1178 = fdiv fast float 1.000000e+00, %1170
  %1179 = load <2 x float>, ptr %16, align 8, !tbaa !44
  %1180 = insertelement <2 x float> poison, float %1178, i64 0
  %1181 = shufflevector <2 x float> %1180, <2 x float> poison, <2 x i32> zeroinitializer
  %1182 = fmul fast <2 x float> %1179, %1181
  store <2 x float> %1182, ptr %16, align 8, !tbaa !44
  %1183 = load float, ptr %1008, align 8, !tbaa !44
  %1184 = fmul fast float %1183, %1178
  store float %1184, ptr %1008, align 8, !tbaa !44
  %1185 = load i8, ptr %551, align 4, !tbaa !509
  %1186 = icmp eq i8 %1185, 0
  br i1 %1186, label %1194, label %1187

1187:                                             ; preds = %1177
  %1188 = load float, ptr %550, align 4, !tbaa !530
  %1189 = fmul fast float %1188, %1188
  %1190 = fmul fast float %1189, %1164
  %1191 = fpext float %1190 to double
  %1192 = zext i8 %1185 to i32
  %1193 = call i64 @bUnit_AsString(ptr noundef nonnull %18, i32 noundef 32, double noundef nofpclass(nan inf) %1191, i32 noundef 3, i32 noundef %1192, i32 noundef 2, i8 noundef zeroext %562, i8 noundef zeroext 0) #13
  br label %1197

1194:                                             ; preds = %1177
  %1195 = fpext float %1164 to double
  %1196 = call i64 (ptr, i64, ptr, ...) @BLI_snprintf(ptr noundef nonnull %18, i64 noundef 32, ptr noundef nonnull %585, double noundef nofpclass(nan inf) %1195) #13
  br label %1197

1197:                                             ; preds = %1194, %1187
  %1198 = phi i64 [ %1193, %1187 ], [ %1196, %1194 ]
  %1199 = load ptr, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  %1200 = icmp eq ptr %1199, null
  br i1 %1200, label %1201, label %1203

1201:                                             ; preds = %1197
  %1202 = call ptr @BLI_memarena_new(i64 noundef 16376, ptr noundef nonnull @__func__.view3d_cached_text_draw_add) #13
  store ptr %1202, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  br label %1203

1203:                                             ; preds = %1201, %1197
  %1204 = phi ptr [ %1202, %1201 ], [ %1199, %1197 ]
  %1205 = shl i64 %1198, 32
  %1206 = add i64 %1205, 4294967296
  %1207 = ashr exact i64 %1206, 32
  %1208 = add nsw i64 %1207, 40
  %1209 = call ptr @BLI_memarena_alloc(ptr noundef %1204, i64 noundef %1208) #13
  %1210 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %1211 = sext i32 %1210 to i64
  %1212 = getelementptr inbounds [3 x ptr], ptr @g_v3d_strings, i64 0, i64 %1211
  %1213 = load ptr, ptr %1212, align 8, !tbaa !49
  store ptr %1213, ptr %1209, align 8, !tbaa !49
  store ptr %1209, ptr %1212, align 8, !tbaa !49
  %1214 = getelementptr inbounds %struct.ViewCachedString, ptr %1209, i64 0, i32 1
  %1215 = load <2 x float>, ptr %16, align 8, !tbaa !44
  store <2 x float> %1215, ptr %1214, align 4, !tbaa !44
  %1216 = load float, ptr %1008, align 8, !tbaa !44
  %1217 = getelementptr inbounds %struct.ViewCachedString, ptr %1209, i64 0, i32 1, i64 2
  store float %1216, ptr %1217, align 4, !tbaa !44
  %1218 = getelementptr inbounds %struct.ViewCachedString, ptr %1209, i64 0, i32 2
  %1219 = load <4 x i8>, ptr %19, align 4, !tbaa !50
  store <4 x i8> %1219, ptr %1218, align 1, !tbaa !50
  %1220 = getelementptr inbounds %struct.ViewCachedString, ptr %1209, i64 0, i32 4
  store i16 0, ptr %1220, align 4, !tbaa !51
  %1221 = getelementptr inbounds %struct.ViewCachedString, ptr %1209, i64 0, i32 5
  store i16 %554, ptr %1221, align 2, !tbaa !51
  %1222 = trunc i64 %1198 to i32
  %1223 = getelementptr inbounds %struct.ViewCachedString, ptr %1209, i64 0, i32 6
  store i32 %1222, ptr %1223, align 8, !tbaa !47
  %1224 = getelementptr inbounds %struct.ViewCachedString, ptr %1209, i64 0, i32 7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 4 %1224, ptr nonnull align 16 %18, i64 %1207, i1 false)
  br label %1225

1225:                                             ; preds = %1203, %1172, %1169, %1007, %999
  %1226 = load i32, ptr %571, align 8, !tbaa !481
  %1227 = and i32 %1226, 4096
  %1228 = icmp eq i32 %1227, 0
  br i1 %1228, label %1408, label %1229

1229:                                             ; preds = %1225
  %1230 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 38, i32 2
  %1231 = load i8, ptr %1230, align 1, !tbaa !532
  %1232 = icmp eq i8 %1231, 2
  call void @UI_GetThemeColor3ubv(i32 noundef 138, ptr noundef nonnull %19) #13
  %1233 = icmp eq ptr %575, null
  br i1 %1233, label %1236, label %1234

1234:                                             ; preds = %1229
  %1235 = load ptr, ptr %4, align 8, !tbaa !450
  call void @BM_mesh_elem_index_ensure(ptr noundef %1235, i8 noundef zeroext 1) #13
  br label %1236

1236:                                             ; preds = %1234, %1229
  %1237 = load ptr, ptr %4, align 8, !tbaa !450
  %1238 = getelementptr inbounds %struct.BMIter, ptr %21, i64 0, i32 4
  store i8 3, ptr %1238, align 4, !tbaa !517
  %1239 = getelementptr inbounds %struct.BMIter, ptr %21, i64 0, i32 1
  store ptr @bmiter__elem_of_mesh_begin, ptr %1239, align 8, !tbaa !519
  %1240 = getelementptr inbounds %struct.BMIter, ptr %21, i64 0, i32 2
  store ptr @bmiter__elem_of_mesh_step, ptr %1240, align 8, !tbaa !520
  %1241 = getelementptr inbounds %struct.BMesh, ptr %1237, i64 0, i32 12
  %1242 = load ptr, ptr %1241, align 8, !tbaa !543
  store ptr %1242, ptr %21, align 8, !tbaa !50
  call void @bmiter__elem_of_mesh_begin(ptr noundef nonnull %21) #13
  %1243 = load ptr, ptr %1240, align 8, !tbaa !520
  %1244 = call ptr %1243(ptr noundef nonnull %21) #13
  %1245 = icmp eq ptr %1244, null
  br i1 %1245, label %1408, label %1246

1246:                                             ; preds = %1236
  %1247 = icmp ne i8 %570, 0
  %1248 = getelementptr inbounds %struct.BMIter, ptr %33, i64 0, i32 4
  %1249 = getelementptr inbounds %struct.BMIter, ptr %33, i64 0, i32 1
  %1250 = getelementptr inbounds %struct.BMIter, ptr %33, i64 0, i32 2
  %1251 = getelementptr inbounds float, ptr %16, i64 2
  %1252 = getelementptr inbounds %struct.DerivedMesh, ptr %575, i64 0, i32 76
  %1253 = getelementptr inbounds float, ptr %35, i64 2
  %1254 = getelementptr inbounds float, ptr %13, i64 2
  %1255 = getelementptr inbounds float, ptr %14, i64 2
  %1256 = getelementptr inbounds float, ptr %15, i64 2
  %1257 = getelementptr inbounds float, ptr %34, i64 2
  %1258 = icmp eq i8 %566, 0
  %1259 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 47
  %1260 = getelementptr inbounds float, ptr %17, i64 2
  br label %1261

1261:                                             ; preds = %1404, %1246
  %1262 = phi ptr [ %1244, %1246 ], [ %1406, %1404 ]
  %1263 = getelementptr i8, ptr %1262, i64 13
  %1264 = load i8, ptr %1263, align 1, !tbaa !522
  %1265 = and i8 %1264, 1
  %1266 = icmp ne i8 %1265, 0
  %1267 = select i1 %1266, i1 true, i1 %1247
  br i1 %1267, label %1268, label %1404

1268:                                             ; preds = %1261
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %33) #13
  store i8 11, ptr %1248, align 4, !tbaa !517
  store ptr @bmiter__loop_of_face_begin, ptr %1249, align 8, !tbaa !519
  store ptr @bmiter__loop_of_face_step, ptr %1250, align 8, !tbaa !520
  store ptr %1262, ptr %33, align 8, !tbaa !50
  call void @bmiter__loop_of_face_begin(ptr noundef nonnull %33) #13
  %1269 = load ptr, ptr %1250, align 8, !tbaa !520
  %1270 = call ptr %1269(ptr noundef nonnull %33) #13
  %1271 = icmp eq ptr %1270, null
  br i1 %1271, label %1403, label %1272

1272:                                             ; preds = %1268
  %1273 = getelementptr inbounds %struct.BMFace, ptr %1262, i64 0, i32 2
  %1274 = getelementptr inbounds %struct.BMFace, ptr %1262, i64 0, i32 3
  br label %1275

1275:                                             ; preds = %1398, %1272
  %1276 = phi i8 [ 1, %1272 ], [ %1399, %1398 ]
  %1277 = phi ptr [ %1270, %1272 ], [ %1401, %1398 ]
  br i1 %1266, label %1286, label %1278

1278:                                             ; preds = %1275
  br i1 %1247, label %1279, label %1398

1279:                                             ; preds = %1278
  %1280 = getelementptr inbounds %struct.BMLoop, ptr %1277, i64 0, i32 1
  %1281 = load ptr, ptr %1280, align 8, !tbaa !535
  %1282 = getelementptr i8, ptr %1281, i64 13
  %1283 = load i8, ptr %1282, align 1, !tbaa !522
  %1284 = and i8 %1283, 1
  %1285 = icmp eq i8 %1284, 0
  br i1 %1285, label %1398, label %1286

1286:                                             ; preds = %1279, %1275
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %34) #13
  %1287 = icmp eq i8 %1276, 0
  br i1 %1287, label %1316, label %1288

1288:                                             ; preds = %1286
  br i1 %1233, label %1315, label %1289

1289:                                             ; preds = %1288
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %35) #13
  store <2 x float> zeroinitializer, ptr %16, align 8, !tbaa !44
  store float 0.000000e+00, ptr %1251, align 8, !tbaa !44
  %1290 = load ptr, ptr %1273, align 8, !tbaa !544
  br label %1291

1291:                                             ; preds = %1291, %1289
  %1292 = phi ptr [ %1290, %1289 ], [ %1305, %1291 ]
  %1293 = load ptr, ptr %1252, align 8, !tbaa !528
  %1294 = getelementptr inbounds %struct.BMLoop, ptr %1292, i64 0, i32 1
  %1295 = load ptr, ptr %1294, align 8, !tbaa !535
  %1296 = getelementptr i8, ptr %1295, i64 8
  %1297 = load i32, ptr %1296, align 8, !tbaa !529
  call void %1293(ptr noundef nonnull %575, i32 noundef %1297, ptr noundef nonnull %35) #13
  %1298 = load <2 x float>, ptr %35, align 8, !tbaa !44
  %1299 = load <2 x float>, ptr %16, align 8, !tbaa !44
  %1300 = fadd fast <2 x float> %1299, %1298
  store <2 x float> %1300, ptr %16, align 8, !tbaa !44
  %1301 = load float, ptr %1253, align 8, !tbaa !44
  %1302 = load float, ptr %1251, align 8, !tbaa !44
  %1303 = fadd fast float %1302, %1301
  store float %1303, ptr %1251, align 8, !tbaa !44
  %1304 = getelementptr inbounds %struct.BMLoop, ptr %1292, i64 0, i32 6
  %1305 = load ptr, ptr %1304, align 8, !tbaa !533
  %1306 = icmp eq ptr %1305, %1290
  br i1 %1306, label %1307, label %1291, !llvm.loop !546

1307:                                             ; preds = %1291
  %1308 = load i32, ptr %1274, align 8, !tbaa !547
  %1309 = sitofp i32 %1308 to float
  %1310 = fdiv fast float 1.000000e+00, %1309
  %1311 = insertelement <2 x float> poison, float %1310, i64 0
  %1312 = shufflevector <2 x float> %1311, <2 x float> poison, <2 x i32> zeroinitializer
  %1313 = fmul fast <2 x float> %1312, %1300
  store <2 x float> %1313, ptr %16, align 8, !tbaa !44
  %1314 = fmul fast float %1310, %1303
  store float %1314, ptr %1251, align 8, !tbaa !44
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %35) #13
  br label %1317

1315:                                             ; preds = %1288
  call void @BM_face_calc_center_bounds(ptr noundef nonnull %1262, ptr noundef nonnull %16) #13
  br label %1339

1316:                                             ; preds = %1286
  br i1 %1233, label %1339, label %1317

1317:                                             ; preds = %1316, %1307
  %1318 = load ptr, ptr %1252, align 8, !tbaa !528
  %1319 = getelementptr inbounds %struct.BMLoop, ptr %1277, i64 0, i32 7
  %1320 = load ptr, ptr %1319, align 8, !tbaa !536
  %1321 = getelementptr inbounds %struct.BMLoop, ptr %1320, i64 0, i32 1
  %1322 = load ptr, ptr %1321, align 8, !tbaa !535
  %1323 = getelementptr i8, ptr %1322, i64 8
  %1324 = load i32, ptr %1323, align 8, !tbaa !529
  call void %1318(ptr noundef nonnull %575, i32 noundef %1324, ptr noundef nonnull %13) #13
  %1325 = load ptr, ptr %1252, align 8, !tbaa !528
  %1326 = getelementptr inbounds %struct.BMLoop, ptr %1277, i64 0, i32 1
  %1327 = load ptr, ptr %1326, align 8, !tbaa !535
  %1328 = getelementptr i8, ptr %1327, i64 8
  %1329 = load i32, ptr %1328, align 8, !tbaa !529
  call void %1325(ptr noundef nonnull %575, i32 noundef %1329, ptr noundef nonnull %14) #13
  %1330 = load ptr, ptr %1252, align 8, !tbaa !528
  %1331 = getelementptr inbounds %struct.BMLoop, ptr %1277, i64 0, i32 6
  %1332 = load ptr, ptr %1331, align 8, !tbaa !533
  %1333 = getelementptr inbounds %struct.BMLoop, ptr %1332, i64 0, i32 1
  %1334 = load ptr, ptr %1333, align 8, !tbaa !535
  %1335 = getelementptr i8, ptr %1334, i64 8
  %1336 = load i32, ptr %1335, align 8, !tbaa !529
  call void %1330(ptr noundef nonnull %575, i32 noundef %1336, ptr noundef nonnull %15) #13
  %1337 = load <2 x float>, ptr %14, align 8, !tbaa !44
  %1338 = load float, ptr %1255, align 8, !tbaa !44
  br label %1362

1339:                                             ; preds = %1316, %1315
  %1340 = getelementptr inbounds %struct.BMLoop, ptr %1277, i64 0, i32 7
  %1341 = load ptr, ptr %1340, align 8, !tbaa !536
  %1342 = getelementptr inbounds %struct.BMLoop, ptr %1341, i64 0, i32 1
  %1343 = load ptr, ptr %1342, align 8, !tbaa !535
  %1344 = getelementptr inbounds %struct.BMVert, ptr %1343, i64 0, i32 2
  %1345 = load <2 x float>, ptr %1344, align 4, !tbaa !44
  store <2 x float> %1345, ptr %13, align 8, !tbaa !44
  %1346 = getelementptr inbounds %struct.BMVert, ptr %1343, i64 0, i32 2, i64 2
  %1347 = load float, ptr %1346, align 4, !tbaa !44
  store float %1347, ptr %1254, align 8, !tbaa !44
  %1348 = getelementptr inbounds %struct.BMLoop, ptr %1277, i64 0, i32 1
  %1349 = load ptr, ptr %1348, align 8, !tbaa !535
  %1350 = getelementptr inbounds %struct.BMVert, ptr %1349, i64 0, i32 2
  %1351 = load <2 x float>, ptr %1350, align 4, !tbaa !44
  store <2 x float> %1351, ptr %14, align 8, !tbaa !44
  %1352 = getelementptr inbounds %struct.BMVert, ptr %1349, i64 0, i32 2, i64 2
  %1353 = load float, ptr %1352, align 4, !tbaa !44
  store float %1353, ptr %1255, align 8, !tbaa !44
  %1354 = getelementptr inbounds %struct.BMLoop, ptr %1277, i64 0, i32 6
  %1355 = load ptr, ptr %1354, align 8, !tbaa !533
  %1356 = getelementptr inbounds %struct.BMLoop, ptr %1355, i64 0, i32 1
  %1357 = load ptr, ptr %1356, align 8, !tbaa !535
  %1358 = getelementptr inbounds %struct.BMVert, ptr %1357, i64 0, i32 2
  %1359 = load <2 x float>, ptr %1358, align 4, !tbaa !44
  store <2 x float> %1359, ptr %15, align 8, !tbaa !44
  %1360 = getelementptr inbounds %struct.BMVert, ptr %1357, i64 0, i32 2, i64 2
  %1361 = load float, ptr %1360, align 4, !tbaa !44
  store float %1361, ptr %1256, align 8, !tbaa !44
  br label %1362

1362:                                             ; preds = %1339, %1317
  %1363 = phi float [ %1353, %1339 ], [ %1338, %1317 ]
  %1364 = phi <2 x float> [ %1351, %1339 ], [ %1337, %1317 ]
  store <2 x float> %1364, ptr %34, align 8, !tbaa !44
  store float %1363, ptr %1257, align 8, !tbaa !44
  br i1 %1258, label %1366, label %1365

1365:                                             ; preds = %1362
  call void @mul_mat3_m4_v3(ptr noundef nonnull %1259, ptr noundef nonnull %13) #13
  call void @mul_mat3_m4_v3(ptr noundef nonnull %1259, ptr noundef nonnull %14) #13
  call void @mul_mat3_m4_v3(ptr noundef nonnull %1259, ptr noundef nonnull %15) #13
  br label %1366

1366:                                             ; preds = %1365, %1362
  %1367 = call fast nofpclass(nan inf) float @angle_v3v3v3(ptr noundef nonnull %13, ptr noundef nonnull %14, ptr noundef nonnull %15) #13
  %1368 = fmul fast float %1367, 0x404CA5DC20000000
  %1369 = select fast i1 %1232, float %1367, float %1368
  %1370 = fpext float %1369 to double
  %1371 = call i64 (ptr, i64, ptr, ...) @BLI_snprintf(ptr noundef nonnull %18, i64 noundef 32, ptr noundef nonnull @.str.6, double noundef nofpclass(nan inf) %1370) #13
  call void @interp_v3_v3v3(ptr noundef nonnull %17, ptr noundef nonnull %16, ptr noundef nonnull %34, float noundef nofpclass(nan inf) 0x3FE99999A0000000) #13
  %1372 = load ptr, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  %1373 = icmp eq ptr %1372, null
  br i1 %1373, label %1374, label %1376

1374:                                             ; preds = %1366
  %1375 = call ptr @BLI_memarena_new(i64 noundef 16376, ptr noundef nonnull @__func__.view3d_cached_text_draw_add) #13
  store ptr %1375, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  br label %1376

1376:                                             ; preds = %1374, %1366
  %1377 = phi ptr [ %1375, %1374 ], [ %1372, %1366 ]
  %1378 = shl i64 %1371, 32
  %1379 = add i64 %1378, 4294967296
  %1380 = ashr exact i64 %1379, 32
  %1381 = add nsw i64 %1380, 40
  %1382 = call ptr @BLI_memarena_alloc(ptr noundef %1377, i64 noundef %1381) #13
  %1383 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %1384 = sext i32 %1383 to i64
  %1385 = getelementptr inbounds [3 x ptr], ptr @g_v3d_strings, i64 0, i64 %1384
  %1386 = load ptr, ptr %1385, align 8, !tbaa !49
  store ptr %1386, ptr %1382, align 8, !tbaa !49
  store ptr %1382, ptr %1385, align 8, !tbaa !49
  %1387 = getelementptr inbounds %struct.ViewCachedString, ptr %1382, i64 0, i32 1
  %1388 = load <2 x float>, ptr %17, align 8, !tbaa !44
  store <2 x float> %1388, ptr %1387, align 4, !tbaa !44
  %1389 = load float, ptr %1260, align 8, !tbaa !44
  %1390 = getelementptr inbounds %struct.ViewCachedString, ptr %1382, i64 0, i32 1, i64 2
  store float %1389, ptr %1390, align 4, !tbaa !44
  %1391 = getelementptr inbounds %struct.ViewCachedString, ptr %1382, i64 0, i32 2
  %1392 = load <4 x i8>, ptr %19, align 4, !tbaa !50
  store <4 x i8> %1392, ptr %1391, align 1, !tbaa !50
  %1393 = getelementptr inbounds %struct.ViewCachedString, ptr %1382, i64 0, i32 4
  store i16 0, ptr %1393, align 4, !tbaa !51
  %1394 = getelementptr inbounds %struct.ViewCachedString, ptr %1382, i64 0, i32 5
  store i16 %554, ptr %1394, align 2, !tbaa !51
  %1395 = trunc i64 %1371 to i32
  %1396 = getelementptr inbounds %struct.ViewCachedString, ptr %1382, i64 0, i32 6
  store i32 %1395, ptr %1396, align 8, !tbaa !47
  %1397 = getelementptr inbounds %struct.ViewCachedString, ptr %1382, i64 0, i32 7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 4 %1397, ptr nonnull align 16 %18, i64 %1380, i1 false)
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %34) #13
  br label %1398

1398:                                             ; preds = %1376, %1279, %1278
  %1399 = phi i8 [ 0, %1376 ], [ %1276, %1279 ], [ %1276, %1278 ]
  %1400 = load ptr, ptr %1250, align 8, !tbaa !520
  %1401 = call ptr %1400(ptr noundef nonnull %33) #13
  %1402 = icmp eq ptr %1401, null
  br i1 %1402, label %1403, label %1275, !llvm.loop !548

1403:                                             ; preds = %1398, %1268
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %33) #13
  br label %1404

1404:                                             ; preds = %1403, %1261
  %1405 = load ptr, ptr %1240, align 8, !tbaa !520
  %1406 = call ptr %1405(ptr noundef nonnull %21) #13
  %1407 = icmp eq ptr %1406, null
  br i1 %1407, label %1408, label %1261, !llvm.loop !549

1408:                                             ; preds = %1404, %1225, %1236
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %21) #13
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %20) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %19) #13
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %18) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %17) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %16) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %15) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %14) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %13) #13
  br label %1409

1409:                                             ; preds = %1408, %545, %541
  %1410 = load i32, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 16), align 4, !tbaa !550
  %1411 = and i32 %1410, 1
  %1412 = icmp eq i32 %1411, 0
  br i1 %1412, label %1598, label %1413

1413:                                             ; preds = %1409
  %1414 = load i32, ptr %85, align 8, !tbaa !481
  %1415 = and i32 %1414, 16384
  %1416 = icmp eq i32 %1415, 0
  br i1 %1416, label %1598, label %1417

1417:                                             ; preds = %1413
  %1418 = load i16, ptr %63, align 2, !tbaa !15
  %1419 = and i16 %1418, 4
  %1420 = icmp eq i16 %1419, 0
  br i1 %1420, label %1421, label %1598

1421:                                             ; preds = %1417
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %9) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %10) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #13
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %12) #13
  %1422 = load ptr, ptr %4, align 8, !tbaa !450
  %1423 = getelementptr inbounds %struct.BMEditMesh, ptr %4, i64 0, i32 12
  %1424 = load i16, ptr %1423, align 4, !tbaa !551
  %1425 = and i16 %1424, 1
  %1426 = icmp eq i16 %1425, 0
  br i1 %1426, label %1481, label %1427

1427:                                             ; preds = %1421
  call void @UI_GetThemeColor3ubv(i32 noundef 138, ptr noundef nonnull %11) #13
  %1428 = getelementptr inbounds %struct.BMIter, ptr %12, i64 0, i32 4
  store i8 1, ptr %1428, align 4, !tbaa !517
  %1429 = getelementptr inbounds %struct.BMIter, ptr %12, i64 0, i32 1
  store ptr @bmiter__elem_of_mesh_begin, ptr %1429, align 8, !tbaa !519
  %1430 = getelementptr inbounds %struct.BMIter, ptr %12, i64 0, i32 2
  store ptr @bmiter__elem_of_mesh_step, ptr %1430, align 8, !tbaa !520
  %1431 = getelementptr inbounds %struct.BMesh, ptr %1422, i64 0, i32 9
  %1432 = load ptr, ptr %1431, align 8, !tbaa !552
  store ptr %1432, ptr %12, align 8, !tbaa !50
  call void @bmiter__elem_of_mesh_begin(ptr noundef nonnull %12) #13
  %1433 = load ptr, ptr %1430, align 8, !tbaa !520
  %1434 = call ptr %1433(ptr noundef nonnull %12) #13
  %1435 = icmp eq ptr %1434, null
  br i1 %1435, label %1481, label %1436

1436:                                             ; preds = %1427, %1476
  %1437 = phi i32 [ %1477, %1476 ], [ 0, %1427 ]
  %1438 = phi ptr [ %1479, %1476 ], [ %1434, %1427 ]
  %1439 = getelementptr i8, ptr %1438, i64 13
  %1440 = load i8, ptr %1439, align 1, !tbaa !522
  %1441 = and i8 %1440, 1
  %1442 = icmp eq i8 %1441, 0
  br i1 %1442, label %1476, label %1443

1443:                                             ; preds = %1436
  %1444 = call i64 (ptr, i64, ptr, ...) @BLI_snprintf(ptr noundef nonnull %9, i64 noundef 32, ptr noundef nonnull @.str.7, i32 noundef %1437) #13
  %1445 = getelementptr inbounds %struct.BMVert, ptr %1438, i64 0, i32 2
  %1446 = load ptr, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  %1447 = icmp eq ptr %1446, null
  br i1 %1447, label %1448, label %1450

1448:                                             ; preds = %1443
  %1449 = call ptr @BLI_memarena_new(i64 noundef 16376, ptr noundef nonnull @__func__.view3d_cached_text_draw_add) #13
  store ptr %1449, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  br label %1450

1450:                                             ; preds = %1448, %1443
  %1451 = phi ptr [ %1449, %1448 ], [ %1446, %1443 ]
  %1452 = shl i64 %1444, 32
  %1453 = add i64 %1452, 4294967296
  %1454 = ashr exact i64 %1453, 32
  %1455 = add nsw i64 %1454, 40
  %1456 = call ptr @BLI_memarena_alloc(ptr noundef %1451, i64 noundef %1455) #13
  %1457 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %1458 = sext i32 %1457 to i64
  %1459 = getelementptr inbounds [3 x ptr], ptr @g_v3d_strings, i64 0, i64 %1458
  %1460 = load ptr, ptr %1459, align 8, !tbaa !49
  store ptr %1460, ptr %1456, align 8, !tbaa !49
  store ptr %1456, ptr %1459, align 8, !tbaa !49
  %1461 = getelementptr inbounds %struct.ViewCachedString, ptr %1456, i64 0, i32 1
  %1462 = load float, ptr %1445, align 4, !tbaa !44
  store float %1462, ptr %1461, align 4, !tbaa !44
  %1463 = getelementptr inbounds %struct.BMVert, ptr %1438, i64 0, i32 2, i64 1
  %1464 = load float, ptr %1463, align 4, !tbaa !44
  %1465 = getelementptr inbounds %struct.ViewCachedString, ptr %1456, i64 0, i32 1, i64 1
  store float %1464, ptr %1465, align 4, !tbaa !44
  %1466 = getelementptr inbounds %struct.BMVert, ptr %1438, i64 0, i32 2, i64 2
  %1467 = load float, ptr %1466, align 4, !tbaa !44
  %1468 = getelementptr inbounds %struct.ViewCachedString, ptr %1456, i64 0, i32 1, i64 2
  store float %1467, ptr %1468, align 4, !tbaa !44
  %1469 = getelementptr inbounds %struct.ViewCachedString, ptr %1456, i64 0, i32 2
  %1470 = load <4 x i8>, ptr %11, align 4, !tbaa !50
  store <4 x i8> %1470, ptr %1469, align 1, !tbaa !50
  %1471 = getelementptr inbounds %struct.ViewCachedString, ptr %1456, i64 0, i32 4
  store i16 0, ptr %1471, align 4, !tbaa !51
  %1472 = getelementptr inbounds %struct.ViewCachedString, ptr %1456, i64 0, i32 5
  store i16 20, ptr %1472, align 2, !tbaa !51
  %1473 = trunc i64 %1444 to i32
  %1474 = getelementptr inbounds %struct.ViewCachedString, ptr %1456, i64 0, i32 6
  store i32 %1473, ptr %1474, align 8, !tbaa !47
  %1475 = getelementptr inbounds %struct.ViewCachedString, ptr %1456, i64 0, i32 7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 4 %1475, ptr nonnull align 16 %9, i64 %1454, i1 false)
  br label %1476

1476:                                             ; preds = %1450, %1436
  %1477 = add nuw nsw i32 %1437, 1
  %1478 = load ptr, ptr %1430, align 8, !tbaa !520
  %1479 = call ptr %1478(ptr noundef nonnull %12) #13
  %1480 = icmp eq ptr %1479, null
  br i1 %1480, label %1481, label %1436, !llvm.loop !553

1481:                                             ; preds = %1476, %1427, %1421
  %1482 = load i16, ptr %1423, align 4, !tbaa !551
  %1483 = and i16 %1482, 2
  %1484 = icmp eq i16 %1483, 0
  br i1 %1484, label %1542, label %1485

1485:                                             ; preds = %1481
  call void @UI_GetThemeColor3ubv(i32 noundef 135, ptr noundef nonnull %11) #13
  %1486 = getelementptr inbounds %struct.BMIter, ptr %12, i64 0, i32 4
  store i8 2, ptr %1486, align 4, !tbaa !517
  %1487 = getelementptr inbounds %struct.BMIter, ptr %12, i64 0, i32 1
  store ptr @bmiter__elem_of_mesh_begin, ptr %1487, align 8, !tbaa !519
  %1488 = getelementptr inbounds %struct.BMIter, ptr %12, i64 0, i32 2
  store ptr @bmiter__elem_of_mesh_step, ptr %1488, align 8, !tbaa !520
  %1489 = getelementptr inbounds %struct.BMesh, ptr %1422, i64 0, i32 10
  %1490 = load ptr, ptr %1489, align 8, !tbaa !521
  store ptr %1490, ptr %12, align 8, !tbaa !50
  call void @bmiter__elem_of_mesh_begin(ptr noundef nonnull %12) #13
  %1491 = load ptr, ptr %1488, align 8, !tbaa !520
  %1492 = call ptr %1491(ptr noundef nonnull %12) #13
  %1493 = icmp eq ptr %1492, null
  br i1 %1493, label %1542, label %1494

1494:                                             ; preds = %1485
  %1495 = getelementptr inbounds float, ptr %10, i64 2
  br label %1496

1496:                                             ; preds = %1537, %1494
  %1497 = phi ptr [ %1492, %1494 ], [ %1540, %1537 ]
  %1498 = phi i32 [ 0, %1494 ], [ %1538, %1537 ]
  %1499 = getelementptr i8, ptr %1497, i64 13
  %1500 = load i8, ptr %1499, align 1, !tbaa !522
  %1501 = and i8 %1500, 1
  %1502 = icmp eq i8 %1501, 0
  br i1 %1502, label %1537, label %1503

1503:                                             ; preds = %1496
  %1504 = call i64 (ptr, i64, ptr, ...) @BLI_snprintf(ptr noundef nonnull %9, i64 noundef 32, ptr noundef nonnull @.str.7, i32 noundef %1498) #13
  %1505 = getelementptr inbounds %struct.BMEdge, ptr %1497, i64 0, i32 2
  %1506 = load ptr, ptr %1505, align 8, !tbaa !524
  %1507 = getelementptr inbounds %struct.BMVert, ptr %1506, i64 0, i32 2
  %1508 = getelementptr inbounds %struct.BMEdge, ptr %1497, i64 0, i32 3
  %1509 = load ptr, ptr %1508, align 8, !tbaa !527
  %1510 = getelementptr inbounds %struct.BMVert, ptr %1509, i64 0, i32 2
  call void @mid_v3_v3v3(ptr noundef nonnull %10, ptr noundef nonnull %1507, ptr noundef nonnull %1510) #13
  %1511 = load ptr, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  %1512 = icmp eq ptr %1511, null
  br i1 %1512, label %1513, label %1515

1513:                                             ; preds = %1503
  %1514 = call ptr @BLI_memarena_new(i64 noundef 16376, ptr noundef nonnull @__func__.view3d_cached_text_draw_add) #13
  store ptr %1514, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  br label %1515

1515:                                             ; preds = %1513, %1503
  %1516 = phi ptr [ %1514, %1513 ], [ %1511, %1503 ]
  %1517 = shl i64 %1504, 32
  %1518 = add i64 %1517, 4294967296
  %1519 = ashr exact i64 %1518, 32
  %1520 = add nsw i64 %1519, 40
  %1521 = call ptr @BLI_memarena_alloc(ptr noundef %1516, i64 noundef %1520) #13
  %1522 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %1523 = sext i32 %1522 to i64
  %1524 = getelementptr inbounds [3 x ptr], ptr @g_v3d_strings, i64 0, i64 %1523
  %1525 = load ptr, ptr %1524, align 8, !tbaa !49
  store ptr %1525, ptr %1521, align 8, !tbaa !49
  store ptr %1521, ptr %1524, align 8, !tbaa !49
  %1526 = getelementptr inbounds %struct.ViewCachedString, ptr %1521, i64 0, i32 1
  %1527 = load <2 x float>, ptr %10, align 8, !tbaa !44
  store <2 x float> %1527, ptr %1526, align 4, !tbaa !44
  %1528 = load float, ptr %1495, align 8, !tbaa !44
  %1529 = getelementptr inbounds %struct.ViewCachedString, ptr %1521, i64 0, i32 1, i64 2
  store float %1528, ptr %1529, align 4, !tbaa !44
  %1530 = getelementptr inbounds %struct.ViewCachedString, ptr %1521, i64 0, i32 2
  %1531 = load <4 x i8>, ptr %11, align 4, !tbaa !50
  store <4 x i8> %1531, ptr %1530, align 1, !tbaa !50
  %1532 = getelementptr inbounds %struct.ViewCachedString, ptr %1521, i64 0, i32 4
  store i16 0, ptr %1532, align 4, !tbaa !51
  %1533 = getelementptr inbounds %struct.ViewCachedString, ptr %1521, i64 0, i32 5
  store i16 20, ptr %1533, align 2, !tbaa !51
  %1534 = trunc i64 %1504 to i32
  %1535 = getelementptr inbounds %struct.ViewCachedString, ptr %1521, i64 0, i32 6
  store i32 %1534, ptr %1535, align 8, !tbaa !47
  %1536 = getelementptr inbounds %struct.ViewCachedString, ptr %1521, i64 0, i32 7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 4 %1536, ptr nonnull align 16 %9, i64 %1519, i1 false)
  br label %1537

1537:                                             ; preds = %1515, %1496
  %1538 = add nuw nsw i32 %1498, 1
  %1539 = load ptr, ptr %1488, align 8, !tbaa !520
  %1540 = call ptr %1539(ptr noundef nonnull %12) #13
  %1541 = icmp eq ptr %1540, null
  br i1 %1541, label %1542, label %1496, !llvm.loop !554

1542:                                             ; preds = %1537, %1485, %1481
  %1543 = load i16, ptr %1423, align 4, !tbaa !551
  %1544 = and i16 %1543, 4
  %1545 = icmp eq i16 %1544, 0
  br i1 %1545, label %1597, label %1546

1546:                                             ; preds = %1542
  call void @UI_GetThemeColor3ubv(i32 noundef 137, ptr noundef nonnull %11) #13
  %1547 = getelementptr inbounds %struct.BMIter, ptr %12, i64 0, i32 4
  store i8 3, ptr %1547, align 4, !tbaa !517
  %1548 = getelementptr inbounds %struct.BMIter, ptr %12, i64 0, i32 1
  store ptr @bmiter__elem_of_mesh_begin, ptr %1548, align 8, !tbaa !519
  %1549 = getelementptr inbounds %struct.BMIter, ptr %12, i64 0, i32 2
  store ptr @bmiter__elem_of_mesh_step, ptr %1549, align 8, !tbaa !520
  %1550 = getelementptr inbounds %struct.BMesh, ptr %1422, i64 0, i32 12
  %1551 = load ptr, ptr %1550, align 8, !tbaa !543
  store ptr %1551, ptr %12, align 8, !tbaa !50
  call void @bmiter__elem_of_mesh_begin(ptr noundef nonnull %12) #13
  %1552 = load ptr, ptr %1549, align 8, !tbaa !520
  %1553 = call ptr %1552(ptr noundef nonnull %12) #13
  %1554 = icmp eq ptr %1553, null
  br i1 %1554, label %1597, label %1555

1555:                                             ; preds = %1546
  %1556 = getelementptr inbounds float, ptr %10, i64 2
  br label %1557

1557:                                             ; preds = %1592, %1555
  %1558 = phi i32 [ 0, %1555 ], [ %1593, %1592 ]
  %1559 = phi ptr [ %1553, %1555 ], [ %1595, %1592 ]
  %1560 = getelementptr i8, ptr %1559, i64 13
  %1561 = load i8, ptr %1560, align 1, !tbaa !522
  %1562 = and i8 %1561, 1
  %1563 = icmp eq i8 %1562, 0
  br i1 %1563, label %1592, label %1564

1564:                                             ; preds = %1557
  call void @BM_face_calc_center_mean(ptr noundef nonnull %1559, ptr noundef nonnull %10) #13
  %1565 = call i64 (ptr, i64, ptr, ...) @BLI_snprintf(ptr noundef nonnull %9, i64 noundef 32, ptr noundef nonnull @.str.7, i32 noundef %1558) #13
  %1566 = load ptr, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  %1567 = icmp eq ptr %1566, null
  br i1 %1567, label %1568, label %1570

1568:                                             ; preds = %1564
  %1569 = call ptr @BLI_memarena_new(i64 noundef 16376, ptr noundef nonnull @__func__.view3d_cached_text_draw_add) #13
  store ptr %1569, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  br label %1570

1570:                                             ; preds = %1568, %1564
  %1571 = phi ptr [ %1569, %1568 ], [ %1566, %1564 ]
  %1572 = shl i64 %1565, 32
  %1573 = add i64 %1572, 4294967296
  %1574 = ashr exact i64 %1573, 32
  %1575 = add nsw i64 %1574, 40
  %1576 = call ptr @BLI_memarena_alloc(ptr noundef %1571, i64 noundef %1575) #13
  %1577 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %1578 = sext i32 %1577 to i64
  %1579 = getelementptr inbounds [3 x ptr], ptr @g_v3d_strings, i64 0, i64 %1578
  %1580 = load ptr, ptr %1579, align 8, !tbaa !49
  store ptr %1580, ptr %1576, align 8, !tbaa !49
  store ptr %1576, ptr %1579, align 8, !tbaa !49
  %1581 = getelementptr inbounds %struct.ViewCachedString, ptr %1576, i64 0, i32 1
  %1582 = load <2 x float>, ptr %10, align 8, !tbaa !44
  store <2 x float> %1582, ptr %1581, align 4, !tbaa !44
  %1583 = load float, ptr %1556, align 8, !tbaa !44
  %1584 = getelementptr inbounds %struct.ViewCachedString, ptr %1576, i64 0, i32 1, i64 2
  store float %1583, ptr %1584, align 4, !tbaa !44
  %1585 = getelementptr inbounds %struct.ViewCachedString, ptr %1576, i64 0, i32 2
  %1586 = load <4 x i8>, ptr %11, align 4, !tbaa !50
  store <4 x i8> %1586, ptr %1585, align 1, !tbaa !50
  %1587 = getelementptr inbounds %struct.ViewCachedString, ptr %1576, i64 0, i32 4
  store i16 0, ptr %1587, align 4, !tbaa !51
  %1588 = getelementptr inbounds %struct.ViewCachedString, ptr %1576, i64 0, i32 5
  store i16 20, ptr %1588, align 2, !tbaa !51
  %1589 = trunc i64 %1565 to i32
  %1590 = getelementptr inbounds %struct.ViewCachedString, ptr %1576, i64 0, i32 6
  store i32 %1589, ptr %1590, align 8, !tbaa !47
  %1591 = getelementptr inbounds %struct.ViewCachedString, ptr %1576, i64 0, i32 7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 4 %1591, ptr nonnull align 16 %9, i64 %1574, i1 false)
  br label %1592

1592:                                             ; preds = %1570, %1557
  %1593 = add nuw nsw i32 %1558, 1
  %1594 = load ptr, ptr %1549, align 8, !tbaa !520
  %1595 = call ptr %1594(ptr noundef nonnull %12) #13
  %1596 = icmp eq ptr %1595, null
  br i1 %1596, label %1597, label %1557, !llvm.loop !555

1597:                                             ; preds = %1592, %1542, %1546
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %12) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %10) #13
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %9) #13
  br label %1598

1598:                                             ; preds = %1597, %1417, %1413, %1409
  br i1 %67, label %1599, label %1600

1599:                                             ; preds = %1598
  call void @glDepthMask(i8 noundef zeroext 1) #13
  call void @ED_view3d_polygon_offset(ptr noundef %58, float noundef nofpclass(nan inf) 0.000000e+00) #13
  call void @GPU_disable_material() #13
  br label %1600

1600:                                             ; preds = %1599, %1598
  ret void
}

declare void @GPU_end_object_materials() local_unnamed_addr #1

declare ptr @BM_mesh_active_face_get(ptr noundef, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #1

declare void @draw_mesh_paint_weight_faces(ptr noundef, i8 noundef zeroext, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @draw_em_fancy__setFaceOpts(ptr nocapture noundef readonly %0, i32 noundef %1) #0 {
  %3 = load ptr, ptr %0, align 8, !tbaa !450
  %4 = getelementptr inbounds %struct.BMesh, ptr %3, i64 0, i32 3
  %5 = load i32, ptr %4, align 4, !tbaa !454
  %6 = icmp sgt i32 %5, %1
  br i1 %6, label %7, label %19

7:                                                ; preds = %2
  %8 = tail call ptr @BM_face_at_index(ptr noundef nonnull %3, i32 noundef %1) #13
  %9 = getelementptr i8, ptr %8, i64 13
  %10 = load i8, ptr %9, align 1, !tbaa !522
  %11 = and i8 %10, 2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.BMFace, ptr %8, i64 0, i32 5
  %15 = load i16, ptr %14, align 8, !tbaa !556
  %16 = sext i16 %15 to i32
  %17 = add nsw i32 %16, 1
  %18 = tail call i32 @GPU_enable_material(i32 noundef %17, ptr noundef null) #13
  br label %19

19:                                               ; preds = %7, %2, %13
  %20 = phi i32 [ 1, %13 ], [ 1, %2 ], [ 0, %7 ]
  ret i32 %20
}

declare void @draw_mesh_paint_weight_edges(ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @draw_dm_edges__setDrawOptions(ptr noundef %0, i32 noundef %1) #0 {
  %3 = tail call ptr @BM_edge_at_index(ptr noundef %0, i32 noundef %1) #13
  %4 = getelementptr i8, ptr %3, i64 13
  %5 = load i8, ptr %4, align 1, !tbaa !522
  %6 = and i8 %5, 2
  %7 = icmp eq i8 %6, 0
  %8 = zext i1 %7 to i32
  ret i32 %8
}

declare void @glColorMask(i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #1

declare void @glFrontFace(i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @draw_em_fancy__setGLSLFaceOpts(ptr nocapture noundef readonly %0, i32 noundef %1) #0 {
  %3 = load ptr, ptr %0, align 8, !tbaa !450
  %4 = getelementptr inbounds %struct.BMesh, ptr %3, i64 0, i32 3
  %5 = load i32, ptr %4, align 4, !tbaa !454
  %6 = icmp sgt i32 %5, %1
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = tail call ptr @BM_face_at_index(ptr noundef nonnull %3, i32 noundef %1) #13
  %9 = getelementptr i8, ptr %8, i64 13
  %10 = load i8, ptr %9, align 1, !tbaa !522
  %11 = and i8 %10, 2
  %12 = icmp eq i8 %11, 0
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %7, %2
  %15 = phi i32 [ 1, %2 ], [ %13, %7 ]
  ret i32 %15
}

declare void @draw_mesh_textured(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

declare void @glLightModeli(i32 noundef, i32 noundef) local_unnamed_addr #1

declare void @UI_ThemeColorBlend(i32 noundef, i32 noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare void @UI_GetThemeColor4ubv(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @draw_em_fancy_edges(ptr nocapture noundef readonly %0, ptr nocapture readonly %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i16 noundef signext %5, ptr noundef %6) unnamed_addr #0 {
  %8 = alloca %struct.drawDMEdgesSel_userData, align 8
  %9 = alloca %struct.drawDMEdgesSelInterp_userData, align 8
  %10 = alloca %struct.drawDMEdgesWeightInterp_userData, align 8
  %11 = alloca [3 x float], align 8
  %12 = alloca %struct.drawDMEdgesSel_userData, align 8
  %13 = alloca [4 x i8], align 1
  %14 = alloca [4 x i8], align 1
  %15 = alloca [4 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #13
  call void @UI_GetThemeColor4ubv(i32 noundef 39, ptr noundef nonnull %14) #13
  call void @UI_GetThemeColor4ubv(i32 noundef 27, ptr noundef nonnull %13) #13
  call void @UI_GetThemeColor4ubv(i32 noundef 127, ptr noundef nonnull %15) #13
  %16 = icmp eq i16 %5, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds [4 x i8], ptr %13, i64 0, i64 3
  store i8 0, ptr %18, align 1, !tbaa !50
  br label %19

19:                                               ; preds = %17, %7
  %20 = getelementptr inbounds [4 x i8], ptr %14, i64 0, i64 3
  %21 = getelementptr inbounds [4 x i8], ptr %13, i64 0, i64 3
  %22 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 47
  %23 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 28
  %24 = getelementptr inbounds %struct.ToolSettings, ptr %1, i64 0, i32 8
  %25 = getelementptr %struct.Mesh, ptr %3, i64 0, i32 36
  %26 = getelementptr inbounds %struct.DerivedMesh, ptr %4, i64 0, i32 93
  %27 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 24
  %28 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 29
  %29 = getelementptr inbounds %struct.ToolSettings, ptr %1, i64 0, i32 62
  %30 = getelementptr i8, ptr %0, i64 96
  %31 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %10, i64 0, i32 1
  %32 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %10, i64 0, i32 2
  %33 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %10, i64 0, i32 3
  %34 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %10, i64 0, i32 4
  %35 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %10, i64 0, i32 5
  %36 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %10, i64 0, i32 5, i64 2
  %37 = getelementptr inbounds float, ptr %11, i64 2
  %38 = getelementptr inbounds %struct.drawDMEdgesSelInterp_userData, ptr %9, i64 0, i32 1
  %39 = getelementptr inbounds %struct.drawDMEdgesSelInterp_userData, ptr %9, i64 0, i32 2
  %40 = getelementptr inbounds %struct.drawDMEdgesSelInterp_userData, ptr %9, i64 0, i32 3
  %41 = getelementptr inbounds %struct.drawDMEdgesSel_userData, ptr %8, i64 0, i32 1
  %42 = getelementptr inbounds %struct.drawDMEdgesSel_userData, ptr %8, i64 0, i32 2
  %43 = getelementptr inbounds %struct.drawDMEdgesSel_userData, ptr %8, i64 0, i32 3
  %44 = getelementptr inbounds %struct.drawDMEdgesSel_userData, ptr %8, i64 0, i32 4
  %45 = getelementptr inbounds %struct.DerivedMesh, ptr %4, i64 0, i32 92
  %46 = getelementptr inbounds %struct.drawDMEdgesSel_userData, ptr %12, i64 0, i32 1
  %47 = getelementptr inbounds %struct.drawDMEdgesSel_userData, ptr %12, i64 0, i32 2
  %48 = getelementptr inbounds %struct.drawDMEdgesSel_userData, ptr %12, i64 0, i32 3
  %49 = getelementptr inbounds %struct.drawDMEdgesSel_userData, ptr %12, i64 0, i32 4
  br label %50

50:                                               ; preds = %144, %19
  %51 = phi i1 [ true, %19 ], [ false, %144 ]
  br i1 %51, label %52, label %60

52:                                               ; preds = %50
  %53 = load i8, ptr %22, align 8, !tbaa !58
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %144, label %55

55:                                               ; preds = %52
  %56 = load i16, ptr %23, align 8, !tbaa !89
  %57 = and i16 %56, 4096
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %59, label %144

59:                                               ; preds = %55
  call void @glEnable(i32 noundef 3042) #13
  call void @glDisable(i32 noundef 2929) #13
  store i8 85, ptr %20, align 1, !tbaa !50
  br i1 %16, label %61, label %63

60:                                               ; preds = %50
  store i8 -1, ptr %20, align 1, !tbaa !50
  br i1 %16, label %61, label %63

61:                                               ; preds = %60, %59
  %62 = phi i8 [ 85, %59 ], [ -1, %60 ]
  store i8 %62, ptr %21, align 1, !tbaa !50
  br label %63

63:                                               ; preds = %61, %60, %59
  %64 = load i16, ptr %24, align 2, !tbaa !452
  %65 = icmp eq i16 %64, 4
  br i1 %65, label %66, label %69

66:                                               ; preds = %63
  %67 = load ptr, ptr %0, align 8, !tbaa !450
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %12) #13
  store ptr %13, ptr %46, align 8, !tbaa !557
  store ptr %14, ptr %47, align 8, !tbaa !559
  store ptr %15, ptr %48, align 8, !tbaa !560
  store ptr %67, ptr %12, align 8, !tbaa !561
  store ptr %6, ptr %49, align 8, !tbaa !562
  %68 = load ptr, ptr %45, align 8, !tbaa !459
  call void %68(ptr noundef %4, ptr noundef nonnull @draw_dm_edges_sel__setDrawOptions, ptr noundef nonnull %12) #13
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %12) #13
  br label %142

69:                                               ; preds = %63
  %70 = load i32, ptr %25, align 8, !tbaa !481
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = and i16 %64, 2
  %74 = icmp eq i16 %73, 0
  %75 = and i1 %74, %72
  br i1 %75, label %138, label %76

76:                                               ; preds = %69
  %77 = load ptr, ptr %26, align 8, !tbaa !563
  %78 = icmp eq ptr %77, null
  br i1 %78, label %135, label %79

79:                                               ; preds = %76
  %80 = and i16 %64, 1
  %81 = icmp eq i16 %80, 0
  %82 = and i32 %70, 16
  %83 = icmp eq i32 %82, 0
  %84 = and i1 %81, %83
  br i1 %84, label %135, label %85

85:                                               ; preds = %79
  call void @glShadeModel(i32 noundef 7425) #13
  %86 = load i32, ptr %25, align 8, !tbaa !481
  %87 = and i32 %86, 16
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %131, label %89

89:                                               ; preds = %85
  %90 = load i16, ptr %27, align 8, !tbaa !5
  %91 = icmp eq i16 %90, 2
  br i1 %91, label %102, label %92

92:                                               ; preds = %89
  %93 = load i16, ptr %28, align 2, !tbaa !15
  %94 = zext i16 %93 to i32
  %95 = and i32 %94, 4096
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %102

97:                                               ; preds = %92
  %98 = and i32 %94, 16384
  %99 = icmp ne i32 %98, 0
  %100 = icmp sgt i16 %90, 2
  %101 = and i1 %100, %99
  br i1 %101, label %102, label %131

102:                                              ; preds = %97, %92, %89
  %103 = load i8, ptr %29, align 2, !tbaa !564
  %104 = load ptr, ptr %0, align 8, !tbaa !450
  %105 = load ptr, ptr %30, align 8, !tbaa !499
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %10) #13
  store ptr %104, ptr %10, align 8, !tbaa !565
  %106 = getelementptr inbounds %struct.BMesh, ptr %104, i64 0, i32 24
  %107 = call i32 @CustomData_get_offset(ptr noundef nonnull %106, i32 noundef 2) #13
  store i32 %107, ptr %31, align 8, !tbaa !567
  %108 = getelementptr inbounds %struct.Object, ptr %105, i64 0, i32 25
  %109 = call i32 @BLI_countlist(ptr noundef nonnull %108) #13
  store i32 %109, ptr %32, align 4, !tbaa !568
  %110 = getelementptr inbounds %struct.Object, ptr %105, i64 0, i32 97
  %111 = load i16, ptr %110, align 2, !tbaa !437
  %112 = zext i16 %111 to i32
  %113 = add nsw i32 %112, -1
  store i32 %113, ptr %33, align 8, !tbaa !569
  store i8 %103, ptr %34, align 4, !tbaa !570
  call void @UI_GetThemeColor3fv(i32 noundef 35, ptr noundef nonnull %35) #13
  %114 = load i32, ptr %33, align 8, !tbaa !569
  %115 = icmp ne i32 %114, -1
  %116 = load i32, ptr %31, align 8
  %117 = icmp ne i32 %116, -1
  %118 = select i1 %115, i1 %117, i1 false
  br i1 %118, label %119, label %121

119:                                              ; preds = %102
  call void @glEnable(i32 noundef 3042) #13
  %120 = load ptr, ptr %26, align 8, !tbaa !563
  call void %120(ptr noundef nonnull %4, ptr noundef nonnull @draw_dm_edges_sel_interp__setDrawOptions, ptr noundef nonnull @draw_dm_edges_weight_interp__setDrawInterpOptions, ptr noundef nonnull %10) #13
  call void @glDisable(i32 noundef 3042) #13
  br label %130

121:                                              ; preds = %102
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %11) #13
  %122 = load i8, ptr %34, align 4, !tbaa !570
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @weight_to_rgb(ptr noundef nonnull %11, float noundef nofpclass(nan inf) 0.000000e+00) #13
  br label %128

125:                                              ; preds = %121
  %126 = load <2 x float>, ptr %35, align 8, !tbaa !44
  store <2 x float> %126, ptr %11, align 8, !tbaa !44
  %127 = load float, ptr %36, align 8, !tbaa !44
  store float %127, ptr %37, align 8, !tbaa !44
  br label %128

128:                                              ; preds = %125, %124
  call void @glColor3fv(ptr noundef nonnull %11) #13
  %129 = load ptr, ptr %26, align 8, !tbaa !563
  call void %129(ptr noundef nonnull %4, ptr noundef nonnull @draw_dm_edges_sel_interp__setDrawOptions, ptr noundef nonnull @draw_dm_edges_nop_interp__setDrawInterpOptions, ptr noundef nonnull %10) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %11) #13
  br label %130

130:                                              ; preds = %119, %128
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %10) #13
  br label %134

131:                                              ; preds = %97, %85
  %132 = load ptr, ptr %0, align 8, !tbaa !450
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %9) #13
  store ptr %132, ptr %9, align 8, !tbaa !571
  store ptr %13, ptr %38, align 8, !tbaa !573
  store ptr %14, ptr %39, align 8, !tbaa !574
  store ptr null, ptr %40, align 8, !tbaa !575
  %133 = load ptr, ptr %26, align 8, !tbaa !563
  call void %133(ptr noundef nonnull %4, ptr noundef nonnull @draw_dm_edges_sel_interp__setDrawOptions, ptr noundef nonnull @draw_dm_edges_sel_interp__setDrawInterpOptions, ptr noundef nonnull %9) #13
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %9) #13
  br label %134

134:                                              ; preds = %131, %130
  call void @glShadeModel(i32 noundef 7424) #13
  br label %142

135:                                              ; preds = %79, %76
  %136 = load ptr, ptr %0, align 8, !tbaa !450
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %8) #13
  store ptr %13, ptr %41, align 8, !tbaa !557
  store ptr %14, ptr %42, align 8, !tbaa !559
  store ptr %15, ptr %43, align 8, !tbaa !560
  store ptr %136, ptr %8, align 8, !tbaa !561
  store ptr %6, ptr %44, align 8, !tbaa !562
  %137 = load ptr, ptr %45, align 8, !tbaa !459
  call void %137(ptr noundef nonnull %4, ptr noundef nonnull @draw_dm_edges_sel__setDrawOptions, ptr noundef nonnull %8) #13
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %8) #13
  br label %142

138:                                              ; preds = %69
  br i1 %16, label %139, label %142

139:                                              ; preds = %138
  call void @glColor4ubv(ptr noundef nonnull %13) #13
  %140 = load ptr, ptr %0, align 8, !tbaa !450
  %141 = load ptr, ptr %45, align 8, !tbaa !459
  call void %141(ptr noundef %4, ptr noundef nonnull @draw_dm_edges__setDrawOptions, ptr noundef %140) #13
  br label %142

142:                                              ; preds = %135, %134, %139, %138, %66
  br i1 %51, label %143, label %145

143:                                              ; preds = %142
  call void @glDisable(i32 noundef 3042) #13
  call void @glEnable(i32 noundef 2929) #13
  br label %144

144:                                              ; preds = %143, %52, %55
  br label %50, !llvm.loop !576

145:                                              ; preds = %142
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #13
  ret void
}

declare void @glColor3ub(i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #1

declare ptr @BM_face_at_index(ptr noundef, i32 noundef) local_unnamed_addr #1

declare ptr @BM_edge_at_index(ptr noundef, i32 noundef) local_unnamed_addr #1

declare ptr @DM_get_tessface_data_layer(ptr noundef, i32 noundef) local_unnamed_addr #1

declare ptr @DM_get_poly_data_layer(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @draw_dm_faces_sel__setDrawOptions(ptr nocapture noundef readonly %0, i32 noundef %1) #0 {
  %3 = getelementptr inbounds %struct.drawDMFacesSel_userData, ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !486
  %5 = tail call ptr @BM_face_at_index(ptr noundef %4, i32 noundef %1) #13
  %6 = getelementptr i8, ptr %5, i64 13
  %7 = load i8, ptr %6, align 1, !tbaa !522
  %8 = and i8 %7, 2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %26

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.drawDMFacesSel_userData, ptr %0, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !487
  %13 = icmp eq ptr %5, %12
  br i1 %13, label %14, label %17

14:                                               ; preds = %10
  %15 = getelementptr inbounds [3 x ptr], ptr %0, i64 0, i64 2
  %16 = load ptr, ptr %15, align 8, !tbaa !49
  tail call void @glColor4ubv(ptr noundef %16) #13
  br label %26

17:                                               ; preds = %10
  %18 = and i8 %7, 1
  %19 = zext i8 %18 to i64
  %20 = getelementptr inbounds [3 x ptr], ptr %0, i64 0, i64 %19
  %21 = load ptr, ptr %20, align 8, !tbaa !49
  %22 = getelementptr inbounds i8, ptr %21, i64 3
  %23 = load i8, ptr %22, align 1, !tbaa !50
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %17
  tail call void @glColor4ubv(ptr noundef nonnull %21) #13
  br label %26

26:                                               ; preds = %2, %17, %25, %14
  %27 = phi i32 [ 3, %14 ], [ 1, %25 ], [ 0, %17 ], [ 0, %2 ]
  ret i32 %27
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @draw_dm_faces_sel__compareDrawOptions(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = getelementptr inbounds %struct.drawDMFacesSel_userData, ptr %0, i64 0, i32 4
  %5 = load ptr, ptr %4, align 8, !tbaa !488
  %6 = icmp eq ptr %5, null
  br i1 %6, label %82, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.drawDMFacesSel_userData, ptr %0, i64 0, i32 5
  %9 = load ptr, ptr %8, align 8, !tbaa !489
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds i32, ptr %5, i64 %10
  %12 = load i32, ptr %11, align 4, !tbaa !47
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %28, label %14

14:                                               ; preds = %7
  %15 = icmp eq ptr %9, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %14
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds i32, ptr %9, i64 %17
  %19 = load i32, ptr %18, align 4, !tbaa !47
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %28, label %21

21:                                               ; preds = %14, %16
  %22 = phi i32 [ %19, %16 ], [ %12, %14 ]
  %23 = getelementptr inbounds %struct.drawDMFacesSel_userData, ptr %0, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !486
  %25 = tail call ptr @BM_face_at_index(ptr noundef %24, i32 noundef %22) #13
  %26 = load ptr, ptr %8, align 8, !tbaa !489
  %27 = load ptr, ptr %4, align 8, !tbaa !488
  br label %28

28:                                               ; preds = %16, %21, %7
  %29 = phi ptr [ %5, %7 ], [ %5, %16 ], [ %27, %21 ]
  %30 = phi ptr [ %9, %7 ], [ %9, %16 ], [ %26, %21 ]
  %31 = phi ptr [ null, %7 ], [ null, %16 ], [ %25, %21 ]
  %32 = sext i32 %2 to i64
  %33 = getelementptr inbounds i32, ptr %29, i64 %32
  %34 = load i32, ptr %33, align 4, !tbaa !47
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %82, label %36

36:                                               ; preds = %28
  %37 = icmp eq ptr %30, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %36
  %39 = sext i32 %34 to i64
  %40 = getelementptr inbounds i32, ptr %30, i64 %39
  %41 = load i32, ptr %40, align 4, !tbaa !47
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %82, label %43

43:                                               ; preds = %36, %38
  %44 = phi i32 [ %41, %38 ], [ %34, %36 ]
  %45 = getelementptr inbounds %struct.drawDMFacesSel_userData, ptr %0, i64 0, i32 2
  %46 = load ptr, ptr %45, align 8, !tbaa !486
  %47 = tail call ptr @BM_face_at_index(ptr noundef %46, i32 noundef %44) #13
  %48 = icmp eq ptr %31, null
  %49 = icmp eq ptr %47, null
  %50 = select i1 %48, i1 true, i1 %49
  br i1 %50, label %82, label %51

51:                                               ; preds = %43
  %52 = icmp eq ptr %31, %47
  br i1 %52, label %82, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds %struct.drawDMFacesSel_userData, ptr %0, i64 0, i32 3
  %55 = load ptr, ptr %54, align 8, !tbaa !487
  %56 = icmp eq ptr %31, %55
  %57 = icmp eq ptr %47, %55
  %58 = select i1 %56, i1 true, i1 %57
  br i1 %58, label %82, label %59

59:                                               ; preds = %53
  %60 = getelementptr i8, ptr %31, i64 13
  %61 = load i8, ptr %60, align 1, !tbaa !522
  %62 = and i8 %61, 1
  %63 = zext i8 %62 to i64
  %64 = getelementptr inbounds [3 x ptr], ptr %0, i64 0, i64 %63
  %65 = load ptr, ptr %64, align 8, !tbaa !49
  %66 = getelementptr i8, ptr %47, i64 13
  %67 = load i8, ptr %66, align 1, !tbaa !522
  %68 = and i8 %67, 1
  %69 = zext i8 %68 to i64
  %70 = getelementptr inbounds [3 x ptr], ptr %0, i64 0, i64 %69
  %71 = load ptr, ptr %70, align 8, !tbaa !49
  %72 = getelementptr inbounds i8, ptr %65, i64 3
  %73 = load i8, ptr %72, align 1, !tbaa !50
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %82, label %75

75:                                               ; preds = %59
  %76 = getelementptr inbounds i8, ptr %71, i64 3
  %77 = load i8, ptr %76, align 1, !tbaa !50
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %75
  %80 = icmp eq ptr %65, %71
  %81 = zext i1 %80 to i32
  br label %82

82:                                               ; preds = %28, %38, %59, %75, %53, %51, %43, %3, %79
  %83 = phi i32 [ %81, %79 ], [ 0, %3 ], [ 0, %43 ], [ 1, %51 ], [ 0, %53 ], [ 0, %75 ], [ 0, %59 ], [ 0, %38 ], [ 0, %28 ]
  ret i32 %83
}

declare void @glColor4ubv(ptr noundef) local_unnamed_addr #1

declare void @glShadeModel(i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @draw_dm_edges_sel__setDrawOptions(ptr nocapture noundef readonly %0, i32 noundef %1) #0 {
  %3 = load ptr, ptr %0, align 8, !tbaa !561
  %4 = tail call ptr @BM_edge_at_index(ptr noundef %3, i32 noundef %1) #13
  %5 = getelementptr i8, ptr %4, i64 13
  %6 = load i8, ptr %5, align 1, !tbaa !522
  %7 = and i8 %6, 2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %27

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.drawDMEdgesSel_userData, ptr %0, i64 0, i32 4
  %11 = load ptr, ptr %10, align 8, !tbaa !562
  %12 = icmp eq ptr %4, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.drawDMEdgesSel_userData, ptr %0, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !560
  tail call void @glColor4ubv(ptr noundef %15) #13
  br label %27

16:                                               ; preds = %9
  %17 = and i8 %6, 1
  %18 = icmp eq i8 %17, 0
  %19 = getelementptr inbounds %struct.drawDMEdgesSel_userData, ptr %0, i64 0, i32 2
  %20 = getelementptr inbounds %struct.drawDMEdgesSel_userData, ptr %0, i64 0, i32 1
  %21 = select i1 %18, ptr %20, ptr %19
  %22 = load ptr, ptr %21, align 8, !tbaa !49
  %23 = getelementptr inbounds i8, ptr %22, i64 3
  %24 = load i8, ptr %23, align 1, !tbaa !50
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %16
  tail call void @glColor4ubv(ptr noundef nonnull %22) #13
  br label %27

27:                                               ; preds = %2, %13, %26, %16
  %28 = phi i32 [ 0, %16 ], [ 1, %26 ], [ 1, %13 ], [ 0, %2 ]
  ret i32 %28
}

declare i32 @CustomData_get_offset(ptr noundef, i32 noundef) local_unnamed_addr #1

declare i32 @BLI_countlist(ptr noundef) local_unnamed_addr #1

declare void @UI_GetThemeColor3fv(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @draw_dm_edges_sel_interp__setDrawOptions(ptr nocapture noundef readonly %0, i32 noundef %1) #0 {
  %3 = load ptr, ptr %0, align 8, !tbaa !571
  %4 = tail call ptr @BM_edge_at_index(ptr noundef %3, i32 noundef %1) #13
  %5 = getelementptr i8, ptr %4, i64 13
  %6 = load i8, ptr %5, align 1, !tbaa !522
  %7 = and i8 %6, 2
  %8 = icmp eq i8 %7, 0
  %9 = zext i1 %8 to i32
  ret i32 %9
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @draw_dm_edges_weight_interp__setDrawInterpOptions(ptr nocapture noundef readonly %0, i32 noundef %1, float noundef nofpclass(nan inf) %2) #0 {
  %4 = alloca [3 x float], align 8
  %5 = alloca [3 x float], align 8
  %6 = alloca [3 x float], align 8
  %7 = load ptr, ptr %0, align 8, !tbaa !565
  %8 = tail call ptr @BM_edge_at_index(ptr noundef %7, i32 noundef %1) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #13
  %9 = fcmp fast oeq float %2, 0.000000e+00
  br i1 %9, label %10, label %37

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.BMEdge, ptr %8, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !524
  %13 = load ptr, ptr %12, align 8, !tbaa !577
  %14 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 1
  %15 = load i32, ptr %14, align 8, !tbaa !567
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, ptr %13, i64 %16
  %18 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 3
  %19 = load i32, ptr %18, align 8, !tbaa !569
  %20 = tail call fast nofpclass(nan inf) float @defvert_find_weight(ptr noundef %17, i32 noundef %19) #13
  %21 = fcmp fast oeq float %20, 0.000000e+00
  br i1 %21, label %22, label %36

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 4
  %24 = load i8, ptr %23, align 4, !tbaa !570
  switch i8 %24, label %36 [
    i8 1, label %30
    i8 2, label %25
  ]

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !568
  %28 = tail call zeroext i8 @defvert_is_weight_zero(ptr noundef %17, i32 noundef %27) #13
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %25, %22
  %31 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 5
  %32 = load <2 x float>, ptr %31, align 4, !tbaa !44
  store <2 x float> %32, ptr %4, align 8, !tbaa !44
  %33 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 5, i64 2
  %34 = load float, ptr %33, align 4, !tbaa !44
  %35 = getelementptr inbounds float, ptr %4, i64 2
  store float %34, ptr %35, align 8, !tbaa !44
  br label %119

36:                                               ; preds = %25, %22, %10
  call void @weight_to_rgb(ptr noundef nonnull %4, float noundef nofpclass(nan inf) %20) #13
  br label %119

37:                                               ; preds = %3
  %38 = fcmp fast oeq float %2, 1.000000e+00
  br i1 %38, label %39, label %66

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.BMEdge, ptr %8, i64 0, i32 3
  %41 = load ptr, ptr %40, align 8, !tbaa !527
  %42 = load ptr, ptr %41, align 8, !tbaa !577
  %43 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 1
  %44 = load i32, ptr %43, align 8, !tbaa !567
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, ptr %42, i64 %45
  %47 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 3
  %48 = load i32, ptr %47, align 8, !tbaa !569
  %49 = tail call fast nofpclass(nan inf) float @defvert_find_weight(ptr noundef %46, i32 noundef %48) #13
  %50 = fcmp fast oeq float %49, 0.000000e+00
  br i1 %50, label %51, label %65

51:                                               ; preds = %39
  %52 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 4
  %53 = load i8, ptr %52, align 4, !tbaa !570
  switch i8 %53, label %65 [
    i8 1, label %59
    i8 2, label %54
  ]

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !568
  %57 = tail call zeroext i8 @defvert_is_weight_zero(ptr noundef %46, i32 noundef %56) #13
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %65, label %59

59:                                               ; preds = %54, %51
  %60 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 5
  %61 = load <2 x float>, ptr %60, align 4, !tbaa !44
  store <2 x float> %61, ptr %4, align 8, !tbaa !44
  %62 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 5, i64 2
  %63 = load float, ptr %62, align 4, !tbaa !44
  %64 = getelementptr inbounds float, ptr %4, i64 2
  store float %63, ptr %64, align 8, !tbaa !44
  br label %119

65:                                               ; preds = %54, %51, %39
  call void @weight_to_rgb(ptr noundef nonnull %4, float noundef nofpclass(nan inf) %49) #13
  br label %119

66:                                               ; preds = %37
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #13
  %67 = getelementptr inbounds %struct.BMEdge, ptr %8, i64 0, i32 2
  %68 = load ptr, ptr %67, align 8, !tbaa !524
  %69 = load ptr, ptr %68, align 8, !tbaa !577
  %70 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 1
  %71 = load i32, ptr %70, align 8, !tbaa !567
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, ptr %69, i64 %72
  %74 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 3
  %75 = load i32, ptr %74, align 8, !tbaa !569
  %76 = tail call fast nofpclass(nan inf) float @defvert_find_weight(ptr noundef %73, i32 noundef %75) #13
  %77 = fcmp fast oeq float %76, 0.000000e+00
  br i1 %77, label %78, label %92

78:                                               ; preds = %66
  %79 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 4
  %80 = load i8, ptr %79, align 4, !tbaa !570
  switch i8 %80, label %92 [
    i8 1, label %86
    i8 2, label %81
  ]

81:                                               ; preds = %78
  %82 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 2
  %83 = load i32, ptr %82, align 4, !tbaa !568
  %84 = tail call zeroext i8 @defvert_is_weight_zero(ptr noundef %73, i32 noundef %83) #13
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %92, label %86

86:                                               ; preds = %81, %78
  %87 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 5
  %88 = load <2 x float>, ptr %87, align 4, !tbaa !44
  store <2 x float> %88, ptr %5, align 8, !tbaa !44
  %89 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 5, i64 2
  %90 = load float, ptr %89, align 4, !tbaa !44
  %91 = getelementptr inbounds float, ptr %5, i64 2
  store float %90, ptr %91, align 8, !tbaa !44
  br label %93

92:                                               ; preds = %81, %78, %66
  call void @weight_to_rgb(ptr noundef nonnull %5, float noundef nofpclass(nan inf) %76) #13
  br label %93

93:                                               ; preds = %86, %92
  %94 = getelementptr inbounds %struct.BMEdge, ptr %8, i64 0, i32 3
  %95 = load ptr, ptr %94, align 8, !tbaa !527
  %96 = load ptr, ptr %95, align 8, !tbaa !577
  %97 = load i32, ptr %70, align 8, !tbaa !567
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i8, ptr %96, i64 %98
  %100 = load i32, ptr %74, align 8, !tbaa !569
  %101 = call fast nofpclass(nan inf) float @defvert_find_weight(ptr noundef %99, i32 noundef %100) #13
  %102 = fcmp fast oeq float %101, 0.000000e+00
  br i1 %102, label %103, label %117

103:                                              ; preds = %93
  %104 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 4
  %105 = load i8, ptr %104, align 4, !tbaa !570
  switch i8 %105, label %117 [
    i8 1, label %111
    i8 2, label %106
  ]

106:                                              ; preds = %103
  %107 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 2
  %108 = load i32, ptr %107, align 4, !tbaa !568
  %109 = call zeroext i8 @defvert_is_weight_zero(ptr noundef %99, i32 noundef %108) #13
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %117, label %111

111:                                              ; preds = %106, %103
  %112 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 5
  %113 = load <2 x float>, ptr %112, align 4, !tbaa !44
  store <2 x float> %113, ptr %6, align 8, !tbaa !44
  %114 = getelementptr inbounds %struct.drawDMEdgesWeightInterp_userData, ptr %0, i64 0, i32 5, i64 2
  %115 = load float, ptr %114, align 4, !tbaa !44
  %116 = getelementptr inbounds float, ptr %6, i64 2
  store float %115, ptr %116, align 8, !tbaa !44
  br label %118

117:                                              ; preds = %106, %103, %93
  call void @weight_to_rgb(ptr noundef nonnull %6, float noundef nofpclass(nan inf) %101) #13
  br label %118

118:                                              ; preds = %111, %117
  call void @interp_v3_v3v3(ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef nonnull %6, float noundef nofpclass(nan inf) %2) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #13
  br label %119

119:                                              ; preds = %65, %59, %36, %30, %118
  call void @glColor3fv(ptr noundef nonnull %4) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #13
  ret void
}

declare void @weight_to_rgb(ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare void @glColor3fv(ptr noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define internal void @draw_dm_edges_nop_interp__setDrawInterpOptions(ptr nocapture %0, i32 %1, float nofpclass(nan inf) %2) #8 {
  ret void
}

declare void @interp_v3_v3v3(ptr noundef, ptr noundef, ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare nofpclass(nan inf) float @defvert_find_weight(ptr noundef, i32 noundef) local_unnamed_addr #1

declare zeroext i8 @defvert_is_weight_zero(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal void @draw_dm_edges_sel_interp__setDrawInterpOptions(ptr nocapture noundef %0, i32 noundef %1, float noundef nofpclass(nan inf) %2) #0 {
  %4 = alloca [4 x i8], align 1
  %5 = load ptr, ptr %0, align 8, !tbaa !571
  %6 = tail call ptr @BM_edge_at_index(ptr noundef %5, i32 noundef %1) #13
  %7 = getelementptr inbounds %struct.BMEdge, ptr %6, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !524
  %9 = getelementptr i8, ptr %8, i64 13
  %10 = load i8, ptr %9, align 1, !tbaa !522
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  %13 = select i1 %12, i32 1, i32 2
  %14 = getelementptr inbounds %struct.BMEdge, ptr %6, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !527
  %16 = getelementptr i8, ptr %15, i64 13
  %17 = load i8, ptr %16, align 1, !tbaa !522
  %18 = and i8 %17, 1
  %19 = icmp eq i8 %18, 0
  %20 = select i1 %19, i32 1, i32 2
  %21 = zext i32 %13 to i64
  %22 = getelementptr inbounds ptr, ptr %0, i64 %21
  %23 = load ptr, ptr %22, align 8, !tbaa !49
  %24 = zext i32 %20 to i64
  %25 = getelementptr inbounds ptr, ptr %0, i64 %24
  %26 = load ptr, ptr %25, align 8, !tbaa !49
  %27 = icmp eq i32 %13, %20
  %28 = fcmp fast oeq float %2, 0.000000e+00
  %29 = select i1 %27, i1 true, i1 %28
  br i1 %29, label %34, label %30

30:                                               ; preds = %3
  %31 = fcmp fast oeq float %2, 1.000000e+00
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #13
  call void @interp_v4_v4v4_uchar(ptr noundef nonnull %4, ptr noundef %23, ptr noundef %26, float noundef nofpclass(nan inf) %2) #13
  call void @glColor4ubv(ptr noundef nonnull %4) #13
  %33 = getelementptr inbounds %struct.drawDMEdgesSelInterp_userData, ptr %0, i64 0, i32 3
  store ptr null, ptr %33, align 8, !tbaa !575
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #13
  br label %40

34:                                               ; preds = %30, %3
  %35 = phi ptr [ %23, %3 ], [ %26, %30 ]
  %36 = getelementptr inbounds %struct.drawDMEdgesSelInterp_userData, ptr %0, i64 0, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !575
  %38 = icmp eq ptr %37, %35
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  store ptr %35, ptr %36, align 8, !tbaa !575
  tail call void @glColor4ubv(ptr noundef %35) #13
  br label %40

40:                                               ; preds = %34, %39, %32
  ret void
}

declare void @interp_v4_v4v4_uchar(ptr noundef, ptr noundef, ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @draw_dm_edges_seams__setDrawOptions(ptr noundef %0, i32 noundef %1) #0 {
  %3 = tail call ptr @BM_edge_at_index(ptr noundef %0, i32 noundef %1) #13
  %4 = getelementptr i8, ptr %3, i64 13
  %5 = load i8, ptr %4, align 1, !tbaa !522
  %6 = and i8 %5, 6
  %7 = icmp eq i8 %6, 4
  %8 = zext i1 %7 to i32
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @draw_dm_edges_sharp__setDrawOptions(ptr noundef %0, i32 noundef %1) #0 {
  %3 = tail call ptr @BM_edge_at_index(ptr noundef %0, i32 noundef %1) #13
  %4 = getelementptr i8, ptr %3, i64 13
  %5 = load i8, ptr %4, align 1, !tbaa !522
  %6 = and i8 %5, 10
  %7 = icmp eq i8 %6, 0
  %8 = zext i1 %7 to i32
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @draw_dm_creases__setDrawOptions(ptr nocapture noundef readonly %0, i32 noundef %1) #0 {
  %3 = load ptr, ptr %0, align 8, !tbaa !490
  %4 = tail call ptr @BM_edge_at_index(ptr noundef %3, i32 noundef %1) #13
  %5 = getelementptr i8, ptr %4, i64 13
  %6 = load i8, ptr %5, align 1, !tbaa !522
  %7 = and i8 %6, 2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %18

9:                                                ; preds = %2
  %10 = load ptr, ptr %4, align 8, !tbaa !579
  %11 = getelementptr inbounds %struct.drawDMLayer_userData, ptr %0, i64 0, i32 1
  %12 = load i32, ptr %11, align 8, !tbaa !492
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, ptr %10, i64 %13
  %15 = load float, ptr %14, align 4, !tbaa !44
  %16 = fcmp fast oeq float %15, 0.000000e+00
  br i1 %16, label %18, label %17

17:                                               ; preds = %9
  tail call void @UI_ThemeColorBlend(i32 noundef 27, i32 noundef 134, float noundef nofpclass(nan inf) %15) #13
  br label %18

18:                                               ; preds = %2, %9, %17
  %19 = phi i32 [ 1, %17 ], [ 0, %9 ], [ 0, %2 ]
  ret i32 %19
}

declare void @glPointSize(float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare void @bglBegin(i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal void @draw_dm_bweights__mapFunc(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef %2, ptr nocapture readnone %3, ptr nocapture readnone %4) #0 {
  %6 = load ptr, ptr %0, align 8, !tbaa !490
  %7 = tail call ptr @BM_vert_at_index(ptr noundef %6, i32 noundef %1) #13
  %8 = getelementptr i8, ptr %7, i64 13
  %9 = load i8, ptr %8, align 1, !tbaa !522
  %10 = and i8 %9, 2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %21

12:                                               ; preds = %5
  %13 = load ptr, ptr %7, align 8, !tbaa !577
  %14 = getelementptr inbounds %struct.drawDMLayer_userData, ptr %0, i64 0, i32 1
  %15 = load i32, ptr %14, align 8, !tbaa !492
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, ptr %13, i64 %16
  %18 = load float, ptr %17, align 4, !tbaa !44
  %19 = fcmp fast une float %18, 0.000000e+00
  br i1 %19, label %20, label %21

20:                                               ; preds = %12
  tail call void @UI_ThemeColorBlend(i32 noundef 33, i32 noundef 34, float noundef nofpclass(nan inf) %18) #13
  tail call void @bglVertex3fv(ptr noundef %2) #13
  br label %21

21:                                               ; preds = %12, %20, %5
  ret void
}

declare void @bglEnd() local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @draw_dm_bweights__setDrawOptions(ptr nocapture noundef readonly %0, i32 noundef %1) #0 {
  %3 = load ptr, ptr %0, align 8, !tbaa !490
  %4 = tail call ptr @BM_edge_at_index(ptr noundef %3, i32 noundef %1) #13
  %5 = getelementptr i8, ptr %4, i64 13
  %6 = load i8, ptr %5, align 1, !tbaa !522
  %7 = and i8 %6, 2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %18

9:                                                ; preds = %2
  %10 = load ptr, ptr %4, align 8, !tbaa !579
  %11 = getelementptr inbounds %struct.drawDMLayer_userData, ptr %0, i64 0, i32 1
  %12 = load i32, ptr %11, align 8, !tbaa !492
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, ptr %10, i64 %13
  %15 = load float, ptr %14, align 4, !tbaa !44
  %16 = fcmp fast oeq float %15, 0.000000e+00
  br i1 %16, label %18, label %17

17:                                               ; preds = %9
  tail call void @UI_ThemeColorBlend(i32 noundef 27, i32 noundef 39, float noundef nofpclass(nan inf) %15) #13
  br label %18

18:                                               ; preds = %2, %9, %17
  %19 = phi i32 [ 1, %17 ], [ 0, %9 ], [ 0, %2 ]
  ret i32 %19
}

declare ptr @BM_vert_at_index(ptr noundef, i32 noundef) local_unnamed_addr #1

declare void @bglVertex3fv(ptr noundef) local_unnamed_addr #1

declare void @mul_m4_m4m4(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare zeroext i8 @invert_m4(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal void @draw_dm_verts__mapFunc(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr nocapture readnone %3, ptr nocapture readnone %4) #0 {
  %6 = load ptr, ptr %0, align 8, !tbaa !496
  %7 = tail call ptr @BM_vert_at_index(ptr noundef %6, i32 noundef %1) #13
  %8 = getelementptr i8, ptr %7, i64 13
  %9 = load i8, ptr %8, align 1, !tbaa !522
  %10 = and i8 %9, 2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %57

12:                                               ; preds = %5
  %13 = and i8 %9, 1
  %14 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %0, i64 0, i32 2
  %15 = load i8, ptr %14, align 8, !tbaa !493
  %16 = icmp eq i8 %13, %15
  br i1 %16, label %17, label %57

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %0, i64 0, i32 8
  %19 = load i32, ptr %18, align 8, !tbaa !498
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %42, label %21

21:                                               ; preds = %17
  %22 = load ptr, ptr %7, align 8, !tbaa !577
  %23 = sext i32 %19 to i64
  %24 = getelementptr inbounds i8, ptr %22, i64 %23
  %25 = getelementptr inbounds %struct.MVertSkin, ptr %24, i64 0, i32 1
  %26 = load i32, ptr %25, align 4, !tbaa !580
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %21
  %30 = load float, ptr %24, align 4, !tbaa !44
  %31 = getelementptr inbounds [3 x float], ptr %24, i64 0, i64 1
  %32 = load float, ptr %31, align 4, !tbaa !44
  %33 = fadd fast float %32, %30
  %34 = fmul fast float %33, 5.000000e-01
  tail call void @bglEnd() #13
  %35 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %0, i64 0, i32 6
  tail call void @glColor4ubv(ptr noundef nonnull %35) #13
  %36 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %0, i64 0, i32 9
  tail call void @drawcircball(i32 noundef 1, ptr noundef %2, float noundef nofpclass(nan inf) %34, ptr noundef nonnull %36)
  %37 = load i8, ptr %14, align 8, !tbaa !493
  %38 = icmp eq i8 %37, 0
  %39 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %0, i64 0, i32 4
  %40 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %0, i64 0, i32 5
  %41 = select i1 %38, ptr %40, ptr %39
  tail call void @glColor4ubv(ptr noundef nonnull %41) #13
  tail call void @bglBegin(i32 noundef 0) #13
  br label %42

42:                                               ; preds = %21, %29, %17
  %43 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %0, i64 0, i32 1
  %44 = load ptr, ptr %43, align 8, !tbaa !495
  %45 = icmp eq ptr %7, %44
  br i1 %45, label %46, label %56

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %0, i64 0, i32 3
  tail call void @glColor4ubv(ptr noundef nonnull %47) #13
  tail call void @bglEnd() #13
  %48 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %0, i64 0, i32 7
  %49 = load float, ptr %48, align 4, !tbaa !497
  tail call void @glPointSize(float noundef nofpclass(nan inf) %49) #13
  tail call void @bglBegin(i32 noundef 0) #13
  tail call void @bglVertex3fv(ptr noundef %2) #13
  tail call void @bglEnd() #13
  %50 = load i8, ptr %14, align 8, !tbaa !493
  %51 = icmp eq i8 %50, 0
  %52 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %0, i64 0, i32 4
  %53 = getelementptr inbounds %struct.drawDMVerts_userData, ptr %0, i64 0, i32 5
  %54 = select i1 %51, ptr %53, ptr %52
  tail call void @glColor4ubv(ptr noundef nonnull %54) #13
  %55 = load float, ptr %48, align 4, !tbaa !497
  tail call void @glPointSize(float noundef nofpclass(nan inf) %55) #13
  tail call void @bglBegin(i32 noundef 0) #13
  br label %57

56:                                               ; preds = %42
  tail call void @bglVertex3fv(ptr noundef %2) #13
  br label %57

57:                                               ; preds = %46, %56, %12, %5
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @draw_dm_face_centers__mapFunc(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef %2, ptr nocapture readnone %3) #0 {
  %5 = load ptr, ptr %0, align 8, !tbaa !500
  %6 = tail call ptr @BM_face_at_index(ptr noundef %5, i32 noundef %1) #13
  %7 = getelementptr i8, ptr %6, i64 13
  %8 = load i8, ptr %7, align 1, !tbaa !522
  %9 = and i8 %8, 2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = and i8 %8, 1
  %13 = getelementptr inbounds %struct.drawBMSelect_userData, ptr %0, i64 0, i32 1
  %14 = load i8, ptr %13, align 8, !tbaa !502
  %15 = icmp eq i8 %12, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %11
  tail call void @bglVertex3fv(ptr noundef %2) #13
  br label %17

17:                                               ; preds = %16, %11, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @draw_dm_face_normals__mapFunc(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) #0 {
  %5 = alloca [3 x float], align 8
  %6 = load ptr, ptr %0, align 8, !tbaa !504
  %7 = tail call ptr @BM_face_at_index(ptr noundef %6, i32 noundef %1) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #13
  %8 = getelementptr i8, ptr %7, i64 13
  %9 = load i8, ptr %8, align 1, !tbaa !522
  %10 = and i8 %9, 2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %62

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %0, i64 0, i32 1
  %14 = load i32, ptr %13, align 8, !tbaa !507
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds float, ptr %5, i64 2
  br i1 %15, label %17, label %39

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %0, i64 0, i32 3
  call void @mul_v3_m3v3(ptr noundef nonnull %5, ptr noundef nonnull %18, ptr noundef %3) #13
  %19 = load <2 x float>, ptr %5, align 8, !tbaa !44
  %20 = fmul fast <2 x float> %19, %19
  %21 = shufflevector <2 x float> %20, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %22 = fadd fast <2 x float> %21, %20
  %23 = extractelement <2 x float> %22, i64 0
  %24 = load float, ptr %16, align 8, !tbaa !44
  %25 = fmul fast float %24, %24
  %26 = fadd fast float %23, %25
  %27 = fcmp fast ogt float %26, 0x38AA95A5C0000000
  br i1 %27, label %28, label %35

28:                                               ; preds = %17
  %29 = call fast float @llvm.sqrt.f32(float %26)
  %30 = fdiv fast float 1.000000e+00, %29
  %31 = insertelement <2 x float> poison, float %30, i64 0
  %32 = shufflevector <2 x float> %31, <2 x float> poison, <2 x i32> zeroinitializer
  %33 = fmul fast <2 x float> %32, %19
  %34 = fmul fast float %30, %24
  br label %35

35:                                               ; preds = %17, %28
  %36 = phi float [ %34, %28 ], [ 0.000000e+00, %17 ]
  %37 = phi <2 x float> [ %33, %28 ], [ zeroinitializer, %17 ]
  store <2 x float> %37, ptr %5, align 8
  store float %36, ptr %16, align 8
  %38 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %0, i64 0, i32 4
  call void @mul_m3_v3(ptr noundef nonnull %38, ptr noundef nonnull %5) #13
  br label %43

39:                                               ; preds = %12
  %40 = load <2 x float>, ptr %3, align 4, !tbaa !44
  store <2 x float> %40, ptr %5, align 8, !tbaa !44
  %41 = getelementptr inbounds float, ptr %3, i64 2
  %42 = load float, ptr %41, align 4, !tbaa !44
  store float %42, ptr %16, align 8, !tbaa !44
  br label %43

43:                                               ; preds = %39, %35
  call void @glVertex3fv(ptr noundef %2) #13
  %44 = load float, ptr %2, align 4, !tbaa !44
  %45 = load float, ptr %5, align 8, !tbaa !44
  %46 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %0, i64 0, i32 2
  %47 = load float, ptr %46, align 4, !tbaa !506
  %48 = fmul fast float %47, %45
  %49 = fadd fast float %48, %44
  %50 = getelementptr inbounds float, ptr %2, i64 1
  %51 = load float, ptr %50, align 4, !tbaa !44
  %52 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 1
  %53 = load float, ptr %52, align 4, !tbaa !44
  %54 = fmul fast float %53, %47
  %55 = fadd fast float %54, %51
  %56 = getelementptr inbounds float, ptr %2, i64 2
  %57 = load float, ptr %56, align 4, !tbaa !44
  %58 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 2
  %59 = load float, ptr %58, align 8, !tbaa !44
  %60 = fmul fast float %59, %47
  %61 = fadd fast float %60, %57
  call void @glVertex3f(float noundef nofpclass(nan inf) %49, float noundef nofpclass(nan inf) %55, float noundef nofpclass(nan inf) %61) #13
  br label %62

62:                                               ; preds = %43, %4
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #13
  ret void
}

declare void @copy_m3_m4(ptr noundef, ptr noundef) local_unnamed_addr #1

declare zeroext i8 @is_uniform_scaled_m3(ptr noundef) local_unnamed_addr #1

declare zeroext i8 @invert_m3_m3(ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @transpose_m3(ptr noundef) local_unnamed_addr #1

declare void @mul_v3_m3v3(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @mul_m3_v3(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal void @draw_dm_vert_normals__mapFunc(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef readonly %3, ptr nocapture noundef readonly %4) #0 {
  %6 = alloca [3 x float], align 8
  %7 = alloca [3 x float], align 8
  %8 = load ptr, ptr %0, align 8, !tbaa !504
  %9 = tail call ptr @BM_vert_at_index(ptr noundef %8, i32 noundef %1) #13
  %10 = getelementptr i8, ptr %9, i64 13
  %11 = load i8, ptr %10, align 1, !tbaa !522
  %12 = and i8 %11, 2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %79

14:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #13
  %15 = icmp eq ptr %3, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %14
  %17 = load <2 x float>, ptr %3, align 4, !tbaa !44
  %18 = getelementptr inbounds float, ptr %3, i64 2
  %19 = load float, ptr %18, align 4, !tbaa !44
  br label %28

20:                                               ; preds = %14
  %21 = load <2 x i16>, ptr %4, align 2, !tbaa !51
  %22 = sitofp <2 x i16> %21 to <2 x float>
  %23 = fmul fast <2 x float> %22, <float 0x3F00002000000000, float 0x3F00002000000000>
  %24 = getelementptr inbounds i16, ptr %4, i64 2
  %25 = load i16, ptr %24, align 2, !tbaa !51
  %26 = sitofp i16 %25 to float
  %27 = fmul fast float %26, 0x3F00002000000000
  br label %28

28:                                               ; preds = %20, %16
  %29 = phi float [ %27, %20 ], [ %19, %16 ]
  %30 = phi <2 x float> [ %23, %20 ], [ %17, %16 ]
  store <2 x float> %30, ptr %6, align 8
  %31 = getelementptr inbounds float, ptr %6, i64 2
  store float %29, ptr %31, align 8
  %32 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %0, i64 0, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !507
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %58

35:                                               ; preds = %28
  %36 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %0, i64 0, i32 3
  call void @mul_v3_m3v3(ptr noundef nonnull %7, ptr noundef nonnull %36, ptr noundef nonnull %6) #13
  %37 = load <2 x float>, ptr %7, align 8, !tbaa !44
  %38 = fmul fast <2 x float> %37, %37
  %39 = shufflevector <2 x float> %38, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %40 = fadd fast <2 x float> %39, %38
  %41 = extractelement <2 x float> %40, i64 0
  %42 = getelementptr inbounds float, ptr %7, i64 2
  %43 = load float, ptr %42, align 8, !tbaa !44
  %44 = fmul fast float %43, %43
  %45 = fadd fast float %41, %44
  %46 = fcmp fast ogt float %45, 0x38AA95A5C0000000
  br i1 %46, label %47, label %54

47:                                               ; preds = %35
  %48 = call fast float @llvm.sqrt.f32(float %45)
  %49 = fdiv fast float 1.000000e+00, %48
  %50 = insertelement <2 x float> poison, float %49, i64 0
  %51 = shufflevector <2 x float> %50, <2 x float> poison, <2 x i32> zeroinitializer
  %52 = fmul fast <2 x float> %51, %37
  %53 = fmul fast float %49, %43
  br label %54

54:                                               ; preds = %35, %47
  %55 = phi float [ %53, %47 ], [ 0.000000e+00, %35 ]
  %56 = phi <2 x float> [ %52, %47 ], [ zeroinitializer, %35 ]
  store <2 x float> %56, ptr %7, align 8
  store float %55, ptr %42, align 8
  %57 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %0, i64 0, i32 4
  call void @mul_m3_v3(ptr noundef nonnull %57, ptr noundef nonnull %7) #13
  br label %60

58:                                               ; preds = %28
  store <2 x float> %30, ptr %7, align 8, !tbaa !44
  %59 = getelementptr inbounds float, ptr %7, i64 2
  store float %29, ptr %59, align 8, !tbaa !44
  br label %60

60:                                               ; preds = %58, %54
  call void @glVertex3fv(ptr noundef %2) #13
  %61 = load float, ptr %2, align 4, !tbaa !44
  %62 = load float, ptr %7, align 8, !tbaa !44
  %63 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %0, i64 0, i32 2
  %64 = load float, ptr %63, align 4, !tbaa !506
  %65 = fmul fast float %64, %62
  %66 = fadd fast float %65, %61
  %67 = getelementptr inbounds float, ptr %2, i64 1
  %68 = load float, ptr %67, align 4, !tbaa !44
  %69 = getelementptr inbounds [3 x float], ptr %7, i64 0, i64 1
  %70 = load float, ptr %69, align 4, !tbaa !44
  %71 = fmul fast float %70, %64
  %72 = fadd fast float %71, %68
  %73 = getelementptr inbounds float, ptr %2, i64 2
  %74 = load float, ptr %73, align 4, !tbaa !44
  %75 = getelementptr inbounds [3 x float], ptr %7, i64 0, i64 2
  %76 = load float, ptr %75, align 8, !tbaa !44
  %77 = fmul fast float %76, %64
  %78 = fadd fast float %77, %74
  call void @glVertex3f(float noundef nofpclass(nan inf) %66, float noundef nofpclass(nan inf) %72, float noundef nofpclass(nan inf) %78) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #13
  br label %79

79:                                               ; preds = %60, %5
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @draw_dm_loop_normals__mapFunc(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4) #0 {
  %6 = alloca [3 x float], align 8
  %7 = icmp eq ptr %4, null
  br i1 %7, label %76, label %8

8:                                                ; preds = %5
  %9 = load ptr, ptr %0, align 8, !tbaa !504
  %10 = tail call ptr @BM_vert_at_index(ptr noundef %9, i32 noundef %1) #13
  %11 = load ptr, ptr %0, align 8, !tbaa !504
  %12 = tail call ptr @BM_face_at_index(ptr noundef %11, i32 noundef %2) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #13
  %13 = getelementptr i8, ptr %10, i64 13
  %14 = load i8, ptr %13, align 1, !tbaa !522
  %15 = and i8 %14, 2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %75

17:                                               ; preds = %8
  %18 = getelementptr i8, ptr %12, i64 13
  %19 = load i8, ptr %18, align 1, !tbaa !522
  %20 = and i8 %19, 2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %75

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %0, i64 0, i32 1
  %24 = load i32, ptr %23, align 8, !tbaa !507
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %51

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %0, i64 0, i32 3
  call void @mul_v3_m3v3(ptr noundef nonnull %6, ptr noundef nonnull %27, ptr noundef nonnull %4) #13
  %28 = getelementptr inbounds float, ptr %6, i64 1
  %29 = load <2 x float>, ptr %6, align 8, !tbaa !44
  %30 = fmul fast <2 x float> %29, %29
  %31 = shufflevector <2 x float> %30, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %32 = fadd fast <2 x float> %31, %30
  %33 = extractelement <2 x float> %32, i64 0
  %34 = getelementptr inbounds float, ptr %6, i64 2
  %35 = load float, ptr %34, align 8, !tbaa !44
  %36 = fmul fast float %35, %35
  %37 = fadd fast float %33, %36
  %38 = fcmp fast ogt float %37, 0x38AA95A5C0000000
  br i1 %38, label %39, label %46

39:                                               ; preds = %26
  %40 = call fast float @llvm.sqrt.f32(float %37)
  %41 = fdiv fast float 1.000000e+00, %40
  %42 = insertelement <2 x float> poison, float %41, i64 0
  %43 = shufflevector <2 x float> %42, <2 x float> poison, <2 x i32> zeroinitializer
  %44 = fmul fast <2 x float> %43, %29
  %45 = fmul fast float %41, %35
  br label %46

46:                                               ; preds = %26, %39
  %47 = phi float [ %45, %39 ], [ 0.000000e+00, %26 ]
  %48 = phi <2 x float> [ %44, %39 ], [ zeroinitializer, %26 ]
  store <2 x float> %48, ptr %6, align 8
  store float %47, ptr %34, align 8
  %49 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %0, i64 0, i32 4
  call void @mul_m3_v3(ptr noundef nonnull %49, ptr noundef nonnull %6) #13
  %50 = load float, ptr %28, align 4, !tbaa !44
  br label %55

51:                                               ; preds = %22
  %52 = getelementptr inbounds float, ptr %4, i64 1
  %53 = load float, ptr %52, align 4, !tbaa !44
  %54 = getelementptr inbounds float, ptr %4, i64 2
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi ptr [ %54, %51 ], [ %34, %46 ]
  %57 = phi float [ %53, %51 ], [ %50, %46 ]
  %58 = phi ptr [ %4, %51 ], [ %6, %46 ]
  %59 = load float, ptr %58, align 4, !tbaa !44
  %60 = load float, ptr %56, align 4, !tbaa !44
  %61 = getelementptr inbounds %struct.drawDMNormal_userData, ptr %0, i64 0, i32 2
  %62 = load float, ptr %61, align 4, !tbaa !506
  %63 = getelementptr inbounds float, ptr %6, i64 2
  %64 = fmul fast float %60, %62
  %65 = insertelement <2 x float> poison, float %59, i64 0
  %66 = insertelement <2 x float> %65, float %57, i64 1
  %67 = insertelement <2 x float> poison, float %62, i64 0
  %68 = shufflevector <2 x float> %67, <2 x float> poison, <2 x i32> zeroinitializer
  %69 = fmul fast <2 x float> %66, %68
  %70 = load <2 x float>, ptr %3, align 4, !tbaa !44
  %71 = fadd fast <2 x float> %70, %69
  store <2 x float> %71, ptr %6, align 8, !tbaa !44
  %72 = getelementptr inbounds float, ptr %3, i64 2
  %73 = load float, ptr %72, align 4, !tbaa !44
  %74 = fadd fast float %73, %64
  store float %74, ptr %63, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %3) #13
  call void @glVertex3fv(ptr noundef nonnull %6) #13
  br label %75

75:                                               ; preds = %55, %17, %8
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #13
  br label %76

76:                                               ; preds = %75, %5
  ret void
}

declare ptr @EDBM_mesh_deform_dm_get(ptr noundef) local_unnamed_addr #1

declare void @view3d_get_transformation(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @ED_view3d_clipping_calc(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @BM_mesh_elem_index_ensure(ptr noundef, i8 noundef zeroext) local_unnamed_addr #1

declare zeroext i8 @clip_segment_v3_plane_n(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

declare void @mid_v3_v3v3(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare i64 @bUnit_AsString(ptr noundef, i32 noundef, double noundef nofpclass(nan inf), i32 noundef, i32 noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #1

declare i64 @BLI_snprintf(ptr noundef, i64 noundef, ptr noundef, ...) local_unnamed_addr #1

declare zeroext i8 @BM_edge_loop_pair(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare nofpclass(nan inf) float @angle_normalized_v3v3(ptr noundef, ptr noundef) local_unnamed_addr #1

declare nofpclass(nan inf) float @area_tri_v3(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @BM_face_calc_center_bounds(ptr noundef, ptr noundef) local_unnamed_addr #1

declare nofpclass(nan inf) float @angle_v3v3v3(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @bmiter__elem_of_mesh_begin(ptr noundef) #1

declare ptr @bmiter__elem_of_mesh_step(ptr noundef) #1

declare void @bmiter__loop_of_face_begin(ptr noundef) #1

declare ptr @bmiter__loop_of_face_step(ptr noundef) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.sqrt.f32(float) #6

declare void @BM_face_calc_center_mean(ptr noundef, ptr noundef) local_unnamed_addr #1

declare ptr @mesh_get_derived_final(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #1

declare zeroext i8 @BKE_paint_select_face_test(ptr noundef) local_unnamed_addr #1

declare zeroext i8 @modifiers_isPreview(ptr noundef) local_unnamed_addr #1

declare ptr @BKE_paint_get_active(ptr noundef) local_unnamed_addr #1

declare void @ED_sculpt_redraw_planes_get(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @draw_mesh_face_select(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @glColorMaterial(i32 noundef, i32 noundef) local_unnamed_addr #1

declare void @glMaterialfv(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define internal i32 @draw_dm_override_material_color(i32 %0, ptr nocapture readnone %1) #8 {
  ret i32 1
}

declare void @draw_mesh_paint(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @ob_wire_color_blend_theme_id(ptr noundef %0, float noundef nofpclass(nan inf) %1) unnamed_addr #0 {
  %3 = alloca [3 x float], align 4
  %4 = alloca [3 x float], align 4
  %5 = alloca [3 x float], align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %3) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #13
  call void @rgb_uchar_to_float(ptr noundef nonnull %3, ptr noundef %0) #13
  call void @UI_GetThemeColor3fv(i32 noundef 2, ptr noundef nonnull %4) #13
  call void @interp_v3_v3v3(ptr noundef nonnull %5, ptr noundef nonnull %4, ptr noundef nonnull %3, float noundef nofpclass(nan inf) %1) #13
  call void @glColor3fv(ptr noundef nonnull %5) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %3) #13
  ret void
}

declare zeroext i8 @BKE_paint_select_vert_test(ptr noundef) local_unnamed_addr #1

declare void @glColor3f(float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare void @rgb_uchar_to_float(ptr noundef, ptr noundef) local_unnamed_addr #1

declare i32 @BKE_mesh_mselect_active_get(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal void @drawSelectedVertices__mapFunc(ptr nocapture noundef %0, i32 noundef %1, ptr noundef %2, ptr nocapture readnone %3, ptr nocapture readnone %4) #0 {
  %6 = load ptr, ptr %0, align 8, !tbaa !320
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %struct.MVert, ptr %6, i64 %7, i32 2
  %9 = load i8, ptr %8, align 2, !tbaa !582
  %10 = and i8 %9, 16
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.drawDMVertSel_userData, ptr %0, i64 0, i32 1
  %14 = load i32, ptr %13, align 8, !tbaa !322
  %15 = icmp eq i32 %14, %1
  %16 = and i8 %9, 1
  %17 = select i1 %15, i8 2, i8 %16
  %18 = getelementptr inbounds %struct.drawDMVertSel_userData, ptr %0, i64 0, i32 3
  %19 = load i8, ptr %18, align 8, !tbaa !323
  %20 = icmp eq i8 %17, %19
  br i1 %20, label %25, label %21

21:                                               ; preds = %12
  %22 = zext i8 %17 to i64
  %23 = getelementptr inbounds %struct.drawDMVertSel_userData, ptr %0, i64 0, i32 2, i64 %22
  %24 = load ptr, ptr %23, align 8, !tbaa !49
  tail call void @glColor3ubv(ptr noundef %24) #13
  store i8 %17, ptr %18, align 8, !tbaa !323
  br label %25

25:                                               ; preds = %21, %12
  tail call void @glVertex3fv(ptr noundef %2) #13
  br label %26

26:                                               ; preds = %25, %5
  ret void
}

declare void @set_inverted_drawing(i32 noundef) local_unnamed_addr #1

declare void @glVertex2fv(ptr noundef) local_unnamed_addr #1

declare i32 @BKE_vfont_select_get(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @angle_to_mat2(ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare void @mul_m2v2(ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @BKE_displist_make_curveTypes(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #1

declare void @BKE_displist_make_mball(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @BKE_lattice_modifiers_calc(ptr noundef, ptr noundef) local_unnamed_addr #1

declare ptr @BKE_mesh_boundbox_get(ptr noundef) local_unnamed_addr #1

declare ptr @BKE_curve_boundbox_get(ptr noundef) local_unnamed_addr #1

declare ptr @BKE_armature_boundbox_get(ptr noundef) local_unnamed_addr #1

declare void @BKE_boundbox_calc_size_aabb(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @draw_bb_quadric(ptr noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #0 {
  %4 = alloca [3 x float], align 4
  %5 = alloca [3 x float], align 8
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #13
  %6 = tail call ptr @gluNewQuadric() #13
  tail call void @gluQuadricDrawStyle(ptr noundef %6, i32 noundef 100013) #13
  call void @BKE_boundbox_calc_size_aabb(ptr noundef %0, ptr noundef nonnull %4) #13
  %7 = icmp eq i8 %2, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  store <2 x float> zeroinitializer, ptr %5, align 8, !tbaa !44
  %9 = getelementptr inbounds float, ptr %5, i64 2
  store float 0.000000e+00, ptr %9, align 8, !tbaa !44
  br label %11

10:                                               ; preds = %3
  call void @BKE_boundbox_calc_center_aabb(ptr noundef %0, ptr noundef nonnull %5) #13
  br label %11

11:                                               ; preds = %10, %8
  call void @glPushMatrix() #13
  switch i8 %1, label %75 [
    i8 1, label %12
    i8 2, label %25
    i8 3, label %40
    i8 7, label %55
  ]

12:                                               ; preds = %11
  %13 = load float, ptr %4, align 4
  %14 = getelementptr inbounds [3 x float], ptr %4, i64 0, i64 1
  %15 = load float, ptr %14, align 4
  %16 = call fast float @llvm.maxnum.f32(float %13, float %15)
  %17 = getelementptr inbounds [3 x float], ptr %4, i64 0, i64 2
  %18 = load float, ptr %17, align 4, !tbaa !44
  %19 = call fast float @llvm.maxnum.f32(float %16, float %18)
  %20 = load float, ptr %5, align 8, !tbaa !44
  %21 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 1
  %22 = load float, ptr %21, align 4, !tbaa !44
  %23 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 2
  %24 = load float, ptr %23, align 8, !tbaa !44
  call void @glTranslatef(float noundef nofpclass(nan inf) %20, float noundef nofpclass(nan inf) %22, float noundef nofpclass(nan inf) %24) #13
  call void @glScalef(float noundef nofpclass(nan inf) %19, float noundef nofpclass(nan inf) %19, float noundef nofpclass(nan inf) %19) #13
  call void @gluSphere(ptr noundef %6, double noundef nofpclass(nan inf) 1.000000e+00, i32 noundef 8, i32 noundef 5) #13
  br label %75

25:                                               ; preds = %11
  %26 = load float, ptr %4, align 4
  %27 = getelementptr inbounds [3 x float], ptr %4, i64 0, i64 1
  %28 = load float, ptr %27, align 4
  %29 = call fast float @llvm.maxnum.f32(float %26, float %28)
  %30 = load float, ptr %5, align 8, !tbaa !44
  %31 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 1
  %32 = load float, ptr %31, align 4, !tbaa !44
  %33 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 2
  %34 = load float, ptr %33, align 8, !tbaa !44
  %35 = getelementptr inbounds [3 x float], ptr %4, i64 0, i64 2
  %36 = load float, ptr %35, align 4, !tbaa !44
  %37 = fsub fast float %34, %36
  call void @glTranslatef(float noundef nofpclass(nan inf) %30, float noundef nofpclass(nan inf) %32, float noundef nofpclass(nan inf) %37) #13
  %38 = load float, ptr %35, align 4, !tbaa !44
  %39 = fmul fast float %38, 2.000000e+00
  call void @glScalef(float noundef nofpclass(nan inf) %29, float noundef nofpclass(nan inf) %29, float noundef nofpclass(nan inf) %39) #13
  call void @gluCylinder(ptr noundef %6, double noundef nofpclass(nan inf) 1.000000e+00, double noundef nofpclass(nan inf) 1.000000e+00, double noundef nofpclass(nan inf) 1.000000e+00, i32 noundef 8, i32 noundef 1) #13
  br label %75

40:                                               ; preds = %11
  %41 = load float, ptr %4, align 4
  %42 = getelementptr inbounds [3 x float], ptr %4, i64 0, i64 1
  %43 = load float, ptr %42, align 4
  %44 = call fast float @llvm.maxnum.f32(float %41, float %43)
  %45 = load float, ptr %5, align 8, !tbaa !44
  %46 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 1
  %47 = load float, ptr %46, align 4, !tbaa !44
  %48 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 2
  %49 = load float, ptr %48, align 8, !tbaa !44
  %50 = getelementptr inbounds [3 x float], ptr %4, i64 0, i64 2
  %51 = load float, ptr %50, align 4, !tbaa !44
  %52 = fsub fast float %49, %51
  call void @glTranslatef(float noundef nofpclass(nan inf) %45, float noundef nofpclass(nan inf) %47, float noundef nofpclass(nan inf) %52) #13
  %53 = load float, ptr %50, align 4, !tbaa !44
  %54 = fmul fast float %53, 2.000000e+00
  call void @glScalef(float noundef nofpclass(nan inf) %44, float noundef nofpclass(nan inf) %44, float noundef nofpclass(nan inf) %54) #13
  call void @gluCylinder(ptr noundef %6, double noundef nofpclass(nan inf) 1.000000e+00, double noundef nofpclass(nan inf) 0.000000e+00, double noundef nofpclass(nan inf) 1.000000e+00, i32 noundef 8, i32 noundef 1) #13
  br label %75

55:                                               ; preds = %11
  %56 = load float, ptr %4, align 4
  %57 = getelementptr inbounds [3 x float], ptr %4, i64 0, i64 1
  %58 = load float, ptr %57, align 4
  %59 = call fast float @llvm.maxnum.f32(float %56, float %58)
  %60 = getelementptr inbounds [3 x float], ptr %4, i64 0, i64 2
  %61 = load float, ptr %60, align 4
  %62 = fcmp fast ogt float %61, %59
  %63 = fsub fast float %61, %59
  %64 = fmul fast float %63, 2.000000e+00
  %65 = select fast i1 %62, float %64, float 0.000000e+00
  %66 = load float, ptr %5, align 8, !tbaa !44
  %67 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 1
  %68 = load float, ptr %67, align 4, !tbaa !44
  %69 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 2
  %70 = load float, ptr %69, align 8, !tbaa !44
  %71 = fmul fast float %65, 5.000000e-01
  %72 = fsub fast float %70, %71
  call void @glTranslatef(float noundef nofpclass(nan inf) %66, float noundef nofpclass(nan inf) %68, float noundef nofpclass(nan inf) %72) #13
  %73 = fpext float %59 to double
  %74 = fpext float %65 to double
  call void @gluCylinder(ptr noundef %6, double noundef nofpclass(nan inf) %73, double noundef nofpclass(nan inf) %73, double noundef nofpclass(nan inf) %74, i32 noundef 8, i32 noundef 1) #13
  call void @gluSphere(ptr noundef %6, double noundef nofpclass(nan inf) %73, i32 noundef 8, i32 noundef 4) #13
  call void @glTranslatef(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %65) #13
  call void @gluSphere(ptr noundef %6, double noundef nofpclass(nan inf) %73, i32 noundef 8, i32 noundef 4) #13
  br label %75

75:                                               ; preds = %11, %25, %55, %40, %12
  call void @glPopMatrix() #13
  call void @gluDeleteQuadric(ptr noundef %6) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #13
  ret void
}

declare void @BKE_boundbox_calc_center_aabb(ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @gluSphere(ptr noundef, double noundef nofpclass(nan inf), i32 noundef, i32 noundef) local_unnamed_addr #1

declare void @BKE_displist_normals_add(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @drawDispListsolid(ptr noundef readonly %0, ptr nocapture noundef readonly %1, i16 noundef signext %2, ptr noundef %3, i8 noundef zeroext %4) unnamed_addr #0 {
  %6 = alloca %struct.GPUVertexAttribs, align 4
  call void @llvm.lifetime.start.p0(i64 2564, ptr nonnull %6) #13
  %7 = icmp eq ptr %0, null
  br i1 %7, label %117, label %8

8:                                                ; preds = %5
  tail call void @glEnable(i32 noundef 2896) #13
  tail call void @glEnableClientState(i32 noundef 32884) #13
  %9 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 3
  %10 = load i16, ptr %9, align 8, !tbaa !75
  %11 = icmp eq i16 %10, 5
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  tail call void @glShadeModel(i32 noundef 7425) #13
  br label %13

13:                                               ; preds = %12, %8
  %14 = load ptr, ptr %0, align 8, !tbaa !49
  %15 = icmp eq ptr %14, null
  br i1 %15, label %116, label %16

16:                                               ; preds = %13
  %17 = icmp eq i8 %4, 0
  %18 = select i1 %17, ptr null, ptr %6
  %19 = and i16 %2, 2
  %20 = icmp eq i16 %19, 0
  br label %21

21:                                               ; preds = %16, %113
  %22 = phi ptr [ %14, %16 ], [ %114, %113 ]
  %23 = getelementptr inbounds %struct.DispList, ptr %22, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !444
  %25 = getelementptr inbounds %struct.DispList, ptr %22, i64 0, i32 9
  %26 = load ptr, ptr %25, align 8, !tbaa !355
  %27 = getelementptr inbounds %struct.DispList, ptr %22, i64 0, i32 2
  %28 = load i16, ptr %27, align 8, !tbaa !468
  %29 = sext i16 %28 to i32
  switch i32 %29, label %113 [
    i32 1, label %30
    i32 0, label %46
    i32 2, label %60
    i32 4, label %81
    i32 5, label %100
  ]

30:                                               ; preds = %21
  %31 = load i16, ptr %9, align 8, !tbaa !75
  %32 = icmp eq i16 %31, 3
  br i1 %32, label %33, label %113

33:                                               ; preds = %30
  call void @glDisable(i32 noundef 2896) #13
  br i1 %20, label %34, label %35

34:                                               ; preds = %33
  call void @glColor3ubv(ptr noundef %3) #13
  br label %35

35:                                               ; preds = %34, %33
  call void @glBegin(i32 noundef 3) #13
  %36 = getelementptr inbounds %struct.DispList, ptr %22, i64 0, i32 5
  %37 = load i32, ptr %36, align 8, !tbaa !467
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %35, %39
  %40 = phi i32 [ %42, %39 ], [ %37, %35 ]
  %41 = phi ptr [ %43, %39 ], [ %24, %35 ]
  call void @glVertex3fv(ptr noundef %41) #13
  %42 = add nsw i32 %40, -1
  %43 = getelementptr inbounds float, ptr %41, i64 3
  %44 = icmp eq i32 %42, 0
  br i1 %44, label %45, label %39, !llvm.loop !584

45:                                               ; preds = %39, %35
  call void @glEnd() #13
  call void @glEnable(i32 noundef 2896) #13
  br label %113

46:                                               ; preds = %21
  %47 = load i16, ptr %9, align 8, !tbaa !75
  %48 = icmp eq i16 %47, 3
  br i1 %48, label %49, label %113

49:                                               ; preds = %46
  call void @glDisable(i32 noundef 2896) #13
  call void @glBegin(i32 noundef 2) #13
  %50 = getelementptr inbounds %struct.DispList, ptr %22, i64 0, i32 5
  %51 = load i32, ptr %50, align 8, !tbaa !467
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %49, %53
  %54 = phi i32 [ %56, %53 ], [ %51, %49 ]
  %55 = phi ptr [ %57, %53 ], [ %24, %49 ]
  call void @glVertex3fv(ptr noundef %55) #13
  %56 = add nsw i32 %54, -1
  %57 = getelementptr inbounds float, ptr %55, i64 3
  %58 = icmp eq i32 %56, 0
  br i1 %58, label %59, label %53, !llvm.loop !585

59:                                               ; preds = %53, %49
  call void @glEnd() #13
  call void @glEnable(i32 noundef 2896) #13
  br label %113

60:                                               ; preds = %21
  %61 = getelementptr inbounds %struct.DispList, ptr %22, i64 0, i32 10
  %62 = load ptr, ptr %61, align 8, !tbaa !475
  %63 = icmp eq ptr %62, null
  br i1 %63, label %113, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.DispList, ptr %22, i64 0, i32 6
  %66 = load i16, ptr %65, align 4, !tbaa !586
  %67 = sext i16 %66 to i32
  %68 = add nsw i32 %67, 1
  %69 = call i32 @GPU_enable_material(i32 noundef %68, ptr noundef %18) #13
  %70 = getelementptr inbounds %struct.DispList, ptr %22, i64 0, i32 7
  %71 = load i16, ptr %70, align 2, !tbaa !587
  %72 = and i16 %71, 1
  %73 = icmp eq i16 %72, 0
  %74 = select i1 %73, i32 7424, i32 7425
  call void @glShadeModel(i32 noundef %74) #13
  call void @glEnableClientState(i32 noundef 32885) #13
  %75 = load ptr, ptr %23, align 8, !tbaa !444
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef %75) #13
  %76 = load ptr, ptr %25, align 8, !tbaa !355
  call void @glNormalPointer(i32 noundef 5126, i32 noundef 0, ptr noundef %76) #13
  %77 = getelementptr inbounds %struct.DispList, ptr %22, i64 0, i32 12
  %78 = load i32, ptr %77, align 4, !tbaa !588
  %79 = shl nsw i32 %78, 2
  %80 = load ptr, ptr %61, align 8, !tbaa !475
  call void @glDrawElements(i32 noundef 7, i32 noundef %79, i32 noundef 5125, ptr noundef %80) #13
  call void @glDisableClientState(i32 noundef 32885) #13
  br label %113

81:                                               ; preds = %21
  %82 = getelementptr inbounds %struct.DispList, ptr %22, i64 0, i32 6
  %83 = load i16, ptr %82, align 4, !tbaa !586
  %84 = sext i16 %83 to i32
  %85 = add nsw i32 %84, 1
  %86 = call i32 @GPU_enable_material(i32 noundef %85, ptr noundef %18) #13
  %87 = load ptr, ptr %23, align 8, !tbaa !444
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef %87) #13
  %88 = load i1, ptr @index3_nors_incr, align 1
  br i1 %88, label %91, label %89

89:                                               ; preds = %81
  call void @glEnableClientState(i32 noundef 32885) #13
  %90 = load ptr, ptr %25, align 8, !tbaa !355
  call void @glNormalPointer(i32 noundef 5126, i32 noundef 0, ptr noundef %90) #13
  br label %92

91:                                               ; preds = %81
  call void @glNormal3fv(ptr noundef %26) #13
  br label %92

92:                                               ; preds = %91, %89
  %93 = getelementptr inbounds %struct.DispList, ptr %22, i64 0, i32 4
  %94 = load i32, ptr %93, align 4, !tbaa !466
  %95 = mul nsw i32 %94, 3
  %96 = getelementptr inbounds %struct.DispList, ptr %22, i64 0, i32 10
  %97 = load ptr, ptr %96, align 8, !tbaa !475
  call void @glDrawElements(i32 noundef 4, i32 noundef %95, i32 noundef 5125, ptr noundef %97) #13
  %98 = load i1, ptr @index3_nors_incr, align 1
  br i1 %98, label %113, label %99

99:                                               ; preds = %92
  call void @glDisableClientState(i32 noundef 32885) #13
  br label %113

100:                                              ; preds = %21
  %101 = getelementptr inbounds %struct.DispList, ptr %22, i64 0, i32 6
  %102 = load i16, ptr %101, align 4, !tbaa !586
  %103 = sext i16 %102 to i32
  %104 = add nsw i32 %103, 1
  %105 = call i32 @GPU_enable_material(i32 noundef %104, ptr noundef %18) #13
  call void @glEnableClientState(i32 noundef 32885) #13
  %106 = load ptr, ptr %23, align 8, !tbaa !444
  call void @glVertexPointer(i32 noundef 3, i32 noundef 5126, i32 noundef 0, ptr noundef %106) #13
  %107 = load ptr, ptr %25, align 8, !tbaa !355
  call void @glNormalPointer(i32 noundef 5126, i32 noundef 0, ptr noundef %107) #13
  %108 = getelementptr inbounds %struct.DispList, ptr %22, i64 0, i32 4
  %109 = load i32, ptr %108, align 4, !tbaa !466
  %110 = shl nsw i32 %109, 2
  %111 = getelementptr inbounds %struct.DispList, ptr %22, i64 0, i32 10
  %112 = load ptr, ptr %111, align 8, !tbaa !475
  call void @glDrawElements(i32 noundef 7, i32 noundef %110, i32 noundef 5125, ptr noundef %112) #13
  call void @glDisableClientState(i32 noundef 32885) #13
  br label %113

113:                                              ; preds = %92, %99, %60, %64, %46, %59, %30, %45, %21, %100
  %114 = load ptr, ptr %22, align 8, !tbaa !49
  %115 = icmp eq ptr %114, null
  br i1 %115, label %116, label %21, !llvm.loop !589

116:                                              ; preds = %113, %13
  call void @glDisableClientState(i32 noundef 32884) #13
  call void @glShadeModel(i32 noundef 7424) #13
  call void @glDisable(i32 noundef 2896) #13
  call void @glFrontFace(i32 noundef 2305) #13
  br label %117

117:                                              ; preds = %5, %116
  call void @llvm.lifetime.end.p0(i64 2564, ptr nonnull %6) #13
  ret void
}

declare void @glNormalPointer(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

declare void @glNormal3fv(ptr noundef) local_unnamed_addr #1

declare ptr @BKE_curve_vert_active_get(ptr noundef) local_unnamed_addr #1

declare void @glDepthFunc(i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @drawhandlesN(ptr nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #0 {
  %4 = alloca [6 x [3 x i8]], align 16
  %5 = getelementptr inbounds %struct.Nurb, ptr %0, i64 0, i32 4
  %6 = load i16, ptr %5, align 4, !tbaa !368
  %7 = icmp ne i16 %6, 0
  %8 = icmp ne i8 %2, 0
  %9 = or i1 %8, %7
  br i1 %9, label %90, label %10

10:                                               ; preds = %3
  tail call void @glBegin(i32 noundef 1) #13
  %11 = getelementptr inbounds %struct.Nurb, ptr %0, i64 0, i32 2
  %12 = load i16, ptr %11, align 8, !tbaa !363
  %13 = icmp eq i16 %12, 1
  br i1 %13, label %14, label %89

14:                                               ; preds = %10
  call void @llvm.lifetime.start.p0(i64 18, ptr nonnull %4) #13
  %15 = icmp eq i8 %1, 0
  %16 = select i1 %15, i32 54, i32 59
  call void @UI_GetThemeColor3ubv(i32 noundef %16, ptr noundef nonnull %4) #13
  %17 = add nuw nsw i32 %16, 1
  %18 = getelementptr inbounds [6 x [3 x i8]], ptr %4, i64 0, i64 1
  call void @UI_GetThemeColor3ubv(i32 noundef %17, ptr noundef nonnull %18) #13
  %19 = add nuw nsw i32 %16, 2
  %20 = getelementptr inbounds [6 x [3 x i8]], ptr %4, i64 0, i64 2
  call void @UI_GetThemeColor3ubv(i32 noundef %19, ptr noundef nonnull %20) #13
  %21 = add nuw nsw i32 %16, 3
  %22 = getelementptr inbounds [6 x [3 x i8]], ptr %4, i64 0, i64 3
  call void @UI_GetThemeColor3ubv(i32 noundef %21, ptr noundef nonnull %22) #13
  %23 = add nuw nsw i32 %16, 4
  %24 = getelementptr inbounds [6 x [3 x i8]], ptr %4, i64 0, i64 4
  call void @UI_GetThemeColor3ubv(i32 noundef %23, ptr noundef nonnull %24) #13
  %25 = add nuw nsw i32 %16, 5
  %26 = getelementptr inbounds [6 x [3 x i8]], ptr %4, i64 0, i64 5
  call void @UI_GetThemeColor3ubv(i32 noundef %25, ptr noundef nonnull %26) #13
  %27 = getelementptr inbounds %struct.Nurb, ptr %0, i64 0, i32 6
  %28 = load i32, ptr %27, align 8, !tbaa !369
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %88, label %30

30:                                               ; preds = %14
  %31 = getelementptr inbounds %struct.Nurb, ptr %0, i64 0, i32 18
  %32 = load ptr, ptr %31, align 8, !tbaa !370
  br label %33

33:                                               ; preds = %30, %85
  %34 = phi i32 [ %36, %85 ], [ %28, %30 ]
  %35 = phi ptr [ %86, %85 ], [ %32, %30 ]
  %36 = add nsw i32 %34, -1
  %37 = getelementptr inbounds %struct.BezTriple, ptr %35, i64 0, i32 10
  %38 = load i8, ptr %37, align 2, !tbaa !371
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %85

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.BezTriple, ptr %35, i64 0, i32 8
  %42 = load i8, ptr %41, align 4, !tbaa !590
  %43 = and i8 %42, 1
  %44 = icmp eq i8 %43, %1
  br i1 %44, label %45, label %58

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.BezTriple, ptr %35, i64 0, i32 5
  %47 = load i8, ptr %46, align 1, !tbaa !591
  %48 = call i8 @llvm.umin.i8(i8 %47, i8 5)
  %49 = zext i8 %48 to i64
  %50 = getelementptr inbounds [6 x [3 x i8]], ptr %4, i64 0, i64 %49
  call void @glColor3ubv(ptr noundef nonnull %50) #13
  call void @glVertex3fv(ptr noundef nonnull %35) #13
  %51 = getelementptr inbounds float, ptr %35, i64 3
  call void @glVertex3fv(ptr noundef nonnull %51) #13
  %52 = getelementptr inbounds %struct.BezTriple, ptr %35, i64 0, i32 6
  %53 = load i8, ptr %52, align 2, !tbaa !592
  %54 = call i8 @llvm.umin.i8(i8 %53, i8 5)
  %55 = zext i8 %54 to i64
  %56 = getelementptr inbounds [6 x [3 x i8]], ptr %4, i64 0, i64 %55
  call void @glColor3ubv(ptr noundef nonnull %56) #13
  call void @glVertex3fv(ptr noundef nonnull %51) #13
  %57 = getelementptr inbounds float, ptr %35, i64 6
  br label %83

58:                                               ; preds = %40
  %59 = getelementptr inbounds %struct.BezTriple, ptr %35, i64 0, i32 7
  %60 = load i8, ptr %59, align 1, !tbaa !593
  %61 = and i8 %60, 1
  %62 = icmp eq i8 %61, %1
  br i1 %62, label %63, label %70

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.BezTriple, ptr %35, i64 0, i32 5
  %65 = load i8, ptr %64, align 1, !tbaa !591
  %66 = call i8 @llvm.umin.i8(i8 %65, i8 5)
  %67 = zext i8 %66 to i64
  %68 = getelementptr inbounds [6 x [3 x i8]], ptr %4, i64 0, i64 %67
  call void @glColor3ubv(ptr noundef nonnull %68) #13
  call void @glVertex3fv(ptr noundef nonnull %35) #13
  %69 = getelementptr inbounds float, ptr %35, i64 3
  br label %83

70:                                               ; preds = %58
  %71 = getelementptr inbounds %struct.BezTriple, ptr %35, i64 0, i32 9
  %72 = load i8, ptr %71, align 1, !tbaa !594
  %73 = and i8 %72, 1
  %74 = icmp eq i8 %73, %1
  br i1 %74, label %75, label %85

75:                                               ; preds = %70
  %76 = getelementptr inbounds [3 x [3 x float]], ptr %35, i64 0, i64 1
  %77 = getelementptr inbounds %struct.BezTriple, ptr %35, i64 0, i32 6
  %78 = load i8, ptr %77, align 2, !tbaa !592
  %79 = call i8 @llvm.umin.i8(i8 %78, i8 5)
  %80 = zext i8 %79 to i64
  %81 = getelementptr inbounds [6 x [3 x i8]], ptr %4, i64 0, i64 %80
  call void @glColor3ubv(ptr noundef nonnull %81) #13
  call void @glVertex3fv(ptr noundef nonnull %76) #13
  %82 = getelementptr inbounds [3 x [3 x float]], ptr %35, i64 0, i64 2
  br label %83

83:                                               ; preds = %63, %75, %45
  %84 = phi ptr [ %57, %45 ], [ %82, %75 ], [ %69, %63 ]
  call void @glVertex3fv(ptr noundef nonnull %84) #13
  br label %85

85:                                               ; preds = %83, %70, %33
  %86 = getelementptr inbounds %struct.BezTriple, ptr %35, i64 1
  %87 = icmp eq i32 %36, 0
  br i1 %87, label %88, label %33, !llvm.loop !595

88:                                               ; preds = %85, %14
  call void @llvm.lifetime.end.p0(i64 18, ptr nonnull %4) #13
  br label %89

89:                                               ; preds = %88, %10
  call void @glEnd() #13
  br label %90

90:                                               ; preds = %3, %89
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @draw_editnurb_splines(ptr nocapture readonly %0, ptr noundef readonly %1, i8 noundef zeroext %2) unnamed_addr #0 {
  %4 = icmp eq ptr %1, null
  br i1 %4, label %326, label %5

5:                                                ; preds = %3
  %6 = icmp eq i8 %2, 0
  %7 = getelementptr inbounds %struct.Curve, ptr %0, i64 0, i32 31
  br label %8

8:                                                ; preds = %5, %322
  %9 = phi ptr [ %1, %5 ], [ %324, %322 ]
  %10 = phi i32 [ 0, %5 ], [ %323, %322 ]
  %11 = getelementptr inbounds %struct.Nurb, ptr %9, i64 0, i32 4
  %12 = load i16, ptr %11, align 4, !tbaa !368
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %322

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.Nurb, ptr %9, i64 0, i32 2
  %16 = load i16, ptr %15, align 8, !tbaa !363
  %17 = sext i16 %16 to i32
  switch i32 %17, label %322 [
    i32 0, label %18
    i32 4, label %83
  ]

18:                                               ; preds = %14
  br i1 %6, label %19, label %53

19:                                               ; preds = %18
  %20 = load i32, ptr %7, align 4, !tbaa !367
  %21 = icmp eq i32 %10, %20
  br i1 %21, label %22, label %53

22:                                               ; preds = %19
  tail call void @UI_ThemeColor(i32 noundef 64) #13
  tail call void @glLineWidth(float noundef nofpclass(nan inf) 2.000000e+00) #13
  %23 = getelementptr inbounds %struct.Nurb, ptr %9, i64 0, i32 7
  %24 = load i32, ptr %23, align 4, !tbaa !596
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %52

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.Nurb, ptr %9, i64 0, i32 17
  %28 = load ptr, ptr %27, align 8, !tbaa !597
  %29 = getelementptr inbounds %struct.Nurb, ptr %9, i64 0, i32 13
  %30 = getelementptr inbounds %struct.Nurb, ptr %9, i64 0, i32 6
  br label %31

31:                                               ; preds = %47, %26
  %32 = phi i32 [ 0, %26 ], [ %49, %47 ]
  %33 = phi ptr [ %28, %26 ], [ %48, %47 ]
  %34 = load i16, ptr %29, align 4, !tbaa !598
  %35 = and i16 %34, 1
  %36 = icmp eq i16 %35, 0
  %37 = select i1 %36, i32 3, i32 2
  tail call void @glBegin(i32 noundef %37) #13
  %38 = load i32, ptr %30, align 8, !tbaa !369
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %31, %40
  %41 = phi i32 [ %43, %40 ], [ 0, %31 ]
  %42 = phi ptr [ %44, %40 ], [ %33, %31 ]
  tail call void @glVertex3fv(ptr noundef %42) #13
  %43 = add nuw nsw i32 %41, 1
  %44 = getelementptr inbounds %struct.BPoint, ptr %42, i64 1
  %45 = load i32, ptr %30, align 8, !tbaa !369
  %46 = icmp slt i32 %43, %45
  br i1 %46, label %40, label %47, !llvm.loop !599

47:                                               ; preds = %40, %31
  %48 = phi ptr [ %33, %31 ], [ %44, %40 ]
  tail call void @glEnd() #13
  %49 = add nuw nsw i32 %32, 1
  %50 = load i32, ptr %23, align 4, !tbaa !596
  %51 = icmp slt i32 %49, %50
  br i1 %51, label %31, label %52, !llvm.loop !600

52:                                               ; preds = %47, %22
  tail call void @glColor3ub(i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #13
  tail call void @glLineWidth(float noundef nofpclass(nan inf) 1.000000e+00) #13
  br label %53

53:                                               ; preds = %52, %19, %18
  tail call void @UI_ThemeColor(i32 noundef 50) #13
  %54 = getelementptr inbounds %struct.Nurb, ptr %9, i64 0, i32 7
  %55 = load i32, ptr %54, align 4, !tbaa !596
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %57, label %322

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.Nurb, ptr %9, i64 0, i32 17
  %59 = load ptr, ptr %58, align 8, !tbaa !597
  %60 = getelementptr inbounds %struct.Nurb, ptr %9, i64 0, i32 13
  %61 = getelementptr inbounds %struct.Nurb, ptr %9, i64 0, i32 6
  br label %62

62:                                               ; preds = %57, %78
  %63 = phi ptr [ %59, %57 ], [ %79, %78 ]
  %64 = phi i32 [ 0, %57 ], [ %80, %78 ]
  %65 = load i16, ptr %60, align 4, !tbaa !598
  %66 = and i16 %65, 1
  %67 = icmp eq i16 %66, 0
  %68 = select i1 %67, i32 3, i32 2
  tail call void @glBegin(i32 noundef %68) #13
  %69 = load i32, ptr %61, align 8, !tbaa !369
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %78

71:                                               ; preds = %62, %71
  %72 = phi ptr [ %75, %71 ], [ %63, %62 ]
  %73 = phi i32 [ %74, %71 ], [ 0, %62 ]
  tail call void @glVertex3fv(ptr noundef %72) #13
  %74 = add nuw nsw i32 %73, 1
  %75 = getelementptr inbounds %struct.BPoint, ptr %72, i64 1
  %76 = load i32, ptr %61, align 8, !tbaa !369
  %77 = icmp slt i32 %74, %76
  br i1 %77, label %71, label %78, !llvm.loop !601

78:                                               ; preds = %71, %62
  %79 = phi ptr [ %63, %62 ], [ %75, %71 ]
  tail call void @glEnd() #13
  %80 = add nuw nsw i32 %64, 1
  %81 = load i32, ptr %54, align 4, !tbaa !596
  %82 = icmp slt i32 %80, %81
  br i1 %82, label %62, label %322, !llvm.loop !602

83:                                               ; preds = %14
  br i1 %6, label %84, label %169

84:                                               ; preds = %83
  %85 = load i32, ptr %7, align 4, !tbaa !367
  %86 = icmp eq i32 %10, %85
  br i1 %86, label %87, label %169

87:                                               ; preds = %84
  tail call void @UI_ThemeColor(i32 noundef 64) #13
  tail call void @glLineWidth(float noundef nofpclass(nan inf) 2.000000e+00) #13
  tail call void @glBegin(i32 noundef 1) #13
  %88 = getelementptr inbounds %struct.Nurb, ptr %9, i64 0, i32 17
  %89 = getelementptr inbounds %struct.Nurb, ptr %9, i64 0, i32 7
  %90 = load i32, ptr %89, align 4, !tbaa !596
  %91 = icmp sgt i32 %90, 0
  br i1 %91, label %92, label %168

92:                                               ; preds = %87
  %93 = getelementptr inbounds %struct.Nurb, ptr %9, i64 0, i32 6
  %94 = load i32, ptr %93, align 8, !tbaa !369
  %95 = icmp sgt i32 %94, 1
  br i1 %95, label %96, label %130

96:                                               ; preds = %92
  %97 = load ptr, ptr %88, align 8, !tbaa !597
  br label %100

98:                                               ; preds = %125
  %99 = load i32, ptr %93, align 8, !tbaa !369
  br label %100

100:                                              ; preds = %98, %96
  %101 = phi i32 [ %99, %98 ], [ %94, %96 ]
  %102 = phi i32 [ %126, %98 ], [ %90, %96 ]
  %103 = phi ptr [ %127, %98 ], [ %97, %96 ]
  %104 = phi i32 [ %128, %98 ], [ 0, %96 ]
  %105 = getelementptr inbounds %struct.BPoint, ptr %103, i64 1
  %106 = icmp sgt i32 %101, 1
  br i1 %106, label %107, label %125

107:                                              ; preds = %100, %120
  %108 = phi i32 [ %111, %120 ], [ %101, %100 ]
  %109 = phi ptr [ %121, %120 ], [ %105, %100 ]
  %110 = phi ptr [ %109, %120 ], [ %103, %100 ]
  %111 = add nsw i32 %108, -1
  %112 = getelementptr inbounds %struct.BPoint, ptr %110, i64 1, i32 4
  %113 = load i16, ptr %112, align 2, !tbaa !603
  %114 = icmp eq i16 %113, 0
  br i1 %114, label %115, label %120

115:                                              ; preds = %107
  %116 = getelementptr inbounds %struct.BPoint, ptr %110, i64 0, i32 4
  %117 = load i16, ptr %116, align 2, !tbaa !603
  %118 = icmp eq i16 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %115
  tail call void @glVertex3fv(ptr noundef nonnull %109) #13
  tail call void @glVertex3fv(ptr noundef nonnull %110) #13
  br label %120

120:                                              ; preds = %119, %115, %107
  %121 = getelementptr inbounds %struct.BPoint, ptr %109, i64 1
  %122 = icmp ugt i32 %108, 2
  br i1 %122, label %107, label %123, !llvm.loop !605

123:                                              ; preds = %120
  %124 = load i32, ptr %89, align 4, !tbaa !596
  br label %125

125:                                              ; preds = %123, %100
  %126 = phi i32 [ %102, %100 ], [ %124, %123 ]
  %127 = phi ptr [ %105, %100 ], [ %121, %123 ]
  %128 = add nuw nsw i32 %104, 1
  %129 = icmp slt i32 %128, %126
  br i1 %129, label %98, label %130, !llvm.loop !606

130:                                              ; preds = %125, %92
  %131 = phi i32 [ %90, %92 ], [ %126, %125 ]
  %132 = icmp sgt i32 %131, 1
  br i1 %132, label %133, label %168

133:                                              ; preds = %130
  %134 = load i32, ptr %93, align 8, !tbaa !369
  %135 = icmp sgt i32 %134, 0
  br i1 %135, label %136, label %168

136:                                              ; preds = %133
  %137 = zext i32 %134 to i64
  br label %138

138:                                              ; preds = %163, %136
  %139 = phi i32 [ %134, %136 ], [ %164, %163 ]
  %140 = phi i64 [ 0, %136 ], [ %165, %163 ]
  %141 = load i32, ptr %89, align 4, !tbaa !596
  %142 = icmp sgt i32 %141, 1
  br i1 %142, label %143, label %163

143:                                              ; preds = %138
  %144 = load ptr, ptr %88, align 8, !tbaa !597
  %145 = getelementptr inbounds %struct.BPoint, ptr %144, i64 %140
  br label %146

146:                                              ; preds = %159, %143
  %147 = phi i32 [ %150, %159 ], [ %141, %143 ]
  %148 = phi ptr [ %149, %159 ], [ %145, %143 ]
  %149 = getelementptr inbounds %struct.BPoint, ptr %148, i64 %137
  %150 = add nsw i32 %147, -1
  %151 = getelementptr inbounds %struct.BPoint, ptr %148, i64 %137, i32 4
  %152 = load i16, ptr %151, align 2, !tbaa !603
  %153 = icmp eq i16 %152, 0
  br i1 %153, label %154, label %159

154:                                              ; preds = %146
  %155 = getelementptr inbounds %struct.BPoint, ptr %148, i64 0, i32 4
  %156 = load i16, ptr %155, align 2, !tbaa !603
  %157 = icmp eq i16 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %154
  tail call void @glVertex3fv(ptr noundef nonnull %149) #13
  tail call void @glVertex3fv(ptr noundef nonnull %148) #13
  br label %159

159:                                              ; preds = %158, %154, %146
  %160 = icmp ugt i32 %147, 2
  br i1 %160, label %146, label %161, !llvm.loop !608

161:                                              ; preds = %159
  %162 = load i32, ptr %93, align 8, !tbaa !369
  br label %163

163:                                              ; preds = %161, %138
  %164 = phi i32 [ %162, %161 ], [ %139, %138 ]
  %165 = add nuw nsw i64 %140, 1
  %166 = sext i32 %164 to i64
  %167 = icmp slt i64 %165, %166
  br i1 %167, label %138, label %168, !llvm.loop !609

168:                                              ; preds = %163, %87, %130, %133
  tail call void @glEnd() #13
  tail call void @glColor3ub(i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #13
  tail call void @glLineWidth(float noundef nofpclass(nan inf) 1.000000e+00) #13
  br label %169

169:                                              ; preds = %168, %84, %83
  %170 = getelementptr inbounds %struct.Nurb, ptr %9, i64 0, i32 17
  %171 = getelementptr inbounds %struct.Nurb, ptr %9, i64 0, i32 7
  %172 = load i32, ptr %171, align 4, !tbaa !596
  %173 = icmp sgt i32 %172, 0
  br i1 %173, label %174, label %322

174:                                              ; preds = %169
  %175 = getelementptr inbounds %struct.Nurb, ptr %9, i64 0, i32 6
  %176 = load i32, ptr %175, align 8, !tbaa !369
  %177 = icmp sgt i32 %176, 1
  br i1 %177, label %178, label %247

178:                                              ; preds = %174
  %179 = load ptr, ptr %170, align 8, !tbaa !597
  br label %182

180:                                              ; preds = %242
  %181 = load i32, ptr %175, align 8, !tbaa !369
  br label %182

182:                                              ; preds = %180, %178
  %183 = phi i32 [ %181, %180 ], [ %176, %178 ]
  %184 = phi ptr [ %243, %180 ], [ %179, %178 ]
  %185 = phi i32 [ %244, %180 ], [ 0, %178 ]
  %186 = getelementptr inbounds %struct.BPoint, ptr %184, i64 1
  %187 = icmp sgt i32 %183, 1
  br i1 %187, label %188, label %242

188:                                              ; preds = %182
  %189 = add nsw i32 %183, -1
  br i1 %6, label %190, label %216

190:                                              ; preds = %188, %212
  %191 = phi i32 [ %214, %212 ], [ %189, %188 ]
  %192 = phi ptr [ %213, %212 ], [ %186, %188 ]
  %193 = phi ptr [ %192, %212 ], [ %184, %188 ]
  %194 = getelementptr inbounds %struct.BPoint, ptr %193, i64 1, i32 4
  %195 = load i16, ptr %194, align 2, !tbaa !603
  %196 = icmp eq i16 %195, 0
  br i1 %196, label %197, label %212

197:                                              ; preds = %190
  %198 = getelementptr inbounds %struct.BPoint, ptr %193, i64 0, i32 4
  %199 = load i16, ptr %198, align 2, !tbaa !603
  %200 = icmp eq i16 %199, 0
  br i1 %200, label %201, label %212

201:                                              ; preds = %197
  %202 = getelementptr inbounds %struct.BPoint, ptr %193, i64 1, i32 3
  %203 = load i16, ptr %202, align 4, !tbaa !610
  %204 = and i16 %203, 1
  %205 = icmp eq i16 %204, 0
  br i1 %205, label %211, label %206

206:                                              ; preds = %201
  %207 = getelementptr inbounds %struct.BPoint, ptr %193, i64 0, i32 3
  %208 = load i16, ptr %207, align 4, !tbaa !610
  %209 = and i16 %208, 1
  %210 = icmp eq i16 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %206, %201
  tail call void @UI_ThemeColor(i32 noundef 50) #13
  tail call void @glBegin(i32 noundef 3) #13
  tail call void @glVertex3fv(ptr noundef nonnull %192) #13
  tail call void @glVertex3fv(ptr noundef nonnull %193) #13
  tail call void @glEnd() #13
  br label %212

212:                                              ; preds = %211, %206, %197, %190
  %213 = getelementptr inbounds %struct.BPoint, ptr %192, i64 1
  %214 = add nsw i32 %191, -1
  %215 = icmp sgt i32 %191, 1
  br i1 %215, label %190, label %242, !llvm.loop !611

216:                                              ; preds = %188, %238
  %217 = phi i32 [ %240, %238 ], [ %189, %188 ]
  %218 = phi ptr [ %239, %238 ], [ %186, %188 ]
  %219 = phi ptr [ %218, %238 ], [ %184, %188 ]
  %220 = getelementptr inbounds %struct.BPoint, ptr %219, i64 1, i32 4
  %221 = load i16, ptr %220, align 2, !tbaa !603
  %222 = icmp eq i16 %221, 0
  br i1 %222, label %223, label %238

223:                                              ; preds = %216
  %224 = getelementptr inbounds %struct.BPoint, ptr %219, i64 0, i32 4
  %225 = load i16, ptr %224, align 2, !tbaa !603
  %226 = icmp eq i16 %225, 0
  br i1 %226, label %227, label %238

227:                                              ; preds = %223
  %228 = getelementptr inbounds %struct.BPoint, ptr %219, i64 1, i32 3
  %229 = load i16, ptr %228, align 4, !tbaa !610
  %230 = and i16 %229, 1
  %231 = icmp eq i16 %230, 0
  br i1 %231, label %238, label %232

232:                                              ; preds = %227
  %233 = getelementptr inbounds %struct.BPoint, ptr %219, i64 0, i32 3
  %234 = load i16, ptr %233, align 4, !tbaa !610
  %235 = and i16 %234, 1
  %236 = icmp eq i16 %235, 0
  br i1 %236, label %238, label %237

237:                                              ; preds = %232
  tail call void @UI_ThemeColor(i32 noundef 52) #13
  tail call void @glBegin(i32 noundef 3) #13
  tail call void @glVertex3fv(ptr noundef nonnull %218) #13
  tail call void @glVertex3fv(ptr noundef nonnull %219) #13
  tail call void @glEnd() #13
  br label %238

238:                                              ; preds = %237, %232, %227, %223, %216
  %239 = getelementptr inbounds %struct.BPoint, ptr %218, i64 1
  %240 = add nsw i32 %217, -1
  %241 = icmp sgt i32 %217, 1
  br i1 %241, label %216, label %242, !llvm.loop !611

242:                                              ; preds = %238, %212, %182
  %243 = phi ptr [ %186, %182 ], [ %213, %212 ], [ %239, %238 ]
  %244 = add nuw nsw i32 %185, 1
  %245 = load i32, ptr %171, align 4, !tbaa !596
  %246 = icmp slt i32 %244, %245
  br i1 %246, label %180, label %247, !llvm.loop !612

247:                                              ; preds = %242, %174
  %248 = phi i32 [ %172, %174 ], [ %245, %242 ]
  %249 = icmp sgt i32 %248, 1
  br i1 %249, label %250, label %322

250:                                              ; preds = %247
  %251 = getelementptr inbounds %struct.Nurb, ptr %9, i64 0, i32 6
  %252 = load i32, ptr %251, align 8, !tbaa !369
  %253 = icmp sgt i32 %252, 0
  br i1 %253, label %254, label %322

254:                                              ; preds = %250
  %255 = zext i32 %252 to i64
  br label %256

256:                                              ; preds = %254, %317
  %257 = phi i64 [ 0, %254 ], [ %318, %317 ]
  %258 = load i32, ptr %171, align 4, !tbaa !596
  %259 = icmp sgt i32 %258, 1
  br i1 %259, label %260, label %317

260:                                              ; preds = %256
  %261 = add nsw i32 %258, -1
  %262 = load ptr, ptr %170, align 8, !tbaa !597
  %263 = getelementptr inbounds %struct.BPoint, ptr %262, i64 %257
  %264 = getelementptr inbounds %struct.BPoint, ptr %263, i64 %255
  br i1 %6, label %265, label %291

265:                                              ; preds = %260, %287
  %266 = phi i32 [ %289, %287 ], [ %261, %260 ]
  %267 = phi ptr [ %288, %287 ], [ %264, %260 ]
  %268 = phi ptr [ %267, %287 ], [ %263, %260 ]
  %269 = getelementptr inbounds %struct.BPoint, ptr %268, i64 %255, i32 4
  %270 = load i16, ptr %269, align 2, !tbaa !603
  %271 = icmp eq i16 %270, 0
  br i1 %271, label %272, label %287

272:                                              ; preds = %265
  %273 = getelementptr inbounds %struct.BPoint, ptr %268, i64 0, i32 4
  %274 = load i16, ptr %273, align 2, !tbaa !603
  %275 = icmp eq i16 %274, 0
  br i1 %275, label %276, label %287

276:                                              ; preds = %272
  %277 = getelementptr inbounds %struct.BPoint, ptr %268, i64 %255, i32 3
  %278 = load i16, ptr %277, align 4, !tbaa !610
  %279 = and i16 %278, 1
  %280 = icmp eq i16 %279, 0
  br i1 %280, label %286, label %281

281:                                              ; preds = %276
  %282 = getelementptr inbounds %struct.BPoint, ptr %268, i64 0, i32 3
  %283 = load i16, ptr %282, align 4, !tbaa !610
  %284 = and i16 %283, 1
  %285 = icmp eq i16 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %281, %276
  tail call void @UI_ThemeColor(i32 noundef 51) #13
  tail call void @glBegin(i32 noundef 3) #13
  tail call void @glVertex3fv(ptr noundef nonnull %267) #13
  tail call void @glVertex3fv(ptr noundef nonnull %268) #13
  tail call void @glEnd() #13
  br label %287

287:                                              ; preds = %286, %281, %272, %265
  %288 = getelementptr inbounds %struct.BPoint, ptr %267, i64 %255
  %289 = add nsw i32 %266, -1
  %290 = icmp sgt i32 %266, 1
  br i1 %290, label %265, label %317, !llvm.loop !613

291:                                              ; preds = %260, %313
  %292 = phi i32 [ %315, %313 ], [ %261, %260 ]
  %293 = phi ptr [ %314, %313 ], [ %264, %260 ]
  %294 = phi ptr [ %293, %313 ], [ %263, %260 ]
  %295 = getelementptr inbounds %struct.BPoint, ptr %294, i64 %255, i32 4
  %296 = load i16, ptr %295, align 2, !tbaa !603
  %297 = icmp eq i16 %296, 0
  br i1 %297, label %298, label %313

298:                                              ; preds = %291
  %299 = getelementptr inbounds %struct.BPoint, ptr %294, i64 0, i32 4
  %300 = load i16, ptr %299, align 2, !tbaa !603
  %301 = icmp eq i16 %300, 0
  br i1 %301, label %302, label %313

302:                                              ; preds = %298
  %303 = getelementptr inbounds %struct.BPoint, ptr %294, i64 %255, i32 3
  %304 = load i16, ptr %303, align 4, !tbaa !610
  %305 = and i16 %304, 1
  %306 = icmp eq i16 %305, 0
  br i1 %306, label %313, label %307

307:                                              ; preds = %302
  %308 = getelementptr inbounds %struct.BPoint, ptr %294, i64 0, i32 3
  %309 = load i16, ptr %308, align 4, !tbaa !610
  %310 = and i16 %309, 1
  %311 = icmp eq i16 %310, 0
  br i1 %311, label %313, label %312

312:                                              ; preds = %307
  tail call void @UI_ThemeColor(i32 noundef 53) #13
  tail call void @glBegin(i32 noundef 3) #13
  tail call void @glVertex3fv(ptr noundef nonnull %293) #13
  tail call void @glVertex3fv(ptr noundef nonnull %294) #13
  tail call void @glEnd() #13
  br label %313

313:                                              ; preds = %312, %307, %302, %298, %291
  %314 = getelementptr inbounds %struct.BPoint, ptr %293, i64 %255
  %315 = add nsw i32 %292, -1
  %316 = icmp sgt i32 %292, 1
  br i1 %316, label %291, label %317, !llvm.loop !613

317:                                              ; preds = %313, %287, %256
  %318 = add nuw nsw i64 %257, 1
  %319 = load i32, ptr %251, align 8, !tbaa !369
  %320 = sext i32 %319 to i64
  %321 = icmp slt i64 %318, %320
  br i1 %321, label %256, label %322, !llvm.loop !614

322:                                              ; preds = %317, %78, %169, %250, %53, %14, %247, %8
  %323 = add nuw nsw i32 %10, 1
  %324 = load ptr, ptr %9, align 8, !tbaa !365
  %325 = icmp eq ptr %324, null
  br i1 %325, label %326, label %8, !llvm.loop !615

326:                                              ; preds = %322, %3
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @drawvertsN(ptr nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, ptr noundef %3) unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.Nurb, ptr %0, i64 0, i32 4
  %6 = load i16, ptr %5, align 4, !tbaa !368
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %145

8:                                                ; preds = %4
  %9 = icmp eq i8 %1, 0
  %10 = select i1 %9, i32 33, i32 34
  tail call void @UI_ThemeColor(i32 noundef %10) #13
  %11 = tail call fast nofpclass(nan inf) float @UI_GetThemeValuef(i32 noundef 36) #13
  tail call void @glPointSize(float noundef nofpclass(nan inf) %11) #13
  tail call void @bglBegin(i32 noundef 0) #13
  %12 = getelementptr inbounds %struct.Nurb, ptr %0, i64 0, i32 2
  %13 = load i16, ptr %12, align 8, !tbaa !363
  %14 = icmp eq i16 %13, 1
  br i1 %14, label %15, label %114

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.Nurb, ptr %0, i64 0, i32 18
  %17 = load ptr, ptr %16, align 8, !tbaa !370
  %18 = getelementptr inbounds %struct.Nurb, ptr %0, i64 0, i32 6
  %19 = load i32, ptr %18, align 8, !tbaa !369
  %20 = add nsw i32 %19, -1
  %21 = icmp eq i32 %19, 0
  br i1 %21, label %144, label %22

22:                                               ; preds = %15
  %23 = icmp eq i8 %1, 1
  %24 = icmp eq i8 %2, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %22
  %26 = getelementptr inbounds [3 x [3 x float]], ptr %3, i64 0, i64 1
  %27 = getelementptr inbounds %struct.BezTriple, ptr %3, i64 0, i32 7
  %28 = getelementptr inbounds %struct.BezTriple, ptr %3, i64 0, i32 9
  %29 = getelementptr inbounds [3 x [3 x float]], ptr %3, i64 0, i64 2
  br label %30

30:                                               ; preds = %25, %70
  %31 = phi i32 [ %72, %70 ], [ %20, %25 ]
  %32 = phi ptr [ %71, %70 ], [ %17, %25 ]
  %33 = getelementptr inbounds %struct.BezTriple, ptr %32, i64 0, i32 10
  %34 = load i8, ptr %33, align 2, !tbaa !371
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %70

36:                                               ; preds = %30
  %37 = icmp eq ptr %32, %3
  %38 = and i1 %23, %37
  br i1 %38, label %59, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.BezTriple, ptr %32, i64 0, i32 7
  %41 = load i8, ptr %40, align 1, !tbaa !593
  %42 = and i8 %41, 1
  %43 = icmp eq i8 %42, %1
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @bglVertex3fv(ptr noundef nonnull %32) #13
  br label %45

45:                                               ; preds = %44, %39
  %46 = getelementptr inbounds %struct.BezTriple, ptr %32, i64 0, i32 8
  %47 = load i8, ptr %46, align 4, !tbaa !590
  %48 = and i8 %47, 1
  %49 = icmp eq i8 %48, %1
  br i1 %49, label %50, label %52

50:                                               ; preds = %45
  %51 = getelementptr inbounds [3 x [3 x float]], ptr %32, i64 0, i64 1
  tail call void @bglVertex3fv(ptr noundef nonnull %51) #13
  br label %52

52:                                               ; preds = %50, %45
  %53 = getelementptr inbounds %struct.BezTriple, ptr %32, i64 0, i32 9
  %54 = load i8, ptr %53, align 1, !tbaa !594
  %55 = and i8 %54, 1
  %56 = icmp eq i8 %55, %1
  br i1 %56, label %57, label %70

57:                                               ; preds = %52
  %58 = getelementptr inbounds [3 x [3 x float]], ptr %32, i64 0, i64 2
  tail call void @bglVertex3fv(ptr noundef nonnull %58) #13
  br label %70

59:                                               ; preds = %36
  tail call void @UI_ThemeColor(i32 noundef 65) #13
  tail call void @bglVertex3fv(ptr noundef nonnull %26) #13
  %60 = load i8, ptr %27, align 1, !tbaa !593
  %61 = and i8 %60, 1
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %64, label %63

63:                                               ; preds = %59
  tail call void @bglVertex3fv(ptr noundef nonnull %3) #13
  br label %64

64:                                               ; preds = %63, %59
  %65 = load i8, ptr %28, align 1, !tbaa !594
  %66 = and i8 %65, 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %69, label %68

68:                                               ; preds = %64
  tail call void @bglVertex3fv(ptr noundef nonnull %29) #13
  br label %69

69:                                               ; preds = %68, %64
  tail call void @UI_ThemeColor(i32 noundef %10) #13
  br label %70

70:                                               ; preds = %69, %57, %52, %30
  %71 = getelementptr inbounds %struct.BezTriple, ptr %32, i64 1
  %72 = add nsw i32 %31, -1
  %73 = icmp eq i32 %31, 0
  br i1 %73, label %144, label %30, !llvm.loop !616

74:                                               ; preds = %22
  br i1 %23, label %92, label %75

75:                                               ; preds = %74, %88
  %76 = phi i32 [ %90, %88 ], [ %20, %74 ]
  %77 = phi ptr [ %89, %88 ], [ %17, %74 ]
  %78 = getelementptr inbounds %struct.BezTriple, ptr %77, i64 0, i32 10
  %79 = load i8, ptr %78, align 2, !tbaa !371
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %88

81:                                               ; preds = %75
  %82 = getelementptr inbounds %struct.BezTriple, ptr %77, i64 0, i32 8
  %83 = load i8, ptr %82, align 4, !tbaa !590
  %84 = and i8 %83, 1
  %85 = icmp eq i8 %84, %1
  br i1 %85, label %86, label %88

86:                                               ; preds = %81
  %87 = getelementptr inbounds [3 x [3 x float]], ptr %77, i64 0, i64 1
  tail call void @bglVertex3fv(ptr noundef nonnull %87) #13
  br label %88

88:                                               ; preds = %86, %81, %75
  %89 = getelementptr inbounds %struct.BezTriple, ptr %77, i64 1
  %90 = add nsw i32 %76, -1
  %91 = icmp eq i32 %76, 0
  br i1 %91, label %144, label %75, !llvm.loop !616

92:                                               ; preds = %74
  %93 = getelementptr inbounds [3 x [3 x float]], ptr %3, i64 0, i64 1
  br label %94

94:                                               ; preds = %92, %110
  %95 = phi i32 [ %112, %110 ], [ %20, %92 ]
  %96 = phi ptr [ %111, %110 ], [ %17, %92 ]
  %97 = getelementptr inbounds %struct.BezTriple, ptr %96, i64 0, i32 10
  %98 = load i8, ptr %97, align 2, !tbaa !371
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %110

100:                                              ; preds = %94
  %101 = icmp eq ptr %96, %3
  br i1 %101, label %102, label %103

102:                                              ; preds = %100
  tail call void @UI_ThemeColor(i32 noundef 65) #13
  tail call void @bglVertex3fv(ptr noundef nonnull %93) #13
  tail call void @UI_ThemeColor(i32 noundef %10) #13
  br label %110

103:                                              ; preds = %100
  %104 = getelementptr inbounds %struct.BezTriple, ptr %96, i64 0, i32 8
  %105 = load i8, ptr %104, align 4, !tbaa !590
  %106 = and i8 %105, 1
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds [3 x [3 x float]], ptr %96, i64 0, i64 1
  tail call void @bglVertex3fv(ptr noundef nonnull %109) #13
  br label %110

110:                                              ; preds = %102, %103, %108, %94
  %111 = getelementptr inbounds %struct.BezTriple, ptr %96, i64 1
  %112 = add nsw i32 %95, -1
  %113 = icmp eq i32 %95, 0
  br i1 %113, label %144, label %94, !llvm.loop !616

114:                                              ; preds = %8
  %115 = getelementptr inbounds %struct.Nurb, ptr %0, i64 0, i32 6
  %116 = load i32, ptr %115, align 8, !tbaa !369
  %117 = getelementptr inbounds %struct.Nurb, ptr %0, i64 0, i32 7
  %118 = load i32, ptr %117, align 4, !tbaa !596
  %119 = mul nsw i32 %118, %116
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %144, label %121

121:                                              ; preds = %114
  %122 = getelementptr inbounds %struct.Nurb, ptr %0, i64 0, i32 17
  %123 = load ptr, ptr %122, align 8, !tbaa !597
  %124 = zext i8 %1 to i16
  br label %125

125:                                              ; preds = %121, %141
  %126 = phi i32 [ %119, %121 ], [ %128, %141 ]
  %127 = phi ptr [ %123, %121 ], [ %142, %141 ]
  %128 = add nsw i32 %126, -1
  %129 = getelementptr inbounds %struct.BPoint, ptr %127, i64 0, i32 4
  %130 = load i16, ptr %129, align 2, !tbaa !603
  %131 = icmp eq i16 %130, 0
  br i1 %131, label %132, label %141

132:                                              ; preds = %125
  %133 = icmp eq ptr %127, %3
  br i1 %133, label %134, label %135

134:                                              ; preds = %132
  tail call void @UI_ThemeColor(i32 noundef 65) #13
  tail call void @bglVertex3fv(ptr noundef nonnull %3) #13
  tail call void @UI_ThemeColor(i32 noundef %10) #13
  br label %141

135:                                              ; preds = %132
  %136 = getelementptr inbounds %struct.BPoint, ptr %127, i64 0, i32 3
  %137 = load i16, ptr %136, align 4, !tbaa !610
  %138 = and i16 %137, 1
  %139 = icmp eq i16 %138, %124
  br i1 %139, label %140, label %141

140:                                              ; preds = %135
  tail call void @bglVertex3fv(ptr noundef nonnull %127) #13
  br label %141

141:                                              ; preds = %134, %140, %135, %125
  %142 = getelementptr inbounds %struct.BPoint, ptr %127, i64 1
  %143 = icmp eq i32 %128, 0
  br i1 %143, label %144, label %125, !llvm.loop !617

144:                                              ; preds = %141, %88, %110, %70, %114, %15
  tail call void @bglEnd() #13
  tail call void @glPointSize(float noundef nofpclass(nan inf) 1.000000e+00) #13
  br label %145

145:                                              ; preds = %4, %144
  ret void
}

declare void @mul_qt_v3(ptr noundef, ptr noundef) local_unnamed_addr #1

declare zeroext i8 @GPU_select_load_id(i32 noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare nofpclass(nan inf) float @atanf(float noundef nofpclass(nan inf)) local_unnamed_addr #9

declare ptr @BKE_image_acquire_ibuf(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @IMB_rect_from_float(ptr noundef) local_unnamed_addr #1

declare void @glAlphaFunc(i32 noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare void @glColor4fv(ptr noundef) local_unnamed_addr #1

declare void @glaDrawPixelsTex(float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

declare void @glPixelTransferf(i32 noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare void @glVertex2f(float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare void @BKE_image_release_ibuf(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare nofpclass(nan inf) float @ED_view3d_pixel_size(ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @copy_m4_m4(ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @glColor4ub(i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #1

declare void @axis_angle_normalized_to_mat3_ex(ptr noundef, ptr noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare void @mul_transposed_mat3_m4_v3(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.cos.f32(float) #6

declare void @circ(float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare void @fdrawbox(float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare void @quat_to_mat3(ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @unit_m3(ptr noundef) local_unnamed_addr #1

declare void @glColor4f(float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @draw_spot_cone(ptr nocapture noundef readonly %0, float noundef nofpclass(nan inf) %1, float noundef nofpclass(nan inf) %2) unnamed_addr #0 {
  %4 = tail call fast float @llvm.fabs.f32(float %2)
  tail call void @glBegin(i32 noundef 6) #13
  %5 = fneg fast float %1
  tail call void @glVertex3f(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %5) #13
  %6 = getelementptr inbounds %struct.Lamp, ptr %0, i64 0, i32 4
  %7 = load i32, ptr %6, align 4, !tbaa !411
  %8 = and i32 %7, 128
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %4, float noundef nofpclass(nan inf) %4, float noundef nofpclass(nan inf) 0.000000e+00) #13
  %11 = fneg fast float %4
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %11, float noundef nofpclass(nan inf) %4, float noundef nofpclass(nan inf) 0.000000e+00) #13
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %11, float noundef nofpclass(nan inf) %11, float noundef nofpclass(nan inf) 0.000000e+00) #13
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %4, float noundef nofpclass(nan inf) %11, float noundef nofpclass(nan inf) 0.000000e+00) #13
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %4, float noundef nofpclass(nan inf) %4, float noundef nofpclass(nan inf) 0.000000e+00) #13
  br label %23

12:                                               ; preds = %3, %12
  %13 = phi i32 [ %21, %12 ], [ 0, %3 ]
  %14 = sitofp i32 %13 to double
  %15 = fmul fast double %14, 0x3FC921FB54442D18
  %16 = fptrunc double %15 to float
  %17 = tail call fast float @llvm.cos.f32(float %16)
  %18 = fmul fast float %17, %4
  %19 = tail call fast float @llvm.sin.f32(float %16)
  %20 = fmul fast float %19, %4
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %18, float noundef nofpclass(nan inf) %20, float noundef nofpclass(nan inf) 0.000000e+00) #13
  %21 = add nuw nsw i32 %13, 1
  %22 = icmp eq i32 %21, 33
  br i1 %22, label %23, label %12, !llvm.loop !618

23:                                               ; preds = %12, %10
  tail call void @glEnd() #13
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.sin.f32(float) #6

declare ptr @BKE_object_movieclip_get(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @draw_viewport_reconstruction(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, ptr noundef %3, i16 noundef signext %4, ptr noundef %5, i8 noundef zeroext %6) unnamed_addr #0 {
  %8 = alloca [4 x [4 x float]], align 16
  %9 = alloca [4 x [4 x float]], align 16
  %10 = alloca [4 x i8], align 1
  %11 = alloca [4 x i8], align 1
  %12 = alloca [4 x [4 x float]], align 16
  %13 = alloca [3 x float], align 8
  %14 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 29
  %15 = load i16, ptr %14, align 2, !tbaa !15
  %16 = and i16 %15, 132
  %17 = icmp eq i16 %16, 128
  br i1 %17, label %18, label %266

18:                                               ; preds = %7
  tail call void @glEnable(i32 noundef 2896) #13
  tail call void @glColorMaterial(i32 noundef 1032, i32 noundef 4609) #13
  tail call void @glEnable(i32 noundef 2903) #13
  tail call void @glShadeModel(i32 noundef 7425) #13
  %19 = getelementptr inbounds %struct.MovieClip, ptr %3, i64 0, i32 11, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !49
  %21 = icmp eq ptr %20, null
  br i1 %21, label %254, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.MovieClip, ptr %3, i64 0, i32 11
  %24 = getelementptr inbounds %struct.Base, ptr %1, i64 0, i32 7
  %25 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 22, i32 5
  %26 = icmp eq i8 %6, 0
  %27 = zext i16 %4 to i32
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %struct.Base, ptr %1, i64 0, i32 3
  %31 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 8
  %32 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 24
  %33 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 9
  %34 = and i32 %27, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds float, ptr %13, i64 2
  %37 = and i16 %4, 1
  %38 = icmp eq i16 %37, 0
  br label %39

39:                                               ; preds = %22, %251
  %40 = phi ptr [ %20, %22 ], [ %252, %251 ]
  %41 = phi i32 [ 1, %22 ], [ %223, %251 ]
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %8) #13
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %9) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #13
  %42 = call ptr @BKE_tracking_object_get_tracks(ptr noundef nonnull %23, ptr noundef nonnull %40) #13
  call void @UI_GetThemeColor4ubv(i32 noundef 3, ptr noundef nonnull %10) #13
  call void @UI_GetThemeColor4ubv(i32 noundef 28, ptr noundef nonnull %11) #13
  %43 = load ptr, ptr %24, align 8, !tbaa !38
  call void @BKE_tracking_get_camera_object_matrix(ptr noundef %0, ptr noundef %43, ptr noundef nonnull %8) #13
  %44 = load ptr, ptr %24, align 8, !tbaa !38
  %45 = getelementptr inbounds %struct.Object, ptr %44, i64 0, i32 36
  %46 = load float, ptr %45, align 4, !tbaa !44
  %47 = getelementptr inbounds %struct.Object, ptr %44, i64 0, i32 36, i64 1
  %48 = load float, ptr %47, align 4, !tbaa !44
  %49 = getelementptr inbounds %struct.Object, ptr %44, i64 0, i32 36, i64 2
  %50 = load float, ptr %49, align 4, !tbaa !44
  %51 = getelementptr inbounds %struct.MovieTrackingObject, ptr %40, i64 0, i32 3
  %52 = load i32, ptr %51, align 8, !tbaa !619
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %61

55:                                               ; preds = %39
  %56 = getelementptr inbounds %struct.MovieTrackingObject, ptr %40, i64 0, i32 4
  %57 = load float, ptr %56, align 4, !tbaa !622
  %58 = fmul fast float %57, %46
  %59 = fmul fast float %57, %48
  %60 = fmul fast float %57, %50
  br label %61

61:                                               ; preds = %55, %39
  %62 = phi float [ %60, %55 ], [ %50, %39 ]
  %63 = phi float [ %59, %55 ], [ %48, %39 ]
  %64 = phi float [ %58, %55 ], [ %46, %39 ]
  call void @glPushMatrix() #13
  %65 = load i32, ptr %51, align 8, !tbaa !619
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %61
  %69 = load ptr, ptr %24, align 8, !tbaa !38
  %70 = getelementptr inbounds %struct.Object, ptr %69, i64 0, i32 47
  %71 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %9, ptr noundef nonnull %70) #13
  call void @glMultMatrixf(ptr noundef nonnull %9) #13
  call void @glMultMatrixf(ptr noundef nonnull %8) #13
  br label %78

72:                                               ; preds = %61
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %12) #13
  %73 = load i32, ptr %25, align 8, !tbaa !129
  %74 = sitofp i32 %73 to float
  %75 = call fast nofpclass(nan inf) float @BKE_movieclip_remap_scene_to_clip_frame(ptr noundef %3, float noundef nofpclass(nan inf) %74) #13
  %76 = fptosi float %75 to i32
  call void @BKE_tracking_camera_get_reconstructed_interpolate(ptr noundef nonnull %23, ptr noundef nonnull %40, i32 noundef %76, ptr noundef nonnull %12) #13
  %77 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %9, ptr noundef nonnull %12) #13
  call void @glMultMatrixf(ptr noundef nonnull %9) #13
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %12) #13
  br label %78

78:                                               ; preds = %72, %68
  %79 = load ptr, ptr %42, align 8, !tbaa !49
  %80 = icmp eq ptr %79, null
  br i1 %80, label %222, label %81

81:                                               ; preds = %78
  %82 = fdiv fast float 1.000000e+00, %64
  %83 = fdiv fast float 1.000000e+00, %63
  %84 = fdiv fast float 1.000000e+00, %62
  br label %85

85:                                               ; preds = %81, %218
  %86 = phi ptr [ %220, %218 ], [ %79, %81 ]
  %87 = phi i32 [ %219, %218 ], [ %41, %81 ]
  %88 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %86, i64 0, i32 13
  %89 = load i32, ptr %88, align 8, !tbaa !623
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %103

92:                                               ; preds = %85
  %93 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %86, i64 0, i32 14
  %94 = load i32, ptr %93, align 4, !tbaa !625
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %103

97:                                               ; preds = %92
  %98 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %86, i64 0, i32 15
  %99 = load i32, ptr %98, align 8, !tbaa !626
  %100 = and i32 %99, 1
  %101 = icmp ne i32 %100, 0
  %102 = select i1 %26, i1 true, i1 %101
  br i1 %102, label %103, label %218

103:                                              ; preds = %97, %92, %85
  %104 = phi i1 [ %101, %97 ], [ true, %92 ], [ true, %85 ]
  %105 = and i32 %89, 2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %218, label %107

107:                                              ; preds = %103
  br i1 %29, label %113, label %108

108:                                              ; preds = %107
  %109 = load i32, ptr %30, align 4, !tbaa !627
  %110 = shl i32 %87, 16
  %111 = add i32 %109, %110
  %112 = call zeroext i8 @GPU_select_load_id(i32 noundef %111) #13
  br label %113

113:                                              ; preds = %108, %107
  call void @glPushMatrix() #13
  %114 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %86, i64 0, i32 11
  %115 = load float, ptr %114, align 8, !tbaa !44
  %116 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %86, i64 0, i32 11, i64 1
  %117 = load float, ptr %116, align 4, !tbaa !44
  %118 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %86, i64 0, i32 11, i64 2
  %119 = load float, ptr %118, align 8, !tbaa !44
  call void @glTranslatef(float noundef nofpclass(nan inf) %115, float noundef nofpclass(nan inf) %117, float noundef nofpclass(nan inf) %119) #13
  %120 = load float, ptr %31, align 4, !tbaa !628
  %121 = fmul fast float %120, 2.000000e+01
  %122 = fmul fast float %121, %82
  %123 = fmul fast float %121, %83
  %124 = fmul fast float %121, %84
  call void @glScalef(float noundef nofpclass(nan inf) %122, float noundef nofpclass(nan inf) %123, float noundef nofpclass(nan inf) %124) #13
  %125 = load i16, ptr %32, align 8, !tbaa !5
  %126 = icmp eq i16 %125, 2
  br i1 %126, label %127, label %138

127:                                              ; preds = %113
  call void @glDisable(i32 noundef 2896) #13
  br i1 %35, label %128, label %136

128:                                              ; preds = %127
  br i1 %104, label %129, label %134

129:                                              ; preds = %128
  %130 = load i32, ptr %88, align 8, !tbaa !623
  %131 = and i32 %130, 128
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %129
  call void @glColor3ubv(ptr noundef %5) #13
  br label %136

134:                                              ; preds = %129, %128
  %135 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %86, i64 0, i32 16
  call void @glColor3fv(ptr noundef nonnull %135) #13
  br label %136

136:                                              ; preds = %134, %133, %127
  %137 = load i8, ptr %33, align 8, !tbaa !629
  call void @drawaxes(float noundef nofpclass(nan inf) 0x3FA99999A0000000, i8 noundef zeroext %137)
  call void @glEnable(i32 noundef 2896) #13
  br label %168

138:                                              ; preds = %113
  %139 = icmp sgt i16 %125, 2
  br i1 %139, label %140, label %168

140:                                              ; preds = %138
  %141 = load i8, ptr %33, align 8, !tbaa !629
  %142 = icmp eq i8 %141, 6
  br i1 %142, label %143, label %156

143:                                              ; preds = %140
  br i1 %104, label %144, label %147

144:                                              ; preds = %143
  br i1 %35, label %145, label %146

145:                                              ; preds = %144
  call void @glColor3ubv(ptr noundef %5) #13
  br label %146

146:                                              ; preds = %145, %144
  call void @glLineWidth(float noundef nofpclass(nan inf) 2.000000e+00) #13
  call void @glDisable(i32 noundef 2896) #13
  call void @glPolygonMode(i32 noundef 1032, i32 noundef 6913) #13
  call fastcc void @draw_bundle_sphere()
  call void @glPolygonMode(i32 noundef 1032, i32 noundef 6914) #13
  call void @glEnable(i32 noundef 2896) #13
  call void @glLineWidth(float noundef nofpclass(nan inf) 1.000000e+00) #13
  br label %147

147:                                              ; preds = %146, %143
  br i1 %35, label %148, label %155

148:                                              ; preds = %147
  %149 = load i32, ptr %88, align 8, !tbaa !623
  %150 = and i32 %149, 128
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %154, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %86, i64 0, i32 16
  call void @glColor3fv(ptr noundef nonnull %153) #13
  br label %155

154:                                              ; preds = %148
  call void @UI_ThemeColor(i32 noundef 144) #13
  br label %155

155:                                              ; preds = %154, %152, %147
  call fastcc void @draw_bundle_sphere()
  br label %168

156:                                              ; preds = %140
  call void @glDisable(i32 noundef 2896) #13
  br i1 %35, label %157, label %166

157:                                              ; preds = %156
  br i1 %104, label %158, label %159

158:                                              ; preds = %157
  call void @glColor3ubv(ptr noundef %5) #13
  br label %166

159:                                              ; preds = %157
  %160 = load i32, ptr %88, align 8, !tbaa !623
  %161 = and i32 %160, 128
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %165, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %86, i64 0, i32 16
  call void @glColor3fv(ptr noundef nonnull %164) #13
  br label %166

165:                                              ; preds = %159
  call void @UI_ThemeColor(i32 noundef 25) #13
  br label %166

166:                                              ; preds = %165, %163, %158, %156
  %167 = load i8, ptr %33, align 8, !tbaa !629
  call void @drawaxes(float noundef nofpclass(nan inf) 0x3FA99999A0000000, i8 noundef zeroext %167)
  call void @glEnable(i32 noundef 2896) #13
  br label %168

168:                                              ; preds = %166, %155, %138, %136
  call void @glPopMatrix() #13
  br i1 %29, label %169, label %216

169:                                              ; preds = %168
  %170 = load i16, ptr %14, align 2, !tbaa !15
  %171 = and i16 %170, 512
  %172 = icmp eq i16 %171, 0
  br i1 %172, label %216, label %173

173:                                              ; preds = %169
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %13) #13
  call void @mul_v3_m4v3(ptr noundef nonnull %13, ptr noundef nonnull %8, ptr noundef nonnull %114) #13
  %174 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %86, i64 0, i32 2
  %175 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %174) #14
  %176 = load ptr, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  %177 = icmp eq ptr %176, null
  br i1 %177, label %178, label %180

178:                                              ; preds = %173
  %179 = call ptr @BLI_memarena_new(i64 noundef 16376, ptr noundef nonnull @__func__.view3d_cached_text_draw_add) #13
  store ptr %179, ptr @g_v3d_strings_arena, align 8, !tbaa !49
  br label %180

180:                                              ; preds = %178, %173
  %181 = phi ptr [ %179, %178 ], [ %176, %173 ]
  %182 = shl i64 %175, 32
  %183 = add i64 %182, 4294967296
  %184 = ashr exact i64 %183, 32
  %185 = add nsw i64 %184, 40
  %186 = call ptr @BLI_memarena_alloc(ptr noundef %181, i64 noundef %185) #13
  %187 = load i32, ptr @g_v3d_string_level, align 4, !tbaa !47
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds [3 x ptr], ptr @g_v3d_strings, i64 0, i64 %188
  %190 = load ptr, ptr %189, align 8, !tbaa !49
  store ptr %190, ptr %186, align 8, !tbaa !49
  store ptr %186, ptr %189, align 8, !tbaa !49
  %191 = getelementptr inbounds %struct.ViewCachedString, ptr %186, i64 0, i32 1
  %192 = load <2 x float>, ptr %13, align 8, !tbaa !44
  store <2 x float> %192, ptr %191, align 4, !tbaa !44
  %193 = load float, ptr %36, align 8, !tbaa !44
  %194 = getelementptr inbounds %struct.ViewCachedString, ptr %186, i64 0, i32 1, i64 2
  store float %193, ptr %194, align 4, !tbaa !44
  %195 = getelementptr inbounds %struct.ViewCachedString, ptr %186, i64 0, i32 2
  %196 = load i8, ptr %11, align 1
  %197 = load i8, ptr %10, align 1
  %198 = select i1 %104, i8 %196, i8 %197
  store i8 %198, ptr %195, align 1, !tbaa !50
  %199 = select i1 %104, ptr %11, ptr %10
  %200 = getelementptr inbounds i8, ptr %199, i64 1
  %201 = load i8, ptr %200, align 1, !tbaa !50
  %202 = getelementptr inbounds i8, ptr %186, i64 21
  store i8 %201, ptr %202, align 1, !tbaa !50
  %203 = select i1 %104, ptr %11, ptr %10
  %204 = getelementptr inbounds i8, ptr %203, i64 2
  %205 = load i8, ptr %204, align 1, !tbaa !50
  %206 = getelementptr inbounds i8, ptr %186, i64 22
  store i8 %205, ptr %206, align 1, !tbaa !50
  %207 = select i1 %104, ptr %11, ptr %10
  %208 = getelementptr inbounds i8, ptr %207, i64 3
  %209 = load i8, ptr %208, align 1, !tbaa !50
  %210 = getelementptr inbounds i8, ptr %186, i64 23
  store i8 %209, ptr %210, align 1, !tbaa !50
  %211 = getelementptr inbounds %struct.ViewCachedString, ptr %186, i64 0, i32 4
  store i16 10, ptr %211, align 4, !tbaa !51
  %212 = getelementptr inbounds %struct.ViewCachedString, ptr %186, i64 0, i32 5
  store i16 8, ptr %212, align 2, !tbaa !51
  %213 = trunc i64 %175 to i32
  %214 = getelementptr inbounds %struct.ViewCachedString, ptr %186, i64 0, i32 6
  store i32 %213, ptr %214, align 8, !tbaa !47
  %215 = getelementptr inbounds %struct.ViewCachedString, ptr %186, i64 0, i32 7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 4 %215, ptr nonnull align 1 %174, i64 %184, i1 false)
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %13) #13
  br label %216

216:                                              ; preds = %180, %169, %168
  %217 = add nsw i32 %87, 1
  br label %218

218:                                              ; preds = %216, %103, %97
  %219 = phi i32 [ %217, %216 ], [ %87, %97 ], [ %87, %103 ]
  %220 = load ptr, ptr %86, align 8, !tbaa !49
  %221 = icmp eq ptr %220, null
  br i1 %221, label %222, label %85, !llvm.loop !630

222:                                              ; preds = %218, %78
  %223 = phi i32 [ %41, %78 ], [ %219, %218 ]
  br i1 %38, label %224, label %251

224:                                              ; preds = %222
  %225 = load i16, ptr %14, align 2, !tbaa !15
  %226 = and i16 %225, 256
  %227 = icmp eq i16 %226, 0
  br i1 %227, label %251, label %228

228:                                              ; preds = %224
  %229 = load i32, ptr %51, align 8, !tbaa !619
  %230 = and i32 %229, 1
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %251, label %232

232:                                              ; preds = %228
  %233 = call ptr @BKE_tracking_object_get_reconstruction(ptr noundef nonnull %23, ptr noundef nonnull %40) #13
  %234 = getelementptr inbounds %struct.MovieTrackingReconstruction, ptr %233, i64 0, i32 3
  %235 = load i32, ptr %234, align 4, !tbaa !631
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %251, label %237

237:                                              ; preds = %232
  %238 = getelementptr inbounds %struct.MovieTrackingReconstruction, ptr %233, i64 0, i32 4
  %239 = load ptr, ptr %238, align 8, !tbaa !632
  call void @glDisable(i32 noundef 2896) #13
  call void @UI_ThemeColor(i32 noundef 148) #13
  call void @glLineWidth(float noundef nofpclass(nan inf) 2.000000e+00) #13
  call void @glBegin(i32 noundef 3) #13
  %240 = load i32, ptr %234, align 4, !tbaa !631
  %241 = icmp sgt i32 %240, 0
  br i1 %241, label %242, label %250

242:                                              ; preds = %237, %242
  %243 = phi i32 [ %246, %242 ], [ 0, %237 ]
  %244 = phi ptr [ %247, %242 ], [ %239, %237 ]
  %245 = getelementptr inbounds %struct.MovieReconstructedCamera, ptr %244, i64 0, i32 2, i64 3
  call void @glVertex3fv(ptr noundef nonnull %245) #13
  %246 = add nuw nsw i32 %243, 1
  %247 = getelementptr inbounds %struct.MovieReconstructedCamera, ptr %244, i64 1
  %248 = load i32, ptr %234, align 4, !tbaa !631
  %249 = icmp slt i32 %246, %248
  br i1 %249, label %242, label %250, !llvm.loop !633

250:                                              ; preds = %242, %237
  call void @glEnd() #13
  call void @glLineWidth(float noundef nofpclass(nan inf) 1.000000e+00) #13
  call void @glEnable(i32 noundef 2896) #13
  br label %251

251:                                              ; preds = %222, %224, %228, %232, %250
  call void @glPopMatrix() #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #13
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %9) #13
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %8) #13
  %252 = load ptr, ptr %40, align 8, !tbaa !49
  %253 = icmp eq ptr %252, null
  br i1 %253, label %254, label %39, !llvm.loop !634

254:                                              ; preds = %251, %18
  call void @glShadeModel(i32 noundef 7424) #13
  call void @glDisable(i32 noundef 2903) #13
  call void @glDisable(i32 noundef 2896) #13
  %255 = zext i16 %4 to i32
  %256 = and i32 %255, 2
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %259

258:                                              ; preds = %254
  call void @glColor3ubv(ptr noundef %5) #13
  br label %259

259:                                              ; preds = %258, %254
  %260 = and i32 %255, 1
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %266, label %262

262:                                              ; preds = %259
  %263 = getelementptr inbounds %struct.Base, ptr %1, i64 0, i32 3
  %264 = load i32, ptr %263, align 4, !tbaa !627
  %265 = call zeroext i8 @GPU_select_load_id(i32 noundef %264) #13
  br label %266

266:                                              ; preds = %259, %262, %7
  ret void
}

declare void @glGetFloatv(i32 noundef, ptr noundef) local_unnamed_addr #1

declare void @rgb_float_to_uchar(ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @BKE_camera_view_frame_ex(ptr noundef, ptr noundef, float noundef nofpclass(nan inf), i8 noundef zeroext, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @normalize_m4(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @draw_limit_line(float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %1, i16 noundef signext %2, i32 noundef %3) unnamed_addr #0 {
  tail call void @glBegin(i32 noundef 1) #13
  %5 = fneg fast float %0
  tail call void @glVertex3f(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %5) #13
  %6 = fneg fast float %1
  tail call void @glVertex3f(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %6) #13
  tail call void @glEnd() #13
  %7 = zext i16 %2 to i32
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %4
  tail call void @glPointSize(float noundef nofpclass(nan inf) 3.000000e+00) #13
  tail call void @glBegin(i32 noundef 0) #13
  %11 = and i32 %7, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %10
  tail call void @cpack(i32 noundef %3) #13
  br label %14

14:                                               ; preds = %13, %10
  tail call void @glVertex3f(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %5) #13
  tail call void @glVertex3f(float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %6) #13
  tail call void @glEnd() #13
  tail call void @glPointSize(float noundef nofpclass(nan inf) 1.000000e+00) #13
  br label %15

15:                                               ; preds = %14, %4
  ret void
}

declare nofpclass(nan inf) float @BKE_camera_object_dof_distance(ptr noundef) local_unnamed_addr #1

declare ptr @BKE_tracking_object_get_tracks(ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @BKE_tracking_get_camera_object_matrix(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare nofpclass(nan inf) float @BKE_movieclip_remap_scene_to_clip_frame(ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare void @BKE_tracking_camera_get_reconstructed_interpolate(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @draw_bundle_sphere() unnamed_addr #0 {
  %1 = load i32, ptr @draw_bundle_sphere.displist, align 4, !tbaa !47
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %7

3:                                                ; preds = %0
  %4 = tail call i32 @glGenLists(i32 noundef 1) #13
  store i32 %4, ptr @draw_bundle_sphere.displist, align 4, !tbaa !47
  tail call void @glNewList(i32 noundef %4, i32 noundef 4864) #13
  %5 = tail call ptr @gluNewQuadric() #13
  tail call void @gluQuadricDrawStyle(ptr noundef %5, i32 noundef 100012) #13
  tail call void @glShadeModel(i32 noundef 7425) #13
  tail call void @gluSphere(ptr noundef %5, double noundef nofpclass(nan inf) 5.000000e-02, i32 noundef 8, i32 noundef 8) #13
  tail call void @glShadeModel(i32 noundef 7424) #13
  tail call void @gluDeleteQuadric(ptr noundef %5) #13
  tail call void @glEndList() #13
  %6 = load i32, ptr @draw_bundle_sphere.displist, align 4, !tbaa !47
  br label %7

7:                                                ; preds = %3, %0
  %8 = phi i32 [ %6, %3 ], [ %1, %0 ]
  tail call void @glCallList(i32 noundef %8) #13
  ret void
}

declare void @mul_v3_m4v3(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare ptr @BKE_tracking_object_get_reconstruction(ptr noundef, ptr noundef) local_unnamed_addr #1

declare ptr @BKE_displist_find(ptr noundef, i32 noundef) local_unnamed_addr #1

declare ptr @BKE_lattice_active_point_get(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @lattice_draw_verts(ptr nocapture noundef readonly %0, ptr noundef readonly %1, ptr noundef %2, i16 noundef signext %3) unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.Lattice, ptr %0, i64 0, i32 21
  %6 = load ptr, ptr %5, align 8, !tbaa !445
  %7 = icmp eq ptr %1, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.DispList, ptr %1, i64 0, i32 8
  %10 = load ptr, ptr %9, align 8, !tbaa !444
  br label %11

11:                                               ; preds = %4, %8
  %12 = phi ptr [ %10, %8 ], [ null, %4 ]
  %13 = icmp eq i16 %3, 0
  %14 = select i1 %13, i32 33, i32 34
  tail call void @UI_ThemeColor(i32 noundef %14) #13
  %15 = tail call fast nofpclass(nan inf) float @UI_GetThemeValuef(i32 noundef 36) #13
  tail call void @glPointSize(float noundef nofpclass(nan inf) %15) #13
  tail call void @bglBegin(i32 noundef 0) #13
  %16 = getelementptr inbounds %struct.Lattice, ptr %0, i64 0, i32 4
  %17 = load i16, ptr %16, align 4, !tbaa !438
  %18 = icmp sgt i16 %17, 0
  br i1 %18, label %19, label %240

19:                                               ; preds = %11
  %20 = zext i16 %17 to i32
  %21 = getelementptr inbounds %struct.Lattice, ptr %0, i64 0, i32 3
  %22 = getelementptr inbounds %struct.Lattice, ptr %0, i64 0, i32 2
  %23 = getelementptr inbounds %struct.Lattice, ptr %0, i64 0, i32 5
  %24 = load i16, ptr %21, align 2, !tbaa !439
  %25 = getelementptr inbounds %struct.BPoint, ptr %2, i64 0, i32 3
  %26 = getelementptr inbounds %struct.BPoint, ptr %2, i64 0, i32 3
  %27 = getelementptr inbounds %struct.BPoint, ptr %2, i64 0, i32 3
  %28 = getelementptr inbounds %struct.BPoint, ptr %2, i64 0, i32 3
  br label %29

29:                                               ; preds = %19, %230
  %30 = phi i16 [ %24, %19 ], [ %231, %230 ]
  %31 = phi i16 [ %24, %19 ], [ %232, %230 ]
  %32 = phi i16 [ %24, %19 ], [ %233, %230 ]
  %33 = phi i32 [ %20, %19 ], [ %238, %230 ]
  %34 = phi ptr [ %6, %19 ], [ %235, %230 ]
  %35 = phi ptr [ %12, %19 ], [ %234, %230 ]
  %36 = phi i32 [ 0, %19 ], [ %236, %230 ]
  %37 = icmp sgt i16 %32, 0
  br i1 %37, label %38, label %230

38:                                               ; preds = %29
  %39 = add nsw i32 %33, -1
  %40 = icmp eq i32 %36, %39
  %41 = icmp eq i32 %36, 0
  %42 = freeze i1 %40
  %43 = or i1 %42, %41
  br i1 %43, label %47, label %44

44:                                               ; preds = %38
  %45 = zext i16 %32 to i32
  %46 = load i16, ptr %22, align 8, !tbaa !440
  br label %139

47:                                               ; preds = %38
  %48 = load i16, ptr %22, align 8, !tbaa !440
  br i1 %7, label %49, label %93

49:                                               ; preds = %47, %58
  %50 = phi i16 [ %59, %58 ], [ %30, %47 ]
  %51 = phi i16 [ %60, %58 ], [ %48, %47 ]
  %52 = phi ptr [ %62, %58 ], [ %34, %47 ]
  %53 = phi ptr [ %61, %58 ], [ %35, %47 ]
  %54 = phi i32 [ %63, %58 ], [ 0, %47 ]
  %55 = icmp sgt i16 %51, 0
  br i1 %55, label %66, label %58

56:                                               ; preds = %86
  %57 = load i16, ptr %21, align 2, !tbaa !439
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i16 [ %50, %49 ], [ %57, %56 ]
  %60 = phi i16 [ %51, %49 ], [ %90, %56 ]
  %61 = phi ptr [ %53, %49 ], [ %89, %56 ]
  %62 = phi ptr [ %52, %49 ], [ %88, %56 ]
  %63 = add nuw nsw i32 %54, 1
  %64 = sext i16 %59 to i32
  %65 = icmp slt i32 %63, %64
  br i1 %65, label %49, label %230, !llvm.loop !635

66:                                               ; preds = %49, %86
  %67 = phi ptr [ %88, %86 ], [ %52, %49 ]
  %68 = phi ptr [ %89, %86 ], [ %53, %49 ]
  %69 = phi i32 [ %87, %86 ], [ 0, %49 ]
  %70 = getelementptr inbounds %struct.BPoint, ptr %67, i64 0, i32 4
  %71 = load i16, ptr %70, align 2, !tbaa !603
  %72 = icmp eq i16 %71, 0
  br i1 %72, label %73, label %86

73:                                               ; preds = %66
  %74 = icmp eq ptr %67, %2
  br i1 %74, label %75, label %80

75:                                               ; preds = %73
  %76 = load i16, ptr %28, align 4, !tbaa !610
  %77 = and i16 %76, 1
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %75
  tail call void @UI_ThemeColor(i32 noundef 65) #13
  tail call void @bglVertex3fv(ptr noundef nonnull %2) #13
  tail call void @UI_ThemeColor(i32 noundef %14) #13
  br label %86

80:                                               ; preds = %75, %73
  %81 = getelementptr inbounds %struct.BPoint, ptr %67, i64 0, i32 3
  %82 = load i16, ptr %81, align 4, !tbaa !610
  %83 = and i16 %82, 1
  %84 = icmp eq i16 %83, %3
  br i1 %84, label %85, label %86

85:                                               ; preds = %80
  tail call void @bglVertex3fv(ptr noundef nonnull %67) #13
  br label %86

86:                                               ; preds = %85, %80, %79, %66
  %87 = add nuw nsw i32 %69, 1
  %88 = getelementptr inbounds %struct.BPoint, ptr %67, i64 1
  %89 = getelementptr inbounds float, ptr %68, i64 3
  %90 = load i16, ptr %22, align 8, !tbaa !440
  %91 = sext i16 %90 to i32
  %92 = icmp slt i32 %87, %91
  br i1 %92, label %66, label %56, !llvm.loop !636

93:                                               ; preds = %47, %103
  %94 = phi i16 [ %104, %103 ], [ %30, %47 ]
  %95 = phi i16 [ %105, %103 ], [ %31, %47 ]
  %96 = phi i16 [ %106, %103 ], [ %48, %47 ]
  %97 = phi ptr [ %108, %103 ], [ %34, %47 ]
  %98 = phi ptr [ %107, %103 ], [ %35, %47 ]
  %99 = phi i32 [ %109, %103 ], [ 0, %47 ]
  %100 = icmp sgt i16 %96, 0
  br i1 %100, label %112, label %103

101:                                              ; preds = %132
  %102 = load i16, ptr %21, align 2, !tbaa !439
  br label %103

103:                                              ; preds = %101, %93
  %104 = phi i16 [ %94, %93 ], [ %102, %101 ]
  %105 = phi i16 [ %95, %93 ], [ %102, %101 ]
  %106 = phi i16 [ %96, %93 ], [ %136, %101 ]
  %107 = phi ptr [ %98, %93 ], [ %135, %101 ]
  %108 = phi ptr [ %97, %93 ], [ %134, %101 ]
  %109 = add nuw nsw i32 %99, 1
  %110 = sext i16 %105 to i32
  %111 = icmp slt i32 %109, %110
  br i1 %111, label %93, label %230, !llvm.loop !635

112:                                              ; preds = %93, %132
  %113 = phi ptr [ %134, %132 ], [ %97, %93 ]
  %114 = phi ptr [ %135, %132 ], [ %98, %93 ]
  %115 = phi i32 [ %133, %132 ], [ 0, %93 ]
  %116 = getelementptr inbounds %struct.BPoint, ptr %113, i64 0, i32 4
  %117 = load i16, ptr %116, align 2, !tbaa !603
  %118 = icmp eq i16 %117, 0
  br i1 %118, label %119, label %132

119:                                              ; preds = %112
  %120 = icmp eq ptr %113, %2
  br i1 %120, label %121, label %126

121:                                              ; preds = %119
  %122 = load i16, ptr %27, align 4, !tbaa !610
  %123 = and i16 %122, 1
  %124 = icmp eq i16 %123, 0
  br i1 %124, label %126, label %125

125:                                              ; preds = %121
  tail call void @UI_ThemeColor(i32 noundef 65) #13
  tail call void @bglVertex3fv(ptr noundef %114) #13
  tail call void @UI_ThemeColor(i32 noundef %14) #13
  br label %132

126:                                              ; preds = %121, %119
  %127 = getelementptr inbounds %struct.BPoint, ptr %113, i64 0, i32 3
  %128 = load i16, ptr %127, align 4, !tbaa !610
  %129 = and i16 %128, 1
  %130 = icmp eq i16 %129, %3
  br i1 %130, label %131, label %132

131:                                              ; preds = %126
  tail call void @bglVertex3fv(ptr noundef %114) #13
  br label %132

132:                                              ; preds = %131, %126, %125, %112
  %133 = add nuw nsw i32 %115, 1
  %134 = getelementptr inbounds %struct.BPoint, ptr %113, i64 1
  %135 = getelementptr inbounds float, ptr %114, i64 3
  %136 = load i16, ptr %22, align 8, !tbaa !440
  %137 = sext i16 %136 to i32
  %138 = icmp slt i32 %133, %137
  br i1 %138, label %112, label %101, !llvm.loop !636

139:                                              ; preds = %44, %222
  %140 = phi i16 [ %223, %222 ], [ %46, %44 ]
  %141 = phi i32 [ %228, %222 ], [ %45, %44 ]
  %142 = phi ptr [ %225, %222 ], [ %34, %44 ]
  %143 = phi ptr [ %224, %222 ], [ %35, %44 ]
  %144 = phi i32 [ %226, %222 ], [ 0, %44 ]
  %145 = icmp sgt i16 %140, 0
  br i1 %145, label %146, label %222

146:                                              ; preds = %139
  %147 = add nsw i32 %141, -1
  %148 = icmp eq i32 %144, %147
  %149 = icmp eq i32 %144, 0
  %150 = freeze i1 %148
  %151 = or i1 %150, %149
  br i1 %151, label %154, label %152

152:                                              ; preds = %146
  %153 = zext i16 %140 to i32
  br label %183

154:                                              ; preds = %146, %176
  %155 = phi ptr [ %178, %176 ], [ %142, %146 ]
  %156 = phi ptr [ %179, %176 ], [ %143, %146 ]
  %157 = phi i32 [ %177, %176 ], [ 0, %146 ]
  %158 = getelementptr inbounds %struct.BPoint, ptr %155, i64 0, i32 4
  %159 = load i16, ptr %158, align 2, !tbaa !603
  %160 = icmp eq i16 %159, 0
  br i1 %160, label %161, label %176

161:                                              ; preds = %154
  %162 = icmp eq ptr %155, %2
  br i1 %162, label %163, label %169

163:                                              ; preds = %161
  %164 = load i16, ptr %26, align 4, !tbaa !610
  %165 = and i16 %164, 1
  %166 = icmp eq i16 %165, 0
  br i1 %166, label %169, label %167

167:                                              ; preds = %163
  tail call void @UI_ThemeColor(i32 noundef 65) #13
  %168 = select i1 %7, ptr %2, ptr %156
  tail call void @bglVertex3fv(ptr noundef %168) #13
  tail call void @UI_ThemeColor(i32 noundef %14) #13
  br label %176

169:                                              ; preds = %163, %161
  %170 = getelementptr inbounds %struct.BPoint, ptr %155, i64 0, i32 3
  %171 = load i16, ptr %170, align 4, !tbaa !610
  %172 = and i16 %171, 1
  %173 = icmp eq i16 %172, %3
  br i1 %173, label %174, label %176

174:                                              ; preds = %169
  %175 = select i1 %7, ptr %155, ptr %156
  tail call void @bglVertex3fv(ptr noundef %175) #13
  br label %176

176:                                              ; preds = %174, %169, %167, %154
  %177 = add nuw nsw i32 %157, 1
  %178 = getelementptr inbounds %struct.BPoint, ptr %155, i64 1
  %179 = getelementptr inbounds float, ptr %156, i64 3
  %180 = load i16, ptr %22, align 8, !tbaa !440
  %181 = sext i16 %180 to i32
  %182 = icmp slt i32 %177, %181
  br i1 %182, label %154, label %222, !llvm.loop !636

183:                                              ; preds = %152, %215
  %184 = phi i32 [ %220, %215 ], [ %153, %152 ]
  %185 = phi ptr [ %217, %215 ], [ %142, %152 ]
  %186 = phi ptr [ %218, %215 ], [ %143, %152 ]
  %187 = phi i32 [ %216, %215 ], [ 0, %152 ]
  %188 = icmp eq i32 %187, 0
  %189 = add nsw i32 %184, -1
  %190 = icmp eq i32 %187, %189
  %191 = load i16, ptr %23, align 2, !tbaa !441
  %192 = and i16 %191, 2
  %193 = icmp eq i16 %192, 0
  %194 = or i1 %188, %193
  %195 = select i1 %194, i1 true, i1 %190
  br i1 %195, label %196, label %215

196:                                              ; preds = %183
  %197 = getelementptr inbounds %struct.BPoint, ptr %185, i64 0, i32 4
  %198 = load i16, ptr %197, align 2, !tbaa !603
  %199 = icmp eq i16 %198, 0
  br i1 %199, label %200, label %215

200:                                              ; preds = %196
  %201 = icmp eq ptr %185, %2
  br i1 %201, label %202, label %208

202:                                              ; preds = %200
  %203 = load i16, ptr %25, align 4, !tbaa !610
  %204 = and i16 %203, 1
  %205 = icmp eq i16 %204, 0
  br i1 %205, label %208, label %206

206:                                              ; preds = %202
  tail call void @UI_ThemeColor(i32 noundef 65) #13
  %207 = select i1 %7, ptr %2, ptr %186
  tail call void @bglVertex3fv(ptr noundef %207) #13
  tail call void @UI_ThemeColor(i32 noundef %14) #13
  br label %215

208:                                              ; preds = %202, %200
  %209 = getelementptr inbounds %struct.BPoint, ptr %185, i64 0, i32 3
  %210 = load i16, ptr %209, align 4, !tbaa !610
  %211 = and i16 %210, 1
  %212 = icmp eq i16 %211, %3
  br i1 %212, label %213, label %215

213:                                              ; preds = %208
  %214 = select i1 %7, ptr %185, ptr %186
  tail call void @bglVertex3fv(ptr noundef %214) #13
  br label %215

215:                                              ; preds = %196, %208, %213, %206, %183
  %216 = add nuw nsw i32 %187, 1
  %217 = getelementptr inbounds %struct.BPoint, ptr %185, i64 1
  %218 = getelementptr inbounds float, ptr %186, i64 3
  %219 = load i16, ptr %22, align 8, !tbaa !440
  %220 = sext i16 %219 to i32
  %221 = icmp slt i32 %216, %220
  br i1 %221, label %183, label %222, !llvm.loop !636

222:                                              ; preds = %215, %176, %139
  %223 = phi i16 [ %140, %139 ], [ %180, %176 ], [ %219, %215 ]
  %224 = phi ptr [ %143, %139 ], [ %179, %176 ], [ %218, %215 ]
  %225 = phi ptr [ %142, %139 ], [ %178, %176 ], [ %217, %215 ]
  %226 = add nuw nsw i32 %144, 1
  %227 = load i16, ptr %21, align 2, !tbaa !439
  %228 = sext i16 %227 to i32
  %229 = icmp slt i32 %226, %228
  br i1 %229, label %139, label %230, !llvm.loop !635

230:                                              ; preds = %222, %103, %58, %29
  %231 = phi i16 [ %30, %29 ], [ %59, %58 ], [ %104, %103 ], [ %227, %222 ]
  %232 = phi i16 [ %31, %29 ], [ %59, %58 ], [ %105, %103 ], [ %227, %222 ]
  %233 = phi i16 [ %32, %29 ], [ %59, %58 ], [ %105, %103 ], [ %227, %222 ]
  %234 = phi ptr [ %35, %29 ], [ %61, %58 ], [ %107, %103 ], [ %224, %222 ]
  %235 = phi ptr [ %34, %29 ], [ %62, %58 ], [ %108, %103 ], [ %225, %222 ]
  %236 = add nuw nsw i32 %36, 1
  %237 = load i16, ptr %16, align 4, !tbaa !438
  %238 = sext i16 %237 to i32
  %239 = icmp slt i32 %236, %238
  br i1 %239, label %29, label %240, !llvm.loop !637

240:                                              ; preds = %230, %11
  tail call void @glPointSize(float noundef nofpclass(nan inf) 1.000000e+00) #13
  tail call void @bglEnd() #13
  ret void
}

declare ptr @defvert_find_index(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @drawspiral(ptr nocapture noundef readonly %0, float noundef nofpclass(nan inf) %1, ptr nocapture noundef readonly %2, i32 noundef %3) unnamed_addr #0 {
  %5 = alloca [3 x float], align 8
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #13
  %6 = icmp sgt i32 %3, -1
  %7 = load float, ptr %2, align 4, !tbaa !44
  %8 = fmul fast float %7, %1
  %9 = getelementptr inbounds float, ptr %2, i64 1
  %10 = load float, ptr %9, align 4, !tbaa !44
  %11 = getelementptr inbounds float, ptr %2, i64 2
  %12 = load float, ptr %11, align 4, !tbaa !44
  %13 = getelementptr inbounds [4 x float], ptr %2, i64 1
  %14 = load float, ptr %13, align 4, !tbaa !44
  %15 = fmul fast float %14, %1
  %16 = getelementptr inbounds [4 x float], ptr %2, i64 1, i64 1
  %17 = load float, ptr %16, align 4, !tbaa !44
  %18 = insertelement <2 x float> poison, float %17, i64 0
  %19 = insertelement <2 x float> %18, float %12, i64 1
  %20 = insertelement <2 x float> poison, float %1, i64 0
  %21 = shufflevector <2 x float> %20, <2 x float> poison, <2 x i32> zeroinitializer
  %22 = fmul fast <2 x float> %19, %21
  %23 = getelementptr inbounds [4 x float], ptr %2, i64 1, i64 2
  %24 = load float, ptr %23, align 4, !tbaa !44
  %25 = insertelement <2 x float> poison, float %10, i64 0
  %26 = insertelement <2 x float> %25, float %24, i64 1
  %27 = fmul fast <2 x float> %26, %21
  tail call void @glBegin(i32 noundef 3) #13
  br i1 %6, label %28, label %73

28:                                               ; preds = %4
  %29 = getelementptr inbounds float, ptr %0, i64 1
  %30 = getelementptr inbounds float, ptr %5, i64 1
  %31 = load <2 x float>, ptr %0, align 4, !tbaa !44
  store <2 x float> %31, ptr %5, align 8, !tbaa !44
  %32 = getelementptr inbounds float, ptr %0, i64 2
  %33 = load float, ptr %32, align 4, !tbaa !44
  %34 = getelementptr inbounds float, ptr %5, i64 2
  store float %33, ptr %34, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  %35 = extractelement <2 x float> %27, i64 0
  %36 = extractelement <2 x float> %27, i64 1
  %37 = extractelement <2 x float> %22, i64 0
  %38 = extractelement <2 x float> %22, i64 1
  br label %39

39:                                               ; preds = %28, %39
  %40 = phi i32 [ 0, %28 ], [ %71, %39 ]
  %41 = phi i32 [ %3, %28 ], [ %45, %39 ]
  %42 = add nsw i32 %40, %41
  %43 = icmp sgt i32 %42, 31
  %44 = sub nsw i32 1, %40
  %45 = select i1 %43, i32 %44, i32 %41
  %46 = sitofp i32 %40 to float
  %47 = fmul fast float %46, 3.125000e-02
  %48 = add nsw i32 %45, %40
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [32 x float], ptr @sinval, i64 0, i64 %49
  %51 = load float, ptr %50, align 4, !tbaa !44
  %52 = fmul fast float %51, %47
  %53 = getelementptr inbounds [32 x float], ptr @cosval, i64 0, i64 %49
  %54 = load float, ptr %53, align 4, !tbaa !44
  %55 = fmul fast float %54, %47
  %56 = load float, ptr %0, align 4, !tbaa !44
  %57 = fmul fast float %52, %8
  %58 = fmul fast float %55, %15
  %59 = fadd fast float %56, %57
  %60 = fadd fast float %59, %58
  store float %60, ptr %5, align 8, !tbaa !44
  %61 = load float, ptr %29, align 4, !tbaa !44
  %62 = fmul fast float %52, %35
  %63 = fmul fast float %55, %37
  %64 = fadd fast float %63, %62
  %65 = fadd fast float %64, %61
  store float %65, ptr %30, align 4, !tbaa !44
  %66 = load float, ptr %32, align 4, !tbaa !44
  %67 = fmul fast float %52, %38
  %68 = fmul fast float %55, %36
  %69 = fadd fast float %68, %67
  %70 = fadd fast float %69, %66
  store float %70, ptr %34, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  %71 = add nuw nsw i32 %40, 1
  %72 = icmp eq i32 %71, 32
  br i1 %72, label %139, label %39, !llvm.loop !638

73:                                               ; preds = %4
  %74 = sub nsw i32 0, %3
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds [32 x float], ptr @sinval, i64 0, i64 %75
  %77 = load float, ptr %76, align 4, !tbaa !44
  %78 = getelementptr inbounds [32 x float], ptr @cosval, i64 0, i64 %75
  %79 = load float, ptr %78, align 4, !tbaa !44
  %80 = load float, ptr %0, align 4, !tbaa !44
  %81 = getelementptr inbounds float, ptr %0, i64 1
  %82 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 1
  %83 = getelementptr inbounds float, ptr %0, i64 2
  %84 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 2
  %85 = insertelement <2 x float> poison, float %77, i64 0
  %86 = insertelement <2 x float> %85, float %79, i64 1
  %87 = fmul fast <2 x float> %86, <float 9.687500e-01, float 9.687500e-01>
  %88 = extractelement <2 x float> %87, i64 0
  %89 = fmul fast float %88, %8
  %90 = extractelement <2 x float> %87, i64 1
  %91 = fmul fast float %90, %15
  %92 = fadd fast float %80, %89
  %93 = fadd fast float %92, %91
  store float %93, ptr %5, align 8, !tbaa !44
  %94 = load <2 x float>, ptr %81, align 4, !tbaa !44
  %95 = shufflevector <2 x float> %87, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %96 = fmul fast <2 x float> %95, %22
  %97 = fmul fast <2 x float> %87, %27
  %98 = fadd fast <2 x float> %97, %96
  %99 = fadd fast <2 x float> %98, %94
  store <2 x float> %99, ptr %82, align 4, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  %100 = extractelement <2 x float> %27, i64 0
  %101 = extractelement <2 x float> %27, i64 1
  %102 = extractelement <2 x float> %22, i64 0
  %103 = extractelement <2 x float> %22, i64 1
  br label %104

104:                                              ; preds = %73, %104
  %105 = phi i32 [ 0, %73 ], [ %137, %104 ]
  %106 = phi i32 [ %74, %73 ], [ %110, %104 ]
  %107 = add nsw i32 %105, %106
  %108 = icmp sgt i32 %107, 31
  %109 = sub nsw i32 1, %105
  %110 = select i1 %108, i32 %109, i32 %106
  %111 = sub nuw nsw i32 31, %105
  %112 = sitofp i32 %111 to float
  %113 = fmul fast float %112, 3.125000e-02
  %114 = add nsw i32 %110, %105
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [32 x float], ptr @sinval, i64 0, i64 %115
  %117 = load float, ptr %116, align 4, !tbaa !44
  %118 = fmul fast float %117, %113
  %119 = getelementptr inbounds [32 x float], ptr @cosval, i64 0, i64 %115
  %120 = load float, ptr %119, align 4, !tbaa !44
  %121 = fmul fast float %120, %113
  %122 = load float, ptr %0, align 4, !tbaa !44
  %123 = fmul fast float %118, %8
  %124 = fmul fast float %121, %15
  %125 = fadd fast float %122, %123
  %126 = fadd fast float %125, %124
  store float %126, ptr %5, align 8, !tbaa !44
  %127 = load float, ptr %81, align 4, !tbaa !44
  %128 = fmul fast float %118, %100
  %129 = fmul fast float %121, %102
  %130 = fadd fast float %129, %128
  %131 = fadd fast float %130, %127
  store float %131, ptr %82, align 4, !tbaa !44
  %132 = load float, ptr %83, align 4, !tbaa !44
  %133 = fmul fast float %118, %103
  %134 = fmul fast float %121, %101
  %135 = fadd fast float %134, %133
  %136 = fadd fast float %135, %132
  store float %136, ptr %84, align 8, !tbaa !44
  call void @glVertex3fv(ptr noundef nonnull %5) #13
  %137 = add nuw nsw i32 %105, 1
  %138 = icmp eq i32 %137, 32
  br i1 %138, label %139, label %104, !llvm.loop !639

139:                                              ; preds = %104, %39
  call void @glEnd() #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #13
  ret void
}

declare i32 @where_on_path(ptr noundef, float noundef nofpclass(nan inf), ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @drawtube(ptr nocapture noundef readonly %0, float noundef nofpclass(nan inf) %1, float noundef nofpclass(nan inf) %2, ptr nocapture noundef readonly %3) unnamed_addr #0 {
  %5 = alloca [3 x float], align 8
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #13
  tail call void @drawcircball(i32 noundef 2, ptr noundef %0, float noundef nofpclass(nan inf) %1, ptr noundef %3)
  %6 = getelementptr inbounds float, ptr %0, i64 1
  %7 = load <2 x float>, ptr %0, align 4, !tbaa !44
  store <2 x float> %7, ptr %5, align 8, !tbaa !44
  %8 = getelementptr inbounds float, ptr %0, i64 2
  %9 = load float, ptr %8, align 4, !tbaa !44
  %10 = getelementptr inbounds float, ptr %5, i64 2
  %11 = fadd fast float %9, %2
  store float %11, ptr %10, align 8, !tbaa !44
  call void @drawcircball(i32 noundef 2, ptr noundef nonnull %5, float noundef nofpclass(nan inf) %1, ptr noundef %3)
  tail call void @glBegin(i32 noundef 1) #13
  %12 = load float, ptr %0, align 4, !tbaa !44
  %13 = fadd fast float %12, %1
  %14 = load float, ptr %6, align 4, !tbaa !44
  %15 = load float, ptr %8, align 4, !tbaa !44
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %13, float noundef nofpclass(nan inf) %14, float noundef nofpclass(nan inf) %15) #13
  %16 = extractelement <2 x float> %7, i64 0
  %17 = fadd fast float %16, %1
  %18 = extractelement <2 x float> %7, i64 1
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %17, float noundef nofpclass(nan inf) %18, float noundef nofpclass(nan inf) %11) #13
  %19 = load float, ptr %0, align 4, !tbaa !44
  %20 = fsub fast float %19, %1
  %21 = load float, ptr %6, align 4, !tbaa !44
  %22 = load float, ptr %8, align 4, !tbaa !44
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %20, float noundef nofpclass(nan inf) %21, float noundef nofpclass(nan inf) %22) #13
  %23 = fsub fast float %16, %1
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %23, float noundef nofpclass(nan inf) %18, float noundef nofpclass(nan inf) %11) #13
  %24 = load float, ptr %0, align 4, !tbaa !44
  %25 = load float, ptr %6, align 4, !tbaa !44
  %26 = fadd fast float %25, %1
  %27 = load float, ptr %8, align 4, !tbaa !44
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %24, float noundef nofpclass(nan inf) %26, float noundef nofpclass(nan inf) %27) #13
  %28 = fadd fast float %18, %1
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %16, float noundef nofpclass(nan inf) %28, float noundef nofpclass(nan inf) %11) #13
  %29 = load float, ptr %0, align 4, !tbaa !44
  %30 = load float, ptr %6, align 4, !tbaa !44
  %31 = fsub fast float %30, %1
  %32 = load float, ptr %8, align 4, !tbaa !44
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %29, float noundef nofpclass(nan inf) %31, float noundef nofpclass(nan inf) %32) #13
  %33 = fsub fast float %18, %1
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %16, float noundef nofpclass(nan inf) %33, float noundef nofpclass(nan inf) %11) #13
  tail call void @glEnd() #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #13
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @drawcone(ptr nocapture noundef readonly %0, float noundef nofpclass(nan inf) %1, float noundef nofpclass(nan inf) %2, ptr nocapture noundef readonly %3) unnamed_addr #0 {
  %5 = alloca [3 x float], align 8
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #13
  %6 = getelementptr inbounds float, ptr %0, i64 1
  %7 = load <2 x float>, ptr %0, align 4, !tbaa !44
  store <2 x float> %7, ptr %5, align 8, !tbaa !44
  %8 = getelementptr inbounds float, ptr %0, i64 2
  %9 = load float, ptr %8, align 4, !tbaa !44
  %10 = getelementptr inbounds float, ptr %5, i64 2
  %11 = fadd fast float %9, %2
  store float %11, ptr %10, align 8, !tbaa !44
  call void @drawcircball(i32 noundef 2, ptr noundef nonnull %5, float noundef nofpclass(nan inf) %1, ptr noundef %3)
  tail call void @glBegin(i32 noundef 1) #13
  %12 = load float, ptr %0, align 4, !tbaa !44
  %13 = load float, ptr %6, align 4, !tbaa !44
  %14 = load float, ptr %8, align 4, !tbaa !44
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %12, float noundef nofpclass(nan inf) %13, float noundef nofpclass(nan inf) %14) #13
  %15 = extractelement <2 x float> %7, i64 0
  %16 = fadd fast float %15, %1
  %17 = extractelement <2 x float> %7, i64 1
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %16, float noundef nofpclass(nan inf) %17, float noundef nofpclass(nan inf) %11) #13
  %18 = load float, ptr %0, align 4, !tbaa !44
  %19 = load float, ptr %6, align 4, !tbaa !44
  %20 = load float, ptr %8, align 4, !tbaa !44
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %18, float noundef nofpclass(nan inf) %19, float noundef nofpclass(nan inf) %20) #13
  %21 = fsub fast float %15, %1
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %21, float noundef nofpclass(nan inf) %17, float noundef nofpclass(nan inf) %11) #13
  %22 = load float, ptr %0, align 4, !tbaa !44
  %23 = load float, ptr %6, align 4, !tbaa !44
  %24 = load float, ptr %8, align 4, !tbaa !44
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %22, float noundef nofpclass(nan inf) %23, float noundef nofpclass(nan inf) %24) #13
  %25 = fadd fast float %17, %1
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %15, float noundef nofpclass(nan inf) %25, float noundef nofpclass(nan inf) %11) #13
  %26 = load float, ptr %0, align 4, !tbaa !44
  %27 = load float, ptr %6, align 4, !tbaa !44
  %28 = load float, ptr %8, align 4, !tbaa !44
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %26, float noundef nofpclass(nan inf) %27, float noundef nofpclass(nan inf) %28) #13
  %29 = fsub fast float %17, %1
  tail call void @glVertex3f(float noundef nofpclass(nan inf) %15, float noundef nofpclass(nan inf) %29, float noundef nofpclass(nan inf) %11) #13
  tail call void @glEnd() #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #13
  ret void
}

declare void @PE_update_object(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

declare void @psys_cache_edit_paths(ptr noundef, ptr noundef, ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare ptr @PE_settings(ptr noundef) local_unnamed_addr #1

declare i32 @psys_check_enabled(ptr noundef, ptr noundef) local_unnamed_addr #1

declare i32 @psys_in_edit_mode(ptr noundef, ptr noundef) local_unnamed_addr #1

declare ptr @psys_get_modifier(ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @psys_count_keyed_targets(ptr noundef) local_unnamed_addr #1

declare ptr @psys_get_current(ptr noundef) local_unnamed_addr #1

declare nofpclass(nan inf) float @psys_get_timestep(ptr noundef) local_unnamed_addr #1

declare void @psys_make_temp_pointcache(ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @psys_free_pdd(ptr noundef) local_unnamed_addr #1

declare ptr @psys_create_lattice_deform_data(ptr noundef) local_unnamed_addr #1

declare nofpclass(nan inf) float @psys_get_child_time(ptr noundef, ptr noundef, float noundef nofpclass(nan inf), ptr noundef, ptr noundef) local_unnamed_addr #1

declare nofpclass(nan inf) float @psys_get_child_size(ptr noundef, ptr noundef, float noundef nofpclass(nan inf), ptr noundef) local_unnamed_addr #1

declare void @psys_get_particle_on_path(ptr noundef, i32 noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @draw_particle_data(ptr nocapture readonly %0, ptr %1, ptr noundef %2, ptr noundef %3, i32 noundef %4, ptr nocapture noundef readonly %5, ptr noundef %6, ptr noundef %7, float noundef nofpclass(nan inf) %8, float noundef nofpclass(nan inf) %9, float noundef nofpclass(nan inf) %10, float noundef nofpclass(nan inf) %11) unnamed_addr #0 {
  %13 = alloca [3 x float], align 8
  %14 = alloca [3 x float], align 8
  %15 = alloca [3 x float], align 8
  %16 = alloca [3 x float], align 4
  %17 = alloca [3 x float], align 8
  %18 = icmp eq ptr %1, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 47
  tail call void @mul_m4_v3(ptr noundef nonnull %20, ptr noundef %3) #13
  br label %21

21:                                               ; preds = %19, %12
  %22 = icmp eq i32 %4, 9
  br i1 %22, label %23, label %81

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.ParticleSettings, ptr %0, i64 0, i32 43
  %25 = load float, ptr %24, align 8, !tbaa !44
  %26 = getelementptr inbounds %struct.ParticleBillboardData, ptr %6, i64 0, i32 3
  store float %25, ptr %26, align 8, !tbaa !44
  %27 = getelementptr inbounds %struct.ParticleSettings, ptr %0, i64 0, i32 43, i64 1
  %28 = load float, ptr %27, align 4, !tbaa !44
  %29 = getelementptr inbounds %struct.ParticleBillboardData, ptr %6, i64 0, i32 3, i64 1
  store float %28, ptr %29, align 4, !tbaa !44
  %30 = getelementptr inbounds %struct.ParticleSettings, ptr %0, i64 0, i32 44
  %31 = load float, ptr %30, align 8, !tbaa !44
  %32 = fmul fast float %31, %9
  %33 = getelementptr inbounds %struct.ParticleBillboardData, ptr %6, i64 0, i32 4
  store float %32, ptr %33, align 8, !tbaa !44
  %34 = getelementptr inbounds %struct.ParticleSettings, ptr %0, i64 0, i32 37
  %35 = load i16, ptr %34, align 8, !tbaa !157
  %36 = icmp eq i16 %35, 4
  br i1 %36, label %37, label %66

37:                                               ; preds = %23
  %38 = getelementptr inbounds %struct.ParticleKey, ptr %3, i64 0, i32 1
  %39 = load float, ptr %38, align 4, !tbaa !44
  %40 = fmul fast float %39, %39
  %41 = getelementptr inbounds %struct.ParticleKey, ptr %3, i64 0, i32 1, i64 1
  %42 = load <2 x float>, ptr %41, align 4, !tbaa !44
  %43 = fmul fast <2 x float> %42, %42
  %44 = extractelement <2 x float> %43, i64 0
  %45 = fadd fast float %44, %40
  %46 = extractelement <2 x float> %43, i64 1
  %47 = fadd fast float %45, %46
  %48 = tail call fast float @llvm.sqrt.f32(float %47)
  %49 = getelementptr inbounds %struct.ParticleSettings, ptr %0, i64 0, i32 45
  %50 = load float, ptr %49, align 8, !tbaa !640
  %51 = fmul fast float %48, %50
  %52 = getelementptr inbounds %struct.ParticleSettings, ptr %0, i64 0, i32 46
  %53 = load float, ptr %52, align 4, !tbaa !641
  %54 = fmul fast float %48, %53
  %55 = getelementptr inbounds %struct.ParticleSettings, ptr %0, i64 0, i32 44, i64 1
  %56 = load float, ptr %55, align 4, !tbaa !44
  %57 = fmul fast float %56, %9
  %58 = fadd fast float %57, %51
  %59 = fadd fast float %58, %54
  %60 = getelementptr inbounds %struct.ParticleBillboardData, ptr %6, i64 0, i32 4, i64 1
  store float %59, ptr %60, align 4, !tbaa !44
  %61 = fcmp fast ogt float %59, 0.000000e+00
  br i1 %61, label %62, label %71

62:                                               ; preds = %37
  %63 = fsub fast float %51, %54
  %64 = fdiv fast float %63, %59
  %65 = fadd fast float %64, %28
  store float %65, ptr %29, align 4, !tbaa !44
  br label %71

66:                                               ; preds = %23
  %67 = getelementptr inbounds %struct.ParticleSettings, ptr %0, i64 0, i32 44, i64 1
  %68 = load float, ptr %67, align 4, !tbaa !44
  %69 = fmul fast float %68, %9
  %70 = getelementptr inbounds %struct.ParticleBillboardData, ptr %6, i64 0, i32 4, i64 1
  store float %69, ptr %70, align 4, !tbaa !44
  br label %71

71:                                               ; preds = %37, %62, %66
  %72 = getelementptr inbounds %struct.ParticleSettings, ptr %0, i64 0, i32 41
  %73 = load float, ptr %72, align 8, !tbaa !642
  %74 = getelementptr inbounds %struct.ParticleSettings, ptr %0, i64 0, i32 42
  %75 = load float, ptr %74, align 4, !tbaa !643
  %76 = fmul fast float %75, %10
  %77 = fsub fast float 1.000000e+00, %76
  %78 = fmul fast float %77, %73
  %79 = getelementptr inbounds %struct.ParticleBillboardData, ptr %6, i64 0, i32 5
  store float %78, ptr %79, align 8, !tbaa !644
  %80 = getelementptr inbounds %struct.ParticleBillboardData, ptr %6, i64 0, i32 7
  store float %8, ptr %80, align 8, !tbaa !645
  br label %81

81:                                               ; preds = %71, %21
  %82 = tail call fast nofpclass(nan inf) float @ED_view3d_pixel_size(ptr noundef %2, ptr noundef %3) #13
  %83 = fmul fast float %82, %11
  %84 = getelementptr inbounds %struct.ParticleSettings, ptr %0, i64 0, i32 15
  %85 = load i32, ptr %84, align 8, !tbaa !68
  %86 = getelementptr inbounds %struct.ParticleSettings, ptr %0, i64 0, i32 116
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %13) #13
  %87 = icmp eq ptr %7, null
  br i1 %87, label %100, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds %struct.ParticleDrawData, ptr %7, i64 0, i32 1
  %90 = load ptr, ptr %89, align 8, !tbaa !169
  %91 = getelementptr inbounds %struct.ParticleDrawData, ptr %7, i64 0, i32 5
  %92 = load ptr, ptr %91, align 8, !tbaa !171
  %93 = getelementptr inbounds %struct.ParticleDrawData, ptr %7, i64 0, i32 8
  %94 = load ptr, ptr %93, align 8, !tbaa !173
  %95 = icmp eq ptr %94, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %88
  %97 = load <2 x float>, ptr %94, align 4, !tbaa !44
  %98 = getelementptr inbounds float, ptr %94, i64 2
  %99 = load float, ptr %98, align 4, !tbaa !44
  br label %100

100:                                              ; preds = %96, %88, %81
  %101 = phi float [ 0.000000e+00, %81 ], [ 0.000000e+00, %88 ], [ %99, %96 ]
  %102 = phi ptr [ null, %81 ], [ %90, %88 ], [ %90, %96 ]
  %103 = phi ptr [ null, %81 ], [ %92, %88 ], [ %92, %96 ]
  %104 = phi <2 x float> [ zeroinitializer, %81 ], [ zeroinitializer, %88 ], [ %97, %96 ]
  switch i32 %4, label %449 [
    i32 1, label %105
    i32 3, label %133
    i32 4, label %133
    i32 5, label %260
    i32 2, label %338
    i32 9, label %339
  ]

105:                                              ; preds = %100
  %106 = icmp eq ptr %102, null
  br i1 %106, label %118, label %107

107:                                              ; preds = %105
  %108 = load float, ptr %3, align 4, !tbaa !44
  store float %108, ptr %102, align 4, !tbaa !44
  %109 = getelementptr inbounds float, ptr %3, i64 1
  %110 = load float, ptr %109, align 4, !tbaa !44
  %111 = getelementptr inbounds float, ptr %102, i64 1
  store float %110, ptr %111, align 4, !tbaa !44
  %112 = getelementptr inbounds float, ptr %3, i64 2
  %113 = load float, ptr %112, align 4, !tbaa !44
  %114 = getelementptr inbounds float, ptr %102, i64 2
  store float %113, ptr %114, align 4, !tbaa !44
  %115 = getelementptr inbounds %struct.ParticleDrawData, ptr %7, i64 0, i32 1
  %116 = load ptr, ptr %115, align 8, !tbaa !169
  %117 = getelementptr inbounds float, ptr %116, i64 3
  store ptr %117, ptr %115, align 8, !tbaa !169
  br label %118

118:                                              ; preds = %107, %105
  %119 = icmp eq ptr %103, null
  br i1 %119, label %449, label %120

120:                                              ; preds = %118
  %121 = getelementptr inbounds %struct.ParticleDrawData, ptr %7, i64 0, i32 8
  %122 = load ptr, ptr %121, align 8, !tbaa !173
  %123 = load float, ptr %122, align 4, !tbaa !44
  store float %123, ptr %103, align 4, !tbaa !44
  %124 = getelementptr inbounds float, ptr %122, i64 1
  %125 = load float, ptr %124, align 4, !tbaa !44
  %126 = getelementptr inbounds float, ptr %103, i64 1
  store float %125, ptr %126, align 4, !tbaa !44
  %127 = getelementptr inbounds float, ptr %122, i64 2
  %128 = load float, ptr %127, align 4, !tbaa !44
  %129 = getelementptr inbounds float, ptr %103, i64 2
  store float %128, ptr %129, align 4, !tbaa !44
  %130 = getelementptr inbounds %struct.ParticleDrawData, ptr %7, i64 0, i32 5
  %131 = load ptr, ptr %130, align 8, !tbaa !171
  %132 = getelementptr inbounds float, ptr %131, i64 3
  store ptr %132, ptr %130, align 8, !tbaa !171
  br label %449

133:                                              ; preds = %100, %100
  %134 = fmul fast float %83, 2.000000e+00
  store float %134, ptr %13, align 8, !tbaa !44
  %135 = getelementptr inbounds [3 x float], ptr %13, i64 0, i64 2
  %136 = getelementptr inbounds [3 x float], ptr %13, i64 0, i64 1
  store <2 x float> zeroinitializer, ptr %136, align 4, !tbaa !44
  %137 = getelementptr inbounds %struct.ParticleKey, ptr %3, i64 0, i32 2
  call void @mul_qt_v3(ptr noundef nonnull %137, ptr noundef nonnull %13) #13
  %138 = icmp eq i32 %4, 4
  %139 = icmp eq ptr %103, null
  br i1 %138, label %140, label %153

140:                                              ; preds = %133
  br i1 %139, label %147, label %141

141:                                              ; preds = %140
  %142 = getelementptr inbounds float, ptr %103, i64 8
  store <8 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, ptr %103, align 4, !tbaa !44
  %143 = getelementptr inbounds float, ptr %103, i64 16
  store <2 x float> <float 0.000000e+00, float 1.000000e+00>, ptr %143, align 4, !tbaa !44
  store <8 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, ptr %142, align 4, !tbaa !44
  %144 = getelementptr inbounds %struct.ParticleDrawData, ptr %7, i64 0, i32 5
  %145 = load ptr, ptr %144, align 8, !tbaa !171
  %146 = getelementptr inbounds float, ptr %145, i64 18
  store ptr %146, ptr %144, align 8, !tbaa !171
  br label %147

147:                                              ; preds = %141, %140
  %148 = load float, ptr %3, align 4, !tbaa !44
  %149 = getelementptr inbounds float, ptr %3, i64 1
  %150 = load float, ptr %13, align 8, !tbaa !44
  %151 = load <2 x float>, ptr %149, align 4, !tbaa !44
  %152 = load <2 x float>, ptr %136, align 4, !tbaa !44
  br label %177

153:                                              ; preds = %133
  br i1 %139, label %169, label %154

154:                                              ; preds = %153
  %155 = getelementptr inbounds float, ptr %103, i64 15
  %156 = getelementptr inbounds float, ptr %103, i64 12
  %157 = getelementptr inbounds float, ptr %103, i64 9
  %158 = getelementptr inbounds float, ptr %103, i64 6
  %159 = getelementptr inbounds float, ptr %103, i64 3
  store <2 x float> %104, ptr %155, align 4, !tbaa !44
  store <2 x float> %104, ptr %156, align 4, !tbaa !44
  store <2 x float> %104, ptr %157, align 4, !tbaa !44
  store <2 x float> %104, ptr %158, align 4, !tbaa !44
  store <2 x float> %104, ptr %159, align 4, !tbaa !44
  store <2 x float> %104, ptr %103, align 4, !tbaa !44
  %160 = getelementptr inbounds float, ptr %103, i64 17
  store float %101, ptr %160, align 4, !tbaa !44
  %161 = getelementptr inbounds float, ptr %103, i64 14
  store float %101, ptr %161, align 4, !tbaa !44
  %162 = getelementptr inbounds float, ptr %103, i64 11
  store float %101, ptr %162, align 4, !tbaa !44
  %163 = getelementptr inbounds float, ptr %103, i64 8
  store float %101, ptr %163, align 4, !tbaa !44
  %164 = getelementptr inbounds float, ptr %103, i64 5
  store float %101, ptr %164, align 4, !tbaa !44
  %165 = getelementptr inbounds float, ptr %103, i64 2
  store float %101, ptr %165, align 4, !tbaa !44
  %166 = getelementptr inbounds %struct.ParticleDrawData, ptr %7, i64 0, i32 5
  %167 = load ptr, ptr %166, align 8, !tbaa !171
  %168 = getelementptr inbounds float, ptr %167, i64 18
  store ptr %168, ptr %166, align 8, !tbaa !171
  br label %169

169:                                              ; preds = %154, %153
  %170 = load float, ptr %3, align 4, !tbaa !44
  %171 = load float, ptr %13, align 8, !tbaa !44
  %172 = fsub fast float %170, %171
  %173 = getelementptr inbounds float, ptr %3, i64 1
  %174 = load <2 x float>, ptr %173, align 4, !tbaa !44
  %175 = load <2 x float>, ptr %136, align 4, !tbaa !44
  %176 = fsub fast <2 x float> %174, %175
  br label %177

177:                                              ; preds = %169, %147
  %178 = phi float [ %150, %147 ], [ %171, %169 ]
  %179 = phi float [ %148, %147 ], [ %170, %169 ]
  %180 = phi float [ %148, %147 ], [ %172, %169 ]
  %181 = phi <2 x float> [ %151, %147 ], [ %174, %169 ]
  %182 = phi <2 x float> [ %152, %147 ], [ %175, %169 ]
  %183 = phi <2 x float> [ %151, %147 ], [ %176, %169 ]
  %184 = fadd fast float %179, %178
  %185 = getelementptr inbounds float, ptr %3, i64 1
  %186 = fadd fast <2 x float> %181, %182
  store <2 x float> %186, ptr %136, align 4, !tbaa !44
  %187 = getelementptr inbounds %struct.ParticleDrawData, ptr %7, i64 0, i32 1
  %188 = load ptr, ptr %187, align 8, !tbaa !169
  store float %184, ptr %188, align 4, !tbaa !44
  %189 = load float, ptr %136, align 4, !tbaa !44
  %190 = getelementptr inbounds float, ptr %188, i64 1
  store float %189, ptr %190, align 4, !tbaa !44
  %191 = load float, ptr %135, align 8, !tbaa !44
  %192 = getelementptr inbounds float, ptr %188, i64 2
  store float %191, ptr %192, align 4, !tbaa !44
  %193 = getelementptr inbounds float, ptr %188, i64 3
  store float %180, ptr %193, align 4, !tbaa !44
  %194 = getelementptr inbounds float, ptr %188, i64 4
  store <2 x float> %183, ptr %194, align 4, !tbaa !44
  %195 = getelementptr inbounds float, ptr %188, i64 6
  store ptr %195, ptr %187, align 8, !tbaa !169
  store float %134, ptr %136, align 4, !tbaa !44
  store float 0.000000e+00, ptr %135, align 8, !tbaa !44
  store float 0.000000e+00, ptr %13, align 8, !tbaa !44
  call void @mul_qt_v3(ptr noundef nonnull %137, ptr noundef nonnull %13) #13
  %196 = load float, ptr %3, align 4, !tbaa !44
  %197 = load float, ptr %136, align 4, !tbaa !44
  br i1 %138, label %198, label %202

198:                                              ; preds = %177
  %199 = load <2 x float>, ptr %185, align 4, !tbaa !44
  %200 = load float, ptr %13, align 8, !tbaa !44
  %201 = load float, ptr %135, align 8, !tbaa !44
  br label %210

202:                                              ; preds = %177
  %203 = load float, ptr %13, align 8, !tbaa !44
  %204 = fsub fast float %196, %203
  %205 = load <2 x float>, ptr %185, align 4, !tbaa !44
  %206 = load float, ptr %135, align 8, !tbaa !44
  %207 = insertelement <2 x float> poison, float %197, i64 0
  %208 = insertelement <2 x float> %207, float %206, i64 1
  %209 = fsub fast <2 x float> %205, %208
  br label %210

210:                                              ; preds = %202, %198
  %211 = phi float [ %201, %198 ], [ %206, %202 ]
  %212 = phi float [ %200, %198 ], [ %203, %202 ]
  %213 = phi float [ %196, %198 ], [ %204, %202 ]
  %214 = phi <2 x float> [ %199, %198 ], [ %205, %202 ]
  %215 = phi <2 x float> [ %199, %198 ], [ %209, %202 ]
  %216 = fadd fast float %212, %196
  %217 = insertelement <2 x float> poison, float %197, i64 0
  %218 = insertelement <2 x float> %217, float %211, i64 1
  %219 = fadd fast <2 x float> %214, %218
  store <2 x float> %219, ptr %136, align 4, !tbaa !44
  %220 = load ptr, ptr %187, align 8, !tbaa !169
  store float %216, ptr %220, align 4, !tbaa !44
  %221 = load float, ptr %136, align 4, !tbaa !44
  %222 = getelementptr inbounds float, ptr %220, i64 1
  store float %221, ptr %222, align 4, !tbaa !44
  %223 = load float, ptr %135, align 8, !tbaa !44
  %224 = getelementptr inbounds float, ptr %220, i64 2
  store float %223, ptr %224, align 4, !tbaa !44
  %225 = getelementptr inbounds float, ptr %220, i64 3
  store float %213, ptr %225, align 4, !tbaa !44
  %226 = getelementptr inbounds float, ptr %220, i64 4
  store <2 x float> %215, ptr %226, align 4, !tbaa !44
  %227 = getelementptr inbounds float, ptr %220, i64 6
  store ptr %227, ptr %187, align 8, !tbaa !169
  store float %134, ptr %135, align 8, !tbaa !44
  store <2 x float> zeroinitializer, ptr %13, align 8, !tbaa !44
  call void @mul_qt_v3(ptr noundef nonnull %137, ptr noundef nonnull %13) #13
  %228 = load float, ptr %3, align 4, !tbaa !44
  %229 = load float, ptr %136, align 4, !tbaa !44
  br i1 %138, label %230, label %234

230:                                              ; preds = %210
  %231 = load <2 x float>, ptr %185, align 4, !tbaa !44
  %232 = load float, ptr %13, align 8, !tbaa !44
  %233 = load float, ptr %135, align 8, !tbaa !44
  br label %242

234:                                              ; preds = %210
  %235 = load float, ptr %13, align 8, !tbaa !44
  %236 = fsub fast float %228, %235
  %237 = load <2 x float>, ptr %185, align 4, !tbaa !44
  %238 = load float, ptr %135, align 8, !tbaa !44
  %239 = insertelement <2 x float> poison, float %229, i64 0
  %240 = insertelement <2 x float> %239, float %238, i64 1
  %241 = fsub fast <2 x float> %237, %240
  br label %242

242:                                              ; preds = %234, %230
  %243 = phi float [ %233, %230 ], [ %238, %234 ]
  %244 = phi float [ %232, %230 ], [ %235, %234 ]
  %245 = phi float [ %228, %230 ], [ %236, %234 ]
  %246 = phi <2 x float> [ %231, %230 ], [ %237, %234 ]
  %247 = phi <2 x float> [ %231, %230 ], [ %241, %234 ]
  %248 = fadd fast float %244, %228
  %249 = insertelement <2 x float> poison, float %229, i64 0
  %250 = insertelement <2 x float> %249, float %243, i64 1
  %251 = fadd fast <2 x float> %246, %250
  store <2 x float> %251, ptr %136, align 4, !tbaa !44
  %252 = load ptr, ptr %187, align 8, !tbaa !169
  store float %248, ptr %252, align 4, !tbaa !44
  %253 = load float, ptr %136, align 4, !tbaa !44
  %254 = getelementptr inbounds float, ptr %252, i64 1
  store float %253, ptr %254, align 4, !tbaa !44
  %255 = load float, ptr %135, align 8, !tbaa !44
  %256 = getelementptr inbounds float, ptr %252, i64 2
  store float %255, ptr %256, align 4, !tbaa !44
  %257 = getelementptr inbounds float, ptr %252, i64 3
  store float %245, ptr %257, align 4, !tbaa !44
  %258 = getelementptr inbounds float, ptr %252, i64 4
  store <2 x float> %247, ptr %258, align 4, !tbaa !44
  %259 = getelementptr inbounds float, ptr %252, i64 6
  store ptr %259, ptr %187, align 8, !tbaa !169
  br label %449

260:                                              ; preds = %100
  %261 = getelementptr inbounds %struct.ParticleKey, ptr %3, i64 0, i32 1
  %262 = load float, ptr %261, align 4, !tbaa !44
  %263 = getelementptr inbounds %struct.ParticleKey, ptr %3, i64 0, i32 1, i64 1
  %264 = load float, ptr %263, align 4, !tbaa !44
  %265 = getelementptr inbounds float, ptr %13, i64 1
  %266 = getelementptr inbounds %struct.ParticleKey, ptr %3, i64 0, i32 1, i64 2
  %267 = load float, ptr %266, align 4, !tbaa !44
  %268 = getelementptr inbounds float, ptr %13, i64 2
  %269 = fmul fast float %262, %262
  %270 = fmul fast float %264, %264
  %271 = fadd fast float %270, %269
  %272 = fmul fast float %267, %267
  %273 = fadd fast float %271, %272
  %274 = fcmp fast ogt float %273, 0x38AA95A5C0000000
  br i1 %274, label %275, label %281

275:                                              ; preds = %260
  %276 = tail call fast float @llvm.sqrt.f32(float %273)
  %277 = fdiv fast float 1.000000e+00, %276
  %278 = fmul fast float %277, %262
  %279 = fmul fast float %277, %264
  %280 = fmul fast float %277, %267
  br label %281

281:                                              ; preds = %275, %260
  %282 = phi float [ %278, %275 ], [ 0.000000e+00, %260 ]
  %283 = phi float [ %279, %275 ], [ 0.000000e+00, %260 ]
  %284 = phi float [ %280, %275 ], [ 0.000000e+00, %260 ]
  store float %282, ptr %13, align 8
  store float %283, ptr %265, align 4
  store float %284, ptr %268, align 8
  %285 = and i32 %85, 4096
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %292, label %287

287:                                              ; preds = %281
  %288 = tail call fast float @llvm.sqrt.f32(float %273)
  %289 = fmul fast float %282, %288
  store float %289, ptr %13, align 8, !tbaa !44
  %290 = fmul fast float %283, %288
  store float %290, ptr %265, align 4, !tbaa !44
  %291 = fmul fast float %284, %288
  store float %291, ptr %268, align 8, !tbaa !44
  br label %292

292:                                              ; preds = %287, %281
  %293 = phi float [ %289, %287 ], [ %282, %281 ]
  %294 = getelementptr inbounds %struct.ParticleDrawData, ptr %7, i64 0, i32 1
  %295 = load ptr, ptr %294, align 8, !tbaa !169
  %296 = load float, ptr %86, align 4, !tbaa !44
  %297 = load float, ptr %3, align 4, !tbaa !44
  %298 = fmul fast float %296, %293
  %299 = fsub fast float %297, %298
  store float %299, ptr %295, align 4, !tbaa !44
  %300 = getelementptr inbounds float, ptr %3, i64 1
  %301 = load float, ptr %300, align 4, !tbaa !44
  %302 = load float, ptr %265, align 4, !tbaa !44
  %303 = fmul fast float %302, %296
  %304 = fsub fast float %301, %303
  %305 = getelementptr inbounds float, ptr %295, i64 1
  store float %304, ptr %305, align 4, !tbaa !44
  %306 = getelementptr inbounds float, ptr %3, i64 2
  %307 = load float, ptr %306, align 4, !tbaa !44
  %308 = load float, ptr %268, align 8, !tbaa !44
  %309 = fmul fast float %308, %296
  %310 = fsub fast float %307, %309
  %311 = getelementptr inbounds float, ptr %295, i64 2
  store float %310, ptr %311, align 4, !tbaa !44
  %312 = getelementptr inbounds float, ptr %295, i64 3
  %313 = getelementptr inbounds %struct.ParticleSettings, ptr %0, i64 0, i32 116, i64 1
  %314 = load float, ptr %313, align 4, !tbaa !44
  %315 = load float, ptr %3, align 4, !tbaa !44
  %316 = load float, ptr %13, align 8, !tbaa !44
  %317 = fmul fast float %316, %314
  %318 = fadd fast float %317, %315
  store float %318, ptr %312, align 4, !tbaa !44
  %319 = load float, ptr %300, align 4, !tbaa !44
  %320 = load float, ptr %265, align 4, !tbaa !44
  %321 = fmul fast float %320, %314
  %322 = fadd fast float %321, %319
  %323 = getelementptr inbounds float, ptr %295, i64 4
  store float %322, ptr %323, align 4, !tbaa !44
  %324 = load float, ptr %306, align 4, !tbaa !44
  %325 = load float, ptr %268, align 8, !tbaa !44
  %326 = fmul fast float %325, %314
  %327 = fadd fast float %326, %324
  %328 = getelementptr inbounds float, ptr %295, i64 5
  store float %327, ptr %328, align 4, !tbaa !44
  %329 = getelementptr inbounds float, ptr %295, i64 6
  store ptr %329, ptr %294, align 8, !tbaa !169
  %330 = icmp eq ptr %103, null
  br i1 %330, label %449, label %331

331:                                              ; preds = %292
  %332 = getelementptr inbounds float, ptr %103, i64 3
  store <2 x float> %104, ptr %332, align 4, !tbaa !44
  store <2 x float> %104, ptr %103, align 4, !tbaa !44
  %333 = getelementptr inbounds float, ptr %103, i64 5
  store float %101, ptr %333, align 4, !tbaa !44
  %334 = getelementptr inbounds float, ptr %103, i64 2
  store float %101, ptr %334, align 4, !tbaa !44
  %335 = getelementptr inbounds %struct.ParticleDrawData, ptr %7, i64 0, i32 5
  %336 = load ptr, ptr %335, align 8, !tbaa !171
  %337 = getelementptr inbounds float, ptr %336, i64 6
  store ptr %337, ptr %335, align 8, !tbaa !171
  br label %449

338:                                              ; preds = %100
  tail call void @drawcircball(i32 noundef 2, ptr noundef %3, float noundef nofpclass(nan inf) %83, ptr noundef %5)
  br label %449

339:                                              ; preds = %100
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %14) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %15) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %16) #13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %17) #13
  %340 = icmp eq ptr %103, null
  br i1 %340, label %352, label %341

341:                                              ; preds = %339
  %342 = getelementptr inbounds float, ptr %103, i64 9
  %343 = getelementptr inbounds float, ptr %103, i64 6
  %344 = getelementptr inbounds float, ptr %103, i64 3
  store <2 x float> %104, ptr %342, align 4, !tbaa !44
  store <2 x float> %104, ptr %343, align 4, !tbaa !44
  store <2 x float> %104, ptr %344, align 4, !tbaa !44
  store <2 x float> %104, ptr %103, align 4, !tbaa !44
  %345 = getelementptr inbounds float, ptr %103, i64 11
  store float %101, ptr %345, align 4, !tbaa !44
  %346 = getelementptr inbounds float, ptr %103, i64 8
  store float %101, ptr %346, align 4, !tbaa !44
  %347 = getelementptr inbounds float, ptr %103, i64 5
  store float %101, ptr %347, align 4, !tbaa !44
  %348 = getelementptr inbounds float, ptr %103, i64 2
  store float %101, ptr %348, align 4, !tbaa !44
  %349 = getelementptr inbounds %struct.ParticleDrawData, ptr %7, i64 0, i32 5
  %350 = load ptr, ptr %349, align 8, !tbaa !171
  %351 = getelementptr inbounds float, ptr %350, i64 12
  store ptr %351, ptr %349, align 8, !tbaa !171
  br label %352

352:                                              ; preds = %341, %339
  %353 = getelementptr inbounds %struct.ParticleBillboardData, ptr %6, i64 0, i32 1
  %354 = load float, ptr %3, align 4, !tbaa !44
  store float %354, ptr %353, align 4, !tbaa !44
  %355 = getelementptr inbounds float, ptr %3, i64 1
  %356 = load float, ptr %355, align 4, !tbaa !44
  %357 = getelementptr inbounds %struct.ParticleBillboardData, ptr %6, i64 0, i32 1, i64 1
  store float %356, ptr %357, align 4, !tbaa !44
  %358 = getelementptr inbounds float, ptr %3, i64 2
  %359 = load float, ptr %358, align 4, !tbaa !44
  %360 = getelementptr inbounds %struct.ParticleBillboardData, ptr %6, i64 0, i32 1, i64 2
  store float %359, ptr %360, align 4, !tbaa !44
  %361 = getelementptr inbounds %struct.ParticleBillboardData, ptr %6, i64 0, i32 2
  %362 = getelementptr inbounds %struct.ParticleKey, ptr %3, i64 0, i32 1
  %363 = load float, ptr %362, align 4, !tbaa !44
  store float %363, ptr %361, align 4, !tbaa !44
  %364 = getelementptr inbounds %struct.ParticleKey, ptr %3, i64 0, i32 1, i64 1
  %365 = load float, ptr %364, align 4, !tbaa !44
  %366 = getelementptr inbounds %struct.ParticleBillboardData, ptr %6, i64 0, i32 2, i64 1
  store float %365, ptr %366, align 4, !tbaa !44
  %367 = getelementptr inbounds %struct.ParticleKey, ptr %3, i64 0, i32 1, i64 2
  %368 = load float, ptr %367, align 4, !tbaa !44
  %369 = getelementptr inbounds %struct.ParticleBillboardData, ptr %6, i64 0, i32 2, i64 2
  store float %368, ptr %369, align 4, !tbaa !44
  call void @psys_make_billboard(ptr noundef %6, ptr noundef nonnull %14, ptr noundef nonnull %15, ptr noundef nonnull %16, ptr noundef nonnull %17) #13
  %370 = getelementptr inbounds %struct.ParticleDrawData, ptr %7, i64 0, i32 1
  %371 = load ptr, ptr %370, align 8, !tbaa !169
  %372 = load float, ptr %17, align 8, !tbaa !44
  %373 = load float, ptr %14, align 8, !tbaa !44
  %374 = fadd fast float %373, %372
  store float %374, ptr %371, align 4, !tbaa !44
  %375 = getelementptr inbounds float, ptr %17, i64 1
  %376 = load float, ptr %375, align 4, !tbaa !44
  %377 = getelementptr inbounds float, ptr %14, i64 1
  %378 = load float, ptr %377, align 4, !tbaa !44
  %379 = fadd fast float %378, %376
  %380 = getelementptr inbounds float, ptr %371, i64 1
  store float %379, ptr %380, align 4, !tbaa !44
  %381 = getelementptr inbounds float, ptr %17, i64 2
  %382 = load float, ptr %381, align 8, !tbaa !44
  %383 = getelementptr inbounds float, ptr %14, i64 2
  %384 = load float, ptr %383, align 8, !tbaa !44
  %385 = fadd fast float %384, %382
  %386 = getelementptr inbounds float, ptr %371, i64 2
  store float %385, ptr %386, align 4, !tbaa !44
  %387 = load float, ptr %15, align 8, !tbaa !44
  %388 = fadd fast float %387, %374
  store float %388, ptr %371, align 4, !tbaa !44
  %389 = getelementptr inbounds float, ptr %15, i64 1
  %390 = load float, ptr %389, align 4, !tbaa !44
  %391 = fadd fast float %390, %379
  store float %391, ptr %380, align 4, !tbaa !44
  %392 = getelementptr inbounds float, ptr %15, i64 2
  %393 = load float, ptr %392, align 8, !tbaa !44
  %394 = fadd fast float %393, %385
  store float %394, ptr %386, align 4, !tbaa !44
  %395 = getelementptr inbounds float, ptr %371, i64 3
  %396 = load float, ptr %381, align 8, !tbaa !44
  %397 = load float, ptr %383, align 8, !tbaa !44
  %398 = getelementptr inbounds float, ptr %371, i64 5
  %399 = load <2 x float>, ptr %17, align 8, !tbaa !44
  %400 = load <2 x float>, ptr %14, align 8, !tbaa !44
  %401 = fsub fast <2 x float> %399, %400
  %402 = load <2 x float>, ptr %15, align 8, !tbaa !44
  %403 = fadd fast <2 x float> %402, %401
  store <2 x float> %403, ptr %395, align 4, !tbaa !44
  %404 = load float, ptr %392, align 8, !tbaa !44
  %405 = getelementptr inbounds float, ptr %371, i64 6
  %406 = getelementptr inbounds float, ptr %371, i64 8
  %407 = fsub fast <2 x float> %401, %402
  store <2 x float> %407, ptr %405, align 4, !tbaa !44
  %408 = insertelement <4 x float> poison, float %396, i64 0
  %409 = shufflevector <2 x float> %399, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %410 = shufflevector <4 x float> %408, <4 x float> %409, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>
  %411 = shufflevector <4 x float> %410, <4 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 0>
  %412 = insertelement <4 x float> poison, float %397, i64 0
  %413 = shufflevector <2 x float> %400, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %414 = shufflevector <4 x float> %412, <4 x float> %413, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>
  %415 = shufflevector <4 x float> %414, <4 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 0>
  %416 = fsub fast <4 x float> %411, %415
  %417 = fadd fast <4 x float> %411, %415
  %418 = shufflevector <4 x float> %416, <4 x float> %417, <4 x i32> <i32 0, i32 5, i32 6, i32 7>
  %419 = extractelement <4 x float> %416, i64 0
  %420 = fadd fast float %404, %419
  store float %420, ptr %398, align 4, !tbaa !44
  %421 = insertelement <4 x float> poison, float %404, i64 0
  %422 = shufflevector <2 x float> %402, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %423 = shufflevector <4 x float> %421, <4 x float> %422, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>
  %424 = shufflevector <4 x float> %423, <4 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 0>
  %425 = fsub fast <4 x float> %418, %424
  store <4 x float> %425, ptr %406, align 4, !tbaa !44
  %426 = getelementptr inbounds float, ptr %371, i64 12
  store ptr %426, ptr %370, align 8, !tbaa !169
  %427 = getelementptr inbounds %struct.ParticleDrawData, ptr %7, i64 0, i32 3
  %428 = load ptr, ptr %427, align 8, !tbaa !172
  %429 = load float, ptr %16, align 4, !tbaa !44
  store float %429, ptr %428, align 4, !tbaa !44
  %430 = getelementptr inbounds float, ptr %16, i64 1
  %431 = load float, ptr %430, align 4, !tbaa !44
  %432 = getelementptr inbounds float, ptr %428, i64 1
  store float %431, ptr %432, align 4, !tbaa !44
  %433 = getelementptr inbounds float, ptr %16, i64 2
  %434 = load float, ptr %433, align 4, !tbaa !44
  %435 = getelementptr inbounds float, ptr %428, i64 2
  store float %434, ptr %435, align 4, !tbaa !44
  %436 = getelementptr inbounds float, ptr %428, i64 3
  %437 = load float, ptr %16, align 4, !tbaa !44
  %438 = load <2 x float>, ptr %430, align 4, !tbaa !44
  %439 = insertelement <4 x float> poison, float %437, i64 0
  %440 = shufflevector <2 x float> %438, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %441 = shufflevector <4 x float> %439, <4 x float> %440, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>
  %442 = shufflevector <4 x float> %441, <4 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 0>
  store <4 x float> %442, ptr %436, align 4, !tbaa !44
  %443 = getelementptr inbounds float, ptr %428, i64 7
  %444 = insertelement <4 x float> %440, float %437, i64 2
  %445 = shufflevector <4 x float> %444, <4 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 0>
  store <4 x float> %445, ptr %443, align 4, !tbaa !44
  %446 = getelementptr inbounds float, ptr %428, i64 11
  %447 = extractelement <2 x float> %438, i64 1
  store float %447, ptr %446, align 4, !tbaa !44
  %448 = getelementptr inbounds float, ptr %428, i64 12
  store ptr %448, ptr %427, align 8, !tbaa !172
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %17) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %16) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %15) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %14) #13
  br label %449

449:                                              ; preds = %100, %118, %120, %242, %292, %331, %338, %352
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %13) #13
  ret void
}

declare i32 @psys_get_particle_state(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

declare void @glGetIntegerv(i32 noundef, ptr noundef) local_unnamed_addr #1

declare void @glColorPointer(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @draw_particle_arrays(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #0 {
  switch i32 %0, label %15 [
    i32 4, label %5
    i32 3, label %5
    i32 5, label %7
    i32 9, label %9
  ]

5:                                                ; preds = %4, %4
  %6 = mul nsw i32 %1, 6
  tail call void @glDrawArrays(i32 noundef 1, i32 noundef 0, i32 noundef %6) #13
  br label %16

7:                                                ; preds = %4
  %8 = shl nsw i32 %1, 1
  tail call void @glDrawArrays(i32 noundef 1, i32 noundef 0, i32 noundef %8) #13
  br label %16

9:                                                ; preds = %4
  %10 = icmp slt i32 %2, 3
  %11 = icmp ne i32 %3, 0
  %12 = or i1 %10, %11
  %13 = select i1 %12, i32 6913, i32 6914
  tail call void @glPolygonMode(i32 noundef 1032, i32 noundef %13) #13
  %14 = shl nsw i32 %1, 2
  tail call void @glDrawArrays(i32 noundef 7, i32 noundef 0, i32 noundef %14) #13
  br label %16

15:                                               ; preds = %4
  tail call void @glDrawArrays(i32 noundef 0, i32 noundef 0, i32 noundef %1) #13
  br label %16

16:                                               ; preds = %15, %9, %7, %5
  ret void
}

declare void @end_latt_deform(ptr noundef) local_unnamed_addr #1

declare void @psys_make_billboard(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @PE_hide_keys_time(ptr noundef, ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #1

declare void @eul_to_mat4(ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @BKE_mesh_texspace_get(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @BKE_curve_texspace_get(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare void @UI_ThemeColorShadeAlpha(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @bbs_mesh_solid__setSolidDrawOptions(ptr noundef %0, i32 noundef %1) #0 {
  %3 = tail call ptr @BM_face_at_index(ptr noundef %0, i32 noundef %1) #13
  %4 = getelementptr i8, ptr %3, i64 13
  %5 = load i8, ptr %4, align 1, !tbaa !522
  %6 = and i8 %5, 2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = add nsw i32 %1, 1
  tail call void @WM_framebuffer_index_set(i32 noundef %9) #13
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i32 [ 1, %8 ], [ 0, %2 ]
  ret i32 %11
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @bbs_mesh_solid__drawCenter(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr nocapture readnone %3) #0 {
  %5 = tail call ptr @BM_face_at_index(ptr noundef %0, i32 noundef %1) #13
  %6 = getelementptr i8, ptr %5, i64 13
  %7 = load i8, ptr %6, align 1, !tbaa !522
  %8 = and i8 %7, 2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %4
  %11 = add nsw i32 %1, 1
  tail call void @WM_framebuffer_index_set(i32 noundef %11) #13
  tail call void @bglVertex3fv(ptr noundef %2) #13
  br label %12

12:                                               ; preds = %10, %4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @bbs_mesh_mask__setSolidDrawOptions(ptr noundef %0, i32 noundef %1) #0 {
  %3 = tail call ptr @BM_face_at_index(ptr noundef %0, i32 noundef %1) #13
  %4 = getelementptr i8, ptr %3, i64 13
  %5 = load i8, ptr %4, align 1, !tbaa !522
  %6 = and i8 %5, 2
  %7 = icmp eq i8 %6, 0
  %8 = zext i1 %7 to i32
  ret i32 %8
}

declare void @WM_framebuffer_index_set(i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @bbs_mesh_wire__setDrawOptions(ptr nocapture noundef readonly %0, i32 noundef %1) #0 {
  %3 = load ptr, ptr %0, align 8, !tbaa !456
  %4 = tail call ptr @BM_edge_at_index(ptr noundef %3, i32 noundef %1) #13
  %5 = getelementptr i8, ptr %4, i64 13
  %6 = load i8, ptr %5, align 1, !tbaa !522
  %7 = and i8 %6, 2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.drawBMOffset_userData, ptr %0, i64 0, i32 1
  %11 = load i32, ptr %10, align 8, !tbaa !458
  %12 = add nsw i32 %11, %1
  tail call void @WM_framebuffer_index_set(i32 noundef %12) #13
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i32 [ 1, %9 ], [ 0, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @bbs_mesh_verts__mapFunc(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef %2, ptr nocapture readnone %3, ptr nocapture readnone %4) #0 {
  %6 = load ptr, ptr %0, align 8, !tbaa !456
  %7 = tail call ptr @BM_vert_at_index(ptr noundef %6, i32 noundef %1) #13
  %8 = getelementptr i8, ptr %7, i64 13
  %9 = load i8, ptr %8, align 1, !tbaa !522
  %10 = and i8 %9, 2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.drawBMOffset_userData, ptr %0, i64 0, i32 1
  %14 = load i32, ptr %13, align 8, !tbaa !458
  %15 = add nsw i32 %14, %1
  tail call void @WM_framebuffer_index_set(i32 noundef %15) #13
  tail call void @bglVertex3fv(ptr noundef %2) #13
  br label %16

16:                                               ; preds = %12, %5
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @bbs_mesh_solid_hide2__setDrawOpts(ptr nocapture noundef readonly %0, i32 noundef %1) #10 {
  %3 = getelementptr inbounds %struct.Mesh, ptr %0, i64 0, i32 7
  %4 = load ptr, ptr %3, align 8, !tbaa !646
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %struct.MPoly, ptr %4, i64 %5, i32 3
  %7 = load i8, ptr %6, align 2, !tbaa !647
  %8 = and i8 %7, 16
  %9 = icmp eq i8 %8, 0
  %10 = zext i1 %9 to i32
  ret i32 %10
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @bbs_obmode_mesh_verts__mapFunc(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef %2, ptr nocapture readnone %3, ptr nocapture readnone %4) #0 {
  %6 = load ptr, ptr %0, align 8, !tbaa !463
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %struct.MVert, ptr %6, i64 %7, i32 2
  %9 = load i8, ptr %8, align 2, !tbaa !582
  %10 = and i8 %9, 16
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.drawMVertOffset_userData, ptr %0, i64 0, i32 1
  %14 = load i32, ptr %13, align 8, !tbaa !465
  %15 = add nsw i32 %14, %1
  tail call void @WM_framebuffer_index_set(i32 noundef %15) #13
  tail call void @bglVertex3fv(ptr noundef %2) #13
  br label %16

16:                                               ; preds = %12, %5
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @bbs_mesh_solid_hide__setDrawOpts(ptr nocapture noundef readonly %0, i32 noundef %1) #0 {
  %3 = getelementptr inbounds %struct.Mesh, ptr %0, i64 0, i32 7
  %4 = load ptr, ptr %3, align 8, !tbaa !646
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %struct.MPoly, ptr %4, i64 %5, i32 3
  %7 = load i8, ptr %6, align 2, !tbaa !647
  %8 = and i8 %7, 16
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = add nsw i32 %1, 1
  tail call void @WM_framebuffer_index_set(i32 noundef %11) #13
  br label %12

12:                                               ; preds = %2, %10
  %13 = phi i32 [ 1, %10 ], [ 0, %2 ]
  ret i32 %13
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @bbs_mesh_solid__setDrawOpts(ptr nocapture readnone %0, i32 noundef %1) #0 {
  %3 = add nsw i32 %1, 1
  tail call void @WM_framebuffer_index_set(i32 noundef %3) #13
  ret i32 1
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.exp2.f32(float) #11

; Function Attrs: nofree nounwind
declare noundef i32 @puts(ptr nocapture noundef readonly) local_unnamed_addr #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.maxnum.f32(float, float) #11

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i8 @llvm.umin.i8(i8, i8) #11

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umin.i32(i32, i32) #11

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i8 @llvm.umax.i8(i8, i8) #11

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #11

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #11

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.sqrt.v2f32(<2 x float>) #11

attributes #0 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #4 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, argmem: none, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #5 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #6 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #7 = { mustprogress nofree nounwind willreturn memory(argmem: read) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #9 = { mustprogress nofree nosync nounwind willreturn memory(none) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #10 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #11 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #12 = { nofree nounwind }
attributes #13 = { nounwind }
attributes #14 = { nounwind willreturn memory(read) }
attributes #15 = { nounwind willreturn memory(none) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !13, i64 232}
!6 = !{!"View3D", !7, i64 0, !7, i64 8, !10, i64 16, !11, i64 32, !12, i64 36, !8, i64 40, !8, i64 56, !12, i64 72, !12, i64 76, !8, i64 80, !8, i64 81, !11, i64 84, !11, i64 88, !13, i64 92, !13, i64 94, !7, i64 96, !7, i64 104, !14, i64 112, !10, i64 128, !7, i64 144, !7, i64 152, !8, i64 160, !11, i64 224, !11, i64 228, !13, i64 232, !13, i64 234, !13, i64 236, !13, i64 238, !13, i64 240, !13, i64 242, !12, i64 244, !12, i64 248, !12, i64 252, !12, i64 256, !8, i64 260, !8, i64 272, !13, i64 284, !13, i64 286, !13, i64 288, !8, i64 290, !8, i64 291, !8, i64 292, !8, i64 293, !8, i64 294, !10, i64 296, !10, i64 312, !10, i64 328, !8, i64 344, !8, i64 345, !8, i64 346, !8, i64 347, !7, i64 352, !7, i64 360, !7, i64 368}
!7 = !{!"any pointer", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!"ListBase", !7, i64 0, !7, i64 8}
!11 = !{!"int", !8, i64 0}
!12 = !{!"float", !8, i64 0}
!13 = !{!"short", !8, i64 0}
!14 = !{!"rctf", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12}
!15 = !{!6, !13, i64 242}
!16 = !{!17, !11, i64 2096}
!17 = !{!"Global", !7, i64 0, !8, i64 8, !8, i64 1032, !8, i64 2056, !8, i64 2057, !8, i64 2058, !10, i64 2064, !8, i64 2080, !8, i64 2081, !8, i64 2082, !13, i64 2084, !13, i64 2086, !13, i64 2088, !8, i64 2090, !13, i64 2092, !11, i64 2096, !11, i64 2100, !8, i64 2104, !11, i64 2108, !11, i64 2112, !8, i64 2116}
!18 = !{!19, !7, i64 168}
!19 = !{!"Scene", !20, i64 0, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !10, i64 152, !7, i64 168, !7, i64 176, !8, i64 184, !8, i64 196, !8, i64 208, !8, i64 220, !11, i64 232, !11, i64 236, !11, i64 240, !13, i64 244, !8, i64 246, !8, i64 247, !7, i64 248, !7, i64 256, !7, i64 264, !7, i64 272, !21, i64 280, !29, i64 4264, !10, i64 4296, !10, i64 4312, !7, i64 4328, !7, i64 4336, !7, i64 4344, !7, i64 4352, !7, i64 4360, !7, i64 4368, !13, i64 4376, !13, i64 4378, !11, i64 4380, !10, i64 4384, !30, i64 4400, !31, i64 4416, !34, i64 4600, !7, i64 4608, !35, i64 4616, !7, i64 4640, !36, i64 4648, !36, i64 4656, !23, i64 4664, !24, i64 4824, !37, i64 4888, !7, i64 4952}
!20 = !{!"ID", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !8, i64 32, !13, i64 98, !11, i64 100, !11, i64 104, !11, i64 108, !7, i64 112}
!21 = !{!"RenderData", !22, i64 0, !7, i64 248, !7, i64 256, !25, i64 264, !26, i64 328, !11, i64 400, !11, i64 404, !11, i64 408, !12, i64 412, !11, i64 416, !11, i64 420, !11, i64 424, !11, i64 428, !13, i64 432, !13, i64 434, !12, i64 436, !12, i64 440, !12, i64 444, !12, i64 448, !12, i64 452, !13, i64 456, !13, i64 458, !13, i64 460, !13, i64 462, !13, i64 464, !13, i64 466, !11, i64 468, !13, i64 472, !13, i64 474, !13, i64 476, !13, i64 478, !13, i64 480, !13, i64 482, !11, i64 484, !11, i64 488, !13, i64 492, !13, i64 494, !11, i64 496, !11, i64 500, !13, i64 504, !13, i64 506, !13, i64 508, !13, i64 510, !13, i64 512, !8, i64 514, !8, i64 515, !11, i64 516, !11, i64 520, !11, i64 524, !13, i64 528, !13, i64 530, !13, i64 532, !13, i64 534, !13, i64 536, !13, i64 538, !13, i64 540, !13, i64 542, !14, i64 544, !14, i64 560, !27, i64 576, !10, i64 592, !13, i64 608, !13, i64 610, !12, i64 612, !12, i64 616, !12, i64 620, !12, i64 624, !11, i64 628, !12, i64 632, !12, i64 636, !12, i64 640, !12, i64 644, !13, i64 648, !13, i64 650, !13, i64 652, !13, i64 654, !13, i64 656, !13, i64 658, !12, i64 660, !12, i64 664, !13, i64 668, !13, i64 670, !12, i64 672, !12, i64 676, !8, i64 680, !11, i64 1704, !13, i64 1708, !13, i64 1710, !8, i64 1712, !8, i64 2480, !8, i64 2496, !8, i64 2512, !8, i64 2513, !8, i64 2514, !8, i64 2515, !11, i64 2520, !13, i64 2524, !13, i64 2526, !12, i64 2528, !12, i64 2532, !13, i64 2536, !13, i64 2538, !12, i64 2540, !13, i64 2544, !13, i64 2546, !11, i64 2548, !13, i64 2552, !13, i64 2554, !13, i64 2556, !13, i64 2558, !12, i64 2560, !12, i64 2564, !7, i64 2568, !11, i64 2576, !12, i64 2580, !8, i64 2584, !28, i64 2616, !11, i64 3976, !11, i64 3980}
!22 = !{!"ImageFormatData", !8, i64 0, !8, i64 1, !8, i64 2, !8, i64 3, !8, i64 4, !8, i64 5, !8, i64 6, !8, i64 7, !13, i64 8, !13, i64 10, !12, i64 12, !8, i64 16, !8, i64 17, !8, i64 18, !23, i64 24, !24, i64 184}
!23 = !{!"ColorManagedViewSettings", !11, i64 0, !11, i64 4, !8, i64 8, !8, i64 72, !12, i64 136, !12, i64 140, !7, i64 144, !7, i64 152}
!24 = !{!"ColorManagedDisplaySettings", !8, i64 0}
!25 = !{!"QuicktimeCodecSettings", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !13, i64 48, !13, i64 50, !11, i64 52, !11, i64 56, !11, i64 60}
!26 = !{!"FFMpegCodecData", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !12, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !11, i64 56, !11, i64 60, !7, i64 64}
!27 = !{!"rcti", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12}
!28 = !{!"BakeData", !22, i64 0, !8, i64 248, !13, i64 1272, !13, i64 1274, !13, i64 1276, !13, i64 1278, !12, i64 1280, !12, i64 1284, !8, i64 1288, !8, i64 1291, !8, i64 1292, !8, i64 1293, !8, i64 1296}
!29 = !{!"AudioData", !11, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !11, i64 16, !13, i64 20, !13, i64 22, !12, i64 24, !12, i64 28}
!30 = !{!"GameFraming", !8, i64 0, !8, i64 12, !8, i64 13, !8, i64 14, !8, i64 15}
!31 = !{!"GameData", !30, i64 0, !13, i64 16, !13, i64 18, !13, i64 20, !13, i64 22, !13, i64 24, !13, i64 26, !13, i64 28, !13, i64 30, !13, i64 32, !8, i64 34, !32, i64 40, !13, i64 64, !13, i64 66, !12, i64 68, !33, i64 72, !12, i64 128, !12, i64 132, !11, i64 136, !13, i64 140, !13, i64 142, !13, i64 144, !13, i64 146, !13, i64 148, !13, i64 150, !13, i64 152, !13, i64 154, !13, i64 156, !13, i64 158, !13, i64 160, !13, i64 162, !12, i64 164, !12, i64 168, !12, i64 172, !12, i64 176, !12, i64 180}
!32 = !{!"GameDome", !13, i64 0, !13, i64 2, !13, i64 4, !13, i64 6, !12, i64 8, !12, i64 12, !7, i64 16}
!33 = !{!"RecastData", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !12, i64 16, !12, i64 20, !12, i64 24, !12, i64 28, !12, i64 32, !12, i64 36, !11, i64 40, !12, i64 44, !12, i64 48, !13, i64 52, !13, i64 54}
!34 = !{!"UnitSettings", !12, i64 0, !8, i64 4, !8, i64 5, !13, i64 6}
!35 = !{!"PhysicsSettings", !8, i64 0, !11, i64 12, !11, i64 16, !11, i64 20}
!36 = !{!"long", !8, i64 0}
!37 = !{!"ColorManagedColorspaceSettings", !8, i64 0}
!38 = !{!39, !7, i64 32}
!39 = !{!"Base", !7, i64 0, !7, i64 8, !11, i64 16, !11, i64 20, !11, i64 24, !13, i64 28, !13, i64 30, !7, i64 32}
!40 = !{!41, !11, i64 432}
!41 = !{!"Object", !20, i64 0, !7, i64 120, !7, i64 128, !13, i64 136, !13, i64 138, !11, i64 140, !11, i64 144, !11, i64 148, !8, i64 152, !7, i64 216, !7, i64 224, !7, i64 232, !7, i64 240, !7, i64 248, !7, i64 256, !7, i64 264, !7, i64 272, !7, i64 280, !7, i64 288, !7, i64 296, !7, i64 304, !42, i64 312, !7, i64 360, !10, i64 368, !10, i64 384, !10, i64 400, !10, i64 416, !11, i64 432, !11, i64 436, !7, i64 440, !7, i64 448, !11, i64 456, !11, i64 460, !8, i64 464, !8, i64 476, !8, i64 488, !8, i64 500, !8, i64 512, !8, i64 524, !8, i64 536, !8, i64 548, !8, i64 560, !8, i64 576, !8, i64 592, !8, i64 604, !12, i64 616, !12, i64 620, !8, i64 624, !8, i64 688, !8, i64 752, !8, i64 816, !8, i64 880, !11, i64 944, !13, i64 948, !13, i64 950, !13, i64 952, !13, i64 954, !13, i64 956, !13, i64 958, !13, i64 960, !13, i64 962, !13, i64 964, !8, i64 966, !8, i64 967, !11, i64 968, !11, i64 972, !11, i64 976, !11, i64 980, !11, i64 984, !12, i64 988, !12, i64 992, !12, i64 996, !12, i64 1000, !12, i64 1004, !12, i64 1008, !12, i64 1012, !12, i64 1016, !12, i64 1020, !12, i64 1024, !12, i64 1028, !12, i64 1032, !13, i64 1036, !13, i64 1038, !13, i64 1040, !8, i64 1042, !8, i64 1043, !13, i64 1044, !8, i64 1046, !8, i64 1047, !12, i64 1048, !12, i64 1052, !10, i64 1056, !10, i64 1072, !10, i64 1088, !10, i64 1104, !12, i64 1120, !13, i64 1124, !13, i64 1126, !8, i64 1128, !11, i64 1144, !11, i64 1148, !7, i64 1152, !8, i64 1160, !8, i64 1161, !13, i64 1162, !8, i64 1164, !10, i64 1176, !10, i64 1192, !10, i64 1208, !10, i64 1224, !7, i64 1240, !7, i64 1248, !7, i64 1256, !8, i64 1264, !8, i64 1265, !13, i64 1266, !12, i64 1268, !7, i64 1272, !7, i64 1280, !7, i64 1288, !7, i64 1296, !36, i64 1304, !36, i64 1312, !11, i64 1320, !11, i64 1324, !10, i64 1328, !10, i64 1344, !7, i64 1360, !7, i64 1368, !7, i64 1376, !8, i64 1384, !7, i64 1392, !10, i64 1400, !7, i64 1416}
!42 = !{!"bAnimVizSettings", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !13, i64 16, !13, i64 18, !13, i64 20, !13, i64 22, !13, i64 24, !13, i64 26, !13, i64 28, !13, i64 30, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44}
!43 = !{!19, !13, i64 4558}
!44 = !{!12, !12, i64 0}
!45 = distinct !{!45, !46}
!46 = !{!"llvm.loop.mustprogress"}
!47 = !{!11, !11, i64 0}
!48 = distinct !{!48, !46}
!49 = !{!7, !7, i64 0}
!50 = !{!8, !8, i64 0}
!51 = !{!13, !13, i64 0}
!52 = !{!53, !7, i64 376}
!53 = !{!"ARegion", !7, i64 0, !7, i64 8, !54, i64 16, !27, i64 176, !27, i64 192, !13, i64 208, !13, i64 210, !13, i64 212, !13, i64 214, !13, i64 216, !13, i64 218, !12, i64 220, !13, i64 224, !13, i64 226, !13, i64 228, !13, i64 230, !13, i64 232, !13, i64 234, !13, i64 236, !13, i64 238, !7, i64 240, !10, i64 248, !10, i64 264, !10, i64 280, !10, i64 296, !10, i64 312, !10, i64 328, !10, i64 344, !7, i64 360, !7, i64 368, !7, i64 376}
!54 = !{!"View2D", !14, i64 0, !14, i64 16, !27, i64 32, !27, i64 48, !27, i64 64, !8, i64 80, !8, i64 88, !12, i64 96, !12, i64 100, !13, i64 104, !13, i64 106, !13, i64 108, !13, i64 110, !13, i64 112, !13, i64 114, !13, i64 116, !13, i64 118, !13, i64 120, !13, i64 122, !13, i64 124, !13, i64 126, !7, i64 128, !11, i64 136, !11, i64 140, !7, i64 144, !7, i64 152}
!55 = distinct !{!55, !46}
!56 = !{!57, !13, i64 826}
!57 = !{!"RegionView3D", !8, i64 0, !8, i64 64, !8, i64 128, !8, i64 192, !8, i64 256, !8, i64 320, !8, i64 384, !8, i64 448, !8, i64 544, !7, i64 640, !7, i64 648, !7, i64 656, !7, i64 664, !7, i64 672, !7, i64 680, !7, i64 688, !8, i64 696, !8, i64 760, !12, i64 776, !12, i64 780, !12, i64 784, !12, i64 788, !8, i64 792, !12, i64 804, !8, i64 808, !8, i64 809, !8, i64 810, !8, i64 811, !8, i64 812, !8, i64 813, !8, i64 816, !13, i64 824, !13, i64 826, !8, i64 828, !13, i64 844, !13, i64 846, !12, i64 848, !8, i64 852, !12, i64 864, !8, i64 868}
!58 = !{!6, !8, i64 344}
!59 = !{ptr @BLF_draw_default, ptr @BLF_draw_default_ascii}
!60 = distinct !{!60, !46}
!61 = !{!41, !7, i64 1224}
!62 = !{!19, !7, i64 176}
!63 = !{!41, !8, i64 1160}
!64 = !{!41, !13, i64 952}
!65 = !{!17, !8, i64 2090}
!66 = !{!67, !7, i64 16}
!67 = !{!"ParticleSystem", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !10, i64 72, !10, i64 88, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !10, i64 152, !8, i64 168, !8, i64 232, !12, i64 296, !12, i64 300, !12, i64 304, !11, i64 308, !11, i64 312, !11, i64 316, !11, i64 320, !11, i64 324, !11, i64 328, !11, i64 332, !11, i64 336, !13, i64 340, !13, i64 342, !13, i64 344, !13, i64 346, !8, i64 348, !8, i64 540, !13, i64 564, !13, i64 566, !7, i64 568, !7, i64 576, !10, i64 584, !7, i64 600, !7, i64 608, !11, i64 616, !11, i64 620, !7, i64 624, !7, i64 632, !7, i64 640, !12, i64 648, !12, i64 652}
!68 = !{!69, !11, i64 176}
!69 = !{!"ParticleSettings", !20, i64 0, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !11, i64 152, !11, i64 156, !13, i64 160, !13, i64 162, !13, i64 164, !13, i64 166, !13, i64 168, !13, i64 170, !13, i64 172, !13, i64 174, !11, i64 176, !11, i64 180, !13, i64 184, !13, i64 186, !13, i64 188, !13, i64 190, !13, i64 192, !13, i64 194, !13, i64 196, !13, i64 198, !13, i64 200, !13, i64 202, !13, i64 204, !13, i64 206, !13, i64 208, !13, i64 210, !13, i64 212, !13, i64 214, !13, i64 216, !13, i64 218, !13, i64 220, !13, i64 222, !13, i64 224, !13, i64 226, !13, i64 228, !13, i64 230, !12, i64 232, !12, i64 236, !8, i64 240, !8, i64 248, !12, i64 256, !12, i64 260, !12, i64 264, !13, i64 268, !13, i64 270, !12, i64 272, !12, i64 276, !12, i64 280, !12, i64 284, !12, i64 288, !12, i64 292, !12, i64 296, !12, i64 300, !12, i64 304, !12, i64 308, !12, i64 312, !12, i64 316, !8, i64 320, !11, i64 324, !11, i64 328, !11, i64 332, !11, i64 336, !13, i64 340, !8, i64 342, !12, i64 348, !12, i64 352, !12, i64 356, !12, i64 360, !12, i64 364, !12, i64 368, !12, i64 372, !8, i64 376, !12, i64 388, !12, i64 392, !12, i64 396, !12, i64 400, !12, i64 404, !12, i64 408, !12, i64 412, !8, i64 416, !12, i64 428, !12, i64 432, !12, i64 436, !12, i64 440, !11, i64 444, !11, i64 448, !12, i64 452, !12, i64 456, !12, i64 460, !12, i64 464, !12, i64 468, !12, i64 472, !12, i64 476, !12, i64 480, !12, i64 484, !12, i64 488, !12, i64 492, !12, i64 496, !12, i64 500, !12, i64 504, !12, i64 508, !12, i64 512, !12, i64 516, !12, i64 520, !12, i64 524, !12, i64 528, !12, i64 532, !12, i64 536, !12, i64 540, !12, i64 544, !12, i64 548, !8, i64 552, !12, i64 560, !12, i64 564, !11, i64 568, !11, i64 572, !8, i64 576, !7, i64 720, !10, i64 728, !7, i64 744, !7, i64 752, !7, i64 760, !7, i64 768, !7, i64 776, !7, i64 784, !13, i64 792, !8, i64 794}
!70 = distinct !{!70, !46}
!71 = !{!39, !11, i64 24}
!72 = !{!6, !8, i64 346}
!73 = !{!6, !8, i64 345}
!74 = !{!41, !13, i64 1044}
!75 = !{!41, !13, i64 136}
!76 = !{!41, !8, i64 1047}
!77 = !{!41, !7, i64 360}
!78 = !{!17, !13, i64 2084}
!79 = !{!41, !7, i64 24}
!80 = !{!41, !13, i64 948}
!81 = !{!41, !8, i64 1046}
!82 = !{!6, !7, i64 360}
!83 = !{i64 0, i64 8, !49, i64 8, i64 8, !49, i64 16, i64 8, !49, i64 24, i64 8, !49, i64 32, i64 66, !50, i64 98, i64 2, !51, i64 100, i64 4, !47, i64 104, i64 4, !47, i64 108, i64 4, !47, i64 112, i64 8, !49, i64 120, i64 8, !49, i64 128, i64 2, !51, i64 130, i64 2, !51, i64 132, i64 4, !44, i64 136, i64 4, !44, i64 140, i64 4, !44, i64 144, i64 4, !44, i64 148, i64 4, !44, i64 152, i64 4, !44, i64 156, i64 4, !44, i64 160, i64 4, !44, i64 164, i64 4, !44, i64 168, i64 4, !44, i64 172, i64 4, !44, i64 176, i64 4, !44, i64 180, i64 4, !44, i64 184, i64 4, !44, i64 188, i64 4, !44, i64 192, i64 4, !44, i64 196, i64 4, !44, i64 200, i64 4, !44, i64 204, i64 4, !44, i64 208, i64 4, !44, i64 212, i64 4, !44, i64 216, i64 4, !44, i64 220, i64 4, !44, i64 224, i64 4, !44, i64 228, i64 4, !44, i64 232, i64 4, !44, i64 236, i64 4, !44, i64 240, i64 12, !50, i64 252, i64 12, !50, i64 264, i64 12, !50, i64 276, i64 4, !44, i64 280, i64 4, !44, i64 284, i64 4, !44, i64 288, i64 2, !51, i64 290, i64 2, !51, i64 292, i64 2, !51, i64 294, i64 2, !51, i64 296, i64 4, !44, i64 300, i64 4, !44, i64 304, i64 4, !44, i64 308, i64 4, !44, i64 312, i64 4, !47, i64 316, i64 4, !47, i64 320, i64 4, !47, i64 324, i64 4, !47, i64 328, i64 4, !44, i64 332, i64 4, !44, i64 336, i64 4, !44, i64 340, i64 4, !44, i64 344, i64 4, !44, i64 348, i64 4, !44, i64 352, i64 4, !44, i64 356, i64 2, !51, i64 358, i64 2, !51, i64 360, i64 2, !51, i64 362, i64 1, !50, i64 363, i64 1, !50, i64 364, i64 4, !44, i64 368, i64 4, !44, i64 372, i64 2, !51, i64 374, i64 2, !51, i64 376, i64 4, !44, i64 380, i64 4, !44, i64 384, i64 4, !44, i64 388, i64 4, !44, i64 392, i64 2, !51, i64 394, i64 2, !51, i64 396, i64 4, !47, i64 400, i64 4, !47, i64 404, i64 4, !47, i64 408, i64 4, !47, i64 412, i64 2, !51, i64 414, i64 2, !51, i64 416, i64 2, !51, i64 418, i64 2, !51, i64 420, i64 4, !44, i64 424, i64 4, !44, i64 428, i64 4, !44, i64 432, i64 4, !44, i64 436, i64 4, !44, i64 440, i64 4, !44, i64 444, i64 4, !44, i64 448, i64 4, !44, i64 452, i64 4, !44, i64 456, i64 4, !44, i64 460, i64 64, !50, i64 524, i64 4, !44, i64 528, i64 4, !44, i64 532, i64 4, !44, i64 536, i64 4, !47, i64 540, i64 1, !50, i64 541, i64 1, !50, i64 542, i64 1, !50, i64 543, i64 1, !50, i64 544, i64 2, !51, i64 546, i64 2, !51, i64 548, i64 2, !51, i64 550, i64 1, !50, i64 551, i64 1, !50, i64 552, i64 2, !51, i64 554, i64 2, !51, i64 556, i64 4, !44, i64 560, i64 4, !44, i64 564, i64 16, !50, i64 580, i64 4, !44, i64 584, i64 4, !44, i64 588, i64 2, !51, i64 590, i64 2, !51, i64 592, i64 8, !49, i64 600, i64 8, !49, i64 608, i64 1, !50, i64 609, i64 1, !50, i64 610, i64 1, !50, i64 611, i64 1, !50, i64 612, i64 2, !51, i64 614, i64 2, !51, i64 616, i64 4, !44, i64 620, i64 4, !44, i64 624, i64 144, !50, i64 768, i64 8, !49, i64 776, i64 8, !49, i64 784, i64 8, !49, i64 792, i64 8, !49, i64 800, i64 4, !44, i64 804, i64 4, !44, i64 808, i64 4, !44, i64 812, i64 4, !44, i64 816, i64 4, !44, i64 820, i64 2, !51, i64 822, i64 2, !51, i64 824, i64 12, !50, i64 836, i64 12, !50, i64 848, i64 4, !44, i64 852, i64 4, !44, i64 856, i64 4, !44, i64 860, i64 4, !44, i64 864, i64 4, !44, i64 868, i64 4, !44, i64 872, i64 4, !44, i64 876, i64 2, !51, i64 878, i64 2, !51, i64 880, i64 4, !47, i64 884, i64 2, !51, i64 886, i64 2, !51, i64 888, i64 16, !50, i64 904, i64 2, !51, i64 906, i64 2, !51, i64 908, i64 2, !51, i64 910, i64 2, !51, i64 912, i64 2, !51, i64 914, i64 6, !50, i64 920, i64 8, !49, i64 928, i64 8, !49, i64 936, i64 8, !49}
!84 = !{!85, !7, i64 792}
!85 = !{!"Material", !20, i64 0, !7, i64 120, !13, i64 128, !13, i64 130, !12, i64 132, !12, i64 136, !12, i64 140, !12, i64 144, !12, i64 148, !12, i64 152, !12, i64 156, !12, i64 160, !12, i64 164, !12, i64 168, !12, i64 172, !12, i64 176, !12, i64 180, !12, i64 184, !12, i64 188, !12, i64 192, !12, i64 196, !12, i64 200, !12, i64 204, !12, i64 208, !12, i64 212, !12, i64 216, !12, i64 220, !86, i64 224, !87, i64 312, !12, i64 328, !12, i64 332, !12, i64 336, !12, i64 340, !12, i64 344, !12, i64 348, !12, i64 352, !13, i64 356, !13, i64 358, !13, i64 360, !8, i64 362, !8, i64 363, !12, i64 364, !12, i64 368, !13, i64 372, !13, i64 374, !12, i64 376, !12, i64 380, !12, i64 384, !12, i64 388, !13, i64 392, !13, i64 394, !11, i64 396, !11, i64 400, !11, i64 404, !11, i64 408, !13, i64 412, !13, i64 414, !13, i64 416, !13, i64 418, !12, i64 420, !12, i64 424, !12, i64 428, !12, i64 432, !12, i64 436, !12, i64 440, !12, i64 444, !12, i64 448, !12, i64 452, !12, i64 456, !8, i64 460, !12, i64 524, !12, i64 528, !12, i64 532, !11, i64 536, !8, i64 540, !8, i64 541, !8, i64 542, !8, i64 543, !13, i64 544, !13, i64 546, !13, i64 548, !8, i64 550, !8, i64 551, !13, i64 552, !13, i64 554, !12, i64 556, !12, i64 560, !8, i64 564, !12, i64 580, !12, i64 584, !13, i64 588, !13, i64 590, !7, i64 592, !7, i64 600, !8, i64 608, !8, i64 609, !8, i64 610, !8, i64 611, !13, i64 612, !13, i64 614, !12, i64 616, !12, i64 620, !8, i64 624, !7, i64 768, !7, i64 776, !7, i64 784, !7, i64 792, !12, i64 800, !12, i64 804, !12, i64 808, !12, i64 812, !12, i64 816, !13, i64 820, !13, i64 822, !8, i64 824, !8, i64 836, !12, i64 848, !12, i64 852, !12, i64 856, !12, i64 860, !12, i64 864, !12, i64 868, !12, i64 872, !13, i64 876, !13, i64 878, !11, i64 880, !13, i64 884, !13, i64 886, !8, i64 888, !13, i64 904, !13, i64 906, !13, i64 908, !13, i64 910, !13, i64 912, !8, i64 914, !7, i64 920, !10, i64 928}
!86 = !{!"VolumeSettings", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !8, i64 16, !8, i64 28, !8, i64 40, !12, i64 52, !12, i64 56, !12, i64 60, !13, i64 64, !13, i64 66, !13, i64 68, !13, i64 70, !12, i64 72, !12, i64 76, !12, i64 80, !12, i64 84}
!87 = !{!"GameSettings", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12}
!88 = !{!6, !13, i64 284}
!89 = !{!6, !13, i64 240}
!90 = !{!41, !7, i64 296}
!91 = !{!92, !7, i64 376}
!92 = !{!"Curve", !20, i64 0, !7, i64 120, !7, i64 128, !10, i64 136, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192, !7, i64 200, !8, i64 208, !8, i64 220, !8, i64 232, !13, i64 244, !13, i64 246, !13, i64 248, !13, i64 250, !12, i64 252, !12, i64 256, !11, i64 260, !13, i64 264, !13, i64 266, !11, i64 268, !12, i64 272, !12, i64 276, !12, i64 280, !13, i64 284, !13, i64 286, !13, i64 288, !13, i64 290, !11, i64 292, !11, i64 296, !8, i64 300, !13, i64 304, !8, i64 306, !8, i64 307, !12, i64 308, !12, i64 312, !12, i64 316, !12, i64 320, !12, i64 324, !12, i64 328, !12, i64 332, !12, i64 336, !12, i64 340, !12, i64 344, !11, i64 348, !11, i64 352, !11, i64 356, !11, i64 360, !11, i64 364, !7, i64 368, !7, i64 376, !8, i64 384, !7, i64 448, !7, i64 456, !7, i64 464, !7, i64 472, !7, i64 480, !11, i64 488, !11, i64 492, !7, i64 496, !93, i64 504, !12, i64 512, !12, i64 516, !12, i64 520, !8, i64 524, !8, i64 525, !8, i64 526}
!93 = !{!"CharInfo", !13, i64 0, !13, i64 2, !8, i64 4, !8, i64 5, !13, i64 6}
!94 = !{!41, !8, i64 1042}
!95 = !{!41, !7, i64 264}
!96 = !{i8 0, i8 2}
!97 = !{!92, !7, i64 152}
!98 = !{!10, !7, i64 0}
!99 = !{!100, !7, i64 160}
!100 = !{!"MetaBall", !20, i64 0, !7, i64 120, !10, i64 128, !10, i64 144, !7, i64 160, !7, i64 168, !7, i64 176, !8, i64 184, !8, i64 185, !13, i64 186, !13, i64 188, !13, i64 190, !8, i64 192, !8, i64 204, !8, i64 216, !12, i64 228, !12, i64 232, !12, i64 236, !7, i64 240}
!101 = !{!41, !12, i64 1048}
!102 = !{!57, !8, i64 809}
!103 = !{!6, !7, i64 96}
!104 = !{!41, !7, i64 1248}
!105 = !{!106, !13, i64 286}
!106 = !{!"SoftBody", !11, i64 0, !11, i64 4, !7, i64 8, !7, i64 16, !8, i64 24, !8, i64 25, !13, i64 26, !12, i64 28, !8, i64 32, !12, i64 96, !12, i64 100, !12, i64 104, !12, i64 108, !12, i64 112, !12, i64 116, !12, i64 120, !12, i64 124, !12, i64 128, !13, i64 132, !8, i64 134, !13, i64 198, !12, i64 200, !12, i64 204, !8, i64 208, !11, i64 272, !11, i64 276, !11, i64 280, !13, i64 284, !13, i64 286, !7, i64 288, !11, i64 296, !11, i64 300, !12, i64 304, !12, i64 308, !12, i64 312, !12, i64 316, !13, i64 320, !13, i64 322, !13, i64 324, !13, i64 326, !13, i64 328, !13, i64 330, !13, i64 332, !13, i64 334, !7, i64 336, !12, i64 344, !12, i64 348, !7, i64 352, !10, i64 360, !7, i64 376, !8, i64 384, !8, i64 396, !8, i64 432, !11, i64 468}
!107 = !{!41, !7, i64 1240}
!108 = !{!109, !13, i64 6}
!109 = !{!"PartDeflect", !11, i64 0, !13, i64 4, !13, i64 6, !13, i64 8, !13, i64 10, !13, i64 12, !13, i64 14, !13, i64 16, !13, i64 18, !12, i64 20, !12, i64 24, !12, i64 28, !12, i64 32, !12, i64 36, !12, i64 40, !12, i64 44, !12, i64 48, !12, i64 52, !12, i64 56, !12, i64 60, !12, i64 64, !12, i64 68, !12, i64 72, !12, i64 76, !12, i64 80, !12, i64 84, !12, i64 88, !12, i64 92, !12, i64 96, !12, i64 100, !12, i64 104, !12, i64 108, !12, i64 112, !12, i64 116, !12, i64 120, !12, i64 124, !7, i64 128, !7, i64 136, !12, i64 144, !11, i64 148, !7, i64 152}
!110 = !{!109, !12, i64 20}
!111 = !{!109, !12, i64 36}
!112 = !{!92, !11, i64 268}
!113 = !{!41, !7, i64 1280}
!114 = !{!115, !7, i64 48}
!115 = !{!"CurveCache", !10, i64 0, !10, i64 16, !10, i64 32, !7, i64 48}
!116 = !{!117, !7, i64 0}
!117 = !{!"Path", !7, i64 0, !11, i64 8, !12, i64 12}
!118 = !{!109, !13, i64 8}
!119 = !{!109, !11, i64 0}
!120 = !{!109, !12, i64 40}
!121 = !{!109, !12, i64 44}
!122 = !{!109, !12, i64 52}
!123 = !{!109, !12, i64 56}
!124 = !{!125, !7, i64 232}
!125 = !{!"PTCacheEdit", !10, i64 0, !7, i64 16, !7, i64 24, !126, i64 32, !7, i64 232, !7, i64 240, !7, i64 248, !7, i64 256, !7, i64 264, !7, i64 272, !10, i64 280, !11, i64 296, !11, i64 300, !11, i64 304, !11, i64 308, !8, i64 312, !8, i64 315}
!126 = !{!"PTCacheID", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !11, i64 56, !11, i64 60, !11, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192}
!127 = !{!67, !11, i64 316}
!128 = !{!125, !7, i64 272}
!129 = !{!19, !11, i64 680}
!130 = !{!67, !7, i64 24}
!131 = !{!67, !7, i64 640}
!132 = !{!133, !13, i64 0}
!133 = !{!"ParticleEditSettings", !13, i64 0, !13, i64 2, !13, i64 4, !13, i64 6, !8, i64 8, !7, i64 120, !12, i64 128, !12, i64 132, !11, i64 136, !11, i64 140, !11, i64 144, !11, i64 148, !7, i64 152, !7, i64 160}
!134 = !{!69, !13, i64 184}
!135 = !{!69, !13, i64 192}
!136 = !{!137, !7, i64 0}
!137 = !{!"ParticleSimulationData", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !12, i64 40}
!138 = !{!137, !7, i64 8}
!139 = !{!137, !7, i64 16}
!140 = !{!137, !7, i64 24}
!141 = !{!69, !13, i64 168}
!142 = !{!67, !13, i64 344}
!143 = !{!69, !13, i64 160}
!144 = !{!67, !7, i64 64}
!145 = !{!67, !11, i64 328}
!146 = !{!69, !13, i64 210}
!147 = !{!69, !13, i64 212}
!148 = !{!69, !13, i64 196}
!149 = !{!67, !11, i64 320}
!150 = !{!67, !7, i64 56}
!151 = !{!69, !13, i64 186}
!152 = !{!69, !7, i64 752}
!153 = !{!69, !7, i64 720}
!154 = !{!69, !7, i64 760}
!155 = !{!156, !7, i64 0}
!156 = !{!"ParticleBillboardData", !7, i64 0, !8, i64 8, !8, i64 20, !8, i64 32, !8, i64 40, !12, i64 48, !12, i64 52, !12, i64 56, !8, i64 60, !11, i64 72, !11, i64 76, !11, i64 80, !11, i64 84, !13, i64 88, !13, i64 90, !13, i64 92, !13, i64 94}
!157 = !{!69, !13, i64 224}
!158 = !{!156, !13, i64 88}
!159 = !{!69, !13, i64 228}
!160 = !{!156, !13, i64 92}
!161 = !{!156, !11, i64 72}
!162 = !{!163, !7, i64 32}
!163 = !{!"ParticleDrawData", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !11, i64 72, !11, i64 76, !11, i64 80, !11, i64 84}
!164 = !{!69, !11, i64 568}
!165 = !{!163, !11, i64 72}
!166 = !{!163, !7, i64 0}
!167 = !{!163, !7, i64 16}
!168 = !{!163, !7, i64 48}
!169 = !{!163, !7, i64 8}
!170 = !{!163, !7, i64 56}
!171 = !{!163, !7, i64 40}
!172 = !{!163, !7, i64 24}
!173 = !{!163, !7, i64 64}
!174 = !{!67, !7, i64 136}
!175 = !{!163, !11, i64 76}
!176 = !{!163, !11, i64 80}
!177 = !{!178, !13, i64 196}
!178 = !{!"ParticleData", !179, i64 0, !179, i64 56, !7, i64 112, !7, i64 120, !7, i64 128, !11, i64 136, !12, i64 140, !12, i64 144, !12, i64 148, !11, i64 152, !11, i64 156, !8, i64 160, !12, i64 176, !12, i64 180, !12, i64 184, !11, i64 188, !11, i64 192, !13, i64 196, !13, i64 198}
!179 = !{!"ParticleKey", !8, i64 0, !8, i64 12, !8, i64 24, !8, i64 40, !12, i64 52}
!180 = !{!178, !12, i64 140}
!181 = !{!178, !12, i64 144}
!182 = !{!178, !12, i64 148}
!183 = !{!178, !12, i64 180}
!184 = !{!178, !7, i64 128}
!185 = !{!186, !12, i64 8}
!186 = !{!"BoidParticle", !7, i64 0, !187, i64 8, !8, i64 28, !8, i64 40, !12, i64 52}
!187 = !{!"BoidData", !12, i64 0, !8, i64 4, !13, i64 16, !13, i64 18}
!188 = !{!67, !11, i64 308}
!189 = !{!69, !12, i64 264}
!190 = !{!178, !12, i64 52}
!191 = !{!178, !12, i64 108}
!192 = !{!67, !7, i64 32}
!193 = !{!69, !12, i64 564}
!194 = !{!69, !12, i64 440}
!195 = distinct !{!195, !46}
!196 = !{!179, !12, i64 52}
!197 = !{!67, !7, i64 144}
!198 = distinct !{!198, !46}
!199 = !{!200, !11, i64 56}
!200 = !{!"ParticleCacheKey", !8, i64 0, !8, i64 12, !8, i64 24, !8, i64 40, !12, i64 52, !11, i64 56}
!201 = distinct !{!201, !46}
!202 = distinct !{!202, !46}
!203 = distinct !{!203, !46}
!204 = distinct !{!204, !46}
!205 = !{!125, !11, i64 296}
!206 = !{!133, !11, i64 148}
!207 = !{!133, !13, i64 6}
!208 = !{!125, !7, i64 24}
!209 = !{!210, !13, i64 12}
!210 = !{!"PTCacheEditPoint", !7, i64 0, !11, i64 8, !13, i64 12}
!211 = !{!212}
!212 = distinct !{!212, !213}
!213 = distinct !{!213, !"LVerDomain"}
!214 = distinct !{!214, !46, !215, !216}
!215 = !{!"llvm.loop.isvectorized", i32 1}
!216 = !{!"llvm.loop.unroll.runtime.disable"}
!217 = distinct !{!217, !46, !215}
!218 = !{!219}
!219 = distinct !{!219, !220}
!220 = distinct !{!220, !"LVerDomain"}
!221 = !{!200, !12, i64 52}
!222 = distinct !{!222, !46, !215, !216}
!223 = distinct !{!223, !46, !215}
!224 = distinct !{!224, !46}
!225 = !{!133, !11, i64 136}
!226 = !{!210, !11, i64 8}
!227 = distinct !{!227, !46}
!228 = !{!210, !7, i64 0}
!229 = !{!230, !13, i64 52}
!230 = !{!"PTCacheEditKey", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !8, i64 32, !12, i64 44, !12, i64 48, !13, i64 52}
!231 = distinct !{!231, !46}
!232 = !{!230, !7, i64 0}
!233 = distinct !{!233, !46}
!234 = !{!230, !7, i64 24}
!235 = distinct !{!235, !46}
!236 = distinct !{!236, !46}
!237 = !{!238, !7, i64 112}
!238 = !{!"SmokeModifierData", !239, i64 0, !7, i64 112, !7, i64 120, !7, i64 128, !12, i64 136, !11, i64 140}
!239 = !{!"ModifierData", !7, i64 0, !7, i64 8, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !8, i64 32, !7, i64 96, !7, i64 104}
!240 = !{!241, !11, i64 420}
!241 = !{!"SmokeDomainSettings", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !8, i64 96, !8, i64 108, !8, i64 120, !8, i64 132, !8, i64 144, !8, i64 156, !8, i64 168, !8, i64 180, !8, i64 192, !8, i64 204, !8, i64 268, !8, i64 332, !8, i64 344, !8, i64 356, !8, i64 368, !11, i64 380, !12, i64 384, !12, i64 388, !11, i64 392, !11, i64 396, !12, i64 400, !12, i64 404, !12, i64 408, !11, i64 412, !11, i64 416, !11, i64 420, !11, i64 424, !13, i64 428, !13, i64 430, !11, i64 432, !12, i64 436, !8, i64 440, !12, i64 452, !11, i64 456, !11, i64 460, !8, i64 464, !8, i64 480, !7, i64 512, !11, i64 520, !12, i64 524, !12, i64 528, !11, i64 532, !8, i64 536, !11, i64 548, !12, i64 552, !12, i64 556, !12, i64 560, !12, i64 564, !12, i64 568, !8, i64 572}
!242 = !{!241, !11, i64 396}
!243 = !{!241, !7, i64 8}
!244 = !{!245, !11, i64 28}
!245 = !{!"PointCache", !7, i64 0, !7, i64 8, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !11, i64 56, !13, i64 60, !13, i64 62, !8, i64 64, !8, i64 128, !8, i64 192, !8, i64 256, !7, i64 1280, !10, i64 1288, !7, i64 1304, !7, i64 1312}
!246 = !{!241, !7, i64 48}
!247 = !{!241, !11, i64 424}
!248 = !{!241, !7, i64 56}
!249 = !{!241, !12, i64 384}
!250 = !{!241, !12, i64 388}
!251 = !{!241, !11, i64 416}
!252 = !{!241, !7, i64 72}
!253 = !{!241, !7, i64 80}
!254 = !{!255, !13, i64 24}
!255 = !{!"bConstraint", !7, i64 0, !7, i64 8, !7, i64 16, !13, i64 24, !13, i64 26, !8, i64 28, !8, i64 29, !8, i64 30, !13, i64 94, !12, i64 96, !12, i64 100, !7, i64 104, !12, i64 112, !12, i64 116}
!256 = !{!255, !7, i64 16}
!257 = !{!258, !13, i64 96}
!258 = !{!"bRigidBodyJointConstraint", !7, i64 0, !7, i64 8, !11, i64 16, !12, i64 20, !12, i64 24, !12, i64 28, !12, i64 32, !12, i64 36, !12, i64 40, !8, i64 44, !8, i64 68, !12, i64 92, !13, i64 96, !13, i64 98, !13, i64 100, !13, i64 102}
!259 = distinct !{!259, !46}
!260 = !{!41, !11, i64 1144}
!261 = !{!41, !8, i64 1043}
!262 = !{!41, !7, i64 1368}
!263 = !{!264, !13, i64 18}
!264 = !{!"RigidBodyOb", !7, i64 0, !7, i64 8, !13, i64 16, !13, i64 18, !11, i64 20, !11, i64 24, !13, i64 28, !13, i64 30, !12, i64 32, !12, i64 36, !12, i64 40, !12, i64 44, !12, i64 48, !12, i64 52, !12, i64 56, !12, i64 60, !8, i64 64, !8, i64 80, !12, i64 92}
!265 = !{!41, !7, i64 1296}
!266 = !{!267, !7, i64 1592}
!267 = !{!"DerivedMesh", !268, i64 0, !268, i64 200, !268, i64 400, !268, i64 600, !268, i64 800, !11, i64 1000, !11, i64 1004, !11, i64 1008, !11, i64 1012, !11, i64 1016, !11, i64 1020, !11, i64 1024, !7, i64 1032, !7, i64 1040, !8, i64 1048, !12, i64 1052, !8, i64 1056, !11, i64 1060, !7, i64 1064, !8, i64 1072, !7, i64 1080, !7, i64 1088, !7, i64 1096, !7, i64 1104, !7, i64 1112, !7, i64 1120, !7, i64 1128, !7, i64 1136, !7, i64 1144, !7, i64 1152, !7, i64 1160, !7, i64 1168, !7, i64 1176, !7, i64 1184, !7, i64 1192, !7, i64 1200, !7, i64 1208, !7, i64 1216, !7, i64 1224, !7, i64 1232, !7, i64 1240, !7, i64 1248, !7, i64 1256, !7, i64 1264, !7, i64 1272, !7, i64 1280, !7, i64 1288, !7, i64 1296, !7, i64 1304, !7, i64 1312, !7, i64 1320, !7, i64 1328, !7, i64 1336, !7, i64 1344, !7, i64 1352, !7, i64 1360, !7, i64 1368, !7, i64 1376, !7, i64 1384, !7, i64 1392, !7, i64 1400, !7, i64 1408, !7, i64 1416, !7, i64 1424, !7, i64 1432, !7, i64 1440, !7, i64 1448, !7, i64 1456, !7, i64 1464, !7, i64 1472, !7, i64 1480, !7, i64 1488, !7, i64 1496, !7, i64 1504, !7, i64 1512, !7, i64 1520, !7, i64 1528, !7, i64 1536, !7, i64 1544, !7, i64 1552, !7, i64 1560, !7, i64 1568, !7, i64 1576, !7, i64 1584, !7, i64 1592, !7, i64 1600, !7, i64 1608, !7, i64 1616, !7, i64 1624, !7, i64 1632, !7, i64 1640, !7, i64 1648, !7, i64 1656, !7, i64 1664, !7, i64 1672, !7, i64 1680}
!268 = !{!"CustomData", !7, i64 0, !8, i64 8, !11, i64 172, !11, i64 176, !11, i64 180, !7, i64 184, !7, i64 192}
!269 = !{!41, !12, i64 996}
!270 = !{!41, !11, i64 100}
!271 = !{!41, !7, i64 1376}
!272 = !{!239, !11, i64 16}
!273 = !{!274, !7, i64 112}
!274 = !{!"HookModifierData", !239, i64 0, !7, i64 112, !8, i64 120, !8, i64 184, !8, i64 248, !12, i64 260, !7, i64 264, !11, i64 272, !12, i64 276, !8, i64 280}
!275 = distinct !{!275, !46}
!276 = !{!41, !7, i64 216}
!277 = !{!41, !11, i64 944}
!278 = !{!6, !11, i64 224}
!279 = !{!41, !7, i64 1176}
!280 = !{!281, !7, i64 144}
!281 = !{!"bFollowTrackConstraint", !7, i64 0, !8, i64 8, !11, i64 72, !11, i64 76, !8, i64 80, !7, i64 144, !7, i64 152}
!282 = !{!283, !7, i64 144}
!283 = !{!"bObjectSolverConstraint", !7, i64 0, !11, i64 8, !11, i64 12, !8, i64 16, !8, i64 80, !7, i64 144}
!284 = !{!19, !7, i64 128}
!285 = !{!286, !7, i64 104}
!286 = !{!"bConstraintTypeInfo", !13, i64 0, !13, i64 2, !8, i64 4, !8, i64 36, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128}
!287 = !{!255, !13, i64 26}
!288 = !{!286, !7, i64 120}
!289 = distinct !{!289, !46}
!290 = !{!286, !7, i64 112}
!291 = distinct !{!291, !46}
!292 = !{!293, !7, i64 0}
!293 = !{!"RigidBodyCon", !7, i64 0, !7, i64 8, !13, i64 16, !13, i64 18, !11, i64 20, !12, i64 24, !12, i64 28, !12, i64 32, !12, i64 36, !12, i64 40, !12, i64 44, !12, i64 48, !12, i64 52, !12, i64 56, !12, i64 60, !12, i64 64, !12, i64 68, !12, i64 72, !12, i64 76, !12, i64 80, !12, i64 84, !12, i64 88, !12, i64 92, !12, i64 96, !12, i64 100, !12, i64 104, !12, i64 108, !12, i64 112, !12, i64 116, !7, i64 120}
!294 = !{!293, !7, i64 8}
!295 = !{!267, !7, i64 1120}
!296 = !{!297, !7, i64 272}
!297 = !{!"Mesh", !20, i64 0, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192, !7, i64 200, !7, i64 208, !7, i64 216, !7, i64 224, !7, i64 232, !7, i64 240, !7, i64 248, !7, i64 256, !7, i64 264, !7, i64 272, !268, i64 280, !268, i64 480, !268, i64 680, !268, i64 880, !268, i64 1080, !11, i64 1280, !11, i64 1284, !11, i64 1288, !11, i64 1292, !11, i64 1296, !11, i64 1300, !11, i64 1304, !8, i64 1308, !8, i64 1320, !8, i64 1332, !11, i64 1344, !13, i64 1348, !13, i64 1350, !12, i64 1352, !11, i64 1356, !8, i64 1360, !8, i64 1361, !8, i64 1362, !8, i64 1363, !8, i64 1364, !8, i64 1365, !13, i64 1366, !7, i64 1368}
!298 = !{!41, !11, i64 456}
!299 = !{!85, !11, i64 404}
!300 = distinct !{!300, !46}
!301 = !{!41, !7, i64 416}
!302 = !{!19, !36, i64 4648}
!303 = !{!267, !7, i64 1680}
!304 = !{!297, !11, i64 1296}
!305 = !{!85, !13, i64 128}
!306 = !{!267, !7, i64 1112}
!307 = !{!267, !7, i64 1576}
!308 = !{!41, !7, i64 128}
!309 = !{!310, !11, i64 28}
!310 = !{!"Paint", !7, i64 0, !7, i64 8, !7, i64 16, !8, i64 24, !11, i64 28, !11, i64 32, !11, i64 36}
!311 = !{!312, !8, i64 144}
!312 = !{!"SculptSession", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !11, i64 32, !11, i64 36, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !11, i64 80, !11, i64 84, !8, i64 88, !7, i64 96, !7, i64 104, !8, i64 112, !8, i64 113, !7, i64 120, !7, i64 128, !7, i64 136, !8, i64 144, !11, i64 148, !7, i64 152, !11, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192, !8, i64 200, !8, i64 204, !8, i64 216, !11, i64 228}
!313 = !{!53, !13, i64 228}
!314 = !{!267, !7, i64 1608}
!315 = !{!267, !7, i64 1624}
!316 = !{!267, !7, i64 1600}
!317 = !{!267, !7, i64 1632}
!318 = !{!297, !13, i64 1350}
!319 = !{!297, !7, i64 232}
!320 = !{!321, !7, i64 0}
!321 = !{!"drawDMVertSel_userData", !7, i64 0, !11, i64 8, !8, i64 16, !8, i64 40}
!322 = !{!321, !11, i64 8}
!323 = !{!321, !8, i64 40}
!324 = !{!267, !7, i64 1488}
!325 = !{!297, !11, i64 1280}
!326 = !{!92, !12, i64 344}
!327 = !{!92, !12, i64 312}
!328 = !{!92, !12, i64 320}
!329 = !{!92, !13, i64 304}
!330 = !{!92, !11, i64 488}
!331 = !{!92, !7, i64 480}
!332 = !{!333, !12, i64 8}
!333 = !{!"TextBox", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12}
!334 = !{!92, !11, i64 492}
!335 = !{!92, !12, i64 336}
!336 = !{!333, !12, i64 0}
!337 = !{!92, !12, i64 340}
!338 = !{!333, !12, i64 4}
!339 = !{!333, !12, i64 12}
!340 = distinct !{!340, !46}
!341 = !{!342, !7, i64 32}
!342 = !{!"EditFont", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !8, i64 40, !11, i64 72, !11, i64 76, !11, i64 80, !11, i64 84}
!343 = !{!344, !12, i64 4}
!344 = !{!"EditFontSelBox", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !12, i64 16}
!345 = !{!344, !12, i64 0}
!346 = !{!344, !12, i64 8}
!347 = !{!344, !12, i64 16}
!348 = !{!344, !12, i64 12}
!349 = distinct !{!349, !46}
!350 = !{!115, !7, i64 0}
!351 = !{!115, !7, i64 16}
!352 = !{!17, !7, i64 0}
!353 = !{!354, !7, i64 1888}
!354 = !{!"Main", !7, i64 0, !7, i64 8, !8, i64 16, !13, i64 1040, !13, i64 1042, !13, i64 1044, !13, i64 1046, !36, i64 1048, !8, i64 1056, !13, i64 1072, !7, i64 1080, !10, i64 1088, !10, i64 1104, !10, i64 1120, !10, i64 1136, !10, i64 1152, !10, i64 1168, !10, i64 1184, !10, i64 1200, !10, i64 1216, !10, i64 1232, !10, i64 1248, !10, i64 1264, !10, i64 1280, !10, i64 1296, !10, i64 1312, !10, i64 1328, !10, i64 1344, !10, i64 1360, !10, i64 1376, !10, i64 1392, !10, i64 1408, !10, i64 1424, !10, i64 1440, !10, i64 1456, !10, i64 1472, !10, i64 1488, !10, i64 1504, !10, i64 1520, !10, i64 1536, !10, i64 1552, !10, i64 1568, !10, i64 1584, !10, i64 1600, !10, i64 1616, !8, i64 1632, !7, i64 1888, !7, i64 1896}
!355 = !{!356, !7, i64 40}
!356 = !{!"DispList", !7, i64 0, !7, i64 8, !13, i64 16, !13, i64 18, !11, i64 20, !11, i64 24, !13, i64 28, !13, i64 30, !7, i64 32, !7, i64 40, !7, i64 48, !11, i64 56, !11, i64 60, !7, i64 64}
!357 = !{!92, !7, i64 160}
!358 = !{!92, !7, i64 168}
!359 = !{!92, !12, i64 276}
!360 = !{!92, !12, i64 280}
!361 = !{!19, !7, i64 264}
!362 = !{!92, !13, i64 248}
!363 = !{!364, !13, i64 16}
!364 = !{!"Nurb", !7, i64 0, !7, i64 8, !13, i64 16, !13, i64 18, !13, i64 20, !13, i64 22, !11, i64 24, !11, i64 28, !8, i64 32, !13, i64 36, !13, i64 38, !13, i64 40, !13, i64 42, !13, i64 44, !13, i64 46, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !13, i64 80, !13, i64 82, !11, i64 84}
!365 = !{!364, !7, i64 0}
!366 = distinct !{!366, !46}
!367 = !{!92, !11, i64 292}
!368 = !{!364, !13, i64 20}
!369 = !{!364, !11, i64 24}
!370 = !{!364, !7, i64 72}
!371 = !{!372, !8, i64 54}
!372 = !{!"BezTriple", !8, i64 0, !12, i64 36, !12, i64 40, !12, i64 44, !8, i64 48, !8, i64 49, !8, i64 50, !8, i64 51, !8, i64 52, !8, i64 53, !8, i64 54, !8, i64 55, !12, i64 56, !12, i64 60, !12, i64 64, !8, i64 68}
!373 = distinct !{!373, !46}
!374 = distinct !{!374, !46}
!375 = !{!376, !12, i64 40}
!376 = !{!"ToolSettings", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !12, i64 32, !12, i64 36, !12, i64 40, !13, i64 44, !13, i64 46, !8, i64 48, !8, i64 49, !8, i64 50, !8, i64 51, !12, i64 52, !13, i64 56, !8, i64 58, !8, i64 59, !377, i64 64, !133, i64 168, !12, i64 336, !12, i64 340, !13, i64 344, !13, i64 346, !8, i64 348, !8, i64 349, !13, i64 350, !12, i64 352, !12, i64 356, !12, i64 360, !12, i64 364, !12, i64 368, !12, i64 372, !12, i64 376, !12, i64 380, !12, i64 384, !12, i64 388, !13, i64 392, !8, i64 394, !8, i64 395, !8, i64 396, !8, i64 399, !7, i64 400, !8, i64 408, !8, i64 409, !8, i64 410, !8, i64 411, !8, i64 412, !8, i64 413, !8, i64 421, !8, i64 429, !8, i64 430, !8, i64 431, !8, i64 432, !8, i64 433, !13, i64 434, !13, i64 436, !13, i64 438, !13, i64 440, !8, i64 442, !8, i64 443, !8, i64 444, !8, i64 445, !8, i64 446, !8, i64 447, !11, i64 448, !11, i64 452, !11, i64 456, !11, i64 460, !13, i64 464, !13, i64 466, !11, i64 468, !12, i64 472, !12, i64 476, !378, i64 480, !379, i64 608}
!377 = !{!"ImagePaintSettings", !310, i64 0, !13, i64 40, !13, i64 42, !13, i64 44, !13, i64 46, !8, i64 48, !11, i64 52, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !8, i64 88, !12, i64 100}
!378 = !{!"UnifiedPaintSettings", !11, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !8, i64 16, !8, i64 28, !11, i64 40, !8, i64 44, !12, i64 52, !11, i64 56, !11, i64 60, !8, i64 64, !8, i64 65, !12, i64 72, !8, i64 76, !11, i64 84, !12, i64 88, !8, i64 92, !8, i64 100, !11, i64 108, !7, i64 112, !12, i64 120, !11, i64 124}
!379 = !{!"MeshStatVis", !8, i64 0, !8, i64 1, !8, i64 3, !12, i64 4, !12, i64 8, !12, i64 12, !12, i64 16, !8, i64 20, !8, i64 21, !12, i64 24, !12, i64 28, !12, i64 32, !12, i64 36}
!380 = !{!364, !13, i64 36}
!381 = !{!382, !12, i64 16}
!382 = !{!"BevPoint", !8, i64 0, !12, i64 12, !12, i64 16, !12, i64 20, !12, i64 24, !12, i64 28, !12, i64 32, !8, i64 36, !8, i64 48, !8, i64 60, !13, i64 76, !13, i64 78}
!383 = distinct !{!383, !46}
!384 = distinct !{!384, !46}
!385 = distinct !{!385, !46}
!386 = !{!387, !13, i64 26}
!387 = !{!"MetaElem", !7, i64 0, !7, i64 8, !7, i64 16, !13, i64 24, !13, i64 26, !13, i64 28, !13, i64 30, !12, i64 32, !12, i64 36, !12, i64 40, !8, i64 44, !12, i64 60, !12, i64 64, !12, i64 68, !12, i64 72, !12, i64 76, !12, i64 80, !12, i64 84, !7, i64 88, !7, i64 96}
!388 = !{!387, !13, i64 28}
!389 = !{!387, !12, i64 72}
!390 = !{!387, !13, i64 30}
!391 = !{!387, !12, i64 80}
!392 = !{!387, !7, i64 0}
!393 = distinct !{!393, !46}
!394 = !{!41, !7, i64 1392}
!395 = !{!396, !7, i64 40}
!396 = !{!"ImBuf", !7, i64 0, !7, i64 8, !11, i64 16, !11, i64 20, !8, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !7, i64 40, !7, i64 48, !8, i64 56, !11, i64 72, !11, i64 76, !11, i64 80, !11, i64 84, !7, i64 88, !7, i64 96, !7, i64 104, !12, i64 112, !8, i64 120, !11, i64 280, !11, i64 284, !11, i64 288, !11, i64 292, !7, i64 296, !7, i64 304, !11, i64 312, !8, i64 316, !8, i64 1340, !7, i64 2368, !11, i64 2376, !7, i64 2384, !11, i64 2392, !11, i64 2396, !7, i64 2400, !7, i64 2408, !7, i64 2416, !7, i64 2424, !11, i64 2432, !27, i64 2436, !397, i64 2456}
!397 = !{!"DDSData", !11, i64 0, !11, i64 4, !7, i64 8, !11, i64 16}
!398 = !{!396, !7, i64 48}
!399 = !{!396, !11, i64 16}
!400 = !{!396, !11, i64 20}
!401 = !{!402, !12, i64 1336}
!402 = !{!"Image", !20, i64 0, !8, i64 120, !7, i64 1144, !7, i64 1152, !7, i64 1160, !7, i64 1168, !8, i64 1176, !13, i64 1240, !13, i64 1242, !13, i64 1244, !13, i64 1246, !13, i64 1248, !13, i64 1250, !11, i64 1252, !13, i64 1256, !13, i64 1258, !13, i64 1260, !13, i64 1262, !13, i64 1264, !13, i64 1266, !11, i64 1268, !7, i64 1272, !7, i64 1280, !7, i64 1288, !12, i64 1296, !11, i64 1300, !13, i64 1304, !13, i64 1306, !11, i64 1308, !11, i64 1312, !8, i64 1316, !8, i64 1317, !13, i64 1318, !8, i64 1320, !12, i64 1336, !12, i64 1340, !37, i64 1344, !8, i64 1408, !8, i64 1409, !8, i64 1416}
!403 = !{!402, !12, i64 1340}
!404 = !{!405, !12, i64 8972}
!405 = !{!"UserDef", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !8, i64 20, !8, i64 788, !8, i64 1556, !8, i64 2580, !8, i64 3348, !8, i64 4116, !8, i64 4884, !8, i64 5652, !8, i64 6420, !8, i64 7444, !11, i64 8468, !13, i64 8472, !13, i64 8474, !13, i64 8476, !13, i64 8478, !13, i64 8480, !13, i64 8482, !11, i64 8484, !11, i64 8488, !11, i64 8492, !13, i64 8496, !13, i64 8498, !11, i64 8500, !11, i64 8504, !11, i64 8508, !11, i64 8512, !11, i64 8516, !11, i64 8520, !11, i64 8524, !13, i64 8528, !13, i64 8530, !13, i64 8532, !13, i64 8534, !10, i64 8536, !10, i64 8552, !10, i64 8568, !10, i64 8584, !10, i64 8600, !10, i64 8616, !10, i64 8632, !8, i64 8648, !13, i64 8712, !13, i64 8714, !13, i64 8716, !13, i64 8718, !13, i64 8720, !13, i64 8722, !13, i64 8724, !13, i64 8726, !8, i64 8728, !13, i64 8896, !13, i64 8898, !13, i64 8900, !13, i64 8902, !13, i64 8904, !13, i64 8906, !13, i64 8908, !13, i64 8910, !11, i64 8912, !11, i64 8916, !13, i64 8920, !13, i64 8922, !13, i64 8924, !13, i64 8926, !13, i64 8928, !13, i64 8930, !13, i64 8932, !13, i64 8934, !13, i64 8936, !13, i64 8938, !8, i64 8940, !8, i64 8941, !8, i64 8942, !8, i64 8943, !13, i64 8944, !13, i64 8946, !13, i64 8948, !13, i64 8950, !13, i64 8952, !13, i64 8954, !12, i64 8956, !12, i64 8960, !11, i64 8964, !13, i64 8968, !13, i64 8970, !12, i64 8972, !13, i64 8976, !13, i64 8978, !13, i64 8980, !13, i64 8982, !406, i64 8984, !8, i64 9760, !8, i64 9772, !13, i64 9788, !8, i64 9790, !8, i64 9791, !8, i64 9792, !8, i64 9872, !11, i64 10896, !11, i64 10900, !12, i64 10904, !12, i64 10908, !11, i64 10912, !13, i64 10916, !13, i64 10918, !13, i64 10920, !13, i64 10922, !13, i64 10924, !13, i64 10926, !407, i64 10928}
!406 = !{!"ColorBand", !13, i64 0, !13, i64 2, !8, i64 4, !8, i64 5, !8, i64 6, !8, i64 7, !8, i64 8}
!407 = !{!"WalkNavigation", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !12, i64 16, !12, i64 20, !13, i64 24, !8, i64 26}
!408 = !{!405, !13, i64 8480}
!409 = !{!410, !13, i64 128}
!410 = !{!"Lamp", !20, i64 0, !7, i64 120, !13, i64 128, !13, i64 130, !11, i64 132, !13, i64 136, !13, i64 138, !12, i64 140, !12, i64 144, !12, i64 148, !12, i64 152, !12, i64 156, !12, i64 160, !12, i64 164, !12, i64 168, !12, i64 172, !12, i64 176, !12, i64 180, !12, i64 184, !12, i64 188, !12, i64 192, !12, i64 196, !7, i64 200, !13, i64 208, !13, i64 210, !12, i64 212, !12, i64 216, !12, i64 220, !12, i64 224, !12, i64 228, !12, i64 232, !12, i64 236, !13, i64 240, !13, i64 242, !13, i64 244, !13, i64 246, !8, i64 248, !8, i64 249, !13, i64 250, !13, i64 252, !13, i64 254, !13, i64 256, !13, i64 258, !12, i64 260, !12, i64 264, !12, i64 268, !12, i64 272, !13, i64 276, !13, i64 278, !13, i64 280, !13, i64 282, !13, i64 284, !13, i64 286, !12, i64 288, !12, i64 292, !12, i64 296, !12, i64 300, !12, i64 304, !12, i64 308, !12, i64 312, !12, i64 316, !12, i64 320, !12, i64 324, !12, i64 328, !12, i64 332, !12, i64 336, !13, i64 340, !8, i64 342, !7, i64 344, !8, i64 352, !13, i64 496, !13, i64 498, !8, i64 500, !7, i64 504, !7, i64 512}
!411 = !{!410, !11, i64 132}
!412 = !{!405, !13, i64 8924}
!413 = !{!410, !12, i64 176}
!414 = !{!410, !12, i64 180}
!415 = !{!410, !12, i64 184}
!416 = !{!410, !12, i64 212}
!417 = distinct !{!417, !46}
!418 = !{!410, !13, i64 258}
!419 = !{!410, !12, i64 260}
!420 = !{!410, !12, i64 264}
!421 = !{!410, !12, i64 216}
!422 = !{!423, !12, i64 152}
!423 = !{!"Camera", !20, i64 0, !7, i64 120, !8, i64 128, !8, i64 129, !13, i64 130, !12, i64 132, !12, i64 136, !12, i64 140, !12, i64 144, !12, i64 148, !12, i64 152, !12, i64 156, !12, i64 160, !12, i64 164, !12, i64 168, !12, i64 172, !7, i64 176, !7, i64 184, !8, i64 192, !8, i64 193}
!424 = !{!423, !13, i64 130}
!425 = !{!423, !12, i64 136}
!426 = !{!423, !12, i64 140}
!427 = !{!19, !7, i64 136}
!428 = !{!429, !12, i64 220}
!429 = !{!"World", !20, i64 0, !7, i64 120, !13, i64 128, !13, i64 130, !13, i64 132, !13, i64 134, !12, i64 136, !12, i64 140, !12, i64 144, !12, i64 148, !12, i64 152, !12, i64 156, !12, i64 160, !12, i64 164, !12, i64 168, !12, i64 172, !12, i64 176, !12, i64 180, !12, i64 184, !12, i64 188, !12, i64 192, !12, i64 196, !13, i64 200, !13, i64 202, !13, i64 204, !13, i64 206, !13, i64 208, !13, i64 210, !13, i64 212, !13, i64 214, !12, i64 216, !12, i64 220, !12, i64 224, !12, i64 228, !12, i64 232, !12, i64 236, !12, i64 240, !12, i64 244, !12, i64 248, !12, i64 252, !12, i64 256, !12, i64 260, !13, i64 264, !13, i64 266, !13, i64 268, !13, i64 270, !12, i64 272, !12, i64 276, !12, i64 280, !12, i64 284, !13, i64 288, !13, i64 290, !13, i64 292, !13, i64 294, !12, i64 296, !12, i64 300, !12, i64 304, !12, i64 308, !12, i64 312, !12, i64 316, !12, i64 320, !13, i64 324, !13, i64 326, !13, i64 328, !13, i64 330, !13, i64 332, !13, i64 334, !7, i64 336, !7, i64 344, !7, i64 352, !8, i64 360, !13, i64 504, !13, i64 506, !8, i64 508, !7, i64 512, !7, i64 520}
!430 = !{!429, !12, i64 224}
!431 = !{!432, !7, i64 272}
!432 = !{!"Lattice", !20, i64 0, !7, i64 120, !13, i64 128, !13, i64 130, !13, i64 132, !13, i64 134, !13, i64 136, !13, i64 138, !13, i64 140, !13, i64 142, !8, i64 144, !8, i64 145, !8, i64 146, !8, i64 147, !11, i64 148, !12, i64 152, !12, i64 156, !12, i64 160, !12, i64 164, !12, i64 168, !12, i64 172, !7, i64 176, !7, i64 184, !7, i64 192, !7, i64 200, !8, i64 208, !7, i64 272}
!433 = !{!434, !7, i64 0}
!434 = !{!"EditLatt", !7, i64 0, !11, i64 8, !8, i64 12}
!435 = !{!41, !7, i64 400}
!436 = !{!432, !7, i64 200}
!437 = !{!41, !13, i64 1126}
!438 = !{!432, !13, i64 132}
!439 = !{!432, !13, i64 130}
!440 = !{!432, !13, i64 128}
!441 = !{!432, !13, i64 134}
!442 = !{!443, !12, i64 4}
!443 = !{!"MDeformWeight", !11, i64 0, !12, i64 4}
!444 = !{!356, !7, i64 32}
!445 = !{!432, !7, i64 176}
!446 = distinct !{!446, !46}
!447 = distinct !{!447, !46}
!448 = distinct !{!448, !46}
!449 = !{!36, !36, i64 0}
!450 = !{!451, !7, i64 0}
!451 = !{!"BMEditMesh", !7, i64 0, !7, i64 8, !11, i64 16, !7, i64 24, !11, i64 32, !7, i64 40, !7, i64 48, !36, i64 56, !7, i64 64, !11, i64 72, !7, i64 80, !11, i64 88, !13, i64 92, !13, i64 94, !7, i64 96, !11, i64 104}
!452 = !{!376, !13, i64 46}
!453 = !{!267, !7, i64 1512}
!454 = !{!455, !11, i64 12}
!455 = !{!"BMesh", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !8, i64 28, !8, i64 29, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !11, i64 88, !11, i64 92, !11, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !11, i64 128, !7, i64 136, !268, i64 144, !268, i64 344, !268, i64 544, !268, i64 744, !13, i64 944, !11, i64 948, !11, i64 952, !11, i64 956, !10, i64 960, !7, i64 976, !10, i64 984, !7, i64 1000}
!456 = !{!457, !7, i64 0}
!457 = !{!"drawBMOffset_userData", !7, i64 0, !11, i64 8}
!458 = !{!457, !11, i64 8}
!459 = !{!267, !7, i64 1656}
!460 = !{!455, !11, i64 4}
!461 = !{!455, !11, i64 0}
!462 = !{!297, !8, i64 1365}
!463 = !{!464, !7, i64 0}
!464 = !{!"drawMVertOffset_userData", !7, i64 0, !11, i64 8}
!465 = !{!464, !11, i64 8}
!466 = !{!356, !11, i64 20}
!467 = !{!356, !11, i64 24}
!468 = !{!356, !13, i64 16}
!469 = distinct !{!469, !46}
!470 = distinct !{!470, !46}
!471 = !{!356, !13, i64 18}
!472 = distinct !{!472, !46}
!473 = distinct !{!473, !46}
!474 = distinct !{!474, !46}
!475 = !{!356, !7, i64 48}
!476 = distinct !{!476, !46}
!477 = !{!455, !7, i64 968}
!478 = !{!479, !8, i64 24}
!479 = !{!"BMEditSelection", !7, i64 0, !7, i64 8, !7, i64 16, !8, i64 24}
!480 = !{!479, !7, i64 16}
!481 = !{!297, !11, i64 1344}
!482 = !{!267, !8, i64 1048}
!483 = !{!267, !7, i64 1648}
!484 = !{!485, !7, i64 24}
!485 = !{!"drawDMFacesSel_userData", !8, i64 0, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56}
!486 = !{!485, !7, i64 32}
!487 = !{!485, !7, i64 40}
!488 = !{!485, !7, i64 48}
!489 = !{!485, !7, i64 56}
!490 = !{!491, !7, i64 0}
!491 = !{!"drawDMLayer_userData", !7, i64 0, !11, i64 8}
!492 = !{!491, !11, i64 8}
!493 = !{!494, !8, i64 16}
!494 = !{!"drawDMVerts_userData", !7, i64 0, !7, i64 8, !8, i64 16, !8, i64 17, !8, i64 21, !8, i64 25, !8, i64 29, !12, i64 36, !11, i64 40, !8, i64 44}
!495 = !{!494, !7, i64 8}
!496 = !{!494, !7, i64 0}
!497 = !{!494, !12, i64 36}
!498 = !{!494, !11, i64 40}
!499 = !{!451, !7, i64 96}
!500 = !{!501, !7, i64 0}
!501 = !{!"drawBMSelect_userData", !7, i64 0, !8, i64 8}
!502 = !{!501, !8, i64 8}
!503 = distinct !{!503, !46}
!504 = !{!505, !7, i64 0}
!505 = !{!"drawDMNormal_userData", !7, i64 0, !11, i64 8, !12, i64 12, !8, i64 16, !8, i64 52}
!506 = !{!505, !12, i64 12}
!507 = !{!505, !11, i64 8}
!508 = !{!267, !7, i64 1504}
!509 = !{!34, !8, i64 4}
!510 = !{!34, !13, i64 6}
!511 = !{!27, !11, i64 0}
!512 = !{!53, !13, i64 208}
!513 = !{!27, !11, i64 4}
!514 = !{!27, !11, i64 8}
!515 = !{!53, !13, i64 210}
!516 = !{!27, !11, i64 12}
!517 = !{!518, !8, i64 60}
!518 = !{!"BMIter", !8, i64 0, !7, i64 40, !7, i64 48, !11, i64 56, !8, i64 60}
!519 = !{!518, !7, i64 40}
!520 = !{!518, !7, i64 48}
!521 = !{!455, !7, i64 40}
!522 = !{!523, !8, i64 13}
!523 = !{!"BMHeader", !7, i64 0, !11, i64 8, !8, i64 12, !8, i64 13, !8, i64 14}
!524 = !{!525, !7, i64 24}
!525 = !{!"BMEdge", !523, i64 0, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !526, i64 48, !526, i64 64}
!526 = !{!"BMDiskLink", !7, i64 0, !7, i64 8}
!527 = !{!525, !7, i64 32}
!528 = !{!267, !7, i64 1528}
!529 = !{!523, !11, i64 8}
!530 = !{!34, !12, i64 0}
!531 = distinct !{!531, !46}
!532 = !{!34, !8, i64 5}
!533 = !{!534, !7, i64 56}
!534 = !{!"BMLoop", !523, i64 0, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64}
!535 = !{!534, !7, i64 16}
!536 = !{!534, !7, i64 64}
!537 = !{!267, !7, i64 1552}
!538 = !{!534, !7, i64 32}
!539 = distinct !{!539, !46}
!540 = !{!451, !11, i64 32}
!541 = !{!451, !7, i64 24}
!542 = distinct !{!542, !46}
!543 = !{!455, !7, i64 56}
!544 = !{!545, !7, i64 24}
!545 = !{!"BMFace", !523, i64 0, !7, i64 16, !7, i64 24, !11, i64 32, !8, i64 36, !13, i64 48}
!546 = distinct !{!546, !46}
!547 = !{!545, !11, i64 32}
!548 = distinct !{!548, !46}
!549 = distinct !{!549, !46}
!550 = !{!17, !11, i64 2100}
!551 = !{!451, !13, i64 92}
!552 = !{!455, !7, i64 32}
!553 = distinct !{!553, !46}
!554 = distinct !{!554, !46}
!555 = distinct !{!555, !46}
!556 = !{!545, !13, i64 48}
!557 = !{!558, !7, i64 8}
!558 = !{!"drawDMEdgesSel_userData", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32}
!559 = !{!558, !7, i64 16}
!560 = !{!558, !7, i64 24}
!561 = !{!558, !7, i64 0}
!562 = !{!558, !7, i64 32}
!563 = !{!267, !7, i64 1664}
!564 = !{!376, !8, i64 446}
!565 = !{!566, !7, i64 0}
!566 = !{!"drawDMEdgesWeightInterp_userData", !7, i64 0, !11, i64 8, !11, i64 12, !11, i64 16, !8, i64 20, !8, i64 24}
!567 = !{!566, !11, i64 8}
!568 = !{!566, !11, i64 12}
!569 = !{!566, !11, i64 16}
!570 = !{!566, !8, i64 20}
!571 = !{!572, !7, i64 0}
!572 = !{!"drawDMEdgesSelInterp_userData", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24}
!573 = !{!572, !7, i64 8}
!574 = !{!572, !7, i64 16}
!575 = !{!572, !7, i64 24}
!576 = distinct !{!576, !46}
!577 = !{!578, !7, i64 0}
!578 = !{!"BMVert", !523, i64 0, !7, i64 16, !8, i64 24, !8, i64 36, !7, i64 48}
!579 = !{!525, !7, i64 0}
!580 = !{!581, !11, i64 12}
!581 = !{!"MVertSkin", !8, i64 0, !11, i64 12}
!582 = !{!583, !8, i64 18}
!583 = !{!"MVert", !8, i64 0, !8, i64 12, !8, i64 18, !8, i64 19}
!584 = distinct !{!584, !46}
!585 = distinct !{!585, !46}
!586 = !{!356, !13, i64 28}
!587 = !{!356, !13, i64 30}
!588 = !{!356, !11, i64 60}
!589 = distinct !{!589, !46}
!590 = !{!372, !8, i64 52}
!591 = !{!372, !8, i64 49}
!592 = !{!372, !8, i64 50}
!593 = !{!372, !8, i64 51}
!594 = !{!372, !8, i64 53}
!595 = distinct !{!595, !46}
!596 = !{!364, !11, i64 28}
!597 = !{!364, !7, i64 64}
!598 = !{!364, !13, i64 44}
!599 = distinct !{!599, !46}
!600 = distinct !{!600, !46}
!601 = distinct !{!601, !46}
!602 = distinct !{!602, !46}
!603 = !{!604, !13, i64 26}
!604 = !{!"BPoint", !8, i64 0, !12, i64 16, !12, i64 20, !13, i64 24, !13, i64 26, !12, i64 28, !12, i64 32}
!605 = distinct !{!605, !46}
!606 = distinct !{!606, !46, !607}
!607 = !{!"llvm.loop.unswitch.partial.disable"}
!608 = distinct !{!608, !46}
!609 = distinct !{!609, !46, !607}
!610 = !{!604, !13, i64 24}
!611 = distinct !{!611, !46}
!612 = distinct !{!612, !46, !607}
!613 = distinct !{!613, !46}
!614 = distinct !{!614, !46}
!615 = distinct !{!615, !46}
!616 = distinct !{!616, !46}
!617 = distinct !{!617, !46}
!618 = distinct !{!618, !46}
!619 = !{!620, !11, i64 80}
!620 = !{!"MovieTrackingObject", !7, i64 0, !7, i64 8, !8, i64 16, !11, i64 80, !12, i64 84, !10, i64 88, !10, i64 104, !621, i64 120, !11, i64 144, !11, i64 148}
!621 = !{!"MovieTrackingReconstruction", !11, i64 0, !12, i64 4, !11, i64 8, !11, i64 12, !7, i64 16}
!622 = !{!620, !12, i64 84}
!623 = !{!624, !11, i64 152}
!624 = !{!"MovieTrackingTrack", !7, i64 0, !7, i64 8, !8, i64 16, !8, i64 80, !8, i64 88, !8, i64 96, !8, i64 104, !8, i64 112, !11, i64 120, !11, i64 124, !7, i64 128, !8, i64 136, !12, i64 148, !11, i64 152, !11, i64 156, !11, i64 160, !8, i64 164, !13, i64 176, !13, i64 178, !13, i64 180, !13, i64 182, !11, i64 184, !12, i64 188, !7, i64 192, !12, i64 200, !12, i64 204}
!625 = !{!624, !11, i64 156}
!626 = !{!624, !11, i64 160}
!627 = !{!39, !11, i64 20}
!628 = !{!6, !12, i64 76}
!629 = !{!6, !8, i64 80}
!630 = distinct !{!630, !46}
!631 = !{!621, !11, i64 12}
!632 = !{!621, !7, i64 16}
!633 = distinct !{!633, !46}
!634 = distinct !{!634, !46}
!635 = distinct !{!635, !46}
!636 = distinct !{!636, !46}
!637 = distinct !{!637, !46}
!638 = distinct !{!638, !46}
!639 = distinct !{!639, !46}
!640 = !{!69, !12, i64 256}
!641 = !{!69, !12, i64 260}
!642 = !{!69, !12, i64 232}
!643 = !{!69, !12, i64 236}
!644 = !{!156, !12, i64 48}
!645 = !{!156, !12, i64 56}
!646 = !{!297, !7, i64 168}
!647 = !{!648, !8, i64 10}
!648 = !{!"MPoly", !11, i64 0, !11, i64 4, !13, i64 8, !8, i64 10, !8, i64 11}
