; ModuleID = 'blender/source/blender/blenkernel/intern/particle_system.c'
source_filename = "blender/source/blender/blenkernel/intern/particle_system.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.Global = type { ptr, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.ListBase = type { ptr, ptr }
%struct.ParticleSystem = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, ptr, ptr, ptr, %struct.ListBase, [64 x i8], [4 x [4 x float]], float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, [3 x [64 x i8]], [12 x i16], i16, i16, ptr, ptr, %struct.ListBase, ptr, ptr, i32, i32, ptr, ptr, ptr, float, float }
%struct.PointCache = type { ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, [64 x i8], [64 x i8], [64 x i8], [1024 x i8], ptr, %struct.ListBase, ptr, ptr }
%struct.ParticleSettings = type { %struct.ID, ptr, ptr, ptr, ptr, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, [2 x float], [2 x float], float, float, float, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, [1 x float], i32, i32, i32, i32, i16, [3 x i16], float, float, float, float, float, float, float, [3 x float], float, float, float, float, float, float, float, [3 x float], float, float, float, float, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, [2 x float], float, float, i32, i32, [18 x ptr], ptr, %struct.ListBase, ptr, ptr, ptr, ptr, ptr, ptr, i16, [3 x i16] }
%struct.ID = type { ptr, ptr, ptr, ptr, [66 x i8], i16, i32, i32, i32, ptr }
%struct.ParticleData = type { %struct.ParticleKey, %struct.ParticleKey, ptr, ptr, ptr, i32, float, float, float, i32, i32, [4 x float], float, float, float, i32, i32, i16, i16 }
%struct.ParticleKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float }
%struct.Object = type { %struct.ID, ptr, ptr, i16, i16, i32, i32, i32, [64 x i8], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.bAnimVizSettings, ptr, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, ptr, ptr, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, ptr, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, i8, i8, i16, float, ptr, ptr, ptr, ptr, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, [2 x float], ptr, %struct.ListBase, ptr }
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, i32, float, i32, i32, ptr, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.CustomData = type { ptr, [41 x i32], i32, i32, i32, ptr, ptr }
%struct.Mesh = type { %struct.ID, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, ptr }
%struct.LinkNode = type { ptr, ptr }
%struct.ParticleSimulationData = type { ptr, ptr, ptr, ptr, ptr, float }
%struct.ParticleSystemModifierData = type { %struct.ModifierData, ptr, ptr, i32, i32, i32, i16, i16 }
%struct.ModifierData = type { ptr, ptr, i32, i32, i32, i32, [64 x i8], ptr, ptr }
%struct.ParticleThreadContext = type { %struct.ParticleSimulationData, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, float, ptr, ptr, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, float, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.ParticleThread = type { ptr, ptr, ptr, i32, i32 }
%struct.ParticleTexture = type { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.BoidParticle = type { ptr, %struct.BoidData, [3 x float], [3 x float], float }
%struct.BoidData = type { float, [3 x float], i16, i16 }
%struct.Scene = type { %struct.ID, ptr, ptr, ptr, ptr, %struct.ListBase, ptr, ptr, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], ptr, ptr, ptr, ptr, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, ptr, ptr, ptr, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, ptr, %struct.PhysicsSettings, ptr, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, ptr }
%struct.RenderData = type { %struct.ImageFormatData, ptr, ptr, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, ptr, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, ptr }
%struct.rctf = type { float, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, ptr }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, ptr, ptr }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.BoidSettings = type { i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.ListBase }
%struct.BoidState = type { ptr, ptr, %struct.ListBase, %struct.ListBase, %struct.ListBase, [32 x i8], i32, i32, i32, float, i32, i32, float, float }
%struct.ParticleTarget = type { ptr, ptr, ptr, i32, i16, i16, float, float }
%struct.PTCacheID = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.SPHData = type { [10 x ptr], ptr, float, ptr, ptr, float, i32, float, [3 x float], ptr, ptr }
%struct.ParticleSpring = type { float, [2 x i32], i32 }
%struct.SPHFluidSettings = type { float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, i16, [3 x i16] }
%struct.SPHRangeData = type { [512 x %struct.SPHNeighbor], i32, ptr, ptr, ptr, float, float, float, i32 }
%struct.SPHNeighbor = type { ptr, i32 }
%struct.ParticleCollisionElement = type { [4 x ptr], [4 x ptr], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [2 x float], i32, i32, i16, i16 }
%struct.ParticleCollision = type { ptr, ptr, ptr, ptr, ptr, ptr, float, float, float, float, float, float, i32, %struct.ParticleCollisionElement, float, float, float, float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, i32 }
%struct.CollisionModifierData = type { %struct.ModifierData, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, float, float, ptr }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.BVHTreeRayHit = type { i32, [3 x float], [3 x float], float, i32 }
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.BVHTreeRay = type { [3 x float], [3 x float], float }
%struct.ParticleDrawData = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32 }
%struct.BoidRule = type { ptr, ptr, i32, i32, [32 x i8] }
%struct.PTCacheEdit = type { %struct.ListBase, ptr, ptr, %struct.PTCacheID, ptr, ptr, ptr, ptr, ptr, ptr, %struct.ListBase, i32, i32, i32, i32, [3 x i8], [3 x i8] }
%struct.HairKey = type { [3 x float], float, float, i16, i16 }
%struct.ClothModifierData = type { %struct.ModifierData, ptr, ptr, ptr, ptr, ptr, %struct.ListBase }
%struct.ClothSimSettings = type { ptr, float, float, float, [3 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i8], ptr }
%struct.ClothCollSettings = type { ptr, float, float, float, float, float, float, i32, i16, i16, ptr, i16, i16, i32 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MDeformVert = type { ptr, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.BoidBrainData = type { ptr, ptr, float, float, float, [3 x float], float, ptr, [3 x float], [3 x float], float, ptr }
%struct.ChildParticle = type { i32, i32, [4 x i32], [4 x float], [4 x float], float, float }
%struct.ToolSettings = type { ptr, ptr, ptr, ptr, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, ptr, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, ptr, ptr, ptr, ptr, [3 x float], float }
%struct.Paint = type { ptr, ptr, ptr, [4 x i8], i32, i32, i32 }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], ptr, float, float, i32, i32, i32, i32, ptr, ptr }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, ptr, float, i32 }
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.Base = type { ptr, ptr, i32, i32, i32, i16, i16, ptr }
%struct.ParticleInstanceModifierData = type { %struct.ModifierData, ptr, i16, i16, i16, i16, float, float }
%struct.EfData = type { %struct.ParticleTexture, ptr, ptr }
%struct.EffectorWeights = type { ptr, [14 x float], float, i16, [3 x i16], i32 }
%struct.ColliderCache = type { ptr, ptr, ptr, ptr }
%struct.PartDeflect = type { i32, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr, ptr, float, i32, ptr }
%struct.EffectedPoint = type { ptr, ptr, ptr, ptr, float, float, float, float, i32, i32, ptr }
%struct.KDTreeNearest = type { i32, float, [3 x float] }

@MEM_freeN = external local_unnamed_addr global ptr, align 8
@MEM_callocN = external local_unnamed_addr global ptr, align 8
@.str = private unnamed_addr constant [16 x i8] c"psys node elems\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"psys node array\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"ParticleThread\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"ParticleThreadContext\00", align 1
@__const.psys_get_birth_coordinates.x_vec = private unnamed_addr constant [3 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], align 4
@__const.psys_get_birth_coordinates.utan = private unnamed_addr constant [3 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], align 4
@__const.psys_get_birth_coordinates.vtan = private unnamed_addr constant [3 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@.str.4 = private unnamed_addr constant [10 x i8] c"Boid Data\00", align 1
@PSYS_FRAND_SEED_OFFSET = external local_unnamed_addr global [1024 x i32], align 16
@PSYS_FRAND_SEED_MULTIPLIER = external local_unnamed_addr global [1024 x i32], align 16
@PSYS_FRAND_BASE = external local_unnamed_addr global [1024 x float], align 16
@__func__.sph_springhash_build = private unnamed_addr constant [21 x i8] c"sph_springhash_build\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"Particle Fluid Springs\00", align 1
@MEM_reallocN_id = external local_unnamed_addr global ptr, align 8
@__func__.sph_spring_add = private unnamed_addr constant [15 x i8] c"sph_spring_add\00", align 1
@psys_bvhtree_rwlock = internal global i32 0, align 4
@.str.6 = private unnamed_addr constant [14 x i8] c"Boid Settings\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"SPH Fluid Settings\00", align 1
@__const.basic_rotate.rot2 = private unnamed_addr constant [4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], align 16
@__func__.sph_spring_delete = private unnamed_addr constant [18 x i8] c"sph_spring_delete\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"HairKeys\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"deformWeight\00", align 1
@MEM_mallocN = external local_unnamed_addr global ptr, align 8
@.str.10 = private unnamed_addr constant [27 x i8] c"do_hair_dynamics vertexCos\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"particles\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"boid particles\00", align 1
@stderr = external local_unnamed_addr global ptr, align 8
@.str.13 = private unnamed_addr constant [30 x i8] c"Particle distribution error!\0A\00", align 1
@G = external local_unnamed_addr global %struct.Global, align 8
@.str.15 = private unnamed_addr constant [52 x i8] c"Particle distribution error: Nothing to emit from!\0A\00", align 1
@.str.16 = private unnamed_addr constant [30 x i8] c"particle_distribution_weights\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"particle_distribution_indexes\00", align 1
@.str.18 = private unnamed_addr constant [26 x i8] c"particle_distribution_sum\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"particle_distribution_jitoff\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"jit\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"initjit\00", align 1
@.str.22 = private unnamed_addr constant [16 x i8] c"child_particles\00", align 1
@.str.23 = private unnamed_addr constant [34 x i8] c"Shape emission not yet possible!\0A\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"Keyed keys\00", align 1
@str = private unnamed_addr constant [86 x i8] c"Can't create particles with the current modifier stack, disable destructive modifiers\00", align 1

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local nofpclass(nan inf) float @psys_get_current_display_percentage(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 39
  %5 = load ptr, ptr %4, align 8, !tbaa !14
  %6 = icmp eq ptr %5, null
  br i1 %6, label %31, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 40
  %9 = load ptr, ptr %8, align 8, !tbaa !15
  %10 = getelementptr inbounds %struct.PointCache, ptr %9, i64 0, i32 2
  %11 = load i32, ptr %10, align 8, !tbaa !16
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %51

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.ParticleSettings, ptr %3, i64 0, i32 7
  %16 = load i16, ptr %15, align 8, !tbaa !18
  %17 = icmp eq i16 %16, 2
  br i1 %17, label %18, label %22

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 25
  %20 = load i32, ptr %19, align 4, !tbaa !21
  %21 = and i32 %20, 4
  br label %28

22:                                               ; preds = %14
  %23 = getelementptr inbounds %struct.ParticleSettings, ptr %3, i64 0, i32 11
  %24 = load i16, ptr %23, align 8, !tbaa !22
  switch i16 %24, label %25 [
    i16 1, label %31
    i16 3, label %31
  ]

25:                                               ; preds = %22
  %26 = icmp eq i16 %24, 4
  %27 = zext i1 %26 to i32
  br label %28

28:                                               ; preds = %18, %25
  %29 = phi i32 [ %21, %18 ], [ %27, %25 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %51, label %31

31:                                               ; preds = %22, %22, %28, %1
  %32 = getelementptr inbounds %struct.ParticleSettings, ptr %3, i64 0, i32 89
  %33 = load i32, ptr %32, align 4, !tbaa !23
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.ParticleSettings, ptr %3, i64 0, i32 19
  %37 = load i16, ptr %36, align 4, !tbaa !24
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %35, %31
  %40 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 40
  %41 = load ptr, ptr %40, align 8, !tbaa !15
  %42 = getelementptr inbounds %struct.PointCache, ptr %41, i64 0, i32 2
  %43 = load i32, ptr %42, align 8, !tbaa !16
  %44 = and i32 %43, 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %51

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.ParticleSettings, ptr %3, i64 0, i32 30
  %48 = load i16, ptr %47, align 2, !tbaa !25
  %49 = sitofp i16 %48 to float
  %50 = fmul fast float %49, 0x3F847AE140000000
  br label %51

51:                                               ; preds = %7, %28, %35, %39, %46
  %52 = phi float [ %50, %46 ], [ 1.000000e+00, %39 ], [ 1.000000e+00, %35 ], [ 1.000000e+00, %28 ], [ 1.000000e+00, %7 ]
  ret float %52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @psys_reset(ptr noundef %0, i32 noundef %1) local_unnamed_addr #2 {
  %3 = add i32 %1, -1
  %4 = icmp ult i32 %3, 2
  br i1 %4, label %5, label %52

5:                                                ; preds = %2
  %6 = icmp eq i32 %1, 1
  br i1 %6, label %12, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 25
  %9 = load i32, ptr %8, align 4, !tbaa !21
  %10 = and i32 %9, 2048
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %95

12:                                               ; preds = %7, %5
  %13 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 26
  %14 = load i32, ptr %13, align 8, !tbaa !26
  %15 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %17 = getelementptr inbounds %struct.ParticleSettings, ptr %16, i64 0, i32 9
  %18 = load i16, ptr %17, align 4, !tbaa !27
  %19 = icmp eq i16 %18, 2
  br i1 %19, label %20, label %29

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.ParticleSettings, ptr %16, i64 0, i32 8
  %22 = load i16, ptr %21, align 2, !tbaa !28
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.ParticleSettings, ptr %16, i64 0, i32 65
  %26 = load i32, ptr %25, align 4, !tbaa !29
  %27 = mul nsw i32 %26, %26
  %28 = mul nsw i32 %27, %26
  br label %32

29:                                               ; preds = %20, %12
  %30 = getelementptr inbounds %struct.ParticleSettings, ptr %16, i64 0, i32 63
  %31 = load i32, ptr %30, align 4, !tbaa !30
  br label %32

32:                                               ; preds = %24, %29
  %33 = phi i32 [ %28, %24 ], [ %31, %29 ]
  %34 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 27
  %35 = load i32, ptr %34, align 4, !tbaa !31
  %36 = sub nsw i32 %33, %35
  %37 = icmp eq i32 %14, %36
  br i1 %37, label %39, label %38

38:                                               ; preds = %32
  tail call void @psys_free_particles(ptr noundef nonnull %0) #14
  store i32 0, ptr %13, align 8, !tbaa !26
  br label %39

39:                                               ; preds = %38, %32
  %40 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 33
  store i16 0, ptr %40, align 8, !tbaa !32
  %41 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 25
  %42 = load i32, ptr %41, align 4, !tbaa !21
  %43 = and i32 %42, -1537
  store i32 %43, ptr %41, align 4, !tbaa !21
  %44 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 5
  %45 = load ptr, ptr %44, align 8, !tbaa !33
  %46 = icmp eq ptr %45, null
  br i1 %46, label %95, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 6
  %49 = load ptr, ptr %48, align 8, !tbaa !34
  %50 = icmp eq ptr %49, null
  br i1 %50, label %95, label %51

51:                                               ; preds = %47
  tail call void %49(ptr noundef nonnull %45) #14
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %44, i8 0, i64 16, i1 false)
  br label %95

52:                                               ; preds = %2
  %53 = icmp eq i32 %1, 4
  br i1 %53, label %54, label %95

54:                                               ; preds = %52
  %55 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 26
  %56 = load i32, ptr %55, align 8, !tbaa !26
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %95

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !35
  %61 = and i32 %56, 3
  %62 = icmp ult i32 %56, 4
  br i1 %62, label %83, label %63

63:                                               ; preds = %58
  %64 = and i32 %56, -4
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi ptr [ %60, %63 ], [ %80, %65 ]
  %67 = phi i32 [ 0, %63 ], [ %81, %65 ]
  %68 = getelementptr inbounds %struct.ParticleData, ptr %66, i64 0, i32 17
  %69 = load i16, ptr %68, align 4, !tbaa !36
  %70 = or i16 %69, 2
  store i16 %70, ptr %68, align 4, !tbaa !36
  %71 = getelementptr inbounds %struct.ParticleData, ptr %66, i64 1, i32 17
  %72 = load i16, ptr %71, align 4, !tbaa !36
  %73 = or i16 %72, 2
  store i16 %73, ptr %71, align 4, !tbaa !36
  %74 = getelementptr inbounds %struct.ParticleData, ptr %66, i64 2, i32 17
  %75 = load i16, ptr %74, align 4, !tbaa !36
  %76 = or i16 %75, 2
  store i16 %76, ptr %74, align 4, !tbaa !36
  %77 = getelementptr inbounds %struct.ParticleData, ptr %66, i64 3, i32 17
  %78 = load i16, ptr %77, align 4, !tbaa !36
  %79 = or i16 %78, 2
  store i16 %79, ptr %77, align 4, !tbaa !36
  %80 = getelementptr inbounds %struct.ParticleData, ptr %66, i64 4
  %81 = add i32 %67, 4
  %82 = icmp eq i32 %81, %64
  br i1 %82, label %83, label %65, !llvm.loop !39

83:                                               ; preds = %65, %58
  %84 = phi ptr [ %60, %58 ], [ %80, %65 ]
  %85 = icmp eq i32 %61, 0
  br i1 %85, label %95, label %86

86:                                               ; preds = %83, %86
  %87 = phi ptr [ %92, %86 ], [ %84, %83 ]
  %88 = phi i32 [ %93, %86 ], [ 0, %83 ]
  %89 = getelementptr inbounds %struct.ParticleData, ptr %87, i64 0, i32 17
  %90 = load i16, ptr %89, align 4, !tbaa !36
  %91 = or i16 %90, 2
  store i16 %91, ptr %89, align 4, !tbaa !36
  %92 = getelementptr inbounds %struct.ParticleData, ptr %87, i64 1
  %93 = add i32 %88, 1
  %94 = icmp eq i32 %93, %61
  br i1 %94, label %95, label %86, !llvm.loop !41

95:                                               ; preds = %83, %86, %54, %52, %7, %51, %47, %39
  %96 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 4
  %97 = load ptr, ptr %96, align 8, !tbaa !43
  %98 = icmp eq ptr %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %95
  %100 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %100(ptr noundef nonnull %97) #14
  store ptr null, ptr %96, align 8, !tbaa !43
  br label %101

101:                                              ; preds = %99, %95
  %102 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 28
  store i32 0, ptr %102, align 8, !tbaa !45
  %103 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 5
  %104 = load ptr, ptr %103, align 8, !tbaa !33
  tail call void @psys_free_path_cache(ptr noundef nonnull %0, ptr noundef %104) #14
  %105 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 40
  %106 = load ptr, ptr %105, align 8, !tbaa !15
  tail call void @BKE_ptcache_invalidate(ptr noundef %106) #14
  %107 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 43
  %108 = load ptr, ptr %107, align 8, !tbaa !46
  %109 = icmp eq ptr %108, null
  br i1 %109, label %112, label %110

110:                                              ; preds = %101
  %111 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %111(ptr noundef nonnull %108) #14
  store ptr null, ptr %107, align 8, !tbaa !46
  br label %112

112:                                              ; preds = %110, %101
  %113 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 45
  store i32 0, ptr %113, align 4, !tbaa !47
  %114 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 44
  store i32 0, ptr %114, align 8, !tbaa !48
  ret void
}

declare void @psys_free_particles(ptr noundef) local_unnamed_addr #3

declare void @psys_free_path_cache(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BKE_ptcache_invalidate(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @psys_calc_dmcache(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 19
  %5 = load ptr, ptr %4, align 8, !tbaa !49
  %6 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.ParticleSettings, ptr %7, i64 0, i32 130
  %9 = load i16, ptr %8, align 8, !tbaa !53
  %10 = freeze i16 %9
  %11 = trunc i16 %10 to i8
  %12 = getelementptr inbounds %struct.DerivedMesh, ptr %1, i64 0, i32 11
  %13 = load i32, ptr %12, align 8, !tbaa !54
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %318

15:                                               ; preds = %3
  %16 = getelementptr inbounds %struct.ParticleSettings, ptr %7, i64 0, i32 8
  %17 = load i16, ptr %16, align 2, !tbaa !28
  %18 = icmp eq i16 %17, 0
  %19 = icmp eq i8 %11, 0
  br i1 %18, label %20, label %30

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.DerivedMesh, ptr %1, i64 0, i32 23
  %22 = load ptr, ptr %21, align 8, !tbaa !57
  %23 = tail call i32 %22(ptr noundef nonnull %1) #14
  br i1 %19, label %24, label %46

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.Mesh, ptr %5, i64 0, i32 26
  %26 = load i32, ptr %25, align 8, !tbaa !58
  %27 = getelementptr inbounds %struct.DerivedMesh, ptr %1, i64 0, i32 50
  %28 = load ptr, ptr %27, align 8, !tbaa !60
  %29 = tail call ptr %28(ptr noundef nonnull %1, i32 noundef 7) #14
  br label %46

30:                                               ; preds = %15
  %31 = getelementptr inbounds %struct.DerivedMesh, ptr %1, i64 0, i32 25
  %32 = load ptr, ptr %31, align 8, !tbaa !61
  %33 = tail call i32 %32(ptr noundef nonnull %1) #14
  br i1 %19, label %34, label %46

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.Mesh, ptr %5, i64 0, i32 30
  %36 = load i32, ptr %35, align 8, !tbaa !62
  %37 = getelementptr inbounds %struct.DerivedMesh, ptr %1, i64 0, i32 52
  %38 = load ptr, ptr %37, align 8, !tbaa !63
  %39 = tail call ptr %38(ptr noundef nonnull %1, i32 noundef 7) #14
  %40 = getelementptr inbounds %struct.DerivedMesh, ptr %1, i64 0, i32 54
  %41 = load ptr, ptr %40, align 8, !tbaa !64
  %42 = tail call ptr %41(ptr noundef nonnull %1, i32 noundef 7) #14
  %43 = freeze ptr %42
  %44 = icmp eq ptr %43, null
  %45 = select i1 %44, ptr null, ptr %39
  br label %46

46:                                               ; preds = %34, %30, %20, %24
  %47 = phi i32 [ %23, %24 ], [ %23, %20 ], [ %33, %30 ], [ %33, %34 ]
  %48 = phi i32 [ %26, %24 ], [ %23, %20 ], [ %33, %30 ], [ %36, %34 ]
  %49 = phi ptr [ %29, %24 ], [ null, %20 ], [ null, %30 ], [ %45, %34 ]
  %50 = phi ptr [ null, %24 ], [ null, %20 ], [ null, %30 ], [ %43, %34 ]
  %51 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %52 = sext i32 %47 to i64
  %53 = shl nsw i64 %52, 4
  %54 = tail call ptr %51(i64 noundef %53, ptr noundef nonnull @.str) #14
  %55 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %56 = sext i32 %48 to i64
  %57 = shl nsw i64 %56, 3
  %58 = tail call ptr %55(i64 noundef %57, ptr noundef nonnull @.str.1) #14
  %59 = icmp sgt i32 %47, 0
  br i1 %59, label %60, label %214

60:                                               ; preds = %46
  %61 = icmp eq i8 %11, 0
  %62 = icmp eq ptr %50, null
  br i1 %61, label %69, label %63

63:                                               ; preds = %60
  %64 = zext i32 %47 to i64
  %65 = and i64 %64, 1
  %66 = icmp eq i32 %47, 1
  br i1 %66, label %200, label %67

67:                                               ; preds = %63
  %68 = and i64 %64, 4294967294
  br label %156

69:                                               ; preds = %60
  %70 = icmp eq ptr %49, null
  %71 = zext i32 %47 to i64
  br i1 %70, label %72, label %108

72:                                               ; preds = %69
  %73 = and i64 %71, 7
  %74 = icmp ult i32 %47, 8
  br i1 %74, label %186, label %75

75:                                               ; preds = %72
  %76 = and i64 %71, 4294967288
  br label %77

77:                                               ; preds = %77, %75
  %78 = phi i64 [ 0, %75 ], [ %104, %77 ]
  %79 = phi ptr [ %54, %75 ], [ %105, %77 ]
  %80 = phi i64 [ 0, %75 ], [ %106, %77 ]
  %81 = inttoptr i64 %78 to ptr
  %82 = getelementptr inbounds %struct.LinkNode, ptr %79, i64 0, i32 1
  store ptr %81, ptr %82, align 8, !tbaa !65
  %83 = or i64 %78, 1
  %84 = inttoptr i64 %83 to ptr
  %85 = getelementptr inbounds %struct.LinkNode, ptr %79, i64 1, i32 1
  store ptr %84, ptr %85, align 8, !tbaa !65
  %86 = or i64 %78, 2
  %87 = inttoptr i64 %86 to ptr
  %88 = getelementptr inbounds %struct.LinkNode, ptr %79, i64 2, i32 1
  store ptr %87, ptr %88, align 8, !tbaa !65
  %89 = or i64 %78, 3
  %90 = inttoptr i64 %89 to ptr
  %91 = getelementptr inbounds %struct.LinkNode, ptr %79, i64 3, i32 1
  store ptr %90, ptr %91, align 8, !tbaa !65
  %92 = or i64 %78, 4
  %93 = inttoptr i64 %92 to ptr
  %94 = getelementptr inbounds %struct.LinkNode, ptr %79, i64 4, i32 1
  store ptr %93, ptr %94, align 8, !tbaa !65
  %95 = or i64 %78, 5
  %96 = inttoptr i64 %95 to ptr
  %97 = getelementptr inbounds %struct.LinkNode, ptr %79, i64 5, i32 1
  store ptr %96, ptr %97, align 8, !tbaa !65
  %98 = or i64 %78, 6
  %99 = inttoptr i64 %98 to ptr
  %100 = getelementptr inbounds %struct.LinkNode, ptr %79, i64 6, i32 1
  store ptr %99, ptr %100, align 8, !tbaa !65
  %101 = or i64 %78, 7
  %102 = inttoptr i64 %101 to ptr
  %103 = getelementptr inbounds %struct.LinkNode, ptr %79, i64 7, i32 1
  store ptr %102, ptr %103, align 8, !tbaa !65
  %104 = add nuw nsw i64 %78, 8
  %105 = getelementptr inbounds %struct.LinkNode, ptr %79, i64 8
  %106 = add i64 %80, 8
  %107 = icmp eq i64 %106, %76
  br i1 %107, label %186, label %77, !llvm.loop !67

108:                                              ; preds = %69
  br i1 %62, label %109, label %130

109:                                              ; preds = %108, %126
  %110 = phi i64 [ %127, %126 ], [ 0, %108 ]
  %111 = phi ptr [ %128, %126 ], [ %54, %108 ]
  %112 = inttoptr i64 %110 to ptr
  %113 = getelementptr inbounds %struct.LinkNode, ptr %111, i64 0, i32 1
  store ptr %112, ptr %113, align 8, !tbaa !65
  %114 = getelementptr inbounds i32, ptr %49, i64 %110
  %115 = load i32, ptr %114, align 4, !tbaa !68
  %116 = icmp ne i32 %115, -1
  %117 = icmp slt i32 %115, %48
  %118 = select i1 %116, i1 %117, i1 false
  br i1 %118, label %119, label %126

119:                                              ; preds = %109
  %120 = sext i32 %115 to i64
  %121 = getelementptr inbounds ptr, ptr %58, i64 %120
  %122 = load ptr, ptr %121, align 8, !tbaa !44
  %123 = icmp eq ptr %122, null
  br i1 %123, label %125, label %124

124:                                              ; preds = %119
  store ptr %122, ptr %111, align 8, !tbaa !69
  br label %125

125:                                              ; preds = %119, %124
  store ptr %111, ptr %121, align 8, !tbaa !44
  br label %126

126:                                              ; preds = %125, %109
  %127 = add nuw nsw i64 %110, 1
  %128 = getelementptr inbounds %struct.LinkNode, ptr %111, i64 1
  %129 = icmp eq i64 %127, %71
  br i1 %129, label %214, label %109, !llvm.loop !67

130:                                              ; preds = %108, %152
  %131 = phi i64 [ %153, %152 ], [ 0, %108 ]
  %132 = phi ptr [ %154, %152 ], [ %54, %108 ]
  %133 = inttoptr i64 %131 to ptr
  %134 = getelementptr inbounds %struct.LinkNode, ptr %132, i64 0, i32 1
  store ptr %133, ptr %134, align 8, !tbaa !65
  %135 = getelementptr inbounds i32, ptr %49, i64 %131
  %136 = load i32, ptr %135, align 4, !tbaa !68
  %137 = icmp eq i32 %136, -1
  br i1 %137, label %152, label %138

138:                                              ; preds = %130
  %139 = sext i32 %136 to i64
  %140 = getelementptr inbounds i32, ptr %50, i64 %139
  %141 = load i32, ptr %140, align 4, !tbaa !68
  %142 = icmp ne i32 %141, -1
  %143 = icmp slt i32 %141, %48
  %144 = select i1 %142, i1 %143, i1 false
  br i1 %144, label %145, label %152

145:                                              ; preds = %138
  %146 = sext i32 %141 to i64
  %147 = getelementptr inbounds ptr, ptr %58, i64 %146
  %148 = load ptr, ptr %147, align 8, !tbaa !44
  %149 = icmp eq ptr %148, null
  br i1 %149, label %151, label %150

150:                                              ; preds = %145
  store ptr %148, ptr %132, align 8, !tbaa !69
  br label %151

151:                                              ; preds = %145, %150
  store ptr %132, ptr %147, align 8, !tbaa !44
  br label %152

152:                                              ; preds = %151, %130, %138
  %153 = add nuw nsw i64 %131, 1
  %154 = getelementptr inbounds %struct.LinkNode, ptr %132, i64 1
  %155 = icmp eq i64 %153, %71
  br i1 %155, label %214, label %130, !llvm.loop !67

156:                                              ; preds = %181, %67
  %157 = phi i64 [ 0, %67 ], [ %182, %181 ]
  %158 = phi ptr [ %54, %67 ], [ %183, %181 ]
  %159 = phi i64 [ 0, %67 ], [ %184, %181 ]
  %160 = inttoptr i64 %157 to ptr
  %161 = getelementptr inbounds %struct.LinkNode, ptr %158, i64 0, i32 1
  store ptr %160, ptr %161, align 8, !tbaa !65
  %162 = icmp slt i64 %157, %56
  br i1 %162, label %163, label %169

163:                                              ; preds = %156
  %164 = getelementptr inbounds ptr, ptr %58, i64 %157
  %165 = load ptr, ptr %164, align 8, !tbaa !44
  %166 = icmp eq ptr %165, null
  br i1 %166, label %168, label %167

167:                                              ; preds = %163
  store ptr %165, ptr %158, align 8, !tbaa !69
  br label %168

168:                                              ; preds = %163, %167
  store ptr %158, ptr %164, align 8, !tbaa !44
  br label %169

169:                                              ; preds = %168, %156
  %170 = or i64 %157, 1
  %171 = getelementptr inbounds %struct.LinkNode, ptr %158, i64 1
  %172 = inttoptr i64 %170 to ptr
  %173 = getelementptr inbounds %struct.LinkNode, ptr %158, i64 1, i32 1
  store ptr %172, ptr %173, align 8, !tbaa !65
  %174 = icmp slt i64 %170, %56
  br i1 %174, label %175, label %181

175:                                              ; preds = %169
  %176 = getelementptr inbounds ptr, ptr %58, i64 %170
  %177 = load ptr, ptr %176, align 8, !tbaa !44
  %178 = icmp eq ptr %177, null
  br i1 %178, label %180, label %179

179:                                              ; preds = %175
  store ptr %177, ptr %171, align 8, !tbaa !69
  br label %180

180:                                              ; preds = %179, %175
  store ptr %171, ptr %176, align 8, !tbaa !44
  br label %181

181:                                              ; preds = %180, %169
  %182 = add nuw nsw i64 %157, 2
  %183 = getelementptr inbounds %struct.LinkNode, ptr %158, i64 2
  %184 = add i64 %159, 2
  %185 = icmp eq i64 %184, %68
  br i1 %185, label %200, label %156, !llvm.loop !67

186:                                              ; preds = %77, %72
  %187 = phi i64 [ 0, %72 ], [ %104, %77 ]
  %188 = phi ptr [ %54, %72 ], [ %105, %77 ]
  %189 = icmp eq i64 %73, 0
  br i1 %189, label %214, label %190

190:                                              ; preds = %186, %190
  %191 = phi i64 [ %196, %190 ], [ %187, %186 ]
  %192 = phi ptr [ %197, %190 ], [ %188, %186 ]
  %193 = phi i64 [ %198, %190 ], [ 0, %186 ]
  %194 = inttoptr i64 %191 to ptr
  %195 = getelementptr inbounds %struct.LinkNode, ptr %192, i64 0, i32 1
  store ptr %194, ptr %195, align 8, !tbaa !65
  %196 = add nuw nsw i64 %191, 1
  %197 = getelementptr inbounds %struct.LinkNode, ptr %192, i64 1
  %198 = add i64 %193, 1
  %199 = icmp eq i64 %198, %73
  br i1 %199, label %214, label %190, !llvm.loop !70

200:                                              ; preds = %181, %63
  %201 = phi i64 [ 0, %63 ], [ %182, %181 ]
  %202 = phi ptr [ %54, %63 ], [ %183, %181 ]
  %203 = icmp eq i64 %65, 0
  br i1 %203, label %214, label %204

204:                                              ; preds = %200
  %205 = inttoptr i64 %201 to ptr
  %206 = getelementptr inbounds %struct.LinkNode, ptr %202, i64 0, i32 1
  store ptr %205, ptr %206, align 8, !tbaa !65
  %207 = icmp slt i64 %201, %56
  br i1 %207, label %208, label %214

208:                                              ; preds = %204
  %209 = getelementptr inbounds ptr, ptr %58, i64 %201
  %210 = load ptr, ptr %209, align 8, !tbaa !44
  %211 = icmp eq ptr %210, null
  br i1 %211, label %213, label %212

212:                                              ; preds = %208
  store ptr %210, ptr %202, align 8, !tbaa !69
  br label %213

213:                                              ; preds = %212, %208
  store ptr %202, ptr %209, align 8, !tbaa !44
  br label %214

214:                                              ; preds = %200, %213, %204, %152, %126, %186, %190, %46
  %215 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 26
  %216 = load i32, ptr %215, align 8, !tbaa !26
  %217 = icmp sgt i32 %216, 0
  br i1 %217, label %218, label %315

218:                                              ; preds = %214
  %219 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 3
  %220 = load ptr, ptr %219, align 8, !tbaa !35
  %221 = icmp eq i8 %11, 0
  br i1 %221, label %227, label %222

222:                                              ; preds = %218
  %223 = and i32 %216, 1
  %224 = icmp eq i32 %216, 1
  br i1 %224, label %301, label %225

225:                                              ; preds = %222
  %226 = and i32 %216, -2
  br label %273

227:                                              ; preds = %218, %268
  %228 = phi i32 [ %269, %268 ], [ %216, %218 ]
  %229 = phi ptr [ %271, %268 ], [ %220, %218 ]
  %230 = phi i32 [ %270, %268 ], [ 0, %218 ]
  %231 = getelementptr inbounds %struct.ParticleData, ptr %229, i64 0, i32 9
  %232 = load i32, ptr %231, align 8, !tbaa !71
  %233 = icmp slt i32 %232, 0
  br i1 %233, label %266, label %234

234:                                              ; preds = %227
  %235 = load ptr, ptr %6, align 8, !tbaa !5
  %236 = getelementptr inbounds %struct.ParticleSettings, ptr %235, i64 0, i32 8
  %237 = load i16, ptr %236, align 2, !tbaa !28
  %238 = icmp eq i16 %237, 0
  br i1 %238, label %251, label %239

239:                                              ; preds = %234
  %240 = getelementptr inbounds %struct.ParticleData, ptr %229, i64 0, i32 11
  %241 = icmp slt i32 %232, %48
  br i1 %241, label %242, label %246

242:                                              ; preds = %239
  %243 = zext i32 %232 to i64
  %244 = getelementptr inbounds ptr, ptr %58, i64 %243
  %245 = load ptr, ptr %244, align 8, !tbaa !44
  br label %246

246:                                              ; preds = %242, %239
  %247 = phi ptr [ %245, %242 ], [ null, %239 ]
  %248 = tail call i32 @psys_particle_dm_face_lookup(ptr noundef %0, ptr noundef %1, i32 noundef %232, ptr noundef nonnull %240, ptr noundef %247) #14
  %249 = getelementptr inbounds %struct.ParticleData, ptr %229, i64 0, i32 10
  store i32 %248, ptr %249, align 4, !tbaa !72
  %250 = load i32, ptr %215, align 8, !tbaa !26
  br label %268

251:                                              ; preds = %234
  %252 = icmp slt i32 %232, %48
  br i1 %252, label %253, label %264

253:                                              ; preds = %251
  %254 = zext i32 %232 to i64
  %255 = getelementptr inbounds ptr, ptr %58, i64 %254
  %256 = load ptr, ptr %255, align 8, !tbaa !44
  %257 = icmp eq ptr %256, null
  br i1 %257, label %264, label %258

258:                                              ; preds = %253
  %259 = getelementptr inbounds %struct.LinkNode, ptr %256, i64 0, i32 1
  %260 = load ptr, ptr %259, align 8, !tbaa !65
  %261 = ptrtoint ptr %260 to i64
  %262 = trunc i64 %261 to i32
  %263 = getelementptr inbounds %struct.ParticleData, ptr %229, i64 0, i32 10
  store i32 %262, ptr %263, align 4, !tbaa !72
  br label %268

264:                                              ; preds = %253, %251
  %265 = getelementptr inbounds %struct.ParticleData, ptr %229, i64 0, i32 10
  store i32 -1, ptr %265, align 4, !tbaa !72
  br label %268

266:                                              ; preds = %227
  %267 = getelementptr inbounds %struct.ParticleData, ptr %229, i64 0, i32 10
  store i32 -1, ptr %267, align 4, !tbaa !72
  br label %268

268:                                              ; preds = %266, %264, %258, %246
  %269 = phi i32 [ %228, %266 ], [ %228, %264 ], [ %228, %258 ], [ %250, %246 ]
  %270 = add nuw nsw i32 %230, 1
  %271 = getelementptr inbounds %struct.ParticleData, ptr %229, i64 1
  %272 = icmp slt i32 %270, %269
  br i1 %272, label %227, label %315, !llvm.loop !73

273:                                              ; preds = %297, %225
  %274 = phi ptr [ %220, %225 ], [ %298, %297 ]
  %275 = phi i32 [ 0, %225 ], [ %299, %297 ]
  %276 = getelementptr inbounds %struct.ParticleData, ptr %274, i64 0, i32 9
  %277 = load i32, ptr %276, align 8, !tbaa !71
  %278 = icmp slt i32 %277, 0
  br i1 %278, label %279, label %281

279:                                              ; preds = %273
  %280 = getelementptr inbounds %struct.ParticleData, ptr %274, i64 0, i32 10
  store i32 -1, ptr %280, align 4, !tbaa !72
  br label %286

281:                                              ; preds = %273
  %282 = icmp slt i32 %277, %48
  %283 = getelementptr inbounds %struct.ParticleData, ptr %274, i64 0, i32 10
  br i1 %282, label %284, label %285

284:                                              ; preds = %281
  store i32 -2, ptr %283, align 4, !tbaa !72
  br label %286

285:                                              ; preds = %281
  store i32 -1, ptr %283, align 4, !tbaa !72
  br label %286

286:                                              ; preds = %285, %284, %279
  %287 = getelementptr inbounds %struct.ParticleData, ptr %274, i64 1, i32 9
  %288 = load i32, ptr %287, align 8, !tbaa !71
  %289 = icmp slt i32 %288, 0
  br i1 %289, label %295, label %290

290:                                              ; preds = %286
  %291 = icmp slt i32 %288, %48
  %292 = getelementptr inbounds %struct.ParticleData, ptr %274, i64 1, i32 10
  br i1 %291, label %294, label %293

293:                                              ; preds = %290
  store i32 -1, ptr %292, align 4, !tbaa !72
  br label %297

294:                                              ; preds = %290
  store i32 -2, ptr %292, align 4, !tbaa !72
  br label %297

295:                                              ; preds = %286
  %296 = getelementptr inbounds %struct.ParticleData, ptr %274, i64 1, i32 10
  store i32 -1, ptr %296, align 4, !tbaa !72
  br label %297

297:                                              ; preds = %295, %294, %293
  %298 = getelementptr inbounds %struct.ParticleData, ptr %274, i64 2
  %299 = add i32 %275, 2
  %300 = icmp eq i32 %299, %226
  br i1 %300, label %301, label %273, !llvm.loop !73

301:                                              ; preds = %297, %222
  %302 = phi ptr [ %220, %222 ], [ %298, %297 ]
  %303 = icmp eq i32 %223, 0
  br i1 %303, label %315, label %304

304:                                              ; preds = %301
  %305 = getelementptr inbounds %struct.ParticleData, ptr %302, i64 0, i32 9
  %306 = load i32, ptr %305, align 8, !tbaa !71
  %307 = icmp slt i32 %306, 0
  br i1 %307, label %313, label %308

308:                                              ; preds = %304
  %309 = icmp slt i32 %306, %48
  %310 = getelementptr inbounds %struct.ParticleData, ptr %302, i64 0, i32 10
  br i1 %309, label %312, label %311

311:                                              ; preds = %308
  store i32 -1, ptr %310, align 4, !tbaa !72
  br label %315

312:                                              ; preds = %308
  store i32 -2, ptr %310, align 4, !tbaa !72
  br label %315

313:                                              ; preds = %304
  %314 = getelementptr inbounds %struct.ParticleData, ptr %302, i64 0, i32 10
  store i32 -1, ptr %314, align 4, !tbaa !72
  br label %315

315:                                              ; preds = %301, %313, %312, %311, %268, %214
  %316 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %316(ptr noundef %58) #14
  %317 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %317(ptr noundef %54) #14
  br label %353

318:                                              ; preds = %3
  %319 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 26
  %320 = load i32, ptr %319, align 8, !tbaa !26
  %321 = icmp sgt i32 %320, 0
  br i1 %321, label %322, label %353

322:                                              ; preds = %318
  %323 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 3
  %324 = load ptr, ptr %323, align 8, !tbaa !35
  %325 = and i32 %320, 7
  %326 = icmp ult i32 %320, 8
  br i1 %326, label %343, label %327

327:                                              ; preds = %322
  %328 = and i32 %320, -8
  br label %329

329:                                              ; preds = %329, %327
  %330 = phi ptr [ %324, %327 ], [ %340, %329 ]
  %331 = phi i32 [ 0, %327 ], [ %341, %329 ]
  %332 = getelementptr inbounds %struct.ParticleData, ptr %330, i64 0, i32 10
  store i32 -1, ptr %332, align 4, !tbaa !72
  %333 = getelementptr inbounds %struct.ParticleData, ptr %330, i64 1, i32 10
  store i32 -1, ptr %333, align 4, !tbaa !72
  %334 = getelementptr inbounds %struct.ParticleData, ptr %330, i64 2, i32 10
  store i32 -1, ptr %334, align 4, !tbaa !72
  %335 = getelementptr inbounds %struct.ParticleData, ptr %330, i64 3, i32 10
  store i32 -1, ptr %335, align 4, !tbaa !72
  %336 = getelementptr inbounds %struct.ParticleData, ptr %330, i64 4, i32 10
  store i32 -1, ptr %336, align 4, !tbaa !72
  %337 = getelementptr inbounds %struct.ParticleData, ptr %330, i64 5, i32 10
  store i32 -1, ptr %337, align 4, !tbaa !72
  %338 = getelementptr inbounds %struct.ParticleData, ptr %330, i64 6, i32 10
  store i32 -1, ptr %338, align 4, !tbaa !72
  %339 = getelementptr inbounds %struct.ParticleData, ptr %330, i64 7, i32 10
  store i32 -1, ptr %339, align 4, !tbaa !72
  %340 = getelementptr inbounds %struct.ParticleData, ptr %330, i64 8
  %341 = add i32 %331, 8
  %342 = icmp eq i32 %341, %328
  br i1 %342, label %343, label %329, !llvm.loop !74

343:                                              ; preds = %329, %322
  %344 = phi ptr [ %324, %322 ], [ %340, %329 ]
  %345 = icmp eq i32 %325, 0
  br i1 %345, label %353, label %346

346:                                              ; preds = %343, %346
  %347 = phi ptr [ %350, %346 ], [ %344, %343 ]
  %348 = phi i32 [ %351, %346 ], [ 0, %343 ]
  %349 = getelementptr inbounds %struct.ParticleData, ptr %347, i64 0, i32 10
  store i32 -1, ptr %349, align 4, !tbaa !72
  %350 = getelementptr inbounds %struct.ParticleData, ptr %347, i64 1
  %351 = add i32 %348, 1
  %352 = icmp eq i32 %351, %325
  br i1 %352, label %353, label %346, !llvm.loop !75

353:                                              ; preds = %343, %346, %318, %315
  ret void
}

declare i32 @psys_particle_dm_face_lookup(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @psys_threads_create(ptr nocapture noundef readonly %0) local_unnamed_addr #2 {
  %2 = load ptr, ptr %0, align 8, !tbaa !76
  %3 = tail call i32 @BKE_scene_num_threads(ptr noundef %2) #14
  %4 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %5 = sext i32 %3 to i64
  %6 = shl nsw i64 %5, 5
  %7 = tail call ptr %4(i64 noundef %6, ptr noundef nonnull @.str.2) #14
  %8 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %9 = tail call ptr %8(i64 noundef 248, ptr noundef nonnull @.str.3) #14
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %9, ptr noundef nonnull align 8 dereferenceable(48) %0, i64 48, i1 false), !tbaa.struct !78
  %10 = getelementptr inbounds %struct.ParticleSimulationData, ptr %9, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !80
  %12 = getelementptr inbounds %struct.ParticleSystemModifierData, ptr %11, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !82
  %14 = getelementptr inbounds %struct.ParticleThreadContext, ptr %9, i64 0, i32 1
  store ptr %13, ptr %14, align 8, !tbaa !85
  %15 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !86
  %17 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !87
  %19 = getelementptr inbounds %struct.ParticleSystem, ptr %18, i64 0, i32 2
  %20 = load ptr, ptr %19, align 8, !tbaa !5
  %21 = getelementptr inbounds %struct.ParticleSettings, ptr %20, i64 0, i32 31
  %22 = load i16, ptr %21, align 4, !tbaa !88
  %23 = tail call ptr @give_current_material(ptr noundef %16, i16 noundef signext %22) #14
  %24 = getelementptr inbounds %struct.ParticleThreadContext, ptr %9, i64 0, i32 2
  store ptr %23, ptr %24, align 8, !tbaa !89
  tail call void @llvm.memset.p0.i64(ptr align 8 %7, i8 0, i64 %6, i1 false)
  %25 = icmp sgt i32 %3, 0
  br i1 %25, label %26, label %55

26:                                               ; preds = %1
  %27 = zext i32 %3 to i64
  %28 = and i64 %27, 1
  %29 = icmp eq i32 %3, 1
  br i1 %29, label %47, label %30

30:                                               ; preds = %26
  %31 = and i64 %27, 4294967294
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %44, %32 ]
  %34 = phi i64 [ 0, %30 ], [ %45, %32 ]
  %35 = getelementptr inbounds %struct.ParticleThread, ptr %7, i64 %33
  store ptr %9, ptr %35, align 8, !tbaa !90
  %36 = getelementptr inbounds %struct.ParticleThread, ptr %7, i64 %33, i32 3
  %37 = trunc i64 %33 to i32
  store i32 %37, ptr %36, align 8, !tbaa !92
  %38 = getelementptr inbounds %struct.ParticleThread, ptr %7, i64 %33, i32 4
  store i32 %3, ptr %38, align 4, !tbaa !93
  %39 = or i64 %33, 1
  %40 = getelementptr inbounds %struct.ParticleThread, ptr %7, i64 %39
  store ptr %9, ptr %40, align 8, !tbaa !90
  %41 = getelementptr inbounds %struct.ParticleThread, ptr %7, i64 %39, i32 3
  %42 = trunc i64 %39 to i32
  store i32 %42, ptr %41, align 8, !tbaa !92
  %43 = getelementptr inbounds %struct.ParticleThread, ptr %7, i64 %39, i32 4
  store i32 %3, ptr %43, align 4, !tbaa !93
  %44 = add nuw nsw i64 %33, 2
  %45 = add i64 %34, 2
  %46 = icmp eq i64 %45, %31
  br i1 %46, label %47, label %32, !llvm.loop !94

47:                                               ; preds = %32, %26
  %48 = phi i64 [ 0, %26 ], [ %44, %32 ]
  %49 = icmp eq i64 %28, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.ParticleThread, ptr %7, i64 %48
  store ptr %9, ptr %51, align 8, !tbaa !90
  %52 = getelementptr inbounds %struct.ParticleThread, ptr %7, i64 %48, i32 3
  %53 = trunc i64 %48 to i32
  store i32 %53, ptr %52, align 8, !tbaa !92
  %54 = getelementptr inbounds %struct.ParticleThread, ptr %7, i64 %48, i32 4
  store i32 %3, ptr %54, align 4, !tbaa !93
  br label %55

55:                                               ; preds = %50, %47, %1
  ret ptr %7
}

declare i32 @BKE_scene_num_threads(ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #4

declare ptr @give_current_material(ptr noundef, i16 noundef signext) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @psys_threads_free(ptr noundef %0) local_unnamed_addr #2 {
  %2 = load ptr, ptr %0, align 8, !tbaa !90
  %3 = getelementptr inbounds %struct.ParticleThread, ptr %0, i64 0, i32 4
  %4 = load i32, ptr %3, align 4, !tbaa !93
  %5 = getelementptr inbounds %struct.ParticleThreadContext, ptr %2, i64 0, i32 24
  %6 = load ptr, ptr %5, align 8, !tbaa !95
  %7 = icmp eq ptr %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %9(ptr noundef nonnull %6) #14
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds %struct.ParticleThreadContext, ptr %2, i64 0, i32 25
  %12 = load ptr, ptr %11, align 8, !tbaa !96
  %13 = icmp eq ptr %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %15(ptr noundef nonnull %12) #14
  br label %16

16:                                               ; preds = %14, %10
  %17 = getelementptr inbounds %struct.ParticleThreadContext, ptr %2, i64 0, i32 26
  %18 = load ptr, ptr %17, align 8, !tbaa !97
  %19 = icmp eq ptr %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %21(ptr noundef nonnull %18) #14
  br label %22

22:                                               ; preds = %20, %16
  %23 = getelementptr inbounds %struct.ParticleThreadContext, ptr %2, i64 0, i32 27
  %24 = load ptr, ptr %23, align 8, !tbaa !98
  %25 = icmp eq ptr %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %27(ptr noundef nonnull %24) #14
  br label %28

28:                                               ; preds = %26, %22
  %29 = getelementptr inbounds %struct.ParticleThreadContext, ptr %2, i64 0, i32 28
  %30 = load ptr, ptr %29, align 8, !tbaa !99
  %31 = icmp eq ptr %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %33(ptr noundef nonnull %30) #14
  br label %34

34:                                               ; preds = %32, %28
  %35 = getelementptr inbounds %struct.ParticleThreadContext, ptr %2, i64 0, i32 29
  %36 = load ptr, ptr %35, align 8, !tbaa !100
  %37 = icmp eq ptr %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %39(ptr noundef nonnull %36) #14
  br label %40

40:                                               ; preds = %38, %34
  %41 = getelementptr inbounds %struct.ParticleSimulationData, ptr %2, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !101
  %43 = getelementptr inbounds %struct.ParticleSystem, ptr %42, i64 0, i32 15
  %44 = load ptr, ptr %43, align 8, !tbaa !102
  %45 = icmp eq ptr %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  tail call void @end_latt_deform(ptr noundef nonnull %44) #14
  %47 = load ptr, ptr %41, align 8, !tbaa !101
  %48 = getelementptr inbounds %struct.ParticleSystem, ptr %47, i64 0, i32 15
  store ptr null, ptr %48, align 8, !tbaa !102
  br label %49

49:                                               ; preds = %46, %40
  %50 = getelementptr inbounds %struct.ParticleThreadContext, ptr %2, i64 0, i32 6
  %51 = load ptr, ptr %50, align 8, !tbaa !103
  %52 = icmp eq ptr %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  %54 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %54(ptr noundef nonnull %51) #14
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %struct.ParticleThreadContext, ptr %2, i64 0, i32 7
  %57 = load ptr, ptr %56, align 8, !tbaa !104
  %58 = icmp eq ptr %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %60(ptr noundef nonnull %57) #14
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %struct.ParticleThreadContext, ptr %2, i64 0, i32 8
  %63 = load ptr, ptr %62, align 8, !tbaa !105
  %64 = icmp eq ptr %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  %66 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %66(ptr noundef nonnull %63) #14
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %struct.ParticleThreadContext, ptr %2, i64 0, i32 10
  %69 = load ptr, ptr %68, align 8, !tbaa !106
  %70 = icmp eq ptr %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %72(ptr noundef nonnull %69) #14
  br label %73

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %struct.ParticleThreadContext, ptr %2, i64 0, i32 11
  %75 = load ptr, ptr %74, align 8, !tbaa !107
  %76 = icmp eq ptr %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %73
  %78 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %78(ptr noundef nonnull %75) #14
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %struct.ParticleThreadContext, ptr %2, i64 0, i32 4
  %81 = load ptr, ptr %80, align 8, !tbaa !108
  %82 = icmp eq ptr %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %79
  %84 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %84(ptr noundef nonnull %81) #14
  br label %85

85:                                               ; preds = %83, %79
  %86 = getelementptr inbounds %struct.ParticleThreadContext, ptr %2, i64 0, i32 3
  %87 = load ptr, ptr %86, align 8, !tbaa !109
  tail call void @BLI_kdtree_free(ptr noundef %87) #14
  %88 = icmp sgt i32 %4, 0
  br i1 %88, label %89, label %105

89:                                               ; preds = %85
  %90 = zext i32 %4 to i64
  br label %91

91:                                               ; preds = %89, %102
  %92 = phi i64 [ 0, %89 ], [ %103, %102 ]
  %93 = getelementptr inbounds %struct.ParticleThread, ptr %0, i64 %92, i32 1
  %94 = load ptr, ptr %93, align 8, !tbaa !110
  %95 = icmp eq ptr %94, null
  br i1 %95, label %97, label %96

96:                                               ; preds = %91
  tail call void @BLI_rng_free(ptr noundef nonnull %94) #14
  br label %97

97:                                               ; preds = %96, %91
  %98 = getelementptr inbounds %struct.ParticleThread, ptr %0, i64 %92, i32 2
  %99 = load ptr, ptr %98, align 8, !tbaa !111
  %100 = icmp eq ptr %99, null
  br i1 %100, label %102, label %101

101:                                              ; preds = %97
  tail call void @BLI_rng_free(ptr noundef nonnull %99) #14
  br label %102

102:                                              ; preds = %97, %101
  %103 = add nuw nsw i64 %92, 1
  %104 = icmp eq i64 %103, %90
  br i1 %104, label %105, label %91, !llvm.loop !112

105:                                              ; preds = %102, %85
  %106 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %106(ptr noundef %2) #14
  %107 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %107(ptr noundef nonnull %0) #14
  ret void
}

declare void @end_latt_deform(ptr noundef) local_unnamed_addr #3

declare void @BLI_kdtree_free(ptr noundef) local_unnamed_addr #3

declare void @BLI_rng_free(ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @initialize_particle(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !87
  %5 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !35
  %9 = ptrtoint ptr %1 to i64
  %10 = ptrtoint ptr %8 to i64
  %11 = sub i64 %9, %10
  %12 = sdiv exact i64 %11, 200
  %13 = sitofp i64 %12 to float
  %14 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 26
  %15 = load i32, ptr %14, align 8, !tbaa !26
  %16 = sitofp i32 %15 to float
  %17 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 17
  %18 = load i16, ptr %17, align 4, !tbaa !36
  %19 = and i16 %18, -2
  store i16 %19, ptr %17, align 4, !tbaa !36
  %20 = getelementptr inbounds %struct.ParticleSettings, ptr %6, i64 0, i32 53
  %21 = load float, ptr %20, align 4, !tbaa !113
  %22 = getelementptr inbounds %struct.ParticleSettings, ptr %6, i64 0, i32 54
  %23 = load float, ptr %22, align 8, !tbaa !114
  %24 = fsub fast float %23, %21
  %25 = fmul fast float %24, %13
  %26 = fdiv fast float %25, %16
  %27 = fadd fast float %26, %21
  %28 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 6
  store float %27, ptr %28, align 4, !tbaa !115
  %29 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 16
  store i32 0, ptr %29, align 8, !tbaa !116
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @psys_get_birth_coordinates(ptr noundef %0, ptr noundef %1, ptr noundef %2, float noundef nofpclass(nan inf) %3, float noundef nofpclass(nan inf) %4) local_unnamed_addr #2 {
  %6 = alloca %struct.ParticleTexture, align 4
  %7 = alloca [3 x float], align 8
  %8 = alloca [3 x float], align 8
  %9 = alloca [4 x float], align 16
  %10 = alloca [4 x float], align 16
  %11 = alloca [3 x float], align 8
  %12 = alloca [3 x float], align 8
  %13 = alloca [4 x float], align 16
  %14 = alloca [3 x float], align 4
  %15 = alloca [3 x float], align 8
  %16 = alloca [3 x float], align 8
  %17 = alloca [3 x float], align 8
  %18 = alloca [4 x float], align 16
  %19 = alloca [3 x float], align 8
  %20 = alloca [4 x float], align 16
  %21 = alloca [3 x [3 x float]], align 16
  %22 = alloca [4 x float], align 16
  %23 = alloca [4 x float], align 16
  %24 = alloca [3 x float], align 8
  %25 = alloca [3 x [3 x float]], align 16
  %26 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !86
  %28 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !87
  %30 = getelementptr inbounds %struct.ParticleSystem, ptr %29, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 60, ptr nonnull %6) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #14
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %7, i8 0, i64 12, i1 false)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %8) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %10) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %11) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %12) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %14) #14
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(12) %14, ptr noundef nonnull align 4 dereferenceable(12) @__const.psys_get_birth_coordinates.x_vec, i64 12, i1 false)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %15) #14
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %15, ptr noundef nonnull align 4 dereferenceable(12) @__const.psys_get_birth_coordinates.utan, i64 12, i1 false)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %16) #14
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %16, ptr noundef nonnull align 4 dereferenceable(12) @__const.psys_get_birth_coordinates.vtan, i64 12, i1 false)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %17) #14
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %17, i8 0, i64 12, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %18) #14
  %32 = getelementptr inbounds %struct.ParticleSettings, ptr %31, i64 0, i32 11
  %33 = load i16, ptr %32, align 8, !tbaa !22
  %34 = icmp eq i16 %33, 3
  br i1 %34, label %35, label %47

35:                                               ; preds = %5
  %36 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 4
  %37 = load ptr, ptr %36, align 8, !tbaa !117
  %38 = icmp eq ptr %37, null
  br i1 %38, label %47, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.ParticleSystem, ptr %29, i64 0, i32 3
  %41 = load ptr, ptr %40, align 8, !tbaa !35
  %42 = ptrtoint ptr %1 to i64
  %43 = ptrtoint ptr %41 to i64
  %44 = sub i64 %42, %43
  %45 = sdiv exact i64 %44, 200
  %46 = trunc i64 %45 to i32
  br label %84

47:                                               ; preds = %5, %35
  %48 = getelementptr inbounds %struct.ParticleSettings, ptr %31, i64 0, i32 73
  %49 = load float, ptr %48, align 4, !tbaa !118
  %50 = fcmp fast une float %49, 0.000000e+00
  br i1 %50, label %51, label %59

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.ParticleSystem, ptr %29, i64 0, i32 3
  %53 = load ptr, ptr %52, align 8, !tbaa !35
  %54 = ptrtoint ptr %1 to i64
  %55 = ptrtoint ptr %53 to i64
  %56 = sub i64 %54, %55
  %57 = sdiv exact i64 %56, 200
  %58 = trunc i64 %57 to i32
  br label %70

59:                                               ; preds = %47
  %60 = getelementptr inbounds %struct.ParticleSettings, ptr %31, i64 0, i32 12
  %61 = load i16, ptr %60, align 2, !tbaa !119
  %62 = icmp eq i16 %61, 9
  %63 = getelementptr inbounds %struct.ParticleSystem, ptr %29, i64 0, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !35
  %65 = ptrtoint ptr %1 to i64
  %66 = ptrtoint ptr %64 to i64
  %67 = sub i64 %65, %66
  %68 = sdiv exact i64 %67, 200
  %69 = trunc i64 %68 to i32
  br i1 %62, label %70, label %84

70:                                               ; preds = %51, %59
  %71 = phi i32 [ %58, %51 ], [ %69, %59 ]
  %72 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 3
  %73 = load ptr, ptr %72, align 8, !tbaa !120
  %74 = getelementptr inbounds %struct.ParticleSettings, ptr %31, i64 0, i32 8
  %75 = load i16, ptr %74, align 2, !tbaa !28
  %76 = sext i16 %75 to i32
  %77 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 9
  %78 = load i32, ptr %77, align 8, !tbaa !71
  %79 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 10
  %80 = load i32, ptr %79, align 4, !tbaa !72
  %81 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 11
  %82 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 12
  %83 = load float, ptr %82, align 8, !tbaa !121
  call void @psys_particle_on_emitter(ptr noundef %73, i32 noundef %76, i32 noundef %78, i32 noundef %80, ptr noundef nonnull %81, float noundef nofpclass(nan inf) %83, ptr noundef nonnull %8, ptr noundef nonnull %7, ptr noundef nonnull %15, ptr noundef nonnull %16, ptr noundef null, ptr noundef null) #14
  br label %99

84:                                               ; preds = %39, %59
  %85 = phi i32 [ %46, %39 ], [ %69, %59 ]
  %86 = phi i1 [ true, %39 ], [ false, %59 ]
  %87 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 3
  %88 = load ptr, ptr %87, align 8, !tbaa !120
  %89 = getelementptr inbounds %struct.ParticleSettings, ptr %31, i64 0, i32 8
  %90 = load i16, ptr %89, align 2, !tbaa !28
  %91 = sext i16 %90 to i32
  %92 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 9
  %93 = load i32, ptr %92, align 8, !tbaa !71
  %94 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 10
  %95 = load i32, ptr %94, align 4, !tbaa !72
  %96 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 11
  %97 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 12
  %98 = load float, ptr %97, align 8, !tbaa !121
  call void @psys_particle_on_emitter(ptr noundef %88, i32 noundef %91, i32 noundef %93, i32 noundef %95, ptr noundef nonnull %96, float noundef nofpclass(nan inf) %98, ptr noundef nonnull %8, ptr noundef nonnull %7, ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef null) #14
  br label %99

99:                                               ; preds = %84, %70
  %100 = phi i32 [ %85, %84 ], [ %71, %70 ]
  %101 = phi i1 [ false, %84 ], [ true, %70 ]
  %102 = phi i1 [ %86, %84 ], [ false, %70 ]
  call void @psys_get_texture(ptr noundef nonnull %0, ptr noundef nonnull %1, ptr noundef nonnull %6, i32 noundef 32, float noundef nofpclass(nan inf) %4) #14
  %103 = getelementptr inbounds %struct.Object, ptr %27, i64 0, i32 47
  call void @mul_m4_v3(ptr noundef nonnull %103, ptr noundef nonnull %8) #14
  call void @mul_mat3_m4_v3(ptr noundef nonnull %103, ptr noundef nonnull %7) #14
  %104 = getelementptr inbounds float, ptr %7, i64 1
  %105 = load <2 x float>, ptr %7, align 8, !tbaa !79
  %106 = fmul fast <2 x float> %105, %105
  %107 = shufflevector <2 x float> %106, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %108 = fadd fast <2 x float> %107, %106
  %109 = extractelement <2 x float> %108, i64 0
  %110 = getelementptr inbounds float, ptr %7, i64 2
  %111 = load float, ptr %110, align 8, !tbaa !79
  %112 = fmul fast float %111, %111
  %113 = fadd fast float %109, %112
  %114 = fcmp fast ogt float %113, 0x38AA95A5C0000000
  br i1 %114, label %115, label %122

115:                                              ; preds = %99
  %116 = call fast float @llvm.sqrt.f32(float %113)
  %117 = fdiv fast float 1.000000e+00, %116
  %118 = insertelement <2 x float> poison, float %117, i64 0
  %119 = shufflevector <2 x float> %118, <2 x float> poison, <2 x i32> zeroinitializer
  %120 = fmul fast <2 x float> %119, %105
  %121 = fmul fast float %117, %111
  br label %122

122:                                              ; preds = %99, %115
  %123 = phi float [ %121, %115 ], [ 0.000000e+00, %99 ]
  %124 = phi <2 x float> [ %120, %115 ], [ zeroinitializer, %99 ]
  store <2 x float> %124, ptr %7, align 8
  store float %123, ptr %110, align 8
  br i1 %101, label %125, label %183

125:                                              ; preds = %122
  %126 = getelementptr inbounds %struct.ParticleSettings, ptr %31, i64 0, i32 74
  %127 = load float, ptr %126, align 8, !tbaa !122
  %128 = fmul fast float %127, 0x400921FB60000000
  %129 = call fast float @llvm.cos.f32(float %128)
  %130 = fneg fast float %129
  %131 = getelementptr inbounds float, ptr %16, i64 1
  %132 = getelementptr inbounds float, ptr %16, i64 2
  %133 = load float, ptr %132, align 8, !tbaa !79
  %134 = fmul fast float %133, %130
  %135 = call fast float @llvm.sin.f32(float %128)
  %136 = getelementptr inbounds float, ptr %15, i64 1
  %137 = load <2 x float>, ptr %16, align 8, !tbaa !79
  %138 = insertelement <2 x float> poison, float %130, i64 0
  %139 = shufflevector <2 x float> %138, <2 x float> poison, <2 x i32> zeroinitializer
  %140 = fmul fast <2 x float> %137, %139
  %141 = load <2 x float>, ptr %15, align 8, !tbaa !79
  %142 = insertelement <2 x float> poison, float %135, i64 0
  %143 = shufflevector <2 x float> %142, <2 x float> poison, <2 x i32> zeroinitializer
  %144 = fmul fast <2 x float> %141, %143
  %145 = fsub fast <2 x float> %140, %144
  store <2 x float> %145, ptr %16, align 8, !tbaa !79
  %146 = getelementptr inbounds float, ptr %15, i64 2
  %147 = load float, ptr %146, align 8, !tbaa !79
  %148 = fmul fast float %147, %135
  %149 = fsub fast float %134, %148
  store float %149, ptr %132, align 8, !tbaa !79
  call void @mul_mat3_m4_v3(ptr noundef nonnull %103, ptr noundef nonnull %16) #14
  %150 = load float, ptr %7, align 8, !tbaa !79
  %151 = load float, ptr %104, align 4, !tbaa !79
  %152 = load float, ptr %110, align 8, !tbaa !79
  %153 = load float, ptr %16, align 8, !tbaa !79
  %154 = fmul fast float %153, %150
  %155 = load float, ptr %131, align 4, !tbaa !79
  %156 = fmul fast float %155, %151
  %157 = fadd fast float %156, %154
  %158 = load float, ptr %132, align 8, !tbaa !79
  %159 = fmul fast float %158, %152
  %160 = fadd fast float %157, %159
  %161 = fmul fast float %160, %150
  store float %161, ptr %15, align 8, !tbaa !79
  %162 = fmul fast float %160, %151
  store float %162, ptr %136, align 4, !tbaa !79
  %163 = fmul fast float %160, %152
  store float %163, ptr %146, align 8, !tbaa !79
  %164 = fsub fast float %153, %161
  %165 = fsub fast float %155, %162
  %166 = fsub fast float %158, %163
  %167 = fmul fast float %164, %164
  %168 = fmul fast float %165, %165
  %169 = fadd fast float %168, %167
  %170 = fmul fast float %166, %166
  %171 = fadd fast float %169, %170
  %172 = fcmp fast ogt float %171, 0x38AA95A5C0000000
  br i1 %172, label %173, label %179

173:                                              ; preds = %125
  %174 = call fast float @llvm.sqrt.f32(float %171)
  %175 = fdiv fast float 1.000000e+00, %174
  %176 = fmul fast float %175, %164
  %177 = fmul fast float %175, %165
  %178 = fmul fast float %175, %166
  br label %179

179:                                              ; preds = %125, %173
  %180 = phi float [ %176, %173 ], [ 0.000000e+00, %125 ]
  %181 = phi float [ %177, %173 ], [ 0.000000e+00, %125 ]
  %182 = phi float [ %178, %173 ], [ 0.000000e+00, %125 ]
  store float %180, ptr %16, align 8
  store float %181, ptr %131, align 4
  store float %182, ptr %132, align 8
  br label %183

183:                                              ; preds = %179, %122
  %184 = getelementptr inbounds %struct.ParticleSettings, ptr %31, i64 0, i32 71
  %185 = load float, ptr %184, align 4, !tbaa !123
  %186 = fcmp fast une float %185, 0.000000e+00
  br i1 %186, label %194, label %187

187:                                              ; preds = %183
  %188 = load i16, ptr %32, align 8, !tbaa !22
  %189 = icmp eq i16 %188, 3
  br i1 %189, label %190, label %250

190:                                              ; preds = %187
  %191 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 4
  %192 = load ptr, ptr %191, align 8, !tbaa !117
  %193 = icmp eq ptr %192, null
  br i1 %193, label %250, label %194

194:                                              ; preds = %190, %183
  %195 = add nsw i32 %100, 10
  %196 = getelementptr i8, ptr %29, i64 308
  %197 = load i32, ptr %196, align 4, !tbaa !124
  %198 = srem i32 %197, 1024
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %199
  %201 = load i32, ptr %200, align 4, !tbaa !68
  %202 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %199
  %203 = load i32, ptr %202, align 4, !tbaa !68
  %204 = mul i32 %203, %195
  %205 = add i32 %204, %201
  %206 = and i32 %205, 1023
  %207 = zext i32 %206 to i64
  %208 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %207
  %209 = load float, ptr %208, align 4, !tbaa !79
  %210 = add nsw i32 %100, 11
  %211 = mul i32 %203, %210
  %212 = add i32 %211, %201
  %213 = and i32 %212, 1023
  %214 = zext i32 %213 to i64
  %215 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %214
  %216 = load float, ptr %215, align 4, !tbaa !79
  %217 = insertelement <2 x float> poison, float %209, i64 0
  %218 = insertelement <2 x float> %217, float %216, i64 1
  %219 = fmul fast <2 x float> %218, <float 2.000000e+00, float 2.000000e+00>
  %220 = fadd fast <2 x float> %219, <float -1.000000e+00, float -1.000000e+00>
  store <2 x float> %220, ptr %11, align 8, !tbaa !79
  %221 = add nsw i32 %100, 12
  %222 = mul i32 %203, %221
  %223 = add i32 %222, %201
  %224 = and i32 %223, 1023
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %225
  %227 = load float, ptr %226, align 4, !tbaa !79
  %228 = fmul fast float %227, 2.000000e+00
  %229 = fadd fast float %228, -1.000000e+00
  %230 = getelementptr inbounds [3 x float], ptr %11, i64 0, i64 2
  store float %229, ptr %230, align 8, !tbaa !79
  call void @mul_mat3_m4_v3(ptr noundef nonnull %103, ptr noundef nonnull %11) #14
  %231 = load <2 x float>, ptr %11, align 8, !tbaa !79
  %232 = fmul fast <2 x float> %231, %231
  %233 = shufflevector <2 x float> %232, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %234 = fadd fast <2 x float> %233, %232
  %235 = extractelement <2 x float> %234, i64 0
  %236 = load float, ptr %230, align 8, !tbaa !79
  %237 = fmul fast float %236, %236
  %238 = fadd fast float %235, %237
  %239 = fcmp fast ogt float %238, 0x38AA95A5C0000000
  br i1 %239, label %240, label %247

240:                                              ; preds = %194
  %241 = call fast float @llvm.sqrt.f32(float %238)
  %242 = fdiv fast float 1.000000e+00, %241
  %243 = insertelement <2 x float> poison, float %242, i64 0
  %244 = shufflevector <2 x float> %243, <2 x float> poison, <2 x i32> zeroinitializer
  %245 = fmul fast <2 x float> %244, %231
  %246 = fmul fast float %242, %236
  br label %247

247:                                              ; preds = %194, %240
  %248 = phi float [ %246, %240 ], [ 0.000000e+00, %194 ]
  %249 = phi <2 x float> [ %245, %240 ], [ zeroinitializer, %194 ]
  store <2 x float> %249, ptr %11, align 8
  store float %248, ptr %230, align 8
  br label %250

250:                                              ; preds = %247, %190, %187
  %251 = getelementptr inbounds %struct.ParticleSettings, ptr %31, i64 0, i32 13
  %252 = load i16, ptr %251, align 4, !tbaa !125
  %253 = icmp eq i16 %252, 2
  br i1 %253, label %254, label %310

254:                                              ; preds = %250
  %255 = add nsw i32 %100, 13
  %256 = getelementptr i8, ptr %29, i64 308
  %257 = load i32, ptr %256, align 4, !tbaa !124
  %258 = srem i32 %257, 1024
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %259
  %261 = load i32, ptr %260, align 4, !tbaa !68
  %262 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %259
  %263 = load i32, ptr %262, align 4, !tbaa !68
  %264 = mul i32 %263, %255
  %265 = add i32 %264, %261
  %266 = and i32 %265, 1023
  %267 = zext i32 %266 to i64
  %268 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %267
  %269 = load float, ptr %268, align 4, !tbaa !79
  %270 = add nsw i32 %100, 14
  %271 = mul i32 %263, %270
  %272 = add i32 %271, %261
  %273 = and i32 %272, 1023
  %274 = zext i32 %273 to i64
  %275 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %274
  %276 = load float, ptr %275, align 4, !tbaa !79
  %277 = insertelement <2 x float> poison, float %269, i64 0
  %278 = insertelement <2 x float> %277, float %276, i64 1
  %279 = fmul fast <2 x float> %278, <float 2.000000e+00, float 2.000000e+00>
  %280 = fadd fast <2 x float> %279, <float -1.000000e+00, float -1.000000e+00>
  store <2 x float> %280, ptr %12, align 8, !tbaa !79
  %281 = add nsw i32 %100, 15
  %282 = mul i32 %263, %281
  %283 = add i32 %282, %261
  %284 = and i32 %283, 1023
  %285 = zext i32 %284 to i64
  %286 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %285
  %287 = load float, ptr %286, align 4, !tbaa !79
  %288 = fmul fast float %287, 2.000000e+00
  %289 = fadd fast float %288, -1.000000e+00
  %290 = getelementptr inbounds [3 x float], ptr %12, i64 0, i64 2
  store float %289, ptr %290, align 8, !tbaa !79
  call void @mul_mat3_m4_v3(ptr noundef nonnull %103, ptr noundef nonnull %12) #14
  %291 = load <2 x float>, ptr %12, align 8, !tbaa !79
  %292 = fmul fast <2 x float> %291, %291
  %293 = shufflevector <2 x float> %292, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %294 = fadd fast <2 x float> %293, %292
  %295 = extractelement <2 x float> %294, i64 0
  %296 = load float, ptr %290, align 8, !tbaa !79
  %297 = fmul fast float %296, %296
  %298 = fadd fast float %295, %297
  %299 = fcmp fast ogt float %298, 0x38AA95A5C0000000
  br i1 %299, label %300, label %307

300:                                              ; preds = %254
  %301 = call fast float @llvm.sqrt.f32(float %298)
  %302 = fdiv fast float 1.000000e+00, %301
  %303 = insertelement <2 x float> poison, float %302, i64 0
  %304 = shufflevector <2 x float> %303, <2 x float> poison, <2 x i32> zeroinitializer
  %305 = fmul fast <2 x float> %304, %291
  %306 = fmul fast float %302, %296
  br label %307

307:                                              ; preds = %254, %300
  %308 = phi float [ %306, %300 ], [ 0.000000e+00, %254 ]
  %309 = phi <2 x float> [ %305, %300 ], [ zeroinitializer, %254 ]
  store <2 x float> %309, ptr %12, align 8
  store float %308, ptr %290, align 8
  br label %310

310:                                              ; preds = %307, %250
  %311 = getelementptr inbounds %struct.ParticleSettings, ptr %31, i64 0, i32 79
  %312 = load float, ptr %311, align 4, !tbaa !126
  %313 = fcmp fast une float %312, 0.000000e+00
  br i1 %313, label %314, label %358

314:                                              ; preds = %310
  %315 = add nsw i32 %100, 16
  %316 = getelementptr i8, ptr %29, i64 308
  %317 = load i32, ptr %316, align 4, !tbaa !124
  %318 = srem i32 %317, 1024
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %319
  %321 = load i32, ptr %320, align 4, !tbaa !68
  %322 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %319
  %323 = load i32, ptr %322, align 4, !tbaa !68
  %324 = mul i32 %323, %315
  %325 = add i32 %324, %321
  %326 = and i32 %325, 1023
  %327 = zext i32 %326 to i64
  %328 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %327
  %329 = load float, ptr %328, align 4, !tbaa !79
  %330 = add nsw i32 %100, 17
  %331 = mul i32 %323, %330
  %332 = add i32 %331, %321
  %333 = and i32 %332, 1023
  %334 = zext i32 %333 to i64
  %335 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %334
  %336 = load float, ptr %335, align 4, !tbaa !79
  %337 = add nsw i32 %100, 18
  %338 = mul i32 %323, %337
  %339 = add i32 %338, %321
  %340 = and i32 %339, 1023
  %341 = zext i32 %340 to i64
  %342 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %341
  %343 = load float, ptr %342, align 4, !tbaa !79
  %344 = add nsw i32 %100, 19
  %345 = mul i32 %323, %344
  %346 = add i32 %345, %321
  %347 = and i32 %346, 1023
  %348 = zext i32 %347 to i64
  %349 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %348
  %350 = load float, ptr %349, align 4, !tbaa !79
  %351 = insertelement <4 x float> poison, float %329, i64 0
  %352 = insertelement <4 x float> %351, float %336, i64 1
  %353 = insertelement <4 x float> %352, float %343, i64 2
  %354 = insertelement <4 x float> %353, float %350, i64 3
  %355 = fmul fast <4 x float> %354, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>
  %356 = fadd fast <4 x float> %355, <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  store <4 x float> %356, ptr %13, align 16, !tbaa !79
  %357 = call fast nofpclass(nan inf) float @normalize_qt(ptr noundef nonnull %13) #14
  call void @mat4_to_quat(ptr noundef nonnull %9, ptr noundef nonnull %103) #14
  call void @mul_qt_qtqt(ptr noundef nonnull %13, ptr noundef nonnull %13, ptr noundef nonnull %9) #14
  br label %358

358:                                              ; preds = %314, %310
  br i1 %102, label %359, label %470

359:                                              ; preds = %358
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %19) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %20) #14
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %21) #14
  %360 = load <2 x float>, ptr %8, align 8, !tbaa !79
  store <2 x float> %360, ptr %2, align 4, !tbaa !79
  %361 = getelementptr inbounds float, ptr %8, i64 2
  %362 = load float, ptr %361, align 8, !tbaa !79
  %363 = getelementptr inbounds float, ptr %2, i64 2
  store float %362, ptr %363, align 4, !tbaa !79
  %364 = getelementptr inbounds %struct.ParticleKey, ptr %2, i64 0, i32 1
  store <2 x float> zeroinitializer, ptr %364, align 4, !tbaa !79
  %365 = getelementptr inbounds %struct.ParticleKey, ptr %2, i64 0, i32 1, i64 2
  store float 0.000000e+00, ptr %365, align 4, !tbaa !79
  %366 = load float, ptr %110, align 8, !tbaa !79
  %367 = call fast float @llvm.fabs.f32(float %366)
  %368 = fcmp fast oeq float %367, 1.000000e+00
  %369 = getelementptr inbounds %struct.ParticleKey, ptr %2, i64 0, i32 3
  br i1 %368, label %370, label %400

370:                                              ; preds = %359
  %371 = getelementptr inbounds %struct.Object, ptr %27, i64 0, i32 47, i64 3
  %372 = load float, ptr %371, align 4, !tbaa !79
  %373 = extractelement <2 x float> %360, i64 0
  %374 = fsub fast float %373, %372
  store float %374, ptr %369, align 4, !tbaa !79
  %375 = getelementptr inbounds %struct.Object, ptr %27, i64 0, i32 47, i64 3, i64 1
  %376 = load float, ptr %375, align 4, !tbaa !79
  %377 = extractelement <2 x float> %360, i64 1
  %378 = fsub fast float %377, %376
  %379 = getelementptr inbounds %struct.ParticleKey, ptr %2, i64 0, i32 3, i64 1
  store float %378, ptr %379, align 4, !tbaa !79
  %380 = getelementptr inbounds %struct.Object, ptr %27, i64 0, i32 47, i64 3, i64 2
  %381 = load float, ptr %380, align 4, !tbaa !79
  %382 = fsub fast float %362, %381
  %383 = getelementptr inbounds %struct.ParticleKey, ptr %2, i64 0, i32 3, i64 2
  %384 = fmul fast float %374, %374
  %385 = fmul fast float %378, %378
  %386 = fadd fast float %385, %384
  %387 = fmul fast float %382, %382
  %388 = fadd fast float %386, %387
  %389 = fcmp fast ogt float %388, 0x38AA95A5C0000000
  br i1 %389, label %390, label %396

390:                                              ; preds = %370
  %391 = call fast float @llvm.sqrt.f32(float %388)
  %392 = fdiv fast float 1.000000e+00, %391
  %393 = fmul fast float %392, %374
  %394 = fmul fast float %392, %378
  %395 = fmul fast float %392, %382
  br label %396

396:                                              ; preds = %370, %390
  %397 = phi float [ %393, %390 ], [ 0.000000e+00, %370 ]
  %398 = phi float [ %394, %390 ], [ 0.000000e+00, %370 ]
  %399 = phi float [ %395, %390 ], [ 0.000000e+00, %370 ]
  store float %397, ptr %369, align 4
  store float %398, ptr %379, align 4
  store float %399, ptr %383, align 4
  br label %403

400:                                              ; preds = %359
  %401 = load <2 x float>, ptr %7, align 8, !tbaa !79
  store <2 x float> %401, ptr %369, align 4, !tbaa !79
  %402 = getelementptr inbounds %struct.ParticleKey, ptr %2, i64 0, i32 3, i64 2
  store float %366, ptr %402, align 4, !tbaa !79
  br label %403

403:                                              ; preds = %400, %396
  %404 = getelementptr inbounds %struct.ParticleKey, ptr %2, i64 0, i32 3
  call void @project_v3_v3v3(ptr noundef nonnull %19, ptr noundef nonnull %11, ptr noundef nonnull %404) #14
  %405 = load <2 x float>, ptr %404, align 4, !tbaa !79
  %406 = load <2 x float>, ptr %19, align 8, !tbaa !79
  %407 = fsub fast <2 x float> %405, %406
  %408 = getelementptr inbounds %struct.ParticleKey, ptr %2, i64 0, i32 3, i64 2
  %409 = load float, ptr %408, align 4, !tbaa !79
  %410 = getelementptr inbounds float, ptr %19, i64 2
  %411 = load float, ptr %410, align 8, !tbaa !79
  %412 = fsub fast float %409, %411
  %413 = getelementptr inbounds float, ptr %21, i64 2
  %414 = fmul fast <2 x float> %407, %407
  %415 = shufflevector <2 x float> %414, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %416 = fadd fast <2 x float> %415, %414
  %417 = extractelement <2 x float> %416, i64 0
  %418 = fmul fast float %412, %412
  %419 = fadd fast float %417, %418
  %420 = fcmp fast ogt float %419, 0x38AA95A5C0000000
  br i1 %420, label %421, label %428

421:                                              ; preds = %403
  %422 = call fast float @llvm.sqrt.f32(float %419)
  %423 = fdiv fast float 1.000000e+00, %422
  %424 = insertelement <2 x float> poison, float %423, i64 0
  %425 = shufflevector <2 x float> %424, <2 x float> poison, <2 x i32> zeroinitializer
  %426 = fmul fast <2 x float> %425, %407
  %427 = fmul fast float %423, %412
  br label %428

428:                                              ; preds = %403, %421
  %429 = phi float [ %427, %421 ], [ 0.000000e+00, %403 ]
  %430 = phi <2 x float> [ %426, %421 ], [ zeroinitializer, %403 ]
  store <2 x float> %430, ptr %21, align 16
  store float %429, ptr %413, align 8
  %431 = getelementptr inbounds [3 x [3 x float]], ptr %21, i64 0, i64 2
  %432 = load <2 x float>, ptr %11, align 8, !tbaa !79
  %433 = getelementptr inbounds float, ptr %11, i64 2
  %434 = load float, ptr %433, align 8, !tbaa !79
  %435 = getelementptr inbounds [3 x [3 x float]], ptr %21, i64 0, i64 2, i64 2
  %436 = fmul fast <2 x float> %432, %432
  %437 = shufflevector <2 x float> %436, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %438 = fadd fast <2 x float> %437, %436
  %439 = extractelement <2 x float> %438, i64 0
  %440 = fmul fast float %434, %434
  %441 = fadd fast float %439, %440
  %442 = fcmp fast ogt float %441, 0x38AA95A5C0000000
  br i1 %442, label %443, label %452

443:                                              ; preds = %428
  %444 = fneg fast float %434
  %445 = fneg fast <2 x float> %432
  %446 = call fast float @llvm.sqrt.f32(float %441)
  %447 = fdiv fast float 1.000000e+00, %446
  %448 = insertelement <2 x float> poison, float %447, i64 0
  %449 = shufflevector <2 x float> %448, <2 x float> poison, <2 x i32> zeroinitializer
  %450 = fmul fast <2 x float> %449, %445
  %451 = fmul fast float %447, %444
  br label %452

452:                                              ; preds = %428, %443
  %453 = phi float [ %451, %443 ], [ 0.000000e+00, %428 ]
  %454 = phi <2 x float> [ %450, %443 ], [ zeroinitializer, %428 ]
  store <2 x float> %454, ptr %431, align 8
  store float %453, ptr %435, align 16
  %455 = getelementptr inbounds [3 x [3 x float]], ptr %21, i64 0, i64 1
  %456 = extractelement <2 x float> %454, i64 1
  %457 = fmul fast float %456, %429
  %458 = extractelement <2 x float> %430, i64 1
  %459 = fmul fast float %453, %458
  %460 = fsub fast float %457, %459
  store float %460, ptr %455, align 4, !tbaa !79
  %461 = getelementptr inbounds [3 x [3 x float]], ptr %21, i64 0, i64 1, i64 1
  %462 = shufflevector <2 x float> %454, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %463 = insertelement <2 x float> %462, float %453, i64 0
  %464 = fmul fast <2 x float> %463, %430
  %465 = shufflevector <2 x float> %430, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %466 = insertelement <2 x float> %465, float %429, i64 0
  %467 = fmul fast <2 x float> %454, %466
  %468 = fsub fast <2 x float> %464, %467
  store <2 x float> %468, ptr %461, align 16, !tbaa !79
  call void @mat3_to_quat_is_ok(ptr noundef nonnull %20, ptr noundef nonnull %21) #14
  %469 = getelementptr inbounds %struct.ParticleKey, ptr %2, i64 0, i32 2
  call void @copy_qt_qt(ptr noundef nonnull %469, ptr noundef nonnull %20) #14
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %21) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %20) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %19) #14
  br label %877

470:                                              ; preds = %358
  %471 = fcmp fast ogt float %3, 0.000000e+00
  br i1 %471, label %472, label %483

472:                                              ; preds = %470
  %473 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 1
  %474 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 1, i32 1
  %475 = load <2 x float>, ptr %473, align 4, !tbaa !79
  %476 = load <2 x float>, ptr %474, align 4, !tbaa !79
  %477 = fsub fast <2 x float> %475, %476
  %478 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 1, i64 2
  %479 = load float, ptr %478, align 4, !tbaa !79
  %480 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 1, i32 1, i64 2
  %481 = load float, ptr %480, align 4, !tbaa !79
  %482 = fsub fast float %479, %481
  br label %483

483:                                              ; preds = %472, %470
  %484 = phi float [ %482, %472 ], [ 0.000000e+00, %470 ]
  %485 = phi <2 x float> [ %477, %472 ], [ zeroinitializer, %470 ]
  %486 = fcmp fast une float %3, 0.000000e+00
  br i1 %486, label %487, label %505

487:                                              ; preds = %483
  %488 = getelementptr inbounds %struct.ParticleSettings, ptr %31, i64 0, i32 70
  %489 = load float, ptr %488, align 8, !tbaa !127
  %490 = fcmp fast une float %489, 0.000000e+00
  br i1 %490, label %491, label %505

491:                                              ; preds = %487
  %492 = load <2 x float>, ptr %8, align 8, !tbaa !79
  %493 = load <2 x float>, ptr %2, align 4, !tbaa !79
  %494 = fsub fast <2 x float> %492, %493
  %495 = getelementptr inbounds float, ptr %8, i64 2
  %496 = load float, ptr %495, align 8, !tbaa !79
  %497 = getelementptr inbounds float, ptr %2, i64 2
  %498 = load float, ptr %497, align 4, !tbaa !79
  %499 = fsub fast float %496, %498
  %500 = fdiv fast float %489, %3
  %501 = insertelement <2 x float> poison, float %500, i64 0
  %502 = shufflevector <2 x float> %501, <2 x float> poison, <2 x i32> zeroinitializer
  %503 = fmul fast <2 x float> %494, %502
  %504 = fmul fast float %499, %500
  br label %505

505:                                              ; preds = %491, %487, %483
  %506 = phi float [ %504, %491 ], [ %484, %487 ], [ %484, %483 ]
  %507 = phi <2 x float> [ %503, %491 ], [ %485, %487 ], [ %485, %483 ]
  %508 = getelementptr inbounds %struct.ParticleSettings, ptr %31, i64 0, i32 69
  %509 = load float, ptr %508, align 4, !tbaa !128
  %510 = fcmp fast une float %509, 0.000000e+00
  br i1 %510, label %511, label %520

511:                                              ; preds = %505
  %512 = load <2 x float>, ptr %7, align 8, !tbaa !79
  %513 = insertelement <2 x float> poison, float %509, i64 0
  %514 = shufflevector <2 x float> %513, <2 x float> poison, <2 x i32> zeroinitializer
  %515 = fmul fast <2 x float> %512, %514
  %516 = fadd fast <2 x float> %515, %507
  %517 = load float, ptr %110, align 8, !tbaa !79
  %518 = fmul fast float %517, %509
  %519 = fadd fast float %518, %506
  br label %520

520:                                              ; preds = %511, %505
  %521 = phi float [ %519, %511 ], [ %506, %505 ]
  %522 = phi <2 x float> [ %516, %511 ], [ %507, %505 ]
  %523 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 3
  %524 = load ptr, ptr %523, align 8, !tbaa !120
  %525 = icmp eq ptr %524, null
  br i1 %525, label %540, label %526

526:                                              ; preds = %520
  %527 = getelementptr inbounds %struct.ParticleSettings, ptr %31, i64 0, i32 73
  %528 = load float, ptr %527, align 4, !tbaa !118
  %529 = fcmp fast une float %528, 0.000000e+00
  br i1 %529, label %530, label %540

530:                                              ; preds = %526
  %531 = load <2 x float>, ptr %16, align 8, !tbaa !79
  %532 = insertelement <2 x float> poison, float %528, i64 0
  %533 = shufflevector <2 x float> %532, <2 x float> poison, <2 x i32> zeroinitializer
  %534 = fmul fast <2 x float> %531, %533
  %535 = fadd fast <2 x float> %534, %522
  %536 = getelementptr inbounds float, ptr %16, i64 2
  %537 = load float, ptr %536, align 8, !tbaa !79
  %538 = fmul fast float %537, %528
  %539 = fadd fast float %538, %521
  br label %540

540:                                              ; preds = %530, %526, %520
  %541 = phi float [ %521, %520 ], [ %539, %530 ], [ %521, %526 ]
  %542 = phi <2 x float> [ %522, %520 ], [ %535, %530 ], [ %522, %526 ]
  %543 = getelementptr inbounds %struct.ParticleSettings, ptr %31, i64 0, i32 76
  %544 = load float, ptr %543, align 8, !tbaa !79
  %545 = fcmp fast une float %544, 0.000000e+00
  br i1 %545, label %546, label %573

546:                                              ; preds = %540
  %547 = load <2 x float>, ptr %103, align 4, !tbaa !79
  %548 = fmul fast <2 x float> %547, %547
  %549 = shufflevector <2 x float> %548, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %550 = fadd fast <2 x float> %549, %548
  %551 = extractelement <2 x float> %550, i64 0
  %552 = getelementptr inbounds %struct.Object, ptr %27, i64 0, i32 47, i64 0, i64 2
  %553 = load float, ptr %552, align 4, !tbaa !79
  %554 = fmul fast float %553, %553
  %555 = fadd fast float %551, %554
  %556 = fcmp fast ogt float %555, 0x38AA95A5C0000000
  br i1 %556, label %557, label %564

557:                                              ; preds = %546
  %558 = call fast float @llvm.sqrt.f32(float %555)
  %559 = fdiv fast float 1.000000e+00, %558
  %560 = insertelement <2 x float> poison, float %559, i64 0
  %561 = shufflevector <2 x float> %560, <2 x float> poison, <2 x i32> zeroinitializer
  %562 = fmul fast <2 x float> %561, %547
  %563 = fmul fast float %559, %553
  br label %564

564:                                              ; preds = %546, %557
  %565 = phi float [ %563, %557 ], [ 0.000000e+00, %546 ]
  %566 = phi <2 x float> [ %562, %557 ], [ zeroinitializer, %546 ]
  %567 = insertelement <2 x float> poison, float %544, i64 0
  %568 = shufflevector <2 x float> %567, <2 x float> poison, <2 x i32> zeroinitializer
  %569 = fmul fast <2 x float> %566, %568
  %570 = fadd fast <2 x float> %569, %542
  %571 = fmul fast float %565, %544
  %572 = fadd fast float %571, %541
  br label %573

573:                                              ; preds = %564, %540
  %574 = phi float [ %572, %564 ], [ %541, %540 ]
  %575 = phi <2 x float> [ %570, %564 ], [ %542, %540 ]
  %576 = getelementptr inbounds %struct.ParticleSettings, ptr %31, i64 0, i32 76, i64 1
  %577 = load float, ptr %576, align 4, !tbaa !79
  %578 = fcmp fast une float %577, 0.000000e+00
  br i1 %578, label %579, label %607

579:                                              ; preds = %573
  %580 = getelementptr inbounds %struct.Object, ptr %27, i64 0, i32 47, i64 1
  %581 = load <2 x float>, ptr %580, align 4, !tbaa !79
  %582 = fmul fast <2 x float> %581, %581
  %583 = shufflevector <2 x float> %582, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %584 = fadd fast <2 x float> %583, %582
  %585 = extractelement <2 x float> %584, i64 0
  %586 = getelementptr inbounds %struct.Object, ptr %27, i64 0, i32 47, i64 1, i64 2
  %587 = load float, ptr %586, align 4, !tbaa !79
  %588 = fmul fast float %587, %587
  %589 = fadd fast float %585, %588
  %590 = fcmp fast ogt float %589, 0x38AA95A5C0000000
  br i1 %590, label %591, label %598

591:                                              ; preds = %579
  %592 = call fast float @llvm.sqrt.f32(float %589)
  %593 = fdiv fast float 1.000000e+00, %592
  %594 = insertelement <2 x float> poison, float %593, i64 0
  %595 = shufflevector <2 x float> %594, <2 x float> poison, <2 x i32> zeroinitializer
  %596 = fmul fast <2 x float> %595, %581
  %597 = fmul fast float %593, %587
  br label %598

598:                                              ; preds = %579, %591
  %599 = phi float [ %597, %591 ], [ 0.000000e+00, %579 ]
  %600 = phi <2 x float> [ %596, %591 ], [ zeroinitializer, %579 ]
  %601 = insertelement <2 x float> poison, float %577, i64 0
  %602 = shufflevector <2 x float> %601, <2 x float> poison, <2 x i32> zeroinitializer
  %603 = fmul fast <2 x float> %600, %602
  %604 = fadd fast <2 x float> %603, %575
  %605 = fmul fast float %599, %577
  %606 = fadd fast float %605, %574
  br label %607

607:                                              ; preds = %598, %573
  %608 = phi float [ %606, %598 ], [ %574, %573 ]
  %609 = phi <2 x float> [ %604, %598 ], [ %575, %573 ]
  %610 = getelementptr inbounds %struct.ParticleSettings, ptr %31, i64 0, i32 76, i64 2
  %611 = load float, ptr %610, align 8, !tbaa !79
  %612 = fcmp fast une float %611, 0.000000e+00
  br i1 %612, label %613, label %641

613:                                              ; preds = %607
  %614 = getelementptr inbounds %struct.Object, ptr %27, i64 0, i32 47, i64 2
  %615 = load <2 x float>, ptr %614, align 4, !tbaa !79
  %616 = fmul fast <2 x float> %615, %615
  %617 = shufflevector <2 x float> %616, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %618 = fadd fast <2 x float> %617, %616
  %619 = extractelement <2 x float> %618, i64 0
  %620 = getelementptr inbounds %struct.Object, ptr %27, i64 0, i32 47, i64 2, i64 2
  %621 = load float, ptr %620, align 4, !tbaa !79
  %622 = fmul fast float %621, %621
  %623 = fadd fast float %619, %622
  %624 = fcmp fast ogt float %623, 0x38AA95A5C0000000
  br i1 %624, label %625, label %632

625:                                              ; preds = %613
  %626 = call fast float @llvm.sqrt.f32(float %623)
  %627 = fdiv fast float 1.000000e+00, %626
  %628 = insertelement <2 x float> poison, float %627, i64 0
  %629 = shufflevector <2 x float> %628, <2 x float> poison, <2 x i32> zeroinitializer
  %630 = fmul fast <2 x float> %629, %615
  %631 = fmul fast float %627, %621
  br label %632

632:                                              ; preds = %613, %625
  %633 = phi float [ %631, %625 ], [ 0.000000e+00, %613 ]
  %634 = phi <2 x float> [ %630, %625 ], [ zeroinitializer, %613 ]
  %635 = insertelement <2 x float> poison, float %611, i64 0
  %636 = shufflevector <2 x float> %635, <2 x float> poison, <2 x i32> zeroinitializer
  %637 = fmul fast <2 x float> %634, %636
  %638 = fadd fast <2 x float> %637, %609
  %639 = fmul fast float %633, %611
  %640 = fadd fast float %639, %608
  br label %641

641:                                              ; preds = %632, %607
  %642 = phi float [ %640, %632 ], [ %608, %607 ]
  %643 = phi <2 x float> [ %638, %632 ], [ %609, %607 ]
  %644 = load float, ptr %184, align 4, !tbaa !123
  %645 = fcmp fast une float %644, 0.000000e+00
  br i1 %645, label %646, label %656

646:                                              ; preds = %641
  %647 = load <2 x float>, ptr %11, align 8, !tbaa !79
  %648 = insertelement <2 x float> poison, float %644, i64 0
  %649 = shufflevector <2 x float> %648, <2 x float> poison, <2 x i32> zeroinitializer
  %650 = fmul fast <2 x float> %647, %649
  %651 = fadd fast <2 x float> %650, %643
  %652 = getelementptr inbounds float, ptr %11, i64 2
  %653 = load float, ptr %652, align 8, !tbaa !79
  %654 = fmul fast float %653, %644
  %655 = fadd fast float %654, %642
  br label %656

656:                                              ; preds = %641, %646
  %657 = phi float [ %655, %646 ], [ %642, %641 ]
  %658 = phi <2 x float> [ %651, %646 ], [ %643, %641 ]
  %659 = getelementptr inbounds %struct.ParticleKey, ptr %2, i64 0, i32 1
  %660 = load float, ptr %6, align 4, !tbaa !129
  %661 = getelementptr inbounds %struct.ParticleKey, ptr %2, i64 0, i32 1, i64 1
  %662 = insertelement <2 x float> poison, float %660, i64 0
  %663 = shufflevector <2 x float> %662, <2 x float> poison, <2 x i32> zeroinitializer
  %664 = fmul fast <2 x float> %663, %658
  store <2 x float> %664, ptr %659, align 4, !tbaa !79
  %665 = fmul fast float %660, %657
  %666 = getelementptr inbounds %struct.ParticleKey, ptr %2, i64 0, i32 1, i64 2
  store float %665, ptr %666, align 4, !tbaa !79
  %667 = load <2 x float>, ptr %8, align 8, !tbaa !79
  store <2 x float> %667, ptr %2, align 4, !tbaa !79
  %668 = getelementptr inbounds float, ptr %8, i64 2
  %669 = load float, ptr %668, align 8, !tbaa !79
  %670 = getelementptr inbounds float, ptr %2, i64 2
  store float %669, ptr %670, align 4, !tbaa !79
  %671 = getelementptr inbounds %struct.ParticleKey, ptr %2, i64 0, i32 2
  call void @unit_qt(ptr noundef nonnull %671) #14
  %672 = getelementptr inbounds %struct.ParticleSettings, ptr %31, i64 0, i32 12
  %673 = load i16, ptr %672, align 2, !tbaa !119
  %674 = icmp eq i16 %673, 0
  br i1 %674, label %817, label %675

675:                                              ; preds = %656
  %676 = sext i16 %673 to i32
  switch i32 %676, label %698 [
    i32 1, label %677
    i32 9, label %677
    i32 2, label %681
    i32 3, label %682
    i32 4, label %682
    i32 5, label %682
    i32 6, label %689
    i32 7, label %689
    i32 8, label %689
  ]

677:                                              ; preds = %675, %675
  %678 = load <2 x float>, ptr %7, align 8, !tbaa !79
  store <2 x float> %678, ptr %17, align 8, !tbaa !79
  %679 = extractelement <2 x float> %678, i64 0
  %680 = extractelement <2 x float> %678, i64 1
  br label %708

681:                                              ; preds = %675
  br label %698

682:                                              ; preds = %675, %675, %675
  %683 = sext i16 %673 to i64
  %684 = add nsw i64 %683, -3
  %685 = getelementptr inbounds [3 x float], ptr %17, i64 0, i64 %684
  store float 1.000000e+00, ptr %685, align 4, !tbaa !79
  %686 = load <2 x float>, ptr %17, align 8, !tbaa !79
  %687 = getelementptr inbounds float, ptr %17, i64 2
  %688 = load float, ptr %687, align 8, !tbaa !79
  br label %698

689:                                              ; preds = %675, %675, %675
  %690 = sext i16 %673 to i64
  %691 = add nsw i64 %690, -6
  %692 = getelementptr inbounds %struct.Object, ptr %27, i64 0, i32 47, i64 %691
  %693 = load float, ptr %692, align 4, !tbaa !79
  store float %693, ptr %17, align 8, !tbaa !79
  %694 = getelementptr inbounds float, ptr %692, i64 1
  %695 = load float, ptr %694, align 4, !tbaa !79
  %696 = getelementptr inbounds float, ptr %17, i64 1
  store float %695, ptr %696, align 4, !tbaa !79
  %697 = getelementptr inbounds float, ptr %692, i64 2
  br label %708

698:                                              ; preds = %681, %682, %675
  %699 = phi float [ %657, %681 ], [ %688, %682 ], [ 0.000000e+00, %675 ]
  %700 = phi <2 x float> [ %658, %681 ], [ %686, %682 ], [ zeroinitializer, %675 ]
  %701 = fneg fast <2 x float> %700
  store <2 x float> %701, ptr %17, align 8, !tbaa !79
  %702 = getelementptr inbounds float, ptr %17, i64 2
  %703 = fneg fast float %699
  store float %703, ptr %702, align 8, !tbaa !79
  call void @vec_to_quat(ptr noundef nonnull %10, ptr noundef nonnull %17, i16 noundef signext 0, i16 noundef signext 2) #14
  %704 = load float, ptr %311, align 4, !tbaa !126
  %705 = fcmp fast une float %704, 0.000000e+00
  br i1 %705, label %706, label %707

706:                                              ; preds = %698
  call void @interp_qt_qtqt(ptr noundef nonnull %9, ptr noundef nonnull %10, ptr noundef nonnull %13, float noundef nofpclass(nan inf) %704) #14
  br label %790

707:                                              ; preds = %698
  call void @copy_qt_qt(ptr noundef nonnull %9, ptr noundef nonnull %10) #14
  br label %790

708:                                              ; preds = %689, %677
  %709 = phi ptr [ %697, %689 ], [ %110, %677 ]
  %710 = phi float [ %695, %689 ], [ %680, %677 ]
  %711 = phi float [ %693, %689 ], [ %679, %677 ]
  %712 = load float, ptr %709, align 4, !tbaa !79
  %713 = getelementptr inbounds float, ptr %17, i64 2
  store float %712, ptr %713, align 8, !tbaa !79
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %22) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %23) #14
  call void @mat4_to_quat(ptr noundef nonnull %22, ptr noundef nonnull %103) #14
  call void @invert_qt_qt(ptr noundef nonnull %23, ptr noundef nonnull %22) #14
  %714 = load i16, ptr %672, align 2, !tbaa !119
  %715 = icmp eq i16 %714, 9
  br i1 %715, label %743, label %716

716:                                              ; preds = %708
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %24) #14
  %717 = fneg fast float %711
  store float %717, ptr %17, align 8, !tbaa !79
  %718 = getelementptr inbounds float, ptr %17, i64 1
  %719 = fneg fast float %710
  store float %719, ptr %718, align 4, !tbaa !79
  %720 = getelementptr inbounds float, ptr %17, i64 2
  %721 = fneg fast float %712
  store float %721, ptr %720, align 8, !tbaa !79
  store float %717, ptr %24, align 8, !tbaa !79
  %722 = getelementptr inbounds float, ptr %24, i64 1
  store float %719, ptr %722, align 4, !tbaa !79
  %723 = getelementptr inbounds float, ptr %24, i64 2
  store float %721, ptr %723, align 8, !tbaa !79
  call void @mul_qt_v3(ptr noundef nonnull %23, ptr noundef nonnull %24) #14
  %724 = load <2 x float>, ptr %24, align 8, !tbaa !79
  %725 = fmul fast <2 x float> %724, %724
  %726 = shufflevector <2 x float> %725, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %727 = fadd fast <2 x float> %726, %725
  %728 = extractelement <2 x float> %727, i64 0
  %729 = load float, ptr %723, align 8, !tbaa !79
  %730 = fmul fast float %729, %729
  %731 = fadd fast float %728, %730
  %732 = fcmp fast ogt float %731, 0x38AA95A5C0000000
  br i1 %732, label %733, label %740

733:                                              ; preds = %716
  %734 = call fast float @llvm.sqrt.f32(float %731)
  %735 = fdiv fast float 1.000000e+00, %734
  %736 = insertelement <2 x float> poison, float %735, i64 0
  %737 = shufflevector <2 x float> %736, <2 x float> poison, <2 x i32> zeroinitializer
  %738 = fmul fast <2 x float> %737, %724
  %739 = fmul fast float %735, %729
  br label %740

740:                                              ; preds = %716, %733
  %741 = phi float [ %739, %733 ], [ 0.000000e+00, %716 ]
  %742 = phi <2 x float> [ %738, %733 ], [ zeroinitializer, %716 ]
  store <2 x float> %742, ptr %24, align 8
  store float %741, ptr %723, align 8
  call void @vec_to_quat(ptr noundef nonnull %10, ptr noundef nonnull %24, i16 noundef signext 0, i16 noundef signext 2) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %24) #14
  br label %783

743:                                              ; preds = %708
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %25) #14
  %744 = getelementptr inbounds [3 x [3 x float]], ptr %25, i64 0, i64 1
  %745 = getelementptr inbounds [3 x [3 x float]], ptr %25, i64 0, i64 2
  store float %711, ptr %25, align 16, !tbaa !79
  %746 = getelementptr inbounds float, ptr %25, i64 1
  store float %710, ptr %746, align 4, !tbaa !79
  %747 = getelementptr inbounds float, ptr %25, i64 2
  store float %712, ptr %747, align 8, !tbaa !79
  call void @mul_qt_v3(ptr noundef nonnull %23, ptr noundef nonnull %25) #14
  %748 = getelementptr inbounds [3 x [3 x float]], ptr %25, i64 0, i64 1, i64 1
  %749 = load <2 x float>, ptr %16, align 8, !tbaa !79
  store <2 x float> %749, ptr %744, align 4, !tbaa !79
  %750 = getelementptr inbounds float, ptr %16, i64 2
  %751 = load float, ptr %750, align 8, !tbaa !79
  %752 = getelementptr inbounds [3 x [3 x float]], ptr %25, i64 0, i64 1, i64 2
  store float %751, ptr %752, align 4, !tbaa !79
  call void @mul_qt_v3(ptr noundef nonnull %23, ptr noundef nonnull %744) #14
  %753 = load float, ptr %25, align 16, !tbaa !79
  %754 = load float, ptr %744, align 4, !tbaa !79
  %755 = load <2 x float>, ptr %748, align 16, !tbaa !79
  %756 = load <2 x float>, ptr %746, align 4, !tbaa !79
  %757 = shufflevector <2 x float> %756, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %758 = insertelement <2 x float> %757, float %753, i64 1
  %759 = fmul fast <2 x float> %758, %755
  %760 = shufflevector <2 x float> %755, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %761 = insertelement <2 x float> %760, float %754, i64 1
  %762 = fmul fast <2 x float> %761, %756
  %763 = fsub fast <2 x float> %759, %762
  store <2 x float> %763, ptr %745, align 8, !tbaa !79
  %764 = extractelement <2 x float> %756, i64 0
  %765 = fmul fast float %754, %764
  %766 = extractelement <2 x float> %755, i64 0
  %767 = fmul fast float %753, %766
  %768 = fsub fast float %765, %767
  %769 = getelementptr inbounds [3 x [3 x float]], ptr %25, i64 0, i64 2, i64 2
  store float %768, ptr %769, align 16, !tbaa !79
  %770 = extractelement <2 x float> %763, i64 1
  %771 = extractelement <2 x float> %756, i64 1
  %772 = fmul fast float %770, %771
  %773 = fmul fast float %768, %764
  %774 = fsub fast float %772, %773
  store float %774, ptr %744, align 4, !tbaa !79
  %775 = fmul fast float %768, %753
  %776 = extractelement <2 x float> %763, i64 0
  %777 = fmul fast float %776, %771
  %778 = fsub fast float %775, %777
  store float %778, ptr %748, align 16, !tbaa !79
  %779 = fmul fast <2 x float> %763, %756
  %780 = extractelement <2 x float> %779, i64 0
  %781 = fmul fast float %770, %753
  %782 = fsub fast float %780, %781
  store float %782, ptr %752, align 4, !tbaa !79
  call void @mat3_to_quat(ptr noundef nonnull %10, ptr noundef nonnull %25) #14
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %25) #14
  br label %783

783:                                              ; preds = %743, %740
  %784 = load float, ptr %311, align 4, !tbaa !126
  %785 = fcmp fast une float %784, 0.000000e+00
  br i1 %785, label %786, label %788

786:                                              ; preds = %783
  call void @mul_qt_qtqt(ptr noundef nonnull %13, ptr noundef nonnull %13, ptr noundef nonnull %23) #14
  %787 = load float, ptr %311, align 4, !tbaa !126
  call void @interp_qt_qtqt(ptr noundef nonnull %9, ptr noundef nonnull %10, ptr noundef nonnull %13, float noundef nofpclass(nan inf) %787) #14
  br label %789

788:                                              ; preds = %783
  call void @copy_qt_qt(ptr noundef nonnull %9, ptr noundef nonnull %10) #14
  br label %789

789:                                              ; preds = %788, %786
  call void @mul_qt_qtqt(ptr noundef nonnull %9, ptr noundef nonnull %22, ptr noundef nonnull %9) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %23) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %22) #14
  br label %790

790:                                              ; preds = %706, %707, %789
  %791 = getelementptr inbounds %struct.ParticleSettings, ptr %31, i64 0, i32 78
  %792 = load float, ptr %791, align 8, !tbaa !131
  %793 = getelementptr inbounds %struct.ParticleSettings, ptr %31, i64 0, i32 80
  %794 = load float, ptr %793, align 8, !tbaa !132
  %795 = fcmp fast une float %794, 0.000000e+00
  br i1 %795, label %796, label %814

796:                                              ; preds = %790
  %797 = add nsw i32 %100, 20
  %798 = getelementptr i8, ptr %29, i64 308
  %799 = load i32, ptr %798, align 4, !tbaa !124
  %800 = srem i32 %799, 1024
  %801 = sext i32 %800 to i64
  %802 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %801
  %803 = load i32, ptr %802, align 4, !tbaa !68
  %804 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %801
  %805 = load i32, ptr %804, align 4, !tbaa !68
  %806 = mul i32 %805, %797
  %807 = add i32 %806, %803
  %808 = and i32 %807, 1023
  %809 = zext i32 %808 to i64
  %810 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %809
  %811 = load float, ptr %810, align 4, !tbaa !79
  %812 = fmul fast float %811, %794
  %813 = fadd fast float %812, %792
  br label %814

814:                                              ; preds = %796, %790
  %815 = phi float [ %813, %796 ], [ %792, %790 ]
  %816 = fmul fast float %815, 0x400921FB60000000
  call void @axis_angle_to_quat(ptr noundef nonnull %18, ptr noundef nonnull %14, float noundef nofpclass(nan inf) %816) #14
  call void @mul_qt_qtqt(ptr noundef nonnull %671, ptr noundef nonnull %9, ptr noundef nonnull %18) #14
  br label %817

817:                                              ; preds = %814, %656
  %818 = getelementptr inbounds %struct.ParticleKey, ptr %2, i64 0, i32 3
  store <2 x float> zeroinitializer, ptr %818, align 4, !tbaa !79
  %819 = getelementptr inbounds %struct.ParticleKey, ptr %2, i64 0, i32 3, i64 2
  store float 0.000000e+00, ptr %819, align 4, !tbaa !79
  %820 = load i16, ptr %251, align 4, !tbaa !125
  switch i16 %820, label %826 [
    i16 0, label %877
    i16 2, label %821
  ]

821:                                              ; preds = %817
  %822 = load <2 x float>, ptr %12, align 8, !tbaa !79
  %823 = extractelement <2 x float> %822, i64 0
  store float %823, ptr %818, align 4, !tbaa !79
  %824 = getelementptr inbounds float, ptr %12, i64 2
  %825 = load float, ptr %824, align 8, !tbaa !79
  br label %851

826:                                              ; preds = %817
  %827 = sext i16 %820 to i32
  switch i32 %827, label %851 [
    i32 1, label %828
    i32 3, label %831
    i32 4, label %837
    i32 5, label %848
    i32 6, label %849
    i32 7, label %850
  ]

828:                                              ; preds = %826
  %829 = load <2 x float>, ptr %659, align 4, !tbaa !79
  %830 = load float, ptr %666, align 4, !tbaa !79
  br label %851

831:                                              ; preds = %826
  %832 = load float, ptr %661, align 4, !tbaa !79
  %833 = load float, ptr %659, align 4, !tbaa !79
  %834 = fneg fast float %833
  %835 = insertelement <2 x float> poison, float %832, i64 0
  %836 = insertelement <2 x float> %835, float %834, i64 1
  br label %851

837:                                              ; preds = %826
  %838 = load float, ptr %659, align 4, !tbaa !79
  %839 = load <2 x float>, ptr %661, align 4, !tbaa !79
  %840 = shufflevector <2 x float> %839, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %841 = fneg fast <2 x float> %840
  %842 = insertelement <2 x float> %839, float %838, i64 0
  %843 = fmul fast <2 x float> %842, %841
  %844 = fmul fast <2 x float> %839, %839
  %845 = extractelement <2 x float> %844, i64 0
  %846 = fmul fast float %838, %838
  %847 = fadd fast float %846, %845
  br label %851

848:                                              ; preds = %826
  br label %851

849:                                              ; preds = %826
  br label %851

850:                                              ; preds = %826
  br label %851

851:                                              ; preds = %850, %849, %848, %837, %831, %828, %826, %821
  %852 = phi float [ 1.000000e+00, %850 ], [ 0.000000e+00, %849 ], [ 0.000000e+00, %848 ], [ %847, %837 ], [ 0.000000e+00, %831 ], [ %830, %828 ], [ 0.000000e+00, %826 ], [ %825, %821 ]
  %853 = phi <2 x float> [ zeroinitializer, %850 ], [ <float 0.000000e+00, float 1.000000e+00>, %849 ], [ <float 1.000000e+00, float 0.000000e+00>, %848 ], [ %843, %837 ], [ %836, %831 ], [ %829, %828 ], [ zeroinitializer, %826 ], [ %822, %821 ]
  %854 = fmul fast <2 x float> %853, %853
  %855 = shufflevector <2 x float> %854, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %856 = fadd fast <2 x float> %855, %854
  %857 = extractelement <2 x float> %856, i64 0
  %858 = fmul fast float %852, %852
  %859 = fadd fast float %857, %858
  %860 = fcmp fast ogt float %859, 0x38AA95A5C0000000
  br i1 %860, label %861, label %868

861:                                              ; preds = %851
  %862 = call fast float @llvm.sqrt.f32(float %859)
  %863 = fdiv fast float 1.000000e+00, %862
  %864 = insertelement <2 x float> poison, float %863, i64 0
  %865 = shufflevector <2 x float> %864, <2 x float> poison, <2 x i32> zeroinitializer
  %866 = fmul fast <2 x float> %865, %853
  %867 = fmul fast float %863, %852
  br label %868

868:                                              ; preds = %851, %861
  %869 = phi float [ %867, %861 ], [ 0.000000e+00, %851 ]
  %870 = phi <2 x float> [ %866, %861 ], [ zeroinitializer, %851 ]
  store <2 x float> %870, ptr %818, align 4
  store float %869, ptr %819, align 4
  %871 = getelementptr inbounds %struct.ParticleSettings, ptr %31, i64 0, i32 77
  %872 = load float, ptr %871, align 4, !tbaa !133
  %873 = insertelement <2 x float> poison, float %872, i64 0
  %874 = shufflevector <2 x float> %873, <2 x float> poison, <2 x i32> zeroinitializer
  %875 = fmul fast <2 x float> %874, %870
  store <2 x float> %875, ptr %818, align 4, !tbaa !79
  %876 = fmul fast float %872, %869
  store float %876, ptr %819, align 4, !tbaa !79
  br label %877

877:                                              ; preds = %817, %868, %452
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %18) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %17) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %16) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %15) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %14) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %12) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %11) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %10) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %8) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #14
  call void @llvm.lifetime.end.p0(i64 60, ptr nonnull %6) #14
  ret void
}

declare void @psys_particle_on_emitter(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, float noundef nofpclass(nan inf), ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @psys_get_texture(ptr noundef, ptr noundef, ptr noundef, i32 noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

declare void @mul_m4_v3(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @mul_mat3_m4_v3(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.cos.f32(float) #7

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.sin.f32(float) #7

declare nofpclass(nan inf) float @normalize_qt(ptr noundef) local_unnamed_addr #3

declare void @mat4_to_quat(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @mul_qt_qtqt(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #7

declare void @project_v3_v3v3(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @mat3_to_quat_is_ok(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @copy_qt_qt(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @unit_qt(ptr noundef) local_unnamed_addr #3

declare void @vec_to_quat(ptr noundef, ptr noundef, i16 noundef signext, i16 noundef signext) local_unnamed_addr #3

declare void @interp_qt_qtqt(ptr noundef, ptr noundef, ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

declare void @invert_qt_qt(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @mul_qt_v3(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @mat3_to_quat(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @axis_angle_to_quat(ptr noundef, ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @reset_particle(ptr noundef %0, ptr noundef %1, float noundef nofpclass(nan inf) %2, float noundef nofpclass(nan inf) %3) local_unnamed_addr #2 {
  %5 = alloca %struct.ParticleTexture, align 4
  %6 = alloca %struct.ParticleTexture, align 4
  %7 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !87
  call void @llvm.lifetime.start.p0(i64 60, ptr nonnull %6) #14
  %9 = getelementptr inbounds %struct.ParticleSystem, ptr %8, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !35
  %11 = ptrtoint ptr %1 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 200
  %15 = trunc i64 %14 to i32
  %16 = getelementptr inbounds %struct.ParticleSystem, ptr %8, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !5
  %18 = getelementptr inbounds %struct.ParticleSettings, ptr %17, i64 0, i32 7
  %19 = load i16, ptr %18, align 8, !tbaa !18
  %20 = icmp ne i16 %19, 2
  %21 = fcmp fast ogt float %2, 0.000000e+00
  %22 = select i1 %20, i1 %21, i1 false
  br i1 %22, label %23, label %38

23:                                               ; preds = %4
  %24 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 6
  %25 = load float, ptr %24, align 4, !tbaa !115
  %26 = fcmp fast olt float %25, %3
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.ParticleSystem, ptr %8, i64 0, i32 20
  %29 = load float, ptr %28, align 8, !tbaa !134
  %30 = fcmp fast ult float %25, %29
  br i1 %30, label %38, label %31

31:                                               ; preds = %27
  %32 = load ptr, ptr %0, align 8, !tbaa !76
  %33 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 1
  %34 = load ptr, ptr %33, align 8, !tbaa !86
  tail call fastcc void @evaluate_emitter_anim(ptr noundef %32, ptr noundef %34, float noundef nofpclass(nan inf) %25)
  %35 = getelementptr inbounds %struct.ParticleSystem, ptr %8, i64 0, i32 25
  %36 = load i32, ptr %35, align 4, !tbaa !21
  %37 = or i32 %36, 16384
  store i32 %37, ptr %35, align 4, !tbaa !21
  br label %38

38:                                               ; preds = %31, %27, %23, %4
  tail call void @psys_get_birth_coordinates(ptr noundef nonnull %0, ptr noundef %1, ptr noundef %1, float noundef nofpclass(nan inf) %2, float noundef nofpclass(nan inf) %3)
  %39 = load ptr, ptr %7, align 8, !tbaa !87
  %40 = getelementptr inbounds %struct.ParticleSystem, ptr %39, i64 0, i32 2
  %41 = load ptr, ptr %40, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 60, ptr nonnull %5) #14
  call void @psys_get_texture(ptr noundef nonnull %0, ptr noundef %1, ptr noundef nonnull %5, i32 noundef 15, float noundef nofpclass(nan inf) 0.000000e+00) #14
  %42 = getelementptr inbounds %struct.ParticleSettings, ptr %41, i64 0, i32 7
  %43 = load i16, ptr %42, align 8, !tbaa !18
  %44 = sext i16 %43 to i32
  switch i32 %44, label %104 [
    i32 0, label %45
    i32 2, label %78
  ]

45:                                               ; preds = %38
  %46 = getelementptr inbounds %struct.ParticleTexture, ptr %5, i64 0, i32 3
  %47 = load float, ptr %46, align 4, !tbaa !135
  %48 = add nsw i32 %15, 125
  %49 = getelementptr i8, ptr %39, i64 308
  %50 = load i32, ptr %49, align 4, !tbaa !124
  %51 = srem i32 %50, 1024
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %52
  %54 = load i32, ptr %53, align 4, !tbaa !68
  %55 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %52
  %56 = load i32, ptr %55, align 4, !tbaa !68
  %57 = mul i32 %56, %48
  %58 = add i32 %57, %54
  %59 = and i32 %58, 1023
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %60
  %62 = load float, ptr %61, align 4, !tbaa !79
  %63 = fcmp fast olt float %47, %62
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 17
  %66 = load i16, ptr %65, align 4, !tbaa !36
  %67 = or i16 %66, 1
  store i16 %67, ptr %65, align 4, !tbaa !36
  br label %68

68:                                               ; preds = %64, %45
  %69 = getelementptr inbounds %struct.ParticleSettings, ptr %41, i64 0, i32 53
  %70 = load float, ptr %69, align 4, !tbaa !113
  %71 = getelementptr inbounds %struct.ParticleSettings, ptr %41, i64 0, i32 54
  %72 = load float, ptr %71, align 8, !tbaa !114
  %73 = fsub fast float %72, %70
  %74 = getelementptr inbounds %struct.ParticleTexture, ptr %5, i64 0, i32 1
  %75 = load float, ptr %74, align 4, !tbaa !136
  %76 = fmul fast float %73, %75
  %77 = fadd fast float %76, %70
  br label %101

78:                                               ; preds = %38
  %79 = getelementptr inbounds %struct.ParticleTexture, ptr %5, i64 0, i32 3
  %80 = load float, ptr %79, align 4, !tbaa !135
  %81 = add nsw i32 %15, 125
  %82 = getelementptr i8, ptr %39, i64 308
  %83 = load i32, ptr %82, align 4, !tbaa !124
  %84 = srem i32 %83, 1024
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %85
  %87 = load i32, ptr %86, align 4, !tbaa !68
  %88 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %85
  %89 = load i32, ptr %88, align 4, !tbaa !68
  %90 = mul i32 %89, %81
  %91 = add i32 %90, %87
  %92 = and i32 %91, 1023
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %93
  %95 = load float, ptr %94, align 4, !tbaa !79
  %96 = fcmp fast olt float %80, %95
  br i1 %96, label %97, label %101

97:                                               ; preds = %78
  %98 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 17
  %99 = load i16, ptr %98, align 4, !tbaa !36
  %100 = or i16 %99, 1
  store i16 %100, ptr %98, align 4, !tbaa !36
  br label %101

101:                                              ; preds = %97, %78, %68
  %102 = phi float [ %77, %68 ], [ 0.000000e+00, %97 ], [ 0.000000e+00, %78 ]
  %103 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 6
  store float %102, ptr %103, align 4, !tbaa !115
  br label %104

104:                                              ; preds = %38, %101
  call void @llvm.lifetime.end.p0(i64 60, ptr nonnull %5) #14
  %105 = getelementptr inbounds %struct.ParticleSettings, ptr %17, i64 0, i32 11
  %106 = load i16, ptr %105, align 8, !tbaa !22
  %107 = icmp eq i16 %106, 3
  br i1 %107, label %108, label %140

108:                                              ; preds = %104
  %109 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 4
  %110 = load ptr, ptr %109, align 8, !tbaa !117
  %111 = icmp eq ptr %110, null
  br i1 %111, label %140, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %struct.BoidParticle, ptr %110, i64 0, i32 2
  store <2 x float> zeroinitializer, ptr %113, align 4, !tbaa !79
  %114 = getelementptr inbounds %struct.BoidParticle, ptr %110, i64 0, i32 2, i64 2
  store float -1.000000e+00, ptr %114, align 4, !tbaa !79
  %115 = load ptr, ptr %0, align 8, !tbaa !76
  %116 = getelementptr inbounds %struct.Scene, ptr %115, i64 0, i32 40, i32 1
  %117 = load i32, ptr %116, align 4, !tbaa !137
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %125, label %120

120:                                              ; preds = %112
  %121 = getelementptr inbounds %struct.Scene, ptr %115, i64 0, i32 40, i32 0, i64 2
  %122 = load float, ptr %121, align 8, !tbaa !79
  %123 = fcmp fast une float %122, 0.000000e+00
  br i1 %123, label %124, label %125

124:                                              ; preds = %120
  store float %122, ptr %114, align 4, !tbaa !79
  br label %125

125:                                              ; preds = %124, %120, %112
  %126 = getelementptr inbounds %struct.ParticleSettings, ptr %17, i64 0, i32 2
  %127 = load ptr, ptr %126, align 8, !tbaa !156
  %128 = getelementptr inbounds %struct.BoidSettings, ptr %127, i64 0, i32 6
  %129 = load float, ptr %128, align 8, !tbaa !157
  %130 = getelementptr inbounds %struct.BoidParticle, ptr %110, i64 0, i32 1
  store float %129, ptr %130, align 8, !tbaa !159
  %131 = getelementptr inbounds %struct.BoidParticle, ptr %110, i64 0, i32 1, i32 3
  store i16 0, ptr %131, align 2, !tbaa !162
  %132 = getelementptr inbounds %struct.BoidSettings, ptr %127, i64 0, i32 22
  %133 = load ptr, ptr %132, align 8, !tbaa !163
  %134 = getelementptr inbounds %struct.BoidState, ptr %133, i64 0, i32 6
  %135 = load i32, ptr %134, align 8, !tbaa !164
  %136 = trunc i32 %135 to i16
  %137 = getelementptr inbounds %struct.BoidParticle, ptr %110, i64 0, i32 1, i32 2
  store i16 %136, ptr %137, align 8, !tbaa !166
  %138 = getelementptr inbounds %struct.BoidParticle, ptr %110, i64 0, i32 1, i32 1
  %139 = getelementptr inbounds %struct.BoidParticle, ptr %110, i64 0, i32 1, i32 1, i64 2
  store float 0.000000e+00, ptr %139, align 4, !tbaa !79
  store <2 x float> zeroinitializer, ptr %138, align 4, !tbaa !79
  br label %140

140:                                              ; preds = %125, %108, %104
  %141 = load i16, ptr %18, align 8, !tbaa !18
  %142 = icmp eq i16 %141, 2
  br i1 %142, label %143, label %145

143:                                              ; preds = %140
  %144 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 7
  store float 1.000000e+02, ptr %144, align 8, !tbaa !167
  br label %196

145:                                              ; preds = %140
  %146 = getelementptr inbounds %struct.ParticleSettings, ptr %17, i64 0, i32 55
  %147 = load float, ptr %146, align 4, !tbaa !168
  %148 = getelementptr inbounds %struct.ParticleSettings, ptr %17, i64 0, i32 56
  %149 = load float, ptr %148, align 8, !tbaa !169
  %150 = add nsw i32 %15, 21
  %151 = getelementptr i8, ptr %8, i64 308
  %152 = load i32, ptr %151, align 4, !tbaa !124
  %153 = srem i32 %152, 1024
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %154
  %156 = load i32, ptr %155, align 4, !tbaa !68
  %157 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %154
  %158 = load i32, ptr %157, align 4, !tbaa !68
  %159 = mul i32 %158, %150
  %160 = add i32 %159, %156
  %161 = and i32 %160, 1023
  %162 = zext i32 %161 to i64
  %163 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %162
  %164 = load float, ptr %163, align 4, !tbaa !79
  %165 = fmul fast float %164, %149
  %166 = fsub fast float 1.000000e+00, %165
  %167 = fmul fast float %166, %147
  %168 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 7
  store float %167, ptr %168, align 8, !tbaa !167
  %169 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 6
  %170 = load float, ptr %169, align 4, !tbaa !115
  %171 = fadd fast float %167, %170
  %172 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 8
  store float %171, ptr %172, align 4, !tbaa !170
  call void @psys_get_texture(ptr noundef nonnull %0, ptr noundef %1, ptr noundef nonnull %6, i32 noundef 2, float noundef nofpclass(nan inf) %3) #14
  %173 = load float, ptr %146, align 4, !tbaa !168
  %174 = getelementptr inbounds %struct.ParticleTexture, ptr %6, i64 0, i32 2
  %175 = load float, ptr %174, align 4, !tbaa !171
  %176 = fmul fast float %175, %173
  store float %176, ptr %168, align 8, !tbaa !167
  %177 = load float, ptr %148, align 8, !tbaa !169
  %178 = fcmp fast une float %177, 0.000000e+00
  br i1 %178, label %179, label %196

179:                                              ; preds = %145
  %180 = load i32, ptr %151, align 4, !tbaa !124
  %181 = srem i32 %180, 1024
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %182
  %184 = load i32, ptr %183, align 4, !tbaa !68
  %185 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %182
  %186 = load i32, ptr %185, align 4, !tbaa !68
  %187 = mul i32 %186, %150
  %188 = add i32 %187, %184
  %189 = and i32 %188, 1023
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %190
  %192 = load float, ptr %191, align 4, !tbaa !79
  %193 = fmul fast float %192, %177
  %194 = fsub fast float 1.000000e+00, %193
  %195 = fmul fast float %194, %176
  store float %195, ptr %168, align 8, !tbaa !167
  br label %196

196:                                              ; preds = %145, %179, %143
  %197 = phi float [ %176, %145 ], [ %195, %179 ], [ 1.000000e+02, %143 ]
  %198 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 6
  %199 = load float, ptr %198, align 4, !tbaa !115
  %200 = fadd fast float %197, %199
  %201 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 8
  store float %200, ptr %201, align 4, !tbaa !170
  %202 = load ptr, ptr %7, align 8, !tbaa !87
  %203 = getelementptr inbounds %struct.ParticleSystem, ptr %202, i64 0, i32 40
  %204 = load ptr, ptr %203, align 8, !tbaa !15
  %205 = icmp eq ptr %204, null
  br i1 %205, label %220, label %206

206:                                              ; preds = %196
  %207 = getelementptr inbounds %struct.PointCache, ptr %204, i64 0, i32 2
  %208 = load i32, ptr %207, align 8, !tbaa !16
  %209 = and i32 %208, 1
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %220, label %211

211:                                              ; preds = %206
  %212 = getelementptr inbounds %struct.PointCache, ptr %204, i64 0, i32 20
  %213 = load ptr, ptr %212, align 8, !tbaa !172
  %214 = icmp eq ptr %213, null
  br i1 %214, label %220, label %215

215:                                              ; preds = %211
  %216 = call fast nofpclass(nan inf) float @psys_get_dietime_from_cache(ptr noundef nonnull %204, i32 noundef %15) #14
  %217 = load float, ptr %201, align 4, !tbaa !170
  %218 = call fast float @llvm.minnum.f32(float %217, float %216)
  store float %218, ptr %201, align 4, !tbaa !170
  %219 = load float, ptr %198, align 4, !tbaa !115
  br label %220

220:                                              ; preds = %215, %211, %206, %196
  %221 = phi float [ %218, %215 ], [ %200, %211 ], [ %200, %206 ], [ %200, %196 ]
  %222 = phi float [ %219, %215 ], [ %199, %211 ], [ %199, %206 ], [ %199, %196 ]
  %223 = fcmp fast ogt float %222, %3
  br i1 %223, label %224, label %226

224:                                              ; preds = %220
  %225 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 18
  store i16 2, ptr %225, align 2, !tbaa !173
  br label %231

226:                                              ; preds = %220
  %227 = fcmp fast ugt float %221, %3
  %228 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 18
  br i1 %227, label %230, label %229

229:                                              ; preds = %226
  store i16 1, ptr %228, align 2, !tbaa !173
  br label %231

230:                                              ; preds = %226
  store i16 3, ptr %228, align 2, !tbaa !173
  br label %231

231:                                              ; preds = %229, %230, %224
  %232 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 4
  store float %3, ptr %232, align 4, !tbaa !174
  call void @llvm.lifetime.end.p0(i64 60, ptr nonnull %6) #14
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @evaluate_emitter_anim(ptr noundef %0, ptr noundef %1, float noundef nofpclass(nan inf) %2) unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 9
  %5 = load ptr, ptr %4, align 8, !tbaa !175
  %6 = icmp eq ptr %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call fastcc void @evaluate_emitter_anim(ptr noundef %0, ptr noundef nonnull %5, float noundef nofpclass(nan inf) %2)
  br label %8

8:                                                ; preds = %7, %3
  %9 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !176
  tail call void @BKE_animsys_evaluate_animdata(ptr noundef %0, ptr noundef nonnull %1, ptr noundef %10, float noundef nofpclass(nan inf) %2, i16 noundef signext 2) #14
  tail call void @BKE_object_where_is_calc_time(ptr noundef %0, ptr noundef nonnull %1, float noundef nofpclass(nan inf) %2) #14
  ret void
}

declare nofpclass(nan inf) float @psys_get_dietime_from_cache(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @psys_get_target_system(ptr noundef %0, ptr nocapture noundef %1) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.ParticleTarget, ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !177
  %5 = icmp eq ptr %4, null
  %6 = icmp eq ptr %4, %0
  %7 = or i1 %5, %6
  %8 = getelementptr inbounds %struct.ParticleTarget, ptr %1, i64 0, i32 3
  %9 = load i32, ptr %8, align 8, !tbaa !179
  %10 = add nsw i32 %9, -1
  %11 = select i1 %7, ptr %0, ptr %4
  %12 = getelementptr inbounds %struct.Object, ptr %11, i64 0, i32 109
  %13 = tail call ptr @BLI_findlink(ptr noundef nonnull %12, i32 noundef %10) #14
  %14 = icmp eq ptr %13, null
  %15 = getelementptr inbounds %struct.ParticleTarget, ptr %1, i64 0, i32 4
  %16 = load i16, ptr %15, align 4, !tbaa !180
  %17 = and i16 %16, -3
  %18 = select i1 %14, i16 0, i16 2
  %19 = or i16 %17, %18
  store i16 %19, ptr %15, align 4, !tbaa !180
  ret ptr %13
}

declare ptr @BLI_findlink(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @psys_count_keyed_targets(ptr nocapture noundef readonly %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !87
  %4 = getelementptr inbounds %struct.ParticleSystem, ptr %3, i64 0, i32 17
  %5 = load ptr, ptr %4, align 8, !tbaa !181
  %6 = getelementptr inbounds %struct.ParticleSystem, ptr %3, i64 0, i32 33
  store i16 0, ptr %6, align 8, !tbaa !32
  %7 = icmp eq ptr %5, null
  br i1 %7, label %52, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 1
  %10 = getelementptr inbounds %struct.ParticleSystem, ptr %3, i64 0, i32 25
  br label %11

11:                                               ; preds = %8, %48
  %12 = phi i16 [ 1, %8 ], [ %49, %48 ]
  %13 = phi ptr [ %5, %8 ], [ %50, %48 ]
  %14 = load ptr, ptr %9, align 8, !tbaa !86
  %15 = getelementptr inbounds %struct.ParticleTarget, ptr %13, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !177
  %17 = icmp eq ptr %16, null
  %18 = icmp eq ptr %16, %14
  %19 = or i1 %17, %18
  %20 = getelementptr inbounds %struct.ParticleTarget, ptr %13, i64 0, i32 3
  %21 = load i32, ptr %20, align 8, !tbaa !179
  %22 = add nsw i32 %21, -1
  %23 = select i1 %19, ptr %14, ptr %16
  %24 = getelementptr inbounds %struct.Object, ptr %23, i64 0, i32 109
  %25 = tail call ptr @BLI_findlink(ptr noundef nonnull %24, i32 noundef %22) #14
  %26 = icmp eq ptr %25, null
  %27 = getelementptr inbounds %struct.ParticleTarget, ptr %13, i64 0, i32 4
  %28 = load i16, ptr %27, align 4, !tbaa !180
  %29 = and i16 %28, -3
  %30 = select i1 %26, i16 0, i16 2
  %31 = or i16 %29, %30
  store i16 %31, ptr %27, align 4, !tbaa !180
  br i1 %26, label %48, label %32

32:                                               ; preds = %11
  %33 = getelementptr inbounds %struct.ParticleSystem, ptr %25, i64 0, i32 26
  %34 = load i32, ptr %33, align 8, !tbaa !26
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %32
  %37 = load i16, ptr %6, align 8, !tbaa !32
  %38 = add i16 %37, %12
  store i16 %38, ptr %6, align 8, !tbaa !32
  %39 = load i32, ptr %10, align 4, !tbaa !21
  %40 = and i32 %39, 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %48, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.ParticleTarget, ptr %13, i64 0, i32 7
  %44 = load float, ptr %43, align 4, !tbaa !182
  %45 = fcmp fast une float %44, 0.000000e+00
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = add i16 %38, 1
  store i16 %47, ptr %6, align 8, !tbaa !32
  br label %48

48:                                               ; preds = %11, %32, %46, %42, %36
  %49 = phi i16 [ %12, %46 ], [ %12, %42 ], [ %12, %36 ], [ 0, %32 ], [ 0, %11 ]
  %50 = load ptr, ptr %13, align 8, !tbaa !183
  %51 = icmp eq ptr %50, null
  br i1 %51, label %52, label %11, !llvm.loop !184

52:                                               ; preds = %48, %1
  %53 = getelementptr inbounds %struct.ParticleSystem, ptr %3, i64 0, i32 25
  %54 = load i32, ptr %53, align 4, !tbaa !21
  %55 = and i32 %54, 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %63

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.ParticleSystem, ptr %3, i64 0, i32 2
  %59 = load ptr, ptr %58, align 8, !tbaa !5
  %60 = getelementptr inbounds %struct.ParticleSettings, ptr %59, i64 0, i32 120
  %61 = load i32, ptr %60, align 4, !tbaa !185
  %62 = trunc i32 %61 to i16
  br label %63

63:                                               ; preds = %52, %57
  %64 = phi i16 [ %62, %57 ], [ 1, %52 ]
  %65 = load i16, ptr %6, align 8, !tbaa !32
  %66 = mul i16 %65, %64
  store i16 %66, ptr %6, align 8, !tbaa !32
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @psys_make_temp_pointcache(ptr noundef %0, ptr noundef %1) local_unnamed_addr #2 {
  %3 = alloca %struct.PTCacheID, align 8
  %4 = getelementptr inbounds %struct.ParticleSystem, ptr %1, i64 0, i32 40
  %5 = load ptr, ptr %4, align 8, !tbaa !15
  %6 = getelementptr inbounds %struct.PointCache, ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 8, !tbaa !16
  %8 = and i32 %7, 64
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.PointCache, ptr %5, i64 0, i32 20
  %12 = load ptr, ptr %11, align 8, !tbaa !186
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  call void @llvm.lifetime.start.p0(i64 200, ptr nonnull %3) #14
  call void @BKE_ptcache_id_from_particles(ptr noundef nonnull %3, ptr noundef %0, ptr noundef nonnull %1) #14
  %15 = load i32, ptr %6, align 8, !tbaa !16
  %16 = and i32 %15, -65
  store i32 %16, ptr %6, align 8, !tbaa !16
  call void @BKE_ptcache_disk_to_mem(ptr noundef nonnull %3) #14
  %17 = load i32, ptr %6, align 8, !tbaa !16
  %18 = or i32 %17, 64
  store i32 %18, ptr %6, align 8, !tbaa !16
  call void @llvm.lifetime.end.p0(i64 200, ptr nonnull %3) #14
  br label %19

19:                                               ; preds = %14, %10, %2
  ret void
}

declare void @BKE_ptcache_id_from_particles(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BKE_ptcache_disk_to_mem(ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nosync nounwind sspstrong willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @psys_get_pointcache_start_end(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2, ptr nocapture noundef writeonly %3) local_unnamed_addr #8 {
  %5 = getelementptr inbounds %struct.ParticleSystem, ptr %1, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.ParticleSettings, ptr %6, i64 0, i32 53
  %8 = load float, ptr %7, align 4, !tbaa !113
  %9 = fptosi float %8 to i32
  %10 = tail call i32 @llvm.smax.i32(i32 %9, i32 1)
  store i32 %10, ptr %2, align 4, !tbaa !68
  %11 = getelementptr inbounds %struct.ParticleSettings, ptr %6, i64 0, i32 54
  %12 = load float, ptr %11, align 8, !tbaa !114
  %13 = getelementptr inbounds %struct.ParticleSettings, ptr %6, i64 0, i32 55
  %14 = load float, ptr %13, align 4, !tbaa !168
  %15 = fadd fast float %12, 1.000000e+00
  %16 = fadd fast float %15, %14
  %17 = fptosi float %16 to i32
  %18 = getelementptr inbounds %struct.Scene, ptr %0, i64 0, i32 22, i32 7
  %19 = load i32, ptr %18, align 8, !tbaa !187
  %20 = tail call i32 @llvm.smin.i32(i32 %19, i32 %17)
  store i32 %20, ptr %3, align 4, !tbaa !68
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @psys_update_particle_tree(ptr noundef %0, float noundef nofpclass(nan inf) %1) local_unnamed_addr #2 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %49, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 46
  %6 = load ptr, ptr %5, align 8, !tbaa !188
  %7 = icmp eq ptr %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 21
  %10 = load float, ptr %9, align 4, !tbaa !189
  %11 = fcmp fast une float %10, %1
  br i1 %11, label %12, label %49

12:                                               ; preds = %8, %4
  %13 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 26
  tail call void @BLI_kdtree_free(ptr noundef %6) #14
  %14 = load i32, ptr %13, align 8, !tbaa !26
  %15 = tail call ptr @BLI_kdtree_new(i32 noundef %14) #14
  store ptr %15, ptr %5, align 8, !tbaa !188
  %16 = load i32, ptr %13, align 8, !tbaa !26
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %46

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8, !tbaa !35
  br label %21

21:                                               ; preds = %18, %39
  %22 = phi i32 [ %40, %39 ], [ 0, %18 ]
  %23 = phi ptr [ %41, %39 ], [ %20, %18 ]
  %24 = getelementptr inbounds %struct.ParticleData, ptr %23, i64 0, i32 17
  %25 = load i16, ptr %24, align 4, !tbaa !36
  %26 = and i16 %25, 3
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %28, label %39

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.ParticleData, ptr %23, i64 0, i32 18
  %30 = load i16, ptr %29, align 2, !tbaa !173
  %31 = icmp eq i16 %30, 3
  br i1 %31, label %32, label %39

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.ParticleKey, ptr %23, i64 0, i32 4
  %34 = load float, ptr %33, align 4, !tbaa !174
  %35 = fcmp fast oeq float %34, %1
  %36 = load ptr, ptr %5, align 8, !tbaa !188
  %37 = getelementptr inbounds %struct.ParticleData, ptr %23, i64 0, i32 1
  %38 = select i1 %35, ptr %37, ptr %23
  tail call void @BLI_kdtree_insert(ptr noundef %36, i32 noundef %22, ptr noundef nonnull %38) #14
  br label %39

39:                                               ; preds = %32, %21, %28
  %40 = add nuw nsw i32 %22, 1
  %41 = getelementptr inbounds %struct.ParticleData, ptr %23, i64 1
  %42 = load i32, ptr %13, align 8, !tbaa !26
  %43 = icmp slt i32 %40, %42
  br i1 %43, label %21, label %44, !llvm.loop !190

44:                                               ; preds = %39
  %45 = load ptr, ptr %5, align 8, !tbaa !188
  br label %46

46:                                               ; preds = %44, %12
  %47 = phi ptr [ %45, %44 ], [ %15, %12 ]
  tail call void @BLI_kdtree_balance(ptr noundef %47) #14
  %48 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 21
  store float %1, ptr %48, align 4, !tbaa !189
  br label %49

49:                                               ; preds = %8, %46, %2
  ret void
}

declare ptr @BLI_kdtree_new(i32 noundef) local_unnamed_addr #3

declare void @BLI_kdtree_insert(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare void @BLI_kdtree_balance(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @psys_sph_init(ptr noundef %0, ptr nocapture noundef writeonly %1) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !87
  store ptr %4, ptr %1, align 8, !tbaa !44
  %5 = load ptr, ptr %3, align 8, !tbaa !87
  %6 = getelementptr inbounds %struct.ParticleSystem, ptr %5, i64 0, i32 17
  %7 = load ptr, ptr %6, align 8, !tbaa !181
  %8 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 1
  %9 = icmp eq ptr %7, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = getelementptr inbounds [10 x ptr], ptr %1, i64 0, i64 1
  store ptr null, ptr %11, align 8, !tbaa !44
  br label %34

12:                                               ; preds = %2
  %13 = load ptr, ptr %8, align 8, !tbaa !86
  %14 = getelementptr inbounds %struct.ParticleTarget, ptr %7, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !177
  %16 = icmp eq ptr %15, null
  %17 = icmp eq ptr %15, %13
  %18 = or i1 %16, %17
  %19 = getelementptr inbounds %struct.ParticleTarget, ptr %7, i64 0, i32 3
  %20 = load i32, ptr %19, align 8, !tbaa !179
  %21 = add nsw i32 %20, -1
  %22 = select i1 %18, ptr %13, ptr %15
  %23 = getelementptr inbounds %struct.Object, ptr %22, i64 0, i32 109
  %24 = tail call ptr @BLI_findlink(ptr noundef nonnull %23, i32 noundef %21) #14
  %25 = icmp eq ptr %24, null
  %26 = getelementptr inbounds %struct.ParticleTarget, ptr %7, i64 0, i32 4
  %27 = load i16, ptr %26, align 4, !tbaa !180
  %28 = and i16 %27, -3
  %29 = select i1 %25, i16 0, i16 2
  %30 = or i16 %28, %29
  store i16 %30, ptr %26, align 4, !tbaa !180
  %31 = getelementptr inbounds [10 x ptr], ptr %1, i64 0, i64 1
  store ptr %24, ptr %31, align 8, !tbaa !44
  %32 = load ptr, ptr %7, align 8, !tbaa !183
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %12, %10
  %35 = getelementptr inbounds [10 x ptr], ptr %1, i64 0, i64 2
  store ptr null, ptr %35, align 8, !tbaa !44
  br label %58

36:                                               ; preds = %12
  %37 = load ptr, ptr %8, align 8, !tbaa !86
  %38 = getelementptr inbounds %struct.ParticleTarget, ptr %32, i64 0, i32 2
  %39 = load ptr, ptr %38, align 8, !tbaa !177
  %40 = icmp eq ptr %39, null
  %41 = icmp eq ptr %39, %37
  %42 = or i1 %40, %41
  %43 = getelementptr inbounds %struct.ParticleTarget, ptr %32, i64 0, i32 3
  %44 = load i32, ptr %43, align 8, !tbaa !179
  %45 = add nsw i32 %44, -1
  %46 = select i1 %42, ptr %37, ptr %39
  %47 = getelementptr inbounds %struct.Object, ptr %46, i64 0, i32 109
  %48 = tail call ptr @BLI_findlink(ptr noundef nonnull %47, i32 noundef %45) #14
  %49 = icmp eq ptr %48, null
  %50 = getelementptr inbounds %struct.ParticleTarget, ptr %32, i64 0, i32 4
  %51 = load i16, ptr %50, align 4, !tbaa !180
  %52 = and i16 %51, -3
  %53 = select i1 %49, i16 0, i16 2
  %54 = or i16 %52, %53
  store i16 %54, ptr %50, align 4, !tbaa !180
  %55 = getelementptr inbounds [10 x ptr], ptr %1, i64 0, i64 2
  store ptr %48, ptr %55, align 8, !tbaa !44
  %56 = load ptr, ptr %32, align 8, !tbaa !183
  %57 = icmp eq ptr %56, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %36, %34
  %59 = getelementptr inbounds [10 x ptr], ptr %1, i64 0, i64 3
  store ptr null, ptr %59, align 8, !tbaa !44
  br label %82

60:                                               ; preds = %36
  %61 = load ptr, ptr %8, align 8, !tbaa !86
  %62 = getelementptr inbounds %struct.ParticleTarget, ptr %56, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8, !tbaa !177
  %64 = icmp eq ptr %63, null
  %65 = icmp eq ptr %63, %61
  %66 = or i1 %64, %65
  %67 = getelementptr inbounds %struct.ParticleTarget, ptr %56, i64 0, i32 3
  %68 = load i32, ptr %67, align 8, !tbaa !179
  %69 = add nsw i32 %68, -1
  %70 = select i1 %66, ptr %61, ptr %63
  %71 = getelementptr inbounds %struct.Object, ptr %70, i64 0, i32 109
  %72 = tail call ptr @BLI_findlink(ptr noundef nonnull %71, i32 noundef %69) #14
  %73 = icmp eq ptr %72, null
  %74 = getelementptr inbounds %struct.ParticleTarget, ptr %56, i64 0, i32 4
  %75 = load i16, ptr %74, align 4, !tbaa !180
  %76 = and i16 %75, -3
  %77 = select i1 %73, i16 0, i16 2
  %78 = or i16 %76, %77
  store i16 %78, ptr %74, align 4, !tbaa !180
  %79 = getelementptr inbounds [10 x ptr], ptr %1, i64 0, i64 3
  store ptr %72, ptr %79, align 8, !tbaa !44
  %80 = load ptr, ptr %56, align 8, !tbaa !183
  %81 = icmp eq ptr %80, null
  br i1 %81, label %82, label %84

82:                                               ; preds = %60, %58
  %83 = getelementptr inbounds [10 x ptr], ptr %1, i64 0, i64 4
  store ptr null, ptr %83, align 8, !tbaa !44
  br label %106

84:                                               ; preds = %60
  %85 = load ptr, ptr %8, align 8, !tbaa !86
  %86 = getelementptr inbounds %struct.ParticleTarget, ptr %80, i64 0, i32 2
  %87 = load ptr, ptr %86, align 8, !tbaa !177
  %88 = icmp eq ptr %87, null
  %89 = icmp eq ptr %87, %85
  %90 = or i1 %88, %89
  %91 = getelementptr inbounds %struct.ParticleTarget, ptr %80, i64 0, i32 3
  %92 = load i32, ptr %91, align 8, !tbaa !179
  %93 = add nsw i32 %92, -1
  %94 = select i1 %90, ptr %85, ptr %87
  %95 = getelementptr inbounds %struct.Object, ptr %94, i64 0, i32 109
  %96 = tail call ptr @BLI_findlink(ptr noundef nonnull %95, i32 noundef %93) #14
  %97 = icmp eq ptr %96, null
  %98 = getelementptr inbounds %struct.ParticleTarget, ptr %80, i64 0, i32 4
  %99 = load i16, ptr %98, align 4, !tbaa !180
  %100 = and i16 %99, -3
  %101 = select i1 %97, i16 0, i16 2
  %102 = or i16 %100, %101
  store i16 %102, ptr %98, align 4, !tbaa !180
  %103 = getelementptr inbounds [10 x ptr], ptr %1, i64 0, i64 4
  store ptr %96, ptr %103, align 8, !tbaa !44
  %104 = load ptr, ptr %80, align 8, !tbaa !183
  %105 = icmp eq ptr %104, null
  br i1 %105, label %106, label %108

106:                                              ; preds = %84, %82
  %107 = getelementptr inbounds [10 x ptr], ptr %1, i64 0, i64 5
  store ptr null, ptr %107, align 8, !tbaa !44
  br label %130

108:                                              ; preds = %84
  %109 = load ptr, ptr %8, align 8, !tbaa !86
  %110 = getelementptr inbounds %struct.ParticleTarget, ptr %104, i64 0, i32 2
  %111 = load ptr, ptr %110, align 8, !tbaa !177
  %112 = icmp eq ptr %111, null
  %113 = icmp eq ptr %111, %109
  %114 = or i1 %112, %113
  %115 = getelementptr inbounds %struct.ParticleTarget, ptr %104, i64 0, i32 3
  %116 = load i32, ptr %115, align 8, !tbaa !179
  %117 = add nsw i32 %116, -1
  %118 = select i1 %114, ptr %109, ptr %111
  %119 = getelementptr inbounds %struct.Object, ptr %118, i64 0, i32 109
  %120 = tail call ptr @BLI_findlink(ptr noundef nonnull %119, i32 noundef %117) #14
  %121 = icmp eq ptr %120, null
  %122 = getelementptr inbounds %struct.ParticleTarget, ptr %104, i64 0, i32 4
  %123 = load i16, ptr %122, align 4, !tbaa !180
  %124 = and i16 %123, -3
  %125 = select i1 %121, i16 0, i16 2
  %126 = or i16 %124, %125
  store i16 %126, ptr %122, align 4, !tbaa !180
  %127 = getelementptr inbounds [10 x ptr], ptr %1, i64 0, i64 5
  store ptr %120, ptr %127, align 8, !tbaa !44
  %128 = load ptr, ptr %104, align 8, !tbaa !183
  %129 = icmp eq ptr %128, null
  br i1 %129, label %130, label %132

130:                                              ; preds = %108, %106
  %131 = getelementptr inbounds [10 x ptr], ptr %1, i64 0, i64 6
  store ptr null, ptr %131, align 8, !tbaa !44
  br label %154

132:                                              ; preds = %108
  %133 = load ptr, ptr %8, align 8, !tbaa !86
  %134 = getelementptr inbounds %struct.ParticleTarget, ptr %128, i64 0, i32 2
  %135 = load ptr, ptr %134, align 8, !tbaa !177
  %136 = icmp eq ptr %135, null
  %137 = icmp eq ptr %135, %133
  %138 = or i1 %136, %137
  %139 = getelementptr inbounds %struct.ParticleTarget, ptr %128, i64 0, i32 3
  %140 = load i32, ptr %139, align 8, !tbaa !179
  %141 = add nsw i32 %140, -1
  %142 = select i1 %138, ptr %133, ptr %135
  %143 = getelementptr inbounds %struct.Object, ptr %142, i64 0, i32 109
  %144 = tail call ptr @BLI_findlink(ptr noundef nonnull %143, i32 noundef %141) #14
  %145 = icmp eq ptr %144, null
  %146 = getelementptr inbounds %struct.ParticleTarget, ptr %128, i64 0, i32 4
  %147 = load i16, ptr %146, align 4, !tbaa !180
  %148 = and i16 %147, -3
  %149 = select i1 %145, i16 0, i16 2
  %150 = or i16 %148, %149
  store i16 %150, ptr %146, align 4, !tbaa !180
  %151 = getelementptr inbounds [10 x ptr], ptr %1, i64 0, i64 6
  store ptr %144, ptr %151, align 8, !tbaa !44
  %152 = load ptr, ptr %128, align 8, !tbaa !183
  %153 = icmp eq ptr %152, null
  br i1 %153, label %154, label %156

154:                                              ; preds = %132, %130
  %155 = getelementptr inbounds [10 x ptr], ptr %1, i64 0, i64 7
  store ptr null, ptr %155, align 8, !tbaa !44
  br label %178

156:                                              ; preds = %132
  %157 = load ptr, ptr %8, align 8, !tbaa !86
  %158 = getelementptr inbounds %struct.ParticleTarget, ptr %152, i64 0, i32 2
  %159 = load ptr, ptr %158, align 8, !tbaa !177
  %160 = icmp eq ptr %159, null
  %161 = icmp eq ptr %159, %157
  %162 = or i1 %160, %161
  %163 = getelementptr inbounds %struct.ParticleTarget, ptr %152, i64 0, i32 3
  %164 = load i32, ptr %163, align 8, !tbaa !179
  %165 = add nsw i32 %164, -1
  %166 = select i1 %162, ptr %157, ptr %159
  %167 = getelementptr inbounds %struct.Object, ptr %166, i64 0, i32 109
  %168 = tail call ptr @BLI_findlink(ptr noundef nonnull %167, i32 noundef %165) #14
  %169 = icmp eq ptr %168, null
  %170 = getelementptr inbounds %struct.ParticleTarget, ptr %152, i64 0, i32 4
  %171 = load i16, ptr %170, align 4, !tbaa !180
  %172 = and i16 %171, -3
  %173 = select i1 %169, i16 0, i16 2
  %174 = or i16 %172, %173
  store i16 %174, ptr %170, align 4, !tbaa !180
  %175 = getelementptr inbounds [10 x ptr], ptr %1, i64 0, i64 7
  store ptr %168, ptr %175, align 8, !tbaa !44
  %176 = load ptr, ptr %152, align 8, !tbaa !183
  %177 = icmp eq ptr %176, null
  br i1 %177, label %178, label %180

178:                                              ; preds = %156, %154
  %179 = getelementptr inbounds [10 x ptr], ptr %1, i64 0, i64 8
  store ptr null, ptr %179, align 8, !tbaa !44
  br label %221

180:                                              ; preds = %156
  %181 = load ptr, ptr %8, align 8, !tbaa !86
  %182 = getelementptr inbounds %struct.ParticleTarget, ptr %176, i64 0, i32 2
  %183 = load ptr, ptr %182, align 8, !tbaa !177
  %184 = icmp eq ptr %183, null
  %185 = icmp eq ptr %183, %181
  %186 = or i1 %184, %185
  %187 = getelementptr inbounds %struct.ParticleTarget, ptr %176, i64 0, i32 3
  %188 = load i32, ptr %187, align 8, !tbaa !179
  %189 = add nsw i32 %188, -1
  %190 = select i1 %186, ptr %181, ptr %183
  %191 = getelementptr inbounds %struct.Object, ptr %190, i64 0, i32 109
  %192 = tail call ptr @BLI_findlink(ptr noundef nonnull %191, i32 noundef %189) #14
  %193 = icmp eq ptr %192, null
  %194 = getelementptr inbounds %struct.ParticleTarget, ptr %176, i64 0, i32 4
  %195 = load i16, ptr %194, align 4, !tbaa !180
  %196 = and i16 %195, -3
  %197 = select i1 %193, i16 0, i16 2
  %198 = or i16 %196, %197
  store i16 %198, ptr %194, align 4, !tbaa !180
  %199 = getelementptr inbounds [10 x ptr], ptr %1, i64 0, i64 8
  store ptr %192, ptr %199, align 8, !tbaa !44
  %200 = load ptr, ptr %176, align 8, !tbaa !183
  %201 = icmp eq ptr %200, null
  br i1 %201, label %221, label %202

202:                                              ; preds = %180
  %203 = load ptr, ptr %8, align 8, !tbaa !86
  %204 = getelementptr inbounds %struct.ParticleTarget, ptr %200, i64 0, i32 2
  %205 = load ptr, ptr %204, align 8, !tbaa !177
  %206 = icmp eq ptr %205, null
  %207 = icmp eq ptr %205, %203
  %208 = or i1 %206, %207
  %209 = getelementptr inbounds %struct.ParticleTarget, ptr %200, i64 0, i32 3
  %210 = load i32, ptr %209, align 8, !tbaa !179
  %211 = add nsw i32 %210, -1
  %212 = select i1 %208, ptr %203, ptr %205
  %213 = getelementptr inbounds %struct.Object, ptr %212, i64 0, i32 109
  %214 = tail call ptr @BLI_findlink(ptr noundef nonnull %213, i32 noundef %211) #14
  %215 = icmp eq ptr %214, null
  %216 = getelementptr inbounds %struct.ParticleTarget, ptr %200, i64 0, i32 4
  %217 = load i16, ptr %216, align 4, !tbaa !180
  %218 = and i16 %217, -3
  %219 = select i1 %215, i16 0, i16 2
  %220 = or i16 %218, %219
  store i16 %220, ptr %216, align 4, !tbaa !180
  br label %221

221:                                              ; preds = %180, %178, %202
  %222 = phi ptr [ %214, %202 ], [ null, %178 ], [ null, %180 ]
  %223 = getelementptr inbounds [10 x ptr], ptr %1, i64 0, i64 9
  store ptr %222, ptr %223, align 8
  %224 = tail call i32 @psys_uses_gravity(ptr noundef nonnull %0) #14
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %229, label %226

226:                                              ; preds = %221
  %227 = load ptr, ptr %0, align 8, !tbaa !76
  %228 = getelementptr inbounds %struct.Scene, ptr %227, i64 0, i32 40
  br label %229

229:                                              ; preds = %221, %226
  %230 = phi ptr [ %228, %226 ], [ null, %221 ]
  %231 = getelementptr inbounds %struct.SPHData, ptr %1, i64 0, i32 4
  store ptr %230, ptr %231, align 8
  %232 = load ptr, ptr %3, align 8, !tbaa !87
  %233 = getelementptr inbounds %struct.ParticleSystem, ptr %232, i64 0, i32 44
  %234 = load i32, ptr %233, align 8, !tbaa !48
  %235 = tail call ptr @BLI_edgehash_new_ex(ptr noundef nonnull @__func__.sph_springhash_build, i32 noundef %234) #14
  %236 = load i32, ptr %233, align 8, !tbaa !48
  %237 = icmp sgt i32 %236, 0
  br i1 %237, label %238, label %254

238:                                              ; preds = %229
  %239 = getelementptr inbounds %struct.ParticleSystem, ptr %232, i64 0, i32 43
  %240 = load ptr, ptr %239, align 8, !tbaa !46
  br label %241

241:                                              ; preds = %241, %238
  %242 = phi i64 [ 0, %238 ], [ %248, %241 ]
  %243 = phi ptr [ %240, %238 ], [ %250, %241 ]
  %244 = getelementptr inbounds %struct.ParticleSpring, ptr %243, i64 0, i32 1
  %245 = load i32, ptr %244, align 4, !tbaa !68
  %246 = getelementptr inbounds %struct.ParticleSpring, ptr %243, i64 0, i32 1, i64 1
  %247 = load i32, ptr %246, align 4, !tbaa !68
  %248 = add nuw nsw i64 %242, 1
  %249 = inttoptr i64 %248 to ptr
  tail call void @BLI_edgehash_insert(ptr noundef %235, i32 noundef %245, i32 noundef %247, ptr noundef nonnull %249) #14
  %250 = getelementptr inbounds %struct.ParticleSpring, ptr %243, i64 1
  %251 = load i32, ptr %233, align 8, !tbaa !48
  %252 = sext i32 %251 to i64
  %253 = icmp slt i64 %248, %252
  br i1 %253, label %241, label %254, !llvm.loop !191

254:                                              ; preds = %241, %229
  %255 = getelementptr inbounds %struct.SPHData, ptr %1, i64 0, i32 3
  store ptr %235, ptr %255, align 8, !tbaa !192
  %256 = getelementptr inbounds %struct.SPHData, ptr %1, i64 0, i32 1
  store ptr null, ptr %256, align 8, !tbaa !194
  %257 = getelementptr inbounds %struct.SPHData, ptr %1, i64 0, i32 2
  store float 1.000000e+00, ptr %257, align 8, !tbaa !195
  %258 = load ptr, ptr %3, align 8, !tbaa !87
  %259 = getelementptr inbounds %struct.ParticleSystem, ptr %258, i64 0, i32 2
  %260 = load ptr, ptr %259, align 8, !tbaa !5
  %261 = getelementptr inbounds %struct.ParticleSettings, ptr %260, i64 0, i32 3
  %262 = load ptr, ptr %261, align 8, !tbaa !196
  %263 = getelementptr inbounds %struct.SPHFluidSettings, ptr %262, i64 0, i32 15
  %264 = load i16, ptr %263, align 4, !tbaa !197
  %265 = icmp eq i16 %264, 0
  %266 = select i1 %265, ptr @sph_force_cb, ptr @sphclassical_force_cb
  %267 = select i1 %265, ptr @sph_density_accum_cb, ptr @sphclassical_density_accum_cb
  %268 = select i1 %265, float 1.000000e+00, float 5.000000e-01
  %269 = getelementptr inbounds %struct.SPHData, ptr %1, i64 0, i32 9
  store ptr %266, ptr %269, align 8
  %270 = getelementptr inbounds %struct.SPHData, ptr %1, i64 0, i32 10
  store ptr %267, ptr %270, align 8
  %271 = getelementptr inbounds %struct.SPHData, ptr %1, i64 0, i32 5
  store float %268, ptr %271, align 8
  ret void
}

declare i32 @psys_uses_gravity(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal void @sph_force_cb(ptr nocapture noundef %0, ptr noundef %1, ptr nocapture noundef %2, ptr nocapture readnone %3) #2 {
  %5 = alloca %struct.SPHRangeData, align 8
  %6 = alloca [2 x float], align 8
  %7 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !194
  %9 = load ptr, ptr %0, align 8, !tbaa !44
  %10 = getelementptr inbounds %struct.ParticleSystem, ptr %9, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !5
  %12 = getelementptr inbounds %struct.ParticleSettings, ptr %11, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !196
  call void @llvm.lifetime.start.p0(i64 8240, ptr nonnull %5) #14
  %14 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 4
  %15 = load ptr, ptr %14, align 8, !tbaa !199
  %16 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !192
  %18 = getelementptr inbounds %struct.SPHFluidSettings, ptr %13, i64 0, i32 7
  %19 = load float, ptr %18, align 4, !tbaa !200
  %20 = getelementptr inbounds %struct.SPHFluidSettings, ptr %13, i64 0, i32 8
  %21 = load float, ptr %20, align 4, !tbaa !201
  %22 = getelementptr inbounds %struct.SPHFluidSettings, ptr %13, i64 0, i32 13
  %23 = load i32, ptr %22, align 4, !tbaa !202
  %24 = and i32 %23, 32
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %25, float 1.000000e+00, float %19
  %27 = fmul fast float %26, %21
  %28 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 2
  %29 = load float, ptr %28, align 8, !tbaa !195
  %30 = getelementptr inbounds %struct.SPHFluidSettings, ptr %13, i64 0, i32 1
  %31 = load float, ptr %30, align 4, !tbaa !203
  %32 = load float, ptr %13, align 4, !tbaa !204
  %33 = and i32 %23, 16
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %4
  %36 = getelementptr inbounds %struct.ParticleData, ptr %8, i64 0, i32 13
  %37 = load float, ptr %36, align 4, !tbaa !205
  %38 = fmul fast float %37, 4.000000e+00
  br label %39

39:                                               ; preds = %4, %35
  %40 = phi fast float [ %38, %35 ], [ 1.000000e+00, %4 ]
  %41 = fmul fast float %40, %32
  %42 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 5
  %43 = load float, ptr %42, align 8, !tbaa !206
  %44 = fmul fast float %41, %43
  %45 = getelementptr inbounds %struct.SPHFluidSettings, ptr %13, i64 0, i32 11
  %46 = load float, ptr %45, align 4, !tbaa !207
  %47 = and i32 %23, 8
  %48 = icmp eq i32 %47, 0
  %49 = select fast i1 %48, float 1.000000e+00, float 0x4013147AE0000000
  %50 = fmul fast float %46, %49
  %51 = getelementptr inbounds %struct.SPHFluidSettings, ptr %13, i64 0, i32 2
  %52 = load float, ptr %51, align 4, !tbaa !208
  %53 = and i32 %23, 64
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %39
  %56 = getelementptr inbounds %struct.ParticleData, ptr %8, i64 0, i32 13
  %57 = load float, ptr %56, align 4, !tbaa !205
  %58 = fmul fast float %57, 0x4004B43960000000
  br label %59

59:                                               ; preds = %39, %55
  %60 = phi fast float [ %58, %55 ], [ 1.000000e+00, %39 ]
  %61 = fmul fast float %60, %52
  %62 = getelementptr inbounds %struct.SPHFluidSettings, ptr %13, i64 0, i32 9
  %63 = load float, ptr %62, align 4, !tbaa !209
  %64 = getelementptr inbounds %struct.SPHFluidSettings, ptr %13, i64 0, i32 10
  %65 = load float, ptr %64, align 4, !tbaa !210
  %66 = and i32 %23, 4
  %67 = icmp eq i32 %66, 0
  %68 = select i1 %67, float 1.000000e+00, float %63
  %69 = fmul fast float %65, %68
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #14
  %70 = getelementptr inbounds %struct.ParticleSystem, ptr %9, i64 0, i32 3
  %71 = load ptr, ptr %70, align 8, !tbaa !35
  %72 = ptrtoint ptr %8 to i64
  %73 = ptrtoint ptr %71 to i64
  %74 = sub i64 %72, %73
  %75 = sdiv exact i64 %74, 200
  %76 = trunc i64 %75 to i32
  %77 = getelementptr inbounds [2 x float], ptr %6, i64 0, i64 1
  store <2 x float> zeroinitializer, ptr %6, align 8, !tbaa !79
  %78 = getelementptr inbounds %struct.SPHRangeData, ptr %5, i64 0, i32 2
  store ptr %6, ptr %78, align 8, !tbaa !211
  %79 = getelementptr inbounds %struct.SPHRangeData, ptr %5, i64 0, i32 5
  store float %44, ptr %79, align 8, !tbaa !213
  %80 = getelementptr inbounds %struct.SPHRangeData, ptr %5, i64 0, i32 4
  store ptr %8, ptr %80, align 8, !tbaa !214
  %81 = getelementptr inbounds %struct.SPHRangeData, ptr %5, i64 0, i32 6
  store float %29, ptr %81, align 4, !tbaa !215
  call fastcc void @sph_evaluate_func(ptr noundef null, ptr noundef nonnull %0, ptr noundef %1, ptr noundef nonnull %5, float noundef nofpclass(nan inf) %41, ptr noundef nonnull @sph_density_accum_cb)
  %82 = load float, ptr %6, align 8, !tbaa !79
  %83 = load float, ptr %77, align 4, !tbaa !79
  %84 = fsub fast float %82, %50
  %85 = fmul fast float %84, %63
  %86 = fmul fast float %69, %83
  %87 = getelementptr inbounds %struct.SPHRangeData, ptr %5, i64 0, i32 1
  %88 = load i32, ptr %87, align 8, !tbaa !216
  %89 = icmp sgt i32 %88, 0
  br i1 %89, label %90, label %326

90:                                               ; preds = %59
  %91 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 4
  %92 = getelementptr inbounds float, ptr %1, i64 2
  %93 = getelementptr inbounds float, ptr %2, i64 2
  %94 = fcmp fast ogt float %19, 0.000000e+00
  %95 = fcmp fast ogt float %27, 0.000000e+00
  %96 = select i1 %94, i1 true, i1 %95
  %97 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 1
  %98 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 1, i64 1
  %99 = fmul fast float %19, 5.000000e-01
  %100 = fmul fast float %27, 5.000000e-01
  %101 = fcmp fast ogt float %31, 0.000000e+00
  %102 = icmp ne ptr %17, null
  %103 = fmul fast float %31, -1.000000e+01
  %104 = getelementptr inbounds %struct.SPHFluidSettings, ptr %13, i64 0, i32 14
  %105 = getelementptr inbounds %struct.ParticleData, ptr %8, i64 0, i32 1, i32 4
  %106 = getelementptr inbounds %struct.ParticleData, ptr %8, i64 0, i32 6
  %107 = fdiv fast float 1.000000e+00, %44
  %108 = fdiv fast float 1.000000e+00, %29
  br label %109

109:                                              ; preds = %90, %321
  %110 = phi ptr [ %5, %90 ], [ %323, %321 ]
  %111 = phi i32 [ 0, %90 ], [ %322, %321 ]
  %112 = load ptr, ptr %110, align 8, !tbaa !217
  %113 = getelementptr inbounds %struct.ParticleSystem, ptr %112, i64 0, i32 3
  %114 = load ptr, ptr %113, align 8, !tbaa !35
  %115 = getelementptr inbounds %struct.SPHNeighbor, ptr %110, i64 0, i32 1
  %116 = load i32, ptr %115, align 8, !tbaa !219
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds %struct.ParticleData, ptr %114, i64 %117, i32 1
  %119 = getelementptr inbounds %struct.ParticleData, ptr %114, i64 %117, i32 1, i32 1
  %120 = load float, ptr %91, align 4, !tbaa !220
  %121 = getelementptr inbounds float, ptr %118, i64 2
  %122 = load float, ptr %121, align 4, !tbaa !79
  %123 = getelementptr inbounds float, ptr %119, i64 2
  %124 = load float, ptr %123, align 4, !tbaa !79
  %125 = fmul fast float %124, %120
  %126 = fadd fast float %125, %122
  %127 = load <2 x float>, ptr %118, align 4, !tbaa !79
  %128 = load <2 x float>, ptr %119, align 4, !tbaa !79
  %129 = insertelement <2 x float> poison, float %120, i64 0
  %130 = shufflevector <2 x float> %129, <2 x float> poison, <2 x i32> zeroinitializer
  %131 = fmul fast <2 x float> %128, %130
  %132 = fadd fast <2 x float> %131, %127
  %133 = load <2 x float>, ptr %1, align 4, !tbaa !79
  %134 = fsub fast <2 x float> %132, %133
  %135 = load float, ptr %92, align 4, !tbaa !79
  %136 = fsub fast float %126, %135
  %137 = fmul fast <2 x float> %134, %134
  %138 = shufflevector <2 x float> %137, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %139 = fadd fast <2 x float> %138, %137
  %140 = extractelement <2 x float> %139, i64 0
  %141 = fmul fast float %136, %136
  %142 = fadd fast float %140, %141
  %143 = fcmp fast ogt float %142, 0x38AA95A5C0000000
  br i1 %143, label %144, label %151

144:                                              ; preds = %109
  %145 = call fast float @llvm.sqrt.f32(float %142)
  %146 = fdiv fast float 1.000000e+00, %145
  %147 = insertelement <2 x float> poison, float %146, i64 0
  %148 = shufflevector <2 x float> %147, <2 x float> poison, <2 x i32> zeroinitializer
  %149 = fmul fast <2 x float> %148, %134
  %150 = fmul fast float %146, %136
  br label %151

151:                                              ; preds = %109, %144
  %152 = phi float [ %150, %144 ], [ 0.000000e+00, %109 ]
  %153 = phi float [ %145, %144 ], [ 0.000000e+00, %109 ]
  %154 = phi <2 x float> [ %149, %144 ], [ zeroinitializer, %109 ]
  %155 = fmul fast float %153, %107
  %156 = fsub fast float 1.000000e+00, %155
  %157 = getelementptr inbounds %struct.ParticleSystem, ptr %112, i64 0, i32 2
  %158 = load ptr, ptr %157, align 8, !tbaa !5
  %159 = getelementptr inbounds %struct.ParticleSettings, ptr %158, i64 0, i32 81
  %160 = load float, ptr %159, align 4, !tbaa !221
  %161 = fmul fast float %156, %160
  %162 = fmul fast float %161, %108
  %163 = getelementptr inbounds %struct.ParticleSettings, ptr %158, i64 0, i32 5
  %164 = load i32, ptr %163, align 8, !tbaa !222
  %165 = and i32 %164, 65536
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %171, label %167

167:                                              ; preds = %151
  %168 = getelementptr inbounds %struct.ParticleData, ptr %114, i64 %117, i32 13
  %169 = load float, ptr %168, align 4, !tbaa !205
  %170 = fmul fast float %169, %162
  br label %171

171:                                              ; preds = %167, %151
  %172 = phi float [ %170, %167 ], [ %162, %151 ]
  %173 = fmul fast float %86, %172
  %174 = fadd fast float %173, %85
  %175 = fneg fast float %172
  %176 = fmul fast float %174, %175
  %177 = insertelement <2 x float> poison, float %176, i64 0
  %178 = shufflevector <2 x float> %177, <2 x float> poison, <2 x i32> zeroinitializer
  %179 = fmul fast <2 x float> %178, %154
  %180 = load <2 x float>, ptr %2, align 4, !tbaa !79
  %181 = fadd fast <2 x float> %179, %180
  store <2 x float> %181, ptr %2, align 4, !tbaa !79
  %182 = fmul fast float %176, %152
  %183 = load float, ptr %93, align 4, !tbaa !79
  %184 = fadd fast float %183, %182
  store float %184, ptr %93, align 4, !tbaa !79
  br i1 %96, label %185, label %227

185:                                              ; preds = %171
  %186 = load float, ptr %97, align 4, !tbaa !79
  %187 = extractelement <2 x float> %128, i64 0
  %188 = fsub fast float %187, %186
  %189 = extractelement <2 x float> %154, i64 0
  %190 = fmul fast float %188, %189
  %191 = load <2 x float>, ptr %98, align 4, !tbaa !79
  %192 = shufflevector <2 x float> %128, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %193 = insertelement <2 x float> %192, float %124, i64 1
  %194 = fsub fast <2 x float> %193, %191
  %195 = shufflevector <2 x float> %154, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %196 = insertelement <2 x float> %195, float %152, i64 1
  %197 = fmul fast <2 x float> %194, %196
  %198 = extractelement <2 x float> %197, i64 0
  %199 = fadd fast float %198, %190
  %200 = extractelement <2 x float> %197, i64 1
  %201 = fadd fast float %199, %200
  %202 = fcmp fast olt float %201, 0.000000e+00
  %203 = and i1 %94, %202
  br i1 %203, label %204, label %213

204:                                              ; preds = %185
  %205 = fmul fast float %99, %172
  %206 = fmul fast float %205, %201
  %207 = insertelement <2 x float> poison, float %206, i64 0
  %208 = shufflevector <2 x float> %207, <2 x float> poison, <2 x i32> zeroinitializer
  %209 = fmul fast <2 x float> %208, %154
  %210 = fadd fast <2 x float> %209, %181
  store <2 x float> %210, ptr %2, align 4, !tbaa !79
  %211 = fmul fast float %206, %152
  %212 = fadd fast float %211, %184
  store float %212, ptr %93, align 4, !tbaa !79
  br label %213

213:                                              ; preds = %204, %185
  %214 = phi float [ %212, %204 ], [ %184, %185 ]
  %215 = phi <2 x float> [ %210, %204 ], [ %181, %185 ]
  %216 = fcmp fast ogt float %201, 0.000000e+00
  %217 = select i1 %216, i1 %95, i1 false
  br i1 %217, label %218, label %227

218:                                              ; preds = %213
  %219 = fmul fast float %100, %172
  %220 = fmul fast float %219, %201
  %221 = insertelement <2 x float> poison, float %220, i64 0
  %222 = shufflevector <2 x float> %221, <2 x float> poison, <2 x i32> zeroinitializer
  %223 = fmul fast <2 x float> %222, %154
  %224 = fadd fast <2 x float> %215, %223
  store <2 x float> %224, ptr %2, align 4, !tbaa !79
  %225 = fmul fast float %220, %152
  %226 = fadd fast float %214, %225
  store float %226, ptr %93, align 4, !tbaa !79
  br label %227

227:                                              ; preds = %213, %218, %171
  %228 = phi float [ %214, %213 ], [ %226, %218 ], [ %184, %171 ]
  %229 = phi <2 x float> [ %215, %213 ], [ %224, %218 ], [ %181, %171 ]
  br i1 %101, label %230, label %321

230:                                              ; preds = %227
  %231 = load ptr, ptr %0, align 8, !tbaa !44
  %232 = icmp eq ptr %112, %231
  br i1 %232, label %233, label %311

233:                                              ; preds = %230
  %234 = load i32, ptr %22, align 4, !tbaa !202
  %235 = and i32 %234, 1
  %236 = icmp ne i32 %235, 0
  %237 = select i1 %236, i1 %102, i1 false
  br i1 %237, label %238, label %311

238:                                              ; preds = %233
  %239 = call ptr @BLI_edgehash_lookup(ptr noundef nonnull %17, i32 noundef %76, i32 noundef %116) #14
  %240 = ptrtoint ptr %239 to i64
  %241 = and i64 %240, 4294967295
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %263, label %243

243:                                              ; preds = %238
  %244 = load ptr, ptr %0, align 8, !tbaa !44
  %245 = getelementptr inbounds %struct.ParticleSystem, ptr %244, i64 0, i32 43
  %246 = load ptr, ptr %245, align 8, !tbaa !46
  %247 = shl i64 %240, 32
  %248 = ashr exact i64 %247, 32
  %249 = getelementptr inbounds %struct.ParticleSpring, ptr %246, i64 %248
  %250 = getelementptr inbounds %struct.ParticleSpring, ptr %249, i64 -1
  %251 = fmul fast float %103, %156
  %252 = load float, ptr %250, align 4, !tbaa !223
  %253 = fsub fast float %252, %153
  %254 = fmul fast float %251, %253
  %255 = insertelement <2 x float> poison, float %254, i64 0
  %256 = shufflevector <2 x float> %255, <2 x float> poison, <2 x i32> zeroinitializer
  %257 = fmul fast <2 x float> %256, %154
  %258 = load <2 x float>, ptr %2, align 4, !tbaa !79
  %259 = fadd fast <2 x float> %257, %258
  store <2 x float> %259, ptr %2, align 4, !tbaa !79
  %260 = fmul fast float %254, %152
  %261 = load float, ptr %93, align 4, !tbaa !79
  %262 = fadd fast float %261, %260
  store float %262, ptr %93, align 4, !tbaa !79
  br label %321

263:                                              ; preds = %238
  %264 = load i32, ptr %104, align 4, !tbaa !225
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %272, label %266

266:                                              ; preds = %263
  %267 = load float, ptr %105, align 4, !tbaa !226
  %268 = load float, ptr %106, align 4, !tbaa !115
  %269 = fsub fast float %267, %268
  %270 = sitofp i32 %264 to float
  %271 = fcmp fast ugt float %269, %270
  br i1 %271, label %321, label %272

272:                                              ; preds = %266, %263
  %273 = load i32, ptr %115, align 8, !tbaa !219
  %274 = load i32, ptr %22, align 4, !tbaa !202
  %275 = and i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = select fast i1 %276, float %61, float %153
  %278 = load ptr, ptr %0, align 8, !tbaa !44
  %279 = getelementptr inbounds %struct.ParticleSystem, ptr %278, i64 0, i32 45
  %280 = load i32, ptr %279, align 4, !tbaa !47
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %286, label %282

282:                                              ; preds = %272
  %283 = getelementptr inbounds %struct.ParticleSystem, ptr %278, i64 0, i32 43
  %284 = load ptr, ptr %283, align 8, !tbaa !46
  %285 = icmp eq ptr %284, null
  br i1 %285, label %286, label %290

286:                                              ; preds = %282, %272
  store i32 256, ptr %279, align 4, !tbaa !47
  %287 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %288 = call ptr %287(i64 noundef 4096, ptr noundef nonnull @.str.5) #14
  %289 = getelementptr inbounds %struct.ParticleSystem, ptr %278, i64 0, i32 43
  store ptr %288, ptr %289, align 8, !tbaa !46
  br label %300

290:                                              ; preds = %282
  %291 = getelementptr inbounds %struct.ParticleSystem, ptr %278, i64 0, i32 44
  %292 = load i32, ptr %291, align 8, !tbaa !48
  %293 = icmp eq i32 %292, %280
  br i1 %293, label %294, label %300

294:                                              ; preds = %290
  %295 = shl nsw i32 %280, 1
  store i32 %295, ptr %279, align 4, !tbaa !47
  %296 = load ptr, ptr @MEM_reallocN_id, align 8, !tbaa !44
  %297 = sext i32 %295 to i64
  %298 = shl nsw i64 %297, 4
  %299 = call ptr %296(ptr noundef nonnull %284, i64 noundef %298, ptr noundef nonnull @__func__.sph_spring_add) #14
  store ptr %299, ptr %283, align 8, !tbaa !46
  br label %300

300:                                              ; preds = %286, %290, %294
  %301 = phi ptr [ %284, %290 ], [ %299, %294 ], [ %288, %286 ]
  %302 = getelementptr inbounds %struct.ParticleSystem, ptr %278, i64 0, i32 44
  %303 = load i32, ptr %302, align 8, !tbaa !48
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds %struct.ParticleSpring, ptr %301, i64 %304
  store float %277, ptr %305, align 4
  %306 = getelementptr inbounds i8, ptr %305, i64 4
  store i32 %76, ptr %306, align 4
  %307 = getelementptr inbounds i8, ptr %305, i64 8
  store i32 %273, ptr %307, align 4
  %308 = getelementptr inbounds i8, ptr %305, i64 12
  store i32 0, ptr %308, align 4
  %309 = load i32, ptr %302, align 8, !tbaa !48
  %310 = add nsw i32 %309, 1
  store i32 %310, ptr %302, align 8, !tbaa !48
  br label %321

311:                                              ; preds = %233, %230
  %312 = fsub fast float %61, %153
  %313 = fmul fast float %103, %312
  %314 = fmul fast float %313, %156
  %315 = insertelement <2 x float> poison, float %314, i64 0
  %316 = shufflevector <2 x float> %315, <2 x float> poison, <2 x i32> zeroinitializer
  %317 = fmul fast <2 x float> %316, %154
  %318 = fadd fast <2 x float> %229, %317
  store <2 x float> %318, ptr %2, align 4, !tbaa !79
  %319 = fmul fast float %314, %152
  %320 = fadd fast float %228, %319
  store float %320, ptr %93, align 4, !tbaa !79
  br label %321

321:                                              ; preds = %227, %243, %300, %266, %311
  %322 = add nuw nsw i32 %111, 1
  %323 = getelementptr inbounds %struct.SPHNeighbor, ptr %110, i64 1
  %324 = load i32, ptr %87, align 8, !tbaa !216
  %325 = icmp slt i32 %322, %324
  br i1 %325, label %109, label %326, !llvm.loop !227

326:                                              ; preds = %321, %59
  %327 = phi i32 [ %88, %59 ], [ %324, %321 ]
  %328 = getelementptr inbounds %struct.SPHFluidSettings, ptr %13, i64 0, i32 12
  %329 = load float, ptr %328, align 4, !tbaa !228
  %330 = fcmp fast ogt float %329, 0.000000e+00
  %331 = icmp ne ptr %15, null
  %332 = select i1 %330, i1 %331, i1 false
  br i1 %332, label %333, label %351

333:                                              ; preds = %326
  %334 = fmul fast float %329, %84
  %335 = load float, ptr %15, align 4, !tbaa !79
  %336 = fmul fast float %335, %334
  %337 = load float, ptr %2, align 4, !tbaa !79
  %338 = fadd fast float %337, %336
  store float %338, ptr %2, align 4, !tbaa !79
  %339 = getelementptr inbounds float, ptr %15, i64 1
  %340 = load float, ptr %339, align 4, !tbaa !79
  %341 = fmul fast float %340, %334
  %342 = getelementptr inbounds float, ptr %2, i64 1
  %343 = load float, ptr %342, align 4, !tbaa !79
  %344 = fadd fast float %343, %341
  store float %344, ptr %342, align 4, !tbaa !79
  %345 = getelementptr inbounds float, ptr %15, i64 2
  %346 = load float, ptr %345, align 4, !tbaa !79
  %347 = fmul fast float %346, %334
  %348 = getelementptr inbounds float, ptr %2, i64 2
  %349 = load float, ptr %348, align 4, !tbaa !79
  %350 = fadd fast float %349, %347
  store float %350, ptr %348, align 4, !tbaa !79
  br label %351

351:                                              ; preds = %333, %326
  %352 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 6
  %353 = load i32, ptr %352, align 4, !tbaa !229
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %426

355:                                              ; preds = %351
  %356 = load ptr, ptr %0, align 8, !tbaa !44
  %357 = getelementptr inbounds %struct.ParticleSystem, ptr %356, i64 0, i32 2
  %358 = load ptr, ptr %357, align 8, !tbaa !5
  %359 = getelementptr inbounds %struct.ParticleSettings, ptr %358, i64 0, i32 67
  %360 = load i16, ptr %359, align 4, !tbaa !230
  %361 = and i16 %360, 1
  %362 = icmp eq i16 %361, 0
  br i1 %362, label %426, label %363

363:                                              ; preds = %355
  %364 = icmp sgt i32 %327, 0
  br i1 %364, label %365, label %420

365:                                              ; preds = %363
  %366 = load ptr, ptr %80, align 8, !tbaa !214
  %367 = getelementptr inbounds %struct.ParticleData, ptr %366, i64 0, i32 1
  %368 = load float, ptr %367, align 4, !tbaa !79
  %369 = getelementptr inbounds %struct.ParticleData, ptr %366, i64 0, i32 1, i32 0, i64 1
  %370 = load <2 x float>, ptr %369, align 4, !tbaa !79
  %371 = zext i32 %327 to i64
  br label %372

372:                                              ; preds = %372, %365
  %373 = phi i64 [ 0, %365 ], [ %404, %372 ]
  %374 = phi float [ 0.000000e+00, %365 ], [ %397, %372 ]
  %375 = phi float [ 0.000000e+00, %365 ], [ %403, %372 ]
  %376 = phi <2 x float> [ zeroinitializer, %365 ], [ %400, %372 ]
  %377 = getelementptr inbounds [512 x %struct.SPHNeighbor], ptr %5, i64 0, i64 %373
  %378 = load ptr, ptr %377, align 8, !tbaa !217
  %379 = getelementptr inbounds %struct.ParticleSystem, ptr %378, i64 0, i32 3
  %380 = load ptr, ptr %379, align 8, !tbaa !35
  %381 = getelementptr inbounds [512 x %struct.SPHNeighbor], ptr %5, i64 0, i64 %373, i32 1
  %382 = load i32, ptr %381, align 8, !tbaa !219
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds %struct.ParticleData, ptr %380, i64 %383, i32 1
  %385 = load float, ptr %384, align 4, !tbaa !79
  %386 = fsub fast float %368, %385
  %387 = getelementptr inbounds float, ptr %384, i64 1
  %388 = fmul fast float %386, %386
  %389 = load <2 x float>, ptr %387, align 4, !tbaa !79
  %390 = fsub fast <2 x float> %370, %389
  %391 = fmul fast <2 x float> %390, %390
  %392 = extractelement <2 x float> %391, i64 0
  %393 = fadd fast float %392, %388
  %394 = extractelement <2 x float> %391, i64 1
  %395 = fadd fast float %393, %394
  %396 = call fast float @llvm.sqrt.f32(float %395)
  %397 = fadd fast float %396, %374
  %398 = getelementptr inbounds %struct.ParticleData, ptr %380, i64 %383, i32 1, i32 1
  %399 = load <2 x float>, ptr %398, align 4, !tbaa !79
  %400 = fadd fast <2 x float> %399, %376
  %401 = getelementptr inbounds float, ptr %398, i64 2
  %402 = load float, ptr %401, align 4, !tbaa !79
  %403 = fadd fast float %402, %375
  %404 = add nuw nsw i64 %373, 1
  %405 = icmp eq i64 %404, %371
  br i1 %405, label %406, label %372, !llvm.loop !231

406:                                              ; preds = %372
  %407 = getelementptr inbounds %struct.ParticleSettings, ptr %358, i64 0, i32 3
  %408 = load ptr, ptr %407, align 8, !tbaa !196
  %409 = load float, ptr %408, align 4, !tbaa !204
  %410 = fadd fast float %409, %397
  %411 = sitofp i32 %327 to float
  %412 = fdiv fast float %410, %411
  %413 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 7
  store float %412, ptr %413, align 8, !tbaa !232
  %414 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 8
  %415 = fdiv fast float 1.000000e+00, %411
  %416 = insertelement <2 x float> poison, float %415, i64 0
  %417 = shufflevector <2 x float> %416, <2 x float> poison, <2 x i32> zeroinitializer
  %418 = fmul fast <2 x float> %400, %417
  store <2 x float> %418, ptr %414, align 4, !tbaa !79
  %419 = fmul fast float %403, %415
  br label %423

420:                                              ; preds = %363
  %421 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 7
  store <2 x float> <float 0x47EFFFFFE0000000, float 0.000000e+00>, ptr %421, align 8, !tbaa !79
  %422 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 8, i64 1
  store float 0.000000e+00, ptr %422, align 4, !tbaa !79
  br label %423

423:                                              ; preds = %406, %420
  %424 = phi float [ 0.000000e+00, %420 ], [ %419, %406 ]
  %425 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 8, i64 2
  store float %424, ptr %425, align 4, !tbaa !79
  br label %426

426:                                              ; preds = %423, %355, %351
  %427 = add nsw i32 %353, 1
  store i32 %427, ptr %352, align 4, !tbaa !229
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #14
  call void @llvm.lifetime.end.p0(i64 8240, ptr nonnull %5) #14
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable
define internal void @sph_density_accum_cb(ptr nocapture noundef %0, i32 noundef %1, float noundef nofpclass(nan inf) %2) #9 {
  %4 = getelementptr inbounds %struct.SPHRangeData, ptr %0, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !233
  %6 = getelementptr inbounds %struct.ParticleSystem, ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !35
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds %struct.ParticleData, ptr %7, i64 %8
  %10 = getelementptr inbounds %struct.SPHRangeData, ptr %0, i64 0, i32 4
  %11 = load ptr, ptr %10, align 8, !tbaa !214
  %12 = icmp eq ptr %9, %11
  %13 = fcmp fast olt float %2, 0x3E80000000000000
  %14 = select i1 %12, i1 true, i1 %13
  br i1 %14, label %49, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %struct.SPHRangeData, ptr %0, i64 0, i32 1
  %17 = load i32, ptr %16, align 8, !tbaa !216
  %18 = icmp sgt i32 %17, 511
  br i1 %18, label %49, label %19

19:                                               ; preds = %15
  %20 = sext i32 %17 to i64
  %21 = getelementptr inbounds [512 x %struct.SPHNeighbor], ptr %0, i64 0, i64 %20, i32 1
  store i32 %1, ptr %21, align 8, !tbaa !219
  %22 = getelementptr inbounds [512 x %struct.SPHNeighbor], ptr %0, i64 0, i64 %20
  store ptr %5, ptr %22, align 8, !tbaa !217
  %23 = add nsw i32 %17, 1
  store i32 %23, ptr %16, align 8, !tbaa !216
  %24 = tail call fast float @llvm.sqrt.f32(float %2)
  %25 = getelementptr inbounds %struct.SPHRangeData, ptr %0, i64 0, i32 5
  %26 = load float, ptr %25, align 8, !tbaa !213
  %27 = fdiv fast float %24, %26
  %28 = fsub fast float 1.000000e+00, %27
  %29 = getelementptr inbounds %struct.SPHRangeData, ptr %0, i64 0, i32 7
  %30 = load float, ptr %29, align 8, !tbaa !234
  %31 = fmul fast float %28, %30
  %32 = getelementptr inbounds %struct.SPHRangeData, ptr %0, i64 0, i32 8
  %33 = load i32, ptr %32, align 4, !tbaa !235
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %19
  %36 = getelementptr inbounds %struct.ParticleData, ptr %7, i64 %8, i32 13
  %37 = load float, ptr %36, align 4, !tbaa !205
  %38 = fmul fast float %37, %31
  br label %39

39:                                               ; preds = %35, %19
  %40 = phi float [ %38, %35 ], [ %31, %19 ]
  %41 = getelementptr inbounds %struct.SPHRangeData, ptr %0, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !211
  %43 = fmul fast float %40, %40
  %44 = fmul fast float %43, %40
  %45 = load <2 x float>, ptr %42, align 4, !tbaa !79
  %46 = insertelement <2 x float> poison, float %43, i64 0
  %47 = insertelement <2 x float> %46, float %44, i64 1
  %48 = fadd fast <2 x float> %45, %47
  store <2 x float> %48, ptr %42, align 4, !tbaa !79
  br label %49

49:                                               ; preds = %15, %3, %39
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @sphclassical_force_cb(ptr nocapture noundef %0, ptr noundef %1, ptr nocapture noundef %2, ptr nocapture readnone %3) #2 {
  %5 = alloca %struct.SPHRangeData, align 8
  %6 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !194
  %8 = load ptr, ptr %0, align 8, !tbaa !44
  %9 = getelementptr inbounds %struct.ParticleSystem, ptr %8, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.ParticleSettings, ptr %10, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !196
  call void @llvm.lifetime.start.p0(i64 8240, ptr nonnull %5) #14
  %13 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 4
  %14 = load ptr, ptr %13, align 8, !tbaa !199
  %15 = getelementptr inbounds %struct.SPHFluidSettings, ptr %12, i64 0, i32 7
  %16 = load float, ptr %15, align 4, !tbaa !200
  %17 = getelementptr inbounds %struct.SPHFluidSettings, ptr %12, i64 0, i32 11
  %18 = load float, ptr %17, align 4, !tbaa !207
  %19 = getelementptr inbounds %struct.SPHFluidSettings, ptr %12, i64 0, i32 13
  %20 = load i32, ptr %19, align 4, !tbaa !202
  %21 = and i32 %20, 8
  %22 = icmp eq i32 %21, 0
  %23 = select fast i1 %22, float 1.000000e+00, float 0x4013147AE0000000
  %24 = fmul fast float %23, %18
  %25 = getelementptr inbounds %struct.SPHFluidSettings, ptr %12, i64 0, i32 9
  %26 = load float, ptr %25, align 4, !tbaa !209
  %27 = fmul fast float %26, %26
  %28 = load float, ptr %12, align 4, !tbaa !204
  %29 = and i32 %20, 16
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %4
  %32 = getelementptr inbounds %struct.ParticleData, ptr %7, i64 0, i32 13
  %33 = load float, ptr %32, align 4, !tbaa !205
  %34 = fmul fast float %33, 4.000000e+00
  br label %35

35:                                               ; preds = %4, %31
  %36 = phi fast float [ %34, %31 ], [ 1.000000e+00, %4 ]
  %37 = fmul fast float %36, %28
  %38 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 5
  %39 = load float, ptr %38, align 8, !tbaa !206
  %40 = fmul fast float %37, %39
  %41 = getelementptr inbounds %struct.SPHRangeData, ptr %5, i64 0, i32 5
  store float %40, ptr %41, align 8, !tbaa !213
  %42 = getelementptr inbounds %struct.SPHRangeData, ptr %5, i64 0, i32 4
  store ptr %7, ptr %42, align 8, !tbaa !214
  call fastcc void @sph_evaluate_func(ptr noundef null, ptr noundef nonnull %0, ptr noundef %1, ptr noundef nonnull %5, float noundef nofpclass(nan inf) %37, ptr noundef nonnull @sphclassical_neighbour_accum_cb)
  %43 = getelementptr inbounds %struct.ParticleData, ptr %7, i64 0, i32 14
  %44 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 2
  %45 = load float, ptr %44, align 8, !tbaa !195
  %46 = fmul fast float %45, 0x3FAABCEF80000000
  %47 = getelementptr inbounds %struct.SPHRangeData, ptr %5, i64 0, i32 1
  %48 = load i32, ptr %47, align 8, !tbaa !216
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %211

50:                                               ; preds = %35
  %51 = load float, ptr %43, align 8, !tbaa !236
  %52 = fdiv fast float %51, %24
  %53 = fmul fast float %52, %52
  %54 = fmul fast float %53, %52
  %55 = fmul fast float %54, %54
  %56 = fmul fast float %55, %52
  %57 = fadd fast float %56, -1.000000e+00
  %58 = fmul fast float %57, %27
  %59 = load float, ptr %41, align 8, !tbaa !213
  %60 = fmul fast float %59, %59
  %61 = fmul fast float %60, %59
  %62 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 4
  %63 = getelementptr inbounds float, ptr %1, i64 2
  %64 = getelementptr inbounds float, ptr %2, i64 2
  %65 = fcmp fast ogt float %16, 0.000000e+00
  %66 = getelementptr inbounds %struct.ParticleData, ptr %7, i64 0, i32 1, i32 1
  %67 = getelementptr inbounds %struct.ParticleData, ptr %7, i64 0, i32 1, i32 1, i64 1
  %68 = fmul fast float %40, 5.000000e-01
  %69 = fneg fast float %16
  %70 = insertelement <2 x float> poison, float %58, i64 0
  %71 = fdiv fast float 1.000000e+00, %59
  %72 = fdiv fast float 1.000000e+00, %24
  %73 = fdiv fast float 1.000000e+00, %61
  br label %74

74:                                               ; preds = %50, %207
  %75 = phi ptr [ %5, %50 ], [ %209, %207 ]
  %76 = phi i32 [ 0, %50 ], [ %208, %207 ]
  %77 = load ptr, ptr %75, align 8, !tbaa !217
  %78 = getelementptr inbounds %struct.ParticleSystem, ptr %77, i64 0, i32 3
  %79 = load ptr, ptr %78, align 8, !tbaa !35
  %80 = getelementptr inbounds %struct.SPHNeighbor, ptr %75, i64 0, i32 1
  %81 = load i32, ptr %80, align 8, !tbaa !219
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds %struct.ParticleData, ptr %79, i64 %82
  %84 = icmp eq ptr %83, %7
  br i1 %84, label %207, label %85

85:                                               ; preds = %74
  %86 = getelementptr inbounds %struct.ParticleData, ptr %79, i64 %82, i32 1
  %87 = getelementptr inbounds %struct.ParticleData, ptr %79, i64 %82, i32 1, i32 1
  %88 = load float, ptr %62, align 4, !tbaa !220
  %89 = getelementptr inbounds float, ptr %87, i64 1
  %90 = getelementptr inbounds float, ptr %86, i64 2
  %91 = load float, ptr %90, align 4, !tbaa !79
  %92 = getelementptr inbounds float, ptr %87, i64 2
  %93 = load float, ptr %92, align 4, !tbaa !79
  %94 = fmul fast float %93, %88
  %95 = fadd fast float %94, %91
  %96 = load <2 x float>, ptr %86, align 4, !tbaa !79
  %97 = load <2 x float>, ptr %87, align 4, !tbaa !79
  %98 = insertelement <2 x float> poison, float %88, i64 0
  %99 = shufflevector <2 x float> %98, <2 x float> poison, <2 x i32> zeroinitializer
  %100 = fmul fast <2 x float> %97, %99
  %101 = fadd fast <2 x float> %100, %96
  %102 = load <2 x float>, ptr %1, align 4, !tbaa !79
  %103 = fsub fast <2 x float> %101, %102
  %104 = load float, ptr %63, align 4, !tbaa !79
  %105 = fsub fast float %95, %104
  %106 = fmul fast <2 x float> %103, %103
  %107 = shufflevector <2 x float> %106, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %108 = fadd fast <2 x float> %107, %106
  %109 = extractelement <2 x float> %108, i64 0
  %110 = fmul fast float %105, %105
  %111 = fadd fast float %109, %110
  %112 = fcmp fast ogt float %111, 0x38AA95A5C0000000
  br i1 %112, label %113, label %120

113:                                              ; preds = %85
  %114 = call fast float @llvm.sqrt.f32(float %111)
  %115 = fdiv fast float 1.000000e+00, %114
  %116 = insertelement <2 x float> poison, float %115, i64 0
  %117 = shufflevector <2 x float> %116, <2 x float> poison, <2 x i32> zeroinitializer
  %118 = fmul fast <2 x float> %117, %103
  %119 = fmul fast float %115, %105
  br label %120

120:                                              ; preds = %85, %113
  %121 = phi float [ %119, %113 ], [ 0.000000e+00, %85 ]
  %122 = phi float [ %114, %113 ], [ 0.000000e+00, %85 ]
  %123 = phi <2 x float> [ %118, %113 ], [ zeroinitializer, %85 ]
  %124 = fmul fast float %122, %71
  %125 = fcmp fast ogt float %124, 2.000000e+00
  br i1 %125, label %207, label %126

126:                                              ; preds = %120
  %127 = getelementptr inbounds %struct.ParticleData, ptr %79, i64 %82, i32 14
  %128 = load float, ptr %127, align 8, !tbaa !236
  %129 = fmul fast float %128, %72
  %130 = fmul fast float %129, %129
  %131 = fmul fast float %130, %129
  %132 = fmul fast float %131, %131
  %133 = fmul fast float %132, %129
  %134 = fadd fast float %133, -1.000000e+00
  %135 = fmul fast float %134, %27
  %136 = fsub fast float 2.000000e+00, %124
  %137 = fmul fast float %136, %136
  %138 = fmul fast float %137, %137
  %139 = fmul fast float %138, 2.000000e+00
  %140 = fmul fast float %124, 2.000000e+00
  %141 = fadd fast float %140, 1.000000e+00
  %142 = fmul fast float %136, 4.000000e+00
  %143 = fmul fast float %142, %137
  %144 = fmul fast float %143, %141
  %145 = fsub fast float %139, %144
  %146 = fmul fast float %46, %145
  %147 = fmul fast float %146, %73
  %148 = getelementptr inbounds %struct.ParticleSystem, ptr %77, i64 0, i32 2
  %149 = load ptr, ptr %148, align 8, !tbaa !5
  %150 = getelementptr inbounds %struct.ParticleSettings, ptr %149, i64 0, i32 5
  %151 = load i32, ptr %150, align 8, !tbaa !222
  %152 = and i32 %151, 65536
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %158, label %154

154:                                              ; preds = %126
  %155 = getelementptr inbounds %struct.ParticleData, ptr %79, i64 %82, i32 13
  %156 = load float, ptr %155, align 4, !tbaa !205
  %157 = fmul fast float %156, %147
  br label %158

158:                                              ; preds = %154, %126
  %159 = phi float [ %157, %154 ], [ %147, %126 ]
  %160 = load float, ptr %43, align 8, !tbaa !236
  %161 = insertelement <2 x float> poison, float %160, i64 0
  %162 = insertelement <2 x float> %161, float %128, i64 1
  %163 = fmul fast <2 x float> %162, %162
  %164 = insertelement <2 x float> %70, float %135, i64 1
  %165 = fdiv fast <2 x float> %164, %163
  %166 = shufflevector <2 x float> %165, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %167 = fadd fast <2 x float> %165, %166
  %168 = extractelement <2 x float> %167, i64 0
  %169 = fmul fast float %168, %159
  %170 = insertelement <2 x float> poison, float %169, i64 0
  %171 = shufflevector <2 x float> %170, <2 x float> poison, <2 x i32> zeroinitializer
  %172 = fmul fast <2 x float> %171, %123
  %173 = load <2 x float>, ptr %2, align 4, !tbaa !79
  %174 = fadd fast <2 x float> %172, %173
  store <2 x float> %174, ptr %2, align 4, !tbaa !79
  %175 = fmul fast float %169, %121
  %176 = load float, ptr %64, align 4, !tbaa !79
  %177 = fadd fast float %176, %175
  store float %177, ptr %64, align 4, !tbaa !79
  br i1 %65, label %178, label %207

178:                                              ; preds = %158
  %179 = load float, ptr %87, align 4, !tbaa !79
  %180 = load float, ptr %66, align 4, !tbaa !79
  %181 = fsub fast float %179, %180
  %182 = extractelement <2 x float> %123, i64 0
  %183 = fmul fast float %181, %182
  %184 = load <2 x float>, ptr %89, align 4, !tbaa !79
  %185 = load <2 x float>, ptr %67, align 4, !tbaa !79
  %186 = fsub fast <2 x float> %184, %185
  %187 = shufflevector <2 x float> %123, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %188 = insertelement <2 x float> %187, float %121, i64 1
  %189 = fmul fast <2 x float> %186, %188
  %190 = extractelement <2 x float> %189, i64 0
  %191 = fadd fast float %190, %183
  %192 = extractelement <2 x float> %189, i64 1
  %193 = fadd fast float %191, %192
  %194 = load float, ptr %127, align 8, !tbaa !236
  %195 = load float, ptr %43, align 8, !tbaa !236
  %196 = fadd fast float %195, %194
  %197 = fmul fast float %68, %196
  %198 = fmul fast float %159, %69
  %199 = fmul fast float %198, %193
  %200 = fdiv fast float %199, %197
  %201 = insertelement <2 x float> poison, float %200, i64 0
  %202 = shufflevector <2 x float> %201, <2 x float> poison, <2 x i32> zeroinitializer
  %203 = fmul fast <2 x float> %202, %123
  %204 = fadd fast <2 x float> %203, %174
  store <2 x float> %204, ptr %2, align 4, !tbaa !79
  %205 = fmul fast float %200, %121
  %206 = fadd fast float %205, %177
  store float %206, ptr %64, align 4, !tbaa !79
  br label %207

207:                                              ; preds = %158, %178, %120, %74
  %208 = add nuw nsw i32 %76, 1
  %209 = getelementptr inbounds %struct.SPHNeighbor, ptr %75, i64 1
  %210 = icmp eq i32 %208, %48
  br i1 %210, label %211, label %74, !llvm.loop !237

211:                                              ; preds = %207, %35
  %212 = getelementptr inbounds %struct.SPHFluidSettings, ptr %12, i64 0, i32 12
  %213 = load float, ptr %212, align 4, !tbaa !228
  %214 = fcmp fast ogt float %213, 0.000000e+00
  %215 = icmp ne ptr %14, null
  %216 = select i1 %214, i1 %215, i1 false
  br i1 %216, label %217, label %237

217:                                              ; preds = %211
  %218 = load float, ptr %43, align 8, !tbaa !236
  %219 = fsub fast float %218, %24
  %220 = fmul fast float %219, %213
  %221 = load float, ptr %14, align 4, !tbaa !79
  %222 = fmul fast float %220, %221
  %223 = load float, ptr %2, align 4, !tbaa !79
  %224 = fadd fast float %222, %223
  store float %224, ptr %2, align 4, !tbaa !79
  %225 = getelementptr inbounds float, ptr %14, i64 1
  %226 = load float, ptr %225, align 4, !tbaa !79
  %227 = fmul fast float %226, %220
  %228 = getelementptr inbounds float, ptr %2, i64 1
  %229 = load float, ptr %228, align 4, !tbaa !79
  %230 = fadd fast float %229, %227
  store float %230, ptr %228, align 4, !tbaa !79
  %231 = getelementptr inbounds float, ptr %14, i64 2
  %232 = load float, ptr %231, align 4, !tbaa !79
  %233 = fmul fast float %232, %220
  %234 = getelementptr inbounds float, ptr %2, i64 2
  %235 = load float, ptr %234, align 4, !tbaa !79
  %236 = fadd fast float %235, %233
  store float %236, ptr %234, align 4, !tbaa !79
  br label %237

237:                                              ; preds = %217, %211
  %238 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 6
  %239 = load i32, ptr %238, align 4, !tbaa !229
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %311

241:                                              ; preds = %237
  %242 = load ptr, ptr %0, align 8, !tbaa !44
  %243 = getelementptr inbounds %struct.ParticleSystem, ptr %242, i64 0, i32 2
  %244 = load ptr, ptr %243, align 8, !tbaa !5
  %245 = getelementptr inbounds %struct.ParticleSettings, ptr %244, i64 0, i32 67
  %246 = load i16, ptr %245, align 4, !tbaa !230
  %247 = and i16 %246, 1
  %248 = icmp eq i16 %247, 0
  br i1 %248, label %311, label %249

249:                                              ; preds = %241
  br i1 %49, label %250, label %305

250:                                              ; preds = %249
  %251 = load ptr, ptr %42, align 8, !tbaa !214
  %252 = getelementptr inbounds %struct.ParticleData, ptr %251, i64 0, i32 1
  %253 = load float, ptr %252, align 4, !tbaa !79
  %254 = getelementptr inbounds %struct.ParticleData, ptr %251, i64 0, i32 1, i32 0, i64 1
  %255 = load <2 x float>, ptr %254, align 4, !tbaa !79
  %256 = zext i32 %48 to i64
  br label %257

257:                                              ; preds = %257, %250
  %258 = phi i64 [ 0, %250 ], [ %289, %257 ]
  %259 = phi float [ 0.000000e+00, %250 ], [ %282, %257 ]
  %260 = phi float [ 0.000000e+00, %250 ], [ %288, %257 ]
  %261 = phi <2 x float> [ zeroinitializer, %250 ], [ %285, %257 ]
  %262 = getelementptr inbounds [512 x %struct.SPHNeighbor], ptr %5, i64 0, i64 %258
  %263 = load ptr, ptr %262, align 8, !tbaa !217
  %264 = getelementptr inbounds %struct.ParticleSystem, ptr %263, i64 0, i32 3
  %265 = load ptr, ptr %264, align 8, !tbaa !35
  %266 = getelementptr inbounds [512 x %struct.SPHNeighbor], ptr %5, i64 0, i64 %258, i32 1
  %267 = load i32, ptr %266, align 8, !tbaa !219
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds %struct.ParticleData, ptr %265, i64 %268, i32 1
  %270 = load float, ptr %269, align 4, !tbaa !79
  %271 = fsub fast float %253, %270
  %272 = getelementptr inbounds float, ptr %269, i64 1
  %273 = fmul fast float %271, %271
  %274 = load <2 x float>, ptr %272, align 4, !tbaa !79
  %275 = fsub fast <2 x float> %255, %274
  %276 = fmul fast <2 x float> %275, %275
  %277 = extractelement <2 x float> %276, i64 0
  %278 = fadd fast float %277, %273
  %279 = extractelement <2 x float> %276, i64 1
  %280 = fadd fast float %278, %279
  %281 = call fast float @llvm.sqrt.f32(float %280)
  %282 = fadd fast float %281, %259
  %283 = getelementptr inbounds %struct.ParticleData, ptr %265, i64 %268, i32 1, i32 1
  %284 = load <2 x float>, ptr %283, align 4, !tbaa !79
  %285 = fadd fast <2 x float> %284, %261
  %286 = getelementptr inbounds float, ptr %283, i64 2
  %287 = load float, ptr %286, align 4, !tbaa !79
  %288 = fadd fast float %287, %260
  %289 = add nuw nsw i64 %258, 1
  %290 = icmp eq i64 %289, %256
  br i1 %290, label %291, label %257, !llvm.loop !231

291:                                              ; preds = %257
  %292 = getelementptr inbounds %struct.ParticleSettings, ptr %244, i64 0, i32 3
  %293 = load ptr, ptr %292, align 8, !tbaa !196
  %294 = load float, ptr %293, align 4, !tbaa !204
  %295 = fadd fast float %294, %282
  %296 = sitofp i32 %48 to float
  %297 = fdiv fast float %295, %296
  %298 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 7
  store float %297, ptr %298, align 8, !tbaa !232
  %299 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 8
  %300 = fdiv fast float 1.000000e+00, %296
  %301 = insertelement <2 x float> poison, float %300, i64 0
  %302 = shufflevector <2 x float> %301, <2 x float> poison, <2 x i32> zeroinitializer
  %303 = fmul fast <2 x float> %285, %302
  store <2 x float> %303, ptr %299, align 4, !tbaa !79
  %304 = fmul fast float %288, %300
  br label %308

305:                                              ; preds = %249
  %306 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 7
  store <2 x float> <float 0x47EFFFFFE0000000, float 0.000000e+00>, ptr %306, align 8, !tbaa !79
  %307 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 8, i64 1
  store float 0.000000e+00, ptr %307, align 4, !tbaa !79
  br label %308

308:                                              ; preds = %291, %305
  %309 = phi float [ 0.000000e+00, %305 ], [ %304, %291 ]
  %310 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 8, i64 2
  store float %309, ptr %310, align 4, !tbaa !79
  br label %311

311:                                              ; preds = %308, %241, %237
  %312 = add nsw i32 %239, 1
  store i32 %312, ptr %238, align 4, !tbaa !229
  call void @llvm.lifetime.end.p0(i64 8240, ptr nonnull %5) #14
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable
define internal void @sphclassical_density_accum_cb(ptr nocapture noundef readonly %0, i32 noundef %1, float nofpclass(nan inf) %2) #9 {
  %4 = getelementptr inbounds %struct.SPHRangeData, ptr %0, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !233
  %6 = getelementptr inbounds %struct.ParticleSystem, ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !35
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds %struct.ParticleData, ptr %7, i64 %8
  %10 = getelementptr inbounds %struct.SPHRangeData, ptr %0, i64 0, i32 4
  %11 = load ptr, ptr %10, align 8, !tbaa !214
  %12 = load float, ptr %9, align 4, !tbaa !79
  %13 = load float, ptr %11, align 4, !tbaa !79
  %14 = fsub fast float %12, %13
  %15 = getelementptr inbounds float, ptr %9, i64 1
  %16 = getelementptr inbounds float, ptr %11, i64 1
  %17 = fmul fast float %14, %14
  %18 = load <2 x float>, ptr %15, align 4, !tbaa !79
  %19 = load <2 x float>, ptr %16, align 4, !tbaa !79
  %20 = fsub fast <2 x float> %18, %19
  %21 = fmul fast <2 x float> %20, %20
  %22 = extractelement <2 x float> %21, i64 0
  %23 = fadd fast float %22, %17
  %24 = extractelement <2 x float> %21, i64 1
  %25 = fadd fast float %23, %24
  %26 = tail call fast float @llvm.sqrt.f32(float %25)
  %27 = getelementptr inbounds %struct.SPHRangeData, ptr %0, i64 0, i32 5
  %28 = load float, ptr %27, align 8, !tbaa !213
  %29 = fdiv fast float %26, %28
  %30 = fcmp fast ogt float %29, 2.000000e+00
  br i1 %30, label %66, label %31

31:                                               ; preds = %3
  %32 = fmul fast float %28, %28
  %33 = fmul fast float %32, %28
  %34 = fsub fast float 2.000000e+00, %29
  %35 = fmul fast float %34, %34
  %36 = fmul fast float %29, 2.000000e+00
  %37 = fadd fast float %36, 1.000000e+00
  %38 = getelementptr inbounds %struct.ParticleSystem, ptr %5, i64 0, i32 2
  %39 = load ptr, ptr %38, align 8, !tbaa !5
  %40 = getelementptr inbounds %struct.ParticleSettings, ptr %39, i64 0, i32 81
  %41 = load float, ptr %40, align 4, !tbaa !221
  %42 = fmul fast float %35, %35
  %43 = fmul fast float %42, 0x3F9ABCEF80000000
  %44 = fmul fast float %43, %37
  %45 = fmul fast float %44, %41
  %46 = fdiv fast float %45, %33
  %47 = getelementptr inbounds %struct.SPHRangeData, ptr %0, i64 0, i32 8
  %48 = load i32, ptr %47, align 4, !tbaa !235
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %31
  %51 = getelementptr inbounds %struct.ParticleData, ptr %11, i64 0, i32 13
  %52 = load float, ptr %51, align 4, !tbaa !205
  %53 = fmul fast float %52, %46
  br label %54

54:                                               ; preds = %50, %31
  %55 = phi float [ %53, %50 ], [ %46, %31 ]
  %56 = getelementptr inbounds %struct.SPHRangeData, ptr %0, i64 0, i32 2
  %57 = load ptr, ptr %56, align 8, !tbaa !211
  %58 = load float, ptr %57, align 4, !tbaa !79
  %59 = fadd fast float %58, %55
  store float %59, ptr %57, align 4, !tbaa !79
  %60 = getelementptr inbounds %struct.ParticleData, ptr %7, i64 %8, i32 14
  %61 = load float, ptr %60, align 8, !tbaa !236
  %62 = fdiv fast float %55, %61
  %63 = getelementptr inbounds float, ptr %57, i64 1
  %64 = load float, ptr %63, align 4, !tbaa !79
  %65 = fadd fast float %64, %62
  store float %65, ptr %63, align 4, !tbaa !79
  br label %66

66:                                               ; preds = %3, %54
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @psys_sph_finalise(ptr nocapture noundef %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.SPHData, ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !192
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @BLI_edgehash_free(ptr noundef nonnull %3, ptr noundef null) #14
  store ptr null, ptr %2, align 8, !tbaa !192
  br label %6

6:                                                ; preds = %5, %1
  ret void
}

declare void @BLI_edgehash_free(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @psys_sph_density(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2, ptr nocapture noundef writeonly %3) local_unnamed_addr #2 {
  %5 = alloca %struct.SPHRangeData, align 8
  %6 = alloca [2 x float], align 8
  %7 = load ptr, ptr %1, align 8, !tbaa !44
  %8 = getelementptr inbounds %struct.ParticleSystem, ptr %7, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.ParticleSettings, ptr %9, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !196
  %12 = load float, ptr %11, align 4, !tbaa !204
  %13 = getelementptr inbounds %struct.SPHFluidSettings, ptr %11, i64 0, i32 13
  %14 = load i32, ptr %13, align 4, !tbaa !202
  %15 = and i32 %14, 16
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %struct.ParticleSettings, ptr %9, i64 0, i32 82
  %19 = load float, ptr %18, align 8, !tbaa !238
  %20 = fmul fast float %19, 4.000000e+00
  br label %21

21:                                               ; preds = %4, %17
  %22 = phi fast float [ %20, %17 ], [ 1.000000e+00, %4 ]
  %23 = fmul fast float %22, %12
  call void @llvm.lifetime.start.p0(i64 8240, ptr nonnull %5) #14
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #14
  store <2 x float> zeroinitializer, ptr %6, align 8, !tbaa !79
  %24 = getelementptr inbounds %struct.SPHRangeData, ptr %5, i64 0, i32 2
  store ptr %6, ptr %24, align 8, !tbaa !211
  %25 = getelementptr inbounds %struct.SPHData, ptr %1, i64 0, i32 5
  %26 = load float, ptr %25, align 8, !tbaa !206
  %27 = fmul fast float %26, %23
  %28 = getelementptr inbounds %struct.SPHRangeData, ptr %5, i64 0, i32 5
  store float %27, ptr %28, align 8, !tbaa !213
  %29 = getelementptr inbounds %struct.SPHData, ptr %1, i64 0, i32 2
  %30 = load float, ptr %29, align 8, !tbaa !195
  %31 = getelementptr inbounds %struct.SPHRangeData, ptr %5, i64 0, i32 6
  store float %30, ptr %31, align 4, !tbaa !215
  %32 = getelementptr inbounds %struct.SPHData, ptr %1, i64 0, i32 10
  %33 = load ptr, ptr %32, align 8, !tbaa !239
  call fastcc void @sph_evaluate_func(ptr noundef %0, ptr noundef nonnull %1, ptr noundef %2, ptr noundef nonnull %5, float noundef nofpclass(nan inf) %23, ptr noundef %33)
  %34 = load ptr, ptr %24, align 8, !tbaa !211
  %35 = load float, ptr %34, align 4, !tbaa !79
  store float %35, ptr %3, align 4, !tbaa !79
  %36 = getelementptr inbounds float, ptr %34, i64 1
  %37 = load float, ptr %36, align 4, !tbaa !79
  %38 = getelementptr inbounds float, ptr %3, i64 1
  store float %37, ptr %38, align 4, !tbaa !79
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #14
  call void @llvm.lifetime.end.p0(i64 8240, ptr nonnull %5) #14
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @sph_evaluate_func(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2, ptr noundef %3, float noundef nofpclass(nan inf) %4, ptr noundef %5) unnamed_addr #2 {
  %7 = getelementptr inbounds %struct.SPHRangeData, ptr %3, i64 0, i32 1
  store i32 0, ptr %7, align 8, !tbaa !216
  %8 = getelementptr inbounds %struct.SPHRangeData, ptr %3, i64 0, i32 3
  %9 = getelementptr inbounds %struct.SPHRangeData, ptr %3, i64 0, i32 6
  %10 = getelementptr inbounds %struct.SPHRangeData, ptr %3, i64 0, i32 7
  %11 = getelementptr inbounds %struct.SPHRangeData, ptr %3, i64 0, i32 8
  %12 = icmp eq ptr %0, null
  %13 = load ptr, ptr %1, align 8, !tbaa !44
  %14 = icmp eq ptr %13, null
  br i1 %12, label %15, label %193

15:                                               ; preds = %6
  br i1 %14, label %206, label %16

16:                                               ; preds = %15
  store ptr %13, ptr %8, align 8, !tbaa !233
  %17 = load ptr, ptr %1, align 8, !tbaa !44
  %18 = getelementptr inbounds %struct.ParticleSystem, ptr %17, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !5
  %20 = getelementptr inbounds %struct.ParticleSettings, ptr %19, i64 0, i32 81
  %21 = load float, ptr %20, align 4, !tbaa !221
  %22 = load float, ptr %9, align 4, !tbaa !215
  %23 = fdiv fast float %21, %22
  store float %23, ptr %10, align 8, !tbaa !234
  %24 = getelementptr inbounds %struct.ParticleSettings, ptr %19, i64 0, i32 5
  %25 = load i32, ptr %24, align 8, !tbaa !222
  %26 = and i32 %25, 65536
  store i32 %26, ptr %11, align 4, !tbaa !235
  tail call void @BLI_rw_mutex_lock(ptr noundef nonnull @psys_bvhtree_rwlock, i32 noundef 1) #14
  %27 = load ptr, ptr %1, align 8, !tbaa !44
  %28 = getelementptr inbounds %struct.ParticleSystem, ptr %27, i64 0, i32 47
  %29 = load ptr, ptr %28, align 8, !tbaa !240
  %30 = tail call i32 @BLI_bvhtree_range_query(ptr noundef %29, ptr noundef %2, float noundef nofpclass(nan inf) %4, ptr noundef %5, ptr noundef nonnull %3) #14
  tail call void @BLI_rw_mutex_unlock(ptr noundef nonnull @psys_bvhtree_rwlock) #14
  %31 = getelementptr inbounds ptr, ptr %1, i64 1
  %32 = load ptr, ptr %31, align 8, !tbaa !44
  %33 = icmp eq ptr %32, null
  br i1 %33, label %206, label %34

34:                                               ; preds = %16
  store ptr %32, ptr %8, align 8, !tbaa !233
  %35 = load ptr, ptr %31, align 8, !tbaa !44
  %36 = getelementptr inbounds %struct.ParticleSystem, ptr %35, i64 0, i32 2
  %37 = load ptr, ptr %36, align 8, !tbaa !5
  %38 = getelementptr inbounds %struct.ParticleSettings, ptr %37, i64 0, i32 81
  %39 = load float, ptr %38, align 4, !tbaa !221
  %40 = load float, ptr %9, align 4, !tbaa !215
  %41 = fdiv fast float %39, %40
  store float %41, ptr %10, align 8, !tbaa !234
  %42 = getelementptr inbounds %struct.ParticleSettings, ptr %37, i64 0, i32 5
  %43 = load i32, ptr %42, align 8, !tbaa !222
  %44 = and i32 %43, 65536
  store i32 %44, ptr %11, align 4, !tbaa !235
  tail call void @BLI_rw_mutex_lock(ptr noundef nonnull @psys_bvhtree_rwlock, i32 noundef 1) #14
  %45 = load ptr, ptr %31, align 8, !tbaa !44
  %46 = getelementptr inbounds %struct.ParticleSystem, ptr %45, i64 0, i32 47
  %47 = load ptr, ptr %46, align 8, !tbaa !240
  %48 = tail call i32 @BLI_bvhtree_range_query(ptr noundef %47, ptr noundef %2, float noundef nofpclass(nan inf) %4, ptr noundef %5, ptr noundef nonnull %3) #14
  tail call void @BLI_rw_mutex_unlock(ptr noundef nonnull @psys_bvhtree_rwlock) #14
  %49 = getelementptr inbounds ptr, ptr %1, i64 2
  %50 = load ptr, ptr %49, align 8, !tbaa !44
  %51 = icmp eq ptr %50, null
  br i1 %51, label %206, label %52

52:                                               ; preds = %34
  store ptr %50, ptr %8, align 8, !tbaa !233
  %53 = load ptr, ptr %49, align 8, !tbaa !44
  %54 = getelementptr inbounds %struct.ParticleSystem, ptr %53, i64 0, i32 2
  %55 = load ptr, ptr %54, align 8, !tbaa !5
  %56 = getelementptr inbounds %struct.ParticleSettings, ptr %55, i64 0, i32 81
  %57 = load float, ptr %56, align 4, !tbaa !221
  %58 = load float, ptr %9, align 4, !tbaa !215
  %59 = fdiv fast float %57, %58
  store float %59, ptr %10, align 8, !tbaa !234
  %60 = getelementptr inbounds %struct.ParticleSettings, ptr %55, i64 0, i32 5
  %61 = load i32, ptr %60, align 8, !tbaa !222
  %62 = and i32 %61, 65536
  store i32 %62, ptr %11, align 4, !tbaa !235
  tail call void @BLI_rw_mutex_lock(ptr noundef nonnull @psys_bvhtree_rwlock, i32 noundef 1) #14
  %63 = load ptr, ptr %49, align 8, !tbaa !44
  %64 = getelementptr inbounds %struct.ParticleSystem, ptr %63, i64 0, i32 47
  %65 = load ptr, ptr %64, align 8, !tbaa !240
  %66 = tail call i32 @BLI_bvhtree_range_query(ptr noundef %65, ptr noundef %2, float noundef nofpclass(nan inf) %4, ptr noundef %5, ptr noundef nonnull %3) #14
  tail call void @BLI_rw_mutex_unlock(ptr noundef nonnull @psys_bvhtree_rwlock) #14
  %67 = getelementptr inbounds ptr, ptr %1, i64 3
  %68 = load ptr, ptr %67, align 8, !tbaa !44
  %69 = icmp eq ptr %68, null
  br i1 %69, label %206, label %70

70:                                               ; preds = %52
  store ptr %68, ptr %8, align 8, !tbaa !233
  %71 = load ptr, ptr %67, align 8, !tbaa !44
  %72 = getelementptr inbounds %struct.ParticleSystem, ptr %71, i64 0, i32 2
  %73 = load ptr, ptr %72, align 8, !tbaa !5
  %74 = getelementptr inbounds %struct.ParticleSettings, ptr %73, i64 0, i32 81
  %75 = load float, ptr %74, align 4, !tbaa !221
  %76 = load float, ptr %9, align 4, !tbaa !215
  %77 = fdiv fast float %75, %76
  store float %77, ptr %10, align 8, !tbaa !234
  %78 = getelementptr inbounds %struct.ParticleSettings, ptr %73, i64 0, i32 5
  %79 = load i32, ptr %78, align 8, !tbaa !222
  %80 = and i32 %79, 65536
  store i32 %80, ptr %11, align 4, !tbaa !235
  tail call void @BLI_rw_mutex_lock(ptr noundef nonnull @psys_bvhtree_rwlock, i32 noundef 1) #14
  %81 = load ptr, ptr %67, align 8, !tbaa !44
  %82 = getelementptr inbounds %struct.ParticleSystem, ptr %81, i64 0, i32 47
  %83 = load ptr, ptr %82, align 8, !tbaa !240
  %84 = tail call i32 @BLI_bvhtree_range_query(ptr noundef %83, ptr noundef %2, float noundef nofpclass(nan inf) %4, ptr noundef %5, ptr noundef nonnull %3) #14
  tail call void @BLI_rw_mutex_unlock(ptr noundef nonnull @psys_bvhtree_rwlock) #14
  %85 = getelementptr inbounds ptr, ptr %1, i64 4
  %86 = load ptr, ptr %85, align 8, !tbaa !44
  %87 = icmp eq ptr %86, null
  br i1 %87, label %206, label %88

88:                                               ; preds = %70
  store ptr %86, ptr %8, align 8, !tbaa !233
  %89 = load ptr, ptr %85, align 8, !tbaa !44
  %90 = getelementptr inbounds %struct.ParticleSystem, ptr %89, i64 0, i32 2
  %91 = load ptr, ptr %90, align 8, !tbaa !5
  %92 = getelementptr inbounds %struct.ParticleSettings, ptr %91, i64 0, i32 81
  %93 = load float, ptr %92, align 4, !tbaa !221
  %94 = load float, ptr %9, align 4, !tbaa !215
  %95 = fdiv fast float %93, %94
  store float %95, ptr %10, align 8, !tbaa !234
  %96 = getelementptr inbounds %struct.ParticleSettings, ptr %91, i64 0, i32 5
  %97 = load i32, ptr %96, align 8, !tbaa !222
  %98 = and i32 %97, 65536
  store i32 %98, ptr %11, align 4, !tbaa !235
  tail call void @BLI_rw_mutex_lock(ptr noundef nonnull @psys_bvhtree_rwlock, i32 noundef 1) #14
  %99 = load ptr, ptr %85, align 8, !tbaa !44
  %100 = getelementptr inbounds %struct.ParticleSystem, ptr %99, i64 0, i32 47
  %101 = load ptr, ptr %100, align 8, !tbaa !240
  %102 = tail call i32 @BLI_bvhtree_range_query(ptr noundef %101, ptr noundef %2, float noundef nofpclass(nan inf) %4, ptr noundef %5, ptr noundef nonnull %3) #14
  tail call void @BLI_rw_mutex_unlock(ptr noundef nonnull @psys_bvhtree_rwlock) #14
  %103 = getelementptr inbounds ptr, ptr %1, i64 5
  %104 = load ptr, ptr %103, align 8, !tbaa !44
  %105 = icmp eq ptr %104, null
  br i1 %105, label %206, label %106

106:                                              ; preds = %88
  store ptr %104, ptr %8, align 8, !tbaa !233
  %107 = load ptr, ptr %103, align 8, !tbaa !44
  %108 = getelementptr inbounds %struct.ParticleSystem, ptr %107, i64 0, i32 2
  %109 = load ptr, ptr %108, align 8, !tbaa !5
  %110 = getelementptr inbounds %struct.ParticleSettings, ptr %109, i64 0, i32 81
  %111 = load float, ptr %110, align 4, !tbaa !221
  %112 = load float, ptr %9, align 4, !tbaa !215
  %113 = fdiv fast float %111, %112
  store float %113, ptr %10, align 8, !tbaa !234
  %114 = getelementptr inbounds %struct.ParticleSettings, ptr %109, i64 0, i32 5
  %115 = load i32, ptr %114, align 8, !tbaa !222
  %116 = and i32 %115, 65536
  store i32 %116, ptr %11, align 4, !tbaa !235
  tail call void @BLI_rw_mutex_lock(ptr noundef nonnull @psys_bvhtree_rwlock, i32 noundef 1) #14
  %117 = load ptr, ptr %103, align 8, !tbaa !44
  %118 = getelementptr inbounds %struct.ParticleSystem, ptr %117, i64 0, i32 47
  %119 = load ptr, ptr %118, align 8, !tbaa !240
  %120 = tail call i32 @BLI_bvhtree_range_query(ptr noundef %119, ptr noundef %2, float noundef nofpclass(nan inf) %4, ptr noundef %5, ptr noundef nonnull %3) #14
  tail call void @BLI_rw_mutex_unlock(ptr noundef nonnull @psys_bvhtree_rwlock) #14
  %121 = getelementptr inbounds ptr, ptr %1, i64 6
  %122 = load ptr, ptr %121, align 8, !tbaa !44
  %123 = icmp eq ptr %122, null
  br i1 %123, label %206, label %124

124:                                              ; preds = %106
  store ptr %122, ptr %8, align 8, !tbaa !233
  %125 = load ptr, ptr %121, align 8, !tbaa !44
  %126 = getelementptr inbounds %struct.ParticleSystem, ptr %125, i64 0, i32 2
  %127 = load ptr, ptr %126, align 8, !tbaa !5
  %128 = getelementptr inbounds %struct.ParticleSettings, ptr %127, i64 0, i32 81
  %129 = load float, ptr %128, align 4, !tbaa !221
  %130 = load float, ptr %9, align 4, !tbaa !215
  %131 = fdiv fast float %129, %130
  store float %131, ptr %10, align 8, !tbaa !234
  %132 = getelementptr inbounds %struct.ParticleSettings, ptr %127, i64 0, i32 5
  %133 = load i32, ptr %132, align 8, !tbaa !222
  %134 = and i32 %133, 65536
  store i32 %134, ptr %11, align 4, !tbaa !235
  tail call void @BLI_rw_mutex_lock(ptr noundef nonnull @psys_bvhtree_rwlock, i32 noundef 1) #14
  %135 = load ptr, ptr %121, align 8, !tbaa !44
  %136 = getelementptr inbounds %struct.ParticleSystem, ptr %135, i64 0, i32 47
  %137 = load ptr, ptr %136, align 8, !tbaa !240
  %138 = tail call i32 @BLI_bvhtree_range_query(ptr noundef %137, ptr noundef %2, float noundef nofpclass(nan inf) %4, ptr noundef %5, ptr noundef nonnull %3) #14
  tail call void @BLI_rw_mutex_unlock(ptr noundef nonnull @psys_bvhtree_rwlock) #14
  %139 = getelementptr inbounds ptr, ptr %1, i64 7
  %140 = load ptr, ptr %139, align 8, !tbaa !44
  %141 = icmp eq ptr %140, null
  br i1 %141, label %206, label %142

142:                                              ; preds = %124
  store ptr %140, ptr %8, align 8, !tbaa !233
  %143 = load ptr, ptr %139, align 8, !tbaa !44
  %144 = getelementptr inbounds %struct.ParticleSystem, ptr %143, i64 0, i32 2
  %145 = load ptr, ptr %144, align 8, !tbaa !5
  %146 = getelementptr inbounds %struct.ParticleSettings, ptr %145, i64 0, i32 81
  %147 = load float, ptr %146, align 4, !tbaa !221
  %148 = load float, ptr %9, align 4, !tbaa !215
  %149 = fdiv fast float %147, %148
  store float %149, ptr %10, align 8, !tbaa !234
  %150 = getelementptr inbounds %struct.ParticleSettings, ptr %145, i64 0, i32 5
  %151 = load i32, ptr %150, align 8, !tbaa !222
  %152 = and i32 %151, 65536
  store i32 %152, ptr %11, align 4, !tbaa !235
  tail call void @BLI_rw_mutex_lock(ptr noundef nonnull @psys_bvhtree_rwlock, i32 noundef 1) #14
  %153 = load ptr, ptr %139, align 8, !tbaa !44
  %154 = getelementptr inbounds %struct.ParticleSystem, ptr %153, i64 0, i32 47
  %155 = load ptr, ptr %154, align 8, !tbaa !240
  %156 = tail call i32 @BLI_bvhtree_range_query(ptr noundef %155, ptr noundef %2, float noundef nofpclass(nan inf) %4, ptr noundef %5, ptr noundef nonnull %3) #14
  tail call void @BLI_rw_mutex_unlock(ptr noundef nonnull @psys_bvhtree_rwlock) #14
  %157 = getelementptr inbounds ptr, ptr %1, i64 8
  %158 = load ptr, ptr %157, align 8, !tbaa !44
  %159 = icmp eq ptr %158, null
  br i1 %159, label %206, label %160

160:                                              ; preds = %142
  store ptr %158, ptr %8, align 8, !tbaa !233
  %161 = load ptr, ptr %157, align 8, !tbaa !44
  %162 = getelementptr inbounds %struct.ParticleSystem, ptr %161, i64 0, i32 2
  %163 = load ptr, ptr %162, align 8, !tbaa !5
  %164 = getelementptr inbounds %struct.ParticleSettings, ptr %163, i64 0, i32 81
  %165 = load float, ptr %164, align 4, !tbaa !221
  %166 = load float, ptr %9, align 4, !tbaa !215
  %167 = fdiv fast float %165, %166
  store float %167, ptr %10, align 8, !tbaa !234
  %168 = getelementptr inbounds %struct.ParticleSettings, ptr %163, i64 0, i32 5
  %169 = load i32, ptr %168, align 8, !tbaa !222
  %170 = and i32 %169, 65536
  store i32 %170, ptr %11, align 4, !tbaa !235
  tail call void @BLI_rw_mutex_lock(ptr noundef nonnull @psys_bvhtree_rwlock, i32 noundef 1) #14
  %171 = load ptr, ptr %157, align 8, !tbaa !44
  %172 = getelementptr inbounds %struct.ParticleSystem, ptr %171, i64 0, i32 47
  %173 = load ptr, ptr %172, align 8, !tbaa !240
  %174 = tail call i32 @BLI_bvhtree_range_query(ptr noundef %173, ptr noundef %2, float noundef nofpclass(nan inf) %4, ptr noundef %5, ptr noundef nonnull %3) #14
  tail call void @BLI_rw_mutex_unlock(ptr noundef nonnull @psys_bvhtree_rwlock) #14
  %175 = getelementptr inbounds ptr, ptr %1, i64 9
  %176 = load ptr, ptr %175, align 8, !tbaa !44
  %177 = icmp eq ptr %176, null
  br i1 %177, label %206, label %178

178:                                              ; preds = %160
  store ptr %176, ptr %8, align 8, !tbaa !233
  %179 = load ptr, ptr %175, align 8, !tbaa !44
  %180 = getelementptr inbounds %struct.ParticleSystem, ptr %179, i64 0, i32 2
  %181 = load ptr, ptr %180, align 8, !tbaa !5
  %182 = getelementptr inbounds %struct.ParticleSettings, ptr %181, i64 0, i32 81
  %183 = load float, ptr %182, align 4, !tbaa !221
  %184 = load float, ptr %9, align 4, !tbaa !215
  %185 = fdiv fast float %183, %184
  store float %185, ptr %10, align 8, !tbaa !234
  %186 = getelementptr inbounds %struct.ParticleSettings, ptr %181, i64 0, i32 5
  %187 = load i32, ptr %186, align 8, !tbaa !222
  %188 = and i32 %187, 65536
  store i32 %188, ptr %11, align 4, !tbaa !235
  tail call void @BLI_rw_mutex_lock(ptr noundef nonnull @psys_bvhtree_rwlock, i32 noundef 1) #14
  %189 = load ptr, ptr %175, align 8, !tbaa !44
  %190 = getelementptr inbounds %struct.ParticleSystem, ptr %189, i64 0, i32 47
  %191 = load ptr, ptr %190, align 8, !tbaa !240
  %192 = tail call i32 @BLI_bvhtree_range_query(ptr noundef %191, ptr noundef %2, float noundef nofpclass(nan inf) %4, ptr noundef %5, ptr noundef nonnull %3) #14
  tail call void @BLI_rw_mutex_unlock(ptr noundef nonnull @psys_bvhtree_rwlock) #14
  br label %206

193:                                              ; preds = %6
  br i1 %14, label %206, label %194

194:                                              ; preds = %193
  store ptr %13, ptr %8, align 8, !tbaa !233
  %195 = load ptr, ptr %1, align 8, !tbaa !44
  %196 = getelementptr inbounds %struct.ParticleSystem, ptr %195, i64 0, i32 2
  %197 = load ptr, ptr %196, align 8, !tbaa !5
  %198 = getelementptr inbounds %struct.ParticleSettings, ptr %197, i64 0, i32 81
  %199 = load float, ptr %198, align 4, !tbaa !221
  %200 = load float, ptr %9, align 4, !tbaa !215
  %201 = fdiv fast float %199, %200
  store float %201, ptr %10, align 8, !tbaa !234
  %202 = getelementptr inbounds %struct.ParticleSettings, ptr %197, i64 0, i32 5
  %203 = load i32, ptr %202, align 8, !tbaa !222
  %204 = and i32 %203, 65536
  store i32 %204, ptr %11, align 4, !tbaa !235
  %205 = tail call i32 @BLI_bvhtree_range_query(ptr noundef nonnull %0, ptr noundef %2, float noundef nofpclass(nan inf) %4, ptr noundef %5, ptr noundef nonnull %3) #14
  br label %206

206:                                              ; preds = %15, %16, %34, %52, %70, %88, %106, %124, %142, %160, %178, %193, %194
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @BKE_psys_collision_neartest_cb(ptr noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef %3) #2 {
  %5 = alloca [3 x %struct.ParticleCollisionElement], align 16
  %6 = alloca [3 x %struct.ParticleCollisionElement], align 16
  %7 = alloca %struct.ParticleCollisionElement, align 8
  call void @llvm.lifetime.start.p0(i64 160, ptr nonnull %7) #14
  %8 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 5
  %9 = load ptr, ptr %8, align 8, !tbaa !241
  %10 = getelementptr inbounds %struct.CollisionModifierData, ptr %9, i64 0, i32 7
  %11 = load ptr, ptr %10, align 8, !tbaa !244
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds %struct.MFace, ptr %11, i64 %12
  %14 = getelementptr inbounds %struct.CollisionModifierData, ptr %9, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !246
  %16 = getelementptr inbounds %struct.CollisionModifierData, ptr %9, i64 0, i32 6
  %17 = load ptr, ptr %16, align 8, !tbaa !247
  %18 = getelementptr inbounds %struct.BVHTreeRayHit, ptr %3, i64 0, i32 3
  %19 = load float, ptr %18, align 4, !tbaa !248
  %20 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 11
  %21 = load float, ptr %20, align 4, !tbaa !250
  %22 = fdiv fast float %19, %21
  %23 = load i32, ptr %13, align 4, !tbaa !251
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %struct.MVert, ptr %15, i64 %24
  store ptr %25, ptr %7, align 8, !tbaa !44
  %26 = getelementptr inbounds %struct.MFace, ptr %11, i64 %12, i32 1
  %27 = load i32, ptr %26, align 4, !tbaa !253
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %struct.MVert, ptr %15, i64 %28
  %30 = getelementptr inbounds [4 x ptr], ptr %7, i64 0, i64 1
  store ptr %29, ptr %30, align 8, !tbaa !44
  %31 = getelementptr inbounds %struct.MFace, ptr %11, i64 %12, i32 2
  %32 = load i32, ptr %31, align 4, !tbaa !254
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %struct.MVert, ptr %15, i64 %33
  %35 = getelementptr inbounds [4 x ptr], ptr %7, i64 0, i64 2
  store ptr %34, ptr %35, align 8, !tbaa !44
  %36 = getelementptr inbounds %struct.MFace, ptr %11, i64 %12, i32 3
  %37 = load i32, ptr %36, align 4, !tbaa !255
  %38 = icmp eq i32 %37, 0
  %39 = zext i32 %37 to i64
  %40 = getelementptr inbounds %struct.MVert, ptr %15, i64 %39
  %41 = select i1 %38, ptr null, ptr %40
  %42 = getelementptr inbounds [4 x ptr], ptr %7, i64 0, i64 3
  store ptr %41, ptr %42, align 8, !tbaa !44
  %43 = getelementptr inbounds %struct.MVert, ptr %17, i64 %24
  %44 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 1
  store ptr %43, ptr %44, align 8, !tbaa !44
  %45 = getelementptr inbounds %struct.MVert, ptr %17, i64 %28
  %46 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 1, i64 1
  store ptr %45, ptr %46, align 8, !tbaa !44
  %47 = getelementptr inbounds %struct.MVert, ptr %17, i64 %33
  %48 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 1, i64 2
  store ptr %47, ptr %48, align 8, !tbaa !44
  %49 = getelementptr inbounds %struct.MVert, ptr %17, i64 %39
  %50 = select i1 %38, ptr null, ptr %49
  %51 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 1, i64 3
  store ptr %50, ptr %51, align 8, !tbaa !44
  %52 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 9
  store i32 3, ptr %52, align 8, !tbaa !256
  %53 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 12
  %54 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 10
  store i32 %1, ptr %54, align 4, !tbaa !257
  %55 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !258
  %57 = load ptr, ptr %0, align 8, !tbaa !259
  %58 = icmp eq ptr %56, %57
  br i1 %58, label %59, label %67

59:                                               ; preds = %4
  %60 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 13, i32 10
  %61 = load i32, ptr %60, align 4, !tbaa !260
  %62 = icmp eq i32 %61, %1
  br i1 %62, label %63, label %67

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 13, i32 9
  %65 = load i32, ptr %64, align 8, !tbaa !261
  %66 = icmp eq i32 %65, 3
  br i1 %66, label %3072, label %67

67:                                               ; preds = %63, %59, %4
  %68 = getelementptr inbounds %struct.BVHTreeRay, ptr %2, i64 0, i32 2
  %69 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 13
  %70 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 11
  %71 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 15
  %72 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 6
  %73 = getelementptr i8, ptr %0, i64 52
  %74 = getelementptr i8, ptr %0, i64 56
  %75 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 18
  %76 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 3
  %77 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 2
  %78 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 3, i64 1
  %79 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 2, i64 1
  %80 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 3, i64 2
  %81 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 2, i64 2
  %82 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 4
  %83 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 4, i64 1
  %84 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 4, i64 2
  %85 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 18, i64 1
  %86 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 18, i64 2
  %87 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 5
  %88 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 19
  %89 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 5, i64 1
  %90 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 5, i64 2
  %91 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 6
  %92 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 6, i64 1
  %93 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 6, i64 2
  %94 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 19, i64 1
  %95 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 19, i64 2
  %96 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 13, i32 12
  %97 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 13, i32 8
  %98 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 13, i32 8, i64 1
  %99 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 13, i32 6
  %100 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 13, i32 6, i64 2
  %101 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 13, i32 7
  %102 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 13, i32 1
  %103 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 13, i32 7, i64 1
  %104 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 13, i32 7, i64 2
  %105 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 13, i32 9
  %106 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 13, i32 1, i64 1
  %107 = getelementptr inbounds %struct.ParticleCollision, ptr %0, i64 0, i32 13, i32 1, i64 2
  br label %108

108:                                              ; preds = %3065, %67
  %109 = phi ptr [ %47, %67 ], [ %3070, %3065 ]
  %110 = phi ptr [ %34, %67 ], [ %3068, %3065 ]
  %111 = phi ptr [ %45, %67 ], [ %3069, %3065 ]
  %112 = phi ptr [ %29, %67 ], [ %3067, %3065 ]
  %113 = phi float [ %22, %67 ], [ %3066, %3065 ]
  %114 = load float, ptr %68, align 4, !tbaa !262
  store i16 0, ptr %53, align 2, !tbaa !264
  %115 = load float, ptr %71, align 4, !tbaa !265
  %116 = fcmp fast ogt float %115, 0.000000e+00
  %117 = fmul fast float %115, 0x3F14F8B580000000
  %118 = select i1 %116, float %117, float 0x3F50624DE0000000
  %119 = load float, ptr %72, align 8, !tbaa !266
  %120 = load float, ptr %73, align 4, !tbaa !267
  %121 = load float, ptr %74, align 8, !tbaa !268
  %122 = fsub fast float %121, %120
  %123 = fmul fast float %122, %119
  %124 = fadd fast float %123, %120
  %125 = load i32, ptr %52, align 8, !tbaa !256
  %126 = icmp sgt i32 %125, 0
  br i1 %126, label %131, label %127

127:                                              ; preds = %108
  %128 = load float, ptr %77, align 8, !tbaa !79
  %129 = load float, ptr %79, align 4, !tbaa !79
  %130 = load float, ptr %81, align 8, !tbaa !79
  br label %186

131:                                              ; preds = %108
  %132 = load ptr, ptr %7, align 8, !tbaa !44
  %133 = load ptr, ptr %44, align 8, !tbaa !44
  %134 = load float, ptr %132, align 4, !tbaa !79
  %135 = load float, ptr %133, align 4, !tbaa !79
  %136 = fmul fast float %135, %124
  %137 = fadd fast float %136, %134
  store float %137, ptr %77, align 8, !tbaa !79
  %138 = getelementptr inbounds float, ptr %132, i64 1
  %139 = load float, ptr %138, align 4, !tbaa !79
  %140 = getelementptr inbounds float, ptr %133, i64 1
  %141 = load float, ptr %140, align 4, !tbaa !79
  %142 = fmul fast float %141, %124
  %143 = fadd fast float %142, %139
  store float %143, ptr %79, align 4, !tbaa !79
  %144 = getelementptr inbounds float, ptr %132, i64 2
  %145 = load float, ptr %144, align 4, !tbaa !79
  %146 = getelementptr inbounds float, ptr %133, i64 2
  %147 = load float, ptr %146, align 4, !tbaa !79
  %148 = fmul fast float %147, %124
  %149 = fadd fast float %148, %145
  store float %149, ptr %81, align 8, !tbaa !79
  %150 = icmp eq i32 %125, 1
  br i1 %150, label %186, label %151

151:                                              ; preds = %131
  %152 = load float, ptr %112, align 4, !tbaa !79
  %153 = load float, ptr %111, align 4, !tbaa !79
  %154 = fmul fast float %153, %124
  %155 = fadd fast float %154, %152
  store float %155, ptr %76, align 4, !tbaa !79
  %156 = getelementptr inbounds float, ptr %112, i64 1
  %157 = load float, ptr %156, align 4, !tbaa !79
  %158 = getelementptr inbounds float, ptr %111, i64 1
  %159 = load float, ptr %158, align 4, !tbaa !79
  %160 = fmul fast float %159, %124
  %161 = fadd fast float %160, %157
  store float %161, ptr %78, align 8, !tbaa !79
  %162 = getelementptr inbounds float, ptr %112, i64 2
  %163 = load float, ptr %162, align 4, !tbaa !79
  %164 = getelementptr inbounds float, ptr %111, i64 2
  %165 = load float, ptr %164, align 4, !tbaa !79
  %166 = fmul fast float %165, %124
  %167 = fadd fast float %166, %163
  store float %167, ptr %80, align 4, !tbaa !79
  %168 = icmp ugt i32 %125, 2
  br i1 %168, label %169, label %186

169:                                              ; preds = %151
  %170 = load float, ptr %110, align 4, !tbaa !79
  %171 = load float, ptr %109, align 4, !tbaa !79
  %172 = fmul fast float %171, %124
  %173 = fadd fast float %172, %170
  store float %173, ptr %82, align 8, !tbaa !79
  %174 = getelementptr inbounds float, ptr %110, i64 1
  %175 = load float, ptr %174, align 4, !tbaa !79
  %176 = getelementptr inbounds float, ptr %109, i64 1
  %177 = load float, ptr %176, align 4, !tbaa !79
  %178 = fmul fast float %177, %124
  %179 = fadd fast float %178, %175
  store float %179, ptr %83, align 4, !tbaa !79
  %180 = getelementptr inbounds float, ptr %110, i64 2
  %181 = load float, ptr %180, align 4, !tbaa !79
  %182 = getelementptr inbounds float, ptr %109, i64 2
  %183 = load float, ptr %182, align 4, !tbaa !79
  %184 = fmul fast float %183, %124
  %185 = fadd fast float %184, %181
  store float %185, ptr %84, align 8, !tbaa !79
  br label %186

186:                                              ; preds = %127, %131, %151, %169
  %187 = phi float [ %130, %127 ], [ %149, %131 ], [ %149, %151 ], [ %149, %169 ]
  %188 = phi float [ %129, %127 ], [ %143, %131 ], [ %143, %151 ], [ %143, %169 ]
  %189 = phi float [ %128, %127 ], [ %137, %131 ], [ %137, %151 ], [ %137, %169 ]
  %190 = load float, ptr %76, align 4, !tbaa !79
  %191 = fsub fast float %190, %189
  %192 = load float, ptr %78, align 8, !tbaa !79
  %193 = fsub fast float %192, %188
  %194 = load float, ptr %80, align 4, !tbaa !79
  %195 = fsub fast float %194, %187
  %196 = load float, ptr %82, align 8, !tbaa !79
  %197 = fsub fast float %196, %189
  %198 = load float, ptr %83, align 4, !tbaa !79
  %199 = fsub fast float %198, %188
  %200 = load float, ptr %84, align 8, !tbaa !79
  %201 = fsub fast float %200, %187
  %202 = load float, ptr %75, align 4, !tbaa !79
  %203 = fsub fast float %202, %189
  %204 = load float, ptr %85, align 4, !tbaa !79
  %205 = fsub fast float %204, %188
  %206 = load float, ptr %86, align 4, !tbaa !79
  %207 = fsub fast float %206, %187
  %208 = fmul fast float %201, %193
  %209 = fmul fast float %199, %195
  %210 = fsub fast float %208, %209
  %211 = fmul fast float %197, %195
  %212 = fmul fast float %201, %191
  %213 = fsub fast float %211, %212
  %214 = fmul fast float %199, %191
  %215 = fmul fast float %197, %193
  %216 = fsub fast float %214, %215
  %217 = fmul fast float %210, %210
  %218 = fmul fast float %213, %213
  %219 = fmul fast float %216, %216
  %220 = fadd fast float %217, %219
  %221 = fadd fast float %220, %218
  %222 = fcmp fast ogt float %221, 0x38AA95A5C0000000
  br i1 %222, label %223, label %229

223:                                              ; preds = %186
  %224 = call fast float @llvm.sqrt.f32(float %221)
  %225 = fdiv fast float 1.000000e+00, %224
  %226 = fmul fast float %225, %210
  %227 = fmul fast float %225, %213
  %228 = fmul fast float %225, %216
  br label %229

229:                                              ; preds = %186, %223
  %230 = phi float [ %226, %223 ], [ 0.000000e+00, %186 ]
  %231 = phi float [ %227, %223 ], [ 0.000000e+00, %186 ]
  %232 = phi float [ %228, %223 ], [ 0.000000e+00, %186 ]
  %233 = fmul fast float %230, %203
  %234 = fmul fast float %231, %205
  %235 = fadd fast float %234, %233
  %236 = fmul fast float %232, %207
  %237 = fadd fast float %235, %236
  %238 = fcmp fast olt float %237, 0.000000e+00
  %239 = fneg fast float %237
  %240 = zext i1 %238 to i16
  %241 = select nnan ninf i1 %238, float %239, float %237
  store i16 %240, ptr %70, align 8
  %242 = fsub fast float %241, %114
  %243 = fneg fast float %114
  %244 = fsub fast float 1.000000e+00, %118
  %245 = fsub fast float 1.000000e+00, %119
  %246 = fmul fast float %245, %118
  %247 = fadd fast float %246, %119
  %248 = fmul fast float %247, %122
  %249 = fadd fast float %248, %120
  br i1 %126, label %250, label %305

250:                                              ; preds = %229
  %251 = load ptr, ptr %7, align 8, !tbaa !44
  %252 = load ptr, ptr %44, align 8, !tbaa !44
  %253 = load float, ptr %251, align 4, !tbaa !79
  %254 = load float, ptr %252, align 4, !tbaa !79
  %255 = fmul fast float %254, %249
  %256 = fadd fast float %255, %253
  store float %256, ptr %77, align 8, !tbaa !79
  %257 = getelementptr inbounds float, ptr %251, i64 1
  %258 = load float, ptr %257, align 4, !tbaa !79
  %259 = getelementptr inbounds float, ptr %252, i64 1
  %260 = load float, ptr %259, align 4, !tbaa !79
  %261 = fmul fast float %260, %249
  %262 = fadd fast float %261, %258
  store float %262, ptr %79, align 4, !tbaa !79
  %263 = getelementptr inbounds float, ptr %251, i64 2
  %264 = load float, ptr %263, align 4, !tbaa !79
  %265 = getelementptr inbounds float, ptr %252, i64 2
  %266 = load float, ptr %265, align 4, !tbaa !79
  %267 = fmul fast float %266, %249
  %268 = fadd fast float %267, %264
  store float %268, ptr %81, align 8, !tbaa !79
  %269 = icmp eq i32 %125, 1
  br i1 %269, label %305, label %270

270:                                              ; preds = %250
  %271 = load float, ptr %112, align 4, !tbaa !79
  %272 = load float, ptr %111, align 4, !tbaa !79
  %273 = fmul fast float %272, %249
  %274 = fadd fast float %273, %271
  store float %274, ptr %76, align 4, !tbaa !79
  %275 = getelementptr inbounds float, ptr %112, i64 1
  %276 = load float, ptr %275, align 4, !tbaa !79
  %277 = getelementptr inbounds float, ptr %111, i64 1
  %278 = load float, ptr %277, align 4, !tbaa !79
  %279 = fmul fast float %278, %249
  %280 = fadd fast float %279, %276
  store float %280, ptr %78, align 8, !tbaa !79
  %281 = getelementptr inbounds float, ptr %112, i64 2
  %282 = load float, ptr %281, align 4, !tbaa !79
  %283 = getelementptr inbounds float, ptr %111, i64 2
  %284 = load float, ptr %283, align 4, !tbaa !79
  %285 = fmul fast float %284, %249
  %286 = fadd fast float %285, %282
  store float %286, ptr %80, align 4, !tbaa !79
  %287 = icmp ugt i32 %125, 2
  br i1 %287, label %288, label %305

288:                                              ; preds = %270
  %289 = load float, ptr %110, align 4, !tbaa !79
  %290 = load float, ptr %109, align 4, !tbaa !79
  %291 = fmul fast float %290, %249
  %292 = fadd fast float %291, %289
  store float %292, ptr %82, align 8, !tbaa !79
  %293 = getelementptr inbounds float, ptr %110, i64 1
  %294 = load float, ptr %293, align 4, !tbaa !79
  %295 = getelementptr inbounds float, ptr %109, i64 1
  %296 = load float, ptr %295, align 4, !tbaa !79
  %297 = fmul fast float %296, %249
  %298 = fadd fast float %297, %294
  store float %298, ptr %83, align 4, !tbaa !79
  %299 = getelementptr inbounds float, ptr %110, i64 2
  %300 = load float, ptr %299, align 4, !tbaa !79
  %301 = getelementptr inbounds float, ptr %109, i64 2
  %302 = load float, ptr %301, align 4, !tbaa !79
  %303 = fmul fast float %302, %249
  %304 = fadd fast float %303, %300
  store float %304, ptr %84, align 8, !tbaa !79
  br label %305

305:                                              ; preds = %229, %250, %270, %288
  call void @interp_v3_v3v3(ptr noundef nonnull %87, ptr noundef nonnull %75, ptr noundef nonnull %88, float noundef nofpclass(nan inf) %118) #14
  %306 = load float, ptr %76, align 4, !tbaa !79
  %307 = load float, ptr %77, align 8, !tbaa !79
  %308 = fsub fast float %306, %307
  %309 = load float, ptr %78, align 8, !tbaa !79
  %310 = load float, ptr %79, align 4, !tbaa !79
  %311 = fsub fast float %309, %310
  %312 = load float, ptr %80, align 4, !tbaa !79
  %313 = load float, ptr %81, align 8, !tbaa !79
  %314 = fsub fast float %312, %313
  %315 = load float, ptr %82, align 8, !tbaa !79
  %316 = fsub fast float %315, %307
  %317 = load float, ptr %83, align 4, !tbaa !79
  %318 = fsub fast float %317, %310
  %319 = load float, ptr %84, align 8, !tbaa !79
  %320 = fsub fast float %319, %313
  %321 = load float, ptr %87, align 4, !tbaa !79
  %322 = fsub fast float %321, %307
  %323 = load float, ptr %89, align 8, !tbaa !79
  %324 = fsub fast float %323, %310
  %325 = load float, ptr %90, align 4, !tbaa !79
  %326 = fsub fast float %325, %313
  %327 = fmul fast float %320, %311
  %328 = fmul fast float %318, %314
  %329 = fsub fast float %327, %328
  %330 = fmul fast float %316, %314
  %331 = fmul fast float %320, %308
  %332 = fsub fast float %330, %331
  %333 = fmul fast float %318, %308
  %334 = fmul fast float %316, %311
  %335 = fsub fast float %333, %334
  %336 = fmul fast float %329, %329
  %337 = fmul fast float %332, %332
  %338 = fmul fast float %335, %335
  %339 = fadd fast float %336, %338
  %340 = fadd fast float %339, %337
  %341 = fcmp fast ogt float %340, 0x38AA95A5C0000000
  br i1 %341, label %342, label %348

342:                                              ; preds = %305
  %343 = call fast float @llvm.sqrt.f32(float %340)
  %344 = fdiv fast float 1.000000e+00, %343
  %345 = fmul fast float %344, %329
  %346 = fmul fast float %344, %332
  %347 = fmul fast float %344, %335
  br label %348

348:                                              ; preds = %342, %305
  %349 = phi float [ %345, %342 ], [ 0.000000e+00, %305 ]
  %350 = phi float [ %346, %342 ], [ 0.000000e+00, %305 ]
  %351 = phi float [ %347, %342 ], [ 0.000000e+00, %305 ]
  %352 = fmul fast float %349, %322
  %353 = fmul fast float %350, %324
  %354 = fadd fast float %353, %352
  %355 = fmul fast float %351, %326
  %356 = fadd fast float %354, %355
  %357 = load i16, ptr %70, align 8, !tbaa !269
  switch i16 %357, label %367 [
    i16 -1, label %358
    i16 1, label %362
  ]

358:                                              ; preds = %348
  %359 = fcmp fast olt float %356, 0.000000e+00
  br i1 %359, label %360, label %361

360:                                              ; preds = %358
  store i16 1, ptr %70, align 8, !tbaa !269
  br label %362

361:                                              ; preds = %358
  store i16 0, ptr %70, align 8, !tbaa !269
  br label %367

362:                                              ; preds = %360, %348
  %363 = fneg fast float %349
  %364 = fneg fast float %350
  %365 = fneg fast float %351
  %366 = fneg fast float %356
  br label %367

367:                                              ; preds = %348, %361, %362
  %368 = phi i16 [ %357, %348 ], [ 1, %362 ], [ 0, %361 ]
  %369 = phi float [ %351, %348 ], [ %365, %362 ], [ %351, %361 ]
  %370 = phi float [ %350, %348 ], [ %364, %362 ], [ %350, %361 ]
  %371 = phi float [ %349, %348 ], [ %363, %362 ], [ %349, %361 ]
  %372 = phi float [ %356, %348 ], [ %366, %362 ], [ %356, %361 ]
  %373 = fsub fast float %372, %114
  %374 = fcmp fast olt float %242, 0.000000e+00
  %375 = fcmp fast ogt float %242, %243
  %376 = select i1 %374, i1 %375, i1 false
  br i1 %376, label %807, label %377

377:                                              ; preds = %367
  %378 = fcmp fast oeq float %373, %242
  br i1 %378, label %392, label %379

379:                                              ; preds = %377
  %380 = fsub fast float %372, %241
  %381 = fmul fast float %373, %118
  %382 = fdiv fast float %381, %380
  %383 = fsub fast float %118, %382
  %384 = fcmp fast olt float %383, 0.000000e+00
  br i1 %384, label %392, label %385

385:                                              ; preds = %379
  %386 = fcmp fast ole float %373, 0x3EE4F8B580000000
  %387 = fcmp fast oge float %373, 0xBEE4F8B580000000
  %388 = select i1 %386, i1 %387, i1 false
  br i1 %388, label %841, label %389

389:                                              ; preds = %385
  %390 = load float, ptr %74, align 8, !tbaa !268
  %391 = load i32, ptr %52, align 8, !tbaa !256
  br label %511

392:                                              ; preds = %379, %377
  %393 = load float, ptr %74, align 8, !tbaa !268
  %394 = load i32, ptr %52, align 8, !tbaa !256
  %395 = icmp sgt i32 %394, 0
  br i1 %395, label %396, label %455

396:                                              ; preds = %392
  %397 = load ptr, ptr %7, align 8, !tbaa !44
  %398 = load ptr, ptr %44, align 8, !tbaa !44
  %399 = load float, ptr %397, align 4, !tbaa !79
  %400 = load float, ptr %398, align 4, !tbaa !79
  %401 = fmul fast float %400, %393
  %402 = fadd fast float %401, %399
  store float %402, ptr %77, align 8, !tbaa !79
  %403 = getelementptr inbounds float, ptr %397, i64 1
  %404 = load float, ptr %403, align 4, !tbaa !79
  %405 = getelementptr inbounds float, ptr %398, i64 1
  %406 = load float, ptr %405, align 4, !tbaa !79
  %407 = fmul fast float %406, %393
  %408 = fadd fast float %407, %404
  store float %408, ptr %79, align 4, !tbaa !79
  %409 = getelementptr inbounds float, ptr %397, i64 2
  %410 = load float, ptr %409, align 4, !tbaa !79
  %411 = getelementptr inbounds float, ptr %398, i64 2
  %412 = load float, ptr %411, align 4, !tbaa !79
  %413 = fmul fast float %412, %393
  %414 = fadd fast float %413, %410
  store float %414, ptr %81, align 8, !tbaa !79
  %415 = icmp eq i32 %394, 1
  br i1 %415, label %455, label %416

416:                                              ; preds = %396
  %417 = load ptr, ptr %30, align 8, !tbaa !44
  %418 = load ptr, ptr %46, align 8, !tbaa !44
  %419 = load float, ptr %417, align 4, !tbaa !79
  %420 = load float, ptr %418, align 4, !tbaa !79
  %421 = fmul fast float %420, %393
  %422 = fadd fast float %421, %419
  store float %422, ptr %76, align 4, !tbaa !79
  %423 = getelementptr inbounds float, ptr %417, i64 1
  %424 = load float, ptr %423, align 4, !tbaa !79
  %425 = getelementptr inbounds float, ptr %418, i64 1
  %426 = load float, ptr %425, align 4, !tbaa !79
  %427 = fmul fast float %426, %393
  %428 = fadd fast float %427, %424
  store float %428, ptr %78, align 8, !tbaa !79
  %429 = getelementptr inbounds float, ptr %417, i64 2
  %430 = load float, ptr %429, align 4, !tbaa !79
  %431 = getelementptr inbounds float, ptr %418, i64 2
  %432 = load float, ptr %431, align 4, !tbaa !79
  %433 = fmul fast float %432, %393
  %434 = fadd fast float %433, %430
  store float %434, ptr %80, align 4, !tbaa !79
  %435 = icmp ugt i32 %394, 2
  br i1 %435, label %436, label %455

436:                                              ; preds = %416
  %437 = load ptr, ptr %35, align 8, !tbaa !44
  %438 = load ptr, ptr %48, align 8, !tbaa !44
  %439 = load float, ptr %437, align 4, !tbaa !79
  %440 = load float, ptr %438, align 4, !tbaa !79
  %441 = fmul fast float %440, %393
  %442 = fadd fast float %441, %439
  store float %442, ptr %82, align 8, !tbaa !79
  %443 = getelementptr inbounds float, ptr %437, i64 1
  %444 = load float, ptr %443, align 4, !tbaa !79
  %445 = getelementptr inbounds float, ptr %438, i64 1
  %446 = load float, ptr %445, align 4, !tbaa !79
  %447 = fmul fast float %446, %393
  %448 = fadd fast float %447, %444
  store float %448, ptr %83, align 4, !tbaa !79
  %449 = getelementptr inbounds float, ptr %437, i64 2
  %450 = load float, ptr %449, align 4, !tbaa !79
  %451 = getelementptr inbounds float, ptr %438, i64 2
  %452 = load float, ptr %451, align 4, !tbaa !79
  %453 = fmul fast float %452, %393
  %454 = fadd fast float %453, %450
  store float %454, ptr %84, align 8, !tbaa !79
  br label %455

455:                                              ; preds = %392, %396, %416, %436
  %456 = phi float [ %319, %392 ], [ %319, %396 ], [ %319, %416 ], [ %454, %436 ]
  %457 = phi float [ %317, %392 ], [ %317, %396 ], [ %317, %416 ], [ %448, %436 ]
  %458 = phi float [ %315, %392 ], [ %315, %396 ], [ %315, %416 ], [ %442, %436 ]
  %459 = phi float [ %313, %392 ], [ %414, %396 ], [ %414, %416 ], [ %414, %436 ]
  %460 = phi float [ %312, %392 ], [ %312, %396 ], [ %434, %416 ], [ %434, %436 ]
  %461 = phi float [ %310, %392 ], [ %408, %396 ], [ %408, %416 ], [ %408, %436 ]
  %462 = phi float [ %309, %392 ], [ %309, %396 ], [ %428, %416 ], [ %428, %436 ]
  %463 = phi float [ %307, %392 ], [ %402, %396 ], [ %402, %416 ], [ %402, %436 ]
  %464 = phi float [ %306, %392 ], [ %306, %396 ], [ %422, %416 ], [ %422, %436 ]
  %465 = fsub fast float %464, %463
  %466 = fsub fast float %462, %461
  %467 = fsub fast float %460, %459
  %468 = fsub fast float %458, %463
  %469 = fsub fast float %457, %461
  %470 = fsub fast float %456, %459
  %471 = load float, ptr %88, align 4, !tbaa !79
  %472 = fsub fast float %471, %463
  %473 = load float, ptr %94, align 4, !tbaa !79
  %474 = fsub fast float %473, %461
  %475 = load float, ptr %95, align 4, !tbaa !79
  %476 = fsub fast float %475, %459
  %477 = fmul fast float %470, %466
  %478 = fmul fast float %469, %467
  %479 = fsub fast float %477, %478
  %480 = fmul fast float %468, %467
  %481 = fmul fast float %470, %465
  %482 = fsub fast float %480, %481
  %483 = fmul fast float %469, %465
  %484 = fmul fast float %468, %466
  %485 = fsub fast float %483, %484
  %486 = fmul fast float %479, %479
  %487 = fmul fast float %482, %482
  %488 = fmul fast float %485, %485
  %489 = fadd fast float %486, %488
  %490 = fadd fast float %489, %487
  %491 = fcmp fast ogt float %490, 0x38AA95A5C0000000
  br i1 %491, label %492, label %498

492:                                              ; preds = %455
  %493 = call fast float @llvm.sqrt.f32(float %490)
  %494 = fdiv fast float 1.000000e+00, %493
  %495 = fmul fast float %494, %479
  %496 = fmul fast float %494, %482
  %497 = fmul fast float %494, %485
  br label %498

498:                                              ; preds = %492, %455
  %499 = phi float [ %495, %492 ], [ 0.000000e+00, %455 ]
  %500 = phi float [ %496, %492 ], [ 0.000000e+00, %455 ]
  %501 = phi float [ %497, %492 ], [ 0.000000e+00, %455 ]
  %502 = fmul fast float %499, %472
  %503 = fmul fast float %500, %474
  %504 = fadd fast float %503, %502
  %505 = fmul fast float %501, %476
  %506 = fadd fast float %504, %505
  %507 = icmp eq i16 %368, 1
  %508 = fneg fast float %506
  %509 = select i1 %507, float %508, float %506
  %510 = fsub fast float %509, %114
  br label %511

511:                                              ; preds = %389, %498
  %512 = phi i32 [ %391, %389 ], [ %394, %498 ]
  %513 = phi float [ %390, %389 ], [ %393, %498 ]
  %514 = phi float [ %118, %389 ], [ 1.000000e+00, %498 ]
  %515 = phi float [ %383, %389 ], [ %244, %498 ]
  %516 = phi float [ %373, %389 ], [ %510, %498 ]
  %517 = load float, ptr %72, align 8, !tbaa !266
  %518 = load float, ptr %73, align 4, !tbaa !267
  %519 = fsub fast float 1.000000e+00, %517
  %520 = fmul fast float %519, %515
  %521 = fadd fast float %520, %517
  %522 = fsub fast float %513, %518
  %523 = fmul fast float %521, %522
  %524 = fadd fast float %523, %518
  %525 = icmp sgt i32 %512, 0
  br i1 %525, label %526, label %585

526:                                              ; preds = %511
  %527 = load ptr, ptr %7, align 8, !tbaa !44
  %528 = load ptr, ptr %44, align 8, !tbaa !44
  %529 = load float, ptr %527, align 4, !tbaa !79
  %530 = load float, ptr %528, align 4, !tbaa !79
  %531 = fmul fast float %530, %524
  %532 = fadd fast float %531, %529
  store float %532, ptr %77, align 8, !tbaa !79
  %533 = getelementptr inbounds float, ptr %527, i64 1
  %534 = load float, ptr %533, align 4, !tbaa !79
  %535 = getelementptr inbounds float, ptr %528, i64 1
  %536 = load float, ptr %535, align 4, !tbaa !79
  %537 = fmul fast float %536, %524
  %538 = fadd fast float %537, %534
  store float %538, ptr %79, align 4, !tbaa !79
  %539 = getelementptr inbounds float, ptr %527, i64 2
  %540 = load float, ptr %539, align 4, !tbaa !79
  %541 = getelementptr inbounds float, ptr %528, i64 2
  %542 = load float, ptr %541, align 4, !tbaa !79
  %543 = fmul fast float %542, %524
  %544 = fadd fast float %543, %540
  store float %544, ptr %81, align 8, !tbaa !79
  %545 = icmp eq i32 %512, 1
  br i1 %545, label %585, label %546

546:                                              ; preds = %526
  %547 = load ptr, ptr %30, align 8, !tbaa !44
  %548 = load ptr, ptr %46, align 8, !tbaa !44
  %549 = load float, ptr %547, align 4, !tbaa !79
  %550 = load float, ptr %548, align 4, !tbaa !79
  %551 = fmul fast float %550, %524
  %552 = fadd fast float %551, %549
  store float %552, ptr %76, align 4, !tbaa !79
  %553 = getelementptr inbounds float, ptr %547, i64 1
  %554 = load float, ptr %553, align 4, !tbaa !79
  %555 = getelementptr inbounds float, ptr %548, i64 1
  %556 = load float, ptr %555, align 4, !tbaa !79
  %557 = fmul fast float %556, %524
  %558 = fadd fast float %557, %554
  store float %558, ptr %78, align 8, !tbaa !79
  %559 = getelementptr inbounds float, ptr %547, i64 2
  %560 = load float, ptr %559, align 4, !tbaa !79
  %561 = getelementptr inbounds float, ptr %548, i64 2
  %562 = load float, ptr %561, align 4, !tbaa !79
  %563 = fmul fast float %562, %524
  %564 = fadd fast float %563, %560
  store float %564, ptr %80, align 4, !tbaa !79
  %565 = icmp ugt i32 %512, 2
  br i1 %565, label %566, label %585

566:                                              ; preds = %546
  %567 = load ptr, ptr %35, align 8, !tbaa !44
  %568 = load ptr, ptr %48, align 8, !tbaa !44
  %569 = load float, ptr %567, align 4, !tbaa !79
  %570 = load float, ptr %568, align 4, !tbaa !79
  %571 = fmul fast float %570, %524
  %572 = fadd fast float %571, %569
  store float %572, ptr %82, align 8, !tbaa !79
  %573 = getelementptr inbounds float, ptr %567, i64 1
  %574 = load float, ptr %573, align 4, !tbaa !79
  %575 = getelementptr inbounds float, ptr %568, i64 1
  %576 = load float, ptr %575, align 4, !tbaa !79
  %577 = fmul fast float %576, %524
  %578 = fadd fast float %577, %574
  store float %578, ptr %83, align 4, !tbaa !79
  %579 = getelementptr inbounds float, ptr %567, i64 2
  %580 = load float, ptr %579, align 4, !tbaa !79
  %581 = getelementptr inbounds float, ptr %568, i64 2
  %582 = load float, ptr %581, align 4, !tbaa !79
  %583 = fmul fast float %582, %524
  %584 = fadd fast float %583, %580
  store float %584, ptr %84, align 8, !tbaa !79
  br label %585

585:                                              ; preds = %511, %526, %546, %566
  call void @interp_v3_v3v3(ptr noundef nonnull %87, ptr noundef nonnull %75, ptr noundef nonnull %88, float noundef nofpclass(nan inf) %515) #14
  %586 = load float, ptr %76, align 4, !tbaa !79
  %587 = load float, ptr %77, align 8, !tbaa !79
  %588 = fsub fast float %586, %587
  %589 = load float, ptr %78, align 8, !tbaa !79
  %590 = load float, ptr %79, align 4, !tbaa !79
  %591 = fsub fast float %589, %590
  %592 = load float, ptr %80, align 4, !tbaa !79
  %593 = load float, ptr %81, align 8, !tbaa !79
  %594 = fsub fast float %592, %593
  %595 = load float, ptr %82, align 8, !tbaa !79
  %596 = fsub fast float %595, %587
  %597 = load float, ptr %83, align 4, !tbaa !79
  %598 = fsub fast float %597, %590
  %599 = load float, ptr %84, align 8, !tbaa !79
  %600 = fsub fast float %599, %593
  %601 = load float, ptr %87, align 4, !tbaa !79
  %602 = fsub fast float %601, %587
  %603 = load float, ptr %89, align 8, !tbaa !79
  %604 = fsub fast float %603, %590
  %605 = load float, ptr %90, align 4, !tbaa !79
  %606 = fsub fast float %605, %593
  %607 = fmul fast float %600, %591
  %608 = fmul fast float %598, %594
  %609 = fsub fast float %607, %608
  %610 = fmul fast float %596, %594
  %611 = fmul fast float %600, %588
  %612 = fsub fast float %610, %611
  %613 = fmul fast float %598, %588
  %614 = fmul fast float %596, %591
  %615 = fsub fast float %613, %614
  %616 = fmul fast float %609, %609
  %617 = fmul fast float %612, %612
  %618 = fmul fast float %615, %615
  %619 = fadd fast float %616, %618
  %620 = fadd fast float %619, %617
  %621 = fcmp fast ogt float %620, 0x38AA95A5C0000000
  br i1 %621, label %622, label %628

622:                                              ; preds = %585
  %623 = call fast float @llvm.sqrt.f32(float %620)
  %624 = fdiv fast float 1.000000e+00, %623
  %625 = fmul fast float %624, %609
  %626 = fmul fast float %624, %612
  %627 = fmul fast float %624, %615
  br label %628

628:                                              ; preds = %622, %585
  %629 = phi float [ %625, %622 ], [ 0.000000e+00, %585 ]
  %630 = phi float [ %626, %622 ], [ 0.000000e+00, %585 ]
  %631 = phi float [ %627, %622 ], [ 0.000000e+00, %585 ]
  %632 = fmul fast float %629, %602
  %633 = fmul fast float %630, %604
  %634 = fadd fast float %633, %632
  %635 = fmul fast float %631, %606
  %636 = fadd fast float %634, %635
  %637 = load i16, ptr %70, align 8, !tbaa !269
  switch i16 %637, label %647 [
    i16 -1, label %638
    i16 1, label %642
  ]

638:                                              ; preds = %628
  %639 = fcmp fast olt float %636, 0.000000e+00
  br i1 %639, label %640, label %641

640:                                              ; preds = %638
  store i16 1, ptr %70, align 8, !tbaa !269
  br label %642

641:                                              ; preds = %638
  store i16 0, ptr %70, align 8, !tbaa !269
  br label %647

642:                                              ; preds = %640, %628
  %643 = fneg fast float %629
  %644 = fneg fast float %630
  %645 = fneg fast float %631
  %646 = fneg fast float %636
  br label %647

647:                                              ; preds = %628, %641, %642
  %648 = phi float [ %631, %628 ], [ %645, %642 ], [ %631, %641 ]
  %649 = phi float [ %630, %628 ], [ %644, %642 ], [ %630, %641 ]
  %650 = phi float [ %629, %628 ], [ %643, %642 ], [ %629, %641 ]
  %651 = phi float [ %636, %628 ], [ %646, %642 ], [ %636, %641 ]
  %652 = fsub fast float %651, %114
  %653 = fcmp fast oeq float %652, %516
  br i1 %653, label %1984, label %654

654:                                              ; preds = %647
  %655 = fsub fast float %515, %514
  %656 = fsub fast float %652, %516
  %657 = fmul fast float %652, %655
  %658 = fdiv fast float %657, %656
  %659 = fsub fast float %515, %658
  %660 = fcmp fast olt float %659, 0xBEE4F8B580000000
  %661 = fcmp fast ogt float %659, 1.000000e+00
  %662 = select i1 %660, i1 true, i1 %661
  br i1 %662, label %1984, label %663

663:                                              ; preds = %654
  %664 = fcmp fast ole float %652, 0x3EE4F8B580000000
  %665 = fcmp fast oge float %652, 0xBEE4F8B580000000
  %666 = select i1 %664, i1 %665, i1 false
  br i1 %666, label %821, label %667

667:                                              ; preds = %663
  %668 = load float, ptr %72, align 8, !tbaa !266
  %669 = load float, ptr %73, align 4, !tbaa !267
  %670 = load float, ptr %74, align 8, !tbaa !268
  %671 = fsub fast float 1.000000e+00, %668
  %672 = fmul fast float %671, %659
  %673 = fadd fast float %672, %668
  %674 = fsub fast float %670, %669
  %675 = fmul fast float %673, %674
  %676 = fadd fast float %675, %669
  %677 = load i32, ptr %52, align 8, !tbaa !256
  %678 = icmp sgt i32 %677, 0
  br i1 %678, label %679, label %738

679:                                              ; preds = %667
  %680 = load ptr, ptr %7, align 8, !tbaa !44
  %681 = load ptr, ptr %44, align 8, !tbaa !44
  %682 = load float, ptr %680, align 4, !tbaa !79
  %683 = load float, ptr %681, align 4, !tbaa !79
  %684 = fmul fast float %683, %676
  %685 = fadd fast float %684, %682
  store float %685, ptr %77, align 8, !tbaa !79
  %686 = getelementptr inbounds float, ptr %680, i64 1
  %687 = load float, ptr %686, align 4, !tbaa !79
  %688 = getelementptr inbounds float, ptr %681, i64 1
  %689 = load float, ptr %688, align 4, !tbaa !79
  %690 = fmul fast float %689, %676
  %691 = fadd fast float %690, %687
  store float %691, ptr %79, align 4, !tbaa !79
  %692 = getelementptr inbounds float, ptr %680, i64 2
  %693 = load float, ptr %692, align 4, !tbaa !79
  %694 = getelementptr inbounds float, ptr %681, i64 2
  %695 = load float, ptr %694, align 4, !tbaa !79
  %696 = fmul fast float %695, %676
  %697 = fadd fast float %696, %693
  store float %697, ptr %81, align 8, !tbaa !79
  %698 = icmp eq i32 %677, 1
  br i1 %698, label %738, label %699

699:                                              ; preds = %679
  %700 = load ptr, ptr %30, align 8, !tbaa !44
  %701 = load ptr, ptr %46, align 8, !tbaa !44
  %702 = load float, ptr %700, align 4, !tbaa !79
  %703 = load float, ptr %701, align 4, !tbaa !79
  %704 = fmul fast float %703, %676
  %705 = fadd fast float %704, %702
  store float %705, ptr %76, align 4, !tbaa !79
  %706 = getelementptr inbounds float, ptr %700, i64 1
  %707 = load float, ptr %706, align 4, !tbaa !79
  %708 = getelementptr inbounds float, ptr %701, i64 1
  %709 = load float, ptr %708, align 4, !tbaa !79
  %710 = fmul fast float %709, %676
  %711 = fadd fast float %710, %707
  store float %711, ptr %78, align 8, !tbaa !79
  %712 = getelementptr inbounds float, ptr %700, i64 2
  %713 = load float, ptr %712, align 4, !tbaa !79
  %714 = getelementptr inbounds float, ptr %701, i64 2
  %715 = load float, ptr %714, align 4, !tbaa !79
  %716 = fmul fast float %715, %676
  %717 = fadd fast float %716, %713
  store float %717, ptr %80, align 4, !tbaa !79
  %718 = icmp ugt i32 %677, 2
  br i1 %718, label %719, label %738

719:                                              ; preds = %699
  %720 = load ptr, ptr %35, align 8, !tbaa !44
  %721 = load ptr, ptr %48, align 8, !tbaa !44
  %722 = load float, ptr %720, align 4, !tbaa !79
  %723 = load float, ptr %721, align 4, !tbaa !79
  %724 = fmul fast float %723, %676
  %725 = fadd fast float %724, %722
  store float %725, ptr %82, align 8, !tbaa !79
  %726 = getelementptr inbounds float, ptr %720, i64 1
  %727 = load float, ptr %726, align 4, !tbaa !79
  %728 = getelementptr inbounds float, ptr %721, i64 1
  %729 = load float, ptr %728, align 4, !tbaa !79
  %730 = fmul fast float %729, %676
  %731 = fadd fast float %730, %727
  store float %731, ptr %83, align 4, !tbaa !79
  %732 = getelementptr inbounds float, ptr %720, i64 2
  %733 = load float, ptr %732, align 4, !tbaa !79
  %734 = getelementptr inbounds float, ptr %721, i64 2
  %735 = load float, ptr %734, align 4, !tbaa !79
  %736 = fmul fast float %735, %676
  %737 = fadd fast float %736, %733
  store float %737, ptr %84, align 8, !tbaa !79
  br label %738

738:                                              ; preds = %667, %679, %699, %719
  call void @interp_v3_v3v3(ptr noundef nonnull %87, ptr noundef nonnull %75, ptr noundef nonnull %88, float noundef nofpclass(nan inf) %659) #14
  %739 = load float, ptr %76, align 4, !tbaa !79
  %740 = load float, ptr %77, align 8, !tbaa !79
  %741 = fsub fast float %739, %740
  %742 = load float, ptr %78, align 8, !tbaa !79
  %743 = load float, ptr %79, align 4, !tbaa !79
  %744 = fsub fast float %742, %743
  %745 = load float, ptr %80, align 4, !tbaa !79
  %746 = load float, ptr %81, align 8, !tbaa !79
  %747 = fsub fast float %745, %746
  %748 = load float, ptr %82, align 8, !tbaa !79
  %749 = fsub fast float %748, %740
  %750 = load float, ptr %83, align 4, !tbaa !79
  %751 = fsub fast float %750, %743
  %752 = load float, ptr %84, align 8, !tbaa !79
  %753 = fsub fast float %752, %746
  %754 = load float, ptr %87, align 4, !tbaa !79
  %755 = fsub fast float %754, %740
  %756 = load float, ptr %89, align 8, !tbaa !79
  %757 = fsub fast float %756, %743
  %758 = load float, ptr %90, align 4, !tbaa !79
  %759 = fsub fast float %758, %746
  %760 = fmul fast float %753, %744
  %761 = fmul fast float %751, %747
  %762 = fsub fast float %760, %761
  %763 = fmul fast float %749, %747
  %764 = fmul fast float %753, %741
  %765 = fsub fast float %763, %764
  %766 = fmul fast float %751, %741
  %767 = fmul fast float %749, %744
  %768 = fsub fast float %766, %767
  %769 = fmul fast float %762, %762
  %770 = fmul fast float %765, %765
  %771 = fmul fast float %768, %768
  %772 = fadd fast float %769, %771
  %773 = fadd fast float %772, %770
  %774 = fcmp fast ogt float %773, 0x38AA95A5C0000000
  br i1 %774, label %775, label %781

775:                                              ; preds = %738
  %776 = call fast float @llvm.sqrt.f32(float %773)
  %777 = fdiv fast float 1.000000e+00, %776
  %778 = fmul fast float %777, %762
  %779 = fmul fast float %777, %765
  %780 = fmul fast float %777, %768
  br label %781

781:                                              ; preds = %775, %738
  %782 = phi float [ %778, %775 ], [ 0.000000e+00, %738 ]
  %783 = phi float [ %779, %775 ], [ 0.000000e+00, %738 ]
  %784 = phi float [ %780, %775 ], [ 0.000000e+00, %738 ]
  %785 = fmul fast float %782, %755
  %786 = fmul fast float %783, %757
  %787 = fadd fast float %786, %785
  %788 = fmul fast float %784, %759
  %789 = fadd fast float %787, %788
  %790 = load i16, ptr %70, align 8, !tbaa !269
  switch i16 %790, label %800 [
    i16 -1, label %791
    i16 1, label %795
  ]

791:                                              ; preds = %781
  %792 = fcmp fast olt float %789, 0.000000e+00
  br i1 %792, label %793, label %794

793:                                              ; preds = %791
  store i16 1, ptr %70, align 8, !tbaa !269
  br label %795

794:                                              ; preds = %791
  store i16 0, ptr %70, align 8, !tbaa !269
  br label %800

795:                                              ; preds = %793, %781
  %796 = fneg fast float %782
  %797 = fneg fast float %783
  %798 = fneg fast float %784
  %799 = fneg fast float %789
  br label %800

800:                                              ; preds = %781, %794, %795
  %801 = phi float [ %784, %781 ], [ %798, %795 ], [ %784, %794 ]
  %802 = phi float [ %783, %781 ], [ %797, %795 ], [ %783, %794 ]
  %803 = phi float [ %782, %781 ], [ %796, %795 ], [ %782, %794 ]
  %804 = phi float [ %789, %781 ], [ %799, %795 ], [ %789, %794 ]
  %805 = fsub fast float %804, %114
  %806 = fcmp fast oeq float %805, %652
  br i1 %806, label %1984, label %812

807:                                              ; preds = %367
  %808 = load <2 x float>, ptr %75, align 4, !tbaa !79
  store <2 x float> %808, ptr %87, align 4, !tbaa !79
  %809 = load float, ptr %86, align 4, !tbaa !79
  store float %809, ptr %90, align 4, !tbaa !79
  store float %371, ptr %91, align 8, !tbaa !79
  store float %370, ptr %92, align 4, !tbaa !79
  store float %369, ptr %93, align 8, !tbaa !79
  store i16 1, ptr %53, align 2, !tbaa !264
  %810 = extractelement <2 x float> %808, i64 0
  %811 = extractelement <2 x float> %808, i64 1
  br label %1907

812:                                              ; preds = %800
  %813 = fneg fast float %658
  %814 = fsub fast float %804, %651
  %815 = fmul fast float %805, %813
  %816 = fdiv fast float %815, %814
  %817 = fsub fast float %659, %816
  %818 = fcmp fast ole float %805, 0x3EE4F8B580000000
  %819 = fcmp fast oge float %805, 0xBEE4F8B580000000
  %820 = select i1 %818, i1 %819, i1 false
  br i1 %820, label %821, label %863

821:                                              ; preds = %812, %1003, %1152, %1301, %1450, %1599, %1748, %1897, %663
  %822 = phi float [ %605, %663 ], [ %758, %812 ], [ %954, %1003 ], [ %1103, %1152 ], [ %1252, %1301 ], [ %1401, %1450 ], [ %1550, %1599 ], [ %1699, %1748 ], [ %1848, %1897 ]
  %823 = phi float [ %603, %663 ], [ %756, %812 ], [ %952, %1003 ], [ %1101, %1152 ], [ %1250, %1301 ], [ %1399, %1450 ], [ %1548, %1599 ], [ %1697, %1748 ], [ %1846, %1897 ]
  %824 = phi float [ %601, %663 ], [ %754, %812 ], [ %950, %1003 ], [ %1099, %1152 ], [ %1248, %1301 ], [ %1397, %1450 ], [ %1546, %1599 ], [ %1695, %1748 ], [ %1844, %1897 ]
  %825 = phi float [ %599, %663 ], [ %752, %812 ], [ %948, %1003 ], [ %1097, %1152 ], [ %1246, %1301 ], [ %1395, %1450 ], [ %1544, %1599 ], [ %1693, %1748 ], [ %1842, %1897 ]
  %826 = phi float [ %597, %663 ], [ %750, %812 ], [ %946, %1003 ], [ %1095, %1152 ], [ %1244, %1301 ], [ %1393, %1450 ], [ %1542, %1599 ], [ %1691, %1748 ], [ %1840, %1897 ]
  %827 = phi float [ %595, %663 ], [ %748, %812 ], [ %944, %1003 ], [ %1093, %1152 ], [ %1242, %1301 ], [ %1391, %1450 ], [ %1540, %1599 ], [ %1689, %1748 ], [ %1838, %1897 ]
  %828 = phi float [ %593, %663 ], [ %746, %812 ], [ %942, %1003 ], [ %1091, %1152 ], [ %1240, %1301 ], [ %1389, %1450 ], [ %1538, %1599 ], [ %1687, %1748 ], [ %1836, %1897 ]
  %829 = phi float [ %592, %663 ], [ %745, %812 ], [ %941, %1003 ], [ %1090, %1152 ], [ %1239, %1301 ], [ %1388, %1450 ], [ %1537, %1599 ], [ %1686, %1748 ], [ %1835, %1897 ]
  %830 = phi float [ %590, %663 ], [ %743, %812 ], [ %939, %1003 ], [ %1088, %1152 ], [ %1237, %1301 ], [ %1386, %1450 ], [ %1535, %1599 ], [ %1684, %1748 ], [ %1833, %1897 ]
  %831 = phi float [ %589, %663 ], [ %742, %812 ], [ %938, %1003 ], [ %1087, %1152 ], [ %1236, %1301 ], [ %1385, %1450 ], [ %1534, %1599 ], [ %1683, %1748 ], [ %1832, %1897 ]
  %832 = phi float [ %587, %663 ], [ %740, %812 ], [ %936, %1003 ], [ %1085, %1152 ], [ %1234, %1301 ], [ %1383, %1450 ], [ %1532, %1599 ], [ %1681, %1748 ], [ %1830, %1897 ]
  %833 = phi float [ %586, %663 ], [ %739, %812 ], [ %935, %1003 ], [ %1084, %1152 ], [ %1233, %1301 ], [ %1382, %1450 ], [ %1531, %1599 ], [ %1680, %1748 ], [ %1829, %1897 ]
  %834 = phi float [ %648, %663 ], [ %801, %812 ], [ %997, %1003 ], [ %1146, %1152 ], [ %1295, %1301 ], [ %1444, %1450 ], [ %1593, %1599 ], [ %1742, %1748 ], [ %1891, %1897 ]
  %835 = phi float [ %649, %663 ], [ %802, %812 ], [ %998, %1003 ], [ %1147, %1152 ], [ %1296, %1301 ], [ %1445, %1450 ], [ %1594, %1599 ], [ %1743, %1748 ], [ %1892, %1897 ]
  %836 = phi float [ %650, %663 ], [ %803, %812 ], [ %999, %1003 ], [ %1148, %1152 ], [ %1297, %1301 ], [ %1446, %1450 ], [ %1595, %1599 ], [ %1744, %1748 ], [ %1893, %1897 ]
  %837 = phi float [ %659, %663 ], [ %817, %812 ], [ %1008, %1003 ], [ %1157, %1152 ], [ %1306, %1301 ], [ %1455, %1450 ], [ %1604, %1599 ], [ %1753, %1748 ], [ %1901, %1897 ]
  %838 = fcmp fast oge float %837, 0xBEE4F8B580000000
  %839 = fcmp fast ole float %837, 1.000000e+00
  %840 = select i1 %838, i1 %839, i1 false
  br i1 %840, label %846, label %1984

841:                                              ; preds = %385
  %842 = fcmp fast oge float %383, 0xBEE4F8B580000000
  %843 = fcmp fast ole float %383, 1.000000e+00
  %844 = select i1 %842, i1 %843, i1 false
  br i1 %844, label %845, label %1984

845:                                              ; preds = %841
  store float %371, ptr %91, align 8, !tbaa !79
  store float %370, ptr %92, align 4, !tbaa !79
  store float %369, ptr %93, align 8, !tbaa !79
  br label %848

846:                                              ; preds = %821
  %847 = fcmp olt float %837, 0.000000e+00
  store float %836, ptr %91, align 8, !tbaa !79
  store float %835, ptr %92, align 4, !tbaa !79
  store float %834, ptr %93, align 8, !tbaa !79
  br i1 %847, label %1907, label %848

848:                                              ; preds = %845, %846
  %849 = phi float [ %325, %845 ], [ %822, %846 ]
  %850 = phi float [ %323, %845 ], [ %823, %846 ]
  %851 = phi float [ %321, %845 ], [ %824, %846 ]
  %852 = phi float [ %319, %845 ], [ %825, %846 ]
  %853 = phi float [ %317, %845 ], [ %826, %846 ]
  %854 = phi float [ %315, %845 ], [ %827, %846 ]
  %855 = phi float [ %313, %845 ], [ %828, %846 ]
  %856 = phi float [ %312, %845 ], [ %829, %846 ]
  %857 = phi float [ %310, %845 ], [ %830, %846 ]
  %858 = phi float [ %309, %845 ], [ %831, %846 ]
  %859 = phi float [ %307, %845 ], [ %832, %846 ]
  %860 = phi float [ %306, %845 ], [ %833, %846 ]
  %861 = phi float [ %383, %845 ], [ %837, %846 ]
  %862 = fcmp fast ogt float %861, 1.000000e+00
  br i1 %862, label %1907, label %1905

863:                                              ; preds = %812
  %864 = load float, ptr %72, align 8, !tbaa !266
  %865 = load float, ptr %73, align 4, !tbaa !267
  %866 = load float, ptr %74, align 8, !tbaa !268
  %867 = fsub fast float 1.000000e+00, %864
  %868 = fmul fast float %867, %817
  %869 = fadd fast float %868, %864
  %870 = fsub fast float %866, %865
  %871 = fmul fast float %869, %870
  %872 = fadd fast float %871, %865
  %873 = load i32, ptr %52, align 8, !tbaa !256
  %874 = icmp sgt i32 %873, 0
  br i1 %874, label %875, label %934

875:                                              ; preds = %863
  %876 = load ptr, ptr %7, align 8, !tbaa !44
  %877 = load ptr, ptr %44, align 8, !tbaa !44
  %878 = load float, ptr %876, align 4, !tbaa !79
  %879 = load float, ptr %877, align 4, !tbaa !79
  %880 = fmul fast float %879, %872
  %881 = fadd fast float %880, %878
  store float %881, ptr %77, align 8, !tbaa !79
  %882 = getelementptr inbounds float, ptr %876, i64 1
  %883 = load float, ptr %882, align 4, !tbaa !79
  %884 = getelementptr inbounds float, ptr %877, i64 1
  %885 = load float, ptr %884, align 4, !tbaa !79
  %886 = fmul fast float %885, %872
  %887 = fadd fast float %886, %883
  store float %887, ptr %79, align 4, !tbaa !79
  %888 = getelementptr inbounds float, ptr %876, i64 2
  %889 = load float, ptr %888, align 4, !tbaa !79
  %890 = getelementptr inbounds float, ptr %877, i64 2
  %891 = load float, ptr %890, align 4, !tbaa !79
  %892 = fmul fast float %891, %872
  %893 = fadd fast float %892, %889
  store float %893, ptr %81, align 8, !tbaa !79
  %894 = icmp eq i32 %873, 1
  br i1 %894, label %934, label %895

895:                                              ; preds = %875
  %896 = load ptr, ptr %30, align 8, !tbaa !44
  %897 = load ptr, ptr %46, align 8, !tbaa !44
  %898 = load float, ptr %896, align 4, !tbaa !79
  %899 = load float, ptr %897, align 4, !tbaa !79
  %900 = fmul fast float %899, %872
  %901 = fadd fast float %900, %898
  store float %901, ptr %76, align 4, !tbaa !79
  %902 = getelementptr inbounds float, ptr %896, i64 1
  %903 = load float, ptr %902, align 4, !tbaa !79
  %904 = getelementptr inbounds float, ptr %897, i64 1
  %905 = load float, ptr %904, align 4, !tbaa !79
  %906 = fmul fast float %905, %872
  %907 = fadd fast float %906, %903
  store float %907, ptr %78, align 8, !tbaa !79
  %908 = getelementptr inbounds float, ptr %896, i64 2
  %909 = load float, ptr %908, align 4, !tbaa !79
  %910 = getelementptr inbounds float, ptr %897, i64 2
  %911 = load float, ptr %910, align 4, !tbaa !79
  %912 = fmul fast float %911, %872
  %913 = fadd fast float %912, %909
  store float %913, ptr %80, align 4, !tbaa !79
  %914 = icmp ugt i32 %873, 2
  br i1 %914, label %915, label %934

915:                                              ; preds = %895
  %916 = load ptr, ptr %35, align 8, !tbaa !44
  %917 = load ptr, ptr %48, align 8, !tbaa !44
  %918 = load float, ptr %916, align 4, !tbaa !79
  %919 = load float, ptr %917, align 4, !tbaa !79
  %920 = fmul fast float %919, %872
  %921 = fadd fast float %920, %918
  store float %921, ptr %82, align 8, !tbaa !79
  %922 = getelementptr inbounds float, ptr %916, i64 1
  %923 = load float, ptr %922, align 4, !tbaa !79
  %924 = getelementptr inbounds float, ptr %917, i64 1
  %925 = load float, ptr %924, align 4, !tbaa !79
  %926 = fmul fast float %925, %872
  %927 = fadd fast float %926, %923
  store float %927, ptr %83, align 4, !tbaa !79
  %928 = getelementptr inbounds float, ptr %916, i64 2
  %929 = load float, ptr %928, align 4, !tbaa !79
  %930 = getelementptr inbounds float, ptr %917, i64 2
  %931 = load float, ptr %930, align 4, !tbaa !79
  %932 = fmul fast float %931, %872
  %933 = fadd fast float %932, %929
  store float %933, ptr %84, align 8, !tbaa !79
  br label %934

934:                                              ; preds = %863, %875, %895, %915
  call void @interp_v3_v3v3(ptr noundef nonnull %87, ptr noundef nonnull %75, ptr noundef nonnull %88, float noundef nofpclass(nan inf) %817) #14
  %935 = load float, ptr %76, align 4, !tbaa !79
  %936 = load float, ptr %77, align 8, !tbaa !79
  %937 = fsub fast float %935, %936
  %938 = load float, ptr %78, align 8, !tbaa !79
  %939 = load float, ptr %79, align 4, !tbaa !79
  %940 = fsub fast float %938, %939
  %941 = load float, ptr %80, align 4, !tbaa !79
  %942 = load float, ptr %81, align 8, !tbaa !79
  %943 = fsub fast float %941, %942
  %944 = load float, ptr %82, align 8, !tbaa !79
  %945 = fsub fast float %944, %936
  %946 = load float, ptr %83, align 4, !tbaa !79
  %947 = fsub fast float %946, %939
  %948 = load float, ptr %84, align 8, !tbaa !79
  %949 = fsub fast float %948, %942
  %950 = load float, ptr %87, align 4, !tbaa !79
  %951 = fsub fast float %950, %936
  %952 = load float, ptr %89, align 8, !tbaa !79
  %953 = fsub fast float %952, %939
  %954 = load float, ptr %90, align 4, !tbaa !79
  %955 = fsub fast float %954, %942
  %956 = fmul fast float %949, %940
  %957 = fmul fast float %947, %943
  %958 = fsub fast float %956, %957
  %959 = fmul fast float %945, %943
  %960 = fmul fast float %949, %937
  %961 = fsub fast float %959, %960
  %962 = fmul fast float %947, %937
  %963 = fmul fast float %945, %940
  %964 = fsub fast float %962, %963
  %965 = fmul fast float %958, %958
  %966 = fmul fast float %961, %961
  %967 = fmul fast float %964, %964
  %968 = fadd fast float %965, %967
  %969 = fadd fast float %968, %966
  %970 = fcmp fast ogt float %969, 0x38AA95A5C0000000
  br i1 %970, label %971, label %977

971:                                              ; preds = %934
  %972 = call fast float @llvm.sqrt.f32(float %969)
  %973 = fdiv fast float 1.000000e+00, %972
  %974 = fmul fast float %973, %958
  %975 = fmul fast float %973, %961
  %976 = fmul fast float %973, %964
  br label %977

977:                                              ; preds = %971, %934
  %978 = phi float [ %974, %971 ], [ 0.000000e+00, %934 ]
  %979 = phi float [ %975, %971 ], [ 0.000000e+00, %934 ]
  %980 = phi float [ %976, %971 ], [ 0.000000e+00, %934 ]
  %981 = fmul fast float %978, %951
  %982 = fmul fast float %979, %953
  %983 = fadd fast float %982, %981
  %984 = fmul fast float %980, %955
  %985 = fadd fast float %983, %984
  %986 = load i16, ptr %70, align 8, !tbaa !269
  switch i16 %986, label %996 [
    i16 -1, label %987
    i16 1, label %991
  ]

987:                                              ; preds = %977
  %988 = fcmp fast olt float %985, 0.000000e+00
  br i1 %988, label %989, label %990

989:                                              ; preds = %987
  store i16 1, ptr %70, align 8, !tbaa !269
  br label %991

990:                                              ; preds = %987
  store i16 0, ptr %70, align 8, !tbaa !269
  br label %996

991:                                              ; preds = %989, %977
  %992 = fneg fast float %978
  %993 = fneg fast float %979
  %994 = fneg fast float %980
  %995 = fneg fast float %985
  br label %996

996:                                              ; preds = %977, %990, %991
  %997 = phi float [ %980, %977 ], [ %994, %991 ], [ %980, %990 ]
  %998 = phi float [ %979, %977 ], [ %993, %991 ], [ %979, %990 ]
  %999 = phi float [ %978, %977 ], [ %992, %991 ], [ %978, %990 ]
  %1000 = phi float [ %985, %977 ], [ %995, %991 ], [ %985, %990 ]
  %1001 = fsub fast float %1000, %114
  %1002 = fcmp fast oeq float %1001, %805
  br i1 %1002, label %1984, label %1003

1003:                                             ; preds = %996
  %1004 = fneg fast float %816
  %1005 = fsub fast float %1000, %804
  %1006 = fmul fast float %1001, %1004
  %1007 = fdiv fast float %1006, %1005
  %1008 = fsub fast float %817, %1007
  %1009 = fcmp fast ole float %1001, 0x3EE4F8B580000000
  %1010 = fcmp fast oge float %1001, 0xBEE4F8B580000000
  %1011 = select i1 %1009, i1 %1010, i1 false
  br i1 %1011, label %821, label %1012

1012:                                             ; preds = %1003
  %1013 = load float, ptr %72, align 8, !tbaa !266
  %1014 = load float, ptr %73, align 4, !tbaa !267
  %1015 = load float, ptr %74, align 8, !tbaa !268
  %1016 = fsub fast float 1.000000e+00, %1013
  %1017 = fmul fast float %1016, %1008
  %1018 = fadd fast float %1017, %1013
  %1019 = fsub fast float %1015, %1014
  %1020 = fmul fast float %1018, %1019
  %1021 = fadd fast float %1020, %1014
  %1022 = load i32, ptr %52, align 8, !tbaa !256
  %1023 = icmp sgt i32 %1022, 0
  br i1 %1023, label %1024, label %1083

1024:                                             ; preds = %1012
  %1025 = load ptr, ptr %7, align 8, !tbaa !44
  %1026 = load ptr, ptr %44, align 8, !tbaa !44
  %1027 = load float, ptr %1025, align 4, !tbaa !79
  %1028 = load float, ptr %1026, align 4, !tbaa !79
  %1029 = fmul fast float %1028, %1021
  %1030 = fadd fast float %1029, %1027
  store float %1030, ptr %77, align 8, !tbaa !79
  %1031 = getelementptr inbounds float, ptr %1025, i64 1
  %1032 = load float, ptr %1031, align 4, !tbaa !79
  %1033 = getelementptr inbounds float, ptr %1026, i64 1
  %1034 = load float, ptr %1033, align 4, !tbaa !79
  %1035 = fmul fast float %1034, %1021
  %1036 = fadd fast float %1035, %1032
  store float %1036, ptr %79, align 4, !tbaa !79
  %1037 = getelementptr inbounds float, ptr %1025, i64 2
  %1038 = load float, ptr %1037, align 4, !tbaa !79
  %1039 = getelementptr inbounds float, ptr %1026, i64 2
  %1040 = load float, ptr %1039, align 4, !tbaa !79
  %1041 = fmul fast float %1040, %1021
  %1042 = fadd fast float %1041, %1038
  store float %1042, ptr %81, align 8, !tbaa !79
  %1043 = icmp eq i32 %1022, 1
  br i1 %1043, label %1083, label %1044

1044:                                             ; preds = %1024
  %1045 = load ptr, ptr %30, align 8, !tbaa !44
  %1046 = load ptr, ptr %46, align 8, !tbaa !44
  %1047 = load float, ptr %1045, align 4, !tbaa !79
  %1048 = load float, ptr %1046, align 4, !tbaa !79
  %1049 = fmul fast float %1048, %1021
  %1050 = fadd fast float %1049, %1047
  store float %1050, ptr %76, align 4, !tbaa !79
  %1051 = getelementptr inbounds float, ptr %1045, i64 1
  %1052 = load float, ptr %1051, align 4, !tbaa !79
  %1053 = getelementptr inbounds float, ptr %1046, i64 1
  %1054 = load float, ptr %1053, align 4, !tbaa !79
  %1055 = fmul fast float %1054, %1021
  %1056 = fadd fast float %1055, %1052
  store float %1056, ptr %78, align 8, !tbaa !79
  %1057 = getelementptr inbounds float, ptr %1045, i64 2
  %1058 = load float, ptr %1057, align 4, !tbaa !79
  %1059 = getelementptr inbounds float, ptr %1046, i64 2
  %1060 = load float, ptr %1059, align 4, !tbaa !79
  %1061 = fmul fast float %1060, %1021
  %1062 = fadd fast float %1061, %1058
  store float %1062, ptr %80, align 4, !tbaa !79
  %1063 = icmp ugt i32 %1022, 2
  br i1 %1063, label %1064, label %1083

1064:                                             ; preds = %1044
  %1065 = load ptr, ptr %35, align 8, !tbaa !44
  %1066 = load ptr, ptr %48, align 8, !tbaa !44
  %1067 = load float, ptr %1065, align 4, !tbaa !79
  %1068 = load float, ptr %1066, align 4, !tbaa !79
  %1069 = fmul fast float %1068, %1021
  %1070 = fadd fast float %1069, %1067
  store float %1070, ptr %82, align 8, !tbaa !79
  %1071 = getelementptr inbounds float, ptr %1065, i64 1
  %1072 = load float, ptr %1071, align 4, !tbaa !79
  %1073 = getelementptr inbounds float, ptr %1066, i64 1
  %1074 = load float, ptr %1073, align 4, !tbaa !79
  %1075 = fmul fast float %1074, %1021
  %1076 = fadd fast float %1075, %1072
  store float %1076, ptr %83, align 4, !tbaa !79
  %1077 = getelementptr inbounds float, ptr %1065, i64 2
  %1078 = load float, ptr %1077, align 4, !tbaa !79
  %1079 = getelementptr inbounds float, ptr %1066, i64 2
  %1080 = load float, ptr %1079, align 4, !tbaa !79
  %1081 = fmul fast float %1080, %1021
  %1082 = fadd fast float %1081, %1078
  store float %1082, ptr %84, align 8, !tbaa !79
  br label %1083

1083:                                             ; preds = %1012, %1024, %1044, %1064
  call void @interp_v3_v3v3(ptr noundef nonnull %87, ptr noundef nonnull %75, ptr noundef nonnull %88, float noundef nofpclass(nan inf) %1008) #14
  %1084 = load float, ptr %76, align 4, !tbaa !79
  %1085 = load float, ptr %77, align 8, !tbaa !79
  %1086 = fsub fast float %1084, %1085
  %1087 = load float, ptr %78, align 8, !tbaa !79
  %1088 = load float, ptr %79, align 4, !tbaa !79
  %1089 = fsub fast float %1087, %1088
  %1090 = load float, ptr %80, align 4, !tbaa !79
  %1091 = load float, ptr %81, align 8, !tbaa !79
  %1092 = fsub fast float %1090, %1091
  %1093 = load float, ptr %82, align 8, !tbaa !79
  %1094 = fsub fast float %1093, %1085
  %1095 = load float, ptr %83, align 4, !tbaa !79
  %1096 = fsub fast float %1095, %1088
  %1097 = load float, ptr %84, align 8, !tbaa !79
  %1098 = fsub fast float %1097, %1091
  %1099 = load float, ptr %87, align 4, !tbaa !79
  %1100 = fsub fast float %1099, %1085
  %1101 = load float, ptr %89, align 8, !tbaa !79
  %1102 = fsub fast float %1101, %1088
  %1103 = load float, ptr %90, align 4, !tbaa !79
  %1104 = fsub fast float %1103, %1091
  %1105 = fmul fast float %1098, %1089
  %1106 = fmul fast float %1096, %1092
  %1107 = fsub fast float %1105, %1106
  %1108 = fmul fast float %1094, %1092
  %1109 = fmul fast float %1098, %1086
  %1110 = fsub fast float %1108, %1109
  %1111 = fmul fast float %1096, %1086
  %1112 = fmul fast float %1094, %1089
  %1113 = fsub fast float %1111, %1112
  %1114 = fmul fast float %1107, %1107
  %1115 = fmul fast float %1110, %1110
  %1116 = fmul fast float %1113, %1113
  %1117 = fadd fast float %1114, %1116
  %1118 = fadd fast float %1117, %1115
  %1119 = fcmp fast ogt float %1118, 0x38AA95A5C0000000
  br i1 %1119, label %1120, label %1126

1120:                                             ; preds = %1083
  %1121 = call fast float @llvm.sqrt.f32(float %1118)
  %1122 = fdiv fast float 1.000000e+00, %1121
  %1123 = fmul fast float %1122, %1107
  %1124 = fmul fast float %1122, %1110
  %1125 = fmul fast float %1122, %1113
  br label %1126

1126:                                             ; preds = %1120, %1083
  %1127 = phi float [ %1123, %1120 ], [ 0.000000e+00, %1083 ]
  %1128 = phi float [ %1124, %1120 ], [ 0.000000e+00, %1083 ]
  %1129 = phi float [ %1125, %1120 ], [ 0.000000e+00, %1083 ]
  %1130 = fmul fast float %1127, %1100
  %1131 = fmul fast float %1128, %1102
  %1132 = fadd fast float %1131, %1130
  %1133 = fmul fast float %1129, %1104
  %1134 = fadd fast float %1132, %1133
  %1135 = load i16, ptr %70, align 8, !tbaa !269
  switch i16 %1135, label %1145 [
    i16 -1, label %1136
    i16 1, label %1140
  ]

1136:                                             ; preds = %1126
  %1137 = fcmp fast olt float %1134, 0.000000e+00
  br i1 %1137, label %1138, label %1139

1138:                                             ; preds = %1136
  store i16 1, ptr %70, align 8, !tbaa !269
  br label %1140

1139:                                             ; preds = %1136
  store i16 0, ptr %70, align 8, !tbaa !269
  br label %1145

1140:                                             ; preds = %1138, %1126
  %1141 = fneg fast float %1127
  %1142 = fneg fast float %1128
  %1143 = fneg fast float %1129
  %1144 = fneg fast float %1134
  br label %1145

1145:                                             ; preds = %1126, %1139, %1140
  %1146 = phi float [ %1129, %1126 ], [ %1143, %1140 ], [ %1129, %1139 ]
  %1147 = phi float [ %1128, %1126 ], [ %1142, %1140 ], [ %1128, %1139 ]
  %1148 = phi float [ %1127, %1126 ], [ %1141, %1140 ], [ %1127, %1139 ]
  %1149 = phi float [ %1134, %1126 ], [ %1144, %1140 ], [ %1134, %1139 ]
  %1150 = fsub fast float %1149, %114
  %1151 = fcmp fast oeq float %1150, %1001
  br i1 %1151, label %1984, label %1152

1152:                                             ; preds = %1145
  %1153 = fneg fast float %1007
  %1154 = fsub fast float %1149, %1000
  %1155 = fmul fast float %1150, %1153
  %1156 = fdiv fast float %1155, %1154
  %1157 = fsub fast float %1008, %1156
  %1158 = fcmp fast ole float %1150, 0x3EE4F8B580000000
  %1159 = fcmp fast oge float %1150, 0xBEE4F8B580000000
  %1160 = select i1 %1158, i1 %1159, i1 false
  br i1 %1160, label %821, label %1161

1161:                                             ; preds = %1152
  %1162 = load float, ptr %72, align 8, !tbaa !266
  %1163 = load float, ptr %73, align 4, !tbaa !267
  %1164 = load float, ptr %74, align 8, !tbaa !268
  %1165 = fsub fast float 1.000000e+00, %1162
  %1166 = fmul fast float %1165, %1157
  %1167 = fadd fast float %1166, %1162
  %1168 = fsub fast float %1164, %1163
  %1169 = fmul fast float %1167, %1168
  %1170 = fadd fast float %1169, %1163
  %1171 = load i32, ptr %52, align 8, !tbaa !256
  %1172 = icmp sgt i32 %1171, 0
  br i1 %1172, label %1173, label %1232

1173:                                             ; preds = %1161
  %1174 = load ptr, ptr %7, align 8, !tbaa !44
  %1175 = load ptr, ptr %44, align 8, !tbaa !44
  %1176 = load float, ptr %1174, align 4, !tbaa !79
  %1177 = load float, ptr %1175, align 4, !tbaa !79
  %1178 = fmul fast float %1177, %1170
  %1179 = fadd fast float %1178, %1176
  store float %1179, ptr %77, align 8, !tbaa !79
  %1180 = getelementptr inbounds float, ptr %1174, i64 1
  %1181 = load float, ptr %1180, align 4, !tbaa !79
  %1182 = getelementptr inbounds float, ptr %1175, i64 1
  %1183 = load float, ptr %1182, align 4, !tbaa !79
  %1184 = fmul fast float %1183, %1170
  %1185 = fadd fast float %1184, %1181
  store float %1185, ptr %79, align 4, !tbaa !79
  %1186 = getelementptr inbounds float, ptr %1174, i64 2
  %1187 = load float, ptr %1186, align 4, !tbaa !79
  %1188 = getelementptr inbounds float, ptr %1175, i64 2
  %1189 = load float, ptr %1188, align 4, !tbaa !79
  %1190 = fmul fast float %1189, %1170
  %1191 = fadd fast float %1190, %1187
  store float %1191, ptr %81, align 8, !tbaa !79
  %1192 = icmp eq i32 %1171, 1
  br i1 %1192, label %1232, label %1193

1193:                                             ; preds = %1173
  %1194 = load ptr, ptr %30, align 8, !tbaa !44
  %1195 = load ptr, ptr %46, align 8, !tbaa !44
  %1196 = load float, ptr %1194, align 4, !tbaa !79
  %1197 = load float, ptr %1195, align 4, !tbaa !79
  %1198 = fmul fast float %1197, %1170
  %1199 = fadd fast float %1198, %1196
  store float %1199, ptr %76, align 4, !tbaa !79
  %1200 = getelementptr inbounds float, ptr %1194, i64 1
  %1201 = load float, ptr %1200, align 4, !tbaa !79
  %1202 = getelementptr inbounds float, ptr %1195, i64 1
  %1203 = load float, ptr %1202, align 4, !tbaa !79
  %1204 = fmul fast float %1203, %1170
  %1205 = fadd fast float %1204, %1201
  store float %1205, ptr %78, align 8, !tbaa !79
  %1206 = getelementptr inbounds float, ptr %1194, i64 2
  %1207 = load float, ptr %1206, align 4, !tbaa !79
  %1208 = getelementptr inbounds float, ptr %1195, i64 2
  %1209 = load float, ptr %1208, align 4, !tbaa !79
  %1210 = fmul fast float %1209, %1170
  %1211 = fadd fast float %1210, %1207
  store float %1211, ptr %80, align 4, !tbaa !79
  %1212 = icmp ugt i32 %1171, 2
  br i1 %1212, label %1213, label %1232

1213:                                             ; preds = %1193
  %1214 = load ptr, ptr %35, align 8, !tbaa !44
  %1215 = load ptr, ptr %48, align 8, !tbaa !44
  %1216 = load float, ptr %1214, align 4, !tbaa !79
  %1217 = load float, ptr %1215, align 4, !tbaa !79
  %1218 = fmul fast float %1217, %1170
  %1219 = fadd fast float %1218, %1216
  store float %1219, ptr %82, align 8, !tbaa !79
  %1220 = getelementptr inbounds float, ptr %1214, i64 1
  %1221 = load float, ptr %1220, align 4, !tbaa !79
  %1222 = getelementptr inbounds float, ptr %1215, i64 1
  %1223 = load float, ptr %1222, align 4, !tbaa !79
  %1224 = fmul fast float %1223, %1170
  %1225 = fadd fast float %1224, %1221
  store float %1225, ptr %83, align 4, !tbaa !79
  %1226 = getelementptr inbounds float, ptr %1214, i64 2
  %1227 = load float, ptr %1226, align 4, !tbaa !79
  %1228 = getelementptr inbounds float, ptr %1215, i64 2
  %1229 = load float, ptr %1228, align 4, !tbaa !79
  %1230 = fmul fast float %1229, %1170
  %1231 = fadd fast float %1230, %1227
  store float %1231, ptr %84, align 8, !tbaa !79
  br label %1232

1232:                                             ; preds = %1161, %1173, %1193, %1213
  call void @interp_v3_v3v3(ptr noundef nonnull %87, ptr noundef nonnull %75, ptr noundef nonnull %88, float noundef nofpclass(nan inf) %1157) #14
  %1233 = load float, ptr %76, align 4, !tbaa !79
  %1234 = load float, ptr %77, align 8, !tbaa !79
  %1235 = fsub fast float %1233, %1234
  %1236 = load float, ptr %78, align 8, !tbaa !79
  %1237 = load float, ptr %79, align 4, !tbaa !79
  %1238 = fsub fast float %1236, %1237
  %1239 = load float, ptr %80, align 4, !tbaa !79
  %1240 = load float, ptr %81, align 8, !tbaa !79
  %1241 = fsub fast float %1239, %1240
  %1242 = load float, ptr %82, align 8, !tbaa !79
  %1243 = fsub fast float %1242, %1234
  %1244 = load float, ptr %83, align 4, !tbaa !79
  %1245 = fsub fast float %1244, %1237
  %1246 = load float, ptr %84, align 8, !tbaa !79
  %1247 = fsub fast float %1246, %1240
  %1248 = load float, ptr %87, align 4, !tbaa !79
  %1249 = fsub fast float %1248, %1234
  %1250 = load float, ptr %89, align 8, !tbaa !79
  %1251 = fsub fast float %1250, %1237
  %1252 = load float, ptr %90, align 4, !tbaa !79
  %1253 = fsub fast float %1252, %1240
  %1254 = fmul fast float %1247, %1238
  %1255 = fmul fast float %1245, %1241
  %1256 = fsub fast float %1254, %1255
  %1257 = fmul fast float %1243, %1241
  %1258 = fmul fast float %1247, %1235
  %1259 = fsub fast float %1257, %1258
  %1260 = fmul fast float %1245, %1235
  %1261 = fmul fast float %1243, %1238
  %1262 = fsub fast float %1260, %1261
  %1263 = fmul fast float %1256, %1256
  %1264 = fmul fast float %1259, %1259
  %1265 = fmul fast float %1262, %1262
  %1266 = fadd fast float %1263, %1265
  %1267 = fadd fast float %1266, %1264
  %1268 = fcmp fast ogt float %1267, 0x38AA95A5C0000000
  br i1 %1268, label %1269, label %1275

1269:                                             ; preds = %1232
  %1270 = call fast float @llvm.sqrt.f32(float %1267)
  %1271 = fdiv fast float 1.000000e+00, %1270
  %1272 = fmul fast float %1271, %1256
  %1273 = fmul fast float %1271, %1259
  %1274 = fmul fast float %1271, %1262
  br label %1275

1275:                                             ; preds = %1269, %1232
  %1276 = phi float [ %1272, %1269 ], [ 0.000000e+00, %1232 ]
  %1277 = phi float [ %1273, %1269 ], [ 0.000000e+00, %1232 ]
  %1278 = phi float [ %1274, %1269 ], [ 0.000000e+00, %1232 ]
  %1279 = fmul fast float %1276, %1249
  %1280 = fmul fast float %1277, %1251
  %1281 = fadd fast float %1280, %1279
  %1282 = fmul fast float %1278, %1253
  %1283 = fadd fast float %1281, %1282
  %1284 = load i16, ptr %70, align 8, !tbaa !269
  switch i16 %1284, label %1294 [
    i16 -1, label %1285
    i16 1, label %1289
  ]

1285:                                             ; preds = %1275
  %1286 = fcmp fast olt float %1283, 0.000000e+00
  br i1 %1286, label %1287, label %1288

1287:                                             ; preds = %1285
  store i16 1, ptr %70, align 8, !tbaa !269
  br label %1289

1288:                                             ; preds = %1285
  store i16 0, ptr %70, align 8, !tbaa !269
  br label %1294

1289:                                             ; preds = %1287, %1275
  %1290 = fneg fast float %1276
  %1291 = fneg fast float %1277
  %1292 = fneg fast float %1278
  %1293 = fneg fast float %1283
  br label %1294

1294:                                             ; preds = %1275, %1288, %1289
  %1295 = phi float [ %1278, %1275 ], [ %1292, %1289 ], [ %1278, %1288 ]
  %1296 = phi float [ %1277, %1275 ], [ %1291, %1289 ], [ %1277, %1288 ]
  %1297 = phi float [ %1276, %1275 ], [ %1290, %1289 ], [ %1276, %1288 ]
  %1298 = phi float [ %1283, %1275 ], [ %1293, %1289 ], [ %1283, %1288 ]
  %1299 = fsub fast float %1298, %114
  %1300 = fcmp fast oeq float %1299, %1150
  br i1 %1300, label %1984, label %1301

1301:                                             ; preds = %1294
  %1302 = fneg fast float %1156
  %1303 = fsub fast float %1298, %1149
  %1304 = fmul fast float %1299, %1302
  %1305 = fdiv fast float %1304, %1303
  %1306 = fsub fast float %1157, %1305
  %1307 = fcmp fast ole float %1299, 0x3EE4F8B580000000
  %1308 = fcmp fast oge float %1299, 0xBEE4F8B580000000
  %1309 = select i1 %1307, i1 %1308, i1 false
  br i1 %1309, label %821, label %1310

1310:                                             ; preds = %1301
  %1311 = load float, ptr %72, align 8, !tbaa !266
  %1312 = load float, ptr %73, align 4, !tbaa !267
  %1313 = load float, ptr %74, align 8, !tbaa !268
  %1314 = fsub fast float 1.000000e+00, %1311
  %1315 = fmul fast float %1314, %1306
  %1316 = fadd fast float %1315, %1311
  %1317 = fsub fast float %1313, %1312
  %1318 = fmul fast float %1316, %1317
  %1319 = fadd fast float %1318, %1312
  %1320 = load i32, ptr %52, align 8, !tbaa !256
  %1321 = icmp sgt i32 %1320, 0
  br i1 %1321, label %1322, label %1381

1322:                                             ; preds = %1310
  %1323 = load ptr, ptr %7, align 8, !tbaa !44
  %1324 = load ptr, ptr %44, align 8, !tbaa !44
  %1325 = load float, ptr %1323, align 4, !tbaa !79
  %1326 = load float, ptr %1324, align 4, !tbaa !79
  %1327 = fmul fast float %1326, %1319
  %1328 = fadd fast float %1327, %1325
  store float %1328, ptr %77, align 8, !tbaa !79
  %1329 = getelementptr inbounds float, ptr %1323, i64 1
  %1330 = load float, ptr %1329, align 4, !tbaa !79
  %1331 = getelementptr inbounds float, ptr %1324, i64 1
  %1332 = load float, ptr %1331, align 4, !tbaa !79
  %1333 = fmul fast float %1332, %1319
  %1334 = fadd fast float %1333, %1330
  store float %1334, ptr %79, align 4, !tbaa !79
  %1335 = getelementptr inbounds float, ptr %1323, i64 2
  %1336 = load float, ptr %1335, align 4, !tbaa !79
  %1337 = getelementptr inbounds float, ptr %1324, i64 2
  %1338 = load float, ptr %1337, align 4, !tbaa !79
  %1339 = fmul fast float %1338, %1319
  %1340 = fadd fast float %1339, %1336
  store float %1340, ptr %81, align 8, !tbaa !79
  %1341 = icmp eq i32 %1320, 1
  br i1 %1341, label %1381, label %1342

1342:                                             ; preds = %1322
  %1343 = load ptr, ptr %30, align 8, !tbaa !44
  %1344 = load ptr, ptr %46, align 8, !tbaa !44
  %1345 = load float, ptr %1343, align 4, !tbaa !79
  %1346 = load float, ptr %1344, align 4, !tbaa !79
  %1347 = fmul fast float %1346, %1319
  %1348 = fadd fast float %1347, %1345
  store float %1348, ptr %76, align 4, !tbaa !79
  %1349 = getelementptr inbounds float, ptr %1343, i64 1
  %1350 = load float, ptr %1349, align 4, !tbaa !79
  %1351 = getelementptr inbounds float, ptr %1344, i64 1
  %1352 = load float, ptr %1351, align 4, !tbaa !79
  %1353 = fmul fast float %1352, %1319
  %1354 = fadd fast float %1353, %1350
  store float %1354, ptr %78, align 8, !tbaa !79
  %1355 = getelementptr inbounds float, ptr %1343, i64 2
  %1356 = load float, ptr %1355, align 4, !tbaa !79
  %1357 = getelementptr inbounds float, ptr %1344, i64 2
  %1358 = load float, ptr %1357, align 4, !tbaa !79
  %1359 = fmul fast float %1358, %1319
  %1360 = fadd fast float %1359, %1356
  store float %1360, ptr %80, align 4, !tbaa !79
  %1361 = icmp ugt i32 %1320, 2
  br i1 %1361, label %1362, label %1381

1362:                                             ; preds = %1342
  %1363 = load ptr, ptr %35, align 8, !tbaa !44
  %1364 = load ptr, ptr %48, align 8, !tbaa !44
  %1365 = load float, ptr %1363, align 4, !tbaa !79
  %1366 = load float, ptr %1364, align 4, !tbaa !79
  %1367 = fmul fast float %1366, %1319
  %1368 = fadd fast float %1367, %1365
  store float %1368, ptr %82, align 8, !tbaa !79
  %1369 = getelementptr inbounds float, ptr %1363, i64 1
  %1370 = load float, ptr %1369, align 4, !tbaa !79
  %1371 = getelementptr inbounds float, ptr %1364, i64 1
  %1372 = load float, ptr %1371, align 4, !tbaa !79
  %1373 = fmul fast float %1372, %1319
  %1374 = fadd fast float %1373, %1370
  store float %1374, ptr %83, align 4, !tbaa !79
  %1375 = getelementptr inbounds float, ptr %1363, i64 2
  %1376 = load float, ptr %1375, align 4, !tbaa !79
  %1377 = getelementptr inbounds float, ptr %1364, i64 2
  %1378 = load float, ptr %1377, align 4, !tbaa !79
  %1379 = fmul fast float %1378, %1319
  %1380 = fadd fast float %1379, %1376
  store float %1380, ptr %84, align 8, !tbaa !79
  br label %1381

1381:                                             ; preds = %1310, %1322, %1342, %1362
  call void @interp_v3_v3v3(ptr noundef nonnull %87, ptr noundef nonnull %75, ptr noundef nonnull %88, float noundef nofpclass(nan inf) %1306) #14
  %1382 = load float, ptr %76, align 4, !tbaa !79
  %1383 = load float, ptr %77, align 8, !tbaa !79
  %1384 = fsub fast float %1382, %1383
  %1385 = load float, ptr %78, align 8, !tbaa !79
  %1386 = load float, ptr %79, align 4, !tbaa !79
  %1387 = fsub fast float %1385, %1386
  %1388 = load float, ptr %80, align 4, !tbaa !79
  %1389 = load float, ptr %81, align 8, !tbaa !79
  %1390 = fsub fast float %1388, %1389
  %1391 = load float, ptr %82, align 8, !tbaa !79
  %1392 = fsub fast float %1391, %1383
  %1393 = load float, ptr %83, align 4, !tbaa !79
  %1394 = fsub fast float %1393, %1386
  %1395 = load float, ptr %84, align 8, !tbaa !79
  %1396 = fsub fast float %1395, %1389
  %1397 = load float, ptr %87, align 4, !tbaa !79
  %1398 = fsub fast float %1397, %1383
  %1399 = load float, ptr %89, align 8, !tbaa !79
  %1400 = fsub fast float %1399, %1386
  %1401 = load float, ptr %90, align 4, !tbaa !79
  %1402 = fsub fast float %1401, %1389
  %1403 = fmul fast float %1396, %1387
  %1404 = fmul fast float %1394, %1390
  %1405 = fsub fast float %1403, %1404
  %1406 = fmul fast float %1392, %1390
  %1407 = fmul fast float %1396, %1384
  %1408 = fsub fast float %1406, %1407
  %1409 = fmul fast float %1394, %1384
  %1410 = fmul fast float %1392, %1387
  %1411 = fsub fast float %1409, %1410
  %1412 = fmul fast float %1405, %1405
  %1413 = fmul fast float %1408, %1408
  %1414 = fmul fast float %1411, %1411
  %1415 = fadd fast float %1412, %1414
  %1416 = fadd fast float %1415, %1413
  %1417 = fcmp fast ogt float %1416, 0x38AA95A5C0000000
  br i1 %1417, label %1418, label %1424

1418:                                             ; preds = %1381
  %1419 = call fast float @llvm.sqrt.f32(float %1416)
  %1420 = fdiv fast float 1.000000e+00, %1419
  %1421 = fmul fast float %1420, %1405
  %1422 = fmul fast float %1420, %1408
  %1423 = fmul fast float %1420, %1411
  br label %1424

1424:                                             ; preds = %1418, %1381
  %1425 = phi float [ %1421, %1418 ], [ 0.000000e+00, %1381 ]
  %1426 = phi float [ %1422, %1418 ], [ 0.000000e+00, %1381 ]
  %1427 = phi float [ %1423, %1418 ], [ 0.000000e+00, %1381 ]
  %1428 = fmul fast float %1425, %1398
  %1429 = fmul fast float %1426, %1400
  %1430 = fadd fast float %1429, %1428
  %1431 = fmul fast float %1427, %1402
  %1432 = fadd fast float %1430, %1431
  %1433 = load i16, ptr %70, align 8, !tbaa !269
  switch i16 %1433, label %1443 [
    i16 -1, label %1434
    i16 1, label %1438
  ]

1434:                                             ; preds = %1424
  %1435 = fcmp fast olt float %1432, 0.000000e+00
  br i1 %1435, label %1436, label %1437

1436:                                             ; preds = %1434
  store i16 1, ptr %70, align 8, !tbaa !269
  br label %1438

1437:                                             ; preds = %1434
  store i16 0, ptr %70, align 8, !tbaa !269
  br label %1443

1438:                                             ; preds = %1436, %1424
  %1439 = fneg fast float %1425
  %1440 = fneg fast float %1426
  %1441 = fneg fast float %1427
  %1442 = fneg fast float %1432
  br label %1443

1443:                                             ; preds = %1424, %1437, %1438
  %1444 = phi float [ %1427, %1424 ], [ %1441, %1438 ], [ %1427, %1437 ]
  %1445 = phi float [ %1426, %1424 ], [ %1440, %1438 ], [ %1426, %1437 ]
  %1446 = phi float [ %1425, %1424 ], [ %1439, %1438 ], [ %1425, %1437 ]
  %1447 = phi float [ %1432, %1424 ], [ %1442, %1438 ], [ %1432, %1437 ]
  %1448 = fsub fast float %1447, %114
  %1449 = fcmp fast oeq float %1448, %1299
  br i1 %1449, label %1984, label %1450

1450:                                             ; preds = %1443
  %1451 = fneg fast float %1305
  %1452 = fsub fast float %1447, %1298
  %1453 = fmul fast float %1448, %1451
  %1454 = fdiv fast float %1453, %1452
  %1455 = fsub fast float %1306, %1454
  %1456 = fcmp fast ole float %1448, 0x3EE4F8B580000000
  %1457 = fcmp fast oge float %1448, 0xBEE4F8B580000000
  %1458 = select i1 %1456, i1 %1457, i1 false
  br i1 %1458, label %821, label %1459

1459:                                             ; preds = %1450
  %1460 = load float, ptr %72, align 8, !tbaa !266
  %1461 = load float, ptr %73, align 4, !tbaa !267
  %1462 = load float, ptr %74, align 8, !tbaa !268
  %1463 = fsub fast float 1.000000e+00, %1460
  %1464 = fmul fast float %1463, %1455
  %1465 = fadd fast float %1464, %1460
  %1466 = fsub fast float %1462, %1461
  %1467 = fmul fast float %1465, %1466
  %1468 = fadd fast float %1467, %1461
  %1469 = load i32, ptr %52, align 8, !tbaa !256
  %1470 = icmp sgt i32 %1469, 0
  br i1 %1470, label %1471, label %1530

1471:                                             ; preds = %1459
  %1472 = load ptr, ptr %7, align 8, !tbaa !44
  %1473 = load ptr, ptr %44, align 8, !tbaa !44
  %1474 = load float, ptr %1472, align 4, !tbaa !79
  %1475 = load float, ptr %1473, align 4, !tbaa !79
  %1476 = fmul fast float %1475, %1468
  %1477 = fadd fast float %1476, %1474
  store float %1477, ptr %77, align 8, !tbaa !79
  %1478 = getelementptr inbounds float, ptr %1472, i64 1
  %1479 = load float, ptr %1478, align 4, !tbaa !79
  %1480 = getelementptr inbounds float, ptr %1473, i64 1
  %1481 = load float, ptr %1480, align 4, !tbaa !79
  %1482 = fmul fast float %1481, %1468
  %1483 = fadd fast float %1482, %1479
  store float %1483, ptr %79, align 4, !tbaa !79
  %1484 = getelementptr inbounds float, ptr %1472, i64 2
  %1485 = load float, ptr %1484, align 4, !tbaa !79
  %1486 = getelementptr inbounds float, ptr %1473, i64 2
  %1487 = load float, ptr %1486, align 4, !tbaa !79
  %1488 = fmul fast float %1487, %1468
  %1489 = fadd fast float %1488, %1485
  store float %1489, ptr %81, align 8, !tbaa !79
  %1490 = icmp eq i32 %1469, 1
  br i1 %1490, label %1530, label %1491

1491:                                             ; preds = %1471
  %1492 = load ptr, ptr %30, align 8, !tbaa !44
  %1493 = load ptr, ptr %46, align 8, !tbaa !44
  %1494 = load float, ptr %1492, align 4, !tbaa !79
  %1495 = load float, ptr %1493, align 4, !tbaa !79
  %1496 = fmul fast float %1495, %1468
  %1497 = fadd fast float %1496, %1494
  store float %1497, ptr %76, align 4, !tbaa !79
  %1498 = getelementptr inbounds float, ptr %1492, i64 1
  %1499 = load float, ptr %1498, align 4, !tbaa !79
  %1500 = getelementptr inbounds float, ptr %1493, i64 1
  %1501 = load float, ptr %1500, align 4, !tbaa !79
  %1502 = fmul fast float %1501, %1468
  %1503 = fadd fast float %1502, %1499
  store float %1503, ptr %78, align 8, !tbaa !79
  %1504 = getelementptr inbounds float, ptr %1492, i64 2
  %1505 = load float, ptr %1504, align 4, !tbaa !79
  %1506 = getelementptr inbounds float, ptr %1493, i64 2
  %1507 = load float, ptr %1506, align 4, !tbaa !79
  %1508 = fmul fast float %1507, %1468
  %1509 = fadd fast float %1508, %1505
  store float %1509, ptr %80, align 4, !tbaa !79
  %1510 = icmp ugt i32 %1469, 2
  br i1 %1510, label %1511, label %1530

1511:                                             ; preds = %1491
  %1512 = load ptr, ptr %35, align 8, !tbaa !44
  %1513 = load ptr, ptr %48, align 8, !tbaa !44
  %1514 = load float, ptr %1512, align 4, !tbaa !79
  %1515 = load float, ptr %1513, align 4, !tbaa !79
  %1516 = fmul fast float %1515, %1468
  %1517 = fadd fast float %1516, %1514
  store float %1517, ptr %82, align 8, !tbaa !79
  %1518 = getelementptr inbounds float, ptr %1512, i64 1
  %1519 = load float, ptr %1518, align 4, !tbaa !79
  %1520 = getelementptr inbounds float, ptr %1513, i64 1
  %1521 = load float, ptr %1520, align 4, !tbaa !79
  %1522 = fmul fast float %1521, %1468
  %1523 = fadd fast float %1522, %1519
  store float %1523, ptr %83, align 4, !tbaa !79
  %1524 = getelementptr inbounds float, ptr %1512, i64 2
  %1525 = load float, ptr %1524, align 4, !tbaa !79
  %1526 = getelementptr inbounds float, ptr %1513, i64 2
  %1527 = load float, ptr %1526, align 4, !tbaa !79
  %1528 = fmul fast float %1527, %1468
  %1529 = fadd fast float %1528, %1525
  store float %1529, ptr %84, align 8, !tbaa !79
  br label %1530

1530:                                             ; preds = %1459, %1471, %1491, %1511
  call void @interp_v3_v3v3(ptr noundef nonnull %87, ptr noundef nonnull %75, ptr noundef nonnull %88, float noundef nofpclass(nan inf) %1455) #14
  %1531 = load float, ptr %76, align 4, !tbaa !79
  %1532 = load float, ptr %77, align 8, !tbaa !79
  %1533 = fsub fast float %1531, %1532
  %1534 = load float, ptr %78, align 8, !tbaa !79
  %1535 = load float, ptr %79, align 4, !tbaa !79
  %1536 = fsub fast float %1534, %1535
  %1537 = load float, ptr %80, align 4, !tbaa !79
  %1538 = load float, ptr %81, align 8, !tbaa !79
  %1539 = fsub fast float %1537, %1538
  %1540 = load float, ptr %82, align 8, !tbaa !79
  %1541 = fsub fast float %1540, %1532
  %1542 = load float, ptr %83, align 4, !tbaa !79
  %1543 = fsub fast float %1542, %1535
  %1544 = load float, ptr %84, align 8, !tbaa !79
  %1545 = fsub fast float %1544, %1538
  %1546 = load float, ptr %87, align 4, !tbaa !79
  %1547 = fsub fast float %1546, %1532
  %1548 = load float, ptr %89, align 8, !tbaa !79
  %1549 = fsub fast float %1548, %1535
  %1550 = load float, ptr %90, align 4, !tbaa !79
  %1551 = fsub fast float %1550, %1538
  %1552 = fmul fast float %1545, %1536
  %1553 = fmul fast float %1543, %1539
  %1554 = fsub fast float %1552, %1553
  %1555 = fmul fast float %1541, %1539
  %1556 = fmul fast float %1545, %1533
  %1557 = fsub fast float %1555, %1556
  %1558 = fmul fast float %1543, %1533
  %1559 = fmul fast float %1541, %1536
  %1560 = fsub fast float %1558, %1559
  %1561 = fmul fast float %1554, %1554
  %1562 = fmul fast float %1557, %1557
  %1563 = fmul fast float %1560, %1560
  %1564 = fadd fast float %1561, %1563
  %1565 = fadd fast float %1564, %1562
  %1566 = fcmp fast ogt float %1565, 0x38AA95A5C0000000
  br i1 %1566, label %1567, label %1573

1567:                                             ; preds = %1530
  %1568 = call fast float @llvm.sqrt.f32(float %1565)
  %1569 = fdiv fast float 1.000000e+00, %1568
  %1570 = fmul fast float %1569, %1554
  %1571 = fmul fast float %1569, %1557
  %1572 = fmul fast float %1569, %1560
  br label %1573

1573:                                             ; preds = %1567, %1530
  %1574 = phi float [ %1570, %1567 ], [ 0.000000e+00, %1530 ]
  %1575 = phi float [ %1571, %1567 ], [ 0.000000e+00, %1530 ]
  %1576 = phi float [ %1572, %1567 ], [ 0.000000e+00, %1530 ]
  %1577 = fmul fast float %1574, %1547
  %1578 = fmul fast float %1575, %1549
  %1579 = fadd fast float %1578, %1577
  %1580 = fmul fast float %1576, %1551
  %1581 = fadd fast float %1579, %1580
  %1582 = load i16, ptr %70, align 8, !tbaa !269
  switch i16 %1582, label %1592 [
    i16 -1, label %1583
    i16 1, label %1587
  ]

1583:                                             ; preds = %1573
  %1584 = fcmp fast olt float %1581, 0.000000e+00
  br i1 %1584, label %1585, label %1586

1585:                                             ; preds = %1583
  store i16 1, ptr %70, align 8, !tbaa !269
  br label %1587

1586:                                             ; preds = %1583
  store i16 0, ptr %70, align 8, !tbaa !269
  br label %1592

1587:                                             ; preds = %1585, %1573
  %1588 = fneg fast float %1574
  %1589 = fneg fast float %1575
  %1590 = fneg fast float %1576
  %1591 = fneg fast float %1581
  br label %1592

1592:                                             ; preds = %1573, %1586, %1587
  %1593 = phi float [ %1576, %1573 ], [ %1590, %1587 ], [ %1576, %1586 ]
  %1594 = phi float [ %1575, %1573 ], [ %1589, %1587 ], [ %1575, %1586 ]
  %1595 = phi float [ %1574, %1573 ], [ %1588, %1587 ], [ %1574, %1586 ]
  %1596 = phi float [ %1581, %1573 ], [ %1591, %1587 ], [ %1581, %1586 ]
  %1597 = fsub fast float %1596, %114
  %1598 = fcmp fast oeq float %1597, %1448
  br i1 %1598, label %1984, label %1599

1599:                                             ; preds = %1592
  %1600 = fneg fast float %1454
  %1601 = fsub fast float %1596, %1447
  %1602 = fmul fast float %1597, %1600
  %1603 = fdiv fast float %1602, %1601
  %1604 = fsub fast float %1455, %1603
  %1605 = fcmp fast ole float %1597, 0x3EE4F8B580000000
  %1606 = fcmp fast oge float %1597, 0xBEE4F8B580000000
  %1607 = select i1 %1605, i1 %1606, i1 false
  br i1 %1607, label %821, label %1608

1608:                                             ; preds = %1599
  %1609 = load float, ptr %72, align 8, !tbaa !266
  %1610 = load float, ptr %73, align 4, !tbaa !267
  %1611 = load float, ptr %74, align 8, !tbaa !268
  %1612 = fsub fast float 1.000000e+00, %1609
  %1613 = fmul fast float %1612, %1604
  %1614 = fadd fast float %1613, %1609
  %1615 = fsub fast float %1611, %1610
  %1616 = fmul fast float %1614, %1615
  %1617 = fadd fast float %1616, %1610
  %1618 = load i32, ptr %52, align 8, !tbaa !256
  %1619 = icmp sgt i32 %1618, 0
  br i1 %1619, label %1620, label %1679

1620:                                             ; preds = %1608
  %1621 = load ptr, ptr %7, align 8, !tbaa !44
  %1622 = load ptr, ptr %44, align 8, !tbaa !44
  %1623 = load float, ptr %1621, align 4, !tbaa !79
  %1624 = load float, ptr %1622, align 4, !tbaa !79
  %1625 = fmul fast float %1624, %1617
  %1626 = fadd fast float %1625, %1623
  store float %1626, ptr %77, align 8, !tbaa !79
  %1627 = getelementptr inbounds float, ptr %1621, i64 1
  %1628 = load float, ptr %1627, align 4, !tbaa !79
  %1629 = getelementptr inbounds float, ptr %1622, i64 1
  %1630 = load float, ptr %1629, align 4, !tbaa !79
  %1631 = fmul fast float %1630, %1617
  %1632 = fadd fast float %1631, %1628
  store float %1632, ptr %79, align 4, !tbaa !79
  %1633 = getelementptr inbounds float, ptr %1621, i64 2
  %1634 = load float, ptr %1633, align 4, !tbaa !79
  %1635 = getelementptr inbounds float, ptr %1622, i64 2
  %1636 = load float, ptr %1635, align 4, !tbaa !79
  %1637 = fmul fast float %1636, %1617
  %1638 = fadd fast float %1637, %1634
  store float %1638, ptr %81, align 8, !tbaa !79
  %1639 = icmp eq i32 %1618, 1
  br i1 %1639, label %1679, label %1640

1640:                                             ; preds = %1620
  %1641 = load ptr, ptr %30, align 8, !tbaa !44
  %1642 = load ptr, ptr %46, align 8, !tbaa !44
  %1643 = load float, ptr %1641, align 4, !tbaa !79
  %1644 = load float, ptr %1642, align 4, !tbaa !79
  %1645 = fmul fast float %1644, %1617
  %1646 = fadd fast float %1645, %1643
  store float %1646, ptr %76, align 4, !tbaa !79
  %1647 = getelementptr inbounds float, ptr %1641, i64 1
  %1648 = load float, ptr %1647, align 4, !tbaa !79
  %1649 = getelementptr inbounds float, ptr %1642, i64 1
  %1650 = load float, ptr %1649, align 4, !tbaa !79
  %1651 = fmul fast float %1650, %1617
  %1652 = fadd fast float %1651, %1648
  store float %1652, ptr %78, align 8, !tbaa !79
  %1653 = getelementptr inbounds float, ptr %1641, i64 2
  %1654 = load float, ptr %1653, align 4, !tbaa !79
  %1655 = getelementptr inbounds float, ptr %1642, i64 2
  %1656 = load float, ptr %1655, align 4, !tbaa !79
  %1657 = fmul fast float %1656, %1617
  %1658 = fadd fast float %1657, %1654
  store float %1658, ptr %80, align 4, !tbaa !79
  %1659 = icmp ugt i32 %1618, 2
  br i1 %1659, label %1660, label %1679

1660:                                             ; preds = %1640
  %1661 = load ptr, ptr %35, align 8, !tbaa !44
  %1662 = load ptr, ptr %48, align 8, !tbaa !44
  %1663 = load float, ptr %1661, align 4, !tbaa !79
  %1664 = load float, ptr %1662, align 4, !tbaa !79
  %1665 = fmul fast float %1664, %1617
  %1666 = fadd fast float %1665, %1663
  store float %1666, ptr %82, align 8, !tbaa !79
  %1667 = getelementptr inbounds float, ptr %1661, i64 1
  %1668 = load float, ptr %1667, align 4, !tbaa !79
  %1669 = getelementptr inbounds float, ptr %1662, i64 1
  %1670 = load float, ptr %1669, align 4, !tbaa !79
  %1671 = fmul fast float %1670, %1617
  %1672 = fadd fast float %1671, %1668
  store float %1672, ptr %83, align 4, !tbaa !79
  %1673 = getelementptr inbounds float, ptr %1661, i64 2
  %1674 = load float, ptr %1673, align 4, !tbaa !79
  %1675 = getelementptr inbounds float, ptr %1662, i64 2
  %1676 = load float, ptr %1675, align 4, !tbaa !79
  %1677 = fmul fast float %1676, %1617
  %1678 = fadd fast float %1677, %1674
  store float %1678, ptr %84, align 8, !tbaa !79
  br label %1679

1679:                                             ; preds = %1608, %1620, %1640, %1660
  call void @interp_v3_v3v3(ptr noundef nonnull %87, ptr noundef nonnull %75, ptr noundef nonnull %88, float noundef nofpclass(nan inf) %1604) #14
  %1680 = load float, ptr %76, align 4, !tbaa !79
  %1681 = load float, ptr %77, align 8, !tbaa !79
  %1682 = fsub fast float %1680, %1681
  %1683 = load float, ptr %78, align 8, !tbaa !79
  %1684 = load float, ptr %79, align 4, !tbaa !79
  %1685 = fsub fast float %1683, %1684
  %1686 = load float, ptr %80, align 4, !tbaa !79
  %1687 = load float, ptr %81, align 8, !tbaa !79
  %1688 = fsub fast float %1686, %1687
  %1689 = load float, ptr %82, align 8, !tbaa !79
  %1690 = fsub fast float %1689, %1681
  %1691 = load float, ptr %83, align 4, !tbaa !79
  %1692 = fsub fast float %1691, %1684
  %1693 = load float, ptr %84, align 8, !tbaa !79
  %1694 = fsub fast float %1693, %1687
  %1695 = load float, ptr %87, align 4, !tbaa !79
  %1696 = fsub fast float %1695, %1681
  %1697 = load float, ptr %89, align 8, !tbaa !79
  %1698 = fsub fast float %1697, %1684
  %1699 = load float, ptr %90, align 4, !tbaa !79
  %1700 = fsub fast float %1699, %1687
  %1701 = fmul fast float %1694, %1685
  %1702 = fmul fast float %1692, %1688
  %1703 = fsub fast float %1701, %1702
  %1704 = fmul fast float %1690, %1688
  %1705 = fmul fast float %1694, %1682
  %1706 = fsub fast float %1704, %1705
  %1707 = fmul fast float %1692, %1682
  %1708 = fmul fast float %1690, %1685
  %1709 = fsub fast float %1707, %1708
  %1710 = fmul fast float %1703, %1703
  %1711 = fmul fast float %1706, %1706
  %1712 = fmul fast float %1709, %1709
  %1713 = fadd fast float %1710, %1712
  %1714 = fadd fast float %1713, %1711
  %1715 = fcmp fast ogt float %1714, 0x38AA95A5C0000000
  br i1 %1715, label %1716, label %1722

1716:                                             ; preds = %1679
  %1717 = call fast float @llvm.sqrt.f32(float %1714)
  %1718 = fdiv fast float 1.000000e+00, %1717
  %1719 = fmul fast float %1718, %1703
  %1720 = fmul fast float %1718, %1706
  %1721 = fmul fast float %1718, %1709
  br label %1722

1722:                                             ; preds = %1716, %1679
  %1723 = phi float [ %1719, %1716 ], [ 0.000000e+00, %1679 ]
  %1724 = phi float [ %1720, %1716 ], [ 0.000000e+00, %1679 ]
  %1725 = phi float [ %1721, %1716 ], [ 0.000000e+00, %1679 ]
  %1726 = fmul fast float %1723, %1696
  %1727 = fmul fast float %1724, %1698
  %1728 = fadd fast float %1727, %1726
  %1729 = fmul fast float %1725, %1700
  %1730 = fadd fast float %1728, %1729
  %1731 = load i16, ptr %70, align 8, !tbaa !269
  switch i16 %1731, label %1741 [
    i16 -1, label %1732
    i16 1, label %1736
  ]

1732:                                             ; preds = %1722
  %1733 = fcmp fast olt float %1730, 0.000000e+00
  br i1 %1733, label %1734, label %1735

1734:                                             ; preds = %1732
  store i16 1, ptr %70, align 8, !tbaa !269
  br label %1736

1735:                                             ; preds = %1732
  store i16 0, ptr %70, align 8, !tbaa !269
  br label %1741

1736:                                             ; preds = %1734, %1722
  %1737 = fneg fast float %1723
  %1738 = fneg fast float %1724
  %1739 = fneg fast float %1725
  %1740 = fneg fast float %1730
  br label %1741

1741:                                             ; preds = %1722, %1735, %1736
  %1742 = phi float [ %1725, %1722 ], [ %1739, %1736 ], [ %1725, %1735 ]
  %1743 = phi float [ %1724, %1722 ], [ %1738, %1736 ], [ %1724, %1735 ]
  %1744 = phi float [ %1723, %1722 ], [ %1737, %1736 ], [ %1723, %1735 ]
  %1745 = phi float [ %1730, %1722 ], [ %1740, %1736 ], [ %1730, %1735 ]
  %1746 = fsub fast float %1745, %114
  %1747 = fcmp fast oeq float %1746, %1597
  br i1 %1747, label %1984, label %1748

1748:                                             ; preds = %1741
  %1749 = fneg fast float %1603
  %1750 = fsub fast float %1745, %1596
  %1751 = fmul fast float %1746, %1749
  %1752 = fdiv fast float %1751, %1750
  %1753 = fsub fast float %1604, %1752
  %1754 = fcmp fast ole float %1746, 0x3EE4F8B580000000
  %1755 = fcmp fast oge float %1746, 0xBEE4F8B580000000
  %1756 = select i1 %1754, i1 %1755, i1 false
  br i1 %1756, label %821, label %1757

1757:                                             ; preds = %1748
  %1758 = load float, ptr %72, align 8, !tbaa !266
  %1759 = load float, ptr %73, align 4, !tbaa !267
  %1760 = load float, ptr %74, align 8, !tbaa !268
  %1761 = fsub fast float 1.000000e+00, %1758
  %1762 = fmul fast float %1761, %1753
  %1763 = fadd fast float %1762, %1758
  %1764 = fsub fast float %1760, %1759
  %1765 = fmul fast float %1763, %1764
  %1766 = fadd fast float %1765, %1759
  %1767 = load i32, ptr %52, align 8, !tbaa !256
  %1768 = icmp sgt i32 %1767, 0
  br i1 %1768, label %1769, label %1828

1769:                                             ; preds = %1757
  %1770 = load ptr, ptr %7, align 8, !tbaa !44
  %1771 = load ptr, ptr %44, align 8, !tbaa !44
  %1772 = load float, ptr %1770, align 4, !tbaa !79
  %1773 = load float, ptr %1771, align 4, !tbaa !79
  %1774 = fmul fast float %1773, %1766
  %1775 = fadd fast float %1774, %1772
  store float %1775, ptr %77, align 8, !tbaa !79
  %1776 = getelementptr inbounds float, ptr %1770, i64 1
  %1777 = load float, ptr %1776, align 4, !tbaa !79
  %1778 = getelementptr inbounds float, ptr %1771, i64 1
  %1779 = load float, ptr %1778, align 4, !tbaa !79
  %1780 = fmul fast float %1779, %1766
  %1781 = fadd fast float %1780, %1777
  store float %1781, ptr %79, align 4, !tbaa !79
  %1782 = getelementptr inbounds float, ptr %1770, i64 2
  %1783 = load float, ptr %1782, align 4, !tbaa !79
  %1784 = getelementptr inbounds float, ptr %1771, i64 2
  %1785 = load float, ptr %1784, align 4, !tbaa !79
  %1786 = fmul fast float %1785, %1766
  %1787 = fadd fast float %1786, %1783
  store float %1787, ptr %81, align 8, !tbaa !79
  %1788 = icmp eq i32 %1767, 1
  br i1 %1788, label %1828, label %1789

1789:                                             ; preds = %1769
  %1790 = load ptr, ptr %30, align 8, !tbaa !44
  %1791 = load ptr, ptr %46, align 8, !tbaa !44
  %1792 = load float, ptr %1790, align 4, !tbaa !79
  %1793 = load float, ptr %1791, align 4, !tbaa !79
  %1794 = fmul fast float %1793, %1766
  %1795 = fadd fast float %1794, %1792
  store float %1795, ptr %76, align 4, !tbaa !79
  %1796 = getelementptr inbounds float, ptr %1790, i64 1
  %1797 = load float, ptr %1796, align 4, !tbaa !79
  %1798 = getelementptr inbounds float, ptr %1791, i64 1
  %1799 = load float, ptr %1798, align 4, !tbaa !79
  %1800 = fmul fast float %1799, %1766
  %1801 = fadd fast float %1800, %1797
  store float %1801, ptr %78, align 8, !tbaa !79
  %1802 = getelementptr inbounds float, ptr %1790, i64 2
  %1803 = load float, ptr %1802, align 4, !tbaa !79
  %1804 = getelementptr inbounds float, ptr %1791, i64 2
  %1805 = load float, ptr %1804, align 4, !tbaa !79
  %1806 = fmul fast float %1805, %1766
  %1807 = fadd fast float %1806, %1803
  store float %1807, ptr %80, align 4, !tbaa !79
  %1808 = icmp ugt i32 %1767, 2
  br i1 %1808, label %1809, label %1828

1809:                                             ; preds = %1789
  %1810 = load ptr, ptr %35, align 8, !tbaa !44
  %1811 = load ptr, ptr %48, align 8, !tbaa !44
  %1812 = load float, ptr %1810, align 4, !tbaa !79
  %1813 = load float, ptr %1811, align 4, !tbaa !79
  %1814 = fmul fast float %1813, %1766
  %1815 = fadd fast float %1814, %1812
  store float %1815, ptr %82, align 8, !tbaa !79
  %1816 = getelementptr inbounds float, ptr %1810, i64 1
  %1817 = load float, ptr %1816, align 4, !tbaa !79
  %1818 = getelementptr inbounds float, ptr %1811, i64 1
  %1819 = load float, ptr %1818, align 4, !tbaa !79
  %1820 = fmul fast float %1819, %1766
  %1821 = fadd fast float %1820, %1817
  store float %1821, ptr %83, align 4, !tbaa !79
  %1822 = getelementptr inbounds float, ptr %1810, i64 2
  %1823 = load float, ptr %1822, align 4, !tbaa !79
  %1824 = getelementptr inbounds float, ptr %1811, i64 2
  %1825 = load float, ptr %1824, align 4, !tbaa !79
  %1826 = fmul fast float %1825, %1766
  %1827 = fadd fast float %1826, %1823
  store float %1827, ptr %84, align 8, !tbaa !79
  br label %1828

1828:                                             ; preds = %1757, %1769, %1789, %1809
  call void @interp_v3_v3v3(ptr noundef nonnull %87, ptr noundef nonnull %75, ptr noundef nonnull %88, float noundef nofpclass(nan inf) %1753) #14
  %1829 = load float, ptr %76, align 4, !tbaa !79
  %1830 = load float, ptr %77, align 8, !tbaa !79
  %1831 = fsub fast float %1829, %1830
  %1832 = load float, ptr %78, align 8, !tbaa !79
  %1833 = load float, ptr %79, align 4, !tbaa !79
  %1834 = fsub fast float %1832, %1833
  %1835 = load float, ptr %80, align 4, !tbaa !79
  %1836 = load float, ptr %81, align 8, !tbaa !79
  %1837 = fsub fast float %1835, %1836
  %1838 = load float, ptr %82, align 8, !tbaa !79
  %1839 = fsub fast float %1838, %1830
  %1840 = load float, ptr %83, align 4, !tbaa !79
  %1841 = fsub fast float %1840, %1833
  %1842 = load float, ptr %84, align 8, !tbaa !79
  %1843 = fsub fast float %1842, %1836
  %1844 = load float, ptr %87, align 4, !tbaa !79
  %1845 = fsub fast float %1844, %1830
  %1846 = load float, ptr %89, align 8, !tbaa !79
  %1847 = fsub fast float %1846, %1833
  %1848 = load float, ptr %90, align 4, !tbaa !79
  %1849 = fsub fast float %1848, %1836
  %1850 = fmul fast float %1843, %1834
  %1851 = fmul fast float %1841, %1837
  %1852 = fsub fast float %1850, %1851
  %1853 = fmul fast float %1839, %1837
  %1854 = fmul fast float %1843, %1831
  %1855 = fsub fast float %1853, %1854
  %1856 = fmul fast float %1841, %1831
  %1857 = fmul fast float %1839, %1834
  %1858 = fsub fast float %1856, %1857
  %1859 = fmul fast float %1852, %1852
  %1860 = fmul fast float %1855, %1855
  %1861 = fmul fast float %1858, %1858
  %1862 = fadd fast float %1859, %1861
  %1863 = fadd fast float %1862, %1860
  %1864 = fcmp fast ogt float %1863, 0x38AA95A5C0000000
  br i1 %1864, label %1865, label %1871

1865:                                             ; preds = %1828
  %1866 = call fast float @llvm.sqrt.f32(float %1863)
  %1867 = fdiv fast float 1.000000e+00, %1866
  %1868 = fmul fast float %1867, %1852
  %1869 = fmul fast float %1867, %1855
  %1870 = fmul fast float %1867, %1858
  br label %1871

1871:                                             ; preds = %1865, %1828
  %1872 = phi float [ %1868, %1865 ], [ 0.000000e+00, %1828 ]
  %1873 = phi float [ %1869, %1865 ], [ 0.000000e+00, %1828 ]
  %1874 = phi float [ %1870, %1865 ], [ 0.000000e+00, %1828 ]
  %1875 = fmul fast float %1872, %1845
  %1876 = fmul fast float %1873, %1847
  %1877 = fadd fast float %1876, %1875
  %1878 = fmul fast float %1874, %1849
  %1879 = fadd fast float %1877, %1878
  %1880 = load i16, ptr %70, align 8, !tbaa !269
  switch i16 %1880, label %1890 [
    i16 -1, label %1881
    i16 1, label %1885
  ]

1881:                                             ; preds = %1871
  %1882 = fcmp fast olt float %1879, 0.000000e+00
  br i1 %1882, label %1883, label %1884

1883:                                             ; preds = %1881
  store i16 1, ptr %70, align 8, !tbaa !269
  br label %1885

1884:                                             ; preds = %1881
  store i16 0, ptr %70, align 8, !tbaa !269
  br label %1890

1885:                                             ; preds = %1883, %1871
  %1886 = fneg fast float %1872
  %1887 = fneg fast float %1873
  %1888 = fneg fast float %1874
  %1889 = fneg fast float %1879
  br label %1890

1890:                                             ; preds = %1871, %1884, %1885
  %1891 = phi float [ %1874, %1871 ], [ %1888, %1885 ], [ %1874, %1884 ]
  %1892 = phi float [ %1873, %1871 ], [ %1887, %1885 ], [ %1873, %1884 ]
  %1893 = phi float [ %1872, %1871 ], [ %1886, %1885 ], [ %1872, %1884 ]
  %1894 = phi float [ %1879, %1871 ], [ %1889, %1885 ], [ %1879, %1884 ]
  %1895 = fsub fast float %1894, %114
  %1896 = fcmp fast oeq float %1895, %1746
  br i1 %1896, label %1984, label %1897

1897:                                             ; preds = %1890
  %1898 = fsub fast float %1894, %1745
  %1899 = fmul fast float %1895, %1752
  %1900 = fdiv fast float %1899, %1898
  %1901 = fadd fast float %1900, %1753
  %1902 = fcmp fast ole float %1895, 0x3EE4F8B580000000
  %1903 = fcmp fast oge float %1895, 0xBEE4F8B580000000
  %1904 = select i1 %1902, i1 %1903, i1 false
  br i1 %1904, label %821, label %1984

1905:                                             ; preds = %848
  %1906 = fcmp fast ult float %861, 0.000000e+00
  br i1 %1906, label %1984, label %1907

1907:                                             ; preds = %807, %846, %848, %1905
  %1908 = phi float [ %849, %1905 ], [ %822, %846 ], [ %809, %807 ], [ %849, %848 ]
  %1909 = phi float [ %850, %1905 ], [ %823, %846 ], [ %811, %807 ], [ %850, %848 ]
  %1910 = phi float [ %851, %1905 ], [ %824, %846 ], [ %810, %807 ], [ %851, %848 ]
  %1911 = phi float [ %852, %1905 ], [ %825, %846 ], [ %319, %807 ], [ %852, %848 ]
  %1912 = phi float [ %853, %1905 ], [ %826, %846 ], [ %317, %807 ], [ %853, %848 ]
  %1913 = phi float [ %854, %1905 ], [ %827, %846 ], [ %315, %807 ], [ %854, %848 ]
  %1914 = phi float [ %855, %1905 ], [ %828, %846 ], [ %313, %807 ], [ %855, %848 ]
  %1915 = phi float [ %856, %1905 ], [ %829, %846 ], [ %312, %807 ], [ %856, %848 ]
  %1916 = phi float [ %857, %1905 ], [ %830, %846 ], [ %310, %807 ], [ %857, %848 ]
  %1917 = phi float [ %858, %1905 ], [ %831, %846 ], [ %309, %807 ], [ %858, %848 ]
  %1918 = phi float [ %859, %1905 ], [ %832, %846 ], [ %307, %807 ], [ %859, %848 ]
  %1919 = phi float [ %860, %1905 ], [ %833, %846 ], [ %306, %807 ], [ %860, %848 ]
  %1920 = phi float [ %861, %1905 ], [ 0.000000e+00, %846 ], [ 0.000000e+00, %807 ], [ 1.000000e+00, %848 ]
  %1921 = fcmp fast olt float %1920, %113
  br i1 %1921, label %1922, label %1984

1922:                                             ; preds = %1907
  %1923 = load i16, ptr %96, align 2, !tbaa !264
  %1924 = icmp eq i16 %1923, 0
  %1925 = load i16, ptr %53, align 2
  %1926 = icmp eq i16 %1925, 1
  %1927 = select i1 %1924, i1 true, i1 %1926
  br i1 %1927, label %1928, label %3065

1928:                                             ; preds = %1922
  %1929 = fsub fast float %1919, %1918
  %1930 = fsub fast float %1917, %1916
  %1931 = fsub fast float %1915, %1914
  %1932 = fsub fast float %1913, %1918
  %1933 = fsub fast float %1912, %1916
  %1934 = fsub fast float %1911, %1914
  %1935 = fsub fast float %1910, %1918
  %1936 = fsub fast float %1909, %1916
  %1937 = fsub fast float %1908, %1914
  %1938 = fmul fast float %1929, %1929
  %1939 = fmul fast float %1930, %1930
  %1940 = fadd fast float %1939, %1938
  %1941 = fmul fast float %1931, %1931
  %1942 = fadd fast float %1940, %1941
  %1943 = fmul fast float %1932, %1929
  %1944 = fmul fast float %1933, %1930
  %1945 = fadd fast float %1944, %1943
  %1946 = fmul fast float %1934, %1931
  %1947 = fadd fast float %1945, %1946
  %1948 = fmul fast float %1935, %1929
  %1949 = fmul fast float %1936, %1930
  %1950 = fadd fast float %1949, %1948
  %1951 = fmul fast float %1937, %1931
  %1952 = fadd fast float %1950, %1951
  %1953 = fmul fast float %1932, %1932
  %1954 = fmul fast float %1933, %1933
  %1955 = fadd fast float %1954, %1953
  %1956 = fmul fast float %1934, %1934
  %1957 = fadd fast float %1955, %1956
  %1958 = fmul fast float %1935, %1932
  %1959 = fmul fast float %1936, %1933
  %1960 = fadd fast float %1959, %1958
  %1961 = fmul fast float %1937, %1934
  %1962 = fadd fast float %1960, %1961
  %1963 = fmul fast float %1957, %1942
  %1964 = fmul fast float %1947, %1947
  %1965 = fsub fast float %1963, %1964
  %1966 = fdiv fast float 1.000000e+00, %1965
  %1967 = fmul fast float %1952, %1957
  %1968 = fmul fast float %1962, %1947
  %1969 = fsub fast float %1967, %1968
  %1970 = fmul fast float %1969, %1966
  %1971 = fmul fast float %1962, %1942
  %1972 = fmul fast float %1952, %1947
  %1973 = fsub fast float %1971, %1972
  %1974 = fmul fast float %1973, %1966
  %1975 = fcmp fast ult float %1970, 0.000000e+00
  %1976 = fcmp fast ugt float %1970, 1.000000e+00
  %1977 = select i1 %1975, i1 true, i1 %1976
  %1978 = fcmp fast ult float %1974, 0.000000e+00
  %1979 = select i1 %1977, i1 true, i1 %1978
  %1980 = fadd fast float %1970, %1974
  %1981 = fcmp fast ugt float %1980, 1.000000e+00
  %1982 = select i1 %1979, i1 true, i1 %1981
  br i1 %1982, label %1984, label %1983

1983:                                             ; preds = %1928
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(160) %69, ptr noundef nonnull align 8 dereferenceable(160) %7, i64 160, i1 false), !tbaa.struct !270
  store float %1970, ptr %97, align 8, !tbaa !79
  store float %1974, ptr %98, align 4, !tbaa !79
  br label %1984

1984:                                             ; preds = %647, %654, %800, %821, %996, %1145, %1294, %1443, %1592, %1741, %1890, %1897, %841, %1905, %1907, %1928, %1983
  %1985 = phi float [ %113, %647 ], [ %113, %654 ], [ %113, %800 ], [ %113, %821 ], [ %113, %996 ], [ %113, %1145 ], [ %113, %1294 ], [ %113, %1443 ], [ %113, %1592 ], [ %113, %1741 ], [ %113, %1890 ], [ %113, %1897 ], [ %113, %841 ], [ %113, %1905 ], [ %113, %1907 ], [ %1920, %1983 ], [ %113, %1928 ]
  %1986 = phi i32 [ 0, %647 ], [ 0, %654 ], [ 0, %800 ], [ 0, %821 ], [ 0, %996 ], [ 0, %1145 ], [ 0, %1294 ], [ 0, %1443 ], [ 0, %1592 ], [ 0, %1741 ], [ 0, %1890 ], [ 0, %1897 ], [ 0, %841 ], [ 0, %1905 ], [ 0, %1907 ], [ 1, %1983 ], [ 0, %1928 ]
  %1987 = load i16, ptr %96, align 2, !tbaa !273
  %1988 = icmp eq i16 %1987, 0
  br i1 %1988, label %1989, label %3013

1989:                                             ; preds = %1984
  %1990 = load float, ptr %68, align 4, !tbaa !262
  call void @llvm.lifetime.start.p0(i64 480, ptr nonnull %6) #14
  %1991 = fneg fast float %1990
  br label %1992

1992:                                             ; preds = %2554, %1989
  %1993 = phi float [ %1985, %1989 ], [ %2555, %2554 ]
  %1994 = phi i64 [ 0, %1989 ], [ %2557, %2554 ]
  %1995 = phi ptr [ null, %1989 ], [ %2556, %2554 ]
  %1996 = load ptr, ptr %42, align 8, !tbaa !44
  %1997 = icmp ne ptr %1996, null
  %1998 = icmp eq i64 %1994, 2
  %1999 = and i1 %1998, %1997
  br i1 %1999, label %2559, label %2000

2000:                                             ; preds = %1992
  %2001 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994
  %2002 = getelementptr inbounds [4 x ptr], ptr %7, i64 0, i64 %1994
  %2003 = load ptr, ptr %2002, align 8, !tbaa !44
  store ptr %2003, ptr %2001, align 16, !tbaa !44
  %2004 = icmp ugt i64 %1994, 1
  %2005 = select i1 %2004, i64 4294967294, i64 1
  %2006 = add nuw nsw i64 %2005, %1994
  %2007 = and i64 %2006, 4294967295
  %2008 = getelementptr inbounds [4 x ptr], ptr %7, i64 0, i64 %2007
  %2009 = load ptr, ptr %2008, align 8, !tbaa !44
  %2010 = getelementptr inbounds [4 x ptr], ptr %2001, i64 0, i64 1
  store ptr %2009, ptr %2010, align 8, !tbaa !44
  %2011 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 1, i64 %1994
  %2012 = load ptr, ptr %2011, align 8, !tbaa !44
  %2013 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 1
  store ptr %2012, ptr %2013, align 16, !tbaa !44
  %2014 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 1, i64 %2007
  %2015 = load ptr, ptr %2014, align 8, !tbaa !44
  %2016 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 1, i64 1
  store ptr %2015, ptr %2016, align 8, !tbaa !44
  %2017 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 9
  store i32 2, ptr %2017, align 16, !tbaa !256
  %2018 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 12
  store i16 0, ptr %2018, align 2, !tbaa !264
  %2019 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 11
  store i16 -1, ptr %2019, align 8, !tbaa !269
  %2020 = load float, ptr %71, align 4, !tbaa !265
  %2021 = fcmp fast ogt float %2020, 0.000000e+00
  %2022 = fmul fast float %2020, 0x3F14F8B580000000
  %2023 = select i1 %2021, float %2022, float 0x3F50624DE0000000
  %2024 = load float, ptr %72, align 8, !tbaa !266
  %2025 = load float, ptr %73, align 4, !tbaa !267
  %2026 = load float, ptr %74, align 8, !tbaa !268
  %2027 = fsub fast float %2026, %2025
  %2028 = fmul fast float %2027, %2024
  %2029 = fadd fast float %2028, %2025
  %2030 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 2
  %2031 = load float, ptr %2003, align 4, !tbaa !79
  %2032 = load float, ptr %2012, align 4, !tbaa !79
  %2033 = fmul fast float %2032, %2029
  %2034 = getelementptr inbounds float, ptr %2003, i64 1
  %2035 = getelementptr inbounds float, ptr %2012, i64 1
  %2036 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 2, i64 1
  %2037 = getelementptr inbounds float, ptr %2003, i64 2
  %2038 = getelementptr inbounds float, ptr %2012, i64 2
  %2039 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 2, i64 2
  %2040 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 3
  %2041 = getelementptr inbounds float, ptr %2009, i64 1
  %2042 = getelementptr inbounds float, ptr %2015, i64 1
  %2043 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 3, i64 1
  %2044 = getelementptr inbounds float, ptr %2009, i64 2
  %2045 = getelementptr inbounds float, ptr %2015, i64 2
  %2046 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 3, i64 2
  %2047 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 3
  %2048 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 2
  %2049 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 3, i64 1
  %2050 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 2, i64 1
  %2051 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 3, i64 2
  %2052 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 2, i64 2
  %2053 = fadd fast float %2033, %2031
  store float %2053, ptr %2030, align 16, !tbaa !79
  %2054 = load float, ptr %2034, align 4, !tbaa !79
  %2055 = load float, ptr %2035, align 4, !tbaa !79
  %2056 = fmul fast float %2055, %2029
  %2057 = fadd fast float %2056, %2054
  store float %2057, ptr %2036, align 4, !tbaa !79
  %2058 = load float, ptr %2037, align 4, !tbaa !79
  %2059 = load float, ptr %2038, align 4, !tbaa !79
  %2060 = fmul fast float %2059, %2029
  %2061 = fadd fast float %2060, %2058
  store float %2061, ptr %2039, align 8, !tbaa !79
  %2062 = load float, ptr %2009, align 4, !tbaa !79
  %2063 = load float, ptr %2015, align 4, !tbaa !79
  %2064 = fmul fast float %2063, %2029
  %2065 = fadd fast float %2064, %2062
  store float %2065, ptr %2040, align 4, !tbaa !79
  %2066 = load float, ptr %2041, align 4, !tbaa !79
  %2067 = load float, ptr %2042, align 4, !tbaa !79
  %2068 = fmul fast float %2067, %2029
  %2069 = fadd fast float %2068, %2066
  store float %2069, ptr %2043, align 16, !tbaa !79
  %2070 = load float, ptr %2044, align 4, !tbaa !79
  %2071 = load float, ptr %2045, align 4, !tbaa !79
  %2072 = fmul fast float %2071, %2029
  %2073 = fadd fast float %2072, %2070
  store float %2073, ptr %2046, align 4, !tbaa !79
  %2074 = load float, ptr %2047, align 4, !tbaa !79
  %2075 = load float, ptr %2049, align 16, !tbaa !79
  %2076 = load float, ptr %75, align 4, !tbaa !79
  %2077 = fsub fast float %2076, %2053
  %2078 = load float, ptr %85, align 4, !tbaa !79
  %2079 = fsub fast float %2078, %2057
  %2080 = load float, ptr %86, align 4, !tbaa !79
  %2081 = fsub fast float %2080, %2061
  %2082 = fsub fast float %2076, %2074
  %2083 = fsub fast float %2078, %2075
  %2084 = fsub fast float %2080, %2073
  %2085 = fmul fast float %2084, %2079
  %2086 = fmul fast float %2081, %2083
  %2087 = insertelement <2 x float> poison, float %2085, i64 0
  %2088 = insertelement <2 x float> %2087, float %2075, i64 1
  %2089 = insertelement <2 x float> poison, float %2086, i64 0
  %2090 = insertelement <2 x float> %2089, float %2057, i64 1
  %2091 = fsub fast <2 x float> %2088, %2090
  %2092 = fmul fast float %2081, %2082
  %2093 = fmul fast float %2084, %2077
  %2094 = insertelement <2 x float> poison, float %2092, i64 0
  %2095 = insertelement <2 x float> %2094, float %2073, i64 1
  %2096 = insertelement <2 x float> poison, float %2093, i64 0
  %2097 = insertelement <2 x float> %2096, float %2061, i64 1
  %2098 = fsub fast <2 x float> %2095, %2097
  %2099 = fmul fast float %2083, %2077
  %2100 = fmul fast float %2079, %2082
  %2101 = insertelement <2 x float> poison, float %2099, i64 0
  %2102 = insertelement <2 x float> %2101, float %2074, i64 1
  %2103 = insertelement <2 x float> poison, float %2100, i64 0
  %2104 = insertelement <2 x float> %2103, float %2053, i64 1
  %2105 = fsub fast <2 x float> %2102, %2104
  %2106 = fmul fast <2 x float> %2105, %2105
  %2107 = fmul fast <2 x float> %2091, %2091
  %2108 = fadd fast <2 x float> %2107, %2106
  %2109 = fmul fast <2 x float> %2098, %2098
  %2110 = fadd fast <2 x float> %2108, %2109
  %2111 = call fast <2 x float> @llvm.sqrt.v2f32(<2 x float> %2110)
  %2112 = shufflevector <2 x float> %2111, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2113 = fdiv fast <2 x float> %2111, %2112
  %2114 = extractelement <2 x float> %2113, i64 0
  %2115 = fsub fast float %2114, %1990
  %2116 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 5
  %2117 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 5, i64 2
  %2118 = fsub fast float 1.000000e+00, %2023
  %2119 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 4
  %2120 = getelementptr inbounds [4 x ptr], ptr %2001, i64 0, i64 2
  %2121 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 1, i64 2
  %2122 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 4, i64 1
  %2123 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %6, i64 %1994, i32 4, i64 2
  br label %2124

2124:                                             ; preds = %2503, %2000
  %2125 = phi i32 [ 0, %2000 ], [ %2507, %2503 ]
  %2126 = phi float [ %2115, %2000 ], [ %2506, %2503 ]
  %2127 = phi float [ %2023, %2000 ], [ %2505, %2503 ]
  %2128 = phi float [ 0.000000e+00, %2000 ], [ %2504, %2503 ]
  %2129 = load float, ptr %72, align 8, !tbaa !266
  %2130 = load float, ptr %73, align 4, !tbaa !267
  %2131 = load float, ptr %74, align 8, !tbaa !268
  %2132 = fsub fast float 1.000000e+00, %2129
  %2133 = fmul fast float %2132, %2127
  %2134 = fadd fast float %2133, %2129
  %2135 = fsub fast float %2131, %2130
  %2136 = fmul fast float %2134, %2135
  %2137 = fadd fast float %2136, %2130
  %2138 = load i32, ptr %2017, align 16, !tbaa !256
  %2139 = icmp sgt i32 %2138, 0
  br i1 %2139, label %2140, label %2199

2140:                                             ; preds = %2124
  %2141 = load ptr, ptr %2001, align 16, !tbaa !44
  %2142 = load ptr, ptr %2013, align 16, !tbaa !44
  %2143 = load float, ptr %2141, align 4, !tbaa !79
  %2144 = load float, ptr %2142, align 4, !tbaa !79
  %2145 = fmul fast float %2144, %2137
  %2146 = fadd fast float %2145, %2143
  store float %2146, ptr %2048, align 16, !tbaa !79
  %2147 = getelementptr inbounds float, ptr %2141, i64 1
  %2148 = load float, ptr %2147, align 4, !tbaa !79
  %2149 = getelementptr inbounds float, ptr %2142, i64 1
  %2150 = load float, ptr %2149, align 4, !tbaa !79
  %2151 = fmul fast float %2150, %2137
  %2152 = fadd fast float %2151, %2148
  store float %2152, ptr %2050, align 4, !tbaa !79
  %2153 = getelementptr inbounds float, ptr %2141, i64 2
  %2154 = load float, ptr %2153, align 4, !tbaa !79
  %2155 = getelementptr inbounds float, ptr %2142, i64 2
  %2156 = load float, ptr %2155, align 4, !tbaa !79
  %2157 = fmul fast float %2156, %2137
  %2158 = fadd fast float %2157, %2154
  store float %2158, ptr %2052, align 8, !tbaa !79
  %2159 = icmp eq i32 %2138, 1
  br i1 %2159, label %2199, label %2160

2160:                                             ; preds = %2140
  %2161 = load ptr, ptr %2010, align 8, !tbaa !44
  %2162 = load ptr, ptr %2016, align 8, !tbaa !44
  %2163 = load float, ptr %2161, align 4, !tbaa !79
  %2164 = load float, ptr %2162, align 4, !tbaa !79
  %2165 = fmul fast float %2164, %2137
  %2166 = fadd fast float %2165, %2163
  store float %2166, ptr %2047, align 4, !tbaa !79
  %2167 = getelementptr inbounds float, ptr %2161, i64 1
  %2168 = load float, ptr %2167, align 4, !tbaa !79
  %2169 = getelementptr inbounds float, ptr %2162, i64 1
  %2170 = load float, ptr %2169, align 4, !tbaa !79
  %2171 = fmul fast float %2170, %2137
  %2172 = fadd fast float %2171, %2168
  store float %2172, ptr %2049, align 16, !tbaa !79
  %2173 = getelementptr inbounds float, ptr %2161, i64 2
  %2174 = load float, ptr %2173, align 4, !tbaa !79
  %2175 = getelementptr inbounds float, ptr %2162, i64 2
  %2176 = load float, ptr %2175, align 4, !tbaa !79
  %2177 = fmul fast float %2176, %2137
  %2178 = fadd fast float %2177, %2174
  store float %2178, ptr %2051, align 4, !tbaa !79
  %2179 = icmp ugt i32 %2138, 2
  br i1 %2179, label %2180, label %2199

2180:                                             ; preds = %2160
  %2181 = load ptr, ptr %2120, align 16, !tbaa !44
  %2182 = load ptr, ptr %2121, align 16, !tbaa !44
  %2183 = load float, ptr %2181, align 4, !tbaa !79
  %2184 = load float, ptr %2182, align 4, !tbaa !79
  %2185 = fmul fast float %2184, %2137
  %2186 = fadd fast float %2185, %2183
  store float %2186, ptr %2119, align 8, !tbaa !79
  %2187 = getelementptr inbounds float, ptr %2181, i64 1
  %2188 = load float, ptr %2187, align 4, !tbaa !79
  %2189 = getelementptr inbounds float, ptr %2182, i64 1
  %2190 = load float, ptr %2189, align 4, !tbaa !79
  %2191 = fmul fast float %2190, %2137
  %2192 = fadd fast float %2191, %2188
  store float %2192, ptr %2122, align 4, !tbaa !79
  %2193 = getelementptr inbounds float, ptr %2181, i64 2
  %2194 = load float, ptr %2193, align 4, !tbaa !79
  %2195 = getelementptr inbounds float, ptr %2182, i64 2
  %2196 = load float, ptr %2195, align 4, !tbaa !79
  %2197 = fmul fast float %2196, %2137
  %2198 = fadd fast float %2197, %2194
  store float %2198, ptr %2123, align 16, !tbaa !79
  br label %2199

2199:                                             ; preds = %2180, %2160, %2140, %2124
  call void @interp_v3_v3v3(ptr noundef nonnull %2116, ptr noundef nonnull %75, ptr noundef nonnull %88, float noundef nofpclass(nan inf) %2127) #14
  %2200 = load float, ptr %2051, align 4, !tbaa !79
  %2201 = load float, ptr %2052, align 8, !tbaa !79
  %2202 = fsub fast float %2200, %2201
  %2203 = load <2 x float>, ptr %2047, align 4, !tbaa !79
  %2204 = load <2 x float>, ptr %2048, align 16, !tbaa !79
  %2205 = fsub fast <2 x float> %2203, %2204
  %2206 = load <2 x float>, ptr %2116, align 4, !tbaa !79
  %2207 = extractelement <2 x float> %2204, i64 0
  %2208 = fsub fast <2 x float> %2206, %2204
  %2209 = extractelement <2 x float> %2208, i64 0
  %2210 = extractelement <2 x float> %2206, i64 1
  %2211 = extractelement <2 x float> %2204, i64 1
  %2212 = fsub fast float %2210, %2211
  %2213 = load float, ptr %2117, align 4, !tbaa !79
  %2214 = fsub fast float %2213, %2201
  %2215 = extractelement <2 x float> %2203, i64 0
  %2216 = fsub fast <2 x float> %2206, %2203
  %2217 = extractelement <2 x float> %2216, i64 0
  %2218 = extractelement <2 x float> %2203, i64 1
  %2219 = fsub fast float %2210, %2218
  %2220 = fsub fast float %2213, %2200
  %2221 = fmul fast float %2220, %2212
  %2222 = fmul fast float %2214, %2219
  %2223 = fsub fast float %2221, %2222
  %2224 = fmul fast float %2214, %2217
  %2225 = fmul fast float %2220, %2209
  %2226 = fsub fast float %2224, %2225
  %2227 = fmul fast float %2219, %2209
  %2228 = fmul fast float %2212, %2217
  %2229 = fsub fast float %2227, %2228
  %2230 = fmul fast float %2223, %2223
  %2231 = fmul fast float %2226, %2226
  %2232 = fmul fast float %2229, %2229
  %2233 = fadd fast float %2230, %2232
  %2234 = fadd fast float %2233, %2231
  %2235 = call fast float @llvm.sqrt.f32(float %2234)
  %2236 = fmul fast <2 x float> %2205, %2205
  %2237 = fmul fast <2 x float> %2205, %2205
  %2238 = shufflevector <2 x float> %2237, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2239 = fadd fast <2 x float> %2238, %2236
  %2240 = extractelement <2 x float> %2239, i64 0
  %2241 = fmul fast float %2202, %2202
  %2242 = fadd fast float %2240, %2241
  %2243 = call fast float @llvm.sqrt.f32(float %2242)
  %2244 = fdiv fast float %2235, %2243
  %2245 = fsub fast float %2244, %1990
  %2246 = icmp eq i32 %2125, 0
  %2247 = fcmp fast olt float %2126, 0.000000e+00
  %2248 = select i1 %2246, i1 %2247, i1 false
  %2249 = fcmp fast ogt float %2126, %1991
  %2250 = select i1 %2248, i1 %2249, i1 false
  br i1 %2250, label %2251, label %2254

2251:                                             ; preds = %2199
  %2252 = load <2 x float>, ptr %75, align 4, !tbaa !79
  store <2 x float> %2252, ptr %2116, align 4, !tbaa !79
  %2253 = load float, ptr %86, align 4, !tbaa !79
  store float %2253, ptr %2117, align 4, !tbaa !79
  store i16 1, ptr %2018, align 2, !tbaa !264
  br label %2512

2254:                                             ; preds = %2199
  %2255 = fcmp fast oeq float %2245, %2126
  br i1 %2255, label %2256, label %2367

2256:                                             ; preds = %2254
  br i1 %2246, label %2257, label %2554

2257:                                             ; preds = %2256
  %2258 = load float, ptr %74, align 8, !tbaa !268
  %2259 = load i32, ptr %2017, align 16, !tbaa !256
  %2260 = icmp sgt i32 %2259, 0
  br i1 %2260, label %2261, label %2320

2261:                                             ; preds = %2257
  %2262 = load ptr, ptr %2001, align 16, !tbaa !44
  %2263 = load ptr, ptr %2013, align 16, !tbaa !44
  %2264 = load float, ptr %2262, align 4, !tbaa !79
  %2265 = load float, ptr %2263, align 4, !tbaa !79
  %2266 = fmul fast float %2265, %2258
  %2267 = fadd fast float %2266, %2264
  store float %2267, ptr %2048, align 16, !tbaa !79
  %2268 = getelementptr inbounds float, ptr %2262, i64 1
  %2269 = load float, ptr %2268, align 4, !tbaa !79
  %2270 = getelementptr inbounds float, ptr %2263, i64 1
  %2271 = load float, ptr %2270, align 4, !tbaa !79
  %2272 = fmul fast float %2271, %2258
  %2273 = fadd fast float %2272, %2269
  store float %2273, ptr %2050, align 4, !tbaa !79
  %2274 = getelementptr inbounds float, ptr %2262, i64 2
  %2275 = load float, ptr %2274, align 4, !tbaa !79
  %2276 = getelementptr inbounds float, ptr %2263, i64 2
  %2277 = load float, ptr %2276, align 4, !tbaa !79
  %2278 = fmul fast float %2277, %2258
  %2279 = fadd fast float %2278, %2275
  store float %2279, ptr %2052, align 8, !tbaa !79
  %2280 = icmp eq i32 %2259, 1
  br i1 %2280, label %2320, label %2281

2281:                                             ; preds = %2261
  %2282 = load ptr, ptr %2010, align 8, !tbaa !44
  %2283 = load ptr, ptr %2016, align 8, !tbaa !44
  %2284 = load float, ptr %2282, align 4, !tbaa !79
  %2285 = load float, ptr %2283, align 4, !tbaa !79
  %2286 = fmul fast float %2285, %2258
  %2287 = fadd fast float %2286, %2284
  store float %2287, ptr %2047, align 4, !tbaa !79
  %2288 = getelementptr inbounds float, ptr %2282, i64 1
  %2289 = load float, ptr %2288, align 4, !tbaa !79
  %2290 = getelementptr inbounds float, ptr %2283, i64 1
  %2291 = load float, ptr %2290, align 4, !tbaa !79
  %2292 = fmul fast float %2291, %2258
  %2293 = fadd fast float %2292, %2289
  store float %2293, ptr %2049, align 16, !tbaa !79
  %2294 = getelementptr inbounds float, ptr %2282, i64 2
  %2295 = load float, ptr %2294, align 4, !tbaa !79
  %2296 = getelementptr inbounds float, ptr %2283, i64 2
  %2297 = load float, ptr %2296, align 4, !tbaa !79
  %2298 = fmul fast float %2297, %2258
  %2299 = fadd fast float %2298, %2295
  store float %2299, ptr %2051, align 4, !tbaa !79
  %2300 = icmp ugt i32 %2259, 2
  br i1 %2300, label %2301, label %2320

2301:                                             ; preds = %2281
  %2302 = load ptr, ptr %2120, align 16, !tbaa !44
  %2303 = load ptr, ptr %2121, align 16, !tbaa !44
  %2304 = load float, ptr %2302, align 4, !tbaa !79
  %2305 = load float, ptr %2303, align 4, !tbaa !79
  %2306 = fmul fast float %2305, %2258
  %2307 = fadd fast float %2306, %2304
  store float %2307, ptr %2119, align 8, !tbaa !79
  %2308 = getelementptr inbounds float, ptr %2302, i64 1
  %2309 = load float, ptr %2308, align 4, !tbaa !79
  %2310 = getelementptr inbounds float, ptr %2303, i64 1
  %2311 = load float, ptr %2310, align 4, !tbaa !79
  %2312 = fmul fast float %2311, %2258
  %2313 = fadd fast float %2312, %2309
  store float %2313, ptr %2122, align 4, !tbaa !79
  %2314 = getelementptr inbounds float, ptr %2302, i64 2
  %2315 = load float, ptr %2314, align 4, !tbaa !79
  %2316 = getelementptr inbounds float, ptr %2303, i64 2
  %2317 = load float, ptr %2316, align 4, !tbaa !79
  %2318 = fmul fast float %2317, %2258
  %2319 = fadd fast float %2318, %2315
  store float %2319, ptr %2123, align 16, !tbaa !79
  br label %2320

2320:                                             ; preds = %2301, %2281, %2261, %2257
  %2321 = phi float [ %2201, %2257 ], [ %2279, %2261 ], [ %2279, %2281 ], [ %2279, %2301 ]
  %2322 = phi float [ %2200, %2257 ], [ %2200, %2261 ], [ %2299, %2281 ], [ %2299, %2301 ]
  %2323 = phi float [ %2211, %2257 ], [ %2273, %2261 ], [ %2273, %2281 ], [ %2273, %2301 ]
  %2324 = phi float [ %2218, %2257 ], [ %2218, %2261 ], [ %2293, %2281 ], [ %2293, %2301 ]
  %2325 = phi float [ %2207, %2257 ], [ %2267, %2261 ], [ %2267, %2281 ], [ %2267, %2301 ]
  %2326 = phi float [ %2215, %2257 ], [ %2215, %2261 ], [ %2287, %2281 ], [ %2287, %2301 ]
  %2327 = load float, ptr %88, align 4, !tbaa !79
  %2328 = fsub fast float %2327, %2325
  %2329 = load float, ptr %94, align 4, !tbaa !79
  %2330 = fsub fast float %2329, %2323
  %2331 = load float, ptr %95, align 4, !tbaa !79
  %2332 = fsub fast float %2331, %2321
  %2333 = fsub fast float %2327, %2326
  %2334 = fsub fast float %2329, %2324
  %2335 = fsub fast float %2331, %2322
  %2336 = fmul fast float %2335, %2330
  %2337 = fmul fast float %2332, %2334
  %2338 = fmul fast float %2332, %2333
  %2339 = fmul fast float %2335, %2328
  %2340 = fmul fast float %2334, %2328
  %2341 = fmul fast float %2330, %2333
  %2342 = insertelement <2 x float> poison, float %2336, i64 0
  %2343 = insertelement <2 x float> %2342, float %2324, i64 1
  %2344 = insertelement <2 x float> poison, float %2337, i64 0
  %2345 = insertelement <2 x float> %2344, float %2323, i64 1
  %2346 = fsub fast <2 x float> %2343, %2345
  %2347 = insertelement <2 x float> poison, float %2338, i64 0
  %2348 = insertelement <2 x float> %2347, float %2326, i64 1
  %2349 = insertelement <2 x float> poison, float %2339, i64 0
  %2350 = insertelement <2 x float> %2349, float %2325, i64 1
  %2351 = fsub fast <2 x float> %2348, %2350
  %2352 = insertelement <2 x float> poison, float %2340, i64 0
  %2353 = insertelement <2 x float> %2352, float %2322, i64 1
  %2354 = insertelement <2 x float> poison, float %2341, i64 0
  %2355 = insertelement <2 x float> %2354, float %2321, i64 1
  %2356 = fsub fast <2 x float> %2353, %2355
  %2357 = fmul fast <2 x float> %2351, %2351
  %2358 = fmul fast <2 x float> %2346, %2346
  %2359 = fmul fast <2 x float> %2356, %2356
  %2360 = fadd fast <2 x float> %2358, %2359
  %2361 = fadd fast <2 x float> %2360, %2357
  %2362 = call fast <2 x float> @llvm.sqrt.v2f32(<2 x float> %2361)
  %2363 = shufflevector <2 x float> %2362, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2364 = fdiv fast <2 x float> %2362, %2363
  %2365 = extractelement <2 x float> %2364, i64 0
  %2366 = fsub fast float %2365, %1990
  br label %2503

2367:                                             ; preds = %2254
  %2368 = fsub fast float %2127, %2128
  %2369 = fsub fast float %2245, %2126
  %2370 = fmul fast float %2245, %2368
  %2371 = fdiv fast float %2370, %2369
  %2372 = fsub fast float %2127, %2371
  %2373 = fcmp fast olt float %2372, 0.000000e+00
  %2374 = select i1 %2246, i1 %2373, i1 false
  br i1 %2374, label %2375, label %2485

2375:                                             ; preds = %2367
  %2376 = load float, ptr %74, align 8, !tbaa !268
  %2377 = load i32, ptr %2017, align 16, !tbaa !256
  %2378 = icmp sgt i32 %2377, 0
  br i1 %2378, label %2379, label %2438

2379:                                             ; preds = %2375
  %2380 = load ptr, ptr %2001, align 16, !tbaa !44
  %2381 = load ptr, ptr %2013, align 16, !tbaa !44
  %2382 = load float, ptr %2380, align 4, !tbaa !79
  %2383 = load float, ptr %2381, align 4, !tbaa !79
  %2384 = fmul fast float %2383, %2376
  %2385 = fadd fast float %2384, %2382
  store float %2385, ptr %2048, align 16, !tbaa !79
  %2386 = getelementptr inbounds float, ptr %2380, i64 1
  %2387 = load float, ptr %2386, align 4, !tbaa !79
  %2388 = getelementptr inbounds float, ptr %2381, i64 1
  %2389 = load float, ptr %2388, align 4, !tbaa !79
  %2390 = fmul fast float %2389, %2376
  %2391 = fadd fast float %2390, %2387
  store float %2391, ptr %2050, align 4, !tbaa !79
  %2392 = getelementptr inbounds float, ptr %2380, i64 2
  %2393 = load float, ptr %2392, align 4, !tbaa !79
  %2394 = getelementptr inbounds float, ptr %2381, i64 2
  %2395 = load float, ptr %2394, align 4, !tbaa !79
  %2396 = fmul fast float %2395, %2376
  %2397 = fadd fast float %2396, %2393
  store float %2397, ptr %2052, align 8, !tbaa !79
  %2398 = icmp eq i32 %2377, 1
  br i1 %2398, label %2438, label %2399

2399:                                             ; preds = %2379
  %2400 = load ptr, ptr %2010, align 8, !tbaa !44
  %2401 = load ptr, ptr %2016, align 8, !tbaa !44
  %2402 = load float, ptr %2400, align 4, !tbaa !79
  %2403 = load float, ptr %2401, align 4, !tbaa !79
  %2404 = fmul fast float %2403, %2376
  %2405 = fadd fast float %2404, %2402
  store float %2405, ptr %2047, align 4, !tbaa !79
  %2406 = getelementptr inbounds float, ptr %2400, i64 1
  %2407 = load float, ptr %2406, align 4, !tbaa !79
  %2408 = getelementptr inbounds float, ptr %2401, i64 1
  %2409 = load float, ptr %2408, align 4, !tbaa !79
  %2410 = fmul fast float %2409, %2376
  %2411 = fadd fast float %2410, %2407
  store float %2411, ptr %2049, align 16, !tbaa !79
  %2412 = getelementptr inbounds float, ptr %2400, i64 2
  %2413 = load float, ptr %2412, align 4, !tbaa !79
  %2414 = getelementptr inbounds float, ptr %2401, i64 2
  %2415 = load float, ptr %2414, align 4, !tbaa !79
  %2416 = fmul fast float %2415, %2376
  %2417 = fadd fast float %2416, %2413
  store float %2417, ptr %2051, align 4, !tbaa !79
  %2418 = icmp ugt i32 %2377, 2
  br i1 %2418, label %2419, label %2438

2419:                                             ; preds = %2399
  %2420 = load ptr, ptr %2120, align 16, !tbaa !44
  %2421 = load ptr, ptr %2121, align 16, !tbaa !44
  %2422 = load float, ptr %2420, align 4, !tbaa !79
  %2423 = load float, ptr %2421, align 4, !tbaa !79
  %2424 = fmul fast float %2423, %2376
  %2425 = fadd fast float %2424, %2422
  store float %2425, ptr %2119, align 8, !tbaa !79
  %2426 = getelementptr inbounds float, ptr %2420, i64 1
  %2427 = load float, ptr %2426, align 4, !tbaa !79
  %2428 = getelementptr inbounds float, ptr %2421, i64 1
  %2429 = load float, ptr %2428, align 4, !tbaa !79
  %2430 = fmul fast float %2429, %2376
  %2431 = fadd fast float %2430, %2427
  store float %2431, ptr %2122, align 4, !tbaa !79
  %2432 = getelementptr inbounds float, ptr %2420, i64 2
  %2433 = load float, ptr %2432, align 4, !tbaa !79
  %2434 = getelementptr inbounds float, ptr %2421, i64 2
  %2435 = load float, ptr %2434, align 4, !tbaa !79
  %2436 = fmul fast float %2435, %2376
  %2437 = fadd fast float %2436, %2433
  store float %2437, ptr %2123, align 16, !tbaa !79
  br label %2438

2438:                                             ; preds = %2375, %2379, %2399, %2419
  %2439 = phi float [ %2201, %2375 ], [ %2397, %2379 ], [ %2397, %2399 ], [ %2397, %2419 ]
  %2440 = phi float [ %2200, %2375 ], [ %2200, %2379 ], [ %2417, %2399 ], [ %2417, %2419 ]
  %2441 = phi float [ %2211, %2375 ], [ %2391, %2379 ], [ %2391, %2399 ], [ %2391, %2419 ]
  %2442 = phi float [ %2218, %2375 ], [ %2218, %2379 ], [ %2411, %2399 ], [ %2411, %2419 ]
  %2443 = phi float [ %2207, %2375 ], [ %2385, %2379 ], [ %2385, %2399 ], [ %2385, %2419 ]
  %2444 = phi float [ %2215, %2375 ], [ %2215, %2379 ], [ %2405, %2399 ], [ %2405, %2419 ]
  %2445 = load float, ptr %88, align 4, !tbaa !79
  %2446 = fsub fast float %2445, %2443
  %2447 = load float, ptr %94, align 4, !tbaa !79
  %2448 = fsub fast float %2447, %2441
  %2449 = load float, ptr %95, align 4, !tbaa !79
  %2450 = fsub fast float %2449, %2439
  %2451 = fsub fast float %2445, %2444
  %2452 = fsub fast float %2447, %2442
  %2453 = fsub fast float %2449, %2440
  %2454 = fmul fast float %2453, %2448
  %2455 = fmul fast float %2450, %2452
  %2456 = fmul fast float %2450, %2451
  %2457 = fmul fast float %2453, %2446
  %2458 = fmul fast float %2452, %2446
  %2459 = fmul fast float %2448, %2451
  %2460 = insertelement <2 x float> poison, float %2454, i64 0
  %2461 = insertelement <2 x float> %2460, float %2442, i64 1
  %2462 = insertelement <2 x float> poison, float %2455, i64 0
  %2463 = insertelement <2 x float> %2462, float %2441, i64 1
  %2464 = fsub fast <2 x float> %2461, %2463
  %2465 = insertelement <2 x float> poison, float %2456, i64 0
  %2466 = insertelement <2 x float> %2465, float %2440, i64 1
  %2467 = insertelement <2 x float> poison, float %2457, i64 0
  %2468 = insertelement <2 x float> %2467, float %2439, i64 1
  %2469 = fsub fast <2 x float> %2466, %2468
  %2470 = insertelement <2 x float> poison, float %2458, i64 0
  %2471 = insertelement <2 x float> %2470, float %2444, i64 1
  %2472 = insertelement <2 x float> poison, float %2459, i64 0
  %2473 = insertelement <2 x float> %2472, float %2443, i64 1
  %2474 = fsub fast <2 x float> %2471, %2473
  %2475 = fmul fast <2 x float> %2474, %2474
  %2476 = fmul fast <2 x float> %2464, %2464
  %2477 = fadd fast <2 x float> %2476, %2475
  %2478 = fmul fast <2 x float> %2469, %2469
  %2479 = fadd fast <2 x float> %2477, %2478
  %2480 = call fast <2 x float> @llvm.sqrt.v2f32(<2 x float> %2479)
  %2481 = shufflevector <2 x float> %2480, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2482 = fdiv fast <2 x float> %2480, %2481
  %2483 = extractelement <2 x float> %2482, i64 0
  %2484 = fsub fast float %2483, %1990
  br label %2503

2485:                                             ; preds = %2367
  %2486 = icmp eq i32 %2125, 1
  br i1 %2486, label %2487, label %2491

2487:                                             ; preds = %2485
  %2488 = fcmp fast olt float %2372, 0xBEE4F8B580000000
  %2489 = fcmp fast ogt float %2372, 1.000000e+00
  %2490 = select i1 %2488, i1 true, i1 %2489
  br i1 %2490, label %2554, label %2491

2491:                                             ; preds = %2487, %2485
  %2492 = fcmp fast ole float %2245, 0x3EE4F8B580000000
  %2493 = fcmp fast oge float %2245, 0xBEE4F8B580000000
  %2494 = select i1 %2492, i1 %2493, i1 false
  br i1 %2494, label %2495, label %2503

2495:                                             ; preds = %2491
  %2496 = fcmp fast ult float %2372, 0xBEE4F8B580000000
  %2497 = fcmp fast ugt float %2372, 1.000000e+00
  %2498 = select i1 %2496, i1 true, i1 %2497
  %2499 = select i1 %2498, i1 true, i1 %2373
  %2500 = select i1 %2498, float -1.000000e+00, float 0.000000e+00
  br i1 %2499, label %2509, label %2501

2501:                                             ; preds = %2495
  %2502 = fcmp fast ogt float %2372, 1.000000e+00
  br i1 %2502, label %2512, label %2509

2503:                                             ; preds = %2491, %2438, %2320
  %2504 = phi float [ 1.000000e+00, %2320 ], [ 1.000000e+00, %2438 ], [ %2127, %2491 ]
  %2505 = phi float [ %2118, %2320 ], [ %2118, %2438 ], [ %2372, %2491 ]
  %2506 = phi float [ %2366, %2320 ], [ %2484, %2438 ], [ %2245, %2491 ]
  %2507 = add nuw nsw i32 %2125, 1
  %2508 = icmp eq i32 %2507, 10
  br i1 %2508, label %2554, label %2124, !llvm.loop !274

2509:                                             ; preds = %2501, %2495
  %2510 = phi float [ %2372, %2501 ], [ %2500, %2495 ]
  %2511 = fcmp fast ult float %2510, 0.000000e+00
  br i1 %2511, label %2554, label %2512

2512:                                             ; preds = %2509, %2501, %2251
  %2513 = phi float [ %2213, %2509 ], [ %2253, %2251 ], [ %2213, %2501 ]
  %2514 = phi float [ %2510, %2509 ], [ 0.000000e+00, %2251 ], [ 1.000000e+00, %2501 ]
  %2515 = phi <2 x float> [ %2206, %2509 ], [ %2252, %2251 ], [ %2206, %2501 ]
  %2516 = fcmp fast olt float %2514, %1993
  br i1 %2516, label %2517, label %2554

2517:                                             ; preds = %2512
  %2518 = fsub fast <2 x float> %2515, %2204
  %2519 = fsub fast float %2513, %2201
  %2520 = fmul fast <2 x float> %2518, %2205
  %2521 = fmul fast float %2519, %2202
  %2522 = extractelement <2 x float> %2520, i64 1
  %2523 = fadd fast float %2522, %2521
  %2524 = extractelement <2 x float> %2520, i64 0
  %2525 = fadd fast float %2523, %2524
  %2526 = fdiv fast float %2525, %2242
  %2527 = fcmp fast olt float %2526, 0.000000e+00
  %2528 = fcmp fast ogt float %2526, 1.000000e+00
  %2529 = select i1 %2527, i1 true, i1 %2528
  br i1 %2529, label %2559, label %2530

2530:                                             ; preds = %2517
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(160) %69, ptr noundef nonnull align 16 dereferenceable(160) %2001, i64 160, i1 false), !tbaa.struct !270
  %2531 = insertelement <2 x float> poison, float %2526, i64 0
  %2532 = shufflevector <2 x float> %2531, <2 x float> poison, <2 x i32> zeroinitializer
  %2533 = fmul fast <2 x float> %2532, %2205
  %2534 = fsub fast <2 x float> %2518, %2533
  %2535 = fmul fast float %2526, %2202
  %2536 = fsub fast float %2519, %2535
  %2537 = fmul fast <2 x float> %2534, %2534
  %2538 = shufflevector <2 x float> %2537, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2539 = fadd fast <2 x float> %2538, %2537
  %2540 = extractelement <2 x float> %2539, i64 0
  %2541 = fmul fast float %2536, %2536
  %2542 = fadd fast float %2540, %2541
  %2543 = fcmp fast ogt float %2542, 0x38AA95A5C0000000
  br i1 %2543, label %2544, label %2551

2544:                                             ; preds = %2530
  %2545 = call fast float @llvm.sqrt.f32(float %2542)
  %2546 = fdiv fast float 1.000000e+00, %2545
  %2547 = insertelement <2 x float> poison, float %2546, i64 0
  %2548 = shufflevector <2 x float> %2547, <2 x float> poison, <2 x i32> zeroinitializer
  %2549 = fmul fast <2 x float> %2548, %2534
  %2550 = fmul fast float %2546, %2536
  br label %2551

2551:                                             ; preds = %2544, %2530
  %2552 = phi float [ %2550, %2544 ], [ 0.000000e+00, %2530 ]
  %2553 = phi <2 x float> [ %2549, %2544 ], [ zeroinitializer, %2530 ]
  store <2 x float> %2553, ptr %99, align 4
  store float %2552, ptr %100, align 4
  store float %2526, ptr %97, align 8, !tbaa !79
  br label %2554

2554:                                             ; preds = %2503, %2487, %2256, %2551, %2512, %2509
  %2555 = phi float [ %2514, %2551 ], [ %1993, %2512 ], [ %1993, %2509 ], [ %1993, %2256 ], [ %1993, %2487 ], [ %1993, %2503 ]
  %2556 = phi ptr [ %2001, %2551 ], [ %1995, %2512 ], [ %1995, %2509 ], [ %1995, %2256 ], [ %1995, %2487 ], [ %1995, %2503 ]
  %2557 = add nuw nsw i64 %1994, 1
  %2558 = icmp eq i64 %2557, 3
  br i1 %2558, label %2559, label %1992, !llvm.loop !275

2559:                                             ; preds = %1992, %2517, %2554
  %2560 = phi float [ %1993, %1992 ], [ %1993, %2517 ], [ %2555, %2554 ]
  %2561 = phi ptr [ %1995, %1992 ], [ %1995, %2517 ], [ %2556, %2554 ]
  %2562 = icmp ne ptr %2561, null
  call void @llvm.lifetime.end.p0(i64 480, ptr nonnull %6) #14
  %2563 = load float, ptr %68, align 4, !tbaa !262
  call void @llvm.lifetime.start.p0(i64 480, ptr nonnull %5) #14
  %2564 = fneg fast float %2563
  br label %2565

2565:                                             ; preds = %3002, %2559
  %2566 = phi float [ %2560, %2559 ], [ %3003, %3002 ]
  %2567 = phi i64 [ 0, %2559 ], [ %3005, %3002 ]
  %2568 = phi ptr [ null, %2559 ], [ %3004, %3002 ]
  %2569 = load ptr, ptr %42, align 8, !tbaa !44
  %2570 = icmp ne ptr %2569, null
  %2571 = icmp ne i64 %2567, 1
  %2572 = and i1 %2571, %2570
  br i1 %2572, label %3002, label %2573

2573:                                             ; preds = %2565
  %2574 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567
  %2575 = getelementptr inbounds [4 x ptr], ptr %7, i64 0, i64 %2567
  %2576 = load ptr, ptr %2575, align 8, !tbaa !44
  store ptr %2576, ptr %2574, align 16, !tbaa !44
  %2577 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %7, i64 0, i32 1, i64 %2567
  %2578 = load ptr, ptr %2577, align 8, !tbaa !44
  %2579 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 1
  store ptr %2578, ptr %2579, align 16, !tbaa !44
  %2580 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 9
  store i32 1, ptr %2580, align 16, !tbaa !256
  %2581 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 12
  store i16 0, ptr %2581, align 2, !tbaa !264
  %2582 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 11
  store i16 -1, ptr %2582, align 8, !tbaa !269
  %2583 = load float, ptr %71, align 4, !tbaa !265
  %2584 = fcmp fast ogt float %2583, 0.000000e+00
  %2585 = fmul fast float %2583, 0x3F14F8B580000000
  %2586 = select i1 %2584, float %2585, float 0x3F50624DE0000000
  %2587 = load float, ptr %72, align 8, !tbaa !266
  %2588 = load float, ptr %73, align 4, !tbaa !267
  %2589 = load float, ptr %74, align 8, !tbaa !268
  %2590 = fsub fast float %2589, %2588
  %2591 = fmul fast float %2590, %2587
  %2592 = fadd fast float %2591, %2588
  %2593 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 2
  %2594 = load float, ptr %2576, align 4, !tbaa !79
  %2595 = load float, ptr %2578, align 4, !tbaa !79
  %2596 = fmul fast float %2595, %2592
  %2597 = fadd fast float %2596, %2594
  store float %2597, ptr %2593, align 16, !tbaa !79
  %2598 = getelementptr inbounds float, ptr %2576, i64 1
  %2599 = load float, ptr %2598, align 4, !tbaa !79
  %2600 = getelementptr inbounds float, ptr %2578, i64 1
  %2601 = load float, ptr %2600, align 4, !tbaa !79
  %2602 = fmul fast float %2601, %2592
  %2603 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 2, i64 1
  %2604 = getelementptr inbounds float, ptr %2576, i64 2
  %2605 = getelementptr inbounds float, ptr %2578, i64 2
  %2606 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 2, i64 2
  %2607 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 2
  %2608 = load float, ptr %75, align 4, !tbaa !79
  %2609 = fsub fast float %2597, %2608
  %2610 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 2, i64 1
  %2611 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 2, i64 2
  %2612 = fmul fast float %2609, %2609
  %2613 = fadd fast float %2602, %2599
  store float %2613, ptr %2603, align 4, !tbaa !79
  %2614 = load float, ptr %2604, align 4, !tbaa !79
  %2615 = load float, ptr %2605, align 4, !tbaa !79
  %2616 = fmul fast float %2615, %2592
  %2617 = fadd fast float %2616, %2614
  store float %2617, ptr %2606, align 8, !tbaa !79
  %2618 = load <2 x float>, ptr %85, align 4, !tbaa !79
  %2619 = insertelement <2 x float> poison, float %2613, i64 0
  %2620 = insertelement <2 x float> %2619, float %2617, i64 1
  %2621 = fsub fast <2 x float> %2620, %2618
  %2622 = fmul fast <2 x float> %2621, %2621
  %2623 = extractelement <2 x float> %2622, i64 0
  %2624 = fadd fast float %2623, %2612
  %2625 = extractelement <2 x float> %2622, i64 1
  %2626 = fadd fast float %2624, %2625
  %2627 = call fast float @llvm.sqrt.f32(float %2626)
  %2628 = fsub fast float %2627, %2563
  %2629 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 5
  %2630 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 5, i64 2
  %2631 = fsub fast float 1.000000e+00, %2586
  %2632 = fsub fast float 1.000000e+00, %2587
  %2633 = fmul fast float %2632, %2586
  %2634 = fadd fast float %2633, %2587
  %2635 = fmul fast float %2634, %2590
  %2636 = fadd fast float %2635, %2588
  %2637 = load float, ptr %2576, align 4, !tbaa !79
  %2638 = load float, ptr %2578, align 4, !tbaa !79
  %2639 = fmul fast float %2638, %2636
  %2640 = fadd fast float %2639, %2637
  store float %2640, ptr %2607, align 16, !tbaa !79
  %2641 = getelementptr inbounds float, ptr %2576, i64 1
  %2642 = load float, ptr %2641, align 4, !tbaa !79
  %2643 = getelementptr inbounds float, ptr %2578, i64 1
  %2644 = load float, ptr %2643, align 4, !tbaa !79
  %2645 = fmul fast float %2644, %2636
  %2646 = fadd fast float %2645, %2642
  store float %2646, ptr %2610, align 4, !tbaa !79
  %2647 = getelementptr inbounds float, ptr %2576, i64 2
  %2648 = load float, ptr %2647, align 4, !tbaa !79
  %2649 = getelementptr inbounds float, ptr %2578, i64 2
  %2650 = load float, ptr %2649, align 4, !tbaa !79
  %2651 = fmul fast float %2650, %2636
  %2652 = fadd fast float %2651, %2648
  store float %2652, ptr %2611, align 8, !tbaa !79
  call void @interp_v3_v3v3(ptr noundef nonnull %2629, ptr noundef nonnull %75, ptr noundef nonnull %88, float noundef nofpclass(nan inf) %2586) #14
  %2653 = load <2 x float>, ptr %2607, align 16, !tbaa !79
  %2654 = load <2 x float>, ptr %2629, align 4, !tbaa !79
  %2655 = fsub fast <2 x float> %2653, %2654
  %2656 = fsub fast <2 x float> %2653, %2654
  %2657 = load float, ptr %2611, align 8, !tbaa !79
  %2658 = load float, ptr %2630, align 4, !tbaa !79
  %2659 = fsub fast float %2657, %2658
  %2660 = fmul fast <2 x float> %2655, %2655
  %2661 = fmul fast <2 x float> %2656, %2656
  %2662 = shufflevector <2 x float> %2661, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2663 = fadd fast <2 x float> %2662, %2660
  %2664 = extractelement <2 x float> %2663, i64 0
  %2665 = fmul fast float %2659, %2659
  %2666 = fadd fast float %2664, %2665
  %2667 = call fast float @llvm.sqrt.f32(float %2666)
  %2668 = fsub fast float %2667, %2563
  %2669 = fcmp fast olt float %2628, 0.000000e+00
  %2670 = fcmp fast ogt float %2628, %2564
  %2671 = select i1 %2669, i1 %2670, i1 false
  br i1 %2671, label %2841, label %2672

2672:                                             ; preds = %2573
  %2673 = fcmp fast oeq float %2668, %2628
  br i1 %2673, label %2706, label %2674

2674:                                             ; preds = %2672
  %2675 = fsub fast float %2667, %2627
  %2676 = fmul fast float %2668, %2586
  %2677 = fdiv fast float %2676, %2675
  %2678 = fsub fast float %2586, %2677
  %2679 = fcmp fast olt float %2678, 0.000000e+00
  br i1 %2679, label %2688, label %2680

2680:                                             ; preds = %2674
  %2681 = fcmp fast ole float %2668, 0x3EE4F8B580000000
  %2682 = fcmp fast oge float %2668, 0xBEE4F8B580000000
  %2683 = select i1 %2681, i1 %2682, i1 false
  br i1 %2683, label %2955, label %2684

2684:                                             ; preds = %2680
  %2685 = load float, ptr %72, align 8, !tbaa !266
  %2686 = load float, ptr %73, align 4, !tbaa !267
  %2687 = load float, ptr %74, align 8, !tbaa !268
  br label %2724

2688:                                             ; preds = %2674
  %2689 = load float, ptr %72, align 8, !tbaa !266
  %2690 = load float, ptr %73, align 4, !tbaa !267
  %2691 = load float, ptr %74, align 8, !tbaa !268
  call fastcc void @collision_interpolate_element(ptr noundef nonnull %2574, float noundef nofpclass(nan inf) 1.000000e+00, float noundef nofpclass(nan inf) %2689, float %2690, float %2691)
  %2692 = load float, ptr %2607, align 16, !tbaa !79
  %2693 = load float, ptr %88, align 4, !tbaa !79
  %2694 = fsub fast float %2692, %2693
  %2695 = fmul fast float %2694, %2694
  %2696 = load <2 x float>, ptr %2610, align 4, !tbaa !79
  %2697 = load <2 x float>, ptr %94, align 4, !tbaa !79
  %2698 = fsub fast <2 x float> %2696, %2697
  %2699 = fmul fast <2 x float> %2698, %2698
  %2700 = extractelement <2 x float> %2699, i64 0
  %2701 = fadd fast float %2700, %2695
  %2702 = extractelement <2 x float> %2699, i64 1
  %2703 = fadd fast float %2701, %2702
  %2704 = call fast float @llvm.sqrt.f32(float %2703)
  %2705 = fsub fast float %2704, %2563
  br label %2724

2706:                                             ; preds = %2672
  %2707 = load float, ptr %72, align 8, !tbaa !266
  %2708 = load float, ptr %73, align 4, !tbaa !267
  %2709 = load float, ptr %74, align 8, !tbaa !268
  call fastcc void @collision_interpolate_element(ptr noundef nonnull %2574, float noundef nofpclass(nan inf) 1.000000e+00, float noundef nofpclass(nan inf) %2707, float %2708, float %2709)
  %2710 = load float, ptr %2607, align 16, !tbaa !79
  %2711 = load float, ptr %88, align 4, !tbaa !79
  %2712 = fsub fast float %2710, %2711
  %2713 = fmul fast float %2712, %2712
  %2714 = load <2 x float>, ptr %2610, align 4, !tbaa !79
  %2715 = load <2 x float>, ptr %94, align 4, !tbaa !79
  %2716 = fsub fast <2 x float> %2714, %2715
  %2717 = fmul fast <2 x float> %2716, %2716
  %2718 = extractelement <2 x float> %2717, i64 0
  %2719 = fadd fast float %2718, %2713
  %2720 = extractelement <2 x float> %2717, i64 1
  %2721 = fadd fast float %2719, %2720
  %2722 = call fast float @llvm.sqrt.f32(float %2721)
  %2723 = fsub fast float %2722, %2563
  br label %2724

2724:                                             ; preds = %2706, %2688, %2684
  %2725 = phi float [ %2709, %2706 ], [ %2691, %2688 ], [ %2687, %2684 ]
  %2726 = phi float [ %2708, %2706 ], [ %2690, %2688 ], [ %2686, %2684 ]
  %2727 = phi float [ %2707, %2706 ], [ %2689, %2688 ], [ %2685, %2684 ]
  %2728 = phi float [ 1.000000e+00, %2706 ], [ 1.000000e+00, %2688 ], [ %2586, %2684 ]
  %2729 = phi float [ %2631, %2706 ], [ %2631, %2688 ], [ %2678, %2684 ]
  %2730 = phi float [ %2723, %2706 ], [ %2705, %2688 ], [ %2668, %2684 ]
  %2731 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 3
  %2732 = getelementptr inbounds [4 x ptr], ptr %2574, i64 0, i64 1
  %2733 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 1, i64 1
  %2734 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 3, i64 1
  %2735 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 3, i64 2
  %2736 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 4
  %2737 = getelementptr inbounds [4 x ptr], ptr %2574, i64 0, i64 2
  %2738 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 1, i64 2
  %2739 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 4, i64 1
  %2740 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %5, i64 %2567, i32 4, i64 2
  %2741 = fsub fast float 1.000000e+00, %2727
  %2742 = fmul fast float %2729, %2741
  %2743 = fadd fast float %2742, %2727
  %2744 = fsub fast float %2725, %2726
  %2745 = fmul fast float %2743, %2744
  %2746 = fadd fast float %2745, %2726
  %2747 = load i32, ptr %2580, align 16, !tbaa !256
  %2748 = icmp sgt i32 %2747, 0
  br i1 %2748, label %2749, label %2808

2749:                                             ; preds = %2724
  %2750 = load ptr, ptr %2574, align 16, !tbaa !44
  %2751 = load ptr, ptr %2579, align 16, !tbaa !44
  %2752 = load float, ptr %2750, align 4, !tbaa !79
  %2753 = load float, ptr %2751, align 4, !tbaa !79
  %2754 = fmul fast float %2753, %2746
  %2755 = fadd fast float %2754, %2752
  store float %2755, ptr %2607, align 16, !tbaa !79
  %2756 = getelementptr inbounds float, ptr %2750, i64 1
  %2757 = load float, ptr %2756, align 4, !tbaa !79
  %2758 = getelementptr inbounds float, ptr %2751, i64 1
  %2759 = load float, ptr %2758, align 4, !tbaa !79
  %2760 = fmul fast float %2759, %2746
  %2761 = fadd fast float %2760, %2757
  store float %2761, ptr %2610, align 4, !tbaa !79
  %2762 = getelementptr inbounds float, ptr %2750, i64 2
  %2763 = load float, ptr %2762, align 4, !tbaa !79
  %2764 = getelementptr inbounds float, ptr %2751, i64 2
  %2765 = load float, ptr %2764, align 4, !tbaa !79
  %2766 = fmul fast float %2765, %2746
  %2767 = fadd fast float %2766, %2763
  store float %2767, ptr %2611, align 8, !tbaa !79
  %2768 = icmp eq i32 %2747, 1
  br i1 %2768, label %2808, label %2769

2769:                                             ; preds = %2749
  %2770 = load ptr, ptr %2732, align 8, !tbaa !44
  %2771 = load ptr, ptr %2733, align 8, !tbaa !44
  %2772 = load float, ptr %2770, align 4, !tbaa !79
  %2773 = load float, ptr %2771, align 4, !tbaa !79
  %2774 = fmul fast float %2773, %2746
  %2775 = fadd fast float %2774, %2772
  store float %2775, ptr %2731, align 4, !tbaa !79
  %2776 = getelementptr inbounds float, ptr %2770, i64 1
  %2777 = load float, ptr %2776, align 4, !tbaa !79
  %2778 = getelementptr inbounds float, ptr %2771, i64 1
  %2779 = load float, ptr %2778, align 4, !tbaa !79
  %2780 = fmul fast float %2779, %2746
  %2781 = fadd fast float %2780, %2777
  store float %2781, ptr %2734, align 16, !tbaa !79
  %2782 = getelementptr inbounds float, ptr %2770, i64 2
  %2783 = load float, ptr %2782, align 4, !tbaa !79
  %2784 = getelementptr inbounds float, ptr %2771, i64 2
  %2785 = load float, ptr %2784, align 4, !tbaa !79
  %2786 = fmul fast float %2785, %2746
  %2787 = fadd fast float %2786, %2783
  store float %2787, ptr %2735, align 4, !tbaa !79
  %2788 = icmp ugt i32 %2747, 2
  br i1 %2788, label %2789, label %2808

2789:                                             ; preds = %2769
  %2790 = load ptr, ptr %2737, align 16, !tbaa !44
  %2791 = load ptr, ptr %2738, align 16, !tbaa !44
  %2792 = load float, ptr %2790, align 4, !tbaa !79
  %2793 = load float, ptr %2791, align 4, !tbaa !79
  %2794 = fmul fast float %2793, %2746
  %2795 = fadd fast float %2794, %2792
  store float %2795, ptr %2736, align 8, !tbaa !79
  %2796 = getelementptr inbounds float, ptr %2790, i64 1
  %2797 = load float, ptr %2796, align 4, !tbaa !79
  %2798 = getelementptr inbounds float, ptr %2791, i64 1
  %2799 = load float, ptr %2798, align 4, !tbaa !79
  %2800 = fmul fast float %2799, %2746
  %2801 = fadd fast float %2800, %2797
  store float %2801, ptr %2739, align 4, !tbaa !79
  %2802 = getelementptr inbounds float, ptr %2790, i64 2
  %2803 = load float, ptr %2802, align 4, !tbaa !79
  %2804 = getelementptr inbounds float, ptr %2791, i64 2
  %2805 = load float, ptr %2804, align 4, !tbaa !79
  %2806 = fmul fast float %2805, %2746
  %2807 = fadd fast float %2806, %2803
  store float %2807, ptr %2740, align 16, !tbaa !79
  br label %2808

2808:                                             ; preds = %2789, %2769, %2749, %2724
  call void @interp_v3_v3v3(ptr noundef nonnull %2629, ptr noundef nonnull %75, ptr noundef nonnull %88, float noundef nofpclass(nan inf) %2729) #14
  %2809 = load <2 x float>, ptr %2607, align 16, !tbaa !79
  %2810 = load <2 x float>, ptr %2629, align 4, !tbaa !79
  %2811 = fsub fast <2 x float> %2809, %2810
  %2812 = load float, ptr %2611, align 8, !tbaa !79
  %2813 = load float, ptr %2630, align 4, !tbaa !79
  %2814 = fmul fast <2 x float> %2811, %2811
  %2815 = shufflevector <2 x float> %2809, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2816 = insertelement <2 x float> %2815, float %2812, i64 1
  %2817 = shufflevector <2 x float> %2810, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2818 = insertelement <2 x float> %2817, float %2813, i64 1
  %2819 = fsub fast <2 x float> %2816, %2818
  %2820 = fmul fast <2 x float> %2819, %2819
  %2821 = fadd fast <2 x float> %2820, %2814
  %2822 = shufflevector <2 x float> %2820, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2823 = fadd fast <2 x float> %2821, %2822
  %2824 = extractelement <2 x float> %2823, i64 0
  %2825 = call fast float @llvm.sqrt.f32(float %2824)
  %2826 = fsub fast float %2825, %2563
  %2827 = fcmp fast oeq float %2826, %2730
  br i1 %2827, label %3002, label %2828

2828:                                             ; preds = %2808
  %2829 = fsub fast float %2729, %2728
  %2830 = fsub fast float %2826, %2730
  %2831 = fmul fast float %2826, %2829
  %2832 = fdiv fast float %2831, %2830
  %2833 = fsub fast float %2729, %2832
  %2834 = fcmp fast olt float %2833, 0xBEE4F8B580000000
  %2835 = fcmp fast ogt float %2833, 1.000000e+00
  %2836 = select i1 %2834, i1 true, i1 %2835
  br i1 %2836, label %3002, label %2837

2837:                                             ; preds = %2828
  %2838 = fcmp fast ole float %2826, 0x3EE4F8B580000000
  %2839 = fcmp fast oge float %2826, 0xBEE4F8B580000000
  %2840 = select i1 %2838, i1 %2839, i1 false
  br i1 %2840, label %2948, label %2844

2841:                                             ; preds = %2573
  %2842 = load <2 x float>, ptr %75, align 4, !tbaa !79
  store <2 x float> %2842, ptr %2629, align 4, !tbaa !79
  %2843 = load float, ptr %86, align 4, !tbaa !79
  store float %2843, ptr %2630, align 4, !tbaa !79
  store i16 1, ptr %2581, align 2, !tbaa !264
  br label %2975

2844:                                             ; preds = %2837, %2969
  %2845 = phi i32 [ %2970, %2969 ], [ 2, %2837 ]
  %2846 = phi float [ %2937, %2969 ], [ %2826, %2837 ]
  %2847 = phi float [ %2944, %2969 ], [ %2833, %2837 ]
  %2848 = phi float [ %2847, %2969 ], [ %2729, %2837 ]
  %2849 = load float, ptr %72, align 8, !tbaa !266
  %2850 = load float, ptr %73, align 4, !tbaa !267
  %2851 = load float, ptr %74, align 8, !tbaa !268
  %2852 = fsub fast float 1.000000e+00, %2849
  %2853 = fmul fast float %2852, %2847
  %2854 = fadd fast float %2853, %2849
  %2855 = fsub fast float %2851, %2850
  %2856 = fmul fast float %2854, %2855
  %2857 = fadd fast float %2856, %2850
  %2858 = load i32, ptr %2580, align 16, !tbaa !256
  %2859 = icmp sgt i32 %2858, 0
  br i1 %2859, label %2860, label %2919

2860:                                             ; preds = %2844
  %2861 = load ptr, ptr %2574, align 16, !tbaa !44
  %2862 = load ptr, ptr %2579, align 16, !tbaa !44
  %2863 = load float, ptr %2861, align 4, !tbaa !79
  %2864 = load float, ptr %2862, align 4, !tbaa !79
  %2865 = fmul fast float %2864, %2857
  %2866 = fadd fast float %2865, %2863
  store float %2866, ptr %2607, align 16, !tbaa !79
  %2867 = getelementptr inbounds float, ptr %2861, i64 1
  %2868 = load float, ptr %2867, align 4, !tbaa !79
  %2869 = getelementptr inbounds float, ptr %2862, i64 1
  %2870 = load float, ptr %2869, align 4, !tbaa !79
  %2871 = fmul fast float %2870, %2857
  %2872 = fadd fast float %2871, %2868
  store float %2872, ptr %2610, align 4, !tbaa !79
  %2873 = getelementptr inbounds float, ptr %2861, i64 2
  %2874 = load float, ptr %2873, align 4, !tbaa !79
  %2875 = getelementptr inbounds float, ptr %2862, i64 2
  %2876 = load float, ptr %2875, align 4, !tbaa !79
  %2877 = fmul fast float %2876, %2857
  %2878 = fadd fast float %2877, %2874
  store float %2878, ptr %2611, align 8, !tbaa !79
  %2879 = icmp eq i32 %2858, 1
  br i1 %2879, label %2919, label %2880

2880:                                             ; preds = %2860
  %2881 = load ptr, ptr %2732, align 8, !tbaa !44
  %2882 = load ptr, ptr %2733, align 8, !tbaa !44
  %2883 = load float, ptr %2881, align 4, !tbaa !79
  %2884 = load float, ptr %2882, align 4, !tbaa !79
  %2885 = fmul fast float %2884, %2857
  %2886 = fadd fast float %2885, %2883
  store float %2886, ptr %2731, align 4, !tbaa !79
  %2887 = getelementptr inbounds float, ptr %2881, i64 1
  %2888 = load float, ptr %2887, align 4, !tbaa !79
  %2889 = getelementptr inbounds float, ptr %2882, i64 1
  %2890 = load float, ptr %2889, align 4, !tbaa !79
  %2891 = fmul fast float %2890, %2857
  %2892 = fadd fast float %2891, %2888
  store float %2892, ptr %2734, align 16, !tbaa !79
  %2893 = getelementptr inbounds float, ptr %2881, i64 2
  %2894 = load float, ptr %2893, align 4, !tbaa !79
  %2895 = getelementptr inbounds float, ptr %2882, i64 2
  %2896 = load float, ptr %2895, align 4, !tbaa !79
  %2897 = fmul fast float %2896, %2857
  %2898 = fadd fast float %2897, %2894
  store float %2898, ptr %2735, align 4, !tbaa !79
  %2899 = icmp ugt i32 %2858, 2
  br i1 %2899, label %2900, label %2919

2900:                                             ; preds = %2880
  %2901 = load ptr, ptr %2737, align 16, !tbaa !44
  %2902 = load ptr, ptr %2738, align 16, !tbaa !44
  %2903 = load float, ptr %2901, align 4, !tbaa !79
  %2904 = load float, ptr %2902, align 4, !tbaa !79
  %2905 = fmul fast float %2904, %2857
  %2906 = fadd fast float %2905, %2903
  store float %2906, ptr %2736, align 8, !tbaa !79
  %2907 = getelementptr inbounds float, ptr %2901, i64 1
  %2908 = load float, ptr %2907, align 4, !tbaa !79
  %2909 = getelementptr inbounds float, ptr %2902, i64 1
  %2910 = load float, ptr %2909, align 4, !tbaa !79
  %2911 = fmul fast float %2910, %2857
  %2912 = fadd fast float %2911, %2908
  store float %2912, ptr %2739, align 4, !tbaa !79
  %2913 = getelementptr inbounds float, ptr %2901, i64 2
  %2914 = load float, ptr %2913, align 4, !tbaa !79
  %2915 = getelementptr inbounds float, ptr %2902, i64 2
  %2916 = load float, ptr %2915, align 4, !tbaa !79
  %2917 = fmul fast float %2916, %2857
  %2918 = fadd fast float %2917, %2914
  store float %2918, ptr %2740, align 16, !tbaa !79
  br label %2919

2919:                                             ; preds = %2900, %2880, %2860, %2844
  call void @interp_v3_v3v3(ptr noundef nonnull %2629, ptr noundef nonnull %75, ptr noundef nonnull %88, float noundef nofpclass(nan inf) %2847) #14
  %2920 = load <2 x float>, ptr %2607, align 16, !tbaa !79
  %2921 = load <2 x float>, ptr %2629, align 4, !tbaa !79
  %2922 = fsub fast <2 x float> %2920, %2921
  %2923 = load float, ptr %2611, align 8, !tbaa !79
  %2924 = load float, ptr %2630, align 4, !tbaa !79
  %2925 = fmul fast <2 x float> %2922, %2922
  %2926 = shufflevector <2 x float> %2920, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2927 = insertelement <2 x float> %2926, float %2923, i64 1
  %2928 = shufflevector <2 x float> %2921, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2929 = insertelement <2 x float> %2928, float %2924, i64 1
  %2930 = fsub fast <2 x float> %2927, %2929
  %2931 = fmul fast <2 x float> %2930, %2930
  %2932 = fadd fast <2 x float> %2931, %2925
  %2933 = shufflevector <2 x float> %2931, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2934 = fadd fast <2 x float> %2932, %2933
  %2935 = extractelement <2 x float> %2934, i64 0
  %2936 = call fast float @llvm.sqrt.f32(float %2935)
  %2937 = fsub fast float %2936, %2563
  %2938 = fcmp fast oeq float %2937, %2846
  br i1 %2938, label %3002, label %2939

2939:                                             ; preds = %2919
  %2940 = fsub fast float %2847, %2848
  %2941 = fsub fast float %2937, %2846
  %2942 = fmul fast float %2937, %2940
  %2943 = fdiv fast float %2942, %2941
  %2944 = fsub fast float %2847, %2943
  %2945 = fcmp fast ole float %2937, 0x3EE4F8B580000000
  %2946 = fcmp fast oge float %2937, 0xBEE4F8B580000000
  %2947 = select i1 %2945, i1 %2946, i1 false
  br i1 %2947, label %2948, label %2969

2948:                                             ; preds = %2939, %2837
  %2949 = phi float [ %2812, %2837 ], [ %2923, %2939 ]
  %2950 = phi float [ %2813, %2837 ], [ %2924, %2939 ]
  %2951 = phi float [ %2833, %2837 ], [ %2944, %2939 ]
  %2952 = phi <2 x float> [ %2810, %2837 ], [ %2921, %2939 ]
  %2953 = phi <2 x float> [ %2809, %2837 ], [ %2920, %2939 ]
  %2954 = fcmp fast olt float %2951, 0.000000e+00
  br label %2955

2955:                                             ; preds = %2948, %2680
  %2956 = phi float [ %2657, %2680 ], [ %2949, %2948 ]
  %2957 = phi float [ %2658, %2680 ], [ %2950, %2948 ]
  %2958 = phi float [ %2678, %2680 ], [ %2951, %2948 ]
  %2959 = phi i1 [ false, %2680 ], [ %2954, %2948 ]
  %2960 = phi <2 x float> [ %2654, %2680 ], [ %2952, %2948 ]
  %2961 = phi <2 x float> [ %2653, %2680 ], [ %2953, %2948 ]
  %2962 = fcmp fast ult float %2958, 0xBEE4F8B580000000
  %2963 = fcmp fast ugt float %2958, 1.000000e+00
  %2964 = select i1 %2962, i1 true, i1 %2963
  %2965 = select i1 %2964, i1 true, i1 %2959
  %2966 = select i1 %2964, float -1.000000e+00, float 0.000000e+00
  br i1 %2965, label %2972, label %2967

2967:                                             ; preds = %2955
  %2968 = fcmp fast ogt float %2958, 1.000000e+00
  br i1 %2968, label %2975, label %2972

2969:                                             ; preds = %2939
  %2970 = add nuw nsw i32 %2845, 1
  %2971 = icmp eq i32 %2970, 10
  br i1 %2971, label %3002, label %2844, !llvm.loop !276

2972:                                             ; preds = %2967, %2955
  %2973 = phi float [ %2958, %2967 ], [ %2966, %2955 ]
  %2974 = fcmp fast ult float %2973, 0.000000e+00
  br i1 %2974, label %3002, label %2975

2975:                                             ; preds = %2972, %2967, %2841
  %2976 = phi float [ %2956, %2972 ], [ %2657, %2841 ], [ %2956, %2967 ]
  %2977 = phi float [ %2957, %2972 ], [ %2843, %2841 ], [ %2957, %2967 ]
  %2978 = phi float [ %2973, %2972 ], [ 0.000000e+00, %2841 ], [ 1.000000e+00, %2967 ]
  %2979 = phi <2 x float> [ %2960, %2972 ], [ %2842, %2841 ], [ %2960, %2967 ]
  %2980 = phi <2 x float> [ %2961, %2972 ], [ %2653, %2841 ], [ %2961, %2967 ]
  %2981 = fcmp fast olt float %2978, %2566
  br i1 %2981, label %2982, label %3002

2982:                                             ; preds = %2975
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(160) %69, ptr noundef nonnull align 16 dereferenceable(160) %2574, i64 160, i1 false), !tbaa.struct !270
  %2983 = fsub fast <2 x float> %2979, %2980
  %2984 = fsub fast float %2977, %2976
  %2985 = fmul fast <2 x float> %2983, %2983
  %2986 = fmul fast float %2984, %2984
  %2987 = extractelement <2 x float> %2985, i64 1
  %2988 = fadd fast float %2987, %2986
  %2989 = extractelement <2 x float> %2985, i64 0
  %2990 = fadd fast float %2988, %2989
  %2991 = fcmp fast ogt float %2990, 0x38AA95A5C0000000
  br i1 %2991, label %2992, label %2999

2992:                                             ; preds = %2982
  %2993 = call fast float @llvm.sqrt.f32(float %2990)
  %2994 = fdiv fast float 1.000000e+00, %2993
  %2995 = insertelement <2 x float> poison, float %2994, i64 0
  %2996 = shufflevector <2 x float> %2995, <2 x float> poison, <2 x i32> zeroinitializer
  %2997 = fmul fast <2 x float> %2996, %2983
  %2998 = fmul fast float %2994, %2984
  br label %2999

2999:                                             ; preds = %2992, %2982
  %3000 = phi float [ %2998, %2992 ], [ 0.000000e+00, %2982 ]
  %3001 = phi <2 x float> [ %2997, %2992 ], [ zeroinitializer, %2982 ]
  store <2 x float> %3001, ptr %99, align 4
  store float %3000, ptr %100, align 4
  br label %3002

3002:                                             ; preds = %2969, %2919, %2999, %2975, %2972, %2828, %2808, %2565
  %3003 = phi float [ %2566, %2565 ], [ %2978, %2999 ], [ %2566, %2975 ], [ %2566, %2808 ], [ %2566, %2828 ], [ %2566, %2972 ], [ %2566, %2919 ], [ %2566, %2969 ]
  %3004 = phi ptr [ %2568, %2565 ], [ %2574, %2999 ], [ %2568, %2975 ], [ %2568, %2808 ], [ %2568, %2828 ], [ %2568, %2972 ], [ %2568, %2919 ], [ %2568, %2969 ]
  %3005 = add nuw nsw i64 %2567, 1
  %3006 = icmp eq i64 %3005, 3
  br i1 %3006, label %3007, label %2565, !llvm.loop !278

3007:                                             ; preds = %3002
  %3008 = zext i1 %2562 to i32
  %3009 = add nuw nsw i32 %1986, %3008
  %3010 = icmp ne ptr %3004, null
  %3011 = zext i1 %3010 to i32
  call void @llvm.lifetime.end.p0(i64 480, ptr nonnull %5) #14
  %3012 = add nuw nsw i32 %3009, %3011
  br label %3013

3013:                                             ; preds = %3007, %1984
  %3014 = phi float [ %3003, %3007 ], [ %1985, %1984 ]
  %3015 = phi i32 [ %3012, %3007 ], [ %1986, %1984 ]
  %3016 = icmp eq i32 %3015, 0
  br i1 %3016, label %3065, label %3017

3017:                                             ; preds = %3013
  %3018 = load float, ptr %20, align 4, !tbaa !250
  %3019 = fmul fast float %3018, %3014
  store float %3019, ptr %18, align 4, !tbaa !248
  store i32 %1, ptr %3, align 4, !tbaa !279
  %3020 = load ptr, ptr %102, align 8, !tbaa !44
  %3021 = getelementptr inbounds float, ptr %3020, i64 1
  %3022 = load float, ptr %3020, align 4, !tbaa !79
  store float %3022, ptr %101, align 4, !tbaa !79
  %3023 = load float, ptr %3021, align 4, !tbaa !79
  store float %3023, ptr %103, align 4, !tbaa !79
  %3024 = getelementptr inbounds float, ptr %3020, i64 2
  %3025 = load float, ptr %3024, align 4, !tbaa !79
  store float %3025, ptr %104, align 4, !tbaa !79
  %3026 = load i32, ptr %105, align 8, !tbaa !256
  %3027 = icmp sgt i32 %3026, 1
  br i1 %3027, label %3028, label %3063

3028:                                             ; preds = %3017
  %3029 = load ptr, ptr %106, align 8, !tbaa !44
  %3030 = getelementptr inbounds float, ptr %3029, i64 2
  %3031 = load float, ptr %3030, align 4, !tbaa !79
  %3032 = load float, ptr %3024, align 4, !tbaa !79
  %3033 = fsub fast float %3031, %3032
  %3034 = load float, ptr %97, align 8, !tbaa !79
  %3035 = load <2 x float>, ptr %3029, align 4, !tbaa !79
  %3036 = load <2 x float>, ptr %3020, align 4, !tbaa !79
  %3037 = fsub fast <2 x float> %3035, %3036
  %3038 = insertelement <2 x float> poison, float %3034, i64 0
  %3039 = shufflevector <2 x float> %3038, <2 x float> poison, <2 x i32> zeroinitializer
  %3040 = fmul fast <2 x float> %3039, %3037
  %3041 = insertelement <2 x float> poison, float %3022, i64 0
  %3042 = insertelement <2 x float> %3041, float %3023, i64 1
  %3043 = fadd fast <2 x float> %3040, %3042
  store <2 x float> %3043, ptr %101, align 4, !tbaa !79
  %3044 = fmul fast float %3033, %3034
  %3045 = fadd fast float %3044, %3025
  store float %3045, ptr %104, align 4, !tbaa !79
  %3046 = icmp eq i32 %3026, 2
  br i1 %3046, label %3063, label %3047

3047:                                             ; preds = %3028
  %3048 = load ptr, ptr %107, align 8, !tbaa !44
  %3049 = getelementptr inbounds float, ptr %3048, i64 2
  %3050 = load float, ptr %3049, align 4, !tbaa !79
  %3051 = load float, ptr %3024, align 4, !tbaa !79
  %3052 = fsub fast float %3050, %3051
  %3053 = load float, ptr %98, align 4, !tbaa !79
  %3054 = load <2 x float>, ptr %3048, align 4, !tbaa !79
  %3055 = load <2 x float>, ptr %3020, align 4, !tbaa !79
  %3056 = fsub fast <2 x float> %3054, %3055
  %3057 = insertelement <2 x float> poison, float %3053, i64 0
  %3058 = shufflevector <2 x float> %3057, <2 x float> poison, <2 x i32> zeroinitializer
  %3059 = fmul fast <2 x float> %3058, %3056
  %3060 = fadd fast <2 x float> %3059, %3043
  store <2 x float> %3060, ptr %101, align 4, !tbaa !79
  %3061 = fmul fast float %3052, %3053
  %3062 = fadd fast float %3061, %3045
  store float %3062, ptr %104, align 4, !tbaa !79
  br label %3063

3063:                                             ; preds = %3017, %3028, %3047
  %3064 = load ptr, ptr %0, align 8, !tbaa !259
  store ptr %3064, ptr %55, align 8, !tbaa !258
  br label %3065

3065:                                             ; preds = %1922, %3063, %3013
  %3066 = phi float [ %3014, %3063 ], [ %3014, %3013 ], [ %113, %1922 ]
  %3067 = load ptr, ptr %35, align 8, !tbaa !44
  store ptr %3067, ptr %30, align 8, !tbaa !44
  %3068 = load ptr, ptr %42, align 8, !tbaa !44
  store ptr %3068, ptr %35, align 8, !tbaa !44
  store ptr null, ptr %42, align 8, !tbaa !44
  %3069 = load ptr, ptr %48, align 8, !tbaa !44
  store ptr %3069, ptr %46, align 8, !tbaa !44
  %3070 = load ptr, ptr %51, align 8, !tbaa !44
  store ptr %3070, ptr %48, align 8, !tbaa !44
  store ptr null, ptr %51, align 8, !tbaa !44
  %3071 = icmp eq ptr %3068, null
  br i1 %3071, label %3072, label %108, !llvm.loop !280

3072:                                             ; preds = %3065, %63
  call void @llvm.lifetime.end.p0(i64 160, ptr nonnull %7) #14
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @psys_changed_type(ptr noundef %0, ptr noundef %1) local_unnamed_addr #2 {
  %3 = alloca %struct.PTCacheID, align 8
  %4 = getelementptr inbounds %struct.ParticleSystem, ptr %1, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 200, ptr nonnull %3) #14
  call void @BKE_ptcache_id_from_particles(ptr noundef nonnull %3, ptr noundef %0, ptr noundef %1) #14
  %6 = getelementptr inbounds %struct.ParticleSettings, ptr %5, i64 0, i32 11
  %7 = load i16, ptr %6, align 8, !tbaa !22
  %8 = icmp eq i16 %7, 2
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ParticleSystem, ptr %1, i64 0, i32 25
  %11 = load i32, ptr %10, align 4, !tbaa !21
  %12 = and i32 %11, -1025
  store i32 %12, ptr %10, align 4, !tbaa !21
  br label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %struct.ParticleSettings, ptr %5, i64 0, i32 7
  %15 = load i16, ptr %14, align 8, !tbaa !18
  %16 = icmp eq i16 %15, 2
  br i1 %16, label %17, label %47

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.ParticleSettings, ptr %5, i64 0, i32 21
  %19 = load i16, ptr %18, align 8, !tbaa !281
  switch i16 %19, label %20 [
    i16 0, label %21
    i16 6, label %21
    i16 7, label %21
    i16 8, label %21
  ]

20:                                               ; preds = %17
  store i16 6, ptr %18, align 8, !tbaa !281
  br label %21

21:                                               ; preds = %17, %17, %17, %17, %20
  %22 = getelementptr inbounds %struct.ParticleSettings, ptr %5, i64 0, i32 9
  %23 = load i16, ptr %22, align 4, !tbaa !27
  %24 = icmp eq i16 %23, 2
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  store i16 0, ptr %22, align 4, !tbaa !27
  br label %26

26:                                               ; preds = %25, %21
  %27 = getelementptr inbounds %struct.ParticleSettings, ptr %5, i64 0, i32 17
  %28 = load i16, ptr %27, align 8, !tbaa !282
  switch i16 %28, label %29 [
    i16 0, label %30
    i16 10, label %30
    i16 6, label %30
  ]

29:                                               ; preds = %26
  store i16 10, ptr %27, align 8, !tbaa !282
  br label %30

30:                                               ; preds = %26, %26, %26, %29
  %31 = getelementptr inbounds %struct.ParticleSettings, ptr %5, i64 0, i32 117
  %32 = load float, ptr %31, align 8, !tbaa !283
  %33 = fcmp fast olt float %32, 0.000000e+00
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = fcmp fast ogt float %32, 1.000000e+02
  br i1 %35, label %36, label %38

36:                                               ; preds = %34, %30
  %37 = phi float [ 0.000000e+00, %30 ], [ 1.000000e+02, %34 ]
  store float %37, ptr %31, align 8, !tbaa !283
  br label %38

38:                                               ; preds = %36, %34
  %39 = getelementptr inbounds %struct.ParticleSettings, ptr %5, i64 0, i32 118
  %40 = load float, ptr %39, align 4, !tbaa !284
  %41 = fcmp fast olt float %40, 0.000000e+00
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = fcmp fast ogt float %40, 1.000000e+02
  br i1 %43, label %44, label %46

44:                                               ; preds = %42, %38
  %45 = phi float [ 0.000000e+00, %38 ], [ 1.000000e+02, %42 ]
  store float %45, ptr %39, align 4, !tbaa !284
  br label %46

46:                                               ; preds = %44, %42
  call void @BKE_ptcache_id_clear(ptr noundef nonnull %3, i32 noundef 0, i32 noundef 0) #14
  br label %77

47:                                               ; preds = %13
  call void @free_hair(ptr noundef %0, ptr noundef nonnull %1, i32 noundef 1) #14
  %48 = getelementptr inbounds %struct.ParticleSettings, ptr %5, i64 0, i32 117
  %49 = load float, ptr %48, align 8, !tbaa !283
  %50 = fcmp fast olt float %49, 0.000000e+00
  br i1 %50, label %60, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.ParticleSettings, ptr %5, i64 0, i32 54
  %53 = load float, ptr %52, align 8, !tbaa !114
  %54 = getelementptr inbounds %struct.ParticleSettings, ptr %5, i64 0, i32 55
  %55 = load float, ptr %54, align 4, !tbaa !168
  %56 = fadd fast float %55, %53
  %57 = fcmp fast olt float %56, 1.000000e+02
  %58 = select fast i1 %57, float 1.000000e+02, float %56
  %59 = fcmp fast ogt float %49, %58
  br i1 %59, label %60, label %62

60:                                               ; preds = %51, %47
  %61 = phi float [ 0.000000e+00, %47 ], [ %58, %51 ]
  store float %61, ptr %48, align 8, !tbaa !283
  br label %62

62:                                               ; preds = %60, %51
  %63 = getelementptr inbounds %struct.ParticleSettings, ptr %5, i64 0, i32 118
  %64 = load float, ptr %63, align 4, !tbaa !284
  %65 = fcmp fast olt float %64, 0.000000e+00
  br i1 %65, label %66, label %67

66:                                               ; preds = %62
  store float 0.000000e+00, ptr %63, align 4, !tbaa !284
  br label %77

67:                                               ; preds = %62
  %68 = getelementptr inbounds %struct.ParticleSettings, ptr %5, i64 0, i32 54
  %69 = load float, ptr %68, align 8, !tbaa !114
  %70 = getelementptr inbounds %struct.ParticleSettings, ptr %5, i64 0, i32 55
  %71 = load float, ptr %70, align 4, !tbaa !168
  %72 = fadd fast float %71, %69
  %73 = fcmp fast olt float %72, 1.000000e+02
  %74 = select fast i1 %73, float 1.000000e+02, float %72
  %75 = fcmp fast ogt float %64, %74
  br i1 %75, label %76, label %77

76:                                               ; preds = %67
  store float %74, ptr %63, align 4, !tbaa !284
  br label %77

77:                                               ; preds = %66, %76, %67, %46
  call void @psys_reset(ptr noundef nonnull %1, i32 noundef 1)
  call void @llvm.lifetime.end.p0(i64 200, ptr nonnull %3) #14
  ret void
}

declare void @BKE_ptcache_id_clear(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare void @free_hair(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @psys_check_boid_data(ptr nocapture noundef readonly %0) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !35
  %4 = icmp eq ptr %3, null
  br i1 %4, label %107, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = icmp eq ptr %7, null
  br i1 %8, label %55, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.ParticleSettings, ptr %7, i64 0, i32 11
  %11 = load i16, ptr %10, align 8, !tbaa !22
  %12 = icmp eq i16 %11, 3
  br i1 %12, label %13, label %55

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.ParticleData, ptr %3, i64 0, i32 4
  %15 = load ptr, ptr %14, align 8, !tbaa !117
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %107

17:                                               ; preds = %13
  %18 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %19 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 26
  %20 = load i32, ptr %19, align 8, !tbaa !26
  %21 = sext i32 %20 to i64
  %22 = mul nsw i64 %21, 56
  %23 = tail call ptr %18(i64 noundef %22, ptr noundef nonnull @.str.4) #14
  %24 = load i32, ptr %19, align 8, !tbaa !26
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %107

26:                                               ; preds = %17
  %27 = load ptr, ptr %2, align 8, !tbaa !35
  %28 = and i32 %24, 7
  %29 = icmp ult i32 %24, 8
  br i1 %29, label %94, label %30

30:                                               ; preds = %26
  %31 = and i32 %24, -8
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi ptr [ %27, %30 ], [ %52, %32 ]
  %34 = phi ptr [ %23, %30 ], [ %50, %32 ]
  %35 = phi i32 [ 0, %30 ], [ %53, %32 ]
  %36 = getelementptr inbounds %struct.BoidParticle, ptr %34, i64 1
  %37 = getelementptr inbounds %struct.ParticleData, ptr %33, i64 0, i32 4
  store ptr %34, ptr %37, align 8, !tbaa !117
  %38 = getelementptr inbounds %struct.BoidParticle, ptr %34, i64 2
  %39 = getelementptr inbounds %struct.ParticleData, ptr %33, i64 1, i32 4
  store ptr %36, ptr %39, align 8, !tbaa !117
  %40 = getelementptr inbounds %struct.BoidParticle, ptr %34, i64 3
  %41 = getelementptr inbounds %struct.ParticleData, ptr %33, i64 2, i32 4
  store ptr %38, ptr %41, align 8, !tbaa !117
  %42 = getelementptr inbounds %struct.BoidParticle, ptr %34, i64 4
  %43 = getelementptr inbounds %struct.ParticleData, ptr %33, i64 3, i32 4
  store ptr %40, ptr %43, align 8, !tbaa !117
  %44 = getelementptr inbounds %struct.BoidParticle, ptr %34, i64 5
  %45 = getelementptr inbounds %struct.ParticleData, ptr %33, i64 4, i32 4
  store ptr %42, ptr %45, align 8, !tbaa !117
  %46 = getelementptr inbounds %struct.BoidParticle, ptr %34, i64 6
  %47 = getelementptr inbounds %struct.ParticleData, ptr %33, i64 5, i32 4
  store ptr %44, ptr %47, align 8, !tbaa !117
  %48 = getelementptr inbounds %struct.BoidParticle, ptr %34, i64 7
  %49 = getelementptr inbounds %struct.ParticleData, ptr %33, i64 6, i32 4
  store ptr %46, ptr %49, align 8, !tbaa !117
  %50 = getelementptr inbounds %struct.BoidParticle, ptr %34, i64 8
  %51 = getelementptr inbounds %struct.ParticleData, ptr %33, i64 7, i32 4
  store ptr %48, ptr %51, align 8, !tbaa !117
  %52 = getelementptr inbounds %struct.ParticleData, ptr %33, i64 8
  %53 = add i32 %35, 8
  %54 = icmp eq i32 %53, %31
  br i1 %54, label %94, label %32, !llvm.loop !285

55:                                               ; preds = %9, %5
  %56 = getelementptr inbounds %struct.ParticleData, ptr %3, i64 0, i32 4
  %57 = load ptr, ptr %56, align 8, !tbaa !117
  %58 = icmp eq ptr %57, null
  br i1 %58, label %107, label %59

59:                                               ; preds = %55
  %60 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %60(ptr noundef nonnull %57) #14
  %61 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 26
  %62 = load i32, ptr %61, align 8, !tbaa !26
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %107

64:                                               ; preds = %59
  %65 = load ptr, ptr %2, align 8, !tbaa !35
  %66 = and i32 %62, 7
  %67 = icmp ult i32 %62, 8
  br i1 %67, label %84, label %68

68:                                               ; preds = %64
  %69 = and i32 %62, -8
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi ptr [ %65, %68 ], [ %81, %70 ]
  %72 = phi i32 [ 0, %68 ], [ %82, %70 ]
  %73 = getelementptr inbounds %struct.ParticleData, ptr %71, i64 0, i32 4
  store ptr null, ptr %73, align 8, !tbaa !117
  %74 = getelementptr inbounds %struct.ParticleData, ptr %71, i64 1, i32 4
  store ptr null, ptr %74, align 8, !tbaa !117
  %75 = getelementptr inbounds %struct.ParticleData, ptr %71, i64 2, i32 4
  store ptr null, ptr %75, align 8, !tbaa !117
  %76 = getelementptr inbounds %struct.ParticleData, ptr %71, i64 3, i32 4
  store ptr null, ptr %76, align 8, !tbaa !117
  %77 = getelementptr inbounds %struct.ParticleData, ptr %71, i64 4, i32 4
  store ptr null, ptr %77, align 8, !tbaa !117
  %78 = getelementptr inbounds %struct.ParticleData, ptr %71, i64 5, i32 4
  store ptr null, ptr %78, align 8, !tbaa !117
  %79 = getelementptr inbounds %struct.ParticleData, ptr %71, i64 6, i32 4
  store ptr null, ptr %79, align 8, !tbaa !117
  %80 = getelementptr inbounds %struct.ParticleData, ptr %71, i64 7, i32 4
  store ptr null, ptr %80, align 8, !tbaa !117
  %81 = getelementptr inbounds %struct.ParticleData, ptr %71, i64 8
  %82 = add i32 %72, 8
  %83 = icmp eq i32 %82, %69
  br i1 %83, label %84, label %70, !llvm.loop !286

84:                                               ; preds = %70, %64
  %85 = phi ptr [ %65, %64 ], [ %81, %70 ]
  %86 = icmp eq i32 %66, 0
  br i1 %86, label %107, label %87

87:                                               ; preds = %84, %87
  %88 = phi ptr [ %91, %87 ], [ %85, %84 ]
  %89 = phi i32 [ %92, %87 ], [ 0, %84 ]
  %90 = getelementptr inbounds %struct.ParticleData, ptr %88, i64 0, i32 4
  store ptr null, ptr %90, align 8, !tbaa !117
  %91 = getelementptr inbounds %struct.ParticleData, ptr %88, i64 1
  %92 = add i32 %89, 1
  %93 = icmp eq i32 %92, %66
  br i1 %93, label %107, label %87, !llvm.loop !287

94:                                               ; preds = %32, %26
  %95 = phi ptr [ %27, %26 ], [ %52, %32 ]
  %96 = phi ptr [ %23, %26 ], [ %50, %32 ]
  %97 = icmp eq i32 %28, 0
  br i1 %97, label %107, label %98

98:                                               ; preds = %94, %98
  %99 = phi ptr [ %104, %98 ], [ %95, %94 ]
  %100 = phi ptr [ %102, %98 ], [ %96, %94 ]
  %101 = phi i32 [ %105, %98 ], [ 0, %94 ]
  %102 = getelementptr inbounds %struct.BoidParticle, ptr %100, i64 1
  %103 = getelementptr inbounds %struct.ParticleData, ptr %99, i64 0, i32 4
  store ptr %100, ptr %103, align 8, !tbaa !117
  %104 = getelementptr inbounds %struct.ParticleData, ptr %99, i64 1
  %105 = add i32 %101, 1
  %106 = icmp eq i32 %105, %28
  br i1 %106, label %107, label %98, !llvm.loop !288

107:                                              ; preds = %94, %98, %84, %87, %17, %59, %13, %55, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @particle_system_update(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #2 {
  %4 = alloca %struct.ParticleSimulationData, align 8
  %5 = alloca [4 x [4 x float]], align 16
  %6 = alloca %struct.PTCacheID, align 8
  %7 = alloca %struct.ParticleSimulationData, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %7) #14
  %8 = getelementptr inbounds i8, ptr %7, i64 32
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %8, i8 0, i64 16, i1 false)
  %9 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 48
  %12 = load ptr, ptr %11, align 8, !tbaa !289
  %13 = icmp eq ptr %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.ParticleDrawData, ptr %12, i64 0, i32 10
  %16 = load i32, ptr %15, align 4, !tbaa !290
  %17 = and i32 %16, -2
  store i32 %17, ptr %15, align 4, !tbaa !290
  br label %18

18:                                               ; preds = %14, %3
  %19 = tail call i32 @psys_check_enabled(ptr noundef %1, ptr noundef nonnull %2) #14
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %1438, label %21

21:                                               ; preds = %18
  %22 = tail call fast nofpclass(nan inf) float @BKE_scene_frame_get(ptr noundef %0) #14
  store ptr %0, ptr %7, align 8, !tbaa !76
  %23 = getelementptr inbounds %struct.ParticleSimulationData, ptr %7, i64 0, i32 1
  store ptr %1, ptr %23, align 8, !tbaa !86
  %24 = getelementptr inbounds %struct.ParticleSimulationData, ptr %7, i64 0, i32 2
  store ptr %2, ptr %24, align 8, !tbaa !87
  %25 = tail call ptr @psys_get_modifier(ptr noundef %1, ptr noundef nonnull %2) #14
  %26 = getelementptr inbounds %struct.ParticleSimulationData, ptr %7, i64 0, i32 3
  store ptr %25, ptr %26, align 8, !tbaa !120
  %27 = getelementptr inbounds %struct.ParticleSystemModifierData, ptr %25, i64 0, i32 6
  %28 = load i16, ptr %27, align 4, !tbaa !292
  %29 = and i16 %28, 2
  %30 = icmp eq i16 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %21
  %32 = and i16 %28, -3
  store i16 %32, ptr %27, align 4, !tbaa !292
  %33 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 20
  %34 = load float, ptr %33, align 8, !tbaa !134
  %35 = fcmp fast oeq float %34, %22
  br i1 %35, label %1438, label %36

36:                                               ; preds = %31, %21
  %37 = getelementptr inbounds %struct.ParticleSystemModifierData, ptr %25, i64 0, i32 2
  %38 = load ptr, ptr %37, align 8, !tbaa !82
  %39 = icmp eq ptr %38, null
  br i1 %39, label %1438, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.ParticleSettings, ptr %10, i64 0, i32 8
  %42 = load i16, ptr %41, align 2, !tbaa !28
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %40
  tail call void @DM_ensure_tessface(ptr noundef nonnull %38) #14
  br label %45

45:                                               ; preds = %44, %40
  %46 = getelementptr inbounds %struct.ParticleSettings, ptr %10, i64 0, i32 1
  %47 = load ptr, ptr %46, align 8, !tbaa !293
  tail call void @BKE_animsys_evaluate_animdata(ptr noundef %0, ptr noundef nonnull %10, ptr noundef %47, float noundef nofpclass(nan inf) %22, i16 noundef signext 1) #14
  %48 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 25
  %49 = load i32, ptr %48, align 4, !tbaa !21
  %50 = and i32 %49, -16385
  store i32 %50, ptr %48, align 4, !tbaa !21
  %51 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 31
  %52 = load i16, ptr %51, align 4, !tbaa !294
  %53 = and i16 %52, 32
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %45
  tail call void @psys_changed_type(ptr noundef %1, ptr noundef nonnull %2)
  %56 = load i16, ptr %51, align 4, !tbaa !294
  br label %57

57:                                               ; preds = %55, %45
  %58 = phi i16 [ %56, %55 ], [ %52, %45 ]
  %59 = and i16 %58, 16
  %60 = icmp eq i16 %59, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 27
  store i32 0, ptr %62, align 4, !tbaa !31
  br label %63

63:                                               ; preds = %61, %57
  %64 = load ptr, ptr %9, align 8, !tbaa !5
  %65 = getelementptr inbounds %struct.ParticleSettings, ptr %64, i64 0, i32 11
  %66 = load i16, ptr %65, align 8, !tbaa !22
  switch i16 %66, label %68 [
    i16 0, label %67
    i16 2, label %67
  ]

67:                                               ; preds = %63, %63
  call void @llvm.lifetime.start.p0(i64 200, ptr nonnull %6) #14
  call void @BKE_ptcache_id_from_particles(ptr noundef nonnull %6, ptr noundef %1, ptr noundef nonnull %2) #14
  call void @BKE_ptcache_id_clear(ptr noundef nonnull %6, i32 noundef 0, i32 noundef 0) #14
  call void @llvm.lifetime.end.p0(i64 200, ptr nonnull %6) #14
  br label %71

68:                                               ; preds = %63
  tail call void @free_keyed_keys(ptr noundef nonnull %2) #14
  %69 = load i32, ptr %48, align 4, !tbaa !21
  %70 = and i32 %69, -1025
  store i32 %70, ptr %48, align 4, !tbaa !21
  br label %71

71:                                               ; preds = %68, %67
  %72 = load i16, ptr %65, align 8, !tbaa !22
  switch i16 %72, label %107 [
    i16 3, label %73
    i16 4, label %94
  ]

73:                                               ; preds = %71
  %74 = getelementptr inbounds %struct.ParticleSettings, ptr %64, i64 0, i32 2
  %75 = load ptr, ptr %74, align 8, !tbaa !156
  %76 = icmp eq ptr %75, null
  br i1 %76, label %77, label %107

77:                                               ; preds = %73
  %78 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %79 = call ptr %78(i64 noundef 104, ptr noundef nonnull @.str.6) #14
  store ptr %79, ptr %74, align 8, !tbaa !156
  call void @boid_default_settings(ptr noundef %79) #14
  %80 = load ptr, ptr %74, align 8, !tbaa !156
  %81 = call ptr @boid_new_state(ptr noundef %80) #14
  %82 = getelementptr inbounds %struct.BoidState, ptr %81, i64 0, i32 2
  %83 = call ptr @boid_new_rule(i32 noundef 4) #14
  call void @BLI_addtail(ptr noundef nonnull %82, ptr noundef %83) #14
  %84 = call ptr @boid_new_rule(i32 noundef 5) #14
  call void @BLI_addtail(ptr noundef nonnull %82, ptr noundef %84) #14
  %85 = load ptr, ptr %82, align 8, !tbaa !295
  %86 = getelementptr inbounds %struct.BoidRule, ptr %85, i64 0, i32 3
  %87 = load i32, ptr %86, align 4, !tbaa !296
  %88 = or i32 %87, 1
  store i32 %88, ptr %86, align 4, !tbaa !296
  %89 = getelementptr inbounds %struct.BoidState, ptr %81, i64 0, i32 7
  %90 = load i32, ptr %89, align 4, !tbaa !298
  %91 = or i32 %90, 1
  store i32 %91, ptr %89, align 4, !tbaa !298
  %92 = load ptr, ptr %74, align 8, !tbaa !156
  %93 = getelementptr inbounds %struct.BoidSettings, ptr %92, i64 0, i32 22
  call void @BLI_addtail(ptr noundef nonnull %93, ptr noundef %81) #14
  br label %107

94:                                               ; preds = %71
  %95 = getelementptr %struct.ParticleSettings, ptr %64, i64 0, i32 3
  %96 = load ptr, ptr %95, align 8, !tbaa !196
  %97 = icmp eq ptr %96, null
  br i1 %97, label %98, label %107

98:                                               ; preds = %94
  %99 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %100 = call ptr %99(i64 noundef 68, ptr noundef nonnull @.str.7) #14
  store ptr %100, ptr %95, align 8, !tbaa !196
  %101 = getelementptr inbounds %struct.SPHFluidSettings, ptr %100, i64 0, i32 4
  store float 0x3FB99999A0000000, ptr %101, align 4, !tbaa !299
  %102 = getelementptr inbounds %struct.SPHFluidSettings, ptr %100, i64 0, i32 7
  store <4 x float> <float 2.000000e+00, float 0x3FB99999A0000000, float 1.000000e+00, float 1.000000e+00>, ptr %102, align 4, !tbaa !79
  %103 = getelementptr inbounds %struct.SPHFluidSettings, ptr %100, i64 0, i32 11
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr %103, align 4, !tbaa !79
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0x3FB99999A0000000>, ptr %100, align 4, !tbaa !79
  %104 = getelementptr inbounds %struct.SPHFluidSettings, ptr %100, i64 0, i32 13
  %105 = load i32, ptr %104, align 4, !tbaa !202
  %106 = or i32 %105, 124
  store i32 %106, ptr %104, align 4, !tbaa !202
  br label %107

107:                                              ; preds = %98, %94, %77, %73, %71
  %108 = load ptr, ptr %24, align 8, !tbaa !87
  %109 = getelementptr inbounds %struct.ParticleSystem, ptr %108, i64 0, i32 3
  %110 = load ptr, ptr %109, align 8, !tbaa !35
  %111 = icmp eq ptr %110, null
  br i1 %111, label %214, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %struct.ParticleSystem, ptr %108, i64 0, i32 2
  %114 = load ptr, ptr %113, align 8, !tbaa !5
  %115 = icmp eq ptr %114, null
  br i1 %115, label %162, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %struct.ParticleSettings, ptr %114, i64 0, i32 11
  %118 = load i16, ptr %117, align 8, !tbaa !22
  %119 = icmp eq i16 %118, 3
  br i1 %119, label %120, label %162

120:                                              ; preds = %116
  %121 = getelementptr inbounds %struct.ParticleData, ptr %110, i64 0, i32 4
  %122 = load ptr, ptr %121, align 8, !tbaa !117
  %123 = icmp eq ptr %122, null
  br i1 %123, label %124, label %214

124:                                              ; preds = %120
  %125 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %126 = getelementptr inbounds %struct.ParticleSystem, ptr %108, i64 0, i32 26
  %127 = load i32, ptr %126, align 8, !tbaa !26
  %128 = sext i32 %127 to i64
  %129 = mul nsw i64 %128, 56
  %130 = call ptr %125(i64 noundef %129, ptr noundef nonnull @.str.4) #14
  %131 = load i32, ptr %126, align 8, !tbaa !26
  %132 = icmp sgt i32 %131, 0
  br i1 %132, label %133, label %214

133:                                              ; preds = %124
  %134 = load ptr, ptr %109, align 8, !tbaa !35
  %135 = and i32 %131, 7
  %136 = icmp ult i32 %131, 8
  br i1 %136, label %201, label %137

137:                                              ; preds = %133
  %138 = and i32 %131, -8
  br label %139

139:                                              ; preds = %139, %137
  %140 = phi ptr [ %134, %137 ], [ %159, %139 ]
  %141 = phi ptr [ %130, %137 ], [ %157, %139 ]
  %142 = phi i32 [ 0, %137 ], [ %160, %139 ]
  %143 = getelementptr inbounds %struct.BoidParticle, ptr %141, i64 1
  %144 = getelementptr inbounds %struct.ParticleData, ptr %140, i64 0, i32 4
  store ptr %141, ptr %144, align 8, !tbaa !117
  %145 = getelementptr inbounds %struct.BoidParticle, ptr %141, i64 2
  %146 = getelementptr inbounds %struct.ParticleData, ptr %140, i64 1, i32 4
  store ptr %143, ptr %146, align 8, !tbaa !117
  %147 = getelementptr inbounds %struct.BoidParticle, ptr %141, i64 3
  %148 = getelementptr inbounds %struct.ParticleData, ptr %140, i64 2, i32 4
  store ptr %145, ptr %148, align 8, !tbaa !117
  %149 = getelementptr inbounds %struct.BoidParticle, ptr %141, i64 4
  %150 = getelementptr inbounds %struct.ParticleData, ptr %140, i64 3, i32 4
  store ptr %147, ptr %150, align 8, !tbaa !117
  %151 = getelementptr inbounds %struct.BoidParticle, ptr %141, i64 5
  %152 = getelementptr inbounds %struct.ParticleData, ptr %140, i64 4, i32 4
  store ptr %149, ptr %152, align 8, !tbaa !117
  %153 = getelementptr inbounds %struct.BoidParticle, ptr %141, i64 6
  %154 = getelementptr inbounds %struct.ParticleData, ptr %140, i64 5, i32 4
  store ptr %151, ptr %154, align 8, !tbaa !117
  %155 = getelementptr inbounds %struct.BoidParticle, ptr %141, i64 7
  %156 = getelementptr inbounds %struct.ParticleData, ptr %140, i64 6, i32 4
  store ptr %153, ptr %156, align 8, !tbaa !117
  %157 = getelementptr inbounds %struct.BoidParticle, ptr %141, i64 8
  %158 = getelementptr inbounds %struct.ParticleData, ptr %140, i64 7, i32 4
  store ptr %155, ptr %158, align 8, !tbaa !117
  %159 = getelementptr inbounds %struct.ParticleData, ptr %140, i64 8
  %160 = add i32 %142, 8
  %161 = icmp eq i32 %160, %138
  br i1 %161, label %201, label %139, !llvm.loop !285

162:                                              ; preds = %116, %112
  %163 = getelementptr inbounds %struct.ParticleData, ptr %110, i64 0, i32 4
  %164 = load ptr, ptr %163, align 8, !tbaa !117
  %165 = icmp eq ptr %164, null
  br i1 %165, label %214, label %166

166:                                              ; preds = %162
  %167 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  call void %167(ptr noundef nonnull %164) #14
  %168 = getelementptr inbounds %struct.ParticleSystem, ptr %108, i64 0, i32 26
  %169 = load i32, ptr %168, align 8, !tbaa !26
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %214

171:                                              ; preds = %166
  %172 = load ptr, ptr %109, align 8, !tbaa !35
  %173 = and i32 %169, 7
  %174 = icmp ult i32 %169, 8
  br i1 %174, label %191, label %175

175:                                              ; preds = %171
  %176 = and i32 %169, -8
  br label %177

177:                                              ; preds = %177, %175
  %178 = phi ptr [ %172, %175 ], [ %188, %177 ]
  %179 = phi i32 [ 0, %175 ], [ %189, %177 ]
  %180 = getelementptr inbounds %struct.ParticleData, ptr %178, i64 0, i32 4
  store ptr null, ptr %180, align 8, !tbaa !117
  %181 = getelementptr inbounds %struct.ParticleData, ptr %178, i64 1, i32 4
  store ptr null, ptr %181, align 8, !tbaa !117
  %182 = getelementptr inbounds %struct.ParticleData, ptr %178, i64 2, i32 4
  store ptr null, ptr %182, align 8, !tbaa !117
  %183 = getelementptr inbounds %struct.ParticleData, ptr %178, i64 3, i32 4
  store ptr null, ptr %183, align 8, !tbaa !117
  %184 = getelementptr inbounds %struct.ParticleData, ptr %178, i64 4, i32 4
  store ptr null, ptr %184, align 8, !tbaa !117
  %185 = getelementptr inbounds %struct.ParticleData, ptr %178, i64 5, i32 4
  store ptr null, ptr %185, align 8, !tbaa !117
  %186 = getelementptr inbounds %struct.ParticleData, ptr %178, i64 6, i32 4
  store ptr null, ptr %186, align 8, !tbaa !117
  %187 = getelementptr inbounds %struct.ParticleData, ptr %178, i64 7, i32 4
  store ptr null, ptr %187, align 8, !tbaa !117
  %188 = getelementptr inbounds %struct.ParticleData, ptr %178, i64 8
  %189 = add i32 %179, 8
  %190 = icmp eq i32 %189, %176
  br i1 %190, label %191, label %177, !llvm.loop !286

191:                                              ; preds = %177, %171
  %192 = phi ptr [ %172, %171 ], [ %188, %177 ]
  %193 = icmp eq i32 %173, 0
  br i1 %193, label %214, label %194

194:                                              ; preds = %191, %194
  %195 = phi ptr [ %198, %194 ], [ %192, %191 ]
  %196 = phi i32 [ %199, %194 ], [ 0, %191 ]
  %197 = getelementptr inbounds %struct.ParticleData, ptr %195, i64 0, i32 4
  store ptr null, ptr %197, align 8, !tbaa !117
  %198 = getelementptr inbounds %struct.ParticleData, ptr %195, i64 1
  %199 = add i32 %196, 1
  %200 = icmp eq i32 %199, %173
  br i1 %200, label %214, label %194, !llvm.loop !300

201:                                              ; preds = %139, %133
  %202 = phi ptr [ %134, %133 ], [ %159, %139 ]
  %203 = phi ptr [ %130, %133 ], [ %157, %139 ]
  %204 = icmp eq i32 %135, 0
  br i1 %204, label %214, label %205

205:                                              ; preds = %201, %205
  %206 = phi ptr [ %211, %205 ], [ %202, %201 ]
  %207 = phi ptr [ %209, %205 ], [ %203, %201 ]
  %208 = phi i32 [ %212, %205 ], [ 0, %201 ]
  %209 = getelementptr inbounds %struct.BoidParticle, ptr %207, i64 1
  %210 = getelementptr inbounds %struct.ParticleData, ptr %206, i64 0, i32 4
  store ptr %207, ptr %210, align 8, !tbaa !117
  %211 = getelementptr inbounds %struct.ParticleData, ptr %206, i64 1
  %212 = add i32 %208, 1
  %213 = icmp eq i32 %212, %135
  br i1 %213, label %214, label %205, !llvm.loop !301

214:                                              ; preds = %201, %205, %191, %194, %107, %120, %124, %162, %166
  %215 = getelementptr inbounds %struct.ParticleSettings, ptr %10, i64 0, i32 7
  %216 = load i16, ptr %215, align 8, !tbaa !18
  %217 = sext i16 %216 to i32
  switch i32 %217, label %966 [
    i32 2, label %218
    i32 3, label %958
  ]

218:                                              ; preds = %214
  %219 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 26
  %220 = load i32, ptr %219, align 8, !tbaa !26
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %229

222:                                              ; preds = %218
  %223 = getelementptr inbounds %struct.ParticleSettings, ptr %10, i64 0, i32 63
  %224 = load i32, ptr %223, align 4, !tbaa !30
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %229

226:                                              ; preds = %222
  call void @psys_free_path_cache(ptr noundef nonnull %2, ptr noundef null) #14
  call void @free_hair(ptr noundef %1, ptr noundef nonnull %2, i32 noundef 0) #14
  %227 = load i32, ptr %48, align 4, !tbaa !21
  %228 = or i32 %227, 512
  store i32 %228, ptr %48, align 4, !tbaa !21
  br label %376

229:                                              ; preds = %222, %218
  %230 = load i32, ptr %48, align 4, !tbaa !21
  %231 = and i32 %230, 2048
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %374

233:                                              ; preds = %229
  %234 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 5
  %235 = load ptr, ptr %234, align 8, !tbaa !33
  %236 = icmp ne ptr %235, null
  br i1 %236, label %237, label %241

237:                                              ; preds = %233
  %238 = getelementptr inbounds %struct.PTCacheEdit, ptr %235, i64 0, i32 14
  %239 = load i32, ptr %238, align 4, !tbaa !302
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %376

241:                                              ; preds = %237, %233
  %242 = and i32 %230, 512
  %243 = icmp ne i32 %242, 0
  %244 = load i16, ptr %51, align 4, !tbaa !294
  %245 = and i16 %244, 16
  %246 = icmp eq i16 %245, 0
  %247 = select i1 %243, i1 %246, i1 false
  br i1 %247, label %248, label %255

248:                                              ; preds = %241
  %249 = load ptr, ptr %9, align 8, !tbaa !5
  %250 = getelementptr inbounds %struct.ParticleSettings, ptr %249, i64 0, i32 5
  %251 = load i32, ptr %250, align 8, !tbaa !222
  %252 = and i32 %251, 16
  %253 = icmp eq i32 %252, 0
  %254 = or i1 %236, %253
  br i1 %254, label %376, label %255

255:                                              ; preds = %241, %248
  call void @free_hair(ptr noundef %1, ptr noundef nonnull %2, i32 noundef 0) #14
  %256 = load ptr, ptr %234, align 8, !tbaa !33
  %257 = icmp eq ptr %256, null
  br i1 %257, label %263, label %258

258:                                              ; preds = %255
  %259 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 6
  %260 = load ptr, ptr %259, align 8, !tbaa !34
  %261 = icmp eq ptr %260, null
  br i1 %261, label %263, label %262

262:                                              ; preds = %258
  call void %260(ptr noundef nonnull %256) #14
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %234, i8 0, i64 16, i1 false)
  br label %263

263:                                              ; preds = %262, %258, %255
  %264 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 20
  store float 1.000000e+00, ptr %264, align 8, !tbaa !134
  %265 = getelementptr inbounds %struct.ParticleSettings, ptr %10, i64 0, i32 26
  %266 = load i16, ptr %265, align 2, !tbaa !305
  %267 = icmp slt i16 %266, 0
  br i1 %267, label %371, label %268

268:                                              ; preds = %263
  %269 = getelementptr inbounds %struct.ParticleSettings, ptr %10, i64 0, i32 5
  br label %270

270:                                              ; preds = %268, %366
  %271 = phi i32 [ 0, %268 ], [ %367, %366 ]
  %272 = sitofp i32 %271 to float
  %273 = fmul fast float %272, 1.000000e+02
  %274 = load ptr, ptr %9, align 8, !tbaa !5
  %275 = getelementptr inbounds %struct.ParticleSettings, ptr %274, i64 0, i32 26
  %276 = load i16, ptr %275, align 2, !tbaa !305
  %277 = sitofp i16 %276 to float
  %278 = fdiv fast float %273, %277
  %279 = load i32, ptr %269, align 8, !tbaa !222
  %280 = and i32 %279, 16
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %284

282:                                              ; preds = %270
  %283 = load ptr, ptr %46, align 8, !tbaa !293
  call void @BKE_animsys_evaluate_animdata(ptr noundef %0, ptr noundef nonnull %10, ptr noundef %283, float noundef nofpclass(nan inf) %278, i16 noundef signext 2) #14
  br label %284

284:                                              ; preds = %282, %270
  call fastcc void @system_step(ptr noundef nonnull %7, float noundef nofpclass(nan inf) %278)
  store float %278, ptr %264, align 8, !tbaa !134
  store i16 0, ptr %51, align 4, !tbaa !294
  %285 = load ptr, ptr %23, align 8, !tbaa !86
  %286 = load ptr, ptr %24, align 8, !tbaa !87
  %287 = getelementptr inbounds %struct.Object, ptr %285, i64 0, i32 50
  %288 = getelementptr inbounds %struct.Object, ptr %285, i64 0, i32 47
  %289 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %287, ptr noundef nonnull %288) #14
  %290 = call ptr @psys_create_lattice_deform_data(ptr noundef nonnull %7) #14
  %291 = getelementptr inbounds %struct.ParticleSystem, ptr %286, i64 0, i32 15
  store ptr %290, ptr %291, align 8, !tbaa !102
  %292 = getelementptr inbounds %struct.ParticleSystem, ptr %286, i64 0, i32 26
  %293 = load i32, ptr %292, align 8, !tbaa !26
  %294 = icmp sgt i32 %293, 0
  br i1 %294, label %295, label %366

295:                                              ; preds = %284
  %296 = getelementptr inbounds %struct.ParticleSystem, ptr %286, i64 0, i32 3
  %297 = load ptr, ptr %296, align 8, !tbaa !35
  %298 = getelementptr inbounds %struct.ParticleSystem, ptr %286, i64 0, i32 2
  br label %299

299:                                              ; preds = %361, %295
  %300 = phi i32 [ 0, %295 ], [ %362, %361 ]
  %301 = phi ptr [ %297, %295 ], [ %363, %361 ]
  %302 = getelementptr inbounds %struct.ParticleData, ptr %301, i64 0, i32 5
  %303 = load i32, ptr %302, align 8, !tbaa !306
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %309, label %305

305:                                              ; preds = %299
  %306 = getelementptr inbounds %struct.ParticleData, ptr %301, i64 0, i32 2
  %307 = load ptr, ptr %306, align 8, !tbaa !307
  %308 = icmp eq ptr %307, null
  br i1 %308, label %309, label %319

309:                                              ; preds = %305, %299
  %310 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %311 = load ptr, ptr %298, align 8, !tbaa !5
  %312 = getelementptr inbounds %struct.ParticleSettings, ptr %311, i64 0, i32 26
  %313 = load i16, ptr %312, align 2, !tbaa !305
  %314 = sext i16 %313 to i64
  %315 = mul nsw i64 %314, 24
  %316 = add nsw i64 %315, 24
  %317 = call ptr %310(i64 noundef %316, ptr noundef nonnull @.str.8) #14
  %318 = getelementptr inbounds %struct.ParticleData, ptr %301, i64 0, i32 2
  store ptr %317, ptr %318, align 8, !tbaa !307
  store i32 0, ptr %302, align 8, !tbaa !306
  br label %319

319:                                              ; preds = %309, %305
  %320 = phi i32 [ 0, %309 ], [ %303, %305 ]
  %321 = phi ptr [ %317, %309 ], [ %307, %305 ]
  %322 = sext i32 %320 to i64
  %323 = getelementptr inbounds %struct.HairKey, ptr %321, i64 %322
  %324 = load float, ptr %301, align 4, !tbaa !79
  store float %324, ptr %323, align 4, !tbaa !79
  %325 = getelementptr inbounds float, ptr %301, i64 1
  %326 = load float, ptr %325, align 4, !tbaa !79
  %327 = getelementptr inbounds float, ptr %323, i64 1
  store float %326, ptr %327, align 4, !tbaa !79
  %328 = getelementptr inbounds float, ptr %301, i64 2
  %329 = load float, ptr %328, align 4, !tbaa !79
  %330 = getelementptr inbounds float, ptr %323, i64 2
  store float %329, ptr %330, align 4, !tbaa !79
  call void @mul_m4_v3(ptr noundef nonnull %287, ptr noundef nonnull %323) #14
  %331 = load i32, ptr %302, align 8, !tbaa !306
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %345, label %333

333:                                              ; preds = %319
  %334 = load <2 x float>, ptr %321, align 4, !tbaa !79
  %335 = load <2 x float>, ptr %323, align 4, !tbaa !79
  %336 = fsub fast <2 x float> %335, %334
  store <2 x float> %336, ptr %323, align 4, !tbaa !79
  %337 = getelementptr inbounds float, ptr %321, i64 2
  %338 = load float, ptr %337, align 4, !tbaa !79
  %339 = load float, ptr %330, align 4, !tbaa !79
  %340 = fsub fast float %339, %338
  store float %340, ptr %330, align 4, !tbaa !79
  %341 = load ptr, ptr %26, align 8, !tbaa !120
  %342 = getelementptr inbounds %struct.ParticleSystemModifierData, ptr %341, i64 0, i32 2
  %343 = load ptr, ptr %342, align 8, !tbaa !82
  call void @psys_vec_rot_to_face(ptr noundef %343, ptr noundef nonnull %301, ptr noundef nonnull %323) #14
  %344 = load i32, ptr %302, align 8, !tbaa !306
  br label %345

345:                                              ; preds = %333, %319
  %346 = phi i32 [ %344, %333 ], [ 0, %319 ]
  %347 = getelementptr inbounds %struct.ParticleKey, ptr %301, i64 0, i32 4
  %348 = load float, ptr %347, align 4, !tbaa !174
  %349 = getelementptr inbounds %struct.HairKey, ptr %321, i64 %322, i32 1
  store float %348, ptr %349, align 4, !tbaa !308
  %350 = fmul fast float %348, 0x3F847AE140000000
  %351 = fsub fast float 1.000000e+00, %350
  %352 = getelementptr inbounds %struct.HairKey, ptr %321, i64 %322, i32 2
  store float %351, ptr %352, align 4, !tbaa !310
  %353 = add nsw i32 %346, 1
  store i32 %353, ptr %302, align 8, !tbaa !306
  %354 = load ptr, ptr %298, align 8, !tbaa !5
  %355 = getelementptr inbounds %struct.ParticleSettings, ptr %354, i64 0, i32 26
  %356 = load i16, ptr %355, align 2, !tbaa !305
  %357 = sext i16 %356 to i32
  %358 = icmp eq i32 %346, %357
  br i1 %358, label %359, label %361

359:                                              ; preds = %345
  store <2 x float> zeroinitializer, ptr %321, align 4, !tbaa !79
  %360 = getelementptr inbounds float, ptr %321, i64 2
  store float 0.000000e+00, ptr %360, align 4, !tbaa !79
  br label %361

361:                                              ; preds = %359, %345
  %362 = add nuw nsw i32 %300, 1
  %363 = getelementptr inbounds %struct.ParticleData, ptr %301, i64 1
  %364 = load i32, ptr %292, align 8, !tbaa !26
  %365 = icmp slt i32 %362, %364
  br i1 %365, label %299, label %366, !llvm.loop !311

366:                                              ; preds = %361, %284
  %367 = add nuw nsw i32 %271, 1
  %368 = load i16, ptr %265, align 2, !tbaa !305
  %369 = sext i16 %368 to i32
  %370 = icmp slt i32 %271, %369
  br i1 %370, label %270, label %371, !llvm.loop !312

371:                                              ; preds = %366, %263
  %372 = load i32, ptr %48, align 4, !tbaa !21
  %373 = or i32 %372, 512
  store i32 %373, ptr %48, align 4, !tbaa !21
  store i16 %244, ptr %51, align 4, !tbaa !294
  br label %376

374:                                              ; preds = %229
  %375 = or i32 %230, 512
  store i32 %375, ptr %48, align 4, !tbaa !21
  br label %376

376:                                              ; preds = %237, %248, %371, %374, %226
  %377 = phi i32 [ %230, %237 ], [ %230, %248 ], [ %373, %371 ], [ %375, %374 ], [ %228, %226 ]
  %378 = and i32 %377, 512
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %1422, label %380

380:                                              ; preds = %376
  %381 = load ptr, ptr %24, align 8, !tbaa !87
  %382 = getelementptr inbounds %struct.ParticleSystem, ptr %381, i64 0, i32 2
  %383 = load ptr, ptr %382, align 8, !tbaa !5
  %384 = getelementptr inbounds %struct.ParticleSystem, ptr %381, i64 0, i32 39
  %385 = load ptr, ptr %384, align 8, !tbaa !14
  %386 = icmp eq ptr %385, null
  br i1 %386, label %411, label %387

387:                                              ; preds = %380
  %388 = getelementptr inbounds %struct.ParticleSystem, ptr %381, i64 0, i32 40
  %389 = load ptr, ptr %388, align 8, !tbaa !15
  %390 = getelementptr inbounds %struct.PointCache, ptr %389, i64 0, i32 2
  %391 = load i32, ptr %390, align 8, !tbaa !16
  %392 = and i32 %391, 1
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %431

394:                                              ; preds = %387
  %395 = getelementptr inbounds %struct.ParticleSettings, ptr %383, i64 0, i32 7
  %396 = load i16, ptr %395, align 8, !tbaa !18
  %397 = icmp eq i16 %396, 2
  br i1 %397, label %398, label %402

398:                                              ; preds = %394
  %399 = getelementptr inbounds %struct.ParticleSystem, ptr %381, i64 0, i32 25
  %400 = load i32, ptr %399, align 4, !tbaa !21
  %401 = and i32 %400, 4
  br label %408

402:                                              ; preds = %394
  %403 = getelementptr inbounds %struct.ParticleSettings, ptr %383, i64 0, i32 11
  %404 = load i16, ptr %403, align 8, !tbaa !22
  switch i16 %404, label %405 [
    i16 1, label %411
    i16 3, label %411
  ]

405:                                              ; preds = %402
  %406 = icmp eq i16 %404, 4
  %407 = zext i1 %406 to i32
  br label %408

408:                                              ; preds = %405, %398
  %409 = phi i32 [ %401, %398 ], [ %407, %405 ]
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %431, label %411

411:                                              ; preds = %408, %402, %402, %380
  %412 = getelementptr inbounds %struct.ParticleSettings, ptr %383, i64 0, i32 89
  %413 = load i32, ptr %412, align 4, !tbaa !23
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %419, label %415

415:                                              ; preds = %411
  %416 = getelementptr inbounds %struct.ParticleSettings, ptr %383, i64 0, i32 19
  %417 = load i16, ptr %416, align 4, !tbaa !24
  %418 = icmp eq i16 %417, 0
  br i1 %418, label %419, label %431

419:                                              ; preds = %415, %411
  %420 = getelementptr inbounds %struct.ParticleSystem, ptr %381, i64 0, i32 40
  %421 = load ptr, ptr %420, align 8, !tbaa !15
  %422 = getelementptr inbounds %struct.PointCache, ptr %421, i64 0, i32 2
  %423 = load i32, ptr %422, align 8, !tbaa !16
  %424 = and i32 %423, 8
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %426, label %431

426:                                              ; preds = %419
  %427 = getelementptr inbounds %struct.ParticleSettings, ptr %383, i64 0, i32 30
  %428 = load i16, ptr %427, align 2, !tbaa !25
  %429 = sitofp i16 %428 to float
  %430 = fmul fast float %429, 0x3F847AE140000000
  br label %431

431:                                              ; preds = %426, %419, %415, %408, %387
  %432 = phi float [ %430, %426 ], [ 1.000000e+00, %419 ], [ 1.000000e+00, %415 ], [ 1.000000e+00, %408 ], [ 1.000000e+00, %387 ]
  %433 = getelementptr inbounds %struct.ParticleSystem, ptr %381, i64 0, i32 3
  %434 = getelementptr inbounds %struct.ParticleSystem, ptr %381, i64 0, i32 26
  %435 = load i32, ptr %434, align 8, !tbaa !26
  %436 = icmp sgt i32 %435, 0
  br i1 %436, label %437, label %538

437:                                              ; preds = %431
  %438 = load ptr, ptr %433, align 8, !tbaa !35
  %439 = getelementptr inbounds %struct.ParticleSettings, ptr %383, i64 0, i32 82
  %440 = load float, ptr %439, align 8, !tbaa !238
  %441 = getelementptr inbounds %struct.ParticleSettings, ptr %383, i64 0, i32 83
  %442 = load float, ptr %441, align 4, !tbaa !313
  %443 = fcmp fast ogt float %442, 0.000000e+00
  %444 = getelementptr i8, ptr %381, i64 308
  %445 = load i32, ptr %444, align 4, !tbaa !124
  %446 = srem i32 %445, 1024
  %447 = sext i32 %446 to i64
  %448 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %447
  %449 = load i32, ptr %448, align 4, !tbaa !68
  %450 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %447
  %451 = load i32, ptr %450, align 4, !tbaa !68
  br i1 %443, label %457, label %452

452:                                              ; preds = %437
  %453 = and i32 %435, 1
  %454 = icmp eq i32 %435, 1
  br i1 %454, label %520, label %455

455:                                              ; preds = %452
  %456 = and i32 %435, -2
  br label %485

457:                                              ; preds = %437, %457
  %458 = phi ptr [ %483, %457 ], [ %438, %437 ]
  %459 = phi i32 [ %461, %457 ], [ 0, %437 ]
  %460 = getelementptr inbounds %struct.ParticleData, ptr %458, i64 0, i32 13
  store float %440, ptr %460, align 4, !tbaa !205
  %461 = add nuw nsw i32 %459, 1
  %462 = mul i32 %461, %451
  %463 = add i32 %462, %449
  %464 = and i32 %463, 1023
  %465 = zext i32 %464 to i64
  %466 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %465
  %467 = load float, ptr %466, align 4, !tbaa !79
  %468 = fmul fast float %467, %442
  %469 = fsub fast float 1.000000e+00, %468
  %470 = fmul fast float %469, %440
  store float %470, ptr %460, align 4, !tbaa !205
  %471 = mul i32 %459, %451
  %472 = add i32 %471, %449
  %473 = and i32 %472, 1023
  %474 = zext i32 %473 to i64
  %475 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %474
  %476 = load float, ptr %475, align 4, !tbaa !79
  %477 = fcmp fast ogt float %476, %432
  %478 = getelementptr inbounds %struct.ParticleData, ptr %458, i64 0, i32 17
  %479 = load i16, ptr %478, align 4, !tbaa !36
  %480 = and i16 %479, -3
  %481 = select i1 %477, i16 2, i16 0
  %482 = or i16 %480, %481
  store i16 %482, ptr %478, align 4, !tbaa !36
  %483 = getelementptr inbounds %struct.ParticleData, ptr %458, i64 1
  %484 = icmp eq i32 %461, %435
  br i1 %484, label %538, label %457, !llvm.loop !314

485:                                              ; preds = %485, %455
  %486 = phi ptr [ %438, %455 ], [ %517, %485 ]
  %487 = phi i32 [ 0, %455 ], [ %516, %485 ]
  %488 = phi i32 [ 0, %455 ], [ %518, %485 ]
  %489 = getelementptr inbounds %struct.ParticleData, ptr %486, i64 0, i32 13
  store float %440, ptr %489, align 4, !tbaa !205
  %490 = mul i32 %487, %451
  %491 = add i32 %490, %449
  %492 = and i32 %491, 1023
  %493 = zext i32 %492 to i64
  %494 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %493
  %495 = load float, ptr %494, align 4, !tbaa !79
  %496 = fcmp fast ogt float %495, %432
  %497 = getelementptr inbounds %struct.ParticleData, ptr %486, i64 0, i32 17
  %498 = load i16, ptr %497, align 4, !tbaa !36
  %499 = and i16 %498, -3
  %500 = select i1 %496, i16 2, i16 0
  %501 = or i16 %499, %500
  store i16 %501, ptr %497, align 4, !tbaa !36
  %502 = or i32 %487, 1
  %503 = getelementptr inbounds %struct.ParticleData, ptr %486, i64 1, i32 13
  store float %440, ptr %503, align 4, !tbaa !205
  %504 = mul i32 %502, %451
  %505 = add i32 %504, %449
  %506 = and i32 %505, 1023
  %507 = zext i32 %506 to i64
  %508 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %507
  %509 = load float, ptr %508, align 4, !tbaa !79
  %510 = fcmp fast ogt float %509, %432
  %511 = getelementptr inbounds %struct.ParticleData, ptr %486, i64 1, i32 17
  %512 = load i16, ptr %511, align 4, !tbaa !36
  %513 = and i16 %512, -3
  %514 = select i1 %510, i16 2, i16 0
  %515 = or i16 %513, %514
  store i16 %515, ptr %511, align 4, !tbaa !36
  %516 = add nuw nsw i32 %487, 2
  %517 = getelementptr inbounds %struct.ParticleData, ptr %486, i64 2
  %518 = add i32 %488, 2
  %519 = icmp eq i32 %518, %456
  br i1 %519, label %520, label %485, !llvm.loop !314

520:                                              ; preds = %485, %452
  %521 = phi ptr [ %438, %452 ], [ %517, %485 ]
  %522 = phi i32 [ 0, %452 ], [ %516, %485 ]
  %523 = icmp eq i32 %453, 0
  br i1 %523, label %538, label %524

524:                                              ; preds = %520
  %525 = getelementptr inbounds %struct.ParticleData, ptr %521, i64 0, i32 13
  store float %440, ptr %525, align 4, !tbaa !205
  %526 = mul i32 %522, %451
  %527 = add i32 %526, %449
  %528 = and i32 %527, 1023
  %529 = zext i32 %528 to i64
  %530 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %529
  %531 = load float, ptr %530, align 4, !tbaa !79
  %532 = fcmp fast ogt float %531, %432
  %533 = getelementptr inbounds %struct.ParticleData, ptr %521, i64 0, i32 17
  %534 = load i16, ptr %533, align 4, !tbaa !36
  %535 = and i16 %534, -3
  %536 = select i1 %532, i16 2, i16 0
  %537 = or i16 %535, %536
  store i16 %537, ptr %533, align 4, !tbaa !36
  br label %538

538:                                              ; preds = %524, %520, %457, %431
  %539 = getelementptr inbounds %struct.ParticleSystem, ptr %381, i64 0, i32 31
  %540 = load i16, ptr %539, align 4, !tbaa !294
  %541 = and i16 %540, 16
  %542 = icmp eq i16 %541, 0
  br i1 %542, label %552, label %543

543:                                              ; preds = %538
  %544 = load ptr, ptr %23, align 8, !tbaa !86
  %545 = load ptr, ptr %26, align 8, !tbaa !120
  %546 = getelementptr inbounds %struct.ParticleSystemModifierData, ptr %545, i64 0, i32 2
  %547 = load ptr, ptr %546, align 8, !tbaa !82
  call void @psys_calc_dmcache(ptr noundef %544, ptr noundef %547, ptr noundef nonnull %381)
  %548 = getelementptr inbounds %struct.ParticleSystem, ptr %381, i64 0, i32 11
  %549 = load ptr, ptr %548, align 8, !tbaa !315
  %550 = icmp eq ptr %549, null
  br i1 %550, label %552, label %551

551:                                              ; preds = %543
  call void @cloth_free_modifier(ptr noundef nonnull %549) #14
  br label %552

552:                                              ; preds = %551, %543, %538
  %553 = load ptr, ptr %382, align 8, !tbaa !5
  %554 = getelementptr inbounds %struct.ParticleSettings, ptr %553, i64 0, i32 7
  %555 = load i16, ptr %554, align 8, !tbaa !18
  %556 = icmp eq i16 %555, 2
  br i1 %556, label %557, label %942

557:                                              ; preds = %552
  %558 = getelementptr inbounds %struct.ParticleSystem, ptr %381, i64 0, i32 25
  %559 = load i32, ptr %558, align 4, !tbaa !21
  %560 = and i32 %559, 4
  %561 = icmp eq i32 %560, 0
  br i1 %561, label %942, label %562

562:                                              ; preds = %557
  %563 = load ptr, ptr %433, align 8, !tbaa !35
  %564 = icmp eq ptr %563, null
  br i1 %564, label %942, label %565

565:                                              ; preds = %562
  %566 = load ptr, ptr %24, align 8, !tbaa !87
  %567 = getelementptr inbounds %struct.ParticleSystem, ptr %566, i64 0, i32 12
  %568 = load ptr, ptr %567, align 8, !tbaa !316
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %5) #14
  %569 = getelementptr inbounds %struct.ParticleSystem, ptr %566, i64 0, i32 11
  %570 = load ptr, ptr %569, align 8, !tbaa !315
  %571 = icmp eq ptr %570, null
  br i1 %571, label %572, label %586

572:                                              ; preds = %565
  %573 = call ptr @modifier_new(i32 noundef 22) #14
  store ptr %573, ptr %569, align 8, !tbaa !315
  %574 = getelementptr inbounds %struct.ClothModifierData, ptr %573, i64 0, i32 3
  %575 = load ptr, ptr %574, align 8, !tbaa !317
  %576 = getelementptr inbounds %struct.ClothSimSettings, ptr %575, i64 0, i32 21
  store float 0.000000e+00, ptr %576, align 8, !tbaa !319
  %577 = getelementptr inbounds %struct.ClothSimSettings, ptr %575, i64 0, i32 25
  store float 1.000000e+00, ptr %577, align 8, !tbaa !321
  %578 = getelementptr inbounds %struct.ClothSimSettings, ptr %575, i64 0, i32 29
  %579 = load i32, ptr %578, align 8, !tbaa !322
  %580 = or i32 %579, 8200
  store i32 %580, ptr %578, align 8, !tbaa !322
  %581 = getelementptr inbounds %struct.ClothModifierData, ptr %573, i64 0, i32 4
  %582 = load ptr, ptr %581, align 8, !tbaa !323
  %583 = getelementptr inbounds %struct.ClothCollSettings, ptr %582, i64 0, i32 7
  %584 = load i32, ptr %583, align 8, !tbaa !324
  %585 = and i32 %584, -5
  store i32 %585, ptr %583, align 8, !tbaa !324
  br label %586

586:                                              ; preds = %572, %565
  %587 = getelementptr inbounds %struct.ParticleSystem, ptr %566, i64 0, i32 3
  %588 = getelementptr inbounds %struct.ParticleSystem, ptr %566, i64 0, i32 26
  %589 = load i32, ptr %588, align 8, !tbaa !26
  %590 = icmp sgt i32 %589, 0
  br i1 %590, label %591, label %727

591:                                              ; preds = %586
  %592 = load ptr, ptr %587, align 8, !tbaa !35
  %593 = zext i32 %589 to i64
  %594 = icmp ult i32 %589, 16
  br i1 %594, label %713, label %595

595:                                              ; preds = %591
  %596 = and i64 %593, 4294967280
  %597 = trunc i64 %596 to i32
  %598 = mul nuw nsw i64 %596, 200
  %599 = getelementptr i8, ptr %592, i64 %598
  %600 = getelementptr %struct.ParticleData, ptr %592, i64 0, i32 5
  %601 = getelementptr %struct.ParticleData, ptr %592, i64 0, i32 5
  %602 = getelementptr %struct.ParticleData, ptr %592, i64 0, i32 5
  %603 = getelementptr %struct.ParticleData, ptr %592, i64 0, i32 5
  %604 = getelementptr %struct.ParticleData, ptr %592, i64 0, i32 5
  %605 = getelementptr %struct.ParticleData, ptr %592, i64 0, i32 5
  %606 = getelementptr %struct.ParticleData, ptr %592, i64 0, i32 5
  %607 = getelementptr %struct.ParticleData, ptr %592, i64 0, i32 5
  %608 = getelementptr %struct.ParticleData, ptr %592, i64 0, i32 5
  %609 = getelementptr %struct.ParticleData, ptr %592, i64 0, i32 5
  %610 = getelementptr %struct.ParticleData, ptr %592, i64 0, i32 5
  %611 = getelementptr %struct.ParticleData, ptr %592, i64 0, i32 5
  %612 = getelementptr %struct.ParticleData, ptr %592, i64 0, i32 5
  %613 = getelementptr %struct.ParticleData, ptr %592, i64 0, i32 5
  %614 = getelementptr %struct.ParticleData, ptr %592, i64 0, i32 5
  %615 = getelementptr %struct.ParticleData, ptr %592, i64 0, i32 5
  br label %616

616:                                              ; preds = %616, %595
  %617 = phi i64 [ 0, %595 ], [ %705, %616 ]
  %618 = phi <4 x i32> [ zeroinitializer, %595 ], [ %701, %616 ]
  %619 = phi <4 x i32> [ zeroinitializer, %595 ], [ %702, %616 ]
  %620 = phi <4 x i32> [ zeroinitializer, %595 ], [ %703, %616 ]
  %621 = phi <4 x i32> [ zeroinitializer, %595 ], [ %704, %616 ]
  %622 = mul i64 %617, 200
  %623 = mul i64 %617, 200
  %624 = add i64 %623, 200
  %625 = mul i64 %617, 200
  %626 = add i64 %625, 400
  %627 = mul i64 %617, 200
  %628 = add i64 %627, 600
  %629 = mul i64 %617, 200
  %630 = add i64 %629, 800
  %631 = mul i64 %617, 200
  %632 = add i64 %631, 1000
  %633 = mul i64 %617, 200
  %634 = add i64 %633, 1200
  %635 = mul i64 %617, 200
  %636 = add i64 %635, 1400
  %637 = mul i64 %617, 200
  %638 = add i64 %637, 1600
  %639 = mul i64 %617, 200
  %640 = add i64 %639, 1800
  %641 = mul i64 %617, 200
  %642 = add i64 %641, 2000
  %643 = mul i64 %617, 200
  %644 = add i64 %643, 2200
  %645 = mul i64 %617, 200
  %646 = add i64 %645, 2400
  %647 = mul i64 %617, 200
  %648 = add i64 %647, 2600
  %649 = mul i64 %617, 200
  %650 = add i64 %649, 2800
  %651 = mul i64 %617, 200
  %652 = add i64 %651, 3000
  %653 = getelementptr i8, ptr %600, i64 %622
  %654 = getelementptr i8, ptr %601, i64 %624
  %655 = getelementptr i8, ptr %602, i64 %626
  %656 = getelementptr i8, ptr %603, i64 %628
  %657 = getelementptr i8, ptr %604, i64 %630
  %658 = getelementptr i8, ptr %605, i64 %632
  %659 = getelementptr i8, ptr %606, i64 %634
  %660 = getelementptr i8, ptr %607, i64 %636
  %661 = getelementptr i8, ptr %608, i64 %638
  %662 = getelementptr i8, ptr %609, i64 %640
  %663 = getelementptr i8, ptr %610, i64 %642
  %664 = getelementptr i8, ptr %611, i64 %644
  %665 = getelementptr i8, ptr %612, i64 %646
  %666 = getelementptr i8, ptr %613, i64 %648
  %667 = getelementptr i8, ptr %614, i64 %650
  %668 = getelementptr i8, ptr %615, i64 %652
  %669 = load i32, ptr %653, align 8, !tbaa !306
  %670 = load i32, ptr %654, align 8, !tbaa !306
  %671 = load i32, ptr %655, align 8, !tbaa !306
  %672 = load i32, ptr %656, align 8, !tbaa !306
  %673 = insertelement <4 x i32> poison, i32 %669, i64 0
  %674 = insertelement <4 x i32> %673, i32 %670, i64 1
  %675 = insertelement <4 x i32> %674, i32 %671, i64 2
  %676 = insertelement <4 x i32> %675, i32 %672, i64 3
  %677 = load i32, ptr %657, align 8, !tbaa !306
  %678 = load i32, ptr %658, align 8, !tbaa !306
  %679 = load i32, ptr %659, align 8, !tbaa !306
  %680 = load i32, ptr %660, align 8, !tbaa !306
  %681 = insertelement <4 x i32> poison, i32 %677, i64 0
  %682 = insertelement <4 x i32> %681, i32 %678, i64 1
  %683 = insertelement <4 x i32> %682, i32 %679, i64 2
  %684 = insertelement <4 x i32> %683, i32 %680, i64 3
  %685 = load i32, ptr %661, align 8, !tbaa !306
  %686 = load i32, ptr %662, align 8, !tbaa !306
  %687 = load i32, ptr %663, align 8, !tbaa !306
  %688 = load i32, ptr %664, align 8, !tbaa !306
  %689 = insertelement <4 x i32> poison, i32 %685, i64 0
  %690 = insertelement <4 x i32> %689, i32 %686, i64 1
  %691 = insertelement <4 x i32> %690, i32 %687, i64 2
  %692 = insertelement <4 x i32> %691, i32 %688, i64 3
  %693 = load i32, ptr %665, align 8, !tbaa !306
  %694 = load i32, ptr %666, align 8, !tbaa !306
  %695 = load i32, ptr %667, align 8, !tbaa !306
  %696 = load i32, ptr %668, align 8, !tbaa !306
  %697 = insertelement <4 x i32> poison, i32 %693, i64 0
  %698 = insertelement <4 x i32> %697, i32 %694, i64 1
  %699 = insertelement <4 x i32> %698, i32 %695, i64 2
  %700 = insertelement <4 x i32> %699, i32 %696, i64 3
  %701 = add <4 x i32> %676, %618
  %702 = add <4 x i32> %684, %619
  %703 = add <4 x i32> %692, %620
  %704 = add <4 x i32> %700, %621
  %705 = add nuw i64 %617, 16
  %706 = icmp eq i64 %705, %596
  br i1 %706, label %707, label %616, !llvm.loop !326

707:                                              ; preds = %616
  %708 = add <4 x i32> %702, %701
  %709 = add <4 x i32> %703, %708
  %710 = add <4 x i32> %704, %709
  %711 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %710)
  %712 = icmp eq i64 %596, %593
  br i1 %712, label %727, label %713

713:                                              ; preds = %591, %707
  %714 = phi i32 [ 0, %591 ], [ %711, %707 ]
  %715 = phi i32 [ 0, %591 ], [ %597, %707 ]
  %716 = phi ptr [ %592, %591 ], [ %599, %707 ]
  br label %717

717:                                              ; preds = %713, %717
  %718 = phi i32 [ %723, %717 ], [ %714, %713 ]
  %719 = phi i32 [ %724, %717 ], [ %715, %713 ]
  %720 = phi ptr [ %725, %717 ], [ %716, %713 ]
  %721 = getelementptr inbounds %struct.ParticleData, ptr %720, i64 0, i32 5
  %722 = load i32, ptr %721, align 8, !tbaa !306
  %723 = add nsw i32 %722, %718
  %724 = add nuw nsw i32 %719, 1
  %725 = getelementptr inbounds %struct.ParticleData, ptr %720, i64 1
  %726 = icmp eq i32 %724, %589
  br i1 %726, label %727, label %717, !llvm.loop !329

727:                                              ; preds = %717, %707, %586
  %728 = phi i32 [ 0, %586 ], [ %711, %707 ], [ %723, %717 ]
  %729 = add nsw i32 %728, %589
  %730 = icmp eq ptr %568, null
  br i1 %730, label %744, label %731

731:                                              ; preds = %727
  %732 = getelementptr inbounds %struct.DerivedMesh, ptr %568, i64 0, i32 23
  %733 = load ptr, ptr %732, align 8, !tbaa !57
  %734 = call i32 %733(ptr noundef nonnull %568) #14
  %735 = icmp eq i32 %729, %734
  br i1 %735, label %736, label %741

736:                                              ; preds = %731
  %737 = getelementptr inbounds %struct.DerivedMesh, ptr %568, i64 0, i32 24
  %738 = load ptr, ptr %737, align 8, !tbaa !330
  %739 = call i32 %738(ptr noundef nonnull %568) #14
  %740 = icmp eq i32 %728, %739
  br i1 %740, label %746, label %741

741:                                              ; preds = %736, %731
  %742 = getelementptr inbounds %struct.DerivedMesh, ptr %568, i64 0, i32 95
  %743 = load ptr, ptr %742, align 8, !tbaa !331
  call void %743(ptr noundef nonnull %568) #14
  store ptr null, ptr %567, align 8, !tbaa !316
  br label %744

744:                                              ; preds = %741, %727
  %745 = call ptr @CDDM_new(i32 noundef %729, i32 noundef %728, i32 noundef 0, i32 noundef 0, i32 noundef 0) #14
  store ptr %745, ptr %567, align 8, !tbaa !316
  call void @DM_add_vert_layer(ptr noundef %745, i32 noundef 2, i32 noundef 1, ptr noundef null) #14
  br label %746

746:                                              ; preds = %744, %736
  %747 = phi ptr [ %745, %744 ], [ %568, %736 ]
  %748 = call ptr @CDDM_get_verts(ptr noundef %747) #14
  %749 = call ptr @CDDM_get_edges(ptr noundef %747) #14
  %750 = call ptr @DM_get_vert_data_layer(ptr noundef %747, i32 noundef 2) #14
  %751 = load ptr, ptr %569, align 8, !tbaa !315
  %752 = getelementptr inbounds %struct.ClothModifierData, ptr %751, i64 0, i32 3
  %753 = load ptr, ptr %752, align 8, !tbaa !317
  %754 = getelementptr inbounds %struct.ClothSimSettings, ptr %753, i64 0, i32 34
  store i16 1, ptr %754, align 8, !tbaa !332
  %755 = load ptr, ptr %587, align 8, !tbaa !35
  %756 = getelementptr inbounds %struct.ParticleData, ptr %755, i64 0, i32 16
  store i32 1, ptr %756, align 8, !tbaa !116
  %757 = load i32, ptr %588, align 8, !tbaa !26
  %758 = icmp sgt i32 %757, 0
  br i1 %758, label %759, label %904

759:                                              ; preds = %746
  %760 = getelementptr inbounds %struct.ParticleSystem, ptr %566, i64 0, i32 2
  br label %761

761:                                              ; preds = %896, %759
  %762 = phi ptr [ %748, %759 ], [ %899, %896 ]
  %763 = phi i32 [ 0, %759 ], [ %900, %896 ]
  %764 = phi ptr [ %755, %759 ], [ %901, %896 ]
  %765 = phi ptr [ %750, %759 ], [ %898, %896 ]
  %766 = phi ptr [ %749, %759 ], [ %897, %896 ]
  %767 = icmp eq i32 %763, 0
  br i1 %767, label %776, label %768

768:                                              ; preds = %761
  %769 = getelementptr %struct.ParticleData, ptr %764, i64 -1, i32 16
  %770 = load i32, ptr %769, align 8, !tbaa !116
  %771 = getelementptr %struct.ParticleData, ptr %764, i64 -1, i32 5
  %772 = load i32, ptr %771, align 8, !tbaa !306
  %773 = add i32 %770, 1
  %774 = add i32 %773, %772
  %775 = getelementptr inbounds %struct.ParticleData, ptr %764, i64 0, i32 16
  store i32 %774, ptr %775, align 8, !tbaa !116
  br label %776

776:                                              ; preds = %768, %761
  %777 = load ptr, ptr %23, align 8, !tbaa !86
  %778 = load ptr, ptr %26, align 8, !tbaa !120
  %779 = getelementptr inbounds %struct.ParticleSystemModifierData, ptr %778, i64 0, i32 2
  %780 = load ptr, ptr %779, align 8, !tbaa !82
  %781 = load ptr, ptr %760, align 8, !tbaa !5
  %782 = getelementptr inbounds %struct.ParticleSettings, ptr %781, i64 0, i32 8
  %783 = load i16, ptr %782, align 2, !tbaa !28
  call void @psys_mat_hair_to_object(ptr noundef %777, ptr noundef %780, i16 noundef signext %783, ptr noundef nonnull %764, ptr noundef nonnull %5) #14
  %784 = getelementptr inbounds %struct.ParticleData, ptr %764, i64 0, i32 5
  %785 = load i32, ptr %784, align 8, !tbaa !306
  %786 = icmp sgt i32 %785, 0
  br i1 %786, label %787, label %896

787:                                              ; preds = %776
  %788 = getelementptr inbounds %struct.ParticleData, ptr %764, i64 0, i32 2
  %789 = load ptr, ptr %788, align 8, !tbaa !307
  %790 = getelementptr inbounds %struct.ParticleData, ptr %764, i64 0, i32 16
  %791 = getelementptr inbounds %struct.HairKey, ptr %789, i64 1
  %792 = load float, ptr %789, align 4, !tbaa !79
  %793 = load float, ptr %791, align 4, !tbaa !79
  %794 = getelementptr inbounds float, ptr %789, i64 1
  %795 = getelementptr inbounds %struct.HairKey, ptr %789, i64 1, i32 0, i64 1
  %796 = getelementptr inbounds float, ptr %789, i64 2
  %797 = getelementptr inbounds float, ptr %762, i64 1
  %798 = fmul fast float %792, 2.000000e+00
  %799 = fsub fast float %798, %793
  %800 = load <2 x float>, ptr %794, align 4, !tbaa !79
  %801 = load <2 x float>, ptr %795, align 4, !tbaa !79
  %802 = fsub fast <2 x float> %800, %801
  store float %792, ptr %762, align 4, !tbaa !79
  %803 = load float, ptr %794, align 4, !tbaa !79
  store float %803, ptr %797, align 4, !tbaa !79
  %804 = load float, ptr %796, align 4, !tbaa !79
  store float %799, ptr %762, align 4, !tbaa !79
  %805 = insertelement <2 x float> poison, float %803, i64 0
  %806 = insertelement <2 x float> %805, float %804, i64 1
  %807 = fadd fast <2 x float> %802, %806
  store <2 x float> %807, ptr %797, align 4, !tbaa !79
  call void @mul_m4_v3(ptr noundef nonnull %5, ptr noundef nonnull %762) #14
  %808 = getelementptr inbounds %struct.MVert, ptr %762, i64 1
  %809 = load i32, ptr %790, align 8, !tbaa !116
  %810 = add nsw i32 %809, -1
  store i32 %810, ptr %766, align 4, !tbaa !333
  %811 = getelementptr inbounds %struct.MEdge, ptr %766, i64 0, i32 1
  store i32 %809, ptr %811, align 4, !tbaa !335
  %812 = getelementptr inbounds %struct.MEdge, ptr %766, i64 1
  %813 = icmp eq ptr %765, null
  br i1 %813, label %827, label %814

814:                                              ; preds = %787
  %815 = getelementptr inbounds %struct.MDeformVert, ptr %765, i64 0, i32 1
  %816 = load i32, ptr %815, align 8, !tbaa !336
  %817 = icmp eq i32 %816, 0
  br i1 %817, label %820, label %818

818:                                              ; preds = %814
  %819 = load ptr, ptr %765, align 8, !tbaa !338
  br label %823

820:                                              ; preds = %814
  %821 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %822 = call ptr %821(i64 noundef 8, ptr noundef nonnull @.str.9) #14
  store ptr %822, ptr %765, align 8, !tbaa !338
  store i32 1, ptr %815, align 8, !tbaa !336
  br label %823

823:                                              ; preds = %820, %818
  %824 = phi ptr [ %819, %818 ], [ %822, %820 ]
  %825 = getelementptr inbounds %struct.MDeformWeight, ptr %824, i64 0, i32 1
  store float 1.000000e+00, ptr %825, align 4, !tbaa !339
  %826 = getelementptr inbounds %struct.MDeformVert, ptr %765, i64 1
  br label %827

827:                                              ; preds = %823, %787
  %828 = phi ptr [ %826, %823 ], [ null, %787 ]
  %829 = load float, ptr %789, align 4, !tbaa !79
  store float %829, ptr %808, align 4, !tbaa !79
  %830 = load float, ptr %794, align 4, !tbaa !79
  %831 = getelementptr inbounds %struct.MVert, ptr %762, i64 1, i32 0, i64 1
  store float %830, ptr %831, align 4, !tbaa !79
  %832 = load float, ptr %796, align 4, !tbaa !79
  %833 = getelementptr inbounds %struct.MVert, ptr %762, i64 1, i32 0, i64 2
  store float %832, ptr %833, align 4, !tbaa !79
  call void @mul_m4_v3(ptr noundef nonnull %5, ptr noundef nonnull %808) #14
  %834 = getelementptr inbounds %struct.MVert, ptr %762, i64 2
  %835 = icmp eq ptr %828, null
  br i1 %835, label %851, label %836

836:                                              ; preds = %827
  %837 = getelementptr inbounds %struct.MDeformVert, ptr %828, i64 0, i32 1
  %838 = load i32, ptr %837, align 8, !tbaa !336
  %839 = icmp eq i32 %838, 0
  br i1 %839, label %842, label %840

840:                                              ; preds = %836
  %841 = load ptr, ptr %828, align 8, !tbaa !338
  br label %845

842:                                              ; preds = %836
  %843 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %844 = call ptr %843(i64 noundef 8, ptr noundef nonnull @.str.9) #14
  store ptr %844, ptr %828, align 8, !tbaa !338
  store i32 1, ptr %837, align 8, !tbaa !336
  br label %845

845:                                              ; preds = %842, %840
  %846 = phi ptr [ %841, %840 ], [ %844, %842 ]
  %847 = getelementptr inbounds %struct.HairKey, ptr %789, i64 0, i32 2
  %848 = load float, ptr %847, align 4, !tbaa !310
  %849 = getelementptr inbounds %struct.MDeformWeight, ptr %846, i64 0, i32 1
  store float %848, ptr %849, align 4, !tbaa !339
  %850 = getelementptr inbounds %struct.MDeformVert, ptr %828, i64 1
  br label %851

851:                                              ; preds = %845, %827
  %852 = phi ptr [ %850, %845 ], [ null, %827 ]
  %853 = load i32, ptr %784, align 8, !tbaa !306
  %854 = icmp sgt i32 %853, 1
  br i1 %854, label %855, label %896

855:                                              ; preds = %851, %891
  %856 = phi i32 [ %893, %891 ], [ 1, %851 ]
  %857 = phi ptr [ %869, %891 ], [ %834, %851 ]
  %858 = phi ptr [ %861, %891 ], [ %789, %851 ]
  %859 = phi ptr [ %892, %891 ], [ %852, %851 ]
  %860 = phi ptr [ %874, %891 ], [ %812, %851 ]
  %861 = getelementptr inbounds %struct.HairKey, ptr %858, i64 1
  %862 = load float, ptr %861, align 4, !tbaa !79
  store float %862, ptr %857, align 4, !tbaa !79
  %863 = getelementptr inbounds %struct.HairKey, ptr %858, i64 1, i32 0, i64 1
  %864 = load float, ptr %863, align 4, !tbaa !79
  %865 = getelementptr inbounds float, ptr %857, i64 1
  store float %864, ptr %865, align 4, !tbaa !79
  %866 = getelementptr inbounds %struct.HairKey, ptr %858, i64 1, i32 0, i64 2
  %867 = load float, ptr %866, align 4, !tbaa !79
  %868 = getelementptr inbounds float, ptr %857, i64 2
  store float %867, ptr %868, align 4, !tbaa !79
  call void @mul_m4_v3(ptr noundef nonnull %5, ptr noundef nonnull %857) #14
  %869 = getelementptr inbounds %struct.MVert, ptr %857, i64 1
  %870 = load i32, ptr %790, align 8, !tbaa !116
  %871 = add nsw i32 %870, %856
  %872 = add nsw i32 %871, -1
  store i32 %872, ptr %860, align 4, !tbaa !333
  %873 = getelementptr inbounds %struct.MEdge, ptr %860, i64 0, i32 1
  store i32 %871, ptr %873, align 4, !tbaa !335
  %874 = getelementptr inbounds %struct.MEdge, ptr %860, i64 1
  %875 = icmp eq ptr %859, null
  br i1 %875, label %891, label %876

876:                                              ; preds = %855
  %877 = getelementptr inbounds %struct.MDeformVert, ptr %859, i64 0, i32 1
  %878 = load i32, ptr %877, align 8, !tbaa !336
  %879 = icmp eq i32 %878, 0
  br i1 %879, label %882, label %880

880:                                              ; preds = %876
  %881 = load ptr, ptr %859, align 8, !tbaa !338
  br label %885

882:                                              ; preds = %876
  %883 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %884 = call ptr %883(i64 noundef 8, ptr noundef nonnull @.str.9) #14
  store ptr %884, ptr %859, align 8, !tbaa !338
  store i32 1, ptr %877, align 8, !tbaa !336
  br label %885

885:                                              ; preds = %882, %880
  %886 = phi ptr [ %881, %880 ], [ %884, %882 ]
  %887 = getelementptr inbounds %struct.HairKey, ptr %858, i64 1, i32 2
  %888 = load float, ptr %887, align 4, !tbaa !310
  %889 = getelementptr inbounds %struct.MDeformWeight, ptr %886, i64 0, i32 1
  store float %888, ptr %889, align 4, !tbaa !339
  %890 = getelementptr inbounds %struct.MDeformVert, ptr %859, i64 1
  br label %891

891:                                              ; preds = %885, %855
  %892 = phi ptr [ %890, %885 ], [ null, %855 ]
  %893 = add nuw nsw i32 %856, 1
  %894 = load i32, ptr %784, align 8, !tbaa !306
  %895 = icmp slt i32 %893, %894
  br i1 %895, label %855, label %896, !llvm.loop !341

896:                                              ; preds = %891, %851, %776
  %897 = phi ptr [ %766, %776 ], [ %812, %851 ], [ %874, %891 ]
  %898 = phi ptr [ %765, %776 ], [ %852, %851 ], [ %892, %891 ]
  %899 = phi ptr [ %762, %776 ], [ %834, %851 ], [ %869, %891 ]
  %900 = add nuw nsw i32 %763, 1
  %901 = getelementptr inbounds %struct.ParticleData, ptr %764, i64 1
  %902 = load i32, ptr %588, align 8, !tbaa !26
  %903 = icmp slt i32 %900, %902
  br i1 %903, label %761, label %904, !llvm.loop !343

904:                                              ; preds = %896, %746
  %905 = getelementptr inbounds %struct.ParticleSystem, ptr %566, i64 0, i32 13
  %906 = load ptr, ptr %905, align 8, !tbaa !344
  %907 = icmp eq ptr %906, null
  br i1 %907, label %911, label %908

908:                                              ; preds = %904
  %909 = getelementptr inbounds %struct.DerivedMesh, ptr %906, i64 0, i32 95
  %910 = load ptr, ptr %909, align 8, !tbaa !331
  call void %910(ptr noundef nonnull %906) #14
  br label %911

911:                                              ; preds = %908, %904
  %912 = getelementptr inbounds %struct.ParticleSystem, ptr %566, i64 0, i32 40
  %913 = load ptr, ptr %912, align 8, !tbaa !15
  %914 = load ptr, ptr %569, align 8, !tbaa !315
  %915 = getelementptr inbounds %struct.ClothModifierData, ptr %914, i64 0, i32 5
  store ptr %913, ptr %915, align 8, !tbaa !345
  %916 = getelementptr inbounds %struct.ParticleSystem, ptr %566, i64 0, i32 2
  %917 = load ptr, ptr %916, align 8, !tbaa !5
  %918 = getelementptr inbounds %struct.ParticleSettings, ptr %917, i64 0, i32 4
  %919 = load ptr, ptr %918, align 8, !tbaa !346
  %920 = getelementptr inbounds %struct.ClothModifierData, ptr %914, i64 0, i32 3
  %921 = load ptr, ptr %920, align 8, !tbaa !317
  %922 = getelementptr inbounds %struct.ClothSimSettings, ptr %921, i64 0, i32 41
  store ptr %919, ptr %922, align 8, !tbaa !347
  %923 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !44
  %924 = getelementptr inbounds %struct.DerivedMesh, ptr %747, i64 0, i32 23
  %925 = load ptr, ptr %924, align 8, !tbaa !57
  %926 = call i32 %925(ptr noundef %747) #14
  %927 = sext i32 %926 to i64
  %928 = mul nsw i64 %927, 12
  %929 = call ptr %923(i64 noundef %928, ptr noundef nonnull @.str.10) #14
  %930 = call ptr @CDDM_copy(ptr noundef %747) #14
  store ptr %930, ptr %905, align 8, !tbaa !344
  %931 = getelementptr inbounds %struct.DerivedMesh, ptr %930, i64 0, i32 77
  %932 = load ptr, ptr %931, align 8, !tbaa !348
  call void %932(ptr noundef %930, ptr noundef %929) #14
  %933 = load ptr, ptr %569, align 8, !tbaa !315
  %934 = load ptr, ptr %7, align 8, !tbaa !76
  %935 = load ptr, ptr %23, align 8, !tbaa !86
  call void @clothModifier_do(ptr noundef %933, ptr noundef %934, ptr noundef %935, ptr noundef %747, ptr noundef %929) #14
  %936 = load ptr, ptr %905, align 8, !tbaa !344
  call void @CDDM_apply_vert_coords(ptr noundef %936, ptr noundef %929) #14
  %937 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  call void %937(ptr noundef %929) #14
  %938 = load ptr, ptr %569, align 8, !tbaa !315
  %939 = getelementptr inbounds %struct.ClothModifierData, ptr %938, i64 0, i32 3
  %940 = load ptr, ptr %939, align 8, !tbaa !317
  %941 = getelementptr inbounds %struct.ClothSimSettings, ptr %940, i64 0, i32 41
  store ptr null, ptr %941, align 8, !tbaa !347
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %5) #14
  br label %942

942:                                              ; preds = %552, %557, %562, %911
  %943 = load ptr, ptr %24, align 8, !tbaa !87
  %944 = getelementptr inbounds %struct.ParticleSystem, ptr %943, i64 0, i32 42
  call void @pdEndEffectors(ptr noundef nonnull %944) #14
  %945 = load ptr, ptr %7, align 8, !tbaa !76
  %946 = load ptr, ptr %23, align 8, !tbaa !86
  %947 = load ptr, ptr %24, align 8, !tbaa !87
  %948 = getelementptr inbounds %struct.ParticleSystem, ptr %947, i64 0, i32 2
  %949 = load ptr, ptr %948, align 8, !tbaa !5
  %950 = getelementptr inbounds %struct.ParticleSettings, ptr %949, i64 0, i32 4
  %951 = load ptr, ptr %950, align 8, !tbaa !346
  %952 = call ptr @pdInitEffectors(ptr noundef %945, ptr noundef %946, ptr noundef %947, ptr noundef %951, i8 noundef zeroext 1) #14
  %953 = load ptr, ptr %24, align 8, !tbaa !87
  %954 = getelementptr inbounds %struct.ParticleSystem, ptr %953, i64 0, i32 42
  store ptr %952, ptr %954, align 8, !tbaa !349
  call void @precalc_guides(ptr noundef nonnull %7, ptr noundef %952) #14
  call fastcc void @psys_update_path_cache(ptr noundef nonnull %7, float noundef nofpclass(nan inf) %22)
  %955 = getelementptr inbounds %struct.ParticleSystem, ptr %381, i64 0, i32 25
  %956 = load i32, ptr %955, align 4, !tbaa !21
  %957 = or i32 %956, 32
  store i32 %957, ptr %955, align 4, !tbaa !21
  br label %1422

958:                                              ; preds = %214
  %959 = load ptr, ptr %24, align 8, !tbaa !87
  %960 = getelementptr inbounds %struct.ParticleSystem, ptr %959, i64 0, i32 3
  %961 = load ptr, ptr %960, align 8, !tbaa !35
  %962 = icmp eq ptr %961, null
  br i1 %962, label %1422, label %963

963:                                              ; preds = %958
  %964 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  call void %964(ptr noundef nonnull %961) #14
  store ptr null, ptr %960, align 8, !tbaa !35
  %965 = getelementptr inbounds %struct.ParticleSystem, ptr %959, i64 0, i32 26
  store i32 0, ptr %965, align 8, !tbaa !26
  br label %1422

966:                                              ; preds = %214
  %967 = getelementptr inbounds %struct.ParticleSettings, ptr %10, i64 0, i32 11
  %968 = load i16, ptr %967, align 8, !tbaa !22
  %969 = sext i16 %968 to i32
  switch i32 %969, label %1421 [
    i32 0, label %970
    i32 2, label %970
  ]

970:                                              ; preds = %966, %966
  %971 = load ptr, ptr %9, align 8, !tbaa !5
  %972 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 39
  %973 = load ptr, ptr %972, align 8, !tbaa !14
  %974 = icmp eq ptr %973, null
  br i1 %974, label %998, label %975

975:                                              ; preds = %970
  %976 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 40
  %977 = load ptr, ptr %976, align 8, !tbaa !15
  %978 = getelementptr inbounds %struct.PointCache, ptr %977, i64 0, i32 2
  %979 = load i32, ptr %978, align 8, !tbaa !16
  %980 = and i32 %979, 1
  %981 = icmp eq i32 %980, 0
  br i1 %981, label %982, label %1018

982:                                              ; preds = %975
  %983 = getelementptr inbounds %struct.ParticleSettings, ptr %971, i64 0, i32 7
  %984 = load i16, ptr %983, align 8, !tbaa !18
  %985 = icmp eq i16 %984, 2
  br i1 %985, label %986, label %989

986:                                              ; preds = %982
  %987 = load i32, ptr %48, align 4, !tbaa !21
  %988 = and i32 %987, 4
  br label %995

989:                                              ; preds = %982
  %990 = getelementptr inbounds %struct.ParticleSettings, ptr %971, i64 0, i32 11
  %991 = load i16, ptr %990, align 8, !tbaa !22
  switch i16 %991, label %992 [
    i16 1, label %998
    i16 3, label %998
  ]

992:                                              ; preds = %989
  %993 = icmp eq i16 %991, 4
  %994 = zext i1 %993 to i32
  br label %995

995:                                              ; preds = %992, %986
  %996 = phi i32 [ %988, %986 ], [ %994, %992 ]
  %997 = icmp eq i32 %996, 0
  br i1 %997, label %1018, label %998

998:                                              ; preds = %995, %989, %989, %970
  %999 = getelementptr inbounds %struct.ParticleSettings, ptr %971, i64 0, i32 89
  %1000 = load i32, ptr %999, align 4, !tbaa !23
  %1001 = icmp eq i32 %1000, 0
  br i1 %1001, label %1006, label %1002

1002:                                             ; preds = %998
  %1003 = getelementptr inbounds %struct.ParticleSettings, ptr %971, i64 0, i32 19
  %1004 = load i16, ptr %1003, align 4, !tbaa !24
  %1005 = icmp eq i16 %1004, 0
  br i1 %1005, label %1006, label %1018

1006:                                             ; preds = %1002, %998
  %1007 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 40
  %1008 = load ptr, ptr %1007, align 8, !tbaa !15
  %1009 = getelementptr inbounds %struct.PointCache, ptr %1008, i64 0, i32 2
  %1010 = load i32, ptr %1009, align 8, !tbaa !16
  %1011 = and i32 %1010, 8
  %1012 = icmp eq i32 %1011, 0
  br i1 %1012, label %1013, label %1018

1013:                                             ; preds = %1006
  %1014 = getelementptr inbounds %struct.ParticleSettings, ptr %971, i64 0, i32 30
  %1015 = load i16, ptr %1014, align 2, !tbaa !25
  %1016 = sitofp i16 %1015 to float
  %1017 = fmul fast float %1016, 0x3F847AE140000000
  br label %1018

1018:                                             ; preds = %975, %995, %1002, %1006, %1013
  %1019 = phi float [ %1017, %1013 ], [ 1.000000e+00, %1006 ], [ 1.000000e+00, %1002 ], [ 1.000000e+00, %995 ], [ 1.000000e+00, %975 ]
  %1020 = load i16, ptr %51, align 4, !tbaa !294
  %1021 = and i16 %1020, 16
  %1022 = icmp eq i16 %1021, 0
  br i1 %1022, label %1024, label %1023

1023:                                             ; preds = %1018
  call void @psys_reset(ptr noundef nonnull %2, i32 noundef 1)
  br label %1024

1024:                                             ; preds = %1023, %1018
  %1025 = load ptr, ptr %24, align 8, !tbaa !87
  %1026 = getelementptr inbounds %struct.ParticleSystem, ptr %1025, i64 0, i32 26
  %1027 = load i32, ptr %1026, align 8, !tbaa !26
  %1028 = getelementptr inbounds %struct.ParticleSystem, ptr %1025, i64 0, i32 2
  %1029 = load ptr, ptr %1028, align 8, !tbaa !5
  %1030 = getelementptr inbounds %struct.ParticleSettings, ptr %1029, i64 0, i32 9
  %1031 = load i16, ptr %1030, align 4, !tbaa !27
  %1032 = icmp eq i16 %1031, 2
  br i1 %1032, label %1033, label %1042

1033:                                             ; preds = %1024
  %1034 = getelementptr inbounds %struct.ParticleSettings, ptr %1029, i64 0, i32 8
  %1035 = load i16, ptr %1034, align 2, !tbaa !28
  %1036 = icmp eq i16 %1035, 0
  br i1 %1036, label %1042, label %1037

1037:                                             ; preds = %1033
  %1038 = getelementptr inbounds %struct.ParticleSettings, ptr %1029, i64 0, i32 65
  %1039 = load i32, ptr %1038, align 4, !tbaa !29
  %1040 = mul nsw i32 %1039, %1039
  %1041 = mul nsw i32 %1040, %1039
  br label %1045

1042:                                             ; preds = %1033, %1024
  %1043 = getelementptr inbounds %struct.ParticleSettings, ptr %1029, i64 0, i32 63
  %1044 = load i32, ptr %1043, align 4, !tbaa !30
  br label %1045

1045:                                             ; preds = %1042, %1037
  %1046 = phi i32 [ %1044, %1042 ], [ %1041, %1037 ]
  %1047 = getelementptr inbounds %struct.ParticleSystem, ptr %1025, i64 0, i32 27
  %1048 = load i32, ptr %1047, align 4, !tbaa !31
  %1049 = sub nsw i32 %1046, %1048
  %1050 = icmp eq i32 %1049, %1027
  br i1 %1050, label %1052, label %1051

1051:                                             ; preds = %1045
  call fastcc void @realloc_particles(ptr nonnull %1025, i32 noundef %1049)
  br label %1056

1052:                                             ; preds = %1045
  %1053 = load i16, ptr %51, align 4, !tbaa !294
  %1054 = and i16 %1053, 16
  %1055 = icmp eq i16 %1054, 0
  br i1 %1055, label %1064, label %1056

1056:                                             ; preds = %1051, %1052
  call void @free_keyed_keys(ptr noundef nonnull %2) #14
  %1057 = load i16, ptr %41, align 2, !tbaa !28
  %1058 = sext i16 %1057 to i32
  call fastcc void @distribute_particles(ptr noundef nonnull %7, i32 noundef %1058)
  %1059 = load ptr, ptr %24, align 8, !tbaa !87
  call fastcc void @initialize_all_particles(ptr %1059)
  %1060 = load ptr, ptr %26, align 8, !tbaa !120
  %1061 = getelementptr inbounds %struct.ParticleSystemModifierData, ptr %1060, i64 0, i32 6
  %1062 = load i16, ptr %1061, align 4, !tbaa !292
  %1063 = or i16 %1062, 1
  store i16 %1063, ptr %1061, align 4, !tbaa !292
  br label %1064

1064:                                             ; preds = %1056, %1052
  %1065 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 26
  %1066 = load i32, ptr %1065, align 8, !tbaa !26
  %1067 = icmp sgt i32 %1066, 0
  br i1 %1067, label %1068, label %1128

1068:                                             ; preds = %1064
  %1069 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 3
  %1070 = load ptr, ptr %1069, align 8, !tbaa !35
  %1071 = getelementptr inbounds %struct.ParticleSettings, ptr %10, i64 0, i32 82
  %1072 = getelementptr inbounds %struct.ParticleSettings, ptr %10, i64 0, i32 83
  %1073 = getelementptr i8, ptr %2, i64 308
  br label %1074

1074:                                             ; preds = %1068, %1123
  %1075 = phi i32 [ 0, %1068 ], [ %1124, %1123 ]
  %1076 = phi ptr [ %1070, %1068 ], [ %1125, %1123 ]
  %1077 = getelementptr inbounds %struct.ParticleData, ptr %1076, i64 0, i32 17
  %1078 = load i16, ptr %1077, align 4, !tbaa !36
  %1079 = and i16 %1078, 1
  %1080 = icmp eq i16 %1079, 0
  br i1 %1080, label %1081, label %1123

1081:                                             ; preds = %1074
  %1082 = load float, ptr %1071, align 8, !tbaa !238
  %1083 = getelementptr inbounds %struct.ParticleData, ptr %1076, i64 0, i32 13
  store float %1082, ptr %1083, align 4, !tbaa !205
  %1084 = load float, ptr %1072, align 4, !tbaa !313
  %1085 = fcmp fast ogt float %1084, 0.000000e+00
  br i1 %1085, label %1086, label %1104

1086:                                             ; preds = %1081
  %1087 = add nuw nsw i32 %1075, 1
  %1088 = load i32, ptr %1073, align 4, !tbaa !124
  %1089 = srem i32 %1088, 1024
  %1090 = sext i32 %1089 to i64
  %1091 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %1090
  %1092 = load i32, ptr %1091, align 4, !tbaa !68
  %1093 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %1090
  %1094 = load i32, ptr %1093, align 4, !tbaa !68
  %1095 = mul i32 %1094, %1087
  %1096 = add i32 %1095, %1092
  %1097 = and i32 %1096, 1023
  %1098 = zext i32 %1097 to i64
  %1099 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %1098
  %1100 = load float, ptr %1099, align 4, !tbaa !79
  %1101 = fmul fast float %1100, %1084
  %1102 = fsub fast float 1.000000e+00, %1101
  %1103 = fmul fast float %1102, %1082
  store float %1103, ptr %1083, align 4, !tbaa !205
  br label %1104

1104:                                             ; preds = %1086, %1081
  call void @reset_particle(ptr noundef nonnull %7, ptr noundef nonnull %1076, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %22)
  %1105 = load i32, ptr %1073, align 4, !tbaa !124
  %1106 = srem i32 %1105, 1024
  %1107 = sext i32 %1106 to i64
  %1108 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %1107
  %1109 = load i32, ptr %1108, align 4, !tbaa !68
  %1110 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %1107
  %1111 = load i32, ptr %1110, align 4, !tbaa !68
  %1112 = mul i32 %1111, %1075
  %1113 = add i32 %1112, %1109
  %1114 = and i32 %1113, 1023
  %1115 = zext i32 %1114 to i64
  %1116 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %1115
  %1117 = load float, ptr %1116, align 4, !tbaa !79
  %1118 = fcmp fast ogt float %1117, %1019
  %1119 = load i16, ptr %1077, align 4, !tbaa !36
  %1120 = and i16 %1119, -3
  %1121 = select i1 %1118, i16 2, i16 0
  %1122 = or i16 %1120, %1121
  store i16 %1122, ptr %1077, align 4, !tbaa !36
  br label %1123

1123:                                             ; preds = %1104, %1074
  %1124 = add nuw nsw i32 %1075, 1
  %1125 = getelementptr inbounds %struct.ParticleData, ptr %1076, i64 1
  %1126 = load i32, ptr %1065, align 8, !tbaa !26
  %1127 = icmp slt i32 %1124, %1126
  br i1 %1127, label %1074, label %1128, !llvm.loop !350

1128:                                             ; preds = %1123, %1064
  %1129 = load i16, ptr %967, align 8, !tbaa !22
  %1130 = icmp eq i16 %1129, 2
  br i1 %1130, label %1131, label %1422

1131:                                             ; preds = %1128
  %1132 = load ptr, ptr %24, align 8, !tbaa !87
  %1133 = getelementptr inbounds %struct.ParticleSystem, ptr %1132, i64 0, i32 17
  %1134 = load ptr, ptr %1133, align 8, !tbaa !181
  %1135 = getelementptr inbounds %struct.ParticleSystem, ptr %1132, i64 0, i32 33
  store i16 0, ptr %1135, align 8, !tbaa !32
  %1136 = icmp eq ptr %1134, null
  br i1 %1136, label %1180, label %1137

1137:                                             ; preds = %1131
  %1138 = getelementptr inbounds %struct.ParticleSystem, ptr %1132, i64 0, i32 25
  br label %1139

1139:                                             ; preds = %1176, %1137
  %1140 = phi i16 [ 1, %1137 ], [ %1177, %1176 ]
  %1141 = phi ptr [ %1134, %1137 ], [ %1178, %1176 ]
  %1142 = load ptr, ptr %23, align 8, !tbaa !86
  %1143 = getelementptr inbounds %struct.ParticleTarget, ptr %1141, i64 0, i32 2
  %1144 = load ptr, ptr %1143, align 8, !tbaa !177
  %1145 = icmp eq ptr %1144, null
  %1146 = icmp eq ptr %1144, %1142
  %1147 = or i1 %1145, %1146
  %1148 = getelementptr inbounds %struct.ParticleTarget, ptr %1141, i64 0, i32 3
  %1149 = load i32, ptr %1148, align 8, !tbaa !179
  %1150 = add nsw i32 %1149, -1
  %1151 = select i1 %1147, ptr %1142, ptr %1144
  %1152 = getelementptr inbounds %struct.Object, ptr %1151, i64 0, i32 109
  %1153 = call ptr @BLI_findlink(ptr noundef nonnull %1152, i32 noundef %1150) #14
  %1154 = icmp eq ptr %1153, null
  %1155 = getelementptr inbounds %struct.ParticleTarget, ptr %1141, i64 0, i32 4
  %1156 = load i16, ptr %1155, align 4, !tbaa !180
  %1157 = and i16 %1156, -3
  %1158 = select i1 %1154, i16 0, i16 2
  %1159 = or i16 %1157, %1158
  store i16 %1159, ptr %1155, align 4, !tbaa !180
  br i1 %1154, label %1176, label %1160

1160:                                             ; preds = %1139
  %1161 = getelementptr inbounds %struct.ParticleSystem, ptr %1153, i64 0, i32 26
  %1162 = load i32, ptr %1161, align 8, !tbaa !26
  %1163 = icmp eq i32 %1162, 0
  br i1 %1163, label %1176, label %1164

1164:                                             ; preds = %1160
  %1165 = load i16, ptr %1135, align 8, !tbaa !32
  %1166 = add i16 %1165, %1140
  store i16 %1166, ptr %1135, align 8, !tbaa !32
  %1167 = load i32, ptr %1138, align 4, !tbaa !21
  %1168 = and i32 %1167, 8
  %1169 = icmp eq i32 %1168, 0
  br i1 %1169, label %1176, label %1170

1170:                                             ; preds = %1164
  %1171 = getelementptr inbounds %struct.ParticleTarget, ptr %1141, i64 0, i32 7
  %1172 = load float, ptr %1171, align 4, !tbaa !182
  %1173 = fcmp fast une float %1172, 0.000000e+00
  br i1 %1173, label %1174, label %1176

1174:                                             ; preds = %1170
  %1175 = add i16 %1166, 1
  store i16 %1175, ptr %1135, align 8, !tbaa !32
  br label %1176

1176:                                             ; preds = %1174, %1170, %1164, %1160, %1139
  %1177 = phi i16 [ %1140, %1174 ], [ %1140, %1170 ], [ %1140, %1164 ], [ 0, %1160 ], [ 0, %1139 ]
  %1178 = load ptr, ptr %1141, align 8, !tbaa !183
  %1179 = icmp eq ptr %1178, null
  br i1 %1179, label %1180, label %1139, !llvm.loop !184

1180:                                             ; preds = %1176, %1131
  %1181 = getelementptr inbounds %struct.ParticleSystem, ptr %1132, i64 0, i32 25
  %1182 = load i32, ptr %1181, align 4, !tbaa !21
  %1183 = and i32 %1182, 8
  %1184 = icmp eq i32 %1183, 0
  br i1 %1184, label %1185, label %1191

1185:                                             ; preds = %1180
  %1186 = getelementptr inbounds %struct.ParticleSystem, ptr %1132, i64 0, i32 2
  %1187 = load ptr, ptr %1186, align 8, !tbaa !5
  %1188 = getelementptr inbounds %struct.ParticleSettings, ptr %1187, i64 0, i32 120
  %1189 = load i32, ptr %1188, align 4, !tbaa !185
  %1190 = trunc i32 %1189 to i16
  br label %1191

1191:                                             ; preds = %1180, %1185
  %1192 = phi i16 [ %1190, %1185 ], [ 1, %1180 ]
  %1193 = load i16, ptr %1135, align 8, !tbaa !32
  %1194 = mul i16 %1193, %1192
  store i16 %1194, ptr %1135, align 8, !tbaa !32
  %1195 = load ptr, ptr %24, align 8, !tbaa !87
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %4) #14
  %1196 = getelementptr inbounds i8, ptr %4, i64 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %1196, i8 0, i64 40, i1 false)
  %1197 = getelementptr inbounds %struct.ParticleSystem, ptr %1195, i64 0, i32 26
  %1198 = load i32, ptr %1197, align 8, !tbaa !26
  %1199 = getelementptr inbounds %struct.ParticleSystem, ptr %1195, i64 0, i32 33
  %1200 = load i16, ptr %1199, align 8, !tbaa !32
  %1201 = freeze i16 %1200
  %1202 = sext i16 %1201 to i32
  %1203 = load ptr, ptr %7, align 8, !tbaa !76
  store ptr %1203, ptr %4, align 8, !tbaa !76
  %1204 = icmp eq i16 %1201, 0
  br i1 %1204, label %1205, label %1209

1205:                                             ; preds = %1191
  call void @free_keyed_keys(ptr noundef nonnull %1195) #14
  %1206 = getelementptr inbounds %struct.ParticleSystem, ptr %1195, i64 0, i32 25
  %1207 = load i32, ptr %1206, align 4, !tbaa !21
  %1208 = and i32 %1207, -1025
  store i32 %1208, ptr %1206, align 4, !tbaa !21
  br label %1418

1209:                                             ; preds = %1191
  %1210 = icmp eq i32 %1198, 0
  br i1 %1210, label %1265, label %1211

1211:                                             ; preds = %1209
  %1212 = getelementptr inbounds %struct.ParticleSystem, ptr %1195, i64 0, i32 3
  %1213 = load ptr, ptr %1212, align 8, !tbaa !35
  %1214 = getelementptr inbounds %struct.ParticleData, ptr %1213, i64 0, i32 5
  %1215 = load i32, ptr %1214, align 8, !tbaa !306
  %1216 = icmp eq i32 %1215, %1202
  br i1 %1216, label %1265, label %1217

1217:                                             ; preds = %1211
  call void @free_keyed_keys(ptr noundef nonnull %1195) #14
  %1218 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %1219 = mul nsw i32 %1198, %1202
  %1220 = sext i32 %1219 to i64
  %1221 = mul nsw i64 %1220, 56
  %1222 = call ptr %1218(i64 noundef %1221, ptr noundef nonnull @.str.24) #14
  %1223 = load i32, ptr %1197, align 8, !tbaa !26
  %1224 = icmp sgt i32 %1223, 0
  br i1 %1224, label %1225, label %1265

1225:                                             ; preds = %1217
  %1226 = load ptr, ptr %1212, align 8, !tbaa !35
  %1227 = sext i16 %1201 to i64
  %1228 = and i32 %1223, 3
  %1229 = icmp ult i32 %1223, 4
  br i1 %1229, label %1251, label %1230

1230:                                             ; preds = %1225
  %1231 = and i32 %1223, -4
  br label %1232

1232:                                             ; preds = %1232, %1230
  %1233 = phi ptr [ %1226, %1230 ], [ %1248, %1232 ]
  %1234 = phi ptr [ %1222, %1230 ], [ %1247, %1232 ]
  %1235 = phi i32 [ 0, %1230 ], [ %1249, %1232 ]
  %1236 = getelementptr inbounds %struct.ParticleData, ptr %1233, i64 0, i32 3
  store ptr %1234, ptr %1236, align 8, !tbaa !351
  %1237 = getelementptr inbounds %struct.ParticleData, ptr %1233, i64 0, i32 5
  store i32 %1202, ptr %1237, align 8, !tbaa !306
  %1238 = getelementptr inbounds %struct.ParticleKey, ptr %1234, i64 %1227
  %1239 = getelementptr inbounds %struct.ParticleData, ptr %1233, i64 1, i32 3
  store ptr %1238, ptr %1239, align 8, !tbaa !351
  %1240 = getelementptr inbounds %struct.ParticleData, ptr %1233, i64 1, i32 5
  store i32 %1202, ptr %1240, align 8, !tbaa !306
  %1241 = getelementptr inbounds %struct.ParticleKey, ptr %1238, i64 %1227
  %1242 = getelementptr inbounds %struct.ParticleData, ptr %1233, i64 2, i32 3
  store ptr %1241, ptr %1242, align 8, !tbaa !351
  %1243 = getelementptr inbounds %struct.ParticleData, ptr %1233, i64 2, i32 5
  store i32 %1202, ptr %1243, align 8, !tbaa !306
  %1244 = getelementptr inbounds %struct.ParticleKey, ptr %1241, i64 %1227
  %1245 = getelementptr inbounds %struct.ParticleData, ptr %1233, i64 3, i32 3
  store ptr %1244, ptr %1245, align 8, !tbaa !351
  %1246 = getelementptr inbounds %struct.ParticleData, ptr %1233, i64 3, i32 5
  store i32 %1202, ptr %1246, align 8, !tbaa !306
  %1247 = getelementptr inbounds %struct.ParticleKey, ptr %1244, i64 %1227
  %1248 = getelementptr inbounds %struct.ParticleData, ptr %1233, i64 4
  %1249 = add i32 %1235, 4
  %1250 = icmp eq i32 %1249, %1231
  br i1 %1250, label %1251, label %1232, !llvm.loop !352

1251:                                             ; preds = %1232, %1225
  %1252 = phi ptr [ %1226, %1225 ], [ %1248, %1232 ]
  %1253 = phi ptr [ %1222, %1225 ], [ %1247, %1232 ]
  %1254 = icmp eq i32 %1228, 0
  br i1 %1254, label %1265, label %1255

1255:                                             ; preds = %1251, %1255
  %1256 = phi ptr [ %1262, %1255 ], [ %1252, %1251 ]
  %1257 = phi ptr [ %1261, %1255 ], [ %1253, %1251 ]
  %1258 = phi i32 [ %1263, %1255 ], [ 0, %1251 ]
  %1259 = getelementptr inbounds %struct.ParticleData, ptr %1256, i64 0, i32 3
  store ptr %1257, ptr %1259, align 8, !tbaa !351
  %1260 = getelementptr inbounds %struct.ParticleData, ptr %1256, i64 0, i32 5
  store i32 %1202, ptr %1260, align 8, !tbaa !306
  %1261 = getelementptr inbounds %struct.ParticleKey, ptr %1257, i64 %1227
  %1262 = getelementptr inbounds %struct.ParticleData, ptr %1256, i64 1
  %1263 = add i32 %1258, 1
  %1264 = icmp eq i32 %1263, %1228
  br i1 %1264, label %1265, label %1255, !llvm.loop !353

1265:                                             ; preds = %1251, %1255, %1217, %1211, %1209
  %1266 = getelementptr inbounds %struct.ParticleSystem, ptr %1195, i64 0, i32 25
  %1267 = load i32, ptr %1266, align 4, !tbaa !21
  %1268 = and i32 %1267, -1025
  store i32 %1268, ptr %1266, align 4, !tbaa !21
  %1269 = getelementptr inbounds %struct.ParticleSystem, ptr %1195, i64 0, i32 17
  %1270 = add nsw i32 %1202, -1
  %1271 = icmp sgt i16 %1201, 0
  br i1 %1271, label %1272, label %1415

1272:                                             ; preds = %1265
  %1273 = load ptr, ptr %1269, align 8, !tbaa !181
  %1274 = getelementptr inbounds %struct.ParticleSimulationData, ptr %4, i64 0, i32 2
  %1275 = getelementptr inbounds %struct.ParticleSystem, ptr %1195, i64 0, i32 3
  %1276 = icmp eq i16 %1201, 1
  %1277 = sitofp i32 %1270 to float
  %1278 = fdiv fast float 1.000000e+00, %1277
  br label %1279

1279:                                             ; preds = %1409, %1272
  %1280 = phi ptr [ %1273, %1272 ], [ %1410, %1409 ]
  %1281 = phi i32 [ 0, %1272 ], [ %1411, %1409 ]
  %1282 = getelementptr inbounds %struct.ParticleTarget, ptr %1280, i64 0, i32 2
  %1283 = load ptr, ptr %1282, align 8, !tbaa !177
  %1284 = icmp eq ptr %1283, null
  %1285 = load ptr, ptr %23, align 8
  %1286 = select i1 %1284, ptr %1285, ptr %1283
  store ptr %1286, ptr %1196, align 8, !tbaa !86
  %1287 = getelementptr inbounds %struct.Object, ptr %1286, i64 0, i32 109
  %1288 = getelementptr inbounds %struct.ParticleTarget, ptr %1280, i64 0, i32 3
  %1289 = load i32, ptr %1288, align 8, !tbaa !179
  %1290 = add nsw i32 %1289, -1
  %1291 = call ptr @BLI_findlink(ptr noundef nonnull %1287, i32 noundef %1290) #14
  store ptr %1291, ptr %1274, align 8, !tbaa !87
  %1292 = getelementptr inbounds %struct.ParticleSystem, ptr %1291, i64 0, i32 25
  %1293 = load i32, ptr %1292, align 4, !tbaa !21
  %1294 = and i32 %1293, 1024
  %1295 = and i32 %1293, -1025
  store i32 %1295, ptr %1292, align 4, !tbaa !21
  %1296 = load i32, ptr %1197, align 8, !tbaa !26
  %1297 = icmp sgt i32 %1296, 0
  br i1 %1297, label %1298, label %1384

1298:                                             ; preds = %1279
  %1299 = load ptr, ptr %1275, align 8, !tbaa !35
  %1300 = sext i32 %1281 to i64
  %1301 = getelementptr inbounds %struct.ParticleTarget, ptr %1280, i64 0, i32 6
  %1302 = getelementptr inbounds %struct.ParticleTarget, ptr %1280, i64 0, i32 7
  %1303 = icmp slt i32 %1281, %1270
  %1304 = sitofp i32 %1281 to float
  br i1 %1276, label %1347, label %1305

1305:                                             ; preds = %1298, %1342
  %1306 = phi ptr [ %1344, %1342 ], [ %1299, %1298 ]
  %1307 = phi i32 [ %1343, %1342 ], [ 0, %1298 ]
  %1308 = getelementptr inbounds %struct.ParticleData, ptr %1306, i64 0, i32 3
  %1309 = load ptr, ptr %1308, align 8, !tbaa !351
  %1310 = getelementptr inbounds %struct.ParticleKey, ptr %1309, i64 %1300
  %1311 = getelementptr inbounds %struct.ParticleKey, ptr %1309, i64 %1300, i32 4
  store float -1.000000e+00, ptr %1311, align 4, !tbaa !220
  %1312 = load ptr, ptr %1274, align 8, !tbaa !87
  %1313 = getelementptr inbounds %struct.ParticleSystem, ptr %1312, i64 0, i32 26
  %1314 = load i32, ptr %1313, align 8, !tbaa !26
  %1315 = srem i32 %1307, %1314
  %1316 = call i32 @psys_get_particle_state(ptr noundef nonnull %4, i32 noundef %1315, ptr noundef %1310, i32 noundef 1) #14
  %1317 = load i32, ptr %1266, align 4, !tbaa !21
  %1318 = and i32 %1317, 8
  %1319 = icmp eq i32 %1318, 0
  %1320 = getelementptr inbounds %struct.ParticleData, ptr %1306, i64 0, i32 6
  %1321 = load float, ptr %1320, align 4, !tbaa !115
  br i1 %1319, label %1336, label %1322

1322:                                             ; preds = %1305
  %1323 = load float, ptr %1301, align 8, !tbaa !354
  %1324 = fadd fast float %1323, %1321
  store float %1324, ptr %1311, align 4, !tbaa !220
  %1325 = load float, ptr %1302, align 4, !tbaa !182
  %1326 = fcmp fast une float %1325, 0.000000e+00
  %1327 = select i1 %1326, i1 %1303, i1 false
  br i1 %1327, label %1328, label %1342

1328:                                             ; preds = %1322
  %1329 = getelementptr inbounds %struct.ParticleKey, ptr %1310, i64 1
  call void @copy_particle_key(ptr noundef nonnull %1329, ptr noundef nonnull %1310, i32 noundef 1) #14
  %1330 = load float, ptr %1320, align 4, !tbaa !115
  %1331 = load float, ptr %1301, align 8, !tbaa !354
  %1332 = fadd fast float %1331, %1330
  %1333 = load float, ptr %1302, align 4, !tbaa !182
  %1334 = fadd fast float %1332, %1333
  %1335 = getelementptr inbounds %struct.ParticleKey, ptr %1310, i64 1, i32 4
  store float %1334, ptr %1335, align 4, !tbaa !220
  br label %1342

1336:                                             ; preds = %1305
  %1337 = getelementptr inbounds %struct.ParticleData, ptr %1306, i64 0, i32 7
  %1338 = load float, ptr %1337, align 8, !tbaa !167
  %1339 = fmul fast float %1338, %1304
  %1340 = fmul fast float %1339, %1278
  %1341 = fadd fast float %1340, %1321
  store float %1341, ptr %1311, align 4, !tbaa !220
  br label %1342

1342:                                             ; preds = %1336, %1328, %1322
  %1343 = add nuw nsw i32 %1307, 1
  %1344 = getelementptr inbounds %struct.ParticleData, ptr %1306, i64 1
  %1345 = load i32, ptr %1197, align 8, !tbaa !26
  %1346 = icmp slt i32 %1343, %1345
  br i1 %1346, label %1305, label %1384, !llvm.loop !355

1347:                                             ; preds = %1298, %1379
  %1348 = phi ptr [ %1381, %1379 ], [ %1299, %1298 ]
  %1349 = phi i32 [ %1380, %1379 ], [ 0, %1298 ]
  %1350 = getelementptr inbounds %struct.ParticleData, ptr %1348, i64 0, i32 3
  %1351 = load ptr, ptr %1350, align 8, !tbaa !351
  %1352 = getelementptr inbounds %struct.ParticleKey, ptr %1351, i64 %1300
  %1353 = getelementptr inbounds %struct.ParticleKey, ptr %1351, i64 %1300, i32 4
  store float -1.000000e+00, ptr %1353, align 4, !tbaa !220
  %1354 = load ptr, ptr %1274, align 8, !tbaa !87
  %1355 = getelementptr inbounds %struct.ParticleSystem, ptr %1354, i64 0, i32 26
  %1356 = load i32, ptr %1355, align 8, !tbaa !26
  %1357 = srem i32 %1349, %1356
  %1358 = call i32 @psys_get_particle_state(ptr noundef nonnull %4, i32 noundef %1357, ptr noundef %1352, i32 noundef 1) #14
  %1359 = load i32, ptr %1266, align 4, !tbaa !21
  %1360 = and i32 %1359, 8
  %1361 = icmp eq i32 %1360, 0
  %1362 = getelementptr inbounds %struct.ParticleData, ptr %1348, i64 0, i32 6
  %1363 = load float, ptr %1362, align 4, !tbaa !115
  br i1 %1361, label %1378, label %1364

1364:                                             ; preds = %1347
  %1365 = load float, ptr %1301, align 8, !tbaa !354
  %1366 = fadd fast float %1365, %1363
  store float %1366, ptr %1353, align 4, !tbaa !220
  %1367 = load float, ptr %1302, align 4, !tbaa !182
  %1368 = fcmp fast une float %1367, 0.000000e+00
  %1369 = select i1 %1368, i1 %1303, i1 false
  br i1 %1369, label %1370, label %1379

1370:                                             ; preds = %1364
  %1371 = getelementptr inbounds %struct.ParticleKey, ptr %1352, i64 1
  call void @copy_particle_key(ptr noundef nonnull %1371, ptr noundef nonnull %1352, i32 noundef 1) #14
  %1372 = load float, ptr %1362, align 4, !tbaa !115
  %1373 = load float, ptr %1301, align 8, !tbaa !354
  %1374 = fadd fast float %1373, %1372
  %1375 = load float, ptr %1302, align 4, !tbaa !182
  %1376 = fadd fast float %1374, %1375
  %1377 = getelementptr inbounds %struct.ParticleKey, ptr %1352, i64 1, i32 4
  store float %1376, ptr %1377, align 4, !tbaa !220
  br label %1379

1378:                                             ; preds = %1347
  store float %1363, ptr %1353, align 4, !tbaa !220
  br label %1379

1379:                                             ; preds = %1378, %1370, %1364
  %1380 = add nuw nsw i32 %1349, 1
  %1381 = getelementptr inbounds %struct.ParticleData, ptr %1348, i64 1
  %1382 = load i32, ptr %1197, align 8, !tbaa !26
  %1383 = icmp slt i32 %1380, %1382
  br i1 %1383, label %1347, label %1384, !llvm.loop !355

1384:                                             ; preds = %1342, %1379, %1279
  %1385 = load i32, ptr %1266, align 4, !tbaa !21
  %1386 = and i32 %1385, 8
  %1387 = icmp eq i32 %1386, 0
  br i1 %1387, label %1394, label %1388

1388:                                             ; preds = %1384
  %1389 = getelementptr inbounds %struct.ParticleTarget, ptr %1280, i64 0, i32 7
  %1390 = load float, ptr %1389, align 4, !tbaa !182
  %1391 = fcmp fast une float %1390, 0.000000e+00
  br i1 %1391, label %1392, label %1394

1392:                                             ; preds = %1388
  %1393 = add nsw i32 %1281, 1
  br label %1394

1394:                                             ; preds = %1392, %1388, %1384
  %1395 = phi i32 [ %1393, %1392 ], [ %1281, %1388 ], [ %1281, %1384 ]
  %1396 = load ptr, ptr %1274, align 8, !tbaa !87
  %1397 = getelementptr inbounds %struct.ParticleSystem, ptr %1396, i64 0, i32 25
  %1398 = load i32, ptr %1397, align 4, !tbaa !21
  %1399 = or i32 %1398, %1294
  store i32 %1399, ptr %1397, align 4, !tbaa !21
  %1400 = load ptr, ptr %1280, align 8, !tbaa !183
  %1401 = icmp eq ptr %1400, null
  br i1 %1401, label %1407, label %1402

1402:                                             ; preds = %1394
  %1403 = getelementptr inbounds %struct.ParticleTarget, ptr %1400, i64 0, i32 4
  %1404 = load i16, ptr %1403, align 4, !tbaa !180
  %1405 = and i16 %1404, 2
  %1406 = icmp eq i16 %1405, 0
  br i1 %1406, label %1407, label %1409

1407:                                             ; preds = %1402, %1394
  %1408 = load ptr, ptr %1269, align 8, !tbaa !181
  br label %1409

1409:                                             ; preds = %1407, %1402
  %1410 = phi ptr [ %1408, %1407 ], [ %1400, %1402 ]
  %1411 = add nsw i32 %1395, 1
  %1412 = icmp slt i32 %1411, %1202
  br i1 %1412, label %1279, label %1413, !llvm.loop !356

1413:                                             ; preds = %1409
  %1414 = load i32, ptr %1266, align 4, !tbaa !21
  br label %1415

1415:                                             ; preds = %1413, %1265
  %1416 = phi i32 [ %1414, %1413 ], [ %1268, %1265 ]
  %1417 = or i32 %1416, 1024
  store i32 %1417, ptr %1266, align 4, !tbaa !21
  br label %1418

1418:                                             ; preds = %1205, %1415
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %4) #14
  %1419 = fptosi float %22 to i32
  %1420 = sitofp i32 %1419 to float
  call fastcc void @psys_update_path_cache(ptr noundef nonnull %7, float noundef nofpclass(nan inf) %1420)
  br label %1422

1421:                                             ; preds = %966
  call fastcc void @system_step(ptr noundef nonnull %7, float noundef nofpclass(nan inf) %22)
  br label %1422

1422:                                             ; preds = %963, %958, %1128, %1418, %1421, %376, %942
  %1423 = load i32, ptr %48, align 4, !tbaa !21
  %1424 = and i32 %1423, 16384
  %1425 = icmp eq i32 %1424, 0
  br i1 %1425, label %1429, label %1426

1426:                                             ; preds = %1422
  call fastcc void @evaluate_emitter_anim(ptr noundef %0, ptr noundef %1, float noundef nofpclass(nan inf) %22)
  %1427 = load i32, ptr %48, align 4, !tbaa !21
  %1428 = and i32 %1427, -16385
  store i32 %1428, ptr %48, align 4, !tbaa !21
  br label %1429

1429:                                             ; preds = %1426, %1422
  %1430 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 20
  store float %22, ptr %1430, align 8, !tbaa !134
  store i16 0, ptr %51, align 4, !tbaa !294
  %1431 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 39
  %1432 = load ptr, ptr %1431, align 8, !tbaa !14
  %1433 = icmp eq ptr %1432, null
  br i1 %1433, label %1434, label %1438

1434:                                             ; preds = %1429
  %1435 = getelementptr inbounds %struct.ParticleSystem, ptr %2, i64 0, i32 19
  %1436 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 47
  %1437 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %1435, ptr noundef nonnull %1436) #14
  br label %1438

1438:                                             ; preds = %1429, %1434, %36, %31, %18
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %7) #14
  ret void
}

declare i32 @psys_check_enabled(ptr noundef, ptr noundef) local_unnamed_addr #3

declare nofpclass(nan inf) float @BKE_scene_frame_get(ptr noundef) local_unnamed_addr #3

declare ptr @psys_get_modifier(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @DM_ensure_tessface(ptr noundef) local_unnamed_addr #3

declare void @BKE_animsys_evaluate_animdata(ptr noundef, ptr noundef, ptr noundef, float noundef nofpclass(nan inf), i16 noundef signext) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @system_step(ptr noundef %0, float noundef nofpclass(nan inf) %1) unnamed_addr #2 {
  %3 = alloca [3 x float], align 4
  %4 = alloca %struct.SPHRangeData, align 8
  %5 = alloca [2 x float], align 4
  %6 = alloca [3 x float], align 4
  %7 = alloca %struct.BoidBrainData, align 8
  %8 = alloca %struct.ParticleTexture, align 4
  %9 = alloca %struct.SPHData, align 8
  %10 = alloca %struct.PTCacheID, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = getelementptr %struct.ParticleSimulationData, ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !87
  %15 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %17 = getelementptr %struct.ParticleSystem, ptr %14, i64 0, i32 40
  %18 = load ptr, ptr %17, align 8, !tbaa !15
  call void @llvm.lifetime.start.p0(i64 200, ptr nonnull %10) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #14
  store i32 0, ptr %11, align 4, !tbaa !68
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #14
  store i32 100, ptr %12, align 4, !tbaa !68
  %19 = getelementptr inbounds %struct.ParticleSettings, ptr %16, i64 0, i32 7
  %20 = load i16, ptr %19, align 8, !tbaa !18
  %21 = icmp eq i16 %20, 2
  br i1 %21, label %76, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %struct.PointCache, ptr %18, i64 0, i32 2
  %24 = load i32, ptr %23, align 8, !tbaa !16
  %25 = and i32 %24, 64
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.PointCache, ptr %18, i64 0, i32 20
  tail call void @BKE_ptcache_free_mem(ptr noundef nonnull %28) #14
  %29 = load i32, ptr %23, align 8, !tbaa !16
  br label %30

30:                                               ; preds = %22, %27
  %31 = phi i32 [ %24, %22 ], [ %29, %27 ]
  %32 = and i32 %31, 9
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %53

34:                                               ; preds = %30
  %35 = load ptr, ptr %0, align 8, !tbaa !76
  %36 = getelementptr inbounds %struct.PointCache, ptr %18, i64 0, i32 5
  %37 = getelementptr inbounds %struct.PointCache, ptr %18, i64 0, i32 6
  %38 = load ptr, ptr %15, align 8, !tbaa !5
  %39 = getelementptr inbounds %struct.ParticleSettings, ptr %38, i64 0, i32 53
  %40 = load float, ptr %39, align 4, !tbaa !113
  %41 = fptosi float %40 to i32
  %42 = tail call i32 @llvm.smax.i32(i32 %41, i32 1)
  store i32 %42, ptr %36, align 4, !tbaa !68
  %43 = getelementptr inbounds %struct.ParticleSettings, ptr %38, i64 0, i32 54
  %44 = load float, ptr %43, align 8, !tbaa !114
  %45 = getelementptr inbounds %struct.ParticleSettings, ptr %38, i64 0, i32 55
  %46 = load float, ptr %45, align 4, !tbaa !168
  %47 = fadd fast float %44, 1.000000e+00
  %48 = fadd fast float %47, %46
  %49 = fptosi float %48 to i32
  %50 = getelementptr inbounds %struct.Scene, ptr %35, i64 0, i32 22, i32 7
  %51 = load i32, ptr %50, align 8, !tbaa !187
  %52 = tail call i32 @llvm.smin.i32(i32 %51, i32 %49)
  store i32 %52, ptr %37, align 4, !tbaa !68
  br label %53

53:                                               ; preds = %34, %30
  %54 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 1
  %55 = load ptr, ptr %54, align 8, !tbaa !86
  call void @BKE_ptcache_id_from_particles(ptr noundef nonnull %10, ptr noundef %55, ptr noundef nonnull %14) #14
  %56 = load ptr, ptr %0, align 8, !tbaa !76
  call void @BKE_ptcache_id_time(ptr noundef nonnull %10, ptr noundef %56, float noundef nofpclass(nan inf) 0.000000e+00, ptr noundef nonnull %11, ptr noundef nonnull %12, ptr noundef null) #14
  %57 = load i32, ptr %11, align 4, !tbaa !68
  %58 = sitofp i32 %57 to float
  %59 = fcmp fast oeq float %58, %1
  br i1 %59, label %60, label %68

60:                                               ; preds = %53
  %61 = load ptr, ptr %0, align 8, !tbaa !76
  %62 = call i32 @BKE_ptcache_id_reset(ptr noundef %61, ptr noundef nonnull %10, i32 noundef 2) #14
  %63 = load i32, ptr %11, align 4, !tbaa !68
  call void @BKE_ptcache_validate(ptr noundef nonnull %18, i32 noundef %63) #14
  %64 = load i32, ptr %23, align 8, !tbaa !16
  %65 = and i32 %64, -259
  store i32 %65, ptr %23, align 8, !tbaa !16
  %66 = load i32, ptr %11, align 4, !tbaa !68
  %67 = sitofp i32 %66 to float
  br label %68

68:                                               ; preds = %60, %53
  %69 = phi float [ %67, %60 ], [ %58, %53 ]
  %70 = fcmp fast ogt float %69, %1
  br i1 %70, label %79, label %71

71:                                               ; preds = %68
  %72 = load i32, ptr %12, align 4, !tbaa !68
  %73 = sitofp i32 %72 to float
  %74 = fcmp fast olt float %73, %1
  br i1 %74, label %75, label %79

75:                                               ; preds = %71
  br label %79

76:                                               ; preds = %2
  %77 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 26
  %78 = load i32, ptr %77, align 8, !tbaa !26
  br label %100

79:                                               ; preds = %75, %71, %68
  %80 = phi float [ %69, %68 ], [ %1, %71 ], [ %73, %75 ]
  %81 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 26
  %82 = load i32, ptr %81, align 8, !tbaa !26
  %83 = load ptr, ptr %13, align 8, !tbaa !87
  %84 = getelementptr inbounds %struct.ParticleSystem, ptr %83, i64 0, i32 26
  %85 = load i32, ptr %84, align 8, !tbaa !26
  %86 = getelementptr inbounds %struct.ParticleSystem, ptr %83, i64 0, i32 40
  %87 = load ptr, ptr %86, align 8, !tbaa !15
  %88 = getelementptr inbounds %struct.PointCache, ptr %87, i64 0, i32 2
  %89 = load i32, ptr %88, align 8, !tbaa !16
  %90 = and i32 %89, 512
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %79
  %93 = getelementptr inbounds %struct.ParticleSystem, ptr %83, i64 0, i32 2
  %94 = load ptr, ptr %93, align 8, !tbaa !5
  br label %100

95:                                               ; preds = %79
  %96 = getelementptr inbounds %struct.PTCacheID, ptr %10, i64 0, i32 25
  %97 = load ptr, ptr %96, align 8, !tbaa !357
  %98 = getelementptr inbounds %struct.PointCache, ptr %97, i64 0, i32 11
  %99 = load i32, ptr %98, align 4, !tbaa !358
  br label %129

100:                                              ; preds = %92, %76
  %101 = phi ptr [ %94, %92 ], [ %16, %76 ]
  %102 = phi i32 [ %85, %92 ], [ %78, %76 ]
  %103 = phi ptr [ %83, %92 ], [ %14, %76 ]
  %104 = phi i32 [ %82, %92 ], [ %78, %76 ]
  %105 = phi ptr [ %81, %92 ], [ %77, %76 ]
  %106 = phi ptr [ %10, %92 ], [ null, %76 ]
  %107 = phi float [ %80, %92 ], [ %1, %76 ]
  %108 = getelementptr inbounds %struct.ParticleSettings, ptr %101, i64 0, i32 9
  %109 = load i16, ptr %108, align 4, !tbaa !27
  %110 = icmp eq i16 %109, 2
  br i1 %110, label %111, label %123

111:                                              ; preds = %100
  %112 = getelementptr inbounds %struct.ParticleSettings, ptr %101, i64 0, i32 8
  %113 = load i16, ptr %112, align 2, !tbaa !28
  %114 = icmp eq i16 %113, 0
  br i1 %114, label %123, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %struct.ParticleSettings, ptr %101, i64 0, i32 65
  %117 = load i32, ptr %116, align 4, !tbaa !29
  %118 = mul nsw i32 %117, %117
  %119 = mul nsw i32 %118, %117
  %120 = getelementptr inbounds %struct.ParticleSystem, ptr %103, i64 0, i32 27
  %121 = load i32, ptr %120, align 4, !tbaa !31
  %122 = sub nsw i32 %119, %121
  br label %129

123:                                              ; preds = %111, %100
  %124 = getelementptr inbounds %struct.ParticleSettings, ptr %101, i64 0, i32 63
  %125 = load i32, ptr %124, align 4, !tbaa !30
  %126 = getelementptr inbounds %struct.ParticleSystem, ptr %103, i64 0, i32 27
  %127 = load i32, ptr %126, align 4, !tbaa !31
  %128 = sub nsw i32 %125, %127
  br label %129

129:                                              ; preds = %123, %115, %95
  %130 = phi i32 [ %85, %95 ], [ %102, %115 ], [ %102, %123 ]
  %131 = phi ptr [ %83, %95 ], [ %103, %115 ], [ %103, %123 ]
  %132 = phi i32 [ %82, %95 ], [ %104, %115 ], [ %104, %123 ]
  %133 = phi ptr [ %81, %95 ], [ %105, %115 ], [ %105, %123 ]
  %134 = phi ptr [ %10, %95 ], [ %106, %115 ], [ %106, %123 ]
  %135 = phi float [ %80, %95 ], [ %107, %115 ], [ %107, %123 ]
  %136 = phi i32 [ %99, %95 ], [ %122, %115 ], [ %128, %123 ]
  %137 = icmp eq i32 %136, %130
  br i1 %137, label %139, label %138

138:                                              ; preds = %129
  call fastcc void @realloc_particles(ptr nonnull %131, i32 noundef %136)
  br label %144

139:                                              ; preds = %129
  %140 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 31
  %141 = load i16, ptr %140, align 4, !tbaa !294
  %142 = and i16 %141, 16
  %143 = icmp eq i16 %142, 0
  br i1 %143, label %179, label %144

144:                                              ; preds = %138, %139
  %145 = getelementptr inbounds %struct.ParticleSettings, ptr %16, i64 0, i32 8
  %146 = load i16, ptr %145, align 2, !tbaa !28
  %147 = sext i16 %146 to i32
  call fastcc void @distribute_particles(ptr noundef nonnull %0, i32 noundef %147)
  %148 = load ptr, ptr %13, align 8, !tbaa !87
  call fastcc void @initialize_all_particles(ptr %148)
  %149 = load ptr, ptr %13, align 8, !tbaa !87
  %150 = getelementptr inbounds %struct.ParticleSystem, ptr %149, i64 0, i32 26
  %151 = load i32, ptr %150, align 8, !tbaa !26
  %152 = icmp sgt i32 %151, %132
  br i1 %152, label %153, label %164

153:                                              ; preds = %144
  %154 = getelementptr inbounds %struct.ParticleSystem, ptr %149, i64 0, i32 3
  %155 = load ptr, ptr %154, align 8, !tbaa !35
  %156 = sext i32 %132 to i64
  %157 = getelementptr inbounds %struct.ParticleData, ptr %155, i64 %156
  br label %158

158:                                              ; preds = %158, %153
  %159 = phi ptr [ %162, %158 ], [ %157, %153 ]
  %160 = phi i32 [ %161, %158 ], [ %132, %153 ]
  call void @reset_particle(ptr noundef %0, ptr noundef %159, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %1)
  %161 = add i32 %160, 1
  %162 = getelementptr inbounds %struct.ParticleData, ptr %159, i64 1
  %163 = icmp eq i32 %161, %151
  br i1 %163, label %164, label %158, !llvm.loop !359

164:                                              ; preds = %158, %144
  %165 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 43
  %166 = load ptr, ptr %165, align 8, !tbaa !46
  %167 = icmp eq ptr %166, null
  br i1 %167, label %170, label %168

168:                                              ; preds = %164
  %169 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  call void %169(ptr noundef nonnull %166) #14
  store ptr null, ptr %165, align 8, !tbaa !46
  br label %170

170:                                              ; preds = %168, %164
  %171 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 45
  store i32 0, ptr %171, align 4, !tbaa !47
  %172 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 44
  store i32 0, ptr %172, align 8, !tbaa !48
  %173 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 3
  %174 = load ptr, ptr %173, align 8, !tbaa !120
  %175 = getelementptr inbounds %struct.ParticleSystemModifierData, ptr %174, i64 0, i32 6
  %176 = load i16, ptr %175, align 4, !tbaa !292
  %177 = or i16 %176, 1
  store i16 %177, ptr %175, align 4, !tbaa !292
  %178 = fptoui float %1 to i32
  call void @BKE_ptcache_id_clear(ptr noundef %134, i32 noundef 3, i32 noundef %178) #14
  br label %179

179:                                              ; preds = %170, %139
  br i1 %21, label %317, label %180

180:                                              ; preds = %179
  %181 = call i32 @BKE_ptcache_read(ptr noundef nonnull %134, float noundef nofpclass(nan inf) %135) #14
  %182 = add i32 %181, -1
  %183 = icmp ult i32 %182, 2
  br i1 %183, label %184, label %230

184:                                              ; preds = %180
  %185 = icmp eq i32 %181, 2
  call fastcc void @cached_step(ptr noundef nonnull %0, float noundef nofpclass(nan inf) %1)
  %186 = load ptr, ptr %13, align 8, !tbaa !87
  %187 = getelementptr inbounds %struct.ParticleSystem, ptr %186, i64 0, i32 2
  %188 = load ptr, ptr %187, align 8, !tbaa !5
  %189 = getelementptr inbounds %struct.ParticleSettings, ptr %188, i64 0, i32 7
  %190 = load i16, ptr %189, align 8, !tbaa !18
  %191 = icmp eq i16 %190, 2
  br i1 %191, label %192, label %198

192:                                              ; preds = %184
  %193 = getelementptr inbounds %struct.ParticleSystem, ptr %186, i64 0, i32 25
  %194 = load i32, ptr %193, align 4, !tbaa !21
  %195 = and i32 %194, 512
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %192
  call void @psys_free_children(ptr noundef nonnull %186) #14
  br label %221

198:                                              ; preds = %192, %184
  %199 = getelementptr inbounds %struct.ParticleSettings, ptr %188, i64 0, i32 19
  %200 = load i16, ptr %199, align 4, !tbaa !24
  %201 = icmp eq i16 %200, 0
  br i1 %201, label %220, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %struct.ParticleSystem, ptr %186, i64 0, i32 28
  %204 = load i32, ptr %203, align 8, !tbaa !45
  %205 = load ptr, ptr %0, align 8, !tbaa !76
  %206 = getelementptr inbounds %struct.ParticleSystem, ptr %186, i64 0, i32 26
  %207 = load i32, ptr %206, align 8, !tbaa !26
  %208 = getelementptr inbounds %struct.ParticleSystem, ptr %186, i64 0, i32 39
  %209 = load ptr, ptr %208, align 8, !tbaa !14
  %210 = icmp eq ptr %209, null
  %211 = getelementptr inbounds %struct.ParticleSettings, ptr %188, i64 0, i32 90
  %212 = getelementptr inbounds %struct.ParticleSettings, ptr %188, i64 0, i32 89
  %213 = select i1 %210, ptr %212, ptr %211
  %214 = load i32, ptr %213, align 4, !tbaa !68
  %215 = getelementptr inbounds %struct.Scene, ptr %205, i64 0, i32 22
  %216 = call i32 @get_render_child_particle_number(ptr noundef nonnull %215, i32 noundef %214) #14
  %217 = mul nsw i32 %216, %207
  %218 = icmp eq i32 %204, %217
  br i1 %218, label %221, label %219

219:                                              ; preds = %202
  call fastcc void @distribute_particles(ptr noundef nonnull %0, i32 noundef 4)
  br label %221

220:                                              ; preds = %198
  call void @psys_free_children(ptr noundef nonnull %186) #14
  br label %221

221:                                              ; preds = %197, %202, %219, %220
  call fastcc void @psys_update_path_cache(ptr noundef nonnull %0, float noundef nofpclass(nan inf) %1)
  %222 = fptosi float %135 to i32
  call void @BKE_ptcache_validate(ptr noundef %18, i32 noundef %222) #14
  br i1 %185, label %223, label %1399

223:                                              ; preds = %221
  %224 = getelementptr inbounds %struct.PointCache, ptr %18, i64 0, i32 2
  %225 = load i32, ptr %224, align 8, !tbaa !16
  %226 = and i32 %225, 258
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %1399, label %228

228:                                              ; preds = %223
  %229 = call i32 @BKE_ptcache_write(ptr noundef nonnull %134, i32 noundef %222) #14
  br label %1399

230:                                              ; preds = %180
  %231 = getelementptr inbounds %struct.PointCache, ptr %18, i64 0, i32 2
  %232 = load i32, ptr %231, align 8, !tbaa !16
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %294, label %235

235:                                              ; preds = %230
  %236 = load i32, ptr %133, align 8, !tbaa !26
  %237 = icmp sgt i32 %236, 0
  br i1 %237, label %238, label %275

238:                                              ; preds = %235
  %239 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 3
  %240 = load ptr, ptr %239, align 8, !tbaa !35
  %241 = and i32 %236, 3
  %242 = icmp ult i32 %236, 4
  br i1 %242, label %263, label %243

243:                                              ; preds = %238
  %244 = and i32 %236, -4
  br label %245

245:                                              ; preds = %245, %243
  %246 = phi ptr [ %240, %243 ], [ %260, %245 ]
  %247 = phi i32 [ 0, %243 ], [ %261, %245 ]
  %248 = getelementptr inbounds %struct.ParticleData, ptr %246, i64 0, i32 17
  %249 = load i16, ptr %248, align 4, !tbaa !36
  %250 = or i16 %249, 2
  store i16 %250, ptr %248, align 4, !tbaa !36
  %251 = getelementptr inbounds %struct.ParticleData, ptr %246, i64 1, i32 17
  %252 = load i16, ptr %251, align 4, !tbaa !36
  %253 = or i16 %252, 2
  store i16 %253, ptr %251, align 4, !tbaa !36
  %254 = getelementptr inbounds %struct.ParticleData, ptr %246, i64 2, i32 17
  %255 = load i16, ptr %254, align 4, !tbaa !36
  %256 = or i16 %255, 2
  store i16 %256, ptr %254, align 4, !tbaa !36
  %257 = getelementptr inbounds %struct.ParticleData, ptr %246, i64 3, i32 17
  %258 = load i16, ptr %257, align 4, !tbaa !36
  %259 = or i16 %258, 2
  store i16 %259, ptr %257, align 4, !tbaa !36
  %260 = getelementptr inbounds %struct.ParticleData, ptr %246, i64 4
  %261 = add i32 %247, 4
  %262 = icmp eq i32 %261, %244
  br i1 %262, label %263, label %245, !llvm.loop !39

263:                                              ; preds = %245, %238
  %264 = phi ptr [ %240, %238 ], [ %260, %245 ]
  %265 = icmp eq i32 %241, 0
  br i1 %265, label %275, label %266

266:                                              ; preds = %263, %266
  %267 = phi ptr [ %272, %266 ], [ %264, %263 ]
  %268 = phi i32 [ %273, %266 ], [ 0, %263 ]
  %269 = getelementptr inbounds %struct.ParticleData, ptr %267, i64 0, i32 17
  %270 = load i16, ptr %269, align 4, !tbaa !36
  %271 = or i16 %270, 2
  store i16 %271, ptr %269, align 4, !tbaa !36
  %272 = getelementptr inbounds %struct.ParticleData, ptr %267, i64 1
  %273 = add i32 %268, 1
  %274 = icmp eq i32 %273, %241
  br i1 %274, label %275, label %266, !llvm.loop !360

275:                                              ; preds = %263, %266, %235
  %276 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 4
  %277 = load ptr, ptr %276, align 8, !tbaa !43
  %278 = icmp eq ptr %277, null
  br i1 %278, label %281, label %279

279:                                              ; preds = %275
  %280 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  call void %280(ptr noundef nonnull %277) #14
  store ptr null, ptr %276, align 8, !tbaa !43
  br label %281

281:                                              ; preds = %279, %275
  %282 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 28
  store i32 0, ptr %282, align 8, !tbaa !45
  %283 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 5
  %284 = load ptr, ptr %283, align 8, !tbaa !33
  call void @psys_free_path_cache(ptr noundef nonnull %14, ptr noundef %284) #14
  %285 = load ptr, ptr %17, align 8, !tbaa !15
  call void @BKE_ptcache_invalidate(ptr noundef %285) #14
  %286 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 43
  %287 = load ptr, ptr %286, align 8, !tbaa !46
  %288 = icmp eq ptr %287, null
  br i1 %288, label %291, label %289

289:                                              ; preds = %281
  %290 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  call void %290(ptr noundef nonnull %287) #14
  store ptr null, ptr %286, align 8, !tbaa !46
  br label %291

291:                                              ; preds = %281, %289
  %292 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 45
  store i32 0, ptr %292, align 4, !tbaa !47
  %293 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 44
  store i32 0, ptr %293, align 8, !tbaa !48
  br label %1399

294:                                              ; preds = %230
  %295 = icmp eq i32 %181, 3
  br i1 %295, label %296, label %301

296:                                              ; preds = %294
  %297 = getelementptr inbounds %struct.PointCache, ptr %18, i64 0, i32 4
  %298 = load i32, ptr %297, align 8, !tbaa !361
  %299 = sitofp i32 %298 to float
  %300 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 20
  store float %299, ptr %300, align 8, !tbaa !134
  call fastcc void @cached_step(ptr noundef nonnull %0, float noundef nofpclass(nan inf) %299)
  br label %301

301:                                              ; preds = %296, %294
  %302 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 20
  %303 = load float, ptr %302, align 8, !tbaa !134
  %304 = load i32, ptr %11, align 4, !tbaa !68
  %305 = sitofp i32 %304 to float
  %306 = fcmp fast oeq float %303, %305
  br i1 %306, label %307, label %318

307:                                              ; preds = %301
  %308 = load i32, ptr %231, align 8, !tbaa !16
  %309 = and i32 %308, 2
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %315

311:                                              ; preds = %307
  %312 = getelementptr inbounds %struct.PointCache, ptr %18, i64 0, i32 8
  %313 = load i32, ptr %312, align 8, !tbaa !362
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %318

315:                                              ; preds = %311, %307
  %316 = call i32 @BKE_ptcache_write(ptr noundef nonnull %134, i32 noundef %304) #14
  br label %318

317:                                              ; preds = %179
  call void @BKE_ptcache_invalidate(ptr noundef %18) #14
  br label %318

318:                                              ; preds = %315, %311, %301, %317
  %319 = load ptr, ptr %15, align 8, !tbaa !5
  %320 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 39
  %321 = load ptr, ptr %320, align 8, !tbaa !14
  %322 = icmp eq ptr %321, null
  br i1 %322, label %346, label %323

323:                                              ; preds = %318
  %324 = load ptr, ptr %17, align 8, !tbaa !15
  %325 = getelementptr inbounds %struct.PointCache, ptr %324, i64 0, i32 2
  %326 = load i32, ptr %325, align 8, !tbaa !16
  %327 = and i32 %326, 1
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %365

329:                                              ; preds = %323
  %330 = getelementptr inbounds %struct.ParticleSettings, ptr %319, i64 0, i32 7
  %331 = load i16, ptr %330, align 8, !tbaa !18
  %332 = icmp eq i16 %331, 2
  br i1 %332, label %333, label %337

333:                                              ; preds = %329
  %334 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 25
  %335 = load i32, ptr %334, align 4, !tbaa !21
  %336 = and i32 %335, 4
  br label %343

337:                                              ; preds = %329
  %338 = getelementptr inbounds %struct.ParticleSettings, ptr %319, i64 0, i32 11
  %339 = load i16, ptr %338, align 8, !tbaa !22
  switch i16 %339, label %340 [
    i16 1, label %346
    i16 3, label %346
  ]

340:                                              ; preds = %337
  %341 = icmp eq i16 %339, 4
  %342 = zext i1 %341 to i32
  br label %343

343:                                              ; preds = %340, %333
  %344 = phi i32 [ %336, %333 ], [ %342, %340 ]
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %365, label %346

346:                                              ; preds = %343, %337, %337, %318
  %347 = getelementptr inbounds %struct.ParticleSettings, ptr %319, i64 0, i32 89
  %348 = load i32, ptr %347, align 4, !tbaa !23
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %354, label %350

350:                                              ; preds = %346
  %351 = getelementptr inbounds %struct.ParticleSettings, ptr %319, i64 0, i32 19
  %352 = load i16, ptr %351, align 4, !tbaa !24
  %353 = icmp eq i16 %352, 0
  br i1 %353, label %354, label %365

354:                                              ; preds = %350, %346
  %355 = load ptr, ptr %17, align 8, !tbaa !15
  %356 = getelementptr inbounds %struct.PointCache, ptr %355, i64 0, i32 2
  %357 = load i32, ptr %356, align 8, !tbaa !16
  %358 = and i32 %357, 8
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %360, label %365

360:                                              ; preds = %354
  %361 = getelementptr inbounds %struct.ParticleSettings, ptr %319, i64 0, i32 30
  %362 = load i16, ptr %361, align 2, !tbaa !25
  %363 = sitofp i16 %362 to float
  %364 = fmul fast float %363, 0x3F847AE140000000
  br label %365

365:                                              ; preds = %323, %343, %350, %354, %360
  %366 = phi float [ %364, %360 ], [ 1.000000e+00, %354 ], [ 1.000000e+00, %350 ], [ 1.000000e+00, %343 ], [ 1.000000e+00, %323 ]
  %367 = load i32, ptr %133, align 8, !tbaa !26
  %368 = icmp sgt i32 %367, 0
  br i1 %368, label %369, label %434

369:                                              ; preds = %365
  %370 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 3
  %371 = load ptr, ptr %370, align 8, !tbaa !35
  %372 = getelementptr i8, ptr %14, i64 308
  %373 = load i32, ptr %372, align 4, !tbaa !124
  %374 = srem i32 %373, 1024
  %375 = sext i32 %374 to i64
  %376 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %375
  %377 = load i32, ptr %376, align 4, !tbaa !68
  %378 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %375
  %379 = load i32, ptr %378, align 4, !tbaa !68
  %380 = and i32 %367, 1
  %381 = icmp eq i32 %367, 1
  br i1 %381, label %417, label %382

382:                                              ; preds = %369
  %383 = and i32 %367, -2
  br label %384

384:                                              ; preds = %384, %382
  %385 = phi ptr [ %371, %382 ], [ %414, %384 ]
  %386 = phi i32 [ 0, %382 ], [ %413, %384 ]
  %387 = phi i32 [ 0, %382 ], [ %415, %384 ]
  %388 = mul i32 %379, %386
  %389 = add i32 %388, %377
  %390 = and i32 %389, 1023
  %391 = zext i32 %390 to i64
  %392 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %391
  %393 = load float, ptr %392, align 4, !tbaa !79
  %394 = fcmp fast ogt float %393, %366
  %395 = getelementptr inbounds %struct.ParticleData, ptr %385, i64 0, i32 17
  %396 = load i16, ptr %395, align 4, !tbaa !36
  %397 = and i16 %396, -3
  %398 = select i1 %394, i16 2, i16 0
  %399 = or i16 %397, %398
  store i16 %399, ptr %395, align 4, !tbaa !36
  %400 = or i32 %386, 1
  %401 = mul i32 %379, %400
  %402 = add i32 %401, %377
  %403 = and i32 %402, 1023
  %404 = zext i32 %403 to i64
  %405 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %404
  %406 = load float, ptr %405, align 4, !tbaa !79
  %407 = fcmp fast ogt float %406, %366
  %408 = getelementptr inbounds %struct.ParticleData, ptr %385, i64 1, i32 17
  %409 = load i16, ptr %408, align 4, !tbaa !36
  %410 = and i16 %409, -3
  %411 = select i1 %407, i16 2, i16 0
  %412 = or i16 %410, %411
  store i16 %412, ptr %408, align 4, !tbaa !36
  %413 = add nuw nsw i32 %386, 2
  %414 = getelementptr inbounds %struct.ParticleData, ptr %385, i64 2
  %415 = add i32 %387, 2
  %416 = icmp eq i32 %415, %383
  br i1 %416, label %417, label %384, !llvm.loop !363

417:                                              ; preds = %384, %369
  %418 = phi ptr [ %371, %369 ], [ %414, %384 ]
  %419 = phi i32 [ 0, %369 ], [ %413, %384 ]
  %420 = icmp eq i32 %380, 0
  br i1 %420, label %434, label %421

421:                                              ; preds = %417
  %422 = mul i32 %379, %419
  %423 = add i32 %422, %377
  %424 = and i32 %423, 1023
  %425 = zext i32 %424 to i64
  %426 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %425
  %427 = load float, ptr %426, align 4, !tbaa !79
  %428 = fcmp fast ogt float %427, %366
  %429 = getelementptr inbounds %struct.ParticleData, ptr %418, i64 0, i32 17
  %430 = load i16, ptr %429, align 4, !tbaa !36
  %431 = and i16 %430, -3
  %432 = select i1 %428, i16 2, i16 0
  %433 = or i16 %431, %432
  store i16 %433, ptr %429, align 4, !tbaa !36
  br label %434

434:                                              ; preds = %421, %417, %365
  %435 = icmp eq i32 %367, 0
  br i1 %435, label %1351, label %436

436:                                              ; preds = %434
  %437 = fptosi float %1 to i32
  %438 = load i32, ptr %11, align 4, !tbaa !68
  %439 = icmp eq i32 %438, %437
  br i1 %439, label %440, label %449

440:                                              ; preds = %436
  %441 = getelementptr inbounds %struct.ParticleSettings, ptr %16, i64 0, i32 53
  %442 = load float, ptr %441, align 4, !tbaa !113
  %443 = sitofp i32 %437 to float
  %444 = fcmp fast olt float %442, %443
  %445 = fptosi float %442 to i32
  %446 = sub i32 %445, %437
  %447 = select i1 %444, i32 %446, i32 0
  %448 = getelementptr inbounds %struct.ParticleSettings, ptr %16, i64 0, i32 67
  br label %485

449:                                              ; preds = %436
  %450 = getelementptr inbounds %struct.ParticleSettings, ptr %16, i64 0, i32 67
  %451 = load i16, ptr %450, align 4, !tbaa !230
  %452 = and i16 %451, 1
  %453 = icmp eq i16 %452, 0
  br i1 %453, label %485, label %454

454:                                              ; preds = %449
  %455 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 49
  %456 = load float, ptr %455, align 8, !tbaa !364
  %457 = fcmp fast olt float %456, 0x3F8446F860000000
  br i1 %457, label %458, label %496

458:                                              ; preds = %454
  store float 0x3F8446F860000000, ptr %455, align 8, !tbaa !364
  %459 = getelementptr inbounds %struct.BoidBrainData, ptr %7, i64 0, i32 1
  %460 = getelementptr inbounds %struct.BoidBrainData, ptr %7, i64 0, i32 3
  %461 = getelementptr inbounds %struct.BoidBrainData, ptr %7, i64 0, i32 4
  %462 = getelementptr inbounds %struct.BoidBrainData, ptr %7, i64 0, i32 2
  %463 = getelementptr inbounds %struct.BoidBrainData, ptr %7, i64 0, i32 11
  %464 = getelementptr inbounds %struct.ParticleTexture, ptr %8, i64 0, i32 4
  %465 = getelementptr inbounds [2 x float], ptr %5, i64 0, i64 1
  %466 = getelementptr inbounds %struct.SPHRangeData, ptr %4, i64 0, i32 2
  %467 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 5
  %468 = getelementptr inbounds %struct.SPHRangeData, ptr %4, i64 0, i32 5
  %469 = getelementptr inbounds %struct.SPHRangeData, ptr %4, i64 0, i32 4
  %470 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 2
  %471 = getelementptr inbounds %struct.SPHRangeData, ptr %4, i64 0, i32 6
  %472 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 1
  %473 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 6
  %474 = getelementptr inbounds float, ptr %3, i64 1
  %475 = getelementptr inbounds float, ptr %3, i64 2
  %476 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 9
  %477 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 8
  %478 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 8, i64 1
  %479 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 8, i64 2
  %480 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 7
  %481 = getelementptr inbounds float, ptr %6, i64 1
  %482 = getelementptr inbounds float, ptr %6, i64 2
  %483 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 3
  %484 = getelementptr inbounds %struct.BoidBrainData, ptr %7, i64 0, i32 7
  br label %527

485:                                              ; preds = %440, %449
  %486 = phi ptr [ %450, %449 ], [ %448, %440 ]
  %487 = phi i32 [ 0, %449 ], [ %447, %440 ]
  %488 = getelementptr i8, ptr %16, i64 194
  %489 = load i16, ptr %488, align 2, !tbaa !365
  %490 = sext i16 %489 to i32
  %491 = add nsw i32 %490, 1
  %492 = sitofp i32 %491 to float
  %493 = fdiv fast float 1.000000e+00, %492
  %494 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 49
  store float %493, ptr %494, align 8, !tbaa !364
  %495 = icmp slt i32 %487, 1
  br i1 %495, label %496, label %1351

496:                                              ; preds = %454, %485
  %497 = phi i32 [ %487, %485 ], [ 0, %454 ]
  %498 = phi ptr [ %486, %485 ], [ %450, %454 ]
  %499 = phi float [ %493, %485 ], [ %456, %454 ]
  %500 = getelementptr inbounds %struct.BoidBrainData, ptr %7, i64 0, i32 1
  %501 = getelementptr inbounds %struct.BoidBrainData, ptr %7, i64 0, i32 3
  %502 = getelementptr inbounds %struct.BoidBrainData, ptr %7, i64 0, i32 4
  %503 = getelementptr inbounds %struct.BoidBrainData, ptr %7, i64 0, i32 2
  %504 = getelementptr inbounds %struct.BoidBrainData, ptr %7, i64 0, i32 11
  %505 = getelementptr inbounds %struct.ParticleTexture, ptr %8, i64 0, i32 4
  %506 = getelementptr inbounds [2 x float], ptr %5, i64 0, i64 1
  %507 = getelementptr inbounds %struct.SPHRangeData, ptr %4, i64 0, i32 2
  %508 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 5
  %509 = getelementptr inbounds %struct.SPHRangeData, ptr %4, i64 0, i32 5
  %510 = getelementptr inbounds %struct.SPHRangeData, ptr %4, i64 0, i32 4
  %511 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 2
  %512 = getelementptr inbounds %struct.SPHRangeData, ptr %4, i64 0, i32 6
  %513 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 1
  %514 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 6
  %515 = getelementptr inbounds float, ptr %3, i64 1
  %516 = getelementptr inbounds float, ptr %3, i64 2
  %517 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 9
  %518 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 8
  %519 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 8, i64 1
  %520 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 8, i64 2
  %521 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 7
  %522 = getelementptr inbounds float, ptr %6, i64 1
  %523 = getelementptr inbounds float, ptr %6, i64 2
  %524 = getelementptr inbounds %struct.SPHData, ptr %9, i64 0, i32 3
  %525 = getelementptr inbounds %struct.BoidBrainData, ptr %7, i64 0, i32 7
  %526 = fcmp fast ugt float %499, 1.000000e+00
  br i1 %526, label %1351, label %527

527:                                              ; preds = %458, %496
  %528 = phi ptr [ %484, %458 ], [ %525, %496 ]
  %529 = phi ptr [ %483, %458 ], [ %524, %496 ]
  %530 = phi ptr [ %482, %458 ], [ %523, %496 ]
  %531 = phi ptr [ %481, %458 ], [ %522, %496 ]
  %532 = phi ptr [ %480, %458 ], [ %521, %496 ]
  %533 = phi ptr [ %479, %458 ], [ %520, %496 ]
  %534 = phi ptr [ %478, %458 ], [ %519, %496 ]
  %535 = phi ptr [ %477, %458 ], [ %518, %496 ]
  %536 = phi ptr [ %476, %458 ], [ %517, %496 ]
  %537 = phi ptr [ %475, %458 ], [ %516, %496 ]
  %538 = phi ptr [ %474, %458 ], [ %515, %496 ]
  %539 = phi ptr [ %473, %458 ], [ %514, %496 ]
  %540 = phi ptr [ %472, %458 ], [ %513, %496 ]
  %541 = phi ptr [ %471, %458 ], [ %512, %496 ]
  %542 = phi ptr [ %470, %458 ], [ %511, %496 ]
  %543 = phi ptr [ %469, %458 ], [ %510, %496 ]
  %544 = phi ptr [ %468, %458 ], [ %509, %496 ]
  %545 = phi ptr [ %467, %458 ], [ %508, %496 ]
  %546 = phi ptr [ %466, %458 ], [ %507, %496 ]
  %547 = phi ptr [ %465, %458 ], [ %506, %496 ]
  %548 = phi ptr [ %464, %458 ], [ %505, %496 ]
  %549 = phi ptr [ %463, %458 ], [ %504, %496 ]
  %550 = phi ptr [ %462, %458 ], [ %503, %496 ]
  %551 = phi ptr [ %461, %458 ], [ %502, %496 ]
  %552 = phi ptr [ %460, %458 ], [ %501, %496 ]
  %553 = phi ptr [ %459, %458 ], [ %500, %496 ]
  %554 = phi ptr [ %450, %458 ], [ %498, %496 ]
  %555 = phi i32 [ 0, %458 ], [ %497, %496 ]
  %556 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 49
  %557 = getelementptr %struct.ParticleSimulationData, ptr %0, i64 0, i32 5
  %558 = fadd fast float %1, -1.000000e+00
  %559 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 1
  %560 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 4
  %561 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 20
  br label %562

562:                                              ; preds = %527, %1348
  %563 = phi i32 [ %1349, %1348 ], [ %555, %527 ]
  %564 = load float, ptr %556, align 8, !tbaa !364
  %565 = fcmp fast ugt float %564, 1.000000e+00
  br i1 %565, label %1348, label %566

566:                                              ; preds = %562
  %567 = sitofp i32 %563 to float
  %568 = fadd fast float %558, %567
  br label %569

569:                                              ; preds = %566, %1344
  %570 = phi float [ %564, %566 ], [ %1345, %1344 ]
  %571 = phi float [ %564, %566 ], [ %1346, %1344 ]
  store float 0.000000e+00, ptr %557, align 8, !tbaa !366
  %572 = fadd fast float %568, %571
  %573 = load ptr, ptr %13, align 8, !tbaa !87
  %574 = getelementptr inbounds %struct.ParticleSystem, ptr %573, i64 0, i32 2
  %575 = load ptr, ptr %574, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %7) #14
  call void @llvm.lifetime.start.p0(i64 60, ptr nonnull %8) #14
  %576 = getelementptr inbounds %struct.ParticleSystem, ptr %573, i64 0, i32 20
  %577 = load float, ptr %576, align 8, !tbaa !134
  %578 = fsub fast float %572, %577
  %579 = call fast nofpclass(nan inf) float @psys_get_timestep(ptr noundef %0) #14
  %580 = fmul fast float %578, %579
  %581 = fcmp fast olt float %578, 0.000000e+00
  br i1 %581, label %582, label %632

582:                                              ; preds = %569
  %583 = getelementptr inbounds %struct.ParticleSystem, ptr %573, i64 0, i32 26
  %584 = load i32, ptr %583, align 8, !tbaa !26
  %585 = icmp sgt i32 %584, 0
  br i1 %585, label %586, label %1301

586:                                              ; preds = %582
  %587 = getelementptr inbounds %struct.ParticleSystem, ptr %573, i64 0, i32 3
  %588 = load ptr, ptr %587, align 8, !tbaa !35
  %589 = getelementptr inbounds %struct.ParticleSettings, ptr %575, i64 0, i32 82
  %590 = getelementptr inbounds %struct.ParticleSettings, ptr %575, i64 0, i32 83
  %591 = getelementptr i8, ptr %573, i64 308
  br label %592

592:                                              ; preds = %627, %586
  %593 = phi i32 [ %584, %586 ], [ %628, %627 ]
  %594 = phi ptr [ %588, %586 ], [ %630, %627 ]
  %595 = phi i32 [ 0, %586 ], [ %629, %627 ]
  %596 = getelementptr inbounds %struct.ParticleData, ptr %594, i64 0, i32 17
  %597 = load i16, ptr %596, align 4, !tbaa !36
  %598 = and i16 %597, 1
  %599 = icmp eq i16 %598, 0
  br i1 %599, label %600, label %627

600:                                              ; preds = %592
  call void @psys_get_texture(ptr noundef %0, ptr noundef nonnull %594, ptr noundef nonnull %8, i32 noundef 8, float noundef nofpclass(nan inf) %572) #14
  %601 = load float, ptr %589, align 8, !tbaa !238
  %602 = load float, ptr %548, align 4, !tbaa !367
  %603 = fmul fast float %602, %601
  %604 = getelementptr inbounds %struct.ParticleData, ptr %594, i64 0, i32 13
  store float %603, ptr %604, align 4, !tbaa !205
  %605 = load float, ptr %590, align 4, !tbaa !313
  %606 = fcmp fast ogt float %605, 0.000000e+00
  br i1 %606, label %607, label %625

607:                                              ; preds = %600
  %608 = add nuw nsw i32 %595, 1
  %609 = load i32, ptr %591, align 4, !tbaa !124
  %610 = srem i32 %609, 1024
  %611 = sext i32 %610 to i64
  %612 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %611
  %613 = load i32, ptr %612, align 4, !tbaa !68
  %614 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %611
  %615 = load i32, ptr %614, align 4, !tbaa !68
  %616 = mul i32 %615, %608
  %617 = add i32 %616, %613
  %618 = and i32 %617, 1023
  %619 = zext i32 %618 to i64
  %620 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %619
  %621 = load float, ptr %620, align 4, !tbaa !79
  %622 = fmul fast float %621, %605
  %623 = fsub fast float 1.000000e+00, %622
  %624 = fmul fast float %623, %603
  store float %624, ptr %604, align 4, !tbaa !205
  br label %625

625:                                              ; preds = %607, %600
  call void @reset_particle(ptr noundef %0, ptr noundef nonnull %594, float noundef nofpclass(nan inf) %580, float noundef nofpclass(nan inf) %572)
  %626 = load i32, ptr %583, align 8, !tbaa !26
  br label %627

627:                                              ; preds = %625, %592
  %628 = phi i32 [ %593, %592 ], [ %626, %625 ]
  %629 = add nuw nsw i32 %595, 1
  %630 = getelementptr inbounds %struct.ParticleData, ptr %594, i64 1
  %631 = icmp slt i32 %629, %628
  br i1 %631, label %592, label %1301, !llvm.loop !368

632:                                              ; preds = %569
  %633 = fptosi float %572 to i32
  %634 = add nsw i32 %633, 31415926
  %635 = getelementptr %struct.ParticleSystem, ptr %573, i64 0, i32 23
  %636 = load i32, ptr %635, align 4, !tbaa !124
  %637 = add nsw i32 %636, %634
  call void @BLI_srandom(i32 noundef %637) #14
  %638 = load i32, ptr %635, align 4, !tbaa !124
  %639 = add nsw i32 %638, %634
  %640 = call ptr @BLI_rng_new_srandom(i32 noundef %639) #14
  %641 = load ptr, ptr %13, align 8, !tbaa !87
  %642 = getelementptr inbounds %struct.ParticleSystem, ptr %641, i64 0, i32 42
  call void @pdEndEffectors(ptr noundef nonnull %642) #14
  %643 = load ptr, ptr %0, align 8, !tbaa !76
  %644 = load ptr, ptr %559, align 8, !tbaa !86
  %645 = load ptr, ptr %13, align 8, !tbaa !87
  %646 = getelementptr inbounds %struct.ParticleSystem, ptr %645, i64 0, i32 2
  %647 = load ptr, ptr %646, align 8, !tbaa !5
  %648 = getelementptr inbounds %struct.ParticleSettings, ptr %647, i64 0, i32 4
  %649 = load ptr, ptr %648, align 8, !tbaa !346
  %650 = call ptr @pdInitEffectors(ptr noundef %643, ptr noundef %644, ptr noundef %645, ptr noundef %649, i8 noundef zeroext 1) #14
  %651 = load ptr, ptr %13, align 8, !tbaa !87
  %652 = getelementptr inbounds %struct.ParticleSystem, ptr %651, i64 0, i32 42
  store ptr %650, ptr %652, align 8, !tbaa !349
  call void @precalc_guides(ptr noundef nonnull %0, ptr noundef %650) #14
  %653 = getelementptr inbounds %struct.ParticleSettings, ptr %575, i64 0, i32 7
  %654 = load i16, ptr %653, align 8, !tbaa !18
  %655 = icmp eq i16 %654, 2
  br i1 %655, label %660, label %656

656:                                              ; preds = %632
  %657 = load ptr, ptr %0, align 8, !tbaa !76
  %658 = load ptr, ptr %559, align 8, !tbaa !86
  %659 = call ptr @get_collider_cache(ptr noundef %657, ptr noundef %658, ptr noundef null) #14
  store ptr %659, ptr %560, align 8, !tbaa !369
  br label %660

660:                                              ; preds = %656, %632
  %661 = getelementptr inbounds %struct.ParticleSettings, ptr %575, i64 0, i32 11
  %662 = load i16, ptr %661, align 8, !tbaa !22
  %663 = sext i16 %662 to i32
  switch i32 %663, label %748 [
    i32 3, label %664
    i32 4, label %730
  ]

664:                                              ; preds = %660
  %665 = getelementptr inbounds %struct.ParticleSystem, ptr %573, i64 0, i32 17
  %666 = load ptr, ptr %665, align 8, !tbaa !181
  store ptr %0, ptr %7, align 8, !tbaa !370
  store ptr %575, ptr %553, align 8, !tbaa !372
  store float %572, ptr %552, align 4, !tbaa !373
  store float %578, ptr %551, align 8, !tbaa !374
  store float %579, ptr %550, align 8, !tbaa !375
  store ptr %640, ptr %549, align 8, !tbaa !376
  call void @psys_update_particle_tree(ptr noundef nonnull %573, float noundef nofpclass(nan inf) %572)
  call void @boids_precalc_rules(ptr noundef nonnull %575, float noundef nofpclass(nan inf) %572) #14
  %667 = icmp eq ptr %666, null
  br i1 %667, label %748, label %668

668:                                              ; preds = %664, %727
  %669 = phi ptr [ %728, %727 ], [ %666, %664 ]
  %670 = getelementptr inbounds %struct.ParticleTarget, ptr %669, i64 0, i32 2
  %671 = load ptr, ptr %670, align 8, !tbaa !177
  %672 = icmp eq ptr %671, null
  br i1 %672, label %727, label %673

673:                                              ; preds = %668
  %674 = getelementptr inbounds %struct.Object, ptr %671, i64 0, i32 109
  %675 = getelementptr inbounds %struct.ParticleTarget, ptr %669, i64 0, i32 3
  %676 = load i32, ptr %675, align 8, !tbaa !179
  %677 = add nsw i32 %676, -1
  %678 = call ptr @BLI_findlink(ptr noundef nonnull %674, i32 noundef %677) #14
  %679 = icmp eq ptr %678, null
  br i1 %679, label %727, label %680

680:                                              ; preds = %673
  %681 = getelementptr inbounds %struct.ParticleSystem, ptr %678, i64 0, i32 46
  %682 = load ptr, ptr %681, align 8, !tbaa !188
  %683 = icmp eq ptr %682, null
  br i1 %683, label %688, label %684

684:                                              ; preds = %680
  %685 = getelementptr inbounds %struct.ParticleSystem, ptr %678, i64 0, i32 21
  %686 = load float, ptr %685, align 4, !tbaa !189
  %687 = fcmp fast une float %686, %572
  br i1 %687, label %688, label %727

688:                                              ; preds = %684, %680
  %689 = getelementptr inbounds %struct.ParticleSystem, ptr %678, i64 0, i32 26
  call void @BLI_kdtree_free(ptr noundef %682) #14
  %690 = load i32, ptr %689, align 8, !tbaa !26
  %691 = call ptr @BLI_kdtree_new(i32 noundef %690) #14
  store ptr %691, ptr %681, align 8, !tbaa !188
  %692 = load i32, ptr %689, align 8, !tbaa !26
  %693 = icmp sgt i32 %692, 0
  br i1 %693, label %694, label %724

694:                                              ; preds = %688
  %695 = getelementptr inbounds %struct.ParticleSystem, ptr %678, i64 0, i32 3
  %696 = load ptr, ptr %695, align 8, !tbaa !35
  br label %697

697:                                              ; preds = %717, %694
  %698 = phi i32 [ %718, %717 ], [ %692, %694 ]
  %699 = phi i32 [ %719, %717 ], [ 0, %694 ]
  %700 = phi ptr [ %720, %717 ], [ %696, %694 ]
  %701 = getelementptr inbounds %struct.ParticleData, ptr %700, i64 0, i32 17
  %702 = load i16, ptr %701, align 4, !tbaa !36
  %703 = and i16 %702, 3
  %704 = icmp eq i16 %703, 0
  br i1 %704, label %705, label %717

705:                                              ; preds = %697
  %706 = getelementptr inbounds %struct.ParticleData, ptr %700, i64 0, i32 18
  %707 = load i16, ptr %706, align 2, !tbaa !173
  %708 = icmp eq i16 %707, 3
  br i1 %708, label %709, label %717

709:                                              ; preds = %705
  %710 = getelementptr inbounds %struct.ParticleKey, ptr %700, i64 0, i32 4
  %711 = load float, ptr %710, align 4, !tbaa !174
  %712 = fcmp fast oeq float %711, %572
  %713 = load ptr, ptr %681, align 8, !tbaa !188
  %714 = getelementptr inbounds %struct.ParticleData, ptr %700, i64 0, i32 1
  %715 = select i1 %712, ptr %714, ptr %700
  call void @BLI_kdtree_insert(ptr noundef %713, i32 noundef %699, ptr noundef nonnull %715) #14
  %716 = load i32, ptr %689, align 8, !tbaa !26
  br label %717

717:                                              ; preds = %709, %705, %697
  %718 = phi i32 [ %716, %709 ], [ %698, %705 ], [ %698, %697 ]
  %719 = add nuw nsw i32 %699, 1
  %720 = getelementptr inbounds %struct.ParticleData, ptr %700, i64 1
  %721 = icmp slt i32 %719, %718
  br i1 %721, label %697, label %722, !llvm.loop !190

722:                                              ; preds = %717
  %723 = load ptr, ptr %681, align 8, !tbaa !188
  br label %724

724:                                              ; preds = %722, %688
  %725 = phi ptr [ %723, %722 ], [ %691, %688 ]
  call void @BLI_kdtree_balance(ptr noundef %725) #14
  %726 = getelementptr inbounds %struct.ParticleSystem, ptr %678, i64 0, i32 21
  store float %572, ptr %726, align 4, !tbaa !189
  br label %727

727:                                              ; preds = %724, %684, %673, %668
  %728 = load ptr, ptr %669, align 8, !tbaa !183
  %729 = icmp eq ptr %728, null
  br i1 %729, label %748, label %668, !llvm.loop !377

730:                                              ; preds = %660
  %731 = getelementptr inbounds %struct.ParticleSystem, ptr %573, i64 0, i32 17
  %732 = load ptr, ptr %731, align 8, !tbaa !181
  call fastcc void @psys_update_particle_bvhtree(ptr noundef nonnull %573, float noundef nofpclass(nan inf) %572)
  %733 = icmp eq ptr %732, null
  br i1 %733, label %748, label %734

734:                                              ; preds = %730, %745
  %735 = phi ptr [ %746, %745 ], [ %732, %730 ]
  %736 = getelementptr inbounds %struct.ParticleTarget, ptr %735, i64 0, i32 2
  %737 = load ptr, ptr %736, align 8, !tbaa !177
  %738 = icmp eq ptr %737, null
  br i1 %738, label %745, label %739

739:                                              ; preds = %734
  %740 = getelementptr inbounds %struct.Object, ptr %737, i64 0, i32 109
  %741 = getelementptr inbounds %struct.ParticleTarget, ptr %735, i64 0, i32 3
  %742 = load i32, ptr %741, align 8, !tbaa !179
  %743 = add nsw i32 %742, -1
  %744 = call ptr @BLI_findlink(ptr noundef nonnull %740, i32 noundef %743) #14
  call fastcc void @psys_update_particle_bvhtree(ptr noundef %744, float noundef nofpclass(nan inf) %572)
  br label %745

745:                                              ; preds = %739, %734
  %746 = load ptr, ptr %735, align 8, !tbaa !183
  %747 = icmp eq ptr %746, null
  br i1 %747, label %748, label %734, !llvm.loop !378

748:                                              ; preds = %745, %727, %730, %664, %660
  %749 = getelementptr inbounds %struct.ParticleSystem, ptr %573, i64 0, i32 3
  %750 = getelementptr inbounds %struct.ParticleSystem, ptr %573, i64 0, i32 26
  %751 = load i32, ptr %750, align 8, !tbaa !26
  %752 = icmp sgt i32 %751, 0
  br i1 %752, label %753, label %849

753:                                              ; preds = %748
  %754 = load ptr, ptr %749, align 8, !tbaa !35
  %755 = getelementptr inbounds %struct.ParticleSettings, ptr %575, i64 0, i32 82
  %756 = getelementptr inbounds %struct.ParticleSettings, ptr %575, i64 0, i32 83
  %757 = getelementptr inbounds %struct.ParticleSettings, ptr %575, i64 0, i32 5
  %758 = getelementptr inbounds %struct.ParticleSystem, ptr %573, i64 0, i32 40
  br label %759

759:                                              ; preds = %844, %753
  %760 = phi ptr [ %754, %753 ], [ %846, %844 ]
  %761 = phi i32 [ 0, %753 ], [ %845, %844 ]
  %762 = getelementptr inbounds %struct.ParticleData, ptr %760, i64 0, i32 17
  %763 = load i16, ptr %762, align 4, !tbaa !36
  %764 = and i16 %763, 3
  %765 = icmp eq i16 %764, 0
  br i1 %765, label %766, label %844

766:                                              ; preds = %759
  %767 = getelementptr inbounds %struct.ParticleData, ptr %760, i64 0, i32 1
  call void @copy_particle_key(ptr noundef nonnull %767, ptr noundef nonnull %760, i32 noundef 1) #14
  call void @psys_get_texture(ptr noundef nonnull %0, ptr noundef nonnull %760, ptr noundef nonnull %8, i32 noundef 8, float noundef nofpclass(nan inf) %572) #14
  %768 = load float, ptr %755, align 8, !tbaa !238
  %769 = load float, ptr %548, align 4, !tbaa !367
  %770 = fmul fast float %769, %768
  %771 = getelementptr inbounds %struct.ParticleData, ptr %760, i64 0, i32 13
  store float %770, ptr %771, align 4, !tbaa !205
  %772 = load float, ptr %756, align 4, !tbaa !313
  %773 = fcmp fast ogt float %772, 0.000000e+00
  br i1 %773, label %774, label %792

774:                                              ; preds = %766
  %775 = add nuw nsw i32 %761, 1
  %776 = load i32, ptr %635, align 4, !tbaa !124
  %777 = srem i32 %776, 1024
  %778 = sext i32 %777 to i64
  %779 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %778
  %780 = load i32, ptr %779, align 4, !tbaa !68
  %781 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %778
  %782 = load i32, ptr %781, align 4, !tbaa !68
  %783 = mul i32 %782, %775
  %784 = add i32 %783, %780
  %785 = and i32 %784, 1023
  %786 = zext i32 %785 to i64
  %787 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %786
  %788 = load float, ptr %787, align 4, !tbaa !79
  %789 = fmul fast float %788, %772
  %790 = fsub fast float 1.000000e+00, %789
  %791 = fmul fast float %790, %770
  store float %791, ptr %771, align 4, !tbaa !205
  br label %792

792:                                              ; preds = %774, %766
  %793 = getelementptr inbounds %struct.ParticleData, ptr %760, i64 0, i32 6
  %794 = load float, ptr %793, align 4, !tbaa !115
  %795 = getelementptr inbounds %struct.ParticleData, ptr %760, i64 0, i32 8
  %796 = load float, ptr %795, align 4, !tbaa !170
  %797 = getelementptr inbounds %struct.ParticleKey, ptr %760, i64 0, i32 4
  store float %578, ptr %797, align 4, !tbaa !174
  %798 = fcmp fast ugt float %796, %572
  br i1 %798, label %806, label %799

799:                                              ; preds = %792
  %800 = load float, ptr %576, align 8, !tbaa !134
  %801 = fcmp fast olt float %800, %796
  br i1 %801, label %802, label %806

802:                                              ; preds = %799
  %803 = call fast float @llvm.maxnum.f32(float %794, float %800)
  %804 = fsub fast float %796, %803
  store float %804, ptr %797, align 4, !tbaa !174
  %805 = getelementptr inbounds %struct.ParticleData, ptr %760, i64 0, i32 18
  store i16 4, ptr %805, align 2, !tbaa !173
  br label %814

806:                                              ; preds = %799, %792
  %807 = fcmp fast ugt float %794, %572
  br i1 %807, label %814, label %808

808:                                              ; preds = %806
  %809 = load float, ptr %576, align 8, !tbaa !134
  %810 = fcmp fast ult float %794, %809
  br i1 %810, label %814, label %811

811:                                              ; preds = %808
  call void @reset_particle(ptr noundef nonnull %0, ptr noundef nonnull %760, float noundef nofpclass(nan inf) %580, float noundef nofpclass(nan inf) %572)
  %812 = getelementptr inbounds %struct.ParticleData, ptr %760, i64 0, i32 18
  store i16 3, ptr %812, align 2, !tbaa !173
  %813 = fsub fast float %572, %794
  store float %813, ptr %797, align 4, !tbaa !174
  br label %814

814:                                              ; preds = %811, %808, %806, %802
  %815 = getelementptr inbounds %struct.ParticleData, ptr %760, i64 0, i32 18
  %816 = load i16, ptr %815, align 2, !tbaa !173
  %817 = icmp eq i16 %816, 2
  br i1 %817, label %818, label %830

818:                                              ; preds = %814
  %819 = load i32, ptr %757, align 8, !tbaa !222
  %820 = and i32 %819, 32
  %821 = icmp eq i32 %820, 0
  br i1 %821, label %822, label %833

822:                                              ; preds = %818
  %823 = load ptr, ptr %758, align 8, !tbaa !15
  %824 = getelementptr inbounds %struct.PointCache, ptr %823, i64 0, i32 3
  %825 = load i32, ptr %824, align 4, !tbaa !379
  %826 = sitofp i32 %825 to float
  %827 = fadd fast float %572, %826
  %828 = load float, ptr %793, align 4, !tbaa !115
  %829 = fcmp fast ogt float %827, %828
  br i1 %829, label %833, label %830

830:                                              ; preds = %822, %814
  %831 = load i16, ptr %661, align 8, !tbaa !22
  %832 = icmp eq i16 %831, 0
  br i1 %832, label %833, label %835

833:                                              ; preds = %830, %822, %818
  call void @reset_particle(ptr noundef nonnull %0, ptr noundef nonnull %760, float noundef nofpclass(nan inf) %580, float noundef nofpclass(nan inf) %572)
  %834 = load i16, ptr %815, align 2, !tbaa !173
  br label %835

835:                                              ; preds = %833, %830
  %836 = phi i16 [ %834, %833 ], [ %816, %830 ]
  %837 = add i16 %836, -3
  %838 = icmp ult i16 %837, 2
  br i1 %838, label %839, label %843

839:                                              ; preds = %835
  %840 = load i16, ptr %762, align 4, !tbaa !36
  %841 = and i16 %840, 3
  %842 = icmp eq i16 %841, 0
  br i1 %842, label %844, label %843

843:                                              ; preds = %839, %835
  store float -1.000000e+00, ptr %797, align 4, !tbaa !174
  br label %844

844:                                              ; preds = %843, %839, %759
  %845 = add nuw nsw i32 %761, 1
  %846 = getelementptr inbounds %struct.ParticleData, ptr %760, i64 1
  %847 = load i32, ptr %750, align 8, !tbaa !26
  %848 = icmp slt i32 %845, %847
  br i1 %848, label %759, label %849, !llvm.loop !380

849:                                              ; preds = %844, %748
  %850 = phi i32 [ %751, %748 ], [ %847, %844 ]
  %851 = load i16, ptr %661, align 8, !tbaa !22
  %852 = sext i16 %851 to i32
  switch i32 %852, label %1277 [
    i32 1, label %855
    i32 3, label %853
    i32 4, label %901
  ]

853:                                              ; preds = %849
  %854 = icmp sgt i32 %850, 0
  br i1 %854, label %879, label %1300

855:                                              ; preds = %849
  %856 = icmp sgt i32 %850, 0
  br i1 %856, label %857, label %1300

857:                                              ; preds = %855, %874
  %858 = phi i32 [ %875, %874 ], [ %850, %855 ]
  %859 = phi i64 [ %876, %874 ], [ 0, %855 ]
  %860 = load ptr, ptr %749, align 8, !tbaa !35
  %861 = getelementptr inbounds %struct.ParticleData, ptr %860, i64 %859
  %862 = getelementptr inbounds %struct.ParticleKey, ptr %861, i64 0, i32 4
  %863 = load float, ptr %862, align 4, !tbaa !174
  %864 = fcmp fast ogt float %863, 0.000000e+00
  br i1 %864, label %865, label %874

865:                                              ; preds = %857
  %866 = trunc i64 %859 to i32
  call fastcc void @basic_integrate(ptr noundef nonnull %0, i32 noundef %866, float noundef nofpclass(nan inf) %863, float noundef nofpclass(nan inf) %572)
  %867 = load ptr, ptr %560, align 8, !tbaa !369
  %868 = icmp eq ptr %867, null
  br i1 %868, label %871, label %869

869:                                              ; preds = %865
  %870 = load float, ptr %862, align 4, !tbaa !174
  call fastcc void @collision_check(ptr noundef nonnull %0, i32 noundef %866, float noundef nofpclass(nan inf) %870, float noundef nofpclass(nan inf) %572)
  br label %871

871:                                              ; preds = %869, %865
  %872 = load float, ptr %862, align 4, !tbaa !174
  call fastcc void @basic_rotate(ptr noundef %575, ptr noundef nonnull %861, float noundef nofpclass(nan inf) %872, float noundef nofpclass(nan inf) %579)
  %873 = load i32, ptr %750, align 8, !tbaa !26
  br label %874

874:                                              ; preds = %871, %857
  %875 = phi i32 [ %858, %857 ], [ %873, %871 ]
  %876 = add nuw nsw i64 %859, 1
  %877 = sext i32 %875 to i64
  %878 = icmp slt i64 %876, %877
  br i1 %878, label %857, label %1277, !llvm.loop !381

879:                                              ; preds = %853, %896
  %880 = phi i64 [ %897, %896 ], [ 0, %853 ]
  %881 = load ptr, ptr %749, align 8, !tbaa !35
  %882 = getelementptr inbounds %struct.ParticleData, ptr %881, i64 %880
  %883 = getelementptr inbounds %struct.ParticleKey, ptr %882, i64 0, i32 4
  %884 = load float, ptr %883, align 4, !tbaa !174
  %885 = fcmp fast ogt float %884, 0.000000e+00
  br i1 %885, label %886, label %896

886:                                              ; preds = %879
  store ptr null, ptr %528, align 8, !tbaa !382
  %887 = trunc i64 %880 to i32
  call void @boid_brain(ptr noundef nonnull %7, i32 noundef %887, ptr noundef nonnull %882) #14
  %888 = getelementptr inbounds %struct.ParticleData, ptr %881, i64 %880, i32 18
  %889 = load i16, ptr %888, align 2, !tbaa !173
  %890 = icmp eq i16 %889, 4
  br i1 %890, label %896, label %891

891:                                              ; preds = %886
  call void @boid_body(ptr noundef nonnull %7, ptr noundef nonnull %882) #14
  %892 = load ptr, ptr %560, align 8, !tbaa !369
  %893 = icmp eq ptr %892, null
  br i1 %893, label %896, label %894

894:                                              ; preds = %891
  %895 = load float, ptr %883, align 4, !tbaa !174
  call fastcc void @collision_check(ptr noundef nonnull %0, i32 noundef %887, float noundef nofpclass(nan inf) %895, float noundef nofpclass(nan inf) %572)
  br label %896

896:                                              ; preds = %894, %891, %886, %879
  %897 = add nuw nsw i64 %880, 1
  %898 = load i32, ptr %750, align 8, !tbaa !26
  %899 = sext i32 %898 to i64
  %900 = icmp slt i64 %897, %899
  br i1 %900, label %879, label %1277, !llvm.loop !383

901:                                              ; preds = %849
  call void @llvm.lifetime.start.p0(i64 152, ptr nonnull %9) #14
  %902 = load ptr, ptr %13, align 8, !tbaa !87
  %903 = getelementptr inbounds %struct.ParticleSystem, ptr %902, i64 0, i32 2
  %904 = load ptr, ptr %903, align 8, !tbaa !5
  call void @psys_sph_init(ptr noundef nonnull %0, ptr noundef nonnull %9)
  %905 = getelementptr inbounds %struct.ParticleSettings, ptr %904, i64 0, i32 3
  %906 = load ptr, ptr %905, align 8, !tbaa !196
  %907 = getelementptr inbounds %struct.SPHFluidSettings, ptr %906, i64 0, i32 15
  %908 = load i16, ptr %907, align 4, !tbaa !197
  %909 = icmp eq i16 %908, 0
  %910 = load i32, ptr %750, align 8, !tbaa !26
  %911 = icmp sgt i32 %910, 0
  br i1 %909, label %913, label %912

912:                                              ; preds = %901
  br i1 %911, label %1125, label %1271

913:                                              ; preds = %901
  br i1 %911, label %914, label %1001

914:                                              ; preds = %913
  %915 = getelementptr inbounds %struct.ParticleSettings, ptr %904, i64 0, i32 67
  br label %916

916:                                              ; preds = %996, %914
  %917 = phi i64 [ 0, %914 ], [ %997, %996 ]
  %918 = load ptr, ptr %749, align 8, !tbaa !35
  %919 = getelementptr inbounds %struct.ParticleData, ptr %918, i64 %917
  %920 = getelementptr inbounds %struct.ParticleKey, ptr %919, i64 0, i32 4
  %921 = load float, ptr %920, align 4, !tbaa !174
  %922 = fcmp fast ogt float %921, 0.000000e+00
  br i1 %922, label %923, label %996

923:                                              ; preds = %916
  %924 = trunc i64 %917 to i32
  call fastcc void @basic_integrate(ptr noundef nonnull %0, i32 noundef %924, float noundef nofpclass(nan inf) %921, float noundef nofpclass(nan inf) %572)
  %925 = load float, ptr %920, align 4, !tbaa !174
  %926 = load ptr, ptr %13, align 8, !tbaa !87
  %927 = getelementptr inbounds %struct.ParticleSystem, ptr %926, i64 0, i32 2
  %928 = load ptr, ptr %927, align 8, !tbaa !5
  %929 = getelementptr inbounds %struct.ParticleSettings, ptr %928, i64 0, i32 81
  %930 = load float, ptr %929, align 4, !tbaa !221
  %931 = getelementptr inbounds %struct.ParticleSettings, ptr %928, i64 0, i32 5
  %932 = load i32, ptr %931, align 8, !tbaa !222
  %933 = and i32 %932, 65536
  %934 = icmp eq i32 %933, 0
  br i1 %934, label %938, label %935

935:                                              ; preds = %923
  %936 = getelementptr inbounds %struct.ParticleData, ptr %918, i64 %917, i32 13
  %937 = load float, ptr %936, align 4, !tbaa !205
  br label %938

938:                                              ; preds = %935, %923
  %939 = phi fast float [ %937, %935 ], [ 1.000000e+00, %923 ]
  %940 = fmul fast float %939, %930
  %941 = call fast nofpclass(nan inf) float @psys_get_timestep(ptr noundef nonnull %0) #14
  %942 = fmul fast float %941, %925
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #14
  store ptr %919, ptr %540, align 8, !tbaa !194
  store float %940, ptr %542, align 8, !tbaa !195
  store i32 0, ptr %539, align 4, !tbaa !229
  %943 = getelementptr inbounds %struct.ParticleKey, ptr %919, i64 0, i32 1
  %944 = getelementptr inbounds %struct.ParticleData, ptr %918, i64 %917, i32 1
  %945 = getelementptr inbounds %struct.ParticleData, ptr %918, i64 %917, i32 1, i32 1
  %946 = load float, ptr %943, align 4, !tbaa !79
  %947 = load float, ptr %945, align 4, !tbaa !79
  %948 = fsub fast float %946, %947
  %949 = getelementptr inbounds %struct.ParticleKey, ptr %919, i64 0, i32 1, i64 1
  %950 = load float, ptr %949, align 4, !tbaa !79
  %951 = getelementptr inbounds %struct.ParticleData, ptr %918, i64 %917, i32 1, i32 1, i64 1
  %952 = load float, ptr %951, align 4, !tbaa !79
  %953 = fsub fast float %950, %952
  %954 = getelementptr inbounds %struct.ParticleKey, ptr %919, i64 0, i32 1, i64 2
  %955 = load float, ptr %954, align 4, !tbaa !79
  %956 = getelementptr inbounds %struct.ParticleData, ptr %918, i64 %917, i32 1, i32 1, i64 2
  %957 = load float, ptr %956, align 4, !tbaa !79
  %958 = fsub fast float %955, %957
  %959 = fdiv fast float 1.000000e+00, %942
  %960 = fmul fast float %948, %959
  store float %960, ptr %6, align 4, !tbaa !79
  %961 = fmul fast float %953, %959
  store float %961, ptr %531, align 4, !tbaa !79
  %962 = fmul fast float %958, %959
  store float %962, ptr %530, align 4, !tbaa !79
  call void @copy_particle_key(ptr noundef nonnull %919, ptr noundef nonnull %944, i32 noundef 0) #14
  %963 = load ptr, ptr %536, align 8, !tbaa !384
  call fastcc void @integrate_particle(ptr noundef nonnull %928, ptr noundef nonnull %919, float noundef nofpclass(nan inf) %942, ptr noundef nonnull %6, ptr noundef %963, ptr noundef nonnull %9)
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #14
  %964 = load ptr, ptr %560, align 8, !tbaa !369
  %965 = icmp eq ptr %964, null
  br i1 %965, label %968, label %966

966:                                              ; preds = %938
  %967 = load float, ptr %920, align 4, !tbaa !174
  call fastcc void @collision_check(ptr noundef nonnull %0, i32 noundef %924, float noundef nofpclass(nan inf) %967, float noundef nofpclass(nan inf) %572)
  br label %968

968:                                              ; preds = %966, %938
  %969 = load float, ptr %920, align 4, !tbaa !174
  call fastcc void @basic_rotate(ptr noundef %904, ptr noundef nonnull %919, float noundef nofpclass(nan inf) %969, float noundef nofpclass(nan inf) %579)
  %970 = load i16, ptr %915, align 4, !tbaa !230
  %971 = and i16 %970, 1
  %972 = icmp eq i16 %971, 0
  br i1 %972, label %996, label %973

973:                                              ; preds = %968
  %974 = load float, ptr %945, align 4, !tbaa !79
  %975 = load float, ptr %535, align 4, !tbaa !79
  %976 = fsub fast float %974, %975
  %977 = load float, ptr %534, align 8, !tbaa !79
  %978 = load float, ptr %533, align 4, !tbaa !79
  %979 = fmul fast float %976, %976
  %980 = load <2 x float>, ptr %951, align 4, !tbaa !79
  %981 = insertelement <2 x float> poison, float %977, i64 0
  %982 = insertelement <2 x float> %981, float %978, i64 1
  %983 = fsub fast <2 x float> %980, %982
  %984 = fmul fast <2 x float> %983, %983
  %985 = extractelement <2 x float> %984, i64 0
  %986 = fadd fast float %985, %979
  %987 = extractelement <2 x float> %984, i64 1
  %988 = fadd fast float %986, %987
  %989 = call fast float @llvm.sqrt.f32(float %988)
  %990 = load float, ptr %557, align 8, !tbaa !366
  %991 = fmul fast float %989, %580
  %992 = load float, ptr %532, align 8, !tbaa !232
  %993 = fdiv fast float %991, %992
  %994 = fcmp fast olt float %990, %993
  br i1 %994, label %995, label %996

995:                                              ; preds = %973
  store float %993, ptr %557, align 8, !tbaa !366
  br label %996

996:                                              ; preds = %995, %973, %968, %916
  %997 = add nuw nsw i64 %917, 1
  %998 = load i32, ptr %750, align 8, !tbaa !26
  %999 = sext i32 %998 to i64
  %1000 = icmp slt i64 %997, %999
  br i1 %1000, label %916, label %1001, !llvm.loop !385

1001:                                             ; preds = %996, %913
  %1002 = load ptr, ptr %574, align 8, !tbaa !5
  %1003 = getelementptr inbounds %struct.ParticleSettings, ptr %1002, i64 0, i32 3
  %1004 = load ptr, ptr %1003, align 8, !tbaa !196
  %1005 = getelementptr inbounds %struct.ParticleSystem, ptr %573, i64 0, i32 43
  %1006 = getelementptr inbounds %struct.SPHFluidSettings, ptr %1004, i64 0, i32 4
  %1007 = load float, ptr %1006, align 4, !tbaa !299
  %1008 = getelementptr inbounds %struct.SPHFluidSettings, ptr %1004, i64 0, i32 3
  %1009 = load float, ptr %1008, align 4, !tbaa !386
  %1010 = fmul fast float %579, 2.500000e+01
  %1011 = getelementptr inbounds %struct.SPHFluidSettings, ptr %1004, i64 0, i32 13
  %1012 = load i32, ptr %1011, align 4, !tbaa !202
  %1013 = and i32 %1012, 1
  %1014 = icmp eq i32 %1013, 0
  br i1 %1014, label %1271, label %1015

1015:                                             ; preds = %1001
  %1016 = load ptr, ptr %1005, align 8, !tbaa !46
  %1017 = getelementptr inbounds %struct.SPHFluidSettings, ptr %1004, i64 0, i32 1
  %1018 = load float, ptr %1017, align 4, !tbaa !203
  %1019 = fcmp fast oeq float %1018, 0.000000e+00
  br i1 %1019, label %1271, label %1020

1020:                                             ; preds = %1015
  %1021 = getelementptr inbounds %struct.ParticleSystem, ptr %573, i64 0, i32 44
  %1022 = load i32, ptr %1021, align 8, !tbaa !48
  %1023 = icmp sgt i32 %1022, 0
  br i1 %1023, label %1024, label %1271

1024:                                             ; preds = %1020
  %1025 = load ptr, ptr %749, align 8, !tbaa !35
  %1026 = fmul fast float %1007, %1010
  %1027 = fmul fast float %1009, %1010
  br label %1031

1028:                                             ; preds = %1084
  %1029 = getelementptr inbounds %struct.ParticleSystem, ptr %573, i64 0, i32 45
  %1030 = zext i32 %1022 to i64
  br label %1088

1031:                                             ; preds = %1084, %1024
  %1032 = phi ptr [ %1016, %1024 ], [ %1086, %1084 ]
  %1033 = phi i32 [ 0, %1024 ], [ %1085, %1084 ]
  %1034 = getelementptr inbounds %struct.ParticleSpring, ptr %1032, i64 0, i32 1
  %1035 = load i32, ptr %1034, align 4, !tbaa !68
  %1036 = zext i32 %1035 to i64
  %1037 = getelementptr inbounds %struct.ParticleSpring, ptr %1032, i64 0, i32 1, i64 1
  %1038 = load i32, ptr %1037, align 4, !tbaa !68
  %1039 = zext i32 %1038 to i64
  %1040 = getelementptr inbounds %struct.ParticleData, ptr %1025, i64 %1039, i32 1
  %1041 = getelementptr inbounds %struct.ParticleData, ptr %1025, i64 %1036, i32 1
  %1042 = load float, ptr %1040, align 4, !tbaa !79
  %1043 = load float, ptr %1041, align 4, !tbaa !79
  %1044 = fsub fast float %1042, %1043
  %1045 = getelementptr inbounds float, ptr %1040, i64 1
  %1046 = getelementptr inbounds float, ptr %1041, i64 1
  %1047 = fmul fast float %1044, %1044
  %1048 = load <2 x float>, ptr %1045, align 4, !tbaa !79
  %1049 = load <2 x float>, ptr %1046, align 4, !tbaa !79
  %1050 = fsub fast <2 x float> %1048, %1049
  %1051 = fmul fast <2 x float> %1050, %1050
  %1052 = extractelement <2 x float> %1051, i64 0
  %1053 = fadd fast float %1052, %1047
  %1054 = extractelement <2 x float> %1051, i64 1
  %1055 = fadd fast float %1053, %1054
  %1056 = fcmp fast ogt float %1055, 0x38AA95A5C0000000
  %1057 = call fast float @llvm.sqrt.f32(float %1055)
  %1058 = select i1 %1056, float %1057, float 0.000000e+00
  %1059 = load float, ptr %1032, align 4, !tbaa !223
  %1060 = fmul fast float %1026, %1059
  %1061 = fadd fast float %1060, %1059
  %1062 = fcmp fast ogt float %1058, %1061
  br i1 %1062, label %1063, label %1067

1063:                                             ; preds = %1031
  %1064 = fsub fast float %1058, %1061
  %1065 = fmul fast float %1064, %1027
  %1066 = fadd fast float %1065, %1059
  br label %1074

1067:                                             ; preds = %1031
  %1068 = fsub fast float %1059, %1060
  %1069 = fcmp fast olt float %1058, %1068
  br i1 %1069, label %1070, label %1076

1070:                                             ; preds = %1067
  %1071 = fsub fast float %1068, %1058
  %1072 = fmul fast float %1071, %1027
  %1073 = fsub fast float %1059, %1072
  br label %1074

1074:                                             ; preds = %1070, %1063
  %1075 = phi float [ %1073, %1070 ], [ %1066, %1063 ]
  store float %1075, ptr %1032, align 4, !tbaa !223
  br label %1076

1076:                                             ; preds = %1074, %1067
  %1077 = phi float [ %1059, %1067 ], [ %1075, %1074 ]
  %1078 = getelementptr inbounds %struct.ParticleData, ptr %1025, i64 %1036, i32 13
  %1079 = load float, ptr %1078, align 4, !tbaa !205
  %1080 = fmul fast float %1079, 4.000000e+00
  %1081 = fcmp fast ogt float %1077, %1080
  br i1 %1081, label %1082, label %1084

1082:                                             ; preds = %1076
  %1083 = getelementptr inbounds %struct.ParticleSpring, ptr %1032, i64 0, i32 2
  store i32 1, ptr %1083, align 4, !tbaa !387
  br label %1084

1084:                                             ; preds = %1082, %1076
  %1085 = add nuw nsw i32 %1033, 1
  %1086 = getelementptr inbounds %struct.ParticleSpring, ptr %1032, i64 1
  %1087 = icmp eq i32 %1085, %1022
  br i1 %1087, label %1028, label %1031, !llvm.loop !388

1088:                                             ; preds = %1121, %1028
  %1089 = phi i64 [ %1030, %1028 ], [ %1090, %1121 ]
  %1090 = add nsw i64 %1089, -1
  %1091 = load ptr, ptr %1005, align 8, !tbaa !46
  %1092 = and i64 %1090, 4294967295
  %1093 = getelementptr inbounds %struct.ParticleSpring, ptr %1091, i64 %1092, i32 2
  %1094 = load i32, ptr %1093, align 4, !tbaa !387
  %1095 = icmp eq i32 %1094, 0
  br i1 %1095, label %1121, label %1096

1096:                                             ; preds = %1088
  %1097 = load i32, ptr %1021, align 8, !tbaa !48
  %1098 = add nsw i32 %1097, -1
  %1099 = zext i32 %1097 to i64
  %1100 = icmp eq i64 %1089, %1099
  br i1 %1100, label %1107, label %1101

1101:                                             ; preds = %1096
  %1102 = getelementptr inbounds %struct.ParticleSpring, ptr %1091, i64 %1092
  %1103 = sext i32 %1098 to i64
  %1104 = getelementptr inbounds %struct.ParticleSpring, ptr %1091, i64 %1103
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %1102, ptr noundef nonnull align 4 dereferenceable(16) %1104, i64 16, i1 false), !tbaa.struct !389
  %1105 = load i32, ptr %1021, align 8, !tbaa !48
  %1106 = add nsw i32 %1105, -1
  br label %1107

1107:                                             ; preds = %1101, %1096
  %1108 = phi i32 [ %1106, %1101 ], [ %1098, %1096 ]
  %1109 = phi i32 [ %1105, %1101 ], [ %1097, %1096 ]
  store i32 %1108, ptr %1021, align 8, !tbaa !48
  %1110 = load i32, ptr %1029, align 4, !tbaa !47
  %1111 = sdiv i32 %1110, 2
  %1112 = icmp sle i32 %1109, %1111
  %1113 = icmp sgt i32 %1110, 256
  %1114 = and i1 %1113, %1112
  br i1 %1114, label %1115, label %1121

1115:                                             ; preds = %1107
  store i32 %1111, ptr %1029, align 4, !tbaa !47
  %1116 = load ptr, ptr @MEM_reallocN_id, align 8, !tbaa !44
  %1117 = load ptr, ptr %1005, align 8, !tbaa !46
  %1118 = sext i32 %1111 to i64
  %1119 = shl nsw i64 %1118, 4
  %1120 = call ptr %1116(ptr noundef %1117, i64 noundef %1119, ptr noundef nonnull @__func__.sph_spring_delete) #14
  store ptr %1120, ptr %1005, align 8, !tbaa !46
  br label %1121

1121:                                             ; preds = %1115, %1107, %1088
  %1122 = icmp ugt i64 %1089, 1
  br i1 %1122, label %1088, label %1271, !llvm.loop !390

1123:                                             ; preds = %1135
  %1124 = icmp sgt i32 %1136, 0
  br i1 %1124, label %1144, label %1271

1125:                                             ; preds = %912, %1135
  %1126 = phi i32 [ %1136, %1135 ], [ %910, %912 ]
  %1127 = phi i64 [ %1137, %1135 ], [ 0, %912 ]
  %1128 = load ptr, ptr %749, align 8, !tbaa !35
  %1129 = getelementptr inbounds %struct.ParticleData, ptr %1128, i64 %1127, i32 0, i32 4
  %1130 = load float, ptr %1129, align 4, !tbaa !174
  %1131 = fcmp fast ogt float %1130, 0.000000e+00
  br i1 %1131, label %1132, label %1135

1132:                                             ; preds = %1125
  %1133 = trunc i64 %1127 to i32
  call fastcc void @basic_integrate(ptr noundef nonnull %0, i32 noundef %1133, float noundef nofpclass(nan inf) %1130, float noundef nofpclass(nan inf) %572)
  %1134 = load i32, ptr %750, align 8, !tbaa !26
  br label %1135

1135:                                             ; preds = %1132, %1125
  %1136 = phi i32 [ %1126, %1125 ], [ %1134, %1132 ]
  %1137 = add nuw nsw i64 %1127, 1
  %1138 = sext i32 %1136 to i64
  %1139 = icmp slt i64 %1137, %1138
  br i1 %1139, label %1125, label %1123, !llvm.loop !391

1140:                                             ; preds = %1182
  %1141 = icmp sgt i32 %1183, 0
  br i1 %1141, label %1142, label %1271

1142:                                             ; preds = %1140
  %1143 = getelementptr inbounds %struct.ParticleSettings, ptr %904, i64 0, i32 67
  br label %1187

1144:                                             ; preds = %1123, %1182
  %1145 = phi i32 [ %1183, %1182 ], [ %1136, %1123 ]
  %1146 = phi i64 [ %1184, %1182 ], [ 0, %1123 ]
  %1147 = load ptr, ptr %749, align 8, !tbaa !35
  %1148 = getelementptr inbounds %struct.ParticleData, ptr %1147, i64 %1146
  %1149 = getelementptr inbounds %struct.ParticleKey, ptr %1148, i64 0, i32 4
  %1150 = load float, ptr %1149, align 4, !tbaa !174
  %1151 = fcmp fast ogt float %1150, 0.000000e+00
  br i1 %1151, label %1152, label %1182

1152:                                             ; preds = %1144
  %1153 = load ptr, ptr %9, align 8, !tbaa !44
  %1154 = getelementptr inbounds %struct.ParticleSystem, ptr %1153, i64 0, i32 2
  %1155 = load ptr, ptr %1154, align 8, !tbaa !5
  %1156 = getelementptr inbounds %struct.ParticleSettings, ptr %1155, i64 0, i32 3
  %1157 = load ptr, ptr %1156, align 8, !tbaa !196
  %1158 = load float, ptr %1157, align 4, !tbaa !204
  %1159 = getelementptr inbounds %struct.SPHFluidSettings, ptr %1157, i64 0, i32 13
  %1160 = load i32, ptr %1159, align 4, !tbaa !202
  %1161 = and i32 %1160, 16
  %1162 = icmp eq i32 %1161, 0
  br i1 %1162, label %1167, label %1163

1163:                                             ; preds = %1152
  %1164 = getelementptr inbounds %struct.ParticleSettings, ptr %1155, i64 0, i32 82
  %1165 = load float, ptr %1164, align 8, !tbaa !238
  %1166 = fmul fast float %1165, 4.000000e+00
  br label %1167

1167:                                             ; preds = %1163, %1152
  %1168 = phi fast float [ %1166, %1163 ], [ 1.000000e+00, %1152 ]
  %1169 = fmul fast float %1168, %1158
  call void @llvm.lifetime.start.p0(i64 8240, ptr nonnull %4) #14
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #14
  store float 0.000000e+00, ptr %5, align 4, !tbaa !79
  store float 0.000000e+00, ptr %547, align 4, !tbaa !79
  store ptr %5, ptr %546, align 8, !tbaa !211
  %1170 = load float, ptr %545, align 8, !tbaa !206
  %1171 = fmul fast float %1170, %1169
  store float %1171, ptr %544, align 8, !tbaa !213
  store ptr %1148, ptr %543, align 8, !tbaa !214
  %1172 = load float, ptr %542, align 8, !tbaa !195
  store float %1172, ptr %541, align 4, !tbaa !215
  call fastcc void @sph_evaluate_func(ptr noundef null, ptr noundef nonnull %9, ptr noundef nonnull %1148, ptr noundef nonnull %4, float noundef nofpclass(nan inf) %1169, ptr noundef nonnull @sphclassical_density_accum_cb)
  %1173 = load float, ptr %5, align 4, !tbaa !79
  %1174 = getelementptr inbounds %struct.SPHFluidSettings, ptr %1157, i64 0, i32 11
  %1175 = load float, ptr %1174, align 4, !tbaa !207
  %1176 = fmul fast float %1175, 0x3FECCCCCC0000000
  %1177 = call fast float @llvm.maxnum.f32(float %1173, float %1176)
  %1178 = fmul fast float %1175, 0x3FF19999A0000000
  %1179 = call fast float @llvm.minnum.f32(float %1177, float %1178)
  %1180 = getelementptr inbounds %struct.ParticleData, ptr %1147, i64 %1146, i32 14
  store float %1179, ptr %1180, align 8, !tbaa !236
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #14
  call void @llvm.lifetime.end.p0(i64 8240, ptr nonnull %4) #14
  %1181 = load i32, ptr %750, align 8, !tbaa !26
  br label %1182

1182:                                             ; preds = %1167, %1144
  %1183 = phi i32 [ %1145, %1144 ], [ %1181, %1167 ]
  %1184 = add nuw nsw i64 %1146, 1
  %1185 = sext i32 %1183 to i64
  %1186 = icmp slt i64 %1184, %1185
  br i1 %1186, label %1144, label %1140, !llvm.loop !392

1187:                                             ; preds = %1266, %1142
  %1188 = phi i64 [ 0, %1142 ], [ %1267, %1266 ]
  %1189 = load ptr, ptr %749, align 8, !tbaa !35
  %1190 = getelementptr inbounds %struct.ParticleData, ptr %1189, i64 %1188
  %1191 = getelementptr inbounds %struct.ParticleKey, ptr %1190, i64 0, i32 4
  %1192 = load float, ptr %1191, align 4, !tbaa !174
  %1193 = fcmp fast ogt float %1192, 0.000000e+00
  br i1 %1193, label %1194, label %1266

1194:                                             ; preds = %1187
  %1195 = load ptr, ptr %13, align 8, !tbaa !87
  %1196 = getelementptr inbounds %struct.ParticleSystem, ptr %1195, i64 0, i32 2
  %1197 = load ptr, ptr %1196, align 8, !tbaa !5
  %1198 = getelementptr inbounds %struct.ParticleSettings, ptr %1197, i64 0, i32 81
  %1199 = load float, ptr %1198, align 4, !tbaa !221
  %1200 = getelementptr inbounds %struct.ParticleSettings, ptr %1197, i64 0, i32 5
  %1201 = load i32, ptr %1200, align 8, !tbaa !222
  %1202 = and i32 %1201, 65536
  %1203 = icmp eq i32 %1202, 0
  br i1 %1203, label %1207, label %1204

1204:                                             ; preds = %1194
  %1205 = getelementptr inbounds %struct.ParticleData, ptr %1189, i64 %1188, i32 13
  %1206 = load float, ptr %1205, align 4, !tbaa !205
  br label %1207

1207:                                             ; preds = %1204, %1194
  %1208 = phi fast float [ %1206, %1204 ], [ 1.000000e+00, %1194 ]
  %1209 = fmul fast float %1208, %1199
  %1210 = call fast nofpclass(nan inf) float @psys_get_timestep(ptr noundef nonnull %0) #14
  %1211 = fmul fast float %1210, %1192
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %3) #14
  store ptr %1190, ptr %540, align 8, !tbaa !194
  store float %1209, ptr %542, align 8, !tbaa !195
  store i32 0, ptr %539, align 4, !tbaa !229
  %1212 = getelementptr inbounds %struct.ParticleKey, ptr %1190, i64 0, i32 1
  %1213 = getelementptr inbounds %struct.ParticleData, ptr %1189, i64 %1188, i32 1
  %1214 = getelementptr inbounds %struct.ParticleData, ptr %1189, i64 %1188, i32 1, i32 1
  %1215 = load float, ptr %1212, align 4, !tbaa !79
  %1216 = load float, ptr %1214, align 4, !tbaa !79
  %1217 = fsub fast float %1215, %1216
  %1218 = getelementptr inbounds %struct.ParticleKey, ptr %1190, i64 0, i32 1, i64 1
  %1219 = load float, ptr %1218, align 4, !tbaa !79
  %1220 = getelementptr inbounds %struct.ParticleData, ptr %1189, i64 %1188, i32 1, i32 1, i64 1
  %1221 = load float, ptr %1220, align 4, !tbaa !79
  %1222 = fsub fast float %1219, %1221
  %1223 = getelementptr inbounds %struct.ParticleKey, ptr %1190, i64 0, i32 1, i64 2
  %1224 = load float, ptr %1223, align 4, !tbaa !79
  %1225 = getelementptr inbounds %struct.ParticleData, ptr %1189, i64 %1188, i32 1, i32 1, i64 2
  %1226 = load float, ptr %1225, align 4, !tbaa !79
  %1227 = fsub fast float %1224, %1226
  %1228 = fdiv fast float 1.000000e+00, %1211
  %1229 = fmul fast float %1217, %1228
  store float %1229, ptr %3, align 4, !tbaa !79
  %1230 = fmul fast float %1222, %1228
  store float %1230, ptr %538, align 4, !tbaa !79
  %1231 = fmul fast float %1227, %1228
  store float %1231, ptr %537, align 4, !tbaa !79
  call void @copy_particle_key(ptr noundef nonnull %1190, ptr noundef nonnull %1213, i32 noundef 0) #14
  %1232 = load ptr, ptr %536, align 8, !tbaa !384
  call fastcc void @integrate_particle(ptr noundef nonnull %1197, ptr noundef nonnull %1190, float noundef nofpclass(nan inf) %1211, ptr noundef nonnull %3, ptr noundef %1232, ptr noundef nonnull %9)
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %3) #14
  %1233 = load ptr, ptr %560, align 8, !tbaa !369
  %1234 = icmp eq ptr %1233, null
  br i1 %1234, label %1238, label %1235

1235:                                             ; preds = %1207
  %1236 = load float, ptr %1191, align 4, !tbaa !174
  %1237 = trunc i64 %1188 to i32
  call fastcc void @collision_check(ptr noundef nonnull %0, i32 noundef %1237, float noundef nofpclass(nan inf) %1236, float noundef nofpclass(nan inf) %572)
  br label %1238

1238:                                             ; preds = %1235, %1207
  %1239 = load float, ptr %1191, align 4, !tbaa !174
  call fastcc void @basic_rotate(ptr noundef %904, ptr noundef nonnull %1190, float noundef nofpclass(nan inf) %1239, float noundef nofpclass(nan inf) %579)
  %1240 = load i16, ptr %1143, align 4, !tbaa !230
  %1241 = and i16 %1240, 1
  %1242 = icmp eq i16 %1241, 0
  br i1 %1242, label %1266, label %1243

1243:                                             ; preds = %1238
  %1244 = load float, ptr %1214, align 4, !tbaa !79
  %1245 = load float, ptr %535, align 4, !tbaa !79
  %1246 = fsub fast float %1244, %1245
  %1247 = load float, ptr %534, align 8, !tbaa !79
  %1248 = load float, ptr %533, align 4, !tbaa !79
  %1249 = fmul fast float %1246, %1246
  %1250 = load <2 x float>, ptr %1220, align 4, !tbaa !79
  %1251 = insertelement <2 x float> poison, float %1247, i64 0
  %1252 = insertelement <2 x float> %1251, float %1248, i64 1
  %1253 = fsub fast <2 x float> %1250, %1252
  %1254 = fmul fast <2 x float> %1253, %1253
  %1255 = extractelement <2 x float> %1254, i64 0
  %1256 = fadd fast float %1255, %1249
  %1257 = extractelement <2 x float> %1254, i64 1
  %1258 = fadd fast float %1256, %1257
  %1259 = call fast float @llvm.sqrt.f32(float %1258)
  %1260 = load float, ptr %557, align 8, !tbaa !366
  %1261 = fmul fast float %1259, %580
  %1262 = load float, ptr %532, align 8, !tbaa !232
  %1263 = fdiv fast float %1261, %1262
  %1264 = fcmp fast olt float %1260, %1263
  br i1 %1264, label %1265, label %1266

1265:                                             ; preds = %1243
  store float %1263, ptr %557, align 8, !tbaa !366
  br label %1266

1266:                                             ; preds = %1265, %1243, %1238, %1187
  %1267 = add nuw nsw i64 %1188, 1
  %1268 = load i32, ptr %750, align 8, !tbaa !26
  %1269 = sext i32 %1268 to i64
  %1270 = icmp slt i64 %1267, %1269
  br i1 %1270, label %1187, label %1271, !llvm.loop !393

1271:                                             ; preds = %1266, %1121, %1140, %1123, %1020, %1015, %1001, %912
  %1272 = load ptr, ptr %529, align 8, !tbaa !192
  %1273 = icmp eq ptr %1272, null
  br i1 %1273, label %1275, label %1274

1274:                                             ; preds = %1271
  call void @BLI_edgehash_free(ptr noundef nonnull %1272, ptr noundef null) #14
  br label %1275

1275:                                             ; preds = %1274, %1271
  call void @llvm.lifetime.end.p0(i64 152, ptr nonnull %9) #14
  %1276 = load i32, ptr %750, align 8, !tbaa !26
  br label %1277

1277:                                             ; preds = %896, %874, %1275, %849
  %1278 = phi i32 [ %850, %849 ], [ %1276, %1275 ], [ %875, %874 ], [ %898, %896 ]
  %1279 = icmp sgt i32 %1278, 0
  br i1 %1279, label %1280, label %1300

1280:                                             ; preds = %1277
  %1281 = load ptr, ptr %749, align 8, !tbaa !35
  %1282 = zext i32 %1278 to i64
  br label %1283

1283:                                             ; preds = %1297, %1280
  %1284 = phi i64 [ 0, %1280 ], [ %1298, %1297 ]
  %1285 = getelementptr inbounds %struct.ParticleData, ptr %1281, i64 %1284, i32 0, i32 4
  %1286 = load float, ptr %1285, align 4, !tbaa !174
  %1287 = fcmp fast ogt float %1286, 0.000000e+00
  br i1 %1287, label %1288, label %1297

1288:                                             ; preds = %1283
  %1289 = getelementptr inbounds %struct.ParticleData, ptr %1281, i64 %1284, i32 18
  %1290 = load i16, ptr %1289, align 2, !tbaa !173
  %1291 = icmp eq i16 %1290, 4
  br i1 %1291, label %1292, label %1295

1292:                                             ; preds = %1288
  store i16 1, ptr %1289, align 2, !tbaa !173
  %1293 = getelementptr inbounds %struct.ParticleData, ptr %1281, i64 %1284, i32 8
  %1294 = load float, ptr %1293, align 4, !tbaa !170
  br label %1295

1295:                                             ; preds = %1292, %1288
  %1296 = phi float [ %1294, %1292 ], [ %572, %1288 ]
  store float %1296, ptr %1285, align 4, !tbaa !174
  br label %1297

1297:                                             ; preds = %1295, %1283
  %1298 = add nuw nsw i64 %1284, 1
  %1299 = icmp eq i64 %1298, %1282
  br i1 %1299, label %1300, label %1283, !llvm.loop !394

1300:                                             ; preds = %1297, %1277, %855, %853
  call void @free_collider_cache(ptr noundef nonnull %560) #14
  call void @BLI_rng_free(ptr noundef %640) #14
  br label %1301

1301:                                             ; preds = %627, %582, %1300
  call void @llvm.lifetime.end.p0(i64 60, ptr nonnull %8) #14
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %7) #14
  store float %572, ptr %561, align 8, !tbaa !134
  %1302 = load i16, ptr %554, align 4, !tbaa !230
  %1303 = and i16 %1302, 1
  %1304 = icmp eq i16 %1303, 0
  br i1 %1304, label %1344, label %1305

1305:                                             ; preds = %1301
  %1306 = load float, ptr %557, align 8, !tbaa !366
  %1307 = fcmp fast oeq float %1306, 0.000000e+00
  br i1 %1307, label %1308, label %1310

1308:                                             ; preds = %1305
  %1309 = load ptr, ptr %15, align 8, !tbaa !5
  br label %1318

1310:                                             ; preds = %1305
  %1311 = load float, ptr %556, align 8, !tbaa !364
  %1312 = load ptr, ptr %15, align 8, !tbaa !5
  %1313 = getelementptr inbounds %struct.ParticleSettings, ptr %1312, i64 0, i32 58
  %1314 = load float, ptr %1313, align 8, !tbaa !395
  %1315 = fmul fast float %1314, %1311
  %1316 = fdiv fast float %1315, %1306
  %1317 = fcmp fast olt float %1316, 0x3F8446F860000000
  br i1 %1317, label %1329, label %1318

1318:                                             ; preds = %1310, %1308
  %1319 = phi ptr [ %1312, %1310 ], [ %1309, %1308 ]
  %1320 = phi float [ %1316, %1310 ], [ 1.000000e+00, %1308 ]
  %1321 = getelementptr i8, ptr %1319, i64 194
  %1322 = load i16, ptr %1321, align 2, !tbaa !365
  %1323 = sext i16 %1322 to i32
  %1324 = add nsw i32 %1323, 1
  %1325 = sitofp i32 %1324 to float
  %1326 = fdiv fast float 1.000000e+00, %1325
  %1327 = fcmp fast ogt float %1320, %1326
  br i1 %1327, label %1328, label %1329

1328:                                             ; preds = %1318
  br label %1329

1329:                                             ; preds = %1328, %1318, %1310
  %1330 = phi float [ %1326, %1328 ], [ %1320, %1318 ], [ 0x3F8446F860000000, %1310 ]
  %1331 = load float, ptr %556, align 8, !tbaa !364
  %1332 = fcmp fast ogt float %1330, %1331
  %1333 = fmul fast float %1330, 0x3FB99999A0000000
  %1334 = fmul fast float %1331, 0x3FECCCCCC0000000
  %1335 = fadd fast float %1334, %1333
  %1336 = select i1 %1332, float %1335, float %1330
  store float %1336, ptr %556, align 8, !tbaa !364
  %1337 = fcmp fast oeq float %571, 1.000000e+00
  br i1 %1337, label %1344, label %1338

1338:                                             ; preds = %1329
  %1339 = fmul fast float %1336, 1.500000e+00
  %1340 = fadd fast float %1339, %571
  %1341 = fcmp fast ult float %1340, 1.000000e+00
  br i1 %1341, label %1344, label %1342

1342:                                             ; preds = %1338
  %1343 = fsub fast float 1.000000e+00, %571
  br label %1344

1344:                                             ; preds = %1342, %1338, %1329, %1301
  %1345 = phi float [ %570, %1301 ], [ %1343, %1342 ], [ %1336, %1338 ], [ %1336, %1329 ]
  %1346 = fadd fast float %1345, %571
  %1347 = fcmp fast ugt float %1346, 1.000000e+00
  br i1 %1347, label %1348, label %569, !llvm.loop !396

1348:                                             ; preds = %1344, %562
  %1349 = add i32 %563, 1
  %1350 = icmp eq i32 %563, 0
  br i1 %1350, label %1351, label %562, !llvm.loop !397

1351:                                             ; preds = %1348, %496, %485, %434
  br i1 %21, label %1358, label %1352

1352:                                             ; preds = %1351
  %1353 = fptosi float %135 to i32
  call void @BKE_ptcache_validate(ptr noundef %18, i32 noundef %1353) #14
  %1354 = load i32, ptr %11, align 4, !tbaa !68
  %1355 = icmp eq i32 %1354, %1353
  br i1 %1355, label %1358, label %1356

1356:                                             ; preds = %1352
  %1357 = call i32 @BKE_ptcache_write(ptr noundef nonnull %134, i32 noundef %1353) #14
  br label %1358

1358:                                             ; preds = %1352, %1356, %1351
  %1359 = load ptr, ptr %13, align 8, !tbaa !87
  %1360 = getelementptr inbounds %struct.ParticleSystem, ptr %1359, i64 0, i32 2
  %1361 = load ptr, ptr %1360, align 8, !tbaa !5
  %1362 = getelementptr inbounds %struct.ParticleSettings, ptr %1361, i64 0, i32 7
  %1363 = load i16, ptr %1362, align 8, !tbaa !18
  %1364 = icmp eq i16 %1363, 2
  br i1 %1364, label %1365, label %1371

1365:                                             ; preds = %1358
  %1366 = getelementptr inbounds %struct.ParticleSystem, ptr %1359, i64 0, i32 25
  %1367 = load i32, ptr %1366, align 4, !tbaa !21
  %1368 = and i32 %1367, 512
  %1369 = icmp eq i32 %1368, 0
  br i1 %1369, label %1370, label %1371

1370:                                             ; preds = %1365
  call void @psys_free_children(ptr noundef nonnull %1359) #14
  br label %1394

1371:                                             ; preds = %1365, %1358
  %1372 = getelementptr inbounds %struct.ParticleSettings, ptr %1361, i64 0, i32 19
  %1373 = load i16, ptr %1372, align 4, !tbaa !24
  %1374 = icmp eq i16 %1373, 0
  br i1 %1374, label %1393, label %1375

1375:                                             ; preds = %1371
  %1376 = getelementptr inbounds %struct.ParticleSystem, ptr %1359, i64 0, i32 28
  %1377 = load i32, ptr %1376, align 8, !tbaa !45
  %1378 = load ptr, ptr %0, align 8, !tbaa !76
  %1379 = getelementptr inbounds %struct.ParticleSystem, ptr %1359, i64 0, i32 26
  %1380 = load i32, ptr %1379, align 8, !tbaa !26
  %1381 = getelementptr inbounds %struct.ParticleSystem, ptr %1359, i64 0, i32 39
  %1382 = load ptr, ptr %1381, align 8, !tbaa !14
  %1383 = icmp eq ptr %1382, null
  %1384 = getelementptr inbounds %struct.ParticleSettings, ptr %1361, i64 0, i32 90
  %1385 = getelementptr inbounds %struct.ParticleSettings, ptr %1361, i64 0, i32 89
  %1386 = select i1 %1383, ptr %1385, ptr %1384
  %1387 = load i32, ptr %1386, align 4, !tbaa !68
  %1388 = getelementptr inbounds %struct.Scene, ptr %1378, i64 0, i32 22
  %1389 = call i32 @get_render_child_particle_number(ptr noundef nonnull %1388, i32 noundef %1387) #14
  %1390 = mul nsw i32 %1389, %1380
  %1391 = icmp eq i32 %1377, %1390
  br i1 %1391, label %1394, label %1392

1392:                                             ; preds = %1375
  call fastcc void @distribute_particles(ptr noundef nonnull %0, i32 noundef 4)
  br label %1394

1393:                                             ; preds = %1371
  call void @psys_free_children(ptr noundef nonnull %1359) #14
  br label %1394

1394:                                             ; preds = %1370, %1375, %1392, %1393
  %1395 = getelementptr inbounds %struct.ParticleSystem, ptr %14, i64 0, i32 15
  %1396 = load ptr, ptr %1395, align 8, !tbaa !102
  %1397 = icmp eq ptr %1396, null
  br i1 %1397, label %1399, label %1398

1398:                                             ; preds = %1394
  call void @end_latt_deform(ptr noundef nonnull %1396) #14
  store ptr null, ptr %1395, align 8, !tbaa !102
  br label %1399

1399:                                             ; preds = %291, %228, %223, %221, %1394, %1398
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #14
  call void @llvm.lifetime.end.p0(i64 200, ptr nonnull %10) #14
  ret void
}

declare void @free_keyed_keys(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @distribute_particles(ptr nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #2 {
  %3 = alloca [3 x float], align 8
  %4 = alloca [3 x float], align 8
  %5 = alloca [3 x float], align 8
  %6 = alloca [3 x i32], align 8
  %7 = alloca [3 x float], align 8
  %8 = alloca [3 x float], align 8
  %9 = alloca [3 x float], align 4
  %10 = alloca [3 x float], align 4
  %11 = alloca [3 x float], align 4
  %12 = alloca [4 x float], align 16
  %13 = alloca float, align 4
  %14 = alloca [3 x float], align 4
  %15 = alloca [3 x float], align 4
  %16 = alloca [3 x float], align 4
  %17 = alloca [3 x float], align 8
  %18 = alloca [3 x float], align 8
  %19 = alloca [3 x float], align 8
  %20 = alloca [3 x float], align 8
  %21 = alloca %struct.ListBase, align 8
  %22 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 3
  %23 = load ptr, ptr %22, align 8, !tbaa !120
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %32

25:                                               ; preds = %2
  %26 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !86
  %28 = getelementptr %struct.ParticleSimulationData, ptr %0, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !87
  %30 = tail call ptr @psys_get_modifier(ptr noundef %27, ptr noundef %29) #14
  %31 = icmp eq ptr %30, null
  br i1 %31, label %1966, label %32

32:                                               ; preds = %2, %25
  %33 = phi ptr [ %30, %25 ], [ %23, %2 ]
  %34 = getelementptr inbounds %struct.ParticleSystemModifierData, ptr %33, i64 0, i32 2
  %35 = load ptr, ptr %34, align 8, !tbaa !82
  %36 = icmp eq ptr %35, null
  br i1 %36, label %2014, label %37

37:                                               ; preds = %32
  %38 = load ptr, ptr %22, align 8, !tbaa !120
  %39 = getelementptr inbounds %struct.ParticleSystemModifierData, ptr %38, i64 0, i32 2
  %40 = load ptr, ptr %39, align 8, !tbaa !82
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %21) #14
  %41 = load ptr, ptr %0, align 8, !tbaa !76
  %42 = tail call i32 @BKE_scene_num_threads(ptr noundef %41) #14
  %43 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %44 = sext i32 %42 to i64
  %45 = shl nsw i64 %44, 5
  %46 = tail call ptr %43(i64 noundef %45, ptr noundef nonnull @.str.2) #14
  %47 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %48 = tail call ptr %47(i64 noundef 248, ptr noundef nonnull @.str.3) #14
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %48, ptr noundef nonnull align 8 dereferenceable(48) %0, i64 48, i1 false), !tbaa.struct !78
  %49 = getelementptr inbounds %struct.ParticleSimulationData, ptr %48, i64 0, i32 3
  %50 = load ptr, ptr %49, align 8, !tbaa !80
  %51 = getelementptr inbounds %struct.ParticleSystemModifierData, ptr %50, i64 0, i32 2
  %52 = load ptr, ptr %51, align 8, !tbaa !82
  %53 = getelementptr inbounds %struct.ParticleThreadContext, ptr %48, i64 0, i32 1
  store ptr %52, ptr %53, align 8, !tbaa !85
  %54 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 1
  %55 = load ptr, ptr %54, align 8, !tbaa !86
  %56 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 2
  %57 = load ptr, ptr %56, align 8, !tbaa !87
  %58 = getelementptr inbounds %struct.ParticleSystem, ptr %57, i64 0, i32 2
  %59 = load ptr, ptr %58, align 8, !tbaa !5
  %60 = getelementptr inbounds %struct.ParticleSettings, ptr %59, i64 0, i32 31
  %61 = load i16, ptr %60, align 4, !tbaa !88
  %62 = tail call ptr @give_current_material(ptr noundef %55, i16 noundef signext %61) #14
  %63 = getelementptr inbounds %struct.ParticleThreadContext, ptr %48, i64 0, i32 2
  store ptr %62, ptr %63, align 8, !tbaa !89
  tail call void @llvm.memset.p0.i64(ptr align 8 %46, i8 0, i64 %45, i1 false)
  %64 = icmp sgt i32 %42, 0
  br i1 %64, label %65, label %94

65:                                               ; preds = %37
  %66 = zext i32 %42 to i64
  %67 = and i64 %66, 1
  %68 = icmp eq i32 %42, 1
  br i1 %68, label %86, label %69

69:                                               ; preds = %65
  %70 = and i64 %66, 4294967294
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %83, %71 ]
  %73 = phi i64 [ 0, %69 ], [ %84, %71 ]
  %74 = getelementptr inbounds %struct.ParticleThread, ptr %46, i64 %72
  store ptr %48, ptr %74, align 8, !tbaa !90
  %75 = getelementptr inbounds %struct.ParticleThread, ptr %46, i64 %72, i32 3
  %76 = trunc i64 %72 to i32
  store i32 %76, ptr %75, align 8, !tbaa !92
  %77 = getelementptr inbounds %struct.ParticleThread, ptr %46, i64 %72, i32 4
  store i32 %42, ptr %77, align 4, !tbaa !93
  %78 = or i64 %72, 1
  %79 = getelementptr inbounds %struct.ParticleThread, ptr %46, i64 %78
  store ptr %48, ptr %79, align 8, !tbaa !90
  %80 = getelementptr inbounds %struct.ParticleThread, ptr %46, i64 %78, i32 3
  %81 = trunc i64 %78 to i32
  store i32 %81, ptr %80, align 8, !tbaa !92
  %82 = getelementptr inbounds %struct.ParticleThread, ptr %46, i64 %78, i32 4
  store i32 %42, ptr %82, align 4, !tbaa !93
  %83 = add nuw nsw i64 %72, 2
  %84 = add i64 %73, 2
  %85 = icmp eq i64 %84, %70
  br i1 %85, label %86, label %71, !llvm.loop !94

86:                                               ; preds = %71, %65
  %87 = phi i64 [ 0, %65 ], [ %83, %71 ]
  %88 = icmp eq i64 %67, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %struct.ParticleThread, ptr %46, i64 %87
  store ptr %48, ptr %90, align 8, !tbaa !90
  %91 = getelementptr inbounds %struct.ParticleThread, ptr %46, i64 %87, i32 3
  %92 = trunc i64 %87 to i32
  store i32 %92, ptr %91, align 8, !tbaa !92
  %93 = getelementptr inbounds %struct.ParticleThread, ptr %46, i64 %87, i32 4
  store i32 %42, ptr %93, align 4, !tbaa !93
  br label %94

94:                                               ; preds = %89, %86, %37
  %95 = load ptr, ptr %0, align 8, !tbaa !76
  %96 = load ptr, ptr %46, align 8, !tbaa !90
  %97 = getelementptr inbounds %struct.ParticleSimulationData, ptr %96, i64 0, i32 1
  %98 = load ptr, ptr %97, align 8, !tbaa !399
  %99 = getelementptr inbounds %struct.ParticleSimulationData, ptr %96, i64 0, i32 2
  %100 = load ptr, ptr %99, align 8, !tbaa !101
  %101 = getelementptr inbounds %struct.ParticleThread, ptr %46, i64 0, i32 4
  %102 = load i32, ptr %101, align 4, !tbaa !93
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %14) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %15) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %16) #14
  %103 = icmp eq ptr %98, null
  %104 = icmp eq ptr %100, null
  %105 = select i1 %103, i1 true, i1 %104
  br i1 %105, label %1941, label %106

106:                                              ; preds = %94
  %107 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 2
  %108 = load ptr, ptr %107, align 8, !tbaa !5
  %109 = icmp eq ptr %108, null
  br i1 %109, label %1941, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 26
  %112 = load i32, ptr %111, align 8, !tbaa !26
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %1941, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %struct.DerivedMesh, ptr %40, i64 0, i32 11
  %116 = load i32, ptr %115, align 8, !tbaa !54
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %125

118:                                              ; preds = %114
  %119 = getelementptr inbounds %struct.DerivedMesh, ptr %40, i64 0, i32 52
  %120 = load ptr, ptr %119, align 8, !tbaa !63
  %121 = tail call ptr %120(ptr noundef nonnull %40, i32 noundef 7) #14
  %122 = icmp eq ptr %121, null
  br i1 %122, label %123, label %125

123:                                              ; preds = %118
  %124 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str)
  br label %1941

125:                                              ; preds = %118, %114
  %126 = icmp eq i32 %1, 4
  br i1 %126, label %127, label %254

127:                                              ; preds = %125
  %128 = getelementptr inbounds %struct.ParticleSettings, ptr %108, i64 0, i32 19
  %129 = load i16, ptr %128, align 4, !tbaa !24
  %130 = icmp eq i16 %129, 2
  %131 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 23
  %132 = load i32, ptr %131, align 4, !tbaa !124
  %133 = add nsw i32 %132, 31415926
  %134 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 24
  %135 = load i32, ptr %134, align 8, !tbaa !400
  %136 = add nsw i32 %133, %135
  tail call void @BLI_srandom(i32 noundef %136) #14
  br i1 %130, label %920, label %137

137:                                              ; preds = %127
  %138 = load ptr, ptr %107, align 8, !tbaa !5
  %139 = getelementptr inbounds %struct.ParticleSettings, ptr %138, i64 0, i32 19
  %140 = load i16, ptr %139, align 4, !tbaa !24
  %141 = icmp eq i16 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %137
  %143 = load i32, ptr %111, align 8, !tbaa !26
  br label %168

144:                                              ; preds = %137
  %145 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 39
  %146 = load ptr, ptr %145, align 8, !tbaa !14
  %147 = icmp eq ptr %146, null
  %148 = getelementptr inbounds %struct.ParticleSettings, ptr %138, i64 0, i32 90
  %149 = getelementptr inbounds %struct.ParticleSettings, ptr %138, i64 0, i32 89
  %150 = select i1 %147, ptr %149, ptr %148
  %151 = load i32, ptr %150, align 4, !tbaa !68
  %152 = getelementptr inbounds %struct.Scene, ptr %95, i64 0, i32 22
  %153 = tail call i32 @get_render_child_particle_number(ptr noundef nonnull %152, i32 noundef %151) #14
  %154 = load ptr, ptr %107, align 8, !tbaa !5
  %155 = getelementptr inbounds %struct.ParticleSettings, ptr %154, i64 0, i32 19
  %156 = load i16, ptr %155, align 4, !tbaa !24
  %157 = icmp eq i16 %156, 0
  %158 = load i32, ptr %111, align 8, !tbaa !26
  br i1 %157, label %168, label %159

159:                                              ; preds = %144
  %160 = load ptr, ptr %145, align 8, !tbaa !14
  %161 = icmp eq ptr %160, null
  %162 = getelementptr inbounds %struct.ParticleSettings, ptr %154, i64 0, i32 90
  %163 = getelementptr inbounds %struct.ParticleSettings, ptr %154, i64 0, i32 89
  %164 = select i1 %161, ptr %163, ptr %162
  %165 = load i32, ptr %164, align 4, !tbaa !68
  %166 = tail call i32 @get_render_child_particle_number(ptr noundef nonnull %152, i32 noundef %165) #14
  %167 = load ptr, ptr %107, align 8, !tbaa !5
  br label %168

168:                                              ; preds = %159, %144, %142
  %169 = phi i32 [ %158, %159 ], [ %158, %144 ], [ %143, %142 ]
  %170 = phi i32 [ %153, %159 ], [ %153, %144 ], [ 0, %142 ]
  %171 = phi ptr [ %167, %159 ], [ %154, %144 ], [ %138, %142 ]
  %172 = phi i32 [ %166, %159 ], [ 0, %144 ], [ 0, %142 ]
  %173 = mul nsw i32 %172, %169
  %174 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 4
  %175 = load ptr, ptr %174, align 8, !tbaa !43
  %176 = icmp eq ptr %175, null
  br i1 %176, label %192, label %177

177:                                              ; preds = %168
  %178 = getelementptr inbounds %struct.ParticleSettings, ptr %171, i64 0, i32 19
  %179 = load i16, ptr %178, align 4, !tbaa !24
  %180 = icmp eq i16 %179, 0
  br i1 %180, label %188, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 28
  %183 = load i32, ptr %182, align 8, !tbaa !45
  %184 = icmp eq i32 %183, %173
  br i1 %184, label %185, label %188

185:                                              ; preds = %181
  %186 = sext i32 %173 to i64
  %187 = shl nsw i64 %186, 6
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %175, i8 0, i64 %187, i1 false)
  br label %205

188:                                              ; preds = %181, %177
  %189 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %189(ptr noundef nonnull %175) #14
  store ptr null, ptr %174, align 8, !tbaa !43
  %190 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 28
  store i32 0, ptr %190, align 8, !tbaa !45
  %191 = load ptr, ptr %107, align 8, !tbaa !5
  br label %192

192:                                              ; preds = %188, %168
  %193 = phi ptr [ %191, %188 ], [ %171, %168 ]
  %194 = getelementptr inbounds %struct.ParticleSettings, ptr %193, i64 0, i32 19
  %195 = load i16, ptr %194, align 4, !tbaa !24
  %196 = icmp eq i16 %195, 0
  br i1 %196, label %205, label %197

197:                                              ; preds = %192
  %198 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 28
  store i32 %173, ptr %198, align 8, !tbaa !45
  %199 = icmp eq i32 %173, 0
  br i1 %199, label %205, label %200

200:                                              ; preds = %197
  %201 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %202 = sext i32 %173 to i64
  %203 = shl nsw i64 %202, 6
  %204 = tail call ptr %201(i64 noundef %203, ptr noundef nonnull @.str.22) #14
  store ptr %204, ptr %174, align 8, !tbaa !43
  br label %205

205:                                              ; preds = %200, %197, %192, %185
  %206 = icmp sgt i32 %170, 0
  br i1 %206, label %207, label %253

207:                                              ; preds = %205
  %208 = load i32, ptr %111, align 8, !tbaa !26
  %209 = icmp sgt i32 %208, 0
  br i1 %209, label %210, label %253

210:                                              ; preds = %207
  %211 = load ptr, ptr %174, align 8, !tbaa !43
  br label %212

212:                                              ; preds = %248, %210
  %213 = phi i32 [ %249, %248 ], [ %208, %210 ]
  %214 = phi ptr [ %250, %248 ], [ %211, %210 ]
  %215 = phi i32 [ %251, %248 ], [ 0, %210 ]
  %216 = icmp sgt i32 %213, 0
  br i1 %216, label %217, label %248

217:                                              ; preds = %212, %243
  %218 = phi ptr [ %245, %243 ], [ %214, %212 ]
  %219 = phi i32 [ %244, %243 ], [ 0, %212 ]
  %220 = getelementptr inbounds %struct.ChildParticle, ptr %218, i64 0, i32 1
  store i32 %219, ptr %220, align 4, !tbaa !401
  %221 = getelementptr inbounds %struct.ChildParticle, ptr %218, i64 0, i32 4
  %222 = getelementptr inbounds %struct.ChildParticle, ptr %218, i64 0, i32 4, i64 1
  %223 = getelementptr inbounds %struct.ChildParticle, ptr %218, i64 0, i32 4, i64 2
  br label %224

224:                                              ; preds = %224, %217
  %225 = tail call fast nofpclass(nan inf) float @BLI_frand() #14
  %226 = fmul fast float %225, 2.000000e+00
  %227 = fadd fast float %226, -1.000000e+00
  store float %227, ptr %221, align 4, !tbaa !79
  %228 = tail call fast nofpclass(nan inf) float @BLI_frand() #14
  %229 = fmul fast float %228, 2.000000e+00
  %230 = fadd fast float %229, -1.000000e+00
  store float %230, ptr %222, align 4, !tbaa !79
  %231 = tail call fast nofpclass(nan inf) float @BLI_frand() #14
  %232 = fmul fast float %231, 2.000000e+00
  %233 = fadd fast float %232, -1.000000e+00
  store float %233, ptr %223, align 4, !tbaa !79
  %234 = load <2 x float>, ptr %221, align 4, !tbaa !79
  %235 = fmul fast <2 x float> %234, %234
  %236 = fmul fast float %233, %233
  %237 = extractelement <2 x float> %235, i64 0
  %238 = fadd fast float %236, %237
  %239 = extractelement <2 x float> %235, i64 1
  %240 = fadd fast float %238, %239
  %241 = tail call fast float @llvm.sqrt.f32(float %240)
  %242 = fcmp fast ult float %241, 1.000000e+00
  br i1 %242, label %243, label %224, !llvm.loop !403

243:                                              ; preds = %224
  store i32 -1, ptr %218, align 4, !tbaa !404
  %244 = add nuw nsw i32 %219, 1
  %245 = getelementptr inbounds %struct.ChildParticle, ptr %218, i64 1
  %246 = load i32, ptr %111, align 8, !tbaa !26
  %247 = icmp slt i32 %244, %246
  br i1 %247, label %217, label %248, !llvm.loop !405

248:                                              ; preds = %243, %212
  %249 = phi i32 [ %213, %212 ], [ %246, %243 ]
  %250 = phi ptr [ %214, %212 ], [ %245, %243 ]
  %251 = add nuw nsw i32 %215, 1
  %252 = icmp eq i32 %251, %170
  br i1 %252, label %253, label %212, !llvm.loop !406

253:                                              ; preds = %248, %207, %205
  tail call void @psys_calc_dmcache(ptr noundef %98, ptr noundef %40, ptr noundef nonnull %100)
  br label %1941

254:                                              ; preds = %125
  %255 = getelementptr inbounds %struct.ParticleSettings, ptr %108, i64 0, i32 9
  %256 = load i16, ptr %255, align 4, !tbaa !27
  %257 = icmp eq i16 %256, 2
  %258 = icmp ne i32 %1, 0
  %259 = and i1 %258, %257
  br i1 %259, label %260, label %963

260:                                              ; preds = %254
  %261 = getelementptr %struct.ParticleSystem, ptr %100, i64 0, i32 23
  %262 = load i32, ptr %261, align 4, !tbaa !124
  %263 = add nsw i32 %262, 31415926
  tail call void @BLI_srandom(i32 noundef %263) #14
  %264 = getelementptr inbounds %struct.Object, ptr %98, i64 0, i32 19
  %265 = load ptr, ptr %264, align 8, !tbaa !49
  %266 = tail call ptr @CDDM_from_mesh(ptr noundef %265) #14
  tail call void @DM_ensure_tessface(ptr noundef %266) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %3) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #14
  %267 = getelementptr inbounds %struct.DerivedMesh, ptr %266, i64 0, i32 50
  %268 = load ptr, ptr %267, align 8, !tbaa !60
  %269 = tail call ptr %268(ptr noundef %266, i32 noundef 0) #14
  %270 = getelementptr inbounds %struct.DerivedMesh, ptr %266, i64 0, i32 23
  %271 = load ptr, ptr %270, align 8, !tbaa !57
  %272 = tail call i32 %271(ptr noundef %266) #14
  %273 = load ptr, ptr %107, align 8, !tbaa !5
  %274 = getelementptr inbounds %struct.ParticleSettings, ptr %273, i64 0, i32 8
  %275 = load i16, ptr %274, align 2, !tbaa !28
  %276 = getelementptr inbounds %struct.ParticleSettings, ptr %273, i64 0, i32 65
  %277 = load i32, ptr %276, align 4, !tbaa !29
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #14
  %278 = icmp sgt i32 %272, 0
  br i1 %278, label %279, label %294

279:                                              ; preds = %260
  %280 = getelementptr inbounds float, ptr %269, i64 2
  %281 = load float, ptr %280, align 4, !tbaa !79
  %282 = getelementptr inbounds float, ptr %3, i64 2
  %283 = load <2 x float>, ptr %269, align 4, !tbaa !79
  store <2 x float> %283, ptr %3, align 8, !tbaa !79
  store float %281, ptr %282, align 8, !tbaa !79
  %284 = load <2 x float>, ptr %269, align 4, !tbaa !79
  store <2 x float> %284, ptr %4, align 8, !tbaa !79
  %285 = load float, ptr %280, align 4, !tbaa !79
  %286 = getelementptr inbounds float, ptr %4, i64 2
  store float %285, ptr %286, align 8, !tbaa !79
  %287 = icmp eq i32 %272, 1
  br i1 %287, label %301, label %288

288:                                              ; preds = %279, %288
  %289 = phi ptr [ %291, %288 ], [ %269, %279 ]
  %290 = phi i32 [ %292, %288 ], [ 1, %279 ]
  %291 = getelementptr inbounds %struct.MVert, ptr %289, i64 1
  call void @minmax_v3v3_v3(ptr noundef nonnull %3, ptr noundef nonnull %4, ptr noundef nonnull %291) #14
  %292 = add nuw nsw i32 %290, 1
  %293 = icmp eq i32 %292, %272
  br i1 %293, label %296, label %288, !llvm.loop !407

294:                                              ; preds = %260
  store <2 x float> zeroinitializer, ptr %4, align 8, !tbaa !79
  %295 = getelementptr inbounds float, ptr %4, i64 2
  store float 0.000000e+00, ptr %295, align 8, !tbaa !79
  br label %301

296:                                              ; preds = %288
  %297 = load <2 x float>, ptr %4, align 8, !tbaa !79
  %298 = load <2 x float>, ptr %3, align 8, !tbaa !79
  %299 = load float, ptr %286, align 8, !tbaa !79
  %300 = load float, ptr %282, align 8, !tbaa !79
  br label %301

301:                                              ; preds = %296, %294, %279
  %302 = phi float [ %300, %296 ], [ %281, %279 ], [ 0.000000e+00, %294 ]
  %303 = phi float [ %299, %296 ], [ %285, %279 ], [ 0.000000e+00, %294 ]
  %304 = phi <2 x float> [ %297, %296 ], [ %284, %279 ], [ zeroinitializer, %294 ]
  %305 = phi <2 x float> [ %298, %296 ], [ %283, %279 ], [ zeroinitializer, %294 ]
  %306 = fsub fast <2 x float> %304, %305
  store <2 x float> %306, ptr %5, align 8, !tbaa !79
  %307 = getelementptr inbounds float, ptr %3, i64 2
  %308 = fsub fast float %303, %302
  %309 = getelementptr inbounds float, ptr %5, i64 2
  store float %308, ptr %309, align 8, !tbaa !79
  %310 = call fast <2 x float> @llvm.fabs.v2f32(<2 x float> %306)
  %311 = call fast float @llvm.fabs.f32(float %308)
  %312 = extractelement <2 x float> %310, i64 0
  %313 = extractelement <2 x float> %310, i64 1
  %314 = fcmp fast ogt float %312, %313
  %315 = fcmp fast ogt float %312, %311
  %316 = select i1 %315, i32 0, i32 2
  %317 = fcmp fast ogt float %313, %311
  %318 = select i1 %317, i32 1, i32 2
  %319 = select i1 %314, i32 %316, i32 %318
  %320 = freeze i32 %319
  %321 = zext i32 %320 to i64
  %322 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 %321
  %323 = load float, ptr %322, align 4, !tbaa !79
  %324 = sitofp i32 %277 to float
  %325 = fdiv fast float %323, %324
  %326 = getelementptr inbounds [3 x i32], ptr %6, i64 0, i64 %321
  store i32 %277, ptr %326, align 4, !tbaa !68
  %327 = add i32 %320, 1
  %328 = icmp eq i32 %327, 3
  %329 = select i1 %328, i32 0, i32 %327
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 %330
  %332 = load float, ptr %331, align 4, !tbaa !79
  %333 = fdiv fast float %332, %325
  %334 = call fast float @llvm.ceil.f32(float %333)
  %335 = fptosi float %334 to i32
  %336 = getelementptr inbounds [3 x i32], ptr %6, i64 0, i64 %330
  store i32 %335, ptr %336, align 4, !tbaa !68
  %337 = add nuw nsw i32 %320, 2
  %338 = urem i32 %337, 3
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 %339
  %341 = load float, ptr %340, align 4, !tbaa !79
  %342 = fdiv fast float %341, %325
  %343 = call fast float @llvm.ceil.f32(float %342)
  %344 = fptosi float %343 to i32
  %345 = getelementptr inbounds [3 x i32], ptr %6, i64 0, i64 %339
  store i32 %344, ptr %345, align 4, !tbaa !68
  %346 = load i32, ptr %336, align 4, !tbaa !68
  %347 = call i32 @llvm.smin.i32(i32 %346, i32 %277)
  store i32 %347, ptr %336, align 4, !tbaa !68
  %348 = load i32, ptr %345, align 4, !tbaa !68
  %349 = call i32 @llvm.smin.i32(i32 %348, i32 %277)
  store i32 %349, ptr %345, align 4, !tbaa !68
  %350 = load <2 x i32>, ptr %6, align 8
  %351 = call <2 x i32> @llvm.smax.v2i32(<2 x i32> %350, <2 x i32> <i32 1, i32 1>)
  store <2 x i32> %351, ptr %6, align 8, !tbaa !68
  %352 = getelementptr inbounds [3 x i32], ptr %6, i64 0, i64 2
  %353 = load i32, ptr %352, align 8
  %354 = call i32 @llvm.smax.i32(i32 %353, i32 1)
  store i32 %354, ptr %352, align 8, !tbaa !68
  %355 = fmul fast float %325, 5.000000e-01
  %356 = insertelement <2 x float> poison, float %325, i64 0
  %357 = shufflevector <2 x float> %356, <2 x float> poison, <2 x i32> zeroinitializer
  %358 = fcmp fast olt <2 x float> %357, %306
  %359 = fmul fast <2 x float> %306, <float 5.000000e-01, float 5.000000e-01>
  %360 = insertelement <2 x float> poison, float %355, i64 0
  %361 = shufflevector <2 x float> %360, <2 x float> poison, <2 x i32> zeroinitializer
  %362 = select <2 x i1> %358, <2 x float> %361, <2 x float> %359
  %363 = fadd fast <2 x float> %362, %305
  store <2 x float> %363, ptr %3, align 8, !tbaa !79
  %364 = fcmp fast olt float %325, %308
  %365 = fmul fast float %308, 5.000000e-01
  %366 = select fast i1 %364, float %355, float %365
  %367 = fadd fast float %366, %302
  store float %367, ptr %307, align 8, !tbaa !79
  %368 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 3
  %369 = load ptr, ptr %368, align 8, !tbaa !35
  %370 = icmp slt i32 %277, 1
  br i1 %370, label %442, label %371

371:                                              ; preds = %301
  %372 = extractelement <2 x float> %363, i64 0
  %373 = extractelement <2 x float> %363, i64 1
  %374 = and i32 %277, 1
  %375 = icmp eq i32 %277, 1
  %376 = and i32 %277, -2
  %377 = icmp eq i32 %374, 0
  br label %378

378:                                              ; preds = %371, %439
  %379 = phi ptr [ %436, %439 ], [ %369, %371 ]
  %380 = phi i32 [ %440, %439 ], [ 0, %371 ]
  %381 = sitofp i32 %380 to float
  %382 = fmul fast float %325, %381
  %383 = fadd fast float %382, %372
  br label %384

384:                                              ; preds = %435, %378
  %385 = phi ptr [ %379, %378 ], [ %436, %435 ]
  %386 = phi i32 [ 0, %378 ], [ %437, %435 ]
  %387 = sitofp i32 %386 to float
  %388 = fmul fast float %325, %387
  %389 = fadd fast float %388, %373
  br i1 %375, label %419, label %390

390:                                              ; preds = %384, %390
  %391 = phi ptr [ %416, %390 ], [ %385, %384 ]
  %392 = phi i32 [ %415, %390 ], [ 0, %384 ]
  %393 = phi i32 [ %417, %390 ], [ 0, %384 ]
  %394 = getelementptr inbounds %struct.ParticleData, ptr %391, i64 0, i32 11
  store float %383, ptr %394, align 8, !tbaa !79
  %395 = getelementptr inbounds %struct.ParticleData, ptr %391, i64 0, i32 11, i64 1
  store float %389, ptr %395, align 4, !tbaa !79
  %396 = sitofp i32 %392 to float
  %397 = fmul fast float %325, %396
  %398 = fadd fast float %397, %367
  %399 = getelementptr inbounds %struct.ParticleData, ptr %391, i64 0, i32 11, i64 2
  store float %398, ptr %399, align 8, !tbaa !79
  %400 = getelementptr inbounds %struct.ParticleData, ptr %391, i64 0, i32 17
  %401 = load i16, ptr %400, align 4, !tbaa !36
  %402 = or i16 %401, 1
  store i16 %402, ptr %400, align 4, !tbaa !36
  %403 = getelementptr inbounds %struct.ParticleData, ptr %391, i64 0, i32 16
  store i32 0, ptr %403, align 8, !tbaa !116
  %404 = or i32 %392, 1
  %405 = getelementptr inbounds %struct.ParticleData, ptr %391, i64 1, i32 11
  store float %383, ptr %405, align 8, !tbaa !79
  %406 = getelementptr inbounds %struct.ParticleData, ptr %391, i64 1, i32 11, i64 1
  store float %389, ptr %406, align 4, !tbaa !79
  %407 = sitofp i32 %404 to float
  %408 = fmul fast float %325, %407
  %409 = fadd fast float %408, %367
  %410 = getelementptr inbounds %struct.ParticleData, ptr %391, i64 1, i32 11, i64 2
  store float %409, ptr %410, align 8, !tbaa !79
  %411 = getelementptr inbounds %struct.ParticleData, ptr %391, i64 1, i32 17
  %412 = load i16, ptr %411, align 4, !tbaa !36
  %413 = or i16 %412, 1
  store i16 %413, ptr %411, align 4, !tbaa !36
  %414 = getelementptr inbounds %struct.ParticleData, ptr %391, i64 1, i32 16
  store i32 0, ptr %414, align 8, !tbaa !116
  %415 = add nuw nsw i32 %392, 2
  %416 = getelementptr inbounds %struct.ParticleData, ptr %391, i64 2
  %417 = add i32 %393, 2
  %418 = icmp eq i32 %417, %376
  br i1 %418, label %419, label %390, !llvm.loop !408

419:                                              ; preds = %390, %384
  %420 = phi ptr [ undef, %384 ], [ %416, %390 ]
  %421 = phi ptr [ %385, %384 ], [ %416, %390 ]
  %422 = phi i32 [ 0, %384 ], [ %415, %390 ]
  br i1 %377, label %435, label %423

423:                                              ; preds = %419
  %424 = getelementptr inbounds %struct.ParticleData, ptr %421, i64 0, i32 11
  store float %383, ptr %424, align 8, !tbaa !79
  %425 = getelementptr inbounds %struct.ParticleData, ptr %421, i64 0, i32 11, i64 1
  store float %389, ptr %425, align 4, !tbaa !79
  %426 = sitofp i32 %422 to float
  %427 = fmul fast float %325, %426
  %428 = fadd fast float %427, %367
  %429 = getelementptr inbounds %struct.ParticleData, ptr %421, i64 0, i32 11, i64 2
  store float %428, ptr %429, align 8, !tbaa !79
  %430 = getelementptr inbounds %struct.ParticleData, ptr %421, i64 0, i32 17
  %431 = load i16, ptr %430, align 4, !tbaa !36
  %432 = or i16 %431, 1
  store i16 %432, ptr %430, align 4, !tbaa !36
  %433 = getelementptr inbounds %struct.ParticleData, ptr %421, i64 0, i32 16
  store i32 0, ptr %433, align 8, !tbaa !116
  %434 = getelementptr inbounds %struct.ParticleData, ptr %421, i64 1
  br label %435

435:                                              ; preds = %419, %423
  %436 = phi ptr [ %420, %419 ], [ %434, %423 ]
  %437 = add nuw nsw i32 %386, 1
  %438 = icmp eq i32 %437, %277
  br i1 %438, label %439, label %384, !llvm.loop !409

439:                                              ; preds = %435
  %440 = add nuw nsw i32 %380, 1
  %441 = icmp eq i32 %440, %277
  br i1 %441, label %442, label %378, !llvm.loop !410

442:                                              ; preds = %439, %301
  %443 = icmp eq i16 %275, 0
  br i1 %443, label %444, label %495

444:                                              ; preds = %442
  br i1 %278, label %445, label %701

445:                                              ; preds = %444
  %446 = extractelement <2 x i32> %351, i64 0
  %447 = add nsw i32 %446, -1
  %448 = sitofp i32 %447 to float
  %449 = extractelement <2 x i32> %351, i64 1
  %450 = add nsw i32 %449, -1
  %451 = sitofp i32 %450 to float
  %452 = add nsw i32 %354, -1
  %453 = sitofp i32 %452 to float
  %454 = extractelement <2 x float> %363, i64 0
  %455 = fsub fast float %355, %454
  %456 = extractelement <2 x float> %363, i64 1
  %457 = fsub fast float %355, %456
  %458 = fsub fast float %355, %367
  %459 = extractelement <2 x float> %306, i64 0
  %460 = extractelement <2 x float> %306, i64 1
  %461 = fdiv fast float 1.000000e+00, %459
  %462 = fdiv fast float 1.000000e+00, %460
  %463 = fdiv fast float 1.000000e+00, %308
  br label %464

464:                                              ; preds = %464, %445
  %465 = phi ptr [ %269, %445 ], [ %493, %464 ]
  %466 = phi i32 [ 0, %445 ], [ %492, %464 ]
  %467 = load float, ptr %465, align 4, !tbaa !79
  %468 = fadd fast float %455, %467
  %469 = getelementptr inbounds float, ptr %465, i64 1
  %470 = load float, ptr %469, align 4, !tbaa !79
  %471 = fadd fast float %457, %470
  %472 = getelementptr inbounds float, ptr %465, i64 2
  %473 = load float, ptr %472, align 4, !tbaa !79
  %474 = fadd fast float %458, %473
  %475 = fmul fast float %468, %448
  %476 = fmul fast float %475, %461
  %477 = fptosi float %476 to i32
  %478 = mul nsw i32 %277, %477
  %479 = fmul fast float %471, %451
  %480 = fmul fast float %479, %462
  %481 = fptosi float %480 to i32
  %482 = add nsw i32 %478, %481
  %483 = mul nsw i32 %482, %277
  %484 = fmul fast float %474, %453
  %485 = fmul fast float %484, %463
  %486 = fptosi float %485 to i32
  %487 = add nsw i32 %483, %486
  %488 = sext i32 %487 to i64
  %489 = getelementptr inbounds %struct.ParticleData, ptr %369, i64 %488, i32 17
  %490 = load i16, ptr %489, align 4, !tbaa !36
  %491 = and i16 %490, -2
  store i16 %491, ptr %489, align 4, !tbaa !36
  %492 = add nuw nsw i32 %466, 1
  %493 = getelementptr inbounds %struct.MVert, ptr %465, i64 1
  %494 = icmp eq i32 %492, %272
  br i1 %494, label %701, label %464, !llvm.loop !411

495:                                              ; preds = %442
  %496 = icmp eq i16 %275, 1
  %497 = icmp eq i16 %275, 2
  %498 = icmp ult i16 %275, 3
  br i1 %498, label %499, label %701

499:                                              ; preds = %495
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %8) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %9) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %10) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %11) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #14
  %500 = getelementptr inbounds %struct.DerivedMesh, ptr %266, i64 0, i32 25
  %501 = load ptr, ptr %500, align 8, !tbaa !61
  %502 = call i32 %501(ptr noundef %266) #14
  %503 = getelementptr inbounds %struct.DerivedMesh, ptr %266, i64 0, i32 52
  %504 = load ptr, ptr %503, align 8, !tbaa !63
  %505 = call ptr %504(ptr noundef %266, i32 noundef 4) #14
  %506 = mul nsw i32 %277, %277
  %507 = getelementptr inbounds float, ptr %7, i64 1
  %508 = getelementptr inbounds float, ptr %7, i64 2
  %509 = getelementptr inbounds float, ptr %8, i64 2
  %510 = fmul fast float %325, 0x3F50624DE0000000
  %511 = icmp sgt i32 %502, 0
  %512 = getelementptr inbounds float, ptr %9, i64 1
  %513 = getelementptr inbounds float, ptr %9, i64 2
  %514 = getelementptr inbounds float, ptr %10, i64 1
  %515 = getelementptr inbounds float, ptr %10, i64 2
  %516 = getelementptr inbounds float, ptr %11, i64 1
  %517 = getelementptr inbounds float, ptr %11, i64 2
  %518 = getelementptr inbounds float, ptr %12, i64 1
  %519 = getelementptr inbounds float, ptr %12, i64 2
  %520 = extractelement <2 x i32> %351, i64 0
  %521 = zext i32 %520 to i64
  br label %525

522:                                              ; preds = %697, %540, %530
  %523 = icmp ult i64 %526, 2
  %524 = and i1 %496, %523
  br i1 %524, label %525, label %700, !llvm.loop !412

525:                                              ; preds = %522, %499
  %526 = phi i64 [ 0, %499 ], [ %534, %522 ]
  %527 = trunc i64 %526 to i32
  switch i32 %527, label %529 [
    i32 0, label %530
    i32 1, label %528
  ]

528:                                              ; preds = %525
  br label %530

529:                                              ; preds = %525
  br label %530

530:                                              ; preds = %529, %528, %525
  %531 = phi i32 [ %277, %528 ], [ 1, %529 ], [ %506, %525 ]
  %532 = phi i32 [ 1, %528 ], [ %506, %529 ], [ %277, %525 ]
  %533 = phi i32 [ %506, %528 ], [ %277, %529 ], [ 1, %525 ]
  %534 = add nuw nsw i64 %526, 1
  %535 = icmp eq i64 %534, 3
  %536 = select i1 %535, i64 0, i64 %534
  %537 = getelementptr inbounds [3 x i32], ptr %6, i64 0, i64 %536
  %538 = load i32, ptr %537, align 4, !tbaa !68
  %539 = icmp sgt i32 %538, 0
  br i1 %539, label %540, label %522

540:                                              ; preds = %530
  %541 = add nuw nsw i64 %526, 4294967295
  %542 = icmp eq i32 %527, 0
  %543 = and i64 %541, 4294967295
  %544 = select i1 %542, i64 2, i64 %543
  %545 = getelementptr inbounds [3 x i32], ptr %6, i64 0, i64 %544
  %546 = load i32, ptr %545, align 4, !tbaa !68
  %547 = icmp sgt i32 %546, 0
  %548 = getelementptr inbounds [3 x float], ptr %7, i64 0, i64 %526
  %549 = getelementptr inbounds [3 x float], ptr %8, i64 0, i64 %526
  %550 = getelementptr inbounds [3 x i32], ptr %6, i64 0, i64 %526
  br i1 %547, label %551, label %522

551:                                              ; preds = %540
  %552 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 %526
  %553 = load float, ptr %552, align 4, !tbaa !79
  %554 = fcmp fast olt float %325, %553
  %555 = fmul fast float %553, 5.000000e-01
  %556 = select fast i1 %554, float %355, float %555
  %557 = fadd fast float %553, %510
  %558 = sext i32 %531 to i64
  %559 = sext i32 %533 to i64
  %560 = sext i32 %532 to i64
  %561 = zext i32 %538 to i64
  %562 = zext i32 %546 to i64
  br label %563

563:                                              ; preds = %697, %551
  %564 = phi i64 [ %698, %697 ], [ 0, %551 ]
  %565 = mul nsw i64 %564, %560
  br label %566

566:                                              ; preds = %594, %563
  %567 = phi i64 [ 0, %563 ], [ %595, %594 ]
  %568 = load ptr, ptr %368, align 8, !tbaa !35
  %569 = getelementptr inbounds %struct.ParticleData, ptr %568, i64 %565
  %570 = mul nsw i64 %567, %559
  %571 = getelementptr inbounds %struct.ParticleData, ptr %569, i64 %570
  %572 = getelementptr inbounds %struct.ParticleData, ptr %569, i64 %570, i32 11
  %573 = load float, ptr %572, align 4, !tbaa !79
  store float %573, ptr %7, align 8, !tbaa !79
  %574 = getelementptr inbounds float, ptr %572, i64 1
  %575 = load float, ptr %574, align 4, !tbaa !79
  store float %575, ptr %507, align 4, !tbaa !79
  %576 = getelementptr inbounds float, ptr %572, i64 2
  %577 = load float, ptr %576, align 4, !tbaa !79
  store float %577, ptr %508, align 8, !tbaa !79
  %578 = load float, ptr %548, align 4, !tbaa !79
  %579 = fsub fast float %578, %556
  store float %579, ptr %548, align 4, !tbaa !79
  %580 = load <2 x float>, ptr %7, align 8, !tbaa !79
  store <2 x float> %580, ptr %8, align 8, !tbaa !79
  %581 = load float, ptr %508, align 8, !tbaa !79
  store float %581, ptr %509, align 8, !tbaa !79
  %582 = load float, ptr %549, align 4, !tbaa !79
  %583 = fadd fast float %557, %582
  store float %583, ptr %549, align 4, !tbaa !79
  %584 = fsub fast float %579, %510
  store float %584, ptr %548, align 4, !tbaa !79
  br i1 %511, label %616, label %585

585:                                              ; preds = %693, %566
  br i1 %497, label %586, label %594

586:                                              ; preds = %585
  %587 = getelementptr inbounds %struct.ParticleData, ptr %569, i64 %570, i32 16
  %588 = load i32, ptr %587, align 8, !tbaa !116
  %589 = srem i32 %588, 2
  %590 = icmp eq i32 %589, 0
  br i1 %590, label %591, label %592

591:                                              ; preds = %592, %586
  br label %597

592:                                              ; preds = %586
  %593 = add nsw i32 %588, 1
  store i32 %593, ptr %587, align 8, !tbaa !116
  br label %591

594:                                              ; preds = %611, %585
  %595 = add nuw nsw i64 %567, 1
  %596 = icmp eq i64 %595, %562
  br i1 %596, label %697, label %566, !llvm.loop !413

597:                                              ; preds = %591, %611
  %598 = phi i64 [ %614, %611 ], [ 0, %591 ]
  %599 = phi i32 [ %613, %611 ], [ %589, %591 ]
  %600 = icmp eq i32 %599, 0
  %601 = mul nsw i64 %598, %558
  %602 = getelementptr inbounds %struct.ParticleData, ptr %571, i64 %601, i32 16
  %603 = load i32, ptr %602, align 8, !tbaa !116
  %604 = and i32 %603, 1
  %605 = icmp eq i32 %604, 0
  %606 = select i1 %600, i1 %605, i1 false
  br i1 %606, label %611, label %607

607:                                              ; preds = %597
  %608 = getelementptr inbounds %struct.ParticleData, ptr %571, i64 %601, i32 17
  %609 = load i16, ptr %608, align 4, !tbaa !36
  %610 = and i16 %609, -2
  store i16 %610, ptr %608, align 4, !tbaa !36
  br label %611

611:                                              ; preds = %607, %597
  %612 = add nsw i32 %603, %599
  %613 = srem i32 %612, 2
  %614 = add nuw nsw i64 %598, 1
  %615 = icmp eq i64 %614, %521
  br i1 %615, label %594, label %597, !llvm.loop !414

616:                                              ; preds = %566, %693
  %617 = phi i32 [ %694, %693 ], [ 0, %566 ]
  %618 = phi ptr [ %695, %693 ], [ %505, %566 ]
  %619 = load i32, ptr %618, align 4, !tbaa !251
  %620 = zext i32 %619 to i64
  %621 = getelementptr inbounds %struct.MVert, ptr %269, i64 %620
  %622 = load float, ptr %621, align 4, !tbaa !79
  store float %622, ptr %9, align 4, !tbaa !79
  %623 = getelementptr inbounds float, ptr %621, i64 1
  %624 = load float, ptr %623, align 4, !tbaa !79
  store float %624, ptr %512, align 4, !tbaa !79
  %625 = getelementptr inbounds float, ptr %621, i64 2
  %626 = load float, ptr %625, align 4, !tbaa !79
  store float %626, ptr %513, align 4, !tbaa !79
  %627 = getelementptr inbounds %struct.MFace, ptr %618, i64 0, i32 1
  %628 = load i32, ptr %627, align 4, !tbaa !253
  %629 = zext i32 %628 to i64
  %630 = getelementptr inbounds %struct.MVert, ptr %269, i64 %629
  %631 = load float, ptr %630, align 4, !tbaa !79
  store float %631, ptr %10, align 4, !tbaa !79
  %632 = getelementptr inbounds float, ptr %630, i64 1
  %633 = load float, ptr %632, align 4, !tbaa !79
  store float %633, ptr %514, align 4, !tbaa !79
  %634 = getelementptr inbounds float, ptr %630, i64 2
  %635 = load float, ptr %634, align 4, !tbaa !79
  store float %635, ptr %515, align 4, !tbaa !79
  %636 = getelementptr inbounds %struct.MFace, ptr %618, i64 0, i32 2
  %637 = load i32, ptr %636, align 4, !tbaa !254
  %638 = zext i32 %637 to i64
  %639 = getelementptr inbounds %struct.MVert, ptr %269, i64 %638
  %640 = load float, ptr %639, align 4, !tbaa !79
  store float %640, ptr %11, align 4, !tbaa !79
  %641 = getelementptr inbounds float, ptr %639, i64 1
  %642 = load float, ptr %641, align 4, !tbaa !79
  store float %642, ptr %516, align 4, !tbaa !79
  %643 = getelementptr inbounds float, ptr %639, i64 2
  %644 = load float, ptr %643, align 4, !tbaa !79
  store float %644, ptr %517, align 4, !tbaa !79
  %645 = call zeroext i8 @isect_axial_line_tri_v3(i32 noundef %527, ptr noundef nonnull %7, ptr noundef nonnull %8, ptr noundef nonnull %10, ptr noundef nonnull %11, ptr noundef nonnull %9, ptr noundef nonnull %13) #14
  %646 = icmp eq i8 %645, 0
  br i1 %646, label %663, label %647

647:                                              ; preds = %616
  %648 = load float, ptr %13, align 4, !tbaa !79
  %649 = load i32, ptr %550, align 4, !tbaa !68
  %650 = sitofp i32 %649 to float
  %651 = fmul fast float %648, %650
  %652 = fptosi float %651 to i32
  %653 = mul nsw i32 %531, %652
  %654 = sext i32 %653 to i64
  br i1 %496, label %659, label %655

655:                                              ; preds = %647
  %656 = getelementptr inbounds %struct.ParticleData, ptr %571, i64 %654, i32 16
  %657 = load i32, ptr %656, align 8, !tbaa !116
  %658 = add nsw i32 %657, 1
  store i32 %658, ptr %656, align 8, !tbaa !116
  br label %693

659:                                              ; preds = %647
  %660 = getelementptr inbounds %struct.ParticleData, ptr %571, i64 %654, i32 17
  %661 = load i16, ptr %660, align 4, !tbaa !36
  %662 = and i16 %661, -2
  store i16 %662, ptr %660, align 4, !tbaa !36
  br label %693

663:                                              ; preds = %616
  %664 = getelementptr inbounds %struct.MFace, ptr %618, i64 0, i32 3
  %665 = load i32, ptr %664, align 4, !tbaa !255
  %666 = icmp eq i32 %665, 0
  br i1 %666, label %693, label %667

667:                                              ; preds = %663
  %668 = zext i32 %665 to i64
  %669 = getelementptr inbounds %struct.MVert, ptr %269, i64 %668
  %670 = load float, ptr %669, align 4, !tbaa !79
  store float %670, ptr %12, align 16, !tbaa !79
  %671 = getelementptr inbounds float, ptr %669, i64 1
  %672 = load float, ptr %671, align 4, !tbaa !79
  store float %672, ptr %518, align 4, !tbaa !79
  %673 = getelementptr inbounds float, ptr %669, i64 2
  %674 = load float, ptr %673, align 4, !tbaa !79
  store float %674, ptr %519, align 8, !tbaa !79
  %675 = call zeroext i8 @isect_axial_line_tri_v3(i32 noundef %527, ptr noundef nonnull %7, ptr noundef nonnull %8, ptr noundef nonnull %12, ptr noundef nonnull %9, ptr noundef nonnull %11, ptr noundef nonnull %13) #14
  %676 = icmp eq i8 %675, 0
  br i1 %676, label %693, label %677

677:                                              ; preds = %667
  %678 = load float, ptr %13, align 4, !tbaa !79
  %679 = load i32, ptr %550, align 4, !tbaa !68
  %680 = sitofp i32 %679 to float
  %681 = fmul fast float %678, %680
  %682 = fptosi float %681 to i32
  %683 = mul nsw i32 %531, %682
  %684 = sext i32 %683 to i64
  br i1 %496, label %689, label %685

685:                                              ; preds = %677
  %686 = getelementptr inbounds %struct.ParticleData, ptr %571, i64 %684, i32 16
  %687 = load i32, ptr %686, align 8, !tbaa !116
  %688 = add nsw i32 %687, 1
  store i32 %688, ptr %686, align 8, !tbaa !116
  br label %693

689:                                              ; preds = %677
  %690 = getelementptr inbounds %struct.ParticleData, ptr %571, i64 %684, i32 17
  %691 = load i16, ptr %690, align 4, !tbaa !36
  %692 = and i16 %691, -2
  store i16 %692, ptr %690, align 4, !tbaa !36
  br label %693

693:                                              ; preds = %689, %685, %667, %663, %659, %655
  %694 = add nuw nsw i32 %617, 1
  %695 = getelementptr inbounds %struct.MFace, ptr %618, i64 1
  %696 = icmp eq i32 %694, %502
  br i1 %696, label %585, label %616, !llvm.loop !415

697:                                              ; preds = %594
  %698 = add nuw nsw i64 %564, 1
  %699 = icmp eq i64 %698, %561
  br i1 %699, label %522, label %563, !llvm.loop !416

700:                                              ; preds = %522
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %11) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %10) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %9) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %8) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #14
  br label %701

701:                                              ; preds = %464, %700, %495, %444
  %702 = load ptr, ptr %107, align 8, !tbaa !5
  %703 = getelementptr inbounds %struct.ParticleSettings, ptr %702, i64 0, i32 5
  %704 = load i32, ptr %703, align 8, !tbaa !222
  %705 = and i32 %704, 16777216
  %706 = icmp eq i32 %705, 0
  %707 = or i1 %370, %706
  br i1 %707, label %795, label %708

708:                                              ; preds = %701
  %709 = load ptr, ptr %368, align 8, !tbaa !35
  %710 = add i32 %277, -1
  %711 = and i32 %277, 1
  %712 = icmp eq i32 %710, 0
  %713 = and i32 %277, -2
  %714 = icmp eq i32 %711, 0
  %715 = and i32 %277, 1
  %716 = icmp eq i32 %710, 0
  %717 = and i32 %277, -2
  %718 = icmp eq i32 %715, 0
  br label %719

719:                                              ; preds = %792, %708
  %720 = phi ptr [ %778, %792 ], [ %709, %708 ]
  %721 = phi i32 [ %793, %792 ], [ 0, %708 ]
  br label %722

722:                                              ; preds = %777, %719
  %723 = phi ptr [ %720, %719 ], [ %778, %777 ]
  %724 = phi i32 [ 0, %719 ], [ %779, %777 ]
  %725 = and i32 %724, 1
  %726 = icmp eq i32 %725, 0
  br i1 %726, label %728, label %727

727:                                              ; preds = %722
  br i1 %712, label %760, label %729

728:                                              ; preds = %722
  br i1 %716, label %747, label %781

729:                                              ; preds = %727, %729
  %730 = phi ptr [ %744, %729 ], [ %723, %727 ]
  %731 = phi i32 [ %743, %729 ], [ 0, %727 ]
  %732 = phi i32 [ %745, %729 ], [ 0, %727 ]
  %733 = getelementptr inbounds %struct.ParticleData, ptr %730, i64 0, i32 11
  %734 = load float, ptr %733, align 8, !tbaa !79
  %735 = fadd fast float %734, %355
  store float %735, ptr %733, align 8, !tbaa !79
  %736 = getelementptr inbounds %struct.ParticleData, ptr %730, i64 1, i32 11
  %737 = load float, ptr %736, align 8, !tbaa !79
  %738 = fadd fast float %737, %355
  store float %738, ptr %736, align 8, !tbaa !79
  %739 = fadd fast float %738, %355
  store float %739, ptr %736, align 8, !tbaa !79
  %740 = getelementptr inbounds %struct.ParticleData, ptr %730, i64 1, i32 11, i64 1
  %741 = load float, ptr %740, align 4, !tbaa !79
  %742 = fadd fast float %741, %355
  store float %742, ptr %740, align 4, !tbaa !79
  %743 = add nuw nsw i32 %731, 2
  %744 = getelementptr inbounds %struct.ParticleData, ptr %730, i64 2
  %745 = add i32 %732, 2
  %746 = icmp eq i32 %745, %713
  br i1 %746, label %760, label %729, !llvm.loop !417

747:                                              ; preds = %781, %728
  %748 = phi ptr [ undef, %728 ], [ %789, %781 ]
  %749 = phi ptr [ %723, %728 ], [ %789, %781 ]
  %750 = phi i32 [ 0, %728 ], [ %788, %781 ]
  br i1 %718, label %777, label %751

751:                                              ; preds = %747
  %752 = and i32 %750, 1
  %753 = icmp eq i32 %752, 0
  br i1 %753, label %758, label %754

754:                                              ; preds = %751
  %755 = getelementptr inbounds %struct.ParticleData, ptr %749, i64 0, i32 11
  %756 = load <2 x float>, ptr %755, align 8, !tbaa !79
  %757 = fadd fast <2 x float> %756, %361
  store <2 x float> %757, ptr %755, align 8, !tbaa !79
  br label %758

758:                                              ; preds = %754, %751
  %759 = getelementptr inbounds %struct.ParticleData, ptr %749, i64 1
  br label %777

760:                                              ; preds = %729, %727
  %761 = phi ptr [ undef, %727 ], [ %744, %729 ]
  %762 = phi ptr [ %723, %727 ], [ %744, %729 ]
  %763 = phi i32 [ 0, %727 ], [ %743, %729 ]
  br i1 %714, label %777, label %764

764:                                              ; preds = %760
  %765 = getelementptr inbounds %struct.ParticleData, ptr %762, i64 0, i32 11
  %766 = load float, ptr %765, align 8, !tbaa !79
  %767 = fadd fast float %766, %355
  store float %767, ptr %765, align 8, !tbaa !79
  %768 = and i32 %763, 1
  %769 = icmp eq i32 %768, 0
  br i1 %769, label %775, label %770

770:                                              ; preds = %764
  %771 = fadd fast float %767, %355
  store float %771, ptr %765, align 8, !tbaa !79
  %772 = getelementptr inbounds %struct.ParticleData, ptr %762, i64 0, i32 11, i64 1
  %773 = load float, ptr %772, align 4, !tbaa !79
  %774 = fadd fast float %773, %355
  store float %774, ptr %772, align 4, !tbaa !79
  br label %775

775:                                              ; preds = %770, %764
  %776 = getelementptr inbounds %struct.ParticleData, ptr %762, i64 1
  br label %777

777:                                              ; preds = %775, %760, %758, %747
  %778 = phi ptr [ %748, %747 ], [ %759, %758 ], [ %761, %760 ], [ %776, %775 ]
  %779 = add nuw nsw i32 %724, 1
  %780 = icmp eq i32 %779, %277
  br i1 %780, label %792, label %722, !llvm.loop !418

781:                                              ; preds = %728, %781
  %782 = phi ptr [ %789, %781 ], [ %723, %728 ]
  %783 = phi i32 [ %788, %781 ], [ 0, %728 ]
  %784 = phi i32 [ %790, %781 ], [ 0, %728 ]
  %785 = getelementptr inbounds %struct.ParticleData, ptr %782, i64 1, i32 11
  %786 = load <2 x float>, ptr %785, align 8, !tbaa !79
  %787 = fadd fast <2 x float> %786, %361
  store <2 x float> %787, ptr %785, align 8, !tbaa !79
  %788 = add nuw nsw i32 %783, 2
  %789 = getelementptr inbounds %struct.ParticleData, ptr %782, i64 2
  %790 = add i32 %784, 2
  %791 = icmp eq i32 %790, %717
  br i1 %791, label %747, label %781, !llvm.loop !417

792:                                              ; preds = %777
  %793 = add nuw nsw i32 %721, 1
  %794 = icmp eq i32 %793, %277
  br i1 %794, label %795, label %719, !llvm.loop !419

795:                                              ; preds = %792, %701
  %796 = and i32 %704, 67108864
  %797 = icmp eq i32 %796, 0
  br i1 %797, label %852, label %798

798:                                              ; preds = %795
  %799 = load ptr, ptr %368, align 8, !tbaa !35
  %800 = sext i32 %277 to i64
  %801 = extractelement <2 x i32> %351, i64 0
  %802 = zext i32 %801 to i64
  %803 = extractelement <2 x i32> %351, i64 1
  %804 = zext i32 %803 to i64
  %805 = and i32 %354, 3
  %806 = icmp ult i32 %354, 4
  %807 = and i32 %354, 2147483644
  %808 = icmp eq i32 %805, 0
  br label %809

809:                                              ; preds = %849, %798
  %810 = phi i64 [ 0, %798 ], [ %850, %849 ]
  %811 = mul nsw i64 %810, %800
  br label %812

812:                                              ; preds = %846, %809
  %813 = phi i64 [ %847, %846 ], [ 0, %809 ]
  %814 = add nsw i64 %813, %811
  %815 = mul nsw i64 %814, %800
  %816 = getelementptr inbounds %struct.ParticleData, ptr %799, i64 %815
  br i1 %806, label %835, label %817

817:                                              ; preds = %812, %817
  %818 = phi ptr [ %832, %817 ], [ %816, %812 ]
  %819 = phi i32 [ %833, %817 ], [ 0, %812 ]
  %820 = getelementptr inbounds %struct.ParticleData, ptr %818, i64 0, i32 17
  %821 = load i16, ptr %820, align 4, !tbaa !36
  %822 = xor i16 %821, 1
  store i16 %822, ptr %820, align 4, !tbaa !36
  %823 = getelementptr inbounds %struct.ParticleData, ptr %818, i64 1, i32 17
  %824 = load i16, ptr %823, align 4, !tbaa !36
  %825 = xor i16 %824, 1
  store i16 %825, ptr %823, align 4, !tbaa !36
  %826 = getelementptr inbounds %struct.ParticleData, ptr %818, i64 2, i32 17
  %827 = load i16, ptr %826, align 4, !tbaa !36
  %828 = xor i16 %827, 1
  store i16 %828, ptr %826, align 4, !tbaa !36
  %829 = getelementptr inbounds %struct.ParticleData, ptr %818, i64 3, i32 17
  %830 = load i16, ptr %829, align 4, !tbaa !36
  %831 = xor i16 %830, 1
  store i16 %831, ptr %829, align 4, !tbaa !36
  %832 = getelementptr inbounds %struct.ParticleData, ptr %818, i64 4
  %833 = add i32 %819, 4
  %834 = icmp eq i32 %833, %807
  br i1 %834, label %835, label %817, !llvm.loop !420

835:                                              ; preds = %817, %812
  %836 = phi ptr [ %816, %812 ], [ %832, %817 ]
  br i1 %808, label %846, label %837

837:                                              ; preds = %835, %837
  %838 = phi ptr [ %843, %837 ], [ %836, %835 ]
  %839 = phi i32 [ %844, %837 ], [ 0, %835 ]
  %840 = getelementptr inbounds %struct.ParticleData, ptr %838, i64 0, i32 17
  %841 = load i16, ptr %840, align 4, !tbaa !36
  %842 = xor i16 %841, 1
  store i16 %842, ptr %840, align 4, !tbaa !36
  %843 = getelementptr inbounds %struct.ParticleData, ptr %838, i64 1
  %844 = add i32 %839, 1
  %845 = icmp eq i32 %844, %805
  br i1 %845, label %846, label %837, !llvm.loop !421

846:                                              ; preds = %837, %835
  %847 = add nuw nsw i64 %813, 1
  %848 = icmp eq i64 %847, %804
  br i1 %848, label %849, label %812, !llvm.loop !422

849:                                              ; preds = %846
  %850 = add nuw nsw i64 %810, 1
  %851 = icmp eq i64 %850, %802
  br i1 %851, label %852, label %809, !llvm.loop !423

852:                                              ; preds = %849, %795
  %853 = getelementptr inbounds %struct.ParticleSettings, ptr %702, i64 0, i32 61
  %854 = load float, ptr %853, align 4, !tbaa !424
  %855 = fcmp fast ogt float %854, 0.000000e+00
  br i1 %855, label %856, label %917

856:                                              ; preds = %852
  %857 = fmul fast float %854, %325
  %858 = load i32, ptr %111, align 8, !tbaa !26
  %859 = icmp sgt i32 %858, 0
  br i1 %859, label %860, label %917

860:                                              ; preds = %856
  %861 = load ptr, ptr %368, align 8, !tbaa !35
  br label %862

862:                                              ; preds = %913, %860
  %863 = phi ptr [ %861, %860 ], [ %915, %913 ]
  %864 = phi i32 [ 0, %860 ], [ %914, %913 ]
  %865 = getelementptr inbounds %struct.ParticleData, ptr %863, i64 0, i32 17
  %866 = load i16, ptr %865, align 4, !tbaa !36
  %867 = and i16 %866, 1
  %868 = icmp eq i16 %867, 0
  br i1 %868, label %869, label %913

869:                                              ; preds = %862
  %870 = add nuw nsw i32 %864, 31
  %871 = load i32, ptr %261, align 4, !tbaa !124
  %872 = srem i32 %871, 1024
  %873 = sext i32 %872 to i64
  %874 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %873
  %875 = load i32, ptr %874, align 4, !tbaa !68
  %876 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %873
  %877 = load i32, ptr %876, align 4, !tbaa !68
  %878 = mul i32 %877, %870
  %879 = add i32 %878, %875
  %880 = and i32 %879, 1023
  %881 = zext i32 %880 to i64
  %882 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %881
  %883 = load float, ptr %882, align 4, !tbaa !79
  %884 = fadd fast float %883, -5.000000e-01
  %885 = fmul fast float %884, %857
  %886 = getelementptr inbounds %struct.ParticleData, ptr %863, i64 0, i32 11
  %887 = load float, ptr %886, align 8, !tbaa !79
  %888 = fadd fast float %885, %887
  store float %888, ptr %886, align 8, !tbaa !79
  %889 = add nuw nsw i32 %864, 32
  %890 = mul i32 %877, %889
  %891 = add i32 %890, %875
  %892 = and i32 %891, 1023
  %893 = zext i32 %892 to i64
  %894 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %893
  %895 = load float, ptr %894, align 4, !tbaa !79
  %896 = fadd fast float %895, -5.000000e-01
  %897 = fmul fast float %896, %857
  %898 = getelementptr inbounds %struct.ParticleData, ptr %863, i64 0, i32 11, i64 1
  %899 = load float, ptr %898, align 4, !tbaa !79
  %900 = fadd fast float %897, %899
  store float %900, ptr %898, align 4, !tbaa !79
  %901 = add nuw nsw i32 %864, 33
  %902 = mul i32 %877, %901
  %903 = add i32 %902, %875
  %904 = and i32 %903, 1023
  %905 = zext i32 %904 to i64
  %906 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %905
  %907 = load float, ptr %906, align 4, !tbaa !79
  %908 = fadd fast float %907, -5.000000e-01
  %909 = fmul fast float %908, %857
  %910 = getelementptr inbounds %struct.ParticleData, ptr %863, i64 0, i32 11, i64 2
  %911 = load float, ptr %910, align 8, !tbaa !79
  %912 = fadd fast float %909, %911
  store float %912, ptr %910, align 8, !tbaa !79
  br label %913

913:                                              ; preds = %869, %862
  %914 = add nuw nsw i32 %864, 1
  %915 = getelementptr inbounds %struct.ParticleData, ptr %863, i64 1
  %916 = icmp eq i32 %914, %858
  br i1 %916, label %917, label %862, !llvm.loop !425

917:                                              ; preds = %913, %856, %852
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %3) #14
  %918 = getelementptr inbounds %struct.DerivedMesh, ptr %266, i64 0, i32 95
  %919 = load ptr, ptr %918, align 8, !tbaa !331
  call void %919(ptr noundef %266) #14
  br label %1941

920:                                              ; preds = %127
  tail call void @DM_ensure_tessface(ptr noundef nonnull %40) #14
  %921 = tail call ptr @BLI_kdtree_new(i32 noundef %112) #14
  %922 = icmp sgt i32 %112, 0
  br i1 %922, label %923, label %944

923:                                              ; preds = %920
  %924 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 3
  %925 = load ptr, ptr %924, align 8, !tbaa !35
  %926 = getelementptr inbounds %struct.ParticleSettings, ptr %108, i64 0, i32 8
  %927 = getelementptr inbounds %struct.Object, ptr %98, i64 0, i32 19
  br label %928

928:                                              ; preds = %928, %923
  %929 = phi ptr [ %925, %923 ], [ %942, %928 ]
  %930 = phi i32 [ 0, %923 ], [ %941, %928 ]
  %931 = load i16, ptr %926, align 2, !tbaa !28
  %932 = sext i16 %931 to i32
  %933 = getelementptr inbounds %struct.ParticleData, ptr %929, i64 0, i32 9
  %934 = load i32, ptr %933, align 8, !tbaa !71
  %935 = getelementptr inbounds %struct.ParticleData, ptr %929, i64 0, i32 10
  %936 = load i32, ptr %935, align 4, !tbaa !72
  %937 = getelementptr inbounds %struct.ParticleData, ptr %929, i64 0, i32 11
  %938 = getelementptr inbounds %struct.ParticleData, ptr %929, i64 0, i32 12
  %939 = load float, ptr %938, align 8, !tbaa !121
  call void @psys_particle_on_dm(ptr noundef %40, i32 noundef %932, i32 noundef %934, i32 noundef %936, ptr noundef nonnull %937, float noundef nofpclass(nan inf) %939, ptr noundef nonnull %14, ptr noundef nonnull %15, ptr noundef null, ptr noundef null, ptr noundef nonnull %16, ptr noundef null) #14
  %940 = load ptr, ptr %927, align 8, !tbaa !49
  call void @BKE_mesh_orco_verts_transform(ptr noundef %940, ptr noundef nonnull %16, i32 noundef 1, i32 noundef 1) #14
  call void @BLI_kdtree_insert(ptr noundef %921, i32 noundef %930, ptr noundef nonnull %16) #14
  %941 = add nuw nsw i32 %930, 1
  %942 = getelementptr inbounds %struct.ParticleData, ptr %929, i64 1
  %943 = icmp eq i32 %941, %112
  br i1 %943, label %944, label %928, !llvm.loop !426

944:                                              ; preds = %928, %920
  call void @BLI_kdtree_balance(ptr noundef %921) #14
  %945 = load i32, ptr %111, align 8, !tbaa !26
  %946 = load ptr, ptr %107, align 8, !tbaa !5
  %947 = getelementptr inbounds %struct.ParticleSettings, ptr %946, i64 0, i32 19
  %948 = load i16, ptr %947, align 4, !tbaa !24
  %949 = icmp eq i16 %948, 0
  br i1 %949, label %960, label %950

950:                                              ; preds = %944
  %951 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 39
  %952 = load ptr, ptr %951, align 8, !tbaa !14
  %953 = icmp eq ptr %952, null
  %954 = getelementptr inbounds %struct.ParticleSettings, ptr %946, i64 0, i32 90
  %955 = getelementptr inbounds %struct.ParticleSettings, ptr %946, i64 0, i32 89
  %956 = select i1 %953, ptr %955, ptr %954
  %957 = load i32, ptr %956, align 4, !tbaa !68
  %958 = getelementptr inbounds %struct.Scene, ptr %95, i64 0, i32 22
  %959 = call i32 @get_render_child_particle_number(ptr noundef nonnull %958, i32 noundef %957) #14
  br label %960

960:                                              ; preds = %950, %944
  %961 = phi i32 [ %959, %950 ], [ 0, %944 ]
  %962 = mul nsw i32 %961, %945
  br label %1025

963:                                              ; preds = %254
  %964 = sext i16 %256 to i32
  %965 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 23
  %966 = load i32, ptr %965, align 4, !tbaa !124
  %967 = add nsw i32 %966, 31415926
  tail call void @BLI_srandom(i32 noundef %967) #14
  %968 = load ptr, ptr %107, align 8, !tbaa !5
  %969 = getelementptr inbounds %struct.ParticleSettings, ptr %968, i64 0, i32 130
  %970 = load i16, ptr %969, align 8, !tbaa !53
  %971 = icmp eq i16 %970, 0
  br i1 %971, label %972, label %976

972:                                              ; preds = %963
  %973 = getelementptr inbounds %struct.Object, ptr %98, i64 0, i32 19
  %974 = load ptr, ptr %973, align 8, !tbaa !49
  %975 = tail call ptr @CDDM_from_mesh(ptr noundef %974) #14
  br label %976

976:                                              ; preds = %972, %963
  %977 = phi ptr [ %975, %972 ], [ %40, %963 ]
  %978 = icmp eq i32 %1, 0
  br i1 %978, label %980, label %979

979:                                              ; preds = %976
  tail call void @DM_ensure_tessface(ptr noundef %977) #14
  br label %980

980:                                              ; preds = %979, %976
  %981 = tail call zeroext i8 @CustomData_has_layer(ptr noundef %977, i32 noundef 14) #14
  %982 = icmp eq i8 %981, 0
  br i1 %982, label %983, label %985

983:                                              ; preds = %980
  %984 = tail call ptr @BKE_mesh_orco_verts_get(ptr noundef nonnull %98) #14
  tail call void @DM_add_vert_layer(ptr noundef %977, i32 noundef 14, i32 noundef 0, ptr noundef %984) #14
  br label %985

985:                                              ; preds = %983, %980
  br i1 %978, label %986, label %1025

986:                                              ; preds = %985
  %987 = getelementptr inbounds %struct.DerivedMesh, ptr %977, i64 0, i32 50
  %988 = load ptr, ptr %987, align 8, !tbaa !60
  %989 = tail call ptr %988(ptr noundef %977, i32 noundef 0) #14
  %990 = load ptr, ptr %987, align 8, !tbaa !60
  %991 = tail call ptr %990(ptr noundef %977, i32 noundef 14) #14
  %992 = getelementptr inbounds %struct.DerivedMesh, ptr %977, i64 0, i32 23
  %993 = load ptr, ptr %992, align 8, !tbaa !57
  %994 = tail call i32 %993(ptr noundef %977) #14
  %995 = tail call ptr @BLI_kdtree_new(i32 noundef %994) #14
  %996 = icmp sgt i32 %994, 0
  br i1 %996, label %997, label %1024

997:                                              ; preds = %986
  %998 = icmp eq ptr %991, null
  %999 = getelementptr inbounds float, ptr %14, i64 1
  %1000 = getelementptr inbounds float, ptr %14, i64 2
  %1001 = getelementptr inbounds %struct.Object, ptr %98, i64 0, i32 19
  %1002 = zext i32 %994 to i64
  br label %1003

1003:                                             ; preds = %1020, %997
  %1004 = phi i64 [ 0, %997 ], [ %1022, %1020 ]
  br i1 %998, label %1013, label %1005

1005:                                             ; preds = %1003
  %1006 = getelementptr inbounds [3 x float], ptr %991, i64 %1004
  %1007 = load float, ptr %1006, align 4, !tbaa !79
  store float %1007, ptr %14, align 4, !tbaa !79
  %1008 = getelementptr inbounds float, ptr %1006, i64 1
  %1009 = load float, ptr %1008, align 4, !tbaa !79
  store float %1009, ptr %999, align 4, !tbaa !79
  %1010 = getelementptr inbounds float, ptr %1006, i64 2
  %1011 = load float, ptr %1010, align 4, !tbaa !79
  store float %1011, ptr %1000, align 4, !tbaa !79
  %1012 = load ptr, ptr %1001, align 8, !tbaa !49
  call void @BKE_mesh_orco_verts_transform(ptr noundef %1012, ptr noundef nonnull %14, i32 noundef 1, i32 noundef 1) #14
  br label %1020

1013:                                             ; preds = %1003
  %1014 = getelementptr inbounds %struct.MVert, ptr %989, i64 %1004
  %1015 = load float, ptr %1014, align 4, !tbaa !79
  store float %1015, ptr %14, align 4, !tbaa !79
  %1016 = getelementptr inbounds float, ptr %1014, i64 1
  %1017 = load float, ptr %1016, align 4, !tbaa !79
  store float %1017, ptr %999, align 4, !tbaa !79
  %1018 = getelementptr inbounds float, ptr %1014, i64 2
  %1019 = load float, ptr %1018, align 4, !tbaa !79
  store float %1019, ptr %1000, align 4, !tbaa !79
  br label %1020

1020:                                             ; preds = %1013, %1005
  %1021 = trunc i64 %1004 to i32
  call void @BLI_kdtree_insert(ptr noundef %995, i32 noundef %1021, ptr noundef nonnull %14) #14
  %1022 = add nuw nsw i64 %1004, 1
  %1023 = icmp eq i64 %1022, %1002
  br i1 %1023, label %1024, label %1003, !llvm.loop !427

1024:                                             ; preds = %1020, %986
  call void @BLI_kdtree_balance(ptr noundef %995) #14
  br label %1034

1025:                                             ; preds = %985, %960
  %1026 = phi i32 [ 1, %960 ], [ %1, %985 ]
  %1027 = phi ptr [ %921, %960 ], [ null, %985 ]
  %1028 = phi ptr [ %40, %960 ], [ %977, %985 ]
  %1029 = phi i32 [ 1, %960 ], [ 0, %985 ]
  %1030 = phi i32 [ %962, %960 ], [ %112, %985 ]
  %1031 = phi i32 [ 1, %960 ], [ %964, %985 ]
  %1032 = phi i32 [ 4, %960 ], [ %1, %985 ]
  %1033 = getelementptr inbounds %struct.DerivedMesh, ptr %1028, i64 0, i32 25
  br label %1034

1034:                                             ; preds = %1025, %1024
  %1035 = phi ptr [ %1033, %1025 ], [ %992, %1024 ]
  %1036 = phi ptr [ %1028, %1025 ], [ %977, %1024 ]
  %1037 = phi i1 [ false, %1025 ], [ true, %1024 ]
  %1038 = phi i32 [ %1026, %1025 ], [ 0, %1024 ]
  %1039 = phi ptr [ %1027, %1025 ], [ %995, %1024 ]
  %1040 = phi i32 [ %1029, %1025 ], [ 0, %1024 ]
  %1041 = phi i32 [ %1030, %1025 ], [ %112, %1024 ]
  %1042 = phi i32 [ %1031, %1025 ], [ %964, %1024 ]
  %1043 = phi i32 [ %1032, %1025 ], [ 0, %1024 ]
  %1044 = load ptr, ptr %1035, align 8, !tbaa !44
  %1045 = call i32 %1044(ptr noundef %1036) #14
  %1046 = icmp eq i32 %1045, 0
  br i1 %1046, label %1047, label %1162

1047:                                             ; preds = %1034
  %1048 = load i32, ptr %111, align 8, !tbaa !26
  br i1 %126, label %1049, label %1096

1049:                                             ; preds = %1047
  %1050 = load ptr, ptr %107, align 8, !tbaa !5
  %1051 = getelementptr inbounds %struct.ParticleSettings, ptr %1050, i64 0, i32 19
  %1052 = load i16, ptr %1051, align 4, !tbaa !24
  %1053 = icmp eq i16 %1052, 0
  br i1 %1053, label %1064, label %1054

1054:                                             ; preds = %1049
  %1055 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 39
  %1056 = load ptr, ptr %1055, align 8, !tbaa !14
  %1057 = icmp eq ptr %1056, null
  %1058 = getelementptr inbounds %struct.ParticleSettings, ptr %1050, i64 0, i32 90
  %1059 = getelementptr inbounds %struct.ParticleSettings, ptr %1050, i64 0, i32 89
  %1060 = select i1 %1057, ptr %1059, ptr %1058
  %1061 = load i32, ptr %1060, align 4, !tbaa !68
  %1062 = getelementptr inbounds %struct.Scene, ptr %95, i64 0, i32 22
  %1063 = call i32 @get_render_child_particle_number(ptr noundef nonnull %1062, i32 noundef %1061) #14
  br label %1064

1064:                                             ; preds = %1054, %1049
  %1065 = phi i32 [ %1063, %1054 ], [ 0, %1049 ]
  %1066 = mul i32 %1065, %1048
  %1067 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 4
  %1068 = load ptr, ptr %1067, align 8, !tbaa !43
  %1069 = icmp ne ptr %1068, null
  %1070 = icmp ne i32 %1066, 0
  %1071 = select i1 %1069, i1 %1070, i1 false
  %1072 = icmp sgt i32 %1066, 0
  %1073 = select i1 %1071, i1 %1072, i1 false
  br i1 %1073, label %1074, label %1149

1074:                                             ; preds = %1064
  %1075 = and i32 %1066, 3
  %1076 = icmp ult i32 %1066, 4
  br i1 %1076, label %1127, label %1077

1077:                                             ; preds = %1074
  %1078 = and i32 %1066, -4
  br label %1079

1079:                                             ; preds = %1079, %1077
  %1080 = phi ptr [ %1068, %1077 ], [ %1093, %1079 ]
  %1081 = phi i32 [ 0, %1077 ], [ %1094, %1079 ]
  %1082 = getelementptr inbounds %struct.ChildParticle, ptr %1080, i64 0, i32 4
  %1083 = getelementptr inbounds %struct.ChildParticle, ptr %1080, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %1083, i8 0, i64 20, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %1082, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1080, align 4, !tbaa !404
  %1084 = getelementptr inbounds %struct.ChildParticle, ptr %1080, i64 1
  %1085 = getelementptr inbounds %struct.ChildParticle, ptr %1080, i64 1, i32 4
  %1086 = getelementptr inbounds %struct.ChildParticle, ptr %1080, i64 1, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %1086, i8 0, i64 20, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %1085, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1084, align 4, !tbaa !404
  %1087 = getelementptr inbounds %struct.ChildParticle, ptr %1080, i64 2
  %1088 = getelementptr inbounds %struct.ChildParticle, ptr %1080, i64 2, i32 4
  %1089 = getelementptr inbounds %struct.ChildParticle, ptr %1080, i64 2, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %1089, i8 0, i64 20, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %1088, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1087, align 4, !tbaa !404
  %1090 = getelementptr inbounds %struct.ChildParticle, ptr %1080, i64 3
  %1091 = getelementptr inbounds %struct.ChildParticle, ptr %1080, i64 3, i32 4
  %1092 = getelementptr inbounds %struct.ChildParticle, ptr %1080, i64 3, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %1092, i8 0, i64 20, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %1091, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1090, align 4, !tbaa !404
  %1093 = getelementptr inbounds %struct.ChildParticle, ptr %1080, i64 4
  %1094 = add i32 %1081, 4
  %1095 = icmp eq i32 %1094, %1078
  br i1 %1095, label %1127, label %1079, !llvm.loop !428

1096:                                             ; preds = %1047
  %1097 = icmp sgt i32 %1048, 0
  br i1 %1097, label %1098, label %1149

1098:                                             ; preds = %1096
  %1099 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 3
  %1100 = load ptr, ptr %1099, align 8, !tbaa !35
  %1101 = and i32 %1048, 7
  %1102 = icmp ult i32 %1048, 8
  br i1 %1102, label %1138, label %1103

1103:                                             ; preds = %1098
  %1104 = and i32 %1048, -8
  br label %1105

1105:                                             ; preds = %1105, %1103
  %1106 = phi ptr [ %1100, %1103 ], [ %1124, %1105 ]
  %1107 = phi i32 [ 0, %1103 ], [ %1125, %1105 ]
  %1108 = getelementptr inbounds %struct.ParticleData, ptr %1106, i64 0, i32 11
  %1109 = getelementptr inbounds %struct.ParticleData, ptr %1106, i64 0, i32 9
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %1108, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1109, align 8, !tbaa !71
  %1110 = getelementptr inbounds %struct.ParticleData, ptr %1106, i64 1, i32 11
  %1111 = getelementptr inbounds %struct.ParticleData, ptr %1106, i64 1, i32 9
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %1110, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1111, align 8, !tbaa !71
  %1112 = getelementptr inbounds %struct.ParticleData, ptr %1106, i64 2, i32 11
  %1113 = getelementptr inbounds %struct.ParticleData, ptr %1106, i64 2, i32 9
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %1112, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1113, align 8, !tbaa !71
  %1114 = getelementptr inbounds %struct.ParticleData, ptr %1106, i64 3, i32 11
  %1115 = getelementptr inbounds %struct.ParticleData, ptr %1106, i64 3, i32 9
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %1114, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1115, align 8, !tbaa !71
  %1116 = getelementptr inbounds %struct.ParticleData, ptr %1106, i64 4, i32 11
  %1117 = getelementptr inbounds %struct.ParticleData, ptr %1106, i64 4, i32 9
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %1116, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1117, align 8, !tbaa !71
  %1118 = getelementptr inbounds %struct.ParticleData, ptr %1106, i64 5, i32 11
  %1119 = getelementptr inbounds %struct.ParticleData, ptr %1106, i64 5, i32 9
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %1118, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1119, align 8, !tbaa !71
  %1120 = getelementptr inbounds %struct.ParticleData, ptr %1106, i64 6, i32 11
  %1121 = getelementptr inbounds %struct.ParticleData, ptr %1106, i64 6, i32 9
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %1120, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1121, align 8, !tbaa !71
  %1122 = getelementptr inbounds %struct.ParticleData, ptr %1106, i64 7, i32 11
  %1123 = getelementptr inbounds %struct.ParticleData, ptr %1106, i64 7, i32 9
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %1122, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1123, align 8, !tbaa !71
  %1124 = getelementptr inbounds %struct.ParticleData, ptr %1106, i64 8
  %1125 = add i32 %1107, 8
  %1126 = icmp eq i32 %1125, %1104
  br i1 %1126, label %1138, label %1105, !llvm.loop !429

1127:                                             ; preds = %1079, %1074
  %1128 = phi ptr [ %1068, %1074 ], [ %1093, %1079 ]
  %1129 = icmp eq i32 %1075, 0
  br i1 %1129, label %1149, label %1130

1130:                                             ; preds = %1127, %1130
  %1131 = phi ptr [ %1135, %1130 ], [ %1128, %1127 ]
  %1132 = phi i32 [ %1136, %1130 ], [ 0, %1127 ]
  %1133 = getelementptr inbounds %struct.ChildParticle, ptr %1131, i64 0, i32 4
  %1134 = getelementptr inbounds %struct.ChildParticle, ptr %1131, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %1134, i8 0, i64 20, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %1133, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1131, align 4, !tbaa !404
  %1135 = getelementptr inbounds %struct.ChildParticle, ptr %1131, i64 1
  %1136 = add i32 %1132, 1
  %1137 = icmp eq i32 %1136, %1075
  br i1 %1137, label %1149, label %1130, !llvm.loop !430

1138:                                             ; preds = %1105, %1098
  %1139 = phi ptr [ %1100, %1098 ], [ %1124, %1105 ]
  %1140 = icmp eq i32 %1101, 0
  br i1 %1140, label %1149, label %1141

1141:                                             ; preds = %1138, %1141
  %1142 = phi ptr [ %1146, %1141 ], [ %1139, %1138 ]
  %1143 = phi i32 [ %1147, %1141 ], [ 0, %1138 ]
  %1144 = getelementptr inbounds %struct.ParticleData, ptr %1142, i64 0, i32 11
  %1145 = getelementptr inbounds %struct.ParticleData, ptr %1142, i64 0, i32 9
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %1144, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1145, align 8, !tbaa !71
  %1146 = getelementptr inbounds %struct.ParticleData, ptr %1142, i64 1
  %1147 = add i32 %1143, 1
  %1148 = icmp eq i32 %1147, %1101
  br i1 %1148, label %1149, label %1141, !llvm.loop !431

1149:                                             ; preds = %1138, %1141, %1127, %1130, %1096, %1064
  %1150 = load i32, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 16), align 4, !tbaa !432
  %1151 = and i32 %1150, 1
  %1152 = icmp eq i32 %1151, 0
  br i1 %1152, label %1156, label %1153

1153:                                             ; preds = %1149
  %1154 = load ptr, ptr @stderr, align 8, !tbaa !44
  %1155 = call i64 @fwrite(ptr nonnull @.str.15, i64 51, i64 1, ptr %1154) #15
  br label %1156

1156:                                             ; preds = %1153, %1149
  %1157 = icmp eq ptr %1036, %40
  br i1 %1157, label %1161, label %1158

1158:                                             ; preds = %1156
  %1159 = getelementptr inbounds %struct.DerivedMesh, ptr %1036, i64 0, i32 95
  %1160 = load ptr, ptr %1159, align 8, !tbaa !331
  call void %1160(ptr noundef %1036) #14
  br label %1161

1161:                                             ; preds = %1158, %1156
  call void @BLI_kdtree_free(ptr noundef %1039) #14
  br label %1941

1162:                                             ; preds = %1034
  %1163 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %1164 = sext i32 %1045 to i64
  %1165 = shl nsw i64 %1164, 2
  %1166 = call ptr %1163(i64 noundef %1165, ptr noundef nonnull @.str.16) #14
  %1167 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %1168 = sext i32 %1041 to i64
  %1169 = shl nsw i64 %1168, 2
  %1170 = call ptr %1167(i64 noundef %1169, ptr noundef nonnull @.str.17) #14
  %1171 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %1172 = add nsw i32 %1045, 1
  %1173 = sext i32 %1172 to i64
  %1174 = shl nsw i64 %1173, 2
  %1175 = call ptr %1171(i64 noundef %1174, ptr noundef nonnull @.str.18) #14
  %1176 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %1177 = call ptr %1176(i64 noundef %1165, ptr noundef nonnull @.str.19) #14
  %1178 = getelementptr inbounds %struct.ParticleSettings, ptr %108, i64 0, i32 5
  %1179 = load i32, ptr %1178, align 8, !tbaa !222
  %1180 = and i32 %1179, 256
  %1181 = icmp ne i32 %1180, 0
  %1182 = or i1 %126, %1181
  %1183 = icmp ne i32 %1038, 0
  %1184 = and i1 %1183, %1182
  br i1 %1184, label %1185, label %1329

1185:                                             ; preds = %1162
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %17) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %18) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %19) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %20) #14
  %1186 = getelementptr inbounds %struct.DerivedMesh, ptr %1036, i64 0, i32 50
  %1187 = load ptr, ptr %1186, align 8, !tbaa !60
  %1188 = call ptr %1187(ptr noundef nonnull %1036, i32 noundef 14) #14
  %1189 = icmp sgt i32 %1045, 0
  br i1 %1189, label %1190, label %1327

1190:                                             ; preds = %1185
  %1191 = getelementptr inbounds %struct.DerivedMesh, ptr %1036, i64 0, i32 48
  %1192 = icmp eq ptr %1188, null
  %1193 = getelementptr inbounds float, ptr %17, i64 1
  %1194 = getelementptr inbounds float, ptr %17, i64 2
  %1195 = getelementptr inbounds float, ptr %18, i64 1
  %1196 = getelementptr inbounds float, ptr %18, i64 2
  %1197 = getelementptr inbounds float, ptr %19, i64 1
  %1198 = getelementptr inbounds float, ptr %19, i64 2
  %1199 = getelementptr inbounds %struct.Object, ptr %98, i64 0, i32 19
  %1200 = getelementptr inbounds float, ptr %20, i64 1
  %1201 = getelementptr inbounds float, ptr %20, i64 2
  %1202 = getelementptr inbounds %struct.DerivedMesh, ptr %1036, i64 0, i32 46
  %1203 = zext i32 %1045 to i64
  br label %1204

1204:                                             ; preds = %1291, %1190
  %1205 = phi i64 [ 0, %1190 ], [ %1297, %1291 ]
  %1206 = phi float [ 0.000000e+00, %1190 ], [ %1296, %1291 ]
  %1207 = phi float [ 0.000000e+00, %1190 ], [ %1294, %1291 ]
  %1208 = load ptr, ptr %1191, align 8, !tbaa !434
  %1209 = trunc i64 %1205 to i32
  %1210 = call ptr %1208(ptr noundef nonnull %1036, i32 noundef %1209, i32 noundef 4) #14
  br i1 %1192, label %1253, label %1211

1211:                                             ; preds = %1204
  %1212 = load i32, ptr %1210, align 4, !tbaa !251
  %1213 = zext i32 %1212 to i64
  %1214 = getelementptr inbounds [3 x float], ptr %1188, i64 %1213
  %1215 = load float, ptr %1214, align 4, !tbaa !79
  store float %1215, ptr %17, align 8, !tbaa !79
  %1216 = getelementptr inbounds float, ptr %1214, i64 1
  %1217 = load float, ptr %1216, align 4, !tbaa !79
  store float %1217, ptr %1193, align 4, !tbaa !79
  %1218 = getelementptr inbounds float, ptr %1214, i64 2
  %1219 = load float, ptr %1218, align 4, !tbaa !79
  store float %1219, ptr %1194, align 8, !tbaa !79
  %1220 = getelementptr inbounds %struct.MFace, ptr %1210, i64 0, i32 1
  %1221 = load i32, ptr %1220, align 4, !tbaa !253
  %1222 = zext i32 %1221 to i64
  %1223 = getelementptr inbounds [3 x float], ptr %1188, i64 %1222
  %1224 = load float, ptr %1223, align 4, !tbaa !79
  store float %1224, ptr %18, align 8, !tbaa !79
  %1225 = getelementptr inbounds float, ptr %1223, i64 1
  %1226 = load float, ptr %1225, align 4, !tbaa !79
  store float %1226, ptr %1195, align 4, !tbaa !79
  %1227 = getelementptr inbounds float, ptr %1223, i64 2
  %1228 = load float, ptr %1227, align 4, !tbaa !79
  store float %1228, ptr %1196, align 8, !tbaa !79
  %1229 = getelementptr inbounds %struct.MFace, ptr %1210, i64 0, i32 2
  %1230 = load i32, ptr %1229, align 4, !tbaa !254
  %1231 = zext i32 %1230 to i64
  %1232 = getelementptr inbounds [3 x float], ptr %1188, i64 %1231
  %1233 = load float, ptr %1232, align 4, !tbaa !79
  store float %1233, ptr %19, align 8, !tbaa !79
  %1234 = getelementptr inbounds float, ptr %1232, i64 1
  %1235 = load float, ptr %1234, align 4, !tbaa !79
  store float %1235, ptr %1197, align 4, !tbaa !79
  %1236 = getelementptr inbounds float, ptr %1232, i64 2
  %1237 = load float, ptr %1236, align 4, !tbaa !79
  store float %1237, ptr %1198, align 8, !tbaa !79
  %1238 = load ptr, ptr %1199, align 8, !tbaa !49
  call void @BKE_mesh_orco_verts_transform(ptr noundef %1238, ptr noundef nonnull %17, i32 noundef 1, i32 noundef 1) #14
  %1239 = load ptr, ptr %1199, align 8, !tbaa !49
  call void @BKE_mesh_orco_verts_transform(ptr noundef %1239, ptr noundef nonnull %18, i32 noundef 1, i32 noundef 1) #14
  %1240 = load ptr, ptr %1199, align 8, !tbaa !49
  call void @BKE_mesh_orco_verts_transform(ptr noundef %1240, ptr noundef nonnull %19, i32 noundef 1, i32 noundef 1) #14
  %1241 = getelementptr inbounds %struct.MFace, ptr %1210, i64 0, i32 3
  %1242 = load i32, ptr %1241, align 4, !tbaa !255
  %1243 = icmp eq i32 %1242, 0
  br i1 %1243, label %1283, label %1244

1244:                                             ; preds = %1211
  %1245 = zext i32 %1242 to i64
  %1246 = getelementptr inbounds [3 x float], ptr %1188, i64 %1245
  %1247 = load float, ptr %1246, align 4, !tbaa !79
  store float %1247, ptr %20, align 8, !tbaa !79
  %1248 = getelementptr inbounds float, ptr %1246, i64 1
  %1249 = load float, ptr %1248, align 4, !tbaa !79
  store float %1249, ptr %1200, align 4, !tbaa !79
  %1250 = getelementptr inbounds float, ptr %1246, i64 2
  %1251 = load float, ptr %1250, align 4, !tbaa !79
  store float %1251, ptr %1201, align 8, !tbaa !79
  %1252 = load ptr, ptr %1199, align 8, !tbaa !49
  call void @BKE_mesh_orco_verts_transform(ptr noundef %1252, ptr noundef nonnull %20, i32 noundef 1, i32 noundef 1) #14
  br label %1283

1253:                                             ; preds = %1204
  %1254 = load ptr, ptr %1202, align 8, !tbaa !435
  %1255 = load i32, ptr %1210, align 4, !tbaa !251
  %1256 = call ptr %1254(ptr noundef nonnull %1036, i32 noundef %1255, i32 noundef 0) #14
  %1257 = load ptr, ptr %1202, align 8, !tbaa !435
  %1258 = getelementptr inbounds %struct.MFace, ptr %1210, i64 0, i32 1
  %1259 = load i32, ptr %1258, align 4, !tbaa !253
  %1260 = call ptr %1257(ptr noundef nonnull %1036, i32 noundef %1259, i32 noundef 0) #14
  %1261 = load ptr, ptr %1202, align 8, !tbaa !435
  %1262 = getelementptr inbounds %struct.MFace, ptr %1210, i64 0, i32 2
  %1263 = load i32, ptr %1262, align 4, !tbaa !254
  %1264 = call ptr %1261(ptr noundef nonnull %1036, i32 noundef %1263, i32 noundef 0) #14
  %1265 = load <2 x float>, ptr %1256, align 4, !tbaa !79
  store <2 x float> %1265, ptr %17, align 8, !tbaa !79
  %1266 = getelementptr inbounds float, ptr %1256, i64 2
  %1267 = load float, ptr %1266, align 4, !tbaa !79
  store float %1267, ptr %1194, align 8, !tbaa !79
  %1268 = load <2 x float>, ptr %1260, align 4, !tbaa !79
  store <2 x float> %1268, ptr %18, align 8, !tbaa !79
  %1269 = getelementptr inbounds float, ptr %1260, i64 2
  %1270 = load float, ptr %1269, align 4, !tbaa !79
  store float %1270, ptr %1196, align 8, !tbaa !79
  %1271 = load <2 x float>, ptr %1264, align 4, !tbaa !79
  store <2 x float> %1271, ptr %19, align 8, !tbaa !79
  %1272 = getelementptr inbounds float, ptr %1264, i64 2
  %1273 = load float, ptr %1272, align 4, !tbaa !79
  store float %1273, ptr %1198, align 8, !tbaa !79
  %1274 = getelementptr inbounds %struct.MFace, ptr %1210, i64 0, i32 3
  %1275 = load i32, ptr %1274, align 4, !tbaa !255
  %1276 = icmp eq i32 %1275, 0
  br i1 %1276, label %1283, label %1277

1277:                                             ; preds = %1253
  %1278 = load ptr, ptr %1202, align 8, !tbaa !435
  %1279 = call ptr %1278(ptr noundef nonnull %1036, i32 noundef %1275, i32 noundef 0) #14
  %1280 = load <2 x float>, ptr %1279, align 4, !tbaa !79
  store <2 x float> %1280, ptr %20, align 8, !tbaa !79
  %1281 = getelementptr inbounds float, ptr %1279, i64 2
  %1282 = load float, ptr %1281, align 4, !tbaa !79
  store float %1282, ptr %1201, align 8, !tbaa !79
  br label %1283

1283:                                             ; preds = %1277, %1253, %1244, %1211
  %1284 = getelementptr inbounds %struct.MFace, ptr %1210, i64 0, i32 3
  %1285 = load i32, ptr %1284, align 4, !tbaa !255
  %1286 = icmp eq i32 %1285, 0
  br i1 %1286, label %1289, label %1287

1287:                                             ; preds = %1283
  %1288 = call fast nofpclass(nan inf) float @area_quad_v3(ptr noundef nonnull %17, ptr noundef nonnull %18, ptr noundef nonnull %19, ptr noundef nonnull %20) #14
  br label %1291

1289:                                             ; preds = %1283
  %1290 = call fast nofpclass(nan inf) float @area_tri_v3(ptr noundef nonnull %17, ptr noundef nonnull %18, ptr noundef nonnull %19) #14
  br label %1291

1291:                                             ; preds = %1289, %1287
  %1292 = phi fast float [ %1288, %1287 ], [ %1290, %1289 ]
  %1293 = fcmp fast ogt float %1292, %1207
  %1294 = select i1 %1293, float %1292, float %1207
  %1295 = getelementptr inbounds float, ptr %1166, i64 %1205
  store float %1292, ptr %1295, align 4, !tbaa !79
  %1296 = fadd fast float %1292, %1206
  %1297 = add nuw nsw i64 %1205, 1
  %1298 = icmp eq i64 %1297, %1203
  br i1 %1298, label %1299, label %1204, !llvm.loop !436

1299:                                             ; preds = %1291
  %1300 = icmp ult i32 %1045, 8
  br i1 %1300, label %1315, label %1301

1301:                                             ; preds = %1299
  %1302 = and i64 %1203, 4294967288
  %1303 = insertelement <8 x float> poison, float %1296, i64 0
  %1304 = shufflevector <8 x float> %1303, <8 x float> poison, <8 x i32> zeroinitializer
  %1305 = fdiv fast <8 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %1304
  br label %1306

1306:                                             ; preds = %1306, %1301
  %1307 = phi i64 [ 0, %1301 ], [ %1311, %1306 ]
  %1308 = getelementptr inbounds float, ptr %1166, i64 %1307
  %1309 = load <8 x float>, ptr %1308, align 4, !tbaa !79
  %1310 = fmul fast <8 x float> %1309, %1305
  store <8 x float> %1310, ptr %1308, align 4, !tbaa !79
  %1311 = add nuw i64 %1307, 8
  %1312 = icmp eq i64 %1311, %1302
  br i1 %1312, label %1313, label %1306, !llvm.loop !437

1313:                                             ; preds = %1306
  %1314 = icmp eq i64 %1302, %1203
  br i1 %1314, label %1325, label %1315

1315:                                             ; preds = %1299, %1313
  %1316 = phi i64 [ 0, %1299 ], [ %1302, %1313 ]
  %1317 = fdiv fast float 1.000000e+00, %1296
  br label %1318

1318:                                             ; preds = %1315, %1318
  %1319 = phi i64 [ %1323, %1318 ], [ %1316, %1315 ]
  %1320 = getelementptr inbounds float, ptr %1166, i64 %1319
  %1321 = load float, ptr %1320, align 4, !tbaa !79
  %1322 = fmul fast float %1321, %1317
  store float %1322, ptr %1320, align 4, !tbaa !79
  %1323 = add nuw nsw i64 %1319, 1
  %1324 = icmp eq i64 %1323, %1203
  br i1 %1324, label %1325, label %1318, !llvm.loop !438

1325:                                             ; preds = %1318, %1313
  %1326 = fdiv fast float %1294, %1296
  br label %1327

1327:                                             ; preds = %1325, %1185
  %1328 = phi float [ %1326, %1325 ], [ 0x7FF8000000000000, %1185 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %20) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %19) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %18) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %17) #14
  br label %1364

1329:                                             ; preds = %1162
  %1330 = call i32 @llvm.smin.i32(i32 %1045, i32 %1041)
  %1331 = sitofp i32 %1330 to float
  %1332 = fdiv fast float 1.000000e+00, %1331
  %1333 = icmp sgt i32 %1045, 0
  br i1 %1333, label %1334, label %1364

1334:                                             ; preds = %1329
  %1335 = zext i32 %1045 to i64
  %1336 = icmp ult i32 %1045, 32
  br i1 %1336, label %1357, label %1337

1337:                                             ; preds = %1334
  %1338 = and i64 %1335, 4294967264
  %1339 = insertelement <8 x float> poison, float %1332, i64 0
  %1340 = shufflevector <8 x float> %1339, <8 x float> poison, <8 x i32> zeroinitializer
  %1341 = insertelement <8 x float> poison, float %1332, i64 0
  %1342 = shufflevector <8 x float> %1341, <8 x float> poison, <8 x i32> zeroinitializer
  %1343 = insertelement <8 x float> poison, float %1332, i64 0
  %1344 = shufflevector <8 x float> %1343, <8 x float> poison, <8 x i32> zeroinitializer
  %1345 = insertelement <8 x float> poison, float %1332, i64 0
  %1346 = shufflevector <8 x float> %1345, <8 x float> poison, <8 x i32> zeroinitializer
  br label %1347

1347:                                             ; preds = %1347, %1337
  %1348 = phi i64 [ 0, %1337 ], [ %1353, %1347 ]
  %1349 = getelementptr inbounds float, ptr %1166, i64 %1348
  store <8 x float> %1340, ptr %1349, align 4, !tbaa !79
  %1350 = getelementptr inbounds float, ptr %1349, i64 8
  store <8 x float> %1342, ptr %1350, align 4, !tbaa !79
  %1351 = getelementptr inbounds float, ptr %1349, i64 16
  store <8 x float> %1344, ptr %1351, align 4, !tbaa !79
  %1352 = getelementptr inbounds float, ptr %1349, i64 24
  store <8 x float> %1346, ptr %1352, align 4, !tbaa !79
  %1353 = add nuw i64 %1348, 32
  %1354 = icmp eq i64 %1353, %1338
  br i1 %1354, label %1355, label %1347, !llvm.loop !439

1355:                                             ; preds = %1347
  %1356 = icmp eq i64 %1338, %1335
  br i1 %1356, label %1364, label %1357

1357:                                             ; preds = %1334, %1355
  %1358 = phi i64 [ 0, %1334 ], [ %1338, %1355 ]
  br label %1359

1359:                                             ; preds = %1357, %1359
  %1360 = phi i64 [ %1362, %1359 ], [ %1358, %1357 ]
  %1361 = getelementptr inbounds float, ptr %1166, i64 %1360
  store float %1332, ptr %1361, align 4, !tbaa !79
  %1362 = add nuw nsw i64 %1360, 1
  %1363 = icmp eq i64 %1362, %1335
  br i1 %1363, label %1364, label %1359, !llvm.loop !440

1364:                                             ; preds = %1359, %1355, %1329, %1327
  %1365 = phi float [ %1328, %1327 ], [ %1332, %1329 ], [ %1332, %1355 ], [ %1332, %1359 ]
  %1366 = call ptr @psys_cache_vgroup(ptr noundef %1036, ptr noundef %100, i32 noundef 0) #14
  %1367 = icmp eq ptr %1366, null
  br i1 %1367, label %1501, label %1368

1368:                                             ; preds = %1364
  %1369 = icmp sgt i32 %1045, 0
  br i1 %1037, label %1374, label %1370

1370:                                             ; preds = %1368
  br i1 %1369, label %1371, label %1499

1371:                                             ; preds = %1370
  %1372 = getelementptr inbounds %struct.DerivedMesh, ptr %1036, i64 0, i32 48
  %1373 = zext i32 %1045 to i64
  br label %1460

1374:                                             ; preds = %1368
  br i1 %1369, label %1375, label %1499

1375:                                             ; preds = %1374
  %1376 = zext i32 %1045 to i64
  %1377 = icmp ult i32 %1045, 32
  br i1 %1377, label %1413, label %1378

1378:                                             ; preds = %1375
  %1379 = shl nuw nsw i64 %1376, 2
  %1380 = getelementptr i8, ptr %1166, i64 %1379
  %1381 = getelementptr i8, ptr %1366, i64 %1379
  %1382 = icmp ult ptr %1166, %1381
  %1383 = icmp ult ptr %1366, %1380
  %1384 = and i1 %1382, %1383
  br i1 %1384, label %1413, label %1385

1385:                                             ; preds = %1378
  %1386 = and i64 %1376, 4294967264
  br label %1387

1387:                                             ; preds = %1387, %1385
  %1388 = phi i64 [ 0, %1385 ], [ %1409, %1387 ]
  %1389 = getelementptr inbounds float, ptr %1366, i64 %1388
  %1390 = load <8 x float>, ptr %1389, align 4, !tbaa !79, !alias.scope !441
  %1391 = getelementptr inbounds float, ptr %1389, i64 8
  %1392 = load <8 x float>, ptr %1391, align 4, !tbaa !79, !alias.scope !441
  %1393 = getelementptr inbounds float, ptr %1389, i64 16
  %1394 = load <8 x float>, ptr %1393, align 4, !tbaa !79, !alias.scope !441
  %1395 = getelementptr inbounds float, ptr %1389, i64 24
  %1396 = load <8 x float>, ptr %1395, align 4, !tbaa !79, !alias.scope !441
  %1397 = getelementptr inbounds float, ptr %1166, i64 %1388
  %1398 = load <8 x float>, ptr %1397, align 4, !tbaa !79, !alias.scope !444, !noalias !441
  %1399 = getelementptr inbounds float, ptr %1397, i64 8
  %1400 = load <8 x float>, ptr %1399, align 4, !tbaa !79, !alias.scope !444, !noalias !441
  %1401 = getelementptr inbounds float, ptr %1397, i64 16
  %1402 = load <8 x float>, ptr %1401, align 4, !tbaa !79, !alias.scope !444, !noalias !441
  %1403 = getelementptr inbounds float, ptr %1397, i64 24
  %1404 = load <8 x float>, ptr %1403, align 4, !tbaa !79, !alias.scope !444, !noalias !441
  %1405 = fmul fast <8 x float> %1398, %1390
  %1406 = fmul fast <8 x float> %1400, %1392
  %1407 = fmul fast <8 x float> %1402, %1394
  %1408 = fmul fast <8 x float> %1404, %1396
  store <8 x float> %1405, ptr %1397, align 4, !tbaa !79, !alias.scope !444, !noalias !441
  store <8 x float> %1406, ptr %1399, align 4, !tbaa !79, !alias.scope !444, !noalias !441
  store <8 x float> %1407, ptr %1401, align 4, !tbaa !79, !alias.scope !444, !noalias !441
  store <8 x float> %1408, ptr %1403, align 4, !tbaa !79, !alias.scope !444, !noalias !441
  %1409 = add nuw i64 %1388, 32
  %1410 = icmp eq i64 %1409, %1386
  br i1 %1410, label %1411, label %1387, !llvm.loop !446

1411:                                             ; preds = %1387
  %1412 = icmp eq i64 %1386, %1376
  br i1 %1412, label %1499, label %1413

1413:                                             ; preds = %1378, %1375, %1411
  %1414 = phi i64 [ 0, %1378 ], [ 0, %1375 ], [ %1386, %1411 ]
  %1415 = xor i64 %1414, -1
  %1416 = add nsw i64 %1415, %1376
  %1417 = and i64 %1376, 3
  %1418 = icmp eq i64 %1417, 0
  br i1 %1418, label %1430, label %1419

1419:                                             ; preds = %1413, %1419
  %1420 = phi i64 [ %1427, %1419 ], [ %1414, %1413 ]
  %1421 = phi i64 [ %1428, %1419 ], [ 0, %1413 ]
  %1422 = getelementptr inbounds float, ptr %1366, i64 %1420
  %1423 = load float, ptr %1422, align 4, !tbaa !79
  %1424 = getelementptr inbounds float, ptr %1166, i64 %1420
  %1425 = load float, ptr %1424, align 4, !tbaa !79
  %1426 = fmul fast float %1425, %1423
  store float %1426, ptr %1424, align 4, !tbaa !79
  %1427 = add nuw nsw i64 %1420, 1
  %1428 = add i64 %1421, 1
  %1429 = icmp eq i64 %1428, %1417
  br i1 %1429, label %1430, label %1419, !llvm.loop !447

1430:                                             ; preds = %1419, %1413
  %1431 = phi i64 [ %1414, %1413 ], [ %1427, %1419 ]
  %1432 = icmp ult i64 %1416, 3
  br i1 %1432, label %1499, label %1433

1433:                                             ; preds = %1430, %1433
  %1434 = phi i64 [ %1458, %1433 ], [ %1431, %1430 ]
  %1435 = getelementptr inbounds float, ptr %1366, i64 %1434
  %1436 = load float, ptr %1435, align 4, !tbaa !79
  %1437 = getelementptr inbounds float, ptr %1166, i64 %1434
  %1438 = load float, ptr %1437, align 4, !tbaa !79
  %1439 = fmul fast float %1438, %1436
  store float %1439, ptr %1437, align 4, !tbaa !79
  %1440 = add nuw nsw i64 %1434, 1
  %1441 = getelementptr inbounds float, ptr %1366, i64 %1440
  %1442 = load float, ptr %1441, align 4, !tbaa !79
  %1443 = getelementptr inbounds float, ptr %1166, i64 %1440
  %1444 = load float, ptr %1443, align 4, !tbaa !79
  %1445 = fmul fast float %1444, %1442
  store float %1445, ptr %1443, align 4, !tbaa !79
  %1446 = add nuw nsw i64 %1434, 2
  %1447 = getelementptr inbounds float, ptr %1366, i64 %1446
  %1448 = load float, ptr %1447, align 4, !tbaa !79
  %1449 = getelementptr inbounds float, ptr %1166, i64 %1446
  %1450 = load float, ptr %1449, align 4, !tbaa !79
  %1451 = fmul fast float %1450, %1448
  store float %1451, ptr %1449, align 4, !tbaa !79
  %1452 = add nuw nsw i64 %1434, 3
  %1453 = getelementptr inbounds float, ptr %1366, i64 %1452
  %1454 = load float, ptr %1453, align 4, !tbaa !79
  %1455 = getelementptr inbounds float, ptr %1166, i64 %1452
  %1456 = load float, ptr %1455, align 4, !tbaa !79
  %1457 = fmul fast float %1456, %1454
  store float %1457, ptr %1455, align 4, !tbaa !79
  %1458 = add nuw nsw i64 %1434, 4
  %1459 = icmp eq i64 %1458, %1376
  br i1 %1459, label %1499, label %1433, !llvm.loop !448

1460:                                             ; preds = %1492, %1371
  %1461 = phi i64 [ 0, %1371 ], [ %1497, %1492 ]
  %1462 = load ptr, ptr %1372, align 8, !tbaa !434
  %1463 = trunc i64 %1461 to i32
  %1464 = call ptr %1462(ptr noundef %1036, i32 noundef %1463, i32 noundef 4) #14
  %1465 = load i32, ptr %1464, align 4, !tbaa !251
  %1466 = zext i32 %1465 to i64
  %1467 = getelementptr inbounds float, ptr %1366, i64 %1466
  %1468 = load float, ptr %1467, align 4, !tbaa !79
  %1469 = getelementptr inbounds %struct.MFace, ptr %1464, i64 0, i32 1
  %1470 = load i32, ptr %1469, align 4, !tbaa !253
  %1471 = zext i32 %1470 to i64
  %1472 = getelementptr inbounds float, ptr %1366, i64 %1471
  %1473 = load float, ptr %1472, align 4, !tbaa !79
  %1474 = fadd fast float %1473, %1468
  %1475 = getelementptr inbounds %struct.MFace, ptr %1464, i64 0, i32 2
  %1476 = load i32, ptr %1475, align 4, !tbaa !254
  %1477 = zext i32 %1476 to i64
  %1478 = getelementptr inbounds float, ptr %1366, i64 %1477
  %1479 = load float, ptr %1478, align 4, !tbaa !79
  %1480 = fadd fast float %1474, %1479
  %1481 = getelementptr inbounds %struct.MFace, ptr %1464, i64 0, i32 3
  %1482 = load i32, ptr %1481, align 4, !tbaa !255
  %1483 = icmp eq i32 %1482, 0
  br i1 %1483, label %1490, label %1484

1484:                                             ; preds = %1460
  %1485 = zext i32 %1482 to i64
  %1486 = getelementptr inbounds float, ptr %1366, i64 %1485
  %1487 = load float, ptr %1486, align 4, !tbaa !79
  %1488 = fadd fast float %1487, %1480
  %1489 = fmul fast float %1488, 2.500000e-01
  br label %1492

1490:                                             ; preds = %1460
  %1491 = fmul fast float %1480, 0x3FD5555560000000
  br label %1492

1492:                                             ; preds = %1490, %1484
  %1493 = phi float [ %1489, %1484 ], [ %1491, %1490 ]
  %1494 = getelementptr inbounds float, ptr %1166, i64 %1461
  %1495 = load float, ptr %1494, align 4, !tbaa !79
  %1496 = fmul fast float %1495, %1493
  store float %1496, ptr %1494, align 4, !tbaa !79
  %1497 = add nuw nsw i64 %1461, 1
  %1498 = icmp eq i64 %1497, %1373
  br i1 %1498, label %1499, label %1460, !llvm.loop !449

1499:                                             ; preds = %1492, %1430, %1433, %1411, %1374, %1370
  %1500 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  call void %1500(ptr noundef nonnull %1366) #14
  br label %1501

1501:                                             ; preds = %1499, %1364
  %1502 = icmp sgt i32 %1045, 0
  br i1 %1502, label %1504, label %1503

1503:                                             ; preds = %1501
  store float 0.000000e+00, ptr %1175, align 4, !tbaa !79
  br label %1601

1504:                                             ; preds = %1501
  %1505 = zext i32 %1045 to i64
  %1506 = icmp ult i32 %1045, 32
  br i1 %1506, label %1535, label %1507

1507:                                             ; preds = %1504
  %1508 = and i64 %1505, 4294967264
  br label %1509

1509:                                             ; preds = %1509, %1507
  %1510 = phi i64 [ 0, %1507 ], [ %1527, %1509 ]
  %1511 = phi <8 x float> [ zeroinitializer, %1507 ], [ %1523, %1509 ]
  %1512 = phi <8 x float> [ zeroinitializer, %1507 ], [ %1524, %1509 ]
  %1513 = phi <8 x float> [ zeroinitializer, %1507 ], [ %1525, %1509 ]
  %1514 = phi <8 x float> [ zeroinitializer, %1507 ], [ %1526, %1509 ]
  %1515 = getelementptr inbounds float, ptr %1166, i64 %1510
  %1516 = load <8 x float>, ptr %1515, align 4, !tbaa !79
  %1517 = getelementptr inbounds float, ptr %1515, i64 8
  %1518 = load <8 x float>, ptr %1517, align 4, !tbaa !79
  %1519 = getelementptr inbounds float, ptr %1515, i64 16
  %1520 = load <8 x float>, ptr %1519, align 4, !tbaa !79
  %1521 = getelementptr inbounds float, ptr %1515, i64 24
  %1522 = load <8 x float>, ptr %1521, align 4, !tbaa !79
  %1523 = fadd fast <8 x float> %1516, %1511
  %1524 = fadd fast <8 x float> %1518, %1512
  %1525 = fadd fast <8 x float> %1520, %1513
  %1526 = fadd fast <8 x float> %1522, %1514
  %1527 = add nuw i64 %1510, 32
  %1528 = icmp eq i64 %1527, %1508
  br i1 %1528, label %1529, label %1509, !llvm.loop !450

1529:                                             ; preds = %1509
  %1530 = fadd fast <8 x float> %1524, %1523
  %1531 = fadd fast <8 x float> %1525, %1530
  %1532 = fadd fast <8 x float> %1526, %1531
  %1533 = call fast float @llvm.vector.reduce.fadd.v8f32(float -0.000000e+00, <8 x float> %1532)
  %1534 = icmp eq i64 %1508, %1505
  br i1 %1534, label %1546, label %1535

1535:                                             ; preds = %1504, %1529
  %1536 = phi i64 [ 0, %1504 ], [ %1508, %1529 ]
  %1537 = phi float [ 0.000000e+00, %1504 ], [ %1533, %1529 ]
  br label %1538

1538:                                             ; preds = %1535, %1538
  %1539 = phi i64 [ %1544, %1538 ], [ %1536, %1535 ]
  %1540 = phi float [ %1543, %1538 ], [ %1537, %1535 ]
  %1541 = getelementptr inbounds float, ptr %1166, i64 %1539
  %1542 = load float, ptr %1541, align 4, !tbaa !79
  %1543 = fadd fast float %1542, %1540
  %1544 = add nuw nsw i64 %1539, 1
  %1545 = icmp eq i64 %1544, %1505
  br i1 %1545, label %1546, label %1538, !llvm.loop !451

1546:                                             ; preds = %1538, %1529
  %1547 = phi float [ %1533, %1529 ], [ %1543, %1538 ]
  %1548 = fcmp fast ogt float %1547, 0.000000e+00
  %1549 = fdiv fast float 1.000000e+00, %1547
  %1550 = select fast i1 %1548, float %1549, float 0.000000e+00
  store float 0.000000e+00, ptr %1175, align 4, !tbaa !79
  %1551 = and i64 %1505, 3
  %1552 = icmp ult i32 %1045, 4
  br i1 %1552, label %1585, label %1553

1553:                                             ; preds = %1546
  %1554 = and i64 %1505, 4294967292
  br label %1555

1555:                                             ; preds = %1555, %1553
  %1556 = phi float [ 0.000000e+00, %1553 ], [ %1580, %1555 ]
  %1557 = phi i64 [ 0, %1553 ], [ %1581, %1555 ]
  %1558 = phi i64 [ 0, %1553 ], [ %1583, %1555 ]
  %1559 = getelementptr inbounds float, ptr %1166, i64 %1557
  %1560 = load float, ptr %1559, align 4, !tbaa !79
  %1561 = fmul fast float %1560, %1550
  %1562 = fadd fast float %1561, %1556
  %1563 = or i64 %1557, 1
  %1564 = getelementptr inbounds float, ptr %1175, i64 %1563
  store float %1562, ptr %1564, align 4, !tbaa !79
  %1565 = getelementptr inbounds float, ptr %1166, i64 %1563
  %1566 = load float, ptr %1565, align 4, !tbaa !79
  %1567 = fmul fast float %1566, %1550
  %1568 = fadd fast float %1567, %1562
  %1569 = or i64 %1557, 2
  %1570 = getelementptr inbounds float, ptr %1175, i64 %1569
  store float %1568, ptr %1570, align 4, !tbaa !79
  %1571 = getelementptr inbounds float, ptr %1166, i64 %1569
  %1572 = load float, ptr %1571, align 4, !tbaa !79
  %1573 = fmul fast float %1572, %1550
  %1574 = fadd fast float %1573, %1568
  %1575 = or i64 %1557, 3
  %1576 = getelementptr inbounds float, ptr %1175, i64 %1575
  store float %1574, ptr %1576, align 4, !tbaa !79
  %1577 = getelementptr inbounds float, ptr %1166, i64 %1575
  %1578 = load float, ptr %1577, align 4, !tbaa !79
  %1579 = fmul fast float %1578, %1550
  %1580 = fadd fast float %1579, %1574
  %1581 = add nuw nsw i64 %1557, 4
  %1582 = getelementptr inbounds float, ptr %1175, i64 %1581
  store float %1580, ptr %1582, align 4, !tbaa !79
  %1583 = add i64 %1558, 4
  %1584 = icmp eq i64 %1583, %1554
  br i1 %1584, label %1585, label %1555, !llvm.loop !452

1585:                                             ; preds = %1555, %1546
  %1586 = phi float [ 0.000000e+00, %1546 ], [ %1580, %1555 ]
  %1587 = phi i64 [ 0, %1546 ], [ %1581, %1555 ]
  %1588 = icmp eq i64 %1551, 0
  br i1 %1588, label %1601, label %1589

1589:                                             ; preds = %1585, %1589
  %1590 = phi float [ %1596, %1589 ], [ %1586, %1585 ]
  %1591 = phi i64 [ %1597, %1589 ], [ %1587, %1585 ]
  %1592 = phi i64 [ %1599, %1589 ], [ 0, %1585 ]
  %1593 = getelementptr inbounds float, ptr %1166, i64 %1591
  %1594 = load float, ptr %1593, align 4, !tbaa !79
  %1595 = fmul fast float %1594, %1550
  %1596 = fadd fast float %1595, %1590
  %1597 = add nuw nsw i64 %1591, 1
  %1598 = getelementptr inbounds float, ptr %1175, i64 %1597
  store float %1596, ptr %1598, align 4, !tbaa !79
  %1599 = add i64 %1592, 1
  %1600 = icmp eq i64 %1599, %1551
  br i1 %1600, label %1601, label %1589, !llvm.loop !453

1601:                                             ; preds = %1585, %1589, %1503
  %1602 = load i32, ptr %1178, align 8, !tbaa !222
  %1603 = and i32 %1602, 128
  %1604 = icmp eq i32 %1603, 0
  br i1 %1604, label %1605, label %1610

1605:                                             ; preds = %1601
  %1606 = getelementptr inbounds %struct.ParticleSettings, ptr %108, i64 0, i32 48
  %1607 = load i16, ptr %1606, align 4, !tbaa !454
  %1608 = and i16 %1607, 1
  %1609 = icmp eq i16 %1608, 0
  br i1 %1609, label %1658, label %1610

1610:                                             ; preds = %1605, %1601
  %1611 = icmp sgt i32 %1041, 0
  br i1 %1611, label %1612, label %1708

1612:                                             ; preds = %1610
  %1613 = getelementptr inbounds float, ptr %1175, i64 %1164
  %1614 = icmp slt i32 %1045, 0
  %1615 = add nsw i32 %1045, -1
  %1616 = zext i32 %1041 to i64
  br label %1617

1617:                                             ; preds = %1649, %1612
  %1618 = phi i64 [ 0, %1612 ], [ %1656, %1649 ]
  %1619 = call fast nofpclass(nan inf) float @BLI_frand() #14
  %1620 = load float, ptr %1613, align 4, !tbaa !79
  %1621 = fmul fast float %1620, %1619
  %1622 = fcmp fast oeq float %1621, 0.000000e+00
  %1623 = or i1 %1614, %1622
  br i1 %1623, label %1649, label %1624

1624:                                             ; preds = %1617, %1645
  %1625 = phi i32 [ %1647, %1645 ], [ %1045, %1617 ]
  %1626 = phi i32 [ %1646, %1645 ], [ 0, %1617 ]
  %1627 = add nsw i32 %1626, %1625
  %1628 = sdiv i32 %1627, 2
  %1629 = sext i32 %1628 to i64
  %1630 = getelementptr inbounds float, ptr %1175, i64 %1629
  %1631 = load float, ptr %1630, align 4, !tbaa !79
  %1632 = fcmp fast olt float %1631, %1621
  br i1 %1632, label %1633, label %1641

1633:                                             ; preds = %1624
  %1634 = add nsw i32 %1628, 1
  %1635 = sext i32 %1634 to i64
  %1636 = getelementptr inbounds float, ptr %1175, i64 %1635
  %1637 = load float, ptr %1636, align 4, !tbaa !79
  %1638 = fcmp fast ult float %1637, %1621
  br i1 %1638, label %1639, label %1649

1639:                                             ; preds = %1633
  %1640 = fcmp fast ult float %1631, %1621
  br i1 %1640, label %1645, label %1643

1641:                                             ; preds = %1624
  %1642 = fcmp fast ult float %1631, %1621
  br i1 %1642, label %1649, label %1643

1643:                                             ; preds = %1641, %1639
  %1644 = add nsw i32 %1628, -1
  br label %1645

1645:                                             ; preds = %1643, %1639
  %1646 = phi i32 [ %1626, %1643 ], [ %1634, %1639 ]
  %1647 = phi i32 [ %1644, %1643 ], [ %1625, %1639 ]
  %1648 = icmp sgt i32 %1646, %1647
  br i1 %1648, label %1649, label %1624, !llvm.loop !455

1649:                                             ; preds = %1645, %1641, %1633, %1617
  %1650 = phi i32 [ 0, %1617 ], [ %1628, %1641 ], [ %1646, %1645 ], [ %1628, %1633 ]
  %1651 = getelementptr inbounds i32, ptr %1170, i64 %1618
  %1652 = icmp sgt i32 %1045, %1650
  %1653 = select i1 %1652, i32 %1650, i32 %1615
  store i32 %1653, ptr %1651, align 4, !tbaa !68
  %1654 = sext i32 %1653 to i64
  %1655 = getelementptr inbounds float, ptr %1177, i64 %1654
  store float %1621, ptr %1655, align 4, !tbaa !79
  %1656 = add nuw nsw i64 %1618, 1
  %1657 = icmp eq i64 %1656, %1616
  br i1 %1657, label %1708, label %1617, !llvm.loop !456

1658:                                             ; preds = %1605
  %1659 = icmp slt i32 %1041, 2
  %1660 = sitofp i32 %1041 to double
  %1661 = fdiv fast double 1.000000e+00, %1660
  %1662 = select fast i1 %1659, double 5.000000e-01, double %1661
  %1663 = icmp sgt i32 %1041, 0
  br i1 %1663, label %1664, label %1708

1664:                                             ; preds = %1658
  %1665 = add nsw i32 %1045, -1
  %1666 = add nsw i32 %1041, -1
  %1667 = zext i32 %1666 to i64
  %1668 = zext i32 %1041 to i64
  %1669 = add nsw i64 %1667, -1
  %1670 = getelementptr inbounds i32, ptr %1170, i64 %1669
  br label %1671

1671:                                             ; preds = %1700, %1664
  %1672 = phi i64 [ 0, %1664 ], [ %1705, %1700 ]
  %1673 = phi double [ 0x3EB0C6F7A0B5ED8D, %1664 ], [ %1706, %1700 ]
  %1674 = phi i32 [ 0, %1664 ], [ %1689, %1700 ]
  %1675 = sext i32 %1674 to i64
  %1676 = call i32 @llvm.smax.i32(i32 %1674, i32 %1045)
  br label %1677

1677:                                             ; preds = %1680, %1671
  %1678 = phi i64 [ %1675, %1671 ], [ %1681, %1680 ]
  %1679 = icmp slt i64 %1678, %1164
  br i1 %1679, label %1680, label %1688

1680:                                             ; preds = %1677
  %1681 = add nsw i64 %1678, 1
  %1682 = getelementptr inbounds float, ptr %1175, i64 %1681
  %1683 = load float, ptr %1682, align 4, !tbaa !79
  %1684 = fpext float %1683 to double
  %1685 = fcmp fast ogt double %1673, %1684
  br i1 %1685, label %1677, label %1686, !llvm.loop !457

1686:                                             ; preds = %1680
  %1687 = trunc i64 %1678 to i32
  br label %1688

1688:                                             ; preds = %1677, %1686
  %1689 = phi i32 [ %1687, %1686 ], [ %1676, %1677 ]
  %1690 = call i32 @llvm.smin.i32(i32 %1665, i32 %1689)
  %1691 = getelementptr inbounds i32, ptr %1170, i64 %1672
  store i32 %1690, ptr %1691, align 4, !tbaa !68
  %1692 = icmp eq i64 %1672, %1667
  br i1 %1692, label %1693, label %1700

1693:                                             ; preds = %1688
  %1694 = sext i32 %1690 to i64
  %1695 = getelementptr inbounds float, ptr %1166, i64 %1694
  %1696 = load float, ptr %1695, align 4, !tbaa !79
  %1697 = fcmp fast oeq float %1696, 0.000000e+00
  br i1 %1697, label %1698, label %1700

1698:                                             ; preds = %1693
  %1699 = load i32, ptr %1670, align 4, !tbaa !68
  store i32 %1699, ptr %1691, align 4, !tbaa !68
  br label %1700

1700:                                             ; preds = %1698, %1693, %1688
  %1701 = phi i32 [ %1699, %1698 ], [ %1690, %1693 ], [ %1690, %1688 ]
  %1702 = fptrunc double %1673 to float
  %1703 = sext i32 %1701 to i64
  %1704 = getelementptr inbounds float, ptr %1177, i64 %1703
  store float %1702, ptr %1704, align 4, !tbaa !79
  %1705 = add nuw nsw i64 %1672, 1
  %1706 = fadd fast double %1673, %1662
  %1707 = icmp eq i64 %1705, %1668
  br i1 %1707, label %1708, label %1671, !llvm.loop !458

1708:                                             ; preds = %1649, %1700, %1658, %1610
  %1709 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  call void %1709(ptr noundef nonnull %1175) #14
  %1710 = getelementptr inbounds %struct.ParticleSettings, ptr %108, i64 0, i32 7
  %1711 = load i16, ptr %1710, align 8, !tbaa !18
  %1712 = icmp eq i16 %1711, 2
  br i1 %1712, label %1713, label %1740

1713:                                             ; preds = %1708
  %1714 = getelementptr inbounds %struct.ParticleSettings, ptr %108, i64 0, i32 19
  %1715 = load i16, ptr %1714, align 4, !tbaa !24
  %1716 = icmp eq i16 %1715, 2
  br i1 %1716, label %1717, label %1721

1717:                                             ; preds = %1713
  %1718 = getelementptr inbounds %struct.ParticleSettings, ptr %108, i64 0, i32 91
  %1719 = load float, ptr %1718, align 4, !tbaa !459
  %1720 = fcmp fast une float %1719, 0.000000e+00
  br i1 %1720, label %1740, label %1721

1721:                                             ; preds = %1717, %1713
  br i1 %1037, label %1722, label %1728

1722:                                             ; preds = %1721
  %1723 = getelementptr inbounds %struct.DerivedMesh, ptr %1036, i64 0, i32 5
  %1724 = load i32, ptr %1723, align 8, !tbaa !460
  %1725 = icmp eq i32 %1724, 0
  br i1 %1725, label %1740, label %1726

1726:                                             ; preds = %1722
  %1727 = getelementptr inbounds %struct.DerivedMesh, ptr %1036, i64 0, i32 50
  br label %1734

1728:                                             ; preds = %1721
  %1729 = getelementptr inbounds %struct.DerivedMesh, ptr %1036, i64 0, i32 7
  %1730 = load i32, ptr %1729, align 8, !tbaa !461
  %1731 = icmp eq i32 %1730, 0
  br i1 %1731, label %1740, label %1732

1732:                                             ; preds = %1728
  %1733 = getelementptr inbounds %struct.DerivedMesh, ptr %1036, i64 0, i32 52
  br label %1734

1734:                                             ; preds = %1732, %1726
  %1735 = phi ptr [ %1733, %1732 ], [ %1727, %1726 ]
  %1736 = load ptr, ptr %1735, align 8, !tbaa !44
  %1737 = call ptr %1736(ptr noundef nonnull %1036, i32 noundef 7) #14
  %1738 = icmp eq ptr %1737, null
  br i1 %1738, label %1740, label %1739

1739:                                             ; preds = %1734
  call void @qsort_r(ptr noundef %1170, i64 noundef %1168, i64 noundef 4, ptr noundef nonnull @distribute_compare_orig_index, ptr noundef nonnull %1737) #14
  br label %1740

1740:                                             ; preds = %1739, %1734, %1728, %1722, %1717, %1708
  %1741 = icmp eq i32 %1042, 0
  %1742 = add i32 %1038, -1
  %1743 = icmp ult i32 %1742, 2
  %1744 = and i1 %1743, %1741
  br i1 %1744, label %1745, label %1871

1745:                                             ; preds = %1740
  %1746 = getelementptr inbounds %struct.ParticleSettings, ptr %108, i64 0, i32 64
  %1747 = load i32, ptr %1746, align 8, !tbaa !462
  %1748 = icmp eq i32 %1747, 0
  br i1 %1748, label %1749, label %1756

1749:                                             ; preds = %1745
  %1750 = sdiv i32 %1041, %1045
  %1751 = load i32, ptr %1178, align 8, !tbaa !222
  %1752 = lshr i32 %1751, 8
  %1753 = and i32 %1752, 1
  %1754 = shl nsw i32 %1750, %1753
  %1755 = call i32 @llvm.smax.i32(i32 %1754, i32 3)
  br label %1756

1756:                                             ; preds = %1749, %1745
  %1757 = phi i32 [ %1755, %1749 ], [ %1747, %1745 ]
  %1758 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %1759 = shl nsw i32 %1757, 1
  %1760 = add nsw i32 %1759, 2
  %1761 = sext i32 %1760 to i64
  %1762 = shl nsw i64 %1761, 2
  %1763 = call ptr %1758(i64 noundef %1762, ptr noundef nonnull @.str.20) #14
  %1764 = icmp slt i32 %1757, 25
  br i1 %1764, label %1765, label %1818

1765:                                             ; preds = %1756
  %1766 = getelementptr inbounds %struct.ParticleSettings, ptr %108, i64 0, i32 59
  %1767 = load float, ptr %1766, align 4, !tbaa !463
  %1768 = icmp eq i32 %1757, 0
  br i1 %1768, label %1868, label %1769

1769:                                             ; preds = %1765
  %1770 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 23
  %1771 = load i32, ptr %1770, align 4, !tbaa !124
  %1772 = sitofp i32 %1757 to float
  %1773 = call fast float @llvm.sqrt.f32(float %1772)
  %1774 = fdiv fast float 1.000000e+00, %1773
  %1775 = fdiv fast float 1.000000e+00, %1772
  %1776 = fdiv fast float %1773, %1772
  %1777 = add nsw i32 %1757, 31415926
  %1778 = add nsw i32 %1777, %1771
  %1779 = call ptr @BLI_rng_new(i32 noundef %1778) #14
  %1780 = icmp sgt i32 %1757, 0
  br i1 %1780, label %1781, label %1811

1781:                                             ; preds = %1769
  %1782 = fmul fast float %1767, %1774
  %1783 = zext i32 %1759 to i64
  %1784 = fdiv fast float 1.000000e+00, %1772
  br label %1785

1785:                                             ; preds = %1785, %1781
  %1786 = phi i64 [ 0, %1781 ], [ %1809, %1785 ]
  %1787 = phi float [ 0.000000e+00, %1781 ], [ %1808, %1785 ]
  %1788 = call fast nofpclass(nan inf) float @BLI_rng_get_float(ptr noundef %1779) #14
  %1789 = fsub fast float 5.000000e-01, %1788
  %1790 = fmul fast float %1789, %1782
  %1791 = fadd fast float %1790, %1787
  %1792 = getelementptr inbounds float, ptr %1763, i64 %1786
  store float %1791, ptr %1792, align 4, !tbaa !79
  %1793 = trunc i64 %1786 to i32
  %1794 = sitofp i32 %1793 to float
  %1795 = fmul fast float %1794, 5.000000e-01
  %1796 = fmul fast float %1795, %1784
  %1797 = call fast nofpclass(nan inf) float @BLI_rng_get_float(ptr noundef %1779) #14
  %1798 = fsub fast float 5.000000e-01, %1797
  %1799 = fmul fast float %1798, %1782
  %1800 = fadd fast float %1799, %1796
  %1801 = load float, ptr %1792, align 4, !tbaa !79
  %1802 = insertelement <2 x float> poison, float %1801, i64 0
  %1803 = insertelement <2 x float> %1802, float %1800, i64 1
  %1804 = call fast <2 x float> @llvm.floor.v2f32(<2 x float> %1803)
  %1805 = fsub fast <2 x float> %1803, %1804
  store <2 x float> %1805, ptr %1792, align 4, !tbaa !79
  %1806 = fadd fast float %1787, %1776
  %1807 = call fast float @llvm.floor.f32(float %1806)
  %1808 = fsub fast float %1806, %1807
  %1809 = add nuw nsw i64 %1786, 2
  %1810 = icmp ult i64 %1809, %1783
  br i1 %1810, label %1785, label %1811, !llvm.loop !464

1811:                                             ; preds = %1785, %1769
  %1812 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !44
  %1813 = sext i32 %1757 to i64
  %1814 = shl nsw i64 %1813, 3
  %1815 = add nsw i64 %1814, 12
  %1816 = call ptr %1812(i64 noundef %1815, ptr noundef nonnull @.str.21) #14
  call void @BLI_jitterate1(ptr noundef %1763, ptr noundef %1816, i32 noundef %1757, float noundef nofpclass(nan inf) %1774) #14
  call void @BLI_jitterate1(ptr noundef %1763, ptr noundef %1816, i32 noundef %1757, float noundef nofpclass(nan inf) %1774) #14
  call void @BLI_jitterate2(ptr noundef %1763, ptr noundef %1816, i32 noundef %1757, float noundef nofpclass(nan inf) %1775) #14
  call void @BLI_jitterate1(ptr noundef %1763, ptr noundef %1816, i32 noundef %1757, float noundef nofpclass(nan inf) %1774) #14
  call void @BLI_jitterate1(ptr noundef %1763, ptr noundef %1816, i32 noundef %1757, float noundef nofpclass(nan inf) %1774) #14
  call void @BLI_jitterate2(ptr noundef %1763, ptr noundef %1816, i32 noundef %1757, float noundef nofpclass(nan inf) %1775) #14
  call void @BLI_jitterate1(ptr noundef %1763, ptr noundef %1816, i32 noundef %1757, float noundef nofpclass(nan inf) %1774) #14
  call void @BLI_jitterate1(ptr noundef %1763, ptr noundef %1816, i32 noundef %1757, float noundef nofpclass(nan inf) %1774) #14
  call void @BLI_jitterate2(ptr noundef %1763, ptr noundef %1816, i32 noundef %1757, float noundef nofpclass(nan inf) %1775) #14
  call void @BLI_jitterate1(ptr noundef %1763, ptr noundef %1816, i32 noundef %1757, float noundef nofpclass(nan inf) %1774) #14
  call void @BLI_jitterate1(ptr noundef %1763, ptr noundef %1816, i32 noundef %1757, float noundef nofpclass(nan inf) %1774) #14
  call void @BLI_jitterate2(ptr noundef %1763, ptr noundef %1816, i32 noundef %1757, float noundef nofpclass(nan inf) %1775) #14
  %1817 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  call void %1817(ptr noundef %1816) #14
  call void @BLI_rng_free(ptr noundef %1779) #14
  br label %1868

1818:                                             ; preds = %1756
  %1819 = add nuw nsw i32 %1757, 1
  %1820 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 23
  %1821 = load i32, ptr %1820, align 4, !tbaa !124
  %1822 = getelementptr inbounds %struct.ParticleSettings, ptr %108, i64 0, i32 59
  %1823 = load float, ptr %1822, align 4, !tbaa !463
  %1824 = add nuw nsw i32 %1757, 31415927
  %1825 = add nsw i32 %1824, %1821
  %1826 = call ptr @BLI_rng_new(i32 noundef %1825) #14
  %1827 = call fast nofpclass(nan inf) double @BLI_rng_get_double(ptr noundef %1826) #14
  %1828 = fpext float %1823 to double
  %1829 = fadd fast double %1827, %1828
  %1830 = call fast nofpclass(nan inf) double @BLI_rng_get_double(ptr noundef %1826) #14
  %1831 = fadd fast double %1830, %1828
  call void @BLI_rng_free(ptr noundef %1826) #14
  %1832 = sitofp i32 %1819 to double
  %1833 = zext i32 %1819 to i64
  %1834 = fdiv fast double 1.000000e+00, %1832
  br label %1835

1835:                                             ; preds = %1851, %1818
  %1836 = phi i64 [ 0, %1818 ], [ %1866, %1851 ]
  %1837 = icmp eq i64 %1836, 0
  br i1 %1837, label %1851, label %1838

1838:                                             ; preds = %1835
  %1839 = trunc i64 %1836 to i32
  br label %1840

1840:                                             ; preds = %1840, %1838
  %1841 = phi i32 [ %1849, %1840 ], [ %1839, %1838 ]
  %1842 = phi double [ %1848, %1840 ], [ 5.000000e-01, %1838 ]
  %1843 = phi double [ %1847, %1840 ], [ 0.000000e+00, %1838 ]
  %1844 = and i32 %1841, 1
  %1845 = icmp eq i32 %1844, 0
  %1846 = select i1 %1845, double -0.000000e+00, double %1842
  %1847 = fadd fast double %1846, %1843
  %1848 = fmul fast double %1842, 5.000000e-01
  %1849 = lshr i32 %1841, 1
  %1850 = icmp ult i32 %1841, 2
  br i1 %1850, label %1851, label %1840, !llvm.loop !465

1851:                                             ; preds = %1840, %1835
  %1852 = phi i32 [ 0, %1835 ], [ %1839, %1840 ]
  %1853 = phi double [ 0.000000e+00, %1835 ], [ %1847, %1840 ]
  %1854 = sitofp i32 %1852 to double
  %1855 = fmul fast double %1854, %1834
  %1856 = fadd fast double %1829, %1855
  %1857 = frem fast double %1856, 1.000000e+00
  %1858 = fptrunc double %1857 to float
  %1859 = shl nuw nsw i64 %1836, 1
  %1860 = getelementptr inbounds float, ptr %1763, i64 %1859
  store float %1858, ptr %1860, align 4, !tbaa !79
  %1861 = fadd fast double %1831, %1853
  %1862 = frem fast double %1861, 1.000000e+00
  %1863 = fptrunc double %1862 to float
  %1864 = or i64 %1859, 1
  %1865 = getelementptr inbounds float, ptr %1763, i64 %1864
  store float %1863, ptr %1865, align 4, !tbaa !79
  %1866 = add nuw nsw i64 %1836, 1
  %1867 = icmp eq i64 %1866, %1833
  br i1 %1867, label %1868, label %1835, !llvm.loop !466

1868:                                             ; preds = %1851, %1811, %1765
  %1869 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 23
  %1870 = load i32, ptr %1869, align 4, !tbaa !124
  call void @BLI_array_randomize(ptr noundef %1763, i32 noundef 8, i32 noundef %1757, i32 noundef %1870) #14
  br label %1871

1871:                                             ; preds = %1868, %1740
  %1872 = phi i32 [ %1757, %1868 ], [ 1, %1740 ]
  %1873 = phi ptr [ %1763, %1868 ], [ null, %1740 ]
  %1874 = getelementptr inbounds %struct.ParticleThreadContext, ptr %96, i64 0, i32 3
  store ptr %1039, ptr %1874, align 8, !tbaa !109
  %1875 = getelementptr inbounds %struct.ParticleThreadContext, ptr %96, i64 0, i32 4
  store ptr null, ptr %1875, align 8, !tbaa !108
  %1876 = getelementptr inbounds %struct.ParticleThreadContext, ptr %96, i64 0, i32 5
  store i32 0, ptr %1876, align 8, !tbaa !467
  store ptr %100, ptr %99, align 8, !tbaa !101
  %1877 = getelementptr inbounds %struct.ParticleThreadContext, ptr %96, i64 0, i32 10
  store ptr %1170, ptr %1877, align 8, !tbaa !106
  %1878 = getelementptr inbounds %struct.ParticleThreadContext, ptr %96, i64 0, i32 6
  store ptr %1873, ptr %1878, align 8, !tbaa !103
  %1879 = getelementptr inbounds %struct.ParticleThreadContext, ptr %96, i64 0, i32 12
  store i32 %1872, ptr %1879, align 8, !tbaa !468
  %1880 = getelementptr inbounds %struct.ParticleThreadContext, ptr %96, i64 0, i32 7
  store ptr %1177, ptr %1880, align 8, !tbaa !104
  %1881 = getelementptr inbounds %struct.ParticleThreadContext, ptr %96, i64 0, i32 8
  store ptr %1166, ptr %1881, align 8, !tbaa !105
  %1882 = getelementptr inbounds %struct.ParticleThreadContext, ptr %96, i64 0, i32 9
  store float %1365, ptr %1882, align 8, !tbaa !469
  %1883 = getelementptr inbounds %struct.ParticleThreadContext, ptr %96, i64 0, i32 13
  store i32 %1043, ptr %1883, align 4, !tbaa !470
  %1884 = getelementptr inbounds %struct.ParticleThreadContext, ptr %96, i64 0, i32 14
  store i32 %1040, ptr %1884, align 8, !tbaa !471
  %1885 = getelementptr inbounds %struct.ParticleThreadContext, ptr %96, i64 0, i32 15
  store i32 %1042, ptr %1885, align 4, !tbaa !472
  %1886 = getelementptr inbounds %struct.ParticleThreadContext, ptr %96, i64 0, i32 1
  store ptr %1036, ptr %1886, align 8, !tbaa !85
  %1887 = getelementptr inbounds %struct.ParticleThreadContext, ptr %96, i64 0, i32 16
  store ptr null, ptr %1887, align 8, !tbaa !473
  br i1 %126, label %1888, label %1927

1888:                                             ; preds = %1871
  %1889 = call i32 @psys_render_simplify_distribution(ptr noundef nonnull %96, i32 noundef %1041) #14
  %1890 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 4
  %1891 = load ptr, ptr %1890, align 8, !tbaa !43
  %1892 = icmp eq ptr %1891, null
  br i1 %1892, label %1908, label %1893

1893:                                             ; preds = %1888
  %1894 = load ptr, ptr %107, align 8, !tbaa !5
  %1895 = getelementptr inbounds %struct.ParticleSettings, ptr %1894, i64 0, i32 19
  %1896 = load i16, ptr %1895, align 4, !tbaa !24
  %1897 = icmp eq i16 %1896, 0
  br i1 %1897, label %1905, label %1898

1898:                                             ; preds = %1893
  %1899 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 28
  %1900 = load i32, ptr %1899, align 8, !tbaa !45
  %1901 = icmp eq i32 %1900, %1889
  br i1 %1901, label %1902, label %1905

1902:                                             ; preds = %1898
  %1903 = sext i32 %1889 to i64
  %1904 = shl nsw i64 %1903, 6
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %1891, i8 0, i64 %1904, i1 false)
  br label %1921

1905:                                             ; preds = %1898, %1893
  %1906 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  call void %1906(ptr noundef nonnull %1891) #14
  store ptr null, ptr %1890, align 8, !tbaa !43
  %1907 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 28
  store i32 0, ptr %1907, align 8, !tbaa !45
  br label %1908

1908:                                             ; preds = %1905, %1888
  %1909 = load ptr, ptr %107, align 8, !tbaa !5
  %1910 = getelementptr inbounds %struct.ParticleSettings, ptr %1909, i64 0, i32 19
  %1911 = load i16, ptr %1910, align 4, !tbaa !24
  %1912 = icmp eq i16 %1911, 0
  br i1 %1912, label %1921, label %1913

1913:                                             ; preds = %1908
  %1914 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 28
  store i32 %1889, ptr %1914, align 8, !tbaa !45
  %1915 = icmp eq i32 %1889, 0
  br i1 %1915, label %1921, label %1916

1916:                                             ; preds = %1913
  %1917 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %1918 = sext i32 %1889 to i64
  %1919 = shl nsw i64 %1918, 6
  %1920 = call ptr %1917(i64 noundef %1919, ptr noundef nonnull @.str.22) #14
  store ptr %1920, ptr %1890, align 8, !tbaa !43
  br label %1921

1921:                                             ; preds = %1916, %1913, %1908, %1902
  %1922 = getelementptr inbounds %struct.ParticleSystem, ptr %100, i64 0, i32 28
  %1923 = load i32, ptr %1922, align 8, !tbaa !45
  %1924 = icmp slt i32 %1923, 10000
  br i1 %1924, label %1927, label %1925

1925:                                             ; preds = %1921
  %1926 = icmp sgt i32 %102, 0
  br i1 %1926, label %1927, label %1942

1927:                                             ; preds = %1925, %1921, %1871
  %1928 = phi i32 [ %102, %1925 ], [ 1, %1921 ], [ 1, %1871 ]
  %1929 = load ptr, ptr %99, align 8, !tbaa !101
  %1930 = getelementptr inbounds %struct.ParticleSystem, ptr %1929, i64 0, i32 23
  %1931 = load i32, ptr %1930, align 4, !tbaa !124
  %1932 = add nsw i32 %1931, 31415926
  %1933 = zext i32 %1928 to i64
  br label %1934

1934:                                             ; preds = %1934, %1927
  %1935 = phi i64 [ 0, %1927 ], [ %1939, %1934 ]
  %1936 = call ptr @BLI_rng_new(i32 noundef %1932) #14
  %1937 = getelementptr inbounds %struct.ParticleThread, ptr %46, i64 %1935, i32 1
  store ptr %1936, ptr %1937, align 8, !tbaa !110
  %1938 = getelementptr inbounds %struct.ParticleThread, ptr %46, i64 %1935, i32 4
  store i32 %1928, ptr %1938, align 4, !tbaa !93
  %1939 = add nuw nsw i64 %1935, 1
  %1940 = icmp eq i64 %1939, %1933
  br i1 %1940, label %1942, label %1934, !llvm.loop !474

1941:                                             ; preds = %1161, %917, %253, %123, %110, %106, %94
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %16) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %15) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %14) #14
  br label %1965

1942:                                             ; preds = %1934, %1925
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %16) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %15) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %14) #14
  %1943 = load i32, ptr %101, align 4, !tbaa !93
  %1944 = icmp sgt i32 %1943, 1
  br i1 %1944, label %1945, label %1953

1945:                                             ; preds = %1942
  call void @BLI_init_threads(ptr noundef nonnull %21, ptr noundef nonnull @distribute_threads_exec_cb, i32 noundef %1943) #14
  %1946 = zext i32 %1943 to i64
  br label %1947

1947:                                             ; preds = %1947, %1945
  %1948 = phi i64 [ 0, %1945 ], [ %1950, %1947 ]
  %1949 = getelementptr inbounds %struct.ParticleThread, ptr %46, i64 %1948
  call void @BLI_insert_thread(ptr noundef nonnull %21, ptr noundef nonnull %1949) #14
  %1950 = add nuw nsw i64 %1948, 1
  %1951 = icmp eq i64 %1950, %1946
  br i1 %1951, label %1952, label %1947, !llvm.loop !475

1952:                                             ; preds = %1947
  call void @BLI_end_threads(ptr noundef nonnull %21) #14
  br label %1955

1953:                                             ; preds = %1942
  %1954 = call ptr @distribute_threads_exec_cb(ptr noundef nonnull %46)
  br label %1955

1955:                                             ; preds = %1953, %1952
  %1956 = load ptr, ptr %54, align 8, !tbaa !86
  %1957 = load ptr, ptr %56, align 8, !tbaa !87
  call void @psys_calc_dmcache(ptr noundef %1956, ptr noundef %40, ptr noundef %1957)
  %1958 = load ptr, ptr %46, align 8, !tbaa !90
  %1959 = getelementptr inbounds %struct.ParticleThreadContext, ptr %1958, i64 0, i32 1
  %1960 = load ptr, ptr %1959, align 8, !tbaa !85
  %1961 = icmp eq ptr %1960, %40
  br i1 %1961, label %1965, label %1962

1962:                                             ; preds = %1955
  %1963 = getelementptr inbounds %struct.DerivedMesh, ptr %1960, i64 0, i32 95
  %1964 = load ptr, ptr %1963, align 8, !tbaa !331
  call void %1964(ptr noundef %1960) #14
  br label %1965

1965:                                             ; preds = %1941, %1955, %1962
  call void @psys_threads_free(ptr noundef nonnull %46)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %21) #14
  br label %2125

1966:                                             ; preds = %25
  %1967 = load ptr, ptr %28, align 8, !tbaa !87
  %1968 = getelementptr inbounds %struct.ParticleSystem, ptr %1967, i64 0, i32 26
  %1969 = load i32, ptr %1968, align 8, !tbaa !26
  %1970 = icmp sgt i32 %1969, 0
  br i1 %1970, label %1971, label %2011

1971:                                             ; preds = %1966
  %1972 = getelementptr inbounds %struct.ParticleSystem, ptr %1967, i64 0, i32 3
  %1973 = load ptr, ptr %1972, align 8, !tbaa !35
  %1974 = and i32 %1969, 7
  %1975 = icmp ult i32 %1969, 8
  br i1 %1975, label %2000, label %1976

1976:                                             ; preds = %1971
  %1977 = and i32 %1969, -8
  br label %1978

1978:                                             ; preds = %1978, %1976
  %1979 = phi ptr [ %1973, %1976 ], [ %1997, %1978 ]
  %1980 = phi i32 [ 0, %1976 ], [ %1998, %1978 ]
  %1981 = getelementptr inbounds %struct.ParticleData, ptr %1979, i64 0, i32 11
  %1982 = getelementptr inbounds %struct.ParticleData, ptr %1979, i64 0, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %1981, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1982, align 8, !tbaa !71
  %1983 = getelementptr inbounds %struct.ParticleData, ptr %1979, i64 1, i32 11
  %1984 = getelementptr inbounds %struct.ParticleData, ptr %1979, i64 1, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %1983, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1984, align 8, !tbaa !71
  %1985 = getelementptr inbounds %struct.ParticleData, ptr %1979, i64 2, i32 11
  %1986 = getelementptr inbounds %struct.ParticleData, ptr %1979, i64 2, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %1985, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1986, align 8, !tbaa !71
  %1987 = getelementptr inbounds %struct.ParticleData, ptr %1979, i64 3, i32 11
  %1988 = getelementptr inbounds %struct.ParticleData, ptr %1979, i64 3, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %1987, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1988, align 8, !tbaa !71
  %1989 = getelementptr inbounds %struct.ParticleData, ptr %1979, i64 4, i32 11
  %1990 = getelementptr inbounds %struct.ParticleData, ptr %1979, i64 4, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %1989, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1990, align 8, !tbaa !71
  %1991 = getelementptr inbounds %struct.ParticleData, ptr %1979, i64 5, i32 11
  %1992 = getelementptr inbounds %struct.ParticleData, ptr %1979, i64 5, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %1991, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1992, align 8, !tbaa !71
  %1993 = getelementptr inbounds %struct.ParticleData, ptr %1979, i64 6, i32 11
  %1994 = getelementptr inbounds %struct.ParticleData, ptr %1979, i64 6, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %1993, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1994, align 8, !tbaa !71
  %1995 = getelementptr inbounds %struct.ParticleData, ptr %1979, i64 7, i32 11
  %1996 = getelementptr inbounds %struct.ParticleData, ptr %1979, i64 7, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %1995, i8 0, i64 20, i1 false)
  store i32 -1, ptr %1996, align 8, !tbaa !71
  %1997 = getelementptr inbounds %struct.ParticleData, ptr %1979, i64 8
  %1998 = add i32 %1980, 8
  %1999 = icmp eq i32 %1998, %1977
  br i1 %1999, label %2000, label %1978, !llvm.loop !429

2000:                                             ; preds = %1978, %1971
  %2001 = phi ptr [ %1973, %1971 ], [ %1997, %1978 ]
  %2002 = icmp eq i32 %1974, 0
  br i1 %2002, label %2011, label %2003

2003:                                             ; preds = %2000, %2003
  %2004 = phi ptr [ %2008, %2003 ], [ %2001, %2000 ]
  %2005 = phi i32 [ %2009, %2003 ], [ 0, %2000 ]
  %2006 = getelementptr inbounds %struct.ParticleData, ptr %2004, i64 0, i32 11
  %2007 = getelementptr inbounds %struct.ParticleData, ptr %2004, i64 0, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %2006, i8 0, i64 20, i1 false)
  store i32 -1, ptr %2007, align 8, !tbaa !71
  %2008 = getelementptr inbounds %struct.ParticleData, ptr %2004, i64 1
  %2009 = add i32 %2005, 1
  %2010 = icmp eq i32 %2009, %1974
  br i1 %2010, label %2011, label %2003, !llvm.loop !476

2011:                                             ; preds = %2000, %2003, %1966
  %2012 = load ptr, ptr @stderr, align 8, !tbaa !44
  %2013 = tail call i64 @fwrite(ptr nonnull @.str.23, i64 33, i64 1, ptr %2012) #15
  br label %2125

2014:                                             ; preds = %32
  %2015 = load ptr, ptr %0, align 8, !tbaa !76
  %2016 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 2
  %2017 = load ptr, ptr %2016, align 8, !tbaa !87
  %2018 = icmp eq i32 %1, 4
  %2019 = getelementptr inbounds %struct.ParticleSystem, ptr %2017, i64 0, i32 26
  %2020 = load i32, ptr %2019, align 8, !tbaa !26
  br i1 %2018, label %2021, label %2069

2021:                                             ; preds = %2014
  %2022 = getelementptr inbounds %struct.ParticleSystem, ptr %2017, i64 0, i32 2
  %2023 = load ptr, ptr %2022, align 8, !tbaa !5
  %2024 = getelementptr inbounds %struct.ParticleSettings, ptr %2023, i64 0, i32 19
  %2025 = load i16, ptr %2024, align 4, !tbaa !24
  %2026 = icmp eq i16 %2025, 0
  br i1 %2026, label %2037, label %2027

2027:                                             ; preds = %2021
  %2028 = getelementptr inbounds %struct.ParticleSystem, ptr %2017, i64 0, i32 39
  %2029 = load ptr, ptr %2028, align 8, !tbaa !14
  %2030 = icmp eq ptr %2029, null
  %2031 = getelementptr inbounds %struct.ParticleSettings, ptr %2023, i64 0, i32 90
  %2032 = getelementptr inbounds %struct.ParticleSettings, ptr %2023, i64 0, i32 89
  %2033 = select i1 %2030, ptr %2032, ptr %2031
  %2034 = load i32, ptr %2033, align 4, !tbaa !68
  %2035 = getelementptr inbounds %struct.Scene, ptr %2015, i64 0, i32 22
  %2036 = tail call i32 @get_render_child_particle_number(ptr noundef nonnull %2035, i32 noundef %2034) #14
  br label %2037

2037:                                             ; preds = %2027, %2021
  %2038 = phi i32 [ %2036, %2027 ], [ 0, %2021 ]
  %2039 = mul i32 %2038, %2020
  %2040 = getelementptr inbounds %struct.ParticleSystem, ptr %2017, i64 0, i32 4
  %2041 = load ptr, ptr %2040, align 8, !tbaa !43
  %2042 = icmp ne ptr %2041, null
  %2043 = icmp ne i32 %2039, 0
  %2044 = select i1 %2042, i1 %2043, i1 false
  %2045 = icmp sgt i32 %2039, 0
  %2046 = select i1 %2044, i1 %2045, i1 false
  br i1 %2046, label %2047, label %2122

2047:                                             ; preds = %2037
  %2048 = and i32 %2039, 3
  %2049 = icmp ult i32 %2039, 4
  br i1 %2049, label %2100, label %2050

2050:                                             ; preds = %2047
  %2051 = and i32 %2039, -4
  br label %2052

2052:                                             ; preds = %2052, %2050
  %2053 = phi ptr [ %2041, %2050 ], [ %2066, %2052 ]
  %2054 = phi i32 [ 0, %2050 ], [ %2067, %2052 ]
  %2055 = getelementptr inbounds %struct.ChildParticle, ptr %2053, i64 0, i32 4
  %2056 = getelementptr inbounds %struct.ChildParticle, ptr %2053, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %2056, i8 0, i64 20, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %2055, i8 0, i64 20, i1 false)
  store i32 -1, ptr %2053, align 4, !tbaa !404
  %2057 = getelementptr inbounds %struct.ChildParticle, ptr %2053, i64 1
  %2058 = getelementptr inbounds %struct.ChildParticle, ptr %2053, i64 1, i32 4
  %2059 = getelementptr inbounds %struct.ChildParticle, ptr %2053, i64 1, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %2059, i8 0, i64 20, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %2058, i8 0, i64 20, i1 false)
  store i32 -1, ptr %2057, align 4, !tbaa !404
  %2060 = getelementptr inbounds %struct.ChildParticle, ptr %2053, i64 2
  %2061 = getelementptr inbounds %struct.ChildParticle, ptr %2053, i64 2, i32 4
  %2062 = getelementptr inbounds %struct.ChildParticle, ptr %2053, i64 2, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %2062, i8 0, i64 20, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %2061, i8 0, i64 20, i1 false)
  store i32 -1, ptr %2060, align 4, !tbaa !404
  %2063 = getelementptr inbounds %struct.ChildParticle, ptr %2053, i64 3
  %2064 = getelementptr inbounds %struct.ChildParticle, ptr %2053, i64 3, i32 4
  %2065 = getelementptr inbounds %struct.ChildParticle, ptr %2053, i64 3, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %2065, i8 0, i64 20, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %2064, i8 0, i64 20, i1 false)
  store i32 -1, ptr %2063, align 4, !tbaa !404
  %2066 = getelementptr inbounds %struct.ChildParticle, ptr %2053, i64 4
  %2067 = add i32 %2054, 4
  %2068 = icmp eq i32 %2067, %2051
  br i1 %2068, label %2100, label %2052, !llvm.loop !428

2069:                                             ; preds = %2014
  %2070 = icmp sgt i32 %2020, 0
  br i1 %2070, label %2071, label %2122

2071:                                             ; preds = %2069
  %2072 = getelementptr inbounds %struct.ParticleSystem, ptr %2017, i64 0, i32 3
  %2073 = load ptr, ptr %2072, align 8, !tbaa !35
  %2074 = and i32 %2020, 7
  %2075 = icmp ult i32 %2020, 8
  br i1 %2075, label %2111, label %2076

2076:                                             ; preds = %2071
  %2077 = and i32 %2020, -8
  br label %2078

2078:                                             ; preds = %2078, %2076
  %2079 = phi ptr [ %2073, %2076 ], [ %2097, %2078 ]
  %2080 = phi i32 [ 0, %2076 ], [ %2098, %2078 ]
  %2081 = getelementptr inbounds %struct.ParticleData, ptr %2079, i64 0, i32 11
  %2082 = getelementptr inbounds %struct.ParticleData, ptr %2079, i64 0, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %2081, i8 0, i64 20, i1 false)
  store i32 -1, ptr %2082, align 8, !tbaa !71
  %2083 = getelementptr inbounds %struct.ParticleData, ptr %2079, i64 1, i32 11
  %2084 = getelementptr inbounds %struct.ParticleData, ptr %2079, i64 1, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %2083, i8 0, i64 20, i1 false)
  store i32 -1, ptr %2084, align 8, !tbaa !71
  %2085 = getelementptr inbounds %struct.ParticleData, ptr %2079, i64 2, i32 11
  %2086 = getelementptr inbounds %struct.ParticleData, ptr %2079, i64 2, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %2085, i8 0, i64 20, i1 false)
  store i32 -1, ptr %2086, align 8, !tbaa !71
  %2087 = getelementptr inbounds %struct.ParticleData, ptr %2079, i64 3, i32 11
  %2088 = getelementptr inbounds %struct.ParticleData, ptr %2079, i64 3, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %2087, i8 0, i64 20, i1 false)
  store i32 -1, ptr %2088, align 8, !tbaa !71
  %2089 = getelementptr inbounds %struct.ParticleData, ptr %2079, i64 4, i32 11
  %2090 = getelementptr inbounds %struct.ParticleData, ptr %2079, i64 4, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %2089, i8 0, i64 20, i1 false)
  store i32 -1, ptr %2090, align 8, !tbaa !71
  %2091 = getelementptr inbounds %struct.ParticleData, ptr %2079, i64 5, i32 11
  %2092 = getelementptr inbounds %struct.ParticleData, ptr %2079, i64 5, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %2091, i8 0, i64 20, i1 false)
  store i32 -1, ptr %2092, align 8, !tbaa !71
  %2093 = getelementptr inbounds %struct.ParticleData, ptr %2079, i64 6, i32 11
  %2094 = getelementptr inbounds %struct.ParticleData, ptr %2079, i64 6, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %2093, i8 0, i64 20, i1 false)
  store i32 -1, ptr %2094, align 8, !tbaa !71
  %2095 = getelementptr inbounds %struct.ParticleData, ptr %2079, i64 7, i32 11
  %2096 = getelementptr inbounds %struct.ParticleData, ptr %2079, i64 7, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %2095, i8 0, i64 20, i1 false)
  store i32 -1, ptr %2096, align 8, !tbaa !71
  %2097 = getelementptr inbounds %struct.ParticleData, ptr %2079, i64 8
  %2098 = add i32 %2080, 8
  %2099 = icmp eq i32 %2098, %2077
  br i1 %2099, label %2111, label %2078, !llvm.loop !429

2100:                                             ; preds = %2052, %2047
  %2101 = phi ptr [ %2041, %2047 ], [ %2066, %2052 ]
  %2102 = icmp eq i32 %2048, 0
  br i1 %2102, label %2122, label %2103

2103:                                             ; preds = %2100, %2103
  %2104 = phi ptr [ %2108, %2103 ], [ %2101, %2100 ]
  %2105 = phi i32 [ %2109, %2103 ], [ 0, %2100 ]
  %2106 = getelementptr inbounds %struct.ChildParticle, ptr %2104, i64 0, i32 4
  %2107 = getelementptr inbounds %struct.ChildParticle, ptr %2104, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %2107, i8 0, i64 20, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %2106, i8 0, i64 20, i1 false)
  store i32 -1, ptr %2104, align 4, !tbaa !404
  %2108 = getelementptr inbounds %struct.ChildParticle, ptr %2104, i64 1
  %2109 = add i32 %2105, 1
  %2110 = icmp eq i32 %2109, %2048
  br i1 %2110, label %2122, label %2103, !llvm.loop !477

2111:                                             ; preds = %2078, %2071
  %2112 = phi ptr [ %2073, %2071 ], [ %2097, %2078 ]
  %2113 = icmp eq i32 %2074, 0
  br i1 %2113, label %2122, label %2114

2114:                                             ; preds = %2111, %2114
  %2115 = phi ptr [ %2119, %2114 ], [ %2112, %2111 ]
  %2116 = phi i32 [ %2120, %2114 ], [ 0, %2111 ]
  %2117 = getelementptr inbounds %struct.ParticleData, ptr %2115, i64 0, i32 11
  %2118 = getelementptr inbounds %struct.ParticleData, ptr %2115, i64 0, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %2117, i8 0, i64 20, i1 false)
  store i32 -1, ptr %2118, align 8, !tbaa !71
  %2119 = getelementptr inbounds %struct.ParticleData, ptr %2115, i64 1
  %2120 = add i32 %2116, 1
  %2121 = icmp eq i32 %2120, %2074
  br i1 %2121, label %2122, label %2114, !llvm.loop !478

2122:                                             ; preds = %2111, %2114, %2100, %2103, %2037, %2069
  %2123 = load ptr, ptr @stderr, align 8, !tbaa !44
  %2124 = tail call i64 @fwrite(ptr nonnull @.str.13, i64 29, i64 1, ptr %2123) #15
  br label %2125

2125:                                             ; preds = %1965, %2011, %2122
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @initialize_all_particles(ptr nocapture %0) unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 27
  store i32 0, ptr %2, align 4, !tbaa !31
  %3 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %3, align 8, !tbaa !35
  %5 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 26
  %6 = load i32, ptr %5, align 8, !tbaa !26
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %45

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 2
  %10 = ptrtoint ptr %4 to i64
  %11 = sitofp i32 %6 to float
  %12 = fdiv fast float 1.000000e+00, %11
  br label %13

13:                                               ; preds = %8, %40
  %14 = phi i32 [ 0, %8 ], [ %41, %40 ]
  %15 = phi ptr [ %4, %8 ], [ %43, %40 ]
  %16 = phi i32 [ 0, %8 ], [ %42, %40 ]
  %17 = getelementptr inbounds %struct.ParticleData, ptr %15, i64 0, i32 17
  %18 = load i16, ptr %17, align 4, !tbaa !36
  %19 = and i16 %18, 1
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %21, label %38

21:                                               ; preds = %13
  %22 = load ptr, ptr %9, align 8, !tbaa !5
  %23 = ptrtoint ptr %15 to i64
  %24 = sub i64 %23, %10
  %25 = sdiv exact i64 %24, 200
  %26 = sitofp i64 %25 to float
  %27 = and i16 %18, -2
  store i16 %27, ptr %17, align 4, !tbaa !36
  %28 = getelementptr inbounds %struct.ParticleSettings, ptr %22, i64 0, i32 53
  %29 = load float, ptr %28, align 4, !tbaa !113
  %30 = getelementptr inbounds %struct.ParticleSettings, ptr %22, i64 0, i32 54
  %31 = load float, ptr %30, align 8, !tbaa !114
  %32 = fsub fast float %31, %29
  %33 = fmul fast float %32, %26
  %34 = fmul fast float %33, %12
  %35 = fadd fast float %34, %29
  %36 = getelementptr inbounds %struct.ParticleData, ptr %15, i64 0, i32 6
  store float %35, ptr %36, align 4, !tbaa !115
  %37 = getelementptr inbounds %struct.ParticleData, ptr %15, i64 0, i32 16
  store i32 0, ptr %37, align 8, !tbaa !116
  br label %40

38:                                               ; preds = %13
  %39 = add nsw i32 %14, 1
  store i32 %39, ptr %2, align 4, !tbaa !31
  br label %40

40:                                               ; preds = %21, %38
  %41 = phi i32 [ %39, %38 ], [ %14, %21 ]
  %42 = add nuw nsw i32 %16, 1
  %43 = getelementptr inbounds %struct.ParticleData, ptr %15, i64 1
  %44 = icmp eq i32 %42, %6
  br i1 %44, label %45, label %13, !llvm.loop !479

45:                                               ; preds = %40, %1
  %46 = phi i32 [ 0, %1 ], [ %41, %40 ]
  %47 = icmp ne i32 %6, 0
  %48 = icmp eq i32 %46, %6
  %49 = select i1 %47, i1 %48, i1 false
  br i1 %49, label %50, label %60

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.ParticleData, ptr %4, i64 0, i32 4
  %52 = load ptr, ptr %51, align 8, !tbaa !117
  %53 = icmp eq ptr %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  %55 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %55(ptr noundef nonnull %52) #14
  %56 = load ptr, ptr %3, align 8, !tbaa !35
  br label %57

57:                                               ; preds = %50, %54
  %58 = phi ptr [ %4, %50 ], [ %56, %54 ]
  %59 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %59(ptr noundef %58) #14
  store ptr null, ptr %3, align 8, !tbaa !35
  store i32 0, ptr %2, align 4, !tbaa !31
  store i32 0, ptr %5, align 8, !tbaa !26
  br label %180

60:                                               ; preds = %45
  %61 = icmp eq i32 %46, 0
  br i1 %61, label %180, label %62

62:                                               ; preds = %60
  %63 = sub nsw i32 %6, %46
  %64 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %65 = sext i32 %63 to i64
  %66 = mul nsw i64 %65, 200
  %67 = tail call ptr %64(i64 noundef %66, ptr noundef nonnull @.str.11) #14
  %68 = load ptr, ptr %3, align 8, !tbaa !35
  %69 = icmp sgt i32 %63, 0
  br i1 %69, label %70, label %114

70:                                               ; preds = %62
  %71 = add i32 %46, 1
  %72 = and i32 %63, 1
  %73 = icmp eq i32 %6, %71
  br i1 %73, label %100, label %74

74:                                               ; preds = %70
  %75 = and i32 %63, -2
  br label %76

76:                                               ; preds = %96, %74
  %77 = phi ptr [ %68, %74 ], [ %95, %96 ]
  %78 = phi ptr [ %67, %74 ], [ %97, %96 ]
  %79 = phi i32 [ 0, %74 ], [ %98, %96 ]
  br label %80

80:                                               ; preds = %80, %76
  %81 = phi ptr [ %86, %80 ], [ %77, %76 ]
  %82 = getelementptr inbounds %struct.ParticleData, ptr %81, i64 0, i32 17
  %83 = load i16, ptr %82, align 4, !tbaa !36
  %84 = and i16 %83, 1
  %85 = icmp eq i16 %84, 0
  %86 = getelementptr inbounds %struct.ParticleData, ptr %81, i64 1
  br i1 %85, label %87, label %80, !llvm.loop !480

87:                                               ; preds = %80
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(200) %78, ptr noundef nonnull align 8 dereferenceable(200) %81, i64 200, i1 false)
  %88 = getelementptr inbounds %struct.ParticleData, ptr %78, i64 1
  br label %89

89:                                               ; preds = %89, %87
  %90 = phi ptr [ %95, %89 ], [ %86, %87 ]
  %91 = getelementptr inbounds %struct.ParticleData, ptr %90, i64 0, i32 17
  %92 = load i16, ptr %91, align 4, !tbaa !36
  %93 = and i16 %92, 1
  %94 = icmp eq i16 %93, 0
  %95 = getelementptr inbounds %struct.ParticleData, ptr %90, i64 1
  br i1 %94, label %96, label %89, !llvm.loop !480

96:                                               ; preds = %89
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(200) %88, ptr noundef nonnull align 8 dereferenceable(200) %90, i64 200, i1 false)
  %97 = getelementptr inbounds %struct.ParticleData, ptr %78, i64 2
  %98 = add i32 %79, 2
  %99 = icmp eq i32 %98, %75
  br i1 %99, label %100, label %76, !llvm.loop !481

100:                                              ; preds = %96, %70
  %101 = phi ptr [ %68, %70 ], [ %95, %96 ]
  %102 = phi ptr [ %67, %70 ], [ %97, %96 ]
  %103 = icmp eq i32 %72, 0
  br i1 %103, label %112, label %104

104:                                              ; preds = %100, %104
  %105 = phi ptr [ %110, %104 ], [ %101, %100 ]
  %106 = getelementptr inbounds %struct.ParticleData, ptr %105, i64 0, i32 17
  %107 = load i16, ptr %106, align 4, !tbaa !36
  %108 = and i16 %107, 1
  %109 = icmp eq i16 %108, 0
  %110 = getelementptr inbounds %struct.ParticleData, ptr %105, i64 1
  br i1 %109, label %111, label %104, !llvm.loop !480

111:                                              ; preds = %104
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(200) %102, ptr noundef nonnull align 8 dereferenceable(200) %105, i64 200, i1 false)
  br label %112

112:                                              ; preds = %100, %111
  %113 = load ptr, ptr %3, align 8, !tbaa !35
  br label %114

114:                                              ; preds = %112, %62
  %115 = phi ptr [ %113, %112 ], [ %68, %62 ]
  %116 = getelementptr inbounds %struct.ParticleData, ptr %115, i64 0, i32 4
  %117 = load ptr, ptr %116, align 8, !tbaa !117
  %118 = icmp eq ptr %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %114
  %120 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %120(ptr noundef nonnull %117) #14
  %121 = load ptr, ptr %3, align 8, !tbaa !35
  br label %122

122:                                              ; preds = %119, %114
  %123 = phi ptr [ %121, %119 ], [ %115, %114 ]
  %124 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %124(ptr noundef %123) #14
  store ptr %67, ptr %3, align 8, !tbaa !35
  %125 = load i32, ptr %2, align 4, !tbaa !31
  %126 = load i32, ptr %5, align 8, !tbaa !26
  %127 = sub nsw i32 %126, %125
  store i32 %127, ptr %5, align 8, !tbaa !26
  %128 = getelementptr inbounds %struct.ParticleData, ptr %67, i64 0, i32 4
  %129 = load ptr, ptr %128, align 8, !tbaa !117
  %130 = icmp eq ptr %129, null
  br i1 %130, label %180, label %131

131:                                              ; preds = %122
  %132 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %133 = sext i32 %127 to i64
  %134 = mul nsw i64 %133, 56
  %135 = tail call ptr %132(i64 noundef %134, ptr noundef nonnull @.str.12) #14
  %136 = load i32, ptr %5, align 8, !tbaa !26
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %180

138:                                              ; preds = %131
  %139 = load ptr, ptr %3, align 8, !tbaa !35
  %140 = and i32 %136, 7
  %141 = icmp ult i32 %136, 8
  br i1 %141, label %167, label %142

142:                                              ; preds = %138
  %143 = and i32 %136, -8
  br label %144

144:                                              ; preds = %144, %142
  %145 = phi ptr [ %135, %142 ], [ %162, %144 ]
  %146 = phi ptr [ %139, %142 ], [ %164, %144 ]
  %147 = phi i32 [ 0, %142 ], [ %165, %144 ]
  %148 = getelementptr inbounds %struct.BoidParticle, ptr %145, i64 1
  %149 = getelementptr inbounds %struct.ParticleData, ptr %146, i64 0, i32 4
  store ptr %145, ptr %149, align 8, !tbaa !117
  %150 = getelementptr inbounds %struct.BoidParticle, ptr %145, i64 2
  %151 = getelementptr inbounds %struct.ParticleData, ptr %146, i64 1, i32 4
  store ptr %148, ptr %151, align 8, !tbaa !117
  %152 = getelementptr inbounds %struct.BoidParticle, ptr %145, i64 3
  %153 = getelementptr inbounds %struct.ParticleData, ptr %146, i64 2, i32 4
  store ptr %150, ptr %153, align 8, !tbaa !117
  %154 = getelementptr inbounds %struct.BoidParticle, ptr %145, i64 4
  %155 = getelementptr inbounds %struct.ParticleData, ptr %146, i64 3, i32 4
  store ptr %152, ptr %155, align 8, !tbaa !117
  %156 = getelementptr inbounds %struct.BoidParticle, ptr %145, i64 5
  %157 = getelementptr inbounds %struct.ParticleData, ptr %146, i64 4, i32 4
  store ptr %154, ptr %157, align 8, !tbaa !117
  %158 = getelementptr inbounds %struct.BoidParticle, ptr %145, i64 6
  %159 = getelementptr inbounds %struct.ParticleData, ptr %146, i64 5, i32 4
  store ptr %156, ptr %159, align 8, !tbaa !117
  %160 = getelementptr inbounds %struct.BoidParticle, ptr %145, i64 7
  %161 = getelementptr inbounds %struct.ParticleData, ptr %146, i64 6, i32 4
  store ptr %158, ptr %161, align 8, !tbaa !117
  %162 = getelementptr inbounds %struct.BoidParticle, ptr %145, i64 8
  %163 = getelementptr inbounds %struct.ParticleData, ptr %146, i64 7, i32 4
  store ptr %160, ptr %163, align 8, !tbaa !117
  %164 = getelementptr inbounds %struct.ParticleData, ptr %146, i64 8
  %165 = add i32 %147, 8
  %166 = icmp eq i32 %165, %143
  br i1 %166, label %167, label %144, !llvm.loop !482

167:                                              ; preds = %144, %138
  %168 = phi ptr [ %135, %138 ], [ %162, %144 ]
  %169 = phi ptr [ %139, %138 ], [ %164, %144 ]
  %170 = icmp eq i32 %140, 0
  br i1 %170, label %180, label %171

171:                                              ; preds = %167, %171
  %172 = phi ptr [ %175, %171 ], [ %168, %167 ]
  %173 = phi ptr [ %177, %171 ], [ %169, %167 ]
  %174 = phi i32 [ %178, %171 ], [ 0, %167 ]
  %175 = getelementptr inbounds %struct.BoidParticle, ptr %172, i64 1
  %176 = getelementptr inbounds %struct.ParticleData, ptr %173, i64 0, i32 4
  store ptr %172, ptr %176, align 8, !tbaa !117
  %177 = getelementptr inbounds %struct.ParticleData, ptr %173, i64 1
  %178 = add i32 %174, 1
  %179 = icmp eq i32 %178, %140
  br i1 %179, label %180, label %171, !llvm.loop !483

180:                                              ; preds = %167, %171, %131, %57, %122, %60
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @psys_update_path_cache(ptr noundef %0, float noundef nofpclass(nan inf) %1) unnamed_addr #2 {
  %3 = getelementptr %struct.ParticleSimulationData, ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !87
  %5 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !5
  %7 = load ptr, ptr %0, align 8, !tbaa !76
  %8 = getelementptr inbounds %struct.Scene, ptr %7, i64 0, i32 20
  %9 = load ptr, ptr %8, align 8, !tbaa !484
  %10 = getelementptr inbounds %struct.ToolSettings, ptr %9, i64 0, i32 18
  %11 = getelementptr inbounds %struct.ParticleSettings, ptr %6, i64 0, i32 19
  %12 = load i16, ptr %11, align 4, !tbaa !24
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %30, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 28
  %16 = load i32, ptr %15, align 8, !tbaa !45
  %17 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 26
  %18 = load i32, ptr %17, align 8, !tbaa !26
  %19 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 39
  %20 = load ptr, ptr %19, align 8, !tbaa !14
  %21 = icmp eq ptr %20, null
  %22 = getelementptr inbounds %struct.ParticleSettings, ptr %6, i64 0, i32 90
  %23 = getelementptr inbounds %struct.ParticleSettings, ptr %6, i64 0, i32 89
  %24 = select i1 %21, ptr %23, ptr %22
  %25 = load i32, ptr %24, align 4, !tbaa !68
  %26 = getelementptr inbounds %struct.Scene, ptr %7, i64 0, i32 22
  %27 = tail call i32 @get_render_child_particle_number(ptr noundef nonnull %26, i32 noundef %25) #14
  %28 = mul nsw i32 %27, %18
  %29 = icmp eq i32 %16, %28
  br i1 %29, label %30, label %51

30:                                               ; preds = %14, %2
  %31 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 31
  %32 = load i16, ptr %31, align 4, !tbaa !294
  %33 = and i16 %32, 16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %35, label %51

35:                                               ; preds = %30
  %36 = and i16 %32, 64
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %38, label %55

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 36
  %40 = load i16, ptr %39, align 4, !tbaa !272
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %96, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 1
  %44 = load ptr, ptr %43, align 8, !tbaa !86
  %45 = icmp eq ptr %44, null
  br i1 %45, label %96, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.Object, ptr %44, i64 0, i32 27
  %48 = load i32, ptr %47, align 8, !tbaa !485
  %49 = and i32 %48, 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %96, label %55

51:                                               ; preds = %30, %14
  %52 = load ptr, ptr %3, align 8, !tbaa !87
  %53 = getelementptr inbounds %struct.ParticleSystem, ptr %52, i64 0, i32 26
  %54 = load i32, ptr %53, align 8, !tbaa !26
  tail call fastcc void @realloc_particles(ptr %52, i32 noundef %54)
  br label %55

55:                                               ; preds = %35, %46, %51
  %56 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 26
  %57 = load i32, ptr %56, align 8, !tbaa !26
  %58 = load ptr, ptr %5, align 8, !tbaa !5
  %59 = getelementptr inbounds %struct.ParticleSettings, ptr %58, i64 0, i32 19
  %60 = load i16, ptr %59, align 4, !tbaa !24
  %61 = icmp eq i16 %60, 0
  br i1 %61, label %73, label %62

62:                                               ; preds = %55
  %63 = load ptr, ptr %0, align 8, !tbaa !76
  %64 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 39
  %65 = load ptr, ptr %64, align 8, !tbaa !14
  %66 = icmp eq ptr %65, null
  %67 = getelementptr inbounds %struct.ParticleSettings, ptr %58, i64 0, i32 90
  %68 = getelementptr inbounds %struct.ParticleSettings, ptr %58, i64 0, i32 89
  %69 = select i1 %66, ptr %68, ptr %67
  %70 = load i32, ptr %69, align 4, !tbaa !68
  %71 = getelementptr inbounds %struct.Scene, ptr %63, i64 0, i32 22
  %72 = tail call i32 @get_render_child_particle_number(ptr noundef nonnull %71, i32 noundef %70) #14
  br label %73

73:                                               ; preds = %55, %62
  %74 = phi i32 [ %72, %62 ], [ 0, %55 ]
  %75 = mul nsw i32 %74, %57
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %95, label %77

77:                                               ; preds = %73
  %78 = load ptr, ptr %5, align 8, !tbaa !5
  %79 = getelementptr inbounds %struct.ParticleSettings, ptr %78, i64 0, i32 7
  %80 = load i16, ptr %79, align 8, !tbaa !18
  %81 = icmp eq i16 %80, 2
  br i1 %81, label %82, label %87

82:                                               ; preds = %77
  %83 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 25
  %84 = load i32, ptr %83, align 4, !tbaa !21
  %85 = and i32 %84, 512
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %96, label %87

87:                                               ; preds = %82, %77
  tail call fastcc void @distribute_particles(ptr noundef nonnull %0, i32 noundef 4)
  %88 = load i16, ptr %11, align 4, !tbaa !24
  %89 = icmp eq i16 %88, 2
  br i1 %89, label %90, label %96

90:                                               ; preds = %87
  %91 = getelementptr inbounds %struct.ParticleSettings, ptr %6, i64 0, i32 91
  %92 = load float, ptr %91, align 4, !tbaa !459
  %93 = fcmp fast une float %92, 0.000000e+00
  br i1 %93, label %94, label %96

94:                                               ; preds = %90
  tail call void @psys_find_parents(ptr noundef nonnull %0) #14
  br label %96

95:                                               ; preds = %73
  tail call void @psys_free_children(ptr noundef nonnull %4) #14
  br label %96

96:                                               ; preds = %38, %42, %46, %95, %87, %90, %94, %82
  %97 = getelementptr inbounds %struct.ParticleSettings, ptr %6, i64 0, i32 7
  %98 = load i16, ptr %97, align 8, !tbaa !18
  %99 = icmp eq i16 %98, 2
  br i1 %99, label %112, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 25
  %102 = load i32, ptr %101, align 4, !tbaa !21
  %103 = and i32 %102, 1024
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %112

105:                                              ; preds = %100
  %106 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 40
  %107 = load ptr, ptr %106, align 8, !tbaa !15
  %108 = getelementptr inbounds %struct.PointCache, ptr %107, i64 0, i32 2
  %109 = load i32, ptr %108, align 8, !tbaa !16
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %159, label %112

112:                                              ; preds = %100, %96, %105
  %113 = getelementptr inbounds %struct.ParticleSettings, ptr %6, i64 0, i32 21
  %114 = load i16, ptr %113, align 8, !tbaa !281
  %115 = icmp eq i16 %114, 6
  br i1 %115, label %120, label %116

116:                                              ; preds = %112
  %117 = add i16 %114, -7
  %118 = icmp ult i16 %117, 2
  %119 = and i1 %99, %118
  br i1 %119, label %120, label %159

120:                                              ; preds = %116, %112
  %121 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 39
  %122 = load ptr, ptr %121, align 8, !tbaa !14
  %123 = icmp eq ptr %122, null
  br i1 %123, label %124, label %159

124:                                              ; preds = %120
  %125 = getelementptr inbounds %struct.ParticleSettings, ptr %6, i64 0, i32 17
  %126 = load i16, ptr %125, align 8, !tbaa !282
  %127 = icmp eq i16 %126, 10
  br i1 %127, label %128, label %159

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 40
  %130 = load ptr, ptr %129, align 8, !tbaa !15
  %131 = getelementptr inbounds %struct.PointCache, ptr %130, i64 0, i32 2
  %132 = load i32, ptr %131, align 8, !tbaa !16
  %133 = and i32 %132, 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %159

135:                                              ; preds = %128
  %136 = load ptr, ptr %0, align 8, !tbaa !76
  %137 = tail call i32 @psys_in_edit_mode(ptr noundef %136, ptr noundef nonnull %4) #14
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %159, label %139

139:                                              ; preds = %135
  %140 = load i16, ptr %10, align 8, !tbaa !486
  %141 = and i16 %140, 16
  %142 = icmp eq i16 %141, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %139
  %144 = load i16, ptr %11, align 4, !tbaa !24
  %145 = icmp eq i16 %144, 0
  br i1 %145, label %146, label %159

146:                                              ; preds = %143
  %147 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 25
  %148 = load i32, ptr %147, align 4, !tbaa !21
  %149 = and i32 %148, 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %158, label %151

151:                                              ; preds = %146
  %152 = load ptr, ptr %129, align 8, !tbaa !15
  %153 = getelementptr inbounds %struct.PointCache, ptr %152, i64 0, i32 2
  %154 = load i32, ptr %153, align 8, !tbaa !16
  %155 = freeze i32 %154
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %146, %151
  br label %159

159:                                              ; preds = %158, %151, %139, %128, %124, %116, %105, %135, %143, %120
  %160 = phi i1 [ true, %120 ], [ true, %143 ], [ true, %135 ], [ false, %105 ], [ false, %116 ], [ false, %124 ], [ false, %128 ], [ false, %139 ], [ false, %158 ], [ true, %151 ]
  %161 = load ptr, ptr %0, align 8, !tbaa !76
  %162 = getelementptr inbounds %struct.Scene, ptr %161, i64 0, i32 5
  %163 = load ptr, ptr %162, align 8, !tbaa !44
  %164 = icmp eq ptr %163, null
  br i1 %164, label %197, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 1
  %167 = ptrtoint ptr %4 to i64
  br label %168

168:                                              ; preds = %165, %194
  %169 = phi ptr [ %163, %165 ], [ %195, %194 ]
  %170 = getelementptr inbounds %struct.Base, ptr %169, i64 0, i32 7
  %171 = load ptr, ptr %170, align 8, !tbaa !488
  %172 = tail call ptr @modifiers_findByType(ptr noundef %171, i32 noundef 20) #14
  %173 = icmp eq ptr %172, null
  br i1 %173, label %194, label %174

174:                                              ; preds = %168
  %175 = getelementptr inbounds %struct.ParticleInstanceModifierData, ptr %172, i64 0, i32 3
  %176 = load i16, ptr %175, align 2, !tbaa !490
  %177 = and i16 %176, 4
  %178 = icmp eq i16 %177, 0
  br i1 %178, label %194, label %179

179:                                              ; preds = %174
  %180 = getelementptr inbounds %struct.ParticleInstanceModifierData, ptr %172, i64 0, i32 1
  %181 = load ptr, ptr %180, align 8, !tbaa !492
  %182 = load ptr, ptr %166, align 8, !tbaa !86
  %183 = icmp eq ptr %181, %182
  br i1 %183, label %184, label %194

184:                                              ; preds = %179
  %185 = getelementptr inbounds %struct.ParticleInstanceModifierData, ptr %172, i64 0, i32 2
  %186 = load i16, ptr %185, align 8, !tbaa !493
  %187 = sext i16 %186 to i64
  %188 = getelementptr inbounds %struct.Object, ptr %181, i64 0, i32 109
  %189 = load ptr, ptr %188, align 8, !tbaa !494
  %190 = ptrtoint ptr %189 to i64
  %191 = sub i64 %167, %190
  %192 = sdiv exact i64 %191, 656
  %193 = icmp eq i64 %192, %187
  br i1 %193, label %198, label %194

194:                                              ; preds = %184, %179, %174, %168
  %195 = load ptr, ptr %169, align 8, !tbaa !44
  %196 = icmp eq ptr %195, null
  br i1 %196, label %197, label %168, !llvm.loop !495

197:                                              ; preds = %194, %159
  br i1 %160, label %198, label %216

198:                                              ; preds = %184, %197
  tail call void @psys_cache_paths(ptr noundef nonnull %0, float noundef nofpclass(nan inf) %1) #14
  %199 = load i16, ptr %11, align 4, !tbaa !24
  %200 = icmp eq i16 %199, 0
  br i1 %200, label %221, label %201

201:                                              ; preds = %198
  %202 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 28
  %203 = load i32, ptr %202, align 8, !tbaa !45
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %221, label %205

205:                                              ; preds = %201
  %206 = load ptr, ptr %5, align 8, !tbaa !5
  %207 = getelementptr inbounds %struct.ParticleSettings, ptr %206, i64 0, i32 7
  %208 = load i16, ptr %207, align 8, !tbaa !18
  %209 = icmp eq i16 %208, 2
  br i1 %209, label %210, label %215

210:                                              ; preds = %205
  %211 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 25
  %212 = load i32, ptr %211, align 4, !tbaa !21
  %213 = and i32 %212, 512
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %221, label %215

215:                                              ; preds = %205, %210
  tail call void @psys_cache_child_paths(ptr noundef nonnull %0, float noundef nofpclass(nan inf) %1, i32 noundef 0) #14
  br label %221

216:                                              ; preds = %197
  %217 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 7
  %218 = load ptr, ptr %217, align 8, !tbaa !496
  %219 = icmp eq ptr %218, null
  br i1 %219, label %221, label %220

220:                                              ; preds = %216
  tail call void @psys_free_path_cache(ptr noundef nonnull %4, ptr noundef null) #14
  br label %221

221:                                              ; preds = %201, %216, %220, %198, %215, %210
  ret void
}

declare zeroext i8 @invert_m4_m4(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.sqrt.f32(float) #7

declare void @BKE_object_where_is_calc_time(ptr noundef, ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

declare ptr @BLI_edgehash_new_ex(ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @BLI_edgehash_insert(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare ptr @BLI_edgehash_lookup(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nosync nounwind sspstrong willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @sphclassical_neighbour_accum_cb(ptr nocapture noundef %0, i32 noundef %1, float nofpclass(nan inf) %2) #8 {
  %4 = getelementptr inbounds %struct.SPHRangeData, ptr %0, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !233
  %6 = getelementptr inbounds %struct.SPHRangeData, ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 8, !tbaa !216
  %8 = icmp sgt i32 %7, 511
  br i1 %8, label %40, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.ParticleSystem, ptr %5, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !35
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds %struct.ParticleData, ptr %11, i64 %12
  %14 = getelementptr inbounds %struct.SPHRangeData, ptr %0, i64 0, i32 4
  %15 = load ptr, ptr %14, align 8, !tbaa !214
  %16 = load float, ptr %13, align 4, !tbaa !79
  %17 = load float, ptr %15, align 4, !tbaa !79
  %18 = fsub fast float %16, %17
  %19 = getelementptr inbounds float, ptr %13, i64 1
  %20 = getelementptr inbounds float, ptr %15, i64 1
  %21 = fmul fast float %18, %18
  %22 = load <2 x float>, ptr %19, align 4, !tbaa !79
  %23 = load <2 x float>, ptr %20, align 4, !tbaa !79
  %24 = fsub fast <2 x float> %22, %23
  %25 = fmul fast <2 x float> %24, %24
  %26 = extractelement <2 x float> %25, i64 0
  %27 = fadd fast float %26, %21
  %28 = extractelement <2 x float> %25, i64 1
  %29 = fadd fast float %27, %28
  %30 = tail call fast float @llvm.sqrt.f32(float %29)
  %31 = getelementptr inbounds %struct.SPHRangeData, ptr %0, i64 0, i32 5
  %32 = load float, ptr %31, align 8, !tbaa !213
  %33 = fdiv fast float %30, %32
  %34 = fcmp fast ogt float %33, 2.000000e+00
  br i1 %34, label %40, label %35

35:                                               ; preds = %9
  %36 = sext i32 %7 to i64
  %37 = getelementptr inbounds [512 x %struct.SPHNeighbor], ptr %0, i64 0, i64 %36, i32 1
  store i32 %1, ptr %37, align 8, !tbaa !219
  %38 = getelementptr inbounds [512 x %struct.SPHNeighbor], ptr %0, i64 0, i64 %36
  store ptr %5, ptr %38, align 8, !tbaa !217
  %39 = add nsw i32 %7, 1
  store i32 %39, ptr %6, align 8, !tbaa !216
  br label %40

40:                                               ; preds = %9, %3, %35
  ret void
}

declare i32 @BLI_bvhtree_range_query(ptr noundef, ptr noundef, float noundef nofpclass(nan inf), ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BLI_rw_mutex_lock(ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @BLI_rw_mutex_unlock(ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @collision_interpolate_element(ptr nocapture noundef %0, float noundef nofpclass(nan inf) %1, float noundef nofpclass(nan inf) %2, float %3, float %4) unnamed_addr #6 {
  %6 = fsub fast float 1.000000e+00, %2
  %7 = fmul fast float %6, %1
  %8 = fadd fast float %7, %2
  %9 = fsub fast float %4, %3
  %10 = fmul fast float %8, %9
  %11 = fadd fast float %10, %3
  %12 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %0, i64 0, i32 9
  %13 = load i32, ptr %12, align 8, !tbaa !256
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %88

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %0, align 8, !tbaa !44
  %18 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %0, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !44
  %20 = load float, ptr %17, align 4, !tbaa !79
  %21 = load float, ptr %19, align 4, !tbaa !79
  %22 = fmul fast float %21, %11
  %23 = fadd fast float %22, %20
  store float %23, ptr %16, align 4, !tbaa !79
  %24 = getelementptr inbounds float, ptr %17, i64 1
  %25 = load float, ptr %24, align 4, !tbaa !79
  %26 = getelementptr inbounds float, ptr %19, i64 1
  %27 = load float, ptr %26, align 4, !tbaa !79
  %28 = fmul fast float %27, %11
  %29 = fadd fast float %28, %25
  %30 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %0, i64 0, i32 2, i64 1
  store float %29, ptr %30, align 4, !tbaa !79
  %31 = getelementptr inbounds float, ptr %17, i64 2
  %32 = load float, ptr %31, align 4, !tbaa !79
  %33 = getelementptr inbounds float, ptr %19, i64 2
  %34 = load float, ptr %33, align 4, !tbaa !79
  %35 = fmul fast float %34, %11
  %36 = fadd fast float %35, %32
  %37 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %0, i64 0, i32 2, i64 2
  store float %36, ptr %37, align 4, !tbaa !79
  %38 = icmp eq i32 %13, 1
  br i1 %38, label %88, label %39

39:                                               ; preds = %15
  %40 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %0, i64 0, i32 3
  %41 = getelementptr inbounds [4 x ptr], ptr %0, i64 0, i64 1
  %42 = load ptr, ptr %41, align 8, !tbaa !44
  %43 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %0, i64 0, i32 1, i64 1
  %44 = load ptr, ptr %43, align 8, !tbaa !44
  %45 = load float, ptr %42, align 4, !tbaa !79
  %46 = load float, ptr %44, align 4, !tbaa !79
  %47 = fmul fast float %46, %11
  %48 = fadd fast float %47, %45
  store float %48, ptr %40, align 4, !tbaa !79
  %49 = getelementptr inbounds float, ptr %42, i64 1
  %50 = load float, ptr %49, align 4, !tbaa !79
  %51 = getelementptr inbounds float, ptr %44, i64 1
  %52 = load float, ptr %51, align 4, !tbaa !79
  %53 = fmul fast float %52, %11
  %54 = fadd fast float %53, %50
  %55 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %0, i64 0, i32 3, i64 1
  store float %54, ptr %55, align 4, !tbaa !79
  %56 = getelementptr inbounds float, ptr %42, i64 2
  %57 = load float, ptr %56, align 4, !tbaa !79
  %58 = getelementptr inbounds float, ptr %44, i64 2
  %59 = load float, ptr %58, align 4, !tbaa !79
  %60 = fmul fast float %59, %11
  %61 = fadd fast float %60, %57
  %62 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %0, i64 0, i32 3, i64 2
  store float %61, ptr %62, align 4, !tbaa !79
  %63 = icmp ugt i32 %13, 2
  br i1 %63, label %64, label %88

64:                                               ; preds = %39
  %65 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %0, i64 0, i32 4
  %66 = getelementptr inbounds [4 x ptr], ptr %0, i64 0, i64 2
  %67 = load ptr, ptr %66, align 8, !tbaa !44
  %68 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %0, i64 0, i32 1, i64 2
  %69 = load ptr, ptr %68, align 8, !tbaa !44
  %70 = load float, ptr %67, align 4, !tbaa !79
  %71 = load float, ptr %69, align 4, !tbaa !79
  %72 = fmul fast float %71, %11
  %73 = fadd fast float %72, %70
  store float %73, ptr %65, align 4, !tbaa !79
  %74 = getelementptr inbounds float, ptr %67, i64 1
  %75 = load float, ptr %74, align 4, !tbaa !79
  %76 = getelementptr inbounds float, ptr %69, i64 1
  %77 = load float, ptr %76, align 4, !tbaa !79
  %78 = fmul fast float %77, %11
  %79 = fadd fast float %78, %75
  %80 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %0, i64 0, i32 4, i64 1
  store float %79, ptr %80, align 4, !tbaa !79
  %81 = getelementptr inbounds float, ptr %67, i64 2
  %82 = load float, ptr %81, align 4, !tbaa !79
  %83 = getelementptr inbounds float, ptr %69, i64 2
  %84 = load float, ptr %83, align 4, !tbaa !79
  %85 = fmul fast float %84, %11
  %86 = fadd fast float %85, %82
  %87 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %0, i64 0, i32 4, i64 2
  store float %86, ptr %87, align 4, !tbaa !79
  br label %88

88:                                               ; preds = %15, %64, %39, %5
  ret void
}

declare void @interp_v3_v3v3(ptr noundef, ptr noundef, ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

declare void @boid_default_settings(ptr noundef) local_unnamed_addr #3

declare ptr @boid_new_state(ptr noundef) local_unnamed_addr #3

declare void @BLI_addtail(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @boid_new_rule(i32 noundef) local_unnamed_addr #3

declare void @BKE_ptcache_id_time(ptr noundef, ptr noundef, float noundef nofpclass(nan inf), ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare i32 @BKE_ptcache_id_reset(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @BKE_ptcache_validate(ptr noundef, i32 noundef) local_unnamed_addr #3

declare i32 @BKE_ptcache_read(ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @cached_step(ptr noundef %0, float noundef nofpclass(nan inf) %1) unnamed_addr #2 {
  %3 = alloca %struct.ParticleTexture, align 4
  %4 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !87
  %6 = getelementptr inbounds %struct.ParticleSystem, ptr %5, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 60, ptr nonnull %3) #14
  %8 = getelementptr inbounds %struct.ParticleSystem, ptr %5, i64 0, i32 42
  tail call void @pdEndEffectors(ptr noundef nonnull %8) #14
  %9 = load ptr, ptr %0, align 8, !tbaa !76
  %10 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !86
  %12 = load ptr, ptr %4, align 8, !tbaa !87
  %13 = getelementptr inbounds %struct.ParticleSystem, ptr %12, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !5
  %15 = getelementptr inbounds %struct.ParticleSettings, ptr %14, i64 0, i32 4
  %16 = load ptr, ptr %15, align 8, !tbaa !346
  %17 = tail call ptr @pdInitEffectors(ptr noundef %9, ptr noundef %11, ptr noundef %12, ptr noundef %16, i8 noundef zeroext 1) #14
  %18 = load ptr, ptr %4, align 8, !tbaa !87
  %19 = getelementptr inbounds %struct.ParticleSystem, ptr %18, i64 0, i32 42
  store ptr %17, ptr %19, align 8, !tbaa !349
  tail call void @precalc_guides(ptr noundef nonnull %0, ptr noundef %17) #14
  %20 = load ptr, ptr %6, align 8, !tbaa !5
  %21 = getelementptr inbounds %struct.ParticleSystem, ptr %5, i64 0, i32 39
  %22 = load ptr, ptr %21, align 8, !tbaa !14
  %23 = icmp eq ptr %22, null
  br i1 %23, label %48, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %struct.ParticleSystem, ptr %5, i64 0, i32 40
  %26 = load ptr, ptr %25, align 8, !tbaa !15
  %27 = getelementptr inbounds %struct.PointCache, ptr %26, i64 0, i32 2
  %28 = load i32, ptr %27, align 8, !tbaa !16
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %68

31:                                               ; preds = %24
  %32 = getelementptr inbounds %struct.ParticleSettings, ptr %20, i64 0, i32 7
  %33 = load i16, ptr %32, align 8, !tbaa !18
  %34 = icmp eq i16 %33, 2
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.ParticleSystem, ptr %5, i64 0, i32 25
  %37 = load i32, ptr %36, align 4, !tbaa !21
  %38 = and i32 %37, 4
  br label %45

39:                                               ; preds = %31
  %40 = getelementptr inbounds %struct.ParticleSettings, ptr %20, i64 0, i32 11
  %41 = load i16, ptr %40, align 8, !tbaa !22
  switch i16 %41, label %42 [
    i16 1, label %48
    i16 3, label %48
  ]

42:                                               ; preds = %39
  %43 = icmp eq i16 %41, 4
  %44 = zext i1 %43 to i32
  br label %45

45:                                               ; preds = %42, %35
  %46 = phi i32 [ %38, %35 ], [ %44, %42 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %68, label %48

48:                                               ; preds = %45, %39, %39, %2
  %49 = getelementptr inbounds %struct.ParticleSettings, ptr %20, i64 0, i32 89
  %50 = load i32, ptr %49, align 4, !tbaa !23
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.ParticleSettings, ptr %20, i64 0, i32 19
  %54 = load i16, ptr %53, align 4, !tbaa !24
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %52, %48
  %57 = getelementptr inbounds %struct.ParticleSystem, ptr %5, i64 0, i32 40
  %58 = load ptr, ptr %57, align 8, !tbaa !15
  %59 = getelementptr inbounds %struct.PointCache, ptr %58, i64 0, i32 2
  %60 = load i32, ptr %59, align 8, !tbaa !16
  %61 = and i32 %60, 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %68

63:                                               ; preds = %56
  %64 = getelementptr inbounds %struct.ParticleSettings, ptr %20, i64 0, i32 30
  %65 = load i16, ptr %64, align 2, !tbaa !25
  %66 = sitofp i16 %65 to float
  %67 = fmul fast float %66, 0x3F847AE140000000
  br label %68

68:                                               ; preds = %24, %45, %52, %56, %63
  %69 = phi float [ %67, %63 ], [ 1.000000e+00, %56 ], [ 1.000000e+00, %52 ], [ 1.000000e+00, %45 ], [ 1.000000e+00, %24 ]
  %70 = getelementptr inbounds %struct.ParticleSystem, ptr %5, i64 0, i32 26
  %71 = load i32, ptr %70, align 8, !tbaa !26
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %163

73:                                               ; preds = %68
  %74 = getelementptr inbounds %struct.ParticleSystem, ptr %5, i64 0, i32 3
  %75 = load ptr, ptr %74, align 8, !tbaa !35
  %76 = getelementptr inbounds %struct.ParticleSettings, ptr %7, i64 0, i32 82
  %77 = getelementptr inbounds %struct.ParticleTexture, ptr %3, i64 0, i32 4
  %78 = getelementptr inbounds %struct.ParticleSettings, ptr %7, i64 0, i32 83
  %79 = getelementptr i8, ptr %5, i64 308
  %80 = getelementptr inbounds %struct.ParticleSystem, ptr %5, i64 0, i32 15
  %81 = getelementptr inbounds %struct.ParticleSettings, ptr %7, i64 0, i32 5
  %82 = getelementptr inbounds %struct.ParticleSystem, ptr %5, i64 0, i32 40
  br label %83

83:                                               ; preds = %73, %139
  %84 = phi ptr [ %75, %73 ], [ %160, %139 ]
  %85 = phi i32 [ 0, %73 ], [ %159, %139 ]
  call void @psys_get_texture(ptr noundef nonnull %0, ptr noundef %84, ptr noundef nonnull %3, i32 noundef 8, float noundef nofpclass(nan inf) %1) #14
  %86 = load float, ptr %76, align 8, !tbaa !238
  %87 = load float, ptr %77, align 4, !tbaa !367
  %88 = fmul fast float %87, %86
  %89 = getelementptr inbounds %struct.ParticleData, ptr %84, i64 0, i32 13
  store float %88, ptr %89, align 4, !tbaa !205
  %90 = load float, ptr %78, align 4, !tbaa !313
  %91 = fcmp fast ogt float %90, 0.000000e+00
  br i1 %91, label %92, label %110

92:                                               ; preds = %83
  %93 = add nuw nsw i32 %85, 1
  %94 = load i32, ptr %79, align 4, !tbaa !124
  %95 = srem i32 %94, 1024
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %96
  %98 = load i32, ptr %97, align 4, !tbaa !68
  %99 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %96
  %100 = load i32, ptr %99, align 4, !tbaa !68
  %101 = mul i32 %100, %93
  %102 = add i32 %101, %98
  %103 = and i32 %102, 1023
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %104
  %106 = load float, ptr %105, align 4, !tbaa !79
  %107 = fmul fast float %106, %90
  %108 = fsub fast float 1.000000e+00, %107
  %109 = fmul fast float %108, %88
  store float %109, ptr %89, align 4, !tbaa !205
  br label %110

110:                                              ; preds = %92, %83
  %111 = call ptr @psys_create_lattice_deform_data(ptr noundef nonnull %0) #14
  store ptr %111, ptr %80, align 8, !tbaa !102
  %112 = getelementptr inbounds %struct.ParticleData, ptr %84, i64 0, i32 6
  %113 = load float, ptr %112, align 4, !tbaa !115
  %114 = fcmp fast ogt float %113, %1
  br i1 %114, label %115, label %128

115:                                              ; preds = %110
  %116 = getelementptr inbounds %struct.ParticleData, ptr %84, i64 0, i32 18
  store i16 2, ptr %116, align 2, !tbaa !173
  %117 = load i32, ptr %81, align 8, !tbaa !222
  %118 = and i32 %117, 32
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %135, label %120

120:                                              ; preds = %115
  %121 = load ptr, ptr %82, align 8, !tbaa !15
  %122 = getelementptr inbounds %struct.PointCache, ptr %121, i64 0, i32 2
  %123 = load i32, ptr %122, align 8, !tbaa !16
  %124 = and i32 %123, 512
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %135

126:                                              ; preds = %120
  call void @reset_particle(ptr noundef nonnull %0, ptr noundef nonnull %84, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %1)
  %127 = load ptr, ptr %80, align 8, !tbaa !102
  br label %135

128:                                              ; preds = %110
  %129 = getelementptr inbounds %struct.ParticleData, ptr %84, i64 0, i32 8
  %130 = load float, ptr %129, align 4, !tbaa !170
  %131 = fcmp fast ugt float %130, %1
  %132 = getelementptr inbounds %struct.ParticleData, ptr %84, i64 0, i32 18
  br i1 %131, label %134, label %133

133:                                              ; preds = %128
  store i16 1, ptr %132, align 2, !tbaa !173
  br label %135

134:                                              ; preds = %128
  store i16 3, ptr %132, align 2, !tbaa !173
  br label %135

135:                                              ; preds = %133, %134, %115, %120, %126
  %136 = phi ptr [ %111, %133 ], [ %111, %134 ], [ %111, %115 ], [ %111, %120 ], [ %127, %126 ]
  %137 = icmp eq ptr %136, null
  br i1 %137, label %139, label %138

138:                                              ; preds = %135
  call void @end_latt_deform(ptr noundef nonnull %136) #14
  store ptr null, ptr %80, align 8, !tbaa !102
  br label %139

139:                                              ; preds = %138, %135
  %140 = load i32, ptr %79, align 4, !tbaa !124
  %141 = srem i32 %140, 1024
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %142
  %144 = load i32, ptr %143, align 4, !tbaa !68
  %145 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %142
  %146 = load i32, ptr %145, align 4, !tbaa !68
  %147 = mul i32 %146, %85
  %148 = add i32 %147, %144
  %149 = and i32 %148, 1023
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %150
  %152 = load float, ptr %151, align 4, !tbaa !79
  %153 = fcmp fast ogt float %152, %69
  %154 = getelementptr inbounds %struct.ParticleData, ptr %84, i64 0, i32 17
  %155 = load i16, ptr %154, align 4, !tbaa !36
  %156 = and i16 %155, -3
  %157 = select i1 %153, i16 2, i16 0
  %158 = or i16 %156, %157
  store i16 %158, ptr %154, align 4, !tbaa !36
  %159 = add nuw nsw i32 %85, 1
  %160 = getelementptr inbounds %struct.ParticleData, ptr %84, i64 1
  %161 = load i32, ptr %70, align 8, !tbaa !26
  %162 = icmp slt i32 %159, %161
  br i1 %162, label %83, label %163, !llvm.loop !497

163:                                              ; preds = %139, %68
  call void @llvm.lifetime.end.p0(i64 60, ptr nonnull %3) #14
  ret void
}

declare i32 @BKE_ptcache_write(ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @BKE_ptcache_free_mem(ptr noundef) local_unnamed_addr #3

declare ptr @psys_create_lattice_deform_data(ptr noundef) local_unnamed_addr #3

declare void @pdEndEffectors(ptr noundef) local_unnamed_addr #3

declare ptr @pdInitEffectors(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

declare void @precalc_guides(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @psys_free_children(ptr noundef) local_unnamed_addr #3

declare i32 @get_render_child_particle_number(ptr noundef, i32 noundef) local_unnamed_addr #3

declare nofpclass(nan inf) float @psys_get_timestep(ptr noundef) local_unnamed_addr #3

declare void @BLI_srandom(i32 noundef) local_unnamed_addr #3

declare ptr @BLI_rng_new_srandom(i32 noundef) local_unnamed_addr #3

declare ptr @get_collider_cache(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @boids_precalc_rules(ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @psys_update_particle_bvhtree(ptr noundef %0, float noundef nofpclass(nan inf) %1) unnamed_addr #2 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %205, label %4

4:                                                ; preds = %2
  tail call void @BLI_rw_mutex_lock(ptr noundef nonnull @psys_bvhtree_rwlock, i32 noundef 1) #14
  %5 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 47
  %6 = load ptr, ptr %5, align 8, !tbaa !240
  %7 = icmp eq ptr %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 22
  %10 = load float, ptr %9, align 8, !tbaa !498
  %11 = fcmp fast oeq float %10, %1
  tail call void @BLI_rw_mutex_unlock(ptr noundef nonnull @psys_bvhtree_rwlock) #14
  br i1 %11, label %205, label %13

12:                                               ; preds = %4
  tail call void @BLI_rw_mutex_unlock(ptr noundef nonnull @psys_bvhtree_rwlock) #14
  br label %13

13:                                               ; preds = %12, %8
  %14 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 3
  %15 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 26
  %16 = load i32, ptr %15, align 8, !tbaa !26
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %169

18:                                               ; preds = %13
  %19 = load ptr, ptr %14, align 8, !tbaa !35
  %20 = zext i32 %16 to i64
  %21 = icmp ult i32 %16, 16
  br i1 %21, label %152, label %22

22:                                               ; preds = %18
  %23 = and i64 %20, 4294967280
  %24 = mul nuw nsw i64 %23, 200
  %25 = getelementptr i8, ptr %19, i64 %24
  %26 = trunc i64 %23 to i32
  %27 = getelementptr %struct.ParticleData, ptr %19, i64 0, i32 17
  %28 = getelementptr %struct.ParticleData, ptr %19, i64 0, i32 17
  %29 = getelementptr %struct.ParticleData, ptr %19, i64 0, i32 17
  %30 = getelementptr %struct.ParticleData, ptr %19, i64 0, i32 17
  %31 = getelementptr %struct.ParticleData, ptr %19, i64 0, i32 17
  %32 = getelementptr %struct.ParticleData, ptr %19, i64 0, i32 17
  %33 = getelementptr %struct.ParticleData, ptr %19, i64 0, i32 17
  %34 = getelementptr %struct.ParticleData, ptr %19, i64 0, i32 17
  %35 = getelementptr %struct.ParticleData, ptr %19, i64 0, i32 17
  %36 = getelementptr %struct.ParticleData, ptr %19, i64 0, i32 17
  %37 = getelementptr %struct.ParticleData, ptr %19, i64 0, i32 17
  %38 = getelementptr %struct.ParticleData, ptr %19, i64 0, i32 17
  %39 = getelementptr %struct.ParticleData, ptr %19, i64 0, i32 17
  %40 = getelementptr %struct.ParticleData, ptr %19, i64 0, i32 17
  %41 = getelementptr %struct.ParticleData, ptr %19, i64 0, i32 17
  %42 = getelementptr %struct.ParticleData, ptr %19, i64 0, i32 17
  br label %43

43:                                               ; preds = %43, %22
  %44 = phi i64 [ 0, %22 ], [ %144, %43 ]
  %45 = phi <4 x i32> [ zeroinitializer, %22 ], [ %140, %43 ]
  %46 = phi <4 x i32> [ zeroinitializer, %22 ], [ %141, %43 ]
  %47 = phi <4 x i32> [ zeroinitializer, %22 ], [ %142, %43 ]
  %48 = phi <4 x i32> [ zeroinitializer, %22 ], [ %143, %43 ]
  %49 = mul i64 %44, 200
  %50 = mul i64 %44, 200
  %51 = add i64 %50, 200
  %52 = mul i64 %44, 200
  %53 = add i64 %52, 400
  %54 = mul i64 %44, 200
  %55 = add i64 %54, 600
  %56 = mul i64 %44, 200
  %57 = add i64 %56, 800
  %58 = mul i64 %44, 200
  %59 = add i64 %58, 1000
  %60 = mul i64 %44, 200
  %61 = add i64 %60, 1200
  %62 = mul i64 %44, 200
  %63 = add i64 %62, 1400
  %64 = mul i64 %44, 200
  %65 = add i64 %64, 1600
  %66 = mul i64 %44, 200
  %67 = add i64 %66, 1800
  %68 = mul i64 %44, 200
  %69 = add i64 %68, 2000
  %70 = mul i64 %44, 200
  %71 = add i64 %70, 2200
  %72 = mul i64 %44, 200
  %73 = add i64 %72, 2400
  %74 = mul i64 %44, 200
  %75 = add i64 %74, 2600
  %76 = mul i64 %44, 200
  %77 = add i64 %76, 2800
  %78 = mul i64 %44, 200
  %79 = add i64 %78, 3000
  %80 = getelementptr i8, ptr %27, i64 %49
  %81 = getelementptr i8, ptr %28, i64 %51
  %82 = getelementptr i8, ptr %29, i64 %53
  %83 = getelementptr i8, ptr %30, i64 %55
  %84 = getelementptr i8, ptr %31, i64 %57
  %85 = getelementptr i8, ptr %32, i64 %59
  %86 = getelementptr i8, ptr %33, i64 %61
  %87 = getelementptr i8, ptr %34, i64 %63
  %88 = getelementptr i8, ptr %35, i64 %65
  %89 = getelementptr i8, ptr %36, i64 %67
  %90 = getelementptr i8, ptr %37, i64 %69
  %91 = getelementptr i8, ptr %38, i64 %71
  %92 = getelementptr i8, ptr %39, i64 %73
  %93 = getelementptr i8, ptr %40, i64 %75
  %94 = getelementptr i8, ptr %41, i64 %77
  %95 = getelementptr i8, ptr %42, i64 %79
  %96 = load i16, ptr %80, align 4, !tbaa !36
  %97 = load i16, ptr %81, align 4, !tbaa !36
  %98 = load i16, ptr %82, align 4, !tbaa !36
  %99 = load i16, ptr %83, align 4, !tbaa !36
  %100 = insertelement <4 x i16> poison, i16 %96, i64 0
  %101 = insertelement <4 x i16> %100, i16 %97, i64 1
  %102 = insertelement <4 x i16> %101, i16 %98, i64 2
  %103 = insertelement <4 x i16> %102, i16 %99, i64 3
  %104 = load i16, ptr %84, align 4, !tbaa !36
  %105 = load i16, ptr %85, align 4, !tbaa !36
  %106 = load i16, ptr %86, align 4, !tbaa !36
  %107 = load i16, ptr %87, align 4, !tbaa !36
  %108 = insertelement <4 x i16> poison, i16 %104, i64 0
  %109 = insertelement <4 x i16> %108, i16 %105, i64 1
  %110 = insertelement <4 x i16> %109, i16 %106, i64 2
  %111 = insertelement <4 x i16> %110, i16 %107, i64 3
  %112 = load i16, ptr %88, align 4, !tbaa !36
  %113 = load i16, ptr %89, align 4, !tbaa !36
  %114 = load i16, ptr %90, align 4, !tbaa !36
  %115 = load i16, ptr %91, align 4, !tbaa !36
  %116 = insertelement <4 x i16> poison, i16 %112, i64 0
  %117 = insertelement <4 x i16> %116, i16 %113, i64 1
  %118 = insertelement <4 x i16> %117, i16 %114, i64 2
  %119 = insertelement <4 x i16> %118, i16 %115, i64 3
  %120 = load i16, ptr %92, align 4, !tbaa !36
  %121 = load i16, ptr %93, align 4, !tbaa !36
  %122 = load i16, ptr %94, align 4, !tbaa !36
  %123 = load i16, ptr %95, align 4, !tbaa !36
  %124 = insertelement <4 x i16> poison, i16 %120, i64 0
  %125 = insertelement <4 x i16> %124, i16 %121, i64 1
  %126 = insertelement <4 x i16> %125, i16 %122, i64 2
  %127 = insertelement <4 x i16> %126, i16 %123, i64 3
  %128 = and <4 x i16> %103, <i16 3, i16 3, i16 3, i16 3>
  %129 = and <4 x i16> %111, <i16 3, i16 3, i16 3, i16 3>
  %130 = and <4 x i16> %119, <i16 3, i16 3, i16 3, i16 3>
  %131 = and <4 x i16> %127, <i16 3, i16 3, i16 3, i16 3>
  %132 = icmp eq <4 x i16> %128, zeroinitializer
  %133 = icmp eq <4 x i16> %129, zeroinitializer
  %134 = icmp eq <4 x i16> %130, zeroinitializer
  %135 = icmp eq <4 x i16> %131, zeroinitializer
  %136 = zext <4 x i1> %132 to <4 x i32>
  %137 = zext <4 x i1> %133 to <4 x i32>
  %138 = zext <4 x i1> %134 to <4 x i32>
  %139 = zext <4 x i1> %135 to <4 x i32>
  %140 = add <4 x i32> %45, %136
  %141 = add <4 x i32> %46, %137
  %142 = add <4 x i32> %47, %138
  %143 = add <4 x i32> %48, %139
  %144 = add nuw i64 %44, 16
  %145 = icmp eq i64 %144, %23
  br i1 %145, label %146, label %43, !llvm.loop !499

146:                                              ; preds = %43
  %147 = add <4 x i32> %141, %140
  %148 = add <4 x i32> %142, %147
  %149 = add <4 x i32> %143, %148
  %150 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %149)
  %151 = icmp eq i64 %23, %20
  br i1 %151, label %169, label %152

152:                                              ; preds = %18, %146
  %153 = phi ptr [ %19, %18 ], [ %25, %146 ]
  %154 = phi i32 [ 0, %18 ], [ %150, %146 ]
  %155 = phi i32 [ 0, %18 ], [ %26, %146 ]
  br label %156

156:                                              ; preds = %152, %156
  %157 = phi ptr [ %167, %156 ], [ %153, %152 ]
  %158 = phi i32 [ %165, %156 ], [ %154, %152 ]
  %159 = phi i32 [ %166, %156 ], [ %155, %152 ]
  %160 = getelementptr inbounds %struct.ParticleData, ptr %157, i64 0, i32 17
  %161 = load i16, ptr %160, align 4, !tbaa !36
  %162 = and i16 %161, 3
  %163 = icmp eq i16 %162, 0
  %164 = zext i1 %163 to i32
  %165 = add nuw nsw i32 %158, %164
  %166 = add nuw nsw i32 %159, 1
  %167 = getelementptr inbounds %struct.ParticleData, ptr %157, i64 1
  %168 = icmp eq i32 %166, %16
  br i1 %168, label %169, label %156, !llvm.loop !500

169:                                              ; preds = %156, %146, %13
  %170 = phi i32 [ 0, %13 ], [ %150, %146 ], [ %165, %156 ]
  tail call void @BLI_rw_mutex_lock(ptr noundef nonnull @psys_bvhtree_rwlock, i32 noundef 2) #14
  %171 = load ptr, ptr %5, align 8, !tbaa !240
  tail call void @BLI_bvhtree_free(ptr noundef %171) #14
  %172 = tail call ptr @BLI_bvhtree_new(i32 noundef %170, float noundef nofpclass(nan inf) 0.000000e+00, i8 noundef zeroext 4, i8 noundef zeroext 6) #14
  store ptr %172, ptr %5, align 8, !tbaa !240
  %173 = load i32, ptr %15, align 8, !tbaa !26
  %174 = icmp sgt i32 %173, 0
  br i1 %174, label %175, label %202

175:                                              ; preds = %169
  %176 = load ptr, ptr %14, align 8, !tbaa !35
  br label %177

177:                                              ; preds = %175, %195
  %178 = phi ptr [ %197, %195 ], [ %176, %175 ]
  %179 = phi i32 [ %196, %195 ], [ 0, %175 ]
  %180 = getelementptr inbounds %struct.ParticleData, ptr %178, i64 0, i32 17
  %181 = load i16, ptr %180, align 4, !tbaa !36
  %182 = and i16 %181, 3
  %183 = icmp eq i16 %182, 0
  br i1 %183, label %184, label %195

184:                                              ; preds = %177
  %185 = getelementptr inbounds %struct.ParticleData, ptr %178, i64 0, i32 18
  %186 = load i16, ptr %185, align 2, !tbaa !173
  %187 = icmp eq i16 %186, 3
  br i1 %187, label %188, label %195

188:                                              ; preds = %184
  %189 = getelementptr inbounds %struct.ParticleKey, ptr %178, i64 0, i32 4
  %190 = load float, ptr %189, align 4, !tbaa !174
  %191 = fcmp fast oeq float %190, %1
  %192 = load ptr, ptr %5, align 8, !tbaa !240
  %193 = getelementptr inbounds %struct.ParticleData, ptr %178, i64 0, i32 1
  %194 = select i1 %191, ptr %193, ptr %178
  tail call void @BLI_bvhtree_insert(ptr noundef %192, i32 noundef %179, ptr noundef nonnull %194, i32 noundef 1) #14
  br label %195

195:                                              ; preds = %188, %177, %184
  %196 = add nuw nsw i32 %179, 1
  %197 = getelementptr inbounds %struct.ParticleData, ptr %178, i64 1
  %198 = load i32, ptr %15, align 8, !tbaa !26
  %199 = icmp slt i32 %196, %198
  br i1 %199, label %177, label %200, !llvm.loop !501

200:                                              ; preds = %195
  %201 = load ptr, ptr %5, align 8, !tbaa !240
  br label %202

202:                                              ; preds = %200, %169
  %203 = phi ptr [ %201, %200 ], [ %172, %169 ]
  tail call void @BLI_bvhtree_balance(ptr noundef %203) #14
  %204 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 22
  store float %1, ptr %204, align 8, !tbaa !498
  tail call void @BLI_rw_mutex_unlock(ptr noundef nonnull @psys_bvhtree_rwlock) #14
  br label %205

205:                                              ; preds = %8, %202, %2
  ret void
}

declare void @copy_particle_key(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @basic_integrate(ptr noundef %0, i32 noundef %1, float noundef nofpclass(nan inf) %2, float noundef nofpclass(nan inf) %3) unnamed_addr #2 {
  %5 = alloca %struct.ParticleKey, align 8
  %6 = alloca [3 x float], align 8
  %7 = alloca %struct.EfData, align 8
  %8 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !87
  %10 = getelementptr inbounds %struct.ParticleSystem, ptr %9, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !5
  %12 = getelementptr inbounds %struct.ParticleSystem, ptr %9, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !35
  %14 = sext i32 %1 to i64
  %15 = getelementptr inbounds %struct.ParticleData, ptr %13, i64 %14
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %5) #14
  %16 = tail call fast nofpclass(nan inf) float @psys_get_timestep(ptr noundef %0) #14
  %17 = fmul fast float %16, %2
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #14
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %7) #14
  call void @psys_get_texture(ptr noundef %0, ptr noundef %15, ptr noundef nonnull %7, i32 noundef 3136, float noundef nofpclass(nan inf) %3) #14
  %18 = getelementptr inbounds %struct.EfData, ptr %7, i64 0, i32 2
  store ptr %15, ptr %18, align 8, !tbaa !502
  %19 = getelementptr inbounds %struct.EfData, ptr %7, i64 0, i32 1
  store ptr %0, ptr %19, align 8, !tbaa !504
  %20 = call i32 @psys_uses_gravity(ptr noundef %0) #14
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %49, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %struct.ParticleSettings, ptr %11, i64 0, i32 7
  %24 = load i16, ptr %23, align 8, !tbaa !18
  %25 = icmp eq i16 %24, 2
  %26 = getelementptr inbounds %struct.ParticleSettings, ptr %11, i64 0, i32 4
  %27 = load ptr, ptr %26, align 8, !tbaa !346
  br i1 %25, label %28, label %33

28:                                               ; preds = %22
  %29 = getelementptr inbounds %struct.EffectorWeights, ptr %27, i64 0, i32 3
  %30 = load i16, ptr %29, align 4, !tbaa !505
  %31 = and i16 %30, 1
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %49, label %33

33:                                               ; preds = %22, %28
  %34 = getelementptr inbounds float, ptr %6, i64 2
  %35 = load ptr, ptr %0, align 8, !tbaa !76
  %36 = getelementptr inbounds %struct.Scene, ptr %35, i64 0, i32 40
  %37 = getelementptr inbounds %struct.EffectorWeights, ptr %27, i64 0, i32 2
  %38 = load float, ptr %37, align 8, !tbaa !507
  %39 = getelementptr inbounds %struct.ParticleTexture, ptr %7, i64 0, i32 6
  %40 = load float, ptr %39, align 8, !tbaa !508
  %41 = fmul fast float %40, %38
  %42 = load <2 x float>, ptr %36, align 4, !tbaa !79
  %43 = insertelement <2 x float> poison, float %41, i64 0
  %44 = shufflevector <2 x float> %43, <2 x float> poison, <2 x i32> zeroinitializer
  %45 = fmul fast <2 x float> %42, %44
  store <2 x float> %45, ptr %6, align 8, !tbaa !79
  %46 = getelementptr inbounds %struct.Scene, ptr %35, i64 0, i32 40, i32 0, i64 2
  %47 = load float, ptr %46, align 4, !tbaa !79
  %48 = fmul fast float %47, %41
  store float %48, ptr %34, align 8, !tbaa !79
  br label %49

49:                                               ; preds = %33, %28, %4
  %50 = phi ptr [ %6, %33 ], [ null, %28 ], [ null, %4 ]
  %51 = getelementptr inbounds %struct.ParticleKey, ptr %15, i64 0, i32 3
  %52 = getelementptr inbounds %struct.ParticleData, ptr %13, i64 %14, i32 1
  %53 = getelementptr inbounds %struct.ParticleData, ptr %13, i64 %14, i32 1, i32 3
  %54 = load <2 x float>, ptr %53, align 4, !tbaa !79
  store <2 x float> %54, ptr %51, align 4, !tbaa !79
  %55 = getelementptr inbounds float, ptr %53, i64 2
  %56 = load float, ptr %55, align 4, !tbaa !79
  %57 = getelementptr inbounds %struct.ParticleKey, ptr %15, i64 0, i32 3, i64 2
  store float %56, ptr %57, align 4, !tbaa !79
  call fastcc void @integrate_particle(ptr noundef %11, ptr noundef %15, float noundef nofpclass(nan inf) %17, ptr noundef %50, ptr noundef nonnull @basic_force_cb, ptr noundef nonnull %7)
  %58 = getelementptr inbounds %struct.ParticleSettings, ptr %11, i64 0, i32 87
  %59 = load float, ptr %58, align 4, !tbaa !509
  %60 = fcmp fast une float %59, 0.000000e+00
  br i1 %60, label %61, label %76

61:                                               ; preds = %49
  %62 = getelementptr inbounds %struct.ParticleKey, ptr %15, i64 0, i32 1
  %63 = getelementptr inbounds %struct.ParticleTexture, ptr %7, i64 0, i32 5
  %64 = load float, ptr %63, align 4, !tbaa !510
  %65 = fmul fast float %17, 2.500000e+01
  %66 = fmul fast float %65, %59
  %67 = fmul fast float %66, %64
  %68 = fsub fast float 1.000000e+00, %67
  %69 = load <2 x float>, ptr %62, align 4, !tbaa !79
  %70 = insertelement <2 x float> poison, float %68, i64 0
  %71 = shufflevector <2 x float> %70, <2 x float> poison, <2 x i32> zeroinitializer
  %72 = fmul fast <2 x float> %71, %69
  store <2 x float> %72, ptr %62, align 4, !tbaa !79
  %73 = getelementptr inbounds %struct.ParticleKey, ptr %15, i64 0, i32 1, i64 2
  %74 = load float, ptr %73, align 4, !tbaa !79
  %75 = fmul fast float %74, %68
  store float %75, ptr %73, align 4, !tbaa !79
  br label %76

76:                                               ; preds = %61, %49
  %77 = getelementptr inbounds %struct.ParticleData, ptr %13, i64 %14, i32 6
  %78 = load float, ptr %77, align 4, !tbaa !115
  %79 = fsub fast float %3, %78
  %80 = getelementptr inbounds %struct.ParticleData, ptr %13, i64 %14, i32 7
  %81 = load float, ptr %80, align 8, !tbaa !167
  %82 = fdiv fast float %79, %81
  %83 = fcmp fast olt float %82, 0.000000e+00
  br i1 %83, label %87, label %84

84:                                               ; preds = %76
  %85 = fcmp fast ogt float %82, 1.000000e+00
  br i1 %85, label %86, label %87

86:                                               ; preds = %84
  br label %87

87:                                               ; preds = %76, %84, %86
  %88 = phi float [ 1.000000e+00, %86 ], [ %82, %84 ], [ 0.000000e+00, %76 ]
  %89 = load float, ptr %15, align 4, !tbaa !79
  store float %89, ptr %5, align 8, !tbaa !79
  %90 = getelementptr inbounds float, ptr %15, i64 1
  %91 = load float, ptr %90, align 4, !tbaa !79
  %92 = getelementptr inbounds float, ptr %5, i64 1
  store float %91, ptr %92, align 4, !tbaa !79
  %93 = getelementptr inbounds float, ptr %15, i64 2
  %94 = load float, ptr %93, align 4, !tbaa !79
  %95 = getelementptr inbounds float, ptr %5, i64 2
  store float %94, ptr %95, align 8, !tbaa !79
  %96 = getelementptr inbounds %struct.ParticleKey, ptr %5, i64 0, i32 1
  %97 = getelementptr inbounds %struct.ParticleKey, ptr %15, i64 0, i32 1
  %98 = load float, ptr %97, align 4, !tbaa !79
  store float %98, ptr %96, align 4, !tbaa !79
  %99 = getelementptr inbounds %struct.ParticleKey, ptr %15, i64 0, i32 1, i64 1
  %100 = load float, ptr %99, align 4, !tbaa !79
  %101 = getelementptr inbounds %struct.ParticleKey, ptr %5, i64 0, i32 1, i64 1
  store float %100, ptr %101, align 8, !tbaa !79
  %102 = getelementptr inbounds %struct.ParticleKey, ptr %15, i64 0, i32 1, i64 2
  %103 = load float, ptr %102, align 4, !tbaa !79
  %104 = getelementptr inbounds %struct.ParticleKey, ptr %5, i64 0, i32 1, i64 2
  store float %103, ptr %104, align 4, !tbaa !79
  %105 = getelementptr inbounds %struct.ParticleKey, ptr %15, i64 0, i32 4
  %106 = load float, ptr %105, align 4, !tbaa !174
  %107 = getelementptr inbounds %struct.ParticleKey, ptr %5, i64 0, i32 4
  store float %106, ptr %107, align 4, !tbaa !220
  %108 = getelementptr inbounds %struct.ParticleSettings, ptr %11, i64 0, i32 7
  %109 = load i16, ptr %108, align 8, !tbaa !18
  %110 = icmp eq i16 %109, 2
  br i1 %110, label %134, label %111

111:                                              ; preds = %87
  %112 = load ptr, ptr %8, align 8, !tbaa !87
  %113 = getelementptr inbounds %struct.ParticleSystem, ptr %112, i64 0, i32 42
  %114 = load ptr, ptr %113, align 8, !tbaa !349
  %115 = call i32 @do_guides(ptr noundef %114, ptr noundef nonnull %5, i32 noundef %1, float noundef nofpclass(nan inf) %88) #14
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %134, label %117

117:                                              ; preds = %111
  %118 = load float, ptr %5, align 8, !tbaa !79
  store float %118, ptr %15, align 4, !tbaa !79
  %119 = load float, ptr %92, align 4, !tbaa !79
  store float %119, ptr %90, align 4, !tbaa !79
  %120 = load float, ptr %95, align 8, !tbaa !79
  store float %120, ptr %93, align 4, !tbaa !79
  %121 = load float, ptr %95, align 8, !tbaa !79
  %122 = getelementptr inbounds float, ptr %52, i64 2
  %123 = load float, ptr %122, align 4, !tbaa !79
  %124 = fsub fast float %121, %123
  %125 = fdiv fast float 1.000000e+00, %17
  %126 = load <2 x float>, ptr %5, align 8, !tbaa !79
  %127 = load <2 x float>, ptr %52, align 4, !tbaa !79
  %128 = fsub fast <2 x float> %126, %127
  %129 = insertelement <2 x float> poison, float %125, i64 0
  %130 = shufflevector <2 x float> %129, <2 x float> poison, <2 x i32> zeroinitializer
  %131 = fmul fast <2 x float> %128, %130
  store <2 x float> %131, ptr %97, align 4, !tbaa !79
  %132 = fmul fast float %124, %125
  store float %132, ptr %102, align 4, !tbaa !79
  %133 = load float, ptr %107, align 4, !tbaa !220
  store float %133, ptr %105, align 4, !tbaa !174
  br label %134

134:                                              ; preds = %111, %117, %87
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %7) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #14
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %5) #14
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @collision_check(ptr noundef %0, i32 noundef %1, float noundef nofpclass(nan inf) %2, float noundef nofpclass(nan inf) %3) unnamed_addr #2 {
  %5 = alloca [3 x float], align 4
  %6 = alloca [3 x float], align 8
  %7 = alloca [3 x float], align 8
  %8 = alloca [3 x float], align 8
  %9 = alloca [3 x float], align 8
  %10 = alloca [3 x float], align 4
  %11 = alloca [3 x float], align 8
  %12 = alloca %struct.ParticleCollision, align 8
  %13 = alloca %struct.BVHTreeRayHit, align 4
  %14 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !87
  %16 = getelementptr inbounds %struct.ParticleSystem, ptr %15, i64 0, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !5
  %18 = getelementptr inbounds %struct.ParticleSystem, ptr %15, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8, !tbaa !35
  %20 = sext i32 %1 to i64
  %21 = getelementptr inbounds %struct.ParticleData, ptr %19, i64 %20
  call void @llvm.lifetime.start.p0(i64 328, ptr nonnull %12) #14
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %13) #14
  %22 = tail call fast nofpclass(nan inf) float @psys_get_timestep(ptr noundef %0) #14
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(328) %12, i8 0, i64 328, i1 false)
  %23 = fmul fast float %22, %2
  %24 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 14
  store float %23, ptr %24, align 8, !tbaa !511
  %25 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 15
  %26 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 16
  %27 = insertelement <2 x float> poison, float %23, i64 0
  %28 = insertelement <2 x float> %27, float %22, i64 1
  %29 = fdiv fast <2 x float> <float 1.000000e+00, float 1.000000e+00>, %28
  store <2 x float> %29, ptr %25, align 4, !tbaa !79
  %30 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 9
  store float %3, ptr %30, align 4, !tbaa !512
  %31 = load ptr, ptr %14, align 8, !tbaa !87
  %32 = getelementptr inbounds %struct.ParticleSystem, ptr %31, i64 0, i32 20
  %33 = load float, ptr %32, align 8, !tbaa !134
  %34 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 10
  store float %33, ptr %34, align 8, !tbaa !513
  %35 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 22
  %36 = getelementptr inbounds %struct.ParticleKey, ptr %21, i64 0, i32 1
  %37 = getelementptr inbounds %struct.ParticleData, ptr %19, i64 %20, i32 1
  %38 = getelementptr inbounds %struct.ParticleData, ptr %19, i64 %20, i32 1, i32 1
  %39 = load float, ptr %36, align 4, !tbaa !79
  %40 = load float, ptr %38, align 4, !tbaa !79
  %41 = fsub fast float %39, %40
  store float %41, ptr %35, align 8, !tbaa !79
  %42 = getelementptr inbounds %struct.ParticleKey, ptr %21, i64 0, i32 1, i64 1
  %43 = load float, ptr %42, align 4, !tbaa !79
  %44 = getelementptr inbounds float, ptr %38, i64 1
  %45 = load float, ptr %44, align 4, !tbaa !79
  %46 = fsub fast float %43, %45
  %47 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 22, i64 1
  store float %46, ptr %47, align 4, !tbaa !79
  %48 = getelementptr inbounds %struct.ParticleKey, ptr %21, i64 0, i32 1, i64 2
  %49 = load float, ptr %48, align 4, !tbaa !79
  %50 = getelementptr inbounds float, ptr %38, i64 2
  %51 = load float, ptr %50, align 4, !tbaa !79
  %52 = fsub fast float %49, %51
  %53 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 22, i64 2
  %54 = extractelement <2 x float> %29, i64 0
  %55 = fmul fast float %41, %54
  store float %55, ptr %35, align 8, !tbaa !79
  %56 = fmul fast float %46, %54
  store float %56, ptr %47, align 4, !tbaa !79
  %57 = fmul fast float %52, %54
  store float %57, ptr %53, align 8, !tbaa !79
  %58 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 18
  %59 = load float, ptr %37, align 4, !tbaa !79
  store float %59, ptr %58, align 8, !tbaa !79
  %60 = getelementptr inbounds float, ptr %37, i64 1
  %61 = load float, ptr %60, align 4, !tbaa !79
  %62 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 18, i64 1
  store float %61, ptr %62, align 4, !tbaa !79
  %63 = getelementptr inbounds float, ptr %37, i64 2
  %64 = load float, ptr %63, align 4, !tbaa !79
  %65 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 18, i64 2
  store float %64, ptr %65, align 8, !tbaa !79
  %66 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 19
  %67 = load float, ptr %21, align 4, !tbaa !79
  store float %67, ptr %66, align 4, !tbaa !79
  %68 = getelementptr inbounds float, ptr %21, i64 1
  %69 = load float, ptr %68, align 4, !tbaa !79
  %70 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 19, i64 1
  store float %69, ptr %70, align 8, !tbaa !79
  %71 = getelementptr inbounds float, ptr %21, i64 2
  %72 = load float, ptr %71, align 4, !tbaa !79
  %73 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 19, i64 2
  store float %72, ptr %73, align 4, !tbaa !79
  %74 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 20
  %75 = load float, ptr %38, align 4, !tbaa !79
  store float %75, ptr %74, align 8, !tbaa !79
  %76 = load float, ptr %44, align 4, !tbaa !79
  %77 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 20, i64 1
  store float %76, ptr %77, align 4, !tbaa !79
  %78 = load float, ptr %50, align 4, !tbaa !79
  %79 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 20, i64 2
  store float %78, ptr %79, align 8, !tbaa !79
  %80 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 21
  %81 = load float, ptr %36, align 4, !tbaa !79
  store float %81, ptr %80, align 4, !tbaa !79
  %82 = load float, ptr %42, align 4, !tbaa !79
  %83 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 21, i64 1
  store float %82, ptr %83, align 8, !tbaa !79
  %84 = load float, ptr %48, align 4, !tbaa !79
  %85 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 21, i64 2
  store float %84, ptr %85, align 4, !tbaa !79
  %86 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 6
  store float 0.000000e+00, ptr %86, align 8, !tbaa !266
  %87 = getelementptr inbounds %struct.ParticleSettings, ptr %17, i64 0, i32 5
  %88 = load i32, ptr %87, align 8, !tbaa !222
  %89 = and i32 %88, 8192
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %struct.ParticleSettings, ptr %17, i64 0, i32 11
  %92 = load i16, ptr %91, align 8, !tbaa !22
  br i1 %90, label %93, label %101

93:                                               ; preds = %4
  %94 = icmp eq i16 %92, 3
  br i1 %94, label %95, label %99

95:                                               ; preds = %93
  %96 = getelementptr inbounds %struct.ParticleData, ptr %19, i64 %20, i32 13
  %97 = load float, ptr %96, align 4, !tbaa !205
  %98 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 17
  store float %97, ptr %98, align 4, !tbaa !514
  br label %106

99:                                               ; preds = %93
  %100 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 17
  store float 0x3F50624DE0000000, ptr %100, align 4, !tbaa !514
  br label %121

101:                                              ; preds = %4
  %102 = getelementptr inbounds %struct.ParticleData, ptr %19, i64 %20, i32 13
  %103 = load float, ptr %102, align 4, !tbaa !205
  %104 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 17
  store float %103, ptr %104, align 4, !tbaa !514
  %105 = icmp eq i16 %92, 3
  br i1 %105, label %106, label %121

106:                                              ; preds = %95, %101
  %107 = phi ptr [ %98, %95 ], [ %104, %101 ]
  %108 = getelementptr inbounds %struct.ParticleSettings, ptr %17, i64 0, i32 2
  %109 = load ptr, ptr %108, align 8, !tbaa !156
  %110 = load i32, ptr %109, align 8, !tbaa !515
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %121, label %113

113:                                              ; preds = %106
  %114 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 24
  store i32 1, ptr %114, align 8, !tbaa !516
  %115 = load float, ptr %71, align 8, !tbaa !79
  %116 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 23
  store float %115, ptr %116, align 4, !tbaa !517
  %117 = getelementptr inbounds %struct.ParticleData, ptr %19, i64 %20, i32 4
  %118 = load ptr, ptr %117, align 8, !tbaa !117
  %119 = load ptr, ptr %118, align 8, !tbaa !518
  %120 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 3
  store ptr %119, ptr %120, align 8, !tbaa !519
  br label %121

121:                                              ; preds = %99, %113, %106, %101
  %122 = phi ptr [ %100, %99 ], [ %107, %113 ], [ %107, %106 ], [ %104, %101 ]
  %123 = getelementptr inbounds %struct.ParticleSimulationData, ptr %0, i64 0, i32 4
  %124 = getelementptr inbounds float, ptr %11, i64 2
  %125 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 11
  %126 = getelementptr inbounds %struct.BVHTreeRayHit, ptr %13, i64 0, i32 3
  %127 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 12
  %128 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 3
  %129 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 4
  %130 = getelementptr inbounds %struct.ParticleData, ptr %19, i64 %20, i32 6
  %131 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 5
  %132 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 7
  %133 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 8
  %134 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13
  %135 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 1
  %136 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 7
  %137 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 7, i64 1
  %138 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 7, i64 2
  %139 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 6
  %140 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 6, i64 1
  %141 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 6, i64 2
  %142 = getelementptr inbounds float, ptr %6, i64 2
  %143 = getelementptr inbounds float, ptr %7, i64 2
  %144 = getelementptr inbounds %struct.ParticleKey, ptr %21, i64 0, i32 3
  %145 = getelementptr inbounds %struct.ParticleKey, ptr %21, i64 0, i32 3, i64 1
  %146 = getelementptr inbounds %struct.ParticleData, ptr %19, i64 %20, i32 13
  %147 = getelementptr inbounds float, ptr %9, i64 2
  %148 = getelementptr inbounds float, ptr %10, i64 1
  %149 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 24
  %150 = getelementptr inbounds %struct.ParticleData, ptr %19, i64 %20, i32 4
  %151 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 2
  %152 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 23
  %153 = getelementptr inbounds float, ptr %5, i64 1
  %154 = getelementptr inbounds float, ptr %8, i64 1
  %155 = getelementptr inbounds float, ptr %8, i64 2
  %156 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 2
  %157 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 12
  %158 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 9
  %159 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 2
  %160 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 1
  %161 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 2, i64 1
  %162 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 2, i64 2
  %163 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 3
  %164 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 0, i64 1
  %165 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 1, i64 1
  %166 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 3, i64 1
  %167 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 3, i64 2
  %168 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 8
  %169 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 4
  %170 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 0, i64 2
  %171 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 1, i64 2
  %172 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 4, i64 1
  %173 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 4, i64 2
  %174 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 11
  %175 = getelementptr inbounds %struct.ParticleCollision, ptr %12, i64 0, i32 13, i32 8, i64 1
  br label %176

176:                                              ; preds = %121, %841
  %177 = phi i32 [ 0, %121 ], [ %247, %841 ]
  %178 = load ptr, ptr %123, align 8, !tbaa !369
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %11) #14
  %179 = load ptr, ptr %178, align 8, !tbaa !44
  %180 = icmp eq ptr %179, null
  br i1 %180, label %181, label %182

181:                                              ; preds = %176
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %11) #14
  br label %870

182:                                              ; preds = %176
  %183 = load <2 x float>, ptr %66, align 4, !tbaa !79
  %184 = load <2 x float>, ptr %58, align 8, !tbaa !79
  %185 = fsub fast <2 x float> %183, %184
  store <2 x float> %185, ptr %11, align 8, !tbaa !79
  %186 = load float, ptr %73, align 4, !tbaa !79
  %187 = load float, ptr %65, align 8, !tbaa !79
  %188 = fsub fast float %186, %187
  store float %188, ptr %124, align 8, !tbaa !79
  store i32 -1, ptr %13, align 4, !tbaa !279
  %189 = fmul fast <2 x float> %185, %185
  %190 = shufflevector <2 x float> %189, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %191 = fadd fast <2 x float> %190, %189
  %192 = extractelement <2 x float> %191, i64 0
  %193 = fmul fast float %188, %188
  %194 = fadd fast float %192, %193
  %195 = call fast float @llvm.sqrt.f32(float %194)
  store float %195, ptr %125, align 4, !tbaa !250
  store float %195, ptr %126, align 4, !tbaa !248
  store i16 0, ptr %127, align 2, !tbaa !273
  %196 = fcmp fast oeq float %195, 0.000000e+00
  br i1 %196, label %197, label %198

197:                                              ; preds = %182
  store float 0x3EB0C6F7A0000000, ptr %125, align 4, !tbaa !250
  store float 0x3EB0C6F7A0000000, ptr %126, align 4, !tbaa !248
  br label %198

198:                                              ; preds = %197, %182
  br label %199

199:                                              ; preds = %198, %240
  %200 = phi ptr [ %241, %240 ], [ %179, %198 ]
  %201 = getelementptr inbounds %struct.ColliderCache, ptr %200, i64 0, i32 2
  %202 = load ptr, ptr %201, align 8, !tbaa !520
  %203 = load ptr, ptr %128, align 8, !tbaa !519
  %204 = icmp eq ptr %202, %203
  br i1 %204, label %240, label %205

205:                                              ; preds = %199
  %206 = load ptr, ptr %129, align 8, !tbaa !522
  %207 = icmp eq ptr %202, %206
  %208 = load float, ptr %30, align 4, !tbaa !512
  br i1 %207, label %211, label %209

209:                                              ; preds = %205
  %210 = load float, ptr %34, align 8, !tbaa !513
  br label %217

211:                                              ; preds = %205
  %212 = load float, ptr %130, align 4, !tbaa !115
  %213 = fcmp fast uge float %212, %208
  %214 = load float, ptr %34, align 8, !tbaa !513
  %215 = fcmp fast ult float %212, %214
  %216 = select i1 %213, i1 true, i1 %215
  br i1 %216, label %217, label %240

217:                                              ; preds = %211, %209
  %218 = phi float [ %210, %209 ], [ %214, %211 ]
  store ptr %202, ptr %12, align 8, !tbaa !259
  %219 = getelementptr inbounds %struct.ColliderCache, ptr %200, i64 0, i32 3
  %220 = load ptr, ptr %219, align 8, !tbaa !523
  store ptr %220, ptr %131, align 8, !tbaa !241
  %221 = getelementptr inbounds %struct.CollisionModifierData, ptr %220, i64 0, i32 10
  %222 = load float, ptr %221, align 8, !tbaa !524
  %223 = getelementptr inbounds %struct.CollisionModifierData, ptr %220, i64 0, i32 11
  %224 = load float, ptr %223, align 4, !tbaa !525
  %225 = fsub fast float %224, %222
  %226 = insertelement <2 x float> poison, float %218, i64 0
  %227 = insertelement <2 x float> %226, float %208, i64 1
  %228 = insertelement <2 x float> poison, float %222, i64 0
  %229 = shufflevector <2 x float> %228, <2 x float> poison, <2 x i32> zeroinitializer
  %230 = fsub fast <2 x float> %227, %229
  %231 = insertelement <2 x float> poison, float %225, i64 0
  %232 = shufflevector <2 x float> %231, <2 x float> poison, <2 x i32> zeroinitializer
  %233 = fdiv fast <2 x float> %230, %232
  store <2 x float> %233, ptr %132, align 4, !tbaa !79
  %234 = getelementptr inbounds %struct.CollisionModifierData, ptr %220, i64 0, i32 12
  %235 = load ptr, ptr %234, align 8, !tbaa !526
  %236 = icmp eq ptr %235, null
  br i1 %236, label %240, label %237

237:                                              ; preds = %217
  %238 = load float, ptr %122, align 4, !tbaa !514
  %239 = call i32 @BLI_bvhtree_ray_cast(ptr noundef nonnull %235, ptr noundef nonnull %58, ptr noundef nonnull %11, float noundef nofpclass(nan inf) %238, ptr noundef nonnull %13, ptr noundef nonnull @BKE_psys_collision_neartest_cb, ptr noundef nonnull %12) #14
  br label %240

240:                                              ; preds = %237, %217, %211, %199
  %241 = load ptr, ptr %200, align 8, !tbaa !44
  %242 = icmp eq ptr %241, null
  br i1 %242, label %243, label %199, !llvm.loop !527

243:                                              ; preds = %240
  %244 = load i32, ptr %13, align 4, !tbaa !279
  %245 = icmp slt i32 %244, 0
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %11) #14
  br i1 %245, label %870, label %246

246:                                              ; preds = %243
  %247 = add nuw nsw i32 %177, 1
  %248 = icmp eq i32 %247, 10
  br i1 %248, label %249, label %481

249:                                              ; preds = %246
  %250 = load float, ptr %133, align 8, !tbaa !268
  %251 = load i32, ptr %158, align 8, !tbaa !256
  %252 = icmp sgt i32 %251, 0
  br i1 %252, label %253, label %473

253:                                              ; preds = %249
  %254 = load ptr, ptr %134, align 8, !tbaa !44
  %255 = load ptr, ptr %160, align 8, !tbaa !44
  %256 = load float, ptr %254, align 4, !tbaa !79
  %257 = load float, ptr %255, align 4, !tbaa !79
  %258 = fmul fast float %257, %250
  %259 = fadd fast float %258, %256
  store float %259, ptr %159, align 8, !tbaa !79
  %260 = getelementptr inbounds float, ptr %254, i64 1
  %261 = load float, ptr %260, align 4, !tbaa !79
  %262 = getelementptr inbounds float, ptr %255, i64 1
  %263 = load float, ptr %262, align 4, !tbaa !79
  %264 = fmul fast float %263, %250
  %265 = fadd fast float %264, %261
  store float %265, ptr %161, align 4, !tbaa !79
  %266 = getelementptr inbounds float, ptr %254, i64 2
  %267 = load float, ptr %266, align 4, !tbaa !79
  %268 = getelementptr inbounds float, ptr %255, i64 2
  %269 = load float, ptr %268, align 4, !tbaa !79
  %270 = fmul fast float %269, %250
  %271 = fadd fast float %270, %267
  store float %271, ptr %162, align 8, !tbaa !79
  %272 = icmp eq i32 %251, 1
  br i1 %272, label %313, label %273

273:                                              ; preds = %253
  %274 = load ptr, ptr %164, align 8, !tbaa !44
  %275 = load ptr, ptr %165, align 8, !tbaa !44
  %276 = load float, ptr %274, align 4, !tbaa !79
  %277 = load float, ptr %275, align 4, !tbaa !79
  %278 = fmul fast float %277, %250
  %279 = fadd fast float %278, %276
  store float %279, ptr %163, align 4, !tbaa !79
  %280 = getelementptr inbounds float, ptr %274, i64 1
  %281 = load float, ptr %280, align 4, !tbaa !79
  %282 = getelementptr inbounds float, ptr %275, i64 1
  %283 = load float, ptr %282, align 4, !tbaa !79
  %284 = fmul fast float %283, %250
  %285 = fadd fast float %284, %281
  store float %285, ptr %166, align 8, !tbaa !79
  %286 = getelementptr inbounds float, ptr %274, i64 2
  %287 = load float, ptr %286, align 4, !tbaa !79
  %288 = getelementptr inbounds float, ptr %275, i64 2
  %289 = load float, ptr %288, align 4, !tbaa !79
  %290 = fmul fast float %289, %250
  %291 = fadd fast float %290, %287
  store float %291, ptr %167, align 4, !tbaa !79
  %292 = icmp ugt i32 %251, 2
  br i1 %292, label %293, label %348

293:                                              ; preds = %273
  %294 = load ptr, ptr %170, align 8, !tbaa !44
  %295 = load ptr, ptr %171, align 8, !tbaa !44
  %296 = load float, ptr %294, align 4, !tbaa !79
  %297 = load float, ptr %295, align 4, !tbaa !79
  %298 = fmul fast float %297, %250
  %299 = fadd fast float %298, %296
  store float %299, ptr %169, align 8, !tbaa !79
  %300 = getelementptr inbounds float, ptr %294, i64 1
  %301 = load float, ptr %300, align 4, !tbaa !79
  %302 = getelementptr inbounds float, ptr %295, i64 1
  %303 = load float, ptr %302, align 4, !tbaa !79
  %304 = fmul fast float %303, %250
  %305 = fadd fast float %304, %301
  store float %305, ptr %172, align 4, !tbaa !79
  %306 = getelementptr inbounds float, ptr %294, i64 2
  %307 = load float, ptr %306, align 4, !tbaa !79
  %308 = getelementptr inbounds float, ptr %295, i64 2
  %309 = load float, ptr %308, align 4, !tbaa !79
  %310 = fmul fast float %309, %250
  %311 = fadd fast float %310, %307
  store float %311, ptr %173, align 8, !tbaa !79
  %312 = icmp eq i32 %251, 3
  br i1 %312, label %408, label %473

313:                                              ; preds = %253
  %314 = load float, ptr %58, align 8, !tbaa !79
  %315 = fsub fast float %314, %259
  store float %315, ptr %21, align 4, !tbaa !79
  %316 = load float, ptr %62, align 4, !tbaa !79
  %317 = load float, ptr %161, align 4, !tbaa !79
  %318 = fsub fast float %316, %317
  store float %318, ptr %68, align 4, !tbaa !79
  %319 = load float, ptr %65, align 8, !tbaa !79
  %320 = load float, ptr %162, align 8, !tbaa !79
  %321 = fsub fast float %319, %320
  %322 = fmul fast float %315, %315
  %323 = fmul fast float %318, %318
  %324 = fadd fast float %323, %322
  %325 = fmul fast float %321, %321
  %326 = fadd fast float %324, %325
  %327 = fcmp fast ogt float %326, 0x38AA95A5C0000000
  br i1 %327, label %328, label %334

328:                                              ; preds = %313
  %329 = call fast float @llvm.sqrt.f32(float %326)
  %330 = fdiv fast float 1.000000e+00, %329
  %331 = fmul fast float %330, %315
  %332 = fmul fast float %330, %318
  %333 = fmul fast float %330, %321
  br label %334

334:                                              ; preds = %328, %313
  %335 = phi float [ %331, %328 ], [ 0.000000e+00, %313 ]
  %336 = phi float [ %332, %328 ], [ 0.000000e+00, %313 ]
  %337 = phi float [ %333, %328 ], [ 0.000000e+00, %313 ]
  store float %335, ptr %21, align 4
  store float %336, ptr %68, align 4
  store float %337, ptr %71, align 4
  %338 = load float, ptr %122, align 4, !tbaa !514
  %339 = load float, ptr %159, align 8, !tbaa !79
  %340 = fmul fast float %338, %335
  %341 = fadd fast float %340, %339
  store float %341, ptr %21, align 4, !tbaa !79
  %342 = load float, ptr %161, align 4, !tbaa !79
  %343 = fmul fast float %338, %336
  %344 = fadd fast float %342, %343
  store float %344, ptr %68, align 4, !tbaa !79
  %345 = load float, ptr %162, align 8, !tbaa !79
  %346 = fmul fast float %338, %337
  %347 = fadd fast float %345, %346
  br label %471

348:                                              ; preds = %273
  %349 = fsub fast float %279, %259
  %350 = fsub fast float %285, %265
  %351 = fsub fast float %291, %271
  %352 = load float, ptr %58, align 8, !tbaa !79
  %353 = fsub fast float %352, %259
  %354 = load float, ptr %62, align 4, !tbaa !79
  %355 = fsub fast float %354, %265
  %356 = load float, ptr %65, align 8, !tbaa !79
  %357 = fsub fast float %356, %271
  %358 = fmul fast float %353, %349
  %359 = fmul fast float %355, %350
  %360 = fadd fast float %359, %358
  %361 = fmul fast float %357, %351
  %362 = fadd fast float %360, %361
  %363 = fmul fast float %349, %349
  %364 = fmul fast float %350, %350
  %365 = fadd fast float %364, %363
  %366 = fmul fast float %351, %351
  %367 = fadd fast float %365, %366
  %368 = fneg fast float %362
  %369 = fdiv fast float %368, %367
  %370 = fmul fast float %369, %349
  %371 = fadd fast float %370, %353
  %372 = fmul fast float %369, %350
  %373 = fadd fast float %372, %355
  %374 = fmul fast float %369, %351
  %375 = fadd fast float %374, %357
  %376 = fmul fast float %371, %371
  %377 = fmul fast float %373, %373
  %378 = fadd fast float %377, %376
  %379 = fmul fast float %375, %375
  %380 = fadd fast float %378, %379
  %381 = fcmp fast ogt float %380, 0x38AA95A5C0000000
  br i1 %381, label %382, label %388

382:                                              ; preds = %348
  %383 = call fast float @llvm.sqrt.f32(float %380)
  %384 = fdiv fast float 1.000000e+00, %383
  %385 = fmul fast float %384, %371
  %386 = fmul fast float %384, %373
  %387 = fmul fast float %384, %375
  br label %388

388:                                              ; preds = %382, %348
  %389 = phi float [ %385, %382 ], [ 0.000000e+00, %348 ]
  %390 = phi float [ %386, %382 ], [ 0.000000e+00, %348 ]
  %391 = phi float [ %387, %382 ], [ 0.000000e+00, %348 ]
  %392 = load float, ptr %168, align 8, !tbaa !79
  %393 = fmul fast float %392, %349
  %394 = fadd fast float %393, %259
  store float %394, ptr %21, align 4, !tbaa !79
  %395 = load float, ptr %161, align 4, !tbaa !79
  %396 = fmul fast float %392, %350
  %397 = fadd fast float %395, %396
  store float %397, ptr %68, align 4, !tbaa !79
  %398 = load float, ptr %162, align 8, !tbaa !79
  %399 = fmul fast float %392, %351
  %400 = fadd fast float %398, %399
  store float %400, ptr %71, align 4, !tbaa !79
  %401 = load float, ptr %122, align 4, !tbaa !514
  %402 = fmul fast float %401, %389
  %403 = fadd fast float %402, %394
  store float %403, ptr %21, align 4, !tbaa !79
  %404 = fmul fast float %401, %390
  %405 = fadd fast float %404, %397
  store float %405, ptr %68, align 4, !tbaa !79
  %406 = fmul fast float %401, %391
  %407 = fadd fast float %406, %400
  br label %471

408:                                              ; preds = %293
  %409 = fsub fast float %279, %259
  %410 = fsub fast float %285, %265
  %411 = fsub fast float %291, %271
  %412 = fsub fast float %299, %259
  %413 = fsub fast float %305, %265
  %414 = fsub fast float %311, %271
  %415 = fmul fast float %414, %410
  %416 = fmul fast float %413, %411
  %417 = fsub fast float %415, %416
  %418 = fmul fast float %412, %411
  %419 = fmul fast float %414, %409
  %420 = fsub fast float %418, %419
  %421 = fmul fast float %413, %409
  %422 = fmul fast float %412, %410
  %423 = fsub fast float %421, %422
  %424 = fmul fast float %417, %417
  %425 = fmul fast float %420, %420
  %426 = fmul fast float %423, %423
  %427 = fadd fast float %424, %426
  %428 = fadd fast float %427, %425
  %429 = fcmp fast ogt float %428, 0x38AA95A5C0000000
  br i1 %429, label %430, label %436

430:                                              ; preds = %408
  %431 = call fast float @llvm.sqrt.f32(float %428)
  %432 = fdiv fast float 1.000000e+00, %431
  %433 = fmul fast float %432, %417
  %434 = fmul fast float %432, %420
  %435 = fmul fast float %432, %423
  br label %436

436:                                              ; preds = %430, %408
  %437 = phi float [ %433, %430 ], [ 0.000000e+00, %408 ]
  %438 = phi float [ %434, %430 ], [ 0.000000e+00, %408 ]
  %439 = phi float [ %435, %430 ], [ 0.000000e+00, %408 ]
  %440 = load i16, ptr %174, align 8, !tbaa !269
  %441 = icmp eq i16 %440, 1
  %442 = fneg fast float %437
  %443 = fneg fast float %438
  %444 = fneg fast float %439
  %445 = select i1 %441, float %444, float %439
  %446 = select i1 %441, float %443, float %438
  %447 = select i1 %441, float %442, float %437
  %448 = load float, ptr %122, align 4, !tbaa !514
  %449 = fmul fast float %447, %448
  %450 = fadd fast float %449, %259
  store float %450, ptr %21, align 4, !tbaa !79
  %451 = load float, ptr %161, align 4, !tbaa !79
  %452 = fmul fast float %446, %448
  %453 = fadd fast float %452, %451
  store float %453, ptr %68, align 4, !tbaa !79
  %454 = load float, ptr %162, align 8, !tbaa !79
  %455 = fmul fast float %445, %448
  %456 = fadd fast float %454, %455
  store float %456, ptr %71, align 4, !tbaa !79
  %457 = load float, ptr %168, align 8, !tbaa !79
  %458 = fmul fast float %457, %409
  %459 = fadd fast float %458, %450
  store float %459, ptr %21, align 4, !tbaa !79
  %460 = fmul fast float %457, %410
  %461 = fadd fast float %460, %453
  store float %461, ptr %68, align 4, !tbaa !79
  %462 = fmul fast float %457, %411
  %463 = fadd fast float %462, %456
  store float %463, ptr %71, align 4, !tbaa !79
  %464 = load float, ptr %175, align 4, !tbaa !79
  %465 = fmul fast float %464, %412
  %466 = fadd fast float %465, %459
  store float %466, ptr %21, align 4, !tbaa !79
  %467 = fmul fast float %464, %413
  %468 = fadd fast float %467, %461
  store float %468, ptr %68, align 4, !tbaa !79
  %469 = fmul fast float %464, %414
  %470 = fadd fast float %469, %463
  br label %471

471:                                              ; preds = %334, %388, %436
  %472 = phi float [ %470, %436 ], [ %407, %388 ], [ %347, %334 ]
  store float %472, ptr %71, align 4, !tbaa !79
  br label %473

473:                                              ; preds = %471, %293, %249
  %474 = load float, ptr %136, align 4, !tbaa !79
  store float %474, ptr %36, align 4, !tbaa !79
  %475 = load float, ptr %137, align 8, !tbaa !79
  store float %475, ptr %42, align 4, !tbaa !79
  %476 = load float, ptr %138, align 4, !tbaa !79
  store float %476, ptr %48, align 4, !tbaa !79
  %477 = load float, ptr %26, align 8, !tbaa !528
  %478 = fmul fast float %477, %474
  store float %478, ptr %36, align 4, !tbaa !79
  %479 = fmul fast float %477, %475
  store float %479, ptr %42, align 4, !tbaa !79
  %480 = fmul fast float %477, %476
  store float %480, ptr %48, align 4, !tbaa !79
  br label %870

481:                                              ; preds = %246
  %482 = load i32, ptr %87, align 8, !tbaa !222
  %483 = and i32 %482, 16384
  %484 = load ptr, ptr %135, align 8, !tbaa !258
  %485 = getelementptr inbounds %struct.Object, ptr %484, i64 0, i32 110
  %486 = load ptr, ptr %485, align 8, !tbaa !529
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #14
  %487 = load float, ptr %126, align 4, !tbaa !248
  %488 = load float, ptr %125, align 4, !tbaa !250
  %489 = fdiv fast float %487, %488
  %490 = load float, ptr %86, align 8, !tbaa !266
  %491 = fsub fast float 1.000000e+00, %490
  %492 = fmul fast float %491, %489
  %493 = fadd fast float %492, %490
  %494 = load float, ptr %24, align 8, !tbaa !511
  %495 = fmul fast float %492, %494
  %496 = fsub fast float 1.000000e+00, %493
  %497 = fmul fast float %496, %494
  %498 = call fast nofpclass(nan inf) float @BLI_frand() #14
  %499 = getelementptr inbounds %struct.PartDeflect, ptr %486, i64 0, i32 21
  %500 = load float, ptr %499, align 4, !tbaa !530
  %501 = fcmp fast uge float %498, %500
  call void @interp_v3_v3v3(ptr noundef nonnull %5, ptr noundef nonnull %58, ptr noundef nonnull %66, float noundef nofpclass(nan inf) %489) #14
  br i1 %501, label %502, label %523

502:                                              ; preds = %481
  %503 = and i32 %482, 4096
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %505, label %509

505:                                              ; preds = %502
  %506 = load i32, ptr %486, align 8, !tbaa !532
  %507 = and i32 %506, 16
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %523, label %509

509:                                              ; preds = %502, %505
  %510 = getelementptr inbounds %struct.ParticleData, ptr %19, i64 %20, i32 18
  store i16 4, ptr %510, align 2, !tbaa !173
  %511 = load float, ptr %34, align 8, !tbaa !513
  %512 = load float, ptr %30, align 4, !tbaa !512
  %513 = fsub fast float %512, %511
  %514 = fmul fast float %513, %493
  %515 = fadd fast float %514, %511
  %516 = getelementptr inbounds %struct.ParticleData, ptr %19, i64 %20, i32 8
  store float %515, ptr %516, align 4, !tbaa !170
  %517 = load float, ptr %5, align 4, !tbaa !79
  store float %517, ptr %21, align 4, !tbaa !79
  %518 = load float, ptr %153, align 4, !tbaa !79
  store float %518, ptr %68, align 4, !tbaa !79
  %519 = load float, ptr %151, align 4, !tbaa !79
  store float %519, ptr %71, align 4, !tbaa !79
  call void @interp_v3_v3v3(ptr noundef nonnull %36, ptr noundef nonnull %38, ptr noundef nonnull %36, float noundef nofpclass(nan inf) %493) #14
  %520 = getelementptr inbounds %struct.ParticleKey, ptr %21, i64 0, i32 2
  %521 = getelementptr inbounds %struct.ParticleData, ptr %19, i64 %20, i32 1, i32 2
  call void @interp_qt_qtqt(ptr noundef nonnull %520, ptr noundef nonnull %521, ptr noundef nonnull %520, float noundef nofpclass(nan inf) %493) #14
  %522 = getelementptr inbounds %struct.ParticleData, ptr %19, i64 %20, i32 1, i32 3
  call void @interp_v3_v3v3(ptr noundef nonnull %144, ptr noundef nonnull %522, ptr noundef nonnull %144, float noundef nofpclass(nan inf) %493) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #14
  br label %870

523:                                              ; preds = %505, %481
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #14
  %524 = getelementptr inbounds %struct.PartDeflect, ptr %486, i64 0, i32 19
  %525 = load float, ptr %524, align 4, !tbaa !533
  %526 = getelementptr inbounds %struct.PartDeflect, ptr %486, i64 0, i32 20
  %527 = load float, ptr %526, align 8, !tbaa !534
  %528 = fmul fast float %527, 2.000000e+00
  %529 = call fast nofpclass(nan inf) float @BLI_frand() #14
  %530 = fadd fast float %529, -5.000000e-01
  %531 = fmul fast float %528, %530
  %532 = fadd fast float %531, %525
  %533 = getelementptr inbounds %struct.PartDeflect, ptr %486, i64 0, i32 22
  %534 = load float, ptr %533, align 8, !tbaa !535
  %535 = getelementptr inbounds %struct.PartDeflect, ptr %486, i64 0, i32 23
  %536 = load float, ptr %535, align 4, !tbaa !536
  %537 = fmul fast float %536, 2.000000e+00
  %538 = call fast nofpclass(nan inf) float @BLI_frand() #14
  %539 = fadd fast float %538, -5.000000e-01
  %540 = fmul fast float %537, %539
  %541 = fadd fast float %540, %534
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %8) #14
  %542 = fcmp fast olt float %532, 0.000000e+00
  br i1 %542, label %546, label %543

543:                                              ; preds = %523
  %544 = fcmp fast ogt float %532, 1.000000e+00
  br i1 %544, label %545, label %546

545:                                              ; preds = %543
  br label %546

546:                                              ; preds = %545, %543, %523
  %547 = phi float [ 1.000000e+00, %545 ], [ %532, %543 ], [ 0.000000e+00, %523 ]
  %548 = fcmp fast olt float %541, 0.000000e+00
  br i1 %548, label %552, label %549

549:                                              ; preds = %546
  %550 = fcmp fast ogt float %541, 1.000000e+00
  br i1 %550, label %551, label %552

551:                                              ; preds = %549
  br label %552

552:                                              ; preds = %551, %549, %546
  %553 = phi float [ 1.000000e+00, %551 ], [ %541, %549 ], [ 0.000000e+00, %546 ]
  %554 = load float, ptr %79, align 8, !tbaa !79
  %555 = load float, ptr %53, align 8, !tbaa !79
  %556 = fmul fast float %555, %495
  %557 = fadd fast float %556, %554
  %558 = load float, ptr %26, align 8, !tbaa !528
  %559 = load float, ptr %138, align 4, !tbaa !79
  %560 = fmul fast float %559, %558
  store float %560, ptr %138, align 4, !tbaa !79
  %561 = load float, ptr %141, align 8, !tbaa !79
  %562 = fmul fast float %561, %557
  %563 = fmul fast float %561, %560
  %564 = load <2 x float>, ptr %74, align 8, !tbaa !79
  %565 = load <2 x float>, ptr %35, align 8, !tbaa !79
  %566 = insertelement <2 x float> poison, float %495, i64 0
  %567 = shufflevector <2 x float> %566, <2 x float> poison, <2 x i32> zeroinitializer
  %568 = fmul fast <2 x float> %565, %567
  %569 = fadd fast <2 x float> %568, %564
  %570 = load <2 x float>, ptr %136, align 4, !tbaa !79
  %571 = insertelement <2 x float> poison, float %558, i64 0
  %572 = shufflevector <2 x float> %571, <2 x float> poison, <2 x i32> zeroinitializer
  %573 = fmul fast <2 x float> %570, %572
  store <2 x float> %573, ptr %136, align 4, !tbaa !79
  %574 = load <2 x float>, ptr %139, align 8, !tbaa !79
  %575 = fmul fast <2 x float> %574, %569
  %576 = shufflevector <2 x float> %575, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %577 = fadd fast <2 x float> %576, %575
  %578 = extractelement <2 x float> %577, i64 0
  %579 = fadd fast float %578, %562
  %580 = insertelement <2 x float> poison, float %579, i64 0
  %581 = shufflevector <2 x float> %580, <2 x float> poison, <2 x i32> zeroinitializer
  %582 = fmul fast <2 x float> %581, %574
  %583 = fsub fast <2 x float> %569, %582
  store <2 x float> %583, ptr %6, align 8, !tbaa !79
  %584 = fmul fast float %579, %561
  %585 = fsub fast float %557, %584
  store float %585, ptr %142, align 8, !tbaa !79
  %586 = fmul fast <2 x float> %574, %573
  %587 = shufflevector <2 x float> %586, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %588 = fadd fast <2 x float> %587, %586
  %589 = extractelement <2 x float> %588, i64 0
  %590 = fadd fast float %589, %563
  %591 = insertelement <2 x float> poison, float %590, i64 0
  %592 = shufflevector <2 x float> %591, <2 x float> poison, <2 x i32> zeroinitializer
  %593 = fmul fast <2 x float> %592, %574
  %594 = fsub fast <2 x float> %573, %593
  store <2 x float> %594, ptr %7, align 8, !tbaa !79
  %595 = fmul fast float %590, %561
  %596 = fsub fast float %560, %595
  store float %596, ptr %143, align 8, !tbaa !79
  %597 = fcmp fast ogt float %553, 0.000000e+00
  br i1 %597, label %598, label %652

598:                                              ; preds = %552
  %599 = icmp eq i32 %483, 0
  br i1 %599, label %651, label %600

600:                                              ; preds = %598
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %9) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %10) #14
  %601 = load float, ptr %144, align 4, !tbaa !79
  %602 = extractelement <2 x float> %574, i64 1
  %603 = fmul fast float %601, %602
  %604 = load float, ptr %146, align 4, !tbaa !205
  %605 = fmul fast float %604, 0x3FD99999A0000000
  %606 = fmul fast float %553, 0x3F7D41D420000000
  %607 = fsub fast float 0x3FE6DB6DC0000000, %606
  %608 = load <2 x float>, ptr %145, align 4, !tbaa !79
  %609 = insertelement <2 x float> %608, float %601, i64 0
  %610 = insertelement <2 x float> poison, float %561, i64 0
  %611 = insertelement <2 x float> %574, float %561, i64 0
  %612 = fmul fast <2 x float> %609, %611
  %613 = shufflevector <2 x float> %612, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %614 = shufflevector <2 x float> %610, <2 x float> %574, <2 x i32> <i32 0, i32 2>
  %615 = fmul fast <2 x float> %608, %614
  %616 = fsub fast <2 x float> %613, %615
  %617 = fmul fast <2 x float> %608, %574
  %618 = extractelement <2 x float> %617, i64 0
  %619 = fsub fast float %618, %603
  %620 = insertelement <2 x float> poison, float %605, i64 0
  %621 = shufflevector <2 x float> %620, <2 x float> poison, <2 x i32> zeroinitializer
  %622 = fmul fast <2 x float> %621, %616
  %623 = fadd fast <2 x float> %594, %622
  %624 = fsub fast <2 x float> %583, %623
  %625 = fmul fast float %605, %619
  %626 = fadd fast float %596, %625
  %627 = fsub fast float %585, %626
  %628 = insertelement <2 x float> poison, float %607, i64 0
  %629 = shufflevector <2 x float> %628, <2 x float> poison, <2 x i32> zeroinitializer
  %630 = fmul fast <2 x float> %629, %624
  %631 = fmul fast float %607, %627
  %632 = fadd fast <2 x float> %630, %594
  store <2 x float> %632, ptr %9, align 8, !tbaa !79
  %633 = fadd fast float %631, %596
  store float %633, ptr %147, align 8, !tbaa !79
  %634 = fmul fast float %631, %602
  %635 = extractelement <2 x float> %630, i64 1
  %636 = fmul fast float %635, %561
  %637 = fsub fast float %634, %636
  %638 = call fast float @llvm.maxnum.f32(float %604, float 0x3F50624DE0000000)
  %639 = fdiv fast float 1.000000e+00, %638
  %640 = fmul fast float %637, %639
  store float %640, ptr %10, align 4, !tbaa !79
  %641 = shufflevector <2 x float> %574, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %642 = insertelement <2 x float> %641, float %561, i64 0
  %643 = fmul fast <2 x float> %630, %642
  %644 = shufflevector <2 x float> %630, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %645 = insertelement <2 x float> %644, float %631, i64 0
  %646 = fmul fast <2 x float> %645, %574
  %647 = fsub fast <2 x float> %643, %646
  %648 = insertelement <2 x float> poison, float %639, i64 0
  %649 = shufflevector <2 x float> %648, <2 x float> poison, <2 x i32> zeroinitializer
  %650 = fmul fast <2 x float> %647, %649
  store <2 x float> %650, ptr %148, align 4, !tbaa !79
  call void @interp_v3_v3v3(ptr noundef nonnull %144, ptr noundef nonnull %144, ptr noundef nonnull %10, float noundef nofpclass(nan inf) %553) #14
  call void @interp_v3_v3v3(ptr noundef nonnull %6, ptr noundef nonnull %6, ptr noundef nonnull %9, float noundef nofpclass(nan inf) %553) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %10) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %9) #14
  br label %652

651:                                              ; preds = %598
  call void @interp_v3_v3v3(ptr noundef nonnull %6, ptr noundef nonnull %6, ptr noundef nonnull %7, float noundef nofpclass(nan inf) %553) #14
  br label %652

652:                                              ; preds = %651, %600, %552
  %653 = fcmp fast olt float %579, 0.000000e+00
  br i1 %653, label %654, label %660

654:                                              ; preds = %652
  %655 = getelementptr inbounds %struct.PartDeflect, ptr %486, i64 0, i32 24
  %656 = load float, ptr %655, align 8, !tbaa !537
  %657 = fadd fast float %656, %579
  %658 = fcmp fast ogt float %657, 0.000000e+00
  br i1 %658, label %659, label %660

659:                                              ; preds = %654
  br label %660

660:                                              ; preds = %659, %654, %652
  %661 = phi float [ 0.000000e+00, %659 ], [ %657, %654 ], [ %579, %652 ]
  %662 = fsub fast float 1.000000e+00, %547
  %663 = fmul fast float %661, %662
  %664 = select fast i1 %501, float 1.000000e+00, float %547
  %665 = fmul fast float %590, %664
  br i1 %501, label %666, label %685

666:                                              ; preds = %660
  %667 = fcmp fast ogt float %665, 0.000000e+00
  %668 = fcmp fast ogt float %663, 0.000000e+00
  %669 = select i1 %667, i1 %668, i1 false
  %670 = fcmp fast ogt float %665, %663
  %671 = select i1 %669, i1 %670, i1 false
  br i1 %671, label %678, label %672

672:                                              ; preds = %666
  %673 = fcmp fast olt float %665, 0.000000e+00
  %674 = fcmp fast olt float %663, 0.000000e+00
  %675 = select i1 %673, i1 %674, i1 false
  %676 = fcmp fast olt float %665, %663
  %677 = select i1 %675, i1 %676, i1 false
  br i1 %677, label %678, label %685

678:                                              ; preds = %672, %666
  %679 = load <2 x float>, ptr %139, align 8, !tbaa !79
  %680 = insertelement <2 x float> poison, float %665, i64 0
  %681 = shufflevector <2 x float> %680, <2 x float> poison, <2 x i32> zeroinitializer
  %682 = fmul fast <2 x float> %679, %681
  %683 = load float, ptr %141, align 8, !tbaa !79
  %684 = fmul fast float %683, %665
  br label %704

685:                                              ; preds = %672, %660
  %686 = fcmp fast ogt float %663, 0.000000e+00
  %687 = fneg fast float %663
  %688 = load <2 x float>, ptr %139, align 8, !tbaa !79
  %689 = load float, ptr %141, align 8, !tbaa !79
  br i1 %686, label %690, label %697

690:                                              ; preds = %685
  %691 = select fast i1 %501, float %663, float %687
  %692 = fadd fast float %691, %665
  %693 = insertelement <2 x float> poison, float %692, i64 0
  %694 = shufflevector <2 x float> %693, <2 x float> poison, <2 x i32> zeroinitializer
  %695 = fmul fast <2 x float> %688, %694
  %696 = fmul fast float %689, %692
  br label %704

697:                                              ; preds = %685
  %698 = select fast i1 %501, float %687, float %663
  %699 = fadd fast float %698, %665
  %700 = insertelement <2 x float> poison, float %699, i64 0
  %701 = shufflevector <2 x float> %700, <2 x float> poison, <2 x i32> zeroinitializer
  %702 = fmul fast <2 x float> %688, %701
  %703 = fmul fast float %689, %699
  br label %704

704:                                              ; preds = %697, %690, %678
  %705 = phi float [ %684, %678 ], [ %696, %690 ], [ %703, %697 ]
  %706 = phi <2 x float> [ %682, %678 ], [ %695, %690 ], [ %702, %697 ]
  %707 = load <2 x float>, ptr %6, align 8, !tbaa !79
  %708 = fadd fast <2 x float> %707, %706
  %709 = load float, ptr %142, align 8, !tbaa !79
  %710 = fadd fast float %709, %705
  %711 = load i32, ptr %149, align 8, !tbaa !516
  %712 = icmp eq i32 %711, 0
  br i1 %712, label %713, label %715

713:                                              ; preds = %704
  %714 = load float, ptr %151, align 4, !tbaa !79
  br label %728

715:                                              ; preds = %704
  %716 = load ptr, ptr %150, align 8, !tbaa !117
  %717 = getelementptr inbounds %struct.BoidParticle, ptr %716, i64 0, i32 1, i32 3
  %718 = load i16, ptr %717, align 2, !tbaa !162
  %719 = icmp eq i16 %718, 1
  br i1 %719, label %720, label %722

720:                                              ; preds = %715
  %721 = load float, ptr %152, align 4, !tbaa !517
  br label %726

722:                                              ; preds = %715
  %723 = load float, ptr %151, align 4, !tbaa !79
  %724 = load float, ptr %152, align 4, !tbaa !517
  %725 = fcmp fast ugt float %723, %724
  br i1 %725, label %728, label %726

726:                                              ; preds = %722, %720
  %727 = phi float [ %721, %720 ], [ %724, %722 ]
  store float %727, ptr %151, align 4, !tbaa !79
  br label %728

728:                                              ; preds = %726, %722, %713
  %729 = phi float [ %714, %713 ], [ %727, %726 ], [ %723, %722 ]
  %730 = phi float [ %710, %713 ], [ 0.000000e+00, %726 ], [ %710, %722 ]
  %731 = load float, ptr %5, align 4, !tbaa !79
  %732 = extractelement <2 x float> %708, i64 0
  %733 = fmul fast float %732, %497
  %734 = fadd fast float %731, %733
  store float %734, ptr %21, align 4, !tbaa !79
  %735 = load float, ptr %153, align 4, !tbaa !79
  %736 = extractelement <2 x float> %708, i64 1
  %737 = fmul fast float %736, %497
  %738 = fadd fast float %735, %737
  store float %738, ptr %68, align 4, !tbaa !79
  %739 = fmul fast float %730, %497
  %740 = fadd fast float %739, %729
  store float %740, ptr %71, align 4, !tbaa !79
  %741 = fmul fast float %497, %497
  %742 = fmul fast float %741, 5.000000e-01
  %743 = load float, ptr %35, align 8, !tbaa !79
  %744 = fmul fast float %743, %742
  %745 = fadd fast float %744, %734
  store float %745, ptr %21, align 4, !tbaa !79
  %746 = load float, ptr %47, align 4, !tbaa !79
  %747 = fmul fast float %746, %742
  %748 = fadd fast float %747, %738
  store float %748, ptr %68, align 4, !tbaa !79
  %749 = load float, ptr %53, align 8, !tbaa !79
  %750 = fmul fast float %749, %742
  %751 = fadd fast float %750, %740
  store float %751, ptr %71, align 4, !tbaa !79
  %752 = load float, ptr %35, align 8, !tbaa !79
  %753 = fmul fast float %752, %497
  %754 = fadd fast float %753, %732
  store float %754, ptr %36, align 4, !tbaa !79
  %755 = load float, ptr %47, align 4, !tbaa !79
  %756 = fmul fast float %755, %497
  %757 = fadd fast float %756, %736
  store float %757, ptr %42, align 4, !tbaa !79
  %758 = load float, ptr %53, align 8, !tbaa !79
  %759 = fmul fast float %758, %497
  %760 = fadd fast float %759, %730
  store float %760, ptr %48, align 4, !tbaa !79
  br i1 %501, label %761, label %841

761:                                              ; preds = %728
  %762 = call fast fastcc nofpclass(nan inf) float @collision_point_distance_with_normal(ptr noundef nonnull %5, ptr noundef nonnull %134, float noundef nofpclass(nan inf) -1.000000e+00, ptr noundef nonnull %12, ptr noundef nonnull %8)
  %763 = load float, ptr %122, align 4, !tbaa !514
  %764 = fadd fast float %763, 0x3F1A36E2E0000000
  %765 = fcmp fast olt float %762, %764
  %766 = load float, ptr %8, align 8, !tbaa !79
  br i1 %765, label %770, label %767

767:                                              ; preds = %761
  %768 = load float, ptr %154, align 4, !tbaa !79
  %769 = load float, ptr %155, align 8, !tbaa !79
  br label %780

770:                                              ; preds = %761
  %771 = fsub fast float %764, %762
  %772 = fmul fast float %771, %766
  %773 = fadd fast float %772, %731
  store float %773, ptr %5, align 4, !tbaa !79
  %774 = load float, ptr %154, align 4, !tbaa !79
  %775 = fmul fast float %774, %771
  %776 = fadd fast float %775, %735
  store float %776, ptr %153, align 4, !tbaa !79
  %777 = load float, ptr %155, align 8, !tbaa !79
  %778 = fmul fast float %777, %771
  %779 = fadd fast float %778, %729
  store float %779, ptr %151, align 4, !tbaa !79
  br label %780

780:                                              ; preds = %770, %767
  %781 = phi float [ %729, %767 ], [ %779, %770 ]
  %782 = phi float [ %735, %767 ], [ %776, %770 ]
  %783 = phi float [ %731, %767 ], [ %773, %770 ]
  %784 = phi float [ %769, %767 ], [ %777, %770 ]
  %785 = phi float [ %768, %767 ], [ %774, %770 ]
  %786 = fmul fast float %766, %732
  %787 = fmul fast float %785, %736
  %788 = fmul fast float %784, %730
  %789 = fadd fast float %788, %786
  %790 = fadd fast float %789, %787
  %791 = fcmp fast olt float %790, 0.000000e+00
  br i1 %791, label %792, label %801

792:                                              ; preds = %780
  %793 = insertelement <2 x float> poison, float %790, i64 0
  %794 = shufflevector <2 x float> %793, <2 x float> poison, <2 x i32> zeroinitializer
  %795 = insertelement <2 x float> poison, float %766, i64 0
  %796 = insertelement <2 x float> %795, float %785, i64 1
  %797 = fmul fast <2 x float> %794, %796
  %798 = fsub fast <2 x float> %708, %797
  %799 = fmul fast float %790, %784
  %800 = fsub fast float %730, %799
  br label %801

801:                                              ; preds = %792, %780
  %802 = phi float [ %800, %792 ], [ %730, %780 ]
  %803 = phi <2 x float> [ %798, %792 ], [ %708, %780 ]
  %804 = call fast fastcc nofpclass(nan inf) float @collision_point_distance_with_normal(ptr noundef nonnull %21, ptr noundef nonnull %134, float noundef nofpclass(nan inf) 1.000000e+00, ptr noundef nonnull %12, ptr noundef nonnull %8)
  %805 = load float, ptr %122, align 4, !tbaa !514
  %806 = fadd fast float %805, 0x3F1A36E2E0000000
  %807 = fcmp fast olt float %804, %806
  %808 = load <2 x float>, ptr %8, align 8, !tbaa !79
  %809 = load float, ptr %155, align 8, !tbaa !79
  br i1 %807, label %810, label %820

810:                                              ; preds = %801
  %811 = fsub fast float %806, %804
  %812 = insertelement <2 x float> poison, float %811, i64 0
  %813 = shufflevector <2 x float> %812, <2 x float> poison, <2 x i32> zeroinitializer
  %814 = fmul fast <2 x float> %813, %808
  %815 = load <2 x float>, ptr %21, align 4, !tbaa !79
  %816 = fadd fast <2 x float> %815, %814
  store <2 x float> %816, ptr %21, align 4, !tbaa !79
  %817 = fmul fast float %809, %811
  %818 = load float, ptr %71, align 4, !tbaa !79
  %819 = fadd fast float %818, %817
  store float %819, ptr %71, align 4, !tbaa !79
  br label %820

820:                                              ; preds = %810, %801
  %821 = load <2 x float>, ptr %36, align 4, !tbaa !79
  %822 = fmul fast <2 x float> %821, %808
  %823 = shufflevector <2 x float> %822, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %824 = fadd fast <2 x float> %823, %822
  %825 = extractelement <2 x float> %824, i64 0
  %826 = load float, ptr %48, align 4, !tbaa !79
  %827 = fmul fast float %826, %809
  %828 = fadd fast float %825, %827
  %829 = fcmp fast olt float %828, 0.000000e+00
  %830 = extractelement <2 x float> %821, i64 0
  %831 = extractelement <2 x float> %821, i64 1
  br i1 %829, label %832, label %841

832:                                              ; preds = %820
  %833 = insertelement <2 x float> poison, float %828, i64 0
  %834 = shufflevector <2 x float> %833, <2 x float> poison, <2 x i32> zeroinitializer
  %835 = fmul fast <2 x float> %834, %808
  %836 = fsub fast <2 x float> %821, %835
  store <2 x float> %836, ptr %36, align 4, !tbaa !79
  %837 = fmul fast float %828, %809
  %838 = fsub fast float %826, %837
  store float %838, ptr %48, align 4, !tbaa !79
  %839 = extractelement <2 x float> %836, i64 0
  %840 = extractelement <2 x float> %836, i64 1
  br label %841

841:                                              ; preds = %832, %820, %728
  %842 = phi float [ %781, %832 ], [ %781, %820 ], [ %729, %728 ]
  %843 = phi float [ %782, %832 ], [ %782, %820 ], [ %735, %728 ]
  %844 = phi float [ %783, %832 ], [ %783, %820 ], [ %731, %728 ]
  %845 = phi float [ %838, %832 ], [ %826, %820 ], [ %760, %728 ]
  %846 = phi float [ %840, %832 ], [ %831, %820 ], [ %757, %728 ]
  %847 = phi float [ %839, %832 ], [ %830, %820 ], [ %754, %728 ]
  %848 = phi float [ %802, %832 ], [ %802, %820 ], [ %730, %728 ]
  %849 = phi <2 x float> [ %803, %832 ], [ %803, %820 ], [ %708, %728 ]
  %850 = getelementptr inbounds %struct.PartDeflect, ptr %486, i64 0, i32 24
  %851 = load float, ptr %850, align 8, !tbaa !537
  %852 = load float, ptr %139, align 8, !tbaa !79
  %853 = fmul fast float %852, %851
  %854 = fsub fast float %847, %853
  store float %854, ptr %36, align 4, !tbaa !79
  %855 = load float, ptr %140, align 4, !tbaa !79
  %856 = fmul fast float %855, %851
  %857 = fsub fast float %846, %856
  store float %857, ptr %42, align 4, !tbaa !79
  %858 = load float, ptr %141, align 8, !tbaa !79
  %859 = fmul fast float %858, %851
  %860 = fsub fast float %845, %859
  store float %860, ptr %48, align 4, !tbaa !79
  store float %844, ptr %58, align 8, !tbaa !79
  store float %843, ptr %62, align 4, !tbaa !79
  store float %842, ptr %65, align 8, !tbaa !79
  %861 = load float, ptr %21, align 4, !tbaa !79
  store float %861, ptr %66, align 4, !tbaa !79
  %862 = load float, ptr %68, align 4, !tbaa !79
  store float %862, ptr %70, align 8, !tbaa !79
  %863 = load float, ptr %71, align 4, !tbaa !79
  store float %863, ptr %73, align 4, !tbaa !79
  store <2 x float> %849, ptr %74, align 8, !tbaa !79
  store float %848, ptr %79, align 8, !tbaa !79
  %864 = load float, ptr %36, align 4, !tbaa !79
  store float %864, ptr %80, align 4, !tbaa !79
  %865 = load float, ptr %42, align 4, !tbaa !79
  store float %865, ptr %83, align 8, !tbaa !79
  %866 = load float, ptr %48, align 4, !tbaa !79
  store float %866, ptr %85, align 4, !tbaa !79
  store float %493, ptr %86, align 8, !tbaa !266
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %8) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #14
  %867 = load ptr, ptr %135, align 8, !tbaa !258
  store ptr %867, ptr %156, align 8, !tbaa !538
  %868 = load i32, ptr %13, align 4, !tbaa !279
  store i32 %868, ptr %157, align 8, !tbaa !539
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #14
  %869 = icmp eq i32 %247, 10
  br i1 %869, label %870, label %176, !llvm.loop !540

870:                                              ; preds = %841, %243, %473, %509, %181
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %13) #14
  call void @llvm.lifetime.end.p0(i64 328, ptr nonnull %12) #14
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @basic_rotate(ptr nocapture noundef readonly %0, ptr noundef %1, float noundef nofpclass(nan inf) %2, float noundef nofpclass(nan inf) %3) unnamed_addr #2 {
  %5 = alloca [4 x float], align 16
  %6 = alloca [4 x float], align 16
  %7 = alloca [3 x float], align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #14
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %6, ptr noundef nonnull align 16 dereferenceable(16) @__const.basic_rotate.rot2, i64 16, i1 false)
  %8 = fmul fast float %3, %2
  %9 = getelementptr inbounds %struct.ParticleSettings, ptr %0, i64 0, i32 5
  %10 = load i32, ptr %9, align 8, !tbaa !222
  %11 = and i32 %10, 512
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 2
  tail call void @unit_qt(ptr noundef nonnull %14) #14
  br label %164

15:                                               ; preds = %4
  %16 = and i32 %10, 16384
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %137, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 3
  %20 = load float, ptr %19, align 4, !tbaa !79
  %21 = fmul fast float %20, %20
  %22 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 3, i64 1
  %23 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 3, i64 2
  %24 = load <2 x float>, ptr %22, align 4, !tbaa !79
  %25 = fmul fast <2 x float> %24, %24
  %26 = extractelement <2 x float> %25, i64 0
  %27 = fadd fast float %26, %21
  %28 = extractelement <2 x float> %25, i64 1
  %29 = fadd fast float %27, %28
  %30 = tail call fast float @llvm.sqrt.f32(float %29)
  %31 = getelementptr inbounds %struct.ParticleSettings, ptr %0, i64 0, i32 13
  %32 = load i16, ptr %31, align 4, !tbaa !125
  switch i16 %32, label %137 [
    i16 1, label %33
    i16 3, label %33
    i16 4, label %33
  ]

33:                                               ; preds = %18, %18, %18
  %34 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 1, i32 1
  %35 = load <2 x float>, ptr %34, align 4, !tbaa !79
  %36 = fmul fast <2 x float> %35, %35
  %37 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 1, i32 1, i64 2
  %38 = load float, ptr %37, align 4, !tbaa !79
  %39 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 1
  %40 = load <2 x float>, ptr %39, align 4, !tbaa !79
  %41 = fmul fast <2 x float> %40, %40
  %42 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 1, i64 2
  %43 = load float, ptr %42, align 4, !tbaa !79
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #14
  %44 = shufflevector <2 x float> %41, <2 x float> %36, <2 x i32> <i32 1, i32 3>
  %45 = shufflevector <2 x float> %41, <2 x float> %36, <2 x i32> <i32 0, i32 2>
  %46 = fadd fast <2 x float> %44, %45
  %47 = insertelement <2 x float> poison, float %43, i64 0
  %48 = insertelement <2 x float> %47, float %38, i64 1
  %49 = fmul fast <2 x float> %48, %48
  %50 = fadd fast <2 x float> %46, %49
  %51 = tail call fast <2 x float> @llvm.sqrt.v2f32(<2 x float> %50)
  %52 = fcmp fast oeq <2 x float> %51, zeroinitializer
  %53 = extractelement <2 x i1> %52, i64 0
  %54 = extractelement <2 x i1> %52, i64 1
  %55 = select i1 %54, i1 true, i1 %53
  br i1 %55, label %56, label %57

56:                                               ; preds = %33
  store <2 x float> zeroinitializer, ptr %19, align 4, !tbaa !79
  store float 0.000000e+00, ptr %23, align 4, !tbaa !79
  br label %110

57:                                               ; preds = %33
  %58 = extractelement <2 x float> %35, i64 1
  %59 = fmul fast float %43, %58
  %60 = extractelement <2 x float> %40, i64 1
  %61 = fmul fast float %60, %38
  %62 = fsub fast float %59, %61
  %63 = insertelement <2 x float> poison, float %38, i64 0
  %64 = shufflevector <2 x float> %63, <2 x float> %35, <2 x i32> <i32 0, i32 2>
  %65 = fmul fast <2 x float> %40, %64
  %66 = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %67 = insertelement <2 x float> %66, float %43, i64 0
  %68 = fmul fast <2 x float> %67, %35
  %69 = fsub fast <2 x float> %65, %68
  %70 = fmul fast float %62, %62
  %71 = fmul fast <2 x float> %69, %69
  %72 = extractelement <2 x float> %71, i64 1
  %73 = fadd fast float %70, %72
  %74 = extractelement <2 x float> %71, i64 0
  %75 = fadd fast float %73, %74
  %76 = fcmp fast ogt float %75, 0x38AA95A5C0000000
  br i1 %76, label %77, label %84

77:                                               ; preds = %57
  %78 = tail call fast float @llvm.sqrt.f32(float %75)
  %79 = fdiv fast float 1.000000e+00, %78
  %80 = fmul fast float %79, %62
  %81 = insertelement <2 x float> poison, float %79, i64 0
  %82 = shufflevector <2 x float> %81, <2 x float> poison, <2 x i32> zeroinitializer
  %83 = fmul fast <2 x float> %82, %69
  br label %84

84:                                               ; preds = %57, %77
  %85 = phi float [ %80, %77 ], [ 0.000000e+00, %57 ]
  %86 = phi <2 x float> [ %83, %77 ], [ zeroinitializer, %57 ]
  %87 = fmul fast <2 x float> %40, %35
  %88 = shufflevector <2 x float> %87, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %89 = fadd fast <2 x float> %88, %87
  %90 = extractelement <2 x float> %89, i64 0
  %91 = fmul fast float %43, %38
  %92 = fadd fast float %90, %91
  %93 = shufflevector <2 x float> %51, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %94 = fmul fast <2 x float> %51, %93
  %95 = extractelement <2 x float> %94, i64 0
  %96 = fdiv fast float %92, %95
  %97 = fcmp fast ugt float %96, -1.000000e+00
  br i1 %97, label %98, label %102

98:                                               ; preds = %84
  %99 = fcmp fast ult float %96, 1.000000e+00
  br i1 %99, label %100, label %102

100:                                              ; preds = %98
  %101 = tail call fast nofpclass(nan inf) float @acosf(float noundef nofpclass(nan inf) %96) #16
  br label %102

102:                                              ; preds = %84, %98, %100
  %103 = phi float [ %101, %100 ], [ 0x400921FB60000000, %84 ], [ 0.000000e+00, %98 ]
  %104 = fdiv fast float %103, %8
  %105 = fmul fast float %104, %85
  store float %105, ptr %19, align 4, !tbaa !79
  %106 = insertelement <2 x float> poison, float %104, i64 0
  %107 = shufflevector <2 x float> %106, <2 x float> poison, <2 x i32> zeroinitializer
  %108 = fmul fast <2 x float> %107, %86
  store <2 x float> %108, ptr %22, align 4, !tbaa !79
  %109 = load i16, ptr %31, align 4, !tbaa !125
  br label %110

110:                                              ; preds = %102, %56
  %111 = phi i16 [ %109, %102 ], [ %32, %56 ]
  %112 = sext i16 %111 to i32
  switch i32 %112, label %133 [
    i32 1, label %113
    i32 3, label %115
    i32 4, label %121
    i32 5, label %127
    i32 6, label %129
    i32 7, label %131
  ]

113:                                              ; preds = %110
  store <2 x float> %40, ptr %7, align 8, !tbaa !79
  %114 = getelementptr inbounds float, ptr %7, i64 2
  store float %43, ptr %114, align 8, !tbaa !79
  br label %133

115:                                              ; preds = %110
  %116 = extractelement <2 x float> %40, i64 1
  store float %116, ptr %7, align 8, !tbaa !79
  %117 = extractelement <2 x float> %40, i64 0
  %118 = fneg fast float %117
  %119 = getelementptr inbounds float, ptr %7, i64 1
  store float %118, ptr %119, align 4, !tbaa !79
  %120 = getelementptr inbounds float, ptr %7, i64 2
  store float 0.000000e+00, ptr %120, align 8, !tbaa !79
  br label %133

121:                                              ; preds = %110
  %122 = fneg fast <2 x float> %40
  %123 = shufflevector <2 x float> %47, <2 x float> poison, <2 x i32> zeroinitializer
  %124 = fmul fast <2 x float> %123, %122
  store <2 x float> %124, ptr %7, align 8, !tbaa !79
  %125 = getelementptr inbounds float, ptr %7, i64 2
  %126 = extractelement <2 x float> %46, i64 0
  store float %126, ptr %125, align 8, !tbaa !79
  br label %133

127:                                              ; preds = %110
  %128 = getelementptr inbounds float, ptr %7, i64 2
  store float 0.000000e+00, ptr %128, align 8, !tbaa !79
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr %7, align 8, !tbaa !79
  br label %133

129:                                              ; preds = %110
  %130 = getelementptr inbounds float, ptr %7, i64 2
  store float 0.000000e+00, ptr %130, align 8, !tbaa !79
  store <2 x float> <float 0.000000e+00, float 1.000000e+00>, ptr %7, align 8, !tbaa !79
  br label %133

131:                                              ; preds = %110
  %132 = getelementptr inbounds float, ptr %7, i64 2
  store float 1.000000e+00, ptr %132, align 8, !tbaa !79
  store <2 x float> zeroinitializer, ptr %7, align 8, !tbaa !79
  br label %133

133:                                              ; preds = %110, %113, %115, %121, %127, %129, %131
  %134 = getelementptr inbounds %struct.ParticleSettings, ptr %0, i64 0, i32 77
  %135 = load float, ptr %134, align 4, !tbaa !133
  %136 = fmul fast float %135, %8
  call void @axis_angle_to_quat(ptr noundef nonnull %6, ptr noundef nonnull %7, float noundef nofpclass(nan inf) %136) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #14
  br label %137

137:                                              ; preds = %15, %18, %133
  %138 = phi float [ %30, %18 ], [ %30, %133 ], [ 0.000000e+00, %15 ]
  %139 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 3
  %140 = load float, ptr %139, align 4, !tbaa !79
  %141 = fmul fast float %140, %140
  %142 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 3, i64 1
  %143 = load <2 x float>, ptr %142, align 4, !tbaa !79
  %144 = fmul fast <2 x float> %143, %143
  %145 = extractelement <2 x float> %144, i64 0
  %146 = fadd fast float %145, %141
  %147 = extractelement <2 x float> %144, i64 1
  %148 = fadd fast float %146, %147
  %149 = call fast float @llvm.sqrt.f32(float %148)
  %150 = fcmp fast oeq float %149, 0.000000e+00
  br i1 %150, label %157, label %151

151:                                              ; preds = %137
  %152 = load i32, ptr %9, align 8, !tbaa !222
  %153 = and i32 %152, 16384
  %154 = icmp eq i32 %153, 0
  %155 = fcmp fast oeq float %138, 0.000000e+00
  %156 = select i1 %154, i1 true, i1 %155
  br i1 %156, label %157, label %158

157:                                              ; preds = %151, %137
  call void @unit_qt(ptr noundef nonnull %5) #14
  br label %160

158:                                              ; preds = %151
  %159 = fmul fast float %149, %8
  call void @axis_angle_to_quat(ptr noundef nonnull %5, ptr noundef nonnull %139, float noundef nofpclass(nan inf) %159) #14
  br label %160

160:                                              ; preds = %158, %157
  %161 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 2
  %162 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 1, i32 2
  call void @mul_qt_qtqt(ptr noundef nonnull %161, ptr noundef nonnull %5, ptr noundef nonnull %162) #14
  call void @mul_qt_qtqt(ptr noundef nonnull %161, ptr noundef nonnull %6, ptr noundef nonnull %161) #14
  %163 = call fast nofpclass(nan inf) float @normalize_qt(ptr noundef nonnull %161) #14
  br label %164

164:                                              ; preds = %160, %13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #14
  ret void
}

declare void @boid_brain(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare void @boid_body(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @free_collider_cache(ptr noundef) local_unnamed_addr #3

declare void @BLI_bvhtree_free(ptr noundef) local_unnamed_addr #3

declare ptr @BLI_bvhtree_new(i32 noundef, float noundef nofpclass(nan inf), i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #3

declare void @BLI_bvhtree_insert(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @BLI_bvhtree_balance(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @integrate_particle(ptr nocapture noundef readonly %0, ptr noundef %1, float noundef nofpclass(nan inf) %2, ptr noundef readonly %3, ptr nocapture noundef readonly %4, ptr noundef %5) unnamed_addr #2 {
  %7 = alloca [5 x %struct.ParticleKey], align 16
  %8 = alloca [3 x float], align 8
  %9 = alloca [3 x float], align 8
  call void @llvm.lifetime.start.p0(i64 280, ptr nonnull %7) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %8) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %9) #14
  %10 = getelementptr inbounds %struct.ParticleSettings, ptr %0, i64 0, i32 5
  %11 = load i32, ptr %10, align 8, !tbaa !222
  %12 = and i32 %11, 65536
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %struct.ParticleSettings, ptr %0, i64 0, i32 81
  %15 = load float, ptr %14, align 4, !tbaa !221
  br i1 %13, label %20, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 13
  %18 = load float, ptr %17, align 4, !tbaa !205
  %19 = fmul fast float %18, %15
  br label %20

20:                                               ; preds = %6, %16
  %21 = phi fast float [ %19, %16 ], [ %15, %6 ]
  %22 = getelementptr inbounds %struct.ParticleSettings, ptr %0, i64 0, i32 33
  %23 = load i16, ptr %22, align 8, !tbaa !541
  %24 = sext i16 %23 to i32
  %25 = load <2 x float>, ptr %1, align 4, !tbaa !79
  %26 = getelementptr inbounds float, ptr %1, i64 2
  %27 = load float, ptr %26, align 4, !tbaa !79
  %28 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 1, i32 4
  %29 = load float, ptr %28, align 4, !tbaa !226
  %30 = fcmp fast olt float %29, 0.000000e+00
  %31 = icmp eq i16 %23, 3
  %32 = select i1 %30, i1 %31, i1 false
  %33 = select i1 %32, i32 0, i32 %24
  %34 = icmp eq i32 %33, 1
  %35 = select i1 %34, i64 2, i64 1
  %36 = icmp eq i32 %33, 2
  %37 = select i1 %36, i64 4, i64 %35
  br label %38

38:                                               ; preds = %20, %38
  %39 = phi i64 [ 0, %20 ], [ %41, %38 ]
  %40 = getelementptr inbounds %struct.ParticleKey, ptr %7, i64 %39
  call void @copy_particle_key(ptr noundef nonnull %40, ptr noundef nonnull %1, i32 noundef 1) #14
  %41 = add nuw nsw i64 %39, 1
  %42 = icmp eq i64 %41, %37
  br i1 %42, label %43, label %38, !llvm.loop !542

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 1
  %45 = getelementptr inbounds %struct.ParticleKey, ptr %7, i64 0, i32 4
  store float 0.000000e+00, ptr %45, align 4, !tbaa !220
  %46 = getelementptr inbounds float, ptr %8, i64 1
  %47 = getelementptr inbounds float, ptr %8, i64 2
  %48 = getelementptr inbounds float, ptr %9, i64 2
  %49 = fdiv fast float 1.000000e+00, %21
  %50 = fdiv fast float 1.000000e+00, %2
  %51 = icmp eq ptr %3, null
  %52 = getelementptr inbounds float, ptr %3, i64 1
  %53 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 1
  %54 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 1, i32 1
  %55 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 1, i64 1
  %56 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 1, i32 1, i64 2
  %57 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 1, i64 2
  %58 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 1, i32 0, i64 2
  %59 = getelementptr inbounds %struct.ParticleKey, ptr %7, i64 0, i32 1
  %60 = getelementptr inbounds %struct.ParticleKey, ptr %7, i64 0, i32 1, i64 1
  %61 = getelementptr inbounds float, ptr %7, i64 1
  %62 = getelementptr inbounds float, ptr %7, i64 2
  %63 = fmul fast float %2, 0x3FC5555560000000
  %64 = getelementptr inbounds [5 x %struct.ParticleKey], ptr %7, i64 0, i64 3
  %65 = getelementptr inbounds [5 x %struct.ParticleKey], ptr %7, i64 0, i64 3, i32 1, i64 1
  %66 = getelementptr inbounds [5 x %struct.ParticleKey], ptr %7, i64 0, i64 3, i32 4
  %67 = getelementptr inbounds [5 x %struct.ParticleKey], ptr %7, i64 0, i64 2
  %68 = getelementptr inbounds [5 x %struct.ParticleKey], ptr %7, i64 0, i64 2, i32 1, i64 1
  %69 = fmul fast float %2, 5.000000e-01
  %70 = getelementptr inbounds [5 x %struct.ParticleKey], ptr %7, i64 0, i64 2, i32 4
  %71 = getelementptr inbounds [5 x %struct.ParticleKey], ptr %7, i64 0, i64 1
  %72 = getelementptr inbounds [5 x %struct.ParticleKey], ptr %7, i64 0, i64 1, i32 1
  %73 = getelementptr inbounds [5 x %struct.ParticleKey], ptr %7, i64 0, i64 1, i32 1, i64 1
  %74 = getelementptr inbounds [5 x %struct.ParticleKey], ptr %7, i64 0, i64 1, i32 4
  %75 = insertelement <4 x float> poison, float %2, i64 0
  %76 = shufflevector <4 x float> %75, <4 x float> poison, <4 x i32> zeroinitializer
  %77 = insertelement <2 x float> poison, float %49, i64 0
  %78 = shufflevector <2 x float> %77, <2 x float> poison, <2 x i32> zeroinitializer
  %79 = insertelement <2 x float> poison, float %2, i64 0
  %80 = shufflevector <2 x float> %79, <2 x float> poison, <2 x i32> zeroinitializer
  %81 = insertelement <4 x float> poison, float %69, i64 0
  %82 = shufflevector <4 x float> %81, <4 x float> poison, <4 x i32> zeroinitializer
  %83 = insertelement <2 x float> poison, float %69, i64 0
  %84 = shufflevector <2 x float> %83, <2 x float> poison, <2 x i32> zeroinitializer
  %85 = insertelement <4 x float> poison, float %63, i64 0
  %86 = shufflevector <4 x float> %85, <4 x float> poison, <4 x i32> zeroinitializer
  %87 = insertelement <2 x float> poison, float %63, i64 0
  %88 = shufflevector <2 x float> %87, <2 x float> poison, <2 x i32> zeroinitializer
  %89 = insertelement <2 x float> poison, float %50, i64 0
  %90 = shufflevector <2 x float> %89, <2 x float> poison, <2 x i32> zeroinitializer
  br label %91

91:                                               ; preds = %43, %260
  %92 = phi i64 [ 0, %43 ], [ %267, %260 ]
  %93 = phi <2 x float> [ zeroinitializer, %43 ], [ %261, %260 ]
  %94 = phi <2 x float> [ zeroinitializer, %43 ], [ %262, %260 ]
  %95 = phi <4 x float> [ zeroinitializer, %43 ], [ %263, %260 ]
  %96 = phi <4 x float> [ zeroinitializer, %43 ], [ %264, %260 ]
  %97 = phi <4 x float> [ zeroinitializer, %43 ], [ %265, %260 ]
  %98 = phi <2 x float> [ zeroinitializer, %43 ], [ %266, %260 ]
  store <2 x float> zeroinitializer, ptr %8, align 8, !tbaa !79
  store float 0.000000e+00, ptr %47, align 8, !tbaa !79
  store <2 x float> zeroinitializer, ptr %9, align 8, !tbaa !79
  store float 0.000000e+00, ptr %48, align 8, !tbaa !79
  %99 = getelementptr inbounds %struct.ParticleKey, ptr %7, i64 %92
  call void %4(ptr noundef %5, ptr noundef nonnull %99, ptr noundef nonnull %8, ptr noundef nonnull %9) #14
  %100 = load float, ptr %8, align 8, !tbaa !79
  %101 = fmul fast float %100, %49
  %102 = load <2 x float>, ptr %46, align 4, !tbaa !79
  %103 = fmul fast <2 x float> %102, %78
  br i1 %51, label %109, label %104

104:                                              ; preds = %91
  %105 = load float, ptr %3, align 4, !tbaa !79
  %106 = fadd fast float %105, %101
  %107 = load <2 x float>, ptr %52, align 4, !tbaa !79
  %108 = fadd fast <2 x float> %107, %103
  br label %109

109:                                              ; preds = %104, %91
  %110 = phi float [ %101, %91 ], [ %106, %104 ]
  %111 = phi <2 x float> [ %103, %91 ], [ %108, %104 ]
  %112 = getelementptr inbounds [5 x %struct.ParticleKey], ptr %7, i64 0, i64 %92, i32 1
  %113 = load <2 x float>, ptr %9, align 8, !tbaa !79
  %114 = load <2 x float>, ptr %112, align 4, !tbaa !79
  %115 = fadd fast <2 x float> %114, %113
  store <2 x float> %115, ptr %112, align 4, !tbaa !79
  %116 = load float, ptr %48, align 8, !tbaa !79
  %117 = getelementptr inbounds float, ptr %112, i64 2
  %118 = load float, ptr %117, align 4, !tbaa !79
  %119 = fadd fast float %118, %116
  store float %119, ptr %117, align 4, !tbaa !79
  switch i32 %33, label %260 [
    i32 0, label %120
    i32 1, label %131
    i32 2, label %164
    i32 3, label %240
  ]

120:                                              ; preds = %109
  %121 = load <4 x float>, ptr %7, align 16, !tbaa !79
  %122 = shufflevector <4 x float> %121, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>
  %123 = fmul fast <2 x float> %111, %80
  %124 = load <2 x float>, ptr %60, align 16, !tbaa !79
  %125 = shufflevector <2 x float> %124, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %126 = shufflevector <4 x float> %122, <4 x float> %125, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>
  %127 = insertelement <4 x float> %126, float %110, i64 3
  %128 = fmul fast <4 x float> %127, %76
  %129 = fadd fast <4 x float> %121, %128
  store <4 x float> %129, ptr %1, align 4, !tbaa !79
  %130 = fadd fast <2 x float> %124, %123
  store <2 x float> %130, ptr %55, align 4, !tbaa !79
  br label %260

131:                                              ; preds = %109
  %132 = icmp eq i64 %92, 0
  %133 = load float, ptr %7, align 16, !tbaa !79
  br i1 %132, label %134, label %149

134:                                              ; preds = %131
  %135 = load float, ptr %59, align 4, !tbaa !79
  %136 = load <4 x float>, ptr %61, align 4
  %137 = insertelement <4 x float> poison, float %135, i64 0
  %138 = insertelement <4 x float> poison, float %133, i64 0
  %139 = shufflevector <4 x float> %138, <4 x float> %136, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>
  %140 = insertelement <4 x float> %139, float %135, i64 3
  %141 = load <2 x float>, ptr %60, align 16, !tbaa !79
  %142 = shufflevector <2 x float> %141, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %143 = shufflevector <4 x float> %137, <4 x float> %142, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>
  %144 = insertelement <4 x float> %143, float %110, i64 3
  %145 = fmul fast <4 x float> %144, %82
  %146 = fadd fast <4 x float> %140, %145
  store <4 x float> %146, ptr %71, align 8, !tbaa !79
  %147 = fmul fast <2 x float> %111, %84
  %148 = fadd fast <2 x float> %141, %147
  store <2 x float> %148, ptr %73, align 8, !tbaa !79
  store float %69, ptr %74, align 4, !tbaa !220
  br label %260

149:                                              ; preds = %131
  %150 = load <4 x float>, ptr %72, align 4
  %151 = load float, ptr %61, align 4, !tbaa !79
  %152 = load <4 x float>, ptr %73, align 8
  %153 = load <4 x float>, ptr %62, align 8
  %154 = shufflevector <4 x float> %150, <4 x float> %152, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>
  %155 = insertelement <4 x float> %154, float %110, i64 3
  %156 = fmul fast <4 x float> %155, %76
  %157 = insertelement <4 x float> poison, float %133, i64 0
  %158 = insertelement <4 x float> %157, float %151, i64 1
  %159 = shufflevector <4 x float> %158, <4 x float> %153, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %160 = fadd fast <4 x float> %159, %156
  store <4 x float> %160, ptr %1, align 4, !tbaa !79
  %161 = load <2 x float>, ptr %60, align 16, !tbaa !79
  %162 = fmul fast <2 x float> %111, %80
  %163 = fadd fast <2 x float> %161, %162
  store <2 x float> %163, ptr %55, align 4, !tbaa !79
  br label %260

164:                                              ; preds = %109
  %165 = trunc i64 %92 to i32
  switch i32 %165, label %260 [
    i32 0, label %166
    i32 1, label %179
    i32 2, label %198
    i32 3, label %215
  ]

166:                                              ; preds = %164
  %167 = load <4 x float>, ptr %7, align 16, !tbaa !79
  %168 = shufflevector <4 x float> %167, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>
  %169 = load <2 x float>, ptr %60, align 16, !tbaa !79
  %170 = fmul fast <2 x float> %111, %80
  %171 = shufflevector <2 x float> %169, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %172 = shufflevector <4 x float> %168, <4 x float> %171, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>
  %173 = insertelement <4 x float> %172, float %110, i64 3
  %174 = fmul fast <4 x float> %173, %76
  %175 = fmul fast <4 x float> %174, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %176 = fadd fast <4 x float> %167, %175
  store <4 x float> %176, ptr %71, align 8, !tbaa !79
  %177 = fmul fast <2 x float> %170, <float 5.000000e-01, float 5.000000e-01>
  %178 = fadd fast <2 x float> %169, %177
  store <2 x float> %178, ptr %73, align 8, !tbaa !79
  store float %69, ptr %74, align 4, !tbaa !220
  br label %260

179:                                              ; preds = %164
  %180 = extractelement <4 x float> %95, i64 3
  %181 = fmul fast float %180, 5.000000e-01
  %182 = fmul fast <2 x float> %93, <float 5.000000e-01, float 5.000000e-01>
  %183 = load <4 x float>, ptr %7, align 16, !tbaa !79
  %184 = extractelement <4 x float> %183, i64 3
  %185 = fadd fast float %184, %181
  %186 = insertelement <4 x float> poison, float %185, i64 0
  %187 = load <2 x float>, ptr %60, align 16, !tbaa !79
  %188 = fadd fast <2 x float> %187, %182
  %189 = fmul fast <2 x float> %111, %80
  %190 = shufflevector <2 x float> %188, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %191 = shufflevector <4 x float> %186, <4 x float> %190, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>
  %192 = insertelement <4 x float> %191, float %110, i64 3
  %193 = fmul fast <4 x float> %192, %76
  %194 = fmul fast <4 x float> %193, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %195 = fadd fast <4 x float> %194, %183
  store <4 x float> %195, ptr %67, align 16, !tbaa !79
  %196 = fmul fast <2 x float> %189, <float 5.000000e-01, float 5.000000e-01>
  %197 = fadd fast <2 x float> %187, %196
  store <2 x float> %197, ptr %68, align 16, !tbaa !79
  store float %69, ptr %70, align 4, !tbaa !220
  br label %260

198:                                              ; preds = %164
  %199 = extractelement <4 x float> %96, i64 3
  %200 = fmul fast float %199, 5.000000e-01
  %201 = fmul fast <2 x float> %94, <float 5.000000e-01, float 5.000000e-01>
  %202 = load <4 x float>, ptr %7, align 16, !tbaa !79
  %203 = extractelement <4 x float> %202, i64 3
  %204 = fadd fast float %203, %200
  %205 = insertelement <4 x float> poison, float %204, i64 0
  %206 = load <2 x float>, ptr %60, align 16, !tbaa !79
  %207 = fadd fast <2 x float> %206, %201
  %208 = fmul fast <2 x float> %111, %80
  %209 = shufflevector <2 x float> %207, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %210 = shufflevector <4 x float> %205, <4 x float> %209, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>
  %211 = insertelement <4 x float> %210, float %110, i64 3
  %212 = fmul fast <4 x float> %211, %76
  %213 = fadd fast <4 x float> %202, %212
  store <4 x float> %213, ptr %64, align 8, !tbaa !79
  %214 = fadd fast <2 x float> %206, %208
  store <2 x float> %214, ptr %65, align 8, !tbaa !79
  store float %2, ptr %66, align 4, !tbaa !220
  br label %260

215:                                              ; preds = %164
  %216 = fmul fast <4 x float> %95, <float 0x3FC5555560000000, float 0x3FC5555560000000, float 0x3FC5555560000000, float 0x3FC5555560000000>
  %217 = fmul fast <4 x float> %96, <float 0x3FD5555560000000, float 0x3FD5555560000000, float 0x3FD5555560000000, float 0x3FD5555560000000>
  %218 = fmul fast <4 x float> %97, <float 0x3FD5555560000000, float 0x3FD5555560000000, float 0x3FD5555560000000, float 0x3FD5555560000000>
  %219 = fmul fast <2 x float> %98, <float 0x3FD5555560000000, float 0x3FD5555560000000>
  %220 = load <4 x float>, ptr %7, align 16, !tbaa !79
  %221 = fadd fast <4 x float> %220, %97
  %222 = fadd fast <4 x float> %220, %216
  %223 = fadd fast <4 x float> %222, %217
  %224 = fadd fast <4 x float> %223, %218
  %225 = shufflevector <4 x float> %221, <4 x float> undef, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>
  %226 = load <2 x float>, ptr %60, align 16, !tbaa !79
  %227 = fadd fast <2 x float> %226, %98
  %228 = fmul fast <2 x float> %93, <float 0x3FC5555560000000, float 0x3FC5555560000000>
  %229 = fadd fast <2 x float> %226, %228
  %230 = fmul fast <2 x float> %94, <float 0x3FD5555560000000, float 0x3FD5555560000000>
  %231 = fadd fast <2 x float> %229, %230
  %232 = fadd fast <2 x float> %231, %219
  %233 = shufflevector <2 x float> %227, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %234 = shufflevector <4 x float> %225, <4 x float> %233, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>
  %235 = insertelement <4 x float> %234, float %110, i64 3
  %236 = fmul fast <4 x float> %86, %235
  %237 = fadd fast <4 x float> %224, %236
  store <4 x float> %237, ptr %1, align 4, !tbaa !79
  %238 = fmul fast <2 x float> %88, %111
  %239 = fadd fast <2 x float> %232, %238
  store <2 x float> %239, ptr %55, align 4, !tbaa !79
  br label %260

240:                                              ; preds = %109
  %241 = load float, ptr %56, align 4, !tbaa !79
  %242 = extractelement <2 x float> %111, i64 1
  %243 = fmul fast float %242, %2
  %244 = fadd fast float %241, %243
  %245 = load <2 x float>, ptr %54, align 4, !tbaa !79
  %246 = shufflevector <2 x float> %111, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %247 = insertelement <2 x float> %246, float %110, i64 0
  %248 = fmul fast <2 x float> %247, %80
  %249 = fadd fast <2 x float> %245, %248
  %250 = load <2 x float>, ptr %44, align 4, !tbaa !79
  %251 = fmul fast <2 x float> %249, %80
  %252 = fadd fast <2 x float> %250, %251
  store <2 x float> %252, ptr %1, align 4, !tbaa !79
  %253 = load float, ptr %58, align 4, !tbaa !79
  %254 = fmul fast float %244, %2
  %255 = fadd fast float %253, %254
  store float %255, ptr %26, align 4, !tbaa !79
  %256 = fsub fast float %255, %27
  %257 = fsub fast <2 x float> %252, %25
  %258 = fmul fast <2 x float> %257, %90
  store <2 x float> %258, ptr %53, align 4, !tbaa !79
  %259 = fmul fast float %256, %50
  store float %259, ptr %57, align 4, !tbaa !79
  br label %260

260:                                              ; preds = %120, %240, %109, %149, %134, %215, %164, %198, %179, %166
  %261 = phi <2 x float> [ %93, %109 ], [ %93, %240 ], [ %93, %164 ], [ %93, %215 ], [ %93, %198 ], [ %93, %179 ], [ %170, %166 ], [ %93, %134 ], [ %93, %149 ], [ %93, %120 ]
  %262 = phi <2 x float> [ %94, %109 ], [ %94, %240 ], [ %94, %164 ], [ %94, %215 ], [ %94, %198 ], [ %189, %179 ], [ %94, %166 ], [ %94, %134 ], [ %94, %149 ], [ %94, %120 ]
  %263 = phi <4 x float> [ %95, %109 ], [ %95, %240 ], [ %95, %164 ], [ %95, %215 ], [ %95, %198 ], [ %95, %179 ], [ %174, %166 ], [ %95, %134 ], [ %95, %149 ], [ %95, %120 ]
  %264 = phi <4 x float> [ %96, %109 ], [ %96, %240 ], [ %96, %164 ], [ %96, %215 ], [ %96, %198 ], [ %193, %179 ], [ %96, %166 ], [ %96, %134 ], [ %96, %149 ], [ %96, %120 ]
  %265 = phi <4 x float> [ %97, %109 ], [ %97, %240 ], [ %97, %164 ], [ %97, %215 ], [ %212, %198 ], [ %97, %179 ], [ %97, %166 ], [ %97, %134 ], [ %97, %149 ], [ %97, %120 ]
  %266 = phi <2 x float> [ %98, %109 ], [ %98, %240 ], [ %98, %164 ], [ %98, %215 ], [ %208, %198 ], [ %98, %179 ], [ %98, %166 ], [ %98, %134 ], [ %98, %149 ], [ %98, %120 ]
  %267 = add nuw nsw i64 %92, 1
  %268 = icmp eq i64 %267, %37
  br i1 %268, label %269, label %91, !llvm.loop !543

269:                                              ; preds = %260
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %9) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %8) #14
  call void @llvm.lifetime.end.p0(i64 280, ptr nonnull %7) #14
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @basic_force_cb(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #2 {
  %5 = alloca %struct.EffectedPoint, align 8
  %6 = getelementptr inbounds %struct.EfData, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !504
  %8 = getelementptr inbounds %struct.ParticleSimulationData, ptr %7, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !87
  %10 = getelementptr inbounds %struct.ParticleSystem, ptr %9, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !5
  %12 = getelementptr inbounds %struct.EfData, ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !502
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %5) #14
  call void @pd_point_from_particle(ptr noundef %7, ptr noundef %13, ptr noundef %1, ptr noundef nonnull %5) #14
  %14 = getelementptr inbounds %struct.ParticleSettings, ptr %11, i64 0, i32 7
  %15 = load i16, ptr %14, align 8, !tbaa !18
  %16 = icmp eq i16 %15, 2
  %17 = getelementptr inbounds %struct.ParticleSettings, ptr %11, i64 0, i32 4
  %18 = load ptr, ptr %17, align 8, !tbaa !346
  br i1 %16, label %19, label %24

19:                                               ; preds = %4
  %20 = getelementptr inbounds %struct.EffectorWeights, ptr %18, i64 0, i32 3
  %21 = load i16, ptr %20, align 4, !tbaa !505
  %22 = and i16 %21, 1
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %4, %19
  %25 = load ptr, ptr %8, align 8, !tbaa !87
  %26 = getelementptr inbounds %struct.ParticleSystem, ptr %25, i64 0, i32 42
  %27 = load ptr, ptr %26, align 8, !tbaa !349
  %28 = getelementptr inbounds %struct.ParticleSimulationData, ptr %7, i64 0, i32 4
  %29 = load ptr, ptr %28, align 8, !tbaa !369
  call void @pdDoEffectors(ptr noundef %27, ptr noundef %29, ptr noundef %18, ptr noundef nonnull %5, ptr noundef %2, ptr noundef %3) #14
  br label %30

30:                                               ; preds = %24, %19
  %31 = getelementptr inbounds %struct.ParticleTexture, ptr %0, i64 0, i32 7
  %32 = load float, ptr %31, align 4, !tbaa !544
  %33 = getelementptr inbounds float, ptr %2, i64 1
  %34 = load <2 x float>, ptr %2, align 4, !tbaa !79
  %35 = insertelement <2 x float> poison, float %32, i64 0
  %36 = shufflevector <2 x float> %35, <2 x float> poison, <2 x i32> zeroinitializer
  %37 = fmul fast <2 x float> %34, %36
  store <2 x float> %37, ptr %2, align 4, !tbaa !79
  %38 = getelementptr inbounds float, ptr %2, i64 2
  %39 = load float, ptr %38, align 4, !tbaa !79
  %40 = fmul fast float %39, %32
  store float %40, ptr %38, align 4, !tbaa !79
  %41 = load float, ptr %31, align 4, !tbaa !544
  %42 = load <2 x float>, ptr %3, align 4, !tbaa !79
  %43 = insertelement <2 x float> poison, float %41, i64 0
  %44 = shufflevector <2 x float> %43, <2 x float> poison, <2 x i32> zeroinitializer
  %45 = fmul fast <2 x float> %42, %44
  store <2 x float> %45, ptr %3, align 4, !tbaa !79
  %46 = getelementptr inbounds float, ptr %3, i64 2
  %47 = load float, ptr %46, align 4, !tbaa !79
  %48 = fmul fast float %47, %41
  store float %48, ptr %46, align 4, !tbaa !79
  %49 = getelementptr inbounds %struct.ParticleSettings, ptr %11, i64 0, i32 85
  %50 = load float, ptr %49, align 4, !tbaa !545
  %51 = fcmp fast une float %50, 0.000000e+00
  br i1 %51, label %52, label %82

52:                                               ; preds = %30
  %53 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 1
  %54 = getelementptr inbounds %struct.ParticleData, ptr %13, i64 0, i32 13
  %55 = load float, ptr %54, align 4, !tbaa !205
  %56 = load float, ptr %53, align 4, !tbaa !79
  %57 = fmul fast float %56, %56
  %58 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 1, i64 1
  %59 = load float, ptr %58, align 4, !tbaa !79
  %60 = fmul fast float %59, %59
  %61 = fadd fast float %60, %57
  %62 = getelementptr inbounds %struct.ParticleKey, ptr %1, i64 0, i32 1, i64 2
  %63 = load float, ptr %62, align 4, !tbaa !79
  %64 = fmul fast float %63, %63
  %65 = fadd fast float %61, %64
  %66 = call fast float @llvm.sqrt.f32(float %65)
  %67 = fneg fast float %50
  %68 = fmul fast float %55, %55
  %69 = fmul fast float %68, %67
  %70 = fmul fast float %69, %66
  %71 = fmul fast float %70, %56
  %72 = load float, ptr %2, align 4, !tbaa !79
  %73 = fadd fast float %71, %72
  store float %73, ptr %2, align 4, !tbaa !79
  %74 = load float, ptr %58, align 4, !tbaa !79
  %75 = fmul fast float %70, %74
  %76 = load float, ptr %33, align 4, !tbaa !79
  %77 = fadd fast float %75, %76
  store float %77, ptr %33, align 4, !tbaa !79
  %78 = load float, ptr %62, align 4, !tbaa !79
  %79 = fmul fast float %78, %70
  %80 = load float, ptr %38, align 4, !tbaa !79
  %81 = fadd fast float %80, %79
  store float %81, ptr %38, align 4, !tbaa !79
  br label %82

82:                                               ; preds = %52, %30
  %83 = getelementptr inbounds %struct.ParticleSettings, ptr %11, i64 0, i32 86
  %84 = load float, ptr %83, align 8, !tbaa !546
  %85 = fcmp fast une float %84, 0.000000e+00
  br i1 %85, label %86, label %105

86:                                               ; preds = %82
  %87 = call fast nofpclass(nan inf) float @BLI_frand() #14
  %88 = fadd fast float %87, -5.000000e-01
  %89 = load float, ptr %83, align 8, !tbaa !546
  %90 = fmul fast float %88, %89
  %91 = load float, ptr %2, align 4, !tbaa !79
  %92 = fadd fast float %91, %90
  store float %92, ptr %2, align 4, !tbaa !79
  %93 = call fast nofpclass(nan inf) float @BLI_frand() #14
  %94 = fadd fast float %93, -5.000000e-01
  %95 = load float, ptr %83, align 8, !tbaa !546
  %96 = fmul fast float %94, %95
  %97 = load float, ptr %33, align 4, !tbaa !79
  %98 = fadd fast float %97, %96
  store float %98, ptr %33, align 4, !tbaa !79
  %99 = call fast nofpclass(nan inf) float @BLI_frand() #14
  %100 = fadd fast float %99, -5.000000e-01
  %101 = load float, ptr %83, align 8, !tbaa !546
  %102 = fmul fast float %100, %101
  %103 = load float, ptr %38, align 4, !tbaa !79
  %104 = fadd fast float %103, %102
  store float %104, ptr %38, align 4, !tbaa !79
  br label %105

105:                                              ; preds = %86, %82
  %106 = getelementptr inbounds %struct.ParticleSettings, ptr %11, i64 0, i32 5
  %107 = load i32, ptr %106, align 8, !tbaa !222
  %108 = and i32 %107, 16384
  %109 = icmp ne i32 %108, 0
  %110 = getelementptr inbounds %struct.EffectedPoint, ptr %5, i64 0, i32 2
  %111 = load ptr, ptr %110, align 8
  %112 = icmp ne ptr %111, null
  %113 = select i1 %109, i1 %112, i1 false
  br i1 %113, label %114, label %123

114:                                              ; preds = %105
  %115 = getelementptr inbounds %struct.ParticleKey, ptr %13, i64 0, i32 3
  %116 = load float, ptr %111, align 4, !tbaa !79
  store float %116, ptr %115, align 4, !tbaa !79
  %117 = getelementptr inbounds float, ptr %111, i64 1
  %118 = load float, ptr %117, align 4, !tbaa !79
  %119 = getelementptr inbounds %struct.ParticleKey, ptr %13, i64 0, i32 3, i64 1
  store float %118, ptr %119, align 4, !tbaa !79
  %120 = getelementptr inbounds float, ptr %111, i64 2
  %121 = load float, ptr %120, align 4, !tbaa !79
  %122 = getelementptr inbounds %struct.ParticleKey, ptr %13, i64 0, i32 3, i64 2
  store float %121, ptr %122, align 4, !tbaa !79
  br label %123

123:                                              ; preds = %114, %105
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %5) #14
  ret void
}

declare i32 @do_guides(ptr noundef, ptr noundef, i32 noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

declare void @pd_point_from_particle(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @pdDoEffectors(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare nofpclass(nan inf) float @BLI_frand() local_unnamed_addr #3

declare i32 @BLI_bvhtree_ray_cast(ptr noundef, ptr noundef, ptr noundef, float noundef nofpclass(nan inf), ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nosync nounwind sspstrong willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal fastcc nofpclass(nan inf) float @collision_point_distance_with_normal(ptr nocapture noundef readonly %0, ptr nocapture noundef %1, float noundef nofpclass(nan inf) %2, ptr nocapture noundef readonly %3, ptr nocapture noundef writeonly %4) unnamed_addr #8 {
  %6 = fcmp fast ult float %2, 0.000000e+00
  br i1 %6, label %12, label %7

7:                                                ; preds = %5
  %8 = getelementptr i8, ptr %3, i64 52
  %9 = load float, ptr %8, align 4, !tbaa !267
  %10 = getelementptr i8, ptr %3, i64 56
  %11 = load float, ptr %10, align 8, !tbaa !268
  tail call fastcc void @collision_interpolate_element(ptr noundef %1, float noundef nofpclass(nan inf) 0.000000e+00, float noundef nofpclass(nan inf) %2, float %9, float %11)
  br label %12

12:                                               ; preds = %7, %5
  %13 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %1, i64 0, i32 9
  %14 = load i32, ptr %13, align 8, !tbaa !256
  switch i32 %14, label %181 [
    i32 1, label %15
    i32 2, label %49
    i32 3, label %104
  ]

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %1, i64 0, i32 2
  %17 = load float, ptr %0, align 4, !tbaa !79
  %18 = load float, ptr %16, align 4, !tbaa !79
  %19 = fsub fast float %17, %18
  store float %19, ptr %4, align 4, !tbaa !79
  %20 = getelementptr inbounds float, ptr %0, i64 1
  %21 = load float, ptr %20, align 4, !tbaa !79
  %22 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %1, i64 0, i32 2, i64 1
  %23 = load float, ptr %22, align 4, !tbaa !79
  %24 = fsub fast float %21, %23
  %25 = getelementptr inbounds float, ptr %4, i64 1
  store float %24, ptr %25, align 4, !tbaa !79
  %26 = getelementptr inbounds float, ptr %0, i64 2
  %27 = load float, ptr %26, align 4, !tbaa !79
  %28 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %1, i64 0, i32 2, i64 2
  %29 = load float, ptr %28, align 4, !tbaa !79
  %30 = fsub fast float %27, %29
  %31 = getelementptr inbounds float, ptr %4, i64 2
  %32 = fmul fast float %19, %19
  %33 = fmul fast float %24, %24
  %34 = fadd fast float %33, %32
  %35 = fmul fast float %30, %30
  %36 = fadd fast float %34, %35
  %37 = fcmp fast ogt float %36, 0x38AA95A5C0000000
  br i1 %37, label %38, label %44

38:                                               ; preds = %15
  %39 = tail call fast float @llvm.sqrt.f32(float %36)
  %40 = fdiv fast float 1.000000e+00, %39
  %41 = fmul fast float %40, %19
  %42 = fmul fast float %40, %24
  %43 = fmul fast float %40, %30
  br label %44

44:                                               ; preds = %15, %38
  %45 = phi float [ %41, %38 ], [ 0.000000e+00, %15 ]
  %46 = phi float [ %42, %38 ], [ 0.000000e+00, %15 ]
  %47 = phi float [ %43, %38 ], [ 0.000000e+00, %15 ]
  %48 = phi float [ %39, %38 ], [ 0.000000e+00, %15 ]
  store float %45, ptr %4, align 4
  store float %46, ptr %25, align 4
  store float %47, ptr %31, align 4
  br label %181

49:                                               ; preds = %12
  %50 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %1, i64 0, i32 3
  %51 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %1, i64 0, i32 2
  %52 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %1, i64 0, i32 3, i64 2
  %53 = load float, ptr %52, align 4, !tbaa !79
  %54 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %1, i64 0, i32 2, i64 2
  %55 = load float, ptr %54, align 4, !tbaa !79
  %56 = fsub fast float %53, %55
  %57 = getelementptr inbounds float, ptr %0, i64 2
  %58 = load float, ptr %57, align 4, !tbaa !79
  %59 = fsub fast float %58, %55
  %60 = fmul fast float %59, %56
  %61 = fmul fast float %56, %56
  %62 = load <2 x float>, ptr %50, align 4, !tbaa !79
  %63 = load <2 x float>, ptr %51, align 4, !tbaa !79
  %64 = fsub fast <2 x float> %62, %63
  %65 = load <2 x float>, ptr %0, align 4, !tbaa !79
  %66 = fsub fast <2 x float> %65, %63
  %67 = fmul fast <2 x float> %66, %64
  %68 = shufflevector <2 x float> %67, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %69 = fadd fast <2 x float> %68, %67
  %70 = extractelement <2 x float> %69, i64 0
  %71 = fadd fast float %70, %60
  %72 = fmul fast <2 x float> %64, %64
  %73 = shufflevector <2 x float> %72, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %74 = fadd fast <2 x float> %73, %72
  %75 = extractelement <2 x float> %74, i64 0
  %76 = fadd fast float %75, %61
  %77 = fneg fast float %71
  %78 = fdiv fast float %77, %76
  %79 = insertelement <2 x float> poison, float %78, i64 0
  %80 = shufflevector <2 x float> %79, <2 x float> poison, <2 x i32> zeroinitializer
  %81 = fmul fast <2 x float> %80, %64
  %82 = fadd fast <2 x float> %81, %66
  %83 = fmul fast float %78, %56
  %84 = fadd fast float %83, %59
  %85 = getelementptr inbounds float, ptr %4, i64 2
  %86 = fmul fast <2 x float> %82, %82
  %87 = shufflevector <2 x float> %86, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %88 = fadd fast <2 x float> %87, %86
  %89 = extractelement <2 x float> %88, i64 0
  %90 = fmul fast float %84, %84
  %91 = fadd fast float %89, %90
  %92 = fcmp fast ogt float %91, 0x38AA95A5C0000000
  br i1 %92, label %93, label %100

93:                                               ; preds = %49
  %94 = tail call fast float @llvm.sqrt.f32(float %91)
  %95 = fdiv fast float 1.000000e+00, %94
  %96 = insertelement <2 x float> poison, float %95, i64 0
  %97 = shufflevector <2 x float> %96, <2 x float> poison, <2 x i32> zeroinitializer
  %98 = fmul fast <2 x float> %97, %82
  %99 = fmul fast float %95, %84
  br label %100

100:                                              ; preds = %49, %93
  %101 = phi float [ %99, %93 ], [ 0.000000e+00, %49 ]
  %102 = phi float [ %94, %93 ], [ 0.000000e+00, %49 ]
  %103 = phi <2 x float> [ %98, %93 ], [ zeroinitializer, %49 ]
  store <2 x float> %103, ptr %4, align 4
  store float %101, ptr %85, align 4
  br label %181

104:                                              ; preds = %12
  %105 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %1, i64 0, i32 3
  %106 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %1, i64 0, i32 2
  %107 = load float, ptr %105, align 4, !tbaa !79
  %108 = load float, ptr %106, align 4, !tbaa !79
  %109 = fsub fast float %107, %108
  %110 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %1, i64 0, i32 3, i64 1
  %111 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %1, i64 0, i32 2, i64 1
  %112 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %1, i64 0, i32 4
  %113 = load float, ptr %112, align 4, !tbaa !79
  %114 = fsub fast float %113, %108
  %115 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %1, i64 0, i32 4, i64 1
  %116 = load float, ptr %0, align 4, !tbaa !79
  %117 = fsub fast float %116, %108
  %118 = getelementptr inbounds float, ptr %0, i64 1
  %119 = load float, ptr %118, align 4, !tbaa !79
  %120 = getelementptr inbounds float, ptr %0, i64 2
  %121 = load float, ptr %120, align 4, !tbaa !79
  %122 = load <2 x float>, ptr %110, align 4, !tbaa !79
  %123 = load <2 x float>, ptr %111, align 4, !tbaa !79
  %124 = fsub fast <2 x float> %122, %123
  %125 = load <2 x float>, ptr %115, align 4, !tbaa !79
  %126 = fsub fast <2 x float> %125, %123
  %127 = shufflevector <2 x float> %126, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %128 = extractelement <2 x float> %123, i64 0
  %129 = fsub fast float %119, %128
  %130 = extractelement <2 x float> %123, i64 1
  %131 = fsub fast float %121, %130
  %132 = fmul fast <2 x float> %127, %124
  %133 = shufflevector <2 x float> %132, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %134 = fsub fast <2 x float> %132, %133
  %135 = extractelement <2 x float> %124, i64 1
  %136 = fmul fast float %114, %135
  %137 = extractelement <2 x float> %126, i64 1
  %138 = fmul fast float %137, %109
  %139 = fsub fast float %136, %138
  %140 = getelementptr inbounds float, ptr %4, i64 1
  %141 = extractelement <2 x float> %126, i64 0
  %142 = fmul fast float %141, %109
  %143 = extractelement <2 x float> %124, i64 0
  %144 = fmul fast float %114, %143
  %145 = fsub fast float %142, %144
  %146 = getelementptr inbounds float, ptr %4, i64 2
  %147 = fmul fast <2 x float> %134, %134
  %148 = extractelement <2 x float> %147, i64 0
  %149 = fmul fast float %139, %139
  %150 = fmul fast float %145, %145
  %151 = fadd fast float %148, %150
  %152 = fadd fast float %151, %149
  %153 = fcmp fast ogt float %152, 0x38AA95A5C0000000
  br i1 %153, label %154, label %161

154:                                              ; preds = %104
  %155 = extractelement <2 x float> %134, i64 0
  %156 = tail call fast float @llvm.sqrt.f32(float %152)
  %157 = fdiv fast float 1.000000e+00, %156
  %158 = fmul fast float %157, %155
  %159 = fmul fast float %157, %139
  %160 = fmul fast float %157, %145
  br label %161

161:                                              ; preds = %154, %104
  %162 = phi float [ %158, %154 ], [ 0.000000e+00, %104 ]
  %163 = phi float [ %159, %154 ], [ 0.000000e+00, %104 ]
  %164 = phi float [ %160, %154 ], [ 0.000000e+00, %104 ]
  store float %162, ptr %4, align 4
  store float %163, ptr %140, align 4
  store float %164, ptr %146, align 4
  %165 = fmul fast float %162, %117
  %166 = fmul fast float %163, %129
  %167 = fadd fast float %166, %165
  %168 = fmul fast float %164, %131
  %169 = fadd fast float %167, %168
  %170 = getelementptr inbounds %struct.ParticleCollisionElement, ptr %1, i64 0, i32 11
  %171 = load i16, ptr %170, align 8, !tbaa !269
  switch i16 %171, label %181 [
    i16 -1, label %172
    i16 1, label %176
  ]

172:                                              ; preds = %161
  %173 = fcmp fast olt float %169, 0.000000e+00
  br i1 %173, label %174, label %175

174:                                              ; preds = %172
  store i16 1, ptr %170, align 8, !tbaa !269
  br label %176

175:                                              ; preds = %172
  store i16 0, ptr %170, align 8, !tbaa !269
  br label %181

176:                                              ; preds = %174, %161
  %177 = fneg fast float %162
  store float %177, ptr %4, align 4, !tbaa !79
  %178 = fneg fast float %163
  store float %178, ptr %140, align 4, !tbaa !79
  %179 = fneg fast float %164
  store float %179, ptr %146, align 4, !tbaa !79
  %180 = fneg fast float %169
  br label %181

181:                                              ; preds = %176, %175, %161, %12, %100, %44
  %182 = phi float [ %102, %100 ], [ %48, %44 ], [ 0.000000e+00, %12 ], [ %180, %176 ], [ %169, %175 ], [ %169, %161 ]
  ret float %182
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare nofpclass(nan inf) float @acosf(float noundef nofpclass(nan inf)) local_unnamed_addr #10

declare void @psys_vec_rot_to_face(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @cloth_free_modifier(ptr noundef) local_unnamed_addr #3

declare ptr @modifier_new(i32 noundef) local_unnamed_addr #3

declare ptr @CDDM_new(i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare void @DM_add_vert_layer(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare ptr @CDDM_get_verts(ptr noundef) local_unnamed_addr #3

declare ptr @CDDM_get_edges(ptr noundef) local_unnamed_addr #3

declare ptr @DM_get_vert_data_layer(ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @psys_mat_hair_to_object(ptr noundef, ptr noundef, i16 noundef signext, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @CDDM_copy(ptr noundef) local_unnamed_addr #3

declare void @clothModifier_do(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @CDDM_apply_vert_coords(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @realloc_particles(ptr %0, i32 noundef %1) unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !5
  %5 = icmp slt i32 %1, 0
  br i1 %5, label %6, label %22

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.ParticleSettings, ptr %4, i64 0, i32 9
  %8 = load i16, ptr %7, align 4, !tbaa !27
  %9 = icmp eq i16 %8, 2
  br i1 %9, label %10, label %19

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.ParticleSettings, ptr %4, i64 0, i32 8
  %12 = load i16, ptr %11, align 2, !tbaa !28
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.ParticleSettings, ptr %4, i64 0, i32 65
  %16 = load i32, ptr %15, align 4, !tbaa !29
  %17 = mul nsw i32 %16, %16
  %18 = mul nsw i32 %17, %16
  br label %22

19:                                               ; preds = %10, %6
  %20 = getelementptr inbounds %struct.ParticleSettings, ptr %4, i64 0, i32 63
  %21 = load i32, ptr %20, align 4, !tbaa !30
  br label %22

22:                                               ; preds = %2, %14, %19
  %23 = phi i32 [ %18, %14 ], [ %21, %19 ], [ %1, %2 ]
  %24 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 26
  %25 = load i32, ptr %24, align 8, !tbaa !26
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %197, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 5
  %29 = load ptr, ptr %28, align 8, !tbaa !33
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 6
  %33 = load ptr, ptr %32, align 8, !tbaa !34
  %34 = icmp eq ptr %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void %33(ptr noundef nonnull %29) #14
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %28, i8 0, i64 16, i1 false)
  br label %36

36:                                               ; preds = %35, %31, %27
  %37 = icmp eq i32 %23, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %36
  %39 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %40 = sext i32 %23 to i64
  %41 = mul nsw i64 %40, 200
  %42 = tail call ptr %39(i64 noundef %41, ptr noundef nonnull @.str.11) #14
  %43 = icmp eq ptr %42, null
  br i1 %43, label %204, label %44

44:                                               ; preds = %38
  %45 = load ptr, ptr %3, align 8, !tbaa !5
  %46 = getelementptr inbounds %struct.ParticleSettings, ptr %45, i64 0, i32 11
  %47 = load i16, ptr %46, align 8, !tbaa !22
  %48 = icmp eq i16 %47, 3
  br i1 %48, label %49, label %56

49:                                               ; preds = %44
  %50 = load ptr, ptr @MEM_callocN, align 8, !tbaa !44
  %51 = mul nsw i64 %40, 56
  %52 = tail call ptr %50(i64 noundef %51, ptr noundef nonnull @.str.12) #14
  %53 = icmp eq ptr %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %49
  %55 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %55(ptr noundef nonnull %42) #14
  br label %204

56:                                               ; preds = %44, %49, %36
  %57 = phi ptr [ %42, %49 ], [ %42, %44 ], [ null, %36 ]
  %58 = phi ptr [ %52, %49 ], [ null, %44 ], [ null, %36 ]
  %59 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !35
  %61 = icmp eq ptr %60, null
  br i1 %61, label %152, label %62

62:                                               ; preds = %56
  %63 = load i32, ptr %24, align 8, !tbaa !26
  %64 = tail call i32 @llvm.smin.i32(i32 %63, i32 %23)
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %76, label %66

66:                                               ; preds = %62
  %67 = sext i32 %64 to i64
  %68 = mul nsw i64 %67, 200
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %57, ptr nonnull align 8 %60, i64 %68, i1 false)
  %69 = load ptr, ptr %59, align 8, !tbaa !35
  %70 = getelementptr inbounds %struct.ParticleData, ptr %69, i64 0, i32 4
  %71 = load ptr, ptr %70, align 8, !tbaa !117
  %72 = icmp eq ptr %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %66
  %74 = mul nsw i64 %67, 56
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %58, ptr nonnull align 8 %71, i64 %74, i1 false)
  %75 = load ptr, ptr %59, align 8, !tbaa !35
  br label %76

76:                                               ; preds = %66, %73, %62
  %77 = phi ptr [ %69, %66 ], [ %75, %73 ], [ %60, %62 ]
  %78 = getelementptr inbounds %struct.ParticleData, ptr %77, i64 0, i32 3
  %79 = load ptr, ptr %78, align 8, !tbaa !351
  %80 = icmp eq ptr %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %76
  %82 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %82(ptr noundef nonnull %79) #14
  %83 = load ptr, ptr %59, align 8, !tbaa !35
  br label %84

84:                                               ; preds = %81, %76
  %85 = phi ptr [ %83, %81 ], [ %77, %76 ]
  %86 = getelementptr inbounds %struct.ParticleData, ptr %85, i64 0, i32 4
  %87 = load ptr, ptr %86, align 8, !tbaa !117
  %88 = icmp eq ptr %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %84
  %90 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %90(ptr noundef nonnull %87) #14
  br label %91

91:                                               ; preds = %89, %84
  %92 = icmp sgt i32 %64, 0
  br i1 %92, label %93, label %125

93:                                               ; preds = %91
  %94 = and i32 %64, 1
  %95 = icmp eq i32 %64, 1
  br i1 %95, label %116, label %96

96:                                               ; preds = %93
  %97 = and i32 %64, -2
  br label %98

98:                                               ; preds = %112, %96
  %99 = phi ptr [ %57, %96 ], [ %113, %112 ]
  %100 = phi i32 [ 0, %96 ], [ %114, %112 ]
  %101 = getelementptr inbounds %struct.ParticleData, ptr %99, i64 0, i32 3
  %102 = load ptr, ptr %101, align 8, !tbaa !351
  %103 = icmp eq ptr %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %98
  store ptr null, ptr %101, align 8, !tbaa !351
  %105 = getelementptr inbounds %struct.ParticleData, ptr %99, i64 0, i32 5
  store i32 0, ptr %105, align 8, !tbaa !306
  br label %106

106:                                              ; preds = %98, %104
  %107 = getelementptr inbounds %struct.ParticleData, ptr %99, i64 1, i32 3
  %108 = load ptr, ptr %107, align 8, !tbaa !351
  %109 = icmp eq ptr %108, null
  br i1 %109, label %112, label %110

110:                                              ; preds = %106
  store ptr null, ptr %107, align 8, !tbaa !351
  %111 = getelementptr inbounds %struct.ParticleData, ptr %99, i64 1, i32 5
  store i32 0, ptr %111, align 8, !tbaa !306
  br label %112

112:                                              ; preds = %110, %106
  %113 = getelementptr inbounds %struct.ParticleData, ptr %99, i64 2
  %114 = add i32 %100, 2
  %115 = icmp eq i32 %114, %97
  br i1 %115, label %116, label %98, !llvm.loop !547

116:                                              ; preds = %112, %93
  %117 = phi ptr [ %57, %93 ], [ %113, %112 ]
  %118 = icmp eq i32 %94, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %struct.ParticleData, ptr %117, i64 0, i32 3
  %121 = load ptr, ptr %120, align 8, !tbaa !351
  %122 = icmp eq ptr %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %119
  store ptr null, ptr %120, align 8, !tbaa !351
  %124 = getelementptr inbounds %struct.ParticleData, ptr %117, i64 0, i32 5
  store i32 0, ptr %124, align 8, !tbaa !306
  br label %125

125:                                              ; preds = %116, %123, %119, %91
  %126 = load ptr, ptr %59, align 8, !tbaa !35
  %127 = load i32, ptr %24, align 8, !tbaa !26
  %128 = icmp slt i32 %64, %127
  br i1 %128, label %129, label %149

129:                                              ; preds = %125
  %130 = sext i32 %64 to i64
  %131 = getelementptr inbounds %struct.ParticleData, ptr %126, i64 %130
  br label %132

132:                                              ; preds = %129, %142
  %133 = phi i32 [ %143, %142 ], [ %127, %129 ]
  %134 = phi i32 [ %144, %142 ], [ %64, %129 ]
  %135 = phi ptr [ %145, %142 ], [ %131, %129 ]
  %136 = getelementptr inbounds %struct.ParticleData, ptr %135, i64 0, i32 2
  %137 = load ptr, ptr %136, align 8, !tbaa !307
  %138 = icmp eq ptr %137, null
  br i1 %138, label %142, label %139

139:                                              ; preds = %132
  %140 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %140(ptr noundef nonnull %137) #14
  %141 = load i32, ptr %24, align 8, !tbaa !26
  br label %142

142:                                              ; preds = %132, %139
  %143 = phi i32 [ %133, %132 ], [ %141, %139 ]
  %144 = add nsw i32 %134, 1
  %145 = getelementptr inbounds %struct.ParticleData, ptr %135, i64 1
  %146 = icmp slt i32 %144, %143
  br i1 %146, label %132, label %147, !llvm.loop !548

147:                                              ; preds = %142
  %148 = load ptr, ptr %59, align 8, !tbaa !35
  br label %149

149:                                              ; preds = %147, %125
  %150 = phi ptr [ %148, %147 ], [ %126, %125 ]
  %151 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %151(ptr noundef %150) #14
  tail call void @psys_free_pdd(ptr noundef nonnull %0) #14
  br label %152

152:                                              ; preds = %149, %56
  store ptr %57, ptr %59, align 8, !tbaa !35
  store i32 %23, ptr %24, align 8, !tbaa !26
  %153 = icmp ne ptr %58, null
  %154 = icmp sgt i32 %23, 0
  %155 = and i1 %153, %154
  br i1 %155, label %156, label %197

156:                                              ; preds = %152
  %157 = and i32 %23, 7
  %158 = icmp ult i32 %23, 8
  br i1 %158, label %184, label %159

159:                                              ; preds = %156
  %160 = and i32 %23, -8
  br label %161

161:                                              ; preds = %161, %159
  %162 = phi ptr [ %57, %159 ], [ %181, %161 ]
  %163 = phi ptr [ %58, %159 ], [ %179, %161 ]
  %164 = phi i32 [ 0, %159 ], [ %182, %161 ]
  %165 = getelementptr inbounds %struct.BoidParticle, ptr %163, i64 1
  %166 = getelementptr inbounds %struct.ParticleData, ptr %162, i64 0, i32 4
  store ptr %163, ptr %166, align 8, !tbaa !117
  %167 = getelementptr inbounds %struct.BoidParticle, ptr %163, i64 2
  %168 = getelementptr inbounds %struct.ParticleData, ptr %162, i64 1, i32 4
  store ptr %165, ptr %168, align 8, !tbaa !117
  %169 = getelementptr inbounds %struct.BoidParticle, ptr %163, i64 3
  %170 = getelementptr inbounds %struct.ParticleData, ptr %162, i64 2, i32 4
  store ptr %167, ptr %170, align 8, !tbaa !117
  %171 = getelementptr inbounds %struct.BoidParticle, ptr %163, i64 4
  %172 = getelementptr inbounds %struct.ParticleData, ptr %162, i64 3, i32 4
  store ptr %169, ptr %172, align 8, !tbaa !117
  %173 = getelementptr inbounds %struct.BoidParticle, ptr %163, i64 5
  %174 = getelementptr inbounds %struct.ParticleData, ptr %162, i64 4, i32 4
  store ptr %171, ptr %174, align 8, !tbaa !117
  %175 = getelementptr inbounds %struct.BoidParticle, ptr %163, i64 6
  %176 = getelementptr inbounds %struct.ParticleData, ptr %162, i64 5, i32 4
  store ptr %173, ptr %176, align 8, !tbaa !117
  %177 = getelementptr inbounds %struct.BoidParticle, ptr %163, i64 7
  %178 = getelementptr inbounds %struct.ParticleData, ptr %162, i64 6, i32 4
  store ptr %175, ptr %178, align 8, !tbaa !117
  %179 = getelementptr inbounds %struct.BoidParticle, ptr %163, i64 8
  %180 = getelementptr inbounds %struct.ParticleData, ptr %162, i64 7, i32 4
  store ptr %177, ptr %180, align 8, !tbaa !117
  %181 = getelementptr inbounds %struct.ParticleData, ptr %162, i64 8
  %182 = add i32 %164, 8
  %183 = icmp eq i32 %182, %160
  br i1 %183, label %184, label %161, !llvm.loop !549

184:                                              ; preds = %161, %156
  %185 = phi ptr [ %57, %156 ], [ %181, %161 ]
  %186 = phi ptr [ %58, %156 ], [ %179, %161 ]
  %187 = icmp eq i32 %157, 0
  br i1 %187, label %197, label %188

188:                                              ; preds = %184, %188
  %189 = phi ptr [ %194, %188 ], [ %185, %184 ]
  %190 = phi ptr [ %192, %188 ], [ %186, %184 ]
  %191 = phi i32 [ %195, %188 ], [ 0, %184 ]
  %192 = getelementptr inbounds %struct.BoidParticle, ptr %190, i64 1
  %193 = getelementptr inbounds %struct.ParticleData, ptr %189, i64 0, i32 4
  store ptr %190, ptr %193, align 8, !tbaa !117
  %194 = getelementptr inbounds %struct.ParticleData, ptr %189, i64 1
  %195 = add i32 %191, 1
  %196 = icmp eq i32 %195, %157
  br i1 %196, label %197, label %188, !llvm.loop !550

197:                                              ; preds = %184, %188, %152, %22
  %198 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 4
  %199 = load ptr, ptr %198, align 8, !tbaa !43
  %200 = icmp eq ptr %199, null
  br i1 %200, label %204, label %201

201:                                              ; preds = %197
  %202 = load ptr, ptr @MEM_freeN, align 8, !tbaa !44
  tail call void %202(ptr noundef nonnull %199) #14
  store ptr null, ptr %198, align 8, !tbaa !43
  %203 = getelementptr inbounds %struct.ParticleSystem, ptr %0, i64 0, i32 28
  store i32 0, ptr %203, align 8, !tbaa !45
  br label %204

204:                                              ; preds = %197, %201, %38, %54
  ret void
}

declare void @psys_free_pdd(ptr noundef) local_unnamed_addr #3

declare void @BLI_init_threads(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal noalias ptr @distribute_threads_exec_cb(ptr nocapture noundef readonly %0) #2 {
  %2 = load ptr, ptr %0, align 8, !tbaa !90
  %3 = getelementptr inbounds %struct.ParticleSimulationData, ptr %2, i64 0, i32 2
  %4 = load ptr, ptr %3, align 8, !tbaa !101
  %5 = getelementptr inbounds %struct.ParticleThreadContext, ptr %2, i64 0, i32 13
  %6 = load i32, ptr %5, align 4, !tbaa !470
  %7 = icmp eq i32 %6, 4
  br i1 %7, label %8, label %45

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 28
  %10 = load i32, ptr %9, align 8, !tbaa !45
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %65

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 4
  %14 = load ptr, ptr %13, align 8, !tbaa !43
  %15 = getelementptr inbounds %struct.ParticleThread, ptr %0, i64 0, i32 1
  %16 = getelementptr inbounds %struct.ParticleThread, ptr %0, i64 0, i32 3
  %17 = getelementptr inbounds %struct.ParticleThread, ptr %0, i64 0, i32 4
  %18 = zext i32 %10 to i64
  br label %19

19:                                               ; preds = %12, %41
  %20 = phi i64 [ 0, %12 ], [ %42, %41 ]
  %21 = phi ptr [ %14, %12 ], [ %43, %41 ]
  %22 = load ptr, ptr %0, align 8, !tbaa !90
  %23 = getelementptr inbounds %struct.ParticleThreadContext, ptr %22, i64 0, i32 11
  %24 = load ptr, ptr %23, align 8, !tbaa !107
  %25 = icmp eq ptr %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %19
  %27 = load ptr, ptr %15, align 8, !tbaa !110
  %28 = getelementptr inbounds i32, ptr %24, i64 %20
  %29 = load i32, ptr %28, align 4, !tbaa !68
  %30 = shl nsw i32 %29, 1
  tail call void @BLI_rng_skip(ptr noundef %27, i32 noundef %30) #14
  br label %31

31:                                               ; preds = %26, %19
  %32 = load i32, ptr %16, align 8, !tbaa !92
  %33 = trunc i64 %20 to i32
  %34 = add nsw i32 %32, %33
  %35 = load i32, ptr %17, align 4, !tbaa !93
  %36 = srem i32 %34, %35
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %31
  tail call fastcc void @distribute_threads_exec(ptr noundef nonnull %0, ptr noundef null, ptr noundef %21, i32 noundef %33)
  br label %41

39:                                               ; preds = %31
  %40 = load ptr, ptr %15, align 8, !tbaa !110
  tail call void @BLI_rng_skip(ptr noundef %40, i32 noundef 2) #14
  br label %41

41:                                               ; preds = %38, %39
  %42 = add nuw nsw i64 %20, 1
  %43 = getelementptr inbounds %struct.ChildParticle, ptr %21, i64 1
  %44 = icmp eq i64 %42, %18
  br i1 %44, label %65, label %19, !llvm.loop !551

45:                                               ; preds = %1
  %46 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 26
  %47 = load i32, ptr %46, align 8, !tbaa !26
  %48 = getelementptr inbounds %struct.ParticleThread, ptr %0, i64 0, i32 3
  %49 = load i32, ptr %48, align 8, !tbaa !92
  %50 = icmp slt i32 %49, %47
  br i1 %50, label %51, label %65

51:                                               ; preds = %45
  %52 = getelementptr inbounds %struct.ParticleSystem, ptr %4, i64 0, i32 3
  %53 = load ptr, ptr %52, align 8, !tbaa !35
  %54 = sext i32 %49 to i64
  %55 = getelementptr inbounds %struct.ParticleData, ptr %53, i64 %54
  %56 = getelementptr inbounds %struct.ParticleThread, ptr %0, i64 0, i32 4
  br label %57

57:                                               ; preds = %51, %57
  %58 = phi i32 [ %49, %51 ], [ %61, %57 ]
  %59 = phi ptr [ %55, %51 ], [ %63, %57 ]
  tail call fastcc void @distribute_threads_exec(ptr noundef nonnull %0, ptr noundef %59, ptr noundef null, i32 noundef %58)
  %60 = load i32, ptr %56, align 4, !tbaa !93
  %61 = add nsw i32 %60, %58
  %62 = sext i32 %60 to i64
  %63 = getelementptr inbounds %struct.ParticleData, ptr %59, i64 %62
  %64 = icmp slt i32 %61, %47
  br i1 %64, label %57, label %65, !llvm.loop !552

65:                                               ; preds = %57, %41, %45, %8
  ret ptr null
}

declare void @BLI_insert_thread(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BLI_end_threads(ptr noundef) local_unnamed_addr #3

declare ptr @CDDM_from_mesh(ptr noundef) local_unnamed_addr #3

declare void @psys_particle_on_dm(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, float noundef nofpclass(nan inf), ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @BKE_mesh_orco_verts_transform(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare zeroext i8 @CustomData_has_layer(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @BKE_mesh_orco_verts_get(ptr noundef) local_unnamed_addr #3

declare nofpclass(nan inf) float @area_quad_v3(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare nofpclass(nan inf) float @area_tri_v3(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @psys_cache_vgroup(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @qsort_r(ptr noundef, i64 noundef, i64 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @distribute_compare_orig_index(ptr noundef readonly %0, ptr noundef readonly %1, ptr nocapture noundef readonly %2) #11 {
  %4 = load i32, ptr %0, align 4, !tbaa !68
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds i32, ptr %2, i64 %5
  %7 = load i32, ptr %6, align 4, !tbaa !68
  %8 = load i32, ptr %1, align 4, !tbaa !68
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i32, ptr %2, i64 %9
  %11 = load i32, ptr %10, align 4, !tbaa !68
  %12 = icmp slt i32 %7, %11
  br i1 %12, label %20, label %13

13:                                               ; preds = %3
  %14 = icmp eq i32 %7, %11
  br i1 %14, label %15, label %20

15:                                               ; preds = %13
  %16 = icmp ult ptr %0, %1
  br i1 %16, label %20, label %17

17:                                               ; preds = %15
  %18 = icmp ne ptr %0, %1
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %13, %17, %15, %3
  %21 = phi i32 [ -1, %3 ], [ -1, %15 ], [ %19, %17 ], [ 1, %13 ]
  ret i32 %21
}

declare void @BLI_array_randomize(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare i32 @psys_render_simplify_distribution(ptr noundef, i32 noundef) local_unnamed_addr #3

declare ptr @BLI_rng_new(i32 noundef) local_unnamed_addr #3

declare void @minmax_v3v3_v3(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare zeroext i8 @isect_axial_line_tri_v3(i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare nofpclass(nan inf) float @BLI_rng_get_float(ptr noundef) local_unnamed_addr #3

declare void @BLI_jitterate1(ptr noundef, ptr noundef, i32 noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

declare void @BLI_jitterate2(ptr noundef, ptr noundef, i32 noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

declare nofpclass(nan inf) double @BLI_rng_get_double(ptr noundef) local_unnamed_addr #3

declare void @BLI_rng_skip(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @distribute_threads_exec(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) unnamed_addr #2 {
  %5 = alloca [4 x [3 x float]], align 16
  %6 = alloca [3 x float], align 4
  %7 = alloca [4 x [3 x float]], align 16
  %8 = alloca [3 x float], align 4
  %9 = alloca [4 x [3 x float]], align 16
  %10 = alloca [3 x float], align 4
  %11 = alloca [4 x [3 x float]], align 16
  %12 = alloca [3 x float], align 8
  %13 = alloca [3 x float], align 8
  %14 = alloca [3 x float], align 4
  %15 = alloca [3 x float], align 8
  %16 = alloca [3 x float], align 8
  %17 = alloca [3 x float], align 4
  %18 = alloca float, align 4
  %19 = alloca [10 x %struct.KDTreeNearest], align 16
  %20 = alloca [10 x i32], align 16
  %21 = alloca [10 x float], align 16
  %22 = load ptr, ptr %0, align 8, !tbaa !90
  %23 = getelementptr inbounds %struct.ParticleSimulationData, ptr %22, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !399
  %25 = getelementptr inbounds %struct.ParticleThreadContext, ptr %22, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !85
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %13) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %14) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %15) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %16) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %17) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #14
  %27 = getelementptr inbounds %struct.ParticleThreadContext, ptr %22, i64 0, i32 13
  %28 = load i32, ptr %27, align 4, !tbaa !470
  %29 = getelementptr inbounds %struct.ParticleThreadContext, ptr %22, i64 0, i32 14
  %30 = load i32, ptr %29, align 8, !tbaa !471
  %31 = getelementptr inbounds %struct.ParticleThreadContext, ptr %22, i64 0, i32 15
  %32 = load i32, ptr %31, align 4, !tbaa !472
  %33 = icmp eq i32 %28, 0
  br i1 %33, label %34, label %42

34:                                               ; preds = %4
  %35 = getelementptr inbounds %struct.ParticleThreadContext, ptr %22, i64 0, i32 10
  %36 = load ptr, ptr %35, align 8, !tbaa !106
  %37 = sext i32 %3 to i64
  %38 = getelementptr inbounds i32, ptr %36, i64 %37
  %39 = load i32, ptr %38, align 4, !tbaa !68
  %40 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 9
  store i32 %39, ptr %40, align 8, !tbaa !71
  %41 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 11
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, ptr %41, align 8, !tbaa !79
  br label %479

42:                                               ; preds = %4
  %43 = icmp eq i32 %28, 2
  %44 = icmp ult i32 %28, 3
  br i1 %44, label %45, label %248

45:                                               ; preds = %42
  %46 = getelementptr inbounds %struct.ParticleThreadContext, ptr %22, i64 0, i32 10
  %47 = load ptr, ptr %46, align 8, !tbaa !106
  %48 = sext i32 %3 to i64
  %49 = getelementptr inbounds i32, ptr %47, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !68
  %51 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 9
  store i32 %50, ptr %51, align 8, !tbaa !71
  %52 = getelementptr inbounds %struct.DerivedMesh, ptr %26, i64 0, i32 48
  %53 = load ptr, ptr %52, align 8, !tbaa !434
  %54 = tail call ptr %53(ptr noundef %26, i32 noundef %50, i32 noundef 4) #14
  switch i32 %32, label %141 [
    i32 0, label %55
    i32 1, label %113
  ]

55:                                               ; preds = %45
  %56 = getelementptr inbounds %struct.ParticleThreadContext, ptr %22, i64 0, i32 12
  %57 = load i32, ptr %56, align 8, !tbaa !468
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %68

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.MFace, ptr %54, i64 0, i32 3
  %61 = load i32, ptr %60, align 4, !tbaa !255
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 11
  br i1 %62, label %67, label %64

64:                                               ; preds = %59
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %11) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %12) #14
  store <8 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %11, align 16, !tbaa !79
  %65 = getelementptr inbounds [4 x [3 x float]], ptr %11, i64 0, i64 2, i64 2
  store <2 x float> <float 5.000000e-01, float 5.000000e-01>, ptr %12, align 8, !tbaa !79
  %66 = getelementptr inbounds [3 x float], ptr %12, i64 0, i64 2
  store float 0.000000e+00, ptr %66, align 8, !tbaa !79
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, ptr %65, align 16, !tbaa !79
  call void @interp_weights_poly_v3(ptr noundef nonnull %63, ptr noundef nonnull %11, i32 noundef 4, ptr noundef nonnull %12) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %12) #14
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %11) #14
  br label %141

67:                                               ; preds = %59
  tail call fastcc void @psys_uv_to_w(float noundef nofpclass(nan inf) 0x3FD5555560000000, float noundef nofpclass(nan inf) 0x3FD5555560000000, i32 noundef 0, ptr noundef nonnull %63)
  br label %141

68:                                               ; preds = %55
  %69 = getelementptr inbounds %struct.ParticleThreadContext, ptr %22, i64 0, i32 7
  %70 = load ptr, ptr %69, align 8, !tbaa !104
  %71 = sext i32 %50 to i64
  %72 = getelementptr inbounds float, ptr %70, i64 %71
  %73 = load float, ptr %72, align 4, !tbaa !79
  %74 = sitofp i32 %57 to float
  %75 = frem fast float %73, %74
  store float %75, ptr %72, align 4, !tbaa !79
  %76 = getelementptr inbounds %struct.ParticleThreadContext, ptr %22, i64 0, i32 6
  %77 = load ptr, ptr %76, align 8, !tbaa !103
  %78 = fptosi float %75 to i32
  %79 = shl nsw i32 %78, 1
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds float, ptr %77, i64 %80
  %82 = load float, ptr %81, align 4, !tbaa !79
  %83 = or i32 %79, 1
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds float, ptr %77, i64 %84
  %86 = load float, ptr %85, align 4, !tbaa !79
  %87 = getelementptr inbounds %struct.MFace, ptr %54, i64 0, i32 3
  %88 = load i32, ptr %87, align 4, !tbaa !255
  %89 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 11
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %9) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %10) #14
  %90 = icmp eq i32 %88, 0
  br i1 %90, label %91, label %102

91:                                               ; preds = %68
  %92 = fadd fast float %86, %82
  %93 = fcmp fast ogt float %92, 1.000000e+00
  %94 = fsub fast float 1.000000e+00, %86
  %95 = fsub fast float 1.000000e+00, %82
  %96 = select i1 %93, float %94, float %86
  %97 = select i1 %93, float %82, float %95
  store <8 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %9, align 16, !tbaa !79
  %98 = getelementptr inbounds [4 x [3 x float]], ptr %9, i64 0, i64 2, i64 2
  store float 0.000000e+00, ptr %98, align 16, !tbaa !79
  store float %97, ptr %10, align 4, !tbaa !79
  %99 = getelementptr inbounds [3 x float], ptr %10, i64 0, i64 1
  store float %96, ptr %99, align 4, !tbaa !79
  %100 = getelementptr inbounds [3 x float], ptr %10, i64 0, i64 2
  store float 0.000000e+00, ptr %100, align 4, !tbaa !79
  call void @interp_weights_poly_v3(ptr noundef nonnull %89, ptr noundef nonnull %9, i32 noundef 3, ptr noundef nonnull %10) #14
  %101 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 11, i64 3
  store float 0.000000e+00, ptr %101, align 4, !tbaa !79
  br label %108

102:                                              ; preds = %68
  store <8 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %9, align 16, !tbaa !79
  %103 = getelementptr inbounds [4 x [3 x float]], ptr %9, i64 0, i64 2, i64 2
  store float 0.000000e+00, ptr %103, align 16, !tbaa !79
  store float %82, ptr %10, align 4, !tbaa !79
  %104 = getelementptr inbounds [3 x float], ptr %10, i64 0, i64 1
  store float %86, ptr %104, align 4, !tbaa !79
  %105 = getelementptr inbounds [3 x float], ptr %10, i64 0, i64 2
  store float 0.000000e+00, ptr %105, align 4, !tbaa !79
  %106 = getelementptr inbounds [4 x [3 x float]], ptr %9, i64 0, i64 3
  store <2 x float> <float 0.000000e+00, float 1.000000e+00>, ptr %106, align 4, !tbaa !79
  %107 = getelementptr inbounds [4 x [3 x float]], ptr %9, i64 0, i64 3, i64 2
  store float 0.000000e+00, ptr %107, align 4, !tbaa !79
  call void @interp_weights_poly_v3(ptr noundef nonnull %89, ptr noundef nonnull %9, i32 noundef 4, ptr noundef nonnull %10) #14
  br label %108

108:                                              ; preds = %102, %91
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %10) #14
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %9) #14
  %109 = load ptr, ptr %69, align 8, !tbaa !104
  %110 = getelementptr inbounds float, ptr %109, i64 %71
  %111 = load float, ptr %110, align 4, !tbaa !79
  %112 = fadd fast float %111, 1.000000e+00
  store float %112, ptr %110, align 4, !tbaa !79
  br label %141

113:                                              ; preds = %45
  %114 = getelementptr inbounds %struct.ParticleThread, ptr %0, i64 0, i32 1
  %115 = load ptr, ptr %114, align 8, !tbaa !110
  %116 = tail call fast nofpclass(nan inf) float @BLI_rng_get_float(ptr noundef %115) #14
  %117 = load ptr, ptr %114, align 8, !tbaa !110
  %118 = tail call fast nofpclass(nan inf) float @BLI_rng_get_float(ptr noundef %117) #14
  %119 = getelementptr inbounds %struct.MFace, ptr %54, i64 0, i32 3
  %120 = load i32, ptr %119, align 4, !tbaa !255
  %121 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 11
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %7) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %8) #14
  %122 = icmp eq i32 %120, 0
  br i1 %122, label %123, label %134

123:                                              ; preds = %113
  %124 = fadd fast float %118, %116
  %125 = fcmp fast ogt float %124, 1.000000e+00
  %126 = fsub fast float 1.000000e+00, %118
  %127 = fsub fast float 1.000000e+00, %116
  %128 = select i1 %125, float %126, float %118
  %129 = select i1 %125, float %116, float %127
  store <8 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %7, align 16, !tbaa !79
  %130 = getelementptr inbounds [4 x [3 x float]], ptr %7, i64 0, i64 2, i64 2
  store float 0.000000e+00, ptr %130, align 16, !tbaa !79
  store float %129, ptr %8, align 4, !tbaa !79
  %131 = getelementptr inbounds [3 x float], ptr %8, i64 0, i64 1
  store float %128, ptr %131, align 4, !tbaa !79
  %132 = getelementptr inbounds [3 x float], ptr %8, i64 0, i64 2
  store float 0.000000e+00, ptr %132, align 4, !tbaa !79
  call void @interp_weights_poly_v3(ptr noundef nonnull %121, ptr noundef nonnull %7, i32 noundef 3, ptr noundef nonnull %8) #14
  %133 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 11, i64 3
  store float 0.000000e+00, ptr %133, align 4, !tbaa !79
  br label %140

134:                                              ; preds = %113
  store <8 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %7, align 16, !tbaa !79
  %135 = getelementptr inbounds [4 x [3 x float]], ptr %7, i64 0, i64 2, i64 2
  store float 0.000000e+00, ptr %135, align 16, !tbaa !79
  store float %116, ptr %8, align 4, !tbaa !79
  %136 = getelementptr inbounds [3 x float], ptr %8, i64 0, i64 1
  store float %118, ptr %136, align 4, !tbaa !79
  %137 = getelementptr inbounds [3 x float], ptr %8, i64 0, i64 2
  store float 0.000000e+00, ptr %137, align 4, !tbaa !79
  %138 = getelementptr inbounds [4 x [3 x float]], ptr %7, i64 0, i64 3
  store <2 x float> <float 0.000000e+00, float 1.000000e+00>, ptr %138, align 4, !tbaa !79
  %139 = getelementptr inbounds [4 x [3 x float]], ptr %7, i64 0, i64 3, i64 2
  store float 0.000000e+00, ptr %139, align 4, !tbaa !79
  call void @interp_weights_poly_v3(ptr noundef nonnull %121, ptr noundef nonnull %7, i32 noundef 4, ptr noundef nonnull %8) #14
  br label %140

140:                                              ; preds = %134, %123
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %8) #14
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %7) #14
  br label %141

141:                                              ; preds = %67, %64, %108, %45, %140
  %142 = phi i1 [ true, %45 ], [ false, %140 ], [ true, %64 ], [ true, %67 ], [ true, %108 ]
  %143 = phi i32 [ 2, %45 ], [ 0, %140 ], [ 2, %64 ], [ 2, %67 ], [ 2, %108 ]
  %144 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 12
  store float 0.000000e+00, ptr %144, align 8, !tbaa !121
  br i1 %43, label %145, label %478

145:                                              ; preds = %141
  %146 = getelementptr inbounds %struct.DerivedMesh, ptr %26, i64 0, i32 50
  %147 = load ptr, ptr %146, align 8, !tbaa !60
  %148 = call ptr %147(ptr noundef nonnull %26, i32 noundef 0) #14
  %149 = getelementptr inbounds %struct.DerivedMesh, ptr %26, i64 0, i32 25
  %150 = load ptr, ptr %149, align 8, !tbaa !61
  %151 = call i32 %150(ptr noundef nonnull %26) #14
  %152 = getelementptr inbounds %struct.ParticleData, ptr %1, i64 0, i32 11
  call void @psys_interpolate_face(ptr noundef %148, ptr noundef %54, ptr noundef null, ptr noundef null, ptr noundef nonnull %152, ptr noundef nonnull %15, ptr noundef nonnull %13, ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef null) #14
  %153 = load <2 x float>, ptr %13, align 8, !tbaa !79
  %154 = fmul fast <2 x float> %153, %153
  %155 = shufflevector <2 x float> %154, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %156 = fadd fast <2 x float> %155, %154
  %157 = extractelement <2 x float> %156, i64 0
  %158 = getelementptr inbounds float, ptr %13, i64 2
  %159 = load float, ptr %158, align 8, !tbaa !79
  %160 = fmul fast float %159, %159
  %161 = fadd fast float %157, %160
  %162 = fcmp fast ogt float %161, 0x38AA95A5C0000000
  br i1 %162, label %163, label %172

163:                                              ; preds = %145
  %164 = call fast float @llvm.sqrt.f32(float %161)
  %165 = fdiv fast float 1.000000e+00, %164
  %166 = insertelement <2 x float> poison, float %165, i64 0
  %167 = shufflevector <2 x float> %166, <2 x float> poison, <2 x i32> zeroinitializer
  %168 = fmul fast <2 x float> %167, %153
  %169 = fmul fast float %165, %159
  %170 = fmul fast <2 x float> %168, <float -1.000000e+02, float -1.000000e+02>
  %171 = fmul fast float %169, -1.000000e+02
  br label %172

172:                                              ; preds = %145, %163
  %173 = phi float [ %171, %163 ], [ -0.000000e+00, %145 ]
  %174 = phi <2 x float> [ %170, %163 ], [ <float -0.000000e+00, float -0.000000e+00>, %145 ]
  store <2 x float> %174, ptr %13, align 8, !tbaa !79
  store float %173, ptr %158, align 8, !tbaa !79
  %175 = load <2 x float>, ptr %15, align 8, !tbaa !79
  %176 = fadd fast <2 x float> %175, %174
  store <2 x float> %176, ptr %16, align 8, !tbaa !79
  %177 = getelementptr inbounds float, ptr %15, i64 2
  %178 = load float, ptr %177, align 8, !tbaa !79
  %179 = fadd fast float %178, %173
  %180 = getelementptr inbounds float, ptr %16, i64 2
  store float %179, ptr %180, align 8, !tbaa !79
  %181 = getelementptr inbounds %struct.DerivedMesh, ptr %26, i64 0, i32 52
  %182 = load ptr, ptr %181, align 8, !tbaa !63
  %183 = call ptr %182(ptr noundef nonnull %26, i32 noundef 4) #14
  %184 = icmp sgt i32 %151, 0
  br i1 %184, label %185, label %476

185:                                              ; preds = %172, %227
  %186 = phi float [ %229, %227 ], [ 2.000000e+00, %172 ]
  %187 = phi i32 [ %230, %227 ], [ 0, %172 ]
  %188 = phi ptr [ %231, %227 ], [ %183, %172 ]
  %189 = phi i32 [ %228, %227 ], [ 0, %172 ]
  %190 = load i32, ptr %51, align 8, !tbaa !71
  %191 = icmp eq i32 %187, %190
  br i1 %191, label %227, label %192

192:                                              ; preds = %185
  %193 = load i32, ptr %188, align 4, !tbaa !251
  %194 = zext i32 %193 to i64
  %195 = getelementptr inbounds %struct.MVert, ptr %148, i64 %194
  %196 = getelementptr inbounds %struct.MFace, ptr %188, i64 0, i32 1
  %197 = load i32, ptr %196, align 4, !tbaa !253
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds %struct.MVert, ptr %148, i64 %198
  %200 = getelementptr inbounds %struct.MFace, ptr %188, i64 0, i32 2
  %201 = load i32, ptr %200, align 4, !tbaa !254
  %202 = zext i32 %201 to i64
  %203 = getelementptr inbounds %struct.MVert, ptr %148, i64 %202
  %204 = call zeroext i8 @isect_line_tri_v3(ptr noundef nonnull %15, ptr noundef nonnull %16, ptr noundef %199, ptr noundef %203, ptr noundef %195, ptr noundef nonnull %18, ptr noundef null) #14
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %211, label %206

206:                                              ; preds = %192
  %207 = load float, ptr %18, align 4, !tbaa !79
  %208 = fcmp fast olt float %207, %186
  br i1 %208, label %209, label %211

209:                                              ; preds = %206
  %210 = fmul fast float %207, 5.000000e+01
  store float %210, ptr %144, align 8, !tbaa !121
  br label %211

211:                                              ; preds = %206, %209, %192
  %212 = phi i32 [ 1, %209 ], [ %189, %206 ], [ %189, %192 ]
  %213 = phi float [ %207, %209 ], [ %186, %206 ], [ %186, %192 ]
  %214 = getelementptr inbounds %struct.MFace, ptr %188, i64 0, i32 3
  %215 = load i32, ptr %214, align 4, !tbaa !255
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %227, label %217

217:                                              ; preds = %211
  %218 = zext i32 %215 to i64
  %219 = getelementptr inbounds %struct.MVert, ptr %148, i64 %218
  %220 = call zeroext i8 @isect_line_tri_v3(ptr noundef nonnull %15, ptr noundef nonnull %16, ptr noundef nonnull %219, ptr noundef %195, ptr noundef %203, ptr noundef nonnull %18, ptr noundef null) #14
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %227, label %222

222:                                              ; preds = %217
  %223 = load float, ptr %18, align 4, !tbaa !79
  %224 = fcmp fast olt float %223, %213
  br i1 %224, label %225, label %227

225:                                              ; preds = %222
  %226 = fmul fast float %223, 5.000000e+01
  store float %226, ptr %144, align 8, !tbaa !121
  br label %227

227:                                              ; preds = %211, %222, %225, %217, %185
  %228 = phi i32 [ %189, %185 ], [ 1, %225 ], [ %212, %222 ], [ %212, %217 ], [ %212, %211 ]
  %229 = phi float [ %186, %185 ], [ %223, %225 ], [ %213, %222 ], [ %213, %217 ], [ %213, %211 ]
  %230 = add nuw nsw i32 %187, 1
  %231 = getelementptr inbounds %struct.MFace, ptr %188, i64 1
  %232 = icmp eq i32 %230, %151
  br i1 %232, label %233, label %185, !llvm.loop !553

233:                                              ; preds = %227
  %234 = icmp eq i32 %228, 0
  br i1 %234, label %476, label %235

235:                                              ; preds = %233
  switch i32 %32, label %478 [
    i32 0, label %236
    i32 1, label %246
  ]

236:                                              ; preds = %235
  %237 = getelementptr inbounds %struct.ParticleThreadContext, ptr %22, i64 0, i32 6
  %238 = load ptr, ptr %237, align 8, !tbaa !103
  %239 = getelementptr inbounds %struct.ParticleThreadContext, ptr %22, i64 0, i32 12
  %240 = load i32, ptr %239, align 8, !tbaa !468
  %241 = shl nsw i32 %240, 1
  %242 = srem i32 %3, %241
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds float, ptr %238, i64 %243
  %245 = load float, ptr %244, align 4, !tbaa !79
  br label %472

246:                                              ; preds = %235
  %247 = call fast nofpclass(nan inf) float @BLI_frand() #14
  br label %472

248:                                              ; preds = %42
  %249 = icmp eq i32 %28, 4
  br i1 %249, label %250, label %479

250:                                              ; preds = %248
  %251 = getelementptr inbounds %struct.ParticleThreadContext, ptr %22, i64 0, i32 10
  %252 = load ptr, ptr %251, align 8, !tbaa !106
  %253 = sext i32 %3 to i64
  %254 = getelementptr inbounds i32, ptr %252, i64 %253
  %255 = load i32, ptr %254, align 4, !tbaa !68
  %256 = icmp sgt i32 %255, -1
  br i1 %256, label %260, label %257

257:                                              ; preds = %250
  store i32 0, ptr %2, align 4, !tbaa !404
  %258 = getelementptr inbounds %struct.ChildParticle, ptr %2, i64 0, i32 4
  %259 = getelementptr inbounds %struct.ChildParticle, ptr %2, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %259, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %258, i8 0, i64 16, i1 false)
  br label %483

260:                                              ; preds = %250
  %261 = getelementptr inbounds %struct.DerivedMesh, ptr %26, i64 0, i32 48
  %262 = load ptr, ptr %261, align 8, !tbaa !434
  %263 = tail call ptr %262(ptr noundef %26, i32 noundef %255, i32 noundef 4) #14
  %264 = getelementptr inbounds %struct.ParticleThread, ptr %0, i64 0, i32 1
  %265 = load ptr, ptr %264, align 8, !tbaa !110
  %266 = tail call fast nofpclass(nan inf) float @BLI_rng_get_float(ptr noundef %265) #14
  %267 = load ptr, ptr %264, align 8, !tbaa !110
  %268 = tail call fast nofpclass(nan inf) float @BLI_rng_get_float(ptr noundef %267) #14
  %269 = getelementptr inbounds %struct.MFace, ptr %263, i64 0, i32 3
  %270 = load i32, ptr %269, align 4, !tbaa !255
  %271 = getelementptr inbounds %struct.ChildParticle, ptr %2, i64 0, i32 4
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %5) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #14
  %272 = icmp eq i32 %270, 0
  br i1 %272, label %273, label %284

273:                                              ; preds = %260
  %274 = fadd fast float %268, %266
  %275 = fcmp fast ogt float %274, 1.000000e+00
  %276 = fsub fast float 1.000000e+00, %268
  %277 = fsub fast float 1.000000e+00, %266
  %278 = select i1 %275, float %276, float %268
  %279 = select i1 %275, float %266, float %277
  store <8 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %5, align 16, !tbaa !79
  %280 = getelementptr inbounds [4 x [3 x float]], ptr %5, i64 0, i64 2, i64 2
  store float 0.000000e+00, ptr %280, align 16, !tbaa !79
  store float %279, ptr %6, align 4, !tbaa !79
  %281 = getelementptr inbounds [3 x float], ptr %6, i64 0, i64 1
  store float %278, ptr %281, align 4, !tbaa !79
  %282 = getelementptr inbounds [3 x float], ptr %6, i64 0, i64 2
  store float 0.000000e+00, ptr %282, align 4, !tbaa !79
  call void @interp_weights_poly_v3(ptr noundef nonnull %271, ptr noundef nonnull %5, i32 noundef 3, ptr noundef nonnull %6) #14
  %283 = getelementptr inbounds %struct.ChildParticle, ptr %2, i64 0, i32 4, i64 3
  store float 0.000000e+00, ptr %283, align 4, !tbaa !79
  br label %290

284:                                              ; preds = %260
  store <8 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %5, align 16, !tbaa !79
  %285 = getelementptr inbounds [4 x [3 x float]], ptr %5, i64 0, i64 2, i64 2
  store float 0.000000e+00, ptr %285, align 16, !tbaa !79
  store float %266, ptr %6, align 4, !tbaa !79
  %286 = getelementptr inbounds [3 x float], ptr %6, i64 0, i64 1
  store float %268, ptr %286, align 4, !tbaa !79
  %287 = getelementptr inbounds [3 x float], ptr %6, i64 0, i64 2
  store float 0.000000e+00, ptr %287, align 4, !tbaa !79
  %288 = getelementptr inbounds [4 x [3 x float]], ptr %5, i64 0, i64 3
  store <2 x float> <float 0.000000e+00, float 1.000000e+00>, ptr %288, align 4, !tbaa !79
  %289 = getelementptr inbounds [4 x [3 x float]], ptr %5, i64 0, i64 3, i64 2
  store float 0.000000e+00, ptr %289, align 4, !tbaa !79
  call void @interp_weights_poly_v3(ptr noundef nonnull %271, ptr noundef nonnull %5, i32 noundef 4, ptr noundef nonnull %6) #14
  br label %290

290:                                              ; preds = %284, %273
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #14
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %5) #14
  %291 = load ptr, ptr %251, align 8, !tbaa !106
  %292 = getelementptr inbounds i32, ptr %291, i64 %253
  %293 = load i32, ptr %292, align 4, !tbaa !68
  store i32 %293, ptr %2, align 4, !tbaa !404
  %294 = getelementptr inbounds %struct.ParticleThreadContext, ptr %22, i64 0, i32 3
  %295 = load ptr, ptr %294, align 8, !tbaa !109
  %296 = icmp eq ptr %295, null
  br i1 %296, label %483, label %297

297:                                              ; preds = %290
  call void @llvm.lifetime.start.p0(i64 200, ptr nonnull %19) #14
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %20) #14
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %21) #14
  %298 = getelementptr inbounds %struct.ChildParticle, ptr %2, i64 0, i32 5
  %299 = load float, ptr %298, align 4, !tbaa !554
  call void @psys_particle_on_dm(ptr noundef nonnull %26, i32 noundef %30, i32 noundef %293, i32 noundef -2, ptr noundef nonnull %271, float noundef nofpclass(nan inf) %299, ptr noundef nonnull %15, ptr noundef nonnull %17, ptr noundef null, ptr noundef null, ptr noundef nonnull %14, ptr noundef null) #14
  %300 = getelementptr inbounds %struct.Object, ptr %24, i64 0, i32 19
  %301 = load ptr, ptr %300, align 8, !tbaa !49
  call void @BKE_mesh_orco_verts_transform(ptr noundef %301, ptr noundef nonnull %14, i32 noundef 1, i32 noundef 1) #14
  %302 = load ptr, ptr %294, align 8, !tbaa !109
  %303 = call i32 @BLI_kdtree_find_nearest_n__normal(ptr noundef %302, ptr noundef nonnull %14, ptr noundef null, ptr noundef nonnull %19, i32 noundef 3) #14
  %304 = icmp sgt i32 %303, 0
  br i1 %304, label %305, label %363

305:                                              ; preds = %297
  %306 = add nsw i32 %303, -1
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds [10 x %struct.KDTreeNearest], ptr %19, i64 0, i64 %307, i32 1
  %309 = load float, ptr %308, align 4, !tbaa !555
  %310 = zext i32 %303 to i64
  %311 = icmp ult i32 %303, 5
  br i1 %311, label %312, label %315

312:                                              ; preds = %323, %305
  %313 = phi i64 [ 0, %305 ], [ %319, %323 ]
  %314 = fdiv fast float 1.000000e+00, %309
  br label %373

315:                                              ; preds = %305
  %316 = and i64 %310, 3
  %317 = icmp eq i64 %316, 0
  %318 = select i1 %317, i64 4, i64 %316
  %319 = sub nsw i64 %310, %318
  %320 = insertelement <4 x float> poison, float %309, i64 0
  %321 = shufflevector <4 x float> %320, <4 x float> poison, <4 x i32> zeroinitializer
  %322 = fdiv fast <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %321
  br label %323

323:                                              ; preds = %323, %315
  %324 = phi i64 [ 0, %315 ], [ %359, %323 ]
  %325 = or i64 %324, 1
  %326 = or i64 %324, 2
  %327 = or i64 %324, 3
  %328 = getelementptr inbounds [10 x %struct.KDTreeNearest], ptr %19, i64 0, i64 %324
  %329 = getelementptr inbounds [10 x %struct.KDTreeNearest], ptr %19, i64 0, i64 %325
  %330 = getelementptr inbounds [10 x %struct.KDTreeNearest], ptr %19, i64 0, i64 %326
  %331 = getelementptr inbounds [10 x %struct.KDTreeNearest], ptr %19, i64 0, i64 %327
  %332 = load i32, ptr %328, align 16, !tbaa !557
  %333 = load i32, ptr %329, align 4, !tbaa !557
  %334 = load i32, ptr %330, align 8, !tbaa !557
  %335 = load i32, ptr %331, align 4, !tbaa !557
  %336 = insertelement <4 x i32> poison, i32 %332, i64 0
  %337 = insertelement <4 x i32> %336, i32 %333, i64 1
  %338 = insertelement <4 x i32> %337, i32 %334, i64 2
  %339 = insertelement <4 x i32> %338, i32 %335, i64 3
  %340 = getelementptr inbounds [10 x i32], ptr %20, i64 0, i64 %324
  store <4 x i32> %339, ptr %340, align 16, !tbaa !68
  %341 = getelementptr inbounds [10 x %struct.KDTreeNearest], ptr %19, i64 0, i64 %324, i32 1
  %342 = getelementptr inbounds [10 x %struct.KDTreeNearest], ptr %19, i64 0, i64 %325, i32 1
  %343 = getelementptr inbounds [10 x %struct.KDTreeNearest], ptr %19, i64 0, i64 %326, i32 1
  %344 = getelementptr inbounds [10 x %struct.KDTreeNearest], ptr %19, i64 0, i64 %327, i32 1
  %345 = load float, ptr %341, align 4, !tbaa !555
  %346 = load float, ptr %342, align 8, !tbaa !555
  %347 = load float, ptr %343, align 4, !tbaa !555
  %348 = load float, ptr %344, align 16, !tbaa !555
  %349 = insertelement <4 x float> poison, float %345, i64 0
  %350 = insertelement <4 x float> %349, float %346, i64 1
  %351 = insertelement <4 x float> %350, float %347, i64 2
  %352 = insertelement <4 x float> %351, float %348, i64 3
  %353 = fmul fast <4 x float> %352, <float -6.000000e+00, float -6.000000e+00, float -6.000000e+00, float -6.000000e+00>
  %354 = fmul fast <4 x float> %353, %322
  %355 = fpext <4 x float> %354 to <4 x double>
  %356 = call fast <4 x double> @llvm.exp2.v4f64(<4 x double> %355)
  %357 = fptrunc <4 x double> %356 to <4 x float>
  %358 = getelementptr inbounds [10 x float], ptr %21, i64 0, i64 %324
  store <4 x float> %357, ptr %358, align 16, !tbaa !79
  %359 = add nuw i64 %324, 4
  %360 = icmp eq i64 %359, %319
  br i1 %360, label %312, label %323, !llvm.loop !558

361:                                              ; preds = %373
  %362 = icmp ult i32 %303, 10
  br i1 %362, label %363, label %388

363:                                              ; preds = %297, %361
  %364 = phi i32 [ %303, %361 ], [ 0, %297 ]
  %365 = shl nuw i32 %364, 2
  %366 = zext i32 %365 to i64
  %367 = getelementptr i8, ptr %20, i64 %366
  %368 = sub nuw nsw i32 9, %364
  %369 = zext i32 %368 to i64
  %370 = shl nuw nsw i64 %369, 2
  %371 = add nuw nsw i64 %370, 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %367, i8 -1, i64 %371, i1 false), !tbaa !68
  %372 = getelementptr i8, ptr %21, i64 %366
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %372, i8 0, i64 %371, i1 false), !tbaa !79
  br label %388

373:                                              ; preds = %312, %373
  %374 = phi i64 [ %386, %373 ], [ %313, %312 ]
  %375 = getelementptr inbounds [10 x %struct.KDTreeNearest], ptr %19, i64 0, i64 %374
  %376 = load i32, ptr %375, align 4, !tbaa !557
  %377 = getelementptr inbounds [10 x i32], ptr %20, i64 0, i64 %374
  store i32 %376, ptr %377, align 4, !tbaa !68
  %378 = getelementptr inbounds [10 x %struct.KDTreeNearest], ptr %19, i64 0, i64 %374, i32 1
  %379 = load float, ptr %378, align 4, !tbaa !555
  %380 = fmul fast float %379, -6.000000e+00
  %381 = fmul fast float %380, %314
  %382 = fpext float %381 to double
  %383 = call fast double @llvm.exp2.f64(double %382)
  %384 = fptrunc double %383 to float
  %385 = getelementptr inbounds [10 x float], ptr %21, i64 0, i64 %374
  store float %384, ptr %385, align 4, !tbaa !79
  %386 = add nuw nsw i64 %374, 1
  %387 = icmp eq i64 %386, %310
  br i1 %387, label %361, label %373, !llvm.loop !559

388:                                              ; preds = %363, %361
  br i1 %304, label %389, label %393

389:                                              ; preds = %388
  %390 = zext i32 %303 to i64
  br label %430

391:                                              ; preds = %445
  %392 = icmp slt i32 %446, 4
  br i1 %392, label %393, label %459

393:                                              ; preds = %388, %391
  %394 = phi float [ %447, %391 ], [ 0.000000e+00, %388 ]
  %395 = phi i32 [ %446, %391 ], [ 0, %388 ]
  %396 = sext i32 %395 to i64
  %397 = add i32 %395, 1
  %398 = zext i32 %397 to i64
  %399 = sub nsw i64 5, %398
  %400 = icmp ult i64 %399, 32
  br i1 %400, label %428, label %401

401:                                              ; preds = %393
  %402 = add i32 %395, 1
  %403 = zext i32 %402 to i64
  %404 = sub nsw i64 4, %403
  %405 = trunc i64 %404 to i32
  %406 = sub i32 -2, %395
  %407 = icmp ult i32 %406, %405
  %408 = icmp ugt i64 %404, 4294967295
  %409 = or i1 %407, %408
  br i1 %409, label %428, label %410

410:                                              ; preds = %401
  %411 = and i64 %399, -32
  %412 = add nsw i64 %411, %396
  br label %413

413:                                              ; preds = %413, %410
  %414 = phi i64 [ 0, %410 ], [ %424, %413 ]
  %415 = add i64 %414, %396
  %416 = getelementptr inbounds %struct.ChildParticle, ptr %2, i64 0, i32 2, i64 %415
  store <8 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, ptr %416, align 4, !tbaa !68
  %417 = getelementptr inbounds i32, ptr %416, i64 8
  store <8 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, ptr %417, align 4, !tbaa !68
  %418 = getelementptr inbounds i32, ptr %416, i64 16
  store <8 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, ptr %418, align 4, !tbaa !68
  %419 = getelementptr inbounds i32, ptr %416, i64 24
  store <8 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, ptr %419, align 4, !tbaa !68
  %420 = getelementptr inbounds %struct.ChildParticle, ptr %2, i64 0, i32 3, i64 %415
  store <8 x float> zeroinitializer, ptr %420, align 4, !tbaa !79
  %421 = getelementptr inbounds float, ptr %420, i64 8
  store <8 x float> zeroinitializer, ptr %421, align 4, !tbaa !79
  %422 = getelementptr inbounds float, ptr %420, i64 16
  store <8 x float> zeroinitializer, ptr %422, align 4, !tbaa !79
  %423 = getelementptr inbounds float, ptr %420, i64 24
  store <8 x float> zeroinitializer, ptr %423, align 4, !tbaa !79
  %424 = add nuw i64 %414, 32
  %425 = icmp eq i64 %424, %411
  br i1 %425, label %426, label %413, !llvm.loop !560

426:                                              ; preds = %413
  %427 = icmp eq i64 %399, %411
  br i1 %427, label %459, label %428

428:                                              ; preds = %401, %393, %426
  %429 = phi i64 [ %396, %401 ], [ %396, %393 ], [ %412, %426 ]
  br label %452

430:                                              ; preds = %389, %445
  %431 = phi i64 [ 0, %389 ], [ %448, %445 ]
  %432 = phi float [ 0.000000e+00, %389 ], [ %447, %445 ]
  %433 = phi i32 [ 0, %389 ], [ %446, %445 ]
  %434 = getelementptr inbounds [10 x i32], ptr %20, i64 0, i64 %431
  %435 = load i32, ptr %434, align 4, !tbaa !68
  %436 = icmp sgt i32 %435, -1
  br i1 %436, label %437, label %445

437:                                              ; preds = %430
  %438 = sext i32 %433 to i64
  %439 = getelementptr inbounds %struct.ChildParticle, ptr %2, i64 0, i32 2, i64 %438
  store i32 %435, ptr %439, align 4, !tbaa !68
  %440 = getelementptr inbounds [10 x float], ptr %21, i64 0, i64 %431
  %441 = load float, ptr %440, align 4, !tbaa !79
  %442 = getelementptr inbounds %struct.ChildParticle, ptr %2, i64 0, i32 3, i64 %438
  store float %441, ptr %442, align 4, !tbaa !79
  %443 = fadd fast float %441, %432
  %444 = add nsw i32 %433, 1
  br label %445

445:                                              ; preds = %430, %437
  %446 = phi i32 [ %444, %437 ], [ %433, %430 ]
  %447 = phi float [ %443, %437 ], [ %432, %430 ]
  %448 = add nuw nsw i64 %431, 1
  %449 = icmp ult i64 %448, %390
  %450 = icmp slt i32 %446, 4
  %451 = select i1 %449, i1 %450, i1 false
  br i1 %451, label %430, label %391, !llvm.loop !561

452:                                              ; preds = %428, %452
  %453 = phi i64 [ %456, %452 ], [ %429, %428 ]
  %454 = getelementptr inbounds %struct.ChildParticle, ptr %2, i64 0, i32 2, i64 %453
  store i32 -1, ptr %454, align 4, !tbaa !68
  %455 = getelementptr inbounds %struct.ChildParticle, ptr %2, i64 0, i32 3, i64 %453
  store float 0.000000e+00, ptr %455, align 4, !tbaa !79
  %456 = add nsw i64 %453, 1
  %457 = and i64 %456, 4294967295
  %458 = icmp eq i64 %457, 4
  br i1 %458, label %459, label %452, !llvm.loop !562

459:                                              ; preds = %452, %426, %391
  %460 = phi float [ %447, %391 ], [ %394, %426 ], [ %394, %452 ]
  %461 = fcmp fast ogt float %460, 0.000000e+00
  br i1 %461, label %462, label %468

462:                                              ; preds = %459
  %463 = getelementptr inbounds %struct.ChildParticle, ptr %2, i64 0, i32 3, i64 0
  %464 = load <4 x float>, ptr %463, align 4, !tbaa !79
  %465 = insertelement <4 x float> poison, float %460, i64 0
  %466 = shufflevector <4 x float> %465, <4 x float> poison, <4 x i32> zeroinitializer
  %467 = fdiv fast <4 x float> %464, %466
  store <4 x float> %467, ptr %463, align 4, !tbaa !79
  br label %468

468:                                              ; preds = %462, %459
  %469 = getelementptr inbounds %struct.ChildParticle, ptr %2, i64 0, i32 2
  %470 = load i32, ptr %469, align 4, !tbaa !68
  %471 = getelementptr inbounds %struct.ChildParticle, ptr %2, i64 0, i32 1
  store i32 %470, ptr %471, align 4, !tbaa !401
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %21) #14
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %20) #14
  call void @llvm.lifetime.end.p0(i64 200, ptr nonnull %19) #14
  br label %483

472:                                              ; preds = %236, %246
  %473 = phi float [ %247, %246 ], [ %245, %236 ]
  %474 = load float, ptr %144, align 8, !tbaa !121
  %475 = fmul fast float %474, %473
  br label %476

476:                                              ; preds = %472, %233, %172
  %477 = phi float [ 0.000000e+00, %172 ], [ 0.000000e+00, %233 ], [ %475, %472 ]
  store float %477, ptr %144, align 8, !tbaa !121
  br label %478

478:                                              ; preds = %476, %141, %235
  br i1 %142, label %479, label %483

479:                                              ; preds = %248, %34, %478
  %480 = phi i32 [ %143, %478 ], [ 2, %34 ], [ 2, %248 ]
  %481 = getelementptr inbounds %struct.ParticleThread, ptr %0, i64 0, i32 1
  %482 = load ptr, ptr %481, align 8, !tbaa !110
  call void @BLI_rng_skip(ptr noundef %482, i32 noundef %480) #14
  br label %483

483:                                              ; preds = %468, %290, %257, %478, %479
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %17) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %16) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %15) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %14) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %13) #14
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @psys_uv_to_w(float noundef nofpclass(nan inf) %0, float noundef nofpclass(nan inf) %1, i32 noundef %2, ptr noundef %3) unnamed_addr #2 {
  %5 = alloca [4 x [3 x float]], align 16
  %6 = alloca [3 x float], align 4
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %5) #14
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #14
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %8, label %19

8:                                                ; preds = %4
  %9 = fadd fast float %1, %0
  %10 = fcmp fast ogt float %9, 1.000000e+00
  %11 = fsub fast float 1.000000e+00, %1
  %12 = fsub fast float 1.000000e+00, %0
  %13 = select i1 %10, float %11, float %1
  %14 = select i1 %10, float %0, float %12
  store <8 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %5, align 16, !tbaa !79
  %15 = getelementptr inbounds [4 x [3 x float]], ptr %5, i64 0, i64 2, i64 2
  store float 0.000000e+00, ptr %15, align 16, !tbaa !79
  store float %14, ptr %6, align 4, !tbaa !79
  %16 = getelementptr inbounds [3 x float], ptr %6, i64 0, i64 1
  store float %13, ptr %16, align 4, !tbaa !79
  %17 = getelementptr inbounds [3 x float], ptr %6, i64 0, i64 2
  store float 0.000000e+00, ptr %17, align 4, !tbaa !79
  call void @interp_weights_poly_v3(ptr noundef %3, ptr noundef nonnull %5, i32 noundef 3, ptr noundef nonnull %6) #14
  %18 = getelementptr inbounds float, ptr %3, i64 3
  store float 0.000000e+00, ptr %18, align 4, !tbaa !79
  br label %25

19:                                               ; preds = %4
  store <8 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %5, align 16, !tbaa !79
  %20 = getelementptr inbounds [4 x [3 x float]], ptr %5, i64 0, i64 2, i64 2
  store float 0.000000e+00, ptr %20, align 16, !tbaa !79
  store float %0, ptr %6, align 4, !tbaa !79
  %21 = getelementptr inbounds [3 x float], ptr %6, i64 0, i64 1
  store float %1, ptr %21, align 4, !tbaa !79
  %22 = getelementptr inbounds [3 x float], ptr %6, i64 0, i64 2
  store float 0.000000e+00, ptr %22, align 4, !tbaa !79
  %23 = getelementptr inbounds [4 x [3 x float]], ptr %5, i64 0, i64 3
  store <2 x float> <float 0.000000e+00, float 1.000000e+00>, ptr %23, align 4, !tbaa !79
  %24 = getelementptr inbounds [4 x [3 x float]], ptr %5, i64 0, i64 3, i64 2
  store float 0.000000e+00, ptr %24, align 4, !tbaa !79
  call void @interp_weights_poly_v3(ptr noundef %3, ptr noundef nonnull %5, i32 noundef 4, ptr noundef nonnull %6) #14
  br label %25

25:                                               ; preds = %8, %19
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #14
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %5) #14
  ret void
}

declare void @psys_interpolate_face(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare zeroext i8 @isect_line_tri_v3(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare i32 @BLI_kdtree_find_nearest_n__normal(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @interp_weights_poly_v3(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare i32 @psys_get_particle_state(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @psys_find_parents(ptr noundef) local_unnamed_addr #3

declare i32 @psys_in_edit_mode(ptr noundef, ptr noundef) local_unnamed_addr #3

declare ptr @modifiers_findByType(ptr noundef, i32 noundef) local_unnamed_addr #3

declare void @psys_cache_paths(ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #3

declare void @psys_cache_child_paths(ptr noundef, float noundef nofpclass(nan inf), i32 noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i64 @fwrite(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #12

; Function Attrs: nofree nounwind
declare noundef i32 @puts(ptr nocapture noundef readonly) local_unnamed_addr #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #13

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #13

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.ceil.f32(float) #13

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.floor.f32(float) #13

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.exp2.f64(double) #13

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.minnum.f32(float, float) #13

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.maxnum.f32(float, float) #13

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.sqrt.v2f32(<2 x float>) #13

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #13

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.vector.reduce.fadd.v8f32(float, <8 x float>) #13

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.floor.v2f32(<2 x float>) #13

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x i32> @llvm.smax.v2i32(<2 x i32>, <2 x i32>) #13

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #13

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x double> @llvm.exp2.v4f64(<4 x double>) #13

attributes #0 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #3 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #4 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #6 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #7 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #8 = { mustprogress nofree nosync nounwind sspstrong willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #9 = { mustprogress nofree nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #10 = { mustprogress nofree nosync nounwind willreturn memory(none) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #11 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #12 = { nofree nounwind }
attributes #13 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #14 = { nounwind }
attributes #15 = { cold }
attributes #16 = { nounwind willreturn memory(none) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !7, i64 16}
!6 = !{!"ParticleSystem", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !10, i64 72, !10, i64 88, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !10, i64 152, !8, i64 168, !8, i64 232, !11, i64 296, !11, i64 300, !11, i64 304, !12, i64 308, !12, i64 312, !12, i64 316, !12, i64 320, !12, i64 324, !12, i64 328, !12, i64 332, !12, i64 336, !13, i64 340, !13, i64 342, !13, i64 344, !13, i64 346, !8, i64 348, !8, i64 540, !13, i64 564, !13, i64 566, !7, i64 568, !7, i64 576, !10, i64 584, !7, i64 600, !7, i64 608, !12, i64 616, !12, i64 620, !7, i64 624, !7, i64 632, !7, i64 640, !11, i64 648, !11, i64 652}
!7 = !{!"any pointer", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!"ListBase", !7, i64 0, !7, i64 8}
!11 = !{!"float", !8, i64 0}
!12 = !{!"int", !8, i64 0}
!13 = !{!"short", !8, i64 0}
!14 = !{!6, !7, i64 568}
!15 = !{!6, !7, i64 576}
!16 = !{!17, !12, i64 16}
!17 = !{!"PointCache", !7, i64 0, !7, i64 8, !12, i64 16, !12, i64 20, !12, i64 24, !12, i64 28, !12, i64 32, !12, i64 36, !12, i64 40, !12, i64 44, !12, i64 48, !12, i64 52, !12, i64 56, !13, i64 60, !13, i64 62, !8, i64 64, !8, i64 128, !8, i64 192, !8, i64 256, !7, i64 1280, !10, i64 1288, !7, i64 1304, !7, i64 1312}
!18 = !{!19, !13, i64 160}
!19 = !{!"ParticleSettings", !20, i64 0, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !12, i64 152, !12, i64 156, !13, i64 160, !13, i64 162, !13, i64 164, !13, i64 166, !13, i64 168, !13, i64 170, !13, i64 172, !13, i64 174, !12, i64 176, !12, i64 180, !13, i64 184, !13, i64 186, !13, i64 188, !13, i64 190, !13, i64 192, !13, i64 194, !13, i64 196, !13, i64 198, !13, i64 200, !13, i64 202, !13, i64 204, !13, i64 206, !13, i64 208, !13, i64 210, !13, i64 212, !13, i64 214, !13, i64 216, !13, i64 218, !13, i64 220, !13, i64 222, !13, i64 224, !13, i64 226, !13, i64 228, !13, i64 230, !11, i64 232, !11, i64 236, !8, i64 240, !8, i64 248, !11, i64 256, !11, i64 260, !11, i64 264, !13, i64 268, !13, i64 270, !11, i64 272, !11, i64 276, !11, i64 280, !11, i64 284, !11, i64 288, !11, i64 292, !11, i64 296, !11, i64 300, !11, i64 304, !11, i64 308, !11, i64 312, !11, i64 316, !8, i64 320, !12, i64 324, !12, i64 328, !12, i64 332, !12, i64 336, !13, i64 340, !8, i64 342, !11, i64 348, !11, i64 352, !11, i64 356, !11, i64 360, !11, i64 364, !11, i64 368, !11, i64 372, !8, i64 376, !11, i64 388, !11, i64 392, !11, i64 396, !11, i64 400, !11, i64 404, !11, i64 408, !11, i64 412, !8, i64 416, !11, i64 428, !11, i64 432, !11, i64 436, !11, i64 440, !12, i64 444, !12, i64 448, !11, i64 452, !11, i64 456, !11, i64 460, !11, i64 464, !11, i64 468, !11, i64 472, !11, i64 476, !11, i64 480, !11, i64 484, !11, i64 488, !11, i64 492, !11, i64 496, !11, i64 500, !11, i64 504, !11, i64 508, !11, i64 512, !11, i64 516, !11, i64 520, !11, i64 524, !11, i64 528, !11, i64 532, !11, i64 536, !11, i64 540, !11, i64 544, !11, i64 548, !8, i64 552, !11, i64 560, !11, i64 564, !12, i64 568, !12, i64 572, !8, i64 576, !7, i64 720, !10, i64 728, !7, i64 744, !7, i64 752, !7, i64 760, !7, i64 768, !7, i64 776, !7, i64 784, !13, i64 792, !8, i64 794}
!20 = !{!"ID", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !8, i64 32, !13, i64 98, !12, i64 100, !12, i64 104, !12, i64 108, !7, i64 112}
!21 = !{!6, !12, i64 316}
!22 = !{!19, !13, i64 168}
!23 = !{!19, !12, i64 444}
!24 = !{!19, !13, i64 188}
!25 = !{!19, !13, i64 210}
!26 = !{!6, !12, i64 320}
!27 = !{!19, !13, i64 164}
!28 = !{!19, !13, i64 162}
!29 = !{!19, !12, i64 332}
!30 = !{!19, !12, i64 324}
!31 = !{!6, !12, i64 324}
!32 = !{!6, !13, i64 344}
!33 = !{!6, !7, i64 40}
!34 = !{!6, !7, i64 48}
!35 = !{!6, !7, i64 24}
!36 = !{!37, !13, i64 196}
!37 = !{!"ParticleData", !38, i64 0, !38, i64 56, !7, i64 112, !7, i64 120, !7, i64 128, !12, i64 136, !11, i64 140, !11, i64 144, !11, i64 148, !12, i64 152, !12, i64 156, !8, i64 160, !11, i64 176, !11, i64 180, !11, i64 184, !12, i64 188, !12, i64 192, !13, i64 196, !13, i64 198}
!38 = !{!"ParticleKey", !8, i64 0, !8, i64 12, !8, i64 24, !8, i64 40, !11, i64 52}
!39 = distinct !{!39, !40}
!40 = !{!"llvm.loop.mustprogress"}
!41 = distinct !{!41, !42}
!42 = !{!"llvm.loop.unroll.disable"}
!43 = !{!6, !7, i64 32}
!44 = !{!7, !7, i64 0}
!45 = !{!6, !12, i64 328}
!46 = !{!6, !7, i64 608}
!47 = !{!6, !12, i64 620}
!48 = !{!6, !12, i64 616}
!49 = !{!50, !7, i64 296}
!50 = !{!"Object", !20, i64 0, !7, i64 120, !7, i64 128, !13, i64 136, !13, i64 138, !12, i64 140, !12, i64 144, !12, i64 148, !8, i64 152, !7, i64 216, !7, i64 224, !7, i64 232, !7, i64 240, !7, i64 248, !7, i64 256, !7, i64 264, !7, i64 272, !7, i64 280, !7, i64 288, !7, i64 296, !7, i64 304, !51, i64 312, !7, i64 360, !10, i64 368, !10, i64 384, !10, i64 400, !10, i64 416, !12, i64 432, !12, i64 436, !7, i64 440, !7, i64 448, !12, i64 456, !12, i64 460, !8, i64 464, !8, i64 476, !8, i64 488, !8, i64 500, !8, i64 512, !8, i64 524, !8, i64 536, !8, i64 548, !8, i64 560, !8, i64 576, !8, i64 592, !8, i64 604, !11, i64 616, !11, i64 620, !8, i64 624, !8, i64 688, !8, i64 752, !8, i64 816, !8, i64 880, !12, i64 944, !13, i64 948, !13, i64 950, !13, i64 952, !13, i64 954, !13, i64 956, !13, i64 958, !13, i64 960, !13, i64 962, !13, i64 964, !8, i64 966, !8, i64 967, !12, i64 968, !12, i64 972, !12, i64 976, !12, i64 980, !12, i64 984, !11, i64 988, !11, i64 992, !11, i64 996, !11, i64 1000, !11, i64 1004, !11, i64 1008, !11, i64 1012, !11, i64 1016, !11, i64 1020, !11, i64 1024, !11, i64 1028, !11, i64 1032, !13, i64 1036, !13, i64 1038, !13, i64 1040, !8, i64 1042, !8, i64 1043, !13, i64 1044, !8, i64 1046, !8, i64 1047, !11, i64 1048, !11, i64 1052, !10, i64 1056, !10, i64 1072, !10, i64 1088, !10, i64 1104, !11, i64 1120, !13, i64 1124, !13, i64 1126, !8, i64 1128, !12, i64 1144, !12, i64 1148, !7, i64 1152, !8, i64 1160, !8, i64 1161, !13, i64 1162, !8, i64 1164, !10, i64 1176, !10, i64 1192, !10, i64 1208, !10, i64 1224, !7, i64 1240, !7, i64 1248, !7, i64 1256, !8, i64 1264, !8, i64 1265, !13, i64 1266, !11, i64 1268, !7, i64 1272, !7, i64 1280, !7, i64 1288, !7, i64 1296, !52, i64 1304, !52, i64 1312, !12, i64 1320, !12, i64 1324, !10, i64 1328, !10, i64 1344, !7, i64 1360, !7, i64 1368, !7, i64 1376, !8, i64 1384, !7, i64 1392, !10, i64 1400, !7, i64 1416}
!51 = !{!"bAnimVizSettings", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !13, i64 16, !13, i64 18, !13, i64 20, !13, i64 22, !13, i64 24, !13, i64 26, !13, i64 28, !13, i64 30, !12, i64 32, !12, i64 36, !12, i64 40, !12, i64 44}
!52 = !{!"long", !8, i64 0}
!53 = !{!19, !13, i64 792}
!54 = !{!55, !12, i64 1024}
!55 = !{!"DerivedMesh", !56, i64 0, !56, i64 200, !56, i64 400, !56, i64 600, !56, i64 800, !12, i64 1000, !12, i64 1004, !12, i64 1008, !12, i64 1012, !12, i64 1016, !12, i64 1020, !12, i64 1024, !7, i64 1032, !7, i64 1040, !8, i64 1048, !11, i64 1052, !8, i64 1056, !12, i64 1060, !7, i64 1064, !8, i64 1072, !7, i64 1080, !7, i64 1088, !7, i64 1096, !7, i64 1104, !7, i64 1112, !7, i64 1120, !7, i64 1128, !7, i64 1136, !7, i64 1144, !7, i64 1152, !7, i64 1160, !7, i64 1168, !7, i64 1176, !7, i64 1184, !7, i64 1192, !7, i64 1200, !7, i64 1208, !7, i64 1216, !7, i64 1224, !7, i64 1232, !7, i64 1240, !7, i64 1248, !7, i64 1256, !7, i64 1264, !7, i64 1272, !7, i64 1280, !7, i64 1288, !7, i64 1296, !7, i64 1304, !7, i64 1312, !7, i64 1320, !7, i64 1328, !7, i64 1336, !7, i64 1344, !7, i64 1352, !7, i64 1360, !7, i64 1368, !7, i64 1376, !7, i64 1384, !7, i64 1392, !7, i64 1400, !7, i64 1408, !7, i64 1416, !7, i64 1424, !7, i64 1432, !7, i64 1440, !7, i64 1448, !7, i64 1456, !7, i64 1464, !7, i64 1472, !7, i64 1480, !7, i64 1488, !7, i64 1496, !7, i64 1504, !7, i64 1512, !7, i64 1520, !7, i64 1528, !7, i64 1536, !7, i64 1544, !7, i64 1552, !7, i64 1560, !7, i64 1568, !7, i64 1576, !7, i64 1584, !7, i64 1592, !7, i64 1600, !7, i64 1608, !7, i64 1616, !7, i64 1624, !7, i64 1632, !7, i64 1640, !7, i64 1648, !7, i64 1656, !7, i64 1664, !7, i64 1672, !7, i64 1680}
!56 = !{!"CustomData", !7, i64 0, !8, i64 8, !12, i64 172, !12, i64 176, !12, i64 180, !7, i64 184, !7, i64 192}
!57 = !{!55, !7, i64 1104}
!58 = !{!59, !12, i64 1280}
!59 = !{!"Mesh", !20, i64 0, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192, !7, i64 200, !7, i64 208, !7, i64 216, !7, i64 224, !7, i64 232, !7, i64 240, !7, i64 248, !7, i64 256, !7, i64 264, !7, i64 272, !56, i64 280, !56, i64 480, !56, i64 680, !56, i64 880, !56, i64 1080, !12, i64 1280, !12, i64 1284, !12, i64 1288, !12, i64 1292, !12, i64 1296, !12, i64 1300, !12, i64 1304, !8, i64 1308, !8, i64 1320, !8, i64 1332, !12, i64 1344, !13, i64 1348, !13, i64 1350, !11, i64 1352, !12, i64 1356, !8, i64 1360, !8, i64 1361, !8, i64 1362, !8, i64 1363, !8, i64 1364, !8, i64 1365, !13, i64 1366, !7, i64 1368}
!60 = !{!55, !7, i64 1320}
!61 = !{!55, !7, i64 1120}
!62 = !{!59, !12, i64 1296}
!63 = !{!55, !7, i64 1336}
!64 = !{!55, !7, i64 1352}
!65 = !{!66, !7, i64 8}
!66 = !{!"LinkNode", !7, i64 0, !7, i64 8}
!67 = distinct !{!67, !40}
!68 = !{!12, !12, i64 0}
!69 = !{!66, !7, i64 0}
!70 = distinct !{!70, !42}
!71 = !{!37, !12, i64 152}
!72 = !{!37, !12, i64 156}
!73 = distinct !{!73, !40}
!74 = distinct !{!74, !40}
!75 = distinct !{!75, !42}
!76 = !{!77, !7, i64 0}
!77 = !{!"ParticleSimulationData", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !11, i64 40}
!78 = !{i64 0, i64 8, !44, i64 8, i64 8, !44, i64 16, i64 8, !44, i64 24, i64 8, !44, i64 32, i64 8, !44, i64 40, i64 4, !79}
!79 = !{!11, !11, i64 0}
!80 = !{!81, !7, i64 24}
!81 = !{!"ParticleThreadContext", !77, i64 0, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !12, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !11, i64 112, !7, i64 120, !7, i64 128, !12, i64 136, !12, i64 140, !12, i64 144, !12, i64 148, !7, i64 152, !12, i64 160, !12, i64 164, !12, i64 168, !12, i64 172, !12, i64 176, !12, i64 180, !11, i64 184, !7, i64 192, !7, i64 200, !7, i64 208, !7, i64 216, !7, i64 224, !7, i64 232, !7, i64 240}
!82 = !{!83, !7, i64 120}
!83 = !{!"ParticleSystemModifierData", !84, i64 0, !7, i64 112, !7, i64 120, !12, i64 128, !12, i64 132, !12, i64 136, !13, i64 140, !13, i64 142}
!84 = !{!"ModifierData", !7, i64 0, !7, i64 8, !12, i64 16, !12, i64 20, !12, i64 24, !12, i64 28, !8, i64 32, !7, i64 96, !7, i64 104}
!85 = !{!81, !7, i64 48}
!86 = !{!77, !7, i64 8}
!87 = !{!77, !7, i64 16}
!88 = !{!19, !13, i64 212}
!89 = !{!81, !7, i64 56}
!90 = !{!91, !7, i64 0}
!91 = !{!"ParticleThread", !7, i64 0, !7, i64 8, !7, i64 16, !12, i64 24, !12, i64 28}
!92 = !{!91, !12, i64 24}
!93 = !{!91, !12, i64 28}
!94 = distinct !{!94, !40}
!95 = !{!81, !7, i64 192}
!96 = !{!81, !7, i64 200}
!97 = !{!81, !7, i64 208}
!98 = !{!81, !7, i64 216}
!99 = !{!81, !7, i64 224}
!100 = !{!81, !7, i64 232}
!101 = !{!81, !7, i64 16}
!102 = !{!6, !7, i64 136}
!103 = !{!81, !7, i64 88}
!104 = !{!81, !7, i64 96}
!105 = !{!81, !7, i64 104}
!106 = !{!81, !7, i64 120}
!107 = !{!81, !7, i64 128}
!108 = !{!81, !7, i64 72}
!109 = !{!81, !7, i64 64}
!110 = !{!91, !7, i64 8}
!111 = !{!91, !7, i64 16}
!112 = distinct !{!112, !40}
!113 = !{!19, !11, i64 284}
!114 = !{!19, !11, i64 288}
!115 = !{!37, !11, i64 140}
!116 = !{!37, !12, i64 192}
!117 = !{!37, !7, i64 128}
!118 = !{!19, !11, i64 364}
!119 = !{!19, !13, i64 170}
!120 = !{!77, !7, i64 24}
!121 = !{!37, !11, i64 176}
!122 = !{!19, !11, i64 368}
!123 = !{!19, !11, i64 356}
!124 = !{!6, !12, i64 308}
!125 = !{!19, !13, i64 172}
!126 = !{!19, !11, i64 396}
!127 = !{!19, !11, i64 352}
!128 = !{!19, !11, i64 348}
!129 = !{!130, !11, i64 0}
!130 = !{!"ParticleTexture", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !11, i64 56}
!131 = !{!19, !11, i64 392}
!132 = !{!19, !11, i64 400}
!133 = !{!19, !11, i64 388}
!134 = !{!6, !11, i64 296}
!135 = !{!130, !11, i64 12}
!136 = !{!130, !11, i64 4}
!137 = !{!138, !12, i64 4628}
!138 = !{!"Scene", !20, i64 0, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !10, i64 152, !7, i64 168, !7, i64 176, !8, i64 184, !8, i64 196, !8, i64 208, !8, i64 220, !12, i64 232, !12, i64 236, !12, i64 240, !13, i64 244, !8, i64 246, !8, i64 247, !7, i64 248, !7, i64 256, !7, i64 264, !7, i64 272, !139, i64 280, !148, i64 4264, !10, i64 4296, !10, i64 4312, !7, i64 4328, !7, i64 4336, !7, i64 4344, !7, i64 4352, !7, i64 4360, !7, i64 4368, !13, i64 4376, !13, i64 4378, !12, i64 4380, !10, i64 4384, !149, i64 4400, !150, i64 4416, !153, i64 4600, !7, i64 4608, !154, i64 4616, !7, i64 4640, !52, i64 4648, !52, i64 4656, !141, i64 4664, !142, i64 4824, !155, i64 4888, !7, i64 4952}
!139 = !{!"RenderData", !140, i64 0, !7, i64 248, !7, i64 256, !143, i64 264, !144, i64 328, !12, i64 400, !12, i64 404, !12, i64 408, !11, i64 412, !12, i64 416, !12, i64 420, !12, i64 424, !12, i64 428, !13, i64 432, !13, i64 434, !11, i64 436, !11, i64 440, !11, i64 444, !11, i64 448, !11, i64 452, !13, i64 456, !13, i64 458, !13, i64 460, !13, i64 462, !13, i64 464, !13, i64 466, !12, i64 468, !13, i64 472, !13, i64 474, !13, i64 476, !13, i64 478, !13, i64 480, !13, i64 482, !12, i64 484, !12, i64 488, !13, i64 492, !13, i64 494, !12, i64 496, !12, i64 500, !13, i64 504, !13, i64 506, !13, i64 508, !13, i64 510, !13, i64 512, !8, i64 514, !8, i64 515, !12, i64 516, !12, i64 520, !12, i64 524, !13, i64 528, !13, i64 530, !13, i64 532, !13, i64 534, !13, i64 536, !13, i64 538, !13, i64 540, !13, i64 542, !145, i64 544, !145, i64 560, !146, i64 576, !10, i64 592, !13, i64 608, !13, i64 610, !11, i64 612, !11, i64 616, !11, i64 620, !11, i64 624, !12, i64 628, !11, i64 632, !11, i64 636, !11, i64 640, !11, i64 644, !13, i64 648, !13, i64 650, !13, i64 652, !13, i64 654, !13, i64 656, !13, i64 658, !11, i64 660, !11, i64 664, !13, i64 668, !13, i64 670, !11, i64 672, !11, i64 676, !8, i64 680, !12, i64 1704, !13, i64 1708, !13, i64 1710, !8, i64 1712, !8, i64 2480, !8, i64 2496, !8, i64 2512, !8, i64 2513, !8, i64 2514, !8, i64 2515, !12, i64 2520, !13, i64 2524, !13, i64 2526, !11, i64 2528, !11, i64 2532, !13, i64 2536, !13, i64 2538, !11, i64 2540, !13, i64 2544, !13, i64 2546, !12, i64 2548, !13, i64 2552, !13, i64 2554, !13, i64 2556, !13, i64 2558, !11, i64 2560, !11, i64 2564, !7, i64 2568, !12, i64 2576, !11, i64 2580, !8, i64 2584, !147, i64 2616, !12, i64 3976, !12, i64 3980}
!140 = !{!"ImageFormatData", !8, i64 0, !8, i64 1, !8, i64 2, !8, i64 3, !8, i64 4, !8, i64 5, !8, i64 6, !8, i64 7, !13, i64 8, !13, i64 10, !11, i64 12, !8, i64 16, !8, i64 17, !8, i64 18, !141, i64 24, !142, i64 184}
!141 = !{!"ColorManagedViewSettings", !12, i64 0, !12, i64 4, !8, i64 8, !8, i64 72, !11, i64 136, !11, i64 140, !7, i64 144, !7, i64 152}
!142 = !{!"ColorManagedDisplaySettings", !8, i64 0}
!143 = !{!"QuicktimeCodecSettings", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !12, i64 16, !12, i64 20, !12, i64 24, !12, i64 28, !12, i64 32, !12, i64 36, !12, i64 40, !12, i64 44, !13, i64 48, !13, i64 50, !12, i64 52, !12, i64 56, !12, i64 60}
!144 = !{!"FFMpegCodecData", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !12, i64 16, !12, i64 20, !12, i64 24, !12, i64 28, !11, i64 32, !12, i64 36, !12, i64 40, !12, i64 44, !12, i64 48, !12, i64 52, !12, i64 56, !12, i64 60, !7, i64 64}
!145 = !{!"rctf", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12}
!146 = !{!"rcti", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12}
!147 = !{!"BakeData", !140, i64 0, !8, i64 248, !13, i64 1272, !13, i64 1274, !13, i64 1276, !13, i64 1278, !11, i64 1280, !11, i64 1284, !8, i64 1288, !8, i64 1291, !8, i64 1292, !8, i64 1293, !8, i64 1296}
!148 = !{!"AudioData", !12, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !12, i64 16, !13, i64 20, !13, i64 22, !11, i64 24, !11, i64 28}
!149 = !{!"GameFraming", !8, i64 0, !8, i64 12, !8, i64 13, !8, i64 14, !8, i64 15}
!150 = !{!"GameData", !149, i64 0, !13, i64 16, !13, i64 18, !13, i64 20, !13, i64 22, !13, i64 24, !13, i64 26, !13, i64 28, !13, i64 30, !13, i64 32, !8, i64 34, !151, i64 40, !13, i64 64, !13, i64 66, !11, i64 68, !152, i64 72, !11, i64 128, !11, i64 132, !12, i64 136, !13, i64 140, !13, i64 142, !13, i64 144, !13, i64 146, !13, i64 148, !13, i64 150, !13, i64 152, !13, i64 154, !13, i64 156, !13, i64 158, !13, i64 160, !13, i64 162, !11, i64 164, !11, i64 168, !11, i64 172, !11, i64 176, !11, i64 180}
!151 = !{!"GameDome", !13, i64 0, !13, i64 2, !13, i64 4, !13, i64 6, !11, i64 8, !11, i64 12, !7, i64 16}
!152 = !{!"RecastData", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !12, i64 40, !11, i64 44, !11, i64 48, !13, i64 52, !13, i64 54}
!153 = !{!"UnitSettings", !11, i64 0, !8, i64 4, !8, i64 5, !13, i64 6}
!154 = !{!"PhysicsSettings", !8, i64 0, !12, i64 12, !12, i64 16, !12, i64 20}
!155 = !{!"ColorManagedColorspaceSettings", !8, i64 0}
!156 = !{!19, !7, i64 128}
!157 = !{!158, !11, i64 24}
!158 = !{!"BoidSettings", !12, i64 0, !12, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !11, i64 56, !11, i64 60, !11, i64 64, !11, i64 68, !11, i64 72, !11, i64 76, !11, i64 80, !11, i64 84, !10, i64 88}
!159 = !{!160, !11, i64 8}
!160 = !{!"BoidParticle", !7, i64 0, !161, i64 8, !8, i64 28, !8, i64 40, !11, i64 52}
!161 = !{!"BoidData", !11, i64 0, !8, i64 4, !13, i64 16, !13, i64 18}
!162 = !{!160, !13, i64 26}
!163 = !{!158, !7, i64 88}
!164 = !{!165, !12, i64 96}
!165 = !{!"BoidState", !7, i64 0, !7, i64 8, !10, i64 16, !10, i64 32, !10, i64 48, !8, i64 64, !12, i64 96, !12, i64 100, !12, i64 104, !11, i64 108, !12, i64 112, !12, i64 116, !11, i64 120, !11, i64 124}
!166 = !{!160, !13, i64 24}
!167 = !{!37, !11, i64 144}
!168 = !{!19, !11, i64 292}
!169 = !{!19, !11, i64 296}
!170 = !{!37, !11, i64 148}
!171 = !{!130, !11, i64 8}
!172 = !{!17, !7, i64 1288}
!173 = !{!37, !13, i64 198}
!174 = !{!37, !11, i64 52}
!175 = !{!50, !7, i64 216}
!176 = !{!50, !7, i64 120}
!177 = !{!178, !7, i64 16}
!178 = !{!"ParticleTarget", !7, i64 0, !7, i64 8, !7, i64 16, !12, i64 24, !13, i64 28, !13, i64 30, !11, i64 32, !11, i64 36}
!179 = !{!178, !12, i64 24}
!180 = !{!178, !13, i64 28}
!181 = !{!6, !7, i64 152}
!182 = !{!178, !11, i64 36}
!183 = !{!178, !7, i64 0}
!184 = distinct !{!184, !40}
!185 = !{!19, !12, i64 572}
!186 = !{!10, !7, i64 0}
!187 = !{!138, !12, i64 688}
!188 = !{!6, !7, i64 624}
!189 = !{!6, !11, i64 300}
!190 = distinct !{!190, !40}
!191 = distinct !{!191, !40}
!192 = !{!193, !7, i64 96}
!193 = !{!"SPHData", !8, i64 0, !7, i64 80, !11, i64 88, !7, i64 96, !7, i64 104, !11, i64 112, !12, i64 116, !11, i64 120, !8, i64 124, !7, i64 136, !7, i64 144}
!194 = !{!193, !7, i64 80}
!195 = !{!193, !11, i64 88}
!196 = !{!19, !7, i64 136}
!197 = !{!198, !13, i64 60}
!198 = !{!"SPHFluidSettings", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !12, i64 52, !12, i64 56, !13, i64 60, !8, i64 62}
!199 = !{!193, !7, i64 104}
!200 = !{!198, !11, i64 28}
!201 = !{!198, !11, i64 32}
!202 = !{!198, !12, i64 52}
!203 = !{!198, !11, i64 4}
!204 = !{!198, !11, i64 0}
!205 = !{!37, !11, i64 180}
!206 = !{!193, !11, i64 112}
!207 = !{!198, !11, i64 44}
!208 = !{!198, !11, i64 8}
!209 = !{!198, !11, i64 36}
!210 = !{!198, !11, i64 40}
!211 = !{!212, !7, i64 8200}
!212 = !{!"SPHRangeData", !8, i64 0, !12, i64 8192, !7, i64 8200, !7, i64 8208, !7, i64 8216, !11, i64 8224, !11, i64 8228, !11, i64 8232, !12, i64 8236}
!213 = !{!212, !11, i64 8224}
!214 = !{!212, !7, i64 8216}
!215 = !{!212, !11, i64 8228}
!216 = !{!212, !12, i64 8192}
!217 = !{!218, !7, i64 0}
!218 = !{!"SPHNeighbor", !7, i64 0, !12, i64 8}
!219 = !{!218, !12, i64 8}
!220 = !{!38, !11, i64 52}
!221 = !{!19, !11, i64 404}
!222 = !{!19, !12, i64 152}
!223 = !{!224, !11, i64 0}
!224 = !{!"ParticleSpring", !11, i64 0, !8, i64 4, !12, i64 12}
!225 = !{!198, !12, i64 56}
!226 = !{!37, !11, i64 108}
!227 = distinct !{!227, !40}
!228 = !{!198, !11, i64 48}
!229 = !{!193, !12, i64 116}
!230 = !{!19, !13, i64 340}
!231 = distinct !{!231, !40}
!232 = !{!193, !11, i64 120}
!233 = !{!212, !7, i64 8208}
!234 = !{!212, !11, i64 8232}
!235 = !{!212, !12, i64 8236}
!236 = !{!37, !11, i64 184}
!237 = distinct !{!237, !40}
!238 = !{!19, !11, i64 408}
!239 = !{!193, !7, i64 144}
!240 = !{!6, !7, i64 632}
!241 = !{!242, !7, i64 40}
!242 = !{!"ParticleCollision", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !11, i64 48, !11, i64 52, !11, i64 56, !11, i64 60, !11, i64 64, !11, i64 68, !12, i64 72, !243, i64 80, !11, i64 240, !11, i64 244, !11, i64 248, !11, i64 252, !8, i64 256, !8, i64 268, !8, i64 280, !8, i64 292, !8, i64 304, !11, i64 316, !12, i64 320}
!243 = !{!"ParticleCollisionElement", !8, i64 0, !8, i64 32, !8, i64 64, !8, i64 76, !8, i64 88, !8, i64 100, !8, i64 112, !8, i64 124, !8, i64 136, !12, i64 144, !12, i64 148, !13, i64 152, !13, i64 154}
!244 = !{!245, !7, i64 160}
!245 = !{!"CollisionModifierData", !84, i64 0, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !12, i64 168, !12, i64 172, !11, i64 176, !11, i64 180, !7, i64 184}
!246 = !{!245, !7, i64 112}
!247 = !{!245, !7, i64 152}
!248 = !{!249, !11, i64 28}
!249 = !{!"BVHTreeRayHit", !12, i64 0, !8, i64 4, !8, i64 16, !11, i64 28, !12, i64 32}
!250 = !{!242, !11, i64 68}
!251 = !{!252, !12, i64 0}
!252 = !{!"MFace", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !13, i64 16, !8, i64 18, !8, i64 19}
!253 = !{!252, !12, i64 4}
!254 = !{!252, !12, i64 8}
!255 = !{!252, !12, i64 12}
!256 = !{!243, !12, i64 144}
!257 = !{!243, !12, i64 148}
!258 = !{!242, !7, i64 8}
!259 = !{!242, !7, i64 0}
!260 = !{!242, !12, i64 228}
!261 = !{!242, !12, i64 224}
!262 = !{!263, !11, i64 24}
!263 = !{!"BVHTreeRay", !8, i64 0, !8, i64 12, !11, i64 24}
!264 = !{!243, !13, i64 154}
!265 = !{!242, !11, i64 244}
!266 = !{!242, !11, i64 48}
!267 = !{!242, !11, i64 52}
!268 = !{!242, !11, i64 56}
!269 = !{!243, !13, i64 152}
!270 = !{i64 0, i64 32, !271, i64 32, i64 32, !271, i64 64, i64 12, !271, i64 76, i64 12, !271, i64 88, i64 12, !271, i64 100, i64 12, !271, i64 112, i64 12, !271, i64 124, i64 12, !271, i64 136, i64 8, !271, i64 144, i64 4, !68, i64 148, i64 4, !68, i64 152, i64 2, !272, i64 154, i64 2, !272}
!271 = !{!8, !8, i64 0}
!272 = !{!13, !13, i64 0}
!273 = !{!242, !13, i64 234}
!274 = distinct !{!274, !40}
!275 = distinct !{!275, !40}
!276 = distinct !{!276, !40, !277}
!277 = !{!"llvm.loop.peeled.count", i32 2}
!278 = distinct !{!278, !40}
!279 = !{!249, !12, i64 0}
!280 = distinct !{!280, !40}
!281 = !{!19, !13, i64 192}
!282 = !{!19, !13, i64 184}
!283 = !{!19, !11, i64 560}
!284 = !{!19, !11, i64 564}
!285 = distinct !{!285, !40}
!286 = distinct !{!286, !40}
!287 = distinct !{!287, !42}
!288 = distinct !{!288, !42}
!289 = !{!6, !7, i64 640}
!290 = !{!291, !12, i64 76}
!291 = !{!"ParticleDrawData", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !12, i64 72, !12, i64 76, !12, i64 80, !12, i64 84}
!292 = !{!83, !13, i64 140}
!293 = !{!19, !7, i64 120}
!294 = !{!6, !13, i64 340}
!295 = !{!165, !7, i64 16}
!296 = !{!297, !12, i64 20}
!297 = !{!"BoidRule", !7, i64 0, !7, i64 8, !12, i64 16, !12, i64 20, !8, i64 24}
!298 = !{!165, !12, i64 100}
!299 = !{!198, !11, i64 16}
!300 = distinct !{!300, !42}
!301 = distinct !{!301, !42}
!302 = !{!303, !12, i64 308}
!303 = !{!"PTCacheEdit", !10, i64 0, !7, i64 16, !7, i64 24, !304, i64 32, !7, i64 232, !7, i64 240, !7, i64 248, !7, i64 256, !7, i64 264, !7, i64 272, !10, i64 280, !12, i64 296, !12, i64 300, !12, i64 304, !12, i64 308, !8, i64 312, !8, i64 315}
!304 = !{!"PTCacheID", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !12, i64 40, !12, i64 44, !12, i64 48, !12, i64 52, !12, i64 56, !12, i64 60, !12, i64 64, !7, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192}
!305 = !{!19, !13, i64 202}
!306 = !{!37, !12, i64 136}
!307 = !{!37, !7, i64 112}
!308 = !{!309, !11, i64 12}
!309 = !{!"HairKey", !8, i64 0, !11, i64 12, !11, i64 16, !13, i64 20, !13, i64 22}
!310 = !{!309, !11, i64 16}
!311 = distinct !{!311, !40}
!312 = distinct !{!312, !40}
!313 = !{!19, !11, i64 412}
!314 = distinct !{!314, !40}
!315 = !{!6, !7, i64 104}
!316 = !{!6, !7, i64 112}
!317 = !{!318, !7, i64 128}
!318 = !{!"ClothModifierData", !84, i64 0, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !10, i64 152}
!319 = !{!320, !11, i64 96}
!320 = !{!"ClothSimSettings", !7, i64 0, !11, i64 8, !11, i64 12, !11, i64 16, !8, i64 20, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !11, i64 56, !11, i64 60, !11, i64 64, !11, i64 68, !11, i64 72, !11, i64 76, !11, i64 80, !11, i64 84, !11, i64 88, !11, i64 92, !11, i64 96, !11, i64 100, !11, i64 104, !11, i64 108, !11, i64 112, !11, i64 116, !11, i64 120, !12, i64 124, !12, i64 128, !12, i64 132, !12, i64 136, !13, i64 140, !13, i64 142, !13, i64 144, !13, i64 146, !13, i64 148, !13, i64 150, !13, i64 152, !13, i64 154, !8, i64 156, !7, i64 160}
!321 = !{!320, !11, i64 112}
!322 = !{!320, !12, i64 128}
!323 = !{!318, !7, i64 136}
!324 = !{!325, !12, i64 32}
!325 = !{!"ClothCollSettings", !7, i64 0, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !12, i64 32, !13, i64 36, !13, i64 38, !7, i64 40, !13, i64 48, !13, i64 50, !12, i64 52}
!326 = distinct !{!326, !40, !327, !328}
!327 = !{!"llvm.loop.isvectorized", i32 1}
!328 = !{!"llvm.loop.unroll.runtime.disable"}
!329 = distinct !{!329, !40, !328, !327}
!330 = !{!55, !7, i64 1112}
!331 = !{!55, !7, i64 1680}
!332 = !{!320, !13, i64 144}
!333 = !{!334, !12, i64 0}
!334 = !{!"MEdge", !12, i64 0, !12, i64 4, !8, i64 8, !8, i64 9, !13, i64 10}
!335 = !{!334, !12, i64 4}
!336 = !{!337, !12, i64 8}
!337 = !{!"MDeformVert", !7, i64 0, !12, i64 8, !12, i64 12}
!338 = !{!337, !7, i64 0}
!339 = !{!340, !11, i64 4}
!340 = !{!"MDeformWeight", !12, i64 0, !11, i64 4}
!341 = distinct !{!341, !40, !342}
!342 = !{!"llvm.loop.peeled.count", i32 1}
!343 = distinct !{!343, !40}
!344 = !{!6, !7, i64 120}
!345 = !{!318, !7, i64 144}
!346 = !{!19, !7, i64 144}
!347 = !{!320, !7, i64 160}
!348 = !{!55, !7, i64 1536}
!349 = !{!6, !7, i64 600}
!350 = distinct !{!350, !40}
!351 = !{!37, !7, i64 120}
!352 = distinct !{!352, !40}
!353 = distinct !{!353, !42}
!354 = !{!178, !11, i64 32}
!355 = distinct !{!355, !40}
!356 = distinct !{!356, !40}
!357 = !{!304, !7, i64 176}
!358 = !{!17, !12, i64 52}
!359 = distinct !{!359, !40}
!360 = distinct !{!360, !42}
!361 = !{!17, !12, i64 24}
!362 = !{!17, !12, i64 40}
!363 = distinct !{!363, !40}
!364 = !{!6, !11, i64 648}
!365 = !{!19, !13, i64 194}
!366 = !{!77, !11, i64 40}
!367 = !{!130, !11, i64 16}
!368 = distinct !{!368, !40}
!369 = !{!77, !7, i64 32}
!370 = !{!371, !7, i64 0}
!371 = !{!"BoidBrainData", !7, i64 0, !7, i64 8, !11, i64 16, !11, i64 20, !11, i64 24, !8, i64 28, !11, i64 40, !7, i64 48, !8, i64 56, !8, i64 68, !11, i64 80, !7, i64 88}
!372 = !{!371, !7, i64 8}
!373 = !{!371, !11, i64 20}
!374 = !{!371, !11, i64 24}
!375 = !{!371, !11, i64 16}
!376 = !{!371, !7, i64 88}
!377 = distinct !{!377, !40}
!378 = distinct !{!378, !40}
!379 = !{!17, !12, i64 20}
!380 = distinct !{!380, !40}
!381 = distinct !{!381, !40}
!382 = !{!371, !7, i64 48}
!383 = distinct !{!383, !40}
!384 = !{!193, !7, i64 136}
!385 = distinct !{!385, !40}
!386 = !{!198, !11, i64 12}
!387 = !{!224, !12, i64 12}
!388 = distinct !{!388, !40}
!389 = !{i64 0, i64 4, !79, i64 4, i64 8, !271, i64 12, i64 4, !68}
!390 = distinct !{!390, !40}
!391 = distinct !{!391, !40}
!392 = distinct !{!392, !40}
!393 = distinct !{!393, !40}
!394 = distinct !{!394, !40}
!395 = !{!19, !11, i64 304}
!396 = distinct !{!396, !40}
!397 = distinct !{!397, !40, !398}
!398 = !{!"llvm.loop.unswitch.partial.disable"}
!399 = !{!81, !7, i64 8}
!400 = !{!6, !12, i64 312}
!401 = !{!402, !12, i64 4}
!402 = !{!"ChildParticle", !12, i64 0, !12, i64 4, !8, i64 8, !8, i64 24, !8, i64 40, !11, i64 56, !11, i64 60}
!403 = distinct !{!403, !40}
!404 = !{!402, !12, i64 0}
!405 = distinct !{!405, !40}
!406 = distinct !{!406, !40, !398}
!407 = distinct !{!407, !40}
!408 = distinct !{!408, !40}
!409 = distinct !{!409, !40}
!410 = distinct !{!410, !40}
!411 = distinct !{!411, !40}
!412 = distinct !{!412, !40}
!413 = distinct !{!413, !40}
!414 = distinct !{!414, !40}
!415 = distinct !{!415, !40}
!416 = distinct !{!416, !40}
!417 = distinct !{!417, !40}
!418 = distinct !{!418, !40}
!419 = distinct !{!419, !40}
!420 = distinct !{!420, !40}
!421 = distinct !{!421, !42}
!422 = distinct !{!422, !40}
!423 = distinct !{!423, !40}
!424 = !{!19, !11, i64 316}
!425 = distinct !{!425, !40}
!426 = distinct !{!426, !40}
!427 = distinct !{!427, !40}
!428 = distinct !{!428, !40}
!429 = distinct !{!429, !40}
!430 = distinct !{!430, !42}
!431 = distinct !{!431, !42}
!432 = !{!433, !12, i64 2100}
!433 = !{!"Global", !7, i64 0, !8, i64 8, !8, i64 1032, !8, i64 2056, !8, i64 2057, !8, i64 2058, !10, i64 2064, !8, i64 2080, !8, i64 2081, !8, i64 2082, !13, i64 2084, !13, i64 2086, !13, i64 2088, !8, i64 2090, !13, i64 2092, !12, i64 2096, !12, i64 2100, !8, i64 2104, !12, i64 2108, !12, i64 2112, !8, i64 2116}
!434 = !{!55, !7, i64 1304}
!435 = !{!55, !7, i64 1288}
!436 = distinct !{!436, !40}
!437 = distinct !{!437, !40, !327, !328}
!438 = distinct !{!438, !40, !328, !327}
!439 = distinct !{!439, !40, !327, !328}
!440 = distinct !{!440, !40, !328, !327}
!441 = !{!442}
!442 = distinct !{!442, !443}
!443 = distinct !{!443, !"LVerDomain"}
!444 = !{!445}
!445 = distinct !{!445, !443}
!446 = distinct !{!446, !40, !327, !328}
!447 = distinct !{!447, !42}
!448 = distinct !{!448, !40, !327}
!449 = distinct !{!449, !40}
!450 = distinct !{!450, !40, !327, !328}
!451 = distinct !{!451, !40, !328, !327}
!452 = distinct !{!452, !40}
!453 = distinct !{!453, !42}
!454 = !{!19, !13, i64 268}
!455 = distinct !{!455, !40}
!456 = distinct !{!456, !40}
!457 = distinct !{!457, !40}
!458 = distinct !{!458, !40}
!459 = !{!19, !11, i64 452}
!460 = !{!55, !12, i64 1000}
!461 = !{!55, !12, i64 1008}
!462 = !{!19, !12, i64 328}
!463 = !{!19, !11, i64 308}
!464 = distinct !{!464, !40}
!465 = distinct !{!465, !40}
!466 = distinct !{!466, !40}
!467 = !{!81, !12, i64 80}
!468 = !{!81, !12, i64 136}
!469 = !{!81, !11, i64 112}
!470 = !{!81, !12, i64 140}
!471 = !{!81, !12, i64 144}
!472 = !{!81, !12, i64 148}
!473 = !{!81, !7, i64 152}
!474 = distinct !{!474, !40}
!475 = distinct !{!475, !40}
!476 = distinct !{!476, !42}
!477 = distinct !{!477, !42}
!478 = distinct !{!478, !42}
!479 = distinct !{!479, !40}
!480 = distinct !{!480, !40}
!481 = distinct !{!481, !40}
!482 = distinct !{!482, !40}
!483 = distinct !{!483, !42}
!484 = !{!138, !7, i64 264}
!485 = !{!50, !12, i64 432}
!486 = !{!487, !13, i64 0}
!487 = !{!"ParticleEditSettings", !13, i64 0, !13, i64 2, !13, i64 4, !13, i64 6, !8, i64 8, !7, i64 120, !11, i64 128, !11, i64 132, !12, i64 136, !12, i64 140, !12, i64 144, !12, i64 148, !7, i64 152, !7, i64 160}
!488 = !{!489, !7, i64 32}
!489 = !{!"Base", !7, i64 0, !7, i64 8, !12, i64 16, !12, i64 20, !12, i64 24, !13, i64 28, !13, i64 30, !7, i64 32}
!490 = !{!491, !13, i64 122}
!491 = !{!"ParticleInstanceModifierData", !84, i64 0, !7, i64 112, !13, i64 120, !13, i64 122, !13, i64 124, !13, i64 126, !11, i64 128, !11, i64 132}
!492 = !{!491, !7, i64 112}
!493 = !{!491, !13, i64 120}
!494 = !{!50, !7, i64 1224}
!495 = distinct !{!495, !40}
!496 = !{!6, !7, i64 56}
!497 = distinct !{!497, !40}
!498 = !{!6, !11, i64 304}
!499 = distinct !{!499, !40, !327, !328}
!500 = distinct !{!500, !40, !328, !327}
!501 = distinct !{!501, !40}
!502 = !{!503, !7, i64 72}
!503 = !{!"EfData", !130, i64 0, !7, i64 64, !7, i64 72}
!504 = !{!503, !7, i64 64}
!505 = !{!506, !13, i64 68}
!506 = !{!"EffectorWeights", !7, i64 0, !8, i64 8, !11, i64 64, !13, i64 68, !8, i64 70, !12, i64 76}
!507 = !{!506, !11, i64 64}
!508 = !{!503, !11, i64 24}
!509 = !{!19, !11, i64 436}
!510 = !{!503, !11, i64 20}
!511 = !{!242, !11, i64 240}
!512 = !{!242, !11, i64 60}
!513 = !{!242, !11, i64 64}
!514 = !{!242, !11, i64 252}
!515 = !{!158, !12, i64 0}
!516 = !{!242, !12, i64 320}
!517 = !{!242, !11, i64 316}
!518 = !{!160, !7, i64 0}
!519 = !{!242, !7, i64 24}
!520 = !{!521, !7, i64 16}
!521 = !{!"ColliderCache", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24}
!522 = !{!242, !7, i64 32}
!523 = !{!521, !7, i64 24}
!524 = !{!245, !11, i64 176}
!525 = !{!245, !11, i64 180}
!526 = !{!245, !7, i64 184}
!527 = distinct !{!527, !40}
!528 = !{!242, !11, i64 248}
!529 = !{!50, !7, i64 1240}
!530 = !{!531, !11, i64 68}
!531 = !{!"PartDeflect", !12, i64 0, !13, i64 4, !13, i64 6, !13, i64 8, !13, i64 10, !13, i64 12, !13, i64 14, !13, i64 16, !13, i64 18, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !11, i64 56, !11, i64 60, !11, i64 64, !11, i64 68, !11, i64 72, !11, i64 76, !11, i64 80, !11, i64 84, !11, i64 88, !11, i64 92, !11, i64 96, !11, i64 100, !11, i64 104, !11, i64 108, !11, i64 112, !11, i64 116, !11, i64 120, !11, i64 124, !7, i64 128, !7, i64 136, !11, i64 144, !12, i64 148, !7, i64 152}
!532 = !{!531, !12, i64 0}
!533 = !{!531, !11, i64 60}
!534 = !{!531, !11, i64 64}
!535 = !{!531, !11, i64 72}
!536 = !{!531, !11, i64 76}
!537 = !{!531, !11, i64 80}
!538 = !{!242, !7, i64 16}
!539 = !{!242, !12, i64 72}
!540 = distinct !{!540, !40}
!541 = !{!19, !13, i64 216}
!542 = distinct !{!542, !40}
!543 = distinct !{!543, !40}
!544 = !{!503, !11, i64 28}
!545 = !{!19, !11, i64 428}
!546 = !{!19, !11, i64 432}
!547 = distinct !{!547, !40}
!548 = distinct !{!548, !40}
!549 = distinct !{!549, !40}
!550 = distinct !{!550, !42}
!551 = distinct !{!551, !40}
!552 = distinct !{!552, !40}
!553 = distinct !{!553, !40}
!554 = !{!402, !11, i64 56}
!555 = !{!556, !11, i64 4}
!556 = !{!"KDTreeNearest", !12, i64 0, !11, i64 4, !8, i64 8}
!557 = !{!556, !12, i64 0}
!558 = distinct !{!558, !40, !327, !328}
!559 = distinct !{!559, !40, !328, !327}
!560 = distinct !{!560, !40, !327, !328}
!561 = distinct !{!561, !40}
!562 = distinct !{!562, !40, !327}
